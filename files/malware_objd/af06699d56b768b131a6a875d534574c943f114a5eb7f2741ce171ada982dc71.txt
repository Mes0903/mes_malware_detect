
af06699d56b768b131a6a875d534574c943f114a5eb7f2741ce171ada982dc71.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a723
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429897
  401084:	mov    ecx,DWORD PTR ds:0x429fe3
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a72b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429ff3
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a72f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429fef
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a733
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a737
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a73f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a743
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a747
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0xaa7f92fe
  40178d:	das    
  40178e:	fld    QWORD PTR [ebx-0x107c7c7d]
  401794:	pop    esp
  401795:	add    DWORD PTR [ebx+0x3e242d2a],0x26
  40179c:	cmp    ah,BYTE PTR [eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x765c7776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x23],ebx
  40183b:	mov    ecx,0x589a212b
  401840:	(bad)  
  401842:	adc    al,0x32
  401844:	pop    ecx
  401845:	leave  
  401846:	jmp    0x2577fe20
  40184b:	dec    edx
  40184c:	xor    BYTE PTR [edi],0x15
  40184f:	inc    ebx
  401850:	mov    ch,0xa9
  401852:	nop
  401853:	xchg   ebx,eax
  401854:	(bad)  
  401855:	cli    
  401856:	pop    ds
  401857:	mov    ebx,DWORD PTR fs:[esi-0x243552c0]
  40185e:	xor    al,0xbf
  401860:	pop    ebp
  401861:	mov    bh,0xf0
  401863:	std    
  401864:	stos   BYTE PTR es:[edi],al
  401865:	inc    ebx
  401866:	and    ebx,DWORD PTR [edx+0xf]
  401869:	fs mov ch,0xb1
  40186c:	push   0x44cf8062
  401871:	aam    0xd2
  401873:	imul   ebx,DWORD PTR [eax+edx*8],0xffffffe0
  401877:	fisttp WORD PTR [eax-0x6191a767]
  40187d:	push   0x2f
  40187f:	and    eax,0x63a99eb4
  401884:	mov    ds:0xab6ae762,eax
  401889:	add    eax,0x6336ddec
  40188e:	dec    esi
  40188f:	sbb    bl,BYTE PTR [edi+0x22]
  401892:	xchg   DWORD PTR [edi-0x725f183],esi
  401898:	cdq    
  401899:	ror    BYTE PTR [edx+0x5a],0x87
  40189d:	sbb    dh,0xdb
  4018a0:	out    dx,al
  4018a1:	mov    cl,0x1a
  4018a3:	retf   0xb234
  4018a6:	ins    BYTE PTR es:[edi],dx
  4018a7:	xor    ebx,DWORD PTR [edi]
  4018a9:	jle    0x401894
  4018ab:	ins    DWORD PTR es:[edi],dx
  4018ac:	mov    esp,0xa4b943d0
  4018b1:	loopne 0x4018a5
  4018b3:	fwait
  4018b4:	std    
  4018b5:	add    eax,0xa105e593
  4018ba:	repnz bound edx,QWORD PTR [eax]
  4018bd:	scas   al,BYTE PTR es:[edi]
  4018be:	lock rcr DWORD PTR [eax],1
  4018c1:	dec    ebp
  4018c2:	rol    BYTE PTR [edi],cl
  4018c4:	xlat   BYTE PTR ds:[ebx]
  4018c5:	clc    
  4018c6:	int3   
  4018c7:	xchg   ebp,eax
  4018c8:	and    al,0xef
  4018ca:	sbb    DWORD PTR [edi+edi*4-0x11],eax
  4018ce:	lock sub BYTE PTR [ebx],ah
  4018d1:	repnz mov cl,0x35
  4018d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018d5:	(bad)  
  4018d6:	mov    ds,WORD PTR [esi-0x35]
  4018d9:	inc    edi
  4018da:	ret    0xdca0
  4018dd:	pop    edi
  4018de:	lock and eax,0x39345fec
  4018e4:	dec    edi
  4018e5:	dec    esp
  4018e6:	(bad)  
  4018e7:	int    0x6a
  4018e9:	iret   
  4018ea:	cwde   
  4018eb:	fisttp WORD PTR [ebx+0xb]
  4018ee:	mov    dl,0x25
  4018f0:	in     eax,0xbb
  4018f2:	xlat   BYTE PTR ds:[ebx]
  4018f3:	shl    BYTE PTR [esi-0x2d],1
  4018f6:	ror    DWORD PTR [ecx-0x11],cl
  4018f9:	popf   
  4018fa:	and    eax,0x77442c33
  4018ff:	dec    edx
  401900:	xlat   BYTE PTR ds:[ebx]
  401901:	pop    eax
  401902:	xor    eax,0xee8a771a
  401907:	rcr    DWORD PTR [esi-0xf],1
  40190a:	popa   
  40190b:	adc    esp,DWORD PTR [ebp+0x1a43fe56]
  401911:	fdiv   DWORD PTR [esi]
  401913:	outs   dx,DWORD PTR ds:[esi]
  401914:	adc    eax,0x8956ebfa
  401919:	mov    dl,0x5d
  40191b:	push   0xffffffbc
  40191d:	inc    esi
  40191e:	jge    0x4018a1
  401920:	sbb    DWORD PTR [edx+0x6c],ebp
  401923:	inc    eax
  401924:	rol    BYTE PTR [esi+esi*4-0x5a6f6084],1
  40192b:	aam    0xb3
  40192d:	ror    ecx,1
  40192f:	mov    ds:0x9018bbbb,al
  401934:	add    eax,0xd3027ad5
  401939:	push   ebx
  40193a:	mov    DWORD PTR [ebp+0x6a],ecx
  40193d:	fbstp  TBYTE PTR [esp+ecx*2+0x68]
  401941:	adc    esp,edx
  401943:	dec    esi
  401944:	outs   dx,BYTE PTR ds:[esi]
  401945:	std    
  401946:	jmp    0x40192e
  401948:	jge    0x4018d4
  40194a:	repz das 
  40194c:	add    ecx,ebp
  40194e:	jne    0x40191f
  401950:	(bad)  
  401951:	pop    esi
  401952:	les    edx,FWORD PTR [ecx]
  401954:	pusha  
  401955:	and    dh,BYTE PTR [esp+ebx*2]
  401958:	in     eax,dx
  401959:	mov    bl,0x1d
  40195b:	stc    
  40195c:	sbb    ecx,DWORD PTR [ecx+ecx*2+0x5150805]
  401963:	add    eax,0xeef0dd07
  401968:	sbb    DWORD PTR [eax+0x4dc2814a],ecx
  40196e:	dec    ebx
  40196f:	and    al,0x23
  401971:	rcl    bh,cl
  401973:	push   ebp
  401974:	inc    ecx
  401975:	mov    al,ds:0x419386f8
  40197a:	mov    esp,edx
  40197c:	(bad)  [edx+0x4d]
  40197f:	sub    DWORD PTR [ebp-0x5c85a092],eax
  401985:	daa    
  401986:	mov    ebp,0xb66dc499
  40198b:	xor    ch,BYTE PTR [edx-0x72]
  40198e:	xor    DWORD PTR [esi],0x9de9afe
  401994:	mov    eax,0xa29336a5
  401999:	sbb    ah,0xcf
  40199c:	(bad)  
  40199d:	shl    BYTE PTR [esp+esi*8-0x7595b69c],0x14
  4019a5:	test   eax,0x7a6ebe0c
  4019aa:	not    ch
  4019ac:	push   ebx
  4019ad:	cmp    ebx,eax
  4019af:	sub    esi,DWORD PTR ds:0x3b81e320
  4019b5:	dec    eax
  4019b6:	jae    0x401a27
  4019b8:	(bad)  
  4019b9:	push   0x60b6d859
  4019be:	dec    ebp
  4019bf:	(bad)  
  4019c0:	fnstcw WORD PTR [eax+0x5384a071]
  4019c6:	std    
  4019c7:	lahf   
  4019c8:	stc    
  4019c9:	xchg   ebx,eax
  4019ca:	or     BYTE PTR [ebx],bl
  4019cc:	ret    
  4019cd:	mov    al,0xa1
  4019cf:	pusha  
  4019d0:	addr16 inc esi
  4019d2:	mov    eax,0xb0c9dff9
  4019d7:	jmp    0xf0eba5ae
  4019dc:	sub    ecx,edx
  4019de:	push   edi
  4019df:	xchg   esp,eax
  4019e0:	out    0x1a,al
  4019e2:	xor    al,0xf2
  4019e4:	or     DWORD PTR [eax-0x13],eax
  4019e7:	scas   eax,DWORD PTR es:[edi]
  4019e8:	sub    BYTE PTR [edi],0x10
  4019eb:	mov    bh,0x42
  4019ed:	test   al,0x2
  4019ef:	fisttp QWORD PTR [ecx]
  4019f1:	int    0x16
  4019f3:	daa    
  4019f4:	jmp    0xd128bc56
  4019f9:	adc    eax,0xef549dc
  4019fe:	lods   eax,DWORD PTR ds:[esi]
  4019ff:	cmp    bh,BYTE PTR [edx+0x1d010745]
  401a05:	xor    DWORD PTR [edx],esi
  401a07:	pop    es
  401a08:	pop    edx
  401a09:	outs   dx,DWORD PTR ds:[esi]
  401a0a:	inc    ebp
  401a0b:	jbe    0x4019ff
  401a0d:	mov    edx,DWORD PTR [edi+0x5e]
  401a10:	xor    eax,0x92cedd61
  401a15:	push   eax
  401a16:	jmp    0x9e91f248
  401a1b:	outs   dx,DWORD PTR ds:[esi]
  401a1c:	adc    eax,0xf0b80893
  401a21:	mov    edi,esi
  401a23:	in     al,dx
  401a24:	add    DWORD PTR [eax],edx
  401a26:	ins    DWORD PTR es:[edi],dx
  401a27:	or     ecx,edi
  401a29:	xor    al,0xe1
  401a2b:	scas   eax,DWORD PTR es:[edi]
  401a2c:	nop
  401a2d:	pop    ds
  401a2e:	jmp    0x4019e8
  401a30:	lock push edi
  401a32:	out    0x71,al
  401a34:	xchg   ebx,eax
  401a35:	mov    eax,0x66155cfc
  401a3a:	enter  0xc7fc,0x95
  401a3e:	inc    eax
  401a3f:	inc    ecx
  401a40:	xor    dl,bl
  401a42:	fisub  WORD PTR [edx-0x4c88dd42]
  401a48:	mov    edx,0x797c1274
  401a4d:	cdq    
  401a4e:	test   BYTE PTR [edx+0xc],dh
  401a51:	in     al,0xbb
  401a53:	mov    edx,DWORD PTR [edi]
  401a55:	push   edi
  401a56:	jecxz  0x401ac6
  401a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a59:	mov    bh,0x34
  401a5b:	mov    al,ds:0xe6cb6bb8
  401a60:	mov    al,ds:0xb7518604
  401a65:	dec    ecx
  401a66:	mov    eax,ds:0xde8f118e
  401a6b:	xchg   esp,eax
  401a6c:	pusha  
  401a6d:	rcr    BYTE PTR [ebx],1
  401a6f:	jb     0x401a81
  401a71:	adc    DWORD PTR [ecx-0x54],esi
  401a74:	in     al,0x91
  401a76:	jb     0x401ab5
  401a78:	fist   WORD PTR [edi+edi*8]
  401a7b:	adc    DWORD PTR [esi+0x66],ecx
  401a7e:	inc    esi
  401a7f:	mov    dl,0xad
  401a81:	inc    ecx
  401a82:	xchg   ebp,eax
  401a83:	sbb    al,dh
  401a85:	push   edx
  401a86:	add    al,0x20
  401a88:	add    edx,edx
  401a8a:	mov    cl,0x77
  401a8c:	test   edx,0x108aacda
  401a92:	js     0x401a3c
  401a94:	jno    0x401afd
  401a96:	daa    
  401a97:	sub    DWORD PTR [ecx],ebp
  401a99:	outs   dx,BYTE PTR ds:[esi]
  401a9a:	lahf   
  401a9b:	push   0x65
  401a9d:	aam    0x64
  401a9f:	xchg   edi,eax
  401aa0:	jl     0x401aff
  401aa2:	mov    ebp,0x1c99d61b
  401aa7:	jg     0x401a7f
  401aa9:	rcl    BYTE PTR [eax-0x59856a03],1
  401aaf:	adc    al,0x51
  401ab1:	aam    0xd0
  401ab3:	dec    ebp
  401ab4:	scas   eax,DWORD PTR es:[edi]
  401ab5:	pop    eax
  401ab6:	ins    DWORD PTR es:[edi],dx
  401ab7:	enter  0x587,0x5b
  401abb:	stc    
  401abc:	pop    eax
  401abd:	cld    
  401abe:	adc    eax,0xa5f92130
  401ac3:	push   edx
  401ac4:	sub    al,0xb9
  401ac6:	mov    ebp,0xb5e9f596
  401acb:	das    
  401acc:	clc    
  401acd:	cli    
  401ace:	je     0x401b44
  401ad0:	jno    0x401b43
  401ad2:	sub    BYTE PTR [eax+0x35],dl
  401ad5:	lods   eax,DWORD PTR ds:[esi]
  401ad6:	mov    ah,0x9c
  401ad8:	std    
  401ad9:	lahf   
  401ada:	or     esp,esi
  401adc:	pop    esi
  401add:	mov    ?,WORD PTR [ebx+ebx*1-0x12]
  401ae1:	into   
  401ae2:	es pop ss
  401ae4:	iret   
  401ae5:	test   eax,0xd55c8d58
  401aea:	loope  0x401acf
  401aec:	and    eax,DWORD PTR [edi]
  401aee:	mov    ah,0xa7
  401af0:	mov    eax,0x8d25ef12
  401af5:	imul   ebp,DWORD PTR [edx+edi*4+0x39],0x2
  401afa:	rcl    al,0xb1
  401afd:	inc    esi
  401afe:	shl    BYTE PTR [esi+0x1f],1
  401b01:	xchg   edi,eax
  401b02:	mov    bl,dh
  401b04:	sbb    esi,ebx
  401b06:	popa   
  401b07:	xor    ebp,DWORD PTR [eax]
  401b09:	test   BYTE PTR ds:0x5395abb3,ch
  401b0f:	inc    edi
  401b10:	shl    DWORD PTR [eax],0x50
  401b13:	sub    ebx,DWORD PTR [edx]
  401b15:	push   ds
  401b16:	mov    edi,DWORD PTR [edx-0x14d54d52]
  401b1c:	and    al,0xfa
  401b1e:	xor    esi,DWORD PTR [ecx+0x6a]
  401b21:	outs   dx,BYTE PTR ds:[esi]
  401b22:	push   esi
  401b23:	push   esi
  401b24:	cli    
  401b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b26:	mov    WORD PTR [ebx+0x28],es
  401b29:	xchg   ebx,eax
  401b2a:	cmp    eax,0x66da6789
  401b2f:	push   es
  401b30:	sbb    DWORD PTR [edi+0x42812a3b],esi
  401b36:	or     eax,0x70efd8e0
  401b3b:	mov    ds:0x37fcd25e,al
  401b40:	lock or al,0xa2
  401b43:	fwait
  401b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b45:	adc    al,0x7e
  401b47:	and    BYTE PTR [ecx+0x6b],0x16
  401b4b:	jbe    0x401b59
  401b4d:	mov    edi,0x1fc5177e
  401b52:	leave  
  401b53:	mov    ecx,0xf7166c91
  401b58:	adc    al,0x52
  401b5b:	inc    eax
  401b5c:	ss call 0x49aa9b24
  401b62:	test   BYTE PTR [ecx],bl
  401b64:	(bad)  
  401b65:	popa   
  401b66:	int    0xb1
  401b68:	jge    0x401b11
  401b6a:	into   
  401b6b:	pushf  
  401b6c:	pop    edx
  401b6d:	scas   al,BYTE PTR es:[edi]
  401b6e:	mov    ebp,0x9ea2a707
  401b73:	add    ch,BYTE PTR [ecx-0x23]
  401b76:	mov    bl,0xd5
  401b78:	les    ecx,FWORD PTR [edx]
  401b7a:	jp     0x401b25
  401b7c:	mov    eax,ds:0x1f3f388b
  401b81:	mov    bl,BYTE PTR [esi-0x43]
  401b84:	add    ebx,edi
  401b86:	js     0x401bf5
  401b88:	add    bl,BYTE PTR [esi-0x4baf40ea]
  401b8e:	cdq    
  401b8f:	mov    cl,0x81
  401b91:	jb     0x401b7f
  401b93:	outs   dx,BYTE PTR fs:[esi]
  401b95:	dec    edi
  401b96:	(bad)  
  401b97:	jmp    DWORD PTR [ecx+0x48f6ad29]
  401b9d:	mov    cl,al
  401b9f:	adc    eax,0xf44b5676
  401ba4:	bound  ebp,QWORD PTR [ebp+0x67]
  401ba7:	mov    ebp,0x372e4992
  401bac:	ss fwait
  401bae:	repnz xor DWORD PTR [ecx-0x3a261be5],ebp
  401bb5:	out    dx,eax
  401bb6:	(bad)  
  401bb7:	xchg   ebp,eax
  401bb8:	sbb    edx,DWORD PTR [eax-0x229c2554]
  401bbe:	icebp  
  401bbf:	sti    
  401bc0:	sub    DWORD PTR [eax-0xadd054d],esp
  401bc6:	test   al,0x80
  401bc8:	gs js  0x401ba9
  401bcb:	xor    BYTE PTR ds:0xd5107b1b,dl
  401bd1:	jmp    0x93cc88d
  401bd6:	inc    esp
  401bd7:	adc    eax,0xac7991c
  401bdc:	lea    esi,[edx+0x5aef8b63]
  401be2:	in     al,0xaa
  401be4:	add    eax,0x2ee3a6ca
  401be9:	fstp   QWORD PTR [eax-0x2dcd55cd]
  401bef:	sub    ch,0x14
  401bf2:	clc    
  401bf3:	jge    0x401c3a
  401bf5:	xor    DWORD PTR [ecx],edx
  401bf7:	inc    esi
  401bf8:	add    BYTE PTR [ebp+0x53c677e1],ah
  401bfe:	shr    BYTE PTR [ebx-0x64],cl
  401c01:	mov    edx,0x31c760ef
  401c06:	popf   
  401c07:	mov    cl,0x3
  401c09:	test   eax,0xac8b603e
  401c0e:	bswap  edi
  401c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c11:	std    
  401c12:	mov    ebp,0x9b14488a
  401c17:	fs fwait
  401c19:	outs   dx,BYTE PTR ds:[esi]
  401c1a:	adc    ah,al
  401c1c:	dec    edi
  401c1d:	ret    
  401c1e:	sahf   
  401c1f:	cmp    dh,dl
  401c21:	in     eax,dx
  401c22:	into   
  401c23:	xor    ebx,ecx
  401c25:	or     al,0x92
  401c27:	fisttp QWORD PTR [ebp-0x6c]
  401c2a:	es pop esi
  401c2c:	or     ebx,DWORD PTR [ecx-0x2]
  401c2f:	loopne 0x401c2c
  401c31:	fild   QWORD PTR [ebx+0xe8b1ec]
  401c37:	push   ebp
  401c38:	aam    0x76
  401c3a:	push   ds
  401c3b:	inc    edi
  401c3c:	mov    eax,ds:0x3b65bed7
  401c41:	scas   al,BYTE PTR es:[edi]
  401c42:	push   ecx
  401c43:	and    al,0x95
  401c45:	and    BYTE PTR [esi+0x45],ah
  401c48:	into   
  401c49:	pop    es
  401c4a:	xchg   esi,eax
  401c4b:	adc    DWORD PTR [ebp+0x3f5fc848],0x5dbaf4c
  401c55:	adc    al,BYTE PTR [ebx]
  401c57:	(bad)  
  401c58:	inc    ecx
  401c59:	dec    edi
  401c5a:	(bad)  
  401c5b:	cmp    BYTE PTR [eax],dh
  401c5d:	lock adc BYTE PTR [ebx],cl
  401c60:	xchg   ebp,eax
  401c61:	push   ecx
  401c62:	adc    eax,0x69895d4
  401c67:	sti    
  401c68:	pusha  
  401c69:	fild   DWORD PTR [eax]
  401c6b:	fld    st(2)
  401c6d:	adc    bh,BYTE PTR ss:[ecx-0x75]
  401c71:	int    0x6b
  401c73:	leave  
  401c74:	js     0x401c45
  401c76:	pop    ebp
  401c77:	inc    ebx
  401c78:	iret   
  401c79:	add    al,0x13
  401c7b:	dec    edx
  401c7c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  401c7e:	lods   al,BYTE PTR ds:[esi]
  401c7f:	adc    eax,0x915ee9ec
  401c84:	sahf   
  401c85:	aad    0xb7
  401c87:	shl    BYTE PTR [ebp-0x7e],cl
  401c8a:	ss aam 0x4b
  401c8d:	add    ebx,edx
  401c8f:	sti    
  401c90:	xchg   edx,eax
  401c91:	inc    ebp
  401c92:	sub    DWORD PTR [edi+0x44],esi
  401c95:	int    0xef
  401c97:	cmp    eax,0x14899a0b
  401c9c:	push   esp
  401c9d:	mov    ds:0x8917fac7,al
  401ca2:	je     0x401ccd
  401ca4:	jp     0x401cd3
  401ca6:	xor    ebp,DWORD PTR [edi+0x6208243f]
  401cac:	jb     0x401cf5
  401cae:	pop    edx
  401caf:	mov    ds:0xcfb39e93,eax
  401cb4:	out    0xbb,eax
  401cb6:	mov    esp,0x44526ea3
  401cbb:	pop    ebx
  401cbc:	(bad)  [edi+0x15ed2940]
  401cc2:	mov    bh,0xbe
  401cc4:	push   esp
  401cc5:	mov    bl,dh
  401cc7:	fadd   QWORD PTR [ebx+0x7a]
  401cca:	ret    0x7afc
  401ccd:	pop    ds
  401cce:	nop
  401ccf:	mov    bh,0x1e
  401cd1:	(bad)  
  401cd2:	jp     0x401cac
  401cd4:	push   ebp
  401cd5:	inc    DWORD PTR [eax]
  401cd7:	(bad)  
  401cd8:	out    dx,al
  401cd9:	dec    ebp
  401cda:	aad    0x87
  401cdc:	jg     0x401c64
  401cde:	lahf   
  401cdf:	fistp  WORD PTR [edx]
  401ce1:	into   
  401ce2:	xchg   ebp,eax
  401ce3:	sahf   
  401ce4:	xchg   edi,eax
  401ce5:	jl     0x401c84
  401ce7:	mov    al,ds:0xefb7819a
  401cec:	fdiv   QWORD PTR [eax-0x7846a01a]
  401cf2:	dec    esi
  401cf3:	sahf   
  401cf4:	jb     0x401d73
  401cf6:	hlt    
  401cf7:	cmc    
  401cf8:	mov    bl,0xd5
  401cfa:	stc    
  401cfb:	fadd   DWORD PTR [ebp+0x10]
  401cfe:	xchg   esp,eax
  401cff:	xchg   ebx,eax
  401d00:	test   BYTE PTR [ecx+0x7494f117],ah
  401d06:	ret    
  401d07:	icebp  
  401d08:	add    dh,BYTE PTR [edi+eax*1-0x7d]
  401d0c:	mov    al,ds:0x33c228ad
  401d11:	sbb    dl,BYTE PTR [eax+0x263c1e1]
  401d17:	push   esi
  401d18:	into   
  401d19:	(bad)  [edx-0x6dd56bff]
  401d1f:	xchg   DWORD PTR [ebp+0x37fe82a1],eax
  401d25:	dec    ecx
  401d26:	pop    ebp
  401d27:	mov    eax,0x8bee9b9a
  401d2c:	push   esi
  401d2d:	xlat   BYTE PTR ds:[ebx]
  401d2e:	ins    DWORD PTR es:[edi],dx
  401d2f:	mov    al,ds:0xa21d9403
  401d34:	clc    
  401d35:	and    al,0x4b
  401d37:	jge    0x401d41
  401d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d3a:	push   0xffffffc4
  401d3c:	fldcw  WORD PTR [ecx]
  401d3e:	push   0xfaaec9fc
  401d43:	daa    
  401d44:	jecxz  0x401d38
  401d46:	aad    0x6b
  401d48:	cli    
  401d49:	pusha  
  401d4a:	jns    0x401d33
  401d4c:	fdivp  st(3),st
  401d4e:	jg     0x401dca
  401d50:	pop    esp
  401d51:	pop    edx
  401d52:	ret    0xaa7
  401d55:	jmp    0x401d18
  401d57:	mov    ebp,0x4be152bb
  401d5c:	ret    0x9837
  401d5f:	lahf   
  401d60:	jp     0x401d85
  401d62:	xchg   edx,eax
  401d63:	add    ch,BYTE PTR [eax-0x4cf46b0f]
  401d69:	cwde   
  401d6a:	std    
  401d6b:	ss test dh,dh
  401d6e:	or     al,0xa1
  401d70:	push   ecx
  401d71:	lock jmp 0x2f7e46f0
  401d77:	and    BYTE PTR [esi],0x95
  401d7a:	iret   
  401d7b:	add    BYTE PTR [edx-0x4d],cl
  401d7e:	xchg   BYTE PTR [ecx],cl
  401d80:	jp     0x401d19
  401d82:	mov    al,0x58
  401d84:	dec    edi
  401d85:	adc    esp,eax
  401d87:	cmp    eax,0xfda02443
  401d8c:	xor    DWORD PTR [ebx-0x219cbf8a],edi
  401d92:	lock hlt 
  401d94:	out    0xdb,al
  401d96:	and    BYTE PTR [esi+0x29597583],ah
  401d9c:	ret    0xe9d
  401d9f:	jbe    0x401dbb
  401da1:	jecxz  0x401dcf
  401da3:	cmp    BYTE PTR [ebp-0x7e4d182c],dh
  401da9:	add    eax,ecx
  401dab:	out    0xc2,eax
  401dad:	inc    esi
  401dae:	dec    esp
  401daf:	jno    0x401df4
  401db1:	push   ebx
  401db2:	scas   eax,DWORD PTR es:[edi]
  401db3:	(bad)  
  401db4:	stc    
  401db5:	jb     0x401d51
  401db7:	pop    edi
  401db8:	stc    
  401db9:	jae    0x401d4d
  401dbb:	xor    edx,ecx
  401dbd:	stos   DWORD PTR es:[edi],eax
  401dbe:	add    ebp,eax
  401dc0:	adc    bh,BYTE PTR [ebp-0x3ab2cbd3]
  401dc6:	jl     0x401d7d
  401dc8:	pop    ss
  401dc9:	or     al,0xd6
  401dcb:	pop    ebx
  401dcc:	sti    
  401dcd:	jp     0xb3545d47
  401dd3:	dec    esi
  401dd4:	iret   
  401dd5:	cmp    BYTE PTR ds:0x68e1017a,dh
  401ddb:	inc    esp
  401ddc:	mov    al,ds:0x3e42f9c9
  401de1:	ins    DWORD PTR es:[edi],dx
  401de2:	fs xchg edi,eax
  401de4:	sbb    BYTE PTR [esi+0x22],bh
  401de7:	loop   0x401d6c
  401de9:	aaa    
  401dea:	pop    esi
  401deb:	scas   al,BYTE PTR es:[edi]
  401dec:	add    ecx,edi
  401dee:	push   esp
  401def:	sub    ch,BYTE PTR [ecx]
  401df1:	and    al,0xb7
  401df3:	push   esi
  401df4:	fwait
  401df5:	lock pop ds
  401df7:	xor    ecx,DWORD PTR [eax+ebp*4]
  401dfa:	sti    
  401dfb:	nop
  401dfc:	sbb    BYTE PTR [eax+0x15],bh
  401dff:	pop    esi
  401e00:	sub    bl,bl
  401e02:	sti    
  401e03:	int    0x59
  401e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e06:	inc    edx
  401e07:	shr    BYTE PTR [edx],0xc0
  401e0a:	sbb    bl,BYTE PTR [ecx+0x57]
  401e0d:	sub    BYTE PTR [ebx+ecx*2],al
  401e10:	mov    fs,WORD PTR [ecx+0x76]
  401e13:	jp     0x401e69
  401e15:	jbe    0x401da8
  401e17:	ins    BYTE PTR es:[edi],dx
  401e18:	inc    eax
  401e19:	icebp  
  401e1a:	popf   
  401e1b:	push   edi
  401e1c:	adc    DWORD PTR [ebx+edi*1+0x55a5ead5],ebp
  401e23:	sar    DWORD PTR [edx],0xad
  401e26:	push   edi
  401e27:	push   eax
  401e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e29:	out    dx,al
  401e2a:	cld    
  401e2b:	xchg   ebx,eax
  401e2c:	je     0x401e10
  401e2e:	lahf   
  401e2f:	aaa    
  401e30:	out    dx,al
  401e31:	inc    edi
  401e32:	push   ebp
  401e33:	les    eax,FWORD PTR [ecx-0x449191db]
  401e39:	dec    edi
  401e3a:	jecxz  0x401eb3
  401e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e3d:	add    DWORD PTR [ecx-0x55aa236f],ebx
  401e43:	xor    al,0x70
  401e45:	ret    0x2c9
  401e48:	les    ebp,FWORD PTR [ecx+edx*2]
  401e4b:	mov    edi,0xc19d6975
  401e50:	inc    esp
  401e51:	mov    ebp,DWORD PTR [eax+edx*2]
  401e54:	rcl    BYTE PTR [ebp+0x6a],cl
  401e57:	jne    0x401e70
  401e59:	aaa    
  401e5a:	mov    eax,ds:0x5de1e74e
  401e5f:	push   esi
  401e60:	dec    eax
  401e61:	mov    eax,0xc2dc50f1
  401e66:	adc    BYTE PTR [ecx-0x7c6058f5],0x52
  401e6d:	xchg   edx,eax
  401e6e:	mov    edi,0x2a6a998c
  401e73:	mov    ecx,0x62ca5841
  401e78:	cs jno 0x401e67
  401e7b:	xchg   esi,eax
  401e7c:	adc    esp,ebp
  401e7e:	xor    edx,DWORD PTR ds:0xab93c6e1
  401e84:	fistp  WORD PTR [edx+edx*1]
  401e87:	mov    ?,WORD PTR [esi+0x2e]
  401e8a:	xchg   edi,eax
  401e8b:	ret    0x34d9
  401e8e:	xor    DWORD PTR [edx],edi
  401e90:	jne    0x401eee
  401e92:	int    0xf9
  401e94:	and    BYTE PTR [bp+di],al
  401e97:	mov    bh,0x77
  401e99:	dec    ebx
  401e9a:	test   DWORD PTR [edx],0xd80c106e
  401ea0:	sbb    BYTE PTR [eax],0x47
  401ea3:	dec    eax
  401ea4:	lods   al,BYTE PTR ds:[esi]
  401ea5:	cmp    ch,0x6
  401ea8:	fstp   TBYTE PTR [esi-0x65ab4b8a]
  401eae:	xchg   ebp,eax
  401eaf:	mov    eax,0x70538d38
  401eb4:	xchg   ebx,eax
  401eb5:	ret    
  401eb6:	ins    DWORD PTR es:[edi],dx
  401eb7:	ins    DWORD PTR es:[edi],dx
  401eb8:	repz repnz out 0x3,eax
  401ebc:	mov    esi,cs
  401ebe:	int3   
  401ebf:	in     al,0x64
  401ec1:	adc    al,0x10
  401ec3:	sbb    dl,al
  401ec5:	jne    0x401eac
  401ec7:	enter  0x14dd,0xc1
  401ecb:	iret   
  401ecc:	mov    BYTE PTR [eax-0x6c],dh
  401ecf:	(bad)  
  401ed0:	dec    esp
  401ed1:	push   0x884d825
  401ed6:	mov    ds:0x10537186,al
  401edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401edc:	addr16 jae 0x401f3e
  401edf:	push   0xfffffff3
  401ee1:	pop    ss
  401ee2:	adc    al,0x60
  401ee4:	cmp    BYTE PTR [esi],0x23
  401ee7:	push   ds
  401ee8:	mov    esi,0xf60349db
  401eed:	mov    DWORD PTR [edx+ebx*8-0x7a68fe15],esi
  401ef4:	dec    ebx
  401ef5:	xchg   DWORD PTR [ebx-0x71ecbad],esp
  401efb:	adc    al,0x71
  401efd:	(bad)  
  401efe:	cmp    ecx,DWORD PTR [edi-0x3b]
  401f01:	inc    edx
  401f02:	mov    bl,0x6f
  401f04:	and    esp,DWORD PTR [esi]
  401f06:	aam    0x75
  401f08:	js     0x401f75
  401f0a:	and    eax,0x93d9aa8c
  401f0f:	cmc    
  401f10:	idiv   BYTE PTR [eax+0x58ecb31]
  401f16:	adc    DWORD PTR [ecx-0x3f],ebp
  401f19:	outs   dx,DWORD PTR ds:[esi]
  401f1a:	test   al,0xdb
  401f1c:	rcl    BYTE PTR [eax+0x7e],cl
  401f1f:	jecxz  0x401f79
  401f21:	and    ah,BYTE PTR [esp+esi*1+0xf]
  401f25:	aam    0x24
  401f27:	mov    dh,0xc4
  401f29:	test   ebx,0x32141eee
  401f2f:	(bad)  
  401f30:	je     0x401f44
  401f32:	jb     0x401f48
  401f34:	ror    BYTE PTR [edx+ebx*1+0x2a71b74f],1
  401f3b:	loope  0x401eff
  401f3d:	mov    ebx,0x9ed41bd
  401f42:	inc    esp
  401f43:	outs   dx,BYTE PTR ds:[esi]
  401f44:	in     eax,dx
  401f45:	(bad)  
  401f46:	outs   dx,BYTE PTR ds:[esi]
  401f47:	xor    al,0xd9
  401f49:	iret   
  401f4a:	cld    
  401f4b:	ins    DWORD PTR es:[edi],dx
  401f4c:	sub    ecx,DWORD PTR [ecx]
  401f4e:	and    ecx,DWORD PTR [ebp-0x10]
  401f51:	xor    al,0x1e
  401f53:	xchg   bh,bl
  401f55:	push   esi
  401f56:	scas   al,BYTE PTR es:[edi]
  401f57:	inc    edx
  401f58:	xchg   esp,eax
  401f59:	sti    
  401f5a:	lea    ecx,[eax-0x13]
  401f5d:	pop    eax
  401f5e:	pushf  
  401f5f:	cli    
  401f60:	add    eax,0xaedfa8c2
  401f65:	sbb    DWORD PTR [edi+ebx*4-0x3f066a7],edx
  401f6c:	hlt    
  401f6d:	and    ecx,esi
  401f6f:	scas   eax,DWORD PTR es:[edi]
  401f70:	push   ss
  401f71:	cdq    
  401f72:	cmp    esi,DWORD PTR [ebx+0x1f]
  401f75:	jne    0x401f37
  401f77:	sub    cl,dl
  401f79:	daa    
  401f7a:	jne    0x401fc7
  401f7c:	mov    WORD PTR [esp+edi*1],ds
  401f7f:	push   0xd2db14c6
  401f84:	(bad)  
  401f85:	mov    ah,0xc
  401f87:	ins    DWORD PTR es:[edi],dx
  401f88:	cmp    ebp,DWORD PTR [edx+0x79a676c9]
  401f8e:	jle    0x401f1e
  401f90:	jmp    0x401f86
  401f92:	ins    DWORD PTR es:[edi],dx
  401f93:	sbb    BYTE PTR ds:0x8ad27836,bh
  401f99:	aas    
  401f9a:	sbb    DWORD PTR [edi-0x2193d694],eax
  401fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fa1:	mov    edi,0xd3bf9f06
  401fa6:	mov    ecx,0xc0974d38
  401fab:	out    dx,al
  401fac:	xor    cl,BYTE PTR [esi-0x79]
  401faf:	mov    DWORD PTR [edi-0x5cd6a0aa],esp
  401fb5:	add    BYTE PTR [edi-0x36],0x48
  401fb9:	push   ecx
  401fba:	(bad)  
  401fbc:	loope  0x401f77
  401fbe:	ret    
  401fbf:	xchg   edi,ebx
  401fc1:	sub    bh,dh
  401fc3:	adc    eax,0x12eb4ad6
  401fc8:	inc    eax
  401fc9:	jae    0x401ff9
  401fcb:	pop    edx
  401fcc:	cmp    eax,0xc4ad9222
  401fd1:	icebp  
  401fd2:	jecxz  0x401fa5
  401fd4:	push   0xffffffeb
  401fd6:	sbb    cl,BYTE PTR [ebx]
  401fd8:	fs (bad) 
  401fda:	cmc    
  401fdb:	xchg   esi,eax
  401fdc:	ins    DWORD PTR es:[edi],dx
  401fdd:	mov    ds:0xbea398c1,al
  401fe2:	repz inc eax
  401fe4:	cmp    ch,BYTE PTR [esi+0x70]
  401fe7:	xlat   BYTE PTR ds:[ebx]
  401fe8:	addr16 rcl esp,1
  401feb:	add    dh,0xe9
  401fee:	(bad)  
  401fef:	push   ecx
  401ff0:	sub    dh,BYTE PTR [ecx-0x2d051345]
  401ff6:	fbstp  TBYTE PTR [ebx-0x7]
  401ff9:	add    eax,0xfd3beda6
  401ffe:	stos   DWORD PTR es:[edi],eax
  401fff:	push   eax
  402000:	lea    eax,[esi]
  402002:	cvtps2pd xmm1,xmm0
  402005:	mov    DWORD PTR [edx],esp
  402007:	scas   eax,DWORD PTR es:[edi]
  402008:	mov    ah,0x8c
  40200a:	mov    ebx,0xe7d62154
  40200f:	stos   BYTE PTR es:[edi],al
  402010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402011:	in     eax,0x2
  402013:	mov    bl,0xb7
  402015:	nop
  402016:	lods   al,BYTE PTR ds:[esi]
  402017:	aas    
  402018:	add    DWORD PTR [ebx+eax*1-0x3c305c49],ebx
  40201f:	push   edi
  402020:	daa    
  402021:	push   edx
  402022:	(bad)  
  402023:	fucomip st,st(4)
  402025:	stos   DWORD PTR es:[edi],eax
  402026:	fldcw  WORD PTR [esp+edi*4]
  402029:	push   0xffffffe6
  40202b:	fmul   st(4),st
  40202d:	call   0xc645:0xdd99afef
  402034:	jecxz  0x402009
  402036:	rcr    BYTE PTR [ecx],0x3a
  402039:	pop    esi
  40203a:	sub    eax,0xa85ba380
  40203f:	push   edx
  402040:	xor    eax,0xbecee2e2
  402045:	lods   al,BYTE PTR ds:[esi]
  402046:	and    ecx,DWORD PTR [eax+0x4e791f2c]
  40204c:	sahf   
  40204d:	popa   
  40204e:	adc    ah,0x2b
  402051:	mov    bl,0x79
  402053:	out    0xac,al
  402055:	ret    
  402056:	add    eax,0x73c05ba7
  40205b:	jb     0x401ff4
  40205d:	retf   
  40205e:	xor    edi,ecx
  402060:	mov    ch,0x2d
  402062:	outs   dx,DWORD PTR ds:[esi]
  402063:	jmp    0x40203b
  402065:	pop    edx
  402066:	pop    edi
  402067:	in     al,dx
  402068:	pop    ebp
  402069:	mov    ebp,0xe4e8c2aa
  40206e:	jns    0x402079
  402070:	xchg   esp,eax
  402071:	loopne 0x402037
  402073:	mov    ds:0xbd274b0d,al
  402078:	mov    ah,0x5c
  40207a:	jl     0x402017
  40207c:	outs   dx,BYTE PTR ds:[esi]
  40207d:	ja     0x402053
  40207f:	fcomp  DWORD PTR [ebx]
  402081:	pop    ecx
  402082:	cmp    DWORD PTR [edi-0x5a],0x4fe73d73
  402089:	out    0x24,eax
  40208b:	loopne 0x40209c
  40208d:	push   di
  40208f:	cmp    BYTE PTR [ecx-0xcc7af11],0xcd
  402096:	fnstsw WORD PTR [edx-0x6faae329]
  40209c:	mov    bl,BYTE PTR [edi]
  40209e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40209f:	pop    eax
  4020a0:	jae    0x40203c
  4020a2:	and    BYTE PTR [eax-0x3a1fa16f],al
  4020a8:	jo     0x402120
  4020aa:	sub    al,0xdf
  4020ac:	and    ecx,DWORD PTR [edi+0x501c8027]
  4020b2:	sbb    BYTE PTR [eax-0x5508e5c7],dl
  4020b8:	and    BYTE PTR [ebp+0x6a],dh
  4020bb:	sub    al,0x38
  4020bd:	dec    ebp
  4020be:	std    
  4020bf:	lods   al,BYTE PTR ds:[esi]
  4020c0:	addr16 ror edx,1
  4020c3:	mov    ds:0xd06ae85e,eax
  4020c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020c9:	call   0xaa3b:0x96815ad4
  4020d0:	fnsave ds:0x9c6f4943
  4020d6:	sub    bh,bh
  4020d8:	cli    
  4020d9:	push   esp
  4020da:	or     ah,BYTE PTR [eax+0x5c5dcbd2]
  4020e0:	dec    edi
  4020e1:	jo     0x4020d4
  4020e3:	lods   al,BYTE PTR ds:[esi]
  4020e4:	add    dh,BYTE PTR [ebx+0x16a77103]
  4020ea:	sbb    DWORD PTR [ebx-0x20c8a584],0xf5c49248
  4020f4:	dec    edi
  4020f5:	push   ecx
  4020f6:	jae    0x4020ab
  4020f8:	in     al,dx
  4020f9:	aad    0xa1
  4020fb:	add    eax,0xa7f07897
  402100:	imul   esi,DWORD PTR [edi],0x7a
  402103:	in     al,dx
  402104:	xchg   ecx,eax
  402105:	icebp  
  402106:	in     al,dx
  402107:	jnp    0x4020a7
  402109:	imul   dh
  40210b:	sub    al,0x23
  40210d:	push   ds
  40210e:	mov    ch,BYTE PTR [edi]
  402110:	dec    ebp
  402111:	jnp    0x4020d0
  402113:	pop    eax
  402114:	daa    
  402115:	mov    eax,0xaee711c0
  40211a:	mov    ds:0xfe5151d8,al
  40211f:	fnstenv [esi-0x2f]
  402122:	jp     0x40216e
  402124:	push   esp
  402125:	pop    ds
  402126:	xchg   ecx,eax
  402127:	test   bl,al
  402129:	shr    DWORD PTR [edx+0x5af1dcfa],0xce
  402130:	fdivr  DWORD PTR [eax]
  402132:	test   ebx,ecx
  402134:	imul   edx,DWORD PTR [esi],0xffffffd8
  402137:	popf   
  402138:	je     0x402121
  40213a:	fadd   QWORD PTR [eax+0x3e62b609]
  402140:	in     al,dx
  402141:	pop    ss
  402142:	fs sbb al,0xd
  402145:	mov    ds:0x79359800,eax
  40214a:	es sbb al,0x45
  40214d:	aas    
  40214e:	pop    eax
  40214f:	mov    bl,0x54
  402151:	sub    eax,0x5223df4c
  402156:	or     ah,cl
  402158:	aaa    
  402159:	mov    ecx,gs
  40215b:	mov    ebp,0x95ca4ca0
  402160:	xor    ebx,esp
  402162:	sahf   
  402163:	pop    edx
  402164:	sub    eax,0xdfebb519
  402169:	or     BYTE PTR [edx-0x21],ah
  40216c:	jbe    0x402157
  40216e:	mov    edx,0x6b765021
  402173:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402175:	popa   
  402176:	jmp    0x4021cc
  402178:	(bad)  
  402179:	sbb    DWORD PTR [ebx-0x57fb653f],eax
  40217f:	mov    cl,0xf
  402181:	mov    ah,BYTE PTR [edx-0x45]
  402184:	fdivr  QWORD PTR [esi-0x23e52787]
  40218a:	pop    esi
  40218b:	sub    eax,0x53c3727
  402190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402191:	adc    eax,0x83b3487c
  402196:	fild   WORD PTR [esi]
  402198:	adc    bl,dl
  40219a:	imul   ecx,DWORD PTR [edx-0x2fef51ec],0x5a6e8305
  4021a4:	add    ebx,0xb9c1a15d
  4021aa:	(bad)  
  4021ab:	div    BYTE PTR [ecx]
  4021ad:	loop   0x402209
  4021af:	jo     0x402146
  4021b1:	mov    cl,0xbc
  4021b3:	(bad)  
  4021b5:	jmp    0xcd497214
  4021ba:	scas   al,BYTE PTR es:[edi]
  4021bb:	in     eax,0x64
  4021bd:	stc    
  4021be:	stos   DWORD PTR es:[edi],eax
  4021bf:	pop    edx
  4021c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c1:	or     eax,0xc4580b9f
  4021c6:	frstor [edi+0x6fd861f9]
  4021cc:	sub    eax,ebp
  4021ce:	scas   al,BYTE PTR es:[edi]
  4021cf:	sub    eax,0x8615a52
  4021d4:	adc    ecx,DWORD PTR [eax+0x65]
  4021d7:	sub    DWORD PTR [edi-0xd7a60b6],edx
  4021dd:	cmp    eax,0x6ba1e1f5
  4021e2:	and    bh,BYTE PTR [esi]
  4021e4:	cmp    al,0xb
  4021e6:	xor    DWORD PTR [esi],eax
  4021e8:	shl    BYTE PTR [edx],1
  4021ea:	mov    ss,WORD PTR [ecx-0x6a]
  4021ed:	add    BYTE PTR [ebx+0x716ce51f],al
  4021f3:	mul    DWORD PTR [esp+ebp*8-0x56]
  4021f7:	daa    
  4021f8:	icebp  
  4021f9:	adc    BYTE PTR [ebx],dh
  4021fb:	mov    ds:0xd6adaa93,al
  402200:	xchg   edi,eax
  402201:	int    0x6b
  402203:	data16 clc 
  402205:	aas    
  402206:	or     al,0x6a
  402208:	push   ds
  402209:	cmp    BYTE PTR [esi],ah
  40220b:	cmp    al,0x44
  40220d:	mov    edi,0xbd38af75
  402212:	in     eax,0x68
  402214:	xchg   edi,eax
  402215:	push   esp
  402216:	lea    ebp,[edx]
  402218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402219:	enter  0x1f1e,0xc5
  40221d:	not    DWORD PTR [eax]
  40221f:	inc    ecx
  402220:	not    BYTE PTR [ecx]
  402222:	sub    DWORD PTR [ecx+0x2873c73f],0x7e775055
  40222c:	sub    BYTE PTR [esi-0x41ff31da],cl
  402232:	add    DWORD PTR [ebx-0x4e],0x1f
  402236:	mov    dh,0x52
  402238:	mov    cl,0x46
  40223a:	xor    esp,DWORD PTR [eax]
  40223c:	xchg   esp,eax
  40223d:	pop    edx
  40223e:	je     0x402213
  402240:	scas   eax,DWORD PTR es:[edi]
  402241:	inc    esi
  402242:	mov    ebp,0x8f64b245
  402247:	cld    
  402248:	dec    esi
  402249:	cld    
  40224a:	out    0x43,al
  40224c:	mov    esi,0xc503b6fc
  402251:	(bad)  
  402253:	xor    ebx,eax
  402255:	repz mov ds,ebx
  402258:	push   es
  402259:	jno    0x402245
  40225b:	loop   0x4022b4
  40225d:	sub    esp,DWORD PTR [ebx]
  40225f:	dec    ecx
  402260:	(bad)  
  402262:	imul   ebx,edx,0x58
  402265:	lahf   
  402266:	add    DWORD PTR [ebp-0x5f],ebx
  402269:	jno    0x402209
  40226b:	mov    fs,esp
  40226d:	xor    al,0x87
  40226f:	sub    dl,dh
  402271:	dec    esi
  402272:	aaa    
  402273:	mov    ah,0x8
  402275:	pop    ebx
  402276:	mov    ecx,0xe86530b0
  40227b:	jnp    0x402287
  40227d:	pusha  
  40227e:	cmpxchg BYTE PTR [edx],cl
  402281:	inc    ebp
  402282:	mov    ?,edi
  402284:	fiadd  WORD PTR [edx-0x13]
  402287:	mov    eax,0xd7225758
  40228c:	fisub  WORD PTR [eax-0x69]
  40228f:	scas   al,BYTE PTR es:[edi]
  402290:	(bad)  
  402291:	mov    ebx,0x4950a85c
  402296:	shl    BYTE PTR [esi],cl
  402298:	add    BYTE PTR [ebp+0x79f856dc],0x76
  40229f:	jo     0x4022d0
  4022a1:	inc    esi
  4022a2:	shl    BYTE PTR [ecx+ecx*4-0x54aa6ed0],0x59
  4022aa:	hlt    
  4022ab:	push   edi
  4022ac:	sub    cl,BYTE PTR [edx-0x5f]
  4022af:	mov    eax,ds:0xfcd82432
  4022b4:	add    BYTE PTR [edx-0x3d],ah
  4022b7:	ror    DWORD PTR [edi-0x8],cl
  4022ba:	ja     0x4022d1
  4022bc:	stc    
  4022bd:	xchg   ebx,eax
  4022be:	addr16 or al,0xe5
  4022c1:	gs out dx,eax
  4022c3:	out    dx,al
  4022c4:	leave  
  4022c5:	imul   eax,DWORD PTR [edi-0x3],0x4eb004a4
  4022cc:	ins    BYTE PTR es:[edi],dx
  4022cd:	xor    eax,0xcf1fe1f4
  4022d2:	cli    
  4022d3:	test   DWORD PTR [ebx+0x33],edi
  4022d6:	mov    eax,0x87a7bbaf
  4022db:	lock pop eax
  4022dd:	cmp    ah,BYTE PTR [edi]
  4022df:	jmp    0x9e97:0x9b5d7cdc
  4022e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e7:	setns  BYTE PTR [ebx-0x5f]
  4022eb:	aaa    
  4022ec:	cld    
  4022ed:	into   
  4022ee:	daa    
  4022ef:	inc    esp
  4022f0:	adc    al,0x47
  4022f2:	aaa    
  4022f3:	dec    esi
  4022f4:	and    DWORD PTR [eax+0x31f7cb25],ebx
  4022fa:	pop    ss
  4022fb:	dec    esp
  4022fc:	pop    ebx
  4022fd:	inc    ecx
  4022fe:	sub    BYTE PTR [edi+esi*2],dl
  402301:	enter  0xd901,0x99
  402305:	mov    ch,0x39
  402307:	or     al,0x9d
  402309:	add    al,0xe8
  40230b:	rcr    BYTE PTR [edi+ebp*4],0x9e
  40230f:	ret    0xccbc
  402312:	pop    esp
  402313:	jns    0x4022af
  402315:	mov    ebx,0x73748329
  40231a:	pop    ds
  40231b:	adc    dh,BYTE PTR [eax+0x36]
  40231e:	dec    esp
  40231f:	add    esp,DWORD PTR [esi+0x6c]
  402322:	es iret 
  402324:	sub    BYTE PTR [eax-0x284d3a72],ch
  40232a:	aam    0x3b
  40232c:	cs jp  0x4022d8
  40232f:	fcomip st,st(4)
  402331:	(bad)  
  402333:	jno    0x4022d0
  402335:	aaa    
  402336:	retf   
  402337:	dec    ecx
  402338:	(bad)  
  402339:	fstp   QWORD PTR [eax]
  40233b:	and    ch,dl
  40233d:	push   ebp
  40233e:	fwait
  40233f:	cmc    
  402340:	sub    eax,0x1c909bfa
  402345:	mov    dh,0xa5
  402347:	and    DWORD PTR [esi-0x36],esi
  40234a:	lock imul DWORD PTR [eax+0x2872689e]
  402351:	fs sbb al,0x22
  402354:	mov    WORD PTR [esi-0x74233d29],es
  40235a:	mov    cl,0xb
  40235c:	test   al,0xf3
  40235e:	and    edx,DWORD PTR [ebx]
  402360:	xor    DWORD PTR [ecx],esp
  402362:	push   0x338e466b
  402367:	adc    esi,0x1
  40236a:	les    esi,FWORD PTR [edx]
  40236c:	push   ecx
  40236d:	pop    ecx
  40236e:	test   DWORD PTR fs:[edx],ecx
  402371:	mov    ds:0x624e4785,eax
  402376:	adc    DWORD PTR [eax],ebx
  402378:	stos   BYTE PTR es:[edi],al
  402379:	cld    
  40237a:	arpl   WORD PTR [edx+ebx*4],bp
  40237d:	retf   0xfd59
  402380:	jne    0x4023bb
  402382:	fstp   st(1)
  402384:	or     ah,bl
  402386:	out    dx,al
  402387:	push   0x19
  402389:	and    edx,ebx
  40238b:	xchg   esi,eax
  40238c:	cld    
  40238d:	out    0xa1,al
  40238f:	jecxz  0x40235c
  402391:	adc    eax,0x98211b3b
  402396:	sbb    eax,0x4030a5e5
  40239b:	stos   BYTE PTR es:[edi],al
  40239c:	loopne 0x402411
  40239e:	jg     0x402348
  4023a0:	dec    ecx
  4023a1:	shl    ecx,cl
  4023a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a4:	mov    al,0x5e
  4023a6:	aas    
  4023a7:	pusha  
  4023a8:	push   cs
  4023a9:	fadd   DWORD PTR [esi+eax*4-0x3c]
  4023ad:	jg     0x402374
  4023af:	sahf   
  4023b0:	xchg   edx,eax
  4023b1:	sbb    eax,0x78bceac
  4023b6:	sbb    eax,0xce068e6a
  4023bb:	mov    al,0xd1
  4023bd:	mov    ds:0xab6c15bb,eax
  4023c2:	loope  0x4023bb
  4023c4:	rol    DWORD PTR [ecx+0x6fd97c24],cl
  4023ca:	fmul   DWORD PTR [ebx*1+0xb26d424]
  4023d1:	xchg   esp,eax
  4023d2:	jle    0x4023c8
  4023d4:	fwait
  4023d5:	test   DWORD PTR [ecx+0xeed8fdc],edi
  4023db:	clc    
  4023dc:	or     DWORD PTR [eax+0x48],edx
  4023df:	cmc    
  4023e0:	imul   esp
  4023e2:	push   ebp
  4023e3:	sbb    eax,0x84c0fc74
  4023e8:	push   ds
  4023e9:	ror    DWORD PTR [edx+0x7f],0x24
  4023ed:	loop   0x402438
  4023ef:	in     al,0x42
  4023f1:	rcl    eax,0x5b
  4023f4:	stc    
  4023f5:	gs aas 
  4023f7:	mov    edx,0x7f91b762
  4023fc:	js     0x402458
  4023fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ff:	imul   esi,DWORD PTR [edx-0x1f],0x178b026a
  402406:	pop    ecx
  402407:	loopne 0x40247e
  402409:	pushf  
  40240a:	cmp    DWORD PTR [eax],ebp
  40240c:	mov    bl,0xe5
  40240e:	clc    
  40240f:	mov    eax,ds:0xd86f9bdd
  402414:	push   ebp
  402415:	mov    ds:0x3784705d,al
  40241a:	mov    edi,0xca23e4f
  40241f:	push   esi
  402420:	jno    0x402439
  402422:	iret   
  402423:	fisubr WORD PTR [ecx+0x4573f1f]
  402429:	inc    ebx
  40242a:	pop    ebp
  40242b:	xor    ebp,edx
  40242d:	dec    esp
  40242e:	pop    eax
  40242f:	aas    
  402430:	pusha  
  402431:	imul   esp,DWORD PTR [edi-0x311bec7c],0xffffffc7
  402438:	outs   dx,BYTE PTR ds:[esi]
  402439:	jae    0x4024b3
  40243b:	add    eax,0x7a883951
  402440:	or     ecx,DWORD PTR ds:0xfe2d09bd
  402446:	ins    DWORD PTR es:[edi],dx
  402447:	fdivr  QWORD PTR [ecx]
  402449:	and    DWORD PTR cs:0x853a72da,0xc8edf4b3
  402454:	jb     0x402421
  402456:	sub    al,0x87
  402458:	mov    dh,0x2b
  40245a:	add    dl,BYTE PTR [eax-0x74]
  40245d:	out    0x92,al
  40245f:	js     0x40249c
  402461:	sub    al,0x7f
  402463:	std    
  402464:	ss hlt 
  402466:	and    al,0x1b
  402468:	bound  ebp,QWORD PTR [ebx-0xb]
  40246b:	ss aaa 
  40246d:	jecxz  0x402453
  40246f:	iret   
  402470:	add    cl,dl
  402472:	arpl   WORD PTR [esi],cx
  402474:	dec    esi
  402475:	adc    dl,bh
  402477:	bound  eax,QWORD PTR [esi+eiz*2+0x7d]
  40247b:	push   ss
  40247c:	test   al,0xbd
  40247e:	pop    esp
  40247f:	call   0x6e3b:0x32864032
  402486:	add    eax,0x8c336014
  40248b:	bts    DWORD PTR [ebp-0x1890ae8b],edx
  402492:	mov    al,0xe4
  402494:	aaa    
  402495:	loope  0x402460
  402497:	bound  esi,QWORD PTR [esi-0x3fa422b9]
  40249d:	pop    es
  40249e:	pop    es
  40249f:	adc    dl,ch
  4024a1:	sub    ebx,ebx
  4024a3:	or     eax,0x9d25b87f
  4024a8:	ret    
  4024a9:	lahf   
  4024aa:	(bad)
  4024ad:	aaa    
  4024ae:	push   edi
  4024af:	lahf   
  4024b0:	scas   eax,DWORD PTR es:[edi]
  4024b1:	xchg   edi,eax
  4024b2:	fild   DWORD PTR cs:[eax+edx*2+0x1]
  4024b7:	scas   al,BYTE PTR es:[edi]
  4024b8:	scas   eax,DWORD PTR es:[edi]
  4024b9:	pusha  
  4024ba:	stos   BYTE PTR es:[edi],al
  4024bb:	je     0x40245b
  4024bd:	pusha  
  4024be:	jl     0x40247b
  4024c0:	lds    ecx,FWORD PTR [ecx+edi*1+0x74]
  4024c4:	sti    
  4024c5:	add    dl,BYTE PTR [esi+0x267debe0]
  4024cb:	add    edi,0xdcf2204a
  4024d1:	lahf   
  4024d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024d3:	dec    edx
  4024d4:	mov    WORD PTR [edx+ebp*1-0x55dcc702],?
  4024db:	aad    0x42
  4024dd:	add    DWORD PTR [ebp-0x75],esp
  4024e0:	shl    ch,0x1c
  4024e3:	jmp    0x844a191a
  4024e8:	and    DWORD PTR [edi+0x2],edi
  4024eb:	fst    DWORD PTR [esi]
  4024ed:	mov    al,ds:0x98f51396
  4024f2:	outs   dx,DWORD PTR ds:[esi]
  4024f3:	push   edi
  4024f4:	test   eax,0x9b7f21c6
  4024f9:	retf   
  4024fa:	scas   eax,DWORD PTR es:[edi]
  4024fb:	inc    edi
  4024fc:	dec    DWORD PTR [eax+0x4a]
  4024ff:	cmp    al,0x4b
  402501:	add    ebx,eax
  402503:	add    eax,0x16d07a19
  402508:	fdiv   QWORD PTR [ebp+0x399e8d9b]
  40250e:	mov    edx,0x2f194bb4
  402513:	test   BYTE PTR [ebx-0x47],al
  402516:	xchg   ebp,eax
  402517:	mov    bh,0x34
  402519:	jmp    0xcbe5f6ab
  40251e:	xchg   ecx,eax
  40251f:	pop    ss
  402520:	test   ecx,ebp
  402522:	mov    dh,dh
  402524:	jmp    0x40252c
  402526:	add    al,0x99
  402528:	jl     0x402516
  40252a:	ret    0x5e10
  40252d:	cmp    DWORD PTR [ebx+0x0],edi
  402530:	shl    BYTE PTR [ecx+0xb],1
  402533:	popf   
  402534:	mov    BYTE PTR [ecx-0x63],ah
  402537:	sub    al,0x8c
  402539:	test   eax,0x10110ff
  40253e:	aad    0xb5
  402540:	call   0x3dd1844f
  402545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402546:	sub    eax,0x2942bfa4
  40254b:	daa    
  40254c:	and    DWORD PTR ds:0xef388dbb,ebx
  402552:	in     eax,dx
  402553:	pop    ecx
  402554:	outs   dx,DWORD PTR ds:[esi]
  402555:	xor    ebx,DWORD PTR [eax+ecx*8+0x17360af2]
  40255c:	cmp    DWORD PTR [esp+ecx*1],edx
  40255f:	(bad)  
  402560:	mov    eax,ds:0xcf74e61f
  402565:	rol    BYTE PTR [edx+0x47],cl
  402568:	daa    
  402569:	ins    DWORD PTR es:[edi],dx
  40256a:	int    0x8c
  40256c:	push   cs
  40256d:	mov    esp,0x83f61f0a
  402572:	ror    BYTE PTR [ebx+0x700d192],1
  402578:	loopne 0x402549
  40257a:	adc    al,0x87
  40257c:	stc    
  40257d:	iret   
  40257e:	xor    ch,BYTE PTR [ecx+0x6f]
  402581:	or     BYTE PTR [ebx+0x67],cl
  402584:	jle    0x402563
  402586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402587:	jle    0x4025f7
  402589:	xlat   BYTE PTR ds:[ebx]
  40258a:	mov    al,0xbb
  40258c:	fild   WORD PTR cs:0xec836923
  402593:	in     eax,0xc3
  402595:	push   0xfd2d49d6
  40259a:	xchg   DWORD PTR [ebp+edx*8+0x19f983bc],eax
  4025a1:	pusha  
  4025a2:	hlt    
  4025a3:	inc    ecx
  4025a4:	ret    
  4025a5:	cs aam 0x27
  4025a8:	mov    ch,0x81
  4025aa:	mov    ebp,0xec0faf1d
  4025af:	adc    bh,BYTE PTR [esi-0x618a474c]
  4025b5:	repz sub DWORD PTR [edx],ebx
  4025b8:	js     0x40261a
  4025ba:	fmul   st(7),st
  4025bc:	popa   
  4025bd:	adc    DWORD PTR [esi+0x5170d32b],esi
  4025c3:	mov    al,ds:0x513ce8bc
  4025c8:	sbb    eax,0x79eb1f4b
  4025cd:	adc    al,BYTE PTR ds:0x5ca4dff9
  4025d3:	push   esi
  4025d4:	push   es
  4025d5:	xchg   ebp,eax
  4025d6:	movs   DWORD PTR es:[di],DWORD PTR es:[si]
  4025d9:	push   edx
  4025da:	test   al,0x5d
  4025dc:	pop    ds
  4025dd:	fstp   TBYTE PTR [ecx-0x6b5e8f6b]
  4025e3:	pop    eax
  4025e4:	sub    DWORD PTR [ecx],edx
  4025e6:	sub    DWORD PTR [edi+0x62],0x55
  4025ea:	xor    ebp,ebx
  4025ec:	mov    ds:0x8e2eb375,al
  4025f1:	out    0x36,eax
  4025f3:	mov    ecx,0xf46a319
  4025f8:	int    0xcf
  4025fa:	scas   al,BYTE PTR es:[edi]
  4025fb:	call   ebp
  4025fd:	pusha  
  4025fe:	popf   
  4025ff:	sub    ebx,DWORD PTR [ebx+0x79]
  402602:	rcl    bl,1
  402604:	les    edi,FWORD PTR [eax]
  402606:	adc    DWORD PTR [edi+0x7eb87d2b],edx
  40260c:	mov    eax,0xd570c4c9
  402611:	loop   0x4025eb
  402613:	add    DWORD PTR [ebx],ebp
  402615:	lods   eax,DWORD PTR ds:[esi]
  402616:	or     esp,DWORD PTR [edx-0x10]
  402619:	(bad)  
  40261a:	mov    al,0x5d
  40261c:	rcl    BYTE PTR [eax+0x25],cl
  40261f:	add    dh,BYTE PTR [edx+0x7c89dd8a]
  402625:	mov    edx,0xfdda8a96
  40262b:	mov    edi,0x7d54c492
  402630:	icebp  
  402631:	shl    edx,1
  402633:	test   bh,ch
  402635:	out    0xa6,eax
  402637:	pop    ss
  402638:	dec    edi
  402639:	ss push esi
  40263b:	fwait
  40263c:	aad    0x90
  40263e:	inc    ebp
  40263f:	not    DWORD PTR [eax-0xf]
  402642:	pop    ss
  402643:	xchg   edx,eax
  402644:	lds    esp,FWORD PTR [eax-0x5d]
  402647:	imul   edx,DWORD PTR [edi],0x62d1befc
  40264d:	sub    ch,BYTE PTR [edi+ebp*4]
  402650:	cli    
  402651:	enter  0xc708,0x5d
  402655:	dec    ebp
  402656:	mov    esp,0x9f73628b
  40265b:	pop    eax
  40265c:	int3   
  40265d:	sub    eax,0x32941581
  402662:	jno    0x402621
  402664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402665:	and    al,0x8e
  402667:	retf   0x9bcf
  40266a:	jae    0x40267c
  40266c:	mov    al,0xcc
  40266e:	cli    
  40266f:	and    esi,esp
  402671:	add    al,0x8f
  402673:	mov    ds:0x447d9830,al
  402678:	jne    0x40261f
  40267a:	mov    ch,0xe
  40267c:	mov    al,0xa3
  40267e:	adc    DWORD PTR [esi-0x5b],ebx
  402681:	xchg   ebp,eax
  402682:	and    BYTE PTR [esi+0x3f8bf9ae],0x4e
  402689:	cmp    BYTE PTR [edi-0x622908aa],bh
  40268f:	inc    esp
  402690:	loopne 0x4026e0
  402692:	dec    ebx
  402693:	sbb    DWORD PTR [esi],0xd40a8e68
  402699:	les    edx,FWORD PTR [edx]
  40269b:	(bad)  
  40269c:	push   ds
  40269d:	mov    dh,BYTE PTR [ebx+0x57dd77c2]
  4026a3:	jmp    0x40265b
  4026a5:	push   ss
  4026a6:	aad    0x17
  4026a8:	xor    eax,0x8f85d9df
  4026ad:	push   0xfffffffa
  4026af:	push   ecx
  4026b0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4026b2:	mov    esi,edi
  4026b4:	(bad)  
  4026b5:	rol    dl,1
  4026b7:	mov    bl,cl
  4026b9:	xor    BYTE PTR [edi+0x20],dh
  4026bc:	out    0xdc,eax
  4026be:	or     al,0xc7
  4026c0:	cmp    DWORD PTR ds:0x191066a9,edx
  4026c6:	in     al,0xfc
  4026c8:	push   edi
  4026c9:	in     eax,dx
  4026ca:	fiadd  DWORD PTR [eax-0x2caf9bda]
  4026d0:	and    BYTE PTR [edx-0x62],bl
  4026d3:	cli    
  4026d4:	nop
  4026d5:	jmp    0x402669
  4026d7:	mov    ch,0x32
  4026d9:	push   esi
  4026da:	sub    eax,0xc9c727c2
  4026df:	or     ebx,DWORD PTR [eax+edx*8]
  4026e2:	cdq    
  4026e3:	lods   al,BYTE PTR ds:[esi]
  4026e4:	frstor [eax]
  4026e6:	pop    ds
  4026e7:	cmp    esp,esp
  4026e9:	ror    DWORD PTR [eax+0x58],cl
  4026ec:	jb     0x402692
  4026ee:	inc    ecx
  4026ef:	push   es
  4026f0:	loopne 0x4026b8
  4026f2:	lahf   
  4026f3:	adc    eax,0x18222d3c
  4026f8:	xor    BYTE PTR ss:[ebp+eiz*4-0x6a],ah
  4026fd:	jge    0xb47ab84f
  402703:	lods   eax,DWORD PTR ds:[esi]
  402704:	mov    ch,0xc5
  402706:	sub    al,0x9d
  402708:	xchg   edi,eax
  402709:	push   es
  40270a:	outs   dx,BYTE PTR ds:[esi]
  40270b:	inc    edx
  40270c:	stos   DWORD PTR es:[edi],eax
  40270d:	jno    0x402703
  40270f:	jge    0x402731
  402711:	cwde   
  402712:	mov    DWORD PTR [ebx+0x255db3bc],eax
  402718:	out    0x5,al
  40271a:	push   edi
  40271b:	shl    BYTE PTR [eax],1
  40271d:	pusha  
  40271e:	icebp  
  40271f:	repz mov al,0x68
  402722:	in     eax,dx
  402723:	(bad)  
  402724:	mov    eax,ds:0xb7c664f2
  402729:	xor    dl,BYTE PTR [eax-0xd]
  40272c:	loope  0x402713
  40272e:	xchg   esi,eax
  40272f:	(bad)  
  402730:	das    
  402731:	stc    
  402732:	push   eax
  402733:	popa   
  402734:	(bad)
  402737:	and    esi,eax
  402739:	fistp  WORD PTR [bp+si]
  40273c:	ficom  WORD PTR [ebp-0x15]
  40273f:	cwde   
  402740:	ror    BYTE PTR [edi-0x3f0f27c1],cl
  402746:	ss mov eax,ecx
  402749:	scas   eax,DWORD PTR es:[edi]
  40274a:	out    dx,al
  40274b:	stos   BYTE PTR es:[edi],al
  40274c:	jne    0x40277e
  40274e:	lahf   
  40274f:	xchg   esp,eax
  402750:	sbb    dl,dl
  402752:	out    0x53,eax
  402754:	cwde   
  402755:	xchg   ebx,eax
  402756:	xchg   ebp,eax
  402757:	jecxz  0x40275f
  402759:	add    al,0x8b
  40275b:	dec    edx
  40275c:	cmc    
  40275d:	cmp    ah,bh
  40275f:	dec    ebp
  402760:	test   eax,0x9863320e
  402765:	jl     0x402703
  402767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402768:	or     eax,ecx
  40276a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40276b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40276c:	fwait
  40276d:	cmp    BYTE PTR [edi+0x4fc1e85c],0xa7
  402774:	cmp    cl,BYTE PTR [esi+eax*4]
  402777:	aad    0x4f
  402779:	sub    edi,ebx
  40277b:	arpl   WORD PTR [ecx-0x2c91de4b],bp
  402781:	push   es
  402782:	inc    eax
  402783:	mov    eax,0x94180ada
  402788:	push   eax
  402789:	dec    eax
  40278a:	xor    BYTE PTR [edx+0x60],ah
  40278d:	inc    edx
  40278e:	call   0x1194f5d1
  402793:	xor    dh,bl
  402795:	(bad)  
  402796:	jmp    0x4204324f
  40279b:	mov    ds:0x262419f9,al
  4027a0:	int3   
  4027a1:	mov    BYTE PTR [edi-0x78],dh
  4027a4:	xchg   eax,ebx
  4027a6:	fucomp st(5)
  4027a8:	data16 sti 
  4027aa:	jmp    0xf61e75c5
  4027af:	mov    al,0x6d
  4027b1:	test   eax,0x20903c51
  4027b6:	sub    DWORD PTR [ecx+0xaa89860],ecx
  4027bc:	xor    ecx,edx
  4027be:	shl    DWORD PTR [esi],0x2b
  4027c1:	aam    0xff
  4027c3:	pop    ds
  4027c4:	or     bh,bh
  4027c6:	invd   
  4027c8:	fwait
  4027c9:	inc    esi
  4027ca:	or     ecx,DWORD PTR [ebp+0x24]
  4027cd:	sub    al,0x8e
  4027cf:	sti    
  4027d0:	mov    edi,0x48f742b0
  4027d5:	dec    eax
  4027d6:	jecxz  0x402767
  4027d8:	and    BYTE PTR [ebx-0x58],dl
  4027db:	adc    BYTE PTR [esi+0x24],bh
  4027de:	mov    ?,WORD PTR [ebp+0x46]
  4027e1:	pop    edi
  4027e2:	mov    BYTE PTR [edx],0x92
  4027e5:	hlt    
  4027e6:	xchg   ecx,eax
  4027e7:	cmp    dh,BYTE PTR [edx+0x31321d80]
  4027ed:	stc    
  4027ee:	cmp    BYTE PTR [esi+eax*8+0xe],cl
  4027f2:	mov    al,ds:0xcb39ed38
  4027f7:	jno    0x40279f
  4027f9:	pusha  
  4027fa:	punpckldq mm2,mm6
  4027fd:	inc    edi
  4027fe:	mov    al,ds:0x6ad3d39d
  402803:	sbb    DWORD PTR [eax-0x2f],ebp
  402806:	mov    ah,BYTE PTR ds:0xd66d2e9c
  40280c:	inc    ebx
  40280d:	ret    0xaf3d
  402810:	xchg   ebx,eax
  402811:	mov    eax,0xaee86f6e
  402816:	add    BYTE PTR [ebp+0x3b],dl
  402819:	mov    ch,0xa
  40281b:	dec    eax
  40281c:	retf   0x8dab
  40281f:	add    bl,BYTE PTR [eax-0x60]
  402822:	bound  ecx,QWORD PTR [ebx]
  402824:	test   eax,0x1e5bf00c
  402829:	jmp    0x61b8288e
  40282e:	gs jnp 0x402883
  402831:	pop    edi
  402832:	dec    esi
  402833:	mov    eax,0x86dfff5c
  402838:	sbb    DWORD PTR [ecx+0x3181fdef],esp
  40283e:	dec    ebp
  40283f:	mov    DWORD PTR [ecx+0x36b6db0f],ecx
  402845:	or     DWORD PTR [esi+ecx*4],ebp
  402848:	sub    al,0xad
  40284a:	outs   dx,DWORD PTR ds:[esi]
  40284b:	dec    ebx
  40284c:	rcl    DWORD PTR [eax+0x34],0xbe
  402850:	add    DWORD PTR [ebp+0x9c37919],edx
  402856:	test   ebp,0x9f34c8fe
  40285c:	sbb    al,0x8e
  40285e:	scas   eax,DWORD PTR es:[edi]
  40285f:	push   edx
  402860:	jle    0x402853
  402862:	aas    
  402863:	outs   dx,BYTE PTR ds:[esi]
  402864:	ret    0x597e
  402867:	push   es
  402868:	xchg   ecx,eax
  402869:	xchg   ebx,eax
  40286a:	or     dh,ah
  40286c:	test   bh,0x44
  40286f:	sub    ebx,DWORD PTR ds:0x8393a05b
  402875:	mov    dl,0xa9
  402877:	sbb    eax,0x256a560b
  40287c:	mov    esi,0xf8eace2b
  402881:	rcr    DWORD PTR gs:[esi+0x52ecb12a],cl
  402888:	jne    0x4028e2
  40288a:	xchg   eax,edx
  40288c:	adc    ebx,DWORD PTR es:[edi+0x6a]
  402890:	aas    
  402891:	dec    esi
  402892:	in     al,0xf3
  402894:	or     ch,ch
  402896:	jns    0x4028df
  402898:	outs   dx,BYTE PTR ds:[esi]
  402899:	out    0x25,eax
  40289b:	xor    bl,BYTE PTR [edi+0x6]
  40289e:	fmulp  st(5),st
  4028a0:	or     eax,0x50d715ae
  4028a5:	mov    ds,esi
  4028a7:	ja     0x402830
  4028a9:	stos   BYTE PTR es:[edi],al
  4028aa:	jl     0x402856
  4028ac:	inc    ebp
  4028ad:	push   edx
  4028ae:	inc    esp
  4028af:	out    0xc1,al
  4028b1:	mov    cl,0xa9
  4028b3:	js     0x4028f8
  4028b5:	rcr    BYTE PTR [esi+ebp*4],1
  4028b8:	lods   al,BYTE PTR ds:[esi]
  4028b9:	ja     0x4028e5
  4028bb:	inc    eax
  4028bc:	pop    esp
  4028bd:	mov    edx,?
  4028bf:	mov    WORD PTR [esi],es
  4028c1:	stc    
  4028c2:	cmc    
  4028c3:	sbb    ebx,esp
  4028c5:	push   ebx
  4028c6:	mov    ds:0x2d06fc2d,al
  4028cb:	jbe    0x402856
  4028cd:	retf   
  4028ce:	and    BYTE PTR [edi],cl
  4028d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028d1:	push   esp
  4028d2:	cld    
  4028d3:	leave  
  4028d4:	or     bl,ch
  4028d6:	push   esi
  4028d7:	xchg   edi,eax
  4028d8:	hlt    
  4028d9:	dec    edi
  4028da:	xchg   BYTE PTR [eax],ah
  4028dc:	mov    ds:0x6770ad4a,al
  4028e1:	dec    ecx
  4028e2:	(bad)  
  4028e3:	fdivp  st(7),st
  4028e5:	and    edx,DWORD PTR [edi-0x74]
  4028e8:	dec    edx
  4028e9:	mov    ss,WORD PTR [eax-0x69e17bbd]
  4028ef:	aad    0x95
  4028f1:	cmp    eax,0xdfd9efbc
  4028f6:	cmp    eax,0x6ae6190e
  4028fb:	gs call 0x28c5b3d6
  402901:	fucom  st(6)
  402903:	adc    DWORD PTR [ecx-0x1182eb92],0x332fea9d
  40290d:	(bad)  
  40290e:	je     0x4028a5
  402910:	or     edi,DWORD PTR [esi+0x5d7e4bc2]
  402916:	mov    es,WORD PTR [eax-0x3e]
  402919:	outs   dx,DWORD PTR ds:[esi]
  40291a:	iret   
  40291b:	inc    ebp
  40291c:	pop    ss
  40291d:	lods   eax,DWORD PTR ds:[esi]
  40291e:	mov    edi,0x6b922042
  402923:	ss sahf 
  402925:	lahf   
  402926:	repz sub BYTE PTR [ebx+0x49],bh
  40292a:	mov    ah,BYTE PTR [esi-0x4f]
  40292d:	imul   edi,DWORD PTR [edx-0x30],0x82d05e11
  402934:	adc    DWORD PTR ss:[esi+0x357acdfc],edx
  40293b:	mov    ah,0x82
  40293d:	and    BYTE PTR [eax+edx*1-0x72],ch
  402941:	scas   eax,DWORD PTR es:[edi]
  402942:	mov    BYTE PTR [ebx],ah
  402944:	push   edi
  402945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402946:	sti    
  402947:	mov    bl,0xf8
  402949:	sti    
  40294a:	xchg   ebx,eax
  40294b:	into   
  40294c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40294d:	and    BYTE PTR [edi-0x4a],bl
  402950:	aad    0x37
  402952:	leave  
  402953:	cmp    bl,bh
  402955:	out    0x9d,eax
  402957:	mov    eax,ds:0x8dafb1b9
  40295c:	mov    ecx,DWORD PTR [ebx-0x36aa5bb8]
  402962:	xchg   edi,eax
  402963:	pop    ebp
  402964:	adc    DWORD PTR [ebp+eax*2-0x44],edi
  402968:	push   esp
  402969:	stos   BYTE PTR es:[edi],al
  40296a:	inc    eax
  40296b:	les    esi,FWORD PTR [eax-0x3f7f841d]
  402971:	and    BYTE PTR [eax-0x2],0x2
  402975:	pop    ebx
  402976:	out    dx,eax
  402977:	xchg   ebp,eax
  402978:	nop
  402979:	dec    esi
  40297a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40297b:	and    DWORD PTR [esi],esi
  40297d:	pop    ss
  40297e:	sbb    DWORD PTR [eax+0x1b],0x3a7c7b7e
  402985:	dec    esi
  402986:	aas    
  402987:	into   
  402988:	and    ch,BYTE PTR [ebx]
  40298a:	and    BYTE PTR [edx+0x1],cl
  40298d:	push   es
  40298e:	pop    ecx
  40298f:	push   edx
  402990:	or     al,0x8d
  402992:	push   esp
  402993:	das    
  402994:	xchg   DWORD PTR [ecx],edi
  402996:	add    dl,cl
  402998:	jo     0x4029f6
  40299a:	cmp    al,0x46
  40299c:	lods   eax,DWORD PTR ds:[esi]
  40299d:	mov    ah,0x2e
  40299f:	sbb    eax,0xbb3cacf3
  4029a4:	xchg   BYTE PTR [edx+0x39],ch
  4029a7:	and    esi,DWORD PTR [esi+eiz*4+0x38]
  4029ab:	push   ds
  4029ac:	xchg   ecx,eax
  4029ad:	xor    eax,0xbf1a7027
  4029b2:	and    eax,0x1adb3cb3
  4029b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029b8:	or     al,0x9f
  4029ba:	push   edi
  4029bb:	xchg   esi,eax
  4029bc:	out    0xdb,eax
  4029be:	int    0x1b
  4029c0:	jg     0x4029b5
  4029c2:	out    0xce,eax
  4029c4:	jae    0x4029cf
  4029c6:	add    eax,DWORD PTR [esp+eiz*2]
  4029c9:	xor    BYTE PTR [esi+0x251a3016],dl
  4029cf:	cmc    
  4029d0:	xchg   DWORD PTR [ecx-0x31],esp
  4029d3:	push   ebx
  4029d4:	jno    0x4029aa
  4029d6:	inc    edx
  4029d7:	(bad)  
  4029d8:	lock and ecx,DWORD PTR [esi+0x6423a6ab]
  4029df:	mov    cl,0x3c
  4029e1:	jno    0x4029f3
  4029e3:	adc    dh,cl
  4029e5:	jbe    0x402a22
  4029e7:	sub    DWORD PTR [esi+0x47f4bbe0],esi
  4029ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ee:	fstp   TBYTE PTR [esi]
  4029f0:	adc    BYTE PTR [esi],al
  4029f2:	sbb    bl,ch
  4029f4:	cld    
  4029f5:	cs xchg esi,eax
  4029f7:	stos   BYTE PTR es:[edi],al
  4029f8:	jmp    0x402a02
  4029fa:	mov    ebp,0x571357f5
  4029ff:	fs fucomi st,st(6)
  402a02:	add    cl,BYTE PTR [ecx]
  402a04:	arpl   di,dx
  402a06:	into   
  402a07:	mov    edx,0x2b5a6b3b
  402a0c:	popa   
  402a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0e:	sbb    bl,0x70
  402a11:	pop    esi
  402a12:	push   es
  402a13:	push   edx
  402a14:	xchg   ebp,eax
  402a15:	(bad)  
  402a16:	rol    DWORD PTR [edi],cl
  402a18:	cmp    ch,BYTE PTR [esp+edi*8]
  402a1b:	cmc    
  402a1c:	pop    ebp
  402a1d:	hlt    
  402a1e:	add    al,0x4e
  402a20:	adc    eax,0x1b3e7907
  402a25:	pop    edx
  402a26:	sbb    bh,BYTE PTR [ebx-0x7]
  402a29:	add    eax,0x96e04c38
  402a2e:	ret    0x9c85
  402a31:	gs (bad) 
  402a33:	jmp    0x402a6d
  402a35:	pop    ds
  402a36:	pop    esp
  402a37:	and    ah,BYTE PTR [ebp+0x53]
  402a3a:	cmc    
  402a3b:	cmp    al,0xc1
  402a3d:	call   0x194c:0x5d791d5
  402a44:	loopne 0x402a97
  402a46:	cli    
  402a47:	ds sti 
  402a49:	inc    ecx
  402a4a:	xor    eax,0x9efea00a
  402a4f:	hlt    
  402a50:	mov    cl,0x39
  402a52:	in     eax,dx
  402a53:	adc    BYTE PTR [eax-0x76],0x0
  402a57:	cmp    ebx,DWORD PTR [ebx]
  402a59:	jns    0x402a7f
  402a5b:	data16 lahf 
  402a5d:	cmp    eax,0x106133a9
  402a62:	pop    ecx
  402a63:	xor    ecx,DWORD PTR [esi+eiz*1]
  402a66:	pop    DWORD PTR [edx+0x6cd86d87]
  402a6c:	push   ds
  402a6d:	push   0x225f80dc
  402a72:	in     al,0xfe
  402a74:	pop    esi
  402a75:	push   eax
  402a76:	sub    eax,0xa86692aa
  402a7b:	sbb    BYTE PTR [ebx-0x46],ah
  402a7e:	fld    QWORD PTR [ebp+0x4856a3db]
  402a84:	inc    ebx
  402a85:	dec    ebp
  402a86:	inc    edi
  402a87:	inc    edi
  402a88:	call   0x766c6e59
  402a8d:	loopne 0x402a28
  402a8f:	push   esi
  402a90:	mov    ch,0x4c
  402a92:	push   edi
  402a93:	cld    
  402a94:	mov    ebp,DWORD PTR [eax+0x53]
  402a97:	loop   0x402a58
  402a99:	cdq    
  402a9a:	or     BYTE PTR [ecx+eiz*1+0x53],0x2f
  402a9f:	leave  
  402aa0:	in     al,dx
  402aa1:	lds    esi,FWORD PTR [ebx-0x3c]
  402aa4:	jo     0x402ac0
  402aa6:	daa    
  402aa7:	mov    eax,0x26dcc802
  402aac:	mov    edx,0xf680c1f4
  402ab1:	std    
  402ab2:	es cli 
  402ab4:	inc    ecx
  402ab5:	test   al,0xab
  402ab7:	push   esi
  402ab8:	test   DWORD PTR ds:0x92aba2c7,edx
  402abe:	rol    BYTE PTR [edi+0x593613ee],cl
  402ac4:	xor    esi,eax
  402ac6:	aas    
  402ac7:	ins    BYTE PTR es:[edi],dx
  402ac8:	mov    esp,0xcc73004c
  402acd:	pop    ebx
  402ace:	ficom  WORD PTR [ebx+ebp*1+0x5]
  402ad2:	inc    edi
  402ad3:	add    al,0x16
  402ad5:	jne    0x402a6e
  402ad7:	fadd   QWORD PTR [ebx-0x34]
  402ada:	mov    ch,0xf8
  402adc:	sbb    BYTE PTR [ebx-0xa],0xa7
  402ae0:	or     cl,al
  402ae2:	out    0xd8,eax
  402ae4:	cli    
  402ae5:	jno    0x402a79
  402ae7:	frstor [esi]
  402ae9:	js     0x402a6f
  402aeb:	imul   esi,DWORD PTR cs:[bx+di-0x37],0xb4868364
  402af4:	inc    edi
  402af5:	leave  
  402af6:	fiadd  WORD PTR [edi-0xc]
  402af9:	push   esp
  402afa:	sar    DWORD PTR [eax-0x50],0x2a
  402afe:	mov    esi,0xca5e64a
  402b03:	mov    edx,0x7d86e4b6
  402b08:	dec    edx
  402b09:	cmp    al,0xc3
  402b0b:	fiadd  DWORD PTR [esp+eiz*2]
  402b0e:	pop    ecx
  402b0f:	out    dx,eax
  402b10:	mov    ebx,0x1b33b4e
  402b15:	sbb    cl,BYTE PTR ds:[ebx-0xe7bc015]
  402b1c:	ret    
  402b1d:	mov    eax,0xffa39ba0
  402b22:	jecxz  0x402aa5
  402b24:	cmp    al,0xb3
  402b26:	fistp  QWORD PTR [esp+eiz*8]
  402b29:	push   cs
  402b2a:	pop    esi
  402b2b:	sub    DWORD PTR [ebp+0x513ff630],ebx
  402b31:	sub    al,0xf8
  402b33:	ret    0xc2f7
  402b36:	test   DWORD PTR [esi+0x59bfe2f6],esi
  402b3c:	lods   eax,DWORD PTR ds:[esi]
  402b3d:	dec    edx
  402b3e:	int3   
  402b3f:	ins    BYTE PTR es:[edi],dx
  402b40:	or     al,0x3c
  402b42:	test   esi,ecx
  402b44:	loopne 0x402b33
  402b46:	push   0x7b6c4acb
  402b4b:	loop   0x402ae5
  402b4d:	cmp    eax,0x32ec85e7
  402b52:	jle    0x402b7c
  402b54:	xchg   edi,eax
  402b55:	pop    eax
  402b56:	out    dx,eax
  402b57:	fcomp  st(7)
  402b59:	(bad)  
  402b5a:	jae    0x402b6b
  402b5c:	xchg   DWORD PTR [ebx+esi*4],ebx
  402b5f:	rol    BYTE PTR [eax-0x58],cl
  402b62:	jg     0x402af4
  402b64:	std    
  402b65:	jge    0x402ba4
  402b67:	add    BYTE PTR [edi],cl
  402b69:	rcl    DWORD PTR [esi-0x10],1
  402b6c:	inc    DWORD PTR [edx-0x7b952280]
  402b72:	mov    eax,0xbb0b5abe
  402b77:	sbb    eax,0x3cfec342
  402b7c:	pop    ebx
  402b7d:	enter  0x841,0x5c
  402b81:	imul   ebx,DWORD PTR [esi+0x3aa776a0],0x69
  402b88:	pop    ss
  402b89:	popf   
  402b8a:	push   ss
  402b8b:	inc    edi
  402b8c:	das    
  402b8d:	(bad)  
  402b8e:	lahf   
  402b8f:	jbe    0x402b62
  402b91:	inc    esp
  402b92:	xor    BYTE PTR [ecx],bl
  402b94:	in     al,dx
  402b95:	push   0xffffffaf
  402b97:	popa   
  402b98:	pop    DWORD PTR [eax]
  402b9a:	dec    esp
  402b9b:	xchg   esp,eax
  402b9c:	sar    dl,cl
  402b9e:	int    0x14
  402ba0:	jns    0x402bfc
  402ba2:	xor    al,BYTE PTR [eax]
  402ba4:	xor    BYTE PTR [esi+0x62],dh
  402ba7:	mov    bl,0xe0
  402ba9:	inc    ecx
  402baa:	xchg   BYTE PTR [ebx-0x49],ah
  402bad:	loope  0x402bf5
  402baf:	loopne 0x402b42
  402bb1:	pop    esp
  402bb2:	aas    
  402bb3:	fwait
  402bb4:	sti    
  402bb5:	fs jl  0x402bb6
  402bb8:	sbb    DWORD PTR [ebx-0x59ebf5f6],eax
  402bbe:	out    dx,al
  402bbf:	in     al,0x8d
  402bc1:	(bad)  
  402bc2:	mov    ds:0xdf56d706,eax
  402bc7:	ret    
  402bc8:	repnz adc esi,DWORD PTR [esi]
  402bcb:	(bad)  
  402bcc:	jns    0x402bcf
  402bce:	xor    al,0x7f
  402bd0:	xlat   BYTE PTR ds:[ebx]
  402bd1:	es ins DWORD PTR es:[edi],dx
  402bd3:	mov    al,ch
  402bd5:	dec    edi
  402bd6:	xchg   esi,eax
  402bd7:	pop    es
  402bd8:	cld    
  402bd9:	jge    0x402b9e
  402bdb:	call   0x71500b2d
  402be0:	add    eax,0x6dfb6ef0
  402be5:	jge    0x402b77
  402be7:	sub    DWORD PTR [esi-0x41a448ba],0x7d68800f
  402bf1:	add    esp,0x7cda6470
  402bf7:	sub    eax,0x60c57cd2
  402bfc:	shl    BYTE PTR [esi+0x15],cl
  402bff:	jnp    0x402c4a
  402c01:	fimul  DWORD PTR [eax]
  402c03:	test   DWORD PTR [ebp+0x26],0x57099762
  402c0a:	(bad)  
  402c0b:	jp     0x402bf0
  402c0d:	sub    ecx,0x71
  402c10:	add    DWORD PTR [eax],edi
  402c12:	push   edi
  402c13:	sbb    DWORD PTR [esi+0x74],edi
  402c16:	mov    ebp,0x20bd8951
  402c1b:	and    al,BYTE PTR [ebx-0x2c114c17]
  402c21:	dec    edx
  402c22:	or     al,0x6d
  402c24:	or     esi,ecx
  402c26:	jmp    0xe56799fd
  402c2b:	dec    ecx
  402c2c:	dec    ebp
  402c2d:	fnclex 
  402c2f:	aad    0xc4
  402c31:	adc    eax,0xb11a5bbe
  402c36:	sahf   
  402c37:	jmp    eax
  402c39:	cmp    eax,0xd9f7e8d2
  402c3e:	(bad)  
  402c3f:	enter  0xb35c,0xd2
  402c43:	cmp    BYTE PTR [ebx+edi*1],cl
  402c46:	jmp    0x402bef
  402c48:	push   es
  402c49:	and    esi,DWORD PTR [ebx+0x4dedb0f2]
  402c4f:	and    BYTE PTR [eax+0x1f],dl
  402c52:	ins    DWORD PTR es:[edi],dx
  402c53:	and    edi,DWORD PTR [edx+0x65db53ca]
  402c59:	jg     0x402cc6
  402c5b:	imul   ecx,DWORD PTR [ebp-0x1341580e],0x8d49bbe7
  402c65:	adc    eax,0xe37b5a74
  402c6a:	test   BYTE PTR [ebp+0x50ead43],bh
  402c70:	push   ds
  402c71:	inc    ebp
  402c72:	sub    eax,0x133d378b
  402c77:	push   edi
  402c78:	int    0xc9
  402c7a:	sub    edx,DWORD PTR [ebx+ebx*4-0x156e35db]
  402c81:	or     al,0xfc
  402c83:	sub    edx,DWORD PTR [ebx-0x41490a9a]
  402c89:	mov    esi,0x8d77a428
  402c8e:	push   esi
  402c8f:	or     esp,DWORD PTR [esi+0x329045c4]
  402c95:	push   0x71
  402c97:	ds sub al,0x26
  402c9a:	inc    eax
  402c9b:	icebp  
  402c9c:	push   0xffffff81
  402c9e:	fcmovb st,st(6)
  402ca0:	(bad)  
  402ca1:	leave  
  402ca2:	sub    eax,eax
  402ca4:	outs   dx,DWORD PTR ds:[esi]
  402ca5:	and    DWORD PTR [ebx+0x15],esp
  402ca8:	into   
  402ca9:	and    DWORD PTR [esi+0x75],esi
  402cac:	inc    esp
  402cad:	fwait
  402cae:	int    0x3b
  402cb0:	int    0x5f
  402cb2:	jae    0x402c97
  402cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb5:	scas   eax,DWORD PTR es:[edi]
  402cb6:	mov    bl,0x8e
  402cb8:	sbb    esi,DWORD PTR [eax-0x3e]
  402cbb:	adc    esi,ecx
  402cbd:	dec    esi
  402cbe:	sbb    ebp,esi
  402cc0:	fsubr  QWORD PTR [edi+0x3320da6b]
  402cc6:	aam    0xcf
  402cc8:	lods   eax,DWORD PTR ds:[esi]
  402cc9:	je     0x402c60
  402ccb:	adc    eax,DWORD PTR [ebx]
  402ccd:	inc    ecx
  402cce:	dec    ecx
  402ccf:	or     edx,DWORD PTR [ecx+0x4]
  402cd2:	aad    0xa2
  402cd4:	push   0x8629ff76
  402cd9:	mov    cl,0x93
  402cdb:	cdq    
  402cdc:	loope  0x402ceb
  402cde:	jmp    0x887d4cdb
  402ce3:	lea    ecx,[edx+0x36]
  402ce6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ce8:	addr16 pop edx
  402cea:	cld    
  402ceb:	dec    DWORD PTR [ecx]
  402ced:	pop    ecx
  402cee:	cld    
  402cef:	adc    eax,0xdbc08c67
  402cf4:	inc    DWORD PTR [ebx+ebx*4]
  402cf7:	jecxz  0x402cf4
  402cf9:	jb     0x402d66
  402cfb:	mov    dh,0x97
  402cfd:	or     eax,0x90a4162e
  402d02:	imul   eax,esi,0xf50a1c18
  402d08:	cmp    al,0x9
  402d0a:	cld    
  402d0b:	std    
  402d0c:	xchg   ebx,eax
  402d0e:	in     al,dx
  402d0f:	jl     0x402d3a
  402d11:	shl    BYTE PTR [ebx],1
  402d13:	mov    al,0x5d
  402d15:	xor    al,0x86
  402d17:	xor    eax,0x2a5c63cb
  402d1c:	xchg   esi,eax
  402d1d:	stc    
  402d1e:	pushf  
  402d1f:	je     0x402d45
  402d21:	mov    DWORD PTR [esi-0x70],edi
  402d24:	add    eax,0x8214b210
  402d29:	adc    al,0x8
  402d2b:	retf   
  402d2c:	pop    edi
  402d2d:	mov    ah,0x6c
  402d2f:	and    DWORD PTR [eax+0x42],0xffffff8e
  402d33:	inc    eax
  402d34:	mov    eax,ds:0x7c6215ba
  402d39:	push   0xb4b53e65
  402d3e:	mov    eax,0xcf8cdee8
  402d43:	push   0x7d9c69d6
  402d48:	adc    edx,ecx
  402d4a:	pop    edi
  402d4b:	pop    DWORD PTR [esp+esi*8-0x66]
  402d4f:	in     al,dx
  402d50:	mov    bl,0x25
  402d52:	mov    bl,0x66
  402d54:	pop    ss
  402d55:	or     al,0x77
  402d57:	je     0x402d25
  402d59:	lods   eax,DWORD PTR ds:[esi]
  402d5a:	test   esp,0x7fe276ed
  402d60:	mul    BYTE PTR [esi+0x1]
  402d63:	inc    eax
  402d64:	ds pop ss
  402d66:	push   edi
  402d67:	syscall 
  402d69:	ret    
  402d6a:	daa    
  402d6b:	inc    esp
  402d6c:	in     al,0x32
  402d6e:	lds    esp,FWORD PTR [ebx+0x72]
  402d71:	or     esi,eax
  402d73:	mov    dh,0x37
  402d75:	mov    ecx,DWORD PTR [edx]
  402d77:	jns    0x402d9d
  402d79:	mov    al,ds:0xcaf5e1f8
  402d7e:	cmp    ecx,DWORD PTR [edi]
  402d80:	xchg   DWORD PTR [ebx-0x77],eax
  402d83:	adc    ebp,ebp
  402d85:	inc    BYTE PTR [edi+0x50]
  402d88:	dec    esi
  402d89:	out    0x32,eax
  402d8b:	rcr    DWORD PTR cs:[ebp-0x7d8748ec],1
  402d92:	mov    dl,0x45
  402d94:	add    BYTE PTR ds:0xa7902800,ch
  402d9a:	or     eax,0x7b53965f
  402d9f:	sub    al,0xdd
  402da1:	loopne 0x402da2
  402da3:	jno    0x402d70
  402da5:	mov    edx,0xdbb12e90
  402daa:	and    DWORD PTR [ecx+0x7bf540e3],ecx
  402db0:	mov    al,ds:0x92fbe45b
  402db5:	mov    ds:0x89956e62,eax
  402dba:	in     eax,0xab
  402dbc:	mov    BYTE PTR [eax+0x6cc57b7f],cl
  402dc2:	test   al,0x61
  402dc4:	in     al,0xae
  402dc6:	jg     0x402d72
  402dc8:	inc    edx
  402dc9:	sub    DWORD PTR [edx+0x310af6bc],eax
  402dcf:	aaa    
  402dd0:	mov    bh,0x72
  402dd2:	xchg   esp,eax
  402dd3:	(bad)  
  402dd4:	je     0x402de5
  402dd6:	inc    esi
  402dd7:	inc    edx
  402dd8:	rol    BYTE PTR [edi],1
  402dda:	scas   al,BYTE PTR es:[edi]
  402ddb:	clc    
  402ddc:	and    eax,0xc44df072
  402de1:	sbb    cl,BYTE PTR [edx-0x3dd5792e]
  402de7:	imul   edi,DWORD PTR [ebx-0x57],0xffffff8d
  402deb:	add    esp,DWORD PTR [edi-0x25]
  402dee:	sub    BYTE PTR [esi+0x22e9ae91],dl
  402df4:	test   al,0x38
  402df6:	ja     0x402e52
  402df8:	addr16 sub al,0xe2
  402dfb:	fild   QWORD PTR [edi-0x66]
  402dfe:	scas   eax,DWORD PTR es:[edi]
  402dff:	lds    edx,FWORD PTR [esi-0x34]
  402e02:	cld    
  402e03:	mov    ecx,0xe77eb30d
  402e08:	mov    dl,0x9a
  402e0a:	cli    
  402e0b:	push   eax
  402e0c:	mov    al,0xf8
  402e0e:	aaa    
  402e0f:	cmp    BYTE PTR [ecx-0x1d],0x43
  402e13:	mov    esi,0x687ec888
  402e18:	wrmsr  
  402e1a:	cmp    edi,esi
  402e1c:	scas   al,BYTE PTR es:[edi]
  402e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e1e:	sub    eax,0xac5813b8
  402e23:	ins    BYTE PTR es:[edi],dx
  402e24:	push   ebp
  402e25:	jg     0x402e32
  402e27:	mov    eax,0x4a913ad4
  402e2c:	clc    
  402e2d:	sbb    al,0xfb
  402e2f:	adc    ebp,DWORD PTR [ebx+0x78db2236]
  402e35:	call   0x3e22:0x4223fe69
  402e3c:	mov    edx,0x5323ce67
  402e41:	mov    cl,0xe6
  402e43:	sti    
  402e44:	scas   al,BYTE PTR es:[edi]
  402e45:	dec    esp
  402e46:	mov    DWORD PTR [ebx+eax*1-0x3],edx
  402e4a:	out    0xa7,al
  402e4c:	les    esi,FWORD PTR [eax]
  402e4e:	fldcw  WORD PTR [ecx]
  402e50:	in     al,0x9e
  402e52:	je     0x402e1c
  402e54:	push   esp
  402e55:	push   ecx
  402e56:	pop    edx
  402e57:	sbb    DWORD PTR [ebx-0x3],0x71
  402e5b:	loopne 0x402e37
  402e5d:	push   0xffffff95
  402e5f:	push   esp
  402e60:	jmp    0xc8fa:0xfd5f4050
  402e67:	scas   eax,DWORD PTR es:[edi]
  402e68:	mov    bl,0x45
  402e6a:	bound  ebp,QWORD PTR [esi+0x1e130a61]
  402e70:	mov    WORD PTR [edi-0x43934d80],ss
  402e76:	sub    ah,al
  402e78:	sar    BYTE PTR ds:0x5299d6a5,0x51
  402e7f:	fisttp DWORD PTR [edi-0x26]
  402e82:	fwait
  402e83:	jecxz  0x402ebd
  402e85:	test   DWORD PTR [ebx+ebx*4-0x6f3f08fe],0xe5d48dfa
  402e90:	adc    BYTE PTR [ecx+0x27],bh
  402e93:	dec    ebp
  402e94:	gs or  al,0xa
  402e97:	pop    edi
  402e98:	inc    ebp
  402e99:	mov    ds:0xb2899f19,al
  402e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e9f:	addr16 sbb dl,dl
  402ea2:	cmp    bl,bl
  402ea4:	popa   
  402ea5:	das    
  402ea6:	arpl   WORD PTR [ebx],cx
  402ea8:	push   ds
  402ea9:	in     al,0xe0
  402eab:	cmp    ebp,eax
  402ead:	adc    esi,DWORD PTR [edx]
  402eaf:	jae    0x402f04
  402eb1:	push   ds
  402eb2:	ins    DWORD PTR es:[edi],dx
  402eb3:	push   0xffffffc2
  402eb5:	hlt    
  402eb6:	out    0x6c,al
  402eb8:	and    ebp,DWORD PTR [edi]
  402eba:	test   al,0x16
  402ebc:	test   eax,0xaca546e8
  402ec1:	push   cs
  402ec2:	(bad)  
  402ec3:	mov    ds:0xff035035,al
  402ec8:	leave  
  402ec9:	into   
  402eca:	mov    esp,DWORD PTR [edx+0x49eb7cf2]
  402ed0:	fstp   QWORD PTR ds:0x724d122e
  402ed6:	dec    ebx
  402ed7:	(bad)  
  402ed8:	pop    esp
  402ed9:	pop    edx
  402eda:	neg    DWORD PTR [edx]
  402edc:	minps  xmm7,XMMWORD PTR [edx-0x3c]
  402ee0:	lahf   
  402ee1:	jne    0x402f47
  402ee3:	out    dx,eax
  402ee4:	or     DWORD PTR [esi+0x7ebc77c7],0x106700fc
  402eee:	pop    esi
  402eef:	dec    ebx
  402ef0:	outs   dx,DWORD PTR ds:[esi]
  402ef1:	pop    esi
  402ef2:	mov    bh,0x17
  402ef4:	int    0xc4
  402ef6:	mov    dh,0xbd
  402ef8:	pop    edi
  402ef9:	xchg   edx,eax
  402efa:	push   esp
  402efb:	xor    ebx,DWORD PTR [ebp-0x7]
  402efe:	mov    esp,0xfdb89434
  402f03:	lods   al,BYTE PTR ds:[esi]
  402f04:	jg     0x402f30
  402f06:	add    esp,ecx
  402f08:	jmp    0x402ea8
  402f0a:	sar    DWORD PTR [esi-0x78],0xf
  402f0e:	pop    ds
  402f0f:	enter  0xaf22,0xcf
  402f13:	mov    ch,ch
  402f15:	add    BYTE PTR [ebx-0x64],dl
  402f18:	adc    edx,DWORD PTR [ecx+0x7757b4c8]
  402f1e:	jmp    0xd8ab:0x1eb79bc8
  402f25:	and    ebx,DWORD PTR [edx-0x147e77bb]
  402f2b:	mov    dl,0x31
  402f2d:	neg    BYTE PTR [esi-0x63]
  402f30:	sti    
  402f31:	inc    esi
  402f32:	cwde   
  402f33:	pop    ecx
  402f34:	loopne 0x402f96
  402f36:	push   cs
  402f37:	(bad)  
  402f38:	std    
  402f39:	cmp    al,0x82
  402f3b:	ret    0x33ba
  402f3e:	js     0x402fa2
  402f40:	loopne 0x402f72
  402f42:	(bad)  
  402f43:	loop   0x402f7c
  402f45:	repnz adc ch,BYTE PTR [ebp-0x5ff4047f]
  402f4c:	stos   DWORD PTR es:[edi],eax
  402f4d:	out    0x31,al
  402f4f:	add    al,0x89
  402f51:	cld    
  402f52:	cs sbb eax,ebp
  402f55:	(bad)  
  402f56:	loop   0x402f96
  402f58:	mov    ebp,0xa8026013
  402f5d:	jb     0x402f4e
  402f5f:	ins    DWORD PTR es:[edi],dx
  402f60:	mov    bl,0xb
  402f62:	mov    dl,0x4b
  402f64:	test   eax,0x3befb610
  402f69:	cs ins BYTE PTR es:[edi],dx
  402f6b:	dec    esp
  402f6c:	and    eax,DWORD PTR [esi+0x6]
  402f6f:	(bad)  
  402f70:	loope  0x402f64
  402f72:	sub    bh,ah
  402f74:	leave  
  402f75:	cmc    
  402f76:	adc    eax,DWORD PTR [esp+ecx*2-0x6cecc79e]
  402f7d:	fcmovbe st,st(6)
  402f7f:	lods   al,BYTE PTR ds:[esi]
  402f80:	inc    BYTE PTR [ebp+0x3a]
  402f83:	mov    dh,0xb9
  402f85:	call   0x40e1:0x8edcbaf4
  402f8c:	fs xchg dh,cl
  402f8f:	mov    ecx,0xefa930c0
  402f94:	push   ss
  402f95:	test   eax,0x46c0daf5
  402f9a:	and    dl,ah
  402f9c:	stc    
  402f9d:	ins    DWORD PTR es:[edi],dx
  402f9e:	test   DWORD PTR [eax],edx
  402fa0:	popf   
  402fa1:	sbb    eax,0xac42fc4a
  402fa6:	jns    0x402f2a
  402fa8:	ja     0x402f97
  402faa:	out    dx,al
  402fab:	push   edi
  402fac:	adc    eax,0x2c6bd349
  402fb1:	mov    eax,ds:0x33f0b3b5
  402fb6:	jo     0x402fb1
  402fb8:	pop    esi
  402fb9:	fisub  DWORD PTR [edi]
  402fbb:	mov    ds:0x4bda276d,al
  402fc0:	cs inc eax
  402fc2:	daa    
  402fc3:	cmc    
  402fc4:	pusha  
  402fc5:	ret    
  402fc6:	mov    al,ds:0x6ed44df2
  402fcb:	lahf   
  402fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fcd:	and    BYTE PTR [edx+0x30d009f7],bl
  402fd3:	imul   ebp,DWORD PTR [eax],0x6e
  402fd6:	push   edi
  402fd7:	pop    ebx
  402fd8:	sbb    DWORD PTR [esi],0x5b9349f6
  402fde:	arpl   WORD PTR ss:[eax-0x1b],ax
  402fe2:	xor    al,0xe
  402fe4:	pop    eax
  402fe5:	daa    
  402fe6:	mov    ah,0x0
  402fe8:	mov    al,0x3c
  402fea:	inc    esi
  402feb:	fwait
  402fec:	mov    BYTE PTR [ecx+0x13bf83e9],ah
  402ff2:	adc    eax,0xe70d839f
  402ff7:	icebp  
  402ff8:	popa   
  402ff9:	xchg   edi,eax
  402ffa:	loopne 0x402fef
  402ffc:	or     ecx,DWORD PTR [esi-0x2f5ded44]
  403002:	(bad)  
  403003:	xor    al,BYTE PTR [ecx-0xf]
  403006:	sub    eax,0x74a30aa2
  40300b:	lea    edi,[edi-0x76]
  40300e:	std    
  40300f:	cs add cl,bh
  403012:	inc    eax
  403013:	(bad)  [ebp+0x5d64d4c8]
  403019:	dec    eax
  40301a:	mov    ds:0x52ef2a5a,al
  40301f:	aas    
  403020:	fiadd  WORD PTR ds:0x35de4a97
  403026:	fsub   QWORD PTR [ebx]
  403028:	test   al,0xd7
  40302a:	and    eax,0x2eedc1da
  40302f:	sub    ebx,DWORD PTR [edx+0x74]
  403032:	ret    0x6d81
  403035:	(bad)  
  403036:	outs   dx,BYTE PTR ds:[esi]
  403037:	pop    ebx
  403038:	jmp    0xa4df:0x6074508c
  40303f:	fist   DWORD PTR ss:[ecx]
  403042:	stos   BYTE PTR es:[edi],al
  403043:	xchg   edi,eax
  403044:	int3   
  403045:	add    eax,0xd73df475
  40304a:	cld    
  40304b:	xchg   edx,eax
  40304c:	ficomp WORD PTR ds:0x6e365e6b
  403052:	push   0x62185f23
  403057:	jns    0x403087
  403059:	and    DWORD PTR [eax+0x799afe53],esp
  40305f:	mov    esi,0x9557fd6c
  403064:	mov    WORD PTR [ebp-0x2d],es
  403067:	or     eax,0x4f850ba8
  40306c:	mov    ds:0xc7a7df55,eax
  403071:	and    dl,BYTE PTR [edi-0x215598d7]
  403077:	add    dh,dh
  403079:	cmp    ebx,DWORD PTR [edi+0x795ab787]
  40307f:	je     0x403100
  403081:	loop   0x403032
  403083:	adc    al,0x3e
  403085:	pusha  
  403086:	adc    DWORD PTR [eax],ebp
  403088:	(bad)  
  403089:	mov    BYTE PTR [edx],bl
  40308b:	mov    bh,0x70
  40308d:	loop   0x403038
  40308f:	cmp    esp,DWORD PTR [ecx]
  403091:	sub    bl,BYTE PTR [edi]
  403093:	mov    bh,0x9b
  403095:	aaa    
  403096:	dec    edx
  403097:	cmp    al,0x5c
  403099:	retf   0x3297
  40309c:	add    eax,0x2f22d9ba
  4030a1:	add    DWORD PTR [edx+0x5c9486ef],esi
  4030a7:	cld    
  4030a8:	mov    cl,0x8d
  4030aa:	xchg   ax,ax
  4030ac:	outs   dx,BYTE PTR ds:[esi]
  4030ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ae:	and    BYTE PTR ds:0xab8d3ee,0x43
  4030b5:	xor    BYTE PTR [edi+0x6d],ah
  4030b8:	pop    eax
  4030b9:	adc    bl,BYTE PTR [eax]
  4030bb:	lahf   
  4030bc:	repnz add al,0xf2
  4030bf:	mov    ebx,ebp
  4030c1:	push   esi
  4030c2:	add    al,0x3d
  4030c4:	sub    ebx,DWORD PTR [eax+0x590ec2b7]
  4030ca:	jp     0x40307c
  4030cc:	mov    edx,0x8fa9e206
  4030d1:	loopne 0x40311d
  4030d3:	popa   
  4030d4:	and    al,0xa
  4030d6:	push   edx
  4030d7:	jg     0x40311b
  4030d9:	popf   
  4030da:	(bad)  
  4030db:	repz sub eax,0x90d91a90
  4030e1:	jmp    0x4030da
  4030e3:	sub    bh,BYTE PTR [esi-0x60]
  4030e6:	fisubr DWORD PTR [ebx+0x48]
  4030e9:	sbb    ch,BYTE PTR [edx+0x40]
  4030ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ed:	mov    ds:0xb925048a,al
  4030f2:	lods   al,BYTE PTR ds:[esi]
  4030f3:	mov    esi,DWORD PTR [edx+0x7]
  4030f6:	push   0xfffffff2
  4030f8:	in     eax,0xc2
  4030fa:	imul   esp,DWORD PTR [eax+ebp*1],0xfffffff2
  4030fe:	repz inc ebx
  403100:	dec    edi
  403101:	lods   al,BYTE PTR ds:[esi]
  403102:	cmp    bl,ah
  403104:	pushf  
  403105:	or     BYTE PTR [edx+0x4d],cl
  403108:	cmp    ch,dl
  40310a:	pop    ds
  40310b:	sbb    DWORD PTR [eax-0x12d69efb],0xf7f9865f
  403115:	mov    edx,0x3a2e1617
  40311a:	iret   
  40311b:	sbb    BYTE PTR [eax+0x58],cl
  40311e:	mov    ds:0xb6c2ac1b,al
  403123:	jecxz  0x4030f1
  403125:	lds    ebp,FWORD PTR [ebx+0x43bda523]
  40312b:	js     0x40316e
  40312d:	lds    ebx,FWORD PTR [esi+0x66]
  403130:	adc    eax,0xeac2bcf6
  403135:	cmp    al,0xc9
  403137:	int    0x72
  403139:	imul   ecx,DWORD PTR [esi+0x2f3e8956],0xeb67e1c5
  403143:	add    ah,al
  403145:	mov    DWORD PTR [esi+0x1d],edi
  403148:	cli    
  403149:	pusha  
  40314a:	push   esi
  40314b:	jmp    0x8e3f:0xa022dc34
  403152:	cli    
  403153:	test   ah,bh
  403155:	inc    esp
  403156:	add    al,0x21
  403158:	pop    ds
  403159:	inc    edx
  40315a:	inc    eax
  40315b:	mov    esp,0xdf36ee67
  403160:	stos   DWORD PTR es:[edi],eax
  403161:	xchg   esp,eax
  403162:	cld    
  403163:	out    0x90,eax
  403165:	mov    ch,0x2a
  403167:	jle    0x40310c
  403169:	jae    0x4031d3
  40316b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40316c:	xor    BYTE PTR [ebx],cl
  40316e:	push   cs
  40316f:	call   0x80f6:0xfa7a45f
  403176:	out    dx,al
  403177:	cmp    dh,BYTE PTR [edx+0x7cc544e3]
  40317d:	dec    edx
  40317e:	inc    edi
  40317f:	dec    eax
  403180:	mov    al,ds:0x4d9d9ea6
  403185:	push   0x506f80da
  40318a:	imul   ebp,DWORD PTR [ebx+0x7142b1b],0x6258f872
  403194:	xor    ah,BYTE PTR [eax-0x11]
  403197:	dec    BYTE PTR [edi+0x17]
  40319a:	jp     0x403130
  40319c:	xchg   ebx,eax
  40319d:	test   dh,dl
  40319f:	xor    eax,0x12237384
  4031a4:	xchg   edi,eax
  4031a5:	sub    ch,cl
  4031a7:	jbe    0x40319a
  4031a9:	pop    ecx
  4031aa:	sbb    ebx,DWORD PTR [ebp+0x16]
  4031ad:	sub    eax,0x3093844a
  4031b2:	jns    0x40320a
  4031b4:	dec    edi
  4031b5:	repz popf 
  4031b7:	mov    DWORD PTR [esi-0x788ecb6c],esi
  4031bd:	add    al,BYTE PTR [edx-0x4eda1116]
  4031c3:	pop    esi
  4031c4:	(bad)  
  4031c5:	repz lahf 
  4031c7:	or     esi,DWORD PTR [esi+0x2fccf03b]
  4031cd:	jb     0x4031cb
  4031cf:	(bad)  
  4031d0:	out    dx,eax
  4031d1:	sub    eax,0x2cc702e7
  4031d6:	fst    DWORD PTR [edx-0x25]
  4031d9:	cmc    
  4031da:	aam    0x49
  4031dc:	push   es
  4031dd:	jge    0x40323a
  4031df:	add    BYTE PTR [eax],dl
  4031e1:	jg     0x403258
  4031e3:	repnz adc al,0x8a
  4031e6:	mov    eax,0xb9bf46d8
  4031eb:	mov    dl,0xdd
  4031ed:	jmp    0xe0a:0xcf729595
  4031f4:	xchg   ebp,eax
  4031f5:	daa    
  4031f6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031f8:	pop    edx
  4031f9:	lods   al,BYTE PTR ds:[esi]
  4031fa:	popa   
  4031fb:	xor    edx,esi
  4031fd:	mov    eax,ds:0x48faabb8
  403202:	shl    BYTE PTR [ebp-0x6a6660b9],cl
  403208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403209:	call   0x49f24f60
  40320e:	nop    DWORD PTR [esi+0x6b98040e]
  403215:	cli    
  403216:	pusha  
  403217:	fdivr  DWORD PTR [ebx]
  403219:	hlt    
  40321a:	ret    0x96b4
  40321d:	adc    eax,DWORD PTR [esi]
  40321f:	and    dh,BYTE PTR [edx-0x28]
  403222:	outs   dx,DWORD PTR ds:[esi]
  403223:	int3   
  403224:	add    eax,0x11d9be36
  403229:	in     al,dx
  40322a:	es inc esi
  40322c:	mov    BYTE PTR [edi+0x76],al
  40322f:	mov    ?,edx
  403231:	xchg   edx,eax
  403232:	test   DWORD PTR [ecx-0x56],eax
  403235:	xor    BYTE PTR [eax+0x46190045],ch
  40323b:	jg     0x403250
  40323d:	test   al,0x9b
  40323f:	mov    al,0xc7
  403241:	retf   
  403242:	stc    
  403243:	xor    DWORD PTR [edi],eax
  403245:	aam    0xc0
  403247:	scas   eax,DWORD PTR es:[edi]
  403248:	pop    ss
  403249:	lahf   
  40324a:	pop    edi
  40324b:	sbb    DWORD PTR [ebp-0x2aec5918],esi
  403251:	jb     0x403218
  403253:	imul   ebp,DWORD PTR [ecx],0xffffffe6
  403256:	stos   DWORD PTR es:[edi],eax
  403257:	mov    cl,0x70
  403259:	push   esp
  40325a:	iret   
  40325b:	div    BYTE PTR [ebx-0x5b]
  40325e:	gs iret 
  403260:	loop   0x403216
  403262:	jnp    0x4032b2
  403264:	add    DWORD PTR [edx],ecx
  403266:	(bad)  
  403267:	ja     0x4032a6
  403269:	cmp    cl,BYTE PTR [eax+0x0]
  40326c:	and    ebx,ecx
  40326e:	in     al,dx
  40326f:	add    BYTE PTR [ecx-0x21525b58],ch
  403275:	xchg   edx,eax
  403276:	mov    esp,DWORD PTR [ebp+0x4c9000e6]
  40327c:	pop    ss
  40327d:	jmp    0x8c76:0x89ba6119
  403284:	(bad)  
  403285:	jo     0x403269
  403287:	(bad)  
  403288:	pop    edi
  403289:	les    edi,FWORD PTR ss:[ecx+0x3b]
  40328d:	scas   al,BYTE PTR es:[edi]
  40328e:	push   ebx
  40328f:	inc    edi
  403290:	jecxz  0x40328c
  403292:	mov    bl,0xb0
  403294:	pop    ebx
  403295:	dec    esp
  403296:	sub    esi,esp
  403298:	xor    al,0x2b
  40329a:	(bad)  
  40329b:	lahf   
  40329c:	sbb    bh,BYTE PTR [ecx+0x9604724]
  4032a2:	and    al,0x23
  4032a4:	or     eax,0x109f6c44
  4032a9:	lds    esp,FWORD PTR [ebx-0xe1ec43c]
  4032af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b0:	or     ecx,ecx
  4032b2:	cmp    DWORD PTR [edi],ebp
  4032b4:	ins    BYTE PTR es:[edi],dx
  4032b5:	stos   BYTE PTR es:[edi],al
  4032b6:	adc    al,0x4f
  4032b8:	mov    al,0xd4
  4032ba:	jmp    0x40331e
  4032bc:	push   es
  4032bd:	mov    ebx,0xfae1633f
  4032c2:	mov    eax,0xa902a520
  4032c7:	xchg   edx,eax
  4032c8:	mov    eax,0xe3827b2f
  4032cd:	pusha  
  4032ce:	dec    eax
  4032cf:	data16 aad 0x1
  4032d2:	jecxz  0x4032e4
  4032d4:	into   
  4032d5:	mov    ebp,0xbd57e1bd
  4032da:	sar    DWORD PTR [esi-0x184c5fd7],cl
  4032e0:	dec    esi
  4032e1:	ret    
  4032e2:	mov    ebx,edi
  4032e4:	enter  0xcefb,0x6d
  4032e8:	xor    al,0xcd
  4032ea:	cld    
  4032eb:	jbe    0x4032ed
  4032ed:	cmc    
  4032ee:	xchg   BYTE PTR [esp+ebx*1],bl
  4032f1:	xchg   BYTE PTR [edx-0x5],bl
  4032f4:	jb     0x40336f
  4032f6:	push   ebp
  4032f7:	adc    ebx,esi
  4032f9:	mov    ss,edx
  4032fb:	pop    edi
  4032fc:	mov    ?,WORD PTR [esi]
  4032fe:	jnp    0x40337e
  403300:	pop    ds
  403301:	sahf   
  403302:	dec    eax
  403303:	xchg   esi,eax
  403304:	xlat   BYTE PTR ds:[ebx]
  403305:	cli    
  403306:	mov    esp,0x534c4189
  40330b:	cmp    dl,ah
  40330d:	dec    ecx
  40330e:	in     al,dx
  40330f:	imul   ebx,DWORD PTR [ebp-0x61d75942],0x9d353e69
  403319:	mov    ebp,DWORD PTR [edx-0x7939adcc]
  40331f:	adc    edi,ebx
  403321:	cmp    bl,al
  403323:	cmp    DWORD PTR [ebp+0x62],esi
  403326:	shr    al,1
  403328:	outs   dx,DWORD PTR ds:[esi]
  403329:	or     eax,0x576ca79b
  40332e:	lods   al,BYTE PTR ds:[esi]
  40332f:	mov    esp,DWORD PTR [esi]
  403331:	out    0x89,al
  403333:	ret    
  403334:	data16 mov ch,0x76
  403337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403338:	mov    dh,0x65
  40333a:	xchg   esi,eax
  40333b:	imul   esi,DWORD PTR [esi-0x2d],0x26d6e86c
  403342:	mov    edi,DWORD PTR [eax]
  403344:	dec    ecx
  403345:	pop    ecx
  403346:	jp     0x4032d5
  403348:	stos   BYTE PTR es:[edi],al
  403349:	dec    ebx
  40334a:	xor    eax,0xc0c6e6f2
  40334f:	dec    edx
  403350:	jns    0x403397
  403352:	or     bh,BYTE PTR [esi+0x24c65530]
  403358:	mul    ah
  40335a:	fidivr DWORD PTR [ebx-0x79]
  40335d:	inc    ebx
  40335e:	and    al,0x5f
  403360:	test   BYTE PTR [edi-0x2ca309db],ch
  403366:	add    al,BYTE PTR [edx+0x30ab8f71]
  40336c:	mov    dh,0x7c
  40336e:	shr    esi,1
  403370:	xchg   edx,eax
  403371:	mov    al,dh
  403373:	iret   
  403374:	mov    DWORD PTR [edx-0x2d],edi
  403377:	push   ss
  403378:	mov    bl,0x72
  40337a:	xor    eax,0xe97e15b
  40337f:	and    DWORD PTR [esi],esi
  403381:	lds    esp,FWORD PTR [ebx]
  403383:	cld    
  403384:	and    eax,0xef1539f0
  403389:	ret    0x126
  40338c:	sub    eax,0xb3861cee
  403391:	mov    edi,0xc55eecf5
  403396:	push   edi
  403397:	sub    esi,DWORD PTR [esi]
  403399:	jns    0x403349
  40339b:	inc    esp
  40339c:	adc    DWORD PTR [ecx+edx*8],ecx
  40339f:	sti    
  4033a0:	jge    0x403383
  4033a2:	cmp    DWORD PTR [eax+0x2431e219],ebp
  4033a8:	jbe    0x403411
  4033aa:	int    0xd1
  4033ac:	lahf   
  4033ad:	aas    
  4033ae:	push   edi
  4033af:	out    0x1c,eax
  4033b1:	inc    ebp
  4033b2:	mov    ds:0x20ba1709,al
  4033b7:	and    edi,DWORD PTR [edi-0x1a]
  4033ba:	mov    WORD PTR [edx],es
  4033bc:	jmp    0xf945:0xcd95f7e7
  4033c3:	fs scas al,BYTE PTR es:[edi]
  4033c5:	xchg   ecx,eax
  4033c6:	push   es
  4033c7:	dec    ebp
  4033c8:	adc    al,0x8e
  4033ca:	mov    ch,0xb4
  4033cc:	ss addr16 mov esp,0x409b9214
  4033d3:	cmp    DWORD PTR [ebp+0x33f6186e],0xfdf9b05
  4033dd:	neg    DWORD PTR [ecx-0x3a347f37]
  4033e3:	mov    ah,0xd
  4033e5:	and    DWORD PTR [ebp-0x33],0x47
  4033e9:	jo     0x40345f
  4033eb:	jp     0x4033d2
  4033ed:	fisubr DWORD PTR [ecx-0x76a41282]
  4033f3:	imul   BYTE PTR [edx+eiz*4]
  4033f6:	inc    edi
  4033f7:	out    0x23,eax
  4033f9:	loop   0x403408
  4033fb:	mov    eax,0x42d8556d
  403400:	xor    BYTE PTR [ebx+0x5c],cl
  403403:	pop    esp
  403404:	or     al,0x97
  403406:	pop    es
  403407:	rol    BYTE PTR [edx-0x199ca7a9],cl
  40340d:	es cdq 
  40340f:	fiadd  WORD PTR [ebp-0x34]
  403412:	(bad)  
  403413:	fistp  DWORD PTR [ebp+0x9]
  403416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403417:	test   al,dh
  403419:	hlt    
  40341a:	(bad)  
  40341c:	shl    bh,1
  40341e:	iret   
  40341f:	xchg   esi,eax
  403420:	fcomp  QWORD PTR [ebx+0x19]
  403423:	je     0x4033c6
  403425:	aaa    
  403426:	daa    
  403427:	jl     0x403426
  403429:	xchg   ebx,eax
  40342a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40342c:	test   esi,ebp
  40342e:	aaa    
  40342f:	addr16 add dh,dl
  403432:	pop    ss
  403433:	fdiv   DWORD PTR [eax-0x34]
  403436:	mov    esi,0xff6fee3e
  40343b:	xchg   esp,eax
  40343c:	dec    ebp
  40343d:	mov    esp,0x96861d40
  403442:	or     al,0x9
  403444:	add    edx,DWORD PTR [edi+0x46]
  403447:	imul   BYTE PTR [esi]
  403449:	fcomp  QWORD PTR [edi]
  40344b:	stos   BYTE PTR es:[di],al
  40344d:	mov    eax,0x1c5837cf
  403452:	push   ecx
  403453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403454:	clc    
  403455:	stos   DWORD PTR es:[edi],eax
  403456:	in     al,0xee
  403458:	push   esp
  403459:	jle    0x40348e
  40345b:	scas   eax,DWORD PTR es:[edi]
  40345c:	xor    eax,0x9b8a6279
  403461:	fs or  al,0xc8
  403464:	out    dx,eax
  403465:	std    
  403466:	mov    ch,0x70
  403468:	or     DWORD PTR [esi],0xc98ec3e4
  40346e:	push   ds
  40346f:	mov    fs,WORD PTR [edx-0x4af50f4b]
  403475:	sub    BYTE PTR [ebx+0xcbbf4a0],dh
  40347b:	xor    bh,BYTE PTR [ecx-0x5dc7909c]
  403481:	pop    esp
  403482:	test   DWORD PTR [eax+0x3c9da076],ecx
  403488:	push   cs
  403489:	clc    
  40348a:	mov    BYTE PTR [ecx],ch
  40348c:	rol    ecx,0x66
  40348f:	lods   al,BYTE PTR ds:[esi]
  403490:	adc    esi,DWORD PTR [eax]
  403492:	push   esi
  403493:	div    BYTE PTR [ecx-0xa]
  403496:	adc    eax,0x44e32346
  40349b:	jne    0x40351b
  40349d:	loopne 0x403488
  40349f:	outs   dx,DWORD PTR ds:[esi]
  4034a0:	mov    cl,0xd1
  4034a2:	cli    
  4034a3:	inc    al
  4034a5:	ins    BYTE PTR es:[edi],dx
  4034a6:	jne    0x4034ba
  4034a8:	sbb    ah,cl
  4034aa:	ret    
  4034ab:	jns    0x403492
  4034ad:	pusha  
  4034ae:	cmp    al,0xc1
  4034b0:	jb     0x4034f4
  4034b2:	ror    DWORD PTR [esi-0x14],0xf3
  4034b6:	jle    0x40350d
  4034b8:	sbb    ecx,ecx
  4034ba:	scas   al,BYTE PTR es:[edi]
  4034bb:	add    al,0xa3
  4034bd:	leave  
  4034be:	idiv   DWORD PTR [esi+ebp*8+0x2]
  4034c2:	xchg   ebx,eax
  4034c3:	mov    ?,WORD PTR [ebp+0x56]
  4034c6:	add    dh,BYTE PTR [ebx-0x73]
  4034c9:	xor    BYTE PTR [edi+0x77193ec2],bl
  4034cf:	cmp    cl,BYTE PTR [edx+0x7bc72432]
  4034d5:	leave  
  4034d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d7:	jns    0x403522
  4034d9:	ja     0x4034a2
  4034db:	pop    eax
  4034dc:	data16 fxtract 
  4034df:	out    0xfd,eax
  4034e1:	cli    
  4034e2:	das    
  4034e3:	sub    WORD PTR [edx-0x46744f0f],0x48
  4034eb:	pop    ebx
  4034ec:	mov    esi,0x1e2ee042
  4034f1:	push   edi
  4034f2:	xor    DWORD PTR [ebx+0x7f978202],esi
  4034f8:	fwait
  4034f9:	cwde   
  4034fa:	jb     0x4034cd
  4034fc:	out    0x8b,al
  4034fe:	jae    0x40353b
  403500:	je     0x403488
  403502:	cmp    eax,0xa64abc55
  403507:	nop
  403508:	jg     0x4034af
  40350a:	into   
  40350b:	fild   DWORD PTR [edx+0x16]
  40350e:	jae    0x4034dc
  403510:	mov    eax,ds:0x6e34182c
  403515:	data16 adc BYTE PTR [ebx],bh
  403518:	(bad)  
  403519:	stos   DWORD PTR es:[edi],eax
  40351a:	jle    0x40351c
  40351c:	sbb    eax,0xa2cd96a3
  403521:	mov    al,0x65
  403523:	fs push eax
  403525:	dec    eax
  403526:	ds stos BYTE PTR es:[edi],al
  403528:	sub    ecx,DWORD PTR [edi+0x25f1c6bd]
  40352e:	lods   eax,DWORD PTR ds:[esi]
  40352f:	add    edi,DWORD PTR [eax+ecx*2]
  403532:	cld    
  403533:	mov    ch,0x59
  403535:	fnstcw WORD PTR [esp+eax*8+0x2126848d]
  40353c:	arpl   WORD PTR [ecx-0x55],si
  40353f:	(bad)  
  403540:	arpl   WORD PTR [ebx+0x2],si
  403543:	dec    eax
  403544:	xchg   DWORD PTR cs:[eax],esp
  403547:	sar    DWORD PTR [eax-0x4bc5cf0f],1
  40354d:	(bad)  
  40354f:	jle    0x4035a0
  403551:	push   ebp
  403552:	xor    BYTE PTR [edx],dh
  403554:	mov    ch,dl
  403556:	inc    eax
  403557:	lock sbb dl,BYTE PTR [ecx-0x440b6c85]
  40355e:	out    dx,eax
  40355f:	pop    ecx
  403560:	(bad)  
  403561:	ss pushf 
  403563:	in     al,dx
  403564:	pop    DWORD PTR [ecx+0x57fb77bf]
  40356a:	push   esi
  40356b:	lods   al,BYTE PTR ds:[esi]
  40356c:	lahf   
  40356d:	fdivr  DWORD PTR [eax+0x34859627]
  403573:	adc    bl,dh
  403575:	ror    DWORD PTR [edi+0x14],cl
  403578:	outs   dx,BYTE PTR ds:[esi]
  403579:	repnz mov DWORD PTR [edi-0x6e],eax
  40357d:	(bad)  
  40357e:	retf   0xfc8a
  403581:	push   eax
  403582:	mov    ebp,0x69f4f886
  403587:	pop    edx
  403588:	ds cli 
  40358a:	out    dx,al
  40358b:	pop    ds
  40358c:	fst    st(2)
  40358e:	jp     0x4035cc
  403590:	pop    ebx
  403591:	adc    ebp,DWORD PTR [edi-0xd0746d1]
  403597:	adc    BYTE PTR [ecx-0x546e4b42],cl
  40359d:	pop    esi
  40359e:	pop    ebx
  40359f:	repnz mov ?,esi
  4035a2:	push   edx
  4035a3:	adc    al,0x8c
  4035a5:	out    dx,al
  4035a6:	js     0x4035e5
  4035a8:	out    dx,al
  4035a9:	setb   BYTE PTR [ebp-0x34bc5445]
  4035b0:	fisttp QWORD PTR [eax+0x5a]
  4035b3:	fisub  DWORD PTR [ebx]
  4035b5:	xchg   ebp,eax
  4035b6:	aas    
  4035b7:	cmp    DWORD PTR [eax+0x66a37ffc],ecx
  4035bd:	lock mov eax,0xd778769
  4035c3:	je     0x403602
  4035c5:	or     DWORD PTR ds:0xa345fa64,0x8a3d148c
  4035cf:	fwait
  4035d0:	cs nop
  4035d2:	ja     0x4035da
  4035d4:	adc    eax,0xdf010d3
  4035d9:	icebp  
  4035da:	mov    dl,0x7c
  4035dc:	mov    esp,edx
  4035de:	ins    DWORD PTR es:[edi],dx
  4035df:	cmp    edi,DWORD PTR [eax]
  4035e1:	gs pop esp
  4035e3:	daa    
  4035e4:	pop    esp
  4035e5:	add    BYTE PTR [ebx+0x76],al
  4035e8:	(bad)  
  4035e9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4035eb:	fucom  st(4)
  4035ed:	in     al,0xf
  4035ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f0:	mov    ebp,0x90e8c9bb
  4035f5:	jns    0x403590
  4035f7:	xor    bh,BYTE PTR [edx+0x3a]
  4035fa:	xchg   BYTE PTR [esi],ch
  4035fc:	jno    0x4035df
  4035fe:	sbb    DWORD PTR [ecx],esp
  403600:	loope  0x403636
  403602:	pop    edi
  403603:	pop    ebp
  403605:	fisubr WORD PTR [ebx]
  403607:	imul   esp,ecx,0xfffffff1
  40360a:	pop    eax
  40360b:	cmp    al,0xf8
  40360d:	ins    DWORD PTR es:[edi],dx
  40360e:	cwde   
  40360f:	cmp    ecx,DWORD PTR [esi-0x6f]
  403612:	push   esp
  403613:	pop    es
  403614:	push   esi
  403615:	je     0x403605
  403617:	jb     0x4035d0
  403619:	mov    ebp,0x43a2daaf
  40361e:	pop    edi
  40361f:	cdq    
  403620:	dec    ebx
  403621:	or     eax,0xeda53381
  403626:	inc    ecx
  403627:	mov    dh,0xf1
  403629:	out    0xea,al
  40362b:	push   ss
  40362c:	data16 es jo 0x4035b0
  403630:	mov    edi,0xaf485c3d
  403635:	add    ebp,edi
  403637:	stc    
  403638:	inc    ebp
  403639:	shr    bh,0x48
  40363c:	lahf   
  40363d:	fs xchg ecx,eax
  40363f:	lds    ebx,FWORD PTR [esp+edi*8+0x6e]
  403643:	sub    BYTE PTR [ebx-0x44],ch
  403646:	ror    DWORD PTR [eax+ebx*8+0x32552208],0x20
  40364e:	into   
  40364f:	mov    esi,0xd6effb0d
  403654:	in     al,0xe9
  403656:	call   0x97a656b
  40365b:	jecxz  0x40367c
  40365d:	repz xor al,0x1
  403660:	inc    eax
  403661:	inc    ecx
  403662:	sbb    eax,0x9cbe0e12
  403667:	lock xchg edi,eax
  403669:	ret    0x3e5c
  40366c:	fnstcw WORD PTR ds:0x6f3b0957
  403672:	push   esp
  403673:	loope  0x40362d
  403675:	fwait
  403676:	dec    esi
  403677:	mov    dl,0x4b
  403679:	jecxz  0x4036e5
  40367b:	xor    BYTE PTR [ebx],cl
  40367d:	cmp    al,0xf9
  40367f:	mov    edx,DWORD PTR [edi-0x2b]
  403682:	cmp    ebx,edx
  403684:	outs   dx,DWORD PTR ds:[esi]
  403685:	int    0x74
  403687:	xor    ebx,DWORD PTR [ebp+edx*1+0x6a]
  40368b:	dec    esp
  40368c:	out    0x1,eax
  40368e:	pop    ss
  40368f:	and    eax,0x970b87b7
  403694:	std    
  403695:	hlt    
  403696:	sti    
  403697:	mov    al,0x10
  403699:	and    DWORD PTR [ecx-0x7265c67c],ebx
  40369f:	aaa    
  4036a0:	lods   al,BYTE PTR ds:[esi]
  4036a1:	mov    ds:0xaee7a007,al
  4036a6:	xor    DWORD PTR [ebx-0x4ffd1684],esp
  4036ac:	dec    esp
  4036ad:	es leave 
  4036af:	push   ecx
  4036b0:	js     0x40366c
  4036b2:	xchg   ah,ch
  4036b4:	adc    DWORD PTR [esi+esi*1-0x56],edx
  4036b8:	sub    eax,0xb8833f21
  4036bd:	mov    es,edi
  4036bf:	cmp    esp,ebp
  4036c1:	mov    bh,BYTE PTR [edi-0x5d]
  4036c4:	pop    esp
  4036c5:	and    esi,DWORD PTR [eax+0x71]
  4036c8:	mov    esp,0x93c08d3e
  4036cd:	iret   
  4036ce:	lahf   
  4036cf:	int3   
  4036d0:	loop   0x403679
  4036d2:	inc    esp
  4036d3:	pop    ds
  4036d4:	fisttp DWORD PTR [ebp+0x657d0f39]
  4036da:	bound  edi,QWORD PTR [esi]
  4036dc:	in     eax,0xf4
  4036de:	in     al,0x73
  4036e0:	jne    0x40374a
  4036e2:	jl     0x403726
  4036e4:	jl     0x4036b7
  4036e6:	xchg   esp,eax
  4036e7:	in     al,0x8a
  4036e9:	pop    ss
  4036ea:	jae    0x403686
  4036ec:	dec    esp
  4036ed:	jns    0x403723
  4036ef:	dec    eax
  4036f0:	js     0x403725
  4036f2:	sub    al,BYTE PTR [ebp+0x5b]
  4036f5:	clc    
  4036f6:	mov    ecx,ecx
  4036f8:	(bad)  
  4036f9:	xchg   WORD PTR [ebp+0x3975dd1e],bx
  403700:	mov    edi,0xeedca5b7
  403705:	push   esp
  403706:	mov    cl,al
  403708:	xchg   ebx,eax
  403709:	push   ebx
  40370a:	(bad)  
  40370b:	xlat   BYTE PTR ds:[ebx]
  40370c:	inc    esp
  40370d:	cwde   
  40370e:	xchg   esi,eax
  40370f:	adc    BYTE PTR [esp+ebx*8-0x4ed45676],ch
  403716:	and    eax,0x75b5b467
  40371b:	(bad)  
  40371c:	int3   
  40371d:	fcmovb st,st(7)
  40371f:	xchg   edx,eax
  403720:	lds    edx,FWORD PTR [esi+eiz*8-0x156225d7]
  403727:	lahf   
  403728:	out    0xc8,eax
  40372a:	sub    edi,DWORD PTR [esp+eiz*8]
  40372d:	mov    ds,WORD PTR [ecx+0x159c2cdc]
  403733:	cmp    ecx,DWORD PTR [edx]
  403735:	dec    edx
  403736:	adc    dh,BYTE PTR ss:[edx]
  403739:	pop    eax
  40373a:	adc    BYTE PTR [eax],dh
  40373c:	sbb    eax,0x970714ac
  403741:	shl    bl,cl
  403743:	sbb    DWORD PTR [ebp+0x6d],ebp
  403746:	jbe    0x40370d
  403748:	cli    
  403749:	cmp    BYTE PTR [edx-0xd],dl
  40374c:	retf   0x2b31
  40374f:	pusha  
  403750:	js     0x403750
  403752:	sahf   
  403753:	sti    
  403754:	push   esi
  403755:	mov    eax,ds:0x7b2690dd
  40375a:	sti    
  40375b:	inc    ebp
  40375c:	xchg   DWORD PTR [edx],ebx
  40375e:	imul   ecx,DWORD PTR [esi-0x26f4ce9e],0xffffffb0
  403765:	mov    dh,0xa4
  403767:	(bad)  [esi+esi*1-0x4e9d207a]
  40376e:	cmp    al,0x91
  403770:	test   eax,0x8a6ff63
  403775:	pop    eax
  403776:	mov    ebp,0x91ed4202
  40377b:	inc    ebp
  40377c:	cmp    al,0x99
  40377e:	mov    edi,DWORD PTR [edi+0x7c08a48f]
  403784:	xor    edx,DWORD PTR [esi-0x6b51167]
  40378a:	punpckldq mm5,mm2
  40378d:	dec    esi
  40378e:	pop    ss
  40378f:	pop    edi
  403790:	aaa    
  403791:	(bad)  
  403793:	fsubrp st(6),st
  403795:	imul   edi,DWORD PTR [ecx+0x6b85363],0xc0255d97
  40379f:	dec    eax
  4037a0:	mov    dl,BYTE PTR [ecx+0x74a79485]
  4037a6:	mov    edi,0x203b2645
  4037ab:	popf   
  4037ac:	pop    es
  4037ad:	xchg   edi,eax
  4037ae:	std    
  4037af:	std    
  4037b0:	adc    esp,DWORD PTR [edi]
  4037b2:	ins    BYTE PTR es:[edi],dx
  4037b3:	(bad)  
  4037b4:	shr    DWORD PTR [esp+edx*8],1
  4037b7:	or     ecx,edx
  4037b9:	leave  
  4037ba:	cmp    al,0xfe
  4037bc:	xor    eax,0x1fcdda1b
  4037c1:	xchg   ebp,eax
  4037c2:	jae    0x403784
  4037c4:	pop    ds
  4037c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c6:	stos   BYTE PTR es:[edi],al
  4037c7:	inc    ebp
  4037c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c9:	mov    ah,0x28
  4037cb:	add    DWORD PTR [ecx],0x662b0888
  4037d1:	cwde   
  4037d2:	fcmovne st,st(0)
  4037d4:	sbb    BYTE PTR [edx+ebp*8+0x18],dl
  4037d8:	pop    ss
  4037d9:	das    
  4037da:	sub    eax,0x7be59b78
  4037df:	retf   
  4037e0:	push   ebx
  4037e1:	sbb    bh,dh
  4037e3:	shr    DWORD PTR [ecx-0x57b763b2],0x3e
  4037ea:	or     DWORD PTR [eax+0x42],ebp
  4037ed:	arpl   cx,sp
  4037ef:	mov    ebp,0x241f5320
  4037f4:	cmp    ecx,ebp
  4037f6:	sub    BYTE PTR [esi+0x1764634e],al
  4037fc:	in     eax,0x56
  4037fe:	push   ecx
  4037ff:	rcr    BYTE PTR [ecx+0x4],0x95
  403803:	or     eax,0x5ca1b7d2
  403808:	xchg   ebx,eax
  403809:	xlat   BYTE PTR ds:[ebx]
  40380a:	popa   
  40380b:	adc    ebp,ecx
  40380d:	cli    
  40380e:	xchg   ebx,eax
  40380f:	test   al,0x20
  403811:	sbb    BYTE PTR [edi+edi*8],bl
  403814:	dec    edi
  403815:	scas   eax,DWORD PTR es:[edi]
  403816:	jmp    0x727866cb
  40381b:	jp     0x40384e
  40381d:	and    BYTE PTR [esi+0x19],bh
  403820:	mov    eax,ds:0x2a430a38
  403825:	loop   0x40386c
  403827:	mov    edx,0x5352feb6
  40382c:	pop    ecx
  40382d:	les    ebp,FWORD PTR [ebx+edi*1-0x32]
  403831:	mov    eax,ds:0x2b40e840
  403836:	jl     0x4037eb
  403838:	outs   dx,BYTE PTR ds:[esi]
  403839:	add    ebp,DWORD PTR [edx-0x29fd8be8]
  40383f:	xchg   esp,eax
  403840:	stos   BYTE PTR es:[edi],al
  403841:	or     edx,eax
  403843:	and    cl,BYTE PTR [ebp+0x53536815]
  403849:	pop    eax
  40384a:	or     ah,BYTE PTR [esi+0x5f]
  40384d:	xor    bh,BYTE PTR [ebx]
  40384f:	icebp  
  403850:	int3   
  403851:	ror    edi,cl
  403853:	dec    esp
  403854:	and    DWORD PTR ds:0x222329c3,edi
  40385a:	test   BYTE PTR [ebp+edi*2-0x17],0xe9
  40385f:	mov    ?,esp
  403861:	push   0xffffffcf
  403863:	pop    eax
  403864:	int3   
  403865:	jne    0x4038b2
  403867:	shl    BYTE PTR [ebx-0x610cf425],1
  40386d:	cli    
  40386e:	fnstsw WORD PTR [ebp+0x15de3cbe]
  403874:	stos   BYTE PTR es:[edi],al
  403875:	add    dh,BYTE PTR [edx+0x6d]
  403878:	adc    edx,DWORD PTR [ebp+0x6abe456c]
  40387e:	and    eax,0x393608ac
  403883:	cmp    ebx,ebp
  403885:	dec    eax
  403886:	push   ebx
  403887:	lahf   
  403888:	scas   eax,DWORD PTR es:[edi]
  403889:	popa   
  40388a:	addr16 retf 
  40388c:	mov    cl,0x46
  40388e:	xor    al,0x77
  403890:	jg     0x4038f7
  403892:	push   esi
  403893:	xor    bl,BYTE PTR [esi]
  403895:	jmp    DWORD PTR [edi-0x44]
  403898:	push   ebx
  403899:	sbb    edx,DWORD PTR [ebp-0x45862ef5]
  40389f:	mov    edx,0x94d04fdc
  4038a4:	inc    ebx
  4038a5:	mov    ecx,DWORD PTR [edx+0xb]
  4038a8:	xchg   cl,dl
  4038aa:	(bad)  
  4038ab:	mov    eax,ds:0x63d07dd4
  4038b0:	imul   esi,esi,0x5d74d6a1
  4038b6:	push   ss
  4038b7:	xchg   esp,eax
  4038b8:	cmp    al,0x4c
  4038ba:	sbb    DWORD PTR [edi-0x5b],0xffffff97
  4038be:	mov    dh,0x32
  4038c0:	repz cmp eax,0x476a9ef9
  4038c6:	dec    ebx
  4038c7:	jo     0x403890
  4038c9:	mov    ecx,0x6896a64b
  4038ce:	arpl   sp,sp
  4038d0:	fisttp DWORD PTR fs:[ebx+0x6d595dc2]
  4038d7:	mov    eax,0xb2392ded
  4038dc:	imul   edi,DWORD PTR [edx-0x65705fd2],0xb8958d2f
  4038e6:	xchg   ebp,eax
  4038e7:	mov    dl,0x38
  4038e9:	in     al,0xc2
  4038eb:	xchg   edx,eax
  4038ec:	mov    dl,0x57
  4038ee:	pop    esi
  4038ef:	fisttp WORD PTR [ebx+0x7d]
  4038f2:	mov    dl,0xad
  4038f4:	inc    ecx
  4038f5:	rcl    BYTE PTR [edx+0x28],cl
  4038f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f9:	lock inc eax
  4038fb:	daa    
  4038fc:	dec    ebx
  4038fd:	jnp    0x403882
  4038ff:	push   eax
  403900:	jl     0x403971
  403902:	lea    ecx,ds:[ecx]
  403905:	add    BYTE PTR ds:0x984191be,al
  40390b:	or     DWORD PTR [esi-0x47],ebp
  40390e:	pop    ss
  40390f:	add    al,BYTE PTR [edx+ebp*2+0x71]
  403913:	(bad)  
  403914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403915:	push   ebp
  403916:	add    al,0xfa
  403918:	inc    ebx
  403919:	stos   DWORD PTR es:[edi],eax
  40391a:	aaa    
  40391b:	ja     0x403953
  40391d:	enter  0x19f0,0x6
  403921:	pop    eax
  403922:	shr    DWORD PTR [ebx+eax*1],1
  403925:	lods   eax,DWORD PTR ds:[esi]
  403926:	retf   
  403927:	(bad)  
  403928:	sti    
  403929:	pop    ebp
  40392a:	hlt    
  40392b:	iret   
  40392c:	mov    edi,0x4ff2cf4d
  403931:	lahf   
  403932:	rol    BYTE PTR [edi+0x62],cl
  403935:	shl    bh,1
  403937:	sub    ch,BYTE PTR [eax-0x6ce19c64]
  40393d:	fcom   QWORD PTR [edx-0xc9e305d]
  403943:	cwde   
  403944:	scas   al,BYTE PTR es:[edi]
  403945:	add    al,0x8
  403947:	adc    DWORD PTR [ecx+esi*2],ebx
  40394a:	inc    ebp
  40394b:	push   edi
  40394c:	in     al,0x8f
  40394e:	pop    eax
  40394f:	sahf   
  403950:	cwde   
  403951:	adc    BYTE PTR [esi-0x58],ch
  403954:	sub    DWORD PTR [ecx-0x66],esi
  403957:	ud2    
  403959:	mov    edx,0x9bd5a037
  40395e:	leave  
  40395f:	jnp    0x4038e8
  403961:	mov    edi,0xfc4d266d
  403966:	ret    
  403967:	test   eax,0x3bfd3f98
  40396c:	pushf  
  40396d:	or     edi,DWORD PTR [edi]
  40396f:	in     al,dx
  403970:	and    bl,al
  403972:	mov    ebx,0xe87627f1
  403977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403978:	scas   al,BYTE PTR es:[edi]
  403979:	test   BYTE PTR [ebx+esi*2],bh
  40397c:	jmp    ecx
  40397e:	xor    BYTE PTR [esi],dh
  403980:	mov    edx,0xde21db49
  403985:	pop    ebp
  403986:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403988:	inc    eax
  403989:	loope  0x403990
  40398b:	loopne 0x4039d8
  40398d:	pushf  
  40398e:	pop    eax
  40398f:	push   edx
  403990:	xchg   esp,eax
  403991:	(bad)  
  403992:	and    eax,0x159320fb
  403997:	jmp    0x837b3501
  40399c:	loope  0x4039fc
  40399e:	push   ss
  40399f:	push   esp
  4039a0:	mov    esi,0xbb6280e3
  4039a5:	cmp    ebx,DWORD PTR [ebp+0x1d]
  4039a8:	cwde   
  4039a9:	sbb    al,al
  4039ab:	out    0xb0,al
  4039ad:	scas   eax,DWORD PTR es:[edi]
  4039ae:	scas   eax,DWORD PTR es:[edi]
  4039af:	mov    edi,0x3627bcc6
  4039b4:	ja     0x403973
  4039b6:	mov    al,ds:0x3b3f3e32
  4039bb:	cdq    
  4039bc:	fldenv [ebp-0xe328759]
  4039c2:	ins    DWORD PTR es:[edi],dx
  4039c3:	popf   
  4039c4:	loop   0x4039f2
  4039c6:	push   esi
  4039c7:	add    al,0xa9
  4039c9:	sbb    ebx,DWORD PTR [ecx]
  4039cb:	xchg   edi,eax
  4039cc:	mov    eax,0x60100e3f
  4039d1:	repnz pop edx
  4039d3:	(bad)  
  4039d4:	jbe    0x403a50
  4039d6:	dec    edx
  4039d7:	and    al,0x63
  4039d9:	sbb    BYTE PTR [esp+esi*4],bl
  4039dc:	dec    edx
  4039dd:	icebp  
  4039de:	scas   al,BYTE PTR es:[edi]
  4039df:	inc    ecx
  4039e0:	test   BYTE PTR ds:0x4511d545,0xa4
  4039e7:	and    eax,0xaf8a3b69
  4039ec:	icebp  
  4039ed:	not    DWORD PTR [eax-0x3a]
  4039f0:	mov    ds:0x61bed90f,al
  4039f5:	int3   
  4039f6:	mov    esi,0x12fc7367
  4039fb:	dec    ebp
  4039fc:	xor    bh,BYTE PTR [ebx-0x17be6b38]
  403a02:	mul    DWORD PTR [esi+edi*8-0x1c]
  403a06:	push   ebp
  403a07:	pusha  
  403a08:	jbe    0x4039c3
  403a0a:	lahf   
  403a0b:	dec    ebx
  403a0c:	std    
  403a0d:	mov    bl,0x5f
  403a0f:	jmp    0x1ba3:0xfb1e470d
  403a16:	sub    DWORD PTR [edx],esi
  403a18:	fs jmp 0x73cca88b
  403a1e:	lods   eax,DWORD PTR ds:[esi]
  403a1f:	inc    eax
  403a20:	jo     0x4039b2
  403a22:	daa    
  403a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a24:	mov    eax,ds:0x87fc3256
  403a29:	lods   al,BYTE PTR ds:[esi]
  403a2a:	xchg   edx,eax
  403a2b:	mov    cl,0x97
  403a2d:	call   0xbe566901
  403a32:	loop   0x4039c4
  403a34:	out    0xf,al
  403a36:	add    BYTE PTR [esi-0x3f6bbbdc],al
  403a3c:	ss jnp 0x403a12
  403a3f:	add    DWORD PTR [edx+0x30],edi
  403a42:	ror    DWORD PTR gs:[ecx],cl
  403a45:	div    DWORD PTR [bp+di-0x5ec4]
  403a4a:	jo     0x403abd
  403a4c:	scas   al,BYTE PTR es:[edi]
  403a4d:	or     esi,DWORD PTR [edi-0x6d8e5fba]
  403a53:	xor    al,0x72
  403a55:	rcl    DWORD PTR [edi],1
  403a57:	push   eax
  403a58:	lods   eax,DWORD PTR cs:[esi]
  403a5a:	push   esp
  403a5b:	outs   dx,DWORD PTR ds:[esi]
  403a5c:	dec    ebx
  403a5d:	xchg   esp,eax
  403a5e:	ja     0x403a8f
  403a60:	mov    ah,0x3d
  403a62:	ret    
  403a63:	xor    ebp,DWORD PTR [esi]
  403a65:	push   edi
  403a66:	retf   
  403a67:	jmp    FWORD PTR [ecx+0x23]
  403a6a:	adc    ch,bh
  403a6c:	xor    DWORD PTR [esi],ebx
  403a6e:	adc    eax,0x6e7e6d06
  403a73:	dec    edi
  403a74:	test   DWORD PTR [eax+edi*8-0x49],esi
  403a78:	mov    al,ds:0xfd419efa
  403a7d:	aas    
  403a7e:	in     eax,0xc7
  403a80:	push   esi
  403a81:	clc    
  403a82:	in     eax,0x1a
  403a84:	call   0xb7da1592
  403a89:	aaa    
  403a8a:	rcr    dl,0x61
  403a8d:	jb     0x403a80
  403a8f:	fwait
  403a90:	call   0x18dc:0xf1eccf33
  403a97:	inc    ebp
  403a98:	fild   DWORD PTR [eax-0x5a06321e]
  403a9e:	ret    
  403a9f:	arpl   WORD PTR [ebx+0x78],cx
  403aa2:	test   al,0x79
  403aa4:	cmp    BYTE PTR [edx+0x49],0x6c
  403aa8:	fwait
  403aa9:	icebp  
  403aaa:	xlat   BYTE PTR ds:[ebx]
  403aab:	push   esi
  403aac:	pop    ds
  403aad:	inc    ebx
  403aae:	cdq    
  403aaf:	dec    edi
  403ab0:	shr    DWORD PTR [ecx],1
  403ab2:	mov    edx,0x4acb4d01
  403ab7:	mov    cl,BYTE PTR [edi]
  403ab9:	dec    ecx
  403aba:	daa    
  403abb:	sub    edi,DWORD PTR [ebx+0x3cf1c936]
  403ac1:	or     al,0x14
  403ac3:	pushf  
  403ac4:	mov    edi,0x339466b9
  403ac9:	fisttp WORD PTR ds:0x8fa5055a
  403acf:	mov    ds:0x84f067e7,al
  403ad4:	or     al,0x85
  403ad6:	cwde   
  403ad7:	dec    edx
  403ad8:	dec    BYTE PTR [eax]
  403ada:	int    0xee
  403adc:	sbb    al,0x45
  403ade:	or     BYTE PTR [ebp-0x354b4176],bl
  403ae4:	pop    ecx
  403ae5:	jb     0x403b4a
  403ae7:	(bad)  
  403ae8:	es ja  0x403a71
  403aeb:	sub    esi,DWORD PTR [ecx]
  403aed:	push   esi
  403aee:	lahf   
  403aef:	lock push eax
  403af1:	test   edx,esp
  403af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af4:	inc    ebp
  403af5:	inc    edi
  403af6:	pop    ebp
  403af7:	and    ch,BYTE PTR [eax]
  403af9:	xlat   BYTE PTR ds:[ebx]
  403afa:	loopne 0x403b04
  403afc:	mov    DWORD PTR [ebx-0x373c1cda],ebx
  403b02:	fdivrp st(1),st
  403b04:	jns    0x403b0f
  403b06:	push   edi
  403b07:	push   eax
  403b08:	das    
  403b09:	mov    eax,ds:0xedb2fe53
  403b0e:	fimul  WORD PTR [eax*2-0x89f2f41]
  403b15:	fcomp  st(6)
  403b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b18:	inc    ecx
  403b19:	add    ah,BYTE PTR [edx-0x23fc65f8]
  403b1f:	repz adc ah,al
  403b22:	cmc    
  403b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b24:	sub    al,0xc3
  403b26:	enter  0xe298,0x32
  403b2a:	mov    esp,0xc633c72b
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429bff
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	(bad)  [edx-0x49]
  403c9b:	dec    edx
  403c9c:	sti    
  403c9d:	out    dx,eax
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0x64
  403ca6:	hlt    
  403ca7:	and    dl,dh
  403ca9:	inc    esi
  403caa:	sub    DWORD PTR [ebx-0x2d],ecx
  403cad:	adc    DWORD PTR [eax+0x61b0e4b6],0x24
  403cb4:	mov    eax,ecx
  403cb6:	dec    ebp
  403cb7:	add    bh,cl
  403cb9:	repnz outs dx,DWORD PTR ds:[esi]
  403cbb:	sahf   
  403cbc:	add    al,0xdf
  403cbe:	(bad)  
  403cbf:	push   0xffffffde
  403cc1:	cmc    
  403cc2:	pop    ebx
  403cc3:	fcmovnu st,st(7)
  403cc5:	faddp  st(6),st
  403cc7:	xor    al,0x79
  403cc9:	sbb    ecx,edx
  403ccb:	in     eax,dx
  403ccc:	sub    DWORD PTR [eax-0x6d],edi
  403ccf:	add    bl,BYTE PTR [ecx-0x11c4d5b1]
  403cd5:	mov    edi,0x9bc421e
  403cda:	jecxz  0x403c75
  403cdc:	and    al,0x3a
  403cde:	pop    ds
  403cdf:	fsub   QWORD PTR [esi]
  403ce1:	sub    eax,0x1c0b1c83
  403ce6:	xlat   BYTE PTR ds:[ebx]
  403ce7:	xor    al,0xf
  403ce9:	jns    0x403d3e
  403ceb:	pop    esi
  403cec:	dec    ebx
  403ced:	add    DWORD PTR [eax],esp
  403cef:	xchg   esi,eax
  403cf0:	xchg   edx,eax
  403cf1:	and    al,0x19
  403cf3:	cmp    ebp,ebx
  403cf5:	xor    dh,BYTE PTR [esi]
  403cf7:	in     al,0x27
  403cf9:	into   
  403cfa:	out    0x91,eax
  403cfc:	mov    BYTE PTR [eax+ebx*2],al
  403cff:	(bad)  
  403d01:	inc    ebx
  403d02:	jg     0x403d77
  403d04:	or     edx,ecx
  403d06:	popf   
  403d07:	(bad)  
  403d0b:	mov    BYTE PTR [ebx],dh
  403d0d:	fsub   st,st(6)
  403d0f:	add    DWORD PTR [ebp-0x70],0xb
  403d13:	daa    
  403d14:	arpl   bp,si
  403d16:	cld    
  403d17:	cmp    al,0xfa
  403d19:	mov    al,0x9b
  403d1b:	mov    eax,ds
  403d1d:	mov    ss,WORD PTR [ebp+ebp*8+0x881b00e]
  403d24:	cdq    
  403d25:	mov    dh,0x91
  403d27:	test   eax,0xba91a95
  403d2c:	push   es
  403d2d:	add    ebx,0xb34aee42
  403d33:	or     DWORD PTR [edi-0x7bfdb32c],0xfffffff3
  403d3a:	sbb    eax,0x6c715a78
  403d3f:	xchg   edi,eax
  403d40:	test   eax,0x3c19c368
  403d45:	into   
  403d46:	ds add eax,0xd7f73cae
  403d4c:	aam    0x19
  403d4e:	(bad)  
  403d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d50:	jmp    0x403d89
  403d52:	fcom   st(2)
  403d54:	pop    ebp
  403d55:	leave  
  403d56:	in     eax,dx
  403d57:	frstor [ecx+0x62]
  403d5a:	inc    ecx
  403d5b:	cmp    eax,0x704650cf
  403d60:	jmp    0x77f3:0x8274eb7b
  403d67:	rol    BYTE PTR [esi],cl
  403d69:	ds inc ecx
  403d6b:	mov    ah,0xb6
  403d6d:	push   edx
  403d6e:	rcr    ebp,cl
  403d70:	out    dx,eax
  403d71:	mov    esi,0x9f8af73e
  403d76:	pop    ds
  403d77:	stos   DWORD PTR es:[edi],eax
  403d78:	cmp    BYTE PTR [edx],0x24
  403d7b:	or     DWORD PTR ds:0x3337cd02,ebx
  403d81:	addr16 data16 mov al,ds:0x2872
  403d86:	or     al,0x70
  403d88:	cld    
  403d89:	inc    edx
  403d8a:	push   ss
  403d8b:	jmp    0xb66b335e
  403d90:	idiv   BYTE PTR ds:0x5140c398
  403d96:	mov    ecx,0xa11c3453
  403d9b:	push   0x9645007d
  403da0:	xor    eax,0x27ca22da
  403da5:	jmp    0x8a4f8349
  403daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dab:	iret   
  403dac:	hlt    
  403dad:	bound  esp,QWORD PTR [ebx]
  403daf:	mov    ecx,0x870172c
  403db4:	mov    BYTE PTR ds:0x4ef6f712,ah
  403dba:	daa    
  403dbb:	bound  eax,QWORD PTR [ecx]
  403dbd:	dec    ebx
  403dbe:	pop    ds
  403dbf:	div    DWORD PTR [esi+0x3d]
  403dc2:	repz sub DWORD PTR [esp+ecx*2+0x37],0x36d60a2e
  403dcb:	lds    ecx,FWORD PTR [ebp-0x12a895eb]
  403dd1:	pop    ecx
  403dd2:	pop    ecx
  403dd3:	je     0x403daa
  403dd5:	dec    eax
  403dd6:	xchg   ebx,eax
  403dd7:	or     bl,BYTE PTR [edx+eax*1+0x365ca947]
  403dde:	and    al,0x8d
  403de0:	or     ch,BYTE PTR [ebx+0x1348c18d]
  403de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403de7:	(bad)  
  403de8:	rol    BYTE PTR [ebp-0x60],1
  403deb:	leave  
  403dec:	fsubr  QWORD PTR [edx]
  403dee:	rcr    ah,0x1d
  403df1:	(bad)  
  403df2:	popf   
  403df3:	pop    ds
  403df4:	dec    esp
  403df5:	retf   
  403df6:	dec    esi
  403df7:	dec    eax
  403df8:	(bad)  
  403df9:	mov    dh,0x65
  403dfb:	or     al,0x25
  403dfd:	nop
  403dfe:	out    0x8a,al
  403e00:	jl     0x403df5
  403e02:	or     BYTE PTR [ebx+0x4824ef4f],bl
  403e08:	mov    DWORD PTR ds:0x3304829d,ebp
  403e0e:	mov    BYTE PTR [esi],al
  403e10:	out    dx,al
  403e11:	xor    ebp,esp
  403e13:	cmp    eax,0x303288d5
  403e18:	sub    ebp,DWORD PTR [ebx]
  403e1a:	mov    dh,0x79
  403e1c:	xor    ah,BYTE PTR ds:0x213ecd19
  403e22:	in     eax,dx
  403e23:	inc    esp
  403e24:	dec    esp
  403e25:	fnstcw WORD PTR [ecx-0x3ecde3da]
  403e2b:	xor    edi,DWORD PTR [ecx+0x72db7c41]
  403e31:	test   eax,0xc3c1970d
  403e36:	out    0x9,al
  403e38:	shl    DWORD PTR [ebx-0x7d],1
  403e3b:	out    0xaf,eax
  403e3d:	mov    ch,0xc8
  403e3f:	jp     0x403e7c
  403e41:	xchg   edx,eax
  403e42:	sub    dh,al
  403e44:	dec    ebx
  403e45:	or     eax,DWORD PTR [edx+eax*4]
  403e48:	push   esi
  403e49:	push   es
  403e4a:	pop    es
  403e4b:	fcmovnu st,st(3)
  403e4d:	mov    ebp,0xea19edee
  403e52:	xchg   ebp,eax
  403e53:	sub    bh,BYTE PTR [eax-0x73eaea15]
  403e59:	in     eax,dx
  403e5a:	sbb    eax,0x369671d8
  403e5f:	jecxz  0x403e15
  403e61:	loop   0x403e90
  403e63:	xchg   BYTE PTR [ebp+0x12],ah
  403e66:	je     0x403e69
  403e68:	adc    BYTE PTR [ebx-0x71],ch
  403e6b:	cmp    al,0x94
  403e6d:	push   cs
  403e6e:	jmp    0xf0a3:0x7c1d4799
  403e75:	retf   0xbb4c
  403e78:	popa   
  403e79:	and    edi,DWORD PTR [ecx+0x11]
  403e7c:	cli    
  403e7d:	call   0xa00b:0x6575482c
  403e84:	jp     0x403ec3
  403e86:	sbb    al,0x25
  403e88:	mov    esi,0x67247721
  403e8d:	mov    eax,0xf8c018f5
  403e92:	mov    dl,0x58
  403e94:	fmul   st,st(0)
  403e96:	cwde   
  403e97:	push   ebx
  403e98:	in     al,dx
  403e99:	cwde   
  403e9a:	call   0x5bfa35ed
  403e9f:	push   edi
  403ea0:	sub    dh,BYTE PTR [esi-0x4c]
  403ea3:	push   ds
  403ea4:	xchg   ebp,eax
  403ea5:	lahf   
  403ea6:	fadd   QWORD PTR [ecx+0x7dc9e3fb]
  403eac:	push   eax
  403ead:	imul   esp,DWORD PTR [ebx],0x66
  403eb0:	lahf   
  403eb1:	add    DWORD PTR ds:0xd786fb77,edx
  403eb7:	fistp  QWORD PTR [edx+0x5887ad78]
  403ebd:	xchg   esp,eax
  403ebe:	sbb    al,0xd
  403ec0:	push   ecx
  403ec1:	jle    0x403e85
  403ec3:	pusha  
  403ec4:	add    eax,0xde7dc4b4
  403ec9:	dec    ebp
  403eca:	pop    ebp
  403ecb:	out    dx,eax
  403ecc:	mov    eax,0x2359422b
  403ed1:	sub    al,dl
  403ed3:	xchg   DWORD PTR [ebx-0x74],edx
  403ed6:	test   BYTE PTR gs:[eax+0x686e7120],ah
  403edd:	xchg   BYTE PTR [edi+0xbaf619c],ch
  403ee3:	pusha  
  403ee4:	push   edx
  403ee5:	pusha  
  403ee6:	ins    BYTE PTR es:[edi],dx
  403ee7:	outs   dx,DWORD PTR ds:[esi]
  403ee8:	sbb    edi,0xffffffee
  403eeb:	jmp    0x2c77c01c
  403ef0:	in     al,dx
  403ef1:	mov    DWORD PTR [edi+0x5db377c2],eax
  403ef7:	mov    dl,0x17
  403ef9:	or     al,0x93
  403efb:	jbe    0x403f50
  403efd:	repz push edi
  403eff:	fmulp  st(1),st
  403f01:	nop
  403f02:	mov    WORD PTR [eax-0x61e4ce95],cs
  403f08:	add    BYTE PTR [ecx+0x2e],al
  403f0b:	aaa    
  403f0c:	push   edi
  403f0d:	sub    DWORD PTR [ecx],edi
  403f0f:	xchg   ebx,eax
  403f10:	inc    ebp
  403f11:	mov    esp,0x663357ef
  403f16:	mov    edi,DWORD PTR [eax+0x19]
  403f19:	mov    esp,DWORD PTR [edi-0x9]
  403f1c:	xor    eax,0x78477b25
  403f21:	sub    al,0x72
  403f23:	hlt    
  403f24:	mov    edi,DWORD PTR [ebx-0x29aa77e4]
  403f2a:	inc    esp
  403f2b:	dec    ebp
  403f2c:	sbb    bh,BYTE PTR [ecx+0xd]
  403f2f:	scas   eax,DWORD PTR es:[edi]
  403f30:	xchg   DWORD PTR [edi],esp
  403f32:	inc    ebx
  403f33:	cmp    eax,0x2ebe3518
  403f38:	xlat   BYTE PTR ds:[ebx]
  403f39:	xchg   DWORD PTR [ecx],esi
  403f3b:	dec    edx
  403f3c:	cmp    eax,0x2a1c72a7
  403f41:	push   edx
  403f42:	sahf   
  403f43:	fcomp  DWORD PTR [esi]
  403f45:	adc    dh,BYTE PTR [esi+eax*2]
  403f48:	and    eax,0x13c9749f
  403f4d:	adc    eax,0xe8bca4d5
  403f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f53:	push   0x56b4b19
  403f58:	vmread DWORD PTR [edi+0x72fbefb7],esi
  403f5f:	das    
  403f60:	mov    eax,ds:0x631d490
  403f65:	cdq    
  403f66:	mov    ebx,0xc1ca8b93
  403f6b:	rol    BYTE PTR [edx-0x382fceb9],1
  403f71:	iret   
  403f72:	or     DWORD PTR [ecx],ebp
  403f74:	fisttp QWORD PTR [edx-0x9]
  403f77:	push   ds
  403f78:	int    0xe8
  403f7a:	inc    ebp
  403f7b:	cld    
  403f7c:	popa   
  403f7d:	shl    BYTE PTR [edx-0xa],cl
  403f80:	xchg   ebp,eax
  403f81:	js     0x403f91
  403f83:	add    BYTE PTR [ecx+0x1f],0xc8
  403f87:	sbb    DWORD PTR [esi-0x48],edx
  403f8a:	into   
  403f8b:	aaa    
  403f8c:	int    0x6d
  403f8e:	shl    BYTE PTR [ebp+0x5f2086a7],0x51
  403f95:	jle    0x403fec
  403f97:	dec    esi
  403f98:	(bad)  
  403f99:	mov    ebx,0x1adc35cd
  403f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f9f:	lock fnsave [edi]
  403fa2:	jno    0x403fe3
  403fa4:	sub    eax,0x79a99bf
  403fa9:	daa    
  403faa:	pop    ecx
  403fab:	sbb    edx,DWORD PTR [ebx+0x2]
  403fae:	daa    
  403faf:	inc    edi
  403fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb1:	adc    eax,0x98cd4101
  403fb6:	xchg   ecx,eax
  403fb7:	lods   al,BYTE PTR ds:[esi]
  403fb8:	jp     0x403f9b
  403fba:	sub    eax,0x6dac3568
  403fbf:	mov    BYTE PTR [ebx],cl
  403fc1:	sbb    BYTE PTR [eax+ebp*8],al
  403fc4:	aam    0xe8
  403fc6:	xor    DWORD PTR [eax+edx*8+0x2f008699],ebp
  403fcd:	into   
  403fce:	shl    BYTE PTR [eax+0x35ebdd98],1
  403fd4:	sub    eax,DWORD PTR [ebp+ebp*8+0x145074fa]
  403fdb:	cwde   
  403fdc:	scas   eax,DWORD PTR es:[edi]
  403fdd:	inc    ebp
  403fde:	pop    ds
  403fdf:	jmp    0x403fb9
  403fe1:	push   ss
  403fe2:	icebp  
  403fe3:	push   eax
  403fe4:	in     al,dx
  403fe5:	sub    al,0xc7
  403fe7:	mov    eax,0xea448745
  403fec:	adc    BYTE PTR ds:0xab33c5f5,ah
  403ff2:	aam    0x6
  403ff4:	inc    esi
  403ff5:	xor    al,0x41
  403ff7:	xor    DWORD PTR [edx-0x69],eax
  403ffa:	neg    DWORD PTR [edx]
  403ffc:	or     eax,0x46c12999
  404001:	popa   
  404002:	dec    edx
  404003:	pop    esp
  404004:	fst    DWORD PTR [ebx]
  404006:	sub    eax,0x1a9231dd
  40400b:	clc    
  40400c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40400d:	cmp    ch,bh
  40400f:	out    0x7f,al
  404011:	inc    ebx
  404012:	push   es
  404013:	mov    dh,0x6
  404015:	sahf   
  404016:	outs   dx,DWORD PTR ds:[esi]
  404017:	sbb    BYTE PTR [edx+0x54],dh
  40401a:	je     0x404064
  40401c:	aas    
  40401d:	ins    BYTE PTR es:[edi],dx
  40401e:	fistp  WORD PTR [esi]
  404020:	mov    eax,0x41deb6a8
  404025:	pusha  
  404026:	or     eax,0xa9245c51
  40402b:	fs mov esi,0xb48b86e3
  404031:	js     0x403fef
  404033:	pop    esp
  404034:	cwde   
  404035:	or     eax,0xb51eaf4
  40403a:	mov    ?,WORD PTR [ebx]
  40403c:	xor    ah,bl
  40403e:	push   es
  40403f:	pop    es
  404040:	out    dx,al
  404041:	dec    eax
  404042:	sbb    ecx,DWORD PTR [ebx+ebp*1-0x45]
  404046:	xor    ecx,edi
  404048:	inc    edi
  404049:	mul    ah
  40404b:	or     al,0x74
  40404d:	add    eax,0xef780ac7
  404052:	(bad)  
  404053:	sub    bh,BYTE PTR [edx-0x3095e0de]
  404059:	mov    BYTE PTR [edi+0x4c],dl
  40405c:	arpl   WORD PTR [ecx],ax
  40405e:	aad    0x39
  404060:	(bad)  
  404061:	cmc    
  404062:	icebp  
  404063:	xchg   ebp,eax
  404064:	in     al,0xff
  404066:	test   BYTE PTR [ebp+0x305f56d6],dh
  40406c:	cld    
  40406d:	jo     0x404028
  40406f:	jg     0x40405a
  404071:	xor    al,0x47
  404073:	(bad)  
  404075:	mov    bl,0xba
  404077:	push   0xffffff99
  404079:	xor    dl,bl
  40407b:	xchg   ecx,eax
  40407c:	jns    0x404090
  40407e:	mov    eax,0x3a148bd6
  404083:	jle    0x404050
  404085:	add    al,0xe8
  404087:	fidivr DWORD PTR [esi-0x3c]
  40408a:	in     al,dx
  40408b:	into   
  40408c:	imul   edi,DWORD PTR [esp+ebx*8+0x2e852d23],0xf27aee16
  404097:	push   esi
  404098:	(bad)  
  404099:	daa    
  40409a:	fst    QWORD PTR [esi-0xb210a4a]
  4040a0:	retf   0xb68c
  4040a3:	add    BYTE PTR [esi+0x305af6a7],ch
  4040a9:	lahf   
  4040aa:	xor    DWORD PTR [eax+esi*4-0x671d7bb8],ecx
  4040b1:	xchg   ebx,eax
  4040b2:	fidivr WORD PTR [esi-0x6d]
  4040b5:	add    BYTE PTR [edi+ecx*2-0x79aa5a6],0x95
  4040bd:	mov    eax,0x88f0ed5
  4040c2:	fiadd  WORD PTR [esi-0x19849244]
  4040c8:	or     eax,edx
  4040ca:	std    
  4040cb:	dec    esp
  4040cc:	mov    ah,BYTE PTR [edx+0x75]
  4040cf:	dec    esp
  4040d0:	idiv   BYTE PTR [eax]
  4040d2:	fstp   QWORD PTR [edi+0x1048215d]
  4040d8:	jbe    0x40409b
  4040da:	out    dx,eax
  4040db:	or     dl,dl
  4040dd:	(bad)  
  4040de:	push   esp
  4040df:	hlt    
  4040e0:	cmp    bh,dl
  4040e2:	xor    BYTE PTR [eax+0x34],ah
  4040e5:	xchg   DWORD PTR [eax+0x32caacb7],edi
  4040eb:	mov    ?,WORD PTR [ebx+0x65dfa983]
  4040f1:	out    0xda,al
  4040f3:	fsub   QWORD PTR [ebp-0x2b2f0bd]
  4040f9:	or     bl,BYTE PTR [ebx-0x21]
  4040fc:	std    
  4040fd:	mov    eax,0x62b8fed0
  404102:	xchg   edx,eax
  404103:	addr16 jg 0x404182
  404106:	fwait
  404107:	repnz test al,0xc7
  40410a:	sti    
  40410b:	fnstsw WORD PTR [ebx-0x3f71d80c]
  404111:	into   
  404112:	xor    eax,0x733d15dc
  404118:	imul   eax,DWORD PTR [edi+0x4e880b8c],0x46a5d347
  404122:	and    al,BYTE PTR [edi+ebp*1+0x7a7eb2c5]
  404129:	mov    dh,0x4
  40412b:	not    DWORD PTR [edx+eiz*1]
  40412e:	dec    ebp
  40412f:	imul   ebp,esi,0xdfe0c3b9
  404135:	mov    cl,0x60
  404137:	xchg   ebx,eax
  404138:	pop    ebp
  404139:	add    BYTE PTR [eax],ch
  40413b:	dec    eax
  40413c:	or     DWORD PTR [ebp+0x7a6dcb89],esp
  404142:	cdq    
  404143:	sbb    dh,dl
  404145:	cli    
  404146:	(bad)  
  404147:	inc    edi
  404148:	retf   0xd300
  40414b:	and    ebx,ebp
  40414d:	push   eax
  40414e:	xlat   BYTE PTR ds:[ebx]
  40414f:	and    al,0xcd
  404151:	xchg   edi,eax
  404152:	pop    ss
  404153:	mov    dl,0x58
  404155:	aam    0x14
  404157:	adc    al,0xc7
  404159:	mov    ecx,0x6221accb
  40415e:	jg     0x4041b3
  404160:	jge    0x4041df
  404162:	mov    ch,0x17
  404164:	cli    
  404165:	lahf   
  404166:	mov    esi,0x1ea5c718
  40416b:	jno    0x40411e
  40416d:	ficom  WORD PTR [edi+0x19bed038]
  404173:	cmp    DWORD PTR [ecx-0x67],esi
  404176:	aaa    
  404177:	frstor ds:0xa8b18396
  40417d:	adc    BYTE PTR [edi+0x652f4c],ah
  404183:	add    DWORD PTR [ebx-0x2aeab23a],0x5e
  40418a:	push   ebp
  40418b:	push   0xffffff9c
  40418d:	jle    0x404159
  40418f:	dec    esi
  404190:	sbb    BYTE PTR [ecx-0x50],0xfe
  404194:	push   esi
  404195:	jecxz  0x40412f
  404197:	adc    al,0x82
  404199:	lods   al,BYTE PTR ds:[esi]
  40419a:	sub    al,0x83
  40419c:	dec    ecx
  40419d:	push   ebx
  40419e:	ss in  eax,dx
  4041a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041a1:	in     eax,dx
  4041a2:	bound  edi,QWORD PTR [edi]
  4041a4:	ins    BYTE PTR es:[edi],dx
  4041a5:	rol    DWORD PTR [esp+eax*8-0x69],1
  4041a9:	outs   dx,BYTE PTR ds:[esi]
  4041aa:	push   eax
  4041ab:	xor    DWORD PTR [ebx+eiz*8+0x33],ebp
  4041af:	sbb    bl,BYTE PTR [ebx+0x2819a1c8]
  4041b5:	test   al,0x5e
  4041b7:	fidiv  WORD PTR [edi+0x4f6785a7]
  4041bd:	fstp   TBYTE PTR [eax-0x7a]
  4041c0:	das    
  4041c1:	dec    edx
  4041c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c3:	xor    al,0xbe
  4041c5:	ins    BYTE PTR es:[edi],dx
  4041c6:	push   edi
  4041c7:	pop    ebp
  4041c8:	outs   dx,DWORD PTR ds:[esi]
  4041c9:	adc    DWORD PTR [eax],0xa50752ec
  4041cf:	cwde   
  4041d0:	mov    ch,0x38
  4041d2:	ret    
  4041d3:	call   0xb4e1:0xfff6f6ce
  4041da:	test   cl,dl
  4041dc:	stc    
  4041dd:	jbe    0x40423e
  4041df:	dec    DWORD PTR [ebx]
  4041e1:	gs in  al,dx
  4041e3:	or     esp,DWORD PTR [ebp+ebx*8-0x33]
  4041e7:	sub    eax,0xf6c2eea9
  4041ec:	or     DWORD PTR [ebp-0x295e06da],esi
  4041f2:	inc    ebp
  4041f3:	popa   
  4041f4:	gs pop esi
  4041f6:	call   0x409f:0x702c60fa
  4041fd:	ret    
  4041fe:	scas   eax,DWORD PTR es:[edi]
  4041ff:	adc    bh,dh
  404201:	sbb    DWORD PTR [edi],edi
  404203:	aam    0x54
  404205:	addr16 push ecx
  404207:	cmp    al,0x53
  404209:	call   DWORD PTR [ebx]
  40420b:	enter  0x800d,0x31
  40420f:	cwde   
  404210:	gs (bad) 
  404212:	fnstenv [edi-0x2ce83cc0]
  404218:	sti    
  404219:	push   ebp
  40421a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40421b:	jb     0x4041ab
  40421d:	jne    0x4041dd
  40421f:	aad    0x9
  404221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404222:	mov    ch,0x3a
  404224:	jmp    ebp
  404226:	mov    bl,BYTE PTR [ebp-0x38]
  404229:	sbb    BYTE PTR [edi+0x45],al
  40422c:	mov    bl,0x2e
  40422e:	jo     0x40428f
  404230:	mov    BYTE PTR [ebp-0x14b740b4],bl
  404236:	add    eax,0x457baf5c
  40423b:	(bad)
  40423f:	arpl   WORD PTR [eax],si
  404241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404242:	adc    edi,ecx
  404244:	in     al,dx
  404245:	(bad)  
  404246:	xchg   ebp,eax
  404247:	or     esp,DWORD PTR cs:[ecx-0x76]
  40424b:	mov    eax,edi
  40424d:	cmp    ah,BYTE PTR [ebx+0x7]
  404250:	test   DWORD PTR [esp+eax*1],edi
  404253:	pop    eax
  404254:	inc    esi
  404255:	pop    esi
  404256:	dec    edi
  404257:	sub    ebp,ebp
  404259:	jo     0x4042b1
  40425b:	adc    edx,DWORD PTR ds:0xa24fcc63
  404261:	test   BYTE PTR [ecx],ch
  404263:	inc    edx
  404264:	fbstp  TBYTE PTR [eax-0x76]
  404267:	and    cl,cl
  404269:	call   0x622d:0x2e822847
  404270:	push   edx
  404271:	pusha  
  404272:	call   0xf327:0xa9ada1e0
  404279:	mov    eax,0xa34866d6
  40427e:	ins    DWORD PTR es:[edi],dx
  40427f:	sub    bh,dl
  404281:	mov    dh,0x3
  404283:	jbe    0x4042ff
  404285:	mov    ?,WORD PTR [ebx+0x7e]
  404288:	push   edi
  404289:	or     dl,BYTE PTR [ebx+0x4f38e67]
  40428f:	inc    edx
  404290:	inc    ecx
  404291:	outs   dx,BYTE PTR ds:[esi]
  404292:	cmc    
  404293:	dec    edx
  404294:	outs   dx,DWORD PTR ds:[esi]
  404295:	xchg   esp,eax
  404296:	cwde   
  404297:	mov    ecx,0x3b5b9fe9
  40429c:	jns    0x404311
  40429e:	mov    esp,0x5d121094
  4042a3:	sbb    ebx,edi
  4042a5:	jle    0x404302
  4042a7:	icebp  
  4042a8:	xchg   ecx,eax
  4042a9:	dec    esi
  4042aa:	mov    esi,0x9ceae052
  4042af:	js     0x40431b
  4042b1:	stos   DWORD PTR es:[edi],eax
  4042b2:	cmp    esp,DWORD PTR ds:0xd2351e28
  4042b8:	inc    eax
  4042b9:	adc    eax,0xdd26a6d
  4042be:	jae    0x404333
  4042c0:	jge    0x40426e
  4042c2:	mov    ah,0x48
  4042c4:	arpl   WORD PTR [eax+0x349220cf],dx
  4042ca:	repz and ch,bh
  4042cd:	fidiv  DWORD PTR [eax-0x8]
  4042d0:	mov    esp,0xf95dd73e
  4042d5:	push   esp
  4042d6:	aam    0x14
  4042d8:	dec    esp
  4042d9:	std    
  4042da:	ret    0x4a0f
  4042dd:	inc    eax
  4042de:	inc    ebx
  4042df:	cs mov ebp,0xa911def2
  4042e5:	cli    
  4042e6:	aam    0xcb
  4042e8:	xor    eax,0x6d669864
  4042ed:	jo     0x4042ee
  4042ef:	(bad)  [edx-0x1f1356fe]
  4042f5:	shr    DWORD PTR [edi-0x22694a3e],0xd0
  4042fc:	xchg   esp,eax
  4042fd:	arpl   WORD PTR [eax-0x18],cx
  404300:	jns    0x404305
  404302:	and    eax,0xdd7b9f21
  404307:	xchg   BYTE PTR [ecx],dl
  404309:	xchg   BYTE PTR [ecx+esi*4+0x47],al
  40430d:	jmp    0x404291
  40430f:	cmp    al,0xb7
  404311:	fistp  WORD PTR [ecx]
  404313:	das    
  404314:	sbb    cl,BYTE PTR cs:[edx+0x576cbf5d]
  40431b:	pop    esi
  40431c:	dec    edi
  40431d:	xchg   bx,ax
  40431f:	les    edi,FWORD PTR [ebx+0x3162b2f8]
  404325:	add    eax,0xe9847ec4
  40432a:	fist   DWORD PTR [edi]
  40432c:	stos   BYTE PTR es:[edi],al
  40432d:	imul   ecx,DWORD PTR [edi+ebx*4-0x1c924c25],0xdd3135d3
  404338:	(bad)  
  404339:	in     al,0xe1
  40433b:	jmp    0x721cef01
  404340:	les    edi,FWORD PTR [edi]
  404342:	jp     0x4043bb
  404344:	xor    edi,esp
  404346:	out    dx,al
  404347:	cmp    al,0x44
  404349:	in     eax,0x54
  40434b:	pop    ebx
  40434c:	je     0x404373
  40434e:	jo     0x4043ce
  404350:	jmp    0x4042ee
  404352:	int3   
  404353:	cs mov ecx,0x25861077
  404359:	sub    BYTE PTR [ecx+0x13],0xca
  40435d:	mov    bl,0xd1
  40435f:	and    bl,BYTE PTR fs:[ebx]
  404362:	mov    WORD PTR [ebx+0x38b42570],?
  404368:	and    ecx,eax
  40436a:	pop    esp
  40436b:	arpl   WORD PTR [eax+eiz*4],bp
  40436e:	in     al,0x18
  404370:	and    esi,esp
  404372:	jmp    0x4de9:0x8d4a7159
  404379:	sbb    edx,DWORD PTR [ecx]
  40437b:	jno    0x40431d
  40437d:	jbe    0x404309
  40437f:	dec    ecx
  404380:	mov    eax,0x2c55ae7b
  404385:	inc    ebp
  404386:	push   edi
  404387:	fsubr  st,st(6)
  404389:	mov    eax,ds:0x9eb57ecb
  40438e:	add    al,0xc1
  404390:	mov    ecx,0xa77d2920
  404395:	cli    
  404396:	push   ss
  404397:	push   esi
  404398:	shl    BYTE PTR [edi-0x25],1
  40439b:	push   ecx
  40439c:	push   esp
  40439d:	xchg   ecx,eax
  40439e:	rol    BYTE PTR [edx+0x24705494],cl
  4043a4:	add    al,0x60
  4043a6:	test   al,0xe
  4043a8:	fdivp  st(2),st
  4043aa:	xor    ebx,eax
  4043ac:	cli    
  4043ad:	repnz call 0x5bd6:0x880ae6cc
  4043b5:	leave  
  4043b6:	adc    BYTE PTR [edx],dh
  4043b8:	je     0x404347
  4043ba:	adc    BYTE PTR [eax],ah
  4043bc:	push   0xec072a13
  4043c1:	mov    esi,0x1b9ebe1a
  4043c6:	leave  
  4043c7:	not    DWORD PTR [edx+0x77a54ddb]
  4043cd:	add    al,0xcb
  4043cf:	ret    
  4043d0:	xor    bh,BYTE PTR [ebp+0x2ab5d5f0]
  4043d6:	sub    BYTE PTR [esi-0x80],ah
  4043d9:	sbb    DWORD PTR [esi],esi
  4043db:	dec    ecx
  4043dc:	fidiv  WORD PTR [eax-0x63]
  4043df:	scas   eax,DWORD PTR es:[edi]
  4043e0:	js     0x40445f
  4043e2:	daa    
  4043e3:	addr16 mov ecx,edx
  4043e6:	sahf   
  4043e7:	sbb    ebx,DWORD PTR [ebx+ebp*2]
  4043ea:	xchg   esp,eax
  4043eb:	ret    0x287a
  4043ee:	push   ds
  4043ef:	pop    ebx
  4043f0:	adc    DWORD PTR [ecx],edx
  4043f2:	xchg   ebp,eax
  4043f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043f4:	mov    ah,BYTE PTR [esi+ecx*4]
  4043f7:	hlt    
  4043f8:	ficomp DWORD PTR [eax+ebx*8-0x55d0710e]
  4043ff:	pop    edx
  404400:	leave  
  404401:	ins    DWORD PTR es:[edi],dx
  404402:	repnz sahf 
  404404:	mov    edi,0xfcb71a12
  404409:	clc    
  40440a:	mov    bh,0x97
  40440c:	add    dl,BYTE PTR [eax+0x37]
  40440f:	cwde   
  404410:	pop    edx
  404411:	and    bl,dl
  404413:	fs into 
  404415:	jae    0x4043cf
  404417:	mov    ebp,0x93bdb094
  40441c:	push   edx
  40441d:	jecxz  0x40444b
  40441f:	leave  
  404420:	pop    edx
  404421:	test   eax,0x27c9a3f5
  404426:	and    eax,0xc4e3872f
  40442b:	push   ds
  40442c:	cld    
  40442d:	ret    
  40442e:	mov    al,ds:0x3478829e
  404433:	pop    edx
  404434:	add    esi,DWORD PTR [ebp+0x128a9491]
  40443a:	call   0x8b05e455
  40443f:	mov    bl,0x3c
  404441:	mov    bl,BYTE PTR [ebx-0x9522d0c]
  404447:	ins    BYTE PTR es:[edi],dx
  404448:	inc    esi
  404449:	stos   BYTE PTR es:[edi],al
  40444a:	jnp    0x4043ef
  40444c:	je     0x40445a
  40444e:	add    DWORD PTR [ecx],esi
  404450:	scas   eax,DWORD PTR es:[edi]
  404451:	mov    dh,0x1d
  404453:	sub    al,0x4e
  404455:	mov    ebx,0x8918f9cd
  40445a:	xchg   edi,eax
  40445b:	ss jne 0x40444e
  40445e:	inc    ebx
  40445f:	xchg   esi,edx
  404461:	rcl    cl,1
  404463:	sub    BYTE PTR [ebx],0xc6
  404466:	xchg   edi,eax
  404467:	jae    0x404491
  404469:	jp     0x404491
  40446b:	stos   DWORD PTR es:[edi],eax
  40446c:	add    edx,DWORD PTR [esi]
  40446e:	jno    0x404475
  404470:	fisub  WORD PTR [ecx]
  404472:	scas   eax,DWORD PTR es:[edi]
  404473:	push   ecx
  404474:	jle    0x404494
  404476:	cld    
  404477:	and    eax,0x38566e4
  40447c:	cmp    BYTE PTR [ebx],dh
  40447e:	push   edi
  40447f:	loope  0x4044e7
  404481:	push   edi
  404482:	cmp    dl,BYTE PTR [esi-0x57]
  404485:	jnp    0x4044fe
  404487:	push   ds
  404488:	pushf  
  404489:	sahf   
  40448a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40448b:	dec    edx
  40448c:	mov    ch,dl
  40448e:	inc    eax
  40448f:	cwde   
  404490:	pop    esp
  404491:	fdivr  QWORD PTR [ebx+esi*1-0x31610593]
  404498:	inc    esp
  404499:	cdq    
  40449a:	das    
  40449b:	ret    
  40449c:	add    bh,BYTE PTR [esi+0x4b889f84]
  4044a2:	int3   
  4044a3:	ja     0x4044ac
  4044a5:	outs   dx,BYTE PTR ds:[esi]
  4044a6:	(bad)
  4044a9:	ins    DWORD PTR es:[edi],dx
  4044aa:	call   DWORD PTR [edi-0x1b]
  4044ad:	mov    edi,0xb4a509c8
  4044b2:	in     eax,0x78
  4044b4:	fsub   DWORD PTR [ecx-0x4fae045e]
  4044ba:	sub    dh,BYTE PTR [edx]
  4044bc:	sti    
  4044bd:	jns    0x40449b
  4044bf:	gs aas 
  4044c1:	ja     0x404492
  4044c3:	pop    ebx
  4044c4:	push   eax
  4044c5:	mov    WORD PTR [ecx+0x1d13e860],?
  4044cb:	push   edx
  4044cc:	inc    eax
  4044cd:	int    0xa9
  4044cf:	loope  0x404544
  4044d1:	loop   0x404478
  4044d3:	dec    eax
  4044d4:	push   ebp
  4044d5:	xlat   BYTE PTR ds:[ebx]
  4044d6:	ins    BYTE PTR es:[edi],dx
  4044d7:	in     al,0x25
  4044d9:	ins    DWORD PTR es:[edi],dx
  4044da:	add    al,dl
  4044dc:	mov    dh,BYTE PTR [edi-0x70]
  4044df:	push   esp
  4044e0:	adc    DWORD PTR [ecx],ebp
  4044e2:	shl    BYTE PTR [ecx-0x1f826ab2],cl
  4044e8:	or     dh,dl
  4044ea:	out    dx,al
  4044eb:	or     al,0x90
  4044ed:	xchg   BYTE PTR [eax],ah
  4044ef:	mov    eax,ds:0x9f9ad7cd
  4044f4:	popa   
  4044f5:	arpl   bx,sp
  4044f7:	jg     0x4044eb
  4044f9:	sub    esp,DWORD PTR [esi+0x7a]
  4044fc:	xor    BYTE PTR [edx-0x179b89f2],dh
  404502:	sbb    BYTE PTR [edx],0xf6
  404505:	jmp    0xc1d22027
  40450a:	cwde   
  40450b:	push   eax
  40450c:	cdq    
  40450d:	sbb    bl,BYTE PTR [esp+eax*1-0x2ffc32c4]
  404514:	stos   DWORD PTR es:[edi],eax
  404515:	add    al,0xa8
  404517:	jp     0x404545
  404519:	retf   0x162c
  40451c:	data16 shr BYTE PTR [ecx],0x39
  404520:	std    
  404521:	mov    BYTE PTR [ecx+0x32442e05],0xcc
  404528:	jnp    0x404585
  40452a:	mov    ?,WORD PTR [edi+0x18]
  40452d:	icebp  
  40452e:	add    BYTE PTR ds:0xd023e91d,bh
  404534:	neg    DWORD PTR [eax-0x6140b821]
  40453a:	into   
  40453b:	cmp    eax,0xd1628eb7
  404540:	jbe    0x404533
  404542:	adc    ebx,DWORD PTR [edx+0x1181e1f3]
  404548:	mov    ebp,0xb5ddcb3b
  40454d:	xlat   BYTE PTR ds:[ebx]
  40454e:	dec    eax
  40454f:	cmc    
  404550:	adc    al,0x35
  404552:	push   ds
  404553:	jo     0x404593
  404555:	sbb    BYTE PTR [ebp-0x38],0x18
  404559:	pop    edi
  40455a:	stos   DWORD PTR es:[edi],eax
  40455b:	imul   ebx,DWORD PTR [edi],0xbc501457
  404561:	adc    bh,dh
  404563:	sbb    ebp,DWORD PTR [esi+0x7da030c5]
  404569:	std    
  40456a:	dec    esp
  40456b:	addr16 jne 0x404576
  40456e:	and    eax,0x6b363fe1
  404573:	add    eax,0x6fa3d8f1
  404578:	je     0x4045b9
  40457a:	repnz ins DWORD PTR es:[edi],dx
  40457c:	mov    bh,BYTE PTR [ecx]
  40457e:	clc    
  40457f:	push   ss
  404580:	cld    
  404581:	jle    0x40455b
  404583:	scas   eax,DWORD PTR es:[edi]
  404584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404585:	dec    ebp
  404586:	loopne 0x404515
  404588:	ret    
  404589:	ja     0x4045f5
  40458b:	jns    0x40458a
  40458d:	arpl   WORD PTR [esi+0x2e],bx
  404590:	inc    ebx
  404591:	or     al,ch
  404593:	aam    0x32
  404595:	or     al,0x58
  404597:	pop    eax
  404598:	imul   edx,DWORD PTR [ebx+ebx*1-0x474c20b],0xffffffd9
  4045a0:	pop    ebx
  4045a1:	mov    al,ds:0x41c5df43
  4045a6:	aam    0x2f
  4045a8:	stos   BYTE PTR es:[edi],al
  4045a9:	outs   dx,BYTE PTR ds:[esi]
  4045aa:	mul    edi
  4045ac:	movq   mm5,mm6
  4045af:	jg     0x4045aa
  4045b1:	adc    esi,ecx
  4045b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b4:	bnd jnp 0x40459f
  4045b7:	dec    esp
  4045b8:	sub    eax,0x3bd41db0
  4045bd:	mov    ebp,0x74f50a36
  4045c2:	and    al,0xeb
  4045c4:	jmp    0x4045a7
  4045c6:	rcr    ebp,cl
  4045c8:	inc    edi
  4045c9:	sub    BYTE PTR [esi],dl
  4045cb:	mov    edx,0x60536795
  4045d0:	inc    ecx
  4045d1:	mov    bl,0xc
  4045d3:	jno    0x404583
  4045d5:	jp     0x404598
  4045d7:	mov    ebp,0x82a2ed86
  4045dc:	mov    al,0x85
  4045de:	or     eax,0x8ab39811
  4045e3:	push   edi
  4045e4:	adc    BYTE PTR [edi-0x274db927],bl
  4045ea:	xchg   edx,eax
  4045eb:	or     edi,DWORD PTR [edi-0x63]
  4045ee:	mov    edx,DWORD PTR [ecx-0x10bfdc35]
  4045f4:	ss dec eax
  4045f6:	pop    es
  4045f7:	int3   
  4045f8:	xor    cl,0x32
  4045fb:	cli    
  4045fc:	push   esp
  4045fd:	fsubr  QWORD PTR [ebp-0x3c]
  404600:	add    al,0xb6
  404602:	jno    0x404638
  404604:	sbb    bl,BYTE PTR [esp+edx*2-0xb]
  404608:	sub    BYTE PTR [edx],0x5d
  40460b:	icebp  
  40460c:	push   cs
  40460d:	mov    ds:0x6708e255,eax
  404612:	sbb    eax,0xc3649008
  404617:	(bad)  
  404618:	mov    DWORD PTR [ecx-0x3570c8ee],0x83009915
  404622:	pop    edx
  404623:	mov    ah,0xc8
  404625:	test   eax,0x4ce6b15b
  40462a:	adc    DWORD PTR [ecx+0x74],eax
  40462d:	mov    edi,0x422c8896
  404632:	pop    esi
  404633:	sub    al,0x4e
  404635:	cli    
  404636:	add    al,0x71
  404638:	je     0x4046a0
  40463a:	jne    0x404602
  40463c:	retf   0xb39e
  40463f:	adc    bl,BYTE PTR [edi-0x1b]
  404642:	add    BYTE PTR [edx],dh
  404644:	cwde   
  404645:	(bad)  
  404647:	xchg   esi,eax
  404648:	in     al,dx
  404649:	and    eax,0xcad9894
  40464e:	sti    
  40464f:	out    0xc7,eax
  404651:	fcomp  QWORD PTR [ebx+0x5b5b704a]
  404657:	fnstenv [ebx+ebp*4+0xca92ff6]
  40465e:	xchg   DWORD PTR [edx-0x2b],ebx
  404661:	xor    al,BYTE PTR [ecx-0x45]
  404664:	jae    0x404683
  404666:	adc    bl,dl
  404668:	or     eax,0x9df43e54
  40466d:	lock push eax
  40466f:	bound  edx,QWORD PTR [ecx+ebx*8]
  404672:	lds    ecx,FWORD PTR [edx]
  404674:	ja     0x40462f
  404676:	arpl   WORD PTR [bx+si-0x1d],di
  40467a:	xchg   ecx,eax
  40467b:	or     ebp,DWORD PTR [ebx-0x39]
  40467e:	adc    ah,BYTE PTR [edi-0xa]
  404681:	aam    0xfa
  404683:	data16 fisubr WORD PTR [ecx]
  404686:	sar    DWORD PTR [edx-0x29725dd8],0xe5
  40468d:	loopne 0x4046b0
  40468f:	add    edi,DWORD PTR [ebx]
  404691:	aam    0x1b
  404693:	jmp    DWORD PTR [ebx-0x6ad74078]
  404699:	inc    ebp
  40469a:	push   ebp
  40469b:	dec    ebx
  40469c:	fst    DWORD PTR [edi]
  40469e:	dec    ebx
  40469f:	sbb    eax,DWORD PTR [edx]
  4046a1:	xor    eax,0x16d8d404
  4046a6:	imul   ebx,DWORD PTR [edi+0x21ebd6ee],0x712167d7
  4046b0:	pop    es
  4046b1:	and    ecx,eax
  4046b3:	fist   WORD PTR [eax+0x17d3e3b9]
  4046b9:	inc    ebx
  4046ba:	mov    DWORD PTR [esi-0x65],ebx
  4046bd:	add    DWORD PTR [ecx+0x2c],ebp
  4046c0:	div    DWORD PTR [edx-0x460f1dee]
  4046c6:	cli    
  4046c7:	fwait
  4046c8:	ins    BYTE PTR es:[edi],dx
  4046c9:	enter  0xf5ca,0x51
  4046cd:	push   ecx
  4046ce:	adc    al,0x8a
  4046d0:	retf   
  4046d1:	adc    al,BYTE PTR [edi]
  4046d3:	stos   DWORD PTR es:[edi],eax
  4046d4:	or     esi,DWORD PTR [ebp+0x12ea0cc]
  4046da:	xchg   DWORD PTR [ebp*2+0x4e32e741],ebx
  4046e1:	sbb    ebp,esi
  4046e3:	mov    eax,0xbc7cea68
  4046e8:	pop    es
  4046e9:	mov    bl,0xd6
  4046eb:	fs fsubp st(2),st
  4046ee:	jmp    0x404739
  4046f0:	enter  0x2d20,0x34
  4046f4:	shl    bl,0x80
  4046f7:	imul   edi
  4046f9:	ss xchg ebx,eax
  4046fb:	or     dh,bl
  4046fd:	adc    al,0xb8
  4046ff:	cmp    ebx,esp
  404701:	aas    
  404702:	cmc    
  404703:	lea    ebp,[ebx]
  404705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404706:	cmc    
  404707:	shl    BYTE PTR [edi+0x68],cl
  40470a:	pop    esi
  40470b:	std    
  40470c:	xor    al,0x4b
  40470e:	push   ds
  40470f:	and    al,0x9d
  404711:	mov    dl,0x5d
  404713:	mov    dl,0xa
  404715:	xor    eax,0xb9bf9d1d
  40471a:	aam    0x9e
  40471c:	mov    ebx,DWORD PTR [edx]
  40471e:	fidiv  WORD PTR [esi+0x78f3d788]
  404724:	xchg   esp,eax
  404725:	enter  0x3bf4,0x1b
  404729:	popa   
  40472a:	pop    edx
  40472b:	fwait
  40472c:	(bad)  
  40472d:	shl    DWORD PTR ds:0xf75ce7ee,cl
  404733:	stc    
  404734:	adc    DWORD PTR [edx-0x11],eax
  404737:	xchg   edx,eax
  404738:	mov    dh,0xfe
  40473a:	jmp    0x4046fc
  40473c:	cmp    eax,0xd073b589
  404741:	push   0x2720f48d
  404746:	xor    BYTE PTR [eax],cl
  404748:	pop    ds
  404749:	and    eax,0xc0bd5e7f
  40474e:	fs loop 0x4046e3
  404751:	sar    DWORD PTR [ebx-0x62754e4a],0x2b
  404758:	jl     0x404799
  40475a:	cmp    BYTE PTR [eax+0x30905e16],0x99
  404761:	adc    esp,0x46
  404764:	xor    ebx,DWORD PTR [edx]
  404766:	fidivr DWORD PTR [ebx]
  404768:	push   eax
  404769:	sbb    DWORD PTR [ebp-0x6832e3dc],0x3bb20f73
  404773:	leave  
  404774:	lahf   
  404775:	pop    edx
  404776:	and    eax,0x45911605
  40477b:	retf   
  40477c:	pushf  
  40477d:	aas    
  40477e:	dec    ecx
  40477f:	push   ecx
  404780:	rcr    BYTE PTR [ebp-0x48b734ce],1
  404786:	mov    bl,BYTE PTR [esi-0x4d]
  404789:	loope  0x4047e6
  40478b:	pop    es
  40478c:	ins    BYTE PTR es:[edi],dx
  40478d:	aaa    
  40478e:	mov    dl,0xc7
  404790:	cdq    
  404791:	addr16 push ebp
  404793:	push   ds
  404794:	mov    dl,0xd1
  404796:	fmul   QWORD PTR [ebp-0x42]
  404799:	je     0x40475e
  40479b:	or     cl,BYTE PTR ds:0xec7ed27c
  4047a1:	shl    BYTE PTR [eax],0xa4
  4047a4:	dec    esi
  4047a5:	or     DWORD PTR es:[esi-0x59b45451],ebp
  4047ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ad:	cmp    DWORD PTR es:[esi+eiz*2+0x1e],edx
  4047b2:	jmp    0x78d9:0x6a20ef14
  4047b9:	or     BYTE PTR [esi+0x5f],0x5f
  4047bd:	mov    BYTE PTR ds:0x9232aaff,bh
  4047c3:	rcr    ah,cl
  4047c5:	push   ss
  4047c6:	mov    al,ds:0x440aeeb6
  4047cb:	mov    bl,0x9d
  4047cd:	add    DWORD PTR [eax+0x1b],edi
  4047d0:	push   edx
  4047d1:	inc    ebp
  4047d2:	pop    edi
  4047d3:	pop    esp
  4047d4:	es in  eax,dx
  4047d6:	les    esi,FWORD PTR [ebx]
  4047d8:	jb     0x4047ac
  4047da:	retf   
  4047db:	cmp    DWORD PTR [ebx],edx
  4047dd:	dec    ebp
  4047de:	jno    0x4047de
  4047e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047e1:	cs sbb eax,0x290c5d77
  4047e7:	inc    ecx
  4047e8:	push   ds
  4047e9:	out    dx,al
  4047ea:	or     al,0xdb
  4047ec:	add    dl,BYTE PTR [edi+0x23]
  4047ef:	icebp  
  4047f0:	mov    WORD PTR [ebx+0x7d],gs
  4047f3:	jnp    0x404791
  4047f5:	fldcw  WORD PTR [ebp-0x1]
  4047f8:	dec    ebp
  4047f9:	jecxz  0x4047f9
  4047fb:	push   es
  4047fc:	adc    ch,BYTE PTR [ebp+ecx*4-0x4d]
  404800:	cmp    ecx,DWORD PTR [eax]
  404802:	push   0x63
  404804:	rcl    BYTE PTR [edi-0x52],0xdc
  404808:	xor    eax,0xf3e012e2
  40480d:	pop    edi
  40480e:	dec    edx
  40480f:	ja     0x4047e1
  404811:	popa   
  404812:	in     al,0x64
  404814:	lods   eax,DWORD PTR ds:[esi]
  404815:	gs jmp 0xab452767
  40481b:	in     al,0xfc
  40481d:	fdivr  st,st(6)
  40481f:	shr    eax,0x59
  404822:	fnstcw WORD PTR [eax+0xd32e96f]
  404828:	ins    BYTE PTR es:[edi],dx
  404829:	mov    ah,0x1e
  40482b:	and    eax,0x73078873
  404830:	jae    0x4047b4
  404832:	retf   
  404833:	xor    al,0x57
  404835:	inc    ebp
  404836:	sbb    al,0x1f
  404838:	push   es
  404839:	mov    cl,0x4
  40483b:	inc    ecx
  40483c:	pop    esp
  40483d:	shl    DWORD PTR [ecx+ebp*8+0x3157a64f],0x6c
  404845:	inc    esp
  404846:	adc    ecx,DWORD PTR [edx+0x24465677]
  40484c:	xor    edi,DWORD PTR [ecx+0x12]
  40484f:	(bad)  
  404850:	adc    ebp,ebp
  404852:	cwde   
  404853:	adc    ebp,DWORD PTR [eax+eiz*1+0x32]
  404857:	outs   dx,DWORD PTR ds:[esi]
  404858:	mov    eax,0x1f2fcb4d
  40485d:	stos   BYTE PTR es:[edi],al
  40485e:	mov    gs,WORD PTR [esi+ebx*8-0x32]
  404862:	mov    bl,BYTE PTR [esp+eax*2-0x222e3ed3]
  404869:	cdq    
  40486a:	fwait
  40486b:	inc    ecx
  40486c:	add    eax,0xffffffcc
  40486f:	aaa    
  404870:	test   al,0xf7
  404872:	pop    ebx
  404873:	stos   DWORD PTR es:[edi],eax
  404874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404875:	sar    BYTE PTR [esi],0xaa
  404878:	jne    0x4048a8
  40487a:	mov    ebp,0x5d39f03c
  40487f:	jne    0x4048c6
  404881:	pop    esi
  404882:	int    0xc3
  404884:	fiadd  DWORD PTR [edx]
  404886:	sti    
  404887:	mov    dh,0xc
  404889:	push   cs
  40488a:	xor    DWORD PTR [ebx],edi
  40488c:	jg     0x404814
  40488e:	fst    DWORD PTR [esp+ecx*1-0x743e8002]
  404895:	ss adc al,0xbd
  404898:	and    cl,BYTE PTR [si]
  40489b:	dec    bp
  40489d:	mov    al,0x34
  40489f:	pusha  
  4048a0:	mov    edi,esp
  4048a2:	and    ecx,DWORD PTR [edi-0x1fdbde44]
  4048a8:	adc    BYTE PTR [edi-0x49],0xab
  4048ac:	call   0x945e2558
  4048b1:	cmp    ebx,DWORD PTR [eax+0x469e8c9a]
  4048b7:	jg     0x404855
  4048b9:	mov    ebp,0x9c086e5d
  4048be:	daa    
  4048bf:	imul   edi,DWORD PTR [ecx+ecx*4],0x13ea5927
  4048c6:	mov    edx,esp
  4048c8:	pop    ebp
  4048c9:	adc    BYTE PTR [ebx-0x76],0xa5
  4048cd:	scas   eax,DWORD PTR es:[edi]
  4048ce:	xchg   esp,eax
  4048cf:	arpl   cx,bx
  4048d1:	cmp    eax,edx
  4048d3:	inc    ecx
  4048d4:	dec    edx
  4048d5:	(bad)  
  4048d6:	pop    ecx
  4048d7:	or     ch,BYTE PTR fs:[esi+0x636863f5]
  4048de:	mov    DWORD PTR [eax+eiz*4-0x4a3e73d5],edx
  4048e5:	cs inc esi
  4048e7:	cli    
  4048e8:	pop    ecx
  4048e9:	out    dx,al
  4048ea:	(bad)  
  4048eb:	retf   0x917e
  4048ee:	and    esp,DWORD PTR [eax-0xcb02fad]
  4048f4:	xor    edx,ebp
  4048f6:	mov    ebx,DWORD PTR [edx]
  4048f8:	dec    ebx
  4048f9:	mov    esp,0x214023e7
  4048fe:	adc    BYTE PTR [edi-0x3],0x5b
  404902:	sbb    bh,dl
  404904:	add    bh,BYTE PTR [edx+0x16bf64b9]
  40490a:	aas    
  40490b:	jecxz  0x40496d
  40490d:	aad    0x11
  40490f:	add    BYTE PTR [ebp-0x57],cl
  404912:	loopne 0x4048b6
  404914:	push   0x97c8b792
  404919:	adc    esi,edx
  40491b:	fisttp WORD PTR [esi-0x1]
  40491e:	mov    DWORD PTR [eax+0x21],eax
  404921:	mov    eax,ds:0xa583f168
  404926:	stc    
  404927:	(bad)  
  404928:	fisubr DWORD PTR [eax-0x75]
  40492b:	leave  
  40492c:	cmp    dh,cl
  40492e:	stos   BYTE PTR es:[edi],al
  40492f:	call   0x3263:0x463f8af
  404936:	cmp    al,0xf5
  404938:	lods   eax,DWORD PTR ds:[esi]
  404939:	(bad)  
  40493a:	shr    BYTE PTR [edx-0xc],1
  40493d:	jnp    0x4049aa
  40493f:	jle    0x404910
  404941:	cli    
  404942:	add    BYTE PTR [esi-0x61],ah
  404945:	push   es
  404946:	pop    esp
  404947:	or     dl,bl
  404949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40494a:	mov    ebx,0xc167f40d
  40494f:	dec    ebp
  404950:	sub    eax,0xd02b4fa6
  404955:	jne    0x4048e2
  404957:	push   0x48abda8b
  40495c:	jg     0x404940
  40495e:	sbb    eax,DWORD PTR gs:[ecx]
  404961:	and    DWORD PTR [ecx-0x5a],ebp
  404964:	loopne 0x40496d
  404966:	je     0x4049c0
  404968:	(bad)  
  404969:	jle    0x404985
  40496b:	sub    DWORD PTR [edx+ebp*8+0x2737afd1],0x5e13206e
  404976:	ins    BYTE PTR es:[edi],dx
  404977:	cmp    BYTE PTR [esi+0x47f03569],dl
  40497d:	test   DWORD PTR [edx-0x59],ebp
  404980:	lahf   
  404981:	adc    eax,0xbeedecfc
  404986:	enter  0xeb1d,0xdf
  40498a:	lock dec edi
  40498c:	in     al,dx
  40498d:	fwait
  40498e:	lea    ecx,[ebp+eiz*4+0x35]
  404992:	les    eax,FWORD PTR [esi-0x25]
  404995:	nop
  404996:	fucomip st,st(1)
  404998:	sbb    eax,DWORD PTR [ecx+0xa0f04cc]
  40499e:	cli    
  40499f:	popf   
  4049a0:	xchg   edi,eax
  4049a1:	mov    ebp,0xf78177fe
  4049a6:	fild   WORD PTR [ebp+0x6389859d]
  4049ac:	or     al,0x13
  4049ae:	inc    ebp
  4049af:	pusha  
  4049b0:	sbb    BYTE PTR [ebp+0x5c],al
  4049b3:	xor    ah,BYTE PTR [ebx+0x53]
  4049b6:	push   ebx
  4049b7:	imul   ebp,DWORD PTR [ecx-0x41f5c345],0x4b
  4049be:	sbb    BYTE PTR [ebx+0x7f],dl
  4049c1:	repnz call 0xe1f1:0x1f5a799
  4049c9:	jg     0x404a3d
  4049cb:	jp     0x4049cf
  4049cd:	out    dx,eax
  4049ce:	add    eax,0xbdf3fd82
  4049d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d4:	push   ds
  4049d5:	fild   QWORD PTR [eax-0x3a]
  4049d8:	and    BYTE PTR [edx-0x971c500],0xf6
  4049df:	sbb    BYTE PTR [edi+0x2f],al
  4049e2:	aad    0xa4
  4049e4:	imul   ebp,DWORD PTR [eax],0xffffffc5
  4049e7:	pop    edi
  4049e8:	jae    0x325e2055
  4049ee:	add    BYTE PTR [edx],bh
  4049f0:	jg     0x4049fc
  4049f2:	test   bl,dh
  4049f4:	(bad)  
  4049f5:	pop    ebp
  4049f6:	lods   al,BYTE PTR ds:[esi]
  4049f7:	stos   BYTE PTR es:[edi],al
  4049f8:	into   
  4049f9:	fist   DWORD PTR [edx+0x77]
  4049fc:	ds mov esp,0xda443d92
  404a02:	aaa    
  404a03:	sbb    DWORD PTR [eax+0x59f15f71],esp
  404a09:	sbb    al,0x9
  404a0b:	mov    eax,ds:0xf10a047b
  404a11:	fmul   QWORD PTR [ebx+eiz*2]
  404a14:	test   eax,0xe1bd5f15
  404a19:	mov    al,ds:0x98ab2625
  404a1e:	add    dl,BYTE PTR [ecx-0x60f6818c]
  404a24:	lock jbe 0x404a7b
  404a27:	cdq    
  404a28:	imul   esp,esi,0x7d
  404a2b:	xor    BYTE PTR [eax+ebx*2-0x65],bh
  404a2f:	xchg   ecx,eax
  404a30:	stos   BYTE PTR es:[edi],al
  404a31:	add    al,0x10
  404a33:	inc    edx
  404a34:	and    al,0x8e
  404a36:	lods   eax,DWORD PTR ds:[esi]
  404a37:	xchg   edi,eax
  404a38:	stc    
  404a39:	jge    0x404a60
  404a3b:	jl     0x404a3d
  404a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a3e:	dec    ebx
  404a3f:	in     al,dx
  404a40:	cmp    DWORD PTR [bx+si+0x3873],edi
  404a45:	adc    dl,BYTE PTR [edi]
  404a47:	je     0x404a03
  404a49:	neg    BYTE PTR [ebx]
  404a4b:	call   0xdfa2f76b
  404a50:	inc    edi
  404a51:	xchg   esp,eax
  404a52:	inc    edi
  404a53:	sbb    al,0xe4
  404a55:	add    ah,BYTE PTR [edx-0x48468677]
  404a5b:	fwait
  404a5c:	inc    ebx
  404a5d:	mov    al,0x7e
  404a5f:	xor    eax,0xe70d3855
  404a64:	jo     0x404aa9
  404a66:	or     cl,BYTE PTR [ebx+0x3d]
  404a69:	mov    ebp,0x477db4ab
  404a6e:	data16 fcmovbe st,st(6)
  404a71:	sub    bh,BYTE PTR [ebx*4+0x9bc75d6]
  404a78:	mov    edx,DWORD PTR [esi]
  404a7a:	ins    BYTE PTR es:[edi],dx
  404a7b:	out    dx,eax
  404a7c:	fs xchg ebx,eax
  404a7e:	mov    ebp,0x6e1c403b
  404a83:	mov    ch,0x44
  404a85:	cwde   
  404a86:	inc    edx
  404a87:	mov    ds:0x445c69b6,al
  404a8c:	fistp  WORD PTR [edx+0x66550730]
  404a92:	ret    0x9a41
  404a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a96:	mov    edx,0xd5f2bb3f
  404a9b:	jmp    0x6822:0x5c751b52
  404aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa3:	mov    al,0x85
  404aa5:	cmc    
  404aa6:	daa    
  404aa7:	cmp    ebp,DWORD PTR [edx+0x7]
  404aaa:	mov    eax,0x84da72cd
  404aaf:	pop    edx
  404ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab1:	imul   eax,DWORD PTR [esi+ebp*1-0x4c],0x17d61f1d
  404ab9:	push   esi
  404aba:	jbe    0x404a49
  404abc:	mov    ebp,0x57c03a92
  404ac1:	mov    cl,0x83
  404ac3:	jo     0x404b36
  404ac5:	push   edx
  404ac6:	pusha  
  404ac7:	cmp    al,0xb
  404ac9:	gs push ecx
  404acb:	or     al,BYTE PTR [ebx]
  404acd:	and    eax,esp
  404acf:	adc    dl,BYTE PTR ds:0x2308aae4
  404ad5:	int    0x28
  404ad7:	dec    ecx
  404ad8:	cli    
  404ad9:	ret    0x3211
  404adc:	paddd  mm2,QWORD PTR [ebp-0x31b935ae]
  404ae3:	rcl    BYTE PTR [ecx-0x7e61412d],cl
  404ae9:	jmp    0x30f6:0x5d238e6d
  404af0:	neg    DWORD PTR [esi+0x17]
  404af3:	and    eax,0xa11bb390
  404af8:	xchg   ebp,eax
  404af9:	std    
  404afa:	jns    0x404b4b
  404afc:	fisttp WORD PTR [ebp+ebx*4-0x53]
  404b00:	pusha  
  404b01:	imul   ecx,DWORD PTR [ecx+0x31c2e86f],0xc
  404b08:	cmc    
  404b09:	push   eax
  404b0a:	adc    eax,0x4bf2e562
  404b0f:	test   al,0x10
  404b11:	(bad)  
  404b12:	call   0x76f4:0x26a6408e
  404b19:	(bad)  
  404b1a:	xlat   BYTE PTR ds:[ebx]
  404b1b:	mov    dh,0xa7
  404b1d:	mov    ch,0x46
  404b1f:	pop    ss
  404b20:	and    bh,BYTE PTR [ebx-0x26826c75]
  404b26:	lahf   
  404b27:	pop    edx
  404b28:	cs cwd 
  404b2b:	(bad)  
  404b2c:	mov    cl,0x2a
  404b2e:	jbe    0x404ae6
  404b30:	push   es
  404b31:	ja     0x404aec
  404b33:	mov    ds:0xb67c775,al
  404b38:	int    0x61
  404b3a:	pop    ss
  404b3b:	pop    ds
  404b3c:	outs   dx,BYTE PTR ds:[esi]
  404b3d:	shr    DWORD PTR [edi],0xfa
  404b40:	shl    ebp,cl
  404b42:	sahf   
  404b43:	push   ecx
  404b44:	push   ebp
  404b45:	pusha  
  404b46:	rcl    DWORD PTR [eax+0x24],cl
  404b49:	xor    dh,al
  404b4b:	(bad)  
  404b4c:	je     0x404bb1
  404b4e:	ins    DWORD PTR es:[edi],dx
  404b4f:	mov    esp,0xeb3ed0ff
  404b54:	xor    eax,0x6235860a
  404b59:	cmp    al,0x95
  404b5b:	js     0x404b42
  404b5d:	cmp    al,0xf0
  404b5f:	jecxz  0x404ba5
  404b61:	add    DWORD PTR [edi],ebx
  404b63:	jmp    0x404be2
  404b65:	xor    bh,0x69
  404b68:	outs   dx,DWORD PTR ds:[esi]
  404b69:	jg     0x404b55
  404b6b:	push   ebx
  404b6c:	pop    es
  404b6d:	cmp    edx,ebp
  404b6f:	cmp    ah,al
  404b71:	inc    edi
  404b72:	loopne 0x404b3e
  404b74:	shr    DWORD PTR [ecx],cl
  404b76:	sub    DWORD PTR ds:0xbac8f262,edx
  404b7c:	popf   
  404b7d:	sahf   
  404b7e:	xchg   edi,eax
  404b7f:	jmp    0x5aaf75fb
  404b84:	cmp    edx,ecx
  404b86:	(bad)  
  404b87:	into   
  404b88:	cli    
  404b89:	je     0x404bd8
  404b8b:	sub    edx,DWORD PTR [ebp+0x17]
  404b8e:	cmc    
  404b8f:	cmp    esp,edx
  404b91:	xchg   edx,eax
  404b92:	sbb    ebp,DWORD PTR [esi-0x66]
  404b95:	jne    0x404c08
  404b97:	fiadd  DWORD PTR [eax+ebx*2-0x6]
  404b9b:	push   0xffffffb9
  404b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b9e:	pusha  
  404b9f:	fild   DWORD PTR [ebx]
  404ba1:	jmp    0x404b6a
  404ba3:	pop    ebp
  404ba4:	xchg   DWORD PTR [ecx-0x1b],ebx
  404ba7:	int    0x27
  404ba9:	dec    edx
  404baa:	loopne 0x404b90
  404bac:	jecxz  0x404c28
  404bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404baf:	fsubr  st,st(7)
  404bb1:	not    BYTE PTR [edx-0x40cd9003]
  404bb7:	mov    ds,WORD PTR [ecx]
  404bb9:	mov    BYTE PTR [eax],bl
  404bbb:	iret   
  404bbc:	dec    esp
  404bbd:	test   DWORD PTR [ecx+0x469e22c],esp
  404bc3:	jp     0x404c43
  404bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bc6:	mov    edi,0x2c0a1432
  404bcb:	sbb    eax,0xaff06f39
  404bd0:	(bad)
  404bd3:	xlat   BYTE PTR ds:[ebx]
  404bd4:	lods   eax,DWORD PTR ds:[esi]
  404bd5:	pusha  
  404bd6:	scas   al,BYTE PTR es:[edi]
  404bd7:	cli    
  404bd8:	aaa    
  404bd9:	and    dh,BYTE PTR [ecx+ebp*8+0x74]
  404bdd:	xchg   ecx,eax
  404bde:	push   cs
  404bdf:	sub    bh,dl
  404be1:	dec    edi
  404be2:	ds xchg edx,eax
  404be4:	jnp    0x404c16
  404be6:	dec    eax
  404be7:	std    
  404be8:	sti    
  404be9:	mov    cl,0xc2
  404beb:	dec    esp
  404bec:	add    DWORD PTR [ebp+esi*4+0x175e8187],ecx
  404bf3:	mov    ch,BYTE PTR [eax]
  404bf5:	mov    edx,0x7d3c3003
  404bfa:	jnp    0x404bcc
  404bfc:	xchg   ebp,eax
  404bfd:	pop    ecx
  404bfe:	pop    ds
  404bff:	jmp    0x84940e59
  404c04:	or     al,0xa7
  404c06:	fwait
  404c07:	mov    edx,0xccba138e
  404c0c:	and    eax,0x4b524a09
  404c11:	jb     0x404bb3
  404c13:	ds inc edi
  404c15:	xchg   ebp,eax
  404c16:	(bad)  
  404c18:	or     esp,DWORD PTR [edi-0x70]
  404c1b:	sub    DWORD PTR [ebx+0x5b],ebp
  404c1e:	mov    dh,BYTE PTR [esp+edx*1]
  404c21:	fadd   QWORD PTR ds:0x5335ef28
  404c27:	mov    eax,0x12c80ab1
  404c2c:	push   0x935ae2d2
  404c31:	xchg   ebx,eax
  404c32:	aad    0x5b
  404c34:	iret   
  404c35:	outs   dx,DWORD PTR ds:[esi]
  404c36:	(bad)  
  404c37:	xchg   BYTE PTR [edx-0x6c],bh
  404c3a:	push   esi
  404c3b:	aam    0xf
  404c3d:	inc    esi
  404c3e:	scas   al,BYTE PTR es:[edi]
  404c3f:	add    cl,BYTE PTR ds:0x8b84d3e4
  404c45:	jae    0x404bf0
  404c47:	cmp    cl,al
  404c49:	int    0x5a
  404c4b:	in     eax,0x41
  404c4d:	push   esi
  404c4e:	(bad)  
  404c4f:	sar    BYTE PTR [ebx],1
  404c51:	sahf   
  404c52:	jo     0x404c11
  404c54:	sbb    edi,DWORD PTR [esi]
  404c56:	lods   eax,DWORD PTR ds:[esi]
  404c57:	(bad)  
  404c58:	cmp    esp,DWORD PTR [ebp+0x2d]
  404c5b:	fidivr DWORD PTR [ebp+0x1f]
  404c5e:	add    BYTE PTR [ebx],0x81
  404c61:	jo     0x404cc4
  404c63:	cmp    bl,BYTE PTR [edi-0x347ec0f]
  404c69:	test   DWORD PTR [ecx-0xc],esi
  404c6c:	outs   dx,DWORD PTR ds:[esi]
  404c6d:	dec    eax
  404c6e:	mov    ?,WORD PTR [edx-0x17]
  404c71:	ss cs pop esi
  404c74:	cmp    BYTE PTR [edx+ebx*4],bl
  404c77:	add    DWORD PTR [edi+0x52],ebp
  404c7a:	ins    BYTE PTR es:[edi],dx
  404c7b:	jl     0x404c4c
  404c7d:	stc    
  404c7e:	pop    esp
  404c7f:	into   
  404c80:	or     ebx,DWORD PTR [edi]
  404c82:	test   eax,0x382bce64
  404c87:	sbb    al,BYTE PTR [esi+0x8]
  404c8a:	mov    esi,0x2165ae8f
  404c8f:	inc    edx
  404c90:	(bad)  
  404c92:	xlat   BYTE PTR ds:[ebx]
  404c93:	outs   dx,DWORD PTR ds:[esi]
  404c94:	xor    edx,DWORD PTR [ebp+0x5dad2e6c]
  404c9a:	add    BYTE PTR [ebx+0xbc630fe],bh
  404ca0:	lock push esi
  404ca2:	push   es
  404ca3:	mov    WORD PTR [ebx+0x71d1ec98],ds
  404ca9:	dec    ebp
  404caa:	pop    ds
  404cab:	jmp    0xc67a:0xb8cea6d
  404cb2:	leave  
  404cb3:	fsubp  st(5),st
  404cb5:	pop    ecx
  404cb6:	mov    dh,0xf8
  404cb8:	pop    edi
  404cb9:	xchg   DWORD PTR [ebx+0x12],edx
  404cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cbd:	pop    edi
  404cbe:	outs   dx,DWORD PTR ds:[esi]
  404cbf:	shl    BYTE PTR [edi+0x32b30ca1],cl
  404cc5:	pop    edx
  404cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cc7:	push   ecx
  404cc8:	test   eax,0xa3c450f0
  404ccd:	dec    edx
  404cce:	dec    ebx
  404ccf:	mov    esi,0xbca64a6f
  404cd4:	in     eax,dx
  404cd5:	jae    0x404d4a
  404cd7:	loop   0x404c7b
  404cd9:	fadd   QWORD PTR ds:0x2cdd2759
  404cdf:	aam    0xef
  404ce1:	push   0xffffffe0
  404ce3:	jle    0x404d3a
  404ce5:	mov    ebx,0x3b96474c
  404cea:	push   ecx
  404ceb:	les    ebp,FWORD PTR [eax]
  404ced:	mov    edx,0xbd3cbcbe
  404cf2:	es push edi
  404cf4:	inc    esp
  404cf5:	lahf   
  404cf6:	jp     0x404d1c
  404cf8:	or     esp,DWORD PTR [edi-0x329eef22]
  404cfe:	mov    al,0x62
  404d00:	ret    0x14ec
  404d03:	imul   esp,DWORD PTR [ebp+ebx*4-0x1723b7dd],0x219092d7
  404d0e:	jge    0x404d0b
  404d10:	mov    ds:0xae916028,eax
  404d15:	inc    esp
  404d16:	ret    
  404d17:	adc    al,0x7f
  404d19:	ret    
  404d1a:	sub    ecx,eax
  404d1c:	imul   eax,DWORD PTR [edx],0x57
  404d1f:	mov    ebp,0x7392ca0e
  404d24:	in     al,dx
  404d25:	cmp    BYTE PTR [ebx+0x60654983],bl
  404d2b:	mov    dl,0x6
  404d2d:	je     0x404d39
  404d2f:	scas   eax,DWORD PTR es:[edi]
  404d30:	sub    BYTE PTR [edi],ah
  404d32:	repz sbb ah,BYTE PTR [ebp-0x419bb8fc]
  404d39:	imul   BYTE PTR [ecx-0x6]
  404d3c:	fwait
  404d3d:	dec    esi
  404d3e:	pop    edx
  404d3f:	inc    esi
  404d40:	cli    
  404d41:	sbb    eax,0xd5406978
  404d46:	push   cs
  404d47:	push   esp
  404d48:	cmp    DWORD PTR [eax+0x1aac8f2],ebp
  404d4e:	leave  
  404d4f:	mov    bl,0x1a
  404d51:	adc    DWORD PTR [eax],0x7b1af4e1
  404d57:	sar    BYTE PTR [edx],0x34
  404d5a:	mov    al,0xc4
  404d5c:	mov    ecx,0x417ee9ff
  404d61:	pop    edi
  404d62:	outs   dx,DWORD PTR ds:[esi]
  404d63:	jb     0x404daa
  404d65:	call   0xf8af:0x465dbe22
  404d6c:	in     eax,dx
  404d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d6e:	(bad)  
  404d6f:	jnp    0x404d70
  404d71:	or     eax,0x2e32d98c
  404d76:	ins    DWORD PTR es:[edi],dx
  404d77:	push   ss
  404d78:	or     BYTE PTR [ebp-0x77873f39],dh
  404d7e:	loope  0x404dcc
  404d80:	das    
  404d81:	enter  0x9d4d,0xb8
  404d85:	mov    esp,0xbd90a311
  404d8a:	jge    0x404e00
  404d8c:	pop    edi
  404d8d:	gs lahf 
  404d8f:	or     bh,dh
  404d91:	ins    DWORD PTR es:[edi],dx
  404d92:	cli    
  404d93:	fwait
  404d94:	xchg   ebx,eax
  404d95:	in     al,dx
  404d96:	dec    esp
  404d97:	push   cs
  404d98:	mov    ebp,0x3578bf1f
  404d9d:	and    dl,BYTE PTR [esp+eax*4-0x3d228aee]
  404da4:	aam    0x71
  404da6:	not    BYTE PTR [edi+0x3e]
  404da9:	sub    DWORD PTR [esi-0x59],edi
  404dac:	xchg   edx,eax
  404dad:	push   edi
  404dae:	xchg   edx,eax
  404daf:	aaa    
  404db0:	(bad)  
  404db2:	ret    
  404db3:	push   cs
  404db4:	fwait
  404db5:	mov    dh,0x0
  404db7:	test   cl,dh
  404db9:	xor    ecx,DWORD PTR [ecx+eiz*1+0x4f20f58b]
  404dc0:	or     eax,0xe1b369be
  404dc5:	jg     0x404d5c
  404dc7:	pop    edi
  404dc8:	(bad)  
  404dc9:	call   0xe5b7:0xc70ad694
  404dd0:	loopne 0x404de9
  404dd2:	lds    edi,FWORD PTR [ecx]
  404dd4:	pop    ebx
  404dd5:	pop    esp
  404dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dd7:	sbb    eax,0x9844c236
  404ddc:	out    0xed,eax
  404dde:	and    DWORD PTR [esi],ebx
  404de0:	and    DWORD PTR [ecx],ebp
  404de2:	test   eax,0xe8495b72
  404de7:	call   0x8feece33
  404dec:	pushf  
  404ded:	call   0x669a:0xf5f3742c
  404df4:	(bad)  
  404df5:	jl     0x404d78
  404df7:	xor    ebp,DWORD PTR [ebp+eiz*1-0x794230fb]
  404dfe:	push   ebx
  404dff:	(bad)  
  404e00:	push   ebp
  404e01:	lea    esp,[ebp+0x40]
  404e04:	or     ebx,DWORD PTR [eax-0x7c820f6f]
  404e0a:	adc    cl,BYTE PTR fs:[edx+0x722e0647]
  404e11:	pop    ds
  404e12:	pop    ebp
  404e13:	or     al,BYTE PTR [ebx+eax*1]
  404e16:	add    al,BYTE PTR [ebx-0x48]
  404e19:	mov    BYTE PTR [esi+0x2276d609],ah
  404e1f:	aam    0xbe
  404e21:	xchg   esp,eax
  404e22:	frstor [eax+0x125fbe54]
  404e28:	cld    
  404e29:	das    
  404e2a:	cmp    eax,0xf494a4ff
  404e2f:	cmp    al,BYTE PTR ds:0x6dd022e6
  404e35:	push   ss
  404e36:	scas   al,BYTE PTR es:[edi]
  404e37:	fist   WORD PTR [ebp-0xd062f77]
  404e3d:	lahf   
  404e3e:	imul   esp,eax,0xfffffff8
  404e41:	pop    ds
  404e42:	pop    es
  404e43:	pop    ebx
  404e44:	daa    
  404e45:	int    0x25
  404e47:	xchg   ebp,eax
  404e48:	jno    0x404e77
  404e4a:	cmp    al,BYTE PTR [ebx]
  404e4c:	stos   DWORD PTR es:[edi],eax
  404e4d:	adc    DWORD PTR [edi-0x5],0xf5a1e049
  404e54:	lea    esi,[esi+0x32582bf8]
  404e5a:	dec    esi
  404e5b:	movlps QWORD PTR [ecx],xmm4
  404e5e:	cmp    DWORD PTR [esi-0x79aa8475],eax
  404e64:	pop    ecx
  404e65:	jge    0x404ea9
  404e67:	mov    eax,DWORD PTR [edi]
  404e69:	repz lds ebp,FWORD PTR [edi]
  404e6c:	mov    ds:0x3d0d7bd8,al
  404e71:	inc    ebp
  404e72:	add    BYTE PTR [ecx-0x6f],dh
  404e75:	add    DWORD PTR [esi-0x6fc0770f],ebx
  404e7b:	mov    esi,0x79f54ad6
  404e80:	in     al,0x20
  404e82:	mov    cl,0xb3
  404e84:	cmp    BYTE PTR [ecx-0x23235f10],0x84
  404e8b:	call   0x7578:0xcfd98cd1
  404e92:	add    ah,BYTE PTR ds:0xd4ad40f8
  404e98:	aas    
  404e99:	stc    
  404e9a:	add    DWORD PTR [edx+0x3ec4b282],edi
  404ea0:	out    dx,al
  404ea1:	mov    ds,esp
  404ea3:	shr    cl,cl
  404ea5:	pop    edi
  404ea6:	rol    DWORD PTR [edx],0x2b
  404ea9:	and    dl,BYTE PTR [ebp+0x69]
  404eac:	pop    ebp
  404ead:	lahf   
  404eae:	in     al,0x17
  404eb0:	push   es
  404eb1:	jns    0x404eed
  404eb3:	leave  
  404eb4:	xor    BYTE PTR [ecx-0x18],bh
  404eb7:	mov    dl,0x33
  404eb9:	fs push ss
  404ebb:	jl     0x404f09
  404ebd:	mov    dh,0xc9
  404ebf:	xor    eax,0xe1c609e0
  404ec4:	jb     0x404ecb
  404ec6:	add    BYTE PTR [eax+edx*1],0x20
  404eca:	jmp    0x404ed5
  404ecc:	cmp    al,BYTE PTR [ecx-0x30]
  404ecf:	mov    esi,0x9e09f681
  404ed4:	xchg   edx,eax
  404ed5:	pop    ss
  404ed6:	retf   0x14fe
  404ed9:	xor    eax,0xb0fb22d6
  404ede:	jb     0x404ea9
  404ee0:	loope  0x404eb7
  404ee2:	push   ecx
  404ee3:	aad    0x8d
  404ee5:	int3   
  404ee6:	rcl    BYTE PTR [ebx+0x9],0xbe
  404eea:	inc    ebp
  404eeb:	(bad)  
  404eed:	add    al,0xab
  404eef:	inc    ebx
  404ef0:	fistp  DWORD PTR [esi+eiz*2+0x18]
  404ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ef5:	outs   dx,DWORD PTR ds:[esi]
  404ef6:	dec    esp
  404ef7:	sub    DWORD PTR [ebx+0x150c546e],0xfaa10fa9
  404f01:	sbb    BYTE PTR [eax],ch
  404f03:	inc    ecx
  404f04:	test   BYTE PTR [ebp-0x23],cl
  404f07:	mov    DWORD PTR [ecx],0x5fbeca50
  404f0d:	ret    
  404f0e:	push   ebp
  404f0f:	inc    ebp
  404f10:	jae    0x404ecb
  404f12:	mov    ebp,0xbf397777
  404f17:	into   
  404f18:	pushf  
  404f19:	xchg   edx,esi
  404f1b:	test   al,0x2a
  404f1d:	inc    esp
  404f1e:	ret    
  404f1f:	lds    edi,FWORD PTR [ecx-0x664d0382]
  404f25:	aas    
  404f26:	fldcw  WORD PTR [eax]
  404f28:	pop    edx
  404f29:	dec    ecx
  404f2a:	adc    al,0x53
  404f2c:	jle    0x404f7c
  404f2e:	sub    edi,edi
  404f30:	or     DWORD PTR [edx+0x6604ffe2],0x2f
  404f37:	jnp    0x404fb3
  404f39:	(bad)  
  404f3a:	scas   eax,DWORD PTR es:[edi]
  404f3b:	loop   0x404f89
  404f3d:	xchg   ebp,eax
  404f3e:	gs cmp eax,0x49238d7e
  404f44:	xor    DWORD PTR [eax+0x7e],eax
  404f47:	scas   al,BYTE PTR es:[edi]
  404f48:	and    dh,BYTE PTR [ecx]
  404f4a:	and    al,0xc2
  404f4c:	sub    eax,0xf69496b2
  404f51:	imul   edx,DWORD PTR [ecx-0xe],0x15
  404f55:	repnz mov bl,0xc4
  404f58:	sub    BYTE PTR cs:[ecx],0x81
  404f5c:	push   es
  404f5d:	mov    gs,WORD PTR [edi]
  404f5f:	pop    edx
  404f60:	jg     0x404fb5
  404f62:	inc    ebx
  404f63:	adc    al,ch
  404f65:	xor    BYTE PTR [eax+0x7692bd8a],al
  404f6b:	or     BYTE PTR cs:[esi-0x17],ah
  404f6f:	arpl   WORD PTR [esi+ecx*4+0x4d6a3c27],sp
  404f76:	ja     0x404fd4
  404f78:	out    dx,eax
  404f79:	adc    esp,eax
  404f7b:	add    al,0xc7
  404f7d:	bnd jl 0x404f84
  404f80:	push   ebx
  404f81:	add    ecx,0x78176b57
  404f87:	ja     0x404f62
  404f89:	test   BYTE PTR [ebx-0x7f5c5460],0xc3
  404f90:	mov    ds:0x59878124,eax
  404f95:	mov    ds:0x80a9987b,al
  404f9a:	shl    DWORD PTR [ecx-0x61],cl
  404f9d:	loope  0x404fe6
  404f9f:	mov    bh,0x73
  404fa1:	out    0x42,al
  404fa3:	popf   
  404fa4:	mov    eax,ds:0x952452a9
  404fa9:	and    esp,DWORD PTR [edx]
  404fab:	stc    
  404fac:	push   ds
  404fad:	adc    ch,BYTE PTR [edx]
  404faf:	cmp    ah,BYTE PTR [eax-0x1634c496]
  404fb5:	scas   eax,DWORD PTR es:[edi]
  404fb6:	push   esi
  404fb7:	jns    0x404fe4
  404fb9:	xchg   DWORD PTR [esi-0x4840ffcd],edi
  404fbf:	jnp    0x404f5a
  404fc1:	je     0x404fcb
  404fc3:	xchg   ebx,eax
  404fc4:	out    dx,al
  404fc5:	add    DWORD PTR [edi-0x2a254bf4],esi
  404fcb:	xchg   edx,eax
  404fcc:	pop    edi
  404fcd:	aam    0xe8
  404fcf:	add    al,0x29
  404fd1:	data16 in al,dx
  404fd3:	je     0x405053
  404fd5:	mov    esp,0xa19220b3
  404fda:	ins    DWORD PTR es:[edi],dx
  404fdb:	loop   0x405001
  404fdd:	push   cs
  404fde:	dec    edi
  404fdf:	xor    bh,al
  404fe1:	pusha  
  404fe2:	pop    esi
  404fe3:	cld    
  404fe4:	mov    ch,0x67
  404fe6:	scas   al,BYTE PTR es:[edi]
  404fe7:	arpl   WORD PTR [esi-0x7a],cx
  404fea:	mov    BYTE PTR [ebx],bh
  404fec:	mov    al,ds:0x73fd5a4b
  404ff1:	inc    esi
  404ff2:	and    edi,DWORD PTR [ebx]
  404ff4:	and    cl,ah
  404ff6:	mov    ds:0x44350281,eax
  404ffb:	popf   
  404ffc:	loop   0x405021
  404ffe:	cmp    DWORD PTR [ebx+esi*4+0x71],ecx
  405002:	cld    
  405003:	les    ecx,FWORD PTR ds:0x22d197d3
  405009:	inc    edx
  40500a:	daa    
  40500b:	scas   al,BYTE PTR es:[edi]
  40500c:	push   esp
  40500d:	add    BYTE PTR [edx-0x6],cl
  405010:	mov    ecx,0x2a5d6fdb
  405015:	add    BYTE PTR [edi],bh
  405017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405018:	xchg   esp,eax
  405019:	ja     0x404ff6
  40501b:	push   ebx
  40501c:	fxch   st(3)
  40501e:	pop    ds
  40501f:	rcr    al,1
  405021:	aaa    
  405022:	push   edi
  405023:	ds (bad) 
  405025:	sbb    al,0xaa
  405027:	cs inc ebp
  405029:	push   es
  40502a:	pop    esi
  40502b:	pop    ss
  40502c:	(bad)  
  40502d:	ja     0x405031
  40502f:	pop    esp
  405030:	xchg   cx,ax
  405032:	push   ecx
  405033:	sbb    eax,0x8f2d60a
  405038:	loop   0x405049
  40503a:	test   BYTE PTR [esi-0x35082bf],al
  405040:	pusha  
  405041:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405043:	(bad)  
  405044:	call   0x5ff11f06
  405049:	inc    ebp
  40504a:	inc    edi
  40504b:	push   es
  40504c:	or     dl,BYTE PTR ds:0x454c06e4
  405052:	enter  0x76cf,0x33
  405056:	or     ebx,ebp
  405058:	das    
  405059:	dec    ebp
  40505a:	in     al,0x14
  40505c:	scas   al,BYTE PTR es:[edi]
  40505d:	or     BYTE PTR [ecx+eiz*8],dh
  405060:	push   es
  405061:	sahf   
  405062:	arpl   bx,bp
  405064:	pop    esp
  405065:	xchg   esi,eax
  405066:	test   eax,0x842bea9c
  40506b:	dec    edi
  40506c:	out    0x50,al
  40506e:	push   ds
  40506f:	cmp    al,0x7f
  405071:	mov    ecx,0x7982ab3a
  405076:	xor    eax,0xd83a3235
  40507b:	daa    
  40507c:	int3   
  40507d:	dec    ebx
  40507e:	dec    edi
  40507f:	push   es
  405080:	cmp    eax,0xa8b17abb
  405085:	mov    eax,0x2a12d042
  40508a:	enter  0x2130,0x2a
  40508e:	cmp    DWORD PTR [ecx],esp
  405090:	je     0x4050fb
  405092:	test   eax,0x42326ed8
  405097:	sub    eax,0x4680c049
  40509c:	sahf   
  40509d:	and    dh,BYTE PTR [edi+eiz*8]
  4050a0:	and    BYTE PTR [edx+0x73],cl
  4050a3:	inc    ecx
  4050a4:	sub    ebx,DWORD PTR [ecx-0x75]
  4050a7:	or     BYTE PTR [edx+0xc90953a],cl
  4050ad:	fldenv [ebp-0x10baf82d]
  4050b3:	arpl   WORD PTR [edx+edi*8-0x76100008],cx
  4050ba:	test   eax,0xd16cbbab
  4050bf:	push   ebx
  4050c0:	arpl   WORD PTR [eax-0x3f80dc64],bp
  4050c6:	dec    esp
  4050c7:	mov    BYTE PTR [ebp+eax*2-0x2e],0x49
  4050cc:	out    dx,al
  4050cd:	push   esi
  4050cf:	xor    al,0xe2
  4050d1:	test   eax,0x8235bd55
  4050d6:	adc    al,0x4d
  4050d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050d9:	push   edx
  4050da:	mov    ds:0x99c5e673,eax
  4050df:	xor    ebx,DWORD PTR [ebp-0x4a]
  4050e2:	sbb    eax,0xdadd0a0
  4050e7:	jmp    0x3759:0xd79007c0
  4050ee:	push   ecx
  4050ef:	into   
  4050f0:	out    0xc4,eax
  4050f2:	mov    ah,0x91
  4050f4:	mov    edx,0x9f14be5b
  4050f9:	pop    esi
  4050fa:	cmc    
  4050fb:	sbb    ah,BYTE PTR [ebx-0x6f]
  4050fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ff:	lods   al,BYTE PTR ds:[esi]
  405100:	jg     0x405139
  405102:	inc    esi
  405103:	call   0x24324cb1
  405108:	bnd ret 0x4421
  40510c:	rcl    BYTE PTR [esi],1
  40510e:	daa    
  40510f:	inc    DWORD PTR [ebp+0x366b3b18]
  405115:	jmp    FWORD PTR [edi+0x5b628d1b]
  40511b:	lea    ebx,[esi]
  40511d:	xor    edi,ebx
  40511f:	mov    dl,0xb1
  405121:	mov    ds:0x90c278f7,eax
  405126:	arpl   WORD PTR [ebp-0x1d18fd5c],dx
  40512c:	shl    BYTE PTR [edx-0x7f],1
  40512f:	dec    esi
  405130:	cs dec esp
  405132:	aaa    
  405133:	bound  esi,QWORD PTR [edx-0x5c]
  405136:	(bad)  
  405137:	sbb    edx,edx
  405139:	xor    BYTE PTR [ebx],bl
  40513b:	in     eax,dx
  40513c:	(bad)  
  40513d:	mov    ds:0xacc060f7,eax
  405142:	lods   eax,DWORD PTR ds:[esi]
  405143:	or     BYTE PTR [esi-0x37e2c4f2],ah
  405149:	sbb    ch,BYTE PTR [ecx]
  40514b:	add    BYTE PTR [edx+edx*8-0x74],bl
  40514f:	adc    bh,cl
  405151:	push   ebp
  405152:	and    BYTE PTR [edi-0x57],al
  405155:	mov    al,0x1d
  405157:	xchg   ebp,eax
  405158:	adc    ecx,DWORD PTR [ebx-0x23]
  40515b:	sub    bl,cl
  40515d:	lea    ebx,[eax+0x6a]
  405160:	or     DWORD PTR [esp+edx*1-0x1dc3c6bc],esp
  405167:	les    ebx,FWORD PTR [edi]
  405169:	add    al,0x7f
  40516b:	aaa    
  40516c:	aad    0xe5
  40516e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40516f:	xchg   edi,eax
  405171:	xchg   edx,eax
  405172:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405174:	test   al,0xf4
  405176:	sub    DWORD PTR [eax-0x6b46eb4a],esp
  40517c:	xor    eax,0xe047625e
  405181:	fstp   QWORD PTR [ebp+0x68]
  405184:	rcr    BYTE PTR [ebx+0x2d],cl
  405187:	or     bh,ch
  405189:	xor    edi,DWORD PTR [edx]
  40518b:	push   ss
  40518c:	aas    
  40518d:	jns    0x405170
  40518f:	outs   dx,DWORD PTR ds:[esi]
  405190:	mov    ecx,DWORD PTR [edi+0x4d]
  405193:	mov    esp,0xe5f6ea6a
  405198:	mov    ds,WORD PTR [ebx+ebp*4-0x5]
  40519c:	(bad)  
  40519d:	jg     0x4051a4
  40519f:	jnp    0x4051cc
  4051a1:	(bad)  
  4051a3:	add    dh,ah
  4051a5:	aaa    
  4051a6:	mov    al,0xbc
  4051a8:	adc    al,0x8
  4051aa:	xchg   ecx,eax
  4051ab:	daa    
  4051ac:	xchg   edx,eax
  4051ad:	jnp    0x40514e
  4051af:	pop    ecx
  4051b0:	retf   0x2c14
  4051b3:	les    ebp,FWORD PTR [ebp+0xdbcd638]
  4051b9:	or     ebp,DWORD PTR [eax]
  4051bb:	mov    edx,0xd9ec2dab
  4051c0:	xor    DWORD PTR [eax+0x69],edi
  4051c3:	ror    DWORD PTR [ebx-0x67df6380],1
  4051c9:	in     al,dx
  4051ca:	and    al,BYTE PTR [edi-0x7e6d551a]
  4051d0:	cld    
  4051d1:	sbb    bl,BYTE PTR [ebx+0x25]
  4051d4:	mov    edx,0x59e74d25
  4051d9:	stos   BYTE PTR es:[edi],al
  4051da:	pop    ebp
  4051db:	(bad)
  4051df:	add    DWORD PTR [edx+0x7a1e5138],0xfffffff3
  4051e6:	sbb    eax,0x18138726
  4051eb:	xchg   esi,eax
  4051ec:	out    0xfd,al
  4051ee:	mov    DWORD PTR [edx+0x359f4182],edi
  4051f4:	cmp    DWORD PTR [ecx+0x6b],esi
  4051f7:	jae    0x4051a9
  4051f9:	sbb    eax,0x31a3e6d3
  4051fe:	sub    BYTE PTR [eax-0x1d4f1f75],ch
  405204:	sar    esp,0xa2
  405207:	inc    edx
  405208:	popf   
  405209:	stos   BYTE PTR es:[edi],al
  40520a:	push   0x2495c288
  40520f:	(bad)  
  405211:	mov    dl,ah
  405213:	xchg   DWORD PTR fs:0x8c4f9874,edx
  40521a:	enter  0xd63c,0x90
  40521e:	dec    ebp
  40521f:	popf   
  405220:	mov    ebx,0x2c1e9f57
  405225:	mov    BYTE PTR [ecx-0x26],bl
  405228:	dec    ebx
  405229:	xchg   ebx,eax
  40522a:	mov    dh,0x7
  40522c:	lock clc 
  40522e:	arpl   WORD PTR [esi-0x3a],ax
  405231:	push   esp
  405232:	sbb    BYTE PTR [eax-0x3e1217d4],dl
  405238:	xlat   BYTE PTR ds:[ebx]
  405239:	arpl   WORD PTR [eax+eax*4-0x53],dx
  40523d:	rol    eax,1
  40523f:	call   0x248609a4
  405244:	adc    al,0xcd
  405246:	sub    bl,0xbf
  405249:	or     BYTE PTR [edi-0x36],0xbc
  40524d:	in     eax,0x9f
  40524f:	jo     0x4051f5
  405251:	inc    edx
  405252:	pop    edi
  405253:	fs loopne 0x405283
  405256:	adc    al,0xa6
  405258:	es jp  0x4052d0
  40525b:	loopne 0x4052d5
  40525d:	adc    BYTE PTR [ebx+ebx*8-0x25],0x36
  405262:	ja     0x40521e
  405264:	mov    bl,bl
  405266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405267:	inc    edi
  405268:	mov    bl,bh
  40526a:	dec    ebx
  40526b:	xchg   edx,eax
  40526c:	jecxz  0x405210
  40526e:	(bad)  
  40526f:	sbb    dh,dh
  405271:	dec    ebx
  405272:	cdq    
  405273:	adc    ebp,eax
  405275:	jg     0x405204
  405277:	stc    
  405278:	loope  0x405211
  40527a:	dec    eax
  40527b:	sub    al,0x3
  40527d:	lock cmp DWORD PTR [esi+ebp*1-0x8faca67],ebx
  405285:	mov    eax,0xec75ac82
  40528a:	shr    DWORD PTR [ebx-0x2c],cl
  40528d:	cdq    
  40528e:	push   ds
  40528f:	inc    edi
  405290:	cld    
  405291:	mov    ecx,0x813ce79f
  405296:	test   eax,0x7a8d8723
  40529b:	fsubrp st(5),st
  40529d:	sbb    eax,0xf8536d3c
  4052a2:	pushf  
  4052a3:	push   cs
  4052a4:	mul    DWORD PTR [edx+0x22]
  4052a7:	stos   DWORD PTR es:[edi],eax
  4052a8:	stos   DWORD PTR es:[edi],eax
  4052a9:	xchg   ebx,eax
  4052aa:	xor    al,0x6e
  4052ac:	and    DWORD PTR [edi-0xf],ecx
  4052af:	call   0x82005dcb
  4052b4:	jo     0x405301
  4052b6:	addr16 xchg esp,eax
  4052b8:	inc    edx
  4052b9:	scas   eax,DWORD PTR es:[edi]
  4052ba:	stos   DWORD PTR es:[edi],eax
  4052bb:	subps  xmm7,xmm7
  4052be:	fisubr DWORD PTR [ebx-0x21]
  4052c1:	out    dx,al
  4052c2:	jp     0x40531c
  4052c4:	enter  0xfac1,0x5
  4052c8:	out    0x45,eax
  4052ca:	push   edi
  4052cb:	aas    
  4052cc:	lds    ebp,FWORD PTR [ecx]
  4052ce:	imul   edi,ebx,0x2ba43bde
  4052d4:	pop    es
  4052d5:	add    edi,DWORD PTR [ebx-0xfd9f975]
  4052db:	sub    cl,BYTE PTR [edi-0x4fb94404]
  4052e1:	inc    ebp
  4052e2:	sub    esi,DWORD PTR [edx-0x64]
  4052e5:	test   BYTE PTR [edi],dh
  4052e7:	repnz pop es
  4052e9:	xchg   BYTE PTR [esi+0x7babd031],al
  4052ef:	and    eax,0xea8da5f2
  4052f4:	jmp    0x4052a0
  4052f6:	out    0xed,al
  4052f8:	dec    ebx
  4052f9:	iret   
  4052fa:	inc    ecx
  4052fb:	add    eax,0x2d3450f3
  405300:	inc    ebp
  405301:	xchg   ebx,eax
  405302:	add    DWORD PTR [ecx],esp
  405304:	outs   dx,BYTE PTR gs:[esi]
  405306:	dec    ecx
  405307:	mov    esp,0xe4e2c8c0
  40530c:	adc    eax,0x6a3b9702
  405311:	loope  0x405388
  405313:	pop    esi
  405314:	push   esp
  405315:	loopne 0x405331
  405317:	mov    eax,0xd7cbf44d
  40531c:	pop    ecx
  40531d:	sti    
  40531e:	xor    eax,0xe68b2c22
  405323:	add    al,0xcb
  405325:	cdq    
  405326:	and    ch,ah
  405328:	popa   
  405329:	jg     0x40530a
  40532b:	mov    cl,0x92
  40532d:	out    0xd9,eax
  40532f:	js     0x40530e
  405331:	pusha  
  405332:	dec    ebp
  405333:	and    BYTE PTR [eax+0x3d47bde1],bh
  405339:	cmp    al,0x59
  40533b:	jne    0x40538f
  40533d:	mov    ch,0x2b
  40533f:	imul   eax,DWORD PTR [edi+0x11],0xffffffdc
  405343:	je     0x405386
  405345:	mov    esi,es
  405347:	xchg   ecx,eax
  405348:	and    dl,0xf3
  40534b:	jae    0x40538e
  40534d:	push   ds
  40534e:	sbb    DWORD PTR [ebx+0x1d],esp
  405351:	sub    eax,DWORD PTR [eax]
  405353:	lods   al,BYTE PTR ds:[esi]
  405354:	loope  0x405361
  405356:	add    eax,0x9db4a0b4
  40535b:	pop    es
  40535c:	xor    eax,DWORD PTR [edx+edx*1+0x35]
  405360:	int3   
  405361:	pop    ebp
  405362:	cmp    eax,DWORD PTR [ecx+eiz*8+0x32c7b35f]
  405369:	das    
  40536a:	in     al,0x3b
  40536c:	lods   eax,DWORD PTR ds:[esi]
  40536d:	pop    edx
  40536e:	pop    eax
  40536f:	adc    edx,DWORD PTR [edi-0x2d9e67d7]
  405375:	bswap  ecx
  405377:	fcomp  DWORD PTR [ebp+0x6d]
  40537a:	lds    ecx,FWORD PTR [esi+0x2511ddc6]
  405380:	xchg   DWORD PTR ds:0x72ace2e1,esi
  405386:	cwde   
  405387:	fwait
  405388:	outs   dx,BYTE PTR ds:[esi]
  405389:	xchg   edi,eax
  40538a:	cmc    
  40538b:	and    eax,0x6f56d538
  405390:	mov    bh,0xd
  405392:	xor    ecx,0x26
  405395:	frstor ds:0xc9d47c42
  40539b:	sub    dh,BYTE PTR [edi]
  40539d:	lods   al,BYTE PTR ds:[esi]
  40539e:	pop    esp
  4053a0:	sar    DWORD PTR [edi],0x48
  4053a3:	push   ss
  4053a4:	out    dx,al
  4053a5:	fadd   QWORD PTR [esp+ecx*1-0x28]
  4053a9:	fisub  DWORD PTR [eax]
  4053ab:	lods   eax,DWORD PTR ds:[esi]
  4053ac:	enter  0x7e28,0xd0
  4053b0:	dec    eax
  4053b1:	outs   dx,BYTE PTR ds:[esi]
  4053b2:	cli    
  4053b3:	fldenv [ecx-0x65dcb881]
  4053b9:	(bad)  
  4053ba:	push   esi
  4053bb:	or     DWORD PTR [edi-0x74],ebx
  4053be:	in     al,dx
  4053bf:	shr    DWORD PTR [eax],cl
  4053c1:	fimul  DWORD PTR ds:0xc594c347
  4053c7:	call   0x8fba0a6
  4053cc:	add    edi,esp
  4053ce:	push   cs
  4053cf:	xchg   edi,eax
  4053d0:	xchg   esp,eax
  4053d1:	mov    bl,BYTE PTR [ebp-0x646327b2]
  4053d7:	(bad)  
  4053d8:	jnp    0x405381
  4053da:	dec    esi
  4053db:	dec    ebx
  4053dc:	shl    BYTE PTR [ebp+0x3f],cl
  4053df:	xor    eax,0xffb771d7
  4053e4:	(bad)  
  4053e5:	out    0xe2,eax
  4053e7:	and    DWORD PTR [edi-0x39],ebx
  4053ea:	dec    ebx
  4053eb:	adc    eax,0x1101fe40
  4053f0:	lahf   
  4053f1:	loop   0x4053cd
  4053f3:	dec    ebx
  4053f4:	sbb    cl,bh
  4053f6:	enter  0x1e0f,0x0
  4053fa:	loope  0x4053b6
  4053fc:	inc    ecx
  4053fd:	aam    0x9b
  4053ff:	repz xor DWORD PTR [ecx+esi*1],0xbf6688db
  405407:	clc    
  405408:	stos   BYTE PTR es:[edi],al
  405409:	dec    esi
  40540a:	jno    0x4053a7
  40540c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40540e:	aam    0xb9
  405410:	adc    al,0xec
  405412:	or     eax,0xbd337944
  405417:	icebp  
  405418:	inc    esi
  405419:	inc    ebp
  40541a:	in     al,0x35
  40541c:	pop    ecx
  40541d:	add    eax,0x5fb2c7ae
  405422:	mov    bh,0xef
  405424:	aas    
  405425:	mov    ah,0xf
  405427:	xor    al,0xc7
  405429:	xchg   ebp,eax
  40542a:	sub    DWORD PTR [eax+0x60],edi
  40542d:	outs   dx,BYTE PTR ds:[esi]
  40542e:	fs in  al,0x74
  405431:	sub    DWORD PTR [eax],esp
  405433:	pop    ds
  405434:	jg     0x4054b0
  405436:	fwait
  405437:	xchg   esi,eax
  405438:	pop    ebp
  405439:	pop    ebp
  40543a:	js     0x937d6991
  405440:	out    0xff,eax
  405442:	jg     0x40549e
  405444:	cmc    
  405445:	cli    
  405446:	shr    BYTE PTR [edx+0x67],1
  405449:	jge    0x4053df
  40544b:	pop    ds
  40544c:	inc    esi
  40544d:	and    ch,BYTE PTR [edx]
  40544f:	dec    esi
  405450:	outs   dx,BYTE PTR ds:[esi]
  405451:	pop    DWORD PTR [ebx+0x1d]
  405454:	shl    DWORD PTR [edi+0x5176cc9e],0xce
  40545b:	adc    edi,esi
  40545d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40545e:	jle    0x405472
  405460:	lods   al,BYTE PTR ds:[esi]
  405461:	sbb    DWORD PTR [esi],esi
  405463:	cmp    BYTE PTR [edx-0x1c],cl
  405466:	(bad)  
  405467:	mov    al,0xc8
  405469:	shl    BYTE PTR [esi+0x24c8ba54],0x4c
  405470:	mov    cl,0xb2
  405472:	xor    bl,dl
  405474:	pop    ss
  405475:	xchg   ebp,eax
  405476:	mov    dl,0x5d
  405478:	aaa    
  405479:	jl     0x405432
  40547b:	out    dx,al
  40547c:	mov    dl,0xd2
  40547e:	and    ch,BYTE PTR [edx]
  405480:	cmp    al,0x53
  405482:	aaa    
  405483:	pop    ecx
  405484:	pop    ebp
  405485:	mov    cl,0x6d
  405487:	call   0xe6a7:0x8bfba688
  40548e:	out    dx,eax
  40548f:	cmp    BYTE PTR [eax],bl
  405491:	sbb    al,0xb1
  405493:	dec    ebx
  405494:	lds    edi,FWORD PTR [ebp-0x2b7618bb]
  40549a:	and    eax,0xe6f670d3
  40549f:	in     eax,0x12
  4054a1:	xchg   esi,eax
  4054a2:	adc    BYTE PTR [ecx+ebp*2+0x32aaff54],dh
  4054a9:	mov    esp,0xd860c7fa
  4054ae:	ins    DWORD PTR es:[edi],dx
  4054af:	out    dx,eax
  4054b0:	div    BYTE PTR [esi]
  4054b2:	iret   
  4054b3:	fwait
  4054b4:	add    eax,0xb704b134
  4054b9:	and    eax,0x2519c084
  4054be:	and    al,0xbe
  4054c0:	arpl   WORD PTR [esi+0x67],di
  4054c3:	lea    edi,[ecx+esi*8-0x35]
  4054c7:	fild   WORD PTR [edx+0x24763c1e]
  4054cd:	sbb    cl,ah
  4054cf:	dec    ebp
  4054d0:	xor    al,0x57
  4054d2:	pop    ss
  4054d3:	cdq    
  4054d4:	shl    ah,cl
  4054d6:	sub    eax,0x84c92286
  4054db:	ror    BYTE PTR [eax+0x6bd924b9],cl
  4054e1:	xor    BYTE PTR [ecx+0x2c],0xf3
  4054e5:	sub    edx,DWORD PTR [edi-0x24]
  4054e8:	add    BYTE PTR [ebp-0x34],bh
  4054eb:	wbinvd 
  4054ed:	cli    
  4054ee:	imul   ecx,DWORD PTR [ecx],0x38
  4054f1:	xor    BYTE PTR [eax-0x23ef3cf7],al
  4054f7:	fs xor al,0x6a
  4054fa:	iret   
  4054fb:	mov    cs,WORD PTR [edi-0x6b]
  4054fe:	cmp    bl,BYTE PTR [ecx-0x2c]
  405501:	stc    
  405502:	pop    esi
  405503:	xchg   ebx,eax
  405504:	xchg   edx,eax
  405505:	inc    edi
  405506:	mov    dl,0xd
  405508:	jno    0x4054df
  40550a:	lods   al,BYTE PTR ds:[esi]
  40550b:	lock mov bh,0xff
  40550e:	xchg   edi,eax
  40550f:	jo     0x4054d7
  405511:	push   cs
  405512:	xchg   DWORD PTR [edx+0x76],esp
  405515:	fs mov bl,0x5a
  405518:	bound  ecx,QWORD PTR [edi-0x304f0911]
  40551e:	xchg   esi,ebx
  405520:	cmp    al,0x79
  405522:	sbb    al,0x72
  405524:	int3   
  405525:	xchg   edi,eax
  405526:	std    
  405527:	add    esi,ecx
  405529:	jl     0x405585
  40552b:	pop    eax
  40552c:	jnp    0x40558b
  40552e:	pushf  
  40552f:	pop    edx
  405530:	ret    0x220e
  405533:	mov    WORD PTR [esi],ss
  405535:	test   eax,0xfbc2e78a
  40553a:	and    DWORD PTR [ecx+0x703aaa01],ecx
  405540:	adc    al,0x81
  405542:	sbb    ah,ah
  405544:	call   0x9a52af8f
  405549:	mov    eax,ds:0xb1fb8afa
  40554e:	inc    esi
  40554f:	cmp    BYTE PTR [ebx+ebp*2],ah
  405552:	(bad)  
  405553:	popf   
  405554:	enter  0x8298,0x5f
  405558:	cmc    
  405559:	jmp    0x405538
  40555b:	or     DWORD PTR fs:[edi-0x26],edi
  40555f:	and    BYTE PTR [ebp+0x20a9bd2e],dh
  405565:	pusha  
  405566:	in     eax,0xdd
  405568:	not    DWORD PTR [edx-0x2c]
  40556b:	push   eax
  40556c:	add    eax,0xb5c48dbd
  405571:	test   al,0x14
  405573:	sub    BYTE PTR [eax],0xbb
  405576:	cmp    al,0x76
  405578:	retf   
  405579:	xlat   BYTE PTR ds:[ebx]
  40557a:	inc    esi
  40557b:	and    DWORD PTR [ebx+eiz*4],ecx
  40557e:	dec    esi
  40557f:	repz adc ch,BYTE PTR [ecx+eax*2-0x37]
  405584:	cmp    BYTE PTR [ecx],0x4c
  405587:	ja     0x405603
  405589:	fwait
  40558a:	inc    edx
  40558b:	cmp    al,0x85
  40558d:	sbb    dh,0x74
  405590:	mov    dh,0x89
  405592:	jne    0x4055cd
  405594:	rcr    BYTE PTR [eax+0x1a19cb71],cl
  40559a:	neg    BYTE PTR [ecx]
  40559c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40559d:	clc    
  40559e:	xchg   DWORD PTR [ecx],edi
  4055a0:	rcr    dl,1
  4055a2:	sub    ebp,DWORD PTR [edx-0x1ea4e6e]
  4055a8:	add    edx,DWORD PTR [ecx+0x1f]
  4055ab:	jg     0x4055c6
  4055ad:	push   es
  4055ae:	cmp    eax,0x2ce85880
  4055b3:	pop    ecx
  4055b4:	xchg   ebp,eax
  4055b5:	xor    BYTE PTR [eax-0x52],dl
  4055b8:	pop    ebx
  4055b9:	xchg   ebx,eax
  4055ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055bb:	xlat   BYTE PTR ds:[ebx]
  4055bc:	add    bl,BYTE PTR [edi]
  4055be:	imul   ebp,DWORD PTR [eax+0xa],0x3e868d1
  4055c5:	adc    cl,BYTE PTR [edi+0x44]
  4055c8:	shl    DWORD PTR [ebp-0x331f6eb8],1
  4055ce:	repnz mov ebx,0xcdd87e5d
  4055d4:	inc    eax
  4055d5:	out    0xf7,al
  4055d7:	mov    ecx,0x76612418
  4055dc:	out    0xce,al
  4055de:	push   ebp
  4055df:	adc    DWORD PTR [eax-0x17],0xffffffda
  4055e3:	loopne 0x40561a
  4055e5:	je     0x405642
  4055e7:	jne    0x405613
  4055e9:	fwait
  4055ea:	ins    DWORD PTR es:[edi],dx
  4055eb:	inc    esi
  4055ec:	adc    edi,DWORD PTR [eax-0x2d]
  4055ef:	or     cl,bh
  4055f1:	aaa    
  4055f2:	les    esi,FWORD PTR [esi+eiz*4]
  4055f5:	(bad)  
  4055f6:	push   esp
  4055f7:	ins    DWORD PTR es:[edi],dx
  4055f8:	retf   0x263c
  4055fb:	jnp    0x405598
  4055fd:	pop    ebp
  4055fe:	cdq    
  4055ff:	fidivr DWORD PTR [ecx]
  405601:	pop    esp
  405602:	mov    cs,WORD PTR [edx-0x76]
  405605:	je     0x405605
  405607:	xchg   ebp,eax
  405608:	pop    es
  405609:	and    DWORD PTR [ecx],ebx
  40560b:	and    edx,ebx
  40560d:	xor    BYTE PTR [edi-0x75],cl
  405610:	out    dx,al
  405611:	hlt    
  405612:	in     eax,dx
  405613:	xchg   ecx,eax
  405614:	stos   BYTE PTR es:[edi],al
  405615:	aas    
  405616:	nop
  405617:	neg    DWORD PTR [ebp+0x271b1f5f]
  40561d:	xchg   ecx,eax
  40561e:	lock cmp al,0x54
  405621:	rcr    DWORD PTR [edx+0x8],cl
  405624:	inc    edx
  405625:	aad    0x97
  405627:	sub    eax,0x84dddfde
  40562c:	ins    DWORD PTR es:[edi],dx
  40562d:	stos   DWORD PTR es:[edi],eax
  40562e:	ret    0xfd64
  405631:	stos   BYTE PTR es:[edi],al
  405632:	xor    ah,BYTE PTR [ecx-0x80]
  405635:	add    ebx,edi
  405637:	inc    DWORD PTR [ebx+eax*8+0x3]
  40563b:	adc    BYTE PTR [esi],al
  40563d:	cld    
  40563e:	sbb    BYTE PTR ds:0x78f1d6a,ch
  405644:	pop    ecx
  405645:	inc    ecx
  405646:	mov    ds:0x5820b385,al
  40564b:	pop    esi
  40564c:	ja     0x405659
  40564e:	pop    ss
  40564f:	adc    DWORD PTR [esi+0x12123eb3],esi
  405655:	jmp    0xd15e:0xc9c5867b
  40565c:	inc    eax
  40565d:	jb     0x4056a5
  40565f:	pushf  
  405660:	push   0x869e756c
  405665:	pop    edx
  405666:	dec    eax
  405667:	push   DWORD PTR [edi-0x77f008e9]
  40566d:	lods   al,BYTE PTR ds:[esi]
  40566e:	lahf   
  40566f:	ss dec ebp
  405671:	pop    ds
  405672:	sahf   
  405673:	(bad)  
  405674:	push   esi
  405675:	loope  0x4056cb
  405677:	call   0x716c:0x27bfcc94
  40567e:	(bad)  
  40567f:	les    esp,FWORD PTR [ebp+eiz*1+0x29]
  405683:	jg     0x40567f
  405685:	mov    edi,0x4f8e7cbd
  40568a:	and    edi,eax
  40568c:	scas   al,BYTE PTR es:[edi]
  40568d:	mov    DWORD PTR [ecx],ecx
  40568f:	sbb    bh,dh
  405691:	popa   
  405692:	pop    edx
  405693:	jle    0x40567d
  405695:	push   esp
  405696:	ret    0xd469
  405699:	inc    edi
  40569a:	stos   BYTE PTR es:[edi],al
  40569b:	sbb    BYTE PTR [edi-0x593babbe],dl
  4056a1:	mov    ds:0x461707eb,al
  4056a6:	sti    
  4056a7:	hlt    
  4056a8:	jg     0x405691
  4056aa:	push   esp
  4056ab:	inc    edx
  4056ac:	cdq    
  4056ad:	icebp  
  4056ae:	popf   
  4056af:	sahf   
  4056b0:	jno    0x40569f
  4056b2:	mov    esp,0x2c34b7f8
  4056b7:	mov    al,ds:0x675bd315
  4056bc:	cld    
  4056bd:	popf   
  4056be:	lods   al,BYTE PTR ds:[esi]
  4056bf:	dec    esp
  4056c0:	mov    edi,0xe2687d3e
  4056c5:	push   ss
  4056c6:	leave  
  4056c7:	out    dx,al
  4056c8:	mov    BYTE PTR [ebx-0x3c],cl
  4056cb:	sbb    DWORD PTR [edi-0x655b3f2a],edx
  4056d1:	cmp    ch,BYTE PTR [ebp+0x51]
  4056d4:	sbb    dl,BYTE PTR [edi+ebp*1-0x2fb6ef5]
  4056db:	jmp    0x40572c
  4056dd:	hlt    
  4056de:	mov    gs,WORD PTR [ebp-0x36]
  4056e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056e2:	loopne 0x405666
  4056e4:	clc    
  4056e5:	enter  0x867b,0x53
  4056e9:	aas    
  4056ea:	xor    al,0x18
  4056ec:	pop    edi
  4056ed:	jo     0x4056c9
  4056ef:	push   0x30
  4056f1:	jne    0x40568a
  4056f3:	fnstenv [ecx-0x1a2171ee]
  4056f9:	dec    ecx
  4056fb:	jp     0x4056a6
  4056fd:	into   
  4056fe:	in     eax,0x46
  405700:	mov    cl,0xc7
  405702:	push   ebp
  405703:	ficom  DWORD PTR [esp+esi*1+0x13f8aae]
  40570a:	mov    ds:0xa882526d,al
  40570f:	xchg   BYTE PTR [esi],dl
  405711:	fdiv   st(6),st
  405713:	pop    ebx
  405714:	(bad)  
  405715:	lahf   
  405716:	lea    eax,[edx-0xa]
  405719:	xor    DWORD PTR [esi],esi
  40571b:	test   eax,0x8ce06b78
  405720:	mov    edx,0xf1e50726
  405725:	cmp    eax,0x38c6d58f
  40572a:	gs pop edx
  40572c:	in     eax,0x22
  40572e:	(bad)  
  40572f:	mov    ds:0x60de3c6,al
  405734:	and    DWORD PTR [esi-0x7f806d86],esi
  40573a:	fwait
  40573b:	pop    esp
  40573c:	add    al,0x46
  40573e:	mov    al,ds:0x75748221
  405743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405744:	inc    ebx
  405745:	sahf   
  405746:	inc    ebp
  405747:	push   ecx
  405748:	popa   
  405749:	cmp    al,0x7c
  40574b:	int    0x29
  40574d:	push   edi
  40574e:	push   ebp
  40574f:	mov    dh,0x3
  405751:	fadd   DWORD PTR [ebx+0x3e]
  405754:	dec    DWORD PTR [edi+0x618463c5]
  40575a:	sbb    al,0x9f
  40575c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40575d:	jmp    DWORD PTR [edx+0x1c0c7dcd]
  405763:	push   ds
  405764:	cmp    ecx,ebx
  405766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405767:	lods   eax,DWORD PTR ds:[esi]
  405768:	push   ebx
  405769:	pop    edi
  40576a:	(bad)  
  40576b:	pushf  
  40576c:	lods   al,BYTE PTR ds:[esi]
  40576d:	dec    edx
  40576e:	xchg   edi,eax
  40576f:	push   eax
  405770:	cdq    
  405771:	les    eax,FWORD PTR ds:0xa28fc2e2
  405777:	mov    WORD PTR [edx+0x22735f31],ss
  40577d:	sub    bl,BYTE PTR [esi+0x6c]
  405780:	mov    dl,0xb3
  405782:	add    edi,ebx
  405784:	adc    eax,DWORD PTR [edx-0xe]
  405787:	sub    eax,0xa94a554
  40578c:	repnz out 0x8c,eax
  40578f:	mov    bh,0xd1
  405791:	adc    bl,al
  405793:	jns    0x405718
  405795:	pop    esi
  405796:	(bad)  
  405798:	stos   BYTE PTR es:[edi],al
  405799:	ret    
  40579a:	and    DWORD PTR [eax+0x7e9b7958],eax
  4057a0:	jnp    0x4057e4
  4057a2:	and    BYTE PTR [edx+0x7690c6fe],bl
  4057a8:	sub    ah,bl
  4057aa:	pop    edx
  4057ab:	sub    DWORD PTR [edx+0x13],0x1a
  4057af:	or     esi,DWORD PTR [ebx]
  4057b1:	jae    0x40574e
  4057b3:	or     ebx,DWORD PTR [eax+ebp*1]
  4057b6:	push   ebx
  4057b7:	push   ss
  4057b8:	lods   eax,DWORD PTR ds:[esi]
  4057b9:	enter  0x11e0,0x67
  4057bd:	sub    al,0xc6
  4057bf:	pop    esi
  4057c0:	leave  
  4057c1:	icebp  
  4057c2:	xor    eax,0x3a96a325
  4057c7:	mov    WORD PTR [eax-0x33863877],?
  4057cd:	xlat   BYTE PTR ds:[ebx]
  4057ce:	sub    bh,BYTE PTR [eax+0x55]
  4057d1:	jl     0x4057dc
  4057d3:	and    al,0xc9
  4057d5:	out    dx,al
  4057d6:	sbb    dh,bh
  4057d8:	ret    0x5fe7
  4057db:	add    ebx,DWORD PTR [edi]
  4057dd:	ret    
  4057de:	jnp    0x4057ec
  4057e0:	lods   eax,DWORD PTR ds:[esi]
  4057e1:	fucom  st(1)
  4057e3:	xor    al,BYTE PTR [ecx+0x7c40ed17]
  4057e9:	ja     0x4057cc
  4057eb:	push   0x5ee8a286
  4057f0:	sub    DWORD PTR [ebp+0x337f8f50],ebx
  4057f6:	push   esp
  4057f7:	mov    ds:0xf6b7f8b5,al
  4057fc:	inc    ebp
  4057fd:	add    edi,edi
  4057ff:	dec    eax
  405800:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  405802:	mov    esi,0xcdbfb906
  405807:	and    eax,0x441acb85
  40580c:	cdq    
  40580d:	jle    0x405790
  40580f:	or     edx,DWORD PTR [eax+0x6489554d]
  405815:	sub    BYTE PTR [edx],ch
  405817:	sub    BYTE PTR [esi+0x15],cl
  40581a:	jbe    0x405883
  40581c:	das    
  40581d:	imul   ebx,DWORD PTR [edx],0x495723da
  405823:	arpl   bx,di
  405825:	mov    edi,0xc949c7ef
  40582a:	shl    DWORD PTR [edx-0x2f72354],0x54
  405831:	mov    al,0xa0
  405833:	cld    
  405834:	stc    
  405835:	fdivr  st,st(1)
  405837:	int3   
  405838:	add    bl,dh
  40583a:	cdq    
  40583b:	fdivr  DWORD PTR [ebx-0x6b36d22a]
  405841:	test   al,0x7b
  405843:	ds test al,0xf0
  405846:	ins    BYTE PTR es:[edi],dx
  405847:	mov    esi,0x2888d2c
  40584c:	mov    bl,0xca
  40584e:	pushf  
  40584f:	rol    DWORD PTR [ecx-0x44e4c745],cl
  405855:	jo     0x4058cd
  405857:	cs sub bh,cl
  40585a:	mov    ds:0x7443d0bf,eax
  40585f:	xchg   edi,eax
  405860:	mov    esi,0x333063bc
  405865:	dec    edi
  405866:	cmp    eax,0x920286b3
  40586b:	and    BYTE PTR [esi+eax*2+0x19],0xf9
  405870:	pusha  
  405871:	add    al,0xd8
  405873:	fldcw  WORD PTR [edi]
  405875:	sahf   
  405876:	adc    eax,0xe59a74de
  40587b:	pop    edi
  40587c:	sbb    eax,0xa699fcab
  405881:	mov    dl,0x8d
  405883:	xor    BYTE PTR [edx+0x4e9abb16],cl
  405889:	jo     0x4058ce
  40588b:	js     0x405811
  40588d:	cmc    
  40588e:	lahf   
  40588f:	sub    dh,BYTE PTR [eax+edx*1]
  405892:	add    dh,BYTE PTR [edi]
  405894:	mov    eax,0x1e8573bf
  405899:	inc    edi
  40589a:	lods   eax,DWORD PTR ds:[esi]
  40589b:	iret   
  40589c:	mov    eax,ds:0xe57a2e9b
  4058a1:	fst    DWORD PTR [edi+0x16827f65]
  4058a7:	aaa    
  4058a8:	in     eax,dx
  4058a9:	cmp    eax,0x17a4f48d
  4058ae:	mov    ebx,0x3f7bba4f
  4058b3:	ja     0x405900
  4058b5:	mov    ecx,DWORD PTR [edi-0x6979bfc9]
  4058bb:	mov    ss,WORD PTR [eax]
  4058bd:	xchg   esp,eax
  4058be:	arpl   WORD PTR [edi-0x5a],bp
  4058c1:	push   ebp
  4058c2:	mov    ecx,0x9dc9e61f
  4058c7:	lahf   
  4058c8:	repz dec ebp
  4058ca:	xchg   DWORD PTR [esp+ecx*4],edi
  4058cd:	(bad)  
  4058cf:	mov    bl,BYTE PTR [ebx+eax*4+0x3e]
  4058d3:	push   DWORD PTR [esp+eiz*2]
  4058d6:	in     eax,0x58
  4058d8:	call   0xfa1b43b7
  4058dd:	inc    edi
  4058de:	xor    ecx,eax
  4058e0:	and    ah,BYTE PTR [eax+0x1f7a39a9]
  4058e6:	outs   dx,DWORD PTR ds:[esi]
  4058e7:	fcom   QWORD PTR [ecx-0x34]
  4058ea:	neg    BYTE PTR [edx]
  4058ec:	out    0x7b,al
  4058ee:	scas   al,BYTE PTR es:[edi]
  4058ef:	pop    ecx
  4058f0:	dec    esp
  4058f1:	fidivr WORD PTR ds:0xafe38e0e
  4058f7:	mov    eax,0x3345d22e
  4058fc:	mov    ebp,edi
  4058fe:	adc    al,0x72
  405900:	test   BYTE PTR [edi-0x68],cl
  405903:	(bad)  
  405904:	fidiv  WORD PTR ds:0x96d9a5dc
  40590a:	xchg   edx,eax
  40590b:	xor    dh,dh
  40590d:	jmp    0x5cff4be4
  405912:	add    eax,0xc71883b1
  405917:	push   es
  405918:	inc    ebx
  405919:	shr    ebp,cl
  40591b:	dec    ebx
  40591c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40591d:	push   ebx
  40591e:	repz push 0x26fb603b
  405924:	sub    al,0x9c
  405926:	adc    al,0xc5
  405928:	dec    ebp
  405929:	jmp    0x4058c1
  40592b:	cmp    dh,BYTE PTR [ebx+0x5a]
  40592e:	into   
  40592f:	mov    ds:0x36ae6a65,eax
  405934:	pop    ss
  405935:	mov    dh,0x0
  405937:	cmp    ch,dl
  405939:	cdq    
  40593a:	xchg   ebp,eax
  40593b:	(bad)  
  40593c:	sub    DWORD PTR [esp+edi*4+0x5c20a2e4],ebp
  405943:	jmp    0x97a7:0xb3a1483c
  40594a:	test   DWORD PTR [ebx+0x2f2955cd],edx
  405950:	stc    
  405951:	dec    eax
  405953:	mov    dl,0x2c
  405955:	add    DWORD PTR [ebx-0x11],ecx
  405958:	mov    dl,0xfd
  40595a:	xchg   ecx,eax
  40595b:	push   ebx
  40595c:	pop    esp
  40595d:	or     al,0x23
  40595f:	push   eax
  405960:	push   esi
  405961:	call   0x4ced:0xb231010d
  405968:	jge    0x405987
  40596a:	mov    ah,ch
  40596c:	fdiv   QWORD PTR [ecx-0x56]
  40596f:	mov    ebp,0xbd0199b5
  405974:	fdivr  st(0),st
  405976:	fcom   DWORD PTR [ecx]
  405978:	jb     0x405997
  40597a:	test   al,0x21
  40597c:	scas   al,BYTE PTR es:[edi]
  40597d:	(bad)  
  40597e:	mov    ds:0x100186eb,eax
  405983:	mov    eax,0xca1bb35
  405988:	adc    al,al
  40598a:	mov    esp,0x9c398150
  40598f:	jge    0x405953
  405991:	repz mov dh,0xf5
  405994:	(bad)  
  405995:	rol    DWORD PTR [ebx-0x6e],cl
  405998:	outs   dx,BYTE PTR ds:[esi]
  405999:	lods   al,BYTE PTR ds:[esi]
  40599a:	test   eax,0xdf53295c
  40599f:	push   0x81d826ed
  4059a4:	xadd   DWORD PTR [ebx],edi
  4059a7:	and    BYTE PTR [edi-0x421f7991],bl
  4059ad:	inc    esp
  4059ae:	in     eax,0x53
  4059b0:	rcr    BYTE PTR [ecx-0x45],1
  4059b3:	loope  0x40593a
  4059b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b6:	cmp    DWORD PTR [ebx],esp
  4059b8:	mov    esp,0x8a97653c
  4059bd:	pop    eax
  4059be:	icebp  
  4059bf:	inc    ecx
  4059c0:	lock lock nop
  4059c3:	cmp    eax,0x123ee3a6
  4059c8:	ret    
  4059c9:	or     bh,bh
  4059cb:	ins    DWORD PTR es:[edi],dx
  4059cc:	mov    al,0xa1
  4059ce:	lock test ebp,ebp
  4059d1:	jmp    0xe3aa40c9
  4059d6:	imul   ebx,DWORD PTR fs:[ebp-0x29199a69],0x56
  4059de:	cmp    BYTE PTR [ebx+0x51],dl
  4059e1:	aaa    
  4059e2:	mov    eax,0xb6ea7853
  4059e7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4059e9:	leave  
  4059ea:	mov    WORD PTR [ebp-0x15],?
  4059ed:	add    eax,0x8a10c127
  4059f2:	repz pop edi
  4059f4:	in     al,dx
  4059f5:	add    ecx,DWORD PTR [ecx-0x2f56ea2c]
  4059fb:	jmp    0x405a2c
  4059fd:	sub    ebx,DWORD PTR [edi-0x61c71cdc]
  405a03:	call   0x8b519374
  405a08:	test   eax,0x79c81c
  405a0d:	into   
  405a0e:	and    DWORD PTR [esi-0x598ad8ea],ebx
  405a14:	sub    al,ah
  405a16:	cmp    bl,BYTE PTR [eax-0x5e]
  405a19:	sahf   
  405a1a:	xor    dh,BYTE PTR [edi-0x4b]
  405a1d:	scas   eax,DWORD PTR es:[edi]
  405a1e:	stos   BYTE PTR es:[edi],al
  405a1f:	je     0x405a70
  405a21:	mov    ch,0x31
  405a23:	xchg   edx,eax
  405a24:	mov    edx,ds
  405a26:	adc    al,0x9d
  405a28:	mov    cl,0x27
  405a2a:	push   0xffffff96
  405a2c:	xchg   edx,eax
  405a2d:	ins    DWORD PTR es:[edi],dx
  405a2e:	push   0xa4d932a6
  405a33:	jmp    0xfcd3:0x3917298e
  405a3a:	stos   DWORD PTR es:[edi],eax
  405a3b:	inc    esp
  405a3c:	jo     0x405a86
  405a3e:	dec    dh
  405a40:	bnd jmp 0x89f9eeb0
  405a46:	cmp    al,0xe6
  405a48:	rol    BYTE PTR [esi+eax*8-0x27be489],1
  405a4f:	xor    eax,0xfc574669
  405a54:	xchg   al,bh
  405a56:	push   cs
  405a57:	and    BYTE PTR [ecx+0x1640df49],ch
  405a5d:	adc    al,0x34
  405a5f:	mov    eax,ds:0xd4042782
  405a64:	fild   DWORD PTR [ebx-0x70008f11]
  405a6a:	xor    al,0x58
  405a6c:	stos   DWORD PTR es:[edi],eax
  405a6d:	xchg   ebx,eax
  405a6e:	mov    edx,0x95be9b1d
  405a73:	out    0x80,eax
  405a75:	inc    edi
  405a76:	outs   dx,BYTE PTR ds:[esi]
  405a77:	push   0xe311a728
  405a7c:	cli    
  405a7d:	cmp    al,0x1a
  405a7f:	jl     0x405a97
  405a81:	cmc    
  405a82:	stos   DWORD PTR es:[edi],eax
  405a83:	inc    ebx
  405a84:	dec    ebp
  405a85:	rcl    DWORD PTR [ecx],0x5b
  405a88:	add    dl,BYTE PTR [ecx+0x38]
  405a8b:	(bad)  
  405a8c:	jge    0x405a4a
  405a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a90:	sbb    eax,0x41fe9582
  405a95:	xchg   DWORD PTR [ebx+0x348a908e],eax
  405a9b:	std    
  405a9c:	mov    gs,WORD PTR [ebx-0xede07bf]
  405aa2:	and    bl,cl
  405aa4:	mov    DWORD PTR [edi-0x71],ebp
  405aa7:	xor    eax,0x24bcead5
  405aac:	ret    
  405aad:	jno    0x405aed
  405aaf:	popa   
  405ab0:	leave  
  405ab1:	mov    esp,0x85c93d34
  405ab6:	std    
  405ab7:	sub    eax,0x7b2df26b
  405abc:	cmp    cl,dh
  405abe:	push   ds
  405abf:	adc    BYTE PTR [esi],dh
  405ac1:	push   ss
  405ac2:	inc    edi
  405ac3:	mov    ch,0x6e
  405ac5:	jg     0x405b36
  405ac7:	dec    edx
  405ac8:	or     edi,eax
  405aca:	sub    bh,BYTE PTR [esi]
  405acc:	fld    TBYTE PTR [ebx+0x3b]
  405acf:	dec    BYTE PTR [esp+ecx*4+0x513490d6]
  405ad6:	std    
  405ad7:	imul   edx,ebp,0xbf3e11b1
  405add:	in     eax,dx
  405ade:	into   
  405adf:	mov    ds:0x53e141b4,al
  405ae4:	loopne 0x405ad7
  405ae6:	fadd   DWORD PTR [esi]
  405ae8:	gs jle 0x405aa9
  405aeb:	(bad)  
  405aec:	loop   0x405ae4
  405aee:	ret    
  405aef:	ds stc 
  405af1:	adc    al,0xcb
  405af3:	and    al,dh
  405af5:	or     esi,DWORD PTR [ebp+0x36]
  405af8:	mov    eax,ds:0xd744f6d0
  405afd:	call   0xd8b06976
  405b02:	mov    dl,0x29
  405b04:	xor    DWORD PTR [esi+ecx*2],0xffffff9d
  405b08:	jl     0x405b1d
  405b0a:	xchg   esp,eax
  405b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b0c:	push   eax
  405b0d:	dec    edx
  405b0e:	mov    al,0x14
  405b10:	lods   al,BYTE PTR ds:[esi]
  405b11:	ds mov edx,0x208661ec
  405b17:	scas   al,BYTE PTR es:[edi]
  405b18:	mov    bl,0x39
  405b1a:	mov    bl,0x98
  405b1c:	test   al,0xa8
  405b1e:	mov    eax,0xc8400afa
  405b23:	das    
  405b24:	js     0x405b51
  405b26:	mov    eax,0xa9f555b
  405b2b:	adc    al,0xda
  405b2d:	xchg   esi,eax
  405b2e:	jns    0x405b84
  405b30:	inc    esi
  405b31:	mov    ds:0x4486889e,eax
  405b36:	xor    cl,al
  405b38:	stos   DWORD PTR es:[edi],eax
  405b39:	and    al,0xe1
  405b3b:	dec    esp
  405b3c:	adc    al,0x16
  405b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b3f:	arpl   sp,bp
  405b41:	inc    eax
  405b42:	adc    eax,0x3ee72198
  405b47:	ds out 0xc3,eax
  405b4a:	leave  
  405b4b:	pop    esp
  405b4c:	ret    0xc28
  405b4f:	dec    ebx
  405b50:	mov    edi,0x1a7d8135
  405b55:	mov    fs,WORD PTR [esi]
  405b57:	mov    cl,0x52
  405b59:	and    ebp,DWORD PTR gs:[ebx+0x4c]
  405b5d:	ror    DWORD PTR [ebx+0x52f836d5],1
  405b63:	mov    eax,ds:0x85e7a48f
  405b68:	daa    
  405b69:	fcomp  st(3)
  405b6b:	xchg   ebx,eax
  405b6c:	mov    bh,BYTE PTR [eax-0x681ca84f]
  405b72:	sub    eax,0x8928b2c1
  405b77:	mov    ch,bh
  405b79:	pop    ecx
  405b7a:	aaa    
  405b7b:	sub    dl,al
  405b7d:	push   ecx
  405b7e:	stc    
  405b7f:	syscall 
  405b81:	ja     0x405b4f
  405b83:	push   ebx
  405b84:	ror    BYTE PTR [edi-0x4f],cl
  405b87:	mov    edi,0xc8ddfece
  405b8c:	adc    eax,DWORD PTR [esi-0x6ddbf6e3]
  405b92:	mov    edi,?
  405b94:	mov    eax,0x415c3ab9
  405b99:	es mov bl,0xcd
  405b9c:	fldcw  WORD PTR [esi+ebp*1-0x5895943c]
  405ba3:	lods   al,BYTE PTR ds:[esi]
  405ba4:	and    esp,DWORD PTR [ecx*1+0x4518de95]
  405bab:	push   0x674af553
  405bb0:	pusha  
  405bb1:	pop    ss
  405bb2:	adc    al,0xd
  405bb4:	pop    esi
  405bb5:	loopne 0x405b5d
  405bb7:	push   esp
  405bb8:	mov    ebp,0x8cd25f51
  405bbd:	and    ah,BYTE PTR [ebx+0x7f]
  405bc0:	adc    BYTE PTR [esi-0x38],al
  405bc3:	shl    BYTE PTR [eax],cl
  405bc5:	cmp    DWORD PTR [esi+0x604b57cc],ebx
  405bcb:	sbb    ebp,DWORD PTR [edi+0x38]
  405bce:	leave  
  405bcf:	cld    
  405bd0:	or     al,0x23
  405bd2:	jo     0x405b55
  405bd4:	dec    eax
  405bd5:	sbb    DWORD PTR [ebp+edi*8-0x4fd649d3],ecx
  405bdc:	ds mov ah,0x2c
  405bdf:	loope  0x405c4d
  405be1:	out    0x70,al
  405be3:	ret    0x5c8b
  405be6:	lods   eax,DWORD PTR ds:[esi]
  405be7:	addr16 push eax
  405be9:	cmp    DWORD PTR [ebp-0x43],ecx
  405bec:	push   eax
  405bed:	jmp    0x27f346e9
  405bf2:	dec    esp
  405bf3:	jle    0x405c06
  405bf5:	mov    BYTE PTR [ecx+0x3a],dh
  405bf8:	(bad)  
  405bfa:	xchg   esp,eax
  405bfb:	ins    DWORD PTR es:[edi],dx
  405bfc:	push   edx
  405bfd:	stc    
  405bfe:	jge    0x405c29
  405c00:	cld    
  405c01:	jno    0x405bd6
  405c03:	fist   WORD PTR [edi+0x1f6e4190]
  405c09:	mov    ch,0xc0
  405c0b:	out    0xf0,eax
  405c0d:	dec    ebx
  405c0e:	out    dx,al
  405c0f:	xor    bh,BYTE PTR [ebx+0x55e3f08a]
  405c15:	mov    eax,0xfa18caef
  405c1a:	rcr    BYTE PTR [esi-0x3b3d1021],1
  405c20:	pop    ds
  405c21:	push   esi
  405c22:	xchg   edx,eax
  405c23:	push   ecx
  405c24:	jmp    0x8ef8e417
  405c29:	pop    es
  405c2a:	dec    eax
  405c2b:	push   0xe22069b9
  405c30:	and    bh,ah
  405c32:	in     eax,0x28
  405c34:	fld    QWORD PTR [eax]
  405c36:	in     eax,0x71
  405c38:	fist   WORD PTR [edi-0x72]
  405c3b:	ds test ah,ah
  405c3e:	pop    ds
  405c3f:	jmp    0xd62f2b76
  405c44:	daa    
  405c45:	xor    al,0xdc
  405c47:	mov    BYTE PTR [ecx+ecx*2-0x57306e0a],cl
  405c4e:	push   cs
  405c4f:	mov    eax,0x906e49bd
  405c54:	iret   
  405c55:	inc    ebp
  405c56:	pushf  
  405c57:	xchg   ebp,eax
  405c58:	mov    edx,0xd8bbc9d
  405c5d:	add    eax,0x8adbdb19
  405c62:	xor    eax,0x93d623f
  405c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c68:	repz dec ebp
  405c6a:	stc    
  405c6b:	fstp   TBYTE PTR [edi]
  405c6d:	addr16 clc 
  405c6f:	sub    BYTE PTR [esi+0x21],ch
  405c72:	add    eax,0x35a67a7d
  405c77:	sbb    DWORD PTR [ebx+0x52],ebp
  405c7a:	pop    ds
  405c7b:	pop    ebp
  405c7c:	pop    ebp
  405c7d:	sub    BYTE PTR [ebx-0x66],dl
  405c80:	push   cs
  405c81:	push   edi
  405c82:	adc    bx,si
  405c85:	mov    ecx,DWORD PTR [esi+0x5346aa18]
  405c8b:	mov    edx,0x59a84ec8
  405c90:	push   ds
  405c91:	inc    ebx
  405c92:	(bad)  
  405c93:	(bad)  
  405c94:	jne    0x405c63
  405c96:	mov    DWORD PTR fs:[eax],eax
  405c99:	mov    dh,0x3
  405c9b:	ins    DWORD PTR es:[edi],dx
  405c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c9d:	loope  0x405c4c
  405c9f:	icebp  
  405ca0:	mov    edi,0x72ded330
  405ca5:	imul   ebp
  405ca7:	in     al,0xea
  405ca9:	push   ecx
  405caa:	mov    eax,0x8fe558bd
  405caf:	xchg   ebx,eax
  405cb0:	jp     0x405c8a
  405cb2:	into   
  405cb3:	xor    BYTE PTR ds:0x8622bbde,ch
  405cb9:	cs (bad) 
  405cbb:	test   al,0xe5
  405cbd:	aas    
  405cbe:	shr    BYTE PTR cs:[ebx],0xf6
  405cc2:	fdiv   DWORD PTR [ecx]
  405cc4:	adc    BYTE PTR [edx+0x3b8d606e],0xb6
  405ccb:	jne    0x405d1c
  405ccd:	xor    BYTE PTR [edi+0x48af1ebb],bh
  405cd3:	adc    ecx,DWORD PTR [edi-0x1cdb9d63]
  405cd9:	mov    DWORD PTR [edx+0x50],edi
  405cdc:	loop   0x405c7d
  405cde:	xchg   edi,eax
  405cdf:	popf   
  405ce0:	loop   0x405c75
  405ce2:	and    al,0x29
  405ce4:	xor    DWORD PTR [esi+ebx*4-0x31f889ee],0xfffffff9
  405cec:	in     al,0x84
  405cee:	stos   BYTE PTR es:[edi],al
  405cef:	fsub   QWORD PTR [ecx+0x451e1029]
  405cf5:	mov    ch,0xf4
  405cf7:	cmp    BYTE PTR [ebx+ebx*8],dh
  405cfa:	push   es
  405cfb:	xor    DWORD PTR [eax+edi*8-0x22],eax
  405cff:	sbb    al,0xe3
  405d01:	ins    BYTE PTR es:[edi],dx
  405d02:	imul   ecx,DWORD PTR [ebx],0x56
  405d05:	and    esi,DWORD PTR [edx]
  405d07:	dec    edx
  405d08:	cmp    cl,BYTE PTR [edi+0x59]
  405d0b:	or     ebp,DWORD PTR [edi]
  405d0d:	sbb    ebx,eax
  405d0f:	dec    ecx
  405d10:	inc    esp
  405d11:	test   BYTE PTR [ecx],cl
  405d13:	or     al,0x72
  405d15:	sahf   
  405d16:	cmp    eax,0x54f9d653
  405d1b:	ds (bad) 
  405d1e:	xor    ebp,esp
  405d20:	adc    BYTE PTR [eax],dh
  405d22:	gs jb  0x405d09
  405d25:	adc    eax,0xd9e8a82c
  405d2a:	call   0x4968:0x66375ab4
  405d31:	pop    ebx
  405d32:	shl    cl,0xf7
  405d35:	nop
  405d36:	inc    esp
  405d37:	(bad)  
  405d38:	sti    
  405d39:	mov    al,ds:0x4c451f34
  405d3e:	loop   0x405d73
  405d40:	or     eax,0x5d921823
  405d45:	sub    al,BYTE PTR [edx-0x18]
  405d48:	pop    ebx
  405d49:	fdivr  DWORD PTR [edx]
  405d4b:	ror    al,1
  405d4d:	aad    0xdf
  405d4f:	out    dx,al
  405d50:	sbb    al,0x90
  405d52:	ins    BYTE PTR es:[edi],dx
  405d53:	add    bl,cl
  405d55:	cli    
  405d56:	mov    ch,0x67
  405d58:	or     eax,DWORD PTR [esi+0x6]
  405d5b:	mov    ecx,0xb4ce3725
  405d60:	adc    DWORD PTR [ecx],0xffffffe2
  405d63:	jecxz  0x405daa
  405d65:	imul   ebp,DWORD PTR [ebx+0x617318c2],0x55
  405d6c:	push   ebp
  405d6d:	sbb    BYTE PTR [esi+0x5d],dl
  405d70:	in     al,0x27
  405d72:	push   ebp
  405d73:	jecxz  0x405d9e
  405d75:	push   0xffffff9a
  405d77:	pop    esi
  405d78:	xor    DWORD PTR [edx-0x4a2fc058],0x3f
  405d7f:	ins    BYTE PTR es:[edi],dx
  405d80:	aam    0xa4
  405d82:	retf   0xf76f
  405d85:	mov    al,0xbf
  405d87:	inc    ebp
  405d88:	push   edi
  405d89:	fadd   QWORD PTR [eax+ebx*1+0x54]
  405d8d:	jecxz  0x405d26
  405d8f:	fdiv   st,st(3)
  405d91:	sahf   
  405d92:	and    dh,dh
  405d94:	xchg   DWORD PTR [eax-0x7],eax
  405d97:	mov    esi,0x5a68875b
  405d9c:	adc    BYTE PTR [ecx+0x72],dl
  405d9f:	pop    es
  405da0:	fwait
  405da1:	jne    0x405e13
  405da3:	arpl   ax,si
  405da5:	shl    dh,0xfe
  405da8:	int3   
  405da9:	aad    0xe4
  405dab:	fwait
  405dac:	shl    BYTE PTR [esi+edi*2-0x106f0a82],0xc6
  405db4:	fild   QWORD PTR [ecx+0x23]
  405db7:	jl     0x405e0e
  405db9:	loope  0x405db4
  405dbb:	mov    esp,0x44169d94
  405dc0:	mov    al,0xa0
  405dc2:	add    al,0x31
  405dc4:	leave  
  405dc5:	xchg   ebx,eax
  405dc6:	mov    bl,0xce
  405dc8:	xchg   ebp,eax
  405dc9:	adc    al,0x49
  405dcb:	pusha  
  405dcc:	fcom   DWORD PTR [esi+0x72ffd287]
  405dd2:	fldcw  WORD PTR [ecx-0x54]
  405dd5:	enter  0xb5af,0x3
  405dd9:	sbb    DWORD PTR [eax],edi
  405ddb:	jne    0x405da2
  405ddd:	cwde   
  405dde:	test   bl,al
  405de0:	mov    dl,BYTE PTR [ecx-0x6e5439e0]
  405de6:	mov    ebp,0xc15695fb
  405deb:	sti    
  405dec:	mov    al,0xb3
  405dee:	ret    
  405def:	scas   eax,DWORD PTR es:[edi]
  405df0:	mov    ebp,0xf1af6460
  405df5:	mov    ebx,0x8f0eac63
  405dfa:	pushf  
  405dfb:	jne    0x405e51
  405dfd:	mov    ebp,0xa1542d89
  405e02:	or     DWORD PTR [ebx],edx
  405e04:	push   esp
  405e05:	sbb    edi,0x51
  405e08:	loope  0x405e55
  405e0a:	adc    ch,ah
  405e0c:	fiadd  DWORD PTR [ecx+0x1e]
  405e0f:	(bad)  
  405e10:	ror    DWORD PTR [eax+ebp*2+0x9b0db2a],cl
  405e17:	ins    BYTE PTR es:[edi],dx
  405e18:	mov    eax,ds:0x28a0c914
  405e1d:	adc    al,bl
  405e1f:	sub    bl,BYTE PTR [eax+0x75a40ac0]
  405e25:	mov    al,0xac
  405e27:	dec    esp
  405e28:	jmp    0xed74:0x9a393204
  405e2f:	in     eax,0x6f
  405e31:	xchg   edx,eax
  405e32:	ins    BYTE PTR es:[edi],dx
  405e33:	jecxz  0x405e02
  405e35:	sub    al,0xcc
  405e37:	in     eax,0x5c
  405e39:	adc    al,0x83
  405e3b:	mov    bl,0x2d
  405e3d:	jne    0x405dd1
  405e3f:	ja     0x405e97
  405e41:	pop    ebx
  405e42:	add    dh,ah
  405e44:	out    0x12,eax
  405e46:	(bad)  [edi]
  405e48:	scas   eax,DWORD PTR es:[edi]
  405e49:	sub    al,0x11
  405e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e4c:	xchg   edx,eax
  405e4d:	jge    0x405e90
  405e4f:	(bad)  
  405e50:	and    edx,esi
  405e52:	in     al,dx
  405e53:	mov    dl,0xff
  405e55:	pop    eax
  405e56:	push   es
  405e57:	mov    ds:0x2a2cb6c5,al
  405e5c:	ja     0x405e2a
  405e5e:	jnp    0x405ec7
  405e60:	xchg   dh,bh
  405e62:	in     eax,0x5b
  405e64:	cmp    al,0x65
  405e66:	mov    edx,0x2f70843b
  405e6b:	and    BYTE PTR [edx],0xcc
  405e6e:	adc    eax,0x52903398
  405e73:	xchg   esi,eax
  405e75:	jns    0x405e34
  405e77:	daa    
  405e78:	mov    esp,0x5d8233b1
  405e7d:	cmp    ch,BYTE PTR [edi]
  405e7f:	and    ah,cl
  405e81:	lds    esp,FWORD PTR [eax-0x23094366]
  405e87:	rcl    BYTE PTR [eax],1
  405e89:	pop    esi
  405e8a:	mov    esp,0xecd89a78
  405e8f:	mov    al,0x12
  405e91:	imul   esp,DWORD PTR [edi],0xb0b821e3
  405e97:	in     al,0x54
  405e99:	dec    ecx
  405e9a:	dec    ecx
  405e9b:	xor    bh,BYTE PTR [eax]
  405e9d:	mov    ah,0x53
  405e9f:	fbstp  TBYTE PTR [edi+0x4ba048a3]
  405ea5:	lods   al,BYTE PTR ds:[esi]
  405ea6:	cmc    
  405ea7:	pop    ebx
  405ea8:	call   DWORD PTR [ebx+0x193217d0]
  405eae:	mov    al,0x89
  405eb0:	sti    
  405eb1:	popa   
  405eb2:	add    BYTE PTR [edx],0x17
  405eb5:	or     bl,BYTE PTR [ebp-0x13a41097]
  405ebb:	cs js  0x405ef1
  405ebe:	fdivr  DWORD PTR [eax]
  405ec0:	cwde   
  405ec1:	rol    ebx,1
  405ec3:	and    al,0x92
  405ec5:	ins    BYTE PTR es:[edi],dx
  405ec6:	push   edi
  405ec7:	je     0x405eab
  405ec9:	xor    DWORD PTR [edx+0x45d7a857],ebx
  405ecf:	xchg   esi,eax
  405ed0:	int3   
  405ed1:	and    DWORD PTR [edi-0x1c],esp
  405ed4:	jg     0x405efe
  405ed6:	mov    edx,0x9ff4e663
  405edb:	jmp    0x205f:0xac2ad18d
  405ee2:	inc    ebp
  405ee3:	push   esp
  405ee4:	xor    ebx,ebp
  405ee6:	out    dx,al
  405ee7:	imul   edi,esp,0x75
  405eea:	jge    0x405e95
  405eec:	pop    edx
  405eed:	pop    esp
  405eee:	mov    dl,0x3
  405ef0:	mov    dh,0x27
  405ef2:	mov    cs,WORD PTR [edi]
  405ef4:	push   edx
  405ef5:	gs pop es
  405ef7:	jmp    0xb265:0x186f97ab
  405efe:	fwait
  405eff:	lahf   
  405f00:	out    0x90,al
  405f02:	push   0x4ce04faa
  405f07:	mov    al,0xd1
  405f09:	xor    eax,ebp
  405f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f0c:	jae    0x405f01
  405f0e:	push   ebp
  405f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f10:	rcl    BYTE PTR [edi+0x6c],0x64
  405f14:	inc    ebx
  405f15:	cmp    BYTE PTR [esi+0x5a4f1ef8],0xa2
  405f1c:	(bad)  
  405f1d:	imul   esi,eax,0xce356b69
  405f23:	push   eax
  405f24:	lock cmc 
  405f26:	sub    ah,BYTE PTR [edx]
  405f28:	add    ebp,DWORD PTR [ebx+0x5a2df022]
  405f2e:	adc    edx,DWORD PTR [ebx+0x1b]
  405f31:	ror    DWORD PTR [eax-0x1558dbfd],1
  405f37:	pop    esp
  405f38:	jle    0x405ec0
  405f3a:	mov    bl,0x8f
  405f3c:	and    cl,BYTE PTR [ebx-0x75de778e]
  405f42:	mov    bh,0x0
  405f44:	repnz lods al,BYTE PTR ds:[esi]
  405f46:	xor    ebp,DWORD PTR [ebx-0x7aba7dc]
  405f4c:	inc    BYTE PTR [esp+edi*2]
  405f4f:	inc    edx
  405f50:	test   al,0xd7
  405f52:	cmc    
  405f53:	mov    ds:0xab16b8e3,eax
  405f58:	hlt    
  405f59:	lods   eax,DWORD PTR ds:[esi]
  405f5a:	fisttp DWORD PTR [edx+0x7d]
  405f5d:	inc    eax
  405f5e:	jmp    0x9c31:0xee66baee
  405f65:	mov    ds:0x33c03a1e,eax
  405f6a:	and    bl,cl
  405f6c:	xlat   BYTE PTR ds:[ebx]
  405f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6e:	ret    0x331f
  405f71:	(bad)  
  405f72:	outs   dx,BYTE PTR ds:[esi]
  405f73:	sbb    al,0x61
  405f75:	repz mov ebp,0xa687c484
  405f7b:	cdq    
  405f7c:	std    
  405f7d:	and    edi,DWORD PTR [ebp+0x56]
  405f80:	inc    esi
  405f81:	dec    esi
  405f82:	ret    
  405f83:	cdq    
  405f84:	mov    ds:0xccc72697,eax
  405f89:	(bad)  
  405f8a:	es push eax
  405f8c:	test   esp,eax
  405f8e:	push   0xacf21869
  405f93:	call   0x419b4eb0
  405f98:	(bad)
  405f9c:	sub    DWORD PTR [edx-0x8767d9d],ebx
  405fa2:	or     DWORD PTR [edi+ecx*1-0x7d],0xc9915b7a
  405faa:	fs (bad) 
  405fac:	push   ds
  405fad:	add    al,0xfe
  405faf:	and    edi,ebx
  405fb1:	icebp  
  405fb2:	cld    
  405fb3:	in     al,dx
  405fb4:	inc    esp
  405fb5:	cld    
  405fb6:	or     esp,ebx
  405fb8:	int3   
  405fb9:	pcmpgtb mm4,QWORD PTR [esp+esi*1+0x5d]
  405fbe:	fld    TBYTE PTR [ebx+0x46]
  405fc1:	mov    ?,WORD PTR [ebx]
  405fc3:	mov    edi,0x5d088ed6
  405fc8:	jp     0x405fcd
  405fca:	out    0x93,al
  405fcc:	push   es
  405fcd:	mov    ds:0x2c680c48,eax
  405fd2:	sub    eax,0xb0582aae
  405fd7:	cs dec ebx
  405fd9:	ins    BYTE PTR es:[edi],dx
  405fda:	stos   DWORD PTR es:[edi],eax
  405fdb:	jp     0x405fc5
  405fdd:	scas   al,BYTE PTR es:[edi]
  405fde:	jg     0x406013
  405fe0:	add    eax,0x406a4c02
  405fe5:	fst    QWORD PTR ds:0x6a1b5586
  405feb:	xchg   ebx,eax
  405fec:	inc    esp
  405fed:	add    BYTE PTR [ecx],0x3f
  405ff0:	push   ds
  405ff1:	mov    dl,0xdb
  405ff3:	mov    edi,0xf52641d1
  405ff8:	sbb    cl,BYTE PTR [esi+0x48]
  405ffb:	jp     0x405fad
  405ffd:	outs   dx,BYTE PTR ds:[esi]
  405ffe:	hlt    
  405fff:	cwde   
  406000:	enter  0x99f6,0x9d
  406004:	sbb    eax,0x9f11b66d
  406009:	jmp    0x405fbe
  40600b:	mov    ah,0x35
  40600d:	mov    edi,0xad72c84c
  406012:	and    esi,DWORD PTR [ecx-0x664148f1]
  406018:	mov    edx,0x4a92b0b3
  40601d:	jne    0x406024
  40601f:	dec    DWORD PTR [edx]
  406021:	stos   BYTE PTR es:[edi],al
  406022:	pop    esp
  406023:	stos   DWORD PTR es:[edi],eax
  406024:	out    0x6d,eax
  406026:	sti    
  406027:	enter  0xe635,0x37
  40602b:	jns    0x405fdf
  40602d:	adc    BYTE PTR [edi],ah
  40602f:	daa    
  406030:	mov    ch,0xc1
  406032:	fs (bad) 
  406034:	cmp    edx,DWORD PTR [ebp+0x56]
  406037:	sub    cl,BYTE PTR [edx+0x33]
  40603a:	mov    BYTE PTR [ebx],0xc7
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40615d:	call   0x389b8b3c
  406162:	add    DWORD PTR [ebx-0x7c7ca311],0xffffffe8
  406169:	jns    0x406170
  40616b:	inc    edi
  40616c:	repz cmp eax,0x28d7cf6a
  406172:	les    edi,FWORD PTR [eax+ecx*4]
  406175:	sub    al,0xd5
  406177:	jge    0x406136
  406179:	outs   dx,BYTE PTR ds:[esi]
  40617a:	fwait
  40617b:	adc    BYTE PTR [ebx-0x5a],0x5c
  40617f:	sub    al,0xda
  406181:	out    0xaa,al
  406183:	mov    edi,0x1a6bd1e8
  406188:	hlt    
  406189:	inc    edx
  40618a:	cmp    bh,bl
  40618c:	jg     0x406187
  40618e:	mov    bl,0x51
  406190:	(bad)  
  406191:	into   
  406192:	sbb    eax,0x6dda426c
  406197:	in     al,dx
  406198:	aam    0x99
  40619a:	pop    ecx
  40619b:	cmp    DWORD PTR [eax*1+0x490c83a8],ecx
  4061a2:	and    bl,cl
  4061a4:	jns    0x40613a
  4061a6:	inc    esi
  4061a7:	pop    ebx
  4061a8:	or     al,0x79
  4061aa:	and    DWORD PTR [edi+0x4f],0x65f590fd
  4061b1:	(bad)  
  4061b2:	repnz dec edi
  4061b4:	xor    eax,0xf7f068ea
  4061b9:	dec    ebp
  4061ba:	push   eax
  4061bb:	xor    al,0x30
  4061bd:	ins    DWORD PTR es:[edi],dx
  4061be:	or     DWORD PTR [edx+0x28],ebp
  4061c1:	shl    BYTE PTR [eax+0x6c],1
  4061c4:	xor    al,0x34
  4061c6:	adc    ch,bh
  4061c8:	cmp    BYTE PTR [edx-0x1b4314b5],bl
  4061ce:	add    DWORD PTR [ebx-0x4c],edx
  4061d1:	mov    edi,DWORD PTR [ebx+0x49ca5ef9]
  4061d7:	xchg   BYTE PTR [eax-0x233df9f4],bl
  4061dd:	test   DWORD PTR [ebp-0x13689b4a],esi
  4061e3:	jbe    0x406174
  4061e5:	int    0xa3
  4061e7:	(bad)  
  4061e8:	sbb    DWORD PTR [esi-0x3b4abde3],edi
  4061ee:	jp     0x406194
  4061f0:	scas   eax,DWORD PTR es:[edi]
  4061f1:	loope  0x40626e
  4061f3:	add    ah,al
  4061f5:	inc    edx
  4061f6:	xchg   esp,eax
  4061f7:	sti    
  4061f8:	retf   0x7b6f
  4061fb:	(bad)  
  4061fc:	mov    dh,0x4a
  4061fe:	and    ah,bl
  406200:	ja     0x406199
  406202:	adc    ebp,esi
  406204:	xor    eax,0x10739d1
  406209:	mov    al,ds:0x4e045379
  40620e:	push   ds
  40620f:	xor    BYTE PTR [ebx],dl
  406211:	sbb    bl,ah
  406213:	ja     0x406289
  406215:	retf   
  406216:	aaa    
  406217:	in     al,dx
  406218:	out    0x92,eax
  40621a:	push   0xfffffff6
  40621c:	scas   al,BYTE PTR es:[edi]
  40621d:	xchg   DWORD PTR [edx-0x35a9a9b9],esp
  406223:	aam    0x91
  406225:	mov    ecx,0xc1467cd8
  40622a:	in     eax,0xd9
  40622c:	ja     0x40622a
  40622e:	fnstsw WORD PTR [edi+0x1a6561dd]
  406234:	and    esi,ebx
  406236:	pop    edx
  406237:	enter  0xf9ec,0xaa
  40623b:	ret    
  40623c:	jno    0x406245
  40623e:	(bad)  
  40623f:	mul    DWORD PTR [ecx-0x3de90756]
  406245:	fisttp QWORD PTR [ebx+ebx*8+0x3c]
  406249:	or     ebp,edi
  40624b:	adc    bh,BYTE PTR [ecx]
  40624d:	loope  0x40623f
  40624f:	ror    BYTE PTR [ebp-0x33fcc676],0xb6
  406256:	push   edx
  406257:	cmp    DWORD PTR [edx+0x29],edi
  40625a:	popf   
  40625b:	hlt    
  40625c:	xchg   ebp,eax
  40625d:	sbb    BYTE PTR [ebx+0xe49fb93],cl
  406263:	stos   DWORD PTR es:[edi],eax
  406264:	popa   
  406265:	mov    al,0x98
  406267:	shl    DWORD PTR [edi+0x68db12ca],0x84
  40626e:	jno    0x406248
  406270:	jo     0x4062b7
  406272:	outs   dx,DWORD PTR ds:[esi]
  406273:	out    0x79,eax
  406275:	test   al,0x95
  406277:	cmp    DWORD PTR [ecx-0x203b8893],esi
  40627d:	rcl    BYTE PTR [edx],cl
  40627f:	sbb    al,0xff
  406281:	mov    ds:0x485108f3,eax
  406286:	dec    edi
  406287:	ficomp WORD PTR [ecx-0xc794bce]
  40628d:	jae    0x4062b7
  40628f:	test   al,0x13
  406291:	loop   0x4062fc
  406293:	push   es
  406294:	shl    DWORD PTR [ebp+0x22],cl
  406297:	imul   esp,ecx,0x47
  40629a:	jb     0x40627a
  40629c:	in     al,0xec
  40629e:	sti    
  40629f:	outs   dx,BYTE PTR ds:[esi]
  4062a0:	je     0x406242
  4062a2:	mov    esp,ebx
  4062a4:	mov    ds,WORD PTR [esi]
  4062a6:	jb     0x4062e6
  4062a8:	cmp    DWORD PTR [edi],ebx
  4062aa:	(bad)  
  4062ab:	ds and edi,ebx
  4062ae:	fmulp  st(6),st
  4062b0:	jmp    0x406241
  4062b2:	mov    ch,BYTE PTR [edi-0x66]
  4062b5:	or     al,0xb6
  4062b7:	cs fwait
  4062b9:	pop    esp
  4062ba:	cmc    
  4062bb:	sbb    BYTE PTR [edi*8-0x18cc905c],0x41
  4062c3:	push   ebp
  4062c4:	lahf   
  4062c5:	push   es
  4062c6:	shl    BYTE PTR [edx-0x46c15bbb],0x53
  4062cd:	fisubr WORD PTR [edx+0x75]
  4062d0:	jb     0x4062d5
  4062d2:	mov    fs,eax
  4062d4:	lahf   
  4062d5:	lahf   
  4062d6:	jns    0x406280
  4062d8:	scas   eax,DWORD PTR es:[edi]
  4062d9:	mov    al,0x7b
  4062db:	inc    eax
  4062dc:	imul   ecx,ecx,0x857ecaec
  4062e2:	xchg   esp,eax
  4062e3:	and    bl,BYTE PTR ds:0x4a3e4d73
  4062e9:	mov    BYTE PTR [ebx],ah
  4062eb:	sbb    DWORD PTR [eax],esi
  4062ed:	adc    DWORD PTR [esi],eax
  4062ef:	mov    esp,0x40ace540
  4062f4:	cmp    ebp,DWORD PTR [ecx]
  4062f6:	cmp    bh,BYTE PTR [eax+0x22]
  4062f9:	in     eax,dx
  4062fa:	xlat   BYTE PTR ds:[ebx]
  4062fb:	dec    edx
  4062fc:	mov    ds:0x24284725,al
  406301:	push   eax
  406302:	iret   
  406303:	jno    0x4062c9
  406305:	mov    bl,0x76
  406307:	loope  0x406330
  406309:	mov    ch,0xc9
  40630b:	ret    
  40630c:	fcomp  DWORD PTR [esi+eiz*8]
  40630f:	test   al,0x62
  406311:	inc    edx
  406312:	fwait
  406313:	mov    ah,0xd8
  406315:	ficom  WORD PTR [ebx-0x1f]
  406318:	mov    ds:0x13118c7b,eax
  40631d:	or     ah,BYTE PTR [edx]
  40631f:	scas   eax,DWORD PTR es:[edi]
  406320:	jbe    0x4062f8
  406322:	jmp    0xe3539965
  406327:	push   esi
  406328:	test   DWORD PTR [edi+0x47],ebx
  40632b:	push   eax
  40632c:	fbld   TBYTE PTR [ebp+0x4d3516c4]
  406332:	(bad)  
  406334:	sti    
  406335:	adc    al,0x85
  406337:	loop   0x40638b
  406339:	mov    BYTE PTR [ebp-0x359f6dab],bl
  40633f:	leave  
  406340:	sti    
  406341:	add    al,0xdd
  406343:	int3   
  406344:	and    cl,BYTE PTR [edx]
  406346:	retf   
  406347:	dec    edi
  406348:	pop    esp
  406349:	jecxz  0x406327
  40634b:	lock push edx
  40634d:	xor    DWORD PTR [eiz*1+0x78f2cbef],esi
  406354:	inc    eax
  406355:	out    0x44,al
  406357:	jmp    0x887:0x47b778
  40635e:	sbb    DWORD PTR [edx],eax
  406360:	mov    dh,0x4d
  406362:	call   0x7dbd:0x657025ac
  406369:	call   0xb7bc:0xe1db5e37
  406370:	out    0x3f,eax
  406372:	punpcklbw mm5,DWORD PTR fs:[eax+0x8]
  406377:	std    
  406378:	clc    
  406379:	sub    eax,0x435351a
  40637e:	retf   0x4869
  406381:	add    ebx,DWORD PTR [edi+edx*2]
  406384:	add    eax,0x66a4b7ca
  406389:	mov    al,ds:0x3ea085d5
  40638e:	sar    BYTE PTR [esi+edi*2],cl
  406391:	sub    bl,bl
  406393:	pop    ss
  406394:	xchg   edx,eax
  406395:	xchg   BYTE PTR [ebx*4+0x6be015de],dh
  40639c:	xchg   ecx,eax
  40639d:	jle    0x4063f6
  40639f:	leave  
  4063a0:	push   cs
  4063a1:	es pusha 
  4063a3:	retf   
  4063a4:	mov    cl,0xc9
  4063a6:	jb     0x4063bd
  4063a8:	inc    esi
  4063a9:	or     DWORD PTR [ebx+0x78],eax
  4063ac:	adc    bl,BYTE PTR ds:[edx+0x2d]
  4063b0:	push   esp
  4063b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b2:	mov    ecx,0x938b1783
  4063b7:	in     eax,0xc9
  4063b9:	mov    ecx,0xb23e6311
  4063be:	mov    ebp,0x6ead6ade
  4063c3:	and    bh,dl
  4063c5:	xor    DWORD PTR es:[ebp-0x5fbfe313],ecx
  4063cc:	rcl    DWORD PTR [edi],cl
  4063ce:	push   DWORD PTR [ebx-0x23]
  4063d1:	jmp    0xd03a:0xb668dad4
  4063d8:	mov    eax,0x7a407319
  4063dd:	add    bh,al
  4063df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e0:	jae    0x406418
  4063e2:	xchg   esi,eax
  4063e3:	jbe    0x4063af
  4063e5:	inc    edx
  4063e6:	fmul   DWORD PTR [eax+0x74]
  4063e9:	rol    DWORD PTR [ecx],cl
  4063eb:	sti    
  4063ec:	inc    ebp
  4063ed:	xchg   edi,eax
  4063ee:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f0:	mov    ecx,0xef8e8ee9
  4063f5:	cdq    
  4063f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f7:	dec    eax
  4063f8:	xchg   ebp,eax
  4063f9:	push   esp
  4063fa:	sub    eax,0xadfa8470
  4063ff:	mov    DWORD PTR [ecx],ebp
  406401:	jb     0x4063ea
  406403:	int    0x77
  406405:	push   ebp
  406406:	mov    edi,0x450befab
  40640b:	mov    BYTE PTR [ebx-0x7a27c89],al
  406411:	pop    ds
  406412:	pop    esi
  406413:	mov    ebp,0x493c6586
  406418:	pop    edi
  406419:	cmp    BYTE PTR [edi-0x1d],ch
  40641c:	ret    
  40641d:	test   eax,0x6d271533
  406422:	sub    eax,0xa2db6d02
  406427:	(bad)  
  406428:	fst    DWORD PTR [edi+0x819c64f]
  40642e:	aas    
  40642f:	sub    DWORD PTR [ecx-0x5d],esi
  406432:	hlt    
  406433:	jmp    0x406429
  406435:	xor    ecx,eax
  406437:	mov    bl,0x93
  406439:	in     al,dx
  40643a:	mov    dl,0x68
  40643c:	cdq    
  40643d:	sub    eax,0xa4d1b5e7
  406442:	adc    DWORD PTR [esp+edx*8-0xf],eax
  406446:	adc    al,BYTE PTR [ebx-0x1b23dd6e]
  40644c:	adc    BYTE PTR [esi+ecx*1-0x53589862],dl
  406453:	sbb    ebp,eax
  406455:	pop    es
  406456:	push   cs
  406457:	dec    DWORD PTR [ebx]
  406459:	call   0x7342:0xbc06dd02
  406460:	bound  ebx,QWORD PTR [ebp-0x1c898649]
  406466:	mov    WORD PTR [edx],cs
  406468:	add    al,0x5b
  40646a:	or     edi,DWORD PTR [edx]
  40646c:	rol    DWORD PTR [ecx+0x2],0x3e
  406470:	sahf   
  406471:	cdq    
  406472:	out    0x7a,al
  406474:	pop    eax
  406475:	aam    0xe7
  406477:	sahf   
  406478:	mov    ecx,0xf8468753
  40647d:	pop    ds
  40647e:	inc    ecx
  40647f:	icebp  
  406480:	(bad)  
  406481:	lea    esp,ds:0x53bad905
  406487:	jae    0x4064b2
  406489:	int3   
  40648a:	push   edx
  40648b:	jmp    DWORD PTR [ebx]
  40648d:	mov    al,ds:0x29d894e8
  406492:	adc    al,0xa9
  406494:	lods   eax,DWORD PTR ss:[esi]
  406496:	or     al,0x5c
  406498:	imul   esp,DWORD PTR [eax-0x6a5ac009],0x4b
  40649f:	call   0xb4b32b8b
  4064a4:	in     al,0xfe
  4064a6:	jmp    0x8c9e:0x284eb088
  4064ad:	xchg   edx,eax
  4064ae:	push   ecx
  4064af:	mov    dh,al
  4064b1:	push   esp
  4064b2:	loopne 0x4064f6
  4064b4:	loopne 0x406468
  4064b6:	loop   0x4064a3
  4064b8:	jb     0x406536
  4064ba:	xor    eax,0xfe4536c7
  4064bf:	cmp    al,0xad
  4064c1:	ja     0x4064eb
  4064c3:	add    eax,0x476101ac
  4064c8:	jmp    0x406459
  4064ca:	and    al,0x3e
  4064cc:	(bad)  
  4064cd:	jnp    0x4064be
  4064cf:	sub    DWORD PTR [edx+edx*2-0x56],0x70
  4064d4:	in     eax,dx
  4064d5:	inc    ebx
  4064d6:	mov    bl,0x16
  4064d8:	mov    BYTE PTR [edx],dl
  4064da:	aam    0xd
  4064dc:	loop   0x40651c
  4064de:	rcl    bh,0xf0
  4064e1:	sahf   
  4064e2:	lods   al,BYTE PTR ds:[esi]
  4064e3:	dec    ecx
  4064e4:	shr    bl,cl
  4064e6:	inc    esp
  4064e7:	clc    
  4064e8:	es ret 
  4064ea:	je     0x4064da
  4064ec:	dec    ebp
  4064ed:	cmp    eax,DWORD PTR [edx+0x3f]
  4064f0:	int3   
  4064f1:	pop    esi
  4064f2:	push   esi
  4064f3:	call   0x4075acc4
  4064f8:	mov    ds:0x20ea73c3,al
  4064fd:	imul   ebp,DWORD PTR [eax],0x98089d5a
  406503:	adc    bl,al
  406505:	add    ah,bh
  406507:	call   0xa09854aa
  40650c:	mov    ecx,0x1b6e1622
  406511:	inc    eax
  406512:	mov    esi,0xa47ef6d7
  406517:	das    
  406518:	loop   0x4064a6
  40651a:	xor    dl,dl
  40651c:	mov    edx,0xe404c571
  406521:	retf   0xa772
  406524:	cmp    esp,DWORD PTR [ecx]
  406526:	ror    DWORD PTR [ebp-0x11],cl
  406529:	jbe    0x4064e2
  40652b:	ds mov ebp,0x86ff51e5
  406531:	push   ecx
  406532:	or     al,0x94
  406535:	out    0x9,eax
  406537:	ror    BYTE PTR [esi-0x433f9440],cl
  40653d:	in     eax,0x74
  40653f:	jae    0x406574
  406541:	xor    BYTE PTR [edx-0x3e],cl
  406544:	jle    0x406521
  406546:	xchg   ebx,eax
  406547:	out    dx,eax
  406548:	xor    eax,0xb32a7bbe
  40654d:	ins    BYTE PTR es:[edi],dx
  40654e:	add    al,0x46
  406550:	xor    DWORD PTR [eax+0x20],ebp
  406553:	cmp    BYTE PTR [esi+esi*4],cl
  406556:	aam    0x65
  406558:	jb     0x406504
  40655a:	adc    ebp,DWORD PTR [esp+ebp*1-0x60e7e91c]
  406561:	mov    bh,0xbb
  406563:	call   0x5646d271
  406568:	in     eax,0xb6
  40656a:	lea    ebx,[ebp+0x1e7117c6]
  406570:	xchg   esi,eax
  406571:	jl     0x40656f
  406573:	jmp    0x4065cb
  406575:	jno    0x4065d1
  406577:	jl     0x406516
  406579:	push   esi
  40657a:	stos   BYTE PTR es:[edi],al
  40657b:	sbb    DWORD PTR [esi],ecx
  40657d:	xchg   ecx,eax
  40657e:	mov    bl,ch
  406580:	repnz mov esi,es
  406583:	xchg   edx,eax
  406584:	pop    es
  406585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406586:	(bad)  
  406587:	jecxz  0x406530
  406589:	mov    esi,0x6ff68c24
  40658e:	jno    0x4065a0
  406590:	push   edx
  406591:	xchg   edx,eax
  406592:	adc    eax,0xb40912b5
  406597:	retf   0xfa15
  40659a:	inc    esp
  40659b:	mov    edi,?
  40659d:	mov    al,0x6d
  40659f:	push   0xd251fc1
  4065a4:	sub    al,0x73
  4065a6:	repz stc 
  4065a8:	mov    ss,WORD PTR [edx+edx*8]
  4065ab:	loop   0x40661d
  4065ad:	push   ebx
  4065ae:	push   0xf34e6ba6
  4065b3:	pop    ebp
  4065b4:	mov    ch,0x98
  4065b6:	xchg   ebp,eax
  4065b7:	xchg   esp,eax
  4065b8:	mov    WORD PTR [esi+0x51148f5a],fs
  4065be:	in     eax,0x23
  4065c0:	call   0xf86941b0
  4065c5:	xchg   ebx,eax
  4065c6:	adc    ebp,DWORD PTR [edx]
  4065c8:	test   BYTE PTR [ebp-0x64],al
  4065cb:	jle    0x40662d
  4065cd:	or     dl,bl
  4065cf:	mov    DWORD PTR [edi+edi*2-0x58],ecx
  4065d3:	popf   
  4065d4:	push   eax
  4065d5:	sti    
  4065d6:	sub    esi,DWORD PTR [ebx+ebx*4-0x57b7478a]
  4065dd:	iret   
  4065de:	jge    0x40663c
  4065e0:	mov    al,0xcd
  4065e2:	push   0xffffff8d
  4065e4:	push   ds
  4065e5:	js     0x4065d6
  4065e7:	or     BYTE PTR [edi-0x3879ef2c],bh
  4065ed:	xor    ebx,DWORD PTR ds:0x63e73cf2
  4065f3:	loopne 0x406653
  4065f5:	jnp    0x40661c
  4065f7:	xor    eax,DWORD PTR [edx-0x1e8e04b5]
  4065fd:	loop   0x406601
  4065ff:	lea    esi,[edx-0x6eb5f17f]
  406605:	xchg   edx,eax
  406606:	or     DWORD PTR [ecx+0x52],esi
  406609:	hlt    
  40660a:	pop    edi
  40660b:	out    dx,al
  40660c:	cld    
  40660d:	sbb    edx,esp
  40660f:	inc    esp
  406610:	mov    ebx,0x910f5b8c
  406615:	pop    ebx
  406616:	mov    dh,0x9f
  406618:	push   cs
  406619:	test   eax,0xea386810
  40661e:	stc    
  40661f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406620:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  406622:	xor    dh,BYTE PTR [edi+0x5dda632f]
  406628:	lock mov edi,0x71ba5050
  40662e:	int    0x42
  406630:	mov    ch,BYTE PTR [ecx]
  406632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406633:	aad    0xee
  406635:	scas   al,BYTE PTR es:[edi]
  406636:	push   eax
  406637:	aam    0x50
  406639:	sbb    bl,BYTE PTR [esp+ebx*8]
  40663c:	pop    esi
  40663d:	lods   al,BYTE PTR ds:[esi]
  40663e:	in     eax,dx
  40663f:	push   edx
  406640:	mov    bh,0xfb
  406642:	je     0x40666a
  406644:	fwait
  406645:	aas    
  406646:	pop    ebp
  406647:	pop    ecx
  406648:	retf   0x13f7
  40664b:	xlat   BYTE PTR ds:[ebx]
  40664c:	mov    ebx,0x6071c681
  406651:	test   BYTE PTR [ebp-0x39],bl
  406654:	mov    eax,ds:0xd1269ba8
  406659:	inc    esi
  40665a:	shl    esp,1
  40665c:	addr16 mov edi,0xee3d288b
  406662:	aaa    
  406663:	sbb    BYTE PTR [ebx+eiz*4+0x6f],cl
  406667:	icebp  
  406668:	(bad)  
  406669:	hlt    
  40666a:	loope  0x4066a5
  40666c:	mov    eax,ds:0x332070db
  406671:	push   edx
  406672:	xchg   dh,dl
  406674:	xor    bh,BYTE PTR [edx-0x22]
  406677:	out    dx,eax
  406678:	ss repz mov ebx,0xfd9e4730
  40667f:	call   FWORD PTR [edx+0x5f7f236a]
  406685:	push   esp
  406686:	mov    ebx,0x65f28764
  40668c:	js     0x406699
  40668e:	add    eax,DWORD PTR [edx+0x53673d68]
  406694:	dec    eax
  406695:	and    bh,ah
  406697:	jns    0x406717
  406699:	nop
  40669a:	loop   0x406636
  40669c:	sbb    ecx,DWORD PTR [eax]
  40669e:	ds aad 0x24
  4066a1:	int3   
  4066a2:	fcom   DWORD PTR [edx+0xd]
  4066a5:	jno    0x40665f
  4066a7:	(bad)  
  4066a8:	repz push edi
  4066aa:	in     al,dx
  4066ab:	int    0xa3
  4066ad:	xchg   ecx,eax
  4066ae:	test   edx,0xbd12ccd7
  4066b4:	jnp    0x406665
  4066b6:	jmp    0x40669a
  4066b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066b9:	mov    edx,0x73baf2f1
  4066be:	mul    BYTE PTR [ecx]
  4066c0:	fild   WORD PTR [eax]
  4066c2:	jne    0x406692
  4066c4:	mov    al,0x74
  4066c6:	mov    esi,0x99824a6e
  4066cb:	xchg   ebx,eax
  4066cc:	xchg   ebx,eax
  4066cd:	mov    es,WORD PTR [ebp-0x4f]
  4066d0:	lock mov edi,0x20b62ed7
  4066d6:	cwde   
  4066d7:	sbb    DWORD PTR [edx],0x7b
  4066da:	popa   
  4066db:	(bad)  
  4066dc:	xchg   ebp,eax
  4066dd:	out    dx,al
  4066de:	cmp    DWORD PTR [edi+0xa003bde],eax
  4066e4:	mov    ?,WORD PTR [eax+edx*2]
  4066e7:	pop    ebp
  4066e8:	pusha  
  4066e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ea:	imul   eax,DWORD PTR [ecx+0x34],0x2e
  4066ee:	fsub   QWORD PTR ds:0x607d0477
  4066f4:	dec    ecx
  4066f5:	sub    BYTE PTR [ebx+0x2e513f47],dl
  4066fb:	gs leave 
  4066fd:	inc    DWORD PTR [ebx+0x5c1e328d]
  406703:	mov    edi,ecx
  406705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406706:	sub    eax,0x74925180
  40670b:	pop    edi
  40670c:	dec    ecx
  40670d:	inc    ebp
  40670e:	into   
  40670f:	inc    edx
  406710:	repz and ah,bh
  406713:	cmp    al,0x4c
  406715:	or     BYTE PTR [eax+0x2a2efc82],dl
  40671b:	xchg   ecx,eax
  40671c:	xor    al,0xd1
  40671e:	call   0x712e:0x640cb577
  406725:	scas   al,BYTE PTR es:[edi]
  406726:	mov    esi,DWORD PTR [eax+0x28]
  406729:	(bad)  
  40672a:	outs   dx,BYTE PTR ds:[esi]
  40672b:	jne    0x4066ad
  40672d:	iret   
  40672e:	or     eax,0xae7ec19c
  406733:	push   esi
  406734:	push   esp
  406735:	adc    ebx,esi
  406737:	call   0xb67b473e
  40673c:	mov    BYTE PTR [edx+0x43ffd577],dl
  406742:	ret    0x51e4
  406745:	dec    ecx
  406746:	xor    ah,BYTE PTR [eax+esi*1-0x607e264c]
  40674d:	mov    DWORD PTR [ebx+0x22dee191],edx
  406753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406754:	ret    0xd309
  406757:	imul   eax,DWORD PTR [edi+edi*4+0x35],0x45720b0a
  40675f:	sahf   
  406760:	or     al,0x4a
  406762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406763:	push   ds
  406764:	das    
  406765:	les    esi,FWORD PTR [ecx]
  406767:	fmul   DWORD PTR [ecx+0x70c0a03b]
  40676d:	or     DWORD PTR ds:0xc9871202,0xe7723b8f
  406777:	neg    BYTE PTR [eax]
  406779:	arpl   WORD PTR ds:0x8a45f274,ax
  40677f:	xchg   ebx,eax
  406780:	mov    al,0x6e
  406782:	stos   BYTE PTR es:[edi],al
  406783:	add    edi,edx
  406785:	push   es
  406786:	fidivr WORD PTR [edx-0x39357549]
  40678c:	ror    BYTE PTR [edx+0x82f4747],0x5b
  406793:	call   0x42ac:0xde39ff9d
  40679a:	js     0x40677a
  40679c:	dec    ebp
  40679d:	xchg   edx,eax
  40679e:	rcpps  xmm5,xmm6
  4067a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a2:	dec    edx
  4067a3:	fld    TBYTE PTR [esi+0x6d]
  4067a6:	in     al,0x97
  4067a8:	adc    BYTE PTR ds:0x361b066f,al
  4067ae:	les    esi,FWORD PTR [ecx]
  4067b0:	mov    dl,0xf1
  4067b2:	ja     0x406779
  4067b4:	mov    ecx,0x905b9b8b
  4067b9:	pushf  
  4067ba:	sar    BYTE PTR [ebp+ecx*4-0x6d],cl
  4067be:	fadd   QWORD PTR [ebx-0x64]
  4067c1:	xchg   DWORD PTR [esi+0x4c],eax
  4067c4:	je     0x4067c1
  4067c6:	(bad)  
  4067c7:	dec    esi
  4067c8:	popa   
  4067c9:	ret    0x5674
  4067cc:	sbb    al,BYTE PTR [edi+0x65]
  4067cf:	hlt    
  4067d0:	adc    DWORD PTR [ecx+0x78],0xffffffd5
  4067d4:	add    BYTE PTR [ebp+0xa],ch
  4067d7:	into   
  4067d8:	data16 in al,0x3
  4067db:	and    DWORD PTR [edx],ebp
  4067dd:	bound  esp,QWORD PTR [esi]
  4067df:	xchg   ebp,eax
  4067e0:	scas   al,BYTE PTR es:[edi]
  4067e1:	or     al,0x9b
  4067e3:	pusha  
  4067e4:	jns    0x406854
  4067e6:	retf   
  4067e7:	ret    0x8aa4
  4067ea:	ds cdq 
  4067ec:	jecxz  0x4067eb
  4067ee:	fidiv  DWORD PTR [ebx+0x45c224f8]
  4067f4:	and    ecx,DWORD PTR [edi+esi*1]
  4067f7:	fnstcw WORD PTR [ebp+0x1f]
  4067fa:	mov    eax,0xffed5df
  4067ff:	fldenv [ebp+0xe968a66]
  406805:	aaa    
  406806:	inc    ebx
  406807:	nop
  406808:	mov    ch,0x23
  40680a:	pop    ebx
  40680b:	sub    BYTE PTR [esi+ebp*8-0x1d],cl
  40680f:	cld    
  406810:	mov    ecx,0x51388f21
  406815:	push   ds
  406816:	into   
  406817:	adc    al,0x6b
  406819:	add    DWORD PTR ds:0xffa3488d,edi
  40681f:	cwde   
  406820:	xchg   BYTE PTR [ecx],bl
  406822:	pop    esp
  406823:	retf   
  406824:	xchg   ebx,eax
  406825:	das    
  406826:	xchg   ebp,eax
  406827:	adc    dh,0x9e
  40682a:	loope  0x4067d6
  40682c:	ds jno 0x4067fb
  40682f:	mov    eax,0xf3f2601
  406834:	mov    edx,0x860d5494
  406839:	daa    
  40683a:	cwde   
  40683b:	je     0x40689a
  40683d:	sub    eax,0x2884d406
  406842:	addr16 xchg esi,eax
  406844:	jecxz  0x406898
  406846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406847:	sub    eax,DWORD PTR [ebx+edx*2+0x74]
  40684b:	mov    cs,WORD PTR [esi+ebx*1-0x4aa127b4]
  406852:	test   BYTE PTR ss:[esp+edi*4+0x7da4de3b],dh
  40685a:	into   
  40685b:	pushf  
  40685c:	mov    WORD PTR [eax-0xe],?
  40685f:	ret    
  406860:	jecxz  0x4068a9
  406862:	daa    
  406863:	cmp    ecx,DWORD PTR [edx]
  406865:	or     ch,BYTE PTR [edi+0x1d3489f1]
  40686b:	push   DWORD PTR ds:0x3462bce7
  406871:	dec    ebx
  406872:	pop    eax
  406873:	das    
  406874:	stos   BYTE PTR es:[edi],al
  406875:	xchg   ebp,eax
  406876:	daa    
  406877:	ja     0x406870
  406879:	cmp    ecx,DWORD PTR [ecx]
  40687b:	icebp  
  40687c:	pop    DWORD PTR [ebx]
  40687e:	mov    edi,0xa7fbe09e
  406883:	ror    DWORD PTR [esi-0x6c],cl
  406886:	test   DWORD PTR [esi-0x74c87517],esp
  40688c:	gs pop edi
  40688e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688f:	mov    DWORD PTR [ebx-0x6b8187d8],esi
  406895:	call   FWORD PTR [ebx+0x7c6637dc]
  40689b:	and    al,0x8b
  40689d:	and    edx,0x66
  4068a0:	mov    ebx,0x3fcaf19b
  4068a5:	popa   
  4068a6:	cmp    DWORD PTR [edx+edi*2-0x1f929c39],edi
  4068ad:	loopne 0x4068f5
  4068af:	pop    esi
  4068b0:	jecxz  0x40692d
  4068b2:	(bad)  
  4068b4:	sahf   
  4068b5:	mov    al,ds:0x4b1a4f0f
  4068ba:	retf   0x3d97
  4068bd:	mov    eax,0x9a648a3c
  4068c2:	hlt    
  4068c3:	(bad)  
  4068c4:	sub    ah,BYTE PTR [eax-0x25]
  4068c7:	pop    eax
  4068c8:	cmp    DWORD PTR [ebp-0x4e],esp
  4068cb:	mov    edi,0x912c740
  4068d0:	mov    eax,eax
  4068d2:	into   
  4068d3:	shr    BYTE PTR [ebx],0x17
  4068d6:	xchg   ebp,eax
  4068d7:	sub    al,BYTE PTR [ebp-0x33]
  4068da:	mov    bh,0xa1
  4068dc:	mov    eax,0xd8f287e1
  4068e1:	xchg   esi,eax
  4068e2:	jmp    0x406939
  4068e4:	stc    
  4068e5:	lock in al,0xa8
  4068e8:	call   0xa7cc890e
  4068ed:	fcmove st,st(2)
  4068ef:	and    DWORD PTR [ecx+0x2d],edi
  4068f2:	xchg   edx,eax
  4068f3:	jns    0x4068af
  4068f5:	ret    
  4068f6:	mov    ds:0xeb767f83,al
  4068fb:	les    esi,FWORD PTR [edx+0x425bd632]
  406901:	int    0x81
  406903:	scas   al,BYTE PTR es:[edi]
  406904:	das    
  406905:	cmp    BYTE PTR [eax+0x50],bh
  406908:	mov    eax,ds:0xcf01513e
  40690d:	jno    0x4068ab
  40690f:	loopne 0x4068d9
  406911:	pop    ebx
  406912:	mov    WORD PTR [edi+0x74ba1413],gs
  406918:	and    al,0x28
  40691a:	xchg   edi,eax
  40691b:	leave  
  40691c:	repnz mov cs,WORD PTR [eax+0x62]
  406920:	call   0xbc37:0xc8f59f21
  406927:	xor    eax,0x264a31ef
  40692c:	mov    ch,0x51
  40692e:	jnp    0x40691a
  406930:	xor    DWORD PTR [ebp+0x27c1082a],ebx
  406936:	enter  0x6c2a,0x34
  40693a:	rcl    DWORD PTR [edi],0x32
  40693d:	jb     0x4068c3
  40693f:	cmp    ebx,DWORD PTR ds:0x80fe435c
  406945:	adc    BYTE PTR [edx],cl
  406947:	mov    bh,BYTE PTR [ecx]
  406949:	loopne 0x406981
  40694b:	imul   ebp,ebp,0x223401bd
  406951:	stos   BYTE PTR es:[edi],al
  406952:	or     eax,0x23a42edc
  406957:	mov    esi,0x5ac0b3d7
  40695c:	and    DWORD PTR [esi-0x656d1103],edi
  406962:	mov    gs,WORD PTR [ecx-0x2f]
  406965:	inc    edx
  406966:	add    al,0x4d
  406968:	iret   
  406969:	inc    ebp
  40696a:	int    0x42
  40696c:	(bad)  
  40696d:	loop   0x4069ac
  40696f:	push   edi
  406970:	sub    ah,bl
  406972:	rol    BYTE PTR [esi-0x631b8c81],1
  406978:	les    edi,FWORD PTR [eax]
  40697a:	jmp    0x8bd31b93
  40697f:	out    0x67,al
  406981:	push   edx
  406982:	ins    BYTE PTR es:[edi],dx
  406983:	call   0x34bc:0xd6bbc3b4
  40698a:	inc    eax
  40698b:	outs   dx,DWORD PTR ds:[esi]
  40698c:	jno    0x406999
  40698e:	fwait
  40698f:	add    BYTE PTR ds:0x260c6b39,bh
  406995:	inc    esi
  406996:	and    dl,BYTE PTR [ebx+edi*2+0x3b]
  40699a:	mov    ds:0xd81157e2,al
  40699f:	sub    eax,edi
  4069a1:	retf   
  4069a2:	push   eax
  4069a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069a4:	cwde   
  4069a5:	jmp    0x432a:0x9f01f4ff
  4069ac:	outs   dx,BYTE PTR ds:[esi]
  4069ad:	iret   
  4069ae:	pusha  
  4069af:	sbb    eax,0xb8982a24
  4069b4:	inc    ebp
  4069b5:	aam    0xb7
  4069b7:	sbb    DWORD PTR [eax-0x4d],0xd3cb4f3b
  4069be:	xor    eax,0xdabcf884
  4069c3:	js     0x406a44
  4069c5:	and    BYTE PTR [edi+ecx*4-0xb],dh
  4069c9:	out    0xc6,eax
  4069cb:	fiadd  WORD PTR [edi+0x403b0e78]
  4069d1:	cmp    DWORD PTR [ecx],0xffffffae
  4069d4:	jmp    0x406a4d
  4069d6:	xchg   esi,eax
  4069d7:	lods   eax,DWORD PTR ds:[esi]
  4069d8:	ret    0xaf89
  4069db:	and    al,al
  4069dd:	dec    ecx
  4069de:	jae    0x40699d
  4069e0:	inc    esi
  4069e1:	bound  esi,QWORD PTR [esi-0x7d5a52a9]
  4069e7:	(bad)  
  4069e8:	jbe    0x4069ed
  4069ea:	(bad)  
  4069ec:	loope  0x406a06
  4069ee:	cli    
  4069ef:	pushf  
  4069f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f1:	push   edx
  4069f2:	iret   
  4069f3:	mov    bh,0xcf
  4069f5:	out    0x47,al
  4069f7:	mov    ds,WORD PTR [ecx]
  4069f9:	mov    cl,0x6
  4069fb:	jb     0x4069aa
  4069fd:	je     0x4069fa
  4069ff:	hlt    
  406a00:	test   BYTE PTR [ebx-0x4e4a29c5],dh
  406a06:	mov    WORD PTR [edx],fs
  406a08:	clc    
  406a09:	mov    eax,0x94608d00
  406a0e:	sbb    al,0xda
  406a10:	sub    al,0xc2
  406a12:	mov    ah,BYTE PTR [ebx+eax*8]
  406a15:	(bad)  
  406a16:	mov    al,ds:0x7063c8f7
  406a1b:	std    
  406a1c:	pop    es
  406a1d:	pop    es
  406a1e:	inc    ebp
  406a1f:	loop   0x406a1f
  406a21:	dec    ebp
  406a22:	jg     0x4069d6
  406a24:	rcl    BYTE PTR [esi-0x710b45a1],0x33
  406a2b:	or     DWORD PTR [ebp+0x4ccfe52f],edx
  406a31:	inc    edx
  406a32:	pop    DWORD PTR [esi-0xa]
  406a35:	mov    edx,0x81a82a68
  406a3a:	xchg   ecx,eax
  406a3b:	bound  edi,QWORD PTR [ebp-0x65]
  406a3e:	and    bh,BYTE PTR [ecx-0x745aa9dd]
  406a44:	sbb    DWORD PTR [edi],ecx
  406a46:	jp     0x406a6a
  406a48:	(bad)  
  406a49:	pop    ds
  406a4a:	mov    bl,0x56
  406a4c:	dec    ebx
  406a4d:	pusha  
  406a4e:	or     DWORD PTR [esi+0x34a679],0xe3ad1813
  406a58:	adc    eax,DWORD PTR [esi-0x4e9f8288]
  406a5e:	or     BYTE PTR [edi-0x2b],ch
  406a61:	mov    edx,0x9f37aa6d
  406a66:	xchg   DWORD PTR [ecx],esp
  406a68:	mov    bh,0xa3
  406a6a:	mov    BYTE PTR [edi-0x75240e2b],dl
  406a70:	xchg   edi,eax
  406a71:	out    0x12,al
  406a73:	jecxz  0x406ad8
  406a75:	or     edx,DWORD PTR [esi-0x1f]
  406a78:	jg     0x406af7
  406a7a:	jp     0x406ac4
  406a7c:	in     eax,0xa5
  406a7e:	fsub   DWORD PTR [ebx+0x3e]
  406a81:	inc    edi
  406a82:	imul   edi,DWORD PTR [ebp+0x35],0x50df1af9
  406a89:	inc    ebx
  406a8a:	add    al,0x7a
  406a8c:	out    0x92,eax
  406a8e:	xor    al,0xbc
  406a90:	repz jmp 0x47aec64b
  406a96:	xor    DWORD PTR [edi+esi*2-0x34ddc4f1],esp
  406a9d:	bswap  ebp
  406a9f:	mov    eax,ds:0x60147f89
  406aa4:	sub    DWORD PTR [esi],0x53
  406aa7:	(bad)  
  406aa8:	and    eax,DWORD PTR [edx]
  406aaa:	xchg   edx,eax
  406aab:	mov    cl,0x3d
  406aad:	inc    esi
  406aae:	add    DWORD PTR [edx+0x7c956a],0x9dc65f5b
  406ab8:	push   edi
  406ab9:	je     0x406ad4
  406abb:	sbb    esi,ecx
  406abd:	fdiv   st,st(6)
  406abf:	push   ebx
  406ac0:	cmp    eax,0xaee010e1
  406ac5:	add    eax,DWORD PTR [eax-0x4]
  406ac8:	mov    esi,0x133f9b77
  406acd:	test   eax,0x13d5616a
  406ad2:	xor    BYTE PTR [eax-0x47],ch
  406ad5:	or     eax,0x54d27f84
  406ada:	adc    dl,BYTE PTR [ecx-0x49]
  406add:	sbb    DWORD PTR [ebx],ecx
  406adf:	sbb    bl,BYTE PTR [ebx+0x4d2237ba]
  406ae5:	js     0x406a81
  406ae7:	sahf   
  406ae8:	sbb    esp,DWORD PTR [ebp+0x6c9e1872]
  406aee:	or     al,0xc8
  406af0:	mov    ds:0x5994ed17,al
  406af5:	int3   
  406af6:	mov    ds:0x40940165,eax
  406afb:	and    bh,cl
  406afd:	inc    edi
  406afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aff:	in     al,dx
  406b00:	mov    WORD PTR [edi],?
  406b02:	scas   al,BYTE PTR es:[edi]
  406b03:	sub    al,0x9c
  406b05:	sub    ebp,DWORD PTR [ebx]
  406b07:	or     edx,esp
  406b09:	and    BYTE PTR [esi-0x772c8da0],al
  406b0f:	aam    0x4f
  406b11:	imul   edi,DWORD PTR [esi],0x68fc2953
  406b17:	cmp    al,BYTE PTR [edx+0x43]
  406b1a:	jle    0x406b3a
  406b1c:	cmp    BYTE PTR [esi],ah
  406b1e:	push   0x64c16835
  406b23:	jnp    0x406b3d
  406b25:	add    eax,0x91fccf85
  406b2a:	mov    ch,0xee
  406b2c:	jmp    0x406b5e
  406b2e:	xchg   BYTE PTR [edi-0x19],bh
  406b31:	sub    eax,0x9fe7c51c
  406b36:	ret    
  406b37:	bound  ebx,QWORD PTR [edx+0x20]
  406b3a:	ins    DWORD PTR es:[edi],dx
  406b3b:	or     ebx,ebp
  406b3d:	loope  0x406ace
  406b3f:	or     ecx,DWORD PTR [edx+edi*8+0x6bf052d]
  406b46:	push   ebx
  406b47:	push   cs
  406b48:	test   al,0x65
  406b4a:	mov    ebx,0x6a8d94f2
  406b4f:	or     cl,dh
  406b51:	inc    esp
  406b52:	push   es
  406b53:	outs   dx,DWORD PTR ds:[esi]
  406b54:	ins    BYTE PTR es:[edi],dx
  406b55:	mov    dh,0x7b
  406b57:	sbb    eax,0x33c67228
  406b5c:	lea    eax,[edi-0x1b94d2bd]
  406b62:	ins    BYTE PTR es:[edi],dx
  406b63:	add    DWORD PTR [edi+0x5553228b],0x79
  406b6a:	stc    
  406b6b:	cwde   
  406b6c:	mov    al,ds:0xd33fca1b
  406b71:	sub    DWORD PTR [edx*1+0x1846b4ca],esi
  406b78:	xchg   bp,ax
  406b7a:	adc    al,0xb9
  406b7c:	sbb    al,0x62
  406b7e:	xchg   DWORD PTR [esi],esi
  406b80:	pop    edx
  406b81:	inc    edi
  406b82:	test   DWORD PTR [eax+0x70],eax
  406b85:	enter  0x30e4,0x43
  406b89:	sar    BYTE PTR [ecx+0x2c4ade45],0x15
  406b90:	pop    ds
  406b91:	repz push eax
  406b93:	sub    BYTE PTR [edx-0x13],cl
  406b96:	pop    edi
  406b97:	leave  
  406b98:	cmp    bl,ch
  406b9a:	shr    BYTE PTR [eax],0x41
  406b9d:	cmp    eax,DWORD PTR [ecx-0x1bd42c92]
  406ba3:	mov    cl,0xe4
  406ba5:	outs   dx,DWORD PTR ds:[esi]
  406ba6:	xchg   ecx,eax
  406ba7:	pop    eax
  406ba8:	jmp    0x276e5a27
  406bad:	repnz xor al,BYTE PTR [ecx]
  406bb0:	stos   DWORD PTR es:[edi],eax
  406bb1:	mov    ebx,0x19d02373
  406bb6:	inc    ecx
  406bb7:	hlt    
  406bb8:	mov    dh,0x15
  406bba:	fisub  DWORD PTR [esi+0x63887ac3]
  406bc0:	push   cs
  406bc1:	(bad)  
  406bc2:	dec    eax
  406bc3:	ja     0x406b77
  406bc5:	mov    WORD PTR [eax+0x1cba3b3d],fs
  406bcb:	outs   dx,DWORD PTR ds:[esi]
  406bcc:	or     DWORD PTR [ecx],esp
  406bce:	sahf   
  406bcf:	stos   BYTE PTR es:[edi],al
  406bd0:	js     0x406bf5
  406bd2:	inc    esi
  406bd3:	or     eax,DWORD PTR [esp+edi*4+0x2bb933c]
  406bda:	je     0x406bab
  406bdc:	out    0x8c,eax
  406bde:	in     al,dx
  406bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406be0:	lea    esi,[eax]
  406be2:	adc    DWORD PTR [eax+0x2d],esi
  406be5:	(bad)  
  406be6:	imul   BYTE PTR [ebx-0x2b000b35]
  406bec:	push   esp
  406bed:	popf   
  406bee:	cdq    
  406bef:	(bad)  
  406bf0:	in     al,dx
  406bf1:	mov    cl,0xe0
  406bf3:	repnz and eax,0x6af51d0e
  406bf9:	lahf   
  406bfa:	sbb    DWORD PTR [ebp-0x4e],0xffffff8e
  406bfe:	or     esi,DWORD PTR ds:0x740ecb0a
  406c04:	or     BYTE PTR [ecx-0x26dc5353],ch
  406c0a:	inc    edi
  406c0b:	scas   al,BYTE PTR es:[edi]
  406c0c:	ja     0x406bde
  406c0e:	adc    eax,0xe59beb1d
  406c13:	les    ecx,FWORD PTR [esi]
  406c15:	mov    bh,0xb
  406c17:	cmp    DWORD PTR [edi-0x62623bb0],esi
  406c1d:	stos   DWORD PTR es:[edi],eax
  406c1e:	rcr    ecx,1
  406c20:	fidiv  WORD PTR [ebp-0x37e7cfe6]
  406c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c27:	fdivr  st,st(5)
  406c29:	adc    eax,0x8c1f03fe
  406c2e:	enter  0xa0d7,0xd5
  406c32:	inc    eax
  406c33:	popf   
  406c34:	repnz dec ecx
  406c36:	ror    BYTE PTR [edx],1
  406c38:	popa   
  406c39:	lods   al,BYTE PTR ds:[esi]
  406c3a:	sub    esi,DWORD PTR [edx+0x751bb340]
  406c40:	lock rcr BYTE PTR [edi-0x281fd8c0],cl
  406c47:	and    DWORD PTR [edx*1-0x12f22668],edi
  406c4e:	fadd   st(6),st
  406c50:	ret    0x9f14
  406c53:	jl     0x406bfd
  406c55:	sub    eax,ecx
  406c57:	imul   edi,DWORD PTR [edx+0x5f8cbf90],0x9770805b
  406c61:	sub    ch,BYTE PTR [eax+0x5894dc13]
  406c67:	jecxz  0x406c80
  406c69:	mov    esi,0x6be82211
  406c6e:	and    BYTE PTR [eax],bl
  406c70:	xor    DWORD PTR [eax-0x25],ecx
  406c73:	adc    al,0xb2
  406c75:	(bad)  
  406c77:	sbb    eax,0x127f71ce
  406c7c:	add    DWORD PTR [esi-0x4c],eax
  406c7f:	push   0x1968101d
  406c84:	(bad)
  406c87:	inc    ecx
  406c88:	addr16 (bad) 
  406c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c8c:	xchg   BYTE PTR [eax+0x3d],dl
  406c8f:	xor    bl,BYTE PTR [ebp+0x58a89ddd]
  406c95:	loope  0x406c26
  406c97:	out    dx,al
  406c98:	lods   al,BYTE PTR ds:[esi]
  406c99:	in     eax,0xf4
  406c9b:	lods   eax,DWORD PTR ds:[esi]
  406c9c:	shl    BYTE PTR [esi-0x5ff41738],1
  406ca2:	cmp    al,0x34
  406ca4:	retf   0x9e6f
  406ca7:	xor    eax,edi
  406ca9:	pop    ss
  406caa:	cmc    
  406cab:	cmp    eax,0x229ec5f1
  406cb0:	stos   BYTE PTR es:[edi],al
  406cb1:	inc    edi
  406cb2:	push   cs
  406cb3:	pop    edx
  406cb4:	pop    ss
  406cb5:	mov    ebp,0x183b8b3a
  406cba:	push   ebx
  406cbb:	fadd   DWORD PTR [edi+0x54]
  406cbe:	je     0x406ca1
  406cc0:	mov    esi,0xea78b1ba
  406cc5:	out    dx,eax
  406cc6:	sbb    edi,DWORD PTR [ecx]
  406cc8:	xchg   esp,eax
  406cc9:	js     0x406c85
  406ccb:	adc    eax,0xbe77a9b4
  406cd0:	and    al,0xe5
  406cd2:	add    eax,DWORD PTR [edi]
  406cd4:	mov    esp,0x107ff083
  406cd9:	adc    DWORD PTR [ebx+ebp*2-0x3e],edx
  406cdd:	int3   
  406cde:	call   0x31b9:0xa4f8e68c
  406ce5:	mov    ah,0x9a
  406ce7:	xor    eax,0x14acef5e
  406cec:	ins    DWORD PTR es:[edi],dx
  406ced:	js     0x406d2b
  406cef:	xor    bh,BYTE PTR [ebx+0x74]
  406cf2:	div    DWORD PTR [ebp+0x1c5f05b5]
  406cf8:	add    edx,DWORD PTR fs:[edi+0x2b61897c]
  406cff:	enter  0xf1a4,0xbd
  406d03:	out    0xc2,eax
  406d05:	push   ds
  406d06:	xchg   esi,eax
  406d07:	xor    al,BYTE PTR [ebx-0x7dca3e8b]
  406d0d:	sub    DWORD PTR [ecx],0xe6239a8a
  406d13:	xchg   ebp,eax
  406d14:	add    bl,BYTE PTR ds:0xdbd9211a
  406d1a:	adc    eax,0xc16ac97c
  406d1f:	jmp    0xc6a3e0a2
  406d24:	int3   
  406d25:	addr16 ss ja 0x406cc7
  406d29:	fdiv   QWORD PTR [ebp-0x4d]
  406d2c:	or     eax,0x21f3810f
  406d31:	cmp    DWORD PTR [edx],edi
  406d33:	and    al,al
  406d35:	mov    bl,BYTE PTR [eax]
  406d37:	lods   eax,DWORD PTR ds:[esi]
  406d38:	out    dx,al
  406d39:	mov    dh,0x56
  406d3b:	mov    al,0xce
  406d3d:	test   eax,0x952b84b4
  406d42:	jle    0x406ce2
  406d44:	scas   al,BYTE PTR es:[edi]
  406d45:	pop    eax
  406d46:	(bad)  
  406d47:	mov    cl,0x23
  406d49:	or     eax,0x8a6f666
  406d4e:	cmp    esi,eax
  406d50:	in     eax,0xf9
  406d52:	call   0x9c59:0x8998dd30
  406d59:	mov    ebx,0x9eed9bd9
  406d5e:	xchg   ebp,eax
  406d5f:	dec    edi
  406d60:	mov    ebp,edx
  406d62:	jae    0x406dac
  406d64:	inc    esp
  406d65:	shl    ebp,cl
  406d67:	mov    es,ebp
  406d69:	mov    ds:0x842708c5,al
  406d6e:	jae    0x406d45
  406d70:	inc    edx
  406d71:	mul    BYTE PTR [eax-0x4adf3b1c]
  406d77:	(bad)  
  406d79:	and    bh,BYTE PTR [ebp+0x56]
  406d7c:	loop   0x406dd5
  406d7e:	or     al,0xa
  406d80:	mov    dh,0x99
  406d82:	dec    edi
  406d83:	xchg   edi,eax
  406d84:	imul   esi,ebx,0x7d0cab0c
  406d8a:	stc    
  406d8b:	loopne 0x406d17
  406d8d:	in     eax,dx
  406d8e:	sub    edi,edx
  406d90:	fisubr DWORD PTR [edx-0x2b]
  406d93:	icebp  
  406d94:	pop    ecx
  406d95:	and    ebx,eax
  406d97:	add    al,0xe3
  406d99:	jns    0x406dfb
  406d9b:	inc    edi
  406d9c:	sbb    al,0x40
  406d9e:	adc    al,0x1a
  406da0:	stc    
  406da1:	xor    al,0xcf
  406da3:	jo     0x406e15
  406da5:	sub    al,0xf7
  406da7:	dec    eax
  406da8:	jmp    0xf6f669d5
  406dad:	jb     0x406d4a
  406daf:	aad    0xe6
  406db1:	lods   eax,DWORD PTR ds:[esi]
  406db2:	outs   dx,BYTE PTR ds:[esi]
  406db3:	pop    esp
  406db4:	xor    esi,DWORD PTR [eax]
  406db6:	sub    BYTE PTR [esi],bl
  406db8:	jno    0x406d78
  406dba:	dec    ebx
  406dbb:	ret    0xee44
  406dbe:	sti    
  406dbf:	push   ss
  406dc0:	scas   eax,DWORD PTR es:[edi]
  406dc1:	inc    esp
  406dc2:	push   es
  406dc3:	sub    eax,0x56b393cd
  406dc8:	in     eax,dx
  406dc9:	jne    0x406dca
  406dcb:	fdivr  QWORD PTR [edi+0x56]
  406dce:	sbb    eax,0xbda080d5
  406dd3:	sbb    dh,BYTE PTR [edx+eax*4+0x17]
  406dd7:	aam    0x39
  406dd9:	xchg   BYTE PTR [ecx],al
  406ddb:	icebp  
  406ddc:	sbb    ebx,ecx
  406dde:	jne    0x406dc5
  406de0:	ret    
  406de1:	jns    0x406dd8
  406de3:	pop    esi
  406de4:	imul   esp,esi,0x1a
  406de7:	sahf   
  406de8:	add    bl,0xdc
  406deb:	stos   DWORD PTR es:[edi],eax
  406dec:	push   ss
  406ded:	stos   DWORD PTR es:[edi],eax
  406dee:	sbb    BYTE PTR [edi],al
  406df0:	jnp    0x406e55
  406df2:	repnz mov edx,0x42fd3467
  406df8:	fsub   DWORD PTR [ebx]
  406dfa:	mov    esi,0xccf19d49
  406dff:	sub    cl,BYTE PTR [edi+0x7409f055]
  406e05:	sbb    eax,0x1d5d6b12
  406e0a:	inc    ecx
  406e0b:	js     0x406d9a
  406e0d:	je     0x406e32
  406e0f:	jle    0x406e8f
  406e11:	bswap  eax
  406e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e14:	cmp    DWORD PTR [edx-0x5e],esp
  406e17:	inc    esp
  406e18:	scas   eax,DWORD PTR es:[edi]
  406e19:	test   al,0x8c
  406e1b:	jecxz  0x406dea
  406e1d:	sbb    BYTE PTR [edx+0x45],cl
  406e20:	sub    al,0xf6
  406e22:	xchg   ecx,eax
  406e23:	ror    BYTE PTR [ecx+0xf],cl
  406e26:	inc    eax
  406e27:	outs   dx,DWORD PTR ds:[esi]
  406e28:	sbb    ah,dh
  406e2a:	loopne 0x406e4d
  406e2c:	adc    ah,dh
  406e2e:	sahf   
  406e2f:	jp     0x406df3
  406e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e32:	data16 sahf 
  406e34:	pushf  
  406e35:	jns    0x406e2b
  406e37:	adc    al,0x1a
  406e39:	add    al,0x61
  406e3b:	push   edi
  406e3c:	dec    DWORD PTR [ebp+edx*2-0x2177ecd]
  406e43:	in     al,dx
  406e44:	jg     0x406e8d
  406e46:	jbe    0x406dd3
  406e48:	mov    WORD PTR [ecx+0x3b8e829d],?
  406e4e:	scas   al,BYTE PTR es:[edi]
  406e4f:	mov    ecx,0x89db9140
  406e54:	sub    al,0x6f
  406e56:	adc    al,0x6d
  406e58:	pop    ebp
  406e59:	and    al,0x29
  406e5b:	inc    ebp
  406e5c:	dec    ebx
  406e5d:	enter  0x89f0,0x9
  406e61:	pop    ebp
  406e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e63:	pop    eax
  406e64:	inc    esp
  406e65:	jmp    0xf82cdee3
  406e6a:	and    esi,eax
  406e6c:	xchg   edi,eax
  406e6d:	sub    ecx,esp
  406e6f:	cld    
  406e70:	pop    ss
  406e71:	enter  0xc64d,0xee
  406e75:	rcl    BYTE PTR [esi],1
  406e77:	inc    eax
  406e78:	rcl    BYTE PTR [edx-0x19],0x46
  406e7c:	(bad)
  406e7f:	xchg   DWORD PTR [ecx+0x480dce3d],edx
  406e85:	adc    eax,0x8c1a48a9
  406e8a:	mov    bl,BYTE PTR [bx+si+0x6510]
  406e8f:	add    eax,0x4d
  406e92:	xchg   BYTE PTR [edx],dh
  406e94:	jns    0x406e80
  406e96:	cmp    ah,BYTE PTR [esi]
  406e98:	fistp  DWORD PTR [ebp-0xbd12e01]
  406e9e:	and    eax,0x46283c0f
  406ea3:	(bad)  
  406ea5:	fild   QWORD PTR [edx+ecx*8+0x36]
  406ea9:	(bad)
  406ead:	aas    
  406eae:	cs stos DWORD PTR es:[edi],eax
  406eb0:	inc    ecx
  406eb1:	ret    0xe844
  406eb4:	adc    eax,0xc7c1d271
  406eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eba:	add    BYTE PTR [ecx+0x53e26af6],ah
  406ec0:	lahf   
  406ec1:	sti    
  406ec2:	sub    al,0x82
  406ec4:	call   0xdab:0xc2cfc3f1
  406ecb:	aam    0x8f
  406ecd:	out    0xc4,eax
  406ecf:	add    ebx,DWORD PTR [ebx+0x4c]
  406ed2:	call   0x6e90:0xaed5dc82
  406ed9:	sbb    bl,dh
  406edb:	(bad)  
  406edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406edd:	das    
  406ede:	in     eax,dx
  406edf:	xchg   ebx,eax
  406ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ee1:	in     al,0x84
  406ee3:	js     0x406e94
  406ee5:	dec    eax
  406ee6:	push   cs
  406ee7:	mov    ecx,edi
  406ee9:	outs   dx,DWORD PTR ds:[esi]
  406eea:	les    ebp,FWORD PTR [ebx+0x7a]
  406eed:	aam    0xfc
  406eef:	mov    ah,0x2a
  406ef1:	xchg   edx,eax
  406ef2:	mov    eax,0x5ad919a3
  406ef7:	pop    eax
  406ef8:	aam    0xb6
  406efa:	hlt    
  406efb:	test   BYTE PTR [edi+0x36],ah
  406efe:	xchg   ecx,eax
  406eff:	xor    dh,bl
  406f01:	mov    cl,0x3e
  406f03:	ja     0x406eb0
  406f05:	in     al,0x5f
  406f07:	mov    edx,0x7b95a886
  406f0c:	mov    ebx,ecx
  406f0e:	mov    ebx,0x1821925b
  406f13:	jb     0x406f16
  406f15:	hlt    
  406f16:	popf   
  406f17:	pop    esp
  406f18:	push   0x2c
  406f1a:	clc    
  406f1b:	iret   
  406f1c:	out    dx,eax
  406f1d:	int    0xe2
  406f1f:	dec    ebp
  406f20:	ret    
  406f21:	cmp    ebp,edx
  406f23:	jecxz  0x406f15
  406f25:	ins    DWORD PTR es:[edi],dx
  406f26:	adc    edi,edi
  406f28:	in     eax,0xf9
  406f2a:	xchg   ecx,eax
  406f2b:	push   ss
  406f2c:	sbb    al,0xab
  406f2e:	adc    dl,al
  406f30:	das    
  406f31:	loopne 0x406f10
  406f33:	push   ss
  406f34:	(bad)  
  406f35:	sahf   
  406f36:	test   BYTE PTR [ebx],cl
  406f38:	mov    eax,0x9998810b
  406f3d:	add    eax,0xf1c0b063
  406f42:	call   0xa2fe:0x6425e596
  406f49:	es repz xchg esp,eax
  406f4c:	hlt    
  406f4d:	and    al,0xd7
  406f4f:	xchg   ecx,eax
  406f50:	adc    ebx,DWORD PTR [ecx]
  406f52:	lods   eax,DWORD PTR ds:[esi]
  406f53:	dec    ebx
  406f54:	mov    ebx,0x4d9333e7
  406f59:	jge    0x406f6f
  406f5b:	test   al,0x91
  406f5d:	fdivr  st(6),st
  406f5f:	sub    al,0x5a
  406f61:	and    DWORD PTR [esi-0x49b2608c],ebp
  406f67:	iret   
  406f68:	mov    edi,0xe7e72799
  406f6d:	lea    esi,[ebx-0x75]
  406f70:	fstp   TBYTE PTR [edi]
  406f72:	loope  0x406fcc
  406f74:	int    0x58
  406f76:	mov    dh,0xba
  406f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f79:	loopne 0x406fbb
  406f7b:	out    dx,al
  406f7c:	pop    ecx
  406f7d:	fld    st(6)
  406f7f:	dec    eax
  406f80:	pop    edx
  406f81:	mov    esp,0xb909e263
  406f86:	add    ebp,DWORD PTR ds:0xce3b4f65
  406f8c:	dec    eax
  406f8d:	push   ds
  406f8e:	cmc    
  406f8f:	lds    eax,FWORD PTR [esp+eiz*8]
  406f92:	fstp   QWORD PTR [edi-0x7a5c2ce6]
  406f98:	mov    ds:0x94540869,eax
  406f9d:	adc    eax,0xfe2ee231
  406fa2:	pop    esp
  406fa3:	push   cs
  406fa4:	lods   al,BYTE PTR ds:[esi]
  406fa5:	add    eax,0x5c621103
  406faa:	imul   ebp,DWORD PTR [ebx-0x3a75063b],0xffffffa3
  406fb1:	mov    ecx,0xc41994bc
  406fb6:	inc    esp
  406fb7:	les    ecx,FWORD PTR [eax-0x24]
  406fba:	mov    ch,ah
  406fbc:	mov    dh,0x85
  406fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fbf:	popa   
  406fc0:	cld    
  406fc1:	mov    DWORD PTR [ebx+0x6832491],ebx
  406fc7:	sub    DWORD PTR [ecx],esp
  406fc9:	ror    BYTE PTR [ecx],cl
  406fcb:	sbb    ebx,edi
  406fcd:	test   al,0x40
  406fcf:	ret    0x7fc5
  406fd2:	dec    esp
  406fd3:	mov    ds:0xb750a017,al
  406fd8:	adc    DWORD PTR [ecx],ecx
  406fda:	lods   eax,DWORD PTR ds:[esi]
  406fdb:	fs mov esp,0xd6fedf64
  406fe1:	pop    esi
  406fe2:	test   eax,0x4d21c89e
  406fe7:	lods   eax,DWORD PTR ds:[esi]
  406fe8:	lods   eax,DWORD PTR ds:[esi]
  406fe9:	rcr    DWORD PTR [ebx],1
  406feb:	fnstenv [edi]
  406fed:	jae    0x406f90
  406fef:	cmp    BYTE PTR [edx-0x42aeab23],dh
  406ff5:	mov    esp,0xf6bd607f
  406ffa:	cmc    
  406ffb:	and    esp,DWORD PTR [edx-0x4cd40f28]
  407001:	jb     0x407057
  407003:	popa   
  407004:	dec    esp
  407005:	cmp    al,0x39
  407007:	jg     0x406ffb
  407009:	pop    esp
  40700a:	loope  0x40708a
  40700c:	pop    esp
  40700d:	(bad)  
  40700f:	or     eax,0x8600af49
  407014:	call   FWORD PTR ds:0xb59d14b1
  40701a:	(bad)  
  40701b:	loopne 0x406fd7
  40701d:	jne    0x406fa9
  40701f:	pushf  
  407020:	mov    ds:0xee7143a4,eax
  407025:	enter  0x56b6,0x4c
  407029:	sbb    al,BYTE PTR [edi+esi*8]
  40702c:	outs   dx,DWORD PTR ds:[esi]
  40702d:	jo     0x407011
  40702f:	retf   0xca4b
  407032:	test   DWORD PTR [esi-0x3d],edi
  407035:	add    eax,0x60fa99d0
  40703a:	(bad)  
  40703b:	rol    DWORD PTR [esi+0xc],1
  40703e:	xor    al,0x8
  407040:	scas   eax,DWORD PTR es:[edi]
  407041:	dec    eax
  407042:	cmp    eax,DWORD PTR [ecx-0x6c]
  407045:	dec    ecx
  407046:	gs retf 0xeb8a
  40704a:	pop    ss
  40704b:	fwait
  40704c:	xlat   BYTE PTR ds:[ebx]
  40704d:	and    ecx,ebp
  40704f:	mov    dl,0xfe
  407051:	js     0x4070bc
  407053:	adc    cl,ch
  407055:	xor    edx,ecx
  407057:	inc    edx
  407058:	mov    al,dh
  40705a:	idiv   BYTE PTR [edi+0x3e]
  40705d:	int    0x98
  40705f:	mov    cl,0x93
  407061:	clc    
  407062:	rcl    BYTE PTR ds:[ebx-0x59],1
  407066:	cs int 0xed
  407069:	pop    es
  40706a:	shl    DWORD PTR [edi+ecx*2-0x525a1783],cl
  407071:	sub    al,0x77
  407073:	mov    esi,esp
  407075:	popf   
  407076:	dec    ebx
  407077:	pop    ebp
  407078:	test   esp,0xac813cbd
  40707e:	cmp    esi,DWORD PTR [ecx+0x77]
  407081:	dec    esi
  407082:	sbb    al,0x84
  407084:	pushf  
  407085:	push   edi
  407086:	inc    ecx
  407087:	scas   eax,DWORD PTR es:[edi]
  407088:	fisttp QWORD PTR [eax+0x1849f94]
  40708e:	or     esp,DWORD PTR ds:0xac60254f
  407094:	lods   al,BYTE PTR ds:[esi]
  407095:	lods   eax,DWORD PTR ds:[esi]
  407096:	fst    QWORD PTR [ebp+0x72e2bd83]
  40709c:	aaa    
  40709d:	push   ss
  40709e:	sti    
  40709f:	and    DWORD PTR [edx-0x2f74ca52],esp
  4070a5:	mov    esp,0xe8628f59
  4070aa:	xcrypt-ctr (bad)
  4070ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ac:	pop    ebp
  4070ad:	jg     0x4070e7
  4070af:	out    0xcb,eax
  4070b1:	push   ebp
  4070b2:	adc    edi,edx
  4070b4:	pop    DWORD PTR [esi]
  4070b6:	cmc    
  4070b7:	push   ds
  4070b8:	(bad)  
  4070b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ba:	pop    esi
  4070bb:	add    ecx,DWORD PTR [esi]
  4070bd:	sbb    ah,BYTE PTR [edx-0x4e]
  4070c0:	push   ds
  4070c1:	out    0x5,al
  4070c3:	in     al,dx
  4070c4:	rcr    DWORD PTR [ebp-0x10],cl
  4070c7:	shr    DWORD PTR [eax+0x1835e35c],1
  4070cd:	xchg   esi,eax
  4070ce:	push   ebp
  4070cf:	lods   eax,DWORD PTR ds:[esi]
  4070d0:	cli    
  4070d1:	daa    
  4070d2:	repnz enter 0xa38e,0x90
  4070d7:	dec    ebp
  4070d8:	cmp    bl,al
  4070da:	or     eax,0x18dfc3ec
  4070df:	sub    eax,0x41ac649a
  4070e4:	add    eax,0xeaee07fa
  4070e9:	in     eax,0xe5
  4070eb:	fdiv   DWORD PTR [ecx-0x30d01b87]
  4070f1:	mov    dl,0xc6
  4070f3:	arpl   WORD PTR [edx+0x344b4d05],bp
  4070f9:	ins    DWORD PTR es:[edi],dx
  4070fa:	out    dx,eax
  4070fb:	mov    al,ds:0x824ac1ac
  407100:	fsub   st,st(5)
  407102:	mov    edx,0xe7c25e60
  407107:	mov    bh,0x32
  407109:	icebp  
  40710a:	sub    ecx,DWORD PTR ds:0x6aa838ba
  407110:	pop    edx
  407111:	and    DWORD PTR [eax-0x17],ebx
  407114:	push   ss
  407115:	shl    DWORD PTR [esi+esi*2-0x5f],1
  407119:	arpl   WORD PTR [edi-0x6d99d66c],bx
  40711f:	sbb    al,0xdc
  407121:	lahf   
  407122:	mov    ds,WORD PTR [ebp+0x61]
  407125:	push   edi
  407126:	clc    
  407127:	push   eax
  407128:	sbb    DWORD PTR [eax],0x836e5a7a
  40712e:	fdivr  DWORD PTR [ebx]
  407130:	push   es
  407131:	mov    ebp,0x7a57a3a1
  407136:	mov    ch,0xfb
  407138:	test   DWORD PTR [esi],edi
  40713a:	or     al,0x19
  40713c:	ret    0x7ef7
  40713f:	pop    ecx
  407140:	sbb    eax,DWORD PTR [esi+0x1a]
  407143:	scas   eax,DWORD PTR es:[edi]
  407144:	inc    esi
  407145:	adc    al,0xae
  407147:	test   al,0xd5
  407149:	daa    
  40714a:	lock cld 
  40714c:	mov    WORD PTR [esi+0x79],ss
  40714f:	fld    QWORD PTR [ebx-0x7a]
  407152:	lea    edx,[ebp+0x69]
  407155:	inc    ebp
  407156:	shl    ebx,0x78
  407159:	es sub al,0x95
  40715c:	jge    0x407163
  40715e:	cmp    eax,0xf7d0c21f
  407163:	fimul  WORD PTR [ebp+0x4c410004]
  407169:	int    0x69
  40716b:	ss pop edx
  40716d:	jmp    0x407148
  40716f:	dec    esi
  407170:	loope  0x407166
  407172:	xchg   ebx,eax
  407173:	xchg   esp,eax
  407174:	push   ebx
  407175:	test   al,0xf2
  407177:	or     al,0xe
  407179:	jne    0x407121
  40717b:	rcl    BYTE PTR [edx+0x65],0x37
  40717f:	(bad)  
  407180:	aam    0x9b
  407182:	sbb    BYTE PTR [edx-0x88ceb1e],bl
  407188:	sbb    BYTE PTR [eax+edi*2-0x63],al
  40718c:	shl    ebx,cl
  40718e:	shr    ecx,1
  407190:	or     edx,DWORD PTR [edi*2+0x744d42ce]
  407197:	js     0x40712d
  407199:	in     al,0x5c
  40719b:	inc    esp
  40719c:	mov    al,ds:0x14efc9b4
  4071a1:	ds loope 0x40719c
  4071a4:	(bad)  
  4071a6:	sbb    DWORD PTR [ebx-0x17b0552f],edi
  4071ac:	mov    edx,DWORD PTR [eax+0x52a4d314]
  4071b2:	rcr    edi,0xc0
  4071b5:	imul   ecx,esp,0x69b73c3b
  4071bb:	dec    ebp
  4071bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071bd:	add    bh,BYTE PTR [esi+0x66]
  4071c0:	lods   al,BYTE PTR ds:[esi]
  4071c1:	adc    ah,0x52
  4071c4:	or     ebx,DWORD PTR [esi-0x3e]
  4071c7:	scas   al,BYTE PTR es:[edi]
  4071c8:	inc    DWORD PTR [eax]
  4071ca:	push   ds
  4071cb:	loop   0x4071f3
  4071cd:	js     0x4071dc
  4071cf:	and    eax,0xaec46236
  4071d4:	out    0x18,eax
  4071d6:	mov    dl,0xc0
  4071d8:	sti    
  4071d9:	dec    edi
  4071da:	xchg   edi,eax
  4071db:	mov    ebp,0x5ea454c9
  4071e0:	inc    edi
  4071e1:	fiadd  DWORD PTR [eax+0x65920b5a]
  4071e7:	or     al,0x58
  4071e9:	mov    eax,0xf3e1855d
  4071ee:	ds call 0x62c41ded
  4071f4:	jge    0x4071a7
  4071f6:	and    eax,0x3de757cf
  4071fb:	add    BYTE PTR [edi-0x75c20583],ch
  407201:	pop    edi
  407202:	jge    0x4071c1
  407204:	sbb    ah,BYTE PTR [ebx+0x11]
  407207:	bound  esi,QWORD PTR [ecx+0x5e015457]
  40720d:	scas   eax,DWORD PTR es:[edi]
  40720e:	gs pop es
  407210:	pop    ss
  407211:	jp     0x407276
  407213:	pop    ebx
  407214:	aam    0x4
  407216:	cmp    BYTE PTR ds:[ebp-0x64],bl
  40721a:	mov    esi,0x64d578f8
  40721f:	and    ebx,ebx
  407221:	test   al,0x37
  407223:	daa    
  407224:	sbb    edx,DWORD PTR [edi-0x7c]
  407227:	aam    0x31
  407229:	mov    dh,0x4
  40722b:	in     al,dx
  40722c:	ins    BYTE PTR es:[edi],dx
  40722d:	cvtdq2ps xmm3,XMMWORD PTR [ebp-0x55f85844]
  407234:	daa    
  407235:	retf   
  407236:	mov    bh,0x74
  407238:	xchg   DWORD PTR [edx],esp
  40723a:	push   esi
  40723b:	mov    dl,ch
  40723d:	dec    eax
  40723e:	mov    bl,0xb3
  407240:	stc    
  407241:	inc    ebx
  407242:	mov    eax,ds:0x5f2a33b4
  407247:	add    eax,0x8d878098
  40724c:	xor    eax,0x7677869f
  407251:	inc    ecx
  407252:	lods   eax,DWORD PTR ds:[esi]
  407253:	add    esp,edx
  407255:	cmc    
  407256:	ins    BYTE PTR es:[edi],dx
  407257:	xchg   BYTE PTR [edi],dh
  407259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40725a:	xchg   edi,eax
  40725b:	loop   0x4072b7
  40725d:	dec    ebp
  40725e:	or     ecx,DWORD PTR [esp+ebp*8+0x74fee722]
  407265:	cld    
  407266:	push   ecx
  407267:	loope  0x4071ec
  407269:	lea    eax,[ecx+esi*2+0x1bcf7a21]
  407270:	and    eax,0xf9cdd322
  407275:	dec    ecx
  407276:	out    0xf1,al
  407278:	mov    ?,WORD PTR [ebx]
  40727a:	push   ecx
  40727b:	iret   
  40727c:	push   cs
  40727d:	mov    bl,0xef
  40727f:	int3   
  407280:	out    dx,al
  407281:	test   eax,0x5543c258
  407286:	mov    al,ds:0xd209fb08
  40728b:	xchg   esp,eax
  40728c:	icebp  
  40728d:	jp     0x4072c8
  40728f:	inc    edx
  407290:	sti    
  407291:	xor    BYTE PTR [esi-0x5],dl
  407294:	cmc    
  407295:	dec    ebp
  407296:	sbb    esp,DWORD PTR [ecx-0x7eb7fe1c]
  40729c:	or     eax,DWORD PTR ds:0x7045c73f
  4072a2:	call   0xd47b:0x2d7e937c
  4072a9:	cs jp  0x4072af
  4072ac:	pop    ecx
  4072ad:	push   esi
  4072ae:	xor    ebp,edx
  4072b0:	mov    ch,0x1b
  4072b2:	push   eax
  4072b3:	inc    esi
  4072b4:	mov    ds:0x20016660,al
  4072b9:	lea    esp,[ebx]
  4072bb:	comiss xmm6,xmm4
  4072be:	push   edi
  4072bf:	inc    eax
  4072c0:	imul   esi,DWORD PTR ds:0xf4c2c39,0xffffffbc
  4072c7:	cmp    DWORD PTR [esi-0x25],esp
  4072ca:	jmp    0x2a4a:0x68111631
  4072d1:	xor    eax,0x73c5cf7e
  4072d6:	inc    ebp
  4072d7:	xchg   ecx,eax
  4072d8:	xchg   DWORD PTR [edx+0x3663012],ecx
  4072de:	mov    ds:0xea398424,al
  4072e3:	cmp    ax,WORD PTR [edi-0x7a331b12]
  4072ea:	add    BYTE PTR [edi+0x45d61349],ah
  4072f0:	xchg   edx,eax
  4072f1:	jae    0x4072a6
  4072f3:	pop    esp
  4072f4:	jp     0x407312
  4072f6:	dec    edi
  4072f7:	test   eax,0xa399b57e
  4072fc:	int3   
  4072fd:	jp     0x4072a9
  4072ff:	jg     0x40733b
  407301:	outs   dx,DWORD PTR ds:[esi]
  407302:	loope  0x407285
  407304:	push   ebp
  407305:	retf   0xaa42
  407308:	jl     0x40729d
  40730a:	xchg   edx,eax
  40730b:	rol    BYTE PTR [esi],cl
  40730d:	jl     0x407316
  40730f:	push   esp
  407310:	and    edi,DWORD PTR [edi]
  407312:	xor    BYTE PTR [ebx-0x2620fcb],ch
  407318:	inc    ebx
  407319:	cmp    DWORD PTR [ebx],ecx
  40731b:	or     edx,DWORD PTR [edx-0x4e]
  40731e:	add    al,0x6a
  407320:	ins    DWORD PTR es:[edi],dx
  407321:	cmp    BYTE PTR [eax],ch
  407323:	dec    ecx
  407324:	fsubr  DWORD PTR [eax+0x6de91cae]
  40732a:	mov    ?,WORD PTR [esi-0x2f]
  40732d:	push   0x1f
  40732f:	imul   edx,DWORD PTR [ecx-0x15ecd46a],0xe062c38d
  407339:	lds    edi,FWORD PTR [ecx]
  40733b:	je     0x407359
  40733d:	ins    DWORD PTR es:[edi],dx
  40733e:	fcom   DWORD PTR [edi+0x63]
  407341:	pop    edx
  407342:	add    al,0x73
  407344:	and    eax,0x6015f795
  407349:	dec    esi
  40734a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40734b:	inc    esp
  40734c:	stos   BYTE PTR es:[edi],al
  40734d:	jle    0x4072df
  40734f:	pusha  
  407350:	add    BYTE PTR [esi],0x6d
  407353:	fidiv  WORD PTR [esi]
  407355:	clc    
  407356:	jnp    0x407373
  407358:	sub    BYTE PTR [edi+0x45],dl
  40735b:	clc    
  40735c:	dec    eax
  40735d:	icebp  
  40735e:	inc    esp
  40735f:	jl     0x407353
  407361:	cmp    BYTE PTR [ecx-0x42],cl
  407364:	lea    esi,[edi-0x7e]
  407367:	and    ebx,edi
  407369:	push   ecx
  40736a:	shr    ah,1
  40736c:	inc    edi
  40736d:	into   
  40736e:	fiadd  WORD PTR [ebp+edi*8+0x45ec15e3]
  407375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407376:	call   0xb48b5fe3
  40737b:	dec    esp
  40737c:	jmp    0x4073a4
  40737e:	pusha  
  40737f:	dec    ecx
  407380:	push   es
  407381:	iret   
  407382:	cmp    DWORD PTR [ebx],esi
  407384:	cmp    al,0x74
  407386:	xor    al,0xc3
  407388:	inc    ebx
  407389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40738a:	stos   DWORD PTR es:[edi],eax
  40738b:	sahf   
  40738c:	ret    
  40738d:	dec    ecx
  40738e:	bound  esi,QWORD PTR [ebx+ecx*8]
  407391:	push   edi
  407392:	pop    edx
  407393:	(bad)  
  407394:	add    DWORD PTR [edx+0x57551106],edx
  40739a:	repz jno 0x4073a8
  40739d:	cld    
  40739e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40739f:	cmp    BYTE PTR [ebx],0xe4
  4073a2:	xchg   ebx,eax
  4073a3:	mov    dh,0x93
  4073a5:	pop    ecx
  4073a6:	xor    DWORD PTR [ebx+edx*4-0x72],eax
  4073aa:	das    
  4073ab:	pop    ds
  4073ac:	xchg   ecx,eax
  4073ad:	sbb    eax,0xb34258dc
  4073b2:	cmp    al,BYTE PTR [edi-0x66]
  4073b5:	mov    dh,BYTE PTR [ecx]
  4073b7:	(bad)  
  4073b8:	fst    DWORD PTR [ebx]
  4073ba:	inc    ebx
  4073bb:	fcmovbe st,st(7)
  4073bd:	jae    0x407374
  4073bf:	es repz cdq 
  4073c2:	cs and eax,0x26df24c7
  4073c8:	adc    eax,0x13222e2b
  4073cd:	sbb    edi,DWORD PTR [edi*2+0x325f38b7]
  4073d4:	add    eax,0xf62ab54f
  4073d9:	dec    esp
  4073da:	or     BYTE PTR [esi+0x2cf5f1d5],0x49
  4073e1:	push   0x37
  4073e3:	inc    ecx
  4073e4:	retf   0xd6c5
  4073e7:	sbb    al,bl
  4073e9:	in     al,dx
  4073ea:	sti    
  4073eb:	ror    DWORD PTR ds:[ebp-0x3914342],cl
  4073f2:	adc    al,0x1f
  4073f4:	cmp    ebp,DWORD PTR [eax+esi*8]
  4073f7:	inc    esi
  4073f8:	rcl    edi,cl
  4073fa:	pop    edi
  4073fb:	out    0x47,eax
  4073fd:	out    dx,al
  4073fe:	push   0xffffff8e
  407400:	lods   al,BYTE PTR ds:[esi]
  407401:	mov    ebp,0xa57d2165
  407406:	stc    
  407407:	dec    eax
  407408:	hlt    
  407409:	out    0x86,al
  40740b:	sahf   
  40740c:	rol    bh,cl
  40740e:	xor    al,0x51
  407410:	mov    ?,esp
  407412:	fsubr  DWORD PTR [eax+0x17]
  407415:	out    dx,al
  407416:	inc    edx
  407417:	out    0x73,al
  407419:	add    ch,ah
  40741b:	in     al,0x9
  40741d:	mov    eax,0xaa49f10d
  407422:	scas   eax,DWORD PTR es:[edi]
  407423:	les    eax,FWORD PTR [eax]
  407425:	sbb    DWORD PTR [ebx-0x6e],eax
  407428:	lods   al,BYTE PTR ds:[esi]
  407429:	popf   
  40742a:	(bad)  
  40742c:	sub    DWORD PTR [esi],esi
  40742e:	inc    edi
  40742f:	out    dx,eax
  407430:	mov    BYTE PTR [eax+0x59],ch
  407433:	sub    edx,DWORD PTR [esi-0x5356b38b]
  407439:	lea    edi,[esi+ebx*1-0x7838917b]
  407440:	fwait
  407441:	sbb    DWORD PTR [ebp+0x36],edi
  407444:	dec    edi
  407445:	mov    cl,0xcc
  407447:	jb     0x4074b8
  407449:	out    0x57,eax
  40744b:	rol    BYTE PTR [edi+0x2f802d6f],cl
  407451:	(bad)  
  407452:	std    
  407453:	push   ebp
  407454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407455:	jo     0x4074b3
  407457:	into   
  407458:	sub    al,0x12
  40745a:	add    BYTE PTR [edi-0x78],dh
  40745d:	std    
  40745e:	aas    
  40745f:	fisub  WORD PTR [ebx]
  407461:	sti    
  407462:	cli    
  407463:	mov    ch,0xc0
  407465:	mov    bl,0xb1
  407467:	cwde   
  407468:	xlat   BYTE PTR ds:[ebx]
  407469:	adc    eax,0xe3d745da
  40746e:	push   0x7b
  407470:	bound  ecx,QWORD PTR [ebx-0x78]
  407473:	retf   0xa70b
  407476:	xchg   esp,eax
  407477:	dec    ebp
  407478:	inc    ebp
  407479:	xchg   DWORD PTR [eax],esp
  40747b:	push   ss
  40747c:	out    0x2b,eax
  40747e:	cmp    BYTE PTR [ebp+esi*1-0x719baf88],al
  407485:	das    
  407486:	call   0x89b8:0x96143eb1
  40748d:	addr16 xchg ebx,eax
  40748f:	add    eax,esi
  407491:	fnsave [edx-0x29397c25]
  407497:	push   ds
  407498:	(bad)  
  407499:	and    BYTE PTR [ebp+0x76],dl
  40749c:	add    bh,BYTE PTR [edx-0x62f0fd34]
  4074a2:	seta   BYTE PTR [eax-0xf]
  4074a6:	jge    0x40743c
  4074a8:	in     al,0x9
  4074aa:	mov    DWORD PTR [esi+0x790911bc],esp
  4074b0:	out    dx,al
  4074b1:	js     0x407507
  4074b3:	fninit 
  4074b5:	loopne 0x4074e0
  4074b7:	fnstcw WORD PTR [esi+0x29]
  4074ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074bb:	push   eax
  4074bc:	sbb    dh,BYTE PTR [edx-0x73]
  4074bf:	pop    esi
  4074c0:	or     dh,BYTE PTR [esi-0x80]
  4074c3:	(bad)  
  4074c5:	fadd   QWORD PTR [esi+0x7d]
  4074c8:	mov    esi,0x515d41e3
  4074cd:	or     esp,DWORD PTR [ecx+0xa4d49a7]
  4074d3:	jl     0x407537
  4074d5:	(bad)  
  4074d7:	push   ds
  4074d8:	sub    edx,DWORD PTR [ebp+0x233f8429]
  4074de:	div    al
  4074e0:	dec    esp
  4074e1:	mov    eax,0x19eab1e6
  4074e6:	dec    ebp
  4074e7:	add    DWORD PTR [edi+edi*2-0x58],ecx
  4074eb:	push   eax
  4074ec:	(bad)  
  4074ed:	cs leave 
  4074ef:	xor    edi,DWORD PTR [edi]
  4074f1:	push   0x2b
  4074f3:	outs   dx,BYTE PTR ds:[esi]
  4074f4:	cli    
  4074f5:	out    dx,al
  4074f6:	ds push edi
  4074f8:	xchg   DWORD PTR [eax+0x57],edx
  4074fb:	shl    BYTE PTR es:[ecx+0x9dddcb1],cl
  407502:	inc    ebx
  407503:	std    
  407504:	test   ebp,ebx
  407506:	fwait
  407507:	mov    edx,0x62c8f034
  40750c:	mov    edi,0x6a2734cf
  407511:	iret   
  407512:	cmc    
  407513:	icebp  
  407514:	loop   0x407540
  407516:	push   ebp
  407517:	inc    esi
  407518:	clc    
  407519:	pop    ebp
  40751a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751b:	dec    ecx
  40751c:	and    eax,0x2789ad05
  407521:	(bad)  
  407522:	fdivr  QWORD PTR [eax-0x1d]
  407525:	and    al,0xf4
  407527:	std    
  407528:	ins    DWORD PTR es:[edi],dx
  407529:	or     BYTE PTR [edi+edi*8],0xc7
  40752d:	cmc    
  40752e:	jnp    0x407576
  407530:	pushf  
  407531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407532:	inc    edi
  407533:	push   eax
  407534:	test   al,0x9b
  407536:	and    al,0x82
  407538:	pop    esi
  407539:	xor    al,0xde
  40753b:	mov    bl,0x63
  40753d:	aaa    
  40753e:	fisub  WORD PTR [esi-0xa]
  407541:	mov    edx,0xcad92682
  407546:	lock xchg edi,eax
  407548:	sbb    eax,0x1d79368b
  40754d:	shl    BYTE PTR [eax+0xe429af3],0x69
  407554:	push   ebx
  407555:	pop    esp
  407556:	pop    es
  407557:	(bad)  [ebp-0x23]
  40755a:	push   cs
  40755b:	je     0x407533
  40755d:	mov    ax,ds:0x5c4e123
  407563:	(bad)  
  407564:	jle    0x4075d4
  407566:	push   ecx
  407567:	sbb    eax,DWORD PTR [ecx+eiz*4]
  40756a:	call   0xba1d6e54
  40756f:	je     0x407576
  407571:	xchg   BYTE PTR ds:0x65ec89ca,bl
  407577:	aas    
  407578:	xor    eax,DWORD PTR [edi]
  40757a:	mov    esi,0x25b042f3
  40757f:	cmp    eax,DWORD PTR [esi+0x66]
  407582:	sahf   
  407583:	shr    BYTE PTR [esi-0x64],cl
  407586:	test   DWORD PTR [ecx+0x5f],ebx
  407589:	xlat   BYTE PTR ds:[ebx]
  40758a:	push   ss
  40758b:	sbb    al,0xae
  40758d:	(bad)  
  40758e:	pop    eax
  40758f:	ja     0x40759e
  407591:	cmc    
  407592:	(bad)  
  407594:	fisubr DWORD PTR [edx]
  407596:	stos   DWORD PTR es:[edi],eax
  407597:	mov    edx,0xf18d3b67
  40759c:	iret   
  40759d:	sti    
  40759e:	push   esp
  40759f:	xor    edi,DWORD PTR [edi+ecx*1]
  4075a2:	and    DWORD PTR ds:0x65cc0a9d,eax
  4075a8:	cmp    eax,0x57a1e48a
  4075ad:	inc    eax
  4075ae:	push   es
  4075af:	pushf  
  4075b0:	mov    ebp,0xc627fb3f
  4075b5:	xchg   BYTE PTR [eax+0x7bc73235],dh
  4075bb:	jmp    0x98ddbb3
  4075c0:	dec    esp
  4075c1:	fwait
  4075c2:	retf   0x29df
  4075c5:	jbe    0x407607
  4075c7:	jmp    0xe0ce:0x9f0097b9
  4075ce:	xor    ch,bl
  4075d0:	xor    bl,BYTE PTR [bx+si+0x83]
  4075d5:	imul   edx,DWORD PTR [edi-0x4d],0xffffffcd
  4075d9:	sub    cl,ch
  4075db:	(bad)
  4075de:	push   eax
  4075df:	leave  
  4075e0:	add    dh,BYTE PTR [edx+0x5472fa41]
  4075e6:	aas    
  4075e7:	add    dh,BYTE PTR [edi]
  4075e9:	push   ecx
  4075ea:	xchg   BYTE PTR [eax],dh
  4075ec:	fisttp QWORD PTR [ebp-0x4830914]
  4075f2:	fwait
  4075f3:	mov    al,0x74
  4075f5:	and    eax,0xa0a3f92c
  4075fa:	adc    ch,ah
  4075fc:	add    bx,WORD PTR ds:0x97b91713
  407603:	inc    ebp
  407604:	cmp    eax,0x3e937c1c
  407609:	adc    BYTE PTR [edi-0x65],dh
  40760c:	push   0xb1775cd0
  407611:	in     eax,dx
  407612:	mov    ah,0x2d
  407614:	push   0x31
  407616:	adc    ch,BYTE PTR [eax-0x8a4cec0]
  40761c:	or     edi,esi
  40761e:	jp     0x407699
  407620:	(bad)  
  407621:	fsubr  QWORD PTR [edi+0x2d534da]
  407627:	lock rcr bl,1
  40762a:	into   
  40762b:	mov    BYTE PTR [ebx+0x39],ah
  40762e:	inc    ebx
  40762f:	push   esp
  407630:	cwde   
  407631:	mov    eax,0x7a048305
  407636:	mov    WORD PTR [edx+0x589bf90a],cs
  40763c:	mov    BYTE PTR [ecx+eiz*4+0x2],ah
  407640:	icebp  
  407641:	mov    esp,0x22d55e4
  407646:	mov    dl,0x8c
  407648:	addr16 push esp
  40764a:	fcom   QWORD PTR [ecx]
  40764c:	mov    BYTE PTR [edx-0x7a3e71b3],bh
  407652:	enter  0xf347,0xd2
  407656:	inc    edi
  407657:	fisttp DWORD PTR [edx+edi*8+0x204d7512]
  40765e:	mov    BYTE PTR [esp+ebp*8-0x6d],bl
  407662:	or     BYTE PTR [bx+0x6628],ch
  407667:	xchg   BYTE PTR [edx+0x5e1ebfbb],ah
  40766d:	lods   al,BYTE PTR ds:[esi]
  40766e:	mov    ecx,0x575078d1
  407673:	outs   dx,DWORD PTR ds:[esi]
  407674:	or     esp,ebx
  407676:	cld    
  407677:	sti    
  407678:	test   eax,0xc3c1ae89
  40767d:	fcmovnbe st,st(3)
  40767f:	adc    al,0x10
  407681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407682:	dec    eax
  407683:	lods   eax,DWORD PTR ds:[esi]
  407684:	mov    gs,eax
  407686:	mov    WORD PTR [edx],?
  407688:	ins    DWORD PTR es:[edi],dx
  407689:	leave  
  40768a:	jns    0x40762f
  40768c:	xchg   edx,eax
  40768d:	add    BYTE PTR ds:0xbe0bf2ba,dl
  407693:	out    0xee,eax
  407695:	in     al,dx
  407696:	(bad)  
  407697:	cmp    esi,ebp
  407699:	push   0x6b
  40769b:	push   es
  40769c:	fs retf 
  40769e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40769f:	mov    bh,0xd7
  4076a1:	xchg   dl,ch
  4076a3:	jo     0x407723
  4076a5:	sar    ebx,0x84
  4076a8:	jmp    0x4076bc
  4076aa:	adc    DWORD PTR [edi-0x5a],0xffffffde
  4076ae:	pop    edx
  4076af:	adc    dh,ah
  4076b1:	fsubr  DWORD PTR [edi+eax*4+0x3e5d653f]
  4076b8:	gs aas 
  4076ba:	pop    es
  4076bb:	push   ecx
  4076bc:	and    dh,bh
  4076be:	rcr    BYTE PTR [esi+0x7e],1
  4076c1:	sbb    ebp,esp
  4076c3:	inc    edi
  4076c4:	nop
  4076c5:	pop    ds
  4076c6:	adc    al,0x62
  4076c8:	mov    eax,0xbbd85830
  4076cd:	push   ebp
  4076ce:	jle    0x407696
  4076d0:	xchg   edx,eax
  4076d1:	aam    0x49
  4076d3:	adc    esi,eax
  4076d5:	jo     0x40768e
  4076d7:	retf   
  4076d8:	inc    esi
  4076d9:	(bad)  
  4076da:	jns    0x407735
  4076dc:	mov    bl,0x95
  4076de:	mov    edi,0x7566d27b
  4076e3:	out    dx,al
  4076e4:	add    esp,DWORD PTR [edi-0x74]
  4076e7:	pop    edx
  4076e8:	sahf   
  4076e9:	das    
  4076ea:	xchg   edi,eax
  4076eb:	scas   al,BYTE PTR es:[edi]
  4076ec:	test   BYTE PTR [ebp+0x14],dl
  4076ef:	repnz (bad) 
  4076f1:	sub    bl,BYTE PTR [edi-0x5]
  4076f4:	shr    BYTE PTR [eax],cl
  4076f6:	imul   eax,DWORD PTR [eax+esi*8],0xfffffffb
  4076fa:	and    ch,BYTE PTR [esi+0x31]
  4076fd:	adc    al,0xaf
  4076ff:	dec    ecx
  407700:	repz jno 0x40771e
  407703:	and    BYTE PTR [esi-0xe34f072],cl
  407709:	pop    ebx
  40770a:	mov    cl,BYTE PTR [ebx+0x6d]
  40770d:	mov    ecx,eax
  40770f:	add    edi,edi
  407711:	fisub  DWORD PTR [edi-0x7e705096]
  407717:	mov    ebp,0xe65b9463
  40771c:	sub    edi,DWORD PTR [ecx+ebp*4]
  40771f:	shl    ebx,1
  407721:	jno    0x407770
  407723:	mov    BYTE PTR [edi+0x7e0142a4],al
  407729:	push   0x442e28f2
  40772e:	push   ecx
  40772f:	xchg   ebp,eax
  407730:	and    ch,BYTE PTR [esi-0x41]
  407733:	push   0xc9c9533e
  407738:	ss sub bh,0x38
  40773c:	or     eax,0xcb6935c2
  407741:	sbb    ch,al
  407743:	dec    ecx
  407744:	mov    ch,0x6b
  407746:	out    dx,eax
  407747:	jne    0x407758
  407749:	inc    edx
  40774a:	lock jg 0x4076d2
  40774d:	scas   eax,DWORD PTR es:[edi]
  40774e:	not    BYTE PTR [edx+0x21218d42]
  407754:	mov    edi,0xf61a8fe4
  407759:	push   0x8
  40775b:	pusha  
  40775c:	jp     0x407799
  40775e:	mov    edx,0x2151f6ea
  407763:	sub    BYTE PTR [eax],ah
  407765:	leave  
  407766:	(bad)  
  407767:	test   al,0x92
  407769:	push   ecx
  40776a:	rol    BYTE PTR [edi],cl
  40776c:	and    eax,0xb7ceb4e4
  407771:	mov    BYTE PTR [eax+0x71],dl
  407774:	cs ja  0x40779a
  407777:	or     eax,DWORD PTR [esi]
  407779:	mov    ebx,0x678821ee
  40777e:	bound  eax,QWORD PTR [ebx+0x7d]
  407781:	test   DWORD PTR [ecx-0x50],ebx
  407784:	mov    ebx,0xbde8771c
  407789:	mov    ebp,0x2da54b92
  40778e:	adc    ebp,esp
  407790:	mov    ch,0x9a
  407792:	add    eax,0xb51359bf
  407797:	mov    BYTE PTR [ecx+0x33],0xc6
  40779b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40779c:	cld    
  40779d:	popf   
  40779e:	cli    
  40779f:	in     al,dx
  4077a0:	idiv   BYTE PTR [ebx+0x4bfda351]
  4077a6:	pop    edx
  4077a7:	aam    0xea
  4077a9:	(bad)  
  4077aa:	jbe    0x4077e2
  4077ac:	adc    DWORD PTR [edi+0x5bb9072c],edi
  4077b2:	add    al,0x47
  4077b4:	dec    edi
  4077b5:	add    eax,0x1bf0276b
  4077ba:	fst    QWORD PTR [ebx-0x14dab64d]
  4077c0:	popf   
  4077c1:	ss inc ebp
  4077c3:	jns    0x407773
  4077c5:	out    0xf0,al
  4077c7:	lahf   
  4077c8:	neg    BYTE PTR [ebx+0xa43c8de]
  4077ce:	jmp    0x40775b
  4077d0:	mov    ss,WORD PTR [ecx]
  4077d2:	into   
  4077d3:	aas    
  4077d4:	or     ah,0x12
  4077d7:	adc    ecx,eax
  4077d9:	ret    
  4077da:	popa   
  4077db:	std    
  4077dc:	call   0xf7fe:0xea61a47e
  4077e3:	and    dl,BYTE PTR [ebx]
  4077e5:	daa    
  4077e6:	sub    ebp,esi
  4077e8:	fidiv  WORD PTR cs:[edx-0xe]
  4077ec:	inc    eax
  4077ed:	sbb    eax,0xf87b8880
  4077f2:	mov    DWORD PTR [esi+0x3ad70527],esp
  4077f8:	jnp    0x407800
  4077fa:	mov    ch,0x37
  4077fc:	push   cs
  4077fd:	dec    edx
  4077fe:	cmp    al,0x37
  407800:	push   esp
  407801:	retf   0x886e
  407804:	outs   dx,BYTE PTR ds:[esi]
  407805:	adc    esi,edi
  407807:	pop    esp
  407808:	mov    ds:0x692699d3,eax
  40780d:	hlt    
  40780e:	pop    esi
  40780f:	and    bh,BYTE PTR [edx+eax*2-0x1a]
  407813:	mov    al,0x1c
  407815:	inc    ecx
  407816:	(bad)  
  407817:	inc    BYTE PTR [edi+ebp*1+0x58]
  40781b:	fdiv   st,st(4)
  40781d:	adc    al,0x54
  40781f:	inc    esp
  407820:	in     eax,dx
  407821:	sub    DWORD PTR [esi],esp
  407823:	fld    QWORD PTR [edi+0x11f8e482]
  407829:	ss xchg ebp,eax
  40782b:	lods   al,BYTE PTR ds:[esi]
  40782c:	mov    cl,0x92
  40782e:	mov    fs,WORD PTR [edi-0x54]
  407831:	and    BYTE PTR [esp+ebp*8-0x59fb9bf1],dl
  407838:	mov    edi,0xb223e014
  40783d:	in     eax,0x83
  40783f:	mov    dl,0xee
  407841:	dec    edi
  407842:	mov    ebx,0x1a78dcb7
  407847:	or     al,0x92
  407849:	xlat   BYTE PTR ds:[ebx]
  40784a:	cmp    ebp,DWORD PTR [edx+0x6]
  40784d:	mov    edi,0x3272e63c
  407852:	popa   
  407853:	mov    al,0x71
  407855:	(bad)  
  407856:	shl    ebp,1
  407858:	cld    
  407859:	jnp    0x4077dc
  40785b:	mov    ch,0x83
  40785d:	(bad)  
  40785e:	lock xchg esi,eax
  407860:	ror    DWORD PTR [eax],1
  407862:	(bad)  
  407863:	retf   
  407864:	bound  edi,QWORD PTR [edi+esi*1-0x6b]
  407868:	pop    ds
  407869:	in     eax,0x20
  40786b:	in     eax,0xf8
  40786d:	xchg   edx,eax
  40786e:	bnd jno 0x407867
  407871:	loope  0x4078f0
  407873:	inc    esi
  407874:	stos   BYTE PTR es:[edi],al
  407875:	xchg   ecx,eax
  407877:	jbe    0x407816
  407879:	call   0xce40442e
  40787e:	retf   0xfb32
  407881:	stos   BYTE PTR es:[edi],al
  407882:	push   edi
  407883:	inc    edx
  407884:	repnz pop ebp
  407886:	sbb    esp,DWORD PTR [ecx-0x63]
  407889:	ins    BYTE PTR es:[edi],dx
  40788a:	jo     0x407904
  40788c:	jge    0x4078f9
  40788e:	test   al,0xed
  407890:	pop    ebp
  407891:	mov    DWORD PTR [ebx-0x56d590cf],0xb1b5f5c
  40789b:	jno    0x40790b
  40789d:	sbb    al,0x63
  40789f:	jmp    0x4078f0
  4078a1:	or     ah,BYTE PTR [ebp+0x36]
  4078a4:	mov    ah,0x20
  4078a6:	lds    ebp,FWORD PTR [eax]
  4078a8:	mov    al,ds:0xd3a6de1a
  4078ad:	sub    BYTE PTR [ecx+0x399ab725],cl
  4078b3:	inc    esi
  4078b4:	arpl   bp,dx
  4078b6:	pusha  
  4078b7:	xchg   esi,eax
  4078b8:	enter  0x8d95,0xef
  4078bc:	cmp    ch,BYTE PTR [esi-0x2d]
  4078bf:	loope  0x4078c3
  4078c1:	imul   esp,DWORD PTR [edx-0x2b52bd59],0x9ae5ded7
  4078cb:	sar    BYTE PTR [ebx-0x55],cl
  4078ce:	dec    edx
  4078cf:	mov    al,ds:0xf8457d36
  4078d4:	xchg   ecx,eax
  4078d5:	add    al,ch
  4078d7:	int    0x32
  4078d9:	adc    ah,BYTE PTR [eax]
  4078db:	sub    al,0xa1
  4078dd:	aam    0x7a
  4078df:	out    dx,al
  4078e0:	dec    eax
  4078e1:	dec    eax
  4078e2:	in     eax,0x24
  4078e4:	and    eax,DWORD PTR [ebx-0x5a]
  4078e7:	sub    DWORD PTR [ecx],0xa
  4078ea:	mov    ebx,ds
  4078ec:	push   ss
  4078ed:	(bad)  
  4078ee:	lea    edx,[ebp+0x6eedaf7f]
  4078f4:	pop    edi
  4078f5:	imul   BYTE PTR [esi-0x29]
  4078f8:	cmp    edx,DWORD PTR [edi]
  4078fa:	mov    bh,BYTE PTR [edx]
  4078fc:	inc    eax
  4078fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078fe:	add    DWORD PTR [ebx+0x23da7c84],0xcb4c48dc
  407908:	outs   dx,DWORD PTR ds:[esi]
  407909:	in     eax,dx
  40790a:	lods   eax,DWORD PTR ds:[esi]
  40790b:	jo     0x4078b2
  40790d:	pop    ebx
  40790e:	add    DWORD PTR [esp+esi*4+0x75fe6f17],edi
  407915:	adc    al,0x7b
  407917:	dec    ecx
  407918:	rcr    BYTE PTR [esi-0x43],0x2
  40791c:	les    ecx,FWORD PTR [ebp-0x5e]
  40791f:	ja     0x40794f
  407921:	push   ebx
  407922:	dec    ebp
  407923:	ja     0x4078f3
  407925:	mov    dl,0x6d
  407927:	pop    ss
  407928:	pop    ss
  407929:	fwait
  40792a:	pop    eax
  40792b:	mov    dh,0xd1
  40792d:	jne    0x407992
  40792f:	pop    eax
  407930:	and    esp,DWORD PTR [ebx+eiz*2-0x2e]
  407934:	sbb    eax,0xf89a8295
  407939:	(bad)  
  40793a:	imul   BYTE PTR ds:0x9e193ffe
  407940:	push   edi
  407941:	push   ebx
  407942:	mov    esi,0x3e55d61b
  407947:	lahf   
  407948:	adc    edx,edi
  40794a:	pop    esp
  40794b:	mov    esp,0x59cd0db8
  407950:	loopne 0x407974
  407952:	jp     0x4078f5
  407954:	mov    edi,0x853e6f36
  407959:	jns    0x407952
  40795b:	pop    ebx
  40795c:	or     eax,0xb07245b7
  407961:	in     eax,0xe3
  407963:	mov    bh,0x7a
  407965:	lahf   
  407966:	daa    
  407967:	in     al,0xbf
  407969:	cdq    
  40796a:	adc    al,0x22
  40796c:	outs   dx,DWORD PTR ds:[esi]
  40796d:	inc    edx
  40796e:	or     ah,BYTE PTR [eax+0x60]
  407971:	jle    0x407910
  407973:	cmp    al,0xeb
  407975:	pusha  
  407976:	and    DWORD PTR [ebx-0x27],0x1c779137
  40797d:	retf   
  40797e:	enter  0x520e,0xae
  407982:	aas    
  407983:	loope  0x40798c
  407985:	ret    0x1cc3
  407988:	jg     0x40790f
  40798a:	fiadd  DWORD PTR [ebx+0x11]
  40798d:	and    bl,dh
  40798f:	(bad)  
  407990:	int    0xdb
  407992:	adc    DWORD PTR [ebx],edi
  407994:	xchg   BYTE PTR [esp+ecx*2+0x71bc78b5],bh
  40799b:	push   esi
  40799c:	adc    al,0x22
  40799e:	stos   BYTE PTR es:[edi],al
  40799f:	xchg   esi,eax
  4079a0:	lock dec ecx
  4079a2:	cld    
  4079a3:	add    al,0x2a
  4079a5:	mov    esi,0xd679c15b
  4079aa:	mov    al,ds:0x4c6979df
  4079af:	dec    esp
  4079b0:	jo     0x407996
  4079b2:	and    BYTE PTR [ebx-0x751cdd84],dl
  4079b8:	call   0xb58ea81e
  4079bd:	stos   DWORD PTR es:[edi],eax
  4079be:	into   
  4079bf:	sub    dh,al
  4079c1:	add    eax,ecx
  4079c3:	shl    DWORD PTR [edi+edx*1],1
  4079c6:	sar    DWORD PTR [edx],0xf4
  4079c9:	push   ebp
  4079ca:	hlt    
  4079cb:	push   cs
  4079cc:	fidiv  DWORD PTR [ecx+0x6f]
  4079cf:	ret    0xa854
  4079d2:	mov    eax,ds:0xf73a04bf
  4079d7:	mov    edx,0xe863b909
  4079dc:	cld    
  4079dd:	test   BYTE PTR [eax-0x2cd46a1d],cl
  4079e3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4079e5:	loopne 0x407967
  4079e7:	mov    ch,0x28
  4079e9:	and    eax,0x99fec9c1
  4079ee:	cli    
  4079ef:	or     eax,0x41388f86
  4079f4:	rcr    BYTE PTR [esi],1
  4079f6:	dec    DWORD PTR [ebx]
  4079f8:	retf   0x262
  4079fb:	(bad)  
  4079fc:	cli    
  4079fd:	popa   
  4079fe:	cmp    eax,0x601cb1ad
  407a03:	cmp    cl,BYTE PTR [ecx-0x7744a95b]
  407a09:	add    DWORD PTR [ecx],ebx
  407a0b:	cld    
  407a0c:	mov    edi,0xb2da5afe
  407a11:	or     bh,BYTE PTR [ebp-0x64]
  407a14:	push   cs
  407a15:	or     BYTE PTR [edx+eax*8],bl
  407a18:	dec    edx
  407a19:	and    al,BYTE PTR [edi-0x7]
  407a1c:	js     0x4079af
  407a1e:	or     al,0xc7
  407a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a21:	fcom   st(4)
  407a23:	pusha  
  407a24:	mov    dl,0xfd
  407a26:	leave  
  407a27:	loope  0x4079d7
  407a29:	icebp  
  407a2a:	repz xchg esp,eax
  407a2c:	(bad)  
  407a2e:	cs int 0x45
  407a31:	in     eax,dx
  407a32:	gs mov ?,esp
  407a35:	ret    
  407a36:	push   cs
  407a37:	cld    
  407a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a39:	in     eax,0xe1
  407a3b:	and    DWORD PTR [ebx+0x2f],0xffffff88
  407a3f:	ss repnz test eax,0x5eaf1719
  407a46:	xor    edi,0x16
  407a49:	das    
  407a4a:	retf   
  407a4b:	xor    esp,ebx
  407a4d:	test   BYTE PTR es:[edx-0x3f],dl
  407a51:	and    al,0x1
  407a53:	push   ecx
  407a54:	fist   DWORD PTR [edx]
  407a56:	xchg   ebp,eax
  407a57:	retf   0x8a0
  407a5a:	shl    DWORD PTR [edx+edi*1],cl
  407a5d:	rcr    DWORD PTR [edi+0x72],0xbf
  407a61:	or     DWORD PTR [eax-0x58],ecx
  407a64:	jmp    0x407a06
  407a66:	fs in  al,dx
  407a68:	xchg   edi,eax
  407a69:	push   0x56
  407a6b:	js     0x407a4f
  407a6d:	in     eax,0x59
  407a6f:	xor    al,0x8e
  407a71:	xchg   BYTE PTR [ebp-0x1c94ea4d],al
  407a77:	das    
  407a78:	mov    eax,0x875e8235
  407a7d:	sub    BYTE PTR [ecx+ebx*1+0x49],0x53
  407a82:	sub    BYTE PTR [ebx+edx*1-0x79],ch
  407a86:	sub    DWORD PTR [esi+edx*2],esp
  407a89:	fisttp DWORD PTR [eax]
  407a8b:	inc    edx
  407a8c:	loopne 0x407a89
  407a8e:	push   ebp
  407a8f:	out    dx,eax
  407a90:	pop    ebx
  407a91:	fcomp  QWORD PTR [eax]
  407a93:	imul   esi,DWORD PTR [edi-0x7d],0xd5223d35
  407a9a:	or     esp,DWORD PTR [ebp-0x67aac43d]
  407aa0:	xchg   BYTE PTR [edx],bh
  407aa2:	jle    0x407a25
  407aa4:	sahf   
  407aa5:	std    
  407aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aa7:	je     0x407a3a
  407aa9:	je     0x407a60
  407aab:	and    eax,0x153e80fb
  407ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab1:	jbe    0x407a5d
  407ab3:	enter  0x283d,0xcc
  407ab7:	adc    al,0x8d
  407ab9:	data16 and BYTE PTR [esp+ecx*4+0x53d360e6],ch
  407ac1:	rdmsr  
  407ac3:	or     dh,ah
  407ac5:	iret   
  407ac6:	dec    eax
  407ac7:	repnz xchg ecx,eax
  407ac9:	cwde   
  407aca:	fcmovnbe st,st(3)
  407acc:	push   ebp
  407acd:	jmp    0x241a3d55
  407ad2:	mov    dl,0xe4
  407ad5:	mov    ah,BYTE PTR [edi-0x28]
  407ad8:	test   al,0x28
  407ada:	dec    ebx
  407adb:	or     cl,BYTE PTR [edx]
  407add:	mov    ds:0x5a1cf74a,al
  407ae2:	cs push 0x175cef25
  407ae8:	xchg   ebp,eax
  407ae9:	js     0x407a93
  407aeb:	sub    BYTE PTR [ecx-0x6d],ch
  407aee:	inc    ecx
  407aef:	xor    BYTE PTR [eax-0x53],0x3
  407af3:	and    dl,ch
  407af5:	ret    0x90d7
  407af8:	sub    al,0x22
  407afa:	ds lahf 
  407afc:	dec    esp
  407afd:	into   
  407afe:	push   0x47d405cd
  407b03:	jb     0x407b38
  407b05:	ins    DWORD PTR es:[edi],dx
  407b06:	into   
  407b07:	sub    ecx,DWORD PTR [eax+0x2c57e029]
  407b0d:	push   ebx
  407b0e:	sti    
  407b0f:	dec    eax
  407b10:	mov    ebp,0x941c7136
  407b15:	jmp    0x407b1f
  407b17:	dec    esp
  407b18:	and    DWORD PTR [edx+0x7fc4c14f],ebx
  407b1e:	adc    ah,BYTE PTR [edx+0x29872511]
  407b24:	outs   dx,BYTE PTR ds:[esi]
  407b25:	pusha  
  407b26:	inc    DWORD PTR [ebp+0x623fa846]
  407b2c:	push   ds
  407b2d:	and    dh,dl
  407b2f:	outs   dx,BYTE PTR ds:[esi]
  407b30:	test   al,0x12
  407b32:	push   eax
  407b33:	lea    ebx,[ebp+eiz*4-0x5e]
  407b37:	repnz adc BYTE PTR [ecx+0x415fd4e3],bl
  407b3e:	pop    esp
  407b3f:	mov    ah,0xad
  407b41:	fcomp  QWORD PTR [eax]
  407b43:	sbb    eax,0x893c29e4
  407b48:	or     esp,DWORD PTR [ebx]
  407b4a:	(bad)  
  407b4b:	rol    BYTE PTR [edx],1
  407b4d:	test   DWORD PTR [esi+ebp*2-0x28813ef7],0x6e81895d
  407b58:	das    
  407b59:	out    dx,eax
  407b5a:	mov    ecx,0xe654d268
  407b5f:	dec    edx
  407b60:	sbb    al,bl
  407b62:	push   cs
  407b63:	lock cmp al,0x7
  407b66:	andnps xmm1,xmm4
  407b69:	pushf  
  407b6a:	daa    
  407b6b:	cmp    BYTE PTR [edi+0x21],0x5f
  407b6f:	clc    
  407b70:	add    al,0xb6
  407b72:	pushf  
  407b73:	push   esi
  407b74:	ds inc ebx
  407b76:	adc    BYTE PTR [ebx+ebp*4+0x14cc2325],ah
  407b7d:	test   bl,dl
  407b7f:	and    BYTE PTR [ebp-0x6e295083],bh
  407b85:	fcom   QWORD PTR [eax]
  407b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b88:	fcmovu st,st(3)
  407b8a:	cdq    
  407b8b:	sub    eax,0xd72e8087
  407b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b91:	out    0x6b,al
  407b93:	pop    ebx
  407b94:	jmp    0x407bf3
  407b96:	aas    
  407b97:	shr    DWORD PTR ds:0x4d0ce2d4,1
  407b9d:	bound  ecx,QWORD PTR [ecx+edi*8+0x410f7adf]
  407ba4:	push   0x917ce39c
  407ba9:	mov    ecx,0xfff995df
  407bae:	xor    al,0x49
  407bb0:	push   ebx
  407bb1:	iret   
  407bb2:	into   
  407bb3:	icebp  
  407bb4:	in     al,dx
  407bb5:	sbb    DWORD PTR [ebx+0x537698f8],esi
  407bbb:	push   esi
  407bbc:	pop    ss
  407bbd:	pusha  
  407bbe:	adc    dl,dl
  407bc0:	rcl    bl,1
  407bc2:	addr16 mov ecx,0xf1773823
  407bc8:	out    0x4b,eax
  407bca:	sar    ah,cl
  407bcc:	lds    ebx,FWORD PTR [edx+0x52]
  407bcf:	(bad)  
  407bd0:	test   eax,0x35de6adf
  407bd5:	adc    esi,esi
  407bd7:	dec    esp
  407bd8:	mov    edx,gs
  407bda:	hlt    
  407bdb:	ret    0xd579
  407bde:	mov    esp,0xf7a5ea2b
  407be3:	pop    edx
  407be4:	sbb    edi,DWORD PTR [ebp+0x2d]
  407be7:	xchg   esi,eax
  407be8:	hlt    
  407be9:	xchg   BYTE PTR [eax+0x58],bl
  407bec:	mov    ds:0x8c2be654,eax
  407bf1:	dec    al
  407bf3:	jge    0x407c04
  407bf5:	dec    edi
  407bf6:	push   ss
  407bf7:	clc    
  407bf8:	outs   dx,BYTE PTR ds:[si]
  407bfa:	(bad)  
  407bfb:	pop    edi
  407bfc:	mov    edi,0x5cd94042
  407c01:	hlt    
  407c02:	cmp    DWORD PTR [ecx-0x7],ecx
  407c05:	pop    es
  407c06:	std    
  407c07:	lahf   
  407c08:	or     ah,dl
  407c0a:	bound  edx,QWORD PTR [esi-0xf5bfe23]
  407c10:	push   ds
  407c11:	pop    ds
  407c12:	ror    BYTE PTR [ebx+0x68],cl
  407c15:	(bad)  
  407c18:	or     al,0x67
  407c1a:	sahf   
  407c1b:	psrad  mm3,QWORD PTR [esi+esi*4-0x3697664]
  407c23:	sub    BYTE PTR [edi],cl
  407c25:	push   0x4fa44be8
  407c2a:	fs add ebx,eax
  407c2d:	mov    ds:0x2d8bf6b5,eax
  407c32:	sub    ebx,DWORD PTR [esi+0x7de4432d]
  407c38:	xor    cl,al
  407c3a:	inc    edx
  407c3b:	mov    dh,0x6a
  407c3d:	mov    gs,esp
  407c3f:	adc    BYTE PTR [esi+0xe],cl
  407c42:	xor    esp,esp
  407c44:	push   esi
  407c45:	inc    edx
  407c46:	sub    al,0x7e
  407c48:	sbb    esp,DWORD PTR [edx+0x26]
  407c4b:	inc    edi
  407c4c:	inc    edx
  407c4d:	icebp  
  407c4e:	cdq    
  407c4f:	gs repnz sub al,0x23
  407c53:	cs pop edi
  407c55:	leave  
  407c56:	adc    DWORD PTR [esi+ebx*4],edx
  407c59:	xor    DWORD PTR [ecx+esi*4-0x1e],0xdb05b9f3
  407c61:	add    eax,0xe0ca5bb1
  407c66:	ror    eax,cl
  407c68:	jo     0x407ca6
  407c6a:	sbb    al,0x4d
  407c6c:	xchg   esp,eax
  407c6d:	test   DWORD PTR [edi+0x55],ebp
  407c70:	retf   0x19ed
  407c73:	js     0x407ca0
  407c75:	retf   0xfdb3
  407c78:	cli    
  407c79:	cmp    eax,0x7b890b3d
  407c7e:	arpl   WORD PTR [esi-0x75],ax
  407c81:	pop    eax
  407c82:	out    0x4c,eax
  407c84:	retf   0x6e24
  407c87:	inc    esi
  407c88:	ret    
  407c89:	mov    es,WORD PTR [ebp-0x26]
  407c8c:	in     al,0x8c
  407c8e:	lds    edx,FWORD PTR [ebx-0x47]
  407c91:	or     edi,DWORD PTR [ecx-0x60ab9fb9]
  407c97:	js     0x407c8a
  407c99:	add    dh,BYTE PTR [esi+0x5f4c3a06]
  407c9f:	xor    eax,0xab26489
  407ca4:	jae    0x407c64
  407ca6:	ja     0x407c2e
  407ca8:	cld    
  407ca9:	mov    ds:0x7779bf85,eax
  407cae:	cmp    ah,cl
  407cb0:	add    dl,BYTE PTR [eax]
  407cb2:	push   eax
  407cb3:	lods   al,BYTE PTR ds:[esi]
  407cb4:	ret    0xd155
  407cb7:	add    eax,0x23d1923f
  407cbc:	mov    eax,ds:0x361dc23a
  407cc1:	repz in eax,0x7f
  407cc4:	and    BYTE PTR [edi],0x67
  407cc7:	dec    eax
  407cc8:	pop    esi
  407cc9:	loop   0x407c75
  407ccb:	data16 xlat BYTE PTR ds:[ebx]
  407ccd:	jne    0x407d09
  407ccf:	loop   0x407d26
  407cd1:	push   ecx
  407cd2:	ins    BYTE PTR es:[edi],dx
  407cd3:	div    WORD PTR ds:0xf1fbce39
  407cda:	enter  0x5fa1,0x61
  407cde:	std    
  407cdf:	push   edi
  407ce0:	cld    
  407ce1:	xor    dl,BYTE PTR [esi]
  407ce3:	jns    0x407c77
  407ce5:	jg     0x407cb6
  407ce7:	aas    
  407ce8:	aaa    
  407ce9:	retf   
  407cea:	or     eax,0xacb651cd
  407cef:	lods   al,BYTE PTR ds:[esi]
  407cf0:	nop
  407cf1:	dec    ebp
  407cf2:	sti    
  407cf3:	inc    esi
  407cf4:	xor    DWORD PTR [ebp+0x37],ecx
  407cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cf8:	push   edi
  407cf9:	cmp    eax,0xac6214bd
  407cfe:	out    0xf0,eax
  407d00:	and    cl,bh
  407d02:	cmp    eax,0xf9e09d8e
  407d07:	xchg   DWORD PTR [ebp+0x2dd02afa],ebp
  407d0d:	ss inc esp
  407d0f:	mov    ds:0xfa11abd8,eax
  407d14:	and    BYTE PTR [esi-0x2046a5f7],al
  407d1a:	iret   
  407d1b:	adc    BYTE PTR [edx-0x3],cl
  407d1e:	pop    es
  407d1f:	push   0x9ae5507
  407d24:	or     esi,DWORD PTR [esi+0x1679a683]
  407d2a:	xor    eax,0x4785e386
  407d2f:	daa    
  407d30:	xor    BYTE PTR [edx+0x453731bd],0xa2
  407d37:	pop    esi
  407d38:	aas    
  407d39:	xlat   BYTE PTR ds:[ebx]
  407d3a:	fsub   QWORD PTR [edi-0x18]
  407d3d:	les    esi,FWORD PTR [ebx+0x2c1a9eaf]
  407d43:	xchg   esi,eax
  407d44:	pushf  
  407d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d46:	cmp    eax,0xf12300cc
  407d4b:	jnp    0x407d93
  407d4d:	dec    eax
  407d4e:	push   esi
  407d4f:	cmp    bl,dl
  407d51:	rcl    DWORD PTR [esi-0x3b],1
  407d54:	cld    
  407d55:	mov    esi,0xa08ec6d8
  407d5a:	mov    DWORD PTR [eax],ecx
  407d5c:	dec    esp
  407d5d:	dec    ebp
  407d5e:	in     eax,0x7
  407d60:	adc    esp,DWORD PTR [esi-0x28]
  407d63:	out    0x4a,al
  407d65:	inc    esi
  407d66:	push   ds
  407d67:	out    0x54,eax
  407d69:	cmp    DWORD PTR [ebp+0x3f],edx
  407d6c:	sub    eax,0xaf868916
  407d71:	gs cmp ch,dl
  407d74:	pop    ds
  407d75:	pop    ebp
  407d76:	out    dx,eax
  407d77:	imul   esp,DWORD PTR [esi+0x336402f9],0xb
  407d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d7f:	aaa    
  407d80:	shl    BYTE PTR [esi-0x13e63039],1
  407d86:	jb     0x407d8c
  407d88:	movups XMMWORD PTR [esi],xmm2
  407d8b:	jb     0x407dae
  407d8d:	inc    edi
  407d8e:	mov    WORD PTR [ebx+0x2487517d],?
  407d94:	fiadd  WORD PTR [ebx]
  407d96:	loope  0x407e15
  407d98:	fst    QWORD PTR [eax+eiz*4]
  407d9b:	das    
  407d9c:	pop    ss
  407d9d:	jnp    0x407d43
  407d9f:	fwait
  407da0:	push   edx
  407da1:	retf   
  407da2:	cdq    
  407da3:	or     ah,ch
  407da5:	adc    al,0xb2
  407da7:	aaa    
  407da8:	aam    0x6a
  407daa:	pop    ds
  407dab:	jbe    0x407d3e
  407dad:	inc    edi
  407dae:	adc    dh,dl
  407db0:	ss fs push eax
  407db3:	lock cs aaa 
  407db6:	in     al,0xc9
  407db8:	inc    esi
  407db9:	xchg   edx,eax
  407dba:	jmp    0x407d51
  407dbc:	js     0x407e27
  407dbe:	ror    DWORD PTR [ebx-0x1b],cl
  407dc1:	sub    DWORD PTR [esi],edx
  407dc3:	jp     0x407e33
  407dc5:	and    al,0x82
  407dc7:	inc    ebp
  407dc8:	xchg   ecx,eax
  407dc9:	jl     0x407deb
  407dcb:	sbb    cl,BYTE PTR [edi]
  407dcd:	sub    al,al
  407dcf:	dec    edi
  407dd0:	mov    ecx,DWORD PTR [edi+ebp*1+0x6d]
  407dd4:	retf   
  407dd5:	mov    ds:0x68f6d970,eax
  407dda:	mov    ecx,ebx
  407ddc:	lds    esi,FWORD PTR [ebp-0x1e]
  407ddf:	repnz mov dh,0x6f
  407de2:	call   0x65f8d210
  407de7:	mov    cl,0x93
  407de9:	dec    eax
  407dea:	or     BYTE PTR [edi+ebx*4+0x2851f9b7],0x34
  407df2:	xor    BYTE PTR [eax+ebp*2],dl
  407df5:	jo     0x407e0a
  407df7:	loopne 0x407e3f
  407df9:	fs adc eax,0xb844fae5
  407dff:	push   edx
  407e00:	scas   al,BYTE PTR es:[edi]
  407e01:	inc    ebp
  407e02:	adc    ch,BYTE PTR [edx-0x598c6e99]
  407e08:	cld    
  407e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e0a:	adc    DWORD PTR [esi-0x28108f1c],edx
  407e10:	lahf   
  407e11:	xchg   esp,eax
  407e12:	clc    
  407e13:	jg     0x407dca
  407e15:	jae    0x407e35
  407e17:	stos   BYTE PTR es:[edi],al
  407e18:	lahf   
  407e19:	cmp    ch,BYTE PTR [ecx-0x5870ad3c]
  407e1f:	aaa    
  407e20:	pop    edi
  407e21:	fimul  DWORD PTR [esi+0x1c]
  407e24:	pop    esi
  407e25:	push   ebx
  407e26:	addr16 mov ebp,0x5b1108ad
  407e2c:	inc    edi
  407e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e2e:	push   ecx
  407e2f:	xchg   edi,eax
  407e30:	inc    eax
  407e31:	fistp  QWORD PTR [edi]
  407e33:	jg     0x407db5
  407e35:	xor    al,0x14
  407e37:	pop    edi
  407e38:	loopne 0x407e5d
  407e3a:	loope  0x407e42
  407e3c:	sti    
  407e3d:	lock xor eax,0x513319f
  407e43:	dec    DWORD PTR [ecx-0x2394e923]
  407e49:	pop    eax
  407e4a:	pop    ebp
  407e4b:	fsubp  st(1),st
  407e4d:	lds    ebx,FWORD PTR [ecx-0x585cb65f]
  407e53:	xor    DWORD PTR [ebp-0x56],ecx
  407e56:	mov    dl,0xbc
  407e58:	lea    esi,[eax+0x45c9158f]
  407e5e:	das    
  407e5f:	mov    bh,0x70
  407e61:	dec    eax
  407e62:	bound  esi,QWORD PTR [eax]
  407e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e65:	fcomp  DWORD PTR [esi]
  407e67:	retf   
  407e68:	(bad)  
  407e69:	(bad)  
  407e6a:	cld    
  407e6b:	stos   BYTE PTR es:[edi],al
  407e6c:	cwde   
  407e6d:	arpl   bx,cx
  407e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e70:	add    esp,DWORD PTR [ebp-0x15f4a5d8]
  407e76:	(bad)  
  407e77:	call   0x15c2:0xed3cd63c
  407e7e:	ret    
  407e7f:	cs pop es
  407e81:	jno    0x407f00
  407e83:	gs push cs
  407e85:	adc    al,ah
  407e87:	push   ecx
  407e88:	out    dx,eax
  407e89:	gs jecxz 0x407e46
  407e8c:	jb     0x407ef6
  407e8e:	adc    DWORD PTR [edi+0x58175212],0xffffffd3
  407e95:	iret   
  407e96:	jno    0x407e2c
  407e98:	(bad)
  407e9b:	int3   
  407e9c:	mov    ebp,0x6f02e7a
  407ea1:	clc    
  407ea2:	jmp    0xf73fac32
  407ea7:	dec    edx
  407ea8:	inc    ebx
  407ea9:	rcr    ecx,1
  407eab:	push   ecx
  407eac:	(bad)  
  407eae:	push   0xffffffce
  407eb0:	mov    bl,0x34
  407eb2:	xor    eax,0x3a301a99
  407eb7:	ficomp WORD PTR [esi]
  407eb9:	pusha  
  407eba:	stos   DWORD PTR es:[edi],eax
  407ebb:	mov    dh,0x74
  407ebd:	cmp    esp,edx
  407ebf:	jmp    0x296c:0x33d0731f
  407ec6:	jno    0x407e89
  407ec8:	or     dh,BYTE PTR [ebx+0x8]
  407ecb:	mov    ebp,0x8a604766
  407ed0:	mov    bh,0x19
  407ed2:	add    cl,BYTE PTR [edi+0x4bebe97]
  407ed8:	sbb    dh,BYTE PTR [edx+0x1faf65db]
  407ede:	nop
  407edf:	ins    DWORD PTR es:[edi],dx
  407ee0:	repz hlt 
  407ee2:	icebp  
  407ee3:	adc    BYTE PTR [ecx-0x14c2cdfe],0xf8
  407eea:	fldcw  WORD PTR [esi]
  407eec:	xor    al,BYTE PTR [esi]
  407eee:	cs push esi
  407ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ef1:	push   edx
  407ef2:	into   
  407ef3:	push   eax
  407ef4:	fidiv  DWORD PTR [ebx-0x4d07d55d]
  407efa:	shl    DWORD PTR [edx-0x65],0x7b
  407efe:	aas    
  407eff:	test   DWORD PTR [ecx-0x79],edx
  407f02:	jo     0x407ead
  407f04:	sub    DWORD PTR [eax-0x21],0xe7cf7a6b
  407f0b:	jle    0x407f48
  407f0d:	xchg   edi,eax
  407f0e:	inc    ecx
  407f0f:	cwde   
  407f10:	test   al,0xd
  407f13:	ror    BYTE PTR [ebp+edi*4+0x460e0e25],1
  407f1a:	sbb    eax,0x3329d507
  407f1f:	push   eax
  407f20:	or     eax,0xbdb9fb86
  407f25:	scas   eax,DWORD PTR es:[edi]
  407f26:	jmp    0x407ecd
  407f28:	loopne 0x407ebb
  407f2a:	mov    al,BYTE PTR [edi]
  407f2c:	push   eax
  407f2d:	pushf  
  407f2e:	mov    edx,0xdd3b362b
  407f33:	dec    ebx
  407f34:	std    
  407f35:	or     DWORD PTR [ebx+0x659d0399],esp
  407f3b:	pop    ebp
  407f3c:	hlt    
  407f3d:	out    dx,eax
  407f3e:	add    ebx,DWORD PTR cs:[eax+ebx*2]
  407f42:	sahf   
  407f43:	in     eax,dx
  407f44:	add    cl,BYTE PTR [ebx+0x6e402516]
  407f4a:	hlt    
  407f4b:	in     eax,dx
  407f4c:	push   ss
  407f4d:	ja     0x407f7d
  407f4f:	and    DWORD PTR [ebp+0x48ab1a26],edx
  407f55:	in     eax,dx
  407f56:	(bad)  
  407f58:	add    eax,0xdff40f1e
  407f5d:	push   ss
  407f5e:	or     dh,BYTE PTR [edi+0xb]
  407f61:	add    esp,DWORD PTR [ebp-0x2f474abe]
  407f67:	and    eax,0x9c7e5b60
  407f6c:	jp     0x407fcb
  407f6e:	xor    cl,BYTE PTR [edx-0x1]
  407f71:	in     al,dx
  407f72:	inc    ecx
  407f73:	(bad)  
  407f74:	test   eax,0x3eeb0d31
  407f79:	hlt    
  407f7a:	or     DWORD PTR [eax+0xa],0x212c316d
  407f81:	pop    edi
  407f82:	and    cl,BYTE PTR [ecx]
  407f84:	mov    esp,0x92935c59
  407f89:	push   edi
  407f8a:	push   esi
  407f8b:	or     al,0x1
  407f8d:	add    DWORD PTR [edi-0xc],esi
  407f90:	sbb    esi,ecx
  407f92:	scas   eax,DWORD PTR es:[edi]
  407f93:	sub    al,0x50
  407f95:	rol    DWORD PTR [edi],0x5f
  407f98:	(bad)  
  407f99:	and    edi,ecx
  407f9b:	fwait
  407f9c:	sti    
  407f9d:	out    0xa2,al
  407f9f:	pop    esp
  407fa0:	aaa    
  407fa1:	ret    0x50a2
  407fa4:	xchg   BYTE PTR [edi],ah
  407fa6:	mov    ebx,0xcefaa354
  407fab:	pop    edi
  407fac:	into   
  407fad:	cmp    al,0xde
  407faf:	fs xchg edi,eax
  407fb1:	pop    eax
  407fb2:	retf   0x17b3
  407fb5:	fstp   TBYTE PTR [eax+0x33]
  407fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fb9:	or     ebp,DWORD PTR [esi+0xb02bf4]
  407fbf:	pop    esi
  407fc0:	cld    
  407fc1:	adc    al,0x16
  407fc3:	fwait
  407fc4:	nop
  407fc5:	dec    ebx
  407fc6:	cdq    
  407fc7:	cs pop ebx
  407fc9:	and    eax,0x5d9905f1
  407fce:	add    edi,DWORD PTR [esp+eax*1-0x6b]
  407fd2:	mul    edx
  407fd4:	sbb    BYTE PTR [edx+0x31],bh
  407fd7:	fisttp QWORD PTR [edi-0x1040b2ca]
  407fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fde:	aaa    
  407fdf:	push   ebp
  407fe0:	or     al,0x7c
  407fe2:	push   ds
  407fe3:	mov    eax,0x1997147f
  407fe8:	jge    0x407f70
  407fea:	pop    edx
  407feb:	in     eax,dx
  407fec:	stc    
  407fed:	nop
  407fee:	mov    DWORD PTR [edx],esi
  407ff0:	fwait
  407ff1:	add    ebx,DWORD PTR [edx]
  407ff3:	gs loop 0x407fe8
  407ff6:	push   esi
  407ff7:	push   es
  407ff8:	in     al,dx
  407ff9:	shl    BYTE PTR [eax-0xf],cl
  407ffc:	aas    
  407ffd:	inc    esi
  407ffe:	mov    ah,0x97
  408000:	fistp  QWORD PTR [ebx]
  408002:	xor    eax,DWORD PTR [edx-0x1174bde0]
  408008:	mov    eax,ds:0x6a38d513
  40800d:	(bad)  
  40800e:	adc    eax,0x6c31cbc7
  408013:	nop
  408014:	jmp    DWORD PTR [esi-0x2c]
  408017:	aaa    
  408018:	add    edx,DWORD PTR ds:0x14ccd8bc
  40801e:	test   al,0xf5
  408020:	or     BYTE PTR [eax],ch
  408022:	aam    0xee
  408024:	imul   esp,DWORD PTR [ebp-0x48de947c],0x8b8f7bbc
  40802e:	mov    fs,ebx
  408030:	cmc    
  408031:	xor    BYTE PTR [ecx+eiz*8-0xb22e9ea],al
  408038:	mov    ch,0xe6
  40803a:	pop    ds
  40803b:	stos   DWORD PTR es:[edi],eax
  40803c:	fcomp  QWORD PTR [edx+edi*1-0x55]
  408040:	pop    es
  408041:	out    0xd4,al
  408043:	xchg   ebx,eax
  408044:	or     al,0xbd
  408046:	add    al,0x6b
  408048:	mov    ?,WORD PTR [edi]
  40804a:	push   ss
  40804b:	sahf   
  40804c:	mov    cl,0xa5
  40804e:	into   
  40804f:	sar    edx,0xdb
  408052:	mov    ebx,0xe550d5aa
  408057:	cmp    edi,esi
  408059:	clc    
  40805a:	rcr    al,1
  40805c:	cmp    esi,DWORD PTR [edx]
  40805e:	or     al,dl
  408060:	pop    esp
  408061:	ins    BYTE PTR es:[edi],dx
  408062:	and    al,0xc1
  408064:	mov    cl,0x40
  408066:	outs   dx,DWORD PTR ds:[esi]
  408067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408068:	dec    eax
  408069:	out    0x2b,al
  40806b:	lods   al,BYTE PTR ds:[esi]
  40806c:	jp     0x408086
  40806e:	xchg   ecx,eax
  40806f:	or     bl,bh
  408071:	jmp    0x43eb7bfb
  408076:	popf   
  408077:	ret    0xeaa5
  40807a:	jp     0x408019
  40807c:	jo     0x40806d
  40807e:	and    eax,0xa8433346
  408083:	xor    eax,0x81e9ca1c
  408088:	sub    al,0xfe
  40808a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40808b:	mov    ebp,0xe5a1fbf
  408090:	pop    ebx
  408091:	adc    eax,DWORD PTR [edi+0x4e]
  408094:	cs pop edx
  408096:	or     DWORD PTR [esi],ebp
  408098:	push   cs
  408099:	inc    eax
  40809a:	push   edi
  40809b:	mov    esi,edx
  40809d:	pushf  
  40809e:	bound  edi,QWORD PTR [edx+0x9]
  4080a1:	dec    esi
  4080a2:	push   ecx
  4080a3:	ss ret 
  4080a5:	bound  ebx,QWORD PTR [ebx-0x6ee514cd]
  4080ab:	test   edx,ebx
  4080ad:	push   edx
  4080ae:	pop    ss
  4080af:	jno    0x4080d4
  4080b1:	push   ecx
  4080b2:	in     al,0x7d
  4080b4:	dec    esp
  4080b5:	cld    
  4080b6:	sbb    al,0xa5
  4080b8:	(bad)  
  4080b9:	pushf  
  4080ba:	inc    ebp
  4080bb:	sub    al,BYTE PTR [ebx-0x2b]
  4080be:	xor    eax,0x230e307
  4080c3:	lahf   
  4080c4:	retf   
  4080c5:	aad    0x4d
  4080c7:	les    ebp,FWORD PTR [edx-0x38]
  4080ca:	and    BYTE PTR [ecx-0x51],ah
  4080cd:	jp     0x408062
  4080cf:	fwait
  4080d0:	les    ebx,FWORD PTR [ebx-0x6acf4ae3]
  4080d6:	jns    0x4080fe
  4080d8:	xchg   ebx,eax
  4080d9:	aas    
  4080da:	mov    ds,WORD PTR [ebp-0x1e]
  4080dd:	lahf   
  4080de:	sub    esi,ebx
  4080e0:	out    dx,eax
  4080e1:	jp     0x4080f0
  4080e3:	mov    ch,0x17
  4080e5:	and    dh,ah
  4080e7:	fsub   QWORD PTR [edx]
  4080e9:	mov    cl,0xfe
  4080eb:	test   DWORD PTR [ebx+0x639f48e0],edx
  4080f1:	and    BYTE PTR [esp+edi*2],dl
  4080f4:	push   ebp
  4080f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f6:	pop    ecx
  4080f7:	push   esi
  4080f8:	xchg   edx,eax
  4080f9:	xor    eax,0x7531c92c
  4080fe:	add    al,BYTE PTR [edi]
  408100:	or     dl,bh
  408102:	daa    
  408103:	sbb    BYTE PTR [ecx+ebx*1-0x53b77c82],0xcb
  40810b:	out    0xa1,al
  40810d:	sub    eax,0x7b1a8cf0
  408112:	sub    al,0x82
  408114:	cmp    DWORD PTR [esi-0x4c],eax
  408117:	or     al,BYTE PTR [ecx]
  408119:	int    0x25
  40811b:	cli    
  40811c:	sbb    esp,DWORD PTR [ebx]
  40811e:	call   0x7adb:0x8b803a2a
  408125:	mov    ebp,0x8eded289
  40812a:	push   ecx
  40812b:	xchg   edi,eax
  40812c:	ins    DWORD PTR es:[edi],dx
  40812d:	leave  
  40812e:	xchg   esi,eax
  40812f:	shr    BYTE PTR [ebp+eax*1-0x25],1
  408133:	inc    ebx
  408134:	xchg   ebx,eax
  408135:	mov    bl,0x29
  408137:	sbb    eax,0x93a9e7d6
  40813c:	(bad)  
  40813d:	ficom  WORD PTR cs:[ebp+0x77]
  408141:	sar    eax,0x39
  408144:	jno    0x408172
  408146:	sar    DWORD PTR [esi],0xbf
  408149:	mov    al,ds:0x2c1cb289
  40814e:	aad    0x41
  408150:	aam    0x7a
  408152:	bound  esp,QWORD PTR [edx-0x24d05e33]
  408158:	cli    
  408159:	or     eax,ebp
  40815b:	or     DWORD PTR [edx],0x1f69d869
  408161:	mov    ds:0xb64fe1e,eax
  408166:	dec    ecx
  408167:	pusha  
  408168:	in     eax,dx
  408169:	cmp    al,0x4b
  40816b:	add    al,ch
  40816d:	add    eax,DWORD PTR [ebp+0x76]
  408170:	jmp    0x40811a
  408172:	mov    al,ds:0xb2c17493
  408177:	or     BYTE PTR [esi+ebx*2-0x3f],al
  40817b:	adc    DWORD PTR [edi-0x7d],esi
  40817e:	xor    al,0x9b
  408180:	ret    0xe812
  408183:	sahf   
  408184:	jmp    0x137da30e
  408189:	shr    ebp,1
  40818b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40818c:	into   
  40818d:	repnz pusha 
  40818f:	int3   
  408190:	mov    ds:0x2b69220b,eax
  408195:	mov    ebp,0xbfc31581
  40819a:	retf   
  40819b:	mov    ebx,0x10ed5cdf
  4081a0:	jecxz  0x4081bb
  4081a2:	sbb    bh,BYTE PTR [ecx-0x71]
  4081a5:	rcl    DWORD PTR ds:0x8a551f5c,0x32
  4081ac:	repnz xchg esp,eax
  4081ae:	mov    eax,ds:0xa9414d76
  4081b3:	bound  ebp,QWORD PTR [esi+eax*2-0x1610cb14]
  4081ba:	mov    esp,0x4228a9ed
  4081bf:	mov    ds:0x2c279920,eax
  4081c4:	mov    dl,0x60
  4081c6:	pop    ds
  4081c7:	in     eax,dx
  4081c8:	sbb    BYTE PTR [esi*2-0xe1f41c],ah
  4081cf:	jmp    0xa2f1:0xe4c55e9d
  4081d6:	loopne 0x408252
  4081d8:	fisttp WORD PTR [edx]
  4081da:	shl    BYTE PTR [ecx],1
  4081dc:	add    eax,0x6952f114
  4081e1:	(bad)  
  4081e2:	cwde   
  4081e3:	mov    WORD PTR [ebx-0x2f2e711c],es
  4081e9:	push   ebp
  4081ea:	mov    cl,0x6f
  4081ec:	cwde   
  4081ed:	cs pop esp
  4081ef:	fdiv   DWORD PTR ds:0x945651bd
  4081f5:	fwait
  4081f6:	shl    BYTE PTR ds:0x4833620,0xda
  4081fd:	cmp    ebp,edi
  4081ff:	sbb    BYTE PTR [ecx-0x73],bh
  408202:	jno    0x408209
  408204:	xlat   BYTE PTR ds:[ebx]
  408205:	outs   dx,DWORD PTR ds:[esi]
  408206:	add    eax,0xbde49b7b
  40820b:	pop    es
  40820c:	mov    ah,0xd0
  40820e:	jg     0x40824b
  408210:	(bad)  
  408211:	or     eax,0x25173955
  408216:	jmp    0x4081d4
  408218:	push   0xffffff83
  40821a:	stc    
  40821b:	in     eax,0xe7
  40821d:	lods   al,BYTE PTR ds:[esi]
  40821e:	pop    ss
  40821f:	adc    edi,DWORD PTR [ebp+0x60]
  408222:	and    esi,DWORD PTR ds:0x8b6025f5
  408228:	mov    esp,0xe6d7b729
  40822d:	jns    0x408294
  40822f:	adc    DWORD PTR [eax],eax
  408231:	xchg   cl,ch
  408233:	sbb    ah,BYTE PTR [eax]
  408235:	ret    
  408236:	shl    BYTE PTR [eax+0x3905fc0e],cl
  40823c:	inc    edx
  40823d:	(bad)  
  40823e:	loop   0x4081c4
  408240:	cmp    BYTE PTR [eax],al
  408242:	and    eax,eax
  408244:	xchg   esp,eax
  408245:	push   esp
  408246:	loope  0x408211
  408248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408249:	loope  0x4081f9
  40824b:	popf   
  40824c:	adc    ah,BYTE PTR [edx]
  40824e:	xchg   DWORD PTR [edi+0x6e472f7e],ebp
  408254:	pop    eax
  408255:	adc    al,0xb4
  408257:	xchg   edx,eax
  408258:	cmp    eax,0x67b1bf9b
  40825d:	adc    esp,DWORD PTR [ebx]
  40825f:	test   al,0x56
  408261:	lods   eax,DWORD PTR ds:[esi]
  408262:	je     0x408249
  408264:	inc    esp
  408265:	inc    DWORD PTR ds:0xd199e35e
  40826b:	mov    edi,0x9e56a621
  408270:	fcmovb st,st(2)
  408272:	ret    
  408273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408274:	and    BYTE PTR [ebx+0x1207ab0d],cl
  40827a:	sbb    DWORD PTR [eax],ebx
  40827c:	inc    ebp
  40827d:	inc    edx
  40827e:	es clc 
  408280:	add    BYTE PTR [eax+0x60],ch
  408283:	adc    eax,0x1722d90b
  408288:	outs   dx,BYTE PTR ds:[esi]
  408289:	inc    edx
  40828a:	(bad)  
  40828b:	pushf  
  40828c:	push   ecx
  40828d:	fisubr DWORD PTR [esi-0x5bb0a9f2]
  408293:	or     bl,BYTE PTR [ecx+0x6d29ca03]
  408299:	scas   al,BYTE PTR es:[edi]
  40829a:	or     al,0xe8
  40829c:	lds    esi,FWORD PTR [edi]
  40829e:	xchg   BYTE PTR [ecx-0x45],ch
  4082a1:	push   0xfffffffd
  4082a3:	retf   0xd50a
  4082a6:	out    dx,al
  4082a7:	sub    ecx,eax
  4082a9:	in     al,dx
  4082aa:	outs   dx,DWORD PTR ds:[esi]
  4082ab:	push   edx
  4082ac:	cld    
  4082ad:	cmp    ah,BYTE PTR [eax-0x80]
  4082b0:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082b2:	int3   
  4082b3:	jmp    0xb557:0x84f583b6
  4082ba:	jns    0x40832d
  4082bc:	int    0x74
  4082be:	ja     0x40829c
  4082c0:	or     al,0x3f
  4082c2:	push   ss
  4082c3:	imul   edx,DWORD PTR [eax+eiz*2+0x78b5fadd],0x54
  4082cb:	aaa    
  4082cc:	ret    
  4082cd:	neg    BYTE PTR [ecx]
  4082cf:	xor    esp,0xee119487
  4082d5:	stos   BYTE PTR es:[edi],al
  4082d6:	jp     0x4082ab
  4082d8:	push   edx
  4082d9:	xor    edx,DWORD PTR [ebx]
  4082db:	aas    
  4082dc:	cli    
  4082dd:	aas    
  4082de:	mov    cl,0x6f
  4082e0:	sub    eax,0x65dacad5
  4082e5:	jp     0x40834d
  4082e7:	test   eax,0x3d2721d9
  4082ec:	retf   0x77c5
  4082ef:	jl     0x408332
  4082f1:	push   0xffffff8a
  4082f3:	sub    esi,0x66b527ba
  4082f9:	loop   0x40834a
  4082fb:	pop    edx
  4082fc:	(bad)  
  4082fd:	imul   ebp,DWORD PTR [esi],0x64
  408300:	pusha  
  408301:	cwde   
  408302:	lods   al,BYTE PTR ds:[esi]
  408303:	xor    edi,DWORD PTR [ebx]
  408305:	lods   eax,DWORD PTR ds:[esi]
  408306:	imul   BYTE PTR [esi-0x1]
  408309:	or     ch,BYTE PTR [ecx-0x214c1d93]
  40830f:	cld    
  408310:	pop    ds
  408311:	test   eax,0x795ff475
  408316:	xchg   dh,ah
  408318:	mov    ds:0xc9186117,al
  40831d:	in     eax,dx
  40831e:	sub    al,BYTE PTR [eax]
  408320:	pusha  
  408321:	pop    eax
  408322:	ret    0xe61
  408325:	cmp    al,0x99
  408327:	loopne 0x40832f
  408329:	jo     0x408312
  40832b:	test   eax,0xd9cc7222
  408330:	cmp    esi,esi
  408332:	and    BYTE PTR [ebx-0x21e2f4f5],0xc7
  408339:	xchg   esp,eax
  40833a:	enter  0x1b40,0x6d
  40833e:	or     cl,BYTE PTR [ecx-0x752d5946]
  408344:	cmp    al,0x2f
  408346:	xchg   esi,eax
  408347:	loop   0x408331
  408349:	out    dx,eax
  40834a:	xor    ch,bh
  40834c:	sbb    esi,edx
  40834e:	mov    DWORD PTR [ecx+0xd],eax
  408351:	or     al,dl
  408353:	test   eax,0xa1e533e3
  408358:	fwait
  408359:	xchg   DWORD PTR [ebx+0xe9676b],ecx
  40835f:	xor    edi,DWORD PTR [ebx-0x5dc443ed]
  408365:	adc    al,0xa6
  408367:	add    al,0x91
  408369:	xchg   BYTE PTR [eax],ch
  40836b:	xchg   edx,eax
  40836c:	test   BYTE PTR [edi+0x2e],bh
  40836f:	sbb    esp,edx
  408371:	mov    edx,0x6cef1bb4
  408376:	stc    
  408377:	aam    0xed
  408379:	das    
  40837a:	loope  0x4083db
  40837c:	dec    BYTE PTR [edi-0x3ba8be07]
  408382:	xlat   BYTE PTR ds:[ebx]
  408383:	add    DWORD PTR [edx+0x172b25ca],ebp
  408389:	mov    ch,0x85
  40838b:	inc    esp
  40838c:	bnd jg 0x40834a
  40838f:	out    0x31,eax
  408391:	sub    DWORD PTR [ebp+ebx*2+0x227fcd62],esi
  408398:	data16 clc 
  40839a:	jg     0x408414
  40839c:	je     0x4083d5
  40839e:	inc    ebx
  40839f:	ret    
  4083a0:	rol    BYTE PTR [esi+0x599c2b5c],cl
  4083a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a7:	dec    esp
  4083a8:	and    ebx,edx
  4083aa:	das    
  4083ab:	lds    ebx,FWORD PTR [ebp-0x51]
  4083ae:	adc    al,0xb1
  4083b0:	(bad)  
  4083b2:	lods   eax,DWORD PTR fs:[esi]
  4083b4:	mov    ebp,0x73520a37
  4083b9:	jge    0x408357
  4083bb:	push   ebx
  4083bc:	cmp    DWORD PTR [esi+0x320e837f],0xc6e0f52d
  4083c6:	imul   eax,esp,0xb421f2aa
  4083cc:	shl    ch,0x2e
  4083cf:	inc    ecx
  4083d0:	xor    edx,DWORD PTR [eax]
  4083d2:	mov    ah,0x1f
  4083d4:	clc    
  4083d5:	ins    DWORD PTR es:[edi],dx
  4083d6:	adc    ebx,DWORD PTR [edx]
  4083d8:	push   esi
  4083d9:	sub    eax,0x3e81a2e4
  4083de:	sti    
  4083df:	aad    0x39
  4083e1:	ins    DWORD PTR es:[edi],dx
  4083e2:	sar    BYTE PTR [ecx-0x3e41ee38],1
  4083e8:	(bad)  
  4083e9:	mov    esi,0xbce89267
  4083ee:	sub    eax,0x65c683c5
  4083f3:	aad    0x99
  4083f5:	gs and al,0x6c
  4083f8:	ins    BYTE PTR es:[edi],dx
  4083f9:	aas    
  4083fa:	dec    eax
  4083fb:	xor    ecx,DWORD PTR [edx-0x1d]
  4083fe:	jmp    0x8a97b6c9
  408403:	rcl    BYTE PTR [ecx],0x18
  408406:	in     al,dx
  408407:	pusha  
  408408:	push   edx
  408409:	hlt    
  40840a:	pop    ss
  40840b:	nop
  40840c:	lock jnp 0x408457
  40840f:	clc    
  408410:	cmp    cl,ah
  408412:	aam    0xc0
  408414:	pop    ss
  408415:	dec    esp
  408416:	push   ebp
  408417:	scas   al,BYTE PTR es:[edi]
  408418:	push   ss
  408419:	jnp    0x408498
  40841b:	jne    0x40848a
  40841d:	aaa    
  40841e:	jno    0x4083e1
  408420:	mov    eax,DWORD PTR [ecx+0x74cc7416]
  408426:	fs xchg esi,eax
  408428:	sub    al,0x55
  40842a:	fsub   st(5),st
  40842c:	sub    dl,BYTE PTR [ebp-0x1c4bd6fc]
  408432:	jp     0x408442
  408434:	push   edx
  408435:	xchg   ebp,eax
  408436:	push   edi
  408437:	imul   ecx,eax,0x32
  40843a:	fnstcw WORD PTR [edx]
  40843c:	lock loopne 0x4083e5
  40843f:	sar    ah,1
  408441:	add    esi,DWORD PTR [edi]
  408443:	test   DWORD PTR [ebp+0xf],0x9b8c3a79
  40844a:	xor    edi,DWORD PTR [esi-0x1df86727]
  408450:	fisub  DWORD PTR [ecx]
  408452:	sbb    esp,DWORD PTR [ebx+edx*4+0xb]
  408456:	mov    ds:0x9fc2c19a,eax
  40845b:	outs   dx,BYTE PTR ds:[esi]
  40845c:	adc    edi,eax
  40845e:	lock cdq 
  408460:	push   ds
  408461:	fs push cs
  408463:	mov    ah,0xf0
  408465:	xor    eax,0xdb723aaf
  40846a:	js     0x408436
  40846c:	(bad)  
  40846e:	sbb    BYTE PTR [edi],al
  408470:	xchg   ebp,eax
  408471:	push   edx
  408472:	out    dx,al
  408473:	fst    QWORD PTR [edx+0x4cd69e74]
  40847a:	xchg   DWORD PTR [ebx],esp
  40847c:	inc    edi
  40847d:	shl    ah,0xd7
  408480:	and    edi,DWORD PTR [ebx-0x87d5f05]
  408486:	fld    TBYTE PTR ds:0xc6f77969
  40848c:	loop   0x40843e
  40848e:	jg     0x4084ef
  408490:	xor    BYTE PTR [ebx],ah
  408492:	cmp    BYTE PTR [esi],bl
  408494:	stc    
  408495:	fadd   st(7),st
  408497:	jg     0x4084d7
  408499:	jg     0x408484
  40849b:	mov    al,ds:0x8ad0e862
  4084a0:	ds ins BYTE PTR es:[edi],dx
  4084a2:	retf   
  4084a3:	jnp    0x40851b
  4084a5:	or     DWORD PTR [ecx],edx
  4084a7:	mov    edx,0x51bb9af9
  4084ac:	repz dec DWORD PTR [ecx]
  4084af:	mov    edx,DWORD PTR [ebp-0x2b]
  4084b2:	sbb    al,0x12
  4084b4:	outs   dx,DWORD PTR ds:[esi]
  4084b5:	mov    ch,0x25
  4084b7:	ins    DWORD PTR es:[edi],dx
  4084b8:	lock sbb ebp,DWORD PTR [esi+0x5b]
  4084bc:	push   ecx
  4084bd:	lock sub BYTE PTR [esi-0xd],dh
  4084c1:	pusha  
  4084c2:	mov    ebp,?
  4084c4:	stos   BYTE PTR es:[edi],al
  4084c5:	inc    esi
  4084c6:	hlt    
  4084c7:	ja     0x408495
  4084c9:	mov    esp,0xa653f15c
  4084ce:	dec    edx
  4084cf:	repz inc ecx
  4084d1:	scas   al,BYTE PTR es:[edi]
  4084d2:	inc    ecx
  4084d3:	clc    
  4084d4:	andps  xmm5,xmm2
  4084d7:	(bad)  
  4084d8:	lods   eax,DWORD PTR ds:[esi]
  4084d9:	dec    esp
  4084da:	in     eax,0x48
  4084dc:	pop    ecx
  4084dd:	fbstp  TBYTE PTR ds:0xd9122d5e
  4084e3:	push   0xe3055184
  4084e8:	test   edx,edi
  4084ea:	nop
  4084eb:	test   dh,dl
  4084ed:	mov    ecx,edx
  4084ef:	dec    ecx
  4084f0:	fs sub ecx,eax
  4084f3:	imul   esi,ebp,0xd5fd65c6
  4084f9:	pop    esp
  4084fa:	mov    esp,0x1a048834
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a74b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a74f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a753
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a75b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a723
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [esi],ch
  4089f8:	jnp    0x408a54
  4089fa:	std    
  4089fb:	(bad)  
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx-0xe8a5b43],0xffffffaf
  408a08:	sbb    eax,0xe37a10b1
  408a0d:	mov    ebx,0x64927dd6
  408a12:	ja     0x4089bf
  408a14:	dec    ecx
  408a15:	xchg   ebp,eax
  408a16:	mov    ebp,0xc526e951
  408a1b:	mov    ebx,0xde69564c
  408a20:	xor    eax,0x9bf9e728
  408a25:	mov    ebx,0x4a551ac1
  408a2a:	aaa    
  408a2b:	int3   
  408a2c:	jp     0x408a13
  408a2e:	test   al,0xfa
  408a30:	cmp    dl,ah
  408a32:	mov    dh,0x44
  408a34:	loopne 0x408a3c
  408a36:	dec    esi
  408a37:	pop    ds
  408a38:	push   0x8c857336
  408a3d:	ffree  st(3)
  408a3f:	addr16 call 0x20efd62b
  408a45:	inc    esi
  408a46:	cmp    eax,0x3a50bd2b
  408a4b:	iret   
  408a4c:	mov    esi,0x86a593fa
  408a51:	les    esi,FWORD PTR [eax]
  408a53:	pop    ss
  408a54:	fbld   TBYTE PTR [ebx+0x2]
  408a57:	or     ecx,ebp
  408a59:	loope  0x408a0d
  408a5b:	adc    eax,0xee42220b
  408a60:	out    0xfd,eax
  408a62:	dec    edx
  408a63:	clc    
  408a64:	and    dh,cl
  408a66:	mov    ebp,esi
  408a68:	or     eax,0xd309ab
  408a6d:	out    0x70,eax
  408a6f:	ret    0x4b3e
  408a72:	fwait
  408a73:	xor    al,0xc5
  408a75:	sti    
  408a76:	and    DWORD PTR [ebp+0xfe5df99],ebx
  408a7c:	xor    edi,esi
  408a7e:	xchg   ebx,eax
  408a7f:	add    ebp,edi
  408a81:	adc    edx,DWORD PTR [ebx-0x2d0017dc]
  408a87:	(bad)  
  408a8b:	xchg   BYTE PTR [edx+0xcc13b42],bh
  408a91:	fcmove st,st(0)
  408a93:	std    
  408a94:	bound  eax,QWORD PTR [ebp-0x1e201e7e]
  408a9a:	jo     0x408ada
  408a9c:	adc    al,0xe5
  408a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9f:	mov    ah,0x93
  408aa2:	push   eax
  408aa3:	inc    ebx
  408aa4:	mov    bl,BYTE PTR [edx]
  408aa6:	inc    esp
  408aa7:	lods   al,BYTE PTR ds:[esi]
  408aa8:	cmp    cl,ch
  408aaa:	jl     0x408ae5
  408aac:	inc    ebp
  408aad:	add    esi,0xffffffd7
  408ab0:	mov    ebx,0xd317365c
  408ab5:	into   
  408ab6:	mov    dl,0x71
  408ab8:	pop    ss
  408ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aba:	push   edi
  408abb:	repnz iret 
  408abd:	push   ss
  408abe:	inc    eax
  408abf:	mul    BYTE PTR [ecx]
  408ac1:	std    
  408ac2:	and    esi,edx
  408ac4:	push   0x8
  408ac6:	call   0x1a3190ee
  408acb:	dec    edi
  408acc:	out    dx,eax
  408acd:	and    ch,BYTE PTR [ebp-0x4b]
  408ad0:	push   edi
  408ad1:	mov    DWORD PTR [ebx-0x2b5f3194],esp
  408ad7:	retf   0xce15
  408ada:	mov    edx,0xcb8ff35f
  408adf:	mov    ch,0xdc
  408ae1:	mov    esp,0x8bc77571
  408ae6:	in     al,0xfd
  408ae8:	add    BYTE PTR [ecx+0x7a],0x7b
  408aec:	jle    0x408a9c
  408aee:	sub    eax,0x511dd997
  408af3:	pop    esi
  408af4:	mov    cs,WORD PTR ds:0x1fe407aa
  408afa:	mov    edx,0x22b23d5c
  408aff:	enter  0xa36d,0x45
  408b03:	sbb    BYTE PTR [ecx-0x60],bl
  408b06:	xor    eax,0xd4888743
  408b0b:	lods   eax,DWORD PTR ds:[esi]
  408b0c:	mov    dl,0x11
  408b0e:	mov    dh,0x22
  408b10:	fdivr  DWORD PTR [edi+0x2f]
  408b13:	mov    ds:0x5058a182,eax
  408b18:	jp     0x408b28
  408b1a:	out    dx,al
  408b1b:	cmp    eax,0x301b441b
  408b20:	cmp    eax,0x67f591b7
  408b25:	(bad)  
  408b26:	jno    0x408b29
  408b28:	(bad)  
  408b29:	arpl   WORD PTR [edi+0x364bc46c],bx
  408b2f:	jae    0x408aef
  408b31:	fidiv  WORD PTR [ecx]
  408b33:	and    BYTE PTR [eax],al
  408b35:	push   ds
  408b36:	jne    0x408b35
  408b38:	cdq    
  408b39:	cmp    eax,0x4a9cde1c
  408b3e:	mov    bl,0x6b
  408b40:	or     eax,DWORD PTR [eax+0x4e61477]
  408b46:	gs iret 
  408b48:	or     cl,0x9c
  408b4b:	rcr    BYTE PTR [esi-0x3],cl
  408b4e:	push   es
  408b4f:	popa   
  408b50:	jle    0x408b49
  408b52:	out    0x7d,al
  408b54:	aam    0x65
  408b56:	pminub mm5,QWORD PTR [ebx+0x4c]
  408b5a:	sbb    al,BYTE PTR [edx-0x53]
  408b5d:	sub    edx,DWORD PTR [ecx-0x72]
  408b60:	xor    al,0x41
  408b62:	(bad)  
  408b63:	xor    al,0x8e
  408b65:	add    cl,BYTE PTR [ecx-0x65a9e527]
  408b6b:	mov    ds:0x2cb48329,al
  408b70:	add    DWORD PTR [edi],ebx
  408b72:	mov    ss,esi
  408b74:	int    0x5c
  408b76:	sub    edx,esp
  408b78:	jmp    0xe3b7:0xda5d0aa7
  408b7f:	int    0xe
  408b81:	pop    esp
  408b82:	retf   0x23e4
  408b85:	(bad)
  408b88:	add    eax,0xc7d151b9
  408b8d:	xchg   esp,eax
  408b8e:	icebp  
  408b8f:	enter  0xefb,0x77
  408b93:	push   ss
  408b94:	mov    al,0x5a
  408b96:	enter  0x7e5c,0x76
  408b9a:	add    DWORD PTR [edi],ecx
  408b9c:	(bad)  
  408b9d:	inc    eax
  408b9e:	xchg   esi,eax
  408b9f:	push   edi
  408ba0:	addr16 lahf 
  408ba2:	icebp  
  408ba3:	or     DWORD PTR [eax],ecx
  408ba5:	hlt    
  408ba6:	out    0x97,al
  408ba8:	push   esp
  408ba9:	push   es
  408baa:	dec    eax
  408bab:	(bad)  
  408bad:	push   ss
  408bae:	cld    
  408baf:	test   DWORD PTR [eax-0x70a63244],0xf55ebdf8
  408bb9:	addr16 mov cl,0x88
  408bbc:	mov    esi,0x7e84f9c2
  408bc1:	or     BYTE PTR [edi-0x3f],dh
  408bc4:	jg     0x408b62
  408bc6:	pusha  
  408bc7:	xor    ecx,ecx
  408bc9:	dec    ecx
  408bca:	dec    edi
  408bcb:	mov    ecx,0x2b064a34
  408bd0:	inc    ebp
  408bd1:	(bad)  
  408bd2:	stc    
  408bd3:	scas   al,BYTE PTR es:[edi]
  408bd4:	jb     0x408bcf
  408bd6:	enter  0x4df4,0xd6
  408bda:	imul   esp,DWORD PTR ds:0xa8355596,0x51571c2f
  408be4:	test   al,ah
  408be6:	mov    al,ds:0x163839a3
  408beb:	or     al,al
  408bed:	out    0x37,eax
  408bef:	mov    esp,0x333c0023
  408bf4:	jp     0x408c73
  408bf6:	shl    ch,0x93
  408bf9:	pop    ebp
  408bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bfb:	dec    ebx
  408bfc:	div    BYTE PTR [eax-0x1c03ddf]
  408c02:	jmp    0x6bbbb04
  408c07:	idiv   BYTE PTR [ebx+edx*4-0x6a]
  408c0b:	shr    BYTE PTR [esi],0x40
  408c0e:	push   0xd21e2135
  408c13:	scas   eax,DWORD PTR es:[edi]
  408c14:	mov    bh,0x2d
  408c16:	xchg   edx,eax
  408c17:	inc    ebp
  408c18:	mov    bl,dl
  408c1a:	lahf   
  408c1b:	jno    0x408c28
  408c1d:	push   ss
  408c1e:	imul   eax,DWORD PTR [ecx-0x56f6498a],0x52df0da2
  408c28:	or     al,0xf3
  408c2a:	pop    ebx
  408c2b:	ret    0xc5c8
  408c2e:	stos   BYTE PTR es:[edi],al
  408c2f:	jno    0x408bcf
  408c31:	push   ebx
  408c32:	lahf   
  408c33:	jae    0x408c03
  408c35:	int3   
  408c36:	lea    ecx,ds:0x3d2ea102
  408c3c:	xchg   ebp,eax
  408c3d:	in     eax,0xc4
  408c3f:	sti    
  408c40:	test   ebx,0xb8da490a
  408c46:	in     eax,0xd5
  408c48:	and    al,0xb4
  408c4a:	jbe    0x408c3a
  408c4c:	mov    ebp,0xb3971221
  408c51:	cmp    al,0x18
  408c53:	mov    esp,0x9910fd8
  408c58:	daa    
  408c59:	xchg   ebx,eax
  408c5a:	cs jmp 0x408bec
  408c5d:	sub    esp,eax
  408c5f:	iret   
  408c60:	mov    edi,0x32c785d3
  408c65:	sbb    al,0x36
  408c67:	test   BYTE PTR [eax],0x74
  408c6a:	loopne 0x408cb4
  408c6c:	jle    0x408c0a
  408c6e:	into   
  408c6f:	pop    ds
  408c70:	or     al,0x5b
  408c72:	(bad)  
  408c73:	sub    eax,0xde169e4f
  408c78:	stc    
  408c79:	jl     0x408c8c
  408c7b:	or     al,0x52
  408c7d:	test   eax,0x65cb09cb
  408c82:	pop    ebp
  408c83:	push   0x9a09ffa4
  408c88:	into   
  408c89:	jnp    0x408cbd
  408c8b:	adc    DWORD PTR [edi+0x68fcae5d],edi
  408c91:	mov    ds:0x39ed3e2a,al
  408c96:	dec    esi
  408c97:	inc    ebp
  408c98:	add    DWORD PTR [esi-0x3],edx
  408c9b:	xor    ebx,edi
  408c9d:	in     al,dx
  408c9e:	jnp    0x408c6d
  408ca0:	mov    ds:0x80e791b1,eax
  408ca5:	in     eax,0x56
  408ca7:	sbb    esi,ebx
  408ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408caa:	push   ecx
  408cab:	ror    DWORD PTR [edi+0x41],0x9c
  408caf:	mov    eax,DWORD PTR [edx+0x1c007281]
  408cb5:	or     ah,dl
  408cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb8:	cmp    bh,BYTE PTR [edx+0x2c661ff4]
  408cbe:	and    DWORD PTR [eax+0x50],ebp
  408cc1:	scas   eax,DWORD PTR es:[edi]
  408cc2:	fbld   TBYTE PTR [ebx-0x60482454]
  408cc8:	inc    edi
  408cc9:	(bad)  
  408cca:	push   esi
  408ccb:	fs test al,0xad
  408cce:	push   ds
  408ccf:	push   ds
  408cd0:	jae    0x408ca5
  408cd2:	pop    ecx
  408cd3:	xchg   esp,eax
  408cd5:	inc    esp
  408cd6:	inc    ecx
  408cd7:	add    ah,BYTE PTR [esi-0x59827106]
  408cdd:	push   0x12af5df6
  408ce2:	dec    edx
  408ce3:	push   edi
  408ce4:	inc    edx
  408ce5:	bound  ebp,QWORD PTR [esi-0x16321c04]
  408ceb:	cdq    
  408cec:	cmp    ebx,DWORD PTR [ebx]
  408cee:	push   ds
  408cef:	xchg   esi,eax
  408cf0:	iret   
  408cf1:	xor    esp,ebp
  408cf3:	fs jno 0x408d3e
  408cf6:	jg     0x408cf9
  408cf8:	and    al,0xee
  408cfa:	fst    DWORD PTR [ebx-0x4d]
  408cfd:	cmp    cl,bh
  408cff:	aas    
  408d00:	cli    
  408d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d02:	lock in eax,0xba
  408d05:	and    ch,ah
  408d07:	add    ah,0x85
  408d0a:	xor    eax,0xa60c9228
  408d0f:	pop    ecx
  408d10:	push   ebx
  408d11:	inc    edi
  408d12:	test   al,0x8b
  408d14:	mov    ebp,0xe0a7b54b
  408d19:	daa    
  408d1a:	fadd   QWORD PTR [ecx-0x3f]
  408d1d:	cwde   
  408d1e:	enter  0x6f46,0x1c
  408d22:	add    al,0x11
  408d24:	nop
  408d25:	imul   ecx,DWORD PTR [ebx+0x1853aa1a],0x76a43411
  408d2f:	ja     0x408ce9
  408d31:	or     edx,DWORD PTR [ebp+0x19]
  408d34:	int    0x41
  408d36:	lahf   
  408d37:	cmp    edi,eax
  408d39:	dec    eax
  408d3a:	and    BYTE PTR [eax+0x6f],ch
  408d3d:	test   eax,0xf206f375
  408d42:	xchg   ecx,edx
  408d44:	adc    BYTE PTR [esi+0x7e],dh
  408d47:	and    al,0x4f
  408d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d4a:	out    0xc2,al
  408d4c:	mov    eax,ds:0x62bcb137
  408d51:	fdivr  QWORD PTR es:[eax-0xe15bfa8]
  408d58:	das    
  408d59:	or     ah,ch
  408d5b:	jno    0x408d4d
  408d5d:	pusha  
  408d5e:	ret    
  408d5f:	jmp    0x73b7:0x9a5a946d
  408d66:	sbb    DWORD PTR [ebp-0x76],ebp
  408d69:	pop    edx
  408d6a:	mov    ah,0x59
  408d6c:	xchg   esi,eax
  408d6d:	int3   
  408d6e:	addr16 ds (bad) 
  408d71:	scas   al,BYTE PTR es:[edi]
  408d72:	addr16 maskmovq mm4,mm4
  408d76:	lahf   
  408d77:	mov    eax,0x4b43ae41
  408d7c:	xchg   cl,ah
  408d7e:	ss jnp 0x408d4d
  408d81:	pop    edx
  408d82:	(bad)  
  408d83:	push   edi
  408d84:	inc    ebx
  408d85:	pop    edx
  408d86:	jns    0x408d0d
  408d88:	fdivr  QWORD PTR [ebx-0x2d]
  408d8b:	cmp    al,0xd9
  408d8d:	xor    bh,BYTE PTR [ebp+0x60e1b5e2]
  408d93:	mov    esi,0x2bf0ee00
  408d98:	jp     0x408d1c
  408d9a:	mov    ebx,0xb6bea67b
  408d9f:	cs leave 
  408da1:	(bad)  
  408da2:	cmp    al,0xbe
  408da4:	dec    ebp
  408da5:	xchg   esi,eax
  408da6:	adc    DWORD PTR [eax-0x1e],ebx
  408da9:	mov    al,ds:0xffd143a0
  408dae:	xor    ah,0x7b
  408db1:	and    al,0x11
  408db3:	dec    ebp
  408db4:	pushf  
  408db5:	retf   0x284d
  408db8:	adc    DWORD PTR [edi],edx
  408dba:	pop    ss
  408dbb:	mov    dh,0x9e
  408dbd:	je     0x408d8d
  408dbf:	hlt    
  408dc0:	mov    ah,0x42
  408dc2:	in     al,dx
  408dc3:	mov    edx,0x6e46991f
  408dc8:	(bad)  
  408dca:	pop    edi
  408dcb:	dec    esp
  408dcc:	cmp    BYTE PTR [edi],bl
  408dce:	add    esi,DWORD PTR [ebx-0x52]
  408dd1:	jecxz  0x408e42
  408dd3:	pusha  
  408dd4:	retf   
  408dd5:	test   DWORD PTR [eax+0x4c],0x75704e06
  408ddc:	mov    eax,ds:0xf541704f
  408de1:	sub    DWORD PTR [esi],eax
  408de3:	bound  edx,QWORD PTR [edx]
  408de5:	mov    dl,0x85
  408de7:	test   eax,0x96c4fca2
  408dec:	mov    ebx,ds
  408dee:	lds    eax,FWORD PTR [edi+eiz*4+0x36d62bc3]
  408df5:	int3   
  408df6:	cwde   
  408df7:	cmp    ah,BYTE PTR [edi-0x80]
  408dfa:	std    
  408dfb:	aaa    
  408dfc:	pop    ebx
  408dfd:	enter  0x8720,0x1b
  408e01:	rcr    DWORD PTR [edx],1
  408e03:	dec    eax
  408e04:	sbb    bl,al
  408e06:	pop    ebx
  408e07:	sbb    al,0xcd
  408e09:	data16 into 
  408e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e0c:	or     edi,DWORD PTR [esi]
  408e0e:	mov    dl,0xaf
  408e10:	sti    
  408e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e12:	jge    0x408e6e
  408e14:	fsubr  QWORD PTR [edx]
  408e16:	ror    DWORD PTR [ebp+esi*1-0x47d693f4],cl
  408e1d:	cmp    al,0x8f
  408e1f:	mov    al,BYTE PTR [ebp+ebp*2+0x4a]
  408e23:	test   eax,0xd7d7c706
  408e28:	jl     0x408e54
  408e2a:	aaa    
  408e2b:	cld    
  408e2c:	push   ebp
  408e2d:	or     ecx,DWORD PTR [edi+0x24e9cfa4]
  408e33:	and    edi,0x885a33b3
  408e39:	mov    BYTE PTR ds:[eax+0x60df0329],bl
  408e40:	ret    
  408e41:	adc    al,0xd4
  408e43:	pop    edx
  408e44:	cmp    DWORD PTR [edi],edx
  408e46:	ja     0x408e8f
  408e48:	std    
  408e49:	daa    
  408e4a:	mov    bl,0xb6
  408e4c:	sar    BYTE PTR [ebp-0x76],cl
  408e4f:	sbb    eax,0xad627733
  408e54:	mov    ebx,0x470eea59
  408e59:	outs   dx,BYTE PTR ds:[esi]
  408e5a:	add    BYTE PTR [edi+0x2898e34f],0x87
  408e61:	stc    
  408e62:	inc    DWORD PTR [eax-0x22f8b13b]
  408e68:	adc    al,0x98
  408e6a:	xchg   ebx,eax
  408e6b:	jmp    0xcb4d:0x2cb899ca
  408e72:	mov    cl,0xb5
  408e74:	pop    esi
  408e75:	in     eax,dx
  408e76:	fwait
  408e77:	aad    0x20
  408e79:	mov    edi,0x5b1c6d6e
  408e7e:	sbb    eax,0xc625cd5e
  408e83:	mov    BYTE PTR [eax+0x1fab6d6a],dl
  408e89:	std    
  408e8a:	cmp    cl,0x47
  408e8d:	jle    0x408f06
  408e8f:	out    dx,al
  408e90:	bound  ebp,QWORD PTR [ecx]
  408e92:	lock std 
  408e94:	cs addr16 or eax,0x8a6da952
  408e9b:	adc    DWORD PTR [esi],eax
  408e9d:	icebp  
  408e9e:	sub    eax,0x82c322ad
  408ea3:	aas    
  408ea4:	inc    ecx
  408ea5:	jge    0x408eb4
  408ea7:	neg    ch
  408ea9:	add    al,dh
  408eab:	cmp    DWORD PTR [edx+0x52],edx
  408eae:	shl    ebx,1
  408eb0:	ins    DWORD PTR es:[edi],dx
  408eb1:	inc    edx
  408eb2:	jbe    0x408ea4
  408eb4:	push   es
  408eb5:	scas   eax,DWORD PTR es:[edi]
  408eb6:	mov    bl,dl
  408eb8:	scas   al,BYTE PTR es:[edi]
  408eb9:	add    edi,ebx
  408ebb:	(bad)  
  408ebc:	mov    ss,WORD PTR [esi-0x30de170]
  408ec2:	and    al,0x2e
  408ec4:	popf   
  408ec5:	and    al,0x3b
  408ec7:	mov    BYTE PTR [ecx+0x41],ah
  408eca:	jle    0x408eb1
  408ecc:	fwait
  408ecd:	out    dx,al
  408ece:	mov    edx,0x6d0159eb
  408ed3:	loop   0x408e55
  408ed5:	(bad)  
  408ed6:	jle    0x408e74
  408ed8:	call   0xd941:0x48188bac
  408edf:	xor    DWORD PTR gs:[edx],ebp
  408ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee3:	repnz sbb eax,0x35f68897
  408ee9:	xlat   BYTE PTR ds:[ebx]
  408eea:	out    dx,eax
  408eeb:	xchg   ebp,eax
  408eec:	inc    ebx
  408eed:	xlat   BYTE PTR ds:[ebx]
  408eee:	into   
  408eef:	retf   
  408ef0:	rol    BYTE PTR ds:0xecba85cc,cl
  408ef6:	leave  
  408ef7:	pop    ecx
  408ef8:	stos   BYTE PTR es:[edi],al
  408ef9:	and    esi,ebp
  408efb:	push   cs
  408efc:	mov    ebp,0x2c725dc7
  408f01:	inc    ebx
  408f02:	jp     0x408f00
  408f04:	call   0x854d:0x229aa832
  408f0b:	sbb    dh,BYTE PTR [ecx+0x77]
  408f0e:	retf   0x5cf0
  408f11:	enter  0xc43a,0x72
  408f15:	dec    edi
  408f16:	and    esi,edx
  408f18:	add    al,0xe7
  408f1a:	sub    BYTE PTR [edx],dh
  408f1c:	les    edi,FWORD PTR [esi-0x67]
  408f1f:	jl     0x408f77
  408f21:	(bad)  
  408f22:	mov    edi,0xfe7e9edc
  408f27:	out    0x33,eax
  408f29:	jg     0x408ec2
  408f2b:	movd   mm0,DWORD PTR [ebx]
  408f2e:	out    0xd7,eax
  408f30:	and    al,0x20
  408f32:	icebp  
  408f33:	pop    es
  408f34:	sti    
  408f35:	sbb    al,0x9b
  408f37:	sbb    DWORD PTR [eax],edx
  408f39:	mov    bh,0xff
  408f3b:	aas    
  408f3c:	bound  esp,QWORD PTR [esi+ebx*8-0x6b]
  408f40:	add    eax,0x5e701d0c
  408f45:	and    BYTE PTR [edi],bl
  408f47:	push   edx
  408f48:	cld    
  408f49:	test   DWORD PTR [ebx+0x470f0fe2],esp
  408f4f:	(bad)
  408f52:	push   eax
  408f53:	push   ebp
  408f54:	add    ebp,edi
  408f56:	in     al,0x9e
  408f58:	out    0x4e,eax
  408f5a:	xchg   DWORD PTR [ecx-0x693c821],ebp
  408f60:	xchg   DWORD PTR [esi+ebp*4],edi
  408f63:	iret   
  408f64:	lds    edi,FWORD PTR [ebx-0x1c]
  408f67:	mov    DWORD PTR [edi+esi*2-0x47],edx
  408f6b:	mov    edi,0xb30317e2
  408f70:	jb     0x408f20
  408f72:	cwde   
  408f73:	sar    DWORD PTR [bx+di-0x56],cl
  408f77:	jmp    0x866c:0x4fc272dd
  408f7e:	inc    ecx
  408f7f:	clc    
  408f80:	mov    ds:0xba14168e,al
  408f85:	push   edx
  408f86:	ja     0x408fc7
  408f88:	or     BYTE PTR [edx-0x20],bh
  408f8b:	push   ss
  408f8c:	dec    ebx
  408f8d:	and    al,0x5c
  408f8f:	push   esp
  408f90:	mov    eax,0x2fa8a473
  408f95:	mov    ecx,0x5171a9e4
  408f9a:	xor    dl,BYTE PTR [ebx+0x7c7d3578]
  408fa0:	scas   al,BYTE PTR es:[edi]
  408fa1:	call   0x365d:0x179a4d72
  408fa8:	sbb    al,0xf6
  408faa:	std    
  408fab:	ins    DWORD PTR es:[edi],dx
  408fac:	(bad)  
  408fae:	pop    ecx
  408faf:	mov    ecx,0x72851d1e
  408fb4:	daa    
  408fb5:	or     DWORD PTR [esi],edi
  408fb7:	inc    ecx
  408fb8:	stos   DWORD PTR es:[edi],eax
  408fb9:	scas   eax,DWORD PTR es:[edi]
  408fba:	push   ecx
  408fbb:	imul   ebp,DWORD PTR [eax-0x595d2e4f],0x38
  408fc2:	mov    ah,0x66
  408fc4:	in     eax,dx
  408fc5:	aas    
  408fc6:	adc    BYTE PTR [ecx+0x4f],ch
  408fc9:	or     eax,0x75cc65a6
  408fce:	sub    BYTE PTR [ebx-0x5eb6623f],dh
  408fd4:	or     esp,DWORD PTR [esi-0x14d197c3]
  408fda:	lods   al,BYTE PTR ds:[esi]
  408fdb:	shr    BYTE PTR [esi-0xc],1
  408fde:	ret    
  408fdf:	adc    DWORD PTR [ecx],0xf34090a0
  408fe5:	xchg   esp,eax
  408fe6:	xchg   DWORD PTR [esi],edx
  408fe8:	mov    dl,0x76
  408fea:	mov    ds:0xab1bfea9,eax
  408fef:	cld    
  408ff0:	enter  0x7c32,0xe6
  408ff4:	repnz retf 0xd2b1
  408ff8:	sbb    dh,cl
  408ffa:	sbb    eax,0x4c4a8063
  408fff:	adc    cl,BYTE PTR [ebx+edi*1-0x67]
  409003:	stos   BYTE PTR es:[edi],al
  409004:	push   cs
  409005:	jo     0x408feb
  409007:	jno    0x408f8b
  409009:	arpl   WORD PTR [ecx+eax*8+0x3cafaddc],di
  409010:	mov    bh,0x1c
  409012:	mov    ecx,0x1841afd0
  409017:	mov    dl,BYTE PTR ds:0xa51d2637
  40901d:	sahf   
  40901e:	mov    ecx,0x52ddbc90
  409023:	cmp    cl,ah
  409025:	mov    ecx,edi
  409027:	mov    ebp,0xc6e834c5
  40902c:	jbe    0x408fd2
  40902e:	pop    ebp
  40902f:	ds stc 
  409031:	sbb    DWORD PTR [esi],eax
  409033:	push   ebp
  409034:	stc    
  409035:	adc    dh,BYTE PTR [edx-0x792ac830]
  40903b:	popf   
  40903c:	push   ecx
  40903d:	jecxz  0x408ffc
  40903f:	push   ebp
  409040:	or     cl,BYTE PTR [edi-0x31]
  409043:	imul   esp,DWORD PTR [eax-0x4c0b7401],0x20
  40904a:	sbb    dl,0x77
  40904d:	clc    
  40904e:	inc    edi
  40904f:	cdq    
  409050:	mov    ecx,0xdd5f5b76
  409055:	add    bh,BYTE PTR [edx-0x6b]
  409058:	das    
  409059:	int    0x45
  40905b:	cmp    eax,0x182ec927
  409060:	dec    esp
  409061:	or     bl,BYTE PTR [ecx+ecx*4+0x400cee84]
  409068:	mov    al,ds:0xf4e29abb
  40906d:	retf   0x54bb
  409070:	xor    eax,0x1a28bae7
  409075:	xchg   edx,eax
  409076:	dec    edx
  409077:	push   eax
  409078:	mov    cl,0xf1
  40907a:	mov    ecx,0x8eaa3f15
  40907f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409080:	mov    edi,0x3b61d239
  409085:	js     0x4090b9
  409087:	push   ds
  409088:	xor    eax,0x652fa8c0
  40908d:	jmp    0x7f74fcc0
  409092:	dec    ebp
  409093:	faddp  st(2),st
  409095:	inc    esp
  409096:	xchg   ecx,eax
  409097:	pop    eax
  409098:	out    dx,al
  409099:	nop
  40909a:	shl    dh,0xda
  40909d:	pop    es
  40909e:	int3   
  40909f:	in     eax,dx
  4090a0:	int3   
  4090a1:	ror    BYTE PTR [eax+edx*2+0x1d],0x4a
  4090a6:	push   edi
  4090a7:	fwait
  4090a8:	push   ss
  4090a9:	sbb    al,BYTE PTR [edi]
  4090ab:	push   edi
  4090ac:	(bad)  
  4090ad:	out    dx,al
  4090ae:	push   ecx
  4090af:	(bad)  
  4090b1:	or     cl,bh
  4090b3:	and    ebx,DWORD PTR [esi-0x426b741e]
  4090b9:	dec    ecx
  4090ba:	dec    eax
  4090bb:	dec    ebp
  4090bc:	lock retf 
  4090be:	ss lahf 
  4090c0:	jp     0x4090f2
  4090c2:	popf   
  4090c3:	and    al,0x93
  4090c5:	pop    es
  4090c6:	mov    ebp,0x974311c0
  4090cb:	add    dl,BYTE PTR [esi+0x59]
  4090ce:	mov    esi,0xc8d7df76
  4090d3:	sub    BYTE PTR [edi+ecx*1+0x4e],bl
  4090d7:	adc    ebx,ebp
  4090d9:	dec    edi
  4090da:	jmp    0x92e2772a
  4090df:	out    0x4e,eax
  4090e1:	js     0x409151
  4090e3:	adc    ah,ch
  4090e5:	sbb    esi,DWORD PTR ds:0x15a53d86
  4090eb:	and    esp,esp
  4090ed:	in     al,0x31
  4090ef:	je     0x4090fd
  4090f1:	fst    DWORD PTR [ebp-0x3b]
  4090f4:	sub    DWORD PTR [ecx-0x3248e512],0xffffffc9
  4090fb:	mov    esp,0xd44fe463
  409100:	ror    DWORD PTR [edx-0xb75929a],0xb3
  409107:	repz pop esp
  409109:	adc    eax,0x332e2cf9
  40910e:	sub    DWORD PTR [ebp+0x7e376341],esp
  409114:	push   0x9f63d55e
  409119:	or     esp,DWORD PTR [eax]
  40911b:	or     DWORD PTR [edi-0x3d],esp
  40911e:	leave  
  40911f:	and    eax,0xe52ada3
  409124:	xchg   ecx,eax
  409125:	ficomp WORD PTR [edx+0xdeb570c]
  40912b:	mov    al,ds:0xef0913d6
  409130:	mov    gs,WORD PTR [ebp+edi*4-0x6e2e24c]
  409137:	cmp    al,0x73
  409139:	in     al,0x77
  40913b:	xor    BYTE PTR [esi-0x2f72d996],cl
  409141:	cli    
  409142:	leave  
  409143:	xchg   esi,eax
  409144:	mov    ebp,0x2e8c62fe
  409149:	xchg   ebx,eax
  40914a:	(bad)  
  40914b:	div    WORD PTR ds:0xadf085df
  409152:	ficomp WORD PTR [edx+edi*4+0xa]
  409156:	test   BYTE PTR [esi+0x5b],al
  409159:	inc    edi
  40915a:	scas   al,BYTE PTR es:[edi]
  40915b:	dec    esi
  40915c:	adc    al,0x32
  40915e:	or     esp,edx
  409160:	popf   
  409161:	jne    0x4091d7
  409163:	aad    0xce
  409165:	arpl   WORD PTR [edx+0x5d],ax
  409168:	pop    es
  409169:	dec    eax
  40916a:	aam    0xe7
  40916c:	in     al,dx
  40916d:	cmp    DWORD PTR [edi+0x54],0x70
  409171:	les    eax,FWORD PTR [ecx-0x50e1ab34]
  409177:	shl    DWORD PTR [eax-0x2f74be9a],0xa7
  40917e:	pop    edi
  40917f:	cdq    
  409180:	fst    st(5)
  409182:	xor    esp,ebp
  409184:	repz push 0x5f
  409187:	push   ebp
  409188:	xchg   ebx,eax
  409189:	jns    0x4091c7
  40918b:	mov    ebx,0x984e22ae
  409190:	adc    ebp,edi
  409192:	es in  al,0x42
  409195:	push   edi
  409196:	adc    BYTE PTR [esi-0x4e93257e],ah
  40919c:	or     BYTE PTR [eax-0x1b],ah
  40919f:	jns    0x40917b
  4091a1:	mov    esp,0x298c4640
  4091a6:	hlt    
  4091a7:	ficomp DWORD PTR [eax-0x3a064e57]
  4091ad:	add    al,0x93
  4091af:	jl     0x4091b6
  4091b1:	mov    WORD PTR [ebx-0x79],?
  4091b4:	pop    edx
  4091b5:	add    edx,0xffffffa1
  4091b8:	mov    dh,0x44
  4091ba:	push   ebx
  4091bb:	and    eax,0x995b64d2
  4091c0:	cmp    DWORD PTR [ecx],0x8ef01cf6
  4091c6:	aas    
  4091c7:	sbb    BYTE PTR [ebp-0x1987a4c7],dh
  4091cd:	aas    
  4091ce:	sbb    ecx,ebx
  4091d0:	dec    ebp
  4091d1:	or     eax,0x70b3e75a
  4091d6:	add    DWORD PTR [ecx-0x1c2a9a0],ebp
  4091dc:	leave  
  4091dd:	gs push ebx
  4091df:	push   esi
  4091e0:	add    BYTE PTR [ebx+0x69],bl
  4091e3:	popa   
  4091e4:	in     al,dx
  4091e5:	xchg   edi,eax
  4091e6:	mov    ah,0xc4
  4091e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e9:	xchg   edi,eax
  4091ea:	xor    al,0x66
  4091ec:	jae    0x4091b0
  4091ee:	loope  0x40921a
  4091f0:	pop    ecx
  4091f1:	out    0x20,eax
  4091f3:	ins    BYTE PTR es:[edi],dx
  4091f4:	or     al,0xb5
  4091f6:	ja     0x4091da
  4091f8:	pushf  
  4091f9:	push   es
  4091fa:	xlat   BYTE PTR ds:[ebx]
  4091fb:	fwait
  4091fc:	add    DWORD PTR [edx+0x1b],0x20147f69
  409203:	popf   
  409204:	fldenv [esi+0x7e]
  409207:	jae    0x409284
  409209:	and    eax,0x6dc2273d
  40920e:	sbb    BYTE PTR [edi-0x49],dh
  409211:	cdq    
  409212:	imul   esp,DWORD PTR [eax+0x6d52905e],0xffffffb4
  409219:	fs aaa 
  40921b:	mov    al,0x4c
  40921d:	cmp    eax,0x1150f5ea
  409222:	jno    0x409201
  409224:	fadd   st(0),st
  409226:	stc    
  409227:	or     cl,BYTE PTR [ebx]
  409229:	or     BYTE PTR [edx+0x27a90ca7],dh
  40922f:	and    dh,0x1
  409232:	test   eax,0x6cb1e6ec
  409237:	stc    
  409238:	sub    DWORD PTR [edi],esp
  40923a:	dec    eax
  40923b:	gs loopne 0x40925e
  40923e:	jbe    0x409298
  409240:	enter  0x2709,0xc3
  409244:	mov    edi,0x51010b97
  409249:	jmp    0x2e984712
  40924e:	inc    eax
  40924f:	ret    
  409250:	das    
  409251:	stos   BYTE PTR es:[edi],al
  409252:	xor    al,al
  409254:	mov    cl,ah
  409256:	jmp    0x6f1e:0xe6cb0dee
  40925d:	sub    BYTE PTR [edi],cl
  40925f:	jb     0x4092b6
  409261:	pusha  
  409262:	lock in eax,dx
  409264:	sub    cl,BYTE PTR [ecx+0x1e981792]
  40926a:	aas    
  40926b:	arpl   WORD PTR [edi+eiz*8+0x3eeb1e8d],sp
  409272:	fcmovnbe st,st(6)
  409274:	lods   eax,DWORD PTR ds:[esi]
  409275:	outs   dx,BYTE PTR ds:[esi]
  409276:	int    0xc1
  409278:	jnp    0x40922f
  40927a:	iretw  
  40927c:	(bad)  
  40927d:	mov    cl,0x9a
  40927f:	xor    DWORD PTR [ebp-0xd],eax
  409282:	aam    0xc3
  409284:	and    ecx,DWORD PTR [edi]
  409286:	sbb    eax,0x63146187
  40928b:	dec    esi
  40928c:	(bad)  
  40928d:	mov    bh,0xd5
  40928f:	xchg   DWORD PTR [ecx],esp
  409291:	ror    BYTE PTR [ebx-0x13],cl
  409294:	(bad)  
  409295:	jle    0x40927d
  409297:	sbb    dh,ch
  409299:	xchg   esp,eax
  40929a:	jecxz  0x4092d0
  40929c:	psrlq  mm1,mm3
  40929f:	sahf   
  4092a0:	adc    BYTE PTR [ecx],0x54
  4092a3:	sahf   
  4092a4:	shl    BYTE PTR [ebp+0x2a],cl
  4092a7:	mov    eax,ds:0x818d642a
  4092ac:	push   0xfffffff6
  4092ae:	(bad)
  4092b2:	int3   
  4092b3:	gs pop ss
  4092b5:	fdivr  QWORD PTR [eax]
  4092b7:	pcmpeqd mm2,QWORD PTR [ebx-0x25]
  4092bb:	mov    ecx,DWORD PTR [ebx-0x6d58ffc5]
  4092c1:	stos   BYTE PTR es:[edi],al
  4092c2:	gs fcomp st(7)
  4092c5:	lock jmp 0x409324
  4092c8:	imul   esp,DWORD PTR [esi+0x29],0x45d05904
  4092cf:	xchg   esp,eax
  4092d0:	aaa    
  4092d1:	cwde   
  4092d2:	pop    ds
  4092d3:	jb     0x4092e4
  4092d5:	lods   eax,DWORD PTR ds:[esi]
  4092d6:	mov    ch,0x24
  4092d8:	nop
  4092d9:	mov    esp,0x26a1d8eb
  4092de:	jb     0x4092bc
  4092e0:	arpl   WORD PTR [ecx],sp
  4092e2:	sub    DWORD PTR [eax-0x729c5afa],eax
  4092e8:	clc    
  4092e9:	sub    DWORD PTR [edx],ecx
  4092eb:	dec    edx
  4092ec:	not    BYTE PTR [edx+0x41]
  4092ef:	test   dh,cl
  4092f1:	scas   al,BYTE PTR es:[edi]
  4092f2:	repnz sbb DWORD PTR [edx-0x73406166],edx
  4092f9:	es push 0x66227994
  4092ff:	xor    dl,BYTE PTR [esi-0x1b]
  409302:	out    0x4c,al
  409304:	lea    esi,[ebp+0x4b3fb88]
  40930a:	mov    eax,0xc64c90f6
  40930f:	xchg   DWORD PTR [edx],ebp
  409311:	xchg   bl,bh
  409313:	js     0x4092b5
  409315:	ja     0x409358
  409317:	not    DWORD PTR [ebx+0x2e]
  40931a:	mov    al,ds:0x3ed88b4
  40931f:	jecxz  0x4092f2
  409321:	push   esi
  409322:	dec    eax
  409323:	jmp    0x44de:0xa6da4b2c
  40932a:	aaa    
  40932b:	mov    dh,0x8c
  40932d:	mov    esp,0x8e37a7c6
  409332:	xchg   ebx,eax
  409333:	and    ah,al
  409335:	push   es
  409336:	sub    dh,BYTE PTR [edx+0x31]
  409339:	adc    dh,dl
  40933b:	stc    
  40933c:	push   esp
  40933d:	cmp    BYTE PTR [ebp+0x1c],bl
  409340:	ret    0x7fdf
  409343:	or     BYTE PTR [edi-0x2260fc98],0xde
  40934a:	jns    0x40937f
  40934c:	lea    ecx,[ebx+edi*1+0x65]
  409350:	fadd   st(1),st
  409352:	sub    BYTE PTR [ebp-0x5f50e8c7],cl
  409358:	mov    al,0xa6
  40935a:	adc    al,0x9b
  40935c:	test   eax,0xce8ab526
  409361:	push   ss
  409362:	popf   
  409363:	into   
  409364:	inc    esi
  409365:	sti    
  409366:	pushf  
  409367:	cmp    al,0x9e
  409369:	(bad)  
  40936a:	imul   BYTE PTR [ecx+0x4fee3432]
  409370:	add    eax,0x426e7149
  409375:	pop    ebx
  409376:	ret    
  409377:	cmp    eax,eax
  409379:	into   
  40937a:	sbb    BYTE PTR [ebx+0x62],dh
  40937d:	inc    edx
  40937e:	pushf  
  40937f:	adc    cl,BYTE PTR [ebx+edx*4]
  409382:	push   edx
  409383:	and    BYTE PTR [edx+ecx*1],bh
  409386:	cmp    DWORD PTR [edi-0x6b],ebx
  409389:	in     eax,0xe8
  40938b:	mov    al,BYTE PTR [ebp+0x7]
  40938e:	mov    esi,0x6a96c18f
  409393:	mov    cl,0x64
  409395:	jae    0x409344
  409397:	cdq    
  409398:	rcl    edi,cl
  40939a:	sbb    al,0x8
  40939c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40939d:	dec    edx
  40939e:	xor    bl,BYTE PTR [ecx]
  4093a0:	cli    
  4093a1:	mov    ch,BYTE PTR [ebx+0x1d8c4a07]
  4093a7:	and    eax,0x17b9225f
  4093ac:	dec    esp
  4093ad:	(bad)  
  4093ae:	int    0x1e
  4093b0:	cli    
  4093b1:	pop    ds
  4093b2:	cmp    eax,0x9931f8e7
  4093b7:	sbb    BYTE PTR [edi-0x12395947],dl
  4093bd:	inc    esi
  4093be:	xor    al,0x1b
  4093c0:	imul   ch
  4093c2:	ror    ah,1
  4093c4:	xchg   esi,eax
  4093c5:	xlat   BYTE PTR ds:[ebx]
  4093c6:	mov    ds:0x7f951d5e,eax
  4093cb:	push   0x2c
  4093cd:	mov    edi,0x145f6361
  4093d2:	xchg   edi,eax
  4093d3:	vunpcklps xmm5,xmm0,XMMWORD PTR [esp+ebx*8]
  4093d8:	push   0xffffffb5
  4093da:	mov    ch,ah
  4093dc:	in     al,dx
  4093dd:	push   cs
  4093de:	fdiv   QWORD PTR [eax]
  4093e0:	mov    al,0xd0
  4093e2:	push   esi
  4093e3:	mov    ds:0x427db323,al
  4093e8:	cdq    
  4093e9:	popf   
  4093ea:	int    0x99
  4093ec:	in     al,dx
  4093ed:	pop    ebp
  4093ee:	inc    ebx
  4093ef:	mov    DWORD PTR [ecx-0x66],esp
  4093f2:	dec    esp
  4093f3:	jae    0x409433
  4093f5:	pop    ecx
  4093f6:	inc    edi
  4093f7:	push   ds
  4093f8:	into   
  4093f9:	mov    ah,0xda
  4093fb:	pop    edi
  4093fc:	retf   0x2927
  4093ff:	jne    0x4093ba
  409401:	adc    ebp,edx
  409403:	outs   dx,BYTE PTR ds:[esi]
  409404:	(bad)
  409407:	gs jecxz 0x4093b2
  40940a:	inc    eax
  40940b:	sbb    al,0xce
  40940d:	xchg   DWORD PTR [ebp*4+0x72c28237],esp
  409414:	sbb    eax,0x88dff589
  409419:	mov    esi,0x210858d5
  40941e:	mov    ch,0x38
  409420:	lods   eax,DWORD PTR ds:[esi]
  409421:	inc    ebx
  409422:	xchg   ebx,eax
  409423:	gs popa 
  409425:	call   0xea96:0xad5bfcf0
  40942c:	mov    gs,WORD PTR [edi]
  40942e:	stos   BYTE PTR es:[edi],al
  40942f:	fistp  QWORD PTR [eax]
  409431:	mov    eax,0xdc488091
  409436:	jae    0x40946d
  409438:	inc    edi
  409439:	or     BYTE PTR [edx+eiz*2],ch
  40943c:	fdivrp st(1),st
  40943e:	xchg   ebp,eax
  40943f:	pop    ds
  409440:	inc    eax
  409441:	out    dx,al
  409442:	jo     0x409459
  409444:	outs   dx,DWORD PTR ds:[esi]
  409445:	inc    ecx
  409446:	bound  edx,QWORD PTR [ebx]
  409448:	scas   eax,DWORD PTR es:[edi]
  409449:	ins    BYTE PTR es:[edi],dx
  40944a:	imul   esi,ecx,0xc5783638
  409450:	pop    ds
  409451:	pop    edi
  409452:	into   
  409453:	mov    edi,eax
  409455:	inc    ebp
  409456:	out    dx,al
  409457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409458:	idiv   edx
  40945a:	xor    dl,ah
  40945c:	xchg   edi,eax
  40945d:	push   es
  40945e:	pop    edx
  40945f:	pusha  
  409460:	sahf   
  409461:	js     0x409407
  409463:	mov    dh,0x6e
  409465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409466:	mov    cl,0xeb
  409468:	call   0xc0e79048
  40946d:	mov    dl,0x4a
  40946f:	scas   eax,DWORD PTR es:[edi]
  409470:	test   BYTE PTR [ecx-0x3b],bh
  409473:	in     eax,dx
  409474:	xchg   ebx,eax
  409475:	std    
  409476:	ins    BYTE PTR es:[edi],dx
  409477:	test   eax,0x7bc0a09b
  40947c:	aaa    
  40947d:	ja     0x40946e
  40947f:	or     eax,0x75ac6ff1
  409484:	mov    bl,bl
  409486:	aas    
  409487:	imul   ah
  409489:	fsubr  st(7),st
  40948b:	jecxz  0x409413
  40948d:	cmc    
  40948e:	sub    al,cl
  409490:	or     eax,0x1eeafcf0
  409495:	sub    dl,BYTE PTR [ebx]
  409497:	dec    ecx
  409498:	pop    ebx
  409499:	fwait
  40949a:	mov    edx,0xccdfad08
  40949f:	(bad)  
  4094a0:	nop
  4094a1:	pop    esi
  4094a2:	les    eax,FWORD PTR [eax+0xfd5f5ec]
  4094a8:	xchg   esp,eax
  4094a9:	mov    DWORD PTR [edx+0x6c997e3c],esp
  4094af:	sbb    ecx,edx
  4094b1:	adc    al,0x6c
  4094b3:	mov    ebp,0x15ab6bee
  4094b8:	ss dec ebp
  4094ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094bb:	pop    ebx
  4094bc:	sbb    DWORD PTR [eax+eax*4],esp
  4094bf:	adc    al,0x51
  4094c1:	push   ebx
  4094c2:	dec    ebx
  4094c3:	fs pop esp
  4094c5:	push   ebp
  4094c6:	jb     0x409452
  4094c8:	es test cl,0x69
  4094cc:	addr16 mov esi,0x44a36bda
  4094d2:	scas   al,BYTE PTR es:[edi]
  4094d3:	popf   
  4094d4:	div    DWORD PTR [eax+0x36d019ed]
  4094da:	inc    ecx
  4094db:	gs push ss
  4094dd:	ror    ah,cl
  4094df:	stos   BYTE PTR es:[edi],al
  4094e0:	int    0x4b
  4094e2:	rcl    bh,cl
  4094e4:	add    BYTE PTR [eax+0x47],cl
  4094e7:	shl    DWORD PTR [edi-0x60],cl
  4094ea:	mov    WORD PTR [edi+eiz*2],fs
  4094ed:	ror    DWORD PTR [ecx-0x3e],0x69
  4094f1:	adc    al,0xc6
  4094f3:	dec    esp
  4094f4:	xor    cl,cl
  4094f6:	sub    eax,0xc54d225a
  4094fb:	mov    al,0xc1
  4094fd:	jno    0x4094c4
  4094ff:	cmp    eax,0x91f0b3dd
  409504:	pop    ecx
  409505:	sbb    BYTE PTR [ebp-0x20],cl
  409508:	cmp    esp,ebp
  40950a:	jne    0x409543
  40950c:	mov    dl,0x99
  40950e:	inc    ecx
  40950f:	add    al,0xf9
  409511:	je     0x409575
  409513:	fisttp QWORD PTR [edi-0x1c]
  409516:	cmp    al,0x20
  409518:	stos   DWORD PTR es:[edi],eax
  409519:	sbb    esi,edx
  40951b:	mov    dh,0x4d
  40951d:	dec    ebx
  40951e:	les    ebp,FWORD PTR [ebx-0x59cfc059]
  409524:	clc    
  409525:	pusha  
  409526:	int3   
  409527:	xchg   ecx,eax
  409528:	dec    ebp
  409529:	jb     0x40959b
  40952b:	lahf   
  40952c:	das    
  40952d:	xchg   esi,eax
  40952e:	in     eax,0xf1
  409530:	fwait
  409531:	bound  ebx,QWORD PTR [eax-0x7c]
  409534:	fdivr  st(2),st
  409536:	and    BYTE PTR [edi],al
  409538:	bound  edi,QWORD PTR [ecx]
  40953a:	adc    eax,0x9372b300
  40953f:	stos   BYTE PTR es:[edi],al
  409540:	inc    ebx
  409541:	mov    BYTE PTR [edi+0x1db71821],dh
  409547:	outs   dx,BYTE PTR ds:[esi]
  409548:	jp     0x4095b7
  40954a:	aaa    
  40954b:	lock mov cl,0xb3
  40954e:	sbb    ch,BYTE PTR [ebp+0x48]
  409551:	inc    edi
  409552:	jecxz  0x409519
  409554:	nop
  409555:	das    
  409556:	cmp    BYTE PTR [esi+0x58a6b3fc],bh
  40955c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40955d:	push   es
  40955e:	sub    BYTE PTR [ebp+0x4b0fca5c],0xdd
  409565:	push   esp
  409566:	dec    ecx
  409567:	sub    DWORD PTR [ecx+0x2a2bb660],ecx
  40956d:	xchg   DWORD PTR [ebx-0x5571af85],esi
  409573:	iret   
  409574:	xchg   esp,eax
  409575:	mov    ebx,0x85e8b41b
  40957a:	div    esi
  40957c:	or     esp,ebp
  40957e:	fs mov ah,0x5b
  409581:	repnz xor al,0x9b
  409584:	retf   0x5153
  409587:	mov    bh,0x53
  409589:	adc    eax,0x64476986
  40958e:	fs push eax
  409590:	adc    ecx,edi
  409592:	test   BYTE PTR [edi],0x4e
  409595:	adc    DWORD PTR [ecx],esp
  409597:	mov    dl,0xe8
  409599:	pop    esi
  40959a:	jecxz  0x409541
  40959c:	loopne 0x4095d4
  40959e:	mov    cl,0x75
  4095a1:	scas   al,BYTE PTR es:[edi]
  4095a2:	outs   dx,BYTE PTR ds:[esi]
  4095a3:	test   DWORD PTR [edx-0x72540721],esi
  4095a9:	mov    bh,0x8b
  4095ab:	mov    al,0x64
  4095ad:	rcl    DWORD PTR [ebp-0x6aeb9d58],cl
  4095b3:	repnz mov ch,0x55
  4095b6:	fwait
  4095b7:	cmp    ch,BYTE PTR [ecx-0x2856aef1]
  4095bd:	icebp  
  4095be:	imul   edi,DWORD PTR [ebp+0x19],0xb898f90e
  4095c5:	adc    BYTE PTR [esi-0x4a74cc12],cl
  4095cb:	iret   
  4095cc:	ja     0x4095dc
  4095ce:	out    0x99,eax
  4095d0:	ins    DWORD PTR es:[edi],dx
  4095d1:	jno    0x4095fb
  4095d3:	mov    ebx,0x59fa4a75
  4095d8:	dec    eax
  4095d9:	lahf   
  4095da:	push   esi
  4095db:	loope  0x409592
  4095dd:	add    al,0x61
  4095df:	push   esp
  4095e0:	(bad)  
  4095e2:	xor    DWORD PTR [ebp+0x46],0x2f
  4095e6:	pop    ds
  4095e7:	sub    eax,DWORD PTR [edx]
  4095e9:	or     al,BYTE PTR [edx-0xe965131]
  4095ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f0:	jp     0x409637
  4095f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f3:	jp     0x40966e
  4095f5:	dec    esi
  4095f6:	and    eax,0xefd2a52
  4095fb:	shl    bl,cl
  4095fd:	jge    0x4095db
  4095ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409600:	ret    
  409601:	cmc    
  409602:	mov    ebx,0x9795e7aa
  409607:	adc    al,ah
  409609:	(bad)  
  40960a:	pop    esp
  40960b:	hlt    
  40960c:	and    DWORD PTR [edx-0x524ae9d9],edx
  409612:	lods   eax,DWORD PTR ds:[esi]
  409613:	out    dx,eax
  409614:	pop    esp
  409615:	(bad)  
  409616:	ret    
  409617:	pop    eax
  409618:	dec    esp
  409619:	or     al,0xee
  40961b:	daa    
  40961c:	push   ebp
  40961d:	mov    ebp,0x29dd63d0
  409622:	mov    cl,0x7
  409624:	(bad)  
  409625:	out    dx,al
  409626:	das    
  409627:	add    BYTE PTR [edi-0x6bd8c7e1],dl
  40962d:	mov    cl,0xb2
  40962f:	and    al,0x12
  409631:	dec    ecx
  409632:	add    DWORD PTR [ecx-0x232feac1],0x625093aa
  40963c:	xchg   ebx,eax
  40963d:	push   ebp
  40963e:	jp     0x40966d
  409640:	xor    al,BYTE PTR [ebp-0x79]
  409643:	pop    edx
  409644:	inc    ebx
  409645:	test   al,0x85
  409647:	hlt    
  409648:	xchg   ebp,eax
  409649:	clc    
  40964a:	stos   DWORD PTR es:[edi],eax
  40964b:	scas   al,BYTE PTR es:[edi]
  40964c:	sub    eax,0x47458ad3
  409651:	nop
  409652:	shl    DWORD PTR [eax+0x3400d31d],cl
  409658:	fwait
  409659:	lods   al,BYTE PTR ds:[esi]
  40965a:	push   es
  40965b:	adc    ebx,DWORD PTR [eax]
  40965d:	std    
  40965e:	(bad)  
  40965f:	xor    al,bh
  409661:	(bad)  
  409662:	cmc    
  409663:	sbb    ebp,0x26
  409666:	xchg   BYTE PTR [esi+eiz*4],ah
  409669:	inc    ecx
  40966a:	out    dx,eax
  40966b:	popf   
  40966c:	setnp  BYTE PTR [esi]
  40966f:	push   esi
  409670:	xor    eax,0x7f8dc09b
  409675:	cwde   
  409676:	jp     0x409633
  409678:	mov    ebx,0x4f0f15cc
  40967d:	push   dx
  40967f:	mov    dl,0x71
  409681:	pop    esp
  409682:	cli    
  409683:	sub    DWORD PTR [edx+ebx*4-0x14],ecx
  409687:	add    BYTE PTR [ebp-0x26],bh
  40968a:	xchg   ebx,eax
  40968b:	repnz cwde 
  40968d:	out    0x9a,al
  40968f:	sbb    ebp,ebx
  409691:	je     0x4096f0
  409693:	leave  
  409694:	lods   al,BYTE PTR ds:[esi]
  409695:	xchg   edx,eax
  409696:	xchg   esi,eax
  409697:	loopne 0x409668
  409699:	sar    DWORD PTR [ecx+0x6b9807f3],0x48
  4096a0:	sbb    eax,esp
  4096a2:	xlat   BYTE PTR ds:[ebx]
  4096a3:	xchg   esp,eax
  4096a4:	add    DWORD PTR [esi+eax*1-0x2a],ebp
  4096a8:	ret    
  4096a9:	push   0x28ab738
  4096ae:	fscale 
  4096b0:	xchg   bh,al
  4096b2:	xchg   esp,eax
  4096b3:	and    al,0x9c
  4096b5:	adc    al,0x69
  4096b7:	and    edi,DWORD PTR [ebp-0x7a9d9a16]
  4096bd:	iret   
  4096be:	gs inc ebx
  4096c0:	pusha  
  4096c1:	inc    esp
  4096c2:	jl     0x4096d4
  4096c4:	dec    esi
  4096c5:	or     DWORD PTR [ebx*1+0x2925ab6c],ecx
  4096cc:	fld    DWORD PTR [edx-0x7b]
  4096cf:	mov    ds:0x1cedc7fe,al
  4096d4:	dec    esi
  4096d5:	xor    ebp,DWORD PTR ds:0x51c0308f
  4096db:	xor    ecx,DWORD PTR [edi]
  4096dd:	imul   esp,DWORD PTR [ecx],0x9420e6dc
  4096e3:	sub    esp,eax
  4096e5:	or     al,0xb3
  4096e7:	inc    esp
  4096e8:	shl    DWORD PTR [ecx+0x53db8250],1
  4096ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f0:	fcomp  DWORD PTR ss:[eax]
  4096f3:	cmp    BYTE PTR [edi+edi*1-0x6c],0xe5
  4096f8:	and    cl,BYTE PTR [esi-0x7c]
  4096fb:	sbb    al,0x66
  4096fd:	scas   al,BYTE PTR es:[edi]
  4096fe:	dec    eax
  4096ff:	xor    DWORD PTR [ebx-0x7078f465],ebx
  409705:	fisubr WORD PTR [eax-0x1313053c]
  40970b:	and    eax,0x243fd2d1
  409710:	(bad)  
  409711:	fstp   QWORD PTR [ebx-0x58]
  409714:	fist   DWORD PTR [edx+0x6f]
  409717:	jecxz  0x4096d9
  409719:	cmovo  edx,DWORD PTR [ecx+0x3882b388]
  409720:	adc    al,0x6d
  409722:	inc    esp
  409723:	fstp   st(1)
  409725:	enter  0x235c,0x5
  409729:	jo     0x409745
  40972b:	lock mov ebx,0x40f2976e
  409731:	dec    edi
  409732:	mov    ebp,ebx
  409734:	sub    ecx,DWORD PTR [eax+ecx*1+0x55]
  409738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409739:	shl    DWORD PTR [ecx],1
  40973b:	adc    ecx,ebx
  40973d:	scas   al,BYTE PTR es:[edi]
  40973e:	shr    DWORD PTR es:[esi],cl
  409741:	cli    
  409742:	in     al,dx
  409743:	or     ebx,DWORD PTR [edi-0x15fdb19b]
  409749:	das    
  40974a:	scas   al,BYTE PTR es:[edi]
  40974b:	fld    QWORD PTR [eax+0x4cc63dfd]
  409751:	xchg   esi,eax
  409752:	aad    0x98
  409754:	or     eax,0xeb88f124
  409759:	test   al,0x33
  40975b:	push   ss
  40975c:	sub    bl,BYTE PTR [esi+ebp*2-0x32]
  409760:	dec    ebx
  409761:	mov    cl,0x7f
  409763:	mov    ds:0xa78ad16b,eax
  409768:	or     eax,0x5531612b
  40976d:	fcomp  DWORD PTR [edx+0x7e]
  409770:	popw   ds
  409772:	lock loop 0x40975a
  409775:	daa    
  409776:	or     edx,DWORD PTR [eax-0x4f04d451]
  40977c:	fwait
  40977d:	xchg   esi,eax
  40977e:	cs dec edx
  409780:	mov    edx,0xb7157a46
  409785:	iret   
  409786:	fbstp  TBYTE PTR [edi]
  409788:	add    eax,0x68af6352
  40978d:	inc    esi
  40978e:	adc    eax,0xd08db10f
  409793:	loopne 0x409758
  409795:	mov    ebx,0x2d82523f
  40979a:	fimul  WORD PTR [esi]
  40979c:	lock popa 
  40979e:	je     0x4097ae
  4097a0:	cdq    
  4097a1:	dec    esi
  4097a2:	xchg   DWORD PTR [ebx+ebx*8],edx
  4097a5:	stc    
  4097a6:	xchg   ecx,eax
  4097a7:	inc    ecx
  4097a8:	in     eax,dx
  4097a9:	sbb    dh,0x60
  4097ac:	jecxz  0x409803
  4097ae:	push   cs
  4097af:	sub    eax,0x46ceb405
  4097b4:	loop   0x409754
  4097b6:	bound  esp,QWORD PTR [ebx-0x7253dc73]
  4097bc:	test   al,0xf7
  4097be:	inc    ebp
  4097bf:	mov    ch,0xc
  4097c1:	sub    eax,0x4d20f2ba
  4097c6:	and    eax,0xf3c0b7e8
  4097cb:	(bad)  [esi+0x6f5e291d]
  4097d1:	(bad)
  4097d6:	jbe    0x4097c7
  4097d8:	in     eax,dx
  4097d9:	push   ebp
  4097da:	sub    BYTE PTR [edx-0x1a],ah
  4097dd:	xchg   ecx,eax
  4097de:	ins    DWORD PTR es:[edi],dx
  4097df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e0:	pop    edi
  4097e1:	push   ds
  4097e2:	cwde   
  4097e3:	cdq    
  4097e4:	cdq    
  4097e5:	mov    bl,BYTE PTR ss:[ebx]
  4097e8:	sub    DWORD PTR [ebp-0x5c203368],edx
  4097ee:	adc    al,0xfa
  4097f0:	xor    DWORD PTR [ebx-0x51],0xd547307
  4097f7:	push   edx
  4097f8:	and    DWORD PTR [esi+0x6f],edi
  4097fb:	ret    
  4097fc:	mov    bl,0xae
  4097fe:	pop    es
  4097ff:	fisttp WORD PTR [edi+0x11a7634]
  409805:	cdq    
  409806:	sbb    ebp,DWORD PTR [edx-0x2a060620]
  40980c:	pop    ecx
  40980d:	xchg   edx,eax
  40980e:	div    BYTE PTR [edi+0x47]
  409811:	mov    edx,0x99ccc822
  409816:	sar    edx,cl
  409818:	(bad)  
  409819:	ud1    esp,DWORD PTR [edi+0x5d]
  40981d:	fs (bad) 
  409820:	shl    BYTE PTR [edx+0x542fb7c1],1
  409826:	jp     0x409866
  409828:	xor    BYTE PTR [edi+esi*2-0x2b17b711],0x65
  409830:	repz les edx,FWORD PTR [edx+esi*2-0x3f0f30ed]
  409838:	repz scas al,BYTE PTR es:[edi]
  40983a:	cdq    
  40983b:	xchg   BYTE PTR [eax+0x37],ch
  40983e:	cmp    BYTE PTR [eax+0x31],ah
  409841:	pop    ds
  409842:	sbb    ah,BYTE PTR [edi]
  409844:	frstor [ecx+0x69]
  409847:	xchg   edi,eax
  409848:	sub    ebx,esi
  40984a:	into   
  40984b:	cld    
  40984c:	outs   dx,DWORD PTR ds:[esi]
  40984d:	mov    eax,0xdb612cf2
  409852:	call   0x1da8:0x1e98a7f3
  409859:	cmp    al,0x16
  40985b:	shl    BYTE PTR [ebp-0x66],0xd6
  40985f:	push   eax
  409860:	ret    
  409861:	sub    esp,DWORD PTR [ebx-0x42]
  409864:	sbb    BYTE PTR cs:[ebx+0x2d],0x23
  409869:	push   ss
  40986a:	add    bh,BYTE PTR [edi]
  40986c:	fimul  WORD PTR [ebx+0x1d81b494]
  409872:	add    dl,al
  409874:	cld    
  409875:	(bad)  
  409876:	and    ebx,DWORD PTR [esi]
  409878:	test   DWORD PTR [ecx+0x73],esp
  40987b:	sub    eax,0xe9813553
  409880:	int3   
  409881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409882:	dec    edi
  409883:	cmovae edx,DWORD PTR ds:0x3ac66b2b
  40988a:	sub    BYTE PTR [ebp-0x738e190],ah
  409890:	sbb    al,al
  409892:	popa   
  409893:	jle    0x40989c
  409895:	or     eax,0x28f96606
  40989a:	imul   ebp,DWORD PTR [ebp+0x6f815f3d],0xcf13baaf
  4098a4:	test   eax,0x5244af5e
  4098a9:	out    dx,eax
  4098aa:	inc    ebp
  4098ab:	adc    DWORD PTR [eax-0x4acd8d03],ecx
  4098b1:	repz shr BYTE PTR [ecx+0x17b52440],1
  4098b8:	hlt    
  4098b9:	push   esi
  4098ba:	bound  edi,QWORD PTR [ecx-0x2444bb2a]
  4098c0:	outs   dx,BYTE PTR ds:[esi]
  4098c1:	pop    ebx
  4098c2:	sub    DWORD PTR [esi-0x4c],ebx
  4098c5:	xlat   BYTE PTR ds:[ebx]
  4098c6:	push   ebx
  4098c7:	sub    DWORD PTR [eax+ebp*4-0x3706903e],edi
  4098ce:	test   al,0x98
  4098d0:	mov    ?,WORD PTR [edi+0x2c765fa8]
  4098d6:	rol    BYTE PTR [ebp+0x7c],1
  4098d9:	cld    
  4098da:	test   eax,0xa967223
  4098df:	test   cl,dl
  4098e1:	cmp    BYTE PTR [esi],dh
  4098e3:	xchg   esp,eax
  4098e4:	add    DWORD PTR [edx],ebx
  4098e6:	or     dh,BYTE PTR [ebp-0x1a7af311]
  4098ec:	repz loopne 0x4098d5
  4098ef:	mov    dh,0x66
  4098f1:	sbb    DWORD PTR [ecx-0x4161b747],esp
  4098f7:	iret   
  4098f8:	cmp    ebp,DWORD PTR [ecx+0x27]
  4098fb:	mov    ebx,0x21ca5a10
  409900:	out    dx,eax
  409901:	sub    BYTE PTR [ebx],dh
  409903:	mov    bl,0xaa
  409905:	lock adc BYTE PTR [edi-0x4b],0x68
  40990a:	jle    0x4098a7
  40990c:	addr16 push 0x66
  40990f:	or     al,0x79
  409911:	das    
  409912:	push   eax
  409913:	call   0x5f1fa7c9
  409918:	test   BYTE PTR [eax],bl
  40991a:	dec    edi
  40991b:	mov    al,ds:0x3ff3ff24
  409920:	mov    eax,0x8983f7ba
  409925:	xor    DWORD PTR [eax],eax
  409927:	xlat   BYTE PTR ds:[ebx]
  409928:	das    
  409929:	mov    DWORD PTR [ebp+0x2ec9d52c],esi
  40992f:	rol    BYTE PTR [eax],1
  409931:	push   ecx
  409932:	jp     0x409946
  409934:	cdq    
  409935:	ja     0x409911
  409937:	cmp    DWORD PTR [ebx],esi
  409939:	test   eax,0x1856f34f
  40993e:	imul   ebp,ebp,0xbd800e0a
  409944:	ret    0xb8e8
  409947:	fsubr  st(7),st
  409949:	mov    edx,ecx
  40994b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40994c:	mov    edi,0xad7d91f1
  409951:	fwait
  409952:	ss xchg esp,eax
  409954:	fsubr  st,st(3)
  409956:	(bad)  
  409959:	ja     0x4098f0
  40995b:	adc    ebp,DWORD PTR [ebx-0x20329d0f]
  409961:	in     al,0x5f
  409963:	push   ebx
  409964:	fs lahf 
  409966:	out    0xfb,al
  409968:	js     0x40995f
  40996a:	nop
  40996b:	push   ds
  40996c:	outs   dx,DWORD PTR ds:[esi]
  40996d:	out    0x29,eax
  40996f:	lods   al,BYTE PTR ds:[esi]
  409970:	int    0x5d
  409972:	mov    cl,0xca
  409974:	inc    ebp
  409975:	dec    edx
  409976:	sbb    edx,ebx
  409978:	sub    ch,ch
  40997a:	int3   
  40997b:	dec    ebp
  40997c:	call   DWORD PTR [edi]
  40997e:	pop    ds
  40997f:	pop    ds
  409980:	gs (bad) 
  409982:	push   ss
  409983:	or     BYTE PTR [ebx-0x2b],0xe1
  409987:	adc    eax,0x1472b35e
  40998c:	add    DWORD PTR [edx-0x17],eax
  40998f:	sub    DWORD PTR [ecx+ebp*2-0x6f],esp
  409993:	jno    0x4099f9
  409995:	or     eax,ecx
  409997:	cwde   
  409998:	cmc    
  409999:	inc    ecx
  40999a:	sahf   
  40999b:	jno    0x4099da
  40999d:	xchg   edx,eax
  40999e:	pop    ecx
  40999f:	inc    edi
  4099a0:	push   esi
  4099a1:	in     eax,0x4f
  4099a3:	cmp    ch,0x30
  4099a6:	inc    esp
  4099a7:	mov    eax,ss:0x1c2e299b
  4099ad:	jmp    0xf23463e8
  4099b2:	pop    esi
  4099b3:	jp     0x40998d
  4099b5:	(bad)  
  4099b6:	push   ebx
  4099b7:	(bad)  
  4099b9:	xor    edi,esi
  4099bb:	jmp    0x4099dd
  4099bd:	sar    BYTE PTR [edi],cl
  4099bf:	lock push ebp
  4099c1:	ror    dl,cl
  4099c3:	pop    ss
  4099c4:	push   0x834390b
  4099c9:	mov    ebx,0x6e0166df
  4099ce:	jg     0x409a02
  4099d0:	jae    0x4099f8
  4099d2:	fcom   DWORD PTR [esi+0x69]
  4099d5:	xlat   BYTE PTR ds:[ebx]
  4099d6:	jl     0x409970
  4099d8:	jge    0x40995b
  4099da:	loope  0x409988
  4099dc:	add    BYTE PTR [ecx+0x5c8959f],ch
  4099e2:	ds pop es
  4099e4:	gs mov ah,0x1e
  4099e7:	pop    ebp
  4099e8:	mov    ebx,0x17aea592
  4099ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099ee:	xchg   edx,eax
  4099ef:	in     al,0x21
  4099f1:	cmp    BYTE PTR [ebx],ch
  4099f3:	lahf   
  4099f4:	dec    esp
  4099f5:	mov    eax,0xf45641ef
  4099fa:	sbb    esp,DWORD PTR [ebx-0x20106c5f]
  409a00:	aaa    
  409a01:	and    eax,DWORD PTR [ebp+0x63]
  409a04:	mov    eax,ds:0x2093a34b
  409a09:	mov    bl,0xa2
  409a0b:	dec    BYTE PTR [edi-0xb]
  409a0e:	inc    edx
  409a0f:	jmp    0x7d4:0xe7959532
  409a16:	in     eax,0xef
  409a18:	mov    cs,WORD PTR [ecx-0x2bfac09]
  409a1e:	addr16 (bad) 
  409a20:	rcr    esi,1
  409a22:	daa    
  409a23:	test   eax,0x1f80e479
  409a28:	sub    DWORD PTR [ebx],ecx
  409a2a:	mov    gs,WORD PTR [eax-0x45e68930]
  409a30:	sbb    bl,dl
  409a32:	push   0x865e143e
  409a37:	jb     0x409a36
  409a39:	pop    ss
  409a3a:	push   ecx
  409a3b:	push   ecx
  409a3c:	add    edx,esp
  409a3e:	jne    0x409a22
  409a40:	repnz sahf 
  409a42:	sub    edi,esp
  409a44:	mov    al,0x32
  409a46:	jle    0x4099d6
  409a48:	pop    edi
  409a49:	cmp    eax,0x4d9ce33c
  409a4e:	mov    ebp,0x6365654e
  409a53:	cmp    al,0x50
  409a55:	xchg   ecx,eax
  409a56:	popa   
  409a57:	sub    ecx,DWORD PTR [ebp+0x31]
  409a5a:	call   0x5c25:0x57148dba
  409a61:	or     bl,BYTE PTR [esi-0x718cefa1]
  409a67:	leave  
  409a68:	xor    ch,BYTE PTR [ebx]
  409a6a:	ds cs gs loop 0x409ad1
  409a6f:	sub    DWORD PTR [edi],ecx
  409a71:	retf   
  409a72:	es cmc 
  409a74:	dec    ebx
  409a75:	shr    DWORD PTR ds:0xe42f616b,0xb3
  409a7c:	push   edi
  409a7d:	push   ebx
  409a7f:	aam    0x1b
  409a81:	(bad)  [edx+0x61]
  409a84:	jno    0x409a8e
  409a86:	cmp    ecx,DWORD PTR [ebx-0x73d12ce5]
  409a8c:	inc    ebp
  409a8d:	xor    DWORD PTR [ebp-0x7c],ecx
  409a90:	or     edx,esi
  409a92:	mov    eax,0x80ec4092
  409a97:	pop    ebp
  409a98:	imul   ebp,DWORD PTR [eax],0xf50b9c88
  409a9e:	xor    cl,ch
  409aa0:	jo     0x409a32
  409aa2:	mov    bh,0xe3
  409aa4:	push   ebp
  409aa5:	(bad)  
  409aa6:	push   0xffffff91
  409aa8:	pop    edi
  409aa9:	shl    esp,cl
  409aab:	push   esi
  409aac:	mov    ds:0xcd99a39c,eax
  409ab1:	mov    ebx,0xa6a191fb
  409ab6:	daa    
  409ab7:	in     eax,0x9
  409ab9:	add    eax,0x9a6d0eb9
  409abe:	gs (bad) 
  409ac0:	fmulp  st(0),st
  409ac2:	cmc    
  409ac3:	outs   dx,DWORD PTR ds:[esi]
  409ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac5:	(bad)  
  409ac6:	stos   DWORD PTR es:[edi],eax
  409ac7:	inc    eax
  409ac8:	mov    bh,0x5a
  409aca:	int3   
  409acb:	push   esi
  409acc:	aaa    
  409acd:	fwait
  409ace:	addr16 imul ebx,DWORD PTR [bp+si],0x7b9ce01
  409ad6:	js     0x409ae6
  409ad8:	imul   ebx,DWORD PTR [ebx+0x514f312f],0xffffffa5
  409adf:	jno    0x409b47
  409ae1:	sbb    al,0x5c
  409ae3:	nop
  409ae4:	mov    bl,0xc3
  409ae6:	pop    ebp
  409ae7:	mov    al,0xb2
  409ae9:	pop    ebp
  409aea:	jo     0x409ae2
  409aec:	add    DWORD PTR [eax+0x5b97bfb],0x38be1ea3
  409af6:	sbb    eax,0x373eda8c
  409afb:	dec    esi
  409afc:	in     eax,dx
  409afd:	imul   edi,DWORD PTR [ecx],0x52
  409b00:	pop    ds
  409b01:	cmp    al,0x2c
  409b03:	jo     0x409b3c
  409b05:	stos   DWORD PTR es:[edi],eax
  409b06:	clc    
  409b07:	loopne 0x409b0a
  409b09:	aam    0x98
  409b0b:	lea    eax,[ecx-0x480a901a]
  409b11:	sub    BYTE PTR [eax-0x45],0xbc
  409b15:	outs   dx,DWORD PTR ds:[esi]
  409b16:	fs (bad) 
  409b18:	cmp    eax,DWORD PTR [ebp+0x4df0eac9]
  409b1e:	mov    edi,gs
  409b20:	push   eax
  409b21:	and    eax,0xe692e4d7
  409b26:	(bad)  
  409b27:	std    
  409b28:	ficomp WORD PTR [ebp+ebx*4-0x59]
  409b2c:	mov    ebp,0xc8bd4280
  409b31:	adc    DWORD PTR [ecx+0x6afa8cd9],ecx
  409b37:	inc    esp
  409b38:	pop    ecx
  409b39:	test   eax,0x313a6e08
  409b3e:	aas    
  409b3f:	loope  0x409b60
  409b41:	repz aam 0xf4
  409b44:	pop    ebx
  409b45:	loopne 0x409aed
  409b47:	stos   BYTE PTR es:[edi],al
  409b48:	add    al,0x15
  409b4a:	dec    esi
  409b4b:	or     edi,0x1ce423ac
  409b51:	jo     0x409b0b
  409b53:	sub    BYTE PTR [esi+0x4c],bl
  409b56:	inc    esi
  409b57:	xchg   ebp,eax
  409b58:	xchg   ecx,ebp
  409b5a:	dec    esp
  409b5b:	and    eax,0x1f6aa53f
  409b60:	inc    edi
  409b61:	popf   
  409b62:	add    eax,0x6998ec91
  409b67:	shl    DWORD PTR [eax+0x7d],1
  409b6a:	jg     0x409b2b
  409b6c:	lea    edi,[edx+ebp*8]
  409b6f:	add    al,0xbc
  409b71:	and    BYTE PTR [ebp+0x29c7cbf7],bl
  409b77:	and    eax,0x74f3ec26
  409b7c:	mov    bl,0xd
  409b7e:	xchg   DWORD PTR [ebx+0x67d34f73],edi
  409b84:	aad    0x66
  409b86:	sti    
  409b87:	cmp    ebx,DWORD PTR [ecx]
  409b89:	pop    eax
  409b8a:	bnd js 0x409bf4
  409b8d:	cmp    bl,al
  409b8f:	or     ecx,DWORD PTR [edx]
  409b91:	inc    edx
  409b92:	out    0xe,al
  409b94:	xor    ah,al
  409b96:	pmuludq mm5,mm6
  409b99:	sahf   
  409b9a:	retf   0xc3b
  409b9d:	mov    cs,edi
  409b9f:	jb     0x409bd8
  409ba1:	daa    
  409ba2:	outs   dx,DWORD PTR ds:[esi]
  409ba3:	xor    ecx,ebx
  409ba5:	sub    eax,0xf7b90b60
  409baa:	or     ebp,esp
  409bac:	pop    edi
  409bad:	ret    0x4fdc
  409bb0:	mov    esi,0x11409ed3
  409bb5:	inc    ebp
  409bb6:	mov    esi,0xd8efc9b3
  409bbb:	not    DWORD PTR [esi+0x697086c8]
  409bc1:	push   ebx
  409bc2:	repz mov cl,0xe6
  409bc5:	xchg   edx,eax
  409bc6:	fisubr WORD PTR [ebp-0x58]
  409bc9:	mov    gs:0x62d8c16a,al
  409bcf:	mov    eax,ds:0xe83eec94
  409bd4:	pop    es
  409bd5:	push   cs
  409bd6:	mov    ds,ebx
  409bd8:	add    DWORD PTR [eax],edx
  409bda:	stos   DWORD PTR es:[edi],eax
  409bdb:	push   edi
  409bdc:	push   eax
  409bdd:	ds dec ebp
  409bdf:	js     0x409ba2
  409be1:	pop    ebx
  409be2:	mov    eax,ds:0x170b915f
  409be7:	(bad)  
  409beb:	std    
  409bec:	pop    ds
  409bed:	les    ebx,FWORD PTR [edi]
  409bef:	push   esp
  409bf0:	pop    ebx
  409bf1:	add    al,0x65
  409bf3:	pop    esi
  409bf4:	sbb    ebx,edi
  409bf6:	aam    0x65
  409bf8:	cmp    bl,BYTE PTR [edx+0x7]
  409bfb:	jne    0x409c5c
  409bfd:	fsubr  DWORD PTR [ecx-0x7d936439]
  409c03:	pop    edi
  409c04:	cmp    al,0xf3
  409c06:	jbe    0x409c0f
  409c08:	add    ch,dl
  409c0a:	(bad)  
  409c0b:	icebp  
  409c0c:	leave  
  409c0d:	(bad)  
  409c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c10:	inc    esp
  409c11:	push   cs
  409c12:	loope  0x409be3
  409c14:	pop    ebp
  409c15:	sbb    dl,bh
  409c17:	hlt    
  409c18:	std    
  409c19:	push   0xffffff97
  409c1b:	dec    ebp
  409c1c:	pop    es
  409c1d:	sub    eax,0x71a6ccc3
  409c22:	xchg   BYTE PTR [esi],bh
  409c24:	push   edx
  409c25:	(bad)  
  409c26:	aad    0x97
  409c28:	ja     0x409c5b
  409c2a:	push   edx
  409c2b:	pop    es
  409c2c:	scas   eax,DWORD PTR es:[edi]
  409c2d:	adc    DWORD PTR [edx+0x49db590],eax
  409c33:	arpl   WORD PTR [ecx-0x7ca7bcfe],ax
  409c39:	rcr    BYTE PTR [esi+0x53],1
  409c3c:	sub    al,0xdb
  409c3e:	inc    esp
  409c3f:	xchg   esi,eax
  409c40:	loope  0x409bdb
  409c42:	imul   esp,DWORD PTR [ecx-0x5e04029b],0xde059fba
  409c4c:	icebp  
  409c4d:	and    bl,al
  409c4f:	repnz imul eax,DWORD PTR [esi+0x60],0xffffffee
  409c54:	pushf  
  409c55:	out    dx,al
  409c56:	bound  edx,QWORD PTR [ecx+esi*8+0x21996d69]
  409c5d:	mov    cl,0x84
  409c5f:	popf   
  409c60:	xor    DWORD PTR fs:[eax-0x609a9975],ebp
  409c67:	push   eax
  409c68:	jmp    0xb6bcbb47
  409c6d:	push   esi
  409c6e:	sub    edi,ecx
  409c70:	push   ds
  409c71:	fst    QWORD PTR [esi-0x7]
  409c74:	loop   0x409ce3
  409c76:	call   0x6f2e:0x3d89fcd6
  409c7d:	add    eax,0xf5fb07f7
  409c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c83:	test   eax,0x430f9cdf
  409c88:	outs   dx,BYTE PTR ds:[esi]
  409c89:	add    al,0x87
  409c8b:	push   0xffffff8a
  409c8d:	jno    0x409d0e
  409c8f:	adc    al,BYTE PTR [esi+edx*1-0x18]
  409c93:	inc    esp
  409c94:	push   esp
  409c95:	sbb    dh,bh
  409c97:	aam    0xea
  409c99:	es stos DWORD PTR es:[edi],eax
  409c9b:	sar    DWORD PTR [esi+0x29906525],0x76
  409ca2:	cs out 0x40,al
  409ca5:	adc    bh,BYTE PTR ds:[edi+ecx*4-0x34613139]
  409cad:	push   ebp
  409cae:	loopne 0x409ca8
  409cb0:	(bad)
  409cb3:	inc    ebp
  409cb4:	add    eax,0xb6b587e0
  409cb9:	imul   edx,ecx,0x35
  409cbc:	xchg   ebx,eax
  409cbd:	xchg   ebp,eax
  409cbe:	sbb    ch,bh
  409cc0:	mov    bl,0x1b
  409cc2:	std    
  409cc3:	cmp    esp,DWORD PTR [ebx+edx*4]
  409cc6:	sbb    eax,0x8c571b6b
  409ccb:	repnz lds eax,FWORD PTR [eax]
  409cce:	mov    bh,0x80
  409cd0:	rcr    ah,0x75
  409cd3:	(bad)  
  409cd4:	out    0x17,eax
  409cd6:	imul   esp,DWORD PTR [edx-0x6b63c8e8],0x38188499
  409ce0:	pop    ebp
  409ce1:	fwait
  409ce2:	nop
  409ce3:	rcr    DWORD PTR [ecx-0x42],1
  409ce6:	mov    ch,BYTE PTR [eax+0xd]
  409ce9:	imul   edi,ebp,0xfc0a8b7b
  409cef:	dec    ecx
  409cf0:	jns    0x409d5d
  409cf2:	loop   0x409cad
  409cf4:	sbb    eax,0x8fb5d12c
  409cf9:	fsubr  QWORD PTR [edi]
  409cfb:	mov    es,WORD PTR [ebx]
  409cfd:	iret   
  409cfe:	repz scas eax,DWORD PTR es:[edi]
  409d00:	or     BYTE PTR [eax+0x69347490],bl
  409d06:	sub    BYTE PTR [edx+0x7a],0xac
  409d0a:	and    BYTE PTR [edi+0x62],0x32
  409d0e:	mov    ebx,0x7dd4fec5
  409d13:	fist   DWORD PTR [edx]
  409d15:	cmp    BYTE PTR [esi],cl
  409d17:	fldenv [eax]
  409d19:	or     dh,ah
  409d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d1c:	adc    DWORD PTR ds:[eax+0xb],esi
  409d20:	mov    ebx,0x6b65be7e
  409d25:	fidiv  WORD PTR [edi-0x55]
  409d28:	test   eax,0xe18435c0
  409d2d:	retf   
  409d2e:	push   ebx
  409d2f:	dec    edx
  409d30:	call   0xab33:0xe64c5712
  409d37:	pop    ss
  409d38:	push   ebp
  409d3a:	or     WORD PTR [edx],bp
  409d3d:	clc    
  409d3e:	call   0x1cae:0x95bd4445
  409d45:	rcl    al,cl
  409d47:	ss add ch,ah
  409d4a:	push   edx
  409d4b:	popf   
  409d4c:	stos   DWORD PTR es:[edi],eax
  409d4d:	popa   
  409d4e:	into   
  409d4f:	in     eax,dx
  409d50:	jns    0x409dae
  409d52:	lea    edi,[edx+0x58]
  409d55:	(bad)  
  409d56:	hlt    
  409d57:	mov    esp,0x6834803
  409d5c:	psubd  mm2,QWORD PTR [ecx+0x44668d04]
  409d63:	mov    DWORD PTR [edx],ebx
  409d65:	xor    dh,BYTE PTR [eax-0x4c265f06]
  409d6b:	jbe    0x409d2d
  409d6d:	in     al,dx
  409d6e:	(bad)  
  409d6f:	xlat   BYTE PTR ds:[ebx]
  409d70:	xor    cl,BYTE PTR [ecx*2-0x1e7bf5fa]
  409d77:	lods   al,BYTE PTR ds:[esi]
  409d78:	jg     0x409d2d
  409d7a:	std    
  409d7b:	add    eax,0x6abec6c8
  409d80:	adc    BYTE PTR [esi-0x25],cl
  409d83:	pushf  
  409d84:	mov    ebx,0xe6f97bdb
  409d89:	inc    esi
  409d8a:	ret    
  409d8b:	popf   
  409d8c:	in     eax,dx
  409d8d:	test   eax,0xcb809e9
  409d92:	push   ds
  409d93:	jno    0x409da1
  409d95:	push   esp
  409d96:	mov    eax,0x5d2c4ad9
  409d9b:	mov    esp,0x626c4e78
  409da0:	jecxz  0x409d89
  409da2:	xor    DWORD PTR [ecx+ecx*8-0x5e],edi
  409da6:	fwait
  409da7:	(bad)  
  409da8:	pop    esi
  409da9:	lock inc esp
  409dab:	outs   dx,BYTE PTR ds:[esi]
  409dac:	das    
  409dad:	inc    esp
  409dae:	enter  0x38cf,0x28
  409db2:	dec    edi
  409db3:	fwait
  409db4:	call   0xb43d:0x35e047dc
  409dbb:	xchg   edx,eax
  409dbc:	mov    ch,0x22
  409dbe:	pop    esi
  409dbf:	in     eax,0xda
  409dc1:	xor    eax,0x7edbb826
  409dc6:	sar    DWORD PTR [esi+0x64a4a578],1
  409dcc:	lds    ecx,FWORD PTR [esi-0x4]
  409dcf:	push   0xfc4d6e82
  409dd4:	pop    ss
  409dd5:	aad    0x95
  409dd7:	outs   dx,DWORD PTR ds:[esi]
  409dd8:	jns    0x409d79
  409dda:	into   
  409ddb:	fisttp QWORD PTR [ebx+0x6acb3321]
  409de1:	cld    
  409de2:	lock retf 0x776d
  409de6:	lods   eax,DWORD PTR ds:[esi]
  409de7:	pop    ebx
  409de8:	add    dh,BYTE PTR [eax+ecx*8]
  409deb:	repnz stc 
  409ded:	ds xor eax,0x2d669a03
  409df3:	or     dh,bl
  409df5:	shl    DWORD PTR ds:0xb40171ce,0x8
  409dfc:	mov    ebp,0x8a8769c3
  409e01:	sub    al,0xd0
  409e03:	shl    BYTE PTR ds:0x19e25d58,cl
  409e09:	inc    edx
  409e0a:	out    0x31,al
  409e0c:	pop    ss
  409e0d:	hlt    
  409e0e:	jmp    DWORD PTR [eax]
  409e10:	adc    BYTE PTR [ebx+0x63],ah
  409e13:	inc    edx
  409e14:	or     ecx,edx
  409e16:	out    dx,eax
  409e17:	mov    ebp,0xed161938
  409e1c:	psubq  mm7,QWORD PTR [ecx]
  409e1f:	mov    bh,0xa4
  409e21:	push   0xffffff8b
  409e23:	mov    eax,0x161446dc
  409e28:	int3   
  409e29:	into   
  409e2a:	aam    0xf
  409e2c:	mov    eax,DWORD PTR [ebx-0x4ee6d7a1]
  409e32:	rol    DWORD PTR [ecx],1
  409e34:	mov    bl,bl
  409e36:	fdiv   QWORD PTR [edx+0x6b]
  409e39:	sbb    edx,DWORD PTR [ecx]
  409e3b:	pop    edi
  409e3c:	mov    eax,ds:0x603853bd
  409e41:	mov    esp,0x9502116e
  409e46:	ret    0xd8fb
  409e49:	aad    0xcc
  409e4b:	push   esi
  409e4c:	scas   al,BYTE PTR es:[edi]
  409e4d:	jns    0x409e44
  409e4f:	pushf  
  409e50:	add    BYTE PTR [ebx+0x4c3646e9],dl
  409e56:	adc    eax,0x6ff7e0ec
  409e5b:	jl     0x409dfc
  409e5d:	test   DWORD PTR [eax+0x1f],esi
  409e60:	mov    ebp,0x4b7ab5e2
  409e65:	sub    al,0x49
  409e67:	jp     0x409e1d
  409e69:	leave  
  409e6a:	mov    ebx,0x130972c
  409e6f:	stc    
  409e70:	push   edx
  409e71:	and    eax,0x1badecc5
  409e76:	repnz aas 
  409e78:	loope  0x409eb8
  409e7a:	adc    eax,0x7945436e
  409e7f:	mov    bh,0xa4
  409e81:	mov    ?,esp
  409e83:	iret   
  409e84:	and    ah,bl
  409e86:	xchg   edi,eax
  409e87:	mov    eax,ds:0xe612060a
  409e8c:	enter  0xe251,0x91
  409e90:	sbb    cl,BYTE PTR [esi+esi*1+0x1fec22c1]
  409e97:	es mov dl,0xdd
  409e9a:	dec    esi
  409e9b:	mov    eax,0x92be9c9d
  409ea0:	mov    bh,0xc9
  409ea2:	dec    esi
  409ea3:	mov    cl,0x5e
  409ea5:	shr    bl,cl
  409ea7:	lahf   
  409ea8:	pop    ds
  409ea9:	addr16 call 0x8f4a:0x836f2a8c
  409eb1:	imul   esp,DWORD PTR [esp+eiz*4-0x23c452e2],0x466ba1
  409ebc:	inc    eax
  409ebd:	stos   BYTE PTR es:[edi],al
  409ebe:	lods   eax,DWORD PTR ds:[esi]
  409ebf:	enter  0x8041,0x32
  409ec3:	cmp    bl,BYTE PTR [edi+0x1acc24]
  409ec9:	clc    
  409eca:	shl    DWORD PTR [ebp-0x27e4d8d2],cl
  409ed0:	js     0x409eb6
  409ed2:	lea    eax,[ecx+0x5b]
  409ed5:	bound  esi,QWORD PTR [edi]
  409ed7:	mov    edi,0xdfffc519
  409edc:	or     edi,DWORD PTR [edx]
  409ede:	outs   dx,DWORD PTR ds:[esi]
  409edf:	in     al,0x74
  409ee1:	mov    ch,0xb9
  409ee3:	cmp    DWORD PTR [edi+eax*4+0x1d],ebx
  409ee7:	jb     0x409ecd
  409ee9:	mov    bl,0xa0
  409eeb:	pusha  
  409eec:	outs   dx,DWORD PTR ds:[esi]
  409eed:	str    WORD PTR [edx]
  409ef0:	mov    ch,0xde
  409ef2:	push   0xffffffe6
  409ef4:	fsubr  st(4),st
  409ef6:	fmul   QWORD PTR [ebp+eax*2-0x6c1016a2]
  409efd:	shl    DWORD PTR [edx+0x78fc17fc],0xe1
  409f04:	rcr    BYTE PTR [ecx+0x30],1
  409f07:	mov    eax,ds:0xe508dfb8
  409f0c:	xor    eax,0xc26c9f38
  409f11:	mov    eax,0x2596d010
  409f16:	aas    
  409f17:	dec    eax
  409f18:	lock dec eax
  409f1a:	cmp    DWORD PTR [eax+0x782066e7],edx
  409f20:	and    al,0x51
  409f22:	mov    bh,0x8d
  409f24:	pop    ebp
  409f25:	mov    al,0xa3
  409f27:	push   0xfffffffe
  409f29:	pop    esi
  409f2a:	les    eax,FWORD PTR [ebp+0x7f]
  409f2d:	pop    esp
  409f2e:	pop    esi
  409f2f:	les    ebp,FWORD PTR [ebx-0x650cae56]
  409f35:	jns    0x409ed4
  409f37:	xchg   ecx,eax
  409f38:	cmp    edi,DWORD PTR [edx]
  409f3a:	and    ebp,edx
  409f3c:	xchg   BYTE PTR [ebx],al
  409f3e:	and    al,0x6e
  409f40:	test   al,0xb
  409f42:	std    
  409f43:	ret    0x188a
  409f46:	dec    esp
  409f47:	in     eax,dx
  409f48:	push   eax
  409f49:	pop    edi
  409f4a:	jle    0x409fbe
  409f4c:	fisub  DWORD PTR [edx+0x42d3110]
  409f52:	mov    ecx,0x969db20a
  409f57:	xor    BYTE PTR [eax],dh
  409f59:	lea    esi,[ecx]
  409f5b:	xchg   edx,eax
  409f5c:	sbb    eax,0xb7b67c93
  409f61:	fdiv   DWORD PTR [esi-0x5ce37af9]
  409f67:	xor    al,0x58
  409f69:	pop    esp
  409f6a:	push   es
  409f6b:	scas   al,BYTE PTR es:[edi]
  409f6c:	mov    al,ds:0x5a011afd
  409f71:	rol    BYTE PTR [ebp-0x58e9bf8b],1
  409f77:	arpl   WORD PTR [eax+0x1aff3a10],dx
  409f7d:	or     ah,ch
  409f7f:	xor    ecx,DWORD PTR ss:[edx+0x1]
  409f83:	add    BYTE PTR [eax-0x693deb77],ah
  409f89:	ret    0x3b6c
  409f8c:	fnsave [ecx+0x28]
  409f8f:	aas    
  409f90:	dec    ebx
  409f91:	mov    BYTE PTR [edi-0x5bba0cab],dl
  409f97:	shl    DWORD PTR [ebx-0x3611159d],0xe4
  409f9e:	icebp  
  409f9f:	cwde   
  409fa0:	loopne 0x40a009
  409fa2:	sbb    al,0xe5
  409fa4:	pop    esp
  409fa5:	cld    
  409fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fa7:	push   ebx
  409fa8:	mov    ebx,?
  409faa:	sbb    dl,BYTE PTR [eax+0x255d169f]
  409fb0:	add    BYTE PTR [edi-0x1a55b1e5],0x4a
  409fb7:	imul   esi,DWORD PTR [ebp-0x77],0x28bd4e0b
  409fbe:	in     al,0xc6
  409fc0:	cmp    edx,DWORD PTR [edi]
  409fc2:	cmc    
  409fc3:	or     edi,DWORD PTR [edi]
  409fc5:	pop    ebp
  409fc6:	int3   
  409fc7:	dec    esp
  409fc8:	loop   0x409f69
  409fca:	imul   ecx,ebx,0xffffffce
  409fcd:	inc    edi
  409fce:	mov    DWORD PTR [ebx-0x46b00682],ebp
  409fd4:	js     0x409fcc
  409fd6:	shr    ecx,1
  409fd8:	daa    
  409fd9:	push   ss
  409fda:	test   eax,0xad1809f6
  409fdf:	mov    bl,0x8b
  409fe1:	out    dx,eax
  409fe2:	and    DWORD PTR [ebx+ebx*8-0x40],esp
  409fe6:	in     al,0x5
  409fe8:	shr    BYTE PTR [esp+ecx*4],cl
  409feb:	lea    edx,[edx+0x47]
  409fee:	int    0x11
  409ff0:	push   ecx
  409ff1:	push   esp
  409ff2:	into   
  409ff3:	push   edx
  409ff4:	inc    edx
  409ff5:	out    0x7e,eax
  409ff7:	jnp    0x40a000
  409ff9:	mov    DWORD PTR [ecx],eax
  409ffb:	ins    BYTE PTR es:[edi],dx
  409ffc:	mov    ebx,DWORD PTR [ebx+edi*1-0x5a971321]
  40a003:	ret    0xabc4
  40a006:	xlat   BYTE PTR ds:[ebx]
  40a007:	in     eax,0x90
  40a009:	stos   DWORD PTR es:[edi],eax
  40a00a:	pop    edi
  40a00b:	fld    TBYTE PTR [edx-0x919dd4b]
  40a011:	mov    eax,0x48057d57
  40a016:	inc    ecx
  40a017:	push   esp
  40a018:	in     al,dx
  40a019:	fisttp QWORD PTR [edi+ebp*8]
  40a01c:	xor    esi,ebp
  40a01e:	sub    ch,BYTE PTR cs:[edi]
  40a021:	xchg   ebp,eax
  40a022:	addr16 pop esi
  40a024:	adc    ch,ah
  40a026:	(bad)  
  40a027:	in     eax,dx
  40a028:	fcom   DWORD PTR [ebp+0x6e]
  40a02b:	cmc    
  40a02c:	call   0x93bf813a
  40a031:	inc    edi
  40a032:	outs   dx,DWORD PTR ds:[esi]
  40a033:	xor    al,0x49
  40a035:	mov    ebx,0x5976a677
  40a03a:	adc    eax,0x432c9dc8
  40a03f:	push   ebp
  40a040:	loopne 0x40a06f
  40a042:	inc    eax
  40a043:	inc    ebx
  40a044:	(bad)  
  40a045:	adc    DWORD PTR [ebp-0xfeb6c57],ebp
  40a04b:	fidiv  DWORD PTR [eax+edx*2-0x7]
  40a04f:	in     eax,dx
  40a050:	adc    eax,0x32d1cef1
  40a055:	cmp    cl,BYTE PTR [esi]
  40a057:	bound  edx,QWORD PTR [edx+0x43]
  40a05a:	mov    al,ds:0x81865306
  40a05f:	jp     0x40a0b6
  40a061:	xchg   BYTE PTR [edx-0x6f],cl
  40a064:	inc    eax
  40a065:	es and al,0x67
  40a068:	jl     0x40a099
  40a06a:	sbb    esi,DWORD PTR ds:0xb6445b45
  40a070:	std    
  40a071:	xchg   esp,eax
  40a072:	stos   BYTE PTR es:[edi],al
  40a073:	dec    si
  40a075:	loopne 0x40a06d
  40a077:	rcr    DWORD PTR [edi],1
  40a079:	push   es
  40a07a:	ror    BYTE PTR [eax+0x7d07d4c3],0xba
  40a081:	sbb    eax,0xc5bade54
  40a086:	mov    eax,0xeedbd932
  40a08b:	jge    0x40a087
  40a08d:	aas    
  40a08e:	test   eax,0x765319f4
  40a093:	lahf   
  40a094:	adc    eax,0xf3061159
  40a099:	xchg   ah,cl
  40a09b:	mov    eax,ds:0x8c4092e3
  40a0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0a1:	iret   
  40a0a2:	mov    esp,0xb12521e5
  40a0a7:	jle    0x40a0a9
  40a0a9:	dec    ebx
  40a0aa:	loop   0x40a07d
  40a0ac:	ja     0x40a09d
  40a0ae:	repz ror BYTE PTR fs:[edx-0xe],cl
  40a0b3:	mov    dh,0x86
  40a0b5:	or     dh,BYTE PTR [eax]
  40a0b7:	sti    
  40a0b8:	rcl    DWORD PTR [edx-0xf],cl
  40a0bb:	sbb    bh,BYTE PTR [edx-0x2b]
  40a0be:	lods   eax,DWORD PTR ds:[esi]
  40a0bf:	in     eax,dx
  40a0c0:	jmp    0xc6dc8c3b
  40a0c5:	int3   
  40a0c6:	xor    BYTE PTR [esi+ebx*4],ah
  40a0c9:	mov    cl,0x5f
  40a0cb:	xor    eax,0xcbdf617b
  40a0d0:	arpl   bp,sp
  40a0d2:	ins    DWORD PTR es:[edi],dx
  40a0d3:	fist   DWORD PTR [eax+0x387d2281]
  40a0d9:	jle    0x40a071
  40a0db:	push   ebx
  40a0dc:	retf   0xf3e9
  40a0df:	pop    ebx
  40a0e0:	pop    ds
  40a0e1:	cli    
  40a0e2:	sbb    ecx,DWORD PTR [esi+0x44]
  40a0e5:	(bad)  
  40a0e6:	popa   
  40a0e7:	push   esp
  40a0e8:	out    dx,eax
  40a0e9:	inc    ebp
  40a0ea:	dec    eax
  40a0eb:	(bad)  
  40a0ec:	xor    al,0xea
  40a0ee:	lods   al,BYTE PTR ds:[esi]
  40a0ef:	pop    ds
  40a0f0:	jno    0x40a148
  40a0f2:	cld    
  40a0f3:	mov    ch,0x12
  40a0f5:	pop    ebx
  40a0f6:	mov    bh,0xd1
  40a0f8:	jae    0x40a12d
  40a0fa:	mov    esi,0x31a99392
  40a0ff:	sbb    eax,0xceaf5dfd
  40a104:	sub    al,0xbb
  40a106:	pop    ecx
  40a107:	js     0x40a142
  40a109:	sar    cl,cl
  40a10b:	mov    BYTE PTR [eax-0x50],bh
  40a10e:	xchg   BYTE PTR [edi],dh
  40a110:	pop    ds
  40a111:	mov    esp,0x26c83be7
  40a116:	mov    ecx,0xeb42442f
  40a11b:	stc    
  40a11c:	test   DWORD PTR es:[edx-0xf],ebp
  40a120:	mov    ebx,0xc53a172d
  40a125:	adc    BYTE PTR [ebp+0x22],dh
  40a128:	aas    
  40a129:	pop    ecx
  40a12a:	xchg   ecx,eax
  40a12b:	xor    eax,0xead60267
  40a130:	jae    0x40a188
  40a132:	lock stos DWORD PTR es:[edi],eax
  40a134:	out    dx,al
  40a135:	push   eax
  40a136:	cmp    ebp,DWORD PTR [ebp+0x15]
  40a139:	imul   ebp,DWORD PTR [ecx],0x58
  40a13c:	cmp    al,0x6b
  40a13e:	inc    edx
  40a13f:	ret    
  40a140:	das    
  40a141:	push   ecx
  40a142:	xchg   ebp,eax
  40a143:	xchg   BYTE PTR [ecx],dl
  40a145:	cdq    
  40a146:	xchg   ecx,eax
  40a147:	das    
  40a148:	pop    es
  40a149:	int    0x55
  40a14b:	cmp    BYTE PTR [ecx+0x25],bl
  40a14e:	push   0x55c80a23
  40a153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a154:	pop    esp
  40a155:	pop    ebx
  40a156:	push   esi
  40a157:	xor    BYTE PTR [ecx+0x6db4e3b8],0xea
  40a15e:	ds push edi
  40a160:	popf   
  40a161:	outs   dx,BYTE PTR ds:[esi]
  40a162:	mov    al,0x63
  40a164:	je     0x40a0ff
  40a166:	adc    BYTE PTR [edi],0x18
  40a169:	sahf   
  40a16a:	xor    edi,DWORD PTR [ecx]
  40a16c:	daa    
  40a16d:	lods   al,BYTE PTR ds:[esi]
  40a16e:	jle    0x40a13b
  40a170:	cmp    BYTE PTR [esi+edx*8-0x56c79a28],bh
  40a177:	sub    BYTE PTR [esi+0x3b],al
  40a17a:	into   
  40a17b:	shl    BYTE PTR [ebp+0x3e3dc5a3],0xc1
  40a182:	and    DWORD PTR [edi+0x1045b1a2],esi
  40a188:	push   ecx
  40a189:	or     DWORD PTR [ecx],ebx
  40a18b:	in     eax,0xf2
  40a18d:	fstp   DWORD PTR [eax+0x2c]
  40a190:	les    esi,FWORD PTR [edx-0x54]
  40a193:	xchg   ebp,eax
  40a194:	shl    BYTE PTR [ecx],0x2c
  40a197:	xchg   ebp,eax
  40a198:	jbe    0x40a1d2
  40a19a:	(bad)  
  40a19c:	or     ebp,edx
  40a19e:	cli    
  40a19f:	dec    esi
  40a1a0:	test   BYTE PTR fs:[ebx+ebx*8+0x3932888e],ch
  40a1a8:	jp     0x40a1e1
  40a1aa:	and    esi,DWORD PTR [edi+0x64]
  40a1ad:	xlat   BYTE PTR ds:[ebx]
  40a1ae:	rol    BYTE PTR [eax-0x5b70827f],cl
  40a1b4:	sub    dh,bh
  40a1b6:	inc    esp
  40a1b7:	popf   
  40a1b8:	out    0x78,al
  40a1ba:	fdivr  QWORD PTR [esi+0x7e]
  40a1bd:	xor    eax,0x4fa65901
  40a1c2:	mov    dh,0xaf
  40a1c4:	pushf  
  40a1c5:	imul   edi,DWORD PTR [ecx],0xffffffb9
  40a1c8:	retf   0x1f6a
  40a1cb:	inc    ecx
  40a1cc:	stos   DWORD PTR es:[edi],eax
  40a1cd:	in     eax,0xd3
  40a1cf:	push   ecx
  40a1d0:	lahf   
  40a1d1:	xchg   ebp,eax
  40a1d2:	loopne 0x40a1d5
  40a1d4:	outs   dx,DWORD PTR ds:[esi]
  40a1d5:	push   ebp
  40a1d6:	mov    ebx,0xff0897c3
  40a1db:	xchg   edx,eax
  40a1dc:	(bad)  
  40a1dd:	lock popf 
  40a1df:	sti    
  40a1e0:	and    DWORD PTR [ebp-0x1b],ecx
  40a1e3:	jmp    0xa4bb:0x3e5cfe90
  40a1ea:	rol    DWORD PTR [ebx+0x47272cca],cl
  40a1f0:	sub    bl,BYTE PTR [eax+0xc]
  40a1f3:	cdq    
  40a1f4:	pop    edi
  40a1f5:	push   eax
  40a1f6:	cmp    BYTE PTR [esi+0x1e],0x5
  40a1fa:	lds    eax,FWORD PTR [ecx+0x48]
  40a1fd:	test   BYTE PTR [edx+0x13],bl
  40a200:	xlat   BYTE PTR ds:[ebx]
  40a201:	xchg   ebx,eax
  40a202:	xchg   esp,eax
  40a203:	je     0x40a1de
  40a205:	lds    ebx,FWORD PTR [edx]
  40a207:	out    dx,al
  40a208:	sub    bh,BYTE PTR ds:0xdd50229a
  40a20e:	ss inc edx
  40a210:	pop    esi
  40a211:	xchg   esi,esp
  40a213:	cmp    eax,0x661d00fb
  40a218:	popa   
  40a219:	das    
  40a21a:	rcr    BYTE PTR [edi],cl
  40a21c:	outs   dx,DWORD PTR ds:[esi]
  40a21d:	or     al,0xd1
  40a21f:	(bad)  
  40a221:	xor    ecx,esi
  40a223:	add    esp,ebp
  40a225:	pop    ecx
  40a226:	lods   eax,DWORD PTR ds:[esi]
  40a227:	ss jno 0x40a289
  40a22a:	out    dx,al
  40a22b:	jb     0x40a1eb
  40a22d:	ins    DWORD PTR es:[edi],dx
  40a22e:	fcmovb st,st(1)
  40a230:	cld    
  40a231:	xchg   ebx,eax
  40a232:	daa    
  40a233:	popf   
  40a234:	in     al,dx
  40a235:	push   ebx
  40a236:	mov    cl,0xcd
  40a238:	and    al,0x3
  40a23a:	push   0x9975e0bd
  40a23f:	gs int 0x10
  40a242:	aaa    
  40a243:	test   al,0x31
  40a245:	lock cdq 
  40a247:	adc    al,0xc9
  40a249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a24a:	stos   DWORD PTR es:[edi],eax
  40a24b:	sar    DWORD PTR [edx-0x23],1
  40a24e:	ror    BYTE PTR [edi+0x64a9fae0],cl
  40a254:	jns    0x40a242
  40a256:	mov    ah,0xd8
  40a258:	inc    eax
  40a259:	rcr    BYTE PTR [eax],1
  40a25b:	aam    0xca
  40a25d:	or     eax,0xa82966c7
  40a262:	mov    ch,0x9c
  40a264:	pop    es
  40a265:	push   edi
  40a266:	in     al,0x61
  40a268:	mov    ebx,fs
  40a26a:	mov    eax,fs:0x1cae9b5e
  40a270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a271:	ffree  st(5)
  40a273:	cmp    BYTE PTR [esi],cl
  40a275:	out    0x11,eax
  40a277:	arpl   WORD PTR [edx-0x7682624d],di
  40a27d:	(bad)
  40a280:	push   ebp
  40a281:	push   edx
  40a282:	xchg   ebx,eax
  40a283:	sbb    DWORD PTR [eax-0x68],edi
  40a286:	lods   al,BYTE PTR ds:[esi]
  40a287:	loopne 0x40a268
  40a289:	push   ecx
  40a28a:	push   0xe33fa668
  40a28f:	repnz lea edi,[edi+0x14bf8374]
  40a296:	sar    DWORD PTR [esi-0x41],0x37
  40a29a:	cmp    dh,BYTE PTR [edi]
  40a29c:	ds aad 0x12
  40a29f:	retf   0x7485
  40a2a2:	loop   0x40a2c8
  40a2a4:	xchg   edi,eax
  40a2a5:	(bad)  
  40a2a6:	sub    al,0xd0
  40a2a8:	sub    eax,0x23eb3a2a
  40a2ad:	icebp  
  40a2ae:	mov    ?,ebx
  40a2b0:	cmp    eax,0x93357111
  40a2b5:	pop    ss
  40a2b6:	and    al,0x2f
  40a2b8:	loope  0x40a260
  40a2ba:	mov    cl,bl
  40a2bc:	jmp    0x40a2e8
  40a2be:	adc    DWORD PTR [esi+0x41b80e1],ebx
  40a2c4:	rcl    BYTE PTR [esp+ecx*8-0xe9e9a08],0xc3
  40a2cc:	dec    eax
  40a2cd:	or     eax,0x243b08f2
  40a2d2:	xlat   BYTE PTR ds:[ebx]
  40a2d3:	jle    0x40a2e1
  40a2d5:	pop    eax
  40a2d6:	and    eax,0x4254e205
  40a2db:	inc    DWORD PTR [ebx+0x74cfa48b]
  40a2e1:	mov    gs,WORD PTR [ebx+0xd]
  40a2e4:	pop    es
  40a2e5:	xor    esp,edi
  40a2e7:	push   ebx
  40a2e8:	jmp    0x9d372c0b
  40a2ed:	lods   al,BYTE PTR ds:[esi]
  40a2ee:	stos   BYTE PTR es:[edi],al
  40a2ef:	repnz (bad)
  40a2f3:	ror    DWORD PTR [ebx+0x72],1
  40a2f6:	in     al,0x62
  40a2f8:	xchg   BYTE PTR [edi-0x53],dh
  40a2fb:	mov    bl,0xf
  40a2fd:	arpl   WORD PTR [ebp+0x409f8ecb],sp
  40a303:	ficom  WORD PTR [ebx]
  40a305:	xlat   BYTE PTR ds:[ebx]
  40a306:	dec    eax
  40a307:	dec    edi
  40a308:	adc    dh,ah
  40a30a:	push   ecx
  40a30b:	imul   esi,DWORD PTR [ecx],0x1b977862
  40a311:	fisttp QWORD PTR [edi+0x1e]
  40a314:	pop    eax
  40a315:	jnp    0x40a37c
  40a317:	test   eax,0xc7bddc4e
  40a31c:	stos   DWORD PTR es:[edi],eax
  40a31d:	push   0x78659ed6
  40a322:	ret    0xb02b
  40a325:	push   ebx
  40a326:	ret    
  40a327:	and    ch,BYTE PTR [esi-0x32]
  40a32a:	push   0xffffff82
  40a32c:	jecxz  0x40a34a
  40a32e:	imul   esi,DWORD PTR [ebx-0x30],0xffffffca
  40a332:	in     eax,0x61
  40a334:	or     al,ah
  40a336:	mov    ah,0xc2
  40a338:	sbb    DWORD PTR [edi+esi*1],edi
  40a33b:	fsub   DWORD PTR [ebx+edx*4-0x61]
  40a33f:	test   esi,0x7627f99
  40a345:	inc    ebp
  40a346:	sbb    al,0x85
  40a348:	sbb    eax,0x3033ff7a
  40a34d:	dec    edx
  40a34e:	xlat   BYTE PTR ds:[ebx]
  40a34f:	jecxz  0x40a323
  40a351:	pushf  
  40a352:	fcomp  QWORD PTR [esp+eax*8+0x16]
  40a356:	gs push ds
  40a358:	sti    
  40a359:	stc    
  40a35a:	mov    cl,0xb3
  40a35c:	adc    ah,dl
  40a35e:	outs   dx,BYTE PTR ds:[esi]
  40a35f:	push   edx
  40a360:	jmp    0xb917a898
  40a365:	push   0x63e728c3
  40a36a:	mov    bh,0xc8
  40a36c:	retf   0xf070
  40a36f:	adc    ecx,edx
  40a371:	jno    0x40a3a2
  40a373:	jbe    0x40a380
  40a375:	cmp    edi,DWORD PTR [edx-0x6]
  40a378:	dec    eax
  40a379:	loope  0x40a32b
  40a37b:	mov    esp,0x2dfe3f1c
  40a380:	test   cl,bl
  40a382:	ja     0x40a383
  40a384:	fwait
  40a385:	adc    ecx,DWORD PTR [ecx]
  40a387:	(bad)  
  40a388:	xlat   BYTE PTR ds:[ebx]
  40a389:	pop    eax
  40a38a:	nop
  40a38b:	mov    ds:0x4008926b,al
  40a390:	sbb    al,BYTE PTR [esi-0x2f29be88]
  40a396:	add    BYTE PTR [ebp-0x32],0xcf
  40a39a:	xchg   edx,eax
  40a39b:	ins    BYTE PTR es:[edi],dx
  40a39c:	jbe    0x40a3a0
  40a39e:	or     BYTE PTR [edx-0x42],ah
  40a3a1:	(bad)  
  40a3a3:	mov    ds:0x1ac3f001,eax
  40a3a8:	pop    edi
  40a3a9:	mov    al,0x14
  40a3ab:	sub    DWORD PTR [ebx],0xffffffd1
  40a3ae:	sub    DWORD PTR [eax+0x59],esp
  40a3b1:	retf   0x30a0
  40a3b4:	adc    al,0xe
  40a3b6:	jg     0x40a3af
  40a3b8:	inc    esp
  40a3b9:	dec    esi
  40a3ba:	daa    
  40a3bb:	push   cs
  40a3bc:	mov    dh,0xcb
  40a3be:	dec    esi
  40a3bf:	popa   
  40a3c0:	call   0x9d3c:0x7207d0d3
  40a3c7:	ds mov ch,0x53
  40a3ca:	mov    ds,WORD PTR [ecx+ebp*1+0x37c9fc43]
  40a3d1:	sti    
  40a3d2:	fbstp  TBYTE PTR [ebx+0x71]
  40a3d5:	js     0x40a416
  40a3d7:	test   eax,0xe9be5470
  40a3dc:	out    0x35,al
  40a3de:	jmp    0x20c9e2cf
  40a3e3:	dec    ebp
  40a3e4:	fiadd  WORD PTR [edx+eax*8+0x17725fda]
  40a3eb:	push   eax
  40a3ec:	sbb    BYTE PTR [edi+0x52],ah
  40a3ef:	dec    edi
  40a3f0:	push   ss
  40a3f1:	scas   eax,DWORD PTR es:[edi]
  40a3f2:	add    cl,BYTE PTR [eax]
  40a3f4:	adc    ebp,DWORD PTR [esi+ecx*2]
  40a3f7:	fbstp  TBYTE PTR [ecx-0x7c]
  40a3fa:	fdiv   DWORD PTR [edi-0x2e899b55]
  40a400:	adc    al,0x2d
  40a402:	inc    esp
  40a403:	popf   
  40a404:	xchg   ebx,eax
  40a405:	mov    WORD PTR [ebx],gs
  40a407:	jg     0x40a44d
  40a409:	mov    bl,0x90
  40a40b:	sar    DWORD PTR [ebx-0x53756507],cl
  40a411:	test   DWORD PTR [ecx],esi
  40a413:	sbb    eax,0x16108158
  40a418:	out    0xe3,al
  40a41a:	fcom   DWORD PTR [esi+0x3f]
  40a41d:	sub    ecx,DWORD PTR [edi+0x2a3c41fb]
  40a423:	lds    edx,FWORD PTR [edx]
  40a425:	and    DWORD PTR [edx-0x48],ebp
  40a428:	scas   eax,DWORD PTR es:[edi]
  40a429:	sub    ecx,ebp
  40a42b:	push   esp
  40a42c:	stos   BYTE PTR es:[edi],al
  40a42d:	mov    cl,BYTE PTR [edi+0x70]
  40a430:	ja     0x40a41e
  40a432:	(bad)  
  40a433:	cli    
  40a434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a435:	pop    edx
  40a436:	or     eax,ebp
  40a438:	push   ebp
  40a439:	dec    edx
  40a43a:	pop    ss
  40a43b:	retf   
  40a43c:	xor    al,0x94
  40a43e:	and    al,0x76
  40a440:	jmp    0x40a4b7
  40a442:	cdq    
  40a443:	dec    ecx
  40a444:	nop
  40a445:	add    al,0xa3
  40a447:	xor    eax,0x7033fe44
  40a44c:	rep stos BYTE PTR es:[edi],al
  40a44e:	iret   
  40a44f:	pop    eax
  40a450:	leave  
  40a451:	cli    
  40a452:	pop    edi
  40a453:	fs scas al,BYTE PTR es:[edi]
  40a455:	pop    ebp
  40a456:	fst    DWORD PTR [eax*4-0x5f842278]
  40a45d:	mov    ds:0x4da38b86,al
  40a462:	outs   dx,DWORD PTR ds:[esi]
  40a463:	jbe    0x40a494
  40a465:	cli    
  40a466:	lds    edx,FWORD PTR [edx]
  40a468:	xchg   ebx,eax
  40a469:	or     DWORD PTR [edi+0x2d],ebp
  40a46c:	int3   
  40a46d:	mov    cl,BYTE PTR ds:0x3afef00
  40a473:	inc    eax
  40a474:	xor    eax,0x4a214c9e
  40a479:	jp     0x40a4ae
  40a47b:	lock inc edx
  40a47d:	loope  0x40a4b6
  40a47f:	test   DWORD PTR [ebx+edi*1-0x1d05ffa6],ebp
  40a486:	dec    ebp
  40a487:	xchg   esi,eax
  40a488:	push   DWORD PTR [ecx-0x191b710d]
  40a48e:	sbb    ebx,edi
  40a490:	pop    eax
  40a491:	ret    0xc30f
  40a494:	sbb    al,0x4d
  40a496:	lea    eax,[esi+esi*2-0x72391ee8]
  40a49d:	int    0x13
  40a49f:	jnp    0x40a46b
  40a4a1:	js     0x40a44b
  40a4a3:	add    BYTE PTR ds:0x16bccbdf,dl
  40a4a9:	inc    eax
  40a4aa:	repnz mov eax,0x9146bcd1
  40a4b0:	(bad)  
  40a4b1:	jns    0x40a4a3
  40a4b3:	add    ch,ch
  40a4b5:	scas   al,BYTE PTR es:[edi]
  40a4b6:	gs mov dh,0xd7
  40a4b9:	fist   WORD PTR [eax]
  40a4bb:	(bad)  
  40a4bc:	ret    0xd6c2
  40a4bf:	jg     0x40a442
  40a4c1:	dec    ebp
  40a4c2:	sti    
  40a4c3:	mov    bl,0xa5
  40a4c5:	cmp    ah,BYTE PTR [eax+ecx*1]
  40a4c8:	push   ebp
  40a4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4ca:	fidivr DWORD PTR [edx+0x72929c3f]
  40a4d0:	adc    ebp,DWORD PTR [esi+eax*8-0x3b]
  40a4d4:	push   ebp
  40a4d5:	jnp    0x40a4fa
  40a4d7:	adc    eax,0x7904505a
  40a4dc:	adc    BYTE PTR [esi],dl
  40a4de:	cmp    al,0x79
  40a4e0:	xchg   ebp,eax
  40a4e1:	out    dx,al
  40a4e2:	int3   
  40a4e3:	sbb    al,dh
  40a4e5:	mov    edx,0xabc17eb0
  40a4ea:	dec    BYTE PTR [edi]
  40a4ec:	into   
  40a4ed:	ret    0x553e
  40a4f0:	cld    
  40a4f1:	pop    ebp
  40a4f2:	mov    BYTE PTR [edx-0x66d71cc0],bh
  40a4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f9:	sbb    dl,BYTE PTR [esi+ebp*4+0x5289fb89]
  40a500:	(bad)  
  40a501:	(bad)  
  40a502:	sbb    eax,0xb3dad2f1
  40a507:	dec    ebp
  40a508:	pop    edi
  40a509:	and    eax,0x51326b6e
  40a50e:	or     DWORD PTR [esp+ebx*1-0x1ac0f6b],eax
  40a515:	xor    al,0x72
  40a517:	jmp    0xe507bdbd
  40a51c:	push   edi
  40a51d:	jo     0x40a55c
  40a51f:	xor    DWORD PTR [eax+0x19],esp
  40a522:	(bad)  
  40a523:	aaa    
  40a524:	jp     0x40a4e0
  40a526:	and    eax,0xbec3b3ca
  40a52b:	xchg   esp,eax
  40a52c:	cmp    al,cl
  40a52e:	dec    ebx
  40a52f:	and    eax,0x40d67f18
  40a534:	leave  
  40a535:	call   0xbb74b712
  40a53a:	fdiv   DWORD PTR [edx+0x796faad4]
  40a540:	test   eax,0x3a375468
  40a545:	es push ebp
  40a547:	arpl   WORD PTR [ecx-0x6e55b81a],dx
  40a54d:	loope  0x40a567
  40a54f:	or     DWORD PTR [eax],ebx
  40a551:	push   ds
  40a552:	test   BYTE PTR [ecx+0x3bb43456],dh
  40a558:	ret    
  40a559:	and    DWORD PTR [ebx-0x1e1d444b],0xfa1a9b5c
  40a563:	lods   eax,DWORD PTR ds:[esi]
  40a564:	or     al,0x69
  40a566:	pop    ss
  40a567:	or     esi,ebx
  40a569:	sbb    DWORD PTR [ebx+0x1dbd3b27],edi
  40a56f:	icebp  
  40a570:	fwait
  40a571:	add    edi,DWORD PTR [ecx-0x7c]
  40a574:	cwde   
  40a575:	fwait
  40a576:	add    DWORD PTR [eax-0x578874d4],ecx
  40a57c:	mov    esi,?
  40a57e:	test   eax,0x35d0b9a1
  40a583:	sub    cl,BYTE PTR [edi-0x67]
  40a586:	arpl   WORD PTR [esi+0x2e],bx
  40a589:	fwait
  40a58a:	loope  0x40a5e9
  40a58c:	jmp    0x74b8:0xce673d4d
  40a593:	sar    edi,0xf4
  40a596:	jmp    0x7f61cefc
  40a59b:	dec    edi
  40a59c:	xor    ebp,DWORD PTR [ebx+eax*2-0x293e16e0]
  40a5a3:	inc    edx
  40a5a4:	std    
  40a5a5:	push   0xffffff9d
  40a5a7:	in     al,dx
  40a5a8:	jbe    0x40a59f
  40a5aa:	push   0x7f4b6e5f
  40a5af:	add    ch,BYTE PTR [ebx-0x23]
  40a5b2:	xor    ch,BYTE PTR [ebx]
  40a5b4:	mov    ebp,0x4bdd5196
  40a5b9:	inc    esp
  40a5ba:	inc    eax
  40a5bb:	aam    0x3
  40a5bd:	mov    al,BYTE PTR [ecx]
  40a5bf:	(bad)  
  40a5c0:	pop    edi
  40a5c1:	inc    esp
  40a5c2:	pcmpgtd mm6,QWORD PTR [ecx-0x51]
  40a5c6:	data16 icebp 
  40a5c8:	pop    ebp
  40a5c9:	cwde   
  40a5ca:	mov    dl,0x67
  40a5cc:	sbb    DWORD PTR [esi],edi
  40a5ce:	sbb    esp,DWORD PTR [ebx]
  40a5d0:	daa    
  40a5d1:	cs dec ebp
  40a5d3:	int3   
  40a5d4:	add    bh,dl
  40a5d6:	inc    ecx
  40a5d7:	and    cl,BYTE PTR [ecx]
  40a5d9:	aam    0xa8
  40a5db:	inc    edx
  40a5dc:	(bad)  
  40a5dd:	repz test BYTE PTR [edx+0x55],ah
  40a5e1:	sbb    dl,dl
  40a5e3:	mov    ah,0xea
  40a5e5:	stc    
  40a5e6:	shr    DWORD PTR [ebx],0xd9
  40a5e9:	arpl   WORD PTR [edx+eax*2],dx
  40a5ec:	retf   
  40a5ed:	pop    edx
  40a5ee:	or     BYTE PTR [ecx-0x52],al
  40a5f1:	dec    edi
  40a5f2:	cmp    eax,0x91c2b95e
  40a5f7:	idiv   esp
  40a5f9:	xor    ebx,ebp
  40a5fb:	jns    0x40a624
  40a5fd:	push   ss
  40a5fe:	ds in  al,0x46
  40a601:	inc    edi
  40a602:	jo     0x40a60d
  40a604:	fist   DWORD PTR [edx]
  40a606:	sub    ah,BYTE PTR [ecx-0x4f]
  40a609:	fcom   DWORD PTR [edx+0x337ae997]
  40a60f:	test   eax,0xdec93651
  40a614:	xchg   ecx,eax
  40a615:	xlat   BYTE PTR ds:[ebx]
  40a616:	mov    DWORD PTR [edx+0x17],ecx
  40a619:	ss not ecx
  40a61c:	loope  0x40a5f1
  40a61e:	xor    BYTE PTR [esi],ah
  40a620:	in     eax,0xbe
  40a622:	stos   DWORD PTR es:[edi],eax
  40a623:	loop   0x40a62f
  40a625:	jns    0x40a5be
  40a627:	in     eax,0x11
  40a629:	sub    BYTE PTR [ebx],bl
  40a62b:	or     al,al
  40a62d:	sbb    eax,0x5da3b750
  40a632:	jg     0x40a5c8
  40a634:	cli    
  40a635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a636:	mov    bh,0x4
  40a638:	ins    DWORD PTR es:[edi],dx
  40a639:	ret    
  40a63a:	sub    BYTE PTR [edi+0x7c848c89],bh
  40a640:	in     al,0x45
  40a642:	mov    edx,esi
  40a644:	jae    0x40a66c
  40a646:	loopne 0x40a5d9
  40a648:	sbb    DWORD PTR [eax],0x19db4bb7
  40a64e:	stc    
  40a64f:	mov    eax,ds:0x268adfc9
  40a654:	fst    DWORD PTR [edx-0x4ccaf9fd]
  40a65a:	(bad)  
  40a65b:	in     al,0x10
  40a65d:	push   ecx
  40a65e:	call   0x58c642e2
  40a663:	sub    DWORD PTR ds:0x199f28aa,edi
  40a669:	dec    edx
  40a66a:	mov    dh,0xb0
  40a66c:	mov    bh,0xbd
  40a66e:	sbb    DWORD PTR [ecx-0x20],edx
  40a671:	cmp    ch,BYTE PTR [ebx]
  40a673:	das    
  40a674:	xchg   esi,eax
  40a675:	xchg   esp,eax
  40a676:	pop    ebx
  40a677:	mov    cl,0x39
  40a679:	shl    BYTE PTR [edi],1
  40a67b:	xor    DWORD PTR [ebx-0x3a14ab8b],eax
  40a681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a682:	lock outs dx,DWORD PTR ds:[esi]
  40a684:	mov    ch,BYTE PTR ds:0xe4a9b1e6
  40a68a:	pop    ds
  40a68b:	mov    eax,0x26348994
  40a690:	nop
  40a691:	imul   edi,DWORD PTR [esp+eiz*4+0x1bd036f8],0xffffff89
  40a699:	sub    al,0xde
  40a69b:	dec    eax
  40a69c:	and    ah,BYTE PTR [eax+0x403079d6]
  40a6a2:	adc    DWORD PTR [edi-0x12b3d31],esi
  40a6a8:	xchg   edi,eax
  40a6a9:	out    dx,al
  40a6aa:	cld    
  40a6ab:	xchg   esi,eax
  40a6ac:	pushf  
  40a6ad:	js     0x40a62f
  40a6af:	jle    0x40a70d
  40a6b1:	jecxz  0x40a675
  40a6b3:	sbb    DWORD PTR [esp+esi*2-0x7d431b55],esi
  40a6ba:	adc    esp,DWORD PTR [ebp-0x60]
  40a6bd:	rol    ebp,0xf7
  40a6c0:	jle    0x40a65f
  40a6c2:	lods   eax,DWORD PTR ds:[esi]
  40a6c3:	fidiv  WORD PTR [eax]
  40a6c5:	sbb    esi,DWORD PTR [ebp+ecx*8-0x3e]
  40a6c9:	shl    BYTE PTR [eax-0x3e],0xf2
  40a6cd:	cmp    DWORD PTR [ecx-0x4f],eax
  40a6d0:	(bad)  
  40a6d1:	jl     0x40a718
  40a6d3:	in     al,0xd4
  40a6d5:	shl    BYTE PTR [edx-0x55],1
  40a6d8:	mov    dh,0xf0
  40a6da:	retf   
  40a6db:	loope  0x40a731
  40a6dd:	cld    
  40a6de:	adc    BYTE PTR [edi+0x7e907edd],0x15
  40a6e5:	sub    esi,DWORD PTR [edx]
  40a6e7:	(bad)
  40a6eb:	jmp    0x8d64:0xa860e023
  40a6f2:	out    0x4d,eax
  40a6f4:	jae    0x40a75f
  40a6f6:	mov    ds:0xaffc3c58,al
  40a6fb:	cmp    dl,BYTE PTR [ebp-0x4f]
  40a6fe:	dec    esp
  40a6ff:	jg     0x40a766
  40a701:	into   
  40a702:	test   DWORD PTR [esi-0xa2dd896],ebp
  40a708:	push   es
  40a709:	jmp    0x40a77a
  40a70b:	sahf   
  40a70c:	xor    eax,0x6c535679
  40a711:	(bad)  
  40a712:	sbb    DWORD PTR [ecx+0x1fde409b],0x4c2659da
  40a71c:	push   cs
  40a71d:	push   esp
  40a71e:	push   esi
  40a71f:	xor    BYTE PTR [eax],cl
  40a721:	push   ebp
  40a722:	and    BYTE PTR [ecx+ebx*8-0x40],bh
  40a726:	inc    esp
  40a727:	xor    BYTE PTR [eax*1+0x43191fcc],dh
  40a72e:	or     ah,BYTE PTR [ecx-0x3155b43a]
  40a734:	pextrw esi,(bad),0xc5
  40a736:	je     0x40a6e1
  40a738:	js     0x40a77c
  40a73a:	je     0x40a6cb
  40a73c:	ins    DWORD PTR es:[edi],dx
  40a73d:	out    dx,eax
  40a73e:	fistp  QWORD PTR [edi-0x38]
  40a741:	mov    WORD PTR [edx+0x5b],?
  40a744:	jle    0x40a716
  40a746:	jae    0x40a79e
  40a748:	mov    ds:0x5fca952e,eax
  40a74d:	iret   
  40a74e:	scas   al,BYTE PTR es:[edi]
  40a74f:	cmp    al,0x71
  40a751:	stos   BYTE PTR es:[edi],al
  40a752:	mov    dh,0xbe
  40a754:	lods   eax,DWORD PTR ds:[esi]
  40a755:	pusha  
  40a756:	sub    cl,BYTE PTR [esi-0x18096eab]
  40a75c:	cmp    ah,BYTE PTR [eax-0x1bf80327]
  40a762:	xor    dh,BYTE PTR [esp+esi*1-0x7acc3770]
  40a769:	lea    eax,[ebp+edi*2+0x4f4bea95]
  40a770:	pop    edx
  40a771:	jne    0x40a7da
  40a773:	lds    esi,FWORD PTR ds:0x5d5f7371
  40a779:	and    BYTE PTR [ecx-0x1c],dh
  40a77c:	retf   
  40a77d:	(bad)  
  40a77e:	mov    esi,ss
  40a780:	aaa    
  40a781:	icebp  
  40a782:	in     eax,dx
  40a783:	(bad)  
  40a785:	cld    
  40a786:	out    dx,al
  40a787:	lds    ebx,FWORD PTR [ecx-0x7f]
  40a78a:	add    esi,DWORD PTR [ebp+0x73]
  40a78d:	xlat   BYTE PTR ds:[ebx]
  40a78e:	xor    DWORD PTR [ecx+0x7a],ebx
  40a791:	enter  0xb6db,0xf4
  40a795:	adc    ebx,esi
  40a797:	dec    ebp
  40a798:	scas   eax,DWORD PTR es:[edi]
  40a799:	test   eax,0xf100af0f
  40a79e:	shl    BYTE PTR [ecx+0x66afe98d],cl
  40a7a4:	xchg   ebx,eax
  40a7a5:	popa   
  40a7a6:	aam    0x12
  40a7a8:	pop    ds
  40a7a9:	les    ebp,FWORD PTR [ecx-0x26be2b76]
  40a7af:	mov    esp,0x3c806dec
  40a7b4:	dec    esp
  40a7b5:	lods   al,BYTE PTR ds:[esi]
  40a7b6:	out    dx,al
  40a7b7:	into   
  40a7b8:	or     eax,0x22a65675
  40a7bd:	pusha  
  40a7be:	cmc    
  40a7bf:	or     eax,0xf9cae3fa
  40a7c4:	xchg   edx,eax
  40a7c5:	mov    ebx,0x3346f692
  40a7ca:	sub    DWORD PTR [ebp+0x61bd2c2a],ebx
  40a7d0:	aad    0x6d
  40a7d2:	xor    BYTE PTR [eax],bl
  40a7d4:	inc    ebp
  40a7d5:	outs   dx,DWORD PTR ds:[esi]
  40a7d6:	bnd jo 0x40a7f8
  40a7d9:	imul   ecx,DWORD PTR [edi],0x8045b0e8
  40a7df:	mov    esi,0x8b5ebfb5
  40a7e4:	cmpps  xmm0,XMMWORD PTR [eax-0x3],0xf7
  40a7e9:	mov    al,0xec
  40a7eb:	xchg   ebx,eax
  40a7ec:	jle    0x40a843
  40a7ee:	popf   
  40a7ef:	xor    al,0x2
  40a7f1:	inc    ebp
  40a7f2:	jmp    0x6e8924b1
  40a7f7:	mov    cl,0xac
  40a7f9:	stos   BYTE PTR es:[edi],al
  40a7fa:	sub    DWORD PTR [ebp+0x4f],ebx
  40a7fd:	jbe    0x40a805
  40a7ff:	das    
  40a800:	and    BYTE PTR [esi+0x52228480],bh
  40a806:	bound  esp,QWORD PTR [eax]
  40a808:	dec    ebx
  40a809:	xchg   esi,eax
  40a80a:	out    dx,eax
  40a80b:	hlt    
  40a80c:	cs sub eax,0x2c3f8839
  40a812:	lea    eax,[esi+0xc]
  40a815:	cs repnz test esp,ecx
  40a819:	adc    ecx,esi
  40a81b:	scas   al,BYTE PTR es:[edi]
  40a81c:	pop    esi
  40a81d:	test   DWORD PTR ds:0xed9f00b9,esi
  40a823:	test   ch,cl
  40a825:	mov    edi,0x12cf621b
  40a82a:	in     al,dx
  40a82b:	test   BYTE PTR [ebp+ecx*8+0x50],0xa6
  40a830:	cmp    ch,BYTE PTR [ebp+eiz*4+0xdf9dc6c]
  40a837:	xor    BYTE PTR [edi+eiz*2],ch
  40a83a:	fucomi st,st(4)
  40a83c:	and    ah,BYTE PTR [esi]
  40a83e:	fild   QWORD PTR [edi]
  40a840:	pop    es
  40a841:	adc    DWORD PTR [esi-0x73],esi
  40a844:	icebp  
  40a845:	adc    BYTE PTR [ebp+0x58039b3f],ch
  40a84b:	and    al,0x51
  40a84d:	mov    ah,BYTE PTR [edx+0x4d]
  40a850:	adc    al,0x4f
  40a852:	mov    esi,0x869fc8d3
  40a857:	push   ecx
  40a858:	jb     0x40a892
  40a85a:	hlt    
  40a85b:	icebp  
  40a85c:	xchg   esp,eax
  40a85d:	imul   ebp,DWORD PTR [esi+0x4b],0x97a68f97
  40a864:	cli    
  40a865:	fiadd  WORD PTR [ecx]
  40a867:	rcl    DWORD PTR [esi],0x6b
  40a86a:	ins    DWORD PTR es:[edi],dx
  40a86b:	cwde   
  40a86c:	push   ecx
  40a86d:	xchg   edx,eax
  40a86e:	or     ecx,DWORD PTR [esi]
  40a870:	in     eax,0xcc
  40a872:	xchg   esp,eax
  40a873:	jg     0x40a826
  40a875:	repz mov esi,0x61ab8e53
  40a87b:	mov    WORD PTR [esi],fs
  40a87d:	out    0xec,eax
  40a87f:	div    BYTE PTR [ecx-0x56412370]
  40a885:	xchg   BYTE PTR [ebx],al
  40a887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a888:	push   ss
  40a889:	mov    DWORD PTR [esi],ebp
  40a88b:	ja     0x40a82c
  40a88d:	add    dh,BYTE PTR [ecx+0x39]
  40a890:	ret    
  40a891:	lds    edx,FWORD PTR ds:0x8a3d1504
  40a897:	aad    0x87
  40a899:	adc    al,0xc5
  40a89b:	cs mov cl,0x65
  40a89e:	mov    ch,0x1a
  40a8a0:	dec    ecx
  40a8a1:	inc    dx
  40a8a3:	dec    ebp
  40a8a4:	inc    edi
  40a8a5:	jae    0x40a917
  40a8a7:	fsubr  DWORD PTR [esi-0xc]
  40a8aa:	or     bl,bh
  40a8ac:	cmp    al,0xb0
  40a8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8af:	jl     0x40a8be
  40a8b1:	pop    ss
  40a8b2:	mov    al,BYTE PTR [ebx-0x17]
  40a8b5:	inc    edx
  40a8b6:	pop    edi
  40a8b7:	xchg   ecx,eax
  40a8b8:	not    BYTE PTR [eax+0x432ce088]
  40a8be:	cs loop 0x40a861
  40a8c1:	out    0xc0,eax
  40a8c3:	addr16 jno 0x40a8a1
  40a8c6:	sub    DWORD PTR [ebx*2+0x20d9e127],eax
  40a8cd:	es std 
  40a8cf:	fcomp  DWORD PTR [edi-0x322900ef]
  40a8d5:	cli    
  40a8d6:	jns    0x40a8bb
  40a8d8:	imul   esp,DWORD PTR [esp-0xe],0xffffffdb
  40a8dd:	push   esp
  40a8de:	pop    ecx
  40a8df:	ds gs jo 0x40a8fb
  40a8e3:	jo     0x40a8a6
  40a8e5:	inc    eax
  40a8e6:	xor    bl,BYTE PTR [edi-0x6859f617]
  40a8ec:	jb     0x40a938
  40a8ee:	add    al,0xcb
  40a8f0:	sub    dh,BYTE PTR [esi+0x3d4e2e97]
  40a8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f7:	lds    ebp,FWORD PTR [esi]
  40a8f9:	inc    eax
  40a8fa:	xchg   edx,eax
  40a8fb:	leave  
  40a8fc:	in     al,dx
  40a8fd:	hlt    
  40a8fe:	mov    ds:0xf1a1489,eax
  40a903:	inc    eax
  40a904:	retf   0xe37d
  40a907:	lods   eax,DWORD PTR ds:[esi]
  40a908:	xor    al,0x67
  40a90a:	jmp    0x760d76f2
  40a90f:	push   cs
  40a910:	mov    ds:0x71a020a7,al
  40a915:	adc    dl,dh
  40a917:	dec    ecx
  40a918:	jmp    0x40a940
  40a91a:	xchg   esp,eax
  40a91b:	gs sar bh,0x9c
  40a91f:	mov    eax,edx
  40a921:	push   edi
  40a922:	sub    al,al
  40a924:	jae    0x40a96d
  40a926:	mov    ebx,DWORD PTR [edi+eiz*8]
  40a929:	add    al,0x32
  40a92b:	outs   dx,BYTE PTR ds:[esi]
  40a92c:	mov    edx,0x879dd8d
  40a931:	xor    al,ah
  40a933:	ror    DWORD PTR [ebx+0x7f40bfa],1
  40a939:	bound  edi,QWORD PTR [edi+0x4d]
  40a93c:	mov    esp,0x7d4e8be0
  40a941:	fcmove st,st(4)
  40a943:	mov    ds:0xa2154cbb,al
  40a948:	in     eax,dx
  40a949:	sub    al,0xe9
  40a94b:	and    ebx,DWORD PTR [edi-0x4d]
  40a94e:	(bad)  
  40a94f:	js     0x40a97b
  40a951:	sub    ecx,DWORD PTR [ebp+0x39c84a2f]
  40a957:	leave  
  40a958:	daa    
  40a959:	or     al,BYTE PTR [ebx+0x78ac66b5]
  40a95f:	loope  0x40a94a
  40a961:	sub    al,0xb1
  40a963:	ds cmp ebx,edx
  40a966:	jnp    0x40a98e
  40a968:	jno    0x40a8ea
  40a96a:	xor    eax,0x3234a21e
  40a96f:	enter  0x1355,0xb4
  40a973:	jb     0x40a97e
  40a975:	mov    cl,ch
  40a977:	outs   dx,BYTE PTR ds:[esi]
  40a978:	(bad)  
  40a979:	les    edx,FWORD PTR [ecx+esi*1+0x63]
  40a97d:	push   0xffffffdb
  40a97f:	rcr    DWORD PTR ds:0xb5165e6e,1
  40a985:	in     al,dx
  40a986:	fs push esi
  40a988:	jg     0x40a958
  40a98a:	dec    edi
  40a98b:	ins    BYTE PTR es:[edi],dx
  40a98c:	ret    
  40a98d:	test   eax,0xfa6d7e22
  40a992:	aaa    
  40a993:	jns    0x40a965
  40a995:	adc    BYTE PTR [edi+0x3f],dl
  40a998:	call   0x680343b2
  40a99d:	push   esp
  40a99e:	sbb    ecx,DWORD PTR [edx+0x10]
  40a9a1:	fiadd  WORD PTR [ecx+eiz*4]
  40a9a4:	test   DWORD PTR [si-0x48],edx
  40a9a8:	jmp    0x40a9aa
  40a9aa:	into   
  40a9ab:	pushf  
  40a9ac:	sti    
  40a9ad:	fstp   DWORD PTR [edi]
  40a9af:	dec    eax
  40a9b0:	dec    eax
  40a9b1:	or     dl,dh
  40a9b3:	pop    es
  40a9b4:	xchg   edx,eax
  40a9b5:	imul   ebp,ecx,0xffffffd1
  40a9b8:	(bad)  
  40a9b9:	jo     0x40a98a
  40a9bb:	dec    DWORD PTR [ebx]
  40a9bd:	or     al,0x4b
  40a9bf:	ja     0x40aa1d
  40a9c1:	or     ah,ch
  40a9c3:	nop
  40a9c4:	ds inc eax
  40a9c6:	bsf    eax,ebp
  40a9c9:	mov    esp,0xa2b58b0f
  40a9ce:	push   esp
  40a9cf:	test   BYTE PTR [ebp-0x16],al
  40a9d2:	jp     0x40a99a
  40a9d4:	jb     0x40a9e4
  40a9d6:	inc    eax
  40a9d7:	test   al,0xaa
  40a9d9:	ret    0xc91a
  40a9dc:	xchg   esp,eax
  40a9dd:	stc    
  40a9de:	jbe    0x40aa3d
  40a9e0:	xor    eax,0x88313e0b
  40a9e5:	push   esp
  40a9e6:	jmp    0xc434:0x82b3e717
  40a9ed:	xor    ah,BYTE PTR [eax]
  40a9ef:	push   ebp
  40a9f0:	xchg   esp,eax
  40a9f1:	retf   
  40a9f2:	mov    ch,0xe7
  40a9f4:	jb     0x40a9b6
  40a9f6:	jmp    0x40aa5f
  40a9f8:	mov    al,ds:0xfb6c288
  40a9fd:	pop    ebx
  40a9fe:	jbe    0x40a9ba
  40aa00:	and    BYTE PTR [ebx+0x358d4f9d],0x65
  40aa07:	shl    BYTE PTR [di-0x48],cl
  40aa0b:	dec    ebx
  40aa0c:	jo     0x40aa23
  40aa0e:	inc    esp
  40aa0f:	push   ebx
  40aa10:	fstp   TBYTE PTR [eax+0x6]
  40aa13:	in     eax,dx
  40aa14:	clc    
  40aa15:	test   DWORD PTR [ecx+0x78],edx
  40aa18:	mov    ss,WORD PTR [ecx+eiz*1]
  40aa1b:	cmpxchg DWORD PTR [eax+0x64],esp
  40aa1f:	mov    ah,0xc9
  40aa21:	jl     0x40aa1a
  40aa23:	push   ds
  40aa24:	sbb    bl,dh
  40aa26:	sbb    esi,esp
  40aa28:	bound  esp,QWORD PTR ds:[eax+0x257b0daf]
  40aa2f:	ficom  WORD PTR [edx-0x5c]
  40aa32:	loopne 0x40aa63
  40aa34:	pop    ds
  40aa35:	and    BYTE PTR [ebx],cl
  40aa37:	cmp    ecx,edx
  40aa39:	pushf  
  40aa3a:	(bad)  
  40aa3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa3c:	cmp    DWORD PTR [eax+0x1c],esi
  40aa3f:	xlat   BYTE PTR ds:[ebx]
  40aa40:	sub    bh,dl
  40aa42:	jmp    0xcdc8:0xf4e452ce
  40aa49:	xor    DWORD PTR [eax+0x77],eax
  40aa4c:	mov    ecx,0xf5a6d55e
  40aa51:	or     edi,DWORD PTR [eax-0x8184890]
  40aa57:	icebp  
  40aa58:	aad    0x52
  40aa5a:	lods   eax,DWORD PTR ds:[esi]
  40aa5b:	(bad)  
  40aa5c:	dec    ecx
  40aa5d:	cmp    esp,DWORD PTR [edi+ecx*1+0x14]
  40aa61:	jp     0x40aa00
  40aa63:	cld    
  40aa64:	shr    DWORD PTR [edi-0x68],1
  40aa67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa68:	std    
  40aa69:	shl    BYTE PTR [ebp+0x202a6f40],cl
  40aa6f:	aaa    
  40aa70:	repnz sub eax,0xf3b5df84
  40aa76:	jecxz  0x40aa9f
  40aa78:	jg     0x40aaad
  40aa7a:	adc    dh,BYTE PTR [edx]
  40aa7c:	xchg   ecx,eax
  40aa7d:	cmc    
  40aa7e:	inc    edi
  40aa7f:	lods   al,BYTE PTR ds:[esi]
  40aa80:	jno    0x40aade
  40aa82:	shr    edi,0x7f
  40aa85:	inc    ecx
  40aa86:	(bad)
  40aa89:	xor    cl,BYTE PTR [eax-0xf56d118]
  40aa8f:	test   BYTE PTR [ebp-0x4695b518],bl
  40aa95:	lds    eax,FWORD PTR [ecx]
  40aa97:	pop    edx
  40aa98:	enter  0x60fa,0x7e
  40aa9c:	cld    
  40aa9d:	ror    DWORD PTR [edi+0x73],0x81
  40aaa1:	outs   dx,DWORD PTR ds:[esi]
  40aaa2:	imul   ecx,DWORD PTR [edi+0x7badd718],0x45
  40aaa9:	(bad)  
  40aaaa:	dec    ebx
  40aaab:	mov    BYTE PTR [ebx],ah
  40aaad:	adc    eax,0x7b28bfed
  40aab2:	xlat   BYTE PTR ds:[ebx]
  40aab3:	loope  0x40aa99
  40aab5:	ret    0x4ece
  40aab8:	imul   edi,DWORD PTR [edx],0x74
  40aabb:	sti    
  40aabc:	inc    ebp
  40aabd:	push   es
  40aabe:	add    al,0x1
  40aac0:	or     DWORD PTR [eax-0x61fa1b04],ecx
  40aac6:	loop   0x40aacb
  40aac8:	sbb    ebp,0xfd14d6bb
  40aace:	mov    ah,0xaf
  40aad0:	outs   dx,DWORD PTR ds:[esi]
  40aad1:	aam    0x7f
  40aad3:	mov    esi,0x8c126785
  40aad8:	ret    
  40aad9:	arpl   WORD PTR [edi+0xfe317bb],si
  40aadf:	dec    eax
  40aae1:	pop    ss
  40aae2:	sub    eax,0x9d9a8c92
  40aae7:	adc    edi,0x93d5ba0b
  40aaed:	ins    DWORD PTR es:[edi],dx
  40aaee:	adc    eax,DWORD PTR [ebp-0x351bd047]
  40aaf4:	mov    ebx,0x9b32fe9d
  40aaf9:	and    al,BYTE PTR [ecx+0x37]
  40aafc:	int3   
  40aafd:	cmp    al,0xc
  40aaff:	add    ebp,edx
  40ab01:	ss pop ds
  40ab03:	xor    al,0xfd
  40ab05:	lds    esp,FWORD PTR [esi-0x4e6dcf36]
  40ab0b:	test   eax,0xeb8c358f
  40ab10:	pushf  
  40ab11:	jmp    0x40ab0d
  40ab13:	and    al,0xb6
  40ab15:	rcr    DWORD PTR [edi],cl
  40ab17:	mov    BYTE PTR [ebp-0x15],bh
  40ab1a:	arpl   bx,di
  40ab1c:	sub    BYTE PTR [edx+0x44],al
  40ab1f:	mov    dh,0xa1
  40ab21:	push   0x4de93dcd
  40ab26:	adc    BYTE PTR [ebx+0x22],0xd0
  40ab2a:	dec    DWORD PTR [edx+eax*1-0x64]
  40ab2e:	add    BYTE PTR [edx-0x4cec65fb],al
  40ab34:	in     al,dx
  40ab35:	mov    al,BYTE PTR [ebx-0x132bdf48]
  40ab3b:	int    0xca
  40ab3d:	adc    BYTE PTR ds:0xccc3e1de,bl
  40ab43:	imul   esi,edi,0xfffffff4
  40ab46:	fsub   DWORD PTR [ebp+eiz*4-0x7f]
  40ab4a:	mov    edx,0x9a3b08dd
  40ab4f:	clc    
  40ab50:	or     DWORD PTR [ecx-0x39],edx
  40ab53:	mov    WORD PTR [edi],ss
  40ab55:	dec    edi
  40ab56:	mov    DWORD PTR [ecx-0xb073e2c],eax
  40ab5c:	push   ss
  40ab5d:	(bad)  
  40ab5e:	lock push cs
  40ab60:	(bad)  
  40ab61:	shl    DWORD PTR [ecx+0xc4eedc6],cl
  40ab67:	sub    al,0xdb
  40ab69:	cmp    al,0xcf
  40ab6b:	into   
  40ab6c:	out    0xfb,eax
  40ab6e:	test   edi,0x29707fb0
  40ab74:	mov    ch,0x4c
  40ab76:	inc    ecx
  40ab77:	leave  
  40ab78:	jmp    0x40abea
  40ab7a:	xor    al,0x1b
  40ab7c:	fldcw  WORD PTR [ecx-0x3eced851]
  40ab82:	into   
  40ab83:	pop    gs
  40ab85:	jle    0x40ab69
  40ab87:	pop    esp
  40ab88:	xor    eax,0x59c38a7e
  40ab8d:	mov    bh,0x1b
  40ab8f:	fsub   st(6),st
  40ab91:	dec    ebp
  40ab92:	xchg   BYTE PTR [ecx],dh
  40ab94:	xchg   esp,eax
  40ab95:	jns    0x40ab93
  40ab97:	(bad)  
  40ab98:	jle    0x40ab8e
  40ab9a:	rcr    DWORD PTR [eax+0x62],0xa5
  40ab9e:	mov    ch,0x4c
  40aba0:	push   ds
  40aba1:	mov    dh,0x3
  40aba3:	(bad)  
  40aba4:	sub    dl,BYTE PTR [edi+0x28217423]
  40abaa:	sbb    al,0xf2
  40abac:	cmp    ebp,DWORD PTR [ebx-0x4e]
  40abaf:	retf   
  40abb0:	clc    
  40abb1:	jo     0x40ac13
  40abb3:	fwait
  40abb4:	push   ds
  40abb5:	ja     0x40abdc
  40abb7:	icebp  
  40abb8:	(bad)  
  40abb9:	sub    al,0x3f
  40abbb:	mov    ss,WORD PTR [edi]
  40abbd:	adc    al,0xd2
  40abbf:	out    0x44,al
  40abc1:	pop    edx
  40abc2:	ret    0xfed0
  40abc5:	stos   BYTE PTR es:[edi],al
  40abc6:	mov    BYTE PTR [ebx+0x19],bl
  40abc9:	mov    eax,ds:0x8748bbba
  40abce:	loopne 0x40ab7d
  40abd0:	cld    
  40abd1:	addr16 xor dh,cl
  40abd4:	add    edx,DWORD PTR [esi+0x15]
  40abd7:	cmp    al,BYTE PTR [edi+0x7d6a4f89]
  40abdd:	or     al,0x8d
  40abdf:	add    al,0xa5
  40abe1:	or     BYTE PTR [esi+0x75132483],al
  40abe7:	imul   DWORD PTR [esi-0x37]
  40abea:	pop    esi
  40abeb:	mov    ebp,0x57ed656e
  40abf0:	jbe    0x40ac27
  40abf2:	mov    BYTE PTR [eax-0x14],ah
  40abf5:	xchg   edx,eax
  40abf6:	aad    0xda
  40abf8:	mov    ch,0x6a
  40abfa:	mov    gs:0x80ec0fb4,eax
  40ac00:	rcl    DWORD PTR [ebx],1
  40ac02:	mov    al,ds:0x54bb5a48
  40ac07:	fadd   st(7),st
  40ac09:	inc    esi
  40ac0a:	add    WORD PTR fs:[ebp-0x42a421d],di
  40ac12:	fistp  QWORD PTR [eax-0x6edfadd4]
  40ac18:	loopne 0x40ac67
  40ac1a:	not    DWORD PTR [edx-0x20c6d96b]
  40ac20:	mov    edi,0xf62ff5e9
  40ac25:	push   0xffffffaa
  40ac27:	jp     0x40ac9c
  40ac29:	mov    ebp,0xea9788d4
  40ac2e:	mov    DWORD PTR [ecx+eax*1+0x57754629],esi
  40ac35:	jg     0x40ac26
  40ac37:	std    
  40ac38:	sar    BYTE PTR [esi+0x45],1
  40ac3b:	or     al,0x7e
  40ac3d:	aaa    
  40ac3e:	ror    DWORD PTR [edx+0x1c026797],1
  40ac44:	jge    0x40abfe
  40ac46:	push   cs
  40ac47:	pop    ebx
  40ac48:	xchg   ecx,eax
  40ac49:	pop    esi
  40ac4a:	es jl  0x40ac99
  40ac4d:	loop   0x40aca8
  40ac4f:	ret    0x4e6d
  40ac52:	das    
  40ac53:	or     DWORD PTR [ebp-0x16f1b421],esp
  40ac59:	adc    eax,0xb82f0f0d
  40ac5e:	mov    bl,0xc3
  40ac60:	mov    al,0x46
  40ac62:	addr16 jmp 0xef41a4e8
  40ac68:	mov    dl,0xb7
  40ac6a:	rcr    BYTE PTR [esi-0x1af71b54],0x75
  40ac71:	mov    edi,0x8384961a
  40ac76:	pushf  
  40ac77:	push   cx
  40ac79:	pop    esp
  40ac7a:	sbb    BYTE PTR ds:0x8f376b75,ah
  40ac80:	sbb    edx,DWORD PTR [edx+0x4b]
  40ac83:	ja     0x40ac69
  40ac85:	add    ecx,DWORD PTR [edx-0x50c823f9]
  40ac8b:	loop   0x40acfa
  40ac8d:	fimul  WORD PTR [esi]
  40ac8f:	sub    ah,BYTE PTR [edx+0x959f7c4]
  40ac95:	push   0xd10a691b
  40ac9a:	mov    WORD PTR [esi],cs
  40ac9c:	neg    DWORD PTR [edx]
  40ac9e:	in     eax,0xad
  40aca0:	(bad)  
  40aca2:	ss mov eax,0x3afed937
  40aca8:	jo     0x40ac4b
  40acaa:	and    eax,0xa59f3d64
  40acaf:	ss add edi,eax
  40acb2:	imul   ecx,DWORD PTR [ecx],0xffffffc5
  40acb5:	push   ebp
  40acb6:	std    
  40acb7:	daa    
  40acb8:	cld    
  40acb9:	adc    al,BYTE PTR [edi-0x2b]
  40acbc:	out    0x81,al
  40acbe:	mov    dl,0xb3
  40acc0:	(bad)  
  40acc1:	sbb    esi,ebx
  40acc3:	arpl   ax,bp
  40acc5:	jecxz  0x40acd1
  40acc7:	jmp    0xf7d54ec
  40accc:	mov    DWORD PTR [eax],esi
  40acce:	lods   al,BYTE PTR ds:[esi]
  40accf:	retf   0xf9c5
  40acd2:	aad    0x9c
  40acd4:	popf   
  40acd5:	push   ebp
  40acd6:	mov    bl,BYTE PTR ss:[esi-0x6a]
  40acda:	sar    DWORD PTR [edi+0x36885659],1
  40ace0:	mov    al,ds:0x7f8c5009
  40ace5:	and    al,0xef
  40ace7:	xor    DWORD PTR [eax],edi
  40ace9:	aad    0x26
  40aceb:	loop   0x40ad30
  40aced:	xchg   DWORD PTR [esi+0x5a],esi
  40acf0:	xchg   edi,eax
  40acf1:	inc    DWORD PTR [edx+0x759a7a20]
  40acf7:	mov    cl,0x27
  40acf9:	test   eax,esp
  40acfb:	xchg   edx,eax
  40acfc:	sub    BYTE PTR [edi-0x7d2c66fe],0xd6
  40ad03:	dec    edi
  40ad04:	stos   BYTE PTR es:[edi],al
  40ad05:	sbb    eax,0xe0f272ad
  40ad0a:	xchg   DWORD PTR [esi+0x25],edi
  40ad0d:	repnz fld DWORD PTR [edx+0x32]
  40ad11:	stos   DWORD PTR es:[edi],eax
  40ad12:	lock jo 0x40ad4a
  40ad15:	adc    al,0x47
  40ad17:	icebp  
  40ad18:	xor    al,0xef
  40ad1a:	cdq    
  40ad1b:	pushf  
  40ad1c:	int3   
  40ad1d:	call   0xb389fc87
  40ad22:	inc    edx
  40ad23:	cmp    esi,edx
  40ad25:	gs lahf 
  40ad27:	shl    BYTE PTR [eax-0xd],0x76
  40ad2b:	aas    
  40ad2c:	call   0x5ec0:0xc7af284a
  40ad33:	bound  ebp,QWORD PTR [edi+edx*2]
  40ad36:	js     0x40ad7d
  40ad38:	inc    edi
  40ad39:	sbb    DWORD PTR [ecx],ebp
  40ad3b:	cmp    cl,bl
  40ad3d:	jg     0x40acef
  40ad3f:	ins    BYTE PTR es:[edi],dx
  40ad40:	scas   eax,DWORD PTR es:[edi]
  40ad41:	jmp    0x40ad5d
  40ad43:	in     eax,0x55
  40ad45:	test   DWORD PTR [ecx],esp
  40ad47:	push   0xc4c42620
  40ad4c:	sub    al,0x33
  40ad4e:	(bad)  
  40ad4f:	out    dx,al
  40ad50:	ja     0x40ad31
  40ad52:	jns    0x40ad3d
  40ad54:	imul   eax,DWORD PTR [ebx-0x52],0x40c301a3
  40ad5b:	cli    
  40ad5c:	sbb    BYTE PTR [edi-0x450931],0x54
  40ad63:	test   DWORD PTR [ebp-0x784f9df8],edi
  40ad69:	push   eax
  40ad6a:	fcom   DWORD PTR [ebx]
  40ad6c:	retf   0x3c68
  40ad6f:	dec    ebp
  40ad70:	addr16 test bh,ah
  40ad73:	mov    bl,0xd9
  40ad75:	div    DWORD PTR [ecx]
  40ad77:	pop    edi
  40ad78:	out    dx,al
  40ad79:	stos   DWORD PTR es:[edi],eax
  40ad7a:	inc    edx
  40ad7b:	test   eax,0xc655bc28
  40ad80:	pop    esp
  40ad81:	fcmovbe st,st(5)
  40ad83:	clc    
  40ad84:	arpl   sp,bx
  40ad86:	xor    bl,al
  40ad88:	push   ebp
  40ad89:	(bad)  
  40ad8a:	and    BYTE PTR [eax+0x1b6e8e28],al
  40ad90:	stos   DWORD PTR es:[edi],eax
  40ad91:	xor    ch,BYTE PTR [esi]
  40ad93:	sub    DWORD PTR [ecx-0x61a3428],esp
  40ad99:	pop    eax
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a72b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a72f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0xfc56c4]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffe5
  40aed6:	sbb    DWORD PTR [ebp+0x68f0f6af],ecx
  40aedc:	dec    esp
  40aedd:	int3   
  40aede:	(bad)  
  40aedf:	iret   
  40aee0:	mov    dh,0x2
  40aee2:	sbb    eax,0xc0eb6f22
  40aee7:	xor    ecx,edx
  40aee9:	mov    dl,0x88
  40aeeb:	jo     0x40ae8e
  40aeed:	lahf   
  40aeee:	sub    ecx,ecx
  40aef0:	add    cl,ah
  40aef2:	repz (bad) 
  40aef4:	imul   ebx,DWORD PTR [ebx+0x18],0xfffffffb
  40aef8:	(bad)  
  40aef9:	outs   dx,DWORD PTR ds:[esi]
  40aefa:	ins    BYTE PTR es:[edi],dx
  40aefb:	add    al,0x6c
  40aefd:	adc    BYTE PTR [eax-0x38],0xe5
  40af01:	push   eax
  40af02:	fdivr  QWORD PTR [eax-0x27]
  40af05:	pop    ecx
  40af06:	mov    edi,0x3feea54f
  40af0b:	xor    BYTE PTR [esp+ebp*4+0x5887f2a9],dh
  40af12:	sbb    cl,bh
  40af14:	dec    esi
  40af15:	push   edi
  40af16:	enter  0xbdc6,0x99
  40af1a:	data16 mov BYTE PTR [esp+0x11],0x8f
  40af20:	inc    ecx
  40af21:	adc    cl,BYTE PTR [ebx*1+0x27115053]
  40af28:	dec    edx
  40af29:	out    dx,eax
  40af2a:	loopne 0x40af84
  40af2c:	aas    
  40af2d:	xor    ebp,DWORD PTR ds:0x5f0c9b82
  40af33:	jmp    0x2f9bcddc
  40af38:	fwait
  40af39:	aam    0x30
  40af3b:	sar    bh,cl
  40af3d:	out    dx,al
  40af3e:	sbb    ecx,DWORD PTR [edx+0x7ae4ce5a]
  40af44:	sahf   
  40af45:	xchg   edx,eax
  40af46:	test   ebx,0xeb9f97c2
  40af4c:	sub    eax,0xed9ac69c
  40af51:	stc    
  40af52:	cli    
  40af53:	ds fwait
  40af55:	xchg   al,ah
  40af57:	jne    0x40aee5
  40af59:	mov    eax,0xf16a8157
  40af5e:	jmp    0x4176945b
  40af63:	sub    al,cl
  40af65:	xchg   edx,eax
  40af66:	fs retf 
  40af68:	push   es
  40af69:	xor    eax,0x536906db
  40af6e:	xchg   BYTE PTR [edx+0x64eaff69],al
  40af74:	push   cs
  40af75:	cmp    al,0xea
  40af77:	and    ecx,edx
  40af79:	call   0x6a089c6a
  40af7e:	jae    0x40af23
  40af80:	mov    al,ds:0x189cd94a
  40af85:	sahf   
  40af86:	iret   
  40af87:	mov    ecx,0xd617b7e3
  40af8c:	das    
  40af8d:	lahf   
  40af8e:	inc    edx
  40af8f:	stos   BYTE PTR es:[edi],al
  40af90:	jmp    0x40af58
  40af92:	pop    esp
  40af93:	adc    BYTE PTR [ecx-0x28],ah
  40af96:	push   ss
  40af97:	fsubr  DWORD PTR [eax+0xe8ac182]
  40af9d:	or     DWORD PTR [edi-0x66],eax
  40afa0:	mov    dl,0x8f
  40afa2:	push   ebp
  40afa3:	mov    eax,ds:0xa5ea5934
  40afa8:	aad    0x4c
  40afaa:	bound  ebp,QWORD PTR [eax+0x9eefaf0]
  40afb0:	xchg   edi,eax
  40afb1:	lds    esi,FWORD PTR [edi]
  40afb3:	(bad)
  40afb7:	mov    ds:0x3f875c55,eax
  40afbc:	push   es
  40afbd:	das    
  40afbe:	ja     0x40b00b
  40afc0:	(bad)  
  40afc1:	nop
  40afc2:	call   0xaddca091
  40afc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc8:	(bad)  
  40afc9:	sbb    BYTE PTR [ebx-0x58],dh
  40afcc:	sub    BYTE PTR [edi],al
  40afce:	xchg   ecx,eax
  40afcf:	lods   eax,DWORD PTR ds:[esi]
  40afd0:	xor    eax,0xc19a6ea5
  40afd5:	test   bh,dl
  40afd7:	dec    esi
  40afd8:	pop    edi
  40afd9:	mov    cl,0x1f
  40afdb:	xlat   BYTE PTR ds:[ebx]
  40afdc:	fsub   DWORD PTR [ecx-0x66e5759e]
  40afe2:	push   ecx
  40afe3:	pushf  
  40afe4:	xor    edx,ebp
  40afe6:	add    BYTE PTR [edi-0x5c],0xa7
  40afea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afeb:	or     BYTE PTR [esi-0xc],cl
  40afee:	xlat   BYTE PTR ds:[ebx]
  40afef:	add    al,0x5a
  40aff1:	dec    eax
  40aff2:	inc    ebp
  40aff3:	std    
  40aff4:	and    bl,BYTE PTR [esi+0x7fec64ff]
  40affa:	repz lea edx,[edx+0x6d]
  40affe:	js     0x40afbc
  40b000:	pop    ecx
  40b001:	les    edi,FWORD PTR [ecx]
  40b003:	mov    dl,0x63
  40b005:	jbe    0x40b022
  40b007:	dec    edx
  40b008:	je     0x40b033
  40b00a:	inc    esp
  40b00b:	nop
  40b00c:	pop    ebx
  40b00d:	stc    
  40b00e:	enter  0xb,0xe1
  40b012:	push   0xffffff8e
  40b014:	mov    esp,0x7c7177c4
  40b019:	mov    dl,0x81
  40b01b:	pop    esp
  40b01c:	(bad)  
  40b01d:	push   ebx
  40b01e:	jno    0x40b076
  40b020:	imul   esi,DWORD PTR [edi],0xfffffffe
  40b023:	loopne 0x40afdd
  40b025:	fcomp  DWORD PTR [edx+0x10]
  40b028:	sub    BYTE PTR [ebx+ebp*1-0x61],0xec
  40b02d:	mov    cl,0x8
  40b02f:	jmp    0x47b8faa2
  40b034:	sub    al,0x83
  40b036:	jg     0x40b0ab
  40b038:	xor    eax,0x49f2e8b9
  40b03d:	mov    ebx,0xfa2053c0
  40b042:	jne    0x40afca
  40b044:	inc    edi
  40b045:	cmp    BYTE PTR [edi],ch
  40b047:	jno    0x40b035
  40b049:	mov    cs,WORD PTR [esi]
  40b04b:	jg     0x40b05c
  40b04d:	test   DWORD PTR cs:[eax],eax
  40b050:	xchg   ebx,eax
  40b051:	out    0x66,al
  40b053:	daa    
  40b054:	retf   0x8a04
  40b057:	xor    BYTE PTR [ebx-0x40],ch
  40b05a:	jg     0x40b026
  40b05c:	fist   WORD PTR ds:0xf51b16a3
  40b062:	xchg   esp,eax
  40b063:	pop    ebx
  40b064:	jp     0x40b001
  40b066:	loop   0x40b051
  40b068:	ins    DWORD PTR es:[edi],dx
  40b069:	cwde   
  40b06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b06b:	gs (bad) 
  40b06d:	fisub  DWORD PTR ds:0x63135856
  40b073:	add    eax,0xaabb3d19
  40b078:	cmp    al,0xf6
  40b07a:	ins    BYTE PTR es:[edi],dx
  40b07b:	(bad)  
  40b07c:	jmp    0x7735e567
  40b081:	jb     0x40b0ab
  40b083:	mov    cl,0x76
  40b085:	dec    DWORD PTR [edi]
  40b087:	inc    esp
  40b088:	shl    BYTE PTR [eax],1
  40b08a:	aad    0x12
  40b08c:	dec    eax
  40b08d:	imul   ecx,DWORD PTR ds:0x81e1f0a4,0x38
  40b094:	sbb    al,0x22
  40b096:	inc    edx
  40b097:	xchg   esp,eax
  40b098:	clc    
  40b099:	add    BYTE PTR [ebx-0x2dd4f386],bh
  40b09f:	add    DWORD PTR [esi],eax
  40b0a1:	push   esi
  40b0a2:	xchg   ebp,eax
  40b0a3:	xor    al,0xf3
  40b0a5:	mov    dh,BYTE PTR [ecx+0x79abc22]
  40b0ab:	adc    ebp,DWORD PTR [ebx]
  40b0ad:	pop    ebp
  40b0ae:	xchg   DWORD PTR [edi-0x68a4f566],ebp
  40b0b4:	dec    edi
  40b0b5:	jle    0x40b049
  40b0b7:	mov    bh,0x9b
  40b0b9:	sbb    bl,BYTE PTR [ebx]
  40b0bb:	or     eax,0x8973a8c
  40b0c0:	xchg   ebp,eax
  40b0c1:	enter  0xc656,0x50
  40b0c5:	scas   eax,DWORD PTR es:[edi]
  40b0c6:	xchg   ebx,eax
  40b0c7:	lock add eax,0x5f9d1e42
  40b0cd:	mov    esp,0xad2e89a6
  40b0d2:	pop    ebx
  40b0d3:	jmp    0x40b0d0
  40b0d5:	daa    
  40b0d6:	rol    DWORD PTR [eax+ecx*1-0x8fea38b],1
  40b0dd:	adc    cl,cl
  40b0df:	ja     0x40b15e
  40b0e1:	cmp    al,0xcc
  40b0e3:	pusha  
  40b0e4:	repnz mov cl,BYTE PTR [ebp-0x31]
  40b0e8:	imul   esi,esi,0x2f
  40b0eb:	or     bl,BYTE PTR [edi-0x296fb491]
  40b0f1:	sub    DWORD PTR [ebp+0xf7b78f],ebp
  40b0f7:	out    dx,al
  40b0f8:	mov    ecx,0x9d117bb
  40b0fd:	cmp    al,0x88
  40b0ff:	fcomp  QWORD PTR gs:[edx]
  40b102:	push   edx
  40b103:	ja     0x40b0c5
  40b105:	ins    DWORD PTR es:[edi],dx
  40b106:	fbld   TBYTE PTR [edx+eiz*2+0x52f9dc3c]
  40b10d:	mov    ecx,0xddd435b5
  40b112:	arpl   bp,bp
  40b114:	sbb    dh,dl
  40b116:	xor    BYTE PTR [esi+0xa21b6b2],dh
  40b11c:	jae    0x40b174
  40b11e:	out    dx,al
  40b11f:	xchg   ecx,eax
  40b120:	mov    ebx,0xbfcc3cba
  40b125:	int3   
  40b126:	je     0x40b155
  40b128:	mov    al,0x22
  40b12a:	test   DWORD PTR ds:0x5914d167,edx
  40b130:	mov    ?,WORD PTR [ebp+0x61]
  40b133:	cmc    
  40b134:	inc    ecx
  40b135:	xor    ch,cl
  40b137:	(bad)  
  40b138:	fisttp QWORD PTR es:[esi-0x64b06892]
  40b13f:	retf   
  40b140:	enter  0xefe6,0x1e
  40b144:	aad    0x64
  40b146:	or     cl,al
  40b148:	repnz aam 0x5e
  40b14b:	cmp    dl,ah
  40b14d:	adc    DWORD PTR [ebx+0x5b],edi
  40b150:	xchg   edx,eax
  40b151:	inc    edx
  40b152:	and    DWORD PTR [ebx],edx
  40b154:	cmp    BYTE PTR [ebx+0x5],cl
  40b157:	rcl    cl,1
  40b159:	jge    0x40b165
  40b15b:	adc    bh,dh
  40b15d:	es and al,0xdf
  40b160:	inc    ecx
  40b161:	addr16 mov esi,0xcb73e7d9
  40b167:	adc    eax,0xfc8203e0
  40b16c:	ins    BYTE PTR es:[edi],dx
  40b16d:	fisub  DWORD PTR [ecx]
  40b16f:	loopne 0x40b1b7
  40b171:	in     al,dx
  40b172:	jge    0x40b1bc
  40b174:	xchg   edi,eax
  40b175:	pop    edi
  40b176:	xor    dh,0x94
  40b179:	popf   
  40b17a:	xor    eax,0x921fa2f1
  40b180:	pmulhuw mm1,QWORD PTR [eax]
  40b183:	pop    eax
  40b184:	pop    ecx
  40b185:	sub    DWORD PTR [ebp-0x7e3e1e47],ecx
  40b18b:	sub    BYTE PTR [eax],0xfd
  40b18e:	mov    ah,0x21
  40b190:	rol    BYTE PTR [edx+0x5a6dfe27],1
  40b196:	(bad)  
  40b197:	repnz outs dx,DWORD PTR ds:[esi]
  40b199:	add    al,0xa1
  40b19b:	xor    BYTE PTR [edi-0x743e4149],dl
  40b1a1:	adc    al,0x7b
  40b1a3:	add    al,0x34
  40b1a5:	mov    ds:0xc728d4fd,eax
  40b1aa:	or     al,0x51
  40b1ac:	sub    bl,cl
  40b1ae:	repz add BYTE PTR [edx],cl
  40b1b1:	dec    ecx
  40b1b2:	sbb    BYTE PTR [ecx+0x4c7eb3b9],bh
  40b1b8:	aad    0x34
  40b1ba:	ficom  DWORD PTR [ebx+0x1]
  40b1bd:	sbb    DWORD PTR [edi],edi
  40b1bf:	cmp    ah,cl
  40b1c1:	adc    BYTE PTR [ebx-0x29],ch
  40b1c4:	pop    ss
  40b1c5:	test   BYTE PTR [ebp+0x61],ah
  40b1c8:	jmp    0xa24e3917
  40b1cd:	cld    
  40b1ce:	out    dx,eax
  40b1cf:	jo     0x40b24f
  40b1d1:	scas   eax,DWORD PTR es:[edi]
  40b1d2:	bnd jmp 0xd32c6f6d
  40b1d8:	cmp    al,0x33
  40b1da:	scas   eax,DWORD PTR es:[edi]
  40b1db:	fidivr DWORD PTR ds:0xf3e81a17
  40b1e1:	imul   eax,DWORD PTR [eax+0x77],0xa4f2c510
  40b1e8:	nop
  40b1e9:	push   cs
  40b1ea:	lods   eax,DWORD PTR ds:[esi]
  40b1eb:	or     ecx,DWORD PTR [ebp+esi*4-0x79f158fc]
  40b1f2:	jecxz  0x40b240
  40b1f4:	add    al,dh
  40b1f6:	push   eax
  40b1f7:	ret    0x5daf
  40b1fa:	(bad)  
  40b1fb:	and    BYTE PTR [ecx-0x714fc850],dh
  40b201:	adc    ebp,edi
  40b203:	fidivr WORD PTR [esi]
  40b205:	into   
  40b206:	out    0xde,eax
  40b208:	sbb    DWORD PTR [ebp-0x24844542],0x41
  40b20f:	mov    ah,0xc9
  40b211:	dec    ebx
  40b212:	jge    0x40b197
  40b214:	jl     0x40b1d3
  40b216:	fdivr  QWORD PTR [esi+ebp*8+0x3a557322]
  40b21d:	inc    eax
  40b21e:	popa   
  40b21f:	in     eax,0xb3
  40b221:	sub    al,0x81
  40b223:	or     al,0x69
  40b225:	cmp    eax,0x64176583
  40b22a:	cld    
  40b22b:	aad    0x9c
  40b22d:	push   ss
  40b22e:	ins    DWORD PTR es:[edi],dx
  40b22f:	adc    ebx,DWORD PTR [edx]
  40b231:	jle    0x40b292
  40b233:	stos   DWORD PTR es:[edi],eax
  40b234:	mov    edx,DWORD PTR [ecx+edi*2+0x3da87a14]
  40b23b:	push   cs
  40b23c:	adc    esi,DWORD PTR [esi]
  40b23e:	jg     0x40b27f
  40b240:	and    edx,ecx
  40b242:	sar    BYTE PTR [eax+0x111d1460],0x55
  40b249:	sbb    al,0xe7
  40b24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b24c:	shr    DWORD PTR [edi],1
  40b24e:	lahf   
  40b24f:	aad    0xe2
  40b251:	icebp  
  40b252:	jge    0x40b2b2
  40b254:	aas    
  40b255:	add    BYTE PTR [edi-0x6a],dl
  40b258:	jmp    0x9085e5b2
  40b25d:	test   DWORD PTR [ebx-0x10d2b964],ebx
  40b263:	neg    DWORD PTR [eax]
  40b265:	fistp  DWORD PTR ds:0xf84d281c
  40b26b:	mov    al,0x95
  40b26d:	cwde   
  40b26e:	fnstenv [esi-0x41e9c0ff]
  40b274:	jnp    0x40b249
  40b276:	jp     0x40b2ea
  40b278:	jp     0x40b2d0
  40b27a:	leave  
  40b27b:	(bad)  
  40b27c:	ins    DWORD PTR es:[edi],dx
  40b27d:	inc    edi
  40b27e:	repz pusha 
  40b280:	rcr    bh,cl
  40b282:	pusha  
  40b283:	or     DWORD PTR [esi],0x74
  40b286:	mov    edi,0xcd864eff
  40b28b:	mov    cl,0x9f
  40b28d:	push   esp
  40b28e:	push   esp
  40b28f:	mov    cl,0xe2
  40b291:	or     edi,DWORD PTR [eax+edx*4]
  40b294:	retf   0x6089
  40b297:	sub    DWORD PTR [ecx],esi
  40b299:	repnz and dh,BYTE PTR ds:0xbff698f0
  40b2a0:	push   ebp
  40b2a1:	adc    BYTE PTR [ebx],0x82
  40b2a4:	adc    BYTE PTR [edx],ch
  40b2a6:	cmp    dh,ch
  40b2a8:	popa   
  40b2a9:	call   0x6abfde43
  40b2ae:	push   ds
  40b2af:	dec    ecx
  40b2b0:	push   cs
  40b2b1:	daa    
  40b2b2:	ret    0x92a8
  40b2b5:	mov    al,ds:0xee3fa238
  40b2ba:	pop    edx
  40b2bb:	lods   al,BYTE PTR ds:[esi]
  40b2bc:	not    BYTE PTR [esi+0x791f5dea]
  40b2c2:	loop   0x40b31c
  40b2c4:	addr16 inc esi
  40b2c6:	mov    DWORD PTR [edi-0x75d77080],ebp
  40b2cc:	xchg   ebp,eax
  40b2cd:	mov    DWORD PTR [edi+eiz*4+0x34],eax
  40b2d1:	add    DWORD PTR [edi],0xe0696b81
  40b2d7:	stc    
  40b2d8:	xchg   ebx,eax
  40b2d9:	adc    bl,BYTE PTR [esp-0x68]
  40b2dd:	addr16 push es
  40b2df:	add    DWORD PTR [eax+0x69c71251],0x7a
  40b2e6:	or     bh,BYTE PTR [edi]
  40b2e8:	addr16 cmp eax,0x9acedd94
  40b2ee:	or     DWORD PTR [ecx],edi
  40b2f0:	fisub  DWORD PTR [ecx]
  40b2f2:	jae    0x40b312
  40b2f4:	inc    ebx
  40b2f5:	lock and ecx,0x4c
  40b2f9:	(bad)  [ebp-0x5c]
  40b2fc:	mov    esi,0x29b8ffe9
  40b301:	imul   BYTE PTR cs:[edi-0x39]
  40b305:	pop    ss
  40b306:	fs sahf 
  40b308:	add    al,0xe5
  40b30a:	sbb    BYTE PTR [edx-0x261f525c],bh
  40b310:	shl    DWORD PTR ds:0x4fad6f2d,cl
  40b316:	stc    
  40b317:	mov    dl,0xb2
  40b319:	mov    dl,bl
  40b31b:	scas   eax,DWORD PTR es:[edi]
  40b31c:	dec    edx
  40b31d:	sahf   
  40b31e:	call   0xdd3927fb
  40b323:	bound  esp,QWORD PTR [ebx]
  40b325:	jns    0x40b364
  40b327:	call   0x37653912
  40b32c:	sub    al,0x3a
  40b32e:	mov    ebp,0x66f7cdb2
  40b333:	bound  ebx,QWORD PTR [ebp-0x30]
  40b336:	jbe    0x40b398
  40b338:	ret    
  40b339:	sbb    esp,DWORD PTR ds:0x60a95381
  40b33f:	or     dh,al
  40b341:	out    dx,eax
  40b342:	in     al,0x61
  40b344:	ss popa 
  40b346:	stc    
  40b347:	aam    0xe7
  40b349:	lock pop esp
  40b34b:	pushw  ds
  40b34d:	jl     0x40b2e0
  40b34f:	push   ds
  40b350:	leave  
  40b351:	push   edx
  40b352:	popf   
  40b353:	cmc    
  40b354:	inc    eax
  40b355:	add    eax,0xee2885a5
  40b35a:	mov    ebx,DWORD PTR [edi-0x779b2567]
  40b360:	pop    eax
  40b361:	push   edi
  40b362:	js     0x40b35e
  40b364:	pop    esi
  40b365:	push   ss
  40b366:	pop    esp
  40b367:	mov    al,0xc6
  40b369:	cmp    DWORD PTR [edi],0x70
  40b36c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b36d:	push   esi
  40b36e:	inc    ebx
  40b36f:	sub    ch,BYTE PTR [ebp+0x27edbd59]
  40b375:	(bad)  
  40b376:	out    0x17,eax
  40b378:	scas   al,BYTE PTR es:[edi]
  40b379:	daa    
  40b37a:	jmp    0x40b371
  40b37c:	jnp    0x40b3fd
  40b37e:	enter  0xba58,0xf9
  40b382:	imul   ebx,DWORD PTR [edx-0x39],0x795b4d55
  40b389:	jge    0x40b384
  40b38b:	sti    
  40b38c:	jecxz  0x40b3a3
  40b38e:	cmp    eax,0xf703bc25
  40b393:	mov    al,ds:0x9cf0a81f
  40b398:	or     eax,0xd43396ab
  40b39d:	mov    ah,0x10
  40b39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a0:	pop    edi
  40b3a1:	and    eax,0x85eaf4d8
  40b3a6:	and    DWORD PTR [eax-0x7931506c],edi
  40b3ac:	out    dx,al
  40b3ad:	scas   al,BYTE PTR es:[edi]
  40b3ae:	push   esi
  40b3af:	push   edi
  40b3b0:	xor    BYTE PTR [ecx+0x19966d7d],0x96
  40b3b7:	mov    al,ds:0xb2046332
  40b3bc:	call   0x64fd29c1
  40b3c1:	loope  0x40b43c
  40b3c3:	ds (bad) 
  40b3c5:	pop    edx
  40b3c6:	retf   
  40b3c7:	xor    al,BYTE PTR [eax-0x5b30a7e1]
  40b3cd:	je     0x40b440
  40b3cf:	repnz and ebp,eax
  40b3d2:	loope  0x40b420
  40b3d4:	shl    DWORD PTR [eax+0x7b33e005],0x36
  40b3db:	aad    0xcf
  40b3dd:	pop    eax
  40b3de:	xchg   edi,eax
  40b3df:	adc    DWORD PTR [ebx-0x70faaa81],0x3a
  40b3e6:	dec    ebx
  40b3e7:	xchg   esi,eax
  40b3e8:	fisubr DWORD PTR ds:0x7e98cd7e
  40b3ee:	mov    al,0x51
  40b3f0:	in     al,dx
  40b3f1:	int3   
  40b3f2:	jbe    0x40b43e
  40b3f4:	mov    es,edi
  40b3f6:	shr    edi,0xa6
  40b3f9:	iret   
  40b3fa:	inc    eax
  40b3fb:	push   ss
  40b3fc:	push   esp
  40b3fd:	hlt    
  40b3fe:	sbb    bh,BYTE PTR [ebp-0x3]
  40b401:	daa    
  40b402:	(bad)  
  40b403:	ret    
  40b404:	ins    DWORD PTR es:[edi],dx
  40b405:	cdq    
  40b406:	and    edi,ecx
  40b408:	jl     0x40b477
  40b40a:	xor    DWORD PTR ds:0x1b1f2607,0x59
  40b411:	sbb    bl,BYTE PTR [ebx+0x4734792b]
  40b417:	(bad)  
  40b418:	xor    BYTE PTR [eax],al
  40b41a:	xchg   ebx,eax
  40b41b:	out    dx,eax
  40b41c:	adc    eax,0xe0244eeb
  40b421:	adc    BYTE PTR [edi+0xa007770],cl
  40b427:	out    dx,al
  40b428:	mov    DWORD PTR [eiz*8+0x7bec5dd9],edi
  40b42f:	out    dx,al
  40b430:	(bad)  
  40b431:	movhps xmm3,QWORD PTR [eax+0x3f]
  40b435:	ins    DWORD PTR es:[edi],dx
  40b436:	and    BYTE PTR [ecx],cl
  40b438:	or     bh,ah
  40b43a:	out    dx,al
  40b43b:	and    dh,BYTE PTR [ebp-0x75]
  40b43e:	jne    0x40b3f3
  40b440:	mov    edx,0x9c1483eb
  40b445:	or     BYTE PTR [esi],0x80
  40b448:	sub    esp,ebp
  40b44a:	dec    edi
  40b44b:	cmp    al,0x3d
  40b44d:	addr16 mov eax,0x57aed3d8
  40b453:	cmp    dl,cl
  40b455:	mul    dh
  40b457:	pop    ebx
  40b458:	inc    esp
  40b459:	aam    0xfb
  40b45b:	jge    0x40b3ea
  40b45d:	mov    ds:0x657f8e4f,al
  40b462:	int3   
  40b463:	sub    edi,DWORD PTR [eax-0xb46bc2e]
  40b469:	inc    edi
  40b46a:	lds    edx,FWORD PTR [esi-0x58]
  40b46d:	retf   0x1c26
  40b470:	dec    ecx
  40b471:	mov    dl,0xf4
  40b473:	sub    al,0xa6
  40b475:	sbb    DWORD PTR [ebx+0x6],ebp
  40b478:	(bad)  
  40b479:	cmp    BYTE PTR [eax+0x64],dl
  40b47c:	test   edx,ecx
  40b47e:	std    
  40b47f:	sbb    dh,cl
  40b481:	call   0x6c816dd1
  40b486:	cmp    al,0x15
  40b488:	push   ss
  40b489:	aaa    
  40b48a:	pushf  
  40b48b:	fisubr WORD PTR [ebp+eiz*1+0x57a4f13b]
  40b492:	dec    edx
  40b493:	push   edi
  40b494:	ret    
  40b495:	test   al,0x6
  40b497:	stc    
  40b498:	mov    dl,0x5c
  40b49a:	dec    ebx
  40b49b:	lods   al,BYTE PTR ds:[esi]
  40b49c:	mov    dh,0xdb
  40b49e:	(bad)  
  40b49f:	lea    edi,ds:0x8556a3af
  40b4a5:	pushf  
  40b4a6:	enter  0x4b95,0x79
  40b4aa:	fidiv  WORD PTR [edi+0x609e4a30]
  40b4b0:	mov    BYTE PTR [edx+0x4fb727d9],0x5d
  40b4b7:	mov    al,ds:0xafe9b8ca
  40b4bc:	mov    ebp,0x228e8342
  40b4c1:	push   ecx
  40b4c2:	test   DWORD PTR [edx+0x36d7196c],ebx
  40b4c8:	sub    eax,0x7bac025e
  40b4cd:	cdq    
  40b4ce:	mov    ds:0x3871fde7,eax
  40b4d3:	mov    ds:0x38cd4012,al
  40b4d8:	adc    BYTE PTR [eax+0x2c],ch
  40b4db:	xchg   ecx,eax
  40b4dc:	dec    ebx
  40b4dd:	sub    DWORD PTR [eax-0x6dcfc0e9],ecx
  40b4e3:	sub    edx,edx
  40b4e5:	mov    al,ds:0x75eba10d
  40b4ea:	fist   DWORD PTR [esi-0x7a]
  40b4ed:	sbb    eax,0x3de123c
  40b4f2:	sub    al,0xb2
  40b4f4:	call   DWORD PTR [ebp+ecx*4-0x4ddf4753]
  40b4fb:	pop    esp
  40b4fc:	xchg   esi,eax
  40b4fd:	outs   dx,BYTE PTR ds:[esi]
  40b4fe:	fisttp WORD PTR [edi]
  40b500:	push   eax
  40b501:	push   0xc492cef2
  40b506:	mov    ecx,?
  40b508:	fadd   QWORD PTR [eax-0x6b]
  40b50b:	push   esp
  40b50c:	pop    DWORD PTR [edx+0x2c77321d]
  40b512:	sub    BYTE PTR [ebp-0x57],ch
  40b515:	test   al,0x75
  40b517:	je     0x40b58a
  40b519:	push   0xffffffd2
  40b51b:	sub    bl,BYTE PTR [ebx+ebx*8-0xdf003b9]
  40b522:	(bad)  
  40b523:	jae    0x40b56e
  40b525:	and    esi,DWORD PTR [esi+0x25]
  40b528:	xor    cl,BYTE PTR [edx+0x6fa5a44e]
  40b52e:	dec    edi
  40b52f:	hlt    
  40b530:	or     dl,BYTE PTR ds:0xdce76049
  40b536:	(bad)  
  40b537:	mov    eax,0xd0a0dea3
  40b53c:	mov    eax,0x3b6a2080
  40b541:	lods   eax,DWORD PTR ds:[esi]
  40b542:	out    0x87,al
  40b544:	add    esp,edx
  40b546:	mov    esp,0x498359de
  40b54b:	inc    esp
  40b54c:	aad    0xdb
  40b54e:	mov    BYTE PTR [edi-0x74],0x53
  40b552:	cmp    edx,DWORD PTR [edx+0x1]
  40b555:	pop    ecx
  40b556:	xor    ah,BYTE PTR [esp+esi*2+0x5fe06a55]
  40b55d:	sbb    ah,BYTE PTR [ebx+0x59]
  40b560:	and    esi,DWORD PTR [esi+0x1cbf62a0]
  40b566:	repnz mov edx,0xfd3784b
  40b56c:	call   0xf8c5:0xb9343924
  40b573:	adc    al,0x41
  40b575:	ins    BYTE PTR es:[edi],dx
  40b576:	push   ebx
  40b577:	aas    
  40b578:	retf   0x64b5
  40b57b:	std    
  40b57c:	sbb    eax,0xe0007c1c
  40b581:	dec    esp
  40b582:	jmp    0x40b5e9
  40b584:	fcom   QWORD PTR [edi+ebp*8+0x6b]
  40b588:	cmp    cl,al
  40b58a:	iret   
  40b58b:	fstp   QWORD PTR [edi-0x7b000ffe]
  40b591:	cmp    esp,0x71
  40b594:	mov    ds:0x98d98d69,eax
  40b599:	(bad)  
  40b59a:	loope  0x40b5ec
  40b59c:	enter  0xa58e,0x4b
  40b5a0:	mov    WORD PTR [edi-0x61ab67cf],?
  40b5a6:	loop   0x40b5a3
  40b5a8:	or     DWORD PTR [esi],ecx
  40b5aa:	in     eax,dx
  40b5ab:	jo     0x40b612
  40b5ad:	arpl   WORD PTR [eax+0x66],bp
  40b5b0:	(bad)  
  40b5b1:	mov    al,0xed
  40b5b3:	adc    bh,cl
  40b5b5:	jmp    0x40b634
  40b5b7:	dec    edx
  40b5b8:	push   esp
  40b5b9:	adc    eax,0x379891e2
  40b5be:	and    BYTE PTR gs:[edi],cl
  40b5c1:	sbb    BYTE PTR [edi],0x3c
  40b5c4:	mov    DWORD PTR [ebp-0x6ab25691],esp
  40b5ca:	or     BYTE PTR [eax-0x43],bl
  40b5cd:	mov    ?,esp
  40b5cf:	out    0x4a,al
  40b5d1:	cwde   
  40b5d2:	push   edi
  40b5d3:	fwait
  40b5d4:	aam    0xd3
  40b5d6:	add    eax,0xab70282e
  40b5db:	call   0xcf88c5f6
  40b5e0:	adc    al,0x98
  40b5e2:	popf   
  40b5e3:	sbb    cl,BYTE PTR [edx]
  40b5e5:	cli    
  40b5e6:	adc    al,0x47
  40b5e8:	cdq    
  40b5e9:	sub    ebp,DWORD PTR [ebx+0x73de0cb2]
  40b5ef:	(bad)  
  40b5f1:	lods   al,BYTE PTR ds:[esi]
  40b5f2:	inc    edx
  40b5f3:	xchg   ebx,eax
  40b5f4:	pop    edi
  40b5f5:	test   BYTE PTR [ecx-0x12a3a11b],bl
  40b5fb:	adc    esp,DWORD PTR [esi+0x6ca5912]
  40b601:	sub    DWORD PTR [ebx-0x58],eax
  40b604:	sahf   
  40b605:	call   0xc57e52c3
  40b60a:	cli    
  40b60b:	fsubr  DWORD PTR [ecx]
  40b60d:	or     BYTE PTR [ecx+ebp*2-0x73],cl
  40b611:	inc    edi
  40b612:	ins    BYTE PTR es:[edi],dx
  40b613:	mov    esp,0xa47b911b
  40b618:	shl    DWORD PTR [ecx],0x1f
  40b61b:	enter  0xabd8,0x83
  40b61f:	or     al,0x82
  40b621:	fadd   DWORD PTR [edi-0x591dc144]
  40b627:	not    BYTE PTR ds:0x83e5c84b
  40b62d:	scas   al,BYTE PTR es:[edi]
  40b62e:	inc    edx
  40b62f:	in     eax,0x67
  40b631:	mov    dh,0x45
  40b633:	in     eax,0xd1
  40b635:	adc    dl,al
  40b637:	out    0x9f,al
  40b639:	clc    
  40b63a:	adc    eax,0x132ff227
  40b63f:	jb     0x40b696
  40b641:	and    eax,0xcc7557e2
  40b646:	dec    ebx
  40b647:	(bad)  
  40b648:	icebp  
  40b649:	inc    ebp
  40b64a:	repz test BYTE PTR [esp+ebp*2-0x7a],bh
  40b64f:	jg     0x40b6b3
  40b651:	inc    edx
  40b652:	push   eax
  40b653:	mov    cl,0x66
  40b655:	push   cs
  40b656:	scas   al,BYTE PTR es:[edi]
  40b657:	mov    edx,0xfa6d2bb8
  40b65c:	mov    ch,0x33
  40b65e:	mov    al,0x95
  40b660:	push   ebp
  40b661:	and    DWORD PTR [ebp+ecx*2-0x18],ebp
  40b665:	pop    esi
  40b666:	push   eax
  40b667:	sbb    esi,DWORD PTR [esi-0x68]
  40b66a:	gs jno 0x40b68e
  40b66d:	dec    esi
  40b66e:	in     eax,dx
  40b66f:	pop    es
  40b670:	mov    al,ds:0x6ce8ad84
  40b675:	out    dx,eax
  40b676:	xchg   edx,eax
  40b677:	lock mov edx,0x6259a4eb
  40b67d:	push   0x9ad3144c
  40b682:	in     al,0xf8
  40b684:	jo     0x40b694
  40b686:	and    DWORD PTR [edi+0x1a],0x6fb5257d
  40b68d:	add    DWORD PTR [edi+0xc],0x622de8aa
  40b694:	dec    esi
  40b695:	js     0x40b649
  40b697:	in     al,0x58
  40b699:	push   cs
  40b69a:	sub    ah,bl
  40b69c:	daa    
  40b69d:	push   ss
  40b69e:	test   al,0xcb
  40b6a0:	outs   dx,DWORD PTR ds:[esi]
  40b6a1:	rol    DWORD PTR [ecx-0x687b95d],0xed
  40b6a8:	sub    dh,BYTE PTR [edx+0x4829dbef]
  40b6ae:	add    al,0x5e
  40b6b0:	or     al,0x3a
  40b6b2:	hlt    
  40b6b3:	les    esi,FWORD PTR [eax-0x65]
  40b6b6:	or     BYTE PTR ds:0x2fbd4f71,0xe8
  40b6bd:	adc    bl,bl
  40b6bf:	cwde   
  40b6c0:	imul   eax,esp,0x20
  40b6c3:	xlat   BYTE PTR ds:[ebx]
  40b6c4:	shl    DWORD PTR [eax+0x7b],0x5a
  40b6c8:	sbb    eax,0x5862c014
  40b6cd:	stos   DWORD PTR es:[edi],eax
  40b6ce:	fstp   QWORD PTR ds:0x413e5398
  40b6d4:	(bad)  
  40b6d6:	lock and eax,0x3c4e1c7f
  40b6dc:	enter  0xb862,0x38
  40b6e0:	cld    
  40b6e1:	push   eax
  40b6e2:	ja     0x40b723
  40b6e4:	je     0x40b6f3
  40b6e6:	(bad)  
  40b6e7:	icebp  
  40b6e8:	pusha  
  40b6e9:	test   al,0xf7
  40b6eb:	xor    edi,eax
  40b6ed:	and    eax,0x4337f8ff
  40b6f2:	rol    DWORD PTR [edx-0x7],1
  40b6f5:	js     0x40b6ae
  40b6f7:	sub    eax,0x9102b90d
  40b6fc:	mov    ebp,0xc1e904cf
  40b701:	jno    0x40b6b2
  40b703:	mov    dh,0x22
  40b705:	xor    DWORD PTR ds:0x3aa4b7ef,0x98df5a29
  40b70f:	sbb    bh,al
  40b711:	pusha  
  40b712:	cld    
  40b713:	loope  0x40b76a
  40b715:	adc    BYTE PTR [ecx-0x7e],0x76
  40b719:	fimul  DWORD PTR [ebp-0x54]
  40b71c:	mov    ebx,DWORD PTR [ebp-0x36e062aa]
  40b722:	das    
  40b723:	cdq    
  40b724:	sahf   
  40b725:	aaa    
  40b726:	xlat   BYTE PTR ds:[ebx]
  40b727:	stc    
  40b728:	scas   al,BYTE PTR es:[edi]
  40b729:	adc    edi,DWORD PTR [edi+0x2c0ec359]
  40b72f:	push   0x6b
  40b731:	loopne 0x40b7a8
  40b733:	mov    ch,0x4c
  40b735:	cmp    al,0xeb
  40b737:	push   ebx
  40b738:	add    DWORD PTR [edx+eax*8+0x28],eax
  40b73c:	retf   0x4173
  40b73f:	mov    edx,0xecd6c59d
  40b744:	or     al,0xc2
  40b746:	sbb    eax,0x979ce559
  40b74b:	mov    bl,0x96
  40b74d:	jmp    0xfa4418a
  40b752:	mov    ah,0x67
  40b754:	mov    eax,ds:0x481f0f35
  40b759:	push   edx
  40b75a:	sub    edi,0x3a
  40b75d:	outs   dx,DWORD PTR ds:[esi]
  40b75e:	aaa    
  40b75f:	cmp    al,0x6b
  40b761:	adc    DWORD PTR [eax],eax
  40b763:	gs wbinvd 
  40b766:	pop    ds
  40b767:	xchg   BYTE PTR [edi-0x2b],bh
  40b76a:	dec    esi
  40b76b:	out    0x53,eax
  40b76d:	mov    DWORD PTR [edi],0xe3d0d278
  40b773:	mov    cl,0xab
  40b775:	mov    ch,0xd9
  40b777:	and    eax,0x1b891970
  40b77c:	xlat   BYTE PTR ds:[ebx]
  40b77d:	pop    ebp
  40b77e:	(bad)  
  40b77f:	in     eax,0x53
  40b781:	push   esi
  40b782:	jae    0x40b75f
  40b784:	fldcw  WORD PTR ds:0x71d446f4
  40b78a:	fbld   TBYTE PTR [eax]
  40b78c:	adc    DWORD PTR [esp+ebp*8],ebx
  40b78f:	push   cs
  40b790:	test   al,0x82
  40b792:	daa    
  40b793:	jb     0x40b753
  40b795:	mov    ds:0x95ef5e00,eax
  40b79a:	bound  ecx,QWORD PTR [edx+0x21638fea]
  40b7a0:	push   0xffffff84
  40b7a2:	mov    esi,ecx
  40b7a4:	pop    ds
  40b7a5:	cmp    DWORD PTR [edi-0x70c34b58],esp
  40b7ab:	push   es
  40b7ac:	cli    
  40b7ad:	dec    ebp
  40b7ae:	cmp    DWORD PTR [eax],ebx
  40b7b0:	cmp    al,al
  40b7b2:	clc    
  40b7b3:	mov    dh,0x51
  40b7b5:	dec    edx
  40b7b6:	stos   BYTE PTR es:[edi],al
  40b7b7:	sub    eax,0xa3aa9c71
  40b7bc:	inc    edx
  40b7bd:	xchg   ecx,eax
  40b7be:	in     al,0x7d
  40b7c0:	sbb    BYTE PTR [ecx+ecx*8-0x44],ah
  40b7c4:	fsubr  QWORD PTR ds:0x713229ca
  40b7ca:	mov    esp,0xf500e8b9
  40b7cf:	sbb    BYTE PTR [eax+edi*1+0x48],bl
  40b7d3:	imul   esp,DWORD PTR [ebx-0x6d],0x69
  40b7d7:	xchg   edi,eax
  40b7d8:	std    
  40b7d9:	pushf  
  40b7da:	shl    DWORD PTR ss:[eax],1
  40b7dd:	mov    ds:0x6656160,al
  40b7e2:	mov    ebx,DWORD PTR [ecx+0x30943a0b]
  40b7e8:	push   ecx
  40b7e9:	and    ebx,DWORD PTR [ebp-0xc]
  40b7ec:	push   edx
  40b7ed:	add    ch,ah
  40b7ef:	(bad)  
  40b7f0:	dec    edx
  40b7f1:	jg     0x40b84d
  40b7f3:	int3   
  40b7f4:	rol    DWORD PTR [ecx+0x33edbd3a],1
  40b7fa:	push   eax
  40b7fb:	mov    dl,0xc8
  40b7fd:	push   edx
  40b7fe:	pop    edi
  40b7ff:	fisubr DWORD PTR [edx+ebp*8]
  40b802:	arpl   WORD PTR [ebp+0x2fafd8b6],bp
  40b808:	mov    ds:0x99f78503,al
  40b80d:	hlt    
  40b80e:	je     0x40b804
  40b810:	sub    BYTE PTR [ebp+0x5a6296c3],ah
  40b816:	inc    ecx
  40b817:	dec    ebp
  40b818:	xchg   esi,eax
  40b819:	mov    esp,0xf3ec2b12
  40b81e:	clc    
  40b81f:	mov    eax,ds:0xba6a7c48
  40b824:	jbe    0x40b7f7
  40b826:	addr16 jg 0x40b86d
  40b829:	sbb    al,0xfe
  40b82b:	jnp    0x40b7de
  40b82d:	or     al,0x4f
  40b82f:	fld    TBYTE PTR [edi]
  40b831:	sbb    al,0x3e
  40b833:	mov    ds:0x74b590,al
  40b838:	mov    bh,0xaf
  40b83a:	scas   eax,DWORD PTR es:[edi]
  40b83b:	mov    dl,dl
  40b83d:	jg     0x40b895
  40b83f:	dec    eax
  40b840:	cmc    
  40b841:	scas   eax,DWORD PTR es:[edi]
  40b842:	ss xchg edi,eax
  40b844:	and    ecx,DWORD PTR [esi]
  40b846:	out    dx,eax
  40b847:	xor    ah,BYTE PTR [ebp+0x1f]
  40b84a:	add    eax,DWORD PTR [eax]
  40b84c:	adc    edx,DWORD PTR [ebx-0x17]
  40b84f:	sbb    eax,0x9474481e
  40b854:	frstor [esi]
  40b856:	inc    ebp
  40b857:	mov    edx,0xe92ee4bb
  40b85c:	outs   dx,DWORD PTR ds:[esi]
  40b85d:	aaa    
  40b85e:	adc    ebp,DWORD PTR [edx-0x6b]
  40b861:	push   cs
  40b862:	sbb    BYTE PTR [ebx],al
  40b864:	shl    bh,1
  40b866:	rcr    DWORD PTR [edx-0x80],1
  40b869:	int3   
  40b86a:	ja     0x40b8af
  40b86c:	enter  0x8c38,0x81
  40b870:	daa    
  40b871:	in     al,0x68
  40b873:	mov    ah,0x3
  40b875:	inc    esp
  40b876:	into   
  40b877:	add    DWORD PTR [edi+0x31],ebp
  40b87a:	fldenv [esi-0x68c49b02]
  40b880:	test   BYTE PTR [ecx+eiz*1-0x1c6ba970],bl
  40b887:	arpl   cx,bp
  40b889:	out    dx,al
  40b88a:	and    DWORD PTR [ebp+0x10f9d70d],edx
  40b890:	cwde   
  40b891:	dec    esi
  40b892:	jmp    0x17cf5d4c
  40b897:	xor    BYTE PTR [ecx],dl
  40b899:	ret    
  40b89a:	push   ss
  40b89b:	pop    es
  40b89c:	stc    
  40b89d:	push   ebx
  40b89e:	out    dx,al
  40b89f:	push   esi
  40b8a0:	ins    DWORD PTR es:[edi],dx
  40b8a1:	aas    
  40b8a2:	jmp    0x40b8a2
  40b8a4:	adc    dh,al
  40b8a6:	pushf  
  40b8a7:	jbe    0x40b895
  40b8a9:	outs   dx,BYTE PTR ds:[esi]
  40b8aa:	mov    DWORD PTR [eax+0x3c],0x642fbf20
  40b8b1:	mov    edi,0xdb62b75a
  40b8b6:	call   0x6873:0x5c50acab
  40b8bd:	jecxz  0x40b8c8
  40b8bf:	int    0xc6
  40b8c1:	sub    al,BYTE PTR [eax]
  40b8c3:	je     0x40b84f
  40b8c5:	cmp    dh,BYTE PTR [edi+0x36f92309]
  40b8cb:	add    eax,0x4955ccdc
  40b8d0:	sbb    dh,dl
  40b8d2:	add    cl,bh
  40b8d4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d6:	pop    ss
  40b8d7:	or     ebp,DWORD PTR [ecx+0x4e]
  40b8da:	sbb    BYTE PTR [esi-0x5f],al
  40b8dd:	xchg   edx,eax
  40b8de:	stc    
  40b8df:	pop    esp
  40b8e0:	std    
  40b8e1:	sbb    eax,0xbab4bd1d
  40b8e6:	(bad)  
  40b8e7:	mov    cs,edi
  40b8e9:	test   esi,edx
  40b8eb:	xchg   edi,eax
  40b8ec:	cdq    
  40b8ed:	xor    bh,ch
  40b8ef:	imul   esi,DWORD PTR [ebp+edx*2-0x2bf360db],0x35
  40b8f7:	xchg   esp,eax
  40b8f8:	(bad)  
  40b8f9:	cld    
  40b8fa:	xlat   BYTE PTR es:[ebx]
  40b8fc:	cmp    eax,0x2fdf21d3
  40b901:	inc    ebp
  40b902:	add    eax,0xd3c2fdbd
  40b907:	cmp    DWORD PTR [ebp+0x6e47fc8a],esi
  40b90d:	xor    dl,BYTE PTR [eax]
  40b90f:	xor    ebp,DWORD PTR [edx]
  40b911:	inc    DWORD PTR [edx-0x6]
  40b914:	dec    edx
  40b915:	fnstcw WORD PTR [esi-0x10]
  40b918:	jb     0x40b91b
  40b91a:	push   ebp
  40b91b:	cmp    dl,0xc8
  40b91e:	bswap  eax
  40b920:	mov    edi,0x5b8c605e
  40b925:	pop    ecx
  40b926:	mov    ebx,esp
  40b928:	and    DWORD PTR [edi+0x8],ebx
  40b92b:	idiv   BYTE PTR [edx]
  40b92d:	rcr    dl,0xe5
  40b930:	jle    0x40b9a1
  40b932:	mov    dh,BYTE PTR [esi+0x1e]
  40b935:	repnz dec eax
  40b937:	push   ecx
  40b938:	inc    esi
  40b939:	add    BYTE PTR [ebp+esi*8-0x2738d751],dl
  40b940:	and    ah,BYTE PTR [esi-0x30d4d18b]
  40b946:	data16 (bad) 
  40b948:	push   esi
  40b949:	cwde   
  40b94a:	jbe    0x40b91e
  40b94c:	das    
  40b94d:	sbb    eax,0x2f870995
  40b952:	dec    edi
  40b953:	lahf   
  40b954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b955:	xchg   esi,eax
  40b956:	adc    eax,0x59245659
  40b95b:	call   0xdccb6bcb
  40b960:	clc    
  40b961:	out    0xff,al
  40b963:	cmp    BYTE PTR [edi-0x3d64cb93],dl
  40b969:	in     al,dx
  40b96a:	pop    esp
  40b96b:	(bad)
  40b96f:	in     al,dx
  40b970:	enter  0x508d,0x9a
  40b974:	push   ecx
  40b975:	dec    edx
  40b976:	mov    bl,BYTE PTR [eax-0x21]
  40b979:	dec    ebp
  40b97a:	mov    ah,dl
  40b97c:	jg     0x40b9f5
  40b97e:	loope  0x40b9b0
  40b980:	addr16 sub dl,bh
  40b983:	push   edx
  40b984:	repz and ecx,DWORD PTR [ebx-0x69596b9d]
  40b98b:	cdq    
  40b98c:	dec    edi
  40b98d:	sbb    dh,cl
  40b98f:	fwait
  40b990:	and    BYTE PTR [esi+0x1f7c4ea8],ch
  40b996:	(bad)  
  40b997:	ret    
  40b998:	sbb    DWORD PTR [ebx+ebx*8-0x54],ebp
  40b99c:	(bad)  
  40b99d:	cmp    al,0x94
  40b99f:	push   ss
  40b9a0:	leave  
  40b9a1:	aaa    
  40b9a2:	addr16 int 0x81
  40b9a5:	gs pushf 
  40b9a7:	mov    ebp,0xd27e11e1
  40b9ac:	push   0x566fac9a
  40b9b1:	xchg   DWORD PTR [esp+esi*1+0x4de07f2d],edi
  40b9b8:	lods   al,BYTE PTR ds:[esi]
  40b9b9:	loope  0x40ba3a
  40b9bb:	mov    ds:0x769d41,al
  40b9c0:	jmp    0x6994:0x5f2003e7
  40b9c7:	retf   0x2eee
  40b9ca:	fcmovb st,st(1)
  40b9cc:	mov    BYTE PTR [ebp-0x49],dh
  40b9cf:	xchg   esp,eax
  40b9d0:	ja     0x40b957
  40b9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d3:	ja     0x40b96a
  40b9d5:	xchg   ecx,eax
  40b9d6:	ss jle 0x40b9a9
  40b9d9:	mov    al,ds:0x14b774f7
  40b9de:	xor    DWORD PTR [esi],0x1c
  40b9e1:	mov    edx,esp
  40b9e3:	sbb    al,0x9b
  40b9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e6:	xchg   edi,eax
  40b9e7:	xor    DWORD PTR [ebp+0x24a1705a],eax
  40b9ed:	jg     0x40ba05
  40b9ef:	cmp    bl,dh
  40b9f1:	ds int 0x48
  40b9f4:	inc    ecx
  40b9f5:	adc    DWORD PTR [ebx-0x5f4c15bd],esi
  40b9fb:	out    0xb7,al
  40b9fd:	mov    eax,0x93b67a1d
  40ba02:	repnz mov ecx,cr3
  40ba06:	xor    edi,DWORD PTR es:[eax]
  40ba09:	xlat   BYTE PTR ds:[ebx]
  40ba0a:	cmp    DWORD PTR [edi+0x1b],esi
  40ba0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba0e:	scas   eax,DWORD PTR es:[edi]
  40ba0f:	fnstcw WORD PTR [ecx+0x35]
  40ba12:	mov    eax,0xb34946ba
  40ba17:	jbe    0x40ba86
  40ba19:	and    al,0x7c
  40ba1b:	ins    DWORD PTR es:[edi],dx
  40ba1c:	adc    BYTE PTR [edi],ah
  40ba1e:	pop    esp
  40ba1f:	fadd   DWORD PTR [edx+eiz*8]
  40ba22:	ins    DWORD PTR es:[edi],dx
  40ba23:	mov    edx,0x3568be5f
  40ba28:	test   eax,0xa4fb2a2
  40ba2d:	xchg   ebx,eax
  40ba2e:	arpl   WORD PTR [eax],si
  40ba30:	xchg   BYTE PTR [ecx],ah
  40ba32:	outs   dx,DWORD PTR ds:[esi]
  40ba33:	adc    esp,edx
  40ba35:	loope  0x40ba0e
  40ba37:	xor    eax,0x8da28bfd
  40ba3c:	or     al,0x3b
  40ba3e:	mov    bl,0x91
  40ba40:	sbb    ebp,DWORD PTR [edi]
  40ba42:	jle    0x40ba1f
  40ba44:	rcr    DWORD PTR [ebp+ebx*4-0x43eb56fd],0x77
  40ba4c:	cli    
  40ba4d:	imul   esp,DWORD PTR [edi],0xc581d47
  40ba53:	xor    DWORD PTR [ecx],ecx
  40ba55:	(bad)  
  40ba57:	div    BYTE PTR [esi-0x587c4203]
  40ba5d:	cmp    ah,dl
  40ba5f:	xlat   BYTE PTR ds:[ebx]
  40ba60:	fcom   QWORD PTR [edx-0x3e]
  40ba63:	pop    edx
  40ba64:	mov    eax,ds:0x990c49e3
  40ba69:	pop    esi
  40ba6a:	aaa    
  40ba6b:	mov    esp,0x365b40b9
  40ba70:	(bad)  
  40ba71:	push   edi
  40ba72:	inc    edi
  40ba73:	push   esi
  40ba74:	ds in  eax,dx
  40ba76:	fcomp  QWORD PTR [ebx-0x1c]
  40ba79:	xchg   BYTE PTR [edx+0x20],dl
  40ba7c:	div    ebx
  40ba7e:	(bad)  
  40ba7f:	in     eax,dx
  40ba80:	call   0xb65476b4
  40ba85:	loope  0x40ba39
  40ba87:	sbb    al,0x54
  40ba89:	xor    eax,0xec10fe4a
  40ba8e:	cwde   
  40ba8f:	mov    ebp,0xf86ef0e5
  40ba94:	out    0x54,al
  40ba96:	ror    DWORD PTR [esi],1
  40ba98:	mov    ah,0xf
  40ba9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba9b:	lods   al,BYTE PTR ds:[esi]
  40ba9c:	pop    ecx
  40ba9d:	xchg   edi,eax
  40ba9e:	loop   0x40ba57
  40baa0:	scas   al,BYTE PTR es:[edi]
  40baa1:	sub    DWORD PTR [ebx+0x44d20a8f],esi
  40baa7:	ds add eax,0x96514dff
  40baad:	int    0x4f
  40baaf:	div    DWORD PTR [ebx+0x1943564c]
  40bab5:	dec    edx
  40bab6:	xor    DWORD PTR [esi-0xefdd97f],ebp
  40babc:	stos   BYTE PTR es:[edi],al
  40babd:	(bad)  
  40babe:	and    bh,BYTE PTR ds:[esi+0x53]
  40bac2:	test   BYTE PTR [ecx*4+0x3767a0b4],0x8d
  40baca:	push   edx
  40bacb:	sbb    BYTE PTR [ebx-0x72],ch
  40bace:	mov    esp,0xf88a9466
  40bad3:	out    dx,al
  40bad4:	mov    esp,0xcfad0c9d
  40bad9:	cwde   
  40bada:	pop    edx
  40badb:	push   es
  40badc:	or     eax,0x1cd36206
  40bae1:	xchg   edi,eax
  40bae2:	ins    BYTE PTR es:[edi],dx
  40bae3:	xchg   ecx,eax
  40bae4:	fsub   QWORD PTR [esp+edx*2+0x73eddc78]
  40baeb:	lea    ecx,[eax-0x1a749c26]
  40baf1:	sbb    BYTE PTR [esi-0x58],al
  40baf4:	push   esi
  40baf5:	aaa    
  40baf6:	test   DWORD PTR [edi+0x5c74ab67],ecx
  40bafc:	inc    esp
  40bafd:	pop    eax
  40bafe:	mov    al,0x25
  40bb00:	and    ecx,DWORD PTR [esi+ebp*1+0x6277813f]
  40bb07:	out    dx,eax
  40bb08:	add    al,dl
  40bb0a:	sub    al,0x6a
  40bb0c:	cs std 
  40bb0e:	add    bl,BYTE PTR ds:0x4fdd8d2d
  40bb14:	cld    
  40bb15:	lahf   
  40bb16:	sbb    ch,al
  40bb18:	rcr    DWORD PTR [ecx-0x335d5dfd],0xc6
  40bb1f:	je     0x40bb41
  40bb21:	imul   eax,DWORD PTR [ebx],0x59
  40bb24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb25:	sahf   
  40bb26:	xchg   ebx,eax
  40bb27:	lods   eax,DWORD PTR ds:[esi]
  40bb28:	add    BYTE PTR [eax+0x14],0x46
  40bb2c:	cmp    DWORD PTR [esi+0x763a53ee],esi
  40bb32:	out    dx,eax
  40bb33:	sahf   
  40bb34:	cmp    ebp,DWORD PTR [edi+0x4e]
  40bb37:	dec    ecx
  40bb38:	fstp   TBYTE PTR [edi]
  40bb3a:	dec    edi
  40bb3b:	sar    ebx,cl
  40bb3d:	(bad)  [ecx+eax*4+0x325a3b8e]
  40bb44:	and    dh,cl
  40bb46:	inc    ecx
  40bb47:	mov    DWORD PTR [edi],0xed9723c
  40bb4d:	in     eax,0xa1
  40bb4f:	(bad)  
  40bb50:	adc    bh,bl
  40bb52:	adc    esp,ebp
  40bb54:	mov    edi,0x90dd73da
  40bb59:	jle    0x40bb68
  40bb5b:	fwait
  40bb5c:	scas   eax,DWORD PTR es:[edi]
  40bb5d:	in     eax,dx
  40bb5e:	inc    eax
  40bb5f:	sub    ebp,eax
  40bb61:	pop    edx
  40bb62:	and    al,0x70
  40bb64:	pop    edx
  40bb65:	sub    ebp,DWORD PTR [eax+ebp*2+0x2d4c768e]
  40bb6c:	add    esi,edx
  40bb6e:	and    DWORD PTR [edx],ebx
  40bb70:	sbb    cl,0x4b
  40bb73:	mov    eax,0x5c47dc3b
  40bb78:	ins    DWORD PTR es:[edi],dx
  40bb79:	dec    ebp
  40bb7a:	jl     0x40bb02
  40bb7c:	xor    dh,BYTE PTR ss:[esi-0x163fcfb7]
  40bb83:	test   eax,0x1bf67de
  40bb88:	lea    ebp,[ecx]
  40bb8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb8b:	or     al,BYTE PTR [ebp-0xe40a7e9]
  40bb91:	push   ebp
  40bb92:	fist   DWORD PTR [edx+0x49]
  40bb95:	rdpmc  
  40bb97:	fadd   st,st(3)
  40bb99:	or     BYTE PTR [ebp+0x2b],cl
  40bb9c:	call   0x7644:0xa34b603b
  40bba3:	xor    edi,esi
  40bba5:	pop    ebx
  40bba6:	mov    bl,0x24
  40bba8:	jle    0x40bbf2
  40bbaa:	scas   al,BYTE PTR es:[edi]
  40bbab:	cs into 
  40bbad:	out    0x4f,al
  40bbaf:	mov    al,BYTE PTR [esi]
  40bbb1:	xor    al,0x7c
  40bbb3:	jmp    0x9d85:0xb4256e52
  40bbba:	mov    cl,0xb5
  40bbbc:	and    ch,dh
  40bbbe:	xlat   BYTE PTR ds:[ebx]
  40bbbf:	(bad)  
  40bbc0:	jmp    0x5abd44e1
  40bbc5:	cmp    bl,BYTE PTR [ebp+0x2fba9e69]
  40bbcb:	lods   eax,DWORD PTR ds:[esi]
  40bbcc:	cmovo  esi,DWORD PTR [esi+0x18]
  40bbd0:	outs   dx,DWORD PTR fs:[esi]
  40bbd2:	xchg   ebp,eax
  40bbd3:	adc    ecx,DWORD PTR [eax+esi*4]
  40bbd6:	test   DWORD PTR [edx-0x6d],ecx
  40bbd9:	jp     0x40bbf0
  40bbdb:	fsub   QWORD PTR [edi]
  40bbdd:	outs   dx,BYTE PTR ds:[esi]
  40bbde:	xlat   BYTE PTR ds:[ebx]
  40bbdf:	in     eax,0xe6
  40bbe1:	ds xchg ecx,eax
  40bbe3:	xchg   BYTE PTR [ecx+0x49e29532],bh
  40bbe9:	xchg   ecx,eax
  40bbea:	int    0xcf
  40bbec:	xchg   esi,eax
  40bbed:	cmc    
  40bbee:	je     0x40bb83
  40bbf0:	cld    
  40bbf1:	(bad)  
  40bbf2:	cmp    DWORD PTR [ebx-0x2],eax
  40bbf5:	cmp    eax,0xe0297870
  40bbfa:	sbb    dh,BYTE PTR [ecx-0x4f]
  40bbfd:	xor    al,0xb4
  40bbff:	(bad)  
  40bc00:	scas   eax,DWORD PTR es:[edi]
  40bc01:	jmp    0x40bc04
  40bc03:	ins    DWORD PTR es:[edi],dx
  40bc04:	dec    ecx
  40bc05:	pop    ecx
  40bc06:	sub    BYTE PTR [ecx-0x42fde23a],ch
  40bc0c:	dec    edi
  40bc0d:	out    0x7e,al
  40bc0f:	out    0x1a,al
  40bc11:	add    DWORD PTR [edi-0x49],0x5a
  40bc15:	push   ebx
  40bc16:	icebp  
  40bc17:	pop    ds
  40bc18:	clc    
  40bc19:	iret   
  40bc1a:	pop    esp
  40bc1b:	jl     0x40bc61
  40bc1d:	mov    eax,ds:0xd39b0c98
  40bc22:	popa   
  40bc23:	cld    
  40bc24:	inc    ebx
  40bc25:	add    BYTE PTR [eax-0x7d],bl
  40bc28:	mov    ebp,0xe9cdb208
  40bc2d:	jno    0x40bbf3
  40bc2f:	enter  0xca94,0x5a
  40bc33:	out    0xea,al
  40bc35:	jge    0x40bbc0
  40bc37:	cmp    bh,bl
  40bc39:	mov    DWORD PTR [ebp+0x6e],0xdc7e2e89
  40bc40:	inc    edx
  40bc41:	pop    esp
  40bc42:	shr    DWORD PTR [ebx-0x30],0x50
  40bc46:	push   0xc07528a6
  40bc4b:	pushfw 
  40bc4d:	aam    0xf4
  40bc4f:	dec    ebx
  40bc50:	xchg   edx,eax
  40bc51:	pop    ecx
  40bc52:	and    eax,0xf18299a
  40bc57:	mov    ebp,0x162a281f
  40bc5c:	mov    esp,0x356dc47c
  40bc61:	loopne 0x40bc0f
  40bc63:	in     al,0x1f
  40bc65:	retf   0x12e5
  40bc68:	outs   dx,BYTE PTR ds:[esi]
  40bc69:	jo     0x40bc54
  40bc6b:	into   
  40bc6c:	out    0x2a,eax
  40bc6e:	cmp    bl,bh
  40bc70:	push   ss
  40bc71:	cmp    esi,eax
  40bc73:	lea    esi,[ecx+esi*1]
  40bc76:	jle    0x40bc19
  40bc78:	mov    ecx,0x7572f11d
  40bc7d:	lea    edi,[eax]
  40bc7f:	sbb    al,0x9f
  40bc81:	int    0xb7
  40bc83:	dec    ebp
  40bc84:	pop    es
  40bc85:	sbb    dh,BYTE PTR [edi]
  40bc87:	hlt    
  40bc88:	pop    ds
  40bc89:	cld    
  40bc8a:	cli    
  40bc8b:	clc    
  40bc8c:	adc    DWORD PTR [ecx],esi
  40bc8e:	mov    esi,0x44ce840f
  40bc93:	stc    
  40bc94:	sbb    al,0xf2
  40bc96:	mov    DWORD PTR [edx-0x23b2e7],eax
  40bc9c:	mov    ds:0x9b8bcd07,eax
  40bca1:	jae    0x40bc40
  40bca3:	aas    
  40bca4:	ficomp DWORD PTR [ecx+ebx*4]
  40bca7:	scas   eax,DWORD PTR es:[edi]
  40bca8:	mov    dl,0xf1
  40bcaa:	and    eax,0x442ecdb1
  40bcaf:	and    al,0x43
  40bcb1:	dec    eax
  40bcb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb3:	hlt    
  40bcb4:	xor    al,0xc
  40bcb6:	push   cs
  40bcb7:	dec    edx
  40bcb8:	imul   edi,eax,0x919a8350
  40bcbe:	push   ebx
  40bcbf:	adc    edi,esi
  40bcc1:	pop    eax
  40bcc2:	aas    
  40bcc3:	and    eax,0x11010ebe
  40bcc8:	cmp    dh,BYTE PTR [eax]
  40bcca:	adc    ebp,edx
  40bccc:	pop    ds
  40bccd:	push   edx
  40bcce:	inc    esp
  40bccf:	fxch   st(3)
  40bcd1:	pushf  
  40bcd2:	pop    esi
  40bcd3:	lods   eax,DWORD PTR ds:[esi]
  40bcd4:	outs   dx,BYTE PTR ds:[esi]
  40bcd5:	jns    0x40bc60
  40bcd7:	add    ebx,esp
  40bcd9:	js     0x40bc76
  40bcdb:	ins    DWORD PTR es:[edi],dx
  40bcdc:	inc    BYTE PTR ds:0x84c810fd
  40bce2:	fdivrp st(6),st
  40bce4:	aas    
  40bce5:	mov    es,eax
  40bce7:	stos   BYTE PTR es:[edi],al
  40bce8:	dec    edi
  40bce9:	mov    dh,0x96
  40bceb:	std    
  40bcec:	adc    BYTE PTR [eax+0x3a],ah
  40bcef:	jns    0x40bcab
  40bcf1:	sbb    al,0x99
  40bcf3:	fld    DWORD PTR [ecx-0x40]
  40bcf6:	shl    DWORD PTR [ebx+0x4d],0x68
  40bcfa:	or     DWORD PTR [eax-0x21ff0787],edi
  40bd00:	jnp    0x40bcab
  40bd02:	jnp    0x40bcb9
  40bd04:	xchg   ebx,eax
  40bd05:	xchg   esp,eax
  40bd06:	sbb    DWORD PTR [ecx-0x1f],0xffffffaf
  40bd0a:	(bad)  
  40bd0b:	les    esp,FWORD PTR [edi]
  40bd0d:	inc    ebp
  40bd0e:	lahf   
  40bd0f:	cdq    
  40bd10:	pop    edx
  40bd11:	outs   dx,BYTE PTR ds:[esi]
  40bd12:	neg    BYTE PTR [ecx+0xed81520]
  40bd18:	push   0xffffffb1
  40bd1a:	push   ebx
  40bd1b:	sbb    ah,dl
  40bd1d:	or     eax,0x2c9cdf2f
  40bd22:	and    eax,DWORD PTR [eax+0x38140987]
  40bd28:	shl    esi,0x9d
  40bd2b:	stos   DWORD PTR es:[edi],eax
  40bd2c:	ret    
  40bd2d:	bnd lock jge 0x40bce7
  40bd31:	mov    WORD PTR [edx+0x21d30899],gs
  40bd37:	fistp  DWORD PTR [edi]
  40bd39:	mov    BYTE PTR [ecx+0x0],ch
  40bd3c:	ja     0x40bd6e
  40bd3e:	mov    esp,0x3a5951a1
  40bd43:	sbb    dl,BYTE PTR [eax+0x7ce5ea37]
  40bd49:	loop   0x40bdbc
  40bd4b:	shl    BYTE PTR [edi-0x25],cl
  40bd4e:	cmp    eax,0x32d5f597
  40bd53:	cmp    DWORD PTR [eax-0x111e3d6b],esp
  40bd59:	enter  0xffe,0x4
  40bd5d:	ret    0x6d89
  40bd60:	jle    0x40bd72
  40bd62:	ins    BYTE PTR es:[edi],dx
  40bd63:	add    bh,BYTE PTR [ecx+edi*8+0x796d1264]
  40bd6a:	lock inc ebp
  40bd6c:	jg     0x40bd0a
  40bd6e:	pop    ebx
  40bd6f:	neg    BYTE PTR [edx+0x3d]
  40bd72:	fdivr  QWORD PTR [ebp-0x5e]
  40bd75:	push   esp
  40bd76:	sahf   
  40bd77:	cld    
  40bd78:	nop
  40bd79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd7a:	cwde   
  40bd7b:	in     eax,dx
  40bd7c:	dec    ebp
  40bd7d:	std    
  40bd7e:	cs jmp 0x5be8:0x834955a1
  40bd86:	retf   0x24b5
  40bd89:	in     al,0x64
  40bd8b:	sbb    DWORD PTR ds:0xbad1cd15,eax
  40bd91:	pop    esi
  40bd92:	ins    DWORD PTR es:[edi],dx
  40bd93:	enter  0x68df,0x54
  40bd97:	xor    DWORD PTR [edi],0x92722fe0
  40bd9d:	stc    
  40bd9e:	dec    edi
  40bd9f:	pushf  
  40bda0:	add    cl,BYTE PTR [edx+0x7a]
  40bda3:	dec    ebp
  40bda4:	inc    esi
  40bda5:	lods   eax,DWORD PTR ds:[esi]
  40bda6:	lods   al,BYTE PTR ds:[esi]
  40bda7:	cdq    
  40bda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bda9:	or     eax,0x74c10681
  40bdae:	mov    ds:0x30680ffe,eax
  40bdb3:	xchg   edi,eax
  40bdb4:	cld    
  40bdb5:	mov    cl,0x73
  40bdb7:	mov    dl,BYTE PTR [ecx]
  40bdb9:	push   edi
  40bdba:	popa   
  40bdbb:	pusha  
  40bdbc:	push   edx
  40bdbd:	stc    
  40bdbe:	test   eax,0x423e0ada
  40bdc3:	xchg   ebp,eax
  40bdc4:	shl    bl,cl
  40bdc6:	enter  0x87b,0xb4
  40bdca:	std    
  40bdcb:	cmp    dl,BYTE PTR [ebx]
  40bdcd:	sub    BYTE PTR [ebp+0x20406dd0],ah
  40bdd3:	pop    ss
  40bdd4:	jb     0x40bd80
  40bdd6:	dec    eax
  40bdd7:	call   0x152f4e09
  40bddc:	inc    ecx
  40bddd:	push   ebx
  40bdde:	push   es
  40bddf:	push   esi
  40bde0:	stc    
  40bde1:	inc    edi
  40bde2:	dec    al
  40bde4:	shl    BYTE PTR [ebx-0x51115fee],cl
  40bdea:	ja     0x40be2c
  40bdec:	mov    ecx,0xf1c2823d
  40bdf1:	and    ah,dh
  40bdf3:	xchg   ebx,eax
  40bdf4:	(bad)  
  40bdf5:	es xchg al,al
  40bdf8:	add    al,0xf4
  40bdfa:	mov    ebp,0x668e0659
  40bdff:	push   esi
  40be00:	xchg   esp,eax
  40be01:	sbb    al,0x4d
  40be03:	mov    bh,0x97
  40be05:	push   ecx
  40be06:	and    eax,0x2078367e
  40be0b:	call   0xcfd0e840
  40be10:	out    0x85,eax
  40be12:	fnstenv [eax-0x11]
  40be15:	xchg   dh,cl
  40be17:	aaa    
  40be18:	pusha  
  40be19:	dec    esp
  40be1a:	fstp   QWORD PTR [ecx+eiz*4+0x47]
  40be1e:	cli    
  40be1f:	jecxz  0x40bdf0
  40be21:	or     eax,0x7b1c37f5
  40be26:	sbb    bh,bl
  40be28:	xor    al,0xff
  40be2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be2b:	cdq    
  40be2c:	dec    eax
  40be2d:	adc    ecx,DWORD PTR [esi-0x1]
  40be30:	jb     0x40be24
  40be32:	fs add eax,0xaf90cff3
  40be38:	cmp    eax,0xa313a175
  40be3d:	outs   dx,DWORD PTR ds:[esi]
  40be3e:	pop    es
  40be3f:	adc    al,0x37
  40be41:	test   al,0x7c
  40be43:	sbb    esp,DWORD PTR [ebp+0x4]
  40be46:	das    
  40be47:	adc    dl,BYTE PTR [ecx-0x62]
  40be4a:	xor    bl,ah
  40be4c:	pop    ds
  40be4d:	pop    esi
  40be4e:	pop    edi
  40be4f:	pop    esi
  40be50:	dec    eax
  40be51:	dec    edi
  40be52:	sub    dh,bl
  40be54:	xchg   edi,eax
  40be55:	dec    ebx
  40be56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be57:	xor    BYTE PTR [esi-0x1ab54260],0x8e
  40be5e:	jp     0x40beb8
  40be60:	scas   al,BYTE PTR es:[edi]
  40be61:	scas   eax,DWORD PTR es:[edi]
  40be62:	add    al,BYTE PTR [ebp+0x4972da66]
  40be68:	bound  ebx,QWORD PTR [ebp-0x3d]
  40be6b:	lods   al,BYTE PTR ds:[esi]
  40be6c:	in     al,dx
  40be6d:	stc    
  40be6e:	push   esp
  40be6f:	add    al,0x66
  40be71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be72:	dec    ebp
  40be73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be74:	fdiv   QWORD PTR [ecx]
  40be76:	cdq    
  40be77:	adc    al,0x39
  40be79:	sbb    eax,DWORD PTR [ecx]
  40be7b:	ds int3 
  40be7d:	shl    BYTE PTR [ebx],cl
  40be7f:	add    bl,bl
  40be81:	cmp    eax,0xc29f3d80
  40be86:	(bad)  
  40be87:	out    0xbd,eax
  40be89:	test   al,0x9b
  40be8b:	sbb    bh,ch
  40be8d:	jmp    0x73b3e7f
  40be92:	push   0xffffffd4
  40be94:	pop    edi
  40be95:	(bad)  
  40be97:	scas   eax,DWORD PTR es:[edi]
  40be98:	aad    0x63
  40be9a:	xor    edi,DWORD PTR [edx]
  40be9c:	mov    eax,ds:0xb5ece345
  40bea1:	mov    bh,BYTE PTR [ebp+0x1d]
  40bea4:	jb     0x40bed4
  40bea6:	loopne 0x40beb2
  40bea8:	sahf   
  40bea9:	sar    bl,0x60
  40beac:	imul   eax,esp,0x6309a30d
  40beb2:	clc    
  40beb3:	push   eax
  40beb4:	xchg   esi,eax
  40beb5:	xor    edx,DWORD PTR [eax+0x14]
  40beb8:	adc    edx,DWORD PTR [eax-0x7835a0e0]
  40bebe:	retf   
  40bebf:	das    
  40bec0:	xor    BYTE PTR [edi+0x397668aa],cl
  40bec6:	icebp  
  40bec7:	xor    ecx,0x57
  40beca:	cs jne 0x40be99
  40becd:	test   eax,0xd58bd7f0
  40bed2:	iret   
  40bed3:	pushf  
  40bed4:	sti    
  40bed5:	xor    DWORD PTR [ebp-0x11],esp
  40bed8:	ja     0x40befa
  40beda:	ins    DWORD PTR es:[edi],dx
  40bedb:	pop    es
  40bedc:	lods   eax,DWORD PTR ds:[esi]
  40bedd:	pop    ecx
  40bede:	popa   
  40bedf:	pop    ecx
  40bee0:	mov    ebx,0xada3123
  40bee5:	outs   dx,DWORD PTR ds:[esi]
  40bee6:	add    cl,BYTE PTR [ebp+0x30]
  40bee9:	sbb    DWORD PTR [eax+0xe],ebx
  40beec:	(bad)  
  40beed:	aaa    
  40beee:	jb     0x40bec1
  40bef0:	pop    esi
  40bef1:	sbb    eax,0x2365278b
  40bef6:	xlat   BYTE PTR ds:[ebx]
  40bef7:	mov    esi,0x7e94ae57
  40befc:	adc    DWORD PTR [ebx-0xc5a5a25],esp
  40bf02:	and    eax,0x4d8a61ef
  40bf07:	test   BYTE PTR [edi],0xda
  40bf0a:	call   0xcfb6:0x65d13776
  40bf11:	std    
  40bf12:	jo     0x40bf29
  40bf14:	enter  0xb29b,0x2f
  40bf18:	sub    ebx,DWORD PTR [esi+0x7535bef1]
  40bf1e:	cmp    bh,BYTE PTR [edi+0x387a0f94]
  40bf24:	or     DWORD PTR [ebx+0x11],ecx
  40bf27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf28:	adc    edx,ebx
  40bf2a:	mov    bl,BYTE PTR [edx-0x3e]
  40bf2d:	outs   dx,BYTE PTR ds:[esi]
  40bf2e:	mov    esp,0x9f181eba
  40bf33:	cmc    
  40bf34:	in     al,0xd8
  40bf36:	shl    DWORD PTR [edi-0x1a],0xf
  40bf3a:	mov    es,WORD PTR [esi+esi*1+0xa]
  40bf3e:	push   esi
  40bf3f:	test   al,0xc8
  40bf41:	ror    DWORD PTR [edi],1
  40bf43:	fistp  WORD PTR ds:0x95a4bd3a
  40bf49:	sub    BYTE PTR [edi-0x1b],cl
  40bf4c:	repz test eax,0x9d23a3f5
  40bf52:	push   ebx
  40bf53:	add    al,0xeb
  40bf55:	sub    ch,BYTE PTR [esi+0x18a1d3f5]
  40bf5b:	mov    ah,0xab
  40bf5d:	(bad)  
  40bf5e:	fnstenv [ebx]
  40bf60:	fcom   QWORD PTR [edi]
  40bf62:	jle    0x40bf73
  40bf64:	aam    0x59
  40bf66:	in     al,0x60
  40bf68:	scas   eax,DWORD PTR es:[edi]
  40bf69:	in     eax,dx
  40bf6a:	in     eax,0x35
  40bf6c:	sbb    dl,BYTE PTR [esi+0x1fd912fc]
  40bf72:	int    0x16
  40bf74:	mov    WORD PTR [edx+0x68],fs
  40bf77:	add    edx,ecx
  40bf79:	icebp  
  40bf7a:	das    
  40bf7b:	arpl   cx,dx
  40bf7d:	retf   0x8fe6
  40bf80:	sub    dl,BYTE PTR [esi+0x6d802195]
  40bf86:	sub    ah,al
  40bf88:	aaa    
  40bf89:	lods   eax,DWORD PTR ds:[esi]
  40bf8a:	daa    
  40bf8b:	inc    edx
  40bf8c:	cmp    DWORD PTR ds:0xaab41c06,ebp
  40bf92:	mov    bl,0x17
  40bf94:	pop    ds
  40bf95:	fs aas 
  40bf97:	dec    ebx
  40bf98:	nop
  40bf99:	fbld   TBYTE PTR [edi]
  40bf9b:	or     al,BYTE PTR [esi]
  40bf9d:	mov    dl,0x8a
  40bf9f:	out    0xc9,al
  40bfa1:	pop    ds
  40bfa2:	xor    BYTE PTR [ebx+0x4404ada3],ch
  40bfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa9:	push   edx
  40bfaa:	mov    gs,WORD PTR [ecx]
  40bfac:	mov    ch,0x84
  40bfae:	inc    esp
  40bfaf:	out    dx,eax
  40bfb0:	popa   
  40bfb1:	shl    BYTE PTR [ebp-0x80],0xda
  40bfb5:	jg     0x40bfde
  40bfb7:	ins    BYTE PTR es:[edi],dx
  40bfb8:	cld    
  40bfb9:	faddp  st(1),st
  40bfbb:	add    DWORD PTR [eax+0x3c4a8079],edi
  40bfc1:	mov    al,ds:0x41831782
  40bfc6:	lods   eax,DWORD PTR ds:[esi]
  40bfc7:	nop
  40bfc8:	test   DWORD PTR [ecx-0x78e5c9a3],0x53521b2a
  40bfd2:	sub    ah,BYTE PTR [edi-0x1a7fd17]
  40bfd8:	pop    es
  40bfd9:	pop    eax
  40bfda:	pop    eax
  40bfdb:	aaa    
  40bfdc:	fsubp  st(2),st
  40bfde:	xchg   edi,eax
  40bfdf:	push   edx
  40bfe0:	pminsw mm2,mm0
  40bfe3:	jecxz  0x40bfab
  40bfe5:	xchg   ecx,eax
  40bfe6:	(bad)  
  40bfe7:	jmp    0x1c43402
  40bfec:	outs   dx,DWORD PTR ds:[esi]
  40bfed:	mov    ds:0x453ae3ca,al
  40bff2:	bound  esi,QWORD PTR [edx-0x7e]
  40bff5:	hlt    
  40bff6:	cmp    esp,DWORD PTR [ebx]
  40bff8:	imul   edi,DWORD PTR [edi+ebx*4],0x12a0b532
  40bfff:	into   
  40c000:	adc    al,0xf4
  40c002:	xchg   ecx,eax
  40c003:	fdivrp st(4),st
  40c005:	and    edi,DWORD PTR [eax+0x52424813]
  40c00b:	cdq    
  40c00c:	scas   al,BYTE PTR es:[edi]
  40c00d:	into   
  40c00e:	pushf  
  40c00f:	pop    esp
  40c010:	pop    es
  40c011:	test   al,0xf7
  40c013:	push   es
  40c014:	jecxz  0x40c077
  40c016:	xchg   ebx,eax
  40c017:	shr    DWORD PTR [esi],1
  40c019:	jl     0x40c00d
  40c01b:	mov    ebx,0x6ef0f240
  40c020:	in     eax,0x76
  40c022:	jne    0x40bfa4
  40c024:	add    ch,bh
  40c026:	inc    edx
  40c027:	stc    
  40c028:	clc    
  40c029:	fimul  DWORD PTR [ebx]
  40c02b:	nop
  40c02c:	pop    ss
  40c02d:	ret    
  40c02e:	mov    ds:0xb241b2cb,eax
  40c033:	int3   
  40c034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c035:	cmp    ecx,0xf16c16a7
  40c03b:	and    cl,BYTE PTR ds:[eax-0x1e754a1f]
  40c042:	dec    ebp
  40c043:	loop   0x40bfe8
  40c045:	lods   al,BYTE PTR ds:[esi]
  40c046:	fnsave [ebx-0x57303806]
  40c04c:	sub    DWORD PTR [edi+ebx*4+0x0],esi
  40c050:	fisubr DWORD PTR [esi+0x797231e6]
  40c056:	cmp    BYTE PTR [eax-0x43e4e51],bh
  40c05c:	jae    0x40c027
  40c05e:	add    edi,DWORD PTR [ebp-0x50]
  40c061:	push   es
  40c062:	or     eax,0x6bbc4a9f
  40c067:	cdq    
  40c068:	add    DWORD PTR [edi],ecx
  40c06a:	js     0x40c069
  40c06c:	ror    BYTE PTR [esi+0x6a594448],0x93
  40c073:	xchg   esp,eax
  40c074:	xor    eax,0x218189ee
  40c079:	les    ebx,FWORD PTR [ecx-0x56]
  40c07c:	add    dl,BYTE PTR [edx+esi*1]
  40c07f:	aad    0xee
  40c081:	pop    edi
  40c082:	mov    ds:0x27e77c23,eax
  40c087:	sbb    BYTE PTR [ebx],0x91
  40c08a:	mov    dh,0x4f
  40c08c:	inc    edx
  40c08d:	xor    ah,cl
  40c08f:	pop    edx
  40c090:	mov    bl,BYTE PTR [edx+0x4392d52c]
  40c096:	and    DWORD PTR [esi],ecx
  40c098:	js     0x40c0da
  40c09a:	pop    ds
  40c09b:	ds into 
  40c09d:	and    al,0x63
  40c09f:	sub    DWORD PTR ds:0xc97421e5,esp
  40c0a5:	mov    DWORD PTR [eax-0x12c2a927],0x663fc6d3
  40c0af:	xchg   esi,eax
  40c0b0:	shl    edx,0x5b
  40c0b3:	inc    ebx
  40c0b4:	xor    edi,ebp
  40c0b6:	out    0x5e,al
  40c0b8:	mov    ebx,0x4452561
  40c0bd:	xchg   edi,eax
  40c0be:	inc    esi
  40c0bf:	sar    ecx,0x68
  40c0c2:	lahf   
  40c0c3:	int3   
  40c0c4:	jp     0x40c140
  40c0c6:	xchg   esi,eax
  40c0c7:	cmp    DWORD PTR [esi+0x22],edi
  40c0ca:	jne    0x40c0c6
  40c0cc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40c0ce:	mov    ds:0x6fd0b73f,eax
  40c0d3:	jecxz  0x40c0e8
  40c0d5:	ror    BYTE PTR [ecx-0x1d],cl
  40c0d8:	jmp    0x40c0b3
  40c0da:	fisttp QWORD PTR [ebx+eiz*1+0x1de76ee5]
  40c0e1:	jge    0x40c08b
  40c0e3:	push   ds
  40c0e4:	pop    ss
  40c0e5:	loop   0x40c114
  40c0e7:	xlat   BYTE PTR ds:[ebx]
  40c0e8:	mov    edx,0x600b77db
  40c0ed:	sub    BYTE PTR [ebx+eiz*1+0x1bca43c8],al
  40c0f4:	pop    es
  40c0f5:	mov    cl,bl
  40c0f7:	loop   0x40c0f5
  40c0f9:	lods   eax,DWORD PTR ds:[esi]
  40c0fa:	scas   eax,DWORD PTR es:[edi]
  40c0fb:	xor    ebx,esi
  40c0fd:	shl    ebp,1
  40c0ff:	mov    ebx,0x4637b24e
  40c104:	jmp    0x40c123
  40c106:	sbb    esi,ebp
  40c108:	das    
  40c109:	dec    ecx
  40c10a:	rep stos DWORD PTR es:[edi],eax
  40c10c:	push   ds
  40c10d:	jo     0x40c0c6
  40c10f:	pop    ebx
  40c110:	mul    BYTE PTR [edi-0x7]
  40c113:	pop    edx
  40c114:	mov    bl,0x49
  40c116:	rcl    DWORD PTR [esp-0x76],0xb9
  40c11b:	dec    esi
  40c11c:	pop    esp
  40c11d:	in     al,0xaa
  40c11f:	fs loopne 0x40c109
  40c122:	pop    ds
  40c123:	pop    edi
  40c124:	ja     0x40c185
  40c126:	scas   eax,DWORD PTR es:[edi]
  40c127:	cmp    ecx,edi
  40c129:	jl     0x40c123
  40c12b:	loop   0x40c0e5
  40c12d:	inc    edx
  40c12e:	mov    ebp,DWORD PTR [ecx+0x4f]
  40c131:	mov    bl,0x9a
  40c133:	loop   0x40c16e
  40c135:	fsin   
  40c137:	hlt    
  40c138:	jbe    0x40c17c
  40c13a:	pop    ds
  40c13b:	dec    ebp
  40c13c:	ins    DWORD PTR es:[edi],dx
  40c13d:	adc    DWORD PTR [esi],eax
  40c13f:	(bad)  
  40c140:	sub    ebp,DWORD PTR [esi]
  40c142:	retf   0x76c1
  40c145:	ja     0x40c12b
  40c147:	test   BYTE PTR [ecx],bh
  40c149:	test   esp,esp
  40c14b:	dec    ebp
  40c14c:	xor    cl,ah
  40c14e:	jbe    0x40c198
  40c150:	je     0x40c16a
  40c152:	adc    eax,DWORD PTR [esi+0x57]
  40c155:	fst    QWORD PTR [eax]
  40c157:	es enter 0xaddf,0x67
  40c15c:	aad    0x3a
  40c15e:	ror    DWORD PTR [edx],0x4b
  40c161:	dec    ebx
  40c162:	sar    edx,1
  40c164:	and    BYTE PTR [esi],dl
  40c166:	stos   DWORD PTR es:[edi],eax
  40c167:	adc    al,0xcf
  40c169:	push   edx
  40c16a:	mov    eax,0xc34aef19
  40c16f:	mov    ecx,0x996433f9
  40c174:	pop    esp
  40c175:	in     al,0x51
  40c177:	dec    ebx
  40c178:	mov    edi,DWORD PTR [edi]
  40c17a:	adc    bh,0x23
  40c17d:	xchg   ebx,eax
  40c17e:	pop    DWORD PTR [ebx+ebx*2]
  40c181:	pop    ecx
  40c182:	inc    eax
  40c183:	xor    DWORD PTR [esp+ebp*2],0x2b71b3db
  40c18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c18b:	repnz test BYTE PTR [edx-0x40e3969f],al
  40c192:	push   0xe4a9ed
  40c197:	(bad)  
  40c198:	mov    ecx,0x4b8e1706
  40c19d:	call   DWORD PTR [ebx+0x61]
  40c1a0:	jle    0x40c172
  40c1a2:	and    al,0x44
  40c1a4:	call   0x813eb2e2
  40c1a9:	xchg   edx,eax
  40c1aa:	and    al,0x1c
  40c1ac:	ror    BYTE PTR [eax-0x59442bcd],cl
  40c1b2:	xchg   ebp,eax
  40c1b3:	mov    BYTE PTR [ecx+esi*8+0x45febf99],dl
  40c1ba:	sti    
  40c1bb:	xchg   DWORD PTR [eax-0x2f107ba8],esi
  40c1c1:	or     esi,DWORD PTR [eax]
  40c1c3:	cwde   
  40c1c4:	mov    BYTE PTR [ebp-0x4769fd4c],0xdd
  40c1cb:	scas   eax,DWORD PTR es:[edi]
  40c1cc:	stos   BYTE PTR es:[edi],al
  40c1cd:	xchg   DWORD PTR [edx+0x5d762153],ebp
  40c1d3:	aas    
  40c1d4:	fs ins DWORD PTR es:[edi],dx
  40c1d6:	std    
  40c1d7:	xchg   esp,eax
  40c1d8:	add    esi,ebp
  40c1da:	ret    0x1a59
  40c1dd:	fmul   st,st(4)
  40c1df:	pop    DWORD PTR [ebp-0x148ee466]
  40c1e5:	in     eax,0xfa
  40c1e7:	xor    edi,DWORD PTR [edx+0x52]
  40c1ea:	mov    WORD PTR [eax-0x768f6e8b],es
  40c1f0:	push   edi
  40c1f1:	pop    edx
  40c1f2:	test   DWORD PTR [ebx],ebp
  40c1f4:	les    esi,FWORD PTR ds:[eax]
  40c1f7:	xabort 0x93
  40c1fa:	movzx  edx,bl
  40c1fd:	adc    DWORD PTR [edi+0x51],ebp
  40c200:	or     BYTE PTR [eax-0x8d903e],0xb1
  40c207:	ins    DWORD PTR es:[edi],dx
  40c208:	jbe    0x40c1b8
  40c20a:	add    DWORD PTR [edx-0x60],edx
  40c20d:	add    BYTE PTR [ebp+0x73],al
  40c210:	test   eax,edx
  40c212:	or     ebp,DWORD PTR [edx+ebp*4-0x1dec04c7]
  40c219:	fst    DWORD PTR [ebx]
  40c21b:	dec    eax
  40c21c:	fnsave [ecx-0x6]
  40c21f:	rol    BYTE PTR [esi+0xe5a816e],1
  40c225:	ins    DWORD PTR es:[edi],dx
  40c226:	data16 scas al,BYTE PTR es:[edi]
  40c228:	push   ss
  40c229:	popf   
  40c22a:	repnz mov esp,0x43470ae0
  40c230:	imul   ecx,DWORD PTR [esi+0x5f],0xd28d7541
  40c237:	cmp    al,0xa3
  40c239:	outs   dx,DWORD PTR ds:[esi]
  40c23a:	ror    BYTE PTR [edi+0x42207233],1
  40c240:	(bad)  
  40c241:	mov    dh,0x2f
  40c243:	in     eax,0x68
  40c245:	idiv   BYTE PTR [eax*8-0x608b0109]
  40c24c:	in     eax,0xeb
  40c24e:	cmp    DWORD PTR ds:0x3c877fbc,ebx
  40c254:	mov    DWORD PTR [edi],edx
  40c256:	mov    dh,0x27
  40c258:	ja     0x40c2c6
  40c25a:	pop    eax
  40c25b:	mov    ebx,DWORD PTR [eax+0x19aaa229]
  40c261:	test   al,0x0
  40c263:	rcl    DWORD PTR [ecx-0x7],0xe1
  40c267:	stos   DWORD PTR es:[edi],eax
  40c268:	xor    BYTE PTR [ebx],cl
  40c26a:	jmp    0x40c2a9
  40c26c:	(bad)  
  40c26d:	(bad)  
  40c26e:	xchg   esi,eax
  40c26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c270:	retf   0xf54b
  40c273:	xchg   edx,eax
  40c274:	test   dh,0xba
  40c277:	call   0x8d1a:0x21b0afbc
  40c27e:	or     BYTE PTR [esi+0x66],0x1d
  40c282:	cld    
  40c283:	jns    0x40c2dc
  40c285:	pop    ebx
  40c286:	sbb    ebp,DWORD PTR [ebp-0x7a]
  40c289:	inc    ecx
  40c28a:	retf   0xf292
  40c28d:	jnp    0x40c2b6
  40c28f:	(bad)  
  40c291:	sub    BYTE PTR [ecx+0x3cca57d9],cl
  40c297:	xor    al,0x5f
  40c299:	xchg   BYTE PTR [ecx+0xf],dl
  40c29c:	fcmovu st,st(6)
  40c29e:	icebp  
  40c29f:	pop    ebx
  40c2a0:	inc    ecx
  40c2a1:	(bad)  
  40c2a2:	pop    edi
  40c2a3:	ficom  WORD PTR [ebx-0x48]
  40c2a6:	jl     0x40c23d
  40c2a8:	xor    al,0x75
  40c2aa:	push   0xac8af3f2
  40c2af:	pop    edi
  40c2b0:	out    dx,al
  40c2b1:	sub    bl,BYTE PTR [eax-0x64]
  40c2b4:	adc    DWORD PTR [edx+eiz*4-0x7e],esp
  40c2b8:	and    al,0xf2
  40c2ba:	xchg   DWORD PTR [ebx+0x6fcb72fd],esp
  40c2c0:	icebp  
  40c2c1:	cmp    DWORD PTR [edi+0x50],ecx
  40c2c4:	dec    ecx
  40c2c5:	test   cl,cl
  40c2c7:	mov    ah,0x8
  40c2c9:	sub    BYTE PTR [ecx],cl
  40c2cb:	les    edi,FWORD PTR [edi]
  40c2cd:	iret   
  40c2ce:	pop    edx
  40c2cf:	sti    
  40c2d0:	lds    esp,FWORD PTR [ecx]
  40c2d2:	or     eax,0xa3bf1fe1
  40c2d7:	icebp  
  40c2d8:	add    BYTE PTR [edi-0x7781b33c],dl
  40c2de:	mov    ebp,0x2e52acf4
  40c2e3:	cmp    ecx,ecx
  40c2e5:	add    al,0x63
  40c2e7:	aaa    
  40c2e8:	je     0x40c2c0
  40c2ea:	fst    DWORD PTR [esi+0x22c394a3]
  40c2f0:	xor    DWORD PTR [ebx+0x22],ebx
  40c2f3:	ficomp DWORD PTR [ebx]
  40c2f5:	call   0x5e3f:0x989ef081
  40c2fc:	push   ds
  40c2fd:	cdq    
  40c2fe:	jae    0x40c2c9
  40c300:	xlat   BYTE PTR ds:[ebx]
  40c301:	dec    esp
  40c302:	cmp    al,0x53
  40c304:	rol    DWORD PTR [edx+esi*1],0x40
  40c308:	or     edx,eax
  40c30a:	mov    esp,0xdf766744
  40c30f:	sbb    DWORD PTR [esi+0x15],ebx
  40c312:	ins    DWORD PTR es:[edi],dx
  40c313:	xchg   ebp,eax
  40c314:	mov    ds:0x7228315f,al
  40c319:	popf   
  40c31a:	xchg   ebx,eax
  40c31b:	lea    esi,[ebp+0x4fac4928]
  40c321:	push   ss
  40c322:	dec    edi
  40c323:	or     eax,0x57b3e746
  40c328:	(bad)  
  40c329:	test   eax,0xfc8a740f
  40c32e:	mov    ch,0x30
  40c330:	fidiv  DWORD PTR [esp+edx*1-0xd]
  40c334:	xor    BYTE PTR [edx-0x4d82da5f],ah
  40c33a:	aas    
  40c33b:	(bad)
  40c33e:	mov    bh,0x61
  40c340:	push   0x2a
  40c342:	jbe    0x40c2ec
  40c344:	icebp  
  40c345:	jno    0x40c319
  40c347:	shr    DWORD PTR [edx-0x42],cl
  40c34a:	test   al,0x5
  40c34c:	add    DWORD PTR [eax-0x5e],0xf0250fd9
  40c353:	mov    ebx,DWORD PTR [edi-0x33398b84]
  40c359:	es push cs
  40c35b:	nop
  40c35c:	fstp   TBYTE PTR [esi]
  40c35e:	(bad)  
  40c35f:	lock sahf 
  40c361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c362:	and    edx,0xffffffa4
  40c365:	mov    ss,ebx
  40c367:	or     al,0x9f
  40c369:	in     eax,0x5a
  40c36b:	fmul   DWORD PTR [esi-0x6d329538]
  40c371:	cmp    eax,0xd8f0aba3
  40c376:	lds    edi,FWORD PTR [esi]
  40c378:	dec    ebx
  40c379:	pop    ecx
  40c37a:	(bad)  
  40c37b:	jmp    0x40c342
  40c37d:	sub    ebp,DWORD PTR [edi]
  40c37f:	iret   
  40c380:	repz fadd st,st(5)
  40c383:	mov    ch,0xcb
  40c385:	cdq    
  40c386:	and    ecx,DWORD PTR [esi+0x33]
  40c389:	cmc    
  40c38a:	out    dx,al
  40c38b:	dec    esp
  40c38c:	test   BYTE PTR [eax+ebx*4-0x5a],0x75
  40c391:	mov    esp,0x428f52ea
  40c396:	call   0xac7e:0x6232b73
  40c39d:	daa    
  40c39e:	imul   edx,DWORD PTR [ebp+0x6e18e657],0x1f
  40c3a5:	cmp    al,0xaf
  40c3a7:	repnz xor al,0x4f
  40c3aa:	cmp    al,0xd1
  40c3ac:	lock (bad) 
  40c3ae:	xchg   edi,eax
  40c3af:	mov    WORD PTR [eax],ss
  40c3b1:	cs shl edi,1
  40c3b4:	ins    BYTE PTR es:[edi],dx
  40c3b5:	popa   
  40c3b6:	cld    
  40c3b7:	retf   
  40c3b8:	loope  0x40c389
  40c3ba:	xchg   ebp,eax
  40c3bb:	mov    ecx,ebp
  40c3bd:	adc    ecx,ecx
  40c3bf:	sbb    ch,ah
  40c3c1:	lea    esi,[ecx+0x1e314e42]
  40c3c7:	scas   eax,DWORD PTR es:[edi]
  40c3c8:	and    al,0xa4
  40c3ca:	sbb    BYTE PTR [ebx-0x432ec7e9],0x1
  40c3d1:	or     BYTE PTR [edx+0x3c],ch
  40c3d4:	(bad)  
  40c3d5:	cmp    al,0xc6
  40c3d7:	cs ins BYTE PTR es:[edi],dx
  40c3d9:	retf   0x5972
  40c3dc:	pop    esi
  40c3dd:	dec    edx
  40c3de:	sbb    DWORD PTR [edx+eax*8-0x19],0xb659261a
  40c3e6:	inc    esi
  40c3e7:	mov    dl,0x25
  40c3e9:	mov    ch,0x70
  40c3eb:	sbb    BYTE PTR [edx-0x46],bl
  40c3ee:	rcr    esp,0x8a
  40c3f1:	cmp    bh,dl
  40c3f3:	fst    DWORD PTR [edi]
  40c3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3f6:	xor    eax,0xff46957
  40c3fb:	test   al,0xa5
  40c3fd:	fsub   st,st(1)
  40c3ff:	cmp    ah,al
  40c401:	leave  
  40c402:	sub    ah,BYTE PTR [ecx-0x2f]
  40c405:	lods   al,BYTE PTR ds:[esi]
  40c406:	aam    0x63
  40c408:	je     0x40c460
  40c40a:	and    DWORD PTR [esi-0x654eb62a],ebx
  40c410:	fild   DWORD PTR fs:[edi]
  40c413:	xor    bh,BYTE PTR [ecx-0x1d686ca1]
  40c419:	mov    al,ds:0x83859389
  40c41e:	mov    al,0x49
  40c420:	lahf   
  40c421:	outs   dx,BYTE PTR ds:[esi]
  40c422:	fdiv   QWORD PTR [edi-0x25]
  40c425:	or     DWORD PTR [esi],ecx
  40c427:	xchg   esi,eax
  40c428:	xchg   DWORD PTR [eax],ecx
  40c42a:	mov    ah,0x59
  40c42c:	cmp    al,0x43
  40c42e:	enter  0xd51e,0xaf
  40c432:	fnstcw WORD PTR [ebx-0x39]
  40c435:	rol    BYTE PTR [edi-0x7fbcf971],0x58
  40c43c:	fld    QWORD PTR ds:0xcf93f717
  40c442:	xchg   edx,eax
  40c443:	out    dx,eax
  40c444:	mov    ah,0x6e
  40c446:	pop    ds
  40c447:	(bad)  [edx+0x46]
  40c44a:	adc    bl,dh
  40c44c:	out    dx,eax
  40c44d:	cmp    eax,0xa7092ed0
  40c452:	jne    0x40c44f
  40c454:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c456:	test   eax,0xa8cb5192
  40c45b:	push   ebp
  40c45c:	mov    ds:0x16bc865c,al
  40c461:	test   al,0x60
  40c463:	stos   DWORD PTR es:[edi],eax
  40c464:	loope  0x40c421
  40c466:	cmp    ecx,eax
  40c468:	fsubr  DWORD PTR [eax]
  40c46a:	inc    edi
  40c46b:	mov    ch,0x8a
  40c46d:	leave  
  40c46e:	sbb    BYTE PTR [edi-0x19f962d0],dh
  40c474:	sahf   
  40c475:	rcr    DWORD PTR [eax-0x8],cl
  40c478:	iret   
  40c479:	xchg   DWORD PTR fs:[edi+0x76],eax
  40c47d:	stos   DWORD PTR es:[edi],eax
  40c47e:	in     eax,0x8e
  40c480:	dec    esi
  40c481:	lods   al,BYTE PTR ds:[esi]
  40c482:	outs   dx,BYTE PTR ds:[esi]
  40c483:	retf   0x4f56
  40c486:	sbb    eax,0x3b7c74d
  40c48b:	hlt    
  40c48c:	mov    BYTE PTR [edx+eax*2-0x54021633],al
  40c493:	dec    ebp
  40c494:	in     al,0xf6
  40c496:	mov    al,ds:0x47c1b7f1
  40c49b:	sbb    eax,0xc4b2c93
  40c4a0:	pop    esp
  40c4a1:	or     dl,dl
  40c4a3:	adc    BYTE PTR [ebx+ecx*8-0x2847c49],0x57
  40c4ab:	pop    esi
  40c4ac:	stos   BYTE PTR es:[edi],al
  40c4ad:	xchg   esp,eax
  40c4ae:	xchg   ecx,eax
  40c4af:	cmp    al,0x29
  40c4b1:	dec    esi
  40c4b2:	dec    esi
  40c4b3:	jnp    0x40c4bb
  40c4b5:	xor    BYTE PTR [eax+0x10a6d535],dh
  40c4bb:	jae    0x40c487
  40c4bd:	cli    
  40c4be:	call   0x191e450f
  40c4c3:	iret   
  40c4c4:	mov    ds:0xfa98bb05,eax
  40c4c9:	pop    ebx
  40c4ca:	add    dl,bl
  40c4cc:	mov    edx,DWORD PTR [ecx-0xed35e16]
  40c4d2:	pop    edi
  40c4d3:	or     bh,bh
  40c4d5:	jns    0x40c48f
  40c4d7:	adc    bl,BYTE PTR [edi+0x631fa400]
  40c4dd:	out    dx,al
  40c4de:	popf   
  40c4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e0:	sub    ah,ah
  40c4e2:	out    0x1f,eax
  40c4e4:	leave  
  40c4e5:	shl    BYTE PTR [ecx-0x43],0xce
  40c4e9:	sbb    DWORD PTR [esi+0x10c7b929],ebx
  40c4ef:	cwde   
  40c4f0:	fwait
  40c4f1:	add    eax,DWORD PTR [ebx+0x5e]
  40c4f4:	mov    BYTE PTR [eax],0x5a
  40c4f7:	mov    DWORD PTR [ecx-0x33],eax
  40c4fa:	and    ch,0x92
  40c4fd:	hlt    
  40c4fe:	inc    eax
  40c4ff:	push   esi
  40c500:	push   esi
  40c501:	stos   BYTE PTR es:[edi],al
  40c502:	rdmsr  
  40c504:	mov    ds:0x9acda8a7,eax
  40c509:	dec    ebp
  40c50a:	test   al,0x5f
  40c50c:	xchg   ecx,eax
  40c50d:	popf   
  40c50e:	push   ebp
  40c50f:	call   0x513d:0xda9ff3ec
  40c516:	ja     0x40c50a
  40c518:	push   esi
  40c519:	loope  0x40c562
  40c51b:	mov    esi,0x61633aac
  40c520:	into   
  40c521:	(bad)  [ebx+0x2b]
  40c524:	push   ss
  40c525:	ficom  WORD PTR [esi-0x5f]
  40c528:	adc    cl,ah
  40c52a:	les    ebp,FWORD PTR [ebp+0x50]
  40c52d:	mov    eax,DWORD PTR ds:0x30ca0b12
  40c533:	sbb    ecx,DWORD PTR [edi-0x5b808af7]
  40c539:	jl     0x40c572
  40c53b:	and    cl,BYTE PTR ds:0x8c3b3437
  40c541:	mov    al,0xeb
  40c543:	pop    ebx
  40c544:	inc    edx
  40c545:	and    BYTE PTR [esi-0x7a],cl
  40c548:	int3   
  40c549:	lods   al,BYTE PTR ds:[esi]
  40c54a:	xchg   BYTE PTR ds:0x4cce4e99,ch
  40c550:	jp     0x40c4f2
  40c552:	fcomp  DWORD PTR [esi-0x28]
  40c555:	inc    eax
  40c556:	pop    esi
  40c557:	enter  0xb533,0x64
  40c55b:	mov    dh,0xb3
  40c55d:	loopne 0x40c531
  40c55f:	loop   0x40c572
  40c561:	sbb    BYTE PTR [edx+ecx*8],ch
  40c564:	addr16 jbe 0x40c50a
  40c567:	call   0x45fe2e42
  40c56c:	xchg   esi,eax
  40c56d:	inc    ebp
  40c56e:	mov    esp,0x3106ff2
  40c573:	js     0x40c54e
  40c575:	mov    bl,0x5c
  40c577:	inc    esi
  40c578:	js     0x40c5f7
  40c57a:	cmp    al,0xe4
  40c57c:	mov    WORD PTR [ebp+eiz*1-0x284afce9],?
  40c583:	push   0xffffffcf
  40c585:	push   0xfffffffe
  40c587:	sbb    eax,0xd7688a23
  40c58c:	jb     0x40c5ed
  40c58e:	or     dl,BYTE PTR [edi-0x7d]
  40c591:	hlt    
  40c592:	jle    0x40c5f4
  40c594:	(bad)  
  40c595:	fs aas 
  40c597:	outs   dx,DWORD PTR ds:[esi]
  40c598:	je     0x40c5f2
  40c59a:	stos   BYTE PTR es:[edi],al
  40c59b:	and    DWORD PTR [edx+0xe8d37eb],0xa
  40c5a2:	lahf   
  40c5a3:	and    al,0x6f
  40c5a5:	mov    cl,0x4c
  40c5a7:	jle    0x1eedc2ca
  40c5ad:	pop    ebp
  40c5ae:	(bad)  
  40c5af:	rol    BYTE PTR [ecx-0x6d],1
  40c5b2:	sbb    eax,0x153a672
  40c5b7:	mov    dl,0x3c
  40c5b9:	jno    0x40c5c0
  40c5bb:	rcr    ch,cl
  40c5bd:	and    esp,0x52531443
  40c5c3:	jl     0x40c5f6
  40c5c5:	push   eax
  40c5c6:	mov    ebx,DWORD PTR [edi]
  40c5c8:	ret    
  40c5c9:	aam    0x98
  40c5cb:	jl     0x40c560
  40c5cd:	std    
  40c5ce:	mov    al,ds:0xf7939fe7
  40c5d3:	hlt    
  40c5d4:	adc    al,0x67
  40c5d6:	lock xchg DWORD PTR [eax-0x6b32bb58],ebx
  40c5dd:	push   ebx
  40c5de:	ins    BYTE PTR es:[edi],dx
  40c5df:	enter  0x6e4f,0x74
  40c5e3:	jp     0x40c597
  40c5e5:	and    BYTE PTR [edx],ch
  40c5e7:	mov    ah,0x41
  40c5e9:	out    dx,eax
  40c5ea:	int    0xa9
  40c5ec:	pop    ds
  40c5ed:	jle    0x40c636
  40c5ef:	in     al,0x69
  40c5f1:	cdq    
  40c5f2:	dec    DWORD PTR [edi+edx*4-0x2ddef1fd]
  40c5f9:	in     eax,0xe8
  40c5fb:	loopne 0x40c5d5
  40c5fd:	pop    ebp
  40c5fe:	mov    DWORD PTR [ebx-0x34],ebx
  40c601:	jae    0x40c611
  40c603:	loope  0x40c677
  40c605:	dec    cl
  40c607:	add    DWORD PTR [eax+0x7e],ebp
  40c60a:	add    edi,DWORD PTR [ebp+0x56]
  40c60d:	dec    BYTE PTR [edx+0x2592a5be]
  40c613:	mov    eax,ds:0x44c98fa2
  40c618:	xchg   edi,eax
  40c619:	(bad)  
  40c61a:	outs   dx,BYTE PTR ds:[esi]
  40c61b:	mov    dl,0x18
  40c61d:	repnz xchg esp,eax
  40c61f:	and    BYTE PTR [edi+edi*1],0xc3
  40c623:	mov    esi,0xde942c15
  40c628:	adc    ch,ch
  40c62a:	mov    esi,0x65beadb2
  40c62f:	pop    ds
  40c630:	dec    esi
  40c631:	and    eax,0x259a98d9
  40c636:	sbb    eax,0x5318c25f
  40c63b:	nop
  40c63c:	add    ebx,DWORD PTR [edi]
  40c63e:	ins    DWORD PTR es:[edi],dx
  40c63f:	add    esi,esi
  40c641:	jnp    0x40c627
  40c643:	adc    DWORD PTR [ebx-0x12],0xa
  40c647:	xchg   edi,eax
  40c648:	fwait
  40c649:	rcr    ah,0x6d
  40c64c:	add    al,0x4d
  40c64e:	jg     0x40c662
  40c650:	retf   0x44a0
  40c653:	imul   eax,DWORD PTR [ebx-0x2c],0xf0580a31
  40c65a:	aam    0x46
  40c65c:	imul   esp,DWORD PTR [ecx+0xebc24d5],0x4d
  40c663:	mov    esp,0xb3aa90ac
  40c668:	cdq    
  40c669:	leave  
  40c66a:	add    ebx,DWORD PTR [ebp-0xa]
  40c66d:	add    edx,esi
  40c66f:	ret    
  40c670:	stc    
  40c671:	cmp    BYTE PTR [edx-0x3],ah
  40c674:	lods   al,BYTE PTR ds:[esi]
  40c675:	xor    DWORD PTR [eax],esi
  40c677:	mov    BYTE PTR [edx+0x29],ah
  40c67a:	jl     0x40c665
  40c67c:	lsl    eax,WORD PTR [eax-0x56]
  40c680:	sub    bl,dh
  40c682:	adc    DWORD PTR [ebp-0x41],edi
  40c685:	xor    DWORD PTR [edx],edi
  40c687:	dec    esp
  40c688:	or     edi,DWORD PTR [ebp-0x8]
  40c68b:	into   
  40c68c:	fsub   st(7),st
  40c68e:	pop    ds
  40c68f:	outs   dx,DWORD PTR ds:[esi]
  40c690:	or     al,0x64
  40c692:	(bad)  
  40c693:	adc    al,0xfe
  40c695:	xchg   ebx,eax
  40c696:	in     eax,0x37
  40c698:	jno    0x40c6e7
  40c69a:	or     ebx,0x78
  40c69d:	mov    cl,0xbc
  40c69f:	mov    al,ds:0x9a76acda
  40c6a4:	retf   
  40c6a5:	add    DWORD PTR [ebx+edi*8+0x4a],esi
  40c6a9:	jmp    0xe07c:0xa5e1efc3
  40c6b0:	retf   0xb0ea
  40c6b3:	out    dx,eax
  40c6b4:	jnp    0x40c713
  40c6b6:	sub    DWORD PTR [eax-0x1],ebp
  40c6b9:	loop   0x40c67f
  40c6bb:	mov    ds:0xc190c9cd,al
  40c6c0:	retf   0xc59e
  40c6c3:	sub    BYTE PTR [esi+0x25],0xf4
  40c6c7:	jne    0x40c6dc
  40c6c9:	sbb    ebx,ebp
  40c6cb:	sbb    al,0xa5
  40c6cd:	mov    al,dh
  40c6cf:	sub    dh,al
  40c6d1:	adc    dl,BYTE PTR [ebp-0x60]
  40c6d4:	adc    ch,ch
  40c6d6:	test   al,0xed
  40c6d8:	mov    edi,ebp
  40c6da:	aas    
  40c6db:	js     0x40c6a3
  40c6dd:	push   edi
  40c6de:	pop    eax
  40c6df:	jmp    0x40c6c3
  40c6e1:	and    ch,BYTE PTR [esi]
  40c6e3:	fcomip st,st(0)
  40c6e5:	ret    
  40c6e6:	lock rcl DWORD PTR [ecx],1
  40c6e9:	mov    bh,0x41
  40c6eb:	mov    edi,0xdb1daa84
  40c6f0:	push   0xcba9ed80
  40c6f5:	iret   
  40c6f6:	pop    esi
  40c6f7:	stc    
  40c6f8:	pop    ebx
  40c6f9:	(bad)  
  40c6fa:	and    BYTE PTR [edx],dl
  40c6fc:	xor    eax,0x662fb2b1
  40c701:	adc    eax,0x5bc0741c
  40c706:	jp     0x40c6b4
  40c708:	jno    0x40c70e
  40c70a:	and    BYTE PTR [edi],ah
  40c70c:	push   ebx
  40c70d:	dec    esi
  40c70e:	inc    edx
  40c70f:	push   edx
  40c710:	pop    ss
  40c711:	in     eax,0x3f
  40c713:	arpl   WORD PTR [ecx],sp
  40c715:	mov    dl,0x31
  40c717:	add    DWORD PTR [eax+0x75d73ad0],ebp
  40c71d:	sahf   
  40c71e:	nop
  40c71f:	inc    edi
  40c720:	cs ret 
  40c722:	push   esp
  40c723:	fstp   DWORD PTR [edx-0x11c8e1c7]
  40c729:	pop    es
  40c72a:	mov    WORD PTR [ecx],ds
  40c72c:	mov    al,0x23
  40c72e:	pop    ebx
  40c72f:	and    bh,al
  40c731:	mov    dh,0xb1
  40c733:	frstor [ebx+0x480a285c]
  40c739:	sbb    eax,0x561b8a01
  40c73e:	in     eax,dx
  40c73f:	and    eax,0xea2126c3
  40c744:	jno    0x40c715
  40c746:	dec    eax
  40c747:	cmp    BYTE PTR [edi+0x25],bl
  40c74a:	mov    dh,0xaa
  40c74c:	loopne 0x40c7ba
  40c74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c74f:	scas   eax,DWORD PTR es:[edi]
  40c750:	pop    ebp
  40c751:	leave  
  40c752:	push   eax
  40c753:	and    esi,DWORD PTR [esi-0x68]
  40c756:	xchg   DWORD PTR [edi+0x5040ab7a],ebp
  40c75c:	adc    BYTE PTR [ecx-0x2c621b18],al
  40c762:	pop    ebp
  40c763:	arpl   WORD PTR [eax-0x1f],si
  40c766:	lahf   
  40c767:	push   edx
  40c768:	inc    edx
  40c769:	add    ebx,0xffffffe6
  40c76c:	pop    ebp
  40c76d:	ds sbb al,0x61
  40c770:	popf   
  40c771:	xor    dh,cl
  40c773:	xlat   BYTE PTR ds:[ebx]
  40c774:	xor    BYTE PTR [ecx-0x26],ah
  40c777:	test   al,0x9d
  40c779:	hlt    
  40c77a:	mov    ecx,0xa97e8277
  40c77f:	mov    bl,0xf7
  40c781:	loop   0x40c726
  40c783:	and    DWORD PTR [ebp+0x68],0x8e10d76c
  40c78a:	or     al,0x28
  40c78c:	fldenv [edx]
  40c78e:	mov    edi,0x691f60e0
  40c793:	cmp    eax,0xca776712
  40c798:	add    edi,ecx
  40c79a:	cmp    ebp,DWORD PTR [edx+ecx*8-0x7afb6cd8]
  40c7a1:	idiv   DWORD PTR [eax-0x29]
  40c7a4:	mov    cl,0x31
  40c7a6:	adc    BYTE PTR [ebp-0x6d06ac26],ah
  40c7ac:	into   
  40c7ad:	clc    
  40c7ae:	pop    ss
  40c7af:	dec    ebx
  40c7b0:	dec    esi
  40c7b1:	mov    DWORD PTR [ecx],eax
  40c7b3:	clc    
  40c7b4:	clc    
  40c7b5:	xchg   edx,eax
  40c7b6:	sbb    DWORD PTR [edx],eax
  40c7b8:	push   0xffffffd2
  40c7ba:	adc    BYTE PTR [eax+0x78bdcdcb],0xe1
  40c7c1:	rcr    edx,0x3f
  40c7c4:	test   eax,0x447f3cc
  40c7c9:	xchg   edx,eax
  40c7ca:	ror    BYTE PTR [eax-0x6ecffc5c],0xe5
  40c7d1:	loope  0x40c75f
  40c7d3:	test   eax,0xd211727c
  40c7d8:	gs or  eax,0xab8c0e92
  40c7de:	int    0xa1
  40c7e0:	mov    esp,0xa899c9f3
  40c7e5:	fwait
  40c7e6:	mov    dl,0xc2
  40c7e8:	xor    ah,BYTE PTR [edi-0xb]
  40c7eb:	test   DWORD PTR [eax-0x5614c9c1],ebp
  40c7f1:	loop   0x40c837
  40c7f3:	addr16 mov bh,0xd5
  40c7f6:	xchg   DWORD PTR [edi+ebx*2],ebp
  40c7f9:	mov    ?,WORD PTR [ecx]
  40c7fb:	push   0x51
  40c7fd:	sar    DWORD PTR [ecx-0x7b51d460],1
  40c803:	mov    edi,0x81299ef9
  40c808:	dec    eax
  40c809:	ins    DWORD PTR es:[edi],dx
  40c80a:	mov    ah,0x29
  40c80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80d:	cmc    
  40c80e:	out    dx,eax
  40c80f:	retf   
  40c810:	lods   eax,DWORD PTR ds:[esi]
  40c811:	aad    0x9
  40c813:	das    
  40c814:	pop    ebx
  40c815:	fadd   QWORD PTR [edi-0x8]
  40c818:	test   al,0x7d
  40c81a:	mov    edx,gs
  40c81c:	adc    BYTE PTR [eax+0x47],0xa0
  40c820:	sbb    BYTE PTR [esi-0x43],dh
  40c823:	sbb    BYTE PTR [ebp+0x10],cl
  40c826:	pop    ebp
  40c827:	aas    
  40c828:	rol    BYTE PTR [ecx],1
  40c82a:	mov    bl,0xb7
  40c82c:	sbb    esp,DWORD PTR ds:0xd2c16bd5
  40c832:	push   0x21
  40c834:	push   ebp
  40c835:	daa    
  40c836:	sub    DWORD PTR [edx],0xffffff85
  40c839:	push   ecx
  40c83a:	xor    DWORD PTR [ecx+0x36277acf],esp
  40c840:	sbb    DWORD PTR [ebx+ecx*2],edi
  40c843:	sub    DWORD PTR [esp+ebx*4+0x67],0xffffffb4
  40c848:	pop    eax
  40c849:	out    0xba,al
  40c84b:	push   esp
  40c84c:	pop    es
  40c84d:	jecxz  0x40c87d
  40c84f:	push   esp
  40c850:	mov    esi,0x5c3ade81
  40c855:	inc    esp
  40c856:	mov    eax,DWORD PTR [ebx-0x3ea74e31]
  40c85c:	js     0x40c84a
  40c85e:	stc    
  40c85f:	xchg   edi,eax
  40c860:	push   cs
  40c861:	mov    esp,?
  40c863:	xor    edi,DWORD PTR [eax]
  40c865:	and    edx,0x1b
  40c868:	adc    al,0x1b
  40c86a:	sub    eax,0xcdd2405
  40c86f:	mov    BYTE PTR [ebp+0x30],ch
  40c872:	sub    BYTE PTR [edx+0x31e4660c],0xcd
  40c879:	adc    al,0xcb
  40c87b:	push   ds
  40c87c:	inc    eax
  40c87d:	neg    BYTE PTR [ecx-0x5]
  40c880:	(bad)  
  40c881:	and    eax,DWORD PTR [ecx+0x1]
  40c884:	fild   DWORD PTR ds:[ecx-0x75]
  40c888:	mov    bl,0x7d
  40c88a:	xchg   ecx,eax
  40c88b:	pop    ebp
  40c88c:	inc    edi
  40c88d:	inc    eax
  40c88e:	push   esi
  40c88f:	mov    ch,0x60
  40c891:	xor    esp,DWORD PTR ds:0x97996238
  40c897:	jns    0x40c8be
  40c899:	jp     0x40c905
  40c89b:	mov    dl,0xf8
  40c89d:	scas   eax,DWORD PTR es:[edi]
  40c89e:	lock out dx,al
  40c8a0:	jnp    0x40c85d
  40c8a2:	dec    edx
  40c8a3:	test   BYTE PTR ds:0x358a283f,ah
  40c8a9:	inc    ecx
  40c8aa:	shl    DWORD PTR [edi-0x54],0xc7
  40c8ae:	lds    edi,FWORD PTR ss:[edi+0x7b]
  40c8b2:	ins    DWORD PTR es:[edi],dx
  40c8b3:	inc    edx
  40c8b4:	or     DWORD PTR [ecx+0x22],esp
  40c8b7:	lahf   
  40c8b8:	and    bl,BYTE PTR [eax]
  40c8ba:	push   ebp
  40c8bb:	or     DWORD PTR [esi-0x48cb0cb8],eax
  40c8c1:	shl    DWORD PTR [edi+0x6f],0x80
  40c8c5:	loope  0x40c8f9
  40c8c7:	mov    DWORD PTR [esi+0x58],eax
  40c8ca:	mov    BYTE PTR [eax-0x11],0x93
  40c8ce:	push   esp
  40c8cf:	nop
  40c8d0:	mov    WORD PTR [ebx+ebx*2],ds
  40c8d3:	mov    esi,DWORD PTR [esi]
  40c8d5:	mov    ebx,0xe1ad3a9c
  40c8da:	adc    al,0xb1
  40c8dc:	(bad)  
  40c8de:	or     eax,0x25a46663
  40c8e3:	loop   0x40c8db
  40c8e5:	rcl    BYTE PTR [ecx],0xf3
  40c8e8:	sbb    DWORD PTR [ebx],eax
  40c8ea:	lock mov edi,0x7d1c2c34
  40c8f0:	pusha  
  40c8f1:	inc    eax
  40c8f2:	sbb    edx,DWORD PTR [edi+0x34aebece]
  40c8f8:	xor    bl,0x71
  40c8fb:	fs iret 
  40c8fd:	push   esp
  40c8fe:	cmp    DWORD PTR [eax-0x25],eax
  40c901:	fist   DWORD PTR [edx]
  40c903:	fist   WORD PTR ds:0x7f389deb
  40c909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c90a:	xor    DWORD PTR [esi],edx
  40c90c:	aam    0x42
  40c90e:	retf   0x82e
  40c911:	push   ds
  40c912:	add    edi,DWORD PTR [eax+edi*8+0x5d25d1b8]
  40c919:	mov    ah,0xef
  40c91b:	(bad)  
  40c91c:	jae    0x40c94e
  40c91e:	or     al,0x9d
  40c920:	addr16 jl 0x40c8b8
  40c923:	sahf   
  40c924:	mov    ds,WORD PTR [edx]
  40c926:	(bad)  
  40c927:	xor    al,0xe9
  40c929:	xor    eax,0xc4772e0c
  40c92e:	lods   al,BYTE PTR ds:[esi]
  40c92f:	jne    0x40c94a
  40c931:	aam    0x60
  40c933:	test   eax,0x4bf178d7
  40c938:	adc    ah,0xe6
  40c93b:	mov    ebx,0x9112e282
  40c940:	repnz dec edx
  40c942:	enter  0x903f,0x47
  40c946:	cmp    bl,BYTE PTR [edx]
  40c948:	(bad)  
  40c949:	mov    al,bl
  40c94b:	(bad)  
  40c94d:	iret   
  40c94e:	loope  0x40c97a
  40c950:	jnp    0x40c9cc
  40c952:	ins    DWORD PTR es:[edi],dx
  40c953:	ja     0x40c8e6
  40c955:	adc    esp,DWORD PTR [ecx+ebp*8-0x1bbd3076]
  40c95c:	aam    0xd0
  40c95e:	or     DWORD PTR [eax-0x2648628c],edx
  40c964:	dec    edx
  40c965:	and    BYTE PTR [ebp-0xb07616d],al
  40c96b:	loop   0x40c8fb
  40c96d:	sahf   
  40c96e:	mov    esp,?
  40c970:	mov    edi,0x840e2f11
  40c975:	arpl   ax,di
  40c977:	cld    
  40c978:	fist   DWORD PTR [edx+ebx*8+0x49]
  40c97c:	out    0xc3,al
  40c97e:	retf   
  40c97f:	inc    esi
  40c980:	push   edx
  40c981:	dec    eax
  40c982:	retf   
  40c983:	aas    
  40c984:	mov    DWORD PTR [ebp+edx*2-0x37],eax
  40c988:	into   
  40c989:	repnz xor ebp,DWORD PTR [eax-0x4287caf0]
  40c990:	popw   es
  40c992:	call   0x36fe:0x3aeb9b21
  40c999:	mov    bh,0x7f
  40c99b:	ins    DWORD PTR es:[edi],dx
  40c99c:	stc    
  40c99d:	xor    DWORD PTR [esi-0x46],esi
  40c9a0:	mov    WORD PTR ds:0x89fb41e7,?
  40c9a6:	pop    ss
  40c9a7:	aas    
  40c9a8:	frstor ds:0x3237e41c
  40c9ae:	or     ch,ch
  40c9b0:	jmp    0x8540:0x4ea1395
  40c9b7:	inc    eax
  40c9b8:	pop    es
  40c9b9:	stos   BYTE PTR es:[edi],al
  40c9ba:	rcl    BYTE PTR [ecx],1
  40c9bc:	stos   DWORD PTR es:[edi],eax
  40c9bd:	shr    DWORD PTR [edx+0xa9d26b1],0xc9
  40c9c4:	call   0xa5f6:0x4dbc8f15
  40c9cb:	rol    DWORD PTR [eax-0x7a],1
  40c9ce:	mov    bl,0xda
  40c9d0:	jo     0x40ca42
  40c9d2:	dec    ebx
  40c9d3:	test   BYTE PTR [edx-0x1e940fc6],0x49
  40c9da:	int3   
  40c9db:	pop    ebx
  40c9dc:	dec    esi
  40c9dd:	xchg   esi,eax
  40c9de:	inc    esp
  40c9df:	xchg   ebp,eax
  40c9e0:	imul   eax,DWORD PTR [edi],0x788e9a94
  40c9e6:	retf   0xe294
  40c9e9:	stc    
  40c9ea:	xchg   edi,eax
  40c9eb:	mov    dh,0xf0
  40c9ed:	mov    eax,0x85cfc69e
  40c9f2:	add    bl,BYTE PTR [edx+0x100d1ee6]
  40c9f8:	js     0x40c9e0
  40c9fa:	add    eax,0xa5b8edd6
  40c9ff:	(bad)  
  40ca00:	cwde   
  40ca01:	xlat   BYTE PTR ds:[ebx]
  40ca02:	mov    edi,0x517703ca
  40ca07:	stos   DWORD PTR es:[edi],eax
  40ca08:	cdq    
  40ca09:	mov    esi,0xdece09c0
  40ca0e:	pop    es
  40ca0f:	sti    
  40ca10:	idiv   BYTE PTR ds:0x5984d826
  40ca16:	inc    ebx
  40ca17:	jno    0x40ca12
  40ca19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca1a:	test   DWORD PTR [eax+edx*4+0x7],0x65904edf
  40ca22:	int3   
  40ca23:	xor    BYTE PTR ds:0xeca8206b,0x42
  40ca2a:	fwait
  40ca2b:	add    al,0xc6
  40ca2d:	imul   edx,DWORD PTR [edx+esi*8-0x303fd43e],0x5989eda2
  40ca38:	test   BYTE PTR [eax+0x4c],ch
  40ca3b:	push   es
  40ca3c:	dec    esi
  40ca3d:	mov    dl,cl
  40ca3f:	jg     0x40cabd
  40ca41:	sub    BYTE PTR [ebx],0x2e
  40ca44:	jp     0x40caaf
  40ca46:	add    al,0xa2
  40ca48:	fsub   st(5),st
  40ca4a:	mov    ecx,0x2d8958b4
  40ca4f:	lods   al,BYTE PTR ds:[esi]
  40ca50:	stos   DWORD PTR es:[edi],eax
  40ca51:	lock scas eax,DWORD PTR es:[edi]
  40ca53:	pop    ebx
  40ca54:	jl     0x40ca96
  40ca56:	js     0x40c9e6
  40ca58:	pop    edx
  40ca59:	call   esi
  40ca5b:	push   ss
  40ca5c:	push   0x1ea6322f
  40ca61:	xchg   ecx,eax
  40ca62:	cmp    al,0xd1
  40ca64:	add    DWORD PTR [eax+0x4e835ff9],eax
  40ca6a:	jne    0x40ca3c
  40ca6c:	(bad)  
  40ca6e:	xor    eax,0x48af7bf6
  40ca73:	push   0xd1b15c34
  40ca78:	enter  0xe667,0xfe
  40ca7c:	xor    bl,BYTE PTR ds:0xdb7c4d2a
  40ca82:	(bad)  
  40ca83:	js     0x40ca30
  40ca85:	pusha  
  40ca86:	(bad)  
  40ca87:	lods   al,BYTE PTR ds:[esi]
  40ca88:	mov    edx,0x4f34d77c
  40ca8d:	pusha  
  40ca8e:	pop    DWORD PTR [ebx-0x48092517]
  40ca94:	mov    dl,0xd2
  40ca96:	cmp    edx,DWORD PTR [bx+di+0x68d5]
  40ca9b:	sbb    DWORD PTR [edx+0x135f72ff],edi
  40caa1:	mov    dh,0xbc
  40caa3:	mov    eax,ds:0xf6a28a1a
  40caa8:	je     0x40ca7b
  40caaa:	aam    0x22
  40caac:	inc    esi
  40caad:	push   ebx
  40caae:	(bad)  
  40cab0:	push   es
  40cab1:	xor    BYTE PTR [ecx],bl
  40cab3:	adc    bh,ah
  40cab5:	pushf  
  40cab6:	pop    ds
  40cab7:	mov    WORD PTR [ebx+0x58],es
  40caba:	inc    esp
  40cabb:	cmp    DWORD PTR [esp+ebx*2-0x16],edx
  40cabf:	sbb    BYTE PTR [edx-0x579433c6],0xba
  40cac6:	push   0xe9cbbb5f
  40cacb:	lds    esi,FWORD PTR [ebx+0x3e]
  40cace:	dec    edi
  40cacf:	sub    eax,0x97b5f284
  40cad4:	cmp    DWORD PTR [edi-0x6be41adf],ecx
  40cada:	retf   0xa371
  40cadd:	add    eax,0x2bee725f
  40cae2:	inc    eax
  40cae3:	ins    DWORD PTR es:[edi],dx
  40cae4:	mov    edi,0x1c9a3a2a
  40cae9:	aaa    
  40caea:	xchg   ebx,eax
  40caeb:	repz scas eax,DWORD PTR es:[edi]
  40caed:	aad    0x62
  40caef:	adc    eax,0x5cd41409
  40caf4:	xor    ah,0x46
  40caf7:	xor    al,0xa2
  40caf9:	sub    dl,BYTE PTR [ebx+ecx*2-0x27c21619]
  40cb00:	mov    ebx,0xb4e35077
  40cb05:	imul   esi,eax,0xf2d48bca
  40cb0b:	inc    edx
  40cb0c:	jae    0x40cb8c
  40cb0e:	mov    eax,ds:0x624b61ba
  40cb13:	lods   eax,DWORD PTR ds:[esi]
  40cb14:	mov    al,0x8
  40cb16:	xor    BYTE PTR [esi+esi*1+0x27a2dbde],bl
  40cb1d:	jecxz  0x40cb3a
  40cb1f:	retf   
  40cb20:	or     edx,DWORD PTR [esi+ebp*1-0x3d6e1c8b]
  40cb27:	fwait
  40cb28:	cmp    DWORD PTR ds:0x77d77455,esi
  40cb2e:	jmp    0x9e84:0xb3d1c949
  40cb35:	out    dx,al
  40cb36:	mov    dh,0xd2
  40cb38:	into   
  40cb39:	outs   dx,BYTE PTR ds:[esi]
  40cb3a:	add    edx,DWORD PTR [ecx]
  40cb3c:	punpcklbw mm4,mm5
  40cb3f:	xchg   eax,ebp
  40cb41:	dec    esi
  40cb42:	lods   eax,DWORD PTR ds:[esi]
  40cb43:	push   ebx
  40cb44:	mov    ebp,0x64da908
  40cb49:	daa    
  40cb4a:	dec    esi
  40cb4b:	mov    esi,0x732dcf08
  40cb50:	in     al,dx
  40cb51:	xchg   esi,eax
  40cb52:	xor    DWORD PTR [eax+0x53d6eb16],edi
  40cb58:	jmp    0x1e13b2ce
  40cb5d:	sbb    BYTE PTR [eiz*1-0x714f6dcd],bh
  40cb64:	test   BYTE PTR [edx+0x4993126a],cl
  40cb6a:	mov    DWORD PTR [eax],ebx
  40cb6c:	cld    
  40cb6d:	pusha  
  40cb6e:	das    
  40cb6f:	das    
  40cb70:	div    DWORD PTR [esi]
  40cb72:	adc    eax,0x6c852428
  40cb77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb79:	test   ah,ah
  40cb7b:	mov    ecx,edx
  40cb7d:	xchg   edx,eax
  40cb7e:	in     al,0xc9
  40cb80:	push   edx
  40cb81:	and    DWORD PTR [eax-0x5de81226],eax
  40cb87:	and    eax,DWORD PTR [edi]
  40cb89:	mov    al,ds:0xcd6d609c
  40cb8e:	jb     0x40cb3c
  40cb90:	jae    0x40cb16
  40cb92:	or     BYTE PTR [edx-0x127e4de4],ah
  40cb98:	push   ebp
  40cb99:	outs   dx,BYTE PTR ds:[esi]
  40cb9a:	je     0x40cb83
  40cb9c:	fist   DWORD PTR [edi]
  40cb9e:	inc    ecx
  40cb9f:	and    cl,al
  40cba1:	fdivrp st(3),st
  40cba3:	push   0x916ce97d
  40cba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cba9:	js     0x40cbc5
  40cbab:	aam    0x82
  40cbad:	mov    cl,0xa8
  40cbaf:	test   ebp,0x32628dd
  40cbb5:	test   eax,esp
  40cbb7:	cdq    
  40cbb8:	mov    esp,0x7c8c29ca
  40cbbd:	call   0x5dc7:0x6a017b3b
  40cbc4:	clc    
  40cbc5:	stc    
  40cbc6:	cmp    al,0xcb
  40cbc8:	xchg   edx,eax
  40cbc9:	xchg   esi,eax
  40cbca:	aaa    
  40cbcb:	imul   esi,DWORD PTR ds:0xcfbfb104,0x28f25f48
  40cbd5:	jns    0x40cc44
  40cbd7:	scas   al,BYTE PTR es:[edi]
  40cbd8:	fistp  DWORD PTR [edx-0x41]
  40cbdb:	cmp    BYTE PTR [ecx],dh
  40cbdd:	xchg   esi,eax
  40cbde:	loop   0x40cc09
  40cbe0:	inc    ebx
  40cbe1:	adc    DWORD PTR [ebp-0x7f8111b],esi
  40cbe7:	xchg   edi,eax
  40cbe8:	xor    DWORD PTR [ecx+ebx*2],ebp
  40cbeb:	or     eax,edx
  40cbed:	pop    ecx
  40cbee:	in     al,dx
  40cbef:	mov    DWORD PTR [eax-0x1188bc75],edi
  40cbf5:	sub    al,0xb8
  40cbf7:	ins    BYTE PTR es:[edi],dx
  40cbf8:	addr16 ds push esp
  40cbfb:	cmc    
  40cbfc:	xchg   edi,eax
  40cbfd:	add    eax,DWORD PTR [edi+edi*8+0x4b]
  40cc01:	mov    edx,0x3eb098a0
  40cc06:	fcmove st,st(6)
  40cc09:	push   ss
  40cc0a:	daa    
  40cc0b:	push   ebx
  40cc0c:	and    eax,0x1ab314c6
  40cc11:	(bad)  
  40cc12:	lods   eax,DWORD PTR ds:[esi]
  40cc13:	adc    esp,edi
  40cc15:	fsubr  DWORD PTR [esi]
  40cc17:	loopne 0x40cc7c
  40cc19:	pop    ecx
  40cc1a:	or     al,0xce
  40cc1c:	test   al,0xb4
  40cc1e:	mov    dl,BYTE PTR [ecx+0xc]
  40cc21:	sbb    ah,dl
  40cc23:	push   esp
  40cc24:	and    edx,edi
  40cc26:	mov    ecx,DWORD PTR [eax]
  40cc28:	jb     0x40cbdd
  40cc2a:	jp     0x40cc51
  40cc2c:	mov    al,0x72
  40cc2e:	or     ebx,esp
  40cc30:	push   edi
  40cc31:	std    
  40cc32:	mov    ?,WORD PTR [ecx+0x41]
  40cc35:	imul   esi,DWORD PTR [ebx-0x450daf52],0x56
  40cc3c:	push   cs
  40cc3d:	icebp  
  40cc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc3f:	fwait
  40cc40:	retf   
  40cc41:	cdq    
  40cc42:	inc    edi
  40cc43:	pop    esi
  40cc44:	push   es
  40cc45:	test   al,0x2c
  40cc47:	mov    bl,0x57
  40cc49:	rol    ch,1
  40cc4b:	fstp   TBYTE PTR [ebx+esi*8+0x297a95de]
  40cc52:	lock sbb ch,dl
  40cc55:	stos   DWORD PTR es:[edi],eax
  40cc56:	inc    ecx
  40cc57:	mov    WORD PTR [edi*8-0x768bda93],ds
  40cc5e:	clc    
  40cc5f:	iret   
  40cc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc61:	cmp    bl,bh
  40cc63:	mov    eax,ds:0xd5be431
  40cc68:	in     eax,0x8e
  40cc6a:	pop    esi
  40cc6b:	cmp    DWORD PTR [ecx-0x7e1e35e9],ebx
  40cc71:	xor    BYTE PTR [ecx],ah
  40cc73:	add    ebp,eax
  40cc75:	clc    
  40cc76:	daa    
  40cc77:	sbb    bl,BYTE PTR [edx-0x3d]
  40cc7a:	push   edi
  40cc7b:	scas   eax,DWORD PTR es:[edi]
  40cc7c:	or     DWORD PTR [ecx],0x79f9afc7
  40cc82:	mov    bh,0x21
  40cc84:	mov    al,ds:0x70f90ed4
  40cc89:	lods   eax,DWORD PTR ds:[esi]
  40cc8a:	xor    esi,DWORD PTR [ecx]
  40cc8c:	sub    al,0xac
  40cc8e:	out    0x9d,eax
  40cc90:	call   0x1b17:0x12d3821d
  40cc97:	mov    cl,0x20
  40cc99:	mov    cl,0x71
  40cc9b:	dec    ebp
  40cc9c:	jno    0x40cce8
  40cc9e:	test   eax,0x119060c5
  40cca3:	adc    eax,0xcc3a7782
  40cca8:	rcl    BYTE PTR [ebx-0x1d59b377],cl
  40ccae:	pop    es
  40ccaf:	dec    ebp
  40ccb0:	std    
  40ccb1:	fisttp QWORD PTR [edi+0x7d7d8680]
  40ccb7:	(bad)  [ebx+0x31]
  40ccba:	or     BYTE PTR [esi],dl
  40ccbc:	mov    ecx,0x78e7227d
  40ccc1:	cmp    DWORD PTR [esi-0x5f],ecx
  40ccc4:	sahf   
  40ccc5:	popf   
  40ccc6:	and    DWORD PTR [eax],eax
  40ccc8:	cli    
  40ccc9:	sbb    BYTE PTR [edi+0x27],bl
  40cccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cccd:	cdq    
  40ccce:	mov    ds:0x3821ef24,eax
  40ccd3:	push   edx
  40ccd4:	and    al,0x96
  40ccd6:	add    dl,BYTE PTR [ebx+0x2a]
  40ccd9:	cmp    DWORD PTR ds:0x404b5749,edx
  40ccdf:	outs   dx,DWORD PTR ds:[esi]
  40cce0:	cmp    eax,0xe89e50b3
  40cce5:	nop
  40cce6:	mov    dl,0x64
  40cce8:	pop    es
  40cce9:	dec    edi
  40ccea:	jnp    0x40cd0d
  40ccec:	cdq    
  40cced:	cmp    al,0x93
  40ccef:	aad    0x4
  40ccf1:	jmp    0xadca7ee3
  40ccf6:	push   ecx
  40ccf7:	dec    ecx
  40ccf8:	sub    dl,ch
  40ccfa:	mov    ecx,ebp
  40ccfc:	inc    ecx
  40ccfd:	ret    
  40ccfe:	lahf   
  40ccff:	fcmovb st,st(0)
  40cd01:	dec    edi
  40cd02:	dec    edi
  40cd03:	ins    DWORD PTR es:[edi],dx
  40cd04:	mov    esi,0xf084122
  40cd09:	sbb    al,0x60
  40cd0b:	add    eax,0x39a1cf2c
  40cd10:	and    DWORD PTR ds:0xf48cf320,esp
  40cd16:	enter  0xdb91,0xee
  40cd1a:	enter  0xea34,0x2c
  40cd1e:	xchg   BYTE PTR [ecx+0x16f52151],bh
  40cd24:	push   ecx
  40cd25:	loop   0x40cd20
  40cd27:	(bad)
  40cd2a:	test   eax,0xb5f7b1d1
  40cd2f:	arpl   WORD PTR [ecx+0x432eb639],dx
  40cd35:	jl     0x40cd94
  40cd37:	clc    
  40cd38:	inc    ebp
  40cd39:	sbb    al,0x99
  40cd3b:	adc    esp,DWORD PTR [ecx-0x2d]
  40cd3e:	ror    DWORD PTR [ebx],1
  40cd40:	xor    dh,dh
  40cd42:	rcl    bh,1
  40cd44:	pop    es
  40cd45:	shl    edx,0x2e
  40cd48:	div    ah
  40cd4a:	out    0xa0,al
  40cd4c:	or     eax,0xa2c36328
  40cd51:	push   ds
  40cd52:	cmpxchg BYTE PTR [ecx+0x4],ch
  40cd56:	dec    eax
  40cd57:	out    dx,al
  40cd58:	push   ss
  40cd59:	cmc    
  40cd5a:	(bad)  
  40cd5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd5c:	sahf   
  40cd5d:	jae    0x40cd68
  40cd5f:	pop    edx
  40cd60:	jg     0x40cda3
  40cd62:	iret   
  40cd63:	mov    WORD PTR [ecx+0x15],cs
  40cd66:	aam    0x3
  40cd68:	div    edi
  40cd6a:	stos   DWORD PTR es:[edi],eax
  40cd6b:	and    eax,esi
  40cd6d:	mov    ebp,0x56f2fdeb
  40cd72:	adc    DWORD PTR [edi+0x45],0xc8cb9ca5
  40cd79:	ret    0xa1c3
  40cd7c:	or     DWORD PTR ds:0xeff3d369,edi
  40cd82:	dec    ecx
  40cd83:	iret   
  40cd84:	jmp    0x85f5f125
  40cd89:	popa   
  40cd8a:	and    eax,0x63e72440
  40cd8f:	pop    edi
  40cd90:	fistp  DWORD PTR [esi+0x67]
  40cd93:	outs   dx,BYTE PTR ds:[esi]
  40cd94:	or     al,0x66
  40cd96:	fnsave ds:0x117293e0
  40cd9c:	lahf   
  40cd9d:	jge    0x40cdcb
  40cd9f:	retf   0xaf7f
  40cda2:	out    0x4d,al
  40cda4:	jmp    0xc4604b27
  40cda9:	add    al,0x42
  40cdab:	js     0x40ce05
  40cdad:	push   ecx
  40cdae:	aas    
  40cdaf:	or     al,0xb2
  40cdb1:	rol    BYTE PTR [ebx],cl
  40cdb3:	outs   dx,DWORD PTR ds:[esi]
  40cdb4:	out    dx,eax
  40cdb5:	pop    ecx
  40cdb6:	stc    
  40cdb7:	and    eax,0x362b054e
  40cdbc:	mov    esi,ebx
  40cdbe:	xor    esi,esi
  40cdc0:	lock cwde 
  40cdc2:	xchg   esp,eax
  40cdc3:	and    al,0x5b
  40cdc5:	stos   BYTE PTR es:[edi],al
  40cdc6:	add    ch,dh
  40cdc8:	xchg   edx,eax
  40cdc9:	sbb    al,0x27
  40cdcb:	mov    ebx,0x804c3a67
  40cdd0:	popf   
  40cdd1:	jp     0x40ce37
  40cdd3:	(bad)  
  40cdd4:	bound  edx,QWORD PTR [edx+0x4e9d2dc3]
  40cdda:	sub    esp,edx
  40cddc:	xchg   ebx,eax
  40cddd:	xchg   DWORD PTR [ebx+0x23a48ed3],edi
  40cde3:	xchg   esi,eax
  40cde4:	inc    eax
  40cde5:	inc    ecx
  40cde6:	or     BYTE PTR [ebp-0x452555e],bl
  40cdec:	scas   al,BYTE PTR es:[edi]
  40cded:	mov    edx,0xdbc785c3
  40cdf2:	inc    esi
  40cdf3:	test   eax,0xd45bd4c1
  40cdf8:	leave  
  40cdf9:	sti    
  40cdfa:	xchg   ebx,eax
  40cdfb:	fist   WORD PTR [edx-0x7b53f90b]
  40ce01:	fisttp WORD PTR [ecx-0x31]
  40ce04:	dec    ebx
  40ce05:	int3   
  40ce06:	mov    ch,0x42
  40ce08:	rcl    ecx,1
  40ce0a:	les    edi,FWORD PTR [eax]
  40ce0c:	add    bl,BYTE PTR [esi+0x48992fae]
  40ce12:	lods   al,BYTE PTR ds:[esi]
  40ce13:	pop    esp
  40ce14:	mov    esi,0x2124d6cd
  40ce19:	push   ebp
  40ce1a:	pop    edi
  40ce1b:	xchg   BYTE PTR [edx+ebx*1+0x23820f74],dl
  40ce22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce23:	out    0xe,al
  40ce25:	(bad)  
  40ce26:	std    
  40ce27:	sub    BYTE PTR [eax+0x56],bh
  40ce2a:	jb     0x40cdf5
  40ce2c:	sub    DWORD PTR [ebx+0xb57eb94],edx
  40ce32:	xchg   ebx,eax
  40ce33:	add    al,0x72
  40ce35:	ins    DWORD PTR es:[edi],dx
  40ce36:	adc    al,0x19
  40ce38:	lods   eax,DWORD PTR ds:[esi]
  40ce39:	pop    es
  40ce3a:	push   ds
  40ce3b:	int    0xc3
  40ce3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce3e:	pusha  
  40ce3f:	fistp  WORD PTR [eax-0x13]
  40ce42:	int    0x2c
  40ce44:	mov    edi,0x291957a
  40ce49:	mov    al,0x93
  40ce4b:	jl     0x40cec9
  40ce4d:	mov    ds:0x2d61d544,eax
  40ce52:	jae    0x40ce68
  40ce54:	rol    BYTE PTR [ebp-0xa661046],0x3a
  40ce5b:	ds aad 0x34
  40ce5e:	iret   
  40ce5f:	push   0x61
  40ce61:	inc    esp
  40ce62:	push   cs
  40ce63:	pop    esp
  40ce64:	add    eax,0xc6e149b9
  40ce69:	sbb    dh,BYTE PTR [ebx+esi*1+0xcce2f7f]
  40ce70:	imul   edx,esi,0x35ffa902
  40ce76:	inc    ebx
  40ce77:	loop   0x40ced5
  40ce79:	dec    esp
  40ce7a:	sbb    DWORD PTR [ebx+esi*8],0x6c
  40ce7e:	mov    bl,0x95
  40ce80:	loop   0x40ceba
  40ce82:	and    esp,ebx
  40ce84:	inc    ecx
  40ce85:	mov    BYTE PTR [esi+0x43],cl
  40ce88:	add    BYTE PTR ds:0x36797e54,cl
  40ce8e:	mov    cl,0xdc
  40ce90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce91:	cmc    
  40ce92:	push   ebx
  40ce93:	loop   0x40cf12
  40ce95:	inc    edi
  40ce96:	fild   QWORD PTR [esi+0x37d18b9f]
  40ce9c:	ds inc ebx
  40ce9e:	neg    eax
  40cea0:	and    bl,dl
  40cea2:	push   cs
  40cea3:	sbb    BYTE PTR [eax+0x60df5450],ch
  40cea9:	in     eax,dx
  40ceaa:	pop    ss
  40ceab:	test   DWORD PTR [eax+0x46],ecx
  40ceae:	test   eax,0xd6e12476
  40ceb3:	(bad)  
  40ceb4:	into   
  40ceb5:	xlat   BYTE PTR ds:[ebx]
  40ceb6:	push   edx
  40ceb7:	aas    
  40ceb8:	cwde   
  40ceb9:	adc    eax,0xb6e70f24
  40cebe:	jb     0x40ce7f
  40cec0:	dec    ebp
  40cec1:	cmp    ebx,DWORD PTR [ebp-0x18]
  40cec4:	repnz scas al,BYTE PTR es:[edi]
  40cec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec7:	pop    ebp
  40cec8:	sub    BYTE PTR [edi-0x4a70bced],0x5a
  40cecf:	push   ecx
  40ced0:	inc    ecx
  40ced1:	xor    al,0xf6
  40ced3:	inc    ecx
  40ced4:	jo     0x40cf1b
  40ced6:	cld    
  40ced7:	pop    edi
  40ced8:	adc    BYTE PTR [ebx+0x55],dl
  40cedb:	mov    dh,ch
  40cedd:	test   ebx,edx
  40cedf:	pop    ecx
  40cee0:	aas    
  40cee1:	cmp    ah,BYTE PTR [edi-0x3303e92]
  40cee7:	shl    BYTE PTR [ecx-0x3c],1
  40ceea:	mov    esi,edi
  40ceec:	dec    eax
  40ceed:	fistp  QWORD PTR [esi+ebx*4]
  40cef0:	or     edi,ebp
  40cef2:	shl    BYTE PTR [ecx],0xd7
  40cef5:	jp     0x40cea3
  40cef7:	leave  
  40cef8:	jl     0x40cf11
  40cefa:	hlt    
  40cefb:	jnp    0x40cf18
  40cefd:	call   0x711ed42f
  40cf02:	ins    DWORD PTR es:[edi],dx
  40cf03:	das    
  40cf04:	hlt    
  40cf05:	pusha  
  40cf06:	jb     0x40cefd
  40cf08:	sub    bl,BYTE PTR [edi-0x80]
  40cf0b:	pop    eax
  40cf0c:	push   ds
  40cf0d:	mov    ch,0xe8
  40cf0f:	jno    0x40ce99
  40cf11:	pop    ds
  40cf12:	aad    0x7a
  40cf14:	cmp    al,0x3e
  40cf16:	inc    ecx
  40cf17:	(bad)  
  40cf18:	loopne 0x40cf1c
  40cf1a:	mov    bl,0x64
  40cf1c:	adc    ecx,ebp
  40cf1e:	add    eax,0x593eaec7
  40cf23:	sbb    DWORD PTR [edx+0x6d2f7a9d],esi
  40cf29:	add    al,ch
  40cf2b:	retf   0x2433
  40cf2e:	sbb    dh,ch
  40cf30:	jg     0x40ced6
  40cf32:	xchg   ebp,eax
  40cf33:	imul   ecx,DWORD PTR [ecx+0x5b],0xffffffb1
  40cf37:	cmp    eax,0xe7f0c87a
  40cf3c:	lahf   
  40cf3d:	test   bl,ah
  40cf3f:	fild   WORD PTR [edx]
  40cf41:	xor    eax,0x4b6c562
  40cf46:	pop    esp
  40cf47:	xchg   esi,eax
  40cf48:	mov    al,ds:0x2755489b
  40cf4d:	add    cx,dx
  40cf50:	pop    esp
  40cf51:	add    edi,DWORD PTR [eax+0x1350d989]
  40cf57:	scas   eax,DWORD PTR es:[edi]
  40cf58:	mov    ch,0x1
  40cf5a:	int3   
  40cf5b:	inc    esp
  40cf5c:	or     ebx,DWORD PTR [edi]
  40cf5e:	int3   
  40cf5f:	dec    eax
  40cf60:	jbe    0x40cfe0
  40cf62:	call   0x674d:0x9950dba4
  40cf69:	mov    esi,0xb4558345
  40cf6e:	add    DWORD PTR [ebx+0x23],edi
  40cf71:	pop    ss
  40cf72:	mov    cl,0xec
  40cf74:	xor    eax,0xc6cdb8cf
  40cf79:	lea    esp,[esi-0x3e]
  40cf7c:	adc    DWORD PTR fs:[eax],ecx
  40cf7f:	rol    DWORD PTR [eax+0x9],0x98
  40cf83:	push   esp
  40cf84:	push   cs
  40cf85:	test   DWORD PTR [ebp+0x7dc810be],ebx
  40cf8b:	jae    0x40cfd1
  40cf8d:	retf   
  40cf8e:	in     eax,0xcb
  40cf90:	xchg   ebp,eax
  40cf91:	sub    DWORD PTR [edi-0x3cebc0de],edi
  40cf97:	popf   
  40cf98:	(bad)  
  40cf99:	fs sbb esi,ebp
  40cf9c:	cmp    al,0x9f
  40cf9e:	mov    WORD PTR [edx+0x23],ds
  40cfa1:	test   DWORD PTR [eax-0x3c5a9ec7],edi
  40cfa7:	xchg   BYTE PTR [ecx],bl
  40cfa9:	mov    dl,0xe1
  40cfab:	stos   DWORD PTR es:[edi],eax
  40cfac:	pop    esp
  40cfad:	jl     0x40cf6f
  40cfaf:	in     eax,0x8e
  40cfb1:	hlt    
  40cfb2:	in     al,0xfc
  40cfb4:	adc    BYTE PTR [edx+0x7a3709cd],ch
  40cfba:	rol    DWORD PTR [edx],1
  40cfbc:	xor    ah,bh
  40cfbe:	lds    edx,FWORD PTR [ecx]
  40cfc0:	ret    0x2a84
  40cfc3:	xor    BYTE PTR [ebx-0x30],dl
  40cfc6:	fwait
  40cfc7:	les    esp,FWORD PTR [ebp+0x61]
  40cfca:	into   
  40cfcb:	ins    BYTE PTR es:[edi],dx
  40cfcc:	adc    ch,BYTE PTR [edi]
  40cfce:	sbb    BYTE PTR [eax-0x7e195e64],0x8c
  40cfd5:	bound  ebx,QWORD PTR [esi-0x6f]
  40cfd8:	stos   DWORD PTR es:[edi],eax
  40cfd9:	imul   edx,edx,0xc9d192c9
  40cfdf:	cld    
  40cfe0:	adc    DWORD PTR [esp+edx*2-0x286d19ba],esi
  40cfe7:	retf   
  40cfe8:	(bad)  
  40cfe9:	jl     0x40cfcb
  40cfeb:	mov    ebp,0x83d28af9
  40cff0:	aad    0xf1
  40cff2:	hlt    
  40cff3:	(bad)  
  40cff4:	es call 0x38ff8102
  40cffa:	xor    ebp,esp
  40cffc:	xchg   esp,eax
  40cffd:	cld    
  40cffe:	mov    bl,0x1f
  40d000:	movd   DWORD PTR [ebx],mm2
  40d003:	(bad)  
  40d005:	mov    ds:0x7580bacb,eax
  40d00a:	call   0x2ee7:0x2cd82b80
  40d011:	(bad)  
  40d012:	fisubr WORD PTR [eax+esi*4+0x348adb6]
  40d019:	push   cs
  40d01a:	leave  
  40d01b:	imul   eax,esi,0xa11f1727
  40d021:	and    al,0x74
  40d023:	fidiv  DWORD PTR [eax]
  40d025:	mov    ds:0xb4e30ba8,al
  40d02a:	sbb    eax,0x7fdba178
  40d02f:	dec    esi
  40d030:	ja     0x40d02b
  40d032:	hlt    
  40d033:	jg     0x40d073
  40d035:	pop    ds
  40d036:	jle    0x40d021
  40d038:	lds    eax,FWORD PTR [edx-0x1b]
  40d03b:	jns    0x40d086
  40d03d:	jne    0x40d097
  40d03f:	int3   
  40d040:	pop    esi
  40d041:	leave  
  40d042:	stos   BYTE PTR es:[edi],al
  40d043:	ret    0x454d
  40d046:	fisub  DWORD PTR [edx+esi*1]
  40d049:	imul   edi,DWORD PTR [ebx-0x5e],0xffffff94
  40d04d:	adc    BYTE PTR [eax-0x1],bl
  40d050:	xchg   BYTE PTR [esi-0xecfaef7],ah
  40d056:	or     DWORD PTR [eax-0x4ccf0053],ebp
  40d05c:	mov    dh,BYTE PTR [ebx+edi*8+0x6f]
  40d060:	stos   BYTE PTR es:[edi],al
  40d061:	retf   0xaaa0
  40d064:	call   FWORD PTR [ecx+0x46]
  40d067:	lods   al,BYTE PTR ds:[esi]
  40d068:	xlat   BYTE PTR ds:[ebx]
  40d069:	mov    al,0x3d
  40d06b:	imul   ebp,DWORD PTR [eax],0xcbeb6801
  40d071:	mov    bl,0x3e
  40d073:	push   es
  40d074:	fimul  WORD PTR [eax]
  40d076:	xchg   esi,eax
  40d077:	mov    ds,ecx
  40d079:	lods   al,BYTE PTR ds:[esi]
  40d07a:	stos   BYTE PTR es:[edi],al
  40d07b:	test   BYTE PTR [edx],0x3b
  40d07e:	xlat   BYTE PTR ds:[ebx]
  40d07f:	jmp    0x403f503a
  40d084:	inc    esp
  40d085:	mov    ecx,0x4fb5057b
  40d08a:	lds    edx,FWORD PTR [ebx]
  40d08c:	mov    ?,WORD PTR [edx+edx*1-0x6b]
  40d090:	lea    eax,ds:0x223b06f9
  40d096:	jmp    0x9e96:0xc6762433
  40d09d:	mov    ah,0x86
  40d09f:	or     DWORD PTR [ebp-0x17],ebx
  40d0a2:	icebp  
  40d0a3:	sub    BYTE PTR ss:[ebx+eax*1+0x509cb42e],0xed
  40d0ac:	jnp    0x40d0fa
  40d0ae:	dec    ecx
  40d0af:	cmc    
  40d0b0:	sub    DWORD PTR [ebp-0x5aa1d35f],ebp
  40d0b6:	jnp    0x40d040
  40d0b8:	cli    
  40d0b9:	cmp    DWORD PTR [eax+0x1d54d149],edx
  40d0bf:	into   
  40d0c0:	outs   dx,DWORD PTR ds:[esi]
  40d0c1:	sbb    bh,bh
  40d0c3:	adc    esi,DWORD PTR [edi+ecx*4+0x44]
  40d0c7:	jle    0x40d0ae
  40d0c9:	fsub   DWORD PTR [ebx]
  40d0cb:	pop    eax
  40d0cc:	push   0x8ef51d4b
  40d0d1:	mov    BYTE PTR [eax-0x1d18513c],cl
  40d0d7:	adc    BYTE PTR [ebp-0x39],dl
  40d0da:	sbb    eax,0x8599d953
  40d0df:	jo     0x40d0cc
  40d0e1:	cmp    esi,DWORD PTR [edi]
  40d0e3:	in     eax,dx
  40d0e4:	mov    ah,0x0
  40d0e6:	dec    edi
  40d0e7:	and    BYTE PTR [ebp-0x228778d2],cl
  40d0ed:	push   esi
  40d0ee:	ins    DWORD PTR es:[edi],dx
  40d0ef:	mov    ecx,0x178fb529
  40d0f4:	mov    bl,0xcd
  40d0f6:	cmp    bh,0x5c
  40d0f9:	jmp    FWORD PTR [ecx]
  40d0fb:	and    bh,al
  40d0fd:	or     al,0x93
  40d0ff:	inc    edx
  40d100:	call   0xd2bb:0x415b974f
  40d107:	adc    ebx,DWORD PTR [ebx-0xd2fa880]
  40d10d:	cmp    al,0x2a
  40d10f:	in     al,dx
  40d110:	mov    WORD PTR [edi],?
  40d112:	cld    
  40d113:	(bad)  
  40d114:	xor    DWORD PTR [ecx+edi*1+0x2c],ebx
  40d118:	retf   0xd9ca
  40d11b:	xor    dh,cl
  40d11d:	or     eax,0x6093f32d
  40d122:	xlat   BYTE PTR ds:[ebx]
  40d123:	adc    DWORD PTR [ecx-0x70],0xda7ac3a
  40d12a:	xchg   ebx,esi
  40d12c:	mov    BYTE PTR [eax],0x34
  40d12f:	imul   edi,DWORD PTR [ebx-0x2902f09f],0xda616044
  40d139:	and    DWORD PTR [ebp-0x79],esi
  40d13c:	dec    DWORD PTR [edi]
  40d13e:	mov    esi,DWORD PTR [ebp-0x214b9500]
  40d144:	dec    ebp
  40d145:	aam    0x6d
  40d147:	push   edi
  40d148:	xchg   edi,eax
  40d149:	jmp    0x40d18d
  40d14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d14c:	inc    edx
  40d14d:	push   ss
  40d14e:	push   cs
  40d14f:	pop    edi
  40d150:	jae    0x40d178
  40d152:	push   cs
  40d153:	cli    
  40d154:	ja     0x40d1c4
  40d156:	jp     0x40d1b9
  40d158:	(bad)  
  40d159:	(bad)  
  40d15a:	cmp    edi,esi
  40d15c:	retf   0x49d7
  40d15f:	fwait
  40d160:	(bad)  
  40d161:	shl    BYTE PTR [esi+0x6a],0x5f
  40d165:	ds add esi,ebp
  40d168:	inc    ebx
  40d169:	(bad)  
  40d16b:	cld    
  40d16c:	sbb    ch,ah
  40d16e:	mov    ebp,esp
  40d170:	hlt    
  40d171:	inc    ebx
  40d172:	adc    cl,BYTE PTR [eax+0x2d]
  40d175:	jg     0x40d10c
  40d177:	nop/reserved BYTE PTR [edi]
  40d17a:	ss adc bh,ch
  40d17d:	mov    dl,BYTE PTR ds:0xbcb2130a
  40d183:	mov    edx,0xc05c9695
  40d188:	mov    ebp,ecx
  40d18a:	loopne 0x40d1da
  40d18c:	push   ebx
  40d18d:	pushf  
  40d18e:	fmul   QWORD PTR gs:[ebp+0x65]
  40d192:	xchg   edx,eax
  40d193:	iret   
  40d194:	add    cl,bh
  40d196:	inc    ebx
  40d197:	stos   DWORD PTR es:[edi],eax
  40d198:	cwde   
  40d199:	lds    ebx,FWORD PTR [eax+0xb]
  40d19c:	dec    eax
  40d19d:	mov    ss,WORD PTR [edi]
  40d19f:	mov    ah,dh
  40d1a1:	jecxz  0x40d133
  40d1a3:	fistp  QWORD PTR [edx*8-0x29c6e1e3]
  40d1aa:	mov    DWORD PTR [eax],edi
  40d1ac:	out    0x4c,eax
  40d1ae:	data16 (bad) 
  40d1b0:	mov    esp,0xb26e5c35
  40d1b5:	sbb    eax,0xb3babb84
  40d1ba:	jnp    0x40d17b
  40d1bc:	inc    edx
  40d1bd:	sub    DWORD PTR [ecx+edx*8],ecx
  40d1c0:	pop    ebp
  40d1c1:	push   ebp
  40d1c2:	push   edx
  40d1c3:	mov    ch,0x64
  40d1c5:	pushf  
  40d1c6:	jl     0x40d15c
  40d1c8:	pushf  
  40d1c9:	cmp    edi,0xffffff8a
  40d1cc:	adc    al,0x38
  40d1ce:	or     ch,bh
  40d1d0:	hlt    
  40d1d1:	js     0x40d1ba
  40d1d3:	jns    0x40d18e
  40d1d5:	adc    ebx,DWORD PTR [ebx+0x26]
  40d1d8:	call   0xfcd9:0xb500ee2f
  40d1df:	mov    bh,0x11
  40d1e1:	jg     0x40d209
  40d1e3:	shr    DWORD PTR [edx+0x62],1
  40d1e6:	mov    DWORD PTR [edi],0x89b17e3b
  40d1ec:	das    
  40d1ed:	outs   dx,DWORD PTR ds:[esi]
  40d1ee:	shl    DWORD PTR [edi+0xec5084b],0x37
  40d1f5:	mov    bl,0x9d
  40d1f7:	jns    0x40d1ad
  40d1f9:	fimul  WORD PTR [ebx]
  40d1fb:	jmp    0x40d25c
  40d1fd:	nop
  40d1fe:	stos   BYTE PTR es:[edi],al
  40d1ff:	dec    esp
  40d200:	inc    ebx
  40d201:	es iret 
  40d203:	cmp    al,0xcc
  40d205:	sti    
  40d206:	ficomp DWORD PTR [edx]
  40d208:	sti    
  40d209:	push   ds
  40d20a:	dec    edx
  40d20b:	fst    st(0)
  40d20d:	inc    esi
  40d20e:	in     eax,dx
  40d20f:	lods   eax,DWORD PTR ds:[esi]
  40d210:	add    ebp,DWORD PTR [edi+edi*8+0x0]
  40d214:	inc    BYTE PTR [ebp-0x7d2a0f5d]
  40d21a:	or     al,0x0
  40d21c:	cld    
  40d21d:	pop    ds
  40d21e:	push   ds
  40d21f:	or     eax,DWORD PTR [eax-0x5a830e83]
  40d225:	(bad)  
  40d226:	loope  0x40d21e
  40d228:	lahf   
  40d229:	jno    0x40d288
  40d22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d22c:	push   ss
  40d22d:	ins    BYTE PTR es:[edi],dx
  40d22e:	dec    eax
  40d22f:	mov    esp,0x1efc5aea
  40d234:	sbb    DWORD PTR [edx],ebx
  40d236:	mov    BYTE PTR [eax-0x48],ch
  40d239:	fsubr  st(5),st
  40d23b:	jmp    0x84d19ea8
  40d240:	popf   
  40d241:	repz enterw 0xb1f4,0x42
  40d247:	or     BYTE PTR [ebp-0x5b02bf2b],0xa1
  40d24e:	push   ecx
  40d24f:	call   0xba9b:0x2a85db10
  40d256:	out    0xc2,al
  40d258:	(bad)  
  40d25a:	hlt    
  40d25b:	out    dx,al
  40d25c:	push   0xeb6ce7a6
  40d261:	stos   DWORD PTR es:[edi],eax
  40d262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d263:	push   esi
  40d264:	and    BYTE PTR [esi+0x6812cf7c],ch
  40d26a:	jno    0x40d227
  40d26c:	add    eax,edi
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	out    0xc2,eax
  40d2fe:	jp     0x40d2bd
  40d300:	xchg   ebp,eax
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	cmp    DWORD PTR [ecx],0xffffffb9
  40d30a:	aas    
  40d30b:	sub    DWORD PTR [ecx-0x36],0xffffffff
  40d30f:	jnp    0x40d2a2
  40d311:	mov    esi,0xaab2079d
  40d316:	xchg   esi,eax
  40d317:	and    al,0x72
  40d319:	sbb    eax,0xbf939ef
  40d31e:	add    bl,BYTE PTR [ecx]
  40d320:	push   edx
  40d321:	gs mov bh,0xbe
  40d324:	ds retf 
  40d326:	xchg   ebx,eax
  40d327:	or     al,0x2d
  40d329:	push   0x34
  40d32b:	popa   
  40d32c:	(bad)  
  40d32d:	add    esp,DWORD PTR [edi+0x5081d8ee]
  40d333:	adc    al,0xf6
  40d335:	inc    edx
  40d336:	xlat   BYTE PTR ds:[ebx]
  40d337:	rcr    BYTE PTR [ecx],cl
  40d339:	in     eax,0x94
  40d33b:	ror    BYTE PTR [ebp+0x76],1
  40d33e:	pop    ebp
  40d33f:	lahf   
  40d340:	fiadd  WORD PTR [esi+0x7ec3d5e8]
  40d346:	sahf   
  40d347:	jecxz  0x40d31c
  40d349:	fisttp DWORD PTR [edi]
  40d34b:	sub    al,0xd8
  40d34d:	mov    cl,0x20
  40d34f:	xchg   esi,eax
  40d350:	stos   BYTE PTR es:[edi],al
  40d351:	jnp    0x40d377
  40d353:	sbb    edi,DWORD PTR [esi-0x28e4a9e0]
  40d359:	lds    edx,FWORD PTR [eax+0x40]
  40d35c:	repz jns 0x40d352
  40d35f:	(bad)
  40d362:	push   ebp
  40d363:	sbb    esi,DWORD PTR [esi+0x32f99631]
  40d369:	test   eax,0x23826730
  40d36e:	inc    ebp
  40d36f:	xor    DWORD PTR [eax*2-0x59a62e7b],eax
  40d376:	out    dx,eax
  40d377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d378:	jge    0x40d312
  40d37a:	(bad)  
  40d37d:	push   0xa32a77e
  40d382:	ja     0x40d365
  40d384:	pop    esi
  40d385:	cmp    DWORD PTR [edx+ebp*1-0x67],esp
  40d389:	and    BYTE PTR [ecx+ecx*1],bh
  40d38c:	push   cs
  40d38d:	retf   0x9b94
  40d390:	jb     0x40d3fb
  40d392:	fisub  WORD PTR [edi]
  40d394:	js     0x40d387
  40d396:	xor    ebx,esi
  40d398:	cmp    al,0x9a
  40d39a:	(bad)  
  40d39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39c:	call   0xb757:0x21891f6a
  40d3a3:	push   edi
  40d3a4:	cmp    eax,0x2cbf9d40
  40d3a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3aa:	sub    al,0x13
  40d3ac:	mov    ecx,0xea0c15b3
  40d3b1:	(bad)  
  40d3b3:	fcomp  DWORD PTR [esi]
  40d3b5:	dec    ebp
  40d3b6:	stos   BYTE PTR es:[edi],al
  40d3b7:	xor    dl,dl
  40d3b9:	push   es
  40d3ba:	pop    edi
  40d3bb:	mov    ah,BYTE PTR [eax-0x3f]
  40d3be:	shr    esp,1
  40d3c0:	and    DWORD PTR [ebx+eiz*8-0xc],ebp
  40d3c4:	xchg   ecx,eax
  40d3c5:	(bad)  
  40d3c6:	std    
  40d3c7:	or     eax,0x2880ade8
  40d3cc:	jnp    0x40d3ca
  40d3ce:	repz pop ecx
  40d3d0:	mov    cl,0x97
  40d3d2:	pop    es
  40d3d3:	cdq    
  40d3d4:	dec    eax
  40d3d5:	sub    DWORD PTR [ecx],ebx
  40d3d7:	mov    ch,0xa
  40d3d9:	popa   
  40d3da:	mov    dl,BYTE PTR [edi]
  40d3dc:	or     ch,BYTE PTR [edx+0x67]
  40d3df:	retf   0x8fe4
  40d3e2:	cmp    al,0x4b
  40d3e4:	icebp  
  40d3e5:	inc    ebx
  40d3e6:	xchg   BYTE PTR [edi],cl
  40d3e8:	in     eax,0x27
  40d3ea:	jg     0x40d3db
  40d3ec:	inc    edi
  40d3ed:	addr16 inc edi
  40d3ef:	hlt    
  40d3f0:	shr    cl,1
  40d3f2:	mov    ebx,0x9b47d2ad
  40d3f7:	pop    esp
  40d3f8:	and    dh,BYTE PTR [edi+0x31280e6f]
  40d3fe:	xchg   esp,eax
  40d3ff:	jl     0x40d3fe
  40d401:	sub    eax,0x615a1b52
  40d406:	push   esp
  40d407:	fdivr  QWORD PTR [ebp+0x60]
  40d40a:	xlat   BYTE PTR ds:[ebx]
  40d40b:	xchg   esp,eax
  40d40c:	iret   
  40d40d:	cdq    
  40d40e:	outs   dx,BYTE PTR ds:[esi]
  40d40f:	xlat   BYTE PTR ds:[ebx]
  40d410:	xor    BYTE PTR [esi+0x76],0xfd
  40d414:	cmp    ebp,DWORD PTR cs:[eax]
  40d417:	test   al,ch
  40d419:	pop    es
  40d41a:	sti    
  40d41b:	or     BYTE PTR [esi],ch
  40d41d:	mov    ebx,DWORD PTR [esi-0x135c97a2]
  40d423:	into   
  40d424:	sbb    BYTE PTR [edx],bl
  40d426:	jno    0x40d458
  40d428:	mov    al,0xc6
  40d42a:	pop    ds
  40d42b:	in     eax,0xdb
  40d42d:	cmp    BYTE PTR [ebp+0x38568a65],dl
  40d433:	ss adc eax,0x3b7045ca
  40d439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d43a:	ficomp WORD PTR [ebp+0x6bd2a5c5]
  40d440:	out    dx,al
  40d441:	stc    
  40d442:	cwde   
  40d443:	jmp    0x8b41b9c2
  40d448:	dec    edx
  40d449:	inc    cx
  40d44b:	ins    DWORD PTR es:[edi],dx
  40d44c:	mov    eax,ds:0x4e33e038
  40d451:	xchg   esp,eax
  40d452:	pop    eax
  40d453:	mov    ds:0x5831b3b5,al
  40d458:	jae    0x40d3dd
  40d45a:	je     0x40d449
  40d45c:	xor    BYTE PTR [edx+0x22],ch
  40d45f:	sti    
  40d460:	xchg   esp,eax
  40d461:	fdiv   DWORD PTR [edi+0x59]
  40d464:	push   0x2c
  40d466:	(bad)  
  40d467:	mov    eax,0xd4073ddc
  40d46c:	pop    edx
  40d46d:	push   eax
  40d46e:	sahf   
  40d46f:	sbb    bl,BYTE PTR [ecx+0x63a56dda]
  40d475:	aas    
  40d476:	jns    0x40d417
  40d478:	stos   BYTE PTR es:[edi],al
  40d479:	(bad)  
  40d47a:	mov    ah,0xa
  40d47c:	stc    
  40d47d:	imul   esi,DWORD PTR [ecx+ebx*2],0xc5c9da5f
  40d484:	jecxz  0x40d413
  40d486:	push   es
  40d487:	pop    ebp
  40d488:	icebp  
  40d489:	test   BYTE PTR [ebp-0x15],bh
  40d48c:	mov    esp,DWORD PTR [edi+0x16]
  40d48f:	into   
  40d490:	mov    dh,0x4d
  40d492:	sub    dl,al
  40d494:	adc    al,0x6f
  40d496:	shl    ebp,cl
  40d498:	or     eax,0x1b68d99d
  40d49d:	fidivr WORD PTR [eax-0x63e58e01]
  40d4a3:	push   0xfffffff5
  40d4a5:	daa    
  40d4a6:	adc    bl,BYTE PTR [ebp+0x44fa29ec]
  40d4ac:	rol    BYTE PTR [edx+edx*4],cl
  40d4af:	stos   DWORD PTR es:[edi],eax
  40d4b0:	imul   ebx,DWORD PTR ds:0xad8d5ac8,0x518ff37e
  40d4ba:	dec    ebx
  40d4bb:	mov    BYTE PTR [ecx+0x7e],bl
  40d4be:	das    
  40d4bf:	mov    ebp,0xa10d3041
  40d4c4:	xchg   ebx,eax
  40d4c5:	xchg   esi,eax
  40d4c6:	xor    eax,0xb64a5de8
  40d4cb:	retf   
  40d4cc:	xlat   BYTE PTR ds:[ebx]
  40d4cd:	repz and DWORD PTR [ecx+0x7e],esp
  40d4d1:	push   eax
  40d4d2:	imul   edx,DWORD PTR [edi],0x46
  40d4d5:	shl    ebp,cl
  40d4d7:	fidiv  DWORD PTR [edi]
  40d4d9:	add    BYTE PTR [ebp+0x668d8c1b],0xbb
  40d4e0:	fiadd  DWORD PTR [ecx]
  40d4e2:	pop    edi
  40d4e3:	retf   
  40d4e4:	bswap  ebx
  40d4e6:	inc    edi
  40d4e7:	dec    eax
  40d4e8:	addr16 js 0x40d53e
  40d4eb:	retf   0x54f
  40d4ee:	add    DWORD PTR [ebp-0x7052156c],0xdd9c10d8
  40d4f8:	inc    edi
  40d4f9:	add    BYTE PTR [edx+0x2c],0x89
  40d4fd:	pminsw mm2,QWORD PTR [edx-0x7d]
  40d501:	pop    ebp
  40d502:	loopne 0x40d558
  40d504:	sahf   
  40d505:	jmp    0x529d:0xf9dc1438
  40d50c:	add    dh,BYTE PTR es:[ebx+0x1e0e2580]
  40d513:	push   ss
  40d514:	sub    edx,DWORD PTR [edi]
  40d516:	push   esi
  40d517:	adc    dl,dl
  40d519:	jno    0x40d503
  40d51b:	mov    esi,0x8934e486
  40d520:	mov    ds:0xd51a8dee,al
  40d525:	pop    edx
  40d526:	(bad)  
  40d527:	push   edx
  40d528:	push   edx
  40d529:	xchg   edx,eax
  40d52a:	icebp  
  40d52b:	in     al,0xcd
  40d52d:	jne    0x40d4e0
  40d52f:	cs xchg esp,eax
  40d531:	iret   
  40d532:	or     BYTE PTR [ecx+0x45e0f63e],dl
  40d538:	loope  0x40d537
  40d53a:	out    0x16,al
  40d53c:	mov    WORD PTR [esi-0xe],gs
  40d53f:	(bad)  
  40d540:	sbb    al,0x1
  40d542:	jmp    0xb1e454a2
  40d547:	shr    BYTE PTR fs:[ecx+0x5bbe7e81],1
  40d54e:	push   ss
  40d54f:	cmp    eax,0xa41db7bb
  40d554:	shr    DWORD PTR [eax+0x1b],cl
  40d557:	pusha  
  40d558:	jnp    0x40d559
  40d55a:	pop    edx
  40d55c:	rol    BYTE PTR [ebp-0x49],cl
  40d55f:	in     eax,dx
  40d560:	lds    esp,FWORD PTR [ecx]
  40d562:	adc    eax,0xfb90dc37
  40d567:	dec    eax
  40d568:	test   eax,0x5c6b392e
  40d56d:	xor    BYTE PTR [edx],bl
  40d56f:	les    esi,FWORD PTR [edx-0x49]
  40d572:	inc    ebx
  40d573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d574:	imul   ebx,DWORD PTR [eax+0x3ad34d98],0x56
  40d57b:	test   al,0x1e
  40d57d:	std    
  40d57e:	adc    edi,DWORD PTR [edx]
  40d580:	add    ah,BYTE PTR [esi-0x39]
  40d583:	je     0x40d5d0
  40d585:	mov    cl,0xbc
  40d587:	jo     0x40d532
  40d589:	inc    edi
  40d58a:	ror    BYTE PTR [ecx-0x10],cl
  40d58d:	(bad)  
  40d58e:	jno    0x40d51e
  40d590:	mov    dh,0x5a
  40d592:	push   0x8359d48e
  40d597:	jns    0x40d573
  40d599:	cmp    eax,0x96b906b9
  40d59e:	gs out 0xf8,eax
  40d5a1:	sti    
  40d5a2:	sub    edi,DWORD PTR [ebx+0x42]
  40d5a5:	out    0x98,eax
  40d5a7:	sbb    al,0x63
  40d5a9:	cmp    esi,esi
  40d5ab:	and    BYTE PTR [edx-0x7535cc99],cl
  40d5b1:	(bad)  
  40d5b2:	data16 sbb al,0xa
  40d5b5:	xchg   ebx,eax
  40d5b6:	mov    ebx,0xde4368d
  40d5bb:	mov    eax,ds:0x548d46cd
  40d5c0:	pop    esp
  40d5c1:	imul   esp,edx,0x0
  40d5c4:	rcr    DWORD PTR [eax+0x1a],1
  40d5c7:	mov    ds:0x7789b618,eax
  40d5cc:	gs or  esi,edi
  40d5cf:	sub    eax,0x35513650
  40d5d4:	cmp    edi,DWORD PTR [esi-0x4b418783]
  40d5da:	mov    ebp,0x9169330c
  40d5df:	arpl   ax,cx
  40d5e1:	add    DWORD PTR [ecx+0x78],edi
  40d5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e5:	icebp  
  40d5e6:	call   0x97d637d6
  40d5eb:	test   eax,0x5f0fc61d
  40d5f0:	in     eax,0xcb
  40d5f2:	(bad)  
  40d5f3:	jno    0x40d639
  40d5f5:	mov    edi,0x143c0381
  40d5fa:	push   esp
  40d5fb:	jge    0x40d672
  40d5fd:	xchg   ebp,eax
  40d5fe:	jbe    0x40d586
  40d600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d601:	add    dh,BYTE PTR [ebx+0x55]
  40d604:	test   al,0xb9
  40d606:	or     ah,BYTE PTR [ebx-0x5f817d9e]
  40d60c:	mov    dh,0x73
  40d60e:	jmp    0x65a37275
  40d613:	mov    dl,0x54
  40d615:	xchg   ecx,eax
  40d616:	mov    ecx,0xf8cd12f
  40d61b:	stc    
  40d61c:	(bad)  
  40d61f:	jg     0x40d695
  40d621:	lock dec edi
  40d623:	push   ss
  40d624:	cmp    dh,cl
  40d626:	aaa    
  40d627:	(bad)  
  40d628:	cmp    eax,0xd99b5231
  40d62d:	inc    esp
  40d62e:	inc    edx
  40d62f:	mov    ebx,0x7a7e486f
  40d634:	cmp    edi,DWORD PTR [ebp+0x761c1208]
  40d63a:	pop    esi
  40d63b:	push   edi
  40d63c:	and    DWORD PTR [edx+ebx*4-0x2],edi
  40d640:	xor    al,0xd0
  40d642:	fs (bad) 
  40d644:	in     al,0xb6
  40d646:	pop    es
  40d647:	cmp    edx,ebp
  40d649:	cli    
  40d64a:	mov    esp,0x6995a133
  40d64f:	sbb    al,0x1a
  40d651:	fld    DWORD PTR [edi]
  40d653:	aam    0xd3
  40d655:	es add eax,0x8fd1be5d
  40d65b:	sbb    al,0xed
  40d65d:	mov    gs,WORD PTR [ecx+edx*4+0x50]
  40d661:	dec    eax
  40d662:	fnstcw WORD PTR [ebx+0x437743c9]
  40d668:	stc    
  40d669:	test   BYTE PTR [eax-0x70b39aee],ah
  40d66f:	in     eax,0x38
  40d671:	icebp  
  40d672:	ret    
  40d673:	adc    eax,0x4b52d61
  40d678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d679:	jmp    0x40d67d
  40d67b:	or     al,0x30
  40d67d:	push   0x6
  40d67f:	mov    dl,0x9b
  40d681:	sbb    esp,DWORD PTR [ecx-0x7e6b474e]
  40d687:	imul   esp,DWORD PTR [ecx],0xa78c129e
  40d68d:	idiv   esp
  40d68f:	mov    eax,ds:0x52036b9a
  40d694:	ret    0xc26a
  40d697:	mov    ecx,0xbd77b7cd
  40d69c:	nop
  40d69d:	dec    eax
  40d69e:	scas   al,BYTE PTR es:[edi]
  40d69f:	test   eax,0x2f6efbaf
  40d6a4:	test   DWORD PTR [edx+0x14608387],esp
  40d6aa:	push   edx
  40d6ab:	jg     0x40d680
  40d6ad:	and    esi,DWORD PTR [edx+0x2e]
  40d6b0:	rcl    ah,0x24
  40d6b3:	push   es
  40d6b4:	sbb    al,ah
  40d6b6:	imul   edi,DWORD PTR [ebx],0x6fce0fcd
  40d6bc:	mov    dh,0x66
  40d6be:	jns    0x40d727
  40d6c0:	addr16 mov bh,0x9b
  40d6c3:	shl    BYTE PTR [ebp-0x54],1
  40d6c6:	xor    eax,0x338f98f6
  40d6cb:	sbb    DWORD PTR ds:[ebx+ebx*8+0x1c],edi
  40d6d0:	xor    al,0x3c
  40d6d2:	lea    ebp,[ebp-0x80]
  40d6d5:	dec    eax
  40d6d6:	imul   edx,DWORD PTR [edx+0x8],0x44
  40d6da:	ja     0x40d669
  40d6dc:	lahf   
  40d6dd:	xchg   ebx,eax
  40d6de:	fisttp QWORD PTR [edi+0x133f0382]
  40d6e4:	fcomp  DWORD PTR [esi]
  40d6e6:	adc    eax,0x4b81d136
  40d6eb:	push   es
  40d6ec:	sbb    eax,0x4710ef6c
  40d6f1:	mov    cl,0xad
  40d6f3:	jbe    0x40d721
  40d6f5:	adc    DWORD PTR [ecx+eiz*4+0x52a0493],ebp
  40d6fc:	ss stos DWORD PTR es:[edi],eax
  40d6fe:	dec    esp
  40d6ff:	push   ss
  40d700:	or     DWORD PTR [edi],0x10
  40d703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d704:	mov    al,0x15
  40d706:	push   esi
  40d707:	mov    ebp,0x3d945719
  40d70c:	cs pop ecx
  40d70e:	and    bh,ch
  40d710:	cs jmp 0x40d767
  40d713:	in     eax,0x53
  40d715:	outs   dx,BYTE PTR ds:[esi]
  40d716:	push   eax
  40d717:	ror    BYTE PTR [ecx],1
  40d719:	dec    ebx
  40d71a:	fs or  ah,al
  40d71d:	std    
  40d71e:	add    eax,eax
  40d720:	in     eax,dx
  40d721:	add    DWORD PTR [edi+ecx*4],ebx
  40d724:	scas   eax,DWORD PTR es:[edi]
  40d725:	cld    
  40d726:	pop    esp
  40d727:	pushf  
  40d728:	fcomp  DWORD PTR [esi+0x5d3889bd]
  40d72e:	sub    DWORD PTR [ecx],eax
  40d730:	cmp    eax,0xdb9ffe90
  40d735:	out    0x8f,al
  40d737:	or     bh,BYTE PTR [ebx]
  40d739:	fidivr DWORD PTR [edi+eiz*8]
  40d73c:	pop    esp
  40d73d:	sbb    eax,DWORD PTR ds:0xe0c484d0
  40d743:	pusha  
  40d744:	mov    cl,0xf0
  40d746:	pop    eax
  40d747:	jne    0x40d6d6
  40d749:	jnp    0x40d78c
  40d74b:	call   0x661de50b
  40d750:	mov    ecx,0xecdb0eb6
  40d755:	in     al,0x77
  40d757:	or     ebp,ebx
  40d759:	(bad)  
  40d75a:	dec    ebx
  40d75b:	inc    ecx
  40d75c:	adc    BYTE PTR [edx-0x55c14645],dl
  40d762:	or     al,0xce
  40d764:	xor    dh,bl
  40d766:	jns    0x40d754
  40d768:	neg    DWORD PTR ds:[eax]
  40d76b:	ret    
  40d76c:	jle    0x40d6ff
  40d76e:	jmp    FWORD PTR [edi+0x5a]
  40d771:	mov    BYTE PTR [edx+ebp*8+0x7f26ad0b],bh
  40d778:	fdivr  QWORD PTR [ecx]
  40d77a:	push   ds
  40d77b:	jle    0x40d7c4
  40d77d:	inc    ebp
  40d77e:	pop    ebp
  40d77f:	xor    edx,ebp
  40d781:	das    
  40d782:	mov    ds:0x91d91b24,eax
  40d787:	add    BYTE PTR [eax],bh
  40d789:	dec    ebp
  40d78a:	leave  
  40d78b:	dec    edi
  40d78c:	adc    DWORD PTR [ebx-0x4cf0eb9b],esp
  40d792:	xor    al,BYTE PTR [ebp+0x10]
  40d795:	stos   DWORD PTR es:[edi],eax
  40d796:	enter  0xcf0a,0xbb
  40d79a:	adc    ecx,DWORD PTR fs:[edi]
  40d79d:	out    dx,al
  40d79e:	enter  0x7935,0xd0
  40d7a2:	jg     0x40d7c6
  40d7a4:	inc    ebx
  40d7a5:	xchg   BYTE PTR [ecx+edx*1+0x124b6f04],bl
  40d7ac:	jmp    0x2867:0xbcfa8372
  40d7b3:	mov    BYTE PTR [eax-0x57],cl
  40d7b6:	(bad)  
  40d7b8:	int3   
  40d7b9:	and    BYTE PTR [eax],ch
  40d7bb:	fnsave ds:0xb5afeb0c
  40d7c1:	jle    0x40d806
  40d7c3:	outs   dx,DWORD PTR ds:[esi]
  40d7c4:	popa   
  40d7c5:	push   edi
  40d7c6:	push   ebp
  40d7c7:	call   0xe3e373c7
  40d7cc:	repz jp 0x40d75d
  40d7cf:	ret    0x56b8
  40d7d2:	sub    BYTE PTR [eax+0x52f92c99],dh
  40d7d8:	jl     0x40d83c
  40d7da:	jnp    0x40d83d
  40d7dc:	in     al,dx
  40d7dd:	adc    bl,BYTE PTR [edx+ebp*4-0x58]
  40d7e1:	arpl   WORD PTR [ebx-0x9f77d0a],bx
  40d7e7:	call   0xf764379e
  40d7ec:	stc    
  40d7ed:	xor    di,bx
  40d7f0:	cmp    esp,DWORD PTR [ebx]
  40d7f2:	mov    eax,0xd50af586
  40d7f7:	call   0x846f1004
  40d7fc:	adc    al,0x1
  40d7fe:	dec    edx
  40d7ff:	(bad)  [edi+eiz*4]
  40d802:	stc    
  40d803:	fs aaa 
  40d805:	mov    ds:0x85d8d894,al
  40d80a:	lods   al,BYTE PTR ds:[esi]
  40d80b:	nop
  40d80c:	(bad)  
  40d80e:	inc    esp
  40d80f:	xor    eax,0x21eccbdc
  40d814:	rcr    DWORD PTR [ebx-0x24],1
  40d817:	xor    al,BYTE PTR [ebx+0x4b20c6e8]
  40d81d:	sbb    bh,BYTE PTR [eax]
  40d81f:	xadd   DWORD PTR [ebx+0x611abf80],eax
  40d826:	test   BYTE PTR [ebp+0x11],ch
  40d829:	and    bl,BYTE PTR [ecx]
  40d82b:	inc    ebp
  40d82c:	jge    0x40d854
  40d82e:	dec    esp
  40d82f:	mov    esp,0xcd7dd787
  40d834:	in     al,0x5
  40d836:	adc    DWORD PTR ds:0x1b8d66e,esi
  40d83c:	les    eax,FWORD PTR [eax-0x688d027d]
  40d842:	push   ebp
  40d843:	int3   
  40d844:	popf   
  40d845:	std    
  40d846:	in     al,dx
  40d847:	fistp  DWORD PTR [ecx+edi*8-0x2]
  40d84b:	xchg   esp,eax
  40d84c:	or     al,0x3b
  40d84e:	bound  ebx,QWORD PTR [ebx+0x3d]
  40d851:	adc    al,0x70
  40d853:	lea    ebx,[ebp-0x5aa4c795]
  40d859:	(bad)  
  40d85a:	sti    
  40d85b:	popa   
  40d85c:	rol    BYTE PTR [eax+0x10],0x5e
  40d860:	sbb    eax,0xc5ad48aa
  40d865:	or     DWORD PTR [ebp-0x4cfb24de],edx
  40d86b:	sbb    BYTE PTR ds:0x5120d39c,ah
  40d871:	sub    cl,BYTE PTR [esi+0x25368614]
  40d877:	(bad)  
  40d878:	(bad)  
  40d87a:	dec    eax
  40d87b:	cwde   
  40d87c:	and    DWORD PTR [esi+0x5e],edx
  40d87f:	pop    ebx
  40d880:	dec    ecx
  40d881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d882:	mov    ds:0x44d52110,al
  40d887:	mov    dl,0x9d
  40d889:	and    dl,BYTE PTR [ebp-0x5f8f5217]
  40d88f:	sub    bh,ch
  40d891:	js     0x40d8ab
  40d893:	or     BYTE PTR [edx+0x5b],dh
  40d896:	(bad)  
  40d897:	jecxz  0x40d8d0
  40d899:	mov    bl,0xed
  40d89b:	pusha  
  40d89c:	sub    al,0x80
  40d89e:	addr16 dec edx
  40d8a0:	jne    0x40d8d5
  40d8a2:	add    DWORD PTR [esi],0xd706c95e
  40d8a8:	push   ebx
  40d8a9:	mov    dh,0xae
  40d8ab:	jp     0x40d850
  40d8ad:	mov    WORD PTR [esi],gs
  40d8af:	jb     0x40d8ca
  40d8b1:	jp     0x40d8fe
  40d8b3:	mov    ch,0x8
  40d8b5:	or     ebp,esi
  40d8b7:	in     eax,dx
  40d8b8:	leave  
  40d8b9:	xor    ebx,ebp
  40d8bb:	mov    al,0xc7
  40d8bd:	(bad)  
  40d8be:	cmp    DWORD PTR [edi],0x2e03f66b
  40d8c4:	(bad)  
  40d8c5:	(bad)  
  40d8c6:	sbb    dh,BYTE PTR [edx]
  40d8c8:	aam    0x53
  40d8ca:	out    0x9b,al
  40d8cc:	out    dx,eax
  40d8cd:	fisubr WORD PTR [eax+0x3f]
  40d8d0:	cmc    
  40d8d1:	mov    ecx,0x384b678f
  40d8d6:	addr16 dec ebx
  40d8d8:	loope  0x40d8e0
  40d8da:	imul   esp,DWORD PTR ds:0x5cb69aef,0x8dd342b0
  40d8e4:	test   eax,0xf3df4a1a
  40d8e9:	and    WORD PTR [edi-0x1a1e9e36],0x7b21
  40d8f2:	inc    ebp
  40d8f3:	aam    0xb8
  40d8f5:	sub    ch,BYTE PTR [eax]
  40d8f7:	dec    esi
  40d8f8:	rcr    BYTE PTR [ebx],0x62
  40d8fb:	out    0x73,eax
  40d8fd:	pop    esi
  40d8fe:	int3   
  40d8ff:	stc    
  40d900:	add    eax,0xae0e8adf
  40d905:	jmp    0x67ffdca0
  40d90a:	sar    BYTE PTR [ebp-0x5a],0xc3
  40d90e:	leave  
  40d90f:	mov    ch,0xd4
  40d911:	adc    al,0xd1
  40d913:	xor    eax,0xc939775
  40d918:	pop    ss
  40d919:	mov    esp,0x20243304
  40d91e:	std    
  40d91f:	test   al,0xdf
  40d921:	repz inc ecx
  40d923:	mov    ch,0x40
  40d925:	or     DWORD PTR [ebx-0x41],ecx
  40d928:	cmc    
  40d929:	adc    DWORD PTR [eax],edx
  40d92b:	cmp    ah,bh
  40d92d:	mov    al,ds:0x16d6947d
  40d932:	jl     0x40d8c7
  40d934:	add    ebx,edi
  40d936:	(bad)  
  40d937:	sbb    ch,BYTE PTR [esi]
  40d939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d93a:	pop    edx
  40d93b:	repnz data16 mov bl,0xcb
  40d93f:	push   es
  40d940:	cwde   
  40d941:	inc    ebx
  40d942:	push   ecx
  40d943:	out    dx,eax
  40d944:	daa    
  40d945:	in     eax,dx
  40d946:	jnp    0x40d8e5
  40d948:	aad    0x2a
  40d94a:	pop    ecx
  40d94b:	dec    esi
  40d94c:	sar    edi,0xfc
  40d94f:	sub    al,0xf9
  40d951:	mov    al,0xfe
  40d953:	adc    bh,BYTE PTR [ecx]
  40d955:	inc    eax
  40d956:	dec    edx
  40d957:	(bad)  
  40d958:	mov    esp,0x86b42bf9
  40d95d:	test   eax,0xd9e53f32
  40d962:	inc    ebx
  40d963:	jle    0x40d9b7
  40d965:	fdivrp st(6),st
  40d967:	jo     0x40d904
  40d969:	cdq    
  40d96a:	push   0x3e741438
  40d96f:	inc    ebp
  40d970:	jno    0x40d994
  40d972:	scas   eax,DWORD PTR es:[edi]
  40d973:	mov    cl,ah
  40d975:	mov    dh,0xd4
  40d977:	jmp    0x40d9ba
  40d979:	sub    cl,BYTE PTR [edi+eiz*8-0x68b2ca8e]
  40d980:	or     al,0xe4
  40d982:	add    BYTE PTR [ecx],cl
  40d984:	dec    ebx
  40d985:	mov    edi,0x1324d4ac
  40d98a:	enter  0x1aad,0x5c
  40d98e:	push   0x81eb7393
  40d993:	mov    ecx,0x7b619ca4
  40d998:	fld    DWORD PTR [ebx-0x54]
  40d99b:	jecxz  0x40d964
  40d99d:	mov    edx,0xc08ebc55
  40d9a2:	pop    ebx
  40d9a3:	dec    edx
  40d9a4:	jb     0x40d9f4
  40d9a6:	out    dx,eax
  40d9a7:	jmp    0x6865:0x17a43da8
  40d9ae:	loope  0x40d949
  40d9b0:	and    al,0xea
  40d9b2:	sbb    DWORD PTR [esi+0xfd70553],0x1833ba6f
  40d9bc:	ins    DWORD PTR es:[edi],dx
  40d9bd:	aaa    
  40d9be:	ins    DWORD PTR es:[edi],dx
  40d9bf:	xor    esp,DWORD PTR ds:0xc7e5e089
  40d9c5:	pop    esi
  40d9c6:	(bad)
  40d9ca:	add    al,0xf0
  40d9cc:	jns    0x40d9ec
  40d9ce:	pop    ss
  40d9cf:	popa   
  40d9d0:	pop    edx
  40d9d1:	outs   dx,BYTE PTR ds:[esi]
  40d9d2:	sbb    BYTE PTR [esi],bl
  40d9d4:	fcmovbe st,st(2)
  40d9d6:	sbb    edi,DWORD PTR [eax]
  40d9d8:	dec    ecx
  40d9d9:	repz pop ebp
  40d9db:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d9dd:	adc    edx,ecx
  40d9df:	cmp    al,0xbe
  40d9e1:	cmp    eax,0x36b1f5e3
  40d9e6:	xchg   edx,eax
  40d9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9e8:	lahf   
  40d9e9:	into   
  40d9ea:	mov    ecx,0x755a1ee
  40d9ef:	int3   
  40d9f0:	ins    BYTE PTR es:[edi],dx
  40d9f1:	pop    ebp
  40d9f2:	leave  
  40d9f3:	dec    edi
  40d9f4:	lock ror BYTE PTR [eax],cl
  40d9f7:	test   eax,0x3e935641
  40d9fc:	or     al,0x77
  40d9fe:	sub    ecx,DWORD PTR [edi+0x59]
  40da01:	dec    eax
  40da02:	ja     0x40d9e4
  40da04:	mov    dh,0xd9
  40da06:	daa    
  40da07:	jmp    0x15870c6e
  40da0c:	inc    ecx
  40da0d:	out    dx,eax
  40da0e:	xchg   edx,eax
  40da0f:	mov    esp,0x64c13371
  40da14:	push   es
  40da15:	and    cl,BYTE PTR [ebx]
  40da17:	push   ebp
  40da18:	call   0xd7bfdabb
  40da1d:	imul   edi,DWORD PTR cs:[edi-0x356672e9],0x7f
  40da25:	aas    
  40da26:	dec    ebp
  40da27:	or     ebx,ecx
  40da29:	ins    DWORD PTR es:[edi],dx
  40da2a:	push   edx
  40da2b:	and    eax,0x832a809d
  40da30:	xchg   edi,eax
  40da31:	test   ch,dh
  40da33:	mov    eax,ds:0x6903dc9
  40da38:	mov    eax,0xad3710c8
  40da3d:	and    bl,0x33
  40da40:	mov    ah,dl
  40da42:	and    DWORD PTR [esi+0x17857358],edx
  40da48:	push   ebp
  40da49:	hlt    
  40da4a:	mov    edi,0x6a6ce800
  40da4f:	dec    edi
  40da50:	daa    
  40da51:	sbb    DWORD PTR [edx-0x5c],edi
  40da54:	(bad)  
  40da56:	ins    DWORD PTR es:[edi],dx
  40da57:	and    BYTE PTR [edi-0x3],ch
  40da5a:	pop    esp
  40da5b:	mov    ebx,0x3304520d
  40da60:	loope  0x40da7a
  40da62:	inc    ebp
  40da63:	xor    BYTE PTR [esi-0x57],dh
  40da66:	or     edi,DWORD PTR [esi-0x7d]
  40da69:	leave  
  40da6a:	xor    BYTE PTR [edx],ch
  40da6c:	adc    DWORD PTR [edx+ecx*4+0x4fa68407],ebx
  40da73:	lds    ecx,FWORD PTR [ecx+0x72cb4f0c]
  40da79:	stc    
  40da7a:	xchg   ebp,eax
  40da7b:	sub    dh,BYTE PTR [ecx+edx*4+0x33]
  40da7f:	xchg   ecx,eax
  40da80:	cmp    ebp,DWORD PTR [edx+ebp*1]
  40da83:	adc    BYTE PTR [eax+ebx*8],ch
  40da86:	popa   
  40da87:	or     eax,esp
  40da89:	lods   eax,DWORD PTR ds:[esi]
  40da8a:	and    al,0x90
  40da8c:	ins    DWORD PTR es:[edi],dx
  40da8d:	mov    edi,0x78ab8d49
  40da92:	mov    dl,BYTE PTR [eax]
  40da94:	mov    esi,0xc6d99f26
  40da99:	sbb    DWORD PTR [edx+0x3d],eax
  40da9c:	inc    ecx
  40da9d:	mov    cl,0x75
  40da9f:	or     BYTE PTR [esi-0x16],bl
  40daa2:	in     eax,0x79
  40daa4:	and    edi,ebx
  40daa6:	sahf   
  40daa7:	fs call 0xc0d429c1
  40daad:	bound  esi,QWORD PTR [edx+esi*8-0x702224b8]
  40dab4:	clc    
  40dab5:	clc    
  40dab6:	jmp    0x40dadb
  40dab8:	scas   al,BYTE PTR es:[edi]
  40dab9:	push   eax
  40daba:	adc    dh,BYTE PTR [edx]
  40dabc:	push   cs
  40dabd:	mov    ds:0x3e99ed9,eax
  40dac2:	call   0xd7a8e28b
  40dac7:	pop    ebp
  40dac8:	jecxz  0x40dac6
  40daca:	lods   eax,DWORD PTR ds:[esi]
  40dacb:	jno    0x40daa2
  40dacd:	out    0x5c,eax
  40dacf:	rcl    BYTE PTR [eax],cl
  40dad1:	adc    al,0x25
  40dad3:	sub    esi,eax
  40dad5:	jle    0x40db08
  40dad7:	sub    DWORD PTR [edx+0x684a4eab],edx
  40dadd:	jmp    0x938d:0xd98b464e
  40dae4:	arpl   bx,di
  40dae6:	std    
  40dae7:	test   DWORD PTR [ebx-0x7f00f6b8],ebx
  40daed:	add    DWORD PTR [ebp-0x5],esi
  40daf0:	mov    ch,0x9a
  40daf2:	(bad)  
  40daf3:	in     eax,dx
  40daf4:	imul   ecx,esp,0x708674f1
  40dafa:	push   edx
  40dafb:	xlat   BYTE PTR ds:[ebx]
  40dafc:	inc    ebx
  40dafd:	inc    eax
  40dafe:	jl     0x40db30
  40db00:	sbb    cl,BYTE PTR [edi]
  40db02:	test   al,0xf1
  40db04:	mov    edx,0x2659a369
  40db09:	or     eax,0x29cca08d
  40db0e:	sbb    ebx,DWORD PTR [ebx+0x79]
  40db11:	call   0x812b:0x920eddb0
  40db18:	lea    eax,[esi-0x4b0988e9]
  40db1e:	repnz enter 0xe1b9,0xee
  40db23:	int3   
  40db24:	add    dh,ah
  40db26:	cli    
  40db27:	jb     0x40db1b
  40db29:	jne    0x40db02
  40db2b:	xchg   esi,esp
  40db2d:	in     eax,dx
  40db2e:	in     al,dx
  40db2f:	mov    ebx,0x64f89f0a
  40db34:	bnd jge 0x40db25
  40db37:	sti    
  40db38:	sub    al,0x5d
  40db3a:	sub    eax,0x9b11df5c
  40db3f:	xor    eax,edx
  40db41:	mov    esp,0xa5b29db2
  40db46:	shl    BYTE PTR [esi+0x7759737a],cl
  40db4c:	jbe    0x40db08
  40db4e:	test   al,0x9c
  40db50:	ror    DWORD PTR [edx],cl
  40db52:	imul   ecx,ebx,0xffffffd5
  40db55:	sub    DWORD PTR [edx+0x66fc05ba],edi
  40db5b:	lods   eax,DWORD PTR ds:[esi]
  40db5c:	in     al,0xb2
  40db5e:	inc    esp
  40db5f:	mov    bh,BYTE PTR [esi+ebx*1]
  40db62:	sub    BYTE PTR [edi],cl
  40db64:	leavew 
  40db66:	adc    edi,esp
  40db68:	and    dl,BYTE PTR [esi-0x765b3c1]
  40db6e:	cli    
  40db6f:	retf   
  40db70:	mov    bh,0x88
  40db72:	xor    bl,BYTE PTR [ebx-0x612007d8]
  40db78:	ret    0x3f5c
  40db7b:	inc    ecx
  40db7c:	cmp    DWORD PTR [ebx],edi
  40db7e:	cmp    BYTE PTR [ebx+edi*4],ah
  40db81:	shr    BYTE PTR es:[eax],cl
  40db84:	mov    edi,0x4ce2e0ce
  40db89:	jo     0x40db9e
  40db8b:	test   DWORD PTR [ebx],0xf054683b
  40db91:	xor    DWORD PTR [ebx],ecx
  40db93:	adc    al,0xe1
  40db95:	lahf   
  40db96:	or     DWORD PTR [ebp+0x20],ebp
  40db99:	outs   dx,BYTE PTR ds:[esi]
  40db9a:	mov    cl,0x47
  40db9c:	jg     0x40dbf6
  40db9e:	(bad)  
  40dba0:	add    edx,DWORD PTR [edi]
  40dba2:	aas    
  40dba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba4:	aas    
  40dba5:	pop    ecx
  40dba6:	inc    ebx
  40dba7:	inc    ebx
  40dba8:	mov    ch,0xbb
  40dbaa:	sub    esi,DWORD PTR [esi]
  40dbac:	sbb    eax,DWORD PTR [eax-0x4fd0b5cb]
  40dbb2:	aaa    
  40dbb3:	std    
  40dbb4:	cmp    DWORD PTR [edx-0x59],esp
  40dbb7:	shl    DWORD PTR [ebx-0x58cb83b4],0x92
  40dbbe:	mov    bh,0x5e
  40dbc0:	dec    ecx
  40dbc1:	push   0x659750e4
  40dbc6:	cmp    DWORD PTR [ebx+0x31],0xffffff96
  40dbca:	push   eax
  40dbcb:	(bad)  
  40dbcc:	lahf   
  40dbcd:	out    dx,al
  40dbce:	and    eax,0xb9dcf80b
  40dbd3:	dec    ebp
  40dbd4:	mov    eax,0xcf442828
  40dbd9:	mov    esp,0x3ee63f01
  40dbde:	les    eax,FWORD PTR [eax+ebx*1-0xe]
  40dbe2:	fimul  DWORD PTR ds:0xf890c996
  40dbe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe9:	xor    ah,BYTE PTR ds:0xcbb4e93f
  40dbef:	fisttp WORD PTR [eax+ebp*1-0x20]
  40dbf3:	push   ebx
  40dbf4:	int3   
  40dbf5:	xchg   esp,eax
  40dbf6:	fwait
  40dbf7:	call   0xa64471fa
  40dbfc:	sbb    BYTE PTR [ecx],ah
  40dbfe:	fadd   st,st(2)
  40dc00:	neg    dl
  40dc02:	fcmovne st,st(1)
  40dc04:	push   edx
  40dc05:	push   ebp
  40dc06:	iret   
  40dc07:	push   0x7d33dda1
  40dc0c:	(bad)  
  40dc0d:	mov    ebp,0xec922fa7
  40dc12:	fcom   QWORD PTR [ebx+0x142df4a]
  40dc18:	add    al,0xcb
  40dc1a:	mov    ecx,0x85d184d0
  40dc1f:	cmovns ebp,ebp
  40dc22:	outs   dx,DWORD PTR ds:[esi]
  40dc23:	(bad)  
  40dc24:	adc    ecx,DWORD PTR [ecx+0x4b]
  40dc27:	cli    
  40dc28:	push   0xffffffca
  40dc2a:	call   DWORD PTR [esi]
  40dc2c:	mov    ecx,eax
  40dc2e:	imul   edi,DWORD PTR ds:[eax-0x79],0x2d
  40dc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc34:	xor    al,0x3e
  40dc36:	ret    
  40dc37:	enter  0x29b8,0xde
  40dc3b:	lods   eax,DWORD PTR ds:[esi]
  40dc3c:	or     al,0x5b
  40dc3e:	mov    al,0x7d
  40dc40:	xor    DWORD PTR [edx+0x5ddbcddd],ebx
  40dc46:	xchg   DWORD PTR [ecx+0x66],eax
  40dc49:	retf   0x219
  40dc4c:	pop    eax
  40dc4d:	push   ebp
  40dc4e:	clc    
  40dc4f:	fbld   TBYTE PTR [ecx-0x2718f337]
  40dc55:	xchg   ebx,eax
  40dc56:	aaa    
  40dc57:	icebp  
  40dc58:	or     DWORD PTR [edi+ebp*1+0x4c],esp
  40dc5c:	icebp  
  40dc5d:	cs pop ebp
  40dc5f:	mov    eax,ds:0x755c09dc
  40dc64:	pop    ecx
  40dc65:	ror    bh,cl
  40dc67:	loope  0x40dc27
  40dc69:	fcmovnb st,st(0)
  40dc6b:	push   0xfffffff7
  40dc6d:	ins    BYTE PTR es:[edi],dx
  40dc6e:	out    0x98,al
  40dc70:	popf   
  40dc71:	xor    BYTE PTR [edx+0x47],ch
  40dc74:	mov    eax,0x5818afa2
  40dc79:	push   ss
  40dc7a:	inc    eax
  40dc7b:	add    edx,esi
  40dc7d:	inc    edx
  40dc7e:	pop    esp
  40dc7f:	pop    ds
  40dc80:	push   ecx
  40dc81:	lods   eax,DWORD PTR ds:[esi]
  40dc82:	(bad)  
  40dc83:	daa    
  40dc84:	shr    DWORD PTR [ebp-0x33],0xe6
  40dc88:	sbb    cl,BYTE PTR [edx-0x157bf4ce]
  40dc8e:	lahf   
  40dc8f:	add    esi,DWORD PTR [edi]
  40dc91:	dec    edx
  40dc92:	lods   eax,DWORD PTR ds:[esi]
  40dc93:	leave  
  40dc94:	mov    eax,ds:0x49680559
  40dc99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc9a:	and    al,BYTE PTR ds:0x353a95d9
  40dca0:	inc    edi
  40dca1:	out    dx,eax
  40dca2:	and    al,0xd
  40dca4:	rcr    BYTE PTR [ebp+ebp*4+0x49],1
  40dca8:	add    al,0x8f
  40dcaa:	repnz jmp 0xcca7:0xc4ed1dd4
  40dcb2:	jmp    0x40dd13
  40dcb4:	add    bh,BYTE PTR [edi]
  40dcb6:	js     0x40dc3b
  40dcb8:	enter  0xca9c,0x5c
  40dcbc:	shl    ch,0x8d
  40dcbf:	jns    0x40dce6
  40dcc1:	mov    al,0xd6
  40dcc3:	xchg   esp,eax
  40dcc4:	jae    0x40dc92
  40dcc6:	push   cs
  40dcc7:	ror    BYTE PTR [esi-0xe],1
  40dcca:	aam    0x34
  40dccc:	inc    edx
  40dccd:	push   ss
  40dcce:	sar    eax,1
  40dcd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd1:	test   DWORD PTR [ebp-0x4c],eax
  40dcd4:	xchg   edi,eax
  40dcd5:	cmp    ch,BYTE PTR [esi]
  40dcd7:	mov    edx,0x2ddbc6b6
  40dcdc:	repnz adc DWORD PTR ds:0xaac1bb2d,ecx
  40dce3:	push   edx
  40dce4:	jno    0x40dc90
  40dce6:	mov    esp,0xbb4ffe59
  40dceb:	jnp    0x40dd3b
  40dced:	lods   al,BYTE PTR ds:[esi]
  40dcee:	out    0xc8,al
  40dcf0:	or     ebx,ebp
  40dcf2:	pop    ebp
  40dcf3:	fwait
  40dcf4:	call   0x15c4de5f
  40dcf9:	jg     0x40dd05
  40dcfb:	out    0x86,al
  40dcfd:	test   edx,ebp
  40dcff:	cmp    bh,BYTE PTR [edi+0x62]
  40dd02:	cmp    ebp,edi
  40dd04:	aam    0xaa
  40dd06:	mov    ebx,DWORD PTR [edi]
  40dd08:	mov    bh,0xf5
  40dd0a:	push   ecx
  40dd0b:	inc    esp
  40dd0c:	adc    BYTE PTR [edi-0x5d],al
  40dd0f:	lods   al,BYTE PTR ds:[esi]
  40dd10:	mov    esi,0x3b11b525
  40dd15:	outs   dx,BYTE PTR ds:[esi]
  40dd16:	(bad)  
  40dd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd18:	stos   DWORD PTR es:[edi],eax
  40dd19:	loopne 0x40dd78
  40dd1b:	aam    0x31
  40dd1d:	retf   0x5672
  40dd20:	sti    
  40dd21:	mov    DWORD PTR ds:0xee325d4c,ecx
  40dd27:	mov    esi,0x312a658
  40dd2c:	cmp    eax,0x47c826a6
  40dd31:	or     al,0xb6
  40dd33:	xchg   edi,eax
  40dd34:	mov    esp,0x6cbec6a1
  40dd39:	xor    BYTE PTR [ecx+0x62],ch
  40dd3c:	mov    eax,ds:0x9a1898d6
  40dd41:	pop    es
  40dd42:	repnz xor eax,DWORD PTR [ebp-0x4e]
  40dd46:	das    
  40dd47:	inc    edx
  40dd48:	cld    
  40dd49:	and    DWORD PTR [ebp+0x7d1bd5b9],0xef350033
  40dd53:	popa   
  40dd54:	pop    eax
  40dd55:	xor    BYTE PTR [ebx+0x47],ch
  40dd58:	popa   
  40dd59:	cmp    dl,BYTE PTR [esi]
  40dd5b:	enter  0x4c24,0x48
  40dd5f:	add    al,0x59
  40dd61:	out    0xa4,eax
  40dd63:	les    edx,FWORD PTR [edx]
  40dd65:	test   esi,edi
  40dd67:	repnz mov esi,0x208e56d3
  40dd6d:	mov    ds:0xfeb6fb2c,eax
  40dd72:	mov    bh,0x84
  40dd74:	sub    DWORD PTR [ebp+0x3f8fe32b],edi
  40dd7a:	(bad)
  40dd7e:	loope  0x40dd7e
  40dd80:	inc    eax
  40dd81:	outs   dx,BYTE PTR ds:[esi]
  40dd82:	ins    DWORD PTR es:[edi],dx
  40dd83:	mov    cl,0xfe
  40dd85:	jne    0x40dd17
  40dd87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd88:	cwde   
  40dd89:	mov    cl,0xbc
  40dd8b:	dec    eax
  40dd8c:	loopne 0x40dd4f
  40dd8e:	xchg   BYTE PTR [esi],ch
  40dd90:	xchg   edx,eax
  40dd91:	retf   0x96f1
  40dd94:	repnz pop ecx
  40dd96:	mov    esi,0x33cc98d2
  40dd9b:	outs   dx,DWORD PTR ds:[esi]
  40dd9c:	push   eax
  40dd9d:	enter  0xbdf1,0xa6
  40dda1:	push   edx
  40dda2:	pop    ecx
  40dda3:	cmp    ch,BYTE PTR [edx-0x3a40270a]
  40dda9:	push   es
  40ddaa:	stos   DWORD PTR es:[edi],eax
  40ddab:	adc    eax,0xdbc3b8af
  40ddb0:	(bad)  
  40ddb1:	popf   
  40ddb2:	pop    edi
  40ddb3:	add    BYTE PTR ds:0xb081e790,bl
  40ddb9:	pop    es
  40ddba:	lods   eax,DWORD PTR ds:[esi]
  40ddbb:	mov    ch,0xa8
  40ddbd:	js     0x40dd7c
  40ddbf:	inc    eax
  40ddc0:	dec    esp
  40ddc1:	adc    DWORD PTR [eax+esi*8],esi
  40ddc4:	xchg   esp,eax
  40ddc5:	fldcw  WORD PTR [eax-0x29af0067]
  40ddcb:	ja     0x40ddd9
  40ddcd:	fdivrp st(1),st
  40ddcf:	sbb    edi,ecx
  40ddd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd2:	lds    ebp,FWORD PTR [ecx]
  40ddd4:	inc    esp
  40ddd5:	xlat   BYTE PTR ds:[ebx]
  40ddd6:	cmp    eax,edi
  40ddd8:	xor    BYTE PTR [esi],ah
  40ddda:	jmp    0x40de11
  40dddc:	and    eax,0xb5c02ac8
  40dde1:	sar    DWORD PTR [esp],0x1a
  40dde5:	add    DWORD PTR [ebp-0x65],ebp
  40dde8:	rcr    BYTE PTR [ebp+0x7e98fd36],cl
  40ddee:	and    edx,DWORD PTR [edi+0x51]
  40ddf1:	ins    BYTE PTR es:[edi],dx
  40ddf2:	in     eax,0xc7
  40ddf4:	push   ds
  40ddf5:	call   0xdb26060a
  40ddfa:	js     0x40dd9e
  40ddfc:	push   0x40ed8aa8
  40de01:	jmp    0xcd99e4ef
  40de06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de07:	sbb    BYTE PTR fs:[esi],bl
  40de0a:	cmc    
  40de0b:	xor    eax,0x934519d8
  40de10:	lods   al,BYTE PTR ds:[esi]
  40de11:	aaa    
  40de12:	mov    DWORD PTR [ebp-0x2c74bb0c],eax
  40de18:	xor    al,0x32
  40de1a:	mov    bh,0xc9
  40de1c:	test   BYTE PTR [esi],ah
  40de1e:	outs   dx,DWORD PTR ds:[esi]
  40de1f:	adc    al,0x43
  40de21:	add    dh,0x76
  40de24:	pop    ebx
  40de25:	pop    ecx
  40de26:	rcl    DWORD PTR [esi+0x26d95041],cl
  40de2c:	inc    esi
  40de2d:	out    dx,eax
  40de2e:	in     al,dx
  40de2f:	jle    0x40de7f
  40de31:	or     eax,0xfb6eb2d5
  40de36:	inc    eax
  40de37:	rcr    al,0xd2
  40de3a:	rcr    DWORD PTR [edx+0x39],cl
  40de3d:	nop
  40de3e:	inc    ecx
  40de3f:	aad    0x38
  40de41:	sub    DWORD PTR [ebp-0x16],0x74d19a5b
  40de48:	dec    ebp
  40de49:	pop    edx
  40de4a:	std    
  40de4b:	loopne 0x40de6d
  40de4d:	dec    esi
  40de4e:	dec    esi
  40de4f:	cmp    dl,BYTE PTR [edi+0x7894f513]
  40de55:	ss pop eax
  40de57:	stos   BYTE PTR es:[edi],al
  40de58:	push   cs
  40de59:	mov    DWORD PTR [edx+0x29528cd],esi
  40de5f:	xchg   esp,eax
  40de60:	jnp    0x40de0e
  40de62:	and    BYTE PTR [edi+0x2d],bl
  40de65:	imul   BYTE PTR ds:0x5e917fc6
  40de6b:	cdq    
  40de6c:	xchg   ebp,eax
  40de6d:	adc    bh,BYTE PTR [esi]
  40de6f:	mov    al,ds:0xc2f765c8
  40de74:	data16 jl 0x40deeb
  40de77:	(bad)  [edx-0x4cebaec7]
  40de7d:	leave  
  40de7e:	addr16 jmp 0x9e8c:0x246f22e4
  40de86:	js     0x40de0d
  40de88:	jl     0x40de57
  40de8a:	and    BYTE PTR [esi+0xa],bl
  40de8d:	inc    eax
  40de8e:	add    al,0xa8
  40de90:	loopne 0x40de93
  40de92:	addr16 jmp 0x5a0557f5
  40de98:	retf   
  40de99:	sub    edi,DWORD PTR [eax]
  40de9b:	leave  
  40de9c:	ds and bl,ah
  40de9f:	and    eax,0xfc205b7e
  40dea4:	dec    esp
  40dea5:	add    BYTE PTR [ebx-0x7e84096d],dh
  40deab:	mov    eax,ds:0xe0102cce
  40deb0:	idiv   DWORD PTR [ebx-0x601d1cff]
  40deb6:	jge    0x40de7c
  40deb8:	fbld   TBYTE PTR [ecx+0x581cc1f4]
  40debe:	cwde   
  40debf:	mov    dl,0xc1
  40dec1:	push   eax
  40dec2:	jo     0x40de92
  40dec4:	mov    ecx,0xa9800eea
  40dec9:	jns    0x40df22
  40decb:	pop    edi
  40decc:	outs   dx,DWORD PTR ds:[esi]
  40decd:	lods   al,BYTE PTR ds:[esi]
  40dece:	xchg   edx,eax
  40decf:	loop   0x40de88
  40ded1:	ins    DWORD PTR es:[edi],dx
  40ded2:	sti    
  40ded3:	cmp    eax,0xb24cee59
  40ded8:	stos   BYTE PTR es:[edi],al
  40ded9:	jmp    0x40df1a
  40dedb:	pop    esi
  40dedc:	out    0x1f,al
  40dede:	je     0x40dedf
  40dee0:	lahf   
  40dee1:	in     al,0x82
  40dee3:	pusha  
  40dee4:	retf   0x3ce7
  40dee7:	test   al,0xe2
  40dee9:	pop    es
  40deea:	sahf   
  40deeb:	fild   WORD PTR [edi]
  40deed:	inc    esp
  40deee:	popa   
  40deef:	dec    esp
  40def0:	jae    0x40df12
  40def2:	ror    DWORD PTR [ecx-0x67578f95],0x59
  40def9:	leave  
  40defa:	das    
  40defb:	jge    0xee854da3
  40df01:	les    ebp,FWORD PTR [ebx-0x2bd59ced]
  40df07:	(bad)  
  40df09:	arpl   WORD PTR ds:0x431405c2,bp
  40df0f:	mov    ebp,0x43212d4b
  40df14:	pop    ebp
  40df15:	lods   al,BYTE PTR ds:[esi]
  40df16:	add    DWORD PTR [eax+0x131d1081],0xffffffef
  40df1d:	mov    ds:0x5db141a1,eax
  40df22:	push   ss
  40df23:	outs   dx,BYTE PTR ds:[esi]
  40df24:	pop    esi
  40df25:	push   0x9d3640ae
  40df2a:	sub    al,0x8f
  40df2c:	ret    
  40df2d:	sub    DWORD PTR [ecx+edx*8+0x4450f6e2],esp
  40df34:	mov    ah,0x90
  40df36:	adc    al,0xac
  40df38:	adc    dl,BYTE PTR [edi]
  40df3a:	xchg   edi,eax
  40df3b:	xor    edx,edx
  40df3d:	jo     0x40dfb6
  40df3f:	mov    dl,0xdb
  40df41:	aad    0xe4
  40df43:	cdq    
  40df44:	dec    ecx
  40df45:	popf   
  40df46:	mov    esi,esi
  40df48:	jnp    0x40df5f
  40df4a:	setle  BYTE PTR [ebp-0x16]
  40df4e:	add    DWORD PTR [ebx],ecx
  40df50:	dec    esi
  40df51:	lahf   
  40df52:	lahf   
  40df53:	aam    0xb1
  40df55:	mov    WORD PTR [ebp+0x2],gs
  40df58:	lods   eax,DWORD PTR ds:[esi]
  40df59:	jne    0x40df06
  40df5b:	adc    ch,BYTE PTR [eax+0x33c08f33]
  40df61:	mov    bh,0x3e
  40df63:	(bad)  
  40df64:	into   
  40df65:	push   ss
  40df66:	in     al,0xb3
  40df68:	add    bl,BYTE PTR ds:0x95ac8c17
  40df6e:	lods   al,BYTE PTR ds:[esi]
  40df6f:	or     eax,0xc16cfce
  40df74:	fwait
  40df75:	sbb    ebp,DWORD PTR [eax+eiz*2]
  40df78:	fld    QWORD PTR [ebx-0x4c]
  40df7b:	pop    edx
  40df7c:	jno    0x40df51
  40df7e:	cmp    eax,0xd3f49c44
  40df83:	test   BYTE PTR [ebx],bl
  40df85:	pop    esp
  40df86:	div    BYTE PTR [edx-0x6e]
  40df89:	out    dx,al
  40df8a:	pop    eax
  40df8b:	jae    0x40df34
  40df8d:	sub    al,0x53
  40df8f:	imul   DWORD PTR [esi+0x4d8fa8d5]
  40df95:	outs   dx,DWORD PTR ds:[esi]
  40df96:	xchg   esp,eax
  40df97:	cmp    eax,0x99460805
  40df9c:	sar    DWORD PTR [esi-0xeca1608],cl
  40dfa2:	aas    
  40dfa3:	jecxz  0x40dfd5
  40dfa5:	mov    ds:0xbc492a06,eax
  40dfaa:	and    DWORD PTR [eax+esi*8],esp
  40dfad:	cmc    
  40dfae:	shl    BYTE PTR [eax-0x6f112baf],0xc2
  40dfb5:	or     BYTE PTR [eax+0x21],ch
  40dfb8:	jmp    DWORD PTR [ebx]
  40dfba:	mov    DWORD PTR [ebp+ecx*4-0x1d7a56f5],ecx
  40dfc1:	mov    esi,0xabd10b4f
  40dfc6:	jae    0x40e009
  40dfc8:	test   esi,ebp
  40dfca:	sub    ch,BYTE PTR [edx+0x2a6cb2fe]
  40dfd0:	sahf   
  40dfd1:	in     eax,0xa8
  40dfd3:	js     0x40dfc6
  40dfd5:	sbb    edx,DWORD PTR [esi]
  40dfd7:	call   0xbbf70b9c
  40dfdc:	mov    ds:0x453c1897,al
  40dfe1:	cmp    eax,0xc34b89d9
  40dfe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfe7:	add    al,0x90
  40dfe9:	leave  
  40dfea:	ret    0xf145
  40dfed:	add    cl,bl
  40dfef:	push   0x3d
  40dff1:	std    
  40dff2:	loop   0x40e01e
  40dff4:	outs   dx,DWORD PTR ds:[esi]
  40dff5:	aam    0xf4
  40dff7:	stos   DWORD PTR es:[edi],eax
  40dff8:	scas   al,BYTE PTR es:[edi]
  40dff9:	fcomp  DWORD PTR [esi-0x3c]
  40dffc:	jnp    0x40dff6
  40dffe:	push   edx
  40dfff:	push   edi
  40e000:	and    al,0xe6
  40e002:	jne    0x40df9e
  40e004:	and    eax,0x941a9b0b
  40e009:	mov    fs,WORD PTR [edi+0x19]
  40e00c:	cs (bad) 
  40e00e:	or     DWORD PTR [eax],eax
  40e010:	repz dec esp
  40e012:	and    BYTE PTR [esi+ebp*8+0x7e],0xf2
  40e017:	ins    BYTE PTR es:[edi],dx
  40e018:	in     eax,0xe3
  40e01a:	jno    0x40e006
  40e01c:	pop    eax
  40e01d:	pop    esi
  40e01e:	call   0x295d0b48
  40e023:	add    al,0x60
  40e025:	mov    dh,BYTE PTR [edi+eiz*2-0x11]
  40e029:	push   cs
  40e02a:	lea    ecx,[edi]
  40e02c:	jmp    0x7cc483ef
  40e031:	out    dx,eax
  40e032:	xchg   esi,eax
  40e033:	(bad)
  40e036:	aaa    
  40e037:	mov    DWORD PTR [ebx],ecx
  40e039:	pop    edx
  40e03a:	call   0xe3ad:0x4c5cb5fd
  40e041:	dec    ebp
  40e042:	jp     0x40dffa
  40e044:	xchg   esp,eax
  40e045:	mov    al,ds:0xbcf63b7
  40e04a:	inc    esi
  40e04b:	inc    edi
  40e04c:	xor    edx,DWORD PTR [edx+0x42f45be4]
  40e052:	repz pop ss
  40e054:	add    DWORD PTR [ecx],edi
  40e056:	in     eax,dx
  40e057:	mov    esp,0x79322bd3
  40e05c:	(bad)  
  40e05d:	push   ds
  40e05e:	mov    esp,0xb65c541f
  40e063:	cmc    
  40e064:	mov    dl,BYTE PTR [ebx-0x35]
  40e067:	mov    esp,0xa3aeee6f
  40e06c:	mov    ?,ebx
  40e06e:	jo     0x40e032
  40e070:	mov    ah,BYTE PTR [ecx-0x71]
  40e073:	fs or  dh,ch
  40e076:	adc    esi,DWORD PTR [ebx+0x5]
  40e079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e07a:	mov    ds:0xc022b475,al
  40e07f:	addr16 loopne 0x40e0d8
  40e082:	xor    eax,0xdc94859e
  40e087:	(bad)  [ecx-0x12]
  40e08a:	mov    edi,0x8aca7752
  40e08f:	dec    ebx
  40e090:	dec    ebp
  40e091:	repnz mov ch,ch
  40e094:	sbb    BYTE PTR es:[ebx],dl
  40e097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e098:	fsubr  DWORD PTR [ebp-0x437e1aed]
  40e09e:	xlat   BYTE PTR ds:[ebx]
  40e09f:	and    eax,0x33f9bf3a
  40e0a4:	bound  eax,QWORD PTR [ebx+0x336c0e85]
  40e0aa:	sub    ah,BYTE PTR [ebx]
  40e0ac:	shl    BYTE PTR [ecx],cl
  40e0ae:	call   0xc489893e
  40e0b3:	inc    ebx
  40e0b4:	jg     0x40e0a2
  40e0b6:	jnp    0x40e106
  40e0b8:	pop    edx
  40e0b9:	jge    0x40e098
  40e0bb:	mov    DWORD PTR [ecx+esi*1+0x2d],esp
  40e0bf:	or     bh,BYTE PTR [ecx+0x14b10555]
  40e0c5:	cmp    ah,BYTE PTR [ebx+esi*4-0x5737c161]
  40e0cc:	cmp    DWORD PTR [ecx],eax
  40e0ce:	retf   0x29b6
  40e0d1:	adc    bh,cl
  40e0d3:	clc    
  40e0d4:	mov    BYTE PTR [esi+0x65302c9d],ah
  40e0da:	add    eax,0x1bbad18d
  40e0df:	fcom   QWORD PTR [ebp+0x1b884e72]
  40e0e5:	cmp    BYTE PTR fs:[ebx-0x5d4ac415],ah
  40e0ec:	(bad)  
  40e0ed:	retfw  
  40e0ef:	inc    esi
  40e0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0f1:	test   al,0xe0
  40e0f3:	cmp    dh,bh
  40e0f5:	sbb    dh,dl
  40e0f7:	cmp    eax,0xb4ca1845
  40e0fc:	jns    0x40e17d
  40e0fe:	sbb    bh,ch
  40e100:	or     al,0x51
  40e102:	mov    ds:0x5682410e,al
  40e107:	push   edx
  40e108:	push   es
  40e109:	je     0x40e10f
  40e10b:	jns    0x40e10f
  40e10d:	icebp  
  40e10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e10f:	push   ecx
  40e110:	push   ss
  40e111:	sbb    eax,0x8af6b5e2
  40e116:	xor    edx,DWORD PTR [esi]
  40e118:	mov    edi,0x1cd2be20
  40e11d:	mov    ah,BYTE PTR [eax-0x14]
  40e120:	mov    cl,0x15
  40e122:	inc    ebx
  40e123:	scas   al,BYTE PTR es:[edi]
  40e124:	jno    0x40e0f9
  40e126:	cdq    
  40e127:	sbb    al,0xc1
  40e129:	loop   0x40e101
  40e12b:	stos   DWORD PTR es:[edi],eax
  40e12c:	fidiv  WORD PTR [ebx+eiz*8-0x4]
  40e130:	fwait
  40e131:	xchg   esi,eax
  40e132:	(bad)  
  40e133:	pop    esp
  40e134:	ffreep st(1)
  40e136:	adc    al,0x10
  40e138:	pushf  
  40e139:	dec    edi
  40e13a:	dec    esp
  40e13b:	ficomp DWORD PTR [ebx-0x56]
  40e13e:	fldenv [ecx+0x62]
  40e141:	cli    
  40e142:	repz shl BYTE PTR [eax-0x2bee76ae],cl
  40e149:	mov    gs,WORD PTR ds:0x571ca9a9
  40e14f:	pop    ebx
  40e150:	sbb    eax,ebp
  40e152:	jo     0x40e15a
  40e154:	ret    
  40e155:	sbb    BYTE PTR [esi],0xe3
  40e158:	lods   al,BYTE PTR ds:[esi]
  40e159:	xchg   edi,eax
  40e15a:	(bad)  
  40e15b:	lods   eax,DWORD PTR ds:[esi]
  40e15c:	lea    edi,[edi+0x3d]
  40e15f:	aas    
  40e160:	push   cs
  40e161:	mov    esp,0x9bb93c41
  40e166:	es jmp 0x4703:0x2930d7f5
  40e16e:	xchg   ecx,eax
  40e16f:	mov    ebp,es
  40e171:	push   esi
  40e172:	adc    BYTE PTR [edx+0x53],al
  40e175:	imul   ecx,eax,0xffffffa9
  40e178:	fadd   DWORD PTR [bx]
  40e17b:	jo     0x40e16f
  40e17d:	or     al,0x26
  40e17f:	in     al,dx
  40e180:	and    BYTE PTR [edi],bh
  40e182:	gs jbe 0x40e1c9
  40e185:	cmp    cl,BYTE PTR [ecx-0x277b03d6]
  40e18b:	sti    
  40e18c:	loop   0x40e154
  40e18e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e18f:	dec    eax
  40e190:	cld    
  40e191:	aad    0x2f
  40e193:	and    al,0x96
  40e195:	repz xor al,0xa8
  40e198:	mov    edx,0xb4ee7be5
  40e19d:	ins    BYTE PTR es:[edi],dx
  40e19e:	cmp    ch,BYTE PTR [ebp-0xf]
  40e1a1:	and    dh,0x6c
  40e1a4:	adc    eax,0x7434cde9
  40e1a9:	call   0x3adf62aa
  40e1ae:	xor    al,BYTE PTR [edx-0x2d07b7f5]
  40e1b4:	mov    ch,0x4d
  40e1b6:	inc    edi
  40e1b7:	(bad)  
  40e1b8:	adc    esp,DWORD PTR [esi+0x713e5d59]
  40e1be:	inc    eax
  40e1bf:	(bad)  
  40e1c0:	ja     0x40e217
  40e1c2:	(bad)  
  40e1c3:	cmp    ebx,DWORD PTR [edx-0x11591d50]
  40e1c9:	cmp    bh,BYTE PTR [edx]
  40e1cb:	dec    ebx
  40e1cc:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40e1ce:	(bad)  [edx+0x55bdb0e5]
  40e1d4:	je     0x40e1b0
  40e1d6:	lahf   
  40e1d7:	or     al,0xb9
  40e1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1da:	fld    QWORD PTR [esi+edi*1+0xc]
  40e1de:	call   0x82ef8f7b
  40e1e3:	mov    esp,0xb7a1c839
  40e1e8:	adc    BYTE PTR [ecx],ah
  40e1ea:	fwait
  40e1eb:	in     al,0xf3
  40e1ed:	stos   BYTE PTR es:[edi],al
  40e1ee:	test   eax,0x14c9572b
  40e1f3:	mov    al,0xb4
  40e1f5:	and    eax,DWORD PTR [edx+0x6915c5ec]
  40e1fb:	cmp    cl,cl
  40e1fd:	mov    ecx,0x9c316170
  40e202:	(bad)  
  40e203:	adc    DWORD PTR [esi-0x5d],edi
  40e206:	xchg   edx,edi
  40e208:	rcr    DWORD PTR [edi-0x628e3230],1
  40e20e:	rcr    BYTE PTR [edx],cl
  40e210:	les    eax,FWORD PTR [eax+0x1c]
  40e213:	daa    
  40e214:	adc    BYTE PTR [esi+0x3b235051],ah
  40e21a:	sub    edx,edi
  40e21c:	mov    ss,ebx
  40e21e:	inc    edi
  40e21f:	push   esi
  40e220:	ret    
  40e221:	fist   WORD PTR [ebp-0x23]
  40e224:	cmp    cl,al
  40e226:	xchg   ebx,eax
  40e227:	inc    eax
  40e228:	sub    bh,BYTE PTR [edi+0xc]
  40e22b:	add    al,0x99
  40e22d:	dec    esi
  40e22e:	sub    al,0xee
  40e230:	mov    al,ds:0xfd96ddf5
  40e235:	adc    DWORD PTR [edx-0x4b226ccc],esi
  40e23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e23c:	adc    eax,0x627a9b9a
  40e241:	cmp    bl,0xcf
  40e244:	push   eax
  40e245:	mov    al,ds:0x92df8d8
  40e24a:	mov    ds:0x18c268a,eax
  40e24f:	push   ecx
  40e250:	popf   
  40e251:	jb     0x40e223
  40e253:	nop
  40e254:	lea    ecx,[esi]
  40e256:	mov    ebx,0x8654eaaa
  40e25b:	jbe    0x40e260
  40e25d:	mov    al,ds:0xaabd78d7
  40e262:	cld    
  40e263:	jge    0x40e2da
  40e265:	mov    esi,0x8a0f1dfe
  40e26a:	dec    edi
  40e26b:	int3   
  40e26c:	cwde   
  40e26d:	dec    ebx
  40e26e:	das    
  40e26f:	mov    edi,DWORD PTR [ebx+eax*8-0x2b67232b]
  40e276:	gs ins BYTE PTR es:[edi],dx
  40e278:	inc    eax
  40e279:	clc    
  40e27a:	or     BYTE PTR [eax+eax*8],ah
  40e27d:	push   esp
  40e27e:	dec    esp
  40e27f:	inc    esp
  40e280:	lods   al,BYTE PTR ds:[esi]
  40e281:	cmc    
  40e282:	fwait
  40e283:	add    al,BYTE PTR [esi+0x49d9f7d4]
  40e289:	arpl   WORD PTR [ecx-0x285339be],di
  40e28f:	out    dx,al
  40e290:	pop    ss
  40e291:	sbb    edi,eax
  40e293:	not    DWORD PTR ds:0x8a0dfbbe
  40e299:	push   esi
  40e29a:	cmp    eax,0x2ac81710
  40e29f:	or     DWORD PTR [ecx-0x4d053b41],ebp
  40e2a5:	pusha  
  40e2a6:	stc    
  40e2a7:	push   0x79
  40e2a9:	add    esp,DWORD PTR [edi+0x528cec70]
  40e2af:	cs pop es
  40e2b1:	jbe    0x40e308
  40e2b3:	test   BYTE PTR [edx+eiz*2],dh
  40e2b6:	fs mov dh,0x4f
  40e2b9:	ficom  WORD PTR [ebp+edx*4-0x32]
  40e2bd:	adc    DWORD PTR [ebx-0x23],esp
  40e2c0:	mov    fs,WORD PTR ss:[edx-0x2]
  40e2c4:	xor    DWORD PTR [edx],ebx
  40e2c6:	fsub   QWORD PTR [ebx]
  40e2c8:	imul   DWORD PTR [edx]
  40e2ca:	ins    BYTE PTR es:[edi],dx
  40e2cb:	repz add cl,BYTE PTR [ebp+esi*1+0x2839dd3c]
  40e2d3:	stos   DWORD PTR es:[edi],eax
  40e2d4:	out    dx,eax
  40e2d5:	loope  0x40e2e0
  40e2d7:	ss mov cl,0xe7
  40e2da:	std    
  40e2db:	iret   
  40e2dc:	in     eax,0xe0
  40e2de:	cmp    BYTE PTR [ebp+0xc2bc84d],bl
  40e2e4:	xchg   ebp,eax
  40e2e5:	or     BYTE PTR [ecx+0x4e],cl
  40e2e8:	mov    edx,0xfdaf8217
  40e2ed:	pusha  
  40e2ee:	push   ebx
  40e2ef:	iret   
  40e2f0:	test   DWORD PTR [edx-0x73f1b296],edi
  40e2f6:	mov    al,0xc1
  40e2f8:	cmp    bh,dh
  40e2fa:	xor    eax,0x74bf0a87
  40e2ff:	or     BYTE PTR [ebx+0x71cbabcb],ch
  40e305:	addr16 mov ebp,0xf58ed615
  40e30c:	add    edi,DWORD PTR [edx+0x6e]
  40e30f:	ins    BYTE PTR es:[edi],dx
  40e310:	fsubp  st(1),st
  40e312:	mov    bh,0x49
  40e314:	mov    cl,0x6
  40e316:	(bad)  
  40e317:	and    ah,BYTE PTR [edi-0x7b]
  40e31a:	iret   
  40e31b:	fcomp  QWORD PTR [edx+0x62]
  40e31e:	adc    bl,BYTE PTR [edx+0x4b]
  40e321:	jecxz  0x40e364
  40e323:	sti    
  40e324:	sub    eax,0x22b38c0a
  40e329:	adc    al,0xa
  40e32b:	in     eax,0xa9
  40e32d:	sbb    dh,ah
  40e32f:	stos   DWORD PTR es:[edi],eax
  40e330:	div    BYTE PTR [esi-0x77]
  40e333:	xor    eax,0x675c68a4
  40e338:	or     al,0xd9
  40e33a:	sbb    esi,esi
  40e33c:	mov    eax,0x6cab5861
  40e341:	lods   al,BYTE PTR cs:[esi]
  40e343:	jbe    0x40e342
  40e345:	(bad)  
  40e346:	leave  
  40e347:	push   eax
  40e348:	shl    BYTE PTR [esi+0x3b],1
  40e34b:	sbb    al,0xa7
  40e34d:	adc    BYTE PTR [edx+0xc],ah
  40e350:	mov    esp,0xf0c969b3
  40e355:	push   edx
  40e356:	dec    dx
  40e358:	sbb    al,0xed
  40e35a:	jmp    0x950abc85
  40e35f:	dec    esp
  40e360:	shr    BYTE PTR [ecx+0x3c],0xc0
  40e364:	pushf  
  40e365:	(bad)  
  40e367:	mov    eax,ds:0xe5338da4
  40e36c:	adc    eax,0x7c36ceaf
  40e371:	and    DWORD PTR [eax-0x76],ebp
  40e374:	mov    bl,0xc0
  40e376:	imul   eax,DWORD PTR fs:[ebp+0x33bdba09],0x2fb3a6b8
  40e381:	add    cl,dh
  40e383:	sub    ecx,DWORD PTR [edi]
  40e385:	xchg   edi,eax
  40e386:	xchg   ebp,eax
  40e387:	pop    esp
  40e388:	jmp    FWORD PTR [edx-0x6ffe11c2]
  40e38e:	pop    ds
  40e38f:	jle    0x40e327
  40e391:	and    ch,al
  40e393:	sub    eax,0x88bcc0ff
  40e398:	add    al,0xc3
  40e39a:	imul   ebp,DWORD PTR [ecx+0x33],0xec7f2220
  40e3a1:	push   0x73
  40e3a3:	push   0x93f62026
  40e3a8:	or     al,0x53
  40e3aa:	cli    
  40e3ab:	fnstsw WORD PTR [edi-0x7]
  40e3ae:	test   al,0x88
  40e3b0:	push   0x25
  40e3b2:	in     eax,dx
  40e3b3:	jecxz  0x40e3de
  40e3b5:	xchg   ebx,eax
  40e3b6:	fcom   DWORD PTR [eax-0x26]
  40e3b9:	xor    DWORD PTR [edx],ecx
  40e3bb:	ins    DWORD PTR es:[edi],dx
  40e3bc:	or     bh,BYTE PTR [esi-0x11]
  40e3bf:	xor    BYTE PTR [ebx-0x2a],cl
  40e3c2:	inc    ecx
  40e3c3:	mov    ds:0xbed50c0c,al
  40e3c8:	xor    dh,BYTE PTR [ebx+ebx*8-0x3ce4acbd]
  40e3cf:	lods   al,BYTE PTR ds:[esi]
  40e3d0:	add    edx,esi
  40e3d2:	jmp    0x40e397
  40e3d4:	sub    BYTE PTR [edx+eax*4-0x42e6ab54],0xd8
  40e3dc:	cs std 
  40e3de:	(bad)  
  40e3e0:	sbb    DWORD PTR [ebp+0x6c],edi
  40e3e3:	mov    eax,ds:0xe4f2ac58
  40e3e8:	xchg   ecx,eax
  40e3e9:	sub    edx,ebx
  40e3eb:	cmp    BYTE PTR [ecx],0xeb
  40e3ee:	jl     0x40e3f4
  40e3f0:	lds    esi,FWORD PTR [edi]
  40e3f2:	pop    edx
  40e3f3:	sbb    eax,0x15c3395a
  40e3f8:	mov    edx,0xad660a39
  40e3fd:	jl     0x40e3ee
  40e3ff:	shl    DWORD PTR [edx+0x37],0xe3
  40e403:	xchg   ebp,eax
  40e404:	and    esi,DWORD PTR [edi]
  40e406:	shl    BYTE PTR [ecx-0x54],0xd2
  40e40a:	push   esp
  40e40b:	(bad)  
  40e40c:	stos   DWORD PTR es:[edi],eax
  40e40d:	sar    DWORD PTR [ecx],1
  40e40f:	pop    edi
  40e410:	rcr    ebp,0x2a
  40e413:	push   0xcb62b056
  40e418:	sbb    bh,al
  40e41a:	das    
  40e41b:	(bad)  
  40e41c:	sti    
  40e41d:	loope  0x40e475
  40e41f:	inc    edi
  40e420:	test   BYTE PTR [ebx],dh
  40e422:	mov    bh,0xed
  40e424:	es inc ebp
  40e426:	in     al,dx
  40e427:	xchg   ebp,eax
  40e428:	mov    bh,0xdf
  40e42a:	mov    bl,0x47
  40e42c:	add    ecx,0x97c9ea43
  40e432:	push   esp
  40e433:	dec    esi
  40e434:	(bad)  
  40e435:	cmp    eax,DWORD PTR [eax+0x58b5bab4]
  40e43b:	mov    esp,0x3a16b12
  40e440:	mov    edi,0x472bace2
  40e445:	leave  
  40e446:	push   ebp
  40e447:	jb     0x40e4c2
  40e449:	dec    edi
  40e44a:	aas    
  40e44b:	inc    esp
  40e44c:	pop    edi
  40e44d:	adc    bh,dh
  40e44f:	push   esi
  40e450:	dec    ebp
  40e451:	lods   al,BYTE PTR ds:[esi]
  40e452:	(bad)  
  40e453:	xor    eax,0x57c3a49c
  40e458:	and    eax,0x38c86409
  40e45d:	lds    ebp,FWORD PTR [ebx+0x31ce30fb]
  40e463:	adc    cl,BYTE PTR [edx]
  40e465:	sub    al,0x1b
  40e467:	mov    al,ds:0xa5ea8635
  40e46c:	or     edi,DWORD PTR [eax+0x7f]
  40e46f:	sub    cl,bh
  40e471:	dec    eax
  40e472:	pop    ebx
  40e473:	stc    
  40e474:	jns    0x40e499
  40e476:	xchg   ebx,eax
  40e477:	mov    cl,0x40
  40e479:	or     esi,ebp
  40e47b:	xchg   ecx,eax
  40e47c:	clc    
  40e47d:	mov    ecx,0x6f4a5a22
  40e482:	scas   eax,DWORD PTR es:[edi]
  40e483:	nop
  40e484:	xchg   edi,eax
  40e485:	mov    esp,0xe86d10ba
  40e48a:	dec    edx
  40e48b:	xor    ch,BYTE PTR [edi]
  40e48d:	loop   0x40e4f3
  40e48f:	test   BYTE PTR [eax+0x17],ah
  40e492:	jno    0x40e467
  40e494:	or     eax,0x4d998083
  40e499:	or     ebx,0x1e23d8fe
  40e49f:	jnp    0x40e4b7
  40e4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4a2:	pop    ebp
  40e4a3:	out    dx,eax
  40e4a4:	outs   dx,BYTE PTR ds:[esi]
  40e4a5:	sbb    eax,0x6305d58c
  40e4aa:	and    DWORD PTR [edx-0xb],ecx
  40e4ad:	ss daa 
  40e4af:	xchg   esp,eax
  40e4b0:	mov    bl,0x27
  40e4b2:	cmp    BYTE PTR [ebp+0x26],bl
  40e4b5:	and    al,0x37
  40e4b7:	pop    eax
  40e4b8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e4ba:	jb     0x40e45f
  40e4bc:	(bad)  
  40e4bd:	es inc esp
  40e4bf:	ror    edx,cl
  40e4c1:	(bad)
  40e4c5:	dec    edi
  40e4c6:	pop    ss
  40e4c7:	out    0x25,eax
  40e4c9:	aam    0x5c
  40e4cb:	ins    BYTE PTR es:[edi],dx
  40e4cc:	xor    BYTE PTR [edx],dh
  40e4ce:	jle    0x40e45c
  40e4d0:	and    edi,edx
  40e4d2:	jnp    0x40e4c2
  40e4d4:	pushf  
  40e4d5:	jge    0x40e4a9
  40e4d7:	test   eax,0x79d6042a
  40e4dc:	adc    dl,cl
  40e4de:	aas    
  40e4df:	push   ds
  40e4e0:	mov    bh,0x20
  40e4e2:	shl    DWORD PTR [ebx],0xc9
  40e4e5:	test   BYTE PTR [ebp-0x16],ah
  40e4e8:	jae    0x40e4ad
  40e4ea:	int3   
  40e4eb:	cwde   
  40e4ec:	ret    0xa182
  40e4ef:	mov    bh,0x37
  40e4f1:	sub    bl,BYTE PTR [ecx-0x7dd6876f]
  40e4f7:	sbb    BYTE PTR [eax],ah
  40e4f9:	dec    ebx
  40e4fa:	xor    BYTE PTR [esi],bl
  40e4fc:	ret    
  40e4fd:	in     al,dx
  40e4fe:	ret    0xfa9d
  40e501:	xchg   edi,eax
  40e502:	or     DWORD PTR [eax],edx
  40e504:	xchg   edi,eax
  40e505:	xchg   ebp,eax
  40e506:	xor    eax,0x669d1cb3
  40e50b:	adc    eax,0x740971a6
  40e510:	stos   BYTE PTR es:[edi],al
  40e511:	xor    al,0xa9
  40e513:	adc    DWORD PTR [ebx+0x75],ebx
  40e516:	pop    edx
  40e517:	into   
  40e518:	addr16 dec edi
  40e51a:	(bad)  
  40e51b:	mov    ds:0xef4e3e21,eax
  40e520:	in     al,0x60
  40e522:	das    
  40e523:	fmul   st,st(1)
  40e525:	sub    BYTE PTR [ebp+0x77],0x73
  40e529:	add    BYTE PTR [esi+0x17],ah
  40e52c:	das    
  40e52d:	adc    BYTE PTR [ebx+0xa],ah
  40e530:	mov    DWORD PTR [esi-0x3aa8bc13],edx
  40e536:	add    dh,BYTE PTR [edi+eax*4-0x47]
  40e53a:	push   ss
  40e53b:	retf   
  40e53c:	jmp    0x4a301cee
  40e541:	mov    esp,0x6c673282
  40e546:	jb     0x40e5c6
  40e548:	lock inc esp
  40e54a:	std    
  40e54b:	outs   dx,DWORD PTR ds:[esi]
  40e54c:	pop    ebp
  40e54d:	mov    edx,ebx
  40e54f:	mov    ah,0x41
  40e551:	mov    ebp,0x9fbf6c1b
  40e556:	dec    esi
  40e557:	xor    BYTE PTR [ebp+0x55ff2c46],bl
  40e55d:	and    ebp,0x13dec7ce
  40e563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e564:	inc    edx
  40e565:	jge    0x40e585
  40e567:	cmp    DWORD PTR [ebp+ecx*4+0x761a1cd7],edi
  40e56e:	lahf   
  40e56f:	sar    DWORD PTR [ebx-0x2f],0x84
  40e573:	mov    BYTE PTR [ebx],al
  40e575:	adc    BYTE PTR [ecx],ch
  40e577:	(bad)  [ebx-0x25301f5]
  40e57d:	push   0x3e4b10c0
  40e582:	mov    dl,0xeb
  40e584:	mov    edx,0x3b648261
  40e589:	pop    esp
  40e58a:	pop    esi
  40e58b:	xchg   esp,eax
  40e58c:	mov    dh,BYTE PTR [edi-0x64]
  40e58f:	outs   dx,DWORD PTR ds:[esi]
  40e590:	popa   
  40e591:	fwait
  40e592:	jp     0x40e537
  40e594:	sub    eax,0x5f81e384
  40e599:	adc    BYTE PTR [edx+0x5a],dl
  40e59c:	retf   
  40e59d:	cmc    
  40e59e:	mov    cl,0xdf
  40e5a0:	popa   
  40e5a1:	or     al,0xa
  40e5a3:	loop   0x40e584
  40e5a5:	mov    edx,ds
  40e5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a8:	fidiv  WORD PTR [edi-0x674dc9c7]
  40e5ae:	imul   eax,DWORD PTR [ecx],0xffffffdb
  40e5b1:	xchg   ebx,eax
  40e5b2:	lds    ebp,FWORD PTR [esi]
  40e5b4:	adc    BYTE PTR [ebx],bh
  40e5b6:	pop    es
  40e5b7:	pop    eax
  40e5b8:	in     eax,0x2f
  40e5ba:	xlat   BYTE PTR ds:[ebx]
  40e5bb:	loopne 0x40e62f
  40e5bd:	pop    ss
  40e5be:	inc    eax
  40e5bf:	jo     0x40e5f6
  40e5c1:	mov    edi,0xe7c817d4
  40e5c6:	ret    
  40e5c7:	fcom   DWORD PTR [ecx]
  40e5c9:	in     al,dx
  40e5ca:	push   ebx
  40e5cb:	xlat   BYTE PTR ds:[ebx]
  40e5cc:	arpl   WORD PTR [ecx-0x38],bp
  40e5cf:	pop    ds
  40e5d0:	push   eax
  40e5d1:	pop    ds
  40e5d2:	in     al,dx
  40e5d3:	sub    BYTE PTR [edx-0x75855f12],ah
  40e5d9:	das    
  40e5da:	ret    0x722f
  40e5dd:	into   
  40e5de:	mov    DWORD PTR [eax+0x4ad9d15e],esi
  40e5e4:	ficomp WORD PTR [ebx-0x7b]
  40e5e7:	daa    
  40e5e8:	sbb    dh,BYTE PTR [edi+ecx*1-0x78]
  40e5ec:	repnz dec esi
  40e5ee:	push   ebp
  40e5ef:	fmul   QWORD PTR [esi-0x56450d1c]
  40e5f5:	fwait
  40e5f6:	(bad)  
  40e5f7:	es or  BYTE PTR ds:[edx-0x473b7b9e],bh
  40e5ff:	sahf   
  40e600:	dec    edx
  40e601:	sub    dl,BYTE PTR [edx+0x18]
  40e604:	ins    BYTE PTR es:[edi],dx
  40e605:	(bad)  
  40e606:	cld    
  40e607:	jae    0x40e638
  40e609:	mov    gs,WORD PTR [edi+0x3b6e0dfc]
  40e60f:	mov    ds:0xc79b727e,eax
  40e614:	jne    0x40e687
  40e616:	cdq    
  40e617:	(bad)  
  40e619:	fcomp  QWORD PTR [ecx-0x3]
  40e61c:	sti    
  40e61d:	stos   BYTE PTR es:[edi],al
  40e61e:	xchg   ecx,eax
  40e61f:	mov    ds:0x6ff3eb84,eax
  40e624:	mov    ds:0xffc0389a,eax
  40e629:	or     al,0x7d
  40e62b:	pop    edi
  40e62c:	dec    edx
  40e62d:	(bad)  
  40e62e:	shl    bh,1
  40e630:	out    0x46,al
  40e632:	clc    
  40e633:	or     al,0x96
  40e635:	sub    al,BYTE PTR [ecx]
  40e637:	cmp    cl,bh
  40e639:	fmulp  st(7),st
  40e63b:	mov    ebp,0xb2afd03e
  40e640:	cmc    
  40e641:	inc    ebx
  40e642:	jo     0x40e628
  40e644:	xor    eax,0x157b9f29
  40e649:	dec    eax
  40e64a:	enter  0x5691,0x79
  40e64e:	fist   DWORD PTR [ebx+0x5f477ef3]
  40e654:	(bad)  
  40e655:	aam    0xfa
  40e657:	cwde   
  40e658:	sub    al,0x1f
  40e65a:	dec    edi
  40e65b:	leave  
  40e65c:	shl    BYTE PTR ds:0xdb2c3a31,0x1f
  40e663:	loope  0x40e6d4
  40e665:	mov    dh,0x7
  40e667:	js     0x40e6e5
  40e669:	xchg   ecx,eax
  40e66a:	fldcw  WORD PTR [esi]
  40e66c:	outs   dx,DWORD PTR ds:[esi]
  40e66d:	push   esp
  40e66e:	pop    ds
  40e66f:	xor    al,0x29
  40e671:	jp     0x40e5fc
  40e673:	aas    
  40e674:	rol    DWORD PTR [ecx-0x2],0x65
  40e678:	xchg   ebp,eax
  40e679:	sbb    cl,0x10
  40e67c:	repz dec esi
  40e67e:	push   es
  40e67f:	mov    bl,0xec
  40e681:	mov    BYTE PTR [edi-0x2fc4027d],0x65
  40e688:	pop    edi
  40e689:	add    al,0xe
  40e68b:	sub    cl,BYTE PTR [esi+0x48]
  40e68e:	enter  0x77d1,0xcb
  40e692:	mov    cl,0xef
  40e694:	push   cs
  40e695:	repz daa 
  40e697:	or     ch,BYTE PTR [esi]
  40e699:	push   ds
  40e69a:	shl    DWORD PTR [ebp+ebx*8+0x284a2e2e],0x4b
  40e6a2:	sbb    al,0x64
  40e6a4:	call   0x63e0:0x3eb4b068
  40e6ab:	xchg   esi,eax
  40e6ac:	and    esp,0x44
  40e6af:	imul   esp,ebx,0xffffffd5
  40e6b2:	leave  
  40e6b3:	or     BYTE PTR [ebx],ah
  40e6b5:	int3   
  40e6b6:	fsubr  DWORD PTR [edi+0x6c]
  40e6b9:	jecxz  0x40e6fa
  40e6bb:	test   BYTE PTR [ebx],al
  40e6bd:	int3   
  40e6be:	in     eax,dx
  40e6bf:	inc    esp
  40e6c0:	cdq    
  40e6c1:	jns    0x40e696
  40e6c3:	rcl    BYTE PTR [ebx+eiz*4+0xd548a00],0x88
  40e6cb:	push   eax
  40e6cc:	xlat   BYTE PTR ds:[ebx]
  40e6cd:	push   edi
  40e6ce:	test   DWORD PTR [edi-0x21],edx
  40e6d1:	adc    dl,cl
  40e6d3:	in     eax,dx
  40e6d4:	pop    eax
  40e6d5:	xor    eax,0x53fde844
  40e6da:	popf   
  40e6db:	inc    esp
  40e6dc:	stc    
  40e6dd:	pop    eax
  40e6de:	jo     0x40e669
  40e6e0:	ret    
  40e6e1:	dec    esp
  40e6e2:	push   ecx
  40e6e3:	sbb    bl,BYTE PTR [ebx-0x65039081]
  40e6e9:	pop    ebx
  40e6ea:	mov    ds:0xbb507156,al
  40e6ef:	sub    al,0xc4
  40e6f1:	mov    ch,0xe
  40e6f3:	mov    esi,0xe4aeb1ad
  40e6f8:	pop    es
  40e6f9:	push   edi
  40e6fa:	(bad)  
  40e6fb:	bound  eax,QWORD PTR [ebx]
  40e6fd:	(bad)  
  40e6fe:	sbb    BYTE PTR [edi],dh
  40e700:	in     eax,dx
  40e701:	or     DWORD PTR [esi+edx*4+0x69],ebx
  40e705:	jmp    FWORD PTR [ebx+edx*1]
  40e708:	mov    ah,0xeb
  40e70a:	out    0x56,eax
  40e70c:	xor    bl,BYTE PTR [edi+esi*1]
  40e70f:	cmp    eax,0xfc593342
  40e714:	(bad)  
  40e715:	rcr    BYTE PTR [edx],1
  40e717:	int    0x6b
  40e719:	mov    edx,0xdcd566ab
  40e71e:	fimul  WORD PTR [eax-0x6a]
  40e721:	sbb    edi,ecx
  40e723:	fwait
  40e724:	mov    ecx,0x1c6528ba
  40e729:	inc    ebp
  40e72a:	mov    gs,WORD PTR cs:[edi-0x699b09d8]
  40e731:	ins    BYTE PTR es:[edi],dx
  40e732:	jg     0x40e73c
  40e734:	mov    ecx,0xf44e6bcc
  40e739:	inc    ebp
  40e73a:	test   al,0xa2
  40e73c:	mov    eax,0x8d19000b
  40e741:	aad    0xcc
  40e743:	je     0x40e7ba
  40e745:	mov    bl,0x5a
  40e747:	(bad)
  40e74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74c:	mov    ss,edx
  40e74e:	out    0xa5,al
  40e750:	and    BYTE PTR [ecx-0x1d],dh
  40e753:	sbb    al,0xc7
  40e755:	das    
  40e756:	jae    0x40e72f
  40e758:	mov    gs,WORD PTR [edi+0x5a010845]
  40e75e:	mov    edx,0x20f9768f
  40e763:	xchg   ebx,eax
  40e764:	aad    0x1e
  40e766:	xchg   edx,eax
  40e767:	inc    ecx
  40e768:	jp     0x40e762
  40e76a:	adc    al,0xb
  40e76c:	or     DWORD PTR [edx-0x36],edi
  40e76f:	or     eax,0x466b6794
  40e774:	xchg   BYTE PTR [eax],bl
  40e776:	mov    al,ds:0x4baf3339
  40e77b:	push   cs
  40e77c:	xchg   ebx,eax
  40e77d:	ret    0x82cd
  40e780:	pop    eax
  40e781:	inc    esi
  40e782:	fisttp QWORD PTR [eax-0x61]
  40e785:	sbb    eax,0x26f3311a
  40e78a:	scas   eax,DWORD PTR es:[edi]
  40e78b:	scas   al,BYTE PTR es:[edi]
  40e78c:	clc    
  40e78d:	lds    ecx,FWORD PTR [esi+eax*8+0x23]
  40e791:	mov    dh,0x39
  40e793:	(bad)  
  40e794:	mov    bh,0xfe
  40e796:	imul   ch
  40e798:	in     al,0x8b
  40e79a:	xor    DWORD PTR fs:[edi],eax
  40e79d:	cmp    cl,BYTE PTR [esi]
  40e79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7a0:	ror    eax,1
  40e7a2:	mov    cl,0xd1
  40e7a4:	clc    
  40e7a5:	cs ss and al,0xec
  40e7a9:	dec    DWORD PTR [edx-0x43bc8e5c]
  40e7af:	push   0xb618e1c7
  40e7b4:	sbb    BYTE PTR [edi],cl
  40e7b6:	and    eax,0x7bcf76c9
  40e7bb:	cmc    
  40e7bc:	inc    ebx
  40e7bd:	sbb    eax,0x604ebdb9
  40e7c2:	inc    esi
  40e7c3:	loopne 0x40e80f
  40e7c5:	mov    cl,0x98
  40e7c7:	sbb    eax,0xb835c07e
  40e7cc:	sub    esp,DWORD PTR [ebp*4+0x61313d43]
  40e7d3:	mov    eax,ds:0x1d1137ad
  40e7d8:	adc    BYTE PTR [edx-0x1e],ch
  40e7db:	fcmovnb st,st(6)
  40e7dd:	sbb    bl,BYTE PTR [ecx+eiz*2-0x34]
  40e7e1:	push   ebp
  40e7e2:	adc    al,0xf9
  40e7e4:	sbb    eax,0xbb936570
  40e7e9:	xor    bh,cl
  40e7eb:	out    dx,eax
  40e7ec:	fbld   TBYTE PTR [ecx]
  40e7ee:	ja     0x40e84d
  40e7f0:	mov    fs,WORD PTR [edx-0x2a279186]
  40e7f6:	test   DWORD PTR [eax+0x54f807d8],ecx
  40e7fc:	imul   edx,DWORD PTR [ecx+0x336a302e],0xffffff92
  40e803:	mov    ch,0xc9
  40e805:	mov    dl,0xce
  40e807:	push   ss
  40e808:	push   edi
  40e809:	leave  
  40e80a:	or     esp,DWORD PTR gs:[ebp-0x18f3a447]
  40e811:	dec    ebx
  40e812:	inc    ebp
  40e813:	aad    0x3d
  40e815:	in     al,0xcc
  40e817:	arpl   WORD PTR [ecx-0x59],bp
  40e81a:	mov    cl,0x6e
  40e81c:	jmp    0xd4779e0c
  40e821:	and    BYTE PTR [edx-0x39],al
  40e824:	mov    ds:0xf006dca7,al
  40e829:	pop    ds
  40e82a:	gs (bad) 
  40e82d:	mov    ecx,0xd8cb663d
  40e832:	sar    esi,cl
  40e834:	mov    esi,0xf2a01b8e
  40e839:	sub    DWORD PTR [ecx+0x2],0xd936103d
  40e840:	jo     0x40e7f5
  40e842:	and    edi,DWORD PTR [eax-0x30dee0cc]
  40e848:	push   0x69
  40e84a:	pop    esi
  40e84b:	mov    ds:0x61fb0393,eax
  40e850:	add    esi,DWORD PTR [esi+0x35bb17af]
  40e856:	add    esi,DWORD PTR [edi]
  40e858:	scas   eax,DWORD PTR es:[edi]
  40e859:	pop    es
  40e85a:	(bad)  
  40e85b:	sbb    al,ch
  40e85d:	lods   al,BYTE PTR ds:[esi]
  40e85e:	push   ebp
  40e85f:	push   cs
  40e860:	xchg   ecx,eax
  40e861:	mul    DWORD PTR [edx+0x70]
  40e864:	add    bl,BYTE PTR [edi-0x148b92c7]
  40e86a:	xor    eax,0xd03f9d86
  40e86f:	inc    esi
  40e870:	and    eax,0x4b919ed4
  40e875:	fnstcw WORD PTR [edi+ebx*1+0x6edca9b9]
  40e87c:	sbb    dl,BYTE PTR [esi]
  40e87e:	cdq    
  40e87f:	xor    DWORD PTR [ebx+edx*2-0x2f],esi
  40e883:	int3   
  40e884:	mov    edx,0xf5b8afb6
  40e889:	dec    ebx
  40e88a:	mov    dh,0x34
  40e88c:	rol    DWORD PTR [eax*2+0x3b2caeda],0x9e
  40e894:	icebp  
  40e895:	mov    edx,DWORD PTR [esi]
  40e897:	inc    ebx
  40e898:	push   eax
  40e899:	adc    esp,DWORD PTR [ecx+0x3df69476]
  40e89f:	xor    al,0x6e
  40e8a1:	mov    cl,0xa0
  40e8a3:	adc    esp,DWORD PTR [edx-0x69b024fe]
  40e8a9:	iret   
  40e8aa:	(bad)  
  40e8ab:	out    0x3c,eax
  40e8ad:	out    0x27,eax
  40e8af:	xchg   edx,eax
  40e8b0:	and    esp,ecx
  40e8b2:	rol    DWORD PTR [eax],cl
  40e8b4:	call   0x94469072
  40e8b9:	and    DWORD PTR [eax-0x4f],esp
  40e8bc:	xchg   ebp,eax
  40e8bd:	repz mov edi,0xe5952e30
  40e8c3:	in     eax,dx
  40e8c4:	enter  0x1c4c,0x38
  40e8c8:	mov    ah,0xf1
  40e8ca:	adc    al,0x9b
  40e8cc:	shl    DWORD PTR [ecx],0x58
  40e8cf:	loopne 0x40e8bc
  40e8d1:	stos   BYTE PTR es:[edi],al
  40e8d2:	sub    eax,0xd7fa2012
  40e8d7:	mov    ds:0xfba6c502,al
  40e8dc:	clc    
  40e8dd:	fs inc ecx
  40e8df:	shl    BYTE PTR [ebx-0x5bf21d64],1
  40e8e5:	hlt    
  40e8e6:	std    
  40e8e7:	sub    ebp,DWORD PTR [ecx]
  40e8e9:	pop    ds
  40e8ea:	cmp    ah,dl
  40e8ec:	inc    ebx
  40e8ed:	enter  0x2099,0x81
  40e8f1:	jmp    0x416c0ff2
  40e8f6:	add    DWORD PTR [edi+0x34],edx
  40e8f9:	scas   al,BYTE PTR es:[edi]
  40e8fa:	jbe    0x40e911
  40e8fc:	cdq    
  40e8fd:	inc    edx
  40e8fe:	into   
  40e8ff:	or     ecx,ebx
  40e901:	xor    BYTE PTR [edi],dh
  40e903:	xchg   ecx,eax
  40e904:	data16 xor al,0xdc
  40e907:	shl    BYTE PTR [ebp+0x42],0xb4
  40e90b:	out    dx,eax
  40e90c:	icebp  
  40e90d:	sub    dl,BYTE PTR [eax+0x3ca5d850]
  40e913:	lock scas eax,DWORD PTR es:[edi]
  40e915:	dec    ebp
  40e916:	or     edi,DWORD PTR [eax+0x6f]
  40e919:	(bad)  
  40e91a:	fldenv [edx+0x77825056]
  40e920:	and    BYTE PTR [edi],cl
  40e922:	stos   BYTE PTR es:[edi],al
  40e923:	xor    DWORD PTR [edx-0xd04cd1e],0xae455039
  40e92d:	cwde   
  40e92e:	lods   eax,DWORD PTR ds:[esi]
  40e92f:	pop    ds
  40e930:	jmp    FWORD PTR [ebx]
  40e932:	addr16 mov al,0xba
  40e935:	lds    ecx,FWORD PTR [edx]
  40e937:	cmp    DWORD PTR [esp+edi*8+0xb],0x38318508
  40e93f:	int    0x72
  40e941:	jg     0x40e9b4
  40e943:	and    ecx,DWORD PTR [edi-0x60]
  40e946:	sub    al,BYTE PTR [ecx+0x1bb8b625]
  40e94c:	inc    edi
  40e94d:	das    
  40e94e:	fiadd  WORD PTR [ebp+ebx*4+0x5d]
  40e952:	cwde   
  40e953:	mov    WORD PTR [ebp-0x17cd8dba],?
  40e959:	(bad)  
  40e95b:	mov    esi,0xa998429f
  40e960:	pop    edx
  40e961:	and    BYTE PTR [ebx+edi*8+0x9],bh
  40e965:	retf   
  40e966:	and    bh,bh
  40e968:	stc    
  40e969:	sbb    DWORD PTR [esp],0xa9983424
  40e970:	fwait
  40e971:	daa    
  40e972:	cmp    al,0x5a
  40e974:	dec    eax
  40e975:	push   esi
  40e976:	pop    es
  40e977:	xchg   ebp,eax
  40e978:	push   ss
  40e979:	inc    ebx
  40e97a:	push   eax
  40e97b:	xor    DWORD PTR [edx],esi
  40e97d:	adc    BYTE PTR [ecx+0x1c],dh
  40e980:	mov    bh,0x32
  40e982:	call   DWORD PTR [ebp+eiz*4+0x3b406656]
  40e989:	adc    al,0x8c
  40e98b:	aad    0x48
  40e98d:	loop   0x40e957
  40e98f:	pop    edx
  40e990:	pop    ecx
  40e991:	jmp    0xfb38c30f
  40e996:	adc    al,0xe9
  40e998:	inc    edi
  40e999:	ds jno 0x40e945
  40e99c:	test   DWORD PTR [edi],edi
  40e99e:	xchg   edi,eax
  40e99f:	mov    al,0xd2
  40e9a1:	jmp    0x40e952
  40e9a3:	dec    ebp
  40e9a4:	push   ss
  40e9a5:	pop    ds
  40e9a6:	cmp    edx,DWORD PTR ds:0xc51c5a71
  40e9ac:	and    DWORD PTR [edx],edx
  40e9ae:	pop    ebp
  40e9af:	mov    ah,0x89
  40e9b1:	pusha  
  40e9b2:	jns    0x40e98a
  40e9b4:	lahf   
  40e9b5:	out    dx,eax
  40e9b6:	pop    eax
  40e9b7:	in     eax,dx
  40e9b8:	scas   al,BYTE PTR es:[edi]
  40e9b9:	and    dh,cl
  40e9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9bc:	xchg   esp,eax
  40e9bd:	sahf   
  40e9be:	rol    esp,1
  40e9c0:	pop    es
  40e9c1:	out    dx,al
  40e9c2:	(bad)  
  40e9c3:	div    dh
  40e9c5:	lea    ebp,[ebx]
  40e9c7:	hlt    
  40e9c8:	ins    BYTE PTR es:[edi],dx
  40e9c9:	xor    ah,BYTE PTR [ecx]
  40e9cb:	inc    ecx
  40e9cc:	xor    BYTE PTR [eax],dl
  40e9ce:	test   BYTE PTR [eax-0x1],cl
  40e9d1:	mov    ecx,0xec1f810f
  40e9d6:	nop
  40e9d7:	xchg   esp,eax
  40e9d8:	jno    0x40e9ae
  40e9da:	(bad)  
  40e9dc:	push   esp
  40e9dd:	and    al,0x70
  40e9df:	and    BYTE PTR [eax-0x1ef7acc2],dh
  40e9e5:	aas    
  40e9e6:	icebp  
  40e9e7:	popf   
  40e9e8:	xor    cl,ch
  40e9ea:	mov    bl,0x6b
  40e9ec:	data16 jb 0x40ea09
  40e9ef:	jne    0x40ea19
  40e9f1:	cmp    DWORD PTR [ebx+eax*8-0x65],ebp
  40e9f5:	push   esi
  40e9f6:	dec    esi
  40e9f7:	jns    0x40e9bf
  40e9f9:	mov    esp,0x6c83846f
  40e9fe:	shr    BYTE PTR [edx-0x5f4c3ec7],cl
  40ea04:	je     0x40ea4f
  40ea06:	xor    bl,ch
  40ea08:	adc    eax,0x819fe71f
  40ea0d:	jbe    0x40ea6f
  40ea0f:	cmc    
  40ea10:	idiv   DWORD PTR [ecx+0x13]
  40ea13:	ret    
  40ea14:	xchg   DWORD PTR [ebx+ecx*4-0x20],esp
  40ea18:	mov    esp,0x2c8e5a84
  40ea1d:	fild   DWORD PTR [ebp+0x40f2e70f]
  40ea23:	fwait
  40ea24:	push   esi
  40ea25:	inc    esp
  40ea26:	mov    bl,0x8c
  40ea28:	inc    eax
  40ea29:	ret    
  40ea2a:	dec    ebx
  40ea2b:	outs   dx,BYTE PTR ds:[esi]
  40ea2c:	fadd   QWORD PTR [esi+0x46]
  40ea2f:	shl    cl,1
  40ea31:	mov    bh,0x3f
  40ea33:	icebp  
  40ea34:	shl    DWORD PTR [edi],0xfd
  40ea37:	inc    esp
  40ea38:	mov    bl,0x99
  40ea3a:	dec    eax
  40ea3b:	jge    0x40e9f5
  40ea3d:	cmp    eax,DWORD PTR [ecx+0x14]
  40ea40:	in     eax,dx
  40ea41:	leave  
  40ea42:	mov    esi,0xbf64ab9
  40ea47:	adc    esp,DWORD PTR [eax+eiz*2+0x552ac6ea]
  40ea4e:	lock mov al,ds:0x8ce7426a
  40ea54:	outs   dx,BYTE PTR ds:[esi]
  40ea55:	jg     0x40eaae
  40ea57:	or     eax,0x6147427
  40ea5c:	imul   BYTE PTR [edx]
  40ea5e:	pop    edx
  40ea5f:	mov    ebp,DWORD PTR [ecx]
  40ea61:	enter  0x5de4,0xe4
  40ea65:	jnp    0x40eac0
  40ea67:	mov    edi,0xa92c5b0
  40ea6c:	adc    BYTE PTR ds:[edi-0x7c],dl
  40ea70:	fldenv [ebx-0x73]
  40ea73:	int    0x14
  40ea75:	pop    es
  40ea76:	clc    
  40ea77:	jle    0x40ea33
  40ea79:	retf   0x6da6
  40ea7c:	add    BYTE PTR ds:0xc39d0c01,bh
  40ea82:	inc    edx
  40ea83:	dec    edi
  40ea84:	jp     0x40eaec
  40ea86:	sub    ah,al
  40ea88:	call   0x185d2a8a
  40ea8d:	and    bh,BYTE PTR [ecx+0x7c2d5dcd]
  40ea93:	rcr    BYTE PTR [esi+esi*4],cl
  40ea96:	push   esi
  40ea97:	pop    ss
  40ea98:	cli    
  40ea99:	retf   0xfbba
  40ea9c:	adc    bh,BYTE PTR [edx+0x2d]
  40ea9f:	loopne 0x40eaf1
  40eaa1:	add    BYTE PTR [eax],dl
  40eaa3:	xor    ebp,DWORD PTR [esi-0x17137093]
  40eaa9:	arpl   WORD PTR [ecx-0x68],di
  40eaac:	ja     0x40ea2e
  40eaae:	jo     0x40ea50
  40eab0:	xchg   edi,eax
  40eab1:	in     eax,0xa1
  40eab3:	sbb    ebp,DWORD PTR [edi+0x5a48fa45]
  40eab9:	and    cl,BYTE PTR [esi+0x2e28be49]
  40eabf:	cmp    DWORD PTR [ebp+0x3b160f10],edi
  40eac5:	add    al,0x3f
  40eac7:	stos   BYTE PTR es:[edi],al
  40eac8:	xor    BYTE PTR [edi],cl
  40eaca:	in     al,dx
  40eacb:	pop    ecx
  40eacc:	(bad)  
  40eacd:	cwde   
  40eace:	adc    esp,DWORD PTR ss:[ebx-0x409201aa]
  40ead5:	and    DWORD PTR [ebp+0x7],0x1f415434
  40eadc:	lea    edi,[ebx+edx*8-0x2c]
  40eae0:	lods   al,BYTE PTR ds:[esi]
  40eae1:	dec    edx
  40eae2:	sahf   
  40eae3:	test   DWORD PTR [edi-0x3098a938],ecx
  40eae9:	pop    ds
  40eaea:	loope  0x40eab3
  40eaec:	out    dx,al
  40eaed:	es mov ebx,0xfbd1ffb1
  40eaf3:	mov    al,ds:0x4a5818bc
  40eaf8:	jmp    0x40eacc
  40eafa:	in     al,0x58
  40eafc:	aaa    
  40eafd:	adc    DWORD PTR [esi],0xffffff97
  40eb00:	inc    eax
  40eb01:	inc    eax
  40eb02:	loope  0x40eb13
  40eb04:	mov    ecx,0x126745e2
  40eb09:	jp     0x40eaf4
  40eb0b:	push   0x7d751104
  40eb10:	jbe    0x40eb6b
  40eb12:	add    cl,BYTE PTR ds:[edx+ebp*4]
  40eb16:	out    0x72,al
  40eb18:	push   ss
  40eb19:	lahf   
  40eb1a:	iret   
  40eb1b:	addr16 adc eax,0x99032e96
  40eb21:	sub    dl,cl
  40eb23:	jo     0x40eb9d
  40eb25:	je     0x40eb56
  40eb27:	in     eax,0x64
  40eb29:	pop    ebx
  40eb2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb2b:	jns    0x40eac5
  40eb2d:	repnz push edi
  40eb2f:	mov    esp,0x70aef24a
  40eb34:	mov    al,ds:0xb4acc00a
  40eb39:	push   cs
  40eb3a:	mov    ds:0xd735b798,eax
  40eb3f:	dec    esp
  40eb40:	arpl   WORD PTR [ebp+0x55],dx
  40eb43:	cld    
  40eb44:	div    BYTE PTR [eax]
  40eb46:	mov    al,0xa7
  40eb48:	or     DWORD PTR [ebp+0x21958efd],edx
  40eb4e:	bound  edi,QWORD PTR ds:0x731d25a3
  40eb54:	les    edx,FWORD PTR [edi-0x51]
  40eb57:	int    0x3c
  40eb59:	not    ebx
  40eb5b:	iret   
  40eb5c:	fcmovbe st,st(7)
  40eb5e:	loope  0x40eb57
  40eb60:	jg     0x40eb1a
  40eb62:	sbb    ah,BYTE PTR [ebp-0x3897fc3b]
  40eb68:	les    ebx,FWORD PTR [ebx-0x37d04328]
  40eb6e:	popf   
  40eb6f:	in     eax,dx
  40eb70:	pop    ds
  40eb71:	xchg   ebp,eax
  40eb72:	ins    BYTE PTR es:[edi],dx
  40eb73:	pop    edi
  40eb74:	inc    ebp
  40eb75:	fldenv [edi-0x3c]
  40eb78:	sahf   
  40eb79:	shl    DWORD PTR [ebx+0x36dbb64e],1
  40eb7f:	push   es
  40eb80:	popa   
  40eb81:	add    DWORD PTR [esi-0x6e],ebp
  40eb84:	mov    edi,ebp
  40eb86:	xchg   ebx,eax
  40eb87:	add    eax,DWORD PTR [eax+0x4d]
  40eb8a:	mov    ecx,0xb9f2711
  40eb8f:	clc    
  40eb90:	scas   al,BYTE PTR es:[edi]
  40eb91:	and    DWORD PTR [edi-0x5e],edx
  40eb94:	scas   eax,DWORD PTR es:[edi]
  40eb95:	int3   
  40eb96:	shr    dl,0x56
  40eb99:	gs sbb al,0xfa
  40eb9c:	mov    ecx,0xbbb91bee
  40eba1:	push   es
  40eba2:	enter  0x7fb5,0x27
  40eba6:	inc    ecx
  40eba7:	std    
  40eba8:	call   0x6805d7b0
  40ebad:	cmp    al,0x8d
  40ebaf:	std    
  40ebb0:	xlat   BYTE PTR ds:[ebx]
  40ebb1:	xor    eax,0x7a10587
  40ebb6:	mov    al,0x78
  40ebb8:	aaa    
  40ebb9:	ja     0x40ec04
  40ebbb:	arpl   bp,sp
  40ebbd:	cmp    al,0xa8
  40ebbf:	(bad)  
  40ebc0:	les    eax,FWORD PTR [ebx]
  40ebc2:	jne    0x40ebbd
  40ebc4:	add    bh,bl
  40ebc6:	push   esi
  40ebc7:	in     al,dx
  40ebc8:	imul   esi,ebp,0x28a3100d
  40ebce:	out    dx,eax
  40ebcf:	inc    esp
  40ebd0:	sub    ch,dh
  40ebd2:	addr16 lock mov ds:0xd1d5,eax
  40ebd7:	lea    edi,ds:0x90bcff6a
  40ebdd:	push   ebx
  40ebde:	pop    ds
  40ebdf:	jl     0x40eb68
  40ebe1:	sbb    eax,0x40764339
  40ebe6:	sti    
  40ebe7:	mov    bh,0x30
  40ebe9:	inc    ebp
  40ebea:	mov    ebx,0x1379e171
  40ebef:	lahf   
  40ebf0:	cmp    ah,cl
  40ebf2:	push   edi
  40ebf3:	ret    0x3fd9
  40ebf6:	cmc    
  40ebf7:	(bad)  
  40ebf9:	lahf   
  40ebfa:	or     ebp,ebp
  40ebfc:	mov    DWORD PTR [edx-0x538caeaf],esi
  40ec02:	call   0xe9b:0x244f1f9f
  40ec09:	test   al,0x9b
  40ec0b:	inc    edi
  40ec0c:	jmp    0x40ebd8
  40ec0e:	test   al,0xd
  40ec10:	lock jmp 0x40ec13
  40ec13:	inc    edx
  40ec14:	fidivr WORD PTR [ebx-0x68d18b57]
  40ec1a:	mov    esp,0x609199cd
  40ec1f:	loopne 0x40ec85
  40ec21:	push   ecx
  40ec22:	and    BYTE PTR [edx+0x59],bl
  40ec25:	inc    esp
  40ec26:	shr    edi,1
  40ec28:	mov    esp,DWORD PTR [esp+ebp*4-0x6a54fcd8]
  40ec2f:	and    eax,0x54ae6875
  40ec34:	lahf   
  40ec35:	aam    0x3a
  40ec37:	dec    edi
  40ec38:	or     eax,0x4cb31248
  40ec3d:	call   0x7d1d:0x5bafacda
  40ec44:	lock push ds
  40ec46:	jp     0x40ecb7
  40ec48:	jne    0x40ecba
  40ec4a:	out    dx,al
  40ec4b:	mov    bl,bl
  40ec4d:	mov    ch,0xb6
  40ec4f:	test   al,0x98
  40ec51:	ja     0x40ec03
  40ec53:	push   ss
  40ec54:	ss scas al,BYTE PTR es:[edi]
  40ec56:	lock jle 0x40ec1d
  40ec59:	mov    ebp,ebp
  40ec5b:	lods   al,BYTE PTR ds:[esi]
  40ec5c:	push   edx
  40ec5d:	mov    ds:0x401e5c6e,eax
  40ec62:	jecxz  0x40ecb9
  40ec64:	neg    DWORD PTR [esi]
  40ec66:	inc    eax
  40ec67:	sbb    DWORD PTR [esi-0x37],ebp
  40ec6a:	mov    BYTE PTR [edi+edi*8-0x6d],bh
  40ec6e:	pusha  
  40ec6f:	cmc    
  40ec70:	adc    eax,0x8180fc80
  40ec75:	jae    0x40ec12
  40ec77:	mov    bl,BYTE PTR [ebp+0x1a]
  40ec7a:	mov    eax,0x6d1d6184
  40ec7f:	dec    BYTE PTR [edi-0x3ddfe8cf]
  40ec85:	data16 icebp 
  40ec87:	out    0xc8,eax
  40ec89:	jle    0x40ecad
  40ec8b:	mov    ecx,0x303531
  40ec90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec91:	sub    edx,edi
  40ec93:	in     al,dx
  40ec94:	pop    esi
  40ec95:	mov    ecx,0xa958462e
  40ec9a:	jmp    0x93cc7adc
  40ec9f:	mov    ecx,0x7ef96bf3
  40eca4:	sub    al,0x15
  40eca6:	std    
  40eca7:	pop    es
  40eca8:	dec    esi
  40eca9:	jle    0x40ecb7
  40ecab:	hlt    
  40ecac:	lods   al,BYTE PTR ds:[esi]
  40ecad:	dec    ebx
  40ecae:	push   ax
  40ecb0:	dec    ch
  40ecb2:	jle    0x40ec3e
  40ecb4:	add    eax,0xb3701a8
  40ecba:	jl     0x40eca8
  40ecbc:	mov    bl,0x4a
  40ecbe:	(bad)  
  40ecbf:	mul    ch
  40ecc1:	cmp    eax,DWORD PTR [edx]
  40ecc3:	nop
  40ecc4:	push   esi
  40ecc5:	xchg   edi,eax
  40ecc6:	test   al,0x3a
  40ecc8:	mov    ch,0xf5
  40ecca:	jmp    0x51ef:0x3843f45
  40ecd1:	sub    ecx,DWORD PTR [ecx+0xaee733e]
  40ecd7:	(bad)  
  40ecd8:	sbb    dl,dl
  40ecda:	push   0xffffff99
  40ecdc:	mov    cs,WORD PTR [ecx]
  40ecde:	pinsrw mm1,WORD PTR [ebp+0x1d],0x5b
  40ece3:	pop    edx
  40ece4:	test   BYTE PTR [ecx-0x83b774],dh
  40ecea:	dec    esp
  40eceb:	inc    ebx
  40ecec:	data16 jns 0x40eced
  40ecef:	jo     0x40ed0e
  40ecf1:	pusha  
  40ecf2:	and    eax,0xba6a2f10
  40ecf7:	inc    edi
  40ecf8:	lock je 0x40ed3a
  40ecfb:	dec    ebx
  40ecfc:	xor    eax,0xa788f618
  40ed01:	sbb    DWORD PTR [esi-0xd],ebp
  40ed04:	and    DWORD PTR [edx],0xffffffda
  40ed07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed08:	dec    ebp
  40ed09:	cmp    BYTE PTR [edi+0x5e],ah
  40ed0c:	nop
  40ed0d:	sub    ah,BYTE PTR [esi+0x1d9e8b77]
  40ed13:	sbb    al,0xf6
  40ed15:	retf   
  40ed16:	ror    DWORD PTR [edx-0x2b],cl
  40ed19:	ficom  WORD PTR [eax]
  40ed1b:	aam    0xfa
  40ed1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed1e:	rol    DWORD PTR [eax],1
  40ed20:	retf   
  40ed21:	mov    ebp,DWORD PTR [eax+0x7f]
  40ed24:	adc    al,0xe7
  40ed26:	push   0xe32617e4
  40ed2b:	adc    BYTE PTR ds:0x406ef8be,cl
  40ed31:	mov    ah,0x11
  40ed33:	test   al,0xc4
  40ed35:	das    
  40ed36:	ret    0xc49b
  40ed39:	and    BYTE PTR [esi],bh
  40ed3b:	mov    bh,0x30
  40ed3d:	pop    ebp
  40ed3e:	mov    ?,WORD PTR [ebp+0x22]
  40ed41:	retf   
  40ed42:	test   eax,0x78b04e48
  40ed47:	jle    0x40ed06
  40ed49:	ss dec ebx
  40ed4b:	ins    DWORD PTR es:[edi],dx
  40ed4c:	int3   
  40ed4d:	scas   al,BYTE PTR es:[edi]
  40ed4e:	xor    BYTE PTR [ebp-0x3cf23836],dl
  40ed54:	mov    ebx,0x23299896
  40ed59:	dec    edx
  40ed5a:	fs mov bh,0x2c
  40ed5d:	pop    edi
  40ed5e:	frstor [edx]
  40ed60:	imul   esp,DWORD PTR [ecx-0x2f73acb],0xffffff84
  40ed67:	(bad)  
  40ed68:	sbb    BYTE PTR [edx+0xfd93f94],bl
  40ed6e:	adc    ebp,DWORD PTR [eax+0x2d2573b9]
  40ed74:	scas   eax,DWORD PTR es:[edi]
  40ed75:	out    0x82,eax
  40ed77:	mov    dh,0x52
  40ed79:	pop    edx
  40ed7a:	test   BYTE PTR [edx],dh
  40ed7c:	mov    ds:0xa7f2c0ec,eax
  40ed81:	sub    al,0x6c
  40ed83:	jns    0x40edde
  40ed85:	ss mov dl,0xb7
  40ed88:	mov    bh,0xf
  40ed8a:	sbb    DWORD PTR [eax+0x7c],esp
  40ed8d:	cmp    al,ch
  40ed8f:	leave  
  40ed90:	push   ecx
  40ed91:	test   DWORD PTR [eax],eax
  40ed93:	mov    DWORD PTR [edi+0x24],esp
  40ed96:	or     dl,BYTE PTR [esi-0x6777c7a8]
  40ed9c:	ins    DWORD PTR es:[edi],dx
  40ed9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed9e:	stos   DWORD PTR es:[edi],eax
  40ed9f:	mov    edi,DWORD PTR [edi-0x58744877]
  40eda5:	je     0x40ee14
  40eda7:	test   eax,0x7622acf
  40edac:	bound  edx,QWORD PTR [edi]
  40edae:	icebp  
  40edaf:	int3   
  40edb0:	cli    
  40edb1:	loop   0x40ed46
  40edb3:	out    0x60,eax
  40edb5:	push   edx
  40edb6:	xor    al,0x47
  40edb8:	jne    0x40ed63
  40edba:	dec    ecx
  40edbb:	dec    esp
  40edbc:	mov    al,BYTE PTR [ecx-0x712a8dcd]
  40edc2:	jge    0x40ede0
  40edc4:	xchg   esi,eax
  40edc5:	aas    
  40edc6:	sub    ebx,DWORD PTR [ecx+eax*4]
  40edc9:	and    DWORD PTR [edi],ebp
  40edcb:	xchg   esp,eax
  40edcc:	inc    edx
  40edcd:	scas   al,BYTE PTR es:[edi]
  40edce:	ds jmp 0x38efa933
  40edd4:	int3   
  40edd5:	pop    edx
  40edd6:	add    BYTE PTR [ebx+0x78bb99eb],dh
  40eddc:	xchg   edx,eax
  40eddd:	iret   
  40edde:	mov    eax,0x219fd6e1
  40ede3:	rol    dh,0xbb
  40ede6:	fdivr  st,st(3)
  40ede8:	adc    DWORD PTR [edx+eax*2+0x30],esp
  40edec:	cmp    ecx,ebp
  40edee:	(bad)  
  40edef:	in     al,dx
  40edf0:	call   0x25af14bf
  40edf5:	js     0x40ee66
  40edf7:	inc    ebp
  40edf8:	or     bh,0xcc
  40edfb:	out    0x9b,al
  40edfd:	mov    cl,0x22
  40edff:	mov    bh,0xd8
  40ee01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee02:	adc    ch,0x80
  40ee05:	test   DWORD PTR [edi],edi
  40ee07:	mov    esi,0xb6c2c9e8
  40ee0c:	xchg   ah,ch
  40ee0e:	adc    al,0xf7
  40ee10:	jne    0x40ee11
  40ee12:	adc    ah,al
  40ee14:	mov    gs,edi
  40ee16:	xor    eax,0x82b9a75f
  40ee1b:	repnz lods eax,DWORD PTR ds:[esi]
  40ee1d:	jp     0x40ee89
  40ee1f:	cwde   
  40ee20:	jns    0x40ee27
  40ee22:	jmp    0x896d:0x2965404a
  40ee29:	add    ch,BYTE PTR [esi-0x8]
  40ee2c:	popa   
  40ee2d:	daa    
  40ee2e:	mov    ds:0x4bfc9356,al
  40ee33:	and    ecx,esi
  40ee35:	mov    edx,0xa7782582
  40ee3a:	push   0xc437d604
  40ee3f:	and    DWORD PTR [edi],esp
  40ee41:	dec    eax
  40ee42:	xor    eax,0xf4843dd3
  40ee47:	aaa    
  40ee48:	jo     0x40ee37
  40ee4a:	xor    al,0x44
  40ee4c:	out    dx,eax
  40ee4d:	retf   0x722
  40ee50:	js     0x40ee88
  40ee52:	enter  0x799c,0xde
  40ee56:	push   ss
  40ee57:	mov    BYTE PTR [eax*1+0x3e28c763],ch
  40ee5e:	ret    
  40ee5f:	cmp    al,BYTE PTR [ecx]
  40ee61:	cdq    
  40ee62:	int    0x2
  40ee64:	in     al,0x84
  40ee66:	test   DWORD PTR [edi+0x28b01a3c],edx
  40ee6c:	push   ds
  40ee6d:	xor    BYTE PTR [eax],ah
  40ee6f:	cli    
  40ee70:	xor    dh,BYTE PTR [edx+ebp*1+0x5084e237]
  40ee77:	out    0xde,eax
  40ee79:	shl    BYTE PTR [esi-0x74],0x2b
  40ee7d:	call   0x29b8:0x290632e7
  40ee84:	sbb    al,BYTE PTR [esi]
  40ee86:	xor    edi,esi
  40ee88:	mov    ds:0xf9a20b09,al
  40ee8d:	test   DWORD PTR [eax+0x4f8bb8d2],esi
  40ee93:	ins    BYTE PTR es:[edi],dx
  40ee94:	jl     0x40eebf
  40ee96:	or     bh,dl
  40ee98:	mov    ebp,0x748dcf5d
  40ee9d:	and    DWORD PTR [esi+0x6268034b],esi
  40eea3:	lea    ebp,ds:0x3cdc014a
  40eea9:	ss xchg ebp,eax
  40eeab:	inc    ebx
  40eeac:	push   ebp
  40eead:	xchg   edi,eax
  40eeae:	test   BYTE PTR [edi+esi*8+0x10],0x3c
  40eeb3:	fsub   DWORD PTR [esi]
  40eeb5:	push   esi
  40eeb6:	(bad)  
  40eeb7:	cmp    eax,0x409acb6d
  40eebc:	sub    esi,ecx
  40eebe:	mov    ah,0x7e
  40eec0:	sbb    al,0x8
  40eec2:	repz mov al,0x1
  40eec5:	rcr    DWORD PTR [ecx-0x78fb03fe],0x72
  40eecc:	in     eax,0x61
  40eece:	imul   edx,DWORD PTR [ecx+ebp*2+0x79b49ddc],0xabdd1105
  40eed9:	jb     0x40ee8b
  40eedb:	mov    BYTE PTR [ebx-0x40],ah
  40eede:	out    0x3b,al
  40eee0:	cmp    DWORD PTR [edx+0x51],ecx
  40eee3:	js     0x40ef1f
  40eee5:	xchg   ebp,eax
  40eee6:	cdq    
  40eee7:	inc    esi
  40eee8:	js     0x40eefa
  40eeea:	xor    eax,0x2aa477cd
  40eeef:	jbe    0x40eefe
  40eef1:	push   ss
  40eef2:	jecxz  0x40eef1
  40eef4:	or     eax,0xc2dec506
  40eef9:	sub    esp,ebp
  40eefb:	pop    eax
  40eefc:	das    
  40eefd:	cmp    DWORD PTR [esi],edx
  40eeff:	mov    WORD PTR [ebx+0xdfea12],fs
  40ef05:	adc    DWORD PTR [ebx+0x20694f5d],ebp
  40ef0b:	rcl    DWORD PTR [edx+0x2a],cl
  40ef0e:	call   0x602331ea
  40ef13:	in     al,0xbf
  40ef15:	inc    eax
  40ef16:	jmp    0xdebb79fd
  40ef1b:	pushf  
  40ef1c:	push   ds
  40ef1d:	out    0x2a,eax
  40ef1f:	add    DWORD PTR [ebx+0x4a],0xded6c69a
  40ef26:	jnp    0x40ef38
  40ef28:	adc    DWORD PTR [eax],ebp
  40ef2a:	add    dh,BYTE PTR [esi-0x41522aa5]
  40ef30:	mov    esi,0xac1abf92
  40ef35:	pushf  
  40ef36:	push   ds
  40ef37:	push   eax
  40ef38:	in     eax,0xa5
  40ef3a:	aam    0xaa
  40ef3c:	xchg   esi,eax
  40ef3d:	inc    ebp
  40ef3e:	xor    al,0x16
  40ef40:	adc    esp,DWORD PTR [eax+edi*2+0x56]
  40ef44:	mov    bl,0xe4
  40ef46:	jb     0x40eeec
  40ef48:	jle    0x40ef70
  40ef4a:	mov    bl,bl
  40ef4c:	in     al,0x5d
  40ef4e:	sub    ch,BYTE PTR [edx-0x6c118b7a]
  40ef54:	pop    esp
  40ef55:	or     BYTE PTR [ebp+0x7fd72d54],cl
  40ef5b:	lods   al,BYTE PTR ds:[esi]
  40ef5c:	jp     0x40ef54
  40ef5e:	jno    0x40efd1
  40ef60:	xor    BYTE PTR [edi-0x7754fb82],bl
  40ef66:	outs   dx,BYTE PTR ds:[esi]
  40ef67:	cmp    ah,BYTE PTR ds:0xcc0ff907
  40ef6d:	jnp    0x40ef29
  40ef6f:	sbb    al,0x8e
  40ef71:	pop    es
  40ef72:	arpl   WORD PTR [eax+eax*1+0x7bd9abd9],ax
  40ef79:	sbb    esi,DWORD PTR [ecx-0x5c]
  40ef7c:	sbb    eax,0xf454916c
  40ef81:	std    
  40ef82:	jo     0x40ef8b
  40ef84:	retf   0x374e
  40ef87:	adc    DWORD PTR [edx],eax
  40ef89:	iret   
  40ef8a:	into   
  40ef8b:	stos   DWORD PTR es:[edi],eax
  40ef8c:	fwait
  40ef8d:	clc    
  40ef8e:	loopne 0x40ef51
  40ef90:	fist   DWORD PTR [edx-0x755df0e8]
  40ef96:	fwait
  40ef97:	mov    DWORD PTR [eax-0x19],eax
  40ef9a:	push   ecx
  40ef9b:	xchg   esi,eax
  40ef9c:	vpslld xmm5,xmm2,XMMWORD PTR [ebp+0x2b8d01]
  40efa4:	popa   
  40efa5:	mov    cl,0x41
  40efa7:	xchg   BYTE PTR [edx+esi*8],ch
  40efaa:	or     ebx,DWORD PTR [eax]
  40efac:	mov    bh,0xab
  40efae:	mov    WORD PTR [ebx+ecx*1+0x5c68843c],fs
  40efb5:	sub    BYTE PTR [edi+0x40],ch
  40efb8:	cdq    
  40efb9:	popf   
  40efba:	out    dx,eax
  40efbb:	add    ebp,DWORD PTR [esi-0x4009dc6c]
  40efc1:	aam    0xab
  40efc3:	fsubr  QWORD PTR ds:0xe97447bd
  40efc9:	add    BYTE PTR [edi+edx*4],dl
  40efcc:	mov    ds:0xa3b00888,al
  40efd1:	cmp    eax,0x1a
  40efd4:	ja     0x40efab
  40efd6:	and    BYTE PTR [ebx+0x40],0x8e
  40efda:	xchg   edx,eax
  40efdb:	lahf   
  40efdc:	mov    ds:0x81d399e3,eax
  40efe1:	(bad)  
  40efe3:	adc    BYTE PTR [edx+0x44],dl
  40efe6:	pop    edi
  40efe7:	nop
  40efe8:	cmc    
  40efe9:	fisttp QWORD PTR [edx-0xb]
  40efec:	mov    al,ds:0xd1ba7e7
  40eff1:	imul   ecx,edx,0x50
  40eff4:	les    esp,FWORD PTR [edi*8+0x3bba964c]
  40effb:	out    0x89,eax
  40effd:	daa    
  40effe:	push   esi
  40efff:	push   cs
  40f000:	or     cl,BYTE PTR [ecx+0x31]
  40f003:	adc    eax,0x3518f854
  40f008:	pop    ecx
  40f009:	mov    ds:0x1074ef6c,al
  40f00e:	jmp    0x40ef95
  40f010:	jle    0x40f057
  40f012:	shl    BYTE PTR [ebx+0x70ff4123],1
  40f018:	add    eax,0xfafa4122
  40f01d:	adc    DWORD PTR ss:[esi+0xa],eax
  40f021:	std    
  40f022:	push   ecx
  40f023:	xor    eax,0x3396365f
  40f028:	out    0x56,eax
  40f02a:	add    eax,0xeb8187d7
  40f02f:	jp     0x40f08c
  40f031:	pop    es
  40f032:	xchg   edx,eax
  40f033:	or     ebx,DWORD PTR [esi-0x6884abf6]
  40f039:	sti    
  40f03a:	cmp    eax,0x4262242f
  40f03f:	cmp    eax,0x531bc341
  40f044:	adc    dh,BYTE PTR [edi+0x48276c52]
  40f04a:	imul   esp,DWORD PTR [ecx+0x67],0x83ea3f84
  40f051:	lods   eax,DWORD PTR ds:[esi]
  40f052:	xchg   ebx,eax
  40f053:	inc    ecx
  40f054:	(bad)  [ebx]
  40f056:	jo     0x40f07f
  40f058:	shl    BYTE PTR [edx-0x27],cl
  40f05b:	fstp   st(4)
  40f05d:	xchg   BYTE PTR [edx+ebx*2],dh
  40f060:	call   0x663c:0x8184944
  40f067:	(bad)  
  40f068:	popa   
  40f069:	push   ebx
  40f06a:	adc    eax,0x4b5b7e34
  40f06f:	xchg   ecx,eax
  40f070:	cli    
  40f071:	mov    DWORD PTR [ebp+edi*1+0x16],ebx
  40f075:	xor    ch,ah
  40f077:	loop   0x40f03a
  40f079:	fdiv   QWORD PTR [edx]
  40f07b:	inc    edi
  40f07c:	fcom   DWORD PTR [edi+edi*4]
  40f07f:	stos   BYTE PTR es:[edi],al
  40f080:	scas   eax,DWORD PTR es:[edi]
  40f081:	sbb    BYTE PTR [esi+0x29],ch
  40f084:	dec    esi
  40f085:	cwde   
  40f086:	and    ebx,DWORD PTR [eax+0x5a79571a]
  40f08c:	mov    ebp,0x76dc63dd
  40f091:	arpl   WORD PTR [ecx+0x8],cx
  40f094:	mov    ebp,0xe54bf339
  40f099:	jno    0x40f060
  40f09b:	jb     0x40f043
  40f09d:	cmp    al,0x75
  40f09f:	nop
  40f0a0:	in     al,0xf
  40f0a2:	jo     0x40f074
  40f0a4:	or     al,0x70
  40f0a6:	sbb    al,0x60
  40f0a8:	lea    esi,[esi-0x79]
  40f0ab:	pop    ds
  40f0ac:	add    dh,BYTE PTR [edx-0x7640dae3]
  40f0b2:	xchg   esi,eax
  40f0b3:	pop    eax
  40f0b4:	sbb    edi,DWORD PTR [eax-0x2b]
  40f0b7:	jl     0x40f05a
  40f0b9:	test   BYTE PTR [edi-0x5],cl
  40f0bc:	inc    esi
  40f0bd:	loope  0x40f0c4
  40f0bf:	push   esp
  40f0c0:	xchg   edi,eax
  40f0c1:	and    DWORD PTR [edi+0xa159df9],esi
  40f0c7:	mov    ah,0x56
  40f0c9:	aaa    
  40f0ca:	pop    ds
  40f0cb:	or     cl,BYTE PTR [edx]
  40f0cd:	cdq    
  40f0ce:	call   0x2b03:0x67ce835e
  40f0d5:	loope  0x40f108
  40f0d7:	call   0x21d7454c
  40f0dc:	or     DWORD PTR [edx],eax
  40f0de:	push   ebx
  40f0df:	sub    dh,BYTE PTR [eax]
  40f0e1:	jns    0x40f0b9
  40f0e3:	ror    bh,1
  40f0e5:	sbb    edi,DWORD PTR [edx+0x1b]
  40f0e8:	push   ebp
  40f0e9:	nop
  40f0ea:	iret   
  40f0eb:	adc    BYTE PTR [ecx],bh
  40f0ed:	cmp    edx,ebp
  40f0ef:	mov    dh,0xab
  40f0f1:	mov    WORD PTR [edx+0x1aa40578],cs
  40f0f7:	add    cl,BYTE PTR [ebp+eax*2-0x55]
  40f0fb:	test   dh,bl
  40f0fd:	mov    ebx,0x908d3f83
  40f102:	sub    DWORD PTR [ebx-0x5e821d29],edi
  40f108:	and    BYTE PTR [ebp+0x52],al
  40f10b:	loope  0x40f183
  40f10d:	and    al,0xb2
  40f10f:	shl    DWORD PTR [ebp+0x53],cl
  40f112:	jmp    0x40f135
  40f114:	cmp    BYTE PTR ds:[ebx+esi*1+0x58],dl
  40f119:	adc    eax,DWORD PTR [ecx]
  40f11b:	jae    0x40f177
  40f11d:	lods   eax,DWORD PTR ds:[esi]
  40f11e:	jb     0x40f10c
  40f120:	add    eax,0x4c265e78
  40f125:	das    
  40f126:	imul   edi,DWORD PTR [ebp-0x1c],0x5f693296
  40f12d:	out    dx,al
  40f12e:	jb     0x40f11f
  40f130:	ja     0x40f198
  40f132:	into   
  40f133:	sar    DWORD PTR [esi+0x635b82b7],1
  40f139:	nop
  40f13a:	mov    al,BYTE PTR [ebx-0x6c]
  40f13d:	cmp    BYTE PTR [ebx],al
  40f13f:	sub    eax,0x4cd58fab
  40f144:	mov    edx,DWORD PTR [edx-0x1bf69f6]
  40f14a:	pop    edx
  40f14b:	outs   dx,DWORD PTR ds:[esi]
  40f14c:	jl     0x40f163
  40f14e:	or     al,0xa1
  40f150:	adc    ecx,esp
  40f152:	std    
  40f153:	xlat   BYTE PTR ds:[ebx]
  40f154:	cmp    eax,0xfd268eaf
  40f159:	int    0x10
  40f15b:	jnp    0x40f0f7
  40f15d:	fwait
  40f15e:	bound  edi,QWORD PTR [eax+0x448db0e1]
  40f164:	push   edi
  40f165:	inc    esi
  40f166:	mov    cl,0xbb
  40f168:	mov    dh,0xad
  40f16a:	jmp    0x884751ce
  40f16f:	mov    ecx,0x64e16cad
  40f174:	mov    ecx,0xfc176213
  40f179:	addr16 mov ah,0xb4
  40f17c:	dec    ecx
  40f17d:	das    
  40f17e:	or     eax,0xb9753b22
  40f183:	fistp  DWORD PTR [esi-0x7c0140f5]
  40f189:	into   
  40f18a:	jmp    DWORD PTR [eax-0x76]
  40f18d:	aaa    
  40f18e:	add    DWORD PTR [ecx*4-0x650d89c5],esp
  40f195:	aas    
  40f196:	pop    ebx
  40f197:	mov    ebp,DWORD PTR [eax]
  40f199:	xchg   ebp,eax
  40f19a:	jg     0x40f16b
  40f19c:	(bad)  
  40f19e:	lods   al,BYTE PTR ds:[esi]
  40f19f:	push   ss
  40f1a0:	push   edx
  40f1a1:	and    BYTE PTR [ecx-0x8],0x1e
  40f1a5:	popf   
  40f1a6:	push   esi
  40f1a7:	dec    edi
  40f1a8:	retf   0x3e0f
  40f1ab:	pop    ss
  40f1ac:	pushf  
  40f1ad:	mov    WORD PTR [esi],ss
  40f1af:	(bad)  
  40f1b1:	jae    0x40f15d
  40f1b3:	xchg   edx,eax
  40f1b4:	mov    bh,0xa2
  40f1b6:	mov    dl,0xd4
  40f1b8:	pop    eax
  40f1b9:	daa    
  40f1ba:	push   ebx
  40f1bb:	push   edx
  40f1bc:	add    DWORD PTR [ebx-0x25],ebx
  40f1bf:	mov    dl,0xdb
  40f1c1:	mov    esp,0xec23bf28
  40f1c6:	sbb    DWORD PTR [eax-0x13],ebx
  40f1c9:	cmp    BYTE PTR [ecx],al
  40f1cb:	pop    edi
  40f1cc:	cmp    eax,0x8c1e8f8d
  40f1d1:	sub    al,0xc9
  40f1d3:	fwait
  40f1d4:	test   eax,0x27e45a0b
  40f1d9:	cs mov esi,0xd20d551d
  40f1df:	neg    ebp
  40f1e1:	fiadd  DWORD PTR [eax]
  40f1e3:	mov    bh,0xa1
  40f1e5:	lods   eax,DWORD PTR ds:[esi]
  40f1e6:	push   0x5
  40f1e8:	xor    eax,0xa7240abe
  40f1ed:	add    DWORD PTR [edx-0x6a],esp
  40f1f0:	ja     0x40f215
  40f1f2:	aas    
  40f1f3:	rcl    bh,1
  40f1f5:	xchg   esi,edx
  40f1f7:	push   cs
  40f1f8:	push   eax
  40f1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1fa:	xchg   ebp,eax
  40f1fb:	mov    bl,BYTE PTR gs:[ecx-0x5a]
  40f1ff:	mov    dl,0x64
  40f201:	mov    edx,0xc6ce0f68
  40f206:	pop    ebp
  40f207:	sub    bl,BYTE PTR ss:[ecx+0x64]
  40f20b:	std    
  40f20c:	aas    
  40f20d:	iret   
  40f20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f20f:	sbb    BYTE PTR [edx+0x57cfb253],0x20
  40f216:	pop    esi
  40f217:	sub    BYTE PTR [esi-0x5d],dl
  40f21a:	ret    0xcb02
  40f21d:	loopne 0x40f292
  40f21f:	push   esp
  40f220:	pop    edx
  40f222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f223:	in     eax,0x5d
  40f225:	add    BYTE PTR [ebx+0x6a098074],bh
  40f22b:	xchg   ecx,eax
  40f22c:	or     al,0x9f
  40f22e:	push   ebx
  40f22f:	mov    ds:0x4427500e,eax
  40f234:	leave  
  40f235:	mov    dl,0x7a
  40f237:	es jg  0x40f258
  40f23a:	in     eax,0x38
  40f23c:	int3   
  40f23d:	xchg   BYTE PTR [eax+0x7d],ch
  40f240:	dec    edx
  40f241:	xor    al,0x89
  40f243:	(bad)  
  40f244:	mov    ah,0xcc
  40f246:	jb     0x40f277
  40f248:	or     al,0xb2
  40f24a:	jmp    0x40f1ee
  40f24c:	xor    eax,0xfbe02a7c
  40f251:	xchg   esi,eax
  40f252:	popa   
  40f253:	jb     0x40f1ec
  40f255:	out    dx,eax
  40f256:	jp     0x40f25e
  40f258:	fadd   QWORD PTR [esi-0xbababe2]
  40f25e:	add    BYTE PTR [ebx+0x60cc35cc],0x1b
  40f265:	mov    edi,0xaab9770
  40f26a:	mov    dl,0x57
  40f26c:	stos   DWORD PTR es:[edi],eax
  40f26d:	mov    edx,0xba53b367
  40f272:	pop    ecx
  40f273:	mov    esi,0x77563bb0
  40f278:	xchg   ebp,eax
  40f279:	aaa    
  40f27a:	sar    eax,0xfd
  40f27d:	mov    dl,0xba
  40f27f:	mov    esi,0xd0c1410c
  40f284:	add    al,0xbf
  40f286:	out    dx,al
  40f287:	jmp    0x40f240
  40f289:	scas   al,BYTE PTR es:[edi]
  40f28a:	mov    esp,0xcc362683
  40f28f:	dec    edi
  40f290:	dec    edi
  40f291:	jns    0x40f235
  40f293:	dec    edx
  40f294:	outs   dx,BYTE PTR ds:[esi]
  40f295:	cwde   
  40f296:	loop   0x40f30b
  40f298:	gs cdq 
  40f29a:	or     ebx,esp
  40f29c:	aam    0x0
  40f29e:	repnz out 0x13,al
  40f2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a2:	addr16 xor eax,0x1ca12e11
  40f2a8:	sbb    DWORD PTR [eax],esp
  40f2aa:	lea    esi,[edi-0x2e]
  40f2ad:	adc    al,0xb8
  40f2af:	loope  0x40f27a
  40f2b1:	push   edi
  40f2b2:	in     al,0xfa
  40f2b4:	fs pop esi
  40f2b6:	cmp    ah,BYTE PTR [eax-0x302c18ef]
  40f2bc:	gs ss ret 
  40f2bf:	or     eax,0xb960637a
  40f2c4:	loopne 0x40f24d
  40f2c6:	cmp    BYTE PTR [ecx+0x18e315fa],dl
  40f2cc:	retf   
  40f2cd:	add    eax,0x8eded02f
  40f2d2:	loop   0x40f309
  40f2d4:	outs   dx,BYTE PTR ds:[esi]
  40f2d5:	(bad)  
  40f2d6:	xlat   BYTE PTR ds:[ebx]
  40f2d7:	fwait
  40f2d8:	aaa    
  40f2d9:	mov    ds:0xd1cd72d6,al
  40f2de:	inc    edx
  40f2df:	jmp    0x40f303
  40f2e1:	pop    edx
  40f2e2:	clc    
  40f2e3:	ficomp WORD PTR ds:0x514299ca
  40f2e9:	aas    
  40f2ea:	out    0xc,al
  40f2ec:	fwait
  40f2ed:	mov    ds:0xea69abf,al
  40f2f2:	dec    edi
  40f2f3:	fucomi st,st(7)
  40f2f5:	cmp    ebp,ecx
  40f2f7:	or     al,0xb0
  40f2f9:	pop    ss
  40f2fa:	pop    ss
  40f2fb:	inc    edx
  40f2fc:	mov    ds:0x51c9137c,eax
  40f301:	jge    0x40f349
  40f303:	daa    
  40f304:	add    al,ah
  40f306:	hlt    
  40f307:	mov    ah,0x66
  40f309:	xchg   esp,eax
  40f30a:	gs mov ebx,gs
  40f30d:	xor    eax,DWORD PTR [edx+0x4179ddac]
  40f313:	out    dx,eax
  40f314:	popa   
  40f315:	jmp    0x40f355
  40f317:	push   ebx
  40f318:	mov    bh,BYTE PTR [ebx+0x72]
  40f31b:	xchg   edi,eax
  40f31c:	in     eax,dx
  40f31d:	jl     0x40f39c
  40f31f:	test   DWORD PTR [edi+eiz*1-0x5b29dfb8],esp
  40f326:	imul   ebx,DWORD PTR [edi],0xa1345e32
  40f32c:	mov    edi,0x3e7ee790
  40f331:	xor    BYTE PTR [ecx-0x10ef6525],ch
  40f337:	enter  0x3023,0xcc
  40f33b:	shr    BYTE PTR [eax-0x15],cl
  40f33e:	jno    0x40f2e5
  40f340:	clc    
  40f341:	aas    
  40f342:	mov    ebp,ds
  40f344:	popa   
  40f345:	outs   dx,DWORD PTR ds:[esi]
  40f346:	js     0x40f33e
  40f348:	jmp    0xfbcd:0xa7cc421c
  40f34f:	mov    al,ds:0xcc51c3d3
  40f354:	mov    edx,0xf93a1bf1
  40f359:	sbb    eax,0x3b3024bb
  40f35e:	jmp    0x40f34a
  40f360:	push   ebx
  40f361:	mov    BYTE PTR [edx-0x73],0x3a
  40f365:	clc    
  40f366:	push   cs
  40f367:	inc    ebp
  40f368:	adc    BYTE PTR [edx+0xbef1eaf],al
  40f36e:	mov    ds:0x29547ec1,eax
  40f373:	neg    DWORD PTR [ecx]
  40f375:	ins    DWORD PTR es:[edi],dx
  40f376:	mov    al,ds:0x638eed6a
  40f37b:	mov    al,0xe
  40f37d:	xor    DWORD PTR [eax],esp
  40f37f:	jl     0x40f33f
  40f381:	(bad)
  40f384:	inc    esi
  40f385:	in     al,0x40
  40f387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f388:	stc    
  40f389:	loopne 0x40f324
  40f38b:	and    bl,BYTE PTR [esi-0x58]
  40f38e:	ja     0x40f384
  40f390:	mov    edx,0x628de143
  40f395:	sti    
  40f396:	popf   
  40f397:	aam    0xd9
  40f399:	adc    DWORD PTR [edx+edi*4+0x5a],ecx
  40f39d:	je     0x40f419
  40f39f:	pop    ss
  40f3a0:	shl    DWORD PTR [edi-0x45],1
  40f3a3:	sahf   
  40f3a4:	mov    ds:0x669cb668,eax
  40f3a9:	cmp    eax,0xa341d845
  40f3ae:	sub    al,0xc2
  40f3b0:	mov    al,ds:0x5da76708
  40f3b5:	test   al,0x28
  40f3b7:	cmp    edx,eax
  40f3b9:	sbb    esp,DWORD PTR [edi]
  40f3bb:	or     al,BYTE PTR [esi+0x28]
  40f3be:	(bad)  
  40f3bf:	rcpps  xmm7,XMMWORD PTR [ebp+0x1cb2e0dc]
  40f3c6:	das    
  40f3c7:	int    0x5e
  40f3c9:	add    BYTE PTR [esi+0x33],0x54
  40f3cd:	cmp    DWORD PTR [ebx-0x51],ebp
  40f3d0:	lods   eax,DWORD PTR ds:[esi]
  40f3d1:	mov    edx,0x120e6fb5
  40f3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3d7:	dec    ebp
  40f3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d9:	rcr    al,0xd
  40f3dc:	stos   BYTE PTR es:[edi],al
  40f3dd:	xchg   edi,eax
  40f3de:	dec    edi
  40f3df:	push   edi
  40f3e0:	stos   DWORD PTR es:[edi],eax
  40f3e1:	dec    ebp
  40f3e2:	or     DWORD PTR [eax-0x2c9b062d],eax
  40f3e8:	test   eax,0xa03dcde5
  40f3ed:	outs   dx,DWORD PTR ds:[esi]
  40f3ee:	mov    eax,0x46406609
  40f3f3:	loope  0x40f443
  40f3f5:	test   BYTE PTR [ebp-0x1e48a77f],cl
  40f3fb:	call   DWORD PTR [eax-0x21ea2e51]
  40f401:	push   ebp
  40f402:	lds    ecx,FWORD PTR [eax-0x28]
  40f405:	in     eax,0xa2
  40f407:	call   0x18b8:0x71b23ce3
  40f40e:	dec    ebp
  40f40f:	push   ebx
  40f410:	dec    esi
  40f411:	sub    al,0x50
  40f413:	shl    DWORD PTR [ebx],0xc
  40f416:	xor    ch,ch
  40f418:	jmp    0x5f9dfd2d
  40f41d:	into   
  40f41e:	mov    dh,0x9c
  40f420:	mov    ecx,0x2b5eae48
  40f425:	imul   si,bx,0x1d9b
  40f42a:	sub    BYTE PTR [ebp-0x6d8ad646],dl
  40f430:	mov    BYTE PTR [edi+0x30],cl
  40f433:	(bad)  
  40f434:	jae    0x40f409
  40f436:	test   DWORD PTR [esi],0x1b9fab8a
  40f43c:	xchg   BYTE PTR [edx+0x70],cl
  40f43f:	inc    ebp
  40f440:	adc    dh,BYTE PTR [edx-0x64]
  40f443:	sub    DWORD PTR [edi+0x4c43dc2f],esp
  40f449:	push   0x3b0b19b
  40f44e:	jecxz  0x40f416
  40f450:	mov    eax,ds:0x71d0b2b4
  40f455:	shl    DWORD PTR cs:[edx],cl
  40f458:	stc    
  40f459:	in     al,0x49
  40f45b:	pop    edi
  40f45c:	int3   
  40f45d:	xchg   ecx,eax
  40f45e:	clc    
  40f45f:	out    dx,eax
  40f460:	sub    eax,0x4760691a
  40f465:	loopne 0x40f4bf
  40f467:	leave  
  40f468:	dec    esp
  40f469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f46a:	adc    DWORD PTR [eax],ebp
  40f46c:	xor    DWORD PTR [edx+0x3e],ebx
  40f46f:	cld    
  40f470:	pop    edx
  40f471:	fs inc ebp
  40f473:	in     eax,dx
  40f474:	mov    eax,0x806d0a99
  40f479:	leave  
  40f47a:	fwait
  40f47b:	fs mov ebp,0xc7ee3e8b
  40f481:	js     0x40f465
  40f483:	(bad)  
  40f484:	sbb    BYTE PTR [ebx-0x3d],dl
  40f487:	and    DWORD PTR [ecx],0x7d
  40f48a:	cdq    
  40f48b:	(bad)  
  40f48c:	scas   al,BYTE PTR es:[edi]
  40f48d:	mov    ds:0xee1c55b6,eax
  40f492:	test   BYTE PTR [esi-0x5ae21d13],dh
  40f498:	xor    al,0x2a
  40f49a:	push   esi
  40f49b:	ret    0x6b47
  40f49e:	pop    esp
  40f49f:	sar    ebp,1
  40f4a1:	add    BYTE PTR [edx+0x59],ah
  40f4a4:	nop
  40f4a5:	jbe    0x40f4fd
  40f4a7:	cwde   
  40f4a8:	push   ds
  40f4a9:	int3   
  40f4aa:	bound  esp,QWORD PTR [ecx+0x70e48586]
  40f4b0:	push   esi
  40f4b1:	cmp    al,0x1d
  40f4b3:	sbb    bl,BYTE PTR [eax]
  40f4b5:	mov    ebx,0x88997206
  40f4ba:	sub    BYTE PTR [eax+0x264d9397],0x12
  40f4c1:	cmp    esp,DWORD PTR [edi+eiz*4]
  40f4c4:	push   ecx
  40f4c5:	sahf   
  40f4c6:	xchg   ecx,eax
  40f4c7:	popf   
  40f4c8:	out    dx,al
  40f4c9:	js     0x40f46d
  40f4cb:	into   
  40f4cc:	xor    al,0x70
  40f4ce:	and    al,0xe8
  40f4d0:	sub    eax,0xfc211251
  40f4d5:	ins    DWORD PTR es:[edi],dx
  40f4d6:	aam    0x42
  40f4d8:	fisubr WORD PTR fs:[ebx+0x91c3a2c]
  40f4df:	sub    al,0x16
  40f4e1:	in     eax,0x7e
  40f4e3:	or     al,0x1f
  40f4e5:	repz popa 
  40f4e7:	ret    
  40f4e8:	pop    es
  40f4e9:	xchg   DWORD PTR fs:0x36f899fb,edx
  40f4f0:	and    eax,DWORD PTR [ebx+0x22c95fa7]
  40f4f6:	push   eax
  40f4f7:	test   DWORD PTR [eax+0x12],0xb8b66bdd
  40f4fe:	mov    ebp,0xad447444
  40f503:	xchg   edi,eax
  40f504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f505:	ins    BYTE PTR es:[edi],dx
  40f506:	repnz sub DWORD PTR [edx+eax*4-0x45e32afe],edx
  40f50e:	mov    ds:0x429bcef5,eax
  40f513:	inc    esi
  40f514:	sbb    edi,ebx
  40f516:	popf   
  40f517:	imul   edx,DWORD PTR [ebx],0xffffffd2
  40f51a:	xor    al,0x90
  40f51c:	pop    ebp
  40f51d:	cmp    eax,DWORD PTR [edx+0x5ed950bd]
  40f523:	lock mov ch,0x6e
  40f526:	push   cs
  40f527:	push   es
  40f528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f529:	cmp    al,0x6b
  40f52b:	fadd   DWORD PTR [edx+0x3949eab2]
  40f531:	out    0x8b,eax
  40f533:	lds    edi,FWORD PTR [ebx-0x435da8fe]
  40f539:	sahf   
  40f53a:	inc    esp
  40f53b:	sub    eax,0x76d8e0fc
  40f540:	in     al,0x44
  40f542:	push   cs
  40f543:	xor    BYTE PTR [ebp+0x76],al
  40f546:	push   ebp
  40f547:	(bad)  
  40f548:	(bad)  
  40f54a:	mov    cs,WORD PTR [esi]
  40f54c:	add    bl,BYTE PTR [ebp+0x22]
  40f54f:	(bad)  
  40f550:	dec    edx
  40f551:	call   0xc43b:0xc3b9e0c
  40f558:	mov    ebx,0x4e8bde61
  40f55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f55e:	xor    ecx,DWORD PTR [edx+ebx*8+0x75]
  40f562:	push   esi
  40f563:	enter  0xbcea,0x4b
  40f567:	int    0x51
  40f569:	sbb    dl,dl
  40f56b:	loop   0x40f598
  40f56d:	ss xchg ecx,eax
  40f56f:	jno    0x40f5c1
  40f571:	sbb    eax,0xf9a59867
  40f576:	cmp    eax,0xf4659277
  40f57b:	pushf  
  40f57c:	or     BYTE PTR [ebx],0xd2
  40f57f:	fstp   TBYTE PTR [esi]
  40f581:	ret    
  40f582:	xchg   edx,eax
  40f583:	xchg   esi,eax
  40f584:	mov    ds:0x6015537c,al
  40f589:	mov    bl,0xf9
  40f58b:	call   0x4c9f:0xf352b8fd
  40f592:	jecxz  0x40f5f4
  40f594:	call   0xe59fd659
  40f599:	mov    eax,0xf973beda
  40f59e:	(bad)  
  40f59f:	jge    0x40f52a
  40f5a1:	sbb    al,0x68
  40f5a3:	jge    0x40f52b
  40f5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a6:	and    DWORD PTR [edx+0x1b],0xffffff8f
  40f5aa:	xor    eax,0x7ea2ef44
  40f5af:	jbe    0x40f5e1
  40f5b1:	shl    BYTE PTR [ecx-0x1],1
  40f5b4:	in     eax,dx
  40f5b5:	jne    0x40f5ba
  40f5b7:	mov    DWORD PTR [ecx-0x25fee45c],eax
  40f5bd:	mov    ebp,0x25375d50
  40f5c2:	pop    edi
  40f5c3:	jo     0x40f600
  40f5c5:	pop    ebx
  40f5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5c7:	push   0x75760987
  40f5cc:	scas   eax,DWORD PTR es:[edi]
  40f5cd:	les    esp,FWORD PTR [edi]
  40f5cf:	push   edi
  40f5d0:	pop    edx
  40f5d1:	add    DWORD PTR [edx],esi
  40f5d3:	retf   
  40f5d4:	jbe    0x40f585
  40f5d6:	and    al,ah
  40f5d8:	sub    al,0x67
  40f5da:	xor    eax,0x7567fff4
  40f5df:	mov    ebx,0x5947e2fc
  40f5e4:	test   BYTE PTR [ebx+ebx*2-0x4747b6ac],bh
  40f5eb:	repnz xor dh,BYTE PTR [ebx+0x3ef475d9]
  40f5f2:	sar    BYTE PTR ds:0x63a7d368,1
  40f5f8:	xchg   BYTE PTR [esi+eax*2-0x5e],dl
  40f5fc:	cwde   
  40f5fd:	pop    es
  40f5fe:	xor    edi,ebp
  40f600:	jb     0x40f643
  40f602:	lea    ebx,ds:0x830bd703
  40f608:	xchg   edi,eax
  40f609:	cli    
  40f60a:	mov    esp,0xdcd287ee
  40f60f:	push   ecx
  40f610:	and    al,0x3f
  40f612:	adc    ebx,ebx
  40f614:	pop    ebp
  40f615:	mov    edi,0x86b6b52c
  40f61a:	push   es
  40f61b:	cmp    eax,0x9fa66e14
  40f620:	or     ebp,0xf3ef66d5
  40f626:	(bad)  
  40f627:	mov    ecx,0x99170179
  40f62c:	xor    dl,BYTE PTR [edx]
  40f62e:	cmp    BYTE PTR [ecx-0x1f],bl
  40f631:	lahf   
  40f632:	mov    ch,0xde
  40f634:	mov    eax,ds:0xfc3e2ad2
  40f639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f63a:	rol    DWORD PTR fs:[edx],0x22
  40f63e:	and    DWORD PTR [edi-0x4f4f7e12],eax
  40f644:	cmp    DWORD PTR [ecx+0x71],edx
  40f647:	loop   0x40f5d7
  40f649:	es sub eax,0x5bc52bf4
  40f64f:	jle    0x40f6a2
  40f651:	popf   
  40f652:	stos   BYTE PTR es:[edi],al
  40f653:	push   es
  40f654:	xchg   esp,eax
  40f655:	dec    ecx
  40f656:	jae    0x40f5f0
  40f658:	jmp    0x40f699
  40f65a:	mov    eax,0xb84238a
  40f65f:	xor    DWORD PTR [edx-0x569e7e56],ecx
  40f665:	cwde   
  40f666:	xchg   BYTE PTR [esi+ebx*1-0x7f7305d3],al
  40f66d:	dec    edi
  40f66e:	xchg   esi,eax
  40f66f:	loope  0x40f677
  40f671:	test   BYTE PTR [edx+0x28],dh
  40f674:	pop    ebx
  40f675:	lahf   
  40f676:	dec    eax
  40f677:	fwait
  40f678:	adc    esp,DWORD PTR [ebx+0x34]
  40f67b:	fs push ss
  40f67d:	loop   0x40f60d
  40f67f:	xchg   BYTE PTR [eax+0x14661c2a],ah
  40f685:	sub    edi,DWORD PTR [ebx-0x696086d3]
  40f68b:	into   
  40f68c:	and    eax,0xb0aa8a39
  40f691:	mov    edi,0x4f66a47a
  40f696:	int    0x82
  40f698:	mov    ebp,0xd3591525
  40f69d:	mov    edx,0xe9c70310
  40f6a2:	shl    DWORD PTR [eax+eax*1],cl
  40f6a5:	add    BYTE PTR [ebx+0x4503c845],cl
  40f6ab:	or     BYTE PTR [ecx+0x458be845],cl
  40f6b1:	in     al,0x85
  40f6b3:	ror    BYTE PTR [edi],0x84
  40f6b6:	dec    eax
  40f6b7:	and    al,0x0
  40f6b9:	add    bh,al
  40f6bb:	inc    ebp
  40f6bc:	loopne 0x40f6be
  40f6be:	add    BYTE PTR [eax],al
  40f6c0:	add    BYTE PTR [edx+0x3],ch
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x6034bf0
  40f71a:	add    ch,BYTE PTR es:[esi+0x5ce88383]
  40f721:	add    DWORD PTR [ebx-0x127372b9],0xffffff83
  40f728:	mov    eax,edi
  40f72a:	sbb    al,0x8b
  40f72c:	shl    DWORD PTR [ebp-0x2a],cl
  40f72f:	pop    edx
  40f730:	jmp    0x40f6b6
  40f732:	xchg   edx,eax
  40f733:	or     esi,DWORD PTR [edi+eiz*1+0x5cb7ce79]
  40f73a:	sti    
  40f73b:	imul   edx,DWORD PTR [edx],0x63
  40f73e:	aam    0x85
  40f740:	xor    eax,0x84e3027
  40f745:	cmp    ch,BYTE PTR [eax]
  40f747:	pop    es
  40f748:	cdq    
  40f749:	aam    0x4d
  40f74b:	jl     0x40f7ba
  40f74d:	mov    esp,0x6b28910e
  40f752:	or     al,0x36
  40f754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f755:	pop    edx
  40f756:	es mov bh,0xf9
  40f759:	dec    ebx
  40f75a:	or     DWORD PTR [edx+edx*8+0x7a],esi
  40f75e:	pop    ss
  40f75f:	pushf  
  40f760:	adc    al,0x44
  40f762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f763:	inc    ecx
  40f764:	aam    0x8e
  40f766:	inc    edi
  40f767:	outs   dx,BYTE PTR ds:[esi]
  40f768:	loope  0x40f795
  40f76a:	sbb    ebx,edi
  40f76c:	hlt    
  40f76d:	test   eax,0xadef7cfb
  40f772:	jb     0x40f75c
  40f774:	stos   DWORD PTR es:[edi],eax
  40f775:	jns    0x40f76e
  40f777:	retfw  0x2272
  40f77b:	cmp    al,0xd8
  40f77d:	add    DWORD PTR [ebp-0x3a],ebp
  40f780:	aaa    
  40f781:	jmp    0xa03bcafe
  40f786:	push   edx
  40f787:	std    
  40f788:	inc    esp
  40f789:	std    
  40f78a:	repnz jecxz 0x40f7c0
  40f78d:	fst    QWORD PTR [edx+edx*2+0x1bdf4cf2]
  40f794:	pop    es
  40f795:	imul   esp,DWORD PTR [ecx+0x6674003b],0xffffffa2
  40f79c:	xchg   esi,eax
  40f79d:	cmp    ecx,edi
  40f79f:	mov    cl,0x94
  40f7a1:	loope  0x40f7c2
  40f7a3:	test   DWORD PTR [edi+0x7416e7ff],0x6c6a8de9
  40f7ad:	mov    edx,0x9b3427c8
  40f7b2:	or     eax,0xd4cb159c
  40f7b7:	out    0x8a,eax
  40f7b9:	out    0x43,al
  40f7bb:	push   esp
  40f7bc:	add    edx,esi
  40f7be:	xor    esp,DWORD PTR [ebp-0xc]
  40f7c1:	retf   
  40f7c2:	sub    esi,ebx
  40f7c4:	rol    bl,1
  40f7c6:	cwde   
  40f7c7:	or     esi,DWORD PTR [ecx]
  40f7c9:	jecxz  0x40f753
  40f7cb:	out    dx,eax
  40f7cc:	pop    esp
  40f7cd:	call   0x544cabc1
  40f7d2:	fcom   DWORD PTR [ecx+0x11]
  40f7d5:	cmc    
  40f7d6:	add    esi,DWORD PTR [ebx+eiz*2]
  40f7d9:	fidivr WORD PTR ds:0x567d7f46
  40f7df:	ss and eax,0x10b2484f
  40f7e5:	test   DWORD PTR [ebx+edi*2],ebx
  40f7e8:	gs jmp 0x177c5b89
  40f7ee:	pop    eax
  40f7ef:	cmp    BYTE PTR [ecx-0xa],dl
  40f7f2:	jge    0x40f77a
  40f7f4:	inc    eax
  40f7f5:	adc    ah,BYTE PTR [eax]
  40f7f7:	into   
  40f7f8:	fwait
  40f7f9:	call   0x4d2b66fe
  40f7fe:	mov    cl,0x9e
  40f800:	xchg   edi,eax
  40f801:	mov    eax,ds:0x59d6138
  40f806:	sub    al,0x11
  40f808:	repz push es
  40f80a:	aad    0x36
  40f80c:	xchg   ebx,eax
  40f80d:	pop    ds
  40f80e:	jecxz  0x40f7cd
  40f810:	mov    eax,ds:0x3e099d0e
  40f815:	loopne 0x40f7f7
  40f817:	(bad)  
  40f819:	div    ah
  40f81b:	psraw  mm4,QWORD PTR [edx]
  40f81e:	fsub   st,st(3)
  40f820:	cmp    DWORD PTR ds:0x9a3b4ef0,esp
  40f826:	in     eax,0x15
  40f828:	inc    esi
  40f829:	cs in  al,0xd6
  40f82c:	ret    
  40f82d:	xor    dh,BYTE PTR [ecx+0x79]
  40f830:	loope  0x40f825
  40f832:	mov    bh,0x62
  40f834:	add    ecx,DWORD PTR [ebp+0x2675ec91]
  40f83a:	pop    eax
  40f83b:	(bad)  
  40f83c:	jl     0x40f885
  40f83e:	xor    ecx,eax
  40f840:	jbe    0x40f896
  40f842:	icebp  
  40f843:	jl     0x40f8bb
  40f845:	xchg   BYTE PTR [ecx-0x62],ah
  40f848:	stc    
  40f849:	daa    
  40f84a:	cld    
  40f84b:	data16 mov ch,0x67
  40f84e:	inc    eax
  40f84f:	sti    
  40f850:	lods   eax,DWORD PTR ds:[esi]
  40f851:	(bad)  
  40f852:	(bad)  
  40f853:	push   edx
  40f854:	cmp    ebx,DWORD PTR [edx]
  40f856:	or     ecx,ebp
  40f858:	hlt    
  40f859:	and    DWORD PTR [ebp+0x78],ebp
  40f85c:	cmc    
  40f85d:	ret    
  40f85e:	xchg   ebp,eax
  40f85f:	push   ecx
  40f860:	imul   edi,DWORD PTR [ecx-0x30],0x89b219c8
  40f867:	imul   ecx,DWORD PTR [edi],0xb8686102
  40f86d:	retf   0x1c0a
  40f870:	out    0xef,eax
  40f872:	pop    ebp
  40f873:	and    al,0x7c
  40f875:	sti    
  40f876:	add    DWORD PTR [edx+0xd],edi
  40f879:	dec    ecx
  40f87a:	dec    esi
  40f87b:	ficom  WORD PTR [ebx+ebp*2-0x13404dbf]
  40f882:	fst    DWORD PTR [ebx]
  40f884:	outs   dx,DWORD PTR ds:[esi]
  40f885:	xchg   edi,ebx
  40f887:	push   edx
  40f888:	xlat   BYTE PTR ds:[ebx]
  40f889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f88a:	ins    BYTE PTR es:[edi],dx
  40f88b:	shl    bl,0xdc
  40f88e:	jg     0x40f8ff
  40f890:	popa   
  40f891:	inc    edx
  40f892:	jmp    FWORD PTR [ebx]
  40f894:	sar    BYTE PTR [esi+0xdfed233],0xa2
  40f89b:	inc    ebp
  40f89c:	(bad)  
  40f89d:	test   BYTE PTR ds:0xbe2a3fa0,dh
  40f8a3:	test   al,0x3d
  40f8a5:	iret   
  40f8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8a7:	adc    eax,0x87958bb0
  40f8ac:	sar    BYTE PTR [edi+0x3c],0x61
  40f8b0:	imul   esi,esi,0x64
  40f8b3:	jle    0x40f8ff
  40f8b5:	xchg   ebp,eax
  40f8b6:	adc    al,0xa0
  40f8b8:	rcl    bl,1
  40f8ba:	jecxz  0x40f881
  40f8bc:	lods   eax,DWORD PTR ds:[esi]
  40f8bd:	test   DWORD PTR [edx+0x3a904fb0],edi
  40f8c3:	add    eax,0x6c1f0c99
  40f8c8:	mov    bh,0xa8
  40f8ca:	xor    eax,0xc3cc9b60
  40f8cf:	pop    esp
  40f8d0:	jnp    0x40f89b
  40f8d2:	xchg   edi,eax
  40f8d3:	jmp    0x624e7c1b
  40f8d8:	jmp    0xca71:0x8184099f
  40f8df:	pop    ebp
  40f8e0:	test   al,0xad
  40f8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e3:	or     ah,BYTE PTR [ecx]
  40f8e5:	add    al,0x3
  40f8e7:	xor    dh,BYTE PTR [ebp-0x5a9c2836]
  40f8ed:	mov    ebx,0x47e73f8e
  40f8f2:	(bad)
  40f8f5:	sub    bh,BYTE PTR [ebx]
  40f8f7:	sar    DWORD PTR [ecx+0x1e],1
  40f8fa:	add    edx,DWORD PTR [ebx-0x46edba30]
  40f900:	adc    cl,BYTE PTR [edx-0x547b7a13]
  40f906:	xchg   BYTE PTR [ecx-0x60],dh
  40f909:	mov    WORD PTR [edi-0x526b3f20],?
  40f90f:	int    0xa0
  40f911:	out    0x82,al
  40f913:	into   
  40f914:	sub    ebp,DWORD PTR [edx+0xb]
  40f917:	xor    bh,BYTE PTR [edi*8-0x5d4760dd]
  40f91e:	mov    ebx,0x17c03ae9
  40f923:	outs   dx,BYTE PTR ds:[esi]
  40f924:	pop    ss
  40f925:	dec    esp
  40f926:	add    DWORD PTR [eax+ebx*2],0xffffffb9
  40f92a:	dec    ebx
  40f92b:	dec    eax
  40f92c:	sub    BYTE PTR [edx],al
  40f92e:	or     ah,bh
  40f930:	xchg   edx,eax
  40f931:	mov    bl,dh
  40f933:	mov    al,0xa8
  40f935:	jno    0x40f999
  40f937:	fisub  WORD PTR [esi-0xae7942b]
  40f93d:	add    al,0x77
  40f93f:	ds ds mov edx,0x8fe22e1f
  40f946:	cmp    dh,BYTE PTR [edi]
  40f948:	(bad)  
  40f949:	push   0xfffffffe
  40f94b:	xor    al,0x8e
  40f94d:	jne    0x40f8ee
  40f94f:	jmp    0xbb3d:0x181a68f4
  40f956:	dec    ecx
  40f957:	fist   DWORD PTR [esi+0x2f]
  40f95a:	fist   DWORD PTR [edx]
  40f95c:	int    0xdf
  40f95e:	imul   esi,DWORD PTR [edi],0xffffffed
  40f961:	mov    cl,0xa4
  40f963:	test   eax,0x9ddacccf
  40f968:	or     al,0x6d
  40f96a:	daa    
  40f96b:	(bad)
  40f96e:	in     al,dx
  40f96f:	xchg   edi,eax
  40f970:	les    ebp,FWORD PTR [edi-0x6]
  40f973:	addr16 jg 0x40f919
  40f976:	sub    al,0xf5
  40f978:	and    BYTE PTR [esi],0x32
  40f97b:	cmp    DWORD PTR [edi+0x78866182],esp
  40f981:	or     esp,ebx
  40f983:	xlat   BYTE PTR ds:[ebx]
  40f984:	lahf   
  40f985:	or     edi,eax
  40f987:	pop    ebx
  40f988:	loopne 0x40f9a9
  40f98a:	xor    cl,al
  40f98c:	sbb    cl,BYTE PTR [ebp-0x79]
  40f98f:	dec    esp
  40f990:	jb     0x40f970
  40f992:	push   cs
  40f993:	jmp    DWORD PTR [edx-0x37fba0e3]
  40f999:	dec    ebp
  40f99a:	out    dx,al
  40f99b:	jns    0x40f9b4
  40f99d:	xchg   edx,eax
  40f99e:	imul   edx,edi,0xffffffed
  40f9a1:	ret    
  40f9a2:	stc    
  40f9a3:	xor    DWORD PTR [eax],0x1fd7cd7d
  40f9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9aa:	je     0x40f98f
  40f9ac:	or     BYTE PTR ds:0x3f46dbb9,dh
  40f9b2:	jae    0x40f93e
  40f9b4:	adc    al,0xc6
  40f9b6:	adc    al,0x96
  40f9b8:	push   0xe575edbd
  40f9bd:	les    ebp,FWORD PTR [eax]
  40f9bf:	pop    ss
  40f9c0:	cmp    eax,DWORD PTR [edx+0x13e3e5b6]
  40f9c6:	adc    eax,0xbd15d189
  40f9cb:	idiv   BYTE PTR [ebx]
  40f9cd:	hlt    
  40f9ce:	add    DWORD PTR [ebp-0x37f376e9],ecx
  40f9d4:	xlat   BYTE PTR ds:[ebx]
  40f9d5:	fist   WORD PTR [ecx]
  40f9d7:	mov    esp,0x422e23c
  40f9dc:	inc    ecx
  40f9dd:	push   edi
  40f9de:	fnstenv [edi]
  40f9e0:	test   BYTE PTR [edi+0x6d],0xe5
  40f9e4:	dec    eax
  40f9e5:	addr16 cld 
  40f9e7:	pop    ebp
  40f9e8:	add    dh,0x38
  40f9eb:	test   al,0x75
  40f9ed:	enter  0xf089,0xd3
  40f9f1:	pop    es
  40f9f2:	es out 0xda,eax
  40f9f5:	dec    edx
  40f9f6:	(bad)  
  40f9f7:	mov    bh,0xd0
  40f9f9:	scas   eax,DWORD PTR es:[edi]
  40f9fa:	or     dh,BYTE PTR [eax]
  40f9fc:	nop
  40f9fd:	aad    0xe0
  40f9ff:	and    ah,ah
  40fa01:	icebp  
  40fa02:	in     al,dx
  40fa03:	cmp    bl,BYTE PTR [edx-0x1d]
  40fa06:	mov    ds:0x8e9a0760,eax
  40fa0b:	push   0x6534707
  40fa10:	loop   0x40fa01
  40fa12:	inc    esp
  40fa13:	jecxz  0x40f99c
  40fa15:	push   ebp
  40fa16:	stos   DWORD PTR es:[edi],eax
  40fa17:	jo     0x40fa29
  40fa19:	mov    ebp,0x32e09930
  40fa1e:	inc    edx
  40fa1f:	mov    esi,0x1aebbdb9
  40fa24:	test   DWORD PTR [esi+0x5f],eax
  40fa27:	mov    dh,BYTE PTR [edi+0x1e7625f]
  40fa2d:	cmp    BYTE PTR [ebx+ebp*4+0x58],0xd5
  40fa32:	inc    esi
  40fa33:	sbb    dl,BYTE PTR [edi+ecx*8-0x39045fb2]
  40fa3a:	fbstp  TBYTE PTR [esi+0x37b1088f]
  40fa40:	js     0x40f9f1
  40fa42:	sub    ah,0x36
  40fa45:	and    eax,ebx
  40fa47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa48:	add    al,0x34
  40fa4a:	add    BYTE PTR [edx-0x3b],dl
  40fa4d:	in     eax,dx
  40fa4e:	sbb    BYTE PTR [edi-0x7],0x2a
  40fa52:	enter  0xc7f6,0xbe
  40fa56:	mov    eax,0x3f707e7f
  40fa5b:	popa   
  40fa5c:	lea    ecx,[ecx-0x3121db14]
  40fa62:	dec    esp
  40fa63:	mov    ds:0x8f09d607,eax
  40fa68:	fidivr DWORD PTR [ecx+0x68]
  40fa6b:	xchg   ecx,eax
  40fa6c:	leave  
  40fa6d:	mov    bh,0x35
  40fa6f:	rol    BYTE PTR [ecx],0x65
  40fa72:	lock out 0x96,al
  40fa75:	and    dh,ch
  40fa77:	mul    BYTE PTR [eax+0x76]
  40fa7a:	cmp    BYTE PTR cs:[edx+edx*8+0x76],ch
  40fa7f:	ficomp WORD PTR [ebx-0x5c]
  40fa82:	stc    
  40fa83:	sbb    bh,BYTE PTR [eax-0x1b]
  40fa86:	or     al,0x3b
  40fa88:	popf   
  40fa89:	call   0xfb35:0x874856d6
  40fa90:	adc    DWORD PTR [ebx-0x550edc21],edx
  40fa96:	fwait
  40fa97:	sub    BYTE PTR [esi-0x199548a9],bh
  40fa9d:	lock popf 
  40fa9f:	ja     0x40faba
  40faa1:	inc    ecx
  40faa2:	xchg   ecx,eax
  40faa3:	xchg   dl,al
  40faa5:	or     BYTE PTR ds:[esi+0x5d],dh
  40faa9:	popf   
  40faaa:	stc    
  40faab:	pop    esp
  40faac:	xchg   edi,eax
  40faad:	mov    ds:0xf9e051b5,eax
  40fab2:	push   ecx
  40fab3:	sbb    DWORD PTR [ebx],ebp
  40fab5:	arpl   WORD PTR ds:0xe9e490dc,bx
  40fabb:	adc    edx,DWORD PTR [edi]
  40fabd:	sti    
  40fabe:	arpl   bp,sp
  40fac0:	call   0x7945cbdd
  40fac5:	outs   dx,BYTE PTR ds:[esi]
  40fac6:	xchg   ebx,eax
  40fac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fac8:	imul   ecx,ebx,0x77ef032f
  40face:	jo     0x40fa82
  40fad0:	add    bl,bh
  40fad2:	jne    0x40fac8
  40fad4:	mov    esi,0x9e6e6e0f
  40fad9:	and    DWORD PTR [ebx-0x6],0x8a0eaa5a
  40fae0:	cmp    cl,cl
  40fae2:	out    dx,al
  40fae3:	xchg   edi,eax
  40fae4:	or     DWORD PTR [esi-0xbe95f0d],ebp
  40faea:	jge    0x40fb16
  40faec:	call   0xd29bf8b4
  40faf1:	shl    DWORD PTR [eax+0x211868ca],1
  40faf7:	jp     0x40faa9
  40faf9:	and    al,0x90
  40fafb:	sbb    eax,0xf3f75573
  40fb00:	and    DWORD PTR [ebx+0x37],edx
  40fb03:	pop    edi
  40fb04:	dec    ebx
  40fb05:	out    0x2a,al
  40fb07:	call   0x29c8263e
  40fb0c:	ret    
  40fb0d:	pop    eax
  40fb0e:	add    ah,ah
  40fb10:	fisubr WORD PTR [ecx]
  40fb12:	push   0xffffffb5
  40fb14:	mov    dh,0x40
  40fb16:	jecxz  0x40faf4
  40fb18:	fld    TBYTE PTR [ecx+0x13917ea1]
  40fb1e:	inc    esi
  40fb1f:	mov    ah,0x3e
  40fb21:	xchg   esi,eax
  40fb22:	sti    
  40fb23:	popa   
  40fb24:	sub    al,0x45
  40fb26:	jno    0x40fad4
  40fb28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb29:	mov    al,0x5b
  40fb2b:	push   0x79c0913a
  40fb30:	sbb    ah,al
  40fb32:	nop
  40fb33:	js     0x40fb0a
  40fb35:	jge    0x40faff
  40fb37:	ins    BYTE PTR es:[edi],dx
  40fb38:	mov    ds:0x6dccf063,al
  40fb3d:	out    dx,eax
  40fb3e:	mov    ds,WORD PTR ds:[ebx+0x16df2f6d]
  40fb45:	mov    dl,0x72
  40fb47:	mov    ds:0x39db69ce,eax
  40fb4c:	add    ebx,eax
  40fb4e:	sub    bh,BYTE PTR [eax+0x1ba359f5]
  40fb54:	aas    
  40fb55:	out    dx,al
  40fb56:	pop    edi
  40fb57:	xor    BYTE PTR [eax-0x426bd52a],bh
  40fb5d:	pop    eax
  40fb5e:	sbb    dh,BYTE PTR [ecx-0x7d3ca481]
  40fb64:	cmp    DWORD PTR [ebx-0x73],ecx
  40fb67:	dec    esi
  40fb68:	repz jg 0x40fb93
  40fb6b:	pop    ebp
  40fb6c:	ds repnz xchg edx,eax
  40fb6f:	daa    
  40fb70:	mov    bl,0x2
  40fb72:	xchg   ebp,eax
  40fb73:	inc    edx
  40fb74:	sbb    eax,0x201d35ce
  40fb79:	inc    ebp
  40fb7a:	call   0x92c7:0x206b7609
  40fb81:	pop    ecx
  40fb82:	sub    eax,0x24750c6b
  40fb87:	jo     0x40fbd1
  40fb89:	pop    eax
  40fb8a:	stos   DWORD PTR es:[edi],eax
  40fb8b:	mov    al,ds:0x901982de
  40fb90:	setp   bl
  40fb93:	das    
  40fb94:	dec    eax
  40fb95:	mov    WORD PTR [edx+0x14d2cb4c],?
  40fb9b:	pop    esi
  40fb9c:	cs mov dl,0x16
  40fb9f:	xlat   BYTE PTR ds:[ebx]
  40fba0:	test   al,0x48
  40fba2:	cmp    ah,BYTE PTR [edx-0x61581c0a]
  40fba8:	sbb    esp,ebx
  40fbaa:	(bad)  
  40fbab:	adc    dh,BYTE PTR [esi-0x39]
  40fbae:	scas   al,BYTE PTR es:[edi]
  40fbaf:	stc    
  40fbb0:	adc    BYTE PTR [eax-0x4f],cl
  40fbb3:	loop   0x40fb5f
  40fbb5:	(bad)  
  40fbb6:	and    al,0x5e
  40fbb8:	mov    dh,0xe6
  40fbba:	mov    dh,0xa0
  40fbbc:	dec    ebx
  40fbbd:	pop    ss
  40fbbe:	cmp    edx,DWORD PTR [edi+0x7b]
  40fbc1:	cmp    cl,ch
  40fbc3:	dec    esi
  40fbc4:	scas   al,BYTE PTR es:[edi]
  40fbc5:	fstp   DWORD PTR [eax]
  40fbc7:	es aaa 
  40fbc9:	mov    bh,0x83
  40fbcb:	stc    
  40fbcc:	add    dh,dh
  40fbce:	fild   QWORD PTR [ecx+eiz*2]
  40fbd1:	repz cmp edi,DWORD PTR [edi+0x14]
  40fbd5:	lods   eax,DWORD PTR ds:[esi]
  40fbd6:	aam    0xb6
  40fbd8:	xchg   edi,eax
  40fbd9:	and    edi,DWORD PTR [esi-0x48]
  40fbdc:	mov    WORD PTR [ebp-0x55],ss
  40fbdf:	inc    ecx
  40fbe0:	mov    ch,BYTE PTR [edx+0x49]
  40fbe3:	aam    0xc1
  40fbe5:	and    al,0x1
  40fbe7:	cmp    BYTE PTR [ebx+0x6051879],al
  40fbed:	add    eax,0xbaaaabcd
  40fbf2:	pop    edx
  40fbf3:	adc    ah,cl
  40fbf5:	cld    
  40fbf6:	(bad)  
  40fbf7:	fadd   DWORD PTR [edx-0x7f]
  40fbfa:	jge    0x40fc78
  40fbfc:	inc    ebx
  40fbfd:	std    
  40fbfe:	or     DWORD PTR ds:0xf815ba35,0xf6e78f36
  40fc08:	push   cs
  40fc09:	pop    ds
  40fc0a:	xlat   BYTE PTR ds:[ebx]
  40fc0b:	(bad)  
  40fc0c:	ins    DWORD PTR es:[edi],dx
  40fc0d:	into   
  40fc0e:	cld    
  40fc0f:	inc    ecx
  40fc10:	push   ebx
  40fc11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc12:	xor    ah,dh
  40fc14:	out    0x60,eax
  40fc16:	cmc    
  40fc17:	in     al,dx
  40fc18:	push   0x7a595ac1
  40fc1d:	in     al,0xaa
  40fc1f:	pop    esp
  40fc20:	xor    DWORD PTR [eax+0x30],ebp
  40fc23:	xor    eax,0xd3f0460c
  40fc28:	jae    0x40fc61
  40fc2a:	jl     0x40fbb1
  40fc2c:	lds    esi,FWORD PTR [ecx-0x2a]
  40fc2f:	dec    edi
  40fc30:	in     al,0x45
  40fc32:	sub    BYTE PTR [edx-0x221b105a],dl
  40fc38:	dec    ebp
  40fc39:	std    
  40fc3a:	test   BYTE PTR [ebx],bh
  40fc3c:	adc    esp,0xe8c06d7a
  40fc42:	jnp    0x40fc2d
  40fc44:	jmp    0xfd73:0xe814cbee
  40fc4b:	in     eax,dx
  40fc4c:	xchg   edi,eax
  40fc4d:	and    al,0xaa
  40fc4f:	mov    ecx,0x8d1b77d8
  40fc54:	jecxz  0x40fc6a
  40fc56:	ffreep st(3)
  40fc58:	sbb    BYTE PTR [esi+0x23],ah
  40fc5b:	js     0x40fc60
  40fc5d:	dec    eax
  40fc5e:	mov    cl,0x85
  40fc60:	dec    edi
  40fc61:	cmp    BYTE PTR [ebx+0x1c],0x89
  40fc65:	push   DWORD PTR [esp+edx*2-0x35d334b4]
  40fc6c:	jmp    0x40fc13
  40fc6e:	fisubr WORD PTR [edx-0x58]
  40fc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc72:	out    dx,eax
  40fc73:	and    al,0x96
  40fc75:	loope  0x40fc8c
  40fc77:	js     0x40fcf8
  40fc79:	lahf   
  40fc7a:	(bad)  [edx-0x6abdbd68]
  40fc80:	mov    esi,0x2186940e
  40fc85:	cmp    ecx,DWORD PTR [edi+0xd17618c]
  40fc8b:	cmp    edi,ecx
  40fc8d:	jne    0x40fcf8
  40fc8f:	(bad)  
  40fc90:	xchg   ecx,eax
  40fc91:	dec    esp
  40fc92:	jae    0x40fc1a
  40fc94:	nop
  40fc95:	imul   ebp,esi,0xa7d3b09d
  40fc9b:	jno    0x40fc78
  40fc9d:	sbb    ebp,DWORD PTR [ebx-0x361e67ef]
  40fca3:	das    
  40fca4:	jle    0x40fcf8
  40fca6:	inc    ecx
  40fca7:	pop    es
  40fca8:	add    ecx,DWORD PTR [edx-0x554ea798]
  40fcae:	in     al,0x16
  40fcb0:	ins    DWORD PTR es:[edi],dx
  40fcb1:	push   ss
  40fcb2:	hlt    
  40fcb3:	xchg   BYTE PTR [esi+0x47df25f6],ah
  40fcb9:	mov    ?,WORD PTR [ebp+0x3b7b0931]
  40fcbf:	push   eax
  40fcc0:	sbb    BYTE PTR [eax-0x9b3dc50],dh
  40fcc6:	stos   DWORD PTR es:[edi],eax
  40fcc7:	add    DWORD PTR ds:0xb1ec6d91,esi
  40fccd:	int3   
  40fcce:	enter  0x7648,0x4b
  40fcd2:	mov    ebx,0xd31b0425
  40fcd7:	lods   eax,DWORD PTR ds:[esi]
  40fcd8:	sbb    bl,bl
  40fcda:	push   esp
  40fcdb:	mov    edx,ebp
  40fcdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcde:	mov    fs,WORD PTR [edi+edi*1+0x67]
  40fce2:	sti    
  40fce3:	sub    al,0x46
  40fce5:	hlt    
  40fce6:	das    
  40fce7:	fisub  DWORD PTR [esp+edx*2+0x3a089cbc]
  40fcee:	shl    DWORD PTR [edi+0x2565192],1
  40fcf4:	int3   
  40fcf5:	sub    eax,0x256b29d8
  40fcfa:	retf   
  40fcfb:	xchg   edi,eax
  40fcfc:	jno    0x40fca3
  40fcfe:	jbe    0x40fca7
  40fd00:	in     al,dx
  40fd01:	aam    0xed
  40fd03:	cmc    
  40fd04:	add    DWORD PTR [edi],esp
  40fd06:	test   eax,0xcba170c7
  40fd0b:	fdivr  QWORD PTR [ecx+0x5c]
  40fd0e:	outs   dx,BYTE PTR ds:[esi]
  40fd0f:	(bad)  
  40fd11:	sub    al,0x85
  40fd13:	adc    al,0x5c
  40fd15:	push   es
  40fd16:	imul   ecx,DWORD PTR [ecx-0x38570046],0xff84a4c1
  40fd20:	push   ebp
  40fd21:	push   ebp
  40fd22:	pop    ebx
  40fd23:	and    eax,0x16a7e4f
  40fd28:	push   0xffffffb6
  40fd2a:	mov    ebp,0x33dee76a
  40fd2f:	sub    ah,BYTE PTR [esi]
  40fd31:	xor    ebp,esi
  40fd33:	ror    DWORD PTR [edx],0x29
  40fd36:	pop    edx
  40fd37:	and    DWORD PTR ds:0x31250a66,ebp
  40fd3d:	jae    0x40fd99
  40fd3f:	imul   edx,DWORD PTR [eax-0x54766815],0xed8ce84e
  40fd49:	clc    
  40fd4a:	cld    
  40fd4b:	ror    BYTE PTR [edi],0xa6
  40fd4e:	fld    QWORD PTR [ebx+0x78]
  40fd51:	(bad)  
  40fd52:	mov    cl,0xd4
  40fd54:	jge    0x40fdba
  40fd56:	jbe    0x40fd6d
  40fd58:	shr    BYTE PTR [ebp-0x23],cl
  40fd5b:	mov    edx,0x6eb83cef
  40fd60:	cmp    DWORD PTR [ebp-0xe],0x287ade38
  40fd67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd68:	dec    ebp
  40fd69:	outs   dx,BYTE PTR ds:[esi]
  40fd6a:	xchg   esp,eax
  40fd6b:	inc    esp
  40fd6c:	pop    ecx
  40fd6d:	xor    BYTE PTR [edx+0xa8bdf2c],bl
  40fd73:	mov    esi,0x40b69f82
  40fd78:	lahf   
  40fd79:	(bad)  [edi+0x378be84f]
  40fd7f:	retf   
  40fd80:	xchg   edi,eax
  40fd81:	repz loop 0x40fdb7
  40fd84:	adc    cl,BYTE PTR ds:0x1d6276dc
  40fd8a:	dec    esi
  40fd8b:	mov    ebx,0xfa960608
  40fd90:	stos   DWORD PTR es:[edi],eax
  40fd91:	bound  edi,QWORD PTR [ecx-0x20]
  40fd94:	xor    eax,0x2d80d899
  40fd99:	add    BYTE PTR [eax-0x2cbf4ca8],dh
  40fd9f:	pop    eax
  40fda0:	or     eax,0x45a48c59
  40fda5:	or     bh,BYTE PTR [eax-0x37471a6a]
  40fdab:	or     eax,0x7deffc6
  40fdb0:	adc    eax,0x71f75fb0
  40fdb5:	fwait
  40fdb6:	sbb    dl,BYTE PTR [esi+0x9]
  40fdb9:	cmp    bh,bh
  40fdbb:	sbb    ecx,esi
  40fdbd:	xchg   ebp,eax
  40fdbe:	mov    bh,0x88
  40fdc0:	xor    ah,BYTE PTR [ebx-0x3b]
  40fdc3:	test   al,0xe0
  40fdc5:	add    al,0x1d
  40fdc7:	fmul   QWORD PTR [edi*4-0x17cdfafd]
  40fdce:	mov    dh,0x2b
  40fdd0:	mov    eax,ds:0xdcce02dd
  40fdd5:	cld    
  40fdd6:	inc    esp
  40fdd7:	nop    ecx
  40fdda:	fstp   TBYTE PTR [ebx]
  40fddc:	iret   
  40fddd:	xchg   ah,bh
  40fddf:	mov    eax,ds:0xcb469910
  40fde4:	push   0x2f
  40fde6:	push   ebp
  40fde7:	add    DWORD PTR [ecx],edx
  40fde9:	cdq    
  40fdea:	mov    ecx,DWORD PTR [edi]
  40fdec:	sub    BYTE PTR [ebx+eiz*1-0x65],bl
  40fdf0:	xor    cl,dl
  40fdf2:	xchg   ebx,eax
  40fdf3:	fwait
  40fdf4:	mov    WORD PTR cs:[eax+0x41],ss
  40fdf8:	std    
  40fdf9:	jb     0x40fdd3
  40fdfb:	add    eax,esi
  40fdfd:	out    0x65,eax
  40fdff:	gs dec esp
  40fe01:	shr    BYTE PTR [eax-0x23],0xce
  40fe05:	(bad)  
  40fe06:	mov    al,0xa4
  40fe08:	aam    0x29
  40fe0a:	lock xrelease mov BYTE PTR [edi-0x23],bh
  40fe0f:	js     0x40fe47
  40fe11:	sbb    dh,dh
  40fe13:	pusha  
  40fe14:	ret    0x1074
  40fe17:	dec    edx
  40fe18:	dec    eax
  40fe19:	mov    cl,dl
  40fe1b:	sub    DWORD PTR [ebp+0x71],0x69
  40fe1f:	popa   
  40fe20:	pop    edi
  40fe21:	jbe    0x40fdef
  40fe23:	xor    DWORD PTR [ecx+0x3b],edx
  40fe26:	ins    BYTE PTR es:[edi],dx
  40fe27:	and    eax,0x39eacddb
  40fe2c:	mov    al,BYTE PTR [ebp+ebx*8-0x30b901a2]
  40fe33:	mov    ch,0xd
  40fe35:	mov    dl,0xaa
  40fe37:	inc    ecx
  40fe38:	hlt    
  40fe39:	das    
  40fe3a:	xor    cl,0xb5
  40fe3d:	cdq    
  40fe3e:	inc    ebp
  40fe3f:	fcom   st(2)
  40fe41:	sbb    eax,0x348a10b3
  40fe46:	push   ss
  40fe47:	pop    ebx
  40fe48:	es popf 
  40fe4a:	mov    al,ds:0xb5fb2242
  40fe4f:	int    0x54
  40fe51:	push   ebx
  40fe52:	xchg   ecx,eax
  40fe53:	mov    esi,0x8d730d3c
  40fe58:	iret   
  40fe59:	cmp    al,0xa5
  40fe5b:	test   DWORD PTR ds:0xb0d1a7d5,ecx
  40fe61:	int3   
  40fe62:	inc    esi
  40fe63:	aaa    
  40fe64:	repz push ecx
  40fe66:	adc    eax,0x1ffb8952
  40fe6b:	out    0x34,al
  40fe6d:	add    ebp,ebp
  40fe6f:	enter  0x2b67,0x6f
  40fe73:	jae    0x40febc
  40fe75:	push   esp
  40fe76:	pop    esi
  40fe77:	mov    ds:0x628fe66d,eax
  40fe7c:	cs ret 0x9d35
  40fe80:	sbb    DWORD PTR [esi],ecx
  40fe82:	retf   0x5d94
  40fe85:	(bad)  
  40fe86:	loopne 0x40fe7a
  40fe88:	jmp    0xfb62:0x8cb3536
  40fe8f:	stos   BYTE PTR es:[edi],al
  40fe90:	bnd jnp 0x40fe88
  40fe93:	mov    ch,0x4c
  40fe95:	mov    cs,WORD PTR [eax+ebx*2+0xf99b4e]
  40fe9c:	jae    0x40febe
  40fe9e:	ja     0x40ff0c
  40fea0:	rol    bh,1
  40fea2:	push   eax
  40fea3:	repnz push eax
  40fea5:	outs   dx,DWORD PTR ds:[esi]
  40fea6:	mov    ds:0xea995997,al
  40feab:	nop
  40feac:	adc    ah,bl
  40feae:	shl    cl,cl
  40feb0:	cdq    
  40feb1:	xchg   ecx,eax
  40feb2:	or     bh,BYTE PTR fs:[edi]
  40feb5:	or     eax,DWORD PTR [edi+ecx*4-0xb]
  40feb9:	pop    ebp
  40feba:	stos   BYTE PTR es:[edi],al
  40febb:	adc    ebp,ecx
  40febd:	cmp    DWORD PTR [edx],ebp
  40febf:	iret   
  40fec0:	add    DWORD PTR [esp+esi*2+0x687fe0ce],esp
  40fec7:	sbb    BYTE PTR [eax+0x51708b1d],0xa4
  40fece:	stos   BYTE PTR es:[edi],al
  40fecf:	or     eax,0x7576f4ef
  40fed4:	fwait
  40fed5:	inc    esp
  40fed6:	or     DWORD PTR [ebp+0x7c],0xffffffa3
  40feda:	inc    ebp
  40fedb:	(bad)  
  40fedc:	pop    esp
  40fedd:	inc    edi
  40fede:	out    dx,al
  40fedf:	lods   al,BYTE PTR ds:[esi]
  40fee0:	sbb    BYTE PTR [ebp+0x76],dh
  40fee3:	gs cld 
  40fee5:	test   eax,0xeab8b0bc
  40feea:	mov    al,0x8e
  40feec:	imul   ebp,DWORD PTR ss:[esi-0x5c595a81],0x42f1bf06
  40fef7:	push   cs
  40fef8:	mov    edx,0x7f858f7f
  40fefd:	mov    cl,0x99
  40feff:	sbb    BYTE PTR [eax-0x1486b8],al
  40ff05:	test   DWORD PTR [edi+0x2b2d7419],ebp
  40ff0b:	mov    ebp,0xc184dc90
  40ff10:	mov    esi,0x26a03dcd
  40ff15:	lea    ebp,[edi+0x3c22a134]
  40ff1b:	ins    DWORD PTR es:[edi],dx
  40ff1c:	push   ds
  40ff1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff1e:	mov    ?,WORD PTR [eax-0xe]
  40ff21:	pavgb  mm1,QWORD PTR ss:[ebp+0x7]
  40ff26:	xor    DWORD PTR [eax-0x77],esp
  40ff29:	push   ebp
  40ff2a:	popa   
  40ff2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff2c:	mov    esi,0x4a4cdaf9
  40ff31:	jle    0x40fef9
  40ff33:	or     BYTE PTR [ebx+0x14b8d7c6],bh
  40ff39:	jl     0x40ff98
  40ff3b:	outs   dx,DWORD PTR ds:[esi]
  40ff3c:	je     0x40ffa3
  40ff3e:	cmp    ebp,DWORD PTR ds:0x24516f77
  40ff44:	std    
  40ff45:	inc    edx
  40ff46:	sub    ebx,eax
  40ff48:	shl    DWORD PTR [ebx],1
  40ff4a:	scas   al,BYTE PTR es:[edi]
  40ff4b:	aas    
  40ff4c:	adc    bl,ch
  40ff4e:	pop    es
  40ff4f:	push   ds
  40ff50:	xlat   BYTE PTR ds:[ebx]
  40ff51:	cmp    ch,bl
  40ff53:	out    0xb2,eax
  40ff55:	in     al,dx
  40ff56:	add    esp,DWORD PTR [eax+ebx*4]
  40ff59:	fdiv   QWORD PTR ds:0x785b3619
  40ff5f:	inc    ebp
  40ff60:	retf   
  40ff61:	or     bh,ah
  40ff63:	push   ss
  40ff64:	mov    esi,0x1dc8977b
  40ff69:	mov    dh,0xfa
  40ff6b:	outs   dx,DWORD PTR ds:[esi]
  40ff6c:	pusha  
  40ff6d:	(bad)  
  40ff6e:	xor    ah,BYTE PTR [ebx-0x47]
  40ff71:	lods   eax,DWORD PTR ds:[esi]
  40ff72:	pop    edx
  40ff73:	jecxz  0x40ff1c
  40ff75:	xor    al,0xe7
  40ff77:	jo     0x40ff2b
  40ff79:	(bad)  
  40ff7a:	pop    ebx
  40ff7b:	mov    cl,BYTE PTR [ecx+esi*2+0x28bf8f20]
  40ff82:	(bad)  
  40ff83:	ror    dl,1
  40ff85:	outs   dx,BYTE PTR ds:[esi]
  40ff86:	arpl   WORD PTR [edi+0x43],sp
  40ff89:	out    0xd0,al
  40ff8b:	mov    esi,0x474cfef5
  40ff90:	or     DWORD PTR [ebp-0x61c008e1],edx
  40ff96:	sub    dl,BYTE PTR [esi]
  40ff98:	fst    QWORD PTR [eax]
  40ff9a:	mov    edi,0x7052b336
  40ff9f:	repz xlat BYTE PTR ds:[ebx]
  40ffa1:	pop    eax
  40ffa2:	stc    
  40ffa3:	adc    ch,BYTE PTR [edi-0x3a19d434]
  40ffa9:	icebp  
  40ffaa:	push   esp
  40ffab:	cmp    edx,DWORD PTR [eax+ecx*2-0x14]
  40ffaf:	jecxz  0x40ff35
  40ffb1:	pop    edx
  40ffb2:	xor    al,0xe0
  40ffb4:	push   eax
  40ffb5:	int3   
  40ffb6:	mov    ds:0xdd6c2c09,eax
  40ffbb:	sbb    DWORD PTR [esi-0x491d227f],edi
  40ffc1:	push   esi
  40ffc2:	lock mov ecx,0xe57680b1
  40ffc8:	push   esi
  40ffc9:	sar    DWORD PTR [ebx+0x55b94efd],cl
  40ffcf:	fdivrp st(7),st
  40ffd1:	aad    0xaa
  40ffd3:	dec    ebx
  40ffd4:	in     al,0xe
  40ffd6:	je     0x40ff93
  40ffd8:	stc    
  40ffd9:	ret    
  40ffda:	dec    ebp
  40ffdb:	sbb    BYTE PTR [esi],ch
  40ffdd:	push   ds
  40ffde:	sub    eax,0xe2c8fab0
  40ffe3:	sbb    bh,BYTE PTR ds:[ecx-0x7c]
  40ffe7:	xchg   edi,eax
  40ffe8:	mov    edi,0x75faac40
  40ffed:	or     DWORD PTR [edx],eax
  40ffef:	mov    eax,ds:0xa5dc771
  40fff4:	and    al,0x15
  40fff6:	inc    ebp
  40fff7:	ficom  WORD PTR [edi]
  40fff9:	ins    DWORD PTR es:[edi],dx
  40fffa:	sub    eax,DWORD PTR [ebx-0x25]
  40fffd:	nop
  40fffe:	fisttp QWORD PTR [ebp+0x52]
  410001:	dec    esp
  410002:	xor    eax,0x80e6c842
  410007:	iret   
  410008:	mov    al,0x11
  41000a:	mov    esp,0x6663d287
  41000f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410010:	mov    eax,0xdd36f4e2
  410015:	hlt    
  410016:	push   edi
  410017:	push   esp
  410018:	repnz fisttp DWORD PTR [esi+0x12]
  41001c:	pop    edx
  41001d:	lock lds esi,FWORD PTR [ebp-0x7263cd92]
  410024:	add    DWORD PTR [esi-0x66],edx
  410027:	sub    al,0xf5
  410029:	scas   al,BYTE PTR es:[edi]
  41002a:	in     eax,dx
  41002b:	sub    eax,0x4e9ace0b
  410030:	into   
  410031:	mov    dh,0x50
  410033:	sbb    DWORD PTR [eax-0x722e1756],0xffffffa5
  41003a:	xlat   BYTE PTR ds:[ebx]
  41003b:	or     esi,DWORD PTR [ebp-0x3f]
  41003e:	xchg   ebx,eax
  41003f:	mov    ds:0x15bbd52b,eax
  410044:	xor    BYTE PTR [ebx-0x5b189f6a],dh
  41004a:	or     ebx,DWORD PTR [esi-0x4e070b0a]
  410050:	lahf   
  410051:	sbb    BYTE PTR [ebx-0x1d],dl
  410054:	xchg   edi,eax
  410055:	imul   ebp,edx,0x4a11cdf0
  41005b:	jbe    0x4100af
  41005d:	pusha  
  41005e:	and    BYTE PTR [esi+edi*1+0x5],ch
  410062:	xchg   DWORD PTR [esi*2+0x6a6bf263],ebp
  410069:	repnz adc eax,esi
  41006c:	(bad)  
  41006d:	iret   
  41006e:	xchg   esi,eax
  41006f:	xchg   esi,eax
  410070:	sti    
  410071:	and    DWORD PTR [ebx+0x69],esi
  410074:	popf   
  410075:	mov    eax,0x7d78568d
  41007a:	push   ebx
  41007b:	push   edi
  41007c:	sbb    edi,esp
  41007e:	sub    DWORD PTR [edi],esi
  410080:	sub    ah,BYTE PTR [ebx-0x44]
  410083:	outs   dx,DWORD PTR fs:[esi]
  410085:	sub    DWORD PTR [edx+0x43],ebx
  410088:	enter  0x117,0x5e
  41008c:	push   ecx
  41008d:	or     eax,0x407368e4
  410092:	(bad)  
  410093:	xchg   edx,eax
  410094:	(bad)  
  410095:	lods   al,BYTE PTR ds:[esi]
  410096:	fsubr  DWORD PTR [esi-0x15afb268]
  41009c:	pop    edx
  41009d:	addr16 mov al,ds:0x9a56
  4100a1:	push   es
  4100a2:	in     al,dx
  4100a3:	mov    ds:0xca591ba8,al
  4100a8:	arpl   WORD PTR [ebx-0x67],ax
  4100ab:	hlt    
  4100ac:	jg     0x410047
  4100ae:	xor    DWORD PTR [ebp+0x44],ebp
  4100b1:	mov    ds:0xa49d17c3,al
  4100b6:	push   ebp
  4100b7:	call   0x45a5:0x80100c1
  4100be:	fwait
  4100bf:	(bad)  
  4100c0:	div    esp
  4100c2:	xchg   esp,eax
  4100c3:	int3   
  4100c4:	out    0x26,eax
  4100c6:	loope  0x410057
  4100c8:	loopne 0x410057
  4100ca:	pop    ebx
  4100cb:	in     al,0x7f
  4100cd:	inc    edx
  4100ce:	popa   
  4100cf:	push   ebp
  4100d0:	fmul   QWORD PTR [eax+edx*1+0x1b]
  4100d4:	neg    BYTE PTR [edx+edi*1]
  4100d7:	scas   al,BYTE PTR es:[edi]
  4100d8:	out    dx,al
  4100d9:	pushf  
  4100da:	or     cl,BYTE PTR [edi]
  4100dc:	jecxz  0x4100c3
  4100de:	xchg   edx,eax
  4100df:	xor    al,0x19
  4100e1:	ret    
  4100e2:	or     BYTE PTR [edi+0x6b668381],ch
  4100e8:	lea    edi,[esi-0x33e3e861]
  4100ee:	sbb    eax,0x8fe881a4
  4100f3:	add    al,BYTE PTR ds:0xe5c847a9
  4100f9:	sbb    ah,BYTE PTR [ecx]
  4100fb:	adc    eax,0xfe62baad
  410100:	enter  0x2ebb,0x61
  410104:	sbb    al,0x3e
  410106:	out    dx,eax
  410107:	sub    al,0x4
  410109:	cmp    BYTE PTR [esi+ebx*2],0x59
  41010d:	mov    bl,0x55
  41010f:	daa    
  410110:	cli    
  410111:	or     BYTE PTR [ebp+0x26],dl
  410114:	mov    ebx,0xefcbfee1
  410119:	jge    0x41009b
  41011b:	dec    ebx
  41011c:	ds loopne 0x41010c
  41011f:	scas   eax,DWORD PTR es:[edi]
  410120:	jmp    0xffff:0x2c231b21
  410127:	outs   dx,BYTE PTR ds:[esi]
  410128:	div    BYTE PTR [edx]
  41012a:	and    eax,edx
  41012c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012d:	and    ch,BYTE PTR [edx+esi*2-0x4b]
  410131:	cmc    
  410132:	(bad)  
  410134:	push   ebp
  410135:	shr    BYTE PTR [eax+edx*1],1
  410138:	add    ebx,esp
  41013a:	and    ebp,DWORD PTR [esi+0x6100d712]
  410140:	xchg   esp,eax
  410141:	xor    BYTE PTR [ebx-0x3f4d8cd9],cl
  410147:	fwait
  410148:	jo     0x410117
  41014a:	adc    esp,esp
  41014c:	(bad)  
  41014e:	sbb    DWORD PTR [ebp-0xf10ee6e],esi
  410154:	mov    esp,0x52c5f40e
  410159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41015a:	outs   dx,DWORD PTR ds:[esi]
  41015b:	rol    DWORD PTR [ebx-0x53],0xf7
  41015f:	push   ebp
  410160:	pop    eax
  410161:	repz cli 
  410163:	in     eax,0x71
  410165:	int    0xe6
  410167:	ja     0x4101ab
  410169:	jg     0x4101e2
  41016b:	push   es
  41016c:	test   eax,0x5404c02
  410171:	mov    esi,0xa1e40f29
  410176:	ja     0x41018a
  410178:	test   DWORD PTR [eax-0x6b986b27],eax
  41017e:	add    BYTE PTR [ecx],dl
  410180:	sub    eax,DWORD PTR [eax]
  410182:	xor    BYTE PTR [edi+0x4d16e2ae],0x22
  410189:	outs   dx,DWORD PTR ds:[esi]
  41018a:	test   al,0xa8
  41018c:	aam    0x3f
  41018e:	or     eax,0x5277f0de
  410193:	and    eax,0x84c2fc8c
  410198:	push   0x381e7c59
  41019d:	dec    edx
  41019e:	sti    
  41019f:	sahf   
  4101a0:	add    eax,0x374212fd
  4101a5:	sbb    DWORD PTR [edx+0xb7387f4],esi
  4101ab:	cmp    eax,0x9ee8602e
  4101b0:	call   0xa8cd:0x5fcf907d
  4101b7:	sbb    al,ch
  4101b9:	xor    DWORD PTR [ebx+0x1490df25],0xaec36706
  4101c3:	or     al,0xce
  4101c5:	add    bh,BYTE PTR [esi+0x6c]
  4101c8:	dec    edx
  4101c9:	mov    eax,ds:0x3acf14ce
  4101ce:	std    
  4101cf:	out    0x1b,eax
  4101d1:	cmp    cl,BYTE PTR [ebx-0x43]
  4101d4:	in     eax,dx
  4101d5:	imul   ecx,DWORD PTR es:0x7d61e153,0x0
  4101dd:	or     eax,0xb90141e2
  4101e2:	cmp    esi,DWORD PTR ds:[edi]
  4101e5:	ret    0x6d5e
  4101e8:	or     dl,BYTE PTR [ecx+0x5b09da4c]
  4101ee:	scas   eax,DWORD PTR es:[edi]
  4101ef:	ss adc edx,ebx
  4101f2:	nop
  4101f3:	fs ds iret 
  4101f6:	imul   ebx,DWORD PTR [eax+0x7135d98a],0xffffffae
  4101fd:	pop    es
  4101fe:	or     eax,0x103bf247
  410203:	cmp    eax,0x4015ee90
  410208:	jae    0x41018b
  41020a:	stos   BYTE PTR es:[edi],al
  41020b:	(bad)  
  41020c:	or     BYTE PTR ds:0x1ce98a5e,ah
  410212:	pop    edi
  410213:	outs   dx,BYTE PTR ds:[esi]
  410214:	lock mov ds:0x8e460b6e,al
  41021a:	pop    ss
  41021b:	mov    BYTE PTR [edx+0x60],bl
  41021e:	xchg   BYTE PTR [edi],al
  410220:	add    eax,0x8176d1f9
  410225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410226:	push   es
  410227:	mov    al,0x3e
  410229:	scas   eax,DWORD PTR es:[edi]
  41022a:	or     al,0x4f
  41022c:	xor    eax,0xad4d1589
  410231:	mov    bl,0x57
  410233:	fistp  DWORD PTR [esi-0x58de3d09]
  410239:	inc    edx
  41023a:	push   edi
  41023b:	nop
  41023c:	sti    
  41023d:	cmp    al,0xca
  41023f:	mov    al,0xd
  410241:	fiadd  WORD PTR [esi-0x68]
  410244:	dec    ebp
  410245:	cli    
  410246:	clc    
  410247:	cmp    al,0xf9
  410249:	xchg   ecx,eax
  41024a:	ds sub eax,0xe5767fe
  410250:	inc    ebx
  410251:	mov    eax,0xd37bab
  410256:	mov    ch,0xd1
  410258:	neg    BYTE PTR [eax-0x1a]
  41025b:	adc    DWORD PTR [edi-0x2d],esp
  41025e:	mov    dx,0x2bc6
  410262:	and    BYTE PTR [eax+0x3da17fc1],cl
  410268:	mov    esi,0x3e7492a0
  41026d:	and    al,0xe8
  41026f:	push   ebx
  410270:	jmp    0x2a73ce36
  410275:	jns    0x4102d8
  410277:	shl    DWORD PTR [esi+0x3b],1
  41027a:	stos   DWORD PTR es:[edi],eax
  41027b:	jmp    0x2ad6:0x64f8c874
  410282:	fild   QWORD PTR ds:0xa8510c68
  410288:	xchg   esp,eax
  410289:	mov    DWORD PTR [ebp-0x7a],0x6e689c6b
  410290:	sbb    ah,BYTE PTR [edi*4+0x6352f7dd]
  410297:	es test al,0x6
  41029a:	shr    DWORD PTR [eax],cl
  41029c:	lods   al,BYTE PTR ds:[esi]
  41029d:	or     BYTE PTR [esi],ah
  41029f:	popf   
  4102a0:	jge    0x410270
  4102a2:	mov    edx,0x5853213d
  4102a7:	aas    
  4102a8:	cli    
  4102a9:	push   esp
  4102aa:	or     esp,DWORD PTR [ebx]
  4102ac:	hlt    
  4102ad:	not    BYTE PTR [ebx+ebx*2+0x5075e3a6]
  4102b4:	fs add eax,0x6fd5042c
  4102ba:	bnd jge 0x41024f
  4102bd:	leave  
  4102be:	in     eax,0x10
  4102c0:	(bad)  
  4102c1:	jo     0x410341
  4102c3:	xor    al,0xe1
  4102c5:	icebp  
  4102c6:	sub    BYTE PTR [ecx+0x1d],bl
  4102c9:	icebp  
  4102ca:	cmp    ecx,eax
  4102cc:	outs   dx,DWORD PTR ds:[esi]
  4102cd:	xor    DWORD PTR ds:[ebp+edx*1+0x48],edx
  4102d2:	mov    fs,WORD PTR [ecx+0x474916d6]
  4102d8:	xor    dl,BYTE PTR [ecx]
  4102da:	jne    0x410342
  4102dc:	jnp    0x410282
  4102de:	mov    DWORD PTR ds:0x5419dec9,0x67bf2cd8
  4102e8:	fcomp  DWORD PTR [ebx]
  4102ea:	cdq    
  4102eb:	sbb    bl,BYTE PTR [esi]
  4102ed:	jl     0x410317
  4102ef:	mov    bl,0x82
  4102f1:	adc    DWORD PTR [ecx],0x8257ac67
  4102f7:	pop    es
  4102f8:	or     esi,ecx
  4102fa:	pop    esp
  4102fb:	popa   
  4102fc:	ret    0xd7f6
  4102ff:	xchg   BYTE PTR [ebx+0x66d3f378],dh
  410305:	fstp   st(4)
  410307:	sub    ebx,DWORD PTR [ebx-0x91cfda9]
  41030d:	cmc    
  41030e:	dec    ebx
  41030f:	sub    eax,0xfd5bd6b9
  410314:	mov    ah,bl
  410316:	sbb    eax,0xccf82a0d
  41031b:	icebp  
  41031c:	jg     0x4102b3
  41031e:	test   al,0xf0
  410320:	or     eax,0xa387a2c
  410325:	mov    eax,0xb4fe1c0c
  41032a:	jp     0x4102b3
  41032c:	neg    edx
  41032e:	pop    ecx
  41032f:	call   FWORD PTR [ecx+edi*8-0x6b]
  410333:	scas   eax,DWORD PTR es:[edi]
  410334:	enter  0xf227,0x41
  410338:	mov    WORD PTR [eax+0x4c],gs
  41033b:	cmp    DWORD PTR [ecx],eax
  41033d:	je     0x4102ff
  41033f:	ins    BYTE PTR es:[edi],dx
  410340:	add    eax,0x68e30a28
  410345:	cli    
  410346:	or     eax,0x722f57ad
  41034b:	das    
  41034c:	inc    edx
  41034d:	xor    ebp,esi
  41034f:	adc    ch,BYTE PTR [edx-0x48]
  410352:	adc    esi,ebx
  410354:	ret    
  410355:	stos   BYTE PTR es:[edi],al
  410356:	push   eax
  410357:	mov    dh,0x1b
  410359:	(bad)  
  41035a:	cld    
  41035b:	inc    esi
  41035c:	push   edi
  41035d:	pop    ss
  41035e:	ins    BYTE PTR es:[edi],dx
  41035f:	jmp    0x9891f1c1
  410364:	aas    
  410365:	adc    BYTE PTR [esi],bl
  410367:	addr16 jno 0x4103cd
  41036a:	jo     0x410321
  41036c:	adc    al,0x2d
  41036e:	push   esp
  41036f:	test   eax,0x4947ecff
  410374:	xor    DWORD PTR [edx],ebx
  410376:	pop    edx
  410377:	mov    cl,0xe6
  410379:	fldenv [ebp+0x710877bb]
  41037f:	mov    ebp,edx
  410381:	sbb    ah,BYTE PTR [esi+ebp*8-0x50df4c9d]
  410388:	imul   esp,eax,0xe9e533d4
  41038e:	idiv   BYTE PTR [edi-0x188e58d5]
  410394:	cs fcomp st(3)
  410397:	xchg   ebx,eax
  410398:	mov    ds:0x38c3a41c,al
  41039d:	bound  esp,QWORD PTR [edi-0x1b]
  4103a0:	aam    0x8a
  4103a2:	cmp    al,0x2d
  4103a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a5:	sub    BYTE PTR [ecx+0x2ca533b2],0x61
  4103ac:	pop    edi
  4103ad:	lods   al,BYTE PTR ds:[esi]
  4103ae:	add    DWORD PTR [ebp-0x4e3c2d60],eax
  4103b4:	int3   
  4103b5:	dec    esi
  4103b6:	or     esp,DWORD PTR [edx]
  4103b8:	pop    ds
  4103b9:	data16 das 
  4103bb:	jle    0x410367
  4103bd:	mov    esp,0x1201141a
  4103c2:	xchg   esi,eax
  4103c3:	mov    esp,0x6cba6424
  4103c8:	add    BYTE PTR ds:0x4279a2e9,dl
  4103ce:	sbb    esi,DWORD PTR [edi]
  4103d0:	mov    ebp,0xe47d22d8
  4103d5:	imul   ecx,DWORD PTR [ecx+0x3037460d],0xf4662de7
  4103df:	mov    cl,0xc9
  4103e1:	call   0xb30b:0xc4fb6ab3
  4103e8:	or     eax,0x420fdfbd
  4103ed:	sub    al,0xac
  4103ef:	xor    al,0x71
  4103f1:	adc    al,0x6f
  4103f3:	test   dl,0x7
  4103f6:	dec    edi
  4103f7:	add    DWORD PTR [esp+edx*1],eax
  4103fa:	addr16 push ecx
  4103fc:	pop    edi
  4103fd:	mov    eax,ds:0xb7467016
  410402:	mov    es,WORD PTR [ebp-0x2c8eacd9]
  410408:	mov    edi,0xcec07a58
  41040d:	je     0x4103dc
  41040f:	jecxz  0x4103f1
  410411:	imul   ebx,DWORD PTR [ebx+0x215cf5c0],0x92e11ad0
  41041b:	(bad)  
  41041c:	aam    0x3f
  41041e:	stos   BYTE PTR es:[edi],al
  41041f:	in     al,dx
  410420:	scas   eax,DWORD PTR es:[edi]
  410421:	pop    edi
  410422:	and    al,0x3b
  410424:	xchg   DWORD PTR [edx-0x7d],ebp
  410427:	cld    
  410428:	dec    ecx
  410429:	sahf   
  41042a:	(bad)
  41042e:	mov    edx,DWORD PTR [esi+0x5a]
  410431:	xor    DWORD PTR [eax+0x7b],ecx
  410434:	pop    esi
  410435:	cmp    BYTE PTR [edi-0x43],0x7a
  410439:	add    DWORD PTR [ebx-0x2f00fd6f],edi
  41043f:	(bad)
  410442:	fmul   QWORD PTR [ebx-0x12]
  410445:	jbe    0x410492
  410447:	pop    ds
  410448:	outs   dx,BYTE PTR ds:[esi]
  410449:	xor    BYTE PTR [esi],0xbe
  41044c:	add    DWORD PTR [ebx-0x3b52fd3c],edi
  410452:	sti    
  410453:	repnz mov esi,esp
  410456:	aaa    
  410457:	imul   esp,DWORD PTR [ebx-0x279aaa8f],0x21
  41045e:	xchg   ebx,eax
  41045f:	cmp    bl,BYTE PTR [edx+0x1200e028]
  410465:	mov    eax,ds:0x93a78eb9
  41046a:	shl    BYTE PTR ds:0x9ecb03d9,1
  410470:	(bad)  [ebp-0x741de291]
  410476:	scas   eax,DWORD PTR es:[edi]
  410477:	xor    al,0xfb
  410479:	(bad)  
  41047a:	stc    
  41047b:	or     eax,0x5acc7c27
  410480:	cli    
  410481:	repnz mov edx,0x3d47bdaf
  410487:	repz mov edx,0xb7515bee
  41048d:	pop    DWORD PTR [edi+0xb053b5d]
  410493:	aam    0x34
  410495:	sbb    ch,al
  410497:	jl     0x41043f
  410499:	shl    ebp,1
  41049b:	sahf   
  41049c:	daa    
  41049d:	leave  
  41049e:	sub    edx,ecx
  4104a0:	adc    ah,ah
  4104a2:	or     al,0xad
  4104a4:	jmp    0x158b:0x8de07e29
  4104ab:	jmp    0x1cf0:0x536e3fd0
  4104b2:	imul   edx,DWORD PTR [edx+0x4b],0x31
  4104b6:	mov    ebx,0x4d2aa0af
  4104bb:	or     ah,bh
  4104bd:	aas    
  4104be:	cmp    al,0xd4
  4104c0:	cdq    
  4104c1:	test   al,0x77
  4104c3:	sub    dl,ah
  4104c5:	out    0x2f,eax
  4104c7:	mov    eax,ds:0x41652812
  4104cc:	push   ss
  4104cd:	shld   DWORD PTR [esi+eax*2],edx,cl
  4104d1:	out    0x6b,al
  4104d3:	mov    bh,0x68
  4104d5:	fdiv   QWORD PTR [ebp+0x6b8f36da]
  4104db:	retf   0xd5f9
  4104de:	add    cl,BYTE PTR [esi-0x2c]
  4104e1:	inc    edx
  4104e2:	fdiv   DWORD PTR [ebp-0x6bcbcde0]
  4104e8:	push   esp
  4104e9:	pop    ss
  4104ea:	and    al,0x59
  4104ec:	inc    esp
  4104ed:	push   0xfffffff5
  4104ef:	dec    esp
  4104f0:	rcr    DWORD PTR [ebp-0x6b],cl
  4104f3:	sti    
  4104f4:	cli    
  4104f5:	in     al,0xdc
  4104f7:	fld    DWORD PTR [edi-0x45]
  4104fa:	jl     0x410483
  4104fc:	pop    edx
  4104fd:	jp     0x4104d0
  4104ff:	or     eax,0xf7b10b7c
  410504:	cmp    dh,BYTE PTR [ebp-0x3a]
  410507:	icebp  
  410508:	ins    BYTE PTR es:[edi],dx
  410509:	add    al,0xdd
  41050b:	repnz adc ebx,DWORD PTR [edi-0x7f8e9f1b]
  410512:	and    al,0xf0
  410514:	push   eax
  410515:	dec    eax
  410516:	pop    ebx
  410517:	jl     0x41058e
  410519:	out    dx,eax
  41051a:	mov    al,0xcc
  41051c:	push   edx
  41051d:	aas    
  41051e:	out    dx,al
  41051f:	pop    edi
  410520:	das    
  410521:	in     al,dx
  410522:	xor    DWORD PTR [ecx],ecx
  410524:	aam    0xc6
  410526:	dec    ebp
  410527:	mov    cl,al
  410529:	jns    0x4104d8
  41052b:	adc    eax,esi
  41052d:	mov    ebp,0x2b57986a
  410532:	clc    
  410533:	in     eax,dx
  410534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410535:	fsubr  DWORD PTR [edx+edx*2-0x5591b9cb]
  41053c:	mov    dh,0xe2
  41053e:	shl    DWORD PTR [esi-0x65],0x1b
  410542:	sub    eax,0x4565b01b
  410547:	pop    esi
  410548:	pop    ebx
  410549:	in     eax,dx
  41054a:	or     al,0x3b
  41054c:	inc    ecx
  41054d:	das    
  41054e:	pop    edi
  41054f:	iret   
  410550:	pop    DWORD PTR [edi+0x307f77d1]
  410556:	or     edi,DWORD PTR [eax+0x2632b987]
  41055c:	sub    edx,ebp
  41055e:	out    0x78,eax
  410560:	fsubr  st(5),st
  410562:	mov    esp,0xdfc3370c
  410567:	mov    bl,0xd4
  410569:	adc    al,0x3e
  41056b:	pop    esp
  41056c:	push   cs
  41056d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41056e:	dec    edx
  41056f:	pop    ss
  410570:	mov    esp,0x35a75f93
  410575:	or     DWORD PTR [ebp+0x1cd17aca],ebx
  41057b:	fldcw  WORD PTR [ebp+0x37]
  41057e:	cwde   
  41057f:	sbb    eax,0x49ac9498
  410584:	jmp    0x64d27759
  410589:	xchg   BYTE PTR [ebx-0x2e],dl
  41058c:	push   ebx
  41058d:	sbb    ecx,edx
  41058f:	ret    0x54c7
  410592:	push   edi
  410593:	repz cmp al,0xc6
  410596:	cmp    BYTE PTR [eax-0x780855b0],0xff
  41059d:	(bad)  
  41059e:	fnstenv ds:0xd789a154
  4105a4:	fild   WORD PTR [edi+0x4c6ffd10]
  4105aa:	inc    eax
  4105ab:	pop    edx
  4105ac:	imul   esi,edx,0x37
  4105af:	mov    eax,ds:0x7fbd8499
  4105b4:	ja     0x41059f
  4105b6:	test   BYTE PTR [edi],0x4d
  4105b9:	push   edx
  4105ba:	cdq    
  4105bb:	adc    bl,BYTE PTR [esi-0x69]
  4105be:	in     eax,dx
  4105bf:	mov    dl,0x86
  4105c1:	scas   eax,DWORD PTR es:[edi]
  4105c2:	adc    dh,BYTE PTR [edi-0x4a]
  4105c5:	xchg   esp,eax
  4105c6:	add    esi,DWORD PTR [edi+0x2387aa88]
  4105cc:	rcl    BYTE PTR [ebp+0x32fa3bc2],cl
  4105d2:	bound  ebp,QWORD PTR [esi-0x34]
  4105d5:	sub    dh,BYTE PTR [eax+0x1f90a7a4]
  4105db:	adc    al,0x8a
  4105dd:	das    
  4105de:	push   esp
  4105df:	sbb    al,0xd4
  4105e1:	mov    al,0x39
  4105e3:	dec    ebp
  4105e4:	in     eax,0xe9
  4105e6:	loop   0x410632
  4105e8:	push   edi
  4105e9:	push   ds
  4105ea:	xchg   esp,eax
  4105eb:	sbb    ebp,DWORD PTR [ecx+ebx*1]
  4105ee:	call   0xbaf:0x9e662191
  4105f5:	sbb    ebp,0xcd46cd10
  4105fb:	push   edi
  4105fc:	aad    0x95
  4105fe:	outs   dx,DWORD PTR ds:[esi]
  4105ff:	sbb    eax,0x73fc68
  410604:	je     0x410658
  410606:	cmp    DWORD PTR [ebx+0x1c],esi
  410609:	fild   WORD PTR ds:0x9cb9d34f
  41060f:	pop    esp
  410610:	in     al,dx
  410611:	sub    BYTE PTR [ebx],cl
  410613:	addr16 out 0x24,eax
  410616:	mov    ds:0xb8e555f1,al
  41061b:	jns    0x4105d3
  41061d:	mov    ecx,0xd7464dde
  410622:	je     0x4105fd
  410624:	xor    BYTE PTR [esi+eiz*4-0x8],dl
  410628:	mov    esp,DWORD PTR [esp+ebp*1-0x1f25e77a]
  41062f:	and    BYTE PTR [edx+0x42],cl
  410632:	add    eax,0x433fcb36
  410637:	mov    edx,0x179a54d4
  41063c:	pop    ss
  41063d:	imul   edi,DWORD PTR [eax-0x33],0xe16d4cf9
  410644:	add    DWORD PTR [edx+0x9],ebx
  410647:	cmp    BYTE PTR [eax+0x63],al
  41064a:	xor    al,0x6a
  41064c:	pop    ecx
  41064d:	or     al,0xb5
  41064f:	adc    eax,0xe02b9f67
  410654:	push   0x52a5825c
  410659:	aad    0x2e
  41065b:	sub    bl,dl
  41065d:	mov    ch,0xc8
  41065f:	dec    eax
  410660:	adc    eax,0x6845f109
  410665:	jnp    0x41064b
  410667:	cmp    ebp,DWORD PTR ds:0x9f85182b
  41066d:	or     eax,DWORD PTR [ebx+0x68]
  410670:	stc    
  410671:	xchg   DWORD PTR [ecx-0x73],edi
  410674:	pop    ss
  410675:	call   DWORD PTR [esi-0x50a33db8]
  41067b:	mov    bl,BYTE PTR [esi+edi*4+0x2a]
  41067f:	pusha  
  410680:	call   0x9500c09d
  410685:	push   0x3
  410687:	push   ds
  410688:	pop    ss
  410689:	add    ah,dh
  41068b:	call   0xf61d0fc4
  410690:	shl    BYTE PTR [edi+0x32afedbb],cl
  410696:	jge    0x410653
  410698:	jmp    edx
  41069a:	xor    ebx,DWORD PTR [ecx+0x4c]
  41069d:	mov    dl,0xfb
  41069f:	loop   0x410643
  4106a1:	cmp    al,0xe0
  4106a3:	add    eax,0x1df79822
  4106a8:	push   ebx
  4106a9:	sbb    DWORD PTR [edx-0x7d],0xffffffdf
  4106ad:	mov    edi,0x302b8eaf
  4106b2:	xchg   BYTE PTR [eax-0x14],ch
  4106b5:	out    dx,eax
  4106b6:	and    BYTE PTR [ecx-0x291a945c],0xe2
  4106bd:	cmp    al,0x5c
  4106bf:	fwait
  4106c0:	dec    BYTE PTR [edx-0x22]
  4106c3:	add    DWORD PTR [edi+0x63],ebp
  4106c6:	sub    bl,BYTE PTR [edx]
  4106c8:	push   DWORD PTR [edi]
  4106ca:	outs   dx,DWORD PTR ds:[esi]
  4106cb:	xor    DWORD PTR [esi-0x65],ecx
  4106ce:	lea    eax,ds:0xebdf4aeb
  4106d4:	repz inc ebp
  4106d6:	out    0x89,al
  4106d8:	inc    edx
  4106d9:	jp     0x410677
  4106db:	jno    0x410744
  4106dd:	xchg   ecx,eax
  4106de:	xor    al,0xc3
  4106e0:	mov    eax,ds:0x223748e3
  4106e5:	mov    dh,0x13
  4106e7:	je     0x4106df
  4106e9:	push   eax
  4106ea:	popf   
  4106eb:	mov    ds:0x47134ef5,al
  4106f0:	pop    ds
  4106f1:	push   edx
  4106f2:	jp     0x410730
  4106f4:	data16 scas al,BYTE PTR es:[edi]
  4106f6:	sti    
  4106f7:	or     ebx,DWORD PTR [ebx+0x67c1fd6c]
  4106fd:	mov    edi,0x9ee23c5
  410702:	pop    esi
  410703:	push   edi
  410704:	mov    bl,0x28
  410706:	(bad)  
  410707:	jle    0x410779
  410709:	iret   
  41070a:	leave  
  41070b:	aas    
  41070c:	aad    0xbd
  41070e:	daa    
  41070f:	jmp    0x6fb8db45
  410714:	int3   
  410715:	dec    edx
  410716:	jo     0x4106ea
  410718:	xchg   esi,eax
  410719:	sti    
  41071a:	dec    ecx
  41071b:	xchg   DWORD PTR [ecx+ebp*2-0x1e],edi
  41071f:	jns    0x4106ba
  410721:	adc    DWORD PTR [edx-0x48],0xffffff99
  410725:	cld    
  410726:	stos   BYTE PTR es:[edi],al
  410727:	or     al,0xa6
  410729:	xor    al,BYTE PTR [esi-0x2870e1b]
  41072f:	sub    cl,BYTE PTR [esi-0x626db56b]
  410735:	std    
  410736:	das    
  410737:	and    BYTE PTR [edi-0x4e824044],cl
  41073d:	pop    edx
  41073e:	stc    
  41073f:	les    ebx,FWORD PTR [ecx+0x76243886]
  410745:	jecxz  0x41074f
  410747:	pop    ebp
  410748:	stos   BYTE PTR es:[edi],al
  410749:	addr16 js 0x41072e
  41074c:	jno    0x4106f8
  41074e:	repz sbb BYTE PTR [ecx+0x71],cl
  410752:	and    BYTE PTR [ebx+0x65c60885],dl
  410758:	push   ecx
  410759:	xor    DWORD PTR [edi-0x4f],ecx
  41075c:	iret   
  41075d:	(bad)  
  41075f:	xchg   bl,ch
  410761:	jle    0x41073b
  410763:	sub    eax,ebp
  410765:	int3   
  410766:	jle    0x410795
  410768:	das    
  410769:	arpl   WORD PTR [ecx+0x1c922efc],bp
  41076f:	mov    ss:0xd67641ec,al
  410775:	iret   
  410776:	pop    edi
  410777:	dec    esp
  410778:	int3   
  410779:	or     al,0x1b
  41077b:	les    eax,FWORD PTR [ebp-0x419e4a55]
  410781:	pusha  
  410782:	push   ebp
  410783:	xor    ecx,DWORD PTR [ecx+ebx*1+0x48]
  410787:	add    DWORD PTR [edi+0x71a15e90],ebx
  41078d:	or     dl,BYTE PTR [esi]
  41078f:	mov    al,ds:0xc896b55f
  410794:	inc    ebx
  410795:	lea    ebx,[edi+ebp*4+0x6f]
  410799:	push   esp
  41079a:	sub    DWORD PTR [edi-0x5f],esp
  41079d:	repnz ror DWORD PTR [eax-0x46],cl
  4107a1:	xor    ebx,DWORD PTR [edi+0x79]
  4107a4:	mov    WORD PTR [ebx-0x24de45f9],ss
  4107aa:	adc    esp,DWORD PTR [edx+0x7ef651d7]
  4107b0:	ficomp WORD PTR [eax+0x2d]
  4107b3:	loope  0x41079b
  4107b5:	inc    ah
  4107b7:	push   esi
  4107b8:	pop    ds
  4107b9:	add    DWORD PTR [esi+edx*2+0x14],esi
  4107bd:	jge    0x41074a
  4107bf:	stos   DWORD PTR es:[edi],eax
  4107c0:	mov    bh,0xbf
  4107c2:	xchg   edx,eax
  4107c3:	fdiv   QWORD PTR [ebp-0x32]
  4107c6:	scas   al,BYTE PTR es:[edi]
  4107c7:	sbb    al,0x9e
  4107c9:	push   ebp
  4107ca:	inc    eax
  4107cb:	gs fdivp st(4),st
  4107ce:	imul   ebx,edx,0x42
  4107d1:	stos   DWORD PTR es:[edi],eax
  4107d2:	pop    es
  4107d3:	lock mov al,0xe8
  4107d6:	lock add DWORD PTR [ebx],edx
  4107d9:	ins    DWORD PTR es:[edi],dx
  4107da:	xchg   ecx,eax
  4107db:	mov    bl,0xa8
  4107dd:	jmp    0x4f85ac00
  4107e2:	dec    ecx
  4107e3:	and    eax,0x61ac3b49
  4107e8:	out    dx,al
  4107e9:	mul    DWORD PTR ds:0xa2102970
  4107ef:	jecxz  0x41084c
  4107f1:	sub    edi,DWORD PTR [ecx+eax*8+0x61024a84]
  4107f8:	sub    DWORD PTR [eax-0x39509d90],ecx
  4107fe:	ret    0x2d12
  410801:	jnp    0x410841
  410803:	out    0x6c,eax
  410805:	das    
  410806:	xor    BYTE PTR [eax],0x5a
  410809:	cdq    
  41080a:	inc    ebp
  41080b:	adc    eax,0xf07952ca
  410810:	push   ss
  410811:	xchg   ecx,eax
  410812:	test   BYTE PTR [eax],dl
  410814:	fidiv  WORD PTR [eax-0x4f38fcae]
  41081a:	push   edi
  41081b:	mov    eax,0xaf120e6b
  410820:	xlat   BYTE PTR ds:[ebx]
  410821:	mov    esp,0xbd75ad2e
  410826:	inc    edi
  410827:	cld    
  410828:	jae    0x410868
  41082a:	(bad)  
  41082b:	daa    
  41082c:	or     al,0x61
  41082e:	adc    BYTE PTR [ecx-0x53],0x35
  410832:	mov    bl,0x8
  410834:	lahf   
  410835:	adc    eax,0x663dce40
  41083a:	push   eax
  41083b:	bound  ebx,QWORD PTR [ebp-0x59455daa]
  410841:	mov    esi,0x734ddcc
  410846:	push   edx
  410847:	fdiv   st,st(3)
  410849:	xor    al,0xdb
  41084b:	sub    BYTE PTR [ecx],cl
  41084d:	or     eax,0x95eaa752
  410852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410853:	xchg   ecx,eax
  410854:	sub    bh,BYTE PTR [eax-0x5d0dca76]
  41085a:	jp     0x410825
  41085c:	sahf   
  41085d:	mov    dl,0x8c
  41085f:	out    0x68,al
  410861:	jne    0x41081b
  410863:	inc    edi
  410864:	addr16 mov dh,0xe4
  410867:	and    al,0xed
  410869:	push   si
  41086b:	je     0x410807
  41086d:	jnp    0x41083a
  41086f:	inc    ebp
  410870:	pop    eax
  410871:	inc    esi
  410872:	push   ebx
  410873:	add    dl,bh
  410875:	div    ch
  410877:	xlat   BYTE PTR ds:[ebx]
  410878:	dec    edi
  410879:	rcl    DWORD PTR [esp+eax*2],cl
  41087c:	rol    DWORD PTR [eax+ebx*8],1
  41087f:	mov    DWORD PTR [esi+0x5ceb5761],edi
  410885:	imul   ebp,DWORD PTR [ebp+0x61211d7b],0x4299181d
  41088f:	test   al,0x66
  410891:	jmp    0xd47f:0xc1326510
  410898:	and    ebp,DWORD PTR [esi]
  41089a:	enter  0x2f4e,0xa3
  41089e:	jl     0x4108fe
  4108a0:	pop    ebp
  4108a1:	adc    BYTE PTR [esi],cl
  4108a3:	retf   0x1aa5
  4108a6:	data16 jge 0x4108f4
  4108a9:	(bad)  [edi]
  4108ab:	cmp    al,BYTE PTR [esi-0x66]
  4108ae:	sub    DWORD PTR [edx+0x33],ebx
  4108b1:	lahf   
  4108b2:	xchg   ecx,eax
  4108b3:	or     eax,0xcfd615cc
  4108b8:	and    DWORD PTR ds:0x5c59e076,edx
  4108be:	push   edx
  4108bf:	mov    DWORD PTR [ebx-0x6047c554],edi
  4108c5:	pop    ss
  4108c6:	inc    ebx
  4108c7:	int3   
  4108c8:	call   0xa624:0x41e40dbc
  4108cf:	jecxz  0x41088b
  4108d1:	and    eax,0xfc34e1b8
  4108d6:	cld    
  4108d7:	xchg   bl,dh
  4108d9:	sahf   
  4108da:	test   eax,0x20a50623
  4108df:	xor    esp,esi
  4108e1:	jecxz  0x410943
  4108e3:	dec    ebp
  4108e4:	inc    esp
  4108e5:	repz push ebp
  4108e7:	mov    bh,0xbd
  4108e9:	or     al,0x5c
  4108eb:	mov    dh,0x99
  4108ed:	and    cl,BYTE PTR [ecx]
  4108ef:	sbb    bl,BYTE PTR [esi]
  4108f1:	mov    ebp,0x9c6390b2
  4108f6:	or     DWORD PTR [esi+0xaf20efe],edi
  4108fc:	mov    ch,0x1c
  4108fe:	pop    eax
  4108ff:	mov    edx,0x5f63b847
  410904:	mov    esp,0x75bc9bf1
  410909:	jb     0x410967
  41090b:	(bad)  
  41090c:	loop   0x4108c5
  41090e:	dec    ebp
  41090f:	pop    ss
  410910:	pushf  
  410911:	bound  ecx,QWORD PTR [edi]
  410913:	in     al,0x40
  410915:	call   FWORD PTR fs:0xe018030c
  41091c:	sub    edi,DWORD PTR [edx]
  41091e:	dec    esp
  41091f:	lods   al,BYTE PTR ds:[esi]
  410920:	clc    
  410921:	add    edx,esp
  410923:	lods   eax,DWORD PTR ds:[esi]
  410924:	cmp    ecx,DWORD PTR ds:0xba4b526a
  41092a:	ins    BYTE PTR es:[edi],dx
  41092b:	jmp    0x6dc1106f
  410930:	mov    ds:0xbd970507,al
  410935:	js     0x41096f
  410937:	stos   BYTE PTR es:[edi],al
  410938:	addr16 fwait
  41093a:	sub    BYTE PTR [edi-0x36b9a649],0x8d
  410941:	lods   eax,DWORD PTR ds:[esi]
  410942:	imul   esp,DWORD PTR ds:0x15c4c8d3,0xcd1f6405
  41094c:	and    al,0xe5
  41094e:	xor    edi,esi
  410950:	xchg   edi,eax
  410951:	pop    eax
  410952:	xor    ecx,eax
  410954:	adc    esp,DWORD PTR [ecx+0x7b]
  410957:	sbb    al,0x8e
  410959:	sub    DWORD PTR [edx+0x324e8140],ebp
  41095f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410960:	push   es
  410961:	inc    esp
  410962:	push   0x1e
  410964:	pop    esi
  410965:	sbb    ebp,DWORD PTR fs:[edi+ecx*8+0x15cebfdb]
  41096d:	dec    ebx
  41096e:	aas    
  41096f:	and    BYTE PTR [ecx],0xcc
  410972:	in     al,0x78
  410974:	cwde   
  410975:	sbb    DWORD PTR [eax-0x2f],eax
  410978:	or     dh,BYTE PTR [ebp-0x6c]
  41097b:	mov    DWORD PTR fs:[edx+0x41df5ef9],ebp
  410982:	rcr    DWORD PTR [ebx+0x38],0x9
  410986:	jp     0x4109c4
  410988:	pop    ecx
  410989:	mov    bh,0x4e
  41098b:	je     0x4109a1
  41098d:	cwde   
  41098e:	dec    esp
  41098f:	int    0x20
  410991:	scas   eax,DWORD PTR es:[edi]
  410992:	rol    DWORD PTR [edi+0x5d],0x31
  410996:	shr    BYTE PTR [ecx-0xc97dfcb],1
  41099c:	scas   al,BYTE PTR es:[edi]
  41099d:	arpl   WORD PTR [ebx-0x44],bp
  4109a0:	xchg   edx,eax
  4109a1:	mov    ebp,0x2ccf8e4c
  4109a6:	push   edx
  4109a7:	repnz pop esi
  4109a9:	add    al,0x7
  4109ab:	sbb    eax,0xbac49f56
  4109b0:	fdiv   QWORD PTR [eax-0x4c38176f]
  4109b6:	add    al,0x75
  4109b8:	aas    
  4109b9:	out    dx,eax
  4109ba:	icebp  
  4109bb:	sbb    BYTE PTR [edx-0x28],al
  4109be:	shr    cl,0x8d
  4109c1:	or     eax,DWORD PTR [ebx*8-0x2b2e7c13]
  4109c8:	ja     0x4109a9
  4109ca:	fwait
  4109cb:	mov    ds:0xa121f451,al
  4109d0:	out    dx,al
  4109d1:	rcl    DWORD PTR [ebx+0x5a62c24e],cl
  4109d7:	(bad)  
  4109d8:	lock icebp 
  4109da:	out    0xb5,eax
  4109dc:	cwde   
  4109dd:	cld    
  4109de:	xchg   DWORD PTR [edi+eax*8+0x1bf13373],edi
  4109e5:	adc    BYTE PTR [edi],ah
  4109e7:	push   edx
  4109e8:	sahf   
  4109e9:	dec    esi
  4109ea:	pop    ecx
  4109eb:	mov    es:0xfe9fe1e8,eax
  4109f1:	or     DWORD PTR ds:0xc1a6c69c,0x9
  4109f8:	adc    ebp,DWORD PTR [ebx+edi*8-0x6e0a8322]
  4109ff:	or     BYTE PTR [esi+0x18b7d428],0x11
  410a06:	int3   
  410a07:	aad    0xee
  410a09:	inc    ebx
  410a0a:	push   eax
  410a0b:	push   0xffffffa1
  410a0d:	jp     0x4109bc
  410a0f:	icebp  
  410a10:	mov    edi,0x1d47538d
  410a15:	xchg   esp,eax
  410a16:	sub    al,0x15
  410a18:	push   edx
  410a19:	clc    
  410a1a:	dec    esp
  410a1b:	xor    eax,0x982a1dfb
  410a20:	add    edi,DWORD PTR es:[edx+0x2f]
  410a24:	mov    ds:0xd6bf88ba,eax
  410a29:	lea    ebx,[eax]
  410a2b:	add    al,0xfb
  410a2d:	xchg   edi,eax
  410a2e:	je     0x4109d5
  410a30:	popa   
  410a31:	pop    ss
  410a32:	gs addr16 pmaxsw mm3,mm2
  410a37:	rcr    esi,1
  410a39:	jnp    0x410a4b
  410a3b:	inc    ebp
  410a3c:	fldcw  WORD PTR [edi+0x75]
  410a3f:	add    eax,0xf11a87ba
  410a44:	sbb    eax,0xdb34c1b3
  410a49:	mov    edi,0x25310864
  410a4e:	sti    
  410a4f:	lds    edi,FWORD PTR es:[ebx+0xf68efa]
  410a56:	push   0xee3bc363
  410a5b:	retf   
  410a5c:	mov    DWORD PTR [esi+0x12],0x377013d0
  410a63:	push   esp
  410a64:	jmp    0xa4e5d970
  410a69:	stc    
  410a6a:	mov    ah,BYTE PTR [eax+eax*8]
  410a6d:	ret    
  410a6e:	xchg   edx,eax
  410a6f:	popf   
  410a70:	mov    eax,0xc52bc0d2
  410a75:	fwait
  410a76:	push   0x9577f997
  410a7b:	in     eax,dx
  410a7c:	jge    0x410a31
  410a7e:	popf   
  410a7f:	arpl   WORD PTR ss:[ebx+eax*1+0x6],dx
  410a84:	sbb    DWORD PTR [esi+0x754217ca],esp
  410a8a:	pop    ebx
  410a8b:	push   eax
  410a8c:	pop    edx
  410a8d:	inc    esp
  410a8e:	cmp    BYTE PTR [edi+0x1d7512f5],cl
  410a94:	sbb    BYTE PTR cs:[esi+0x45],0x96
  410a99:	adc    al,0x24
  410a9b:	rcr    BYTE PTR [ebp-0x42878bd],0xc
  410aa2:	mov    dl,0xea
  410aa4:	mov    cs,WORD PTR [eax-0x7c]
  410aa7:	int    0x0
  410aa9:	lahf   
  410aaa:	add    edx,DWORD PTR [eax]
  410aac:	in     al,dx
  410aad:	ror    esp,1
  410aaf:	pop    esi
  410ab0:	test   dh,dh
  410ab2:	test   ebx,ecx
  410ab4:	fidiv  WORD PTR [edx]
  410ab6:	setge  BYTE PTR [edx-0x4c]
  410aba:	aam    0xe0
  410abc:	mov    ch,0xb6
  410abe:	aad    0x9d
  410ac0:	ins    BYTE PTR es:[edi],dx
  410ac1:	ja     0x410a46
  410ac3:	lea    edx,[ebx]
  410ac5:	xor    esi,DWORD PTR [ebx+0x20e70ab2]
  410acb:	cdq    
  410acc:	pop    edx
  410acd:	mov    ds:0x44a7023,al
  410ad2:	ss inc edi
  410ad4:	and    eax,DWORD PTR [edi]
  410ad6:	fist   DWORD PTR [ebx+eax*4-0x7d]
  410ada:	pop    esi
  410adb:	into   
  410adc:	or     al,ah
  410ade:	jae    0x410af9
  410ae0:	sbb    esi,DWORD PTR [edi+0x11]
  410ae3:	mov    ah,0x8a
  410ae5:	pop    ebx
  410ae6:	call   0xacb80128
  410aeb:	in     al,dx
  410aec:	push   ds
  410aed:	retf   0x9798
  410af0:	dec    esp
  410af2:	iret   
  410af3:	scas   eax,DWORD PTR es:[edi]
  410af4:	cdq    
  410af5:	sti    
  410af6:	and    BYTE PTR [ecx+edi*8+0x6031d598],0x7d
  410afe:	sbb    bl,BYTE PTR [ebx+0x4754923a]
  410b04:	xor    eax,0xc0ed8079
  410b09:	pop    ds
  410b0a:	jb     0x410b2c
  410b0c:	mov    dh,0xdd
  410b0e:	outs   dx,DWORD PTR ds:[esi]
  410b0f:	xor    eax,0x3ac545ae
  410b14:	dec    edi
  410b15:	sti    
  410b16:	adc    eax,DWORD PTR [ebp-0x4f79c820]
  410b1c:	xchg   BYTE PTR [ebx-0x6a3d86a5],bl
  410b22:	and    eax,DWORD PTR [edx-0xeab8003]
  410b28:	cmp    BYTE PTR [ebx],dl
  410b2a:	inc    esi
  410b2b:	xchg   ebx,eax
  410b2c:	mov    ebp,eax
  410b2e:	outs   dx,BYTE PTR ds:[esi]
  410b2f:	icebp  
  410b30:	in     al,dx
  410b31:	ficom  WORD PTR [edi+0x6d]
  410b34:	jg     0x410b35
  410b36:	(bad)  
  410b37:	std    
  410b38:	popa   
  410b39:	adc    DWORD PTR [ebx],ecx
  410b3b:	repz cmp BYTE PTR [eax+edx*2-0x4d8d4bc0],ch
  410b43:	ja     0x410b36
  410b45:	jecxz  0x410ac8
  410b47:	shl    ecx,cl
  410b49:	mov    cl,0xcd
  410b4b:	into   
  410b4c:	jp     0x410bbf
  410b4e:	sbb    al,0xbe
  410b50:	out    dx,eax
  410b51:	into   
  410b52:	jns    0x410ae4
  410b54:	cmp    esi,DWORD PTR [eax]
  410b56:	sbb    cl,BYTE PTR [ebx]
  410b58:	nop
  410b59:	cmp    dl,BYTE PTR [esi-0x1687b6c7]
  410b5f:	push   0x60d82574
  410b64:	fs icebp 
  410b66:	dec    ebp
  410b67:	int3   
  410b68:	xor    eax,0xa3612030
  410b6d:	loope  0x410b5c
  410b6f:	add    esp,ecx
  410b71:	dec    ebx
  410b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b73:	into   
  410b74:	add    DWORD PTR ds:0x5ac60a59,edi
  410b7a:	jg     0x410be8
  410b7c:	loop   0x410bb1
  410b7e:	jge    0x410ba2
  410b80:	jge    0x410b97
  410b82:	pop    edi
  410b83:	mov    ch,0x83
  410b85:	add    DWORD PTR [ebx+0x73bbfecb],0xffffffef
  410b8c:	sar    bl,1
  410b8e:	pop    eax
  410b8f:	sub    edx,edi
  410b91:	xchg   ebx,eax
  410b92:	ror    esi,cl
  410b94:	dec    BYTE PTR [ecx+ebp*8-0x38b58626]
  410b9b:	gs fdivrp st(7),st
  410b9e:	pusha  
  410b9f:	pop    ecx
  410ba0:	push   eax
  410ba1:	scas   eax,DWORD PTR es:[edi]
  410ba2:	mov    ds:0x3478813f,al
  410ba7:	jecxz  0x410bd8
  410ba9:	xlat   BYTE PTR ds:[ebx]
  410baa:	rcr    DWORD PTR [edx+eax*2+0x3bacd684],0x2a
  410bb2:	push   ds
  410bb3:	jp     0x410bc5
  410bb5:	rcr    DWORD PTR [edi],1
  410bb7:	push   ss
  410bb8:	xor    DWORD PTR [ebp-0x2e],edi
  410bbb:	aaa    
  410bbc:	sub    BYTE PTR [edi-0x57],cl
  410bbf:	cmp    ch,BYTE PTR [eax+eiz*1+0x7bedd9e1]
  410bc6:	fwait
  410bc7:	add    eax,0x48c544ed
  410bcc:	stos   DWORD PTR es:[edi],eax
  410bcd:	mov    eax,0x10d3c92
  410bd2:	das    
  410bd3:	ret    
  410bd4:	push   0xee42d9fd
  410bd9:	in     al,0x5c
  410bdb:	push   0xdbbe6865
  410be0:	mov    WORD PTR [esi+esi*4],ss
  410be3:	push   esi
  410be4:	and    DWORD PTR ds:0xe98db1cc,ecx
  410bea:	dec    ebp
  410beb:	test   DWORD PTR [esi],esi
  410bed:	dec    ebx
  410bee:	shl    DWORD PTR [ebx-0x1ec2bcbe],1
  410bf4:	cmp    edi,esp
  410bf6:	outs   dx,DWORD PTR ds:[esi]
  410bf7:	ret    
  410bf8:	fcmovu st,st(3)
  410bfa:	inc    ebx
  410bfb:	neg    dh
  410bfd:	rcr    DWORD PTR [ecx-0x76],1
  410c00:	mov    esp,0xddb9944
  410c05:	ins    BYTE PTR es:[edi],dx
  410c06:	pop    ecx
  410c07:	pop    edi
  410c08:	shl    DWORD PTR [edi],cl
  410c0a:	jns    0x410c61
  410c0c:	add    eax,0xc7593315
  410c11:	inc    esp
  410c12:	pushf  
  410c13:	jo     0x410c5b
  410c15:	sbb    eax,DWORD PTR [esi-0x1a]
  410c18:	pop    ebx
  410c19:	dec    esp
  410c1a:	test   al,0x7c
  410c1c:	aaa    
  410c1d:	mov    ds:0x27df8899,al
  410c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c23:	int3   
  410c24:	retf   
  410c25:	pop    es
  410c26:	cli    
  410c27:	(bad)  
  410c28:	shl    DWORD PTR [edi-0x2eab2e8],1
  410c2e:	cmp    eax,0x15dc3f97
  410c33:	pop    esi
  410c34:	mov    al,ds:0x25382d75
  410c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c3a:	mov    al,0x2d
  410c3c:	pop    es
  410c3d:	xchg   ecx,eax
  410c3e:	aad    0x87
  410c40:	mov    ah,0xeb
  410c42:	imul   ebp,edi,0x2161f94d
  410c48:	in     al,dx
  410c49:	ret    0xf376
  410c4c:	cmp    eax,0x91d46733
  410c51:	lods   al,BYTE PTR ds:[esi]
  410c52:	cmpps  xmm5,XMMWORD PTR [edx+0x6271892e],0x53
  410c5a:	aad    0x6c
  410c5c:	jecxz  0x410c30
  410c5e:	add    edi,0x22
  410c61:	repz cwde 
  410c63:	dec    ebx
  410c64:	gs addr16 mov ch,0xf4
  410c68:	dec    edx
  410c69:	test   DWORD PTR [edx],eax
  410c6b:	fstp   TBYTE PTR [edx+0x44]
  410c6e:	sbb    eax,0xb49fdb77
  410c73:	dec    ecx
  410c74:	jae    0x410c4b
  410c76:	lods   eax,DWORD PTR ds:[esi]
  410c77:	(bad)  
  410c78:	imul   eax,DWORD PTR [eax],0x28
  410c7b:	adc    DWORD PTR [eax],0xa5e618c6
  410c81:	int    0xd7
  410c83:	pop    ds
  410c84:	sbb    eax,0x44a00ad1
  410c89:	mov    esi,DWORD PTR [esi+esi*1]
  410c8c:	xor    al,0x57
  410c8e:	frstor [ecx]
  410c90:	inc    esp
  410c91:	dec    eax
  410c92:	push   0xffffff9c
  410c94:	xlat   BYTE PTR ds:[ebx]
  410c95:	clc    
  410c96:	and    esi,0x3b
  410c99:	adc    al,ch
  410c9b:	mov    dh,0xbf
  410c9d:	sbb    dl,BYTE PTR [edi]
  410c9f:	in     eax,dx
  410ca0:	jae    0x410c7a
  410ca2:	lock test DWORD PTR [ecx],edi
  410ca5:	mov    edx,DWORD PTR [ebx-0x4a]
  410ca8:	ret    0xc5b9
  410cab:	push   0x2e3e1a86
  410cb0:	mov    eax,0x7a326e4
  410cb5:	clc    
  410cb6:	popf   
  410cb7:	mov    eax,0xf1ac0d89
  410cbc:	pop    ss
  410cbd:	sub    edx,DWORD PTR [ebp+0x37]
  410cc0:	or     al,0xa1
  410cc2:	popf   
  410cc3:	inc    esi
  410cc4:	jle    0x410d0f
  410cc6:	mov    ebp,0x776a7624
  410ccb:	ret    
  410ccc:	faddp  st(6),st
  410cce:	enter  0x1e35,0x37
  410cd2:	enter  0xbbb7,0xc8
  410cd6:	enter  0x469b,0x16
  410cda:	mov    cl,0x59
  410cdc:	(bad)  
  410cdd:	and    bh,al
  410cdf:	dec    edx
  410ce0:	jmp    0x44059b4e
  410ce5:	jae    0x410cf8
  410ce7:	jge    0x410ce8
  410ce9:	add    ebp,ebp
  410ceb:	retf   
  410cec:	stc    
  410ced:	push   ebp
  410cee:	(bad)  
  410cef:	loope  0x410ced
  410cf1:	inc    ebx
  410cf2:	cli    
  410cf3:	stc    
  410cf4:	jae    0x410d64
  410cf6:	arpl   WORD PTR [edi+0x6a],si
  410cf9:	call   DWORD PTR [eax+0x6ef4207d]
  410cff:	leave  
  410d00:	push   cs
  410d01:	cmp    dh,bl
  410d03:	pop    esi
  410d04:	sbb    dh,0x6f
  410d07:	cmp    BYTE PTR fs:[edi],al
  410d0a:	out    0xc0,eax
  410d0c:	mov    ah,0xa8
  410d0e:	xchg   esi,eax
  410d0f:	adc    al,0x57
  410d11:	push   eax
  410d12:	mov    ds:0xcb5f006b,al
  410d17:	xor    DWORD PTR [ebp+0x20c0abd6],edx
  410d1d:	dec    ebp
  410d1e:	sub    cl,BYTE PTR [esi-0x5d]
  410d21:	aam    0x93
  410d23:	rcl    BYTE PTR [eax+0x46],1
  410d26:	mov    ah,0x67
  410d28:	jo     0x410d25
  410d2a:	fwait
  410d2b:	jns    0x410d3c
  410d2d:	xchg   esi,eax
  410d2e:	jecxz  0x410cd7
  410d30:	sbb    edx,ebx
  410d32:	mov    dl,0x50
  410d34:	add    ebx,DWORD PTR [edx-0x2d]
  410d37:	lods   eax,DWORD PTR ds:[esi]
  410d38:	and    DWORD PTR [ecx],edi
  410d3a:	in     eax,0xb
  410d3c:	add    ebx,esp
  410d3e:	push   esp
  410d3f:	push   edx
  410d40:	bound  ebp,QWORD PTR [edi+0x27]
  410d43:	mov    cl,BYTE PTR [ecx+0x2fc982f7]
  410d49:	test   ecx,edi
  410d4b:	jg     0x410daa
  410d4d:	push   ds
  410d4e:	ret    0x7ea3
  410d51:	xchg   ecx,eax
  410d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d53:	int    0x8a
  410d55:	loop   0x410d95
  410d57:	in     al,dx
  410d58:	xchg   BYTE PTR [ecx+0x3c],cl
  410d5b:	fstp   TBYTE PTR [edi+0x2d]
  410d5e:	push   eax
  410d5f:	mov    edx,0x46eafa8d
  410d64:	mov    cl,0x39
  410d66:	cmp    BYTE PTR [edx-0x52],al
  410d69:	xchg   esi,eax
  410d6a:	xor    DWORD PTR [esi],0xd6ff349e
  410d70:	aas    
  410d71:	mov    dh,0x87
  410d73:	(bad)
  410d76:	out    dx,eax
  410d77:	ret    
  410d78:	add    dl,bl
  410d7a:	mov    dl,0x5f
  410d7c:	cmp    al,0xdb
  410d7e:	stos   BYTE PTR es:[edi],al
  410d7f:	in     eax,dx
  410d80:	popf   
  410d81:	outs   dx,DWORD PTR ds:[esi]
  410d82:	es scas al,BYTE PTR es:[edi]
  410d84:	lods   al,BYTE PTR ds:[esi]
  410d85:	pop    edi
  410d86:	dec    ebx
  410d87:	popa   
  410d88:	lahf   
  410d89:	xor    DWORD PTR [edi+0x35],ecx
  410d8c:	sub    DWORD PTR [esi],0xffffffa2
  410d8f:	sbb    edi,DWORD PTR [ecx-0x7c]
  410d92:	sub    ebx,DWORD PTR ds:0x7cb0504b
  410d98:	retf   0x7117
  410d9b:	and    BYTE PTR [edi+eax*8],bl
  410d9e:	and    cl,BYTE PTR [ebx+0x1f6a3c9b]
  410da4:	outs   dx,BYTE PTR ds:[esi]
  410da5:	popa   
  410da6:	in     al,dx
  410da7:	fidivr WORD PTR [ebx+0x79]
  410daa:	icebp  
  410dab:	and    eax,0x211ec3a5
  410db0:	test   eax,0x119a273c
  410db5:	sar    DWORD PTR [edx+0x303acd22],0xcd
  410dbc:	jmp    0x410d7b
  410dbe:	es loopne 0x410e33
  410dc1:	and    esi,edi
  410dc3:	es dec ebx
  410dc5:	sbb    BYTE PTR [edi+0x31],0x20
  410dc9:	daa    
  410dca:	jne    0x410e02
  410dcc:	rcr    BYTE PTR [ebp-0x42a6eeb5],0xab
  410dd3:	cwde   
  410dd4:	jge    0x410e0d
  410dd6:	push   eax
  410dd7:	mov    esp,0xb7099e9b
  410ddc:	mov    ebp,ebp
  410dde:	cmc    
  410ddf:	imul   edi,DWORD PTR [ebp+0x36],0xfffffff4
  410de3:	cmp    al,BYTE PTR [esi]
  410de5:	ds cs in eax,dx
  410de8:	sub    al,0x3c
  410dea:	cld    
  410deb:	mov    ah,0x59
  410ded:	stc    
  410dee:	push   0x45
  410df0:	and    DWORD PTR [ecx-0x6ec24a97],edx
  410df6:	push   edx
  410df7:	xchg   ecx,eax
  410df8:	sbb    eax,0xe9349a27
  410dfd:	add    eax,0x57cbb94a
  410e02:	dec    edi
  410e03:	push   edi
  410e04:	stc    
  410e05:	or     BYTE PTR [edi+0x4beac023],ch
  410e0b:	ss out 0x39,eax
  410e0e:	mov    ebx,DWORD PTR [eax-0x2790733b]
  410e14:	mov    edi,0xbd5f57ed
  410e19:	mov    al,0xca
  410e1b:	fwait
  410e1c:	lahf   
  410e1d:	xchg   esi,eax
  410e1e:	add    BYTE PTR [ecx+0xece2218],0x7d
  410e25:	ja     0x410ddc
  410e27:	pop    edi
  410e28:	jno    0x410e21
  410e2a:	out    0xd0,al
  410e2c:	ins    BYTE PTR es:[edi],dx
  410e2d:	xor    ch,BYTE PTR [edi-0x1e6682c7]
  410e33:	out    0xd1,eax
  410e35:	mov    ebp,0xb06f926e
  410e3a:	shl    edx,cl
  410e3c:	sti    
  410e3d:	xchg   ebp,eax
  410e3e:	jnp    0x410e0a
  410e40:	jo     0x410ddc
  410e42:	mov    ebx,0x4f7af576
  410e47:	mov    eax,ds:0x95187192
  410e4c:	outs   dx,DWORD PTR ds:[esi]
  410e4d:	shl    ecx,cl
  410e4f:	push   ds
  410e50:	sbb    edx,edi
  410e52:	xchg   ecx,eax
  410e53:	cmp    al,0xd4
  410e55:	mov    ds:0x41e1049,al
  410e5a:	fcmovne st,st(0)
  410e5c:	sbb    eax,0xa5489b70
  410e61:	retf   0x45af
  410e64:	add    BYTE PTR [edx+0x5b],dh
  410e67:	lods   al,BYTE PTR ds:[si]
  410e69:	rol    BYTE PTR [esi+0x7ff61f0f],0x1
  410e70:	xchg   edi,eax
  410e71:	cmp    eax,0xd725f022
  410e76:	loop   0x410e25
  410e78:	xchg   esi,eax
  410e79:	mov    edx,0x88d7e288
  410e7e:	sub    edi,DWORD PTR [eax+0x42c76eaa]
  410e84:	(bad)  
  410e85:	and    al,BYTE PTR [ebp+0x631541c8]
  410e8b:	out    0x61,al
  410e8d:	cwde   
  410e8e:	popa   
  410e8f:	or     al,BYTE PTR [eax+0x65]
  410e92:	sub    al,0x43
  410e94:	pop    edx
  410e95:	fimul  WORD PTR ds:0x62834714
  410e9b:	or     BYTE PTR [ecx-0xca2c0ee],dh
  410ea1:	cmp    cl,BYTE PTR [edi-0x369ae321]
  410ea7:	outs   dx,BYTE PTR ds:[esi]
  410ea8:	dec    esp
  410ea9:	and    esp,DWORD PTR [ebx+0x96ed830]
  410eaf:	pop    esi
  410eb0:	sti    
  410eb1:	xor    ebx,DWORD PTR [eax-0x1f686d15]
  410eb7:	stos   DWORD PTR es:[edi],eax
  410eb8:	stos   DWORD PTR es:[edi],eax
  410eb9:	inc    edx
  410eba:	jmp    DWORD PTR [edx-0x10b2ea16]
  410ec0:	cli    
  410ec1:	dec    esi
  410ec2:	in     eax,0x90
  410ec4:	bound  esi,QWORD PTR [eax+0x53d4c9f6]
  410eca:	xchg   edx,eax
  410ecb:	arpl   WORD PTR [edx],di
  410ecd:	and    esi,DWORD PTR [esi+0x5fe3f95f]
  410ed3:	shr    esi,0xf5
  410ed6:	in     al,0x8
  410ed8:	aam    0x6c
  410eda:	sar    DWORD PTR [ebp-0x16],0x65
  410ede:	pushf  
  410edf:	lahf   
  410ee0:	push   ecx
  410ee1:	inc    ebp
  410ee2:	dec    esp
  410ee3:	mov    ecx,0x2193af5f
  410ee8:	inc    esi
  410ee9:	stos   DWORD PTR es:[edi],eax
  410eea:	inc    esp
  410eeb:	add    eax,0x13760092
  410ef0:	outs   dx,DWORD PTR ds:[esi]
  410ef1:	int3   
  410ef2:	push   0xaaa5b5e2
  410ef7:	jno    0x410f0a
  410ef9:	repz call 0x14e7:0xaa6afc29
  410f01:	sub    ah,al
  410f03:	dec    esp
  410f04:	mov    ah,0xd6
  410f06:	jnp    0x410e92
  410f08:	adc    eax,0x264bf593
  410f0d:	in     al,dx
  410f0e:	jmp    0x37ab50cc
  410f13:	xor    eax,0x3968d9eb
  410f18:	mov    esi,0xfe3bfa52
  410f1d:	mov    eax,ds:0x4510fe4d
  410f22:	jne    0x410f62
  410f24:	xchg   edx,eax
  410f25:	mov    bh,0xe9
  410f27:	in     eax,dx
  410f28:	lds    ecx,FWORD PTR [ecx-0x1e34f25e]
  410f2e:	push   ecx
  410f2f:	mov    esi,0xa4c1cf8e
  410f34:	js     0x410f83
  410f36:	cmp    DWORD PTR [eax-0x3066b0ec],esp
  410f3c:	jnp    0x410f96
  410f3e:	dec    edx
  410f3f:	and    eax,0xeffe1a8c
  410f44:	mov    WORD PTR [edi],cs
  410f46:	stc    
  410f47:	jno    0x410edd
  410f49:	cli    
  410f4a:	jmp    0x97c1:0xe5a7182e
  410f51:	adc    ch,BYTE PTR [edx+0x3f]
  410f54:	mov    bh,BYTE PTR [esi]
  410f56:	xlat   BYTE PTR ds:[ebx]
  410f57:	enter  0x880e,0x42
  410f5b:	pop    eax
  410f5c:	sahf   
  410f5d:	and    al,0x4b
  410f5f:	mov    esp,0x876324c4
  410f64:	jmp    0x410f0d
  410f66:	push   edi
  410f67:	xchg   esp,eax
  410f68:	retf   
  410f69:	rcl    BYTE PTR [ebp+0x2e],cl
  410f6c:	push   esp
  410f6d:	cmp    eax,0xa649826
  410f72:	mov    DWORD PTR [edi],0x762536d4
  410f78:	xor    BYTE PTR [edx],0x99
  410f7b:	mov    ch,0x64
  410f7d:	pop    esi
  410f7e:	sbb    al,bl
  410f80:	jne    0x410fb3
  410f82:	jo     0x410f05
  410f84:	retf   
  410f85:	(bad)  
  410f86:	ins    DWORD PTR es:[edi],dx
  410f87:	sbb    al,0x87
  410f89:	jno    0x410fc4
  410f8b:	addr16 dec edi
  410f8d:	sub    bh,BYTE PTR [ebx+0x6b3d3d89]
  410f93:	dec    esi
  410f94:	and    al,0x93
  410f96:	es xchg edi,eax
  410f98:	arpl   dx,bp
  410f9a:	arpl   WORD PTR [eax],si
  410f9c:	dec    ebx
  410f9d:	pop    esp
  410f9e:	in     eax,0x2c
  410fa0:	clc    
  410fa1:	arpl   sp,si
  410fa3:	popa   
  410fa4:	in     eax,dx
  410fa5:	sub    eax,0x75c8b28d
  410faa:	jecxz  0x410fbf
  410fac:	xchg   ecx,eax
  410fad:	loope  0x411002
  410faf:	es sub al,0x42
  410fb2:	imul   esp,ebx,0xb6b27503
  410fb8:	add    al,0x2
  410fba:	stc    
  410fbb:	ins    DWORD PTR es:[edi],dx
  410fbc:	out    0x5e,al
  410fbe:	lods   eax,DWORD PTR ds:[esi]
  410fbf:	ret    0xda17
  410fc2:	rcl    al,cl
  410fc4:	mov    esp,0xeb598064
  410fc9:	sbb    BYTE PTR [edi+0x297d4c6b],cl
  410fcf:	xor    ch,BYTE PTR [edx+ebp*4]
  410fd2:	fwait
  410fd3:	or     DWORD PTR [eax],0x25
  410fd6:	sub    BYTE PTR [edi+0x65dd31b7],ch
  410fdc:	adc    DWORD PTR [esi],0x99d862d
  410fe2:	mov    ?,WORD PTR [eax]
  410fe4:	xchg   ebp,eax
  410fe5:	sbb    al,bh
  410fe7:	mov    bh,0x96
  410fe9:	adc    DWORD PTR [esi],edi
  410feb:	jg     0x411053
  410fed:	cdq    
  410fee:	jo     0x410fac
  410ff0:	xlat   BYTE PTR ds:[ebx]
  410ff1:	iret   
  410ff2:	xor    DWORD PTR [edi+0x4],0xffffffc8
  410ff6:	mov    ecx,0xab5195f5
  410ffb:	cmp    bl,BYTE PTR [edx-0x7a5e26c8]
  411001:	jns    0x410fcc
  411003:	jg     0x411011
  411005:	and    ch,ch
  411007:	mov    eax,ds:0xc335ab4f
  41100c:	dec    esp
  41100d:	inc    ebx
  41100e:	test   BYTE PTR [ecx],0x93
  411011:	pop    edx
  411012:	ss sbb eax,0x34197cd5
  411018:	mov    dh,0xc3
  41101a:	and    eax,0x8c9c58a1
  41101f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411021:	mov    edx,ebx
  411023:	inc    eax
  411024:	hlt    
  411025:	sbb    eax,0x4adaf224
  41102a:	jbe    0x411066
  41102c:	pop    ebx
  41102d:	test   DWORD PTR [esi],eax
  41102f:	pusha  
  411030:	fadd   DWORD PTR [edx-0x6a]
  411033:	in     eax,0xa1
  411035:	mov    BYTE PTR [edi-0x20292df1],bh
  41103b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41103c:	nop
  41103d:	dec    ebp
  41103e:	jo     0x41108b
  411040:	add    al,0xb4
  411042:	cmp    edi,DWORD PTR [edi+0x16]
  411045:	add    ecx,ebx
  411047:	ror    BYTE PTR [ebp+0x1bb293bc],1
  41104d:	cli    
  41104e:	sbb    eax,0xd9aa1b7c
  411053:	ja     0x410fdb
  411055:	xchg   esi,eax
  411056:	inc    ebp
  411057:	cli    
  411058:	lods   al,BYTE PTR ds:[esi]
  411059:	mov    dl,0x38
  41105b:	pop    ds
  41105c:	cmp    esp,edi
  41105e:	mov    BYTE PTR [edi-0x3a4c7c16],bl
  411064:	jmp    0x411058
  411066:	mov    WORD PTR ds:0x22638ea2,fs
  41106c:	and    eax,0xd588075
  411071:	test   eax,0xc8f48dbc
  411076:	adc    eax,0xe3ec0101
  41107b:	sti    
  41107c:	lahf   
  41107d:	into   
  41107e:	or     BYTE PTR [esi+ebx*2-0x73e098fe],cl
  411085:	sub    dh,ah
  411087:	js     0x411056
  411089:	jno    0x4110f0
  41108b:	loope  0x411046
  41108d:	dec    ebx
  41108e:	stos   DWORD PTR es:[edi],eax
  41108f:	add    eax,0x88d281a3
  411094:	adc    al,0xc8
  411096:	retf   0x5374
  411099:	bound  edi,QWORD PTR [ecx+0x9f79e5b]
  41109f:	pusha  
  4110a0:	scas   al,BYTE PTR es:[edi]
  4110a1:	test   ah,cl
  4110a3:	(bad)  
  4110a4:	clc    
  4110a5:	in     al,0x71
  4110a7:	sbb    al,ch
  4110a9:	mov    dh,0x78
  4110ab:	in     al,0x5
  4110ad:	pop    ebp
  4110ae:	jno    0x411080
  4110b0:	sub    DWORD PTR [ebx-0x2a],esp
  4110b3:	jbe    0x411131
  4110b5:	ja     0x411040
  4110b7:	lock (bad) 
  4110b9:	mov    eax,ds:0x4f3f28e5
  4110be:	pop    ebp
  4110bf:	mov    bh,0x43
  4110c1:	pop    esp
  4110c2:	push   edi
  4110c3:	xchg   edi,esi
  4110c5:	lock test al,0xdc
  4110c8:	aad    0xba
  4110ca:	jo     0x411113
  4110cc:	fiadd  DWORD PTR [eax+eiz*1-0x5c46dbfc]
  4110d3:	ss pushf 
  4110d5:	out    dx,al
  4110d6:	sar    DWORD PTR [esi+0x5e],0xe7
  4110da:	or     al,0x85
  4110dc:	sub    BYTE PTR [esi-0x5b78d86a],ch
  4110e2:	sub    al,0xdd
  4110e4:	scas   al,BYTE PTR es:[edi]
  4110e5:	out    dx,eax
  4110e6:	(bad)  
  4110e7:	mul    DWORD PTR [eax+0x39c627f2]
  4110ed:	cwde   
  4110ee:	(bad)  
  4110ef:	fbstp  TBYTE PTR [ebp+0x31d6645a]
  4110f5:	jae    0x411169
  4110f7:	std    
  4110f8:	leave  
  4110f9:	push   esp
  4110fa:	xor    al,0xb3
  4110fc:	aam    0x8e
  4110fe:	ret    
  4110ff:	sbb    DWORD PTR [edi+0x3c459d40],edx
  411105:	(bad)  
  411106:	mov    ch,0xf9
  411108:	sbb    bh,bl
  41110a:	les    eax,FWORD PTR [ecx-0x79ab05f9]
  411110:	pop    ebp
  411111:	pop    ecx
  411112:	cmc    
  411113:	mov    esi,edx
  411115:	rcl    DWORD PTR [edx+ecx*8],0x29
  411119:	jle    0x4110b7
  41111b:	scas   al,BYTE PTR es:[edi]
  41111c:	dec    esi
  41111d:	sbb    bl,BYTE PTR [edx]
  41111f:	xchg   edx,eax
  411120:	or     BYTE PTR [ebp-0x3c],ch
  411123:	sub    esp,ebp
  411125:	pop    ecx
  411126:	xchg   DWORD PTR [ebx-0x5c],esi
  411129:	adc    edx,ecx
  41112b:	aaa    
  41112c:	jo     0x41113d
  41112e:	or     BYTE PTR [eax+0x27],dh
  411131:	pop    ds
  411132:	xchg   ebp,eax
  411133:	lds    ecx,FWORD PTR [ebp+0x40bc4c0e]
  411139:	addr16 cmp al,0x13
  41113c:	inc    edx
  41113d:	imul   cx,WORD PTR [edi],0x0
  411141:	xchg   DWORD PTR [ebx+eiz*8+0x74a1588f],ecx
  411148:	call   0x83e2:0x5e0f02f1
  41114f:	dec    edx
  411150:	xor    BYTE PTR [esi+0x60],dl
  411153:	push   eax
  411154:	dec    eax
  411155:	arpl   di,bp
  411157:	fdiv   QWORD PTR [ebp+0x2700bafd]
  41115d:	xor    esi,DWORD PTR [esi]
  41115f:	and    BYTE PTR [ecx+0x224eed5f],cl
  411165:	jb     0x4111c6
  411167:	les    esi,FWORD PTR [ecx+0x6165c0fd]
  41116d:	xchg   esp,eax
  41116e:	sti    
  41116f:	int3   
  411170:	push   esi
  411171:	(bad)  [ecx+0x40307acd]
  411177:	fldl2t 
  411179:	and    ebp,edi
  41117b:	sub    DWORD PTR [edi],edx
  41117d:	les    ebx,FWORD PTR [ebp-0x16]
  411180:	dec    ecx
  411181:	sbb    ch,0x2f
  411184:	cmc    
  411185:	xchg   edx,eax
  411186:	imul   BYTE PTR [ebx+0x4827ef3c]
  41118c:	xchg   edi,eax
  41118d:	(bad)  
  41118e:	jno    0x411186
  411190:	enter  0xdc36,0x7
  411194:	inc    ebx
  411195:	ins    BYTE PTR es:[edi],dx
  411196:	mov    esp,0xb098012f
  41119b:	push   esi
  41119c:	stos   DWORD PTR es:[edi],eax
  41119d:	inc    ebx
  41119e:	loop   0x411150
  4111a0:	outs   dx,BYTE PTR ds:[esi]
  4111a1:	inc    eax
  4111a2:	mov    ch,0x8e
  4111a4:	mov    eax,ecx
  4111a6:	inc    ebp
  4111a7:	mov    bl,dl
  4111a9:	hlt    
  4111aa:	pop    ss
  4111ab:	sub    ebp,0x33562e1f
  4111b1:	mov    DWORD PTR [esi+0x40170a00],ebp
  4111b7:	mov    BYTE PTR [esi-0x3],dh
  4111ba:	push   cs
  4111bb:	push   esi
  4111bc:	loopne 0x411143
  4111be:	dec    ebp
  4111bf:	pushf  
  4111c0:	retf   
  4111c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c2:	jecxz  0x4111d8
  4111c4:	dec    esp
  4111c5:	fsub   st(2),st
  4111c7:	shl    BYTE PTR [ebx+ebp*2-0x50],cl
  4111cb:	adc    al,0x78
  4111cd:	mov    bl,BYTE PTR [edx+0x71]
  4111d0:	and    eax,0xad4fc36a
  4111d5:	std    
  4111d6:	push   ds
  4111d7:	xor    eax,0xca782ff4
  4111dc:	add    eax,DWORD PTR ds:0x778a6f21
  4111e2:	jge    0x411257
  4111e4:	dec    esp
  4111e5:	retf   
  4111e6:	call   FWORD PTR [edi]
  4111e8:	or     bl,BYTE PTR [ecx+0x27]
  4111eb:	adc    ecx,edi
  4111ed:	js     0x411188
  4111ef:	(bad)  
  4111f0:	and    BYTE PTR [edx],dl
  4111f2:	outs   dx,BYTE PTR ds:[esi]
  4111f3:	bound  eax,QWORD PTR [ebp-0xd]
  4111f6:	fsubr  DWORD PTR [ebp-0x272dd730]
  4111fc:	out    0xff,al
  4111fe:	aad    0xce
  411200:	cmp    eax,0xfd1d6cb8
  411205:	jp     0x411232
  411207:	add    al,0xc
  411209:	mov    esi,0xa79ef4f3
  41120e:	jmp    0x411201
  411210:	mov    ebx,fs
  411212:	inc    edi
  411213:	adc    eax,0x5e7c9fa5
  411218:	out    0x69,eax
  41121a:	mov    DWORD PTR [esi+0x25c120ea],ebp
  411220:	xor    eax,0x2784d6b0
  411225:	loop   0x4111f7
  411227:	or     eax,0xa4aff7ce
  41122c:	je     0x4111e2
  41122e:	mov    al,0xe5
  411230:	in     eax,0x3b
  411232:	dec    edx
  411233:	and    BYTE PTR [edi+0x6d],bh
  411236:	mov    edx,0x5f06d47a
  41123b:	loope  0x411277
  41123d:	mov    al,ds:0x6cd86589
  411242:	cld    
  411243:	pop    ds
  411244:	ins    DWORD PTR es:[edi],dx
  411245:	xchg   ecx,eax
  411246:	test   bl,0xd8
  411249:	jns    0x4111fe
  41124b:	cmc    
  41124c:	xor    edi,DWORD PTR [ebp-0x623e0089]
  411252:	(bad)  
  411253:	mov    cl,0x1e
  411255:	sub    ecx,DWORD PTR [ebx-0x39e6af20]
  41125b:	jbe    0x4111f6
  41125d:	xchg   esp,eax
  41125e:	sbb    ah,ch
  411260:	or     eax,0x7e0dc30e
  411265:	mov    ecx,0x105186a2
  41126a:	jo     0x4112b7
  41126c:	or     edx,esp
  41126e:	xor    BYTE PTR [eax-0x563d1471],al
  411274:	cmp    cl,BYTE PTR [edx+0x4f74c0ff]
  41127a:	fiadd  WORD PTR [esp+eax*8]
  41127d:	add    BYTE PTR [ebx-0x55],dh
  411280:	add    ebp,edx
  411282:	fisttp QWORD PTR [edi+0x3e2d6ea1]
  411288:	inc    ebp
  411289:	sub    eax,DWORD PTR [esp+ebp*8]
  41128c:	pop    eax
  41128d:	lock mov BYTE PTR [edi],ah
  411290:	mov    dh,0xc7
  411292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411293:	dec    ebp
  411294:	mov    al,ds:0xd805ab7d
  411299:	repz adc eax,0x24
  41129d:	sbb    esp,ebp
  41129f:	adc    al,0xfb
  4112a1:	jne    0x4112a9
  4112a3:	sbb    ebx,DWORD PTR [ebp-0x81515b5]
  4112a9:	push   esp
  4112aa:	push   es
  4112ab:	mov    edx,0x95d5778c
  4112b0:	int    0x75
  4112b2:	adc    BYTE PTR [ebp+0x3b4c18d2],bh
  4112b8:	(bad)  
  4112b9:	add    eax,0x125ddcf2
  4112be:	add    BYTE PTR [edi-0x1a],bl
  4112c1:	and    DWORD PTR [ebp-0x1a],esp
  4112c4:	clc    
  4112c5:	jl     0x41131b
  4112c7:	add    al,0x5d
  4112c9:	arpl   ax,bx
  4112cb:	rcr    DWORD PTR ds:0x3849b8c0,0x39
  4112d2:	mov    ecx,ss
  4112d4:	daa    
  4112d5:	add    BYTE PTR [edx],bl
  4112d7:	mov    edi,0xa10dd571
  4112dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112dd:	es dec esp
  4112df:	xchg   ebp,eax
  4112e0:	(bad)  
  4112e1:	mov    ch,0x90
  4112e3:	and    al,0x6
  4112e5:	icebp  
  4112e6:	loop   0x4112ff
  4112e8:	cs sub ebp,eax
  4112eb:	pop    ecx
  4112ec:	enter  0x590e,0xb8
  4112f0:	fmul   st,st(3)
  4112f2:	jl     0x4112cb
  4112f4:	push   edi
  4112f5:	outs   dx,BYTE PTR ds:[esi]
  4112f6:	inc    ebx
  4112f7:	push   eax
  4112f8:	xchg   ecx,eax
  4112f9:	dec    esp
  4112fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fb:	mov    ch,0x53
  4112fd:	xlat   BYTE PTR ds:[ebx]
  4112fe:	sbb    ebp,DWORD PTR [esi+eiz*4-0x54]
  411302:	push   es
  411303:	popf   
  411304:	mov    ds:0xee5d7c1c,al
  411309:	scas   al,BYTE PTR es:[edi]
  41130a:	lds    esi,FWORD PTR ds:0x28a4b0bf
  411310:	jp     0x411317
  411312:	pushf  
  411313:	and    BYTE PTR [eax-0x35b1a8cb],ch
  411319:	and    BYTE PTR [ecx-0x1b0d1940],cl
  41131f:	daa    
  411320:	push   es
  411321:	sbb    ebp,DWORD PTR [edx]
  411323:	dec    edx
  411324:	sbb    BYTE PTR [ebp+0x6a1b21e0],dl
  41132a:	outs   dx,DWORD PTR ds:[esi]
  41132b:	(bad)  
  41132c:	in     eax,dx
  41132d:	mov    ah,0xda
  41132f:	rcr    BYTE PTR [edx-0x65],0x5e
  411333:	stos   BYTE PTR es:[edi],al
  411334:	fcomi  st,st(6)
  411336:	(bad)  
  411337:	dec    cx
  411339:	pop    ss
  41133a:	jo     0x4112ce
  41133c:	mov    ecx,0x5a9fd401
  411341:	pop    edi
  411342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411343:	inc    ebx
  411344:	lea    ecx,[esi+0x5a]
  411347:	inc    esi
  411348:	mov    bh,0x25
  41134a:	push   ss
  41134b:	jecxz  0x4112fe
  41134d:	daa    
  41134e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411350:	ret    
  411351:	dec    esp
  411352:	and    eax,0x75baa08a
  411357:	mov    DWORD PTR [esi+0x5a853ffc],esp
  41135d:	fdivr  QWORD PTR [ebx]
  41135f:	ret    
  411360:	aas    
  411361:	mov    bl,0x2
  411363:	mov    ecx,0xc0c1c717
  411368:	call   0x4912:0x687d578f
  41136f:	bound  edx,QWORD PTR [eax-0xb]
  411372:	xchg   edi,eax
  411373:	enter  0xd27d,0xdb
  411377:	jmp    0xa20e6b72
  41137c:	inc    edi
  41137d:	out    dx,al
  41137e:	(bad)  
  41137f:	call   0x699d:0x8c42f3ce
  411386:	xchg   ax,ax
  411388:	enter  0xf4c7,0xf9
  41138c:	aaa    
  41138d:	sub    ebx,DWORD PTR [edi-0xe5ab45f]
  411393:	pcmpeqb mm4,mm1
  411396:	outs   dx,DWORD PTR ds:[esi]
  411397:	enter  0xf0f1,0x5f
  41139b:	or     cl,bl
  41139d:	xchg   ah,ch
  41139f:	ficom  WORD PTR [edi+esi*4]
  4113a2:	imul   esp,DWORD PTR [ebp+edx*4+0x72],0xffffffbf
  4113a7:	pusha  
  4113a8:	ret    0x9492
  4113ab:	sbb    eax,0x5f69d9af
  4113b0:	int    0x91
  4113b2:	test   DWORD PTR [ebp-0x63],esp
  4113b5:	dec    eax
  4113b6:	and    al,BYTE PTR [eax+0x27]
  4113b9:	jg     0x4113d2
  4113bb:	ret    0xaeb5
  4113be:	mov    cl,0x8b
  4113c0:	add    al,0xf5
  4113c2:	ins    BYTE PTR es:[edi],dx
  4113c3:	jne    0x4113b4
  4113c5:	fprem  
  4113c7:	sub    al,0x48
  4113c9:	pop    edi
  4113ca:	jmp    0x6218:0x49db4184
  4113d1:	rol    eax,cl
  4113d3:	and    BYTE PTR [ebx-0x36],al
  4113d6:	cdq    
  4113d7:	and    al,0x83
  4113d9:	push   edx
  4113da:	and    dl,al
  4113dc:	fld    QWORD PTR [esi+0x6793a700]
  4113e2:	jne    0x4113c0
  4113e4:	dec    eax
  4113e5:	loop   0x4113ac
  4113e7:	jne    0x4113cc
  4113e9:	fidiv  DWORD PTR [esi-0x1d1ff5a5]
  4113ef:	popa   
  4113f0:	push   0x7568fae9
  4113f5:	dec    edi
  4113f6:	adc    esp,DWORD PTR [edx+0x4254c0fa]
  4113fc:	popw   ds
  4113fe:	popa   
  4113ff:	push   esi
  411400:	dec    esp
  411401:	loope  0x411480
  411403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411404:	cmp    BYTE PTR [ebx+0x1754c49],cl
  41140a:	or     BYTE PTR [ebx+edi*1-0x40],ah
  41140e:	cs call 0xb48e:0x97efb9f6
  411416:	dec    esp
  411417:	mov    ds:0xe8f12e33,eax
  41141c:	fiadd  WORD PTR [edx-0x4df3da5e]
  411422:	lock clc 
  411424:	push   esp
  411425:	xchg   esp,eax
  411426:	push   0x3d
  411428:	int    0x9f
  41142a:	neg    BYTE PTR [edi-0x26]
  41142d:	xchg   edi,eax
  41142e:	call   0x339:0xaed66c19
  411435:	cmp    esi,DWORD PTR es:[esi-0x3d]
  411439:	xlat   BYTE PTR ds:[ebx]
  41143a:	dec    ebx
  41143b:	cli    
  41143c:	aam    0x32
  41143e:	sbb    DWORD PTR [eax],eax
  411440:	std    
  411441:	jo     0x411452
  411443:	fs sbb ebx,ebx
  411446:	repz push 0xe2309365
  41144c:	out    0xf9,eax
  41144e:	push   esp
  41144f:	fsub   DWORD PTR [edx-0x86479cf]
  411455:	aad    0x5c
  411457:	js     0x4114cd
  411459:	clc    
  41145a:	sbb    ebx,ebp
  41145c:	cwde   
  41145d:	push   ecx
  41145e:	xchg   esi,eax
  41145f:	jae    0x411485
  411461:	retf   
  411462:	out    dx,al
  411463:	call   0x5716d980
  411468:	cld    
  411469:	ins    BYTE PTR es:[edi],dx
  41146a:	dec    ecx
  41146b:	and    DWORD PTR [ebp+0x66],eax
  41146e:	jle    0x411428
  411470:	cmp    BYTE PTR [ecx-0x3f427d28],dl
  411476:	xchg   ecx,eax
  411477:	mov    BYTE PTR [ebx+0x1552059c],ah
  41147d:	inc    edi
  41147e:	or     al,0x78
  411480:	jae    0x4114bc
  411482:	jp     0x411502
  411484:	mov    ds:0x92acaff2,al
  411489:	sbb    al,0xde
  41148b:	xchg   ebp,eax
  41148c:	test   al,0xf
  41148e:	sti    
  41148f:	adc    DWORD PTR ds:0x5cdfcd8a,0x8863d18
  411499:	stos   DWORD PTR es:[edi],eax
  41149a:	push   0xc12f8976
  41149f:	stc    
  4114a0:	fwait
  4114a1:	xchg   edi,eax
  4114a2:	cld    
  4114a3:	cld    
  4114a4:	adc    al,0x64
  4114a6:	pop    edi
  4114a7:	sub    DWORD PTR [esi-0x6a],0x7b
  4114ab:	mov    edx,cs
  4114ad:	cs fwait
  4114af:	ret    0xff0b
  4114b2:	shl    DWORD PTR [edi-0x2fb17b60],cl
  4114b8:	fs inc dx
  4114bb:	int3   
  4114bc:	and    DWORD PTR [eax],ebx
  4114be:	or     eax,0x79613d1a
  4114c3:	fmul   QWORD PTR [eax]
  4114c5:	rol    DWORD PTR ds:0xabe49c7d,cl
  4114cb:	bound  ebx,QWORD PTR [ebx+0x335b31e1]
  4114d1:	push   edx
  4114d2:	sbb    eax,0x85ad62e8
  4114d7:	cmp    eax,DWORD PTR [edi]
  4114d9:	push   es
  4114da:	dec    edi
  4114db:	cld    
  4114dc:	pop    ecx
  4114dd:	push   ebp
  4114de:	fisub  WORD PTR [ebp+0x6ccf0a29]
  4114e4:	popa   
  4114e5:	mov    eax,0x21478d63
  4114ea:	pop    ss
  4114eb:	call   0xa10b:0xd89e44ce
  4114f2:	and    dh,BYTE PTR [edx+0x13]
  4114f5:	sub    al,0xa7
  4114f7:	adc    ch,BYTE PTR [esi-0x6f]
  4114fa:	xor    DWORD PTR [ebx-0x46],ebp
  4114fd:	jmp    0xc50b:0xadb07b20
  411504:	shr    esp,0xce
  411507:	ins    DWORD PTR es:[edi],dx
  411508:	cmp    BYTE PTR [eax],dl
  41150a:	bound  edi,QWORD PTR [ebx-0x42ce8139]
  411510:	loop   0x41155e
  411512:	aad    0x20
  411514:	mov    esi,0x6005c0b4
  411519:	pop    es
  41151a:	lods   al,BYTE PTR ds:[esi]
  41151b:	or     BYTE PTR [eax+0x361ebc66],ah
  411521:	dec    esp
  411522:	mov    ds:0xdb1d1a9f,eax
  411527:	ret    0x87e3
  41152a:	dec    ebx
  41152b:	xor    ebx,edi
  41152d:	je     0x4114d5
  41152f:	mov    ch,0x75
  411531:	sbb    eax,0xf6f3b2da
  411536:	loopne 0x4115a5
  411538:	out    dx,eax
  411539:	fidiv  WORD PTR [ebx+0x62]
  41153c:	fld    st(6)
  41153e:	cmp    eax,DWORD PTR [edx-0x2a7d6128]
  411544:	jb     0x411545
  411546:	repnz or eax,0xd276e253
  41154c:	dec    eax
  41154d:	push   0xa
  41154f:	leave  
  411550:	enter  0x17c4,0xc1
  411554:	cmp    eax,DWORD PTR [ebx+ebp*1-0xa53464c]
  41155b:	sub    eax,0xe68bf9a6
  411560:	ret    
  411561:	mov    dh,ch
  411563:	cmp    eax,0x85c1fd9
  411568:	add    cl,BYTE PTR [esi]
  41156a:	mov    BYTE PTR [eax+0x25be987],ah
  411570:	lods   al,BYTE PTR ds:[esi]
  411571:	imul   ebp,DWORD PTR [edx+0x6ea0656b],0xffffffd1
  411578:	sbb    ch,dh
  41157a:	das    
  41157b:	dec    edi
  41157c:	pop    eax
  41157d:	mov    ds:0xd67251e1,al
  411582:	lea    ebp,[ecx]
  411584:	sbb    al,BYTE PTR [eax+edx*2]
  411587:	jmp    0x27dd41a4
  41158c:	lods   eax,DWORD PTR ds:[esi]
  41158d:	scas   eax,DWORD PTR es:[edi]
  41158e:	push   esp
  41158f:	push   0x3a
  411591:	dec    ebp
  411592:	div    BYTE PTR [ebp+0x7c]
  411595:	ins    DWORD PTR es:[edi],dx
  411596:	out    0xbf,al
  411598:	je     0x4115c9
  41159a:	push   0x229d5ce1
  41159f:	xor    DWORD PTR [eax+0x32],edx
  4115a2:	sahf   
  4115a3:	jbe    0x4115b8
  4115a5:	add    DWORD PTR [ebp+ecx*8-0x68b44db4],edi
  4115ac:	test   al,0xa5
  4115ae:	imul   edx,DWORD PTR [esi],0x451e2de6
  4115b4:	in     eax,0xb0
  4115b6:	push   es
  4115b7:	fs push es
  4115b9:	jb     0x4115ba
  4115bb:	shr    DWORD PTR [edi],cl
  4115bd:	pop    es
  4115be:	bound  ebp,QWORD PTR [ebx+0x50]
  4115c1:	pop    ss
  4115c2:	loop   0x4115d3
  4115c4:	push   ebx
  4115c5:	call   0x28fa:0xca184aa7
  4115cc:	stc    
  4115cd:	lods   eax,DWORD PTR ds:[esi]
  4115ce:	mov    BYTE PTR [ebx+eax*1+0x35],ch
  4115d2:	mov    eax,ds:0x9939f8fa
  4115d7:	xor    eax,0xa0641ce4
  4115dc:	dec    edi
  4115dd:	shl    DWORD PTR [eax+ecx*2-0x784f623c],cl
  4115e4:	lea    esi,[esi+edx*1-0x7ae837a]
  4115eb:	cmp    esp,DWORD PTR [ecx+0x3e]
  4115ee:	jne    0x4115e4
  4115f0:	lds    ebp,FWORD PTR [ebp-0x46]
  4115f3:	ret    
  4115f4:	cmp    DWORD PTR [edx],0xa1878da1
  4115fa:	pop    esp
  4115fb:	mov    al,0xa2
  4115fd:	pusha  
  4115fe:	adc    al,0x68
  411600:	scas   eax,DWORD PTR es:[edi]
  411601:	and    eax,0x345568f2
  411606:	cmc    
  411607:	cmp    al,BYTE PTR [esi+eiz*1]
  41160a:	in     eax,0x80
  41160c:	sar    cl,0xf8
  41160f:	imul   ebp,ebp,0xfffffffd
  411612:	hlt    
  411613:	sbb    al,0xc9
  411615:	pop    ebp
  411616:	arpl   WORD PTR [eax-0x65],di
  411619:	dec    ebp
  41161a:	int    0x9
  41161c:	dec    eax
  41161d:	or     BYTE PTR [ecx-0x1f149a8a],0x69
  411624:	retf   0x5585
  411627:	jno    0x411671
  411629:	xchg   esi,eax
  41162a:	xor    DWORD PTR [ebp+0x71e209f],0xae38728c
  411634:	aam    0xe
  411636:	inc    edx
  411637:	in     eax,dx
  411638:	push   esp
  411639:	add    BYTE PTR [ebp-0x2c],ch
  41163c:	ret    0x31fc
  41163f:	xchg   cl,cl
  411641:	mov    ebx,0x57399e65
  411646:	jae    0x41165f
  411648:	sbb    al,0x11
  41164a:	gs jmp 0xba688b1b
  411650:	mov    al,BYTE PTR ds:[esi]
  411653:	pop    es
  411654:	(bad)  
  411655:	mov    bl,0x2d
  411657:	scas   al,BYTE PTR es:[edi]
  411658:	jo     0x411651
  41165a:	push   eax
  41165b:	pushf  
  41165c:	cmp    eax,0x46e0639c
  411661:	or     cl,BYTE PTR [edi]
  411663:	fdiv   DWORD PTR [ebp+0x16]
  411666:	outs   dx,BYTE PTR ds:[esi]
  411667:	enter  0x6956,0xa1
  41166b:	mov    al,0x36
  41166d:	test   al,0x1c
  41166f:	call   0x5c2a3a86
  411674:	in     eax,dx
  411675:	or     BYTE PTR [edi+ebp*2-0x2f1c1112],ch
  41167c:	fsubr  DWORD PTR [ebp-0x12]
  41167f:	pop    ss
  411680:	ds call 0xc161:0x2db392e2
  411688:	push   0x1b
  41168a:	push   ss
  41168b:	mov    al,ds:0x671fcb73
  411690:	sti    
  411691:	jle    0x411673
  411693:	bound  ebx,QWORD PTR [ebp+0x15]
  411696:	and    esp,DWORD PTR [edi+0x62]
  411699:	or     eax,0x689b6b91
  41169e:	push   edx
  41169f:	mov    ds:0x9a7b0022,al
  4116a4:	lods   al,BYTE PTR ds:[esi]
  4116a5:	(bad)  [edx+0x645d2fe9]
  4116ab:	je     0x4116b5
  4116ad:	pop    edx
  4116ae:	cdq    
  4116af:	mov    DWORD PTR [esi],esp
  4116b1:	fisubr WORD PTR [ebx+0x7b]
  4116b4:	aas    
  4116b5:	push   ss
  4116b6:	repnz mov esp,0xd5742cd7
  4116bc:	retf   
  4116bd:	jecxz  0x411695
  4116bf:	xor    dl,BYTE PTR [eax]
  4116c1:	push   edx
  4116c2:	imul   eax,DWORD PTR [edi-0x233d40e2],0x79
  4116c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ca:	pop    esi
  4116cb:	loope  0x4116db
  4116cd:	ja     0x41169e
  4116cf:	out    0x1d,al
  4116d1:	pop    ecx
  4116d2:	shr    ch,cl
  4116d4:	pop    es
  4116d5:	or     DWORD PTR [eax],edi
  4116d7:	inc    eax
  4116d8:	pop    esi
  4116d9:	and    esp,DWORD PTR [esi+ebp*4]
  4116dc:	out    0xf5,eax
  4116de:	sub    DWORD PTR [esi-0x1],0xffffffb3
  4116e2:	pop    edi
  4116e3:	ficomp DWORD PTR [edi-0x62987d2e]
  4116e9:	pop    es
  4116ea:	fadd   DWORD PTR [edi+0x4b]
  4116ed:	jns    0x411685
  4116ef:	test   BYTE PTR [edi+0x58],bl
  4116f2:	dec    BYTE PTR [esi+0x762447c7]
  4116f8:	sub    esi,DWORD PTR ss:[esi-0x509c048]
  4116ff:	scas   eax,DWORD PTR es:[edi]
  411700:	jne    0x4116d8
  411702:	ret    
  411703:	dec    esi
  411704:	pushf  
  411705:	jp     0x411722
  411707:	and    DWORD PTR [edi+eiz*2],0x7a8d89e4
  41170e:	mov    ecx,0xa4944276
  411713:	stc    
  411714:	xor    al,0x10
  411716:	cmp    BYTE PTR [esi+0x55],ch
  411719:	aam    0x4d
  41171b:	gs xor al,0x6c
  41171e:	pop    edi
  41171f:	leave  
  411720:	sub    ah,BYTE PTR [esp+eax*1]
  411723:	inc    ebx
  411724:	xchg   edi,eax
  411725:	xchg   ebp,eax
  411726:	stc    
  411727:	out    0x4a,eax
  411729:	(bad)  
  41172a:	or     al,cl
  41172c:	aas    
  41172d:	dec    esp
  41172e:	fnstenv ds:0xe1fe3ddc
  411734:	ss mov edx,0x6b4e3db3
  41173a:	mov    ebx,0xee2dcfae
  41173f:	ret    0x77fe
  411742:	sub    bh,bh
  411744:	pop    edi
  411745:	lock mov ah,0x56
  411748:	mov    WORD PTR [eax-0x4d33bc85],?
  41174e:	into   
  41174f:	cli    
  411750:	out    dx,al
  411751:	outs   dx,DWORD PTR ds:[esi]
  411752:	aam    0x73
  411754:	nop
  411755:	mov    cl,0x97
  411757:	bound  ebx,QWORD PTR [esi-0x1595c1fa]
  41175d:	call   0xff981a52
  411762:	pop    ebp
  411763:	sti    
  411764:	(bad)  
  411766:	out    dx,eax
  411767:	std    
  411768:	inc    esp
  411769:	outs   dx,BYTE PTR ds:[esi]
  41176a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176b:	in     eax,dx
  41176c:	pop    eax
  41176d:	and    ch,BYTE PTR [ebx+0x454bc2c7]
  411773:	out    0xd4,eax
  411775:	sbb    DWORD PTR [ebx+0x29],esp
  411778:	mov    edx,0x811b22b9
  41177d:	xchg   edx,eax
  41177e:	mov    dl,dh
  411780:	pop    eax
  411781:	mov    eax,0x5be23f68
  411786:	sbb    al,0xc7
  411788:	mov    DWORD PTR [esi+0x5a33c8b1],edx
  41178e:	jae    0x411778
  411790:	jbe    0x411714
  411792:	dec    BYTE PTR [edi]
  411794:	mov    eax,0xb2746591
  411799:	mov    fs,WORD PTR [ecx+edx*4]
  41179c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179d:	adc    al,BYTE PTR [ebp+0x37]
  4117a0:	adc    eax,0x29742327
  4117a5:	cmp    DWORD PTR [eax-0xf465649],0xffffffaa
  4117ac:	or     ch,bl
  4117ae:	adc    bh,BYTE PTR [ebx]
  4117b0:	loop   0x411828
  4117b2:	inc    edx
  4117b3:	mov    dl,0x5d
  4117b5:	add    ebx,esp
  4117b7:	bound  esi,QWORD PTR [eax-0x41a6d2ef]
  4117bd:	out    0x91,eax
  4117bf:	cwde   
  4117c0:	adc    eax,DWORD PTR [ecx-0x4624820b]
  4117c6:	pop    edx
  4117c7:	jo     0x4117d7
  4117c9:	out    0xe4,eax
  4117cb:	in     eax,dx
  4117cc:	js     0x4117cf
  4117ce:	dec    edi
  4117cf:	sbb    eax,0x50f63d2c
  4117d4:	sahf   
  4117d5:	(bad)  
  4117d6:	xlat   BYTE PTR ds:[ebx]
  4117d7:	in     eax,0x3d
  4117d9:	hlt    
  4117da:	leave  
  4117db:	push   edx
  4117dc:	pop    ss
  4117dd:	repnz pop esi
  4117df:	test   eax,0x3a8243de
  4117e4:	xchg   esi,eax
  4117e5:	jg     0x4117b0
  4117e7:	int    0xdf
  4117e9:	(bad)
  4117ec:	push   cs
  4117ed:	rcl    DWORD PTR [eax],0x6c
  4117f0:	rol    ebx,cl
  4117f2:	and    cl,BYTE PTR [edi+eax*4-0x2d2d29e3]
  4117f9:	mov    ds:0xe3cd06f4,eax
  4117fe:	jae    0x4117ff
  411800:	aaa    
  411801:	(bad)  
  411802:	pop    edi
  411803:	mov    ebp,0xb3c7c072
  411808:	mov    al,ds:0x301f401c
  41180d:	ins    DWORD PTR es:[edi],dx
  41180e:	mov    dh,0xc0
  411810:	pop    ecx
  411811:	cmp    DWORD PTR [esi+0x13da6100],ebx
  411817:	test   BYTE PTR [edx+0x4],bl
  41181a:	or     eax,0x6f670e73
  41181f:	and    eax,0x735dcd4a
  411824:	js     0x411888
  411826:	xor    eax,0xb6e3e1b2
  41182b:	cwde   
  41182c:	xchg   edx,eax
  41182d:	(bad)  [ebx-0x6c]
  411830:	repz push es
  411832:	push   ebp
  411833:	(bad)  
  411834:	sbb    al,0x1c
  411836:	(bad)  
  411837:	jle    0x4118b6
  411839:	(bad)  
  41183a:	adc    esi,DWORD PTR [ecx-0x4a07f5c9]
  411840:	pop    ds
  411841:	in     eax,0x71
  411843:	push   ebx
  411844:	out    dx,eax
  411845:	ja     0x41188b
  411847:	int    0x68
  411849:	xchg   esp,eax
  41184a:	xchg   edx,eax
  41184b:	sbb    al,0x61
  41184d:	das    
  41184e:	test   eax,0xdbcd33a1
  411853:	addr16 fdivrp st(3),st
  411856:	jbe    0x41181b
  411858:	fmul   QWORD PTR [ecx]
  41185a:	jnp    0x41181a
  41185c:	mov    al,0xb6
  41185e:	gs (bad) 
  411860:	fs loopne 0x411806
  411863:	adc    eax,0x484b9d1c
  411868:	imul   ebp,DWORD PTR [ebx+ecx*1],0x1fc892b0
  41186f:	mov    bh,0x6c
  411871:	ja     0x41180d
  411873:	loop   0x41189e
  411875:	cli    
  411876:	push   ebx
  411877:	jmp    0x411814
  411879:	out    dx,al
  41187a:	jb     0x411822
  41187c:	or     al,0x86
  41187e:	mov    eax,ebx
  411880:	sub    cl,ch
  411882:	pop    ss
  411883:	push   0x60a91713
  411888:	xor    eax,0x7718b088
  41188d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41188e:	shl    DWORD PTR [ecx-0x620810ed],cl
  411894:	sbb    edi,edx
  411896:	sbb    BYTE PTR [esi],al
  411898:	mov    eax,ds:0x10fb860c
  41189d:	dec    esp
  41189e:	ins    DWORD PTR es:[edi],dx
  41189f:	loopne 0x411911
  4118a1:	ins    DWORD PTR es:[edi],dx
  4118a2:	pop    esi
  4118a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a4:	out    0xf,al
  4118a6:	inc    edi
  4118a7:	std    
  4118a8:	imul   ecx,DWORD PTR es:[eax+0x60],0xffffff87
  4118ad:	mov    bl,cl
  4118af:	stos   BYTE PTR es:[edi],al
  4118b0:	dec    esp
  4118b1:	or     eax,0x24d5d0a9
  4118b6:	adc    BYTE PTR [edx-0x77899b85],0xf6
  4118bd:	jl     0x4118f5
  4118bf:	xchg   esp,eax
  4118c0:	(bad)  
  4118c1:	mov    ecx,0x310a0887
  4118c6:	adc    dl,BYTE PTR [ebx+ebx*8-0x16]
  4118ca:	cmp    BYTE PTR [esi-0x37],cl
  4118cd:	mov    ds:0xd8c863f7,al
  4118d2:	adc    al,0x3c
  4118d4:	sbb    ch,BYTE PTR [ecx+edx*8]
  4118d7:	clc    
  4118d8:	sbb    edx,DWORD PTR [ebx]
  4118da:	fbld   TBYTE PTR [ecx]
  4118dc:	shl    eax,0xdc
  4118df:	ror    DWORD PTR [edi+0x4114d58f],0x97
  4118e6:	adc    eax,0x348879e6
  4118eb:	xchg   edi,eax
  4118ec:	lock outs dx,DWORD PTR ds:[esi]
  4118ee:	xchg   BYTE PTR [eax+0x57],dh
  4118f1:	cmp    cl,BYTE PTR [edi+0x2b3dcf97]
  4118f7:	ds cmc 
  4118f9:	pop    edi
  4118fa:	repz rcr BYTE PTR [edi-0x79fa6044],cl
  411901:	(bad)  
  411902:	arpl   WORD PTR [ebp-0x3bd7dc0d],cx
  411908:	push   es
  411909:	repnz test eax,0x12110589
  41190f:	or     cl,BYTE PTR [ecx]
  411911:	sub    al,BYTE PTR [edx-0x55]
  411914:	jge    0x4118da
  411916:	mov    WORD PTR [edx],?
  411918:	or     bh,BYTE PTR [eax-0x42]
  41191b:	dec    edx
  41191c:	dec    edi
  41191d:	dec    ebp
  41191e:	add    esp,DWORD PTR [ebx]
  411920:	sbb    dl,al
  411922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411923:	mov    edx,0x3a055d3a
  411928:	mul    BYTE PTR [ecx-0x3c07e50d]
  41192e:	jmp    0xc4d07df3
  411933:	xchg   DWORD PTR [eax],esp
  411935:	sub    DWORD PTR [ebp-0x15f65673],edi
  41193b:	mov    ch,0xcf
  41193d:	mov    ah,0x3e
  41193f:	xchg   edx,eax
  411940:	cmpxchg ch,al
  411943:	pop    eax
  411944:	loop   0x411986
  411946:	mov    ?,WORD PTR [eax]
  411948:	retf   
  411949:	sub    bl,al
  41194b:	jns    0x41198d
  41194d:	dec    eax
  41194e:	push   edi
  41194f:	mov    ecx,0xdc6068d9
  411954:	in     al,0x1d
  411956:	sub    DWORD PTR [ecx],ecx
  411958:	fiadd  WORD PTR [eax+0x5e380d89]
  41195e:	mov    al,ds:0x2bdf2732
  411963:	test   BYTE PTR [eax+0x4a871a03],0x1d
  41196a:	xchg   DWORD PTR [eax+0x64],eax
  41196d:	jge    0x411937
  41196f:	in     eax,dx
  411970:	mov    DWORD PTR [ebp+0x18],edx
  411973:	jne    0x41198d
  411975:	and    BYTE PTR [esi],ah
  411977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411978:	dec    ebp
  411979:	les    edi,FWORD PTR [ebp+0x21]
  41197c:	xchg   DWORD PTR [esi+0x39ae8ca1],ecx
  411982:	hlt    
  411983:	fadd   QWORD PTR [ecx]
  411985:	lock pushf 
  411987:	xor    BYTE PTR [edx-0x3f],dl
  41198a:	pop    esi
  41198b:	inc    edi
  41198c:	sub    al,0x57
  41198e:	dec    esp
  41198f:	push   ss
  411990:	mov    eax,ebx
  411992:	vmaxps ymm0,ymm5,YMMWORD PTR [edi+0x1715d2bd]
  41199a:	or     al,0x8e
  41199c:	imul   ecx,DWORD PTR ds:0x8a130626,0xffffffb1
  4119a3:	lods   eax,DWORD PTR ds:[esi]
  4119a4:	sub    DWORD PTR [ebx+0x5e],ecx
  4119a7:	sub    ch,cl
  4119a9:	pop    edi
  4119aa:	adc    al,0xa1
  4119ac:	add    bh,dh
  4119ae:	dec    eax
  4119af:	ret    0x5bfe
  4119b2:	inc    edx
  4119b3:	int3   
  4119b4:	arpl   si,cx
  4119b6:	or     edi,ebp
  4119b8:	js     0x41193b
  4119ba:	call   0x2eee6ebb
  4119bf:	dec    esi
  4119c0:	or     edx,ebx
  4119c2:	mov    ds:0xb7fbaa62,al
  4119c7:	push   0x95c0d413
  4119cc:	mov    bl,0x4b
  4119ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119cf:	push   ebp
  4119d0:	test   BYTE PTR cs:[esi-0x5b414348],bh
  4119d7:	ds fs lock push ds
  4119db:	mov    edx,0xf6d44a91
  4119e0:	xchg   BYTE PTR [ebx],bh
  4119e2:	retf   
  4119e3:	test   bh,0xe2
  4119e6:	jne    0x4119ad
  4119e8:	add    DWORD PTR [edi+eiz*8-0x10],ebx
  4119ec:	inc    edi
  4119ed:	fst    QWORD PTR [esi+0x48969447]
  4119f3:	xchg   ecx,eax
  4119f4:	push   edx
  4119f5:	pop    ecx
  4119f6:	fwait
  4119f7:	inc    edi
  4119f8:	pop    ebx
  4119f9:	push   esp
  4119fa:	xchg   ecx,eax
  4119fb:	ss popa 
  4119fd:	pop    ds
  4119fe:	adc    bh,BYTE PTR [eax]
  411a00:	jb     0x4119a3
  411a02:	or     ch,BYTE PTR [ebx-0x10f20d8f]
  411a08:	xchg   ecx,eax
  411a09:	sub    DWORD PTR [esi+0x9ab76ed],ebp
  411a0f:	jmp    0x28d0e884
  411a14:	hlt    
  411a15:	inc    edx
  411a16:	js     0x411a69
  411a18:	mov    ds:0x626122a1,eax
  411a1d:	sbb    edi,DWORD PTR [edi-0x44]
  411a20:	out    0x16,eax
  411a22:	repnz and DWORD PTR [eax+0x68],ecx
  411a26:	mov    edx,0x42bbf11f
  411a2b:	adc    ebx,DWORD PTR [ebx-0x4bc1cbce]
  411a31:	retf   0x6f1d
  411a34:	mov    dl,0xd1
  411a36:	stos   DWORD PTR es:[edi],eax
  411a37:	jecxz  0x4119c9
  411a39:	xlat   BYTE PTR ds:[ebx]
  411a3a:	mov    ds:0x365f76a2,al
  411a3f:	enter  0x3c9e,0xfe
  411a43:	mov    esi,0x812a38cb
  411a48:	(bad)  
  411a49:	cmp    ebp,ebx
  411a4b:	adc    eax,0x90ae816
  411a50:	pop    es
  411a51:	jns    0x4119d6
  411a53:	in     al,0x2
  411a55:	sahf   
  411a56:	call   0x6645:0x40d8475e
  411a5d:	cmp    ebp,DWORD PTR [ecx+0x40]
  411a60:	dec    eax
  411a61:	jb     0x411a3e
  411a63:	stos   BYTE PTR es:[edi],al
  411a64:	repz sub dl,dl
  411a67:	lods   eax,DWORD PTR ds:[esi]
  411a68:	les    ebx,FWORD PTR [ebp+0x37]
  411a6b:	sbb    al,0xb4
  411a6d:	jge    0x411ac1
  411a6f:	mov    edi,0x776282a
  411a74:	nop
  411a75:	mov    ebp,0x6a4172a1
  411a7a:	inc    DWORD PTR [ebx]
  411a7c:	ret    
  411a7d:	jnp    0x411a02
  411a7f:	push   0xffffffec
  411a81:	loop   0x411a1b
  411a83:	push   esi
  411a84:	in     al,dx
  411a85:	xchg   edx,eax
  411a86:	call   0xbe1b:0x35388134
  411a8d:	cmp    bh,dh
  411a8f:	lock fstp DWORD PTR [ecx+ebp*4-0x5]
  411a94:	in     al,0x40
  411a96:	ds or  al,0xcf
  411a99:	cmp    edx,esp
  411a9b:	add    BYTE PTR ds:0x77cc5222,dl
  411aa1:	les    ebp,FWORD PTR [eax]
  411aa3:	xor    eax,0x8e026c00
  411aa8:	and    ebp,DWORD PTR [ebx+ebx*2-0x194228b0]
  411aaf:	mov    dl,0x88
  411ab1:	mov    ebx,0xa3f516fa
  411ab6:	imul   ecx,DWORD PTR [ecx+0x74],0x8dce3300
  411abd:	test   BYTE PTR [ecx],al
  411abf:	repz jb 0x411af4
  411ac2:	add    BYTE PTR [ebx+0x558b084d],cl
  411ac8:	loopne 0x411a53
  411aca:	add    al,0x8a
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a733
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a737
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a73f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a743
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a747
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a74b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a74f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a753
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a75b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a723
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a72b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a72f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a733
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a737
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [ebp+0xb],dl
  412637:	outs   dx,BYTE PTR ds:[esi]
  412638:	mov    edi,0x83838a6b
  41263d:	pop    ss
  41263e:	pop    esp
  41263f:	add    DWORD PTR [ebx-0x10ff3d53],0xffffff84
  412646:	cld    
  412647:	or     edx,eax
  412649:	push   es
  41264a:	add    eax,0x2483be07
  41264f:	xchg   ebp,eax
  412650:	sbb    ebp,ebx
  412652:	test   eax,0x36c43b90
  412657:	xchg   edx,eax
  412658:	cmp    dl,bl
  41265a:	cld    
  41265b:	aaa    
  41265c:	sbb    edx,DWORD PTR [edx]
  41265e:	scas   eax,DWORD PTR es:[edi]
  41265f:	mov    BYTE PTR [edi+0x57],bl
  412662:	jle    0x4126cb
  412664:	add    al,0x79
  412666:	mov    cs,edi
  412668:	push   esp
  412669:	nop
  41266a:	and    eax,0xa127034a
  41266f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412670:	jne    0x412647
  412672:	add    edi,edx
  412674:	(bad)  
  412676:	sub    bh,ah
  412678:	shl    BYTE PTR [ecx+eiz*4+0x61],cl
  41267c:	adc    BYTE PTR [ebx-0x153a0d67],al
  412682:	mov    edx,0xb13bc0cd
  412687:	loope  0x41266a
  412689:	int    0x4
  41268b:	iret   
  41268c:	leave  
  41268d:	adc    esi,DWORD PTR [eax+0x52bb04b2]
  412693:	pop    ds
  412694:	pusha  
  412695:	retf   
  412696:	and    DWORD PTR [ebp-0x3418babd],ebx
  41269c:	cdq    
  41269d:	and    al,0x7d
  41269f:	and    eax,0x2c8fd133
  4126a4:	pop    ebp
  4126a5:	inc    ecx
  4126a6:	inc    ebx
  4126a7:	add    edi,DWORD PTR [esi+0x646edead]
  4126ad:	and    DWORD PTR [eax+eax*8+0x4b],ecx
  4126b1:	(bad)  
  4126b2:	add    DWORD PTR [eax],ecx
  4126b4:	adc    DWORD PTR [ebx+0x44],esp
  4126b7:	mov    ah,0x58
  4126b9:	loop   0x412700
  4126bb:	ror    DWORD PTR [edx],1
  4126bd:	lock jl 0x4126d5
  4126c0:	inc    edi
  4126c2:	mov    dl,0xa0
  4126c4:	test   eax,0xa6c71674
  4126c9:	mov    ds:0x7c077838,eax
  4126ce:	int    0xcf
  4126d0:	mov    DWORD PTR [edx-0x7c],esi
  4126d3:	adc    DWORD PTR [edi+0x55cea95b],esp
  4126d9:	mov    dh,0x7c
  4126db:	iret   
  4126dc:	jmp    0x41267b
  4126de:	aad    0x9b
  4126e0:	inc    ebx
  4126e1:	inc    eax
  4126e2:	sub    al,BYTE PTR [ebp+0x3beb2d1]
  4126e8:	sbb    eax,0x50fc833b
  4126ed:	xor    dl,bl
  4126ef:	push   edx
  4126f0:	mov    ds:0xa031cfe5,eax
  4126f5:	sbb    al,0x1d
  4126f7:	mov    dh,BYTE PTR [esi+edx*4+0x16b6b260]
  4126fe:	out    dx,eax
  4126ff:	(bad)  
  412700:	outs   dx,BYTE PTR ds:[esi]
  412701:	lahf   
  412702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412703:	cmc    
  412704:	xlat   BYTE PTR ds:[ebx]
  412705:	pop    esp
  412706:	jae    0x41270a
  412708:	inc    esi
  412709:	sub    eax,0x5a0796fb
  41270e:	pop    es
  41270f:	gs fcmovnb st,st(2)
  412712:	aas    
  412713:	js     0x412750
  412715:	lar    eax,WORD PTR [edi+0x46]
  412719:	fcom   st(3)
  41271b:	xor    al,0xbd
  41271d:	and    ch,dl
  41271f:	popa   
  412720:	sub    bl,BYTE PTR [esi+0xc]
  412723:	or     al,0xb0
  412725:	xchg   ebx,eax
  412726:	cmc    
  412727:	ds jle 0x41275f
  41272a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41272b:	pop    ecx
  41272c:	cs mov esi,0xe3c09449
  412732:	push   cs
  412733:	adc    DWORD PTR [ebx+0x6d],esi
  412736:	xchg   edx,eax
  412737:	lods   al,BYTE PTR ds:[esi]
  412738:	ret    0x1078
  41273b:	leave  
  41273c:	xor    al,0x8a
  41273e:	mov    al,ds:0x2693d293
  412743:	test   BYTE PTR [esi],bl
  412745:	call   0x8fc2:0x8ea0ad01
  41274c:	repz repnz fist WORD PTR [ebp-0x60]
  412751:	dec    eax
  412752:	sbb    bl,BYTE PTR [edi]
  412754:	mov    dh,0x62
  412756:	add    eax,0x5bf8d4dc
  41275b:	mov    dh,0xe8
  41275d:	or     cl,BYTE PTR [ebx]
  41275f:	mov    al,ds:0xcdbb852e
  412764:	(bad)  
  412765:	xor    eax,0x2c444a4d
  41276a:	aad    0xbb
  41276c:	in     al,dx
  41276d:	jae    0x41273c
  41276f:	pop    esi
  412770:	cmp    ah,bh
  412772:	mov    edx,0xbc257ed6
  412777:	pop    ecx
  412778:	not    DWORD PTR [ecx+0x5f]
  41277b:	dec    ebx
  41277c:	jae    0x4127c7
  41277e:	mov    ebp,0xdffed648
  412783:	or     eax,0x62956c50
  412788:	add    dh,bh
  41278a:	mov    ch,0x59
  41278c:	sbb    ecx,DWORD PTR [esi+0xe]
  41278f:	aaa    
  412790:	xchg   edx,eax
  412791:	or     bl,BYTE PTR es:[eax+0x11]
  412795:	stc    
  412796:	aas    
  412797:	sbb    ch,cl
  412799:	add    eax,0x2372c669
  41279e:	cld    
  41279f:	or     eax,0xdfb4c753
  4127a4:	ja     0x412750
  4127a6:	ret    0xdd4a
  4127a9:	cmp    BYTE PTR ds:0xc7bfc050,0xfa
  4127b1:	jne    0x4127d8
  4127b3:	xchg   dl,dl
  4127b5:	ds je  0x4127d2
  4127b8:	out    dx,al
  4127b9:	and    esp,edi
  4127bb:	repnz cmp ah,BYTE PTR [esi+0x69]
  4127bf:	xlat   BYTE PTR ds:[ebx]
  4127c0:	(bad)
  4127c3:	pop    ss
  4127c4:	push   cs
  4127c5:	inc    edi
  4127c6:	mov    bl,0xc8
  4127c8:	std    
  4127c9:	adc    al,BYTE PTR [esi]
  4127cb:	aam    0x18
  4127cd:	dec    esi
  4127ce:	xor    dl,al
  4127d0:	jns    0x4127b9
  4127d2:	sub    eax,0x28c625c1
  4127d7:	dec    esi
  4127d8:	xor    dl,BYTE PTR [esi-0x28]
  4127db:	cli    
  4127dc:	jo     0x4127c3
  4127de:	cmp    edx,edi
  4127e0:	dec    esi
  4127e1:	mov    edi,?
  4127e3:	and    al,0x55
  4127e5:	jo     0x4127a8
  4127e7:	jns    0x412828
  4127e9:	mov    esi,0xa479f37
  4127ee:	in     eax,dx
  4127ef:	outs   dx,DWORD PTR ds:[esi]
  4127f0:	push   edi
  4127f1:	clc    
  4127f2:	jae    0x4127a5
  4127f4:	scas   al,BYTE PTR es:[edi]
  4127f5:	inc    edi
  4127f6:	dec    esi
  4127f7:	mov    edi,0x9d910b87
  4127fc:	xchg   ebp,eax
  4127fd:	mov    edi,DWORD PTR [edx+ebp*2]
  412800:	cmp    al,0xac
  412802:	jmp    0xea8:0x5abb3a61
  412809:	and    DWORD PTR [ebx-0x5e],ecx
  41280c:	dec    ebp
  41280d:	(bad)  
  41280e:	cdq    
  41280f:	or     esp,esi
  412811:	push   esi
  412812:	sbb    BYTE PTR [ebx-0x17],dl
  412815:	mov    ecx,0x8f295a76
  41281a:	out    dx,al
  41281b:	test   DWORD PTR [ecx+eiz*4],0xc22de665
  412822:	leave  
  412823:	sahf   
  412824:	les    edx,FWORD PTR [ecx]
  412826:	test   BYTE PTR [eax+0x3d],bh
  412829:	test   BYTE PTR [ecx+0x7f],bl
  41282c:	mov    al,0x32
  41282e:	xchg   ecx,eax
  41282f:	pop    ebp
  412830:	pushf  
  412831:	es ret 
  412833:	jl     0x41287b
  412835:	mov    edi,eax
  412837:	adc    ah,BYTE PTR [ebx]
  412839:	mov    eax,0x67cb30ee
  41283e:	cmc    
  41283f:	xor    BYTE PTR [ebx+0x774a1949],ch
  412845:	jmp    0x412835
  412847:	cli    
  412848:	or     eax,0x84fad5af
  41284d:	jbe    0x4127de
  41284f:	test   al,0x6
  412851:	inc    ebx
  412852:	jo     0x412820
  412854:	and    eax,0x1d6b7f32
  412859:	add    al,0x9e
  41285b:	mov    ch,0x26
  41285d:	gs mov cl,0xf2
  412860:	xlat   BYTE PTR ds:[ebx]
  412861:	sub    BYTE PTR [eax],al
  412863:	(bad)  
  412864:	call   0x7c5977bc
  412869:	repz mov es,WORD PTR [esi+0x5a2d9c41]
  412870:	bound  edx,QWORD PTR ds:0x731bb481
  412876:	and    esp,esi
  412878:	test   DWORD PTR [eax-0x14],esp
  41287b:	and    DWORD PTR [eax+0x7d],ebp
  41287e:	sbb    edi,DWORD PTR [ebp+ecx*1+0x14]
  412882:	in     eax,0x32
  412884:	mov    al,BYTE PTR [edi+ecx*2+0x3246ac23]
  41288b:	mov    ebp,0x713ddfb0
  412890:	jnp    0x4128e3
  412892:	cld    
  412893:	xor    DWORD PTR [eax],edx
  412895:	hlt    
  412896:	stc    
  412897:	inc    eax
  412898:	inc    edx
  412899:	adc    eax,0x4f69be41
  41289e:	mov    edx,DWORD PTR [ecx+esi*4-0x31]
  4128a2:	out    0xf2,al
  4128a4:	mov    edx,0xcee486d3
  4128a9:	push   cs
  4128aa:	retf   0x8dea
  4128ad:	outs   dx,DWORD PTR ds:[esi]
  4128ae:	adc    BYTE PTR [ecx],0x4b
  4128b1:	xor    eax,0x57197b14
  4128b6:	xchg   BYTE PTR [esp+edi*2-0x16da37bd],al
  4128bd:	cmp    al,0x76
  4128c0:	shr    cl,0xd7
  4128c3:	fsubr  QWORD PTR [eax+0x18b31ce5]
  4128c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ca:	inc    edi
  4128cb:	aad    0x30
  4128cd:	dec    edx
  4128ce:	adc    ch,BYTE PTR [ebx]
  4128d0:	retf   0x6744
  4128d3:	xchg   edi,eax
  4128d4:	das    
  4128d5:	jmp    0x4128a9
  4128d7:	pop    DWORD PTR [edx+0x4bc2b949]
  4128dd:	dec    ebx
  4128de:	add    eax,ebx
  4128e0:	or     BYTE PTR [eax-0x18],ch
  4128e3:	push   esi
  4128e4:	sub    esp,DWORD PTR [eax]
  4128e6:	xor    eax,DWORD PTR [edi+0x47]
  4128e9:	loopne 0x4128cb
  4128eb:	push   0xffffffe1
  4128ed:	gs or  al,0x53
  4128f0:	popf   
  4128f1:	retf   0xad1b
  4128f4:	dec    DWORD PTR [edi]
  4128f6:	(bad)  
  4128f7:	enter  0x8e9b,0xff
  4128fb:	in     al,dx
  4128fc:	mov    edi,0xf3499bd9
  412901:	lahf   
  412902:	dec    ebx
  412903:	pop    ebp
  412904:	lods   eax,DWORD PTR ds:[esi]
  412905:	div    DWORD PTR [ecx-0x682fecd7]
  41290b:	hlt    
  41290c:	repnz pusha 
  41290e:	mov    esi,DWORD PTR [esi]
  412910:	ret    0x70eb
  412913:	pop    edi
  412914:	loope  0x41296b
  412916:	stc    
  412917:	enter  0x4acc,0x20
  41291b:	ds loopne 0x412908
  41291e:	imul   ecx,eax,0xffffffb8
  412921:	xchg   edx,eax
  412922:	into   
  412923:	sbb    ebp,DWORD PTR [ecx]
  412925:	cs ja  0x412979
  412928:	popa   
  412929:	push   cs
  41292a:	ss pop ebx
  41292c:	cdq    
  41292d:	aaa    
  41292e:	lods   eax,DWORD PTR ds:[esi]
  41292f:	popa   
  412930:	fwait
  412931:	sub    DWORD PTR [edx+0x41],ebx
  412934:	cmp    DWORD PTR [eax-0x161e3ede],0xe46173f2
  41293e:	jecxz  0x412968
  412940:	mov    bh,cl
  412942:	push   0xce2a0a9c
  412947:	sub    BYTE PTR [edx+0x50e00b16],0x28
  41294e:	das    
  41294f:	ret    
  412950:	loopne 0x41296d
  412952:	stc    
  412953:	mov    ecx,0x8ab32bfc
  412958:	js     0x41296d
  41295a:	jne    0x4129ac
  41295c:	jmp    0x4129db
  41295e:	push   0xa3634f6d
  412963:	loopne 0x4129a6
  412965:	mov    ss,eax
  412967:	ret    
  412968:	add    ch,BYTE PTR [eax+0x3eab0737]
  41296e:	pusha  
  41296f:	test   al,0x8
  412971:	adc    esi,DWORD PTR [edx]
  412973:	push   ebx
  412974:	rcr    DWORD PTR [eax-0x64],1
  412977:	or     edi,DWORD PTR [ebp-0x733e7b1a]
  41297d:	stos   BYTE PTR es:[edi],al
  41297e:	loop   0x41297d
  412980:	adc    DWORD PTR [esi-0x35],eax
  412983:	push   eax
  412984:	imul   ecx,DWORD PTR [eax-0x40],0xffffff92
  412988:	outs   dx,BYTE PTR ds:[esi]
  412989:	sub    dl,BYTE PTR [eax-0xb80c47]
  41298f:	pop    esp
  412990:	cmp    cl,ch
  412992:	into   
  412993:	stos   BYTE PTR es:[edi],al
  412994:	or     al,BYTE PTR [ecx-0x6f1839cc]
  41299a:	pop    ecx
  41299b:	mov    ch,0x2
  41299d:	loop   0x41298e
  41299f:	mov    al,0x15
  4129a1:	xchg   edi,eax
  4129a2:	ins    DWORD PTR es:[edi],dx
  4129a3:	mov    esp,0x3c8a8b4b
  4129a8:	das    
  4129a9:	inc    esp
  4129aa:	lea    ecx,ds:0xb83575b9
  4129b0:	into   
  4129b1:	leave  
  4129b2:	js     0x412970
  4129b4:	and    esp,0x58
  4129b7:	and    DWORD PTR [eax-0x77],esp
  4129ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129bb:	mov    esp,0xef74980d
  4129c0:	push   cs
  4129c1:	sbb    ebx,DWORD PTR [edx]
  4129c3:	xchg   esp,eax
  4129c4:	ret    
  4129c5:	hlt    
  4129c6:	lock pusha 
  4129c8:	fist   WORD PTR [esp+ebp*2-0x55]
  4129cc:	push   ebx
  4129cd:	mov    ecx,0xa3e416b5
  4129d2:	dec    edx
  4129d3:	fbld   TBYTE PTR [ebx+0x34130772]
  4129d9:	cmc    
  4129da:	cmp    DWORD PTR [eax+0x39556f7e],0xe9afc0a2
  4129e4:	repnz (bad) 
  4129e6:	pmulhuw mm6,mm1
  4129e9:	add    al,0x7d
  4129eb:	sub    dh,0x10
  4129ee:	inc    edx
  4129ef:	(bad)  
  4129f1:	aad    0x8e
  4129f3:	or     BYTE PTR gs:[edx-0x45],bh
  4129f7:	mov    bl,0x5d
  4129f9:	mov    bh,0x63
  4129fb:	out    0xe4,eax
  4129fd:	out    dx,al
  4129fe:	fisub  WORD PTR [edx-0x408660d4]
  412a04:	push   cs
  412a05:	clc    
  412a06:	xor    ecx,edx
  412a08:	push   ds
  412a09:	mov    ebp,0x2f8a834c
  412a0e:	inc    ebx
  412a0f:	rcr    DWORD PTR ds:0xe8e42921,cl
  412a15:	jbe    0x412a4f
  412a17:	sbb    edx,DWORD PTR [ebx-0x17949204]
  412a1d:	xor    ebp,DWORD PTR [ebp+0x2bb2b92a]
  412a23:	cwde   
  412a24:	mov    DWORD PTR [eax],edi
  412a26:	aas    
  412a27:	adc    eax,DWORD PTR [eax+0x2bfa8f55]
  412a2d:	popa   
  412a2e:	ins    BYTE PTR es:[edi],dx
  412a2f:	dec    esp
  412a30:	mov    bl,0xba
  412a32:	pop    ds
  412a33:	pop    esp
  412a34:	or     eax,DWORD PTR [eax+0x33]
  412a37:	push   ebx
  412a38:	int    0xed
  412a3a:	adc    BYTE PTR [esi-0x133e4245],al
  412a40:	(bad)  
  412a41:	sar    BYTE PTR [ecx],cl
  412a43:	jnp    0x412a34
  412a45:	jb     0x412a75
  412a47:	arpl   WORD PTR cs:[ecx-0x72cf44ca],di
  412a4e:	int3   
  412a4f:	aas    
  412a50:	fs sbb al,0x6d
  412a53:	(bad)  
  412a54:	xor    BYTE PTR [esi],dh
  412a56:	aam    0xf1
  412a58:	cmp    ecx,DWORD PTR [ebx]
  412a5a:	stos   DWORD PTR es:[edi],eax
  412a5b:	not    DWORD PTR [eax+0x52]
  412a5e:	and    bl,dl
  412a60:	adc    dh,BYTE PTR [edi]
  412a62:	in     al,dx
  412a63:	dec    edi
  412a64:	(bad)  
  412a65:	pop    ebx
  412a66:	mov    esp,DWORD PTR [esi+0x2d0fbcb]
  412a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a6d:	push   eax
  412a6e:	pop    ds
  412a6f:	push   ss
  412a70:	push   0x37
  412a72:	adc    cl,dh
  412a74:	call   0x983325ce
  412a79:	jno    0x412ae5
  412a7b:	lock xchg esi,eax
  412a7d:	mov    edi,?
  412a7f:	mov    dl,0x66
  412a81:	and    dl,BYTE PTR [esi-0x55]
  412a84:	mov    edi,0x32409256
  412a89:	jbe    0x412ac4
  412a8b:	jmp    0x44bc:0xfd815c71
  412a92:	sub    ch,cl
  412a94:	adc    eax,0xaf968019
  412a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9a:	jnp    0x412b06
  412a9c:	pop    esi
  412a9d:	icebp  
  412a9e:	and    ch,BYTE PTR [ebp+0x2db09bc7]
  412aa4:	sbb    al,0x88
  412aa6:	retf   0xd98
  412aa9:	(bad)  
  412aaa:	push   esp
  412aab:	loope  0x412b1b
  412aad:	stc    
  412aae:	data16 js 0x412ae0
  412ab1:	mov    cl,0xa2
  412ab3:	mov    ds:0x75c0872,eax
  412ab8:	les    esp,FWORD PTR [edx-0x6b9e3d7b]
  412abe:	xchg   DWORD PTR [edx-0x4],edi
  412ac1:	rcl    DWORD PTR [esi+0x43],cl
  412ac4:	pop    esp
  412ac5:	test   eax,0x3d36c615
  412aca:	cmp    BYTE PTR [edi+0x2671492e],0xeb
  412ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad2:	pop    ds
  412ad3:	pop    eax
  412ad4:	imul   eax,DWORD PTR [ecx+eiz*1],0xffffffcf
  412ad8:	pop    ecx
  412ad9:	push   edx
  412ada:	jg     0x412ad5
  412adc:	(bad)  
  412add:	xchg   ecx,eax
  412ade:	in     eax,dx
  412adf:	mov    eax,ds:0x70b5bad5
  412ae4:	int3   
  412ae5:	test   dl,cl
  412ae7:	mov    edi,0x72ca03e1
  412aec:	adc    edx,DWORD PTR [esi+ebx*8-0x45]
  412af0:	call   0x5ecca62
  412af5:	repnz or BYTE PTR [eax+eiz*1],0x5
  412afa:	xor    DWORD PTR [eax],edi
  412afc:	ins    BYTE PTR es:[edi],dx
  412afd:	inc    eax
  412afe:	add    eax,0x3641a3d2
  412b03:	xor    esi,ebp
  412b05:	(bad)  
  412b06:	push   ds
  412b07:	mov    ah,0x6e
  412b09:	dec    ebp
  412b0a:	dec    DWORD PTR [ecx-0x52]
  412b0d:	xor    BYTE PTR [eax+0x2d151e58],ah
  412b13:	jne    0x412b3f
  412b15:	mov    ch,0x9c
  412b17:	jp     0x412aac
  412b19:	cdq    
  412b1a:	xchg   esp,eax
  412b1b:	add    BYTE PTR [edi-0x7d517527],0x97
  412b22:	jns    0x412b1c
  412b24:	retf   
  412b25:	mov    ebp,0x291967c3
  412b2a:	lods   al,BYTE PTR ds:[esi]
  412b2b:	xlat   BYTE PTR ds:[ebx]
  412b2c:	add    ebp,DWORD PTR [edx-0x26271c53]
  412b32:	fs mov ecx,0xc244eead
  412b38:	add    DWORD PTR [esp+esi*4-0x4d416379],edi
  412b3f:	inc    esi
  412b40:	ficomp WORD PTR fs:[ecx+0x6]
  412b44:	fs pop ebp
  412b46:	mov    ebp,0xc3408f14
  412b4b:	mov    ?,WORD PTR [edx]
  412b4d:	ins    DWORD PTR es:[edi],dx
  412b4e:	cld    
  412b4f:	inc    edi
  412b50:	jmp    0x25299152
  412b55:	fs sub eax,0x8b5a95f0
  412b5b:	(bad)  
  412b5c:	imul   edi,DWORD PTR [eax-0x2],0x2ba16d1c
  412b63:	fisub  DWORD PTR [ecx+ecx*8-0x23787faf]
  412b6a:	pop    ss
  412b6b:	arpl   WORD PTR [ecx+ebx*1-0x18],di
  412b6f:	loopne 0x412b58
  412b71:	icebp  
  412b72:	pop    edx
  412b73:	not    DWORD PTR [ebp-0x35]
  412b76:	loope  0x412b1a
  412b78:	cmp    ch,BYTE PTR [ebx+0x76]
  412b7b:	push   0xb4106bea
  412b80:	push   esi
  412b81:	push   eax
  412b82:	mov    cl,0xc7
  412b84:	aaa    
  412b85:	xor    eax,0x3b2e7c64
  412b8a:	sub    dl,BYTE PTR [eax+eax*4]
  412b8d:	mov    ch,0x3
  412b8f:	je     0x412b22
  412b91:	dec    esp
  412b92:	lods   eax,DWORD PTR ds:[esi]
  412b93:	(bad)  
  412b94:	fisub  WORD PTR ss:[ebp+edx*8+0x3065941a]
  412b9c:	sub    BYTE PTR [eax],ch
  412b9e:	(bad)  
  412ba0:	jmp    0x412c21
  412ba2:	loopne 0x412bd0
  412ba4:	(bad)  
  412ba5:	fcomip st,st(7)
  412ba7:	addr16 dec esp
  412ba9:	cwde   
  412baa:	add    DWORD PTR [esi+0x670db129],esi
  412bb0:	and    BYTE PTR [edi-0xf8cffb3],bh
  412bb6:	add    DWORD PTR [eax-0x2a33c6e8],esp
  412bbc:	nop
  412bbd:	cwde   
  412bbe:	mov    esi,edx
  412bc0:	dec    esi
  412bc1:	dec    esp
  412bc2:	pop    ds
  412bc3:	dec    DWORD PTR [esi]
  412bc5:	sbb    ecx,edi
  412bc7:	cmp    BYTE PTR [ebp+0x534c01a0],0x26
  412bce:	gs ja  0x412b74
  412bd1:	jp     0x412b8d
  412bd3:	pop    edx
  412bd4:	adc    ebp,DWORD PTR [eax]
  412bd6:	fisttp DWORD PTR [ecx-0x7b]
  412bd9:	enter  0x5f6c,0xc1
  412bdd:	shl    BYTE PTR [edx-0x52],0x16
  412be1:	cmp    bh,BYTE PTR ds:0xfa0aafd0
  412be7:	stc    
  412be8:	and    eax,DWORD PTR [ecx-0x31]
  412beb:	pop    eax
  412bec:	jg     0x412bd3
  412bee:	ret    0xdfab
  412bf1:	pop    eax
  412bf2:	xor    al,0xbb
  412bf4:	sbb    eax,0x818e791b
  412bf9:	cmp    al,0x3
  412bfb:	aas    
  412bfc:	mov    ebx,0xd100853a
  412c01:	push   ss
  412c02:	push   es
  412c03:	inc    esp
  412c04:	cmp    esi,DWORD PTR [esi-0x5f]
  412c07:	or     BYTE PTR [eax+0x59403ddd],dh
  412c0d:	sub    DWORD PTR [ebx+0x55],ebx
  412c10:	es cli 
  412c12:	ins    DWORD PTR es:[edi],dx
  412c13:	dec    edx
  412c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c15:	mov    bh,0x64
  412c17:	mov    al,0x6d
  412c19:	sti    
  412c1a:	jno    0x412c8e
  412c1c:	push   esp
  412c1d:	adc    eax,0x22d6f793
  412c22:	mov    eax,ds:0x99656470
  412c27:	repnz stos BYTE PTR es:[edi],al
  412c29:	dec    ebp
  412c2a:	popf   
  412c2b:	mov    dh,0xed
  412c2d:	and    BYTE PTR ds:0xaa3ea5b6,dh
  412c33:	in     eax,0xa1
  412c35:	(bad)  
  412c36:	xor    eax,0x517b09e4
  412c3b:	push   esi
  412c3c:	int    0xdf
  412c3e:	xchg   ecx,eax
  412c3f:	fadd   QWORD PTR [ebx+0x77458c8a]
  412c45:	aas    
  412c46:	inc    esp
  412c47:	adc    BYTE PTR ds:0x5406b540,dh
  412c4d:	xor    BYTE PTR [ecx+ebp*1+0x61],dl
  412c51:	popf   
  412c52:	sar    DWORD PTR [ebx],cl
  412c54:	ds ins DWORD PTR es:[edi],dx
  412c56:	ins    DWORD PTR es:[edi],dx
  412c57:	inc    ebp
  412c58:	popa   
  412c59:	push   esp
  412c5a:	cdq    
  412c5b:	inc    eax
  412c5c:	push   ss
  412c5d:	aad    0x33
  412c5f:	xchg   edx,edx
  412c61:	mov    esp,DWORD PTR [ebp-0x60c5274c]
  412c67:	shr    BYTE PTR [esi],1
  412c69:	aas    
  412c6a:	sub    ecx,edx
  412c6c:	xchg   ebp,eax
  412c6d:	icebp  
  412c6e:	mov    ch,cl
  412c70:	aam    0xc1
  412c72:	dec    esi
  412c73:	outs   dx,DWORD PTR ds:[esi]
  412c74:	fcmovb st,st(4)
  412c76:	xor    al,0xc8
  412c78:	rol    BYTE PTR [edi+0x77],0x81
  412c7c:	addr16 adc al,0x46
  412c7f:	push   es
  412c80:	xchg   BYTE PTR [edi+ecx*8+0x7e],al
  412c84:	daa    
  412c85:	cwde   
  412c86:	dec    ah
  412c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c89:	dec    esi
  412c8a:	ds jns 0x412c44
  412c8d:	call   0x8bb2fafb
  412c92:	ret    
  412c93:	adc    DWORD PTR [ebx],0xffffffa8
  412c96:	xor    al,0xd
  412c98:	dec    edx
  412c99:	mov    ebx,0x87921849
  412c9e:	(bad)  
  412c9f:	push   cs
  412ca0:	mov    ch,0x97
  412ca2:	mov    bh,0x3d
  412ca4:	or     BYTE PTR [ebx+0x6a929a8f],ah
  412caa:	pop    ebx
  412cab:	pop    ecx
  412cac:	xor    al,0x51
  412cae:	mov    esp,0x84dc994f
  412cb3:	jl     0x412c7d
  412cb5:	popf   
  412cb6:	repnz mov edi,DWORD PTR [edi]
  412cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cba:	pop    ds
  412cbb:	xor    eax,0x9b0b744a
  412cc0:	jle    0x412c88
  412cc2:	pusha  
  412cc3:	fidivr DWORD PTR [ebp-0xc]
  412cc6:	iret   
  412cc7:	outs   dx,DWORD PTR ds:[esi]
  412cc8:	xlat   BYTE PTR ds:[ebx]
  412cc9:	cmp    dh,BYTE PTR [eax]
  412ccb:	ins    BYTE PTR es:[edi],dx
  412ccc:	jp     0x412cd7
  412cce:	mov    ds:0xa3180856,al
  412cd3:	cmp    al,0x2
  412cd5:	xor    DWORD PTR [ecx],esp
  412cd7:	(bad)  
  412cd8:	retf   0x1c47
  412cdb:	inc    edi
  412cdc:	jecxz  0x412d2a
  412cde:	stos   DWORD PTR es:[edi],eax
  412cdf:	lahf   
  412ce0:	push   es
  412ce1:	addr16 xchg ebp,eax
  412ce3:	mov    BYTE PTR [ecx+edi*8-0x7f],ah
  412ce7:	les    edx,FWORD PTR [ebx+0x7370ccd]
  412ced:	mov    gs,WORD PTR [edx-0x19ebb8fb]
  412cf3:	call   ebp
  412cf5:	sub    eax,0xb91388a1
  412cfa:	clc    
  412cfb:	inc    edi
  412cfc:	cmp    eax,0xd3665d27
  412d01:	sbb    DWORD PTR [edi],esi
  412d03:	and    al,BYTE PTR [edx]
  412d05:	ror    DWORD PTR [ebx+edx*4-0x3d27b244],1
  412d0c:	leave  
  412d0d:	(bad)  
  412d0e:	fistp  QWORD PTR [eax+0x6c]
  412d11:	mov    edx,0x29e45827
  412d16:	mov    ch,0xbd
  412d18:	stos   DWORD PTR es:[edi],eax
  412d19:	arpl   sp,dx
  412d1b:	arpl   WORD PTR [ebx-0x11],ax
  412d1e:	aaa    
  412d1f:	pop    es
  412d20:	mov    BYTE PTR [edi],cl
  412d22:	xor    esp,DWORD PTR [edi+0x75b46034]
  412d28:	push   cs
  412d29:	outs   dx,DWORD PTR ds:[esi]
  412d2a:	push   es
  412d2b:	jno    0x412d5c
  412d2d:	pop    esi
  412d2e:	mov    eax,0x4bf7d303
  412d33:	(bad)  
  412d34:	out    dx,al
  412d35:	lock outs dx,DWORD PTR ds:[esi]
  412d37:	xchg   esp,eax
  412d38:	jle    0x412cf5
  412d3a:	ja     0x412d7a
  412d3c:	fadd   QWORD PTR [ebp-0x26]
  412d3f:	idiv   DWORD PTR [esp+ebx*4]
  412d42:	mov    ecx,0xc3bfc5e7
  412d47:	sar    DWORD PTR [ebp+0x251f3804],cl
  412d4d:	sub    BYTE PTR [ecx],dl
  412d4f:	jmp    0x468b:0x5b7a237f
  412d56:	ins    BYTE PTR es:[edi],dx
  412d57:	or     dh,BYTE PTR [ecx]
  412d59:	ror    BYTE PTR [eax],cl
  412d5b:	mov    al,0xcd
  412d5d:	inc    eax
  412d5e:	inc    ebx
  412d5f:	(bad)  
  412d60:	jo     0x412d82
  412d62:	stos   DWORD PTR es:[edi],eax
  412d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d64:	fldenv [eiz*8-0x355e53fe]
  412d6b:	and    eax,0x4863fbec
  412d70:	inc    ecx
  412d71:	pop    eax
  412d72:	push   edx
  412d73:	sbb    BYTE PTR [ecx+edx*1],dh
  412d76:	and    ch,BYTE PTR [edi*2-0x2589cad5]
  412d7d:	(bad)  
  412d7e:	icebp  
  412d7f:	mov    ebx,eax
  412d81:	aas    
  412d82:	sbb    BYTE PTR [ecx],0xeb
  412d85:	cmp    dl,cl
  412d87:	ret    
  412d88:	ins    DWORD PTR es:[edi],dx
  412d89:	push   cs
  412d8a:	inc    esi
  412d8b:	pop    edi
  412d8d:	mov    bh,0x2b
  412d8f:	jae    0x412d2e
  412d91:	mul    dh
  412d93:	xchg   ebx,eax
  412d94:	push   ebx
  412d95:	dec    eax
  412d96:	xlat   BYTE PTR ds:[ebx]
  412d97:	pop    edx
  412d98:	arpl   WORD PTR [edi],cx
  412d9a:	push   eax
  412d9b:	sar    ch,1
  412d9d:	or     DWORD PTR [edx],esi
  412d9f:	xchg   edi,eax
  412da0:	popf   
  412da1:	xor    al,0x4b
  412da3:	popa   
  412da4:	add    al,0xd8
  412da6:	pusha  
  412da7:	dec    esp
  412da8:	fiadd  DWORD PTR [ebx-0x2a212f69]
  412dae:	cmp    DWORD PTR [esp+esi*8],0x6e
  412db2:	clc    
  412db3:	fist   DWORD PTR [eax-0x2d9b63c0]
  412db9:	mov    BYTE PTR [edx],dl
  412dbb:	nop
  412dbc:	mov    dl,0xdf
  412dbe:	mov    ecx,0x12cb38f7
  412dc3:	push   edi
  412dc4:	push   ecx
  412dc5:	repnz push cs
  412dc7:	outs   dx,BYTE PTR ds:[esi]
  412dc8:	xchg   ecx,eax
  412dc9:	out    0x88,al
  412dcb:	jmp    0x89b6:0x30eeba5e
  412dd2:	mov    dl,BYTE PTR [eax+ecx*2]
  412dd5:	or     DWORD PTR [edi+0x439df36e],edx
  412ddb:	(bad)  
  412ddc:	sbb    DWORD PTR [esi],edx
  412dde:	sub    edi,edi
  412de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de1:	push   esi
  412de2:	int3   
  412de3:	pop    ss
  412de4:	dec    ebp
  412de5:	adc    BYTE PTR [ecx+0x59],bh
  412de8:	dec    esp
  412de9:	dec    edi
  412dea:	mov    ds:0xb1dbb107,al
  412def:	xor    ah,BYTE PTR [ebp+0x21]
  412df2:	dec    edx
  412df3:	jg     0x412e65
  412df5:	inc    edi
  412df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df7:	cdq    
  412df8:	fs pop es
  412dfa:	jl     0x412de3
  412dfc:	fadd   DWORD PTR [edi+0x44]
  412dff:	in     al,dx
  412e00:	idiv   DWORD PTR [ecx+0x400ad32a]
  412e06:	add    BYTE PTR [ebx-0xf],al
  412e09:	call   0x2d16:0x342c33f7
  412e10:	icebp  
  412e11:	retf   
  412e12:	cmp    dh,cl
  412e14:	sti    
  412e15:	and    DWORD PTR [eax+0x3a],ebx
  412e18:	jb     0x412e47
  412e1a:	xlat   BYTE PTR ds:[ebx]
  412e1b:	(bad)  
  412e1c:	pusha  
  412e1d:	les    ecx,FWORD PTR [esi]
  412e1f:	mov    ds:0xe6303157,eax
  412e24:	aaa    
  412e25:	add    DWORD PTR [ecx+0x40],eax
  412e28:	lds    esi,FWORD PTR [esi-0x73]
  412e2b:	mov    dl,0x2a
  412e2d:	daa    
  412e2e:	mov    ds:0xea873011,eax
  412e33:	pop    ebp
  412e34:	sub    eax,0xc082c372
  412e39:	arpl   WORD PTR [ebx],ax
  412e3b:	push   edx
  412e3c:	adc    ebx,esp
  412e3e:	jmp    0x676e:0x33fc7f33
  412e45:	aaa    
  412e46:	jg     0x412deb
  412e48:	mov    eax,ds:0x3746d2fe
  412e4d:	scas   al,BYTE PTR es:[edi]
  412e4e:	jmp    0x412e8d
  412e50:	inc    esi
  412e51:	stos   DWORD PTR es:[edi],eax
  412e52:	cmp    esp,DWORD PTR [ebp-0xfb923dd]
  412e58:	test   al,0x60
  412e5a:	or     ecx,edi
  412e5c:	push   edi
  412e5d:	stos   BYTE PTR es:[edi],al
  412e5e:	sbb    edi,DWORD PTR [ebx-0x24cebdce]
  412e64:	cs add al,0x9c
  412e67:	sub    bh,BYTE PTR [ebp+0x66afe8cd]
  412e6d:	sbb    bh,ah
  412e6f:	or     eax,0xa5c6a589
  412e74:	icebp  
  412e75:	push   ds
  412e76:	sub    esp,DWORD PTR [esi-0x10]
  412e79:	adc    DWORD PTR [edx],ecx
  412e7b:	jecxz  0x412ef9
  412e7d:	out    dx,eax
  412e7e:	pop    esi
  412e7f:	push   eax
  412e80:	sub    al,0x5c
  412e82:	popa   
  412e83:	nop
  412e84:	test   DWORD PTR [ecx],ebx
  412e86:	rcr    BYTE PTR [esi],0xb7
  412e89:	and    al,BYTE PTR [ecx]
  412e8b:	cmp    dh,ch
  412e8d:	(bad)  
  412e8e:	mov    ebp,0xa462a22e
  412e93:	and    ch,dl
  412e95:	jmp    0xabde:0x32abe210
  412e9c:	mov    edi,0x9af05034
  412ea1:	xor    al,0x39
  412ea3:	xor    al,0x6a
  412ea5:	add    ecx,esi
  412ea7:	jmp    0x412f1e
  412ea9:	ins    BYTE PTR es:[edi],dx
  412eaa:	inc    edi
  412eab:	(bad)  
  412eac:	in     eax,0x32
  412eae:	pop    ebp
  412eaf:	cmp    eax,0x8fac6f0b
  412eb4:	xchg   edx,eax
  412eb5:	inc    edi
  412eb6:	pop    eax
  412eb7:	les    ebx,FWORD PTR [ecx+0x7ec3fc6c]
  412ebd:	outs   dx,BYTE PTR ds:[esi]
  412ebe:	(bad)  
  412ebf:	and    ecx,esp
  412ec1:	or     eax,0x486732d3
  412ec6:	pop    ecx
  412ec7:	loopne 0x412e95
  412ec9:	dec    ecx
  412eca:	push   cs
  412ecb:	daa    
  412ecc:	ss inc eax
  412ece:	adc    eax,0x12de020f
  412ed3:	sahf   
  412ed4:	mov    DWORD PTR [eax-0x3d],esi
  412ed7:	cmp    eax,0x7a411a38
  412edc:	popf   
  412edd:	gs mov ebx,0xe1e5c1de
  412ee3:	mov    dh,0x8e
  412ee5:	cmp    dh,BYTE PTR [ebx+0x17]
  412ee8:	mov    eax,0x23844eeb
  412eed:	in     eax,0xd8
  412eef:	outs   dx,DWORD PTR ds:[esi]
  412ef0:	(bad)  [ebx-0x180b6ab7]
  412ef6:	push   edi
  412ef7:	dec    BYTE PTR [eax]
  412ef9:	xchg   ecx,eax
  412efa:	lods   al,BYTE PTR ds:[esi]
  412efb:	pusha  
  412efc:	pop    eax
  412efd:	(bad)  
  412efe:	sub    esi,edi
  412f00:	repnz aaa 
  412f02:	cmp    BYTE PTR [ecx-0x3ef1974],bh
  412f08:	leave  
  412f09:	lock popf 
  412f0b:	scas   al,BYTE PTR es:[edi]
  412f0c:	mul    DWORD PTR [ebx-0x553ef46]
  412f12:	mov    edx,0x5fd90bd7
  412f17:	jg     0x412ec1
  412f19:	pop    esp
  412f1a:	(bad)  
  412f1b:	ror    DWORD PTR [edi+ebx*8+0x4e],1
  412f1f:	icebp  
  412f20:	jnp    0x412f7e
  412f22:	js     0x412f36
  412f24:	mov    ebx,0xb96e0a67
  412f29:	jge    0x412ebf
  412f2b:	xchg   ecx,eax
  412f2c:	dec    esi
  412f2d:	and    eax,ebx
  412f2f:	mov    esi,0x73528de6
  412f34:	div    BYTE PTR [edi-0x67189a8]
  412f3a:	xchg   BYTE PTR [ecx],dl
  412f3c:	outs   dx,BYTE PTR ds:[esi]
  412f3d:	std    
  412f3e:	push   esi
  412f3f:	push   0xffffff8e
  412f41:	dec    eax
  412f42:	pop    edx
  412f43:	pop    esp
  412f44:	or     eax,0x82ab8677
  412f49:	retf   0xa75
  412f4c:	nop
  412f4d:	or     BYTE PTR [ebx-0x59],bl
  412f50:	mov    WORD PTR [esi],?
  412f52:	loop   0x412ed6
  412f54:	push   0x59
  412f56:	ret    0xd9d6
  412f59:	test   bl,dh
  412f5b:	test   eax,0xc82db9a6
  412f60:	shr    DWORD PTR [ecx+0x94b1d08],0x66
  412f67:	icebp  
  412f68:	lds    ebx,FWORD PTR [ebx]
  412f6a:	retf   
  412f6b:	imul   ecx,DWORD PTR [ebp+0x19],0xffffffc3
  412f6f:	add    DWORD PTR [edi+0x39],edi
  412f72:	adc    DWORD PTR [ecx],eax
  412f74:	jae    0x412f25
  412f76:	cli    
  412f77:	lea    ecx,[edx-0x6f]
  412f7a:	ficomp DWORD PTR [edx]
  412f7c:	dec    edi
  412f7d:	jo     0x412fc0
  412f7f:	shr    BYTE PTR [ebx+0x56],1
  412f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f83:	inc    esi
  412f84:	ins    DWORD PTR es:[edi],dx
  412f85:	mov    edx,0xb428be5d
  412f8a:	or     dl,dl
  412f8c:	adc    DWORD PTR [edx],edx
  412f8e:	mov    edi,0x1893649e
  412f93:	mov    bl,0xa2
  412f95:	mov    BYTE PTR [ebp-0x389abe92],al
  412f9b:	out    dx,al
  412f9c:	inc    edx
  412f9d:	ds popa 
  412f9f:	fs in  al,dx
  412fa1:	pop    es
  412fa2:	retf   0x46e8
  412fa5:	imul   edx,DWORD PTR ds:0xf690a2b1,0xffffffa2
  412fac:	push   ebp
  412fad:	adc    DWORD PTR [edx],ebx
  412faf:	jb     0x412f74
  412fb1:	shl    BYTE PTR [ebx+0x63],0xaf
  412fb5:	gs inc esp
  412fb7:	(bad)  
  412fb8:	scas   eax,DWORD PTR es:[edi]
  412fb9:	push   ebx
  412fba:	cmp    esp,DWORD PTR [edi+0x2f3723da]
  412fc0:	pop    ds
  412fc1:	sbb    DWORD PTR [esi],eax
  412fc3:	fst    DWORD PTR [edi-0x5f]
  412fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc7:	xchg   DWORD PTR [edi+0x67d3e37e],edi
  412fcd:	xor    DWORD PTR [ebp-0x7e],0xb5353c9
  412fd4:	fs inc eax
  412fd6:	push   0x41
  412fd8:	xor    ebx,edi
  412fda:	inc    ecx
  412fdb:	callw  0xd3ab
  412fdf:	test   eax,0x127cd877
  412fe4:	cli    
  412fe5:	add    ebx,ecx
  412fe7:	sub    al,0x55
  412fe9:	and    bh,BYTE PTR [ecx+edx*2-0xa]
  412fed:	retfw  0xfb6e
  412ff1:	mov    ch,0x13
  412ff3:	mov    ah,0x2a
  412ff5:	jno    0x412fb2
  412ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff8:	popf   
  412ff9:	and    cl,cl
  412ffb:	jae    0x413076
  412ffd:	sbb    BYTE PTR [edi],bh
  412fff:	cs lock cld 
  413002:	adc    DWORD PTR [edi+0x71],esi
  413005:	xor    DWORD PTR [esi+0x37],0x857e7cd3
  41300c:	ss mov edi,ecx
  41300f:	repz adc DWORD PTR [esi+0x4],0x69
  413014:	sub    al,0x82
  413016:	clc    
  413017:	mov    bh,0xec
  413019:	push   ss
  41301a:	adc    al,0x72
  41301c:	or     eax,0x98b0177f
  413021:	xchg   DWORD PTR [edx],eax
  413023:	mov    WORD PTR [ebx-0x7a],ds
  413026:	sub    eax,0x630c4cba
  41302b:	mov    WORD PTR [eax-0x74c7c804],?
  413031:	push   ds
  413032:	push   edx
  413033:	cmp    al,cl
  413035:	pop    esi
  413036:	inc    ebp
  413037:	add    BYTE PTR [eax],0x52
  41303a:	mov    dh,0xbb
  41303c:	add    ebx,DWORD PTR [ecx]
  41303e:	adc    eax,esp
  413040:	pop    ebp
  413041:	shl    ecx,cl
  413043:	inc    ebx
  413044:	outs   dx,BYTE PTR ds:[esi]
  413045:	sbb    ecx,ebp
  413047:	xchg   ebx,eax
  413048:	or     ecx,edi
  41304a:	test   DWORD PTR [esi+0x22],esp
  41304d:	sti    
  41304e:	sbb    al,0x33
  413050:	jge    0x4130bb
  413052:	lea    esp,[esi+0x2a2964a2]
  413058:	call   0xc724b12e
  41305d:	or     edi,DWORD PTR [ebx+ebx*4-0x6a16e304]
  413064:	das    
  413065:	jle    0x41308a
  413067:	add    al,0xd8
  41306a:	add    BYTE PTR [esi+esi*1+0x76268b4],bh
  413071:	adc    eax,0x65f60c48
  413076:	icebp  
  413077:	cmp    eax,0x3d9abc44
  41307c:	dec    edi
  41307d:	rcr    DWORD PTR [ebx-0x12],0x28
  413081:	dec    edi
  413082:	hlt    
  413083:	(bad)  
  413084:	das    
  413085:	mov    ds:0x93073a9b,eax
  41308a:	lods   eax,DWORD PTR ds:[esi]
  41308b:	sbb    edx,DWORD PTR [edi-0x3c2a5a25]
  413091:	inc    ecx
  413092:	jmp    0xad146a15
  413097:	fwait
  413098:	clc    
  413099:	scas   al,BYTE PTR es:[edi]
  41309a:	aad    0xf5
  41309c:	popf   
  41309d:	mov    dh,0x9c
  41309f:	dec    esp
  4130a0:	cli    
  4130a1:	sar    DWORD PTR [edi+edx*1-0x54],0x8a
  4130a6:	sbb    eax,DWORD PTR [bp-0x77b5]
  4130ab:	mov    bh,BYTE PTR [ebx]
  4130ad:	and    eax,0xadabf5eb
  4130b2:	adc    DWORD PTR [eax+0xfe244c0],ebp
  4130b8:	pop    es
  4130b9:	sbb    DWORD PTR [eax],eax
  4130bb:	aad    0xec
  4130bd:	inc    eax
  4130be:	push   ebx
  4130bf:	jno    0x413133
  4130c1:	xchg   esp,eax
  4130c2:	js     0x4130bd
  4130c4:	mov    BYTE PTR [ebx+0x10],dl
  4130c7:	inc    esp
  4130c8:	leave  
  4130c9:	aad    0x90
  4130cb:	(bad)  
  4130cc:	jnp    0x41313b
  4130ce:	in     al,0xb6
  4130d0:	pop    ebx
  4130d1:	outs   dx,DWORD PTR ds:[esi]
  4130d2:	aaa    
  4130d3:	cwde   
  4130d4:	loope  0x4130d4
  4130d6:	cs push 0x2dacf00b
  4130dc:	push   0xc
  4130de:	jo     0x413119
  4130e0:	dec    edx
  4130e1:	cdq    
  4130e2:	cmp    eax,0x6787c1e4
  4130e7:	cmp    eax,0x478d71f8
  4130ec:	pushf  
  4130ed:	mov    esp,0x3c9e4b02
  4130f2:	cld    
  4130f3:	shl    DWORD PTR [eax+0xc68a501],0x3
  4130fa:	inc    eax
  4130fb:	shr    BYTE PTR [eax+0x452b9e4f],1
  413101:	data16 loopne 0x41313c
  413104:	imul   ebp,DWORD PTR [eax-0x6565cb94],0xffffffe3
  41310b:	shl    BYTE PTR [edx+ebx*2+0x26],1
  41310f:	iret   
  413110:	adc    eax,0x2a18ba94
  413115:	sub    ah,BYTE PTR [edi+0x30]
  413118:	in     eax,dx
  413119:	popa   
  41311a:	scas   al,BYTE PTR es:[edi]
  41311b:	add    BYTE PTR [eax],ch
  41311d:	and    esi,eax
  41311f:	xchg   ebx,eax
  413120:	xchg   esi,eax
  413121:	lea    ecx,[edx+0x29fab052]
  413127:	xchg   ebx,eax
  413128:	xchg   DWORD PTR [esi-0xe894ac1],esi
  41312e:	ins    DWORD PTR es:[edi],dx
  41312f:	cmp    al,BYTE PTR [edi+0x3300f207]
  413135:	lods   eax,DWORD PTR ds:[esi]
  413136:	add    dh,BYTE PTR [esi]
  413138:	sub    esi,ebx
  41313a:	or     dl,BYTE PTR [ebp-0x29]
  41313d:	pushf  
  41313e:	dec    ebp
  41313f:	push   esp
  413140:	and    dl,BYTE PTR [ebx]
  413142:	and    bh,BYTE PTR [ebp+edi*1-0x28afba5a]
  413149:	popf   
  41314a:	ret    
  41314b:	cmp    eax,0xe0478183
  413150:	ins    BYTE PTR es:[edi],dx
  413151:	dec    ebp
  413152:	and    al,0x93
  413154:	mov    dl,bh
  413156:	and    BYTE PTR [esi],dl
  413158:	xchg   edi,eax
  413159:	sub    al,0xc5
  41315b:	aas    
  41315c:	push   ss
  41315d:	push   esi
  41315e:	int    0xf0
  413160:	stos   BYTE PTR es:[edi],al
  413161:	loope  0x41310c
  413163:	sub    DWORD PTR [edi],0x1c8b407
  413169:	out    dx,eax
  41316a:	fs (bad) 
  41316c:	mov    ebx,?
  41316e:	call   DWORD PTR [esi]
  413170:	mov    ebp,0x3897a88b
  413175:	lods   al,BYTE PTR ds:[esi]
  413176:	xor    DWORD PTR [esi+0x45],esi
  413179:	in     eax,dx
  41317a:	push   ss
  41317b:	shl    BYTE PTR [eax],cl
  41317d:	clc    
  41317e:	and    BYTE PTR [edi],dl
  413180:	dec    ebp
  413181:	ins    BYTE PTR es:[edi],dx
  413182:	bound  eax,QWORD PTR [edi+0x31383498]
  413188:	clc    
  413189:	xor    DWORD PTR [edi-0x2180b651],ebp
  41318f:	int    0x37
  413191:	retf   
  413192:	lea    ecx,[edi-0x7c]
  413195:	and    esi,esi
  413197:	retf   
  413198:	test   al,0x8f
  41319a:	bnd je 0x41316c
  41319d:	or     eax,0xf986d7b4
  4131a2:	adc    eax,0x885f46a4
  4131a7:	retf   
  4131a8:	dec    edx
  4131a9:	sbb    al,0xda
  4131ab:	sub    al,0x1e
  4131ad:	adc    BYTE PTR [ebp+0x34],dh
  4131b0:	xchg   ebp,eax
  4131b1:	adc    edi,edi
  4131b3:	(bad)  
  4131b4:	pop    ss
  4131b5:	or     al,0x46
  4131b7:	push   ds
  4131b8:	out    0x17,al
  4131ba:	popf   
  4131bb:	or     eax,0x11768c00
  4131c0:	repnz pop esi
  4131c2:	arpl   WORD PTR [edx],cx
  4131c4:	dec    ebx
  4131c5:	dec    edi
  4131c6:	push   ebx
  4131c7:	clc    
  4131c8:	jecxz  0x413234
  4131ca:	imul   edi,DWORD PTR [ebx-0x4574f26a],0x52
  4131d1:	xchg   esp,eax
  4131d2:	cmc    
  4131d3:	jno    0x41323c
  4131d5:	or     DWORD PTR [edx],eax
  4131d7:	retf   
  4131d8:	mov    edi,0x34cf68a2
  4131dd:	jecxz  0x4131ff
  4131df:	or     ebx,DWORD PTR [edi+0x1c]
  4131e2:	(bad)  
  4131e3:	ins    DWORD PTR es:[edi],dx
  4131e4:	ret    0x280d
  4131e7:	ss cwde 
  4131e9:	add    dh,BYTE PTR [ecx-0x4]
  4131ec:	dec    esp
  4131ed:	xchg   ecx,eax
  4131ee:	and    al,0x8
  4131f0:	mov    ebp,0x502f3c6d
  4131f5:	jnp    0x413210
  4131f7:	popf   
  4131f8:	fistp  QWORD PTR [esi-0x29]
  4131fb:	push   edx
  4131fc:	retf   0x3b9
  4131ff:	or     DWORD PTR [ecx],ebx
  413201:	and    al,0xe9
  413203:	test   al,0x30
  413205:	cmc    
  413206:	test   bl,bh
  413208:	not    BYTE PTR [esi+0x5ec01fb2]
  41320e:	setns  BYTE PTR [edi-0x2aa57d9a]
  413215:	pusha  
  413216:	mov    al,ds:0xc3dc7f37
  41321b:	jb     0x413242
  41321d:	pop    es
  41321e:	retf   
  41321f:	mov    DWORD PTR [edx-0x8],ebx
  413222:	jo     0x4131cd
  413224:	ins    DWORD PTR es:[edi],dx
  413225:	ja     0x413291
  413227:	sbb    dl,BYTE PTR [eax+0x2]
  41322a:	aas    
  41322b:	mov    esp,0x2bd848e3
  413230:	aam    0xa
  413232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413233:	mov    edx,0xc9f26f7a
  413238:	int    0xa7
  41323a:	imul   ecx,eax,0xb1e35bc5
  413240:	rcl    ebp,0x6d
  413243:	jnp    0x413298
  413245:	loop   0x413214
  413247:	mov    al,ds:0xd15d1d9d
  41324c:	pop    eax
  41324d:	fld    st(4)
  41324f:	inc    ecx
  413250:	psubsw mm7,QWORD PTR [edi+0x3e]
  413254:	mov    WORD PTR [ecx+0x1531f13d],cs
  41325a:	retf   
  41325b:	jb     0x4132b3
  41325d:	test   DWORD PTR [eax-0x55],ebx
  413260:	stos   DWORD PTR es:[edi],eax
  413261:	stos   DWORD PTR es:[edi],eax
  413262:	mov    ebx,0xdb25535f
  413267:	xchg   ebp,eax
  413268:	in     al,0xf4
  41326a:	retf   
  41326b:	ds fs gs xchg ebp,eax
  41326f:	sub    BYTE PTR [ecx+0x52],bl
  413272:	stos   DWORD PTR es:[edi],eax
  413273:	fild   QWORD PTR [edi]
  413275:	scas   al,BYTE PTR es:[edi]
  413276:	js     0x413281
  413278:	in     al,dx
  413279:	cmp    cl,BYTE PTR [esi-0x6c543a65]
  41327f:	(bad)  
  413281:	jg     0x4132c8
  413283:	push   ebx
  413284:	jns    0x413208
  413286:	pop    edi
  413287:	stc    
  413288:	or     BYTE PTR [eax+0x71bb5737],bh
  41328e:	mov    WORD PTR [ebx+0x60d6b886],?
  413294:	mov    bl,0xfc
  413296:	(bad)  
  413297:	add    al,0x7
  413299:	loopne 0x4132ac
  41329b:	outs   dx,DWORD PTR ds:[esi]
  41329c:	jo     0x41324a
  41329e:	jmp    0x4132da
  4132a0:	mov    eax,ds:0xa3c548cb
  4132a5:	jnp    0x41331f
  4132a7:	popf   
  4132a8:	sahf   
  4132a9:	sbb    dl,BYTE PTR [esp+ecx*8+0x25]
  4132ad:	add    DWORD PTR [eax+ebx*8-0x3f],ebx
  4132b1:	clc    
  4132b2:	xchg   dx,ax
  4132b4:	lds    ebp,FWORD PTR [edi+esi*2+0x30]
  4132b8:	outs   dx,DWORD PTR ds:[esi]
  4132b9:	(bad)  
  4132ba:	mov    cl,0xa8
  4132bc:	jle    0x41333a
  4132be:	stos   DWORD PTR es:[edi],eax
  4132bf:	or     DWORD PTR [eax],0x58f673bb
  4132c5:	xor    DWORD PTR [ebx+0x46],edi
  4132c8:	sbb    dh,al
  4132ca:	adc    eax,0x1618c7b6
  4132cf:	and    ebx,esp
  4132d1:	xor    eax,0x44f515d9
  4132d6:	inc    ebx
  4132d7:	push   0xffffffd0
  4132d9:	sub    dl,BYTE PTR [ebp-0xc55fe4b]
  4132df:	inc    ebx
  4132e0:	hlt    
  4132e1:	mov    ebp,0x2f3f11c3
  4132e6:	dec    ebp
  4132e7:	jmp    0x4132e2
  4132e9:	nop
  4132ea:	push   cs
  4132eb:	xor    bh,BYTE PTR [eax+edx*8+0x763aae85]
  4132f2:	gs sub al,0x84
  4132f5:	or     eax,0x7b0a782b
  4132fa:	ins    DWORD PTR es:[edi],dx
  4132fb:	xchg   edx,eax
  4132fc:	stos   BYTE PTR es:[edi],al
  4132fd:	test   BYTE PTR [ebx+0x3e],bl
  413300:	inc    ebp
  413301:	mov    ecx,0x69673875
  413306:	add    bh,BYTE PTR [edx+0x2fc79a29]
  41330c:	fdiv   DWORD PTR [eax-0x57def285]
  413312:	push   esi
  413313:	add    DWORD PTR [ebp+0xb],0x44
  413317:	lea    ebp,[eax+0x160eaf1c]
  41331d:	jl     0x413349
  41331f:	pop    ds
  413320:	aad    0xc2
  413322:	or     edx,DWORD PTR [edi+0x557ef421]
  413328:	sti    
  413329:	jno    0x413357
  41332b:	hlt    
  41332c:	(bad)  
  41332e:	mov    WORD PTR ds:0x867f0914,ds
  413334:	sbb    DWORD PTR [edi+0x38f7dfee],ebx
  41333a:	push   0xffffffcd
  41333c:	pop    ss
  41333d:	xor    ebx,edi
  41333f:	pop    ecx
  413340:	cld    
  413341:	ror    BYTE PTR ds:0xafbbd9ee,1
  413347:	in     eax,0xda
  413349:	fistp  WORD PTR [edx]
  41334b:	fwait
  41334c:	mov    dl,0x95
  41334e:	sbb    dl,BYTE PTR [ecx-0x5e5c349f]
  413354:	push   ds
  413355:	lds    ecx,FWORD PTR [eax+ebp*4-0xf483106]
  41335c:	sbb    BYTE PTR [ebx+0x3],0x6
  413360:	pop    edi
  413361:	push   0xffffffe4
  413363:	jmp    0x413340
  413365:	xchg   BYTE PTR [esi],ch
  413367:	sub    ebx,esi
  413369:	jae    0x413389
  41336b:	clc    
  41336c:	push   ecx
  41336d:	push   0xffffff98
  41336f:	mov    cl,BYTE PTR [ecx+0x5ce49bc4]
  413375:	fidiv  DWORD PTR [ebx]
  413377:	or     BYTE PTR [eax+ecx*4],ch
  41337a:	adc    BYTE PTR [ebp+0x2564a401],cl
  413380:	jmp    FWORD PTR [ebx+0x31]
  413383:	lods   al,BYTE PTR ds:[esi]
  413384:	sbb    ch,BYTE PTR [ebp+0x38b041be]
  41338a:	push   cs
  41338b:	pop    edx
  41338c:	cdq    
  41338d:	bound  eax,QWORD PTR [esi]
  41338f:	push   edx
  413390:	frstor [ecx]
  413392:	out    dx,eax
  413393:	repz fistp WORD PTR [esi+0x57]
  413397:	xchg   ebp,eax
  413398:	shr    DWORD PTR [ecx+0x7d],cl
  41339b:	in     al,0x21
  41339d:	inc    ebp
  41339e:	repnz push DWORD PTR [eax-0x4b]
  4133a2:	xchg   BYTE PTR cs:[edi+0x142b631a],dl
  4133a9:	push   0xffffff9a
  4133ab:	and    al,0x57
  4133ad:	fs add al,0xe4
  4133b0:	call   0x59d5:0xe721d3f0
  4133b7:	xor    eax,0x9eed1190
  4133bc:	xor    al,0xc1
  4133be:	add    BYTE PTR [esp+eax*8-0x6d],0x28
  4133c3:	pop    edx
  4133c4:	cli    
  4133c5:	sahf   
  4133c6:	mov    WORD PTR [ecx+ebp*2],?
  4133c9:	aas    
  4133ca:	jmp    0x41337b
  4133cc:	sbb    al,BYTE PTR [edi+0x38a3221a]
  4133d2:	fcomp  QWORD PTR [edx+0x1ff62bec]
  4133d9:	jle    0x413438
  4133db:	inc    eax
  4133dc:	jg     0x4133f1
  4133de:	sub    BYTE PTR [eax-0x6d0518ab],0x67
  4133e5:	cmp    esi,DWORD PTR [esi]
  4133e7:	les    edx,FWORD PTR [eax+0x5e]
  4133ea:	js     0x41345d
  4133ec:	push   0x2d
  4133ee:	hlt    
  4133ef:	push   cs
  4133f0:	lds    ebx,FWORD PTR [ebp+0x769e9cfb]
  4133f6:	pop    es
  4133f7:	fs jno 0x4133b7
  4133fa:	aam    0xcd
  4133fc:	push   0xffffff94
  4133fe:	xor    al,0x6a
  413400:	test   BYTE PTR [esi+ecx*1-0x70],dh
  413404:	cld    
  413405:	loop   0x413446
  413407:	cmp    DWORD PTR [edi],edi
  413409:	fild   QWORD PTR [ecx+0x1a884ce5]
  41340f:	mov    bh,BYTE PTR [ebx]
  413411:	and    eax,0x75a73f8
  413416:	(bad)  
  413417:	push   edx
  413418:	ret    
  413419:	out    0x33,eax
  41341b:	sahf   
  41341c:	test   al,0xc3
  41341e:	lock xor BYTE PTR [esi],0x4b
  413422:	add    al,0xde
  413424:	fist   DWORD PTR [esi+0x27d6f877]
  41342a:	arpl   WORD PTR [ecx],di
  41342c:	nop
  41342d:	lock mov bh,0x4f
  413430:	push   eax
  413431:	xchg   ebx,eax
  413432:	shr    BYTE PTR [edi],0x1d
  413435:	das    
  413436:	not    DWORD PTR [eax-0x3c]
  413439:	xor    edx,DWORD PTR [ebx]
  41343b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41343c:	(bad)  
  41343d:	jecxz  0x413485
  41343f:	adc    BYTE PTR [edx+0x43b69111],dl
  413445:	imul   esi,ebp,0x7b
  413448:	dec    ebx
  413449:	jmp    0x8bb:0x9539ccae
  413450:	rol    BYTE PTR ds:0x34dbc190,0x1b
  413457:	(bad)  
  413458:	scas   al,BYTE PTR es:[edi]
  413459:	inc    esi
  41345a:	into   
  41345b:	ret    0xb234
  41345e:	jp     0x413434
  413460:	mov    ebx,0x154cdcaf
  413465:	loop   0x413422
  413467:	shr    dl,1
  413469:	mov    ds:0x556d0f75,eax
  41346e:	jne    0x413458
  413470:	repnz xchg ebx,eax
  413472:	push   edx
  413473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413474:	rcr    BYTE PTR [eax],cl
  413476:	je     0x41347e
  413478:	xor    dl,ch
  41347a:	xor    eax,0x5858eb8b
  41347f:	add    BYTE PTR [edx+eax*4],cl
  413482:	cmp    BYTE PTR [edx-0x516cede],al
  413488:	sbb    eax,0x3ec70a96
  41348d:	stos   DWORD PTR es:[edi],eax
  41348e:	mov    edx,0xa16e97b2
  413493:	mov    ebx,0x9165999b
  413498:	or     DWORD PTR [ebx],eax
  41349a:	inc    eax
  41349b:	imul   ebp,DWORD PTR [eax-0x2c],0x7e9c7d50
  4134a2:	dec    esi
  4134a3:	add    DWORD PTR [esi-0x5be0f720],ebx
  4134a9:	ja     0x4134c7
  4134ab:	nop
  4134ac:	mov    cl,dh
  4134ae:	adc    dl,BYTE PTR [eax]
  4134b0:	out    dx,eax
  4134b1:	add    DWORD PTR [ecx-0x2ccf4d18],ebp
  4134b7:	loop   0x41346b
  4134b9:	(bad)  
  4134ba:	arpl   dx,bp
  4134bc:	ins    DWORD PTR es:[edi],dx
  4134bd:	in     al,0x3a
  4134bf:	pop    esi
  4134c0:	outs   dx,DWORD PTR ds:[esi]
  4134c1:	and    ecx,esp
  4134c3:	adc    al,BYTE PTR [esi-0x1592ed2b]
  4134c9:	push   cs
  4134ca:	push   0xf392bf5e
  4134cf:	and    al,0x25
  4134d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134d2:	fst    DWORD PTR [eax+eax*1]
  4134d5:	nop
  4134d6:	imul   eax,DWORD PTR [ecx],0x18530a6e
  4134dc:	push   es
  4134dd:	push   esp
  4134de:	ja     0x413500
  4134e0:	xchg   ecx,eax
  4134e1:	add    ah,dl
  4134e3:	(bad)  
  4134e4:	xchg   edi,eax
  4134e5:	dec    ecx
  4134e6:	xchg   edx,eax
  4134e7:	fwait
  4134e8:	push   esi
  4134e9:	into   
  4134ea:	dec    ebx
  4134eb:	add    BYTE PTR [ebp+0x7c],0x22
  4134ef:	inc    esi
  4134f0:	xor    dl,bh
  4134f2:	fwait
  4134f3:	xor    eax,0x5e391600
  4134f8:	daa    
  4134f9:	add    al,0x78
  4134fb:	mov    esp,0xe95fc9a5
  413500:	(bad)  
  413501:	mov    ah,0x2f
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	mov    ebx,0x86e2855c
  413509:	fdiv   st,st(3)
  41350b:	lea    edi,[esi-0x6c7d1072]
  413511:	mov    al,ds:0x6854a17a
  413516:	fdivr  QWORD PTR [ecx]
  413518:	sub    bl,BYTE PTR [ecx+eax*8-0x53c434a9]
  41351f:	jmp    0x41356f
  413521:	jmp    0x6ed9dee0
  413526:	sbb    al,0x20
  413528:	push   esp
  413529:	push   ds
  41352a:	test   dl,al
  41352c:	test   al,0xac
  41352e:	and    BYTE PTR [ebx],0x26
  413531:	ins    DWORD PTR es:[edi],dx
  413532:	push   ebx
  413533:	or     eax,0xafd1180d
  413538:	rol    DWORD PTR [ecx+0x1ecfb4ea],cl
  41353e:	mov    ecx,ebx
  413540:	mov    edi,0x2aa62373
  413545:	int3   
  413546:	or     BYTE PTR [esi-0x17],dh
  413549:	push   eax
  41354a:	rcl    DWORD PTR [esi+eiz*4],0xe8
  41354e:	data16 and BYTE PTR [edx],cl
  413551:	jns    0x413548
  413553:	mov    DWORD PTR [eax+0x21],ebp
  413556:	push   ebp
  413557:	add    DWORD PTR [esi+0x7fc06b2a],ecx
  41355d:	add    edi,esp
  41355f:	mov    eax,ds:0xb0d6b0ef
  413564:	push   eax
  413565:	shr    BYTE PTR ds:0xb8fb6134,1
  41356b:	clc    
  41356c:	cmp    BYTE PTR [ebx-0x5be8a086],cl
  413572:	lods   eax,DWORD PTR ds:[esi]
  413573:	jmp    0x51eb:0x7990db32
  41357a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41357b:	stos   BYTE PTR es:[edi],al
  41357c:	pushf  
  41357d:	shl    DWORD PTR [ecx-0x49],0x47
  413581:	inc    ebx
  413582:	jecxz  0x413562
  413584:	fcom   QWORD PTR [esi]
  413586:	dec    ecx
  413587:	aaa    
  413588:	jnp    0x41359d
  41358a:	inc    ebp
  41358b:	sar    DWORD PTR [esi-0x32],0xc8
  41358f:	inc    ecx
  413590:	rcl    dl,1
  413592:	scas   eax,DWORD PTR es:[edi]
  413593:	pop    esp
  413594:	jb     0x4135c9
  413596:	outs   dx,BYTE PTR ds:[esi]
  413597:	retf   
  413598:	icebp  
  413599:	mov    edx,0x87dcbe7e
  41359e:	jmp    0x5d2d62c6
  4135a3:	or     al,0x9c
  4135a5:	mov    bh,0xab
  4135a7:	push   esp
  4135a8:	push   0x20
  4135aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ab:	popa   
  4135ac:	std    
  4135ad:	out    0x73,al
  4135af:	(bad)  
  4135b0:	pop    ds
  4135b1:	lea    esi,[ebp-0x63cb277d]
  4135b7:	gs popa 
  4135b9:	fsub   st(7),st
  4135bb:	in     eax,dx
  4135bc:	jns    0x413591
  4135be:	sti    
  4135bf:	ins    DWORD PTR es:[edi],dx
  4135c0:	fcmovne st,st(3)
  4135c2:	push   ecx
  4135c3:	inc    eax
  4135c4:	adc    ch,cl
  4135c6:	and    eax,0x81c7a67e
  4135cb:	shl    edi,0x72
  4135ce:	jp     0x413633
  4135d0:	sbb    eax,0x61a32d7
  4135d5:	jl     0x4135eb
  4135d7:	test   eax,0xacc4a31b
  4135dc:	jmp    0x41361f
  4135de:	push   esp
  4135df:	sub    eax,0x687c225d
  4135e4:	aad    0xc9
  4135e6:	ins    DWORD PTR es:[edi],dx
  4135e7:	in     eax,dx
  4135e8:	test   al,0x60
  4135ea:	leave  
  4135eb:	inc    ecx
  4135ec:	mov    bl,0x46
  4135ee:	cmp    cl,BYTE PTR [edi-0x5a]
  4135f1:	inc    edi
  4135f2:	xchg   esi,eax
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	fst    DWORD PTR [edi+0x65fe7590]
  4135fa:	dec    ebp
  4135fb:	sbb    ch,ah
  4135fd:	into   
  4135fe:	popa   
  4135ff:	test   al,0xcb
  413601:	jbe    0x413663
  413603:	mov    ebp,0xbc5bd676
  413608:	mov    esp,0x2d64c334
  41360d:	jecxz  0x4135a7
  41360f:	pop    ebx
  413610:	sub    BYTE PTR [ecx],al
  413612:	imul   esp,ebp,0xffffff8d
  413615:	xchg   ebp,eax
  413616:	mov    ds:0x15af8241,eax
  41361b:	inc    edi
  41361c:	stos   BYTE PTR es:[edi],al
  41361d:	mov    ah,0xe5
  41361f:	push   es
  413620:	(bad)  
  413621:	outs   dx,DWORD PTR ds:[esi]
  413622:	mov    dl,0x33
  413624:	push   es
  413625:	gs in  ax,dx
  413628:	lods   al,BYTE PTR ds:[esi]
  413629:	cmp    esp,edx
  41362b:	(bad)  
  41362c:	push   ss
  41362d:	adc    eax,0x6fbb7f0a
  413632:	push   0x7e
  413634:	aas    
  413635:	ins    BYTE PTR es:[edi],dx
  413636:	mov    cs,WORD PTR [eax]
  413638:	int3   
  413639:	cmp    ebp,DWORD PTR [edx+0x4b11001c]
  41363f:	mov    eax,0x6e7a083c
  413644:	stos   DWORD PTR es:[edi],eax
  413645:	into   
  413646:	jl     0x413664
  413648:	or     al,BYTE PTR [esi-0x373419a9]
  41364e:	or     eax,0x440ab64c
  413653:	shl    ch,cl
  413655:	ror    BYTE PTR [ecx+0xb],1
  413658:	pop    ss
  413659:	shl    cl,1
  41365b:	jmp    0x2ca7:0xcf1b2e99
  413662:	cmp    DWORD PTR [eax+0x19],edi
  413665:	jecxz  0x413622
  413667:	adc    eax,0x8220198b
  41366c:	sahf   
  41366d:	jmp    0xd4af02c8
  413672:	xor    ecx,DWORD PTR [ebx-0x17]
  413675:	clc    
  413676:	(bad)  
  413678:	jle    0x4136c7
  41367a:	std    
  41367b:	xlat   BYTE PTR ds:[ebx]
  41367c:	stc    
  41367d:	mov    BYTE PTR [eax-0x47],ch
  413680:	dec    eax
  413681:	lods   al,BYTE PTR ds:[esi]
  413682:	or     ecx,DWORD PTR [edx+0x6703fd14]
  413688:	aas    
  413689:	mov    ds:0xb1357ec4,eax
  41368e:	inc    ebp
  41368f:	int    0xcb
  413691:	add    BYTE PTR [ebp+0x26],cl
  413694:	out    dx,eax
  413695:	cdq    
  413696:	dec    ebp
  413697:	dec    edi
  413698:	rcr    DWORD PTR [ebp-0x492369cf],0xd3
  41369f:	adc    eax,0x4d94348b
  4136a4:	xchg   edi,esi
  4136a6:	mov    ds:0xaad99f83,eax
  4136ab:	cmp    eax,DWORD PTR [esi-0xd378e88]
  4136b1:	mov    dl,0x35
  4136b3:	loop   0x4136f1
  4136b5:	out    0x7e,eax
  4136b7:	sub    bh,BYTE PTR [esi+0x40bb6856]
  4136bd:	(bad)  [eax-0x35]
  4136c0:	in     al,0xf4
  4136c2:	mov    ss,WORD PTR [ebx-0x7d]
  4136c5:	std    
  4136c6:	hlt    
  4136c7:	dec    esp
  4136c8:	in     eax,dx
  4136c9:	add    esp,esi
  4136cb:	scas   eax,DWORD PTR es:[edi]
  4136cc:	into   
  4136cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ce:	mov    ch,0xcd
  4136d0:	out    dx,eax
  4136d1:	jle    0x4136dd
  4136d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136d4:	fcomp  st(4)
  4136d6:	mov    dl,0xad
  4136d8:	push   0x74
  4136da:	fcmovnu st,st(4)
  4136dc:	lahf   
  4136dd:	mov    bh,0xdc
  4136df:	pop    ds
  4136e0:	and    eax,0xdebf650d
  4136e5:	(bad)  
  4136e6:	repnz int3 
  4136e8:	stos   DWORD PTR es:[edi],eax
  4136e9:	int    0x1
  4136eb:	add    al,0x2d
  4136ed:	test   al,0xcf
  4136ef:	or     eax,0x36e1ad47
  4136f4:	cmc    
  4136f5:	xor    eax,0x9cdef50d
  4136fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136fb:	lods   eax,DWORD PTR ds:[esi]
  4136fc:	xor    edx,edi
  4136fe:	xchg   BYTE PTR [ebp-0x3a097a24],cl
  413704:	in     eax,0x3c
  413706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413707:	cmp    al,BYTE PTR [ebp+esi*2+0xe]
  41370b:	add    edx,edi
  41370d:	jno    0x413704
  41370f:	mov    al,ds:0xa82608c
  413714:	jmp    0x413754
  413716:	and    DWORD PTR [esi+eax*8-0x6014e41c],edx
  41371d:	push   esi
  41371e:	add    ch,BYTE PTR [edi+0x3d]
  413721:	lock or cl,BYTE PTR [edx+0x567d4fd8]
  413728:	jo     0x413763
  41372a:	inc    ecx
  41372b:	fwait
  41372c:	test   eax,0x6e3c7de8
  413731:	test   bx,0x6c9f
  413736:	es cmp bh,0xa6
  41373a:	mov    al,ds:0x10b0b0b1
  41373f:	jo     0x413762
  413741:	push   esp
  413742:	dec    eax
  413743:	fmul   DWORD PTR [ebx]
  413745:	xor    eax,0x472fcd91
  41374a:	test   DWORD PTR [esi],edi
  41374c:	jmp    0xbc4b:0x7985ef74
  413753:	push   esp
  413754:	dec    ecx
  413755:	jge    0x41378f
  413757:	add    esi,DWORD PTR [edx-0x55d74f2]
  41375d:	mov    ah,BYTE PTR [esi-0x3a5053db]
  413763:	mov    dh,0xa4
  413765:	nop
  413766:	sahf   
  413767:	shr    BYTE PTR [edx],1
  413769:	and    DWORD PTR [ecx+0x38],ebx
  41376c:	or     BYTE PTR [edx-0x14b18207],ah
  413772:	dec    esi
  413773:	cmp    al,0x52
  413775:	inc    esi
  413776:	mov    edi,0x27c8624b
  41377b:	addr16 jb 0x413744
  41377e:	jecxz  0x4137ff
  413780:	push   ebx
  413781:	pop    ebp
  413782:	jo     0x413802
  413784:	push   eax
  413785:	push   esp
  413786:	jns    0x4137c3
  413788:	ja     0x413766
  41378a:	(bad)  
  41378c:	sbb    eax,0x153de055
  413791:	lods   eax,DWORD PTR ds:[esi]
  413792:	inc    ebx
  413793:	mov    bh,0xb9
  413795:	pop    edi
  413796:	or     eax,0xfb90a510
  41379b:	ss call 0xf771:0x545448f9
  4137a3:	cs imul edi,ebx,0xffffffd7
  4137a7:	(bad)  
  4137a8:	pushf  
  4137a9:	fstp   DWORD PTR [eax+0x1b]
  4137ac:	test   ch,0x13
  4137af:	lods   eax,DWORD PTR ds:[esi]
  4137b0:	daa    
  4137b1:	sub    eax,DWORD PTR [esi-0x6746bfcd]
  4137b7:	and    BYTE PTR [edx-0x75],bh
  4137ba:	hlt    
  4137bb:	mov    al,ds:0x2146c44c
  4137c0:	pop    edi
  4137c1:	data16 adc BYTE PTR [ebp-0x3f],0x38
  4137c6:	push   edx
  4137c7:	push   es
  4137c8:	push   ebp
  4137c9:	out    dx,eax
  4137ca:	out    0x41,eax
  4137cc:	push   edi
  4137cd:	cdq    
  4137ce:	iret   
  4137cf:	jg     0x413772
  4137d1:	sbb    esi,DWORD PTR [eax-0x16652efb]
  4137d7:	out    0xb9,al
  4137d9:	pushw  cs
  4137db:	and    ah,ch
  4137dd:	jge    0x413840
  4137df:	adc    ecx,ebx
  4137e1:	fcmovne st,st(7)
  4137e3:	loop   0x413851
  4137e5:	shufps xmm0,xmm7,0xb2
  4137e9:	out    0x40,al
  4137eb:	loop   0x413783
  4137ed:	das    
  4137ee:	fcmovnbe st,st(4)
  4137f0:	popf   
  4137f1:	fstp   TBYTE PTR ds:0x3722cf70
  4137f7:	test   eax,0xa4ee3be6
  4137fc:	push   ds
  4137fd:	loope  0x413867
  4137ff:	push   0xffffff8a
  413801:	aad    0x6f
  413803:	sbb    esi,DWORD PTR [esi-0x213107f1]
  413809:	pop    ebp
  41380a:	xor    al,0xcd
  41380c:	adc    ch,dl
  41380e:	call   0x4c9d1a31
  413813:	daa    
  413814:	push   ds
  413815:	xchg   edi,eax
  413816:	popf   
  413817:	push   ds
  413818:	int    0xd4
  41381a:	inc    edx
  41381b:	mov    ds:0x3ee42dd3,al
  413820:	ds pop edx
  413822:	sbb    DWORD PTR [edx+0x15],esi
  413825:	adc    ch,BYTE PTR [eax+eax*1+0x2fcc9bcd]
  41382c:	sbb    esi,esp
  41382e:	and    DWORD PTR [edi+ebx*4],edi
  413831:	adc    dl,0x9a
  413834:	addr16 je 0x413871
  413837:	fcmovu st,st(0)
  413839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41383a:	fistp  QWORD PTR [ecx-0x14]
  41383d:	mov    ah,0x60
  41383f:	mov    eax,0x4eaf74c2
  413844:	fcom   DWORD PTR [eax]
  413846:	imul   esp,DWORD PTR [eax-0x79965602],0x1515e670
  413850:	xchg   ah,ah
  413852:	push   ss
  413853:	pop    es
  413854:	xchg   ebp,eax
  413855:	push   esp
  413856:	enter  0x4c2,0xdd
  41385a:	mov    fs,WORD PTR [eax-0x32da2ec0]
  413860:	xor    eax,0x653e5d34
  413865:	xor    ch,BYTE PTR [ecx+0x69]
  413868:	outs   dx,BYTE PTR ds:[esi]
  413869:	shl    BYTE PTR [edx+0x8],1
  41386c:	cmp    al,0x7a
  41386e:	adc    al,BYTE PTR [ecx+0x3e3fcabe]
  413874:	retf   0x8f47
  413877:	jge    0x413812
  413879:	push   0xffffffb2
  41387b:	iret   
  41387c:	jne    0x4138e8
  41387e:	stos   BYTE PTR es:[edi],al
  41387f:	popf   
  413880:	mov    ah,0x4d
  413882:	xchg   esp,eax
  413883:	call   0xfbb67731
  413888:	push   ebp
  413889:	shl    DWORD PTR [edi],1
  41388b:	sub    eax,0x47481af9
  413890:	scas   al,BYTE PTR es:[edi]
  413891:	push   ss
  413892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413893:	in     eax,dx
  413894:	xchg   ebx,eax
  413895:	std    
  413896:	pushf  
  413897:	mov    ch,0x5f
  413899:	leave  
  41389a:	lds    ebp,FWORD PTR [esi]
  41389c:	cdq    
  41389d:	mov    ah,0xa
  41389f:	lods   eax,DWORD PTR ds:[esi]
  4138a0:	in     eax,0xc0
  4138a2:	or     ecx,esi
  4138a4:	lahf   
  4138a5:	xor    BYTE PTR [edx+0x4],ch
  4138a8:	mov    dl,0xdf
  4138aa:	les    edx,FWORD PTR [ebp-0x54a9a634]
  4138b0:	pop    ecx
  4138b2:	push   ecx
  4138b3:	and    esi,DWORD PTR [edx-0x49a23095]
  4138b9:	jae    0x4138ae
  4138bb:	bound  ecx,QWORD PTR [ebp-0x38]
  4138be:	mov    ecx,0x4aa93cc2
  4138c3:	in     al,0xf6
  4138c5:	mov    ch,ah
  4138c7:	cwde   
  4138c8:	jmp    0x4e15:0x3c323657
  4138cf:	ret    0x5af7
  4138d2:	test   DWORD PTR [edi],esp
  4138d4:	xchg   edx,eax
  4138d5:	nop
  4138d6:	bound  edx,QWORD PTR [edi+0x2]
  4138d9:	jno    0x41385e
  4138db:	pop    edx
  4138dc:	mov    WORD PTR [esi+edx*8-0x6c],gs
  4138e0:	ss sbb eax,0x29a3db8f
  4138e6:	xchg   DWORD PTR [ebx+0xa],ebp
  4138e9:	dec    esi
  4138ea:	mov    eax,ds:0xa15851c
  4138ef:	inc    ebx
  4138f0:	cmp    BYTE PTR ds:0x5bc314f4,dl
  4138f6:	xor    al,0xbd
  4138f8:	sub    bl,bh
  4138fa:	inc    ecx
  4138fb:	das    
  4138fc:	jl     0x4138e4
  4138fe:	rcl    bh,1
  413900:	dec    edi
  413901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413902:	inc    edi
  413903:	sub    al,0xc4
  413905:	lds    ecx,FWORD PTR [ecx+ecx*1]
  413908:	inc    eax
  413909:	ficom  DWORD PTR [ecx+0x195769a5]
  41390f:	or     edx,ebp
  413911:	sub    DWORD PTR [edx+0x31abcc48],esi
  413917:	gs (bad) 
  413919:	push   eax
  41391a:	sub    al,0x14
  41391c:	fnstenv [ebp+0xedfbb63]
  413922:	js     0x4138d3
  413924:	sub    eax,ebp
  413926:	pop    ss
  413927:	xor    al,0x93
  413929:	aas    
  41392a:	xor    BYTE PTR [edx+0x47],ah
  41392d:	xor    DWORD PTR [edx+0x54],eax
  413930:	xchg   edi,eax
  413931:	sar    BYTE PTR [edi+0x65],0xfa
  413935:	pop    edi
  413936:	pushf  
  413937:	retf   
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	cmc    
  41393a:	in     eax,0xd3
  41393c:	clc    
  41393d:	jno    0x4138dc
  41393f:	mov    BYTE PTR [edx-0x40],dh
  413942:	adc    eax,0x84753a74
  413947:	stos   BYTE PTR es:[edi],al
  413948:	adc    eax,0x89681bfe
  41394d:	mov    eax,0xcd5d753c
  413952:	call   0x6cb:0x49089ad5
  413959:	lea    bx,[ecx+0x3743fd57]
  413960:	std    
  413961:	sbb    BYTE PTR [ebx],dl
  413963:	outs   dx,DWORD PTR ds:[esi]
  413964:	(bad)  
  413966:	lods   al,BYTE PTR ds:[esi]
  413967:	and    DWORD PTR [eax+esi*4-0x358a7fbd],ebx
  41396e:	ins    BYTE PTR es:[edi],dx
  41396f:	in     eax,0x4a
  413971:	xor    DWORD PTR [ecx+0xf70aec7],edx
  413977:	mov    al,0x5a
  413979:	dec    ebx
  41397a:	(bad)  
  41397b:	fwait
  41397c:	mov    cl,0xec
  41397e:	mov    es,ecx
  413980:	and    DWORD PTR [ebx-0x65802821],0xffffffbc
  413987:	out    0x6b,al
  413989:	sub    ebp,DWORD PTR ds:0xe5dd96a4
  41398f:	cmp    edx,DWORD PTR [ecx+edi*8]
  413992:	add    eax,0x946372bc
  413997:	xor    eax,0xf1711719
  41399c:	das    
  41399d:	sbb    al,bh
  41399f:	pop    ecx
  4139a0:	leave  
  4139a1:	pop    edi
  4139a2:	xchg   ecx,eax
  4139a3:	and    BYTE PTR [ebp-0x5a6aef47],ch
  4139a9:	jo     0x413934
  4139ab:	sbb    bh,dl
  4139ad:	jmp    0x413975
  4139af:	xchg   BYTE PTR [eax+0x51d3bfb],ch
  4139b5:	ins    DWORD PTR es:[edi],dx
  4139b6:	daa    
  4139b7:	and    BYTE PTR [edx-0x107e3c2b],dh
  4139bd:	and    BYTE PTR [ebx],dh
  4139bf:	loop   0x4139fa
  4139c1:	fiadd  WORD PTR [ebp+0x6b9be665]
  4139c7:	std    
  4139c8:	mov    esp,0xd70fc43
  4139cd:	hlt    
  4139ce:	and    al,0xb7
  4139d0:	imul   edx,DWORD PTR [esi+eiz*2],0x2f8161e1
  4139d7:	sar    BYTE PTR [ebx-0x4c1753a5],1
  4139dd:	out    0x86,eax
  4139df:	ins    BYTE PTR es:[edi],dx
  4139e0:	je     0x413972
  4139e2:	(bad)  
  4139e3:	sbb    ebx,ecx
  4139e5:	add    bl,BYTE PTR [edx-0x55]
  4139e8:	mov    eax,0x3257cf07
  4139ed:	ror    BYTE PTR [eax+0x625f6d2f],cl
  4139f3:	cmp    al,0x8d
  4139f5:	xchg   ecx,eax
  4139f6:	aad    0x7
  4139f8:	inc    eax
  4139f9:	stos   BYTE PTR es:[edi],al
  4139fa:	pop    esp
  4139fb:	gs ins BYTE PTR es:[edi],dx
  4139fd:	lahf   
  4139fe:	jb     0x4139fd
  413a00:	mov    ds:0x1b9ef490,al
  413a05:	cs adc al,0xf3
  413a08:	js     0x413a6f
  413a0a:	mov    ch,0xc6
  413a0c:	mov    dh,BYTE PTR [eax-0x2b0176dc]
  413a12:	push   edx
  413a13:	adc    ecx,edi
  413a15:	xor    al,0x53
  413a17:	xlat   BYTE PTR ds:[ebx]
  413a18:	jecxz  0x413a8b
  413a1a:	mov    eax,0xd4099488
  413a1f:	cmp    eax,0xcbd9d597
  413a24:	mov    fs,WORD PTR [edx+0x3f6fd47b]
  413a2a:	js     0x413a1d
  413a2c:	imul   ebx,DWORD PTR [esi-0x45ae0ab4],0x54
  413a33:	dec    ebp
  413a34:	outs   dx,BYTE PTR ds:[esi]
  413a35:	retf   0x82a7
  413a38:	mov    ah,0xe8
  413a3a:	or     al,bh
  413a3c:	(bad)  
  413a3e:	stos   BYTE PTR es:[edi],al
  413a3f:	jmp    0x413a98
  413a41:	pusha  
  413a42:	jmp    0xee79fbe6
  413a47:	pop    ebx
  413a48:	lock jle 0x413a11
  413a4b:	sar    BYTE PTR [eax+0x310622e4],cl
  413a51:	pop    ss
  413a52:	sahf   
  413a53:	test   eax,0xd026562d
  413a58:	fwait
  413a59:	pop    eax
  413a5a:	repz arpl WORD PTR [esi],sp
  413a5d:	sub    edi,edi
  413a5f:	dec    ecx
  413a60:	(bad)  
  413a62:	mov    al,0x6b
  413a64:	xchg   DWORD PTR [ecx+0x72],esi
  413a67:	ror    DWORD PTR [bx+0x4394],1
  413a6c:	cmp    al,0x13
  413a6e:	xor    ebx,DWORD PTR [esi+0xf]
  413a71:	mov    ds:0xb1eaabfa,al
  413a76:	repnz mov DWORD PTR [edi],ecx
  413a79:	sbb    ah,dl
  413a7b:	es out 0x6a,al
  413a7e:	aas    
  413a7f:	popa   
  413a80:	xor    eax,0xbbbc63f8
  413a85:	push   edx
  413a86:	outs   dx,DWORD PTR ds:[esi]
  413a87:	aam    0x6e
  413a89:	addr16 cwde 
  413a8b:	ds mov al,0x57
  413a8e:	mov    ds:0xfc062d1f,al
  413a93:	mov    eax,ds:0x4c7f57aa
  413a98:	push   0xffffffa5
  413a9a:	test   al,0x2f
  413a9c:	loopne 0x413a90
  413a9e:	xchg   esp,eax
  413a9f:	(bad)  
  413aa0:	pop    edi
  413aa1:	daa    
  413aa2:	inc    esi
  413aa3:	push   edx
  413aa4:	pop    eax
  413aa5:	(bad)
  413aa8:	mov    esp,0x5bb41b74
  413aad:	lock (bad) 
  413aaf:	jo     0x413aa6
  413ab1:	ins    DWORD PTR es:[edi],dx
  413ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab3:	imul   ebp,esi,0x9b51db63
  413ab9:	scas   al,BYTE PTR es:[edi]
  413aba:	gs retf 0x842e
  413abe:	test   BYTE PTR [esi-0x5f],0x63
  413ac2:	fldenv [edx+0x50]
  413ac5:	std    
  413ac6:	scas   eax,DWORD PTR es:[edi]
  413ac7:	(bad)  
  413ac8:	clc    
  413ac9:	or     cl,BYTE PTR [esi+ebp*2]
  413acc:	sbb    BYTE PTR [eax-0x26],bl
  413acf:	lods   al,BYTE PTR ds:[esi]
  413ad0:	(bad)  
  413ad1:	imul   ecx,ebx,0x28
  413ad4:	js     0x413a69
  413ad6:	add    al,BYTE PTR [eax]
  413ad8:	nop
  413ad9:	push   ds
  413ada:	pop    es
  413adb:	jb     0x413b16
  413add:	out    dx,eax
  413ade:	pusha  
  413adf:	xchg   ebp,eax
  413ae0:	inc    ebx
  413ae1:	jbe    0x413b2e
  413ae3:	pop    ebp
  413ae4:	loope  0x413aba
  413ae6:	adc    ch,BYTE PTR [ebp+0x399d98d4]
  413aec:	ins    DWORD PTR es:[edi],dx
  413aed:	jge    0x413abb
  413aef:	lods   al,BYTE PTR ds:[esi]
  413af0:	iret   
  413af1:	push   ss
  413af2:	lsl    eax,ax
  413af5:	xor    esi,DWORD PTR [ebx+eax*8-0x616f3e21]
  413afc:	sbb    al,0xca
  413afe:	push   ds
  413aff:	jl     0x413aff
  413b01:	push   ds
  413b02:	lahf   
  413b03:	mov    ebp,DWORD PTR [ebp+0x7c7e6cb4]
  413b09:	jno    0x413b85
  413b0b:	cmp    DWORD PTR [ebx],edi
  413b0d:	mov    esi,eax
  413b0f:	stos   DWORD PTR es:[edi],eax
  413b10:	(bad)  
  413b11:	div    ah
  413b13:	lods   eax,DWORD PTR ds:[esi]
  413b14:	sbb    al,0x37
  413b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b17:	xlat   BYTE PTR ds:[ebx]
  413b18:	mov    al,0x2d
  413b1a:	pop    esp
  413b1b:	push   0xffffffd1
  413b1d:	jl     0x413b22
  413b1f:	sbb    BYTE PTR [ecx],bl
  413b21:	or     eax,0x350d54d6
  413b26:	add    al,dl
  413b28:	jns    0x413aee
  413b2a:	push   ebp
  413b2b:	in     eax,0x85
  413b2d:	or     ecx,DWORD PTR [ecx+edx*1+0x3c8fac81]
  413b34:	pop    esp
  413b35:	lahf   
  413b36:	push   0xffffffd5
  413b38:	stos   BYTE PTR es:[edi],al
  413b39:	mov    eax,ds:0x4a43c14b
  413b3e:	sbb    BYTE PTR [edx+ecx*1+0x3cc2dc6e],ah
  413b45:	cmp    BYTE PTR [ebx+ecx*2-0x19],dl
  413b49:	push   0xe6b6ba86
  413b4e:	mov    bh,0x75
  413b50:	adc    DWORD PTR [edi+0x2d],esp
  413b53:	call   0x1e2b71c0
  413b58:	fidivr WORD PTR [ebx+0x4d]
  413b5b:	mov    DWORD PTR [ebp+0x30da0284],esp
  413b61:	jmp    0xc3f0:0x12ffd12f
  413b68:	jbe    0x413af3
  413b6a:	adc    BYTE PTR [ecx+0x68a7bfa3],dh
  413b70:	mov    ch,0x53
  413b72:	jmp    0x413b50
  413b74:	add    ah,ch
  413b76:	jg     0x413ba6
  413b78:	sbb    esp,0xffffffd2
  413b7b:	dec    eax
  413b7c:	pop    esp
  413b7d:	xchg   ebp,eax
  413b7e:	out    0x30,al
  413b80:	adc    DWORD PTR [ebp-0x3dcb9d33],edi
  413b86:	and    DWORD PTR [ebx-0x38],edx
  413b89:	das    
  413b8a:	and    eax,0x82f144e
  413b8f:	shl    ebp,1
  413b91:	fstp   DWORD PTR [ebp-0x22]
  413b94:	cmp    al,0xea
  413b96:	iret   
  413b97:	xchg   ebx,eax
  413b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b99:	adc    al,0x94
  413b9b:	push   ds
  413b9c:	in     eax,0x3e
  413b9e:	and    al,0x10
  413ba0:	xchg   ebp,eax
  413ba1:	inc    ebp
  413ba2:	mov    dh,0xf9
  413ba4:	nop
  413ba5:	push   edi
  413ba6:	ret    
  413ba7:	popa   
  413ba8:	fnstcw WORD PTR [eax+0x62be8]
  413bae:	push   ds
  413baf:	out    0x41,al
  413bb1:	sahf   
  413bb2:	add    al,0x84
  413bb4:	ja     0x413b97
  413bb6:	sbb    ebp,eax
  413bb8:	cmp    DWORD PTR [edx-0x35f61bc0],ecx
  413bbe:	add    eax,0xe5f499
  413bc3:	sub    ecx,ebx
  413bc5:	pop    ss
  413bc6:	popa   
  413bc7:	jg     0x413b53
  413bc9:	xor    al,dl
  413bcb:	pop    ecx
  413bcc:	outs   dx,BYTE PTR ds:[esi]
  413bcd:	push   edx
  413bce:	xchg   BYTE PTR [edx],bl
  413bd0:	adc    edx,DWORD PTR [eax+ebx*1-0x2a6bbb4e]
  413bd7:	bound  ecx,QWORD PTR [ecx]
  413bd9:	push   ds
  413bda:	fldenv [edx-0x22]
  413bdd:	mov    al,0xa
  413bdf:	sub    BYTE PTR [edx+0x753341f],0x9d
  413be6:	adc    eax,0xf826ccca
  413beb:	popf   
  413bec:	loope  0x413bc5
  413bee:	push   esi
  413bef:	pop    DWORD PTR [esi]
  413bf1:	out    0x75,eax
  413bf3:	sub    eax,0x8b41c3f4
  413bf8:	test   DWORD PTR [ecx],0xc3cf7fd0
  413bfe:	inc    esp
  413bff:	add    al,0xe
  413c01:	mov    ebx,esp
  413c03:	pop    edx
  413c04:	add    al,0x2d
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	nop
  413c08:	mov    edx,DWORD PTR [edi+0x9]
  413c0b:	xor    BYTE PTR [esi+0x71],al
  413c0e:	dec    eax
  413c0f:	ds je  0x413bc4
  413c12:	push   ebx
  413c13:	jl     0x413bd3
  413c15:	mov    ds:0x74788bf1,al
  413c1a:	cmc    
  413c1b:	add    DWORD PTR cs:[ebx+0x66875b2d],edx
  413c22:	sbb    BYTE PTR [ecx-0x6f],cl
  413c25:	sti    
  413c26:	in     eax,0x89
  413c28:	jb     0x413bef
  413c2a:	or     ebx,DWORD PTR [ecx+0xa313de0]
  413c30:	add    dh,BYTE PTR [ebx-0x151c739e]
  413c36:	cmp    DWORD PTR [edi],ebx
  413c38:	mov    dh,ah
  413c3a:	mov    ebp,0xa1c5a3a7
  413c3f:	(bad)  
  413c40:	cs fsub st(1),st
  413c43:	xchg   edx,eax
  413c44:	lds    esp,FWORD PTR [edx+0x79]
  413c47:	sbb    eax,0x73c5bc9f
  413c4c:	xchg   edi,eax
  413c4d:	jecxz  0x413bea
  413c4f:	push   esi
  413c50:	push   edi
  413c51:	lods   al,BYTE PTR ds:[esi]
  413c52:	mov    ?,WORD PTR [eax+eiz*2+0x0]
  413c56:	pop    edi
  413c57:	xchg   edx,eax
  413c58:	adc    bh,dh
  413c5a:	and    eax,0x8c5fa5a5
  413c5f:	xchg   al,cl
  413c61:	les    ecx,FWORD PTR [ebx]
  413c63:	cmc    
  413c64:	popa   
  413c65:	mov    ecx,0x69de643
  413c6a:	loop   0x413cab
  413c6c:	xor    edx,esi
  413c6e:	xchg   esp,eax
  413c6f:	jbe    0x413c0c
  413c71:	test   BYTE PTR [edx+eax*1-0x66],0x62
  413c76:	sbb    BYTE PTR [ebp+ebx*2+0x4556d267],bl
  413c7d:	scas   eax,DWORD PTR es:[edi]
  413c7e:	in     eax,dx
  413c7f:	pop    esp
  413c80:	lods   al,BYTE PTR ds:[esi]
  413c81:	xchg   ecx,eax
  413c82:	addr16 mov dh,bl
  413c85:	adc    edi,edi
  413c87:	ror    BYTE PTR [ecx-0x5fab8a3b],1
  413c8d:	mov    eax,0x43854a6a
  413c92:	xor    DWORD PTR [edi],edx
  413c94:	fdiv   st(7),st
  413c96:	or     edx,ebx
  413c98:	pop    ebp
  413c99:	xchg   DWORD PTR [ebp-0x1ad5a2c0],eax
  413c9f:	sbb    DWORD PTR [ebx-0x1a],0x6f
  413ca3:	fild   WORD PTR [ebx*8+0x55fcb80d]
  413caa:	jle    0x413cf5
  413cac:	arpl   WORD PTR [ebx+0x6d25c406],sp
  413cb2:	push   ss
  413cb3:	cwde   
  413cb4:	mov    ebp,0xd94f7cfd
  413cb9:	leave  
  413cba:	mov    ebx,0xe6bd60ef
  413cbf:	sub    BYTE PTR [edx+0x79],bh
  413cc2:	cmc    
  413cc3:	mov    ebp,DWORD PTR [ecx]
  413cc5:	nop
  413cc6:	and    eax,0x2f1cdda3
  413ccb:	adc    bh,dh
  413ccd:	dec    eax
  413cce:	in     eax,0x5c
  413cd0:	(bad)
  413cd3:	or     bl,bl
  413cd5:	mov    ebx,0x5e28d8e8
  413cda:	jmp    0x413ca9
  413cdc:	in     al,dx
  413cdd:	pop    ebp
  413cde:	push   ecx
  413cdf:	or     DWORD PTR [ebx],edi
  413ce1:	mov    ebp,0xfbff5dea
  413ce6:	add    DWORD PTR [edi-0x2b],ebx
  413ce9:	dec    ebp
  413cea:	pop    ecx
  413ceb:	mov    eax,0xe0a8c165
  413cf0:	addr16 (bad) 
  413cf2:	in     eax,0xca
  413cf4:	test   esp,0x8a4420a1
  413cfa:	and    eax,0x4914b988
  413cff:	or     ebx,DWORD PTR [ecx]
  413d01:	dec    esp
  413d02:	and    ebx,DWORD PTR [esi]
  413d04:	jne    0x413ca2
  413d06:	and    edx,DWORD PTR [edx+ebp*4]
  413d09:	fcom   QWORD PTR [edi-0x25b1c469]
  413d0f:	pop    eax
  413d10:	mov    esi,0x18435aa0
  413d15:	sub    cl,bh
  413d17:	xor    BYTE PTR [ecx+0x5e75da35],al
  413d1d:	inc    ebx
  413d1e:	stc    
  413d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d20:	call   0x468c:0xf2b9350a
  413d27:	jge    0x413ce6
  413d29:	xor    bl,BYTE PTR [esi]
  413d2b:	ret    
  413d2c:	adc    bh,ch
  413d2e:	pop    esp
  413d2f:	sub    eax,0x7227c7da
  413d34:	dec    ecx
  413d35:	xchg   ebp,eax
  413d36:	icebp  
  413d37:	push   ds
  413d38:	xor    BYTE PTR [ecx+eiz*2-0x46],bh
  413d3c:	add    BYTE PTR [esp+eax*4-0x19],bl
  413d40:	leave  
  413d41:	jno    0x413d54
  413d43:	in     al,dx
  413d44:	push   ss
  413d45:	stos   DWORD PTR es:[edi],eax
  413d46:	and    DWORD PTR [ebx+0x66],ebp
  413d49:	mov    ecx,0x9e8d1366
  413d4e:	dec    eax
  413d4f:	cmp    BYTE PTR [ecx-0xf],dl
  413d52:	inc    eax
  413d53:	adc    dl,BYTE PTR [ebp+0x6b]
  413d56:	and    al,0x6e
  413d58:	push   edi
  413d59:	pop    edx
  413d5a:	ret    0xdbdc
  413d5d:	arpl   WORD PTR [ebx],sp
  413d5f:	int    0x80
  413d61:	sbb    ecx,esi
  413d63:	mov    esp,0x7310ee2e
  413d68:	and    DWORD PTR [ebp+0x25014a33],0x1e9134e8
  413d72:	imul   edi,esi,0xd695a76e
  413d78:	add    dh,BYTE PTR [edx]
  413d7a:	push   eax
  413d7b:	stos   BYTE PTR es:[edi],al
  413d7c:	cmp    bh,dh
  413d7e:	mov    al,0x65
  413d80:	icebp  
  413d81:	push   esp
  413d82:	fst    QWORD PTR [ebp-0x6fe246d0]
  413d88:	ds xchg esi,eax
  413d8a:	jmp    0x20ec:0xa75c9ddf
  413d91:	mov    esp,eax
  413d93:	fild   WORD PTR [ebx+ecx*2-0x23]
  413d97:	jnp    0x413d86
  413d99:	inc    edx
  413d9a:	sub    al,0x41
  413d9c:	add    al,0xc8
  413d9e:	cwde   
  413d9f:	jge    0x413dee
  413da1:	push   esp
  413da2:	adc    ch,BYTE PTR ds:0x46eff07b
  413da8:	(bad)  
  413daa:	fnstsw WORD PTR [eax]
  413dac:	js     0x413e1f
  413dae:	xchg   DWORD PTR es:[ecx+edi*1+0x5145e8c9],esi
  413db6:	push   es
  413db7:	sub    esp,esp
  413db9:	call   0xc94a6553
  413dbe:	imul   esp,DWORD PTR [ecx-0x5f913075],0xaae59d3d
  413dc8:	popf   
  413dc9:	pop    ebp
  413dca:	and    al,0xb8
  413dcc:	jge    0x413d5e
  413dce:	mov    edi,0x7bf2da18
  413dd3:	out    0x50,eax
  413dd5:	call   0x8b2ba393
  413dda:	mov    esi,0xc60c40b0
  413ddf:	call   DWORD PTR [edx-0xd8fdba4]
  413de5:	ret    0x2cb
  413de8:	aam    0x33
  413dea:	mov    BYTE PTR [edx+0x3a],bh
  413ded:	and    DWORD PTR ds:0x6b3763b6,0xffffff90
  413df4:	mov    ds:0xd8ae69c9,eax
  413df9:	js     0x413df4
  413dfb:	imul   esi,ebp,0x381a74ac
  413e01:	push   esp
  413e02:	outs   dx,BYTE PTR ds:[esi]
  413e03:	jle    0x413dfc
  413e05:	jnp    0x413deb
  413e07:	inc    esi
  413e08:	inc    esp
  413e09:	popa   
  413e0a:	lock popa 
  413e0c:	mov    ds:0x303b88e3,al
  413e11:	push   ebp
  413e12:	adc    eax,0x901c8078
  413e17:	jg     0x413e75
  413e19:	cdq    
  413e1a:	(bad)  
  413e1b:	cld    
  413e1c:	fmul   QWORD PTR [edx-0xd377e8d]
  413e22:	pop    ebp
  413e23:	mov    bh,0x94
  413e25:	in     al,0x65
  413e27:	out    0xde,eax
  413e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e2a:	jmp    0x413ea7
  413e2c:	cld    
  413e2d:	call   0xd1a4e731
  413e32:	out    0xa2,eax
  413e34:	sub    DWORD PTR [esi+0x7],esi
  413e37:	aas    
  413e38:	(bad)  
  413e39:	or     BYTE PTR [edi-0x3],cl
  413e3c:	loopne 0x413de5
  413e3e:	inc    edx
  413e3f:	xor    DWORD PTR [esi+ebp*1-0x186e661d],ebx
  413e46:	or     eax,0x8990c6ec
  413e4b:	pop    ebx
  413e4c:	shl    BYTE PTR fs:[ecx],0x46
  413e50:	mov    al,ds:0x5c3ba36a
  413e55:	sbb    ebx,ecx
  413e57:	stc    
  413e58:	xor    ch,ch
  413e5a:	test   BYTE PTR [eax+eax*8],ch
  413e5d:	push   cs
  413e5e:	repz pushf 
  413e60:	icebp  
  413e61:	add    ch,BYTE PTR [edi]
  413e63:	xchg   ebp,eax
  413e64:	jp     0x413ee2
  413e66:	ret    
  413e67:	das    
  413e68:	and    ebp,DWORD PTR [ebx+0x536380ed]
  413e6e:	push   ds
  413e6f:	out    0x90,al
  413e71:	push   eax
  413e72:	xor    BYTE PTR [ebp-0x7971c663],bl
  413e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e79:	jb     0x413e1f
  413e7b:	out    dx,eax
  413e7c:	jnp    0x413e4a
  413e7e:	cwde   
  413e7f:	add    eax,0xfe6a2bcb
  413e84:	pop    eax
  413e85:	jae    0x413e72
  413e87:	add    dh,0x59
  413e8a:	lahf   
  413e8b:	jecxz  0x413e63
  413e8d:	add    DWORD PTR [ebp+0x69c4ced2],ebp
  413e93:	into   
  413e94:	jmp    0x413e7d
  413e96:	test   eax,0x5cd690de
  413e9b:	into   
  413e9c:	cmc    
  413e9d:	xor    BYTE PTR [edx],bl
  413e9f:	jle    0x413eff
  413ea1:	sbb    edi,ebx
  413ea3:	sbb    dl,al
  413ea5:	(bad)  
  413ea6:	outs   dx,DWORD PTR ds:[esi]
  413ea7:	jnp    0x413ef8
  413ea9:	int3   
  413eaa:	inc    edi
  413eab:	sub    eax,0xa7b32123
  413eb0:	mul    BYTE PTR [eax]
  413eb2:	test   eax,0x1273567e
  413eb7:	pop    ebp
  413eb8:	mov    cl,0x1
  413eba:	push   ecx
  413ebb:	mov    bh,0x60
  413ebd:	out    dx,al
  413ebe:	sbb    esp,eax
  413ec0:	cmp    eax,0x2914b8ce
  413ec5:	and    eax,0xdfe1963b
  413eca:	loopne 0x413f1b
  413ecc:	outs   dx,BYTE PTR ds:[esi]
  413ecd:	ret    0xbe46
  413ed0:	xor    al,0x2
  413ed2:	leave  
  413ed3:	repnz push es
  413ed5:	fst    QWORD PTR [ebx+0x78504209]
  413edb:	in     al,0xac
  413edd:	mov    dh,0x71
  413edf:	mov    esp,0x61e90268
  413ee4:	push   ebp
  413ee5:	pop    eax
  413ee6:	fisubr DWORD PTR [edx]
  413ee8:	push   ebp
  413ee9:	inc    edi
  413eea:	cli    
  413eeb:	in     al,0xa5
  413eed:	outs   dx,BYTE PTR ds:[esi]
  413eee:	add    eax,0x2fb27427
  413ef3:	and    BYTE PTR [edx+0x5],dh
  413ef6:	jno    0x413ee4
  413ef8:	jmp    esp
  413efa:	inc    esi
  413efb:	data16 cmp ch,BYTE PTR [ecx-0x244cc2bf]
  413f02:	mov    ch,0xb3
  413f04:	fdiv   st(1),st
  413f06:	out    dx,eax
  413f07:	mov    ch,dh
  413f09:	mov    ds:0x56e0a879,eax
  413f0e:	ss std 
  413f10:	dec    edi
  413f11:	push   sp
  413f13:	out    0x69,al
  413f15:	das    
  413f16:	iret   
  413f17:	pop    eax
  413f18:	test   al,0xcd
  413f1a:	jmp    0xea7:0xf2adf875
  413f21:	je     0x413f7c
  413f23:	bound  eax,QWORD PTR [edx+0x27df93d1]
  413f29:	sub    cl,al
  413f2b:	sub    al,0xc9
  413f2d:	hlt    
  413f2e:	loop   0x413f14
  413f30:	popf   
  413f31:	not    DWORD PTR [edi]
  413f33:	and    BYTE PTR [esp+ebp*1-0x69],dh
  413f37:	cmp    ah,bh
  413f39:	cmp    al,bh
  413f3b:	(bad)  
  413f3c:	pop    ss
  413f3d:	xor    ebx,ecx
  413f3f:	jb     0x413fa6
  413f41:	sbb    al,0x7a
  413f43:	test   eax,0x3ec4cb25
  413f48:	adc    esi,ecx
  413f4a:	ins    DWORD PTR es:[edi],dx
  413f4b:	fild   QWORD PTR [eax]
  413f4d:	test   eax,0x39c98a1a
  413f52:	call   FWORD PTR [eax+0x16fea926]
  413f58:	retf   
  413f59:	shl    BYTE PTR [edi],0x13
  413f5c:	mov    ebx,DWORD PTR ds:0xfc8f9591
  413f62:	cmc    
  413f63:	push   ebx
  413f64:	push   esp
  413f65:	push   edx
  413f66:	fwait
  413f67:	je     0x413f8e
  413f69:	xchg   ebp,eax
  413f6a:	ds xchg edx,eax
  413f6c:	or     eax,DWORD PTR [eax+eax*1+0x46]
  413f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f71:	or     eax,0xce279d8a
  413f76:	(bad)  [esp+ebx*1]
  413f79:	mov    BYTE PTR [ecx+esi*1],al
  413f7c:	pop    ebx
  413f7d:	ror    BYTE PTR [edx+0x47],1
  413f80:	jno    0x413f90
  413f82:	(bad)  
  413f83:	push   edi
  413f84:	sub    eax,0x10467e1d
  413f89:	call   0x7090:0xbc9a5db9
  413f90:	dec    edi
  413f91:	cmp    DWORD PTR gs:[eax+0x1d3e3391],esi
  413f98:	xor    eax,0x169cc61c
  413f9d:	fistp  DWORD PTR [edx+0x7c586443]
  413fa3:	push   cs
  413fa4:	in     eax,dx
  413fa5:	sub    DWORD PTR [ebx+edi*1],0xffffff93
  413fa9:	popw   ss
  413fab:	aaa    
  413fac:	xor    DWORD PTR [esi-0x56afbfa3],ebx
  413fb2:	sub    al,0x9
  413fb4:	jne    0x413fc5
  413fb6:	mov    bl,0x5d
  413fb8:	xchg   ebp,eax
  413fb9:	sbb    DWORD PTR ds:0x55ad1902,0x1b
  413fc0:	xchg   esi,eax
  413fc1:	or     ebp,DWORD PTR [edx-0x7e]
  413fc4:	jmp    0x413fa3
  413fc6:	lods   eax,DWORD PTR ds:[esi]
  413fc7:	and    ecx,ebp
  413fc9:	pop    eax
  413fca:	test   BYTE PTR [edi+eax*1],0xcf
  413fce:	sbb    BYTE PTR [ebx],ah
  413fd0:	imul   esi,DWORD PTR [ebx+0x2db5f3ff],0xff7d125a
  413fda:	lock or bh,BYTE PTR [ebx+0x7b]
  413fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fdf:	inc    edx
  413fe0:	pusha  
  413fe1:	rol    BYTE PTR [edi-0x2a],cl
  413fe4:	out    dx,eax
  413fe5:	xor    BYTE PTR [esi-0x7f],ch
  413fe8:	into   
  413fe9:	aam    0xa0
  413feb:	xchg   DWORD PTR [esi],edx
  413fed:	cmp    eax,0xa8944e4f
  413ff2:	sub    BYTE PTR [esi-0x379e259d],al
  413ff8:	test   al,0x67
  413ffa:	adc    ecx,DWORD PTR [edi]
  413ffc:	push   ds
  413ffd:	scas   al,BYTE PTR es:[edi]
  413ffe:	jge    0x413f98
  414000:	fsubr  DWORD PTR [edx+ecx*1]
  414003:	(bad)  
  414004:	fdivr  QWORD PTR ds:0xfd8f7868
  41400a:	not    BYTE PTR [ebx]
  41400c:	jno    0x413f93
  41400e:	and    BYTE PTR [ecx-0x15],dh
  414011:	fbstp  TBYTE PTR [ebx]
  414013:	mov    fs,ecx
  414015:	pop    ebp
  414016:	mov    WORD PTR [ebx+ebp*1],ds
  414019:	cdq    
  41401a:	inc    esp
  41401b:	mov    ch,0x4
  41401d:	and    DWORD PTR [edx+0x61],esp
  414020:	dec    edi
  414021:	pusha  
  414022:	xchg   ecx,eax
  414023:	add    dl,BYTE PTR [esi-0x8]
  414026:	ror    DWORD PTR [ebp+ebx*8-0x52a36800],cl
  41402d:	cmp    ebp,DWORD PTR [ebx]
  41402f:	das    
  414030:	dec    esi
  414031:	js     0x413fc9
  414033:	cld    
  414034:	jnp    0x413ffd
  414036:	mov    eax,0xbb2cd7d6
  41403b:	leave  
  41403c:	push   eax
  41403d:	cmp    BYTE PTR [ebx],ch
  41403f:	pusha  
  414040:	test   eax,0x86c9dc42
  414045:	adc    al,0x32
  414047:	pop    ebp
  414048:	retf   0xd83d
  41404b:	clc    
  41404c:	jne    0x414071
  41404e:	jg     0x414060
  414050:	lods   al,BYTE PTR ds:[esi]
  414051:	lods   eax,DWORD PTR ds:[esi]
  414052:	add    ecx,DWORD PTR [edi]
  414054:	retf   0xd781
  414057:	pop    ss
  414058:	inc    ebp
  414059:	dec    esi
  41405a:	(bad)  
  41405b:	imul   ebx,eax,0xffffff96
  41405e:	mov    ecx,0xe5c20dc9
  414063:	jnp    0x413ff3
  414065:	sbb    esi,eax
  414067:	into   
  414068:	pusha  
  414069:	ja     0x414062
  41406b:	mov    ecx,0x246ee833
  414070:	mov    eax,0xf2e01d14
  414075:	loop   0x414057
  414077:	in     al,dx
  414078:	mov    edx,0x576ae7c3
  41407d:	leave  
  41407e:	ja     0x4140ee
  414080:	inc    eax
  414081:	push   ds
  414082:	jo     0x414090
  414084:	bound  ebx,QWORD PTR [eax+0x46930810]
  41408a:	cwde   
  41408b:	mov    ebx,0xa293cdea
  414090:	push   ss
  414091:	aaa    
  414092:	pop    ebx
  414093:	cmc    
  414094:	addr16 pop edi
  414096:	pushf  
  414097:	push   esi
  414098:	sbb    al,BYTE PTR [ecx+ebx*1]
  41409b:	retf   
  41409c:	imul   esp,ecx,0x8cd572df
  4140a2:	or     bl,BYTE PTR [esp+ebp*4+0x5b]
  4140a6:	jl     0x4140d9
  4140a8:	jns    0x414098
  4140aa:	outs   dx,DWORD PTR ds:[esi]
  4140ab:	pop    es
  4140ac:	mov    ebx,0x97c9a0b9
  4140b1:	or     BYTE PTR [ebp-0x187442b4],cl
  4140b7:	pushf  
  4140b8:	ficom  WORD PTR [ecx]
  4140ba:	je     0x414113
  4140bc:	call   0x9d3d:0xe43d7715
  4140c3:	lock out dx,al
  4140c5:	popf   
  4140c6:	mov    ds:0x19316424,al
  4140cb:	jmp    0xd942561e
  4140d0:	pop    es
  4140d1:	aaa    
  4140d2:	sbb    al,0x37
  4140d4:	in     al,dx
  4140d5:	into   
  4140d6:	cmp    al,0x6b
  4140d8:	jge    0x41413a
  4140da:	jmp    0x69fb8cdb
  4140df:	out    0xe9,al
  4140e1:	je     0x414154
  4140e3:	ss add DWORD PTR ss:[eax],edi
  4140e7:	lds    esp,FWORD PTR [edi]
  4140e9:	mov    edx,DWORD PTR [eax+0x37]
  4140ec:	mov    dl,0x40
  4140ee:	mov    cl,0x43
  4140f0:	push   0x9c72a9cb
  4140f5:	push   es
  4140f6:	inc    esp
  4140f7:	frstor [eax-0x38]
  4140fa:	daa    
  4140fb:	sti    
  4140fc:	inc    ebp
  4140fd:	not    BYTE PTR [esp+edx*2+0x2acd90c9]
  414104:	xor    esp,DWORD PTR [edi+ebp*8-0x2b]
  414108:	aas    
  414109:	(bad)  
  41410a:	xlat   BYTE PTR ds:[ebx]
  41410b:	xor    DWORD PTR cs:[esi-0x34],edx
  41410f:	out    0x6b,al
  414111:	inc    edx
  414112:	or     eax,0xf7e7fbcf
  414117:	xchg   di,ax
  414119:	inc    esp
  41411a:	push   ss
  41411b:	and    ebp,DWORD PTR [edx+0x1c]
  41411e:	aad    0x4e
  414120:	ds mov cl,0x25
  414123:	sahf   
  414124:	pop    ds
  414125:	out    dx,eax
  414126:	xchg   ecx,eax
  414127:	add    BYTE PTR [esi],cl
  414129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41412a:	ret    
  41412b:	ds mov ah,0x22
  41412e:	xchg   edi,eax
  41412f:	xor    cl,dl
  414131:	sbb    edi,DWORD PTR [edx+0x70d15cbb]
  414137:	test   al,0xab
  414139:	fst    QWORD PTR [ebp-0x1d5814b8]
  41413f:	(bad)  
  414140:	cmp    BYTE PTR fs:[esi+0x1625fcb5],al
  414147:	ret    
  414148:	mov    al,ds:0x11bca432
  41414d:	xchg   DWORD PTR [edx],ecx
  41414f:	adc    DWORD PTR [ebx+0x5f23438e],0xbac1737
  414159:	jge    0x4140f5
  41415b:	xor    eax,0xe7e2c0e
  414160:	and    edx,edi
  414162:	es dec edx
  414164:	cmp    DWORD PTR [esi+eiz*4-0x4d],edx
  414168:	call   0xd6e2f72c
  41416d:	and    BYTE PTR [eax+esi*8],0xda
  414171:	in     eax,0xf9
  414173:	stos   BYTE PTR es:[edi],al
  414174:	push   0xc624fd5c
  414179:	or     ebx,DWORD PTR [ecx]
  41417b:	inc    esp
  41417c:	pop    ds
  41417d:	mov    ds:0x2a97964c,al
  414182:	and    DWORD PTR [ecx],0xd4f81718
  414188:	mov    ecx,0x54789ab1
  41418d:	cdq    
  41418e:	mov    al,ds:0x8d14808c
  414193:	neg    BYTE PTR [edi]
  414195:	call   0x1eec572
  41419a:	inc    ebx
  41419b:	mov    edi,0xbdc83c11
  4141a0:	jae    0x4141a9
  4141a2:	mov    ecx,0xf86a409b
  4141a7:	cli    
  4141a8:	mov    edx,0x7bb5c08
  4141ad:	xchg   esi,eax
  4141ae:	jmp    0x6299:0xb0a2e4c7
  4141b5:	jle    0x4141cf
  4141b7:	and    al,0x4
  4141b9:	jg     0x4141c5
  4141bb:	pop    es
  4141bc:	into   
  4141bd:	push   esp
  4141be:	shr    BYTE PTR [edi],1
  4141c0:	xchg   DWORD PTR [eax+0xee2e073],ecx
  4141c6:	sbb    DWORD PTR [edi-0x4a0ceb74],edx
  4141cc:	push   cs
  4141cd:	stos   DWORD PTR es:[edi],eax
  4141ce:	push   0x368e39be
  4141d3:	fs cwde 
  4141d5:	mov    cl,0xf8
  4141d7:	or     BYTE PTR [ebp-0x8],al
  4141da:	mov    ebx,0xb23230cc
  4141df:	push   ebp
  4141e0:	dec    esp
  4141e1:	dec    ebx
  4141e2:	adc    ch,BYTE PTR [ebx]
  4141e4:	adc    esp,edi
  4141e6:	loopne 0x4141fd
  4141e8:	cmp    eax,0xc87a33bb
  4141ed:	lods   eax,DWORD PTR ds:[esi]
  4141ee:	mov    ch,0xf7
  4141f0:	mov    eax,ds:0xc4261eb5
  4141f5:	pop    es
  4141f6:	and    edx,DWORD PTR ds:0x1a479071
  4141fc:	dec    edx
  4141fd:	retf   0x847a
  414200:	sbb    eax,DWORD PTR [edi+ebx*2+0x5456c45b]
  414207:	xchg   DWORD PTR [eax+0x6d],esi
  41420a:	(bad)  
  41420c:	jmp    0x4141e5
  41420e:	aad    0x6d
  414210:	xor    ebp,eax
  414212:	or     eax,DWORD PTR [ebx]
  414214:	fwait
  414215:	mov    dh,0x2b
  414217:	sub    ch,cl
  414219:	sbb    DWORD PTR [ecx],eax
  41421b:	xlat   BYTE PTR ds:[ebx]
  41421c:	pushf  
  41421d:	ja     0x4141a1
  41421f:	rcr    DWORD PTR [eax],1
  414221:	adc    eax,0xd29c1e79
  414226:	sbb    DWORD PTR [edx],0xffffffb4
  414229:	lds    ebx,FWORD PTR [ecx-0x3b]
  41422c:	fs jge 0x41429b
  41422f:	fwait
  414230:	inc    esi
  414231:	jl     0x4141ba
  414233:	jmp    0x3088063f
  414238:	dec    edi
  414239:	arpl   WORD PTR [edi+0x788fedc6],cx
  41423f:	ja     0x4141cd
  414241:	pop    ds
  414242:	pop    edx
  414243:	imul   ebp,DWORD PTR [ecx-0x45],0x3d7e64ed
  41424a:	cmp    DWORD PTR [ecx],ecx
  41424c:	popf   
  41424d:	std    
  41424e:	jae    0x41422b
  414250:	add    eax,0x13843d8a
  414255:	push   0x5b
  414257:	pop    edx
  414258:	mov    ch,0xdd
  41425a:	sbb    BYTE PTR [esi+0x6f],0xdd
  41425e:	cs cwde 
  414260:	in     eax,0xda
  414262:	iret   
  414263:	sub    BYTE PTR [edx-0x2d1e94c],cl
  414269:	repnz add BYTE PTR [eax],ch
  41426c:	dec    ebp
  41426d:	jg     0x41426f
  41426f:	sub    al,0xb5
  414271:	xchg   ebp,eax
  414272:	aaa    
  414273:	push   ecx
  414274:	loopne 0x414231
  414276:	mov    dh,0xe5
  414278:	jecxz  0x4142e4
  41427a:	jns    0x41420a
  41427c:	dec    ebp
  41427d:	icebp  
  41427e:	xlat   BYTE PTR ds:[ebx]
  41427f:	call   0x4ca3:0x3e8dd49c
  414286:	push   cs
  414287:	push   0xffffff9f
  414289:	fwait
  41428a:	iret   
  41428b:	pop    esp
  41428c:	bound  ebx,QWORD PTR [esi-0x2728c4b0]
  414292:	aaa    
  414293:	mov    eax,ds:0xf9290023
  414298:	out    dx,al
  414299:	push   ds
  41429a:	sbb    ch,BYTE PTR [ebx]
  41429c:	or     eax,0x30e8b3df
  4142a1:	jne    0x4142b4
  4142a3:	stos   BYTE PTR es:[edi],al
  4142a4:	jmp    0x17ca:0xdae37e99
  4142ab:	push   ebp
  4142ac:	shl    BYTE PTR [ecx-0x42],cl
  4142af:	sbb    eax,0xc79c17af
  4142b4:	mov    dh,0x44
  4142b6:	sub    ah,cl
  4142b8:	(bad)  
  4142b9:	out    0xca,eax
  4142bb:	in     al,0x90
  4142bd:	and    ch,BYTE PTR ds:[ebx-0x1]
  4142c1:	lds    esp,FWORD PTR [ebx-0x47]
  4142c4:	push   cs
  4142c5:	bswap  ebx
  4142c7:	rdmsr  
  4142c9:	or     BYTE PTR [edi],0x9c
  4142cc:	adc    eax,0xc99c6b44
  4142d1:	xlat   BYTE PTR ds:[ebx]
  4142d2:	lods   al,BYTE PTR ds:[esi]
  4142d3:	bound  eax,QWORD PTR [eax]
  4142d5:	mov    esp,esi
  4142d7:	sub    BYTE PTR [edx],dl
  4142d9:	std    
  4142da:	or     edi,0xffffffac
  4142dd:	mov    ebp,0xab49bd19
  4142e2:	push   ecx
  4142e3:	mov    eax,0xf49d6dad
  4142e8:	and    dl,bl
  4142ea:	and    edx,DWORD PTR [ecx+0x7d2ff634]
  4142f0:	clc    
  4142f1:	sbb    eax,0x2457fa8e
  4142f6:	mov    BYTE PTR [eax],ah
  4142f8:	cdq    
  4142f9:	cmp    BYTE PTR [ebx-0x5f],dh
  4142fc:	fcom   DWORD PTR [edi+0x37]
  4142ff:	es and cl,dh
  414302:	jge    0x4142b8
  414304:	or     BYTE PTR [ebp+0x1053d9af],al
  41430a:	pop    ecx
  41430b:	fs xchg ecx,eax
  41430d:	cmp    BYTE PTR [ecx+0x2],ah
  414310:	dec    ecx
  414311:	and    eax,0xabfdd0b1
  414316:	popf   
  414317:	cmp    ah,BYTE PTR [edi]
  414319:	add    esp,DWORD PTR [eax]
  41431b:	and    ah,BYTE PTR [edi]
  41431d:	cmp    eax,0x42f032e3
  414322:	mov    ebp,0x7e8f9c2
  414327:	cmc    
  414328:	adc    eax,ecx
  41432a:	je     0x414317
  41432c:	icebp  
  41432d:	ds push eax
  41432f:	dec    edx
  414330:	xor    DWORD PTR [edx],0xffffff81
  414333:	sbb    ah,BYTE PTR [ecx+0x25c0300f]
  414339:	retf   
  41433a:	fidiv  DWORD PTR [edx+ecx*1+0x48]
  41433e:	stos   DWORD PTR es:[edi],eax
  41433f:	test   DWORD PTR [esi+esi*8-0x1ec4dcf6],edi
  414346:	aad    0x57
  414348:	std    
  414349:	xchg   DWORD PTR [ebp+eiz*4+0x6e6a72dd],esi
  414350:	repnz out 0x6f,al
  414353:	mov    dh,0xbb
  414355:	pushf  
  414356:	adc    BYTE PTR [edx+0x2d],0xc6
  41435a:	cmc    
  41435b:	xor    eax,0x7572f4da
  414360:	jns    0x4143b1
  414362:	(bad)  [ebx-0x516de37d]
  414368:	dec    ecx
  414369:	sbb    esp,esp
  41436b:	jb     0x4143d9
  41436d:	cmp    eax,0xf9f4c8b6
  414372:	push   esi
  414373:	mov    BYTE PTR [edx+0x3e5b2df5],ch
  414379:	aas    
  41437a:	scas   eax,DWORD PTR es:[edi]
  41437b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437c:	loopne 0x41436e
  41437e:	fdivp  st(4),st
  414380:	xor    cl,BYTE PTR [esp+edx*1]
  414383:	mov    bl,0x7e
  414385:	cmp    ecx,DWORD PTR [edx]
  414387:	jp     0x41430b
  414389:	add    BYTE PTR [edx+0x73013cf7],bh
  41438f:	aaa    
  414390:	mov    esp,0x241ebd10
  414395:	or     esp,DWORD PTR [eax+0x18]
  414398:	mov    ah,0x26
  41439a:	popa   
  41439b:	sub    eax,0xe91cee80
  4143a0:	mov    ds:0x5549aed6,al
  4143a5:	int    0x3c
  4143a7:	adc    BYTE PTR [edi+0x69],al
  4143aa:	lods   eax,DWORD PTR ds:[esi]
  4143ab:	ds (bad) 
  4143ad:	xchg   edx,eax
  4143ae:	bound  ebp,QWORD PTR [edx+0x15]
  4143b1:	(bad)  
  4143b2:	stc    
  4143b3:	jne    0x414336
  4143b5:	daa    
  4143b6:	into   
  4143b7:	cwde   
  4143b8:	adc    dh,BYTE PTR [ecx+0x322296e9]
  4143be:	clc    
  4143bf:	cld    
  4143c0:	int    0xf
  4143c2:	jne    0x414356
  4143c4:	repnz sbb eax,0xc4913fc5
  4143cb:	mov    dh,0x8
  4143cd:	push   0xec4b51b0
  4143d2:	add    bl,BYTE PTR [edx-0x4c]
  4143d5:	push   edi
  4143d6:	fild   DWORD PTR [eax+0x73963345]
  4143dc:	out    0x68,eax
  4143de:	dec    esp
  4143df:	mov    ebp,DWORD PTR [edi-0x188b2a5c]
  4143e5:	sbb    DWORD PTR [edx+0x6],ebx
  4143e8:	or     eax,0x99199f29
  4143ed:	mov    ebp,0xb7a5e2f6
  4143f2:	push   ebp
  4143f3:	cmp    ah,BYTE PTR [edx+ecx*1+0x24]
  4143f7:	fcomp  st(1)
  4143f9:	loope  0x414460
  4143fb:	enter  0x887b,0xf5
  4143ff:	cmp    eax,0x154dc410
  414404:	jns    0x4143c5
  414406:	mov    edx,DWORD PTR [esi]
  414408:	enter  0xc164,0x73
  41440c:	dec    ecx
  41440d:	loop   0x4143ec
  41440f:	pusha  
  414410:	adc    BYTE PTR [edx],bh
  414412:	pushf  
  414413:	add    al,0xeb
  414415:	adc    al,0x30
  414417:	outs   dx,BYTE PTR ds:[esi]
  414418:	rcr    DWORD PTR [edx],1
  41441a:	aaa    
  41441b:	xchg   edx,eax
  41441c:	popa   
  41441d:	mov    bl,0x3a
  41441f:	inc    esp
  414420:	jnp    0x4143d7
  414422:	sub    al,0x7c
  414424:	sahf   
  414425:	xchg   ebx,eax
  414426:	mov    eax,ds:0x94ef8584
  41442b:	mov    al,ds:0xbb497bb6
  414430:	xlat   BYTE PTR ds:[ebx]
  414431:	adc    bl,BYTE PTR [ecx-0x38078fc4]
  414437:	(bad)  [edi-0x27]
  41443a:	ja     0x4143e9
  41443c:	mov    bl,0x65
  41443e:	mov    esi,0x254c6f20
  414443:	nop
  414444:	mov    ah,0x67
  414446:	pop    es
  414447:	mov    edx,0x4fe3784
  41444c:	mov    ecx,0xcc072349
  414451:	mov    dh,0xf0
  414453:	or     BYTE PTR [edx-0x44],cl
  414456:	push   ebx
  414457:	xchg   ecx,eax
  414458:	and    al,0x83
  41445a:	(bad)  
  41445c:	sbb    DWORD PTR [ecx+0x6d3377b7],0x789e725f
  414466:	mov    eax,ds:0xf14c45ba
  41446b:	loopne 0x41449c
  41446d:	in     eax,0x89
  41446f:	adc    al,0x3d
  414471:	(bad)  
  414473:	sbb    DWORD PTR [esi],ecx
  414475:	push   esi
  414476:	mov    ah,0x89
  414478:	test   BYTE PTR [edi+0x22],cl
  41447b:	ror    esp,0x4d
  41447e:	pop    eax
  41447f:	push   ds
  414480:	inc    ebx
  414481:	imul   eax,DWORD PTR [ebx-0x69],0xffffffef
  414485:	daa    
  414486:	call   0x77a0:0xa0976b44
  41448d:	lds    ebp,FWORD PTR [edx]
  41448f:	or     al,0xf7
  414491:	inc    edi
  414492:	dec    esp
  414493:	mov    ah,0xdb
  414495:	adc    dh,ah
  414497:	scas   al,BYTE PTR es:[edi]
  414498:	bound  ecx,QWORD PTR [esi+0x37fc8cd3]
  41449e:	in     al,dx
  41449f:	cmp    bl,dl
  4144a1:	pop    ebp
  4144a2:	iret   
  4144a3:	jnp    0x414512
  4144a5:	xor    eax,0xac2950b9
  4144aa:	retf   
  4144ab:	mov    DWORD PTR [edi+0x107439e4],eax
  4144b1:	or     dl,BYTE PTR [eax+0x12]
  4144b4:	mov    ecx,0x14f0b7f7
  4144b9:	jns    0x4144d8
  4144bb:	adc    ebp,esi
  4144bd:	mov    ecx,0xb0dfdf5
  4144c2:	xchg   edi,eax
  4144c3:	or     eax,0xed8df3bb
  4144c8:	sbb    BYTE PTR [eax],0xe4
  4144cb:	add    esp,DWORD PTR [edx]
  4144cd:	repz dec edx
  4144cf:	mov    ah,0xb5
  4144d1:	sub    eax,0x5462ed0d
  4144d6:	sub    eax,0xd611e4b
  4144db:	xor    al,0xca
  4144dd:	setg   BYTE PTR [eax-0x1d522d33]
  4144e4:	repnz (bad) [ecx+edx*8-0x17292c24]
  4144ec:	sub    DWORD PTR [ebx],edi
  4144ee:	fimul  DWORD PTR [ebp-0x5]
  4144f1:	repnz add bl,BYTE PTR [eax-0x53]
  4144f5:	adc    BYTE PTR [esi],0x8a
  4144f8:	call   0xaf5eb215
  4144fd:	and    dh,ch
  4144ff:	add    DWORD PTR [ebx-0x4261b61e],ebp
  414505:	dec    esi
  414506:	fucomp st(7)
  414508:	test   cl,bl
  41450a:	xor    eax,0x8d93aacd
  41450f:	mov    ah,0x36
  414511:	les    edi,FWORD PTR [edi+0x648152c9]
  414517:	mov    eax,0x9820a01
  41451c:	add    edx,DWORD PTR [edi+0x202eddda]
  414522:	cmp    edi,DWORD PTR [edi+0x18e652ae]
  414528:	shr    BYTE PTR [esi-0x64],1
  41452b:	mov    ch,0x0
  41452d:	(bad)  
  41452e:	mul    edi
  414530:	pop    eax
  414531:	test   eax,0x2a4f20ac
  414536:	test   DWORD PTR [edx+0x11],eax
  414539:	cmp    DWORD PTR [esi-0x4b],edx
  41453c:	jo     0x414518
  41453e:	cld    
  41453f:	(bad)  
  414540:	sbb    ch,0x24
  414543:	xchg   BYTE PTR [ecx-0x52eaa77d],al
  414549:	jns    0x4145b4
  41454b:	or     eax,edx
  41454d:	mov    edx,0xe6ca0385
  414552:	pusha  
  414553:	dec    edx
  414554:	cmc    
  414555:	fsin   
  414557:	xchg   esp,eax
  414558:	imul   edx,DWORD PTR [ecx],0x30
  41455b:	ja     0x4145c6
  41455d:	iret   
  41455e:	pop    esi
  41455f:	out    0xc9,al
  414561:	fsubr  QWORD PTR ds:0xd4f843f
  414568:	(bad)  
  414569:	xchg   edi,eax
  41456a:	jo     0x414570
  41456c:	loope  0x41453b
  41456e:	mov    ch,0x22
  414570:	sub    BYTE PTR [ebx-0x2c],cl
  414573:	dec    eax
  414574:	xor    DWORD PTR [esi-0x63151c60],0x6a70c69d
  41457e:	push   eax
  41457f:	sti    
  414580:	add    al,0xbf
  414582:	rcr    BYTE PTR [ebp+0x7c59e92b],cl
  414588:	mov    al,BYTE PTR [edx-0x30c5ddb7]
  41458e:	pop    eax
  41458f:	cmp    ecx,DWORD PTR [edi]
  414591:	aad    0x39
  414593:	fist   DWORD PTR [edi+0x7b]
  414596:	jle    0x414544
  414598:	xor    al,0x49
  41459a:	push   edi
  41459b:	pushf  
  41459c:	sahf   
  41459d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41459e:	inc    edx
  41459f:	and    ebp,DWORD PTR [ecx+ebx*4-0x4cd3ea2]
  4145a6:	xchg   edi,eax
  4145a7:	lock mov ebx,0xaef72672
  4145ad:	outs   dx,DWORD PTR ds:[esi]
  4145ae:	push   esi
  4145af:	call   0x67ea:0x66b10498
  4145b6:	push   ebp
  4145b7:	aam    0xe3
  4145b9:	das    
  4145ba:	(bad)  
  4145bb:	xchg   edx,eax
  4145bc:	es xchg ebx,eax
  4145be:	(bad)  
  4145bf:	call   0xb6b1:0xa4a99bed
  4145c6:	aam    0xb2
  4145c8:	ins    BYTE PTR es:[edi],dx
  4145c9:	(bad)  
  4145ca:	loop   0x41461e
  4145cc:	xchg   DWORD PTR [edx+0x685667be],ecx
  4145d2:	sbb    DWORD PTR [ebx-0x6f4efd7e],0x1f42509a
  4145dc:	sub    eax,0xa83eb452
  4145e1:	pop    esi
  4145e2:	hlt    
  4145e3:	fnsave [ebp+0x7f]
  4145e6:	sbb    al,0x3b
  4145e8:	(bad)  
  4145e9:	aas    
  4145ea:	icebp  
  4145eb:	mov    gs,esp
  4145ed:	ror    DWORD PTR [ecx],1
  4145ef:	dec    ecx
  4145f0:	sub    al,0x8b
  4145f2:	std    
  4145f3:	jle    0x41459d
  4145f5:	daa    
  4145f6:	ins    BYTE PTR es:[edi],dx
  4145f7:	outs   dx,BYTE PTR ds:[esi]
  4145f8:	lock out 0x83,eax
  4145fb:	call   0xf5e5:0xd61e1e24
  414602:	sub    al,0x7d
  414604:	lods   eax,DWORD PTR ds:[esi]
  414605:	sbb    esi,eax
  414607:	(bad)  
  414608:	scas   eax,DWORD PTR es:[edi]
  414609:	sbb    dl,al
  41460b:	int3   
  41460c:	mov    bh,0x2
  41460e:	retf   0x3732
  414611:	mov    ds,WORD PTR [edx]
  414613:	leave  
  414614:	cmp    bh,dh
  414616:	cs jge 0x414627
  414619:	jmp    0xc22a:0x4fe26590
  414620:	xchg   esp,eax
  414621:	pushf  
  414622:	in     al,dx
  414623:	dec    edi
  414624:	adc    al,0x18
  414626:	in     al,dx
  414627:	mov    DWORD PTR [esi],esi
  414629:	sti    
  41462a:	(bad)  
  41462b:	and    al,0xb7
  41462d:	adc    eax,0x54337c00
  414632:	icebp  
  414633:	cwde   
  414634:	sbb    al,0x26
  414636:	loopne 0x4145d5
  414638:	or     al,0x73
  41463a:	push   si
  41463c:	pop    eax
  41463d:	(bad)  
  41463e:	rol    ebp,1
  414640:	mov    esp,0x6663278d
  414645:	mov    bh,0x45
  414647:	or     DWORD PTR [ebp-0x6e],ecx
  41464a:	xchg   esi,eax
  41464b:	adc    DWORD PTR [edx],edx
  41464d:	fisubr DWORD PTR [edx+0x647f5abe]
  414653:	dec    esi
  414654:	or     eax,0xeb2d916d
  414659:	or     DWORD PTR [ebx+edi*8-0x1a],esp
  41465d:	dec    edi
  41465e:	jmp    0x414664
  414660:	jnp    0x4145fa
  414662:	or     al,BYTE PTR [ebp+0x78bcefe6]
  414668:	shrd   DWORD PTR [edx],edi,0xfb
  41466c:	ss add al,ah
  41466f:	out    dx,al
  414670:	ret    
  414671:	sub    eax,0x509b68e4
  414676:	in     eax,dx
  414677:	jge    0x4146ae
  414679:	mov    ds:0x49983489,eax
  41467e:	jne    0x41463d
  414680:	mov    ebp,0x34eb69e
  414685:	cmp    cl,BYTE PTR [ebx+ecx*1+0x3]
  414689:	or     al,al
  41468b:	xchg   ebx,eax
  41468c:	mov    WORD PTR [ebp+0x6a34e06a],fs
  414692:	push   0x55fedea8
  414697:	fnstcw WORD PTR [edi-0x37]
  41469a:	dec    esi
  41469b:	repnz retf 0xeaf9
  41469f:	fmul   QWORD PTR [edi+0x177e4c5b]
  4146a5:	mov    BYTE PTR [ecx+esi*4],bl
  4146a8:	ret    0xdc1e
  4146ab:	arpl   WORD PTR [esi+0x16],cx
  4146ae:	lods   al,BYTE PTR ds:[esi]
  4146af:	test   DWORD PTR [eax+0x5c],ebp
  4146b2:	test   BYTE PTR [esi+0x368e11bd],ch
  4146b8:	test   DWORD PTR [ecx-0x80],0x7151b08d
  4146bf:	icebp  
  4146c0:	data16 or BYTE PTR [edx],dl
  4146c3:	or     eax,0x3b91de03
  4146c8:	daa    
  4146c9:	xor    ebx,DWORD PTR ds:0x157295a9
  4146cf:	mov    bh,0x74
  4146d1:	call   ebp
  4146d3:	mov    ebp,0x5529c03e
  4146d8:	fst    DWORD PTR [esi]
  4146da:	pop    edx
  4146db:	fidivr WORD PTR [esi+0x4f29dec1]
  4146e1:	or     esp,DWORD PTR [edi-0x692042e5]
  4146e7:	call   0xbf32:0xb4c403fd
  4146ee:	sub    BYTE PTR [ebx-0xceee4c4],bl
  4146f4:	jp     0x414727
  4146f6:	addr16 repz out 0x46,eax
  4146fa:	pop    ebx
  4146fb:	xchg   esp,eax
  4146fc:	xor    DWORD PTR [esi-0x6a],esp
  4146ff:	das    
  414700:	inc    edi
  414701:	mov    cl,0x2
  414703:	gs mov al,0x73
  414706:	fadd   DWORD PTR [edx+0x75]
  414709:	xchg   esi,eax
  41470a:	jb     0x414758
  41470c:	and    eax,0x84b8cc10
  414711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414712:	fucom  st(3)
  414714:	and    DWORD PTR [eax-0x520fb431],esi
  41471a:	add    DWORD PTR [edi+0x3f41a0b1],ebp
  414720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414721:	jp     0x4146ca
  414723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414724:	mov    eax,fs
  414726:	xchg   esi,eax
  414727:	pop    ebp
  414728:	stos   DWORD PTR es:[edi],eax
  414729:	sbb    esp,DWORD PTR [edx+0x2c69364c]
  41472f:	out    0x33,eax
  414731:	out    dx,al
  414732:	jb     0x414783
  414734:	scas   al,BYTE PTR es:[edi]
  414735:	bound  esi,QWORD PTR [ecx-0x59]
  414738:	mov    ecx,0x11052c59
  41473d:	test   DWORD PTR [ecx],eax
  41473f:	enter  0x319f,0x11
  414743:	add    DWORD PTR [eax+0x3013112],ecx
  414749:	popf   
  41474a:	xchg   edi,eax
  41474b:	mov    edx,0x7d9491af
  414750:	push   esp
  414751:	jb     0x414726
  414753:	aaa    
  414754:	lahf   
  414755:	add    al,0xc5
  414757:	jg     0x414789
  414759:	pop    ebx
  41475a:	or     al,0x65
  41475c:	fdivr  st(3),st
  41475e:	mov    edx,0x48af0927
  414763:	mov    eax,ds:0x7e8d73bf
  414768:	jg     0x4147dd
  41476a:	jbe    0x41475c
  41476c:	(bad)  
  41476d:	mov    eax,0xd55b885f
  414772:	retf   
  414773:	mov    ebp,0x83670d8
  414778:	jmp    0x4147c1
  41477a:	(bad)  
  41477b:	in     eax,dx
  41477c:	xchg   ebx,eax
  41477d:	scas   eax,DWORD PTR es:[edi]
  41477e:	xchg   edi,eax
  41477f:	pslld  mm5,QWORD PTR [ebp-0x68]
  414783:	mov    edx,0x68fd4d64
  414788:	and    BYTE PTR [ebx],dl
  41478a:	jg     0x414721
  41478c:	and    al,0x5b
  41478e:	push   esp
  41478f:	jno    0x41474d
  414791:	jnp    0x4147ab
  414793:	dec    edx
  414794:	jo     0x4147ef
  414796:	jge    0x41479c
  414798:	aad    0x89
  41479a:	loope  0x41476e
  41479c:	and    DWORD PTR [ebx],ebx
  41479e:	push   esi
  41479f:	mov    ds:0x27e73d18,eax
  4147a4:	xchg   DWORD PTR [ebp-0x72],esp
  4147a7:	clc    
  4147a8:	popf   
  4147a9:	mov    cl,0xb4
  4147ab:	pop    ebp
  4147ac:	and    bl,BYTE PTR [edx-0x24]
  4147af:	lea    esp,[edi-0x337c9b5]
  4147b5:	cdq    
  4147b6:	push   edi
  4147b7:	jae    0x414814
  4147b9:	adc    eax,0x4a3ff727
  4147be:	sahf   
  4147bf:	sub    eax,0x3dfd84a4
  4147c4:	aam    0x6e
  4147c6:	leave  
  4147c7:	cwde   
  4147c8:	imul   al
  4147ca:	mov    ebp,0x2d3f5e65
  4147cf:	out    dx,eax
  4147d0:	xchg   edx,eax
  4147d1:	cdq    
  4147d2:	test   cl,0xa6
  4147d5:	pop    esi
  4147d6:	retf   0x91e1
  4147d9:	dec    ecx
  4147da:	addr16 bnd jp 0x414771
  4147de:	push   ecx
  4147df:	and    al,0x9a
  4147e1:	cmp    eax,0x36955996
  4147e6:	add    esp,DWORD PTR gs:0x931813af
  4147ed:	pop    ebp
  4147ee:	xlat   BYTE PTR ds:[ebx]
  4147ef:	mov    ecx,0xba609528
  4147f4:	(bad)  
  4147f6:	ficom  WORD PTR [edx+0x13]
  4147f9:	ret    
  4147fa:	imul   ebp,DWORD PTR [edi],0xffffff9d
  4147fd:	(bad)  
  4147fe:	mov    ah,BYTE PTR [ebx-0x7a]
  414801:	retf   
  414802:	sbb    eax,0xe1100508
  414807:	push   cs
  414808:	or     bl,al
  41480a:	jmp    0x41487f
  41480c:	jbe    0x4147bd
  41480e:	pop    ecx
  41480f:	or     edx,ebx
  414811:	mov    al,0x14
  414813:	fwait
  414814:	cmp    BYTE PTR [ebx],ch
  414816:	mov    edi,esi
  414818:	fstp   TBYTE PTR [edi+0x5c]
  41481b:	lods   al,BYTE PTR ds:[esi]
  41481c:	gs ds scas al,BYTE PTR es:[edi]
  41481f:	adc    eax,esp
  414821:	xchg   edi,eax
  414822:	inc    ebx
  414823:	xchg   esp,eax
  414824:	fiadd  DWORD PTR ds:[eax]
  414827:	int3   
  414828:	test   DWORD PTR [ecx-0x489ab803],ebx
  41482e:	mov    edi,0xb028e97c
  414833:	or     cl,ah
  414835:	push   eax
  414836:	add    edi,DWORD PTR [esp+ebp*2-0x5a]
  41483a:	push   0x3a
  41483c:	adc    al,0x38
  41483e:	add    al,0x31
  414840:	mov    al,BYTE PTR [ebx-0x174f47f2]
  414846:	mov    ebp,0x66ceb164
  41484b:	cwde   
  41484c:	(bad)  
  41484d:	aas    
  41484e:	int3   
  41484f:	ja     0x414802
  414851:	lock xor dh,dh
  414854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414855:	out    dx,eax
  414856:	retf   
  414857:	and    esp,DWORD PTR [edi+0x31]
  41485a:	xor    dh,BYTE PTR [ebp+0x53e8148d]
  414860:	in     eax,dx
  414861:	mov    bl,0x2e
  414863:	sbb    eax,0x6b1467f7
  414868:	xchg   esp,eax
  414869:	mov    ebp,0xcae4fbe8
  41486e:	nop
  41486f:	std    
  414870:	cmp    bl,dl
  414872:	rol    DWORD PTR [esp+eax*8+0x56],1
  414876:	mov    cs,WORD PTR [ebx]
  414878:	sahf   
  414879:	mov    edi,0xf32e25cd
  41487e:	adc    cl,BYTE PTR [ebp+0x42]
  414881:	xchg   BYTE PTR [edx+0x2a],ah
  414884:	out    0xf0,al
  414886:	retf   
  414887:	xor    ebx,esi
  414889:	lock jno 0x414827
  41488c:	mov    esi,0x100f737c
  414891:	push   esp
  414892:	jns    0x414825
  414894:	pop    ecx
  414895:	dec    ebx
  414896:	mov    bh,0x6c
  414898:	inc    esi
  414899:	add    ch,BYTE PTR [edi]
  41489b:	mov    ecx,0x1f057ae7
  4148a0:	mov    ebx,0xbce3b4ac
  4148a5:	mov    ds:0x5b09cde,al
  4148aa:	mov    DWORD PTR [eax+eiz*4],0x9a4f6984
  4148b1:	int3   
  4148b2:	(bad)  
  4148b3:	loopne 0x414907
  4148b5:	pop    ebx
  4148b6:	bnd ret 
  4148b8:	scas   eax,DWORD PTR es:[edi]
  4148b9:	dec    esi
  4148ba:	fwait
  4148bb:	xor    eax,0xc5a8711b
  4148c0:	xor    al,0xae
  4148c2:	xchg   ebp,eax
  4148c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148c4:	or     eax,0x2004fb32
  4148c9:	adc    BYTE PTR [edi],bl
  4148cb:	mov    ds,ecx
  4148cd:	sbb    esp,DWORD PTR [ebp+0x6d699329]
  4148d3:	xor    BYTE PTR [esi-0x363b9aaa],dl
  4148d9:	lahf   
  4148da:	adc    eax,ebp
  4148dc:	out    0x9b,al
  4148de:	inc    esp
  4148df:	pop    esi
  4148e0:	in     eax,dx
  4148e1:	out    0xb1,al
  4148e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e4:	xor    BYTE PTR [eiz*4+0x50ecb1a4],0x69
  4148ec:	int    0xfc
  4148ee:	mov    edi,0x248b8841
  4148f3:	loope  0x4148c3
  4148f5:	sub    al,0x89
  4148f7:	and    DWORD PTR [ebp-0x28],0xe1e41040
  4148fe:	jle    0x4148cb
  414900:	inc    esp
  414901:	mov    eax,ds:0x6de7983c
  414906:	cmp    DWORD PTR ss:[eax+edx*2],ebp
  41490a:	mov    dl,0x8f
  41490c:	outs   dx,DWORD PTR ds:[esi]
  41490d:	cmp    ecx,edi
  41490f:	gs loopne 0x41493d
  414912:	inc    edi
  414913:	mov    al,0xf5
  414915:	out    dx,al
  414916:	outs   dx,BYTE PTR ds:[esi]
  414917:	jbe    0x41498c
  414919:	jp     0x414962
  41491b:	add    dh,BYTE PTR [edx+ebx*1+0x7d88b9dd]
  414922:	ds jecxz 0x414997
  414925:	mov    bl,0x58
  414927:	imul   edx,edi,0xffffff9d
  41492a:	and    eax,0xd765261e
  41492f:	lds    ebp,FWORD PTR [ecx+0x6]
  414932:	dec    ebx
  414933:	retf   
  414934:	leave  
  414935:	adc    DWORD PTR [esi-0x215b3c33],ecx
  41493b:	std    
  41493c:	cmp    DWORD PTR [edi-0x674d641a],eax
  414942:	test   DWORD PTR [esi],eax
  414944:	mov    dh,0xc6
  414946:	call   0x5257e4cf
  41494b:	jg     0x414920
  41494d:	inc    edi
  41494e:	test   al,0x93
  414950:	fnstcw WORD PTR [ecx-0x4]
  414953:	cmp    edi,DWORD PTR [edi-0x2d3e33fa]
  414959:	mov    ebx,0xfd388e11
  41495e:	enter  0xb468,0x50
  414962:	xchg   esp,eax
  414963:	das    
  414964:	daa    
  414965:	(bad)  
  414966:	pusha  
  414967:	call   0x1d83:0x20b5c869
  41496e:	ins    DWORD PTR es:[edi],dx
  41496f:	inc    eax
  414970:	xchg   DWORD PTR [eax-0x6e],ebp
  414973:	inc    esp
  414974:	fs pushf 
  414976:	adc    edi,DWORD PTR [edi+0x466fc217]
  41497c:	dec    edi
  41497d:	nop
  41497e:	inc    ebp
  41497f:	dec    edx
  414980:	xchg   esp,eax
  414981:	inc    edi
  414982:	jp     0x414906
  414984:	dec    esi
  414985:	push   0xffffff92
  414987:	hlt    
  414988:	shr    esp,cl
  41498a:	aaa    
  41498b:	cmp    BYTE PTR [ebx],ah
  41498d:	mov    ch,0x89
  41498f:	pop    esi
  414990:	retf   
  414991:	rcr    BYTE PTR [esi+0x47],1
  414994:	sbb    BYTE PTR [eax*1-0x446b7d9e],ch
  41499b:	aam    0xab
  41499d:	sbb    al,0x64
  41499f:	mov    esi,0xf925e19
  4149a4:	loop   0x414a1b
  4149a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a7:	ret    0xc222
  4149aa:	add    eax,esp
  4149ac:	pushf  
  4149ad:	mov    DWORD PTR [ebp+0x8],edx
  4149b0:	jmp    0x414a25
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	add    al,0x81
  414b8a:	pop    ecx
  414b8b:	add    bh,bh
  414b8d:	add    BYTE PTR [bp+di+0x5c17],0x83
  414b93:	sbb    eax,0xfffffffc
  414b96:	push   ecx
  414b97:	test   ebp,esp
  414b99:	or     ch,bh
  414b9b:	ror    BYTE PTR [eax],cl
  414b9d:	or     al,0x8
  414b9f:	in     eax,0x3f
  414ba1:	and    DWORD PTR [edi],ebx
  414ba3:	das    
  414ba4:	loopne 0x414b61
  414ba6:	and    cl,BYTE PTR [edx+0x59]
  414ba9:	push   ss
  414baa:	fisub  DWORD PTR [ecx]
  414bac:	xor    esp,DWORD PTR [eax]
  414bae:	and    ebp,ebp
  414bb0:	aad    0xe0
  414bb2:	adc    edi,DWORD PTR [ebp-0xcc595d0]
  414bb8:	mov    eax,0x591b0e86
  414bbd:	mov    al,ds:0xb8e2427a
  414bc2:	dec    ebp
  414bc3:	mov    eax,0xcc8c9aa4
  414bc8:	push   edi
  414bc9:	push   cs
  414bca:	clc    
  414bcb:	(bad)  
  414bcc:	push   edi
  414bcd:	cwde   
  414bce:	enter  0xcbbc,0x77
  414bd2:	call   0x70bc:0x1cf44c2d
  414bd9:	pop    ds
  414bda:	mov    bl,0x55
  414bdc:	cmp    al,0x61
  414bde:	cmp    DWORD PTR [ebx+ebp*1+0x2],ebx
  414be2:	push   edx
  414be3:	sub    DWORD PTR [edx],ebp
  414be5:	out    dx,al
  414be6:	inc    esp
  414be7:	jbe    0x414c1b
  414be9:	dec    cl
  414beb:	dec    edx
  414bec:	sub    BYTE PTR [esi],bl
  414bee:	cmc    
  414bef:	and    al,0xa5
  414bf1:	sbb    ch,BYTE PTR [ecx-0x12]
  414bf4:	and    DWORD PTR [esi-0xac0dfd8],eax
  414bfa:	mov    edi,0x862a6d29
  414bff:	sub    bl,al
  414c01:	mov    eax,0x233220e1
  414c06:	pop    ds
  414c07:	push   0xfffffffb
  414c09:	inc    eax
  414c0a:	add    al,0x86
  414c0c:	lahf   
  414c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c0e:	push   eax
  414c0f:	xor    al,0x39
  414c12:	icebp  
  414c13:	cdq    
  414c14:	xchg   edx,eax
  414c15:	mov    dh,0x33
  414c17:	mov    dh,0xa4
  414c19:	pop    es
  414c1a:	sahf   
  414c1b:	jmp    0x414c5f
  414c1d:	mov    ebp,es
  414c1f:	pop    ebx
  414c20:	or     dh,BYTE PTR [ecx+0x10]
  414c23:	cmp    bl,BYTE PTR [edx]
  414c25:	sbb    al,0xc7
  414c27:	push   0x4d
  414c29:	stos   DWORD PTR es:[edi],eax
  414c2a:	mov    ?,WORD PTR ss:[ecx-0x60f0d8a]
  414c31:	loope  0x414c06
  414c33:	cdq    
  414c34:	jge    0x414c38
  414c36:	imul   esp,eax,0xc7f03399
  414c3c:	jp     0x414c77
  414c3e:	call   0xd898:0xb547d425
  414c45:	and    DWORD PTR [esi+eax*4-0x52bfc249],ecx
  414c4c:	inc    edi
  414c4d:	lock fdivr QWORD PTR [edx]
  414c50:	cld    
  414c51:	imul   ebp,DWORD PTR [eax],0xffffffda
  414c54:	pop    esp
  414c55:	ds std 
  414c57:	mov    cl,cl
  414c59:	popf   
  414c5a:	sub    DWORD PTR [ecx+0x57b0e301],0xb978e90a
  414c64:	sti    
  414c65:	in     eax,dx
  414c66:	or     BYTE PTR [edx-0x1a],ah
  414c69:	mov    eax,0x82f924f
  414c6e:	sahf   
  414c6f:	test   eax,0x44f65e70
  414c75:	popa   
  414c76:	xchg   esp,eax
  414c77:	fdivr  QWORD PTR [esi-0x21]
  414c7a:	aad    0x1b
  414c7c:	lock in al,0xd2
  414c7f:	std    
  414c80:	push   eax
  414c81:	dec    ebp
  414c82:	dec    esp
  414c83:	lods   eax,DWORD PTR ds:[esi]
  414c84:	add    DWORD PTR [edi],eax
  414c86:	xchg   edi,eax
  414c87:	sub    al,0xec
  414c89:	or     edx,edx
  414c8b:	mov    bl,0x58
  414c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c8e:	repnz dec edx
  414c90:	inc    esp
  414c91:	xchg   esp,esp
  414c93:	lock mov al,0x5c
  414c96:	xchg   edi,esp
  414c98:	ins    BYTE PTR es:[edi],dx
  414c99:	mov    ah,BYTE PTR [ecx+0x30]
  414c9c:	ffree  st(6)
  414c9e:	push   es
  414c9f:	stc    
  414ca0:	lahf   
  414ca1:	fimul  DWORD PTR [ebx]
  414ca3:	lock mov ecx,0xf3e8ae44
  414ca9:	lahf   
  414caa:	aaa    
  414cab:	and    eax,0x6c8c2369
  414cb0:	fild   DWORD PTR [edx-0x6bd0b7f3]
  414cb6:	sub    eax,0x80f3c8f9
  414cbb:	pop    ebx
  414cbc:	jo     0x414c81
  414cbe:	and    DWORD PTR [eax+ebp*1+0x7572bb5b],edi
  414cc5:	mov    ebx,0xf6384078
  414cca:	fucomip st,st(3)
  414ccc:	cwde   
  414ccd:	adc    bl,BYTE PTR [eax-0x19487189]
  414cd3:	aad    0x43
  414cd5:	mov    esi,0xfbb8efe1
  414cda:	xchg   esp,eax
  414cdb:	ror    BYTE PTR [ebx-0x723bc8e9],1
  414ce1:	call   0xe641:0xa430bfb9
  414ce8:	leave  
  414ce9:	mov    ds:0xef1d69b9,eax
  414cee:	dec    ebx
  414cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf0:	and    ecx,DWORD PTR [ebx+0x2d141f45]
  414cf6:	(bad)  
  414cf9:	and    esp,ebx
  414cfb:	adc    edi,DWORD PTR [eax+0x47]
  414cfe:	test   BYTE PTR [edi+0x4cfe1ed8],bl
  414d04:	nop
  414d05:	add    eax,0xa3533929
  414d0a:	and    al,0x7
  414d0c:	pop    ebp
  414d0d:	and    al,0x4a
  414d0f:	xor    eax,0xe367a428
  414d14:	mov    DWORD PTR [ebx-0x24],eax
  414d17:	and    edi,DWORD PTR [eax+0x3ff735bf]
  414d1d:	sbb    edi,esi
  414d1f:	mov    ebp,0x82859b56
  414d24:	or     al,0xda
  414d26:	xchg   ebx,eax
  414d27:	sar    DWORD PTR [edx+0x2482b784],cl
  414d2d:	xchg   ecx,eax
  414d2e:	xchg   esp,eax
  414d2f:	cli    
  414d30:	pop    esp
  414d31:	sub    ebp,DWORD PTR [bx+di-0x294c]
  414d36:	ror    DWORD PTR [esp+ebx*4],1
  414d39:	inc    ecx
  414d3a:	sbb    al,0x29
  414d3c:	mov    ebx,esp
  414d3e:	sub    al,0x8e
  414d40:	inc    ebx
  414d41:	mov    gs,WORD PTR [ebx-0x51]
  414d44:	add    al,0x63
  414d46:	dec    ebx
  414d47:	pop    ds
  414d48:	pop    edi
  414d49:	int    0xca
  414d4b:	dec    ecx
  414d4c:	enter  0xd83d,0x78
  414d50:	inc    edi
  414d51:	fmul   DWORD PTR [ebx-0x51]
  414d54:	pop    edi
  414d55:	retf   
  414d56:	mov    eax,ds:0xe06f0dca
  414d5b:	cmp    al,0x6d
  414d5d:	fadd   st(5),st
  414d5f:	iret   
  414d60:	pop    ecx
  414d61:	mov    bh,0xa5
  414d63:	xchg   ebp,eax
  414d64:	pop    esi
  414d65:	inc    edi
  414d66:	data16 loopne 0x414d3c
  414d69:	pcmpgtd mm1,mm2
  414d6c:	or     DWORD PTR [edx-0x445c30d],eax
  414d72:	xor    BYTE PTR [ebx-0x6a],0xc8
  414d76:	xchg   edi,eax
  414d77:	sub    dh,ch
  414d79:	test   al,0x12
  414d7b:	xchg   esp,eax
  414d7c:	cmp    eax,0xd35213a9
  414d81:	and    BYTE PTR [edx-0x21],ah
  414d84:	imul   esi,DWORD PTR [ecx],0xffffffa2
  414d87:	ins    DWORD PTR es:[edi],dx
  414d88:	pop    ecx
  414d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8a:	adc    eax,DWORD PTR [ebx]
  414d8c:	add    bl,cl
  414d8e:	stos   DWORD PTR es:[edi],eax
  414d8f:	or     al,0x19
  414d91:	adc    edx,0x9e9fa032
  414d97:	fiadd  DWORD PTR [bx+di-0x72f0]
  414d9c:	shl    BYTE PTR [esi-0x727228e4],1
  414da2:	dec    edx
  414da3:	daa    
  414da4:	fsubrp st(3),st
  414da6:	and    esp,DWORD PTR [edx-0x523aaaf6]
  414dac:	jbe    0x414e25
  414dae:	fcmovu st,st(3)
  414db0:	and    dl,BYTE PTR [ebx-0x4e49f8e1]
  414db6:	sti    
  414db7:	cwde   
  414db8:	(bad)  
  414dbb:	or     ebx,DWORD PTR [esi+0x736129b0]
  414dc1:	gs cmp ebp,esi
  414dc4:	test   al,0x40
  414dc6:	sub    al,0x42
  414dc8:	int    0x12
  414dca:	test   al,0x3c
  414dcc:	mov    DWORD PTR cs:[edi+ebp*4+0x369d144b],ebp
  414dd4:	and    ebx,DWORD PTR [ecx]
  414dd6:	scas   al,BYTE PTR es:[edi]
  414dd7:	dec    esi
  414dd8:	add    BYTE PTR [edx-0xdca91f8],dh
  414dde:	push   cs
  414ddf:	inc    ecx
  414de1:	(bad)  
  414de2:	pop    ebx
  414de3:	mov    eax,0xfa3063cf
  414de8:	es dec esp
  414dea:	inc    ecx
  414deb:	pop    ds
  414dec:	mov    cl,0x41
  414dee:	icebp  
  414def:	mov    ch,0x19
  414df1:	jne    0x414da2
  414df3:	stc    
  414df4:	stos   BYTE PTR es:[edi],al
  414df5:	mov    ds:0x86cf989e,eax
  414dfa:	ja     0x414e27
  414dfc:	test   al,0x1c
  414dfe:	fnstenv [eax+ebx*4+0x3f42a48a]
  414e05:	lods   al,BYTE PTR ds:[esi]
  414e06:	mov    dh,0x17
  414e08:	push   edi
  414e09:	xchg   ebp,eax
  414e0a:	mov    ecx,0xe83f5dff
  414e0f:	push   ecx
  414e10:	outs   dx,DWORD PTR ds:[esi]
  414e11:	sub    DWORD PTR [ebp-0xf8e1de6],eax
  414e17:	adc    al,0x49
  414e19:	popa   
  414e1a:	mov    DWORD PTR [edx],ecx
  414e1c:	jns    0x414e6c
  414e1e:	shl    DWORD PTR [esi],0x17
  414e21:	pop    ebp
  414e22:	(bad)  [edi-0x43]
  414e25:	pop    eax
  414e26:	and    BYTE PTR [esp+eiz*2-0x4f743c98],0x83
  414e2e:	push   edi
  414e2f:	push   edx
  414e30:	scas   eax,DWORD PTR es:[edi]
  414e31:	inc    edx
  414e32:	push   ecx
  414e33:	inc    esi
  414e34:	mov    WORD PTR [eax-0x2aa87c5],?
  414e3a:	(bad)  
  414e3b:	cmp    eax,0xbd936a65
  414e40:	loop   0x414ddb
  414e42:	mov    eax,ds:0x5204c03
  414e47:	fldl2t 
  414e49:	xlat   BYTE PTR ds:[ebx]
  414e4a:	push   edx
  414e4b:	dec    ecx
  414e4c:	in     eax,0xa7
  414e4e:	push   0x7e978eaf
  414e53:	cmp    ecx,DWORD PTR [ebx+0x14]
  414e56:	push   ss
  414e57:	es (bad) 
  414e59:	shl    DWORD PTR [edx+0x72e4186b],cl
  414e5f:	inc    esi
  414e60:	inc    edi
  414e61:	ror    BYTE PTR [ebp+0x425412ea],1
  414e67:	in     eax,0xf0
  414e69:	jo     0x414e0f
  414e6b:	cdq    
  414e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e6d:	mov    DWORD PTR [eax+ecx*1-0x54b18460],ebx
  414e74:	mov    BYTE PTR ds:[ecx-0xd],0x11
  414e79:	dec    ecx
  414e7a:	nop
  414e7b:	scas   al,BYTE PTR es:[edi]
  414e7c:	mov    WORD PTR [edi+0x1f75e523],cs
  414e82:	in     eax,0xd4
  414e84:	dec    ebx
  414e85:	mov    esi,0x131b5b18
  414e8a:	inc    esi
  414e8b:	pop    esp
  414e8c:	rcl    BYTE PTR [eax+0x764ff2b9],0x48
  414e93:	cwde   
  414e94:	pop    ds
  414e95:	mov    bl,BYTE PTR [edi]
  414e97:	and    BYTE PTR [edx-0xdfc6b7f],bl
  414e9d:	add    DWORD PTR [esi-0x566637b0],edi
  414ea3:	pop    ebp
  414ea4:	ror    BYTE PTR [edx+0x1],1
  414ea7:	dec    ecx
  414ea8:	sub    DWORD PTR [eax-0x4d895765],esi
  414eae:	clc    
  414eaf:	cwde   
  414eb0:	mov    edi,DWORD PTR [edx+ebx*2+0x7f5b32f2]
  414eb7:	or     eax,0xece0ba41
  414ebc:	mov    al,ds:0x1c19aeed
  414ec1:	and    ebp,DWORD PTR [ebx+0x77]
  414ec4:	int    0x2c
  414ec6:	jnp    0x414ef3
  414ec8:	and    ecx,eax
  414eca:	jnp    0x414e88
  414ecc:	jg     0x414e90
  414ece:	sub    al,0xd2
  414ed0:	test   eax,0x26e7116
  414ed5:	push   ecx
  414ed6:	jns    0x414f09
  414ed8:	es daa 
  414eda:	add    al,0x2e
  414edc:	rcl    DWORD PTR [esi-0x6d],cl
  414edf:	inc    ebp
  414ee0:	pop    ebp
  414ee1:	leave  
  414ee2:	xor    ecx,DWORD PTR [ebx-0x1a4579c8]
  414ee8:	ficomp WORD PTR [ecx+0x74]
  414eeb:	xchg   esp,eax
  414eec:	xchg   esi,eax
  414eed:	lds    edi,FWORD PTR ds:0x9149584c
  414ef3:	xchg   esp,eax
  414ef4:	xor    BYTE PTR [ebx],ch
  414ef6:	sbb    BYTE PTR [eax+0x4141a7ec],al
  414efc:	dec    ebx
  414efd:	std    
  414efe:	adc    DWORD PTR [edx-0x32],ecx
  414f01:	(bad)  
  414f02:	and    al,BYTE PTR [edx+0x59bca262]
  414f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f09:	fcmove st,st(0)
  414f0b:	mov    bh,0x28
  414f0d:	jae    0x414f18
  414f0f:	or     DWORD PTR [esi+eiz*8],edi
  414f12:	mov    cl,0xcc
  414f14:	jl     0x414f94
  414f16:	xchg   edx,eax
  414f17:	hlt    
  414f18:	push   edi
  414f19:	or     ch,cl
  414f1b:	xlat   BYTE PTR ss:[ebx]
  414f1d:	pop    eax
  414f1e:	inc    sp
  414f20:	jo     0x414f6b
  414f22:	fmul   QWORD PTR [ecx-0x42ab802d]
  414f28:	mov    BYTE PTR [ecx],ch
  414f2a:	sub    DWORD PTR [ecx+0x241a2552],0xf
  414f31:	xor    DWORD PTR [edi-0x4159d56d],0xafb8372a
  414f3b:	pop    edx
  414f3c:	push   0xf
  414f3e:	nop
  414f3f:	mov    bl,0x68
  414f41:	sti    
  414f42:	mov    ?,eax
  414f44:	pop    es
  414f45:	call   0xdc2d:0x3735229a
  414f4c:	ins    DWORD PTR es:[edi],dx
  414f4d:	pushf  
  414f4e:	aam    0xf6
  414f50:	jp     0x414f57
  414f52:	sbb    DWORD PTR [eax+0x3d],0x83bf303
  414f59:	mov    ebx,0x6bceb489
  414f5e:	mov    DWORD PTR [edi+eiz*1+0x68],esp
  414f62:	inc    ebx
  414f63:	jae    0x414f54
  414f65:	inc    esp
  414f66:	sbb    ecx,edx
  414f68:	mov    eax,0xa572ff4c
  414f6d:	arpl   WORD PTR [ecx],dx
  414f6f:	push   esp
  414f70:	inc    ecx
  414f71:	stos   BYTE PTR es:[edi],al
  414f72:	cmp    DWORD PTR [ebx+0x4152ae58],eax
  414f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f79:	xchg   ecx,eax
  414f7a:	in     al,dx
  414f7b:	pop    edi
  414f7c:	push   ebp
  414f7d:	push   ebx
  414f7e:	mov    bh,0x75
  414f80:	mov    eax,fs:0x4dfd0e87
  414f86:	pop    esp
  414f87:	push   ds
  414f88:	or     DWORD PTR ds:0x29e73add,esi
  414f8e:	inc    edx
  414f8f:	int3   
  414f90:	jmp    0xcac8:0xc4aebcff
  414f97:	or     bh,BYTE PTR [edi+eax*1-0x5bcdac26]
  414f9e:	add    dl,cl
  414fa0:	dec    edi
  414fa1:	popa   
  414fa2:	(bad)  
  414fa3:	and    DWORD PTR [esi+ebp*8],ecx
  414fa6:	sub    esp,ebp
  414fa8:	push   esi
  414fa9:	push   0x1a
  414fab:	pop    ds
  414fac:	jp     0x414f50
  414fae:	ins    DWORD PTR es:[edi],dx
  414faf:	aaa    
  414fb0:	fistp  WORD PTR [ecx-0x7a27becd]
  414fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb7:	lds    edx,FWORD PTR [edi-0x10cbd51b]
  414fbd:	les    ebx,FWORD PTR [eax+0x31]
  414fc0:	push   edx
  414fc1:	cwde   
  414fc2:	xchg   BYTE PTR [eax+0xfb1e44c],dh
  414fc8:	push   esp
  414fc9:	add    DWORD PTR [edx+0x76],eax
  414fcc:	mov    bl,0x90
  414fce:	mov    bl,0x18
  414fd0:	fdiv   DWORD PTR [ebp+0x337bcdb0]
  414fd6:	xchg   ecx,eax
  414fd7:	cmp    eax,0xc1f4152f
  414fdc:	rol    ebx,1
  414fde:	mov    bh,0x28
  414fe0:	pop    esi
  414fe1:	into   
  414fe2:	push   es
  414fe3:	or     BYTE PTR [esi+edi*4],0x99
  414fe7:	(bad)  
  414fe8:	out    0x5d,al
  414fea:	xchg   ecx,eax
  414feb:	and    esp,DWORD PTR [edi+eiz*8-0x14]
  414fef:	jae    0x415037
  414ff1:	jg     0x415043
  414ff3:	out    dx,eax
  414ff4:	mov    cl,0x3d
  414ff6:	cmp    al,0x61
  414ff8:	and    al,al
  414ffa:	jae    0x414f7d
  414ffc:	nop
  414ffd:	lahf   
  414ffe:	sbb    al,0x18
  415000:	int3   
  415001:	jge    0x41504a
  415003:	stos   BYTE PTR es:[edi],al
  415004:	sar    ebp,1
  415006:	repnz and bl,BYTE PTR ds:0x7b1bff25
  41500d:	pusha  
  41500e:	add    DWORD PTR [edi],0x9529cf60
  415014:	inc    eax
  415015:	popa   
  415016:	xor    eax,0x5fa736ce
  41501b:	(bad)  
  41501c:	leave  
  41501d:	mov    bl,0x5b
  41501f:	ret    0x8ca8
  415022:	push   edx
  415023:	test   esp,edx
  415025:	nop
  415026:	xchg   edx,eax
  415027:	mov    bl,0x9b
  415029:	xchg   edi,eax
  41502a:	xchg   edx,eax
  41502b:	mov    bl,0xef
  41502d:	scas   al,BYTE PTR es:[edi]
  41502e:	mov    DWORD PTR [eax],ebx
  415030:	add    DWORD PTR [esi],0xe
  415033:	mov    ds:0xa5ff5f02,al
  415038:	bound  ecx,QWORD PTR [ecx+0x1413c0f]
  41503e:	(bad)  
  41503f:	fst    st(0)
  415041:	in     eax,dx
  415042:	in     eax,0xe3
  415044:	mov    bl,0x44
  415046:	jo     0x414ff0
  415048:	call   0x5bca88ad
  41504d:	arpl   WORD PTR [edi-0x4f],sp
  415050:	(bad)  
  415051:	int    0xb4
  415053:	nop
  415054:	xchg   edx,eax
  415055:	jp     0x415000
  415057:	add    ah,cl
  415059:	(bad)  [esi-0x36e360a5]
  41505f:	jecxz  0x415099
  415061:	jecxz  0x4150c9
  415063:	cmp    BYTE PTR [ebx-0x30],0x78
  415067:	dec    ebx
  415068:	or     esi,DWORD PTR [ebp+0x25]
  41506b:	add    BYTE PTR [edx],0x87
  41506e:	fidiv  DWORD PTR [ebx+0x3f]
  415071:	enter  0x1bef,0x49
  415075:	xchg   ebx,eax
  415076:	imul   ebp,ecx,0xb0f607da
  41507c:	ja     0x4150e1
  41507e:	and    esp,DWORD PTR [ebx+esi*2-0x57]
  415082:	xchg   esi,eax
  415083:	cmp    al,0xa2
  415085:	sbb    eax,0xd8210a44
  41508a:	inc    esp
  41508b:	outs   dx,BYTE PTR ds:[esi]
  41508c:	ins    BYTE PTR es:[edi],dx
  41508d:	mov    ecx,?
  41508f:	xor    eax,0xdb30256
  415094:	ins    BYTE PTR es:[edi],dx
  415095:	out    0xed,eax
  415097:	ss pop ebp
  415099:	imul   eax,esp,0xe6737775
  41509f:	fwait
  4150a0:	sub    DWORD PTR [edi+edx*1-0x7af778f1],esp
  4150a7:	push   ebx
  4150a8:	pop    esp
  4150a9:	xchg   BYTE PTR [edx],al
  4150ab:	cmp    edi,DWORD PTR [eax+0x1a0a0a0]
  4150b1:	or     ebx,esp
  4150b3:	inc    ebp
  4150b4:	or     eax,0x1b6db126
  4150b9:	sub    bh,0x2c
  4150bc:	bound  ecx,QWORD PTR [ecx+0x5b54be3d]
  4150c2:	popf   
  4150c3:	mul    BYTE PTR [ecx-0x33]
  4150c6:	bnd jp 0x41507e
  4150c9:	sbb    bl,dh
  4150cb:	shl    BYTE PTR [esi],cl
  4150cd:	and    al,0x7b
  4150cf:	push   ebx
  4150d0:	add    ecx,edx
  4150d2:	outs   dx,BYTE PTR ds:[esi]
  4150d3:	mov    al,dh
  4150d5:	out    0xfc,al
  4150d7:	sbb    al,0x3f
  4150d9:	test   BYTE PTR [ecx-0x60],dh
  4150dc:	std    
  4150dd:	ret    
  4150de:	xor    eax,0xc0147277
  4150e3:	add    ebp,ecx
  4150e5:	test   DWORD PTR ds:0xb201ce8c,0x9c9e3c37
  4150ef:	mov    ch,0x51
  4150f1:	enter  0x9cde,0x11
  4150f5:	loop   0x415146
  4150f7:	or     eax,0x7bb3068f
  4150fc:	pusha  
  4150fd:	(bad)  
  4150ff:	xchg   ebp,eax
  415100:	nop
  415101:	adc    esi,DWORD PTR [edi+0x61]
  415104:	idiv   BYTE PTR [esi]
  415106:	(bad)  
  415107:	push   ebp
  415108:	pop    es
  415109:	das    
  41510a:	mov    al,0xbc
  41510c:	repnz xor al,dh
  41510f:	add    BYTE PTR [edx-0x431847af],0xb
  415116:	scas   eax,DWORD PTR es:[edi]
  415117:	inc    eax
  415118:	std    
  415119:	shl    ah,cl
  41511b:	adc    al,0x74
  41511d:	adc    dl,bh
  41511f:	xchg   ebp,eax
  415120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415121:	pushf  
  415122:	shl    BYTE PTR [ecx-0x8b9445],1
  415128:	loopne 0x415171
  41512a:	adc    ah,dl
  41512c:	retf   
  41512d:	jle    0x415121
  41512f:	loop   0x415140
  415131:	xor    BYTE PTR [eax],cl
  415133:	cwde   
  415134:	add    BYTE PTR [ebx],bh
  415136:	(bad)  
  415137:	out    dx,eax
  415138:	sub    al,0xf5
  41513a:	out    0x5e,al
  41513c:	xor    al,0x2d
  41513e:	(bad)  
  415140:	push   edi
  415141:	lds    eax,FWORD PTR [eax-0x68]
  415144:	dec    eax
  415145:	push   ebx
  415146:	cmp    ebx,DWORD PTR ds:0xef885f88
  41514c:	jmp    0xca0c:0x8d17c47
  415153:	add    eax,0x2c9a368b
  415158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415159:	dec    edi
  41515a:	retf   
  41515b:	xor    eax,0xfe1b4505
  415160:	jns    0x415114
  415162:	mov    ebx,0x6e4c743f
  415167:	add    ah,BYTE PTR [edx+0x3c]
  41516a:	jae    0x415189
  41516c:	iret   
  41516d:	in     al,dx
  41516e:	loope  0x415181
  415170:	into   
  415171:	lock sbb DWORD PTR [ebp+0x75d5f36a],esi
  415178:	push   0x250a5dc5
  41517d:	pop    ss
  41517e:	mov    al,ds:0x216c3f65
  415183:	jnp    0x41512d
  415185:	xchg   esp,eax
  415186:	dec    ebp
  415187:	pusha  
  415188:	xchg   DWORD PTR [edi+0x2a],edx
  41518b:	jge    0x415164
  41518d:	scas   al,BYTE PTR es:[edi]
  41518e:	cmp    ecx,edx
  415190:	pusha  
  415191:	push   eax
  415192:	int    0xa5
  415194:	sbb    eax,0x837b2bed
  415199:	and    cl,BYTE PTR [ebp+0x35]
  41519c:	and    ch,ch
  41519e:	cmp    DWORD PTR [ecx-0x75d84658],esp
  4151a4:	test   al,0x68
  4151a6:	xchg   edx,eax
  4151a7:	loope  0x415193
  4151a9:	int3   
  4151aa:	mov    edx,0x775a56c6
  4151af:	(bad)
  4151b3:	mov    ds:0xbb8402e5,eax
  4151b8:	cmp    ch,BYTE PTR [eax+0x51b4af90]
  4151be:	cmp    esi,ebx
  4151c0:	mov    bl,0x9f
  4151c2:	out    0xdc,eax
  4151c4:	and    eax,0x8aedaaa8
  4151c9:	dec    esi
  4151ca:	adc    al,BYTE PTR [esp+ebp*4-0x2af69195]
  4151d1:	mov    esp,DWORD PTR [eax-0x55d53cb7]
  4151d7:	add    dl,BYTE PTR [ebp-0x37]
  4151da:	dec    ecx
  4151db:	inc    ecx
  4151dc:	mov    DWORD PTR [edx-0x9],0x7056b11f
  4151e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e5:	xchg   ebx,eax
  4151e6:	addr16 jl 0x4151fc
  4151e9:	test   ecx,ecx
  4151eb:	clc    
  4151ec:	sbb    esi,DWORD PTR [ebx]
  4151ee:	xchg   edx,eax
  4151ef:	push   ebx
  4151f0:	fs in  eax,dx
  4151f2:	test   BYTE PTR [esi],ah
  4151f4:	xchg   ecx,eax
  4151f5:	inc    edx
  4151f6:	mov    al,0xa3
  4151f8:	pop    ebx
  4151f9:	outs   dx,DWORD PTR ds:[esi]
  4151fa:	repz adc bl,BYTE PTR [ecx+0x74]
  4151fe:	mov    WORD PTR [ebx],cs
  415200:	dec    esp
  415201:	add    eax,0xc3390863
  415206:	inc    ecx
  415207:	dec    ebp
  415208:	inc    edx
  415209:	lods   eax,DWORD PTR ds:[esi]
  41520a:	sbb    al,0x3d
  41520c:	ja     0x415284
  41520e:	mov    edi,0xe0764124
  415213:	xlat   BYTE PTR ds:[ebx]
  415214:	jo     0x415206
  415216:	inc    ecx
  415217:	pop    es
  415218:	cmp    DWORD PTR [esi],esp
  41521a:	(bad)  
  41521b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41521c:	data16 jbe 0x415228
  41521f:	rcr    BYTE PTR [eax+0x26d0044a],0xd0
  415226:	sbb    DWORD PTR [ebx-0x2564dc7a],esp
  41522c:	icebp  
  41522d:	jns    0x41527f
  41522f:	repnz into 
  415231:	ja     0x41529a
  415233:	mov    edx,0xad4929ce
  415238:	and    eax,0x81118966
  41523d:	or     al,0x5d
  41523f:	fist   DWORD PTR [edx-0x1726ac6f]
  415245:	js     0x415210
  415247:	je     0x415255
  415249:	and    eax,0x37b61269
  41524e:	das    
  41524f:	jg     0x41528c
  415251:	in     al,0x5
  415253:	call   DWORD PTR [eax]
  415255:	mul    BYTE PTR [ebp-0x44697311]
  41525b:	ror    DWORD PTR [edx],cl
  41525d:	sub    DWORD PTR [eax-0x10f357a8],edx
  415263:	push   esi
  415264:	xchg   edi,eax
  415265:	int3   
  415266:	cmp    al,0x17
  415268:	fdivr  st(5),st
  41526a:	dec    ecx
  41526b:	cwde   
  41526c:	mov    ecx,0x7df448f3
  415271:	mov    dl,0xb
  415273:	mov    ebp,0x75c0d1de
  415278:	xor    DWORD PTR [edx+eax*4-0x6c],ecx
  41527c:	lock inc edx
  41527e:	mov    dh,0xe9
  415280:	add    DWORD PTR [ecx+edi*1-0x61],0x54
  415285:	sti    
  415286:	dec    edx
  415287:	rcl    eax,cl
  415289:	call   FWORD PTR [ecx+0x16]
  41528c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41528d:	mov    eax,ds:0xead64180
  415292:	mov    ds:0xb2bc22a5,eax
  415297:	mov    WORD PTR [eax-0x7a2d8e48],?
  41529d:	inc    edi
  41529e:	fldenv [ebp+0x15efc5b]
  4152a4:	mov    esi,0x70dfab07
  4152a9:	cld    
  4152aa:	in     eax,dx
  4152ab:	dec    edx
  4152ac:	jo     0x41523a
  4152ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152af:	dec    esi
  4152b0:	jmp    0x415285
  4152b2:	push   ebp
  4152b3:	mov    ecx,ebp
  4152b5:	or     al,0xaa
  4152b7:	jne    0x415281
  4152b9:	jp     0x415286
  4152bb:	js     0x41529f
  4152bd:	pop    ecx
  4152be:	sar    DWORD PTR [ebx+edi*8+0x7c],cl
  4152c2:	push   es
  4152c3:	xchg   BYTE PTR [edx-0x56],al
  4152c6:	mov    eax,0x5419df02
  4152cb:	mov    ds:0x1fa8479b,al
  4152d0:	push   ecx
  4152d1:	jecxz  0x41528b
  4152d3:	lahf   
  4152d4:	pop    es
  4152d5:	retf   0x8051
  4152d8:	xchg   ebp,eax
  4152d9:	sub    BYTE PTR [esi],bh
  4152db:	mov    BYTE PTR [edx],cl
  4152dd:	dec    ebx
  4152de:	pop    ebx
  4152df:	call   0x23591b13
  4152e4:	ja     0x415333
  4152e6:	pop    ds
  4152e7:	pop    eax
  4152e8:	xor    cl,BYTE PTR [esi+0x1d]
  4152eb:	neg    BYTE PTR [eax+0x2]
  4152ee:	adc    al,0x12
  4152f0:	jb     0x4152c7
  4152f2:	push   0x44
  4152f4:	mov    WORD PTR [eax-0x28f835e4],?
  4152fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152fb:	xlat   BYTE PTR ds:[ebx]
  4152fc:	ja     0x41529e
  4152fe:	fadd   st,st(3)
  415300:	es push ecx
  415302:	out    0xe9,eax
  415304:	pop    ecx
  415305:	imul   eax,DWORD PTR [edx-0x7747365],0xbf77e88b
  41530f:	lods   eax,DWORD PTR ds:[esi]
  415310:	fsub   QWORD PTR [edi-0x59]
  415313:	int    0xa0
  415315:	pop    esi
  415316:	retf   0xbf45
  415319:	scas   eax,DWORD PTR es:[edi]
  41531a:	mov    ecx,0xb742b8b
  41531f:	adc    ebp,DWORD PTR [esi]
  415321:	add    BYTE PTR [esi-0x87a619],dh
  415327:	ret    
  415328:	popf   
  415329:	je     0x415383
  41532b:	xor    al,0x85
  41532d:	fadd   st,st(0)
  41532f:	shr    BYTE PTR [edi],0xbc
  415332:	dec    ebp
  415333:	pop    ebp
  415334:	fist   WORD PTR [eax+ebx*8+0x53]
  415338:	(bad)  
  415339:	fmul   QWORD PTR [esi-0x310cd706]
  41533f:	popf   
  415340:	jecxz  0x415316
  415342:	aas    
  415343:	jecxz  0x4152d2
  415345:	dec    ebp
  415346:	test   eax,0xef62648a
  41534b:	fisttp QWORD PTR [ebp-0x2f2524ca]
  415351:	or     bl,BYTE PTR [ebx-0x73]
  415354:	mov    ebp,0x70da53a9
  415359:	mov    edx,0xadb91f7
  41535e:	lds    ebp,FWORD PTR ds:0xcf456714
  415364:	cmp    al,0x41
  415366:	lods   al,BYTE PTR ds:[esi]
  415367:	pop    eax
  415368:	mov    DWORD PTR [edi-0x2a],eax
  41536b:	jno    0x415301
  41536d:	int    0x4e
  41536f:	(bad)  
  415370:	out    0x5c,eax
  415372:	dec    DWORD PTR [ebx+edi*4+0x5d]
  415376:	sbb    al,0xcb
  415378:	jge    0x4153d0
  41537a:	cmc    
  41537b:	or     edi,esi
  41537d:	(bad)
  415381:	and    DWORD PTR [ebx],eax
  415383:	mov    bh,0xa2
  415385:	arpl   WORD PTR [ecx+eiz*1+0x226fcf60],si
  41538c:	cs mov bl,0x2d
  41538f:	out    dx,eax
  415390:	mov    edi,0x6a552ffa
  415395:	sbb    ebx,DWORD PTR [ebp-0x322ec00a]
  41539b:	adc    al,0x43
  41539d:	inc    edx
  41539e:	test   BYTE PTR [edi-0xab9e267],al
  4153a4:	jns    0x41534d
  4153a6:	shr    DWORD PTR [eax+0x5d],cl
  4153a9:	cmp    BYTE PTR [ebp-0x38],dl
  4153ac:	ds and eax,0xf0dfbb5b
  4153b2:	push   0x16
  4153b4:	or     ah,dl
  4153b6:	mov    dh,0xe9
  4153b8:	jmp    0x79e0:0x7c3f16b4
  4153bf:	in     eax,dx
  4153c0:	mov    al,ds:0xb1a7d235
  4153c5:	cwde   
  4153c6:	or     DWORD PTR [esi],esi
  4153c8:	fisubr DWORD PTR [esi+0x5c]
  4153cb:	test   al,0x39
  4153cd:	scas   al,BYTE PTR es:[edi]
  4153ce:	sahf   
  4153cf:	xor    ah,BYTE PTR [ecx+0x36f137e0]
  4153d5:	inc    ebx
  4153d6:	pusha  
  4153d7:	call   0x32253d9b
  4153dc:	or     esp,eax
  4153de:	shr    DWORD PTR [ebp+0xe4c092c],0x90
  4153e5:	dec    ecx
  4153e6:	ins    BYTE PTR es:[edi],dx
  4153e7:	test   DWORD PTR [edx],esi
  4153e9:	repz iret 
  4153eb:	mov    al,BYTE PTR [ebx]
  4153ed:	cld    
  4153ee:	mov    eax,esp
  4153f0:	jg     0x41545d
  4153f2:	or     cl,BYTE PTR [ecx-0x54]
  4153f5:	push   edi
  4153f6:	cmp    edx,DWORD PTR [edx]
  4153f8:	mov    esp,0xa618be5a
  4153fd:	adc    al,0xd4
  4153ff:	inc    ebx
  415400:	mov    cl,0xf8
  415402:	pop    esi
  415403:	in     al,0xe6
  415405:	cld    
  415406:	clc    
  415407:	int    0x6d
  415409:	mov    ?,WORD PTR [edi+0x60]
  41540c:	stos   DWORD PTR es:[edi],eax
  41540d:	inc    edi
  41540e:	mov    cl,0x5d
  415410:	(bad)  
  415411:	mul    DWORD PTR [ecx]
  415413:	test   BYTE PTR [eax+0x62],bl
  415416:	push   esi
  415417:	push   esp
  415418:	daa    
  415419:	lods   al,BYTE PTR ds:[esi]
  41541a:	daa    
  41541b:	mov    edi,DWORD PTR [eax-0x43ff322c]
  415421:	cs sub eax,0x7ce067e7
  415427:	lds    esp,FWORD PTR [edx+eax*4-0x5651be62]
  41542e:	inc    edi
  41542f:	inc    esi
  415430:	jge    0x415482
  415432:	imul   esi,edi,0x4886954d
  415438:	imul   ecx,DWORD PTR [edx+0x6c69fa98],0x23
  41543f:	inc    esi
  415440:	dec    edx
  415441:	jl     0x415491
  415443:	in     eax,dx
  415444:	mov    ecx,0xf9ca79a2
  415449:	inc    ebx
  41544a:	or     eax,0x1ed1eac3
  41544f:	xchg   BYTE PTR [ebx+0x16cfe3d2],bh
  415455:	cmc    
  415456:	in     al,0xf4
  415458:	nop
  415459:	fidivr DWORD PTR [edx+0x19]
  41545c:	sbb    BYTE PTR [eax],dh
  41545e:	ins    DWORD PTR es:[edi],dx
  41545f:	stos   DWORD PTR es:[edi],eax
  415460:	xor    DWORD PTR [esp+eax*1-0x7090e2a3],eax
  415467:	xchg   esp,eax
  415468:	push   ebx
  415469:	(bad)  
  41546a:	mov    ds:0x8b270652,eax
  41546f:	cmp    ch,ah
  415471:	jge    0x4154bb
  415473:	mov    eax,ds:0xe8518bdd
  415478:	test   al,0xa7
  41547a:	loopne 0x415408
  41547c:	icebp  
  41547d:	mov    dl,0x53
  41547f:	(bad)  [ebx-0x65]
  415482:	adc    al,0xdd
  415484:	and    DWORD PTR [esi-0x7a],esp
  415487:	mov    fs,ebx
  415489:	daa    
  41548a:	push   ebp
  41548b:	push   esp
  41548c:	xor    eax,0x7a03c0c5
  415491:	pushf  
  415492:	and    BYTE PTR [ecx],dl
  415494:	push   eax
  415495:	xor    BYTE PTR [ecx-0x7b24c54d],ah
  41549b:	mov    al,ds:0xa5d57517
  4154a0:	imul   edi,DWORD PTR [ecx-0x37],0x4d
  4154a4:	dec    ecx
  4154a5:	pop    eax
  4154a6:	pop    ss
  4154a7:	dec    edx
  4154a8:	inc    ebp
  4154a9:	push   ecx
  4154aa:	(bad)  
  4154ab:	loop   0x4154f9
  4154ad:	cwde   
  4154ae:	loope  0x41550d
  4154b0:	push   esi
  4154b1:	into   
  4154b2:	sbb    cl,dh
  4154b4:	mov    ebx,esp
  4154b6:	jbe    0x41550a
  4154b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154b9:	out    dx,eax
  4154ba:	jae    0x415451
  4154bc:	mov    esi,0x8d5b9eca
  4154c1:	mov    dh,bl
  4154c3:	ret    0x22fc
  4154c6:	xchg   edx,edi
  4154c8:	scas   al,BYTE PTR es:[edi]
  4154c9:	fild   QWORD PTR [edi]
  4154cb:	fyl2xp1 
  4154cd:	retf   
  4154ce:	and    dl,BYTE PTR [edi+0x59]
  4154d1:	mov    ds:0x66e6e2ac,eax
  4154d6:	mov    esp,0x52294541
  4154db:	and    esi,DWORD PTR [edx+ebx*2]
  4154de:	pusha  
  4154df:	mov    ds:0x391dbb2c,al
  4154e4:	or     dh,0x5e
  4154e7:	xchg   esp,eax
  4154e8:	sbb    ebx,DWORD PTR [edi]
  4154ea:	inc    eax
  4154eb:	retf   
  4154ec:	pop    ds
  4154ed:	sbb    edi,0x58d7b5d
  4154f3:	dec    ebp
  4154f4:	mov    cl,0x70
  4154f6:	popf   
  4154f7:	stos   BYTE PTR es:[edi],al
  4154f8:	mov    ss,ecx
  4154fa:	mov    al,ds:0x68898b57
  4154ff:	rcl    DWORD PTR [edx],1
  415501:	jns    0x41548f
  415503:	jnp    0x4154be
  415505:	out    dx,al
  415506:	xor    bl,BYTE PTR [esi+0x2bf0803e]
  41550c:	lea    ecx,[edi+0x1837c5c2]
  415512:	in     eax,dx
  415513:	call   0x8498650f
  415518:	shl    BYTE PTR [ebp-0x1e],0x94
  41551c:	xor    eax,DWORD PTR ds:0x1ece3db8
  415522:	inc    edi
  415523:	lock xor esp,DWORD PTR [edi-0x51]
  415527:	xchg   esi,eax
  415528:	sbb    DWORD PTR [ecx-0x307091cc],ebx
  41552e:	mov    esi,0xcf0c90ff
  415533:	push   cs
  415534:	fisttp DWORD PTR [esi+eiz*4]
  415537:	out    0x45,al
  415539:	clc    
  41553a:	mov    edx,0x3a930f8f
  41553f:	sbb    eax,0xaa46100a
  415544:	daa    
  415545:	icebp  
  415546:	lods   eax,DWORD PTR ds:[esi]
  415547:	leave  
  415548:	mov    bh,0x6c
  41554a:	inc    esi
  41554b:	aam    0xff
  41554d:	cdq    
  41554e:	cld    
  41554f:	(bad)  
  415550:	mov    eax,0x716037c7
  415555:	or     DWORD PTR [ebx+ebx*2],edx
  415558:	pop    eax
  415559:	inc    ebx
  41555a:	mov    ecx,0x9344f832
  41555f:	ins    BYTE PTR es:[edi],dx
  415560:	xchg   edi,eax
  415561:	sbb    al,0x9f
  415563:	mov    eax,0x69702762
  415568:	jmp    0x415539
  41556a:	fcom   DWORD PTR [ebx-0x1c]
  41556d:	fmul   QWORD PTR [eax]
  41556f:	and    eax,ecx
  415571:	dec    ecx
  415572:	test   al,0x5a
  415574:	lahf   
  415575:	pusha  
  415576:	pop    ds
  415577:	ins    BYTE PTR es:[edi],dx
  415578:	jno    0x4155f7
  41557a:	adc    al,0x88
  41557c:	out    dx,eax
  41557d:	popf   
  41557e:	addr16 adc al,0x35
  415581:	imul   ecx,DWORD PTR [esi-0x226f8cfb],0xb68a3bd1
  41558b:	ds dec ebx
  41558d:	dec    edx
  41558e:	or     eax,0x8c87b2d8
  415593:	call   0x104c1ea0
  415598:	lods   al,BYTE PTR ds:[esi]
  415599:	test   al,0x4b
  41559b:	mov    cl,0x93
  41559d:	neg    edi
  41559f:	nop
  4155a0:	fistp  DWORD PTR [ecx+0x7a]
  4155a3:	or     BYTE PTR [eax],cl
  4155a5:	int    0x0
  4155a7:	mov    cl,0xd3
  4155a9:	outs   dx,BYTE PTR ds:[esi]
  4155aa:	inc    esi
  4155ab:	mov    al,ds:0x15c6bb7a
  4155b0:	push   cs
  4155b1:	jp     0x4155eb
  4155b3:	inc    eax
  4155b4:	push   cs
  4155b5:	pop    es
  4155b6:	jae    0x4155f9
  4155b8:	xchg   edx,eax
  4155b9:	or     esp,ebx
  4155bb:	sub    BYTE PTR [eax],0x86
  4155be:	xchg   esi,eax
  4155c0:	stos   BYTE PTR es:[edi],al
  4155c1:	lahf   
  4155c2:	retf   0x9c64
  4155c5:	in     eax,dx
  4155c6:	push   0xffffffcc
  4155c8:	std    
  4155c9:	fwait
  4155ca:	icebp  
  4155cb:	pop    edx
  4155cc:	add    DWORD PTR [esp+ebp*8-0x50],edx
  4155d0:	nop
  4155d1:	(bad)  
  4155d2:	pop    esi
  4155d3:	es push es
  4155d5:	ins    BYTE PTR es:[edi],dx
  4155d6:	cwde   
  4155d7:	jle    0x4155d5
  4155d9:	or     ecx,edx
  4155db:	(bad)  
  4155dd:	neg    DWORD PTR [ebx+0x5f]
  4155e0:	dec    esp
  4155e1:	pop    esi
  4155e2:	mov    al,ds:0xb760e0da
  4155e7:	data16 (bad) 
  4155e9:	lds    eax,FWORD PTR [esi+ebx*4]
  4155ec:	sbb    al,BYTE PTR [edi]
  4155ee:	fcomi  st,st(1)
  4155f0:	fild   QWORD PTR [edi+0x5b691a48]
  4155f6:	sub    dh,BYTE PTR [ebx]
  4155f8:	popf   
  4155f9:	mov    esp,0xe988cdbc
  4155fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ff:	out    0xf9,al
  415601:	push   0x6bb10ceb
  415606:	out    dx,al
  415607:	xchg   edi,eax
  415608:	mov    ebx,0xff297173
  41560d:	or     BYTE PTR [eax+0x7a],0x6b
  415611:	push   es
  415612:	push   cs
  415613:	hlt    
  415614:	cs push ebx
  415616:	push   ss
  415617:	lahf   
  415618:	ja     0x4155e9
  41561a:	loop   0x415689
  41561c:	test   al,0x66
  41561e:	retf   0x68e1
  415621:	pop    ecx
  415622:	cmp    eax,0x3f4ed5c5
  415628:	sub    al,dh
  41562a:	jl     0x415644
  41562c:	mov    dl,0xe0
  41562e:	and    al,0x2b
  415630:	adc    BYTE PTR [ebp-0x47],ah
  415633:	add    al,0xa6
  415635:	jecxz  0x4156aa
  415637:	stc    
  415638:	aaa    
  415639:	push   es
  41563a:	and    DWORD PTR [esi+0x9],edi
  41563d:	les    eax,FWORD PTR [ecx]
  41563f:	jnp    0x4155cb
  415641:	ret    0x8a98
  415644:	cwde   
  415645:	jmp    0xf579301a
  41564a:	sbb    eax,0x5bbfc7ed
  41564f:	jno    0x415658
  415651:	xchg   ah,dl
  415653:	dec    ecx
  415654:	dec    edx
  415655:	cmp    eax,0xd99ee82b
  41565a:	and    esi,esi
  41565c:	aam    0xbe
  41565e:	ja     0x4156a3
  415660:	adc    ch,BYTE PTR [eax]
  415662:	mov    ebx,0x209bebb3
  415667:	ret    
  415668:	jmp    0x415683
  41566a:	or     DWORD PTR [edx-0x684e1d3e],ecx
  415670:	nop
  415671:	das    
  415672:	clc    
  415673:	sar    DWORD PTR [esi],cl
  415675:	in     al,dx
  415676:	rcl    BYTE PTR ds:0x16453b53,cl
  41567c:	pop    sp
  41567e:	xchg   esi,eax
  41567f:	push   0x65
  415681:	pusha  
  415682:	xor    ah,ah
  415684:	push   ds
  415685:	inc    edx
  415686:	jns    0x41562e
  415688:	fistp  QWORD PTR [edi+ebx*1]
  41568b:	test   ah,dl
  41568d:	pop    edi
  41568e:	std    
  41568f:	imul   edi,DWORD PTR [edx-0x68],0x211aaa7b
  415696:	mov    esp,0x8fc5e752
  41569b:	test   BYTE PTR [ecx+0x32],cl
  41569e:	out    dx,al
  41569f:	loop   0x4156df
  4156a1:	xchg   esp,esi
  4156a3:	dec    edi
  4156a4:	ds ret 0x9942
  4156a8:	mov    DWORD PTR [ecx+eax*4+0xd51ce46],ebp
  4156af:	pop    ecx
  4156b0:	jmp    0x4156fa
  4156b2:	push   esp
  4156b3:	xor    al,ch
  4156b5:	jns    0x415735
  4156b7:	imul   DWORD PTR [ebp+0x413da2f6]
  4156bd:	sub    DWORD PTR [eax-0x25],eax
  4156c0:	mov    bl,0x80
  4156c2:	mov    eax,gs
  4156c4:	mov    ch,0x1f
  4156c6:	lea    ecx,[ecx]
  4156c8:	mov    ecx,0xfe3b0081
  4156cd:	mov    edx,0xd64224a
  4156d2:	inc    esi
  4156d3:	jbe    0x4156aa
  4156d5:	mov    ah,0xe7
  4156d7:	or     BYTE PTR [edi],cl
  4156d9:	or     dh,ah
  4156db:	sbb    esi,ecx
  4156dd:	sbb    esi,DWORD PTR [esi+0x31]
  4156e0:	into   
  4156e1:	aas    
  4156e2:	sahf   
  4156e3:	push   edi
  4156e4:	mov    edi,0x6a27c281
  4156e9:	pop    eax
  4156ea:	dec    eax
  4156eb:	retf   
  4156ec:	add    DWORD PTR [eax-0x4caad379],ebp
  4156f2:	sbb    eax,0x93da4c99
  4156f7:	fs test eax,0x8f3ecc5f
  4156fd:	scas   eax,DWORD PTR es:[edi]
  4156fe:	test   eax,0x538aa08a
  415703:	test   ch,0xd5
  415706:	lods   al,BYTE PTR ds:[esi]
  415707:	jle    0x4156d9
  415709:	test   edi,edx
  41570b:	sub    ebx,DWORD PTR [ecx+0x41080633]
  415711:	mov    ebx,DWORD PTR [eax-0x38]
  415714:	adc    DWORD PTR [ecx+0x5999d8f2],ebx
  41571a:	mov    esp,0x2b84ebb2
  41571f:	mov    edi,0x9dadee9
  415724:	pusha  
  415725:	es push esp
  415727:	jle    0x41570e
  415729:	xor    ecx,DWORD PTR [esp+eax*8]
  41572c:	call   0xdf59fe2b
  415731:	gs loopne 0x4156e7
  415734:	mov    al,ds:0xb8581833
  415739:	xchg   ebp,eax
  41573a:	push   edi
  41573b:	jmp    0x4156bd
  41573d:	add    BYTE PTR [edx-0x4e],ah
  415740:	lds    eax,FWORD PTR [edi-0x6f]
  415743:	lods   eax,DWORD PTR ds:[esi]
  415744:	in     al,dx
  415745:	mov    ds:0x605fe656,al
  41574a:	push   ds
  41574b:	mov    eax,ds:0x4cd1b029
  415750:	pushf  
  415751:	mov    dl,0x20
  415753:	imul   ebp,DWORD PTR [esi],0x1c156fa
  415759:	push   0xffffffc4
  41575b:	cmp    BYTE PTR [esi],ah
  41575d:	xchg   ebx,eax
  41575e:	cs iret 
  415760:	(bad)  
  415762:	mov    dl,0x46
  415764:	cld    
  415765:	jl     0x4156f4
  415767:	call   0x10a493d8
  41576c:	dec    esp
  41576d:	pop    ebx
  41576e:	mov    ecx,0x8f0e0cc9
  415773:	lahf   
  415774:	mov    DWORD PTR gs:[ebx-0x47676af3],eax
  41577b:	add    DWORD PTR [ecx+0x428a6911],ebp
  415781:	ret    0xf3d
  415784:	out    0xac,al
  415786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415787:	fldenv [edi-0x1995dafe]
  41578d:	and    cl,BYTE PTR [ebp+0x2a986b3a]
  415793:	add    ebp,DWORD PTR [ecx-0x65]
  415796:	pop    es
  415797:	fs jns 0x4157d1
  41579a:	pop    edx
  41579b:	xor    eax,0xc41bebd2
  4157a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a1:	pushf  
  4157a2:	sbb    al,0xe1
  4157a4:	popa   
  4157a5:	mov    ebx,0xb9045760
  4157aa:	scas   eax,DWORD PTR es:[edi]
  4157ab:	pop    ds
  4157ac:	lods   al,BYTE PTR ds:[esi]
  4157ad:	push   edi
  4157ae:	mov    al,0xa4
  4157b0:	int3   
  4157b1:	mov    ah,0xec
  4157b3:	adc    ebp,DWORD PTR ds:0xbd9865fd
  4157b9:	fstp   TBYTE PTR [ebp-0x52]
  4157bc:	ss dec esp
  4157be:	and    al,BYTE PTR [ecx+ebp*4+0x2ace36ae]
  4157c5:	mov    ebp,0xd3bf41a8
  4157ca:	dec    edx
  4157cb:	mov    edi,ebx
  4157cd:	xchg   edx,eax
  4157ce:	add    esi,DWORD PTR gs:[esi]
  4157d1:	ins    DWORD PTR es:[edi],dx
  4157d2:	(bad)  
  4157d3:	ins    BYTE PTR es:[edi],dx
  4157d4:	mov    eax,ds:0xc10da935
  4157d9:	jns    0x415800
  4157db:	push   eax
  4157dc:	sbb    bh,ah
  4157de:	lods   al,BYTE PTR ds:[esi]
  4157df:	push   esp
  4157e0:	dec    esi
  4157e1:	scas   al,BYTE PTR es:[edi]
  4157e2:	sbb    dl,bh
  4157e4:	cmp    edi,eax
  4157e6:	loop   0x4157ce
  4157e8:	in     eax,0x5c
  4157ea:	mov    edi,0x41ac0899
  4157ef:	jne    0x4157f3
  4157f1:	pop    ds
  4157f2:	sti    
  4157f3:	push   ebx
  4157f4:	xchg   esp,eax
  4157f5:	fisub  WORD PTR [ebp-0x40]
  4157f8:	lock hlt 
  4157fa:	sbb    DWORD PTR [esi+edi*2-0x20d7c41f],ebx
  415801:	scas   eax,DWORD PTR es:[edi]
  415802:	popf   
  415803:	sub    BYTE PTR [ebp+0x1e],bh
  415806:	rol    BYTE PTR [edi],1
  415808:	scas   al,BYTE PTR es:[edi]
  415809:	xchg   DWORD PTR [eax-0x418e0e00],edi
  41580f:	inc    edx
  415810:	jae    0x415807
  415812:	out    0x51,eax
  415814:	jge    0x415868
  415816:	rcl    ebp,cl
  415818:	sbb    BYTE PTR [esi+esi*4+0x67df71b8],ah
  41581f:	sub    bh,al
  415821:	out    0x5b,al
  415823:	retf   
  415824:	rcl    DWORD PTR [ebp+0xf],cl
  415827:	add    al,0xbe
  415829:	jae    0x4157cd
  41582b:	sbb    BYTE PTR [ebp-0x24],dl
  41582e:	test   al,0x5c
  415830:	mov    esi,0x9b653705
  415835:	or     ah,BYTE PTR [esi+0x2c315ace]
  41583b:	push   ds
  41583c:	clc    
  41583d:	retf   0xc607
  415840:	push   cs
  415841:	or     BYTE PTR [ecx-0x7e3daa5f],ah
  415847:	mov    al,ds:0xd5bc540c
  41584c:	mov    DWORD PTR [ecx+0x1765624c],ecx
  415852:	aad    0xf3
  415854:	std    
  415855:	test   al,0xe9
  415857:	scas   al,BYTE PTR es:[edi]
  415858:	pop    ds
  415859:	push   edx
  41585a:	pop    esp
  41585b:	mov    BYTE PTR [eax-0x54350376],al
  415861:	add    eax,0xe591de1f
  415866:	int3   
  415867:	xchg   DWORD PTR ds:[eax-0x1e03c9ae],ebp
  41586e:	loope  0x415836
  415870:	hlt    
  415871:	xor    DWORD PTR [ecx-0x694b8380],edi
  415877:	cmp    DWORD PTR [esi+0x6ddde343],ebx
  41587d:	imul   BYTE PTR [ebx-0x78]
  415880:	or     eax,0x98802874
  415885:	wbinvd 
  415887:	mov    eax,0xec1740f9
  41588c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588d:	int    0xd8
  41588f:	dec    esi
  415890:	xor    DWORD PTR [edi],edx
  415892:	jne    0x4158f5
  415894:	fstp   DWORD PTR [ebp+0x61e4e834]
  41589a:	in     al,0x29
  41589c:	xor    edx,DWORD PTR [edx+0x6e]
  41589f:	or     ah,BYTE PTR [esi-0x2afe0c92]
  4158a5:	out    dx,al
  4158a6:	adc    BYTE PTR ds:0xb98250fe,0xc6
  4158ad:	or     bl,bh
  4158af:	pushf  
  4158b0:	ret    
  4158b1:	lahf   
  4158b2:	jle    0x415929
  4158b4:	inc    eax
  4158b5:	adc    al,BYTE PTR [ebx+0x702dd237]
  4158bb:	in     eax,0x62
  4158bd:	xor    DWORD PTR ds:[edi-0x16],eax
  4158c1:	push   edx
  4158c2:	(bad)  
  4158c3:	sub    bl,al
  4158c5:	inc    edx
  4158c6:	mov    bl,0x0
  4158c8:	fisub  WORD PTR [ebp+0x2f]
  4158cb:	popf   
  4158cc:	mov    WORD PTR [ebx],?
  4158ce:	(bad)  
  4158cf:	jb     0x41591b
  4158d1:	mov    cl,0x77
  4158d3:	mov    ds:0xdb3e09c7,eax
  4158d8:	pop    edi
  4158d9:	stos   DWORD PTR es:[edi],eax
  4158da:	ret    0xe5c4
  4158dd:	mov    esi,0xe4b5f97a
  4158e2:	ret    0x627b
  4158e5:	int    0x95
  4158e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e8:	popa   
  4158e9:	xorps  xmm3,xmm2
  4158ec:	ins    DWORD PTR es:[edi],dx
  4158ed:	jns    0x415956
  4158ef:	xchg   esp,eax
  4158f0:	adc    DWORD PTR [edx+edi*1+0x59d35cc9],0x8bedff0c
  4158fb:	outs   dx,BYTE PTR ds:[esi]
  4158fc:	ficomp WORD PTR [edx+0x7e4cdfd3]
  415902:	jmp    0x4b2b:0x8b191dcd
  415909:	push   ebp
  41590a:	sub    eax,0xcd42367
  41590f:	retf   
  415910:	sbb    esi,edi
  415912:	mov    cl,0x1
  415914:	lods   al,BYTE PTR ds:[esi]
  415915:	sub    ah,dl
  415917:	mov    bh,0xb7
  415919:	xchg   ecx,eax
  41591a:	bound  ebx,QWORD PTR [ecx+0x5014a8f9]
  415920:	sbb    dl,0x77
  415923:	scas   al,BYTE PTR es:[edi]
  415924:	ja     0x4158c5
  415926:	maskmovq mm3,mm1
  415929:	cmp    DWORD PTR [ecx*1-0x307ab0e8],0x9
  415931:	xchg   esp,eax
  415932:	jecxz  0x415959
  415934:	or     DWORD PTR [eax+ebx*2],ebx
  415937:	mov    DWORD PTR [edi+ebx*4-0xb],ebx
  41593b:	pop    ds
  41593c:	jno    0x41598c
  41593e:	imul   esi,DWORD PTR [edi-0x660fcef5],0x3c
  415945:	sub    al,0xda
  415947:	mov    DWORD PTR [ebp+0x5b],ebx
  41594a:	dec    esp
  41594b:	(bad)  
  41594c:	ss ins DWORD PTR es:[edi],dx
  41594e:	sbb    BYTE PTR [edi+ecx*1-0x2603210b],dh
  415955:	mov    ds:0xe3ef4d20,eax
  41595a:	call   0x85a6ade4
  41595f:	adc    DWORD PTR [ecx],0xfc824416
  415965:	mov    al,ds:0x936372e8
  41596a:	ins    BYTE PTR es:[edi],dx
  41596b:	inc    esi
  41596c:	hlt    
  41596d:	sub    ebx,edx
  41596f:	pop    ds
  415970:	fidivr DWORD PTR ds:0x60a43add
  415976:	or     BYTE PTR [ebp+0x4b6d3b4],cl
  41597c:	sti    
  41597d:	sbb    DWORD PTR [esi+0x5c],0xdf49ab55
  415984:	imul   ebp,DWORD PTR [ecx+eax*4+0x5a61bc69],0xfffffff7
  41598c:	adc    al,0x9f
  41598e:	mov    ah,0x5
  415990:	addr16 fwait
  415992:	inc    esp
  415993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415994:	scas   al,BYTE PTR es:[edi]
  415995:	mov    ah,0x9c
  415997:	retf   0x8f19
  41599a:	cmp    BYTE PTR [ecx],al
  41599c:	stos   BYTE PTR es:[edi],al
  41599d:	cwde   
  41599e:	outs   dx,BYTE PTR ds:[esi]
  41599f:	test   eax,0x66019bb1
  4159a4:	pop    ebx
  4159a5:	cdq    
  4159a6:	fdiv   st,st(4)
  4159a8:	ja     0x4159d0
  4159aa:	mov    ch,0x58
  4159ac:	mov    bl,dh
  4159ae:	shl    BYTE PTR [ebx+0x4a],0x3b
  4159b2:	push   es
  4159b3:	stos   BYTE PTR es:[edi],al
  4159b4:	iret   
  4159b5:	or     eax,0x3eb65f59
  4159ba:	(bad)  
  4159bb:	repz fcmovbe st,st(6)
  4159be:	outs   dx,DWORD PTR ds:[esi]
  4159bf:	clc    
  4159c0:	mov    esp,0x5cb16bb8
  4159c5:	push   ebp
  4159c6:	pusha  
  4159c7:	inc    esi
  4159c8:	mov    ebp,0xc9f5d391
  4159cd:	setb   BYTE PTR [esi]
  4159d0:	cmc    
  4159d1:	aaa    
  4159d2:	inc    ebp
  4159d3:	inc    eax
  4159d4:	jecxz  0x4159e3
  4159d6:	mov    al,ds:0xaa8e6721
  4159db:	(bad)  
  4159dd:	or     al,0x93
  4159df:	ror    esp,cl
  4159e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e2:	dec    edx
  4159e3:	cmc    
  4159e4:	jl     0x415a3c
  4159e6:	jle    0x415969
  4159e8:	nop
  4159e9:	xor    al,0x26
  4159eb:	or     eax,0x8c6c4644
  4159f0:	pop    ds
  4159f1:	pusha  
  4159f2:	and    DWORD PTR [ebp-0x2b],0x6a
  4159f6:	and    eax,ecx
  4159f8:	jge    0x4159e4
  4159fa:	ins    DWORD PTR es:[edi],dx
  4159fb:	xor    eax,0x68a2e44f
  415a00:	fs sub al,0xe3
  415a03:	sub    ebx,ecx
  415a05:	into   
  415a06:	ss ret 
  415a08:	xlat   BYTE PTR ds:[ebx]
  415a09:	nop
  415a0a:	jne    0x4159ca
  415a0c:	cmp    al,0x84
  415a0e:	jg     0x415a4d
  415a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a11:	xor    BYTE PTR [ebx-0x1d3790cd],cl
  415a17:	gs inc ecx
  415a19:	sub    ebx,DWORD PTR [edx+0x38]
  415a1c:	sub    eax,0x54a88ce9
  415a21:	sub    BYTE PTR [eax-0x6df1256e],bh
  415a27:	xor    ecx,DWORD PTR [ebx]
  415a29:	dec    ebp
  415a2a:	dec    ebx
  415a2b:	xlat   BYTE PTR ds:[ebx]
  415a2c:	push   0x616eb939
  415a31:	pop    edi
  415a32:	stc    
  415a33:	dec    esi
  415a34:	(bad)  
  415a35:	imul   edx,DWORD PTR [eax+0x26],0x1f
  415a39:	cli    
  415a3a:	into   
  415a3b:	mov    eax,0x1a700223
  415a40:	mov    ch,0xf2
  415a42:	jne    0x415a48
  415a44:	dec    esp
  415a45:	cmp    ah,dl
  415a47:	(bad)  
  415a48:	cwde   
  415a49:	push   ebp
  415a4a:	clc    
  415a4b:	or     al,0x7
  415a4d:	lods   eax,DWORD PTR ds:[esi]
  415a4e:	sbb    BYTE PTR [esp+ecx*2],al
  415a51:	add    al,0x11
  415a53:	xor    DWORD PTR [ecx],ebp
  415a55:	mov    cl,0x70
  415a57:	pop    ebx
  415a58:	ss sti 
  415a5a:	test   eax,0xc817ec43
  415a5f:	dec    esi
  415a60:	data16 lahf 
  415a62:	mov    ch,0x83
  415a64:	popa   
  415a65:	sbb    eax,0x56a5c1cf
  415a6a:	or     ah,0x7a
  415a6d:	xor    BYTE PTR [ecx+esi*1],al
  415a70:	mov    eax,0x6653f9cd
  415a75:	add    edi,DWORD PTR [ecx-0x5931f39d]
  415a7b:	pushf  
  415a7c:	xchg   ebx,eax
  415a7d:	mov    edi,0x85f6e4da
  415a82:	cwde   
  415a83:	push   ecx
  415a84:	jle    0x415abe
  415a86:	cmp    dl,0x34
  415a89:	fwait
  415a8a:	cwde   
  415a8b:	add    eax,0x6f2687d
  415a90:	dec    ebx
  415a91:	in     eax,0x6b
  415a93:	sub    al,0x68
  415a95:	inc    esi
  415a96:	fstp   TBYTE PTR [esi+0x44]
  415a99:	cmp    ch,BYTE PTR [ebp-0x74]
  415a9c:	push   esp
  415a9d:	ja     0x415a4d
  415a9f:	mov    eax,ds:0x824ea1d
  415aa4:	and    ebp,DWORD PTR [edi-0x1c]
  415aa7:	dec    edi
  415aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aa9:	add    al,0x78
  415aab:	je     0x415aa3
  415aad:	repnz adc bl,ch
  415ab0:	jl     0x415a84
  415ab2:	xchg   ecx,eax
  415ab3:	scas   eax,DWORD PTR es:[edi]
  415ab4:	sti    
  415ab5:	mov    bh,0xb2
  415ab7:	and    BYTE PTR [edx],0x6e
  415aba:	mov    WORD PTR [ecx],?
  415abc:	aas    
  415abd:	add    BYTE PTR [ebp-0x60],bh
  415ac0:	icebp  
  415ac1:	or     DWORD PTR [ecx-0x2d793e79],ebp
  415ac7:	adc    BYTE PTR [ebx],bl
  415ac9:	jp     0x415b1a
  415acb:	cmp    ecx,DWORD PTR [edi+0x44]
  415ace:	mov    ebp,0x1e8e8a3e
  415ad3:	inc    ecx
  415ad4:	ret    
  415ad5:	or     BYTE PTR [ebx-0xbc37a83],dh
  415adb:	pusha  
  415adc:	pop    ebp
  415add:	cs loop 0x415b05
  415ae0:	in     eax,0x4e
  415ae2:	pop    ss
  415ae3:	xor    ch,BYTE PTR [esi+0x5a]
  415ae6:	mov    ch,0x10
  415ae8:	mov    ?,WORD PTR [eax+0x669f0c6c]
  415aee:	fwait
  415aef:	repnz stc 
  415af1:	dec    eax
  415af2:	in     al,0x20
  415af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415af5:	jne    0x415b37
  415af7:	lods   eax,DWORD PTR ds:[esi]
  415af8:	adc    al,0xb3
  415afa:	xor    DWORD PTR [esi],edi
  415afc:	int3   
  415afd:	adc    BYTE PTR cs:[edx-0x77382f3e],ah
  415b04:	xlat   BYTE PTR ds:[ebx]
  415b05:	les    esi,FWORD PTR [eax+0x554c3550]
  415b0b:	xchg   sp,ax
  415b0d:	pop    ss
  415b0e:	and    ch,BYTE PTR [ecx+0x75e97d69]
  415b14:	test   DWORD PTR [ebx],0x3cce4fc8
  415b1a:	inc    ebp
  415b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b1c:	bound  esp,QWORD PTR [eax-0x76]
  415b1f:	cmp    bl,dh
  415b21:	bound  edi,QWORD PTR [edi-0x3789bb2]
  415b27:	jo     0x415ad3
  415b29:	out    dx,al
  415b2a:	ret    0x39a0
  415b2d:	sbb    DWORD PTR [edx],edx
  415b2f:	outs   dx,BYTE PTR ds:[esi]
  415b30:	jbe    0x415b80
  415b32:	ficom  DWORD PTR [ebx+0x3a356490]
  415b38:	cmc    
  415b39:	or     BYTE PTR [ebp+0x5a],0xa6
  415b3d:	(bad)  
  415b3e:	jg     0x415af1
  415b40:	ds cdq 
  415b42:	test   DWORD PTR [edi+0x36e9749],0xad560852
  415b4c:	push   esi
  415b4d:	dec    ebx
  415b4e:	dec    edi
  415b4f:	lods   eax,DWORD PTR ds:[esi]
  415b50:	mov    gs,WORD PTR [edi+0x4b831748]
  415b56:	adc    esp,DWORD PTR [edx]
  415b58:	jnp    0x415ae8
  415b5a:	mov    eax,0x662f5f33
  415b5f:	pop    esp
  415b60:	and    edi,edi
  415b62:	sbb    BYTE PTR [ecx-0x37],dh
  415b65:	lods   al,BYTE PTR ds:[esi]
  415b66:	test   al,0xd7
  415b68:	pop    esp
  415b69:	mov    ah,0x43
  415b6b:	test   al,0xe6
  415b6d:	call   0xdb057379
  415b72:	test   BYTE PTR [ecx+0x16fab7d4],bl
  415b78:	ret    
  415b79:	rcr    bh,0xd6
  415b7c:	out    dx,al
  415b7d:	mov    fs:0x731daf48,al
  415b83:	sbb    al,0x59
  415b85:	out    0xe0,al
  415b87:	cwde   
  415b88:	push   es
  415b89:	adc    al,0xc5
  415b8b:	stos   DWORD PTR es:[edi],eax
  415b8c:	mov    eax,ds:0x40873887
  415b91:	data16 mov dl,cl
  415b94:	adc    BYTE PTR [ebx+0x2c],cl
  415b97:	outs   dx,BYTE PTR ds:[esi]
  415b98:	sahf   
  415b99:	and    BYTE PTR [eax-0x4d7ea8bd],cl
  415b9f:	xor    BYTE PTR [ecx],cl
  415ba1:	scas   eax,DWORD PTR es:[edi]
  415ba2:	mov    cl,BYTE PTR [eax+0x71]
  415ba5:	imul   edx,DWORD PTR [ebx-0x7e],0x8116cfe6
  415bac:	lahf   
  415bad:	adc    esp,DWORD PTR [edi]
  415baf:	xlat   BYTE PTR ds:[ebx]
  415bb0:	mov    ebp,0x959ba336
  415bb5:	enter  0xf32d,0x63
  415bb9:	popa   
  415bba:	xor    eax,0xde0a8b9c
  415bbf:	fsub   st,st(0)
  415bc1:	push   ebp
  415bc2:	push   ss
  415bc3:	jae    0x415c2c
  415bc5:	cmp    BYTE PTR [esi+edi*4],0x61
  415bc9:	loope  0x415c0c
  415bcb:	adc    cl,bl
  415bcd:	mov    edx,0x41c0af1d
  415bd2:	inc    eax
  415bd3:	inc    ecx
  415bd4:	inc    esp
  415bd5:	dec    edi
  415bd6:	cwde   
  415bd7:	xchg   ebp,eax
  415bd8:	push   esp
  415bd9:	sub    al,0x70
  415bdb:	sahf   
  415bdc:	mov    dl,ch
  415bde:	ja     0x415c28
  415be0:	mov    bl,0x96
  415be2:	jno    0x415c41
  415be4:	xor    edx,DWORD PTR [esp+ebx*2-0x61]
  415be8:	mov    dl,0xce
  415bea:	mov    BYTE PTR [ecx+0x793d1fc7],bl
  415bf0:	sub    ebp,DWORD PTR [edi-0x4cfde56d]
  415bf6:	xchg   ebx,eax
  415bf7:	lds    edx,FWORD PTR [eax-0x4ac5106c]
  415bfd:	or     dh,dl
  415bff:	cmp    ebx,DWORD PTR [edx]
  415c01:	retf   0x1f0f
  415c04:	push   es
  415c05:	push   0x2a
  415c07:	pop    edi
  415c08:	out    dx,eax
  415c09:	adc    ebx,DWORD PTR [ecx-0x68]
  415c0c:	outs   dx,DWORD PTR ds:[esi]
  415c0d:	outs   dx,DWORD PTR ds:[esi]
  415c0e:	adc    DWORD PTR [ecx-0x7be5e0f8],ebx
  415c14:	call   0x26d3:0xb06f5f14
  415c1b:	(bad)  
  415c1c:	fwait
  415c1d:	cdq    
  415c1e:	sahf   
  415c1f:	sub    DWORD PTR [eax],edx
  415c21:	and    edx,DWORD PTR [ebp+0x4b]
  415c24:	pop    ebx
  415c25:	mov    ds,ebp
  415c27:	push   esi
  415c28:	xchg   DWORD PTR [ecx],esi
  415c2a:	xchg   edx,eax
  415c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c2c:	cwde   
  415c2d:	or     al,0x47
  415c2f:	pop    esi
  415c30:	popa   
  415c31:	nop
  415c32:	retf   
  415c33:	xchg   esp,eax
  415c34:	cli    
  415c35:	sub    al,0xbe
  415c37:	sub    dh,BYTE PTR [ebp+ebp*8-0x41f2f680]
  415c3e:	or     DWORD PTR [ebp+0x4a],0x88186b7
  415c45:	cwde   
  415c46:	pop    eax
  415c47:	add    BYTE PTR [eax+0x14],dh
  415c4a:	dec    ebp
  415c4b:	adc    bl,ch
  415c4d:	ret    0xa137
  415c50:	lods   al,BYTE PTR ds:[esi]
  415c51:	loop   0x415be1
  415c53:	fist   WORD PTR fs:[ebp-0x36]
  415c57:	inc    ebx
  415c58:	cdq    
  415c59:	mov    esp,0x985aa19f
  415c5e:	jg     0x415cb0
  415c60:	call   0x4c22:0x1e407c30
  415c67:	int    0x48
  415c69:	das    
  415c6a:	enter  0x57f9,0x96
  415c6e:	pop    ss
  415c6f:	sbb    DWORD PTR gs:[edi],esp
  415c72:	mov    dh,dl
  415c74:	sub    al,0x3b
  415c76:	pop    ebx
  415c77:	xchg   edi,eax
  415c78:	lock stos DWORD PTR es:[edi],eax
  415c7a:	mov    esp,0x16e37a07
  415c7f:	jne    0x415cdc
  415c81:	cmp    eax,0xcdac59e2
  415c86:	dec    edi
  415c87:	cmp    al,0x7e
  415c89:	stc    
  415c8a:	daa    
  415c8b:	sbb    BYTE PTR [ebp+0x7e],0x4f
  415c8f:	ins    DWORD PTR es:[edi],dx
  415c90:	ins    BYTE PTR es:[edi],dx
  415c91:	inc    ebx
  415c92:	xchg   BYTE PTR [edx+0x44],dl
  415c95:	aaa    
  415c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c97:	int    0x9b
  415c99:	scas   al,BYTE PTR es:[edi]
  415c9a:	(bad)  
  415c9b:	imul   edx,ebx,0x5b
  415c9e:	push   esp
  415c9f:	test   eax,0xd7b6724b
  415ca4:	and    dl,BYTE PTR [ebx+0x1f543ad6]
  415caa:	pop    eax
  415cab:	pop    eax
  415cac:	and    edx,edx
  415cae:	in     al,0xf9
  415cb0:	div    BYTE PTR [esi]
  415cb2:	cwde   
  415cb3:	add    BYTE PTR [ebx+0x75548082],bh
  415cb9:	fsubr  st(5),st
  415cbb:	adc    BYTE PTR [ebx],0x75
  415cbe:	in     al,dx
  415cbf:	or     eax,0xbff225c6
  415cc4:	jmp    0x6f4003e9
  415cc9:	pusha  
  415cca:	in     al,0x35
  415ccc:	lds    ebx,FWORD PTR [esp+edx*4+0x76d4fd9f]
  415cd3:	lahf   
  415cd4:	fsub   DWORD PTR [edx+eiz*8+0x2c60c7d8]
  415cdb:	adc    edx,DWORD PTR [edx+0x18]
  415cde:	fsub   QWORD PTR [ebx]
  415ce0:	pop    ss
  415ce1:	mov    BYTE PTR [edx-0x125fbd34],ah
  415ce7:	in     eax,dx
  415ce8:	data16 jg 0x415d62
  415ceb:	push   eax
  415cec:	int    0x6b
  415cee:	dec    edi
  415cef:	mul    ch
  415cf1:	mov    esp,0xe8d94ba7
  415cf6:	aam    0x8f
  415cf8:	sbb    DWORD PTR [edx+0x7c],0x52ddc8e9
  415cff:	push   ds
  415d00:	sub    ebx,DWORD PTR [ebp+0x58]
  415d03:	cmp    al,0xe5
  415d05:	(bad)  
  415d06:	in     eax,0x62
  415d08:	aas    
  415d09:	jns    0x415d4f
  415d0b:	cs stc 
  415d0d:	jecxz  0x415d34
  415d0f:	jmp    0x3354:0xe8cc97de
  415d16:	sar    BYTE PTR [ebx],0x7f
  415d19:	scas   eax,DWORD PTR es:[edi]
  415d1a:	mov    ebx,0xc721f5f8
  415d1f:	dec    ecx
  415d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d21:	add    ah,cl
  415d23:	inc    ebx
  415d24:	adc    esi,DWORD PTR [esi+0x749aabab]
  415d2a:	xchg   ebx,eax
  415d2b:	add    BYTE PTR [edx],al
  415d2d:	repnz and bh,BYTE PTR [ecx+0xc605723]
  415d34:	adc    bl,BYTE PTR [edx+0x5d1b2ddd]
  415d3a:	out    dx,eax
  415d3b:	sub    al,dl
  415d3d:	popa   
  415d3e:	pop    ebp
  415d3f:	sub    DWORD PTR [ecx],ebx
  415d41:	call   0x9cf4c536
  415d46:	jle    0x415d60
  415d48:	add    esi,DWORD PTR [edi-0x6a8dca2e]
  415d4e:	fldenv [ebx+0x57c31eb6]
  415d54:	wbinvd 
  415d56:	xchg   esi,eax
  415d57:	retf   
  415d58:	shl    DWORD PTR [ebx],cl
  415d5a:	jle    0x415d89
  415d5c:	test   BYTE PTR [eax+0x1f],cl
  415d5f:	imul   esi,DWORD PTR [ecx],0xffffff88
  415d62:	add    dh,BYTE PTR [edx-0x3f12516c]
  415d68:	out    0x56,al
  415d6a:	cwde   
  415d6b:	inc    ebp
  415d6c:	popa   
  415d6d:	int3   
  415d6e:	je     0x415d4a
  415d70:	je     0x415d7f
  415d72:	mov    dl,0x99
  415d74:	adc    al,0x93
  415d76:	xchg   edx,eax
  415d77:	in     al,0x9a
  415d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d7a:	cwde   
  415d7b:	mov    BYTE PTR [ebx+0x497a21a2],ah
  415d81:	mov    eax,ds:0xef4f6bb0
  415d86:	push   es
  415d87:	jmp    esp
  415d89:	loop   0x415d29
  415d8b:	sbb    al,0x31
  415d8d:	dec    ebp
  415d8e:	add    eax,0x3da86731
  415d93:	and    esi,eax
  415d95:	mov    al,0x64
  415d97:	adc    esp,DWORD PTR [ebx+0x38baae2c]
  415d9d:	dec    BYTE PTR [eax+edx*8+0xc]
  415da1:	jne    0x415db0
  415da3:	mov    ds:0x201ef867,eax
  415da8:	adc    DWORD PTR [ecx],esp
  415daa:	pop    ebp
  415dab:	fdivr  st,st(4)
  415dad:	mov    eax,0xde2031a2
  415db2:	adc    BYTE PTR [ebx+0x5237962f],cl
  415db8:	(bad)  
  415db9:	(bad)  
  415dba:	push   esi
  415dbb:	std    
  415dbc:	jae    0x415dcf
  415dbe:	mov    eax,0x65e9d0a7
  415dc3:	or     BYTE PTR [eax+0x6e1a00b1],ch
  415dc9:	mov    ds:0x11172774,eax
  415dce:	aaa    
  415dcf:	cmp    bh,BYTE PTR [ebp+0xfe87d3e]
  415dd5:	das    
  415dd6:	mov    WORD PTR [edx],fs
  415dd8:	cwd    
  415dda:	jb     0x415d9a
  415ddc:	sbb    eax,0xc23f3275
  415de1:	ss retf 0x3772
  415de5:	test   BYTE PTR [ecx+eax*2],ah
  415de8:	enter  0x697f,0x8b
  415dec:	jo     0x415dcb
  415dee:	adc    BYTE PTR [ebx-0x21e29696],al
  415df4:	ins    BYTE PTR es:[edi],dx
  415df5:	test   esp,ecx
  415df7:	add    eax,DWORD PTR [edi+0x13]
  415dfa:	test   eax,0x304faee8
  415dff:	cmc    
  415e00:	push   cs
  415e01:	int3   
  415e02:	push   ebp
  415e03:	ret    0xa302
  415e06:	cmc    
  415e07:	mov    dh,0xe5
  415e09:	popa   
  415e0a:	shl    DWORD PTR [ebp-0x69],cl
  415e0d:	mov    dl,0xc4
  415e0f:	push   esp
  415e10:	jp     0x415e7e
  415e12:	mov    ?,ebp
  415e14:	xchg   ecx,eax
  415e15:	add    cl,BYTE PTR [ebx]
  415e17:	xchg   ebx,eax
  415e18:	or     dh,BYTE PTR [ebp+0x41a24fc6]
  415e1e:	cmp    BYTE PTR [edi],bh
  415e20:	les    ebx,FWORD PTR [edi+0x5b]
  415e23:	mov    bh,BYTE PTR [edx]
  415e25:	and    DWORD PTR ds:[edx-0x5e],esp
  415e29:	fmul   st(1),st
  415e2b:	xor    BYTE PTR [esp+ecx*1-0x3b8dbe81],bl
  415e32:	pop    ecx
  415e33:	sbb    cl,BYTE PTR [edx-0x67246aee]
  415e39:	arpl   WORD PTR [eax],dx
  415e3b:	fld    QWORD PTR [esi+0x54a503ff]
  415e41:	aam    0x8e
  415e43:	daa    
  415e44:	cmp    esi,edi
  415e46:	std    
  415e47:	push   esi
  415e48:	out    0xef,eax
  415e4a:	stos   BYTE PTR es:[edi],al
  415e4b:	inc    edx
  415e4c:	(bad)  
  415e4e:	adc    DWORD PTR [edx+0x33ab7afa],ecx
  415e54:	scas   eax,DWORD PTR es:[edi]
  415e55:	jge    0x415dda
  415e57:	jmp    0x99a430ee
  415e5c:	xor    edi,DWORD PTR [esi+0x61]
  415e5f:	pop    eax
  415e60:	push   0x6d1fc8d
  415e65:	and    edi,DWORD PTR [esi]
  415e67:	add    BYTE PTR [ebx-0x41],al
  415e6a:	cmp    al,0xc5
  415e6c:	fstp   QWORD PTR [esi+0x2e]
  415e6f:	or     edx,DWORD PTR [ebx]
  415e71:	icebp  
  415e72:	pop    esp
  415e73:	out    dx,al
  415e74:	(bad)  
  415e75:	sbb    eax,0x98052784
  415e7a:	iret   
  415e7b:	adc    BYTE PTR [edi+0x7d],ah
  415e7e:	cmp    eax,0xfbb5f9f3
  415e83:	sbb    BYTE PTR gs:[ecx-0x452cf7b2],ah
  415e8a:	sahf   
  415e8b:	out    0x1b,eax
  415e8d:	cs call 0x21d3:0x8f38d317
  415e95:	sti    
  415e96:	dec    esp
  415e97:	test   al,0xd1
  415e99:	sbb    DWORD PTR [ebp-0x48113f18],0x8f8658f2
  415ea3:	test   eax,0x407fa79e
  415ea8:	shl    BYTE PTR [edx-0x16],1
  415eab:	push   ss
  415eac:	xchg   edi,eax
  415ead:	dec    edx
  415eae:	hlt    
  415eaf:	mov    DWORD PTR [ebx],0xce0e26ff
  415eb5:	sub    DWORD PTR [esi+0x6f],edx
  415eb8:	dec    eax
  415eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eba:	or     ebx,DWORD PTR [edi+0x1a462cb1]
  415ec0:	jmp    0x70e1:0xa4b7ff26
  415ec7:	push   DWORD PTR [ecx]
  415ec9:	(bad)  
  415eca:	enter  0x470e,0x6e
  415ece:	dec    ebp
  415ecf:	loop   0x415ead
  415ed1:	xlat   BYTE PTR ds:[ebx]
  415ed2:	fwait
  415ed3:	cwde   
  415ed4:	adc    al,0x2d
  415ed6:	push   eax
  415ed7:	dec    esp
  415ed8:	loop   0x415efb
  415eda:	mov    ebx,0x406e0284
  415edf:	fnstsw WORD PTR [ebx+0x3c0ac9e0]
  415ee5:	or     DWORD PTR [ebp+esi*4-0xb],0xffffffd0
  415eea:	retf   0xa8dd
  415eed:	xchg   esi,eax
  415eee:	gs jle 0x415ebc
  415ef1:	out    dx,eax
  415ef2:	dec    edx
  415ef3:	(bad)  
  415ef5:	inc    edi
  415ef6:	lahf   
  415ef7:	or     DWORD PTR [eax-0x1347cb2e],edi
  415efd:	out    dx,al
  415efe:	pop    ss
  415eff:	jns    0x415ee7
  415f01:	sub    al,al
  415f03:	add    DWORD PTR [ebx-0x2e2906df],edx
  415f09:	test   DWORD PTR ds:0x9b98657d,eax
  415f0f:	dec    esp
  415f10:	test   eax,0xfea86676
  415f15:	or     eax,DWORD PTR [eax+0x3e]
  415f18:	mov    eax,ds:0x581a8aa0
  415f1d:	imul   ecx,DWORD PTR [ecx-0x795590c0],0x85dbf74b
  415f27:	jmp    0x415f8e
  415f29:	cdq    
  415f2a:	xchg   ebx,eax
  415f2b:	jmp    0x415ee9
  415f2d:	cmc    
  415f2e:	test   BYTE PTR [ebx-0x78dcd06b],cl
  415f34:	leave  
  415f35:	sub    ah,ah
  415f37:	nop
  415f38:	dec    edx
  415f39:	sbb    eax,0x48a30b34
  415f3e:	pop    eax
  415f3f:	push   ds
  415f40:	or     BYTE PTR [esi+0x736e2c22],al
  415f46:	loopne 0x415f8b
  415f48:	loope  0x415f22
  415f4a:	test   al,0xbf
  415f4c:	push   esi
  415f4d:	inc    eax
  415f4e:	jae    0x415f06
  415f50:	inc    eax
  415f51:	mov    al,0x3e
  415f53:	and    al,0x98
  415f55:	inc    esp
  415f56:	mov    bl,0xb3
  415f58:	push   edi
  415f59:	pop    ds
  415f5a:	push   ds
  415f5b:	add    DWORD PTR [esi],eax
  415f5d:	and    edi,edx
  415f5f:	inc    ecx
  415f60:	outs   dx,BYTE PTR ds:[esi]
  415f61:	iret   
  415f62:	xor    edi,ebx
  415f64:	adc    ch,BYTE PTR [esi-0x14]
  415f67:	(bad)  
  415f68:	pushf  
  415f69:	add    esp,DWORD PTR [ebp+0x44]
  415f6c:	in     eax,dx
  415f6d:	and    eax,0x716ed79e
  415f72:	sbb    edx,DWORD PTR [edx+0x16]
  415f75:	nop
  415f76:	sbb    eax,0x37f0a3f5
  415f7b:	push   ebx
  415f7c:	adc    ecx,0x97063fb1
  415f82:	mov    DWORD PTR [ebx+0x3219d3af],ebx
  415f88:	jg     0x415fe6
  415f8a:	pop    esp
  415f8b:	pop    edi
  415f8c:	xor    BYTE PTR [ebx],bl
  415f8e:	jbe    0x415fa1
  415f90:	sbb    eax,0xd6a1bf99
  415f95:	hlt    
  415f96:	aas    
  415f97:	sar    BYTE PTR [esi],1
  415f99:	and    eax,0x230510e6
  415f9e:	loop   0x415f92
  415fa0:	or     ah,BYTE PTR [eax+0x882750b]
  415fa6:	xor    cl,bh
  415fa8:	loopne 0x41600b
  415faa:	inc    edx
  415fab:	push   ds
  415fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fad:	push   esp
  415fae:	stos   BYTE PTR es:[edi],al
  415faf:	sub    esp,DWORD PTR fs:[edi]
  415fb2:	mov    ds:0x903e9b4f,al
  415fb7:	push   0x9d9130d8
  415fbc:	push   ebp
  415fbd:	push   0x7f37c62a
  415fc2:	inc    edx
  415fc3:	retf   
  415fc4:	xor    DWORD PTR [edx],ecx
  415fc6:	loopne 0x416008
  415fc8:	or     ch,BYTE PTR [ecx+0x10cbe1ae]
  415fce:	xor    edx,DWORD PTR [esi-0x4d]
  415fd1:	pushf  
  415fd2:	cmp    ch,BYTE PTR [ecx]
  415fd4:	idiv   eax
  415fd6:	loope  0x416041
  415fd8:	out    dx,eax
  415fd9:	enter  0x9292,0x76
  415fdd:	pop    edx
  415fde:	cmp    eax,0xbe35753e
  415fe3:	inc    edi
  415fe4:	stos   DWORD PTR es:[edi],eax
  415fe5:	loop   0x416055
  415fe7:	(bad)  
  415fe8:	cmp    ch,BYTE PTR [ebx]
  415fea:	stos   BYTE PTR es:[edi],al
  415feb:	push   ss
  415fec:	mov    eax,ds:0xfa7cd302
  415ff1:	in     al,dx
  415ff2:	outs   dx,BYTE PTR ds:[esi]
  415ff3:	hlt    
  415ff4:	inc    esp
  415ff5:	ret    0x97ab
  415ff8:	lahf   
  415ff9:	or     esp,esi
  415ffb:	and    BYTE PTR [esi-0x2c412035],bl
  416001:	call   0xd8b59610
  416006:	push   esi
  416007:	inc    ebp
  416008:	retf   0x9870
  41600b:	push   ecx
  41600c:	adc    eax,DWORD PTR [esi-0x46a89983]
  416012:	test   BYTE PTR [esi+0x76],bl
  416015:	inc    edx
  416016:	fisttp QWORD PTR [esi-0x46]
  416019:	inc    edi
  41601a:	and    eax,0x4233b71c
  41601f:	(bad)  
  416020:	mov    ch,BYTE PTR [edi+0x6b]
  416023:	(bad)  
  416025:	ja     0x415fe5
  416027:	xchg   esp,eax
  416028:	sub    al,0xd3
  41602a:	xchg   esi,eax
  41602b:	int    0x5f
  41602d:	int    0x3f
  41602f:	sub    DWORD PTR [ecx],eax
  416031:	aam    0x83
  416033:	sub    edx,DWORD PTR [esi-0x12]
  416036:	mov    bh,0x30
  416038:	(bad)  
  41603a:	sub    BYTE PTR [edi+esi*8],bh
  41603d:	mov    edx,0x40c763f3
  416042:	and    ah,ch
  416044:	test   DWORD PTR [ebp+0x287efab6],0x23cb0527
  41604e:	pushf  
  41604f:	outs   dx,WORD PTR ds:[esi]
  416051:	and    DWORD PTR [esp+eax*8],esp
  416054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416055:	mov    esp,0xc5f48dbf
  41605a:	aaa    
  41605b:	or     BYTE PTR [ebx+0x24134900],ah
  416061:	push   edi
  416062:	ins    BYTE PTR es:[edi],dx
  416063:	out    dx,al
  416064:	lahf   
  416065:	mov    esi,0x9e5ccccb
  41606a:	or     al,0xc2
  41606c:	ins    DWORD PTR es:[edi],dx
  41606d:	or     ch,BYTE PTR ds:0x104db57d
  416073:	jbe    0x41608e
  416075:	sub    BYTE PTR [ebp-0x5e],0xc1
  416079:	jo     0x416061
  41607b:	jbe    0x41608f
  41607d:	loope  0x41608f
  41607f:	das    
  416080:	das    
  416081:	bnd jmp 0xd848ebcc
  416087:	fcom   DWORD PTR [edi-0x5604a378]
  41608d:	and    ch,bl
  41608f:	jno    0x416100
  416091:	xchg   edi,eax
  416092:	inc    edx
  416093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416094:	call   0x5eb:0x13d5a89
  41609b:	imul   edi,DWORD PTR [ebx],0x45
  41609e:	push   ebx
  41609f:	jp     0x416029
  4160a1:	sub    eax,0x6a338682
  4160a6:	ficomp DWORD PTR [ebp+0x75]
  4160a9:	cmp    eax,0xca68d48c
  4160ae:	sahf   
  4160af:	or     al,0xcf
  4160b1:	dec    edi
  4160b2:	inc    edi
  4160b3:	jnp    0x4160e8
  4160b5:	scas   al,BYTE PTR es:[edi]
  4160b6:	es mov eax,0xd0fa0e74
  4160bc:	xor    bl,BYTE PTR [esi+0x7]
  4160bf:	xor    DWORD PTR [ebx+0x64],ebx
  4160c2:	jnp    0x4160cc
  4160c4:	and    ebx,0xffffffc8
  4160c7:	stos   BYTE PTR es:[edi],al
  4160c8:	fwait
  4160c9:	adc    bl,ch
  4160cb:	not    ebp
  4160cd:	mov    al,0x6b
  4160cf:	mov    bl,0xdf
  4160d1:	dec    ecx
  4160d2:	rcr    BYTE PTR [esi+esi*2+0x4c2c51e6],cl
  4160d9:	mov    WORD PTR [edx+0x72551f86],cs
  4160df:	cmp    al,0x41
  4160e1:	popf   
  4160e2:	jg     0x41606d
  4160e4:	addr16 inc esp
  4160e6:	xor    bl,cl
  4160e8:	dec    ebx
  4160e9:	jb     0x4160d2
  4160eb:	in     eax,0xa3
  4160ed:	sub    esp,DWORD PTR [ebx+0x6627b823]
  4160f3:	pop    ecx
  4160f4:	sbb    cl,0xe
  4160f7:	mov    ah,0x9a
  4160f9:	je     0x4160d7
  4160fb:	pop    edi
  4160fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160fd:	inc    ebp
  4160fe:	lea    esp,[esi+edx*2+0x13]
  416102:	pand   mm5,QWORD PTR [eax+0x42ae670a]
  416109:	stc    
  41610a:	ss jge 0x4160e7
  41610d:	retf   0x3c77
  416110:	cmp    ebx,DWORD PTR [esi+0x5a]
  416113:	xor    edx,DWORD PTR [ecx-0x1357ed4]
  416119:	sub    edi,edi
  41611b:	out    0xde,al
  41611d:	dec    eax
  41611e:	ret    0xc95
  416121:	(bad)  
  416122:	cmc    
  416123:	mov    cl,0x90
  416125:	mov    ds:0xaa97d731,eax
  41612a:	pop    edx
  41612b:	jp     0x4160e6
  41612d:	addr16 jns 0x4160df
  416130:	fdivr  DWORD PTR [edi-0x33]
  416133:	shl    BYTE PTR [eax+0x63404cf6],0x67
  41613a:	mov    cl,BYTE PTR [esi+0x51078199]
  416140:	and    DWORD PTR [edx+0x6c762740],edi
  416146:	inc    ebp
  416147:	je     0x416138
  416149:	cmp    BYTE PTR [edi-0x7f],0xdb
  41614d:	in     eax,dx
  41614e:	in     al,0x45
  416150:	jle    0x4160ea
  416152:	in     eax,dx
  416153:	mov    cs,WORD PTR ds:0x60bedd50
  416159:	(bad)  
  41615a:	or     BYTE PTR ds:0xcdfe71eb,cl
  416160:	xlat   BYTE PTR ds:[ebx]
  416161:	repnz and eax,0xa57843db
  416167:	mov    edx,0x4c9ca819
  41616c:	adc    eax,0xbd7c2e08
  416171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416172:	jbe    0x41616e
  416174:	xor    eax,0x218956a8
  416179:	xchg   edx,eax
  41617a:	ret    
  41617b:	fistp  DWORD PTR [ecx-0x1b]
  41617e:	int3   
  41617f:	iret   
  416180:	xchg   ebp,eax
  416181:	jle    0x41614c
  416183:	ret    0xdf58
  416186:	(bad)  
  416187:	cld    
  416188:	div    DWORD PTR [ecx]
  41618a:	ins    DWORD PTR es:[edi],dx
  41618b:	jbe    0x4161f0
  41618d:	dec    sp
  41618f:	in     al,dx
  416190:	lahf   
  416191:	es scas al,BYTE PTR es:[edi]
  416193:	iret   
  416194:	(bad)  
  416195:	fwait
  416196:	bound  ebp,QWORD PTR [ecx-0x1d826a8]
  41619c:	push   0xb535328a
  4161a1:	cmp    ebp,0xffffff8b
  4161a4:	(bad)  
  4161a5:	mov    dl,0xcf
  4161a7:	inc    esi
  4161a8:	test   al,0xc4
  4161aa:	push   ebp
  4161ab:	and    DWORD PTR [edi],ebx
  4161ad:	js     0x41617b
  4161af:	loop   0x416195
  4161b1:	cmp    DWORD PTR [ebx-0x74],ebp
  4161b4:	inc    esi
  4161b5:	sbb    al,0x7
  4161b7:	es std 
  4161b9:	cmp    eax,0x477b98b9
  4161be:	mov    ds:0x83816d39,eax
  4161c3:	sub    eax,0x55ad501c
  4161c8:	test   edx,0x1622094d
  4161ce:	dec    esi
  4161cf:	in     eax,0x83
  4161d1:	cli    
  4161d2:	sar    esp,0xd6
  4161d5:	es (bad) 
  4161d7:	cmp    al,0x68
  4161d9:	lahf   
  4161da:	mov    eax,es
  4161dc:	ss dec ebp
  4161de:	pop    ecx
  4161df:	pop    esi
  4161e0:	into   
  4161e1:	aam    0xeb
  4161e3:	push   ebx
  4161e4:	sbb    edx,ecx
  4161e6:	sub    eax,0xa6b33b64
  4161eb:	xor    edx,esp
  4161ed:	push   ebp
  4161ee:	xchg   ecx,eax
  4161ef:	retf   
  4161f0:	cmp    edi,edi
  4161f2:	sub    esp,DWORD PTR [ebp+edi*1-0x83812a7]
  4161f9:	sbb    DWORD PTR [ebp-0x27],ebp
  4161fc:	gs hlt 
  4161fe:	mul    DWORD PTR [edx+ebx*8+0x0]
  416202:	mov    ecx,0xf5e5a44d
  416207:	cli    
  416208:	repnz mov cl,0xca
  41620b:	repz dec esi
  41620d:	adc    BYTE PTR [esi+0x51],bh
  416210:	push   ebp
  416211:	push   ecx
  416212:	inc    ecx
  416213:	and    al,0x82
  416215:	shl    DWORD PTR [edi-0x66],cl
  416218:	mov    esp,0xc00e2d7
  41621d:	add    esi,esi
  41621f:	xchg   ebx,eax
  416220:	jno    0x41626f
  416222:	gs popa 
  416224:	add    al,0xdf
  416226:	xor    eax,0xabe85ae3
  41622b:	pop    ds
  41622c:	jbe    0x4161fa
  41622e:	retf   
  41622f:	push   esp
  416230:	or     DWORD PTR [edx],ecx
  416232:	mov    cl,0x42
  416234:	xchg   esi,ecx
  416236:	sbb    ch,BYTE PTR ds:0xdb96a284
  41623c:	or     edx,edi
  41623e:	or     eax,0x2662f0a5
  416243:	iret   
  416244:	into   
  416245:	out    dx,eax
  416246:	sar    ebp,cl
  416248:	rcr    ebx,cl
  41624a:	inc    ecx
  41624b:	cmp    BYTE PTR [ecx],ah
  41624d:	jo     0x4162a2
  41624f:	test   al,0xf6
  416251:	pop    ebx
  416252:	ret    0x49e
  416255:	lds    ebx,FWORD PTR [edi]
  416257:	loope  0x416297
  416259:	adc    eax,0x8388d2df
  41625e:	rcl    BYTE PTR [ebp+0xf],cl
  416261:	neg    DWORD PTR [edi+0x1166a5c3]
  416267:	mov    es,WORD PTR [ebp-0x52]
  41626a:	pop    ss
  41626b:	cwde   
  41626c:	ja     0x4162b3
  41626e:	push   eax
  41626f:	mov    esi,ebx
  416271:	fdivr  DWORD PTR [ebp+eax*1+0x4b]
  416275:	pop    ebx
  416276:	lea    edx,es:[ecx+0x6c]
  41627a:	adc    DWORD PTR [esi-0x3ab82912],ebp
  416280:	sub    esp,DWORD PTR [ebp-0x3d]
  416283:	ret    0xc584
  416286:	mov    ebp,edi
  416288:	mov    eax,ds:0x632dda5
  41628d:	repnz repz in al,0xb8
  416291:	cwde   
  416292:	retf   
  416293:	cdq    
  416294:	enter  0xeb6a,0x6f
  416298:	sbb    eax,0x5c2a123d
  41629d:	push   ebx
  41629e:	ss jp  0x416239
  4162a1:	pop    esp
  4162a2:	imul   esp,DWORD PTR [edx+0x9f0ed79],0x129422c2
  4162ac:	xchg   esi,eax
  4162ad:	adc    eax,0xdb573f71
  4162b2:	out    0x8,al
  4162b4:	clc    
  4162b5:	test   DWORD PTR [ebp-0x5f8f715e],0x88de4e19
  4162bf:	(bad)  
  4162c0:	fst    st(7)
  4162c2:	out    dx,al
  4162c3:	fnstenv [esi+0x5571fe0a]
  4162c9:	mov    edx,0x28a6e1cb
  4162ce:	mov    ds:0x865dbd21,al
  4162d3:	push   edx
  4162d4:	inc    edi
  4162d5:	pop    es
  4162d6:	inc    edi
  4162d7:	pop    edi
  4162d8:	shl    edi,1
  4162da:	inc    ebx
  4162db:	mov    eax,ds:0x253257dd
  4162e0:	popa   
  4162e1:	mov    ds,edx
  4162e3:	inc    eax
  4162e4:	lahf   
  4162e5:	add    eax,0x55b6af8b
  4162ea:	repz pop ds
  4162ec:	xchg   DWORD PTR [edi+0x65],ebx
  4162ef:	jg     0x41631f
  4162f1:	pop    es
  4162f2:	lea    ecx,[eax-0x47]
  4162f5:	ins    DWORD PTR es:[edi],dx
  4162f6:	add    bl,BYTE PTR [esp+eiz*2]
  4162f9:	cli    
  4162fa:	xchg   edi,eax
  4162fb:	jb     0x416326
  4162fd:	in     al,dx
  4162fe:	xchg   ebp,eax
  4162ff:	and    esi,DWORD PTR [ebp+0x7a]
  416302:	or     ebp,edi
  416304:	inc    eax
  416305:	push   ebx
  416306:	pop    esi
  416307:	in     al,dx
  416308:	add    al,0xa5
  41630a:	or     DWORD PTR [edi+0x5b],0xcecd339a
  416311:	std    
  416312:	sti    
  416313:	dec    edi
  416314:	or     cl,ah
  416316:	mov    ch,0x58
  416318:	ins    DWORD PTR es:[edi],dx
  416319:	sub    edx,DWORD PTR [esp+esi*2]
  41631c:	cmp    esi,DWORD PTR [edi]
  41631e:	jge    0x4162f7
  416320:	and    eax,0xbddd1016
  416325:	repnz mov al,0x25
  416328:	cmp    DWORD PTR [ebx+eax*1],edi
  41632b:	xor    DWORD PTR [ebp-0x1],edx
  41632e:	sbb    edi,0xb
  416331:	mov    edx,0xcc0f0281
  416336:	and    al,0x24
  416338:	pop    esp
  416339:	cs pop ss
  41633b:	dec    edx
  41633c:	repz pop ds
  41633e:	cmp    BYTE PTR [esi-0x4c1d7aa],ah
  416344:	retf   
  416345:	out    0x94,eax
  416347:	loopne 0x41634d
  416349:	ret    0x47d1
  41634c:	lods   eax,DWORD PTR ds:[esi]
  41634d:	mov    ecx,0xc1fb0eb6
  416352:	out    dx,al
  416353:	adc    al,al
  416355:	stc    
  416356:	pop    edx
  416357:	cmc    
  416358:	xor    al,0x30
  41635a:	and    cl,al
  41635c:	xchg   al,dh
  41635e:	cmp    ebx,DWORD PTR [esi+ebp*1-0x2b308681]
  416365:	xchg   ecx,eax
  416366:	pop    esp
  416367:	stc    
  416368:	inc    DWORD PTR [ecx+0x7d]
  41636b:	outs   dx,BYTE PTR ds:[esi]
  41636c:	ret    0x8f7f
  41636f:	mov    ds:0xa6fb6ad1,eax
  416374:	lds    ecx,FWORD PTR [edi-0x41]
  416377:	(bad)  
  416378:	adc    al,0x3
  41637a:	aas    
  41637b:	or     DWORD PTR [esi+0x79],esp
  41637e:	icebp  
  41637f:	aaa    
  416380:	mov    eax,ds:0x3a925a47
  416385:	xchg   esp,eax
  416386:	pop    eax
  416387:	lods   eax,DWORD PTR ds:[esi]
  416388:	mov    bl,ah
  41638a:	(bad)  [ebx]
  41638c:	ds in  eax,0xd5
  41638f:	shl    BYTE PTR [ebx-0x42],0x40
  416393:	mov    dl,0xde
  416395:	xchg   ecx,eax
  416396:	xchg   ecx,eax
  416397:	fsub   QWORD PTR [eax+0x68d0179c]
  41639d:	(bad)  
  41639e:	adc    eax,0xc136c3d3
  4163a3:	inc    ebx
  4163a4:	xor    al,0x9f
  4163a6:	into   
  4163a7:	add    al,BYTE PTR [edi]
  4163a9:	lods   eax,DWORD PTR ds:[esi]
  4163aa:	dec    ecx
  4163ab:	xlat   BYTE PTR ds:[ebx]
  4163ac:	mov    esi,0x5073b144
  4163b1:	shr    BYTE PTR [ebp+0x34],cl
  4163b4:	inc    esi
  4163b5:	pop    es
  4163b6:	xchg   edx,eax
  4163b7:	aaa    
  4163b8:	mov    edi,0xb0133b41
  4163bd:	bound  ecx,QWORD PTR [edx+0x6577557f]
  4163c3:	sbb    dl,dh
  4163c5:	addr16 pop ebx
  4163c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c8:	xchg   ecx,eax
  4163c9:	fwait
  4163ca:	aaa    
  4163cb:	(bad)
  4163ce:	loop   0x416419
  4163d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d1:	call   0xd37f:0x159ac87b
  4163d8:	int    0x8b
  4163da:	les    ebp,FWORD PTR [eax-0x77]
  4163dd:	(bad)  
  4163de:	mov    edx,DWORD PTR [edx-0x4385323a]
  4163e4:	mov    ds:0xba235acb,eax
  4163e9:	lds    ebx,FWORD PTR [ecx]
  4163eb:	fcmovnb st,st(2)
  4163ed:	xchg   edx,eax
  4163ee:	adc    DWORD PTR [edi+0x542a1a7f],edx
  4163f4:	(bad)  
  4163f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f6:	add    BYTE PTR [eax-0x69],dh
  4163f9:	xchg   esp,eax
  4163fa:	add    BYTE PTR [ebp-0x4b],ch
  4163fd:	mov    bh,0xf0
  4163ff:	sub    BYTE PTR [ebp-0x44],al
  416402:	fiadd  WORD PTR [eax+0x5c]
  416405:	jo     0x4163c7
  416407:	fisubr DWORD PTR [ebx]
  416409:	retf   0x2b4
  41640c:	retf   0x448
  41640f:	cwde   
  416410:	outs   dx,DWORD PTR ds:[esi]
  416411:	xor    al,0x3e
  416413:	jg     0x4163d1
  416415:	add    DWORD PTR [esi+ebx*4-0x59],esp
  416419:	jae    0x41648c
  41641b:	jo     0x416445
  41641d:	cs (bad) 
  41641f:	into   
  416420:	repnz cmp esi,ecx
  416423:	adc    ebx,DWORD PTR [edi+0x29d5867a]
  416429:	rep ins BYTE PTR es:[edi],dx
  41642b:	or     dh,BYTE PTR [esi+0x19]
  41642e:	idiv   DWORD PTR [edi]
  416430:	pop    ebp
  416431:	inc    esp
  416432:	dec    ebp
  416433:	(bad)  
  416434:	pop    di
  416436:	dec    esp
  416437:	stos   DWORD PTR es:[edi],eax
  416438:	jno    0x41648b
  41643a:	pushf  
  41643b:	cmp    al,0x34
  41643d:	jle    0x4163fd
  41643f:	shl    DWORD PTR [ebx-0x596c569e],cl
  416445:	push   ss
  416446:	add    DWORD PTR [eax+0xaabb8a5],ebp
  41644c:	pop    eax
  41644d:	cmp    DWORD PTR [eax+edi*4+0x1b],esp
  416451:	xchg   edi,eax
  416452:	jmp    0xd6702b63
  416457:	enter  0x4e86,0x35
  41645b:	mov    bl,0x70
  41645d:	mov    al,ds:0x81d80c38
  416462:	sbb    al,BYTE PTR [edi]
  416464:	mov    ah,BYTE PTR [ebp+ecx*4+0x617868c1]
  41646b:	xchg   ah,ah
  41646d:	ror    DWORD PTR [edx],0x79
  416470:	adc    BYTE PTR fs:[edx+eax*4],0x53
  416475:	not    ebp
  416477:	xchg   edi,eax
  416478:	pop    eax
  416479:	(bad)  
  41647a:	ficom  WORD PTR [ebx+0x4d]
  41647d:	inc    edx
  41647e:	push   cs
  41647f:	lods   al,BYTE PTR ds:[esi]
  416480:	mov    edi,DWORD PTR [edx-0x6d]
  416483:	out    dx,al
  416484:	in     al,0x1c
  416486:	outs   dx,DWORD PTR ds:[esi]
  416487:	push   edx
  416488:	in     eax,dx
  416489:	loop   0x41649f
  41648b:	cwde   
  41648c:	imul   ebx,esp,0xffffffbd
  41648f:	shr    BYTE PTR [edx+0x8ae2939],0xef
  416496:	mov    cl,0x76
  416498:	mov    esi,0xc82e3f78
  41649d:	or     dl,al
  41649f:	mov    al,ds:0x91d24fe
  4164a4:	mov    eax,ds:0x7af61465
  4164a9:	ds pop ss
  4164ab:	jae    0x416442
  4164ad:	(bad)  
  4164ae:	ret    0x80ea
  4164b1:	retf   0x3ca7
  4164b4:	or     BYTE PTR [eax-0xd],cl
  4164b7:	cld    
  4164b8:	xchg   edx,eax
  4164b9:	push   cx
  4164bb:	pop    ds
  4164bc:	and    BYTE PTR [edi+0x7e0be1df],al
  4164c2:	sbb    eax,0x788568f0
  4164c7:	adc    DWORD PTR gs:[ebp+0x79],edi
  4164cb:	jle    0x416450
  4164cd:	jp     0x416478
  4164cf:	imul   eax,DWORD PTR [ebp-0xafac471],0xffffffa1
  4164d6:	or     ah,BYTE PTR [eax]
  4164d8:	outs   dx,BYTE PTR ds:[esi]
  4164d9:	lods   eax,DWORD PTR ds:[esi]
  4164da:	jmp    0xa8edfe4b
  4164df:	ins    BYTE PTR es:[edi],dx
  4164e0:	imul   esi,ebp,0xffffffa2
  4164e3:	mov    dl,0x84
  4164e5:	repnz xchg ecx,eax
  4164e7:	xchg   ecx,eax
  4164e8:	retf   
  4164e9:	test   BYTE PTR [ecx],dh
  4164eb:	imul   ebx,DWORD PTR [edx+0x2c],0x1d4e987b
  4164f2:	adc    eax,0xe3b5ac21
  4164f7:	push   0x3f0552c3
  4164fc:	out    dx,eax
  4164fd:	push   0xffffffeb
  4164ff:	jmp    esi
  416501:	test   eax,0xf798f67d
  416506:	push   ebx
  416507:	mov    ch,0x35
  416509:	push   cs
  41650a:	cmp    ebp,ebp
  41650c:	cmp    ebx,DWORD PTR [ebx-0x28]
  41650f:	xchg   DWORD PTR [edi-0x586323b2],ebx
  416515:	(bad)  
  416517:	jnp    0x4164bc
  416519:	push   ebx
  41651a:	xchg   edi,eax
  41651b:	cwde   
  41651c:	xor    eax,DWORD PTR [eax-0x57660a40]
  416522:	icebp  
  416523:	mov    bh,0x3d
  416525:	cli    
  416526:	mov    es,WORD PTR [edi-0x790d1d5f]
  41652c:	fldenv [ecx-0x5]
  41652f:	repnz scas eax,DWORD PTR es:[edi]
  416531:	dec    ebx
  416532:	cmp    eax,0xe7e922ec
  416537:	lock mov ?,WORD PTR [esi+0x35]
  41653b:	nop
  41653c:	into   
  41653d:	shl    DWORD PTR [ebp+eiz*4+0x712d76eb],0x33
  416545:	dec    ebp
  416546:	xchg   edx,eax
  416547:	or     al,0x3a
  416549:	sub    edi,esp
  41654b:	call   0xd5f7:0x6dec4a72
  416552:	aam    0xe6
  416554:	shr    DWORD PTR [ecx+0x60b769e1],cl
  41655a:	pop    es
  41655b:	mov    ds:0x7a4de198,al
  416560:	out    0xcd,eax
  416562:	cmp    DWORD PTR [esi-0x61],edi
  416565:	mov    esp,0x3188296b
  41656a:	jnp    0x4164f4
  41656c:	inc    edx
  41656d:	jg     0x41655d
  41656f:	pusha  
  416570:	mov    ds:0x63fd1d64,eax
  416575:	jp     0x41656e
  416577:	jns    0x41655a
  416579:	cmp    BYTE PTR [ecx-0x63],bl
  41657c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41657d:	inc    edi
  41657e:	sbb    DWORD PTR [edx+0x50],esi
  416581:	cli    
  416582:	mov    cl,BYTE PTR [edx]
  416584:	push   es
  416585:	lahf   
  416586:	inc    eax
  416587:	xchg   esp,eax
  416588:	fidiv  DWORD PTR [esp+edx*1+0x18]
  41658c:	(bad)  
  41658e:	stos   BYTE PTR es:[edi],al
  41658f:	pop    ds
  416590:	sbb    BYTE PTR [ebx+0x4c02b071],ah
  416596:	aam    0x29
  416598:	adc    cl,BYTE PTR [esi-0x2d]
  41659b:	mov    ah,0x8d
  41659d:	dec    bp
  41659f:	shr    BYTE PTR [ebp+0x1b18a1b7],cl
  4165a5:	repz cdq 
  4165a7:	retf   0x36e8
  4165aa:	and    DWORD PTR [esp+eax*8+0x3c3de865],esi
  4165b1:	dec    ebx
  4165b2:	into   
  4165b3:	mov    ecx,eax
  4165b5:	clc    
  4165b6:	pop    esp
  4165b7:	enter  0x64e3,0xfa
  4165bb:	push   ss
  4165bc:	mov    al,0xad
  4165be:	or     DWORD PTR [edi],0x160f357f
  4165c4:	push   ss
  4165c5:	(bad)  
  4165c6:	shl    ebx,cl
  4165c8:	sub    bl,BYTE PTR [edi-0x5c]
  4165cb:	sbb    ebx,eax
  4165cd:	in     eax,dx
  4165ce:	and    al,0xe0
  4165d0:	(bad)  
  4165d1:	cmc    
  4165d2:	rcl    DWORD PTR cs:[eax],cl
  4165d5:	and    cl,bl
  4165d7:	aas    
  4165d8:	scas   al,BYTE PTR es:[edi]
  4165d9:	lods   al,BYTE PTR ds:[esi]
  4165da:	loop   0x416605
  4165dc:	or     BYTE PTR [ebx+eiz*1-0xd1de7f3],0xe8
  4165e4:	lock push esi
  4165e6:	pop    eax
  4165e7:	or     eax,0x21e6cb13
  4165ec:	or     ebx,DWORD PTR [ecx-0x7ecb1ae8]
  4165f2:	pushf  
  4165f3:	push   ecx
  4165f4:	call   0x61cd:0x85a6fb65
  4165fb:	mov    dh,0xa
  4165fd:	cmp    BYTE PTR [edi+eax*4],dh
  416600:	cs push cs
  416602:	push   eax
  416603:	adc    BYTE PTR [ecx+edi*2+0x28],0xcf
  416608:	loopne 0x4165e3
  41660a:	xchg   esi,eax
  41660b:	mov    al,0x14
  41660d:	jp     0x4165fd
  41660f:	mov    DWORD PTR [ebx+0x2f],ecx
  416612:	adc    DWORD PTR [eax],ebx
  416614:	mov    al,0x4
  416616:	push   0xffffffff
  416618:	das    
  416619:	inc    ebx
  41661a:	and    dl,bl
  41661c:	adc    eax,0x40ee069b
  416621:	xor    eax,0xafb977fc
  416626:	sub    DWORD PTR [edx+0x5a0c4215],edx
  41662c:	bound  edi,QWORD PTR [ecx]
  41662e:	icebp  
  41662f:	xor    BYTE PTR [ecx-0x2737b42f],cl
  416635:	dec    eax
  416636:	dec    eax
  416637:	xchg   al,cl
  416639:	out    0x81,al
  41663b:	cli    
  41663c:	and    edi,DWORD PTR [esp+ebp*8]
  41663f:	repz pushf 
  416641:	push   esp
  416642:	(bad)  
  416643:	xor    cl,BYTE PTR [esi+eax*1+0x6f]
  416647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416648:	std    
  416649:	scas   eax,DWORD PTR es:[edi]
  41664a:	(bad)  
  41664b:	xor    ecx,ebp
  41664d:	mov    esp,0x71f343fa
  416652:	xlat   BYTE PTR ds:[ebx]
  416653:	push   0xffffffc8
  416655:	inc    esp
  416656:	sub    BYTE PTR [ebp-0x52567b08],dl
  41665c:	xlat   BYTE PTR ds:[ebx]
  41665d:	mov    esp,0xb77a3d00
  416662:	out    dx,al
  416663:	jmp    0x4166b2
  416665:	jle    0x4166cf
  416667:	lock cld 
  416669:	stos   BYTE PTR es:[edi],al
  41666a:	fsubrp st(0),st
  41666c:	enter  0x7207,0x2
  416670:	in     al,0xa9
  416672:	xchg   edx,eax
  416673:	fld    QWORD PTR [eax]
  416675:	dec    esp
  416676:	mov    eax,0x628496a8
  41667b:	mov    esp,0xd020428
  416680:	pop    ebx
  416681:	test   al,0xcb
  416683:	cld    
  416684:	call   0xa9ed:0x8b44af2a
  41668b:	mov    ah,0x74
  41668d:	imul   ecx,DWORD PTR [esi],0xffffff8b
  416690:	add    al,0x81
  416692:	add    edx,edi
  416694:	dec    edi
  416695:	jb     0x41663f
  416697:	dec    ebx
  416698:	pop    es
  416699:	or     al,0x46
  41669b:	loopne 0x41667e
  41669d:	push   cs
  41669e:	into   
  41669f:	xor    esp,ecx
  4166a1:	lods   al,BYTE PTR ds:[esi]
  4166a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a3:	daa    
  4166a4:	jmp    0x41666e
  4166a6:	jae    0x41663d
  4166a8:	cmp    ah,BYTE PTR [edi]
  4166aa:	pextrw edi,(bad),0xc5
  4166ac:	mov    eax,0xf417bacd
  4166b1:	pop    ebx
  4166b3:	in     eax,dx
  4166b4:	jnp    0x4166a8
  4166b6:	jae    0x416672
  4166b8:	(bad)  
  4166b9:	sub    al,BYTE PTR ds:0x7fa925f7
  4166bf:	adc    eax,0xc12c6b7b
  4166c4:	ins    DWORD PTR es:[edi],dx
  4166c5:	loope  0x4166bf
  4166c7:	push   ebp
  4166c8:	xchg   ebp,eax
  4166c9:	xlat   BYTE PTR ds:[ebx]
  4166ca:	loopne 0x4166fc
  4166cc:	and    al,0x84
  4166ce:	aas    
  4166cf:	jmp    0x416729
  4166d1:	call   0x81de583e
  4166d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166d7:	or     eax,0x12b193a1
  4166dc:	jl     0x416714
  4166de:	arpl   ax,cx
  4166e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e1:	out    0xf4,al
  4166e3:	pop    esi
  4166e4:	dec    ecx
  4166e5:	cmp    dl,ch
  4166e7:	or     al,0x84
  4166e9:	cwde   
  4166ea:	bound  ebp,QWORD PTR [eax+ecx*4+0x3b302209]
  4166f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f2:	call   0x8179a48a
  4166f7:	ja     0x4166de
  4166f9:	popa   
  4166fa:	inc    esi
  4166fb:	aaa    
  4166fc:	clc    
  4166fd:	les    edi,FWORD PTR [ebx-0x37]
  416700:	enter  0xf9af,0xcc
  416704:	(bad)  
  416705:	iret   
  416706:	inc    ebp
  416707:	dec    edi
  416708:	jne    0x416728
  41670a:	inc    esi
  41670b:	cmp    eax,0x3476bba1
  416710:	adc    eax,0xff647425
  416715:	xchg   ecx,eax
  416716:	xor    BYTE PTR [eax-0x15],dh
  416719:	dec    edi
  41671a:	adc    BYTE PTR [edx+0x542920be],0xdd
  416721:	and    DWORD PTR [edx],edi
  416723:	xor    edx,ebp
  416725:	pop    esi
  416726:	xor    DWORD PTR [esi-0x6f887b60],edx
  41672c:	mov    WORD PTR [ebp-0x3f],cs
  41672f:	lods   al,BYTE PTR ds:[esi]
  416730:	fwait
  416731:	stos   DWORD PTR es:[edi],eax
  416732:	pop    ss
  416733:	mov    eax,0x23ebd2d8
  416738:	sbb    al,0x1c
  41673a:	(bad)  
  41673b:	dec    esi
  41673c:	fnsave [eax]
  41673e:	shl    DWORD PTR [edi-0x1a],0x5f
  416742:	popa   
  416743:	mov    ah,0x24
  416745:	sar    BYTE PTR [ebp+0x6d],1
  416748:	fmul   QWORD PTR [edx]
  41674a:	xchg   ebp,eax
  41674b:	retf   
  41674c:	add    BYTE PTR [edx-0x23de4490],dh
  416752:	(bad)  
  416753:	xor    al,BYTE PTR [esi]
  416755:	push   ecx
  416756:	or     DWORD PTR [esi],esp
  416758:	cld    
  416759:	add    eax,esp
  41675b:	adc    eax,0x2b919b2
  416760:	popf   
  416761:	cmp    eax,0x1f873b25
  416766:	dec    ebp
  416767:	bound  edx,QWORD PTR [eax]
  416769:	ins    BYTE PTR es:[edi],dx
  41676a:	(bad)  
  41676b:	mov    eax,ds:0x94df9adf
  416770:	es in  al,dx
  416772:	mov    ebx,0xd29c13fb
  416777:	inc    edi
  416778:	push   ss
  416779:	push   edx
  41677a:	or     eax,0x855c9dd5
  41677f:	lahf   
  416780:	mov    ebp,0x877498da
  416785:	sahf   
  416786:	jg     0x4167f5
  416788:	out    dx,al
  416789:	hlt    
  41678a:	(bad)  
  41678b:	loope  0x41671f
  41678d:	clc    
  41678e:	lahf   
  41678f:	dec    esp
  416790:	or     ah,BYTE PTR [ebx-0x3dfe90e1]
  416796:	add    eax,0xbb64f1e0
  41679b:	sbb    edi,esi
  41679d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679e:	cmp    al,0x84
  4167a0:	pop    ss
  4167a1:	sbb    DWORD PTR [esi+0x14aa532e],ebp
  4167a7:	jb     0x416804
  4167a9:	or     esp,DWORD PTR [ecx+ecx*1]
  4167ac:	jnp    0x416747
  4167ae:	addr16 stc 
  4167b0:	sub    DWORD PTR [esi],edi
  4167b2:	jns    0x416828
  4167b4:	push   edi
  4167b5:	loopne 0x4167b6
  4167b7:	or     ch,ch
  4167b9:	jg     0x4167f3
  4167bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167bc:	lds    esi,FWORD PTR ds:0x8ecc0d04
  4167c2:	sub    DWORD PTR [edx-0x4],ecx
  4167c5:	cmp    DWORD PTR [ecx],esi
  4167c7:	test   al,0xc6
  4167c9:	stos   DWORD PTR es:[edi],eax
  4167ca:	pop    esp
  4167cb:	xchg   ecx,eax
  4167cc:	mov    WORD PTR [eax-0x7a],fs
  4167cf:	scas   al,BYTE PTR es:[edi]
  4167d0:	pop    edx
  4167d1:	imul   esi,DWORD PTR [eax-0x7f],0x6d
  4167d5:	fisub  DWORD PTR [esi-0x78]
  4167d8:	pusha  
  4167d9:	enter  0x772f,0x47
  4167dd:	enter  0xfe0c,0x24
  4167e1:	imul   eax,eax,0x9
  4167e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e5:	cmp    BYTE PTR ds:0x99ff9373,al
  4167eb:	and    al,0xb1
  4167ed:	or     al,0x22
  4167ef:	push   cs
  4167f0:	enter  0x1cdf,0x5e
  4167f4:	inc    esi
  4167f5:	jo     0x4167f4
  4167f7:	sar    DWORD PTR [esi+ebp*1],cl
  4167fa:	scas   eax,DWORD PTR es:[edi]
  4167fb:	out    dx,al
  4167fc:	aam    0xd9
  4167fe:	xchg   DWORD PTR [edi+0x69],ebx
  416801:	jae    0x416863
  416803:	cmp    BYTE PTR [ebp+esi*1+0x60],al
  416807:	mov    al,ds:0x6c32dd21
  41680c:	stos   DWORD PTR es:[edi],eax
  41680d:	sahf   
  41680e:	and    esi,edi
  416810:	jl     0x41684f
  416812:	sub    BYTE PTR [esi-0x5b5c8545],0x13
  416819:	shr    ebx,cl
  41681b:	popf   
  41681c:	sahf   
  41681d:	sub    al,BYTE PTR [edi-0x19997adb]
  416823:	test   eax,0xcc426bae
  416828:	fwait
  416829:	sub    eax,ecx
  41682b:	into   
  41682c:	jb     0x4167b7
  41682e:	jmp    0x9fe2e463
  416833:	dec    esi
  416834:	sub    esp,DWORD PTR [eax+0x61]
  416837:	fdivr  QWORD PTR [ebp+0x8660f1b]
  41683d:	push   edi
  41683e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41683f:	jmp    0x416858
  416841:	mov    eax,ds:0xa499caf9
  416846:	dec    esi
  416847:	jge    0x4168a0
  416849:	inc    ebp
  41684a:	fdivr  DWORD PTR [ebp-0x3a]
  41684d:	adc    dl,BYTE PTR [esi+0x1a]
  416850:	and    al,BYTE PTR [edx+eiz*1-0x78]
  416854:	stos   DWORD PTR es:[edi],eax
  416855:	push   esi
  416856:	and    ecx,DWORD PTR [ecx-0x34ee4cc6]
  41685c:	outs   dx,BYTE PTR ds:[esi]
  41685d:	popa   
  41685e:	test   eax,0xb2c05486
  416863:	or     ah,bl
  416865:	sbb    DWORD PTR [ebx+esi*2],esp
  416868:	cmp    al,0x43
  41686a:	jo     0x41680e
  41686c:	outs   dx,DWORD PTR ds:[esi]
  41686d:	xor    eax,0x530b75c3
  416872:	push   es
  416873:	pop    edi
  416874:	je     0x41682f
  416876:	fadd   DWORD PTR [eax+0x2f]
  416879:	lds    eax,FWORD PTR [edi-0x53]
  41687c:	mov    dh,0x60
  41687e:	loop   0x416822
  416880:	mov    bl,0x99
  416882:	inc    eax
  416883:	nop
  416884:	popa   
  416885:	push   esp
  416886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416887:	addr16 je 0x4168e7
  41688a:	popf   
  41688b:	fwait
  41688c:	jmp    0xd4ae:0x43cda03a
  416893:	out    dx,eax
  416894:	sbb    edi,DWORD PTR [ebp+0x17490127]
  41689a:	pop    ss
  41689b:	sub    esi,ebp
  41689d:	xchg   BYTE PTR ds:0x733ab056,cl
  4168a3:	ret    
  4168a4:	jp     0x416903
  4168a6:	out    0xaa,eax
  4168a8:	in     eax,0x95
  4168aa:	push   ecx
  4168ab:	in     al,0xce
  4168ad:	push   ebx
  4168ae:	je     0x416897
  4168b0:	rcl    BYTE PTR [esi-0x10],1
  4168b3:	mov    bl,BYTE PTR [edx+0x3f]
  4168b6:	jo     0x4168bb
  4168b8:	and    BYTE PTR [eax-0x63],dh
  4168bb:	mov    al,0x8c
  4168bd:	inc    esp
  4168be:	and    dl,ah
  4168c0:	mov    al,ds:0x21075fab
  4168c5:	enter  0xf8cf,0x8f
  4168c9:	cmp    DWORD PTR [ecx+0x5140023d],esp
  4168cf:	mov    edi,0x5ab90dd7
  4168d4:	pushf  
  4168d5:	hlt    
  4168d6:	add    al,0x14
  4168d8:	pop    edi
  4168d9:	push   0xffffffc5
  4168db:	inc    BYTE PTR ds:[eax]
  4168de:	in     eax,dx
  4168df:	mov    al,BYTE PTR [edi]
  4168e1:	add    DWORD PTR [ebp-0x5ae55b04],edx
  4168e7:	aad    0xad
  4168e9:	sbb    BYTE PTR ds:0x676c4adc,ah
  4168ef:	mov    dl,0xc6
  4168f1:	leave  
  4168f2:	in     al,dx
  4168f3:	std    
  4168f4:	cwde   
  4168f5:	fsub   st(0),st
  4168f7:	imul   edi,DWORD PTR [ecx-0x3be947ed],0xe3ffe4a0
  416901:	push   edx
  416902:	xchg   edi,eax
  416903:	xchg   dh,bh
  416905:	shr    DWORD PTR [ecx+0x53],1
  416908:	nop
  416909:	bnd ret 0x4df
  41690d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41690e:	out    0xbc,eax
  416910:	xor    bl,0xf7
  416913:	push   0xffffffb2
  416915:	mov    bh,0xca
  416917:	adc    dl,BYTE PTR [edx-0xa00ac47]
  41691d:	mov    edx,0xaeb2a1db
  416922:	ins    BYTE PTR es:[edi],dx
  416923:	add    edx,DWORD PTR [ebx+eiz*8+0xd]
  416927:	push   cs
  416928:	mov    ebp,0x489dc71d
  41692d:	pop    edi
  41692e:	mov    DWORD PTR [ecx+0x31c5e409],edx
  416934:	idiv   DWORD PTR [ecx]
  416936:	xor    eax,0x253f9a46
  41693b:	dec    ecx
  41693c:	xchg   BYTE PTR [edx+eax*4],al
  41693f:	cmp    al,cl
  416941:	sbb    eax,0x6dd00406
  416946:	pop    ss
  416947:	dec    ebp
  416948:	in     eax,0xfb
  41694a:	or     ebx,edi
  41694c:	mov    edx,0x870549f9
  416951:	cmc    
  416952:	pop    ebx
  416953:	xchg   esp,eax
  416954:	push   es
  416955:	ret    0xce39
  416958:	inc    ebp
  416959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41695a:	sub    eax,0xd9591673
  41695f:	xor    eax,0x65df3f1f
  416964:	or     BYTE PTR [ebx+0x54],ah
  416967:	lods   al,BYTE PTR ds:[esi]
  416968:	mov    dh,0x8a
  41696a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41696b:	jnp    0x416988
  41696d:	inc    ebp
  41696e:	stos   BYTE PTR es:[edi],al
  41696f:	adc    eax,0x8fd1c478
  416974:	xchg   cl,bh
  416976:	stos   DWORD PTR es:[edi],eax
  416977:	or     DWORD PTR [ebx-0x56],ebp
  41697a:	and    bh,BYTE PTR [edx+eiz*8-0x53]
  41697e:	ds (bad) 
  416980:	mov    dl,0x84
  416982:	push   edx
  416983:	fs icebp 
  416985:	mov    ebp,0x53f7a2c6
  41698a:	sbb    DWORD PTR [esp+edi*1],0xc7597a28
  416991:	dec    esi
  416992:	jl     0x416974
  416994:	mov    al,0x27
  416996:	pop    ecx
  416997:	mov    ebp,0xde3a74a2
  41699c:	in     eax,0x53
  41699e:	sbb    DWORD PTR [eax+edx*8],edi
  4169a1:	sub    edx,eax
  4169a3:	(bad)  
  4169a4:	lock and al,0x6d
  4169a7:	pushf  
  4169a8:	sbb    BYTE PTR [ebx+edi*8+0x37],al
  4169ac:	jmp    0x4169bb
  4169ae:	sti    
  4169af:	lods   eax,DWORD PTR ds:[esi]
  4169b0:	mov    es,WORD PTR [ecx]
  4169b2:	or     esi,DWORD PTR [ecx-0x65]
  4169b5:	out    0xa9,eax
  4169b7:	xchg   esp,eax
  4169b8:	lds    ecx,FWORD PTR [edx-0x4dd6484]
  4169be:	outs   dx,BYTE PTR ds:[esi]
  4169bf:	mov    ebx,0x9bb2ee12
  4169c4:	out    0x3,eax
  4169c6:	leave  
  4169c7:	sar    DWORD PTR [edi+0x42],0xa8
  4169cb:	cmp    cl,cl
  4169cd:	or     al,0xfd
  4169cf:	inc    ebp
  4169d0:	mov    al,0x9d
  4169d2:	dec    esi
  4169d3:	pop    ds
  4169d4:	push   es
  4169d5:	inc    ebp
  4169d6:	retf   0xe698
  4169d9:	pop    edx
  4169da:	mov    es,esp
  4169dc:	daa    
  4169dd:	lea    ebp,[edx-0x62]
  4169e0:	jg     0x416a35
  4169e2:	push   0x4a54e8b2
  4169e7:	stc    
  4169e8:	lahf   
  4169e9:	add    bl,BYTE PTR [ebp-0x30eaeb4c]
  4169ef:	lahf   
  4169f0:	int3   
  4169f1:	xor    al,0x65
  4169f3:	jae    0x416a21
  4169f5:	sub    al,0x1f
  4169f7:	dec    eax
  4169f8:	retf   0xe29e
  4169fb:	and    eax,0xce191b3
  416a00:	stos   DWORD PTR es:[edi],eax
  416a01:	sub    al,0x6
  416a03:	xchg   edi,eax
  416a04:	inc    edx
  416a05:	inc    edi
  416a06:	xor    al,0x53
  416a08:	bound  ebx,QWORD PTR [eax+0x7a]
  416a0b:	inc    edi
  416a0c:	fstp   TBYTE PTR [esi+edi*1-0x40]
  416a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a11:	fistp  QWORD PTR [edi+0x11]
  416a14:	(bad)  
  416a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a16:	lahf   
  416a17:	fild   WORD PTR [ebp-0x22]
  416a1a:	push   edx
  416a1b:	xchg   BYTE PTR [edx-0x13],bl
  416a1e:	outs   dx,BYTE PTR ds:[esi]
  416a1f:	loope  0x416a3f
  416a21:	addr16 dec esi
  416a23:	ret    0xb67e
  416a26:	push   ds
  416a27:	pop    ebx
  416a28:	ret    0x223b
  416a2b:	cmp    BYTE PTR [ebx+0x32],ah
  416a2e:	lea    ecx,[esi-0x73]
  416a31:	mov    bl,0xe
  416a33:	xchg   BYTE PTR [ebx],al
  416a35:	mov    ch,0x3b
  416a37:	push   ds
  416a38:	shr    bh,0xed
  416a3b:	inc    eax
  416a3c:	mov    dh,BYTE PTR [ebx-0x18a00fac]
  416a42:	cs loope 0x416a54
  416a45:	jno    0x416a60
  416a47:	and    ch,ah
  416a49:	cld    
  416a4a:	sub    eax,DWORD PTR [ebp+0x28]
  416a4d:	test   eax,0xbe6c6bb0
  416a52:	idiv   BYTE PTR [edx-0x49f90122]
  416a58:	lahf   
  416a59:	add    eax,0x715b6ebf
  416a5e:	mov    bh,0x7
  416a60:	mov    ebp,0x78ee9562
  416a65:	ins    DWORD PTR es:[edi],dx
  416a66:	dec    ecx
  416a67:	stos   BYTE PTR es:[edi],al
  416a68:	or     eax,0xbbf8fb1e
  416a6d:	ds popa 
  416a6f:	cld    
  416a70:	iret   
  416a71:	jo     0x416ae9
  416a73:	into   
  416a74:	ss mov cl,0x89
  416a77:	xchg   ebp,eax
  416a78:	jl     0x416a05
  416a7a:	sbb    BYTE PTR [eax-0x5044217],dl
  416a80:	push   ss
  416a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a82:	jno    0xeb75ce3e
  416a88:	jl     0x416aac
  416a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a8b:	jecxz  0x416a44
  416a8d:	mov    al,0x6a
  416a8f:	adc    al,0x5e
  416a91:	mov    fs,WORD PTR [ebx+eax*1+0x21]
  416a95:	inc    edx
  416a96:	es push esp
  416a98:	xchg   ecx,eax
  416a99:	fidiv  DWORD PTR [edi-0x2db507dc]
  416a9f:	and    eax,0x4092650
  416aa4:	sbb    bl,BYTE PTR [eax]
  416aa6:	mov    ah,0x4d
  416aa8:	fsubr  st,st(5)
  416aaa:	inc    eax
  416aab:	pop    ecx
  416aac:	popf   
  416aad:	jb     0x416ae0
  416aaf:	aad    0xb8
  416ab1:	jge    0x416b18
  416ab3:	retf   
  416ab4:	fucomi st,st(0)
  416ab6:	or     ebx,DWORD PTR [ebx]
  416ab8:	retf   0x31
  416abb:	cbw    
  416abd:	(bad)  
  416abe:	out    0x1b,eax
  416ac0:	aas    
  416ac1:	dec    ebp
  416ac2:	in     eax,0xfe
  416ac4:	aad    0x8b
  416ac6:	adc    eax,0xe0f64f20
  416acb:	push   di
  416acd:	pushf  
  416ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416acf:	push   ebx
  416ad0:	stos   BYTE PTR es:[edi],al
  416ad1:	cs and al,0xbc
  416ad4:	fadd   DWORD PTR [ebx]
  416ad6:	iret   
  416ad7:	loope  0x416aee
  416ad9:	sbb    eax,0x456e08ac
  416ade:	cmp    BYTE PTR [ebp-0x6051538d],bl
  416ae4:	mov    dl,ah
  416ae6:	call   0x702b:0x60b4e9ae
  416aed:	jge    0x416a89
  416aef:	jno    0x416a77
  416af1:	ror    eax,0x66
  416af4:	xchg   DWORD PTR [ebx+0x14],esi
  416af7:	add    DWORD PTR [ebx+0x25158e4b],ebx
  416afd:	jecxz  0x416afa
  416aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b00:	call   0x1cdd1655
  416b05:	sbb    ah,al
  416b07:	jb     0x416b08
  416b09:	adc    DWORD PTR [eax],eax
  416b0b:	mov    ch,0x3d
  416b0d:	and    bl,cl
  416b0f:	inc    ecx
  416b10:	jle    0x416b4c
  416b12:	xchg   BYTE PTR [edi+0x3d],dl
  416b15:	sub    eax,0xf2efabf
  416b1a:	adc    al,0x67
  416b1c:	push   es
  416b1d:	push   cs
  416b1e:	out    dx,eax
  416b1f:	xor    al,0x24
  416b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b22:	jae    0x416b36
  416b24:	pop    esi
  416b25:	mov    ecx,DWORD PTR [eax+0x37]
  416b28:	xchg   ecx,eax
  416b29:	cmp    dh,BYTE PTR [edx-0x2c5be600]
  416b2f:	lds    edx,FWORD PTR [ebx+ebp*1+0x79]
  416b33:	mov    ecx,0xaf72d9c4
  416b38:	fimul  WORD PTR [eax-0x5a]
  416b3b:	add    edi,edx
  416b3d:	or     BYTE PTR [edi-0x4ed12fa5],dl
  416b43:	push   ss
  416b44:	xor    DWORD PTR [ecx-0x1f],esi
  416b47:	fs mov eax,0x899778bc
  416b4d:	jmp    0x416adc
  416b4f:	lods   eax,DWORD PTR ds:[esi]
  416b50:	(bad)  
  416b52:	add    DWORD PTR [edi-0x42],edi
  416b55:	jno    0x416b17
  416b57:	test   DWORD PTR [edx-0x67],0x30e5f7c6
  416b5e:	sbb    esi,DWORD PTR [eax+eiz*4]
  416b61:	outs   dx,BYTE PTR ds:[esi]
  416b62:	lods   eax,DWORD PTR ds:[esi]
  416b63:	in     al,dx
  416b64:	mov    ds:0x195d4ee8,eax
  416b69:	dec    edi
  416b6a:	add    DWORD PTR [ecx+0x2b],esi
  416b6d:	fldenv [ecx]
  416b6f:	mov    edi,0xb43d55aa
  416b74:	jle    0x416b06
  416b76:	adc    ebp,DWORD PTR [ebx]
  416b78:	jmp    0x1759d81b
  416b7d:	stc    
  416b7e:	cmp    BYTE PTR [eax],dl
  416b80:	and    al,0x22
  416b82:	xlat   BYTE PTR ds:[ebx]
  416b83:	xor    eax,0x18c5ca04
  416b88:	dec    ecx
  416b89:	fsubr  st(2),st
  416b8b:	or     BYTE PTR [ecx],bh
  416b8d:	ret    0x994e
  416b90:	lahf   
  416b91:	mov    edi,0x7b2dc7d9
  416b96:	mov    ebx,0x94abceb1
  416b9b:	setp   BYTE PTR [edi]
  416b9e:	loope  0x416bef
  416ba0:	fwait
  416ba1:	in     al,0x72
  416ba3:	adc    bl,dh
  416ba5:	mov    ds:0xd17b55d9,eax
  416baa:	je     0x416b30
  416bac:	les    ebx,FWORD PTR [edx-0x14c5aabe]
  416bb2:	js     0x416b95
  416bb4:	jp     0x416b9a
  416bb6:	mov    ds:0xaf6c77e0,al
  416bbb:	ffreep st(4)
  416bbd:	mov    BYTE PTR [esi+eax*2+0x576be194],dl
  416bc4:	shr    DWORD PTR [edx],cl
  416bc6:	imul   BYTE PTR [eax]
  416bc8:	push   0xef033d54
  416bcd:	inc    ecx
  416bce:	add    DWORD PTR [esp+ebp*8-0x565f9847],edi
  416bd5:	cs jno 0x416c10
  416bd8:	and    dl,BYTE PTR [edi]
  416bda:	dec    esp
  416bdb:	dec    edi
  416bdc:	cmp    dl,BYTE PTR [ebx+ebx*1]
  416bdf:	jmp    0xbd645d05
  416be4:	aam    0x3c
  416be6:	aas    
  416be7:	inc    DWORD PTR [eax]
  416be9:	sub    BYTE PTR [edx],ch
  416beb:	out    0xb7,al
  416bed:	adc    eax,0x306fc84b
  416bf2:	mov    DWORD PTR [ebx-0xa3eb790],edi
  416bf8:	daa    
  416bf9:	loopne 0x416c0b
  416bfb:	arpl   WORD PTR ds:0x2d8a7f36,bx
  416c01:	jnp    0x416c0d
  416c03:	and    dh,dh
  416c05:	mov    al,0x56
  416c07:	bound  ecx,QWORD PTR [ebx-0x77]
  416c0a:	loopne 0x416bc8
  416c0c:	jg     0x416c6b
  416c0e:	ret    
  416c0f:	xchg   edi,eax
  416c10:	mov    ds:0x392f810f,eax
  416c15:	(bad)  
  416c16:	in     eax,0xf3
  416c18:	pop    ebp
  416c19:	adc    al,0x22
  416c1b:	mov    DWORD PTR [eax-0x399bc868],esi
  416c21:	call   0x1e66c6f1
  416c26:	hlt    
  416c27:	xchg   esi,eax
  416c28:	in     al,dx
  416c29:	fbstp  TBYTE PTR [edx+0x3e]
  416c2c:	icebp  
  416c2d:	sbb    al,0xb6
  416c2f:	imul   ebx,DWORD PTR [edi+0x24232bc6],0xffffff84
  416c36:	mov    ebp,0x7b5a7810
  416c3b:	rol    BYTE PTR [edx-0x5],cl
  416c3e:	pop    ecx
  416c3f:	nop
  416c40:	add    ch,BYTE PTR [edx]
  416c42:	lock xor cl,BYTE PTR [eax+edi*1]
  416c46:	ds mov ebx,0x83dd7b20
  416c4c:	xor    al,0xe7
  416c4e:	les    edx,FWORD PTR [edx]
  416c50:	inc    edx
  416c51:	(bad)
  416c54:	(bad)  
  416c55:	ds pop es
  416c57:	pop    edx
  416c58:	pop    DWORD PTR [edx+0x60]
  416c5b:	inc    esp
  416c5c:	cwde   
  416c5d:	gs jecxz 0x416cd5
  416c60:	fcos   
  416c62:	xor    eax,0x59e6f1fa
  416c67:	mov    bl,0x75
  416c69:	ins    DWORD PTR es:[edi],dx
  416c6a:	fs iret 
  416c6c:	fbstp  TBYTE PTR [ebx-0x7c70574c]
  416c72:	hlt    
  416c73:	fwait
  416c74:	sub    al,0x80
  416c76:	call   FWORD PTR [edi]
  416c78:	cmp    al,0x88
  416c7a:	jns    0x416c7d
  416c7c:	jb     0x416cf2
  416c7e:	cmp    ecx,ebx
  416c80:	xchg   BYTE PTR [ecx],al
  416c82:	lock or al,0xe8
  416c85:	fsub   QWORD PTR [eax]
  416c87:	cmp    ebx,DWORD PTR [esi+0x66]
  416c8a:	imul   edi,DWORD PTR [edi],0xa811a56c
  416c90:	push   cs
  416c91:	scas   al,BYTE PTR es:[edi]
  416c92:	out    dx,al
  416c93:	or     ebp,DWORD PTR [eax*8+0xe2febe2]
  416c9a:	jp     0x416c63
  416c9c:	aad    0x38
  416c9e:	jbe    0x416cf0
  416ca0:	test   al,0x93
  416ca2:	ret    
  416ca3:	xchg   ebp,eax
  416ca4:	pop    esi
  416ca5:	test   eax,0x2380d544
  416caa:	dec    ecx
  416cab:	cli    
  416cac:	dec    eax
  416cad:	dec    ebx
  416cae:	jle    0x416c8f
  416cb0:	dec    esp
  416cb1:	dec    edi
  416cb2:	mov    ecx,0xe4a6256b
  416cb7:	ins    BYTE PTR es:[edi],dx
  416cb8:	mov    WORD PTR [esp+edi*2-0x6e],ss
  416cbc:	stos   BYTE PTR es:[edi],al
  416cbd:	fisttp WORD PTR [esi-0x7]
  416cc0:	cmc    
  416cc1:	add    DWORD PTR [edi-0x2b2cab61],ebp
  416cc7:	mov    ds:0x1ce8bc5a,al
  416ccc:	inc    edi
  416ccd:	sub    eax,esi
  416ccf:	mov    al,ds:0x239467db
  416cd4:	inc    esp
  416cd5:	clc    
  416cd6:	ret    0x2641
  416cd9:	imul   ebp,DWORD PTR [ebp+0x6b],0xfdfd1ad5
  416ce0:	xchg   al,dl
  416ce2:	mov    ah,0xdf
  416ce4:	jmp    FWORD PTR [esi+0x7d]
  416ce7:	sti    
  416ce8:	add    bh,BYTE PTR [ecx-0xd070a3e]
  416cee:	popf   
  416cef:	xor    BYTE PTR [edi-0x46],0xe6
  416cf3:	call   0x268e:0x62f85b07
  416cfa:	in     eax,dx
  416cfb:	xchg   esi,eax
  416cfc:	fcmovne st,st(6)
  416cfe:	mov    ebp,0x355a952
  416d03:	sub    DWORD PTR ds:0x15883861,esi
  416d09:	xchg   edi,eax
  416d0a:	std    
  416d0b:	test   al,0xaa
  416d0d:	and    DWORD PTR [ebx+0x39fc5cfb],eax
  416d13:	pop    ds
  416d14:	push   0x44
  416d16:	ins    DWORD PTR es:[edi],dx
  416d17:	cld    
  416d18:	jno    0x416d95
  416d1a:	jge    0x416d43
  416d1c:	loopne 0x416cb6
  416d1e:	jge    0x416d9e
  416d20:	ret    
  416d21:	sub    al,0x9
  416d23:	push   edi
  416d24:	stos   BYTE PTR es:[edi],al
  416d25:	inc    esi
  416d26:	mov    edx,0xa3ec9bc7
  416d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d2c:	xor    ebx,DWORD PTR [edx-0x24]
  416d2f:	fst    QWORD PTR [ebp+0x77]
  416d32:	ret    
  416d33:	pop    esi
  416d34:	push   edx
  416d35:	popf   
  416d36:	cmp    al,BYTE PTR ds:0xfaba3f01
  416d3c:	es pop esi
  416d3e:	daa    
  416d3f:	push   0x815fab54
  416d44:	in     eax,0x27
  416d46:	shr    DWORD PTR [ecx+0x50],0x49
  416d4a:	lock jb 0x416da9
  416d4d:	push   ecx
  416d4e:	pop    esi
  416d4f:	push   0x194dab46
  416d54:	shl    DWORD PTR [edx+0x14],0x5d
  416d58:	mov    ah,0xa1
  416d5a:	arpl   WORD PTR [eax],si
  416d5c:	inc    BYTE PTR [ebp+0x10]
  416d5f:	fdivr  DWORD PTR [edi-0x2f]
  416d62:	add    dl,cl
  416d64:	ins    BYTE PTR es:[edi],dx
  416d65:	add    DWORD PTR [edx+0x330bff49],ebx
  416d6b:	xchg   ebp,eax
  416d6c:	imul   esi,ebp,0xc105276e
  416d72:	adc    BYTE PTR [edi],bl
  416d74:	loop   0x416d1b
  416d76:	add    DWORD PTR [ebx+0x2b630222],ebx
  416d7c:	(bad)  
  416d7d:	pop    ebx
  416d7e:	inc    edi
  416d7f:	leave  
  416d80:	or     esi,DWORD PTR gs:[edi+0x41ffab76]
  416d87:	pop    ecx
  416d88:	push   edx
  416d89:	push   edi
  416d8a:	and    ah,BYTE PTR [ebx]
  416d8c:	es sub ebx,ebp
  416d8f:	nop
  416d90:	jne    0x416d5b
  416d92:	and    eax,0xd18cf7b7
  416d97:	test   BYTE PTR [esi-0x33],0xf9
  416d9b:	jae    0x416db1
  416d9d:	mov    dl,0xc4
  416d9f:	push   eax
  416da0:	shl    DWORD PTR [ebp-0xf],cl
  416da3:	push   cs
  416da4:	sub    ebp,DWORD PTR [esi]
  416da6:	mov    ecx,DWORD PTR [ecx+0x2834381a]
  416dac:	lahf   
  416dad:	push   DWORD PTR es:[ecx]
  416db0:	mov    ds:0x5dbb5982,al
  416db5:	clc    
  416db6:	dec    eax
  416db7:	xchg   edx,eax
  416db8:	inc    esp
  416db9:	std    
  416dba:	das    
  416dbb:	jmp    0x94730fb9
  416dc0:	ds aas 
  416dc2:	shl    ch,1
  416dc4:	xor    eax,0x671ccd03
  416dc9:	dec    esp
  416dca:	fs icebp 
  416dcc:	scas   eax,DWORD PTR es:[edi]
  416dcd:	sbb    BYTE PTR [eax+0x3f00ef63],ch
  416dd3:	(bad)  
  416dd4:	sbb    dl,bh
  416dd6:	cmp    ebx,edx
  416dd8:	jnp    0x416e34
  416dda:	push   cs
  416ddb:	fsub   QWORD PTR [esi]
  416ddd:	(bad)  
  416dde:	lea    ebp,[esp+ebx*1]
  416de1:	inc    esp
  416de2:	dec    esi
  416de3:	lahf   
  416de4:	inc    edx
  416de5:	repz or DWORD PTR [edx+0x30acff97],ebx
  416dec:	mov    esp,0xddf99226
  416df1:	stc    
  416df2:	xchg   edx,eax
  416df3:	mov    WORD PTR [eax-0x4b],ds
  416df6:	mov    esp,0x8615cb33
  416dfb:	jg     0x416d99
  416dfd:	or     DWORD PTR [ecx-0x7c],ecx
  416e00:	ret    0x9a39
  416e03:	inc    edi
  416e04:	cwde   
  416e05:	dec    edx
  416e06:	call   0xa8257f9b
  416e0b:	jecxz  0x416dd4
  416e0d:	retf   0x60dc
  416e10:	loope  0x416e60
  416e12:	test   BYTE PTR [edi],al
  416e14:	adc    ch,0xde
  416e17:	xchg   esi,eax
  416e18:	test   DWORD PTR [esi-0x6f],0xcfacf2ad
  416e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e20:	sub    DWORD PTR [ecx+0x65ce9cc1],ecx
  416e26:	mov    esi,DWORD PTR [ecx-0x55]
  416e29:	hlt    
  416e2a:	or     al,0x77
  416e2c:	leave  
  416e2d:	cmp    al,0x18
  416e2f:	jp     0x416e95
  416e31:	sbb    ebx,ecx
  416e33:	std    
  416e34:	call   0x689e:0xe65fcd93
  416e3b:	push   es
  416e3c:	cmp    ch,bh
  416e3e:	add    DWORD PTR gs:[edx-0x19],esp
  416e42:	aas    
  416e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e44:	outs   dx,BYTE PTR ds:[esi]
  416e45:	jecxz  0x416e70
  416e47:	ror    BYTE PTR [esi+0x75],0x42
  416e4b:	mov    bh,0x77
  416e4d:	aam    0x33
  416e4f:	mov    cl,0x52
  416e51:	fnstenv [ebx+0x223a2f41]
  416e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e58:	inc    ebx
  416e59:	mov    cl,0x43
  416e5b:	outs   dx,BYTE PTR ds:[esi]
  416e5c:	lods   eax,DWORD PTR ds:[esi]
  416e5d:	pop    ebp
  416e5e:	cdq    
  416e5f:	add    ebx,esi
  416e61:	call   0x2aed:0x97010547
  416e68:	adc    edi,DWORD PTR [eax+0x30]
  416e6b:	jecxz  0x416e91
  416e6d:	call   0xde3:0x19e1eaf
  416e74:	jecxz  0x416e62
  416e76:	ret    
  416e77:	(bad)  
  416e78:	fwait
  416e79:	es pop ss
  416e7b:	shl    BYTE PTR [ebx+0x17],0x5c
  416e7f:	dec    ecx
  416e80:	lock push ebp
  416e82:	pop    ecx
  416e83:	mov    ebx,0x80fece7a
  416e88:	pop    edx
  416e89:	pop    es
  416e8a:	push   0xa95c080a
  416e8f:	or     BYTE PTR [ebp-0x4a127d69],0x3d
  416e96:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416e98:	mov    bl,0x23
  416e9a:	hlt    
  416e9b:	jno    0x416eb4
  416e9d:	dec    ebp
  416e9e:	cmp    ebx,DWORD PTR [edi]
  416ea0:	or     DWORD PTR [esi],esi
  416ea2:	pop    esi
  416ea3:	repz xor ecx,DWORD PTR [ecx]
  416ea6:	stc    
  416ea7:	fisub  DWORD PTR [ecx+ebp*2+0x5febfa92]
  416eae:	repz adc DWORD PTR ds:0x520a1ee7,edi
  416eb5:	push   ecx
  416eb6:	jns    0x416f27
  416eb8:	clc    
  416eb9:	mov    cl,0x34
  416ebb:	sti    
  416ebc:	sub    ebp,ebx
  416ebe:	pusha  
  416ebf:	cwde   
  416ec0:	inc    ebx
  416ec1:	mov    ecx,0x7cc3bc66
  416ec6:	cdq    
  416ec7:	out    dx,eax
  416ec8:	fsubrp st(3),st
  416eca:	dec    esp
  416ecb:	je     0x416f06
  416ecd:	adc    dh,BYTE PTR [ecx+ebx*1]
  416ed0:	inc    edx
  416ed1:	mov    ecx,0xc776a01
  416ed6:	in     al,0x3d
  416ed8:	fs lock int3 
  416edb:	es pop edx
  416edd:	sbb    al,0xb8
  416edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee0:	sub    eax,0x4d57453d
  416ee5:	sbb    eax,0x50843c9b
  416eea:	push   esp
  416eeb:	adc    cl,BYTE PTR [ecx+0x3]
  416eee:	sbb    DWORD PTR [edx],esi
  416ef0:	fs xchg esi,eax
  416ef2:	xchg   edi,eax
  416ef3:	es dec edx
  416ef5:	push   esi
  416ef6:	inc    ecx
  416ef7:	retf   
  416ef8:	adc    esi,DWORD PTR [ecx]
  416efa:	inc    esi
  416efb:	cmp    eax,0xa1e2cc09
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	mov    eax,0x9313d066
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x70
  416f24:	aam    0x4d
  416f26:	imul   ebp,DWORD PTR [esi-0x4e],0x7b6599d8
  416f2d:	loop   0x416eaf
  416f2f:	ret    0x7e0e
  416f32:	fsubr  DWORD PTR [ebx]
  416f34:	or     DWORD PTR [ebx-0x4a],esp
  416f37:	jb     0x416f29
  416f39:	jo     0x416ef5
  416f3b:	dec    esi
  416f3c:	popf   
  416f3d:	ret    
  416f3e:	arpl   WORD PTR [ebx+0x4b9ba11e],cx
  416f44:	push   0xfffffffc
  416f46:	sub    ebx,DWORD PTR [edx+ebx*4]
  416f49:	xchg   edi,eax
  416f4a:	pushf  
  416f4b:	add    eax,0xd5763808
  416f50:	add    BYTE PTR [ecx],0x58
  416f53:	icebp  
  416f54:	push   ecx
  416f55:	movaps XMMWORD PTR [ecx],xmm4
  416f58:	into   
  416f59:	out    dx,eax
  416f5a:	leave  
  416f5b:	jnp    0x416fc7
  416f5d:	lock xchg BYTE PTR [ebp+0x6fada850],dh
  416f64:	xor    eax,0xa23f6eb9
  416f69:	outs   dx,BYTE PTR ds:[esi]
  416f6a:	jmp    0x5a9a:0x7ff7e16e
  416f71:	mov    DWORD PTR [ebx],0x7b8e22c1
  416f77:	jno    0x416f4f
  416f79:	in     eax,dx
  416f7a:	imul   edx,DWORD PTR [eax+0x52],0xffffffbe
  416f7e:	aad    0x3e
  416f80:	fcomi  st,st(6)
  416f82:	xchg   BYTE PTR [ebp+0x3e82d6d2],dh
  416f88:	faddp  st(7),st
  416f8a:	sbb    esi,DWORD PTR [edx]
  416f8c:	popf   
  416f8d:	push   ecx
  416f8e:	pop    esi
  416f8f:	lds    eax,FWORD PTR ss:[esi]
  416f92:	retf   0x7848
  416f95:	les    edi,FWORD PTR [esi]
  416f97:	int3   
  416f98:	mov    DWORD PTR [ebx+ecx*8+0xe],0x48204fbc
  416fa0:	xchg   esp,eax
  416fa1:	dec    eax
  416fa2:	iret   
  416fa3:	test   eax,0x8c95673d
  416fa8:	out    dx,al
  416fa9:	not    BYTE PTR [esi+edi*8-0x67]
  416fad:	stos   DWORD PTR es:[edi],eax
  416fae:	sbb    BYTE PTR [ecx],ah
  416fb0:	jp     0x417011
  416fb2:	shr    BYTE PTR [esi],cl
  416fb4:	mul    BYTE PTR [edx-0x4]
  416fb7:	inc    ecx
  416fb8:	sti    
  416fb9:	aam    0xcc
  416fbb:	pop    esi
  416fbc:	lods   al,BYTE PTR ds:[esi]
  416fbd:	gs hlt 
  416fbf:	mov    ch,0x68
  416fc1:	pop    ecx
  416fc2:	sub    eax,0x6f8ca3a2
  416fc7:	inc    esp
  416fc8:	sub    DWORD PTR [ecx+0x37],esi
  416fcb:	test   cl,dl
  416fcd:	test   eax,0xf30b5811
  416fd2:	jp     0x416f90
  416fd4:	inc    edx
  416fd5:	pop    ebp
  416fd6:	push   0xcd72318b
  416fdb:	push   0xc7efcbd3
  416fe0:	xchg   edx,eax
  416fe1:	outs   dx,BYTE PTR ds:[esi]
  416fe2:	das    
  416fe3:	mov    ebx,0x992867b3
  416fe8:	jb     0x416f6d
  416fea:	mov    dl,0xd7
  416fec:	dec    edx
  416fed:	pop    esi
  416fee:	lods   eax,DWORD PTR ds:[esi]
  416fef:	idiv   BYTE PTR [edx-0x3c737a7d]
  416ff5:	adc    DWORD PTR [esi+0xa],esp
  416ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff9:	in     eax,dx
  416ffa:	aam    0xe9
  416ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ffd:	call   0x3f7d:0x4828c066
  417004:	adc    al,0x50
  417006:	fisub  DWORD PTR ds:0x9bf13fb6
  41700c:	aam    0x7
  41700e:	mov    ebp,edx
  417010:	cmp    BYTE PTR [edi],bl
  417012:	adc    al,0xbd
  417014:	sar    ebp,0x21
  417017:	fucomp st(0)
  417019:	dec    edi
  41701a:	iret   
  41701b:	test   BYTE PTR [edx-0x33],cl
  41701e:	pop    esi
  41701f:	mov    ds:0x66c49dbd,eax
  417024:	repnz adc ecx,DWORD PTR [ecx]
  417027:	dec    edi
  417028:	mov    ebp,0x5b96ff76
  41702d:	mov    ebx,0x6726010e
  417032:	dec    ebx
  417033:	fistp  WORD PTR [esi]
  417035:	pop    edi
  417036:	inc    esi
  417037:	xchg   ebx,eax
  417038:	pcmpgtw mm3,QWORD PTR [eax-0x65503def]
  41703f:	mov    ah,0x80
  417041:	push   ebp
  417042:	jb     0x4170a7
  417044:	sub    ah,BYTE PTR [edi+0x7af99247]
  41704a:	push   ds
  41704b:	jae    0x417031
  41704d:	and    al,0x65
  41704f:	repnz inc edi
  417051:	ret    
  417052:	aam    0x5
  417054:	rol    BYTE PTR [ecx-0x674ecbd],1
  41705a:	fidivr DWORD PTR [eax]
  41705c:	and    al,0x9b
  41705e:	ds push cs
  417060:	or     dh,ch
  417062:	cwde   
  417063:	add    ch,BYTE PTR [ecx+esi*4+0x7c]
  417067:	loopne 0x41700e
  417069:	mov    esi,0xc02f211d
  41706e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41706f:	mov    bl,0x9a
  417071:	sbb    ah,BYTE PTR [ebx+0x2b42734f]
  417077:	xor    al,0xb8
  417079:	shr    DWORD PTR [ecx+eax*2],0xb
  41707d:	loop   0x4170c4
  41707f:	gs sbb al,0xfa
  417082:	and    BYTE PTR [esi+edx*1-0x1f917a07],ch
  417089:	loope  0x41704d
  41708b:	jl     0x417076
  41708d:	mov    es,WORD PTR [ebx]
  41708f:	sub    esi,esi
  417091:	shl    esp,0x23
  417094:	xor    dl,BYTE PTR [ecx]
  417096:	fcomip st,st(2)
  417098:	mov    ebp,0x455f20e1
  41709d:	in     eax,0x62
  41709f:	jmp    0xd7b3:0x98f2ff31
  4170a6:	push   ds
  4170a7:	cmp    DWORD PTR [ecx+0x45a519f1],0xae9c8c8b
  4170b1:	pop    esp
  4170b2:	shl    BYTE PTR es:[esi+edi*8+0x7b],0xe2
  4170b8:	sub    eax,0xd45c9e38
  4170bd:	rol    BYTE PTR [ebp+eiz*4-0x38],1
  4170c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c2:	pop    ebx
  4170c3:	xchg   BYTE PTR [eax-0x36ace629],bh
  4170c9:	ret    0x6fb3
  4170cc:	je     0x417120
  4170ce:	add    BYTE PTR [ebp-0x36e412ff],al
  4170d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d5:	lock push esp
  4170d7:	or     al,0x81
  4170d9:	rol    BYTE PTR [ebx],1
  4170db:	mov    bh,0x78
  4170dd:	sub    BYTE PTR [ecx+0x77],dh
  4170e0:	mov    esi,esi
  4170e2:	and    BYTE PTR [ecx+0x7e],dl
  4170e5:	dec    esi
  4170e6:	inc    esi
  4170e7:	cmp    ch,BYTE PTR [ebx-0x6917d9c7]
  4170ed:	xchg   ebp,eax
  4170ee:	outs   dx,BYTE PTR ds:[esi]
  4170ef:	mov    ebx,0xf6254dbe
  4170f4:	jno    0x417110
  4170f6:	stos   BYTE PTR es:[edi],al
  4170f7:	cli    
  4170f8:	sbb    BYTE PTR [ecx-0x50a7dc7d],cl
  4170fe:	jmp    0x4170ca
  417100:	mov    dl,0x95
  417102:	jne    0x417141
  417104:	fnsave ds:0xe87820e1
  41710a:	push   cs
  41710b:	sub    dh,0xcc
  41710e:	std    
  41710f:	adc    eax,0x9dfff9c5
  417114:	sub    ch,bh
  417116:	push   ss
  417117:	test   eax,0xb6590889
  41711c:	test   DWORD PTR [edi],edi
  41711e:	fs or  eax,0x9c36980d
  417124:	xchg   edx,eax
  417125:	out    0x83,eax
  417127:	jmp    0x41711a
  417129:	cdq    
  41712a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41712b:	jmp    0x67dc:0xfd5f6ea0
  417132:	jae    0x417101
  417134:	mov    ebp,0x2ab0150c
  417139:	mov    ebp,0xfa6dd222
  41713e:	popa   
  41713f:	pop    eax
  417140:	(bad)  
  417141:	cmp    eax,0x6a229523
  417146:	add    edx,edx
  417148:	test   eax,0x934fce58
  41714d:	ret    0x870f
  417150:	jns    0x41715a
  417152:	and    ecx,ecx
  417154:	fist   DWORD PTR [ebp+0x28]
  417157:	repnz pop edx
  417159:	push   0xffffffde
  41715b:	fmul   st,st(5)
  41715d:	nop
  41715e:	xchg   DWORD PTR [ebx+0xda12190],eax
  417164:	hlt    
  417165:	mov    esi,0xca199a56
  41716a:	cdq    
  41716b:	lods   al,BYTE PTR ds:[esi]
  41716c:	jo     0x41712a
  41716e:	repz enter 0xdb4f,0xa4
  417173:	call   0xa0b6:0x49cc724d
  41717a:	ja     0x417180
  41717c:	cmp    DWORD PTR [eax],0x73e4daa0
  417182:	into   
  417183:	daa    
  417184:	cmp    DWORD PTR [ebp+0x1a],edx
  417187:	fldenv [ebx+0x50]
  41718a:	mov    al,0x82
  41718c:	pop    es
  41718d:	sub    BYTE PTR [esi-0x5a162c6d],al
  417193:	pcmpgtd mm0,QWORD PTR [edx]
  417196:	rcr    DWORD PTR [eax-0x1ef6019b],0x10
  41719d:	fnsetpm(287 only) 
  41719f:	add    dh,BYTE PTR [eax-0x31]
  4171a2:	ins    DWORD PTR es:[edi],dx
  4171a3:	add    DWORD PTR [ebp-0x4037366d],0x788264a3
  4171ad:	mov    dh,0xaa
  4171af:	std    
  4171b0:	sub    dh,dl
  4171b2:	xor    ebx,DWORD PTR [edx]
  4171b4:	mov    BYTE PTR [eax+0x10bfd60d],bh
  4171ba:	jb     0x417209
  4171bc:	mov    ebx,0x8651ea7c
  4171c1:	jmp    0x4171f2
  4171c3:	lods   eax,DWORD PTR ds:[esi]
  4171c4:	arpl   WORD PTR [ebx+0x6c],bp
  4171c7:	push   es
  4171c8:	jg     0x4171ce
  4171ca:	jae    0x417202
  4171cc:	mov    bh,0xd9
  4171ce:	mov    ds:0x7eebf979,eax
  4171d3:	mov    ds:0x318064a6,eax
  4171d8:	inc    edi
  4171d9:	inc    edi
  4171da:	mov    edx,0x7a93b2e4
  4171df:	clc    
  4171e0:	repnz dec ebx
  4171e2:	add    eax,0x67dd03de
  4171e7:	sbb    cl,0xee
  4171ea:	int    0xfc
  4171ec:	ret    0x83e5
  4171ef:	mov    al,0xcb
  4171f1:	cwde   
  4171f2:	and    DWORD PTR [eax],ebx
  4171f4:	push   ecx
  4171f5:	(bad)  
  4171f6:	xchg   esi,eax
  4171f7:	mov    edi,0xf899108
  4171fc:	(bad)  
  4171fd:	into   
  4171fe:	xor    BYTE PTR [edi],cl
  417200:	push   ds
  417201:	jb     0x4171d5
  417203:	jns    0x4171f1
  417205:	mov    ecx,0xbde0d350
  41720a:	add    DWORD PTR es:[edi-0x35cd6b20],0xee1c9324
  417215:	popf   
  417216:	inc    ebx
  417217:	sbb    eax,0xd465ff59
  41721c:	stos   BYTE PTR es:[edi],al
  41721d:	(bad)  
  41721f:	les    esi,FWORD PTR [ecx+0x55]
  417222:	pop    eax
  417223:	mov    BYTE PTR [ebx+0x3f],0xb
  417227:	jns    0x417220
  417229:	wbinvd 
  41722b:	jge    0x41727b
  41722d:	mov    ch,bh
  41722f:	jl     0x4171c7
  417231:	addr16 push esp
  417233:	sbb    al,0xec
  417235:	xor    BYTE PTR [eax+0x7d],dl
  417238:	pop    esp
  417239:	mov    edx,0x76db3cf4
  41723e:	xor    al,0x39
  417240:	cmp    DWORD PTR [esp+edx*2+0x8],esp
  417244:	fmul   QWORD PTR [ebx]
  417246:	arpl   ax,bx
  417248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417249:	xchg   edx,eax
  41724a:	iret   
  41724b:	iret   
  41724c:	cmp    DWORD PTR [ebx],ebx
  41724e:	mov    al,ds:0x72004acc
  417253:	jge    0x417264
  417255:	dec    ebx
  417256:	push   ds
  417257:	sbb    al,0x26
  417259:	or     al,0xab
  41725b:	dec    edx
  41725c:	xchg   ecx,eax
  41725d:	sar    DWORD PTR [edi-0x79],0x15
  417261:	xlat   BYTE PTR ds:[ebx]
  417262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417263:	cdq    
  417264:	mov    edi,0xe560388a
  417269:	sahf   
  41726a:	and    al,0x9
  41726c:	sahf   
  41726d:	cmp    al,0xd9
  41726f:	mov    ebp,0x5fc8fdf1
  417274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417275:	mov    eax,0x4040fd63
  41727a:	lods   eax,DWORD PTR ds:[esi]
  41727b:	push   edx
  41727c:	inc    ecx
  41727d:	fisttp WORD PTR [ebp-0x35]
  417280:	test   DWORD PTR [ebp-0x16f8f983],ebp
  417286:	int3   
  417287:	and    eax,0x187e82a9
  41728c:	xor    eax,0x44a6a6e5
  417291:	cmp    esp,DWORD PTR [ebx]
  417293:	jg     0x41723c
  417295:	imul   ecx,DWORD PTR [esp+eax*2+0x74],0x8c1a6750
  41729d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729e:	and    al,0x79
  4172a0:	push   0xffffffb6
  4172a2:	push   0x33
  4172a4:	mov    DWORD PTR [eax],ebp
  4172a6:	std    
  4172a7:	push   edi
  4172a8:	push   edi
  4172a9:	imul   DWORD PTR [esi+0x4a]
  4172ac:	call   0x4116:0xb661ed7b
  4172b3:	in     eax,dx
  4172b4:	not    DWORD PTR [esi+ebx*2]
  4172b7:	mov    WORD PTR [edi+0x22],cs
  4172ba:	stos   BYTE PTR es:[edi],al
  4172bb:	xor    BYTE PTR [edx-0x78],cl
  4172be:	imul   eax,DWORD PTR [ecx-0x342dced1],0x2edc7880
  4172c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c9:	cwde   
  4172ca:	pop    ss
  4172cb:	je     0x4172e9
  4172cd:	or     eax,DWORD PTR [ebp+ecx*1-0x34e9876]
  4172d4:	and    al,0xb5
  4172d6:	mov    dl,0x75
  4172d8:	mov    WORD PTR [edi+0x34],gs
  4172db:	jns    0x4172b9
  4172dd:	addr16 adc cl,ch
  4172e0:	adc    al,0xc9
  4172e2:	sahf   
  4172e3:	xor    DWORD PTR [ecx+ebx*1-0x4dbc98ae],0x3ebe6aa9
  4172ee:	mov    dh,0x16
  4172f0:	test   DWORD PTR [ebx],0x87af0156
  4172f6:	addr16 add al,0x4b
  4172f9:	lods   al,BYTE PTR ds:[esi]
  4172fa:	pushf  
  4172fb:	aad    0x51
  4172fd:	(bad)  
  4172fe:	dec    edi
  4172ff:	push   0x64e2300b
  417304:	push   edi
  417305:	add    al,0x8d
  417307:	mov    ?,ebp
  417309:	test   DWORD PTR [edx+0x545daf66],eax
  41730f:	aas    
  417310:	sbb    DWORD PTR [eax],ebx
  417312:	sub    edi,DWORD PTR [edx]
  417314:	fdivr  DWORD PTR [ecx+0x50d97d54]
  41731a:	in     eax,0xa5
  41731c:	repz fild WORD PTR [edx-0x4690c83d]
  417323:	xor    DWORD PTR [ecx-0xf],0x81a7839d
  41732a:	mov    dl,BYTE PTR [esi+0x34]
  41732d:	in     al,dx
  41732e:	or     DWORD PTR [ebp-0x7a],esi
  417331:	cld    
  417332:	xor    ecx,DWORD PTR [ebp+0x49]
  417335:	xlat   BYTE PTR ds:[ebx]
  417336:	aad    0xf1
  417338:	pop    edx
  417339:	add    edi,DWORD PTR [ebp+0x3c]
  41733c:	add    DWORD PTR [ecx+0x53],ebp
  41733f:	arpl   WORD PTR [ebx+esi*4+0x1a],bp
  417343:	push   cs
  417344:	arpl   WORD PTR [ecx-0x5],bx
  417347:	inc    edx
  417348:	lds    ebp,FWORD PTR [edx+0x63]
  41734b:	adc    DWORD PTR [eax],esp
  41734d:	(bad)  
  41734f:	call   0xe7ca98c8
  417354:	dec    edx
  417355:	imul   DWORD PTR [esi-0x7e9fb1dc]
  41735b:	cmp    DWORD PTR [ecx+0x13],ebp
  41735e:	xor    al,0xca
  417360:	dec    edx
  417361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417362:	ins    BYTE PTR es:[edi],dx
  417363:	mov    ecx,0x1c1b43af
  417368:	imul   esi,DWORD PTR [esi+0x2c3be391],0x585c9c44
  417372:	retf   
  417373:	ins    BYTE PTR es:[edi],dx
  417374:	push   ecx
  417375:	dec    eax
  417376:	jecxz  0x4173bd
  417378:	dec    eax
  417379:	lea    edx,[edx+0x54ad8437]
  41737f:	jl     0x4173d6
  417381:	dec    edx
  417382:	cs sub eax,0xbb8d3d55
  417388:	xchg   ecx,eax
  417389:	xchg   edi,eax
  41738a:	fst    QWORD PTR [edx-0x5c]
  41738d:	pop    es
  41738e:	retf   
  41738f:	lods   al,BYTE PTR ds:[esi]
  417390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417391:	in     eax,0xd0
  417393:	outs   dx,BYTE PTR ds:[esi]
  417394:	push   0x59
  417396:	jnp    0x417407
  417398:	mov    al,ch
  41739a:	inc    eax
  41739b:	paddsb mm2,QWORD PTR [ebx+eiz*4-0x53]
  4173a0:	sub    dh,bh
  4173a2:	test   al,0xb7
  4173a4:	in     al,0x5b
  4173a6:	adc    DWORD PTR [ebp+0x46],ebp
  4173a9:	lods   al,BYTE PTR ds:[esi]
  4173aa:	xchg   edi,eax
  4173ab:	lds    ecx,FWORD PTR [esi-0x5d]
  4173ae:	dec    esp
  4173af:	repnz xor ebp,ebx
  4173b2:	push   0x5996aa56
  4173b7:	xchg   edi,eax
  4173b8:	repnz hlt 
  4173ba:	aaa    
  4173bb:	in     al,dx
  4173bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173bd:	cwde   
  4173be:	jno    0x417401
  4173c0:	sbb    DWORD PTR [edi],esp
  4173c2:	inc    ecx
  4173c3:	int    0x49
  4173c5:	cmp    al,0xb
  4173c7:	mov    dl,0x45
  4173c9:	push   ebx
  4173ca:	shl    BYTE PTR [eax+edx*1],1
  4173cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ce:	dec    eax
  4173cf:	push   edx
  4173d0:	cmp    eax,0xb0133331
  4173d5:	daa    
  4173d6:	push   0xffffffec
  4173d8:	(bad)  
  4173d9:	and    BYTE PTR [ebp+0x7e],bh
  4173dc:	sahf   
  4173dd:	gs daa 
  4173df:	jo     0x4173ef
  4173e1:	mov    cl,0xca
  4173e3:	xlat   BYTE PTR ds:[ebx]
  4173e4:	xchg   edi,eax
  4173e5:	lods   eax,DWORD PTR ds:[esi]
  4173e6:	jl     0x4173af
  4173e8:	int    0x48
  4173ea:	dec    edx
  4173eb:	jle    0x4173fb
  4173ed:	sahf   
  4173ee:	or     eax,0x5f9f32a9
  4173f3:	aas    
  4173f4:	jecxz  0x417387
  4173f6:	(bad)  
  4173f7:	fdiv   st,st(1)
  4173f9:	jmp    0xfa42:0x6d6cea20
  417400:	retf   
  417401:	fnstcw WORD PTR [ecx]
  417403:	scas   eax,DWORD PTR es:[edi]
  417404:	mov    eax,ds:0x9bca246
  417409:	xor    al,0xb0
  41740b:	pusha  
  41740c:	push   cs
  41740d:	fwait
  41740e:	sub    DWORD PTR [ecx],esp
  417410:	shl    DWORD PTR [ebx],0xd0
  417413:	or     esi,DWORD PTR [edx+0x169ef873]
  417419:	pusha  
  41741a:	xor    eax,DWORD PTR [ecx+0x622d4cf0]
  417420:	clc    
  417421:	adc    cl,dl
  417423:	pop    ecx
  417424:	jp     0x417456
  417426:	fild   WORD PTR [edx]
  417428:	lods   eax,DWORD PTR ds:[esi]
  417429:	dec    ecx
  41742a:	push   0xea90e32f
  41742f:	or     ah,0xd1
  417432:	das    
  417433:	aam    0xda
  417435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417436:	test   BYTE PTR [edx-0x3],ah
  417439:	sbb    esp,DWORD PTR [esi+0x23b795a2]
  41743f:	rcr    DWORD PTR [ecx-0x2265438b],1
  417445:	fst    DWORD PTR [ecx-0xd09cbcf]
  41744b:	or     DWORD PTR [edi-0x35],eax
  41744e:	push   ebp
  41744f:	loop   0x4173dd
  417451:	and    BYTE PTR [eax],ch
  417453:	push   eax
  417454:	sbb    al,0x25
  417456:	test   esp,ebp
  417458:	mov    WORD PTR [edi],fs
  41745a:	mov    esi,cs
  41745c:	fwait
  41745d:	adc    eax,0xd6466095
  417462:	out    0xd1,eax
  417464:	out    0x96,al
  417466:	inc    esp
  417467:	mov    edi,0x3927f7a7
  41746c:	mov    eax,0x6b728cdf
  417471:	sub    ch,BYTE PTR [edx+0x72]
  417474:	jmp    0x504c:0x78033fa5
  41747b:	xor    bl,0xc1
  41747e:	add    BYTE PTR ss:0x80686e13,ah
  417485:	dec    edx
  417486:	aaa    
  417487:	push   ebx
  417488:	stc    
  417489:	jle    0x41750a
  41748b:	xor    bh,BYTE PTR [ebp-0x3f785fa]
  417491:	stos   DWORD PTR es:[edi],eax
  417492:	inc    edx
  417493:	pop    ds
  417494:	mov    ds:0x7c5ca71,eax
  417499:	loop   0x417469
  41749b:	jae    0x41750a
  41749d:	and    sp,WORD PTR [ebp-0x4d0eb95b]
  4174a4:	xchg   DWORD PTR [esi-0x730cab7e],esp
  4174aa:	out    dx,al
  4174ab:	popf   
  4174ac:	rol    BYTE PTR [ebp+0x1e],0x77
  4174b0:	(bad)  
  4174b1:	push   esp
  4174b2:	mov    al,ds:0xc801d596
  4174b7:	push   es
  4174b8:	push   ecx
  4174b9:	(bad)  
  4174ba:	jge    0x4174db
  4174bc:	xlat   BYTE PTR ds:[ebx]
  4174bd:	fisttp QWORD PTR [esi+edx*1-0x63]
  4174c1:	mov    al,ds:0x2c037bfa
  4174c6:	jmp    0x417468
  4174c8:	adc    BYTE PTR [di],0x7e
  4174cc:	ins    DWORD PTR es:[edi],dx
  4174cd:	dec    esp
  4174ce:	imul   eax,ebp,0xbfbe4d88
  4174d4:	pop    ebp
  4174d5:	xchg   edi,eax
  4174d6:	sbb    ch,BYTE PTR [ebp+0x3d2ed1c6]
  4174dc:	ror    dh,1
  4174de:	or     al,0xbf
  4174e0:	fnclex 
  4174e2:	mov    ebx,fs
  4174e4:	add    eax,0x744df69d
  4174e9:	sbb    BYTE PTR [ebx+0x1ced3bf0],dl
  4174ef:	mov    ds:0xabe237d4,eax
  4174f4:	adc    eax,0x969668ed
  4174f9:	or     dl,dh
  4174fb:	es data16 in al,dx
  4174fe:	xor    DWORD PTR [ebx-0x23],ebx
  417501:	in     eax,0x63
  417503:	mov    WORD PTR [edi-0x7cf5a914],?
  417509:	retf   0xfec6
  41750c:	test   eax,0xb72668b
  417511:	dec    edx
  417512:	shl    BYTE PTR [ecx+0xb],cl
  417515:	fdivr  QWORD PTR ds:0xc77e1751
  41751b:	mov    edi,0xd39a47ee
  417520:	push   ecx
  417521:	dec    ecx
  417522:	push   esp
  417523:	pop    edx
  417524:	adc    al,0xf0
  417526:	pop    ds
  417527:	xchg   ebp,eax
  417528:	fldcw  WORD PTR [ecx+0x7f1613da]
  41752e:	outs   dx,BYTE PTR ds:[esi]
  41752f:	fcom   DWORD PTR [ecx]
  417531:	pop    ebp
  417532:	push   ss
  417533:	mov    ds:0x2456a7e6,al
  417538:	xchg   DWORD PTR [ecx],ebp
  41753a:	xchg   ebx,eax
  41753b:	test   BYTE PTR [edx-0x4d6a196a],ch
  417541:	sub    ecx,DWORD PTR [edx+ecx*4]
  417544:	pusha  
  417545:	sbb    DWORD PTR [ecx-0x71ee80a0],0x4f7e6aa2
  41754f:	(bad)
  417552:	pop    ecx
  417553:	xchg   edx,eax
  417554:	mov    al,ds:0x85c7df33
  417559:	pop    esp
  41755a:	cmp    esi,esi
  41755c:	imul   eax,DWORD PTR [ebx+0x1f],0xe19faee3
  417563:	mov    WORD PTR [ecx+0x1c84c814],cs
  417569:	ficom  DWORD PTR [esi-0x2aa0fe90]
  41756f:	enter  0xe399,0xb9
  417573:	loopne 0x4174fd
  417575:	lock das 
  417577:	jnp    0x417524
  417579:	lahf   
  41757a:	jo     0x41758d
  41757c:	jge    0x417527
  41757e:	sub    eax,0xa93b3114
  417583:	test   DWORD PTR [esi+edx*2],0x54423387
  41758a:	push   ebx
  41758b:	add    cl,BYTE PTR [ecx+edi*2]
  41758e:	mov    edx,0x1e540af1
  417593:	adc    eax,0x81cac150
  417598:	sbb    BYTE PTR [ebx-0x4cba6e4],dh
  41759e:	mov    esi,DWORD PTR [ecx]
  4175a0:	cwde   
  4175a1:	call   FWORD PTR [ebp+0x4ba3cf5c]
  4175a7:	mov    ds:0x1a7721e9,al
  4175ac:	js     0x41757b
  4175ae:	fist   DWORD PTR [edx-0x78]
  4175b1:	adc    al,BYTE PTR [ebp+0x3b54429d]
  4175b7:	ret    0x9ea6
  4175ba:	pop    edx
  4175bb:	scas   al,BYTE PTR es:[edi]
  4175bc:	pop    ebp
  4175bd:	iret   
  4175be:	xchg   esp,eax
  4175bf:	inc    eax
  4175c0:	lahf   
  4175c1:	dec    ebx
  4175c2:	je     0x4175b0
  4175c4:	jbe    0x41759b
  4175c6:	sbb    ecx,DWORD PTR [ebx]
  4175c8:	xor    al,bh
  4175ca:	mov    ebx,0x1d4b9133
  4175cf:	pop    ss
  4175d0:	and    DWORD PTR [esi+0x49],eax
  4175d3:	sub    al,0x2c
  4175d5:	mov    cl,BYTE PTR cs:[edx]
  4175d8:	retf   0xdba2
  4175db:	cmp    eax,eax
  4175dd:	sbb    eax,DWORD PTR [eax-0x5c]
  4175e0:	rcl    ah,1
  4175e2:	gs and esp,0xffffffdd
  4175e6:	sbb    esp,DWORD PTR [esi-0x7f]
  4175e9:	mov    esp,DWORD PTR [edi]
  4175eb:	or     eax,0x68b6fbda
  4175f0:	clc    
  4175f1:	pushf  
  4175f2:	dec    esp
  4175f3:	sub    ah,BYTE PTR [edx+ebp*8+0x1407c6f0]
  4175fa:	ds mov ecx,0x57ef7289
  417600:	mov    ecx,0x3cc9ce1e
  417605:	mov    ?,WORD PTR [esi-0x3a]
  417608:	jmp    0x7c6d5cce
  41760d:	les    ebx,FWORD PTR [edx]
  41760f:	fadd   QWORD PTR [ebx+0x2a]
  417612:	mov    ecx,ebx
  417614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417615:	retf   
  417616:	pop    ecx
  417617:	jno    0x417659
  417619:	xchg   DWORD PTR [edx+0x4747be24],edx
  41761f:	in     eax,dx
  417620:	ins    DWORD PTR es:[edi],dx
  417621:	imul   ecx,DWORD PTR [esi+0x7f],0x4f83fd1a
  417628:	cmp    al,0x63
  41762a:	jg     0x4175c2
  41762c:	mov    dl,0x68
  41762e:	in     al,dx
  41762f:	push   edi
  417630:	retf   
  417631:	push   esp
  417632:	cwde   
  417633:	neg    DWORD PTR [edi+0x2d]
  417636:	call   0xce19:0x13cc49b5
  41763d:	jle    0x41760a
  41763f:	imul   ecx,DWORD PTR [esi+0x26b8fd38],0xa23fcb74
  417649:	icebp  
  41764a:	cmc    
  41764b:	and    bh,BYTE PTR ds:0x1a69a1ef
  417651:	xchg   edi,eax
  417652:	repnz out 0x22,al
  417655:	xor    ch,dh
  417657:	jo     0x41761d
  417659:	and    edx,DWORD PTR ds:0x89d57777
  41765f:	or     al,0xd8
  417661:	test   eax,0x8c9a6514
  417666:	xor    DWORD PTR [ebx+0x47ca6d37],ebp
  41766c:	repz cld 
  41766e:	enter  0xef38,0x48
  417672:	bound  ebp,QWORD PTR [esi+0x43]
  417675:	ror    BYTE PTR [eax+0x69],0xc2
  417679:	je     0x4176f8
  41767b:	dec    edi
  41767c:	cli    
  41767d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767e:	xchg   ebx,eax
  41767f:	clc    
  417680:	xor    al,bh
  417682:	ins    BYTE PTR es:[edi],dx
  417683:	push   ebp
  417684:	push   esp
  417685:	je     0x41768a
  417687:	push   edx
  417688:	or     BYTE PTR ds:[eax+0xd],dh
  41768c:	inc    ebx
  41768d:	fnstsw WORD PTR [ebp+0x3c]
  417690:	shr    BYTE PTR [esi-0x2d9e0d30],cl
  417696:	push   es
  417697:	rcl    BYTE PTR [edi],1
  417699:	adc    eax,0x792d6d2d
  41769e:	adc    cl,ah
  4176a0:	cmp    DWORD PTR [eax+0x60],esi
  4176a3:	cmpxchg BYTE PTR [ecx-0x718bc254],al
  4176aa:	repz daa 
  4176ac:	lds    esp,FWORD PTR [esi]
  4176ae:	mov    ds,WORD PTR [ebx+0x5db19729]
  4176b4:	and    esi,DWORD PTR [ecx]
  4176b6:	addr16 xchg esp,eax
  4176b8:	jle    0x4176f2
  4176ba:	daa    
  4176bb:	cdq    
  4176bc:	xor    ah,cl
  4176be:	ficomp WORD PTR [eax+edx*1]
  4176c1:	into   
  4176c2:	outs   dx,DWORD PTR ds:[esi]
  4176c3:	cmp    bl,dh
  4176c5:	xchg   edx,eax
  4176c6:	mov    eax,0xd8bbbe74
  4176cb:	mov    edx,DWORD PTR [ebp+0x677eaf54]
  4176d1:	enter  0xb500,0x2b
  4176d5:	les    esp,FWORD PTR ds:0xcaaa385d
  4176db:	sbb    eax,0x2584c021
  4176e0:	xor    ebp,edi
  4176e2:	out    0x9f,al
  4176e4:	jbe    0x417714
  4176e6:	loop   0x41768b
  4176e8:	push   ss
  4176e9:	inc    eax
  4176ea:	push   es
  4176eb:	or     DWORD PTR [ecx+0x4e1bacda],ebx
  4176f1:	adc    BYTE PTR [ebx+0x72],0x66
  4176f5:	jl     0x417701
  4176f7:	in     al,dx
  4176f8:	clc    
  4176f9:	inc    esi
  4176fa:	pop    ss
  4176fb:	jae    0x41774f
  4176fd:	test   DWORD PTR [ebp-0x6a104c07],ecx
  417703:	mov    ebx,0x40cbe9ab
  417708:	sbb    ebp,DWORD PTR [edi]
  41770a:	xchg   ecx,eax
  41770b:	inc    esi
  41770c:	popa   
  41770d:	or     dl,bl
  41770f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417710:	clc    
  417711:	sub    dl,BYTE PTR [edi]
  417713:	adc    eax,0x28c67c7d
  417718:	mov    BYTE PTR [edx+0x760c2772],ch
  41771e:	je     0x41775e
  417720:	push   ds
  417721:	ins    BYTE PTR es:[edi],dx
  417722:	and    eax,0xae31456c
  417727:	aam    0x5d
  417729:	ins    BYTE PTR es:[edi],dx
  41772a:	sub    dl,BYTE PTR [ebx+0x3ed45e99]
  417730:	mov    eax,0x38fd2d99
  417735:	std    
  417736:	je     0x4176e3
  417738:	mov    ah,BYTE PTR [ebp-0x18d69709]
  41773e:	cdq    
  41773f:	xor    eax,0x233331a7
  417744:	lods   eax,DWORD PTR ds:[esi]
  417745:	dec    ecx
  417746:	xchg   ecx,eax
  417747:	inc    esp
  417748:	cs dec edx
  41774a:	mov    ds:0x1540f427,al
  41774f:	pushf  
  417750:	test   eax,0x7ae1be8c
  417755:	mov    al,ds:0xe507cc41
  41775a:	out    dx,al
  41775b:	xchg   cl,al
  41775d:	retf   
  41775e:	cwde   
  41775f:	adc    DWORD PTR [eax+ebp*1+0xf9b6497],ebp
  417766:	cmp    BYTE PTR [eax-0x38f836e7],ch
  41776c:	xor    al,0x46
  41776e:	jb     0x4177a5
  417770:	mov    ah,0xe0
  417772:	lds    eax,FWORD PTR ds:0xffb2b78
  417778:	out    dx,eax
  417779:	fld    QWORD PTR gs:[ebx+0x45c814fa]
  417780:	dec    ecx
  417781:	(bad)  
  417782:	aas    
  417783:	xor    esp,DWORD PTR [eax-0x79d8a79d]
  417789:	xor    BYTE PTR [edi-0x6546526a],cl
  41778f:	adc    al,0x61
  417791:	xor    DWORD PTR [eax],0xffffffb7
  417794:	xchg   ecx,eax
  417795:	pushf  
  417796:	repz (bad)
  41779a:	outs   dx,DWORD PTR ds:[esi]
  41779b:	ss inc eax
  41779d:	xor    DWORD PTR [ebx+0x72275537],0x240912e5
  4177a7:	imul   eax,DWORD PTR [eax+eax*2-0x35b8785d],0x3a57933f
  4177b2:	in     al,dx
  4177b3:	shr    BYTE PTR es:[edx],1
  4177b6:	xchg   ebp,eax
  4177b7:	ja     0x41776f
  4177b9:	sub    edx,DWORD PTR [esi-0x3f0f3d54]
  4177bf:	std    
  4177c0:	sub    al,0xba
  4177c2:	xchg   ch,al
  4177c4:	nop
  4177c5:	inc    eax
  4177c6:	fcom   DWORD PTR [ecx-0x2f]
  4177c9:	sbb    BYTE PTR [ebx-0x22],dh
  4177cc:	ja     0x417771
  4177ce:	xchg   DWORD PTR [edi-0x47],esp
  4177d1:	push   cs
  4177d2:	cmc    
  4177d3:	repz pop ds
  4177d5:	xor    DWORD PTR [ecx+0x78501dac],edx
  4177db:	cs jns 0x4177c5
  4177de:	cmp    DWORD PTR [edx+esi*2-0x3a],eax
  4177e2:	wrmsr  
  4177e4:	inc    BYTE PTR [ecx+0x12]
  4177e7:	lods   eax,DWORD PTR ds:[esi]
  4177e8:	add    dl,BYTE PTR [eax-0x42b39a8e]
  4177ee:	arpl   WORD PTR fs:[ebx-0x139b2331],bx
  4177f5:	mov    ebx,0x78401c4f
  4177fa:	mov    ebp,0xd7a9991e
  4177ff:	mov    esp,0xfde3b1a1
  417804:	lods   al,BYTE PTR ds:[esi]
  417805:	ror    WORD PTR [ecx+0x65],1
  417809:	leave  
  41780a:	imul   DWORD PTR [ebx+ecx*2+0x2c808df3]
  417811:	push   ss
  417812:	adc    eax,DWORD PTR [eax+ecx*4]
  417815:	out    dx,eax
  417816:	sub    bh,BYTE PTR [ebp+0x663bcfe0]
  41781c:	pop    ds
  41781d:	push   ss
  41781e:	dec    ebp
  41781f:	xor    BYTE PTR [edx+0x5abb1942],0x6f
  417826:	ins    BYTE PTR es:[edi],dx
  417827:	retf   0xa134
  41782a:	dec    edi
  41782b:	mov    dl,0x61
  41782d:	fld    QWORD PTR [eax+0x501fd861]
  417833:	and    eax,0xc2c3c161
  417838:	cmc    
  417839:	ss jnp 0x41781f
  41783c:	stos   BYTE PTR es:[edi],al
  41783d:	jmp    0x417874
  41783f:	in     eax,dx
  417840:	sub    ebp,esp
  417842:	cmp    al,0xf8
  417844:	sar    DWORD PTR [eax-0x4e],1
  417847:	xchg   ebp,eax
  417848:	outs   dx,BYTE PTR ds:[esi]
  417849:	repnz sub ah,ch
  41784c:	je     0x417879
  41784e:	sub    al,0x47
  417850:	add    al,0xfd
  417852:	fisub  WORD PTR [ebp-0x64]
  417855:	jle    0x417866
  417857:	into   
  417858:	lea    eax,[bx+si+0x3487]
  41785d:	xlat   BYTE PTR ds:[ebx]
  41785e:	mov    dh,0x2c
  417860:	aad    0x80
  417862:	sahf   
  417863:	mov    bl,0x13
  417865:	push   esp
  417866:	ja     0x417887
  417868:	mov    edi,0xef1c99c7
  41786d:	loop   0x4178a1
  41786f:	pop    edx
  417870:	out    0x50,eax
  417872:	leave  
  417873:	adc    eax,0xfc3d8fc8
  417878:	cs xor al,0x89
  41787b:	into   
  41787c:	inc    eax
  41787d:	mov    eax,ds:0xe22edf8
  417882:	jae    0x417885
  417884:	fnstenv [edx+ecx*2+0xf]
  417888:	loop   0x417894
  41788a:	xchg   ecx,eax
  41788b:	xchg   ecx,eax
  41788c:	sahf   
  41788d:	outs   dx,BYTE PTR ds:[esi]
  41788e:	push   ds
  41788f:	mov    edx,0xb152772d
  417894:	adc    DWORD PTR [edi-0x66],edi
  417897:	aam    0x25
  417899:	inc    ebp
  41789a:	fs lahf 
  41789c:	xor    bl,dh
  41789e:	repz xchg esp,eax
  4178a0:	(bad)  
  4178a1:	jbe    0x4178a7
  4178a3:	adc    DWORD PTR [ebx+0xbd2afff],ebp
  4178a9:	int    0x91
  4178ab:	outs   dx,DWORD PTR es:[esi]
  4178ad:	adc    esi,DWORD PTR [esi]
  4178af:	pop    ebp
  4178b0:	push   edx
  4178b1:	stos   DWORD PTR es:[edi],eax
  4178b2:	pop    ss
  4178b3:	je     0x4178d1
  4178b5:	mov    ebp,0x5ef87ef6
  4178ba:	jecxz  0x417938
  4178bc:	mov    ebx,0x48ce1b42
  4178c1:	ss add DWORD PTR gs:[eax-0x72],ebx
  4178c6:	jecxz  0x4178a7
  4178c8:	mov    dl,0x8d
  4178ca:	repz out 0x20,eax
  4178cd:	sub    dl,ah
  4178cf:	mov    esi,0xbd1203ca
  4178d4:	pop    ecx
  4178d5:	push   eax
  4178d6:	and    al,0xfa
  4178d8:	ret    0xddd
  4178db:	sbb    eax,0xd8b349b
  4178e0:	lahf   
  4178e1:	xor    BYTE PTR [edx+0x6d],dl
  4178e4:	sbb    al,bh
  4178e6:	addr16 adc eax,ebp
  4178e9:	mov    fs,WORD PTR [ecx+eiz*8]
  4178ec:	pushf  
  4178ed:	jmp    0xbc3d8621
  4178f2:	mul    BYTE PTR [ebx+0x2587b933]
  4178f8:	cmc    
  4178f9:	pop    es
  4178fa:	not    BYTE PTR [ebx]
  4178fc:	mov    ds:0xbc8ce8bf,eax
  417901:	jae    0x417969
  417903:	leave  
  417904:	push   ecx
  417906:	int3   
  417907:	mov    ebx,0xc46a2b2e
  41790c:	jmp    0x417985
  41790e:	mov    eax,0x121562d0
  417913:	movups XMMWORD PTR [esi+ebp*4+0xa],xmm6
  417918:	push   ebx
  417919:	test   bl,dh
  41791b:	test   eax,0x5cb847b
  417920:	mov    dh,0x9
  417922:	aad    0xe2
  417924:	or     edx,DWORD PTR [eax]
  417926:	dec    edx
  417927:	dec    ecx
  417928:	out    0x8b,al
  41792a:	aam    0x49
  41792c:	leave  
  41792d:	jo     0x417935
  41792f:	cs pusha 
  417931:	cmp    DWORD PTR [esi+0x586bc842],ebx
  417937:	mov    cl,0x8f
  417939:	test   eax,0x1661e4c9
  41793e:	ds inc ecx
  417940:	sub    DWORD PTR [edx+0x7c],esp
  417943:	cmovbe ebx,DWORD PTR ds:0x105b6e5d
  41794a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41794b:	pop    es
  41794c:	pushf  
  41794d:	add    BYTE PTR [edi-0x70],dh
  417950:	es xchg ebp,eax
  417952:	push   ss
  417953:	jp     0x417992
  417955:	in     eax,0xbf
  417957:	jp     0x417966
  417959:	mov    ebp,edi
  41795b:	addr16 pop ds
  41795d:	add    BYTE PTR [edx+eax*2-0x68f3a82b],al
  417964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417965:	or     dl,0xc6
  417968:	ret    0xe882
  41796b:	inc    ebp
  41796c:	xor    al,0x15
  41796e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41796f:	test   DWORD PTR [esp+esi*8-0x3],eax
  417973:	add    DWORD PTR [edx+0x6a],eax
  417976:	mov    ah,cl
  417978:	lahf   
  417979:	stos   DWORD PTR es:[edi],eax
  41797a:	aas    
  41797b:	jp     0x4179ee
  41797d:	pop    esi
  41797e:	sbb    ah,BYTE PTR [ebx+0x8]
  417981:	aas    
  417982:	pusha  
  417983:	lds    ebx,FWORD PTR [esi-0x71]
  417986:	sti    
  417987:	icebp  
  417988:	jne    0x417a06
  41798a:	push   ds
  41798b:	fwait
  41798c:	cmp    al,ah
  41798e:	popa   
  41798f:	adc    ch,BYTE PTR [edi-0x4a]
  417992:	out    dx,eax
  417993:	cmp    DWORD PTR [eax-0x382fcfb2],esi
  417999:	jecxz  0x4179db
  41799b:	out    dx,eax
  41799c:	cmp    ecx,DWORD PTR [edi]
  41799e:	inc    esi
  41799f:	in     eax,dx
  4179a0:	loopne 0x4179e7
  4179a2:	mov    BYTE PTR [edx+0x4a],bh
  4179a5:	mov    dl,0xc9
  4179a7:	sub    al,dl
  4179a9:	inc    edx
  4179aa:	and    eax,0xfee23793
  4179af:	icebp  
  4179b0:	addr16 jl 0x4179ec
  4179b3:	(bad)  
  4179b4:	xlat   BYTE PTR ds:[ebx]
  4179b5:	mov    eax,0x7d6744ce
  4179ba:	out    dx,al
  4179bb:	mov    dl,0x92
  4179bd:	add    al,0x5f
  4179bf:	dec    esi
  4179c0:	mov    esi,0x1492e509
  4179c5:	jp     0x417a1b
  4179c7:	xchg   edi,eax
  4179c8:	pop    es
  4179c9:	icebp  
  4179ca:	jmp    0x417985
  4179cc:	pusha  
  4179cd:	repz dec ebp
  4179cf:	popa   
  4179d0:	xchg   esp,eax
  4179d1:	scas   eax,DWORD PTR es:[edi]
  4179d2:	test   ecx,edx
  4179d4:	gs enter 0xfd,0xcb
  4179d9:	mov    eax,ds:0xf0a25fde
  4179de:	xor    bl,BYTE PTR [ebx]
  4179e0:	sub    ecx,ecx
  4179e2:	mov    cl,0x61
  4179e4:	mov    esp,0x540c3d9f
  4179e9:	dec    ecx
  4179ea:	mov    cl,0x10
  4179ec:	sbb    BYTE PTR [ebx],dh
  4179ee:	rol    DWORD PTR [ecx-0x11bd0192],0xf5
  4179f5:	sbb    eax,0xa6a2c96a
  4179fa:	pop    ecx
  4179fb:	dec    esi
  4179fc:	into   
  4179fd:	push   eax
  4179fe:	enter  0x7142,0x62
  417a02:	jle    0x417a54
  417a04:	push   esp
  417a05:	out    0xff,al
  417a07:	xchg   ebx,eax
  417a08:	test   edi,esi
  417a0a:	(bad)  
  417a0b:	mov    ebp,0xa714788d
  417a10:	jg     0x4179f4
  417a12:	or     al,0x9a
  417a14:	inc    ebx
  417a15:	or     ch,dh
  417a17:	cli    
  417a18:	or     edx,edx
  417a1a:	adc    DWORD PTR [esi+eax*8+0x46],esp
  417a1e:	gs push eax
  417a20:	sub    BYTE PTR [ebp+ebx*2+0x690154f7],ah
  417a27:	pause  
  417a29:	or     DWORD PTR [esi],ecx
  417a2b:	dec    ecx
  417a2c:	sti    
  417a2d:	vcmpsd xmm1,xmm7,QWORD PTR [eax+ebp*1+0x42],0x95
  417a34:	add    edi,DWORD PTR [esi+0x44b7a108]
  417a3a:	(bad)  
  417a3b:	clc    
  417a3c:	jnp    0x4179f7
  417a3e:	jmp    0xaa2d90ed
  417a43:	in     al,0xe2
  417a45:	cmp    eax,DWORD PTR [ebx+0x187fe040]
  417a4b:	xchg   edx,eax
  417a4c:	in     eax,0x1a
  417a4e:	xor    ecx,DWORD PTR [ebp-0x66]
  417a51:	cmp    BYTE PTR ds:0x7b4dcb6c,bl
  417a57:	rcr    dl,cl
  417a59:	mov    dl,0xfe
  417a5b:	pop    ebp
  417a5c:	inc    ecx
  417a5d:	pop    ds
  417a5e:	mov    DWORD PTR [edi+0x6d],ecx
  417a61:	pop    ecx
  417a62:	in     al,0x2c
  417a64:	jo     0x417a73
  417a66:	pop    esp
  417a67:	pop    DWORD PTR [ebx+ecx*8]
  417a6a:	xchg   edx,eax
  417a6b:	dec    esp
  417a6c:	or     eax,0x37626e15
  417a71:	cmp    bl,BYTE PTR [eax-0x77fba133]
  417a77:	push   esi
  417a78:	push   edx
  417a79:	sbb    DWORD PTR [esi],0x56
  417a7c:	lea    eax,[ebp+0x64]
  417a7f:	jmp    ecx
  417a81:	pop    ebp
  417a82:	(bad)  
  417a84:	fmul   QWORD PTR [eax+0x7d2dd3cc]
  417a8a:	in     eax,0xe7
  417a8c:	neg    DWORD PTR [eax]
  417a8e:	aad    0xdd
  417a90:	inc    ecx
  417a91:	lock inc ebp
  417a93:	adc    al,0xc6
  417a95:	aaa    
  417a96:	dec    esi
  417a97:	jl     0x417a60
  417a99:	dec    ebp
  417a9a:	cmc    
  417a9b:	(bad)  
  417a9c:	jp     0x417a34
  417a9e:	(bad)  
  417a9f:	sahf   
  417aa0:	test   BYTE PTR [ecx-0x4c8bc7d],ch
  417aa6:	jne    0x417aa3
  417aa8:	(bad)  
  417aaa:	mov    eax,0x12a9885f
  417aaf:	dec    BYTE PTR ds:0x3399d856
  417ab5:	jle    0x417abf
  417ab7:	mov    DWORD PTR [ecx-0x50121397],edx
  417abd:	jb     0x417a6d
  417abf:	mov    bh,0xe7
  417ac1:	out    0xc7,eax
  417ac3:	data16 (bad) 
  417ac6:	int    0x49
  417ac8:	or     ebx,DWORD PTR [edx+0x7b]
  417acb:	xchg   DWORD PTR [edi+esi*4-0x18],ebx
  417acf:	call   0x8f9e4373
  417ad4:	mov    BYTE PTR [ebp-0x1b],dl
  417ad7:	shl    BYTE PTR [edx+ebp*2],0x3e
  417adb:	jne    0x417b32
  417add:	add    ch,al
  417adf:	sbb    al,0xa8
  417ae1:	push   edi
  417ae2:	dec    esp
  417ae3:	inc    edi
  417ae4:	mov    cl,0x1
  417ae6:	mov    ecx,0xa78adfc5
  417aeb:	ins    BYTE PTR es:[edi],dx
  417aec:	lds    ebp,FWORD PTR [esi]
  417aee:	cld    
  417aef:	push   0x18
  417af1:	ins    DWORD PTR es:[edi],dx
  417af2:	pop    ebx
  417af3:	scas   al,BYTE PTR es:[edi]
  417af4:	test   al,0x3b
  417af6:	sbb    ebp,DWORD PTR [ecx-0xbc39516]
  417afc:	xor    al,bl
  417afe:	adc    eax,0xb5906f48
  417b03:	lea    edi,[ecx]
  417b05:	inc    ecx
  417b06:	push   ebx
  417b07:	mov    ds:0xa5bdb75b,eax
  417b0c:	adc    esp,0xffffff93
  417b0f:	int    0x2a
  417b11:	jb     0x417acd
  417b13:	stos   DWORD PTR es:[edi],eax
  417b14:	lock cmp BYTE PTR [bx+di-0x3809],dh
  417b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b1b:	scas   al,BYTE PTR es:[edi]
  417b1c:	mov    dh,0xae
  417b1e:	add    eax,0xc1f558
  417b23:	adc    DWORD PTR [edi-0x5c],esp
  417b26:	int    0xc3
  417b28:	sahf   
  417b29:	xchg   esi,eax
  417b2a:	(bad)  
  417b2b:	xor    sp,WORD PTR [ecx-0x31]
  417b2f:	inc    BYTE PTR [eax]
  417b31:	xchg   esp,eax
  417b32:	neg    DWORD PTR [edi]
  417b34:	inc    edx
  417b35:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b37:	xchg   esp,eax
  417b38:	fs jmp 0x586ef22f
  417b3e:	xor    esi,DWORD PTR [edx+0x21]
  417b41:	nop
  417b42:	xchg   ecx,eax
  417b43:	mov    ds:0x4761ed9c,al
  417b48:	loop   0x417b77
  417b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b4b:	sar    DWORD PTR [edi+esi*4],0xb2
  417b4f:	in     eax,dx
  417b50:	iret   
  417b51:	mov    eax,esi
  417b53:	in     al,0xb0
  417b55:	test   DWORD PTR [edx+0x363846c8],edx
  417b5b:	aaa    
  417b5c:	call   0xf946:0x8f32faf
  417b63:	and    al,BYTE PTR [edi-0x49671007]
  417b69:	mov    cl,0xc2
  417b6b:	iret   
  417b6c:	dec    ecx
  417b6d:	push   ss
  417b6e:	mov    edx,DWORD PTR [eax+0xd]
  417b71:	dec    esi
  417b72:	sbb    DWORD PTR [ecx-0x1d1072d2],eax
  417b78:	ret    
  417b79:	inc    ebx
  417b7a:	ret    0xe99d
  417b7d:	add    eax,0xbe15ec5
  417b82:	cmp    esi,DWORD PTR [ebx]
  417b84:	loope  0x417b2c
  417b86:	pop    eax
  417b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b88:	fld    DWORD PTR [esi+0x57]
  417b8b:	xchg   ebp,eax
  417b8c:	xchg   edi,eax
  417b8d:	xchg   ecx,eax
  417b8e:	and    bl,BYTE PTR [eax+0x58]
  417b91:	cmp    bl,al
  417b93:	pop    esi
  417b94:	mov    bh,0x32
  417b96:	pushf  
  417b97:	sahf   
  417b98:	jmp    0xf064:0xd0720177
  417b9f:	mov    edx,0x1951a8f7
  417ba4:	(bad)  
  417ba5:	pop    ecx
  417ba6:	adc    ebp,DWORD PTR [eax]
  417ba8:	xchg   esi,eax
  417ba9:	xor    al,0x9d
  417bab:	hlt    
  417bac:	xchg   esp,esi
  417bae:	inc    esp
  417baf:	daa    
  417bb0:	mov    ch,bh
  417bb2:	repz jmp 0xb8a7087e
  417bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bb9:	pop    esp
  417bba:	jbe    0x417bc8
  417bbc:	sub    ebp,DWORD PTR [esi]
  417bbe:	in     eax,dx
  417bbf:	mov    esi,0xd2cdab9
  417bc4:	jmp    0xe5f77ae3
  417bc9:	jae    0x417b4c
  417bcb:	stos   DWORD PTR es:[edi],eax
  417bcc:	sub    eax,0x11d4c1f9
  417bd1:	dec    esp
  417bd2:	test   eax,ebx
  417bd4:	outs   dx,DWORD PTR ds:[esi]
  417bd5:	push   0xffffffe7
  417bd7:	xchg   edi,eax
  417bd8:	cmp    dh,ah
  417bda:	ja     0x417c26
  417bdc:	jno    0x417c0b
  417bde:	cld    
  417bdf:	ins    BYTE PTR es:[edi],dx
  417be0:	aaa    
  417be1:	lds    esi,FWORD PTR [esi]
  417be3:	cmp    DWORD PTR [edi+0x2ac187aa],esp
  417be9:	shl    BYTE PTR [eax+ecx*8],cl
  417bec:	int    0x21
  417bee:	hlt    
  417bef:	fldl2e 
  417bf1:	and    esi,DWORD PTR [edi]
  417bf3:	dec    ebp
  417bf4:	(bad)  [eax-0x4fa71682]
  417bfa:	lea    esi,[eax+0x7500274d]
  417c00:	repz inc ebp
  417c02:	test   al,0xf1
  417c04:	paddb  mm7,QWORD PTR [edi+0x3e]
  417c08:	or     esi,eax
  417c0a:	call   0xc51e:0xa2a20644
  417c11:	rcr    BYTE PTR ds:0x8f79c5ff,0x53
  417c18:	mov    ds:0x1a80f9ea,al
  417c1d:	test   BYTE PTR [edi-0x3c388839],0x57
  417c24:	inc    esp
  417c25:	dec    eax
  417c26:	test   BYTE PTR [edx-0x1b],al
  417c29:	fwait
  417c2a:	call   0x6646:0xce7b4a99
  417c31:	rol    DWORD PTR [edi-0x6d],cl
  417c34:	push   eax
  417c35:	sub    BYTE PTR [ebp-0x5447686f],0x8e
  417c3c:	aaa    
  417c3d:	adc    eax,0x2eb40c42
  417c42:	(bad)  
  417c43:	frndint 
  417c45:	cs jae 0x417bda
  417c48:	mov    ah,0x3a
  417c4a:	xor    ch,BYTE PTR [edx-0xce4eebd]
  417c50:	test   dh,dh
  417c52:	mov    DWORD PTR [esi],ebp
  417c54:	ja     0x417be8
  417c56:	fiadd  DWORD PTR [edi-0x30fff2de]
  417c5c:	shl    DWORD PTR [ebx+edx*8+0x6e5c52a3],cl
  417c63:	(bad)  
  417c65:	mov    eax,ds:0x524ce624
  417c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c6b:	ds test eax,0xb786981a
  417c71:	add    DWORD PTR [ecx],ebp
  417c73:	or     DWORD PTR [eax-0x21b9d1f5],edx
  417c79:	dec    ebx
  417c7a:	fld    TBYTE PTR [edi+0xec6873]
  417c80:	push   esi
  417c81:	jae    0x417c3d
  417c83:	xor    DWORD PTR [edx],eax
  417c85:	pop    ebx
  417c86:	std    
  417c87:	inc    eax
  417c88:	dec    eax
  417c89:	mov    al,0xe0
  417c8b:	mov    ?,WORD PTR [esi+0x5d]
  417c8e:	xor    esi,DWORD PTR [ebx-0x41580747]
  417c94:	mov    al,0x28
  417c96:	(bad)  
  417c97:	hlt    
  417c98:	in     eax,dx
  417c99:	sub    bl,BYTE PTR [ecx+0x67ed0733]
  417c9f:	add    eax,0xfff7b6ac
  417ca4:	xor    al,0x54
  417ca6:	or     edi,DWORD PTR [ecx]
  417ca8:	push   es
  417ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417caa:	dec    ebp
  417cab:	aam    0x44
  417cad:	sbb    bh,BYTE PTR [ebx-0x57]
  417cb0:	stos   BYTE PTR es:[edi],al
  417cb1:	(bad)  
  417cb2:	cli    
  417cb3:	aad    0x94
  417cb5:	pop    esp
  417cb6:	inc    ebp
  417cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb8:	xor    al,ch
  417cba:	ins    DWORD PTR es:[edi],dx
  417cbb:	out    0x3a,eax
  417cbd:	rcr    DWORD PTR [esp+ebp*2-0x6f],0xde
  417cc2:	ja     0x417c4c
  417cc4:	int3   
  417cc5:	mov    dl,0x72
  417cc7:	push   edx
  417cc8:	mov    ds:0x249703d9,eax
  417ccd:	xchg   ebp,eax
  417cce:	xor    eax,0xb0b00b3a
  417cd3:	(bad)  [eax-0xe]
  417cd6:	mov    ah,0xf1
  417cd8:	adc    DWORD PTR [esi-0x25],edx
  417cdb:	inc    ecx
  417cdc:	and    eax,0x99263909
  417ce1:	jg     0x417c72
  417ce3:	mov    eax,ds:0xdace2781
  417ce8:	push   es
  417ce9:	push   edi
  417cea:	push   esp
  417ceb:	stc    
  417cec:	cli    
  417ced:	sar    DWORD PTR [ecx],1
  417cef:	pop    edx
  417cf0:	in     eax,0x60
  417cf2:	sar    DWORD PTR [edx+0x59],cl
  417cf5:	je     0x417c84
  417cf7:	sbb    al,0xb9
  417cf9:	es mov bh,0xfb
  417cfc:	test   al,0x1b
  417cfe:	cli    
  417cff:	(bad)  
  417d00:	inc    esp
  417d01:	cmp    eax,DWORD PTR [eax]
  417d03:	add    DWORD PTR [edx+0x4e],edi
  417d06:	loop   0x417d3b
  417d08:	add    ah,bh
  417d0a:	push   eax
  417d0b:	fisub  WORD PTR [eax]
  417d0d:	aad    0x47
  417d0f:	jge    0x417ce0
  417d11:	fchs   
  417d13:	jb     0x417d26
  417d15:	das    
  417d16:	aaa    
  417d17:	loop   0x417d2d
  417d19:	push   ss
  417d1a:	stos   BYTE PTR es:[edi],al
  417d1b:	cld    
  417d1c:	iret   
  417d1d:	lahf   
  417d1e:	pop    esi
  417d1f:	mov    bh,0xe9
  417d21:	mov    dl,0x3c
  417d23:	pop    edx
  417d24:	mov    ebp,ebx
  417d26:	dec    ebx
  417d27:	mov    bh,0x7e
  417d29:	and    edi,DWORD PTR [ecx-0x14]
  417d2c:	mov    esp,0xc8079940
  417d31:	out    0x5f,eax
  417d33:	jge    0x417d54
  417d35:	das    
  417d36:	std    
  417d37:	ins    BYTE PTR es:[edi],dx
  417d38:	pop    ecx
  417d39:	popf   
  417d3a:	xor    ebp,ebx
  417d3c:	xchg   ecx,eax
  417d3d:	aaa    
  417d3e:	repnz pop es
  417d40:	xchg   ecx,eax
  417d41:	sub    al,0x4f
  417d43:	scas   al,BYTE PTR es:[edi]
  417d44:	in     eax,dx
  417d45:	inc    edi
  417d46:	pop    eax
  417d47:	outs   dx,DWORD PTR ds:[esi]
  417d48:	adc    eax,0x9d90e6e9
  417d4d:	fcom   DWORD PTR [edx]
  417d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d50:	adc    eax,0x99e7a306
  417d55:	mov    esi,ebx
  417d57:	lock mov dl,0x30
  417d5b:	mov    DWORD PTR [edi+0x1c],eax
  417d5e:	cdq    
  417d5f:	dec    ebx
  417d60:	push   es
  417d61:	jmp    0x417d21
  417d63:	pop    ds
  417d64:	sti    
  417d65:	push   ebp
  417d66:	dec    eax
  417d67:	adc    DWORD PTR ds:0x2715b710,eax
  417d6d:	xor    DWORD PTR [ecx-0x5e],0x3d5fa3b7
  417d74:	(bad)  
  417d76:	into   
  417d77:	enter  0x1610,0xaf
  417d7b:	mov    BYTE PTR [edx+0x17a9e27b],0x7f
  417d82:	loope  0x417d0e
  417d84:	das    
  417d85:	call   0xf0b55f80
  417d8a:	xchg   ebx,eax
  417d8b:	ret    
  417d8c:	test   DWORD PTR [esi+0x3483e51],0x279fc16a
  417d96:	fimul  WORD PTR [edx+0x45]
  417d99:	jo     0x417d36
  417d9b:	xchg   ch,ch
  417d9d:	dec    edx
  417d9e:	out    0xb2,al
  417da0:	xor    al,0x0
  417da2:	add    ebp,DWORD PTR [edi+edi*8+0x266e0e37]
  417da9:	lods   eax,DWORD PTR ds:[esi]
  417daa:	sub    eax,DWORD PTR [edi]
  417dac:	fadd   QWORD PTR [edx-0x6777c159]
  417db2:	or     BYTE PTR [eax+0x5e],bl
  417db5:	std    
  417db6:	mov    edi,0x93007a47
  417dbb:	and    DWORD PTR [edx-0x2b],esi
  417dbe:	inc    DWORD PTR [edi]
  417dc0:	xchg   edi,eax
  417dc1:	mov    bl,0xa6
  417dc3:	repnz in eax,dx
  417dc5:	adc    BYTE PTR [eax*4-0x467c66c],0xd4
  417dcd:	imul   DWORD PTR ds:0x117fe203
  417dd3:	xchg   ebp,eax
  417dd4:	sbb    eax,0x261e0916
  417dd9:	jp     0x417d78
  417ddb:	sub    DWORD PTR [eax+0x2b8c0882],0x11ab741d
  417de5:	mov    ecx,0x621c4891
  417dea:	xchg   ebp,eax
  417deb:	and    BYTE PTR [eax-0x59],ch
  417dee:	test   al,0x85
  417df0:	xor    esi,edi
  417df2:	xchg   DWORD PTR [edi],esi
  417df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df5:	mov    esp,0x5554a1e3
  417dfa:	mov    ds:0x2539d536,eax
  417dff:	adc    bh,0xd
  417e02:	out    dx,al
  417e03:	retf   
  417e04:	shl    BYTE PTR [eax-0x47],1
  417e07:	jae    0x417e3e
  417e09:	jmp    0x417dfc
  417e0b:	sub    al,0xf9
  417e0d:	not    BYTE PTR [edi-0x72d391c9]
  417e13:	mov    ds:0x5ec74975,eax
  417e18:	iret   
  417e19:	into   
  417e1a:	xchg   esp,eax
  417e1b:	ret    0x3096
  417e1e:	jbe    0x417db1
  417e20:	dec    ebx
  417e21:	std    
  417e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e23:	dec    edx
  417e24:	adc    al,BYTE PTR [esi]
  417e26:	(bad)  [esi-0x13]
  417e29:	and    al,0xe4
  417e2b:	cmp    edi,esi
  417e2d:	fimul  WORD PTR [ebx+0x74]
  417e30:	adc    ch,BYTE PTR [edi]
  417e32:	xchg   DWORD PTR [eax+0x3c],esp
  417e35:	add    al,0xf4
  417e37:	call   0xd09e5613
  417e3c:	in     al,0x9f
  417e3e:	or     BYTE PTR [ecx+esi*2],bh
  417e41:	and    dh,BYTE PTR [edi+0x3d989073]
  417e47:	adc    edi,DWORD PTR [edi+0x10]
  417e4a:	hlt    
  417e4b:	arpl   cx,cx
  417e4d:	pop    ebp
  417e4e:	rcl    ecx,cl
  417e50:	les    edx,FWORD PTR [ecx+0x14]
  417e53:	jl     0x417e49
  417e55:	lea    esp,[ecx+0xedd05c]
  417e5b:	xor    eax,0xacd4f875
  417e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e61:	in     al,dx
  417e62:	das    
  417e63:	or     ebp,DWORD PTR cs:[eax+ebx*2+0x641614fb]
  417e6b:	pusha  
  417e6c:	pop    edi
  417e6d:	xchg   BYTE PTR [esi-0x3b1da4d8],cl
  417e73:	mov    bl,0x14
  417e75:	sar    DWORD PTR [edx-0x7e922ebc],0xa4
  417e7c:	popf   
  417e7d:	into   
  417e7e:	dec    ebx
  417e7f:	cmp    BYTE PTR [eax],dl
  417e81:	cmc    
  417e82:	popa   
  417e83:	inc    edx
  417e84:	pop    ds
  417e85:	nop
  417e86:	mov    al,ds:0x53b396fb
  417e8b:	ret    
  417e8c:	or     esi,DWORD PTR [ebx-0x33]
  417e8f:	pop    es
  417e90:	adc    al,BYTE PTR [edi+0x204dce71]
  417e96:	xor    DWORD PTR [esi+0x3d829536],0x876e6de3
  417ea0:	int    0xbd
  417ea2:	inc    esi
  417ea3:	inc    esp
  417ea4:	out    0x73,al
  417ea6:	dec    edi
  417ea7:	jecxz  0x417f14
  417ea9:	(bad)  
  417eaa:	jmp    0x5719df00
  417eaf:	lahf   
  417eb0:	mov    ah,0xa4
  417eb2:	jne    0x417e6a
  417eb4:	(bad)  
  417eb5:	mov    edx,0x79446d14
  417eba:	test   BYTE PTR [ebp+0x2e],cl
  417ebd:	std    
  417ebe:	pop    edi
  417ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ec0:	pop    ds
  417ec1:	or     al,0xf3
  417ec3:	jb     0x417f0b
  417ec5:	cmp    BYTE PTR ds:0xa9fa1a9b,al
  417ecb:	cmp    eax,0x55d488c2
  417ed0:	mov    ch,0xed
  417ed2:	int    0x5e
  417ed4:	jb     0x417f1c
  417ed6:	dec    eax
  417ed7:	add    al,0xb3
  417ed9:	ss mov ah,0x90
  417edc:	xchg   edx,eax
  417edd:	(bad)  
  417edf:	in     al,dx
  417ee0:	in     eax,0x8a
  417ee2:	pusha  
  417ee3:	xor    ebp,eax
  417ee5:	bound  ebx,QWORD PTR [ecx+0x2443c110]
  417eeb:	aaa    
  417eec:	push   ebx
  417eed:	test   BYTE PTR [edi+0x65c99f58],0x87
  417ef4:	mov    ebp,0x903881e8
  417ef9:	push   ecx
  417efa:	ret    0x96b8
  417efd:	mov    bl,0xf7
  417eff:	add    ebp,DWORD PTR [eax+0x1e]
  417f02:	jno    0x417e8b
  417f04:	push   ebx
  417f05:	adc    DWORD PTR [edi+0x32349d9d],ecx
  417f0b:	call   0x7ab94f37
  417f10:	(bad)  
  417f11:	jnp    0x417efc
  417f13:	add    eax,0x92dfae18
  417f18:	jmp    0xd292:0xeba85d3c
  417f1f:	mov    ah,0x19
  417f21:	fs push eax
  417f23:	sub    DWORD PTR [edi+0x26b9ba2b],edx
  417f29:	outs   dx,DWORD PTR ds:[esi]
  417f2a:	mov    ah,0x39
  417f2c:	stc    
  417f2d:	dec    edx
  417f2e:	jnp    0x417ef5
  417f30:	mov    esi,0xb87091db
  417f35:	xchg   ecx,eax
  417f36:	mov    WORD PTR [ebx+0x4c],cs
  417f39:	sub    eax,0xd7c480a5
  417f3e:	push   esp
  417f3f:	sti    
  417f40:	or     DWORD PTR [ebx-0x24333e9b],edx
  417f46:	and    DWORD PTR [ebx+0x42],esi
  417f49:	ret    0xbe54
  417f4c:	and    eax,0xe308d1fb
  417f51:	cmp    DWORD PTR [edi-0x38],ecx
  417f54:	ins    DWORD PTR es:[edi],dx
  417f55:	jne    0x417f63
  417f57:	aam    0x18
  417f59:	jge    0x417fcd
  417f5b:	mov    BYTE PTR [edx+edx*4],al
  417f5e:	rol    DWORD PTR [ecx-0x74],1
  417f61:	cmp    eax,DWORD PTR [eax]
  417f63:	pop    edx
  417f64:	icebp  
  417f65:	(bad)  [edi]
  417f67:	nop
  417f68:	cmovns edx,DWORD PTR [eax+ebx*8]
  417f6c:	sub    edi,DWORD PTR [esi-0x72401b91]
  417f72:	loop   0x417f69
  417f74:	into   
  417f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f76:	pop    ebp
  417f77:	mov    esp,0x8381ab85
  417f7c:	add    DWORD PTR [esp+esi*1+0x6e],edi
  417f80:	mov    edx,0xb0d7696
  417f85:	mov    eax,ds:0xed23f0
  417f8a:	mov    esi,0x1eb2d915
  417f8f:	dec    edi
  417f90:	arpl   si,bx
  417f92:	lds    eax,FWORD PTR [eax-0x2e]
  417f95:	loopne 0x417f8c
  417f97:	ja     0x417f68
  417f99:	aad    0x16
  417f9b:	sbb    edi,DWORD PTR [edx*8+0x62ef0992]
  417fa2:	mov    ss,ebp
  417fa4:	dec    edi
  417fa5:	in     al,dx
  417fa6:	je     0x417fd5
  417fa8:	sbb    eax,0x19b7434d
  417fad:	sahf   
  417fae:	adc    DWORD PTR [edx-0x5c95bd4d],eax
  417fb4:	leave  
  417fb5:	retf   0xe5e3
  417fb8:	les    esp,FWORD PTR [ebp-0x4d2a9115]
  417fbe:	jle    0x417f49
  417fc0:	inc    edi
  417fc2:	mov    ebx,0xb6a08822
  417fc7:	dec    esi
  417fc8:	inc    ebx
  417fc9:	sub    BYTE PTR [ebp+0x20],al
  417fcc:	or     al,0xb3
  417fce:	repz int 0x28
  417fd1:	pop    esi
  417fd2:	or     DWORD PTR [edx+0x11],0x5e
  417fd6:	mov    esi,0x88713c7e
  417fdb:	cld    
  417fdc:	mov    ch,0xae
  417fde:	loope  0x417f9a
  417fe0:	jle    0x417fb2
  417fe2:	mov    bh,0x6e
  417fe4:	out    0x1d,eax
  417fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe7:	inc    edx
  417fe8:	dec    ebx
  417fe9:	js     0x41803c
  417feb:	inc    esp
  417fec:	ret    0xc9eb
  417fef:	jmp    0xf70b1708
  417ff4:	sub    DWORD PTR ss:[esp+edx*4-0x3a91003f],0x36
  417ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffe:	ret    
  417fff:	aaa    
  418000:	inc    edx
  418001:	sbb    eax,DWORD PTR [eax]
  418003:	pop    es
  418004:	loopne 0x417fc1
  418006:	(bad)  
  418007:	dec    esi
  418008:	sar    dl,cl
  41800a:	shl    DWORD PTR [esi+0x6a],0x5a
  41800e:	stos   DWORD PTR es:[edi],eax
  41800f:	cli    
  418010:	push   cs
  418011:	dec    ecx
  418012:	or     BYTE PTR [ebp-0x6d33af61],ah
  418018:	loopne 0x417fa6
  41801a:	sbb    BYTE PTR [ebp-0x694c5555],bl
  418020:	in     eax,0x60
  418022:	dec    ebp
  418023:	rcl    DWORD PTR [ebp+0x5e],cl
  418026:	mov    BYTE PTR [ecx-0x7e],dl
  418029:	jbe    0x418068
  41802b:	(bad)  
  41802c:	aad    0xb6
  41802e:	or     esi,edx
  418030:	pop    ebx
  418031:	inc    edi
  418032:	cmp    DWORD PTR [edx+0x21],esp
  418035:	(bad)  
  418036:	push   ecx
  418037:	sahf   
  418038:	repnz mov edx,0xe608fa4a
  41803e:	inc    edi
  41803f:	es pop ebp
  418041:	dec    eax
  418042:	mov    ah,0xb5
  418044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418045:	jmp    0x418029
  418047:	sub    DWORD PTR [eax+0x2dd2ee2],ebp
  41804d:	outs   dx,DWORD PTR ds:[esi]
  41804e:	sar    BYTE PTR [esi],cl
  418050:	or     al,0xac
  418052:	sar    esi,1
  418054:	mov    esp,0x33bd5da7
  418059:	or     eax,0x2ab81b76
  41805e:	adc    ch,BYTE PTR [eax+edi*4-0x1d886f66]
  418065:	std    
  418066:	dec    ebx
  418067:	mov    eax,0xfa1b74c7
  41806c:	pop    esi
  41806d:	ds jp  0x4180e0
  418070:	mov    esi,0xc57e283c
  418075:	push   esp
  418076:	sti    
  418077:	clc    
  418078:	adc    esi,edx
  41807a:	mov    ds:0xc974e65e,al
  41807f:	jbe    0x41803b
  418081:	icebp  
  418082:	or     BYTE PTR [ecx],dl
  418084:	das    
  418085:	adc    ebp,DWORD PTR [ecx-0x1d]
  418088:	cmp    ch,BYTE PTR [edi]
  41808a:	iret   
  41808b:	pop    ebp
  41808c:	mov    bh,BYTE PTR [edx+0x510486b6]
  418092:	out    dx,al
  418093:	inc    eax
  418094:	shr    BYTE PTR [eax],0x99
  418097:	fdivr  QWORD PTR ds:0x64206033
  41809d:	jge    0x418083
  41809f:	fdivr  QWORD PTR [edx+0x5bc8bebd]
  4180a5:	push   es
  4180a6:	xor    al,0xc8
  4180a8:	ins    BYTE PTR es:[edi],dx
  4180a9:	adc    BYTE PTR [edi],cl
  4180ab:	(bad)  
  4180ac:	xchg   edx,eax
  4180ad:	mov    ebp,0x610d2985
  4180b2:	js     0x418035
  4180b4:	and    eax,0x61f16757
  4180b9:	cmp    eax,0x8f7044b3
  4180be:	pop    ebp
  4180bf:	int    0x15
  4180c1:	inc    ebx
  4180c2:	mov    gs,WORD PTR [edi+0x78]
  4180c5:	loopne 0x4180b2
  4180c7:	push   es
  4180c8:	inc    ebx
  4180c9:	cmp    esi,DWORD PTR [ebp-0x5ff6f94a]
  4180cf:	cmp    bh,bh
  4180d1:	push   ebx
  4180d2:	rcr    BYTE PTR [ecx-0x5e],cl
  4180d5:	jecxz  0x418061
  4180d7:	ror    DWORD PTR [ebp+0x6ecfdc3e],cl
  4180dd:	jo     0x418110
  4180df:	or     edx,DWORD PTR [edi+0x2a]
  4180e2:	mov    ch,0x40
  4180e4:	rcl    BYTE PTR [ecx-0x22f69662],0x13
  4180eb:	retf   0xd3c0
  4180ee:	in     al,dx
  4180ef:	cli    
  4180f0:	arpl   bp,bp
  4180f2:	mov    al,ds:0x5cd44ba2
  4180f7:	mov    ds:0x2eb7235e,al
  4180fc:	jg     0x4180bc
  4180fe:	jecxz  0x41810b
  418100:	fwait
  418101:	mov    ds:0x1f2e21c5,al
  418106:	pop    edx
  418107:	push   cs
  418108:	addr16 in eax,0x98
  41810b:	out    dx,eax
  41810c:	and    eax,0x52727252
  418111:	cmp    ecx,ebx
  418113:	sub    esp,DWORD PTR [edi]
  418115:	dec    esp
  418116:	xchg   ecx,eax
  418117:	out    dx,al
  418118:	lods   eax,DWORD PTR ds:[esi]
  418119:	in     eax,dx
  41811a:	cmp    esp,ecx
  41811c:	jmp    0x2d3f:0xbb3a9014
  418123:	leave  
  418124:	mov    cl,0x7c
  418126:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418128:	dec    edi
  418129:	jae    0x418164
  41812b:	inc    eax
  41812c:	ds adc ah,bl
  41812f:	dec    esi
  418130:	repnz or DWORD PTR [edi],edi
  418133:	sub    BYTE PTR [ebx],ah
  418135:	clc    
  418136:	popf   
  418137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418138:	xchg   ebx,eax
  418139:	mov    BYTE PTR [ecx+0x3d],al
  41813c:	test   BYTE PTR [edx-0x4e755377],ch
  418142:	push   edx
  418143:	dec    ebx
  418144:	adc    BYTE PTR [esi-0x41cda5fd],al
  41814a:	lock xchg esp,eax
  41814c:	xchg   edi,eax
  41814d:	dec    esi
  41814e:	clc    
  41814f:	sbb    eax,DWORD PTR [edx]
  418151:	in     eax,dx
  418152:	dec    ebp
  418153:	sbb    DWORD PTR [ebx],esi
  418155:	mov    al,ds:0x837e4ab5
  41815a:	iret   
  41815b:	shl    BYTE PTR ds:0xef596105,cl
  418161:	imul   esp,DWORD PTR [eax+0x70be1edd],0xffffffee
  418168:	mov    esp,0x6ae27a10
  41816d:	aam    0xc4
  41816f:	sti    
  418170:	fimul  WORD PTR [eax+ebx*2]
  418173:	jno    0x4181cb
  418175:	jns    0x41817e
  418177:	inc    ebx
  418178:	aaa    
  418179:	dec    ebx
  41817a:	adc    eax,0x3275266
  41817f:	sbb    esi,DWORD PTR [edx+0x10fe4a8f]
  418185:	mov    BYTE PTR [esp+ebx*8-0x52],dl
  418189:	dec    esi
  41818a:	sub    dh,BYTE PTR [eax]
  41818c:	pop    ss
  41818d:	add    bl,BYTE PTR [ebp-0x73e7509c]
  418193:	mov    ?,esi
  418195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418196:	aad    0x9f
  418198:	out    dx,al
  418199:	js     0x418136
  41819b:	iret   
  41819c:	adc    eax,0xb0d9e347
  4181a1:	push   es
  4181a2:	cli    
  4181a3:	xor    eax,0x92ec10e
  4181a8:	xor    BYTE PTR [ebx-0x42017025],bl
  4181ae:	bound  ecx,QWORD PTR [ecx]
  4181b0:	in     al,0xad
  4181b2:	gs mov bl,0x13
  4181b5:	fstp   TBYTE PTR [ebp+0xd]
  4181b8:	test   DWORD PTR [edi],0x54eee86e
  4181be:	jmp    0xae7a8630
  4181c3:	inc    ebx
  4181c4:	sub    al,0x4a
  4181c6:	jmp    0x4181eb
  4181c8:	pop    ebx
  4181c9:	daa    
  4181ca:	loope  0x41817b
  4181cc:	adc    eax,0x6e5acc34
  4181d1:	push   cs
  4181d2:	fs pop esp
  4181d4:	dec    ebp
  4181d5:	jb     0x4181c6
  4181d7:	cdq    
  4181d8:	mov    ss,WORD PTR [esi+0x43fc7486]
  4181de:	mov    DWORD PTR [ecx+esi*1],ebp
  4181e1:	xor    BYTE PTR [eax+0xe],bh
  4181e4:	adc    DWORD PTR [esi-0x4294aa94],edi
  4181ea:	add    al,0xbf
  4181ec:	das    
  4181ed:	rol    DWORD PTR [esi+eax*1+0x4],cl
  4181f1:	adc    eax,0xa5f92a65
  4181f6:	bound  ebp,QWORD PTR [ecx]
  4181f8:	push   ebp
  4181fa:	sbb    dl,BYTE PTR [ecx+0x12]
  4181fd:	xlat   BYTE PTR ds:[ebx]
  4181fe:	inc    ebp
  4181ff:	inc    esp
  418200:	es xor eax,0x9de58955
  418206:	iret   
  418207:	push   ss
  418208:	in     eax,dx
  418209:	fsubr  DWORD PTR [eax]
  41820b:	push   edx
  41820c:	adc    BYTE PTR [ebx+0x71e75cae],ch
  418212:	cld    
  418213:	jl     0x418247
  418215:	test   DWORD PTR [edi],0x4d720d58
  41821b:	mov    esi,0xf12367d0
  418220:	test   ax,cx
  418223:	iret   
  418224:	ret    0x4c19
  418227:	leave  
  418228:	mov    dl,BYTE PTR [edx+edi*1]
  41822b:	pop    ebx
  41822c:	push   ss
  41822d:	lea    ebx,[edx+0x73b8483a]
  418233:	dec    edx
  418234:	mov    gs,WORD PTR [edi+0x465e0598]
  41823a:	pushf  
  41823b:	xchg   eax,edi
  41823d:	out    0xc2,eax
  41823f:	jo     0x41820b
  418241:	xchg   edi,eax
  418242:	test   DWORD PTR [esi+0x70],esi
  418245:	inc    ecx
  418246:	jl     0x418262
  418248:	dec    eax
  418249:	dec    esi
  41824a:	jmp    0xcfb8c7ae
  41824f:	les    esi,FWORD PTR [ebp-0x64]
  418252:	ds push ecx
  418254:	inc    edi
  418255:	les    ebp,FWORD PTR [ebx-0x4b]
  418258:	xor    eax,0xa970715f
  41825d:	outs   dx,BYTE PTR ds:[esi]
  41825e:	dec    eax
  41825f:	ss lock leave 
  418262:	xchg   DWORD PTR [edx],ecx
  418264:	(bad)  
  418265:	and    eax,0x3df495ee
  41826a:	fnstsw WORD PTR [ebx-0x3b57182f]
  418270:	loopne 0x418295
  418272:	mov    cl,0x2b
  418274:	mov    ah,0x5
  418276:	out    0xb3,eax
  418278:	mov    ds:0x3ac58cd3,eax
  41827d:	adc    edi,DWORD PTR [ebx]
  41827f:	sbb    DWORD PTR [ebx+0x15],ecx
  418282:	les    edx,FWORD PTR [eax]
  418284:	cli    
  418285:	sub    ah,BYTE PTR ds:0xac6271d1
  41828b:	xchg   ebp,eax
  41828c:	ds mov ch,0x3f
  41828f:	and    eax,0x6a30d0e8
  418294:	jne    0x4182d1
  418296:	inc    esi
  418297:	push   0xfffffff3
  418299:	pop    esp
  41829a:	out    dx,al
  41829b:	clc    
  41829c:	mov    eax,0x9c2d4765
  4182a1:	int    0x21
  4182a3:	mov    ds:0x249b102d,eax
  4182a8:	or     BYTE PTR [ecx],dh
  4182aa:	call   0x67a5:0x5ab6d474
  4182b1:	pop    edi
  4182b2:	mov    ecx,0xfdc2f5e6
  4182b7:	ds mov edi,0x80a5488a
  4182bd:	fidiv  WORD PTR [esi+0x24220f]
  4182c3:	rcr    DWORD PTR [ebx+0x862a89a],cl
  4182c9:	mov    eax,ds:0x9060a0ff
  4182ce:	or     BYTE PTR [ebx-0x6d103ed],al
  4182d4:	add    BYTE PTR [ebx],cl
  4182d6:	lock test BYTE PTR [ecx-0x1c2b3edf],bh
  4182dd:	add    edx,DWORD PTR [esi+eax*8]
  4182e0:	aaa    
  4182e1:	out    dx,al
  4182e2:	add    BYTE PTR [ecx-0x7a],ch
  4182e5:	das    
  4182e6:	xor    ah,cl
  4182e8:	or     al,0x9b
  4182ea:	sub    esp,DWORD PTR ds:0xf1db77cd
  4182f0:	int    0x3
  4182f2:	dec    esp
  4182f3:	imul   edi,DWORD PTR [edi+0x50],0x7d
  4182f7:	js     0x418341
  4182f9:	xchg   ebp,eax
  4182fa:	sub    eax,0x6d3c3d9a
  4182ff:	dec    eax
  418300:	cmc    
  418301:	cmc    
  418302:	out    0x5,al
  418304:	pop    ds
  418305:	cmc    
  418306:	cmp    DWORD PTR ds:0x70c203e4,0xd1e1aaf8
  418310:	arpl   WORD PTR [ebx-0x5c],bp
  418313:	out    dx,eax
  418314:	in     al,0x9
  418316:	mov    ecx,0xfddb906
  41831b:	leave  
  41831c:	add    al,0x17
  41831e:	scas   al,BYTE PTR es:[edi]
  41831f:	cmp    BYTE PTR [ebx-0x7821c33],ah
  418325:	sub    cl,dh
  418327:	pushf  
  418328:	xchg   ebp,eax
  418329:	sbb    bl,bl
  41832b:	push   ebp
  41832c:	jmp    0xbeec9252
  418331:	inc    esp
  418332:	sub    al,0x3e
  418334:	rcr    bl,1
  418336:	and    ecx,edx
  418338:	cmp    bl,BYTE PTR [edx+esi*2]
  41833b:	push   ecx
  41833c:	gs ins BYTE PTR es:[edi],dx
  41833e:	dec    ecx
  41833f:	int    0x49
  418341:	mov    edi,DWORD PTR [ebp-0xf6b6c22]
  418347:	mov    eax,ds:0x325173ee
  41834c:	sub    DWORD PTR [edx+eax*2-0x69],esp
  418350:	push   esp
  418351:	bound  edi,QWORD PTR [edx]
  418353:	lahf   
  418354:	jns    0x418386
  418356:	pop    ss
  418357:	jo     0x41839f
  418359:	pop    edx
  41835a:	aaa    
  41835b:	shrd   edi,eax,0x35
  41835f:	xchg   edx,eax
  418360:	push   edx
  418361:	daa    
  418362:	call   0x5a772da9
  418367:	je     0x4183c6
  418369:	sub    edi,DWORD PTR [ecx+ebp*1]
  41836c:	xor    al,BYTE PTR [ebx+0x1]
  41836f:	cs xor al,0xc8
  418372:	add    BYTE PTR [eax],cl
  418374:	fcomi  st,st(5)
  418376:	fcom   QWORD PTR [edi+0x5]
  418379:	(bad)  
  41837a:	pushf  
  41837b:	add    eax,0x5ca9eabe
  418380:	xchg   edx,eax
  418381:	je     0x4183d9
  418383:	retf   
  418384:	and    eax,0xfe89b39b
  418389:	neg    edx
  41838b:	icebp  
  41838c:	push   cs
  41838d:	cmp    cl,dh
  41838f:	ins    DWORD PTR es:[edi],dx
  418390:	push   cs
  418391:	sbb    al,0x27
  418393:	xchg   ebp,eax
  418394:	sub    eax,0x326ceea1
  418399:	push   esp
  41839a:	(bad)  
  41839b:	into   
  41839c:	fisubr DWORD PTR [ebx-0x3130e75a]
  4183a2:	jge    0x418384
  4183a4:	ss push ss
  4183a6:	jnp    0x418411
  4183a8:	das    
  4183a9:	cmp    BYTE PTR [ebp+0x6853dd4b],bh
  4183af:	scas   eax,DWORD PTR es:[edi]
  4183b0:	aaa    
  4183b1:	mov    edx,0x6e9e0075
  4183b6:	mov    bh,cl
  4183b8:	mov    bl,0x32
  4183ba:	add    bh,dh
  4183bc:	int    0x41
  4183be:	ds mov edi,0x347e6010
  4183c4:	add    al,0xe2
  4183c6:	loope  0x4183eb
  4183c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c9:	mov    edi,0x971203a9
  4183ce:	loope  0x418428
  4183d0:	mov    bh,BYTE PTR [eax+eiz*1]
  4183d3:	data16 or bh,BYTE PTR [edi-0x262b7412]
  4183da:	push   0xdd4c0f39
  4183df:	test   edx,ebx
  4183e1:	lods   al,BYTE PTR ds:[esi]
  4183e2:	popa   
  4183e3:	scas   al,BYTE PTR es:[edi]
  4183e4:	mov    ebx,0x5ba8d6cc
  4183e9:	mov    edx,0x897f7619
  4183ee:	adc    al,0x5d
  4183f0:	fnsave [ebx+0x9]
  4183f3:	jp     0x4183a7
  4183f5:	test   eax,0x19c4cfca
  4183fa:	and    BYTE PTR [ebx+0x4d],al
  4183fd:	sbb    DWORD PTR [edx],ebx
  4183ff:	adc    DWORD PTR [edx+0x38650ed0],0xb2bcb2f3
  418409:	xchg   ch,dh
  41840b:	fcom   st(6)
  41840d:	out    0xc7,eax
  41840f:	pop    edx
  418410:	add    ah,BYTE PTR [ecx+0x40]
  418413:	cmp    al,0xff
  418415:	iret   
  418416:	cwde   
  418417:	inc    ecx
  418418:	jg     0x4183d2
  41841a:	lods   al,BYTE PTR ds:[esi]
  41841b:	daa    
  41841c:	js     0x41841c
  41841e:	sbb    dl,BYTE PTR [eax]
  418420:	jecxz  0x4183a2
  418422:	das    
  418423:	pop    ebx
  418424:	jp     0x4183e0
  418426:	xchg   ebx,eax
  418427:	xchg   BYTE PTR [ebx+0x4b],bl
  41842a:	je     0x4184a6
  41842c:	bound  eax,QWORD PTR [edx-0x35e5b940]
  418432:	into   
  418433:	fucom  st(0)
  418435:	ins    BYTE PTR es:[edi],dx
  418436:	dec    ebx
  418437:	call   FWORD PTR [edi-0x2a]
  41843a:	shl    DWORD PTR ds:0xeb511528,cl
  418440:	mov    cl,0xaa
  418442:	dec    esp
  418443:	jnp    0x4184b4
  418445:	(bad)  
  418446:	ins    BYTE PTR es:[edi],dx
  418447:	pop    edx
  418448:	dec    ebx
  418449:	push   ebx
  41844a:	pop    ebp
  41844b:	dec    edx
  41844c:	js     0x418442
  41844e:	push   edx
  41844f:	mov    ch,0x6f
  418451:	and    BYTE PTR [eax+0x54],bh
  418454:	ror    BYTE PTR [ebp*2+0x1e20adb9],cl
  41845b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41845c:	jecxz  0x418415
  41845e:	leave  
  41845f:	cdq    
  418460:	ret    0xd4f2
  418463:	call   0x90af7c95
  418468:	pop    ebx
  418469:	cmp    ah,dh
  41846b:	popa   
  41846c:	xchg   ebp,eax
  41846d:	call   0x9790:0xf3c88a9f
  418474:	jnp    0x4184f1
  418476:	jmp    0x8a97:0x11b7d2f6
  41847d:	add    eax,0xae96350d
  418482:	mov    cl,BYTE PTR [eax+0x68b0e817]
  418488:	sub    DWORD PTR [edi],ebp
  41848a:	ins    BYTE PTR es:[edi],dx
  41848b:	mov    ebp,ebx
  41848d:	hlt    
  41848e:	sbb    al,0x22
  418490:	stos   DWORD PTR es:[edi],eax
  418491:	hlt    
  418492:	mov    dl,0xee
  418494:	sub    eax,0x28b00211
  418499:	dec    ebx
  41849a:	inc    ebx
  41849b:	aad    0xb6
  41849d:	ja     0x4184ad
  41849f:	and    al,0xd4
  4184a1:	sahf   
  4184a2:	not    BYTE PTR [ebp-0x658145e2]
  4184a8:	add    BYTE PTR [ebx],0x47
  4184ab:	push   0xffffffdd
  4184ad:	sub    eax,0x87e60c04
  4184b2:	jae    0x4184aa
  4184b4:	jns    0x41849e
  4184b6:	popf   
  4184b7:	test   al,0xb9
  4184b9:	pusha  
  4184ba:	mov    ds:0xe500515e,al
  4184bf:	xchg   edx,eax
  4184c0:	cmp    eax,0xd96794b8
  4184c5:	les    ebp,FWORD PTR [ebp+0xc]
  4184c8:	cwde   
  4184c9:	add    esi,DWORD PTR [eax-0x53653f85]
  4184cf:	pop    esi
  4184d0:	dec    ecx
  4184d1:	jmp    0x418509
  4184d3:	jg     0x4184f9
  4184d5:	pop    edx
  4184d6:	pusha  
  4184d7:	ja     0x41851f
  4184d9:	pop    sp
  4184db:	call   0x1cdf9230
  4184e0:	push   ebx
  4184e1:	xchg   ecx,edi
  4184e3:	mov    esp,0x381c4439
  4184e8:	adc    cl,0x1c
  4184eb:	aas    
  4184ec:	pop    ebx
  4184ed:	mov    ebx,0x44fb1e23
  4184f2:	test   al,0xe3
  4184f4:	and    eax,0x8b019372
  4184f9:	pusha  
  4184fa:	inc    edx
  4184fb:	idiv   al
  4184fd:	retf   0xe582
  418500:	mov    ds:0xf696e826,al
  418505:	sub    BYTE PTR [ebp+0x56683cb6],0xcc
  41850c:	mov    ch,0x28
  41850e:	lahf   
  41850f:	jl     0x418546
  418511:	sub    cl,bh
  418513:	lods   eax,DWORD PTR ds:[esi]
  418514:	push   cs
  418515:	mul    DWORD PTR [ecx]
  418517:	mov    esi,0x6314256d
  41851c:	inc    edx
  41851d:	mov    cl,0x33
  41851f:	bound  ebp,QWORD PTR [edx+eax*1-0x5e517d47]
  418526:	(bad)  
  418527:	inc    ecx
  418528:	arpl   WORD PTR [esi+ebx*1],si
  41852b:	jl     0x418537
  41852d:	outs   dx,BYTE PTR ds:[esi]
  41852e:	rcl    BYTE PTR [eax+ecx*4-0x13],0x6d
  418533:	mov    edi,0x346a10fc
  418538:	push   cs
  418539:	fsubr  QWORD PTR [edi+eiz*2-0x7c]
  41853d:	or     DWORD PTR [ebx+0x5e427056],ebp
  418543:	inc    esi
  418544:	nop
  418545:	cmc    
  418546:	mov    esi,0xa9f819f4
  41854b:	clts   
  41854d:	pushf  
  41854e:	sub    BYTE PTR [ebp+ecx*8+0x63],al
  418552:	lea    ebp,[ebx-0x60a23e3d]
  418558:	jo     0x418564
  41855a:	stos   DWORD PTR es:[edi],eax
  41855b:	xor    DWORD PTR [eax-0x6f],eax
  41855e:	(bad)  
  41855f:	push   ds
  418560:	pop    esi
  418561:	ret    0xa984
  418564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418565:	jne    0x4185dd
  418567:	test   eax,0xbea7fc94
  41856c:	arpl   WORD PTR [ebx+0x63],bp
  41856f:	ss aaa 
  418571:	xchg   DWORD PTR [eax+0x46452a5b],ebx
  418577:	mov    edx,0x35e535e6
  41857c:	xchg   ebp,eax
  41857d:	mov    al,bh
  41857f:	sahf   
  418580:	pusha  
  418581:	lea    ebp,[ebp-0x5d]
  418584:	ins    DWORD PTR es:[edi],dx
  418585:	xchg   edi,eax
  418586:	jecxz  0x4185a3
  418588:	mov    al,BYTE PTR [ebx-0x6f71687c]
  41858e:	popf   
  41858f:	xchg   esp,eax
  418590:	sbb    DWORD PTR [ecx-0x72d33e1a],eax
  418596:	loopne 0x4185ea
  418598:	out    dx,al
  418599:	rcl    BYTE PTR [eax+0xc962393],1
  41859f:	addr16 mov esi,0xd7634142
  4185a5:	sti    
  4185a6:	xchg   ebx,eax
  4185a7:	adc    ecx,esp
  4185a9:	mov    eax,0x4e5d215f
  4185ae:	mov    ds:0xbfe0652f,eax
  4185b3:	dec    ebp
  4185b4:	cmp    DWORD PTR ds:0xef7923b4,ebx
  4185ba:	sbb    DWORD PTR [esi+0x5885ac07],0x44
  4185c1:	jb     0x4185cb
  4185c3:	js     0x4185cf
  4185c5:	outs   dx,BYTE PTR ds:[esi]
  4185c6:	fs pop edi
  4185c8:	mov    edi,0xc50db212
  4185cd:	dec    eax
  4185ce:	pop    edx
  4185cf:	aam    0xe1
  4185d1:	push   esi
  4185d2:	mov    esi,0x9c371e63
  4185d7:	ds sbb eax,0x5739bfe9
  4185dd:	mov    bl,0xdb
  4185df:	jns    0x41859b
  4185e1:	sti    
  4185e2:	sub    cl,BYTE PTR [ecx+0x7ab746f0]
  4185e8:	adc    eax,0xe4b2b6a4
  4185ed:	xchg   ecx,eax
  4185ee:	inc    edx
  4185ef:	les    edx,FWORD PTR [edi]
  4185f1:	sahf   
  4185f2:	and    eax,0x7e1cff31
  4185f7:	in     eax,dx
  4185f8:	adc    eax,ebp
  4185fa:	sub    DWORD PTR [edx],0x197be6e0
  418600:	int    0x25
  418602:	imul   esp,DWORD PTR [esp+edi*2-0xb915537],0x71
  41860a:	add    al,bh
  41860c:	and    DWORD PTR [ecx+eiz*1+0x5d891548],0xd2e85558
  418617:	sbb    ecx,0xee8d3964
  41861d:	adc    eax,0x17ea1670
  418622:	mov    ebx,0xf31366d0
  418627:	repz or edx,eax
  41862a:	aad    0xb7
  41862c:	pop    esi
  41862d:	xchg   ecx,eax
  41862e:	stos   DWORD PTR es:[edi],eax
  41862f:	jg     0x418640
  418631:	cdq    
  418632:	push   ss
  418633:	adc    eax,DWORD PTR es:[ebx-0x15c03e05]
  41863a:	pop    edi
  41863b:	aad    0xf1
  41863d:	(bad)  
  41863e:	sbb    eax,0xbe65778
  418643:	mov    bh,0xd7
  418645:	mov    ds:0x82b3c97,al
  41864a:	lods   eax,DWORD PTR ds:[esi]
  41864b:	out    dx,al
  41864c:	arpl   bp,di
  41864e:	es dec esi
  418650:	jmp    0x4185e8
  418652:	mov    WORD PTR [edi-0x15330efa],gs
  418658:	clc    
  418659:	bound  edi,QWORD PTR [ebx+0x5f90742d]
  41865f:	and    cl,cl
  418661:	scas   eax,DWORD PTR es:[edi]
  418662:	inc    ebx
  418663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418664:	add    ebp,DWORD PTR [ebx+edx*8+0x3c63f829]
  41866b:	in     al,dx
  41866c:	fild   QWORD PTR [edx+eiz*1]
  41866f:	mov    bh,BYTE PTR [eax]
  418671:	pop    ebx
  418672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418673:	(bad)  
  418674:	pop    ds
  418675:	mov    al,ds:0x29977948
  41867a:	sbb    edx,DWORD PTR [eax+0x50c37c97]
  418680:	test   BYTE PTR [ecx+ebx*1-0x6b4d7fcd],bh
  418687:	and    ch,dh
  418689:	jne    0x4186d3
  41868b:	or     ebp,ecx
  41868d:	aas    
  41868e:	push   edx
  41868f:	add    DWORD PTR [edi-0x1d323796],esp
  418695:	test   BYTE PTR [eax],al
  418697:	std    
  418698:	mov    ebp,0x6ec070b8
  41869d:	(bad)  
  41869e:	arpl   WORD PTR [ecx],cx
  4186a0:	mov    al,ds:0xfee76aab
  4186a5:	add    cl,dh
  4186a7:	xchg   edx,eax
  4186a8:	push   ecx
  4186a9:	stos   BYTE PTR es:[edi],al
  4186aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ab:	inc    edx
  4186ac:	push   ecx
  4186ad:	stos   DWORD PTR es:[edi],eax
  4186ae:	inc    edi
  4186af:	adc    BYTE PTR [ebx+0x5d],bh
  4186b2:	sub    esp,DWORD PTR [ebp-0x2bd2f426]
  4186b8:	jb     0x4186f5
  4186ba:	sbb    DWORD PTR [eax],0x11
  4186bd:	sbb    eax,0x70fed027
  4186c2:	xor    BYTE PTR [edi-0x43b2ae52],al
  4186c8:	push   ds
  4186c9:	jp     0x41868b
  4186cb:	add    ah,ch
  4186cd:	mov    ch,dl
  4186cf:	inc    eax
  4186d0:	ds mov dl,0x1f
  4186d3:	or     BYTE PTR [ebx+ebp*4+0x6a],dl
  4186d7:	(bad)  
  4186d8:	cwde   
  4186d9:	pop    eax
  4186da:	inc    esi
  4186db:	out    0x89,eax
  4186dd:	and    ch,BYTE PTR es:[ebp+0x12]
  4186e1:	int    0xc4
  4186e3:	jle    0x418738
  4186e5:	aaa    
  4186e6:	repz in eax,0x36
  4186e9:	or     edx,DWORD PTR [edx]
  4186eb:	call   0xe6171c18
  4186f0:	lods   al,BYTE PTR ds:[esi]
  4186f1:	or     al,0x68
  4186f3:	xor    BYTE PTR [edi+0x5e],dl
  4186f6:	pop    ss
  4186f7:	jecxz  0x418717
  4186f9:	dec    edx
  4186fa:	lock dec esi
  4186fc:	jns    0x4186d8
  4186fe:	retf   0x60a4
  418701:	add    bl,dh
  418703:	cmp    dl,BYTE PTR [edi]
  418705:	stc    
  418706:	xchg   BYTE PTR [edx+0x46b1b451],bl
  41870c:	or     DWORD PTR [eax],0x3a
  41870f:	call   0x42df:0x6b510d28
  418716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418717:	pop    ds
  418718:	adc    eax,0x3be4c2f2
  41871d:	inc    edi
  41871e:	inc    esi
  41871f:	push   cs
  418720:	mov    eax,ds:0xdb13cdd0
  418725:	fidivr WORD PTR [ebx]
  418727:	xchg   ah,ah
  418729:	dec    eax
  41872a:	cli    
  41872b:	loopne 0x418782
  41872d:	xor    dh,BYTE PTR [ecx+0x5c9f2390]
  418733:	xor    bh,BYTE PTR [eax+0x7e]
  418736:	in     eax,0xdf
  418738:	xor    ebp,ebp
  41873a:	xchg   esi,eax
  41873b:	cmp    eax,0xe3ea52d3
  418740:	ss jge 0x41874e
  418743:	in     al,0x2c
  418745:	stos   BYTE PTR es:[edi],al
  418746:	inc    esi
  418747:	ret    
  418748:	mov    edx,DWORD PTR [edx-0x5cfca8a5]
  41874e:	mov    ebp,0x911f1b2b
  418753:	aad    0x1c
  418755:	cli    
  418756:	push   0xffffffdf
  418758:	pop    edi
  418759:	or     dl,BYTE PTR [ecx-0x39]
  41875c:	cmp    ebp,DWORD PTR [eax+0x408cd5e5]
  418762:	xchg   edx,eax
  418763:	or     dl,cl
  418765:	dec    ebp
  418766:	adc    ah,ah
  418768:	mov    ecx,0x8c949b3
  41876d:	cmp    BYTE PTR [edi-0x3d],ch
  418770:	xor    DWORD PTR [ecx],ecx
  418772:	bound  edi,QWORD PTR [ebp+0xa7669e9]
  418778:	loope  0x418711
  41877a:	call   0x99d73a98
  41877f:	add    al,dl
  418781:	cmp    DWORD PTR [edi],edx
  418783:	mov    cl,0x3b
  418785:	enter  0x2d7d,0x38
  418789:	add    ebx,DWORD PTR [esp+eiz*2+0x19]
  41878d:	pop    ebp
  41878e:	dec    ebp
  41878f:	cld    
  418790:	push   edx
  418791:	fstp   QWORD PTR [esi-0x6adc6fde]
  418797:	add    DWORD PTR [ecx+0x503c156f],0x6c
  41879e:	ret    0x52cb
  4187a1:	dec    edx
  4187a2:	mov    dh,0x2
  4187a4:	fst    DWORD PTR [ebx]
  4187a6:	lds    eax,FWORD PTR [esi-0x2e]
  4187a9:	test   al,dl
  4187ab:	pop    ss
  4187ac:	repnz mov DWORD PTR [esi],ebx
  4187af:	add    eax,DWORD PTR [edi+edi*2-0x42bfe433]
  4187b6:	mov    sp,0x951e
  4187ba:	add    eax,0x18235bf6
  4187bf:	sub    cl,BYTE PTR [eax]
  4187c1:	loope  0x4187db
  4187c3:	xor    ah,BYTE PTR [ebx+0x2f]
  4187c6:	retf   
  4187c7:	and    bl,BYTE PTR [edi-0x5f]
  4187ca:	scas   eax,DWORD PTR es:[edi]
  4187cb:	push   edx
  4187cc:	xchg   edx,eax
  4187cd:	fmul   st,st(4)
  4187cf:	mov    cl,0xe2
  4187d1:	or     BYTE PTR [esi+0x22],0x88
  4187d5:	pop    ebx
  4187d6:	daa    
  4187d7:	xchg   esi,eax
  4187d8:	jg     0x418819
  4187da:	fcmovnb st,st(4)
  4187dc:	iretw  
  4187de:	int    0x15
  4187e0:	add    DWORD PTR [ebx+0xf],0x65
  4187e4:	loope  0x4187ad
  4187e6:	cmp    al,0x40
  4187e8:	je     0x418826
  4187ea:	gs stc 
  4187ec:	add    DWORD PTR [ebp+0x46],0x6e65a9a0
  4187f3:	ja     0x41884e
  4187f5:	sti    
  4187f6:	cli    
  4187f7:	inc    ebx
  4187f8:	div    DWORD PTR [edx+0x1ba9a226]
  4187fe:	push   edx
  4187ff:	mov    ds:0x8a5ce77d,eax
  418804:	outs   dx,DWORD PTR ds:[esi]
  418805:	mov    dh,0xc5
  418807:	lds    edx,FWORD PTR ds:0x4315d110
  41880d:	mov    bh,0x91
  41880f:	pop    ebx
  418810:	(bad)  
  418811:	sbb    BYTE PTR ds:0xc753c87,ah
  418817:	or     dl,BYTE PTR [ebx-0x29]
  41881a:	lea    esi,[ebp-0x6b]
  41881d:	addr16 out 0x9d,eax
  418820:	inc    eax
  418821:	pop    ebp
  418822:	and    esi,edx
  418824:	push   es
  418825:	fwait
  418826:	xchg   DWORD PTR [esi+edx*4-0x3396537],ebx
  41882d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41882f:	pop    eax
  418830:	clc    
  418831:	add    eax,0xb08ab695
  418836:	rcl    BYTE PTR [bp+si-0x12],cl
  41883a:	dec    ebx
  41883b:	sar    BYTE PTR [eax],cl
  41883d:	inc    ebx
  41883e:	sub    BYTE PTR [esi+0x3],0xbc
  418842:	mov    ebx,0x47143494
  418847:	push   edx
  418848:	add    bl,BYTE PTR ds:0xb50815dc
  41884e:	popf   
  41884f:	or     ebx,DWORD PTR ds:[eax-0x747a59ee]
  418856:	shl    BYTE PTR [edx-0x10dede6f],cl
  41885c:	(bad)  
  41885d:	enter  0x70ea,0x8e
  418861:	les    ecx,FWORD PTR [edi-0x35694edd]
  418867:	jg     0x4188a2
  418869:	fcom   st(7)
  41886b:	pop    ecx
  41886c:	(bad)  
  41886d:	fcomp  QWORD PTR [ecx-0x1c]
  418870:	jmp    edx
  418872:	pop    edi
  418873:	mov    esp,edi
  418875:	adc    ebp,DWORD PTR [edx]
  418877:	dec    ebp
  418878:	jmp    0x5fcf:0x741cb3ff
  41887f:	sahf   
  418880:	ds cld 
  418882:	ins    BYTE PTR es:[edi],dx
  418883:	cmp    al,0x18
  418885:	mov    ebp,0x827d52ec
  41888a:	pop    ss
  41888b:	cmp    eax,DWORD PTR ds:0x6bf03b0d
  418891:	push   ebp
  418892:	push   ss
  418893:	jnp    0x418896
  418895:	fild   DWORD PTR [ebx+0x66c88286]
  41889b:	jmp    0x41887f
  41889d:	adc    DWORD PTR [edi],0x11
  4188a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a1:	in     al,0x3d
  4188a3:	(bad)  
  4188a4:	dec    esi
  4188a5:	sbb    ch,BYTE PTR [edi-0x7690cccb]
  4188ab:	mov    bh,0xf8
  4188ad:	popa   
  4188ae:	call   0xd3e21290
  4188b3:	pusha  
  4188b4:	pop    edi
  4188b5:	inc    ebp
  4188b6:	test   bl,bl
  4188b8:	mov    ch,0x9a
  4188ba:	dec    edx
  4188bb:	ds out dx,eax
  4188bd:	sbb    eax,edx
  4188bf:	cmp    BYTE PTR [edx-0x29eeb23c],bl
  4188c5:	imul   esp,DWORD PTR [edi+edx*1],0x2a804203
  4188cc:	iret   
  4188cd:	push   esi
  4188ce:	lods   eax,DWORD PTR ds:[esi]
  4188cf:	add    eax,0x9991b0f6
  4188d4:	xor    DWORD PTR [esi],esi
  4188d6:	pop    edi
  4188d7:	jp     0x418898
  4188d9:	push   eax
  4188da:	sbb    DWORD PTR [ebp+0x69af9001],0x62b29e27
  4188e4:	push   eax
  4188e5:	int3   
  4188e6:	daa    
  4188e7:	jbe    0x418870
  4188e9:	push   0xc560c3f8
  4188ee:	out    dx,al
  4188ef:	sbb    BYTE PTR [esi+0x4b],0x19
  4188f3:	int3   
  4188f4:	sbb    DWORD PTR [esi+edi*1-0x1e050da7],ebp
  4188fb:	(bad)  
  4188fc:	lea    edi,[eax-0x5908652a]
  418902:	fld    TBYTE PTR [edi+0x32]
  418905:	sbb    bh,dl
  418907:	sub    dh,bh
  418909:	and    al,0x79
  41890b:	xor    BYTE PTR [edx+edx*2-0x1c],cl
  41890f:	mov    dh,0x17
  418911:	rcl    DWORD PTR [ebx],0xdd
  418914:	call   0x3ec93e69
  418919:	jmp    0xd273:0xdc6f3c39
  418920:	sbb    al,BYTE PTR [eax]
  418922:	ss cdq 
  418924:	ss pop edx
  418926:	jnp    0x418948
  418928:	cld    
  418929:	lods   eax,DWORD PTR ds:[esi]
  41892a:	adc    cl,BYTE PTR [edx+0x2c]
  41892d:	pop    ecx
  41892e:	inc    ebp
  41892f:	stos   BYTE PTR es:[edi],al
  418930:	mov    bh,0xd0
  418932:	xchg   esp,eax
  418933:	xor    BYTE PTR [ebp+0x2a1e1b72],ch
  418939:	fwait
  41893a:	jmp    0xa330da3a
  41893f:	cli    
  418940:	mov    ds:0x19bae2f5,eax
  418945:	sbb    eax,ebp
  418947:	add    DWORD PTR [edi+0x41],ebp
  41894a:	(bad)  
  41894b:	jb     0x41890d
  41894d:	dec    ebx
  41894e:	jb     0x41896b
  418950:	sub    ecx,DWORD PTR [ecx+eax*1]
  418953:	xchg   ebx,eax
  418954:	or     ebp,DWORD PTR [ebx+0xef51c9c]
  41895a:	xor    DWORD PTR [ebx],ecx
  41895c:	fisubr DWORD PTR [ebp-0x25489251]
  418962:	sub    al,ch
  418964:	out    dx,eax
  418965:	repz pop es
  418967:	fwait
  418968:	mov    al,0xff
  41896a:	push   ds
  41896b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41896d:	mov    al,ds:0x5527b433
  418972:	fwait
  418973:	mov    al,ds:0x4a6f790c
  418978:	inc    edi
  418979:	mov    bh,0xb
  41897b:	pop    es
  41897c:	pop    ds
  41897d:	cmp    BYTE PTR [ebx],cl
  41897f:	sub    al,0x8d
  418981:	push   esi
  418982:	xchg   ah,dh
  418984:	dec    ecx
  418985:	sar    BYTE PTR [edx-0x68],0xc2
  418989:	lods   eax,DWORD PTR ds:[esi]
  41898a:	dec    ebp
  41898b:	adc    eax,0x3eb7abcd
  418990:	repnz cmp bl,BYTE PTR [ecx+0x2a10953]
  418997:	cmp    dl,bl
  418999:	fistp  WORD PTR [ebp+edi*1+0x32]
  41899d:	out    0x52,eax
  41899f:	jne    0x41899a
  4189a1:	mov    cl,0x93
  4189a3:	and    dh,BYTE PTR [esi]
  4189a5:	fsubp  st(4),st
  4189a7:	cmp    edx,ebp
  4189a9:	(bad)  
  4189aa:	(bad)
  4189ad:	popa   
  4189ae:	call   0xb59e:0x46bccdfe
  4189b5:	cld    
  4189b6:	sub    eax,0x7c63266f
  4189bb:	inc    ebp
  4189bc:	mov    edx,0x7884eaf3
  4189c1:	cli    
  4189c2:	mov    esp,0xd6430cf6
  4189c7:	in     eax,0x94
  4189c9:	enter  0xf11e,0xbb
  4189cd:	int3   
  4189ce:	sbb    BYTE PTR [ecx-0xe],dh
  4189d1:	ret    0x11c6
  4189d4:	shr    DWORD PTR [ebx+0x24],1
  4189d7:	lods   al,BYTE PTR ds:[esi]
  4189d8:	inc    edi
  4189d9:	int    0xe7
  4189db:	std    
  4189dc:	and    DWORD PTR [esi+0x39],eax
  4189df:	sbb    edx,DWORD PTR [eax+eiz*4]
  4189e2:	jle    0x418a18
  4189e4:	xchg   edx,eax
  4189e5:	fwait
  4189e6:	icebp  
  4189e7:	pop    esi
  4189e8:	add    al,0xf6
  4189ea:	std    
  4189eb:	push   0xb526b7ce
  4189f0:	dec    edi
  4189f1:	xor    eax,0xe105bd6a
  4189f6:	mov    bl,0x78
  4189f8:	out    0xf4,al
  4189fa:	in     al,dx
  4189fb:	in     eax,dx
  4189fc:	aas    
  4189fd:	add    ah,bh
  4189ff:	pop    es
  418a00:	inc    esi
  418a01:	xor    eax,0x67f5ef6d
  418a06:	test   eax,0x81e0c3e
  418a0b:	jnp    0x418a67
  418a0d:	cmp    DWORD PTR [ecx],edx
  418a0f:	mov    dl,0x61
  418a11:	xchg   ecx,eax
  418a12:	or     DWORD PTR [edi-0x5d],esp
  418a15:	cmp    eax,0x707e4c83
  418a1a:	sub    bl,dh
  418a1c:	mov    eax,ds:0x7c072ec9
  418a21:	ss push ebp
  418a23:	jmp    0x5c2d45b4
  418a28:	add    eax,0x434cc7a3
  418a2d:	or     DWORD PTR [esi-0x2b116adf],edx
  418a33:	dec    ebx
  418a34:	mov    ch,0x2a
  418a36:	pusha  
  418a37:	fidivr WORD PTR [esi]
  418a39:	pop    ss
  418a3a:	clc    
  418a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a3c:	in     al,dx
  418a3d:	mov    ds:0xfe7524de,eax
  418a42:	call   eax
  418a44:	xchg   edi,eax
  418a45:	mov    al,0xfb
  418a47:	xor    esp,DWORD PTR [ebx+ecx*2]
  418a4a:	add    al,ah
  418a4c:	adc    eax,0x85d8207c
  418a51:	iret   
  418a52:	or     eax,0xa96241a8
  418a57:	(bad)  
  418a58:	push   ebp
  418a59:	mov    cl,0x35
  418a5b:	pop    eax
  418a5c:	mov    dl,0x39
  418a5e:	fidiv  WORD PTR [esi-0x7419c5b5]
  418a64:	out    0x3e,eax
  418a66:	pushf  
  418a67:	pop    ebp
  418a68:	add    DWORD PTR gs:[eax],0x13
  418a6c:	fsub   QWORD PTR [ebx]
  418a6e:	(bad)  
  418a6f:	mov    ch,0x62
  418a71:	cmp    edi,edx
  418a73:	lods   eax,DWORD PTR ds:[esi]
  418a74:	mov    ebp,esp
  418a76:	les    eax,FWORD PTR [edi+0x2]
  418a79:	das    
  418a7a:	or     ebx,esp
  418a7c:	pop    ecx
  418a7d:	aas    
  418a7e:	pop    ecx
  418a7f:	dec    ebp
  418a80:	pop    edx
  418a81:	call   0x692b:0xc2a2faa1
  418a88:	pusha  
  418a89:	sub    eax,0xceb9d406
  418a8e:	sti    
  418a8f:	push   edi
  418a90:	mov    bh,0xb1
  418a92:	stos   DWORD PTR es:[edi],eax
  418a93:	fldlg2 
  418a95:	adc    ecx,DWORD PTR [esi+0x79]
  418a98:	mov    esi,0xaafdaa4b
  418a9d:	ret    
  418a9e:	sub    al,0x8d
  418aa0:	aas    
  418aa1:	lods   eax,DWORD PTR ds:[esi]
  418aa2:	sbb    eax,0xc03b93a1
  418aa7:	jns    0x418b11
  418aa9:	outs   dx,DWORD PTR ds:[esi]
  418aaa:	pop    ebp
  418aab:	inc    esi
  418aac:	outs   dx,DWORD PTR ds:[esi]
  418aad:	add    ch,dh
  418aaf:	jmp    0x418aef
  418ab1:	rcl    ebp,1
  418ab3:	pop    ebx
  418ab4:	jo     0x418a79
  418ab6:	sub    DWORD PTR [ebp-0x8],edx
  418ab9:	push   ecx
  418aba:	bound  ecx,QWORD PTR [eax-0x34078363]
  418ac0:	dec    ebx
  418ac1:	jbe    0x418b36
  418ac3:	push   0x4e9ae335
  418ac8:	xchg   esp,eax
  418ac9:	add    ebx,DWORD PTR [ebp-0xf]
  418acc:	imul   esp,DWORD PTR [ecx+0x2b1e227],0xfffffff5
  418ad3:	pop    esp
  418ad4:	add    eax,0x4b1a1ca8
  418ad9:	outs   dx,DWORD PTR ds:[esi]
  418ada:	jbe    0x418ad6
  418adc:	popa   
  418add:	(bad)  
  418adf:	(bad)  
  418ae1:	nop
  418ae2:	and    edx,DWORD PTR [ebx+0x7f78f2f4]
  418ae8:	adc    eax,esi
  418aea:	fcomp  DWORD PTR [ebp+0x32]
  418aed:	push   ss
  418aee:	adc    BYTE PTR [esi],dl
  418af0:	daa    
  418af1:	xchg   edi,eax
  418af2:	mov    ds:0xa5a0637d,eax
  418af7:	mov    esp,0x45a88e5b
  418afc:	inc    ecx
  418afd:	mov    WORD PTR [edx],gs
  418aff:	pusha  
  418b00:	std    
  418b01:	ror    BYTE PTR [eax+0x5af8a2ce],cl
  418b07:	adc    eax,0xa9a2d106
  418b0c:	or     DWORD PTR [edi+edx*4],ebp
  418b0f:	retf   0x55d5
  418b12:	cmp    DWORD PTR [ebp+edi*1+0x32],ecx
  418b16:	retf   0x72c
  418b19:	dec    esp
  418b1a:	push   esi
  418b1b:	dec    ebp
  418b1c:	popf   
  418b1d:	jmp    FWORD PTR [ecx+0x62]
  418b20:	sub    al,0x39
  418b22:	push   esi
  418b23:	ficom  DWORD PTR [ecx]
  418b25:	imul   ecx,DWORD PTR [eax+0x45],0x29
  418b29:	ror    edi,1
  418b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b2c:	push   eax
  418b2d:	push   0xffffffac
  418b2f:	and    ebx,DWORD PTR [ebp-0x77b7ab7f]
  418b35:	retf   
  418b36:	xor    al,0x9d
  418b38:	fnsave [ebp-0x19827d7d]
  418b3e:	push   ebx
  418b3f:	xlat   BYTE PTR ds:[ebx]
  418b40:	push   ds
  418b41:	inc    edi
  418b42:	mov    bh,0xc2
  418b44:	mov    bl,BYTE PTR [edi+0x7e]
  418b47:	xchg   esi,eax
  418b48:	ror    bl,1
  418b4a:	out    dx,eax
  418b4b:	std    
  418b4c:	mov    BYTE PTR [edx],cl
  418b4e:	aam    0xf6
  418b50:	mov    ecx,0x55f9ab75
  418b55:	mov    eax,0xa60e6ded
  418b5a:	mov    esi,0xa81e4cce
  418b5f:	inc    esp
  418b60:	push   0x90ab0db1
  418b65:	xchg   ebx,eax
  418b66:	mov    dh,0x8e
  418b68:	inc    eax
  418b69:	scas   eax,DWORD PTR es:[edi]
  418b6a:	fsubr  st,st(7)
  418b6c:	xor    BYTE PTR [ebp+0x6cb017c8],dl
  418b72:	nop
  418b73:	inc    eax
  418b74:	fidivr DWORD PTR ds:0x4257a6ee
  418b7a:	mov    edi,0xba8471f1
  418b7f:	pop    eax
  418b80:	or     BYTE PTR [ecx-0xeb866a0],bl
  418b86:	sbb    eax,0xe7b1d2e2
  418b8b:	pop    edi
  418b8c:	xor    eax,0x25a2af39
  418b91:	dec    ebx
  418b92:	sub    ecx,edx
  418b94:	test   al,0x8b
  418b96:	inc    eax
  418b97:	or     dh,BYTE PTR [edx+0x529ec66a]
  418b9d:	xchg   edi,eax
  418b9e:	popa   
  418b9f:	iret   
  418ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba1:	jmp    0x418be6
  418ba3:	xchg   edx,eax
  418ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba5:	aas    
  418ba6:	sbb    al,0x9e
  418ba8:	inc    esp
  418ba9:	ret    
  418baa:	stos   BYTE PTR es:[edi],al
  418bab:	cld    
  418bac:	xlat   BYTE PTR ds:[ebx]
  418bad:	retf   
  418bae:	jmp    0xd104e3f4
  418bb3:	push   edx
  418bb4:	inc    edx
  418bb5:	stc    
  418bb6:	inc    ebp
  418bb7:	push   cs
  418bb8:	ja     0x418ba1
  418bba:	cld    
  418bbb:	sub    BYTE PTR [ecx],ch
  418bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bbe:	cmc    
  418bbf:	or     eax,0x11b3a206
  418bc4:	cmp    ebp,edi
  418bc6:	add    ch,BYTE PTR [edx-0x2890b10f]
  418bcc:	mov    gs,esp
  418bce:	es fwait
  418bd0:	push   ecx
  418bd1:	rcr    DWORD PTR [ecx+0x4ed225c2],cl
  418bd7:	add    BYTE PTR [edx],0xf5
  418bda:	push   edi
  418bdb:	add    dl,bl
  418bdd:	addr16 (bad) 
  418bdf:	call   0xfa16:0x67424d86
  418be6:	jl     0x418c20
  418be8:	pop    ds
  418be9:	xor    eax,0xb27560b3
  418bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bef:	addr16 (bad) 
  418bf1:	adc    ah,BYTE PTR [esi+eax*2+0x65a2622c]
  418bf8:	aaa    
  418bf9:	call   0x444e:0x8de420a3
  418c00:	push   esi
  418c01:	push   0xffffffa5
  418c03:	pop    ss
  418c04:	(bad)
  418c08:	jnp    0x418c7e
  418c0a:	mov    eax,ds:0x41ba31e5
  418c0f:	mov    cl,dl
  418c11:	test   al,0xc2
  418c13:	ja     0x418c92
  418c15:	cmc    
  418c16:	mov    eax,0x1e7d38d4
  418c1b:	aam    0x74
  418c1d:	inc    edi
  418c1e:	cmp    ch,BYTE PTR [edx-0x22f8c7d3]
  418c24:	jne    0x418ca5
  418c26:	enter  0x4795,0x81
  418c2a:	mov    ch,0x34
  418c2c:	aas    
  418c2d:	fmul   DWORD PTR [edi]
  418c2f:	push   ecx
  418c30:	mov    DWORD PTR [edx+0x3fb60441],ebx
  418c36:	leave  
  418c37:	movaps xmm3,XMMWORD PTR [ebx]
  418c3a:	sbb    BYTE PTR [edi-0x32],dl
  418c3d:	popf   
  418c3e:	adc    DWORD PTR [ebx+edi*8-0x3d],0xf9c69f68
  418c46:	fcomp  DWORD PTR [ebx-0x340e7a73]
  418c4c:	ja     0x418c4e
  418c4e:	add    DWORD PTR [ebx+0x4b3dc8ac],0x7d
  418c55:	fistp  QWORD PTR [esi-0x25409cc4]
  418c5b:	ror    BYTE PTR [ebx+ebx*8],0xc4
  418c5f:	push   es
  418c60:	cs cld 
  418c62:	pop    edi
  418c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c64:	cdq    
  418c65:	dec    ebp
  418c66:	add    DWORD PTR [edi],esp
  418c68:	repnz (bad) 
  418c6a:	mov    ecx,DWORD PTR [edx]
  418c6c:	shr    DWORD PTR [ebx],0xea
  418c6f:	sbb    cl,BYTE PTR [esi+0x2b]
  418c72:	sub    al,0xfd
  418c74:	add    ebp,ecx
  418c76:	aas    
  418c77:	mov    bh,0x48
  418c79:	inc    edi
  418c7a:	add    eax,0xe21f8998
  418c7f:	add    eax,0x7418dac8
  418c84:	jp     0x418d04
  418c86:	and    BYTE PTR [ebp-0x5c],cl
  418c89:	sahf   
  418c8a:	xchg   ebp,eax
  418c8b:	sbb    DWORD PTR [edi],ecx
  418c8d:	dec    esp
  418c8e:	jp     0x418cb1
  418c90:	in     al,dx
  418c91:	xchg   ebx,eax
  418c92:	pop    eax
  418c93:	xchg   ebx,eax
  418c94:	add    DWORD PTR ds:0x7cf9d0dc,edx
  418c9a:	dec    esi
  418c9b:	adc    ebp,ebx
  418c9d:	xchg   DWORD PTR [eax+eax*8-0x48],edx
  418ca1:	stc    
  418ca2:	rcl    BYTE PTR [edi-0x46],0x1a
  418ca6:	iret   
  418ca7:	shl    dl,0x16
  418caa:	mov    dl,0xc8
  418cac:	inc    ecx
  418cad:	or     al,dl
  418caf:	sbb    esi,ebp
  418cb1:	inc    edx
  418cb2:	fdiv   st(2),st
  418cb4:	scas   al,BYTE PTR es:[edi]
  418cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb6:	adc    BYTE PTR [ecx+ebp*2-0x5a0347d5],al
  418cbd:	jl     0x418d08
  418cbf:	scas   al,BYTE PTR es:[edi]
  418cc0:	jb     0x418cf2
  418cc2:	(bad)  
  418cc3:	clc    
  418cc4:	sbb    cl,ch
  418cc6:	pop    ss
  418cc7:	mov    bh,0xe
  418cc9:	push   ss
  418cca:	in     eax,dx
  418ccb:	jg     0x418c5d
  418ccd:	mov    eax,0x65360658
  418cd2:	aaa    
  418cd3:	mov    bl,0x4a
  418cd5:	fcomp  QWORD PTR [esi-0x3c06a71b]
  418cdb:	cmp    edx,DWORD PTR [ebx-0x22c251c3]
  418ce1:	mov    DWORD PTR [edx+0x63b2ea26],esi
  418ce7:	pop    ss
  418ce8:	inc    eax
  418ce9:	stos   DWORD PTR es:[edi],eax
  418cea:	and    eax,0x66ab4205
  418cef:	mov    cl,0x96
  418cf1:	jb     0x418c7f
  418cf3:	sti    
  418cf4:	fcomp  DWORD PTR [esi+0x29]
  418cf7:	add    ebp,DWORD PTR [eiz*1+0x47ee3ce6]
  418cfe:	in     eax,dx
  418cff:	imul   esp,edi,0xfdc67990
  418d05:	cmp    bh,BYTE PTR [edi-0x3f]
  418d08:	and    DWORD PTR [edi-0x65],0x1
  418d0c:	dec    ebp
  418d0d:	outs   dx,DWORD PTR ds:[esi]
  418d0e:	push   ecx
  418d0f:	adc    BYTE PTR [esi-0x5c],bl
  418d12:	jmp    0x418ce7
  418d14:	sahf   
  418d15:	push   0xaa1833cb
  418d1a:	ror    edx,cl
  418d1c:	jnp    0x418d49
  418d1e:	cmp    esp,DWORD PTR [ebx]
  418d20:	shl    ah,cl
  418d22:	(bad)  
  418d23:	cmp    DWORD PTR [ecx+0x33db81e7],ebp
  418d29:	stc    
  418d2a:	xor    eax,0x47285e5f
  418d2f:	stc    
  418d30:	loopne 0x418d6f
  418d32:	scas   al,BYTE PTR es:[edi]
  418d33:	ficomp WORD PTR ds:0x2b8b562
  418d39:	int3   
  418d3a:	sar    BYTE PTR [edx-0x7],cl
  418d3d:	sti    
  418d3e:	push   ds
  418d3f:	inc    eax
  418d40:	mov    eax,ds:0x8bfff9c2
  418d45:	pop    esi
  418d46:	or     eax,0x1edbba6f
  418d4b:	stc    
  418d4c:	icebp  
  418d4d:	xor    al,0x3e
  418d4f:	shl    BYTE PTR [esi],cl
  418d51:	inc    eax
  418d52:	mov    dl,0x42
  418d54:	into   
  418d55:	push   0x498bdda
  418d5a:	in     eax,0x70
  418d5c:	push   edx
  418d5d:	(bad)  
  418d5e:	sbb    eax,ebp
  418d60:	rcl    BYTE PTR [edx],0x27
  418d63:	and    BYTE PTR [edx],al
  418d65:	lock repnz fmul DWORD PTR [ebx]
  418d69:	in     al,0x94
  418d6b:	mov    dh,0x8
  418d6d:	dec    ebx
  418d6e:	sbb    al,0x93
  418d70:	jmp    0x418d6b
  418d72:	push   ecx
  418d73:	cmp    ebx,DWORD PTR [ecx+0x4f9115dd]
  418d79:	fsub   st(1),st
  418d7b:	push   es
  418d7c:	lds    edx,FWORD PTR [eax]
  418d7e:	xor    al,dl
  418d80:	stos   DWORD PTR es:[edi],eax
  418d81:	(bad)  
  418d82:	repz fiadd DWORD PTR [esi]
  418d85:	(bad)  
  418d86:	(bad)  
  418d87:	cmp    al,0x14
  418d89:	jb     0x418dd8
  418d8b:	mov    al,0x65
  418d8d:	cmp    eax,0x276a6f26
  418d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d93:	push   edi
  418d94:	jnp    0x418e0c
  418d96:	add    edx,DWORD PTR [esi+0x20]
  418d99:	mov    eax,0xd8353eaa
  418d9e:	push   es
  418d9f:	adc    BYTE PTR [edx+eax*1+0x11],dh
  418da3:	cs mov edx,es
  418da6:	xor    dl,dl
  418da8:	or     cl,BYTE PTR [esi+esi*2+0x6c41fa97]
  418daf:	call   0xde764bc1
  418db4:	and    eax,0x6cfcb737
  418db9:	ins    BYTE PTR es:[edi],dx
  418dba:	popa   
  418dbb:	int3   
  418dbc:	bound  esp,QWORD PTR [ebx+0x36]
  418dbf:	push   esp
  418dc0:	dec    ebp
  418dc1:	pop    ecx
  418dc2:	(bad)  
  418dc3:	pop    ebp
  418dc4:	dec    ecx
  418dc5:	push   ebp
  418dc6:	push   ds
  418dc7:	or     eax,0xef6526ba
  418dcc:	cmp    esp,0x6610b74c
  418dd2:	push   ecx
  418dd3:	cmp    ebp,DWORD PTR [edx-0x7b]
  418dd6:	push   esi
  418dd7:	push   cs
  418dd8:	(bad)  
  418dd9:	inc    eax
  418dda:	in     eax,dx
  418ddb:	call   0x6e0f0265
  418de0:	xchg   esp,eax
  418de1:	sti    
  418de2:	mov    dh,BYTE PTR [edi]
  418de4:	push   ecx
  418de5:	pop    ds
  418de6:	xor    ebx,DWORD PTR [edi]
  418de8:	aaa    
  418de9:	cmc    
  418dea:	sti    
  418deb:	aaa    
  418dec:	test   DWORD PTR [eax+0x20],0x728470f6
  418df3:	lods   al,BYTE PTR ds:[esi]
  418df4:	les    edx,FWORD PTR [esi]
  418df6:	pop    cx
  418df8:	imul   edx,edi,0x5
  418dfb:	xor    BYTE PTR [ebx+0x4e],0x7c
  418dff:	inc    esi
  418e00:	xchg   DWORD PTR [eax+eiz*4+0x474fb67c],ecx
  418e07:	mov    WORD PTR [edi],?
  418e09:	xchg   ecx,eax
  418e0a:	jmp    0x8d:0xb2133147
  418e11:	jg     0x418df7
  418e13:	ficomp WORD PTR [eax+ebx*1+0x71b2fbf7]
  418e1a:	aaa    
  418e1b:	and    esi,esp
  418e1d:	xchg   DWORD PTR [esi-0x40],eax
  418e20:	(bad)  
  418e22:	sbb    al,0xbe
  418e24:	and    BYTE PTR ds:0x272efff8,ch
  418e2a:	inc    esi
  418e2b:	cmc    
  418e2c:	and    ebp,DWORD PTR [eax+0x3a5e4958]
  418e32:	out    0xee,al
  418e34:	mov    ebp,0x8b45eada
  418e39:	xor    eax,0x2abf7415
  418e3e:	cmc    
  418e3f:	in     eax,0x3f
  418e41:	out    0x9e,eax
  418e43:	cmp    eax,0xe40019a6
  418e48:	repz push ecx
  418e4a:	fldcw  WORD PTR [esi-0x195093e3]
  418e50:	add    BYTE PTR [eax-0x6a],dl
  418e53:	loop   0x418e0e
  418e55:	mov    ebx,0xd64c1ced
  418e5a:	cmp    al,0x86
  418e5c:	adc    al,0xaa
  418e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e5f:	sbb    eax,0xf78abd40
  418e64:	xor    al,0x3e
  418e66:	rol    DWORD PTR [esi+edi*8+0x2c],1
  418e6a:	jl     0x418ded
  418e6c:	sbb    DWORD PTR [ecx+0x57b19da7],esp
  418e72:	sbb    DWORD PTR [esi+ecx*1],ebp
  418e75:	(bad)  
  418e77:	xchg   ebx,eax
  418e78:	mov    WORD PTR [esi],es
  418e7a:	aaa    
  418e7b:	lahf   
  418e7c:	lea    edi,[ecx+0x24]
  418e7f:	(bad)  
  418e80:	popa   
  418e81:	xor    DWORD PTR [esp+esi*1],0x1425202b
  418e88:	shl    BYTE PTR [ecx+0x55],cl
  418e8b:	and    eax,0x29305000
  418e90:	fild   WORD PTR [edi-0x4ce45d15]
  418e96:	ret    
  418e97:	xor    esp,DWORD PTR [edi-0x11e8ae27]
  418e9d:	sbb    al,0xae
  418e9f:	jne    0x418e82
  418ea1:	call   0x7dbd:0xbcc45352
  418ea8:	aad    0xf2
  418eaa:	xor    eax,0x92ca98e6
  418eaf:	push   esp
  418eb0:	cmp    edx,DWORD PTR cs:[ebx]
  418eb3:	mov    esp,0xcc8f1199
  418eb8:	test   edi,ebp
  418eba:	std    
  418ebb:	mov    ecx,0xb7878530
  418ec0:	jle    0x418f23
  418ec2:	cmp    ah,BYTE PTR ss:[ebx]
  418ec5:	xchg   ebx,eax
  418ec6:	push   ecx
  418ec7:	out    0x49,al
  418ec9:	inc    ebx
  418eca:	loopne 0x418e77
  418ecc:	jb     0x418e8e
  418ece:	add    eax,0xfdd3d022
  418ed3:	cmp    ch,BYTE PTR [eax+ecx*4+0x6c3b626c]
  418eda:	stc    
  418edb:	ror    BYTE PTR [eax],0x9f
  418ede:	pop    es
  418edf:	sub    dh,0x88
  418ee2:	push   0xf56cdb18
  418ee7:	xchg   edi,esp
  418ee9:	test   eax,0x3fd56102
  418eee:	es repz nop edx
  418ef3:	cmp    BYTE PTR [esi+0x418f5e42],ch
  418ef9:	cmp    ebx,esp
  418efb:	mov    ebp,0x9bbc074b
  418f00:	jbe    0x418f0e
  418f02:	lods   eax,DWORD PTR ds:[esi]
  418f03:	dec    esi
  418f04:	push   edx
  418f05:	add    al,0x88
  418f07:	pop    edi
  418f08:	mov    ebx,0x6a1097b
  418f0d:	adc    bh,dl
  418f0f:	test   al,0x1b
  418f11:	fldcw  WORD PTR [edi+0x70a32434]
  418f17:	lahf   
  418f18:	inc    eax
  418f19:	cli    
  418f1a:	hlt    
  418f1b:	mov    es,WORD PTR [ebp+0x100b6090]
  418f21:	ret    
  418f22:	ins    DWORD PTR es:[edi],dx
  418f23:	adc    al,0x21
  418f25:	in     al,dx
  418f26:	mov    cl,0xa7
  418f28:	adc    DWORD PTR [ebp+0x54e47f90],ecx
  418f2e:	in     eax,dx
  418f2f:	iret   
  418f30:	inc    eax
  418f31:	pop    esp
  418f32:	pop    ebp
  418f33:	sub    al,0x89
  418f35:	(bad)  
  418f36:	push   eax
  418f37:	fldlg2 
  418f39:	jecxz  0x418ec7
  418f3b:	jb     0x418ec2
  418f3d:	mov    ebp,0x79a7b1be
  418f42:	jl     0x418f59
  418f44:	iret   
  418f45:	cmp    esi,DWORD PTR [esi-0x60]
  418f48:	leave  
  418f49:	fdiv   QWORD PTR [ecx-0x75]
  418f4c:	mul    BYTE PTR [ebp+0x43]
  418f4f:	pop    edx
  418f50:	push   ebp
  418f51:	std    
  418f52:	and    ebx,ecx
  418f54:	fwait
  418f55:	xchg   ebx,eax
  418f56:	test   eax,0xdda41492
  418f5b:	hlt    
  418f5c:	and    DWORD PTR [eax],ebx
  418f5e:	std    
  418f5f:	xor    edx,ecx
  418f61:	pop    es
  418f62:	in     eax,dx
  418f63:	dec    ebp
  418f64:	mov    ah,0x20
  418f66:	in     al,dx
  418f67:	mov    bl,0x9b
  418f69:	dec    eax
  418f6a:	test   BYTE PTR [ebp-0x7e],dl
  418f6d:	inc    eax
  418f6e:	in     eax,dx
  418f6f:	inc    eax
  418f70:	addr16 jl 0x418feb
  418f73:	inc    edx
  418f74:	xchg   BYTE PTR [ebp+0x79],ch
  418f77:	jecxz  0x418f20
  418f79:	xor    al,0xcc
  418f7b:	xadd   DWORD PTR [ebx+edx*2+0x3b],ebx
  418f80:	test   BYTE PTR [esi],ch
  418f82:	pop    esp
  418f83:	or     ebx,esi
  418f85:	das    
  418f86:	jp     0x418f25
  418f88:	aas    
  418f89:	(bad)  
  418f8b:	js     0x418fa2
  418f8d:	aaa    
  418f8e:	mov    ebp,esi
  418f90:	lea    esp,[esi+0x4f31c086]
  418f96:	repnz mov dh,0x2b
  418f99:	and    eax,esi
  418f9b:	add    al,0x50
  418f9d:	mov    ds,eax
  418f9f:	aam    0xeb
  418fa1:	mov    dl,0x39
  418fa3:	scas   eax,DWORD PTR es:[edi]
  418fa4:	push   esp
  418fa5:	sub    DWORD PTR [esi+0x33bf10c7],0x68
  418fac:	adc    DWORD PTR [eax-0x6f],edi
  418faf:	jo     0x41900f
  418fb1:	into   
  418fb2:	fsub   DWORD PTR [esi-0x30f75e12]
  418fb8:	pop    ds
  418fb9:	stos   BYTE PTR es:[edi],al
  418fba:	pop    bp
  418fbc:	jbe    0x418f3f
  418fbe:	jmp    0x418fd0
  418fc0:	mov    dh,0x74
  418fc2:	xor    bh,ch
  418fc4:	pop    ecx
  418fc5:	mov    al,0xae
  418fc7:	and    DWORD PTR ds:0xf1ee682,ebx
  418fcd:	mov    dl,bl
  418fcf:	or     esp,DWORD PTR [edx+0x20a66fc0]
  418fd5:	mov    cl,0x67
  418fd7:	ins    DWORD PTR es:[edi],dx
  418fd8:	(bad)  
  418fd9:	sti    
  418fda:	add    dh,bl
  418fdc:	dec    eax
  418fdd:	fidivr DWORD PTR [ecx-0x68c7c36e]
  418fe3:	rcl    BYTE PTR [eax],0x49
  418fe6:	clc    
  418fe7:	inc    edi
  418fe8:	and    eax,0x8b7c223e
  418fed:	in     al,0xe2
  418fef:	mov    bl,0x8
  418ff1:	adc    esi,eax
  418ff3:	xchg   edx,eax
  418ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff5:	and    BYTE PTR [edi-0x79],0xb2
  418ff9:	push   edx
  418ffa:	ja     0x418fa1
  418ffc:	inc    esi
  418ffd:	fld    QWORD PTR [edx-0x60e00acb]
  419003:	leave  
  419004:	and    DWORD PTR [edx+esi*1-0x2b],ebp
  419008:	adc    ebp,DWORD PTR [edi+0x589116d2]
  41900e:	fidivr DWORD PTR [ecx]
  419010:	push   ecx
  419011:	or     eax,0xc50f3b73
  419016:	int    0x3e
  419018:	popa   
  419019:	xchg   ebp,eax
  41901a:	mov    BYTE PTR [eax],bh
  41901c:	or     al,0x9b
  41901e:	ja     0xb5924ef
  419024:	dec    esp
  419025:	inc    eax
  419026:	(bad)  
  419027:	mov    eax,0xdaf4b220
  41902c:	(bad)  
  41902d:	pop    eax
  41902e:	inc    esp
  41902f:	stos   DWORD PTR es:[edi],eax
  419030:	je     0x41909b
  419032:	out    0x3f,al
  419034:	or     DWORD PTR [ecx],edx
  419036:	test   eax,0x8d88de22
  41903b:	std    
  41903c:	mov    ds:0xc88fa7e3,eax
  419041:	hlt    
  419042:	cmp    esp,0xffffffbe
  419045:	pusha  
  419046:	cmp    eax,0xe4ee1a39
  41904b:	in     eax,dx
  41904c:	arpl   WORD PTR [eax],cx
  41904e:	fnstcw WORD PTR ds:0xeeb8109
  419054:	psrlw  mm1,QWORD PTR [ebp-0x3f]
  419058:	cwde   
  419059:	hlt    
  41905a:	js     0x419026
  41905c:	mov    dl,0x59
  41905e:	xchg   ebp,eax
  41905f:	adc    al,0x45
  419061:	jle    0x4190ca
  419063:	and    al,0x75
  419065:	fcomp  DWORD PTR [esi+ecx*1-0x3a]
  419069:	xlat   BYTE PTR fs:[ebx]
  41906b:	add    eax,0xb864f552
  419070:	pop    edi
  419071:	leave  
  419072:	push   0xf3b3955c
  419077:	test   al,0xc4
  419079:	data16 adc al,0x8e
  41907c:	ss js  0x4190c7
  41907f:	jo     0x4190b8
  419081:	loop   0x41905c
  419083:	loopne 0x419064
  419085:	mov    ah,0x2d
  419087:	fwait
  419088:	sbb    eax,0x207bf899
  41908d:	lods   al,BYTE PTR ds:[esi]
  41908e:	dec    esi
  41908f:	pusha  
  419090:	xchg   eax,esp
  419092:	pop    ecx
  419093:	jnp    0x41910d
  419095:	push   ebp
  419096:	stc    
  419097:	mov    ch,0xdc
  419099:	sbb    dl,BYTE PTR [eax]
  41909b:	push   es
  41909c:	dec    ecx
  41909d:	call   0x21a6d26a
  4190a2:	mov    cl,0x2f
  4190a4:	push   edx
  4190a5:	leave  
  4190a6:	cwde   
  4190a7:	adc    dl,BYTE PTR [ebp+0x7f]
  4190aa:	(bad)  
  4190ab:	in     al,dx
  4190ac:	jnp    0x41907d
  4190ae:	and    eax,0xec391874
  4190b3:	int3   
  4190b4:	push   es
  4190b5:	fimul  DWORD PTR [eax-0x28]
  4190b8:	inc    esi
  4190b9:	or     bl,BYTE PTR [edi-0xd]
  4190bc:	jae    0x4190a8
  4190be:	push   esi
  4190bf:	add    bl,bh
  4190c1:	cdq    
  4190c2:	fidivr WORD PTR ds:0xbdb16ad6
  4190c8:	int    0x52
  4190ca:	out    dx,eax
  4190cb:	mov    ds:0xdeca5937,eax
  4190d0:	call   0xa772da60
  4190d5:	das    
  4190d6:	pop    ebp
  4190d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d8:	inc    eax
  4190d9:	fistp  QWORD PTR [esi+0x59b3e91f]
  4190df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e0:	inc    edx
  4190e1:	xor    ebp,esp
  4190e3:	(bad)  
  4190e4:	bound  esp,QWORD PTR [edx+0x310fa7b4]
  4190ea:	push   edx
  4190eb:	ss test dh,bh
  4190ee:	xchg   ecx,eax
  4190ef:	xor    al,0xc
  4190f1:	cdq    
  4190f2:	in     eax,dx
  4190f3:	fwait
  4190f4:	mov    edi,?
  4190f6:	retf   0xa078
  4190f9:	cmc    
  4190fa:	mov    dh,0xb1
  4190fc:	push   ds
  4190fd:	cmp    eax,edx
  4190ff:	shr    BYTE PTR [edx],0xb4
  419102:	xlat   BYTE PTR ds:[ebx]
  419103:	pop    esi
  419104:	scas   eax,DWORD PTR es:[edi]
  419105:	retf   0x7be6
  419108:	xchg   dl,bl
  41910a:	jmp    0xf1c1:0xa10d33c3
  419111:	xchg   edi,eax
  419112:	sbb    BYTE PTR [ebp+0x3d75419],ah
  419118:	call   0x50cf:0xd6b78b97
  41911f:	adc    eax,0xcd2039bf
  419124:	pop    ss
  419125:	push   0xd65afc6e
  41912a:	hlt    
  41912b:	sub    eax,0xe5c0ccf0
  419130:	imul   esi,DWORD PTR [edx-0x3c],0x4a
  419134:	repz aaa 
  419136:	add    BYTE PTR [ebp+0x128b8324],ch
  41913c:	in     eax,0xc0
  41913e:	dec    ah
  419140:	dec    ebp
  419141:	outs   dx,DWORD PTR ds:[esi]
  419142:	mov    al,ds:0xf5430dad
  419147:	arpl   WORD PTR [ecx],si
  419149:	push   0xffffffe5
  41914b:	dec    ebx
  41914c:	loope  0x419139
  41914e:	cmp    eax,0xfe9383a1
  419153:	mov    ecx,0xe3f98589
  419158:	or     eax,0x831de313
  41915d:	xor    eax,0x8f322f25
  419162:	sbb    eax,0xc8b173c6
  419167:	dec    esi
  419168:	push   esp
  419169:	test   eax,0xdcd1b763
  41916e:	sbb    eax,0x273aa9f4
  419173:	pop    ecx
  419174:	out    dx,eax
  419175:	sub    DWORD PTR [edx],edi
  419177:	shr    DWORD PTR [edx+0x4d],1
  41917a:	push   ecx
  41917b:	and    dh,BYTE PTR [edi-0x6ff1f7ff]
  419181:	outs   dx,BYTE PTR ds:[esi]
  419182:	pop    ecx
  419183:	mov    ch,0xa7
  419185:	ss enter 0x92b,0x5f
  41918a:	push   ebp
  41918b:	sbb    bh,BYTE PTR [ecx-0x22]
  41918e:	xchg   esi,eax
  41918f:	dec    ecx
  419190:	add    eax,0xa4260c9e
  419195:	in     eax,dx
  419196:	push   ebp
  419197:	out    0xb6,eax
  419199:	out    0xfc,eax
  41919b:	mov    edx,0x4d74f49f
  4191a0:	rol    DWORD PTR [ebx+0x15],1
  4191a3:	shl    BYTE PTR [eax-0x2c775e73],0xbf
  4191aa:	sub    ebp,DWORD PTR [esi-0x72]
  4191ad:	aas    
  4191ae:	mov    bh,0x38
  4191b0:	jecxz  0x419196
  4191b2:	sbb    BYTE PTR [edi+0x1e28c7d9],dl
  4191b8:	jle    0x4191fa
  4191ba:	js     0x419218
  4191bc:	pop    esi
  4191bd:	sbb    ch,cl
  4191bf:	ret    
  4191c0:	sub    al,0xa
  4191c2:	aaa    
  4191c3:	fdivp  st(6),st
  4191c5:	stc    
  4191c6:	sbb    esp,DWORD PTR [ecx+0x7079eb8c]
  4191cc:	lock cmp bl,dl
  4191cf:	cld    
  4191d0:	(bad)  
  4191d2:	jns    0x4191a3
  4191d4:	arpl   WORD PTR [eax+0x13],bp
  4191d7:	sub    al,0x6a
  4191d9:	inc    eax
  4191da:	jl     0x419160
  4191dc:	imul   edx,DWORD PTR [esi+0x7d],0x6cc8180a
  4191e3:	pop    ss
  4191e4:	aad    0xd8
  4191e6:	or     cl,BYTE PTR [edi+0x76273809]
  4191ec:	add    DWORD PTR ds:0xdaaa7599,0xffffff95
  4191f3:	popf   
  4191f4:	mov    DWORD PTR [ebp+0x35],edx
  4191f7:	lea    ecx,[ebp-0x5e]
  4191fa:	div    bh
  4191fc:	out    dx,al
  4191fd:	and    al,0x6a
  4191ff:	push   ebp
  419200:	push   edi
  419201:	iret   
  419202:	mov    dl,BYTE PTR [bp+si+0x4]
  419206:	and    eax,0xba7da274
  41920b:	jno    0x4191c7
  41920d:	and    esi,ecx
  41920f:	mov    eax,0x53491390
  419214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419215:	mov    dl,0x67
  419217:	mov    ecx,0xd88dd1f5
  41921c:	fnstcw WORD PTR [edi-0x74d49813]
  419222:	ins    BYTE PTR es:[edi],dx
  419223:	and    BYTE PTR [edi+0x21e4f3c6],ah
  419229:	dec    edi
  41922a:	cmp    BYTE PTR [ebx+0x32],dl
  41922d:	test   al,0xec
  41922f:	mov    al,0xe5
  419231:	pop    es
  419232:	sahf   
  419233:	mov    ebx,0x6abcbf70
  419238:	(bad)
  41923b:	fisubr DWORD PTR [esi]
  41923d:	push   ds
  41923e:	lock rol BYTE PTR [edi+0x7c],cl
  419242:	aam    0xc3
  419244:	das    
  419245:	add    al,0xf2
  419247:	xor    DWORD PTR [eax-0x3],ebx
  41924a:	xor    esp,esp
  41924c:	jno    0x41920d
  41924e:	ins    BYTE PTR es:[edi],dx
  41924f:	fsubr  DWORD PTR [esi]
  419251:	mov    WORD PTR [ebx-0x11],?
  419254:	out    dx,eax
  419255:	ror    dl,1
  419257:	bound  ebp,QWORD PTR [ecx+0x3c]
  41925a:	fnstenv [esi+ecx*8+0x34]
  41925e:	or     ebp,esi
  419260:	sub    eax,0x84c3ec1
  419265:	sbb    edi,eax
  419267:	sbb    edx,DWORD PTR [ebx+eax*4+0x45]
  41926b:	add    DWORD PTR [edi],ecx
  41926d:	mov    ebx,esi
  41926f:	fisubr DWORD PTR [ecx-0x4a]
  419272:	inc    eax
  419273:	and    DWORD PTR [ebp+0x29],ebp
  419276:	cmp    BYTE PTR [ebp+0x45],ch
  419279:	iret   
  41927a:	mov    BYTE PTR [esi+0x5e],0x75
  41927e:	mov    ch,0xec
  419280:	dec    esp
  419281:	fwait
  419282:	xchg   esp,eax
  419283:	inc    ebx
  419284:	idiv   DWORD PTR [ebx-0x5f324b49]
  41928a:	sahf   
  41928b:	mov    edx,0x33de808f
  419290:	enter  0x4d89,0x8
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xd2
  4192cc:	sbb    al,0xe1
  4192ce:	in     eax,dx
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx-0x75f1305b],0x23
  4192dc:	adc    eax,0x881311c9
  4192e1:	test   ebx,ebx
  4192e3:	xchg   ebp,eax
  4192e4:	xchg   ebx,eax
  4192e5:	pushf  
  4192e6:	sub    eax,esp
  4192e8:	push   edi
  4192e9:	(bad)  
  4192ea:	cmp    cl,ch
  4192ec:	sub    BYTE PTR [eax-0x65bf62ed],dh
  4192f2:	and    eax,DWORD PTR [edx+ecx*8]
  4192f5:	cmp    ecx,DWORD PTR [edx+0x3c47d69c]
  4192fb:	(bad)  
  4192fc:	outs   dx,DWORD PTR ds:[esi]
  4192fd:	adc    DWORD PTR [esi],ecx
  4192ff:	dec    edx
  419300:	pop    ecx
  419301:	daa    
  419302:	cli    
  419303:	jne    0x4192bf
  419305:	pushf  
  419306:	mov    dl,BYTE PTR [edx+0x4e]
  419309:	sbb    BYTE PTR [esi-0x1dc45c4e],al
  41930f:	jae    0x41933f
  419311:	adc    DWORD PTR [edi+0x29],esi
  419314:	cmp    eax,DWORD PTR [eax-0x28fcdba8]
  41931a:	call   0x8abf6eda
  41931f:	std    
  419320:	sub    edx,esp
  419322:	xor    ebp,DWORD PTR [edx]
  419324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419325:	es (bad) 
  419327:	shr    bh,1
  419329:	jbe    0x4192d2
  41932b:	mov    ebx,0xf6a31184
  419330:	jne    0x41938f
  419332:	les    eax,FWORD PTR [ebp+esi*4-0x53]
  419336:	rol    DWORD PTR [ecx+edx*4-0x7f2f3717],cl
  41933d:	mov    ds:0x1e71ebd7,eax
  419342:	paddq  mm2,mm5
  419345:	adc    eax,0x463996e
  41934a:	mov    esi,0x7602400
  41934f:	cld    
  419350:	sub    eax,0x11330e4b
  419355:	jmp    0x41937b
  419357:	cmp    ah,BYTE PTR [edx+0x53]
  41935a:	inc    esi
  41935b:	std    
  41935c:	or     DWORD PTR [ebp+0xcfb0090],0x1fcf2966
  419366:	scas   al,BYTE PTR es:[edi]
  419367:	mov    edx,0xc08eee5b
  41936c:	inc    edx
  41936d:	adc    al,0xcf
  41936f:	pop    ebp
  419370:	pop    es
  419371:	xor    bl,al
  419373:	mov    cl,0xa9
  419375:	add    DWORD PTR [ecx-0x93c3333],ecx
  41937b:	dec    ebp
  41937c:	leave  
  41937d:	sub    eax,0x67ca2193
  419382:	(bad)  
  419383:	cwde   
  419384:	popf   
  419385:	iret   
  419386:	daa    
  419387:	jmp    0x41936f
  419389:	cmp    ch,BYTE PTR [edx+eiz*4+0x6a]
  41938d:	and    edx,DWORD PTR [ecx+0x1]
  419390:	fldcw  WORD PTR [esi]
  419392:	ret    
  419393:	ss mov dl,dh
  419396:	int    0x3e
  419398:	mov    BYTE PTR [edi+0x75],ch
  41939b:	pop    ss
  41939c:	retf   
  41939d:	pop    ebp
  41939e:	rcr    edx,0xb6
  4193a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a2:	jns    0x4193f3
  4193a4:	adc    DWORD PTR [eax+0x386641d1],esi
  4193aa:	push   ds
  4193ab:	aaa    
  4193ac:	gs (bad) 
  4193ae:	call   DWORD PTR [edi+0x59]
  4193b1:	push   es
  4193b2:	repz add DWORD PTR [esp+esi*4-0x53419b3],ebx
  4193ba:	pop    esi
  4193bb:	in     eax,0x5c
  4193bd:	outs   dx,BYTE PTR ds:[esi]
  4193be:	cdq    
  4193bf:	mov    ah,0x3e
  4193c1:	jg     0x419372
  4193c3:	and    al,0xc0
  4193c5:	and    al,0xdd
  4193c7:	imul   edx,DWORD PTR [edi+0x11],0x509103e3
  4193ce:	jno    0x419423
  4193d0:	and    edx,DWORD PTR [ecx+0x22571dfb]
  4193d6:	cmp    BYTE PTR [ecx-0x1c],bh
  4193d9:	ret    
  4193da:	or     bl,bh
  4193dc:	nop
  4193dd:	mov    BYTE PTR [edx],bl
  4193df:	sahf   
  4193e0:	cmp    eax,0xf9cc3487
  4193e5:	out    dx,al
  4193e6:	add    al,0x71
  4193e8:	inc    ebx
  4193e9:	xchg   esp,eax
  4193ea:	shr    BYTE PTR [ecx-0x113338a5],cl
  4193f0:	test   BYTE PTR [ecx-0x1c],al
  4193f3:	jecxz  0x41946b
  4193f5:	into   
  4193f6:	adc    BYTE PTR [eax-0x46881d34],ch
  4193fc:	dec    ecx
  4193fd:	out    0x37,al
  4193ff:	ins    DWORD PTR es:[edi],dx
  419400:	sub    bh,al
  419402:	daa    
  419403:	or     eax,0xd93daa3d
  419408:	dec    edi
  419409:	adc    DWORD PTR ds:0x5b57b90,eax
  41940f:	hlt    
  419410:	js     0x4193d4
  419412:	fdiv   QWORD PTR [edx+0x9ba4f3d]
  419418:	ret    0xcb38
  41941b:	scas   al,BYTE PTR es:[edi]
  41941c:	push   0xffffffde
  41941e:	xchg   ecx,eax
  41941f:	dec    esi
  419420:	sahf   
  419421:	mov    dl,0x22
  419423:	jb     0x419422
  419425:	cmp    eax,0xc629f357
  41942a:	xchg   ebp,eax
  41942b:	adc    esi,esp
  41942d:	inc    esp
  41942e:	adc    ebx,ebx
  419430:	cmp    DWORD PTR [esi+0x7e],eax
  419433:	sahf   
  419434:	mov    al,ds:0x7638aa0d
  419439:	addr16 stc 
  41943b:	xor    eax,0xb35f2909
  419440:	nop
  419441:	ins    BYTE PTR es:[edi],dx
  419442:	jle    0x419482
  419444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419445:	popf   
  419446:	das    
  419447:	cmp    bl,dl
  419449:	das    
  41944a:	xchg   esi,eax
  41944b:	ds inc edi
  41944d:	call   DWORD PTR [ecx+esi*4-0x1e]
  419451:	sahf   
  419452:	aam    0x10
  419454:	leave  
  419455:	aam    0x1d
  419457:	inc    edx
  419458:	pop    esi
  419459:	xchg   edi,eax
  41945a:	mov    ebx,DWORD PTR [edi]
  41945c:	sbb    al,0xa6
  41945e:	add    edi,edx
  419460:	add    eax,0xcb737eec
  419465:	inc    esi
  419466:	int    0x4c
  419468:	(bad)
  41946b:	sbb    DWORD PTR [eax-0x9068def],ebx
  419471:	sub    ebp,edi
  419473:	sbb    al,0xd9
  419475:	in     al,dx
  419476:	(bad)  
  419477:	dec    edi
  419478:	js     0x419443
  41947a:	daa    
  41947b:	add    dl,0x1
  41947e:	mov    esi,0x879c709d
  419483:	pop    edx
  419484:	icebp  
  419485:	les    eax,FWORD PTR [edx+ebp*1-0x72309d5b]
  41948c:	cli    
  41948d:	out    0x76,eax
  41948f:	fxch   st(2)
  419491:	adc    al,bl
  419493:	in     al,0x68
  419495:	(bad)  
  419496:	(bad)  
  419498:	mov    bh,0x8c
  41949a:	js     0x41942d
  41949c:	call   0x249f:0xe769feac
  4194a3:	dec    esi
  4194a4:	pushf  
  4194a5:	cld    
  4194a6:	sub    DWORD PTR [edi],eax
  4194a8:	ja     0x419464
  4194aa:	xlat   BYTE PTR ds:[ebx]
  4194ab:	scas   al,BYTE PTR es:[edi]
  4194ac:	jb     0x419477
  4194ae:	sbb    BYTE PTR es:0x9269c917,ah
  4194b5:	mov    edi,0xa47026fa
  4194ba:	pushf  
  4194bb:	inc    ebx
  4194bc:	xchg   esp,eax
  4194bd:	pop    edx
  4194be:	aad    0xc9
  4194c0:	jle    0x4194cd
  4194c2:	xor    BYTE PTR [edx],0x6c
  4194c5:	cdq    
  4194c6:	pop    edx
  4194c7:	sub    bh,BYTE PTR [ecx+0x421bdebb]
  4194cd:	test   dh,al
  4194cf:	mov    al,ds:0xca84924
  4194d4:	mov    al,0xf5
  4194d6:	xor    DWORD PTR [edx-0x1b02a46f],edx
  4194dc:	mov    dh,0x9d
  4194de:	imul   edi,DWORD PTR [edx],0x6bfc3fbb
  4194e4:	add    eax,0x52b7c57f
  4194e9:	mov    al,ds:0x789d3271
  4194ee:	sbb    al,0xee
  4194f0:	push   0xe24a0b06
  4194f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194f6:	sub    esi,esi
  4194f8:	push   ss
  4194f9:	sub    eax,0x25930261
  4194fe:	ficom  WORD PTR [ebx+edx*4]
  419501:	(bad)
  419505:	scas   eax,DWORD PTR es:[edi]
  419506:	inc    eax
  419507:	pop    ebx
  419508:	das    
  419509:	and    BYTE PTR [edx],bh
  41950b:	pop    edi
  41950c:	jecxz  0x419499
  41950e:	pop    ss
  41950f:	sub    DWORD PTR [ebp*4+0x2eefe370],0xe828178f
  41951a:	outs   dx,DWORD PTR ds:[esi]
  41951b:	and    al,0xc5
  41951d:	not    DWORD PTR [eax+0x105adc4]
  419523:	repnz stos BYTE PTR es:[edi],al
  419525:	or     esp,DWORD PTR [eax]
  419527:	ja     0x4194c4
  419529:	in     al,dx
  41952a:	js     0x419564
  41952c:	and    al,0x2d
  41952e:	pop    ebx
  41952f:	push   ds
  419530:	test   dl,0xab
  419533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419534:	inc    edx
  419535:	fisttp QWORD PTR [edi+edx*4-0x21]
  419539:	mov    bl,0x7e
  41953b:	xchg   edi,eax
  41953c:	mov    edi,esi
  41953e:	xor    al,0xe4
  419540:	in     eax,0x3c
  419542:	push   esi
  419543:	add    DWORD PTR [ebx-0x700260b2],eax
  419549:	and    DWORD PTR [esi+0x22ec52b6],esp
  41954f:	mov    DWORD PTR [esi-0x74b37d4],eax
  419555:	add    ebx,DWORD PTR [esi-0x9722b43]
  41955b:	hlt    
  41955c:	mov    ah,0xae
  41955e:	jbe    0x419521
  419560:	mov    ch,BYTE PTR [edx+ebp*4]
  419563:	xchg   ebp,eax
  419564:	adc    eax,0x32ae03d7
  419569:	mov    edi,0x5cfcf5cb
  41956e:	sub    ch,ch
  419570:	pop    ebp
  419571:	dec    ecx
  419572:	int    0xde
  419574:	imul   DWORD PTR [ebx+0x46]
  419577:	out    dx,al
  419578:	test   DWORD PTR [ebp+0x1d5bf964],esi
  41957e:	or     esp,DWORD PTR [ecx-0x52]
  419581:	jns    0x41959f
  419583:	cs cdq 
  419585:	mov    BYTE PTR [edx],al
  419587:	dec    ebx
  419588:	sub    ah,ah
  41958a:	cld    
  41958b:	pop    esi
  41958c:	adc    bh,BYTE PTR [edx-0x7]
  41958f:	xor    al,0x12
  419591:	cmp    BYTE PTR [ebx-0xd],0x26
  419595:	ret    0x8559
  419598:	inc    ebx
  419599:	inc    esi
  41959a:	dec    esp
  41959b:	xor    ebp,DWORD PTR ds:0x2a4161c9
  4195a1:	jb     0x419619
  4195a3:	push   0xffffff8e
  4195a5:	or     eax,0xe07c4579
  4195aa:	adc    DWORD PTR [edi+0x4f],ebx
  4195ad:	iret   
  4195ae:	sbb    edi,DWORD PTR [ebp+0x460cceeb]
  4195b4:	inc    esp
  4195b5:	fcmovb st,st(0)
  4195b7:	test   DWORD PTR [edi+0x47e9b4fe],0xc39cd97e
  4195c1:	clc    
  4195c2:	adc    cl,BYTE PTR [eax+0x1527de2f]
  4195c8:	xor    eax,0xfe2a0428
  4195cd:	std    
  4195ce:	fldcw  WORD PTR [esi+0x1]
  4195d1:	push   edi
  4195d2:	rcl    DWORD PTR [eax+0x74],1
  4195d5:	xor    eax,0x3ab10da7
  4195da:	shl    ebx,cl
  4195dc:	sub    al,BYTE PTR [edi+0x43]
  4195df:	mov    al,0x9
  4195e1:	jmp    0x419646
  4195e3:	loopne 0x419641
  4195e5:	xor    eax,0x4fd96d94
  4195ea:	adc    al,0xfc
  4195ec:	adc    eax,0x404c8d4f
  4195f1:	cmp    eax,0x4a80ef26
  4195f6:	nop
  4195f7:	imul   eax,DWORD PTR [esi-0x62126ec7],0xffffff94
  4195fe:	popf   
  4195ff:	or     bl,BYTE PTR [ecx-0x50]
  419602:	retf   
  419603:	test   al,0xdc
  419605:	xchg   edx,eax
  419606:	push   cs
  419607:	cdq    
  419608:	ja     0x41967e
  41960a:	(bad)
  41960d:	xor    bh,dh
  41960f:	sbb    BYTE PTR [edi],0xe7
  419612:	leave  
  419613:	pop    es
  419614:	and    ecx,eax
  419616:	cmp    ebx,DWORD PTR [ebx-0x15]
  419619:	loop   0x419663
  41961b:	mov    dl,0x9a
  41961d:	fbstp  TBYTE PTR [ebx]
  41961f:	cli    
  419620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419621:	mov    es,WORD PTR es:[esi+0x28fd7c82]
  419628:	push   edi
  419629:	dec    edi
  41962a:	add    eax,eax
  41962c:	jo     0x4195dd
  41962e:	and    ecx,edx
  419630:	or     al,0x11
  419632:	popf   
  419633:	inc    eax
  419634:	pusha  
  419635:	(bad)  
  419636:	and    BYTE PTR [eax+0x56a1526b],bl
  41963c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963d:	out    0x0,eax
  41963f:	inc    esi
  419640:	mov    ss,edx
  419642:	(bad)  
  419643:	icebp  
  419644:	cld    
  419645:	in     al,dx
  419646:	dec    edi
  419647:	test   DWORD PTR [eax-0x41],edi
  41964a:	push   ebp
  41964b:	scas   al,BYTE PTR es:[edi]
  41964c:	nop
  41964d:	dec    edi
  41964e:	dec    ebx
  41964f:	lods   al,BYTE PTR ds:[esi]
  419650:	shl    BYTE PTR [eax+0x7b],0x16
  419654:	mov    WORD PTR [eax-0x7],gs
  419657:	aad    0x63
  419659:	ins    DWORD PTR es:[edi],dx
  41965a:	inc    esi
  41965b:	aad    0x50
  41965d:	into   
  41965e:	pop    ecx
  41965f:	hlt    
  419660:	jno    0x4196d6
  419662:	nop
  419663:	les    esp,FWORD PTR [edx]
  419665:	mov    ecx,0x86691
  41966a:	loop   0x4196a8
  41966c:	sar    DWORD PTR [ecx+0x594c7fea],1
  419672:	push   cs
  419673:	mov    al,ds:0x466d44fd
  419678:	xor    eax,0xf4e6984c
  41967d:	(bad)  
  41967e:	lahf   
  41967f:	stos   DWORD PTR es:[edi],eax
  419680:	clc    
  419681:	jmp    0x340aeeaf
  419686:	pop    edi
  419687:	xchg   DWORD PTR [edi-0x4030d92a],esp
  41968d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968e:	aam    0x54
  419690:	inc    ebx
  419691:	lods   al,BYTE PTR ds:[esi]
  419692:	mov    WORD PTR [edi+edx*2+0x7e],ds
  419696:	sbb    DWORD PTR [eax],eax
  419698:	pop    ebx
  419699:	retf   0x79d
  41969c:	or     DWORD PTR [ecx],esi
  41969e:	(bad)  
  41969f:	push   ebp
  4196a0:	inc    esp
  4196a1:	(bad)  
  4196a2:	cwde   
  4196a3:	test   eax,0xd4b9b0bf
  4196a8:	mov    al,ds:0xd724398a
  4196ad:	(bad)  
  4196ae:	ror    DWORD PTR [esi],cl
  4196b0:	mov    edi,0xc573fcb3
  4196b5:	nop
  4196b6:	mov    BYTE PTR [ebx],0x27
  4196b9:	jae    0x419643
  4196bb:	shl    bh,cl
  4196bd:	jno    0x41964f
  4196bf:	xchg   esp,eax
  4196c0:	mov    ecx,0x29c6fb14
  4196c5:	data16 scas al,BYTE PTR es:[edi]
  4196c7:	mov    dl,0xcb
  4196c9:	nop
  4196ca:	mov    dl,0xfe
  4196cc:	push   edi
  4196cd:	jmp    0xafafcfb9
  4196d2:	add    BYTE PTR [ebx],al
  4196d4:	xor    ecx,DWORD PTR [esi-0x7c325c1b]
  4196da:	pop    esp
  4196db:	add    eax,0x94a9fb3e
  4196e0:	push   esp
  4196e1:	outs   dx,DWORD PTR ds:[esi]
  4196e2:	cmp    DWORD PTR [edi-0x17acbf5c],edi
  4196e8:	pop    es
  4196e9:	cdq    
  4196ea:	jge    0x4196e8
  4196ec:	adc    al,0x21
  4196ee:	push   0xffffffdb
  4196f0:	inc    ecx
  4196f1:	mov    dl,0xc6
  4196f3:	neg    dl
  4196f5:	ins    DWORD PTR es:[edi],dx
  4196f6:	dec    ecx
  4196f7:	int    0xe4
  4196f9:	pop    edi
  4196fa:	jbe    0x419751
  4196fc:	xchg   ecx,eax
  4196fd:	inc    esp
  4196fe:	fsub   DWORD PTR [edx+ecx*4-0x1e37e088]
  419705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419706:	jge    0x419705
  419708:	aad    0x60
  41970a:	add    eax,0xde9daa0a
  41970f:	repnz push ds
  419711:	pop    edi
  419712:	bound  eax,QWORD PTR [edi+edi*4-0x4c1e9c76]
  419719:	repnz pop ecx
  41971b:	xor    al,0xd3
  41971d:	popf   
  41971e:	add    bh,al
  419720:	cmc    
  419721:	cmp    edx,DWORD PTR [esi+0x70]
  419724:	add    DWORD PTR [edi-0x3d],edi
  419727:	popa   
  419728:	xchg   ebp,eax
  419729:	mov    es,WORD PTR [ecx]
  41972b:	inc    edi
  41972c:	mov    eax,ds:0xab02a4fe
  419731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419732:	mov    BYTE PTR [ecx],dh
  419734:	fld    QWORD PTR [eax+ebp*4]
  419737:	call   0x74bff6eb
  41973c:	mov    bl,0x44
  41973e:	jge    0x419759
  419740:	sahf   
  419741:	mov    esp,0xc269fca5
  419746:	add    BYTE PTR [edx+0x6c8d95b3],bh
  41974c:	sar    DWORD PTR [esi+0x379f550e],0xa
  419753:	clc    
  419754:	dec    ecx
  419755:	cwde   
  419756:	and    eax,0x71a37330
  41975b:	mov    bh,0xe2
  41975d:	shl    DWORD PTR [eax],cl
  41975f:	icebp  
  419760:	and    DWORD PTR [ebx],0x3a648322
  419766:	loope  0x419717
  419768:	sbb    al,BYTE PTR [eax]
  41976a:	mov    edx,0x57287ed6
  41976f:	xchg   ebx,eax
  419770:	arpl   WORD PTR [esi-0x2124dbf7],sp
  419776:	dec    ebx
  419777:	mov    ecx,0x4bbbcc1b
  41977c:	lods   eax,DWORD PTR ds:[si]
  41977e:	push   ecx
  41977f:	sub    DWORD PTR [edi+edx*2+0x12],ebp
  419783:	imul   edi,DWORD PTR [ebp+0x4b8fb158],0x10
  41978a:	push   cs
  41978b:	pop    es
  41978c:	frstor [eax-0x5daef8a3]
  419792:	mov    cl,0x89
  419794:	xchg   edi,eax
  419795:	pop    ebx
  419796:	jecxz  0x4197d7
  419798:	fbstp  TBYTE PTR [edi+0x25b7985b]
  41979e:	xor    DWORD PTR ds:0x73ac66e3,ecx
  4197a4:	dec    eax
  4197a5:	inc    esi
  4197a7:	and    DWORD PTR [ebx+edx*2-0x31eec6b],0xffffffaf
  4197af:	lock mov ds:0xb44f8991,al
  4197b5:	and    DWORD PTR [ebx-0x4755a85f],ebx
  4197bb:	(bad)
  4197be:	sub    eax,0xf83894a2
  4197c3:	loopne 0x4197d1
  4197c5:	(bad)  
  4197c6:	cmp    eax,0x87b232c3
  4197cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197cc:	cmc    
  4197cd:	jae    0x4197d8
  4197cf:	lods   al,BYTE PTR ds:[esi]
  4197d0:	xlat   BYTE PTR ds:[ebx]
  4197d1:	fsub   QWORD PTR [edx+edi*1+0x77]
  4197d5:	mov    ah,BYTE PTR [edi+ebx*1]
  4197d8:	and    al,0x1c
  4197da:	mov    eax,0x6aa967c2
  4197df:	int    0xbe
  4197e1:	mov    edi,DWORD PTR [eax-0x160e6230]
  4197e7:	inc    esp
  4197e8:	mul    BYTE PTR [eax-0x67]
  4197eb:	inc    ecx
  4197ec:	bound  esp,QWORD PTR [edi+0x7a]
  4197ef:	mov    eax,ds:0x7accc647
  4197f4:	fcomp  QWORD PTR [eax+0x0]
  4197f7:	sar    DWORD PTR [ebp+0x72],1
  4197fa:	jp     0x4197c9
  4197fc:	pop    ds
  4197fd:	xchg   esp,eax
  4197fe:	out    0xe,al
  419800:	lds    esp,FWORD PTR [eax]
  419802:	and    eax,0x7baf8e3
  419807:	sub    ebp,DWORD PTR [edi-0x10c55e23]
  41980d:	in     al,0xa6
  41980f:	enter  0x7aa,0xcd
  419813:	mov    eax,0xd8e96e64
  419818:	jmp    0x9531:0x16589476
  41981f:	rol    BYTE PTR [ebp+esi*8-0x2f],cl
  419823:	jbe    0x419877
  419825:	pop    esi
  419826:	xchg   ebx,eax
  419827:	jo     0x41988a
  419829:	jmp    0xc37bdd09
  41982e:	jge    0x419885
  419830:	adc    bl,bh
  419832:	fbld   TBYTE PTR [ebx+0x3fc78347]
  419838:	dec    eax
  419839:	add    DWORD PTR [edx],ebx
  41983b:	test   al,0xe
  41983d:	jo     0x41981d
  41983f:	fsubr  QWORD PTR [ebp+0x3b6c35d5]
  419845:	pop    esp
  419846:	cmp    al,0x48
  419848:	cld    
  419849:	ficom  DWORD PTR [esi+edi*1]
  41984c:	pop    ss
  41984d:	jle    0x4197f4
  41984f:	lods   eax,DWORD PTR ds:[esi]
  419850:	into   
  419851:	or     dl,BYTE PTR [edx+esi*4+0x5b8f9c99]
  419858:	xchg   BYTE PTR [ebp-0x2a],bl
  41985b:	rol    DWORD PTR [ebp+0x18],cl
  41985e:	inc    ebp
  41985f:	outs   dx,BYTE PTR ds:[esi]
  419860:	mov    edx,0x1f7ff125
  419865:	xor    eax,0xc41ffb4
  41986a:	pop    edi
  41986b:	mov    BYTE PTR [esi+0x25a02d85],bl
  419871:	inc    ecx
  419872:	push   esp
  419873:	cmc    
  419874:	xchg   esp,eax
  419875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419876:	shl    ecx,1
  419878:	add    eax,0x6afaa97f
  41987d:	dec    edi
  41987e:	addr16 push esi
  419880:	sub    al,BYTE PTR [edx+0x23]
  419883:	xchg   edi,eax
  419884:	fucomip st,st(1)
  419886:	sub    eax,0x40f5f6d6
  41988b:	xchg   edi,eax
  41988c:	xor    al,dl
  41988e:	inc    di
  419890:	fdivp  st(2),st
  419892:	sar    BYTE PTR [ecx+edx*2],1
  419895:	retf   
  419896:	adc    ebp,ebx
  419898:	imul   edi,edi,0x3305e964
  41989e:	pop    ss
  41989f:	popf   
  4198a0:	fldln2 
  4198a2:	fild   WORD PTR [ebx]
  4198a4:	std    
  4198a5:	cmp    ch,BYTE PTR [edx+0x3fc9491]
  4198ab:	push   ebx
  4198ac:	push   esp
  4198ad:	xchg   ecx,eax
  4198ae:	arpl   WORD PTR [ecx+eiz*1+0x1c],di
  4198b2:	mov    ebx,edx
  4198b4:	dec    ebx
  4198b5:	pop    edi
  4198b6:	adc    DWORD PTR ds:0xfc262f00,ecx
  4198bc:	jge    0x4198a9
  4198be:	sub    ah,BYTE PTR [edi+0x38055a21]
  4198c4:	sub    ch,ch
  4198c6:	push   eax
  4198c7:	adc    al,0x69
  4198c9:	popf   
  4198ca:	mov    esp,0xe8e3eb9d
  4198cf:	inc    esp
  4198d0:	jmp    0x419935
  4198d2:	call   0x7c1cdce2
  4198d7:	pop    edx
  4198d8:	call   0x58e8:0x75cfc4c2
  4198df:	aas    
  4198e0:	inc    edi
  4198e1:	ss push ecx
  4198e3:	scas   al,BYTE PTR es:[edi]
  4198e4:	imul   ecx,DWORD PTR [eax*2+0x5bda8a8e],0x92cbf624
  4198ef:	mov    cl,0x26
  4198f1:	fs repnz shr edi,0x41
  4198f6:	xchg   esp,eax
  4198f7:	pop    es
  4198f8:	inc    edx
  4198f9:	sbb    ebp,DWORD PTR [ecx-0x7c63d35c]
  4198ff:	or     esp,esp
  419901:	mov    eax,0x766a4219
  419906:	sbb    eax,0x79a9f32e
  41990b:	jo     0x419957
  41990d:	shl    DWORD PTR [ebx-0x6],cl
  419910:	mov    WORD PTR [esi+0x6344402b],gs
  419916:	sbb    ebp,DWORD PTR [ebp-0xf]
  419919:	fucomi st,st(3)
  41991b:	sbb    bh,BYTE PTR [ebx-0x62931d19]
  419921:	das    
  419922:	adc    DWORD PTR [edi-0x1ab778e1],ecx
  419928:	imul   ebx,DWORD PTR [ecx+eiz*8-0x6a],0x76
  41992d:	sub    BYTE PTR [ecx],al
  41992f:	pusha  
  419930:	outs   dx,BYTE PTR ds:[esi]
  419931:	pop    ebp
  419932:	dec    edx
  419933:	and    BYTE PTR [esi-0x5a8ecb12],dl
  419939:	test   al,0xed
  41993b:	cmp    sp,WORD PTR [di-0x2e]
  419940:	mov    al,0xed
  419942:	pop    esi
  419943:	ds inc edi
  419945:	and    dh,BYTE PTR [edx-0x3b]
  419948:	pop    ebx
  419949:	cmc    
  41994a:	and    al,0x26
  41994c:	jl     0x419914
  41994e:	repz in al,dx
  419950:	jge    0x41992e
  419952:	xor    esp,DWORD PTR [eax]
  419954:	test   DWORD PTR gs:[eax],0x46a28fa6
  41995b:	mov    bh,0x41
  41995d:	adc    BYTE PTR [eax-0x1c],cl
  419960:	cmp    DWORD PTR [edx],ebx
  419962:	es dec eax
  419964:	neg    DWORD PTR [ebx]
  419966:	jno    0x4198f8
  419968:	loop   0x4199df
  41996a:	xchg   ebp,eax
  41996b:	shr    BYTE PTR [ebx],1
  41996d:	mov    al,0x82
  41996f:	imul   esp,DWORD PTR [esi-0x5839f0a2],0x75
  419976:	popa   
  419977:	inc    edx
  419978:	int3   
  419979:	or     BYTE PTR [edi+0x14],dh
  41997c:	stc    
  41997d:	aaa    
  41997e:	fdivr  DWORD PTR [esi+0x48]
  419981:	dec    edx
  419982:	sub    cl,BYTE PTR [edi-0x7c]
  419985:	push   esp
  419986:	pop    esi
  419987:	frstor [edx-0x4a485e9f]
  41998d:	push   ds
  41998e:	inc    esi
  41998f:	ss push edx
  419991:	ror    BYTE PTR [ebx],1
  419993:	and    eax,edx
  419995:	jp     0x419927
  419997:	push   ebx
  419998:	loope  0x4199a5
  41999a:	push   edi
  41999b:	push   0xa60aaa7b
  4199a0:	sbb    ebp,ecx
  4199a2:	lea    esp,[ebx+0x31d431ac]
  4199a8:	aas    
  4199a9:	in     eax,0xe
  4199ab:	loop   0x419951
  4199ad:	imul   esi,DWORD PTR [ebx+0xd8f95e1],0xd601c8c8
  4199b7:	inc    ebp
  4199b8:	mov    al,0xa
  4199ba:	push   ecx
  4199bb:	loop   0x419a2d
  4199bd:	retf   
  4199be:	add    edx,DWORD PTR [edx+0x45a7071]
  4199c4:	adc    al,0x1c
  4199c6:	xlat   BYTE PTR ds:[ebx]
  4199c7:	mov    bh,0x72
  4199c9:	or     esp,DWORD PTR [edi+0x70]
  4199cc:	and    al,0x29
  4199ce:	imul   esp,DWORD PTR [esp+ebx*4+0x3f98401a],0x24e87b5c
  4199d9:	push   eax
  4199da:	(bad)  
  4199db:	mov    ecx,0x7f10211f
  4199e0:	dec    esp
  4199e1:	cli    
  4199e2:	sahf   
  4199e3:	jne    0x4199eb
  4199e5:	cmp    DWORD PTR ds:0xeaae8dc7,0x2f0051d2
  4199ef:	adc    BYTE PTR [esi+esi*1],dh
  4199f2:	fldenv [ebp+0x5934a98d]
  4199f8:	push   esp
  4199f9:	nop
  4199fa:	fsubr  DWORD PTR [edx-0x556b4143]
  419a00:	jmp    0xa583d6c7
  419a05:	and    DWORD PTR [esi-0x4],0x1a346ac6
  419a0c:	in     al,dx
  419a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a0e:	cmp    eax,0x7c291c91
  419a13:	lahf   
  419a14:	enter  0x518b,0xcd
  419a18:	cmp    al,bh
  419a1a:	jp     0x4199dc
  419a1c:	sub    ebp,DWORD PTR [ecx-0x1a]
  419a1f:	lds    di,DWORD PTR [edx-0x1f31520a]
  419a26:	sub    al,0x45
  419a28:	iret   
  419a29:	cdq    
  419a2a:	aas    
  419a2b:	pushf  
  419a2c:	xchg   esp,eax
  419a2d:	xor    al,0x7d
  419a2f:	and    edi,DWORD PTR [edx]
  419a31:	push   0xffffffd1
  419a33:	test   DWORD PTR [edx-0x515195cc],0xe74b8dee
  419a3d:	rcr    DWORD PTR [ebp+0x74],0xef
  419a41:	and    dh,BYTE PTR [esi-0x5f]
  419a44:	mov    cl,BYTE PTR [esi-0x240b3922]
  419a4a:	add    dl,BYTE PTR [eax+0x38aaa9d9]
  419a50:	in     eax,0xc7
  419a52:	out    dx,al
  419a53:	scas   eax,DWORD PTR es:[edi]
  419a54:	aaa    
  419a55:	push   edi
  419a56:	or     cl,BYTE PTR [eax-0x763a16ba]
  419a5c:	in     eax,dx
  419a5d:	outs   dx,BYTE PTR ds:[esi]
  419a5e:	lds    eax,FWORD PTR [ebp+0x54]
  419a61:	jae    0x419a4e
  419a63:	mov    DWORD PTR [edi-0x5b],0x2d885eb6
  419a6a:	jp     0x419a20
  419a6c:	test   eax,0xdea67535
  419a71:	mov    edx,0x7e73c713
  419a76:	and    DWORD PTR [edx+0x71],ebx
  419a79:	int    0xdb
  419a7b:	test   dh,ah
  419a7d:	mov    esp,0xbb177a76
  419a82:	jo     0x419a73
  419a84:	fld    QWORD PTR [edi+0x19c5b78e]
  419a8a:	fsub   DWORD PTR [ebp+0x52ef5175]
  419a90:	pushf  
  419a91:	js     0x419a7a
  419a93:	scas   al,BYTE PTR es:[edi]
  419a94:	push   0xffffffa4
  419a96:	or     esp,DWORD PTR [ebp-0x763a03b0]
  419a9c:	and    DWORD PTR [eax+0x68],ebp
  419a9f:	mov    eax,ds:0x393595b9
  419aa4:	mov    edx,0x96399b00
  419aa9:	out    dx,eax
  419aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aab:	(bad)  
  419aac:	xor    al,0xa8
  419aae:	add    eax,ebp
  419ab0:	or     ch,BYTE PTR [esi]
  419ab2:	(bad)  
  419ab3:	in     eax,0xd7
  419ab5:	scas   eax,DWORD PTR es:[edi]
  419ab6:	div    cl
  419ab8:	adc    al,0x10
  419aba:	fisubr DWORD PTR [eax-0x70]
  419abd:	aas    
  419abe:	iret   
  419abf:	js     0x419a71
  419ac1:	push   edi
  419ac2:	push   eax
  419ac3:	mov    esp,0x551a3080
  419ac8:	mul    DWORD PTR [ebp+ecx*8-0x75]
  419acc:	sub    al,0xba
  419ace:	pop    es
  419acf:	xlat   BYTE PTR ds:[ebx]
  419ad0:	push   esi
  419ad1:	sbb    eax,0x7886ae44
  419ad6:	mov    ch,0x98
  419ad8:	xor    bl,dl
  419ada:	push   es
  419adb:	and    al,0x98
  419add:	repz xchg edx,eax
  419adf:	inc    esi
  419ae0:	pop    edx
  419ae1:	xchg   edx,eax
  419ae2:	mov    ah,0x2b
  419ae4:	add    al,bh
  419ae6:	shr    BYTE PTR [ecx+ebx*4+0x781252d8],cl
  419aed:	xchg   edx,eax
  419aee:	inc    edi
  419aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af0:	out    dx,al
  419af1:	and    edi,DWORD PTR [ecx+0xf86de38]
  419af7:	popa   
  419af8:	shl    esi,1
  419afa:	fsubr  DWORD PTR [esi-0x6c5281a]
  419b00:	daa    
  419b01:	enter  0xfaca,0x20
  419b05:	inc    ebx
  419b06:	shl    DWORD PTR [ebx],1
  419b08:	adc    ecx,DWORD PTR [esi-0x72a75b56]
  419b0e:	xor    BYTE PTR [eax],dh
  419b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b11:	shl    DWORD PTR [eax+0x39ef9218],1
  419b17:	(bad)  
  419b18:	stos   BYTE PTR es:[edi],al
  419b19:	stc    
  419b1a:	out    0x91,al
  419b1c:	xor    ebp,ebp
  419b1e:	rcr    BYTE PTR [ebx+ecx*8-0x6a04ec16],cl
  419b25:	xor    ah,BYTE PTR [edi]
  419b27:	pop    ss
  419b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b29:	pop    esp
  419b2a:	retf   0xd7b
  419b2d:	adc    edx,DWORD PTR [edx]
  419b2f:	imul   ebx,DWORD PTR [eax+esi*8+0xd],0xffffffe9
  419b34:	add    edi,eax
  419b36:	ficom  DWORD PTR ds:0x5775a73
  419b3c:	stc    
  419b3d:	dec    esp
  419b3e:	popf   
  419b3f:	ret    
  419b40:	inc    ecx
  419b41:	mov    ch,BYTE PTR [ebp+0xc]
  419b44:	push   cs
  419b45:	sbb    BYTE PTR [edi],0x10
  419b48:	and    cl,BYTE PTR [esi]
  419b4a:	(bad)  
  419b4b:	or     DWORD PTR [ecx+eax*1+0xd],ebx
  419b4f:	retf   0xe1c8
  419b52:	xchg   edx,eax
  419b53:	cs in  eax,dx
  419b55:	nop
  419b56:	inc    ebx
  419b57:	out    0x52,eax
  419b59:	out    dx,eax
  419b5a:	sbb    BYTE PTR [edx-0x21b5f07d],al
  419b60:	loopne 0x419b4e
  419b62:	inc    ebx
  419b63:	lahf   
  419b64:	std    
  419b65:	inc    edx
  419b66:	sbb    eax,0x941da3d8
  419b6b:	ret    0xb1a9
  419b6e:	mov    DWORD PTR [eax-0x29],esp
  419b71:	rcl    DWORD PTR [ebp+eiz*1+0x743bcea],0x13
  419b79:	or     eax,0x8bf499a4
  419b7e:	sub    al,0x79
  419b80:	and    eax,0x48291d0e
  419b85:	mov    DWORD PTR [ebp+0x19],esp
  419b88:	ja     0x419b86
  419b8a:	stos   BYTE PTR es:[edi],al
  419b8b:	call   0x4f9d5d0
  419b90:	jb     0x419b2c
  419b92:	dec    esi
  419b93:	lahf   
  419b94:	push   ebp
  419b95:	jl     0x419b74
  419b97:	dec    eax
  419b98:	sbb    dl,0x30
  419b9b:	jle    0x419b9b
  419b9d:	(bad)  
  419b9e:	dec    esi
  419b9f:	pop    ebx
  419ba0:	ret    0x1ba4
  419ba3:	xor    ebp,DWORD PTR [edx-0x6]
  419ba6:	ss leave 
  419ba8:	adc    ebp,ebp
  419baa:	cmp    ecx,DWORD PTR [ebp-0x7e20f711]
  419bb0:	lods   eax,DWORD PTR ds:[esi]
  419bb1:	inc    ecx
  419bb2:	dec    esp
  419bb3:	ss mov ebp,0xdf1ce19c
  419bb9:	push   ss
  419bba:	lock dec esi
  419bbc:	push   esp
  419bbd:	fs jo  0x419b41
  419bc0:	mov    esi,0xa80a4104
  419bc5:	ret    0x5146
  419bc8:	jmp    0x419c21
  419bca:	and    ah,BYTE PTR [edi]
  419bcc:	adc    al,0xad
  419bce:	out    dx,eax
  419bcf:	sahf   
  419bd0:	or     ah,BYTE PTR [ebx-0x4d83444f]
  419bd6:	out    0x9f,al
  419bd8:	cmp    BYTE PTR [ebx],0xcc
  419bdb:	sbb    bl,BYTE PTR [edx+0x12]
  419bde:	in     al,0x9d
  419be0:	repnz add ebp,DWORD PTR [edi]
  419be3:	inc    edi
  419be4:	les    edx,FWORD PTR [ebp+0x8]
  419be7:	dec    edi
  419be8:	popa   
  419be9:	adc    eax,0x6847a44d
  419bee:	xor    al,0xce
  419bf0:	ins    DWORD PTR es:[edi],dx
  419bf1:	push   0xffffffce
  419bf3:	in     al,0xd5
  419bf5:	dec    eax
  419bf6:	and    BYTE PTR [esi+0x7c0fadae],cl
  419bfc:	dec    esp
  419bfd:	(bad)  
  419bfe:	mov    ?,esi
  419c00:	hlt    
  419c01:	pop    esp
  419c02:	into   
  419c03:	and    DWORD PTR [ecx],ebp
  419c05:	cld    
  419c06:	jg     0x419c1d
  419c08:	xchg   esi,eax
  419c09:	jmp    0x419c00
  419c0b:	fiadd  DWORD PTR [ecx+0x4d]
  419c0e:	rcr    ecx,cl
  419c10:	xor    BYTE PTR [edx+eax*1+0x6112bdf5],ah
  419c17:	xor    bl,BYTE PTR [edi]
  419c19:	mov    cl,0xca
  419c1b:	(bad)  [esi-0x47]
  419c1e:	and    cl,BYTE PTR [edi-0x69577ae8]
  419c24:	pop    ss
  419c25:	test   DWORD PTR [esi+0x4a9851ab],ebx
  419c2b:	stos   BYTE PTR es:[edi],al
  419c2c:	in     al,dx
  419c2d:	or     BYTE PTR [ebp+eax*4+0x347161b0],dl
  419c34:	inc    ebp
  419c35:	push   ebx
  419c36:	ror    esi,0xa8
  419c39:	fwait
  419c3a:	jmp    0x75e72f7e
  419c3f:	push   ecx
  419c40:	pushf  
  419c41:	dec    esp
  419c42:	ins    BYTE PTR es:[edi],dx
  419c43:	add    eax,0x198e932
  419c48:	out    0x77,al
  419c4a:	ficom  DWORD PTR [esi-0x5b]
  419c4d:	pop    ebx
  419c4e:	or     ah,BYTE PTR [edx]
  419c50:	lods   al,BYTE PTR ds:[esi]
  419c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c52:	xchg   ecx,eax
  419c53:	dec    ecx
  419c54:	mov    ebp,0x77808ca8
  419c59:	(bad)  
  419c5a:	jmp    0xcd20c365
  419c5f:	dec    edx
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	scas   al,BYTE PTR es:[edi]
  419c62:	lahf   
  419c63:	shl    BYTE PTR [edi+0x32],0x72
  419c67:	cwde   
  419c68:	loope  0x419c6a
  419c6a:	js     0x419c0e
  419c6c:	adc    DWORD PTR [ebx+0x287ad28],eax
  419c72:	mov    esp,0x48814b89
  419c77:	es shl esi,cl
  419c7a:	adc    BYTE PTR [edi],dh
  419c7c:	sbb    al,BYTE PTR [esi-0x10d758e1]
  419c82:	outs   dx,BYTE PTR ds:[esi]
  419c83:	mov    al,ds:0xe7407445
  419c88:	push   0xffffff91
  419c8a:	mov    dh,0xda
  419c8c:	inc    ebx
  419c8d:	jmp    0xe8ec:0x3881f1c5
  419c94:	push   cs
  419c95:	fwait
  419c96:	inc    ecx
  419c97:	ret    0x3869
  419c9a:	(bad)  
  419c9b:	mov    ds:0xf3e1d714,al
  419ca0:	cmc    
  419ca1:	jle    0x419cb1
  419ca3:	push   ebp
  419ca4:	pushf  
  419ca5:	aaa    
  419ca6:	mov    BYTE PTR [esi-0x35],dl
  419ca9:	(bad)  
  419cab:	sbb    ah,cl
  419cad:	ins    BYTE PTR es:[edi],dx
  419cae:	clc    
  419caf:	cmp    ch,bl
  419cb1:	mov    dl,0xc6
  419cb3:	xchg   edi,eax
  419cb4:	js     0x419c70
  419cb6:	adc    al,BYTE PTR ds:0x9be21764
  419cbc:	cli    
  419cbd:	sbb    al,0xe9
  419cbf:	mov    ecx,0xf1d19bd2
  419cc4:	and    cl,BYTE PTR [ebp+0x4c]
  419cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cc8:	add    BYTE PTR [edi+ecx*8-0x60],ch
  419ccc:	jge    0x419c6f
  419cce:	mov    tr4,ebp
  419cd1:	nop
  419cd2:	mov    cl,0x91
  419cd4:	add    eax,0xfe5b3073
  419cd9:	inc    ebx
  419cda:	mov    al,es:0xe95aefba
  419ce0:	or     al,0x6c
  419ce2:	ins    BYTE PTR es:[edi],dx
  419ce3:	out    dx,al
  419ce4:	jb     0x419d13
  419ce6:	in     al,dx
  419ce7:	xchg   BYTE PTR [ebx-0x75],dh
  419cea:	and    al,0x24
  419cec:	jp     0x419d63
  419cee:	jge    0x419d45
  419cf0:	pop    edx
  419cf1:	in     al,dx
  419cf2:	shr    DWORD PTR [eax-0x74],1
  419cf5:	mov    cl,0x16
  419cf7:	icebp  
  419cf8:	imul   ebx,DWORD PTR ds:0xa7e1b951,0x43d39c8b
  419d02:	mov    cl,0xd1
  419d04:	out    dx,eax
  419d05:	and    DWORD PTR [ebp+0x27],esi
  419d08:	(bad)  
  419d0a:	retf   
  419d0b:	sbb    eax,0xd6d1832
  419d10:	out    dx,eax
  419d11:	sub    eax,DWORD PTR [eax]
  419d13:	leave  
  419d14:	dec    esi
  419d15:	xor    ah,BYTE PTR [edi-0x64]
  419d18:	fs in  eax,0x3e
  419d1b:	push   ds
  419d1c:	pop    ebp
  419d1d:	jnp    0x419cac
  419d1f:	and    BYTE PTR [ecx],al
  419d21:	push   es
  419d22:	stc    
  419d23:	mov    edi,ds
  419d25:	test   al,0xdb
  419d27:	push   ebx
  419d28:	cmp    DWORD PTR [edx-0x769f9f5b],edi
  419d2e:	xchg   DWORD PTR [ecx+0x26],esp
  419d31:	push   ecx
  419d32:	lahf   
  419d33:	sub    al,BYTE PTR [edi-0x4d]
  419d36:	lahf   
  419d37:	xchg   ecx,eax
  419d38:	pop    edi
  419d39:	xor    BYTE PTR [ebx],al
  419d3b:	ins    DWORD PTR es:[edi],dx
  419d3c:	ror    BYTE PTR [edi-0x42],1
  419d3f:	add    al,0x6b
  419d41:	icebp  
  419d42:	push   ebp
  419d43:	xor    edx,DWORD PTR [ecx+ebp*2+0x78]
  419d47:	addr16 (bad) 
  419d49:	adc    eax,0xb48546c5
  419d4e:	shl    DWORD PTR [edi],cl
  419d50:	(bad)  [ebp+0x133591a0]
  419d56:	lea    eax,[edx]
  419d58:	mov    ds:0x30c7ac77,eax
  419d5d:	ds retf 0x387b
  419d61:	nop
  419d62:	mov    ecx,0x7bf5ac4b
  419d67:	imul   ebp,DWORD PTR [ebp-0x21dcb96d],0x34
  419d6e:	add    DWORD PTR ds:0xb587c3fc,edx
  419d74:	fwait
  419d75:	(bad)  
  419d76:	stc    
  419d77:	sub    edx,DWORD PTR [esi-0x78]
  419d7a:	ss push ds
  419d7c:	retf   
  419d7d:	daa    
  419d7e:	js     0x419d23
  419d80:	aas    
  419d81:	push   es
  419d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d83:	cmc    
  419d84:	xchg   ecx,eax
  419d85:	jbe    0x419dff
  419d87:	ss mov eax,0x2c5bae60
  419d8d:	adc    eax,0x1a6ad1af
  419d92:	aaa    
  419d93:	mov    ebx,0xb7e4acc2
  419d98:	add    ebp,0xffffffa3
  419d9b:	push   esp
  419d9c:	aam    0xa8
  419d9e:	int    0xbc
  419da0:	call   0x731ebaf5
  419da5:	xchg   ecx,eax
  419da6:	pop    ecx
  419da7:	cli    
  419da8:	aam    0xe9
  419daa:	std    
  419dab:	mov    bh,0x55
  419dad:	or     al,0x82
  419daf:	cld    
  419db0:	pop    ss
  419db1:	sub    DWORD PTR [ebx],0x44
  419db4:	pusha  
  419db5:	nop
  419db6:	or     eax,0x85de6677
  419dbb:	push   ebx
  419dbc:	loop   0x419dcb
  419dbe:	fistp  DWORD PTR [edi-0xb]
  419dc1:	sbb    BYTE PTR [esi+eax*8+0x4ce92080],dh
  419dc8:	lahf   
  419dc9:	mov    ecx,0xb0648af9
  419dce:	test   DWORD PTR [ebp-0x6c346e09],esp
  419dd4:	imul   esi,esp,0xffffff84
  419dd7:	xor    DWORD PTR [ebx],edi
  419dd9:	lock daa 
  419ddb:	cmp    eax,0xd7947714
  419de0:	and    eax,0xd6549107
  419de5:	fucom  st(1)
  419de7:	les    ebp,FWORD PTR [ebx-0x3b]
  419dea:	loop   0x419e30
  419dec:	sub    BYTE PTR [ebx],ah
  419dee:	repz cs mov al,0x4b
  419df2:	mov    ebx,0x9da32e93
  419df7:	adc    edx,edx
  419df9:	pop    ecx
  419dfa:	xchg   edx,eax
  419dfb:	iret   
  419dfc:	push   ss
  419dfd:	push   eax
  419dfe:	imul   eax,DWORD PTR [esi],0xffffffeb
  419e01:	cmp    ch,ch
  419e03:	jb     0x419e76
  419e05:	pop    edx
  419e06:	jg     0x419d9e
  419e08:	sub    eax,0xba65efeb
  419e0d:	add    ah,BYTE PTR [ebx-0x45]
  419e10:	and    BYTE PTR [esi-0x62],dl
  419e13:	mov    eax,ds:0x5fddeee1
  419e18:	nop
  419e19:	rcr    dh,1
  419e1b:	cld    
  419e1c:	(bad)  
  419e1d:	xor    al,0xef
  419e1f:	xor    bh,bl
  419e21:	jo     0x419de7
  419e23:	and    ecx,DWORD PTR [edx-0xd]
  419e26:	icebp  
  419e27:	push   es
  419e28:	lds    esp,FWORD PTR [ebp-0x5f]
  419e2b:	mov    BYTE PTR ds:0xd11b6197,ah
  419e31:	ins    DWORD PTR es:[edi],dx
  419e32:	jne    0x419dbd
  419e34:	hlt    
  419e35:	out    0x6b,al
  419e37:	repz mov edi,0xbcf28e3b
  419e3d:	gs pop eax
  419e3f:	aad    0x8f
  419e41:	popa   
  419e42:	outs   dx,DWORD PTR ds:[esi]
  419e43:	dec    eax
  419e44:	dec    ecx
  419e45:	push   0x7
  419e47:	into   
  419e48:	push   edx
  419e49:	xlat   BYTE PTR ds:[ebx]
  419e4a:	imul   ebx,DWORD PTR [esi-0x52],0xfe4a08fc
  419e51:	mov    cs,ebp
  419e53:	ret    
  419e54:	ins    DWORD PTR es:[edi],dx
  419e55:	mov    DWORD PTR [eax],eax
  419e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e58:	adc    ebp,DWORD PTR [edx+0x4ce7ef84]
  419e5e:	cmp    eax,0xe37bbcca
  419e63:	adc    ebx,DWORD PTR [esi-0xd5f5f8e]
  419e69:	mov    esi,0x6bc7b3f0
  419e6e:	jmp    0xbc0b:0xb57dc33c
  419e75:	mov    ecx,0xfb966a68
  419e7a:	xchg   BYTE PTR [ecx+0x27],ah
  419e7d:	xor    edx,DWORD PTR [ecx+0x79]
  419e80:	mov    ch,0xb1
  419e82:	pusha  
  419e83:	or     al,0x4e
  419e85:	into   
  419e86:	jne    0x419ed1
  419e88:	or     ecx,DWORD PTR [esi]
  419e8a:	mov    edi,0x76904c4e
  419e8f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e91:	pop    ebx
  419e92:	js     0x419ea3
  419e94:	lods   al,BYTE PTR ds:[esi]
  419e95:	jb     0x419e2b
  419e97:	pop    ecx
  419e98:	jno    0x419f17
  419e9a:	push   0x20
  419e9c:	sbb    eax,0x3af3d0a6
  419ea1:	das    
  419ea2:	xchg   dh,al
  419ea4:	and    al,0xd0
  419ea6:	pop    ebp
  419ea7:	sub    BYTE PTR [ecx-0x17],ch
  419eaa:	mov    bl,0xc4
  419eac:	inc    esi
  419ead:	mov    cl,0x19
  419eb0:	mov    cl,0x36
  419eb2:	dec    ecx
  419eb3:	test   al,0x9e
  419eb5:	shl    esi,cl
  419eb7:	cmc    
  419eb8:	imul   esi
  419eba:	jae    0x419ee8
  419ebc:	dec    ebp
  419ebd:	retf   
  419ebe:	xchg   DWORD PTR [edx],ebp
  419ec0:	pop    esp
  419ec1:	and    edi,DWORD PTR [ebx]
  419ec3:	push   esi
  419ec4:	sub    DWORD PTR [edi+0x120a2287],edi
  419eca:	lods   al,BYTE PTR ds:[esi]
  419ecb:	mov    al,0xf
  419ecd:	pop    ss
  419ece:	jne    0x419e65
  419ed0:	sub    BYTE PTR [eax],0xda
  419ed3:	adc    BYTE PTR [edi-0x30],al
  419ed6:	jp     0x419f48
  419ed8:	ror    ecx,cl
  419eda:	imul   edi,DWORD PTR [esi+eax*1],0x9b48bec6
  419ee1:	jl     0x419f37
  419ee3:	add    DWORD PTR [edi-0x757d9ccb],ebp
  419ee9:	retf   
  419eea:	loope  0x419f0d
  419eec:	rcl    DWORD PTR [eax],cl
  419eee:	push   0x48
  419ef0:	xor    eax,0x7598381f
  419ef5:	sti    
  419ef6:	jmp    0xf56e:0xf578561f
  419efd:	xor    BYTE PTR [edx-0x5804039e],ah
  419f03:	jbe    0x419f44
  419f05:	mov    edx,0xa8327ddc
  419f0a:	mov    ah,0xed
  419f0c:	and    eax,0x9a937802
  419f11:	hlt    
  419f12:	test   BYTE PTR [eax],dl
  419f14:	stc    
  419f15:	ror    DWORD PTR [edx+0x334c97b7],cl
  419f1b:	(bad)  
  419f1c:	(bad)  
  419f1d:	fmul   DWORD PTR ds:0x685b0cf3
  419f23:	ss (bad) 
  419f25:	or     edi,DWORD PTR [ebp-0x9]
  419f28:	imul   esi,esi,0x34
  419f2b:	(bad)  
  419f2c:	test   al,0xbe
  419f2e:	(bad)  
  419f2f:	pop    edx
  419f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f31:	data16 int3 
  419f33:	mov    esp,DWORD PTR [edi]
  419f35:	js     0x419f0e
  419f37:	hlt    
  419f38:	xor    edx,DWORD PTR [edx-0x37dffdbf]
  419f3e:	adc    BYTE PTR [edx],bl
  419f40:	jb     0x419f9b
  419f42:	xchg   edi,eax
  419f43:	inc    esi
  419f44:	push   eax
  419f45:	daa    
  419f46:	pop    es
  419f47:	imul   edi,DWORD PTR [eax+0x7650d736],0x12
  419f4e:	in     eax,dx
  419f4f:	jb     0x419f00
  419f51:	sbb    BYTE PTR [edx],al
  419f53:	imul   BYTE PTR [eax-0x34]
  419f56:	lods   eax,DWORD PTR ds:[esi]
  419f57:	cmc    
  419f58:	f2xm1  
  419f5a:	sub    eax,0x24495536
  419f5f:	mov    DWORD PTR [edi-0x72],ebx
  419f62:	test   DWORD PTR [ebx+0x5c],esi
  419f65:	idiv   DWORD PTR es:[ecx]
  419f68:	xor    BYTE PTR ds:0x37a944b,dl
  419f6e:	cld    
  419f6f:	sub    DWORD PTR [esi],ebx
  419f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f72:	jecxz  0x419fd8
  419f74:	mov    esp,0xdeb4ce82
  419f79:	push   ebp
  419f7a:	pop    ecx
  419f7b:	sar    BYTE PTR [esp+ebx*4],cl
  419f7e:	adc    eax,0xd3ff44c2
  419f83:	add    dl,dl
  419f85:	test   al,0x78
  419f87:	mov    ss,WORD PTR [eax-0xe841cdc]
  419f8d:	or     BYTE PTR [esi],cl
  419f8f:	cld    
  419f90:	push   ss
  419f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f92:	xchg   DWORD PTR [ebx],edx
  419f94:	jb     0x419f7b
  419f96:	jnp    0x419f61
  419f98:	mov    al,BYTE PTR [edx+0x5]
  419f9b:	inc    edx
  419f9c:	mov    dh,0x2d
  419f9e:	mov    esp,0xec6a50f1
  419fa3:	mov    ebx,0x3bdd910f
  419fa8:	jae    0x419f2d
  419faa:	int3   
  419fab:	rcl    DWORD PTR [eax+0x68],cl
  419fae:	adc    DWORD PTR [esi+0x12c143cd],esp
  419fb4:	lods   al,BYTE PTR ds:[esi]
  419fb5:	push   ds
  419fb6:	ins    DWORD PTR es:[edi],dx
  419fb7:	push   edi
  419fb8:	xchg   DWORD PTR [edi+0x66],ecx
  419fbb:	jno    0x419fb5
  419fbd:	inc    edx
  419fbe:	push   ebp
  419fbf:	shl    BYTE PTR [esi+eax*4],cl
  419fc2:	pop    eax
  419fc3:	adc    al,0xdf
  419fc5:	aad    0x65
  419fc7:	push   es
  419fc8:	cmp    BYTE PTR [ebp+0x4d452ac6],ah
  419fce:	cmp    eax,DWORD PTR [edi-0x1f]
  419fd1:	and    dl,ch
  419fd3:	sbb    BYTE PTR [esi],0xbf
  419fd6:	pusha  
  419fd7:	mov    cl,BYTE PTR [ecx+0x6d]
  419fda:	shr    BYTE PTR [eax-0x73],0x8a
  419fde:	push   0x461e5a06
  419fe3:	test   ebx,edi
  419fe5:	pop    ds
  419fe6:	jbe    0x41a050
  419fe8:	in     al,0xe3
  419fea:	mov    es,WORD PTR [esi+0x66056762]
  419ff0:	or     al,bh
  419ff2:	mov    bl,0xd7
  419ff4:	stc    
  419ff5:	test   al,0xee
  419ff7:	out    dx,eax
  419ff8:	mov    esi,0x3c135a57
  419ffd:	jge    0x419fcb
  419fff:	or     BYTE PTR [ebx],bh
  41a001:	mov    bh,0xd3
  41a003:	inc    ecx
  41a004:	adc    BYTE PTR [edx+0x4d450c1b],dl
  41a00a:	arpl   WORD PTR [esi+0x7a],dx
  41a00d:	into   
  41a00e:	dec    bh
  41a010:	sahf   
  41a011:	xor    DWORD PTR [ecx+0x12],0x964053f9
  41a018:	cmp    BYTE PTR [edx+0x3028b660],dh
  41a01e:	dec    edi
  41a01f:	bswap  ebp
  41a021:	mov    bl,0x2
  41a023:	push   0xc7af9977
  41a028:	bound  edi,QWORD PTR [bx+di+0x25]
  41a02c:	(bad)  
  41a02d:	lahf   
  41a02e:	das    
  41a02f:	aad    0x16
  41a031:	xchg   ebx,eax
  41a032:	mov    dh,0x30
  41a034:	fild   QWORD PTR [edx*8+0x5d479c0f]
  41a03b:	ffreep st(0)
  41a03d:	mov    eax,0xff18ac7c
  41a042:	cmp    edx,eax
  41a044:	push   esi
  41a045:	xchg   edi,eax
  41a046:	mov    esp,0x1bc00374
  41a04b:	icebp  
  41a04c:	xchg   edi,eax
  41a04d:	imul   edi,DWORD PTR [edx+0x31876c3b],0xc062e4c5
  41a057:	mov    eax,0x4ce247de
  41a05c:	sub    al,BYTE PTR [ebx]
  41a05e:	call   0x1bde1c2a
  41a063:	fsubr  QWORD PTR [ecx+ecx*4-0x15]
  41a067:	fwait
  41a068:	and    DWORD PTR [ebp-0x26],edx
  41a06b:	sbb    DWORD PTR [edi-0x10b82fce],esi
  41a071:	xchg   BYTE PTR [eax+edx*1-0x3e],dh
  41a075:	xchg   bh,dh
  41a077:	out    0x6e,al
  41a079:	fidivr WORD PTR [esi]
  41a07b:	sbb    al,0x2e
  41a07d:	retf   
  41a07e:	push   ebx
  41a07f:	ret    0x4ee1
  41a082:	pusha  
  41a083:	repz jecxz 0x41a0f9
  41a086:	lea    edi,[eax+0x7]
  41a089:	and    ch,ah
  41a08b:	jmp    0x76af:0xd89140c9
  41a092:	jecxz  0x41a03e
  41a094:	cmp    ah,BYTE PTR [esi]
  41a096:	outs   dx,DWORD PTR ds:[esi]
  41a097:	retf   
  41a098:	sbb    DWORD PTR [edx-0x74],ebx
  41a09b:	mov    cl,0x9b
  41a09d:	ja     0x41a0d6
  41a09f:	mov    ds:0x5c2c8266,al
  41a0a4:	xchg   edi,eax
  41a0a5:	sub    ecx,DWORD PTR [ebx+0xb2ea148]
  41a0ab:	iret   
  41a0ac:	leave  
  41a0ad:	inc    eax
  41a0ae:	cdq    
  41a0af:	push   ds
  41a0b0:	inc    ebx
  41a0b1:	jnp    0x41a068
  41a0b3:	enter  0xc235,0x4f
  41a0b7:	(bad)  
  41a0b8:	sbb    DWORD PTR [ecx+esi*8-0x59dd98cf],ecx
  41a0bf:	fwait
  41a0c0:	out    0x33,eax
  41a0c2:	mov    bh,0x1c
  41a0c4:	push   ebx
  41a0c5:	xor    eax,0x23a1aeab
  41a0ca:	jne    0x41a0f7
  41a0cc:	mov    ebp,0x22969556
  41a0d1:	retf   0x6c51
  41a0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0d5:	jo     0x41a109
  41a0d7:	push   edx
  41a0d8:	or     BYTE PTR gs:[ebp+0x6],ah
  41a0dc:	jmp    0x309e:0x50125f4e
  41a0e3:	cmp    edi,DWORD PTR [ebx+0x19]
  41a0e6:	inc    ecx
  41a0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0e8:	test   al,0x1
  41a0ea:	push   ds
  41a0eb:	mov    DWORD PTR [edx],edx
  41a0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ee:	push   ebp
  41a0ef:	mov    ah,0x58
  41a0f1:	ja     0x41a171
  41a0f3:	pop    edx
  41a0f4:	das    
  41a0f5:	sti    
  41a0f6:	lds    edx,FWORD PTR ds:0x9f11c9bd
  41a0fc:	je     0x41a0ea
  41a0fe:	or     al,BYTE PTR [esi-0xcdcaa1e]
  41a104:	xlat   BYTE PTR ds:[ebx]
  41a105:	mov    bl,bh
  41a107:	outs   dx,DWORD PTR ds:[esi]
  41a108:	jbe    0x41a187
  41a10a:	xlat   BYTE PTR ds:[ebx]
  41a10b:	inc    esi
  41a10c:	push   cs
  41a10d:	cmp    BYTE PTR ds:0xc4c8785e,dh
  41a113:	xor    bl,BYTE PTR [esi]
  41a115:	adc    al,0xde
  41a117:	into   
  41a118:	jg     0x41a127
  41a11a:	scas   al,BYTE PTR es:[edi]
  41a11b:	pop    edx
  41a11c:	sub    al,0x27
  41a11e:	pop    ecx
  41a11f:	idiv   BYTE PTR [esi]
  41a121:	int3   
  41a122:	(bad)  
  41a123:	dec    edi
  41a124:	adc    eax,0x7121ca5f
  41a129:	je     0x41a137
  41a12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a12c:	add    DWORD PTR [eax],esi
  41a12e:	js     0x41a1af
  41a130:	fidiv  DWORD PTR [edx+edx*4+0xfbb728c]
  41a137:	xor    al,0x4f
  41a139:	add    al,0xae
  41a13b:	xchg   esp,eax
  41a13c:	(bad)  
  41a13d:	and    DWORD PTR [edx],esi
  41a13f:	and    al,0x12
  41a141:	leave  
  41a142:	sahf   
  41a143:	test   eax,0x26695edc
  41a148:	stos   BYTE PTR es:[edi],al
  41a149:	loopne 0x41a0dd
  41a14b:	(bad)  [eax]
  41a14d:	icebp  
  41a14e:	(bad)  
  41a14f:	and    dl,dl
  41a151:	test   al,0x90
  41a153:	scas   al,BYTE PTR es:[edi]
  41a154:	adc    eax,0x8294c008
  41a159:	dec    ebp
  41a15a:	push   ss
  41a15b:	retf   0x29b0
  41a15e:	or     al,0xa8
  41a160:	ds xchg esp,eax
  41a162:	outs   dx,DWORD PTR ds:[esi]
  41a163:	mov    dl,0xef
  41a165:	mov    ebx,0xfd2d8c60
  41a16a:	push   esp
  41a16b:	pop    es
  41a16c:	xchg   ebx,eax
  41a16d:	dec    ecx
  41a16e:	push   ecx
  41a16f:	loopne 0x41a13e
  41a171:	aas    
  41a172:	jae    0x41a1ec
  41a174:	xchg   esp,eax
  41a175:	leave  
  41a176:	cmp    BYTE PTR [edx],bh
  41a178:	mov    al,ds:0x7dce6401
  41a17d:	push   ds
  41a17e:	enter  0xe02a,0xb0
  41a182:	and    al,0x8e
  41a184:	xlat   BYTE PTR ds:[ebx]
  41a185:	xor    BYTE PTR [ebx+0x28965c5d],ah
  41a18b:	mov    ds:0x104c1623,eax
  41a190:	fadd   st,st(7)
  41a192:	out    0xef,al
  41a194:	(bad)  
  41a195:	mov    fs,WORD PTR [edx-0x13]
  41a198:	fst    QWORD PTR [edi-0x8]
  41a19b:	mov    esi,DWORD PTR ds:0x5fe60ac5
  41a1a1:	and    eax,0xea36f8c5
  41a1a6:	jmp    0x3200:0xce6cb9fd
  41a1ad:	nop
  41a1ae:	outs   dx,BYTE PTR ds:[esi]
  41a1af:	sub    BYTE PTR [edi+0x6e],bl
  41a1b2:	ret    
  41a1b3:	mov    ebx,0x96d8841e
  41a1b8:	xor    DWORD PTR [esi],eax
  41a1ba:	mov    esi,0x6e69b54d
  41a1bf:	mov    bh,BYTE PTR [eax-0x1e]
  41a1c2:	fucomi st,st(6)
  41a1c4:	lahf   
  41a1c5:	ret    
  41a1c6:	loope  0x41a205
  41a1c8:	adc    al,0xbd
  41a1ca:	ret    0xcabf
  41a1cd:	add    al,BYTE PTR [edx+0x40]
  41a1d0:	inc    ecx
  41a1d1:	popf   
  41a1d2:	push   0xba8b9930
  41a1d7:	fistp  WORD PTR [edx+edx*1-0x2400b397]
  41a1de:	das    
  41a1df:	push   0xffffffcb
  41a1e1:	shl    DWORD PTR [ecx+esi*1],1
  41a1e4:	out    dx,al
  41a1e5:	and    bl,cl
  41a1e7:	clc    
  41a1e8:	stos   DWORD PTR es:[edi],eax
  41a1e9:	mov    eax,0x1eb6865a
  41a1ee:	retf   
  41a1ef:	ja     0x41a1cf
  41a1f1:	dec    edi
  41a1f2:	xor    esp,DWORD PTR [eax]
  41a1f4:	and    ecx,DWORD PTR [esi+0x0]
  41a1f7:	dec    ebx
  41a1f8:	hlt    
  41a1f9:	xchg   edi,eax
  41a1fa:	lahf   
  41a1fb:	xlat   BYTE PTR ds:[ebx]
  41a1fc:	mov    dl,0x7c
  41a1fe:	and    al,0x8f
  41a200:	out    dx,eax
  41a201:	adc    ecx,DWORD PTR [edi+ecx*4-0x75df18ad]
  41a208:	sbb    al,0xe9
  41a20a:	popf   
  41a20b:	jge    0x41a229
  41a20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a20f:	out    dx,al
  41a210:	sub    ebx,DWORD PTR [eax-0x22]
  41a213:	lods   eax,DWORD PTR ds:[esi]
  41a214:	pop    DWORD PTR [edi]
  41a216:	inc    esi
  41a217:	(bad)
  41a21b:	push   edx
  41a21c:	jmp    0xc740:0x96d664a8
  41a223:	aad    0xd1
  41a225:	add    DWORD PTR [edi-0x7e1b8337],edx
  41a22b:	gs mov esp,0x8aac3592
  41a231:	mov    bl,0x46
  41a233:	mov    bh,0x1c
  41a235:	iret   
  41a236:	push   edx
  41a237:	mov    ds:0xa40f0d42,al
  41a23c:	pop    ecx
  41a23d:	push   0x6c
  41a23f:	or     ch,bl
  41a241:	or     DWORD PTR [ecx+eiz*4],esp
  41a244:	add    eax,0xa00afc24
  41a249:	mov    ch,0x30
  41a24b:	out    dx,al
  41a24c:	push   0xffffffc4
  41a24e:	mov    esi,0x40d3030f
  41a253:	xchg   ecx,eax
  41a254:	xchg   ebp,eax
  41a255:	sbb    ebp,esi
  41a257:	bswap  edx
  41a259:	rcl    BYTE PTR [esi+0x27],cl
  41a25c:	retf   
  41a25d:	(bad)  
  41a25e:	test   BYTE PTR [ebp+ecx*1+0x1c],0x48
  41a263:	je     0x41a27b
  41a265:	popa   
  41a266:	dec    ebx
  41a267:	adc    cl,ah
  41a269:	adc    edx,DWORD PTR ss:[edx-0x31cf3c18]
  41a270:	dec    eax
  41a271:	or     dl,BYTE PTR [edi]
  41a273:	xchg   edx,eax
  41a274:	push   esp
  41a275:	sbb    DWORD PTR [ebp-0x1cf866bb],esp
  41a27b:	sbb    bl,BYTE PTR [ebx+eiz*8+0x2ddb0d12]
  41a282:	jb     0x41a2da
  41a284:	cmp    BYTE PTR [edx-0x2f],al
  41a287:	xchg   edi,eax
  41a288:	jbe    0x41a215
  41a28a:	jmp    0x2cad:0x236acfdd
  41a291:	pop    edi
  41a292:	call   0x8658:0xb26881f6
  41a299:	lahf   
  41a29a:	mov    dl,BYTE PTR [ebx]
  41a29c:	sbb    bl,dl
  41a29e:	rol    DWORD PTR [ebx],cl
  41a2a0:	pop    ds
  41a2a1:	lock sub al,0x19
  41a2a4:	cld    
  41a2a5:	and    eax,0x33bfd08d
  41a2aa:	(bad)  
  41a2ab:	retf   0x6d96
  41a2ae:	push   ebp
  41a2af:	xor    dh,0x9e
  41a2b2:	adc    BYTE PTR [edi],0x22
  41a2b5:	mov    dl,0x81
  41a2b7:	repnz mov eax,ds:0xaba12178
  41a2bd:	aad    0x9f
  41a2bf:	shl    BYTE PTR [ebp-0x60c9740b],cl
  41a2c5:	mov    eax,0x45323a7f
  41a2ca:	in     al,dx
  41a2cb:	jnp    0x41a322
  41a2cd:	mov    bl,0x91
  41a2cf:	je     0x41a255
  41a2d1:	fld    DWORD PTR [eax+0x107ff1d0]
  41a2d7:	dec    eax
  41a2d8:	scas   eax,DWORD PTR es:[edi]
  41a2d9:	xchg   ecx,eax
  41a2da:	push   ecx
  41a2db:	jmp    FWORD PTR [eax-0x3b63e52]
  41a2e1:	imul   eax,DWORD PTR [edi+edx*4-0x7c],0x76
  41a2e6:	cmp    BYTE PTR [edx+0x0],0x19
  41a2ea:	bound  ebx,QWORD PTR [ecx]
  41a2ec:	test   DWORD PTR [ebx-0x30],ebx
  41a2ef:	and    BYTE PTR [ecx+0x217ab9e7],cl
  41a2f5:	dec    esp
  41a2f6:	lods   eax,DWORD PTR ds:[esi]
  41a2f7:	push   eax
  41a2f8:	out    dx,eax
  41a2f9:	fisubr WORD PTR [esi+esi*8]
  41a2fc:	loopne 0x41a36c
  41a2fe:	add    cl,cl
  41a300:	adc    ebp,DWORD PTR [eax+0x49]
  41a303:	call   0x7b84:0x5dac2fd3
  41a30a:	xor    bh,BYTE PTR [eax-0x5f]
  41a30d:	sub    BYTE PTR [ebx],dh
  41a30f:	loopne 0x41a357
  41a311:	jns    0x41a313
  41a313:	mov    ecx,0xf0a1cb10
  41a318:	mov    edi,0x6d1e9b0
  41a31d:	mov    bl,0x82
  41a31f:	push   es
  41a320:	dec    esi
  41a321:	jae    0x41a2c8
  41a323:	or     eax,0x8cc944c4
  41a328:	mov    eax,0xce3631d1
  41a32d:	lds    esp,FWORD PTR [ebp-0x660f92c0]
  41a333:	outs   dx,DWORD PTR ds:[esi]
  41a334:	sahf   
  41a335:	mov    dl,0xfb
  41a337:	lahf   
  41a338:	into   
  41a339:	jno    0x41a2e1
  41a33b:	jmp    0x41a374
  41a33d:	push   esp
  41a33e:	and    DWORD PTR [ebx],edi
  41a340:	pop    ss
  41a341:	xchg   edi,eax
  41a342:	mov    eax,ds:0x314eb14c
  41a347:	pop    ds
  41a348:	inc    esp
  41a349:	or     bl,0x14
  41a34c:	add    DWORD PTR [ecx+0x18],edi
  41a34f:	xchg   ebp,eax
  41a350:	push   edi
  41a351:	stos   BYTE PTR es:[edi],al
  41a352:	jne    0x41a3c8
  41a354:	in     eax,0xea
  41a356:	jp     0x41a30f
  41a358:	lahf   
  41a359:	loope  0x41a3b8
  41a35b:	jl     0x41a30c
  41a35d:	out    0x5b,eax
  41a35f:	sub    BYTE PTR [esi],bh
  41a361:	add    BYTE PTR [esi],dh
  41a363:	imul   ecx,DWORD PTR [edx-0x796eece3],0x79b11336
  41a36d:	mov    ds:0x65dcad63,eax
  41a372:	leave  
  41a373:	jae    0x41a30b
  41a375:	stos   BYTE PTR es:[edi],al
  41a376:	(bad)  
  41a377:	cli    
  41a378:	daa    
  41a379:	add    DWORD PTR [esi+0x7df25567],0xffffffd1
  41a380:	aad    0x1f
  41a382:	call   0xc023:0x3bf04fad
  41a389:	jbe    0x41a376
  41a38b:	and    bh,BYTE PTR [ebx+0x1e68b855]
  41a391:	and    al,0xfb
  41a393:	(bad)  
  41a394:	push   ecx
  41a395:	pop    esp
  41a396:	in     eax,dx
  41a397:	scas   eax,DWORD PTR es:[edi]
  41a398:	into   
  41a399:	sbb    al,0xa2
  41a39b:	sub    al,0x6b
  41a39d:	jns    0x41a372
  41a39f:	pop    esp
  41a3a0:	jmp    0xaca8:0xa677b6dc
  41a3a7:	add    al,0x64
  41a3a9:	retf   0x43f
  41a3ac:	cvtps2pi mm3,QWORD PTR [edx+0x37f8e91c]
  41a3b3:	(bad)  
  41a3b4:	arpl   cx,dx
  41a3b6:	pop    edi
  41a3b7:	bound  edi,QWORD PTR [eax-0x51]
  41a3ba:	(bad)  
  41a3bb:	mov    al,0x68
  41a3bd:	mov    ch,0x5d
  41a3bf:	lock jmp 0x41a439
  41a3c2:	(bad)  
  41a3c3:	xor    BYTE PTR [esi-0x34527f30],cl
  41a3c9:	cmp    eax,DWORD PTR [ebx]
  41a3cb:	scas   eax,DWORD PTR es:[edi]
  41a3cc:	mul    DWORD PTR [eax+0x2b]
  41a3cf:	sub    edi,DWORD PTR [edx]
  41a3d1:	cmp    eax,0x2ee2898f
  41a3d6:	mov    edx,0x74f15e90
  41a3db:	push   eax
  41a3dc:	mov    cl,0xf4
  41a3de:	cld    
  41a3df:	scas   eax,DWORD PTR es:[edi]
  41a3e0:	das    
  41a3e1:	test   eax,0x4cc2c51e
  41a3e6:	add    BYTE PTR [edx],bl
  41a3e8:	hlt    
  41a3e9:	xor    al,0x19
  41a3eb:	push   cs
  41a3ec:	mov    bh,bl
  41a3ee:	lds    edx,FWORD PTR [ebp-0x27]
  41a3f1:	jne    0x41a38e
  41a3f3:	mov    esp,ds
  41a3f5:	sub    BYTE PTR [eax+0x14],bl
  41a3f8:	in     al,0xb6
  41a3fa:	mov    edx,0xcd6fbe0
  41a3ff:	lds    edx,FWORD PTR [ebp+0x49c45b53]
  41a405:	push   ebp
  41a406:	jbe    0x41a446
  41a408:	leave  
  41a409:	pop    ebp
  41a40a:	popf   
  41a40b:	fst    QWORD PTR [edx+0x38155e15]
  41a411:	loope  0x41a462
  41a413:	or     al,BYTE PTR [ecx+0x6907730e]
  41a419:	mov    al,0x8
  41a41b:	pop    ebx
  41a41c:	icebp  
  41a41d:	fs sbb dh,ch
  41a420:	dec    esi
  41a421:	fild   QWORD PTR [eax]
  41a423:	push   0x61
  41a425:	and    ecx,esp
  41a427:	leave  
  41a428:	dec    edi
  41a429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a42a:	retf   0x9438
  41a42d:	popa   
  41a42e:	(bad)  
  41a42f:	jmp    FWORD PTR [edx-0x4d95fc33]
  41a435:	rcl    BYTE PTR [edx],1
  41a437:	test   eax,0xf47d9d4b
  41a43c:	out    dx,eax
  41a43d:	sub    al,ch
  41a43f:	into   
  41a440:	push   ebp
  41a441:	outs   dx,DWORD PTR ds:[esi]
  41a442:	popa   
  41a443:	test   BYTE PTR [eax-0x3a446142],bh
  41a449:	mov    WORD PTR [ebp-0x5e13cc96],gs
  41a44f:	mov    ebx,0x83962c07
  41a454:	adc    eax,0x33757098
  41a459:	dec    ecx
  41a45a:	dec    ecx
  41a45b:	dec    eax
  41a45c:	xor    ch,dl
  41a45e:	outs   dx,DWORD PTR ds:[esi]
  41a45f:	lahf   
  41a460:	call   0x3571:0xebd78438
  41a467:	xlat   BYTE PTR ds:[ebx]
  41a468:	test   DWORD PTR [ebp-0xc],esi
  41a46b:	adc    dh,BYTE PTR [esi+0x76]
  41a46e:	daa    
  41a46f:	aas    
  41a470:	jns    0x41a42c
  41a472:	dec    ebx
  41a473:	je     0x41a400
  41a475:	add    eax,0xd1fd1cb2
  41a47a:	mov    cl,BYTE PTR [edi+0x0]
  41a47d:	sbb    eax,0xffffff9d
  41a480:	mov    dl,0x2e
  41a482:	data16 jo 0x41a430
  41a485:	pusha  
  41a486:	popf   
  41a487:	jge    0x41a46c
  41a489:	sub    DWORD PTR [edi],eax
  41a48b:	mov    ebp,0x64eb1491
  41a490:	or     edx,DWORD PTR [ebp-0x684c8dd5]
  41a496:	and    al,0x45
  41a498:	mov    BYTE PTR [eax+ecx*1],bl
  41a49b:	jge    0x41a4f5
  41a49d:	mov    esi,0xc3101672
  41a4a2:	xchg   edx,eax
  41a4a3:	mov    eax,0x177d58cc
  41a4a8:	mov    eax,ds:0x9cb3dfd1
  41a4ad:	iret   
  41a4ae:	loope  0x41a4f2
  41a4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4b1:	push   0x56
  41a4b3:	xchg   BYTE PTR [esi-0xca5159d],bh
  41a4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ba:	cld    
  41a4bb:	cs lahf 
  41a4bd:	outs   dx,BYTE PTR ds:[esi]
  41a4be:	outs   dx,BYTE PTR ds:[esi]
  41a4bf:	or     eax,0x2d98d5ef
  41a4c4:	jge    0x41a47b
  41a4c6:	xchg   esi,eax
  41a4c7:	pop    ebp
  41a4c8:	loope  0x41a4ec
  41a4ca:	mov    ebx,ds
  41a4cc:	dec    ecx
  41a4cd:	inc    esi
  41a4ce:	into   
  41a4cf:	or     dh,bl
  41a4d1:	sub    DWORD PTR [edi+0x37bf9604],edx
  41a4d7:	lods   eax,DWORD PTR ds:[esi]
  41a4d8:	and    eax,0xfbadc21b
  41a4dd:	cmp    DWORD PTR [eax-0x3c25101c],0xfffffff6
  41a4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e5:	arpl   ax,bp
  41a4e7:	push   ebp
  41a4e8:	adc    DWORD PTR [ecx],esi
  41a4ea:	push   0x5f
  41a4ec:	and    al,0xaf
  41a4ee:	jno    0x41a4e0
  41a4f0:	inc    esp
  41a4f1:	pop    esi
  41a4f2:	adc    bh,cl
  41a4f4:	mov    esp,0x2ab65803
  41a4f9:	cmc    
  41a4fa:	stos   DWORD PTR es:[edi],eax
  41a4fb:	push   esp
  41a4fc:	ins    BYTE PTR es:[edi],dx
  41a4fd:	jge    0x41a4cd
  41a4ff:	mov    cl,BYTE PTR [ebx]
  41a501:	and    al,0xa
  41a503:	retf   
  41a504:	mov    dh,ah
  41a506:	call   0x97b3:0xc3d7b882
  41a50d:	or     al,0x5
  41a50f:	fs pop edx
  41a511:	call   eax
  41a513:	(bad)  
  41a514:	dec    esi
  41a515:	dec    esi
  41a516:	pop    ebx
  41a517:	outs   dx,DWORD PTR ds:[esi]
  41a518:	retf   
  41a519:	sbb    ebx,0x4f
  41a51c:	(bad)  [edi+0x7b]
  41a51f:	sbb    eax,0xb7c9ef38
  41a524:	or     BYTE PTR [eax+0x38381d6f],dh
  41a52a:	xchg   edx,eax
  41a52b:	out    0xf7,al
  41a52d:	sub    ecx,DWORD PTR ds:[di-0x67]
  41a532:	cmp    eax,0xe77c4782
  41a537:	das    
  41a538:	std    
  41a539:	jae    0x41a535
  41a53b:	mov    edx,0x2ed98624
  41a540:	dec    ebx
  41a541:	push   esi
  41a542:	shr    BYTE PTR [eax+0x1],0xee
  41a546:	mov    bh,0x33
  41a548:	add    BYTE PTR [eax+0x20096792],dl
  41a54e:	cmp    ebx,DWORD PTR [edx+0x2260737e]
  41a554:	ss push esp
  41a556:	jmp    0x815:0x4e3d7b50
  41a55d:	push   edi
  41a55e:	mov    ch,0xf1
  41a560:	ret    0x9847
  41a563:	add    eax,DWORD PTR [edi+eiz*4+0x69c7b674]
  41a56a:	and    DWORD PTR [eax],edi
  41a56c:	data16 mov dh,0xd4
  41a56f:	or     dh,BYTE PTR [edx]
  41a571:	into   
  41a572:	icebp  
  41a573:	add    eax,0x2ba7095a
  41a578:	arpl   dx,dx
  41a57a:	leave  
  41a57b:	lahf   
  41a57c:	popa   
  41a57d:	retf   0x80d
  41a580:	and    edx,edi
  41a582:	sti    
  41a583:	cs dec esi
  41a585:	es dec ebx
  41a587:	sub    BYTE PTR [ecx-0x7fa01399],al
  41a58d:	inc    ebx
  41a58e:	lock mov WORD PTR [edi],ds
  41a591:	adc    ch,BYTE PTR [ecx+ebx*1]
  41a594:	mov    eax,0xb08e3736
  41a599:	jg     0x41a538
  41a59b:	(bad)  
  41a59c:	and    dh,BYTE PTR [ebp-0x43149f51]
  41a5a2:	jmp    0x80580b58
  41a5a7:	out    dx,al
  41a5a8:	sub    eax,0xb662229a
  41a5ad:	inc    esi
  41a5ae:	lock test DWORD PTR [ebx],edx
  41a5b1:	pop    eax
  41a5b2:	and    al,BYTE PTR [edi-0x68dade95]
  41a5b8:	xor    al,0x85
  41a5ba:	push   0x70
  41a5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5bd:	dec    ecx
  41a5be:	mov    ds:0xf2edcd83,eax
  41a5c3:	std    
  41a5c4:	xor    ch,BYTE PTR [edx+0x8]
  41a5c7:	int    0x32
  41a5c9:	addr16 icebp 
  41a5cb:	out    dx,eax
  41a5cc:	jge    0x41a558
  41a5ce:	xchg   ecx,eax
  41a5cf:	gs shl ch,cl
  41a5d2:	cmp    ebp,edx
  41a5d4:	pop    edx
  41a5d5:	cs add al,0xb0
  41a5d8:	out    0x32,eax
  41a5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5db:	pop    ds
  41a5dc:	mov    eax,ds:0x9b36aa86
  41a5e1:	cmp    DWORD PTR [ebp-0x7db502c3],ebx
  41a5e7:	xor    dh,BYTE PTR [ecx+0x56e34ecc]
  41a5ed:	and    edx,DWORD PTR [esp+eiz*8-0xe]
  41a5f1:	xchg   BYTE PTR [edx+esi*4-0x4bdc9333],dl
  41a5f8:	pop    eax
  41a5f9:	sub    esp,esi
  41a5fb:	lods   al,BYTE PTR ds:[esi]
  41a5fc:	lea    edi,[eax+eax*1+0x6220cf2f]
  41a603:	icebp  
  41a604:	sub    BYTE PTR [ebp-0x2f],ch
  41a607:	cmp    eax,0x8632a7ea
  41a60c:	pop    ebx
  41a60d:	jbe    0x41a59b
  41a60f:	(bad)  
  41a610:	mov    ds:0x4ef214a8,eax
  41a615:	outs   dx,DWORD PTR ds:[esi]
  41a616:	add    DWORD PTR [edx],eax
  41a618:	mov    ah,0xb8
  41a61a:	xchg   edi,eax
  41a61b:	inc    edi
  41a61c:	sub    DWORD PTR [edi+edx*8+0x29],edx
  41a620:	add    al,0x2d
  41a622:	cmp    ah,ch
  41a624:	iret   
  41a625:	mov    ch,0xda
  41a627:	leave  
  41a628:	jbe    0x41a674
  41a62a:	jnp    0x41a670
  41a62c:	push   esi
  41a62d:	xrstors [edx+0x25]
  41a631:	neg    DWORD PTR [ebx+ebp*8-0x67]
  41a635:	imul   eax,DWORD PTR [bp+di+0x2e],0xffffffc6
  41a63a:	add    al,0xb8
  41a63c:	pushf  
  41a63d:	xchg   ecx,eax
  41a63e:	add    al,0xeb
  41a640:	xchg   ebp,eax
  41a641:	add    al,0x73
  41a643:	test   al,0x19
  41a645:	lods   al,BYTE PTR ds:[esi]
  41a646:	pop    ebx
  41a647:	or     eax,0x3b7d88e8
  41a64c:	sub    dh,dh
  41a64e:	push   ds
  41a64f:	inc    eax
  41a650:	out    0xa0,eax
  41a652:	je     0x41a64c
  41a654:	fmul   DWORD PTR [ebx]
  41a656:	mov    ch,0xb6
  41a658:	leave  
  41a659:	push   ss
  41a65a:	mov    ebx,0x36a7e116
  41a65f:	add    ebx,DWORD PTR [edi+eiz*1-0x42cfba11]
  41a666:	rol    DWORD PTR [eax+edi*2-0x14f3c6ed],0x40
  41a66e:	pop    ecx
  41a66f:	loope  0x41a5f8
  41a671:	sbb    DWORD PTR [edx+0x389178ac],edi
  41a677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a678:	pusha  
  41a679:	das    
  41a67a:	cmc    
  41a67b:	fcos   
  41a67d:	dec    edx
  41a67e:	sbb    al,0xd
  41a680:	xchg   ebp,eax
  41a681:	jnp    0x41a635
  41a683:	loopne 0x41a689
  41a685:	inc    edx
  41a686:	mov    cs,WORD PTR [ecx+0x50]
  41a689:	fstp   DWORD PTR [ecx+0x4f7fca48]
  41a68f:	and    bh,BYTE PTR [esi+0x655d4b3f]
  41a695:	jbe    0x41a64a
  41a697:	and    bl,BYTE PTR es:[bp-0x465d]
  41a69d:	jg     0x41a715
  41a69f:	sti    
  41a6a0:	and    eax,0xb82a4e70
  41a6a5:	outs   dx,DWORD PTR ds:[esi]
  41a6a6:	add    eax,0xe50e9d66
  41a6ab:	sbb    bh,ah
  41a6ad:	mov    ah,0x14
  41a6af:	out    dx,eax
  41a6b0:	lods   al,BYTE PTR ds:[esi]
  41a6b1:	pushf  
  41a6b2:	push   esi
  41a6b3:	out    0xd0,al
  41a6b5:	pop    ebp
  41a6b6:	stos   DWORD PTR es:[edi],eax
  41a6b7:	scas   al,BYTE PTR es:[edi]
  41a6b8:	icebp  
  41a6b9:	fwait
  41a6ba:	(bad)  
  41a6bb:	xchg   ch,bh
  41a6bd:	or     eax,0x56a500d1
  41a6c2:	cwde   
  41a6c3:	xor    BYTE PTR [eax-0x64668826],ah
  41a6c9:	ss push cs
  41a6cb:	out    0x12,eax
  41a6cd:	pop    esi
  41a6ce:	pop    esi
  41a6cf:	lds    ebp,FWORD PTR [edi+ebx*2+0x1b8d05f8]
  41a6d6:	and    eax,0x752547e2
  41a6db:	jmp    FWORD PTR [edx-0x3b]
  41a6de:	enter  0x4310,0x55
  41a6e2:	ds xchg ebx,eax
  41a6e4:	adc    ch,BYTE PTR [edx+0x68d51e14]
  41a6ea:	or     al,0x20
  41a6ec:	push   edi
  41a6ed:	push   ds
  41a6ee:	adc    ecx,DWORD PTR [bp+si+0x35]
  41a6f2:	mov    bl,0xd0
  41a6f4:	(bad)  
  41a6f5:	out    dx,al
  41a6f6:	out    dx,eax
  41a6f7:	jbe    0x41a6a3
  41a6f9:	lea    esp,[ebp+0x5e]
  41a6fc:	dec    esi
  41a6fd:	scas   al,BYTE PTR es:[edi]
  41a6fe:	jmp    0xe1e:0x4aead6de
  41a705:	call   0xf4914b76
  41a70a:	pop    edx
  41a70b:	sub    esi,DWORD PTR [ebp-0x580c64bb]
  41a711:	sub    eax,0x30e86914
  41a716:	jnp    0x41a769
  41a718:	add    DWORD PTR [edx],ebx
  41a71a:	ret    0xa7e
  41a71d:	sub    ch,0xa2
  41a720:	es call 0x98ed:0x120324d9
  41a728:	xchg   esi,eax
  41a729:	fisub  DWORD PTR [ebx]
  41a72b:	sbb    DWORD PTR [ebp+0x23ba4c37],ebp
  41a731:	or     BYTE PTR [eax],ah
  41a733:	jmp    0x3103be41
  41a738:	retf   
  41a739:	xchg   ecx,eax
  41a73a:	(bad)  
  41a73b:	scas   al,BYTE PTR es:[edi]
  41a73c:	pop    eax
  41a73d:	dec    esp
  41a73e:	cdq    
  41a73f:	sub    eax,edx
  41a741:	sbb    al,0x84
  41a743:	(bad)  
  41a744:	and    DWORD PTR [eax+0x5c2ee0a9],esi
  41a74a:	cmp    al,0xcc
  41a74c:	out    0xb5,eax
  41a74e:	or     cl,BYTE PTR [esi]
  41a750:	ficom  DWORD PTR [ecx-0x5636a171]
  41a756:	add    DWORD PTR [ecx+0x4b],edi
  41a759:	cmp    edi,esi
  41a75b:	imul   eax,DWORD PTR [edx-0x30],0x5262c11
  41a762:	jnp    0x41a748
  41a764:	add    eax,0x23c47621
  41a769:	ficomp WORD PTR [edx+0x3f]
  41a76c:	or     DWORD PTR [eax-0x3da026d7],edi
  41a772:	stos   DWORD PTR es:[edi],eax
  41a773:	call   0xf9e46bb3
  41a778:	in     eax,dx
  41a779:	addr16 and eax,0xa1082f34
  41a77f:	call   0x1344761e
  41a784:	fcmove st,st(1)
  41a786:	adc    ch,cl
  41a788:	fs xchg edi,eax
  41a78a:	test   ch,0x43
  41a78d:	jmp    0x4017:0x80bd31d9
  41a794:	stos   DWORD PTR es:[edi],eax
  41a795:	out    dx,eax
  41a796:	jl     0x41a735
  41a798:	pop    esi
  41a799:	mul    DWORD PTR [edi-0x18418f6c]
  41a79f:	ss (bad) 
  41a7a1:	pop    edi
  41a7a2:	int3   
  41a7a3:	data16 mov cl,0x86
  41a7a6:	xchg   edx,eax
  41a7a7:	and    al,0xd8
  41a7a9:	push   ds
  41a7aa:	and    ecx,esi
  41a7ac:	fsubrp st(1),st
  41a7ae:	push   ebp
  41a7af:	xor    ch,BYTE PTR [edi+ebx*4]
  41a7b2:	adc    ecx,0xffffffdc
  41a7b5:	dec    esp
  41a7b6:	(bad)  
  41a7b7:	out    dx,al
  41a7b8:	arpl   WORD PTR [edx+0x6a],si
  41a7bb:	mov    bl,0xb9
  41a7bd:	or     al,0xe6
  41a7bf:	dec    cx
  41a7c1:	sub    edi,edx
  41a7c3:	sbb    ch,ch
  41a7c5:	repnz and bl,dl
  41a7c8:	mov    bl,0x37
  41a7ca:	jo     0x41a7d6
  41a7cc:	fisttp QWORD PTR [eax-0x1e]
  41a7cf:	loopne 0x41a7d0
  41a7d1:	mov    ebx,fs
  41a7d3:	mov    WORD PTR [esi+eiz*1-0x45fc2f4a],?
  41a7da:	xchg   ebp,eax
  41a7db:	jns    0x41a82e
  41a7dd:	shl    BYTE PTR [esi],0x30
  41a7e0:	mov    dh,0x4e
  41a7e2:	(bad)  
  41a7e3:	popf   
  41a7e4:	dec    esi
  41a7e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7e6:	loopne 0x41a78b
  41a7e8:	add    eax,0x66dff7b7
  41a7ed:	adc    ah,ah
  41a7ef:	pop    ebp
  41a7f0:	idiv   ebx
  41a7f2:	sbb    al,0xb1
  41a7f4:	data16 fdiv QWORD PTR [ecx+0x1de7d796]
  41a7fb:	xlat   BYTE PTR ds:[ebx]
  41a7fc:	je     0x41a7e7
  41a7fe:	sub    bl,ah
  41a800:	push   ebp
  41a801:	mov    ebx,0xb3a97eda
  41a806:	or     DWORD PTR [edi+0x4eaf4866],eax
  41a80c:	leave  
  41a80d:	(bad)  
  41a80f:	retf   
  41a810:	mov    bl,dh
  41a812:	ins    BYTE PTR es:[edi],dx
  41a813:	outs   dx,DWORD PTR ds:[esi]
  41a814:	cmp    BYTE PTR [edi+ecx*8-0x668bad04],dl
  41a81b:	nop
  41a81c:	jmp    0x50b4f831
  41a821:	fst    DWORD PTR [ebp+0x2a]
  41a824:	jns    0x41a843
  41a826:	pop    ss
  41a827:	adc    al,0xe9
  41a829:	adc    DWORD PTR [esi+0x17ae2f47],ebx
  41a82f:	mov    es,edx
  41a831:	add    BYTE PTR [eax],0xc8
  41a834:	ja     0x41a7c0
  41a836:	inc    ebp
  41a837:	daa    
  41a838:	retf   0xf53d
  41a83b:	ins    DWORD PTR es:[edi],dx
  41a83c:	jge    0x41a83b
  41a83e:	jae    0x41a851
  41a840:	je     0x41a861
  41a842:	xor    BYTE PTR [edi-0x6c],bl
  41a845:	jno    0x41a871
  41a847:	(bad)  
  41a849:	stos   BYTE PTR es:[edi],al
  41a84a:	push   edi
  41a84b:	inc    ebx
  41a84c:	mov    edi,0xc3f602f5
  41a851:	aas    
  41a852:	push   0xce84632d
  41a857:	xchg   edi,eax
  41a858:	push   eax
  41a859:	jmp    0x41a80c
  41a85b:	mov    cl,0x39
  41a85d:	inc    ebp
  41a85e:	les    esi,FWORD PTR [esi]
  41a860:	sub    BYTE PTR [esi-0x13a743c],al
  41a866:	xchg   esp,eax
  41a867:	xchg   DWORD PTR [ecx+0x48],esp
  41a86a:	pop    ebp
  41a86b:	retf   0xdd91
  41a86e:	mov    WORD PTR [ebx+edx*4+0x41],?
  41a872:	or     BYTE PTR [ecx+0x3a],ah
  41a875:	cmp    esp,DWORD PTR [ebp+0x5bbd0408]
  41a87b:	xchg   edi,eax
  41a87c:	xor    dl,BYTE PTR [ebp+eiz*1+0x35]
  41a880:	pusha  
  41a881:	pusha  
  41a882:	jo     0x41a8a9
  41a884:	mov    ds:0xa56d55cf,eax
  41a889:	and    eax,0xe3da7bff
  41a88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88f:	stos   BYTE PTR es:[edi],al
  41a890:	lds    ebp,FWORD PTR [eax]
  41a892:	mov    eax,0x963e2b6d
  41a897:	pusha  
  41a898:	xchg   ecx,eax
  41a899:	mov    al,ds:0x6295d6e9
  41a89e:	mov    esp,0x527aa23c
  41a8a3:	rol    DWORD PTR [esi],cl
  41a8a5:	icebp  
  41a8a6:	xor    al,0xd8
  41a8a8:	sbb    eax,0x28ed3197
  41a8ad:	imul   esp,ecx,0x13
  41a8b0:	imul   edx,DWORD PTR [edx+0x78],0x656cd747
  41a8b7:	adc    DWORD PTR [ebp-0x66],0xa7f13790
  41a8be:	adc    BYTE PTR [eax+0x4d],bh
  41a8c1:	(bad)  
  41a8c2:	hlt    
  41a8c3:	mov    eax,0xbebf02e5
  41a8c8:	(bad)  
  41a8c9:	adc    al,BYTE PTR [eax+0x38]
  41a8cc:	dec    ebp
  41a8cd:	imul   eax,esp,0xfb159250
  41a8d3:	dec    ecx
  41a8d4:	push   esi
  41a8d5:	add    BYTE PTR [edx+esi*1],al
  41a8d8:	dec    esp
  41a8d9:	jns    0x41a90d
  41a8db:	mov    ebx,0xd87a45b
  41a8e0:	lds    ebx,FWORD PTR [edx+0x45]
  41a8e3:	sti    
  41a8e4:	mov    BYTE PTR [edi],dl
  41a8e6:	jl     0x41a91c
  41a8e8:	test   BYTE PTR [eiz*1+0x153610e4],bl
  41a8ef:	xchg   ebp,eax
  41a8f0:	sub    DWORD PTR [ebp-0x11],esi
  41a8f3:	repnz fcom QWORD PTR [esi+0x780ad87f]
  41a8fa:	sub    esp,DWORD PTR [eax+edi*1-0x1253071f]
  41a901:	mov    ch,0x94
  41a903:	in     al,0xd6
  41a905:	rcl    BYTE PTR [eax+0x74],1
  41a908:	pop    es
  41a909:	mov    ah,0xc
  41a90b:	(bad)  
  41a90c:	mov    ah,0xa8
  41a90e:	imul   esi,DWORD PTR [ebx],0x39508009
  41a914:	or     dh,dl
  41a916:	mov    ds:0x701b016f,al
  41a91b:	dec    edx
  41a91c:	(bad)  [edx-0x6e28bea3]
  41a922:	rol    DWORD PTR es:[edx],1
  41a925:	sub    ch,bh
  41a927:	ins    DWORD PTR es:[edi],dx
  41a928:	pushf  
  41a929:	test   al,0xde
  41a92b:	add    eax,0x97299637
  41a930:	fldl2e 
  41a932:	int3   
  41a933:	xchg   esp,eax
  41a934:	xor    BYTE PTR [edx+edx*4+0x6c3bd6b7],al
  41a93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a93c:	xor    al,BYTE PTR [edi]
  41a93e:	pop    edi
  41a93f:	call   0x85729a6b
  41a944:	sub    ah,0xef
  41a947:	aas    
  41a948:	imul   eax,DWORD PTR [edi-0x3b],0x9ca6f3f0
  41a94f:	and    esp,DWORD PTR [edx+0x5b0e97c6]
  41a955:	outs   dx,DWORD PTR ds:[esi]
  41a956:	pop    es
  41a957:	imul   esi,DWORD PTR [ebx-0x3571819e],0x20
  41a95e:	cmp    BYTE PTR [ebp+eax*1-0x8825390],ah
  41a965:	lahf   
  41a966:	shl    BYTE PTR [eax+0x38147dde],0xcd
  41a96d:	jno    0x41a94f
  41a96f:	add    eax,0x9105064c
  41a974:	adc    DWORD PTR ds:0xe66467eb,0x54
  41a97b:	aaa    
  41a97c:	mov    esi,0x41b771bd
  41a981:	out    0x64,eax
  41a983:	out    0x5b,al
  41a985:	lock cs pop esp
  41a988:	lock ds test eax,0x7547cc54
  41a98f:	imul   eax,DWORD PTR ds:0x8498e57e,0x8ef4283
  41a999:	or     ebx,DWORD PTR [eax+0x6d]
  41a99c:	push   esp
  41a99d:	xrelease mov BYTE PTR [ecx-0x6b7b3640],ah
  41a9a4:	rol    DWORD PTR [ecx-0x1250d4c9],1
  41a9aa:	adc    BYTE PTR [esi-0x1be3e01c],al
  41a9b0:	pop    es
  41a9b1:	sar    BYTE PTR [edx+ebx*8],1
  41a9b4:	ss push edi
  41a9b6:	jmp    0xfa83c929
  41a9bb:	adc    ebx,ecx
  41a9bd:	jne    0x41a9b8
  41a9bf:	outs   dx,BYTE PTR ds:[esi]
  41a9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c1:	in     al,dx
  41a9c2:	or     ebx,DWORD PTR ds:0xdfb8562d
  41a9c8:	jb     0x41a96a
  41a9ca:	cmp    ecx,0x30
  41a9cd:	push   ebx
  41a9ce:	inc    ebp
  41a9cf:	jnp    0x41a9a5
  41a9d1:	sub    eax,0x68cf4369
  41a9d6:	daa    
  41a9d7:	out    dx,eax
  41a9d8:	test   al,0x17
  41a9db:	outs   dx,BYTE PTR ds:[esi]
  41a9dc:	mov    ah,0x72
  41a9de:	sbb    eax,0x160689f7
  41a9e3:	lea    eax,[ebp+edi*4+0x32]
  41a9e7:	add    ebp,ebp
  41a9e9:	xchg   edx,eax
  41a9ea:	mov    cl,0x33
  41a9ec:	ret    0x501
  41a9ef:	fdivr  st(2),st
  41a9f1:	mov    edi,0x7235789a
  41a9f6:	push   es
  41a9f7:	fcom   QWORD PTR [eax+0xc]
  41a9fa:	es ret 
  41a9fc:	sbb    eax,0xd0aaa081
  41aa01:	lea    ecx,[ebx+0x55d035dc]
  41aa07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa08:	mov    WORD PTR [ebx],gs
  41aa0a:	aaa    
  41aa0b:	ss lahf 
  41aa0d:	sar    BYTE PTR [ecx+ebp*8],1
  41aa10:	bound  esp,QWORD PTR [ecx]
  41aa12:	outs   dx,BYTE PTR ds:[esi]
  41aa13:	outs   dx,BYTE PTR ds:[esi]
  41aa14:	adc    eax,0xcd90e381
  41aa19:	sysret 
  41aa1b:	mov    ebx,gs
  41aa1d:	repz iret 
  41aa1f:	add    BYTE PTR [eax+0x8],dh
  41aa22:	jno    0x41a9ff
  41aa24:	jecxz  0x41aa7b
  41aa26:	cmc    
  41aa27:	test   eax,eax
  41aa29:	add    DWORD PTR [edi-0x74],ebp
  41aa2c:	dec    ebx
  41aa2d:	add    eax,0xa3e06e59
  41aa32:	cmp    BYTE PTR [ebx],ch
  41aa34:	jo     0x41a9f0
  41aa36:	xor    al,BYTE PTR [edx]
  41aa38:	(bad)  
  41aa39:	test   cl,0xc1
  41aa3c:	inc    ecx
  41aa3d:	sub    DWORD PTR [ecx-0x24],eax
  41aa40:	adc    BYTE PTR [esi-0x6a],ch
  41aa43:	iret   
  41aa44:	inc    edx
  41aa45:	sbb    bl,dh
  41aa47:	push   esi
  41aa48:	out    dx,eax
  41aa49:	xor    edx,esi
  41aa4b:	xor    DWORD PTR es:[eax],ebp
  41aa4e:	lea    esi,[esi+0xc]
  41aa51:	imul   eax,DWORD PTR [ebp+0x7c],0xffffffe2
  41aa55:	aaa    
  41aa56:	mov    dl,bl
  41aa58:	dec    esi
  41aa59:	div    edi
  41aa5b:	push   ebp
  41aa5c:	xchg   edx,eax
  41aa5d:	sub    DWORD PTR [edi+eiz*2],edi
  41aa60:	jb     0x41aaaf
  41aa62:	and    ebp,DWORD PTR [edx-0x5e]
  41aa65:	push   esi
  41aa66:	and    ah,BYTE PTR [esp+eiz*8+0x574e3613]
  41aa6d:	cld    
  41aa6e:	push   ebx
  41aa6f:	mov    ebx,0xbf2de134
  41aa74:	pop    es
  41aa75:	dec    esp
  41aa76:	or     WORD PTR [esi-0x7d6cf3bb],bx
  41aa7d:	cmp    bl,BYTE PTR [ecx+0x2fc7b2e5]
  41aa83:	fsub   QWORD PTR [ebp-0x3c6e1697]
  41aa89:	cld    
  41aa8a:	push   edi
  41aa8b:	std    
  41aa8c:	push   ecx
  41aa8d:	lahf   
  41aa8e:	out    dx,al
  41aa8f:	out    0x42,eax
  41aa91:	adc    DWORD PTR [ecx],ecx
  41aa93:	xchg   esi,eax
  41aa94:	pop    es
  41aa95:	mov    esp,DWORD PTR [edx]
  41aa97:	inc    esi
  41aa98:	push   ds
  41aa99:	ret    
  41aa9a:	dec    edi
  41aa9b:	ja     0x41aa59
  41aa9d:	cli    
  41aa9e:	or     DWORD PTR [ebp+eiz*8+0x5d35dd4c],0x32f35945
  41aaa9:	xchg   ebp,eax
  41aaaa:	imul   edx,DWORD PTR [ebx+0x18bc8f16],0x7da744e8
  41aab4:	add    dl,BYTE PTR [ebp+edx*2+0x68]
  41aab8:	cld    
  41aab9:	jae    0x41aa97
  41aabb:	sbb    al,0x6e
  41aabd:	xchg   ebp,eax
  41aabe:	mov    edi,0x7029899b
  41aac3:	mov    dh,BYTE PTR [esi+0x22]
  41aac6:	adc    al,0x64
  41aac8:	shl    ecx,cl
  41aaca:	jbe    0x41aad4
  41aacc:	inc    ebp
  41aacd:	dec    ecx
  41aace:	add    al,0x9d
  41aad0:	je     0x41ab3e
  41aad2:	jecxz  0x41aa54
  41aad4:	loop   0x41aa88
  41aad6:	xor    BYTE PTR [ebx+0x18],0xcf
  41aada:	test   DWORD PTR [edi],ebp
  41aadc:	mov    ds:0x3fb0c136,al
  41aae1:	dec    esp
  41aae2:	(bad)  
  41aae3:	mov    al,ds:0x703a2def
  41aae8:	fldcw  WORD PTR [edi]
  41aaea:	mov    ebp,0x356364da
  41aaef:	xchg   DWORD PTR [edx+0x67da524e],eax
  41aaf5:	add    BYTE PTR [ebx],dl
  41aaf7:	or     bh,bl
  41aaf9:	push   esp
  41aafa:	sub    eax,0xb25df418
  41aaff:	add    BYTE PTR [ecx+0x3f188358],0xe3
  41ab06:	sbb    al,0x85
  41ab08:	mov    ds:0x6d92c092,eax
  41ab0d:	jecxz  0x41ab4a
  41ab0f:	xchg   DWORD PTR ds:0x13801264,ebx
  41ab15:	ins    DWORD PTR es:[edi],dx
  41ab16:	sub    DWORD PTR [edx+0x2f85a290],edx
  41ab1c:	out    dx,al
  41ab1d:	sbb    ebp,DWORD PTR [ebp+0x7c]
  41ab20:	ss jp  0x41ab75
  41ab23:	enter  0xec7,0x29
  41ab27:	and    eax,esp
  41ab29:	add    BYTE PTR [ebx],bh
  41ab2b:	dec    ecx
  41ab2c:	mov    esp,0x25581927
  41ab31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab32:	ins    BYTE PTR es:[edi],dx
  41ab33:	test   eax,0x80b959d7
  41ab38:	xor    dl,bh
  41ab3a:	ss test ax,0x132b
  41ab3f:	mov    cl,BYTE PTR [esi-0x7a]
  41ab42:	jb     0x41ab1a
  41ab44:	jo     0x41ab07
  41ab46:	shl    BYTE PTR [eax],0x81
  41ab49:	jns    0x41abab
  41ab4b:	les    edi,FWORD PTR [ecx]
  41ab4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4e:	lods   al,BYTE PTR ds:[esi]
  41ab4f:	xchg   ebp,eax
  41ab50:	outs   dx,BYTE PTR ds:[esi]
  41ab51:	out    dx,eax
  41ab52:	retf   
  41ab53:	and    cl,0x8d
  41ab56:	mov    al,0x18
  41ab58:	ss pop edx
  41ab5a:	out    dx,eax
  41ab5b:	repnz dec ecx
  41ab5d:	xor    ebp,DWORD PTR [edi+0x3c]
  41ab60:	xchg   edx,eax
  41ab61:	fs es mov edi,0x4d371c7d
  41ab68:	in     eax,dx
  41ab69:	push   ebp
  41ab6a:	fcom   DWORD PTR [ecx-0x517261b7]
  41ab70:	stc    
  41ab71:	lahf   
  41ab72:	popf   
  41ab73:	push   eax
  41ab74:	mov    bh,0xf3
  41ab76:	outs   dx,BYTE PTR ds:[esi]
  41ab77:	or     eax,0x4c3d3268
  41ab7c:	jne    0x41ab7f
  41ab7e:	les    edi,FWORD PTR [esi-0x55]
  41ab81:	sahf   
  41ab82:	scas   eax,DWORD PTR es:[edi]
  41ab83:	retf   0x8bde
  41ab86:	mov    edi,0x73ff4b12
  41ab8b:	hlt    
  41ab8c:	inc    edx
  41ab8d:	daa    
  41ab8e:	push   es
  41ab8f:	out    dx,eax
  41ab90:	mov    dl,0x76
  41ab92:	test   cl,ch
  41ab94:	sub    edx,DWORD PTR [esi+0xc]
  41ab97:	adc    esi,edi
  41ab99:	inc    edx
  41ab9a:	jmp    0x6b634cb6
  41ab9f:	push   ss
  41aba0:	lahf   
  41aba1:	push   ss
  41aba2:	adc    eax,0xed93bb4
  41aba7:	test   al,0x7
  41aba9:	(bad)  
  41abaa:	ret    0xe673
  41abad:	xlat   BYTE PTR ds:[ebx]
  41abae:	gs xchg esi,eax
  41abb0:	bound  eax,QWORD PTR [edx-0xcb60afd]
  41abb6:	mov    edx,ss
  41abb8:	push   edx
  41abb9:	jb     0x41abf1
  41abbb:	add    BYTE PTR [eax-0x19],bl
  41abbe:	sbb    eax,0x2ede54d5
  41abc3:	mov    eax,ds:0x4a99a901
  41abc8:	retf   
  41abc9:	push   es
  41abca:	sar    ebx,cl
  41abcc:	stc    
  41abcd:	dec    ebp
  41abce:	xor    ebx,ebp
  41abd0:	inc    eax
  41abd1:	push   ds
  41abd2:	cwde   
  41abd3:	cld    
  41abd4:	xchg   edx,eax
  41abd5:	cdq    
  41abd6:	inc    edi
  41abd7:	and    eax,0x6fd6832b
  41abdc:	pop    edi
  41abdd:	test   ch,dh
  41abdf:	jns    0x41abdf
  41abe1:	cli    
  41abe2:	cwde   
  41abe3:	jnp    0x41ac4e
  41abe5:	jnp    0x41ac5d
  41abe7:	adc    eax,0x7128b506
  41abec:	sub    cl,BYTE PTR [esi-0x56]
  41abef:	pop    esp
  41abf0:	push   0xffffffd9
  41abf2:	add    edi,esi
  41abf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf5:	clc    
  41abf6:	xor    BYTE PTR [edi+edx*4-0x2d6d4258],dh
  41abfd:	xchg   DWORD PTR [edi+0x2f],ebp
  41ac00:	jae    0x41abff
  41ac02:	xchg   ecx,eax
  41ac03:	lods   al,BYTE PTR ss:[esi]
  41ac05:	inc    eax
  41ac06:	xor    ebp,DWORD PTR [edi+0x690e5caa]
  41ac0c:	inc    eax
  41ac0d:	cmp    ebp,DWORD PTR [esi-0x74]
  41ac10:	dec    BYTE PTR [eax+0x8]
  41ac13:	ins    DWORD PTR es:[edi],dx
  41ac14:	ins    BYTE PTR es:[edi],dx
  41ac15:	dec    eax
  41ac16:	mov    esi,0x1097879d
  41ac1b:	imul   ecx,DWORD PTR [ecx-0x22345b66],0x8b75f3d1
  41ac25:	xor    edi,DWORD PTR [eax]
  41ac27:	leave  
  41ac28:	sti    
  41ac29:	mov    bl,0x43
  41ac2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac2c:	add    al,0xa6
  41ac2e:	fbld   TBYTE PTR [edi]
  41ac30:	daa    
  41ac31:	inc    eax
  41ac32:	mov    BYTE PTR [ebx-0x6c399528],0x61
  41ac39:	mov    al,ds:0xbc36d751
  41ac3e:	jne    0x41abd9
  41ac40:	out    dx,eax
  41ac41:	mov    DWORD PTR [eax+0x70],esp
  41ac44:	dec    esp
  41ac45:	dec    esi
  41ac46:	dec    ecx
  41ac47:	rcr    BYTE PTR [ebp-0x6104cbd4],cl
  41ac4d:	aad    0x4f
  41ac4f:	popa   
  41ac50:	cmp    BYTE PTR [esi+0x6ebf4fd1],bl
  41ac56:	iret   
  41ac57:	and    al,0xd9
  41ac59:	(bad)  
  41ac5a:	jle    0x41ac5e
  41ac5c:	retf   0xd0ca
  41ac5f:	sub    bh,bl
  41ac61:	in     al,dx
  41ac62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac63:	mov    ecx,0xce980301
  41ac68:	lods   al,BYTE PTR ds:[esi]
  41ac69:	outs   dx,BYTE PTR ds:[esi]
  41ac6a:	fwait
  41ac6b:	add    eax,0x825a50e3
  41ac70:	add    esi,DWORD PTR [ecx]
  41ac72:	imul   ebp,DWORD PTR [edx-0x69],0x8d152a6
  41ac79:	push   edi
  41ac7a:	dec    ecx
  41ac7b:	jecxz  0x41acb5
  41ac7d:	push   edi
  41ac7e:	mov    esp,0xed372b86
  41ac83:	xor    eax,0xfca7fbcf
  41ac88:	mov    BYTE PTR [esi+0x50],dh
  41ac8b:	sub    cl,BYTE PTR [edi]
  41ac8d:	icebp  
  41ac8e:	adc    BYTE PTR [edi-0x26],0x9b
  41ac92:	sar    bh,cl
  41ac94:	add    DWORD PTR [edx+0x16],eax
  41ac97:	cwde   
  41ac98:	push   ds
  41ac99:	xchg   dl,dh
  41ac9b:	mov    BYTE PTR [edi],0x85
  41ac9e:	loopne 0x41ace8
  41aca0:	pop    ebx
  41aca1:	pusha  
  41aca2:	mov    ecx,0x314c314e
  41aca7:	lea    eax,[esi-0x19]
  41acaa:	fwait
  41acab:	xchg   esi,eax
  41acac:	pop    esp
  41acad:	mov    edx,0x113a49c3
  41acb2:	adc    dh,BYTE PTR [eax+eiz*2]
  41acb5:	push   ebx
  41acb6:	js     0x41acc8
  41acb8:	xchg   esi,eax
  41acb9:	xchg   ebx,eax
  41acba:	xchg   edi,eax
  41acbb:	xchg   esp,eax
  41acbc:	lea    esp,[edi+0x660a304e]
  41acc2:	imul   esi,DWORD PTR [edx],0x545d7ca5
  41acc8:	push   es
  41acc9:	(bad)  
  41acca:	imul   esi,DWORD PTR [eax+0x45],0x63
  41acce:	imul   ecx,DWORD PTR [esi+0x14],0x2746df18
  41acd5:	jg     0x41ac6e
  41acd7:	(bad)  
  41acd8:	mov    bh,0x10
  41acda:	pop    esi
  41acdb:	push   es
  41acdc:	adc    eax,0xff05d2a
  41ace1:	pop    edx
  41ace2:	test   bh,dl
  41ace4:	(bad)  
  41ace6:	(bad)  
  41ace7:	int    0xbd
  41ace9:	cmc    
  41acea:	cdq    
  41aceb:	xlat   BYTE PTR ds:[ebx]
  41acec:	icebp  
  41aced:	aaa    
  41acee:	adc    DWORD PTR [eax],edi
  41acf0:	cmp    ecx,DWORD PTR [ebx+0x41]
  41acf3:	push   ecx
  41acf4:	and    esp,esi
  41acf6:	fstp   TBYTE PTR [eax]
  41acf8:	pop    edi
  41acf9:	stos   BYTE PTR es:[edi],al
  41acfa:	mov    esi,0x8e9f1a5f
  41acff:	into   
  41ad00:	cld    
  41ad01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad02:	sbb    eax,0x3e78bd0d
  41ad07:	shr    ebp,0x2
  41ad0a:	stos   DWORD PTR es:[edi],eax
  41ad0b:	add    al,0x9b
  41ad0d:	test   DWORD PTR [ecx+0x14],0x18dce8ab
  41ad14:	cmp    al,0x3d
  41ad16:	and    DWORD PTR [ebp-0x2cb1231e],edx
  41ad1c:	inc    edx
  41ad1d:	push   esi
  41ad1e:	outs   dx,BYTE PTR ds:[esi]
  41ad1f:	cmc    
  41ad20:	cmc    
  41ad21:	je     0x41ad64
  41ad23:	sbb    ebp,DWORD PTR [edi]
  41ad25:	mov    ch,0xf5
  41ad27:	nop
  41ad28:	pop    ebx
  41ad29:	push   es
  41ad2a:	in     eax,0xd5
  41ad2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad2d:	adc    eax,0x8b680c8f
  41ad32:	std    
  41ad33:	mov    edi,0x74320a3a
  41ad38:	gs ss retf 
  41ad3b:	xchg   ebx,eax
  41ad3c:	push   ebp
  41ad3d:	pop    ebp
  41ad3e:	call   0xee484c42
  41ad43:	shl    BYTE PTR [edi],0x36
  41ad46:	(bad)  cs:[ecx+esi*2-0xc]
  41ad4b:	and    BYTE PTR [edi+0x5d990a2e],0xcf
  41ad52:	aaa    
  41ad53:	mov    al,ds:0x307ffca0
  41ad58:	push   0xffffffc2
  41ad5a:	dec    esi
  41ad5b:	je     0x41ad93
  41ad5d:	sbb    edi,edx
  41ad5f:	and    DWORD PTR ds:0x5635559e,0x46241a55
  41ad69:	(bad)  [esi-0x61703ccc]
  41ad6f:	test   eax,edi
  41ad71:	lods   al,BYTE PTR ds:[esi]
  41ad72:	mov    eax,0x6339fa17
  41ad77:	retf   0x876c
  41ad7a:	in     al,dx
  41ad7b:	mov    ebp,0xa8ce51f0
  41ad80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad81:	and    BYTE PTR [ebx-0x59],cl
  41ad84:	adc    DWORD PTR [edi-0x3a],ebp
  41ad87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad88:	mov    ch,0x9b
  41ad8a:	mov    BYTE PTR [ebx],ah
  41ad8c:	push   eax
  41ad8d:	mov    WORD PTR [ebp+ebp*8+0x17],fs
  41ad91:	fcmovnbe st,st(1)
  41ad93:	(bad)  
  41ad94:	jmp    0x41ad29
  41ad96:	test   eax,0x91a28d79
  41ad9b:	xchg   esp,eax
  41ad9c:	aad    0x0
  41ad9e:	fwait
  41ad9f:	das    
  41ada0:	shr    BYTE PTR [eax-0x367e6910],cl
  41ada6:	iret   
  41ada7:	test   eax,0x19b3875d
  41adac:	xchg   edx,eax
  41adad:	sbb    eax,0x66703159
  41adb2:	xchg   BYTE PTR [ecx+0xc],bh
  41adb5:	mov    ah,0xa5
  41adb7:	xlat   BYTE PTR ds:[ebx]
  41adb8:	xchg   edx,eax
  41adb9:	cmp    eax,0xf4fc7862
  41adbe:	aad    0xd4
  41adc0:	and    al,BYTE PTR [ebp+eiz*4-0x2c]
  41adc4:	in     eax,0x7b
  41adc6:	fild   QWORD PTR [ebx-0x2f328b11]
  41adcc:	cmp    DWORD PTR [eax],esi
  41adce:	nop
  41adcf:	push   es
  41add0:	adc    al,0x37
  41add2:	push   es
  41add3:	mov    dl,0xec
  41add5:	mov    ebp,0xa92b7715
  41adda:	aad    0xf7
  41addc:	pop    edi
  41addd:	lock aad 0x77
  41ade0:	jecxz  0x41ae27
  41ade2:	fnstenv [ecx-0x13]
  41ade5:	(bad)  
  41ade6:	in     al,dx
  41ade7:	or     al,0x29
  41ade9:	add    BYTE PTR [ecx-0x78],0xec
  41aded:	xor    dl,BYTE PTR [ecx-0x60]
  41adf0:	aam    0x89
  41adf2:	mov    bh,0xa0
  41adf4:	adc    al,0xc5
  41adf6:	int    0x3d
  41adf8:	add    eax,0x687a1407
  41adfd:	fsub   QWORD PTR [eax]
  41adff:	ficomp DWORD PTR [ebx]
  41ae01:	sahf   
  41ae02:	sahf   
  41ae03:	inc    esi
  41ae04:	test   al,ah
  41ae06:	push   0x28
  41ae08:	mov    esi,0xf9cc287c
  41ae0d:	jge    0x41add0
  41ae0f:	lea    edi,[ecx]
  41ae11:	repz aas 
  41ae13:	test   BYTE PTR [ecx],ah
  41ae15:	jo     0x41addb
  41ae17:	xchg   ebp,eax
  41ae18:	popa   
  41ae19:	inc    ecx
  41ae1a:	aam    0xec
  41ae1c:	in     al,0x39
  41ae1e:	adc    eax,0xd481c645
  41ae23:	ss jle 0x41ae63
  41ae26:	leave  
  41ae27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae28:	mov    cl,0x68
  41ae2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae2b:	pop    edx
  41ae2c:	mov    eax,0x94ee7cb7
  41ae31:	aad    0xc9
  41ae33:	retf   
  41ae34:	cmp    esi,DWORD PTR [esi-0x61]
  41ae37:	jae    0x41adbb
  41ae39:	test   ch,ch
  41ae3b:	into   
  41ae3c:	ret    0x8611
  41ae3f:	and    DWORD PTR [esi-0x4c28b357],0x4a
  41ae46:	sub    ch,ah
  41ae48:	mov    bl,0x1e
  41ae4a:	and    ah,bh
  41ae4c:	iret   
  41ae4d:	test   bh,cl
  41ae4f:	jbe    0x41ae34
  41ae51:	imul   edi,DWORD PTR [ecx+edi*4-0x77],0x60
  41ae56:	and    BYTE PTR [eax+0x4e2ed130],ah
  41ae5c:	in     al,dx
  41ae5d:	rcr    BYTE PTR [edx-0x6b],cl
  41ae60:	adc    eax,0xf9aa7b6f
  41ae65:	fist   DWORD PTR [ebx-0x2c]
  41ae68:	mul    BYTE PTR [edx+eiz*4]
  41ae6b:	inc    eax
  41ae6c:	push   esi
  41ae6d:	ret    0x53d
  41ae70:	aas    
  41ae71:	dec    ebx
  41ae72:	fst    st(6)
  41ae74:	mov    ecx,0x37e07fbc
  41ae79:	popf   
  41ae7a:	ret    0xcecd
  41ae7d:	add    DWORD PTR [edi],eax
  41ae7f:	cmp    DWORD PTR [ecx+0x313dfd9b],esp
  41ae85:	rcl    DWORD PTR [esi],0xb0
  41ae88:	xchg   BYTE PTR [ecx-0x5d],dl
  41ae8b:	sub    eax,0xbde1cc97
  41ae90:	xor    BYTE PTR [edi],ch
  41ae92:	inc    edx
  41ae93:	inc    eax
  41ae94:	xchg   edx,eax
  41ae95:	into   
  41ae96:	fdiv   DWORD PTR [eax-0x7d]
  41ae99:	inc    ebx
  41ae9a:	sar    DWORD PTR [ecx],cl
  41ae9c:	iret   
  41ae9d:	add    al,0xa8
  41ae9f:	sub    DWORD PTR [ebp+0x465cd103],esp
  41aea5:	xchg   edi,eax
  41aea7:	dec    esp
  41aea8:	in     eax,0x7e
  41aeaa:	xor    bl,BYTE PTR [eax-0x6d]
  41aead:	les    ebx,FWORD PTR [eax]
  41aeaf:	xchg   esi,eax
  41aeb0:	lahf   
  41aeb1:	(bad)  
  41aeb2:	jne    0x41aefa
  41aeb4:	sbb    eax,0xd81ef6f
  41aeb9:	adc    al,0x20
  41aebb:	out    dx,eax
  41aebc:	adc    DWORD PTR [eax],esp
  41aebe:	std    
  41aebf:	dec    ebx
  41aec0:	imul   ecx,DWORD PTR [eax+ebp*1+0x647628e7],0x4efb129
  41aecb:	dec    eax
  41aecc:	fmul   QWORD PTR [esi*1+0x9a0212]
  41aed3:	les    esp,FWORD PTR [edi+0x51]
  41aed6:	pushf  
  41aed7:	shr    BYTE PTR [ebp+0x7e],0x6d
  41aedb:	cdq    
  41aedc:	mov    bh,0x12
  41aede:	mov    dl,0xe6
  41aee0:	and    BYTE PTR ds:0x33b48e18,dl
  41aee6:	and    DWORD PTR [esi+ecx*1+0x2c],edi
  41aeea:	dec    edi
  41aeeb:	pop    es
  41aeec:	sbb    edx,DWORD PTR [eax-0x79]
  41aeef:	mov    ds:0x26b67f11,al
  41aef4:	cs push edx
  41aef6:	jno    0x41aeb5
  41aef8:	out    dx,eax
  41aef9:	cdq    
  41aefa:	cmp    al,0xcd
  41aefc:	pop    esp
  41aefd:	lods   eax,DWORD PTR ds:[esi]
  41aefe:	xor    al,0x21
  41af00:	xchg   ecx,eax
  41af01:	enter  0xc4d0,0x6e
  41af05:	jmp    0xa68c7386
  41af0a:	dec    edi
  41af0b:	mov    dl,0x1a
  41af0d:	sbb    eax,0x2f514dd2
  41af12:	sub    eax,0x2c67a57a
  41af17:	sub    al,0x28
  41af19:	jg     0x41af4b
  41af1b:	int    0x4a
  41af1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af1e:	rol    DWORD PTR [edi+0x758ddd37],cl
  41af24:	mov    ds:0x9a747a8f,eax
  41af29:	pusha  
  41af2a:	popf   
  41af2b:	sbb    eax,0x1235ef39
  41af30:	fs push 0x3ef6e97a
  41af36:	xchg   BYTE PTR [esi-0x27],ch
  41af39:	xor    eax,0xaba5a72c
  41af3e:	test   al,0xd2
  41af40:	das    
  41af41:	out    dx,al
  41af42:	outs   dx,BYTE PTR ds:[esi]
  41af43:	inc    ebx
  41af44:	add    cl,cl
  41af46:	loope  0x41af52
  41af48:	mov    edx,0x26c7362b
  41af4d:	das    
  41af4e:	xchg   ebx,eax
  41af4f:	jae    0x41af26
  41af51:	out    0xa4,al
  41af53:	mov    ds:0xa61ff189,al
  41af58:	mov    BYTE PTR [ebx],dh
  41af5a:	fsub   DWORD PTR [ebx+0x41]
  41af5d:	and    DWORD PTR [ecx-0x1b],ecx
  41af60:	cmp    dl,BYTE PTR [esp+eax*1]
  41af63:	ja     0x41aeeb
  41af65:	rcl    BYTE PTR [ebp-0x74],0xb4
  41af69:	out    0xba,eax
  41af6b:	xlat   BYTE PTR ds:[ebx]
  41af6c:	push   eax
  41af6d:	jmp    0x60d85ec5
  41af72:	push   edx
  41af73:	add    cl,BYTE PTR [edi+0x73b6c964]
  41af79:	fsubr  QWORD PTR [esi+0x5cd82df5]
  41af7f:	xchg   edx,eax
  41af80:	xor    ch,BYTE PTR [ecx]
  41af82:	sar    DWORD PTR [eax+0x46],0x1b
  41af86:	(bad)  
  41af87:	icebp  
  41af88:	out    dx,eax
  41af89:	xor    DWORD PTR [esi+0x37],ebx
  41af8c:	(bad)  
  41af8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af8e:	and    DWORD PTR [esi-0x46fe57d8],0x86511236
  41af98:	stos   DWORD PTR es:[edi],eax
  41af99:	inc    ebp
  41af9a:	inc    eax
  41af9b:	inc    esp
  41af9c:	xchg   edi,eax
  41af9d:	inc    ebx
  41af9e:	fsub   DWORD PTR [ebx-0x2c0a39dc]
  41afa4:	enter  0xa873,0xb0
  41afa8:	sub    ah,bl
  41afaa:	inc    eax
  41afab:	mov    esp,DWORD PTR [ecx+0x8]
  41afae:	shl    BYTE PTR [edi+0x5a],0xde
  41afb2:	or     DWORD PTR [eax+ebx*4+0x6dfa2dfc],eax
  41afb9:	mov    eax,ds:0xc216977d
  41afbe:	mov    BYTE PTR [ecx-0x43],dl
  41afc1:	fadd   QWORD PTR [ecx]
  41afc3:	cmp    al,0x51
  41afc5:	sub    al,0x3f
  41afc7:	mov    al,ds:0x30fc52d2
  41afcc:	add    DWORD PTR [ebx],ecx
  41afce:	xlat   BYTE PTR ds:[ebx]
  41afcf:	xor    BYTE PTR [ebp-0x65],0xf7
  41afd3:	cmp    ebx,DWORD PTR [edx-0x41]
  41afd6:	out    dx,eax
  41afd7:	ins    DWORD PTR es:[edi],dx
  41afd8:	or     eax,0xf043c833
  41afdd:	push   0x72211436
  41afe2:	rcl    BYTE PTR [ebx-0x4b],1
  41afe5:	or     BYTE PTR [edi],ch
  41afe7:	mov    esi,0xf4670537
  41afec:	shr    DWORD PTR [ebp-0x50385735],cl
  41aff2:	push   ds
  41aff3:	pusha  
  41aff4:	in     al,dx
  41aff5:	pop    eax
  41aff6:	jb     0x41afa5
  41aff8:	dec    eax
  41aff9:	jo     0x41b03d
  41affb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41affc:	es dec ebp
  41affe:	adc    ah,cl
  41b000:	add    eax,0x8f51dfa6
  41b005:	jmp    0x4337:0x6f1c9335
  41b00c:	out    0x81,eax
  41b00e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b00f:	es enter 0x8aca,0x1
  41b014:	sbb    ecx,esp
  41b016:	jg     0x41b027
  41b018:	or     DWORD PTR [esi+eiz*1-0x6933f8ee],ebp
  41b01f:	add    eax,0x693f8f94
  41b024:	mov    BYTE PTR [edi],cl
  41b026:	cmc    
  41b027:	add    ecx,DWORD PTR [esi+0x74]
  41b02a:	rcl    dl,cl
  41b02c:	(bad)  
  41b02d:	ror    bh,cl
  41b02f:	jp     0x41afc3
  41b031:	xor    eax,0xf0f00ce0
  41b036:	(bad)  
  41b037:	bnd ret 0xaba1
  41b03b:	mov    esp,0x7fe0877d
  41b040:	inc    eax
  41b041:	xchg   ebx,eax
  41b042:	mov    ebp,0x62b825ba
  41b047:	es jecxz 0x41b08a
  41b04a:	cmp    ebx,edx
  41b04c:	pop    es
  41b04d:	cwde   
  41b04e:	jb     0x41afe1
  41b050:	or     eax,0xef9c88af
  41b055:	push   eax
  41b056:	cs icebp 
  41b058:	(bad)  
  41b059:	mov    eax,0xa87ccbf9
  41b05e:	(bad)  
  41b05f:	lds    esi,FWORD PTR [eax]
  41b061:	rol    dh,1
  41b063:	das    
  41b064:	popa   
  41b065:	pusha  
  41b066:	sub    ah,BYTE PTR [eax+0x2d]
  41b069:	inc    ebp
  41b06a:	rol    BYTE PTR [eax-0x5a],cl
  41b06d:	mov    al,ds:0x50fa906d
  41b072:	cli    
  41b073:	or     eax,0x22c64865
  41b078:	arpl   bx,sp
  41b07a:	mov    ebx,0xcdc86558
  41b07f:	idiv   esi
  41b081:	mov    esi,0x695dd42b
  41b086:	add    al,0xac
  41b088:	sar    BYTE PTR [esi-0x28],0xff
  41b08c:	in     al,0x78
  41b08e:	imul   edi,eax,0x12
  41b091:	dec    ebp
  41b092:	test   BYTE PTR [ebx-0x40052697],0x15
  41b099:	inc    edx
  41b09a:	or     ecx,DWORD PTR [edi+0x149981d4]
  41b0a0:	adc    eax,0xce48268f
  41b0a5:	xor    eax,0x336fa753
  41b0aa:	adc    DWORD PTR [ecx],ecx
  41b0ac:	push   0xf0c0cee0
  41b0b1:	ss mov esi,0xd8856655
  41b0b7:	inc    esp
  41b0b8:	sbb    eax,0xae2cabeb
  41b0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0be:	mov    esp,0x5466cb1f
  41b0c3:	(bad)  
  41b0c4:	mov    ds:0x8338cf73,eax
  41b0c9:	das    
  41b0ca:	repz (bad) 
  41b0cc:	mov    eax,ds:0xdc4d7077
  41b0d1:	cli    
  41b0d2:	inc    edx
  41b0d3:	ins    DWORD PTR es:[edi],dx
  41b0d4:	test   al,0xc4
  41b0d6:	mov    ch,ah
  41b0d8:	jg     0x41b12d
  41b0da:	aad    0xd1
  41b0dc:	out    0x1a,eax
  41b0de:	pusha  
  41b0df:	mov    ch,0x5c
  41b0e1:	dec    eax
  41b0e2:	ins    DWORD PTR es:[edi],dx
  41b0e3:	inc    edx
  41b0e4:	cmp    ebx,esp
  41b0e6:	or     eax,0xfbabad97
  41b0eb:	jae    0x41b139
  41b0ed:	adc    edi,DWORD PTR [ebx-0x380411c8]
  41b0f3:	repz adc BYTE PTR ds:0x8933d7a7,ah
  41b0fa:	inc    edx
  41b0fb:	sub    eax,0xbb99cfda
  41b100:	jbe    0x41b0c3
  41b102:	jle    0x41b0c8
  41b104:	dec    esi
  41b105:	xchg   edi,eax
  41b106:	mov    bh,0xd4
  41b108:	inc    edi
  41b109:	pop    ebx
  41b10a:	jae    0x41b0cc
  41b10c:	ds out 0x62,al
  41b10f:	xchg   BYTE PTR [ecx+0x7a],bh
  41b112:	int3   
  41b113:	mov    bh,0xe1
  41b115:	and    BYTE PTR [edx-0x2c26c6fb],bl
  41b11b:	jecxz  0x41b09d
  41b11d:	push   ss
  41b11e:	and    bh,cl
  41b120:	fs in  al,0x7
  41b123:	cmc    
  41b124:	in     al,dx
  41b125:	fisub  DWORD PTR [edi-0x47e16423]
  41b12b:	lar    edx,si
  41b12e:	(bad)  
  41b12f:	cwde   
  41b130:	or     al,0x10
  41b132:	pop    DWORD PTR [ecx]
  41b134:	mov    edi,0x77081424
  41b139:	dec    edi
  41b13a:	sub    edx,DWORD PTR [eax]
  41b13c:	cmp    BYTE PTR [esi+eiz*2+0x73],ah
  41b140:	jp     0x41b0eb
  41b142:	xor    DWORD PTR [ebp+0x5dc32565],edi
  41b148:	cmp    BYTE PTR [ebx+ecx*2-0x6b711170],cl
  41b14f:	or     BYTE PTR [edi+0x4f6ad339],bh
  41b155:	sbb    al,0x45
  41b157:	js     0x41b0ee
  41b159:	push   esi
  41b15a:	cdq    
  41b15b:	call   0x67e30f21
  41b160:	leave  
  41b161:	mov    dh,0xde
  41b163:	mov    bl,BYTE PTR ds:0xb9fdb313
  41b169:	push   es
  41b16a:	in     al,0x80
  41b16c:	mov    bl,0xae
  41b16e:	mov    bh,0x2a
  41b170:	in     al,0x20
  41b172:	or     DWORD PTR ds:0x78d3182a,eax
  41b178:	xchg   ecx,eax
  41b179:	or     DWORD PTR [esi+0x4f3ca681],0xa4bc68b0
  41b183:	icebp  
  41b184:	jg     0x41b19a
  41b186:	sbb    eax,0xf8fa1bd
  41b18b:	sub    eax,0x3acf2bdd
  41b190:	int    0xf6
  41b192:	push   edx
  41b193:	daa    
  41b194:	mov    BYTE PTR [eax-0x43711628],dh
  41b19a:	shr    DWORD PTR [eax+0x4],cl
  41b19d:	out    dx,eax
  41b19e:	jno    0x41b173
  41b1a0:	mov    eax,ds:0xf6c73096
  41b1a5:	push   ss
  41b1a6:	push   ebp
  41b1a7:	lods   eax,DWORD PTR ds:[esi]
  41b1a8:	xchg   esi,eax
  41b1a9:	adc    BYTE PTR [eax],bl
  41b1ab:	or     ah,0x93
  41b1ae:	mov    dl,0x26
  41b1b0:	or     cl,BYTE PTR [edx]
  41b1b2:	sbb    dh,BYTE PTR [ebx]
  41b1b4:	not    DWORD PTR [edi-0x67]
  41b1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b8:	leave  
  41b1b9:	adc    ebx,DWORD PTR [eax-0x8]
  41b1bc:	dec    eax
  41b1bd:	out    0xe1,al
  41b1bf:	stos   DWORD PTR es:[edi],eax
  41b1c0:	cmp    al,0x7e
  41b1c2:	xor    ebx,ebp
  41b1c4:	push   esi
  41b1c5:	mov    cl,0x19
  41b1c7:	pop    edi
  41b1c8:	scas   eax,DWORD PTR es:[edi]
  41b1c9:	test   BYTE PTR [edi+0x40],ch
  41b1cc:	test   al,0xa6
  41b1ce:	dec    esi
  41b1cf:	call   0xe1e2:0x33fd24ab
  41b1d6:	(bad)  [eax]
  41b1d8:	ja     0x41b249
  41b1da:	fs jns 0x41b1af
  41b1dd:	jb     0x41b25c
  41b1df:	mov    ah,0x42
  41b1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e2:	(bad)  
  41b1e3:	jmp    0xae35:0x55447300
  41b1ea:	loopne 0x41b262
  41b1ec:	sbb    dl,0x59
  41b1ef:	xchg   esp,eax
  41b1f0:	in     al,0x91
  41b1f2:	jo     0x41b1f1
  41b1f4:	in     eax,0x30
  41b1f6:	bound  edi,QWORD PTR [edx]
  41b1f8:	sahf   
  41b1f9:	push   ecx
  41b1fa:	js     0x41b232
  41b1fc:	pop    esp
  41b1fd:	mov    edi,0xae5220bf
  41b202:	jp     0x41b1da
  41b204:	add    DWORD PTR [ecx-0x7bce9cf],ebx
  41b20a:	sub    ah,cl
  41b20c:	dec    ecx
  41b20d:	mov    dl,0x51
  41b20f:	pop    es
  41b210:	fcmovbe st,st(2)
  41b212:	add    BYTE PTR [ebx-0x6eaffbd2],0xbb
  41b219:	das    
  41b21a:	jp     0x41b244
  41b21c:	mov    ch,0x6d
  41b21e:	push   cs
  41b21f:	sbb    al,0x57
  41b221:	outs   dx,DWORD PTR ds:[esi]
  41b222:	sbb    ebx,DWORD PTR [edi+edx*1-0x6124a3d2]
  41b229:	jmp    0x55e4e983
  41b22e:	jle    0x41b225
  41b230:	pop    es
  41b231:	mov    al,0x2b
  41b233:	js     0x41b20c
  41b235:	cmp    esi,DWORD PTR [ebx-0x20]
  41b238:	pop    esi
  41b239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b23a:	ret    0xced9
  41b23d:	jle    0x41b1f5
  41b23f:	jmp    0x41b1f8
  41b241:	mov    edx,0x45848345
  41b246:	les    dx,DWORD PTR [ebp+0x2daf0942]
  41b24d:	out    0x1,eax
  41b24f:	push   ebp
  41b250:	lds    edx,FWORD PTR [ebx]
  41b252:	inc    ebp
  41b253:	cmp    eax,DWORD PTR [ebp-0x43]
  41b256:	dec    edi
  41b257:	imul   ebx,DWORD PTR [esi+esi*2-0x4067c67c],0xffffffe7
  41b25f:	pushf  
  41b260:	mov    bl,0xf0
  41b262:	std    
  41b263:	cmp    eax,0x3d11e687
  41b268:	adc    DWORD PTR [ebx],ecx
  41b26a:	dec    DWORD PTR [ebx-0x42ae3474]
  41b270:	dec    eax
  41b271:	sub    BYTE PTR [ebp-0x60],dl
  41b274:	inc    ebx
  41b275:	add    eax,0xa6020248
  41b27a:	pop    ecx
  41b27b:	push   ebp
  41b27c:	test   eax,0x34ae4ca1
  41b281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b282:	jo     0x6d01669a
  41b288:	push   edi
  41b289:	retf   0xe8a8
  41b28c:	pop    edx
  41b28d:	fs jl  0x41b25f
  41b290:	sub    dl,dh
  41b292:	xor    BYTE PTR [ebp-0x74c3ea14],dh
  41b298:	mov    esp,0x799ee639
  41b29d:	aad    0x62
  41b29f:	fwait
  41b2a0:	inc    edi
  41b2a1:	pop    eax
  41b2a2:	sti    
  41b2a3:	adc    BYTE PTR [edi],bl
  41b2a5:	cmp    al,0xcc
  41b2a7:	pop    edi
  41b2a8:	sub    dl,BYTE PTR [ecx+0x10727ace]
  41b2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2af:	pop    eax
  41b2b0:	pop    edi
  41b2b1:	xchg   edx,eax
  41b2b2:	mov    BYTE PTR [edx+0x32],cl
  41b2b5:	lods   al,BYTE PTR ds:[esi]
  41b2b6:	jl     0x41b288
  41b2b8:	mov    al,0xd2
  41b2ba:	(bad)  
  41b2bb:	inc    BYTE PTR [ebx-0x41]
  41b2be:	pop    esp
  41b2bf:	js     0x41b338
  41b2c1:	mov    al,0x5e
  41b2c3:	out    0xe4,al
  41b2c5:	jbe    0x41b2d7
  41b2c7:	cmp    al,0xc3
  41b2c9:	pusha  
  41b2ca:	mov    ebp,DWORD PTR es:[edx]
  41b2cd:	pusha  
  41b2ce:	(bad)  
  41b2cf:	call   DWORD PTR [ecx+ecx*8+0x57]
  41b2d3:	lea    esi,es:[ebx+0x6f]
  41b2d7:	icebp  
  41b2d8:	data16 sub al,BYTE PTR fs:[edx+ebp*8+0x798be492]
  41b2e1:	jb     0x41b2b3
  41b2e3:	fld    DWORD PTR [esi]
  41b2e5:	add    al,0x78
  41b2e7:	dec    ebp
  41b2e8:	adc    dh,BYTE PTR [ebx-0x4e842cae]
  41b2ee:	in     eax,dx
  41b2ef:	imul   edi,esp,0xb0962e1c
  41b2f5:	call   0x32b5:0xc9a65e20
  41b2fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2fd:	mov    edx,DWORD PTR [ebp+0x24]
  41b300:	xor    al,0xe1
  41b302:	add    ch,BYTE PTR [ebx]
  41b304:	jmp    0xf5ec00a1
  41b309:	and    eax,0x7fde620c
  41b30e:	dec    ebx
  41b30f:	sar    DWORD PTR [ebx],1
  41b311:	aad    0x8c
  41b313:	adc    bl,al
  41b315:	or     bl,BYTE PTR [edi]
  41b317:	mov    ch,0xd7
  41b319:	cs pop eax
  41b31b:	adc    cl,BYTE PTR [edx+edx*4+0x5bd275aa]
  41b322:	mov    edi,0xaab75171
  41b327:	loopne 0x41b396
  41b329:	and    DWORD PTR [esp+ebx*1+0x2ec60712],esi
  41b330:	xchg   ebp,eax
  41b331:	or     eax,0x9e06824a
  41b336:	icebp  
  41b337:	dec    ebx
  41b338:	sbb    eax,0xcf25355d
  41b33d:	add    BYTE PTR [edx+0x5d7af117],ch
  41b343:	add    eax,0x9dd61f45
  41b348:	loopne 0x41b2fd
  41b34a:	jge    0x41b385
  41b34c:	sahf   
  41b34d:	cmp    DWORD PTR [esi],edx
  41b34f:	add    ebx,DWORD PTR [ebx+esi*8-0x36]
  41b353:	pop    esp
  41b354:	fiadd  WORD PTR [edx-0x42]
  41b357:	sti    
  41b358:	loopne 0x41b336
  41b35a:	push   esi
  41b35b:	adc    al,0x37
  41b35d:	call   0x8c96:0x3de38bf8
  41b364:	fcmovnu st,st(1)
  41b366:	dec    ecx
  41b367:	test   cl,bh
  41b369:	in     eax,dx
  41b36a:	gs popa 
  41b36c:	sub    dh,BYTE PTR [eax-0x79]
  41b36f:	ins    BYTE PTR es:[edi],dx
  41b370:	repnz sub BYTE PTR [ecx+0x11c77f80],ch
  41b377:	stos   BYTE PTR es:[edi],al
  41b378:	pop    esi
  41b379:	dec    ecx
  41b37a:	pop    eax
  41b37b:	xchg   edi,eax
  41b37c:	push   cs
  41b37d:	mov    al,al
  41b37f:	push   0x27883212
  41b384:	retf   
  41b385:	xchg   ecx,eax
  41b386:	cdq    
  41b387:	out    dx,eax
  41b388:	jno    0x41b31c
  41b38a:	adc    BYTE PTR [ecx-0x684ef7af],al
  41b390:	arpl   WORD PTR [esi],ax
  41b392:	jae    0x41b3fb
  41b394:	iret   
  41b395:	jmp    0x41b36e
  41b397:	fs cmp ch,ah
  41b39a:	and    eax,0x7d156862
  41b39f:	add    ecx,DWORD PTR [edi+edx*2]
  41b3a2:	pushf  
  41b3a3:	mov    ?,WORD PTR [edi-0x5d]
  41b3a6:	div    DWORD PTR [edx-0x32]
  41b3a9:	ds push esi
  41b3ab:	sbb    bh,0xfe
  41b3ae:	retf   0x103a
  41b3b1:	rol    BYTE PTR [edi+esi*1+0x3f],cl
  41b3b5:	push   ecx
  41b3b6:	in     eax,0xc
  41b3b8:	jle    0x41b36d
  41b3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3bb:	xchg   edi,eax
  41b3bc:	pop    eax
  41b3bd:	dec    esp
  41b3be:	ret    0xf441
  41b3c1:	lds    edx,FWORD PTR [esi-0x1e]
  41b3c4:	aas    
  41b3c5:	xor    BYTE PTR [edx-0x30],ch
  41b3c8:	mov    ds:0x553afc9f,eax
  41b3cd:	lock mov ah,0x4
  41b3d0:	aam    0x1b
  41b3d2:	sub    ebp,ecx
  41b3d4:	mov    bh,0x78
  41b3d6:	cmp    BYTE PTR [esi+0x53d1e96],ah
  41b3dc:	xor    al,0x8d
  41b3de:	les    ebp,FWORD PTR [ebp-0x33]
  41b3e1:	pop    ds
  41b3e2:	inc    ebx
  41b3e3:	or     al,0x8d
  41b3e5:	stc    
  41b3e6:	daa    
  41b3e7:	and    ah,BYTE PTR [eax-0x75]
  41b3ea:	js     0x41b3ed
  41b3ec:	sbb    eax,0xd136f719
  41b3f1:	pushf  
  41b3f2:	aaa    
  41b3f3:	retf   
  41b3f4:	loope  0x41b391
  41b3f6:	inc    edi
  41b3f7:	addr16 cmp eax,0x94833b13
  41b3fd:	(bad)  
  41b3fe:	icebp  
  41b3ff:	js     0x41b476
  41b401:	test   eax,0x61d8b0ef
  41b406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b407:	sbb    esi,DWORD PTR [edi-0x761af817]
  41b40d:	xor    ecx,DWORD PTR [esi]
  41b40f:	clc    
  41b410:	pop    ds
  41b411:	pop    ds
  41b412:	xor    DWORD PTR [edi],esi
  41b414:	mov    al,ds:0xf2fa7754
  41b419:	imul   edi,DWORD PTR [ebx+ebp*8-0x20],0x2e
  41b41e:	sub    edi,DWORD PTR [ebp+0x36]
  41b421:	pop    ss
  41b422:	sub    al,ch
  41b424:	jecxz  0x41b499
  41b426:	popf   
  41b427:	pop    ss
  41b428:	cld    
  41b429:	adc    al,0x16
  41b42b:	mov    dh,BYTE PTR [edx+0x6b577895]
  41b431:	test   esi,edi
  41b433:	test   DWORD PTR [edx-0x54],ebx
  41b436:	or     DWORD PTR [edi],esi
  41b438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b439:	(bad)  
  41b43a:	jle    0x41b3cb
  41b43c:	cmp    al,0x30
  41b43e:	or     dl,al
  41b440:	ror    edi,1
  41b442:	imul   esp,DWORD PTR [ebx+0x57],0x14
  41b446:	jno    0x41b47f
  41b448:	add    eax,esp
  41b44a:	push   ss
  41b44b:	mov    gs,WORD PTR [eax]
  41b44d:	scas   al,BYTE PTR es:[edi]
  41b44e:	ucomiss xmm0,xmm7
  41b451:	mov    edi,0xe6ead20d
  41b456:	and    al,0x2d
  41b458:	cmp    eax,0xa4ede0dd
  41b45d:	pop    ebp
  41b45e:	out    dx,eax
  41b45f:	jb     0x41b485
  41b461:	fs js  0x41b45c
  41b464:	loopne 0x41b4c5
  41b466:	addr16 mov bl,0xd
  41b469:	js     0x41b4d0
  41b46b:	out    0xee,eax
  41b46d:	add    eax,0x3b2a8802
  41b472:	xlat   BYTE PTR ds:[ebx]
  41b473:	arpl   WORD PTR [edi+0x389f0cd5],bx
  41b479:	mov    ecx,0x87dd9e70
  41b47e:	rep movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  41b481:	mov    dh,0x86
  41b483:	mov    ds:0x29078327,al
  41b488:	out    dx,al
  41b489:	push   ecx
  41b48a:	add    BYTE PTR [ebp+0x59],cl
  41b48d:	sbb    ch,BYTE PTR [ecx-0x13]
  41b490:	or     eax,0x47cc7224
  41b495:	(bad)  
  41b496:	stos   DWORD PTR es:[edi],eax
  41b497:	pop    es
  41b498:	outs   dx,BYTE PTR ds:[esi]
  41b499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b49a:	das    
  41b49b:	es icebp 
  41b49d:	pop    edx
  41b49e:	push   cs
  41b49f:	adc    eax,0xb1710511
  41b4a4:	push   eax
  41b4a5:	(bad)  
  41b4a6:	in     al,0x32
  41b4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a9:	mov    edi,0x740a64e2
  41b4ae:	xchg   edi,eax
  41b4af:	scas   eax,DWORD PTR es:[edi]
  41b4b0:	repz xchg edx,eax
  41b4b2:	dec    edx
  41b4b3:	scas   al,BYTE PTR es:[edi]
  41b4b4:	ss scas al,BYTE PTR es:[edi]
  41b4b6:	idiv   DWORD PTR [ebx]
  41b4b8:	(bad)  
  41b4b9:	adc    BYTE PTR cs:[esp+ebp*8+0x7d8e1f58],0x73
  41b4c2:	loope  0x41b470
  41b4c4:	add    ebp,DWORD PTR [ebp+0x6f07cd40]
  41b4ca:	add    BYTE PTR [edx-0x430847c9],al
  41b4d0:	xchg   BYTE PTR [ecx],bh
  41b4d2:	mov    al,ds:0xfda5d69d
  41b4d7:	pushf  
  41b4d8:	add    BYTE PTR [edi-0x4d],cl
  41b4db:	push   es
  41b4dc:	xor    eax,ebx
  41b4de:	repnz test eax,0x2a1d6548
  41b4e4:	sahf   
  41b4e5:	int    0x98
  41b4e7:	inc    esp
  41b4e8:	ret    
  41b4e9:	es js  0x41b46e
  41b4ec:	and    ecx,ebp
  41b4ee:	outs   dx,DWORD PTR ds:[esi]
  41b4ef:	mov    esp,0x642699bf
  41b4f4:	or     DWORD PTR [ebp-0x35793fe8],ebx
  41b4fa:	es dec eax
  41b4fc:	popa   
  41b4fd:	push   edx
  41b4fe:	pop    ss
  41b4ff:	(bad)  
  41b500:	call   DWORD PTR [ebp-0x29]
  41b503:	xor    edi,0x4db88bf5
  41b509:	ret    
  41b50a:	hlt    
  41b50b:	mov    bl,0xe4
  41b50d:	mov    edx,0xacc26bb8
  41b512:	stos   BYTE PTR es:[edi],al
  41b513:	pop    ebp
  41b514:	popf   
  41b515:	mov    esi,0xe6fd50e1
  41b51a:	push   ebp
  41b51b:	jg     0x41b58a
  41b51d:	(bad)  
  41b51e:	mov    edx,0xcb56366f
  41b523:	bswap  ebp
  41b525:	in     al,dx
  41b526:	sbb    ecx,DWORD PTR [ebx]
  41b528:	fadd   st,st(4)
  41b52a:	cld    
  41b52b:	mov    esp,0x5fe3819e
  41b530:	aaa    
  41b531:	adc    ebp,ebx
  41b533:	test   DWORD PTR ds:0xff928edf,esi
  41b539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b53a:	xor    BYTE PTR [ecx+0x67],0xad
  41b53e:	inc    edx
  41b53f:	xor    al,0xdb
  41b541:	fmul   st,st(6)
  41b543:	jbe    0x41b510
  41b545:	inc    esp
  41b546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b547:	fs in  al,dx
  41b549:	rcr    BYTE PTR [ebp-0x41],1
  41b54c:	cmp    BYTE PTR [ebx],bl
  41b54e:	shl    BYTE PTR [edx-0x2fed6c2e],1
  41b554:	dec    edx
  41b555:	fwait
  41b556:	sti    
  41b557:	dec    edx
  41b558:	mov    eax,ds:0xec84f618
  41b55d:	sbb    ebx,esp
  41b55f:	aad    0x43
  41b561:	xor    dl,cl
  41b563:	lods   al,BYTE PTR ds:[esi]
  41b564:	jb     0x41b50b
  41b566:	jno    0x41b55c
  41b568:	xchg   esp,esp
  41b56a:	dec    esi
  41b56b:	push   ds
  41b56c:	dec    ebp
  41b56d:	push   0x47
  41b56f:	jb     0x41b5d7
  41b571:	push   0x2d
  41b573:	or     DWORD PTR ds:0xee1c0f71,esp
  41b579:	inc    esp
  41b57a:	es inc ebp
  41b57c:	jo     0x41b511
  41b57e:	inc    edx
  41b57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b580:	mov    ch,0x41
  41b582:	scas   al,BYTE PTR es:[edi]
  41b583:	sub    ebp,DWORD PTR [edi+0x15]
  41b586:	inc    esi
  41b587:	int    0xf
  41b589:	xchg   esi,eax
  41b58a:	mov    cl,0x3e
  41b58c:	nop
  41b58d:	sahf   
  41b58e:	data16 std 
  41b590:	daa    
  41b591:	and    al,0x63
  41b593:	mov    ah,bl
  41b595:	cwde   
  41b596:	dec    ebp
  41b597:	stos   DWORD PTR es:[edi],eax
  41b598:	sbb    DWORD PTR [ecx-0x58],ebp
  41b59b:	scas   al,BYTE PTR es:[edi]
  41b59c:	aam    0xc9
  41b59e:	push   0xffffffe8
  41b5a0:	mov    al,ds:0x259d4e96
  41b5a5:	je     0x41b5e0
  41b5a7:	dec    esi
  41b5a8:	cs stc 
  41b5aa:	es cmp ebx,edi
  41b5ad:	xchg   ebp,eax
  41b5ae:	bnd jno 0x41b5be
  41b5b1:	cmp    BYTE PTR [esi-0x34],al
  41b5b4:	and    ebx,DWORD PTR [ecx-0x7e]
  41b5b7:	fiadd  WORD PTR [edx]
  41b5b9:	pop    ebp
  41b5ba:	jbe    0x41b5e1
  41b5bc:	imul   edx,DWORD PTR [esp+edi*2],0x55981274
  41b5c3:	inc    esi
  41b5c4:	outs   dx,DWORD PTR ds:[esi]
  41b5c5:	and    eax,0x52ec2037
  41b5ca:	retf   0x597e
  41b5cd:	adc    al,0xcc
  41b5cf:	es das 
  41b5d1:	inc    esp
  41b5d2:	dec    ebx
  41b5d3:	pop    ebp
  41b5d4:	mov    edx,0x610d869e
  41b5d9:	mov    ecx,DWORD PTR [ebx+0x19de1a3b]
  41b5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5e0:	mov    edx,0x23cf08f7
  41b5e5:	arpl   WORD PTR [eax],bp
  41b5e7:	push   esi
  41b5e8:	ret    
  41b5e9:	lock pop ds
  41b5eb:	mov    ds:0x7f8f42be,al
  41b5f0:	sub    DWORD PTR [ebp-0x1462e106],edi
  41b5f6:	push   es
  41b5f7:	(bad)  
  41b5f8:	or     eax,0x6bede8cc
  41b5fd:	mov    bl,0xb6
  41b5ff:	retf   0x9b02
  41b602:	adc    ecx,esp
  41b604:	and    esp,edx
  41b606:	or     esi,ebp
  41b608:	and    BYTE PTR [edx],ah
  41b60a:	mov    eax,0x548d4c75
  41b60f:	dec    esp
  41b610:	outs   dx,BYTE PTR ds:[esi]
  41b611:	xchg   edx,eax
  41b612:	dec    ecx
  41b613:	pop    es
  41b614:	loop   0x41b61e
  41b616:	mov    ebx,DWORD PTR [ecx]
  41b618:	sahf   
  41b619:	data16 in al,0x7b
  41b61c:	call   DWORD PTR [esi+0x736a5cc2]
  41b622:	mov    bl,0x48
  41b624:	out    dx,eax
  41b625:	mov    edi,0x5ed32e6d
  41b62a:	iret   
  41b62b:	rcl    BYTE PTR [esi+eax*1-0x43ba01f7],cl
  41b632:	jo     0x41b658
  41b634:	jmp    0x383f:0x960af68c
  41b63b:	mov    ebp,0x2d57c76b
  41b640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b641:	cld    
  41b642:	nop
  41b643:	mov    edx,DWORD PTR [ebp-0x50]
  41b646:	add    ecx,0x242ebcd
  41b64c:	xor    ecx,edx
  41b64e:	mov    DWORD PTR [ebp-0x50],ecx
  41b651:	mov    ecx,DWORD PTR [ebp+0x8]
  41b654:	mov    edx,DWORD PTR [ebp-0x4c]
  41b657:	add    ecx,edi
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a73f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a743
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a747
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a74b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a74f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a753
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42987b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a75b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a723
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429bff
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a72b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a72f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a733
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a737
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shr    DWORD PTR [esi],cl
  41bf76:	ror    dh,1
  41bf78:	pop    esi
  41bf79:	mov    ebx,0xd98382f9
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx+0x5cb5792],0x78
  41bf86:	sbb    al,0x9b
  41bf88:	or     eax,0x8a649cbe
  41bf8d:	idiv   BYTE PTR [ecx-0x1a]
  41bf90:	mov    DWORD PTR [esi+ecx*2],eax
  41bf93:	mov    dh,0x4c
  41bf95:	add    BYTE PTR [esi-0x70c561fe],cl
  41bf9b:	shl    cl,1
  41bf9d:	add    eax,0x5bf9736e
  41bfa2:	dec    edi
  41bfa3:	jb     0x41bf2b
  41bfa5:	ret    
  41bfa6:	xor    BYTE PTR [eax+eiz*8],ah
  41bfa9:	enter  0x6a25,0xb1
  41bfad:	sbb    esp,DWORD PTR [edx]
  41bfaf:	arpl   ax,sp
  41bfb1:	ror    DWORD PTR [eax+eiz*4+0x3b],cl
  41bfb5:	stos   BYTE PTR es:[edi],al
  41bfb6:	(bad)  
  41bfb8:	cld    
  41bfb9:	inc    edi
  41bfba:	or     edx,esp
  41bfbc:	mov    eax,0xa821e88a
  41bfc1:	pop    esp
  41bfc2:	jl     0x41bfd9
  41bfc4:	cwde   
  41bfc5:	pushf  
  41bfc6:	cs jle 0x41c042
  41bfc9:	stos   BYTE PTR es:[edi],al
  41bfca:	xor    BYTE PTR [eax+0x4cf19894],bh
  41bfd0:	inc    BYTE PTR [ebp+edx*8-0x1e]
  41bfd4:	enter  0x6e72,0xf5
  41bfd8:	and    ah,BYTE PTR [edi+ecx*2]
  41bfdb:	test   eax,0xc5da4450
  41bfe0:	sbb    esp,eax
  41bfe2:	fild   WORD PTR [eax-0x3d360e2f]
  41bfe8:	rcr    DWORD PTR [edi],1
  41bfea:	inc    edi
  41bfeb:	fimul  DWORD PTR [edx-0x55]
  41bfee:	mov    al,ds:0x4a5e4fe2
  41bff3:	dec    edi
  41bff4:	add    edi,DWORD PTR [edi+ebx*8]
  41bff7:	hlt    
  41bff8:	ins    BYTE PTR es:[edi],dx
  41bff9:	fnsave [edi+edi*4]
  41bffc:	pop    ebx
  41bffd:	push   cs
  41bffe:	pop    ebx
  41bfff:	int    0xac
  41c001:	push   edi
  41c002:	xchg   esi,eax
  41c003:	adc    al,0xc7
  41c005:	and    al,0xf5
  41c007:	test   al,0x77
  41c009:	in     eax,dx
  41c00a:	enter  0xb956,0x6
  41c00e:	(bad)  
  41c00f:	fld    QWORD PTR ss:[ecx-0x5be14ed1]
  41c016:	loope  0x41bfc1
  41c018:	popf   
  41c019:	sub    DWORD PTR [edx+edi*1],edi
  41c01c:	out    0xa0,eax
  41c01e:	pop    ss
  41c01f:	inc    ecx
  41c020:	nop
  41c021:	push   ds
  41c022:	cmp    BYTE PTR [esi],dh
  41c024:	out    dx,al
  41c025:	push   ecx
  41c026:	jecxz  0x41c048
  41c028:	mov    esp,0xef6e52ac
  41c02d:	pop    esp
  41c02e:	pop    esi
  41c02f:	ins    DWORD PTR es:[edi],dx
  41c030:	in     al,dx
  41c031:	jno    0x41bfe5
  41c033:	rcl    DWORD PTR ds:0x4b8c5a19,1
  41c039:	or     BYTE PTR [edi-0xbf429a6],0x60
  41c040:	dec    eax
  41c041:	mov    ah,0x15
  41c043:	or     cl,BYTE PTR [esi-0x59ae0b30]
  41c049:	mov    dh,0xc
  41c04b:	les    esp,FWORD PTR [eax-0x7415821d]
  41c051:	outs   dx,BYTE PTR ds:[esi]
  41c052:	popf   
  41c053:	mov    ch,0x62
  41c055:	in     eax,0xc8
  41c057:	cli    
  41c058:	mov    ebp,0x47b1a693
  41c05d:	addr16 dec ebx
  41c05f:	stos   DWORD PTR es:[edi],eax
  41c060:	push   ebx
  41c061:	or     eax,0x91149cad
  41c066:	adc    BYTE PTR [esi],0xf9
  41c069:	outs   dx,BYTE PTR ds:[esi]
  41c06a:	xchg   esp,eax
  41c06b:	jl     0x41c0eb
  41c06d:	jnp    0x41c084
  41c06f:	test   DWORD PTR [ecx-0x4377f03d],esp
  41c075:	inc    edx
  41c076:	xor    eax,0x8ba9eca7
  41c07b:	pop    esp
  41c07c:	jecxz  0x41c0ed
  41c07e:	sbb    eax,0x6b9b35ef
  41c083:	mov    ah,0xe3
  41c085:	jmp    DWORD PTR [esi]
  41c087:	les    edi,FWORD PTR [edx-0x4f]
  41c08a:	inc    eax
  41c08b:	xchg   DWORD PTR [ebx],eax
  41c08d:	or     dh,BYTE PTR [edx+esi*8+0x76]
  41c091:	shl    DWORD PTR [esi+esi*1-0x61],cl
  41c095:	xchg   ecx,eax
  41c096:	test   eax,esp
  41c098:	iret   
  41c099:	sub    BYTE PTR [edx],ah
  41c09b:	and    edi,eax
  41c09d:	adc    bl,BYTE PTR [edx]
  41c09f:	gs inc esp
  41c0a1:	jg     0x41c105
  41c0a3:	or     DWORD PTR [edi],esi
  41c0a5:	pop    ebp
  41c0a6:	shl    BYTE PTR [edi],0xff
  41c0a9:	xor    esi,DWORD PTR [eax+ebx*2-0x72]
  41c0ad:	pop    ebp
  41c0ae:	sbb    bh,BYTE PTR [ecx+0x14]
  41c0b1:	mov    ebx,DWORD PTR [edx+ebx*8]
  41c0b4:	test   al,0x84
  41c0b6:	(bad)  
  41c0b7:	adc    DWORD PTR [edi+ebp*8-0x2d],edx
  41c0bb:	bnd jae 0x41c0b6
  41c0be:	fcom   QWORD PTR [ebx-0x3a236fd6]
  41c0c4:	(bad)  
  41c0c5:	in     eax,dx
  41c0c6:	rol    DWORD PTR [ebp+0xff6c676],1
  41c0cc:	loope  0x41c14c
  41c0ce:	adc    BYTE PTR [eax-0x43],dh
  41c0d1:	outs   dx,DWORD PTR ds:[esi]
  41c0d2:	push   es
  41c0d3:	or     DWORD PTR [ecx+0x3b88a360],ecx
  41c0d9:	lods   al,BYTE PTR ds:[esi]
  41c0da:	sbb    eax,0xe2451b6
  41c0df:	ins    BYTE PTR es:[edi],dx
  41c0e0:	sub    ecx,ecx
  41c0e2:	jns    0x41c0a8
  41c0e4:	inc    edx
  41c0e5:	shl    BYTE PTR [ebp-0x61],cl
  41c0e8:	adc    DWORD PTR [eax-0x22],ebp
  41c0eb:	fst    QWORD PTR [edi-0x44ec8fd2]
  41c0f1:	repnz shr DWORD PTR [ebp+0x32b646ce],1
  41c0f8:	and    eax,DWORD PTR [eax+ecx*2+0x197b7696]
  41c0ff:	pusha  
  41c100:	push   0xff8ce290
  41c105:	mov    esp,0xf8d7827
  41c10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c10b:	adc    cl,BYTE PTR [ebx-0x47]
  41c10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c10f:	popa   
  41c110:	in     al,dx
  41c111:	arpl   WORD PTR [ebp*2-0x2e46370e],di
  41c118:	push   esp
  41c119:	push   ss
  41c11a:	and    BYTE PTR [eax+0x1a9d57e8],0xf0
  41c121:	push   eax
  41c123:	mov    ds:0xca551a96,eax
  41c128:	sbb    DWORD PTR [edx+0x4],esi
  41c12b:	cmp    DWORD PTR [esi],edx
  41c12d:	sahf   
  41c12e:	std    
  41c12f:	fdivp  st(7),st
  41c131:	pop    esp
  41c132:	and    DWORD PTR [edi+0x1758004c],ecx
  41c138:	iret   
  41c139:	push   cs
  41c13a:	xchg   edi,eax
  41c13b:	mov    fs,WORD PTR [esi-0x28a8cdff]
  41c141:	mov    esp,DWORD PTR [esi-0x70dc2a2f]
  41c147:	das    
  41c148:	cmp    DWORD PTR [esi],ebx
  41c14a:	push   0x967e8191
  41c14f:	retf   0x4b02
  41c152:	out    0x67,eax
  41c154:	sub    BYTE PTR [eax+0x76],dl
  41c157:	mov    cl,0xdd
  41c159:	dec    ecx
  41c15a:	inc    ecx
  41c15b:	fcmovnu st,st(0)
  41c15d:	sub    al,BYTE PTR [eax+0x3a5fd9c]
  41c163:	(bad)  
  41c164:	sub    DWORD PTR [ebp+0x69913286],esp
  41c16a:	cmc    
  41c16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16c:	daa    
  41c16d:	sub    al,BYTE PTR [ecx]
  41c16f:	xor    eax,0xd6d66e87
  41c174:	sub    ch,dh
  41c176:	ret    
  41c177:	mov    dl,0x41
  41c179:	ret    0xd287
  41c17c:	sbb    eax,DWORD PTR [eax-0x13]
  41c17f:	mov    edi,0x9050df91
  41c184:	xchg   ebp,eax
  41c185:	xor    BYTE PTR [esi+0x14eb9000],0xc7
  41c18c:	pop    ebx
  41c18d:	pushf  
  41c18e:	retf   
  41c18f:	scas   eax,DWORD PTR es:[edi]
  41c190:	(bad)  
  41c191:	in     eax,0x77
  41c193:	sar    cl,0x6b
  41c196:	xor    BYTE PTR [eax-0x3e],dl
  41c199:	push   ebx
  41c19a:	pop    esi
  41c19b:	mov    eax,ds:0x8d63ec57
  41c1a0:	xor    bl,BYTE PTR [eax+0x14]
  41c1a3:	jns    0x41c197
  41c1a5:	fcom   QWORD PTR [ecx]
  41c1a7:	mov    cl,0xdc
  41c1a9:	xor    al,0xc3
  41c1ab:	stc    
  41c1ac:	adc    al,BYTE PTR [eax-0x6d63d302]
  41c1b2:	icebp  
  41c1b3:	cwde   
  41c1b4:	dec    eax
  41c1b5:	aad    0xb8
  41c1b7:	call   0x704dccf0
  41c1bc:	dec    eax
  41c1bd:	and    BYTE PTR [eax+0x1],dh
  41c1c0:	arpl   WORD PTR [esi+0x56],bp
  41c1c3:	dec    esi
  41c1c4:	mov    eax,0xf7b89472
  41c1c9:	les    esi,FWORD PTR [ecx]
  41c1cb:	mov    al,0x3d
  41c1cd:	es cmc 
  41c1cf:	jg     0x41c248
  41c1d1:	out    dx,eax
  41c1d2:	retf   
  41c1d3:	dec    esp
  41c1d4:	push   esi
  41c1d5:	xchg   ebp,eax
  41c1d6:	pop    esp
  41c1d7:	cmp    bh,BYTE PTR [esi-0x14]
  41c1da:	jge    0x41c24f
  41c1dc:	lods   al,BYTE PTR ds:[esi]
  41c1dd:	adc    DWORD PTR [esi-0x4],edi
  41c1e0:	push   0x67c51fe0
  41c1e5:	daa    
  41c1e6:	push   cs
  41c1e7:	inc    ebp
  41c1e8:	pushf  
  41c1e9:	mov    ebp,0x35ccca73
  41c1ee:	add    eax,0x3672234b
  41c1f3:	xor    al,BYTE PTR [ebp-0x37b4aaf8]
  41c1f9:	push   0x5
  41c1fb:	(bad)  
  41c1fc:	dec    ah
  41c1fe:	ficomp WORD PTR [ecx+0x2dcb3329]
  41c204:	cli    
  41c205:	enter  0x74f,0x20
  41c209:	jo     0x41c216
  41c20b:	shr    DWORD PTR [ecx+0x4d],1
  41c20e:	popf   
  41c20f:	push   edx
  41c210:	pop    ss
  41c211:	push   ecx
  41c212:	and    edx,ecx
  41c214:	push   ss
  41c215:	cli    
  41c216:	test   BYTE PTR [eax+0x5ead76dc],dl
  41c21c:	ret    0x7a23
  41c21f:	jl     0x41c242
  41c221:	adc    cl,BYTE PTR [eax]
  41c223:	(bad)  
  41c225:	or     eax,edx
  41c227:	jbe    0x41c1b5
  41c229:	fstp   DWORD PTR [ecx]
  41c22b:	pop    ds
  41c22c:	xchg   bp,ax
  41c22e:	arpl   WORD PTR [eax+0x2a],ax
  41c231:	or     eax,0x1547d6b5
  41c236:	mov    ecx,0x78ca4893
  41c23b:	pop    eax
  41c23c:	dec    ebx
  41c23d:	loope  0x41c1fe
  41c23f:	mov    ch,0xd
  41c241:	stos   BYTE PTR es:[edi],al
  41c242:	adc    DWORD PTR [ebp-0x6cf533e7],esi
  41c248:	stos   DWORD PTR es:[edi],eax
  41c249:	cmp    al,0x83
  41c24b:	pop    ecx
  41c24c:	jg     0x41c28a
  41c24e:	iret   
  41c24f:	(bad)  
  41c250:	adc    esp,DWORD PTR [eax-0x23]
  41c253:	ret    0x9a27
  41c256:	test   esp,0x8c4747ca
  41c25c:	call   0x9519e6b4
  41c261:	shr    DWORD PTR [edx-0x2f],1
  41c264:	push   ebx
  41c265:	cmp    bh,BYTE PTR [ebx+0x32]
  41c268:	retf   0x61a0
  41c26b:	pop    esp
  41c26c:	mov    ds:0x1a918fde,eax
  41c271:	mov    eax,ebx
  41c273:	mov    al,0xb8
  41c275:	call   0xb99eea4b
  41c27a:	pop    ds
  41c27b:	xchg   ecx,eax
  41c27c:	(bad)  
  41c27d:	xlat   BYTE PTR ds:[ebx]
  41c27e:	jp     0x41c2d1
  41c280:	mov    dl,0xf4
  41c282:	mov    cl,0x2d
  41c284:	jl     0x41c280
  41c286:	pop    DWORD PTR [edi+eax*4]
  41c289:	pop    ds
  41c28a:	add    eax,0x6095415a
  41c28f:	outs   dx,BYTE PTR ds:[esi]
  41c290:	mov    al,ds:0xa05173ed
  41c295:	call   FWORD PTR [ebx+0x1b]
  41c298:	fdiv   st,st(5)
  41c29a:	fwait
  41c29b:	neg    BYTE PTR [esi+0x61]
  41c29e:	ins    DWORD PTR es:[edi],dx
  41c29f:	js     0x41c2a9
  41c2a1:	(bad)  
  41c2a2:	cli    
  41c2a3:	jmp    0x98cbe70b
  41c2a8:	imul   edx,DWORD PTR [ebx],0xffffff83
  41c2ab:	lods   al,BYTE PTR ds:[esi]
  41c2ac:	outs   dx,BYTE PTR ds:[esi]
  41c2ad:	ins    BYTE PTR es:[edi],dx
  41c2ae:	jo     0x41c2ce
  41c2b0:	push   ebx
  41c2b1:	call   DWORD PTR [edi+0xd3e40cc]
  41c2b7:	pop    ds
  41c2b8:	xor    al,BYTE PTR [ebx+0x5e]
  41c2bb:	push   edx
  41c2bc:	es test al,0x3
  41c2bf:	(bad)  
  41c2c0:	loop   0x41c30d
  41c2c2:	sub    DWORD PTR [edx],ecx
  41c2c4:	mov    eax,0x547e54a9
  41c2c9:	push   ds
  41c2ca:	pop    ss
  41c2cb:	outs   dx,BYTE PTR ds:[esi]
  41c2cc:	dec    esi
  41c2cd:	and    ecx,DWORD PTR [ebx]
  41c2cf:	fidivr WORD PTR [ebx+esi*4-0x76]
  41c2d3:	loop   0x41c2f7
  41c2d5:	std    
  41c2d6:	pop    esp
  41c2d7:	xchg   edi,eax
  41c2d8:	xor    BYTE PTR [eax+eiz*4+0x52],al
  41c2dc:	or     eax,0xd5f8066f
  41c2e1:	or     bh,BYTE PTR [ecx+0x3c]
  41c2e4:	into   
  41c2e5:	pushf  
  41c2e6:	xchg   edi,eax
  41c2e7:	push   esi
  41c2e8:	lock out dx,al
  41c2ea:	outs   dx,BYTE PTR ds:[esi]
  41c2eb:	cdq    
  41c2ec:	mov    eax,DWORD PTR [edi+esi*8]
  41c2ef:	cld    
  41c2f0:	or     al,0x65
  41c2f2:	mul    DWORD PTR [esi+ebx*4+0x73]
  41c2f6:	mov    eax,0xda88a49a
  41c2fb:	adc    ah,BYTE PTR [esi-0x21]
  41c2fe:	dec    ebx
  41c2ff:	inc    edi
  41c300:	jmp    DWORD PTR [edx]
  41c302:	mov    dl,0x32
  41c304:	dec    edx
  41c305:	jmp    0x3414:0x66010f5f
  41c30c:	sar    ecx,0xb6
  41c30f:	mov    bh,0xc9
  41c311:	pusha  
  41c312:	dec    edx
  41c313:	mov    cs,WORD PTR [esi-0x103df705]
  41c319:	mov    cl,0xbc
  41c31b:	inc    edx
  41c31c:	inc    edx
  41c31d:	pop    eax
  41c31e:	pop    ds
  41c31f:	dec    edi
  41c320:	aas    
  41c321:	and    eax,0xec185829
  41c326:	inc    eax
  41c327:	fmul   QWORD PTR [eax+ebp*4]
  41c32a:	retf   0x4989
  41c32d:	jns    0x41c367
  41c32f:	popf   
  41c330:	out    dx,eax
  41c331:	int3   
  41c332:	sub    bh,BYTE PTR fs:[edx-0x31b2c0ba]
  41c339:	bound  edi,QWORD PTR ds:0x8f5caac8
  41c33f:	jmp    0x9c79:0x3557d6c3
  41c346:	cmp    BYTE PTR [edx-0x2a],bl
  41c349:	push   ebp
  41c34a:	shl    DWORD PTR [edx-0x1dd70e41],1
  41c350:	out    dx,al
  41c351:	pop    ds
  41c352:	call   0xfc1027f6
  41c357:	cdq    
  41c358:	mov    edx,0x3fbddbcf
  41c35d:	adc    DWORD PTR [eax+esi*2+0x5bddc276],ecx
  41c364:	out    dx,al
  41c365:	(bad)  
  41c367:	fcmovnb st,st(2)
  41c369:	and    BYTE PTR [ebx+0x2cb8aef2],al
  41c36f:	(bad)  
  41c370:	cmp    dh,bh
  41c372:	push   ebx
  41c373:	loop   0x41c341
  41c375:	xor    DWORD PTR [edi],esp
  41c377:	mov    ebp,0x8a780fe
  41c37c:	lock adc eax,ecx
  41c37f:	das    
  41c380:	sub    eax,0x1605511a
  41c385:	lds    esi,FWORD PTR [esi]
  41c387:	jo     0x41c374
  41c389:	fld    TBYTE PTR [ebx+0x63]
  41c38c:	pop    edx
  41c38d:	push   ebp
  41c38e:	adc    eax,0xce527c48
  41c393:	mov    bh,cl
  41c395:	adc    dl,BYTE PTR [ecx+0x438e6ec8]
  41c39b:	mov    ds:0xda55df01,eax
  41c3a0:	aam    0xa1
  41c3a2:	fmul   DWORD PTR [ecx+0x19aa3b1d]
  41c3a8:	mov    ch,0xe1
  41c3aa:	lds    ebp,FWORD PTR [eax]
  41c3ac:	dec    eax
  41c3ad:	out    dx,eax
  41c3ae:	repz cwde 
  41c3b0:	test   eax,0x3a07b8df
  41c3b5:	outs   dx,DWORD PTR ds:[esi]
  41c3b6:	push   esp
  41c3b7:	push   esp
  41c3b8:	test   eax,0xd90ae3ac
  41c3bd:	jns    0x41c372
  41c3bf:	(bad)  
  41c3c0:	repnz xlat BYTE PTR ds:[ebx]
  41c3c2:	sbb    al,0x4b
  41c3c4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c3c6:	mov    eax,ds:0xa241f6b2
  41c3cb:	nop
  41c3cc:	push   ebp
  41c3cd:	push   es
  41c3ce:	inc    edi
  41c3cf:	ror    ch,0x62
  41c3d2:	dec    esp
  41c3d3:	outs   dx,BYTE PTR ds:[esi]
  41c3d4:	retf   
  41c3d5:	pop    esi
  41c3d6:	sbb    ebp,DWORD PTR [edi+0xe160865]
  41c3dc:	mov    al,ds:0x6e1141c4
  41c3e1:	mov    eax,0x87c05dbe
  41c3e6:	add    DWORD PTR [edx],0x5be9ab81
  41c3ec:	cdq    
  41c3ed:	cmp    ebp,DWORD PTR [esi]
  41c3ef:	jg     0x41c41c
  41c3f1:	adc    ebx,DWORD PTR [ebp-0x339737ae]
  41c3f7:	or     al,0x26
  41c3f9:	adc    esp,0xffffffac
  41c3fc:	fstp   QWORD PTR [ebx]
  41c3fe:	in     al,dx
  41c3ff:	aas    
  41c400:	cmp    al,0xa7
  41c402:	and    dh,al
  41c404:	data16 or dl,BYTE PTR [ebp-0x34]
  41c408:	pop    edx
  41c409:	inc    edi
  41c40a:	add    eax,DWORD PTR [eax-0x3d]
  41c40d:	out    0x10,al
  41c40f:	retf   0x66f5
  41c412:	xchg   edi,eax
  41c413:	fstp   st(0)
  41c415:	add    dl,al
  41c417:	sub    eax,0x9706a9f3
  41c41c:	loopne 0x41c3e3
  41c41e:	rcr    al,cl
  41c420:	shl    BYTE PTR [ecx],cl
  41c422:	mov    dl,BYTE PTR [edx]
  41c424:	in     eax,dx
  41c425:	xor    DWORD PTR [edi+0x7e],0xa0923f39
  41c42c:	mov    BYTE PTR [edi],dl
  41c42e:	xchg   edi,eax
  41c42f:	mov    eax,DWORD PTR [esi]
  41c431:	pop    es
  41c432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c433:	xchg   BYTE PTR [ecx+0x2a],cl
  41c436:	jnp    0x41c426
  41c438:	mov    eax,0x92ce49cd
  41c43d:	sub    eax,0x9cfb4bcb
  41c442:	mov    al,0xc9
  41c444:	outs   dx,BYTE PTR ds:[esi]
  41c445:	test   dl,al
  41c447:	and    al,0xd5
  41c449:	sub    DWORD PTR [ebp+0x7],edi
  41c44c:	mov    bl,ah
  41c44e:	aas    
  41c44f:	fidiv  WORD PTR [eax+0x64]
  41c452:	mul    esi
  41c454:	and    bh,cl
  41c456:	fsubr  DWORD PTR [edx]
  41c458:	jmp    0xdc1dd208
  41c45d:	mov    dl,0x3c
  41c45f:	test   BYTE PTR [ebp-0x47f5cb2b],cl
  41c465:	test   eax,0x9e0408fa
  41c46a:	push   0xbf04faa1
  41c46f:	mov    ebp,0xb521ea86
  41c474:	mov    WORD PTR [eax],fs
  41c476:	inc    edx
  41c477:	int3   
  41c478:	cmp    DWORD PTR [edx+0x3f3a6a2],eax
  41c47e:	jmp    0xdf941f0a
  41c483:	cli    
  41c484:	pop    ebx
  41c485:	retf   0x9629
  41c488:	mov    eax,ds:0x3a7380d6
  41c48d:	push   ss
  41c48e:	pushf  
  41c48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c490:	pop    edx
  41c491:	inc    edx
  41c492:	loop   0x41c4bf
  41c494:	push   ebp
  41c495:	mov    dh,0xe3
  41c497:	add    DWORD PTR [ecx-0x5c],ebx
  41c49a:	inc    esp
  41c49b:	retf   0xefb3
  41c49e:	adc    eax,0x14695044
  41c4a3:	mov    esi,0xff4d4701
  41c4a8:	es scas eax,DWORD PTR es:[edi]
  41c4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ab:	in     al,dx
  41c4ac:	jne    0x41c529
  41c4ae:	push   ecx
  41c4af:	cmp    cl,BYTE PTR [edx]
  41c4b1:	shl    ah,0xb1
  41c4b4:	xor    BYTE PTR [ecx+edx*1-0x4a],dh
  41c4b8:	sub    ebp,DWORD PTR [esi-0x41f31ae6]
  41c4be:	cmp    eax,0x94dbbff4
  41c4c3:	fwait
  41c4c4:	aad    0x47
  41c4c6:	(bad)  
  41c4c7:	out    0xee,al
  41c4c9:	aad    0x5e
  41c4cb:	or     al,0x0
  41c4cd:	and    ah,0x3d
  41c4d0:	cmp    al,0x16
  41c4d2:	in     al,0x32
  41c4d4:	cmp    bh,BYTE PTR [ebx+0x44f5a078]
  41c4da:	fcmovnbe st,st(4)
  41c4dc:	clc    
  41c4dd:	and    ebp,DWORD PTR [ecx+0x400185dc]
  41c4e3:	pop    edi
  41c4e4:	mov    ah,0xf3
  41c4e6:	xchg   ebp,eax
  41c4e7:	jmp    0x470b:0xa795c273
  41c4ee:	sahf   
  41c4ef:	popa   
  41c4f0:	out    0x1b,eax
  41c4f2:	xor    DWORD PTR [esi+0x19fb36fc],0x5024b5c4
  41c4fc:	push   eax
  41c4fd:	int3   
  41c4fe:	xor    DWORD PTR [ecx+0x747acec0],0x6664d9dd
  41c508:	mov    al,0x3c
  41c50a:	popa   
  41c50b:	dec    esi
  41c50c:	ror    ah,0x1
  41c50f:	retf   
  41c510:	inc    edx
  41c511:	push   ecx
  41c512:	les    esp,FWORD PTR [edi+0x5ce92699]
  41c518:	popa   
  41c519:	lods   eax,DWORD PTR ds:[esi]
  41c51a:	ficomp WORD PTR [ecx+0x40]
  41c51d:	push   eax
  41c51e:	sahf   
  41c51f:	fdiv   st(5),st
  41c521:	imul   edi,DWORD PTR [edi+0x24],0x8c0d1405
  41c528:	retf   
  41c529:	shl    ecx,0xe5
  41c52c:	loope  0x41c5a2
  41c52e:	jae    0x41c54f
  41c530:	adc    al,0x55
  41c532:	mov    eax,0x79c8aaf1
  41c537:	jmp    0x41c51e
  41c539:	div    edx
  41c53b:	ins    BYTE PTR es:[edi],dx
  41c53c:	inc    ebp
  41c53d:	call   0x6c93:0xba8d938
  41c544:	pop    ds
  41c545:	pop    esi
  41c546:	sbb    al,0x86
  41c548:	fsubr  QWORD PTR [edi+esi*1+0x4df1c302]
  41c54f:	jmp    0x41c567
  41c551:	dec    ebp
  41c552:	in     eax,dx
  41c553:	push   ebx
  41c554:	in     al,0x33
  41c556:	gs ret 
  41c558:	pop    eax
  41c559:	add    DWORD PTR [ebx],esp
  41c55b:	mov    BYTE PTR [edx-0x21],0xb9
  41c55f:	fsubr  st,st(5)
  41c561:	clc    
  41c562:	cmp    DWORD PTR [edx],edx
  41c564:	repz loope 0x41c54e
  41c567:	out    0x9b,al
  41c569:	jle    0x41c5c0
  41c56b:	xchg   BYTE PTR [ebx],ch
  41c56d:	and    DWORD PTR [ecx+0x6d],0xffffffc0
  41c571:	push   esp
  41c572:	mov    ecx,0x590b5a1e
  41c577:	in     eax,dx
  41c578:	jmp    0xdf58:0x300cb213
  41c57f:	mov    DWORD PTR [ecx],esi
  41c581:	mov    esp,0xf5aeb21a
  41c586:	sbb    dh,BYTE PTR [esp+eax*2-0x1a]
  41c58a:	jb     0x41c5e4
  41c58c:	pop    es
  41c58d:	cmp    ebp,DWORD PTR [edx]
  41c58f:	call   0x2199ab76
  41c594:	cmp    eax,0x75e51781
  41c599:	mov    edx,0x7d55b8c2
  41c59e:	lods   al,BYTE PTR ds:[esi]
  41c59f:	repnz out 0x5a,eax
  41c5a2:	cmp    bh,BYTE PTR [ecx+0x2e]
  41c5a5:	jne    0x41c5d0
  41c5a7:	pop    edi
  41c5a8:	hlt    
  41c5a9:	call   0x25661275
  41c5ae:	loopne 0x41c5ab
  41c5b0:	icebp  
  41c5b1:	mov    bh,bh
  41c5b3:	retf   0xdcb
  41c5b6:	pop    ebp
  41c5b7:	into   
  41c5b8:	cmp    ecx,DWORD PTR [esi-0x27887a3d]
  41c5be:	lods   al,BYTE PTR ds:[esi]
  41c5bf:	add    ah,BYTE PTR [ebp-0xd]
  41c5c2:	(bad)  
  41c5c3:	call   0x65149d3b
  41c5c8:	mov    ah,0x86
  41c5ca:	jle    0x41c5ae
  41c5cc:	jmp    0xdcb6:0xfc18
  41c5d2:	xor    esp,DWORD PTR [esi]
  41c5d4:	out    0xf2,eax
  41c5d6:	or     edi,0x739d6134
  41c5dc:	cmp    BYTE PTR [edx+0x20044a6e],bh
  41c5e2:	(bad)  
  41c5e3:	xor    dl,BYTE PTR [edi]
  41c5e5:	adc    ebx,DWORD PTR [ebx+0x1c2fef15]
  41c5eb:	sub    al,0x38
  41c5ed:	or     al,0x1e
  41c5ef:	mov    ebp,0xf998aa09
  41c5f4:	out    dx,al
  41c5f5:	sbb    al,0xca
  41c5f7:	inc    edx
  41c5f8:	daa    
  41c5f9:	sbb    ebx,ebx
  41c5fb:	neg    esp
  41c5fd:	adc    esi,DWORD PTR [edx+esi*4+0x74]
  41c601:	sub    esi,ebp
  41c603:	or     BYTE PTR [edx],dl
  41c605:	ret    
  41c606:	mov    esi,0x3962e0b8
  41c60b:	push   ss
  41c60c:	icebp  
  41c60d:	mov    eax,0x6a42bb04
  41c612:	inc    edi
  41c613:	xor    DWORD PTR [ecx-0x32f7c3b7],edi
  41c619:	sbb    al,0x18
  41c61b:	les    ebp,FWORD PTR [ecx]
  41c61d:	add    BYTE PTR [eax-0x75],0x86
  41c621:	cdq    
  41c622:	nop
  41c623:	xor    dl,ch
  41c625:	out    0x2,eax
  41c627:	(bad)  
  41c628:	out    dx,al
  41c629:	inc    esi
  41c62a:	adc    ebp,eax
  41c62c:	mov    WORD PTR ds:0xa67c2ac2,cs
  41c632:	repnz cs push cs
  41c635:	enter  0xe5f7,0xbd
  41c639:	hlt    
  41c63a:	jecxz  0x41c622
  41c63c:	jno    0x41c5c9
  41c63e:	fs mov dh,0x72
  41c641:	dec    ebp
  41c642:	int    0xf8
  41c644:	dec    eax
  41c645:	sub    BYTE PTR [eax+0x4f0c343],dl
  41c64b:	(bad)  
  41c64c:	sahf   
  41c64d:	xchg   edx,eax
  41c64e:	ins    BYTE PTR es:[edi],dx
  41c64f:	scas   al,BYTE PTR es:[edi]
  41c650:	shr    DWORD PTR [ebp-0x739a3618],0xa0
  41c657:	pop    ds
  41c658:	outs   dx,DWORD PTR ds:[esi]
  41c659:	add    eax,0x7d5ef7b
  41c65e:	push   ecx
  41c65f:	and    ch,BYTE PTR [edi+0x13cce38d]
  41c665:	fs jl  0x41c667
  41c668:	sbb    al,dl
  41c66a:	(bad)  
  41c66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c66c:	ret    
  41c66d:	cmc    
  41c66e:	gs inc esi
  41c670:	xchg   esp,eax
  41c671:	lea    edi,ds:0xf65705c3
  41c677:	pop    esi
  41c678:	test   eax,0x370432f2
  41c67d:	aad    0x8b
  41c67f:	loope  0x41c6aa
  41c681:	and    BYTE PTR [esi],ch
  41c683:	lea    ebp,[esi]
  41c685:	das    
  41c686:	push   ebp
  41c687:	mov    ebp,0xaa95516f
  41c68c:	ret    
  41c68d:	pushf  
  41c68e:	les    edx,FWORD PTR ds:0xb28e916e
  41c694:	push   0xd77f3c2c
  41c699:	add    DWORD PTR [edx],0x1d
  41c69c:	sub    dh,BYTE PTR [eax]
  41c69e:	nop
  41c69f:	push   es
  41c6a0:	test   DWORD PTR [bp-0x26],ecx
  41c6a4:	out    dx,eax
  41c6a5:	jns    0x41c722
  41c6a7:	pop    ds
  41c6a8:	push   esp
  41c6a9:	dec    ecx
  41c6aa:	dec    ecx
  41c6ab:	xchg   dl,ch
  41c6ad:	sar    esp,0x54
  41c6b0:	and    DWORD PTR [eax+0x35a61ef4],edi
  41c6b6:	popa   
  41c6b7:	aaa    
  41c6b8:	repz inc esp
  41c6ba:	add    ecx,DWORD PTR [eax-0x35d33602]
  41c6c0:	xchg   BYTE PTR [eax],dh
  41c6c2:	adc    DWORD PTR [ebp+eiz*2+0x28],0x47564b60
  41c6ca:	and    ecx,DWORD PTR [ebp-0x38]
  41c6cd:	mov    ds:0x6f1c6c3d,eax
  41c6d2:	add    BYTE PTR [ebx+0x4489114f],bh
  41c6d8:	cmp    DWORD PTR ds:0xcb89f112,edi
  41c6de:	cs mov ebx,0xd0ed5d02
  41c6e4:	imul   edx,ebx,0x6623855c
  41c6ea:	leave  
  41c6eb:	inc    esp
  41c6ec:	fstp   TBYTE PTR [esi]
  41c6ee:	out    dx,eax
  41c6ef:	arpl   WORD PTR gs:[eax-0x8],cx
  41c6f3:	adc    DWORD PTR [edx+0x8c9923d],edx
  41c6f9:	inc    esp
  41c6fa:	vpaddsw ymm6,ymm6,YMMWORD PTR [esi-0x16]
  41c6ff:	ret    0x8f40
  41c702:	iret   
  41c703:	clc    
  41c704:	push   edx
  41c705:	aad    0x2e
  41c707:	push   ss
  41c708:	in     eax,0x20
  41c70a:	xor    al,0xdc
  41c70c:	in     al,0xfb
  41c70e:	push   esp
  41c70f:	repz push ecx
  41c711:	data16 mov ch,0xce
  41c714:	jns    0x41c773
  41c716:	xchg   esi,eax
  41c717:	mov    al,0xe2
  41c719:	xchg   ebx,eax
  41c71a:	retf   0x8be0
  41c71d:	mov    edx,0x9643dfbd
  41c722:	(bad)  
  41c723:	(bad)  
  41c724:	or     eax,0x77126d9b
  41c729:	mov    eax,0xda2134b6
  41c72e:	aam    0xf9
  41c730:	cmp    dh,cl
  41c732:	push   eax
  41c733:	mov    dh,0x5d
  41c735:	fidiv  DWORD PTR [ebp+0x1286ecb5]
  41c73b:	add    al,0x69
  41c73d:	loop   0x41c7b5
  41c73f:	mov    edi,DWORD PTR ds:0xd37e0eb8
  41c745:	jg     0x41c76a
  41c747:	daa    
  41c748:	sbb    ecx,DWORD PTR [edi+ebp*2+0x49]
  41c74c:	pop    ds
  41c74d:	shr    DWORD PTR [ebx],0xc6
  41c750:	loop   0x41c72d
  41c752:	fist   DWORD PTR [esi-0x1133dc4f]
  41c758:	or     eax,0xfaca2c9d
  41c75d:	aas    
  41c75e:	call   0x450a:0x49c1d925
  41c765:	mov    ch,0x7a
  41c767:	cmp    eax,0x2dd17a29
  41c76c:	jnp    0x41c709
  41c76e:	sti    
  41c76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c770:	je     0x41c753
  41c772:	mov    al,0x12
  41c774:	push   0x7e
  41c776:	dec    ecx
  41c777:	test   eax,0x66cfed67
  41c77c:	jb     0x41c7ed
  41c77e:	xchg   ecx,eax
  41c77f:	dec    eax
  41c780:	pop    edi
  41c781:	mov    eax,0x308efc27
  41c786:	push   edx
  41c787:	cmp    edx,DWORD PTR [edi+0x34b4a91]
  41c78d:	dec    ebx
  41c78e:	or     eax,0x66e585e2
  41c793:	inc    ebx
  41c794:	push   0xffffffde
  41c796:	push   es
  41c797:	mov    ?,WORD PTR [ecx+0x35c12ef8]
  41c79d:	repnz sahf 
  41c79f:	mov    bh,0x44
  41c7a1:	xlat   BYTE PTR ds:[ebx]
  41c7a2:	mov    esp,0x5b883977
  41c7a7:	inc    esi
  41c7a9:	shl    dh,0xd2
  41c7ac:	retf   
  41c7ad:	js     0x41c802
  41c7af:	and    eax,0xf628fc25
  41c7b4:	clc    
  41c7b5:	nop
  41c7b6:	and    ebx,DWORD PTR [ebp+edx*2-0x4c]
  41c7ba:	sbb    al,bh
  41c7bc:	fs jo  0x41c7bf
  41c7bf:	dec    edi
  41c7c0:	add    DWORD PTR [eax],eax
  41c7c2:	mov    ebp,0xf6a83b0f
  41c7c7:	aas    
  41c7c8:	or     edx,0x35542ec4
  41c7ce:	xchg   esp,eax
  41c7cf:	adc    al,0x7c
  41c7d1:	fsub   st,st(4)
  41c7d3:	leave  
  41c7d4:	daa    
  41c7d5:	pop    ecx
  41c7d6:	xchg   BYTE PTR [eax+0xe1ca8a5],ch
  41c7dc:	dec    si
  41c7de:	clc    
  41c7df:	sbb    al,0x3d
  41c7e1:	jmp    0x6677:0x9e1c8f04
  41c7e8:	clc    
  41c7e9:	lods   eax,DWORD PTR ds:[esi]
  41c7ea:	pcmpeqw mm6,QWORD PTR [edi+0x3f]
  41c7ee:	out    0xc4,al
  41c7f0:	ficomp DWORD PTR [ebp-0x48]
  41c7f3:	add    eax,0x9810642
  41c7f8:	xchg   ebx,eax
  41c7f9:	stos   BYTE PTR es:[edi],al
  41c7fa:	mov    ah,0x19
  41c7fc:	push   0xffffffe1
  41c7fe:	or     DWORD PTR ds:0x95b4821,esi
  41c804:	or     DWORD PTR [edx+0x44f7957b],edx
  41c80a:	push   ecx
  41c80b:	and    DWORD PTR [edi+0x117bc6d8],ebx
  41c811:	gs mov al,0xc2
  41c814:	xchg   DWORD PTR [esi],edi
  41c816:	js     0x41c850
  41c818:	xor    dl,0x9b
  41c81b:	sbb    cl,ch
  41c81d:	pop    ss
  41c81e:	dec    ecx
  41c81f:	inc    eax
  41c820:	outs   dx,DWORD PTR ds:[esi]
  41c821:	pop    es
  41c822:	jmp    0xf4cc:0x80fa7bcc
  41c829:	mov    ds:0x5a4349dc,al
  41c82e:	and    cl,ch
  41c830:	mov    bl,bl
  41c832:	fisttp QWORD PTR [eax-0x24f9e37e]
  41c838:	xchg   esp,eax
  41c839:	add    BYTE PTR [edi],dl
  41c83b:	sub    al,0x4d
  41c83d:	cmp    eax,0x1b025a43
  41c842:	push   ebp
  41c843:	sti    
  41c844:	adc    BYTE PTR [esi],ah
  41c846:	jns    0x41c80f
  41c848:	ficomp DWORD PTR [esi-0x107bdfc5]
  41c84e:	xor    esp,ebp
  41c850:	inc    ebx
  41c851:	inc    eax
  41c852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c853:	xor    ebx,edi
  41c855:	dec    esi
  41c856:	sub    ch,BYTE PTR [ebx]
  41c858:	mov    eax,ds:0xd6e343fe
  41c85d:	or     al,0xe9
  41c85f:	leave  
  41c860:	adc    eax,DWORD PTR [edx+0x50cf5d85]
  41c866:	pop    edi
  41c867:	sar    DWORD PTR [edx],cl
  41c869:	loopne 0x41c867
  41c86b:	nop
  41c86c:	push   0x2
  41c86e:	ret    
  41c86f:	dec    ebp
  41c870:	in     al,dx
  41c871:	out    0xbc,al
  41c873:	sbb    bh,cl
  41c875:	icebp  
  41c876:	pop    esp
  41c877:	pop    edx
  41c878:	mov    bh,0x90
  41c87a:	xchg   BYTE PTR [esi+0x4a],bh
  41c87d:	and    DWORD PTR [ebx],0xdf009f21
  41c883:	xor    al,0x61
  41c885:	pushf  
  41c886:	in     eax,0xde
  41c888:	(bad)
  41c88c:	push   es
  41c88d:	jo     0x41c8d1
  41c88f:	jl     0x41c824
  41c891:	add    BYTE PTR [eax-0x31981f59],dl
  41c897:	inc    ebx
  41c898:	fs out dx,al
  41c89a:	inc    edi
  41c89b:	mov    cl,0xfd
  41c89d:	ins    DWORD PTR es:[edi],dx
  41c89e:	lock sub BYTE PTR [eax-0x7dc41781],cl
  41c8a5:	jbe    0x41c8a5
  41c8a7:	enter  0x879b,0x87
  41c8ab:	or     dl,BYTE PTR [ebx+0x2019af8b]
  41c8b1:	cmp    BYTE PTR [edi-0x1d],0x54
  41c8b5:	cmc    
  41c8b6:	in     eax,0x3
  41c8b8:	iret   
  41c8b9:	cmp    bh,cl
  41c8bb:	fld    QWORD PTR [edi-0x454beeb7]
  41c8c1:	mov    al,ds:0x8be88fad
  41c8c6:	arpl   WORD PTR [esi-0x6eb7f34],ax
  41c8cc:	icebp  
  41c8cd:	xor    eax,DWORD PTR [eax]
  41c8cf:	pusha  
  41c8d0:	and    al,0x94
  41c8d2:	dec    ebp
  41c8d3:	pop    ss
  41c8d4:	add    ah,0x5b
  41c8d7:	jmp    0xb609:0xeba33b47
  41c8de:	jb     0x41c94f
  41c8e0:	cmp    edi,ebp
  41c8e2:	scas   al,BYTE PTR es:[edi]
  41c8e3:	pop    ebp
  41c8e4:	jbe    0x41c86e
  41c8e6:	jle    0x41c8cc
  41c8e8:	pop    ecx
  41c8e9:	xchg   edi,eax
  41c8ea:	out    0x76,al
  41c8ec:	shl    DWORD PTR [eax],1
  41c8ee:	hlt    
  41c8ef:	adc    eax,0xef1626c9
  41c8f4:	jns    0x41c94b
  41c8f6:	add    cl,bl
  41c8f8:	mov    edx,DWORD PTR [ecx]
  41c8fa:	icebp  
  41c8fb:	cmp    esp,DWORD PTR [edx+0x15b85820]
  41c901:	or     DWORD PTR [ecx+edx*2],eax
  41c904:	(bad)  
  41c905:	out    dx,eax
  41c906:	xor    bl,BYTE PTR [ebx-0x4a9f6cbf]
  41c90c:	fcmovb st,st(3)
  41c90e:	das    
  41c90f:	js     0x41c911
  41c911:	ror    eax,1
  41c913:	lea    ebx,[ebp+0x4bebc04]
  41c919:	mov    al,0xbe
  41c91b:	and    eax,0x82150d6f
  41c920:	test   DWORD PTR [edx],edi
  41c922:	shl    BYTE PTR [ecx+0x4d],1
  41c925:	adc    eax,DWORD PTR [ebx]
  41c927:	add    ah,BYTE PTR [eax+0x515a581c]
  41c92d:	idiv   cl
  41c92f:	cmp    ch,BYTE PTR [ebx]
  41c931:	sub    BYTE PTR [edi],0x84
  41c934:	popf   
  41c935:	outs   dx,BYTE PTR ss:[esi]
  41c937:	pop    edi
  41c938:	jecxz  0x41c978
  41c93a:	jecxz  0x41c936
  41c93c:	sub    al,0xcf
  41c93e:	mov    esp,0xadcc7688
  41c943:	cli    
  41c944:	pop    ds
  41c945:	ins    BYTE PTR es:[edi],dx
  41c946:	fsub   QWORD PTR [ebp-0x3104cf9a]
  41c94c:	pusha  
  41c94d:	pushf  
  41c94e:	sbb    BYTE PTR [eax+eax*4+0x4b9936c6],ch
  41c955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c956:	and    eax,0x9bb89316
  41c95b:	and    eax,0x1fc9d0e6
  41c960:	in     al,0x88
  41c962:	inc    edi
  41c963:	xor    DWORD PTR [ecx+ebp*8],ebx
  41c966:	fisttp DWORD PTR [ebp+0x31]
  41c96a:	hlt    
  41c96b:	outs   dx,DWORD PTR ds:[esi]
  41c96c:	xchg   edx,eax
  41c96d:	xchg   ecx,eax
  41c96e:	jmp    0x41c8f9
  41c970:	mov    esp,0xef54aa8e
  41c975:	inc    edx
  41c976:	jecxz  0x41c9ef
  41c978:	loop   0x41c8ff
  41c97a:	mov    cl,0x89
  41c97c:	in     al,0xea
  41c97e:	dec    esp
  41c97f:	fdivr  st(7),st
  41c981:	loopne 0x41c98e
  41c983:	push   ss
  41c984:	ins    BYTE PTR es:[edi],dx
  41c985:	mov    bl,0x24
  41c987:	inc    edx
  41c988:	push   edi
  41c989:	jnp    0x41c9ca
  41c98b:	loopne 0x41c945
  41c98d:	dec    edi
  41c98e:	xor    al,0x85
  41c990:	call   0xabab981b
  41c995:	xor    eax,0x69175597
  41c99a:	ins    DWORD PTR es:[edi],dx
  41c99b:	mov    cs:0xe7872146,eax
  41c9a1:	sub    al,0xbb
  41c9a3:	mov    ebp,0xe7e34eb5
  41c9a8:	pusha  
  41c9a9:	in     eax,0x15
  41c9ab:	icebp  
  41c9ac:	lea    eax,[ecx]
  41c9ae:	xchg   ecx,eax
  41c9af:	sub    eax,0xc799e29d
  41c9b4:	sahf   
  41c9b5:	lahf   
  41c9b6:	out    0x32,eax
  41c9b8:	(bad)  
  41c9b9:	mov    eax,0xf07b87c0
  41c9be:	xchg   edx,eax
  41c9bf:	or     esi,DWORD PTR [esp]
  41c9c2:	pop    edx
  41c9c3:	adc    al,0x5e
  41c9c5:	xor    bh,BYTE PTR [ebx*8-0x66a97154]
  41c9cc:	pop    ss
  41c9cd:	mov    ebx,0xfb29d092
  41c9d2:	and    edx,ebp
  41c9d4:	mov    al,0x48
  41c9d6:	xor    BYTE PTR [ebp-0x2c70357d],0x1a
  41c9dd:	cmc    
  41c9de:	hlt    
  41c9df:	gs push ds
  41c9e1:	mov    edx,edx
  41c9e3:	dec    ebp
  41c9e4:	inc    ecx
  41c9e5:	push   esp
  41c9e6:	inc    edi
  41c9e7:	pop    edx
  41c9e8:	or     BYTE PTR [edi+0x6ecc9111],al
  41c9ee:	daa    
  41c9ef:	jmp    0x41c9c1
  41c9f1:	ds out 0xf5,eax
  41c9f4:	dec    ecx
  41c9f5:	arpl   WORD PTR [ecx-0x51],ax
  41c9f8:	lock cmp bl,bl
  41c9fb:	fdivr  QWORD PTR ds:0xe18e6eef
  41ca01:	mov    ebx,0x687886d5
  41ca06:	sub    DWORD PTR [edi-0x19a27788],esi
  41ca0c:	mov    ebx,0xab878cb4
  41ca11:	mov    ebp,0x954e6879
  41ca16:	lods   eax,DWORD PTR ds:[esi]
  41ca17:	shl    ebx,cl
  41ca19:	xchg   ebp,eax
  41ca1a:	sbb    edx,edi
  41ca1c:	xchg   edi,eax
  41ca1d:	aas    
  41ca1e:	sbb    esp,DWORD PTR [bx+di]
  41ca21:	mov    esp,0x68679459
  41ca26:	out    dx,eax
  41ca27:	mov    al,ds:0xbbc92a43
  41ca2c:	sbb    dl,BYTE PTR [ebx+edx*1]
  41ca2f:	or     ebp,DWORD PTR [eax-0x1ad5c037]
  41ca35:	hlt    
  41ca36:	popf   
  41ca37:	pop    edx
  41ca38:	js     0x41ca66
  41ca3a:	and    eax,0xeeb5623e
  41ca3f:	xchg   DWORD PTR [ebp+eax*1-0x1b0e1e37],ecx
  41ca46:	add    BYTE PTR [edi+ebx*1-0x33589c],dl
  41ca4d:	inc    eax
  41ca4e:	jecxz  0x41caab
  41ca50:	dec    ecx
  41ca51:	cli    
  41ca52:	ss mov al,0x7e
  41ca55:	sub    al,0x74
  41ca57:	nop
  41ca58:	jmp    0x41ca25
  41ca5a:	fs inc ecx
  41ca5c:	out    0xe0,al
  41ca5e:	gs xchg edi,eax
  41ca60:	adc    al,0x94
  41ca62:	dec    edx
  41ca63:	mov    ebx,0x8bc73e78
  41ca68:	sub    al,0x27
  41ca6a:	les    esi,FWORD PTR [ebx]
  41ca6c:	hlt    
  41ca6d:	and    eax,0xf2a9841d
  41ca72:	adc    DWORD PTR ds:0x6f979a12,edx
  41ca78:	ficom  DWORD PTR [ecx]
  41ca7a:	pop    ss
  41ca7b:	sub    dl,dh
  41ca7d:	jmp    0x7ed6:0x1fbbd09c
  41ca84:	arpl   WORD PTR [ecx],bp
  41ca86:	or     bl,BYTE PTR [ebx-0x2dc7dd18]
  41ca8c:	daa    
  41ca8d:	push   ebx
  41ca8e:	mov    edi,0xd04b5155
  41ca93:	sub    bh,BYTE PTR [eax]
  41ca95:	aas    
  41ca96:	jecxz  0x41ca85
  41ca98:	adc    al,0xe0
  41ca9a:	push   edi
  41ca9b:	pop    ebx
  41ca9c:	xor    ch,cl
  41ca9e:	push   ecx
  41ca9f:	loopne 0x41ca36
  41caa1:	pushf  
  41caa2:	mov    BYTE PTR [edx-0x14fc3e4b],cl
  41caa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caa9:	and    al,0x93
  41caab:	inc    esi
  41caac:	mov    ebx,0x2b9583f6
  41cab1:	jmp    0x41ca83
  41cab3:	repz les ebx,FWORD PTR [ebx+0x32]
  41cab7:	add    ebp,DWORD PTR [edx+edx*1+0x6bde6384]
  41cabe:	dec    ebx
  41cabf:	add    DWORD PTR [ebp-0x1a],esp
  41cac2:	mov    ebx,0x38a77e55
  41cac7:	sbb    DWORD PTR [esp+ebx*4],edx
  41caca:	sub    ch,BYTE PTR [ebx+edx*2]
  41cacd:	daa    
  41cace:	xchg   edx,eax
  41cacf:	ja     0x41cae8
  41cad1:	retf   
  41cad2:	aad    0xb4
  41cad4:	std    
  41cad5:	inc    ecx
  41cad6:	jae    0x41cae7
  41cad8:	push   ss
  41cad9:	ffree  st(5)
  41cadb:	cmc    
  41cadc:	jo     0x41ca8e
  41cade:	inc    esp
  41cadf:	mov    bh,0x4c
  41cae1:	sbb    BYTE PTR [ecx-0x77c9cd4f],dh
  41cae7:	inc    ebx
  41cae8:	fdivr  QWORD PTR [ebx-0x5fa84309]
  41caee:	fistp  WORD PTR [edi+eiz*8]
  41caf1:	push   0x31
  41caf3:	fisubr DWORD PTR [eax+0x42]
  41caf6:	lds    eax,FWORD PTR [esi+0x6df180a2]
  41cafc:	ins    DWORD PTR es:[edi],dx
  41cafd:	stc    
  41cafe:	std    
  41caff:	push   ebp
  41cb00:	arpl   WORD PTR [ecx-0x4],sp
  41cb03:	add    DWORD PTR [eax-0x714f433e],0xfffffffc
  41cb0a:	push   DWORD PTR [edi+ebx*8-0x2e]
  41cb0e:	jp     0x41caf2
  41cb10:	ins    BYTE PTR es:[edi],dx
  41cb11:	dec    ebx
  41cb12:	lods   al,BYTE PTR ds:[esi]
  41cb13:	imul   DWORD PTR ds:0xd5162b36
  41cb19:	cli    
  41cb1a:	sbb    al,0x3d
  41cb1c:	jns    0x41cb4d
  41cb1e:	sti    
  41cb1f:	bound  edi,QWORD PTR [ecx+0x49]
  41cb22:	pop    ecx
  41cb23:	data16 std 
  41cb25:	std    
  41cb26:	pop    ss
  41cb27:	addr16 loopne 0x41cb7e
  41cb2a:	add    DWORD PTR [edx],0x60071384
  41cb30:	lods   eax,DWORD PTR ds:[esi]
  41cb31:	(bad)  
  41cb33:	push   edx
  41cb34:	xchg   esi,eax
  41cb35:	and    al,0xdb
  41cb37:	(bad)  
  41cb38:	pop    ebx
  41cb39:	inc    esp
  41cb3a:	sahf   
  41cb3b:	shr    BYTE PTR es:[ebx-0x73359ccd],1
  41cb42:	and    bh,BYTE PTR [edi+0x1f]
  41cb45:	cvtpi2ps xmm1,mm1
  41cb48:	mov    al,ds:0x178eb51d
  41cb4d:	pop    ebp
  41cb4e:	jae    0x41cb18
  41cb50:	js     0x41cb55
  41cb52:	ret    
  41cb53:	mov    al,ds:0xc74a947c
  41cb58:	jo     0x41cbb4
  41cb5a:	mov    bh,0x23
  41cb5c:	push   esp
  41cb5d:	stos   BYTE PTR es:[edi],al
  41cb5e:	fsub   DWORD PTR [esp+ebx*8]
  41cb61:	adc    al,0x4c
  41cb63:	ds in  al,dx
  41cb65:	imul   ecx,esi,0x3c
  41cb68:	shl    DWORD PTR [eax-0x2d],cl
  41cb6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb6c:	(bad)  
  41cb6d:	lahf   
  41cb6e:	loope  0x41cbb2
  41cb70:	inc    edi
  41cb71:	and    ah,al
  41cb73:	repz jne 0x41cb9f
  41cb76:	(bad)  
  41cb77:	outs   dx,BYTE PTR ds:[esi]
  41cb78:	and    dl,BYTE PTR [ecx]
  41cb7a:	push   0xd9ff2df
  41cb7f:	or     BYTE PTR [esi],bh
  41cb81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb82:	rcr    esp,0xa6
  41cb85:	out    dx,eax
  41cb86:	rcl    BYTE PTR [edx-0x1d44b159],0xbc
  41cb8d:	addr16 je 0x41cbe1
  41cb90:	jle    0x41cb6d
  41cb92:	in     al,0x8
  41cb94:	bnd jg 0x41cc0c
  41cb97:	cmp    DWORD PTR [edi+0x11732299],ebp
  41cb9d:	and    DWORD PTR [ebp+0x31d07882],esp
  41cba3:	mov    eax,ds:0xaac19b8f
  41cba8:	int    0x6b
  41cbaa:	add    esi,eax
  41cbac:	inc    edx
  41cbad:	enter  0x8e96,0xaf
  41cbb1:	(bad)  
  41cbb3:	sub    BYTE PTR [eax],0xdb
  41cbb6:	xor    al,bl
  41cbb8:	jb     0x41cc08
  41cbba:	call   0xe85e6bbd
  41cbbf:	scas   eax,DWORD PTR es:[edi]
  41cbc0:	push   0x844e0ab
  41cbc5:	(bad)  
  41cbc6:	bnd js 0x41cc40
  41cbc9:	mov    esp,0x28ac3a6
  41cbce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbcf:	in     eax,dx
  41cbd0:	in     eax,dx
  41cbd1:	mov    WORD PTR [ecx],gs
  41cbd3:	xchg   ebp,eax
  41cbd4:	jae    0x41cc34
  41cbd6:	or     DWORD PTR [edi],edi
  41cbd8:	sub    ebx,ebx
  41cbda:	fsubr  QWORD PTR [edi]
  41cbdc:	add    dh,BYTE PTR [ebp+0x4e36409b]
  41cbe2:	push   0x5
  41cbe4:	dec    ebx
  41cbe5:	arpl   WORD PTR [eax+esi*4-0x25],bp
  41cbe9:	lds    edi,FWORD PTR [ebx]
  41cbeb:	cmp    bh,BYTE PTR [ebp+0x40]
  41cbee:	in     eax,dx
  41cbef:	sub    BYTE PTR [edi-0x54],0xad
  41cbf3:	pop    esi
  41cbf4:	jl     0x41cbad
  41cbf6:	(bad)  
  41cbf8:	mov    esp,0x982cd5fc
  41cbfd:	or     eax,edx
  41cbff:	ds out dx,al
  41cc01:	out    dx,al
  41cc02:	dec    edi
  41cc03:	pushf  
  41cc04:	mov    DWORD PTR ds:0xf41337ac,eax
  41cc0a:	sub    al,0x35
  41cc0c:	lds    ebx,FWORD PTR [edi]
  41cc0e:	pop    esi
  41cc0f:	or     al,0x59
  41cc11:	adc    DWORD PTR [ebp+0x1aa508e2],ebp
  41cc17:	pushf  
  41cc18:	lods   al,BYTE PTR ds:[esi]
  41cc19:	xor    ebp,0x29be7104
  41cc1f:	js     0x41cc36
  41cc21:	mov    BYTE PTR [ecx+0x3d8b95d9],bl
  41cc27:	ret    
  41cc28:	enter  0xad1c,0x43
  41cc2c:	or     dh,BYTE PTR [eax]
  41cc2e:	xor    esi,DWORD PTR [edi+0xa3dddb6]
  41cc34:	lahf   
  41cc35:	mov    bh,0x49
  41cc37:	out    dx,al
  41cc38:	add    edi,esp
  41cc3a:	xchg   ecx,eax
  41cc3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc3c:	aas    
  41cc3d:	fdivrp st(4),st
  41cc3f:	xchg   edi,eax
  41cc40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc41:	xchg   edx,eax
  41cc42:	jle    0x41cbef
  41cc44:	or     DWORD PTR cs:[ecx-0x445f9428],esp
  41cc4b:	mov    ah,0xfb
  41cc4d:	outs   dx,BYTE PTR ds:[esi]
  41cc4e:	pop    esi
  41cc4f:	lods   al,BYTE PTR fs:[esi]
  41cc51:	inc    edi
  41cc52:	cmp    edi,DWORD PTR [esi+ebx*8+0x39bc5f40]
  41cc59:	punpcklbw mm1,DWORD PTR [ebp-0x7371e9cd]
  41cc60:	cld    
  41cc61:	mov    ds:0x9632baef,eax
  41cc66:	jg     0x41cc5c
  41cc68:	lods   eax,DWORD PTR ds:[esi]
  41cc69:	shl    BYTE PTR [edx],1
  41cc6b:	js     0x41cc52
  41cc6d:	fwait
  41cc6e:	in     al,0x29
  41cc70:	cwde   
  41cc71:	ret    
  41cc72:	jp     0x41cc97
  41cc74:	sbb    al,0xc4
  41cc76:	sbb    ebx,edx
  41cc78:	rcr    BYTE PTR [esi],1
  41cc7a:	or     bh,bh
  41cc7c:	fcmove st,st(7)
  41cc7e:	cmp    edx,ebx
  41cc80:	add    dl,BYTE PTR [ecx+ebp*4]
  41cc83:	(bad)  
  41cc84:	adc    esp,DWORD PTR [ecx+0x4d]
  41cc87:	jge    0x41cc8b
  41cc89:	pop    ebx
  41cc8a:	sub    BYTE PTR ds:0x77394270,al
  41cc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc91:	(bad)  
  41cc92:	xor    cl,BYTE PTR [esi+ebp*8]
  41cc95:	push   es
  41cc96:	mov    ecx,0xfa37b27a
  41cc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc9c:	sbb    BYTE PTR [edx+0x3ae8b0d2],bh
  41cca2:	push   ss
  41cca3:	loope  0x41cc3c
  41cca5:	icebp  
  41cca6:	adc    edx,esp
  41cca8:	or     ch,BYTE PTR [esi-0x1b]
  41ccab:	mov    dl,0x7d
  41ccad:	add    BYTE PTR [esi+0x6a],bl
  41ccb0:	xchg   edx,eax
  41ccb1:	pop    ebx
  41ccb2:	rol    BYTE PTR [eax+0x3b764c0f],0x16
  41ccb9:	(bad)  
  41ccbb:	pusha  
  41ccbc:	mov    eax,0xbf5b26df
  41ccc1:	cdq    
  41ccc2:	mov    edx,0xa895167d
  41ccc7:	pop    ss
  41ccc8:	test   eax,0xeafa4be1
  41cccd:	adc    DWORD PTR [edi],esp
  41cccf:	mov    eax,0xc228032
  41ccd4:	inc    edi
  41ccd5:	mov    al,0xca
  41ccd7:	rcl    BYTE PTR [edx],0xaa
  41ccda:	pop    es
  41ccdb:	loope  0x41cd55
  41ccdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccde:	aad    0xf
  41cce0:	mov    dh,0x71
  41cce2:	ss mov cl,0xe1
  41cce5:	push   ebx
  41cce6:	jb     0x41cd15
  41cce8:	xchg   ebp,eax
  41cce9:	mov    al,0x20
  41cceb:	xor    al,0x44
  41cced:	push   ebp
  41ccee:	push   es
  41ccef:	inc    eax
  41ccf0:	popf   
  41ccf1:	int    0x46
  41ccf3:	gs pop edi
  41ccf5:	push   0x6042f2fb
  41ccfa:	xchg   BYTE PTR [ebx-0x22],bh
  41ccfd:	push   edi
  41ccfe:	lods   eax,DWORD PTR ds:[esi]
  41ccff:	fmul   QWORD PTR [ecx+0x25]
  41cd02:	inc    ebx
  41cd03:	dec    ecx
  41cd04:	dec    edx
  41cd05:	sub    ebp,edx
  41cd07:	or     esi,0xc985cdc6
  41cd0d:	and    esi,DWORD PTR [esi+0x5e]
  41cd10:	add    bl,BYTE PTR [edx-0x616ba516]
  41cd16:	pop    ss
  41cd17:	fldcw  WORD PTR [eax]
  41cd19:	push   ss
  41cd1a:	(bad)  
  41cd1b:	mov    ecx,0xfc4ab9b3
  41cd20:	add    DWORD PTR [eax+0x3ab21a5c],ecx
  41cd26:	mov    edi,0xc30e1a0
  41cd2b:	sar    dl,1
  41cd2d:	mov    edx,0xd162bfa2
  41cd32:	loope  0x41cd86
  41cd34:	push   0xffffffa5
  41cd36:	mov    esp,0x9d13cbd1
  41cd3b:	jbe    0x41cd5d
  41cd3d:	add    eax,0x8c83e621
  41cd42:	jo     0x41cd69
  41cd44:	test   BYTE PTR [edx+0x6c],cl
  41cd47:	push   ebp
  41cd48:	sar    BYTE PTR [edx-0x54],cl
  41cd4b:	std    
  41cd4c:	dec    esp
  41cd4d:	fldenv [ebx-0x377f40c9]
  41cd53:	arpl   WORD PTR [edi],sp
  41cd55:	les    edx,FWORD PTR [esi+0x61f28603]
  41cd5b:	cmp    dl,BYTE PTR [eax-0x75]
  41cd5e:	push   ds
  41cd5f:	and    al,0xbf
  41cd61:	and    edi,DWORD PTR [eax+0x40a827cd]
  41cd67:	daa    
  41cd68:	repnz (bad)
  41cd6b:	fadd   QWORD PTR [ebx]
  41cd6d:	or     DWORD PTR [eax-0x7aa1566b],0x6369459e
  41cd77:	dec    esi
  41cd78:	and    eax,0xba17cbba
  41cd7d:	mov    ch,0x57
  41cd7f:	push   0x1c29d661
  41cd84:	xchg   esi,eax
  41cd85:	mov    ebx,0xa1cc7e8b
  41cd8a:	cs pop esi
  41cd8c:	rcr    DWORD PTR [edx+0x425434aa],1
  41cd92:	add    DWORD PTR [esi],esp
  41cd94:	push   es
  41cd95:	out    0x84,al
  41cd97:	and    eax,0xefc3c31d
  41cd9c:	jb     0x41cd8b
  41cd9e:	add    DWORD PTR [ebp*2-0x689a4c7a],ebp
  41cda5:	mov    cs,WORD PTR [esi]
  41cda7:	popa   
  41cda8:	add    ebx,DWORD PTR [ebp+0x4419e686]
  41cdae:	retf   0xfa69
  41cdb1:	dec    eax
  41cdb2:	loope  0x41cddc
  41cdb4:	inc    ebp
  41cdb5:	mov    al,0x30
  41cdb7:	popf   
  41cdb8:	xor    ah,dl
  41cdba:	call   0x9b33:0x691d22f2
  41cdc1:	dec    ebp
  41cdc2:	mov    al,0x94
  41cdc4:	cmp    al,0x9f
  41cdc6:	lods   eax,DWORD PTR ds:[esi]
  41cdc7:	jge    0x41cd4c
  41cdc9:	add    ebx,DWORD PTR [edx+0x2f7f814a]
  41cdcf:	lock (bad) 
  41cdd1:	(bad)  
  41cdd2:	xor    DWORD PTR ds:0x361393be,ebp
  41cdd8:	jb     0x41cdb0
  41cdda:	shl    BYTE PTR [ecx],1
  41cddc:	pop    esp
  41cddd:	pop    ebp
  41cdde:	fisub  WORD PTR [ecx+0x7a]
  41cde1:	jbe    0x41ce49
  41cde3:	push   edx
  41cde4:	cmp    bh,BYTE PTR [ebp-0x2b800af6]
  41cdea:	int3   
  41cdeb:	pusha  
  41cdec:	cld    
  41cded:	xchg   DWORD PTR [ebx+ecx*8+0x72a35bbf],ebx
  41cdf4:	ss push ss
  41cdf6:	pop    esp
  41cdf7:	call   0x509c:0x9b7655ac
  41cdfe:	clc    
  41cdff:	add    BYTE PTR [ecx+0x17e1d7b9],al
  41ce05:	inc    edx
  41ce06:	shl    al,1
  41ce08:	push   ebx
  41ce09:	std    
  41ce0a:	(bad)  
  41ce0b:	cli    
  41ce0c:	lods   al,BYTE PTR ds:[esi]
  41ce0d:	pop    ebp
  41ce0e:	aam    0xe8
  41ce10:	lods   al,BYTE PTR ds:[esi]
  41ce11:	mov    bl,0x96
  41ce13:	xor    BYTE PTR [eax-0x4c],dl
  41ce16:	rol    BYTE PTR [eax+0x2723f5a6],0x8
  41ce1d:	jbe    0x41ce63
  41ce1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce20:	popa   
  41ce21:	addr16 jo 0x41ce9a
  41ce24:	std    
  41ce25:	scas   al,BYTE PTR es:[edi]
  41ce26:	inc    ecx
  41ce27:	je     0x41ce77
  41ce29:	add    al,0xcd
  41ce2b:	pop    ebx
  41ce2c:	add    al,0xb4
  41ce2e:	in     eax,0x5
  41ce30:	add    eax,0x24035030
  41ce35:	icebp  
  41ce36:	cmp    ch,BYTE PTR [ebx+ecx*4-0x73eea9ca]
  41ce3d:	xor    eax,0xac79ef37
  41ce42:	nop
  41ce43:	clc    
  41ce44:	push   esp
  41ce45:	sbb    ah,BYTE PTR [ebp-0x2b]
  41ce48:	mov    BYTE PTR [edx],dh
  41ce4a:	xchg   edx,eax
  41ce4b:	xor    DWORD PTR [ecx-0x6b3c60fe],0x28
  41ce52:	xlat   BYTE PTR ds:[ebx]
  41ce53:	int    0x8a
  41ce55:	add    BYTE PTR [ebx+0x73ea1254],dl
  41ce5b:	arpl   WORD PTR [edi],cx
  41ce5d:	dec    esi
  41ce5e:	xor    al,0xa9
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	jecxz  0x41ceba
  41ce63:	ja     0x41ce98
  41ce65:	std    
  41ce66:	sub    BYTE PTR [esi],ch
  41ce68:	fist   WORD PTR [edi-0x35]
  41ce6b:	sbb    al,0xfc
  41ce6d:	iret   
  41ce6e:	mov    ds:0xf5ca22a4,eax
  41ce73:	cdq    
  41ce74:	and    DWORD PTR [ebx-0x7d],ebp
  41ce77:	add    bl,ah
  41ce79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce7a:	xor    esp,DWORD PTR [ebx+0x3a]
  41ce7d:	sub    ebx,edx
  41ce7f:	jb     0x41ceaf
  41ce81:	in     eax,0x5
  41ce83:	mov    ecx,DWORD PTR [ebp-0x29f71163]
  41ce89:	vmovaps YMMWORD PTR ds:0x342e6174,ymm4
  41ce91:	add    BYTE PTR [esi+0x3d],al
  41ce94:	scas   al,BYTE PTR es:[edi]
  41ce95:	je     0x41ce30
  41ce97:	mov    ch,0x36
  41ce99:	dec    esp
  41ce9a:	popa   
  41ce9b:	mul    DWORD PTR [edi+eax*4]
  41ce9e:	xor    ah,BYTE PTR [esi+0x4fd3d9ba]
  41cea4:	aas    
  41cea5:	sub    al,0xfd
  41cea7:	cli    
  41cea8:	mov    ds:0x4de79b6e,al
  41cead:	mov    ebx,0xf50705b7
  41ceb2:	xchg   DWORD PTR [ebx+0x5b],esi
  41ceb5:	mov    bh,al
  41ceb7:	or     DWORD PTR [ecx+0x71],ebp
  41ceba:	sub    al,0xc4
  41cebc:	(bad)  
  41cebd:	lods   al,BYTE PTR ds:[esi]
  41cebe:	sub    eax,0x85b09c7e
  41cec3:	fnstsw WORD PTR [ecx+0x11]
  41cec6:	bound  esp,QWORD PTR [ecx-0x4b]
  41cec9:	outs   dx,BYTE PTR ds:[esi]
  41ceca:	out    dx,al
  41cecb:	add    dh,BYTE PTR [eax]
  41cecd:	fldcw  WORD PTR [ebp-0x79]
  41ced0:	mov    cl,0xa6
  41ced2:	ror    DWORD PTR [edi],0xa6
  41ced5:	inc    edi
  41ced6:	mov    edx,0xce8b7eb4
  41cedb:	push   cs
  41cedc:	ss mov bh,0x44
  41cedf:	jge    0x41cee6
  41cee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee2:	sbb    bl,0x46
  41cee5:	adc    bl,BYTE PTR [eax+0x7]
  41cee8:	retf   
  41cee9:	jl     0x41ce8c
  41ceeb:	jae    0x41cf5f
  41ceed:	push   esp
  41ceee:	addr16 clc 
  41cef0:	outs   dx,DWORD PTR ds:[esi]
  41cef1:	lods   al,BYTE PTR ss:[esi]
  41cef3:	nop
  41cef4:	jo     0x41cf1b
  41cef6:	xor    ebp,DWORD PTR [ebp-0x28a872e5]
  41cefc:	xchg   bh,bl
  41cefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceff:	jmp    FWORD PTR [esi-0xa698375]
  41cf05:	pop    ebp
  41cf06:	cmp    cl,BYTE PTR [edi+0xd53e990]
  41cf0c:	mov    cl,0x3b
  41cf0e:	xchg   eax,ebx
  41cf10:	js     0x41cf75
  41cf12:	call   0x1538:0xbf94c003
  41cf19:	add    ecx,DWORD PTR [ebp+0x7ed713cd]
  41cf1f:	sub    DWORD PTR [esi+0x44],eax
  41cf22:	cmc    
  41cf23:	pop    ebp
  41cf24:	sti    
  41cf25:	in     eax,0x22
  41cf27:	call   0x961b:0xd0f4248b
  41cf2e:	cmc    
  41cf2f:	popf   
  41cf30:	jnp    0x41cf61
  41cf32:	cmp    eax,0x9918a985
  41cf37:	(bad)  
  41cf38:	(bad)  
  41cf39:	in     eax,dx
  41cf3a:	cmp    al,BYTE PTR [edi-0x1c]
  41cf3d:	int    0x71
  41cf3f:	add    eax,0xf7d3ed87
  41cf44:	fidivr WORD PTR [esp+edi*4]
  41cf47:	pop    ds
  41cf48:	xchg   edx,eax
  41cf49:	dec    edi
  41cf4a:	rcl    edx,cl
  41cf4c:	push   ds
  41cf4d:	jae    0x41cf71
  41cf4f:	jns    0x41cfcb
  41cf51:	ins    BYTE PTR es:[edi],dx
  41cf52:	std    
  41cf53:	das    
  41cf54:	(bad)  
  41cf56:	stos   DWORD PTR es:[edi],eax
  41cf57:	call   0xc0ca:0xdab44b7b
  41cf5e:	les    ebp,FWORD PTR [esi]
  41cf60:	adc    al,bh
  41cf62:	ja     0x41cfad
  41cf64:	xor    eax,0xaa07649a
  41cf69:	pop    esi
  41cf6a:	mov    ds:0x4311a4bd,eax
  41cf6f:	scas   al,BYTE PTR es:[edi]
  41cf70:	test   eax,0xa1fe98f6
  41cf75:	push   eax
  41cf76:	xlat   BYTE PTR ds:[ebx]
  41cf77:	ror    DWORD PTR [ebx+0x14],1
  41cf7a:	or     DWORD PTR [esi-0x7d69a8b9],esi
  41cf80:	jbe    0x41cf84
  41cf82:	cmp    BYTE PTR [ebp-0x21fea954],ah
  41cf88:	lock pop ebx
  41cf8a:	push   edi
  41cf8b:	shl    DWORD PTR [edi+0x24],1
  41cf8e:	ja     0x41cf70
  41cf90:	pop    ss
  41cf91:	jg     0x41cf81
  41cf93:	cwde   
  41cf94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf95:	jmp    0xc78a:0x6c9569c9
  41cf9c:	xchg   ebx,esp
  41cf9e:	add    al,0x6c
  41cfa0:	sub    DWORD PTR [esi+0x865675b],edx
  41cfa6:	pop    ebp
  41cfa7:	sbb    al,0xd3
  41cfa9:	icebp  
  41cfaa:	sub    ch,BYTE PTR ds:0x645be60a
  41cfb0:	inc    eax
  41cfb1:	(bad)  
  41cfb2:	sti    
  41cfb3:	leave  
  41cfb4:	adc    DWORD PTR [ebx-0x456e11ac],eax
  41cfba:	test   ecx,esp
  41cfbc:	inc    esp
  41cfbd:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41cfbf:	mov    ah,0xbc
  41cfc1:	ficom  WORD PTR [ecx+0x17]
  41cfc4:	je     0x41cf54
  41cfc6:	xchg   esp,eax
  41cfc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc9:	ins    BYTE PTR es:[edi],dx
  41cfca:	loope  0x41cf62
  41cfcc:	add    DWORD PTR [eax+edi*8+0x1d],eax
  41cfd0:	in     eax,0x39
  41cfd2:	das    
  41cfd3:	and    DWORD PTR [eax+edx*2],0xb0393017
  41cfda:	movsx  ecx,BYTE PTR [eax-0x6c76137]
  41cfe1:	je     0x41cff6
  41cfe3:	icebp  
  41cfe4:	lods   al,BYTE PTR ds:[esi]
  41cfe5:	sti    
  41cfe6:	shl    DWORD PTR [ecx-0x2a],1
  41cfe9:	(bad)  [ecx+0x5]
  41cfec:	mov    BYTE PTR [edx],cl
  41cfee:	jnp    0x41d02b
  41cff0:	mov    eax,0x4ce6061e
  41cff5:	inc    eax
  41cff6:	mov    ecx,0x1f54c7ff
  41cffb:	inc    esi
  41cffc:	fisttp WORD PTR [ecx-0x77]
  41cfff:	(bad)  
  41d000:	push   cs
  41d001:	or     al,0x9d
  41d003:	cli    
  41d004:	add    al,BYTE PTR [eax-0x77d1c776]
  41d00a:	mov    eax,0xf4cd339d
  41d00f:	lods   eax,DWORD PTR ds:[esi]
  41d010:	ret    
  41d011:	ins    BYTE PTR es:[edi],dx
  41d012:	clc    
  41d013:	lods   al,BYTE PTR ds:[esi]
  41d014:	mov    eax,ds:0x4adbc79c
  41d019:	mov    cl,0xfd
  41d01b:	or     dh,al
  41d01d:	push   edi
  41d01e:	push   eax
  41d01f:	push   0x6c1dbd40
  41d024:	inc    ebx
  41d025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d026:	sahf   
  41d027:	inc    esp
  41d028:	leave  
  41d029:	pop    ebx
  41d02a:	xor    al,0x33
  41d02c:	sbb    eax,DWORD PTR [bx+si-0x63]
  41d030:	or     al,0xdc
  41d032:	pop    esi
  41d033:	inc    eax
  41d034:	cmp    DWORD PTR [ebx],esi
  41d036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d037:	sbb    al,0xe6
  41d039:	push   cs
  41d03a:	push   edi
  41d03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d03c:	adc    eax,DWORD PTR [ebx-0x114b527b]
  41d042:	ficom  DWORD PTR [esi+0x15e52651]
  41d048:	sbb    edx,edi
  41d04a:	call   0x2281:0x375f12bf
  41d051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d052:	ins    DWORD PTR es:[edi],dx
  41d053:	cdq    
  41d054:	lods   eax,DWORD PTR ds:[esi]
  41d055:	add    DWORD PTR [esi+0x32],0xffffffb2
  41d059:	push   ebp
  41d05a:	sar    DWORD PTR [ebx],0x2c
  41d05d:	(bad)  
  41d05e:	pop    edi
  41d05f:	push   esi
  41d060:	jmp    FWORD PTR [eax+0x7e7eeebd]
  41d066:	ins    DWORD PTR es:[edi],dx
  41d067:	adc    ebx,ecx
  41d069:	cmc    
  41d06a:	mov    ah,0xb3
  41d06c:	fdivr  st,st(0)
  41d06e:	inc    ebp
  41d06f:	push   eax
  41d070:	(bad)  
  41d072:	xor    eax,0x4d6fcdb0
  41d077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d078:	xchg   ebx,eax
  41d079:	retf   
  41d07a:	inc    edi
  41d07b:	jno    0x41d040
  41d07d:	mov    ebp,0xdceb7919
  41d082:	cmp    BYTE PTR [ebx-0x22925ab9],al
  41d088:	into   
  41d089:	mov    ah,0x7c
  41d08b:	iret   
  41d08c:	das    
  41d08d:	xlat   BYTE PTR ds:[ebx]
  41d08e:	jb     0x41d037
  41d090:	(bad)  
  41d092:	jno    0x41d071
  41d094:	in     eax,dx
  41d095:	outs   dx,BYTE PTR ds:[esi]
  41d096:	cli    
  41d097:	mov    BYTE PTR [esi-0x59],0xf4
  41d09b:	repnz outs dx,DWORD PTR ds:[esi]
  41d09d:	mov    cl,0x6f
  41d09f:	sub    dh,BYTE PTR [edx-0x69]
  41d0a2:	loopne 0x41d056
  41d0a4:	outs   dx,DWORD PTR ds:[esi]
  41d0a5:	movsx  ebx,WORD PTR [edi-0x602c4669]
  41d0ac:	adc    BYTE PTR [ebp-0x2e],bh
  41d0af:	pop    ecx
  41d0b0:	scas   eax,DWORD PTR es:[edi]
  41d0b1:	sbb    DWORD PTR [edi-0xeaace48],ecx
  41d0b7:	xchg   edx,eax
  41d0b8:	imul   edi,DWORD PTR [ebx+edi*1-0x9],0xffffff8c
  41d0bd:	sub    al,0xeb
  41d0bf:	imul   edi,DWORD PTR [ebx],0xffffffcd
  41d0c2:	adc    eax,0x3f4c703f
  41d0c7:	cwde   
  41d0c8:	adc    BYTE PTR [ebx-0x60],bh
  41d0cb:	loope  0x41d0fd
  41d0cd:	gs mov ch,0x80
  41d0d0:	sti    
  41d0d1:	sahf   
  41d0d2:	mov    eax,ds:0x7c83b23b
  41d0d7:	add    DWORD PTR [edx-0x19],eax
  41d0da:	jge    0x41d107
  41d0dc:	jl     0x41d0bb
  41d0de:	(bad)  
  41d0e0:	out    dx,eax
  41d0e1:	push   0x2b
  41d0e3:	test   DWORD PTR [ebp+0x4b],eax
  41d0e6:	mov    al,ds:0x9b8f8ee7
  41d0eb:	clc    
  41d0ec:	inc    eax
  41d0ed:	out    dx,eax
  41d0ee:	cmp    al,0x9f
  41d0f0:	call   0xc1e3:0xb0836e35
  41d0f7:	test   DWORD PTR [esi],ebx
  41d0f9:	inc    edx
  41d0fa:	sub    ah,BYTE PTR [ebx+0x581b20e5]
  41d100:	jl     0x41d112
  41d102:	and    al,0x7e
  41d104:	stos   DWORD PTR es:[edi],eax
  41d105:	sbb    dh,ah
  41d107:	push   edx
  41d108:	inc    edi
  41d109:	iret   
  41d10a:	les    ecx,FWORD PTR [ebx]
  41d10c:	mov    ss,edi
  41d10e:	pop    ecx
  41d10f:	cmp    BYTE PTR [edx+0x62bb0b43],al
  41d115:	push   esi
  41d116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d117:	inc    ecx
  41d118:	dec    esi
  41d119:	and    BYTE PTR [edx],bl
  41d11b:	mov    edx,0x74b47d84
  41d120:	jp     0x41d198
  41d122:	retf   
  41d123:	dec    esp
  41d124:	cmp    BYTE PTR [eax],al
  41d126:	dec    esi
  41d127:	xor    DWORD PTR [ecx],ebx
  41d129:	fidivr DWORD PTR cs:[edx]
  41d12c:	loope  0x41d12c
  41d12e:	dec    esp
  41d12f:	fwait
  41d130:	jl     0x41d1a8
  41d132:	int3   
  41d133:	popa   
  41d134:	push   ds
  41d135:	inc    eax
  41d136:	xor    edi,DWORD PTR [edx-0x16bb110c]
  41d13c:	mov    bl,0xfa
  41d13e:	xor    al,0x6f
  41d140:	pushaw 
  41d142:	adc    eax,0x7f4d9885
  41d147:	retf   0x3488
  41d14a:	jno    0x41d11c
  41d14c:	pusha  
  41d14d:	xlat   BYTE PTR ds:[ebx]
  41d14e:	fwait
  41d14f:	pop    edi
  41d150:	shl    ah,1
  41d152:	dec    eax
  41d153:	lods   eax,DWORD PTR ds:[esi]
  41d154:	mov    DWORD PTR [edx],edi
  41d156:	arpl   WORD PTR [ecx+edx*4+0x24],ax
  41d15a:	popa   
  41d15b:	push   ecx
  41d15c:	or     DWORD PTR [edx],edx
  41d15e:	cmp    al,0xcd
  41d160:	xor    esi,DWORD PTR [ecx]
  41d162:	lldt   WORD PTR [ebp-0x53]
  41d166:	inc    ebx
  41d167:	jecxz  0x41d1d6
  41d169:	test   DWORD PTR ds:0xf4f7a48b,edi
  41d16f:	jle    0x41d1af
  41d171:	stc    
  41d172:	enter  0x63b4,0xfd
  41d176:	lods   al,BYTE PTR ds:[esi]
  41d177:	or     DWORD PTR [ebp-0x6713d336],0x75
  41d17e:	mov    al,BYTE PTR [edi+0x197c017e]
  41d184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d185:	dec    ecx
  41d186:	xor    BYTE PTR [edx+0x55],cl
  41d189:	arpl   WORD PTR [edx-0x3b1f9fa9],cx
  41d18f:	loope  0x41d14f
  41d191:	(bad)  
  41d192:	sub    DWORD PTR [edx+0x17d8bb26],esi
  41d198:	mov    ah,0xe6
  41d19a:	pop    edx
  41d19b:	inc    esi
  41d19c:	sub    eax,0x383ee57b
  41d1a1:	cmp    bl,BYTE PTR [eax]
  41d1a3:	fdiv   DWORD PTR [ebp+0x52]
  41d1a6:	loop   0x41d227
  41d1a8:	and    BYTE PTR [ebx+0x3a],bl
  41d1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ac:	push   cs
  41d1ad:	inc    eax
  41d1ae:	push   ss
  41d1af:	retf   0xa1bd
  41d1b2:	gs dec esp
  41d1b4:	dec    eax
  41d1b5:	stos   BYTE PTR es:[edi],al
  41d1b6:	or     eax,0xdf836d46
  41d1bb:	pop    ebp
  41d1bc:	sahf   
  41d1bd:	mov    DWORD PTR [edi],0x9d149347
  41d1c3:	scas   eax,DWORD PTR es:[edi]
  41d1c4:	or     BYTE PTR [esi],0x69
  41d1c7:	adc    ebp,DWORD PTR fs:[esi+0xf]
  41d1cb:	pop    es
  41d1cc:	mov    eax,0x99f3e909
  41d1d1:	jmp    0x6f93:0x7de779eb
  41d1d8:	lods   eax,DWORD PTR ds:[esi]
  41d1d9:	inc    ebp
  41d1da:	cld    
  41d1db:	inc    ebp
  41d1dc:	std    
  41d1dd:	mov    dl,0x99
  41d1df:	mov    ebx,0x5075614b
  41d1e4:	sub    dh,BYTE PTR [ebx]
  41d1e6:	outs   dx,BYTE PTR ds:[esi]
  41d1e7:	push   ds
  41d1e8:	adc    ebx,DWORD PTR [ebx+ebx*1]
  41d1eb:	fld    QWORD PTR [edx+0x32]
  41d1ee:	je     0x41d264
  41d1f0:	add    eax,0x6bfa5eba
  41d1f5:	lds    ebp,FWORD PTR [edx-0x6d19b9e3]
  41d1fb:	pop    eax
  41d1fc:	data16 adc al,0x47
  41d1ff:	es stos DWORD PTR es:[edi],eax
  41d201:	and    esp,eax
  41d203:	test   eax,0x980e34ee
  41d208:	mov    dh,0xeb
  41d20a:	dec    eax
  41d20b:	mov    edx,0x452ff6b4
  41d210:	ins    BYTE PTR es:[edi],dx
  41d211:	cmp    ebx,DWORD PTR [edi]
  41d213:	(bad)  
  41d214:	in     eax,dx
  41d215:	cld    
  41d216:	sub    al,0x9d
  41d218:	rcl    BYTE PTR [ecx-0x72bb4085],1
  41d21e:	jecxz  0x41d1b2
  41d220:	mov    al,gs:0x464f9d5a
  41d226:	loope  0x41d299
  41d228:	cmp    al,0x5b
  41d22a:	cmp    eax,0x76ddf142
  41d22f:	out    dx,al
  41d230:	leave  
  41d231:	dec    esi
  41d232:	xchg   ebx,eax
  41d233:	push   esi
  41d234:	xchg   edi,eax
  41d235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d236:	stos   BYTE PTR es:[edi],al
  41d237:	xor    BYTE PTR [edx-0x221037c4],ch
  41d23d:	mov    WORD PTR [edi-0x62],ds
  41d240:	cmp    DWORD PTR [edx],ebp
  41d242:	mov    al,0x41
  41d244:	fld    DWORD PTR [esi+ebp*4-0x64]
  41d248:	lahf   
  41d249:	inc    esi
  41d24a:	sahf   
  41d24b:	stos   DWORD PTR es:[edi],eax
  41d24c:	add    al,0xd3
  41d24e:	xchg   ecx,eax
  41d24f:	out    0x13,al
  41d251:	sahf   
  41d252:	pop    ds
  41d253:	test   eax,0x99721248
  41d258:	pop    es
  41d259:	mov    ch,0xef
  41d25b:	fsubp  st(2),st
  41d25d:	ficom  DWORD PTR [edi+ebx*1+0xac30af3]
  41d264:	pop    ss
  41d265:	cmc    
  41d266:	push   esp
  41d267:	int3   
  41d268:	out    dx,al
  41d269:	dec    eax
  41d26a:	repnz cmp BYTE PTR [ecx],ch
  41d26d:	jmp    0x41d241
  41d26f:	inc    ecx
  41d270:	js     0x41d2b8
  41d272:	aam    0x35
  41d274:	inc    esp
  41d275:	adc    cl,ch
  41d277:	adc    esi,DWORD PTR [ebp+0x2110094c]
  41d27d:	add    al,0x30
  41d27f:	xchg   edi,eax
  41d280:	pop    ebx
  41d281:	adc    ebp,edi
  41d283:	or     cl,BYTE PTR [ebx+ecx*2-0x1e]
  41d287:	pop    edx
  41d288:	aad    0x5c
  41d28a:	push   cs
  41d28b:	leave  
  41d28c:	mov    al,ds:0xca6fdf2a
  41d291:	(bad)  
  41d292:	lea    esp,[edi-0x2e2511a8]
  41d298:	in     al,dx
  41d299:	sub    eax,0x1a421611
  41d29e:	mov    al,ds:0xd1b032b0
  41d2a3:	adc    al,0xa1
  41d2a5:	xor    bl,BYTE PTR [esi+0x64]
  41d2a8:	outs   dx,BYTE PTR ds:[esi]
  41d2a9:	xor    al,0x9e
  41d2ab:	sub    DWORD PTR [edx-0x53],eax
  41d2ae:	les    edi,FWORD PTR [edi-0x65513b3e]
  41d2b4:	mov    bl,0x4a
  41d2b6:	pop    eax
  41d2b7:	(bad)  
  41d2b8:	sti    
  41d2b9:	mov    al,ds:0x21952cc9
  41d2be:	fwait
  41d2bf:	shr    BYTE PTR ds:[ecx],1
  41d2c2:	jg     0x41d2e5
  41d2c4:	pop    ds
  41d2c5:	inc    edx
  41d2c6:	mov    ah,0xb
  41d2c8:	mov    eax,0x590a63d
  41d2cd:	cwde   
  41d2ce:	out    dx,al
  41d2cf:	mov    ss,WORD PTR [eax+0x77bce596]
  41d2d5:	jbe    0x41d335
  41d2d7:	xchg   BYTE PTR [eax+0x63],bh
  41d2da:	push   edi
  41d2db:	pop    eax
  41d2dc:	lods   al,BYTE PTR ds:[esi]
  41d2dd:	jb     0x41d282
  41d2df:	ja     0x41d31c
  41d2e1:	out    dx,al
  41d2e2:	add    edx,DWORD PTR ds:0xf3693353
  41d2e8:	stc    
  41d2e9:	cmp    al,0x88
  41d2eb:	mov    esp,0x424279e6
  41d2f0:	add    bh,BYTE PTR ds:0xd9929e47
  41d2f6:	cmp    cl,BYTE PTR [ebp-0xc]
  41d2f9:	int    0xa3
  41d2fb:	call   0x67051712
  41d300:	xchg   edx,eax
  41d301:	xlat   BYTE PTR ds:[ebx]
  41d302:	call   0xc376879f
  41d307:	cmc    
  41d308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d309:	pushf  
  41d30a:	mov    dh,0xa4
  41d30c:	fisub  DWORD PTR [ecx-0x8fbc633]
  41d312:	shl    DWORD PTR [ecx-0x73dc3dc4],1
  41d318:	or     esp,edi
  41d31a:	jae    0x41d2eb
  41d31c:	jbe    0xf1698014
  41d322:	jne    0x41d396
  41d324:	mov    edx,0x9e06bbf1
  41d329:	imul   ebp,edi,0x20
  41d32c:	jl     0x41d2cf
  41d32e:	sti    
  41d32f:	mov    DWORD PTR [eax-0x1efc3b8],ebp
  41d335:	xor    al,0x5e
  41d337:	nop
  41d338:	xchg   esp,eax
  41d339:	xor    al,0x44
  41d33b:	outs   dx,DWORD PTR ds:[esi]
  41d33c:	out    0x5e,al
  41d33e:	in     eax,0xd
  41d340:	inc    esp
  41d341:	imul   esi,DWORD PTR [esp+edx*1+0x63],0xffffffc6
  41d346:	(bad)  
  41d347:	pop    esp
  41d348:	sbb    al,0x33
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	or     esi,DWORD PTR ds:[edi+0x62195f54]
  41d352:	and    BYTE PTR [ebp-0x2a376f5],bh
  41d358:	icebp  
  41d359:	mov    eax,ds:0xdcb8dfab
  41d35e:	sbb    BYTE PTR [eax+ecx*4+0x0],0x37
  41d363:	cli    
  41d364:	jne    0x41d3e3
  41d366:	sahf   
  41d367:	imul   ebp,edi,0xc
  41d36a:	add    esp,DWORD PTR [edx-0x1b]
  41d36d:	adc    eax,0x7fbf0a5c
  41d372:	xor    DWORD PTR [eax+0x5e23f630],0x2aa01b93
  41d37c:	or     esp,DWORD PTR [ecx+0x5c83b0a9]
  41d382:	icebp  
  41d383:	scas   eax,DWORD PTR es:[edi]
  41d384:	addr16 sub ecx,eax
  41d387:	mov    WORD PTR [esi+0x5a332c33],gs
  41d38d:	lds    esi,FWORD PTR [edx-0x54]
  41d390:	es add edx,ecx
  41d393:	or     DWORD PTR [esi+ebx*2+0x47d2faab],0x7d
  41d39b:	into   
  41d39c:	dec    edx
  41d39d:	add    ch,0x56
  41d3a0:	fistp  WORD PTR [ebp-0x42]
  41d3a3:	mov    bh,dl
  41d3a5:	jmp    0xb75d:0xc1ed9ee
  41d3ac:	out    0xe6,eax
  41d3ae:	dec    edx
  41d3af:	fdiv   QWORD PTR [ebx-0x50]
  41d3b2:	test   eax,0x6d26f7a5
  41d3b7:	test   al,0x45
  41d3b9:	popa   
  41d3ba:	xor    BYTE PTR [eax+0x59],dh
  41d3bd:	add    eax,0xa33670be
  41d3c2:	outs   dx,DWORD PTR ds:[esi]
  41d3c3:	sbb    eax,0xee3fbea5
  41d3c8:	cwde   
  41d3c9:	(bad)  
  41d3ca:	mov    ah,0xd0
  41d3cc:	xor    ah,bh
  41d3ce:	dec    DWORD PTR [eax-0x47ecad2d]
  41d3d4:	mov    dl,0x41
  41d3d6:	xor    eax,0x597eea9c
  41d3db:	push   edx
  41d3dc:	lods   eax,DWORD PTR ds:[esi]
  41d3dd:	push   eax
  41d3de:	in     eax,0x2b
  41d3e0:	inc    edx
  41d3e1:	(bad)  
  41d3e2:	lods   eax,DWORD PTR ds:[esi]
  41d3e3:	es loopne 0x41d3f7
  41d3e6:	nop    DWORD PTR [ebx+0x2a785b78]
  41d3ed:	into   
  41d3ee:	cmp    DWORD PTR ds:0x6eef1840,edx
  41d3f4:	mov    BYTE PTR [eax],bh
  41d3f6:	push   0xffffffd5
  41d3f8:	in     al,dx
  41d3f9:	and    edx,ebp
  41d3fb:	or     eax,0x56ccfa12
  41d400:	jmp    0x41d417
  41d402:	dec    edx
  41d403:	shr    BYTE PTR [ecx+0x39ef5a27],0x13
  41d40a:	or     edx,esp
  41d40c:	test   DWORD PTR [ebp-0x2c74082f],ebx
  41d412:	or     al,0x3a
  41d414:	xchg   DWORD PTR [ebx],esp
  41d416:	loopne 0x41d469
  41d418:	or     BYTE PTR [edx+0xccb9c37],ch
  41d41e:	jbe    0x41d3e5
  41d420:	jmp    0x41d3c5
  41d422:	sbb    al,0xbd
  41d424:	inc    edi
  41d425:	shl    BYTE PTR [ebx],cl
  41d427:	push   ebx
  41d428:	sub    eax,eax
  41d42a:	ins    DWORD PTR es:[edi],dx
  41d42b:	xchg   edx,eax
  41d42c:	dec    eax
  41d42d:	xor    BYTE PTR [esi+ebp*1-0x42aa079],bl
  41d434:	pusha  
  41d435:	mov    ch,BYTE PTR [edx-0x33]
  41d438:	loopne 0x41d4b9
  41d43a:	stos   BYTE PTR es:[edi],al
  41d43b:	mov    ebx,DWORD PTR [edx-0x5f7b3cb9]
  41d441:	sbb    DWORD PTR [ecx+ecx*2-0x41],ebp
  41d445:	test   eax,0xcc43a5fa
  41d44a:	fcomi  st,st(5)
  41d44c:	outs   dx,BYTE PTR ds:[esi]
  41d44d:	pop    eax
  41d44e:	xor    eax,0x64de25e6
  41d453:	loop   0x41d413
  41d455:	adc    edi,ebx
  41d457:	nop
  41d458:	adc    eax,0x54a807d8
  41d45d:	xor    cl,al
  41d45f:	ror    BYTE PTR [eax],0xc9
  41d462:	call   0xe1e73722
  41d467:	mov    DWORD PTR [edi+0x1b77b206],edx
  41d46d:	das    
  41d46e:	cld    
  41d46f:	push   ss
  41d470:	int    0xc3
  41d472:	(bad)  
  41d473:	repz je 0x41d464
  41d476:	jle    0x41d4c1
  41d478:	or     edx,DWORD PTR [edx+0x4303783c]
  41d47e:	sahf   
  41d47f:	popa   
  41d480:	sub    edx,DWORD PTR [esi]
  41d482:	mov    ebp,0x4085583c
  41d487:	push   0xffffffac
  41d489:	jecxz  0x41d508
  41d48b:	xchg   DWORD PTR [ebp+0x7f8ac945],ebx
  41d491:	scas   al,BYTE PTR es:[edi]
  41d492:	cmp    bh,BYTE PTR [edi-0x2785fa64]
  41d498:	cmp    DWORD PTR [ebx+0x1e46edda],edi
  41d49e:	jno    0x41d431
  41d4a0:	rol    al,1
  41d4a2:	jmp    0x82f9:0x9a824602
  41d4a9:	jl     0x41d4f2
  41d4ab:	aad    0x9e
  41d4ad:	add    ch,dl
  41d4af:	push   0x0
  41d4b1:	jno    0x41d52a
  41d4b3:	scas   al,BYTE PTR es:[edi]
  41d4b4:	(bad)  
  41d4b5:	jmp    0x332:0xa95b6c3b
  41d4bc:	std    
  41d4bd:	and    DWORD PTR [ecx-0x7d],eax
  41d4c0:	stos   BYTE PTR es:[edi],al
  41d4c1:	iret   
  41d4c2:	inc    ebp
  41d4c3:	mov    ch,0x1f
  41d4c5:	jmp    0x532:0xc43fcddf
  41d4cc:	dec    eax
  41d4cd:	sub    ah,BYTE PTR [eax]
  41d4cf:	mov    edx,0x521bb796
  41d4d4:	mov    dh,0xc8
  41d4d6:	cs test ebp,0x4bbfc862
  41d4dd:	jmp    0x41d4c1
  41d4df:	mov    esi,DWORD PTR [ebx]
  41d4e1:	mov    fs,WORD PTR [ebx-0x5b]
  41d4e4:	inc    esp
  41d4e5:	icebp  
  41d4e6:	pop    ebp
  41d4e7:	ror    esp,0x49
  41d4ea:	scas   eax,DWORD PTR es:[edi]
  41d4eb:	jmp    0x8e76:0x1e1d7e38
  41d4f2:	push   ebx
  41d4f3:	ja     0x41d514
  41d4f5:	push   0x3adf075
  41d4fa:	cmp    al,0xac
  41d4fc:	pop    edx
  41d4fd:	jp     0x41d579
  41d4ff:	fadd   QWORD PTR [edi]
  41d501:	test   ch,0x2e
  41d504:	lahf   
  41d505:	in     eax,dx
  41d506:	add    ebp,DWORD PTR [edx+0x41]
  41d509:	lea    eax,[esi+esi*2]
  41d50c:	stos   DWORD PTR es:[edi],eax
  41d50d:	or     al,0x2d
  41d50f:	fist   DWORD PTR [edx-0x36]
  41d512:	int    0xe8
  41d514:	and    al,0xf2
  41d516:	xor    dh,dh
  41d518:	outs   dx,DWORD PTR ds:[esi]
  41d519:	sbb    eax,edx
  41d51b:	out    0x96,eax
  41d51d:	mov    BYTE PTR [edi+0x6f9701aa],bh
  41d523:	out    dx,eax
  41d524:	fcom   DWORD PTR [eax-0x3d]
  41d527:	inc    cl
  41d529:	sub    al,0xf5
  41d52b:	mov    edx,fs
  41d52d:	lds    ebx,FWORD PTR [ecx+edx*2+0x31]
  41d531:	hlt    
  41d532:	shl    bl,1
  41d534:	xchg   edx,eax
  41d535:	or     eax,DWORD PTR [ebp-0x11a2c842]
  41d53b:	jnp    0x41d501
  41d53d:	shl    BYTE PTR [ecx-0x40b08a79],cl
  41d543:	push   0xdb2e3ca
  41d548:	ret    0xfa3d
  41d54b:	repnz ds mov gs,eax
  41d54f:	in     eax,dx
  41d550:	mov    ebp,0xc7eebe85
  41d555:	xor    BYTE PTR [ebx*8-0x1cbb47d],dh
  41d55c:	mov    WORD PTR [ebx-0x17],?
  41d55f:	rcr    BYTE PTR [edx],0x91
  41d562:	jge    0x41d568
  41d564:	mov    bl,0x89
  41d566:	jp     0x41d557
  41d568:	push   0x5d
  41d56a:	inc    edx
  41d56b:	loope  0x41d518
  41d56d:	sbb    al,0x36
  41d56f:	adc    esi,DWORD PTR [ebx-0x18e49c54]
  41d575:	popf   
  41d576:	mov    al,0xc0
  41d578:	popa   
  41d579:	xor    eax,0xe5ef9207
  41d57e:	pop    ebx
  41d57f:	mov    ds:0x353fd2b,al
  41d584:	or     al,0x82
  41d586:	mov    ds:0x5122d349,eax
  41d58b:	dec    eax
  41d58c:	xor    DWORD PTR [eax-0x16],0x2e5092ec
  41d593:	pop    esp
  41d594:	scas   eax,DWORD PTR es:[edi]
  41d595:	or     DWORD PTR [edi+0x698b297d],0x374ddcf2
  41d59f:	lods   eax,DWORD PTR ds:[esi]
  41d5a0:	lods   eax,DWORD PTR ds:[esi]
  41d5a1:	fidiv  WORD PTR [ecx]
  41d5a3:	or     al,0x43
  41d5a5:	pusha  
  41d5a6:	js     0x41d576
  41d5a8:	loop   0x41d5c3
  41d5aa:	out    dx,al
  41d5ab:	mov    ebx,0x8550bc26
  41d5b0:	cmp    ch,BYTE PTR [edi]
  41d5b2:	cmp    BYTE PTR es:[ecx+0x78],0x4f
  41d5b7:	mov    ecx,0xb550c46d
  41d5bc:	and    ecx,esi
  41d5be:	test   BYTE PTR [ebp-0x6007ba96],cl
  41d5c4:	jb     0x41d581
  41d5c6:	jge    0x41d614
  41d5c8:	mov    ah,0x1d
  41d5ca:	(bad)  
  41d5cb:	sbb    al,0x9c
  41d5cd:	dec    esp
  41d5ce:	cmc    
  41d5cf:	das    
  41d5d0:	pop    eax
  41d5d1:	int    0x4c
  41d5d3:	jno    0x41d5a8
  41d5d5:	push   eax
  41d5d6:	ret    0xccf2
  41d5d9:	push   ebx
  41d5da:	mov    edx,0x1403e475
  41d5df:	mov    edx,0x8183cf35
  41d5e4:	sbb    DWORD PTR [ebp-0x43],0xfffffff0
  41d5e8:	dec    ebx
  41d5e9:	jne    0x41d616
  41d5eb:	inc    edx
  41d5ec:	popa   
  41d5ed:	xchg   edx,eax
  41d5ee:	je     0x41d59d
  41d5f0:	jno    0x41d631
  41d5f2:	xor    al,0xc2
  41d5f4:	inc    edx
  41d5f5:	lods   al,BYTE PTR ds:[esi]
  41d5f6:	sbb    edx,DWORD PTR [esi-0x52]
  41d5f9:	scas   al,BYTE PTR es:[edi]
  41d5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5fb:	popf   
  41d5fc:	inc    ebp
  41d5fd:	jg     0x41d66c
  41d5ff:	or     eax,DWORD PTR [ecx+eax*4+0x3f585ad9]
  41d606:	push   ebp
  41d607:	addr16 jg 0x41d60e
  41d60a:	loope  0x41d672
  41d60c:	fs jmp 0x41d595
  41d60f:	jle    0x41d626
  41d611:	mov    edi,0x2819de0
  41d616:	(bad)  
  41d617:	sub    eax,0xa8730bc
  41d61c:	adc    DWORD PTR [ebp-0x57c17eae],ecx
  41d622:	push   ds
  41d623:	(bad)  
  41d624:	pop    ebp
  41d625:	test   edx,0x5b7e3fdc
  41d62b:	(bad)  
  41d62d:	pop    esi
  41d62e:	mov    ebp,0x5016f1be
  41d633:	jne    0x41d691
  41d635:	cdq    
  41d636:	mov    eax,ds:0x524f11a1
  41d63b:	mov    al,BYTE PTR [esi+0xacda6f]
  41d641:	(bad)  
  41d642:	adc    DWORD PTR ds:0x3b41f082,0x610b2a01
  41d64c:	mov    bh,0x3e
  41d64e:	stc    
  41d64f:	pop    ecx
  41d650:	popa   
  41d651:	cmp    eax,0x1866b577
  41d656:	cmp    BYTE PTR [eax-0xd42a384],0xc8
  41d65d:	mov    ah,0x23
  41d65f:	mov    al,0x14
  41d661:	idiv   DWORD PTR [eax-0x58289ff4]
  41d667:	out    0x21,eax
  41d669:	aad    0x42
  41d66b:	std    
  41d66c:	lods   al,BYTE PTR ds:[esi]
  41d66d:	inc    edi
  41d66e:	pop    ds
  41d66f:	sub    dh,cl
  41d671:	xchg   ebx,eax
  41d672:	fucomi st,st(2)
  41d674:	mov    eax,0xaf433354
  41d679:	shl    DWORD PTR [ecx*8+0x6121fead],0x2f
  41d681:	inc    edx
  41d682:	jecxz  0x41d6f8
  41d684:	mov    dl,0x78
  41d686:	push   ecx
  41d687:	in     eax,0x74
  41d689:	inc    ebp
  41d68a:	dec    esp
  41d68b:	ret    
  41d68c:	hlt    
  41d68d:	(bad)  
  41d68e:	in     eax,dx
  41d68f:	inc    esp
  41d690:	adc    DWORD PTR [eax],ebp
  41d692:	pop    ebp
  41d693:	in     al,0x45
  41d695:	retf   0x871
  41d698:	jmp    0x616ebe9f
  41d69d:	push   edx
  41d69e:	hlt    
  41d69f:	or     DWORD PTR [ebp-0x51fb96b7],edx
  41d6a5:	sub    DWORD PTR [eax],ecx
  41d6a7:	(bad)  
  41d6a8:	or     esp,DWORD PTR [edx-0x7e8e0873]
  41d6ae:	jo     0x41d64d
  41d6b0:	add    eax,0x73c6a08f
  41d6b5:	fwait
  41d6b6:	stos   BYTE PTR es:[edi],al
  41d6b7:	sub    bh,BYTE PTR [edi+0x50b2ae8b]
  41d6bd:	add    al,0xca
  41d6bf:	push   es
  41d6c0:	cmp    al,0xb7
  41d6c2:	(bad)  [eax+0x640a260a]
  41d6c8:	cli    
  41d6c9:	hlt    
  41d6ca:	rol    BYTE PTR [esi-0xa05243d],cl
  41d6d0:	push   esp
  41d6d1:	fdivr  DWORD PTR [esi+edi*4-0xdc22137]
  41d6d8:	pop    DWORD PTR [edx-0x45]
  41d6db:	call   0x734d:0xb8fc2478
  41d6e2:	(bad)  
  41d6e3:	mov    ecx,0x79a73726
  41d6e8:	cmp    BYTE PTR [esi*4+0x2c95c094],cl
  41d6ef:	(bad)  
  41d6f0:	cli    
  41d6f1:	push   ebp
  41d6f2:	pop    es
  41d6f3:	jg     0x41d728
  41d6f5:	dec    esp
  41d6f6:	mov    esi,0xae5cfdb8
  41d6fb:	mov    dh,0x78
  41d6fd:	cld    
  41d6fe:	push   0xffffff83
  41d700:	ds xchg ebp,eax
  41d702:	cmp    BYTE PTR [ebx+0x4d],al
  41d705:	push   ebp
  41d706:	loop   0x41d693
  41d708:	test   eax,0x9adab84a
  41d70d:	cmc    
  41d70e:	and    ch,BYTE PTR [edi-0x70176071]
  41d714:	retf   
  41d715:	inc    ecx
  41d716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d717:	jnp    0x41d765
  41d719:	mov    edi,0xb7211481
  41d71e:	inc    edi
  41d71f:	push   0xffffff91
  41d721:	xchg   esi,eax
  41d722:	mov    eax,ds:0x6304e1cf
  41d727:	idiv   edi
  41d729:	test   ah,ch
  41d72b:	mov    cl,0xbc
  41d72d:	outs   dx,DWORD PTR ds:[esi]
  41d72e:	setae  BYTE PTR [esi-0x54]
  41d732:	sbb    BYTE PTR [edi+0x8],ch
  41d735:	in     al,0x72
  41d737:	jns    0x41d786
  41d739:	sti    
  41d73a:	push   0xb756a075
  41d73f:	jae    0x41d791
  41d741:	mov    DWORD PTR [edi+0x90eb5f0],esp
  41d747:	arpl   WORD PTR [edx+0x41],si
  41d74a:	add    BYTE PTR [ebx],cl
  41d74c:	fld    DWORD PTR [edx+esi*1-0x68]
  41d750:	adc    BYTE PTR [ebx-0x6eefc68a],ch
  41d756:	sahf   
  41d757:	aas    
  41d758:	sub    eax,0x9170f20f
  41d75d:	sbb    edi,DWORD PTR [eax]
  41d75f:	popf   
  41d760:	int3   
  41d761:	cdq    
  41d762:	loopne 0x41d740
  41d764:	imul   edx,DWORD PTR [edi+0x2b],0x57cf4c5
  41d76b:	pop    ss
  41d76c:	cld    
  41d76d:	shl    BYTE PTR [edi-0x14],1
  41d770:	pop    edi
  41d771:	aas    
  41d772:	test   eax,0xabe0dfab
  41d777:	cmc    
  41d778:	inc    ebx
  41d779:	cld    
  41d77a:	mov    esi,0x5208e627
  41d77f:	mov    dh,0xb4
  41d781:	mov    ecx,DWORD PTR [edi-0x59]
  41d784:	pop    es
  41d785:	xor    dl,BYTE PTR [edi-0xa90a0e9]
  41d78b:	push   edi
  41d78c:	gs test ebp,0x1cc1c279
  41d793:	data16 or ah,BYTE PTR [edx]
  41d796:	xor    al,bl
  41d798:	cmp    eax,0xe5aae08a
  41d79d:	jno    0x41d749
  41d79f:	outs   dx,BYTE PTR ds:[esi]
  41d7a0:	xchg   ecx,eax
  41d7a1:	inc    ebp
  41d7a2:	bound  esi,QWORD PTR [edi-0x76]
  41d7a5:	in     al,0x76
  41d7a7:	adc    al,0xa0
  41d7a9:	pop    ds
  41d7aa:	xor    bl,0xa2
  41d7ad:	std    
  41d7ae:	popf   
  41d7af:	aam    0x38
  41d7b1:	lods   eax,DWORD PTR ds:[esi]
  41d7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b3:	loope  0x41d749
  41d7b5:	push   cs
  41d7b6:	adc    DWORD PTR [ebx-0xb],0xe9988c84
  41d7bd:	or     al,0xe3
  41d7bf:	popa   
  41d7c0:	xchg   ecx,eax
  41d7c1:	inc    ebx
  41d7c2:	inc    ebp
  41d7c3:	mov    al,0x74
  41d7c5:	mov    bl,0x43
  41d7c7:	call   0x680edf2e
  41d7cc:	xor    DWORD PTR [edx+0x57],ecx
  41d7cf:	jno    0x41d84d
  41d7d1:	loope  0x41d814
  41d7d3:	mov    edi,0xffe44c2b
  41d7d8:	jbe    0x41d7c8
  41d7da:	sbb    al,0xa1
  41d7dc:	xor    BYTE PTR [edi+0x35],0x6b
  41d7e0:	and    DWORD PTR [edx+0x77],edx
  41d7e3:	ret    
  41d7e4:	aaa    
  41d7e5:	in     eax,dx
  41d7e6:	nop
  41d7e7:	pop    esp
  41d7e8:	in     eax,0xcb
  41d7ea:	clc    
  41d7eb:	bound  ebx,QWORD PTR [ecx]
  41d7ed:	or     dl,BYTE PTR [edi+0x41d9072a]
  41d7f3:	mov    ebx,0x8010e7c3
  41d7f8:	xchg   esi,eax
  41d7f9:	inc    edi
  41d7fa:	xor    eax,0x25da3df4
  41d7ff:	stos   BYTE PTR es:[edi],al
  41d800:	adc    BYTE PTR [ecx-0x78],dh
  41d803:	mov    dh,0xb8
  41d805:	repz sbb BYTE PTR [ebp+0x41],dh
  41d809:	(bad)  [ecx+0x7ff44223]
  41d80f:	and    al,cl
  41d811:	ficomp WORD PTR [eax-0xdbc07c]
  41d817:	jl     0x41d7f2
  41d819:	out    dx,al
  41d81a:	in     eax,0xeb
  41d81c:	lock fidiv DWORD PTR [edi+0x47]
  41d820:	inc    ecx
  41d821:	data16 cli 
  41d823:	ss push ds
  41d825:	out    dx,eax
  41d826:	shl    DWORD PTR [edx+0x6a],1
  41d829:	clc    
  41d82a:	loopne 0x41d860
  41d82c:	sub    eax,0xdcb8eb5e
  41d831:	lea    ecx,[edx-0x6e7b2a81]
  41d837:	dec    esi
  41d838:	ds fwait
  41d83a:	pop    esi
  41d83b:	mov    ?,WORD PTR [edi-0x1c80b1d3]
  41d841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d842:	call   0xf17675d
  41d847:	xchg   edx,eax
  41d848:	xor    al,0x3
  41d84a:	neg    edi
  41d84c:	call   0x7ccd6e
  41d851:	hlt    
  41d852:	scas   al,BYTE PTR es:[edi]
  41d853:	lahf   
  41d854:	add    al,0xd1
  41d856:	sbb    al,0x0
  41d858:	xor    DWORD PTR [ebx+0x38],edx
  41d85b:	icebp  
  41d85c:	mov    BYTE PTR [ecx],ah
  41d85e:	cmp    al,0x57
  41d860:	xlat   BYTE PTR ds:[ebx]
  41d861:	add    dh,BYTE PTR [esi]
  41d863:	sub    BYTE PTR [eax],bh
  41d865:	fwait
  41d866:	pop    edx
  41d867:	mov    eax,ds:0x91618806
  41d86c:	enter  0xbd02,0x53
  41d870:	loopne 0x41d816
  41d872:	inc    esp
  41d873:	(bad)  
  41d874:	mov    al,ds:0xf2c52de5
  41d879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d87a:	shr    DWORD PTR [edi-0xf217a63],1
  41d880:	mov    ds:0xe8d3a077,eax
  41d885:	pop    ss
  41d886:	sbb    bl,BYTE PTR [edi]
  41d888:	shl    BYTE PTR [edx],cl
  41d88a:	push   edi
  41d88b:	push   cs
  41d88c:	aas    
  41d88d:	mov    eax,ds:0x52e254c
  41d892:	xchg   ebx,eax
  41d893:	push   edi
  41d894:	jle    0x41d8a1
  41d896:	in     eax,0x10
  41d898:	lahf   
  41d899:	retf   
  41d89a:	mov    edi,ebp
  41d89c:	add    al,0x95
  41d89e:	add    BYTE PTR [edx+0x55c3a962],0xb8
  41d8a5:	div    DWORD PTR [ebx-0x4fa9d1f3]
  41d8ab:	stc    
  41d8ac:	aad    0xc3
  41d8ae:	adc    eax,0xeddfe0c8
  41d8b3:	in     eax,0x7b
  41d8b5:	je     0x41d870
  41d8b7:	pop    ebx
  41d8b8:	mov    ebx,0x294eca3f
  41d8bd:	in     al,0xf6
  41d8bf:	aas    
  41d8c0:	cli    
  41d8c1:	dec    eax
  41d8c2:	out    0x39,al
  41d8c4:	pop    ds
  41d8c5:	popa   
  41d8c6:	ret    0xbff8
  41d8c9:	popa   
  41d8ca:	stc    
  41d8cb:	adc    bh,bl
  41d8cd:	popaw  
  41d8cf:	mov    esi,0x5ad1502d
  41d8d4:	or     eax,DWORD PTR [esi-0x13]
  41d8d7:	jmp    0x41d8a3
  41d8d9:	or     bl,BYTE PTR es:[ebx-0x56ff3885]
  41d8e0:	or     cl,BYTE PTR [edi-0x46]
  41d8e3:	mov    ebx,0x210d6e7c
  41d8e8:	imul   eax,DWORD PTR gs:[eax],0xeea3b2f4
  41d8ef:	out    dx,al
  41d8f0:	(bad)  
  41d8f1:	inc    esp
  41d8f2:	(bad)  
  41d8f3:	(bad)  
  41d8f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8f5:	shl    DWORD PTR [ecx+0x729898df],0x78
  41d8fc:	es ins DWORD PTR es:[edi],dx
  41d8fe:	mov    al,0xc4
  41d900:	xor    eax,0x96836459
  41d905:	xchg   ebp,eax
  41d906:	push   ecx
  41d907:	ins    DWORD PTR es:[edi],dx
  41d908:	or     al,0x21
  41d90a:	(bad)  
  41d90b:	pop    eax
  41d90c:	cld    
  41d90d:	fisub  WORD PTR [edx-0x2b]
  41d910:	xchg   DWORD PTR [ebp+0x1e077fd1],edx
  41d916:	xlat   BYTE PTR ds:[ebx]
  41d917:	cmp    al,0xa4
  41d919:	aaa    
  41d91a:	lods   eax,DWORD PTR ds:[esi]
  41d91b:	xlat   BYTE PTR ds:[ebx]
  41d91c:	xlat   BYTE PTR ds:[ebx]
  41d91d:	mov    edi,esp
  41d91f:	pop    es
  41d920:	(bad)  
  41d922:	push   0xffffffc3
  41d924:	jge    0x41d978
  41d926:	retf   0x5031
  41d929:	add    al,0x2c
  41d92b:	sub    dh,BYTE PTR [ebp+0x65d146ec]
  41d931:	jmp    0x22aede7e
  41d936:	cmp    BYTE PTR [ebx+0x1d00829e],0x1
  41d93d:	int3   
  41d93e:	js     0x41d943
  41d940:	lods   eax,DWORD PTR ds:[esi]
  41d941:	dec    esp
  41d942:	jo     0x41d985
  41d944:	xchg   ebx,eax
  41d945:	aam    0x82
  41d947:	(bad)  
  41d948:	(bad)  
  41d94a:	ja     0x41d8f2
  41d94c:	sub    ch,BYTE PTR [edi+0x5a]
  41d94f:	xor    edi,DWORD PTR [ecx+0x61]
  41d952:	ret    0xdf22
  41d955:	addr16 call 0xc8670c3a
  41d95b:	sbb    DWORD PTR [edi-0x16090e37],ebx
  41d961:	push   ecx
  41d962:	xor    edi,DWORD PTR [edx-0x2b5d434c]
  41d968:	sbb    edi,DWORD PTR [edx]
  41d96a:	retf   
  41d96b:	or     BYTE PTR [bp+di-0x64a9],cl
  41d970:	dec    ebx
  41d971:	push   ss
  41d972:	or     DWORD PTR [edi],edi
  41d974:	loopne 0x41d950
  41d976:	cmp    esp,ebx
  41d978:	sbb    DWORD PTR [ebp-0x64801fcd],esp
  41d97e:	xor    BYTE PTR [edx],bl
  41d980:	loope  0x41d946
  41d982:	xor    eax,0x5ab13d64
  41d987:	jbe    0x41d916
  41d989:	or     bh,bh
  41d98b:	bound  esi,QWORD PTR [edi-0x58]
  41d98e:	or     bl,BYTE PTR [edi+0x77fc4d92]
  41d994:	int3   
  41d995:	lahf   
  41d996:	or     al,0xa9
  41d998:	add    eax,0x356bba73
  41d99d:	mov    ch,0xe5
  41d99f:	sahf   
  41d9a0:	push   ds
  41d9a1:	test   al,0xe3
  41d9a3:	sbb    cl,bh
  41d9a5:	lea    edi,[ebp+0x68]
  41d9a8:	into   
  41d9a9:	mov    eax,ds:0x3681e954
  41d9ae:	mov    eax,0x564a8976
  41d9b3:	sbb    eax,0x5c3ccc3b
  41d9b8:	mov    bl,0xea
  41d9ba:	fldenv [esi-0x7ec4a12e]
  41d9c0:	shr    ecx,cl
  41d9c2:	dec    eax
  41d9c3:	outs   dx,DWORD PTR ds:[esi]
  41d9c4:	and    eax,0x1ea65681
  41d9c9:	cmp    al,BYTE PTR [ecx+0x6cd1a817]
  41d9cf:	xchg   DWORD PTR [ebp-0x57dbb81f],edx
  41d9d5:	ret    0xc154
  41d9d8:	sub    al,0x6e
  41d9da:	cmp    esi,ebp
  41d9dc:	std    
  41d9dd:	cmp    cl,dl
  41d9df:	sub    eax,0x997c7806
  41d9e4:	sub    al,0x61
  41d9e6:	ins    BYTE PTR es:[edi],dx
  41d9e7:	mov    cl,0xc
  41d9e9:	push   esp
  41d9ea:	add    bl,BYTE PTR [ecx-0x3eef4d4c]
  41d9f0:	int    0xbf
  41d9f2:	ret    
  41d9f3:	xchg   ebp,eax
  41d9f4:	pop    ebp
  41d9f5:	and    BYTE PTR [eax],bh
  41d9f7:	sbb    DWORD PTR [ebp-0x755b6e4c],eax
  41d9fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9fe:	(bad)  
  41da00:	jge    0x41d99c
  41da02:	int3   
  41da03:	inc    ebx
  41da04:	shld   DWORD PTR [edi+eiz*8],ecx,cl
  41da08:	sub    eax,0x7c4ff615
  41da0d:	cmp    al,0x32
  41da0f:	pop    es
  41da10:	call   0xf1fe:0x6f26ac6b
  41da17:	xlat   BYTE PTR ds:[ebx]
  41da18:	retf   
  41da19:	stos   BYTE PTR es:[edi],al
  41da1a:	dec    esp
  41da1b:	or     al,0x67
  41da1d:	sbb    eax,0x4fa16bd8
  41da22:	or     BYTE PTR [ecx+ebx*4-0xb],ch
  41da26:	mul    ecx
  41da28:	cld    
  41da29:	stos   DWORD PTR es:[edi],eax
  41da2a:	fs call 0x5fcf:0xe5bfd6f8
  41da32:	pop    ebx
  41da33:	mov    al,BYTE PTR [esi]
  41da35:	stos   DWORD PTR es:[edi],eax
  41da36:	mov    eax,0xf019b076
  41da3b:	loope  0x41da2e
  41da3d:	test   DWORD PTR [eax-0x4b],ebp
  41da40:	test   BYTE PTR [ebp+0x16],al
  41da43:	pusha  
  41da44:	fcmove st,st(1)
  41da46:	mov    ebp,DWORD PTR [esi-0xb]
  41da49:	rcl    BYTE PTR [ebx-0x78],cl
  41da4c:	add    cl,dh
  41da4e:	ds cmp al,0xe3
  41da51:	and    bh,BYTE PTR [esi-0x15c1d3f0]
  41da57:	retf   0xc6ed
  41da5a:	ins    BYTE PTR es:[edi],dx
  41da5b:	je     0x41dac6
  41da5d:	es push es
  41da5f:	(bad)  
  41da60:	pop    edx
  41da61:	gs xor al,cl
  41da64:	sub    ch,BYTE PTR [esi+0x15]
  41da67:	and    esp,DWORD PTR ds:0x6b1eea13
  41da6d:	adc    eax,0xbba3c2c6
  41da72:	cli    
  41da73:	push   ss
  41da74:	rcl    edi,0xa
  41da77:	aaa    
  41da78:	mov    ds:0xf170e73e,eax
  41da7d:	xor    eax,0x83feabe7
  41da82:	jb     0x41da3a
  41da84:	cmc    
  41da85:	aaa    
  41da86:	mov    cl,0xe9
  41da88:	xchg   BYTE PTR [edx+0x60],bl
  41da8b:	sub    eax,0x214e1a7b
  41da90:	(bad)  [eax+0x65]
  41da93:	repz sub BYTE PTR [esi+0x7c4d5bdf],ah
  41da9a:	pop    esi
  41da9b:	stos   DWORD PTR es:[edi],eax
  41da9c:	cmp    DWORD PTR [esi-0x4bc5b344],edi
  41daa2:	mov    edx,0xd056e408
  41daa7:	sub    al,0x2d
  41daa9:	aam    0xc5
  41daab:	sbb    al,0xbf
  41daad:	in     eax,dx
  41daae:	cmp    eax,0xd13f88af
  41dab3:	inc    edx
  41dab4:	js     0x41da52
  41dab6:	jo     0x41da51
  41dab8:	sub    ebp,DWORD PTR [ecx-0x2f7c8f46]
  41dabe:	cmp    ecx,DWORD PTR [si+0x49]
  41dac2:	sub    BYTE PTR [eax+0x4c],0xb
  41dac6:	fcmovu st,st(7)
  41dac8:	pop    ebp
  41dac9:	xor    bh,BYTE PTR [ebp+esi*8+0xf]
  41dacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dace:	ss jns 0x41dadb
  41dad1:	into   
  41dad2:	push   ebx
  41dad3:	and    eax,0x16329003
  41dad8:	ret    0x795b
  41dadb:	or     cl,BYTE PTR [ebp+0x1f]
  41dade:	inc    ecx
  41dadf:	mov    ?,edi
  41dae1:	pcmpgtd mm4,QWORD PTR [edx-0x5]
  41dae5:	iret   
  41dae6:	aaa    
  41dae7:	jl     0x41dac3
  41dae9:	lods   al,BYTE PTR ds:[esi]
  41daea:	sbb    ah,BYTE PTR ds:0xeb96f285
  41daf0:	ret    0x292e
  41daf3:	jecxz  0x41db1c
  41daf5:	pop    edx
  41daf6:	shr    DWORD PTR [eax-0x1a],1
  41daf9:	mov    edx,0x9b579424
  41dafe:	dec    edi
  41daff:	pop    esp
  41db00:	and    BYTE PTR [ebp+0x2],bl
  41db03:	faddp  st(1),st
  41db05:	push   0xffffffc8
  41db07:	out    0xde,eax
  41db09:	js     0x41dad4
  41db0b:	test   BYTE PTR [esi-0x7c1ed027],dh
  41db11:	dec    edx
  41db12:	(bad)  
  41db13:	mov    fs,WORD PTR [ebp+ebx*8+0x5961dfec]
  41db1a:	inc    ebx
  41db1b:	ror    DWORD PTR [esi],1
  41db1d:	cmp    esi,esp
  41db1f:	lds    eax,FWORD PTR [ebp-0x2e38ef7e]
  41db25:	aaa    
  41db26:	jae    0x41db77
  41db28:	in     eax,0x57
  41db2a:	dec    ebp
  41db2b:	inc    eax
  41db2c:	and    edx,0xa
  41db2f:	int3   
  41db30:	imul   ebp,DWORD PTR [ecx],0x27dfadc9
  41db36:	xchg   edx,eax
  41db37:	inc    esi
  41db38:	pop    ecx
  41db39:	or     eax,DWORD PTR [esi-0x6a893d9f]
  41db3f:	xor    ebx,DWORD PTR [esi+0x2]
  41db42:	adc    eax,0x3e46cdf0
  41db47:	jb     0x41dae3
  41db49:	xor    edi,edx
  41db4b:	or     BYTE PTR [edx-0x5f],dl
  41db4e:	cs push cs
  41db50:	popf   
  41db51:	sub    eax,ebx
  41db53:	push   esp
  41db54:	mov    esp,0x1e6784c1
  41db59:	xor    edi,esi
  41db5b:	pushf  
  41db5c:	mov    WORD PTR [ebx+0x2ef31e94],gs
  41db62:	loope  0x41db3e
  41db64:	mov    eax,0x30965804
  41db69:	int    0x3d
  41db6b:	xor    ebx,DWORD PTR [edx+ebx*1]
  41db6e:	inc    ebx
  41db6f:	jae    0x41dbc9
  41db71:	ins    BYTE PTR es:[edi],dx
  41db72:	rcl    DWORD PTR [edx+0x43],0x1e
  41db76:	push   ebp
  41db77:	mov    bh,0xd
  41db79:	add    al,0x33
  41db7b:	and    eax,0x1b77649d
  41db80:	inc    esi
  41db81:	jne    0x41db46
  41db83:	int    0x69
  41db85:	xlat   BYTE PTR ds:[ebx]
  41db86:	or     dh,BYTE PTR [ebx]
  41db88:	enter  0x770b,0x38
  41db8c:	rcr    BYTE PTR [edx-0xe],0x85
  41db90:	(bad)  
  41db91:	aaa    
  41db92:	add    edi,DWORD PTR [ecx-0x5f]
  41db95:	mov    dl,0x8d
  41db97:	pop    ds
  41db98:	imul   edi
  41db9a:	adc    DWORD PTR [eax],edi
  41db9c:	fs jp  0x41dbb9
  41db9f:	cmp    eax,0xe4416f3d
  41dba4:	imul   edx,DWORD PTR [ebp-0xc],0xdd4dee2f
  41dbab:	neg    DWORD PTR [ebp-0x1e]
  41dbae:	retf   0x99f7
  41dbb1:	int3   
  41dbb2:	scas   al,BYTE PTR es:[edi]
  41dbb3:	out    dx,eax
  41dbb4:	inc    ecx
  41dbb5:	loope  0x41db67
  41dbb7:	mov    ah,0xa6
  41dbb9:	imul   esi,DWORD PTR [esi],0x8
  41dbbc:	and    DWORD PTR [edx-0x1d5b7ab5],esp
  41dbc2:	sbb    BYTE PTR [esi],bl
  41dbc4:	pop    ds
  41dbc5:	stos   DWORD PTR es:[edi],eax
  41dbc6:	sub    ecx,DWORD PTR [ebx+0xab08752]
  41dbcc:	nop
  41dbcd:	and    eax,0xdd6ae984
  41dbd2:	push   es
  41dbd3:	push   esp
  41dbd4:	add    DWORD PTR [esi+eiz*4-0x49],edx
  41dbd8:	addr16 dec ebp
  41dbda:	mov    ebx,0xd2e7cf6b
  41dbdf:	dec    ebx
  41dbe0:	sub    BYTE PTR [ebx-0x7f5989fc],al
  41dbe6:	sbb    bl,BYTE PTR [esi+0x38d34af5]
  41dbec:	pop    esi
  41dbed:	cmp    esi,DWORD PTR [esi]
  41dbef:	test   ebp,ecx
  41dbf1:	mov    bl,0xb2
  41dbf3:	aam    0xa0
  41dbf5:	pop    esi
  41dbf6:	sahf   
  41dbf7:	adc    edi,DWORD PTR [eax+0x3824caa7]
  41dbfd:	jecxz  0x41dbaa
  41dbff:	xor    BYTE PTR [esp+eiz*8],dh
  41dc02:	xchg   ecx,eax
  41dc03:	call   0x83c58abb
  41dc08:	scas   al,BYTE PTR es:[edi]
  41dc09:	jle    0x41dc31
  41dc0b:	xor    esp,ecx
  41dc0d:	xor    eax,0xc0037179
  41dc12:	jo     0x41dc64
  41dc14:	sbb    edi,ebx
  41dc16:	inc    edi
  41dc17:	push   ecx
  41dc18:	mov    al,0xce
  41dc1a:	hlt    
  41dc1b:	sbb    bl,BYTE PTR [esi+0x54d06c0e]
  41dc21:	push   edx
  41dc22:	(bad)  
  41dc24:	cmp    cl,BYTE PTR [edi]
  41dc26:	xchg   ebp,eax
  41dc27:	inc    edi
  41dc28:	push   es
  41dc29:	les    edx,FWORD PTR [ebp+0x561cb424]
  41dc2f:	leave  
  41dc30:	mov    ss,WORD PTR [edx]
  41dc32:	shl    BYTE PTR [esp+esi*4+0xe62934],cl
  41dc39:	mov    bl,0x5a
  41dc3b:	imul   esi,DWORD PTR [ebx+0x56],0x42
  41dc3f:	scas   al,BYTE PTR es:[edi]
  41dc40:	sbb    BYTE PTR [edi-0x9],al
  41dc43:	mov    esp,0xb3c0843b
  41dc48:	sub    DWORD PTR ds:0xac2cd231,edi
  41dc4e:	imul   esp,DWORD PTR [esi],0xffffffdf
  41dc51:	or     eax,esi
  41dc53:	pop    esi
  41dc54:	jbe    0x41dc61
  41dc56:	jbe    0x41dcc1
  41dc58:	xor    eax,0x3f2a03c3
  41dc5d:	mov    dh,0x2d
  41dc5f:	inc    ecx
  41dc60:	ret    0x9269
  41dc63:	pop    DWORD PTR [eax-0x5a]
  41dc66:	lea    edi,[eax-0x3d]
  41dc69:	popa   
  41dc6a:	cmp    BYTE PTR [edi+0x11324696],bh
  41dc70:	arpl   di,cx
  41dc72:	push   esp
  41dc73:	aaa    
  41dc74:	stc    
  41dc75:	xchg   BYTE PTR [bp+si-0x14],al
  41dc79:	mov    ch,0x39
  41dc7b:	fsubr  DWORD PTR [ebx-0x3a]
  41dc7e:	adc    DWORD PTR [esi-0x4c],edi
  41dc81:	(bad)  
  41dc82:	pop    ebx
  41dc83:	es ins BYTE PTR es:[edi],dx
  41dc85:	dec    esi
  41dc86:	inc    ebp
  41dc87:	or     ch,BYTE PTR [esi+0x1e]
  41dc8a:	mov    DWORD PTR [ecx-0x1cdec6d5],edx
  41dc90:	add    ch,BYTE PTR ds:0x9fbe19c9
  41dc96:	and    DWORD PTR [eax],edi
  41dc98:	daa    
  41dc99:	fidiv  DWORD PTR [esi]
  41dc9b:	or     al,0xcb
  41dc9d:	popf   
  41dc9e:	shl    BYTE PTR [edi+0x6ef357da],0xba
  41dca5:	out    dx,eax
  41dca6:	fistp  DWORD PTR [eax-0x21]
  41dca9:	imul   ebx,eax,0xac15448d
  41dcaf:	shl    BYTE PTR [esi],cl
  41dcb1:	cli    
  41dcb2:	inc    eax
  41dcb3:	cwde   
  41dcb4:	add    BYTE PTR [eax+0x16],0x8d
  41dcb8:	lahf   
  41dcb9:	or     edx,DWORD PTR cs:[esi]
  41dcbc:	sbb    dh,cl
  41dcbe:	shr    dl,cl
  41dcc0:	scas   eax,DWORD PTR es:[edi]
  41dcc1:	push   ds
  41dcc2:	ins    BYTE PTR es:[edi],dx
  41dcc3:	enter  0x1678,0x89
  41dcc7:	jp     0x41dcbe
  41dcc9:	dec    ebx
  41dcca:	push   ecx
  41dccb:	mov    bl,0x9f
  41dccd:	xor    eax,0xa33fe5ec
  41dcd2:	call   0x305d0542
  41dcd7:	arpl   cx,dx
  41dcd9:	dec    ebx
  41dcda:	rcr    DWORD PTR [eax],0x31
  41dcdd:	jp     0x41dd02
  41dcdf:	and    ah,BYTE PTR [esp+ecx*1]
  41dce2:	push   0xb048bb8f
  41dce7:	inc    ebp
  41dce8:	stos   BYTE PTR es:[edi],al
  41dce9:	cmp    eax,0x9345d565
  41dcee:	jge    0x41dcd0
  41dcf0:	das    
  41dcf1:	and    bl,BYTE PTR [edi]
  41dcf3:	add    ecx,0x76b47e53
  41dcf9:	ret    0x738
  41dcfc:	mov    al,ds:0xda0aef25
  41dd01:	stc    
  41dd02:	mov    ds:0x5304666b,eax
  41dd07:	fild   DWORD PTR [edi+0x21]
  41dd0a:	in     al,dx
  41dd0b:	xchg   ebx,eax
  41dd0c:	push   ecx
  41dd0d:	adc    dh,BYTE PTR [edi+0x4986b90a]
  41dd13:	mov    bh,0x8
  41dd15:	mov    al,0xe4
  41dd17:	pop    esi
  41dd18:	pop    esp
  41dd19:	and    al,0x25
  41dd1b:	(bad)
  41dd1f:	or     esi,0xffffffb7
  41dd22:	(bad)  
  41dd23:	repz adc ebp,DWORD PTR [esi+ebp*2-0x66]
  41dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd29:	shr    BYTE PTR [esi-0x49bcc95d],cl
  41dd2f:	push   0x47
  41dd31:	retf   0xfb36
  41dd34:	jns    0x41dcc4
  41dd36:	fidivr DWORD PTR [edi+0x6b]
  41dd39:	cwde   
  41dd3a:	fs test DWORD PTR cs:[ecx+edi*8+0x0],esi
  41dd40:	mov    ebx,0x7245cc70
  41dd45:	cmp    eax,0xdc1377d
  41dd4a:	xor    eax,0xd4b47c70
  41dd4f:	inc    ebp
  41dd50:	inc    ebx
  41dd51:	lahf   
  41dd52:	call   0xe72e:0xa870c982
  41dd59:	xor    al,0x51
  41dd5b:	dec    ebx
  41dd5c:	mov    ds:0xf3c1b80b,al
  41dd61:	jl     0x41dd11
  41dd63:	mov    esp,0x6de81b04
  41dd68:	ror    BYTE PTR [ebx+0x38],cl
  41dd6b:	pop    eax
  41dd6c:	pop    ebx
  41dd6d:	and    esp,DWORD PTR [ebx+ebx*8]
  41dd70:	or     dl,BYTE PTR ds:0xe993396f
  41dd76:	fwait
  41dd77:	push   eax
  41dd78:	sub    eax,0xc2494d0e
  41dd7d:	leave  
  41dd7e:	mov    al,BYTE PTR [ebx*4-0x45bc317f]
  41dd85:	mov    eax,ds:0x8edafa35
  41dd8a:	sub    eax,0xd2305859
  41dd8f:	pop    edx
  41dd90:	scas   eax,DWORD PTR es:[edi]
  41dd91:	int3   
  41dd92:	sbb    eax,0xdbfd69c6
  41dd97:	loope  0x41dd92
  41dd99:	pop    edx
  41dd9a:	fwait
  41dd9b:	or     edi,ecx
  41dd9d:	test   bl,ch
  41dd9f:	xor    DWORD PTR [eax+0x50],ebx
  41dda2:	test   DWORD PTR [ebx-0x361519f3],esp
  41dda8:	test   eax,0xa07f9e20
  41ddad:	ret    
  41ddae:	out    dx,al
  41ddaf:	pop    edx
  41ddb0:	or     BYTE PTR [edi-0xa],0xce
  41ddb4:	js     0x41dd54
  41ddb6:	out    0xfc,eax
  41ddb8:	xor    DWORD PTR [edx],eax
  41ddba:	pop    esi
  41ddbb:	mov    ds:0x5aae1e80,al
  41ddc0:	pushf  
  41ddc1:	dec    ebp
  41ddc2:	arpl   WORD PTR [edi],dx
  41ddc4:	call   0xaebdfc8e
  41ddc9:	pop    ss
  41ddca:	dec    esp
  41ddcb:	stos   BYTE PTR es:[edi],al
  41ddcc:	push   eax
  41ddcd:	ds in  al,dx
  41ddcf:	dec    esi
  41ddd0:	std    
  41ddd1:	sahf   
  41ddd2:	jecxz  0x41de18
  41ddd4:	pop    ebp
  41ddd5:	sub    ah,ah
  41ddd7:	and    al,0x8
  41ddd9:	lods   eax,DWORD PTR ds:[esi]
  41ddda:	sbb    eax,0x58570fd8
  41dddf:	popf   
  41dde0:	ins    BYTE PTR es:[edi],dx
  41dde1:	in     al,dx
  41dde2:	into   
  41dde3:	lea    esi,[edi]
  41dde5:	push   bx
  41dde7:	rcl    DWORD PTR [esp+eiz*2+0x1f516947],cl
  41ddee:	lock add eax,0x1643190
  41ddf4:	or     eax,0x4b8afa27
  41ddf9:	push   ebp
  41ddfa:	xor    al,0x7c
  41ddfc:	mov    edx,0xe8a05595
  41de01:	mov    ecx,0xabb5db0b
  41de06:	frstor [ebp+0x4]
  41de09:	aas    
  41de0a:	or     al,0xbd
  41de0c:	pop    esp
  41de0d:	cmp    DWORD PTR [ebp+0x6b],esp
  41de10:	pop    ss
  41de11:	push   eax
  41de12:	stos   BYTE PTR es:[edi],al
  41de13:	outs   dx,DWORD PTR ds:[esi]
  41de14:	mov    ds:0xea05d28c,eax
  41de19:	sti    
  41de1a:	pop    es
  41de1b:	xor    DWORD PTR [ecx],ebx
  41de1d:	aaa    
  41de1e:	push   edi
  41de1f:	or     esi,edx
  41de21:	sbb    esp,DWORD PTR [ecx-0x38b71142]
  41de27:	xchg   esi,eax
  41de28:	nop
  41de29:	push   ebx
  41de2a:	cmp    eax,0x89b7a09f
  41de2f:	dec    ebx
  41de30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de31:	push   esp
  41de32:	adc    al,BYTE PTR [ebx]
  41de34:	lahf   
  41de35:	std    
  41de36:	mov    ecx,0x51fbceeb
  41de3b:	loopne 0x41de25
  41de3d:	cmp    ebp,DWORD PTR [ebx+0x21a18e15]
  41de43:	xchg   ebx,eax
  41de44:	adc    DWORD PTR [edi+edi*4-0x6ee47c5d],0x66
  41de4c:	ficom  DWORD PTR [ecx]
  41de4e:	mov    esp,0xa222c603
  41de53:	ffree  st(5)
  41de55:	add    BYTE PTR [ebx+0x3a335d9c],0xe5
  41de5c:	add    al,0x5
  41de5e:	fcom   st(0)
  41de60:	xchg   edi,eax
  41de61:	rol    al,cl
  41de63:	mov    cl,0x79
  41de65:	mov    ch,0x37
  41de67:	sbb    eax,0x90d888c3
  41de6c:	adc    BYTE PTR [ebx-0x1000a450],al
  41de72:	push   cs
  41de73:	jno    0x41decf
  41de75:	test   BYTE PTR [ebx],al
  41de77:	pop    ss
  41de78:	stos   DWORD PTR es:[edi],eax
  41de79:	mov    ah,0xd
  41de7b:	es dec edx
  41de7d:	shl    BYTE PTR [ebp-0x79],cl
  41de80:	cld    
  41de81:	cmp    eax,0x3b265818
  41de86:	aaa    
  41de87:	scas   eax,DWORD PTR es:[edi]
  41de88:	push   es
  41de89:	bound  edi,QWORD PTR [ecx]
  41de8b:	cld    
  41de8c:	sbb    DWORD PTR [eax],ebp
  41de8e:	lea    esp,[eax-0x6e]
  41de91:	push   esi
  41de92:	je     0x41de73
  41de94:	ins    BYTE PTR es:[edi],dx
  41de95:	clc    
  41de96:	clc    
  41de97:	and    DWORD PTR [edx+edx*2+0x70222a93],eax
  41de9e:	push   ecx
  41de9f:	cdq    
  41dea0:	pusha  
  41dea1:	scas   al,BYTE PTR es:[edi]
  41dea2:	jb     0x41df23
  41dea4:	nop
  41dea5:	push   es
  41dea6:	cmp    eax,0xc31a44eb
  41deab:	cwde   
  41deac:	pop    eax
  41dead:	push   edi
  41deae:	ins    BYTE PTR es:[edi],dx
  41deaf:	ror    BYTE PTR [ecx],1
  41deb1:	loop   0x41debb
  41deb3:	je     0x41de7a
  41deb5:	(bad)  
  41deb6:	adc    BYTE PTR [eax+ebp*8],0x32
  41deba:	cmp    eax,0xcf73dd29
  41debf:	aaa    
  41dec0:	out    dx,al
  41dec1:	xlat   BYTE PTR ds:[ebx]
  41dec2:	and    BYTE PTR [edi+0x67992da6],0x7
  41dec9:	xor    al,0xce
  41decb:	shr    BYTE PTR [edi-0x8],cl
  41dece:	mov    edx,0x47f5f8fc
  41ded3:	aam    0xd5
  41ded5:	dec    edx
  41ded6:	mov    bl,0xab
  41ded8:	rcl    BYTE PTR [ebp+0x3d121091],cl
  41dede:	test   DWORD PTR [ebx-0x468e4e17],0x24df9d8d
  41dee8:	ret    0x7f59
  41deeb:	les    ebx,FWORD PTR ds:0xd9a6d8f0
  41def1:	add    eax,0x12ab19a6
  41def6:	mov    ebx,0xa9ba22d4
  41defb:	out    0xaa,al
  41defd:	push   edi
  41defe:	pop    edi
  41deff:	setge  BYTE PTR [edi+0x1c4507d2]
  41df06:	in     al,dx
  41df07:	add    bh,0x5c
  41df0a:	inc    ebp
  41df0b:	ins    BYTE PTR es:[edi],dx
  41df0c:	icebp  
  41df0d:	cmp    eax,DWORD PTR [edi]
  41df0f:	loope  0x41def4
  41df11:	(bad)  
  41df12:	xor    bh,BYTE PTR [ecx-0x33]
  41df15:	push   0x7c
  41df17:	xchg   ebx,eax
  41df18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df19:	jle    0x41ded7
  41df1b:	fisttp QWORD PTR [esi+0x6128e3fb]
  41df21:	push   ss
  41df22:	repnz and eax,0xe391ba76
  41df28:	xlat   BYTE PTR ds:[ebx]
  41df29:	or     ebx,DWORD PTR [edx+0xf]
  41df2c:	mov    BYTE PTR [edx+0x7e3627a5],bl
  41df32:	outs   dx,DWORD PTR ds:[esi]
  41df33:	in     al,0x5e
  41df35:	(bad)  
  41df36:	cdq    
  41df37:	out    dx,al
  41df38:	xlat   BYTE PTR ds:[ebx]
  41df39:	mov    ds:0x5d112abd,al
  41df3e:	push   ds
  41df3f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41df41:	jmp    0xedf4:0x854b29ca
  41df48:	je     0x41dee2
  41df4a:	fnsave [eax-0x7]
  41df4d:	sbb    BYTE PTR [ebx-0x1],dl
  41df50:	cmp    dl,BYTE PTR [esi-0x2cc3c9b9]
  41df56:	cs xchg ecx,eax
  41df58:	adc    BYTE PTR [ecx-0x183adcb1],cl
  41df5e:	in     al,0xd8
  41df60:	not    BYTE PTR [ecx+0x48d8f3e3]
  41df66:	xchg   bp,ax
  41df68:	in     eax,0x80
  41df6a:	pop    edi
  41df6b:	cwde   
  41df6c:	add    eax,0x295d0760
  41df71:	retf   
  41df72:	int3   
  41df73:	jns    0x41df90
  41df75:	enter  0xd825,0xc2
  41df79:	or     al,0xbd
  41df7b:	adc    DWORD PTR [ecx+ebx*4],ebx
  41df7e:	popa   
  41df7f:	cwde   
  41df80:	or     DWORD PTR [ecx+0x5b03f9ee],0x65
  41df87:	pop    ecx
  41df88:	push   es
  41df89:	cld    
  41df8a:	or     al,0xbd
  41df8c:	push   ss
  41df8d:	in     al,dx
  41df8e:	in     eax,dx
  41df8f:	sbb    al,0x85
  41df91:	lahf   
  41df92:	sahf   
  41df93:	jns    0x41df65
  41df95:	push   eax
  41df96:	cmp    ch,BYTE PTR [edi+0x2507ac63]
  41df9c:	xchg   ebx,eax
  41df9d:	and    DWORD PTR [edx],edi
  41df9f:	test   BYTE PTR [edx+0x3f],bl
  41dfa2:	cdq    
  41dfa3:	ss mov edx,0x5680a6c5
  41dfa9:	mov    dl,0xa1
  41dfab:	call   0x4759:0x160ebe14
  41dfb2:	xchg   BYTE PTR [ebp-0xe9c771],dl
  41dfb8:	cwde   
  41dfb9:	mov    BYTE PTR [ebx+0x29],dl
  41dfbc:	shr    BYTE PTR ds:0x9cbb0234,1
  41dfc2:	inc    esp
  41dfc3:	mov    ebx,0x64677ab4
  41dfc8:	iret   
  41dfc9:	and    al,0x87
  41dfcb:	ja     0x41df74
  41dfcd:	sub    ch,ah
  41dfcf:	mov    ?,WORD PTR [edx-0x69215077]
  41dfd5:	mov    esp,DWORD PTR [edx-0x27]
  41dfd8:	mov    ch,0x79
  41dfda:	rol    DWORD PTR [edx-0x4e],0xa
  41dfde:	popf   
  41dfdf:	into   
  41dfe0:	push   0x719e7eb7
  41dfe5:	mov    al,ch
  41dfe7:	inc    eax
  41dfe8:	cmp    eax,0x32addab2
  41dfed:	scas   eax,DWORD PTR es:[edi]
  41dfee:	xchg   BYTE PTR [esi-0x13],ah
  41dff1:	xlat   BYTE PTR ds:[ebx]
  41dff2:	jecxz  0x41dfff
  41dff4:	mov    ds:0x31f93f9,al
  41dff9:	cli    
  41dffa:	cs add edi,ebp
  41dffd:	xchg   edi,edi
  41dfff:	test   al,0xd
  41e001:	fcmovu st,st(3)
  41e003:	pop    ebx
  41e004:	add    edx,DWORD PTR [ebp+0x1d44ce77]
  41e00a:	les    esp,FWORD PTR [ebp-0x35bbabe7]
  41e010:	int    0x76
  41e012:	icebp  
  41e013:	gs jnp 0x41dfa3
  41e016:	xor    bh,ah
  41e018:	xor    eax,0xa44b2fe5
  41e01d:	loopne 0x41dfad
  41e01f:	lea    ecx,[ecx+0x103aebd4]
  41e025:	jmp    0xcd6e:0x31cc88c5
  41e02c:	mov    ebp,0xa4e7ebe1
  41e031:	icebp  
  41e032:	mov    dh,0x7
  41e034:	das    
  41e035:	adc    cl,BYTE PTR [eax+ebx*1+0x40]
  41e039:	loope  0x41e08d
  41e03b:	ins    BYTE PTR es:[edi],dx
  41e03c:	call   0x730e:0x2b648e4a
  41e043:	nop
  41e044:	nop
  41e045:	xchg   edx,eax
  41e046:	in     al,0x9b
  41e048:	ret    
  41e049:	cmp    eax,DWORD PTR [ecx+0x19]
  41e04c:	aaa    
  41e04d:	or     dl,cl
  41e04f:	dec    edi
  41e050:	fst    QWORD PTR [esi-0x6]
  41e053:	out    dx,eax
  41e054:	ficomp WORD PTR ds:0x6f49ac95
  41e05a:	mov    BYTE PTR [edi-0xf99cbe2],bh
  41e060:	test   DWORD PTR [ebx+0x25],edi
  41e063:	ret    0x3d30
  41e066:	mov    ebp,0xa3202493
  41e06b:	mov    bl,0xdf
  41e06d:	imul   edx,DWORD PTR [eax+0x2d6d3cfa],0xf9acc1b3
  41e077:	add    dh,al
  41e079:	xchg   ebx,eax
  41e07a:	sahf   
  41e07b:	pop    esp
  41e07c:	cmc    
  41e07d:	push   0x896f4c77
  41e082:	xchg   edi,eax
  41e083:	or     BYTE PTR [edi+0x6efc82f5],bl
  41e089:	inc    ebp
  41e08a:	mov    ebx,0xba8b368a
  41e08f:	jne    0x41e05c
  41e091:	fwait
  41e092:	je     0x41e0bb
  41e094:	xor    al,BYTE PTR [edx]
  41e096:	pop    esi
  41e097:	sbb    DWORD PTR [ecx],edi
  41e099:	pop    ebp
  41e09a:	add    ebx,esp
  41e09c:	or     eax,0xb740e165
  41e0a1:	xchg   edi,eax
  41e0a2:	daa    
  41e0a3:	jmp    0x41e088
  41e0a5:	or     BYTE PTR ds:0xd7fb8080,bl
  41e0ab:	stos   DWORD PTR es:[edi],eax
  41e0ac:	xchg   edi,eax
  41e0ad:	out    0xcc,al
  41e0af:	std    
  41e0b0:	add    DWORD PTR [eax-0x62],edx
  41e0b3:	and    eax,0xbbb2f266
  41e0b8:	sahf   
  41e0b9:	mov    ebp,ss
  41e0bb:	repz in eax,0xf9
  41e0be:	mov    ds,WORD PTR [esp+ebx*2-0x70]
  41e0c2:	sbb    al,0x87
  41e0c4:	pop    esp
  41e0c5:	call   0x21c353e7
  41e0ca:	and    DWORD PTR [edi+0x2f],edi
  41e0cd:	or     al,0x8c
  41e0cf:	mov    esp,0xa93e0464
  41e0d4:	popf   
  41e0d5:	jne    0x41e0b6
  41e0d7:	or     DWORD PTR [esi],esp
  41e0d9:	daa    
  41e0da:	(bad)  
  41e0db:	cld    
  41e0dc:	and    DWORD PTR [edx+0x788b137f],eax
  41e0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e3:	xor    DWORD PTR [ebx-0x73570f91],0xffffff81
  41e0ea:	sub    eax,0x17b842c
  41e0ef:	inc    esp
  41e0f0:	out    dx,al
  41e0f1:	and    edi,DWORD PTR [ebp-0x66c8e70a]
  41e0f7:	xchg   ecx,eax
  41e0f8:	or     ax,WORD PTR fs:[eax]
  41e0fc:	mov    ?,WORD PTR [edx+ecx*4+0x1fbf35f5]
  41e103:	call   0xf0ac:0xfa254e0
  41e10a:	rcl    BYTE PTR [ecx+0x1f4a202b],0xf1
  41e111:	fimul  DWORD PTR [edi+0x37cbadae]
  41e117:	lods   al,BYTE PTR ds:[esi]
  41e118:	out    dx,eax
  41e119:	jge    0x41e0f0
  41e11b:	push   ebp
  41e11c:	sub    al,0xf4
  41e11e:	mov    dl,0xab
  41e120:	dec    esi
  41e121:	inc    edi
  41e122:	(bad)  
  41e123:	jg     0x41e197
  41e125:	pop    ds
  41e126:	js     0x41e19f
  41e128:	mov    ch,0x1a
  41e12a:	pop    ss
  41e12b:	mov    dh,0x5a
  41e12d:	mov    esi,0x8edfdea
  41e132:	jns    0x41e166
  41e134:	std    
  41e135:	jge    0x41e156
  41e137:	aas    
  41e138:	mov    dh,0xe2
  41e13a:	loope  0x41e172
  41e13c:	push   es
  41e13d:	in     al,dx
  41e13e:	in     eax,0x22
  41e140:	xor    eax,0xc24ed0bf
  41e145:	fdiv   DWORD PTR ds:0x868c73
  41e14b:	xor    cl,bh
  41e14d:	mov    dh,0xf7
  41e150:	pop    ebp
  41e151:	shr    DWORD PTR [ecx],cl
  41e153:	aam    0x30
  41e155:	repz xor eax,0x3dc227a2
  41e15b:	xchg   edx,eax
  41e15c:	xchg   ecx,eax
  41e15d:	inc    edi
  41e15e:	enter  0x2df0,0xd5
  41e162:	add    BYTE PTR [esi],bl
  41e164:	test   DWORD PTR [edx],0xe760bcac
  41e16a:	adc    eax,DWORD PTR [esi+0x77]
  41e16d:	aam    0xbe
  41e16f:	(bad)  
  41e170:	fdiv   st,st(5)
  41e172:	xlat   BYTE PTR ds:[ebx]
  41e173:	(bad)  
  41e174:	std    
  41e175:	push   esp
  41e176:	scas   al,BYTE PTR es:[edi]
  41e177:	js     0x41e151
  41e179:	addr16 ja 0x41e1f5
  41e17c:	loop   0x41e194
  41e17e:	xchg   DWORD PTR [edi+0x1a36dad3],edi
  41e184:	mov    ecx,0x51d483a4
  41e189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18a:	xchg   edx,eax
  41e18b:	repnz pop eax
  41e18d:	cmp    BYTE PTR [edi-0x464f4e30],0x46
  41e194:	jnp    0x41e164
  41e196:	das    
  41e197:	jmp    0x41e1a4
  41e199:	arpl   WORD PTR [esi-0x62],dx
  41e19c:	add    DWORD PTR [edi+0x5bc7f887],edx
  41e1a2:	stos   BYTE PTR es:[edi],al
  41e1a3:	cdq    
  41e1a4:	push   edx
  41e1a5:	iret   
  41e1a6:	mov    dl,0x4
  41e1a8:	cld    
  41e1a9:	mov    ebp,0x6523e5b0
  41e1ae:	mov    ebp,0xa9524f56
  41e1b3:	mov    dl,0x6f
  41e1b5:	mov    ecx,0xf4c39f5d
  41e1ba:	and    eax,DWORD PTR ds:0xb590972e
  41e1c0:	inc    DWORD PTR [edi]
  41e1c2:	and    eax,0xf2785f96
  41e1c7:	sbb    al,BYTE PTR [ecx-0x2d3e6ab5]
  41e1cd:	adc    al,0x7b
  41e1cf:	(bad)  
  41e1d0:	sbb    DWORD PTR ds:0x772ff46c,edx
  41e1d6:	adc    al,0xb1
  41e1d8:	adc    al,0x51
  41e1da:	test   DWORD PTR [edx-0x41b4f003],edx
  41e1e0:	add    ebp,ebp
  41e1e2:	jmp    0xb84f903c
  41e1e7:	mov    al,0xc3
  41e1e9:	jmp    0x14f1b2da
  41e1ee:	aas    
  41e1ef:	jmp    0x41e1b2
  41e1f1:	dec    esi
  41e1f2:	into   
  41e1f3:	daa    
  41e1f4:	loop   0x41e1a1
  41e1f6:	les    ecx,FWORD PTR [edx+ebp*8]
  41e1f9:	arpl   di,ax
  41e1fb:	je     0x41e1b8
  41e1fd:	xchg   BYTE PTR [esi+edi*4-0xbd30dbc],ch
  41e204:	push   0xffffffc6
  41e206:	pop    esp
  41e207:	xor    eax,0x54ec6fbd
  41e20c:	cwde   
  41e20d:	dec    edi
  41e20e:	fidiv  DWORD PTR ds:0xbbefae0a
  41e214:	xor    BYTE PTR [edi-0x70240732],dl
  41e21a:	sub    dl,BYTE PTR [ebx]
  41e21c:	call   0xc0a2:0xcbd111e1
  41e223:	sbb    ch,BYTE PTR [eax]
  41e225:	outs   dx,BYTE PTR ds:[esi]
  41e226:	pop    eax
  41e227:	adc    eax,eax
  41e229:	pop    ds
  41e22a:	xor    al,cl
  41e22c:	sub    ch,bh
  41e22e:	in     al,dx
  41e22f:	mov    edx,0x5bb5e339
  41e234:	shl    ebp,cl
  41e236:	mov    ebp,0x3cc8ee23
  41e23b:	add    al,BYTE PTR [ebx+0x1219e90c]
  41e241:	and    eax,0x944b486d
  41e246:	xchg   esp,eax
  41e247:	jns    0x41e25c
  41e249:	jbe    0x41e205
  41e24b:	xchg   BYTE PTR [esi+0x59],cl
  41e24e:	int    0x2c
  41e250:	sub    dl,cl
  41e252:	jae    0x41e225
  41e254:	inc    eax
  41e255:	cmp    ecx,DWORD PTR [edx-0x61]
  41e258:	shl    DWORD PTR [esi-0x2e6027a4],0xee
  41e25f:	ret    
  41e260:	ins    DWORD PTR es:[edi],dx
  41e261:	in     eax,dx
  41e262:	add    eax,0xa4ae3b74
  41e267:	add    al,BYTE PTR [ebp+edx*2-0x52]
  41e26b:	and    eax,0x7677464c
  41e270:	dec    esi
  41e271:	jns    0x41e246
  41e273:	(bad)  
  41e274:	repz push cs
  41e276:	xor    al,0x8e
  41e278:	xor    dl,BYTE PTR [edi-0x373c5ab6]
  41e27e:	cwde   
  41e27f:	mov    esi,0xa89d71ac
  41e284:	inc    esi
  41e285:	sbb    al,0x6a
  41e287:	dec    esi
  41e288:	(bad)  
  41e289:	dec    esp
  41e28a:	and    dl,ah
  41e28c:	div    al
  41e28e:	repz leave 
  41e290:	push   0x38611706
  41e295:	or     ebp,DWORD PTR ds:0x804a9566
  41e29b:	fistp  QWORD PTR [edi+0x26]
  41e29e:	jo     0x41e2e1
  41e2a0:	mov    ecx,0x188375f3
  41e2a5:	inc    ebx
  41e2a6:	ins    DWORD PTR es:[edi],dx
  41e2a7:	iret   
  41e2a8:	les    esp,FWORD PTR [eax-0x459963c9]
  41e2ae:	and    BYTE PTR [ecx],al
  41e2b0:	call   0x8f35:0x2a2aafbd
  41e2b7:	mov    al,0xf7
  41e2b9:	add    DWORD PTR [ecx+ebp*8+0x9342666],ecx
  41e2c0:	test   eax,0x15aafd5f
  41e2c5:	shr    BYTE PTR [ebp-0x47],1
  41e2c8:	inc    ecx
  41e2c9:	xchg   ebp,eax
  41e2ca:	mov    bh,0x1e
  41e2cc:	enter  0x74af,0x5b
  41e2d0:	pop    ebp
  41e2d1:	pop    edi
  41e2d2:	pop    ebp
  41e2d3:	imul   esp,ecx,0xffffffb0
  41e2d6:	xchg   esi,eax
  41e2d7:	cmp    esi,edi
  41e2d9:	arpl   WORD PTR [esi],sp
  41e2db:	and    BYTE PTR [esp+ebp*4],0x75
  41e2df:	in     al,0x69
  41e2e1:	or     ebp,edi
  41e2e3:	xor    ecx,DWORD PTR [esi+esi*2+0x65]
  41e2e7:	or     ebx,DWORD PTR [ecx]
  41e2e9:	push   0x52
  41e2eb:	jg     0x41e34c
  41e2ed:	push   es
  41e2ee:	xor    eax,0x6b8ffa22
  41e2f3:	and    eax,0x25ce3e6
  41e2f8:	xchg   edi,eax
  41e2f9:	inc    ecx
  41e2fa:	cmp    BYTE PTR [eax],cl
  41e2fc:	or     eax,0x717d1370
  41e301:	jo     0x41e285
  41e303:	dec    eax
  41e304:	lea    ebp,[eax-0x5d]
  41e307:	cmc    
  41e308:	or     edx,ebx
  41e30a:	dec    esi
  41e30b:	xor    ecx,esp
  41e30d:	aam    0x27
  41e30f:	cmp    eax,eax
  41e311:	inc    esp
  41e312:	jp     0x41e379
  41e314:	cdq    
  41e315:	push   ebp
  41e316:	arpl   WORD PTR [ebx],di
  41e318:	test   DWORD PTR [eax-0x7220a79e],ebp
  41e31e:	ror    DWORD PTR [esi],cl
  41e320:	inc    edx
  41e321:	push   ebx
  41e322:	mov    DWORD PTR ds:0x33721479,ebp
  41e328:	mov    DWORD PTR [ebx+0xf3d00f2],0xf70941e
  41e332:	test   DWORD PTR [esi],ebp
  41e334:	add    BYTE PTR [eax],al
  41e336:	add    BYTE PTR [ebx-0x7af00006],al
  41e33c:	and    eax,0x8b000000
  41e341:	inc    ebp
  41e342:	cld    
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x49
  41e3e0:	jecxz  0x41e40c
  41e3e2:	jnp    0x41e3f5
  41e3e4:	aad    0x82
  41e3e6:	sbb    ecx,0x5c
  41e3e9:	add    DWORD PTR [ebx+0x6ab6c49],0xffffffad
  41e3f0:	cld    
  41e3f1:	mov    ds:0xf73fda1b,al
  41e3f6:	mov    WORD PTR [edi+0x7088d81a],cs
  41e3fc:	test   al,0x38
  41e3fe:	out    dx,eax
  41e3ff:	mov    BYTE PTR [ecx-0x22],bh
  41e402:	ja     0x41e3ba
  41e404:	and    esp,DWORD PTR [ebx-0x25a58251]
  41e40a:	dec    ecx
  41e40b:	mov    al,0xf1
  41e40d:	stos   BYTE PTR es:[edi],al
  41e40e:	dec    ebx
  41e40f:	out    0x95,al
  41e411:	jmp    0x4d54:0xf4b3e829
  41e418:	(bad)  
  41e419:	lds    ebp,FWORD PTR [eax-0x56a25789]
  41e41f:	inc    ebp
  41e420:	fld    TBYTE PTR [ebp-0x69790904]
  41e426:	popf   
  41e427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e428:	mov    esp,0xc25b7ef4
  41e42d:	mov    edi,0x991981ac
  41e432:	pop    ss
  41e433:	or     BYTE PTR [eax],0x15
  41e436:	xor    cl,al
  41e438:	(bad)  
  41e439:	mov    ds:0x219aec8,al
  41e43e:	cmp    eax,DWORD PTR [ebx]
  41e440:	cmovbe esi,DWORD PTR [esi+0x74]
  41e444:	add    eax,0x9
  41e447:	xor    al,0xda
  41e449:	jmp    ecx
  41e44b:	xor    BYTE PTR [eax-0x34],ch
  41e44e:	adc    eax,0xd86dc897
  41e453:	cmp    DWORD PTR [edi],edx
  41e455:	pop    ds
  41e456:	xor    bl,BYTE PTR [esi+edi*1+0x13]
  41e45a:	mov    ebx,0xe6d191c0
  41e45f:	xchg   edx,eax
  41e460:	test   DWORD PTR [eax+0x11],eax
  41e463:	mov    ecx,0x7f9e196c
  41e468:	stc    
  41e469:	add    DWORD PTR [edi-0x22],ecx
  41e46c:	test   DWORD PTR [edx-0x4c742a7c],0xe2cb70eb
  41e476:	xchg   esp,eax
  41e477:	sahf   
  41e478:	(bad)  
  41e47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e47b:	add    DWORD PTR [esi-0x18a84f44],0xffffffc8
  41e482:	pop    ebp
  41e483:	inc    esp
  41e484:	and    eax,eax
  41e486:	daa    
  41e487:	punpckldq mm6,DWORD PTR [eax+0x15418ba6]
  41e48e:	out    0x60,eax
  41e490:	inc    eax
  41e491:	fs aam 0xef
  41e494:	xor    ebx,DWORD PTR [eax-0x51c53125]
  41e49a:	xor    DWORD PTR [edx-0x9b928e0],ecx
  41e4a0:	lock xchg esp,eax
  41e4a2:	call   0xe8f5ee20
  41e4a7:	mov    ds,WORD PTR [ebx]
  41e4a9:	jp     0x41e46c
  41e4ab:	in     al,0x3c
  41e4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ae:	or     edx,0xffffff96
  41e4b1:	mov    bl,0xe4
  41e4b3:	dec    ebp
  41e4b4:	inc    ebp
  41e4b5:	sbb    DWORD PTR es:[ebx+edi*8+0x13],esi
  41e4ba:	xchg   ebx,eax
  41e4bb:	xor    eax,0xff6c8eb5
  41e4c0:	xor    BYTE PTR [eax],dh
  41e4c2:	mov    BYTE PTR [edi+0x2e844d16],dl
  41e4c8:	aad    0x4b
  41e4ca:	and    cl,0x42
  41e4cd:	das    
  41e4ce:	aam    0x9d
  41e4d0:	ret    0xcb80
  41e4d3:	test   eax,esp
  41e4d5:	ret    
  41e4d6:	add    dh,ch
  41e4d8:	iret   
  41e4d9:	jne    0x41e47a
  41e4db:	inc    edi
  41e4dc:	and    eax,0x384e7fd9
  41e4e1:	packuswb mm7,QWORD PTR [ecx]
  41e4e4:	mov    eax,0xcb0073c1
  41e4e9:	add    BYTE PTR [edi-0x29],bl
  41e4ec:	ret    
  41e4ed:	ficomp WORD PTR [edi+ecx*1]
  41e4f0:	outs   dx,BYTE PTR ds:[esi]
  41e4f1:	addr16 mov dh,0xb6
  41e4f4:	and    eax,0x678bc5c9
  41e4f9:	xchg   DWORD PTR ds:0xcf6c950,ebp
  41e4ff:	inc    edx
  41e500:	test   al,0x85
  41e502:	jno    0x41e49a
  41e504:	xchg   edi,eax
  41e505:	(bad)  
  41e506:	int3   
  41e507:	push   eax
  41e508:	aam    0xee
  41e50a:	stc    
  41e50b:	jb     0x41e4bc
  41e50d:	push   ss
  41e50e:	adc    BYTE PTR [ebx],al
  41e510:	and    DWORD PTR [edi+0x41],ecx
  41e513:	push   cs
  41e514:	fistp  QWORD PTR [edi]
  41e516:	add    ebp,ebp
  41e518:	lock push ss
  41e51a:	jl     0x41e559
  41e51c:	arpl   WORD PTR [edi+0x65e0c7d0],cx
  41e522:	adc    eax,0x912f970e
  41e527:	and    DWORD PTR [edi+0x72],edi
  41e52a:	scas   al,BYTE PTR es:[edi]
  41e52b:	cmp    ebp,DWORD PTR [ecx-0x586b60de]
  41e531:	es call 0xfdeb:0x8c25c13
  41e539:	pop    esp
  41e53a:	cld    
  41e53b:	jns    0x41e52f
  41e53d:	cli    
  41e53e:	clc    
  41e53f:	int3   
  41e540:	mov    ebp,edx
  41e542:	imul   edx,DWORD PTR [eax+0x17],0xef13c3b0
  41e549:	xor    bl,BYTE PTR ds:0x59dc3f4a
  41e54f:	ror    DWORD PTR [ebp-0x73],1
  41e552:	mov    ebp,0x91f6bf7e
  41e557:	imul   esi,DWORD PTR [edx-0x74],0xfffffffd
  41e55b:	cmp    al,0x33
  41e55d:	mov    edi,0xcf3e3c72
  41e562:	cmc    
  41e563:	xor    al,0x94
  41e565:	sub    al,0x46
  41e567:	cmp    DWORD PTR [esi+0x2],esp
  41e56a:	jne    0x41e5a5
  41e56c:	cmp    esi,esp
  41e56e:	jle    0x41e5ab
  41e570:	cmp    ah,BYTE PTR [ebx-0x239d0d2c]
  41e576:	fbstp  TBYTE PTR [ecx+0x5e01662f]
  41e57c:	xchg   ecx,eax
  41e57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e57f:	push   ss
  41e580:	jg     0x41e5e0
  41e582:	outs   dx,BYTE PTR ds:[esi]
  41e583:	pop    es
  41e584:	mov    al,ds:0xd3484995
  41e589:	mov    esi,0xf5125dc
  41e58e:	lds    edx,FWORD PTR fs:[edx]
  41e591:	inc    ecx
  41e592:	ins    DWORD PTR es:[edi],dx
  41e593:	mov    edx,0x64d359f5
  41e598:	cmc    
  41e599:	lahf   
  41e59a:	sbb    al,0x31
  41e59c:	ins    BYTE PTR es:[edi],dx
  41e59d:	imul   esp,DWORD PTR [edx+0xa7104f9],0xffffff91
  41e5a4:	inc    edx
  41e5a5:	lods   al,BYTE PTR ds:[esi]
  41e5a6:	mov    bh,0xdd
  41e5a8:	cdq    
  41e5a9:	js     0x41e565
  41e5ab:	push   ds
  41e5ac:	and    BYTE PTR [edx+0x3c90920d],al
  41e5b2:	fild   DWORD PTR [eax-0x76]
  41e5b5:	outs   dx,BYTE PTR ds:[esi]
  41e5b6:	out    0xde,eax
  41e5b8:	adc    DWORD PTR [ecx+0x5a],0x4a
  41e5bc:	sbb    cl,BYTE PTR [edi]
  41e5be:	call   0x6d7c1a67
  41e5c3:	mov    al,ds:0xd62831b3
  41e5c8:	lods   al,BYTE PTR ds:[esi]
  41e5c9:	test   al,0x1e
  41e5cb:	dec    eax
  41e5cc:	or     esp,DWORD PTR [edx-0x36]
  41e5cf:	test   dl,al
  41e5d1:	call   0x6be6:0x8f97e8c4
  41e5d8:	scas   eax,DWORD PTR es:[edi]
  41e5d9:	jle    0x41e597
  41e5db:	leave  
  41e5dc:	or     ebp,DWORD PTR [edx-0x6f]
  41e5df:	push   ss
  41e5e0:	pop    eax
  41e5e1:	scas   al,BYTE PTR es:[edi]
  41e5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5e3:	or     al,0x79
  41e5e5:	push   ecx
  41e5e6:	das    
  41e5e7:	nop
  41e5e8:	or     al,0x2c
  41e5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5eb:	push   ecx
  41e5ec:	adc    dl,BYTE PTR [eax]
  41e5ee:	inc    esp
  41e5ef:	and    al,0xc4
  41e5f1:	pop    es
  41e5f2:	mov    ebp,0x74414fbc
  41e5f7:	sub    esp,0x2a
  41e5fa:	or     dh,BYTE PTR [ebp+0x7638d695]
  41e600:	adc    BYTE PTR [ecx],ch
  41e602:	ins    BYTE PTR es:[edi],dx
  41e603:	adc    edi,DWORD PTR [edx]
  41e605:	fstp   QWORD PTR [ecx]
  41e607:	sbb    ebx,DWORD PTR [edx]
  41e609:	test   BYTE PTR [ebp+ecx*2-0x38],0x58
  41e60e:	dec    eax
  41e60f:	lock sub DWORD PTR [edi-0x72],edx
  41e613:	(bad)  
  41e615:	push   cs
  41e616:	int    0x3c
  41e618:	mov    ebx,0x355a2d7a
  41e61d:	lock push esi
  41e61f:	loope  0x41e621
  41e621:	xchg   esp,eax
  41e622:	jno    0x41e678
  41e624:	and    eax,0x3d1d45e7
  41e629:	iret   
  41e62a:	(bad)  
  41e62b:	dec    esp
  41e62c:	dec    DWORD PTR [edx-0x1c49f54c]
  41e632:	imul   ebx,ebx,0xffffffab
  41e635:	loop   0x41e633
  41e637:	xchg   ecx,eax
  41e638:	cmp    DWORD PTR [edi+0x13],0x50
  41e63c:	pop    ds
  41e63d:	add    eax,0xd19f0410
  41e642:	cli    
  41e643:	add    DWORD PTR [eax-0x7e],edi
  41e646:	out    0x7,eax
  41e648:	gs push ebx
  41e64a:	ss xor esp,0x42
  41e64e:	ret    0x8b7d
  41e651:	fld    DWORD PTR [edx]
  41e653:	push   ss
  41e654:	mov    bh,0x8
  41e656:	add    al,0xc6
  41e658:	mov    bh,0x98
  41e65a:	out    0xc7,eax
  41e65c:	ins    BYTE PTR es:[edi],dx
  41e65d:	retf   0xeae0
  41e660:	nop
  41e661:	push   0x5a9872e
  41e666:	jno    0x41e673
  41e668:	ds or  al,0x72
  41e66b:	loope  0x41e6dd
  41e66d:	out    0x72,al
  41e66f:	test   al,0x96
  41e671:	mov    ecx,0xf5fed57f
  41e676:	and    dl,bh
  41e678:	dec    ecx
  41e679:	stos   BYTE PTR es:[edi],al
  41e67a:	inc    eax
  41e67b:	inc    ebp
  41e67c:	test   DWORD PTR [ebp+0x54],0x9ac9539
  41e683:	xor    al,0xe5
  41e685:	adc    edi,DWORD PTR [ebp+0x68]
  41e688:	adc    DWORD PTR [esi+ebx*2-0x23],edx
  41e68c:	and    eax,0xeeccddea
  41e691:	push   es
  41e692:	pusha  
  41e693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e694:	push   eax
  41e695:	call   0xb93d:0x47fdc37e
  41e69c:	pop    ebx
  41e69d:	cmp    BYTE PTR [ecx],bh
  41e69f:	popa   
  41e6a0:	mov    bh,0x3f
  41e6a2:	mov    al,ds:0xe0799a83
  41e6a7:	daa    
  41e6a8:	xchg   esp,eax
  41e6a9:	lahf   
  41e6aa:	push   cs
  41e6ab:	fld    QWORD PTR [esi-0x3f]
  41e6ae:	arpl   WORD PTR [eax-0x44],sp
  41e6b1:	push   0x8b7a14bf
  41e6b6:	dec    esp
  41e6b7:	int3   
  41e6b8:	jl     0x41e719
  41e6ba:	test   BYTE PTR [edx-0x2ab97e5b],bh
  41e6c0:	retf   0x8aef
  41e6c3:	adc    BYTE PTR [esi],dl
  41e6c5:	iret   
  41e6c6:	add    dh,BYTE PTR [ebx+ebp*4+0x375e956b]
  41e6cd:	xchg   ebx,eax
  41e6ce:	neg    DWORD PTR [ebp-0x6e234401]
  41e6d4:	std    
  41e6d5:	push   esi
  41e6d6:	dec    edi
  41e6d7:	push   ds
  41e6d8:	lea    eax,[eax]
  41e6da:	rcr    DWORD PTR [ebx+0x42],0x61
  41e6de:	daa    
  41e6df:	(bad)  
  41e6e0:	(bad)  
  41e6e1:	mov    WORD PTR [ebp+0x32e881b6],fs
  41e6e7:	aam    0x51
  41e6e9:	imul   esi,edx,0x4dde71d
  41e6ef:	aam    0xca
  41e6f1:	lods   al,BYTE PTR ds:[esi]
  41e6f2:	je     0x41e69b
  41e6f4:	or     ecx,eax
  41e6f6:	or     BYTE PTR [ebx-0x55],dl
  41e6f9:	call   0xca91ea92
  41e6fe:	loop   0x41e754
  41e700:	xchg   BYTE PTR [ebx],bl
  41e702:	dec    eax
  41e703:	clc    
  41e704:	fcmovnbe st,st(5)
  41e706:	sub    ch,BYTE PTR [ebx]
  41e708:	(bad)  
  41e70a:	mov    ah,0xf4
  41e70c:	xor    eax,0x7219be0b
  41e711:	inc    edx
  41e712:	or     al,0xba
  41e714:	inc    ecx
  41e715:	jno    0x41e70f
  41e717:	inc    ecx
  41e718:	test   BYTE PTR [ecx-0x622214b3],bh
  41e71e:	fst    QWORD PTR [edi]
  41e720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e721:	jns    0x41e731
  41e723:	ficomp WORD PTR [eax+0xe]
  41e726:	pand   mm6,QWORD PTR [ebx+eax*4]
  41e72a:	dec    ebx
  41e72b:	dec    ebx
  41e72c:	repnz scas al,BYTE PTR es:[edi]
  41e72e:	sti    
  41e72f:	mov    esi,0xac912418
  41e734:	push   ebx
  41e735:	xchg   ebx,eax
  41e736:	lds    ebp,FWORD PTR [ecx-0x42a75338]
  41e73c:	mov    dh,0x9b
  41e73e:	mov    ah,0x99
  41e740:	test   DWORD PTR [ebx+0x76],0x2af12d28
  41e747:	dec    edx
  41e748:	jne    0x41e6dd
  41e74a:	mov    ds:0xf2654fb2,eax
  41e74f:	int3   
  41e750:	fwait
  41e751:	pop    edi
  41e752:	inc    edx
  41e753:	or     edx,DWORD PTR [edi+0x5f]
  41e756:	push   0xffffff9b
  41e758:	dec    esi
  41e759:	xchg   ecx,eax
  41e75a:	outs   dx,BYTE PTR ds:[esi]
  41e75b:	call   0xbe54:0x7a5b946f
  41e762:	or     eax,0x83594a2
  41e767:	shl    DWORD PTR [ebx-0x66],1
  41e76a:	sbb    BYTE PTR [ebx-0x23],al
  41e76d:	xchg   ecx,eax
  41e76e:	inc    ebp
  41e76f:	push   edx
  41e770:	dec    edi
  41e771:	stc    
  41e772:	call   0x30ab:0xe4f57818
  41e779:	jmp    0x42ad3a30
  41e77e:	add    DWORD PTR [esi+0x22],eax
  41e781:	in     eax,dx
  41e782:	pop    ss
  41e783:	xchg   ebx,esi
  41e785:	lods   eax,DWORD PTR ds:[esi]
  41e786:	mov    eax,ds:0x7fd4d1e7
  41e78b:	addr16 pop ds
  41e78d:	or     eax,0x8ffcd538
  41e792:	sbb    DWORD PTR [ebx+0x3],ebp
  41e795:	mov    esp,eax
  41e797:	fdivr  QWORD PTR [ebp+ebx*1-0xc067c19]
  41e79e:	sti    
  41e79f:	call   0x76a4:0x7b8beb8b
  41e7a6:	and    DWORD PTR [edx],ebx
  41e7a8:	cdq    
  41e7a9:	ja     0x41e76d
  41e7ab:	daa    
  41e7ac:	or     al,0x8a
  41e7ae:	lahf   
  41e7af:	out    dx,al
  41e7b0:	scas   al,BYTE PTR es:[edi]
  41e7b1:	(bad)  [esi+edi*1]
  41e7b4:	or     esi,DWORD PTR [ebp+0x55]
  41e7b7:	rol    BYTE PTR [edi-0x70],0xe2
  41e7bb:	test   al,0x16
  41e7bd:	lock adc ebx,DWORD PTR [edi-0x67]
  41e7c1:	(bad)  
  41e7c2:	mov    ebp,DWORD PTR [ecx+0x4e]
  41e7c5:	push   cs
  41e7c6:	and    edi,DWORD PTR [esp+esi*2+0x28]
  41e7ca:	xlat   BYTE PTR ds:[ebx]
  41e7cb:	push   edi
  41e7cc:	mov    ds:0xa5274f5f,eax
  41e7d1:	hlt    
  41e7d2:	jp     0x41e810
  41e7d4:	imul   esi,DWORD PTR [ebp-0x63a6a37],0xa9590746
  41e7de:	push   edx
  41e7df:	sbb    BYTE PTR ss:[ebx-0x35],ah
  41e7e3:	fdivr  DWORD PTR es:[edi-0x29]
  41e7e7:	sbb    eax,0x1b6a3868
  41e7ec:	jns    0x41e839
  41e7ee:	mov    es,WORD PTR ds:0x61e7c39b
  41e7f4:	push   ds
  41e7f5:	adc    edx,edi
  41e7f7:	pop    ebp
  41e7f8:	mov    cl,0x50
  41e7fa:	pop    es
  41e7fb:	pop    eax
  41e7fc:	loope  0x41e876
  41e7fe:	sub    al,BYTE PTR [ecx-0x55420b8b]
  41e804:	mov    ebp,es
  41e806:	mov    bl,0x23
  41e808:	mov    eax,DWORD PTR [edx+eax*8+0x4696ee28]
  41e80f:	in     al,0xa2
  41e811:	(bad)  
  41e812:	pop    ebx
  41e813:	xchg   ebx,eax
  41e814:	iret   
  41e815:	(bad)  
  41e816:	loopne 0x41e807
  41e818:	fst    QWORD PTR [ebx+0x64]
  41e81b:	fwait
  41e81c:	dec    edx
  41e81d:	out    0xaf,al
  41e81f:	stos   DWORD PTR es:[edi],eax
  41e820:	mov    ecx,0xd13acf5f
  41e825:	mov    es,WORD PTR [esi+0x63]
  41e828:	das    
  41e829:	mov    BYTE PTR [ebx-0x4b150d1c],ah
  41e82f:	and    DWORD PTR ss:[esi],eax
  41e832:	lods   al,BYTE PTR ds:[esi]
  41e833:	pop    ss
  41e834:	add    eax,0xd7772acd
  41e839:	in     eax,0xf1
  41e83b:	mov    edi,0xe4dfd8c6
  41e840:	aad    0x88
  41e842:	xchg   ecx,eax
  41e843:	jnp    0x41e81e
  41e845:	fld    DWORD PTR [edi]
  41e847:	push   esi
  41e848:	in     eax,0xe1
  41e84a:	addr16 enter 0xddfa,0x53
  41e84f:	test   eax,0x7221d953
  41e854:	push   ss
  41e855:	pop    esi
  41e856:	mov    ebx,0xaa843b77
  41e85b:	sub    eax,0x3370d725
  41e860:	jo     0x41e840
  41e862:	stos   BYTE PTR es:[edi],al
  41e863:	jns    0x41e8a4
  41e865:	int3   
  41e866:	and    BYTE PTR gs:[edx],cl
  41e869:	jp     0x41e880
  41e86b:	jns    0x41e828
  41e86d:	fist   DWORD PTR [edx+0x69c27850]
  41e873:	aaa    
  41e874:	pop    eax
  41e875:	inc    ebp
  41e876:	sub    al,0x4
  41e878:	cdq    
  41e879:	test   DWORD PTR [edi],ebx
  41e87b:	jp     0x41e804
  41e87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e87e:	cmp    ebx,DWORD PTR [ebx]
  41e880:	and    al,0x4a
  41e882:	add    al,0x70
  41e884:	icebp  
  41e885:	or     BYTE PTR [eax+0x7e06cb83],ch
  41e88b:	in     eax,0x34
  41e88d:	sahf   
  41e88e:	rcl    DWORD PTR [eax-0x1d051f46],1
  41e894:	lahf   
  41e895:	jo     0x41e81c
  41e897:	xchg   ebp,eax
  41e898:	js     0x41e896
  41e89a:	add    dh,al
  41e89c:	dec    esi
  41e89d:	(bad)  
  41e89e:	mov    edi,0xc45dd6be
  41e8a3:	(bad)  
  41e8a4:	out    0x79,eax
  41e8a6:	test   al,0x9c
  41e8a8:	xor    DWORD PTR [esi-0x25],0xb62f4250
  41e8af:	jge    0x41e8e3
  41e8b1:	add    bh,cl
  41e8b3:	(bad)  
  41e8b4:	inc    DWORD PTR [esi]
  41e8b6:	adc    DWORD PTR [ecx],ebp
  41e8b8:	add    ah,BYTE PTR [edx-0x66a9fe8e]
  41e8be:	or     DWORD PTR [esi+eax*8+0x4b],esi
  41e8c2:	adc    ecx,edi
  41e8c4:	into   
  41e8c5:	and    al,0x88
  41e8c7:	pop    esp
  41e8c8:	scas   eax,DWORD PTR es:[edi]
  41e8c9:	add    eax,0x800d79d4
  41e8ce:	retf   0xce66
  41e8d1:	imul   BYTE PTR [edx+ebx*1-0x2]
  41e8d5:	cmc    
  41e8d6:	push   ebx
  41e8d7:	ret    0xba4e
  41e8da:	push   0x55
  41e8dc:	dec    esi
  41e8dd:	push   0xffffffda
  41e8df:	push   edx
  41e8e0:	dec    ebp
  41e8e1:	inc    ebp
  41e8e2:	popa   
  41e8e3:	push   eax
  41e8e4:	cld    
  41e8e5:	jl     0x41e944
  41e8e7:	and    eax,0x3036e0b9
  41e8ec:	add    edx,DWORD PTR [edi+0x5ec9869a]
  41e8f2:	mov    esp,0xf2d00255
  41e8f7:	pop    ds
  41e8f8:	sbb    al,0xe5
  41e8fa:	dec    esp
  41e8fb:	mov    dl,0xe4
  41e8fd:	ds pop ebx
  41e8ff:	jmp    0xfb1:0xb27be64a
  41e906:	gs jo  0x41e8df
  41e909:	gs jmp 0x41e945
  41e90c:	bound  edi,QWORD PTR [ecx+0x33ab5dd]
  41e912:	lds    ebp,FWORD PTR [edi+0x52f521dc]
  41e918:	push   edi
  41e919:	div    DWORD PTR [eax+0x4c]
  41e91c:	xor    DWORD PTR [eax+eax*1],edi
  41e91f:	dec    esi
  41e920:	jne    0x41e8ab
  41e922:	xchg   ecx,eax
  41e923:	pushf  
  41e924:	pop    eax
  41e925:	add    DWORD PTR [esi+edi*1+0x1429f730],0x45
  41e92d:	cmp    eax,0x22abcca2
  41e932:	mov    edi,0x694caa8a
  41e937:	or     esi,DWORD PTR [esi]
  41e939:	nop    DWORD PTR [esi]
  41e93c:	jecxz  0x41e920
  41e93e:	pop    edx
  41e93f:	cli    
  41e940:	cld    
  41e941:	sub    ebp,ecx
  41e943:	xchg   BYTE PTR [eax],bl
  41e945:	addr16 jle 0x41e9bf
  41e948:	sar    edx,1
  41e94a:	xchg   edx,eax
  41e94b:	shr    BYTE PTR fs:[esi],1
  41e94e:	in     eax,dx
  41e94f:	mov    ds:0x35776f93,al
  41e954:	sub    bh,bh
  41e956:	cmc    
  41e957:	loop   0x41e9d2
  41e959:	dec    ebx
  41e95a:	add    DWORD PTR [ecx-0x316b4986],esi
  41e960:	shl    DWORD PTR [ecx+eiz*2+0x5ae2dc5e],cl
  41e967:	jno    0x41e980
  41e969:	sub    al,0x2e
  41e96b:	ss scas eax,DWORD PTR es:[edi]
  41e96d:	mov    eax,ds:0x54e1053e
  41e972:	test   eax,0xa861f138
  41e977:	and    DWORD PTR [ecx],0x2874665d
  41e97d:	inc    esp
  41e97e:	push   ds
  41e97f:	ficomp WORD PTR [ebx]
  41e981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e982:	push   eax
  41e983:	cmp    BYTE PTR [eax-0x4b],cl
  41e986:	or     DWORD PTR ss:[edx-0x3f],ebx
  41e98a:	popf   
  41e98b:	jecxz  0x41e929
  41e98d:	sub    esi,DWORD PTR [ebx+0x7f]
  41e990:	retf   0xcc90
  41e993:	dec    ebx
  41e994:	retf   
  41e995:	jg     0x41e961
  41e997:	fnstcw WORD PTR [edx+esi*2]
  41e99a:	sub    dl,BYTE PTR [esp+ebx*8]
  41e99d:	pop    esi
  41e99e:	sub    edx,DWORD PTR [edx+0x7]
  41e9a1:	dec    eax
  41e9a2:	ins    BYTE PTR es:[edi],dx
  41e9a3:	xchg   edx,eax
  41e9a4:	int3   
  41e9a5:	hlt    
  41e9a6:	call   0xef8459f0
  41e9ab:	aas    
  41e9ac:	shr    DWORD PTR [edi-0x80],cl
  41e9af:	add    ah,BYTE PTR [ebx+0x28]
  41e9b2:	sbb    cl,BYTE PTR [eax]
  41e9b4:	jl     0x41e9bb
  41e9b6:	add    al,ch
  41e9b8:	push   edi
  41e9b9:	daa    
  41e9ba:	sub    BYTE PTR [esi+0x4f],0x4f
  41e9be:	mov    dl,0xef
  41e9c0:	sbb    al,BYTE PTR [ecx]
  41e9c2:	iret   
  41e9c3:	hlt    
  41e9c4:	xor    DWORD PTR [edi+0x31dab0fa],edx
  41e9ca:	adc    al,0xec
  41e9cc:	lahf   
  41e9cd:	rol    DWORD PTR [edi-0x7d9a384f],1
  41e9d3:	jo     0x41e9ed
  41e9d5:	jp     0x41ea3f
  41e9d7:	pop    eax
  41e9d8:	xchg   BYTE PTR [ecx],dh
  41e9da:	mov    esi,DWORD PTR [ebp+0x6]
  41e9dd:	pushf  
  41e9de:	add    al,0xa3
  41e9e0:	loope  0x41e9c6
  41e9e2:	cmp    bl,cl
  41e9e4:	cmp    BYTE PTR [eax],dh
  41e9e6:	or     eax,ebx
  41e9e8:	test   BYTE PTR [eax-0x38],bl
  41e9eb:	shl    DWORD PTR [ebx+0x13d12dc9],0xb4
  41e9f2:	sub    BYTE PTR [ebx+0xcfb04a4],bl
  41e9f8:	inc    esp
  41e9f9:	repnz or al,0xd6
  41e9fc:	fld    TBYTE PTR [esi]
  41e9fe:	hlt    
  41e9ff:	outs   dx,BYTE PTR ds:[esi]
  41ea00:	adc    dl,BYTE PTR [esi]
  41ea02:	mov    ?,WORD PTR [ebp-0x3b]
  41ea05:	js     0x41ea79
  41ea07:	(bad)  
  41ea08:	int    0x42
  41ea0a:	aam    0x27
  41ea0c:	inc    edi
  41ea0d:	push   es
  41ea0e:	stc    
  41ea0f:	fist   WORD PTR ds:0x838430a0
  41ea15:	inc    edi
  41ea16:	mov    eax,ds:0x9df286e
  41ea1b:	sti    
  41ea1c:	stos   DWORD PTR es:[edi],eax
  41ea1d:	xor    DWORD PTR [esi+eiz*8-0x3],edi
  41ea21:	mov    es,WORD PTR [edx+0x10]
  41ea24:	pushf  
  41ea25:	(bad)  
  41ea26:	push   ss
  41ea27:	(bad)  
  41ea28:	push   edx
  41ea29:	sub    ah,cl
  41ea2b:	aaa    
  41ea2c:	sahf   
  41ea2d:	mov    dh,0xd3
  41ea2f:	sub    eax,0xb2afbccf
  41ea34:	pop    ebp
  41ea35:	retf   
  41ea36:	xor    BYTE PTR [esi+0x35],ch
  41ea39:	int    0x79
  41ea3b:	dec    ecx
  41ea3c:	ss mov al,bl
  41ea3f:	int3   
  41ea40:	call   0xecdd:0xd59c097c
  41ea47:	push   esi
  41ea48:	ins    BYTE PTR es:[edi],dx
  41ea49:	das    
  41ea4a:	cli    
  41ea4b:	xchg   ebx,eax
  41ea4c:	fiadd  DWORD PTR [ecx]
  41ea4e:	fcom   DWORD PTR [ebp+0x4b]
  41ea51:	loope  0x41ea51
  41ea53:	and    ah,0x6c
  41ea56:	mov    bl,0xf5
  41ea58:	jnp    0x41ea80
  41ea5a:	ret    0x3b2
  41ea5d:	push   edi
  41ea5e:	(bad)  
  41ea5f:	push   0xc851bfe0
  41ea64:	idiv   DWORD PTR [ecx]
  41ea66:	xrelease mov BYTE PTR ds:0xbab40421,dl
  41ea6d:	mov    bl,al
  41ea6f:	mov    edi,0x846c5079
  41ea74:	push   eax
  41ea75:	and    al,0x20
  41ea77:	dec    esi
  41ea78:	gs jp  0x41eac5
  41ea7b:	fbld   TBYTE PTR ss:[ecx+ebp*2+0xa]
  41ea80:	fdiv   DWORD PTR [edx]
  41ea82:	jmp    0x183:0x6045809d
  41ea89:	cmp    BYTE PTR [ebp+edx*8-0x15],0x6c
  41ea8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea8f:	add    ebp,DWORD PTR [esi+ecx*2-0x61da97e]
  41ea96:	cmp    BYTE PTR [ebp+0x69],dh
  41ea99:	out    dx,al
  41ea9a:	adc    edx,DWORD PTR gs:[ecx+0x7040b4c7]
  41eaa1:	jno    0x41ea8d
  41eaa3:	shl    edx,0x9b
  41eaa6:	out    dx,al
  41eaa7:	push   0x5a
  41eaa9:	jne    0x41ea97
  41eaab:	leave  
  41eaac:	repnz inc ebp
  41eaae:	xor    ecx,esp
  41eab0:	ficom  WORD PTR [ebp-0x4a]
  41eab3:	jge    0x41ea90
  41eab5:	sbb    cl,BYTE PTR [ebp-0x76]
  41eab8:	fwait
  41eab9:	dec    edx
  41eaba:	das    
  41eabb:	jbe    0x41eae7
  41eabd:	inc    edx
  41eabe:	sub    ebx,DWORD PTR [ecx+0x250d3ede]
  41eac4:	push   esp
  41eac5:	jae    0x41eafd
  41eac7:	jnp    0x41eaca
  41eac9:	add    al,0x8c
  41eacb:	add    eax,DWORD PTR [ecx+eiz*1+0x63b38e4f]
  41ead2:	ss repnz mov esi,0xbfd2adf9
  41ead9:	ffree  st(0)
  41eadb:	sub    DWORD PTR [edx-0x397b9e3a],0x9cefdcc9
  41eae5:	jae    0x41ea9e
  41eae7:	sbb    eax,DWORD PTR [ebx+ecx*8]
  41eaea:	jnp    0x41eb28
  41eaec:	adc    BYTE PTR [edx+0x4a0259af],0xa2
  41eaf3:	or     DWORD PTR ds:0xfe8836cb,ebx
  41eaf9:	adc    eax,0xb8a78a3a
  41eafe:	out    dx,al
  41eaff:	call   0xb89c:0xff5f4747
  41eb06:	lock cld 
  41eb08:	in     eax,0x37
  41eb0a:	out    dx,al
  41eb0b:	sub    eax,0xaef0d74f
  41eb10:	add    al,0x51
  41eb12:	sbb    eax,0x12cfc416
  41eb17:	mov    ebx,0x5f5f536d
  41eb1c:	jmp    0x41eaf8
  41eb1e:	xchg   esi,esp
  41eb20:	sahf   
  41eb21:	mov    esp,0xa9c74f1a
  41eb26:	jg     0x41eaf0
  41eb28:	mov    ebp,0xeb4a238b
  41eb2d:	xor    ebx,DWORD PTR cs:[eax*4-0x3dc7d552]
  41eb35:	or     esi,DWORD PTR [ecx+0x6ac1cccc]
  41eb3b:	ret    0x6c11
  41eb3e:	and    BYTE PTR [edi-0xe5e3d7f],dh
  41eb44:	jmp    0xd4f2:0xd9fdd570
  41eb4b:	inc    ebp
  41eb4c:	jge    0x41eb56
  41eb4e:	loop   0x41eb90
  41eb50:	scas   eax,DWORD PTR es:[edi]
  41eb51:	mov    ebx,0xe2b42833
  41eb56:	icebp  
  41eb57:	jns    0x41eb3e
  41eb59:	daa    
  41eb5a:	popf   
  41eb5b:	lods   eax,DWORD PTR ds:[esi]
  41eb5c:	push   0xffffffe4
  41eb5e:	xchg   ebx,eax
  41eb5f:	in     eax,0xec
  41eb61:	xor    DWORD PTR [ebx+0x63],esp
  41eb64:	pop    edi
  41eb65:	push   0xffffffaf
  41eb67:	stc    
  41eb68:	jecxz  0x41eb34
  41eb6a:	pop    esi
  41eb6b:	jg     0x41eb86
  41eb6d:	jge    0x41eb32
  41eb6f:	sti    
  41eb70:	lods   al,BYTE PTR ds:[esi]
  41eb71:	mov    ebx,0xc561205e
  41eb76:	push   ds
  41eb77:	xchg   BYTE PTR [ebp+0x4e548a24],cl
  41eb7d:	in     eax,0x85
  41eb7f:	mov    edi,0x16832db2
  41eb84:	das    
  41eb85:	push   edi
  41eb86:	fdiv   QWORD PTR [esi]
  41eb88:	fidiv  WORD PTR [ebp-0x56]
  41eb8b:	scas   al,BYTE PTR es:[edi]
  41eb8c:	jno    0x41eba7
  41eb8e:	enter  0x3cdc,0x90
  41eb92:	inc    eax
  41eb93:	mov    bh,0xd
  41eb95:	mov    esp,DWORD PTR [ecx-0x37]
  41eb98:	pop    esp
  41eb99:	aaa    
  41eb9a:	lds    esp,FWORD PTR [edi+0x690cb9e7]
  41eba0:	fcmovnu st,st(1)
  41eba2:	jp     0x41eb6b
  41eba4:	pop    eax
  41eba5:	jmp    0x41eb64
  41eba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba8:	or     edx,ecx
  41ebaa:	cmp    dh,dh
  41ebac:	and    edi,eax
  41ebae:	xor    ebp,DWORD PTR [edx-0x608090c4]
  41ebb4:	inc    esp
  41ebb5:	pop    esp
  41ebb6:	ror    BYTE PTR [ecx-0x26b71b54],0x6a
  41ebbd:	sbb    dl,BYTE PTR [ecx]
  41ebbf:	fild   QWORD PTR [ecx+0x64]
  41ebc2:	into   
  41ebc3:	std    
  41ebc4:	aaa    
  41ebc5:	push   ebp
  41ebc6:	jp     0x41ec22
  41ebc8:	xchg   edx,eax
  41ebc9:	(bad)  
  41ebcb:	out    0xfd,al
  41ebcd:	aaa    
  41ebce:	and    BYTE PTR ds:0x47e3eac7,ah
  41ebd4:	lods   eax,DWORD PTR ds:[esi]
  41ebd5:	int    0x46
  41ebd7:	inc    cx
  41ebd9:	test   BYTE PTR [ebp+edx*1+0x17],al
  41ebdd:	push   edi
  41ebde:	scas   al,BYTE PTR es:[edi]
  41ebdf:	dec    esp
  41ebe0:	jge    0x41ebe7
  41ebe2:	mov    BYTE PTR ds:0x97cf22c2,bh
  41ebe8:	sub    BYTE PTR [edi],al
  41ebea:	leave  
  41ebeb:	test   al,0x71
  41ebed:	outs   dx,BYTE PTR ds:[esi]
  41ebee:	pop    ecx
  41ebef:	mov    esi,0x68d3bbfc
  41ebf4:	add    cl,bl
  41ebf6:	out    0x55,al
  41ebf8:	xchg   DWORD PTR [edx+0x58],ebx
  41ebfb:	jns    0x41eb84
  41ebfd:	loopne 0x41ebaf
  41ebff:	(bad)  
  41ec01:	mov    al,ds:0xb0b2cfbe
  41ec06:	mov    ds:0x534a7c4c,al
  41ec0b:	jp     0x41ec2a
  41ec0d:	out    0x47,eax
  41ec0f:	mov    esp,0xf1f7fd1b
  41ec14:	xchg   esi,eax
  41ec15:	dec    esi
  41ec16:	sub    eax,0x8d1794d0
  41ec1b:	mov    esp,0xd0a1eaed
  41ec20:	xor    bh,BYTE PTR ds:0xa2492a2c
  41ec26:	loopne 0x41ebfa
  41ec28:	aaa    
  41ec29:	call   0x383d2524
  41ec2e:	pop    edi
  41ec2f:	pusha  
  41ec30:	mov    esi,0x64356931
  41ec35:	and    BYTE PTR [eax+eax*8+0x1d8f1998],cl
  41ec3c:	lods   al,BYTE PTR ds:[esi]
  41ec3d:	jae    0x41ec65
  41ec3f:	inc    edi
  41ec40:	mov    bh,0x75
  41ec42:	sbb    cl,dl
  41ec44:	scas   eax,DWORD PTR es:[edi]
  41ec45:	and    eax,ebp
  41ec47:	xor    ah,BYTE PTR [ebx]
  41ec49:	inc    esp
  41ec4a:	jo     0x41ecb7
  41ec4c:	dec    edx
  41ec4d:	mov    dl,0xcf
  41ec4f:	jp     0x41ebf0
  41ec51:	mov    DWORD PTR [ecx],ebx
  41ec53:	rol    DWORD PTR [ebx+0x67],0x7a
  41ec57:	mov    eax,0x38676c11
  41ec5c:	sub    DWORD PTR [edx-0x1a],0xe6313cda
  41ec63:	mov    edi,0x6552cde0
  41ec68:	xchg   esi,eax
  41ec69:	pop    edx
  41ec6a:	paddusb mm7,QWORD PTR [ecx]
  41ec6d:	shl    ebp,cl
  41ec6f:	imul   ecx
  41ec71:	iret   
  41ec72:	pop    ds
  41ec73:	pop    ss
  41ec74:	aas    
  41ec75:	add    al,0x69
  41ec77:	adc    BYTE PTR [esi-0x17],dh
  41ec7a:	int3   
  41ec7b:	dec    ebp
  41ec7c:	pop    es
  41ec7d:	shl    bl,cl
  41ec7f:	dec    esi
  41ec80:	das    
  41ec81:	or     eax,0x166a263c
  41ec86:	icebp  
  41ec87:	cmp    al,dl
  41ec89:	mov    ecx,0xab7832c8
  41ec8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec8f:	fst    DWORD PTR [di]
  41ec92:	cmc    
  41ec93:	pop    ecx
  41ec94:	pop    edi
  41ec95:	sbb    eax,DWORD PTR [esi+0xfb01029]
  41ec9b:	add    al,0xb0
  41ec9d:	cmp    eax,0x4cb69a56
  41eca2:	sbb    al,0x6d
  41eca4:	gs jns 0x41ec62
  41eca7:	pop    edx
  41eca8:	out    dx,eax
  41eca9:	(bad)  
  41ecaa:	int3   
  41ecab:	cmp    eax,0xe7bf1cd3
  41ecb0:	pop    ss
  41ecb1:	jmp    0x41ec50
  41ecb3:	stc    
  41ecb4:	mov    ecx,0xf3d92487
  41ecb9:	mov    ecx,ebx
  41ecbb:	xor    BYTE PTR [eax-0x49],dl
  41ecbe:	inc    edi
  41ecbf:	inc    DWORD PTR ds:0xc3bfd8f3
  41ecc5:	jg     0x41ec64
  41ecc7:	xchg   cl,dh
  41ecc9:	repnz sub edi,DWORD PTR [edi+esi*8+0x1]
  41ecce:	ret    0x108a
  41ecd1:	mov    edx,0x10a9648e
  41ecd6:	inc    edi
  41ecd7:	jecxz  0x41ecdf
  41ecd9:	mov    WORD PTR [edx],cs
  41ecdb:	jp     0x41ed2f
  41ecdd:	clc    
  41ecde:	inc    esi
  41ecdf:	fiadd  DWORD PTR [eax]
  41ece1:	pop    esp
  41ece2:	adc    BYTE PTR [esi+0x33],0x21
  41ece6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ece7:	mov    eax,0xfa29109a
  41ecec:	ss cwde 
  41ecee:	pushf  
  41ecef:	xor    BYTE PTR [ecx+ebx*2+0x30],al
  41ecf3:	repnz popa 
  41ecf5:	cli    
  41ecf6:	mov    bh,0xa2
  41ecf8:	je     0x41ecdb
  41ecfa:	mov    cl,0x6e
  41ecfc:	in     al,0x39
  41ecfe:	jge    0x41ed1f
  41ed00:	jne    0x41ed40
  41ed02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed03:	rcl    DWORD PTR ds:0xb6dd068c,0x9d
  41ed0a:	jo     0x41ecb0
  41ed0c:	loopne 0x41ec94
  41ed0e:	hlt    
  41ed0f:	in     al,dx
  41ed10:	xchg   dh,cl
  41ed12:	std    
  41ed13:	add    eax,0x6cad0a8a
  41ed18:	shl    BYTE PTR [ebp+0xd],0x28
  41ed1c:	into   
  41ed1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed1e:	ret    0x905f
  41ed21:	push   cs
  41ed22:	popa   
  41ed23:	and    BYTE PTR [ecx+0x42],al
  41ed26:	mov    esp,0xa619ce39
  41ed2b:	shr    DWORD PTR [eax+0x7a63d21f],1
  41ed31:	and    edi,DWORD PTR [eax+0x33]
  41ed34:	push   cs
  41ed35:	stos   DWORD PTR es:[edi],eax
  41ed36:	pop    ds
  41ed37:	fs test al,0x61
  41ed3a:	push   esp
  41ed3b:	das    
  41ed3c:	xchg   esi,eax
  41ed3d:	add    DWORD PTR [edx+eiz*2],edx
  41ed40:	outs   dx,DWORD PTR ds:[esi]
  41ed41:	iret   
  41ed42:	ins    BYTE PTR es:[edi],dx
  41ed43:	xor    DWORD PTR [esi+eax*8-0x3e8beea8],0xc
  41ed4b:	push   ebx
  41ed4c:	cld    
  41ed4d:	js     0x41ed0e
  41ed4f:	shl    ecx,0xe0
  41ed52:	popf   
  41ed53:	aam    0x1f
  41ed55:	cld    
  41ed56:	in     eax,dx
  41ed57:	lea    ecx,[ebx+0x1d368f72]
  41ed5d:	mov    ds:0xd99350a0,eax
  41ed62:	xchg   ecx,eax
  41ed63:	cdq    
  41ed64:	in     eax,0x3f
  41ed66:	sbb    DWORD PTR [ebx],ebx
  41ed68:	push   ds
  41ed69:	sbb    ecx,DWORD PTR [ebx+0x629012ec]
  41ed6f:	imul   edi,DWORD PTR [ecx],0xffffffd2
  41ed72:	xor    al,0x81
  41ed74:	jno    0x41ed8b
  41ed76:	adc    edx,ebx
  41ed78:	dec    DWORD PTR [esi+0x32b0b78]
  41ed7e:	jmp    0x41ed5b
  41ed80:	fs mov cl,0x9e
  41ed83:	mov    al,BYTE PTR [edi+0x54]
  41ed86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed87:	lahf   
  41ed88:	and    al,0x4e
  41ed8a:	jbe    0x41ed0f
  41ed8c:	daa    
  41ed8d:	inc    esp
  41ed8e:	int    0xaa
  41ed90:	inc    DWORD PTR [ebx+0xb]
  41ed93:	inc    ecx
  41ed94:	inc    ebx
  41ed95:	pusha  
  41ed96:	out    dx,eax
  41ed97:	pop    esp
  41ed98:	sbb    DWORD PTR [ebx-0x3e9c7451],ebp
  41ed9e:	int3   
  41ed9f:	adc    bl,dh
  41eda1:	adc    al,0xad
  41eda3:	mov    BYTE PTR [ebp+0x6aa0b971],ch
  41eda9:	ror    BYTE PTR [ebp+0x3e43387e],1
  41edaf:	fistp  WORD PTR [ecx+eax*1]
  41edb2:	push   edx
  41edb3:	call   0xd5eb:0x1ea49c94
  41edba:	adc    DWORD PTR [edx-0x2af37e05],0x5af6da7d
  41edc4:	mov    dl,0x1
  41edc6:	pusha  
  41edc7:	mov    bh,0xae
  41edc9:	mov    eax,DWORD PTR [eax+0x72d68a13]
  41edcf:	cs xchg edi,eax
  41edd1:	pop    ebx
  41edd2:	push   esi
  41edd3:	enter  0x93fb,0xc6
  41edd7:	add    DWORD PTR [edx+0x5c],ecx
  41edda:	inc    ebx
  41eddb:	mov    ah,0x90
  41eddd:	fistp  WORD PTR [eax-0x3b1545fd]
  41ede3:	sti    
  41ede4:	dec    esi
  41ede5:	mov    eax,ds:0x68876abc
  41edea:	imul   edi,DWORD PTR [edx-0x4a],0x40
  41edee:	hlt    
  41edef:	xchg   BYTE PTR [edx-0x2763b9a1],ch
  41edf5:	add    eax,0xa810fb3b
  41edfa:	(bad)  
  41edfb:	push   ss
  41edfc:	pop    ss
  41edfd:	or     BYTE PTR [eax-0x39],dl
  41ee00:	test   BYTE PTR [ecx-0x21ade903],0xe6
  41ee07:	out    dx,eax
  41ee08:	jne    0x41ee16
  41ee0a:	inc    ebp
  41ee0b:	xchg   edi,eax
  41ee0c:	add    DWORD PTR fs:[edi],0xe27494c8
  41ee13:	cli    
  41ee14:	sbb    eax,0xba4ed524
  41ee19:	(bad)  
  41ee1a:	xor    al,0x2b
  41ee1c:	push   esp
  41ee1d:	call   0x6ad2:0xed7a31af
  41ee24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee25:	push   esp
  41ee26:	gs cmp edx,ebx
  41ee29:	push   edx
  41ee2a:	or     eax,DWORD PTR [ecx]
  41ee2c:	cmp    eax,0xaa8daaaf
  41ee31:	scas   eax,DWORD PTR es:[edi]
  41ee32:	pop    ss
  41ee33:	lods   al,BYTE PTR ds:[esi]
  41ee34:	push   0x5f
  41ee36:	jl     0x41ee08
  41ee38:	mov    ch,0x5f
  41ee3a:	popf   
  41ee3b:	lods   al,BYTE PTR ds:[esi]
  41ee3c:	icebp  
  41ee3d:	push   es
  41ee3e:	call   0xbb95:0xd2916e86
  41ee45:	and    BYTE PTR [ecx-0x435793b7],0xfc
  41ee4c:	mov    esp,0xa18edbbf
  41ee51:	mov    bh,BYTE PTR [ebp-0x7fcd8acf]
  41ee57:	and    BYTE PTR [edi-0x6d21f904],0xd8
  41ee5e:	xor    dh,BYTE PTR [edx+0x6af242ec]
  41ee64:	pop    ebx
  41ee65:	ja     0x41edf8
  41ee67:	pop    ebx
  41ee68:	mov    WORD PTR [ecx],fs
  41ee6a:	jo     0x41ee9a
  41ee6c:	add    edi,DWORD PTR [eax+ebx*2-0x8e94adc]
  41ee73:	xchg   ecx,eax
  41ee74:	xchg   BYTE PTR [esi+0x38],ch
  41ee77:	sbb    DWORD PTR [esi],edx
  41ee79:	arpl   WORD PTR [eax+0x3b13722f],di
  41ee7f:	push   es
  41ee80:	or     al,0x83
  41ee82:	mov    ds,WORD PTR [ecx]
  41ee84:	jmp    0xe9fc:0x2221a5
  41ee8b:	repnz frstor [esi-0x33cd8d7f]
  41ee92:	push   ds
  41ee93:	dec    esi
  41ee94:	ret    0xbf33
  41ee97:	lea    ebp,[eax]
  41ee99:	sub    eax,0x3e53b61d
  41ee9f:	dec    edx
  41eea0:	or     al,0x72
  41eea2:	jle    0x41ef1a
  41eea4:	clc    
  41eea5:	stos   BYTE PTR es:[edi],al
  41eea6:	int3   
  41eea7:	add    dh,dh
  41eea9:	sahf   
  41eeaa:	test   BYTE PTR [edi],al
  41eeac:	cli    
  41eead:	loopne 0x41eef4
  41eeaf:	pop    esi
  41eeb0:	jle    0x41ee89
  41eeb2:	inc    ebx
  41eeb3:	adc    eax,0xaba7e573
  41eeb8:	ins    BYTE PTR es:[edi],dx
  41eeb9:	stos   BYTE PTR es:[edi],al
  41eeba:	mul    BYTE PTR [edx]
  41eebc:	xchg   DWORD PTR [eax*8-0x16505eec],ecx
  41eec3:	jmp    0xdf47c26c
  41eec8:	and    DWORD PTR [eax],ebp
  41eeca:	retf   
  41eecb:	jns    0x41eea4
  41eecd:	mov    al,0xdb
  41eecf:	lods   eax,DWORD PTR ds:[esi]
  41eed0:	mov    cl,0xd9
  41eed2:	es cmp eax,0x2275ff99
  41eed8:	mov    bh,0x1c
  41eeda:	rol    DWORD PTR [edi],1
  41eedc:	xchg   ebx,eax
  41eedd:	pop    es
  41eede:	jge    0x41ef0b
  41eee0:	sbb    eax,0xb289698d
  41eee5:	popa   
  41eee6:	sbb    BYTE PTR [edi-0x7b4c9fe4],bl
  41eeec:	gs jo  0x41ef0f
  41eeef:	dec    edx
  41eef0:	add    al,0xdf
  41eef2:	mov    edi,DWORD PTR [eax+0x78591b3c]
  41eef8:	loopne 0x41ef1c
  41eefa:	and    eax,DWORD PTR [eax-0x5b]
  41eefd:	mov    eax,ds:0xc3c5a4b
  41ef02:	mov    esp,0xa43e5751
  41ef07:	mov    WORD PTR [ebp-0x3de96bee],fs
  41ef0d:	mov    eax,ds:0x938d3bfe
  41ef12:	jl     0x41ee9b
  41ef14:	add    al,BYTE PTR [ebx]
  41ef16:	push   es
  41ef17:	int    0xd0
  41ef19:	das    
  41ef1a:	nop
  41ef1b:	xor    eax,0xa11dd166
  41ef20:	and    eax,0x32aff330
  41ef25:	push   edx
  41ef26:	mov    bh,0x14
  41ef28:	pop    edx
  41ef29:	or     eax,0x170a2670
  41ef2e:	and    BYTE PTR [ecx],bl
  41ef30:	out    0x69,al
  41ef32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef33:	icebp  
  41ef34:	cs hlt 
  41ef36:	xchg   esp,eax
  41ef37:	mov    al,ds:0x8a0f98b9
  41ef3c:	mov    WORD PTR [edx+0x64a6be17],ss
  41ef42:	and    eax,0x8b0a8fe
  41ef47:	jl     0x41ef29
  41ef49:	xchg   DWORD PTR [ecx-0x2fa82372],edi
  41ef4f:	gs scas al,BYTE PTR es:[edi]
  41ef51:	dec    DWORD PTR [edx+ebx*8-0x4e6fa4f1]
  41ef58:	add    eax,DWORD PTR [ebx+ebp*1]
  41ef5b:	sbb    al,BYTE PTR [edi-0x2e]
  41ef5e:	push   ecx
  41ef5f:	push   ss
  41ef60:	out    dx,eax
  41ef61:	or     al,BYTE PTR [edi-0x1d]
  41ef64:	in     eax,dx
  41ef65:	ror    DWORD PTR [esp+ebp*2-0x2f8b8041],cl
  41ef6c:	sbb    ecx,edx
  41ef6e:	cdq    
  41ef6f:	repz lahf 
  41ef71:	in     al,0xfc
  41ef73:	addr16 pop esp
  41ef75:	and    eax,0x8b0ff90d
  41ef7a:	in     al,0x66
  41ef7c:	inc    ebp
  41ef7d:	mov    ch,0xb1
  41ef7f:	jg     0x41efac
  41ef81:	sbb    ch,dh
  41ef83:	es push cs
  41ef85:	push   ds
  41ef86:	push   cs
  41ef87:	cs leave 
  41ef89:	cmp    eax,0x786db446
  41ef8e:	loope  0x41ef67
  41ef90:	mov    esi,0x3cdea20b
  41ef95:	xchg   edx,eax
  41ef96:	jg     0x41ef7a
  41ef98:	mov    ecx,0x1ceb14a9
  41ef9d:	(bad)  
  41ef9e:	(bad)  
  41ef9f:	mov    edx,0xf851e7df
  41efa4:	mov    dl,0x60
  41efa6:	imul   edi,DWORD PTR [edx-0x292a1e7d],0x76
  41efad:	outs   dx,DWORD PTR ds:[esi]
  41efae:	cmp    DWORD PTR [esi+0x104b7b8e],ebp
  41efb4:	sahf   
  41efb5:	pop    esi
  41efb6:	mov    ebx,gs
  41efb8:	inc    ebx
  41efb9:	lock dec edi
  41efbb:	ret    0x92d
  41efbe:	push   ebx
  41efbf:	and    ebp,0x18
  41efc2:	adc    DWORD PTR [esi+edi*8+0xa],edx
  41efc6:	dec    eax
  41efc7:	nop
  41efc8:	dec    esi
  41efc9:	icebp  
  41efca:	call   DWORD PTR [ebp+0x12]
  41efcd:	cmp    cl,BYTE PTR [eax-0x288fac33]
  41efd3:	ret    
  41efd4:	xchg   edx,eax
  41efd5:	push   ecx
  41efd6:	push   esp
  41efd7:	mul    DWORD PTR [ebx]
  41efd9:	fimul  WORD PTR [ebp+0x12]
  41efdc:	pop    ebp
  41efdd:	or     dh,BYTE PTR [ecx+ebx*2+0x185b8eaa]
  41efe4:	fcomip st,st(7)
  41efe6:	xchg   edx,eax
  41efe7:	jbe    0x41ef7f
  41efe9:	push   ecx
  41efea:	(bad)  
  41efeb:	sub    dh,BYTE PTR [edi+0x50b9687e]
  41eff1:	xchg   esp,eax
  41eff2:	sahf   
  41eff3:	hlt    
  41eff4:	and    DWORD PTR [ecx-0x11],ebp
  41eff7:	push   esp
  41eff8:	mov    bh,0x54
  41effa:	push   eax
  41effb:	xchg   bh,dl
  41effd:	xor    edi,ecx
  41efff:	push   esi
  41f000:	mov    ds,WORD PTR [esi+ebp*1+0x52ff74f9]
  41f007:	stc    
  41f008:	data16 add dh,dl
  41f00b:	dec    edx
  41f00c:	ret    
  41f00d:	imul   edx,edx,0xfffffff3
  41f010:	or     esi,DWORD PTR [eax]
  41f012:	hlt    
  41f013:	or     ebx,DWORD PTR [ecx+eax*4-0x4c]
  41f017:	data16 jg 0x41f05f
  41f01a:	nop
  41f01b:	fs das 
  41f01d:	(bad)  
  41f020:	out    0x56,al
  41f022:	push   cs
  41f023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f024:	retf   
  41f025:	adc    ebp,DWORD PTR [esi+0x9]
  41f028:	push   edx
  41f029:	xchg   edx,eax
  41f02a:	bound  esi,QWORD PTR [edx-0x4d]
  41f02d:	pop    esi
  41f02e:	dec    ebx
  41f02f:	and    al,0x50
  41f031:	mov    dh,0x98
  41f033:	icebp  
  41f034:	pop    esi
  41f035:	adc    esi,DWORD PTR ds:0xfcf596b4
  41f03b:	in     eax,dx
  41f03c:	in     al,dx
  41f03d:	aas    
  41f03e:	fs daa 
  41f040:	jge    0x41eff7
  41f042:	ss mov eax,0x18740a16
  41f048:	loop   0x41f05b
  41f04a:	and    bl,BYTE PTR [esi+0x11]
  41f04d:	add    bl,cl
  41f04f:	in     al,0x53
  41f051:	sbb    BYTE PTR [ecx-0x2a],ch
  41f054:	test   DWORD PTR [esi+0x4e],ebp
  41f057:	shr    DWORD PTR [ebp-0x2dc32c77],1
  41f05d:	shl    ebx,0x2f
  41f060:	cmp    ebp,DWORD PTR [eax-0x59edd208]
  41f066:	pushf  
  41f067:	mov    dh,0xe8
  41f069:	retf   
  41f06a:	dec    ecx
  41f06b:	ret    
  41f06c:	imul   ecx,ecx,0x20
  41f06f:	mov    ds:0x9321b924,al
  41f074:	cwde   
  41f075:	dec    esi
  41f076:	xor    DWORD PTR [ecx-0x4d],ebx
  41f079:	jo     0x41f0f1
  41f07b:	aad    0x3
  41f07d:	mov    ebp,0xf41f7cb
  41f082:	stos   DWORD PTR es:[edi],eax
  41f083:	cmp    bl,bl
  41f085:	sub    al,0xa5
  41f087:	aaa    
  41f088:	xchg   ebx,eax
  41f089:	jmp    edi
  41f08b:	or     al,0xb0
  41f08e:	pop    ecx
  41f08f:	adc    eax,0x3ddde2b8
  41f094:	fisubr DWORD PTR [edx]
  41f096:	jmp    0x930e664f
  41f09b:	dec    edx
  41f09c:	sub    al,0x34
  41f09e:	inc    eax
  41f09f:	je     0x41f0ff
  41f0a1:	or     eax,0xa0caf503
  41f0a6:	dec    ebx
  41f0a7:	push   0xffffffca
  41f0a9:	jb     0x41f0d1
  41f0ab:	adc    BYTE PTR [edi-0x57],ah
  41f0ae:	loope  0x41f10d
  41f0b0:	inc    esi
  41f0b1:	xor    ch,BYTE PTR [edi+0x4875fa3a]
  41f0b7:	mov    esp,DWORD PTR [ebx]
  41f0b9:	mov    bh,0xf4
  41f0bb:	imul   edx,DWORD PTR [edx+0x78],0xffffff9d
  41f0bf:	ficomp DWORD PTR ds:[ecx+esi*1]
  41f0c3:	int3   
  41f0c4:	fcomp  QWORD PTR [edi-0x3b]
  41f0c7:	sub    BYTE PTR [ecx+0x5b90e403],ah
  41f0cd:	sbb    al,0x62
  41f0cf:	xchg   BYTE PTR [esi-0x53],bh
  41f0d2:	mov    ds:0x68f46eca,eax
  41f0d7:	xor    eax,0x899b7d44
  41f0dc:	inc    ebp
  41f0dd:	lea    esp,[eax-0x72]
  41f0e0:	loope  0x41f0d8
  41f0e2:	jmp    0x41f11b
  41f0e4:	sahf   
  41f0e5:	sbb    BYTE PTR [ebp-0x26557333],bl
  41f0eb:	push   0xffffff98
  41f0ed:	fidiv  WORD PTR [ebx]
  41f0ef:	int3   
  41f0f0:	push   0x69436f03
  41f0f5:	jae    0x41f122
  41f0f7:	call   0x461a01f7
  41f0fc:	jb     0x41f179
  41f0fe:	jmp    0xa65a1f2b
  41f103:	mov    bh,0xb9
  41f105:	dec    eax
  41f106:	je     0x41f102
  41f108:	clc    
  41f109:	mov    ebp,0x864e7873
  41f10e:	popa   
  41f10f:	aaa    
  41f110:	mov    WORD PTR [ebx],ss
  41f112:	add    BYTE PTR [eax+0x4d],dl
  41f115:	call   0xc12a:0x29042675
  41f11c:	popf   
  41f11d:	sbb    DWORD PTR [eax],0xffffff9a
  41f120:	mov    esi,0x1d2d8c1e
  41f125:	mov    cl,0xcd
  41f127:	test   eax,0xe5f6eb19
  41f12c:	loopne 0x41f0cf
  41f12e:	popa   
  41f12f:	les    eax,FWORD PTR [ebx]
  41f131:	pop    eax
  41f132:	ins    DWORD PTR es:[edi],dx
  41f133:	xchg   DWORD PTR [ecx-0x19],ebp
  41f136:	jno    0x41f174
  41f138:	adc    eax,0x9ef07e22
  41f13d:	inc    esp
  41f13e:	popa   
  41f13f:	dec    edx
  41f140:	and    DWORD PTR [esi-0x22],eax
  41f143:	mov    WORD PTR [ebx+0x3e21b19b],es
  41f149:	jae    0x41f144
  41f14b:	stos   DWORD PTR es:[edi],eax
  41f14c:	push   ebx
  41f14d:	sbb    al,0xee
  41f14f:	inc    esi
  41f150:	test   al,0x4c
  41f152:	stos   DWORD PTR es:[edi],eax
  41f153:	fcmovbe st,st(1)
  41f155:	jge    0x41f0e3
  41f157:	fidivr WORD PTR [esi-0x5dcc475a]
  41f15d:	adc    DWORD PTR [edi],eax
  41f15f:	mov    eax,0xc13cf9b9
  41f164:	xchg   edx,eax
  41f165:	retf   
  41f166:	xchg   edi,eax
  41f167:	out    0xde,al
  41f169:	fnstcw WORD PTR [esi-0x76]
  41f16c:	inc    ebp
  41f16d:	repz call DWORD PTR ss:[edi-0xd80a341]
  41f175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f176:	adc    al,cl
  41f178:	aad    0xae
  41f17a:	cmc    
  41f17b:	add    DWORD PTR [edx+eiz*4-0x7f9384a4],edi
  41f182:	mov    dh,0x5b
  41f184:	jmp    0xb9659a97
  41f189:	sti    
  41f18a:	sub    ah,BYTE PTR [edi+0x4]
  41f18d:	adc    al,0x75
  41f18f:	hlt    
  41f190:	shl    DWORD PTR [ebp+0x5ec810e5],cl
  41f196:	push   0xcb9e5ef3
  41f19b:	mov    ch,BYTE PTR [ecx]
  41f19d:	out    0xe5,al
  41f19f:	dec    ecx
  41f1a0:	sub    al,0x34
  41f1a2:	and    al,0x9
  41f1a4:	test   al,0x6f
  41f1a6:	fdiv   st,st(7)
  41f1a8:	daa    
  41f1a9:	and    DWORD PTR [ebx-0x30],eax
  41f1ac:	out    0xf1,eax
  41f1ae:	jnp    0x41f15f
  41f1b0:	je     0x41f1bb
  41f1b2:	clc    
  41f1b3:	into   
  41f1b4:	hlt    
  41f1b5:	xor    esp,DWORD PTR [eax-0x4c78f84e]
  41f1bb:	jns    0x41f16d
  41f1bd:	lds    edx,FWORD PTR ds:0x317387bf
  41f1c3:	inc    ebx
  41f1c4:	div    DWORD PTR [esi+ebx*4-0x8312482]
  41f1cb:	inc    ebx
  41f1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1cd:	mov    esi,0xb2c45a6
  41f1d2:	out    dx,al
  41f1d3:	cld    
  41f1d4:	fadd   DWORD PTR [edx]
  41f1d6:	xchg   esp,eax
  41f1d7:	sub    BYTE PTR [edx-0x2c],0x6
  41f1db:	ret    0x1064
  41f1de:	in     eax,0x3e
  41f1e0:	add    ch,ah
  41f1e2:	arpl   WORD PTR [eax],dx
  41f1e4:	fidivr DWORD PTR [ebx]
  41f1e6:	mov    WORD PTR [ebp+ebx*4+0x35],gs
  41f1ea:	or     DWORD PTR ds:0x3f308199,0xffffffbb
  41f1f1:	test   DWORD PTR [ecx+0x512820bc],ebp
  41f1f7:	or     ecx,DWORD PTR [eax-0x37624422]
  41f1fd:	mov    DWORD PTR [edi],ecx
  41f1ff:	and    eax,0xef8a5431
  41f204:	sub    al,0xb6
  41f206:	and    al,0x5d
  41f208:	in     al,0xc9
  41f20a:	mov    ebp,0x78ff3052
  41f20f:	imul   edi,edi,0x843b7f3d
  41f215:	test   DWORD PTR [edi-0x6f28e0ae],0x5b4f793c
  41f21f:	jns    0x41f1a2
  41f221:	test   eax,0x177def41
  41f227:	fs pop ecx
  41f229:	not    BYTE PTR [edx]
  41f22b:	leave  
  41f22c:	enter  0x2d17,0x77
  41f230:	ja     0x41f2a6
  41f232:	cld    
  41f233:	arpl   WORD PTR [edi],sp
  41f235:	adc    ch,ch
  41f237:	in     al,dx
  41f238:	sub    DWORD PTR [esi],eax
  41f23a:	sub    DWORD PTR [esp+eax*2],edx
  41f23d:	bound  ecx,QWORD PTR [ecx+eax*1]
  41f240:	aad    0x14
  41f242:	popa   
  41f243:	loope  0x41f278
  41f245:	retf   
  41f246:	outs   dx,DWORD PTR ds:[esi]
  41f247:	cmp    dl,BYTE PTR [eax+esi*4-0x3a]
  41f24b:	cmp    edx,ebx
  41f24d:	inc    ecx
  41f24e:	inc    ebx
  41f24f:	daa    
  41f250:	jl     0x41f298
  41f252:	sar    BYTE PTR [edx+0x2374f89f],1
  41f258:	ds pop ss
  41f25a:	sbb    dl,ah
  41f25c:	pop    eax
  41f25d:	xchg   esi,eax
  41f25e:	push   ebx
  41f25f:	into   
  41f260:	lds    ebp,FWORD PTR [eax+0x11]
  41f263:	push   esp
  41f264:	push   0x688472b3
  41f269:	jp     0x41f248
  41f26b:	in     al,0xa2
  41f26d:	in     eax,dx
  41f26e:	adc    dh,BYTE PTR [ecx]
  41f270:	mov    ecx,0x28eaa510
  41f275:	scas   eax,DWORD PTR es:[edi]
  41f276:	and    eax,0x84fea3c
  41f27b:	scas   eax,DWORD PTR es:[edi]
  41f27c:	mov    bh,0x34
  41f27e:	push   ds
  41f27f:	cmp    eax,0x2f83ffd7
  41f284:	retf   0xdaf8
  41f287:	aam    0xf3
  41f289:	imul   ebx,DWORD PTR [ebx+edx*1-0x30],0x7b081904
  41f291:	lea    edx,[ecx-0x6ede5726]
  41f297:	ds xor esi,0x29
  41f29b:	pop    ds
  41f29c:	xor    ah,BYTE PTR [ecx-0x152f05d]
  41f2a2:	stos   BYTE PTR es:[edi],al
  41f2a3:	gs hlt 
  41f2a5:	xor    BYTE PTR [esi+0x31],al
  41f2a8:	aam    0x10
  41f2aa:	ins    DWORD PTR es:[edi],dx
  41f2ab:	xlat   BYTE PTR ds:[ebx]
  41f2ac:	ds cmp eax,0x2aae2676
  41f2b2:	push   es
  41f2b3:	mov    bl,0xf
  41f2b5:	xlat   BYTE PTR ds:[ebx]
  41f2b6:	(bad)
  41f2b9:	sub    DWORD PTR [edx+edi*1+0x50d28763],edx
  41f2c0:	and    BYTE PTR [ebx-0x56],ah
  41f2c3:	push   eax
  41f2c4:	dec    ecx
  41f2c5:	push   es
  41f2c6:	or     cl,dh
  41f2c8:	add    ch,BYTE PTR [edx+ecx*4]
  41f2cb:	push   0x27404fa2
  41f2d0:	test   eax,0x2e6bf22e
  41f2d5:	inc    edi
  41f2d6:	sub    eax,0xd71fb89
  41f2db:	jl     0x41f290
  41f2dd:	push   cs
  41f2de:	shr    DWORD PTR [eax+0x6b],cl
  41f2e1:	lea    esi,[ecx-0x55]
  41f2e4:	mov    cl,0xd2
  41f2e6:	push   ds
  41f2e7:	cmc    
  41f2e8:	cmp    al,0xf9
  41f2ea:	arpl   WORD PTR [eax+0x5a],bx
  41f2ed:	mov    ebp,0x95cd1f4d
  41f2f2:	adc    dh,BYTE PTR [ecx-0x568e9f6e]
  41f2f8:	pop    ecx
  41f2f9:	cmp    eax,0xffaf7bf
  41f2fe:	mov    edx,0x284b86df
  41f303:	push   ebx
  41f304:	(bad)  
  41f305:	cmp    dh,BYTE PTR [ebp+0x32]
  41f308:	mov    BYTE PTR [esi],ch
  41f30a:	sar    ebx,1
  41f30c:	loope  0x41f360
  41f30e:	imul   eax,DWORD PTR [esi],0x7e
  41f311:	dec    esi
  41f312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f313:	xchg   ebp,eax
  41f314:	adc    ah,0x4d
  41f317:	neg    BYTE PTR [ebx*2+0x69f213e]
  41f31e:	pusha  
  41f31f:	mov    ch,0xfd
  41f321:	popf   
  41f322:	and    edx,edi
  41f324:	jbe    0x41f32f
  41f326:	pop    esp
  41f327:	mov    ds:0xb3e448e7,al
  41f32c:	mov    al,0xa4
  41f32e:	mov    ds:0x78d44224,eax
  41f333:	stos   BYTE PTR es:[edi],al
  41f334:	loopne 0x41f303
  41f336:	shl    BYTE PTR [ebx+0x419d95e3],0x85
  41f33d:	jecxz  0x41f315
  41f33f:	out    0x28,eax
  41f341:	test   eax,0x208f6212
  41f346:	sub    bl,BYTE PTR [edi]
  41f348:	in     eax,0x12
  41f34a:	scas   eax,DWORD PTR es:[edi]
  41f34b:	xor    al,0xdc
  41f34d:	add    ebx,DWORD PTR [edi+0x14]
  41f350:	dec    ebp
  41f351:	or     esp,ecx
  41f353:	imul   edi,DWORD PTR [eax+eiz*4],0x44fa0e08
  41f35a:	mov    ah,0x94
  41f35c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f35d:	faddp  st(5),st
  41f35f:	add    al,BYTE PTR [ebx]
  41f361:	xchg   ebx,eax
  41f362:	loopne 0x41f319
  41f364:	leave  
  41f365:	mov    WORD PTR [ebx-0xba32743],ds
  41f36b:	aaa    
  41f36c:	and    DWORD PTR [edi],ecx
  41f36e:	ret    0x38cd
  41f371:	mov    al,0x24
  41f373:	xor    ecx,eax
  41f375:	int3   
  41f376:	sub    DWORD PTR [edi],esi
  41f378:	jns    0x41f3be
  41f37a:	dec    edi
  41f37b:	cmp    DWORD PTR [edx+ebx*4+0x68b06bfd],edi
  41f382:	in     al,dx
  41f383:	popf   
  41f384:	call   0x41698b93
  41f389:	aad    0x31
  41f38b:	sbb    eax,ebp
  41f38d:	mov    esi,0x275b5f7f
  41f392:	jmp    0x41f31f
  41f394:	loope  0x41f345
  41f396:	xchg   esi,eax
  41f397:	mov    BYTE PTR [ebx],dh
  41f399:	sbb    al,BYTE PTR [edx-0x70551d48]
  41f39f:	lods   eax,DWORD PTR ds:[esi]
  41f3a0:	sbb    al,0x9e
  41f3a2:	push   es
  41f3a3:	test   DWORD PTR [esi+0x34da8711],ebp
  41f3a9:	or     bl,dl
  41f3ab:	daa    
  41f3ac:	dec    DWORD PTR [edi+ebx*4+0x68]
  41f3b0:	jp     0x41f430
  41f3b2:	mov    ch,0xea
  41f3b4:	pop    ecx
  41f3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b6:	sub    eax,0x5c7bc58d
  41f3bb:	inc    esp
  41f3bc:	and    al,0xdd
  41f3be:	dec    ebp
  41f3bf:	mov    dl,0xe8
  41f3c1:	sti    
  41f3c2:	or     WORD PTR [edx+0x29],sp
  41f3c6:	dec    edx
  41f3c7:	jae    0x41f412
  41f3c9:	hlt    
  41f3ca:	dec    ecx
  41f3cb:	push   ss
  41f3cc:	mov    ecx,0x729cc464
  41f3d1:	xor    al,0xda
  41f3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3d4:	and    bh,BYTE PTR [edx+0x66b2ba73]
  41f3da:	adc    cl,BYTE PTR [edx]
  41f3dc:	ja     0x41f420
  41f3de:	mov    esp,0x838cf8e6
  41f3e3:	aad    0xc6
  41f3e5:	and    eax,DWORD PTR cs:[eax-0x59]
  41f3e9:	inc    esp
  41f3ea:	(bad)  
  41f3eb:	call   0x70c8:0x1c1fa444
  41f3f2:	jmp    0x3799:0xa4b9fb6e
  41f3f9:	mov    ebp,0x89b717f2
  41f3fe:	sbb    ch,BYTE PTR [ecx-0x16]
  41f401:	sbb    eax,0x2749043d
  41f406:	loop   0x41f485
  41f408:	repnz scas al,BYTE PTR es:[edi]
  41f40a:	mov    dh,0x5a
  41f40c:	pop    edx
  41f40d:	dec    eax
  41f40e:	and    ecx,ebp
  41f410:	scas   eax,DWORD PTR es:[edi]
  41f411:	xlat   BYTE PTR ds:[ebx]
  41f412:	push   0xa21c5605
  41f417:	out    0xed,al
  41f419:	(bad)  
  41f41b:	adc    bh,BYTE PTR [esp]
  41f41e:	lods   al,BYTE PTR ds:[esi]
  41f41f:	addr16 jge 0x41f484
  41f422:	sub    ch,BYTE PTR [edi-0x24]
  41f425:	fwait
  41f426:	test   al,0xcb
  41f428:	nop
  41f429:	and    esp,DWORD PTR [ebx+0x49]
  41f42c:	mov    ds:0xc1cfc606,eax
  41f431:	retf   0xe5c2
  41f434:	scas   eax,DWORD PTR es:[edi]
  41f435:	pop    ebx
  41f436:	jbe    0x41f4a5
  41f438:	retf   
  41f439:	ins    DWORD PTR es:[edi],dx
  41f43a:	inc    eax
  41f43b:	loopne 0x41f4ba
  41f43d:	xlat   BYTE PTR ds:[ebx]
  41f43e:	ja     0x41f3cf
  41f440:	mov    DWORD PTR [edi-0x15bc1385],ebx
  41f446:	retf   0xc0e9
  41f449:	call   0x8c1b:0xda203d10
  41f450:	scas   eax,DWORD PTR es:[edi]
  41f451:	add    esi,DWORD PTR [ecx]
  41f453:	neg    BYTE PTR [eax]
  41f455:	xlat   BYTE PTR gs:[ebx]
  41f457:	ja     0x41f4b5
  41f459:	mov    bh,0xf2
  41f45b:	inc    esi
  41f45c:	adc    BYTE PTR [ebp-0x7e],cl
  41f45f:	push   esi
  41f460:	test   BYTE PTR [eax],dl
  41f462:	lahf   
  41f463:	xor    BYTE PTR [ecx-0x24],dh
  41f466:	cmp    al,0x5
  41f468:	cmp    BYTE PTR [ecx],ch
  41f46a:	jg     0x41f4a8
  41f46c:	mov    esi,0xee28e0b3
  41f471:	fs daa 
  41f473:	jmp    0x294ccbfa
  41f478:	out    dx,eax
  41f479:	mov    dl,0xe3
  41f47b:	inc    ebp
  41f47c:	cwde   
  41f47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f47e:	ret    
  41f47f:	push   0x21
  41f481:	push   ds
  41f482:	push   eax
  41f483:	pop    esi
  41f484:	inc    esp
  41f485:	add    dh,BYTE PTR [eax+0xe]
  41f488:	mov    bl,0x49
  41f48a:	loope  0x41f44f
  41f48c:	fiadd  WORD PTR [esi-0x33efc07d]
  41f492:	and    al,0x25
  41f494:	xchg   ebp,eax
  41f495:	fiadd  WORD PTR [esi]
  41f497:	and    eax,0x304575c7
  41f49c:	(bad)
  41f49f:	test   al,0xbb
  41f4a1:	ins    BYTE PTR es:[edi],dx
  41f4a2:	pop    ss
  41f4a3:	inc    edi
  41f4a4:	mov    DWORD PTR ds:[ebp-0x45],esi
  41f4a8:	mov    DWORD PTR [esi+edi*8-0x3b41bf54],ebx
  41f4af:	pop    edi
  41f4b0:	enter  0x83f0,0x94
  41f4b4:	xor    dh,BYTE PTR [ebx-0x59]
  41f4b7:	push   ebp
  41f4b8:	ret    0x681e
  41f4bb:	fcomp  QWORD PTR [ebp-0x1e]
  41f4be:	xchg   edi,eax
  41f4bf:	xor    al,cl
  41f4c1:	out    dx,eax
  41f4c2:	int    0x2d
  41f4c4:	adc    dh,dh
  41f4c6:	cmp    esp,esp
  41f4c8:	out    0x28,eax
  41f4ca:	fucomi st,st(7)
  41f4cc:	fdiv   st,st(7)
  41f4ce:	pop    ds
  41f4cf:	(bad)  
  41f4d1:	cmp    BYTE PTR ds:0xacf4926,dl
  41f4d7:	pop    edi
  41f4d8:	mov    eax,ds:0x111aff6d
  41f4dd:	ja     0x41f4a9
  41f4df:	mov    al,ds:0x84aefeca
  41f4e4:	jge    0x41f49b
  41f4e6:	(bad)  
  41f4e7:	retf   
  41f4e8:	mov    DWORD PTR [edx-0x6a],ebx
  41f4eb:	inc    ebp
  41f4ec:	stos   BYTE PTR es:[edi],al
  41f4ed:	clc    
  41f4ee:	inc    edi
  41f4ef:	mov    BYTE PTR [eax],ch
  41f4f1:	sub    DWORD PTR [edi+0x6],ecx
  41f4f4:	out    0x85,al
  41f4f6:	push   ds
  41f4f7:	push   edx
  41f4f8:	repnz mov BYTE PTR ds:0xe54c4a46,dh
  41f4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f500:	clc    
  41f501:	mov    cl,0x34
  41f503:	jnp    0x41f562
  41f505:	das    
  41f506:	int3   
  41f507:	icebp  
  41f508:	arpl   WORD PTR [edx+0x1b],sp
  41f50b:	add    DWORD PTR [ecx],ebx
  41f50d:	popf   
  41f50e:	mov    esp,0x3a7b7b89
  41f513:	mov    BYTE PTR [eax-0x23],dl
  41f516:	mov    bh,0x42
  41f518:	out    0x5b,eax
  41f51a:	mov    dh,BYTE PTR ds:0xdbbf1a98
  41f520:	sub    eax,0x9e870cea
  41f525:	aam    0x69
  41f527:	retf   
  41f528:	add    al,0xe4
  41f52a:	push   eax
  41f52b:	std    
  41f52c:	inc    ebp
  41f52d:	dec    ebp
  41f52e:	(bad)  
  41f52f:	pop    edi
  41f530:	in     al,dx
  41f531:	repnz xchg edx,eax
  41f533:	push   cs
  41f534:	push   0xbe74b2d8
  41f539:	sbb    al,0xd1
  41f53b:	js     0x41f51b
  41f53d:	jmp    0xbfd5:0x2a295603
  41f544:	enter  0xa620,0x38
  41f548:	mov    ch,0xe6
  41f54a:	fadd   DWORD PTR [ebp+ebx*2+0x5653df7b]
  41f551:	sbb    DWORD PTR [ecx+eiz*2+0x65],esi
  41f555:	mov    ah,0x9e
  41f557:	fpatan 
  41f559:	sar    BYTE PTR [eax-0x14],0xbc
  41f55d:	pop    ebp
  41f55e:	ins    DWORD PTR es:[edi],dx
  41f55f:	fs pop ebp
  41f561:	stos   BYTE PTR es:[edi],al
  41f562:	icebp  
  41f563:	mov    ds:0xa7acd8fd,al
  41f568:	scas   al,BYTE PTR es:[edi]
  41f569:	and    edi,ebp
  41f56b:	mov    ebx,0xefc8453f
  41f570:	mov    ds:0x7b26943f,al
  41f575:	xchg   esp,eax
  41f576:	and    eax,0x88e17218
  41f57b:	jns    0x41f5ec
  41f57d:	mov    ch,0x55
  41f57f:	mov    ds:0xe90f2e5e,eax
  41f584:	imul   ebp,esi,0xeb17ed3a
  41f58a:	ret    
  41f58b:	sbb    edx,ebx
  41f58d:	nop
  41f58e:	loopne 0x41f5a9
  41f590:	les    edx,FWORD PTR [esi]
  41f592:	mov    ds:0xa1649e5b,al
  41f597:	hlt    
  41f598:	test   ch,dh
  41f59a:	scas   al,BYTE PTR es:[edi]
  41f59b:	pop    ecx
  41f59c:	in     eax,0xb3
  41f59e:	daa    
  41f59f:	js     0x41f599
  41f5a1:	fist   WORD PTR ds:0xc030a7a9
  41f5a7:	fwait
  41f5a8:	cdq    
  41f5a9:	repnz and eax,DWORD PTR [ecx]
  41f5ac:	(bad)  
  41f5ad:	fnstsw WORD PTR [esi+ecx*2+0x3986e078]
  41f5b4:	xchg   esp,eax
  41f5b5:	pop    edi
  41f5b6:	jg     0x41f552
  41f5b8:	and    dl,bl
  41f5ba:	xor    DWORD PTR [ebp-0x1b],eax
  41f5bd:	dec    eax
  41f5be:	ror    BYTE PTR [edi],1
  41f5c0:	jno    0x41f60c
  41f5c2:	out    0xbd,al
  41f5c4:	sahf   
  41f5c5:	out    dx,eax
  41f5c6:	imul   ebx,DWORD PTR [edi-0x20a3ea62],0x2
  41f5cd:	mov    bh,0x13
  41f5cf:	adc    esi,ebp
  41f5d1:	ins    DWORD PTR es:[edi],dx
  41f5d2:	sbb    al,0xb9
  41f5d4:	sahf   
  41f5d5:	or     DWORD PTR [ebx+0x1c05e564],edi
  41f5db:	sahf   
  41f5dc:	push   ebx
  41f5dd:	jl     0x41f5e4
  41f5df:	jne    0x41f63f
  41f5e1:	inc    eax
  41f5e2:	push   ds
  41f5e3:	mov    eax,ds:0x7df8dafc
  41f5e8:	sbb    al,0xe8
  41f5ea:	mov    ds:0x989056bb,eax
  41f5ef:	pop    edx
  41f5f0:	ins    BYTE PTR es:[edi],dx
  41f5f1:	ds icebp 
  41f5f3:	outs   dx,BYTE PTR ds:[esi]
  41f5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5f5:	mov    ds:0x3dbaecb8,al
  41f5fa:	add    al,0x24
  41f5fc:	sbb    esi,DWORD PTR [edi]
  41f5fe:	sub    eax,0x397cb0cc
  41f603:	jge    0x41f62d
  41f605:	addr16 mov esi,0xbbb0ef6e
  41f60b:	mov    eax,ds:0xd83f7018
  41f610:	xchg   esp,eax
  41f611:	ins    BYTE PTR es:[edi],dx
  41f612:	sbb    ch,BYTE PTR [esi-0x3bfeab51]
  41f618:	pop    esp
  41f619:	loop   0x41f624
  41f61b:	popa   
  41f61c:	add    al,0x27
  41f61e:	lods   al,BYTE PTR ds:[esi]
  41f61f:	mov    eax,ds:0xb937bdcc
  41f624:	pushf  
  41f625:	pushf  
  41f626:	sbb    DWORD PTR [edi+0x51],eax
  41f629:	add    eax,0x8c73add8
  41f62e:	jecxz  0x41f6aa
  41f630:	push   cs
  41f631:	dec    edi
  41f632:	push   esi
  41f633:	arpl   bx,bp
  41f635:	gs aad 0xcc
  41f638:	and    BYTE PTR [ecx+0x26a6d0d],al
  41f63e:	call   0x7b444ef6
  41f643:	mov    al,0xad
  41f645:	retf   0x3c06
  41f648:	jbe    0x41f5e9
  41f64a:	push   ebx
  41f64b:	call   0xa938:0x72bbc615
  41f652:	js     0x41f640
  41f654:	cli    
  41f655:	js     0x41f673
  41f657:	jno    0x41f68f
  41f659:	or     al,ah
  41f65b:	adc    BYTE PTR [eax-0x29],0xe3
  41f65f:	iret   
  41f660:	adc    eax,0xf44e8fb1
  41f665:	cli    
  41f666:	jecxz  0x41f613
  41f668:	lds    ebp,FWORD PTR [eax+0x1f]
  41f66b:	push   esp
  41f66c:	pop    esi
  41f66d:	push   ds
  41f66e:	pusha  
  41f66f:	in     eax,dx
  41f670:	das    
  41f671:	popf   
  41f672:	cmp    al,0xb9
  41f674:	in     al,0xe1
  41f676:	les    esp,FWORD PTR [esi+ebx*4+0x68]
  41f67a:	mov    esi,0x2b408051
  41f67f:	or     cl,dl
  41f681:	pop    ebx
  41f682:	shl    esi,0x4f
  41f685:	pop    ds
  41f686:	xchg   DWORD PTR [edx+0xf],edx
  41f689:	aam    0x71
  41f68b:	cli    
  41f68c:	addr16 push ss
  41f68e:	mov    cl,dl
  41f690:	push   ecx
  41f691:	sti    
  41f692:	adc    eax,0x2828731a
  41f697:	or     cl,al
  41f699:	(bad)  
  41f69a:	xlat   BYTE PTR ds:[ebx]
  41f69b:	sbb    al,0xe1
  41f69d:	mov    ds:0xc2fea6e8,eax
  41f6a2:	cmp    edx,ebp
  41f6a4:	jb     0x41f649
  41f6a6:	xor    bh,dl
  41f6a8:	add    ah,al
  41f6aa:	neg    bl
  41f6ac:	adc    eax,0x74a2f419
  41f6b1:	stos   DWORD PTR es:[edi],eax
  41f6b2:	add    ecx,esp
  41f6b4:	pop    ds
  41f6b5:	or     al,0xe8
  41f6b7:	out    0x6,eax
  41f6b9:	in     eax,dx
  41f6ba:	ret    
  41f6bb:	push   ebx
  41f6bc:	adc    BYTE PTR [esi],dh
  41f6be:	or     al,0xfb
  41f6c0:	stc    
  41f6c1:	mov    bl,0xea
  41f6c3:	mov    al,0x13
  41f6c5:	mov    ebx,0xad3ab80a
  41f6ca:	out    0x5,eax
  41f6cc:	dec    esp
  41f6cd:	(bad)  
  41f6ce:	xchg   edx,eax
  41f6cf:	dec    esp
  41f6d0:	push   ebp
  41f6d1:	push   edi
  41f6d2:	std    
  41f6d3:	dec    ebx
  41f6d4:	retf   0xe5b4
  41f6d7:	mov    bh,0x9c
  41f6d9:	lea    edi,ds:0x54d6af61
  41f6df:	xor    ebp,DWORD PTR [edi+ecx*4]
  41f6e2:	jne    0x41f718
  41f6e4:	and    BYTE PTR [ebx+ebx*2-0x31],al
  41f6e8:	aad    0xfb
  41f6ea:	stos   BYTE PTR es:[edi],al
  41f6eb:	int    0x20
  41f6ed:	xor    cl,bl
  41f6ef:	dec    ecx
  41f6f0:	mov    ecx,DWORD PTR [ebp+0x23]
  41f6f3:	rol    bl,1
  41f6f5:	leave  
  41f6f6:	inc    eax
  41f6f7:	jno    0x41f6d0
  41f6f9:	lock and DWORD PTR [esp+ebx*4-0x36],eax
  41f6fe:	pop    ebp
  41f6ff:	xor    eax,0x77168bb6
  41f704:	ror    dl,cl
  41f706:	lea    eax,[edx+0x28]
  41f709:	jns    0x41f722
  41f70b:	mov    cl,0xb0
  41f70d:	push   esi
  41f70e:	lahf   
  41f70f:	imul   ebx,eax,0xffffffbb
  41f712:	neg    DWORD PTR [ecx+0xb]
  41f715:	stc    
  41f716:	dec    edx
  41f717:	inc    edx
  41f718:	sbb    dl,0x81
  41f71b:	imul   edi,DWORD PTR [esi+0x7b],0x8ea127ac
  41f722:	mov    ch,0x72
  41f724:	(bad)  
  41f725:	clc    
  41f726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f727:	sbb    eax,0x9712a307
  41f72c:	nop
  41f72d:	cmp    DWORD PTR [esi+0x5f],ebp
  41f730:	scas   al,BYTE PTR es:[edi]
  41f731:	cmp    edx,DWORD PTR [ebp+0x1c1562b1]
  41f737:	jnp    0x41f740
  41f739:	dec    edx
  41f73a:	mov    cs,WORD PTR [esi+0x27e7a70b]
  41f740:	lahf   
  41f741:	cmc    
  41f742:	(bad)  
  41f743:	jbe    0x41f79a
  41f745:	mov    bl,0x43
  41f747:	mov    ds:0x5b969533,al
  41f74c:	outs   dx,DWORD PTR ds:[esi]
  41f74d:	popf   
  41f74e:	icebp  
  41f74f:	xor    eax,0xdae06157
  41f754:	jo     0x41f76f
  41f756:	in     eax,dx
  41f757:	(bad)  
  41f758:	mov    bl,0x62
  41f75a:	int3   
  41f75b:	fstp   DWORD PTR [eax+0x5]
  41f75e:	mov    dl,BYTE PTR [ebx+0xc]
  41f761:	imul   DWORD PTR [ebx-0x61]
  41f764:	sub    BYTE PTR [edi-0x191aa76c],0x95
  41f76b:	add    al,0x29
  41f76d:	aad    0x5b
  41f76f:	mov    esp,0xeae5e0eb
  41f774:	aam    0xbe
  41f776:	jle    0x41f7dc
  41f778:	add    esp,DWORD PTR [edx-0x39]
  41f77b:	jne    0x41f742
  41f77d:	push   esp
  41f77e:	mov    ebx,0xf71ca356
  41f783:	fs mov ebp,0x2a51a474
  41f789:	mov    bl,bh
  41f78b:	ins    DWORD PTR es:[edi],dx
  41f78c:	push   0xe97b6c39
  41f791:	inc    esi
  41f792:	leave  
  41f793:	cmc    
  41f794:	lods   eax,DWORD PTR ds:[esi]
  41f795:	jecxz  0x41f7f5
  41f797:	xchg   edx,eax
  41f798:	sub    BYTE PTR [ecx],cl
  41f79a:	call   0x96ce:0x9a245d51
  41f7a1:	(bad)  
  41f7a2:	cmp    DWORD PTR [esi+0x7b],ebp
  41f7a5:	into   
  41f7a6:	push   ecx
  41f7a7:	adc    esp,DWORD PTR [edi]
  41f7a9:	dec    eax
  41f7aa:	adc    cl,BYTE PTR [edx-0x5fff56d1]
  41f7b0:	or     eax,0xab3afb09
  41f7b5:	mov    edi,0xcdd5b20e
  41f7ba:	adc    dh,dh
  41f7bc:	pop    es
  41f7bd:	jb     0x41f7db
  41f7bf:	test   DWORD PTR [edx],edi
  41f7c1:	jno    0x41f817
  41f7c3:	sub    DWORD PTR [edi],0x80f8aa30
  41f7c9:	dec    eax
  41f7ca:	jmp    0x41f841
  41f7cc:	sub    al,0x95
  41f7ce:	sbb    BYTE PTR [ecx-0x7f56599f],bl
  41f7d4:	pop    es
  41f7d5:	shl    dl,1
  41f7d7:	inc    esp
  41f7d8:	in     al,dx
  41f7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7da:	adc    bh,BYTE PTR [esi]
  41f7dc:	bound  esi,QWORD PTR [eax-0x360db883]
  41f7e2:	retf   0x30ee
  41f7e5:	or     eax,0x7c7da578
  41f7ea:	(bad)  
  41f7eb:	xchg   esi,eax
  41f7ec:	or     eax,DWORD PTR [ecx+ebp*8]
  41f7ef:	rcr    dh,1
  41f7f1:	inc    edi
  41f7f2:	out    dx,eax
  41f7f3:	jp     0x41f78b
  41f7f5:	xchg   edx,eax
  41f7f6:	int3   
  41f7f7:	jns    0x41f85a
  41f7f9:	aad    0xa6
  41f7fb:	fbld   TBYTE PTR [eax-0x71]
  41f7fe:	and    eax,0x4f2bc72d
  41f803:	and    BYTE PTR [ecx-0x32],ch
  41f806:	repz std 
  41f808:	stos   DWORD PTR es:[edi],eax
  41f809:	cmp    eax,0x85829f38
  41f80e:	inc    edi
  41f80f:	test   DWORD PTR [ebx+0x5d601d05],0x42679fdb
  41f819:	jl     0x41f841
  41f81b:	into   
  41f81c:	sbb    eax,0xa892e10d
  41f821:	mov    ch,0x1
  41f823:	fsub   QWORD PTR [edi-0x40635592]
  41f829:	jbe    0x41f7f6
  41f82b:	pop    eax
  41f82c:	cmp    BYTE PTR [esi+0x37bf8b8e],0x55
  41f833:	jb     0x41f7fb
  41f835:	jno    0x41f807
  41f837:	sbb    dh,BYTE PTR ds:0x1e385abb
  41f83d:	(bad)  
  41f83e:	or     al,0xcb
  41f840:	cmp    bl,ch
  41f842:	cmp    bh,BYTE PTR [eax+esi*4-0x21]
  41f846:	jl     0x41f8b7
  41f848:	jl     0x41f864
  41f84a:	in     al,dx
  41f84b:	sbb    DWORD PTR [ecx+0x5ae3e934],esi
  41f851:	bound  ecx,QWORD PTR [ecx-0x66]
  41f854:	std    
  41f855:	repnz outs dx,DWORD PTR ds:[esi]
  41f857:	cmp    ebp,ebp
  41f859:	(bad)  
  41f85b:	js     0x41f8ca
  41f85d:	add    DWORD PTR [ebx],ebp
  41f85f:	daa    
  41f860:	inc    edi
  41f861:	and    DWORD PTR [eax+0xf],ebx
  41f864:	mov    ebx,0xe573e415
  41f869:	test   DWORD PTR [edx-0x6f8f857f],eax
  41f86f:	es xchg ecx,eax
  41f871:	dec    ebp
  41f872:	xor    cl,BYTE PTR [eax-0x30]
  41f875:	mov    ebx,ss
  41f877:	aad    0x77
  41f879:	push   0x42e4eb1e
  41f87e:	mov    ds:0xcf0910e9,al
  41f883:	xlat   BYTE PTR ds:[ebx]
  41f884:	pop    eax
  41f885:	sahf   
  41f886:	sbb    bl,BYTE PTR [ebx+0x45]
  41f889:	push   ebx
  41f88a:	mov    ?,WORD PTR [ebx-0xdc4f78f]
  41f890:	and    eax,0x3ccfd5f2
  41f895:	out    dx,eax
  41f896:	push   ecx
  41f897:	push   esp
  41f898:	jge    0x41f900
  41f89a:	(bad)
  41f89d:	(bad)  
  41f89e:	aaa    
  41f89f:	fld    DWORD PTR [ebx+0x3d]
  41f8a2:	add    edi,ebp
  41f8a4:	cld    
  41f8a5:	fs ss call 0x63a43818
  41f8ac:	pop    ebp
  41f8ad:	pop    esp
  41f8ae:	aas    
  41f8af:	in     al,0x57
  41f8b1:	ins    DWORD PTR es:[edi],dx
  41f8b2:	das    
  41f8b3:	jmp    0x5883a4c4
  41f8b8:	jbe    0x41f89f
  41f8ba:	aam    0xa2
  41f8bc:	push   esi
  41f8bd:	or     esp,DWORD PTR [eax]
  41f8bf:	push   ss
  41f8c0:	pop    edi
  41f8c1:	int3   
  41f8c2:	mov    ah,0x3c
  41f8c4:	jmp    0xe124:0xf9b4fcf2
  41f8cb:	pop    esi
  41f8cc:	sti    
  41f8cd:	mov    ch,0x5a
  41f8cf:	push   es
  41f8d0:	push   es
  41f8d1:	stc    
  41f8d2:	push   0x50
  41f8d4:	adc    edx,DWORD PTR [edi+edx*2-0x189c53cf]
  41f8db:	repnz stc 
  41f8dd:	mov    ch,0x8d
  41f8df:	xor    BYTE PTR [eax],dh
  41f8e1:	dec    edx
  41f8e2:	ja     0x41f882
  41f8e4:	mov    edi,0xa25523c8
  41f8e9:	add    al,bh
  41f8eb:	lods   al,BYTE PTR ds:[esi]
  41f8ec:	xchg   edi,eax
  41f8ed:	add    eax,edi
  41f8ef:	sbb    bh,BYTE PTR [ecx]
  41f8f1:	mov    edx,0xe9eb6a02
  41f8f6:	aam    0x8c
  41f8f8:	js     0x41f8b7
  41f8fa:	pop    ds
  41f8fb:	add    DWORD PTR [ecx-0x74],ebx
  41f8fe:	pop    esi
  41f8ff:	imul   edi,DWORD PTR ds:0x32450e7a,0x2b
  41f906:	loop   0x41f89b
  41f908:	imul   bx,WORD PTR [ecx-0x1b09d0fe],0xe275
  41f911:	mov    edx,0x8199fb8a
  41f916:	xchg   ecx,eax
  41f917:	jbe    0x41f95b
  41f919:	lock in eax,0x1d
  41f91c:	stc    
  41f91d:	int    0xb7
  41f91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f920:	in     al,dx
  41f921:	call   0x4ab089bf
  41f926:	call   0x83b8c7e8
  41f92b:	mov    esp,0xc6408dcb
  41f930:	cmc    
  41f931:	mov    al,BYTE PTR [eax+0x717d4cac]
  41f937:	push   0x19
  41f939:	test   al,0xb9
  41f93b:	cmp    ebx,DWORD PTR [ecx-0x14f0b62]
  41f941:	sub    DWORD PTR [ebx+esi*4+0x10],ebx
  41f945:	cld    
  41f946:	sub    ebx,DWORD PTR [ebx+0x32]
  41f949:	je     0x41f928
  41f94b:	call   0xe85c:0x7c5c7359
  41f952:	(bad)  
  41f953:	mov    ds:0xd05650c7,eax
  41f958:	pop    edi
  41f959:	push   DWORD PTR [esi-0x5ca7aff2]
  41f95f:	fwait
  41f960:	jge    0x41f957
  41f962:	mov    BYTE PTR [ebp+0x77e32290],bh
  41f968:	jl     0x41f952
  41f96a:	and    DWORD PTR [edi],esp
  41f96c:	lods   al,BYTE PTR ds:[esi]
  41f96d:	aas    
  41f96e:	fist   DWORD PTR [bp+di]
  41f971:	leave  
  41f972:	out    0xac,al
  41f974:	ds push cs
  41f976:	mov    al,0xdb
  41f978:	jle    0x41f98a
  41f97a:	loope  0x41f99c
  41f97c:	push   ebx
  41f97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f97e:	aaa    
  41f97f:	jmp    0x94702fbb
  41f984:	fucomi st,st(0)
  41f986:	sub    al,0x78
  41f988:	xor    ah,BYTE PTR [ecx]
  41f98a:	xlat   BYTE PTR ds:[ebx]
  41f98b:	test   al,0x5c
  41f98d:	adc    BYTE PTR [edx+0x68435a1a],dh
  41f993:	stos   DWORD PTR es:[edi],eax
  41f994:	mov    dl,0xaf
  41f996:	(bad)  
  41f997:	pop    ebp
  41f998:	or     ah,BYTE PTR [ecx+0x62]
  41f99b:	inc    di
  41f99d:	mov    al,0xdf
  41f99f:	aas    
  41f9a0:	test   al,0xcb
  41f9a2:	push   0x6
  41f9a4:	sub    DWORD PTR [eax-0x2b65300c],edi
  41f9aa:	jp     0x41f981
  41f9ac:	push   esp
  41f9ad:	dec    edi
  41f9ae:	idiv   BYTE PTR [ebx]
  41f9b0:	mov    ds:0xd2a7a4,al
  41f9b5:	xchg   DWORD PTR [esi+0x3c],edx
  41f9b8:	out    dx,eax
  41f9b9:	es jmp 0x41f97b
  41f9bc:	xchg   ecx,eax
  41f9bd:	in     al,dx
  41f9be:	jae    0x41fa01
  41f9c0:	fs ja  0x41f9c3
  41f9c3:	sahf   
  41f9c4:	outs   dx,DWORD PTR ds:[esi]
  41f9c5:	or     eax,0x36eed8cb
  41f9ca:	in     al,dx
  41f9cb:	into   
  41f9cc:	aas    
  41f9cd:	lds    ebp,FWORD PTR [esi]
  41f9cf:	cmp    ebp,esp
  41f9d1:	sbb    DWORD PTR [esi-0x6b],ebx
  41f9d4:	lea    ebx,[esi+eax*2-0x36]
  41f9d8:	push   esp
  41f9d9:	sbb    eax,0x95037c8
  41f9de:	cmp    DWORD PTR [edx],esp
  41f9e0:	push   ds
  41f9e1:	test   BYTE PTR [ebx-0x3c3661d7],al
  41f9e7:	ret    
  41f9e8:	inc    edi
  41f9e9:	xchg   DWORD PTR [esp+ebx*1+0x6e6b73aa],ebx
  41f9f0:	outs   dx,BYTE PTR ds:[esi]
  41f9f1:	fs test eax,0xe143e95d
  41f9f7:	inc    edx
  41f9f8:	sbb    ebx,DWORD PTR [esi+ecx*4+0x12bffffe]
  41f9ff:	and    eax,0xb08d55c7
  41fa04:	xchg   ebp,eax
  41fa05:	out    0xb0,al
  41fa07:	retf   0x2c14
  41fa0a:	js     0x41f9fa
  41fa0c:	dec    ebp
  41fa0d:	or     DWORD PTR [edi],esi
  41fa0f:	xchg   ebx,eax
  41fa10:	loope  0x41fa03
  41fa12:	dec    edi
  41fa13:	mov    ebp,0x7ed787db
  41fa18:	xchg   ebx,eax
  41fa19:	aam    0x59
  41fa1b:	lock push cs
  41fa1d:	jo     0x41fa9c
  41fa1f:	imul   ecx,DWORD PTR [edx+edx*1],0xc3b2cdef
  41fa26:	xlat   BYTE PTR ds:[ebx]
  41fa27:	loope  0x41f9d9
  41fa29:	jo     0x41f9e2
  41fa2b:	lock adc bl,al
  41fa2e:	xor    DWORD PTR [ebx-0x72f739f9],esi
  41fa34:	enter  0x7b5c,0x8
  41fa38:	div    DWORD PTR [ebx]
  41fa3a:	cli    
  41fa3b:	test   BYTE PTR [esi-0x4d],0x1d
  41fa3f:	or     BYTE PTR [ecx+0x26],bl
  41fa42:	jae    0x41fa90
  41fa44:	sbb    eax,0x472a6153
  41fa49:	sub    al,0xad
  41fa4b:	arpl   WORD PTR [edx+ebx*1+0x14],sp
  41fa4f:	mov    al,0x48
  41fa51:	jl     0x41fa21
  41fa53:	ficom  DWORD PTR [edx+0x5e]
  41fa56:	sub    ecx,DWORD PTR [ebx]
  41fa58:	std    
  41fa59:	ss dec ebp
  41fa5b:	in     al,dx
  41fa5c:	imul   DWORD PTR [ecx]
  41fa5e:	jnp    0x41fabf
  41fa60:	mov    eax,ds:0xe46e075d
  41fa65:	jae    0x41fa9a
  41fa67:	and    eax,0x5633bedb
  41fa6c:	jmp    0x3a6ee390
  41fa71:	out    dx,eax
  41fa72:	mov    ecx,edx
  41fa74:	sbb    al,BYTE PTR [edi]
  41fa76:	cli    
  41fa77:	push   cs
  41fa78:	fbld   TBYTE PTR ds:0x56c2f86e
  41fa7e:	lock rol BYTE PTR [ebx-0xd],cl
  41fa82:	fldenv [eax+0x3e36f74e]
  41fa88:	pop    edi
  41fa89:	jecxz  0x41fa63
  41fa8b:	mov    ah,0x96
  41fa8d:	dec    ebx
  41fa8e:	test   DWORD PTR [eax-0x7f93e29f],ebx
  41fa94:	popa   
  41fa95:	sub    eax,0xf59b54ae
  41fa9a:	fdivr  QWORD PTR [eax+0x6d]
  41fa9d:	sub    dl,BYTE PTR [eax]
  41fa9f:	imul   ebp,DWORD PTR [edi-0x25],0x900006b6
  41faa6:	aam    0x3c
  41faa8:	or     BYTE PTR [eax],dh
  41faaa:	sub    al,0xc7
  41faac:	push   cs
  41faad:	sbb    DWORD PTR [edx+0x24],edi
  41fab0:	xor    bh,bl
  41fab2:	not    edx
  41fab4:	das    
  41fab5:	sahf   
  41fab6:	into   
  41fab7:	ins    DWORD PTR es:[edi],dx
  41fab8:	inc    edx
  41fab9:	loop   0x41fb2b
  41fabb:	lds    edi,FWORD PTR [ebx]
  41fabd:	rcr    ebx,0x54
  41fac0:	push   ecx
  41fac1:	xchg   esi,eax
  41fac2:	xchg   edx,eax
  41fac3:	loop   0x41fb2a
  41fac5:	push   es
  41fac6:	ret    
  41fac7:	rcl    DWORD PTR ds:0x22c3d024,cl
  41facd:	aam    0xc2
  41facf:	int    0x41
  41fad1:	jge    0x41fb4c
  41fad3:	jne    0x41faa7
  41fad5:	pop    ds
  41fad6:	mov    ah,0x30
  41fad8:	aam    0x59
  41fada:	sub    ebp,esi
  41fadc:	imul   eax,DWORD PTR [eax+0x72],0xffffff82
  41fae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae1:	arpl   WORD PTR [ecx+ebx*8-0x7e],ax
  41fae5:	mov    ds:0xc4f5c35c,al
  41faea:	push   eax
  41faeb:	fistp  WORD PTR [ebx+eax*8+0x5f]
  41faef:	mov    esp,0xa079fd5b
  41faf4:	mov    eax,0x2ad054c5
  41faf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fafa:	push   ds
  41fafb:	jl     0x41fb2a
  41fafd:	lds    di,DWORD PTR [eax-0x37]
  41fb01:	aam    0x4b
  41fb03:	lds    eax,FWORD PTR [eax+0x1662747a]
  41fb09:	adc    bh,BYTE PTR [esi-0x6d]
  41fb0c:	retf   
  41fb0d:	mov    ch,0x1f
  41fb0f:	fcomip st,st(5)
  41fb11:	and    eax,0x1dad4f17
  41fb16:	into   
  41fb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb18:	je     0x41fb53
  41fb1a:	push   ebx
  41fb1b:	xor    BYTE PTR [eax-0x80],al
  41fb1e:	sahf   
  41fb1f:	mov    esi,0x8338c73a
  41fb24:	(bad)  
  41fb25:	pop    ds
  41fb26:	stos   DWORD PTR es:[edi],eax
  41fb27:	cdq    
  41fb28:	pop    esp
  41fb29:	jmp    0x41fb6c
  41fb2b:	jp     0x41fb3f
  41fb2d:	add    edi,DWORD PTR es:[ebx-0x2d]
  41fb31:	loope  0x41fb83
  41fb33:	fcom   DWORD PTR [ecx-0x193b45c7]
  41fb39:	ins    BYTE PTR es:[edi],dx
  41fb3a:	call   0xe7a27c39
  41fb3f:	adc    ecx,DWORD PTR [ebx-0x28c0448b]
  41fb45:	dec    ebx
  41fb46:	jne    0x41fb44
  41fb48:	test   eax,0x79ee967d
  41fb4d:	dec    esp
  41fb4e:	mov    esp,0xf90ceb24
  41fb53:	cmp    al,0xb2
  41fb55:	hlt    
  41fb56:	xchg   ebp,eax
  41fb57:	sbb    esi,DWORD PTR [esi]
  41fb59:	or     edi,esi
  41fb5b:	jo     0x41fb0c
  41fb5d:	pop    ecx
  41fb5e:	inc    ebx
  41fb5f:	inc    eax
  41fb60:	cli    
  41fb61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb62:	lods   al,BYTE PTR ds:[esi]
  41fb63:	pop    ds
  41fb64:	cs int3 
  41fb66:	cmc    
  41fb67:	repnz and ch,dl
  41fb6a:	ret    
  41fb6b:	inc    ebp
  41fb6c:	adc    DWORD PTR [ebx-0x5df27d38],0xa47d67df
  41fb76:	fmul   QWORD PTR [edi]
  41fb78:	inc    esi
  41fb79:	sbb    BYTE PTR [edi-0x43727c77],0xb4
  41fb80:	aaa    
  41fb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb82:	and    al,0xf8
  41fb84:	mov    esi,0xe491aa25
  41fb89:	add    dh,ch
  41fb8b:	rol    DWORD PTR [ebx-0x23],cl
  41fb8e:	(bad)  
  41fb8f:	fiadd  WORD PTR [edx]
  41fb91:	int3   
  41fb92:	mov    edx,0x936b941e
  41fb97:	cmc    
  41fb98:	mov    al,ds:0xc5d3e1b
  41fb9d:	and    eax,0xed99ace8
  41fba2:	add    DWORD PTR [eax],edi
  41fba4:	fsub   QWORD PTR ds:0x654c28a
  41fbaa:	aad    0x83
  41fbac:	jo     0x41fbb4
  41fbae:	je     0x41fb71
  41fbb0:	push   ebx
  41fbb1:	push   esi
  41fbb2:	xlat   BYTE PTR ds:[ebx]
  41fbb3:	shl    bl,1
  41fbb5:	fs adc eax,edi
  41fbb8:	gs push cs
  41fbba:	push   esi
  41fbbb:	fidiv  DWORD PTR [esi-0x6a]
  41fbbe:	inc    edx
  41fbbf:	cs mov ecx,0xd41b8804
  41fbc5:	test   BYTE PTR ds:0x76f88a23,bl
  41fbcb:	mov    DWORD PTR [esi+0x44e9f50a],ebp
  41fbd1:	mov    eax,ds:0x979bd6b0
  41fbd6:	pop    esi
  41fbd7:	push   ebx
  41fbd8:	je     0x41fc1a
  41fbda:	popf   
  41fbdb:	jg     0x41fc2d
  41fbdd:	fadd   QWORD PTR [ecx-0x3b]
  41fbe0:	add    al,0x97
  41fbe2:	pop    ecx
  41fbe3:	(bad)  
  41fbe4:	and    DWORD PTR [esi-0x30],edx
  41fbe7:	fldenv [ebp-0x15540d4d]
  41fbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbee:	xchg   DWORD PTR [esi-0x7e],edx
  41fbf1:	mov    ds:0x6b4b1610,eax
  41fbf6:	rol    BYTE PTR [ebx-0x2756c738],cl
  41fbfc:	mov    al,0xf4
  41fbfe:	mov    al,BYTE PTR [ebx]
  41fc00:	ret    
  41fc01:	stc    
  41fc02:	pop    esp
  41fc03:	call   0x7dbb8c81
  41fc08:	inc    edi
  41fc09:	mov    cl,0x13
  41fc0b:	test   al,0x79
  41fc0d:	sub    ecx,DWORD PTR [ebx+0x2a975dbf]
  41fc13:	push   ecx
  41fc14:	push   ss
  41fc15:	sub    BYTE PTR [eax+0x70],0x57
  41fc19:	sbb    edi,DWORD PTR [eax]
  41fc1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc1c:	fiadd  DWORD PTR [esi]
  41fc1e:	sbb    ah,BYTE PTR [eax+ebp*1-0xecd15ba]
  41fc25:	bound  esp,QWORD PTR [eax+0x1981be13]
  41fc2b:	cmp    al,0xbc
  41fc2d:	pop    edx
  41fc2e:	lahf   
  41fc2f:	(bad)  
  41fc30:	daa    
  41fc31:	mov    es,WORD PTR [eax+0x7a1f10e5]
  41fc37:	ret    
  41fc38:	js     0x41fc1e
  41fc3a:	mov    al,ds:0xd374cd36
  41fc3f:	ret    0xd86b
  41fc42:	sahf   
  41fc43:	xchg   edi,eax
  41fc44:	ffreep st(1)
  41fc46:	xor    BYTE PTR [edi+0x7f075acc],dl
  41fc4c:	push   edx
  41fc4d:	jbe    0x41fc1b
  41fc4f:	or     dh,BYTE PTR [edi+esi*1]
  41fc52:	xchg   esi,edi
  41fc54:	iret   
  41fc55:	cs ret 
  41fc57:	mov    BYTE PTR ds:0x5fb3b1a1,cl
  41fc5d:	jmp    0x41fcc6
  41fc5f:	shl    BYTE PTR [ebx+0x6c],0x2c
  41fc63:	cmc    
  41fc64:	retf   
  41fc65:	aaa    
  41fc66:	cmp    edx,ebp
  41fc68:	out    0xb3,eax
  41fc6a:	clc    
  41fc6b:	pop    edx
  41fc6c:	xchg   ebp,eax
  41fc6d:	cli    
  41fc6e:	dec    esp
  41fc6f:	cs (bad) 
  41fc71:	push   ebx
  41fc72:	push   ss
  41fc73:	call   FWORD PTR [esi+0x75]
  41fc76:	cdq    
  41fc77:	sbb    bh,0x94
  41fc7a:	jge    0x41fc19
  41fc7c:	ins    BYTE PTR es:[edi],dx
  41fc7d:	mov    dh,0xc4
  41fc7f:	jp     0x41fc92
  41fc81:	retf   
  41fc82:	es dec eax
  41fc84:	ficomp DWORD PTR [edx+eax*4+0x76]
  41fc88:	int3   
  41fc89:	mov    ah,0x89
  41fc8b:	sahf   
  41fc8c:	mov    bl,cl
  41fc8e:	test   cl,dh
  41fc90:	mov    ebp,0xa65813d9
  41fc95:	and    al,0xfd
  41fc97:	daa    
  41fc98:	push   cs
  41fc99:	xchg   ebx,eax
  41fc9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc9b:	mov    eax,0xf39ca151
  41fca0:	sbb    ebx,eax
  41fca2:	mov    eax,0x3c53830b
  41fca7:	add    BYTE PTR [esi+eiz*1],al
  41fcaa:	mov    dl,0x53
  41fcac:	enter  0x4842,0x71
  41fcb0:	mov    eax,ds:0xcd929366
  41fcb5:	sub    bl,ch
  41fcb7:	mov    al,ds:0x83987a1f
  41fcbc:	dec    esp
  41fcbd:	(bad)  
  41fcbf:	mov    ebx,0xcff65907
  41fcc4:	inc    edi
  41fcc5:	pusha  
  41fcc6:	lods   al,BYTE PTR ds:[esi]
  41fcc7:	adc    DWORD PTR [esi+0x71],ecx
  41fcca:	sbb    al,0x71
  41fccc:	xchg   esi,eax
  41fccd:	or     al,0x68
  41fccf:	add    DWORD PTR ds:0x15b867ff,ebp
  41fcd5:	xor    eax,0x63ed7cb5
  41fcda:	mov    ch,0x54
  41fcdc:	out    0x58,eax
  41fcde:	sti    
  41fcdf:	out    0xd4,eax
  41fce1:	inc    edx
  41fce2:	sbb    DWORD PTR [edi],edx
  41fce4:	imul   esp,edi,0x9cd5690
  41fcea:	or     ch,bh
  41fcec:	lds    esi,FWORD PTR [ebp-0x12]
  41fcef:	mov    al,0xd0
  41fcf1:	lds    eax,FWORD PTR [ecx]
  41fcf3:	pop    es
  41fcf4:	sbb    ch,0xf2
  41fcf7:	xor    BYTE PTR [ebx+0x60],ch
  41fcfa:	sar    DWORD PTR [edi],cl
  41fcfc:	xor    edi,edi
  41fcfe:	mov    esi,0x98591409
  41fd03:	mov    ch,0x77
  41fd05:	cs dec esi
  41fd07:	sbb    edi,DWORD PTR [edx]
  41fd09:	mov    ebp,0x6167a272
  41fd0e:	push   0x47
  41fd10:	cmc    
  41fd11:	or     eax,0x93215753
  41fd16:	add    BYTE PTR [ebp-0x5f],bl
  41fd19:	pop    es
  41fd1a:	mov    DWORD PTR [esi+0x42],edx
  41fd1d:	sbb    eax,0xbbe832db
  41fd22:	lock mov eax,0x2545df15
  41fd28:	xchg   edx,eax
  41fd29:	lahf   
  41fd2a:	or     al,0x9c
  41fd2c:	lods   eax,DWORD PTR ds:[esi]
  41fd2d:	mov    ds:0x4780f191,eax
  41fd32:	adc    ch,BYTE PTR [ebp-0x7c1f44e1]
  41fd38:	fwait
  41fd39:	stc    
  41fd3a:	push   0xad3ffe22
  41fd3f:	pop    esp
  41fd40:	fsubr  DWORD PTR [edi+0x7b]
  41fd43:	call   0x76875a6f
  41fd48:	popa   
  41fd49:	or     eax,0x47747641
  41fd4e:	rol    BYTE PTR [esi-0x7c6a05eb],cl
  41fd54:	mov    ecx,0x4c5bfc84
  41fd59:	gs jle 0x41fd0d
  41fd5c:	addr16 ret 0xf8fc
  41fd60:	call   0x549417f
  41fd65:	inc    ebp
  41fd66:	pop    ss
  41fd67:	jl     0x41fd9e
  41fd69:	mov    ch,0x78
  41fd6b:	pop    esp
  41fd6c:	fist   WORD PTR [edi]
  41fd6e:	mov    bl,0x9d
  41fd70:	adc    al,0x7c
  41fd72:	outs   dx,BYTE PTR ds:[esi]
  41fd73:	pushf  
  41fd74:	or     DWORD PTR [edx+0x7c],eax
  41fd77:	cli    
  41fd78:	push   ds
  41fd79:	ror    eax,cl
  41fd7b:	ja     0x41fdf8
  41fd7d:	push   ss
  41fd7e:	sahf   
  41fd7f:	or     cl,BYTE PTR [esi+0x23ca869]
  41fd85:	mov    al,0x3b
  41fd87:	inc    esp
  41fd88:	cld    
  41fd89:	push   ecx
  41fd8a:	or     al,0xf5
  41fd8c:	dec    ecx
  41fd8d:	xchg   edx,eax
  41fd8e:	fstp   DWORD PTR [ecx+0x32]
  41fd91:	add    DWORD PTR [ecx-0x22],ebp
  41fd94:	outs   dx,DWORD PTR ds:[esi]
  41fd95:	pop    ebx
  41fd96:	adc    BYTE PTR [eax-0x76],0x64
  41fd9a:	or     dl,ch
  41fd9c:	add    eax,0xea4819a6
  41fda1:	mov    ch,0xf
  41fda3:	mov    dh,0x5c
  41fda5:	in     eax,0x58
  41fda7:	fwait
  41fda8:	loop   0x41fd90
  41fdaa:	stc    
  41fdab:	les    edi,FWORD PTR [esi+0x5]
  41fdae:	sahf   
  41fdaf:	repnz int3 
  41fdb1:	sub    eax,0x4c3026c1
  41fdb6:	inc    edx
  41fdb7:	jmp    DWORD PTR [ecx+0x7057cbfb]
  41fdbd:	shr    BYTE PTR [ebp-0x7b14cf3],cl
  41fdc3:	jae    0x41fd62
  41fdc5:	into   
  41fdc6:	inc    edx
  41fdc7:	in     eax,0xc2
  41fdc9:	std    
  41fdca:	in     al,0xc6
  41fdcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdcd:	dec    ecx
  41fdce:	cmp    al,0xc7
  41fdd0:	lea    ebp,[ebp-0x12]
  41fdd3:	xchg   esp,eax
  41fdd4:	pop    ebp
  41fdd5:	and    DWORD PTR [esi+0x19],ecx
  41fdd8:	and    dl,ch
  41fdda:	push   0x4d
  41fddc:	mov    al,0x62
  41fdde:	test   DWORD PTR [esi],ecx
  41fde0:	ins    BYTE PTR es:[edi],dx
  41fde1:	in     al,dx
  41fde2:	ret    0x1c79
  41fde5:	outs   dx,DWORD PTR ds:[esi]
  41fde6:	xchg   edi,eax
  41fde7:	dec    ebx
  41fde8:	cmp    eax,0xf8673200
  41fded:	ror    bl,cl
  41fdef:	imul   esi,DWORD PTR [edi-0x2a77a147],0x3
  41fdf6:	repz push edi
  41fdf8:	mov    al,0xcd
  41fdfa:	and    eax,0xfaeddade
  41fdff:	addr16 push 0xe
  41fe02:	sbb    dl,BYTE PTR [ecx-0x40]
  41fe05:	leave  
  41fe06:	jmp    0xc8b21d60
  41fe0b:	ins    BYTE PTR es:[edi],dx
  41fe0c:	ins    DWORD PTR es:[edi],dx
  41fe0d:	jmp    0xa494800a
  41fe12:	fs loope 0x41fe93
  41fe15:	or     DWORD PTR [ecx-0x260eb9c3],esp
  41fe1b:	and    DWORD PTR [ebx+ecx*2],ecx
  41fe1e:	xor    ecx,DWORD PTR [ebp+0x33]
  41fe21:	mov    dl,0xbc
  41fe23:	push   edx
  41fe24:	daa    
  41fe25:	add    DWORD PTR [esi+0x5889036e],esp
  41fe2b:	and    eax,0x44f2e059
  41fe30:	ins    DWORD PTR es:[edi],dx
  41fe31:	ret    0x80
  41fe34:	mov    BYTE PTR [edi],bl
  41fe36:	jle    0x41fe93
  41fe38:	ret    0x5683
  41fe3b:	inc    esp
  41fe3c:	cmp    BYTE PTR [edx-0x55],ch
  41fe3f:	or     eax,0x46f9ea6e
  41fe44:	lea    eax,es:[edx+edi*4+0x76]
  41fe49:	and    BYTE PTR [edi+0x4ee5aa5e],0x8b
  41fe50:	and    DWORD PTR [esi],edx
  41fe52:	rcl    DWORD PTR [ebp+0x64],cl
  41fe55:	sub    eax,0xe51f1093
  41fe5a:	int    0x59
  41fe5c:	dec    ebx
  41fe5d:	stos   DWORD PTR es:[edi],eax
  41fe5e:	cmp    eax,0x29160d17
  41fe63:	mov    ch,0x94
  41fe65:	inc    ebp
  41fe66:	or     eax,0xd2e7ebe8
  41fe6b:	pop    ecx
  41fe6c:	mov    edx,0x6f8ebfb9
  41fe71:	xchg   ecx,eax
  41fe72:	mov    BYTE PTR [ecx-0x68],0x45
  41fe76:	adc    BYTE PTR [ebx+0x5cb1949c],dh
  41fe7c:	fsubr  DWORD PTR [edi-0x71]
  41fe7f:	xor    BYTE PTR [edx+0x32],ah
  41fe82:	ficomp DWORD PTR [ebp-0x1b122184]
  41fe88:	mov    WORD PTR [eax],?
  41fe8a:	mov    BYTE PTR [ecx+0x1f80f158],cl
  41fe90:	inc    ebx
  41fe91:	retf   
  41fe92:	mov    esi,0x68d16b
  41fe97:	xchg   BYTE PTR [esi+0x169f2c15],bh
  41fe9d:	inc    edx
  41fe9e:	jmp    0x265b:0x95f175c0
  41fea5:	arpl   WORD PTR [edx],bp
  41fea7:	inc    ecx
  41fea8:	xchg   dh,bl
  41feaa:	jae    0x41fe6b
  41feac:	mov    bl,0xd
  41feae:	sbb    BYTE PTR [ecx-0x3a],al
  41feb1:	inc    ebp
  41feb2:	in     eax,0xb9
  41feb4:	pop    ebx
  41feb5:	nop
  41feb6:	int3   
  41feb7:	xchg   edi,eax
  41feb8:	cmp    ebx,eax
  41feba:	or     BYTE PTR [ecx+0xd9523a6],dl
  41fec0:	push   ebp
  41fec1:	stc    
  41fec2:	mov    dh,0x5d
  41fec4:	iret   
  41fec5:	pusha  
  41fec6:	ins    DWORD PTR es:[edi],dx
  41fec7:	add    eax,DWORD PTR [ecx-0x50]
  41feca:	ja     0x41fef6
  41fecc:	lods   eax,DWORD PTR ds:[esi]
  41fecd:	out    0x8e,eax
  41fecf:	pop    DWORD PTR [ebp+0x409ef5ec]
  41fed5:	mov    esi,0xa54534d4
  41feda:	leave  
  41fedb:	int    0x63
  41fedd:	int    0xa3
  41fedf:	jmp    0x4f4f45d8
  41fee4:	aas    
  41fee5:	ror    DWORD PTR [edx-0x5e5faecf],cl
  41feeb:	xchg   esi,eax
  41feec:	out    dx,al
  41feed:	push   ebp
  41feee:	push   edi
  41feef:	adc    eax,0xb2e30929
  41fef4:	mov    edx,fs
  41fef6:	jecxz  0x41feeb
  41fef8:	jbe    0x41ff75
  41fefa:	stos   DWORD PTR es:[edi],eax
  41fefb:	test   ebx,edi
  41fefd:	adc    BYTE PTR [eax+0x7e],ah
  41ff00:	pop    eax
  41ff01:	in     eax,dx
  41ff02:	scas   eax,DWORD PTR es:[edi]
  41ff03:	ja     0x41ff37
  41ff05:	enter  0xcf3c,0xcb
  41ff09:	cdq    
  41ff0a:	es cmp eax,0x81d70667
  41ff10:	sub    BYTE PTR [ebx+0x6e],cl
  41ff13:	in     al,dx
  41ff14:	lds    eax,FWORD PTR [eax+ebx*4-0x80]
  41ff18:	sar    BYTE PTR [edx+ebp*8],cl
  41ff1b:	pop    ebp
  41ff1c:	(bad)  
  41ff1d:	scas   al,BYTE PTR es:[edi]
  41ff1e:	in     al,dx
  41ff1f:	outs   dx,BYTE PTR ds:[esi]
  41ff20:	or     al,0xb3
  41ff22:	shl    DWORD PTR [ecx],cl
  41ff24:	jb     0x41ff72
  41ff26:	(bad)  
  41ff28:	dec    edi
  41ff29:	xlat   BYTE PTR ds:[ebx]
  41ff2a:	ins    DWORD PTR es:[edi],dx
  41ff2b:	test   BYTE PTR [ebp+ebx*2+0x75171b38],ch
  41ff32:	mov    dl,0xcd
  41ff34:	daa    
  41ff35:	ins    BYTE PTR es:[edi],dx
  41ff36:	dec    esi
  41ff37:	and    al,0xbe
  41ff39:	mov    DWORD PTR [esi-0x5a],esi
  41ff3c:	push   esp
  41ff3d:	adc    al,0x9b
  41ff3f:	mov    esp,0xe9d30e28
  41ff44:	pop    eax
  41ff45:	imul   ebx,eax,0xffffffbf
  41ff48:	ins    DWORD PTR es:[edi],dx
  41ff49:	adc    BYTE PTR [edx-0x43eeb5f9],bh
  41ff4f:	out    0xc5,eax
  41ff51:	stos   DWORD PTR es:[edi],eax
  41ff52:	sub    eax,0xddada8f2
  41ff57:	aas    
  41ff58:	and    eax,0x4073a7b
  41ff5d:	jmp    0xed34:0x5e04bbbb
  41ff64:	mov    eax,0xcbddf285
  41ff69:	mov    BYTE PTR [ecx-0x32],cl
  41ff6c:	xchg   ebp,edx
  41ff6e:	nop
  41ff6f:	xchg   ebp,eax
  41ff70:	icebp  
  41ff71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff72:	cmp    DWORD PTR [ebx+0x16],edi
  41ff75:	cdq    
  41ff76:	lods   al,BYTE PTR ds:[esi]
  41ff77:	lea    esp,ds:0xc982f6a8
  41ff7d:	push   0xf4a6d60c
  41ff82:	mov    WORD PTR [esi+eax*2],es
  41ff85:	idiv   DWORD PTR [esi-0x53]
  41ff88:	mov    cl,0x5e
  41ff8a:	ins    BYTE PTR es:[edi],dx
  41ff8b:	rol    DWORD PTR [ecx+0x2d550423],1
  41ff91:	adc    DWORD PTR [edx+0x32],edi
  41ff94:	cmc    
  41ff95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff96:	sub    BYTE PTR [ebp-0x336c3b3f],0xf1
  41ff9d:	push   edi
  41ff9e:	mov    cl,bl
  41ffa0:	in     al,0xd4
  41ffa2:	add    eax,0xf595a373
  41ffa7:	nop
  41ffa8:	inc    eax
  41ffa9:	pop    esi
  41ffaa:	cmp    DWORD PTR [ebp-0x4],0xc074da70
  41ffb1:	mov    ch,0x34
  41ffb3:	hlt    
  41ffb4:	js     0x41fff0
  41ffb6:	and    al,0x9d
  41ffb8:	jl     0x42001d
  41ffba:	imul   ebp,edi,0xa52726b
  41ffc0:	jae    0x41ffbe
  41ffc2:	(bad)  
  41ffc4:	sub    al,0x63
  41ffc6:	sti    
  41ffc7:	pop    ebx
  41ffc8:	sub    esi,ebp
  41ffca:	push   edx
  41ffcb:	bound  ebp,QWORD PTR ds:0x29880728
  41ffd1:	xchg   ebx,eax
  41ffd2:	xchg   ecx,eax
  41ffd3:	inc    ecx
  41ffd4:	int    0x5b
  41ffd6:	js     0x41ffe0
  41ffd8:	adc    al,0x76
  41ffda:	test   BYTE PTR [ebx-0x4e],dl
  41ffdd:	dec    eax
  41ffde:	xor    DWORD PTR [esi+0x17],esi
  41ffe1:	aam    0x23
  41ffe3:	fsub   DWORD PTR [edx+0x21]
  41ffe6:	pop    ebx
  41ffe7:	jmp    0x6bcf:0xa92fcf30
  41ffee:	leave  
  41ffef:	cwde   
  41fff0:	mov    WORD PTR [edi+eax*8+0x24c2a80c],?
  41fff7:	jbe    0x41ffa0
  41fff9:	adc    BYTE PTR [esi-0xf6e6e85],dl
  41ffff:	test   ebx,esi
  420001:	push   ecx
  420002:	mov    WORD PTR [edi+0x15],?
  420005:	movsx  ebx,BYTE PTR [edi-0x4fd5fd4]
  42000c:	icebp  
  42000d:	cmp    ebp,esi
  42000f:	shr    BYTE PTR [esi-0x244414ec],0x6c
  420016:	add    ecx,0x746ef998
  42001c:	nop
  42001d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42001f:	pop    ecx
  420020:	rol    BYTE PTR [eax-0x3ac6d427],cl
  420026:	aad    0xcc
  420028:	out    dx,eax
  420029:	pop    ss
  42002a:	ret    0x532f
  42002d:	scas   eax,DWORD PTR es:[edi]
  42002e:	popa   
  42002f:	aad    0x14
  420031:	xchg   edx,eax
  420032:	mov    eax,ds:0x85821608
  420037:	push   0x10
  420039:	cs lahf 
  42003b:	mov    bl,0x72
  42003d:	and    ebp,DWORD PTR [edx+0x36]
  420040:	xchg   BYTE PTR [edx],cl
  420042:	cli    
  420043:	lea    ebx,[edx-0x5d079d9]
  420049:	(bad)  
  42004a:	cmp    cl,BYTE PTR [esi-0x49]
  42004d:	pop    edx
  42004e:	in     eax,0xeb
  420050:	lea    ebp,[ebx+0xa]
  420053:	sbb    eax,0x824ee275
  420058:	jno    0x420085
  42005a:	(bad)  
  42005b:	aaa    
  42005c:	retf   0x6044
  42005f:	fdiv   QWORD PTR [eax-0x47729055]
  420065:	jmp    0x246c:0x16c9993
  42006c:	fisttp DWORD PTR [edx-0x12]
  42006f:	sub    DWORD PTR [esi-0x32669045],edi
  420075:	add    ah,BYTE PTR [esi+0x391239b6]
  42007b:	dec    esi
  42007c:	test   BYTE PTR [ebx+0x17ceafc0],0xa2
  420083:	jmp    0x32ad9d2f
  420088:	mov    ds:0x31c60a2a,al
  42008d:	push   0xc50f99b7
  420092:	scas   al,BYTE PTR es:[edi]
  420093:	js     0x420084
  420095:	push   esp
  420096:	sub    eax,DWORD PTR [ecx-0xcab787]
  42009c:	lds    ebx,FWORD PTR [edi]
  42009e:	lahf   
  42009f:	aas    
  4200a0:	sbb    ah,ah
  4200a2:	les    esp,FWORD PTR ds:0x456aaa75
  4200a8:	jne    0x42002e
  4200aa:	push   esi
  4200ab:	(bad)  
  4200ac:	jnp    0x4200a2
  4200ae:	push   ecx
  4200af:	jmp    0x790d47cf
  4200b4:	adc    BYTE PTR [edi],dh
  4200b6:	in     al,0xb7
  4200b8:	pop    ecx
  4200b9:	inc    edx
  4200ba:	push   edi
  4200bb:	jb     0x420121
  4200bd:	adc    eax,0x2b27b69d
  4200c2:	xchg   DWORD PTR [esi+0xe],edi
  4200c5:	leave  
  4200c6:	cmp    eax,0xfd2119c3
  4200cb:	xor    eax,0xed3cf10c
  4200d0:	add    bh,BYTE PTR [ebp+0x48]
  4200d3:	fwait
  4200d4:	sbb    cl,BYTE PTR [ecx-0x8]
  4200d7:	dec    ebp
  4200d8:	push   eax
  4200d9:	stos   BYTE PTR es:[edi],al
  4200da:	shl    BYTE PTR [edi-0x7e],cl
  4200dd:	or     eax,0xc0918025
  4200e2:	dec    esp
  4200e3:	test   esi,0xf6d971da
  4200e9:	adc    BYTE PTR ds:0x2bfc746,0xae
  4200f0:	mov    cl,0x19
  4200f2:	and    DWORD PTR [ebx-0x6f],eax
  4200f5:	ss pusha 
  4200f7:	cmp    edx,ebp
  4200f9:	adc    BYTE PTR [eax],bl
  4200fb:	(bad)  
  4200fd:	cmp    DWORD PTR [ebx+0x3f],eax
  420100:	add    eax,0xc639f8f7
  420105:	xchg   ebx,eax
  420106:	pop    ss
  420107:	inc    ebp
  420108:	inc    edx
  420109:	mov    esp,0xa7dc9e6f
  42010e:	sahf   
  42010f:	nop
  420110:	shl    eax,cl
  420112:	inc    esi
  420113:	cmp    al,0xc7
  420115:	dec    edi
  420116:	push   ss
  420117:	xchg   ebx,eax
  420118:	shl    dl,1
  42011a:	outs   dx,DWORD PTR ds:[esi]
  42011b:	pushf  
  42011c:	pop    ebx
  42011d:	inc    ecx
  42011e:	mov    esi,ebp
  420120:	rcr    cl,cl
  420122:	pop    esi
  420123:	push   eax
  420124:	scas   eax,DWORD PTR es:[edi]
  420125:	pop    ebp
  420126:	stc    
  420127:	fdiv   DWORD PTR [ecx+0x4ca3c58c]
  42012d:	outs   dx,DWORD PTR ds:[esi]
  42012e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012f:	mov    al,0x5b
  420131:	adc    ebx,edi
  420133:	dec    esi
  420134:	loopne 0x420121
  420136:	xchg   esp,eax
  420137:	shr    BYTE PTR ds:0xb80228db,0x78
  42013e:	push   ebx
  42013f:	div    DWORD PTR [edi+0x1126d34]
  420145:	push   0xffffffad
  420147:	inc    ebx
  420148:	mov    ecx,0x2341499
  42014d:	outs   dx,BYTE PTR ds:[esi]
  42014e:	scas   eax,DWORD PTR es:[edi]
  42014f:	jns    0x420167
  420151:	adc    edx,DWORD PTR [edx+0x4]
  420154:	cmp    ch,BYTE PTR [ebx]
  420156:	shr    DWORD PTR [ebp+0xb],1
  420159:	push   eax
  42015a:	mov    dl,0x76
  42015c:	sub    al,0x17
  42015e:	in     al,dx
  42015f:	in     eax,dx
  420160:	mov    ebx,0xa5a5806
  420165:	popa   
  420166:	ret    0x1178
  420169:	fiadd  WORD PTR [edi]
  42016b:	xchg   edx,eax
  42016c:	inc    BYTE PTR [edx+0x5]
  42016f:	xor    esi,ecx
  420171:	and    DWORD PTR [edx+0x50033a3c],ecx
  420177:	mov    cl,0x71
  420179:	fst    QWORD PTR [esi]
  42017b:	daa    
  42017c:	jp     0x420154
  42017e:	aad    0xbc
  420180:	pop    ebx
  420181:	jnp    0x4201ce
  420183:	xchg   esi,eax
  420184:	pushf  
  420185:	adc    esi,eax
  420187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420188:	xor    esp,edi
  42018a:	adc    eax,0x2f465d35
  42018f:	xchg   esp,eax
  420190:	add    al,BYTE PTR [esi]
  420192:	pop    ds
  420193:	and    ch,BYTE PTR [ecx]
  420195:	mov    eax,0x7a3b5445
  42019a:	add    DWORD PTR cs:[ebp-0x76db1f4a],edx
  4201a1:	mov    ?,eax
  4201a3:	clc    
  4201a4:	loop   0x42013b
  4201a6:	test   BYTE PTR [edx],0xee
  4201a9:	jns    0x420226
  4201ab:	inc    esi
  4201ac:	push   edi
  4201ad:	shl    DWORD PTR [ebx+0x15],cl
  4201b0:	fmul   QWORD PTR [ebp+0x7aed2eed]
  4201b6:	fcomp  DWORD PTR [esi]
  4201b8:	jge    0x42018c
  4201ba:	and    ecx,DWORD PTR [edi]
  4201bc:	ja     0x4201de
  4201be:	cmp    BYTE PTR [ebp-0x4c2bb977],cl
  4201c4:	mov    ds:0xa8cf9247,eax
  4201c9:	xor    dl,BYTE PTR [ecx]
  4201cb:	je     0x420183
  4201cd:	nop    DWORD PTR [ebp-0x2cee425d]
  4201d4:	iret   
  4201d5:	pop    ebx
  4201d6:	inc    edi
  4201d7:	sbb    DWORD PTR ds:0x99ab8b23,ebp
  4201dd:	sub    eax,0x9bdea1fc
  4201e2:	imul   ecx,DWORD PTR [eax-0x393b61b5],0xd
  4201e9:	stos   DWORD PTR es:[edi],eax
  4201ea:	rcr    DWORD PTR [ebx+esi*1+0x41],cl
  4201ee:	aaa    
  4201ef:	dec    edi
  4201f0:	(bad)  
  4201f1:	shl    al,cl
  4201f3:	inc    esp
  4201f4:	xchg   BYTE PTR fs:[eax-0x7e702de9],dl
  4201fb:	mov    WORD PTR [edx],ds
  4201fd:	inc    ecx
  4201fe:	pop    ebx
  4201ff:	lock and DWORD PTR [edi],esp
  420202:	jp     0x4201e3
  420204:	cmp    al,0xa7
  420206:	push   ebx
  420207:	add    edx,edi
  420209:	int    0x4b
  42020b:	mov    eax,0xa32a1ba8
  420210:	leave  
  420211:	mov    al,0x4
  420213:	fadd   DWORD PTR es:[edx+edi*4+0x53168acf]
  42021b:	jno    0x4201cc
  42021d:	push   0xdf4cc50a
  420222:	pop    ds
  420223:	in     al,dx
  420224:	(bad)  
  420225:	xor    ebp,DWORD PTR [esi-0x3]
  420228:	(bad)  
  420229:	scas   al,BYTE PTR es:[edi]
  42022a:	lods   al,BYTE PTR ds:[esi]
  42022b:	push   edi
  42022c:	fimul  DWORD PTR [edx+0x3538844b]
  420232:	mov    al,0xe2
  420234:	add    DWORD PTR [eax+0x620e1449],esp
  42023a:	ja     0x42023f
  42023c:	mov    edx,0x6964ec24
  420241:	and    bh,dh
  420243:	push   0x2f9c6451
  420248:	popa   
  420249:	push   esi
  42024a:	clc    
  42024b:	xor    cl,BYTE PTR [ebx]
  42024d:	mov    ebp,0x14ff24e5
  420252:	push   ebp
  420253:	sbb    ch,BYTE PTR [edi]
  420255:	adc    esi,esi
  420257:	mov    dl,0xb
  420259:	jmp    FWORD PTR [ecx-0x25878cbf]
  42025f:	dec    ebx
  420260:	dec    eax
  420261:	ss jle 0x420269
  420264:	dec    esi
  420265:	mov    esi,0x49730bd6
  42026a:	not    dl
  42026c:	fld    TBYTE PTR [edi-0x45]
  42026f:	(bad)  
  420270:	xchg   esi,eax
  420271:	shl    esp,0xdb
  420274:	out    0x4d,al
  420276:	lahf   
  420277:	idiv   DWORD PTR [esi-0x3d]
  42027a:	mov    eax,0x52b2e214
  42027f:	hlt    
  420280:	lock dec esi
  420282:	adc    ebp,edx
  420284:	sbb    eax,0x2646e78c
  420289:	mov    ds:0x8b8c6571,eax
  42028e:	or     esi,DWORD PTR [edi+0x6f9744ed]
  420294:	mov    eax,ds:0xe7668b2
  420299:	daa    
  42029a:	adc    al,0x43
  42029c:	cmc    
  42029d:	(bad)  
  42029e:	add    BYTE PTR [eax],ah
  4202a0:	xchg   edx,eax
  4202a1:	xor    eax,0x99c41e6f
  4202a6:	mov    BYTE PTR [ebx-0x41],ah
  4202a9:	push   ds
  4202aa:	sahf   
  4202ab:	clc    
  4202ac:	sbb    BYTE PTR [ecx+0x123162db],dl
  4202b2:	cmp    eax,0x8fbd0b36
  4202b7:	jmp    0x420306
  4202b9:	ficom  WORD PTR [ebp-0x63]
  4202bc:	clc    
  4202bd:	push   ds
  4202be:	and    al,0xae
  4202c0:	mov    ?,ebx
  4202c2:	or     eax,0x154d9dd0
  4202c7:	outs   dx,BYTE PTR ds:[esi]
  4202c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ca:	mov    eax,0xa4ebde4e
  4202cf:	into   
  4202d0:	adc    DWORD PTR [ebx+0x695d751a],ebx
  4202d6:	aas    
  4202d7:	pop    ds
  4202d8:	sub    ah,BYTE PTR [edx-0xa]
  4202db:	ret    
  4202dc:	sahf   
  4202dd:	aam    0x58
  4202df:	je     0x420300
  4202e1:	daa    
  4202e2:	loopne 0x4202e2
  4202e4:	and    DWORD PTR [ecx],edx
  4202e6:	gs xchg esi,eax
  4202e8:	addr16 xchg esi,eax
  4202ea:	push   ebp
  4202eb:	fwait
  4202ec:	rol    BYTE PTR [esi+0x6e],0x5e
  4202f0:	loopne 0x4202f0
  4202f2:	out    dx,eax
  4202f3:	dec    ebp
  4202f4:	pop    ss
  4202f5:	shl    BYTE PTR [edi-0x6cbceac7],1
  4202fb:	fnstsw WORD PTR [edx]
  4202fd:	pop    edx
  4202fe:	xor    eax,0xfb505663
  420303:	mov    DWORD PTR [ebx-0x62],eax
  420306:	adc    eax,0xfb8441ce
  42030b:	and    ebx,DWORD PTR [esi]
  42030d:	mov    ss,WORD PTR [edi+0x30d17bd5]
  420313:	jmp    0x58902ab4
  420318:	enter  0x9b04,0x3a
  42031c:	jmp    0x42029f
  42031e:	add    DWORD PTR [esi],eax
  420320:	aam    0xf4
  420322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420323:	jmp    0x32fb:0x5c4759c2
  42032a:	sub    BYTE PTR [eax+0x36],al
  42032d:	mov    dh,BYTE PTR [ebx]
  42032f:	mov    bh,0x10
  420331:	into   
  420332:	mov    ds:0xe86edc79,eax
  420337:	adc    eax,0xad5feb9a
  42033c:	cwde   
  42033d:	jmp    0xa47ee3b
  420342:	cmp    eax,0x7bb9c3a8
  420347:	adc    ebp,eax
  420349:	jnp    0x42031b
  42034b:	dec    ecx
  42034c:	daa    
  42034d:	xor    eax,0x4d556695
  420352:	sbb    ecx,ebp
  420354:	cld    
  420355:	cmp    esi,DWORD PTR [ebp+0x56]
  420358:	ficomp DWORD PTR [eax-0x13cdf0ba]
  42035e:	sbb    al,0xf7
  420360:	jmp    0x4a2:0x84284f03
  420367:	(bad)  
  420368:	lahf   
  420369:	cmp    bl,BYTE PTR [ecx+edx*8]
  42036c:	dec    edx
  42036d:	sub    BYTE PTR ds:0x8f434b0d,dh
  420373:	mov    BYTE PTR ds:0xced5af86,dh
  420379:	jl     0x420347
  42037b:	inc    ebp
  42037c:	pop    es
  42037d:	leave  
  42037e:	mov    ecx,0x72975288
  420383:	xor    bh,BYTE PTR [ebx-0x446aebd0]
  420389:	xlat   BYTE PTR ds:[ebx]
  42038a:	or     eax,0xf3a1e8c1
  42038f:	sbb    ecx,DWORD PTR [ecx+0x57]
  420392:	mov    ebp,0x315f26ad
  420397:	(bad)  
  420398:	call   0xafb02f01
  42039d:	sbb    ecx,ecx
  42039f:	lds    ebx,FWORD PTR [ebx-0x1b]
  4203a2:	sub    DWORD PTR [edi-0x64],esp
  4203a5:	cdq    
  4203a6:	or     esi,DWORD PTR [edi+ecx*8]
  4203a9:	inc    edx
  4203aa:	scas   al,BYTE PTR es:[edi]
  4203ab:	(bad)  
  4203ac:	(bad)
  4203b0:	xchg   esi,eax
  4203b1:	scas   eax,DWORD PTR es:[edi]
  4203b2:	adc    DWORD PTR [eax+0x2c00babd],0x6267c02b
  4203bc:	int    0x59
  4203be:	jle    0x420412
  4203c0:	lock pop esi
  4203c2:	rcl    ebp,cl
  4203c4:	adc    bh,0xc9
  4203c7:	xchg   BYTE PTR [esi-0xd],ah
  4203ca:	sbb    bh,BYTE PTR [edi]
  4203cc:	xchg   BYTE PTR [esi+0x4f5b51ed],al
  4203d2:	lahf   
  4203d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d4:	push   0x29
  4203d6:	ja     0x4203ad
  4203d8:	xor    eax,0x42753b0
  4203dd:	xor    al,0xfe
  4203df:	mov    ebx,0x5384487d
  4203e4:	arpl   WORD PTR [edx+edi*4+0x5],dx
  4203e8:	cld    
  4203e9:	pop    edi
  4203ea:	lea    ebp,ds:0x4c00c98d
  4203f0:	adc    DWORD PTR [edi],ebx
  4203f2:	aam    0x5b
  4203f4:	mov    eax,0x4f7ed179
  4203f9:	sti    
  4203fa:	sbb    DWORD PTR [edx],esi
  4203fc:	adc    DWORD PTR [edi-0x44],eax
  4203ff:	(bad)  
  420400:	add    DWORD PTR ss:[ebx+0x5086e6bb],esi
  420407:	mov    al,0x8c
  420409:	int3   
  42040a:	and    DWORD PTR [ebx-0x16],esp
  42040d:	jmp    0xa5d0:0x3d512917
  420414:	dec    ebx
  420415:	xchg   esp,eax
  420416:	mov    eax,ds:0x43959fb8
  42041b:	scas   eax,DWORD PTR es:[edi]
  42041c:	test   al,0x42
  42041e:	jne    0x42040e
  420420:	fsub   QWORD PTR [eax]
  420422:	retf   0x88a7
  420425:	add    eax,0xe735bfa5
  42042a:	std    
  42042b:	or     bh,BYTE PTR [ecx+eax*1-0x2]
  42042f:	mov    eax,DWORD PTR [edi+0x2a677c00]
  420435:	dec    edi
  420436:	dec    esp
  420437:	pop    eax
  420438:	sahf   
  420439:	jmp    0x8b3b093a
  42043e:	push   ecx
  42043f:	add    BYTE PTR [ebp+0x43],bl
  420442:	mov    WORD PTR [edx+0x0],ss
  420445:	imul   ecx,DWORD PTR [ebx],0x34
  420448:	xor    BYTE PTR [ecx-0x59],bh
  42044b:	pusha  
  42044c:	ret    0x9a3
  42044f:	xchg   ecx,eax
  420450:	add    eax,0x84026027
  420455:	cmp    BYTE PTR [edi-0x4b],al
  420458:	sub    BYTE PTR [edi-0x39],0x6b
  42045c:	out    dx,eax
  42045d:	jne    0x4203e7
  42045f:	inc    ecx
  420460:	push   ss
  420461:	aas    
  420462:	jo     0x4204dd
  420464:	cmp    DWORD PTR [eax+0x7f],0x5caf489
  42046b:	mov    esp,0x2913b6ea
  420470:	xchg   esp,eax
  420471:	or     DWORD PTR [edx],eax
  420473:	pushf  
  420474:	pop    ebx
  420475:	retf   
  420476:	mov    DWORD PTR [edx+eiz*4],esp
  420479:	push   0x96a57c52
  42047e:	or     al,0x83
  420480:	jl     0x42042a
  420482:	dec    eax
  420483:	mov    al,0xdc
  420485:	aaa    
  420486:	and    dh,BYTE PTR [ebx]
  420488:	xor    eax,0x91891fbd
  42048d:	jb     0x4204b1
  42048f:	inc    al
  420491:	jmp    0xa4affeac
  420496:	inc    ecx
  420497:	call   ebx
  420499:	retf   
  42049a:	mov    ebp,0xa9314585
  42049f:	arpl   WORD PTR [edi],ax
  4204a1:	hlt    
  4204a2:	pop    ds
  4204a3:	adc    esi,DWORD PTR [ecx+0x7cb898a1]
  4204a9:	and    al,BYTE PTR [esi+0x44]
  4204ac:	hlt    
  4204ad:	add    al,0x8e
  4204af:	and    cl,BYTE PTR [ebp+edx*1+0x4d5eb425]
  4204b6:	cmp    eax,0xf20ee697
  4204bb:	push   0x9497a39c
  4204c0:	das    
  4204c1:	add    BYTE PTR [eax-0x1d],0xed
  4204c5:	dec    edi
  4204c6:	dec    edi
  4204c7:	add    eax,0x34f0c525
  4204cc:	dec    ebx
  4204cd:	sbb    BYTE PTR [ecx+eax*8+0x310927e3],dl
  4204d4:	enter  0x194,0x60
  4204d8:	mov    ebp,0x5aa5808f
  4204dd:	fisttp QWORD PTR [edx+edi*8]
  4204e0:	shl    esi,cl
  4204e2:	jle    0x420511
  4204e4:	adc    eax,0xa3405dda
  4204e9:	xor    esi,ecx
  4204eb:	call   0x70017622
  4204f0:	enter  0xc4e5,0x11
  4204f4:	jbe    0x420493
  4204f6:	shl    DWORD PTR [edi],0x64
  4204f9:	cmp    BYTE PTR fs:[ebx+0x3681ea7],dl
  420500:	dec    ebp
  420501:	test   eax,0xae78bec6
  420506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420507:	mov    ch,0xcd
  420509:	push   esi
  42050a:	pop    edx
  42050b:	mov    eax,0x210a5f72
  420510:	pop    ebp
  420511:	mov    edi,0xa8d3f30
  420516:	cmc    
  420517:	ins    DWORD PTR es:[edi],dx
  420518:	cmp    DWORD PTR [eax+ebx*2],ecx
  42051b:	popf   
  42051c:	dec    esp
  42051d:	fldcw  WORD PTR [ebp-0x5]
  420520:	sar    DWORD PTR [eax-0x256b7523],1
  420526:	jmp    0x4204d7
  420528:	or     esi,ebx
  42052a:	pop    edi
  42052b:	aam    0x2f
  42052d:	cmp    cl,BYTE PTR [edi+0x3b]
  420530:	daa    
  420531:	jg     0x4204e6
  420533:	js     0x4204fd
  420535:	rcl    DWORD PTR [eax],0x5f
  420538:	add    DWORD PTR [ebx-0x64],esp
  42053b:	test   DWORD PTR [esp+ebx*1-0x4f39e6b9],ecx
  420542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420543:	sub    DWORD PTR [edx+0x2504a91a],ecx
  420549:	ins    BYTE PTR es:[edi],dx
  42054a:	mov    ch,0x36
  42054c:	imul   esi,DWORD PTR [eax-0x3d7fd512],0x6729c2ad
  420556:	push   esi
  420557:	or     ch,0x5e
  42055a:	aam    0x56
  42055c:	loopne 0x4205c4
  42055e:	xchg   edi,eax
  42055f:	rol    DWORD PTR [esi-0x62],0x73
  420563:	popf   
  420564:	add    edi,ecx
  420566:	dec    ebp
  420567:	push   ebp
  420568:	into   
  420569:	push   cs
  42056a:	dec    esp
  42056b:	mov    dh,0x25
  42056d:	sbb    DWORD PTR [esp+eiz*2-0xd92a9be],ebx
  420574:	fs (bad) 
  420576:	popa   
  420577:	push   ss
  420578:	in     eax,dx
  420579:	inc    ecx
  42057a:	fsubr  DWORD PTR [edi-0x2bffe5de]
  420580:	imul   esp,eax,0x7f
  420583:	stos   DWORD PTR es:[edi],eax
  420584:	imul   eax,DWORD PTR [esi-0x3c633ee],0x46
  42058b:	shl    DWORD PTR [ebx-0x602e58f9],cl
  420591:	retf   0x8b91
  420594:	push   edi
  420595:	dec    eax
  420596:	adc    bl,ah
  420598:	dec    esi
  420599:	xchg   DWORD PTR [esi+0x54ff1d2],ebx
  42059f:	adc    eax,0x1290f6be
  4205a4:	fidiv  DWORD PTR [eax]
  4205a6:	test   al,0xf6
  4205a8:	cld    
  4205a9:	inc    edx
  4205aa:	dec    ebp
  4205ab:	cmc    
  4205ac:	dec    edx
  4205ad:	mov    bh,0x73
  4205af:	jl     0x4205d5
  4205b1:	xchg   ebp,eax
  4205b2:	enter  0x80cf,0x34
  4205b6:	test   DWORD PTR [eax-0x1e],esi
  4205b9:	cs sbb eax,0x9477438b
  4205bf:	jmp    0x4205bf
  4205c1:	jg     0x420640
  4205c3:	inc    ebx
  4205c4:	mov    dl,0x20
  4205c6:	fsub   st,st(6)
  4205c8:	clc    
  4205c9:	sbb    esp,DWORD PTR [edx-0x67]
  4205cc:	clc    
  4205cd:	inc    ebx
  4205ce:	call   0x549eb7cc
  4205d3:	cmp    edx,DWORD PTR [edi-0x6968c885]
  4205d9:	sahf   
  4205da:	repnz rol BYTE PTR [esi-0x423fb343],1
  4205e1:	push   ds
  4205e2:	(bad)  
  4205e3:	mov    edi,0xcc189c16
  4205e8:	icebp  
  4205e9:	mov    ch,0xd7
  4205eb:	pusha  
  4205ec:	xchg   ecx,eax
  4205ed:	pop    ebx
  4205ee:	rol    eax,cl
  4205f0:	stos   DWORD PTR es:[edi],eax
  4205f1:	mov    ds:0x6919d661,eax
  4205f6:	das    
  4205f7:	enter  0xe6bf,0xc6
  4205fb:	aad    0xb3
  4205fd:	xchg   ecx,eax
  4205fe:	mov    ebx,0x29b57e7f
  420603:	lods   eax,DWORD PTR ds:[esi]
  420604:	jp     0x4205b4
  420606:	aad    0xb3
  420608:	std    
  420609:	pop    edx
  42060a:	mov    BYTE PTR [ebx+ebp*8+0x1d],0x7b
  42060f:	imul   ebx,esi,0x38
  420612:	mov    esp,0xa4e6d7e9
  420617:	fild   QWORD PTR [edi]
  420619:	test   DWORD PTR [ecx],ebx
  42061b:	mov    bh,BYTE PTR [edx+0x6f]
  42061e:	sbb    eax,0x85d548c2
  420623:	retf   
  420624:	in     al,dx
  420625:	mov    dh,0xff
  420627:	push   esi
  420628:	jbe    0x4205c3
  42062a:	(bad)  
  42062b:	(bad)  
  42062c:	mov    dl,0xac
  42062e:	push   edi
  42062f:	aas    
  420630:	(bad)  [edi+eiz*2-0x14099642]
  420637:	add    DWORD PTR [edi*4+0x461d7312],ebx
  42063e:	cdq    
  42063f:	sbb    al,0xb2
  420641:	mov    al,ds:0xf169c547
  420646:	cdq    
  420647:	push   0xabb060e
  42064c:	sub    eax,0x91b3a750
  420651:	dec    ebx
  420652:	add    al,0x58
  420654:	js     0x42061e
  420656:	imul   ecx,DWORD PTR [edi+0x25904d08],0x44e4da55
  420660:	push   ecx
  420661:	adc    BYTE PTR [edx+esi*1],al
  420664:	js     0x420600
  420666:	sbb    BYTE PTR es:[ecx],0xad
  42066a:	mov    DWORD PTR [esi-0x32],0x7c967cc6
  420671:	xchg   ebp,eax
  420672:	(bad)  
  420673:	in     eax,0xf
  420675:	pop    edi
  420676:	xor    al,0xfd
  420678:	jg     0x420658
  42067a:	pop    edi
  42067b:	into   
  42067c:	out    0x9c,al
  42067e:	jecxz  0x420633
  420680:	push   es
  420681:	mov    ch,0xa5
  420683:	outs   dx,BYTE PTR gs:[esi]
  420685:	popa   
  420686:	and    DWORD PTR [ecx],esp
  420688:	cmp    BYTE PTR [ecx-0x22],dh
  42068b:	mov    fs,WORD PTR es:[ebp+0xcdd1169]
  420692:	add    dh,0xe4
  420695:	pusha  
  420696:	mov    ah,0xda
  420698:	push   esp
  420699:	cmp    BYTE PTR [ecx],ah
  42069b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42069c:	outs   dx,BYTE PTR ds:[esi]
  42069d:	dec    ebp
  42069e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42069f:	pop    esp
  4206a0:	loope  0x42067e
  4206a2:	imul   edi,DWORD PTR [esi+edi*8-0x51abc8bb],0xc025530f
  4206ad:	adc    eax,0x46452094
  4206b2:	(bad)  
  4206b3:	jbe    0x4206fb
  4206b5:	push   ss
  4206b6:	enter  0x3bc9,0x80
  4206ba:	mov    ds:0x82d3e637,eax
  4206bf:	dec    ebx
  4206c0:	in     eax,dx
  4206c1:	sub    eax,0x8d31cec6
  4206c6:	retf   
  4206c7:	jnp    0x42068d
  4206c9:	dec    ecx
  4206ca:	gs das 
  4206cc:	push   eax
  4206cd:	sub    eax,0x3eb8fd0e
  4206d2:	mov    bh,BYTE PTR [ebp+eiz*8-0x38]
  4206d6:	or     DWORD PTR [edi-0x11],0xa2d83939
  4206dd:	loop   0x42074f
  4206df:	xchg   ebp,eax
  4206e0:	mov    bl,0xef
  4206e2:	jbe    0x420723
  4206e4:	inc    ebx
  4206e5:	cs inc edx
  4206e7:	jnp    0x42072e
  4206e9:	add    DWORD PTR [ecx-0x7a],edi
  4206ec:	and    dl,al
  4206ee:	adc    cl,bh
  4206f0:	inc    esi
  4206f1:	in     al,dx
  4206f2:	mov    al,ds:0x102227cb
  4206f7:	mov    esi,0x58439be4
  4206fc:	or     ch,BYTE PTR [esp+ecx*2]
  4206ff:	mov    ch,BYTE PTR [esi+edi*1-0x45]
  420703:	ss sub DWORD PTR ss:[edi],ecx
  420707:	jo     0x420692
  420709:	push   edi
  42070a:	das    
  42070b:	daa    
  42070c:	sar    BYTE PTR [ecx+0x13d390ab],0x3b
  420713:	pop    esi
  420714:	push   ss
  420715:	fldenv [ecx+0x477cc340]
  42071b:	int    0xd1
  42071d:	jg     0x42072e
  42071f:	mov    ecx,0x5be5f918
  420724:	cld    
  420725:	add    cl,BYTE PTR [ecx-0x1c]
  420728:	test   DWORD PTR [ebx],edx
  42072a:	xor    eax,0x99449f4b
  42072f:	pop    edi
  420730:	fadd   DWORD PTR [ebx-0x2ef8a413]
  420736:	xchg   esi,eax
  420737:	or     esp,DWORD PTR [ebp+0x66]
  42073a:	pushf  
  42073b:	stos   DWORD PTR es:[edi],eax
  42073c:	inc    edx
  42073d:	(bad)  
  42073e:	push   ss
  42073f:	xor    bh,BYTE PTR [ebp+esi*1-0x21097170]
  420746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420747:	xlat   BYTE PTR ds:[ebx]
  420748:	(bad)  
  420749:	cmp    bl,BYTE PTR [ebx+0x68]
  42074c:	push   esi
  42074d:	and    WORD PTR [eax+0x70ed5eed],0x2686
  420756:	adc    edi,DWORD PTR [eax]
  420758:	(bad)  
  420759:	pop    ecx
  42075a:	inc    eax
  42075b:	push   0x3db54000
  420760:	sti    
  420761:	inc    ecx
  420762:	xor    edi,DWORD PTR [ebp-0x3e]
  420765:	dec    edx
  420766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420767:	push   eax
  420768:	cmp    esp,edi
  42076a:	es jb  0x420710
  42076d:	jo     0x4207af
  42076f:	aas    
  420770:	sti    
  420771:	rol    DWORD PTR [eax+0x2d],0x6a
  420775:	push   ecx
  420776:	lahf   
  420777:	lahf   
  420778:	push   0x2d
  42077a:	add    DWORD PTR [ebx+0x2ef98a4],edi
  420780:	popa   
  420781:	jb     0x4207e8
  420783:	into   
  420784:	daa    
  420785:	add    al,0x78
  420787:	adc    DWORD PTR [eax+0x7d7d17fc],ecx
  42078d:	stos   BYTE PTR es:[edi],al
  42078e:	push   ecx
  42078f:	imul   ecx,DWORD PTR [esi],0x3
  420792:	ror    DWORD PTR [ecx+0x458bec45],0xec
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a71b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a73b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a757
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a727
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a73f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a743
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a747
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a74b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a74f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a73b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a727
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a753
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a75b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a723
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a73b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a727
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a73b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a727
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a73b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a727
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a73b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a727
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a73b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a727
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a73b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a727
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a73b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a727
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a73b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a727
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a73b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a727
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a73b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a727
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a73b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a727
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a73b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a727
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a73b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a727
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a73b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a757
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a727
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a72b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a72f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a733
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	inc    ebx
  421dbb:	push   edx
  421dbc:	mov    eax,0x82b16f29
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx+0x1899fea9],0xffffffd7
  421dcb:	ja     0x421e19
  421dcd:	and    BYTE PTR [edi+0x30],bl
  421dd0:	pop    es
  421dd1:	mov    dl,0xd2
  421dd3:	cmp    dh,cl
  421dd5:	xchg   ebp,eax
  421dd6:	inc    edx
  421dd7:	push   esp
  421dd8:	pop    ss
  421dd9:	outs   dx,DWORD PTR ds:[esi]
  421dda:	ds mov ecx,0x33e3eab
  421de0:	cmp    al,0x27
  421de2:	jnp    0x421dc0
  421de4:	jmp    0x5067:0x57218bc4
  421deb:	cld    
  421dec:	sbb    al,ch
  421dee:	cdq    
  421def:	in     al,dx
  421df0:	repnz xchg edi,eax
  421df2:	xchg   BYTE PTR [ecx-0x15],bh
  421df5:	mov    eax,ds:0x37328d22
  421dfa:	popa   
  421dfb:	and    eax,0x678749d7
  421e00:	xchg   esi,eax
  421e01:	sbb    dh,al
  421e03:	call   0x5941e68c
  421e08:	dec    edi
  421e09:	loopne 0x421df5
  421e0b:	mov    cl,0x49
  421e0d:	(bad)  
  421e0e:	(bad)  
  421e0f:	scas   al,BYTE PTR es:[edi]
  421e10:	add    edi,eax
  421e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e13:	xchg   edi,eax
  421e14:	sbb    al,0xa5
  421e16:	push   cs
  421e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e18:	addr16 test al,0x8f
  421e1b:	(bad)  
  421e1c:	cmp    DWORD PTR [esi-0x7e91e7e5],ebx
  421e22:	sub    eax,0x43d78e5b
  421e27:	sbb    al,0x1c
  421e29:	ret    0x3bc7
  421e2c:	les    ecx,FWORD PTR [ecx-0x5669165a]
  421e32:	rol    dh,0x3e
  421e35:	xchg   BYTE PTR ds:0x973f0439,bh
  421e3b:	xor    bl,al
  421e3d:	cld    
  421e3e:	pop    ds
  421e3f:	sahf   
  421e40:	leave  
  421e41:	or     ch,cl
  421e43:	inc    eax
  421e44:	sub    eax,0x951f5408
  421e49:	fmul   QWORD PTR [ebp-0x28]
  421e4c:	addr16 inc eax
  421e4e:	out    0xe9,eax
  421e50:	cmp    bl,BYTE PTR [ebp+ecx*4+0x4a]
  421e54:	xchg   dl,dl
  421e56:	loopne 0x421e8a
  421e58:	xor    ch,BYTE PTR [edi+0x40be808f]
  421e5e:	xchg   BYTE PTR [eax+0x49],al
  421e61:	mov    ecx,0xb4f1f37b
  421e66:	mov    edi,0x83be0b23
  421e6b:	outs   dx,DWORD PTR ds:[esi]
  421e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e6d:	jp     0x421eaf
  421e6f:	pop    edi
  421e70:	fild   QWORD PTR [edx+0x181a945e]
  421e76:	xor    BYTE PTR [edi-0x6a],ah
  421e79:	das    
  421e7a:	adc    ebp,DWORD PTR [ebx-0x5]
  421e7d:	jb     0x421ef4
  421e7f:	(bad)  
  421e80:	popa   
  421e81:	dec    ebx
  421e82:	repz dec ebx
  421e84:	int    0x60
  421e86:	out    0x98,eax
  421e88:	cmc    
  421e89:	cmp    bl,BYTE PTR [ebx+edx*4+0x5dfef209]
  421e90:	xor    eax,0x7e4c8ae1
  421e95:	pop    esp
  421e96:	mov    ebp,0xe9d73413
  421e9b:	mov    ecx,0x51605809
  421ea0:	daa    
  421ea1:	xchg   ebp,eax
  421ea2:	jno    0x421e87
  421ea4:	pop    ss
  421ea5:	mov    cl,0x8
  421ea7:	mov    esp,0x6eb0ba26
  421eac:	neg    BYTE PTR [eax+0x314c029d]
  421eb2:	mov    dh,0x10
  421eb4:	pop    ss
  421eb5:	fisub  WORD PTR [eax+0x25b9851a]
  421ebb:	inc    edx
  421ebc:	es mov dl,0x7b
  421ebf:	cmc    
  421ec0:	add    al,0x14
  421ec2:	sub    eax,edx
  421ec4:	dec    BYTE PTR [esi]
  421ec6:	mov    bh,BYTE PTR [ecx-0x3f7e23a]
  421ecc:	popa   
  421ecd:	outs   dx,DWORD PTR ds:[esi]
  421ece:	outs   dx,BYTE PTR ds:[esi]
  421ecf:	xor    ebx,DWORD PTR [ebx+ebp*4]
  421ed2:	jmp    0xee77:0x2faf9b1
  421ed9:	out    dx,eax
  421eda:	das    
  421edb:	call   0x1235d63c
  421ee0:	popf   
  421ee1:	mov    eax,0x8dd5e058
  421ee6:	mov    esp,0xf7635206
  421eeb:	or     al,0x2
  421eed:	adc    al,0xdf
  421eef:	xchg   DWORD PTR [edi],esp
  421ef1:	sar    BYTE PTR [edi+esi*1-0x34],cl
  421ef5:	test   DWORD PTR [esi-0x1c],esp
  421ef8:	fdivp  st(0),st
  421efa:	leave  
  421efb:	jl     0x421e86
  421efd:	pop    eax
  421efe:	xor    esp,DWORD PTR [edi-0x65865500]
  421f04:	neg    BYTE PTR [eax+0x88e82f9]
  421f0a:	dec    edi
  421f0b:	jge    0x421f74
  421f0d:	xor    eax,0x3089ca4e
  421f12:	or     eax,0xaf5d601b
  421f17:	adc    BYTE PTR [ecx-0x27],0xe7
  421f1b:	cmp    DWORD PTR [ecx-0x7baa614a],ebx
  421f21:	cmp    BYTE PTR ds:0x1d0c7835,0xf9
  421f28:	es add ecx,edi
  421f2b:	std    
  421f2c:	pop    ss
  421f2d:	add    BYTE PTR [edx+0x14],ah
  421f30:	pushf  
  421f31:	dec    ebp
  421f32:	pop    ds
  421f33:	jmp    0x421f40
  421f35:	add    bh,dl
  421f37:	jmp    0xf3a4:0x723a2231
  421f3e:	and    ah,BYTE PTR [ebp-0x76]
  421f41:	inc    ebp
  421f42:	ds mov ebp,0x1d4a2d18
  421f48:	hlt    
  421f49:	cwde   
  421f4a:	rcl    eax,cl
  421f4c:	sbb    al,0x7d
  421f4e:	inc    ebp
  421f4f:	loope  0x421f90
  421f51:	jae    0x421ef1
  421f53:	mov    eax,?
  421f55:	xor    DWORD PTR [esi+0x62],ebp
  421f58:	mov    DWORD PTR [esi-0x7ce23f6e],edx
  421f5e:	in     eax,0x14
  421f60:	ins    DWORD PTR es:[edi],dx
  421f61:	lods   al,BYTE PTR ds:[esi]
  421f62:	mov    ebp,0x929f70c1
  421f67:	pop    edx
  421f68:	leave  
  421f69:	ficom  DWORD PTR [edx]
  421f6b:	inc    ecx
  421f6c:	shr    DWORD PTR [ebx],0x8f
  421f6f:	pop    esi
  421f70:	test   eax,0x312636c0
  421f75:	push   cs
  421f76:	mov    bh,0x7d
  421f78:	test   cl,al
  421f7a:	ja     0x421f69
  421f7c:	mov    ds,ebx
  421f7e:	cmp    eax,0x6d133f6c
  421f83:	in     eax,0xb2
  421f85:	lods   eax,DWORD PTR ds:[esi]
  421f86:	inc    ecx
  421f87:	call   0xd58d:0x172e296e
  421f8e:	pop    esp
  421f8f:	xor    esi,DWORD PTR [eax]
  421f91:	inc    edi
  421f92:	xchg   dl,al
  421f94:	mov    ecx,0x668355d4
  421f99:	add    al,0x7e
  421f9b:	data16 mov dl,0xf5
  421f9e:	and    eax,0xeaab0985
  421fa3:	pop    es
  421fa4:	sub    al,0x1f
  421fa6:	leave  
  421fa7:	add    al,0x6f
  421fa9:	dec    ecx
  421faa:	mov    es:0x18721b9b,al
  421fb0:	mov    ebx,0x26b6f076
  421fb5:	outs   dx,BYTE PTR ds:[esi]
  421fb6:	inc    BYTE PTR [ebx-0x2e]
  421fb9:	cld    
  421fba:	pop    ss
  421fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fbc:	fisttp DWORD PTR [edx-0x7280f3e8]
  421fc2:	test   DWORD PTR [ecx+edi*2-0x56],0x2d387f4c
  421fca:	lds    ebx,FWORD PTR [esi+0x3f17f654]
  421fd0:	push   edi
  421fd1:	inc    ecx
  421fd2:	inc    edi
  421fd3:	js     0x421f62
  421fd5:	dec    esi
  421fd6:	clc    
  421fd7:	ret    0x7841
  421fda:	add    eax,ecx
  421fdc:	pop    esp
  421fdd:	xrelease mov BYTE PTR ds:[ebp-0x6068fdf1],bl
  421fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe6:	pop    esp
  421fe7:	aad    0xbf
  421fe9:	call   0x338:0xf640723b
  421ff0:	sbb    ebx,DWORD PTR [ecx+0x56]
  421ff3:	jns    0x421ffb
  421ff5:	imul   edi,DWORD PTR [ecx+0x6a],0xffffffbb
  421ff9:	shl    esi,cl
  421ffb:	clc    
  421ffc:	jg     0x421ff5
  421ffe:	xchg   esi,eax
  421fff:	inc    eax
  422000:	xor    DWORD PTR [edx],ebx
  422002:	xor    ah,bl
  422004:	jg     0x421fa0
  422006:	jno    0x421ffc
  422008:	and    bl,BYTE PTR [ebp+0x45]
  42200b:	xchg   ebx,eax
  42200c:	stc    
  42200d:	cmp    eax,0xbe51b8ee
  422012:	in     eax,dx
  422013:	jg     0x421fab
  422015:	test   BYTE PTR [ebp-0x30],bh
  422018:	(bad)  
  422019:	inc    ebx
  42201a:	add    bl,BYTE PTR [ebp+0x42397ede]
  422020:	cwde   
  422021:	jne    0x421ff1
  422023:	jge    0x422059
  422025:	outs   dx,DWORD PTR ds:[esi]
  422026:	daa    
  422027:	fbld   TBYTE PTR [ecx-0x77653196]
  42202e:	in     eax,0xb7
  422030:	clc    
  422031:	out    0x97,al
  422033:	cwde   
  422034:	cs popa 
  422036:	in     eax,0x1a
  422038:	out    dx,eax
  422039:	sbb    eax,DWORD PTR [ebp+0x53]
  42203c:	(bad)  
  42203d:	sti    
  42203e:	jae    0x4220a6
  422040:	lea    ecx,[esi+0xd]
  422043:	sbb    DWORD PTR [ecx],esp
  422045:	jns    0x42205b
  422047:	cmc    
  422048:	mov    bl,0x83
  42204a:	repnz pop es
  42204c:	shl    BYTE PTR [esi+0x4435496],1
  422052:	aaa    
  422053:	loopne 0x421ff4
  422055:	mov    ds:0x487cef9,al
  42205a:	daa    
  42205b:	cmp    cl,BYTE PTR [ebx]
  42205d:	push   0x7f041a0e
  422062:	sbb    BYTE PTR [edi],al
  422064:	daa    
  422065:	cs popf 
  422067:	hlt    
  422068:	jbe    0x42205b
  42206a:	call   0x7068:0xdb56ede5
  422071:	push   es
  422072:	inc    esp
  422073:	popa   
  422074:	mov    dl,bl
  422076:	ret    0xffb7
  422079:	and    BYTE PTR [ebx],ah
  42207b:	outs   dx,BYTE PTR ds:[esi]
  42207c:	lods   al,BYTE PTR ds:[si]
  42207e:	int    0xa
  422080:	mov    eax,0xec17857e
  422085:	inc    edx
  422086:	les    esp,FWORD PTR [ecx-0x51]
  422089:	shl    BYTE PTR [eax-0x3387713a],cl
  42208f:	mov    al,0xd
  422091:	mov    ds:0x72c0ff09,al
  422096:	sbb    bl,BYTE PTR [edi+0x5248f67b]
  42209c:	mov    ebx,0x6f50f027
  4220a1:	(bad)  
  4220a2:	cmp    al,BYTE PTR [edi]
  4220a4:	adc    bl,bl
  4220a6:	and    al,0x57
  4220a8:	icebp  
  4220a9:	adc    edi,DWORD PTR [eax]
  4220ab:	addr16 call 0x64b8:0x363c7e20
  4220b3:	xchg   ecx,eax
  4220b4:	xlat   BYTE PTR ds:[ebx]
  4220b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220b6:	and    eax,0xf14c8417
  4220bb:	pop    DWORD PTR [eax-0x49]
  4220be:	ds nop
  4220c0:	push   ecx
  4220c1:	outs   dx,DWORD PTR ds:[esi]
  4220c2:	dec    ecx
  4220c3:	adc    al,0xe1
  4220c5:	retf   0x5f0e
  4220c8:	rcl    DWORD PTR [ebx+ecx*8-0x63ec34bb],1
  4220cf:	ja     0x42208f
  4220d1:	adc    DWORD PTR [edx],ecx
  4220d3:	pop    edx
  4220d4:	int    0x9f
  4220d6:	jmp    0x5e93f858
  4220db:	das    
  4220dc:	pop    eax
  4220dd:	and    BYTE PTR [edx+0x6c9dc113],dh
  4220e3:	ins    DWORD PTR es:[edi],dx
  4220e4:	ds push 0x625d2b12
  4220ea:	ja     0x422091
  4220ec:	adc    esp,DWORD PTR [ebp-0x4e]
  4220ef:	adc    BYTE PTR [edx+0x7e],ah
  4220f2:	out    0xea,eax
  4220f4:	nop
  4220f5:	ins    DWORD PTR es:[edi],dx
  4220f6:	test   al,0xd2
  4220f8:	jns    0x422160
  4220fa:	mov    esi,0x2a4e8068
  4220ff:	ss mov cl,0x64
  422102:	xchg   esi,eax
  422103:	adc    eax,0x82f70e94
  422108:	and    esp,DWORD PTR [ebp-0x2b]
  42210b:	neg    esp
  42210d:	xor    bl,BYTE PTR [eax]
  42210f:	aaa    
  422110:	sti    
  422111:	inc    edi
  422112:	and    eax,0xd0ff7614
  422117:	inc    ebp
  422118:	mov    eax,ds:0x952b9a62
  42211d:	mov    eax,ds:0x2a032794
  422122:	cwde   
  422123:	sbb    BYTE PTR [esi+0xbb787da],bh
  422129:	scas   al,BYTE PTR es:[edi]
  42212a:	jecxz  0x42212b
  42212c:	adc    DWORD PTR [esi+0x406cd4fb],ebp
  422132:	or     DWORD PTR [edx-0x277e5d30],0xc34fdaf4
  42213c:	mov    ebp,0x905fcd66
  422141:	stos   BYTE PTR es:[edi],al
  422142:	xchg   BYTE PTR [ecx-0x2a0a6f40],al
  422148:	scas   al,BYTE PTR es:[edi]
  422149:	shl    cl,0x78
  42214c:	jno    0x4221b7
  42214e:	jecxz  0x422110
  422150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422151:	push   ebp
  422152:	lea    esi,[ecx-0xe]
  422155:	adc    BYTE PTR [ebx+0x2e],ch
  422158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422159:	aad    0x4e
  42215b:	sub    esp,edx
  42215d:	jecxz  0x4221d5
  42215f:	pop    edi
  422160:	cmp    DWORD PTR [edx-0x80],esi
  422163:	adc    bl,BYTE PTR [esp+edx*8+0x5245d0a1]
  42216a:	push   es
  42216b:	test   al,0xfe
  42216d:	scas   al,BYTE PTR es:[edi]
  42216e:	and    al,0xaa
  422170:	sti    
  422171:	push   0xfcdf9daa
  422176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422178:	in     eax,0xd9
  42217a:	lods   eax,DWORD PTR ds:[esi]
  42217b:	add    DWORD PTR [ecx+edx*2],0xffffffc1
  42217f:	mov    ebp,0x6ac22387
  422184:	lods   al,BYTE PTR ds:[esi]
  422185:	frstor [edx-0xb]
  422188:	fisubr DWORD PTR [ecx+ebp*1]
  42218b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42218c:	inc    BYTE PTR [ebx+0x2f1f0c4]
  422192:	daa    
  422193:	inc    edx
  422194:	repz mov dl,0x44
  422197:	das    
  422198:	xchg   BYTE PTR [ecx+0x73418a10],dh
  42219e:	mov    al,0xe2
  4221a0:	jno    0x4221ce
  4221a2:	mov    WORD PTR [ebx],ss
  4221a4:	fwait
  4221a5:	mov    ds:0x1a6c914f,al
  4221aa:	fsubr  DWORD PTR [esi-0x1e]
  4221ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ae:	xlat   BYTE PTR ds:[ebx]
  4221af:	sub    al,0x13
  4221b1:	adc    al,0xfa
  4221b3:	cmp    cl,BYTE PTR [eax-0x69]
  4221b6:	mov    esp,0xcf58dd90
  4221bb:	ja     0x4221d9
  4221bd:	fisubr WORD PTR [edi]
  4221bf:	dec    edx
  4221c0:	mov    esi,0x2ebb54f8
  4221c5:	out    dx,al
  4221c6:	lahf   
  4221c7:	out    dx,al
  4221c8:	lock test dl,bh
  4221cb:	outs   dx,DWORD PTR ds:[esi]
  4221cc:	push   esp
  4221cd:	push   edx
  4221ce:	stc    
  4221cf:	add    al,BYTE PTR [ecx]
  4221d1:	rcl    eax,0x87
  4221d4:	ins    BYTE PTR es:[edi],dx
  4221d5:	fimul  DWORD PTR [ebx+0x5180c466]
  4221db:	dec    esi
  4221dc:	jge    0x4221f4
  4221de:	lods   eax,DWORD PTR ds:[esi]
  4221df:	jecxz  0x422220
  4221e1:	lock call 0x2326:0x69a62f3b
  4221e9:	jmp    0x7f4569d8
  4221ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ef:	add    BYTE PTR [ecx],dl
  4221f1:	das    
  4221f2:	(bad)  
  4221f3:	pop    edi
  4221f4:	xlat   BYTE PTR ds:[ebx]
  4221f5:	pop    ecx
  4221f6:	mov    ah,0x2
  4221f8:	int3   
  4221f9:	push   0xa3c85b89
  4221fe:	push   esp
  4221ff:	and    al,0xcf
  422201:	ins    BYTE PTR es:[edi],dx
  422202:	xchg   al,dl
  422204:	std    
  422205:	pusha  
  422206:	xchg   ebx,eax
  422207:	sbb    BYTE PTR [edx-0x68a13af],dl
  42220d:	dec    ebp
  42220e:	add    eax,0xe7b03db6
  422213:	dec    ebx
  422214:	out    dx,al
  422215:	nop
  422216:	fcomp  DWORD PTR fs:[ebp-0x6a]
  42221a:	cs cld 
  42221c:	adc    BYTE PTR [ebx-0x3e7de120],bh
  422222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422223:	out    dx,al
  422224:	sub    DWORD PTR [ecx-0x6edc02c1],eax
  42222a:	pop    edi
  42222b:	aas    
  42222c:	adc    eax,0x63de3bf1
  422231:	fnstcw WORD PTR [esi+0x7d]
  422234:	mov    bh,0x61
  422236:	jno    0x422283
  422238:	dec    edi
  422239:	sbb    al,0x5f
  42223b:	adc    al,0x80
  42223d:	popa   
  42223e:	jbe    0x4221c1
  422240:	inc    edi
  422241:	adc    DWORD PTR [ecx+0xa2eaadc],ebx
  422247:	leave  
  422248:	cmp    ah,BYTE PTR [ebx+0x689a29de]
  42224e:	mov    esi,0xb654c65a
  422253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422254:	or     DWORD PTR [ebp-0x60b70ea7],edx
  42225a:	(bad)  
  42225b:	repz sbb esp,0x63e7f67f
  422262:	mov    eax,0x717c886f
  422267:	adc    eax,0xba470f4
  42226c:	mov    ecx,0x91996624
  422271:	jp     0x4222a5
  422273:	pop    eax
  422274:	dec    ebx
  422275:	cmc    
  422276:	mov    dl,0xd9
  422278:	jae    0x4221fe
  42227a:	rol    BYTE PTR [edx+eiz*2+0x70],0x1b
  42227f:	scas   al,BYTE PTR es:[edi]
  422280:	dec    edi
  422281:	clc    
  422282:	jl     0x4222a6
  422284:	adc    bl,BYTE PTR [ecx]
  422286:	out    dx,eax
  422287:	sbb    cl,BYTE PTR [ecx+eiz*1+0xcadc98a]
  42228e:	inc    esp
  42228f:	out    dx,al
  422290:	in     eax,0x19
  422292:	ret    0x9fb3
  422295:	out    0xa2,eax
  422297:	mov    ebx,0x5f49e4a3
  42229c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42229d:	adc    edx,edi
  42229f:	add    edx,DWORD PTR [edx]
  4222a1:	xor    BYTE PTR [ecx-0x2d],bh
  4222a4:	popf   
  4222a5:	xor    DWORD PTR ds:0x1baf4b51,esi
  4222ab:	mov    ebx,DWORD PTR [ebp+esi*8-0x71]
  4222af:	call   0xfb0eb47d
  4222b4:	pushf  
  4222b5:	stc    
  4222b6:	inc    BYTE PTR [eax]
  4222b8:	pop    esi
  4222b9:	mov    dl,0xc
  4222bb:	dec    edi
  4222bc:	sbb    BYTE PTR [bx+di],0x60
  4222c0:	(bad)  
  4222c1:	in     eax,dx
  4222c2:	xor    al,0x42
  4222c4:	add    ebp,DWORD PTR [esi]
  4222c6:	imul   ecx,DWORD PTR [esi+0x25a9b55f],0xffffff95
  4222cd:	jno    0x4222a0
  4222cf:	std    
  4222d0:	cmp    DWORD PTR [esi-0x4b447d5a],edi
  4222d6:	xchg   esp,eax
  4222d7:	call   0xd353:0x5e494fc7
  4222de:	fnclex 
  4222e0:	jmp    0x6b6a0a96
  4222e5:	popa   
  4222e6:	xor    edx,esp
  4222e8:	aam    0xb1
  4222ea:	jno    0x42235f
  4222ec:	jecxz  0x422303
  4222ee:	xchg   esi,eax
  4222ef:	sub    ch,BYTE PTR [esi+0xc]
  4222f2:	gs hlt 
  4222f4:	mov    ecx,0xa838690
  4222f9:	mov    cl,0xc3
  4222fb:	jne    0x4222ad
  4222fd:	xor    al,0xff
  4222ff:	sbb    ah,BYTE PTR [ebx+0x527548a5]
  422305:	scas   eax,DWORD PTR es:[edi]
  422306:	ins    BYTE PTR es:[edi],dx
  422307:	or     DWORD PTR [eax-0x44],eax
  42230a:	push   ebx
  42230b:	adc    ebx,esi
  42230d:	aad    0x4d
  42230f:	xlat   BYTE PTR ds:[ebx]
  422310:	mov    edi,0x995b4dfb
  422315:	jae    0x42237d
  422317:	mov    cl,0x29
  422319:	xchg   esi,eax
  42231a:	bound  edx,QWORD PTR ds:0x690a6bf6
  422320:	and    DWORD PTR [ecx-0x4184c3da],ebp
  422326:	jae    0x422373
  422328:	xlat   BYTE PTR ds:[ebx]
  422329:	cmp    eax,0x9ba02455
  42232e:	mov    ebp,DWORD PTR [esp+ebp*1]
  422331:	xor    BYTE PTR [eax],0x76
  422334:	mov    bh,0x2f
  422336:	imul   BYTE PTR [edx+ebp*1-0x7f]
  42233a:	cld    
  42233b:	popf   
  42233c:	lods   al,BYTE PTR ds:[esi]
  42233d:	mov    BYTE PTR [esi+0x52],cl
  422340:	(bad)  
  422341:	stc    
  422342:	sysexit 
  422344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422345:	jb     0x42230e
  422347:	push   eax
  422348:	fadd   QWORD PTR [eax+0x76a2e2eb]
  42234e:	push   0xfc4ac9d9
  422353:	mov    DWORD PTR [ebp-0x14],edi
  422356:	cmp    al,0xb
  422358:	fimul  DWORD PTR [ebx+0x45]
  42235b:	(bad)  
  42235c:	sub    DWORD PTR [edi],ebp
  42235e:	or     eax,ebp
  422360:	jge    0x422332
  422362:	(bad)  
  422363:	popf   
  422364:	adc    eax,0xc76c3d08
  422369:	scas   eax,DWORD PTR es:[edi]
  42236a:	lea    eax,[ecx-0x3]
  42236d:	xor    eax,0xd8c648bc
  422372:	xlat   BYTE PTR ds:[ebx]
  422373:	into   
  422374:	mov    DWORD PTR [edi+0x1e],ecx
  422377:	xchg   ecx,eax
  422378:	jmp    0x7055:0xa90c985c
  42237f:	fsubr  st,st(3)
  422381:	push   eax
  422382:	cmp    eax,0xc1ba7614
  422387:	xlat   BYTE PTR ds:[ebx]
  422388:	or     DWORD PTR ss:[eax],0x1674475e
  42238f:	jae    0x4223e6
  422391:	push   0xe1fd503f
  422396:	data16 (bad) 
  422398:	mov    bl,0x64
  42239a:	sbb    DWORD PTR [eax-0x5],ebp
  42239d:	in     eax,dx
  42239e:	adc    edx,DWORD PTR [esp+ebx*1-0x3d9a0ab4]
  4223a5:	aam    0x57
  4223a7:	leave  
  4223a8:	inc    eax
  4223a9:	push   ebp
  4223aa:	mov    ah,BYTE PTR es:[ebx-0x3e]
  4223ae:	dec    eax
  4223af:	arpl   WORD PTR [eax-0x52],dx
  4223b2:	lods   al,BYTE PTR ds:[esi]
  4223b3:	outs   dx,DWORD PTR ds:[esi]
  4223b4:	iret   
  4223b5:	addr16 mov al,ds:0x9646
  4223b9:	push   eax
  4223ba:	scas   eax,DWORD PTR es:[edi]
  4223bb:	repz addr16 pop esp
  4223be:	loop   0x422407
  4223c0:	pop    edi
  4223c1:	adc    al,BYTE PTR [eax-0x2f]
  4223c4:	shr    BYTE PTR [edx],cl
  4223c6:	js     0x4223c7
  4223c8:	test   BYTE PTR [ebx-0x55],cl
  4223cb:	pop    ds
  4223cc:	mov    ch,0xe
  4223ce:	add    BYTE PTR [eax+0x15],al
  4223d1:	test   esi,ecx
  4223d3:	loop   0x422356
  4223d5:	jmp    0x42241c
  4223d7:	ret    
  4223d8:	mov    WORD PTR [ecx+ecx*1],?
  4223db:	nop
  4223dc:	int    0xe
  4223de:	inc    esi
  4223df:	sub    eax,0xe5e86f5
  4223e4:	out    0x79,al
  4223e6:	add    eax,0x1ef4518f
  4223eb:	xchg   esp,eax
  4223ec:	adc    ch,ch
  4223ee:	sbb    eax,0x25d4c9d3
  4223f3:	imul   edi,DWORD PTR [ecx-0x47ea305b],0xffffffeb
  4223fa:	loope  0x422474
  4223fc:	add    al,0x15
  4223fe:	mov    cl,0x9e
  422400:	push   ebp
  422401:	retf   0xb024
  422404:	push   ss
  422405:	mov    ch,0x1f
  422407:	and    esi,edi
  422409:	fs test al,0x3c
  42240c:	push   ds
  42240d:	imul   BYTE PTR [ecx]
  42240f:	jge    0x422413
  422411:	popa   
  422412:	int    0x95
  422414:	repz adc BYTE PTR [eax+0x6810bee8],bh
  42241b:	add    eax,0x3bb5b0d0
  422420:	fisttp QWORD PTR [edx-0x63e1e38c]
  422426:	mov    ss:0x77e679cf,eax
  42242c:	and    BYTE PTR [esi-0x762419b9],cl
  422432:	iret   
  422433:	adc    dl,cl
  422435:	xor    bp,di
  422438:	pusha  
  422439:	jbe    0x422440
  42243b:	cdq    
  42243c:	in     al,0x4
  42243e:	mov    bl,BYTE PTR [edi]
  422440:	add    edi,DWORD PTR [eax-0x72913b38]
  422446:	pusha  
  422447:	push   eax
  422448:	cmp    DWORD PTR [ebp+0x3bc5fcf2],ebp
  42244e:	add    ecx,DWORD PTR [edx+0x331d5a0f]
  422454:	sub    ah,bl
  422456:	test   BYTE PTR [ebx+0x4f7d3905],al
  42245c:	lds    ecx,FWORD PTR [esi]
  42245e:	call   0x5733fce7
  422463:	push   ds
  422464:	dec    ecx
  422465:	inc    ecx
  422466:	out    0xb7,eax
  422468:	iret   
  422469:	stc    
  42246a:	aad    0xa3
  42246c:	(bad)  
  42246d:	aaa    
  42246e:	lods   al,BYTE PTR ds:[esi]
  42246f:	and    ah,BYTE PTR ds:0x63df43c1
  422475:	pop    ebx
  422476:	(bad)  
  422477:	cmp    esi,DWORD PTR [edx-0x80]
  42247a:	pop    edi
  42247b:	fisub  WORD PTR [edx+0x2ca03cb9]
  422481:	mov    ebx,0xe01cbb80
  422486:	neg    BYTE PTR ss:[esp+ecx*8]
  42248a:	dec    ecx
  42248b:	in     al,0x67
  42248d:	pop    eax
  42248e:	sub    eax,0x58f52b3c
  422493:	imul   edi,DWORD PTR [ecx*4-0x639cff09],0x41
  42249b:	add    ch,BYTE PTR [edi]
  42249d:	push   ss
  42249e:	ins    DWORD PTR es:[edi],dx
  42249f:	bound  esi,QWORD PTR [ebx+0x30]
  4224a2:	jmp    0x42243a
  4224a4:	jbe    0x4224ef
  4224a6:	xchg   edi,eax
  4224a7:	jbe    0x4224d3
  4224a9:	xor    eax,0x3455506
  4224ae:	lahf   
  4224af:	stc    
  4224b0:	fistp  WORD PTR [ebx]
  4224b2:	repnz xchg esi,eax
  4224b4:	dec    esp
  4224b5:	xchg   edi,eax
  4224b6:	push   edx
  4224b7:	mov    esp,0x3b004fea
  4224bc:	int    0xc7
  4224be:	jb     0x422485
  4224c0:	iret   
  4224c1:	cmp    bh,BYTE PTR [eax-0x4]
  4224c4:	ret    0x2f97
  4224c7:	or     al,0x4e
  4224c9:	mov    ebp,eax
  4224cb:	cmp    eax,0xd4280dd7
  4224d0:	or     eax,0xc1209e7f
  4224d5:	mov    eax,0x33b9003a
  4224da:	bound  esp,QWORD PTR [ebx+0x425f9f46]
  4224e0:	pop    ss
  4224e1:	or     BYTE PTR [esi+0x21aa1beb],dh
  4224e7:	test   al,0x60
  4224e9:	jg     0x4224e4
  4224eb:	into   
  4224ec:	sbb    eax,0xf2e21e60
  4224f1:	mov    cl,0x95
  4224f3:	mov    cl,BYTE PTR [esi+0x48]
  4224f6:	mov    DWORD PTR [ecx+eax*2-0x49],edi
  4224fa:	in     al,dx
  4224fb:	sar    DWORD PTR [ebx-0x60],0xde
  4224ff:	fild   WORD PTR [ecx+0x0]
  422502:	jbe    0x42249a
  422504:	jge    0x422492
  422506:	mov    esi,0x76148504
  42250b:	and    al,BYTE PTR [ebx]
  42250d:	and    DWORD PTR [edx-0x6e],ebx
  422510:	ret    0xbe07
  422513:	inc    eax
  422514:	push   ecx
  422515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422516:	sbb    eax,0x5eb618f9
  42251b:	mov    dl,0xf0
  42251d:	mov    cl,0x1e
  42251f:	add    BYTE PTR [eax],bl
  422521:	pop    ds
  422522:	jg     0x422518
  422524:	pop    ebp
  422526:	xchg   esp,eax
  422527:	xchg   esi,eax
  422528:	out    0xc,eax
  42252a:	dec    ecx
  42252b:	inc    ebx
  42252c:	jne    0x42251b
  42252e:	pop    ss
  42252f:	sub    ebp,DWORD PTR [eax-0x21]
  422532:	addr16 pop eax
  422534:	push   ebp
  422535:	call   0xf7c8dec9
  42253a:	push   ebx
  42253b:	call   0x8c57:0xce7fc878
  422542:	xchg   ebp,eax
  422543:	and    DWORD PTR [ebp+ebx*4+0x3a],0x573f3e6c
  42254b:	sahf   
  42254c:	das    
  42254d:	shl    BYTE PTR [ebx],cl
  42254f:	adc    ch,BYTE PTR [eax-0x1590c7e9]
  422555:	xor    eax,0xd3bbb0ec
  42255a:	push   es
  42255b:	ss dec ebx
  42255d:	maskmovq mm7,(bad)
  42255e:	idiv   DWORD PTR [edi-0x61ba7bdc]
  422564:	sbb    al,0xef
  422566:	and    cl,BYTE PTR [ecx*8-0x45f35679]
  42256d:	fstp   DWORD PTR [ebp-0x54]
  422570:	shr    DWORD PTR [esp+edi*8-0x7adae17d],cl
  422577:	and    al,0x1d
  422579:	jl     0x422584
  42257b:	mov    bh,0xa6
  42257d:	mov    ah,0xc6
  42257f:	out    dx,al
  422580:	xchg   edx,eax
  422581:	popf   
  422582:	fadd   QWORD PTR [eax]
  422584:	xor    DWORD PTR [esi-0x34],ebx
  422587:	xchg   edi,eax
  422588:	sbb    al,0x40
  42258a:	jge    0x422538
  42258c:	pop    ebp
  42258d:	mov    esi,0xc8c4ecb7
  422592:	inc    edi
  422593:	arpl   WORD PTR [esi-0x27],cx
  422596:	sub    al,0xeb
  422598:	out    dx,al
  422599:	outs   dx,BYTE PTR ds:[esi]
  42259a:	cmc    
  42259b:	sub    dl,BYTE PTR [ebx+0x4d]
  42259e:	shr    BYTE PTR [esi+0x14],1
  4225a1:	jno    0x422582
  4225a3:	cdq    
  4225a4:	push   ebp
  4225a5:	and    eax,0xe0d0a3a0
  4225aa:	arpl   WORD PTR [esi+edi*8-0x36],ax
  4225ae:	in     eax,dx
  4225af:	cdq    
  4225b0:	sub    bh,BYTE PTR [edi]
  4225b2:	adc    DWORD PTR [ecx],ebp
  4225b4:	mov    dh,BYTE PTR [ecx+edx*4+0x266b9043]
  4225bb:	scas   al,BYTE PTR es:[edi]
  4225bc:	stos   DWORD PTR es:[edi],eax
  4225bd:	jb     0x422630
  4225bf:	ret    
  4225c0:	mov    cl,0x5e
  4225c2:	(bad)  
  4225c6:	xchg   ebp,eax
  4225c7:	xor    cl,al
  4225c9:	lods   al,BYTE PTR ds:[esi]
  4225ca:	lods   al,BYTE PTR ds:[esi]
  4225cb:	push   ecx
  4225cc:	dec    edx
  4225cd:	add    BYTE PTR [eax-0x31],ch
  4225d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d1:	sbb    eax,0xb0a91a23
  4225d6:	neg    al
  4225d8:	das    
  4225d9:	mov    al,0x45
  4225db:	stos   BYTE PTR es:[edi],al
  4225dc:	jg     0x4225ee
  4225de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225df:	jns    0x42258a
  4225e1:	loopne 0x4225f8
  4225e3:	sub    esi,ecx
  4225e5:	push   es
  4225e6:	(bad)  
  4225e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225e9:	add    DWORD PTR [edi+ebx*8],eax
  4225ec:	not    DWORD PTR [edx]
  4225ee:	xor    al,0x44
  4225f0:	popf   
  4225f1:	push   0x52da9ea1
  4225f6:	xchg   BYTE PTR [eax],bl
  4225f8:	sbb    BYTE PTR [edi+eax*2-0x5b],0x86
  4225fd:	xchg   esp,eax
  4225fe:	sbb    eax,0x3ddfa99b
  422603:	popf   
  422604:	ja     0x422594
  422606:	mov    WORD PTR ds:0x35cfb633,gs
  42260c:	mov    WORD PTR [ecx],ds
  42260e:	pushf  
  42260f:	lods   al,BYTE PTR ds:[esi]
  422610:	xor    eax,0x69e4c4cb
  422615:	ins    DWORD PTR es:[edi],dx
  422616:	mov    WORD PTR [edi-0x2c],cs
  422619:	jnp    0x4225d7
  42261b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261c:	das    
  42261d:	add    eax,0x116a5e19
  422622:	inc    esp
  422623:	xor    edi,DWORD PTR [ebp-0x62b66b38]
  422629:	or     BYTE PTR [eax-0x63],0x95
  42262d:	sar    BYTE PTR [ebx-0x5a],1
  422630:	call   0xe340:0xd78e03ad
  422637:	in     al,dx
  422638:	mov    ah,0xcf
  42263a:	mov    esi,0x25faeb1
  42263f:	inc    ebp
  422640:	xchg   ebp,eax
  422641:	ret    
  422642:	out    dx,eax
  422643:	cwde   
  422644:	cmp    ecx,ecx
  422646:	jecxz  0x422666
  422648:	dec    esi
  422649:	cmp    eax,0x41a79fb6
  42264e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42264f:	imul   esi,DWORD PTR [edi-0x7a],0xe439bb38
  422656:	jns    0x422612
  422658:	call   0xa254:0xdd641ba3
  42265f:	pop    ecx
  422660:	jnp    0x4225fe
  422662:	mov    eax,ds:0x236e95d4
  422667:	test   DWORD PTR ds:0xf69bc63,edi
  42266d:	ffreep st(6)
  42266f:	jmp    0x42268e
  422671:	push   0x81aafcc6
  422676:	into   
  422677:	xchg   esp,eax
  422678:	jmp    0x86c844d9
  42267d:	jb     0x4226f5
  42267f:	mov    cl,0xf0
  422681:	mov    dl,0x7e
  422683:	xor    BYTE PTR [ebp+eax*8-0x80],dl
  422687:	xlat   BYTE PTR ds:[ebx]
  422688:	or     bh,ah
  42268a:	mov    dh,0x72
  42268c:	sub    BYTE PTR [edx+eiz*1],ah
  42268f:	aas    
  422690:	retf   
  422691:	or     al,0x53
  422693:	mov    eax,ds:0xc0b5f1a8
  422698:	fsubr  QWORD PTR [ebx+eiz*2+0x77]
  42269c:	mov    eax,ds:0xccd9ab4c
  4226a1:	je     0x42263d
  4226a3:	int3   
  4226a4:	sbb    edi,DWORD PTR [ebp-0x34]
  4226a7:	sub    BYTE PTR [ebx-0x5fa3799a],dh
  4226ad:	js     0x422636
  4226af:	xor    cl,BYTE PTR [ecx+0x63]
  4226b2:	inc    ebp
  4226b3:	dec    esp
  4226b4:	push   esp
  4226b5:	out    dx,eax
  4226b6:	sub    cl,bh
  4226b8:	mov    bl,0xd
  4226ba:	inc    edi
  4226bb:	imul   edi,DWORD PTR ds:0x74dfc209,0x56c48116
  4226c5:	cli    
  4226c6:	daa    
  4226c7:	cld    
  4226c8:	js     0x4226cd
  4226ca:	mov    eax,0x978085d9
  4226cf:	pop    eax
  4226d0:	scas   eax,DWORD PTR es:[edi]
  4226d1:	lock sub bl,BYTE PTR [ecx-0x48f60fda]
  4226d8:	imul   ecx,DWORD PTR [ebp+edx*1-0x29afa17],0x16
  4226e0:	lock mov bh,0xba
  4226e3:	jbe    0x4226f1
  4226e5:	xchg   edi,eax
  4226e6:	mov    edi,0x40dc2ded
  4226eb:	popf   
  4226ec:	stos   BYTE PTR es:[edi],al
  4226ed:	or     eax,0x1aa1b793
  4226f2:	xor    eax,0xef131fe0
  4226f7:	add    BYTE PTR [ecx],dh
  4226f9:	mov    DWORD PTR [eax+0x45],0x9ef9326f
  422700:	jnp    0x4226c3
  422702:	pop    esi
  422703:	hlt    
  422704:	cdq    
  422705:	(bad)  
  422706:	retf   
  422707:	cs and eax,0xbbc92e1c
  42270d:	packssdw mm6,QWORD PTR [ecx-0x3f682a68]
  422714:	fmulp  st(3),st
  422716:	adc    esi,DWORD PTR [ebp-0x14855359]
  42271c:	clc    
  42271d:	cmc    
  42271e:	mov    DWORD PTR ds:0x1e18ac57,esp
  422724:	test   DWORD PTR [eax-0x19],0x8fe6d6ab
  42272b:	jmp    0x1cf5:0x5ba5d0ab
  422732:	dec    ebp
  422733:	and    ebp,DWORD PTR [eax+ebx*1-0x5a]
  422737:	in     al,0xd9
  422739:	stos   BYTE PTR es:[edi],al
  42273a:	and    DWORD PTR [ebx+ebx*8+0x677a8eec],eax
  422741:	sar    BYTE PTR [ebp-0x6b],0xb7
  422745:	sbb    eax,0xbd63e15
  42274a:	fs pop edi
  42274c:	(bad)  
  42274d:	fstp   DWORD PTR [ebp-0x24b18f61]
  422753:	mov    esi,0x90c0eae7
  422758:	or     BYTE PTR [eax],ah
  42275a:	xlat   BYTE PTR ds:[ebx]
  42275b:	in     al,0xe8
  42275d:	inc    edi
  42275e:	push   ecx
  42275f:	sub    edx,DWORD PTR [esi+0x54]
  422762:	fisubr DWORD PTR [edx+0x11]
  422765:	jge    0x422747
  422767:	cmp    ecx,eax
  422769:	and    al,0x40
  42276b:	jle    0x4226f2
  42276d:	fmul   st(6),st
  42276f:	bound  esi,QWORD PTR [edi]
  422771:	adc    DWORD PTR [esi+esi*2],esi
  422774:	aas    
  422775:	enter  0x2219,0xdc
  422779:	or     ebp,DWORD PTR [edi+edx*4-0x37101185]
  422780:	push   ds
  422781:	dec    ebp
  422782:	adc    BYTE PTR [esi-0x217ea32a],bh
  422788:	and    BYTE PTR [ecx+0x7131fd99],al
  42278e:	stos   BYTE PTR es:[edi],al
  42278f:	sbb    al,0xa4
  422791:	xlat   BYTE PTR ds:[ebx]
  422792:	xor    esi,esp
  422794:	sar    DWORD PTR [eax+ebx*4],0x7c
  422798:	bound  esp,QWORD PTR [esi]
  42279a:	vrcpss xmm1,xmm6,xmm5
  42279e:	xor    edx,esp
  4227a0:	and    DWORD PTR [ecx],esp
  4227a2:	push   ebx
  4227a3:	cmp    dl,BYTE PTR [edx]
  4227a5:	out    0xa5,eax
  4227a7:	fmul   DWORD PTR [edi]
  4227a9:	xor    bh,BYTE PTR [ecx+edx*8+0x627626f9]
  4227b0:	retf   0x71f3
  4227b3:	loopne 0x4227cc
  4227b5:	jmp    DWORD PTR [edi+0x7e]
  4227b8:	mov    ds:0xc14a7979,eax
  4227bd:	mov    ebp,0x1935e325
  4227c2:	sbb    al,0x87
  4227c4:	xchg   BYTE PTR [edx-0x1b],ah
  4227c7:	fnstsw WORD PTR [ebx-0x1e]
  4227ca:	icebp  
  4227cb:	and    al,0x1e
  4227cd:	push   ss
  4227ce:	lea    ecx,[esi+0x4]
  4227d1:	sub    eax,0xd49823f2
  4227d6:	scas   eax,DWORD PTR es:[edi]
  4227d7:	stos   DWORD PTR es:[edi],eax
  4227d8:	aad    0x49
  4227da:	xchg   ecx,eax
  4227db:	xor    eax,0x59b9e90e
  4227e0:	sub    DWORD PTR [eax-0x47],edx
  4227e3:	stc    
  4227e4:	ins    BYTE PTR es:[edi],dx
  4227e5:	mov    al,ds:0xf575a4b7
  4227ea:	fdiv   DWORD PTR [edx-0x29]
  4227ed:	js     0x422813
  4227ef:	rcr    BYTE PTR [eax+0x7b6e2d05],1
  4227f5:	xor    edi,edi
  4227f7:	pop    esp
  4227f8:	sar    bl,1
  4227fa:	cmp    bh,dl
  4227fc:	push   es
  4227fd:	imul   edx,DWORD PTR [ebx+0x72],0x426058b2
  422804:	mov    bl,0x59
  422806:	jmp    0xdaef:0x9950888a
  42280d:	sbb    BYTE PTR cs:[esi-0x22],cl
  422811:	and    ecx,DWORD PTR ds:0x9d88da22
  422817:	(bad)  
  422818:	fdivr  st,st(0)
  42281a:	sti    
  42281b:	(bad)  
  42281d:	push   es
  42281e:	inc    ebp
  42281f:	dec    eax
  422820:	adc    DWORD PTR [edx-0x37665fa2],edx
  422826:	push   ss
  422827:	clc    
  422828:	xchg   esp,eax
  422829:	xchg   ecx,eax
  42282a:	mov    DWORD PTR [ecx-0x5e891fed],0x5e18e568
  422834:	inc    esp
  422835:	out    0x0,al
  422837:	jmp    0x986d:0x8b81a3d2
  42283e:	repnz adc BYTE PTR [ecx+0x54],ch
  422842:	adc    DWORD PTR [esi],esi
  422844:	loop   0x42286e
  422846:	mov    bh,0x17
  422848:	(bad)  
  42284a:	fidiv  DWORD PTR [ebx+0x33e0c110]
  422850:	lods   al,BYTE PTR ds:[esi]
  422851:	fdivr  QWORD PTR [ebx+ecx*2-0x16]
  422855:	and    al,0xa9
  422857:	sti    
  422858:	loope  0x422843
  42285a:	in     eax,dx
  42285b:	loopne 0x4227e8
  42285d:	push   esi
  42285e:	cwde   
  42285f:	stc    
  422860:	call   0x75c96de3
  422865:	dec    esi
  422866:	pop    ebp
  422867:	adc    ebx,edi
  422869:	fisttp DWORD PTR [ecx+0x6f]
  42286c:	jl     0x4228c8
  42286e:	mov    eax,0x96186243
  422873:	cmc    
  422874:	cs mov edi,0xd4f89624
  42287a:	jae    0x42285c
  42287c:	shl    BYTE PTR [eax-0x44d86e74],cl
  422882:	shr    DWORD PTR [esi],cl
  422884:	rcr    DWORD PTR [ecx+0x2a3277bd],1
  42288a:	xor    bh,ah
  42288c:	or     BYTE PTR [edi+0x10a693c8],ch
  422892:	mov    eax,DWORD PTR [ebp+0x11]
  422895:	mov    DWORD PTR [ecx+0x27],edi
  422898:	xchg   ecx,ecx
  42289a:	mov    dl,0xa0
  42289c:	lea    esp,[ebp+0x708356da]
  4228a2:	fnstcw WORD PTR [eax+edi*8]
  4228a5:	test   al,0x94
  4228a7:	std    
  4228a8:	mov    edx,0x36073802
  4228ad:	call   0x4fc253bb
  4228b2:	inc    edi
  4228b3:	and    al,0xeb
  4228b5:	fwait
  4228b6:	bound  ecx,QWORD PTR [ebx+0x5c]
  4228b9:	push   ebx
  4228ba:	adc    BYTE PTR [ebp-0x37],cl
  4228bd:	mov    WORD PTR [edi],ss
  4228bf:	push   ds
  4228c0:	xlat   BYTE PTR ds:[bx]
  4228c2:	in     al,dx
  4228c3:	inc    ebx
  4228c4:	jns    0x4228c4
  4228c6:	jne    0x422922
  4228c8:	xchg   edi,edi
  4228ca:	adc    esp,DWORD PTR [edi+ebx*1+0x48ad25a6]
  4228d1:	cld    
  4228d2:	push   edx
  4228d3:	int3   
  4228d4:	arpl   sp,cx
  4228d6:	das    
  4228d7:	sbb    esp,eax
  4228d9:	aas    
  4228da:	adc    ebx,DWORD PTR [ebx-0x21]
  4228dd:	and    BYTE PTR [edi+0x34],cl
  4228e0:	(bad)  
  4228e1:	pop    ebp
  4228e2:	pop    ss
  4228e3:	dec    esp
  4228e5:	inc    ecx
  4228e6:	retf   0xc564
  4228e9:	cs xor al,0xeb
  4228ec:	jb     0x4228dd
  4228ee:	add    al,0x3c
  4228f0:	mov    ah,0x4
  4228f2:	ror    DWORD PTR [ebp-0x7],cl
  4228f5:	test   BYTE PTR [ebx-0x2d],ch
  4228f8:	int    0xcb
  4228fa:	inc    ebp
  4228fb:	hlt    
  4228fc:	pop    eax
  4228fd:	retf   
  4228fe:	(bad)  
  4228ff:	mov    edi,0xd51ee91a
  422904:	dec    edi
  422905:	jmp    0x4228a8
  422907:	popf   
  422908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422909:	into   
  42290a:	sub    BYTE PTR [edi-0x1a2fb65],dh
  422910:	jecxz  0x4228f8
  422912:	mov    edi,0xba4e3201
  422917:	stos   BYTE PTR es:[edi],al
  422918:	test   esp,ecx
  42291a:	ror    DWORD PTR [ecx],1
  42291c:	nop
  42291d:	dec    esp
  42291e:	cmc    
  42291f:	push   edi
  422920:	push   esi
  422921:	push   ebp
  422923:	jecxz  0x42291f
  422925:	xchg   bh,dl
  422927:	mov    eax,0xa60320a5
  42292c:	pop    eax
  42292d:	adc    DWORD PTR ds:0x9e0f9f97,0xffffff94
  422934:	adc    BYTE PTR [edx+0x1a],ch
  422937:	push   edi
  422938:	scas   eax,DWORD PTR es:[edi]
  422939:	ins    DWORD PTR es:[di],dx
  42293b:	pop    edx
  42293c:	cmc    
  42293d:	mov    ebx,0x8910dde5
  422942:	jae    0x4229b9
  422944:	js     0x4228fc
  422946:	dec    eax
  422947:	mov    bh,0xd7
  422949:	ins    BYTE PTR es:[edi],dx
  42294a:	jmp    0xc2c7:0x78b8563d
  422951:	xlat   BYTE PTR ds:[ebx]
  422952:	mov    cl,0x1
  422954:	div    BYTE PTR [eax+0x3fdb418f]
  42295a:	pop    ebx
  42295b:	mov    esp,0xbe1781a4
  422960:	mov    eax,0xcf4b988e
  422965:	cs in  al,dx
  422967:	push   cs
  422968:	add    bh,0x2
  42296b:	jge    0x422930
  42296d:	jne    0x422927
  42296f:	adc    ebx,DWORD PTR [ecx]
  422971:	clc    
  422972:	or     eax,0x883a7bc7
  422977:	hlt    
  422978:	jb     0x422952
  42297a:	ret    0xc521
  42297d:	push   0xdf3b688d
  422982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422983:	(bad)  
  422984:	repnz mov esi,0x400426ba
  42298a:	xor    BYTE PTR [esp+esi*1-0x1e0d1d27],dh
  422991:	or     bh,BYTE PTR [eax+0x10]
  422994:	ins    BYTE PTR es:[edi],dx
  422995:	adc    ebx,DWORD PTR ds:0x9cde9d0e
  42299b:	push   0xffffffe2
  42299d:	mov    edx,0xc089ca21
  4229a2:	aam    0x87
  4229a4:	in     al,0x9c
  4229a6:	data16 sbb BYTE PTR [ecx+0x43],cl
  4229aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229ab:	ds mov ch,0xf2
  4229ae:	scas   eax,DWORD PTR es:[edi]
  4229af:	jbe    0x422a06
  4229b1:	mov    edi,0xb72cb59d
  4229b6:	xchg   edi,eax
  4229b7:	inc    ebx
  4229b8:	(bad)  
  4229b9:	push   cs
  4229ba:	popa   
  4229bb:	fcmovbe st,st(4)
  4229bd:	lods   al,BYTE PTR ds:[esi]
  4229be:	inc    DWORD PTR ds:0x2b26003c
  4229c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229c5:	mov    edx,DWORD PTR [esi+0x68be8df]
  4229cb:	jno    0x42295e
  4229cd:	pop    ebp
  4229ce:	sbb    esp,DWORD PTR [esi+0xc]
  4229d1:	and    DWORD PTR [ebx],edx
  4229d3:	sbb    BYTE PTR [edi-0x6b],0x1f
  4229d7:	cdq    
  4229d8:	scas   eax,DWORD PTR es:[edi]
  4229d9:	sbb    esp,DWORD PTR [esi]
  4229db:	js     0x42297e
  4229dd:	xchg   DWORD PTR [eax],ebx
  4229df:	or     eax,0xaa21ed6d
  4229e4:	and    ah,BYTE PTR [esi-0x1b03055]
  4229ea:	mov    al,ds:0xe0c49c6c
  4229ef:	inc    eax
  4229f0:	inc    esi
  4229f1:	test   eax,0xa28470d4
  4229f6:	pop    edi
  4229f7:	dec    eax
  4229f8:	ret    
  4229f9:	push   esp
  4229fa:	bound  esi,QWORD PTR [esi+0x272c413a]
  422a00:	imul   eax,edx,0xffffffe8
  422a03:	inc    BYTE PTR [edx-0x34]
  422a06:	clc    
  422a07:	in     al,dx
  422a08:	xor    ecx,esi
  422a0a:	(bad)  
  422a0b:	adc    bl,ch
  422a0d:	pop    ebp
  422a0e:	outs   dx,DWORD PTR ds:[esi]
  422a0f:	pop    ebx
  422a10:	fcom   DWORD PTR [edx+0x5d]
  422a13:	pop    ebp
  422a14:	jns    0x4229a3
  422a16:	stc    
  422a17:	cld    
  422a18:	and    esp,0x1e
  422a1b:	adc    ah,BYTE PTR [ebx]
  422a1d:	out    0xb7,al
  422a1f:	jg     0x422a54
  422a21:	call   0x813e8d9a
  422a26:	inc    ebp
  422a27:	icebp  
  422a28:	mul    BYTE PTR [ecx]
  422a2a:	hlt    
  422a2b:	aaa    
  422a2c:	scas   al,BYTE PTR es:[edi]
  422a2d:	loopne 0x4229fb
  422a2f:	lea    ebp,ds:0x2d7426b4
  422a35:	daa    
  422a36:	inc    esi
  422a37:	mov    dh,0x91
  422a39:	mov    ch,0xe
  422a3b:	push   ecx
  422a3c:	das    
  422a3d:	sub    eax,0x32a6b9af
  422a42:	repz cmp esi,DWORD PTR [esi+0x46]
  422a46:	cmp    DWORD PTR [esp+eiz*8+0x39c8257e],ebp
  422a4d:	jmp    0x4229f6
  422a4f:	inc    edi
  422a50:	jl     0x422a2a
  422a52:	xchg   ebp,eax
  422a53:	or     DWORD PTR [edi-0x6c],0x8a990faa
  422a5a:	in     eax,0xb4
  422a5c:	jmp    0x62bf:0x14bc3c26
  422a63:	mov    eax,0x8d0474de
  422a68:	and    eax,0xf7fb4c58
  422a6d:	getsec 
  422a6f:	mov    DWORD PTR [edi+0x3a],edi
  422a72:	sahf   
  422a73:	mov    ecx,0x6ee318ff
  422a78:	pop    ecx
  422a79:	stos   BYTE PTR es:[edi],al
  422a7a:	mov    al,0x4c
  422a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a7d:	sbb    al,0x19
  422a7f:	fild   WORD PTR [edi+0x44]
  422a82:	sub    DWORD PTR [edi+0x39],0xffffffab
  422a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a87:	retf   0x5dec
  422a8a:	(bad)  
  422a8b:	or     al,0x5c
  422a8d:	inc    ebp
  422a8e:	fadd   st(7),st
  422a90:	rep ins BYTE PTR es:[edi],dx
  422a92:	pop    es
  422a93:	xchg   esp,eax
  422a94:	les    ebp,FWORD PTR [ebx]
  422a96:	outs   dx,DWORD PTR ds:[esi]
  422a97:	xor    ah,BYTE PTR ds:0x83b7f770
  422a9d:	push   edx
  422a9e:	test   edi,0xc3e58e37
  422aa4:	cmp    ch,BYTE PTR [edx+0x48efc857]
  422aaa:	mov    cl,0xcd
  422aac:	cwde   
  422aad:	jp     0x422ad5
  422aaf:	or     ah,al
  422ab1:	in     eax,dx
  422ab2:	hlt    
  422ab3:	cmp    al,0x23
  422ab5:	(bad)  
  422ab6:	shr    DWORD PTR [edi-0x70],cl
  422ab9:	add    eax,0xb814f5a1
  422abe:	test   al,0xaf
  422ac0:	inc    edx
  422ac1:	sbb    DWORD PTR [ebx+0x7e],ebp
  422ac4:	push   ebp
  422ac5:	inc    edx
  422ac6:	push   esp
  422ac7:	in     eax,dx
  422ac8:	inc    ecx
  422ac9:	fidiv  WORD PTR [edi+0x37]
  422acc:	mov    ecx,0xa0f88fd0
  422ad1:	mov    ch,0x8a
  422ad3:	cmp    eax,DWORD PTR [edx+0x28]
  422ad6:	jns    0x422b28
  422ad8:	push   esi
  422ad9:	mov    dh,0xaa
  422adb:	clc    
  422adc:	push   ss
  422add:	(bad)  
  422ade:	in     al,dx
  422adf:	(bad)  
  422ae0:	mov    edi,0x50c6c1d6
  422ae5:	retf   
  422ae6:	(bad)  
  422ae8:	dec    esi
  422ae9:	jp     0x422b30
  422aeb:	daa    
  422aec:	adc    DWORD PTR [edx+0x79],0x6a
  422af0:	cmp    esi,DWORD PTR [eax]
  422af2:	xchg   ecx,eax
  422af3:	lea    eax,[ebx]
  422af5:	or     cl,bh
  422af7:	repnz and ch,al
  422afa:	jns    0x422b74
  422afc:	es aad 0xd4
  422aff:	icebp  
  422b00:	repnz xor edi,esp
  422b03:	and    eax,ebp
  422b05:	mov    es,ebp
  422b07:	lfs    esp,FWORD PTR [eax-0x3d]
  422b0b:	dec    eax
  422b0c:	inc    ebx
  422b0d:	nop
  422b0e:	out    dx,al
  422b0f:	mov    ebx,0xda1ac557
  422b14:	mov    DWORD PTR [edi+ebp*1-0x24a2c239],ecx
  422b1b:	push   esi
  422b1c:	push   ds
  422b1d:	mov    esp,0xf13ee62c
  422b22:	aaa    
  422b23:	push   ecx
  422b24:	sub    bl,BYTE PTR [esi-0x2230a547]
  422b2a:	sbb    ebp,DWORD PTR [edx-0x7f]
  422b2d:	rol    edi,0xa5
  422b30:	dec    ecx
  422b31:	xchg   BYTE PTR [edx-0x1886c95],ah
  422b37:	sub    BYTE PTR [edi+ecx*1+0x7c8446ba],cl
  422b3e:	inc    ebp
  422b3f:	scas   eax,DWORD PTR es:[edi]
  422b40:	add    BYTE PTR [ebp-0x15],dh
  422b43:	xor    esp,ebx
  422b45:	fidivr WORD PTR [esi]
  422b47:	pop    esi
  422b48:	and    bh,BYTE PTR [ebp+0x1]
  422b4b:	pop    esp
  422b4c:	mov    ecx,0x9154f1b4
  422b51:	adc    eax,0xa029a99b
  422b56:	aaa    
  422b57:	mov    ch,0xc7
  422b59:	xor    bl,BYTE PTR [edx-0x72]
  422b5c:	in     eax,dx
  422b5d:	test   esi,eax
  422b5f:	retf   0xbf09
  422b62:	stos   BYTE PTR es:[edi],al
  422b63:	pop    ebx
  422b64:	stos   BYTE PTR es:[edi],al
  422b65:	iret   
  422b66:	std    
  422b67:	in     eax,dx
  422b68:	dec    ebx
  422b69:	xor    al,0x9b
  422b6b:	jg     0x422bb4
  422b6d:	inc    esi
  422b6e:	dec    BYTE PTR [eax+0x5d2133c2]
  422b74:	mov    ebx,0x67e4007e
  422b79:	lods   eax,DWORD PTR ds:[esi]
  422b7a:	sub    edx,edi
  422b7c:	sbb    dl,ah
  422b7e:	jg     0x422bfa
  422b80:	mov    ecx,0xae48e008
  422b85:	mov    cl,0xa1
  422b87:	adc    esp,edx
  422b89:	mov    bh,0x9b
  422b8b:	aad    0x6d
  422b8d:	idiv   DWORD PTR [ebp-0x61]
  422b90:	clc    
  422b91:	mov    ds:0xa2819b74,eax
  422b96:	out    0xee,eax
  422b98:	cmp    cl,BYTE PTR [esi+0x7a]
  422b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b9c:	(bad)  
  422b9d:	jo     0x422c05
  422b9f:	out    dx,al
  422ba0:	cmp    cl,bh
  422ba2:	outs   dx,DWORD PTR ds:[esi]
  422ba3:	ins    DWORD PTR es:[edi],dx
  422ba4:	mov    al,ds:0x927e5875
  422ba9:	test   esp,esi
  422bab:	push   ss
  422bac:	jl     0x422bf5
  422bae:	outs   dx,BYTE PTR ds:[esi]
  422baf:	mov    DWORD PTR [ebx-0x30873041],esi
  422bb5:	es aaa 
  422bb7:	push   ss
  422bb8:	and    al,0xe5
  422bba:	out    dx,eax
  422bbb:	and    BYTE PTR [edx+0x36],al
  422bbe:	hlt    
  422bbf:	mov    esp,esi
  422bc1:	imul   ebx,edx,0xffffffc5
  422bc4:	pop    ds
  422bc5:	mov    ch,0xe5
  422bc7:	aas    
  422bc8:	push   edx
  422bc9:	hlt    
  422bca:	sti    
  422bcb:	std    
  422bcc:	aam    0xed
  422bce:	lods   eax,DWORD PTR ds:[esi]
  422bcf:	xchg   edx,eax
  422bd0:	mov    ch,0xc0
  422bd2:	aam    0x73
  422bd4:	add    DWORD PTR [ecx],eax
  422bd6:	jo     0x422c56
  422bd8:	mov    bh,0x20
  422bda:	or     BYTE PTR [ecx+0x4d],bl
  422bdd:	ret    0x1bfa
  422be0:	cmp    al,0xfb
  422be2:	adc    al,0xcc
  422be4:	adc    ebx,DWORD PTR [edi-0x5e221969]
  422bea:	test   al,0xb5
  422bec:	or     ch,dl
  422bee:	jl     0x422bf6
  422bf0:	mov    eax,ds:0x3e6715dc
  422bf5:	mov    esi,DWORD PTR [esi+ecx*2]
  422bf8:	mov    edi,0x9664a09c
  422bfd:	inc    edx
  422bfe:	mov    BYTE PTR [ebx+0x3a],ch
  422c01:	loopne 0x422c67
  422c03:	sub    al,0xe8
  422c05:	mov    ecx,0x3d79a69
  422c0a:	mov    ds:0x846d27a1,eax
  422c0f:	xchg   esi,eax
  422c10:	dec    esi
  422c11:	dec    ebp
  422c12:	(bad)  
  422c13:	push   ebp
  422c14:	pop    ecx
  422c15:	xchg   ebp,eax
  422c16:	call   0x3067:0x1d18746e
  422c1d:	popf   
  422c1e:	stos   DWORD PTR es:[edi],eax
  422c1f:	je     0x422c14
  422c21:	cld    
  422c22:	push   eax
  422c23:	fwait
  422c24:	fwait
  422c25:	pop    esp
  422c26:	and    edi,DWORD PTR ds:0xa417ad01
  422c2c:	xchg   edi,eax
  422c2d:	and    DWORD PTR [ebp-0x6ba4e37],ecx
  422c33:	xlat   BYTE PTR ds:[ebx]
  422c34:	jnp    0x422c26
  422c36:	pop    edx
  422c37:	(bad)  
  422c38:	mov    esp,0x75303bd0
  422c3d:	sbb    DWORD PTR [ebx+0xa],esi
  422c40:	pop    esp
  422c41:	popf   
  422c42:	mov    eax,DWORD PTR [ecx+esi*2]
  422c45:	add    DWORD PTR [ecx-0x5],eax
  422c48:	stos   BYTE PTR es:[edi],al
  422c49:	xchg   edi,eax
  422c4a:	sbb    BYTE PTR [eax+0x36],ch
  422c4d:	dec    ecx
  422c4e:	sti    
  422c4f:	xchg   ebx,eax
  422c50:	jmp    0x422c0b
  422c52:	or     ecx,DWORD PTR [esi]
  422c54:	loopne 0x422c7d
  422c56:	inc    esp
  422c57:	cmp    eax,0x31a2e9c4
  422c5c:	mov    eax,edi
  422c5e:	sub    BYTE PTR [eax],ch
  422c60:	aam    0x17
  422c62:	push   ecx
  422c63:	fldcw  WORD PTR es:[ebp-0x5800de5d]
  422c6a:	mov    cl,al
  422c6c:	fs stos DWORD PTR es:[edi],eax
  422c6e:	mov    ch,0x7b
  422c70:	xchg   esi,eax
  422c71:	and    BYTE PTR [edx],dl
  422c73:	ins    DWORD PTR es:[edi],dx
  422c74:	inc    esi
  422c75:	and    al,0x1b
  422c77:	std    
  422c78:	outs   dx,BYTE PTR ds:[esi]
  422c79:	(bad)  
  422c7b:	sti    
  422c7c:	mov    cl,0xc8
  422c7e:	pop    ds
  422c7f:	sub    bh,dh
  422c81:	push   ss
  422c82:	sub    eax,DWORD PTR [esi]
  422c84:	sar    DWORD PTR [eax],cl
  422c86:	loopne 0x422c80
  422c88:	bound  ebx,QWORD PTR [edx+0xd7a9988]
  422c8e:	xor    ecx,DWORD PTR [esi+0x7c]
  422c91:	dec    edi
  422c92:	and    ebp,DWORD PTR [esi]
  422c94:	popa   
  422c95:	jnp    0x422c9b
  422c97:	out    dx,al
  422c98:	icebp  
  422c99:	loop   0x422d08
  422c9b:	jne    0x422cda
  422c9d:	ja     0x422d0c
  422c9f:	aaa    
  422ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca1:	jno    0x422c77
  422ca3:	dec    ebp
  422ca4:	jbe    0x422c50
  422ca6:	xchg   ebx,eax
  422ca7:	int3   
  422ca8:	shr    DWORD PTR [ebx*2-0x79617eac],1
  422caf:	mov    WORD PTR [eax+0x38122465],ds
  422cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cb6:	repz in eax,dx
  422cb8:	repz sub dl,BYTE PTR [esi+0x39]
  422cbc:	inc    ebx
  422cbd:	(bad)  
  422cbe:	imul   esi,DWORD PTR ds:0x9b1be45c,0xf6c82c96
  422cc8:	or     cl,BYTE PTR [edx+0x5f]
  422ccb:	cmc    
  422ccc:	mov    bl,ch
  422cce:	int3   
  422ccf:	shl    ebp,0x59
  422cd2:	retf   
  422cd3:	retf   0x13b1
  422cd6:	pusha  
  422cd7:	cmp    DWORD PTR [ebx+edi*1],0x7ecf5bb5
  422cde:	sub    ebp,esi
  422ce0:	repz test esp,edi
  422ce3:	mov    dh,0x4a
  422ce5:	(bad)  
  422ce6:	and    al,0x86
  422ce8:	hlt    
  422ce9:	mov    ebp,0x69a40c22
  422cee:	shl    eax,1
  422cf0:	call   0xa14b:0x2fb1563
  422cf7:	mov    bh,0x1c
  422cf9:	inc    esi
  422cfa:	mov    eax,0x56936ea3
  422cff:	xchg   edx,eax
  422d00:	xor    esp,DWORD PTR ds:0x8850a6b9
  422d06:	aaa    
  422d07:	push   cs
  422d08:	(bad)  
  422d09:	dec    edi
  422d0a:	inc    ebx
  422d0b:	mov    ds:0xab38a3f8,eax
  422d10:	in     eax,dx
  422d11:	pop    eax
  422d12:	inc    edx
  422d13:	dec    eax
  422d14:	push   eax
  422d15:	cwde   
  422d16:	xor    eax,0xd1d493e7
  422d1b:	cs cmp eax,0xcccfbcd6
  422d21:	lea    eax,[ebx]
  422d23:	lock mov al,0x7e
  422d26:	cli    
  422d27:	call   DWORD PTR [esi-0x2aa1f3cc]
  422d2d:	inc    edx
  422d2e:	xchg   edi,eax
  422d2f:	aad    0xf0
  422d31:	in     eax,0xa
  422d33:	ficom  DWORD PTR [eax+0x6d930adc]
  422d39:	(bad)  
  422d3a:	sbb    eax,0x87a53e27
  422d3f:	push   esp
  422d40:	push   ss
  422d41:	fld    TBYTE PTR [esi]
  422d43:	cmp    DWORD PTR [ecx-0x2d0f2491],edi
  422d49:	dec    edi
  422d4a:	ss push edx
  422d4c:	and    eax,0x9c41a5db
  422d51:	pushf  
  422d52:	push   ecx
  422d53:	and    al,0x64
  422d55:	lds    bp,DWORD PTR [ecx]
  422d58:	pusha  
  422d59:	fsub   DWORD PTR [ebp-0x30]
  422d5c:	adc    eax,0xfa71efa2
  422d61:	mov    ah,0xd0
  422d63:	ja     0x422cef
  422d65:	jbe    0x422d19
  422d67:	jb     0x422db8
  422d69:	or     al,0x6d
  422d6b:	xor    cl,al
  422d6d:	push   cs
  422d6e:	cmp    dl,BYTE PTR [ecx+0x48511e9f]
  422d74:	jmp    0xf7e2ea8d
  422d79:	pusha  
  422d7a:	sbb    eax,0x64c00d17
  422d7f:	push   esp
  422d80:	xor    eax,0x2cb22a4d
  422d85:	pusha  
  422d86:	jb     0x422dfe
  422d88:	out    dx,eax
  422d89:	test   BYTE PTR [eax+0x5327964d],dl
  422d8f:	imul   ebp,DWORD PTR [edx],0x3e
  422d92:	push   0x25
  422d94:	ret    0x8278
  422d97:	call   0x385c:0x11dd926f
  422d9e:	push   es
  422d9f:	cwde   
  422da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422da1:	and    eax,0x19cfc09d
  422da6:	fwait
  422da7:	xlat   BYTE PTR ds:[ebx]
  422da8:	sub    esp,esi
  422daa:	or     dl,BYTE PTR [edx+0x308290b1]
  422db0:	cdq    
  422db1:	ja     0x422da2
  422db3:	sub    DWORD PTR [bx+di],ecx
  422db6:	stos   BYTE PTR es:[edi],al
  422db7:	push   ds
  422db8:	pop    eax
  422db9:	mov    esi,0x653ccd8f
  422dbe:	push   esi
  422dbf:	popa   
  422dc0:	xor    BYTE PTR [ecx+0x30],al
  422dc3:	jle    0x422e3a
  422dc5:	in     al,0xef
  422dc7:	mov    dh,0x50
  422dc9:	and    edi,DWORD PTR [ecx-0x5f02f88b]
  422dcf:	xchg   edx,eax
  422dd0:	sbb    ebx,ebx
  422dd2:	fistp  WORD PTR [edi-0x9]
  422dd5:	(bad)  
  422dd7:	xchg   edi,eax
  422dd8:	fbld   TBYTE PTR [esi]
  422dda:	push   edi
  422ddb:	call   0x5215:0x9c34d2e5
  422de2:	mov    ah,0xf9
  422de4:	push   0xffffffa6
  422de6:	test   BYTE PTR [edx+ebx*8+0x568bf543],cl
  422ded:	cmp    cl,cl
  422def:	fimul  DWORD PTR [ebx-0x4ebc6ff8]
  422df5:	js     0x422dd6
  422df7:	jmp    0x422e21
  422df9:	shl    edi,0x86
  422dfc:	jno    0x422dab
  422dfe:	inc    edx
  422dff:	rol    DWORD PTR [esi],1
  422e01:	add    DWORD PTR [ebx],ebx
  422e03:	mov    ecx,0xeddda698
  422e08:	sbb    BYTE PTR [ebx],dl
  422e0a:	call   0xdffae862
  422e0f:	lahf   
  422e10:	push   ecx
  422e11:	sub    eax,0x95792928
  422e16:	mov    al,ds:0x56863dc5
  422e1b:	xchg   esi,eax
  422e1c:	(bad)  
  422e1d:	mov    esp,0xdcb5488
  422e22:	and    BYTE PTR ds:0xcb73af42,ah
  422e28:	cmp    eax,0x248b6447
  422e2d:	jb     0x422e48
  422e2f:	jp     0x422de5
  422e31:	sub    DWORD PTR cs:[eax],ecx
  422e34:	sub    esi,DWORD PTR [esi-0x1342fad5]
  422e3a:	dec    ecx
  422e3b:	sub    eax,0xcfe54a5f
  422e40:	scas   eax,DWORD PTR es:[edi]
  422e41:	hlt    
  422e42:	stos   DWORD PTR es:[edi],eax
  422e43:	(bad)  
  422e44:	ficom  WORD PTR [eax+eax*2]
  422e47:	call   0xc2a4:0xd3c6d6bc
  422e4e:	std    
  422e4f:	call   0x84994631
  422e54:	pushf  
  422e55:	aad    0x40
  422e57:	xor    dl,BYTE PTR [esi+ebp*1-0x63520501]
  422e5e:	aam    0xab
  422e60:	push   ds
  422e61:	bound  edx,QWORD PTR [eax]
  422e63:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422e65:	pop    esi
  422e66:	inc    ebp
  422e67:	cmp    bh,BYTE PTR [eax-0x728d5a82]
  422e6d:	arpl   WORD PTR [esi-0x6746695d],cx
  422e73:	leave  
  422e74:	and    ebx,DWORD PTR [esi+0xf]
  422e77:	xchg   esp,eax
  422e78:	cldemote BYTE PTR [ebx-0x74]
  422e7c:	call   0x4a153997
  422e81:	push   eax
  422e82:	sub    eax,0xa41bc305
  422e87:	inc    ecx
  422e88:	inc    ebx
  422e89:	sbb    al,0x68
  422e8b:	sbb    ecx,DWORD PTR [eax-0x3189704b]
  422e91:	scas   al,BYTE PTR es:[edi]
  422e92:	and    ebx,ebp
  422e94:	lock cmp dh,BYTE PTR [ecx-0x76]
  422e98:	xchg   edx,eax
  422e99:	jbe    0x422ec3
  422e9b:	cmp    esi,DWORD PTR [ecx-0x1]
  422e9e:	div    DWORD PTR [esi+0x793d58b4]
  422ea4:	cmc    
  422ea5:	jge    0x422f15
  422ea7:	cwde   
  422ea8:	xchg   ch,bl
  422eaa:	popw   ss
  422eac:	mov    dl,0x7e
  422eae:	and    edi,ecx
  422eb0:	push   0xb90d097a
  422eb5:	pop    ebx
  422eb6:	ror    BYTE PTR [eax],0x73
  422eb9:	inc    esp
  422eba:	div    DWORD PTR [esi-0x3261f2dd]
  422ec0:	push   ebx
  422ec1:	or     dl,BYTE PTR [ecx]
  422ec3:	mov    ecx,0xde96ea53
  422ec8:	sub    DWORD PTR [edx],edx
  422eca:	xchg   esi,eax
  422ecb:	clc    
  422ecc:	pop    esi
  422ecd:	pop    esi
  422ece:	add    bh,BYTE PTR [esp+ebx*1+0xe]
  422ed2:	or     al,0x43
  422ed4:	fmul   DWORD PTR ds:0x44f4b734
  422eda:	dec    esi
  422edb:	xor    ah,dh
  422edd:	(bad)  
  422ede:	adc    DWORD PTR [esi+0x6c516e3a],ebx
  422ee4:	xchg   ebx,eax
  422ee5:	popf   
  422ee6:	std    
  422ee7:	das    
  422ee8:	outs   dx,BYTE PTR ds:[esi]
  422ee9:	(bad)  
  422eea:	dec    eax
  422eeb:	test   DWORD PTR [eax],edi
  422eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eee:	inc    eax
  422eef:	(bad)  
  422ef0:	pop    edi
  422ef1:	fstp   TBYTE PTR [edx-0x22]
  422ef4:	jge    0x422e87
  422ef6:	sbb    al,0x8c
  422ef8:	ret    0xb7be
  422efb:	xchg   ecx,eax
  422efc:	mov    al,ds:0x4fc4ab20
  422f01:	push   cs
  422f02:	adc    eax,0x26898f00
  422f07:	rol    BYTE PTR [ebp+0x29],0xdf
  422f0b:	xchg   esp,eax
  422f0c:	rcr    DWORD PTR [esi],0x8c
  422f0f:	ret    
  422f10:	or     ecx,DWORD PTR [ecx*2-0x7f91cd3]
  422f17:	not    DWORD PTR [ecx-0x7103267]
  422f1d:	in     al,0xc0
  422f1f:	push   0xff73ac4
  422f24:	xchg   bl,ah
  422f26:	adc    BYTE PTR [ebp+0x77],ah
  422f29:	add    al,0x7
  422f2b:	adc    eax,0x7f36e19b
  422f30:	push   cs
  422f31:	(bad)  
  422f32:	jmp    eax
  422f34:	pusha  
  422f35:	mov    al,ds:0xeb419314
  422f3a:	add    al,0x12
  422f3c:	fsubr  st(1),st
  422f3e:	out    0x93,al
  422f40:	mov    ds:0xbfc4a747,eax
  422f45:	dec    BYTE PTR [ebx]
  422f47:	das    
  422f48:	xchg   ecx,eax
  422f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f4a:	lds    ecx,FWORD PTR [eax]
  422f4c:	xor    BYTE PTR [eax],cl
  422f4e:	jle    0x422edb
  422f50:	inc    esi
  422f51:	hlt    
  422f52:	jo     0x422f6c
  422f54:	jg     0x422ede
  422f56:	(bad)  
  422f57:	(bad)  
  422f58:	cmp    eax,0xd8c5015e
  422f5d:	es add bh,cl
  422f60:	popf   
  422f61:	inc    bh
  422f63:	xchg   esp,eax
  422f64:	lock jo 0x422f39
  422f67:	xor    DWORD PTR [ebx+0x7e4deb24],ecx
  422f6d:	es cld 
  422f6f:	xlat   BYTE PTR ds:[ebx]
  422f70:	loope  0x422f75
  422f72:	jge    0x422f49
  422f74:	push   ss
  422f75:	(bad)  
  422f76:	pop    esp
  422f77:	or     ah,BYTE PTR [ebx+ebx*1+0x6cf6f43f]
  422f7e:	xchg   edx,eax
  422f7f:	in     eax,0x86
  422f81:	aaa    
  422f82:	dec    eax
  422f83:	and    cl,dl
  422f85:	push   es
  422f86:	mov    DWORD PTR [eax+0x54],esp
  422f89:	add    esp,DWORD PTR [edi]
  422f8b:	mov    dl,0xc7
  422f8d:	sbb    al,0x6a
  422f8f:	sbb    al,0x55
  422f91:	enter  0xab74,0x0
  422f95:	out    0x8f,eax
  422f97:	and    BYTE PTR fs:[edx+edx*4-0x5d29b58d],0x79
  422fa0:	push   edi
  422fa1:	adc    dl,BYTE PTR [edi-0x64]
  422fa4:	pop    ecx
  422fa5:	inc    eax
  422fa6:	stos   DWORD PTR es:[edi],eax
  422fa7:	je     0x422f2a
  422fa9:	int3   
  422faa:	jp     0x422fbf
  422fac:	xchg   edi,eax
  422fad:	in     eax,dx
  422fae:	ja     0x422fa7
  422fb0:	scas   eax,DWORD PTR es:[edi]
  422fb1:	retf   
  422fb2:	sub    al,BYTE PTR [edx-0x754f3c30]
  422fb8:	mov    ebx,0x387228ab
  422fbd:	push   cs
  422fbe:	and    ecx,edi
  422fc0:	aaa    
  422fc1:	arpl   WORD PTR [edx-0x51fb0ffa],ax
  422fc7:	or     BYTE PTR [esi+0x7828f13e],bl
  422fcd:	jecxz  0x423014
  422fcf:	mov    ds:0xa8d9a58,al
  422fd4:	es std 
  422fd6:	fdiv   QWORD PTR [edx+0x704d0832]
  422fdc:	adc    esp,DWORD PTR [esi]
  422fde:	pushf  
  422fdf:	sub    eax,0x1ca6c8e4
  422fe4:	adc    BYTE PTR [eax-0x79],bl
  422fe7:	dec    edx
  422fe8:	push   edx
  422fe9:	cmp    bh,BYTE PTR [ebp-0xc]
  422fec:	jmp    0x8cd6:0x4400202
  422ff3:	sbb    esi,DWORD PTR es:[ebx-0x71]
  422ff7:	jbe    0x422fb5
  422ff9:	clc    
  422ffa:	outs   dx,BYTE PTR ds:[esi]
  422ffb:	jmp    0x42304b
  422ffd:	inc    edx
  422ffe:	sbb    DWORD PTR [ebx],ebx
  423000:	inc    edx
  423001:	add    edi,edx
  423003:	js     0x42306b
  423005:	adc    al,0x47
  423007:	jnp    0x423033
  423009:	adc    BYTE PTR [esi],dl
  42300b:	adc    ebx,DWORD PTR [ebx]
  42300d:	xchg   ecx,eax
  42300e:	jle    0x423010
  423010:	jae    0x422fd8
  423012:	mov    bl,0xfe
  423014:	aad    0x3d
  423016:	arpl   WORD PTR [ebx+0x5f],bx
  423019:	jne    0x423049
  42301b:	fidiv  WORD PTR [edx+edx*8-0x71]
  42301f:	adc    eax,0x1171cafd
  423024:	loope  0x423086
  423026:	jecxz  0x42300b
  423028:	mul    BYTE PTR [edi+0x78]
  42302b:	int    0xed
  42302d:	push   edi
  42302e:	pop    ebp
  42302f:	imul   edi,DWORD PTR [edi+0x57],0x20
  423033:	(bad)  
  423035:	xor    DWORD PTR [ebx+eax*4+0x6daf5c82],0xfffffff1
  42303d:	sub    edi,edx
  42303f:	push   eax
  423040:	inc    edi
  423041:	bound  ebp,QWORD PTR [esi+0x5f]
  423044:	dec    eax
  423045:	mov    esp,0xb5b4a0ec
  42304a:	adc    cl,BYTE PTR [esi]
  42304c:	mov    ebp,0x8fc91056
  423051:	hlt    
  423052:	test   al,0x14
  423054:	sbb    DWORD PTR [ecx],0xb2ba7cee
  42305a:	sub    BYTE PTR [esi],bl
  42305c:	cmp    eax,0xad2a97b2
  423061:	xor    edi,ebp
  423063:	das    
  423064:	outs   dx,DWORD PTR ds:[esi]
  423065:	push   es
  423066:	call   0x5f6b:0x675a3c6a
  42306d:	sbb    al,0x40
  42306f:	push   ebp
  423070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423071:	xchg   edi,eax
  423072:	int    0x69
  423074:	dec    ecx
  423075:	out    0xe,al
  423077:	mov    dl,0xe1
  423079:	or     BYTE PTR ds:0x57d9c2a5,0xe9
  423080:	inc    ebx
  423081:	dec    esp
  423082:	xchg   ebx,eax
  423083:	ror    BYTE PTR [edx-0x1278441e],1
  423089:	ror    DWORD PTR [ebx+0x40],cl
  42308c:	pop    edi
  42308d:	jae    0x4230bf
  42308f:	scas   al,BYTE PTR es:[edi]
  423090:	jecxz  0x423105
  423092:	ds dec edx
  423094:	pop    ebp
  423095:	retf   
  423096:	bound  eax,QWORD PTR [edi+0x7fc187f7]
  42309c:	lock jg 0x4230e0
  42309f:	dec    esi
  4230a0:	xchg   BYTE PTR [esi+0x5b],dh
  4230a3:	out    dx,al
  4230a4:	lock sub bx,WORD PTR [ebx+ecx*4-0xf]
  4230aa:	out    0x39,al
  4230ac:	stc    
  4230ad:	dec    esp
  4230ae:	cmp    al,0x8e
  4230b0:	fist   WORD PTR [ecx]
  4230b2:	cmc    
  4230b3:	cs aaa 
  4230b5:	js     0x423052
  4230b7:	test   ebx,edi
  4230b9:	js     0x4230e5
  4230bb:	pop    esp
  4230bc:	push   0x70
  4230be:	or     eax,0x9f69ed3
  4230c3:	pop    esp
  4230c4:	xchg   ecx,esi
  4230c6:	jbe    0x423106
  4230c8:	aad    0xa4
  4230ca:	push   0x1f99a02c
  4230cf:	imul   eax,DWORD PTR [edi+0x3e2281ac],0xffffffcd
  4230d6:	jecxz  0x42312d
  4230d8:	mov    ch,0xa5
  4230da:	into   
  4230db:	jmp    0x4230e3
  4230dd:	jle    0x4230e4
  4230df:	or     dh,bh
  4230e1:	push   esi
  4230e2:	cld    
  4230e3:	enter  0xa750,0x9b
  4230e7:	dec    BYTE PTR [ecx-0x226c3d6c]
  4230ed:	leave  
  4230ee:	mov    WORD PTR [eax-0x6d493c78],ds
  4230f4:	pop    ss
  4230f5:	pop    esp
  4230f6:	ror    BYTE PTR [esi+0x5d],0x1c
  4230fa:	sti    
  4230fb:	loop   0x4230fc
  4230fd:	push   es
  4230fe:	sub    al,ah
  423100:	call   0xf835:0x831ab9d
  423107:	(bad)  
  423108:	popa   
  423109:	cmp    eax,DWORD PTR [ecx+0x6a]
  42310c:	ss addr16 jo 0x4230b8
  423110:	or     dh,BYTE PTR [edx+0x3a7f42f]
  423116:	cmp    esi,esp
  423118:	jnp    0x423139
  42311a:	jno    0x42316a
  42311c:	cwde   
  42311d:	sub    al,0x3f
  42311f:	mov    ebx,0x3a9538af
  423124:	cwde   
  423125:	or     DWORD PTR [ebp+0x5002a6d5],ebp
  42312b:	data16 lods al,BYTE PTR ds:[esi]
  42312d:	sub    edi,DWORD PTR [ecx-0x5df8c180]
  423133:	jp     0x423129
  423135:	sub    cl,BYTE PTR [esi-0x5f1685da]
  42313b:	mov    ecx,DWORD PTR [esi+0x7440b01c]
  423141:	lods   eax,DWORD PTR ds:[esi]
  423142:	repz mov cl,0x5a
  423145:	imul   ebp,DWORD PTR ds:[edx+edx*8],0x65
  42314a:	dec    ebp
  42314b:	mov    al,0xd5
  42314d:	test   BYTE PTR [edx-0x56],al
  423150:	jno    0x4231aa
  423152:	into   
  423153:	dec    ebp
  423154:	ss ret 
  423156:	xor    esp,DWORD PTR [esi]
  423158:	and    ebp,0x19d47b43
  42315e:	stc    
  42315f:	or     eax,0x7c8f2f4f
  423164:	rol    BYTE PTR [ebx+0x70],0xf9
  423168:	add    dl,dh
  42316a:	out    dx,eax
  42316b:	xchg   BYTE PTR [edx+eax*8],cl
  42316e:	mov    al,ds:0xf17f05e1
  423173:	mov    eax,ds:0xbc3d04c2
  423178:	jb     0x42315a
  42317a:	stos   DWORD PTR es:[edi],eax
  42317b:	and    eax,0xcdada739
  423180:	xchg   ebx,eax
  423181:	dec    ecx
  423182:	cmp    DWORD PTR [ecx-0x303dc625],ebx
  423188:	jle    0x423148
  42318a:	into   
  42318b:	ss ins BYTE PTR es:[edi],dx
  42318d:	pop    ebx
  42318e:	fimul  DWORD PTR [ebp+0x160e3236]
  423194:	add    al,0xe4
  423196:	push   edi
  423197:	sti    
  423198:	fistp  QWORD PTR [edi-0xc]
  42319b:	dec    ebp
  42319c:	inc    ebx
  42319d:	mov    cl,0x63
  42319f:	push   cs
  4231a0:	in     eax,0x60
  4231a2:	imul   ecx,DWORD PTR [edx-0x27],0xa5ffced9
  4231a9:	pop    esi
  4231aa:	pop    esi
  4231ab:	scas   eax,DWORD PTR es:[edi]
  4231ac:	fst    st(1)
  4231ae:	pop    esi
  4231af:	add    DWORD PTR [edx],esp
  4231b1:	or     ebp,DWORD PTR [esi+0x2c]
  4231b4:	mov    bh,0xca
  4231b6:	(bad)  
  4231b7:	aaa    
  4231b8:	cld    
  4231b9:	xchg   esi,eax
  4231ba:	cs xchg ecx,eax
  4231bc:	sti    
  4231bd:	mov    ebx,0x867f6b44
  4231c2:	pop    edi
  4231c3:	mov    dl,0x8f
  4231c5:	mov    bh,0x88
  4231c7:	jp     0x4231ec
  4231c9:	inc    esp
  4231ca:	push   esi
  4231cb:	dec    esp
  4231cc:	fld    DWORD PTR ds:0xd7bbe4c3
  4231d2:	adc    DWORD PTR [edx-0x58],ebp
  4231d5:	push   ebp
  4231d6:	lods   eax,DWORD PTR ds:[esi]
  4231d7:	lahf   
  4231d8:	loopne 0x4231dd
  4231da:	ins    DWORD PTR es:[edi],dx
  4231db:	jns    0x423259
  4231dd:	mov    ebx,0xaba7d04b
  4231e2:	popa   
  4231e3:	ja     0x42323f
  4231e5:	xor    dl,BYTE PTR [ebp*1-0x1eb1961f]
  4231ec:	mov    dl,0x42
  4231ee:	mov    dl,0x97
  4231f0:	fsub   DWORD PTR [ebp-0x76c5c987]
  4231f6:	jp     0x423272
  4231f8:	rol    BYTE PTR [edx-0x15438529],1
  4231fe:	dec    esp
  4231ff:	mov    ?,WORD PTR [edx-0x38]
  423202:	adc    eax,0x6931e599
  423207:	xlat   BYTE PTR ds:[ebx]
  423208:	xor    eax,0x71f280aa
  42320d:	paddb  mm4,mm2
  423210:	mov    cl,0x36
  423212:	jbe    0x4231db
  423214:	test   DWORD PTR [edx-0x5a],esi
  423217:	mov    ebx,0x433738dc
  42321c:	add    al,0x5e
  42321e:	sar    BYTE PTR [ecx+edi*2],cl
  423221:	adc    BYTE PTR [ebx],ah
  423223:	ret    
  423224:	pop    esi
  423225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423226:	cmp    cl,dl
  423228:	jnp    0x42321e
  42322a:	add    esp,ebx
  42322c:	mov    cl,0xe8
  42322e:	int    0x8b
  423230:	pop    edx
  423231:	or     ch,ch
  423233:	mov    al,0x90
  423235:	inc    ah
  423237:	mov    bh,0x56
  423239:	xor    edx,DWORD PTR [ecx+ecx*8-0x3bdf33b3]
  423240:	adc    al,0x8a
  423242:	pushf  
  423243:	mov    esi,ebp
  423245:	cmp    BYTE PTR [eax],0xf4
  423248:	ss pop edi
  42324a:	mov    esi,0xd57f9572
  42324f:	pop    edi
  423250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423251:	push   ebx
  423252:	fs leave 
  423254:	pusha  
  423255:	or     al,BYTE PTR [edi+0x14d41f3b]
  42325b:	rcl    DWORD PTR [eax+0x62],0x3a
  42325f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423260:	pop    esi
  423261:	sub    DWORD PTR gs:[edi+esi*2],eax
  423265:	fmul   QWORD PTR [ebx+0x79a89721]
  42326b:	jnp    0x423298
  42326d:	or     eax,0x1656870d
  423272:	xor    ch,cl
  423274:	shr    BYTE PTR [eax+0x2c],0xbb
  423278:	aam    0x51
  42327a:	jmp    0xc9d5:0xfc7f6634
  423281:	inc    eax
  423282:	in     al,dx
  423283:	out    0x87,al
  423285:	xchg   ecx,eax
  423286:	aaa    
  423287:	xor    BYTE PTR [edx+ecx*1+0x7f],cl
  42328b:	mov    ds:0x512ee36a,eax
  423290:	rcl    esi,1
  423292:	mov    BYTE PTR [edx+0x3520115e],ah
  423298:	xchg   DWORD PTR [ecx+0x12],esp
  42329b:	inc    eax
  42329c:	das    
  42329d:	xchg   esi,eax
  42329e:	into   
  42329f:	add    DWORD PTR [edx+0xa],esp
  4232a2:	dec    ecx
  4232a3:	jp     0x4232af
  4232a5:	jecxz  0x42322d
  4232a7:	stc    
  4232a8:	js     0x423325
  4232aa:	cmp    BYTE PTR [esi-0x5c],ch
  4232ad:	cld    
  4232ae:	xchg   edx,eax
  4232af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232b0:	aad    0xea
  4232b2:	push   0xdf02353b
  4232b7:	test   eax,0x999b838f
  4232bc:	test   DWORD PTR [edx+0x52],eax
  4232bf:	jae    0x423311
  4232c1:	inc    edx
  4232c2:	call   eax
  4232c4:	add    WORD PTR [eax],0x2c
  4232c8:	icebp  
  4232c9:	stos   DWORD PTR es:[edi],eax
  4232ca:	fmul   DWORD PTR [ebp-0x542f69a2]
  4232d0:	jmp    0x87e6:0xb42b4fbc
  4232d7:	pop    esp
  4232d8:	dec    ebx
  4232d9:	(bad)  
  4232da:	and    BYTE PTR [ecx+eax*4],bh
  4232dd:	cmp    dh,BYTE PTR [ebx]
  4232df:	add    al,0x11
  4232e1:	cmp    DWORD PTR [edx-0x45],esp
  4232e4:	cmp    eax,0x88d82cdf
  4232e9:	int    0x86
  4232eb:	inc    edi
  4232ec:	xor    edx,ebx
  4232ee:	jge    0x4232a3
  4232f0:	ror    BYTE PTR [eax],0xbe
  4232f3:	mov    eax,ds:0x1f082a25
  4232f8:	or     esp,DWORD PTR [esi+0x772cab22]
  4232fe:	push   edx
  4232ff:	jle    0x42335b
  423301:	scas   al,BYTE PTR es:[edi]
  423302:	xor    bh,BYTE PTR [eax+0x28c2b317]
  423308:	jmp    0x96ea:0x123fffc7
  42330f:	repnz retf 
  423311:	cld    
  423312:	xor    DWORD PTR [ecx+ecx*2+0xb],eax
  423316:	js     0x423396
  423318:	cli    
  423319:	xlat   BYTE PTR ds:[ebx]
  42331a:	inc    ebx
  42331b:	xor    edi,esi
  42331d:	ret    
  42331e:	out    dx,eax
  42331f:	xchg   ebx,eax
  423320:	mov    ebp,0x601c731d
  423325:	jecxz  0x423331
  423327:	in     al,dx
  423328:	sbb    al,0x5a
  42332a:	sub    BYTE PTR [eax+0x78b52d83],bl
  423330:	inc    ecx
  423331:	adc    eax,edi
  423333:	inc    ebp
  423334:	sub    al,0x5f
  423336:	xchg   edi,eax
  423337:	mov    cl,0xd9
  423339:	call   0x3f3e9162
  42333e:	(bad)  
  42333f:	fmul   st,st(3)
  423341:	sub    dh,BYTE PTR [eax-0x6f7d8896]
  423347:	pop    edi
  423348:	or     bh,BYTE PTR [ebx-0x3cc2ad58]
  42334e:	jbe    0x423397
  423350:	ja     0x4232f5
  423352:	mov    ah,0xef
  423354:	test   BYTE PTR [eax-0x51dfbf93],bh
  42335a:	icebp  
  42335b:	ffree  st(6)
  42335d:	ss add eax,0x305a0fed
  423363:	xchg   BYTE PTR [ebx+esi*8+0x78],dh
  423367:	jnp    0x42334c
  423369:	cs mov edx,DWORD PTR gs:[edi+0x69]
  42336e:	mov    dh,BYTE PTR [edx+0x4e5af43f]
  423374:	mov    dl,0x9a
  423376:	mov    dl,0x69
  423378:	mov    edi,0x4c822b6f
  42337d:	je     0x42339d
  42337f:	int3   
  423380:	cmp    DWORD PTR [ecx+0x4d747204],eax
  423386:	call   0x410af643
  42338b:	dec    edi
  42338c:	jg     0x423355
  42338e:	push   eax
  42338f:	cmc    
  423390:	xchg   edi,eax
  423391:	loope  0x42331c
  423393:	test   al,0x9c
  423395:	adc    BYTE PTR [eax+edi*2],cl
  423398:	daa    
  423399:	mov    eax,0xad06f7f5
  42339e:	push   eax
  42339f:	test   al,0x68
  4233a1:	lahf   
  4233a2:	or     BYTE PTR [eax+ebp*1+0x12fd9a34],bl
  4233a9:	push   cs
  4233aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233ab:	mov    cl,0x2b
  4233ad:	mov    ds:0x10bcd2c0,al
  4233b2:	jmp    0x7da4:0xc7aae3a
  4233b9:	mov    ch,0xe1
  4233bb:	and    al,0x10
  4233bd:	sub    ch,BYTE PTR [esi+edi*1]
  4233c0:	dec    ebx
  4233c1:	mov    eax,esi
  4233c3:	shl    cl,0xc2
  4233c6:	add    BYTE PTR [ecx],0xfa
  4233c9:	loope  0x423393
  4233cb:	sar    BYTE PTR [ecx],cl
  4233cd:	add    ecx,esp
  4233cf:	mov    sp,WORD PTR [si]
  4233d3:	push   0xffffffb3
  4233d5:	enter  0xe603,0x39
  4233d9:	int3   
  4233da:	xchg   edi,eax
  4233db:	jns    0x4233e0
  4233dd:	pop    esp
  4233de:	or     DWORD PTR [ebx+0x193fbafd],edx
  4233e4:	sbb    al,bh
  4233e6:	and    dh,BYTE PTR [ecx]
  4233e8:	icebp  
  4233e9:	xchg   esi,eax
  4233ea:	jno    0x4233b2
  4233ec:	mov    ebx,DWORD PTR ds:[eax-0x5e]
  4233f0:	xchg   edx,eax
  4233f1:	(bad)  
  4233f2:	loope  0x423396
  4233f4:	mov    ds:0xc378846f,al
  4233f9:	xchg   esi,eax
  4233fa:	xchg   BYTE PTR [edx+0x7e7efa34],ah
  423400:	les    ebx,FWORD PTR [eax-0x5f3257e0]
  423406:	cwde   
  423407:	cmp    eax,DWORD PTR [si]
  42340a:	dec    ebp
  42340b:	test   dh,bl
  42340d:	int3   
  42340e:	aas    
  42340f:	in     eax,dx
  423410:	mov    dl,0x1c
  423412:	xchg   ebp,eax
  423413:	arpl   bx,bp
  423415:	aad    0xc3
  423417:	sbb    eax,0x6ea9fa65
  42341c:	sbb    al,0x14
  42341e:	jg     0x4233fe
  423420:	cmp    ch,BYTE PTR [ebx-0x1b8fec59]
  423426:	enter  0xef3c,0x4d
  42342a:	daa    
  42342b:	int3   
  42342c:	fcomp  st(7)
  42342e:	bound  edx,QWORD PTR [ebp-0x8e95d95]
  423434:	mov    ecx,0x4ea6a399
  423439:	or     eax,0x1c5a22e6
  42343e:	mov    bl,0x23
  423440:	sub    BYTE PTR [edx],bl
  423442:	cmp    al,0xac
  423444:	sub    ebx,0xffffff9a
  423447:	hlt    
  423448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423449:	inc    esp
  42344a:	sahf   
  42344b:	dec    esi
  42344c:	ret    0xfbb0
  42344f:	jno    0x42343c
  423451:	mov    dh,0x75
  423453:	icebp  
  423454:	fcomp  DWORD PTR [edi-0x44]
  423457:	outs   dx,BYTE PTR ds:[esi]
  423458:	in     eax,0xf6
  42345a:	sar    ch,cl
  42345c:	sub    DWORD PTR [eax-0x22],edx
  42345f:	sub    ch,dl
  423461:	adc    BYTE PTR ds:0x361f4f7d,bh
  423467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423469:	je     0x423456
  42346b:	cmp    DWORD PTR [ebx+0x16],ecx
  42346e:	imul   esp,DWORD PTR [ebx],0x45
  423471:	out    0xd,eax
  423473:	jle    0x4234cc
  423475:	or     edi,DWORD PTR [edi-0x75d6093f]
  42347b:	mov    ds,WORD PTR [edx+0x281198fe]
  423481:	cmp    dh,BYTE PTR [eax]
  423483:	addr16 jo 0x4234a9
  423486:	jbe    0x42347a
  423488:	and    DWORD PTR [eax],esp
  42348a:	mov    ch,0x83
  42348c:	add    DWORD PTR [eax-0x32aec298],esp
  423492:	or     BYTE PTR [eax-0x1dc1d10a],0xa8
  423499:	int    0xa7
  42349b:	mov    ah,0x9c
  42349d:	mov    dl,0xfd
  42349f:	fnclex 
  4234a1:	(bad)  
  4234a2:	jnp    0x423479
  4234a4:	not    BYTE PTR [eax-0xc37f45]
  4234aa:	or     DWORD PTR ds:0x3f29ae86,esi
  4234b0:	hlt    
  4234b1:	add    edi,esp
  4234b3:	pop    ecx
  4234b4:	sar    edx,cl
  4234b6:	js     0x4234f6
  4234b8:	xchg   ebp,eax
  4234b9:	and    bl,ah
  4234bb:	xchg   edi,eax
  4234bc:	neg    DWORD PTR [esi]
  4234be:	ror    BYTE PTR [ecx+0x6ebc72e8],0xc0
  4234c5:	mov    ecx,0x3418a222
  4234ca:	jnp    0x423483
  4234cc:	aaa    
  4234cd:	mov    WORD PTR [ebx+0xd],?
  4234d0:	shr    BYTE PTR fs:[ebx+0x5f],cl
  4234d4:	pop    edx
  4234d5:	fnstenv [edx]
  4234d7:	fiadd  WORD PTR [ebx]
  4234d9:	int3   
  4234da:	push   ecx
  4234db:	and    DWORD PTR [ebp+0x67],esi
  4234de:	cmp    al,BYTE PTR [ecx+edi*2-0x533ab2b2]
  4234e5:	in     al,dx
  4234e6:	xor    DWORD PTR [esi-0xe],esi
  4234e9:	or     al,0xe9
  4234eb:	ja     0x4234d6
  4234ed:	xchg   BYTE PTR [ecx-0x1d1508f8],ah
  4234f3:	call   0x6b704fbc
  4234f8:	sahf   
  4234f9:	lods   al,BYTE PTR ss:[esi]
  4234fb:	aad    0xdf
  4234fd:	dec    edi
  4234fe:	jne    0x423538
  423500:	fwait
  423501:	cmp    dh,BYTE PTR [ecx+0x5d]
  423504:	push   cs
  423505:	call   0x8967:0x31b226f6
  42350c:	mov    edi,0x27b8a466
  423511:	mov    ebp,0x61e03a1c
  423516:	stc    
  423517:	imul   edx,DWORD PTR [eax+0x7],0x395eee94
  42351e:	pop    ss
  42351f:	test   bl,bl
  423521:	mov    edi,0x2f787f51
  423526:	push   edx
  423527:	iret   
  423528:	xor    BYTE PTR ds:0xc0059268,ah
  42352e:	and    bh,BYTE PTR [bp+0x2fab]
  423533:	mov    ch,0x94
  423535:	inc    ecx
  423536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423537:	mov    ebx,0x95668940
  42353c:	outs   dx,DWORD PTR ds:[esi]
  42353d:	adc    BYTE PTR [edi+0x46b28d5e],0xc6
  423544:	mov    al,ds:0x46e24e21
  423549:	adc    eax,0xa5ca8def
  42354e:	rcl    BYTE PTR [edi],0xb1
  423551:	repnz test BYTE PTR [ebp+0x6],dl
  423555:	mov    ds:0x1967015b,eax
  42355a:	push   ds
  42355b:	mov    al,BYTE PTR [ebp+0x29b78c50]
  423561:	(bad)  
  423562:	ja     0x4234ea
  423564:	cmp    ebx,DWORD PTR [eax+0x6db3ca66]
  42356a:	rol    BYTE PTR [esi],1
  42356c:	push   ecx
  42356d:	push   ebp
  42356e:	push   esp
  42356f:	mov    al,0x72
  423571:	ss fwait
  423573:	shl    BYTE PTR [ebx+0x3],0x5
  423577:	aad    0x9a
  423579:	bound  ecx,QWORD PTR [edx]
  42357b:	and    eax,0x63d3b953
  423580:	jl     0x423601
  423582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423583:	imul   eax,DWORD PTR [eax],0x4a
  423586:	cmp    dl,ah
  423588:	push   edi
  423589:	sub    eax,0x486a9fcb
  42358e:	(bad)  
  42358f:	sti    
  423590:	(bad)  
  423591:	push   es
  423592:	push   eax
  423593:	mov    ebp,0x7bba91e9
  423598:	in     eax,dx
  423599:	int    0x16
  42359b:	rcl    DWORD PTR [ecx-0x4e],1
  42359e:	cmp    BYTE PTR [esi+0xa],bh
  4235a1:	xlat   BYTE PTR ds:[ebx]
  4235a2:	and    DWORD PTR [esi],edi
  4235a4:	lock mov al,0x3
  4235a7:	and    ah,al
  4235a9:	pop    eax
  4235aa:	cmp    BYTE PTR [ebx-0x5eda7a5e],dl
  4235b0:	es repz pop eax
  4235b3:	mov    esp,0x53c2d44
  4235b8:	(bad)  
  4235b9:	and    ecx,esp
  4235bb:	and    edx,DWORD PTR [esi-0x51]
  4235be:	xchg   ecx,eax
  4235bf:	sub    DWORD PTR [ecx-0x22c66128],ebp
  4235c5:	nop
  4235c6:	mov    edx,?
  4235c8:	and    cl,BYTE PTR [esi+0x3d78c091]
  4235ce:	test   dh,dh
  4235d0:	ficomp DWORD PTR [edi+0x1f]
  4235d3:	cmp    ch,BYTE PTR ds:0x92875301
  4235d9:	cmp    BYTE PTR [eax+ebx*8-0x6d],ah
  4235dd:	and    eax,0x89e13fad
  4235e2:	scas   eax,DWORD PTR es:[edi]
  4235e3:	xchg   ebx,eax
  4235e4:	lahf   
  4235e5:	aad    0x41
  4235e7:	sub    ch,al
  4235e9:	push   0xa1174730
  4235ee:	sub    bl,BYTE PTR [esi-0x2dfa1a46]
  4235f4:	gs loopne 0x4235c9
  4235f7:	fisttp DWORD PTR [ecx+0xd]
  4235fa:	dec    ebx
  4235fb:	cmp    DWORD PTR [esi],0xf4bd9329
  423601:	mov    ecx,0x401ff595
  423606:	cmp    al,0x9c
  423608:	fld1   
  42360a:	addr16 mov dl,0x55
  42360d:	or     cl,al
  42360f:	cmp    al,BYTE PTR [esi-0x5e]
  423612:	ror    al,cl
  423614:	ret    
  423615:	xor    DWORD PTR [edi-0x14337f3d],0xd8319550
  42361f:	repnz imul eax,DWORD PTR [esi-0x41],0xae1919ff
  423627:	clc    
  423628:	cli    
  423629:	mov    ebp,0xef3aff31
  42362e:	add    ecx,DWORD PTR [esi-0x1478afbc]
  423634:	xlat   BYTE PTR ds:[ebx]
  423635:	lds    edi,FWORD PTR [esi]
  423637:	bound  edx,QWORD PTR [edi-0x25]
  42363a:	aaa    
  42363b:	sbb    eax,0xc17d0249
  423640:	cmp    eax,0xfe10dac
  423645:	cwde   
  423646:	dec    eax
  423647:	fisubr WORD PTR [ecx+ecx*2]
  42364a:	(bad)
  42364d:	mov    eax,ds:0x7863d2fa
  423652:	mov    ch,0x88
  423654:	hlt    
  423655:	lea    esp,[edx+0x4f]
  423658:	pop    ds
  423659:	repz or esi,DWORD PTR [esi+0x1fae76e9]
  423660:	xor    eax,0x43599bbd
  423665:	cmp    cl,BYTE PTR [edi]
  423667:	aas    
  423668:	sti    
  423669:	inc    esi
  42366a:	mov    WORD PTR [edi],ss
  42366c:	and    al,0xeb
  42366e:	adc    ebp,DWORD PTR [esi-0x15]
  423671:	push   ebp
  423672:	idiv   DWORD PTR [ecx+0x16]
  423675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423676:	mov    eax,ds:0xb6c107a8
  42367b:	loope  0x423621
  42367d:	sbb    edi,DWORD PTR [edx]
  42367f:	add    bh,BYTE PTR [esi]
  423681:	mov    cl,0x30
  423683:	test   BYTE PTR [edi-0x3e612dfa],0xd8
  42368a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42368b:	mov    ds,WORD PTR [edx]
  42368d:	retf   0xf174
  423690:	dec    ecx
  423691:	push   ecx
  423692:	aaa    
  423693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423694:	retf   
  423695:	xchg   ecx,eax
  423696:	arpl   WORD PTR [esi-0x32],dx
  423699:	and    bh,bh
  42369b:	pop    es
  42369c:	mov    ebp,0xa657ffc6
  4236a1:	cmp    ecx,DWORD PTR ds:0xa2d17561
  4236a7:	ins    DWORD PTR es:[edi],dx
  4236a8:	test   BYTE PTR [edx],dl
  4236aa:	pop    eax
  4236ab:	loope  0x4236de
  4236ad:	dec    BYTE PTR ds:0x487b4a61
  4236b3:	ds iret 
  4236b5:	lds    esi,FWORD PTR [edx+0x27]
  4236b8:	loopne 0x42367d
  4236ba:	ret    0x26d4
  4236bd:	out    0x1e,al
  4236bf:	sub    al,0xa0
  4236c1:	repz or BYTE PTR [ecx],cl
  4236c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c5:	(bad)  
  4236c6:	mov    al,0x76
  4236c8:	inc    ecx
  4236c9:	mov    WORD PTR [edi+eax*4-0x7c],ss
  4236cd:	push   eax
  4236ce:	cli    
  4236cf:	inc    edx
  4236d0:	and    ch,BYTE PTR [ebx-0x70]
  4236d3:	retf   
  4236d4:	xor    ebp,eax
  4236d6:	jle    0x423682
  4236d8:	pop    ecx
  4236d9:	cmp    edx,0xffffffc6
  4236dc:	push   ebp
  4236dd:	pop    ss
  4236de:	repnz inc edx
  4236e0:	cs out 0x5b,eax
  4236e3:	shl    BYTE PTR [edx-0x29c2a153],1
  4236e9:	mov    BYTE PTR [ebx+0x53],bl
  4236ec:	outs   dx,DWORD PTR ds:[esi]
  4236ed:	jecxz  0x423672
  4236ef:	stos   BYTE PTR es:[edi],al
  4236f0:	xchg   esi,eax
  4236f1:	inc    edx
  4236f2:	std    
  4236f3:	push   cs
  4236f4:	clc    
  4236f5:	(bad)  
  4236f6:	sub    ch,bh
  4236f8:	imul   eax,edx,0x17
  4236fb:	pop    ss
  4236fc:	rcl    BYTE PTR ds:0x2d8279da,0x98
  423703:	jo     0x423714
  423705:	inc    ebp
  423706:	push   0xb523c7c1
  42370b:	dec    esi
  42370c:	repnz sub esp,DWORD PTR [esi+ebp*1]
  423710:	mov    ds:0x5def0234,eax
  423715:	pop    ss
  423716:	and    bh,BYTE PTR [ecx-0x2d6edd3b]
  42371c:	pop    es
  42371d:	mov    ebp,0xa09a93e
  423722:	sub    al,0x4
  423724:	mov    ss,esi
  423726:	add    edx,DWORD PTR [edx-0x23]
  423729:	test   DWORD PTR [eax+0x34],eax
  42372c:	sbb    al,0x1f
  42372e:	cmc    
  42372f:	add    DWORD PTR [edx+0x3d3a9c57],edi
  423735:	xor    esp,ebp
  423737:	push   ss
  423738:	iret   
  423739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42373a:	xchg   edx,eax
  42373b:	pop    ecx
  42373c:	adc    al,BYTE PTR [ebx-0x22]
  42373f:	ret    
  423740:	push   cs
  423741:	cmp    bh,BYTE PTR [ecx]
  423743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423744:	sub    eax,0x5026fc58
  423749:	in     al,0xf5
  42374b:	inc    edi
  42374c:	shl    BYTE PTR [ebx+eiz*2],0xae
  423750:	mov    ds:0x1f40f276,eax
  423755:	outs   dx,BYTE PTR ds:[esi]
  423756:	add    bh,BYTE PTR [esi]
  423758:	xchg   edi,eax
  423759:	and    edi,DWORD PTR [edx+0x69]
  42375c:	adc    bl,cl
  42375e:	popa   
  42375f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423760:	mov    al,0x94
  423762:	dec    edx
  423763:	jmp    0xc6:0x22b78022
  42376a:	mov    DWORD PTR [ebp-0x6d],ecx
  42376d:	push   ebx
  42376e:	cmp    DWORD PTR [esi],0xffffffe9
  423771:	and    cl,bh
  423773:	mov    bh,dh
  423775:	push   esp
  423776:	in     eax,dx
  423777:	mov    edi,DWORD PTR [ecx+0x7b208078]
  42377d:	push   0x13ad4a67
  423782:	(bad)  
  423784:	dec    ecx
  423785:	out    0x99,eax
  423787:	and    eax,0xb449d03f
  42378c:	cs pop es
  42378e:	sub    BYTE PTR [edi],ch
  423790:	retf   
  423791:	sub    al,0x40
  423793:	mov    bl,0x8
  423795:	sub    eax,0xdaaa4855
  42379a:	jb     0x4237a2
  42379c:	int3   
  42379d:	mov    esp,DWORD PTR ds:0x30a02ce0
  4237a3:	mov    ah,BYTE PTR [eax-0x56]
  4237a6:	pop    esi
  4237a7:	cmp    eax,0xe986fa96
  4237ac:	jmp    0xf8d:0x29122373
  4237b3:	cld    
  4237b4:	outs   dx,BYTE PTR ds:[esi]
  4237b5:	jns    0x4237ca
  4237b7:	pop    es
  4237b8:	scas   al,BYTE PTR es:[edi]
  4237b9:	in     eax,0x98
  4237bb:	adc    bl,BYTE PTR [edi]
  4237bd:	sbb    BYTE PTR [ebp-0x3a],bh
  4237c0:	jns    0x4237b4
  4237c2:	repz enter 0xe909,0xaf
  4237c7:	outs   dx,DWORD PTR ds:[esi]
  4237c8:	aaa    
  4237c9:	pop    edi
  4237ca:	mov    esp,0x9550801d
  4237cf:	nop
  4237d0:	mov    WORD PTR [ebp+0x66],?
  4237d3:	sbb    bl,al
  4237d5:	fwait
  4237d6:	mov    ds:0x1bdda475,al
  4237db:	arpl   WORD PTR [esi],si
  4237dd:	mov    bl,BYTE PTR [eax+0x3a]
  4237e0:	mov    BYTE PTR [ebx-0x5f5871be],cl
  4237e6:	pop    ds
  4237e7:	(bad)  
  4237e8:	mov    BYTE PTR [esi-0x5f935770],ah
  4237ee:	sub    ah,BYTE PTR [eax+0x78bb8e04]
  4237f4:	sub    al,BYTE PTR [esi]
  4237f6:	mov    ?,WORD PTR [eax]
  4237f8:	sbb    DWORD PTR [ebx-0x62],eax
  4237fb:	jl     0x423870
  4237fd:	jmp    0x4237d2
  4237ff:	(bad)
  423802:	adc    edx,DWORD PTR [esi]
  423804:	in     al,dx
  423805:	sbb    BYTE PTR ds:0x2e8ee161,dh
  42380b:	ss aaa 
  42380d:	retf   0xd5
  423810:	jns    0x423832
  423812:	sbb    al,0x3
  423814:	cmc    
  423815:	mov    BYTE PTR [eax+0x3a],dl
  423818:	dec    ebx
  423819:	(bad)  
  42381a:	sti    
  42381b:	in     eax,0x76
  42381d:	cld    
  42381e:	jnp    0x4237c7
  423820:	in     eax,0x21
  423822:	dec    esp
  423823:	ret    0xa67e
  423826:	and    eax,0xbc8e60e1
  42382b:	jl     0x4237dd
  42382d:	push   es
  42382e:	aaa    
  42382f:	popa   
  423830:	push   edx
  423831:	mov    cl,BYTE PTR [ebx]
  423833:	rol    DWORD PTR [edx-0x3f2da746],0x5d
  42383a:	add    esi,DWORD PTR [eax+0x5971fe43]
  423840:	add    al,0xb7
  423842:	inc    edi
  423843:	jb     0x423807
  423845:	imul   ebx,edi,0xa3cf3b5f
  42384b:	push   ebx
  42384c:	cwde   
  42384d:	sahf   
  42384e:	mov    eax,0xf98f38b6
  423853:	mov    esi,0x73c57882
  423858:	lea    edi,[ebx]
  42385a:	jge    0x423833
  42385c:	sub    cl,cl
  42385e:	shr    BYTE PTR [edi+0x23],1
  423861:	fnsave [ebp+edx*1+0x250fe5f7]
  423868:	and    BYTE PTR [eax-0x4b],cl
  42386b:	int    0x2d
  42386d:	rcl    BYTE PTR [ebp+0x41d48d5b],cl
  423873:	mov    edi,0x9ad425d
  423878:	push   esi
  423879:	ds (bad) 
  42387b:	cld    
  42387c:	scas   al,BYTE PTR es:[edi]
  42387d:	retf   0x4ed
  423880:	daa    
  423881:	sub    DWORD PTR [ebx],esi
  423883:	pusha  
  423884:	push   ebp
  423885:	mov    DWORD PTR [edi-0x7e9aac3a],eax
  42388b:	push   esp
  42388c:	inc    eax
  42388d:	mov    WORD PTR [ebx+eax*8-0x40],gs
  423891:	sbb    BYTE PTR [ebp-0x716da494],dh
  423897:	push   esi
  423898:	sbb    dh,BYTE PTR [esi]
  42389a:	stos   BYTE PTR es:[edi],al
  42389b:	sub    BYTE PTR [ecx-0x745eac1c],ah
  4238a1:	sub    esi,edx
  4238a3:	inc    ecx
  4238a4:	ins    BYTE PTR es:[edi],dx
  4238a5:	in     al,0x22
  4238a7:	outs   dx,BYTE PTR ds:[esi]
  4238a8:	sar    ebp,cl
  4238aa:	pushf  
  4238ab:	cs loop 0x423894
  4238ae:	outs   dx,BYTE PTR ds:[esi]
  4238af:	inc    ebx
  4238b0:	xchg   ebp,eax
  4238b1:	jg     0x423846
  4238b3:	test   eax,0xc1566e37
  4238b8:	loopne 0x42390e
  4238ba:	sub    al,0xb4
  4238bc:	arpl   WORD PTR [edi-0x5d68ee34],cx
  4238c2:	push   ebx
  4238c3:	inc    edi
  4238c4:	(bad)  
  4238c5:	jmp    0x50c1:0x4c1d3e77
  4238cc:	pop    es
  4238cd:	pop    ds
  4238ce:	push   ebp
  4238cf:	shl    BYTE PTR [ebx+0x43],cl
  4238d2:	pop    ebp
  4238d3:	sbb    dh,ch
  4238d5:	stc    
  4238d6:	and    BYTE PTR [edx],al
  4238d8:	mov    dh,0xe9
  4238da:	imul   ebx,DWORD PTR [ebx+0x349d73db],0x649c2399
  4238e4:	(bad)  
  4238e5:	adc    eax,0x3afd3a19
  4238ea:	pop    ds
  4238eb:	fadd   DWORD PTR [ebx+eax*4+0x4967ff8b]
  4238f2:	xlat   BYTE PTR ds:[ebx]
  4238f3:	dec    BYTE PTR [esi+0x40e6625c]
  4238f9:	inc    esp
  4238fa:	data16 mov dl,0xff
  4238fd:	jo     0x42396a
  4238ff:	jbe    0x4238a9
  423901:	cmp    eax,0xac05cddb
  423906:	(bad)  
  423907:	shl    dh,cl
  423909:	rcl    BYTE PTR [eax+0x1cdcbb9f],0x1a
  423910:	cli    
  423911:	sbb    al,0x9e
  423913:	jg     0x423925
  423915:	mov    eax,0x6dee0d99
  42391a:	call   0x1eac:0x44c6b82e
  423921:	iret   
  423922:	dec    esi
  423923:	ds clc 
  423925:	xor    DWORD PTR [ecx],eax
  423927:	enter  0x765b,0xfe
  42392b:	test   DWORD PTR [eax],eax
  42392d:	popa   
  42392e:	cmp    al,0x30
  423930:	js     0x42399f
  423932:	icebp  
  423933:	fadd   DWORD PTR [eax-0x2b]
  423936:	or     DWORD PTR [edx-0x26],esp
  423939:	and    eax,0x8562591e
  42393e:	into   
  42393f:	inc    edx
  423940:	sti    
  423941:	aad    0xd0
  423943:	pop    edi
  423944:	mov    bh,BYTE PTR [eax]
  423946:	and    ebp,edi
  423948:	dec    esp
  42394a:	(bad)  
  42394b:	lahf   
  42394c:	and    eax,0xb15def2f
  423951:	jno    0x42395d
  423953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423954:	loopne 0x423970
  423956:	call   0xe1d0:0xc16c8072
  42395d:	or     DWORD PTR ds:[eax],esi
  423960:	repnz push ebp
  423962:	jbe    0x4239a7
  423964:	cld    
  423965:	sbb    BYTE PTR [esi-0x38],cl
  423968:	or     dl,BYTE PTR [esi+0x1b]
  42396b:	inc    edx
  42396c:	out    0x9,eax
  42396e:	push   eax
  42396f:	ds cli 
  423971:	jae    0x42396f
  423973:	div    BYTE PTR [edi]
  423975:	or     ecx,DWORD PTR [edx]
  423977:	xor    ecx,DWORD PTR [edx+0x30]
  42397a:	mov    bl,0xa9
  42397c:	adc    BYTE PTR [edi],ch
  42397e:	dec    ebp
  42397f:	pop    ds
  423980:	push   cs
  423981:	sbb    ebp,DWORD PTR [esi]
  423983:	inc    esp
  423984:	and    al,0x90
  423986:	jae    0x42392f
  423988:	adc    BYTE PTR ds:0xc26502af,bl
  42398e:	scas   eax,DWORD PTR es:[edi]
  42398f:	aaa    
  423990:	fisttp DWORD PTR [ebx-0x5e]
  423993:	call   0x517d9159
  423998:	fwait
  423999:	mov    ch,0x58
  42399b:	imul   eax,DWORD PTR [ecx-0x1e041548],0xd856b380
  4239a5:	push   eax
  4239a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239a7:	leave  
  4239a8:	jae    0x4239f9
  4239aa:	lods   al,BYTE PTR ds:[esi]
  4239ab:	stos   DWORD PTR es:[edi],eax
  4239ac:	add    al,0x9c
  4239ae:	inc    ebp
  4239af:	out    dx,al
  4239b0:	fldl2t 
  4239b2:	repnz stc 
  4239b4:	inc    ecx
  4239b5:	mov    al,dl
  4239b7:	sbb    eax,0xb4f4604f
  4239bc:	push   ds
  4239bd:	(bad)  
  4239be:	mov    al,0xd9
  4239c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c1:	or     BYTE PTR ds:0xffc7c18e,bh
  4239c7:	add    ecx,DWORD PTR [esi+0x7a]
  4239ca:	mov    WORD PTR [ebx-0x41b21a48],es
  4239d0:	clc    
  4239d1:	mov    esp,0x1094c45
  4239d6:	push   0x7e
  4239d8:	out    dx,al
  4239d9:	ret    0x2af4
  4239dc:	and    al,0xb9
  4239de:	push   edx
  4239df:	sub    ah,bl
  4239e1:	into   
  4239e2:	mov    bl,0xf7
  4239e4:	mov    ebp,0xfafafd7f
  4239e9:	nop    ecx
  4239ec:	jne    0x423991
  4239ee:	loope  0x423a69
  4239f0:	lds    edi,FWORD PTR [ebp+0x7e]
  4239f3:	mov    eax,eax
  4239f5:	xor    DWORD PTR [eax+0x3f83ce0f],ecx
  4239fb:	ret    0x3200
  4239fe:	pop    edi
  4239ff:	pop    ebx
  423a00:	xchg   ecx,eax
  423a01:	pop    ds
  423a02:	xchg   ebp,eax
  423a03:	sbb    edx,DWORD PTR [eax-0x60fba9a]
  423a09:	or     dh,0x85
  423a0c:	pop    ecx
  423a0d:	lds    esp,FWORD PTR [esi+eiz*8-0x4b]
  423a11:	sti    
  423a12:	mov    WORD PTR [ebp-0x5b],?
  423a15:	es ret 0x9587
  423a19:	dec    ebp
  423a1a:	jnp    0x423a70
  423a1c:	dec    edx
  423a1d:	addr16 jg 0x4239c8
  423a20:	pop    ss
  423a21:	sub    eax,0x61fcee8
  423a26:	into   
  423a27:	std    
  423a28:	shr    BYTE PTR [ebx+0x38edfcba],1
  423a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a2f:	pop    esp
  423a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a31:	and    al,0x89
  423a33:	fcom   QWORD PTR [edx-0x13]
  423a36:	nop
  423a37:	sub    al,0x92
  423a39:	fidivr DWORD PTR [ecx]
  423a3b:	in     al,dx
  423a3c:	inc    edi
  423a3d:	xchg   ecx,eax
  423a3e:	xchg   ebp,eax
  423a3f:	aad    0x8e
  423a41:	bound  ebx,QWORD PTR ds:0xb41b833f
  423a47:	inc    eax
  423a48:	leave  
  423a49:	push   0x10
  423a4b:	ins    DWORD PTR es:[edi],dx
  423a4c:	clc    
  423a4d:	call   0x17:0x729f6fe8
  423a54:	int3   
  423a55:	rol    esi,1
  423a57:	jns    0x423a50
  423a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a5a:	xchg   DWORD PTR [esi-0x10],edx
  423a5d:	(bad)  
  423a5e:	pop    esp
  423a5f:	mov    dh,0x5
  423a61:	push   edx
  423a62:	pop    esi
  423a63:	push   esi
  423a64:	pop    es
  423a65:	jbe    0x4239f5
  423a67:	mov    ah,al
  423a69:	cmp    DWORD PTR ds:0x6097480c,ebp
  423a6f:	mov    esi,0xae9f7d45
  423a74:	mov    ds:0x8e1447ac,al
  423a79:	mov    dl,0x12
  423a7b:	xchg   esi,eax
  423a7c:	or     DWORD PTR [ebx+edx*2-0x10],ecx
  423a80:	xor    eax,0x7ec8bb92
  423a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a86:	inc    edx
  423a87:	cmp    BYTE PTR [eax-0x5d38ea36],0xae
  423a8e:	cld    
  423a8f:	xor    ah,BYTE PTR [edi-0x45557ec4]
  423a95:	xchg   BYTE PTR [ecx+0x6fdefada],ah
  423a9b:	push   edx
  423a9c:	and    eax,0x7b27fe06
  423aa1:	outs   dx,DWORD PTR ds:[esi]
  423aa2:	iret   
  423aa3:	mov    bl,0x9b
  423aa5:	push   esi
  423aa6:	jo     0x423abb
  423aa8:	int3   
  423aa9:	mov    dh,0x4a
  423aab:	(bad)
  423aaf:	jno    0x423b0d
  423ab1:	aad    0x82
  423ab3:	sti    
  423ab4:	int    0xac
  423ab6:	pop    esi
  423ab7:	mov    BYTE PTR [ecx+ebp*4],al
  423aba:	xor    cl,cl
  423abc:	mov    ebx,0x878499f8
  423ac1:	jmp    0x423a5c
  423ac3:	or     edi,0xffffffdb
  423ac6:	mov    ah,0xe6
  423ac8:	ret    0x8b4f
  423acb:	outs   dx,DWORD PTR ds:[esi]
  423acc:	dec    edx
  423acd:	pusha  
  423ace:	pop    ebp
  423acf:	fprem  
  423ad1:	jns    0x423a57
  423ad3:	in     eax,dx
  423ad4:	xor    eax,0xfbdc242
  423ad9:	sub    ah,0x88
  423adc:	fdivr  DWORD PTR [eax-0x7870fe5e]
  423ae2:	cwde   
  423ae3:	jns    0x423a6e
  423ae5:	je     0x423a91
  423ae7:	jo     0x423ab3
  423ae9:	mov    ah,0x70
  423aeb:	lods   al,BYTE PTR ds:[esi]
  423aec:	xor    eax,0xf2f58309
  423af1:	sbb    ah,bl
  423af3:	iret   
  423af4:	xchg   edx,eax
  423af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af6:	dec    esp
  423af7:	pop    ebp
  423af8:	mov    esp,0x5632f122
  423afd:	cdq    
  423afe:	mov    ebp,0xfb9c1642
  423b03:	mov    al,0x1e
  423b05:	push   esi
  423b06:	or     al,0xae
  423b08:	in     eax,0x4e
  423b0a:	(bad)  
  423b0b:	pop    ds
  423b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b0d:	fwait
  423b0e:	xchg   esi,eax
  423b0f:	test   eax,0x617c8e04
  423b14:	in     al,0x3
  423b16:	in     al,dx
  423b17:	ret    
  423b18:	cmp    DWORD PTR ds:0x884f038a,0xfffffff3
  423b1f:	jnp    0x423b9b
  423b21:	fnsave [edi]
  423b23:	pop    ecx
  423b25:	xor    DWORD PTR [esi-0x72],ebp
  423b28:	mov    ds:0x939b99d0,al
  423b2d:	mov    WORD PTR [edi],?
  423b2f:	fldenv [ecx]
  423b31:	jne    0x423ac0
  423b33:	mov    ds:0xed996253,al
  423b38:	in     eax,0xd4
  423b3a:	les    edx,FWORD PTR ds:0x86c538ac
  423b40:	jge    0x423af0
  423b42:	jbe    0x423b42
  423b44:	dec    edx
  423b45:	arpl   WORD PTR [edi+0x25],dx
  423b48:	jne    0x423ae7
  423b4a:	or     edi,DWORD PTR [ebx+0x7ca39053]
  423b50:	cmp    BYTE PTR [edi-0x33],dl
  423b53:	adc    edx,DWORD PTR [ebx+esi*1+0x49bf665]
  423b5a:	and    DWORD PTR [edx],eax
  423b5c:	pushf  
  423b5d:	ror    BYTE PTR [ebp+ecx*1-0x451a050d],0x84
  423b65:	lock in eax,dx
  423b67:	fnsave [ebp+0x25d4805b]
  423b6d:	cmp    eax,0x94d750c6
  423b72:	push   edx
  423b73:	in     al,0x5c
  423b75:	add    cl,ch
  423b77:	jmp    0xc6f8:0xe108f078
  423b7e:	adc    BYTE PTR [ecx-0x2c9aa101],ah
  423b84:	mov    ss,WORD PTR ds:0x9530e9d8
  423b8a:	(bad)  
  423b8b:	jns    0x423ba4
  423b8d:	in     al,0x11
  423b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b90:	xchg   esi,eax
  423b91:	xchg   ebp,eax
  423b92:	push   cs
  423b93:	and    ah,BYTE PTR [edi+0x37]
  423b96:	(bad)  
  423b97:	mov    edi,DWORD PTR [esi-0x5d]
  423b9a:	adc    ecx,DWORD PTR [edi]
  423b9c:	xchg   esi,edi
  423b9e:	mov    al,0xa8
  423ba0:	push   cs
  423ba1:	int3   
  423ba2:	loopne 0x423b38
  423ba4:	inc    ebp
  423ba5:	dec    ebp
  423ba6:	repnz lods eax,DWORD PTR ds:[esi]
  423ba8:	lahf   
  423ba9:	(bad)  
  423baa:	xchg   edi,eax
  423bab:	jo     0x423bed
  423bad:	mov    dh,0xab
  423baf:	mov    gs,esp
  423bb1:	not    BYTE PTR [eax+0x13]
  423bb4:	repz mov ah,0x3c
  423bb7:	stc    
  423bb8:	pop    esp
  423bb9:	push   cs
  423bba:	jp     0x423b84
  423bbc:	fild   QWORD PTR [edi+0x3369a35c]
  423bc2:	push   edx
  423bc3:	inc    esp
  423bc4:	test   DWORD PTR [ebp+0x2e],ebx
  423bc7:	xor    DWORD PTR [eax],0x6
  423bca:	inc    edi
  423bcb:	clc    
  423bcc:	pop    edi
  423bcd:	inc    edi
  423bce:	aaa    
  423bcf:	ja     0x423c0f
  423bd1:	bound  ebp,QWORD PTR [ebx]
  423bd3:	(bad)
  423bd6:	ja     0x423c26
  423bd8:	adc    al,0x30
  423bda:	neg    DWORD PTR [edi-0x45]
  423bdd:	mov    dl,0x88
  423bdf:	jno    0x423b75
  423be1:	inc    esi
  423be2:	in     al,dx
  423be3:	cmp    DWORD PTR [eax],ebx
  423be5:	std    
  423be6:	mov    al,ds:0x140daf6f
  423beb:	rol    BYTE PTR [edi+0x5539e35b],cl
  423bf1:	test   al,dh
  423bf3:	out    0x50,al
  423bf5:	ret    0xbe7b
  423bf8:	push   eax
  423bf9:	cmp    ah,BYTE PTR [eax+ebp*2]
  423bfc:	aas    
  423bfd:	xor    al,0x2a
  423bff:	addr16 xor eax,0x24fdf96e
  423c05:	scas   al,BYTE PTR es:[edi]
  423c06:	jno    0x423c7c
  423c08:	inc    ecx
  423c09:	jb     0x423bcc
  423c0b:	scas   al,BYTE PTR es:[edi]
  423c0c:	sbb    ah,BYTE PTR [edi+esi*2-0x7298a7b5]
  423c13:	cmp    esp,DWORD PTR [edi]
  423c15:	xchg   esp,eax
  423c16:	cmp    al,0x4d
  423c18:	pop    edx
  423c19:	push   esi
  423c1a:	jno    0x423bcc
  423c1c:	fiadd  WORD PTR [ebp-0x716478b]
  423c22:	push   ebx
  423c23:	inc    edx
  423c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c25:	in     eax,dx
  423c26:	inc    edi
  423c27:	sbb    dl,ah
  423c29:	pushfw 
  423c2b:	dec    ebx
  423c2c:	call   0x2086:0x3bbacc64
  423c33:	std    
  423c34:	jb     0x423c1a
  423c36:	xor    ebp,esp
  423c38:	in     al,dx
  423c39:	ds push edi
  423c3b:	add    eax,0x696ee9f2
  423c40:	pop    edx
  423c41:	(bad)
  423c45:	scas   eax,DWORD PTR es:[edi]
  423c46:	xor    BYTE PTR [ebx-0x35518bb5],bh
  423c4c:	in     eax,dx
  423c4d:	push   cs
  423c4e:	xchg   edx,eax
  423c4f:	dec    ebp
  423c50:	ss inc edx
  423c52:	lods   eax,DWORD PTR ds:[esi]
  423c53:	jp     0x423c99
  423c55:	cli    
  423c56:	xor    eax,0x8954c729
  423c5b:	icebp  
  423c5c:	inc    BYTE PTR [edi]
  423c5e:	push   ebp
  423c5f:	sbb    al,0x5f
  423c61:	mov    ebp,0x7370aeac
  423c66:	dec    eax
  423c67:	inc    ebx
  423c68:	stc    
  423c69:	xor    BYTE PTR [eax],bl
  423c6b:	shr    DWORD PTR [edi-0x27ef1972],0x0
  423c72:	lods   al,BYTE PTR ds:[esi]
  423c73:	rcr    dl,0x49
  423c76:	mov    ds:0x5622e5a8,al
  423c7b:	xchg   ebp,eax
  423c7c:	mov    cl,0x36
  423c7e:	cmovp  ebp,DWORD PTR [eax+0x5aea5f86]
  423c85:	pop    esp
  423c86:	inc    edx
  423c87:	retf   0xabae
  423c8a:	inc    ebp
  423c8b:	push   ebp
  423c8c:	pop    ebx
  423c8d:	je     0x423ce4
  423c8f:	mov    esi,0x280a4af6
  423c94:	sbb    al,0x17
  423c96:	pushf  
  423c97:	xchg   edx,eax
  423c98:	not    DWORD PTR [ebp-0x49c9e16]
  423c9e:	xchg   ebx,eax
  423c9f:	fcom   st(3)
  423ca1:	icebp  
  423ca2:	or     esp,DWORD PTR [edx+0x1a]
  423ca5:	lds    esi,FWORD PTR [edx]
  423ca7:	xlat   BYTE PTR ds:[ebx]
  423ca8:	xchg   BYTE PTR [ebx+0x29084425],ch
  423cae:	ins    DWORD PTR es:[edi],dx
  423caf:	inc    ecx
  423cb0:	pop    esi
  423cb1:	scas   eax,DWORD PTR es:[edi]
  423cb2:	jge    0x423ce1
  423cb4:	pop    es
  423cb5:	dec    esi
  423cb6:	das    
  423cb7:	rcl    ebp,0x47
  423cba:	mov    al,ds:0x1f0c1fdb
  423cbf:	cmp    ebp,DWORD PTR [edx+ebp*8-0x1f]
  423cc3:	adc    al,BYTE PTR [esi]
  423cc5:	or     al,0x5b
  423cc7:	mov    ch,0x6d
  423cc9:	fild   DWORD PTR [ebx+0x77]
  423ccc:	cmp    BYTE PTR [ecx+0x58],dl
  423ccf:	pop    ecx
  423cd0:	ss mov al,bh
  423cd3:	dec    edi
  423cd4:	icebp  
  423cd5:	mov    ah,0xae
  423cd7:	call   0xbf3a:0x80b5d30e
  423cde:	mov    ah,0x77
  423ce0:	stc    
  423ce1:	shl    DWORD PTR [edx],0x75
  423ce4:	jb     0x423c94
  423ce6:	jno    0x423d0e
  423ce8:	ins    DWORD PTR es:[edi],dx
  423ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cea:	sbb    BYTE PTR cs:[eax-0x3b],ah
  423cee:	mov    dh,0xe6
  423cf0:	test   eax,0xfa998ef0
  423cf5:	aad    0x52
  423cf7:	int3   
  423cf8:	xor    bh,dh
  423cfa:	push   esp
  423cfb:	cld    
  423cfc:	dec    edi
  423cfd:	or     esi,DWORD PTR [edi+0x417b7223]
  423d03:	adc    al,0x60
  423d05:	jmp    0xf146d2b2
  423d0a:	push   esp
  423d0b:	jmp    0x423cbc
  423d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d0e:	icebp  
  423d0f:	push   0xd0734421
  423d14:	cdq    
  423d15:	add    DWORD PTR [eax-0x5abc3e1f],0xffffff85
  423d1c:	mov    cr1,edi
  423d1f:	adc    eax,0x17eed78b
  423d24:	jae    0x423d9d
  423d26:	nop
  423d27:	mov    ds:0xf52dd239,eax
  423d2c:	bound  eax,QWORD PTR [edi]
  423d2e:	fld    QWORD PTR [eax-0x2c]
  423d31:	loopne 0x423daa
  423d33:	jmp    0xf847:0x87d021b3
  423d3a:	adc    eax,0x5e90587c
  423d3f:	dec    edx
  423d40:	xchg   esp,eax
  423d41:	jne    0x423d09
  423d43:	stos   DWORD PTR es:[di],eax
  423d45:	aas    
  423d46:	pop    esi
  423d47:	stos   BYTE PTR es:[edi],al
  423d48:	scas   eax,DWORD PTR es:[edi]
  423d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d4a:	lds    ebx,FWORD PTR ds:0x2dffd06b
  423d50:	jae    0x423d60
  423d52:	bound  esi,QWORD PTR [ecx]
  423d54:	sub    BYTE PTR [edx],bh
  423d56:	jae    0x423d6a
  423d58:	sbb    bl,BYTE PTR [edi+0x4a]
  423d5b:	add    al,ah
  423d5d:	push   ecx
  423d5e:	cli    
  423d5f:	pop    ecx
  423d60:	(bad)  
  423d61:	imul   eax,esp,0x95f28b10
  423d67:	add    BYTE PTR [ebx],bh
  423d69:	mov    ch,0xa8
  423d6b:	mov    eax,ds:0xe87d40e4
  423d70:	push   ebp
  423d71:	cli    
  423d72:	in     eax,dx
  423d73:	es pusha 
  423d75:	add    DWORD PTR [ebp+0x5f189667],ebx
  423d7b:	popa   
  423d7c:	lds    edx,FWORD PTR gs:[ecx-0x23]
  423d80:	push   edx
  423d81:	xor    DWORD PTR [ecx+ebx*1-0x13],edi
  423d85:	cmp    dl,BYTE PTR [esi+0x4a]
  423d88:	cli    
  423d89:	jmp    0x7dc0ef5d
  423d8e:	xchg   esi,eax
  423d8f:	inc    DWORD PTR [ebx-0x7a204fba]
  423d95:	jle    0x423dd7
  423d97:	ret    
  423d98:	add    DWORD PTR [edi-0x6f],0x1
  423d9c:	inc    ebx
  423d9d:	jns    0x423e04
  423d9f:	fst    DWORD PTR [edx+0x4ab6d352]
  423da5:	push   0x76b8adb8
  423daa:	adc    eax,0x55d28ab0
  423daf:	mov    dl,0x29
  423db1:	fsubp  st(7),st
  423db3:	dec    ebx
  423db4:	jae    0x423dd2
  423db6:	mov    al,ds:0x81988c2a
  423dbb:	mov    ebp,0xf6b6bc55
  423dc0:	lock pop es
  423dc2:	cmp    eax,0x743dadfc
  423dc7:	sub    eax,0x167be652
  423dcc:	mov    edi,0xe7b8aef5
  423dd1:	adc    esp,DWORD PTR [edi+0x110fd750]
  423dd7:	fwait
  423dd8:	push   0x8f0fe3b6
  423ddd:	cmp    BYTE PTR [eax+0x9],cl
  423de0:	xchg   esi,eax
  423de1:	aas    
  423de2:	sbb    eax,0xd432e845
  423de7:	hlt    
  423de8:	cdq    
  423de9:	int    0xde
  423deb:	and    DWORD PTR [ebx],edi
  423ded:	das    
  423dee:	adc    eax,0x87ad0be4
  423df3:	mov    ah,0x3
  423df5:	or     al,0x40
  423df7:	adc    al,0xf8
  423df9:	dec    eax
  423dfa:	dec    ebp
  423dfb:	sub    al,BYTE PTR [esi]
  423dfd:	cld    
  423dfe:	xor    edi,DWORD PTR [ecx-0x1e2f7ffd]
  423e04:	mov    edi,0x363e2b7a
  423e09:	and    BYTE PTR [ebp+eax*4-0x36adc39f],bh
  423e10:	daa    
  423e11:	sub    edx,DWORD PTR [edx+0x76]
  423e14:	xchg   ebp,eax
  423e15:	cs mov dh,0xe4
  423e18:	push   edi
  423e19:	(bad)  
  423e1a:	(bad)  
  423e1b:	jns    0x423e74
  423e1d:	cmp    edi,DWORD PTR [eax+0x7d77da57]
  423e23:	add    esi,ebp
  423e25:	aas    
  423e26:	in     eax,0x1b
  423e28:	fld    TBYTE PTR [ecx]
  423e2a:	ss aad 0xba
  423e2d:	ins    DWORD PTR es:[edi],dx
  423e2e:	popf   
  423e2f:	or     esi,edi
  423e31:	test   esp,ecx
  423e33:	xchg   edi,eax
  423e34:	mov    DWORD PTR [ebx-0x2a81b59f],edx
  423e3a:	ds pop edi
  423e3c:	jecxz  0x423de4
  423e3e:	jns    0x423e78
  423e40:	jl     0x423e9b
  423e42:	pop    edx
  423e43:	ror    BYTE PTR [eax],cl
  423e45:	sbb    esi,esp
  423e47:	out    dx,al
  423e48:	scas   eax,DWORD PTR es:[edi]
  423e49:	cmc    
  423e4a:	daa    
  423e4b:	mov    ds:0x86d29a35,eax
  423e50:	xchg   BYTE PTR [ecx],dl
  423e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e53:	sbb    DWORD PTR [ebx],ebp
  423e55:	mov    ds:0xbab1b2cd,eax
  423e5a:	mov    eax,0x7cb02638
  423e5f:	stc    
  423e60:	pop    es
  423e61:	loopne 0x423e46
  423e63:	cmp    BYTE PTR [edx-0x3d],cl
  423e66:	loop   0x423ed5
  423e68:	gs pop edi
  423e6a:	cmp    eax,0x27b0bb93
  423e6f:	lods   eax,DWORD PTR ds:[esi]
  423e70:	in     eax,dx
  423e71:	mov    BYTE PTR [ebp+ecx*1+0x71],0xfe
  423e76:	jae    0x423e0c
  423e78:	shr    BYTE PTR [ebx-0x47484f99],0xc9
  423e7f:	jmp    0x5c90:0xede2677f
  423e86:	imul   ecx,DWORD PTR [edi+0x1c981101],0x62
  423e8d:	cmp    dh,BYTE PTR [ebx-0x30]
  423e90:	pop    ecx
  423e91:	in     al,dx
  423e92:	mov    bl,0xc9
  423e94:	lock add esi,DWORD PTR [eax]
  423e97:	repnz pop edx
  423e99:	dec    esi
  423e9a:	std    
  423e9b:	into   
  423e9c:	in     al,0xbb
  423e9e:	add    al,0x53
  423ea0:	mov    ds:0x113a54bc,eax
  423ea5:	adc    DWORD PTR [esi-0x25],edx
  423ea8:	xchg   esi,eax
  423ea9:	test   ch,ah
  423eab:	sub    BYTE PTR [ebx+eiz*1-0x1c67cc4c],ah
  423eb2:	ror    BYTE PTR [eax-0x7eb459a0],1
  423eb8:	mov    eax,ds:0xc42a72c3
  423ebd:	and    al,0x29
  423ebf:	cmp    al,0x4c
  423ec1:	(bad)  
  423ec2:	jl     0x423ee5
  423ec4:	mov    bh,0x97
  423ec6:	add    al,0x50
  423ec8:	fstp   DWORD PTR [ebp+0x780fbf7e]
  423ece:	jnp    0x423e51
  423ed0:	cmp    eax,0xee6218a0
  423ed5:	fcom   st(2)
  423ed7:	dec    edi
  423ed8:	lock dec esi
  423eda:	adc    DWORD PTR [ebx],esi
  423edc:	repz je 0x423ef8
  423edf:	xor    al,0xeb
  423ee1:	dec    esp
  423ee2:	dec    ecx
  423ee3:	dec    ebp
  423ee4:	out    0x34,al
  423ee6:	enter  0x1769,0x6d
  423eea:	inc    esi
  423eeb:	push   esi
  423eec:	leave  
  423eed:	mov    esi,0x779af129
  423ef2:	imul   ebp,DWORD PTR [edx+eax*4+0x45dc355e],0xfffffffa
  423efa:	aas    
  423efb:	mov    ds:0x59c86dcb,eax
  423f00:	sub    edi,ebx
  423f02:	and    esp,DWORD PTR [esi-0x1c98cc07]
  423f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f09:	xor    al,0x13
  423f0b:	dec    esp
  423f0c:	mov    DWORD PTR [ebx+0x336b6834],eax
  423f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f13:	mov    dh,0xad
  423f15:	fcom   QWORD PTR [edx-0xd]
  423f18:	repz add al,0x33
  423f1b:	push   dx
  423f1d:	sub    eax,0xe94f561c
  423f22:	lods   eax,DWORD PTR ds:[esi]
  423f23:	cmp    DWORD PTR [ebx],edi
  423f25:	cmp    esi,eax
  423f27:	xor    bh,bl
  423f29:	or     ah,dh
  423f2b:	shl    BYTE PTR [ecx],0xd6
  423f2e:	(bad)  [ecx-0x2d]
  423f31:	pushf  
  423f32:	xchg   esi,eax
  423f33:	mov    eax,ds:0x80e8e9b1
  423f38:	aas    
  423f39:	or     bh,BYTE PTR [ecx-0x3]
  423f3c:	pushf  
  423f3d:	push   ecx
  423f3e:	lods   al,BYTE PTR ds:[esi]
  423f3f:	(bad)  
  423f40:	push   ebx
  423f41:	int3   
  423f42:	(bad)  
  423f43:	dec    esp
  423f44:	cs mov edi,edx
  423f47:	icebp  
  423f48:	(bad)  
  423f49:	xor    al,0xe9
  423f4b:	pop    esp
  423f4c:	mov    dh,0x7e
  423f4e:	aam    0x70
  423f50:	cmp    edx,esp
  423f52:	scas   eax,DWORD PTR es:[edi]
  423f53:	aas    
  423f54:	(bad)  
  423f55:	mov    ss,edx
  423f57:	sub    eax,0xd5560f6
  423f5c:	mov    BYTE PTR [ebx-0x37b79def],dh
  423f62:	mov    ds:0xf960ece8,eax
  423f67:	mov    al,al
  423f69:	sbb    ebx,DWORD PTR [ecx-0x76]
  423f6c:	dec    esi
  423f6d:	mov    ds:0xd6f9beda,al
  423f72:	mov    gs,WORD PTR ds:0x3709b573
  423f78:	lahf   
  423f79:	mov    ds,WORD PTR [ebx-0x53]
  423f7c:	mov    bl,0x15
  423f7e:	mov    eax,ds:0x46865c14
  423f83:	xchg   esi,eax
  423f84:	dec    edx
  423f85:	sar    dh,0x32
  423f88:	aam    0x20
  423f8a:	mov    ds:0xce7506b,al
  423f8f:	out    0xca,eax
  423f91:	cmc    
  423f92:	dec    ebx
  423f93:	enter  0x496b,0xf3
  423f97:	fild   WORD PTR [esi-0x11c7f804]
  423f9d:	pop    es
  423f9e:	cmp    edi,ebx
  423fa0:	pop    es
  423fa1:	push   0xffffffa5
  423fa3:	dec    ebp
  423fa5:	xchg   ecx,eax
  423fa6:	retf   0xa7be
  423fa9:	arpl   WORD PTR [ebx+0x29],sp
  423fac:	mov    edi,0x34e124bc
  423fb1:	outs   dx,DWORD PTR ds:[esi]
  423fb2:	xchg   ecx,eax
  423fb3:	test   eax,0xc7dd8687
  423fb8:	lods   eax,DWORD PTR ds:[esi]
  423fb9:	(bad)  
  423fbb:	aam    0x15
  423fbd:	mov    ah,0x40
  423fbf:	sar    DWORD PTR [edx+0x16],1
  423fc2:	sub    DWORD PTR [ebx+0x52f0dd2e],ebp
  423fc8:	mov    edi,0x6b493ae
  423fcd:	jge    0x423fa8
  423fcf:	retf   
  423fd0:	(bad)  
  423fd1:	sar    dl,cl
  423fd3:	inc    eax
  423fd4:	jno    0x423f72
  423fd6:	idiv   DWORD PTR [esi+0x18520aa6]
  423fdc:	push   ebp
  423fdd:	fcom   QWORD PTR [edi+ebx*4]
  423fe0:	jo     0x423fe0
  423fe2:	pop    esp
  423fe3:	and    eax,DWORD PTR [ebp+esi*2-0x72]
  423fe7:	push   edx
  423fe8:	xor    bh,0xa
  423feb:	(bad)  [esi-0x43]
  423fee:	daa    
  423fef:	xchg   ecx,eax
  423ff0:	jl     0x423fdc
  423ff2:	pop    ds
  423ff3:	mov    ebp,DWORD PTR [edx+0x34]
  423ff6:	loope  0x423fa2
  423ff8:	sub    BYTE PTR ds:0xf87a8ddf,dh
  423ffe:	cmp    edx,DWORD PTR [ebx]
  424000:	pop    ebx
  424001:	lahf   
  424002:	out    0x54,eax
  424004:	rcr    bh,0xd0
  424007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424008:	push   cs
  424009:	xor    ebp,DWORD PTR [esi+0x59556de2]
  42400f:	lods   al,BYTE PTR ds:[esi]
  424010:	pushf  
  424011:	sti    
  424012:	lock sub BYTE PTR [ebp+0xdba61b1],ah
  424019:	loopne 0x42402b
  42401b:	pop    esp
  42401c:	jnp    0x423fd1
  42401e:	mov    ds:0x89af2596,al
  424023:	pop    ebp
  424024:	out    0xcc,eax
  424026:	fld    DWORD PTR [eax+0x1b6903d6]
  42402c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42402d:	mov    WORD PTR [ebx+0xfe65af9],fs
  424033:	pop    ebx
  424034:	mov    bl,0xe
  424036:	jmp    0xcdaadd45
  42403b:	(bad)  
  42403c:	out    0x8d,al
  42403e:	lds    esp,FWORD PTR [esp+eax*2-0x52a2e724]
  424045:	lds    esp,FWORD PTR [eax+0x32]
  424048:	outs   dx,DWORD PTR ds:[esi]
  424049:	push   eax
  42404a:	scas   al,BYTE PTR es:[edi]
  42404b:	jns    0x424052
  42404d:	cmp    ebx,ecx
  42404f:	std    
  424050:	push   ds
  424051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424052:	repnz out 0xc8,eax
  424055:	stos   DWORD PTR es:[edi],eax
  424056:	call   0xea9:0x195e9a89
  42405d:	push   esi
  42405e:	pop    ds
  42405f:	sahf   
  424060:	sbb    BYTE PTR [eax-0x16229764],bl
  424066:	lds    ecx,FWORD PTR fs:0x268ef737
  42406d:	xchg   ebx,eax
  42406e:	lods   al,BYTE PTR ds:[esi]
  42406f:	imul   edi,DWORD PTR [ecx-0x634c6d4b],0xe2ae9640
  424079:	cmc    
  42407a:	jmp    0x3f16:0x97f4b351
  424081:	dec    esi
  424082:	outs   dx,BYTE PTR ds:[si]
  424084:	sti    
  424085:	div    BYTE PTR [esi-0x12]
  424088:	add    edi,DWORD PTR [ebx]
  42408a:	mov    ecx,0x4df42576
  42408f:	mov    esi,0x86b59e82
  424094:	fimul  DWORD PTR [ecx]
  424096:	fldcw  WORD PTR [esi+0x21]
  424099:	cld    
  42409a:	and    eax,0xbbcdfea7
  42409f:	xor    BYTE PTR [esp+ebp*2],bh
  4240a2:	sub    eax,0xc28312d0
  4240a7:	scas   eax,DWORD PTR es:[edi]
  4240a8:	inc    esi
  4240a9:	sbb    al,0xcd
  4240ab:	and    ebx,ebp
  4240ad:	add    esp,DWORD PTR [esi+ebp*2]
  4240b0:	cli    
  4240b1:	clc    
  4240b2:	jge    0x9784ae89
  4240b8:	fld    QWORD PTR [ecx-0x1da76b5b]
  4240be:	imul   edx,DWORD PTR [edx],0x2e
  4240c1:	and    ch,BYTE PTR [eax+0x5301e686]
  4240c7:	fsub   st(3),st
  4240c9:	pop    es
  4240ca:	stc    
  4240cb:	je     0x424102
  4240cd:	ror    cl,cl
  4240cf:	sti    
  4240d0:	lock rol ah,0x16
  4240d4:	xor    al,0xc2
  4240d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240d7:	push   ecx
  4240d8:	outs   dx,BYTE PTR ds:[esi]
  4240d9:	mov    edi,0x45c27282
  4240de:	out    0x3d,eax
  4240e0:	sbb    DWORD PTR [ebx+eax*2-0x60],0x36f1e0b1
  4240e8:	or     ebx,DWORD PTR [ecx-0x70]
  4240eb:	adc    bl,BYTE PTR [ebp-0x3c9c94fa]
  4240f1:	lds    ecx,FWORD PTR [edi-0x4b]
  4240f4:	sti    
  4240f5:	mov    eax,0xcef4a6a2
  4240fa:	aaa    
  4240fb:	add    al,0x87
  4240fd:	leave  
  4240fe:	stos   BYTE PTR es:[edi],al
  4240ff:	adc    eax,0xed244dea
  424104:	pop    es
  424105:	shr    DWORD PTR [ebx+0x60],1
  424108:	outs   dx,BYTE PTR ds:[esi]
  424109:	dec    edx
  42410a:	jmp    0x424124
  42410c:	add    al,0x29
  42410e:	adc    dh,BYTE PTR [ebx-0x16012e3d]
  424114:	adc    BYTE PTR [ebp-0x4f52856],dh
  42411a:	add    eax,ebp
  42411c:	xchg   ecx,eax
  42411d:	lods   al,BYTE PTR ds:[esi]
  42411e:	mov    ecx,0x1934beeb
  424123:	mov    ebp,0x33c838ab
  424128:	pop    ebp
  424129:	cmp    eax,0xbf16c10
  42412e:	ret    
  42412f:	ins    DWORD PTR es:[edi],dx
  424130:	sub    BYTE PTR [ecx-0x22],ah
  424133:	mov    ds:0xbd1097f6,eax
  424138:	jbe    0x4240f4
  42413a:	out    0xb6,al
  42413c:	push   0x62
  42413e:	and    DWORD PTR [ebp-0x51],ecx
  424141:	fsub   DWORD PTR [edx+ebp*4-0x7a5d47b5]
  424148:	pushf  
  424149:	clc    
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a737
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a73f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a743
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429fef
  4242e2:	mov    ecx,DWORD PTR ds:0x429ff7
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a747
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429fdb
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	pop    edi
  424455:	pop    ebp
  424456:	loope  0x4243de
  424458:	repnz fistp DWORD PTR [esi]
  42445b:	dec    ebx
  42445c:	mov    eax,ds:0x34c28f18
  424461:	dec    ebp
  424462:	pop    ebp
  424463:	pop    esi
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
